[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "hello NDC you guys just had lunch and I",
    "start": "3240",
    "end": "8530"
  },
  {
    "text": "get to try to keep you awake wonderful thank you so much for coming uh let's",
    "start": "8530",
    "end": "15220"
  },
  {
    "text": "get started let's not mess around my name is Kathleen Dollard I'm from Denver Colorado in the United States and the",
    "start": "15220",
    "end": "22210"
  },
  {
    "text": "United States West to the Mississippi goes up like a table that's leaning and then it hits the Rocky Mountains most",
    "start": "22210",
    "end": "27759"
  },
  {
    "text": "people in Colorado liver right in that space between the mountains right next to the mountains and so that's where I",
    "start": "27759",
    "end": "34149"
  },
  {
    "text": "live as well so I want to look at the abstract maybe read the abstract like",
    "start": "34149",
    "end": "40300"
  },
  {
    "start": "36000",
    "end": "153000"
  },
  {
    "text": "one person here raise your hand please just lie to me tell me that you read it okay I work hard on this I actually if",
    "start": "40300",
    "end": "47500"
  },
  {
    "text": "you think about speaking of great ideas to actually like write your abstract as though people are going to read it because it both makes conference",
    "start": "47500",
    "end": "53740"
  },
  {
    "text": "organisers happy and then when you go write your talk you know what you're going to talk about which is totally awesome see I'm using a word here that's",
    "start": "53740",
    "end": "61090"
  },
  {
    "text": "quite unusual in English which is when some when some you're the winsome smile",
    "start": "61090",
    "end": "66520"
  },
  {
    "text": "a functional languages thing so that just means it's nice its pleasant its attractive and it's also shout out to an",
    "start": "66520",
    "end": "74229"
  },
  {
    "text": "American blues singer one of my favorite songs is when some smile by Chris Miller so if you all go and download a Chris",
    "start": "74229",
    "end": "80530"
  },
  {
    "text": "from other song then we'll mess up all that big gob of stuff on Spotify so",
    "start": "80530",
    "end": "85920"
  },
  {
    "text": "alright okay so another thing I want to say here is highlighted there is some",
    "start": "85920",
    "end": "91600"
  },
  {
    "text": "stuff about actually seeing a lot of code change that'll be a weak-eyed minimal because of the time frame that",
    "start": "91600",
    "end": "96609"
  },
  {
    "text": "we're in you will see code change and you will see some final code that's going to give you a big picture of",
    "start": "96609",
    "end": "102609"
  },
  {
    "text": "what's going on and finally I want to clarify that this talk applies to doing",
    "start": "102609",
    "end": "109779"
  },
  {
    "text": "things you could have done from c-sharp 3 and beyond there are new ways of thinking and so there are things that",
    "start": "109779",
    "end": "115899"
  },
  {
    "text": "most people aren't doing today so I think you'll be excited at the new ideas but these are not new features so the C",
    "start": "115899",
    "end": "123909"
  },
  {
    "text": "sharp 7 features sometimes gets referred to as sort of functionally but I don't",
    "start": "123909",
    "end": "129849"
  },
  {
    "text": "think they're quite there yet in future versions were likely to see some great functional stuff but right now the stuff",
    "start": "129849",
    "end": "136240"
  },
  {
    "text": "I'm going to talk about certain c-sharp 3 can anybody tell me why C sharp 3 matters what do we",
    "start": "136240",
    "end": "143440"
  },
  {
    "text": "get in c-sharp 3 lambda is in link and its lambdas that I care about although",
    "start": "143440",
    "end": "148960"
  },
  {
    "text": "I'll also mention link but link is an example of what what we can do so",
    "start": "148960",
    "end": "155010"
  },
  {
    "text": "c-sharp less functional techniques and the great thing about where we're at today's world is there's a lot of",
    "start": "155010",
    "end": "161860"
  },
  {
    "text": "languages taking different approaches to functional ideas so if you look at",
    "start": "161860",
    "end": "166990"
  },
  {
    "text": "something like Haskell on one extreme that's very strict it's very it's so functional that for a long time it",
    "start": "166990",
    "end": "174610"
  },
  {
    "text": "couldn't do anything real and that means literally it couldn't do anything real and then we come across a spectrum to",
    "start": "174610",
    "end": "182020"
  },
  {
    "text": "some great languages like f-sharp that meld two functional language work with",
    "start": "182020",
    "end": "187540"
  },
  {
    "text": "the the underlying dotnet framework or in the case of Scala the underlying Java framework so we've got this range of",
    "start": "187540",
    "end": "195010"
  },
  {
    "text": "things going on we see shops it's is this incredibly solid underlying",
    "start": "195010",
    "end": "200590"
  },
  {
    "text": "language platform and ecosystem that most of you are probably already",
    "start": "200590",
    "end": "206800"
  },
  {
    "text": "familiar with what we can do is we can take that platform take that knowledge you have and stretch it in functional",
    "start": "206800",
    "end": "214600"
  },
  {
    "text": "ways and that's what this talk is all about it but to start I want to talk",
    "start": "214600",
    "end": "220060"
  },
  {
    "text": "about some functional ideas just because they're scary words so let's start out",
    "start": "220060",
    "end": "227260"
  },
  {
    "start": "223000",
    "end": "250000"
  },
  {
    "text": "with a slaying the Dragons of a couple of ideas that are very simple but you've",
    "start": "227260",
    "end": "232989"
  },
  {
    "text": "probably only heard of them in like weird ways where you were going seeing what's that lots of s they'll be one or",
    "start": "232989",
    "end": "239290"
  },
  {
    "text": "two F involved here today to this talk first about currying currying oh my gosh",
    "start": "239290",
    "end": "245350"
  },
  {
    "text": "that doesn't mean going down to the corner it to get some dinner it means to actually do this Oh long definition from",
    "start": "245350",
    "end": "252940"
  },
  {
    "text": "Wikipedia oh my head hurts maybe we could put that into like some sort of a representation yeah so F true coma 42",
    "start": "252940",
    "end": "263640"
  },
  {
    "text": "can change to F G of 42 and that's what all that all said and that doesn't help",
    "start": "263640",
    "end": "269020"
  },
  {
    "text": "you very much but let's look at that c-sharp code because this is going to help you understand what currying means to you",
    "start": "269020",
    "end": "276219"
  },
  {
    "text": "now there are people in the world that do provable algorithms and far out their stuff and I can't wait til they get",
    "start": "276219",
    "end": "283179"
  },
  {
    "text": "further and we can use that more but right now today what we care about on currying is it lets you add more intent",
    "start": "283179",
    "end": "290499"
  },
  {
    "text": "and more understanding to your code so in that first one get by ID true what",
    "start": "290499",
    "end": "295539"
  },
  {
    "text": "the heck does true mean we've made it more clear by using name parameter in the second one but it still is not as",
    "start": "295539",
    "end": "303489"
  },
  {
    "text": "clear as that third one where you can't go on the third one says the intent I don't care how you know what is active",
    "start": "303489",
    "end": "310749"
  },
  {
    "text": "and not active but just give me this ID if it's active so the third one which is",
    "start": "310749",
    "end": "316029"
  },
  {
    "text": "currying which says we will take something with two parameters and change it to something with one so caring would",
    "start": "316029",
    "end": "322599"
  },
  {
    "text": "say we'll take three two two two one but this is the idea behind curring and you can use it you probably do use it today",
    "start": "322599",
    "end": "329259"
  },
  {
    "text": "to add intent second thing I want to talk about is immutability Oh everybody",
    "start": "329259",
    "end": "335319"
  },
  {
    "start": "331000",
    "end": "410000"
  },
  {
    "text": "talks about immutability and I actually want to do this because I want to wave you off of something that I think people",
    "start": "335319",
    "end": "341499"
  },
  {
    "text": "are thinking too much about so immutability is great it says that once something is created you can never ever",
    "start": "341499",
    "end": "347679"
  },
  {
    "text": "change it that is a fantastic idea in the right place so we when we consider",
    "start": "347679",
    "end": "355149"
  },
  {
    "text": "our systems we need to look across a broad swath of the application if you go",
    "start": "355149",
    "end": "360699"
  },
  {
    "text": "into your application you say oh I want that one to be immutable and that one oh well this is new and that one's old so",
    "start": "360699",
    "end": "366729"
  },
  {
    "text": "this will be immutable and that one won't be that doesn't help you in fact it's probably just going to make a mess of your application so when you consider",
    "start": "366729",
    "end": "373929"
  },
  {
    "text": "immutability look at doing that well you can attack a set of classes that are all doing",
    "start": "373929",
    "end": "379089"
  },
  {
    "text": "basically the same thing all of your domain classes all of your entity framework models all of something like",
    "start": "379089",
    "end": "385929"
  },
  {
    "text": "that this is going to be able to say all these things together I can make work this way although I said that wrong some",
    "start": "385929",
    "end": "392199"
  },
  {
    "text": "other models you could probably use but not any framework it actually needs those setters so partial mutability is not very",
    "start": "392199",
    "end": "399369"
  },
  {
    "text": "helpful be careful about that as you move towards immutability c-sharp six and seven each have features that",
    "start": "399369",
    "end": "407110"
  },
  {
    "text": "make that a little bit easier to do tail",
    "start": "407110",
    "end": "412149"
  },
  {
    "start": "410000",
    "end": "472000"
  },
  {
    "text": "call recursion o as a really scary phrase all that means is that we have an",
    "start": "412149",
    "end": "418809"
  },
  {
    "text": "array and we walk up to that array and we want to do something let's grab one item off of it usually off the back or",
    "start": "418809",
    "end": "425409"
  },
  {
    "text": "the front either one take one off and then let's do something on what's left and let's keep doing that till we get to",
    "start": "425409",
    "end": "431799"
  },
  {
    "text": "only one item and then let's build it back up now I'm not talking about child",
    "start": "431799",
    "end": "437379"
  },
  {
    "text": "car recursion because I want you to do it I'm talking about tail call recursion because I don't want you to do it and",
    "start": "437379",
    "end": "443619"
  },
  {
    "text": "the reason is that that doesn't work well and c-sharp because it's not optimized for it every time you do that",
    "start": "443619",
    "end": "450579"
  },
  {
    "text": "tail call it puts another item on the stack and that is probably not a good idea for a large array so my point on",
    "start": "450579",
    "end": "457809"
  },
  {
    "text": "this is to say you don't need to know all the features and things about",
    "start": "457809",
    "end": "464739"
  },
  {
    "text": "functional programming you shouldn't use some of them but there's a set of features that actually do make sense and",
    "start": "464739",
    "end": "473550"
  },
  {
    "start": "472000",
    "end": "504000"
  },
  {
    "text": "this is one of them higher-order functions oh what a big long way to say",
    "start": "473550",
    "end": "479429"
  },
  {
    "text": "write a method that either takes a delegate as a parameter or returns a",
    "start": "479429",
    "end": "485919"
  },
  {
    "text": "delegate from itself and I'll talk more about what delegates are in a little bit many of you have a general idea that",
    "start": "485919",
    "end": "492729"
  },
  {
    "text": "it's a safe function pointer so if a method can take a delegate then it's a",
    "start": "492729",
    "end": "499899"
  },
  {
    "text": "higher-order function I think you've already used some of those linked select",
    "start": "499899",
    "end": "506319"
  },
  {
    "start": "504000",
    "end": "549000"
  },
  {
    "text": "where or to buy all of those they are higher-order functions this is",
    "start": "506319",
    "end": "511409"
  },
  {
    "text": "tremendously powerful tool for you and writing your own as approach is what I",
    "start": "511409",
    "end": "516729"
  },
  {
    "text": "mean here writing your own here is a tremendously powerful tool it's greatly underutilized and this is what we got in",
    "start": "516729",
    "end": "523959"
  },
  {
    "text": "c-sharp 3 that lay the groundwork for this I will tell you it's taken me a few years to get some of these ideas to full",
    "start": "523959",
    "end": "531100"
  },
  {
    "text": "fruition the way you'll see today and c-sharp is great at this c-sharp is",
    "start": "531100",
    "end": "538049"
  },
  {
    "text": "extremely solid and handling delegates and working with being able to pass them to functions and evaluate them at a",
    "start": "538049",
    "end": "545350"
  },
  {
    "text": "later time this is fantastic this is what c-sharp does brilliantly",
    "start": "545350",
    "end": "550350"
  },
  {
    "start": "549000",
    "end": "597000"
  },
  {
    "text": "referential transparency only got two more here referential transparency is",
    "start": "551009",
    "end": "557980"
  },
  {
    "text": "that you can take a method call you take the method call and you can take the",
    "start": "557980",
    "end": "563470"
  },
  {
    "text": "parameters that you're passing to them you can bundle that all up and you can replace it with the return value so what",
    "start": "563470",
    "end": "570759"
  },
  {
    "text": "that says to people that do all that prove ability stuff is you can optimize",
    "start": "570759",
    "end": "576009"
  },
  {
    "text": "what that says to us is that we have a very important way to think about the",
    "start": "576009",
    "end": "581649"
  },
  {
    "text": "concept of purity purity is an idea that I want to go into a little bit because",
    "start": "581649",
    "end": "587799"
  },
  {
    "text": "it is very nuanced and it is more nuanced in our world than it is in a",
    "start": "587799",
    "end": "593199"
  },
  {
    "text": "world of strict functional programming like Haskell so at this point we have",
    "start": "593199",
    "end": "599859"
  },
  {
    "start": "597000",
    "end": "989000"
  },
  {
    "text": "been here for all of 10 whole minutes and you haven't seen code so we should fix that let's do it mo what's the",
    "start": "599859",
    "end": "607689"
  },
  {
    "text": "purpose of demos it's to show you more clearly something that you've already seen so I'm picked this picture because",
    "start": "607689",
    "end": "615100"
  },
  {
    "text": "this is where I was on Monday night I put this on Twitter and I said I had a fantastic walk to that waterfall a few",
    "start": "615100",
    "end": "623289"
  },
  {
    "text": "of you might see the waterfall maybe there's a waterfall so you need to this",
    "start": "623289",
    "end": "629829"
  },
  {
    "text": "is just a zoom in on this idea so let me come here to a set of code and the way",
    "start": "629829",
    "end": "637089"
  },
  {
    "text": "they set this room up I've not yet been able to go to the back to see whether or not this is a good size so when you do",
    "start": "637089",
    "end": "644919"
  },
  {
    "text": "that does that mean it's good or does that mean you would like it bigger I can",
    "start": "644919",
    "end": "651009"
  },
  {
    "text": "good ok good I'm going to leave it aside something to yell at me if they want it different okay so purity is the idea that a method",
    "start": "651009",
    "end": "660489"
  },
  {
    "text": "is always going to return the same thing given the same parameters not the same",
    "start": "660489",
    "end": "666610"
  },
  {
    "text": "scenario in the universe but the same parameters and also but nothing in the universe",
    "start": "666610",
    "end": "672990"
  },
  {
    "text": "will ever change the way what the values are returned so those are the two claims",
    "start": "672990",
    "end": "678720"
  },
  {
    "text": "of purity so with that let's talk through a few is this pure yes this is",
    "start": "678720",
    "end": "687390"
  },
  {
    "text": "the definition of purity okay this is absolutely pure now I have a challenge here because what would the opposite of",
    "start": "687390",
    "end": "694410"
  },
  {
    "text": "purity would be like impure not pure or something that's truly horrible and",
    "start": "694410",
    "end": "700740"
  },
  {
    "text": "there's nothing wrong with things not being pure it's just a concept that we",
    "start": "700740",
    "end": "705990"
  },
  {
    "text": "want to understand so we can pull apart the apps' parts of our application that are pure",
    "start": "705990",
    "end": "711540"
  },
  {
    "text": "from the parts that are not let's do another one give an x and y return z as",
    "start": "711540",
    "end": "720390"
  },
  {
    "text": "the summation of x and y is that pure or not pure it's pure fantastic okay so",
    "start": "720390",
    "end": "728060"
  },
  {
    "text": "let's do one more which is that one with a very very slight change a few more",
    "start": "728060",
    "end": "734040"
  },
  {
    "text": "here to do how about this one is that pure or not I heard yes",
    "start": "734040",
    "end": "740580"
  },
  {
    "text": "do I hear anything else I heard no I don't know I hear yes I don't know and that's a",
    "start": "740580",
    "end": "747240"
  },
  {
    "text": "totally reasonable thing to hear at this point because if we are working with the general concept of purity with the legal",
    "start": "747240",
    "end": "754860"
  },
  {
    "text": "definition what it means in Haskell what it means if you're doing approvable algorithms i said nothing in the",
    "start": "754860",
    "end": "761790"
  },
  {
    "text": "universe changed and something in the universe has changed the console has changed so this is something that is not",
    "start": "761790",
    "end": "769890"
  },
  {
    "text": "pure in the traditional sense in the legal leaves sense in the formal sense",
    "start": "769890",
    "end": "777140"
  },
  {
    "text": "but it is pure in what we care about and this is really important to us we're C",
    "start": "777140",
    "end": "784350"
  },
  {
    "text": "sharp developers we live in a pragmatic world of trying to get code written this",
    "start": "784350",
    "end": "791250"
  },
  {
    "text": "is what we live this is what we breathe this is what we care about is what matters so all the people that thought",
    "start": "791250",
    "end": "796590"
  },
  {
    "text": "yes they're going well as far as I care that is absolutely clear because I don't",
    "start": "796590",
    "end": "802050"
  },
  {
    "text": "care what gets written to the con and that's the world that you need to define within your teams when you're",
    "start": "802050",
    "end": "808529"
  },
  {
    "text": "using when you're using pure concepts you make your development better you",
    "start": "808529",
    "end": "814200"
  },
  {
    "text": "want to make sure your team agrees on a couple of pieces around purity and this is the key one okay",
    "start": "814200",
    "end": "821040"
  },
  {
    "text": "there's two I'll talk about the other one minute is it pure if you log in my",
    "start": "821040",
    "end": "827010"
  },
  {
    "text": "book it is absolutely still pure because it will not affect any of the evaluation",
    "start": "827010",
    "end": "833760"
  },
  {
    "text": "things that you would do any of the ways you think about the code and I would never ever ever want you to be fearful",
    "start": "833760",
    "end": "839730"
  },
  {
    "text": "of logging anybody here think they log enough raise your hand really high wave",
    "start": "839730",
    "end": "844980"
  },
  {
    "text": "it around will I give you applause so it's almost nobody feels like they are doing in a flogging now here's another",
    "start": "844980",
    "end": "852540"
  },
  {
    "text": "one which is the same thing I've no idea why's that one twice this one is the one I want is that pure no that is like the",
    "start": "852540",
    "end": "862770"
  },
  {
    "text": "definition of not pure it is affected by the state of the universe every single",
    "start": "862770",
    "end": "869370"
  },
  {
    "text": "seconds you get a new answer so that is absolutely not pure and what about this one",
    "start": "869370",
    "end": "875420"
  },
  {
    "text": "is that pure your quiet nobody wants to",
    "start": "875420",
    "end": "881700"
  },
  {
    "text": "give an answer it depends I heard the consultants answer thank you very much it depends it depends on whether foo is",
    "start": "881700",
    "end": "889890"
  },
  {
    "text": "pure foo in this case happens to be pure so foo is also pure and I try to come up",
    "start": "889890",
    "end": "899670"
  },
  {
    "text": "with an analogy for this because I don't want to say that impurity pollutes",
    "start": "899670",
    "end": "904709"
  },
  {
    "text": "purity because if we don't have impurity if we can't touch the world our apps",
    "start": "904709",
    "end": "910709"
  },
  {
    "text": "aren't interesting what we want to do is take the ideas of purity stack them up",
    "start": "910709",
    "end": "915959"
  },
  {
    "text": "in one spot understand what we mean by purity in that context only do the",
    "start": "915959",
    "end": "921779"
  },
  {
    "text": "things we're expecting to do no surprises and then let our other code also do its job and so rather than use",
    "start": "921779",
    "end": "929339"
  },
  {
    "text": "the idea of pollution or spreading or anything like that I thought about bee",
    "start": "929339",
    "end": "937050"
  },
  {
    "text": "I love beats bright-red wonderful beats have you ever cooked with beats you had",
    "start": "937050",
    "end": "944880"
  },
  {
    "text": "done anything with beats at everything that gets near the beat turns pink",
    "start": "944880",
    "end": "950750"
  },
  {
    "text": "everything turns pink or red or maroon or some beautiful color so it's like",
    "start": "950750",
    "end": "957089"
  },
  {
    "text": "that except a little more neutral because I think those beats are delicious purity and impurity are not",
    "start": "957089",
    "end": "963300"
  },
  {
    "text": "good and bad they're just different and when we pull them apart in our application then we're better able to",
    "start": "963300",
    "end": "969720"
  },
  {
    "text": "write our applications in a way that's maintainable and we'll be looking at more code so with that I want to go back",
    "start": "969720",
    "end": "978899"
  },
  {
    "text": "to slides and if any of you have questions you're going to have to wave your arms around and have people just",
    "start": "978899",
    "end": "984180"
  },
  {
    "text": "dress the idea down to the front because I can only see about thirty five of you in these lights okay so purity this is what we just",
    "start": "984180",
    "end": "990779"
  },
  {
    "start": "989000",
    "end": "996000"
  },
  {
    "text": "talked about no surprises he has already think about that with your code don't do surprises should",
    "start": "990779",
    "end": "997320"
  },
  {
    "start": "996000",
    "end": "1100000"
  },
  {
    "text": "indicate all possible input and output same input always returns results in the same output wonderful that's if your",
    "start": "997320",
    "end": "1003200"
  },
  {
    "text": "function we can do things with it control flow should be entirely predictable hey that's pretty good",
    "start": "1003200",
    "end": "1009820"
  },
  {
    "text": "here's a little nother little wrench in the works here that we have to talk",
    "start": "1009820",
    "end": "1016040"
  },
  {
    "text": "about and that is what about those nasty little exceptions can a pure method have",
    "start": "1016040",
    "end": "1023240"
  },
  {
    "text": "an exception I can a pure method be allowed to throw an exception strictly",
    "start": "1023240",
    "end": "1029569"
  },
  {
    "text": "speaking no strictly speaking no and what does that mean in net for us that",
    "start": "1029569",
    "end": "1037880"
  },
  {
    "text": "means that every single method to prove its purity has to do two things it has",
    "start": "1037880",
    "end": "1044750"
  },
  {
    "text": "to have a try-catch inside the method and then instead of throwing it has to wrap it up and return the value which is",
    "start": "1044750",
    "end": "1051679"
  },
  {
    "text": "not in fact the value you were expecting like an integer but is that value wrapped in a container what call that",
    "start": "1051679",
    "end": "1058070"
  },
  {
    "text": "container a result that says I succeeded and oh by the way here's the value now I",
    "start": "1058070",
    "end": "1063470"
  },
  {
    "text": "think that's a brilliant way to go across layers myself it's how I like to architect applications but can you even",
    "start": "1063470",
    "end": "1069230"
  },
  {
    "text": "imagine if everything method you ever wrote had to do that",
    "start": "1069230",
    "end": "1074300"
  },
  {
    "text": "that would be insanity so we're going to use net exceptions it's very hard not to",
    "start": "1074300",
    "end": "1080630"
  },
  {
    "text": "use net exceptions but we have to understand that this is a second way that when we talk about purity we do not",
    "start": "1080630",
    "end": "1088100"
  },
  {
    "text": "mean it in the same way that a hardcore formal usage of it would mean I'll",
    "start": "1088100",
    "end": "1095600"
  },
  {
    "text": "mention I think right here that there are got that okay it's not there either",
    "start": "1095600",
    "end": "1103310"
  },
  {
    "start": "1100000",
    "end": "1153000"
  },
  {
    "text": "side it comes up later cloth sight the big library of videos has two extremely",
    "start": "1103310",
    "end": "1109280"
  },
  {
    "text": "good videos if you search for functional techniques of c-sharp or something very",
    "start": "1109280",
    "end": "1115100"
  },
  {
    "text": "similar to that you will see two different talks they both would be a great follow-on to this talk one of them",
    "start": "1115100",
    "end": "1122420"
  },
  {
    "text": "I believe it's lattimer's talk talks about the exceptional and non",
    "start": "1122420",
    "end": "1128030"
  },
  {
    "text": "exceptional cases so he talks about exceptions are okay impure methods",
    "start": "1128030",
    "end": "1133910"
  },
  {
    "text": "because it's the exceptional situation well that's a fine explanation except it doesn't hold water in the the strict",
    "start": "1133910",
    "end": "1141320"
  },
  {
    "text": "formal sense if you're in high school writing math papers that's not going to fly it will fly for c-sharp as a way you",
    "start": "1141320",
    "end": "1147740"
  },
  {
    "text": "can think about this all right there's a lot of code I mean a lot of slides we",
    "start": "1147740",
    "end": "1155060"
  },
  {
    "start": "1153000",
    "end": "1163000"
  },
  {
    "text": "have to do a little bit more slides before we jump in a code I'm rushing a little bit because this talk is 75",
    "start": "1155060",
    "end": "1161840"
  },
  {
    "text": "minute talk squeeze just a little bit let's talk more about delegates I told you I would do this and I would imagine",
    "start": "1161840",
    "end": "1167990"
  },
  {
    "start": "1163000",
    "end": "1315000"
  },
  {
    "text": "that if I took a poll you would all say you know something about what a delegate is which is wonderful because you're",
    "start": "1167990",
    "end": "1174260"
  },
  {
    "text": "right about you're almost certainly right about what you currently think of as a delegate I'm just going to flush",
    "start": "1174260",
    "end": "1180200"
  },
  {
    "text": "that idea out a little bit further so to start with they are types of function",
    "start": "1180200",
    "end": "1185690"
  },
  {
    "text": "pointers that's the way we talked about them in the year 2000 when there were unsafe function pointers but now that's",
    "start": "1185690",
    "end": "1192770"
  },
  {
    "text": "more the way of the world so we have a type safe function pointer which allows us to take a piece of code and hold it",
    "start": "1192770",
    "end": "1199910"
  },
  {
    "text": "as data and I actually prefer myself to think of it that way so code is data when it's on the screen",
    "start": "1199910",
    "end": "1206900"
  },
  {
    "text": "in front of you in ASCII characters it's a data when you pass it around as a delegate it's the ability to run code at",
    "start": "1206900",
    "end": "1215390"
  },
  {
    "text": "some future moment so you pass this around it's very natural now in our rule because javascript is full of this and",
    "start": "1215390",
    "end": "1222740"
  },
  {
    "text": "other programs even in Java now supports it and so now we've got the idea of",
    "start": "1222740",
    "end": "1228230"
  },
  {
    "text": "delegates all over the place c-sharp is still a beautiful implementation of this and it does it in",
    "start": "1228230",
    "end": "1233480"
  },
  {
    "text": "three ways one of which is probably pretty much obsolete anonymous methods",
    "start": "1233480",
    "end": "1239630"
  },
  {
    "text": "are just another way to do lambdas with a whole lot more code around it and I wouldn't bother so we'll primarily look at the idea of a",
    "start": "1239630",
    "end": "1246380"
  },
  {
    "text": "method that has no parentheses which you run into when you get that beautiful",
    "start": "1246380",
    "end": "1251470"
  },
  {
    "text": "compiler error that says you can't add an integer to a method group and you're",
    "start": "1251470",
    "end": "1256880"
  },
  {
    "text": "regret it's because you forgot the parentheses so that's one way to build a",
    "start": "1256880",
    "end": "1261950"
  },
  {
    "text": "delegate and that is a simple delegate it's a normal delegate Al and is actually a lambda lambda is actually a",
    "start": "1261950",
    "end": "1268370"
  },
  {
    "text": "thing and it's different in a couple of ways that I won't go deeply into but you",
    "start": "1268370",
    "end": "1273710"
  },
  {
    "text": "can explore the idea of closures is the distinction right there lambdas can capture values now we aren't generic",
    "start": "1273710",
    "end": "1283100"
  },
  {
    "text": "delegates which means we have strongly-typed delegates we are not in a JavaScript world we are in a different",
    "start": "1283100",
    "end": "1288920"
  },
  {
    "text": "world I said that c-sharp handles delegates brilliantly it's a beautiful basis on which to build",
    "start": "1288920",
    "end": "1295700"
  },
  {
    "text": "the kind of thinking I'm going to show you in a minute and code generics are a",
    "start": "1295700",
    "end": "1301400"
  },
  {
    "text": "big part of that it's a critical part so I want to make sure that a few little methods don't look too horrible to you",
    "start": "1301400",
    "end": "1309520"
  },
  {
    "text": "but before I get there we've got this thing about the multi-class delegate you don't care about that that's just what's",
    "start": "1309520",
    "end": "1314930"
  },
  {
    "text": "going on under the hood these will mean the same if I say that we're delegate if I say the word lambda I will try not to",
    "start": "1314930",
    "end": "1321980"
  },
  {
    "start": "1315000",
    "end": "1330000"
  },
  {
    "text": "say lambda expression I'll show you in a minute waters a little bit of a distinction there and F if I show it on",
    "start": "1321980",
    "end": "1328550"
  },
  {
    "text": "screen means the same thing the code fragments can be stored to execute later",
    "start": "1328550",
    "end": "1334520"
  },
  {
    "start": "1330000",
    "end": "1587000"
  },
  {
    "text": "their code is data you've seen this before funk of tea fantastic funk of tea is very boring",
    "start": "1334520",
    "end": "1341240"
  },
  {
    "text": "what is funk of tea to Frank you've te can return an integer like 42 or the",
    "start": "1341240",
    "end": "1346520"
  },
  {
    "text": "time on your system which is it can do a pure method can be handed of something",
    "start": "1346520",
    "end": "1353000"
  },
  {
    "text": "secure method which is very very simple because all I can do is return one thing being passed to nothing we have",
    "start": "1353000",
    "end": "1359900"
  },
  {
    "text": "different versions of this T t1 t2 oh my gosh please don't write code like it",
    "start": "1359900",
    "end": "1364970"
  },
  {
    "text": "looks like this please I am using numbers because I have no meaningful",
    "start": "1364970",
    "end": "1370010"
  },
  {
    "text": "words put in there when we start looking at code you'll see that I make a point of T result T data t context T whatever",
    "start": "1370010",
    "end": "1378220"
  },
  {
    "text": "this is the more interesting version which is t1 and t2 where t1 is a",
    "start": "1378220",
    "end": "1383510"
  },
  {
    "text": "parameter that's passed then t2 is what you're given back it's always the last",
    "start": "1383510",
    "end": "1389150"
  },
  {
    "text": "one is always what you're given back so if it's T t1 - 2 - 3 - 4 - 4 so it's",
    "start": "1389150",
    "end": "1396260"
  },
  {
    "text": "return n t1 the first 3 or 4 I can't remember how I counted was are going to",
    "start": "1396260",
    "end": "1402140"
  },
  {
    "text": "be the parameters here the parameters passed something gets returned and going when would you ever do this T t1 t2 that",
    "start": "1402140",
    "end": "1409610"
  },
  {
    "text": "seems too deep that sounds too crazy but remember I talked earlier about the fact that you at least across layers when",
    "start": "1409610",
    "end": "1417410"
  },
  {
    "text": "you're doing functional thinking and you're working on purity and you're working on making your systems be very",
    "start": "1417410",
    "end": "1423500"
  },
  {
    "text": "predictable you may want to have a container we'll call it a result that",
    "start": "1423500",
    "end": "1428630"
  },
  {
    "text": "container contains a couple of things it contains the value you want across a pass across that layer boundary or",
    "start": "1428630",
    "end": "1435830"
  },
  {
    "text": "between those two methods it contains whether success happens and it contains information about the failure so that up",
    "start": "1435830",
    "end": "1443540"
  },
  {
    "text": "the stack somebody can figure out how to report that whether it's logging or something else so while T 1 T 2 T t1 t2",
    "start": "1443540",
    "end": "1452750"
  },
  {
    "text": "looks horrible not so much when we say it's a task of a data result of a list",
    "start": "1452750",
    "end": "1458870"
  },
  {
    "text": "of a student which by the way is T 1 T 2 T 3 T 4 this for there okay so I hope",
    "start": "1458870",
    "end": "1467720"
  },
  {
    "text": "that as you work with functional ideas you get what this is completely comfortable as comfortable as",
    "start": "1467720",
    "end": "1473690"
  },
  {
    "text": "it would be for you to have a function that have four parameters just like a function or a method with four",
    "start": "1473690",
    "end": "1479690"
  },
  {
    "text": "parameters you want as many as you need and no more so as you add parameters",
    "start": "1479690",
    "end": "1486890"
  },
  {
    "text": "type parameters - generics like this you will get a headache eventually but I do",
    "start": "1486890",
    "end": "1492500"
  },
  {
    "text": "think out to about four you want to be quite comfortable with in the same way that you're quite comfortable with a",
    "start": "1492500",
    "end": "1497870"
  },
  {
    "text": "method that had four parameters that",
    "start": "1497870",
    "end": "1503840"
  },
  {
    "text": "don't have any questions somebody yell if you've got a question no questions",
    "start": "1503840",
    "end": "1508850"
  },
  {
    "text": "all right this is a sum of four lambda in c-sharp in if I how many VB",
    "start": "1508850",
    "end": "1515600"
  },
  {
    "text": "developers V V does all of this with more verbosity so if your VB developer",
    "start": "1515600",
    "end": "1520910"
  },
  {
    "text": "and you want help kind of translating these ideas to VB let me know in c-sharp this tells us that we're going to create",
    "start": "1520910",
    "end": "1527000"
  },
  {
    "text": "a lambda expression and here is the common way that we would do that which",
    "start": "1527000",
    "end": "1532010"
  },
  {
    "text": "is a func this one has two parameters you pass something in and you get something back in this case they happen",
    "start": "1532010",
    "end": "1538280"
  },
  {
    "text": "to both be in I'm passing in an integer and returning to greater than that",
    "start": "1538280",
    "end": "1543500"
  },
  {
    "text": "integer pretty simple we're used to seeing this there's two other syntaxes",
    "start": "1543500",
    "end": "1548570"
  },
  {
    "text": "that you see slightly less often some people aren't familiar with which is no parameters and multiple parameters so if",
    "start": "1548570",
    "end": "1555800"
  },
  {
    "text": "you haven't seen that syntax there you go because you'll see it again in code",
    "start": "1555800",
    "end": "1561370"
  },
  {
    "text": "so I said that I will try not to say lambda expression although we have all gotten very careless about doing that we",
    "start": "1561460",
    "end": "1568730"
  },
  {
    "text": "say lambda expression when in fact we just want a lambda meaning that it may",
    "start": "1568730",
    "end": "1573980"
  },
  {
    "text": "either be a lambda delegate or an expression and you're going well I didn't know there was a difference who",
    "start": "1573980",
    "end": "1579290"
  },
  {
    "text": "cares whether there's a difference and I think it's actually I think it's significant to understand this and it",
    "start": "1579290",
    "end": "1586160"
  },
  {
    "text": "gives me an opportunity to show you something which f you haven't seen I think you should get quite excited to",
    "start": "1586160",
    "end": "1591320"
  },
  {
    "start": "1587000",
    "end": "1647000"
  },
  {
    "text": "them so I'm going to go to the class tracker repository in the sample and I",
    "start": "1591320",
    "end": "1596930"
  },
  {
    "text": "will post this sample I am working towards making this a reference app on",
    "start": "1596930",
    "end": "1602230"
  },
  {
    "text": "github I'm not there yet don't have enough written about it but if you want to help me with that please",
    "start": "1602230",
    "end": "1607760"
  },
  {
    "text": "let me know but right now I will give you this code I'm going to right click",
    "start": "1607760",
    "end": "1612770"
  },
  {
    "text": "on the class tracker repository and I'm going to select initialize interactive",
    "start": "1612770",
    "end": "1618050"
  },
  {
    "text": "with project when I click that it's going to wear for a minute because it has lots of work to do and I will say",
    "start": "1618050",
    "end": "1624800"
  },
  {
    "text": "that visual studio is slightly less stable with the interactive window open and i have not tracked down a bug to",
    "start": "1624800",
    "end": "1631010"
  },
  {
    "text": "report yet but if it crashes we'll just start over okay so it's set up a bunch",
    "start": "1631010",
    "end": "1637700"
  },
  {
    "text": "of is taken the references that I have in my project and put them into this window so that I'm ready to go and that",
    "start": "1637700",
    "end": "1644570"
  },
  {
    "text": "does include the project I right clicked on so right here I'm going to say using",
    "start": "1644570",
    "end": "1650050"
  },
  {
    "text": "because I want to get to that project and so kajan I still think it's a good",
    "start": "1650050",
    "end": "1655910"
  },
  {
    "text": "idea for us to have our first part of our namespace be something quite unique I own that domain so class tracker is",
    "start": "1655910",
    "end": "1662570"
  },
  {
    "text": "the name of this overall application I'm working on and I'm going to say I have",
    "start": "1662570",
    "end": "1668600"
  },
  {
    "text": "an access to the domain so I'm going to use the domain now I have a using statement and it's just like any other",
    "start": "1668600",
    "end": "1674360"
  },
  {
    "text": "using statements you've done so now I can say VAR x equals new course and I",
    "start": "1674360",
    "end": "1682760"
  },
  {
    "text": "owe it just needed arguments I'm not going to fix that and we're still good",
    "start": "1682760",
    "end": "1688040"
  },
  {
    "text": "in the back on the side yell out if you have a problem we're good back there great okay so now what I want to do",
    "start": "1688040",
    "end": "1694340"
  },
  {
    "text": "instead is I'm going to save our funk funk not var just funk funk of course",
    "start": "1694340",
    "end": "1702730"
  },
  {
    "text": "comma int now I can't do a VAR here for a couple of reasons that will make sense",
    "start": "1702730",
    "end": "1708470"
  },
  {
    "text": "because expressions are going to be expressions or funks depend on what they're what they're assigned to a funk",
    "start": "1708470",
    "end": "1714980"
  },
  {
    "text": "is a delegate so I'm going to say that I need to give it a name why don't we call it F that'll be fine equals and now I'm",
    "start": "1714980",
    "end": "1721460"
  },
  {
    "text": "going to use a lambda I'm just I'm going",
    "start": "1721460",
    "end": "1727310"
  },
  {
    "text": "to create a lambda in this case it's a delegate that takes X anything would",
    "start": "1727310",
    "end": "1732620"
  },
  {
    "text": "work there that's the course and returns X dot ID",
    "start": "1732620",
    "end": "1737830"
  },
  {
    "text": "so all we just all I did was create and that extra little red should go away it",
    "start": "1737830",
    "end": "1744309"
  },
  {
    "text": "was a mistake so all I've done is created a delegate that returns the ID when passed the course this is the kind",
    "start": "1744309",
    "end": "1750850"
  },
  {
    "text": "of thing that you might do in a select in a link statement but what I want to",
    "start": "1750850",
    "end": "1756129"
  },
  {
    "text": "do here is make another one in fact I'm just going to do alternate up arrow here and I'm going to add a be lazy do that",
    "start": "1756129",
    "end": "1762909"
  },
  {
    "text": "first and go to home I have about six keyboards and so it's always hard to find the keys so I'll just do it Mouse",
    "start": "1762909",
    "end": "1769929"
  },
  {
    "text": "there we go and now I'm going to type expression a func what just meant longer that should",
    "start": "1769929",
    "end": "1776109"
  },
  {
    "text": "not have been that should have been it's not there I'm trying to save too much",
    "start": "1776109",
    "end": "1782470"
  },
  {
    "text": "time get rid of that you knew where it belonged right here okay so now that should be",
    "start": "1782470",
    "end": "1789850"
  },
  {
    "text": "happy and I'm going to hits exactly the same thing but one case of a func in one case I have expression so now and",
    "start": "1789850",
    "end": "1796749"
  },
  {
    "text": "remember I'm just a visual studio I'm just playing and I can copy this code by the way into an application so if you",
    "start": "1796749",
    "end": "1803619"
  },
  {
    "text": "would like to especially old FoxPro developers that did this all the time if you'd like to write parts of your",
    "start": "1803619",
    "end": "1808629"
  },
  {
    "text": "application here in this interactive window you can then copy it and put it into your application and the copy takes",
    "start": "1808629",
    "end": "1815169"
  },
  {
    "text": "off the disk copy code and it takes off the left little funny angle thing okay",
    "start": "1815169",
    "end": "1822489"
  },
  {
    "text": "so now what I want to do is I want oh I I messed something up here and so I'm going to do up arrow twice and so",
    "start": "1822489",
    "end": "1830559"
  },
  {
    "text": "that resets F so f is was assigned to the first thing I accidentally assigned it to the second I've reassigned it to",
    "start": "1830559",
    "end": "1837190"
  },
  {
    "text": "the first which is what I want I want to come to come to this this one and I do",
    "start": "1837190",
    "end": "1842950"
  },
  {
    "text": "not want it to be called F I want it to be called expr okay that way you can tell the difference between them that",
    "start": "1842950",
    "end": "1848470"
  },
  {
    "text": "was my intent I was just made a mistake okay now you're all curious about this what's F",
    "start": "1848470",
    "end": "1854830"
  },
  {
    "text": "and what's expression okay are they the same they're not the same they're different they're different because",
    "start": "1854830",
    "end": "1860950"
  },
  {
    "text": "expression has more information it is not yet compiled into a delegate it is the code it is a tree of the code to",
    "start": "1860950",
    "end": "1867879"
  },
  {
    "text": "familiar with Rozlyn it is not rosin it is something kind of like Rosalind if you took a compiler course in",
    "start": "1867879",
    "end": "1873640"
  },
  {
    "text": "university and you know what the syntax tree is you can kind of think of it as a syntax tree although there's a little",
    "start": "1873640",
    "end": "1878770"
  },
  {
    "text": "bit of semantics tone in there so the reason that I wanted to walk through this so that you have a better handle on",
    "start": "1878770",
    "end": "1885880"
  },
  {
    "text": "expression versus delegate is because with the expression I can do fun things it has a body hmm a body actually can be",
    "start": "1885880",
    "end": "1894790"
  },
  {
    "text": "of different types so I'm going to ask it what type it is and show you sort of a little sneaky thing right here there's",
    "start": "1894790",
    "end": "1902290"
  },
  {
    "text": "something sneaky right here which is you cannot find property expression you can go search on the internet and you will",
    "start": "1902290",
    "end": "1907960"
  },
  {
    "text": "hopefully find a stack overflow question that says to use member expression its parent instead because property",
    "start": "1907960",
    "end": "1913810"
  },
  {
    "text": "expression is hidden so let's let's do that let's say X PR that body as member",
    "start": "1913810",
    "end": "1922660"
  },
  {
    "text": "expression and let's just wrap all that in parenthesis so we get the result and",
    "start": "1922660",
    "end": "1928990"
  },
  {
    "text": "now from that we now have a member expression so we now have a member and a",
    "start": "1928990",
    "end": "1935290"
  },
  {
    "text": "member has a name from that we can now get oops yeah I don't have a semicolon",
    "start": "1935290",
    "end": "1943060"
  },
  {
    "text": "at the end if there's a semicolon its executed if there's no semicolon its displayed for you so now I can get ID as",
    "start": "1943060",
    "end": "1950230"
  },
  {
    "text": "a string from the original expression okay now why do you care about this you",
    "start": "1950230",
    "end": "1956800"
  },
  {
    "text": "care for a couple of different reasons one of which is now that I can understand that code you can actually",
    "start": "1956800",
    "end": "1963060"
  },
  {
    "text": "understand it as a tree as ax is something real I can compile it and",
    "start": "1963060",
    "end": "1969250"
  },
  {
    "text": "create a delegate I can also hand it to a different language and there is one",
    "start": "1969250",
    "end": "1974920"
  },
  {
    "text": "language we care about tremendously that we'd be able to hand it to and that's T",
    "start": "1974920",
    "end": "1980590"
  },
  {
    "text": "sequel this is why link does the magic it does because link takes this or",
    "start": "1980590",
    "end": "1986500"
  },
  {
    "text": "something very long and ugly that would be much harder to show you and it turns",
    "start": "1986500",
    "end": "1991660"
  },
  {
    "text": "it into a sequel statement it says I know what you mean you want me to say",
    "start": "1991660",
    "end": "1997750"
  },
  {
    "text": "select ID from course and this is how it",
    "start": "1997750",
    "end": "2002760"
  },
  {
    "text": "gets there you can do other things with this and when I show you some of the generic",
    "start": "2002760",
    "end": "2007890"
  },
  {
    "text": "hierarchies I have then a few of the tricks in there use exactly this so you can use it some",
    "start": "2007890",
    "end": "2014670"
  },
  {
    "text": "of you may know that razer uses this so the razor when you put a statement like this out and razor that's what it's",
    "start": "2014670",
    "end": "2020850"
  },
  {
    "text": "using I can also I can also compile it and then I can invoke it any questions",
    "start": "2020850",
    "end": "2028260"
  },
  {
    "text": "on that okay so let's go back to slides",
    "start": "2028260",
    "end": "2036809"
  },
  {
    "text": "for a minute link link we already said this select order by our higher-order",
    "start": "2036809",
    "end": "2042720"
  },
  {
    "text": "functions pure because they return a new list there are some list methods that are not pure because they alter the list",
    "start": "2042720",
    "end": "2049440"
  },
  {
    "text": "it was probably a bad design would probably be done differently today because there's no real value of",
    "start": "2049440",
    "end": "2054840"
  },
  {
    "text": "changing that list in place lambdas are not free and the reason that I talked to",
    "start": "2054840",
    "end": "2060960"
  },
  {
    "text": "you earlier about the difference between taking a method and removing the",
    "start": "2060960",
    "end": "2066360"
  },
  {
    "text": "parentheses taking a method I should learn to do this taking a method and removing their parentheses that is going",
    "start": "2066360",
    "end": "2073860"
  },
  {
    "text": "to give you a true delegate it's an old style delegate which if you've been doing dotnet for a long time back in the",
    "start": "2073860",
    "end": "2080190"
  },
  {
    "text": "day to build a delegate was a lot of work we had to create a special classy delegating thing for it this does all of",
    "start": "2080190",
    "end": "2088138"
  },
  {
    "text": "that automatically for you but it does not create the extra overhead that's going to be involved in the lambda now a",
    "start": "2088139",
    "end": "2095638"
  },
  {
    "text": "lambda delegate has very low overhead but it's not zero so almost and perhaps",
    "start": "2095639",
    "end": "2103500"
  },
  {
    "text": "everyone in this room doesn't care about that overhead but a few of you may care",
    "start": "2103500",
    "end": "2110640"
  },
  {
    "text": "if anyone here works on the.net framework I would like them to care very",
    "start": "2110640",
    "end": "2117180"
  },
  {
    "text": "much if you work on Rosalyn which is our compiler I like you to care very much",
    "start": "2117180",
    "end": "2123060"
  },
  {
    "text": "because these are massively compute intensive operations that we as millions",
    "start": "2123060",
    "end": "2129120"
  },
  {
    "text": "of developers need to work very very well and very very fast so if that's the world you work in or something similar",
    "start": "2129120",
    "end": "2135930"
  },
  {
    "text": "to that or your doing you really care about microseconds nanoseconds occasionally",
    "start": "2135930",
    "end": "2144289"
  },
  {
    "text": "it's I don't know you could even get to a millisecond I don't think you could that very small overhead does exist and",
    "start": "2144289",
    "end": "2149869"
  },
  {
    "text": "so if you were to do a very tight loop then you might notice it for almost",
    "start": "2149869",
    "end": "2155900"
  },
  {
    "text": "every single person in this room you could not find the difference no matter how hard you tried because you're going",
    "start": "2155900",
    "end": "2162200"
  },
  {
    "text": "out to a database and that takes half an hour and it doesn't actually take half an hour but from the point of view of",
    "start": "2162200",
    "end": "2167749"
  },
  {
    "text": "the day of the computer code it does for comparing to a microsecond going to the",
    "start": "2167749",
    "end": "2173990"
  },
  {
    "text": "database is absolutely turna T so you almost all don't care but I do want to bring that up because it can there's a",
    "start": "2173990",
    "end": "2181069"
  },
  {
    "text": "few people that should think about that so just a memory loops or faster",
    "start": "2181069",
    "end": "2188710"
  },
  {
    "text": "expressions contains the code definition and not just a delegate okay now all of",
    "start": "2188710",
    "end": "2202190"
  },
  {
    "text": "you I hope understand the concept of refactoring there's a way that you approach your code that says let me make",
    "start": "2202190",
    "end": "2210109"
  },
  {
    "text": "it smaller and simpler and this is the goal that you go to your code and do a few kinds of refactoring one of the most",
    "start": "2210109",
    "end": "2217489"
  },
  {
    "text": "common is to extract a method I want to explore extracting methods in a new way so the first thing that I want to look",
    "start": "2217489",
    "end": "2225529"
  },
  {
    "text": "at is what's called I call inside out refactoring because I've never found a way to talk about this that's consistent",
    "start": "2225529",
    "end": "2232309"
  },
  {
    "text": "with anyone else in the industry so I'll do what I can and if anyone's ever found",
    "start": "2232309",
    "end": "2237499"
  },
  {
    "text": "a better somebody who talks about this with better words feel free to share them with me",
    "start": "2237499",
    "end": "2242989"
  },
  {
    "text": "so what I want to do now is go down to my inside refactoring section so here I",
    "start": "2242989",
    "end": "2250009"
  },
  {
    "start": "2249000",
    "end": "2373000"
  },
  {
    "text": "have a boring stupid piece of code I'm kind of hoping I can get it almost all on screen ok just a stupid piece of code",
    "start": "2250009",
    "end": "2257630"
  },
  {
    "text": "that we're going to use for this little refactoring exercise the way you would normally refactor which I'm going to",
    "start": "2257630",
    "end": "2264230"
  },
  {
    "text": "call inside out refactoring is to take the inside part and take it out so",
    "start": "2264230",
    "end": "2269779"
  },
  {
    "text": "control period I get extract method I hit enter and I say what my new method name is that's",
    "start": "2269779",
    "end": "2277010"
  },
  {
    "text": "the Visual Studio 2017 experience for extract method I think 2015 is similar",
    "start": "2277010",
    "end": "2282040"
  },
  {
    "text": "but that's not what I want so I'm going to just hit escape ctrl Z and that's the refactoring of methods",
    "start": "2282040",
    "end": "2288980"
  },
  {
    "text": "you're used to doing let's take a different approach so let me come over here to my slides and show you where the",
    "start": "2288980",
    "end": "2296150"
  },
  {
    "text": "tempted to do a drawing of this I'll show you this both of these are also in",
    "start": "2296150",
    "end": "2301460"
  },
  {
    "text": "codes so you will see it both ways I want to grab some code make a new method and use it multiple places maybe use it",
    "start": "2301460",
    "end": "2309140"
  },
  {
    "text": "in multiple places at least use it to make my code simpler so I've taken the inside code this is just a little",
    "start": "2309140",
    "end": "2315530"
  },
  {
    "text": "graphic I've taken the inside of that and I pulled it out into a separate method and I've called it okay that's",
    "start": "2315530",
    "end": "2323810"
  },
  {
    "text": "pretty straightforward you do that all the time what about the reverse what",
    "start": "2323810",
    "end": "2331700"
  },
  {
    "text": "about it taking the outside code that's kind of bad white on yellow and then",
    "start": "2331700",
    "end": "2339740"
  },
  {
    "text": "take the outside and make a new method so we're going to take this outside code",
    "start": "2339740",
    "end": "2344930"
  },
  {
    "text": "we're going to pull it out Oh am I now what do we do we're going to create a",
    "start": "2344930",
    "end": "2352100"
  },
  {
    "text": "calling method which is a lambda expression which is going to take the inside so we're going to call our method",
    "start": "2352100",
    "end": "2359390"
  },
  {
    "text": "passing at a lambda expression to do the real work we've created the outside we've created the link like thing",
    "start": "2359390",
    "end": "2366609"
  },
  {
    "text": "without using link here and then we're going to call it so let's see what that looks like in terms of code so I'm going",
    "start": "2366609",
    "end": "2375050"
  },
  {
    "start": "2373000",
    "end": "2663000"
  },
  {
    "text": "to take this using statement right here and I'm going to kill it and I'm going to kill it by saying disposable I happen",
    "start": "2375050",
    "end": "2383000"
  },
  {
    "text": "to already have created this code and I've created something called using and that takes two parameters the first is",
    "start": "2383000",
    "end": "2390350"
  },
  {
    "text": "called a factory I appeared on new lines of clarity and that's going to be what is it that you want is using to be all",
    "start": "2390350",
    "end": "2396320"
  },
  {
    "text": "about and I'll say it's passing you nothing I would like you to return",
    "start": "2396320",
    "end": "2402440"
  },
  {
    "text": "a new class tracker dbcontext so that's",
    "start": "2402440",
    "end": "2409400"
  },
  {
    "text": "my first parameter my second parameter is what the work what is the work you actually want me to do so I'm going to",
    "start": "2409400",
    "end": "2416319"
  },
  {
    "text": "highlight this we'll just leave the name dbcontext as any other lambda expression",
    "start": "2416319",
    "end": "2423680"
  },
  {
    "text": "I can name the parameter anything I want and it would be convenient to just call it DB context so now I pass the DB",
    "start": "2423680",
    "end": "2431089"
  },
  {
    "text": "context to that I don't need the semicolon here anymore I don't need this although I do need a",
    "start": "2431089",
    "end": "2437089"
  },
  {
    "text": "close parenthesis and a semicolon here and now I can get rid of not that I can",
    "start": "2437089",
    "end": "2443240"
  },
  {
    "text": "get rid of right now okay mr. control KD control KD is what formats your entire",
    "start": "2443240",
    "end": "2451280"
  },
  {
    "text": "file and you can remember that forever because it's my initials alright so I'm",
    "start": "2451280",
    "end": "2460940"
  },
  {
    "text": "not returning this right now I need to say return here if I want to get rid of the squiggle up there okay so can we",
    "start": "2460940",
    "end": "2466309"
  },
  {
    "text": "take this further we can and I have another class which is called handling",
    "start": "2466309",
    "end": "2473119"
  },
  {
    "text": "because I've never come up with a super good name for it because it does more than just the try catch it does logging",
    "start": "2473119",
    "end": "2479270"
  },
  {
    "text": "does the try catch it does whatever else I want to do in the future it does all of that stuff in one place and the",
    "start": "2479270",
    "end": "2485869"
  },
  {
    "text": "common one uses a result so I'm going to use something different I'm going to use a demo version so I'm going to use my",
    "start": "2485869",
    "end": "2492559"
  },
  {
    "text": "demo handling one and I'm going to say what is the work that you want to do I'm",
    "start": "2492559",
    "end": "2498950"
  },
  {
    "text": "going to come back to that squiggle and now I've got all of the parentheses all",
    "start": "2498950",
    "end": "2504170"
  },
  {
    "text": "lined up we'll go look at that code in a minute but I don't need anything else now that's where we're going there's a",
    "start": "2504170",
    "end": "2512690"
  },
  {
    "text": "bug here which is that squiggle and this squiggle can sometimes be hard to",
    "start": "2512690",
    "end": "2518270"
  },
  {
    "text": "diagnose so I created one so I could show you this so when I do control control period",
    "start": "2518270",
    "end": "2524750"
  },
  {
    "text": "it says actually let me let me just give you the error says the type arguments",
    "start": "2524750",
    "end": "2530660"
  },
  {
    "text": "for handling with demo handling cannot be inferred from usage if you do the kind of",
    "start": "2530660",
    "end": "2535850"
  },
  {
    "text": "that you're seeing me do here and you'll see in the larger application I'll show you you will see this message I can",
    "start": "2535850",
    "end": "2542630"
  },
  {
    "text": "guarantee you'll see this message there you go oh I shouldn't have to give the type arguments here I know I shouldn't",
    "start": "2542630",
    "end": "2549950"
  },
  {
    "text": "have to but you get a different you get a different warning you get a different",
    "start": "2549950",
    "end": "2556100"
  },
  {
    "text": "message from the compiler a different error message from the compiler if you go ahead and do it it's telling you to",
    "start": "2556100",
    "end": "2561200"
  },
  {
    "text": "do so what I'm going to do here is I'm going to say oh this should be returning an INT pretty sure that's what it should",
    "start": "2561200",
    "end": "2568010"
  },
  {
    "text": "return okay so now it gives me a new error and it says yeah that's not a func",
    "start": "2568010",
    "end": "2574990"
  },
  {
    "text": "that's just a normal int there is no func here there is no delegate here you",
    "start": "2574990",
    "end": "2582260"
  },
  {
    "text": "messed up you messed up because you forgot that I need to be and I'll put it",
    "start": "2582260",
    "end": "2588140"
  },
  {
    "text": "on a new line for clarity I need to be a delegate and so by putting it in there I",
    "start": "2588140",
    "end": "2595250"
  },
  {
    "text": "found out what the real problem was so that's what you want to do just go ahead put it in there you know you don't need",
    "start": "2595250",
    "end": "2600800"
  },
  {
    "text": "to if you've got Titan mismatch I'll show you where it is if you've made a simple error like the one I did it'll",
    "start": "2600800",
    "end": "2606260"
  },
  {
    "text": "show you right where it is and now you'll notice that int is very it's very",
    "start": "2606260",
    "end": "2611390"
  },
  {
    "text": "light it's like oh you don't really need me anymore and so all your control period and I'll hit a simplified name",
    "start": "2611390",
    "end": "2619640"
  },
  {
    "text": "and int will go away foo has a squiggle because I've not yet typed returned now",
    "start": "2619640",
    "end": "2625310"
  },
  {
    "text": "I've taken the code that I had before and I have made it shorter in and of",
    "start": "2625310",
    "end": "2630470"
  },
  {
    "text": "itself who cares in and of itself dropping out a few",
    "start": "2630470",
    "end": "2635810"
  },
  {
    "text": "lines officiated a little bit oh maybe it's a game but it's pretty small and I got new things to worry about and gosh I",
    "start": "2635810",
    "end": "2641750"
  },
  {
    "text": "don't even know if I like it that's not where the benefit is and that wasn't really where the benefit was and many of",
    "start": "2641750",
    "end": "2648530"
  },
  {
    "text": "your inside-out refactoring either it's the fact that you can reuse it and you can change it and it will be coupled to",
    "start": "2648530",
    "end": "2655340"
  },
  {
    "text": "every place that it was in use so let's say that I do what I've got right now I'll go to this I'll go to this code and",
    "start": "2655340",
    "end": "2664850"
  },
  {
    "start": "2663000",
    "end": "2766000"
  },
  {
    "text": "the only thing it's doing is a try if I'm more time I go we'll keep your into the but you can see I'm just taking the",
    "start": "2664850",
    "end": "2671720"
  },
  {
    "text": "using step one step further that's what matters here is that I can decide",
    "start": "2671720",
    "end": "2678740"
  },
  {
    "text": "tomorrow or next week that I want to do logging or I want to do logging in a",
    "start": "2678740",
    "end": "2683750"
  },
  {
    "text": "different way or I want to do oh my gosh I mean isn't really hard here I want conditional logging based on",
    "start": "2683750",
    "end": "2689600"
  },
  {
    "text": "something in my compile step I can do anything I want because I can call a",
    "start": "2689600",
    "end": "2695240"
  },
  {
    "text": "method and within that method I can do anything I want literally anything I want so what I've done is I've said the",
    "start": "2695240",
    "end": "2702560"
  },
  {
    "text": "way you call your code can be controlled by a single method this is exactly what",
    "start": "2702560",
    "end": "2709550"
  },
  {
    "text": "linked us this is why I bring a link up at the beginning is because if you think about what the where clause but the",
    "start": "2709550",
    "end": "2715700"
  },
  {
    "text": "filter does in link it goes and it picks up each individual item of the array it",
    "start": "2715700",
    "end": "2721460"
  },
  {
    "text": "does that every time no matter what and then when it's ready to ask one single question that one single question is",
    "start": "2721460",
    "end": "2728990"
  },
  {
    "text": "what is the filter then it executes that filter and says you match you match you don't match you match you don't match so",
    "start": "2728990",
    "end": "2736070"
  },
  {
    "text": "what we can do what you do with this it's exactly the same technique except that we've used it in a different place",
    "start": "2736070",
    "end": "2741260"
  },
  {
    "text": "so this is one of the core functional pieces I'm showing them and show you",
    "start": "2741260",
    "end": "2747410"
  },
  {
    "text": "into a larger application I'm going to show you it with some deeper generics but if anyone has any questions this",
    "start": "2747410",
    "end": "2752780"
  },
  {
    "text": "would be a great time you're not to shout them nothing I don't hear you okay",
    "start": "2752780",
    "end": "2761560"
  },
  {
    "text": "okay so let's pop back for a second two slides and this just mentions four sites",
    "start": "2761560",
    "end": "2769820"
  },
  {
    "text": "that when you get the slide deck we haven't yet put it up but I'm sure the conference has a place I can put this if",
    "start": "2769820",
    "end": "2776450"
  },
  {
    "text": "not watch my Twitter feed and I'll put it someplace you can find it but Pluralsight has these two great courses",
    "start": "2776450",
    "end": "2782900"
  },
  {
    "text": "if you're listening to what I'm saying today and you're saying man I'm interested I just don't totally have my",
    "start": "2782900",
    "end": "2788060"
  },
  {
    "text": "head around it these are great courses to take you a little bit deeper they definitely take some different directions than I do but this core what",
    "start": "2788060",
    "end": "2794960"
  },
  {
    "text": "can we do with functional stuff in c-sharp they don't they cover in those I want to take it one step further in a",
    "start": "2794960",
    "end": "2802670"
  },
  {
    "text": "slightly different in ya NT of time oh great it's wonderful so everything I've shown",
    "start": "2802670",
    "end": "2811190"
  },
  {
    "text": "you right now is kind of cool kind of fun I'm going to not going to shake your world up to you badly what I want to",
    "start": "2811190",
    "end": "2818300"
  },
  {
    "text": "show you right now is a different way of thinking with this that may cause you to rethink some architectures over the next",
    "start": "2818300",
    "end": "2824660"
  },
  {
    "text": "few years and when I say architecture in my world that means something very specific to me and I respect every",
    "start": "2824660",
    "end": "2832700"
  },
  {
    "text": "architect that does all the other stuff that I don't do as well and that is once you get down to the space that you're",
    "start": "2832700",
    "end": "2839450"
  },
  {
    "text": "working on if you're doing micro services you've decided what the micro service does if you have a different",
    "start": "2839450",
    "end": "2845180"
  },
  {
    "text": "kind of application you've decided what you're going to do you've decided how your layers are going to get to put",
    "start": "2845180",
    "end": "2850460"
  },
  {
    "text": "together you've decided what your database looks like now you have to write code and I want that code to be",
    "start": "2850460",
    "end": "2856250"
  },
  {
    "text": "exquisitely beautiful because not because I'm just like Beauty although I",
    "start": "2856250",
    "end": "2862010"
  },
  {
    "text": "do I want it to be exquisitely beautiful because exquisitely beautiful code is",
    "start": "2862010",
    "end": "2867980"
  },
  {
    "text": "easier to maintain I don't mean elegant code I don't mean complicated code I don't mean tricky code I mean beautiful",
    "start": "2867980",
    "end": "2873589"
  },
  {
    "text": "code which is code you look at you go I know exactly what that does that's",
    "start": "2873589",
    "end": "2879530"
  },
  {
    "text": "beautiful code that could that's easy to maintain but in order to show you a good example I am going to show you some",
    "start": "2879530",
    "end": "2885950"
  },
  {
    "text": "broad or architectural ideas I'm going to show you the way I think about code and some architectures have been working",
    "start": "2885950",
    "end": "2892700"
  },
  {
    "text": "on for a while so three layers that's pretty common Web API services",
    "start": "2892700",
    "end": "2898480"
  },
  {
    "text": "repository that's all pretty common within each of these layers there are",
    "start": "2898480",
    "end": "2904520"
  },
  {
    "text": "separate calls to pure and impure methods the pipeline through this cannot",
    "start": "2904520",
    "end": "2910940"
  },
  {
    "text": "be pure my goal in life is to change the name of the course my goal in life is to",
    "start": "2910940",
    "end": "2918380"
  },
  {
    "text": "sign somebody up for a course my goal in life is to create a new organization not",
    "start": "2918380",
    "end": "2924440"
  },
  {
    "text": "pure can't be pure don't want it to be pure that's a central line central line through there but from that when I'm",
    "start": "2924440",
    "end": "2932300"
  },
  {
    "text": "doing something complicated if there's any possibility I want it to be pure if I'm doing something that",
    "start": "2932300",
    "end": "2937550"
  },
  {
    "text": "be pure I want to isolate that from the things that can be pure if I'm calculating how many students will be",
    "start": "2937550",
    "end": "2944720"
  },
  {
    "text": "able to be in a particular class because it's dependent on the request of the instructor the room size the time of day",
    "start": "2944720",
    "end": "2952840"
  },
  {
    "text": "three other things I can handle that information in and let a calculation do",
    "start": "2952840",
    "end": "2958280"
  },
  {
    "text": "it if I'm doing something that has to do with something else where one object",
    "start": "2958280",
    "end": "2964580"
  },
  {
    "text": "needs to change another object and something complicated that's along those directions it's a different method it's",
    "start": "2964580",
    "end": "2971240"
  },
  {
    "text": "a different call now the next thing on this is that this is just the jobs it's",
    "start": "2971240",
    "end": "2977750"
  },
  {
    "text": "not too interesting is that I do not pass exceptions across boundaries I have",
    "start": "2977750",
    "end": "2983600"
  },
  {
    "text": "felt strongly about this for a very very very long time and here's the reason has nothing to do with functional nothing to",
    "start": "2983600",
    "end": "2989750"
  },
  {
    "text": "do with generics nothing to do with any of this it has to do with the fact that it takes your technology and passes it",
    "start": "2989750",
    "end": "2996320"
  },
  {
    "text": "across the wire or it's not really a wire here most the time I'm talking I'm",
    "start": "2996320",
    "end": "3001330"
  },
  {
    "text": "not meaning that we're crossing like a bus these are like two things they're actually have DLL references so you",
    "start": "3001330",
    "end": "3007150"
  },
  {
    "text": "could say oh if you give me a sequel exception I'm going to do this",
    "start": "3007150",
    "end": "3012430"
  },
  {
    "text": "I thought you give me this kind of exception I this is what I'm going to do but let's think about that for a second",
    "start": "3012430",
    "end": "3018220"
  },
  {
    "text": "what if I'm not using sequel what if I'm using something different you just gave me a single exception you didn't give me",
    "start": "3018220",
    "end": "3024400"
  },
  {
    "text": "some other kind of general exception you gave me a technology specific exception",
    "start": "3024400",
    "end": "3030120"
  },
  {
    "text": "let's not do that let's keep our technology where technology belongs in each of these layers that's why I don't use exceptions",
    "start": "3030120",
    "end": "3037200"
  },
  {
    "text": "instead I pass a result the result has information inside of it including",
    "start": "3037200",
    "end": "3042280"
  },
  {
    "text": "whether success happened purely for the sake of debugging because my team likes",
    "start": "3042280",
    "end": "3047650"
  },
  {
    "text": "it much better that way I actually do include the exception in that but I do nothing in terms of control flow from",
    "start": "3047650",
    "end": "3054520"
  },
  {
    "text": "that it's just a matter here it is for debugging you wanted the stack trace I'm not going to hide the stack trace from",
    "start": "3054520",
    "end": "3060250"
  },
  {
    "text": "you okay so it's like a little bit more code",
    "start": "3060250",
    "end": "3065610"
  },
  {
    "start": "3064000",
    "end": "3173000"
  },
  {
    "text": "I'm going to open up the repository here",
    "start": "3067470",
    "end": "3074160"
  },
  {
    "text": "for the course okay so I have something",
    "start": "3074160",
    "end": "3081400"
  },
  {
    "text": "called a course repository it inherits from something called a base entity framework repository that takes four",
    "start": "3081400",
    "end": "3088660"
  },
  {
    "text": "count them four for generics the course this is a course repository I'm going to",
    "start": "3088660",
    "end": "3094750"
  },
  {
    "text": "return a course one more thing I separate out my domain for my enemy",
    "start": "3094750",
    "end": "3099850"
  },
  {
    "text": "framework models they're different I'm EF course which is the ND framework model and I have a course that I'm",
    "start": "3099850",
    "end": "3105370"
  },
  {
    "text": "passing across that logical boundary so I need to have what am I actually going",
    "start": "3105370",
    "end": "3111730"
  },
  {
    "text": "to return the course fee of course what am I actually going to be talking to any framework with what dbcontext am",
    "start": "3111730",
    "end": "3119380"
  },
  {
    "text": "I going to be using and also what is the primary key that's the integer okay",
    "start": "3119380",
    "end": "3125110"
  },
  {
    "text": "that's pretty cool now to the base class constructor our hard code this is a course repository it's nothing",
    "start": "3125110",
    "end": "3132130"
  },
  {
    "text": "else this is a course repository the course repository says well gosh okay once you get to that dbcontext how are",
    "start": "3132130",
    "end": "3138220"
  },
  {
    "text": "you going to get that particular DB set so how are you going to talk to that particular table is to have a different",
    "start": "3138220",
    "end": "3144340"
  },
  {
    "text": "table okay great get DB set I kind of get that that's another one of those yeah the higher-order stuff okay and then we get",
    "start": "3144340",
    "end": "3153820"
  },
  {
    "text": "the primary key given a course we get the primary key you've seen that earlier I do go to 140 240 I hope all right and",
    "start": "3153820",
    "end": "3164260"
  },
  {
    "text": "then I need to map given a given and a framework model give me a domain give me given a domain give me any framework",
    "start": "3164260",
    "end": "3170770"
  },
  {
    "text": "model ok now I had those methods in this I happen to put them in in a nested",
    "start": "3170770",
    "end": "3177610"
  },
  {
    "start": "3173000",
    "end": "3221000"
  },
  {
    "text": "class if you haven't seen those two classes that's all I'm doing here and so I've got those two methods and another",
    "start": "3177610",
    "end": "3183130"
  },
  {
    "text": "one that we don't care too much about right now so I'm going to hide it but I've got domain two entity and entity",
    "start": "3183130",
    "end": "3189070"
  },
  {
    "text": "two domain they're a little bit different because the demands of any frameworks okay guess what",
    "start": "3189070",
    "end": "3195400"
  },
  {
    "text": "I'm out of curly brackets I am all done I'm all done every single thing this",
    "start": "3195400",
    "end": "3203840"
  },
  {
    "text": "needs to do for normal credit is now complete I've done everything I need to",
    "start": "3203840",
    "end": "3211070"
  },
  {
    "text": "do and that's because above this in my base entity framework repository I've",
    "start": "3211070",
    "end": "3218090"
  },
  {
    "text": "done all of the work it takes the things that you've seen it names the generic",
    "start": "3218090",
    "end": "3224930"
  },
  {
    "text": "type parameters it has a property for that DB set and then let's come down",
    "start": "3224930",
    "end": "3230600"
  },
  {
    "text": "here and look at one of these now if I had another 15 minutes I would refactor this to look like the next one but as it",
    "start": "3230600",
    "end": "3238100"
  },
  {
    "text": "is I would like you to just absorb this understand where we're going and then I'll just jump to the completed one",
    "start": "3238100",
    "end": "3244880"
  },
  {
    "text": "that's the piece I had to cut out so we're going to simply get the DB set we're going to do any filtering we're",
    "start": "3244880",
    "end": "3250850"
  },
  {
    "text": "going to get to the specific one we're asking for and then we're going to map that mapping here is a is a delegate",
    "start": "3250850",
    "end": "3259250"
  },
  {
    "text": "that's held in this base class because every time we do a generic it has its",
    "start": "3259250",
    "end": "3264830"
  },
  {
    "text": "own copy of that so they each get their own copy of these properties and then I create the success result if there's an",
    "start": "3264830",
    "end": "3271190"
  },
  {
    "text": "exception I create a failure result now I'm going to switch topics a little bit but I think you're all going to be fine",
    "start": "3271190",
    "end": "3276680"
  },
  {
    "text": "I'm hoping your I'll be fine with that that was getting won by ID this one is get all and now this is all that that",
    "start": "3276680",
    "end": "3284030"
  },
  {
    "text": "needs to do so with rap DB set I'll show you that there's different ways that you can handle this again I'm saying that",
    "start": "3284030",
    "end": "3290630"
  },
  {
    "text": "every time I touch a DB set this is the way I will get there so therefore it's",
    "start": "3290630",
    "end": "3295880"
  },
  {
    "text": "common code it allows me to have custom code in a repository that needs it and",
    "start": "3295880",
    "end": "3302840"
  },
  {
    "text": "I'll get back to that point just as I close so we want to look at that method I'm sure I'm sure you're dying to see it",
    "start": "3302840",
    "end": "3309200"
  },
  {
    "text": "there's some funny things about the way that that when link goes to the database and back is why there's two lists in",
    "start": "3309200",
    "end": "3315500"
  },
  {
    "text": "case you were seeing that it's not actually a typo it's needed because one two lists happens on the server the",
    "start": "3315500",
    "end": "3321320"
  },
  {
    "text": "other two lists happens on the client so with the wrapped DB set says though with",
    "start": "3321320",
    "end": "3326570"
  },
  {
    "text": "wrapped dbcontext give me the set with let's get that one with the wrapped the wrap dbcontext some",
    "start": "3326570",
    "end": "3333250"
  },
  {
    "text": "says give me a new one we saw this code almost identical to this earlier in the",
    "start": "3333250",
    "end": "3339370"
  },
  {
    "text": "talk give me a DB context and then run an",
    "start": "3339370",
    "end": "3344650"
  },
  {
    "text": "operation on that the DB context is defined as T DB context as a type",
    "start": "3344650",
    "end": "3351250"
  },
  {
    "text": "parameter to this class okay so jumping back over to the course",
    "start": "3351250",
    "end": "3361630"
  },
  {
    "text": "repository what I wasn't going to do is I know you'd love to see this code but I",
    "start": "3361630",
    "end": "3366880"
  },
  {
    "start": "3364000",
    "end": "3489000"
  },
  {
    "text": "really want you to see this class in total so I'm going to see if I can do this okay there is an I'm going to yeah",
    "start": "3366880",
    "end": "3373660"
  },
  {
    "text": "let's just go ahead and collapse this so you get the the general gist of this is what I want you to have I know you can",
    "start": "3373660",
    "end": "3380290"
  },
  {
    "text": "no longer see the code but I want you to just think about this in totality this is a course repository this is",
    "start": "3380290",
    "end": "3386920"
  },
  {
    "text": "freaking simple there's nothing I need to do courses are easy courses aren't hard in my world courses are terribly",
    "start": "3386920",
    "end": "3392440"
  },
  {
    "text": "easy nothing special ever happens oh but students students are very complicated",
    "start": "3392440",
    "end": "3398640"
  },
  {
    "text": "students have a lot of work now a new person walks up to this application they",
    "start": "3398640",
    "end": "3404080"
  },
  {
    "text": "walk up to the course repository and they go up yep got it nothing hard everything's easy oh I see",
    "start": "3404080",
    "end": "3409600"
  },
  {
    "text": "the mapping they go up to the student repository and the student repository is",
    "start": "3409600",
    "end": "3414700"
  },
  {
    "text": "overridden some of these methods because a student repository is something more complicated to do the student repository",
    "start": "3414700",
    "end": "3420610"
  },
  {
    "text": "has more work and the person walking up to this has no problem seeing this right there in their face oh my gosh",
    "start": "3420610",
    "end": "3427380"
  },
  {
    "text": "student repository is complicated course repository is easy if you think about",
    "start": "3427380",
    "end": "3433600"
  },
  {
    "text": "your application today and the ones that do the code you have at home right now if you could take every single thing",
    "start": "3433600",
    "end": "3439900"
  },
  {
    "text": "that was easy and make it easy dirt simple nobody can overlook the fact that it's easy pull out the parts that are",
    "start": "3439900",
    "end": "3446410"
  },
  {
    "text": "complicated let the human deal with the parts the human being needs to deal with",
    "start": "3446410",
    "end": "3452110"
  },
  {
    "text": "and take all this other junk that we're doing I'm trying to tuck it away using every single technique at your disposal",
    "start": "3452110",
    "end": "3458190"
  },
  {
    "text": "but I hope I've done today is showing you one or two additional techniques in the area of generic hierarchies and",
    "start": "3458190",
    "end": "3464650"
  },
  {
    "text": "functional programming and some new ideas I hope in terms of",
    "start": "3464650",
    "end": "3469840"
  },
  {
    "text": "how you can do that or the ultimate goal make the simple calls make the simple code easy let the complicated code be",
    "start": "3469840",
    "end": "3477430"
  },
  {
    "text": "where the humans spend their time thank you very much for spending the last hour with me and I hope you have a fantastic",
    "start": "3477430",
    "end": "3482440"
  },
  {
    "text": "conference",
    "start": "3482440",
    "end": "3485400"
  }
]