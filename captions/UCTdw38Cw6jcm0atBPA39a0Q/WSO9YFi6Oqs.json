[
  {
    "start": "0",
    "end": "299000"
  },
  {
    "text": "and also how to verify that the code that we shipped actually works and",
    "start": "2070",
    "end": "7500"
  },
  {
    "text": "finally how to carefully roll out what how to carefully roll out the code that",
    "start": "7500",
    "end": "13259"
  },
  {
    "text": "we shipped especially if it's a little dangerous during the development process",
    "start": "13259",
    "end": "19350"
  },
  {
    "text": "we get lots of questions we have lots of questions about our system that don't actually smell like traditional",
    "start": "19350",
    "end": "25289"
  },
  {
    "text": "production monitoring systems they're there about how people are using it and how what what the performance baseline",
    "start": "25289",
    "end": "31289"
  },
  {
    "text": "is and all of these do rely on what is actually happening today what our current user user basis is doing because",
    "start": "31289",
    "end": "41550"
  },
  {
    "text": "not all interesting things are problems but they're not always going to show up in our dashboards and probably almost",
    "start": "41550",
    "end": "47730"
  },
  {
    "text": "certainly won't show up in our exception trackers which means that we need we need to go seek out these interesting",
    "start": "47730",
    "end": "55170"
  },
  {
    "text": "bits of knowledge so that we can do our jobs better better software because a lot of these interesting things are",
    "start": "55170",
    "end": "60539"
  },
  {
    "text": "hypotheticals you know what if we ship this code that had this performance this",
    "start": "60539",
    "end": "66659"
  },
  {
    "text": "performance improvement what is it effect how does that affect them what does normal look like what how will our",
    "start": "66659",
    "end": "73020"
  },
  {
    "text": "code effect normal here are some questions that look a lot awful lot like",
    "start": "73020",
    "end": "78509"
  },
  {
    "text": "traditional ops questions right questions about load latency how much",
    "start": "78509",
    "end": "84030"
  },
  {
    "text": "our capacity is based on some something that we did to the instance type but if",
    "start": "84030",
    "end": "90360"
  },
  {
    "text": "we frame these questions a little differently bring them a little bit closer to the development world a little bit closer to what the user experience",
    "start": "90360",
    "end": "96540"
  },
  {
    "text": "is or what the customers see starts to look a lot like things that we should care about also your nouns might be",
    "start": "96540",
    "end": "104939"
  },
  {
    "text": "different all of these examples talk about individual customers they talk about string heavy payloads you might be",
    "start": "104939",
    "end": "112380"
  },
  {
    "text": "shaking your head but maybe you care about expensive queries or individual shopping carts or you care",
    "start": "112380",
    "end": "119850"
  },
  {
    "text": "about one country's payment processing throughput I don't know you know your business the premise is",
    "start": "119850",
    "end": "127680"
  },
  {
    "text": "the same the thing that is often the most painful to debug the edge cases that are most interesting",
    "start": "127680",
    "end": "133920"
  },
  {
    "text": "to understand or where there's a one outlier that you didn't expect doing something unexpected while the code was",
    "start": "133920",
    "end": "142050"
  },
  {
    "text": "built for something else so here are some examples of some tools that",
    "start": "142050",
    "end": "147960"
  },
  {
    "text": "currently try to help developers and operators solve this problem some folks might label one side monitoring some",
    "start": "147960",
    "end": "154980"
  },
  {
    "text": "might label the other side APM some might label one side for ops people some",
    "start": "154980",
    "end": "160980"
  },
  {
    "text": "might say these are for deaths and I say these labels are the problem by dividing",
    "start": "160980",
    "end": "166770"
  },
  {
    "text": "this up by labeling one side for one type of person and another set of tools for another set of people when we're all",
    "start": "166770",
    "end": "173280"
  },
  {
    "text": "on the same side trying to deliver a service to our users we don't only continue reinforcing that wall between",
    "start": "173280",
    "end": "179580"
  },
  {
    "text": "ops and dev we're literally giving them two different views into reality quick",
    "start": "179580",
    "end": "187680"
  },
  {
    "text": "sidebar why do I where are we using the word observability for all this well",
    "start": "187680",
    "end": "193580"
  },
  {
    "text": "serve ability formally is about the ability to understand the behavior of",
    "start": "193580",
    "end": "199320"
  },
  {
    "text": "your system based on knowledge of its outputs informally I think of it as what",
    "start": "199320",
    "end": "204480"
  },
  {
    "text": "is myself or doing and why is it doing this and the reason there's this movement towards a new word for this is",
    "start": "204480",
    "end": "211650"
  },
  {
    "text": "that while I'm not here to brag on the word monitoring the truth is there's a",
    "start": "211650",
    "end": "216870"
  },
  {
    "text": "lot of baggage that tends to be associated with that word tends to involve things like sepia graphs tends",
    "start": "216870",
    "end": "224040"
  },
  {
    "text": "to involve defining the threshold that we deem acceptable and picking picking",
    "start": "224040",
    "end": "229350"
  },
  {
    "text": "your number and then setting it immortalizing it in a dashboard watching it making sure that our system is",
    "start": "229350",
    "end": "234630"
  },
  {
    "text": "behaving with an accepted bounds and our words get world's getting a little more",
    "start": "234630",
    "end": "239640"
  },
  {
    "text": "complicated than that our world is getting a little more complicated than this is good that is bad this number has to be below that other number instead",
    "start": "239640",
    "end": "247370"
  },
  {
    "text": "we're trying to move towards is the system and our observation of the system",
    "start": "247370",
    "end": "252630"
  },
  {
    "text": "as a living evolving thing as we write code our understanding of what is normal what is acceptable should change should",
    "start": "252630",
    "end": "259530"
  },
  {
    "text": "evolve and we should be able to instead of being restricted to previous questions that we",
    "start": "259530",
    "end": "266759"
  },
  {
    "text": "immortalize on a dashboard we should be able to ask new questions be able to evolve that investigate some specific",
    "start": "266759",
    "end": "273449"
  },
  {
    "text": "customer segments that we didn't care about yesterday really matters today all right and at sidebar so tools matter the",
    "start": "273449",
    "end": "282180"
  },
  {
    "text": "data we feed into these tools matter and our tools for understanding prod can't just talk in terms of CPU memory disk",
    "start": "282180",
    "end": "289199"
  },
  {
    "text": "space not if the folks not if the office folks want us developers to think in",
    "start": "289199",
    "end": "295319"
  },
  {
    "text": "terms of what our code is actually doing in production so breaking this wall down",
    "start": "295319",
    "end": "302610"
  },
  {
    "start": "299000",
    "end": "378000"
  },
  {
    "text": "between works on my machine and the only difference the only good dip is a read diff has to come down we're entering a",
    "start": "302610",
    "end": "309900"
  },
  {
    "text": "world with containers micro-services and cyrillus functions and and we're",
    "start": "309900",
    "end": "314909"
  },
  {
    "text": "entering this world is has too many moving parts for one set of folks to be",
    "start": "314909",
    "end": "321270"
  },
  {
    "text": "entirely responsible for what happens after the the code that we ship hits production we the people who are",
    "start": "321270",
    "end": "326969"
  },
  {
    "text": "writing it you need to start being aware you need to start owning that shipped ripping process that release process the",
    "start": "326969",
    "end": "335729"
  },
  {
    "text": "first wave of DevOps was all about teaching ops folks to code automating their their release cycles and embracing",
    "start": "335729",
    "end": "344029"
  },
  {
    "text": "embracing the sort of automation that we take for granted but if that was the first wave the second wave is going to",
    "start": "344029",
    "end": "350880"
  },
  {
    "text": "have to be developers learning to own our code in production getting us",
    "start": "350880",
    "end": "356310"
  },
  {
    "text": "comfortable poking at production data bringing our development environment closer to our so our understanding of",
    "start": "356310",
    "end": "363120"
  },
  {
    "text": "production and reserve observability is how we get there look looking asking",
    "start": "363120",
    "end": "369270"
  },
  {
    "text": "questions and understanding how our log data on our local machine translates to",
    "start": "369270",
    "end": "374279"
  },
  {
    "text": "the real world so observability should be a core part",
    "start": "374279",
    "end": "381810"
  },
  {
    "start": "378000",
    "end": "496000"
  },
  {
    "text": "of the development process as the software is being built not as it's being evaluated for reliability or being",
    "start": "381810",
    "end": "388260"
  },
  {
    "text": "prepared for deploy we need to be feeding as much useful information into our tools and we need to be asking",
    "start": "388260",
    "end": "394350"
  },
  {
    "text": "questions about them as much as testing or documentation understanding what our",
    "start": "394350",
    "end": "399990"
  },
  {
    "text": "code does teaches us how to build better software all the time and observability",
    "start": "399990",
    "end": "405210"
  },
  {
    "text": "isn't just about finding out when things are broken or how things are going wrong it's for understanding your software as",
    "start": "405210",
    "end": "411360"
  },
  {
    "text": "it is executing so let's take a look again at this checklist break it down",
    "start": "411360",
    "end": "418320"
  },
  {
    "text": "into some more manageable stages first we decide what we're building what we're",
    "start": "418320",
    "end": "424860"
  },
  {
    "text": "fixing what features to add and we're figuring out how to build it figure out",
    "start": "424860",
    "end": "431250"
  },
  {
    "text": "you know make sure it works on machine this is our these are our automated tests integration tests unit tests",
    "start": "431250",
    "end": "436890"
  },
  {
    "text": "functional tests etc and then we make sure after we ship it that it actually",
    "start": "436890",
    "end": "442740"
  },
  {
    "text": "does what we say it does that's a performance improvement let's make sure it actually improves the performance if it's a new feature let's make sure that",
    "start": "442740",
    "end": "450300"
  },
  {
    "text": "the customers that we expected to be impacted or impact are are using it and then the watching is okay it seems",
    "start": "450300",
    "end": "457860"
  },
  {
    "text": "stable but let's keep an eye on things let's make sure that nothing untoward",
    "start": "457860",
    "end": "463170"
  },
  {
    "text": "continues happening and these first three look at them what currently",
    "start": "463170",
    "end": "470330"
  },
  {
    "text": "informs these three things if not production data from production you're",
    "start": "470330",
    "end": "475410"
  },
  {
    "text": "developed antastic developer intuition a product manager telling you what to do",
    "start": "475410",
    "end": "481460"
  },
  {
    "text": "it might be it might be one or both of these things but I sure hope we have",
    "start": "481460",
    "end": "487680"
  },
  {
    "text": "some real data coming in on how we can improve how we expect to improve and whether the improvement had the impact",
    "start": "487680",
    "end": "494610"
  },
  {
    "text": "that we wanted run through these five stages and show some share some real-world examples of what using data",
    "start": "494610",
    "end": "501480"
  },
  {
    "start": "496000",
    "end": "538000"
  },
  {
    "text": "in these stages might look like so figuring out what to build or fix this",
    "start": "501480",
    "end": "507270"
  },
  {
    "text": "is almost the most boring case for meit because there's no shortage of people software",
    "start": "507270",
    "end": "512789"
  },
  {
    "text": "humans telling me what I need to build what we need to spend time on alerts exceptions people on Twitter but data",
    "start": "512790",
    "end": "520080"
  },
  {
    "text": "comes into play when we go through and we try to refine our understanding of it right when we go from oh goodness",
    "start": "520080",
    "end": "525300"
  },
  {
    "text": "latency is high - ah well latency is high and things feel terribly slow for",
    "start": "525300",
    "end": "531120"
  },
  {
    "text": "this segment of our customers on this endpoint when they run this type of",
    "start": "531120",
    "end": "536880"
  },
  {
    "text": "request well more debugging or reward looking locally we have all of these signals",
    "start": "536880",
    "end": "542730"
  },
  {
    "start": "538000",
    "end": "598000"
  },
  {
    "text": "that help us understand what our code is doing why it's doing that what could path it's following but in",
    "start": "542730",
    "end": "548940"
  },
  {
    "text": "production we only have the data that we happen to capture when it happened that's a good and bad thing right",
    "start": "548940",
    "end": "555980"
  },
  {
    "text": "because there's there are some things that can only be debugged only be simulated only be discovered in",
    "start": "555980",
    "end": "562140"
  },
  {
    "text": "production at scale and the ideal case we have all the metadata that we need",
    "start": "562140",
    "end": "567680"
  },
  {
    "text": "that data that we capture essentially lets us pre play history lets us figure out what actually happened what you know",
    "start": "567680",
    "end": "574140"
  },
  {
    "text": "everything about that we would find in our debugger since most of us aren't in",
    "start": "574140",
    "end": "579960"
  },
  {
    "text": "the ideal case we don't start out there the important thing that we need to keep in mind we're building this we're trying",
    "start": "579960",
    "end": "586290"
  },
  {
    "text": "to use production data to figure out what to build is to make sure that we are flexible about adding data as we",
    "start": "586290",
    "end": "592770"
  },
  {
    "text": "need it to understand how the code followed through all right",
    "start": "592770",
    "end": "598500"
  },
  {
    "start": "598000",
    "end": "777000"
  },
  {
    "text": "I promise I promise an example honeycomb is at its core a query engine you send",
    "start": "598500",
    "end": "604800"
  },
  {
    "text": "us data we try to make it queryable within a second and so someone comes to us and says my data is not showing up",
    "start": "604800",
    "end": "610560"
  },
  {
    "text": "this is a big problem okay goodness like why we talk to this customer key showed",
    "start": "610560",
    "end": "617880"
  },
  {
    "text": "up we said this one of our engineers had a theory maybe they're sending us you",
    "start": "617880",
    "end": "623280"
  },
  {
    "text": "know everything looks stable on our side maybe they're sending us bad date time stamps maybe something's blocked or",
    "start": "623280",
    "end": "628680"
  },
  {
    "text": "backing up on their side we didn't have that data to verify that we sort of had",
    "start": "628680",
    "end": "633750"
  },
  {
    "text": "our intuition we're like okay hold on let's add a field let it run for an hour",
    "start": "633750",
    "end": "640310"
  },
  {
    "text": "and this field was awkward name event time Delta sec that base could measure",
    "start": "640310",
    "end": "645870"
  },
  {
    "text": "the difference be between the timestamp that the user meant to send when something happened on their servers and when it hit our API",
    "start": "645870",
    "end": "652370"
  },
  {
    "text": "and then we could visualize it we could say show me the average of that value",
    "start": "652370",
    "end": "658649"
  },
  {
    "text": "over time immediately we can see this kind of concerning sawtooth pattern something's growing dropping doesn't",
    "start": "658649",
    "end": "666930"
  },
  {
    "text": "show up for any other customer might be something on their side and at the bottom we can see that these four lines",
    "start": "666930",
    "end": "673529"
  },
  {
    "text": "all map up each with one availability zone so these are availability zones",
    "start": "673529",
    "end": "679319"
  },
  {
    "text": "that our servers are in maybe one of their servers or maybe one up maybe their cluster is having trouble talking",
    "start": "679319",
    "end": "685259"
  },
  {
    "text": "to one of our Amazon availability zones okay well let's get some more data",
    "start": "685259",
    "end": "690290"
  },
  {
    "text": "verify that well throw in the 95th percentile because we are we're used to",
    "start": "690290",
    "end": "695639"
  },
  {
    "text": "working with data we know that averages lie and immediately we can see this orange line the the worst case latency",
    "start": "695639",
    "end": "704930"
  },
  {
    "text": "for the worst case delay for data being emitted on the client side being",
    "start": "704930",
    "end": "710329"
  },
  {
    "text": "arriving at our API way higher than any of the other ones okay weird but",
    "start": "710329",
    "end": "717389"
  },
  {
    "text": "interesting and if we throw in some the 10th percentile as well as the media and",
    "start": "717389",
    "end": "723050"
  },
  {
    "text": "continues to tell us a story of differences in delays between availability zones and this is an",
    "start": "723050",
    "end": "731639"
  },
  {
    "text": "example of ok a customer came to us with a problem without data we might have to",
    "start": "731639",
    "end": "737459"
  },
  {
    "text": "come up with a hypothesis right write some code deploy it cross our fingers",
    "start": "737459",
    "end": "742500"
  },
  {
    "text": "hope that have fixed the issue but by looking at the data using it we can actually figure out hey we don't know we",
    "start": "742500",
    "end": "749129"
  },
  {
    "text": "don't need to be make a change right away and we can go back to their customer with a very specific hey we're",
    "start": "749129",
    "end": "755429"
  },
  {
    "text": "seeing this behavior we're seeing it localized and concentrated here let's talk it through let's work it out this",
    "start": "755429",
    "end": "762269"
  },
  {
    "text": "is the case of using production data to figure out we don't have to write software to fix the problem there's a",
    "start": "762269",
    "end": "770879"
  },
  {
    "text": "difference though between knowing what to build and then knowing how to actually go about building it",
    "start": "770879",
    "end": "777439"
  },
  {
    "start": "777000",
    "end": "928000"
  },
  {
    "text": "understanding the potential impact of a change were make is something that is especially right",
    "start": "777439",
    "end": "787500"
  },
  {
    "text": "for letting us bring data into the decision-making process by learning about what normal is",
    "start": "787500",
    "end": "793080"
  },
  {
    "text": "lets us figure out where whether or how far our fix or our change will deviate",
    "start": "793080",
    "end": "798950"
  },
  {
    "text": "will change the status quo for our current users and I like thinking about",
    "start": "798950",
    "end": "804750"
  },
  {
    "text": "this section because it really it turns what we're doing by instrumenting by having our services output data about",
    "start": "804750",
    "end": "812040"
  },
  {
    "text": "what they're doing it turns that into almost debug statements for production",
    "start": "812040",
    "end": "817070"
  },
  {
    "text": "and you can use and these debug statements are something that we can use while we have while we're working on the",
    "start": "817070",
    "end": "824190"
  },
  {
    "text": "final solution well we have our actual logic in a branch we can see you know",
    "start": "824190",
    "end": "830460"
  },
  {
    "text": "what would it what would my logic have done by having a flow where it's natural",
    "start": "830460",
    "end": "835680"
  },
  {
    "text": "and lightweight for software engineers to add these diagnostic bits we can make more informed decisions deliver better",
    "start": "835680",
    "end": "842640"
  },
  {
    "text": "experiences and while our PMS might make",
    "start": "842640",
    "end": "847710"
  },
  {
    "text": "their decision based on qualitative user interviews and again grand intuition we're developers we've access to prod",
    "start": "847710",
    "end": "855440"
  },
  {
    "text": "Baptist we came back to step up with data example oh sure here is very early",
    "start": "855440",
    "end": "862410"
  },
  {
    "text": "in our lifetime we sort of hand waived our by limiting implementation we use an",
    "start": "862410",
    "end": "868170"
  },
  {
    "text": "imprecise cash like I will figure it out later each server can now figure out whether",
    "start": "868170",
    "end": "875430"
  },
  {
    "text": "request should be rate limited on its own and as our traffic grew we could",
    "start": "875430",
    "end": "881970"
  },
  {
    "text": "tell there was like a suboptimal correlation between which server",
    "start": "881970",
    "end": "888180"
  },
  {
    "text": "requests hit which customers were impacted which ones were being rate limited so we were like okay it's time",
    "start": "888180",
    "end": "893850"
  },
  {
    "text": "to spin up a shared cache time to centralize clean up this check that centralize that logic but instead of",
    "start": "893850",
    "end": "900810"
  },
  {
    "text": "just blindly making that change especially as we were tuning the heuristics for how we wanted to do our",
    "start": "900810",
    "end": "905850"
  },
  {
    "text": "rate limiting we could start we realized we could start capturing data and prod to simulate the logic we were about to ship",
    "start": "905850",
    "end": "911880"
  },
  {
    "text": "to see what that steady state there might be so alongside the logic in the API server that that actually",
    "start": "911880",
    "end": "917980"
  },
  {
    "text": "enforced the old rate limiting we rolled out the shared cache and we were like hey under the new logic would it have",
    "start": "917980",
    "end": "924820"
  },
  {
    "text": "been limited or would it not and then we could graph it and then we could understand yes new rate limiting is more",
    "start": "924820",
    "end": "934690"
  },
  {
    "start": "928000",
    "end": "963000"
  },
  {
    "text": "strict in a lot of places and especially so for large spikes which is exactly what we wanted it to be doing and we had",
    "start": "934690",
    "end": "941170"
  },
  {
    "text": "enough here to examine each case individually to really make sure okay here's a case where it's not behaving as",
    "start": "941170",
    "end": "947710"
  },
  {
    "text": "we expect is this okay and third again our customer focus the",
    "start": "947710",
    "end": "954010"
  },
  {
    "text": "ability to identify which customers would actually be impacted let us be more communicative and let us weigh them",
    "start": "954010",
    "end": "959890"
  },
  {
    "text": "more in our development in the future all right verifying on my machine",
    "start": "959890",
    "end": "965800"
  },
  {
    "start": "963000",
    "end": "1060000"
  },
  {
    "text": "testing testing is great how do we pick our test cases how many how many folks",
    "start": "965800",
    "end": "974650"
  },
  {
    "text": "have ever been in an interview where the question at the end of the question was how would you test this okay a couple",
    "start": "974650",
    "end": "982210"
  },
  {
    "text": "hands this is a surprising thing that I feel like should be touched on more in",
    "start": "982210",
    "end": "987550"
  },
  {
    "text": "interviews but that's not a topic often this again falls back to intuition falls",
    "start": "987550",
    "end": "993250"
  },
  {
    "text": "back to I think these edge cases are worth testing and thus I will immortalize it in my written test well",
    "start": "993250",
    "end": "999760"
  },
  {
    "text": "we could do that or we could say hey what is what is reality right now what",
    "start": "999760",
    "end": "1005100"
  },
  {
    "text": "are the things that are realistically inbounds versus not this is a graph over time or the y-axis is how many how large",
    "start": "1005100",
    "end": "1013860"
  },
  {
    "text": "these payloads are how many key value pairs are in each blob that my my API server is receiving and so uh yes",
    "start": "1013860",
    "end": "1021720"
  },
  {
    "text": "apparently the largest blobs have 500 key value pairs but most of them are",
    "start": "1021720",
    "end": "1027270"
  },
  {
    "text": "under the 50k column mark cool now we know what what kind of reasonable bounds",
    "start": "1027270",
    "end": "1033180"
  },
  {
    "text": "are what we should make sure to test and this also highlights kind of an inherent",
    "start": "1033180",
    "end": "1039650"
  },
  {
    "text": "shortcoming of tests written by humans right even if we use data and production",
    "start": "1039650",
    "end": "1044970"
  },
  {
    "text": "to inform what our task a shoe be who knows what what crazy things will happen next month next year it brings us",
    "start": "1044970",
    "end": "1053240"
  },
  {
    "text": "to verifying in production that your code is doing what you expected to do we",
    "start": "1053240",
    "end": "1060800"
  },
  {
    "start": "1060000",
    "end": "1178000"
  },
  {
    "text": "love the phrase testing in production and someone here is actually wearing a shirt that says I test in prod when we",
    "start": "1060800",
    "end": "1069290"
  },
  {
    "text": "say this it does not mean only testing in production it is not an excuse to skip writing test cases it is not an",
    "start": "1069290",
    "end": "1075920"
  },
  {
    "text": "excuse to use your wonderful CI pipeline that you have set up what it means is",
    "start": "1075920",
    "end": "1082780"
  },
  {
    "text": "testing before and after production are things that are complementary and should happen in all cases sorry they're both",
    "start": "1082780",
    "end": "1091850"
  },
  {
    "text": "necessary and cannot happen for all cases when you know the answer to what",
    "start": "1091850",
    "end": "1097700"
  },
  {
    "text": "should happen if I throw in a negative number into this function if you know",
    "start": "1097700",
    "end": "1102710"
  },
  {
    "text": "the answer you should write a test case and you can when you don't really know",
    "start": "1102710",
    "end": "1108830"
  },
  {
    "text": "what will happen what will happen if 500 people call this function at once you",
    "start": "1108830",
    "end": "1116450"
  },
  {
    "text": "could spend a whole bunch of effort spinning up a test environment that will let you simulate 500 customers all hitting it at once or you could roll it",
    "start": "1116450",
    "end": "1123470"
  },
  {
    "text": "out very carefully and see what happens because ultimately there are some things",
    "start": "1123470",
    "end": "1128990"
  },
  {
    "text": "that you can only check in production at real scale on a real network with real",
    "start": "1128990",
    "end": "1135200"
  },
  {
    "text": "user diversity in complex systems have an almost infinitely long list of almost",
    "start": "1135200",
    "end": "1143150"
  },
  {
    "text": "impossible failure scenarios and as our systems get more complex again microservices serverless moving parts by",
    "start": "1143150",
    "end": "1152690"
  },
  {
    "text": "adding more components and adding more dependencies the number of potentially tricky interactions will only continue",
    "start": "1152690",
    "end": "1158930"
  },
  {
    "text": "increasing so rather than trying to predict and process and handle all of",
    "start": "1158930",
    "end": "1164510"
  },
  {
    "text": "these incredibly rare incredibly unpredictable filler scenarios we should make sure that we find out immediately",
    "start": "1164510",
    "end": "1170660"
  },
  {
    "text": "when something happens and we have enough information to handle it when it does speaking of our favorite way to",
    "start": "1170660",
    "end": "1176750"
  },
  {
    "text": "test hypothesis future vlogs future flags are one of our favorite",
    "start": "1176750",
    "end": "1181970"
  },
  {
    "start": "1178000",
    "end": "1422000"
  },
  {
    "text": "tools to help us test in production they make sure that you know we've got this change we're pretty sure we'll work our",
    "start": "1181970",
    "end": "1189649"
  },
  {
    "text": "tests pass we want to roll it out really carefully maybe to a particular node maybe to a particular customer maybe",
    "start": "1189649",
    "end": "1197240"
  },
  {
    "text": "just some other segment in order to find out what our codes impact is in the wild",
    "start": "1197240",
    "end": "1204399"
  },
  {
    "text": "and this becomes really powerful when we can get smart about how we how we target",
    "start": "1204399",
    "end": "1209570"
  },
  {
    "text": "that segment and my favorite part about this approach is that it ties in really well to this means that the testing in",
    "start": "1209570",
    "end": "1217940"
  },
  {
    "text": "production gets to take advantage of the ephemeral nature of future of future Flags right and those are and these",
    "start": "1217940",
    "end": "1224690"
  },
  {
    "text": "ephemeral future Flags line up really well with these sort of ephemeral questions and development okay I'm building this feature I think",
    "start": "1224690",
    "end": "1232669"
  },
  {
    "text": "it will do this does it and at this point I throw this up on the slide just",
    "start": "1232669",
    "end": "1238909"
  },
  {
    "text": "because we actually take all of our future flags sort of them on all of our are like own monitoring events our own",
    "start": "1238909",
    "end": "1246909"
  },
  {
    "text": "dog food cluster so that each time we add an experiment each time we add a",
    "start": "1246909",
    "end": "1252830"
  },
  {
    "text": "flag we don't have to think we don't have to say ah well I should create a dashboard comparing the before and after mo of my experiment it just gets a lot",
    "start": "1252830",
    "end": "1259639"
  },
  {
    "text": "it just gets added along with everything all right there where all of our",
    "start": "1259639",
    "end": "1264889"
  },
  {
    "text": "top-line metrics are mapped to the flags that I might care about at this point in time one of our examples elaborate well",
    "start": "1264889",
    "end": "1274549"
  },
  {
    "text": "a lot of our feature flags are used for UX reasons anytime you make changes to our storage engine we're trying to be",
    "start": "1274549",
    "end": "1280279"
  },
  {
    "text": "very careful about how we roll it out in a while back we made a change to our how",
    "start": "1280279",
    "end": "1286220"
  },
  {
    "text": "we stored strings how we compress strings and how we stored the Mon disk and it was intended to be to make things",
    "start": "1286220",
    "end": "1293149"
  },
  {
    "text": "a lot more flexible but it was it was very explicitly not intended to have a performance impact on writes especially",
    "start": "1293149",
    "end": "1299740"
  },
  {
    "text": "so okay twitchy change something wanted to roll out very carefully and we decided to",
    "start": "1299740",
    "end": "1306169"
  },
  {
    "text": "roll it out to particular datasets and customers have multiple data sets each dataset is on at least three partitions",
    "start": "1306169",
    "end": "1313050"
  },
  {
    "text": "so we wanted to target per dataset rollout because it let us localize",
    "start": "1313050",
    "end": "1320690"
  },
  {
    "text": "notice localize the impact something went wrong you know we'd say okay we'll start with a very low priority data set",
    "start": "1320690",
    "end": "1327120"
  },
  {
    "text": "and it also let us check the distributed case right this is something that you",
    "start": "1327120",
    "end": "1332280"
  },
  {
    "text": "wouldn't that would be harder to test if we're old code out one note at a time we really wanted to make sure that our new",
    "start": "1332280",
    "end": "1337530"
  },
  {
    "text": "code would work across multiple nodes so started we picked these metrics through",
    "start": "1337530",
    "end": "1344430"
  },
  {
    "text": "the boat threw them up not at all just on laptops and this is checking the",
    "start": "1344430",
    "end": "1349980"
  },
  {
    "text": "overall volume of Rights as well as well as the cumulative latency of the batches",
    "start": "1349980",
    "end": "1355010"
  },
  {
    "text": "and we were immediately able to take these metrics and break them down by is",
    "start": "1355010",
    "end": "1360840"
  },
  {
    "text": "this data set being impacted by this flag or is it not this graphs purple line this this dotted line that middle",
    "start": "1360840",
    "end": "1367680"
  },
  {
    "text": "shows us flipping the flag from 20% to 90% this is actually a little bit past we wanted to target one data set we can",
    "start": "1367680",
    "end": "1375840"
  },
  {
    "text": "see the volume of Rights in the experiment go way up and the latency of both go way up or go a little bit up in",
    "start": "1375840",
    "end": "1383880"
  },
  {
    "text": "that bottom graph so that was a concern until we dug a little bit further found",
    "start": "1383880",
    "end": "1390270"
  },
  {
    "text": "okay there is a correlation between write speed and the size of the write",
    "start": "1390270",
    "end": "1395520"
  },
  {
    "text": "batch and if we break down by that as well we end up with four lines in the",
    "start": "1395520",
    "end": "1401400"
  },
  {
    "text": "experiment not an experiment large batch small batch and we could find that in",
    "start": "1401400",
    "end": "1406470"
  },
  {
    "text": "fact okay we feel okay that our feature flag did not in fact have a significant impact on performance it's a little",
    "start": "1406470",
    "end": "1414420"
  },
  {
    "text": "nervous strange case if anyone is very curious find me later I can point you to a blog post that describes us in gory",
    "start": "1414420",
    "end": "1420270"
  },
  {
    "text": "detail okay and finally the watch face the I think",
    "start": "1420270",
    "end": "1425970"
  },
  {
    "start": "1422000",
    "end": "1522000"
  },
  {
    "text": "everything is working everything should be fine let's maybe preserve this in a",
    "start": "1425970",
    "end": "1431220"
  },
  {
    "text": "dashboard or something to make sure that it continues being fine I almost didn't include this because as we saw with a",
    "start": "1431220",
    "end": "1437400"
  },
  {
    "text": "show of hands people are likely already doing this and this is something that",
    "start": "1437400",
    "end": "1442440"
  },
  {
    "text": "you know as young developers we were taught monitor product by staring at dashboards scrolling",
    "start": "1442440",
    "end": "1448410"
  },
  {
    "text": "through dashboards trying to find lines that change and figuring out why okay",
    "start": "1448410",
    "end": "1455810"
  },
  {
    "text": "but when we're trying to figure out why something changed what is the number one",
    "start": "1455810",
    "end": "1462030"
  },
  {
    "text": "source of chaos in a system humans either users doing their user thing or",
    "start": "1462030",
    "end": "1469920"
  },
  {
    "text": "us software engineers software developers pushing new code and as such",
    "start": "1469920",
    "end": "1477180"
  },
  {
    "text": "this is one of the things that I have found to be absolutely necessary when I",
    "start": "1477180",
    "end": "1482910"
  },
  {
    "text": "start looking at dashboards when I look at anything that tries to tell me about my the health of my system I need to be",
    "start": "1482910",
    "end": "1488040"
  },
  {
    "text": "able to line up what that means to what I have shipped what what I've acted",
    "start": "1488040",
    "end": "1495980"
  },
  {
    "text": "state of the art for this these days seems to be like drawing a line on a graph saying this is when the code was",
    "start": "1495980",
    "end": "1501270"
  },
  {
    "text": "deployed or matching up time lines but a line isn't enough often I you know I I",
    "start": "1501270",
    "end": "1508920"
  },
  {
    "text": "can't count the number of times either deploy has taken an hour half an hour",
    "start": "1508920",
    "end": "1514500"
  },
  {
    "text": "much longer than I expected or there's one node stuck somewhere on some old build throwing errors until I can't fit",
    "start": "1514500",
    "end": "1520860"
  },
  {
    "text": "until I can figure out why so first when",
    "start": "1520860",
    "end": "1526140"
  },
  {
    "start": "1522000",
    "end": "1711000"
  },
  {
    "text": "we're watching when we're monitoring when we're making sure that things are stable the whole point is making sure that reality lines up with expectations",
    "start": "1526140",
    "end": "1532140"
  },
  {
    "text": "right ah okay we expect the line to kind of stay stable why is it not but we need",
    "start": "1532140",
    "end": "1537930"
  },
  {
    "text": "to do so in terms that we understand I mentioned that Ofsted split earlier if",
    "start": "1537930",
    "end": "1543510"
  },
  {
    "text": "an office person comes to me and says hey Christine I noticed that CPU is high since you shoot that code yesterday",
    "start": "1543510",
    "end": "1550230"
  },
  {
    "text": "what's going on I can't immediately tie that back to what I need to fix you know",
    "start": "1550230",
    "end": "1558270"
  },
  {
    "text": "how to translate that to the actual line of code that needs to be tracked down reverted whatever what I could",
    "start": "1558270",
    "end": "1564660"
  },
  {
    "text": "understand is someone coming and saying hey I noticed that latency really",
    "start": "1564660",
    "end": "1570120"
  },
  {
    "text": "increased on that one endpoint for our most popular customer for our largest customer that tells me not only and you",
    "start": "1570120",
    "end": "1577950"
  },
  {
    "text": "know in the latest build tells me not only when in history to look for that that that change that",
    "start": "1577950",
    "end": "1583530"
  },
  {
    "text": "maybe needs to be reverted but also where and for which cases here's an",
    "start": "1583530",
    "end": "1590520"
  },
  {
    "text": "example this is the different lines are the different deploys and we can actually see these were deploys roll out",
    "start": "1590520",
    "end": "1598940"
  },
  {
    "text": "roll in and you can see the switchover happen and this makes it painfully",
    "start": "1598940",
    "end": "1603960"
  },
  {
    "text": "obvious that apparently we have one one build or one at least one server ya know",
    "start": "1603960",
    "end": "1609780"
  },
  {
    "text": "we had fifteen servers that olive line at the bottom that don't seem to be getting new deploys it's kind of strange",
    "start": "1609780",
    "end": "1617720"
  },
  {
    "text": "maybe I'll look into it here's a more dramatic example this is from when I was",
    "start": "1617720",
    "end": "1625110"
  },
  {
    "text": "rolling out of storage I didn't chain change again making a change to how they",
    "start": "1625110",
    "end": "1630690"
  },
  {
    "text": "were talking to each other a little bit nervous about what was going to happen so watching our top-line metrics very",
    "start": "1630690",
    "end": "1636000"
  },
  {
    "text": "carefully and this is latency for reads so query times shouldn't be impacted by",
    "start": "1636000",
    "end": "1642450"
  },
  {
    "text": "this change but I was watching and they were by breaking down by build I was",
    "start": "1642450",
    "end": "1649950"
  },
  {
    "text": "able to pinpoint the build that caused the core latency to go up that confirms",
    "start": "1649950",
    "end": "1656790"
  },
  {
    "text": "that yes indeed my change was in it but so was someone else's so was someone else has changed to the storage engine I",
    "start": "1656790",
    "end": "1663480"
  },
  {
    "text": "was able to go to them point it out you can see where they reverted it everything is fine and when you think",
    "start": "1663480",
    "end": "1671040"
  },
  {
    "text": "about the sorts of tool observability tools that are targeted for developers or built for developers they tend to",
    "start": "1671040",
    "end": "1679440"
  },
  {
    "text": "speak our language right language of builds and endpoints users but those",
    "start": "1679440",
    "end": "1687150"
  },
  {
    "text": "tools are often not flexible enough for ops folks so if we just start to remember to fold some of the nouns that",
    "start": "1687150",
    "end": "1693930"
  },
  {
    "text": "matter to us some of the vocabulary that matters to us into into tools that are",
    "start": "1693930",
    "end": "1699240"
  },
  {
    "text": "flexible enough we can share a view into the world we can share the same view into the world and we can both start to",
    "start": "1699240",
    "end": "1705930"
  },
  {
    "text": "educate each other about what does production doing how does this map back to the code that's how we bridge this",
    "start": "1705930",
    "end": "1712770"
  },
  {
    "text": "gap that's how we start thinking about what happens after prod form hypotheses we",
    "start": "1712770",
    "end": "1719580"
  },
  {
    "text": "had dated if necessary week where that data to validate or invalidate what we what we thought would happen we repeat",
    "start": "1719580",
    "end": "1726840"
  },
  {
    "text": "we take action and so yes in the end the things that we deal with day to day may",
    "start": "1726840",
    "end": "1732270"
  },
  {
    "text": "be different depending on which end of the spectrum we're on but we have to build bridges that build us together that bring us together together we will",
    "start": "1732270",
    "end": "1740370"
  },
  {
    "start": "1739000",
    "end": "1776000"
  },
  {
    "text": "ask new questions about our systems I especially liked this this blast radius",
    "start": "1740370",
    "end": "1746670"
  },
  {
    "text": "phrase which came out of the mouth of an ops person because traditionally because apparently they think of code that we we",
    "start": "1746670",
    "end": "1753900"
  },
  {
    "text": "ship as having the potential to blow up because they have to deal with it and it's something from that side of the",
    "start": "1753900",
    "end": "1759990"
  },
  {
    "text": "room and the more we start internalizing that the more we start taking that back and owning it maybe it'll stop being a",
    "start": "1759990",
    "end": "1767460"
  },
  {
    "text": "blast or an explosion and it'll more be like ripples that are carefully controlled in a nicely wolof environment",
    "start": "1767460",
    "end": "1776150"
  },
  {
    "start": "1776000",
    "end": "1829000"
  },
  {
    "text": "okay so Christine we've gone through all these different cases of what what you",
    "start": "1776150",
    "end": "1783420"
  },
  {
    "text": "can do when you have all of this data there how do we get from here to there how do we get from maybe where where",
    "start": "1783420",
    "end": "1790500"
  },
  {
    "text": "ever folks are today to this wonderfully observable system without spending a month instrumenting all of our services netting new data a few parts of this or",
    "start": "1790500",
    "end": "1799140"
  },
  {
    "text": "run through these first three are all about getting data in how to incremental",
    "start": "1799140",
    "end": "1805290"
  },
  {
    "text": "e get our systems generating data in a way that we want that is actionable in",
    "start": "1805290",
    "end": "1810840"
  },
  {
    "text": "kind of increasing layers of specificity we'll talk about how the way that you",
    "start": "1810840",
    "end": "1816810"
  },
  {
    "text": "think about interacting with that data might have to change and finally a new",
    "start": "1816810",
    "end": "1822020"
  },
  {
    "text": "beautifully developed I mean you beautifully develop a friendly approach to the whole space which some of you may",
    "start": "1822020",
    "end": "1828480"
  },
  {
    "text": "be doing already will get there so best practices for instrumentation capturing",
    "start": "1828480",
    "end": "1834360"
  },
  {
    "start": "1829000",
    "end": "1882000"
  },
  {
    "text": "context in a structured way what this means is capturing metadata as the code",
    "start": "1834360",
    "end": "1840570"
  },
  {
    "text": "is being executed so ideally we have everything in one place ready for analysis oh that's lovely",
    "start": "1840570",
    "end": "1846960"
  },
  {
    "text": "it's especially lovely about this blob of key value pairs describing an HTTP",
    "start": "1846960",
    "end": "1852300"
  },
  {
    "text": "request to I guess a web app is that we have not just how long the request took",
    "start": "1852300",
    "end": "1858530"
  },
  {
    "text": "72 milliseconds we also have over those 72 milliseconds how much time it spend the database how",
    "start": "1858530",
    "end": "1864540"
  },
  {
    "text": "much time is spent rendering and this is the sort of thing that makes it really easy later to do real correlations to do",
    "start": "1864540",
    "end": "1871830"
  },
  {
    "text": "real sort of cause and effect analysis what it matters knowing that those three",
    "start": "1871830",
    "end": "1878700"
  },
  {
    "text": "timers are co-located on this one request establishing a common set of",
    "start": "1878700",
    "end": "1883890"
  },
  {
    "text": "nouns consistent naming we talked a couple times already about the nouns",
    "start": "1883890",
    "end": "1889230"
  },
  {
    "text": "your business might care about maybe customer ID maybe a shopping cart whatever but establishing that common",
    "start": "1889230",
    "end": "1896220"
  },
  {
    "text": "set of nouns across your engineering team and kind of nailing a naming pattern will just make your life easier",
    "start": "1896220",
    "end": "1903180"
  },
  {
    "text": "so that you're not trying to figure out why one person used app underscore ID over here another person used app",
    "start": "1903180",
    "end": "1910050"
  },
  {
    "text": "capelin camelcase ID over there a third person use application - ID in a third place it helps future us not hate past",
    "start": "1910050",
    "end": "1918450"
  },
  {
    "text": "us and by making sure that these these these nouns match map to a consistent",
    "start": "1918450",
    "end": "1923880"
  },
  {
    "text": "set of metadata hostname customer ID build ID whatever patterns start to",
    "start": "1923880",
    "end": "1929910"
  },
  {
    "text": "evolve in our debugging it helps it make sure that whatever part of the system we're looking at whatever problem we're",
    "start": "1929910",
    "end": "1935040"
  },
  {
    "text": "trying to solve we know which columns to reach for instrumenting from the",
    "start": "1935040",
    "end": "1940590"
  },
  {
    "text": "perspective of what you can control okay let's do the again the standard web app",
    "start": "1940590",
    "end": "1946350"
  },
  {
    "text": "as an example by instrumenting our application we can know a little bit about what arguments are sent to it by",
    "start": "1946350",
    "end": "1952680"
  },
  {
    "text": "the user on any given HTTP request some metadata about how the code was executing where it was executing and",
    "start": "1952680",
    "end": "1960060"
  },
  {
    "text": "what was returned but what about this database this black box over here what's",
    "start": "1960060",
    "end": "1966840"
  },
  {
    "text": "happening in there yes my sequel Postgres might all be open-source but i'm not maintaining a fork just to",
    "start": "1966840",
    "end": "1973770"
  },
  {
    "text": "invent it well okay I can't get inside",
    "start": "1973770",
    "end": "1979800"
  },
  {
    "text": "of it but what I can know is what my application what my application is",
    "start": "1979800",
    "end": "1985380"
  },
  {
    "text": "sending to it what queries it's running where those queries are being run from and I probably know things about how how",
    "start": "1985380",
    "end": "1993000"
  },
  {
    "text": "successful it was how long it took how many of the things were how many results returned and once we start to have a",
    "start": "1993000",
    "end": "2000529"
  },
  {
    "text": "record of the inputs and outputs from the apps perspective we can start to get an idea of the baby behavior of this",
    "start": "2000529",
    "end": "2007399"
  },
  {
    "text": "black box and how my application impacts it so in thinking about starting to",
    "start": "2007399",
    "end": "2015379"
  },
  {
    "text": "instrument we typically start asking folks by asking folks to describe what",
    "start": "2015379",
    "end": "2020509"
  },
  {
    "text": "their system does and what their what this what their unit of work is where it enters the system for a web map example",
    "start": "2020509",
    "end": "2026960"
  },
  {
    "text": "a unit of work is an HTTP request maybe that's different if you're managing a pipeline or some some other",
    "start": "2026960",
    "end": "2033080"
  },
  {
    "text": "sort of shaped system what's your unit of work and the web app where does it",
    "start": "2033080",
    "end": "2038990"
  },
  {
    "text": "enter HTTP handler great that's where you start that's where you put your first hooks in for capturing metadata",
    "start": "2038990",
    "end": "2045440"
  },
  {
    "text": "baseline about your unit of work and again in the basic web app that that",
    "start": "2045440",
    "end": "2051829"
  },
  {
    "text": "baseline for metadata for instrumentation just what HTTP attributes are there what is the",
    "start": "2051829",
    "end": "2056868"
  },
  {
    "text": "standard way of describing that unit of work then identify metadata that will",
    "start": "2056869",
    "end": "2064010"
  },
  {
    "text": "help you isolate unexpected behavior in your business logic great we've got this",
    "start": "2064010",
    "end": "2071329"
  },
  {
    "text": "baseline let's set that aside what makes your application interesting what will help you narrow down certain",
    "start": "2071329",
    "end": "2079490"
  },
  {
    "text": "causes isolate issues when you're trying to debug something this is things like",
    "start": "2079490",
    "end": "2085250"
  },
  {
    "text": "where's the code running okay this one host is a teaching micro and everything",
    "start": "2085250",
    "end": "2090858"
  },
  {
    "text": "is beeping machines thing is okay this one machine is having a problem it's",
    "start": "2090859",
    "end": "2097190"
  },
  {
    "text": "what what code is actually deployed what is the what is the what is the build",
    "start": "2097190",
    "end": "2102920"
  },
  {
    "text": "which feature flags are enabled what version of code is running because it's sure not master what metadata about our",
    "start": "2102920",
    "end": "2111619"
  },
  {
    "text": "business will impact the the flow of the logic again maybe it's customer shopping cart",
    "start": "2111619",
    "end": "2117810"
  },
  {
    "text": "maybe it's the state of the blogpost something but these are the sorts of",
    "start": "2117810",
    "end": "2123030"
  },
  {
    "text": "things that often impact like the fork in the in the logic in your code which",
    "start": "2123030",
    "end": "2128160"
  },
  {
    "text": "could pass a lit will go down and finally capturing things about the",
    "start": "2128160",
    "end": "2133380"
  },
  {
    "text": "execution like what is actually being executed things like what's in the payload what are the timers which black",
    "start": "2133380",
    "end": "2143790"
  },
  {
    "text": "box are you talking to a couple battle scars from our past where you know we're",
    "start": "2143790",
    "end": "2150750"
  },
  {
    "text": "trying to figure out why solid tenth of our API requests are failing and and having information about which database",
    "start": "2150750",
    "end": "2158040"
  },
  {
    "text": "cluster it's talking to makes it really easy to find out ah okay everything that's failing is talking to this one",
    "start": "2158040",
    "end": "2163740"
  },
  {
    "text": "database cluster that tells us where to look for the problem and be willing to",
    "start": "2163740",
    "end": "2170340"
  },
  {
    "text": "experiment we talked about these sort of ad hoc ephemeral queries that that we",
    "start": "2170340",
    "end": "2176520"
  },
  {
    "text": "run not because we know something is wrong but because we want to know something about the system because we're working on a feature or working on a bug",
    "start": "2176520",
    "end": "2182850"
  },
  {
    "text": "fix that talks about a certain part of the system so be willing to add something temporary just try it out",
    "start": "2182850",
    "end": "2188940"
  },
  {
    "text": "a lot of the examples that we ran through earlier all depend on a feature",
    "start": "2188940",
    "end": "2194850"
  },
  {
    "text": "flag that will be short that will only live for a couple weeks some some field",
    "start": "2194850",
    "end": "2199950"
  },
  {
    "text": "that we had to add in parallel the code being written simpler and smoother it is for us to add this sort of metadata",
    "start": "2199950",
    "end": "2206100"
  },
  {
    "text": "on-the-fly the more we're likely to use it when we're actually trying to answer questions and the flipside clean your",
    "start": "2206100",
    "end": "2213780"
  },
  {
    "text": "clean things up if they're no longer valuable except that nothing is set in",
    "start": "2213780",
    "end": "2219240"
  },
  {
    "text": "stone at least of all instrumentation the field isn't useful anymore get rid of it if it might be it might still be",
    "start": "2219240",
    "end": "2225480"
  },
  {
    "text": "useful keep around our API server instrumentation probably has somewhere",
    "start": "2225480",
    "end": "2231260"
  },
  {
    "text": "above a hundred different fields for every HTTP request and has like 15 different timers because over the course",
    "start": "2231260",
    "end": "2238020"
  },
  {
    "text": "of debugging this thing we've we've identified ah it's actually really useful to know that how much time we're",
    "start": "2238020",
    "end": "2243810"
  },
  {
    "text": "spending JSON encoding how much time we're spending talking so we can debug things in the future",
    "start": "2243810",
    "end": "2250609"
  },
  {
    "text": "okay so to ground these concepts in reality what is it like to actually try to migrate from maybe where we're at",
    "start": "2250609",
    "end": "2257520"
  },
  {
    "text": "today I'm sure unstructured text vlogs I'm gonna talk specifically about log lines",
    "start": "2257520",
    "end": "2263690"
  },
  {
    "text": "as developers I feel like it's still what we reach for first and certainly what a lot of our libraries a little",
    "start": "2263690",
    "end": "2269190"
  },
  {
    "text": "output so when migrating from something unstructured first pulling in those",
    "start": "2269190",
    "end": "2276660"
  },
  {
    "start": "2270000",
    "end": "2454000"
  },
  {
    "text": "things that will help us debug and putting them in as kind of non-destructively as possible this is",
    "start": "2276660",
    "end": "2282330"
  },
  {
    "text": "our first step towards that common set of nouns and especially if you're operating in a world where you're trying",
    "start": "2282330",
    "end": "2288090"
  },
  {
    "text": "to make improvements without disrupting what folks are currently relying on this is the this is a great step because it's",
    "start": "2288090",
    "end": "2293880"
  },
  {
    "text": "it can be purely additive and it might this is the part where you want folks to",
    "start": "2293880",
    "end": "2301470"
  },
  {
    "text": "start thinking about okay yes I see the left-hand side is about a task timing",
    "start": "2301470",
    "end": "2307140"
  },
  {
    "text": "out but what metadata can I add to make this log line still useful out of",
    "start": "2307140",
    "end": "2312810"
  },
  {
    "text": "context or by itself what is the context that we would want to add to to learn more about this to dig in further second",
    "start": "2312810",
    "end": "2323190"
  },
  {
    "text": "start introducing a little bit more structure it's usually possible to do",
    "start": "2323190",
    "end": "2328500"
  },
  {
    "text": "this in a non-destructive way maybe maybe ask around if folks if folks are",
    "start": "2328500",
    "end": "2334200"
  },
  {
    "text": "relying on a particular substring search but most most languages have have really great structured logging libraries love",
    "start": "2334200",
    "end": "2341849"
  },
  {
    "text": "log risks and go net Sarah log here is great finding something that works for",
    "start": "2341849",
    "end": "2347070"
  },
  {
    "text": "you and and migrating slowly will set up good habits and and set you up for being",
    "start": "2347070",
    "end": "2355530"
  },
  {
    "text": "able to analyze your logs in a smarter way and finally starting to think about",
    "start": "2355530",
    "end": "2361890"
  },
  {
    "text": "building up context rather than omitting checkpoints log lines really are a bunch",
    "start": "2361890",
    "end": "2367230"
  },
  {
    "text": "of checkpoints right it's hey this thing happened after this thing happened but",
    "start": "2367230",
    "end": "2373680"
  },
  {
    "text": "to get more out of our analysis we're going to want to start trending towards",
    "start": "2373680",
    "end": "2378839"
  },
  {
    "text": "bundling up these related law into something that maps to that unit of work that we talked about folks asked us",
    "start": "2378839",
    "end": "2386530"
  },
  {
    "text": "as honeycomb all the time how to correlate these disjoint log lines in a file especially if they're interleaved",
    "start": "2386530",
    "end": "2392910"
  },
  {
    "text": "our answer is usually yeah well if you're a data analyst you've got lots of time and no access to the code maybe the",
    "start": "2392910",
    "end": "2400150"
  },
  {
    "text": "answer is better string processing and layers of layers of MapReduce and and self joins but if you're a developer god",
    "start": "2400150",
    "end": "2408340"
  },
  {
    "text": "acts as a code best way to handle disjoint log lines is to make them not disjoint is to put that context together",
    "start": "2408340",
    "end": "2416470"
  },
  {
    "text": "pull that context together at the source so instead of emitting something for in",
    "start": "2416470",
    "end": "2421720"
  },
  {
    "text": "cue something for timeout hey consider passing the context through passing identifiers around so that you",
    "start": "2421720",
    "end": "2428740"
  },
  {
    "text": "can describe the amount of time queued amount of time and told time out whatever something that describes how",
    "start": "2428740",
    "end": "2435580"
  },
  {
    "text": "the unit of work progressed yes you'll have to pass some more contacts around you'll have to pass some identifiers",
    "start": "2435580",
    "end": "2440859"
  },
  {
    "text": "around maybe through your function may be through helper functions but every language has support for this go has its",
    "start": "2440859",
    "end": "2448000"
  },
  {
    "text": "standard library context package Java and Ruby has thread locals it's worth it",
    "start": "2448000",
    "end": "2455160"
  },
  {
    "start": "2454000",
    "end": "2565000"
  },
  {
    "text": "how did the earliest developers use logs they use their eyeballs and eventually",
    "start": "2457500",
    "end": "2463780"
  },
  {
    "text": "they used grip but that was like 20 years ago 25 years ago right doesn't it",
    "start": "2463780",
    "end": "2470200"
  },
  {
    "text": "make sense that as our software evolves as our requirements for the software development process evolve that the the",
    "start": "2470200",
    "end": "2476500"
  },
  {
    "text": "tools and the process for how we figure out what's what it's doing should evolve as well yes you might be able to use",
    "start": "2476500",
    "end": "2485200"
  },
  {
    "text": "your eyeballs and figure out when something happened how often someone with example.com",
    "start": "2485200",
    "end": "2491230"
  },
  {
    "text": "email address domain got emailed but imagine trying to figure out frequencies or trends or deviations without twisting",
    "start": "2491230",
    "end": "2499780"
  },
  {
    "text": "yourself into a pretzel chaining together a whole bunch of bash commands to process these log files logs are easy",
    "start": "2499780",
    "end": "2507880"
  },
  {
    "text": "for humans to read and it's great makes sense when the volume of requests",
    "start": "2507880",
    "end": "2513999"
  },
  {
    "text": "for any single program fairly small what's running on your machine but in",
    "start": "2513999",
    "end": "2519069"
  },
  {
    "text": "today's production world logs are no longer human scale their machine scale we need machines to help us make sense",
    "start": "2519069",
    "end": "2525819"
  },
  {
    "text": "of them it's one of my esteemed colleagues says search make sense for",
    "start": "2525819",
    "end": "2531339"
  },
  {
    "text": "logs search used to make sense for logs search make sense for webpages but there",
    "start": "2531339",
    "end": "2537009"
  },
  {
    "text": "is no PageRank PageRank for log data and our search terms are necessarily evolving and visualizations are becoming",
    "start": "2537009",
    "end": "2546849"
  },
  {
    "text": "more necessary to identify those outliers figure out whether it's a trend and anomaly whether how worried we",
    "start": "2546849",
    "end": "2552969"
  },
  {
    "text": "should be because having machines help us make sense of that data it means visualizing means helping us use our",
    "start": "2552969",
    "end": "2559029"
  },
  {
    "text": "eyeballs to pick out trends in a smart way rather than scrolling past log lines",
    "start": "2559029",
    "end": "2565469"
  },
  {
    "start": "2565000",
    "end": "2676000"
  },
  {
    "text": "because imagine we're taking our web app trying to figure out why things have",
    "start": "2565469",
    "end": "2571539"
  },
  {
    "text": "gotten slow okay well fortunately in our log lines we've so far we have all this nice metadata to work with which customer it is how long",
    "start": "2571539",
    "end": "2578109"
  },
  {
    "text": "it took a little bit about where where this request hit and this log line might be useful and help me in my development",
    "start": "2578109",
    "end": "2584079"
  },
  {
    "text": "environment it starts to scale really poorly when trying to figure things out in production even when we're only",
    "start": "2584079",
    "end": "2590349"
  },
  {
    "text": "handling a few requests per second instead imagine being able to visualize",
    "start": "2590349",
    "end": "2596829"
  },
  {
    "text": "the actual distribution of Layton sees the x-axis here again is time y-axis is",
    "start": "2596829",
    "end": "2603159"
  },
  {
    "text": "how long each request took the color of the dot is how many how many dots fell",
    "start": "2603159",
    "end": "2608499"
  },
  {
    "text": "into that bucket and this right hand side tells me okay within the last 15",
    "start": "2608499",
    "end": "2613929"
  },
  {
    "text": "minutes or so requests have gotten much slower than usual but beyond this visualization what I can",
    "start": "2613929",
    "end": "2620529"
  },
  {
    "text": "do is I can say ah well this this cluster in the upper right hand corner is what's interesting those requests are",
    "start": "2620529",
    "end": "2626889"
  },
  {
    "text": "are strange to tell me more about them with all of those fields that were",
    "start": "2626889",
    "end": "2632499"
  },
  {
    "text": "captured in the log lines tell me which ones are represented more inside that",
    "start": "2632499",
    "end": "2637539"
  },
  {
    "text": "interesting square versus outside ah looks like one endpoint is adversely",
    "start": "2637539",
    "end": "2642819"
  },
  {
    "text": "affected and one user ID interesting let me go dig in there",
    "start": "2642819",
    "end": "2648040"
  },
  {
    "text": "and I can do things like isolate which user it is by by getting our data in a",
    "start": "2648040",
    "end": "2653770"
  },
  {
    "text": "shape where smart tools can take advantage of them instead of relying on all these disjoint log-log lines and",
    "start": "2653770",
    "end": "2659980"
  },
  {
    "text": "trying to try and grep across them we can start to do really smart things like",
    "start": "2659980",
    "end": "2665290"
  },
  {
    "text": "this and make it easier to figure out where to start looking whoo-hoo some degenerate some degenerate",
    "start": "2665290",
    "end": "2674260"
  },
  {
    "text": "symptom is affecting and finally oh goodness",
    "start": "2674260",
    "end": "2680490"
  },
  {
    "start": "2676000",
    "end": "2903000"
  },
  {
    "text": "talk alright folks are talking a lot these days about tracing and they're",
    "start": "2680490",
    "end": "2688150"
  },
  {
    "text": "talking a lot about them as something for distributed or concurrent systems and there's in fact a talk in this room",
    "start": "2688150",
    "end": "2693880"
  },
  {
    "text": "immediately after this about that yes they're great for concurrent distributed systems they're also great",
    "start": "2693880",
    "end": "2699580"
  },
  {
    "text": "for any complex system because for that side of the room and known in here",
    "start": "2699580",
    "end": "2706770"
  },
  {
    "text": "believe it or not some complex systems are monoliths sometimes it's just as interesting to trace inside a process to",
    "start": "2706770",
    "end": "2713350"
  },
  {
    "text": "figure out what it's doing and why it's doing that so let's say let's say we",
    "start": "2713350",
    "end": "2720910"
  },
  {
    "text": "start with these tax logs task logs that we've been looking at and we've attached task IDs it ends up not being so much of",
    "start": "2720910",
    "end": "2729880"
  },
  {
    "text": "a stretch of the imagination to say uh Christine these things that you talked about earlier about building up context",
    "start": "2729880",
    "end": "2735700"
  },
  {
    "text": "and rolling them up I don't wanna think about those at all let me instead explore tracing and it",
    "start": "2735700",
    "end": "2741970"
  },
  {
    "text": "said group these log lines by which tasks they were a part of and clearly",
    "start": "2741970",
    "end": "2747940"
  },
  {
    "text": "indicate that the in queued line is the entry point of each cluster because the",
    "start": "2747940",
    "end": "2755770"
  },
  {
    "text": "nice thing about tracing an interesting thing about tracing is that a series of related log lines is actually quite a",
    "start": "2755770",
    "end": "2761980"
  },
  {
    "text": "bit like a trace traces really are just structured logs that have a few magic",
    "start": "2761980",
    "end": "2768040"
  },
  {
    "text": "fields that help tools create the structure and for the structure and visualize them they have a couple of",
    "start": "2768040",
    "end": "2774610"
  },
  {
    "text": "descriptors about where the code is where the code is executing they almost",
    "start": "2774610",
    "end": "2779710"
  },
  {
    "text": "always have a timer that in okay this log line is responsible for this amount of latency and they have",
    "start": "2779710",
    "end": "2785670"
  },
  {
    "text": "some magic identifiers that help help basically pull together the structure of",
    "start": "2785670",
    "end": "2791099"
  },
  {
    "text": "the log lines and so with all of these you can take your log lines and create",
    "start": "2791099",
    "end": "2799049"
  },
  {
    "text": "some structure create a visualization tie them together into a trace so let's",
    "start": "2799049",
    "end": "2804660"
  },
  {
    "text": "say we're trying to figure out how particular service is behaving maybe why",
    "start": "2804660",
    "end": "2810180"
  },
  {
    "text": "something is slow maybe why something's exhibiting some other behavior we can start from our high-level query to",
    "start": "2810180",
    "end": "2815279"
  },
  {
    "text": "visualize trends find an interesting trace and now we can look inside this",
    "start": "2815279",
    "end": "2821489"
  },
  {
    "text": "one specific service get all this wonderful metadata about what each of",
    "start": "2821489",
    "end": "2826710"
  },
  {
    "text": "these what each of these calls function calls represented and understand",
    "start": "2826710",
    "end": "2832319"
  },
  {
    "text": "immediately the structure and the execution of our code by identifying",
    "start": "2832319",
    "end": "2839819"
  },
  {
    "text": "these business relevant fields establishing these common standards and",
    "start": "2839819",
    "end": "2845269"
  },
  {
    "text": "thinking in terms of aggregates and trends there's a whole lot from these",
    "start": "2845269",
    "end": "2851729"
  },
  {
    "text": "instrumentation observability or best practices that translate directly to making traces awesome making working",
    "start": "2851729",
    "end": "2858269"
  },
  {
    "text": "with traces be awesome and if you're if you're like man my engineering team is",
    "start": "2858269",
    "end": "2864359"
  },
  {
    "text": "stuck and just using text logs some countries skipped landlines and went straight to you know cell phones maybe",
    "start": "2864359",
    "end": "2871229"
  },
  {
    "text": "this is the leap that your your team will do because tracing observability",
    "start": "2871229",
    "end": "2877469"
  },
  {
    "text": "these are understanding tools these are tools and a way for the code author to",
    "start": "2877469",
    "end": "2883680"
  },
  {
    "text": "communicate the structure of the code how it's behaving to people who are just",
    "start": "2883680",
    "end": "2889170"
  },
  {
    "text": "looking at the artifacts and tracing is going to become commonplace and so it's",
    "start": "2889170",
    "end": "2894690"
  },
  {
    "text": "a qualm if it's the quantum leap that you need to get to understanding your production software awesome",
    "start": "2894690",
    "end": "2901589"
  },
  {
    "text": "explore it instrumentation and observability shouldn't just be checkboxes for after you deploy or you",
    "start": "2901589",
    "end": "2909180"
  },
  {
    "start": "2903000",
    "end": "2999000"
  },
  {
    "text": "know satisfy reliability check with the ops team they are continual can",
    "start": "2909180",
    "end": "2914580"
  },
  {
    "text": "you know things we should be investing in to keep us grounded with what's normal what's really happening and by",
    "start": "2914580",
    "end": "2920250"
  },
  {
    "text": "capturing more lightweight transient information and prod we can be better",
    "start": "2920250",
    "end": "2925710"
  },
  {
    "text": "informed make better choices better software so our mission I'd like you to leave with stop writing software based",
    "start": "2925710",
    "end": "2933660"
  },
  {
    "text": "on intuition stop backing it up with data get a little more ammunition to argue with your p.m. about because",
    "start": "2933660",
    "end": "2942900"
  },
  {
    "text": "software engineers software developers have the most to gain from observability",
    "start": "2942900",
    "end": "2948260"
  },
  {
    "text": "we by teaching our tools to speak our language rather than just soft language",
    "start": "2948260",
    "end": "2953550"
  },
  {
    "text": "we can use we can reap all the benefits because observability should be a core",
    "start": "2953550",
    "end": "2960300"
  },
  {
    "text": "part how we build software whoo we're building it for we have the ability to",
    "start": "2960300",
    "end": "2965880"
  },
  {
    "text": "use data to ship better software make the experience better for all of our users thank you I sorry we're so close",
    "start": "2965880",
    "end": "2976050"
  },
  {
    "text": "the end of time over time I will be around for questions and before the next session this is my contact information",
    "start": "2976050",
    "end": "2981990"
  },
  {
    "text": "my DNS are open I will also be around the conference the next few days so please come find me I'd be happy to talk more about this or show",
    "start": "2981990",
    "end": "2989010"
  },
  {
    "text": "you more examples thank you [Applause]",
    "start": "2989010",
    "end": "2998440"
  }
]