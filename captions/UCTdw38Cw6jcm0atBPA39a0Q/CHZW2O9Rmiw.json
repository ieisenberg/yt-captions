[
  {
    "text": "good morning everyone and welcome to this talk about functional programming and web",
    "start": "4120",
    "end": "10200"
  },
  {
    "text": "applications uh web application in this context in the con of this talk is on the server side uh you can do client",
    "start": "10200",
    "end": "18960"
  },
  {
    "text": "side applications with f shop as well with a product called Fable but that's out the scope for this",
    "start": "18960",
    "end": "25640"
  },
  {
    "text": "talk um but if you're interested in that you can just talk to afterwards and I can show you the two right",
    "start": "25640",
    "end": "33040"
  },
  {
    "text": "directions uh before I go any further how many of you know F almost like half and how many of you",
    "start": "33040",
    "end": "41559"
  },
  {
    "text": "know uh Suave like 10 something like that okay",
    "start": "41559",
    "end": "47480"
  },
  {
    "text": "that's good good to know uh my name is Tomas Johnson it's my Twitter hand handle there so if you have any",
    "start": "47480",
    "end": "53120"
  },
  {
    "text": "questions afterwards you can ping me and I try to answer as fast as possible and you can also like raise your hand during",
    "start": "53120",
    "end": "58680"
  },
  {
    "text": "the talk and I try to answer questions during the talk as well um I work here in Oslo at a company",
    "start": "58680",
    "end": "66720"
  },
  {
    "text": "called be um where I'm a manager but that's just a label I consider myself be",
    "start": "66720",
    "end": "73439"
  },
  {
    "text": "a developer as most of you guys uh I'm also the practice lead of",
    "start": "73439",
    "end": "79000"
  },
  {
    "text": "those net group at Beck and um yeah that's we do",
    "start": "79000",
    "end": "84840"
  },
  {
    "text": "basically uh my customer I work for is in the public sector so we I was say",
    "start": "84840",
    "end": "90680"
  },
  {
    "text": "last year talking where I said I want to do like 90% F programming in in 2016",
    "start": "90680",
    "end": "96840"
  },
  {
    "text": "that didn't happen I may be up to like 35 40% uh but it's a long process to take a",
    "start": "96840",
    "end": "105479"
  },
  {
    "text": "whole customer over to to FP and we have one project that's 100% F and we trying",
    "start": "105479",
    "end": "110799"
  },
  {
    "text": "to bring in bits and pieces to to other Solutions solution as well uh when I'm not working or relaxing",
    "start": "110799",
    "end": "119399"
  },
  {
    "text": "at home I'm also the lead of net User Group here in Oslo and also the initiator of the Uso FP group here in",
    "start": "119399",
    "end": "126880"
  },
  {
    "text": "Oslo so if you want if you're live in osow there's a Meetup for you",
    "start": "126880",
    "end": "132319"
  },
  {
    "text": "here uh I'm also a Microsoft MVP and a f Enthusiast at the",
    "start": "132319",
    "end": "141200"
  },
  {
    "text": "least so what is fshp and why should you",
    "start": "141200",
    "end": "146440"
  },
  {
    "text": "care uh the first part of that the question is quite easy to answer uh f is",
    "start": "146440",
    "end": "153440"
  },
  {
    "text": "something that came out of Microsoft research but now maintained by the F",
    "start": "153440",
    "end": "159120"
  },
  {
    "text": "Foundation uh it's a totally open source project so everyone can contribute to to",
    "start": "159120",
    "end": "165519"
  },
  {
    "text": "FP uh SARP so it's not like net where Microsoft is actually uh owning the",
    "start": "165519",
    "end": "172080"
  },
  {
    "text": "repos story it's it's a foundation that's owns the fpos it's a functional first language",
    "start": "172080",
    "end": "178080"
  },
  {
    "text": "based on the MMO uh language tree and it runs well on the net",
    "start": "178080",
    "end": "184120"
  },
  {
    "text": "platform uh with that it means both on the CLR mono and also on net",
    "start": "184120",
    "end": "192440"
  },
  {
    "text": "core uh net core is still on the like do core is not ready yet so it will will",
    "start": "192440",
    "end": "198319"
  },
  {
    "text": "work on core when it's ready so that's what f is so other part",
    "start": "198319",
    "end": "205000"
  },
  {
    "text": "of the question is why should you consider F I'm going to have like a really short uh introduction to why you",
    "start": "205000",
    "end": "212040"
  },
  {
    "text": "should before I go into the demos uh F has a really strong and solid",
    "start": "212040",
    "end": "218599"
  },
  {
    "text": "foundation I compare it usually to to C when I'm talking about this and and one",
    "start": "218599",
    "end": "224400"
  },
  {
    "text": "of the first thing is this really strong typing compared to to C which mean that",
    "start": "224400",
    "end": "229560"
  },
  {
    "text": "it's if it's compiles compiles it most likely run uh but that doesn't mean you don't",
    "start": "229560",
    "end": "237239"
  },
  {
    "text": "have have ever errors of course you can have errors in in application but you don't have any like stupid add at",
    "start": "237239",
    "end": "243319"
  },
  {
    "text": "least the next thing is is doesn't have any null support I have null support",
    "start": "243319",
    "end": "249480"
  },
  {
    "text": "because I have on the net but default you don't use null in F and tonar who",
    "start": "249480",
    "end": "256560"
  },
  {
    "text": "introduced null in al65 called that his billion dollar mistake and if you start",
    "start": "256560",
    "end": "262680"
  },
  {
    "text": "thinking about null it's really hard to reason about it they take a regular C list for example what does null mean for",
    "start": "262680",
    "end": "269880"
  },
  {
    "text": "a list is the list empty or did the method return the list fail or what",
    "start": "269880",
    "end": "275360"
  },
  {
    "text": "what's what does it mean that makes it hard for a developer to actually reason about",
    "start": "275360",
    "end": "280759"
  },
  {
    "text": "that and if you want to use null in in F you instead use a thing called option uh",
    "start": "280759",
    "end": "288000"
  },
  {
    "text": "which specifi that this can be a null and it's much more explicit the next thing about the making",
    "start": "288000",
    "end": "296320"
  },
  {
    "text": "a Sol solid foundation is it's immutable by default and that also makes it much",
    "start": "296320",
    "end": "301880"
  },
  {
    "text": "easier to reason about the code because you don't change the state all the time instead you just copy the state to a new",
    "start": "301880",
    "end": "307960"
  },
  {
    "text": "variable uh that might sound like it's really expensive but uh there are really",
    "start": "307960",
    "end": "313680"
  },
  {
    "text": "smart things in the compiler and so so it's not that expensive sound of course",
    "start": "313680",
    "end": "319800"
  },
  {
    "text": "when you need to do like really hardcore performance improvements then you might",
    "start": "319800",
    "end": "325560"
  },
  {
    "text": "need to do use on mutability and asop has support for mutability as well but that's not default or it's not how you should do it",
    "start": "325560",
    "end": "332880"
  },
  {
    "text": "if you do it correctly um and there's also really good uh syntax support to for example",
    "start": "332880",
    "end": "341880"
  },
  {
    "text": "set properties on a data structure uh the next thing is structural equality compared to C which",
    "start": "341880",
    "end": "349120"
  },
  {
    "text": "only ref referential equality uh stru equality Compares all the values inside",
    "start": "349120",
    "end": "354479"
  },
  {
    "text": "the data structure object or what you like and that that makes it much more",
    "start": "354479",
    "end": "359520"
  },
  {
    "text": "more easier to know what equals mean uh if you're doing like equals in in C you",
    "start": "359520",
    "end": "367160"
  },
  {
    "text": "basically basically need to know how is the equals method implemented for that object to know what that actually",
    "start": "367160",
    "end": "374479"
  },
  {
    "text": "means uh and this is as long as you use the F types that's defined in F and not",
    "start": "374479",
    "end": "380240"
  },
  {
    "text": "using any c types the next thing is composability",
    "start": "380240",
    "end": "386440"
  },
  {
    "text": "this is one of the most important Concepts in FP um you can compose both",
    "start": "386440",
    "end": "392160"
  },
  {
    "text": "types and functions really easy and that can take you from this mess of Lego",
    "start": "392160",
    "end": "398840"
  },
  {
    "text": "bricks to a this nice terrifying death star uh the thing is you can compose",
    "start": "398840",
    "end": "405800"
  },
  {
    "text": "basically anything in most languages but the question is how easy it is to",
    "start": "405800",
    "end": "411319"
  },
  {
    "text": "compose things and in F it's really easy just to create simple small types and",
    "start": "411319",
    "end": "417360"
  },
  {
    "text": "put types together to make a whole data structure and it's also easy to compose functions together with tiny small",
    "start": "417360",
    "end": "424240"
  },
  {
    "text": "function together with a small composition functions we're going to see some example of this later in in the",
    "start": "424240",
    "end": "432639"
  },
  {
    "text": "demo um and you don't need any boiler plate to actually do a lot of this",
    "start": "432840",
    "end": "440039"
  },
  {
    "text": "work uh the next thing is the feedback and what I mean feedback I mean in three",
    "start": "440039",
    "end": "446879"
  },
  {
    "text": "different levels the first one is actually like a social level the",
    "start": "446879",
    "end": "452319"
  },
  {
    "text": "ecosystem in in FP is really amazing uh it's a lot of open source project the",
    "start": "452319",
    "end": "457919"
  },
  {
    "text": "community is really welcoming and helpful and there are like super smart guys and and if you ask a question slack",
    "start": "457919",
    "end": "464400"
  },
  {
    "text": "Twitter or wherever you always get an answer quite fast the next level of feedback is when",
    "start": "464400",
    "end": "470520"
  },
  {
    "text": "you actually start sitting down in code then you have this reple read evaluate print Loop which makes it easy for you",
    "start": "470520",
    "end": "477560"
  },
  {
    "text": "to prototype things and try things out out really fast and that's also a concept that's",
    "start": "477560",
    "end": "482720"
  },
  {
    "text": "actually C it's not a concept from from F but C has and and rle now which not as",
    "start": "482720",
    "end": "490479"
  },
  {
    "text": "powerful I guess it's a bit nice bit more colorful at the moment but but FP is has",
    "start": "490479",
    "end": "498159"
  },
  {
    "text": "had this since day one basically and the last part of feedback",
    "start": "498159",
    "end": "503800"
  },
  {
    "text": "is testing of course you can do testing in C uh and other language is but when",
    "start": "503800",
    "end": "510840"
  },
  {
    "text": "you're using a functional language you use to structure a code differently that makes it easier to test the code and",
    "start": "510840",
    "end": "518000"
  },
  {
    "text": "that way you get better feedback I think and that's at least my experience of",
    "start": "518000",
    "end": "523200"
  },
  {
    "text": "using a functional language so the next part",
    "start": "523200",
    "end": "529480"
  },
  {
    "text": "is f SHP functional language and the web that sounds a little bit odd but we'll",
    "start": "529480",
    "end": "537160"
  },
  {
    "text": "see that about that later uh I would like to say that um all applications are",
    "start": "537160",
    "end": "545200"
  },
  {
    "text": "functions and that means that web applications also are functions um but what what do I mean",
    "start": "545200",
    "end": "552959"
  },
  {
    "text": "with this does anyone agree or disagree no",
    "start": "552959",
    "end": "558959"
  },
  {
    "text": "one um let me think about the mental model of how most people see look at a",
    "start": "558959",
    "end": "566200"
  },
  {
    "text": "web application of course you can divide this server box into multiple layers and",
    "start": "566200",
    "end": "572399"
  },
  {
    "text": "factories and providers and controllers Etc but if you look at it on the Black",
    "start": "572399",
    "end": "578440"
  },
  {
    "text": "Box you us have a request and response and you have something in the middle basically so let's move around Arrow a",
    "start": "578440",
    "end": "585399"
  },
  {
    "text": "little bit uh now we start switching the mental model from you have a request you",
    "start": "585399",
    "end": "592720"
  },
  {
    "text": "throw it in a server and Out Come response the the one that's making the request could easily be the same one",
    "start": "592720",
    "end": "599760"
  },
  {
    "text": "consuming the response but now we have it on different side and this is actually exactly what a function",
    "start": "599760",
    "end": "606360"
  },
  {
    "text": "is and this is most like how most Lang most application work and we see it like",
    "start": "606360",
    "end": "613680"
  },
  {
    "text": "quite often now with all the JavaScript framework coming out like adting this model like react and things like that so",
    "start": "613680",
    "end": "621040"
  },
  {
    "text": "so yes so if you start thinking about what is an application the output here",
    "start": "621040",
    "end": "626839"
  },
  {
    "text": "can be right to a database or show some HTML or whatever so so this applies",
    "start": "626839",
    "end": "636240"
  },
  {
    "text": "basically to all applications as I see",
    "start": "636240",
    "end": "640440"
  },
  {
    "text": "it um and that brings us to the last part I'm going to have a lot of demos or",
    "start": "641839",
    "end": "648839"
  },
  {
    "text": "hopefully if they work um but first I want to cover the last part and that's",
    "start": "648839",
    "end": "654600"
  },
  {
    "text": "Su uh this is a this a project started another a Swedish guy called Henrick Feld and uh",
    "start": "654600",
    "end": "663959"
  },
  {
    "text": "it is a really super light web framework",
    "start": "663959",
    "end": "670560"
  },
  {
    "text": "implemented in FP for f and it uh as I said lightweight nonblocking and it also",
    "start": "670560",
    "end": "677760"
  },
  {
    "text": "runs on Linux USX and windows uh and that's just it runs on all platform that's because it's F and F",
    "start": "677760",
    "end": "684839"
  },
  {
    "text": "runs mono so that run on on all those platforms uh Ive tried it on both",
    "start": "684839",
    "end": "691680"
  },
  {
    "text": "windows and mono and it's no problem at all I also tried it a little bit in do and core but just firing up hello world",
    "start": "691680",
    "end": "698839"
  },
  {
    "text": "basically uh so I will work on N core when it's ready they have some alphab bits that's running on net core I won't",
    "start": "698839",
    "end": "705560"
  },
  {
    "text": "show that today but they have they're working on it um",
    "start": "705560",
    "end": "712399"
  },
  {
    "text": "and you you can actually program web application using aset and f as well but",
    "start": "712399",
    "end": "718320"
  },
  {
    "text": "the reason what you should care about saave is saave is a framework",
    "start": "718320",
    "end": "723639"
  },
  {
    "text": "implemented for f which make it much easier to use Ematic F when you are make",
    "start": "723639",
    "end": "730360"
  },
  {
    "text": "program web applications so let's go into detail",
    "start": "730360",
    "end": "735800"
  },
  {
    "text": "what uh Suave is I see Suave as three concepts the HP",
    "start": "735800",
    "end": "744760"
  },
  {
    "text": "context something called a web part and then we have combinator",
    "start": "744760",
    "end": "750760"
  },
  {
    "text": "so the first part which is the HP context that's basically just your request and response object which a b",
    "start": "750760",
    "end": "758959"
  },
  {
    "text": "and also headers and everything that has to do with a request and response that's something they have encapsulated in this",
    "start": "758959",
    "end": "765920"
  },
  {
    "text": "data structure called HTP context and that was passed along through a series",
    "start": "765920",
    "end": "771360"
  },
  {
    "text": "of different steps and all those steps are web",
    "start": "771360",
    "end": "777279"
  },
  {
    "text": "parts and web Parts have a function signature that",
    "start": "777279",
    "end": "782360"
  },
  {
    "text": "looks something like this it takes an ATP context and outomes",
    "start": "782360",
    "end": "788600"
  },
  {
    "text": "a async computation question with a maybe an HTP context it might not return",
    "start": "788600",
    "end": "795920"
  },
  {
    "text": "HP context it might return none instead of some HP context and this makes it really easy to",
    "start": "795920",
    "end": "804199"
  },
  {
    "text": "compose web Parts together in different ways as we're going to see later and to",
    "start": "804199",
    "end": "810880"
  },
  {
    "text": "compose things web part together we have",
    "start": "810880",
    "end": "816160"
  },
  {
    "text": "combinators and this come this have basically two flavors this one that creates web parts",
    "start": "816160",
    "end": "823720"
  },
  {
    "text": "from primitive values making like take a string and create a web part from a string or take a function lifting up to",
    "start": "823720",
    "end": "829639"
  },
  {
    "text": "create a web part from that function uh and also as one that takes",
    "start": "829639",
    "end": "835399"
  },
  {
    "text": "multiple web parts and create a single web part uh see everything here is a web",
    "start": "835399",
    "end": "841360"
  },
  {
    "text": "part and that makes it also easy to to compose and and extend and extend the",
    "start": "841360",
    "end": "849240"
  },
  {
    "text": "the applications so the model how it basically work is first you start with",
    "start": "849240",
    "end": "854920"
  },
  {
    "text": "some functions or values this is a b them up approach of how it works then",
    "start": "854920",
    "end": "860079"
  },
  {
    "text": "you apply a combinator on that function of values to create uh one or more more",
    "start": "860079",
    "end": "865440"
  },
  {
    "text": "web Parts uh and when you have multiple web Parts you can use another uh",
    "start": "865440",
    "end": "873199"
  },
  {
    "text": "combinator to create a um new web part and that's this is basically all there",
    "start": "873199",
    "end": "880079"
  },
  {
    "text": "is to it and of course we can plug in more web Parts in other web Parts things like that so so this is really flexible",
    "start": "880079",
    "end": "886920"
  },
  {
    "text": "and really nice architecture to work with and you can wrap this web application to another um combinator to apply some",
    "start": "886920",
    "end": "897079"
  },
  {
    "text": "cross cutting concerns I think that's basically all I have about slides today because I want to",
    "start": "897079",
    "end": "903639"
  },
  {
    "text": "show the code instead and see how it works any questions so far then uh let's go to the demo and",
    "start": "903639",
    "end": "911759"
  },
  {
    "text": "before demo I also have two other product that you might see during the",
    "start": "911759",
    "end": "917160"
  },
  {
    "text": "the the demo I won't talk about them but they're really awesome both for C developers and F developers it's called",
    "start": "917160",
    "end": "924240"
  },
  {
    "text": "packet which is a packet manager that using the new get format but it's not",
    "start": "924240",
    "end": "931360"
  },
  {
    "text": "resolving the package references the same way as packet as as Nate and then we also have fake which is a build tool",
    "start": "931360",
    "end": "938600"
  },
  {
    "text": "for basically anything um and that's something we we use both of these tools",
    "start": "938600",
    "end": "944519"
  },
  {
    "text": "in in my project um yeah that's all I have about",
    "start": "944519",
    "end": "951319"
  },
  {
    "text": "slides start with so let's go to the",
    "start": "951319",
    "end": "957519"
  },
  {
    "text": "demo uh I thought I'm going to do this uh you can run f as scripts and you can",
    "start": "957600",
    "end": "963040"
  },
  {
    "text": "also Run f as compile application and since this is just prototyping I want to",
    "start": "963040",
    "end": "968880"
  },
  {
    "text": "show how things work quite fast and I thought scripting would be nice so I'm going to do everything as FP the",
    "start": "968880",
    "end": "976319"
  },
  {
    "text": "scripts uh and the first thing we need to do to get started with with f is to add s to our solution if",
    "start": "976319",
    "end": "988040"
  },
  {
    "text": "you like uh I'm using the alphabit because I'm",
    "start": "988040",
    "end": "993240"
  },
  {
    "text": "hardcore um this actually I submitted a pull request for",
    "start": "993240",
    "end": "999800"
  },
  {
    "text": "one small function that I needed for a thing and that's why I'm using the alphabit uh I could almost has used a",
    "start": "999800",
    "end": "1007240"
  },
  {
    "text": "regular one bits uh and this is uh how you define um",
    "start": "1007240",
    "end": "1013000"
  },
  {
    "text": "new get references in in pet and to install",
    "start": "1013000",
    "end": "1019839"
  },
  {
    "text": "uh this we need to run the packet",
    "start": "1019839",
    "end": "1027240"
  },
  {
    "text": "install now just pulling down the S bits that's basically same thing as new",
    "start": "1029480",
    "end": "1035959"
  },
  {
    "text": "get install but the the good part with this is that I now don't have an inversion uh",
    "start": "1035959",
    "end": "1044480"
  },
  {
    "text": "number in the path to um to the dll so if I upgrade saave everything will still",
    "start": "1044480",
    "end": "1051280"
  },
  {
    "text": "work without me need to update all the references and then to just create a",
    "start": "1051280",
    "end": "1058039"
  },
  {
    "text": "hello world we first need to open the S module and then we can just start web",
    "start": "1058039",
    "end": "1064520"
  },
  {
    "text": "server with a default uh",
    "start": "1064520",
    "end": "1070120"
  },
  {
    "text": "sa sa configuration this is where you can apply your own configuration or",
    "start": "1070799",
    "end": "1077360"
  },
  {
    "text": "extend this one to to provide ports and host them Etc but I'm just going to use the default configuration uh this",
    "start": "1077360",
    "end": "1085080"
  },
  {
    "text": "doesn't compile so I need to add",
    "start": "1085080",
    "end": "1090240"
  },
  {
    "text": "a successful thing that's to get this okay here to okay is a combinator that",
    "start": "1090240",
    "end": "1097960"
  },
  {
    "text": "takes a string as input and creates a new web part so this is basically all the is to it",
    "start": "1097960",
    "end": "1104320"
  },
  {
    "text": "hopefully [Music] to uh get",
    "start": "1104320",
    "end": "1110960"
  },
  {
    "text": "started and this is that's not Chrome here is",
    "start": "1110960",
    "end": "1116720"
  },
  {
    "text": "Chrome Local Host I think 83 right so that worked and that's this this is one",
    "start": "1116720",
    "end": "1124200"
  },
  {
    "text": "of the most beautiful things about S I think compared to for example ASB net I",
    "start": "1124200",
    "end": "1130000"
  },
  {
    "text": "don't think you can write maybe like three lines four lines of code dep how if you count the first",
    "start": "1130000",
    "end": "1136360"
  },
  {
    "text": "one and create a a a uh a hello world application in aspnet for example so",
    "start": "1136360",
    "end": "1142760"
  },
  {
    "text": "it's really low barrier to get started and it's really easy to to build on top",
    "start": "1142760",
    "end": "1148120"
  },
  {
    "text": "of this and that's what we're going to do uh now so let's put this in a",
    "start": "1148120",
    "end": "1156159"
  },
  {
    "text": "own uh variable let's call that hello we're going to have a lot of Hello",
    "start": "1156159",
    "end": "1162039"
  },
  {
    "text": "things and uh instead call this app and let app",
    "start": "1162039",
    "end": "1169120"
  },
  {
    "text": "hello to and now we going I'm going to implement a a web part from scratch to",
    "start": "1169120",
    "end": "1176360"
  },
  {
    "text": "show you there there's not that much magic going on behind this uh okay keyword here so if you",
    "start": "1176360",
    "end": "1184559"
  },
  {
    "text": "remember remember from the slides the signature of a web part looks something",
    "start": "1184559",
    "end": "1191640"
  },
  {
    "text": "like",
    "start": "1191640",
    "end": "1194640"
  },
  {
    "text": "this so this mean we take I think the one",
    "start": "1197240",
    "end": "1204679"
  },
  {
    "text": "more one too many context that's more like it so to create a web part we need",
    "start": "1204679",
    "end": "1210200"
  },
  {
    "text": "something that takes a context as input so let's take content inut hello now hello to now take a context I don't",
    "start": "1210200",
    "end": "1217360"
  },
  {
    "text": "really care what context is uh and now I'm going to cheat I have some Snippets so I don't have",
    "start": "1217360",
    "end": "1224480"
  },
  {
    "text": "to do some stupid mistakes and this is basically all you need to do to create a web part and this this a is a",
    "start": "1224720",
    "end": "1232960"
  },
  {
    "text": "async uh return type we need to wrap this in a async block that's the first",
    "start": "1232960",
    "end": "1239120"
  },
  {
    "text": "thing and then we just create a new uh",
    "start": "1239120",
    "end": "1244520"
  },
  {
    "text": "string and take the bytes out from that string and add that to",
    "start": "1244520",
    "end": "1249840"
  },
  {
    "text": "the uh response type response object here and then we just update the context",
    "start": "1249840",
    "end": "1258320"
  },
  {
    "text": "uh with that response and returning some and we returning some context mean that",
    "start": "1258320",
    "end": "1264080"
  },
  {
    "text": "this web part actually executed if it return none then this web part will be",
    "start": "1264080",
    "end": "1270120"
  },
  {
    "text": "skipped so if we now then we also set that app is equal to hello 2 and then we",
    "start": "1270120",
    "end": "1276799"
  },
  {
    "text": "is running app which means we now should go hello get Hello World instead of hello NC so let's do",
    "start": "1276799",
    "end": "1286120"
  },
  {
    "text": "that and that worked as expected any question so",
    "start": "1287039",
    "end": "1293679"
  },
  {
    "text": "far quite clear that's good uh",
    "start": "1293679",
    "end": "1300360"
  },
  {
    "text": "What uh here uh this is basically taking [Music]",
    "start": "1300360",
    "end": "1306039"
  },
  {
    "text": "the let me do it like",
    "start": "1306039",
    "end": "1310320"
  },
  {
    "text": "this let instead to make it it easier to",
    "start": "1311320",
    "end": "1319679"
  },
  {
    "text": "see so here we're actually taking the the context that was input and we take",
    "start": "1319679",
    "end": "1326039"
  },
  {
    "text": "that context make a new copy of it but set the response uh property on that",
    "start": "1326039",
    "end": "1331480"
  },
  {
    "text": "context to be equal to the new response which we created over here and we do the",
    "start": "1331480",
    "end": "1336840"
  },
  {
    "text": "same thing for the response we take the response from the context and update the",
    "start": "1336840",
    "end": "1342000"
  },
  {
    "text": "content property from that response and create a new response the question was",
    "start": "1342000",
    "end": "1349159"
  },
  {
    "text": "yeah how what with in in F is I actually think there might be some",
    "start": "1349159",
    "end": "1355159"
  },
  {
    "text": "simless syntax coming for uh C in the next version as well",
    "start": "1355159",
    "end": "1360880"
  },
  {
    "text": "because they're going to do they are working on getting some more immutable structures into",
    "start": "1360880",
    "end": "1366000"
  },
  {
    "text": "C inspired by this um as you see I'm I'm switching",
    "start": "1366000",
    "end": "1372159"
  },
  {
    "text": "back and forth between this uh uh console here and that's sort of",
    "start": "1372159",
    "end": "1377640"
  },
  {
    "text": "annoying so I'm going to cheat a little bit to so I don't have to um restart the",
    "start": "1377640",
    "end": "1383960"
  },
  {
    "text": "server every single time I do a change so let install um fake which is",
    "start": "1383960",
    "end": "1390679"
  },
  {
    "text": "the the build automation tool I talked about earlier and we also need a compiler",
    "start": "1390679",
    "end": "1397200"
  },
  {
    "text": "service and then I ask then I have prepared a small or I haven't prepared",
    "start": "1397200",
    "end": "1403000"
  },
  {
    "text": "this I copy this from thas Petri who is a really awesome F developer uh which",
    "start": "1403000",
    "end": "1410720"
  },
  {
    "text": "basically listen on my file changes and reload the server every time so I don't",
    "start": "1410720",
    "end": "1417039"
  },
  {
    "text": "have to uh restart a server manually and I think we're now going to run",
    "start": "1417039",
    "end": "1423919"
  },
  {
    "text": "on uh 80 33 here you actually see also this stuff",
    "start": "1423919",
    "end": "1430320"
  },
  {
    "text": "how you update the configuration if you need want to use another configuration for",
    "start": "1430320",
    "end": "1436039"
  },
  {
    "text": "for Suave uh but this is sort of out the scope of this talk but there's no magic going on",
    "start": "1436039",
    "end": "1442760"
  },
  {
    "text": "and if you're interested in this script I can point you to it uh before I can run that I need to",
    "start": "1442760",
    "end": "1449120"
  },
  {
    "text": "um uh install the package as added to um packet dependencies and there is support",
    "start": "1449120",
    "end": "1457760"
  },
  {
    "text": "for that in atom which I'm using uh through the II project so I both have",
    "start": "1457760",
    "end": "1464000"
  },
  {
    "text": "now both have packet integration and I can also use fake directly",
    "start": "1464000",
    "end": "1471600"
  },
  {
    "text": "so that spawn thing is a Target in my fake uh project which now is going",
    "start": "1471600",
    "end": "1478320"
  },
  {
    "text": "to uh create a new and that won't work I'm pretty sure uh because I first have",
    "start": "1478320",
    "end": "1486200"
  },
  {
    "text": "to let's stop that right away I need to comment thing this thing out because not now my build script is starting a server",
    "start": "1486200",
    "end": "1493480"
  },
  {
    "text": "I want I don't want to start a server twice so now it should",
    "start": "1493480",
    "end": "1500520"
  },
  {
    "text": "work this",
    "start": "1508320",
    "end": "1511559"
  },
  {
    "text": "turns yeah so now works you start up the browser for me as well uh okay but this",
    "start": "1514240",
    "end": "1520640"
  },
  {
    "text": "is not as good because I can also go to this address and it would sort of work",
    "start": "1520640",
    "end": "1525720"
  },
  {
    "text": "so how do I limit myself to just uh how do I apply routing to in Suave so that's",
    "start": "1525720",
    "end": "1532159"
  },
  {
    "text": "the next step um let's continue with this hello uh part and to apply routing",
    "start": "1532159",
    "end": "1538960"
  },
  {
    "text": "in in Sava use a use combinator called path it tells me an error right now but",
    "start": "1538960",
    "end": "1544600"
  },
  {
    "text": "we're going to fix that uh and let's go to Hello to and the the path combinator takes a",
    "start": "1544600",
    "end": "1552120"
  },
  {
    "text": "string and returns a new web part uh and to combine two web Parts",
    "start": "1552120",
    "end": "1557559"
  },
  {
    "text": "together together you use this fish bone operator",
    "start": "1557559",
    "end": "1563559"
  },
  {
    "text": "um and to add those two in scope you see I have some red squiggly lines here we",
    "start": "1563559",
    "end": "1571159"
  },
  {
    "text": "need to add the pathor and they are in the in the Suave that filters",
    "start": "1571159",
    "end": "1578720"
  },
  {
    "text": "module and now I get a new error because the fishbone operator is not there and",
    "start": "1578720",
    "end": "1584080"
  },
  {
    "text": "that is in open S I think it's operators yeah so basic",
    "start": "1584080",
    "end": "1591279"
  },
  {
    "text": "what this does is if my request matches hello to then run the path or then",
    "start": "1591279",
    "end": "1600120"
  },
  {
    "text": "run uh the combinator or the the web part which I combine with this uh path",
    "start": "1600120",
    "end": "1607000"
  },
  {
    "text": "hello to web part so if you try this I still would",
    "start": "1607000",
    "end": "1612760"
  },
  {
    "text": "get now we get some seror that's as expect expected hello to",
    "start": "1612760",
    "end": "1618440"
  },
  {
    "text": "now returns hello world okay that's good",
    "start": "1618440",
    "end": "1623720"
  },
  {
    "text": "um but now next step is I want to have multiple uh paths I also want to",
    "start": "1623720",
    "end": "1631600"
  },
  {
    "text": "support uh this of course hello",
    "start": "1631600",
    "end": "1636919"
  },
  {
    "text": "one and to do that you use another combinator called choose which basically takes a list of",
    "start": "1636919",
    "end": "1646120"
  },
  {
    "text": "web part and execute the first one that returns",
    "start": "1646120",
    "end": "1654760"
  },
  {
    "text": "sum and if we try that now we should have still hello to should be able to go",
    "start": "1657120",
    "end": "1664039"
  },
  {
    "text": "to hello but this shouldn't work that's also as expect",
    "start": "1664039",
    "end": "1669159"
  },
  {
    "text": "expected so now we have like the really basic routing going on uh The Next Step",
    "start": "1669159",
    "end": "1674320"
  },
  {
    "text": "would be to add parameters to the routes and um to do that you use something",
    "start": "1674320",
    "end": "1681399"
  },
  {
    "text": "called a pass scan operator or combinator and we use hello 3 which we",
    "start": "1681399",
    "end": "1687440"
  },
  {
    "text": "don't have yet and then we just used um string formatting rules in F sharp to",
    "start": "1687440",
    "end": "1694600"
  },
  {
    "text": "specify what the parameters in the URL should be so this is going to match",
    "start": "1694600",
    "end": "1700159"
  },
  {
    "text": "anything that has a load three to start with and Then followed by a string followed by an",
    "start": "1700159",
    "end": "1705399"
  },
  {
    "text": "integer and this Co uh combinator takes another web part as input here I don't",
    "start": "1705399",
    "end": "1712440"
  },
  {
    "text": "combine them together instead this path can take a web part as input well not",
    "start": "1712440",
    "end": "1718080"
  },
  {
    "text": "actually a web part it actually taks a function that returns a web part as input and that function",
    "start": "1718080",
    "end": "1725240"
  },
  {
    "text": "must uh support this these two variables here and here we have the message and",
    "start": "1725240",
    "end": "1732440"
  },
  {
    "text": "let's call it index and now I just return",
    "start": "1732440",
    "end": "1739399"
  },
  {
    "text": "okay",
    "start": "1740440",
    "end": "1743440"
  },
  {
    "text": "hello let's move that there's nothing magical on here uh",
    "start": "1745720",
    "end": "1753480"
  },
  {
    "text": "L3 takes a message and index that matches those two parameters here and I",
    "start": "1753480",
    "end": "1758960"
  },
  {
    "text": "just print out those two into yeah to the response",
    "start": "1758960",
    "end": "1765200"
  },
  {
    "text": "stream and if we run this I hope this should work",
    "start": "1765200",
    "end": "1771200"
  },
  {
    "text": "L3 yeah that worked nice so this is this is almost as As advanc It Gets in Java",
    "start": "1771200",
    "end": "1777240"
  },
  {
    "text": "that's actually beautiful part of it doesn't get that much harder than this and we could also use of course we",
    "start": "1777240",
    "end": "1783360"
  },
  {
    "text": "instead of error we can just not found uh combinator",
    "start": "1783360",
    "end": "1790200"
  },
  {
    "text": "what and that's in",
    "start": "1790200",
    "end": "1794080"
  },
  {
    "text": "the uh I would actually get if I use if I using wish Studio I would get some some kind of intelligence helping me",
    "start": "1795960",
    "end": "1803399"
  },
  {
    "text": "adding these uh modules U but it's not that hard to figure out by yourself and i' like why",
    "start": "1803399",
    "end": "1811600"
  },
  {
    "text": "don't we use this fish forell for which one for the hell 3 yeah",
    "start": "1811600",
    "end": "1818200"
  },
  {
    "text": "the question was why does we do the fishbone operator for hello 3 uh that's basically",
    "start": "1818200",
    "end": "1823640"
  },
  {
    "text": "um the P scan operator uh must takes a function in that accept",
    "start": "1823640",
    "end": "1831039"
  },
  {
    "text": "those two arguments if I was adding one more argument here um yeah then I has to have one more here",
    "start": "1831039",
    "end": "1839200"
  },
  {
    "text": "basically to make it compile and you can't do that with a fishbone operator since the fishbone operator operates on",
    "start": "1839200",
    "end": "1846000"
  },
  {
    "text": "on web Parts but the passan needs to have a function accepting that",
    "start": "1846000",
    "end": "1851480"
  },
  {
    "text": "format and now we also have a a not found part so this should actually work now",
    "start": "1851480",
    "end": "1859440"
  },
  {
    "text": "because yeah I added that part but if I have a string here it doesn't work",
    "start": "1859440",
    "end": "1864639"
  },
  {
    "text": "because it's bound to an integer uh okay so let's do some more uh",
    "start": "1864639",
    "end": "1876080"
  },
  {
    "text": "like relevant stuff uh you make these parameters optional as well uh true that",
    "start": "1876080",
    "end": "1883000"
  },
  {
    "text": "was a good question I don't think actually you can do that not with the scan at",
    "start": "1883000",
    "end": "1888559"
  },
  {
    "text": "least uh be quite hard because what does it mean if maybe this parameter would be",
    "start": "1888559",
    "end": "1895360"
  },
  {
    "text": "optional uh that that would be I would I would actually think say no and I think",
    "start": "1895360",
    "end": "1901320"
  },
  {
    "text": "that's a good thing if you want an optional parameter there should probably be a a query parameter instead of something in the",
    "start": "1901320",
    "end": "1907559"
  },
  {
    "text": "route um since that's yeah and then you can be",
    "start": "1907559",
    "end": "1913440"
  },
  {
    "text": "optional um so let's apply some logging to this um uh application uh this is too",
    "start": "1915559",
    "end": "1924159"
  },
  {
    "text": "much code for me to to write all by myself so I cheat",
    "start": "1924159",
    "end": "1930960"
  },
  {
    "text": "again but it's not that much code I have yeah 13 lines of code something",
    "start": "1930960",
    "end": "1937240"
  },
  {
    "text": "that I think um this is my simple loging framework H you can imagine that this is",
    "start": "1937240",
    "end": "1944240"
  },
  {
    "text": "a log framework that would uh print things to maybe some analytic server or",
    "start": "1944240",
    "end": "1950600"
  },
  {
    "text": "whatever but I was going to print it to the console instead and the way it works is first I have a function called log",
    "start": "1950600",
    "end": "1957440"
  },
  {
    "text": "which basically uh print something to the console and then just return uh a new",
    "start": "1957440",
    "end": "1965320"
  },
  {
    "text": "web part and then I also have some helper functions to to log time to log a URL",
    "start": "1965320",
    "end": "1972880"
  },
  {
    "text": "and then I have two other helper function to log start time and end time just to um that also use the long time",
    "start": "1972880",
    "end": "1980880"
  },
  {
    "text": "helper functions uh and then the actual combinator so this is the this is",
    "start": "1980880",
    "end": "1988799"
  },
  {
    "text": "how you actually would Implement a combinator yourself basically and the combinator here is is log request and",
    "start": "1988799",
    "end": "1997200"
  },
  {
    "text": "this Lo combinator takes a web part as input and then we're going to start with",
    "start": "1997200",
    "end": "2002360"
  },
  {
    "text": "the log in time log URL and then uh execute the web part that was",
    "start": "2002360",
    "end": "2009159"
  },
  {
    "text": "passed into it and then it's going to log the end time of that request and the reason I have error here",
    "start": "2009159",
    "end": "2016679"
  },
  {
    "text": "is because the uh compiler doesn't know what this type should be yet so I I can",
    "start": "2016679",
    "end": "2022639"
  },
  {
    "text": "help it out like that I didn't have to because I know I'm going to use it later and then the compiler will figure out",
    "start": "2022639",
    "end": "2028200"
  },
  {
    "text": "the type of it uh and to use this web part this is basically if you remember from the slide",
    "start": "2028200",
    "end": "2034960"
  },
  {
    "text": "we have the whole big web part and then this is what we get get here but now I",
    "start": "2034960",
    "end": "2040880"
  },
  {
    "text": "can start wrapping this into other web parts for combinators so now if I do",
    "start": "2040880",
    "end": "2046720"
  },
  {
    "text": "logging log request uh that's all we need to do to",
    "start": "2046720",
    "end": "2052720"
  },
  {
    "text": "add logging for every request in our application uh I'm actually going to do that on the console because it easier to",
    "start": "2052720",
    "end": "2059839"
  },
  {
    "text": "see so I'm going to stop it here first and then [Music]",
    "start": "2059839",
    "end": "2065878"
  },
  {
    "text": "run here",
    "start": "2065879",
    "end": "2069200"
  },
  {
    "text": "instead so now I should I got some logging yeah start request at some time",
    "start": "2076280",
    "end": "2082040"
  },
  {
    "text": "and to yourl and if I go to Hello",
    "start": "2082040",
    "end": "2088118"
  },
  {
    "text": "to I get a new request okay so that's good but now",
    "start": "2088119",
    "end": "2093200"
  },
  {
    "text": "let's say you want to extend this uh loging thing to also supplyer",
    "start": "2093200",
    "end": "2099120"
  },
  {
    "text": "[Music] um it might be a little bit hard to actually",
    "start": "2099120",
    "end": "2105079"
  },
  {
    "text": "track uh track the request in this loging let's say we we have a a sleep in",
    "start": "2105079",
    "end": "2111079"
  },
  {
    "text": "this request that takes a while uh and now we run hello 2 and hello one it's a little",
    "start": "2111079",
    "end": "2120480"
  },
  {
    "text": "bit hard to know exactly which request ended when uh so let's add a a request",
    "start": "2120480",
    "end": "2126560"
  },
  {
    "text": "ID to everything uh and we start with the logging function now it's going to take",
    "start": "2126560",
    "end": "2133320"
  },
  {
    "text": "a request ID as input we print out the request",
    "start": "2133320",
    "end": "2139680"
  },
  {
    "text": "ID and the compiler says is something is wrong so let's add request",
    "start": "2139839",
    "end": "2148799"
  },
  {
    "text": "ID and ID probably here too and as you see uh",
    "start": "2152200",
    "end": "2159680"
  },
  {
    "text": "FP is uh sort of uh nice to me in in the sense that it",
    "start": "2159680",
    "end": "2167880"
  },
  {
    "text": "tells me exactly what to do in the compiler and I don't have to add this parameter to all the function as well",
    "start": "2167880",
    "end": "2173440"
  },
  {
    "text": "because I'm using par applications to build up the structure so if I don't",
    "start": "2173440",
    "end": "2178599"
  },
  {
    "text": "provide all parameters in a function call I'm just going to get a new function",
    "start": "2178599",
    "end": "2183680"
  },
  {
    "text": "back uh and see log URL doesn't have request ID parameters I have to add it",
    "start": "2183680",
    "end": "2191240"
  },
  {
    "text": "there okay this thing might seem like",
    "start": "2192040",
    "end": "2197599"
  },
  {
    "text": "a easy thing to do but I wanted to show this because uh this a bug in",
    "start": "2197599",
    "end": "2206040"
  },
  {
    "text": "this uh you see every request got the same request",
    "start": "2206040",
    "end": "2212000"
  },
  {
    "text": "ID and does anyone maybe know why or you want me to tell",
    "start": "2212000",
    "end": "2218880"
  },
  {
    "text": "them uh the thing is that this this log request thing only execute once and and",
    "start": "2218880",
    "end": "2225880"
  },
  {
    "text": "that mean we got the the request ID on the first time and then it returned this",
    "start": "2225880",
    "end": "2231760"
  },
  {
    "text": "web part and this web part is what's used every single time and the request",
    "start": "2231760",
    "end": "2237599"
  },
  {
    "text": "ID was already bound at that time and to uh fix",
    "start": "2237599",
    "end": "2243640"
  },
  {
    "text": "this we could either do as we do up here take in the context as a parameter to",
    "start": "2243640",
    "end": "2250319"
  },
  {
    "text": "the function it makes it um then we can actually handle it ourself or we can use",
    "start": "2250319",
    "end": "2257880"
  },
  {
    "text": "one of three helper functions in Su one that's called varer I don't know",
    "start": "2257880",
    "end": "2263000"
  },
  {
    "text": "actually what that does the other two are context or",
    "start": "2263000",
    "end": "2268079"
  },
  {
    "text": "request uh and the context and request are almost the same all those three are",
    "start": "2268079",
    "end": "2273280"
  },
  {
    "text": "basically the same thing uh but they",
    "start": "2273280",
    "end": "2279440"
  },
  {
    "text": "are um the request is working on the request object while the context is",
    "start": "2279440",
    "end": "2285760"
  },
  {
    "text": "working on the uh context proper as input to function uh I really don't need",
    "start": "2285760",
    "end": "2293319"
  },
  {
    "text": "the the value so I can just say that this is going to be a value long care",
    "start": "2293319",
    "end": "2299000"
  },
  {
    "text": "about that's why I'm providing underscore uh",
    "start": "2299000",
    "end": "2305319"
  },
  {
    "text": "and now this is going to return a web part that's executed for each request",
    "start": "2305319",
    "end": "2312520"
  },
  {
    "text": "and we should now get a new request ID for each",
    "start": "2312520",
    "end": "2319559"
  },
  {
    "text": "request and that worked so that's how you apply a cross carting",
    "start": "2320800",
    "end": "2328640"
  },
  {
    "text": "concern in a SW application that could also be like authentication would be",
    "start": "2328640",
    "end": "2335520"
  },
  {
    "text": "probably as easy as ADD ing uh logging and I could actually apply this to to just a part of the application if",
    "start": "2335520",
    "end": "2343640"
  },
  {
    "text": "I wanted to I could do it there I think",
    "start": "2343640",
    "end": "2348760"
  },
  {
    "text": "so if I call hello to now we wouldn't get any",
    "start": "2348760",
    "end": "2353920"
  },
  {
    "text": "new uh any new requests but if I call this one here I should get some login",
    "start": "2353920",
    "end": "2359079"
  },
  {
    "text": "part so that this is the the comp the composability part of suave and FP in",
    "start": "2359079",
    "end": "2365000"
  },
  {
    "text": "action it's really easy to move around pieces and and and put things together to to build a whole",
    "start": "2365000",
    "end": "2372599"
  },
  {
    "text": "application so let's do something that's um more real uh I was thinking about",
    "start": "2372599",
    "end": "2378920"
  },
  {
    "text": "doing a small sort of stupid web application",
    "start": "2378920",
    "end": "2384440"
  },
  {
    "text": "that's going to take a input of a city and a date and return the population of",
    "start": "2384440",
    "end": "2391319"
  },
  {
    "text": "the country for that City that year and the temperature that day",
    "start": "2391319",
    "end": "2397000"
  },
  {
    "text": "that makes sense right um so let's see see if we can manage to do that in less",
    "start": "2397000",
    "end": "2403319"
  },
  {
    "text": "than 20 minutes it should be quite doable so first we need",
    "start": "2403319",
    "end": "2408640"
  },
  {
    "text": "to uh add uh some serialization helpers",
    "start": "2408640",
    "end": "2415440"
  },
  {
    "text": "so I'm going to use Newton and we also need to use f data which is",
    "start": "2415440",
    "end": "2422480"
  },
  {
    "text": "um data library in F that has a lot of type providers I'm not going to go into",
    "start": "2422480",
    "end": "2427839"
  },
  {
    "text": "detail what type provider is I'm just going to use them here and and show you how it works",
    "start": "2427839",
    "end": "2433720"
  },
  {
    "text": "basically so let's add these two we",
    "start": "2433720",
    "end": "2440200"
  },
  {
    "text": "packet uh that's working fine uh and the first thing I need to do is",
    "start": "2442359",
    "end": "2449200"
  },
  {
    "text": "actually add some references this is just the loading the",
    "start": "2449200",
    "end": "2455839"
  },
  {
    "text": "DLS uh for me uh just it's not that fun",
    "start": "2455839",
    "end": "2462560"
  },
  {
    "text": "to to mention um that's what you need to do to both have uh json. net and and F",
    "start": "2462560",
    "end": "2469800"
  },
  {
    "text": "data in scope so the first thing is to add a j simple Json helper that handles",
    "start": "2469800",
    "end": "2478400"
  },
  {
    "text": "um uh Json response and and uh requests",
    "start": "2478400",
    "end": "2484359"
  },
  {
    "text": "uh this is actually the reason I use the alpab bits of SAA because this part map",
    "start": "2484359",
    "end": "2490520"
  },
  {
    "text": "Json with was not in the 10 bit so that's something I submitted to a couple",
    "start": "2490520",
    "end": "2497560"
  },
  {
    "text": "months back uh and this is how you uh add a sterilizer",
    "start": "2497560",
    "end": "2505640"
  },
  {
    "text": "for uh Json in in Su um first I take something",
    "start": "2505640",
    "end": "2513280"
  },
  {
    "text": "that encode bites from yeah is important to be consistent call",
    "start": "2513280",
    "end": "2518880"
  },
  {
    "text": "things UTF and then ask if to be sure and then I to have two helper",
    "start": "2518880",
    "end": "2524359"
  },
  {
    "text": "functions one is D seriz and one is seriz and the map Json WID takes those",
    "start": "2524359",
    "end": "2530280"
  },
  {
    "text": "two function as input creating a new uh a new web part that's going to",
    "start": "2530280",
    "end": "2541800"
  },
  {
    "text": "take a Json request and return a Json",
    "start": "2541800",
    "end": "2547079"
  },
  {
    "text": "response and this is something I'm going to do when I now Implement my API so let's create a temp pop API temp",
    "start": "2547079",
    "end": "2556640"
  },
  {
    "text": "pop stands for temperature population API",
    "start": "2556640",
    "end": "2562520"
  },
  {
    "text": "um I think it's first thing I need to have some",
    "start": "2562520",
    "end": "2567559"
  },
  {
    "text": "types uh the weather typ here is something I get from the Json provider",
    "start": "2567559",
    "end": "2573240"
  },
  {
    "text": "is F Type provider and uh this is a sample request that",
    "start": "2573240",
    "end": "2579800"
  },
  {
    "text": "returns some kind of response know what uh and then I also",
    "start": "2579800",
    "end": "2585240"
  },
  {
    "text": "use the World Bank data which is also from the s data Library so these are two",
    "start": "2585240",
    "end": "2590520"
  },
  {
    "text": "type providers that that generate the types for me while I'm actually",
    "start": "2590520",
    "end": "2596680"
  },
  {
    "text": "developing and then I have this uh request type here I want to have a string as input and a datetime as input",
    "start": "2596680",
    "end": "2604280"
  },
  {
    "text": "to to my API uh and I'm going to return the request to see yeah I want to return request uh",
    "start": "2604280",
    "end": "2612079"
  },
  {
    "text": "the temperature uh the population and the country everything here is optional",
    "start": "2612079",
    "end": "2617839"
  },
  {
    "text": "because you you don't if you ask for 2016 you don't get a response for",
    "start": "2617839",
    "end": "2623480"
  },
  {
    "text": "population because we don't have the stats for 2016 yet I don't think you actually have it for 2015 in World Bank",
    "start": "2623480",
    "end": "2630160"
  },
  {
    "text": "dat either uh so let's implement the population function",
    "start": "2630160",
    "end": "2637000"
  },
  {
    "text": "uh get them population uh this is probably the",
    "start": "2637000",
    "end": "2643040"
  },
  {
    "text": "most advanced thing I'm going to show you uh the population",
    "start": "2643040",
    "end": "2649960"
  },
  {
    "text": "take a uh a response object and check the country and also check the gear of",
    "start": "2649960",
    "end": "2657520"
  },
  {
    "text": "the of the of the date to actually go and then",
    "start": "2657520",
    "end": "2665400"
  },
  {
    "text": "uh ask the World Bank data for the stats for that year so World Bank data",
    "start": "2665400",
    "end": "2672760"
  },
  {
    "text": "have uh typ Ro here has some really awesome things so here I can navigate",
    "start": "2672760",
    "end": "2679400"
  },
  {
    "text": "through this is like real time going through the the API to data and looking",
    "start": "2679400",
    "end": "2684800"
  },
  {
    "text": "all the countries in the world I can navigate through here and and find some nice stats about each country so",
    "start": "2684800",
    "end": "2692720"
  },
  {
    "text": "what I'm doing is uh first finding the country I'm interested",
    "start": "2692720",
    "end": "2697920"
  },
  {
    "text": "in uh and if I did find a country I'm looking up the indicators for the",
    "start": "2697920",
    "end": "2703920"
  },
  {
    "text": "population total uh if I found found that population indicator I'm just going",
    "start": "2703920",
    "end": "2709760"
  },
  {
    "text": "to set the population to to the result here so that was the population",
    "start": "2709760",
    "end": "2717359"
  },
  {
    "text": "part and the next part would be see uh the",
    "start": "2717359",
    "end": "2724880"
  },
  {
    "text": "temperature uh this is a little bit easier uh here I'm",
    "start": "2724880",
    "end": "2732559"
  },
  {
    "text": "using EXA to the same type provider as here but this was a sample request and",
    "start": "2732559",
    "end": "2738720"
  },
  {
    "text": "now I need to uh actually this should be uh percent s",
    "start": "2738720",
    "end": "2746359"
  },
  {
    "text": "yeah there it is so that that's the parameter to uh to",
    "start": "2746359",
    "end": "2752960"
  },
  {
    "text": "the the function I'm using and I you can see it up here somewhere here I using",
    "start": "2752960",
    "end": "2758119"
  },
  {
    "text": "Oslo instead so that's how I figured out how that API worked",
    "start": "2758119",
    "end": "2764280"
  },
  {
    "text": "um so yes doing the request for that URL and I got get the we API and the",
    "start": "2764280",
    "end": "2771960"
  },
  {
    "text": "response object looks something like this this is something that F Type rer generated for me and then I just",
    "start": "2771960",
    "end": "2778680"
  },
  {
    "text": "converting it to Celsius because I don't have no idea what farite is um and then",
    "start": "2778680",
    "end": "2785240"
  },
  {
    "text": "also extract the count from this from this response actually and using this later",
    "start": "2785240",
    "end": "2790800"
  },
  {
    "text": "on to get the the population and to put these things",
    "start": "2790800",
    "end": "2795839"
  },
  {
    "text": "together uh we need to have the I think that's the function yeah so",
    "start": "2795839",
    "end": "2802000"
  },
  {
    "text": "here I'm using the the previous Json helper uh the map Json net function and",
    "start": "2802000",
    "end": "2809400"
  },
  {
    "text": "in said is takes a response object which now has a signature of get temp pop and",
    "start": "2809400",
    "end": "2815520"
  },
  {
    "text": "that's the what the the helper function here do for us and the f",
    "start": "2815520",
    "end": "2822079"
  },
  {
    "text": "um type system help us with to figure out and then I start with an initial",
    "start": "2822079",
    "end": "2827359"
  },
  {
    "text": "response setting the request to be equal to R and setting everything else to nonone and then I just pipe this",
    "start": "2827359",
    "end": "2834280"
  },
  {
    "text": "response or response through those two functions filling filling out the data",
    "start": "2834280",
    "end": "2840599"
  },
  {
    "text": "that the I found in in the in the request",
    "start": "2840599",
    "end": "2846400"
  },
  {
    "text": "uh and to add this here we need to do a",
    "start": "2846400",
    "end": "2852240"
  },
  {
    "text": "I think it's PA API temp Pop I",
    "start": "2852240",
    "end": "2859880"
  },
  {
    "text": "think and here of course uh I need to do",
    "start": "2864880",
    "end": "2873920"
  },
  {
    "text": "not where is Postman here here Postman so response should look",
    "start": "2873920",
    "end": "2879040"
  },
  {
    "text": "something like this and if I'm lucky this should work right away it did yes",
    "start": "2879040",
    "end": "2885880"
  },
  {
    "text": "so uh this date was 8°",
    "start": "2885880",
    "end": "2892839"
  },
  {
    "text": "celsus I think and uh population in 2014 was 5 million people in Norway",
    "start": "2892839",
    "end": "2902480"
  },
  {
    "text": "and that is there was all there is to it basically",
    "start": "2902480",
    "end": "2909720"
  },
  {
    "text": "like 50 lines of code maybe uh to uh as two apis parse all the data and get the",
    "start": "2909720",
    "end": "2917760"
  },
  {
    "text": "result result back from them and also plug things in there's one thing more I can show you and that's let's say that",
    "start": "2917760",
    "end": "2925400"
  },
  {
    "text": "we only want to use uh post as we do we do Post here but",
    "start": "2925400",
    "end": "2931880"
  },
  {
    "text": "this should probably work with get it doesn't make sense because you shouldn't get data this way",
    "start": "2931880",
    "end": "2938880"
  },
  {
    "text": "um but let's do a post instead only support post and that's this is how you",
    "start": "2938880",
    "end": "2946000"
  },
  {
    "text": "do this [Music] in in Suave so now you're selling this",
    "start": "2946000",
    "end": "2952119"
  },
  {
    "text": "this route should only supp support the post U action so if I'm trying to",
    "start": "2952119",
    "end": "2959040"
  },
  {
    "text": "get data I should get some kind of what because this doesn't exist and back to",
    "start": "2959040",
    "end": "2967359"
  },
  {
    "text": "post it should work yeah I think that was all for my",
    "start": "2967359",
    "end": "2974040"
  },
  {
    "text": "demos I have short summary",
    "start": "2974040",
    "end": "2980760"
  },
  {
    "text": "um so the first part is f SHP is awesome I hope you saw that and um feel that",
    "start": "2980760",
    "end": "2987319"
  },
  {
    "text": "you're a little bit interested in trying this out um of course I was only using",
    "start": "2987319",
    "end": "2992559"
  },
  {
    "text": "the scripting part because I wanted to prototype and show show things out but it's not that hard to actually move this",
    "start": "2992559",
    "end": "2999520"
  },
  {
    "text": "to a console application uh if you want to but you can actually host a script application",
    "start": "2999520",
    "end": "3006079"
  },
  {
    "text": "if you want as well there there are example of that hosting fop script applications in as your website for",
    "start": "3006079",
    "end": "3012839"
  },
  {
    "text": "example uh we can run it in Docker um but yeah depending on how large",
    "start": "3012839",
    "end": "3019520"
  },
  {
    "text": "application is uh you should probably use a compile application but for prototyping and trying things out it's",
    "start": "3019520",
    "end": "3025640"
  },
  {
    "text": "really easy to get started with a console application or or a script environment and and just write those",
    "start": "3025640",
    "end": "3031599"
  },
  {
    "text": "three four lines of code and you're up and running and the next thing is the web is",
    "start": "3031599",
    "end": "3036680"
  },
  {
    "text": "functional as everyone agreed on uh so try to program the web using a",
    "start": "3036680",
    "end": "3043680"
  },
  {
    "text": "function language because it is functional uh if you want to know more",
    "start": "3043680",
    "end": "3049839"
  },
  {
    "text": "there are some resons here here you have sa um",
    "start": "3049839",
    "end": "3057119"
  },
  {
    "text": "there's you can always go to GitHub and look at the code it's not that advanced code actually uh if you have any",
    "start": "3057119",
    "end": "3063000"
  },
  {
    "text": "question how a combinator works it's almost easier to go look at the combinator in the in the code than",
    "start": "3063000",
    "end": "3068520"
  },
  {
    "text": "actually trying to read the documentation uh and there's a free book",
    "start": "3068520",
    "end": "3074119"
  },
  {
    "text": "on git book that's a great introduction to Shava as well that took a lot of",
    "start": "3074119",
    "end": "3079480"
  },
  {
    "text": "inspiration from uh and all my C code samples are in the last rep over there",
    "start": "3079480",
    "end": "3086079"
  },
  {
    "text": "uh it's a kind of mess on that repo but the code is there at least",
    "start": "3086079",
    "end": "3092640"
  },
  {
    "text": "uh before I take questions uh the next talk in this room is going to be Scott",
    "start": "3092640",
    "end": "3098720"
  },
  {
    "text": "lashin he's going to talk about parsing I guess that's going to be even more advanced than my talk uh so please stick",
    "start": "3098720",
    "end": "3107200"
  },
  {
    "text": "around for that and there is also on the PCT is the lab hour that is right after",
    "start": "3107200",
    "end": "3112559"
  },
  {
    "text": "lunch where you can come and uh ask questions for all the functional speakers here at the",
    "start": "3112559",
    "end": "3118839"
  },
  {
    "text": "conference and with that any",
    "start": "3118839",
    "end": "3123440"
  },
  {
    "text": "questions no hosting in excuse me what hosting in I is that hosting in is uh",
    "start": "3124480",
    "end": "3132359"
  },
  {
    "text": "was a question I think that that that should be should be possible but not the same way I should do with espet uh",
    "start": "3132359",
    "end": "3139559"
  },
  {
    "text": "because the the example that I think was Scott hansan who did it together with th pet host in the script application",
    "start": "3139559",
    "end": "3146040"
  },
  {
    "text": "on as website that is actually running on Hood I guess so you can fire up uh",
    "start": "3146040",
    "end": "3153760"
  },
  {
    "text": "exe and host that in is process but I would rather actually run it just as a",
    "start": "3153760",
    "end": "3159480"
  },
  {
    "text": "console application I I did a small performance Benchmark to against saave",
    "start": "3159480",
    "end": "3165119"
  },
  {
    "text": "against. net corbits on cell and it's roughly the same uh performance wise on",
    "start": "3165119",
    "end": "3170799"
  },
  {
    "text": "my mission it did I didn't do a huge performance Benchmark but uh I don't",
    "start": "3170799",
    "end": "3176079"
  },
  {
    "text": "think there's a good reason to use is for that maybe as a should probably use",
    "start": "3176079",
    "end": "3181599"
  },
  {
    "text": "like engine X or something else on top of of sa instead of is any other",
    "start": "3181599",
    "end": "3189599"
  },
  {
    "text": "questions for for example if someone sends corrupt requests try to sort",
    "start": "3198280",
    "end": "3208040"
  },
  {
    "text": "of I think I would actually if you're using internally in then you it might be",
    "start": "3208040",
    "end": "3213520"
  },
  {
    "text": "fine but for public I would probably put it by behind engine X or H Pro or something like that the question was if",
    "start": "3213520",
    "end": "3220040"
  },
  {
    "text": "it's safe to expose to the public and of course you can but I would probably put",
    "start": "3220040",
    "end": "3226040"
  },
  {
    "text": "it behind a proxy yeah yeah up there yeah thank you very",
    "start": "3226040",
    "end": "3232400"
  },
  {
    "text": "nice nice presentation I just to add the benefit to the audience",
    "start": "3232400",
    "end": "3238680"
  },
  {
    "text": "that pretty Lowel way of working with the web there",
    "start": "3238680",
    "end": "3244760"
  },
  {
    "text": "are which will allow you to do everything both on the server and side",
    "start": "3250240",
    "end": "3255520"
  },
  {
    "text": "and you get the benefit of URLs and",
    "start": "3255520",
    "end": "3260920"
  },
  {
    "text": "so so the comment was that there's are this also project called Web sharper",
    "start": "3261200",
    "end": "3267280"
  },
  {
    "text": "that you can use together or separately with sa that gives you some more more stuff",
    "start": "3267280",
    "end": "3274160"
  },
  {
    "text": "basically little bit High more high high level than Su any more",
    "start": "3274160",
    "end": "3280720"
  },
  {
    "text": "questions then thank [Applause]",
    "start": "3282799",
    "end": "3290919"
  },
  {
    "text": "you",
    "start": "3294079",
    "end": "3297079"
  }
]