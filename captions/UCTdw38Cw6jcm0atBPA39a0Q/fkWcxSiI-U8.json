[
  {
    "text": "right it's now three o'clock start I'm",
    "start": "1370",
    "end": "6680"
  },
  {
    "text": "glad to see some made it back okay so",
    "start": "6680",
    "end": "16049"
  },
  {
    "text": "back to these strings and compiler performance here we have a graph of",
    "start": "16049",
    "end": "24439"
  },
  {
    "text": "versions of GCC and we have clang this",
    "start": "24439",
    "end": "34860"
  },
  {
    "text": "is where ABI 11 kicked in so standard string became a small string up to my",
    "start": "34860",
    "end": "40260"
  },
  {
    "text": "string what we have is these are the one that I",
    "start": "40260",
    "end": "49950"
  },
  {
    "text": "did my small string up to my string standard string and there's something",
    "start": "49950",
    "end": "55260"
  },
  {
    "text": "called new c XXV string which is actually small string optimized and came",
    "start": "55260",
    "end": "60510"
  },
  {
    "text": "out long before standard string was small screen optimized and it also it",
    "start": "60510",
    "end": "65820"
  },
  {
    "text": "wasn't copy-on-write either so generally standard string small",
    "start": "65820",
    "end": "78900"
  },
  {
    "text": "string optimized string made well I can't tell the difference between there",
    "start": "78900",
    "end": "85290"
  },
  {
    "text": "and there these lower lines here is",
    "start": "85290",
    "end": "91140"
  },
  {
    "text": "where it is but interestingly we look at",
    "start": "91140",
    "end": "99060"
  },
  {
    "text": "Visa string here these blue squares significantly faster when it's a small string then standard string",
    "start": "99060",
    "end": "109188"
  },
  {
    "text": "interesting feature GCC 5.3 with the old",
    "start": "112560",
    "end": "118950"
  },
  {
    "text": "standard string performance not bad up here all of these when it's up here",
    "start": "118950",
    "end": "128940"
  },
  {
    "text": "the compiler optimized out the test that means I've got compile time strings I'm",
    "start": "128940",
    "end": "135880"
  },
  {
    "text": "in the good zone I'm very very happy here",
    "start": "135880",
    "end": "142260"
  },
  {
    "text": "it's a log scale warning different scales from the previous graphs so what",
    "start": "142290",
    "end": "150310"
  },
  {
    "text": "we can see is we'll ignore these ones at",
    "start": "150310",
    "end": "155830"
  },
  {
    "text": "the top that's just good news that's fine good news is no news what's",
    "start": "155830",
    "end": "161800"
  },
  {
    "text": "happening around here well this is an interesting feature GC 5 3 with the ABI",
    "start": "161800",
    "end": "168280"
  },
  {
    "text": "11 small string optimized non copy-on-write string performance appalling terrible performance GC 5 3 in",
    "start": "168280",
    "end": "180430"
  },
  {
    "text": "fact you'll find the 5 series compilers will probably give you very bad performance they just drop the ball",
    "start": "180430",
    "end": "186370"
  },
  {
    "text": "there 6.3 tends to recover the",
    "start": "186370",
    "end": "194110"
  },
  {
    "text": "performance again clang early versions of clang very poor performance interestingly clang doesn't do as well",
    "start": "194110",
    "end": "203700"
  },
  {
    "text": "with optimizing out Const extra with regards to these small string optimized",
    "start": "203700",
    "end": "210010"
  },
  {
    "text": "strings apart from for some reason canoe C XXV string when it's a small string",
    "start": "210010",
    "end": "215890"
  },
  {
    "text": "clang really likes clang really likes GC C code well ok",
    "start": "215890",
    "end": "225090"
  },
  {
    "text": "look don't question just accepts ok but",
    "start": "225090",
    "end": "230440"
  },
  {
    "text": "in general we can see here very reliable performance across all the rest pretty",
    "start": "230440",
    "end": "237070"
  },
  {
    "text": "much the same rubbish doesn't manage these optimizations here",
    "start": "237070",
    "end": "243900"
  },
  {
    "text": "this line here standard small string pop to my string there of course it's much",
    "start": "243900",
    "end": "252100"
  },
  {
    "text": "lower here because of course it's copy-on-write it's not small screen optimized so we don't we're not",
    "start": "252100",
    "end": "258549"
  },
  {
    "text": "surprised to see standard string rise a bit here ever heard of that folk law but",
    "start": "258550",
    "end": "266020"
  },
  {
    "text": "adding symbols to your executable or on linux makes it slower there's the test",
    "start": "266020",
    "end": "272290"
  },
  {
    "text": "case can you see any noticeable performance of fact no there is none",
    "start": "272290",
    "end": "279600"
  },
  {
    "text": "it's a lie again another one of those urban myths that is just sorry it's",
    "start": "279600",
    "end": "287110"
  },
  {
    "text": "wrong ah what else about this graph it's",
    "start": "287110",
    "end": "292510"
  },
  {
    "text": "pretty flat we don't see any general improvement of performance over time",
    "start": "292510",
    "end": "298770"
  },
  {
    "text": "remember this is juicy 473 those are newer compilers it might be the same",
    "start": "298770",
    "end": "304870"
  },
  {
    "text": "architecture but they're not scheduling the code any better are they no it's a",
    "start": "304870",
    "end": "311830"
  },
  {
    "text": "little bit of a shame okay",
    "start": "311830",
    "end": "318060"
  },
  {
    "text": "let's slice and dice it slightly differently you see here there we've got",
    "start": "318210",
    "end": "326560"
  },
  {
    "text": "the constructor and destructor performance so that's a pretty simple test let's create a small string up to",
    "start": "326560",
    "end": "331660"
  },
  {
    "text": "my string initialized from a C string literal here let's look at the",
    "start": "331660",
    "end": "341190"
  },
  {
    "text": "assignment performance again pretty flat",
    "start": "341190",
    "end": "347820"
  },
  {
    "text": "again clang seems to a reasonable job with ganoush CX x piece of string clang in",
    "start": "347820",
    "end": "357130"
  },
  {
    "text": "this case managed to optimize out my",
    "start": "357130",
    "end": "363790"
  },
  {
    "text": "heavily optimized by the way in this string on these graphs yes it's got mem copy ops in there so it's got my",
    "start": "363790",
    "end": "370720"
  },
  {
    "text": "optimized memory copy in there but apparently didn't give very good performance earlier but",
    "start": "370720",
    "end": "377260"
  },
  {
    "text": "you slice and dice it slightly differently and look at how clang works with it it works slightly better now",
    "start": "377260",
    "end": "384900"
  },
  {
    "text": "again if we look at here standard",
    "start": "384900",
    "end": "392770"
  },
  {
    "text": "strength likewise we see relatively poor performance which is improved",
    "start": "392770",
    "end": "400120"
  },
  {
    "text": "considerably we're moving from about there to up there remember that this is a log scale so we're moving from about",
    "start": "400120",
    "end": "406480"
  },
  {
    "text": "ten to seven to tend to what was it 10 to the 7 to was a say 5 times 10 to the",
    "start": "406480",
    "end": "413320"
  },
  {
    "text": "7 so it's a significant performance improvement to use the standard strength",
    "start": "413320",
    "end": "418740"
  },
  {
    "text": "but doesn't take much effort to write your own that can be just optimized out",
    "start": "418740",
    "end": "427410"
  },
  {
    "text": "let's look at replacement so I assign a string but now what I've done is I've",
    "start": "430560",
    "end": "436390"
  },
  {
    "text": "constructed a small string initialized it with a small string then what I'm going to do is replace it assign a new",
    "start": "436390",
    "end": "441610"
  },
  {
    "text": "small string into there replace that so I've got two men cut potential men copies going on we can see clearly it's",
    "start": "441610",
    "end": "449350"
  },
  {
    "text": "not surprising that it can't be optimized out anymore because we've actually got two men copies going on it's just a bit too hard in quotes for",
    "start": "449350",
    "end": "456430"
  },
  {
    "text": "the compiler apart from bizarrely remember I was slacking off GCC 5.3",
    "start": "456430",
    "end": "462570"
  },
  {
    "text": "managed it there for some reason but they've lost it over here why are the",
    "start": "462570",
    "end": "468220"
  },
  {
    "text": "GCC Crabbe lost it again also we see interestingly that clang quite a similar",
    "start": "468220",
    "end": "476740"
  },
  {
    "text": "performance to the GCC crowd again we can see can you see XXV string it's",
    "start": "476740",
    "end": "483820"
  },
  {
    "text": "doing pretty well it's old old code that is it's doing pretty well standard string not too bad",
    "start": "483820",
    "end": "493360"
  },
  {
    "text": "modern Standard strings mirroring it reasonably well you can't see the error",
    "start": "493360",
    "end": "499240"
  },
  {
    "text": "bars on this cuz they're so small",
    "start": "499240",
    "end": "503460"
  },
  {
    "text": "I think it's enough from that graph okay",
    "start": "504670",
    "end": "510340"
  },
  {
    "text": "I mentioned about this fixed to MIT bits translator so what does it do it",
    "start": "510340",
    "end": "515680"
  },
  {
    "text": "translates fixed messages from there's binary format to this binary format and",
    "start": "515680",
    "end": "522400"
  },
  {
    "text": "back so it receives it's a server it listens to a socket sends to another",
    "start": "522400",
    "end": "530350"
  },
  {
    "text": "socket listens to another socket sends back to the client",
    "start": "530350",
    "end": "537210"
  },
  {
    "text": "so we're translating from fix to this format and back again so what happens is",
    "start": "537210",
    "end": "543820"
  },
  {
    "text": "we're doing a search through the fixed message for little substrings take a price convert the price into a decimal",
    "start": "543820",
    "end": "551260"
  },
  {
    "text": "into a double and then if we've got a quantity take the quantity which is an integer convert that into an integer and",
    "start": "551260",
    "end": "559300"
  },
  {
    "text": "integer string to a long and then we're doing the reverse for coming back so",
    "start": "559300",
    "end": "568240"
  },
  {
    "text": "there's some searches going on there's some string copies going on there's a quite but quite a bit of f2 a a 2f a - I",
    "start": "568240",
    "end": "576850"
  },
  {
    "text": "I - a going on in there I used boost a",
    "start": "576850",
    "end": "583780"
  },
  {
    "text": "Zeo for my socket library why it's easy",
    "start": "583780",
    "end": "591000"
  },
  {
    "text": "turns out is actually not much of a performance hit at all very very heavily",
    "start": "591000",
    "end": "598810"
  },
  {
    "text": "optimized to the code extremely heavily optimized I did not use soap solar flare",
    "start": "598810",
    "end": "609400"
  },
  {
    "text": "or XO blaze cards because it's on my computer at home and I'd need to buy them I didn't use open on load that",
    "start": "609400",
    "end": "616930"
  },
  {
    "text": "would have reduced context switches it would have improved performance",
    "start": "616930",
    "end": "621779"
  },
  {
    "text": "okay so what is Inc as I mentioned the details we I receive a fixed message from some kind of clients which is just",
    "start": "625770",
    "end": "632550"
  },
  {
    "text": "pumping fixed messages at this translate it send it over us to some socket a",
    "start": "632550",
    "end": "638160"
  },
  {
    "text": "socket to a basic simulator exchange simulator that I've written which then sends back a fill message and then",
    "start": "638160",
    "end": "645540"
  },
  {
    "text": "that's translated back to a fixed fill message sent back to the clients time stops so that's my timestamp that round",
    "start": "645540",
    "end": "652830"
  },
  {
    "text": "trip I was using my computer for all",
    "start": "652830",
    "end": "660600"
  },
  {
    "text": "sorts of things at the time surfing the web email whatever sometimes it was quiet sometimes it was busy with and",
    "start": "660600",
    "end": "667950"
  },
  {
    "text": "without Numa control I use gen 2 even on",
    "start": "667950",
    "end": "673320"
  },
  {
    "text": "my laptop it is heavily optimized I use",
    "start": "673320",
    "end": "679980"
  },
  {
    "text": "the make ops flag and the compar see flags they are long and extensive I have",
    "start": "679980",
    "end": "687360"
  },
  {
    "text": "a dual AMD full 1:8 oh why because back then it was a top it was a pretty decent",
    "start": "687360",
    "end": "693870"
  },
  {
    "text": "processor it's old now it's got 2 memory paths busses on it I've got a",
    "start": "693870",
    "end": "699480"
  },
  {
    "text": "motherboard on there that makes sure it's 2 memory buses it's got very fat Fife O's it's a faster motherboard it's",
    "start": "699480",
    "end": "710640"
  },
  {
    "text": "run with performance profile enabled in CPU freak but it is particularly slow",
    "start": "710640",
    "end": "718050"
  },
  {
    "text": "and SSE know your architecture remember",
    "start": "718050",
    "end": "725520"
  },
  {
    "text": "that picture I showed earlier about the architecture you need to know your architecture and get familiar with it",
    "start": "725520",
    "end": "731300"
  },
  {
    "text": "ok old GCC's newer GCC's hears clang",
    "start": "731300",
    "end": "740130"
  },
  {
    "text": "over here these are clang we see the error bars 4% mean average deviation is",
    "start": "740130",
    "end": "747120"
  },
  {
    "text": "what I'm trying to aim for sometimes I couldn't get it",
    "start": "747120",
    "end": "752449"
  },
  {
    "text": "we can see older code newer code micro",
    "start": "756240",
    "end": "761790"
  },
  {
    "text": "optimizations being introduced sometimes they did really bad things sometimes the",
    "start": "761790",
    "end": "770999"
  },
  {
    "text": "compiler remember GC 5-series was just rubbish what we see here is the y-axis",
    "start": "770999",
    "end": "782160"
  },
  {
    "text": "is mean round-trip in microseconds so",
    "start": "782160",
    "end": "788459"
  },
  {
    "text": "what we see here is and what I've done is I've timed the simulator that I've got my exchange simulator and then I've",
    "start": "788459",
    "end": "794639"
  },
  {
    "text": "chained the whole link the time taken for a fixed client to send a message to",
    "start": "794639",
    "end": "800759"
  },
  {
    "text": "my link for it to translate it send it to the simulator the simulator to the exchange sends back a fill it translates",
    "start": "800759",
    "end": "806910"
  },
  {
    "text": "the fill sends it back to the fixed client time stops that's the full round-trip so if we subtract this number",
    "start": "806910",
    "end": "814079"
  },
  {
    "text": "from this number we can see the time for the translation back and forth without",
    "start": "814079",
    "end": "820439"
  },
  {
    "text": "the time for my simulated exchange so that's why this graph is included we can",
    "start": "820439",
    "end": "829290"
  },
  {
    "text": "see interesting features here as I said tends to get better as my micro",
    "start": "829290",
    "end": "834360"
  },
  {
    "text": "optimizations kicked in and I did more work and sweated harder so we've gone down from what eight about eighty-five",
    "start": "834360",
    "end": "840259"
  },
  {
    "text": "microseconds down here we're hitting 50 odd fifty-five odd microseconds yeah",
    "start": "840259",
    "end": "847170"
  },
  {
    "text": "it's not bad it's okay I'm happy sadly",
    "start": "847170",
    "end": "854569"
  },
  {
    "text": "older GCC's I'm sorry newer GCC's really bad performance",
    "start": "856540",
    "end": "861690"
  },
  {
    "text": "there's curiously not effect not in the simulator the link the exchange simulator remember the exchange",
    "start": "861690",
    "end": "867790"
  },
  {
    "text": "simulator doesn't have much in the way of optimizations that I've done to it and we've seen that sometimes these",
    "start": "867790",
    "end": "874780"
  },
  {
    "text": "micro optimizations can play havoc with the code generator and sometimes we've seen that the compilers are just Rossum",
    "start": "874780",
    "end": "880840"
  },
  {
    "text": "and what we've got here is we can see the performance is quite poor for GCC",
    "start": "880840",
    "end": "888250"
  },
  {
    "text": "seven and eight curiously 7.1 was okay but 7.2 it really",
    "start": "888250",
    "end": "894000"
  },
  {
    "text": "drops off a cliff higher numbers are bad here lower numbers are better if we look",
    "start": "894000",
    "end": "903400"
  },
  {
    "text": "at the actual simulator itself the exchange simulator I mean look the performance is roughly flat and that's",
    "start": "903400",
    "end": "910360"
  },
  {
    "text": "because of course I haven't put much effort into it at all it's into here that I'm interested the actual link",
    "start": "910360",
    "end": "917350"
  },
  {
    "text": "itself we can also see why the error",
    "start": "917350",
    "end": "922540"
  },
  {
    "text": "bars smaller here because I really wanted to find out is this true or not so I went from 4% mean average deviation",
    "start": "922540",
    "end": "930280"
  },
  {
    "text": "to 2% mean average deviation what happens is I send I send about a hundred",
    "start": "930280",
    "end": "938830"
  },
  {
    "text": "thousand orders through this round-trip and time how long it takes for a hundred",
    "start": "938830",
    "end": "945370"
  },
  {
    "text": "thousand to happen divide the total time by a hundred thousand that's the time for one round-trip then I repeat that",
    "start": "945370",
    "end": "953140"
  },
  {
    "text": "between five to ten thousand times to get my mean average deviation to settle",
    "start": "953140",
    "end": "960510"
  },
  {
    "text": "so this is very heavily statistically measured to try and get reliable results",
    "start": "960510",
    "end": "970440"
  },
  {
    "text": "but remember that of course if we look at this this about what 55 microseconds on an ancient architecture the basic",
    "start": "970440",
    "end": "979900"
  },
  {
    "text": "point is is that all that effort to get",
    "start": "979900",
    "end": "985420"
  },
  {
    "text": "these micro optimizations in was wiped out by bad choice of compiler flipside",
    "start": "985420",
    "end": "995500"
  },
  {
    "text": "of the coin clang is now as fast as GCC or is it GCC is a slowest time the generated code I",
    "start": "995500",
    "end": "1002850"
  },
  {
    "text": "mean Shane clangers I'd be knockin clang",
    "start": "1002850",
    "end": "1012540"
  },
  {
    "text": "a bit so let's be positive this is how",
    "start": "1012540",
    "end": "1019830"
  },
  {
    "text": "long it took to compile that software that fixed to MIT bit translator wall",
    "start": "1019830",
    "end": "1027780"
  },
  {
    "text": "clock time time make - j-3 go GCC for",
    "start": "1027780",
    "end": "1035579"
  },
  {
    "text": "seven GCC eight over 35 minutes to",
    "start": "1035579",
    "end": "1041370"
  },
  {
    "text": "compile that code it's very very slow the main reason is boost Hana if you",
    "start": "1041370",
    "end": "1049980"
  },
  {
    "text": "want to be glace silly slow in compilation times boost Hana is way to go boost MPL is much faster for it to",
    "start": "1049980",
    "end": "1057540"
  },
  {
    "text": "compile clang on the other hand crikey",
    "start": "1057540",
    "end": "1066020"
  },
  {
    "text": "just over five minutes for the same code hang on hang on",
    "start": "1066020",
    "end": "1071880"
  },
  {
    "text": "that's seven times performance difference now what was beyond is saying",
    "start": "1071880",
    "end": "1077460"
  },
  {
    "text": "about modules well I hope it's good to be about eight times",
    "start": "1077460",
    "end": "1084440"
  },
  {
    "text": "sod modules just use a better compiler and remember now",
    "start": "1086060",
    "end": "1092640"
  },
  {
    "text": "GCC seven and eight the performance of the generated code is just as rubbish as clang yeah use clang yeah sorry just as",
    "start": "1092640",
    "end": "1105990"
  },
  {
    "text": "rubbish yes yes I'm being deliberately provoked provocative because I do hope that some of you",
    "start": "1105990",
    "end": "1111110"
  },
  {
    "text": "may even be Clank developers or may know clang developers and say that ass Jason",
    "start": "1111110",
    "end": "1117049"
  },
  {
    "text": "was being really nasty about you and they'll have a look at this and they'll say you know what we're gonna have a Tim",
    "start": "1117049",
    "end": "1122620"
  },
  {
    "text": "right we'll show him slag us off in",
    "start": "1122620",
    "end": "1128090"
  },
  {
    "text": "front of loads of people yeah we'll make it faster oh boo hiss oh no I'm so sold",
    "start": "1128090",
    "end": "1135980"
  },
  {
    "text": "we look so silly no no I've just got faster coke brilliant that's my that's what I'm doing",
    "start": "1135980",
    "end": "1142720"
  },
  {
    "text": "this is heavily templated code by the way as well so and there's no error bars",
    "start": "1142720",
    "end": "1148820"
  },
  {
    "text": "on this I ran it a few times but when I say a few times it was a three four five actually that's a lie actually did run",
    "start": "1148820",
    "end": "1154850"
  },
  {
    "text": "it over a day didn't I yes now just look mark when I build the results and said it looks about that and I was busy",
    "start": "1154850",
    "end": "1160190"
  },
  {
    "text": "surfing the way I've been doing emails and God knows what so the Machine certainly wasn't quiescent but I didn't",
    "start": "1160190",
    "end": "1166490"
  },
  {
    "text": "bother put error valves because it was massive massive performance difference in compilation sorry clang get in code I",
    "start": "1166490",
    "end": "1181520"
  },
  {
    "text": "think this is about 100 mm a hundred thousand lines of code in this library probably about 50,000 lines of code",
    "start": "1181520",
    "end": "1189110"
  },
  {
    "text": "dedicated to this translator so it's not big it's not tiny but it's reasonable",
    "start": "1189110",
    "end": "1195740"
  },
  {
    "text": "ish and trying to get it to compile with clang water pain okay Lib C xxxx you'd",
    "start": "1195740",
    "end": "1206510"
  },
  {
    "text": "say you don't use standard you know don't use GCC slip standard C++ why you dummy use clangs one I'd have to rebuild",
    "start": "1206510",
    "end": "1213950"
  },
  {
    "text": "all my third-party and boost and everything to link against it life's just too short couldn't be bothered so I",
    "start": "1213950",
    "end": "1220549"
  },
  {
    "text": "thought all right I'll stick with Lib standard C++ from canoe and take the pain from that and compile a bug in",
    "start": "1220549",
    "end": "1227059"
  },
  {
    "text": "clang in that file there's a no accept",
    "start": "1227059",
    "end": "1232250"
  },
  {
    "text": "specification here for hashmaps",
    "start": "1232250",
    "end": "1236830"
  },
  {
    "text": "it's a compiler bug because you see what happens is when you replace the know except here with just up submental so",
    "start": "1240590",
    "end": "1247529"
  },
  {
    "text": "you know except false here right and take away this BEC eval in there it",
    "start": "1247529",
    "end": "1255480"
  },
  {
    "text": "works is it okay it works when I change",
    "start": "1255480",
    "end": "1265769"
  },
  {
    "text": "it to no accept true in the know except in the hash fun too so there oh no no no",
    "start": "1265769",
    "end": "1271470"
  },
  {
    "text": "no genuinely pardon me it is a bug in plan hahaha that's maybe a defect",
    "start": "1271470",
    "end": "1276989"
  },
  {
    "text": "reports but it is a bug in clang because I had a hash that I created a hash",
    "start": "1276989",
    "end": "1284549"
  },
  {
    "text": "function and the function call operator in it I put no except true a by brain",
    "start": "1284549",
    "end": "1293730"
  },
  {
    "text": "wave I was probably up late at night and had too much coffee and shaking a bit I",
    "start": "1293730",
    "end": "1299940"
  },
  {
    "text": "deleted no except true it just deleted the true and put note set and it works",
    "start": "1299940",
    "end": "1305570"
  },
  {
    "text": "parser error in clang Yaya Yaya wasted two days of my time my",
    "start": "1305570",
    "end": "1313559"
  },
  {
    "text": "time is infinitely valuable to me and a lot of swearing that's the error message",
    "start": "1313559",
    "end": "1320309"
  },
  {
    "text": "I got that told me that you should delete the parentheses true parentheses",
    "start": "1320309",
    "end": "1326119"
  },
  {
    "text": "it's been edited to fit on the slide because obviously this is a template error message it is of course at least 5",
    "start": "1326119",
    "end": "1333210"
  },
  {
    "text": "K in size but nowhere in it note in",
    "start": "1333210",
    "end": "1339480"
  },
  {
    "text": "instantiation of default argument for burn required here no it just went off",
    "start": "1339480",
    "end": "1346710"
  },
  {
    "text": "on a drugs i graph the error messages",
    "start": "1346710",
    "end": "1353279"
  },
  {
    "text": "when you try and get your code to compile because you think oh well you know clang so much faster at compilation and now GCC performance sucks so badly I",
    "start": "1353279",
    "end": "1360450"
  },
  {
    "text": "will just move to clang yeah it's not",
    "start": "1360450",
    "end": "1365700"
  },
  {
    "text": "easy just because your code has compiled with multiple GCC compiler is over the years",
    "start": "1365700",
    "end": "1371560"
  },
  {
    "text": "you will come across compiler books and you will come across defect reports that in libraries that have been around for",
    "start": "1371560",
    "end": "1377930"
  },
  {
    "text": "years as well as the gentleman has thankfully cleared up for me thank you",
    "start": "1377930",
    "end": "1383620"
  },
  {
    "text": "okay we've talked about software but what about the rest",
    "start": "1383620",
    "end": "1391450"
  },
  {
    "text": "we're not using include OS here we're not running on the metal so there is operating system and this is an ancient",
    "start": "1391450",
    "end": "1397280"
  },
  {
    "text": "old hardware so let's look what happens if we change the operating system common law has it",
    "start": "1397280",
    "end": "1406310"
  },
  {
    "text": "that an operating system accommodates for about two to four percent of your runtime roughly common law I think",
    "start": "1406310",
    "end": "1417110"
  },
  {
    "text": "you'll know what I think about common law by now I don't believe it I want to",
    "start": "1417110",
    "end": "1424130"
  },
  {
    "text": "see the numbers please for my test case it might be true in general but for this specific test case and your mileage may",
    "start": "1424130",
    "end": "1431330"
  },
  {
    "text": "vary I want to see what happens so I thought I'm going to use CentOS I hate sent us",
    "start": "1431330",
    "end": "1437930"
  },
  {
    "text": "with a passion it's an appalling distribution but unfortunately it's used",
    "start": "1437930",
    "end": "1444560"
  },
  {
    "text": "a lot by banks and finance why because there's skinflint bastards and they like to not pay for anything Red Hat's",
    "start": "1444560",
    "end": "1453980"
  },
  {
    "text": "sometimes they do pay for things and they pay for Red Hat god bless Red Hat particularly Jonathan Whateley and all the rest who work there",
    "start": "1453980",
    "end": "1461560"
  },
  {
    "text": "they do pay for very good it's a proxy because I don't want to pay for a Red",
    "start": "1461560",
    "end": "1466970"
  },
  {
    "text": "Hat I don't want to pay for scientific Linux all you sent us so it's a proxy for it Ubuntu we all have heard of a bun",
    "start": "1466970",
    "end": "1474710"
  },
  {
    "text": "- yeah you get your laptop you stick above a bun - ISO image in there see if it works",
    "start": "1474710",
    "end": "1480610"
  },
  {
    "text": "five minutes later everything's working screen brightness Bluetooth Bluetooth on",
    "start": "1480610",
    "end": "1486110"
  },
  {
    "text": "a what a laptop in Linux Wow yeah it works printing etc Ubuntu and then of",
    "start": "1486110",
    "end": "1493790"
  },
  {
    "text": "course I'm a gentle user the one Ginsu Claude you gotta hear",
    "start": "1493790",
    "end": "1500760"
  },
  {
    "text": "that's I didn't use my main computer I use another computer I created a fresh",
    "start": "1500760",
    "end": "1505800"
  },
  {
    "text": "installation that was these are stock ISO images so I did an unfair race",
    "start": "1505800",
    "end": "1512400"
  },
  {
    "text": "because obviously I would support gen - this is heavily optimized stripped down no unnecessary rubbish on there",
    "start": "1512400",
    "end": "1520200"
  },
  {
    "text": "basically I just barely installed it yeah and couldn't be bothered to run the rest of the installation so just enough",
    "start": "1520200",
    "end": "1526680"
  },
  {
    "text": "to basically reboot my stock kernel and run that my code and that's it yeah no F",
    "start": "1526680",
    "end": "1533520"
  },
  {
    "text": "cron path I laugh in your face SSH putt syslog D sod off nothing right",
    "start": "1533520",
    "end": "1544280"
  },
  {
    "text": "really surely this would be utterly unusable in production I don't care I want Jen to to win obviously yeah look I",
    "start": "1544280",
    "end": "1557040"
  },
  {
    "text": "work in the city okay if I was fair I wouldn't work in the city but used a",
    "start": "1557040",
    "end": "1563790"
  },
  {
    "text": "newer computer you'll be pleased to know finally moved into the 21st century of computers grandad this is a single",
    "start": "1563790",
    "end": "1571980"
  },
  {
    "text": "processor has well it's a it's it's quite a decent processor actually it's",
    "start": "1571980",
    "end": "1577680"
  },
  {
    "text": "an X Games machine from a the story behind it is long and amusing ask me in",
    "start": "1577680",
    "end": "1583440"
  },
  {
    "text": "the bar I / clocks it to 4.2 gigahertz which is well beyond the thermal capacity of it so if you run too many of",
    "start": "1583440",
    "end": "1591570"
  },
  {
    "text": "the cause it's a compiling it'll overheat and crash because it can't dump",
    "start": "1591570",
    "end": "1598770"
  },
  {
    "text": "the heat fast enough yes I know I'm burning the chip out I don't care I did",
    "start": "1598770",
    "end": "1604530"
  },
  {
    "text": "not apply any firmware patches why not a skylake they're not so heavily tuned to",
    "start": "1604530",
    "end": "1612990"
  },
  {
    "text": "hft by the way this sentence is a quote from Intel you'll find out why shortly",
    "start": "1612990",
    "end": "1621320"
  },
  {
    "text": "again no solar flare or open onload and yes they would have reduced any impacts",
    "start": "1621320",
    "end": "1629040"
  },
  {
    "text": "and they would have but often in the city in the city s a bit they often don't they'll use a",
    "start": "1629040",
    "end": "1637290"
  },
  {
    "text": "solar flare card or an xbox card but they won't use the kernel modules that come from it why because the dev ops",
    "start": "1637290",
    "end": "1643950"
  },
  {
    "text": "guys are so gormless that it's too hard for them to do that installation or IT",
    "start": "1643950",
    "end": "1649920"
  },
  {
    "text": "security say oh no no no we can't have any third-party modules on this yeah the",
    "start": "1649920",
    "end": "1656640"
  },
  {
    "text": "tail wags the dog what what was that quote by barrier in the film death of",
    "start": "1656640",
    "end": "1662490"
  },
  {
    "text": "Stalin wish I could take them out the back and shoot them and bulldoze them into a lime pit anyway so often it's not",
    "start": "1662490",
    "end": "1670020"
  },
  {
    "text": "used not often of course the kernels are either so old because this is a merchant bank and they update things when they go",
    "start": "1670020",
    "end": "1677400"
  },
  {
    "text": "bust basically but often that you can't actually get a kernel module that will run on it",
    "start": "1677400",
    "end": "1684530"
  },
  {
    "text": "so hence often not used okay he hit me",
    "start": "1684530",
    "end": "1691200"
  },
  {
    "text": "with it the figures yes it's one version",
    "start": "1691200",
    "end": "1696360"
  },
  {
    "text": "I didn't try different versions this is compiled with GCC 7.3 so it's not the",
    "start": "1696360",
    "end": "1703200"
  },
  {
    "text": "greatest compiled GCC compiler on the planet but it's a fair test by the way the binary image that was run was",
    "start": "1703200",
    "end": "1709970"
  },
  {
    "text": "identical when I say identical you know that",
    "start": "1709970",
    "end": "1717179"
  },
  {
    "text": "option to change the bootloader that you can put into the image to change your LD dot s oh yeah I did that as well so this",
    "start": "1717179",
    "end": "1726480"
  },
  {
    "text": "is identical Lib C identical Lib M identical that was my boot someone",
    "start": "1726480",
    "end": "1733500"
  },
  {
    "text": "directory because I got my own LD door s o in there because I changed the run part the l DD loader path please I'd",
    "start": "1733500",
    "end": "1747120"
  },
  {
    "text": "love to or somebody would pay me",
    "start": "1747120",
    "end": "1750260"
  },
  {
    "text": "so yes I didn't use the Lib C from the actual operating system I hope you can",
    "start": "1753220",
    "end": "1762410"
  },
  {
    "text": "see from this graph there is considerable difference in performance that four percent two words mail of a",
    "start": "1762410",
    "end": "1775850"
  },
  {
    "text": "cow fecal matter look at the massive",
    "start": "1775850",
    "end": "1782420"
  },
  {
    "text": "difference in performance the operating",
    "start": "1782420",
    "end": "1787940"
  },
  {
    "text": "system I love to hate CentOS early",
    "start": "1787940",
    "end": "1793490"
  },
  {
    "text": "version of Center six point nine six point nine is very new for the city by the way actually awful performance same",
    "start": "1793490",
    "end": "1803660"
  },
  {
    "text": "code same hardware look at that",
    "start": "1803660",
    "end": "1810260"
  },
  {
    "text": "this is nearly as slow as my two point six gigahertz eight what cranky",
    "start": "1810260",
    "end": "1819320"
  },
  {
    "text": "six-year-old Opterons and this is a ha",
    "start": "1819320",
    "end": "1824720"
  },
  {
    "text": "has well where is it where do I put it down he said I core seven overclocks at",
    "start": "1824720",
    "end": "1831530"
  },
  {
    "text": "four point two gigahertz a stunningly poor kernel 2.6 kernel three 3 series",
    "start": "1831530",
    "end": "1843050"
  },
  {
    "text": "kernel significantly better performance",
    "start": "1843050",
    "end": "1848380"
  },
  {
    "text": "Ubuntu I tried the generic and low latency kernels with a blonde - if you",
    "start": "1849130",
    "end": "1856550"
  },
  {
    "text": "look carefully and have the time and I just don't have the time the low latency kernels are POS useless uniformly slower",
    "start": "1856550",
    "end": "1866000"
  },
  {
    "text": "than the generic kernel this is just a",
    "start": "1866000",
    "end": "1871520"
  },
  {
    "text": "wall clock high performance throughput and I'm looking also at latency included because I wait for the next message to",
    "start": "1871520",
    "end": "1877640"
  },
  {
    "text": "come back before I send a message I wait for the message to return so it's both throughput and latency",
    "start": "1877640",
    "end": "1885020"
  },
  {
    "text": "and just rubbish rotten useless not worth the space it takes and we can see",
    "start": "1885020",
    "end": "1893150"
  },
  {
    "text": "here we are this is a comparison 310 313 colonel right the bun - sadly boo hiss",
    "start": "1893150",
    "end": "1901820"
  },
  {
    "text": "is slower than sent off seven if we come",
    "start": "1901820",
    "end": "1909410"
  },
  {
    "text": "to the newer four series Colonels for thirteen series colonel so this is getting into this century now yeah we",
    "start": "1909410",
    "end": "1916520"
  },
  {
    "text": "stopped using stone tablets around here it looks better the big problem with",
    "start": "1916520",
    "end": "1925100"
  },
  {
    "text": "sent us here deviations are terrible so",
    "start": "1925100",
    "end": "1931000"
  },
  {
    "text": "the reliability of it is very poor why I",
    "start": "1931480",
    "end": "1938530"
  },
  {
    "text": "didn't have time to go into all the details of what's wrong with the colonel what's running there what's causing it",
    "start": "1938530",
    "end": "1943670"
  },
  {
    "text": "blah-dee-blah of course Gentoo it's",
    "start": "1943670",
    "end": "1950810"
  },
  {
    "text": "about the same speed as a bun - some of the best uh bunters about the same speed as CentOS but it's really a reliable it",
    "start": "1950810",
    "end": "1963680"
  },
  {
    "text": "does pay gen - is a is it's about five percent faster than the best of the rest",
    "start": "1963680",
    "end": "1972010"
  },
  {
    "text": "so that is material of significance in the city but the pain you've got to go through to get gen to working of course",
    "start": "1972010",
    "end": "1979160"
  },
  {
    "text": "hmm your mileage may vary and of course we can see there's considerable variation okay what about the hardware",
    "start": "1979160",
    "end": "1990230"
  },
  {
    "text": "because I've changed the hardware from so in pre start something new what's the performance difference there well not surprisingly pretty radical",
    "start": "1990230",
    "end": "1998680"
  },
  {
    "text": "right we're looking at about 75 microsecond",
    "start": "1998680",
    "end": "2004240"
  },
  {
    "text": "round trip down to a 22 microsecond round trip on an IKE or 747 I know",
    "start": "2004240",
    "end": "2016910"
  },
  {
    "text": "yes I did have micro threading it sorry hyper threading enabled why remember",
    "start": "2016910",
    "end": "2024140"
  },
  {
    "text": "that l1 cache the l1 cache is shared between hyper threads and that means I",
    "start": "2024140",
    "end": "2032210"
  },
  {
    "text": "don't have to wait for the l2 cache for data I can share it between there those",
    "start": "2032210",
    "end": "2037280"
  },
  {
    "text": "as long as I know remember that I send a message wait for the reply so I'm",
    "start": "2037280",
    "end": "2043130"
  },
  {
    "text": "chopping and changing between two threads so that means that that essentially what's going to happen down",
    "start": "2043130",
    "end": "2049340"
  },
  {
    "text": "those those two hyper threads is one hyper threading to be used for the send and then that will be idle then it will",
    "start": "2049340",
    "end": "2057080"
  },
  {
    "text": "be used for the receive and that'll be idle this is one process running two",
    "start": "2057080",
    "end": "2062840"
  },
  {
    "text": "threads there's no multi-threading here where's my queue tcp/ip stack the wire it's too",
    "start": "2062840",
    "end": "2073610"
  },
  {
    "text": "slow remember this if we're looking at 20 microseconds subtract the time for",
    "start": "2073610",
    "end": "2081080"
  },
  {
    "text": "that which is about seven so that's about 14 microseconds divide it by two that's about seven microseconds I didn't",
    "start": "2081080",
    "end": "2098750"
  },
  {
    "text": "actually I just run it I ran it with ports on the local machine yeah so it's running on the local stack so it's not",
    "start": "2098750",
    "end": "2104330"
  },
  {
    "text": "actually using an 8-year a network card unless though kernel is really poorly written which is unlikely correct yeah",
    "start": "2104330",
    "end": "2115690"
  },
  {
    "text": "as we expect what a surprise but notice it's the equivalent to the impacts and",
    "start": "2115690",
    "end": "2122750"
  },
  {
    "text": "the choice the operating system poorly chosen hardware can be just as bad as",
    "start": "2122750",
    "end": "2127790"
  },
  {
    "text": "poorly chosen operating system and what's even more interesting hey",
    "start": "2127790",
    "end": "2134210"
  },
  {
    "text": "remember that graph I had about how much effort I put into making it faster yeah where I went from about a hundred",
    "start": "2134210",
    "end": "2140450"
  },
  {
    "text": "microsecond a hundred microseconds down to about 50 70 microseconds for the GCC",
    "start": "2140450",
    "end": "2145970"
  },
  {
    "text": "because it lost a low writes that's a 30 microsecond gain 30 microsecond is what from there to there that much",
    "start": "2145970",
    "end": "2155080"
  },
  {
    "text": "yeah much less than the performance I can gain in hardware choice much less",
    "start": "2155080",
    "end": "2162560"
  },
  {
    "text": "much less than I can gain in performance of operating system hmm okay",
    "start": "2162560",
    "end": "2173620"
  },
  {
    "text": "we've all heard about spectra and meltdown I mentioned it earlier and it's",
    "start": "2173620",
    "end": "2179270"
  },
  {
    "text": "been in the bladders in March this year when it's surfaced in the register so",
    "start": "2179270",
    "end": "2184430"
  },
  {
    "text": "let's have a look and see what happens to these operating systems and the performance of this code in the face of",
    "start": "2184430",
    "end": "2190340"
  },
  {
    "text": "spectra and meltdown remember basically what I'm doing is I'm doing a socket reading a socket right so this is a",
    "start": "2190340",
    "end": "2195710"
  },
  {
    "text": "kernel transition but it's a really simple kernel transition and I'm not doing lots of other things as well I",
    "start": "2195710",
    "end": "2201910"
  },
  {
    "text": "haven't run s trace on this so I don't exactly know forgive me I've only got so",
    "start": "2201910",
    "end": "2207530"
  },
  {
    "text": "much time in the day and I have to do this on weekends and in the evenings when my wife allows me to and doesn't",
    "start": "2207530",
    "end": "2214460"
  },
  {
    "text": "try and distract me to them from doing things that she considers are much more excitingly intellectually interesting so",
    "start": "2214460",
    "end": "2221270"
  },
  {
    "text": "caveat sucide here we have pre mitigations and post mitigations for",
    "start": "2221270",
    "end": "2226970"
  },
  {
    "text": "evil CentOS 6.9 per look at the",
    "start": "2226970",
    "end": "2234050"
  },
  {
    "text": "performance impact stunning performance impact this is about 90 microseconds up",
    "start": "2234050",
    "end": "2242420"
  },
  {
    "text": "to over 125 microseconds impact serious serious stuff this again we can see is",
    "start": "2242420",
    "end": "2251660"
  },
  {
    "text": "significantly less for the 3-series kernel yeah you see very carefully",
    "start": "2251660",
    "end": "2260210"
  },
  {
    "text": "chosen kernels and I ran a special checker to make sure that it actually did do what they claimed it did there is",
    "start": "2260210",
    "end": "2269750"
  },
  {
    "text": "still a performance impact here it goes from about 21 to about 23 microseconds",
    "start": "2269750",
    "end": "2275600"
  },
  {
    "text": "and yes look at the deviations here it's statistically significant",
    "start": "2275600",
    "end": "2282460"
  },
  {
    "text": "okay CentOS CentOS is evil and nasty we don't like CentOS so I don't care how",
    "start": "2282680",
    "end": "2288440"
  },
  {
    "text": "her hats badly hit a bun - I prefer a bun - oh dear oh dear oh dear oh dear oh",
    "start": "2288440",
    "end": "2295880"
  },
  {
    "text": "dear oh dear oh dear crikey so we've got generic kernel I",
    "start": "2295880",
    "end": "2304730"
  },
  {
    "text": "didn't do we managed to get the post mitigations for it because that was just too much I couldn't find the kernel for",
    "start": "2304730",
    "end": "2309980"
  },
  {
    "text": "it but the low latency I could find for it post mitigations serious impacts on",
    "start": "2309980",
    "end": "2317390"
  },
  {
    "text": "the deviation I just couldn't get it to settle ran it for about two days and it just wouldn't converge post mitigations",
    "start": "2317390",
    "end": "2326120"
  },
  {
    "text": "for a bun - in three series three three thirteen series kernels terrible",
    "start": "2326120",
    "end": "2331670"
  },
  {
    "text": "terrible terrible terrible look at the impact from 410 - for 13 there's no 413",
    "start": "2331670",
    "end": "2340160"
  },
  {
    "text": "post mitigation or 410 post mitigation for a bun - but I could find and I sweat",
    "start": "2340160",
    "end": "2345380"
  },
  {
    "text": "it to try and find it and look at the massive impacts in performance we get",
    "start": "2345380",
    "end": "2353260"
  },
  {
    "text": "alright this is just bonkers and it's a genuine figure it's not it's not us I",
    "start": "2353770",
    "end": "2359870"
  },
  {
    "text": "ran it for about a week to try and get because I thought I buggered something up and what have you know really",
    "start": "2359870",
    "end": "2366320"
  },
  {
    "text": "genuinely genuine serious impacts again",
    "start": "2366320",
    "end": "2372680"
  },
  {
    "text": "we look at newer kernels here a bun - 17 and we can see significant performance",
    "start": "2372680",
    "end": "2382550"
  },
  {
    "text": "impacts we get with spectra and meltdown by the way I gave her I was asked to do",
    "start": "2382550",
    "end": "2389390"
  },
  {
    "text": "an EndNote at stack at the end of April when the announcement for my EndNote",
    "start": "2389390",
    "end": "2396710"
  },
  {
    "text": "went out which was about these figures four minutes later Intel sent me an",
    "start": "2396710",
    "end": "2403610"
  },
  {
    "text": "email saying can we have a talk please so then when I arranged some time to",
    "start": "2403610",
    "end": "2410830"
  },
  {
    "text": "talk to them and spent two to three hours being grilled by three people from Intel on the phone over these figures",
    "start": "2410830",
    "end": "2416520"
  },
  {
    "text": "and they said that's we concur with your",
    "start": "2416520",
    "end": "2422020"
  },
  {
    "text": "results your findings backed up by Intel themselves recall I run an AMD chips",
    "start": "2422020",
    "end": "2432510"
  },
  {
    "text": "did I mention anything about AMD getting in touch hmm gin - of course how's it",
    "start": "2432510",
    "end": "2443080"
  },
  {
    "text": "affected statistically irrelevant in",
    "start": "2443080",
    "end": "2451090"
  },
  {
    "text": "terms of the simulator in terms of the actual full round trip statistically",
    "start": "2451090",
    "end": "2457180"
  },
  {
    "text": "significant impact remember on Gen 2 I can actually turn on and off the compilation options but",
    "start": "2457180",
    "end": "2462580"
  },
  {
    "text": "mitigate against this and I didn't apply firmware patches I just used kernel",
    "start": "2462580",
    "end": "2470170"
  },
  {
    "text": "mitigations full rep clean compiler for this so we can see there is serious",
    "start": "2470170",
    "end": "2478840"
  },
  {
    "text": "impact in performance that you're going to get fortunately it doesn't have any",
    "start": "2478840",
    "end": "2483880"
  },
  {
    "text": "effect at all on the actual later the the variants that you get in your",
    "start": "2483880",
    "end": "2488950"
  },
  {
    "text": "latency which is very very critical as well that we saw in earlier in other",
    "start": "2488950",
    "end": "2495130"
  },
  {
    "text": "operating systems we can see considerable variance in the latency",
    "start": "2495130",
    "end": "2501060"
  },
  {
    "text": "again considerable variance in our expectation so",
    "start": "2501060",
    "end": "2512190"
  },
  {
    "text": "it's clearly complicated there is nothing trivial about this you've got a",
    "start": "2514420",
    "end": "2520750"
  },
  {
    "text": "profile profile and profile again you can see that those figures took years to",
    "start": "2520750",
    "end": "2525760"
  },
  {
    "text": "build up it's not a day it's not a week",
    "start": "2525760",
    "end": "2531750"
  },
  {
    "text": "time your critical code experiment with the moving parts of it and you need a shedload of unit tests to",
    "start": "2531750",
    "end": "2541630"
  },
  {
    "text": "make sure you don't break anything because of course you're trying to do less you're omitting stuff so you might",
    "start": "2541630",
    "end": "2549069"
  },
  {
    "text": "have broken your code and also unexpected stuff happens so you might",
    "start": "2549069",
    "end": "2556269"
  },
  {
    "text": "think you've sped it up a lot your little micro benchmark might show ya sweet I'm five times faster but you put",
    "start": "2556269",
    "end": "2561789"
  },
  {
    "text": "it in the main code just makes it worse for some bizarre reason I hope you now",
    "start": "2561789",
    "end": "2570819"
  },
  {
    "text": "realize that high-performance code is incredibly sensitive to the performance",
    "start": "2570819",
    "end": "2576819"
  },
  {
    "text": "of the operating system and hardware choosing the right compiler is hard as",
    "start": "2576819",
    "end": "2581950"
  },
  {
    "text": "well andrey optimizations from say GCC to clang are very costly without an",
    "start": "2581950",
    "end": "2590819"
  },
  {
    "text": "expensive test suite i have about 25,000",
    "start": "2590819",
    "end": "2596440"
  },
  {
    "text": "unit tests for this code at last count about 5 years ago and they've only",
    "start": "2596440",
    "end": "2603910"
  },
  {
    "text": "increased this is code i have at home by the way",
    "start": "2603910",
    "end": "2610170"
  },
  {
    "text": "GCC seven and eight significantly slower than GCC six again the law on the street",
    "start": "2611809",
    "end": "2618000"
  },
  {
    "text": "much as I trust that haha it seems to be from other teams as well they've noticed",
    "start": "2618000",
    "end": "2623130"
  },
  {
    "text": "a performance degradation clang has a stable performance the good news the bad",
    "start": "2623130",
    "end": "2630450"
  },
  {
    "text": "news is it's as slow as seven and at GCC seven and eight the good news is you can",
    "start": "2630450",
    "end": "2635970"
  },
  {
    "text": "recompile your code faster so for running these tests and tweaking but the",
    "start": "2635970",
    "end": "2642300"
  },
  {
    "text": "choice of operating system can have an equivalent impact on all the massaging",
    "start": "2642300",
    "end": "2650130"
  },
  {
    "text": "you did over five years if you want a sweet quick fix for speed by a faster",
    "start": "2650130",
    "end": "2658440"
  },
  {
    "text": "computer put the correct operating system on then massage the code as I've",
    "start": "2658440",
    "end": "2668160"
  },
  {
    "text": "said select Hardware choose your OS very wisely and no one compiler one single",
    "start": "2668160",
    "end": "2677069"
  },
  {
    "text": "compiler appears to be the sweet spot sadly the mitigations for spectrum",
    "start": "2677069",
    "end": "2687809"
  },
  {
    "text": "meltdown are disastrous for performance in fact the actual mitigations for AMD",
    "start": "2687809",
    "end": "2696540"
  },
  {
    "text": "are if you use the firmware patch and recompile your kernel turn off the",
    "start": "2696540",
    "end": "2703500"
  },
  {
    "text": "branch predictor completely there is no branch predictor anymore there is no superscalar in your",
    "start": "2703500",
    "end": "2709740"
  },
  {
    "text": "superscalar chip you've now got a mips 10,000 pipeline RISC pipeline CentOS",
    "start": "2709740",
    "end": "2718589"
  },
  {
    "text": "annex a bun to has wall chips and Intel chips are less badly affected you can the kernel can turn on and off the",
    "start": "2718589",
    "end": "2725010"
  },
  {
    "text": "branch predictor so the branch period can be turned back on in user code turned back on in kernel code and turned",
    "start": "2725010",
    "end": "2732000"
  },
  {
    "text": "off during the transitions the dangerous time so you'll get less impact from",
    "start": "2732000",
    "end": "2738660"
  },
  {
    "text": "haswell's I wonder why AMD didn't want to get in touch hmm",
    "start": "2738660",
    "end": "2745578"
  },
  {
    "text": "again verify performance impact verify verify you might say firewall I say",
    "start": "2747410",
    "end": "2756680"
  },
  {
    "text": "dangerous fixed messages are asking messages and we've never heard of a",
    "start": "2756680",
    "end": "2762030"
  },
  {
    "text": "buffer overrun from ASCII bases just have we if you want the references",
    "start": "2762030",
    "end": "2769130"
  },
  {
    "text": "here's the references for all the stuff I've done the library that I've got up",
    "start": "2769130",
    "end": "2777030"
  },
  {
    "text": "there that you can have a look at yes I'm old school it's SourceForge why is",
    "start": "2777030",
    "end": "2782130"
  },
  {
    "text": "it not on github why change can't be bothered interesting paper about switch",
    "start": "2782130",
    "end": "2789990"
  },
  {
    "text": "statement performance branch prediction and static branch prediction gentlemen",
    "start": "2789990",
    "end": "2796680"
  },
  {
    "text": "thank you very much it's all LGPL help",
    "start": "2796680",
    "end": "2824790"
  },
  {
    "text": "yourself you can download the source code from SourceForge I use Jenkins to create packages and release packages yes",
    "start": "2824790",
    "end": "2832049"
  },
  {
    "text": "I went through the pain of trying to work out the source file release system which I managed to hammer it so I can my",
    "start": "2832049",
    "end": "2839460"
  },
  {
    "text": "releases happen automatically there is doxygen based documentation for it of extremely variable quality because",
    "start": "2839460",
    "end": "2847349"
  },
  {
    "text": "I wrote it I know it's bad in many many places if anybody has got any suggestions I'm more than welcome to",
    "start": "2847349",
    "end": "2853500"
  },
  {
    "text": "hear them I'm not Precious about this code at all I'd love to I'd love to if I",
    "start": "2853500",
    "end": "2867750"
  },
  {
    "text": "had the time I would love to but it's a yeah time time sadly I need a job paying",
    "start": "2867750",
    "end": "2875490"
  },
  {
    "text": "job I've come here and I don't get paid because I'm a con and the problem is his banks seem to",
    "start": "2875490",
    "end": "2883820"
  },
  {
    "text": "have the impression that writing their own custom languages is a good idea",
    "start": "2883820",
    "end": "2889839"
  },
  {
    "text": "please yes they do I would say that",
    "start": "2890800",
    "end": "2908480"
  },
  {
    "text": "there is a the gentleman says the cost model in compilers I absolutely agree there is a cost model in the compilers I",
    "start": "2908480",
    "end": "2913700"
  },
  {
    "text": "would go further to suggest hazard a suggestion speculation the cost model is",
    "start": "2913700",
    "end": "2918890"
  },
  {
    "text": "imperfect and has been for many years for certain architectures no I haven't",
    "start": "2918890",
    "end": "2929450"
  },
  {
    "text": "again as sadly it's a matter of time I'm",
    "start": "2929450",
    "end": "2934730"
  },
  {
    "text": "sorry this is my excuse it's a matter of time I do this at home it is a hobby and some people watch TV I I program as a",
    "start": "2934730",
    "end": "2941930"
  },
  {
    "text": "hobby but that means because I work at the city I tend to get to work at about 9:30 and leave work at 7:30 after you've",
    "start": "2941930",
    "end": "2948650"
  },
  {
    "text": "had dinner and said hello to the wife that gives you about an hour in the evening before you go to bed and the weekends are taken up usually with doing",
    "start": "2948650",
    "end": "2957470"
  },
  {
    "text": "what Madame desire so yes I'd love to be",
    "start": "2957470",
    "end": "2962510"
  },
  {
    "text": "able to spend more time with this and yeah a very good point regarding the cost models correct and again regarding",
    "start": "2962510",
    "end": "2969320"
  },
  {
    "text": "compiler thank you",
    "start": "2969320",
    "end": "2975220"
  },
  {
    "text": "[Applause]",
    "start": "2975220",
    "end": "2978300"
  }
]