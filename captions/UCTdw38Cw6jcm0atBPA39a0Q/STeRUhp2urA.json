[
  {
    "text": "we're gonna go over any of the framework debugging which server now we're gonna concentrate on",
    "start": "8550",
    "end": "15410"
  },
  {
    "text": "any of the framework core because as of now any framework six really isn't going",
    "start": "15410",
    "end": "21770"
  },
  {
    "text": "to be kind of given a new features it is going to be moved up to dotnet core 3.0",
    "start": "21770",
    "end": "28460"
  },
  {
    "text": "but that is only really so that people with current wind form applications that",
    "start": "28460",
    "end": "36500"
  },
  {
    "text": "and other applications that use EF six can move up and two core so we're gonna",
    "start": "36500",
    "end": "43850"
  },
  {
    "text": "concentrate on any of the frameworks core and the story around this is a",
    "start": "43850",
    "end": "51160"
  },
  {
    "text": "couple years ago before I joined JetBrains I worked in a lot of",
    "start": "51160",
    "end": "57320"
  },
  {
    "text": "consulting jobs and and we were on this one big consulting contract where we",
    "start": "57320",
    "end": "64908"
  },
  {
    "text": "were redesigning and rebuilding some educational software and we had some",
    "start": "64909",
    "end": "70729"
  },
  {
    "text": "really good DBAs on our team and we had one DBA his name was Nate and Nate was",
    "start": "70729",
    "end": "77600"
  },
  {
    "text": "was really good because he actually wanted to learn more about the developer",
    "start": "77600",
    "end": "83840"
  },
  {
    "text": "side of the data so he actually taught himself a little bit of c-sharp enough",
    "start": "83840",
    "end": "91820"
  },
  {
    "text": "to kind of get into Visual Studio and take a look at the source code and so we",
    "start": "91820",
    "end": "100220"
  },
  {
    "text": "could kind of see how and why and where that that the queries were happening -",
    "start": "100220",
    "end": "107030"
  },
  {
    "text": "going back to the database that he kind of controlled and so we would have",
    "start": "107030",
    "end": "113390"
  },
  {
    "text": "discussions and he would come back and go well I'm finding that this query isn't running really well",
    "start": "113390",
    "end": "120800"
  },
  {
    "text": "can we take a look at it can you tell me where it's at and he would say here's a",
    "start": "120800",
    "end": "126710"
  },
  {
    "text": "query and he would show me or show one of the developers and and we would go okay we'll give me a little time to",
    "start": "126710",
    "end": "132440"
  },
  {
    "text": "figure out where that where that query came from and after a while I had a",
    "start": "132440",
    "end": "140810"
  },
  {
    "text": "discussion with them and I said well why did you kind of learn because he actually",
    "start": "140810",
    "end": "146390"
  },
  {
    "text": "was getting a little frustrated with us because we weren't understanding anything in his area",
    "start": "146390",
    "end": "153710"
  },
  {
    "text": "we weren't digging down into sequel server to really know what was going on",
    "start": "153710",
    "end": "160520"
  },
  {
    "text": "beyond that query going across the wire into his kind of his space and he kind",
    "start": "160520",
    "end": "169100"
  },
  {
    "text": "of wished that more developers would kind of learn how to use the tools like",
    "start": "169100",
    "end": "174860"
  },
  {
    "text": "that come with sequel server so that's where this talk comes from so I'm hoping",
    "start": "174860",
    "end": "180830"
  },
  {
    "text": "that we can all learn from that and and and do a better job when we write our",
    "start": "180830",
    "end": "187190"
  },
  {
    "text": "our queries because just because a query runs and it gets data doesn't mean that",
    "start": "187190",
    "end": "193550"
  },
  {
    "text": "that query is the most optimized query that you can have so let's take a step",
    "start": "193550",
    "end": "199850"
  },
  {
    "text": "back so my name is Chris Woodruff I work at JetBrains I'm a developer advocate",
    "start": "199850",
    "end": "205220"
  },
  {
    "text": "for JetBrains so I covered net and as you can tell by",
    "start": "205220",
    "end": "210680"
  },
  {
    "text": "my accent I am NOT from Norway I'm not from Europe I'm actually from Michigan",
    "start": "210680",
    "end": "216170"
  },
  {
    "text": "in the United States so I am a developer advocate for North America for JetBrains",
    "start": "216170",
    "end": "222080"
  },
  {
    "text": "but I'm over here because they asked me to speak I'm also not a DBA so what",
    "start": "222080",
    "end": "231230"
  },
  {
    "text": "we're gonna do is go through some of this stuff more from what a developer can can do with the sequel server tools",
    "start": "231230",
    "end": "239410"
  },
  {
    "text": "you can get really advanced with these tools I'm not gonna do that I only have",
    "start": "239410",
    "end": "245600"
  },
  {
    "text": "an hour well I'm gonna hopefully get you guys to do is get excited about this stuff so you can go and learn more about",
    "start": "245600",
    "end": "252650"
  },
  {
    "text": "it and we're also not here to attack the DBAs I mean I've done a little DBA work",
    "start": "252650",
    "end": "260630"
  },
  {
    "text": "in the past I've been a database developer not primarily but but some of",
    "start": "260630",
    "end": "268310"
  },
  {
    "text": "my roles included database development so so I actually have allow respect for",
    "start": "268310",
    "end": "274460"
  },
  {
    "text": "DBAs and I know there's lots of jokes about them versus us and and the whole throwing stuff over the",
    "start": "274460",
    "end": "281690"
  },
  {
    "text": "fence and but I think we should kind of have a lot of respect for the DBAs that",
    "start": "281690",
    "end": "288020"
  },
  {
    "text": "we work with how many people actually work with dedicated DBAs on their",
    "start": "288020",
    "end": "293180"
  },
  {
    "text": "projects so some okay so what are we",
    "start": "293180",
    "end": "299990"
  },
  {
    "text": "going to get out of this talk so I'm hoping that we get three things out of this talk so I'm hoping that we get the",
    "start": "299990",
    "end": "308120"
  },
  {
    "text": "idea that we need the use of tools that come with sequel server to better the",
    "start": "308120",
    "end": "314500"
  },
  {
    "text": "any of the framework use that we have and also I have some some stuff in this",
    "start": "314500",
    "end": "322880"
  },
  {
    "text": "that will help us improve how we use any of the framework core for performance",
    "start": "322880",
    "end": "328910"
  },
  {
    "text": "and to make our users happier and last I hope that we all can get a better",
    "start": "328910",
    "end": "335660"
  },
  {
    "text": "relationship with the DBAs that we work with or work with in the future because it is important to have a little",
    "start": "335660",
    "end": "342740"
  },
  {
    "text": "bit of understanding about what they go through and what they use and some of the tools so the first tip I always I'm",
    "start": "342740",
    "end": "352190"
  },
  {
    "text": "gonna start with is just learning either what we call the the query plans or the",
    "start": "352190",
    "end": "359270"
  },
  {
    "text": "execution plans so as anyone looked at execution plans okay good good so this",
    "start": "359270",
    "end": "368330"
  },
  {
    "text": "might be a refresher I try to start with this in the beginning so that if people hadn't haven't seen this they get a",
    "start": "368330",
    "end": "375980"
  },
  {
    "text": "little more understanding about what they what they can do so as an example I",
    "start": "375980",
    "end": "381230"
  },
  {
    "text": "have this query and this query actually comes from one of the projects that I",
    "start": "381230",
    "end": "387260"
  },
  {
    "text": "have for this demo that we'll take a look at now this query is for a database",
    "start": "387260",
    "end": "394970"
  },
  {
    "text": "that contains American baseball historical statistics now baseball is",
    "start": "394970",
    "end": "402050"
  },
  {
    "text": "probably not a big sport here in Norway but it's a big sport in America I love",
    "start": "402050",
    "end": "407210"
  },
  {
    "text": "baseball but what this query does is it queries the database",
    "start": "407210",
    "end": "413350"
  },
  {
    "text": "for all of the pictures which is a position in baseball all of the pitchers",
    "start": "413350",
    "end": "420020"
  },
  {
    "text": "that were in the winning team of the World Series in know okay I'm sorry",
    "start": "420020",
    "end": "432800"
  },
  {
    "text": "so this isn't that one so that's the next one so this one is is over a",
    "start": "432800",
    "end": "437870"
  },
  {
    "text": "database called Chinook and chinook is a test database at Microsoft release a",
    "start": "437870",
    "end": "442970"
  },
  {
    "text": "number of years ago and it revolves around the non line music store so as you can see up here we have a customer",
    "start": "442970",
    "end": "449840"
  },
  {
    "text": "and we have invoices and we've invoice lines we have tracks albums and artists so it's it kind of reflects all the",
    "start": "449840",
    "end": "457850"
  },
  {
    "text": "other data around that that online music store domain and what this does it's",
    "start": "457850",
    "end": "464210"
  },
  {
    "text": "going to list out all the tracks that a certain customer has bought so and if we",
    "start": "464210",
    "end": "472520"
  },
  {
    "text": "take a look down below this is the query plan that we that we see that we get from sequel server and it's actually a",
    "start": "472520",
    "end": "481430"
  },
  {
    "text": "good query plan you can see that it will show you all of the sub queries and kind",
    "start": "481430",
    "end": "489260"
  },
  {
    "text": "of places that it needs to get data and you can take a look and see how much",
    "start": "489260",
    "end": "495980"
  },
  {
    "text": "each kind of sub query inside this how much percentage-wise it takes up so you",
    "start": "495980",
    "end": "503690"
  },
  {
    "text": "can see which which areas take the most energy or the most effort to to get back",
    "start": "503690",
    "end": "510350"
  },
  {
    "text": "your data but this is a good query now so this is the baseball query so this",
    "start": "510350",
    "end": "517250"
  },
  {
    "text": "query again is getting the data for pitchers on the winning World Series",
    "start": "517250",
    "end": "525500"
  },
  {
    "text": "team of last year does anyone know who won the World Series I will be very",
    "start": "525500",
    "end": "531650"
  },
  {
    "text": "impressed if anyone knows who won the World Series last year No okay that shows me that that again",
    "start": "531650",
    "end": "539480"
  },
  {
    "text": "baseball probably isn't that popular here in Norway so the Boston Red Sox won",
    "start": "539480",
    "end": "545870"
  },
  {
    "text": "the World Series year so and if I run this query from the",
    "start": "545870",
    "end": "552620"
  },
  {
    "text": "application what's gonna show up is this query plan and you can see I've",
    "start": "552620",
    "end": "559370"
  },
  {
    "text": "highlighted this yellow area down below and with this yellow area down below tells me is that even though that there",
    "start": "559370",
    "end": "567710"
  },
  {
    "text": "is data coming out of the database and as a developer I will get data back and",
    "start": "567710",
    "end": "573350"
  },
  {
    "text": "I can show that in my asp.net core MVC application it's not optimized because",
    "start": "573350",
    "end": "580850"
  },
  {
    "text": "I'm missing an index that could help my program run faster and so you can see",
    "start": "580850",
    "end": "590570"
  },
  {
    "text": "that says that I'm missing an index it even gives me the sequel command to",
    "start": "590570",
    "end": "597320"
  },
  {
    "text": "create that index so that's why I'm saying if we never if all you did was",
    "start": "597320",
    "end": "602920"
  },
  {
    "text": "wrote your application got back data and said okay I'm all done I'm good I don't",
    "start": "602920",
    "end": "611690"
  },
  {
    "text": "need anything else you might not get out as much performance how your application",
    "start": "611690",
    "end": "619310"
  },
  {
    "text": "is you thought now the other thing that this gives credence to is this idea of",
    "start": "619310",
    "end": "625480"
  },
  {
    "text": "code first like any of the framework code first anyone do that with",
    "start": "625480",
    "end": "630740"
  },
  {
    "text": "migrations okay I'm not a big fan of that because you get a lot of this stuff if",
    "start": "630740",
    "end": "638690"
  },
  {
    "text": "you don't really understand and you don't develop those those Poco models",
    "start": "638690",
    "end": "644980"
  },
  {
    "text": "correct you'll get a lot of areas where you might have some missing indexes so",
    "start": "644980",
    "end": "652820"
  },
  {
    "text": "if you do do code first any of the framework or I would advise you to",
    "start": "652820",
    "end": "658490"
  },
  {
    "text": "really look at all of your queries and take a look at all the execution plans",
    "start": "658490",
    "end": "664160"
  },
  {
    "text": "all the query plans for those to make sure that there aren't any missing indexes in your database so if I take a",
    "start": "664160",
    "end": "672260"
  },
  {
    "text": "look at where and in what area this is",
    "start": "672260",
    "end": "678470"
  },
  {
    "text": "causing the most effort the most cost for this query you can see that the pitching pitching is a",
    "start": "678470",
    "end": "687700"
  },
  {
    "text": "table in my database that is costing me eighty five percent of what it took to",
    "start": "687700",
    "end": "693850"
  },
  {
    "text": "get that query and to get that result set back to my application so if I added",
    "start": "693850",
    "end": "700750"
  },
  {
    "text": "that index and rerun this I will get a dramatic increase in in performance so",
    "start": "700750",
    "end": "710940"
  },
  {
    "text": "really that's all as a developer that's all I'm really asking you to do is to go",
    "start": "710940",
    "end": "717339"
  },
  {
    "text": "in take a look at these query plans see that there's no indexes missing or any",
    "start": "717339",
    "end": "723579"
  },
  {
    "text": "other messages coming back from sequel server to make those queries better and also just to understand where and how",
    "start": "723579",
    "end": "733050"
  },
  {
    "text": "sequel server is is getting all that data to then bring it together in the",
    "start": "733050",
    "end": "738279"
  },
  {
    "text": "result set and give it back to you because if you find even though there might not be an",
    "start": "738279",
    "end": "743320"
  },
  {
    "text": "index missing you may see something is costing sequel server in that plan the",
    "start": "743320",
    "end": "751870"
  },
  {
    "text": "most cost and you may sit down and go well because maybe this sub query or",
    "start": "751870",
    "end": "758980"
  },
  {
    "text": "this this this area is taking up 60% of the cost of my query maybe I can write a",
    "start": "758980",
    "end": "766410"
  },
  {
    "text": "link statement that's a little more effective than what I have so this will",
    "start": "766410",
    "end": "774130"
  },
  {
    "text": "give you some insight into into writing better queries and better link",
    "start": "774130",
    "end": "779490"
  },
  {
    "text": "statements so the next tip I want to go",
    "start": "779490",
    "end": "785680"
  },
  {
    "text": "over is a new feature that's in any of the framework core came in at 2.2 and",
    "start": "785680",
    "end": "791800"
  },
  {
    "text": "it's called query tags so if you're a DBA",
    "start": "791800",
    "end": "797399"
  },
  {
    "text": "up till now the only way that you knew where a query came from in a dotnet",
    "start": "797399",
    "end": "806430"
  },
  {
    "text": "application or a dotnet core application was to get the query and ask the",
    "start": "806430",
    "end": "813610"
  },
  {
    "text": "/ really it was that bad it was I have a query it's not running well I know how I",
    "start": "813610",
    "end": "820900"
  },
  {
    "text": "can help you you're missing a where clause that could improve your your query by 200% but I",
    "start": "820900",
    "end": "831490"
  },
  {
    "text": "don't know where it's coming from and that was the frustration that this DBA had Nate when he would talk to us when",
    "start": "831490",
    "end": "840010"
  },
  {
    "text": "we come back to us every few days asking us about these queries so Microsoft",
    "start": "840010",
    "end": "845980"
  },
  {
    "text": "actually added something to EF core to help with that so when you're writing",
    "start": "845980",
    "end": "853150"
  },
  {
    "text": "your queries these link statements we now have the ability to use this tag",
    "start": "853150",
    "end": "859630"
  },
  {
    "text": "width method on the unlink and tag width will allow you to add a string and what",
    "start": "859630",
    "end": "869110"
  },
  {
    "text": "this string does is it goes along with the sequel statement with the with the",
    "start": "869110",
    "end": "875050"
  },
  {
    "text": "query across the wire as a comment and that will be put into the logs of sequel",
    "start": "875050",
    "end": "881890"
  },
  {
    "text": "server so here's what I do with all of my link statements now that I write I",
    "start": "881890",
    "end": "889000"
  },
  {
    "text": "have three tag with statements one is a description of what that query does the",
    "start": "889000",
    "end": "897280"
  },
  {
    "text": "next one is I have a full name path for the method that the query comes from so",
    "start": "897280",
    "end": "905920"
  },
  {
    "text": "in this case it is chinook dot controllers that album controller dot",
    "start": "905920",
    "end": "911800"
  },
  {
    "text": "index so and I just say method at the end and then the last one the last",
    "start": "911800",
    "end": "917080"
  },
  {
    "text": "string I send over is any parameters now I can't do string interpolation with tag",
    "start": "917080",
    "end": "924880"
  },
  {
    "text": "tag width right now so I can't actually put the parameter value into this all I",
    "start": "924880",
    "end": "932230"
  },
  {
    "text": "can really say is what the parameter is like if you err in maybe if it was",
    "start": "932230",
    "end": "939100"
  },
  {
    "text": "customer ID you could just say a parameter for this is customer ID",
    "start": "939100",
    "end": "944940"
  },
  {
    "text": "so what gets sent over and gets logged into sequel server is this so you can",
    "start": "944990",
    "end": "952490"
  },
  {
    "text": "see that the select statement that gets generated from any of the framework cores down below and above it are these",
    "start": "952490",
    "end": "959420"
  },
  {
    "text": "comments are the comments that go across and they are just like you do in your",
    "start": "959420",
    "end": "967970"
  },
  {
    "text": "strings they doesn't change anything it just adds those to the to the query and",
    "start": "967970",
    "end": "973280"
  },
  {
    "text": "sends it across the wire but what this will do is when and we'll take a look at",
    "start": "973280",
    "end": "980090"
  },
  {
    "text": "that at this in a second this will give your DBAs or you or anyone else that",
    "start": "980090",
    "end": "986780"
  },
  {
    "text": "finds issues in the database it will give them a little more information on how to go back to the developer and say",
    "start": "986780",
    "end": "994850"
  },
  {
    "text": "I have this query it exists in this namespace in this class in this method",
    "start": "994850",
    "end": "1004810"
  },
  {
    "text": "can we sit down and talk about it which will save a lot of time dealing with",
    "start": "1004810",
    "end": "1012070"
  },
  {
    "text": "stuff so this is a great feature that was added to two sequel server now on",
    "start": "1012070",
    "end": "1019990"
  },
  {
    "text": "the sequel server side we have this this idea of extended events and the extended",
    "start": "1019990",
    "end": "1028360"
  },
  {
    "text": "events goes kind of hand-in-hand with with this idea of query tags so let's",
    "start": "1028360",
    "end": "1036520"
  },
  {
    "text": "take a look at that and this is just the the way to create a extended event",
    "start": "1036520",
    "end": "1044110"
  },
  {
    "text": "session so we have to give her the name we have to give it when we at one event",
    "start": "1044110",
    "end": "1051310"
  },
  {
    "text": "we want to to fire this this off and this will be done at the sequel",
    "start": "1051310",
    "end": "1057670"
  },
  {
    "text": "statement completed so anytime a sequel",
    "start": "1057670",
    "end": "1063310"
  },
  {
    "text": "server sequel statement gets completed and it will go out and take the sequel",
    "start": "1063310",
    "end": "1073330"
  },
  {
    "text": "text and check to see if the sequel text has that search that wildcard search down",
    "start": "1073330",
    "end": "1081289"
  },
  {
    "text": "below so if it finds select an album in the sequel text it will log a event into",
    "start": "1081289",
    "end": "1092259"
  },
  {
    "text": "this queue and allow you to take a look at it so we'll take a look at that right",
    "start": "1092259",
    "end": "1098899"
  },
  {
    "text": "now so let me shut this down and we're",
    "start": "1098899",
    "end": "1114110"
  },
  {
    "text": "gonna bring up our editor and we're",
    "start": "1114110",
    "end": "1120740"
  },
  {
    "text": "gonna bring up actually a sequel server management studio and hopefully you guys can see this I can't increase the font",
    "start": "1120740",
    "end": "1128210"
  },
  {
    "text": "in this anymore now underneath",
    "start": "1128210",
    "end": "1133600"
  },
  {
    "text": "management if you go underneath your server and you go underneath management",
    "start": "1133600",
    "end": "1138710"
  },
  {
    "text": "and then you go underneath extended events and then sessions you'll see that",
    "start": "1138710",
    "end": "1144620"
  },
  {
    "text": "you can have these sessions that you created and you can start and stop them whenever you want to so I have a bunch",
    "start": "1144620",
    "end": "1150679"
  },
  {
    "text": "that I created for this demo for this",
    "start": "1150679",
    "end": "1156769"
  },
  {
    "text": "talk and one is called Chinook customer queries and if you right-click on that",
    "start": "1156769",
    "end": "1162590"
  },
  {
    "text": "you can actually look at the live data coming across so these are all the",
    "start": "1162590",
    "end": "1168080"
  },
  {
    "text": "queries that that that extended event caught so this these are all the sequel",
    "start": "1168080",
    "end": "1176210"
  },
  {
    "text": "statement completed events that were that this caught now I can come in here",
    "start": "1176210",
    "end": "1182240"
  },
  {
    "text": "and take a look and see the details of this and if I double click on the sequel",
    "start": "1182240",
    "end": "1187730"
  },
  {
    "text": "text in here and okay there we go",
    "start": "1187730",
    "end": "1194289"
  },
  {
    "text": "what you can see and I again apologize for maybe not having I can't increase",
    "start": "1194289",
    "end": "1200899"
  },
  {
    "text": "the size of this text large enough really to see it but you can see that the comments from the query tags are",
    "start": "1200899",
    "end": "1208549"
  },
  {
    "text": "shown at the top so you create these extended events and you",
    "start": "1208549",
    "end": "1214220"
  },
  {
    "text": "can actually put in very complex wear statements to say if a statement goes",
    "start": "1214220",
    "end": "1221810"
  },
  {
    "text": "over a certain amount of execution time I'll log this event or if it consumes",
    "start": "1221810",
    "end": "1229810"
  },
  {
    "text": "this much memory I'll log in event and if it so I break it down to where",
    "start": "1229810",
    "end": "1238750"
  },
  {
    "text": "different entities in my in my any of",
    "start": "1238750",
    "end": "1244400"
  },
  {
    "text": "the framework core code so if I have 12 different entities and that's why I",
    "start": "1244400",
    "end": "1250550"
  },
  {
    "text": "haven't you nuke the Chinook database I can set up a bunch of different events to catch different things to do with",
    "start": "1250550",
    "end": "1258530"
  },
  {
    "text": "those with those entities so that if something isn't running well because",
    "start": "1258530",
    "end": "1264680"
  },
  {
    "text": "maybe I changed a link statement or someone changed something I can see",
    "start": "1264680",
    "end": "1270290"
  },
  {
    "text": "those events in here and I can take a look at those and I can see the query",
    "start": "1270290",
    "end": "1276050"
  },
  {
    "text": "tags and know where those those statements were coming from so this this",
    "start": "1276050",
    "end": "1283760"
  },
  {
    "text": "idea of extended events is really important probably most of your DBAs know all about it's been out since",
    "start": "1283760",
    "end": "1290360"
  },
  {
    "text": "sequel server 16 2016 so it's been out for a little while so it's a it's a nice",
    "start": "1290360",
    "end": "1299300"
  },
  {
    "text": "feature as a developer to know about because if you don't have a DBA it kind",
    "start": "1299300",
    "end": "1305180"
  },
  {
    "text": "of allows you to not have to concentrate on the database all the time and you can",
    "start": "1305180",
    "end": "1310310"
  },
  {
    "text": "set these events up and come back on a maybe a weekly basis or if you're doing some kind of testing",
    "start": "1310310",
    "end": "1317630"
  },
  {
    "text": "say you're going through some kind of smoke test for integration testing for a",
    "start": "1317630",
    "end": "1323000"
  },
  {
    "text": "new release you can test out your your application and then you can come back",
    "start": "1323000",
    "end": "1328880"
  },
  {
    "text": "to the database and check out these extended event queues and see if",
    "start": "1328880",
    "end": "1334480"
  },
  {
    "text": "anything was caught from that from those",
    "start": "1334480",
    "end": "1339620"
  },
  {
    "text": "tests so it's a good it's a good way to to kind of catch though",
    "start": "1339620",
    "end": "1345290"
  },
  {
    "text": "from the database side okay so we're",
    "start": "1345290",
    "end": "1350780"
  },
  {
    "text": "gonna go back and move on so the next",
    "start": "1350780",
    "end": "1360800"
  },
  {
    "text": "idea that that I want to go through is learning about query store anyone has",
    "start": "1360800",
    "end": "1366800"
  },
  {
    "text": "anyone looked at query store it's another new feature from roughly around",
    "start": "1366800",
    "end": "1374360"
  },
  {
    "text": "sequel Server 2016 and query store is kind of like your KPI",
    "start": "1374360",
    "end": "1380590"
  },
  {
    "text": "for your databases so first we're gonna",
    "start": "1380590",
    "end": "1386270"
  },
  {
    "text": "understand a little more bit more about it so it was added to give you some",
    "start": "1386270",
    "end": "1392540"
  },
  {
    "text": "reporting stuff about your databases so you can by default there's stuff that",
    "start": "1392540",
    "end": "1398630"
  },
  {
    "text": "you can see your most your queries that consume the most resources queries that",
    "start": "1398630",
    "end": "1404720"
  },
  {
    "text": "take the most time to execute and there's lots of ways to configure these",
    "start": "1404720",
    "end": "1411320"
  },
  {
    "text": "reports and in these these kind of feedback from the query store now how",
    "start": "1411320",
    "end": "1419840"
  },
  {
    "text": "you turn those on the best way I like to turn on query store for a database",
    "start": "1419840",
    "end": "1425270"
  },
  {
    "text": "because by default it's not on when you first create your database because it",
    "start": "1425270",
    "end": "1430700"
  },
  {
    "text": "actually will take up roughly to the 4%",
    "start": "1430700",
    "end": "1436240"
  },
  {
    "text": "execution during when it's on so so",
    "start": "1436240",
    "end": "1441260"
  },
  {
    "text": "there is a slight impact in your on your database to run this it's not too bad",
    "start": "1441260",
    "end": "1448670"
  },
  {
    "text": "but if you are in a project and you need the most optimization the most power in",
    "start": "1448670",
    "end": "1455810"
  },
  {
    "text": "your database you can actually you probably should turn this off because it",
    "start": "1455810",
    "end": "1461390"
  },
  {
    "text": "might have a little too much impact if your database has a huge amount of users",
    "start": "1461390",
    "end": "1468380"
  },
  {
    "text": "hitting it so maybe you just turn this turn this on on your development",
    "start": "1468380",
    "end": "1475550"
  },
  {
    "text": "databases or your QA databases or maybe you just turn on for short",
    "start": "1475550",
    "end": "1481400"
  },
  {
    "text": "periods of time during production just to get a snapshot of what's going on in",
    "start": "1481400",
    "end": "1486800"
  },
  {
    "text": "the database but this is how we this is the sequel statement to to turn it on so",
    "start": "1486800",
    "end": "1493610"
  },
  {
    "text": "it's just an altered database call and you give it the database name and then",
    "start": "1493610",
    "end": "1499190"
  },
  {
    "text": "you just set and the query stored on so",
    "start": "1499190",
    "end": "1504890"
  },
  {
    "text": "let's take a look at the query store real quick so again you go through",
    "start": "1504890",
    "end": "1513490"
  },
  {
    "text": "sequel server management studio it's a feature in here but this is at the",
    "start": "1513490",
    "end": "1519950"
  },
  {
    "text": "database level so up here I'm gonna take a look at Chinook underneath Chinook",
    "start": "1519950",
    "end": "1525740"
  },
  {
    "text": "there'll be a folder called query store and there's a number of different areas",
    "start": "1525740",
    "end": "1535610"
  },
  {
    "text": "that query stored gives you underneath so again we have regressed queries",
    "start": "1535610",
    "end": "1543770"
  },
  {
    "text": "overall resource consumption so the ones I kind of take a look at are the overall",
    "start": "1543770",
    "end": "1551420"
  },
  {
    "text": "resource consumption and then top resource consuming queries so let's just take a look at overall resource",
    "start": "1551420",
    "end": "1557630"
  },
  {
    "text": "consumption so if I double click on this you will see that there's four areas",
    "start": "1557630",
    "end": "1564170"
  },
  {
    "text": "that come up so I've got duration execution count CPU time and logical",
    "start": "1564170",
    "end": "1571340"
  },
  {
    "text": "reads and you can see that these are spanned out across time and I can",
    "start": "1571340",
    "end": "1577760"
  },
  {
    "text": "actually configure this so that you can you can shorten this so you can also",
    "start": "1577760",
    "end": "1584780"
  },
  {
    "text": "show show charts for a number of other areas that the query store can can",
    "start": "1584780",
    "end": "1593540"
  },
  {
    "text": "oversee but you can also see like maybe I just want to take a look at the last",
    "start": "1593540",
    "end": "1599120"
  },
  {
    "text": "two days so if I take a look at the last two days it will change those charts to",
    "start": "1599120",
    "end": "1604490"
  },
  {
    "text": "show me just that timeframe and then what I can do is say I do execution",
    "start": "1604490",
    "end": "1611060"
  },
  {
    "text": "count I can come in and just take a look at that one area that one slice and in here I can take a look",
    "start": "1611060",
    "end": "1619490"
  },
  {
    "text": "and see what are the queries that are causing the most execution count in my",
    "start": "1619490",
    "end": "1627890"
  },
  {
    "text": "in my database and a lot of these are system queries and stuff so so you might",
    "start": "1627890",
    "end": "1636260"
  },
  {
    "text": "have to dig in so this one is actually one that's coming from my application and so it is the fourth-most query that",
    "start": "1636260",
    "end": "1646850"
  },
  {
    "text": "is causing an impact for this area for execution count and you can see that I",
    "start": "1646850",
    "end": "1652760"
  },
  {
    "text": "can show it shows if I'm highlighting this I'll show the query plan underneath here and if there was some missing index",
    "start": "1652760",
    "end": "1661610"
  },
  {
    "text": "or something that was shown in this query plan I could take a look at it now",
    "start": "1661610",
    "end": "1668809"
  },
  {
    "text": "so this is this is also nice because this will give you some insights into",
    "start": "1668809",
    "end": "1675470"
  },
  {
    "text": "your databases on certain servers that you may have to look at so you may find",
    "start": "1675470",
    "end": "1682850"
  },
  {
    "text": "that that a looking at maybe the last couple hours if people are saying hey",
    "start": "1682850",
    "end": "1690080"
  },
  {
    "text": "the the application looks really slow it's not the application isn't getting",
    "start": "1690080",
    "end": "1695960"
  },
  {
    "text": "data back that quickly you go in to this query store take a look at the last",
    "start": "1695960",
    "end": "1701720"
  },
  {
    "text": "couple hours and identify those queries quickly based on certain criteria that",
    "start": "1701720",
    "end": "1708529"
  },
  {
    "text": "that you want maybe it's logical reads or maybe you want to see execution count",
    "start": "1708529",
    "end": "1716480"
  },
  {
    "text": "or duration so there's these all these different ways that you can dig in here",
    "start": "1716480",
    "end": "1722049"
  },
  {
    "text": "quickly and effectively without having to go in and run a bunch of queries and",
    "start": "1722049",
    "end": "1728029"
  },
  {
    "text": "know about the system tables underneath these because what these are really",
    "start": "1728029",
    "end": "1733220"
  },
  {
    "text": "doing is they're they're really just querying the system tables inside that",
    "start": "1733220",
    "end": "1738620"
  },
  {
    "text": "database to to get back data and to show you in the visual way based on",
    "start": "1738620",
    "end": "1746340"
  },
  {
    "text": "those query plans and the and the execution plan data that saved out in",
    "start": "1746340",
    "end": "1752909"
  },
  {
    "text": "like the transaction logs and stuff like that so query plans are a really",
    "start": "1752909",
    "end": "1758190"
  },
  {
    "text": "effective way to allow you to be your own DBA",
    "start": "1758190",
    "end": "1763409"
  },
  {
    "text": "in a way so so I always like to show this also so that people can go back and",
    "start": "1763409",
    "end": "1771320"
  },
  {
    "text": "really dig into this and learn more about the the query plan what's that",
    "start": "1771320",
    "end": "1787490"
  },
  {
    "text": "yeah you could yep and you can export the data so if if you were running a",
    "start": "1790279",
    "end": "1798090"
  },
  {
    "text": "bunch of tests and you were doing and you needed to document certain things you could export this and you can export",
    "start": "1798090",
    "end": "1806070"
  },
  {
    "text": "it in PDF or XML and you can present that with maybe your documentation on",
    "start": "1806070",
    "end": "1813059"
  },
  {
    "text": "the new update or something like that or if a bug if you found the bug and you had to log the bug before you fix it you",
    "start": "1813059",
    "end": "1821850"
  },
  {
    "text": "could kind of take this data and say here's a query store data like a",
    "start": "1821850",
    "end": "1827549"
  },
  {
    "text": "snapshot from the query store that's showing the areas that are impacting my",
    "start": "1827549",
    "end": "1832710"
  },
  {
    "text": "application and then whoever gets that bug fix that needs to fix that bug later",
    "start": "1832710",
    "end": "1839039"
  },
  {
    "text": "can have that too to work on so anyone",
    "start": "1839039",
    "end": "1845640"
  },
  {
    "text": "having questions up till now I mean most of the stuff I I didn't know a lot of",
    "start": "1845640",
    "end": "1852840"
  },
  {
    "text": "this stuff up to about a year year and a half ago so this was really a lot of",
    "start": "1852840",
    "end": "1858809"
  },
  {
    "text": "interesting stuff for me and I also have a lot DBA friends I'm on the board a",
    "start": "1858809",
    "end": "1866070"
  },
  {
    "text": "pass which is a Big Data Association and when I was talking to people there were",
    "start": "1866070",
    "end": "1873870"
  },
  {
    "text": "on the board that do this DBA work for for their career they were impressed",
    "start": "1873870",
    "end": "1880410"
  },
  {
    "text": "that I was even interested in it so so that kind of reinforced that I think we",
    "start": "1880410",
    "end": "1886560"
  },
  {
    "text": "should all take a look at this so the last area that I want to take a look at",
    "start": "1886560",
    "end": "1892650"
  },
  {
    "text": "is kind of stepping back out of the database and into your application in",
    "start": "1892650",
    "end": "1901010"
  },
  {
    "text": "three areas that new features of any framework core I think can really impact",
    "start": "1901010",
    "end": "1908990"
  },
  {
    "text": "the performance of your application and also improve the queries that are sent",
    "start": "1908990",
    "end": "1916350"
  },
  {
    "text": "over so the first one is this idea that we can do string interpolation in raw",
    "start": "1916350",
    "end": "1924540"
  },
  {
    "text": "sequel methods now we all remember the",
    "start": "1924540",
    "end": "1930090"
  },
  {
    "text": "days where we would send over a hard-coded string over to sequel server",
    "start": "1930090",
    "end": "1936090"
  },
  {
    "text": "and get data back and what was the what",
    "start": "1936090",
    "end": "1942150"
  },
  {
    "text": "was the the bad side of this of this habit anyone sequel injection yep so",
    "start": "1942150",
    "end": "1951830"
  },
  {
    "text": "Microsoft sat down the entity framework core team sat down and they wanted to",
    "start": "1951830",
    "end": "1960600"
  },
  {
    "text": "allow people to send over raw sequel",
    "start": "1960600",
    "end": "1965630"
  },
  {
    "text": "statements because I don't know about you I've hit points where I can't write",
    "start": "1965630",
    "end": "1971760"
  },
  {
    "text": "a link statement to do what I need to do but I can write a sequel statement to do",
    "start": "1971760",
    "end": "1978420"
  },
  {
    "text": "what I can do or maybe a DBA and I asked a DBA to do a query for me and they",
    "start": "1978420",
    "end": "1985320"
  },
  {
    "text": "write a query and it runs perfect it's highly elegant it's optimized and I",
    "start": "1985320",
    "end": "1993240"
  },
  {
    "text": "don't want to bring that back into a link statement because maybe that link",
    "start": "1993240",
    "end": "1998970"
  },
  {
    "text": "statement won't match the elegance of the query on like it won't match the the the sequel",
    "start": "1998970",
    "end": "2007910"
  },
  {
    "text": "statement that's coming out of the the link statement won't match exactly one to one to the query",
    "start": "2007910",
    "end": "2013940"
  },
  {
    "text": "that that the DBA gave me so I can actually use this new feature from",
    "start": "2013940",
    "end": "2022149"
  },
  {
    "text": "sequel to send over those US sequel",
    "start": "2022149",
    "end": "2028700"
  },
  {
    "text": "methods and sequel statements so in this case I'm just doing a select star from",
    "start": "2028700",
    "end": "2034309"
  },
  {
    "text": "customers where City equals something and above I have redmond so what that",
    "start": "2034309",
    "end": "2043429"
  },
  {
    "text": "actually does now is sets up a and sends over to statements and I'll have the one",
    "start": "2043429",
    "end": "2050990"
  },
  {
    "text": "in there but it actually declares a sequel variable called p0 and sets p0 to",
    "start": "2050990",
    "end": "2061040"
  },
  {
    "text": "Redmond and then it sends over a sequel statement with a reference to that",
    "start": "2061040",
    "end": "2068770"
  },
  {
    "text": "declared sequel statement so that will allow it not to have sequel injection",
    "start": "2068770",
    "end": "2076040"
  },
  {
    "text": "and how this is done is in c-sharp 6 we",
    "start": "2076040",
    "end": "2084440"
  },
  {
    "text": "had this new idea that we could do string interpolation it was a new feature in the version for c-sharp and",
    "start": "2084440",
    "end": "2091579"
  },
  {
    "text": "we have this new string type called formattable string and that is actually",
    "start": "2091579",
    "end": "2098390"
  },
  {
    "text": "the second a c-sharp code segment is actually what's being done in the first",
    "start": "2098390",
    "end": "2104540"
  },
  {
    "text": "one we're just not setting and not declaring the formattable string type in",
    "start": "2104540",
    "end": "2113060"
  },
  {
    "text": "the first one so I just wanted to show that we could either do it like the",
    "start": "2113060",
    "end": "2118400"
  },
  {
    "text": "first statement the first example or we could we could set it and use that formattable string query so this will",
    "start": "2118400",
    "end": "2126050"
  },
  {
    "text": "allow you to send over raw sequel",
    "start": "2126050",
    "end": "2132050"
  },
  {
    "text": "statements that maybe you've developed or your DBAs have developed so that you",
    "start": "2132050",
    "end": "2138710"
  },
  {
    "text": "can run the queries that they have developed for you because I know in the",
    "start": "2138710",
    "end": "2145250"
  },
  {
    "text": "past I've I've got statements and and select statements",
    "start": "2145250",
    "end": "2150570"
  },
  {
    "text": "from from my DBAs and I have spent a day",
    "start": "2150570",
    "end": "2156270"
  },
  {
    "text": "or two trying to get those in the link because that was the way that we were to",
    "start": "2156270",
    "end": "2162120"
  },
  {
    "text": "do queries and stuff and they didn't want to build maybe a stored procedure",
    "start": "2162120",
    "end": "2168960"
  },
  {
    "text": "or something for me to call with that query so so this is just kind of the",
    "start": "2168960",
    "end": "2175890"
  },
  {
    "text": "first area that that I like in the new entity framework or that really allows",
    "start": "2175890",
    "end": "2183030"
  },
  {
    "text": "me to do a much better job with with querying data so the next one is",
    "start": "2183030",
    "end": "2189900"
  },
  {
    "text": "explicitly compiled queries so when we",
    "start": "2189900",
    "end": "2197130"
  },
  {
    "text": "build out our our dotnet or dotnet core",
    "start": "2197130",
    "end": "2202470"
  },
  {
    "text": "applications and we have these query statements and we build them and then we",
    "start": "2202470",
    "end": "2209430"
  },
  {
    "text": "bring we say like var query equals some linked statement every time we call that",
    "start": "2209430",
    "end": "2216690"
  },
  {
    "text": "statement that linked statement has to be compiled and if you call that a",
    "start": "2216690",
    "end": "2222900"
  },
  {
    "text": "million times a minute that linked statement gets compiled a",
    "start": "2222900",
    "end": "2228120"
  },
  {
    "text": "million times in a minute so we have",
    "start": "2228120",
    "end": "2233520"
  },
  {
    "text": "this new way to actually pre compile a linked statement and use that compiled",
    "start": "2233520",
    "end": "2242520"
  },
  {
    "text": "link statement over and over again in our applications which if you're you",
    "start": "2242520",
    "end": "2248760"
  },
  {
    "text": "building may be an API or an application that uses a loop or uses some kind of",
    "start": "2248760",
    "end": "2257460"
  },
  {
    "text": "delegate to to call some some other linked statement or a link statement",
    "start": "2257460",
    "end": "2263040"
  },
  {
    "text": "that does a lot of internal conditionals and looping this could really impact the",
    "start": "2263040",
    "end": "2271320"
  },
  {
    "text": "performance of your application so explicitly compiled queries help out and how we build these is we put the",
    "start": "2271320",
    "end": "2281110"
  },
  {
    "text": "in the dbcontext so so this example is a private static read-only function I give",
    "start": "2281110",
    "end": "2290440"
  },
  {
    "text": "it a name of underscore query get all albums so what this is going to do is",
    "start": "2290440",
    "end": "2297430"
  },
  {
    "text": "just get all the albums from the Chinook database that we are working with and",
    "start": "2297430",
    "end": "2304620"
  },
  {
    "text": "you can see that it's it's asynchronous we're using the async enumerable of type",
    "start": "2304620",
    "end": "2312850"
  },
  {
    "text": "album and we use the the new method called EF dot compile sync query and",
    "start": "2312850",
    "end": "2321520"
  },
  {
    "text": "what this will do is it will make a function call a function reference of",
    "start": "2321520",
    "end": "2328150"
  },
  {
    "text": "that name and it will have that link statement in there to use over and over",
    "start": "2328150",
    "end": "2334690"
  },
  {
    "text": "again and how we call that is all we",
    "start": "2334690",
    "end": "2341170"
  },
  {
    "text": "have to really do is just have a nut I have another method that my data",
    "start": "2341170",
    "end": "2348060"
  },
  {
    "text": "repositories can call call get all albums async and it's a weight because",
    "start": "2348060",
    "end": "2354670"
  },
  {
    "text": "the the original compiled query function is asynchronous and I just call that I",
    "start": "2354670",
    "end": "2363340"
  },
  {
    "text": "give it the DB context that we're working with so I say this because I",
    "start": "2363340",
    "end": "2369970"
  },
  {
    "text": "actually have this call inside again inside my DB context that I can call and",
    "start": "2369970",
    "end": "2378430"
  },
  {
    "text": "get this get this data from my database and then I just send it out as in a to",
    "start": "2378430",
    "end": "2384820"
  },
  {
    "text": "list a sync so let's take a look I do want to see show you guys what it looks",
    "start": "2384820",
    "end": "2390130"
  },
  {
    "text": "like from a coding standpoint so if I",
    "start": "2390130",
    "end": "2395680"
  },
  {
    "text": "open up this project so this is an API project that I do a lot of talks around",
    "start": "2395680",
    "end": "2402910"
  },
  {
    "text": "from an architectural standpoint but in this in this solution I have two",
    "start": "2402910",
    "end": "2408610"
  },
  {
    "text": "different two different data projects one is I use EF core just",
    "start": "2408610",
    "end": "2415030"
  },
  {
    "text": "normally f qor with non precompiled queries so all my linked statements get",
    "start": "2415030",
    "end": "2421360"
  },
  {
    "text": "called like normal and they get compiled as as I need them but I have this other",
    "start": "2421360",
    "end": "2428950"
  },
  {
    "text": "data project that I can use I can consume through dependency injection and this",
    "start": "2428950",
    "end": "2435250"
  },
  {
    "text": "one is called data EF core compiled query and again if I open up and I'm",
    "start": "2435250",
    "end": "2441040"
  },
  {
    "text": "looking at the the Chinook context which is of type dbcontext I have a number of",
    "start": "2441040",
    "end": "2448420"
  },
  {
    "text": "these these compiled these these function calls these function creations",
    "start": "2448420",
    "end": "2455530"
  },
  {
    "text": "that take all of the linked statements that were in my data repositories doing",
    "start": "2455530",
    "end": "2466600"
  },
  {
    "text": "this and I pre compile all these and then down below in the same in the same",
    "start": "2466600",
    "end": "2476920"
  },
  {
    "text": "DB context I've a number of these public functions that I can call the then call",
    "start": "2476920",
    "end": "2485020"
  },
  {
    "text": "the the compiled queries and we'll get those the data back from the database",
    "start": "2485020",
    "end": "2491950"
  },
  {
    "text": "and I've run tests between the two the noncom precompiled project and the",
    "start": "2491950",
    "end": "2498820"
  },
  {
    "text": "compiled project and in this API I'm getting between 25 and 30% increase in",
    "start": "2498820",
    "end": "2505450"
  },
  {
    "text": "performance through testing so so you can actually get a lot of performance",
    "start": "2505450",
    "end": "2512170"
  },
  {
    "text": "out of your asp.net core application in",
    "start": "2512170",
    "end": "2518470"
  },
  {
    "text": "this case this is a this is an asp.net core 2.2 Web API project or solution but",
    "start": "2518470",
    "end": "2526720"
  },
  {
    "text": "you can do this for any project any type of web application that you want and it",
    "start": "2526720",
    "end": "2534220"
  },
  {
    "text": "wasn't that hard to to do it took a little bit of time to move and refactor",
    "start": "2534220",
    "end": "2539950"
  },
  {
    "text": "those those link statements out of my data repositories into the DB context",
    "start": "2539950",
    "end": "2546400"
  },
  {
    "text": "but once it was done I was amazed at the the increase in performance yes they're they're jaded",
    "start": "2546400",
    "end": "2560350"
  },
  {
    "text": "down they're jaded down into IL so they're actually IL that is in your in",
    "start": "2560350",
    "end": "2568450"
  },
  {
    "text": "your project in your dotnet core project so nothing has to be rejected in the",
    "start": "2568450",
    "end": "2576250"
  },
  {
    "text": "application for those for those link statements yep so the last area that I",
    "start": "2576250",
    "end": "2594070"
  },
  {
    "text": "really love about any framework core is",
    "start": "2594070",
    "end": "2599440"
  },
  {
    "text": "DB context pooling and dbcontext pooling is a simple thing to do but it will give",
    "start": "2599440",
    "end": "2607660"
  },
  {
    "text": "you a huge amount of benefit from so in this case in this code I have a kind of",
    "start": "2607660",
    "end": "2619450"
  },
  {
    "text": "a small example from my album repository in that last solution that was showing",
    "start": "2619450",
    "end": "2626380"
  },
  {
    "text": "you so in here I have a album repository I'm using the repository pattern for my",
    "start": "2626380",
    "end": "2633070"
  },
  {
    "text": "data access and I have a private variable called my DB context and that",
    "start": "2633070",
    "end": "2641890"
  },
  {
    "text": "gets brought in from the dependency injection container through my class",
    "start": "2641890",
    "end": "2650310"
  },
  {
    "text": "constructor and then I just have a one method down below that just calls and",
    "start": "2650310",
    "end": "2657340"
  },
  {
    "text": "gets back all of the albums so this is just doing a simple link statement just",
    "start": "2657340",
    "end": "2664810"
  },
  {
    "text": "says dbcontext album got to list async and way I go in a traditional way if you",
    "start": "2664810",
    "end": "2677590"
  },
  {
    "text": "don't use dbcontext pooling and we use the pooling or we use the the traditional way that we use the",
    "start": "2677590",
    "end": "2684380"
  },
  {
    "text": "dbcontext in our in our application every time you called this method the",
    "start": "2684380",
    "end": "2691250"
  },
  {
    "text": "get all album method it is going to create a new instance of that VB context",
    "start": "2691250",
    "end": "2700910"
  },
  {
    "text": "for you so every time you need that that DB context it creates a new one for you",
    "start": "2700910",
    "end": "2709210"
  },
  {
    "text": "so if you're running again a million if you're calling and you need a million DB",
    "start": "2709210",
    "end": "2715790"
  },
  {
    "text": "context in a minute per minute in your application it will create a million DB",
    "start": "2715790",
    "end": "2722690"
  },
  {
    "text": "context for you in that minute so every",
    "start": "2722690",
    "end": "2728180"
  },
  {
    "text": "time you do it it there's that overhead of creating the DB context getting it",
    "start": "2728180",
    "end": "2734089"
  },
  {
    "text": "stood up setting everything up in it and then sending it across the wire with",
    "start": "2734089",
    "end": "2740869"
  },
  {
    "text": "dbcontext pooling we actually now have a",
    "start": "2740869",
    "end": "2746950"
  },
  {
    "text": "pool of dbcontext objects that are initiated at the start of the",
    "start": "2746950",
    "end": "2754700"
  },
  {
    "text": "application and put into the DI container for your application to use",
    "start": "2754700",
    "end": "2760790"
  },
  {
    "text": "and as you call and need this dbcontext",
    "start": "2760790",
    "end": "2766869"
  },
  {
    "text": "it actually will take it off of out of the pool and give it to your application",
    "start": "2766869",
    "end": "2775330"
  },
  {
    "text": "so you don't need to stand up a DB context you don't need the",
    "start": "2775330",
    "end": "2780349"
  },
  {
    "text": "initialization all it does that in the beginning now you're going to get hit with that in the beginning of your",
    "start": "2780349",
    "end": "2788330"
  },
  {
    "text": "application so so the first time your application gets stood up 32 right now",
    "start": "2788330",
    "end": "2795740"
  },
  {
    "text": "I've only seen 32 instances get inserted into the DI container so 32 instances of",
    "start": "2795740",
    "end": "2803450"
  },
  {
    "text": "your of your DB context gets created gets initialized and gets put into that",
    "start": "2803450",
    "end": "2809630"
  },
  {
    "text": "pool and then you're off and running and you can use those those DB",
    "start": "2809630",
    "end": "2815690"
  },
  {
    "text": "text as needed and when they get put back into the into the pool they're",
    "start": "2815690",
    "end": "2823250"
  },
  {
    "text": "actually stripped of all their their state so if you used a dbcontext and you",
    "start": "2823250",
    "end": "2832430"
  },
  {
    "text": "did a bunch of updates with it when that dbcontext goes back in the pool the",
    "start": "2832430",
    "end": "2839960"
  },
  {
    "text": "state of that dbcontext goes back to the goes back to a beginning state so it",
    "start": "2839960",
    "end": "2845869"
  },
  {
    "text": "loses all of the knowledge of any of the the updates or any of the queries that",
    "start": "2845869",
    "end": "2853910"
  },
  {
    "text": "it did while it was out of the pool being used so if you you need your DB",
    "start": "2853910",
    "end": "2860990"
  },
  {
    "text": "context to remember the updates that it",
    "start": "2860990",
    "end": "2866030"
  },
  {
    "text": "did or the changes that it did in the application this might not be the best way for you to to go with pooling but I",
    "start": "2866030",
    "end": "2876380"
  },
  {
    "text": "don't really save a lot in my state my I try to keep my my applications as",
    "start": "2876380",
    "end": "2882440"
  },
  {
    "text": "stateless as as possible especially api's I build why api's so those api's I",
    "start": "2882440",
    "end": "2890089"
  },
  {
    "text": "don't want to know the state so I'm fine with losing that state when they go back",
    "start": "2890089",
    "end": "2895880"
  },
  {
    "text": "into the DI container but again each time they come out each time you need a",
    "start": "2895880",
    "end": "2902990"
  },
  {
    "text": "new DB context it will actually pull it",
    "start": "2902990",
    "end": "2908150"
  },
  {
    "text": "from the pool give it to the application through the constructor at the creation",
    "start": "2908150",
    "end": "2916190"
  },
  {
    "text": "of that object and then when it's done it brings it back into the pool so again",
    "start": "2916190",
    "end": "2924829"
  },
  {
    "text": "I've done tests to to how well this performs by using not using pooling and",
    "start": "2924829",
    "end": "2932990"
  },
  {
    "text": "using pooling and again it's about a 20% increase in performance so I've seen by",
    "start": "2932990",
    "end": "2941240"
  },
  {
    "text": "using compiled queries and DB contacts",
    "start": "2941240",
    "end": "2948560"
  },
  {
    "text": "pooling I've gotten about a 40 35 to 40 percent increase in performance in my asp.net",
    "start": "2948560",
    "end": "2958040"
  },
  {
    "text": "core applications so there's a lot of",
    "start": "2958040",
    "end": "2965580"
  },
  {
    "text": "great features an EF core I have I do a talk on just all the new features and",
    "start": "2965580",
    "end": "2973080"
  },
  {
    "text": "these are just the four features that we went through in this talk are a number",
    "start": "2973080",
    "end": "2979500"
  },
  {
    "text": "of them I do about twelve and in my in my other talks so if anyone has wants to",
    "start": "2979500",
    "end": "2985050"
  },
  {
    "text": "know more I'll be available after this talk if you want to sit down and talk more about EF core and geek out on that",
    "start": "2985050",
    "end": "2993150"
  },
  {
    "text": "I can even run through a little slide deck and show you show you where in the",
    "start": "2993150",
    "end": "2999150"
  },
  {
    "text": "F core you can improve your applications even more so how we set this up in our",
    "start": "2999150",
    "end": "3009430"
  },
  {
    "text": "application and tell our application tell our DB context that we want to use",
    "start": "3009430",
    "end": "3016580"
  },
  {
    "text": "pooling is in the startup class for our asp.net core application or project in",
    "start": "3016580",
    "end": "3025160"
  },
  {
    "text": "the services when we set up services everyone who's done core development",
    "start": "3025160",
    "end": "3032540"
  },
  {
    "text": "should probably recognize this it's just services that add dbcontext and then we",
    "start": "3032540",
    "end": "3038900"
  },
  {
    "text": "give it a you sequel server and then we give it the the connection string and",
    "start": "3038900",
    "end": "3044540"
  },
  {
    "text": "this will set up your DB context and allow it to know where and what database",
    "start": "3044540",
    "end": "3052670"
  },
  {
    "text": "server it needs to be connected to so all we have to do is switch out that add",
    "start": "3052670",
    "end": "3058280"
  },
  {
    "text": "DB context and add EDB context pool",
    "start": "3058280",
    "end": "3063610"
  },
  {
    "text": "there's a little bit more to it but I've I haven't found I've done probably 20",
    "start": "3063610",
    "end": "3070070"
  },
  {
    "text": "different projects where all I've done is really change that one call and they",
    "start": "3070070",
    "end": "3075230"
  },
  {
    "text": "all will work out of the box but you may hit an error that that your DB contacts",
    "start": "3075230",
    "end": "3082550"
  },
  {
    "text": "has to be chained maybe you did some modifications to it and puling won't work you just have to",
    "start": "3082550",
    "end": "3089060"
  },
  {
    "text": "go back in and fix there's some errors that come up that will tell you what you need to do to get your dbcontext to",
    "start": "3089060",
    "end": "3095720"
  },
  {
    "text": "allow it to pool but for the most part DB context pooling is just that simple",
    "start": "3095720",
    "end": "3102290"
  },
  {
    "text": "and you'll get that benefit the next time you start your application up and",
    "start": "3102290",
    "end": "3109100"
  },
  {
    "text": "get it running and it will do that pooling for you so I have eight minutes",
    "start": "3109100",
    "end": "3117950"
  },
  {
    "text": "left I just want to really end on this",
    "start": "3117950",
    "end": "3123020"
  },
  {
    "text": "this note is I hope everyone is nice they're DBAs I hope you guys learned one",
    "start": "3123020",
    "end": "3131870"
  },
  {
    "text": "learned a little bit more about some of the sequel server tools that were that",
    "start": "3131870",
    "end": "3137870"
  },
  {
    "text": "we need to learn about as developers I'm not saying you have to become a DBA or",
    "start": "3137870",
    "end": "3143530"
  },
  {
    "text": "dig in and learn everything about execution plans and the query store but learn enough that if you sit down with",
    "start": "3143530",
    "end": "3151700"
  },
  {
    "text": "your DBA or someone that is doing the DBA responsibility on your team you can",
    "start": "3151700",
    "end": "3157880"
  },
  {
    "text": "at least talk to them and understand where they're coming from or you can say hey I found this query it's not",
    "start": "3157880",
    "end": "3165200"
  },
  {
    "text": "executing well I just want to talk to you about it I mean I probably they'll buy you a coffee they might even take",
    "start": "3165200",
    "end": "3171650"
  },
  {
    "text": "you out to lunch they'll be so happy with you guys but be nice to your DBAs they work as hard as we do and a lot of",
    "start": "3171650",
    "end": "3179870"
  },
  {
    "text": "times they don't get the credit that we do as developers because kind of",
    "start": "3179870",
    "end": "3184970"
  },
  {
    "text": "developers I will admit that developers take a lot of the credit for the",
    "start": "3184970",
    "end": "3191120"
  },
  {
    "text": "applications that we write because it's kind of the the first thing that that",
    "start": "3191120",
    "end": "3196430"
  },
  {
    "text": "users see but DBAs are probably are usually the people they get all the the",
    "start": "3196430",
    "end": "3204430"
  },
  {
    "text": "the the blame because we can say well it's it's a database the database isn't",
    "start": "3204430",
    "end": "3210650"
  },
  {
    "text": "giving me data correctly or it's not giving me data efficiently well that shouldn't be an excuse",
    "start": "3210650",
    "end": "3216560"
  },
  {
    "text": "sending more it should be a reason why we need to learn more about the database",
    "start": "3216560",
    "end": "3221750"
  },
  {
    "text": "and what the database does so I'm gonna wrap up if anyone has questions like I",
    "start": "3221750",
    "end": "3228470"
  },
  {
    "text": "said I'll be outside answering anything or if you do want to take a look and",
    "start": "3228470",
    "end": "3234170"
  },
  {
    "text": "talk about other features of EF core that we didn't talk about in this session I'll be around for a little",
    "start": "3234170",
    "end": "3242360"
  },
  {
    "text": "while after this if anyone one wants to contact me that's my email address at",
    "start": "3242360",
    "end": "3248870"
  },
  {
    "text": "JetBrains and then if anyone wants to take a look and get that a sample code",
    "start": "3248870",
    "end": "3256250"
  },
  {
    "text": "that that used I didn't really show a lot of it because it was all in slides",
    "start": "3256250",
    "end": "3262040"
  },
  {
    "text": "but if you do want to take a look at it so you can go back and and take a look at a program that uses the some of the",
    "start": "3262040",
    "end": "3270260"
  },
  {
    "text": "stuff I talked about you can go out to my github account and grab this repo and",
    "start": "3270260",
    "end": "3275420"
  },
  {
    "text": "clone this repo and and use it so it's just debug EF core with MS sequel so",
    "start": "3275420",
    "end": "3284080"
  },
  {
    "text": "again I really appreciate it we have five minutes left if anyone has questions I'll answer any questions that",
    "start": "3284080",
    "end": "3292040"
  },
  {
    "text": "you guys have yeah yeah so if you in",
    "start": "3292040",
    "end": "3306350"
  },
  {
    "text": "this project in both of the asp.net core MVC applications or projects I have in",
    "start": "3306350",
    "end": "3314360"
  },
  {
    "text": "this repo they have logging set up and that logging is just another it's set up in",
    "start": "3314360",
    "end": "3321290"
  },
  {
    "text": "the in the startup and as you execute this you'll see through that the logs",
    "start": "3321290",
    "end": "3327110"
  },
  {
    "text": "that get thrown out on the console you'll see what the the sequel",
    "start": "3327110",
    "end": "3333380"
  },
  {
    "text": "statements are there are being given to the to the sequel server and you'll see the comments that are given to it from",
    "start": "3333380",
    "end": "3341450"
  },
  {
    "text": "the from the end of the are from the any of the tags",
    "start": "3341450",
    "end": "3348730"
  },
  {
    "text": "yeah so it logs it I set it up to log everything yep it's like a debug log yep",
    "start": "3353339",
    "end": "3361349"
  },
  {
    "text": "you're welcome anything else okay well I appreciate",
    "start": "3361349",
    "end": "3367960"
  },
  {
    "text": "everyone coming out and I hope you guys had a good conference and you guys have a nice weekend so and I have really enjoyed being in",
    "start": "3367960",
    "end": "3376450"
  },
  {
    "text": "Oslo so thank you very much [Applause]",
    "start": "3376450",
    "end": "3384359"
  }
]