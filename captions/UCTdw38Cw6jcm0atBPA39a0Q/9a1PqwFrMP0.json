[
  {
    "start": "0",
    "end": "80000"
  },
  {
    "text": "we ready to start okay guess so um first of all I'd like to welcome everybody in the",
    "start": "11880",
    "end": "18080"
  },
  {
    "text": "audience apart from one person to the talk um my name is Matt mlin I'm here to",
    "start": "18080",
    "end": "25039"
  },
  {
    "text": "talk about something called Cs and event sourcing uh I just want to make a couple of points up front for those of you",
    "start": "25039",
    "end": "30359"
  },
  {
    "text": "who've seen these two terms you've probably also seen them in conjunction with another term which is DDD automa driven design not really going to be",
    "start": "30359",
    "end": "36760"
  },
  {
    "text": "covering that much in this talk um just going to really focus on Cs and event sourcing um another point to make is",
    "start": "36760",
    "end": "44920"
  },
  {
    "text": "that I uh I bought a surface book about two weeks ago now I don't know if you",
    "start": "44920",
    "end": "50360"
  },
  {
    "text": "guys have seen them with the pens and everything so I thought hey it' be a great idea I'll I'll I'll hand draw all my slides it'll be a lot",
    "start": "50360",
    "end": "56640"
  },
  {
    "text": "quicker it's really not this thing took forever to draw have written this single slide maybe 20 times before I got it",
    "start": "56640",
    "end": "63280"
  },
  {
    "text": "right also turns out I've got horrendous handwriting also turns out I've got horrendous spelling and no spell checker",
    "start": "63280",
    "end": "70720"
  },
  {
    "text": "so if there's any spelling mistakes I think there may be a couple I apologize in advance but yeah so this is my talk I",
    "start": "70720",
    "end": "76159"
  },
  {
    "text": "wanted to talk about Cs and events sing um why this talk well I've been working",
    "start": "76159",
    "end": "83799"
  },
  {
    "start": "80000",
    "end": "155000"
  },
  {
    "text": "in fully or partially event driven Event Source systems for a few years now and",
    "start": "83799",
    "end": "89680"
  },
  {
    "text": "um over that time I started to see it become more popular and more people become interested in it which I think is",
    "start": "89680",
    "end": "95720"
  },
  {
    "text": "pretty apparent by the number of people who turned up to this room which is kind of daunting but there we go um and I wanted to give a talk that kind",
    "start": "95720",
    "end": "103360"
  },
  {
    "text": "of goes over the basic principles of these two ideas and talks about kind of like the base level architecture that",
    "start": "103360",
    "end": "109360"
  },
  {
    "text": "you can build using these two design patterns to so you can go away and and and start building this stuff",
    "start": "109360",
    "end": "115039"
  },
  {
    "text": "yourself and also uh since I've kind of got into this um when I've seen new people come",
    "start": "115039",
    "end": "121719"
  },
  {
    "text": "along the most commonly asked question is uh what framework can I use what framework is there out there to build",
    "start": "121719",
    "end": "127439"
  },
  {
    "text": "these kind of applications and there isn't really one out there and if there is it's not particularly good and quite",
    "start": "127439",
    "end": "133800"
  },
  {
    "text": "frankly you don't need it the principles are pretty simple and once you actually start to arite this stuff yourself",
    "start": "133800",
    "end": "138840"
  },
  {
    "text": "you'll realize it it doesn't take up that much of your codebase I mean I've implemented a basic example in a few",
    "start": "138840",
    "end": "144680"
  },
  {
    "text": "hundred lines of code at most so looking for an architecture probably not worth it better to write it yourself then you",
    "start": "144680",
    "end": "150680"
  },
  {
    "text": "understand it better so what are we going to",
    "start": "150680",
    "end": "156360"
  },
  {
    "start": "155000",
    "end": "204000"
  },
  {
    "text": "cover well firstly I wanted to talk a little bit about event sourcing and the theories and the ideas behind that and",
    "start": "156360",
    "end": "162200"
  },
  {
    "text": "why it's good why it's a a good thing to do and where its advantages lie then I'm going to talk about",
    "start": "162200",
    "end": "168599"
  },
  {
    "text": "cqrs um and how that works and the advantages of that brings then I'm going",
    "start": "168599",
    "end": "174080"
  },
  {
    "text": "to talk a little bit about how the two interact together we'll then go on to um look at",
    "start": "174080",
    "end": "179640"
  },
  {
    "text": "a a typical architecture you'll you'll see time and time again and then",
    "start": "179640",
    "end": "184959"
  },
  {
    "text": "hopefully um successfully I'll I'll demo some code which will kind of give you a little bit of an idea of how you can go",
    "start": "184959",
    "end": "191720"
  },
  {
    "text": "ahead and build these things and hopefully that'll work we'll see uh most of the code is going to be written in C",
    "start": "191720",
    "end": "197360"
  },
  {
    "text": "um it translates well to most of the languages so I'm sure that'll be fine now",
    "start": "197360",
    "end": "204799"
  },
  {
    "start": "204000",
    "end": "247000"
  },
  {
    "text": "currently I work in man nor of England uh which you can probably tell by my accent roundabout leads uh",
    "start": "204799",
    "end": "210599"
  },
  {
    "text": "um and I work for the leads um NHS trust the leads trust and uh we have this idea",
    "start": "210599",
    "end": "216599"
  },
  {
    "text": "of something called an encounter or an episode which basically it deals with a patient's",
    "start": "216599",
    "end": "222560"
  },
  {
    "text": "Journey Through the hospital so it deals with when they get admitted and how they get admitted which WS they get",
    "start": "222560",
    "end": "228519"
  },
  {
    "text": "transferred to which doctors they see potentially and also and hopefully when they get discharged all right so that's",
    "start": "228519",
    "end": "237640"
  },
  {
    "text": "kind of the domain a small section of the domain that I'm going to be using for as an example throughout this talk",
    "start": "237640",
    "end": "243920"
  },
  {
    "text": "so just to explain that up front so events saing who's heard of",
    "start": "243920",
    "end": "250959"
  },
  {
    "start": "247000",
    "end": "460000"
  },
  {
    "text": "it okay fair enough that's quite a lot of people that's good um the basic idea",
    "start": "250959",
    "end": "256320"
  },
  {
    "text": "behind events the events sing is a pretty basic idea at its heart and if you um if",
    "start": "256320",
    "end": "261720"
  },
  {
    "text": "you've ever seen any of Greg Young's talks you'll know he's been around for quite a long time in other Industries it's only been recently but we've really",
    "start": "261720",
    "end": "267080"
  },
  {
    "text": "started applying it with on our own and it's at is very basic nature it's just a different way of staring the information",
    "start": "267080",
    "end": "272759"
  },
  {
    "text": "within your system in a traditional application you normally end up with",
    "start": "272759",
    "end": "278120"
  },
  {
    "text": "something like this you may end up with a an encounter object which is like I say what we're going to be talking about",
    "start": "278120",
    "end": "283240"
  },
  {
    "text": "and upon that object you'll have a number of methods you'll have one to admit the patient one to transfer the patient and one to discharge the patient",
    "start": "283240",
    "end": "289400"
  },
  {
    "text": "you may have more you will have more and each time you attempt to execute one of these commands um if it passes a",
    "start": "289400",
    "end": "296280"
  },
  {
    "text": "business validation it will result in you staring some state in a database are some document Star right so if we look",
    "start": "296280",
    "end": "302400"
  },
  {
    "text": "at this example we can see in the first instance we admit the patient uh We've admitted a",
    "start": "302400",
    "end": "308520"
  },
  {
    "text": "gentleman called Tony Ferguson uh to W 10 and we admitted flag accept is true",
    "start": "308520",
    "end": "313639"
  },
  {
    "text": "when we transfer them we' then update the ward we mov to W 76 when we transfer them again to W 34 finally when it comes",
    "start": "313639",
    "end": "321240"
  },
  {
    "text": "to discharging them they're no longer on a ward so we set that to null and um say is admitted is",
    "start": "321240",
    "end": "328000"
  },
  {
    "text": "false event souring Works in a slightly different way and but rather than continually updating the",
    "start": "328000",
    "end": "334960"
  },
  {
    "text": "state what you actually do is you store the events that are the result of that",
    "start": "334960",
    "end": "340720"
  },
  {
    "text": "command being executed so again looking on the right hand side you can see when the patient's been",
    "start": "340720",
    "end": "345919"
  },
  {
    "text": "admitted uh when you admit the patient you can see the patient admitted event when you transfer a patient you can see the two corresponding patient",
    "start": "345919",
    "end": "352240"
  },
  {
    "text": "transferred events and finally at the end you can see the patient is got has been discharged a couple of things to",
    "start": "352240",
    "end": "358280"
  },
  {
    "text": "note here um it's common practice to um refer to the events in past tense",
    "start": "358280",
    "end": "364919"
  },
  {
    "text": "because once the event has been generated then it's already happened so it's just a good naming convention also",
    "start": "364919",
    "end": "371919"
  },
  {
    "text": "it's um often the practice to distor information relating to that event with the event as opposed to starring the",
    "start": "371919",
    "end": "378440"
  },
  {
    "text": "entire object every single time um so yeah so that's the idea",
    "start": "378440",
    "end": "383840"
  },
  {
    "text": "behind it incidentally with your original u Way of building this you often don't end up",
    "start": "383840",
    "end": "390000"
  },
  {
    "text": "with admit patient and transfer patient and discharge patient you normally end up with a a method called update patient",
    "start": "390000",
    "end": "396680"
  },
  {
    "text": "which tries to do everything I don't know why it is that in this industry we seem to have uh limited oursel to just",
    "start": "396680",
    "end": "402280"
  },
  {
    "text": "using get create update and read uh as number of",
    "start": "402280",
    "end": "407919"
  },
  {
    "text": "events um yeah so for each of the encounters we St a number of events all relating to the",
    "start": "407919",
    "end": "413720"
  },
  {
    "text": "history of that encounter and if we do this we use this technique for all the objects all the um within our system we",
    "start": "413720",
    "end": "419879"
  },
  {
    "text": "end up with a stream of events that go back to the point in which the um which to which the system was created so you",
    "start": "419879",
    "end": "427360"
  },
  {
    "text": "end up with something looking a little bit bit like this now this isn't relating to uh our domain but this is a",
    "start": "427360",
    "end": "434440"
  },
  {
    "text": "piece of software called event star uh which is a persistence mechanism purposely built to Star events and you",
    "start": "434440",
    "end": "440560"
  },
  {
    "text": "can see here it's obviously relating to some fraud checking software and you've got a number of events that have happened over time to a number of",
    "start": "440560",
    "end": "446720"
  },
  {
    "text": "different objects right so you end up with stream of events but why do you want to do this",
    "start": "446720",
    "end": "451919"
  },
  {
    "text": "why do you want to go to the effort of starring the events rather State because it it it does take a little bit longer it takes more",
    "start": "451919",
    "end": "459240"
  },
  {
    "text": "time and re one there's a number of domain driven design reasons why",
    "start": "459240",
    "end": "464879"
  },
  {
    "start": "460000",
    "end": "499000"
  },
  {
    "text": "you'd want to do this it's useful to think about your system as a series of events in certain situations but it also brings with it a",
    "start": "464879",
    "end": "471159"
  },
  {
    "text": "couple of technical reasons why it's good and the first one and one of my primary reasons is around",
    "start": "471159",
    "end": "477039"
  },
  {
    "text": "auditing so if you think back to this example we had which is patient admitted transfer twice and then being discharged",
    "start": "477039",
    "end": "483680"
  },
  {
    "text": "if we only have a star State we lose the record we'll lose the fact that they've been there on war 10",
    "start": "483680",
    "end": "490919"
  },
  {
    "text": "whereas if we start all the events that have happened then we'll have that information forever in this stream of",
    "start": "490919",
    "end": "496000"
  },
  {
    "text": "events that we've got within our system there are other ways to do it who's done this as a method of auditing",
    "start": "496000",
    "end": "504800"
  },
  {
    "start": "499000",
    "end": "617000"
  },
  {
    "text": "tables I'm pretty certain not everybody who's done it is putting their hand up right now because I know I've done this and I've you using database triggers",
    "start": "504800",
    "end": "511039"
  },
  {
    "text": "which is potentially the most evil evil thing ever so the idea with this is that",
    "start": "511039",
    "end": "517000"
  },
  {
    "text": "each time a patient is updated you take a record of the you record the original record and then iner",
    "start": "517000",
    "end": "523320"
  },
  {
    "text": "or update the new one um often in some other patient audit",
    "start": "523320",
    "end": "528480"
  },
  {
    "text": "table are the like now this Oken work has a number of problems uh firstly",
    "start": "528480",
    "end": "533680"
  },
  {
    "text": "you're starring a lot of information here it's not necessarily important so say for example when you change of award",
    "start": "533680",
    "end": "539440"
  },
  {
    "text": "you don't really want to be duplicating the record so although space isn't often a premium it makes sense to just to kind",
    "start": "539440",
    "end": "546200"
  },
  {
    "text": "of remove that information also to actually work out what has changed you'll end up comparing each row to the",
    "start": "546200",
    "end": "551839"
  },
  {
    "text": "one below it to see which values have changed that can be quite a tricky process and also because this happens after the fact after and because this",
    "start": "551839",
    "end": "559160"
  },
  {
    "text": "happens after the patient has actually been inserted you can never really be sure that it's right it might be that",
    "start": "559160",
    "end": "564600"
  },
  {
    "text": "the trigger fail something's remove the trigger it's it's not reliable and finally and probably most importantly is",
    "start": "564600",
    "end": "571120"
  },
  {
    "text": "that although this will tell you what information has changed it doesn't tell you why it's changed you know but it",
    "start": "571120",
    "end": "577440"
  },
  {
    "text": "could be numberous reason numerous reasons why award they move rewards if you start with events you start why it",
    "start": "577440",
    "end": "584040"
  },
  {
    "text": "happened and what happened uh sorry what happened what changed and when it comes",
    "start": "584040",
    "end": "590279"
  },
  {
    "text": "to getting audit audited that is that's quite a powerful thing because the first thing you get asked is well why is that",
    "start": "590279",
    "end": "596600"
  },
  {
    "text": "changed and if you just start in an audit like this and you you've got no real way of knowing other than maybe going back to some transaction logs or",
    "start": "596600",
    "end": "604000"
  },
  {
    "text": "or interrogating some web API logs or something like that so that's fine we got the idea we",
    "start": "604000",
    "end": "610880"
  },
  {
    "text": "still have a stream of events as opposed to just uh updating the state but how does that actually work um in the",
    "start": "610880",
    "end": "617920"
  },
  {
    "start": "617000",
    "end": "727000"
  },
  {
    "text": "code so in order to be able to uh make a business decision to be able to validate",
    "start": "617920",
    "end": "624519"
  },
  {
    "text": "something on the object you need to you still need to have it at its current state right and in order to do that you",
    "start": "624519",
    "end": "630800"
  },
  {
    "text": "need to with an event s system you need to replay the events against that object so in the case that the patient has been",
    "start": "630800",
    "end": "637240"
  },
  {
    "text": "admitted that's pretty simple it's the start of the the encounter so we just save that single event when we want to",
    "start": "637240",
    "end": "643760"
  },
  {
    "text": "transfer a patient well we want to make sure they're admitted first so in order to check that we have to replay the",
    "start": "643760",
    "end": "649160"
  },
  {
    "text": "patient admitted event and then we can attempt to transfer the patient equally with the second one you",
    "start": "649160",
    "end": "656160"
  },
  {
    "text": "pay replay the patient admitted patient transferred transfer them again and then finally when it comes to",
    "start": "656160",
    "end": "662760"
  },
  {
    "text": "discharging the patient replay the first three events and then you can attempt to apply the uh the patient discharged",
    "start": "662760",
    "end": "668920"
  },
  {
    "text": "event on the end of it",
    "start": "668920",
    "end": "674320"
  },
  {
    "text": "now this does actually bring with it a number of problems which are pretty apparent",
    "start": "674440",
    "end": "680920"
  },
  {
    "text": "really is that if every time you want to look at this object you need to replay all the events that's going to get quite",
    "start": "680920",
    "end": "686200"
  },
  {
    "text": "expensive now for the purpose of just updating being encounter that's not so bad because most systems are 20% write",
    "start": "686200",
    "end": "693519"
  },
  {
    "text": "80% read and also you're only working with a single encounter now if your boss",
    "start": "693519",
    "end": "699480"
  },
  {
    "text": "comes along and says um which is a typical requirement I want to see uh all the patients on which WS they're",
    "start": "699480",
    "end": "706079"
  },
  {
    "text": "on doing it this way would require you to um pull out every encounter replay",
    "start": "706079",
    "end": "711240"
  },
  {
    "text": "all the events that have ever existed against those encounters group them together into ws and then return them as a view back to",
    "start": "711240",
    "end": "717399"
  },
  {
    "text": "the to the user to to the C customer which is not very efficient is it it",
    "start": "717399",
    "end": "722920"
  },
  {
    "text": "takes a long time and that is where cqrs comes into",
    "start": "722920",
    "end": "728760"
  },
  {
    "start": "727000",
    "end": "1064000"
  },
  {
    "text": "things now cqrs is kind of an extension upon a uh an idea by ber Mike or cqs",
    "start": "728760",
    "end": "734519"
  },
  {
    "text": "which is command query separation and that's a whole idea that a method should only ever be responsible for executing a",
    "start": "734519",
    "end": "741600"
  },
  {
    "text": "command against an object or it should be responsible for retrieving information from the object you should",
    "start": "741600",
    "end": "746720"
  },
  {
    "text": "never do both that makes a lot of sense because if you have an a method that queries the data and also changes it as",
    "start": "746720",
    "end": "753120"
  },
  {
    "text": "it's coming out well I mean that's going to be an absolute nightmare to debug or manage especially if it's a third party",
    "start": "753120",
    "end": "758440"
  },
  {
    "text": "API if that's happening behind the scenes and it has done in the past for me that can be incredibly confusing to",
    "start": "758440",
    "end": "764240"
  },
  {
    "text": "thebug so cqrs which stands for command query responsibility separation or",
    "start": "764240",
    "end": "769440"
  },
  {
    "text": "segregation I can never remember which one it is uh takes out a step further and it says that you should have a",
    "start": "769440",
    "end": "775760"
  },
  {
    "text": "separate object for your commands and a separate object for your queries okay",
    "start": "775760",
    "end": "782600"
  },
  {
    "text": "and when you think about event sing that makes sense you've created this object that's great for writing it's perfect for writing but it's absolutely",
    "start": "782600",
    "end": "788399"
  },
  {
    "text": "horrendous for reading for querying so it makes sense to to look at creating a new model um to view and you've probably",
    "start": "788399",
    "end": "796040"
  },
  {
    "text": "done this before anyway if any of you have ever used Entity framework for writing information to a database and then maybe use an SQL view for reading",
    "start": "796040",
    "end": "801959"
  },
  {
    "text": "from a database it's a same sort of idea but when it comes to event sourcing",
    "start": "801959",
    "end": "809839"
  },
  {
    "text": "it does work really really well with cqrs because you can actually make use of those events to generate your read",
    "start": "809839",
    "end": "816360"
  },
  {
    "text": "models so these are the events that we had earlier in the system we've got patient admitted patient transferred",
    "start": "816360",
    "end": "822480"
  },
  {
    "text": "transferred again and patient discharged right there's no reason why",
    "start": "822480",
    "end": "827639"
  },
  {
    "text": "within your system you can't build a mechanism but when it sees this",
    "start": "827639",
    "end": "832639"
  },
  {
    "text": "event it can be used to insert a record in a row so going back to the previous example we want to see every patient on",
    "start": "833320",
    "end": "839320"
  },
  {
    "text": "every Ward when a patient gets admitted we can add a a a um a row to the table",
    "start": "839320",
    "end": "845000"
  },
  {
    "text": "or the document store wherever you choose same that Tony Ferguson's been admitted when it sees a patient",
    "start": "845000",
    "end": "853600"
  },
  {
    "text": "transferred event there's no reason why we can't use that and find build a mechanism that will then update reward",
    "start": "853600",
    "end": "860639"
  },
  {
    "text": "similarly with a second time update reward to 34 and finally when it comes to discharging the patient",
    "start": "860639",
    "end": "867600"
  },
  {
    "text": "we can actually just delete the record from table because we've got it in event stream right more often than not we'd",
    "start": "867600",
    "end": "873120"
  },
  {
    "text": "end up doing something like a soft elete right um is admitted false we don't need",
    "start": "873120",
    "end": "878519"
  },
  {
    "text": "to do that it's in the Stream So it's very powerful thing right to be able to build these views off the events",
    "start": "878519",
    "end": "887600"
  },
  {
    "text": "now when your brain starts to go to that area and you start thinking that all right I've now got a write model and",
    "start": "887600",
    "end": "893600"
  },
  {
    "text": "I've got a read model the next logical step is to say well why can't I just create multiple read models right you",
    "start": "893600",
    "end": "901440"
  },
  {
    "text": "know we want to see this data in multiple different formats multiple different projections in different parts",
    "start": "901440",
    "end": "906920"
  },
  {
    "text": "of a system why can't I just look at the patient admitted",
    "start": "906920",
    "end": "913920"
  },
  {
    "text": "event and use that to generate two views so on the left we've got a ward view",
    "start": "913920",
    "end": "919600"
  },
  {
    "text": "which shows the patients on the ward on the right we've got the demographics maybe shows the ages of um of patients",
    "start": "919600",
    "end": "926240"
  },
  {
    "text": "that have been through the hospital okay now combining these two things is",
    "start": "926240",
    "end": "931839"
  },
  {
    "text": "incredibly powerful because building your event uh your projections of the data from your events allows you to do a",
    "start": "931839",
    "end": "938440"
  },
  {
    "text": "number of different things firstly if for some reason your W view gets defunct",
    "start": "938440",
    "end": "944199"
  },
  {
    "text": "it it becomes corrupt information it is wrong maybe you've introduced a bug if there's nothing stopping you from just",
    "start": "944199",
    "end": "950319"
  },
  {
    "text": "deleting all the information within your W view fixing the bug and then just replaying all the events within the",
    "start": "950319",
    "end": "955800"
  },
  {
    "text": "system against that W View and building it again from all right so that's incredibly good for",
    "start": "955800",
    "end": "961279"
  },
  {
    "text": "fixing bugs it's incredibly helpful also there's often a situation",
    "start": "961279",
    "end": "967639"
  },
  {
    "text": "where somebody will say okay that's great I've got the W view but what was it like last week so in that",
    "start": "967639",
    "end": "974279"
  },
  {
    "text": "situation you could have just create a new view and replay all the events up to and including last week and then you",
    "start": "974279",
    "end": "980560"
  },
  {
    "text": "will have your W view as it as if it was two weeks ago a week",
    "start": "980560",
    "end": "986360"
  },
  {
    "text": "ago and finally and this one one has helped me numerous times in the past",
    "start": "987040",
    "end": "993639"
  },
  {
    "text": "is excuse me um so often is the case that you have a system in production and",
    "start": "993839",
    "end": "999440"
  },
  {
    "text": "your boss comes along and says yeah that's great I'm happy but I uh I want to see the demographics now you haven't",
    "start": "999440",
    "end": "1005120"
  },
  {
    "text": "built this report it doesn't exist I want to see the demographics of everybody has been through because again because you've got",
    "start": "1005120",
    "end": "1012160"
  },
  {
    "text": "event stream there's nothing stopping you at a later point in time building this demographics view replaying all the",
    "start": "1012160",
    "end": "1018240"
  },
  {
    "text": "events again in your system against it and it'll be as if it was there since the beginning of time which is great and",
    "start": "1018240",
    "end": "1025199"
  },
  {
    "text": "that that saved my bacon numerous times so you can literally go well not",
    "start": "1025199",
    "end": "1032640"
  },
  {
    "text": "crazy but you know build a such specific views of the information you don't have to be generic about these things at all",
    "start": "1032640",
    "end": "1039160"
  },
  {
    "text": "if you've got an index page you can build a projection for the index page a detail page it requires more information so you can have a view for The Details",
    "start": "1039160",
    "end": "1045520"
  },
  {
    "text": "page it's it really is quite powerful so that's kind of how uh cqrs and event",
    "start": "1045520",
    "end": "1052200"
  },
  {
    "text": "sourcing work together right so the next step that I want to go on to",
    "start": "1052200",
    "end": "1059440"
  },
  {
    "text": "is's talking a little bit about how the architecture actually looks of these things it looks with these",
    "start": "1059440",
    "end": "1065640"
  },
  {
    "start": "1064000",
    "end": "1135000"
  },
  {
    "text": "things my drawing is really horrendous um so there's multiple derivatives of",
    "start": "1066360",
    "end": "1072960"
  },
  {
    "text": "this kind of architecture but essentially we all end up looking pretty much like this um",
    "start": "1072960",
    "end": "1079679"
  },
  {
    "text": "people customize the ideas for different situations but essentially you'll have a client which is some kind of web API or",
    "start": "1079679",
    "end": "1086799"
  },
  {
    "text": "a mobile client um win forms if you're unlucky any win",
    "start": "1086799",
    "end": "1092640"
  },
  {
    "text": "developers nobody's putting a hand up I a been oh right we've got some wi form developers I'm sorry guys it's unlucky",
    "start": "1092640",
    "end": "1101440"
  },
  {
    "text": "um yeah so your client be um an MVC application or whatever issues commands",
    "start": "1101440",
    "end": "1106960"
  },
  {
    "text": "which go through a bit of a pipeline and interact with your domain your domain then produces a number of events that",
    "start": "1106960",
    "end": "1113080"
  },
  {
    "text": "get saved against an event star then you have a projection manager really don't like using the term manager I think it's",
    "start": "1113080",
    "end": "1119520"
  },
  {
    "text": "too generic but whatever it's gone with it on this one which then tells uh gets",
    "start": "1119520",
    "end": "1125280"
  },
  {
    "text": "which projections you're interested in those events and then produces some view which them can be um read or queried by",
    "start": "1125280",
    "end": "1131600"
  },
  {
    "text": "your client so to go into it in a little bit more",
    "start": "1131600",
    "end": "1137159"
  },
  {
    "text": "detail we talk we admit patient command earlier on now although this pattern",
    "start": "1137159",
    "end": "1143760"
  },
  {
    "text": "isn't really part of uh event sing and cqrs when you start thinking about your system as a series of events it also",
    "start": "1143760",
    "end": "1151039"
  },
  {
    "text": "makes sense to start thinking about the commands which generate by those events",
    "start": "1151039",
    "end": "1156280"
  },
  {
    "text": "so this is a nice little pattern you'll see of quite a lot which is dispatcher it's kind of a mediator pattern and",
    "start": "1156280",
    "end": "1162520"
  },
  {
    "text": "basically you have an admit patient command which uh says what I want to do",
    "start": "1162520",
    "end": "1167840"
  },
  {
    "text": "and provides information that it needs to do it the dispatcher will then say okay I've got an admit patient command",
    "start": "1167840",
    "end": "1175120"
  },
  {
    "text": "which handler do I need to process this command so in this case it looks for be",
    "start": "1175120",
    "end": "1180799"
  },
  {
    "text": "um admit Handler this admit Handler then needs to interact with the",
    "start": "1180799",
    "end": "1187159"
  },
  {
    "text": "encounter all right so the encounter's got a uh a couple of responsibilities a few responsibilities the first thing is",
    "start": "1187159",
    "end": "1194120"
  },
  {
    "text": "it needs to be able to store a list of events that it produces so if you execute a command against that",
    "start": "1194120",
    "end": "1200159"
  },
  {
    "text": "encounter uh it needs to be able to stve the event that gets generated um as a byproduct of it it also needs to be able",
    "start": "1200159",
    "end": "1207360"
  },
  {
    "text": "to keep a record of its version uh which I'll come back to in a second and it also needs the ability to apply any",
    "start": "1207360",
    "end": "1212679"
  },
  {
    "text": "events that are already in the system so if you stor three or four events already against this en counter it needs the",
    "start": "1212679",
    "end": "1218919"
  },
  {
    "text": "ability as we showed in the previous slides to be able to rebuild itself from those events now the reason the verion",
    "start": "1218919",
    "end": "1226720"
  },
  {
    "text": "is important is to do with concurrency",
    "start": "1226720",
    "end": "1231679"
  },
  {
    "text": "problems so imagine a situation where uh two users both access the same",
    "start": "1233400",
    "end": "1240320"
  },
  {
    "text": "encounter at the same time these encounters have already had five events applied against them so we're both at",
    "start": "1240320",
    "end": "1247240"
  },
  {
    "text": "version five the first user uh executed a command against it it",
    "start": "1247240",
    "end": "1253159"
  },
  {
    "text": "generates a new event and it attempts to save it back to the database to the event star and it says says okay I'm",
    "start": "1253159",
    "end": "1259159"
  },
  {
    "text": "version five I expect the next version to be version six and he says yes next version I",
    "start": "1259159",
    "end": "1265640"
  },
  {
    "text": "expect it to be version six you're okay you can save the second um encounter which is currently still in progress",
    "start": "1265640",
    "end": "1272080"
  },
  {
    "text": "when he when tries to save the uh to the event start he goes I expect the next version to be six but it's now seven so",
    "start": "1272080",
    "end": "1279400"
  },
  {
    "text": "it'll throw an exception and you can bubble that back up to your user and handle it however your business sees fit",
    "start": "1279400",
    "end": "1284600"
  },
  {
    "text": "it might be that you just get them to retrive a command or give them an error message or whatever works okay so that's",
    "start": "1284600",
    "end": "1290880"
  },
  {
    "text": "why ver verion is important so we've now got a series of events in",
    "start": "1290880",
    "end": "1297679"
  },
  {
    "text": "our repository and in our event store the next thing we need to do is actually start to generate a view from these",
    "start": "1297679",
    "end": "1303679"
  },
  {
    "text": "events right as we've said those models aren't great for querying so not dis similar to the way",
    "start": "1303679",
    "end": "1311520"
  },
  {
    "text": "the uh the command mediator works is that we have a a patient admitted event comes into the system a projection",
    "start": "1311520",
    "end": "1316840"
  },
  {
    "text": "manager will then figure out which projections uh care about that event and then it will give them that event that",
    "start": "1316840",
    "end": "1324480"
  },
  {
    "text": "worldview projection as it is here will then process that event and generate or update award",
    "start": "1324480",
    "end": "1330039"
  },
  {
    "text": "view there's another concept that's important to take uh note of here which is checkpointing",
    "start": "1330039",
    "end": "1336520"
  },
  {
    "text": "now there is a very good strong possibility that your application is going to fail it's going to you know",
    "start": "1336520",
    "end": "1343520"
  },
  {
    "text": "it's going to drop it's going to crash at some point when you start up your application again the last thing you want to do is start from from the",
    "start": "1343520",
    "end": "1348679"
  },
  {
    "text": "beginning of time and go through all your events again so the idea here is that every time you process an event you",
    "start": "1348679",
    "end": "1354240"
  },
  {
    "text": "just Mark a checkpoint off somewhere so when your application crashes and you start it again it will start from where",
    "start": "1354240",
    "end": "1359520"
  },
  {
    "text": "it left off",
    "start": "1359520",
    "end": "1364080"
  },
  {
    "text": "okay now there is still a bit of a problem with this architecture and that is the fact that if you start",
    "start": "1365279",
    "end": "1372760"
  },
  {
    "text": "building uh your application like this and a user comes to interact with it and",
    "start": "1372760",
    "end": "1378159"
  },
  {
    "text": "they issue a command to Adit admit the patient they then have to wait for all the events to replay then applies an",
    "start": "1378159",
    "end": "1384200"
  },
  {
    "text": "event on top of it which then gets saved to the event star you then have to wait for what we have now potentially tens of",
    "start": "1384200",
    "end": "1391880"
  },
  {
    "text": "different views to get updated before it can then return that this Commander has been successful that can be quite slow",
    "start": "1391880",
    "end": "1398600"
  },
  {
    "text": "can make the application quite unresponsive so there is the option to take this",
    "start": "1398600",
    "end": "1404559"
  },
  {
    "text": "projection management and and push it off into a into a different process a Windows service or a console application",
    "start": "1404559",
    "end": "1411279"
  },
  {
    "text": "or something simple like that and have that process the events on its own",
    "start": "1411279",
    "end": "1417520"
  },
  {
    "text": "independently but that does bring a problem with it which is this word two words eventual consistency I think I've",
    "start": "1417520",
    "end": "1425240"
  },
  {
    "start": "1421000",
    "end": "1534000"
  },
  {
    "text": "spelled it right yeah anybody no okay um and the",
    "start": "1425240",
    "end": "1430919"
  },
  {
    "text": "idea is as it says that your system will eventually be consistent but it's not guaranteed to be consistent at any point",
    "start": "1430919",
    "end": "1437520"
  },
  {
    "text": "in time because you're processing these events in a separate thread it does lead you to the",
    "start": "1437520",
    "end": "1443039"
  },
  {
    "text": "possibility that when a user issues a command you then now return successful",
    "start": "1443039",
    "end": "1450360"
  },
  {
    "text": "when the event has been saved because the event getting processed in a separate thread they'",
    "start": "1450360",
    "end": "1456360"
  },
  {
    "text": "they know they think it's been successful but when they try and look for that information it may not be there yet because it still hasn't processed in",
    "start": "1456360",
    "end": "1462159"
  },
  {
    "text": "all the views this is kind of a scary term to a lot of people um they get worried about",
    "start": "1462159",
    "end": "1469480"
  },
  {
    "text": "this and especially if you talk to front-end developers they don't like the idea that when you issue a command the view is not there instantly",
    "start": "1469480",
    "end": "1476559"
  },
  {
    "text": "right realistically in most systems the time it takes to process an event is",
    "start": "1476559",
    "end": "1482320"
  },
  {
    "text": "minimal I mean in our system it's it's under a second so the chances of it",
    "start": "1482320",
    "end": "1487799"
  },
  {
    "text": "happening are pretty slim but it's just something to be aware of then it can catch people",
    "start": "1487799",
    "end": "1492880"
  },
  {
    "text": "out and as an industry we've almost like we've we've bred people to to think that",
    "start": "1492880",
    "end": "1499159"
  },
  {
    "text": "as soon as they issue a command that it propagates out across the world and everybody has that result instantly and",
    "start": "1499159",
    "end": "1505960"
  },
  {
    "text": "when it's like it's something we've enforced upon ourselves when it doesn't happen users get a little bit confused",
    "start": "1505960",
    "end": "1511240"
  },
  {
    "text": "in actual fact if you go back to paper based systems the eventual consistency was days and that before the form got taken",
    "start": "1511240",
    "end": "1517600"
  },
  {
    "text": "down the off to an office downam a d a corridor or what have you so it's just",
    "start": "1517600",
    "end": "1523600"
  },
  {
    "text": "something to bear in mind and it does catch a lot of people out",
    "start": "1523600",
    "end": "1530279"
  },
  {
    "text": "okay this is a scary part got to do a demo okay now I say",
    "start": "1530279",
    "end": "1538480"
  },
  {
    "start": "1534000",
    "end": "1582000"
  },
  {
    "text": "this in every single one of my talks um because I'm always nervous but",
    "start": "1538480",
    "end": "1543640"
  },
  {
    "text": "if you have been in a situation where you're sat in your office and you're happily typing away you get on with your work and all of a sudden your colleague",
    "start": "1543640",
    "end": "1549679"
  },
  {
    "text": "will come up and stand on your shoulder not actually literally stand on your shoulder that would be a bit crazy but stands behind you and all of a sudden",
    "start": "1549679",
    "end": "1556840"
  },
  {
    "text": "you completely lose the ability to type your fingers turn sausages right it's like you've never used a keyboard before",
    "start": "1556840",
    "end": "1562480"
  },
  {
    "text": "in your entire life okay standing up in on stage in front of",
    "start": "1562480",
    "end": "1568200"
  },
  {
    "text": "all you guys and doing this is like that times 100 okay so I'm going to make a lot of mistakes but hopefully we'll get",
    "start": "1568200",
    "end": "1575080"
  },
  {
    "text": "through it and I won't make too much of a a fool of myself okay",
    "start": "1575080",
    "end": "1581919"
  },
  {
    "start": "1582000",
    "end": "1639000"
  },
  {
    "text": "so can everybody see that that's great okay it's a little bit small but I've increased the font size so hopefully",
    "start": "1584399",
    "end": "1590399"
  },
  {
    "text": "that's okay um so in this solution I've got uh",
    "start": "1590399",
    "end": "1595799"
  },
  {
    "text": "three separate projects I've got a patient management project which I apologize again it's pretty small is um",
    "start": "1595799",
    "end": "1602279"
  },
  {
    "text": "it contains the mission and discharge transfer namespace which contains all of my business logic and then it's got the",
    "start": "1602279",
    "end": "1608960"
  },
  {
    "text": "framework which is all the infrastructural code around these these architectures I've then got a separate",
    "start": "1608960",
    "end": "1614240"
  },
  {
    "text": "projection manager uh this is a bit as we mentioned earlier aage responsible for taking",
    "start": "1614240",
    "end": "1619480"
  },
  {
    "text": "these events for an event star and generating a number of views from the back of it off the back of it and then",
    "start": "1619480",
    "end": "1626200"
  },
  {
    "text": "finally at the bottom there is a very very small looking test console which just attempts to admit a patient",
    "start": "1626200",
    "end": "1631440"
  },
  {
    "text": "transfer him a couple of times and then discharge him so let's start by looking at a",
    "start": "1631440",
    "end": "1638640"
  },
  {
    "text": "command now is that better can people see that at the back yeah nods great so",
    "start": "1638640",
    "end": "1645159"
  },
  {
    "start": "1639000",
    "end": "1689000"
  },
  {
    "text": "this is the admit patient command that I talked about in the in the uh in the science it um it says what it's going to attempt",
    "start": "1645159",
    "end": "1651960"
  },
  {
    "text": "to do and it also contains the information required to do it so I've got the patient ID the patient name",
    "start": "1651960",
    "end": "1658200"
  },
  {
    "text": "their age in years the time of admission and Ward numbers um I'm also using a Constructor to create this it",
    "start": "1658200",
    "end": "1664960"
  },
  {
    "text": "turns out that they're not just for dependency injection you can actually use them to make sure that your objects in a valid state turns out that's pretty",
    "start": "1664960",
    "end": "1673039"
  },
  {
    "text": "useful um sorry it's a annoyance of mine",
    "start": "1673039",
    "end": "1679519"
  },
  {
    "text": "so we've got this admitted patient command we then need to handle",
    "start": "1679519",
    "end": "1684880"
  },
  {
    "text": "this and if we come into the handlers you'll see we've got two",
    "start": "1684880",
    "end": "1691320"
  },
  {
    "start": "1689000",
    "end": "1749000"
  },
  {
    "text": "handlers here we've got one for admitting the patient and we've got one for discharging the patient in the first",
    "start": "1691320",
    "end": "1699840"
  },
  {
    "text": "case admitting the patient is a start of encounter so we use the Constructor um",
    "start": "1699840",
    "end": "1705600"
  },
  {
    "text": "to create that and then when it comes to discharge imagine the patient we have to get the um encounter out of a star so if",
    "start": "1705600",
    "end": "1713919"
  },
  {
    "text": "we actually look on Miss method here we'll see that when",
    "start": "1713919",
    "end": "1719760"
  },
  {
    "text": "retrieving an encounter the first thing we do is we create an instance of it we then get all the events that have ever",
    "start": "1719760",
    "end": "1727600"
  },
  {
    "text": "existed for that encounter based upon the type of object that it is and the ID",
    "start": "1727600",
    "end": "1733640"
  },
  {
    "text": "and then for each of those events that we retrieve we' then to try to apply it to the encounter so that's the whole",
    "start": "1733640",
    "end": "1738760"
  },
  {
    "text": "idea of rebuilding the encounter to the current state so that it can be worked with okay then when we've done that we",
    "start": "1738760",
    "end": "1746360"
  },
  {
    "text": "clear all the events and we return the aggregate the next thing we do is then",
    "start": "1746360",
    "end": "1751519"
  },
  {
    "start": "1749000",
    "end": "1791000"
  },
  {
    "text": "we try and execute a command against the aggregate against the encounter so if we go in here we can see",
    "start": "1751519",
    "end": "1758320"
  },
  {
    "text": "that we need to discharge the patient the first thing we need to do is check whe we're admitted if they're not admitted you can't really discharge them",
    "start": "1758320",
    "end": "1765600"
  },
  {
    "text": "if that's successful but we raise the patient charge event the only",
    "start": "1765600",
    "end": "1771200"
  },
  {
    "text": "information we need in there is the ID because that's the only thing that's relevant I mean okay so it might be a",
    "start": "1771200",
    "end": "1776279"
  },
  {
    "text": "case that in the more advanced system you have the time that they were discharged or the reason they were discharged but at the moment we've only",
    "start": "1776279",
    "end": "1783120"
  },
  {
    "text": "got the ID okay so we generate that new event and when it comes to actually saving the",
    "start": "1783120",
    "end": "1791120"
  },
  {
    "start": "1791000",
    "end": "1949000"
  },
  {
    "text": "event again as explained in the slides we pull all the events out of this but",
    "start": "1791440",
    "end": "1798320"
  },
  {
    "text": "so I haven't explained this it's a term aggregate route which comes from domain driven design um it's not so much relevant here",
    "start": "1798320",
    "end": "1805200"
  },
  {
    "text": "the actual naming of this but um as it says it's a roote of an aggregate but anyway we get the",
    "start": "1805200",
    "end": "1812640"
  },
  {
    "text": "events out of the uh the aggregate route in this case the encounter we convert them to a suitable format and then we",
    "start": "1812640",
    "end": "1818159"
  },
  {
    "text": "save them back to the stream and you'll notice on the end",
    "start": "1818159",
    "end": "1824679"
  },
  {
    "text": "here we also pass in the version when we're saving this stream so we know that",
    "start": "1824679",
    "end": "1830360"
  },
  {
    "text": "nobody's updated it in in the time that it's taken us to execute the command",
    "start": "1830360",
    "end": "1836559"
  },
  {
    "text": "okay so this is great we've got the admit patient we've got the discharge patient but we don't have the transfer",
    "start": "1836559",
    "end": "1843960"
  },
  {
    "text": "so let's create right now this is where I'm attempting to",
    "start": "1843960",
    "end": "1850360"
  },
  {
    "text": "type so we want to register a Handler to transfer",
    "start": "1851399",
    "end": "1856919"
  },
  {
    "text": "patient we accept the",
    "start": "1856919",
    "end": "1863840"
  },
  {
    "text": "command and then close it off see I've already made a",
    "start": "1868200",
    "end": "1875398"
  },
  {
    "text": "mistake y very",
    "start": "1878240",
    "end": "1883760"
  },
  {
    "text": "good see told it's hard okay",
    "start": "1883760",
    "end": "1889919"
  },
  {
    "text": "so when we transfer a patient the first thing we need to do is we need to get the encounter out of the system",
    "start": "1890679",
    "end": "1896799"
  },
  {
    "text": "so we get it from a",
    "start": "1898639",
    "end": "1902279"
  },
  {
    "text": "repository and we get it by the ID of a",
    "start": "1907159",
    "end": "1911519"
  },
  {
    "text": "patient then we need to execute a transfer command against it",
    "start": "1913519",
    "end": "1919840"
  },
  {
    "text": "and we need to give it reward number Excel and then the last",
    "start": "1920240",
    "end": "1925880"
  },
  {
    "text": "thing we need to do as below is",
    "start": "1925880",
    "end": "1930240"
  },
  {
    "text": "save we encounter back to the system right make sense I need some nods",
    "start": "1931279",
    "end": "1940720"
  },
  {
    "text": "okay good so let's create the transfer command or the transfer method rather",
    "start": "1940720",
    "end": "1949840"
  },
  {
    "text": "any you guys use reapper Visual Studio yeah literally couldn't couldn't use it",
    "start": "1951559",
    "end": "1958200"
  },
  {
    "text": "without so have any of you guys used rder yet by the way all right I so I I was going to give",
    "start": "1958519",
    "end": "1964960"
  },
  {
    "text": "this demonstration in Ryder but it just turns out with the current license expires today and when it expires it's",
    "start": "1964960",
    "end": "1971159"
  },
  {
    "text": "not like oh it won't let you log back in it literally go shuts you straight down there and then so I just had Horus so",
    "start": "1971159",
    "end": "1978360"
  },
  {
    "text": "you know i' be typing away and all of a sudden nope you're done so unfortunately had switch back to visual studio so we",
    "start": "1978360",
    "end": "1985440"
  },
  {
    "text": "transfer a patient uh first thing we need to do is make sure that we're admitted so check",
    "start": "1985440",
    "end": "1991360"
  },
  {
    "text": "patient is admitted and then if we're admitted then",
    "start": "1991360",
    "end": "1997320"
  },
  {
    "text": "we need to raise an event or patient",
    "start": "1997320",
    "end": "2003919"
  },
  {
    "text": "transfers right and we give it the ID of a patient and",
    "start": "2003919",
    "end": "2009760"
  },
  {
    "text": "reward they been transferred to",
    "start": "2010200",
    "end": "2017000"
  },
  {
    "text": "actually rename that okay so it's pretty clear we've got",
    "start": "2019240",
    "end": "2026120"
  },
  {
    "text": "a Handler that handles that event when it comes in we check patient is admitted if it's if is admitted if they are then",
    "start": "2026120",
    "end": "2032000"
  },
  {
    "text": "it's pretty simple raise a new event which can then be saved back to the event sty we also need to be able to",
    "start": "2032000",
    "end": "2037559"
  },
  {
    "text": "hand the fact that this we will need to rebuild this object using that event now so we need to create an additional",
    "start": "2037559",
    "end": "2044519"
  },
  {
    "text": "method that does handles that so we can say",
    "start": "2044519",
    "end": "2050480"
  },
  {
    "text": "when the patient is transferred you want to send",
    "start": "2051720",
    "end": "2059398"
  },
  {
    "text": "reward equal to reward number so what will happen now",
    "start": "2059399",
    "end": "2066320"
  },
  {
    "text": "in fact I'll put it with the others up here is that when we rebuild this object whenever it sees a patient",
    "start": "2066320",
    "end": "2072118"
  },
  {
    "text": "admitted event it will call into this method method whenever it sees a patient discharged event it will call into this",
    "start": "2072119",
    "end": "2077760"
  },
  {
    "text": "method when it sees a transferred event it will call into this method and gradually build the object back up to its current state just need to register",
    "start": "2077760",
    "end": "2084800"
  },
  {
    "text": "it at the top as",
    "start": "2084800",
    "end": "2087520"
  },
  {
    "text": "well right and that's pretty much it there's a stuff that goes on in the",
    "start": "2096640",
    "end": "2102720"
  },
  {
    "text": "background so say for example these patient discharged and transferred events when I'm calling this register method I'm building up a map of the",
    "start": "2102720",
    "end": "2110160"
  },
  {
    "text": "event to the when method that it needs to call so that's just my way of linking it up so that when I see those events I",
    "start": "2110160",
    "end": "2115960"
  },
  {
    "text": "know which method to call I'll show",
    "start": "2115960",
    "end": "2120119"
  },
  {
    "text": "that so in here when the register method is called all I'm doing is adding",
    "start": "2122079",
    "end": "2128200"
  },
  {
    "text": "an item to a dictionary which is type of T which is a command and then a little delicate method that actually executes",
    "start": "2128200",
    "end": "2134079"
  },
  {
    "text": "that okay so that's kind of how the command side of it works let's have a look at the projection side of it so if",
    "start": "2134079",
    "end": "2142359"
  },
  {
    "start": "2140000",
    "end": "2167000"
  },
  {
    "text": "we look in uh the main program there's a bit of setup around here most of it is",
    "start": "2142359",
    "end": "2147560"
  },
  {
    "text": "not important the bits that are important are creating a new projection manager where I pass in a couple of dependencies along with all the",
    "start": "2147560",
    "end": "2153760"
  },
  {
    "text": "projections that I actually want my uh my manager to run right so here I've got",
    "start": "2153760",
    "end": "2159240"
  },
  {
    "text": "a w view projection and if we take a look at",
    "start": "2159240",
    "end": "2167400"
  },
  {
    "start": "2167000",
    "end": "2204000"
  },
  {
    "text": "that we can see that we've got a number of handlers there again just like V command handlers but Mis case we're",
    "start": "2167680",
    "end": "2174040"
  },
  {
    "text": "handling events we've got one that handles the patient being admitted we got another one which handles the patient being transferred and finally",
    "start": "2174040",
    "end": "2180160"
  },
  {
    "text": "when we get discharged we actually have a look at the code in one of these so let's take the admitted",
    "start": "2180160",
    "end": "2186560"
  },
  {
    "text": "event we're basically saying when we see this patient admitted event we want to",
    "start": "2186560",
    "end": "2191680"
  },
  {
    "text": "connect to in this case Raven DB and insert a new patient into the world view",
    "start": "2191680",
    "end": "2197480"
  },
  {
    "text": "and then save the changes at the end when it comes to the patient",
    "start": "2197480",
    "end": "2201760"
  },
  {
    "text": "transferred in this situation we want to load the patient out of the database out of Raven DB change a w number and then",
    "start": "2203640",
    "end": "2210079"
  },
  {
    "text": "save it back and finally when we get discharged we load the patient out and we're then delete them unfortunately",
    "start": "2210079",
    "end": "2216000"
  },
  {
    "text": "there there's no easy way at think of deleting a record from Raven DB without loading it first there we go there may",
    "start": "2216000",
    "end": "2222000"
  },
  {
    "text": "be somebody may know um and that's kind of how um basically how a projection Works listens",
    "start": "2222000",
    "end": "2228400"
  },
  {
    "text": "for those events passes them off to the right place and off it goes to actually look at a projection",
    "start": "2228400",
    "end": "2234800"
  },
  {
    "text": "manager when we start our individual projections so this method here you can see the first thing it does",
    "start": "2234800",
    "end": "2241440"
  },
  {
    "start": "2235000",
    "end": "2273000"
  },
  {
    "text": "is it gets to the last position but it was at and then it subscribes to all the events from that checkpoint and when it",
    "start": "2241440",
    "end": "2248079"
  },
  {
    "text": "actually processes the events here the first thing it does is it checks that that projection can handle that event",
    "start": "2248079",
    "end": "2255079"
  },
  {
    "text": "puts it in a suitable format and handles it and then at the very end as I mentioned in the slides it updates a",
    "start": "2255079",
    "end": "2260560"
  },
  {
    "text": "projection to make sure that when we restart the application it's not in an invalid it starts from a correct",
    "start": "2260560",
    "end": "2266440"
  },
  {
    "text": "place so we set this running well",
    "start": "2266440",
    "end": "2273200"
  },
  {
    "start": "2273000",
    "end": "2709000"
  },
  {
    "text": "firstly so I've got a little web application here which has got a couple of pages on it but W view we've talked",
    "start": "2273200",
    "end": "2278280"
  },
  {
    "text": "about throughout the talk if it set this",
    "start": "2278280",
    "end": "2282680"
  },
  {
    "text": "running thinkers cross this bit works I'm not nervous yeah okay so I",
    "start": "2288599",
    "end": "2295319"
  },
  {
    "text": "seated the event star with a number of events which is's now processing through these are Alla patient admission events",
    "start": "2295319",
    "end": "2300720"
  },
  {
    "text": "if we go back and refresh the w p w view you can see you can see that it started",
    "start": "2300720",
    "end": "2306680"
  },
  {
    "text": "to admit all patient to W so this is replaying all the events through time that we've ever had within our system it's not currently correct because I've",
    "start": "2306680",
    "end": "2312119"
  },
  {
    "text": "only played through about half of the events right as you can see here we've now hit",
    "start": "2312119",
    "end": "2318599"
  },
  {
    "text": "a patient transferred event so it drops in and attempts to up will attempt to",
    "start": "2318599",
    "end": "2323839"
  },
  {
    "text": "update one of a w numbers so remove that and keep",
    "start": "2323839",
    "end": "2329359"
  },
  {
    "text": "going and eventually so working on the transfers I think I",
    "start": "2329359",
    "end": "2336160"
  },
  {
    "text": "added too many in here please appreciate my un comfortable",
    "start": "2336160",
    "end": "2343359"
  },
  {
    "text": "silence my long uncomfortable silence okay we're getting towards the",
    "start": "2344960",
    "end": "2351400"
  },
  {
    "text": "end now of surface book",
    "start": "2351400",
    "end": "2360240"
  },
  {
    "text": "yeah so now that it's gone through all the events it's now to it's current point in time now and there you go you",
    "start": "2362440",
    "end": "2369160"
  },
  {
    "text": "see the world view as it is now right so we also talked about the idea",
    "start": "2369160",
    "end": "2376319"
  },
  {
    "text": "that we want to be able to create a projection on a later date and the power that that brings you that you can build",
    "start": "2376319",
    "end": "2382200"
  },
  {
    "text": "up views of data as if it's been there since the beginning of time we also talked about the demographic so my boss",
    "start": "2382200",
    "end": "2387599"
  },
  {
    "text": "has now asked me that he wants a chart showing all of the uh all the patients",
    "start": "2387599",
    "end": "2392800"
  },
  {
    "text": "that have ever been admitted to our system so let's go and build one of these",
    "start": "2392800",
    "end": "2399318"
  },
  {
    "text": "so you want all the AG you wants to see uh all patients that have ever been admitted to our system but grouped into",
    "start": "2403599",
    "end": "2409680"
  },
  {
    "text": "age ranges of 10 years so I've got a little bit of a dirty class here which will allow me to look it up uh I'm sure",
    "start": "2409680",
    "end": "2415400"
  },
  {
    "text": "if there's a better way of doing it but what we want to say",
    "start": "2415400",
    "end": "2420920"
  },
  {
    "text": "is when I see a patient admitted",
    "start": "2420920",
    "end": "2426319"
  },
  {
    "text": "event",
    "start": "2426319",
    "end": "2429319"
  },
  {
    "text": "the first thing I want to do is find out what age range this person falls into so I can",
    "start": "2437200",
    "end": "2443839"
  },
  {
    "text": "say range lookup. getet let give you V patient",
    "start": "2453680",
    "end": "2459400"
  },
  {
    "text": "age which is part of the event I can then make a connection to my",
    "start": "2459400",
    "end": "2467318"
  },
  {
    "text": "database with that attempt to load a range because it may",
    "start": "2473400",
    "end": "2480280"
  },
  {
    "text": "already",
    "start": "2480280",
    "end": "2482640"
  },
  {
    "text": "exist using the range lookup name to find",
    "start": "2486240",
    "end": "2493838"
  },
  {
    "text": "it if I have one or if I don't have",
    "start": "2494440",
    "end": "2499400"
  },
  {
    "text": "one then I have to create a new one so we can",
    "start": "2500560",
    "end": "2506400"
  },
  {
    "text": "say star a new Range where the ID is the range lookup",
    "start": "2508359",
    "end": "2516240"
  },
  {
    "text": "name and count will be",
    "start": "2516240",
    "end": "2523838"
  },
  {
    "text": "one and then if one already",
    "start": "2523960",
    "end": "2529839"
  },
  {
    "text": "exists then I can just increment the",
    "start": "2529839",
    "end": "2534880"
  },
  {
    "text": "count and then finally save a changes right does that",
    "start": "2535240",
    "end": "2543559"
  },
  {
    "text": "make sense what's happening there I'll just put in a little console log so we can see actually",
    "start": "2543559",
    "end": "2550640"
  },
  {
    "text": "working and service to put be actual",
    "start": "2574559",
    "end": "2579119"
  },
  {
    "text": "account okay so now we've created a new projection we want to be able to see",
    "start": "2580839",
    "end": "2586720"
  },
  {
    "text": "this as if it's been there since the beginning of time because we've got off",
    "start": "2586720",
    "end": "2591760"
  },
  {
    "text": "a stream the stream we can do that we just need to add it into the actual list of projections that we want",
    "start": "2591760",
    "end": "2597200"
  },
  {
    "text": "it to",
    "start": "2597200",
    "end": "2599480"
  },
  {
    "text": "run and then if we start this running again",
    "start": "2603200",
    "end": "2608920"
  },
  {
    "text": "hopefully we'll start seeing it process the events Okay cool so you can see it's running through uh recording the ages of",
    "start": "2608920",
    "end": "2616240"
  },
  {
    "text": "all the patients if we were to stop this so it stopped when it had about 30 records in each and if we start it",
    "start": "2616240",
    "end": "2626000"
  },
  {
    "text": "again starts from where it left off so this is the whole idea of checkpointing means your system can crash and you can",
    "start": "2630240",
    "end": "2635480"
  },
  {
    "text": "spring it up again with no problem them each individual projection would have its own checkpoint as well so because",
    "start": "2635480",
    "end": "2641839"
  },
  {
    "text": "they all need to manage their own stream and finally if we go back as if by Magic",
    "start": "2641839",
    "end": "2646880"
  },
  {
    "text": "it refreshed for some reason I don't know you can see that we've got all of the um all of the data there built from",
    "start": "2646880",
    "end": "2652680"
  },
  {
    "text": "a projection as if it's been there since the beginning of time so that's kind",
    "start": "2652680",
    "end": "2660599"
  },
  {
    "text": "of the idea behind the architecture just to show the dispatcher very uh very quickly to explain how that works",
    "start": "2660599",
    "end": "2667720"
  },
  {
    "text": "if we have a look in his test console application we can see here's an instance of his actually",
    "start": "2667720",
    "end": "2673680"
  },
  {
    "text": "creating an admit patient so we create we're trying to admit Tony Ferguson um now toward",
    "start": "2673680",
    "end": "2682920"
  },
  {
    "text": "10 the the home mediator pattern the way it works is that you basically call a dispatcher and pass in that",
    "start": "2682920",
    "end": "2690160"
  },
  {
    "text": "event within there you'll see that I've created effectively or registered a map",
    "start": "2690160",
    "end": "2695280"
  },
  {
    "text": "of all again of all the commands to to the code that handles them all the dispatcher does is actually um get the",
    "start": "2695280",
    "end": "2702440"
  },
  {
    "text": "right Handler of the command and pass the command into it so it's really simple but it's a really good way of",
    "start": "2702440",
    "end": "2707520"
  },
  {
    "text": "kind of like abstracting away executing and working with the domain from whatever your client as be it MBC or web",
    "start": "2707520",
    "end": "2714880"
  },
  {
    "start": "2709000",
    "end": "2781000"
  },
  {
    "text": "API right now this is a pretty simple implementation of cqs and event sourcing there's certain",
    "start": "2714880",
    "end": "2722559"
  },
  {
    "text": "things additional things that you're going to want to add to this over time so it kind of makes sense that when you",
    "start": "2722559",
    "end": "2729160"
  },
  {
    "text": "execute your command before you do that you want to validate that your command is successful uh sorry is is correct uh",
    "start": "2729160",
    "end": "2735280"
  },
  {
    "text": "you may also want to add in some um authorization so that only certain",
    "start": "2735280",
    "end": "2741640"
  },
  {
    "text": "people can execute certain commands so you can kind of put all that in the pipeline of dispatching the command equally with a projection",
    "start": "2741640",
    "end": "2749480"
  },
  {
    "text": "manager one thing that's important there is that it's to do with Ops and",
    "start": "2749480",
    "end": "2754640"
  },
  {
    "text": "monitoring so you want to be able to see that your um your events process your",
    "start": "2754640",
    "end": "2761240"
  },
  {
    "text": "event projections are all processing um and up to up to date but not falling behind because then it'll",
    "start": "2761240",
    "end": "2767319"
  },
  {
    "text": "make your your system seem slower so you probably want to build some uh some",
    "start": "2767319",
    "end": "2772960"
  },
  {
    "text": "monitoring Tools around that makes sense to do so this is all stuff that's not really included but it's things you",
    "start": "2772960",
    "end": "2778160"
  },
  {
    "text": "maybe want to",
    "start": "2778160",
    "end": "2780640"
  },
  {
    "start": "2781000",
    "end": "2790000"
  },
  {
    "text": "consider is that going to work right so when do you want to do",
    "start": "2785920",
    "end": "2792640"
  },
  {
    "start": "2790000",
    "end": "2921000"
  },
  {
    "text": "this as much as the patterns and the ideas are pretty simple very stillar overhead with managing this stuff",
    "start": "2792640",
    "end": "2797920"
  },
  {
    "text": "especially when it gets into production and it's only really suitable for certain systems I mean if you are",
    "start": "2797920",
    "end": "2804680"
  },
  {
    "text": "actually working on what is effectively data entry which is you know you either create a patient or you delete a patient",
    "start": "2804680",
    "end": "2810119"
  },
  {
    "text": "or you update a patient you're probably not going to get much of much benefit from this pattern but if you're actually",
    "start": "2810119",
    "end": "2815319"
  },
  {
    "text": "working on a system but has real process real interaction between the various users and a real",
    "start": "2815319",
    "end": "2821520"
  },
  {
    "text": "timeline then and real world events you know you look for real within a hospital",
    "start": "2821520",
    "end": "2827079"
  },
  {
    "text": "there's lots of events that takes place and it makes sense to map Bows to the code that's when it becomes really",
    "start": "2827079",
    "end": "2832960"
  },
  {
    "text": "powerful I've of I've SE so often I've seen people build um and and so often",
    "start": "2832960",
    "end": "2838400"
  },
  {
    "text": "I've seen people build kind of these systems where you see the commands and you see the events and they they eventually do become create patient",
    "start": "2838400",
    "end": "2845359"
  },
  {
    "text": "patient created updated patient patient updated when you start doing that if you find yourself doing that that's when you",
    "start": "2845359",
    "end": "2851400"
  },
  {
    "text": "really want to start looking at domain driven design because that'll help you break your system down into a series of",
    "start": "2851400",
    "end": "2857119"
  },
  {
    "text": "events that are are useful because create patient is not really useful create update patient it doesn't really",
    "start": "2857119",
    "end": "2863240"
  },
  {
    "text": "tell you anything that's been going on so when it kind of satisfies all",
    "start": "2863240",
    "end": "2868280"
  },
  {
    "text": "those things then it's worth building and and also you don't have to build an",
    "start": "2868280",
    "end": "2873559"
  },
  {
    "text": "entire application this way this is the other problem that I've seen happen so often is that people will have this large scale application they need to",
    "start": "2873559",
    "end": "2879960"
  },
  {
    "text": "build and they'll say right we're going to Event Source this we're going to event sauce the entire thing and that's",
    "start": "2879960",
    "end": "2886559"
  },
  {
    "text": "kind of when it fails because there certain parts of your application but are just CR based",
    "start": "2886559",
    "end": "2891720"
  },
  {
    "text": "in certain parts which are event based so a very good example of what shouldn't",
    "start": "2891720",
    "end": "2897160"
  },
  {
    "text": "be Event Source potentially is uh user registration that's always a big",
    "start": "2897160",
    "end": "2902400"
  },
  {
    "text": "one there's not much benefit to that but as again tracking a pay patient's journey through a hospital in that",
    "start": "2902400",
    "end": "2909559"
  },
  {
    "text": "situation it is it is pretty good so that's pretty much my talk we the demo",
    "start": "2909559",
    "end": "2915520"
  },
  {
    "text": "that I I've given I've changed it a little bit so I will push it up on to get up eventually so you'll be able to have a little bit more of a look of",
    "start": "2915520",
    "end": "2921359"
  },
  {
    "start": "2921000",
    "end": "3007000"
  },
  {
    "text": "it there's some links here if you want to take it a bit further and actually investigate this yourself there's a",
    "start": "2921359",
    "end": "2926680"
  },
  {
    "text": "Google group with DDD event sourcing and cqs yes I told you those words are always together you'll appreciate but I",
    "start": "2926680",
    "end": "2932920"
  },
  {
    "text": "actually typed these links out so you can actually read these ones cuz these are very important bits of a talk",
    "start": "2932920",
    "end": "2939520"
  },
  {
    "text": "um uh so yeah there's a Google group there's also the slack Channel which uh started up maybe six months ago and",
    "start": "2939520",
    "end": "2946000"
  },
  {
    "text": "that's incredibly active there's people on there all the time we've got hundreds of people registered on there now",
    "start": "2946000",
    "end": "2952079"
  },
  {
    "text": "finally at the bottom there a couple of links the first one is a link to uh Greg",
    "start": "2952079",
    "end": "2958040"
  },
  {
    "text": "yung's code on the beach talk I think it is which is purely about event sourcing and it's an excellent talk U and it will",
    "start": "2958040",
    "end": "2965480"
  },
  {
    "text": "give you more of an insight into where it all came from because Greg young was kind of a guy who popularized all this right and then at the bottom",
    "start": "2965480",
    "end": "2972119"
  },
  {
    "text": "there he also does a series of online videos um I know he's working to improve them at the moment and they are paid for",
    "start": "2972119",
    "end": "2978880"
  },
  {
    "text": "but I've seen them and I can highly recommend that you take a look at those if you if you're willing to part with the cash and finally again I'll I'll",
    "start": "2978880",
    "end": "2985599"
  },
  {
    "text": "tweet the link to v h um at some point late today when I've push everything up",
    "start": "2985599",
    "end": "2991440"
  },
  {
    "text": "so that's that's pretty much it so I think rather than keeping you all here longer than you need to be and if",
    "start": "2991440",
    "end": "2997799"
  },
  {
    "text": "there's people who don't actually want to listen to questions that's fine to go but if you want to speak to me afterwards I'll see the code in a little bit more detail then by all means come",
    "start": "2997799",
    "end": "3004200"
  },
  {
    "text": "to me afterwards or after the talk so thank you very much",
    "start": "3004200",
    "end": "3009880"
  }
]