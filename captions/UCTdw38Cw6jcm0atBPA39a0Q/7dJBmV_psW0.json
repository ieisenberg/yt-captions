[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "okay so the music's turned down so I think that's time to go somebody in the back want to give me a thumbs up all",
    "start": "11350",
    "end": "17360"
  },
  {
    "start": "17000",
    "end": "45000"
  },
  {
    "text": "right we got a thumbs up we're ready to go hi so I'm Ryan Noack I'm a developer and architect working on asp net core I have",
    "start": "17360",
    "end": "23840"
  },
  {
    "text": "a long time at guess at this point is P net team member I've been a part of the team since before Donna core was a thing",
    "start": "23840",
    "end": "30110"
  },
  {
    "text": "back when it was a SP net five and then when it was project K hopefully some of you all have been with us through all of",
    "start": "30110",
    "end": "36199"
  },
  {
    "text": "that growing pains and all of those times if you want you can find me on Twitter and sometime later today you'll",
    "start": "36199",
    "end": "42050"
  },
  {
    "text": "be able to find all of my presentation materials at that address so today we're",
    "start": "42050",
    "end": "47840"
  },
  {
    "start": "45000",
    "end": "82000"
  },
  {
    "text": "going to be talking about some new ideas as part of asp net core and we're gonna be talking about some things that are a",
    "start": "47840",
    "end": "54020"
  },
  {
    "text": "little bit further in the future these are some big ideas that are gonna shape the next five years of asp net core",
    "start": "54020",
    "end": "59540"
  },
  {
    "text": "development now something that probably sticks out is that all of these are going to be tied to something that exists you'll probably realize that when",
    "start": "59540",
    "end": "65899"
  },
  {
    "text": "i'm talking about this and we realize at this point that asp net core is pretty broad we're at 300 after all but there's",
    "start": "65899",
    "end": "72770"
  },
  {
    "text": "still plenty of refinement to do and i want to share some of these ideas to get your feedback and get you thinking about things and try to convince you that",
    "start": "72770",
    "end": "79580"
  },
  {
    "text": "there's still some innovation left in the tank for some of the things that you're already familiar with so you",
    "start": "79580",
    "end": "85039"
  },
  {
    "start": "82000",
    "end": "130000"
  },
  {
    "text": "probably didn't realize today when you came in here that you're gonna make a deal with me but look the deal is I'm gonna share",
    "start": "85039",
    "end": "90530"
  },
  {
    "text": "some information about some of our bold ideas and some of our future thinking things and in exchange I just want you",
    "start": "90530",
    "end": "96709"
  },
  {
    "text": "to remember that none of these things are committed roadmap nothing that you're gonna hear today is an announcement these are all just ideas",
    "start": "96709",
    "end": "103369"
  },
  {
    "text": "and things that we're gonna develop further and hopefully get your feedback on some of these things that we're gonna talk about might be the right solution",
    "start": "103369",
    "end": "110149"
  },
  {
    "text": "to the wrong problem or they might be the wrong solution to the right problem or they just might be things that we",
    "start": "110149",
    "end": "115550"
  },
  {
    "text": "decide not to do for whatever reason so keep that in mind as you're hearing about this stuff as with any of these",
    "start": "115550",
    "end": "122000"
  },
  {
    "text": "talks that are coming from Microsoft tell us what you like tell us what you would use it for your feedback is incredibly valuable and helping us",
    "start": "122000",
    "end": "128330"
  },
  {
    "text": "understand what to build and what to do so first up we're going to talk about something called project bedrock and in",
    "start": "128330",
    "end": "135410"
  },
  {
    "start": "130000",
    "end": "240000"
  },
  {
    "text": "order to understand what that is we're going to need a little bit of background about the HTTP server so I want to introduce you to Kestrel Kestrel is our",
    "start": "135410",
    "end": "142459"
  },
  {
    "text": "HTTP server and it was written it was written by engineers on our team as part of dotnet core 1.0",
    "start": "142459",
    "end": "148410"
  },
  {
    "text": "because well we needed a cross-platform HTTP server if you're gonna build a web",
    "start": "148410",
    "end": "153960"
  },
  {
    "text": "platform that works everywhere you need a server that works everywhere so we had a long legacy with is on Windows but we",
    "start": "153960",
    "end": "161130"
  },
  {
    "text": "wanted to build a server that we could take everywhere and give everybody the same experience no matter what operating system you're developing on or what",
    "start": "161130",
    "end": "168060"
  },
  {
    "text": "operating system you're deploying to now what you're seeing on this screen is the results from the tech empower web",
    "start": "168060",
    "end": "173850"
  },
  {
    "text": "framework benchmarks this in particular is the plain text benchmark which is part of the tech empower suite there are",
    "start": "173850",
    "end": "180090"
  },
  {
    "text": "some more and this particular one is like a 50 meter sprint so you should think about this like what's the minimum",
    "start": "180090",
    "end": "185940"
  },
  {
    "text": "amount of framework overhead like what's the fastest your server can do it's a measurement of how much overhead the",
    "start": "185940",
    "end": "191490"
  },
  {
    "text": "server adds and what are the sort of raw capabilities of the server there are some other benchmarks that are part of",
    "start": "191490",
    "end": "196740"
  },
  {
    "text": "tech and power that a little bit more realistic but this one is really just hello world and it's kind of a race right so you can see us hanging out here",
    "start": "196740",
    "end": "204690"
  },
  {
    "text": "at about 10:00 or 11:00 10:00 and 11:00 or both us the red lines but really this",
    "start": "204690",
    "end": "210150"
  },
  {
    "text": "is a 17 way tie so with these tech and power benchmarks for plain text there's currently a 717",
    "start": "210150",
    "end": "216870"
  },
  {
    "text": "way tie at the maximum theoretical throughput for this particular benchmark we're maxing out the network if you look",
    "start": "216870",
    "end": "223380"
  },
  {
    "text": "at what some of these other frameworks are over here in this language column I guess it's abbreviated LNG you see rust",
    "start": "223380",
    "end": "230300"
  },
  {
    "text": "C++ go and the only other sort of managed stack that you'll see there is",
    "start": "230300",
    "end": "235470"
  },
  {
    "text": "Java the rest of these are all going to be native code kinds of stacks so clearly we're doing something right if",
    "start": "235470",
    "end": "241470"
  },
  {
    "start": "240000",
    "end": "403000"
  },
  {
    "text": "in this competitive benchmark we're getting into the top sort of echelon and we're with everybody else in a tie to",
    "start": "241470",
    "end": "246960"
  },
  {
    "text": "max out what's possible at the benchmark so that's that's something we've done so",
    "start": "246960",
    "end": "252240"
  },
  {
    "text": "far this is kind of a layering diagram of what Castro looks like in asp net core 200 and you might not have much",
    "start": "252240",
    "end": "258840"
  },
  {
    "text": "experience thinking about these bottom two layers because they're not the kinds of things you typically write applications with you're not normally",
    "start": "258840",
    "end": "265080"
  },
  {
    "text": "thinking about what's going on inside the details of the web server when you write an application but that's okay",
    "start": "265080",
    "end": "270690"
  },
  {
    "text": "because that's what I'm here to explain to you so before an HTTP request gets to the middleware pipeline the server has",
    "start": "270690",
    "end": "276390"
  },
  {
    "text": "already done a bunch of complicated thing the server manages TCP connections it deals with timeouts it deals with a",
    "start": "276390",
    "end": "282419"
  },
  {
    "text": "bunch of security features and it translates raw bytes going over the Internet into the kinds of objects that",
    "start": "282419",
    "end": "288509"
  },
  {
    "text": "you get to interact with in your asp net core application so if we gave you instead a server where you just get like",
    "start": "288509",
    "end": "295259"
  },
  {
    "text": "a stream and raw bytes and you have to parse the headers yourself and you have to write the body yourself and you have",
    "start": "295259",
    "end": "300419"
  },
  {
    "text": "to write the headers yourself that wouldn't be very good you wouldn't want to use it it wouldn't be very productive for for you at the bottom of this",
    "start": "300419",
    "end": "307349"
  },
  {
    "text": "diagram on the left side and that's from v1 is libuv libuv",
    "start": "307349",
    "end": "312539"
  },
  {
    "text": "if you're not familiar with it is the C library that's at the core of nodejs",
    "start": "312539",
    "end": "317839"
  },
  {
    "text": "people probably use node at least hopefully everybody's heard of node so we actually in v1 took the the library",
    "start": "317839",
    "end": "323849"
  },
  {
    "text": "that's at the heart of node and made it the cornerstone of our server the reason",
    "start": "323849",
    "end": "328919"
  },
  {
    "text": "why we would do that is well they wrote a pretty good implementation and it's cross-platform so we had an existing",
    "start": "328919",
    "end": "334319"
  },
  {
    "text": "cross-platform library that we could use for sockets and TCP and all kinds of networking related things that we could",
    "start": "334319",
    "end": "340289"
  },
  {
    "text": "build a server on top of and Lybia V's purpose in all of this is that it does those things that I just mentioned it",
    "start": "340289",
    "end": "345689"
  },
  {
    "text": "handles TCP connections and it deals with translating raw bytes and sending those in and out from the wire then a",
    "start": "345689",
    "end": "352680"
  },
  {
    "text": "funny thing happened as we worked on kestrel and we went on the sort of performance journey of asp net core we",
    "start": "352680",
    "end": "358080"
  },
  {
    "text": "have grulla movies performance so we got to a point where libuv was the bottleneck of our stack and we had an",
    "start": "358080",
    "end": "364019"
  },
  {
    "text": "opportunity to take a big bet on net and make dotnet better so along with that we replace libuv with dotnet sockets and we",
    "start": "364019",
    "end": "371099"
  },
  {
    "text": "did a bunch of work on dotnet sockets to make their performance great and that gets that gets us to where we are right now so if you think about kestrel and",
    "start": "371099",
    "end": "378959"
  },
  {
    "text": "serving your application what's actually going on at the network layer is it's using that familiar class system that",
    "start": "378959",
    "end": "384719"
  },
  {
    "text": "socket socket like we're using types in the bcl-2 do all of our network io in kestrel and that's because of",
    "start": "384719",
    "end": "391649"
  },
  {
    "text": "investments that we made in performance at that layer so we think of this bottom layer here we call this the transport",
    "start": "391649",
    "end": "398009"
  },
  {
    "text": "layer since that's the thing that's transporting bytes somewhere else when you make a network connection now then",
    "start": "398009",
    "end": "404879"
  },
  {
    "start": "403000",
    "end": "464000"
  },
  {
    "text": "we started work on HTTP to HTTPS a change at the top layer of the server",
    "start": "404879",
    "end": "411610"
  },
  {
    "text": "so if you think about what happens when you have a different network protocol there's a different structure different",
    "start": "411610",
    "end": "416620"
  },
  {
    "text": "parsing different interactions with streams those kind of things and so we extracted that top layer and turned it",
    "start": "416620",
    "end": "422500"
  },
  {
    "text": "into something we call the protocol layer and we have three protocols that we support that are in the Box we have HTTP HTTP two and signal are and we had",
    "start": "422500",
    "end": "431050"
  },
  {
    "text": "to extract a genuine layer there because we needed to replace HTTP with something else so now we've got this sort of",
    "start": "431050",
    "end": "437830"
  },
  {
    "text": "delicious layer cake here on the bottom layer we have the transport layer we have connections in raw IO on the top",
    "start": "437830",
    "end": "444460"
  },
  {
    "text": "layer we have protocols the things that provide structure and provide meaning to those raw bytes and provide useful",
    "start": "444460",
    "end": "450250"
  },
  {
    "text": "semantics that you use to build applications and in the middle we have that delicious layer of peanut butter",
    "start": "450250",
    "end": "456070"
  },
  {
    "text": "that we call the server and you can sort of think of that like the traffic cop that's mediating between those two things and managing the contracts",
    "start": "456070",
    "end": "462670"
  },
  {
    "text": "between those two layers so transports and protocols what do we get when",
    "start": "462670",
    "end": "468070"
  },
  {
    "start": "464000",
    "end": "489000"
  },
  {
    "text": "transports and protocols are replaceable well we have a bunch of options so you",
    "start": "468070",
    "end": "473410"
  },
  {
    "text": "could have a transport that is named pipes you could do HTTP over named pipes you could do HTTP over a UNIX domain",
    "start": "473410",
    "end": "479740"
  },
  {
    "text": "socket you could do HTTP 3 you could do signal or you could do AMQP and MQTT",
    "start": "479740",
    "end": "486670"
  },
  {
    "text": "which are some new protocols that are emerging that are really exciting so we kind of developed this recipe for how we",
    "start": "486670",
    "end": "492910"
  },
  {
    "start": "489000",
    "end": "617000"
  },
  {
    "text": "want to architect the server and developed a recipe for how we make those components replaceable so that we're",
    "start": "492910",
    "end": "498910"
  },
  {
    "text": "better equipped to deal with change in the future and to adopt new stuff in the future so that's basically product",
    "start": "498910",
    "end": "505600"
  },
  {
    "text": "project in bedrock to find bedrock is an API that we created for client server networking we're not going to go over it",
    "start": "505600",
    "end": "511780"
  },
  {
    "text": "in detail here because it's a little bit kind of expert and and maybe not something that you're going to use inside your actual application but",
    "start": "511780",
    "end": "518590"
  },
  {
    "text": "bedrock is the API and the design sort of exercise that led to the creation of all those types in system i/o pipelines",
    "start": "518590",
    "end": "525100"
  },
  {
    "text": "so if you've heard us talk about high performance and networking is he sharp if you've read about span and read only",
    "start": "525100",
    "end": "530380"
  },
  {
    "text": "real nice trucks and all those kinds of things a lot of that work across dotnet aligned with this bedrock effort and a",
    "start": "530380",
    "end": "537130"
  },
  {
    "text": "lot of those types like pipelines and spans were sort of shaped by this effort to say let's get our network stack in in",
    "start": "537130",
    "end": "544570"
  },
  {
    "text": "order let's get the server part of this into a design where we're ready to replace these components with different",
    "start": "544570",
    "end": "550569"
  },
  {
    "text": "components as we need to adapt to change so these api's are in.net core if you",
    "start": "550569",
    "end": "556720"
  },
  {
    "text": "own something that does its own network communication they're there for you to start using you start building with and",
    "start": "556720",
    "end": "562449"
  },
  {
    "text": "the other sort of thing about this is well we think that dotnet is actually a really good language for doing this sort",
    "start": "562449",
    "end": "567910"
  },
  {
    "text": "of low-level Network communication with all the changes that have gone into c-sharp lately in c-sharp 7 2 & 7 3 and",
    "start": "567910",
    "end": "574120"
  },
  {
    "text": "with pipes and spans and all these other great low-level primitives we feel like we're actually in a really good place",
    "start": "574120",
    "end": "579370"
  },
  {
    "text": "for you to write low-level code that does Network i/o and it's safe like you're not going to have memory problems",
    "start": "579370",
    "end": "584980"
  },
  {
    "text": "you're not gonna have crashes and it doesn't have to be quite as complicated as doing this in like C or C++ if you",
    "start": "584980",
    "end": "591250"
  },
  {
    "text": "remember back to that diagram that we looked at earlier there's a whole lot of servers at the top that are written in",
    "start": "591250",
    "end": "596500"
  },
  {
    "text": "native code and some of them are in safe native languages like rust and go and some of them are in well less safe",
    "start": "596500",
    "end": "601870"
  },
  {
    "text": "native languages like C and C++ Java is up there too in a few cases we think the",
    "start": "601870",
    "end": "606910"
  },
  {
    "text": "dotnet is getting better for this kind of thing every day and is a really good choice for building this kind of",
    "start": "606910",
    "end": "613300"
  },
  {
    "text": "detailed low-level code that you can do safely if you're if you're careful so now I want to show you a quick demo and",
    "start": "613300",
    "end": "620170"
  },
  {
    "start": "617000",
    "end": "639000"
  },
  {
    "text": "who's hopefully people here have heard of single R if you haven't heard of signal R there's one hand up there all",
    "start": "620170",
    "end": "625630"
  },
  {
    "text": "right we got one guy so if you haven't used signal R before signal R is a real-time two-way communication protocol",
    "start": "625630",
    "end": "632610"
  },
  {
    "text": "primarily it's used in browsers with WebSockets what does that all mean well",
    "start": "632610",
    "end": "637920"
  },
  {
    "text": "primarily that means that you can use it to build a chat application so I'm gonna show you I'm gonna show you my great",
    "start": "637920",
    "end": "644500"
  },
  {
    "start": "639000",
    "end": "764000"
  },
  {
    "text": "chat application because that's what everybody does the first time with signal R and then we'll get a little bit weird with it okay so I'm gonna go ahead",
    "start": "644500",
    "end": "650740"
  },
  {
    "text": "and fire this up and I've got my chat window here and for any good chat demo",
    "start": "650740",
    "end": "657180"
  },
  {
    "text": "you need two windows so I'll split that",
    "start": "657180",
    "end": "662410"
  },
  {
    "text": "off okay and I'll say hello from the left",
    "start": "662410",
    "end": "668680"
  },
  {
    "text": "side and when I do that it's gonna appear on both screens because I'm using signal are here so both of these both of",
    "start": "668680",
    "end": "675279"
  },
  {
    "text": "these windows are using the JavaScript JavaScript or typescript signal our client connecting to my asp net course",
    "start": "675279",
    "end": "681760"
  },
  {
    "text": "server running signal are and they're sending and receiving messages from the same hub they're part of the same chatroom I I can come over here and I",
    "start": "681760",
    "end": "688810"
  },
  {
    "text": "can say hello from the right side and these are just broadcasts everybody",
    "start": "688810",
    "end": "693970"
  },
  {
    "text": "who's listening to this hub is getting all the same kinds of messages if you wanted to see how this works I could",
    "start": "693970",
    "end": "699130"
  },
  {
    "text": "bring up the developer tools over here and I can go to WebSocket I have to refresh for Chrome to pick this up and",
    "start": "699130",
    "end": "704500"
  },
  {
    "text": "you can see that there's a WebSocket here that's what this that's what this little thing indicates if I send another",
    "start": "704500",
    "end": "710260"
  },
  {
    "text": "message here then you can see I'm getting a WebSocket response from the",
    "start": "710260",
    "end": "715690"
  },
  {
    "text": "server that's this doubt this red down arrow means sending down to me and that's how I'm getting this message it's",
    "start": "715690",
    "end": "721269"
  },
  {
    "text": "coming over that real time connection so let's get a little bit weird with it I have got this other client here and this",
    "start": "721269",
    "end": "728440"
  },
  {
    "text": "is this is a console client and what I'm using in here is I'm using the vanilla dotnet c-sharp signal our client but",
    "start": "728440",
    "end": "736540"
  },
  {
    "text": "what I have done is I've replaced the transport layer and it's not doing WebSockets it's actually doing TCP",
    "start": "736540",
    "end": "742000"
  },
  {
    "text": "directly so there's no HTTP here there's no doing an HTTP request and then doing",
    "start": "742000",
    "end": "747790"
  },
  {
    "text": "a negotiation and then opening a WebSocket it's at a much much lower level than that so I can send you know",
    "start": "747790",
    "end": "753970"
  },
  {
    "text": "hello from TCP and it's gonna show up in both of these windows over here just",
    "start": "753970",
    "end": "759310"
  },
  {
    "text": "like it we're coming from a WebSocket is that cool it's a little bit cool okay",
    "start": "759310",
    "end": "765010"
  },
  {
    "start": "764000",
    "end": "873000"
  },
  {
    "text": "great so so that's that's kind of interesting why why might you care about that why",
    "start": "765010",
    "end": "770440"
  },
  {
    "text": "might you want more options than just using WebSockets what kind of things do you get out of replacing the network protocol well different transport layer",
    "start": "770440",
    "end": "778000"
  },
  {
    "text": "protocols might be more efficient they might be more direct they might use less resources or they might give you",
    "start": "778000",
    "end": "783790"
  },
  {
    "text": "different security options like using a UNIX domain socket or using a named pipe gives you a different set of security",
    "start": "783790",
    "end": "790060"
  },
  {
    "text": "options than using a WebSocket maybe you're building an application that has to do communication and you don't want",
    "start": "790060",
    "end": "795790"
  },
  {
    "text": "to think about how do I'd secure HTTP as part of this application you could do some kind of Windows thing with named pipes so",
    "start": "795790",
    "end": "801970"
  },
  {
    "text": "there's a bunch of different options that you have here and the the bedrock effort is really just about giving you",
    "start": "801970",
    "end": "808360"
  },
  {
    "text": "options for the network protocol and about setting us up with more ability to customize and build and grow this area",
    "start": "808360",
    "end": "814840"
  },
  {
    "text": "in the future so the changes that are different here the things that make this work from your normal sort of signal our",
    "start": "814840",
    "end": "820810"
  },
  {
    "text": "application I have a listener here so I'm listening on the loopback at port",
    "start": "820810",
    "end": "827110"
  },
  {
    "text": "5,000 and I'm not passing anything in here so this is just gonna do the normal Kestrel thing it's gonna normally run my",
    "start": "827110",
    "end": "833440"
  },
  {
    "text": "HTTP pipeline so when my browser WebSocket client connects it's gonna go",
    "start": "833440",
    "end": "838780"
  },
  {
    "text": "down this pipeline it's gonna do the normal browser WebSocket thing but then I've got this other listener here and",
    "start": "838780",
    "end": "843850"
  },
  {
    "text": "I'm listening on loopback 5006 and instead of going down the normal HTTP",
    "start": "843850",
    "end": "849490"
  },
  {
    "text": "pipeline I've got this builder here and I can show you it's a listen options",
    "start": "849490",
    "end": "854500"
  },
  {
    "text": "builder it's not an application builder it's not a sauna asp net core middleware pipeline it's something much more",
    "start": "854500",
    "end": "860140"
  },
  {
    "text": "primitive and low-level than that and signal already has the support in the box to wire itself up to that so I can",
    "start": "860140",
    "end": "865630"
  },
  {
    "text": "wire up this same chat hub that I'm using over HTTP and WebSockets directly",
    "start": "865630",
    "end": "871480"
  },
  {
    "text": "to that TCP connection over here and my client-side application the only thing",
    "start": "871480",
    "end": "876490"
  },
  {
    "start": "873000",
    "end": "948000"
  },
  {
    "text": "that's different in this console application is instead of giving myself a WebSocket URL I'm giving myself a TCP",
    "start": "876490",
    "end": "883330"
  },
  {
    "text": "connection and saying hey go to this TCP address so the future of project bedrock",
    "start": "883330",
    "end": "891490"
  },
  {
    "text": "what is that what does that feature hold we think that these api's are pretty good and so they're public and stable",
    "start": "891490",
    "end": "896560"
  },
  {
    "text": "and 3.0 what's left here is that we need more protocols and transports so on the",
    "start": "896560",
    "end": "902380"
  },
  {
    "text": "horizon is quick quick as part of HTTP 3 it's a new transport layer protocol that is used instead of TCP with with HTTP 3",
    "start": "902380",
    "end": "910840"
  },
  {
    "text": "the team is already working on and thinking about HTTP 3 we were a little bit behind where we wanted to be with",
    "start": "910840",
    "end": "916450"
  },
  {
    "text": "HTTP 2 what we got there were sort of committed to being a little bit more ahead of the game with HTTP 3",
    "start": "916450",
    "end": "922390"
  },
  {
    "text": "and that sort of things are already happening the other aspect of this is you there's a long tail of libraries",
    "start": "922390",
    "end": "929589"
  },
  {
    "text": "that do network do database connections to Redis talk to message queues we think the community",
    "start": "929589",
    "end": "935020"
  },
  {
    "text": "has a potential to benefit from this work immensely we have created a sort of battle-hardened recipe around doing this",
    "start": "935020",
    "end": "941140"
  },
  {
    "text": "kind of efficient networking communication and we think that the libraries that are out there in the dotnet community can leverage this and",
    "start": "941140",
    "end": "946720"
  },
  {
    "text": "continue to get better and better so thanks to David Fowler who helped me prepare this section if you want to see",
    "start": "946720",
    "end": "953170"
  },
  {
    "start": "948000",
    "end": "969000"
  },
  {
    "text": "these examples or see these api's or some of followers demos you can follow these links later and check those things",
    "start": "953170",
    "end": "959140"
  },
  {
    "text": "out next i want to talk about project Houdini which relates to all of our",
    "start": "959140",
    "end": "964870"
  },
  {
    "text": "frameworks we ship and how they integrate or don't integrate with the rest of our framework so let me ask does",
    "start": "964870",
    "end": "972640"
  },
  {
    "start": "969000",
    "end": "998000"
  },
  {
    "text": "this seem balanced I have got a list here of features that exist in asp net",
    "start": "972640",
    "end": "977800"
  },
  {
    "text": "core and i'm sort of dividing them up between whether they're implemented at the platform layer or whether they're",
    "start": "977800",
    "end": "983020"
  },
  {
    "text": "part of asp net core MVC so we have the asp net core platform on the left with like a couple things that are unique to",
    "start": "983020",
    "end": "989230"
  },
  {
    "text": "it and we have MVC on the right with this like embarrassment of riches right like there's all these features over in",
    "start": "989230",
    "end": "994930"
  },
  {
    "text": "this right column that are unique to MVC let's add some more frameworks to this",
    "start": "994930",
    "end": "1000000"
  },
  {
    "start": "998000",
    "end": "1058000"
  },
  {
    "text": "mess so let's add signal R and let's add GRP see anything that's part of the platform layer you get a uniform",
    "start": "1000000",
    "end": "1006720"
  },
  {
    "text": "experience across all these frameworks it's shared it's reusable it's sort of set up for you to get the same thing no",
    "start": "1006720",
    "end": "1013740"
  },
  {
    "text": "matter what of these experiences you're using anything in MVC if you want to share it across any of these frameworks",
    "start": "1013740",
    "end": "1020070"
  },
  {
    "text": "you don't really have the option to do that because it's locked to MVC so our options if we want to say reuse routing",
    "start": "1020070",
    "end": "1028260"
  },
  {
    "text": "inside of signal are well we ended up duplicating that and that's actually what that's actually what signal our",
    "start": "1028260",
    "end": "1033420"
  },
  {
    "text": "prior to 3.0 was like is it had its own routing system that was separate from the routing system in MVC so lately I've",
    "start": "1033420",
    "end": "1040680"
  },
  {
    "text": "been peeling the onion here to see how many platform level features should be abstracted from MVC how many things that",
    "start": "1040680",
    "end": "1047640"
  },
  {
    "text": "are here should probably be pushed down lower in the stack and should be made more general purpose and more reusable",
    "start": "1047640",
    "end": "1053240"
  },
  {
    "text": "routing was the obvious place to start here because so many other decisions are driven by what routing does so in 3.0 we",
    "start": "1053240",
    "end": "1060000"
  },
  {
    "start": "1058000",
    "end": "1145000"
  },
  {
    "text": "made a change to the routing system and we made a new routing system be the default the old one is still there you can still",
    "start": "1060000",
    "end": "1066059"
  },
  {
    "text": "use it but we're strongly encouraging everybody to get to this new one and the reason is because well it's it's",
    "start": "1066059",
    "end": "1072059"
  },
  {
    "text": "Universal it solves a bunch of problems with the old one we think it's better in every way and we're working we're working to",
    "start": "1072059",
    "end": "1077730"
  },
  {
    "text": "address scenarios that keep people from adopting the new thing get them on it new stuff like blazer server and gr PC",
    "start": "1077730",
    "end": "1083820"
  },
  {
    "text": "don't integrate with the old system they only integrate with the new one gradually over time we're gonna move more and more scenarios onto the new",
    "start": "1083820",
    "end": "1090360"
  },
  {
    "text": "system and eventually try to rip the old one out and as you can see in this code sample there's a whole galaxy of stuff",
    "start": "1090360",
    "end": "1096179"
  },
  {
    "text": "that's plugging in here to the same routing system we got controllers we've got pages we got signal R we got JRP see",
    "start": "1096179",
    "end": "1102360"
  },
  {
    "text": "we got blazer you can do router where you can do all kinds of powerful things with this new routing system the other",
    "start": "1102360",
    "end": "1107970"
  },
  {
    "text": "thing that's cool about this is they're using the same off system so not only and that's that's part of the payoff of",
    "start": "1107970",
    "end": "1113850"
  },
  {
    "text": "this is the routing system solves a bunch of problems between integration between frameworks like MVC and",
    "start": "1113850",
    "end": "1119760"
  },
  {
    "text": "middleware like authorization so all of these frameworks that can use this routing system all use the same off",
    "start": "1119760",
    "end": "1125700"
  },
  {
    "text": "system it's all integrated and it all works the same now in the interest of time I'm not gonna do a super deep dive",
    "start": "1125700",
    "end": "1131580"
  },
  {
    "text": "on the design of the routing system I did do a talk about that an NBC London that's called lessons learned building",
    "start": "1131580",
    "end": "1137010"
  },
  {
    "text": "MVC about half of that talk is dedicated to this area so if you're interested in that you should be able to find that on",
    "start": "1137010",
    "end": "1142260"
  },
  {
    "text": "YouTube and check it out and get a better understanding of this so this is a layering diagram of what things look",
    "start": "1142260",
    "end": "1148710"
  },
  {
    "start": "1145000",
    "end": "1173000"
  },
  {
    "text": "like now that we have endpoint routing in the picture you can see on top we've got or on the bottom you've got server",
    "start": "1148710",
    "end": "1154890"
  },
  {
    "text": "which we talked about already you've got middle where you've got routing which is a particular middleware and then on top you've got all these",
    "start": "1154890",
    "end": "1160890"
  },
  {
    "text": "lovely frameworks that are built on top of routing so I'm really happy with this because if I can make a diagram that's",
    "start": "1160890",
    "end": "1165990"
  },
  {
    "text": "this simple and it describes the truth then that's a really good position to be in because it means that things are sort",
    "start": "1165990",
    "end": "1171750"
  },
  {
    "text": "of in the right shape and everything is right with the world so now we're set up to unpack project",
    "start": "1171750",
    "end": "1178049"
  },
  {
    "start": "1173000",
    "end": "1252000"
  },
  {
    "text": "Houdini what endpoint routing did is we took some MVC features and we made them disappear",
    "start": "1178049",
    "end": "1184049"
  },
  {
    "text": "they didn't disappear exactly they got turned into more useful things and got put into some other situations they I",
    "start": "1184049",
    "end": "1190440"
  },
  {
    "text": "like to think they sort of got broken off and got shared lower in the framework in practice this is a little",
    "start": "1190440",
    "end": "1196260"
  },
  {
    "text": "less graceful than it sounds we haven't been able to invent magic yet but gradually over time we're going to",
    "start": "1196260",
    "end": "1201810"
  },
  {
    "text": "be migrating people to the new system we're gonna make sure that people are happy with it and that it does what they want and eventually the old one will go",
    "start": "1201810",
    "end": "1208320"
  },
  {
    "text": "away that's a long process and we expect that it's going to take multiple releases for any of this kind of work",
    "start": "1208320",
    "end": "1213390"
  },
  {
    "text": "because we genuinely want to make it worth your while if we're asking you to",
    "start": "1213390",
    "end": "1218430"
  },
  {
    "text": "change something we think there's a lot of value in this for everyone and it often gives us an opportunity if we're",
    "start": "1218430",
    "end": "1225090"
  },
  {
    "text": "refactoring something or real layering something to address a bunch of scenarios that we found out about since",
    "start": "1225090",
    "end": "1230460"
  },
  {
    "text": "the last time we worked on this code and before anybody gets upset about this we're not trying to make MVC disappear",
    "start": "1230460",
    "end": "1236400"
  },
  {
    "text": "your controllers and your pages and all those things are going to be around forever and they're gonna be primary to",
    "start": "1236400",
    "end": "1241770"
  },
  {
    "text": "the programming model of asp net core forever we still think that controllers are one of the best ideas for doing web",
    "start": "1241770",
    "end": "1247620"
  },
  {
    "text": "in dotnet and we don't plan to like take them away what we're talking about here is just about giving people more options",
    "start": "1247620",
    "end": "1253790"
  },
  {
    "start": "1252000",
    "end": "1361000"
  },
  {
    "text": "so I want to architect your brain for a minute and I want to talk about what",
    "start": "1253790",
    "end": "1260190"
  },
  {
    "text": "controllers do and what some other things kind of do controllers are a very like declarative solution right they",
    "start": "1260190",
    "end": "1266730"
  },
  {
    "text": "give you a place to put methods on a class they give you a place to write parameters they give you a place to",
    "start": "1266730",
    "end": "1272610"
  },
  {
    "text": "declare a return type they give you a place to put attributes and they give you a lot of power as long as the power",
    "start": "1272610",
    "end": "1278550"
  },
  {
    "text": "that you want fits with that model so if you hear me right like what you can",
    "start": "1278550",
    "end": "1283920"
  },
  {
    "text": "express with your parameters and your return types and your attributes if it's a good fit for how the framework behaves",
    "start": "1283920",
    "end": "1289590"
  },
  {
    "text": "is what you want then it feels really good to use if what you want is not a",
    "start": "1289590",
    "end": "1294840"
  },
  {
    "text": "good fit for what the framework provides with those attributes and parameters and return types then it doesn't feel very",
    "start": "1294840",
    "end": "1300660"
  },
  {
    "text": "good to use on the other hand imperative solutions you write the code you want",
    "start": "1300660",
    "end": "1307500"
  },
  {
    "text": "and it does the things that you want they're often a little bit more verbose but in exchange for that everything is",
    "start": "1307500",
    "end": "1313740"
  },
  {
    "text": "very pay-for-play like you you told us exactly what to do and we're just doing it they're usually a little bit simpler",
    "start": "1313740",
    "end": "1319950"
  },
  {
    "text": "to understand because there's no magic and there's no secrets going on and if you're very performance sensitive in",
    "start": "1319950",
    "end": "1324990"
  },
  {
    "text": "some scenario imperative solutions are often a better choice because you're in control you control everything that",
    "start": "1324990",
    "end": "1331460"
  },
  {
    "text": "it's there so it becomes apparent if you if what I said about fit and declarative",
    "start": "1331460",
    "end": "1338570"
  },
  {
    "text": "solutions kind of got yeah like right here we're missing imperative solutions for a bunch of the things that NBC",
    "start": "1338570",
    "end": "1344299"
  },
  {
    "text": "provides so like model binding for matters validation a bunch of those things we don't really have options like",
    "start": "1344299",
    "end": "1350570"
  },
  {
    "text": "we don't really have code for you to call to do those things or if you've tried to do it you've realized you'd",
    "start": "1350570",
    "end": "1355580"
  },
  {
    "text": "have to write like 20 lines of code and you gave up you said this is complicated I can't maintain this I don't understand this that's that's our fault that's on",
    "start": "1355580",
    "end": "1363320"
  },
  {
    "start": "1361000",
    "end": "1404000"
  },
  {
    "text": "us I think I think we're missing I think we're missing some stuff here I think we're missing some solutions that make",
    "start": "1363320",
    "end": "1370279"
  },
  {
    "text": "those kinds of things possible so we sort of asked myself like well a good",
    "start": "1370279",
    "end": "1375590"
  },
  {
    "text": "way to solve that problem is to think about what would it take for you to be happy and successful writing is B net core apps with no framework at all like",
    "start": "1375590",
    "end": "1382640"
  },
  {
    "text": "what if there was no MVC what if you what if you just wrote the code right this kind of style is really popular",
    "start": "1382640",
    "end": "1388460"
  },
  {
    "text": "with go and with no js' and with a bunch of other styles of frameworks and text ax there's some frameworks and dotnet",
    "start": "1388460",
    "end": "1394640"
  },
  {
    "text": "that do this and some pieces of infrastructure that do it hasn't really caught on in dotnet at the same rate as it has in other places but I wanted to",
    "start": "1394640",
    "end": "1401450"
  },
  {
    "text": "give it a try and I wanted to think about what this would look like so I made a graph this isn't scientific I get",
    "start": "1401450",
    "end": "1407990"
  },
  {
    "start": "1404000",
    "end": "1536000"
  },
  {
    "text": "to make up the criteria and the results so very very arbitrary but hopefully it helps demonstrate my point to you if",
    "start": "1407990",
    "end": "1414289"
  },
  {
    "text": "you're a little bit of a visual person so this is a graph of how declarative and approach is versus how rich it feels",
    "start": "1414289",
    "end": "1421610"
  },
  {
    "text": "and I want to I want you to think about richness as how easily can you find a",
    "start": "1421610",
    "end": "1426980"
  },
  {
    "text": "solution to your problem that feels right so if we're talking about MVC and",
    "start": "1426980",
    "end": "1432860"
  },
  {
    "text": "you're thinking about okay I want to read some JSON from the body there's from body attribute right that feels",
    "start": "1432860",
    "end": "1439460"
  },
  {
    "text": "right you're telling us what you want and we're doing it or if you're using API controller you don't even have to",
    "start": "1439460",
    "end": "1445070"
  },
  {
    "text": "say from body we just do it we assume that's what you want and it feels right richness is ultimately what you want in",
    "start": "1445070",
    "end": "1452240"
  },
  {
    "text": "a framework it's what makes you happy when you use something like MVC your razor pages being declarative is",
    "start": "1452240",
    "end": "1457610"
  },
  {
    "text": "probably the most common way to get there and however if you're optimizing for performance you might not want to be",
    "start": "1457610",
    "end": "1464000"
  },
  {
    "text": "declarative because every feature has a cost and you might not always want the cost of all those features so for",
    "start": "1464000",
    "end": "1471049"
  },
  {
    "text": "controllers we're sort of over here in this like eighty percent bucket right very very declarative because you",
    "start": "1471049",
    "end": "1476419"
  },
  {
    "text": "express everything by methods and attributes and there's only a few concerns that you're expected to handle",
    "start": "1476419",
    "end": "1481820"
  },
  {
    "text": "yourself inside your action method the framework does the rest the key is that it feels really good if you have the",
    "start": "1481820",
    "end": "1487820"
  },
  {
    "text": "right tools to solve your problems which is why I'm only giving us like an 80% and richness there's some tools here",
    "start": "1487820",
    "end": "1492830"
  },
  {
    "text": "that are missing if you contrast that with routing well you get to write delegates it's like writing a middleware",
    "start": "1492830",
    "end": "1498950"
  },
  {
    "text": "like it's very bare-bones you don't really have a lot of tools available to you and so it's not very rich either if",
    "start": "1498950",
    "end": "1504830"
  },
  {
    "text": "you want solutions to the kinds of problems you have or the kind of tasks you have to perform you have to write those pieces of code yourself so I've",
    "start": "1504830",
    "end": "1511070"
  },
  {
    "text": "been doing a lot of thinking about what it would look like to make solutions to those problems I don't want to add more",
    "start": "1511070",
    "end": "1516110"
  },
  {
    "text": "declarative stuff because that would just sort of turn routing into MVC and we already have MVC controllers already",
    "start": "1516110",
    "end": "1522260"
  },
  {
    "text": "do that so what if we added more imperative constructs what if we added more services I could interact with and",
    "start": "1522260",
    "end": "1528049"
  },
  {
    "text": "more ways of solving the same problems that would work with something like routing on its own and I reckon it would",
    "start": "1528049",
    "end": "1533929"
  },
  {
    "text": "still be useful for the times where you're using controllers as well so that brings me to project Houdini and",
    "start": "1533929",
    "end": "1540410"
  },
  {
    "start": "1536000",
    "end": "1600000"
  },
  {
    "text": "something I like to call route to code and I'm really asking two questions here how can i how can we make minimal",
    "start": "1540410",
    "end": "1546440"
  },
  {
    "text": "back-end services feel good I want to hover in on that word minimal when I say minimal I mean like do you have a",
    "start": "1546440",
    "end": "1553400"
  },
  {
    "text": "service that's gonna have like four endpoints in it do you have a do you have a do you have a service where",
    "start": "1553400",
    "end": "1558590"
  },
  {
    "text": "you're gonna write like 50 lines of code do you feel like asp net core can do that we look at some other tech stacks",
    "start": "1558590",
    "end": "1564950"
  },
  {
    "text": "out there and we say well go can do that I bet we could make dotnet do that in",
    "start": "1564950",
    "end": "1570169"
  },
  {
    "text": "addition I want to think about if you're writing one of these small applications that's going to be really simple can we",
    "start": "1570169",
    "end": "1577490"
  },
  {
    "text": "remove some concepts can we simplify the number of things you think about can we make it scale really well to having a",
    "start": "1577490",
    "end": "1583040"
  },
  {
    "text": "really small amount of code I think we already do a pretty good job when you have a large amount of code I think",
    "start": "1583040",
    "end": "1588380"
  },
  {
    "text": "we've found this niche with people having 50 controllers or 100 or 50 projects or hundred projects in",
    "start": "1588380",
    "end": "1594960"
  },
  {
    "text": "their solution does it feel really good to use a small amount of code with asp net core and that's really what I'm",
    "start": "1594960",
    "end": "1601410"
  },
  {
    "start": "1600000",
    "end": "1612000"
  },
  {
    "text": "after here so I have a demo of this and I've taken some risks and I've made some",
    "start": "1601410",
    "end": "1606870"
  },
  {
    "text": "I've made some assumptions and I've shaken things up a little bit and I'm gonna point out some of those things to",
    "start": "1606870",
    "end": "1611910"
  },
  {
    "text": "you to you so what if you created a new way of speed at core application and like this was what you get by default",
    "start": "1611910",
    "end": "1618150"
  },
  {
    "start": "1612000",
    "end": "1647000"
  },
  {
    "text": "and just to prove that I'm not bluffing I'll open up you can ignore the man behind the curtain and ignore these",
    "start": "1618150",
    "end": "1623790"
  },
  {
    "text": "other projects here I've got my weather application and I've got a config file and beyond that I've literally got just",
    "start": "1623790",
    "end": "1628950"
  },
  {
    "text": "one file here there's one code file I am cheating a little bit I will acknowledge that I'm cheating I put my my data model",
    "start": "1628950",
    "end": "1635580"
  },
  {
    "text": "in another project but let's assume that you you've got some data model and we're really talking about could the asp net",
    "start": "1635580",
    "end": "1641669"
  },
  {
    "text": "core part of your app be one class one file that simple so what I've done here",
    "start": "1641669",
    "end": "1648690"
  },
  {
    "start": "1647000",
    "end": "1942000"
  },
  {
    "text": "is I've kind of combined like program CS and startup this is this is all of those things in once and I've introduced a",
    "start": "1648690",
    "end": "1655350"
  },
  {
    "text": "base class and I've given it a presumptive namespace to assume like it's part of the framework already like I'm already shipping this great and look",
    "start": "1655350",
    "end": "1662910"
  },
  {
    "text": "at how much complexity goes away like I don't I don't need a configure services because I haven't added any services I",
    "start": "1662910",
    "end": "1669809"
  },
  {
    "text": "don't need that big program main method because I'm not customizing what goes on there anyway I mean who is and I just",
    "start": "1669809",
    "end": "1676590"
  },
  {
    "text": "have this configure method with the middleware pipeline that I care about so it's really kind of slimmed down in",
    "start": "1676590",
    "end": "1681660"
  },
  {
    "text": "bare-bones and simple let's try and add some code to this so I'm going to build a really simple weather processing",
    "start": "1681660",
    "end": "1687210"
  },
  {
    "text": "application and we're just going to do some weather forecasting and I've already written this class which is my weather supercomputer so I'll get an",
    "start": "1687210",
    "end": "1694140"
  },
  {
    "text": "instance of my computer and I'm just going to close over this my weather",
    "start": "1694140",
    "end": "1699210"
  },
  {
    "text": "supercomputer I'm just going to close over this and use this here and it's going to be treated kind of as like it's",
    "start": "1699210",
    "end": "1705720"
  },
  {
    "text": "a singleton if I wanted to make this come from di I could register it as a service and I could just say I could",
    "start": "1705720",
    "end": "1712559"
  },
  {
    "text": "just say services dot get required service and get it that way but we're",
    "start": "1712559",
    "end": "1717630"
  },
  {
    "text": "not going to mess with that right now so now I'd like to add some routes or I'd like to add some things that are gonna handle requests here and I can do that",
    "start": "1717630",
    "end": "1724500"
  },
  {
    "text": "with this endpoints builder so I would just say and dot map get I'm gonna have to sort of",
    "start": "1724500",
    "end": "1731740"
  },
  {
    "text": "actions here I'm gonna handle weather for a place and then inside here I'm",
    "start": "1731740",
    "end": "1737500"
  },
  {
    "text": "gonna get the HTTP context and I'm gonna",
    "start": "1737500",
    "end": "1742600"
  },
  {
    "text": "read this place route value because that's how I'm gonna look up what the weather forecast is for our place equal",
    "start": "1742600",
    "end": "1749710"
  },
  {
    "text": "to I have to cast it to a string route values is untyped context request route",
    "start": "1749710",
    "end": "1755980"
  },
  {
    "text": "values and I want to get the place and then I'm going to take this place and",
    "start": "1755980",
    "end": "1761920"
  },
  {
    "text": "I'm gonna ask my whether a supercomputer can it tell me about the weather Peter",
    "start": "1761920",
    "end": "1768040"
  },
  {
    "text": "get forecast and I'll give it the place and then what do I want to do well I want to write this out as JSON one of",
    "start": "1768040",
    "end": "1776020"
  },
  {
    "text": "the one of the things that you run into a lot with dotnet is that the efficient ways of doing things are often not the",
    "start": "1776020",
    "end": "1782290"
  },
  {
    "text": "simplest ways of doing things so if I want it to be really simple I could serialize this to a string and",
    "start": "1782290",
    "end": "1787300"
  },
  {
    "text": "then I could write the string if I want it to be really efficient I could add a using I could create a sterilizer I",
    "start": "1787300",
    "end": "1793150"
  },
  {
    "text": "could call some complicated method blah so we can we can help we're here to help",
    "start": "1793150",
    "end": "1798810"
  },
  {
    "text": "one of the things that's in one of the ideas that's in my prototype here is well what if I had methods on the",
    "start": "1798810",
    "end": "1806190"
  },
  {
    "text": "response for that and you see that and you're like how did we get this far how",
    "start": "1806190",
    "end": "1813580"
  },
  {
    "text": "did we get to v3 without having this it's kind of its kind of mystifying right let's do the same thing let's",
    "start": "1813580",
    "end": "1819940"
  },
  {
    "text": "handle some input and I'm just going to copy paste this and I'll customize it so",
    "start": "1819940",
    "end": "1825790"
  },
  {
    "text": "we're gonna handle a post we're going to use the same route we're going to get the place the same and instead of",
    "start": "1825790",
    "end": "1831640"
  },
  {
    "text": "getting the weather from our computer this is an update of a weather forecast that's coming from one of my many",
    "start": "1831640",
    "end": "1837130"
  },
  {
    "text": "reporters in the field I'm going to read that from the body read",
    "start": "1837130",
    "end": "1845190"
  },
  {
    "text": "Aysen async I have to pass him a type I want and ill deserialize and then instead of instead of writing it back",
    "start": "1845190",
    "end": "1852300"
  },
  {
    "text": "out to the response I'm just gonna update my computer update forecast place",
    "start": "1852300",
    "end": "1858890"
  },
  {
    "text": "weather so like do you have apps that",
    "start": "1858890",
    "end": "1864240"
  },
  {
    "text": "are this simple do you have scenarios where you need to write like two things or three things",
    "start": "1864240",
    "end": "1869510"
  },
  {
    "text": "can we make it better can we make it feel nice to use and and everything now",
    "start": "1869510",
    "end": "1874710"
  },
  {
    "text": "there there are some things to talk about here there are some things that you're giving up so you're giving up unit testability right because these are",
    "start": "1874710",
    "end": "1881640"
  },
  {
    "text": "these are methods that are lambdas that are in routing right you can write integration tests for this but you can't really write unit tests",
    "start": "1881640",
    "end": "1887940"
  },
  {
    "text": "for it one of the things that makes controllers the way they are it's on purpose right the fact that controllers",
    "start": "1887940",
    "end": "1893220"
  },
  {
    "text": "are classes with methods that you can call it on purpose it's for unit testing what we're missing here and this is I",
    "start": "1893220",
    "end": "1899850"
  },
  {
    "text": "think sort of an artifact of the prototype is well we're missing rich model binding and validation I'm sort of",
    "start": "1899850",
    "end": "1906060"
  },
  {
    "text": "cheating a little bit by saying yeah I'm going to read the Jason I'm gonna write the Jason I'm assuming that they sent me Jason if they didn't send me Jason it's",
    "start": "1906060",
    "end": "1913080"
  },
  {
    "text": "gonna crash pretty hard so a real version of this would include those options but it would also probably",
    "start": "1913080",
    "end": "1918540"
  },
  {
    "text": "include low these sort of low-level primitives like reading and writing Jason directly for the case where you're",
    "start": "1918540",
    "end": "1924360"
  },
  {
    "text": "not willing to pay the cost for that so there's a future where we're giving you more options here and I think it looks like something like this plus let's take",
    "start": "1924360",
    "end": "1932100"
  },
  {
    "text": "model binding out of MVC and make it separate let's take four matters out of mu C and make them separate and give you",
    "start": "1932100",
    "end": "1937290"
  },
  {
    "text": "some options to build these kind of applications cool so that's that demo",
    "start": "1937290",
    "end": "1946940"
  },
  {
    "start": "1942000",
    "end": "1983000"
  },
  {
    "text": "so the future of this looks like us continued I think looks like us continuing the work we started with routing we want to gradually and gently",
    "start": "1947260",
    "end": "1954040"
  },
  {
    "text": "evolve MVC in a way that you're happy to come with us and you think that it's helping you and",
    "start": "1954040",
    "end": "1959980"
  },
  {
    "text": "we want to move features down in the platform this helps make MVC enas Pinet core and signal R and G RPC and all",
    "start": "1959980",
    "end": "1966580"
  },
  {
    "text": "these other things feel more consistent and capable no matter what feature set you're using in parallel with this we",
    "start": "1966580",
    "end": "1973690"
  },
  {
    "text": "want to continue to try and build up this sort of small code small concept small complexity scenario and we want to",
    "start": "1973690",
    "end": "1979720"
  },
  {
    "text": "add more options that give you direct control when you feel like you need it let's shift gears pretty dramatically",
    "start": "1979720",
    "end": "1985270"
  },
  {
    "start": "1983000",
    "end": "2040000"
  },
  {
    "text": "now and I want to talk to you about publishing I know it's a really exciting topic who here's show of hands who here",
    "start": "1985270",
    "end": "1993220"
  },
  {
    "text": "has got an application that they do a self-contained publish with that is not",
    "start": "1993220",
    "end": "1998740"
  },
  {
    "text": "that many people Wow okay I'm gonna assume that the rest of you just were too shy to put your hand up so I have",
    "start": "1998740",
    "end": "2005429"
  },
  {
    "text": "got some screenshots on this slide comparing a normal self-contained publish with a single file self-contained publish single file",
    "start": "2005429",
    "end": "2012330"
  },
  {
    "text": "self-contained publish is a thing that we added in is in Dona core 3 oh and it gives you the ability to sort of bundle",
    "start": "2012330",
    "end": "2018450"
  },
  {
    "text": "all the executable parts of your publish output into a single file so if you remember we started talking about",
    "start": "2018450",
    "end": "2024419"
  },
  {
    "text": "Donette core one oh it was really really exciting idea that we could have a version of.net core that you could just",
    "start": "2024419",
    "end": "2030059"
  },
  {
    "text": "you know drag and drop somewhere now we're talking about having a version of your application that includes dotnet",
    "start": "2030059",
    "end": "2035850"
  },
  {
    "text": "core that is just a single file that you can drag and drop somewhere right so",
    "start": "2035850",
    "end": "2041220"
  },
  {
    "start": "2040000",
    "end": "2096000"
  },
  {
    "text": "looking at this data in a little bit more detail single file today you get five files",
    "start": "2041220",
    "end": "2046950"
  },
  {
    "text": "most of them are config and you get one runnable file and for a normal publish you get a whopping 324 files they're",
    "start": "2046950",
    "end": "2055590"
  },
  {
    "text": "both around the same size they're both coming in just under 95 megabytes and the reason why it's 95 megabytes is",
    "start": "2055590",
    "end": "2061858"
  },
  {
    "text": "includes all of net it includes all of the dependencies that you need to run net including native code including xml",
    "start": "2061859",
    "end": "2068190"
  },
  {
    "text": "including crypto everything that's not part of the operating system for whatever platform you're running on is",
    "start": "2068190",
    "end": "2073618"
  },
  {
    "text": "is part of that publish output these results by the way are for release on",
    "start": "2073619",
    "end": "2078658"
  },
  {
    "text": "linux but it's not significantly different on other operating systems so we asked ourselves like well 95 Meg's is",
    "start": "2078659",
    "end": "2085908"
  },
  {
    "text": "kind of a lot can we make this better can we lean into this can we do a little bit more so we've done some",
    "start": "2085909",
    "end": "2092569"
  },
  {
    "text": "investigations into this and we we really looked at a bunch of different axes that sort of push the boundaries of",
    "start": "2092569",
    "end": "2098690"
  },
  {
    "text": "the dotnet tech so even if you're not a self-contained published person I hope you're gonna hear about some stuff in",
    "start": "2098690",
    "end": "2104720"
  },
  {
    "text": "this section that's gonna energize you and excite you because there's some other things that are happening here that are that are gonna be useful to you",
    "start": "2104720",
    "end": "2111170"
  },
  {
    "text": "no matter what kind of dotnet you're doing so our criteria for sort of looking into this is we don't want to",
    "start": "2111170",
    "end": "2116809"
  },
  {
    "text": "make any compromises on performance we feel like our performance for a espenak core is really strong already for",
    "start": "2116809",
    "end": "2123140"
  },
  {
    "text": "runtime throughput we don't want to give up any of that we do want to make startup performance better we feel like",
    "start": "2123140",
    "end": "2128599"
  },
  {
    "text": "that's not good enough and so a big part of this investigation was well what if we try to improve startup performance what if we threw everything at it what",
    "start": "2128599",
    "end": "2135020"
  },
  {
    "text": "could we do in addition to that we're willing to pay some additional costs for",
    "start": "2135020",
    "end": "2140030"
  },
  {
    "text": "publish time if it takes another ten or fifteen seconds when you publish that's not typically an operation that you're waiting for we think that 10 to 15",
    "start": "2140030",
    "end": "2146869"
  },
  {
    "text": "seconds of additional time if it's a published versus a build is acceptable that's a trade-off you'd be willing to",
    "start": "2146869",
    "end": "2152180"
  },
  {
    "text": "get to to live with if you're getting a lot out of it and lastly any sort of tools or workflow",
    "start": "2152180",
    "end": "2158210"
  },
  {
    "text": "changes or fundamental pivots we make to.net have to be something that everybody can leverage so all of these",
    "start": "2158210",
    "end": "2164690"
  },
  {
    "text": "changes have to be things that are within striking distance of every person in every app if you have to jump through",
    "start": "2164690",
    "end": "2170420"
  },
  {
    "text": "like a million flaming hoops to get to the point of being able to do do a",
    "start": "2170420",
    "end": "2175549"
  },
  {
    "text": "self-contained publish or do a small publish or leverage any of these new features not a solution if we can't take",
    "start": "2175549",
    "end": "2180710"
  },
  {
    "text": "you with us it's not worth doing you might be asking at this point why do why don't we just use mono we know that mono",
    "start": "2180710",
    "end": "2187760"
  },
  {
    "text": "can make some really small apps I will also work on blazer blazer is a mono app right now and it's it's about you know",
    "start": "2187760",
    "end": "2193460"
  },
  {
    "text": "under five Meg's or so we know that mono is optimized for that and kind of has",
    "start": "2193460",
    "end": "2198500"
  },
  {
    "text": "that that going on already and the answer is because this is about server we wanted it to be based on core CLR and",
    "start": "2198500",
    "end": "2204049"
  },
  {
    "text": "we didn't want to lose any of the nice performance we have or things that we have with core CLR we are using a lot of",
    "start": "2204049",
    "end": "2210260"
  },
  {
    "text": "the ideas from mono and we were using a lot of the toolchain so we're not ignoring that that exists and we're not throwing it away but we're",
    "start": "2210260",
    "end": "2217400"
  },
  {
    "text": "using core CLR as our starting point this led to a bunch of ideas all over net to try and make this better and I'm",
    "start": "2217400",
    "end": "2223940"
  },
  {
    "text": "going to talk through over the next couple of minutes what some of these things are and then I'll show you some data so the runtime team was able to",
    "start": "2223940",
    "end": "2230480"
  },
  {
    "start": "2228000",
    "end": "2302000"
  },
  {
    "text": "write a more advanced version of the single file host I know I've shared with you already in three oh you can do a",
    "start": "2230480",
    "end": "2235700"
  },
  {
    "text": "publish and you can get a single file host out of it that's got all the runtime all the native stuff in one one",
    "start": "2235700",
    "end": "2240980"
  },
  {
    "text": "package they've made a really advanced version of that as part of this prototype that has all your assemblies",
    "start": "2240980",
    "end": "2247580"
  },
  {
    "text": "and all your native components in it but it's designed in such a way that when it loads those assemblies it just puts them",
    "start": "2247580",
    "end": "2253610"
  },
  {
    "text": "in a memory Maps them into a location that the loader can understand and is able to load those assemblies with zero",
    "start": "2253610",
    "end": "2259010"
  },
  {
    "text": "copies so there's no like unzipping files to disk or copying things around in memory it's really really advanced",
    "start": "2259010",
    "end": "2264950"
  },
  {
    "text": "and it's probably about as optimized as something like this could get if we still wanted to retain assembly identity",
    "start": "2264950",
    "end": "2271730"
  },
  {
    "text": "we have done experiments in the past where we say let's just put all your assemblies in one big blob it doesn't go",
    "start": "2271730",
    "end": "2277760"
  },
  {
    "text": "well it breaks library code it breaks assumptions that library authors have it",
    "start": "2277760",
    "end": "2282890"
  },
  {
    "text": "creates some big problems so this is about as efficient as it can get for doing something like this the change is",
    "start": "2282890",
    "end": "2289010"
  },
  {
    "text": "relatively neutral on size and it decreases the startup time significantly because there's no extra copying happening so this gives us a single file",
    "start": "2289010",
    "end": "2296390"
  },
  {
    "text": "what kinds of things can we do to make it faster you can open the context menu",
    "start": "2296390",
    "end": "2301960"
  },
  {
    "text": "so to make things faster and I'm talking about startup performance so how do we get into your app we have a couple tools",
    "start": "2301960",
    "end": "2308900"
  },
  {
    "start": "2302000",
    "end": "2494000"
  },
  {
    "text": "one that we already have is called cross-gen if you haven't heard of cross-gen before that's okay you're",
    "start": "2308900",
    "end": "2314330"
  },
  {
    "text": "already betting benefiting from it because it's already on for you in most scenarios where you're running your code",
    "start": "2314330",
    "end": "2319390"
  },
  {
    "text": "cross-gen is something we use on and pretty much everything we ship that ships in the box with dotnet core and",
    "start": "2319390",
    "end": "2324530"
  },
  {
    "text": "what it does is it does a lot of the work that the JIT can do up front there are some limitations on things that",
    "start": "2324530",
    "end": "2329780"
  },
  {
    "text": "cross-gen can't do and there are some things that cross-gen does slightly less well that we avoid but generally you",
    "start": "2329780",
    "end": "2336020"
  },
  {
    "text": "should think of cross-gen does the JIT and the loaders work upfront as much as possible to try and make the initial run",
    "start": "2336020",
    "end": "2341780"
  },
  {
    "text": "of your managed code faster and what it does is it trades speed for size so you're getting a whole lot of startup",
    "start": "2341780",
    "end": "2347950"
  },
  {
    "text": "speed you're giving up a lot of size because things are getting bigger because in addition to the IL version of",
    "start": "2347950",
    "end": "2353710"
  },
  {
    "text": "your code you've got native versions of your code in the same DLL however since",
    "start": "2353710",
    "end": "2359289"
  },
  {
    "text": "we wanted to preserve startup we didn't want to I guess go backwards or regress in our startup performance cross-gen was",
    "start": "2359289",
    "end": "2365259"
  },
  {
    "text": "a must because we have that on today which hurts the size goal a little bit if you had a scenario where you really",
    "start": "2365259",
    "end": "2371140"
  },
  {
    "text": "cared about the size and you didn't care at all about the startup performance turning this off as an option you have you can strip this out and you'll get a",
    "start": "2371140",
    "end": "2377890"
  },
  {
    "text": "little bit smaller by a couple megabytes so a single file host here does a big does a big part of the heavy lifting to",
    "start": "2377890",
    "end": "2384190"
  },
  {
    "text": "try and make the performance better in this scenario and it's a it's basically an improvement over every other option",
    "start": "2384190",
    "end": "2390490"
  },
  {
    "text": "that we have for this in this case today at the managed layer we're peeling the",
    "start": "2390490",
    "end": "2395559"
  },
  {
    "text": "onion here we basically used a hello world kind of asp net rest api application and we're",
    "start": "2395559",
    "end": "2401559"
  },
  {
    "text": "trying to figure out what contributes to startup and the way that we approach that is like well let's profile and then",
    "start": "2401559",
    "end": "2407440"
  },
  {
    "text": "let's slice off the features that show up as being the most expensive and then let's profile and measure and let's",
    "start": "2407440",
    "end": "2412599"
  },
  {
    "text": "continue that exercise until we get to a set of recommendations about things that don't feel good or things that could be",
    "start": "2412599",
    "end": "2418900"
  },
  {
    "text": "removed the outcome of doing all this investigation is is actually genuinely",
    "start": "2418900",
    "end": "2424509"
  },
  {
    "text": "surprised me there's not a lot going on in the managed code that's slow from our point of view what is slow is just the",
    "start": "2424509",
    "end": "2431019"
  },
  {
    "text": "volume of code that has to run its startup when you consider something like NBC there's just a lot of stuff happening and the best path forward for",
    "start": "2431019",
    "end": "2437980"
  },
  {
    "text": "us we feel like rather than optimizing individual bits of code which has its place as well is well let's just try to",
    "start": "2437980",
    "end": "2444339"
  },
  {
    "text": "let's just try to run less of it so depending on the scenario are there features that you're paying for that you",
    "start": "2444339",
    "end": "2450489"
  },
  {
    "text": "don't need could we remove them things that come up here are like file Watchers for JSON config file watchers are",
    "start": "2450489",
    "end": "2456700"
  },
  {
    "text": "expensive reading JSON config is relatively expensive compared to the other things that are going on and start up setting",
    "start": "2456700",
    "end": "2463329"
  },
  {
    "text": "up logging the first time the way it's done is relatively expensive compared to the other things that start up comparing",
    "start": "2463329",
    "end": "2469509"
  },
  {
    "text": "the code sample we just saw with the kind of applications people build today MVC is very expensive compared to that",
    "start": "2469509",
    "end": "2475720"
  },
  {
    "text": "code sample so we're taking a hard look at what features feel like they need to be part of this path some of those features",
    "start": "2475720",
    "end": "2481750"
  },
  {
    "text": "need to go on a diet and some of those features need to be removed completely but we think that the path forward here",
    "start": "2481750",
    "end": "2487060"
  },
  {
    "text": "if we want to make startup time better for Aspen our core applications is really about trying to get more features",
    "start": "2487060",
    "end": "2492610"
  },
  {
    "text": "off the critical path next to improve size we turned on the linker so",
    "start": "2492610",
    "end": "2498550"
  },
  {
    "start": "2494000",
    "end": "2548000"
  },
  {
    "text": "hopefully some people have played with the linker and I know you have because I know I've talked to you some of you and I know some of you in the audience we're",
    "start": "2498550",
    "end": "2504400"
  },
  {
    "text": "at my Blaser workshop with Steve the last couple days so Blazer uses the linker mano uses the linker for xamarin",
    "start": "2504400",
    "end": "2511000"
  },
  {
    "text": "and we ship support for the linker in Donna core three oh so if you want to turn on a very very conservative form of",
    "start": "2511000",
    "end": "2518080"
  },
  {
    "text": "trimming as part of your publish in 3.0 you have that option the the form of",
    "start": "2518080",
    "end": "2523810"
  },
  {
    "text": "trimming that we ship in the box with the linker is basically it will look at the assemblies that are coming out of",
    "start": "2523810",
    "end": "2528940"
  },
  {
    "text": "your publish output and say if this assembly is not used at all let's just skip it which seems like a very safe and",
    "start": "2528940",
    "end": "2535540"
  },
  {
    "text": "conservative thing to do there are more aggressive and more radical things that you can do so it says here can remove",
    "start": "2535540",
    "end": "2542860"
  },
  {
    "text": "unused dotnet code and assemblies let's talk about why unused using quotes so if",
    "start": "2542860",
    "end": "2549850"
  },
  {
    "start": "2548000",
    "end": "2613000"
  },
  {
    "text": "you've ever heard the term tree shaking before I want to try and provide a definition for it what does tree shaking really mean the",
    "start": "2549850",
    "end": "2556810"
  },
  {
    "text": "rude the rude quick definition I would give you tree shaking means that you start at Maine and you do static",
    "start": "2556810",
    "end": "2562090"
  },
  {
    "text": "analysis to try to find every piece of donek code every method every type and every member that's used every type",
    "start": "2562090",
    "end": "2569230"
  },
  {
    "text": "that's constructed every member that's used you start at Maine and you go out where you go out from there using static",
    "start": "2569230",
    "end": "2575800"
  },
  {
    "text": "analysis until you run out of things to look at by the end you have a list of",
    "start": "2575800",
    "end": "2581740"
  },
  {
    "text": "things that you know are used everything else that you haven't seen is gone it just gets wiped that's the like most",
    "start": "2581740",
    "end": "2587950"
  },
  {
    "text": "aggressive form of trimming that we can do and that's generally what people mean when they sort of talk about tree",
    "start": "2587950",
    "end": "2593260"
  },
  {
    "text": "shaking so in this example the question to ask is not what's going to be removed",
    "start": "2593260",
    "end": "2600310"
  },
  {
    "text": "the question to ask is actually what's going to be kept right because that's how the algorithm works so Maine a B and",
    "start": "2600310",
    "end": "2607720"
  },
  {
    "text": "D need to be kept because we've seen use to them everything else which is C and D can be",
    "start": "2607720",
    "end": "2613130"
  },
  {
    "start": "2613000",
    "end": "2766000"
  },
  {
    "text": "removed so there are some challenges with this naturally running the linker on a large busy dotnet code codebase is",
    "start": "2613130",
    "end": "2621500"
  },
  {
    "text": "really hard and has a lot of sort of innate difficulties that we need to work through it turns out Donette libraries",
    "start": "2621500",
    "end": "2627259"
  },
  {
    "text": "and frameworks are very complex and not not in the not in the way that necessarily everybody's really smart but",
    "start": "2627259",
    "end": "2633230"
  },
  {
    "text": "like in a bad way when you think about the linker myself included we do a lot",
    "start": "2633230",
    "end": "2638299"
  },
  {
    "text": "of things that outsmart the linker and outsmart static analysis and if we want this to work if we want to have this",
    "start": "2638299",
    "end": "2644269"
  },
  {
    "text": "capability for dotnet we need to solve those kinds of things so what happens if you only call a method through",
    "start": "2644269",
    "end": "2649910"
  },
  {
    "text": "reflection well the linker tries to make some assumptions about things it tries to figure out what you're doing but like",
    "start": "2649910",
    "end": "2656779"
  },
  {
    "text": "really the right answer is if you're only calling a method through reflection too bad it's gone you're gonna get a",
    "start": "2656779",
    "end": "2662240"
  },
  {
    "text": "crash what about something like dependency injection which is in every asp net core application and is used in",
    "start": "2662240",
    "end": "2668299"
  },
  {
    "text": "a very key way by the framework well I'll tell you something all the Constructors are only called through",
    "start": "2668299",
    "end": "2674029"
  },
  {
    "text": "reflection and dynamic code generation so they're all gone what happens is like",
    "start": "2674029",
    "end": "2679250"
  },
  {
    "text": "this widget factory service in this example has no constructor so when the DI system tries to create it it will",
    "start": "2679250",
    "end": "2685220"
  },
  {
    "text": "just blow up and say I can't create I literally cannot create one of these so all the Constructors are gone what about",
    "start": "2685220",
    "end": "2691190"
  },
  {
    "text": "your controllers do you reference your controllers from other parts of your code does MVC know about your",
    "start": "2691190",
    "end": "2697369"
  },
  {
    "text": "controllers when you build no they're gone right so all of these very dynamic",
    "start": "2697369",
    "end": "2702859"
  },
  {
    "text": "features that are productive that we love they they sort of interfere with this right we need some smarts that",
    "start": "2702859",
    "end": "2709579"
  },
  {
    "text": "configure this kind of thing now the other problem that you run into here and there are lots more of these many of",
    "start": "2709579",
    "end": "2716089"
  },
  {
    "text": "these problems that I just talked about our occur in spades in asp net and in libraries that people use in the",
    "start": "2716089",
    "end": "2722390"
  },
  {
    "text": "community like your dir your validation or your auto mapper those kind of things rest sharp great library problem that's",
    "start": "2722390",
    "end": "2730069"
  },
  {
    "text": "a little bit more common in the BCL and core FX is something that they call a choke point API a choke point API is",
    "start": "2730069",
    "end": "2735619"
  },
  {
    "text": "when you have divergent code paths or implementations that are behind a",
    "start": "2735619",
    "end": "2741109"
  },
  {
    "text": "runtime check so in this example I'm reading an XML config or adjacent config",
    "start": "2741109",
    "end": "2746900"
  },
  {
    "text": "how do I know which one well I have to decide at runtime what is the link or see the linker sees both so you're Jason",
    "start": "2746900",
    "end": "2753500"
  },
  {
    "text": "can you're Jason serializer is probably a Meg your XML serializer if it's the dotnet one is like five so like you",
    "start": "2753500",
    "end": "2761510"
  },
  {
    "text": "really really only want one of these if you care about the size maybe you don't want either so let's look at some oh I",
    "start": "2761510",
    "end": "2769010"
  },
  {
    "start": "2766000",
    "end": "2840000"
  },
  {
    "text": "jumped a little too fast let's talk about what the solutions to those things might be the solutions to those things",
    "start": "2769010",
    "end": "2774170"
  },
  {
    "text": "might be it might be that we add smarts to the linker it might be that we say okay we're gonna teach the linker about",
    "start": "2774170",
    "end": "2780589"
  },
  {
    "text": "controllers we're gonna teach the linker about di we're gonna teach the linker to recognize all these things that it's a",
    "start": "2780589",
    "end": "2786349"
  },
  {
    "text": "problem immediately because it doesn't help you if you're writing a library it doesn't help people who maintain Auto mapper or",
    "start": "2786349",
    "end": "2792740"
  },
  {
    "text": "maintain rest sharp or any of these other great libraries that people use so we think that the solution here is",
    "start": "2792740",
    "end": "2798289"
  },
  {
    "text": "probably something to do with attributes and annotations and analyzers and a whole toolchain about making it possible",
    "start": "2798289",
    "end": "2804710"
  },
  {
    "text": "for people to understand when they're running when they're writing code that runs a list of breaking the link or a",
    "start": "2804710",
    "end": "2810680"
  },
  {
    "text": "breaking link ability it's a lot of work it's a complicated problem it's not as",
    "start": "2810680",
    "end": "2816170"
  },
  {
    "text": "simple as saying like well I know that this library doesn't work with the linker so oft it out because many times",
    "start": "2816170",
    "end": "2821539"
  },
  {
    "text": "these libraries are libraries that you combine with types from other assemblies so you can't just like block linking on",
    "start": "2821539",
    "end": "2828500"
  },
  {
    "text": "one assembly that's usually not going to be enough to solve the problem you either need to do it at the application level or you need to build an",
    "start": "2828500",
    "end": "2835069"
  },
  {
    "text": "understanding with the linker and tools to try and make it possible to do this safely so let's look at some perf",
    "start": "2835069",
    "end": "2842059"
  },
  {
    "start": "2840000",
    "end": "2956000"
  },
  {
    "text": "results these are the size results and hopefully this will help show you the a little bit of the impact in Wow why",
    "start": "2842059",
    "end": "2848210"
  },
  {
    "text": "we're excited about this so normal self-contained published 92 megabytes that's what you get today if you use the",
    "start": "2848210",
    "end": "2855140"
  },
  {
    "text": "linker and conservative mode which is something you can do today 74 megabytes that's something that's within reach for",
    "start": "2855140",
    "end": "2860720"
  },
  {
    "text": "you you can get there if you turn the linker up to aggressive mode which is",
    "start": "2860720",
    "end": "2866119"
  },
  {
    "text": "what I was just talking about and you have the single file host you can get down to 42 megabytes based on the current TAC",
    "start": "2866119",
    "end": "2872450"
  },
  {
    "text": "assuming we make no changes to dotnet so the work that I did to do to get here is",
    "start": "2872450",
    "end": "2877609"
  },
  {
    "text": "basically wrote extensibility for the linker that understand inna di and understands MVC's",
    "start": "2877609",
    "end": "2882690"
  },
  {
    "text": "controllers and things like that and that can get us down to 42 megabytes we can get down to about the 25 to 28",
    "start": "2882690",
    "end": "2889860"
  },
  {
    "text": "range by making a bunch of assumptions about work that we will do in the future so doing more prototyping coming up with",
    "start": "2889860",
    "end": "2896880"
  },
  {
    "text": "hard-coded lists of things to delete yes literally delete from the output and thinking hard about what those things",
    "start": "2896880",
    "end": "2902430"
  },
  {
    "text": "are we think that the best case for this based on the current tech is down around 25 to 28 Meg's depending on what",
    "start": "2902430",
    "end": "2910470"
  },
  {
    "text": "features you want to be part of that now the good news here is that which features you're using inside your app or",
    "start": "2910470",
    "end": "2916950"
  },
  {
    "text": "which code you write inside your application and the volume of code you write inside your application has a very",
    "start": "2916950",
    "end": "2922290"
  },
  {
    "text": "very small impact on these numbers the thing that the thing that really changes this dial is not like how much code did",
    "start": "2922290",
    "end": "2928500"
  },
  {
    "text": "you write the volume of your code is probably not going to make a big difference the thing that does make a big difference is what are your library",
    "start": "2928500",
    "end": "2934740"
  },
  {
    "text": "dependencies and what are your library dependencies within dotnet if you have one method that calls regex you need all",
    "start": "2934740",
    "end": "2940800"
  },
  {
    "text": "the regex stuff if you have one method that calls xml you need all the xml stuff so making a choice like using XML",
    "start": "2940800",
    "end": "2947130"
  },
  {
    "text": "for config versus an i and I file or something like that can have a really big impact on the size if you get down",
    "start": "2947130",
    "end": "2953100"
  },
  {
    "text": "to this 28 to 25 megabytes lovell and just to prove I'm not bluffing this is a",
    "start": "2953100",
    "end": "2958290"
  },
  {
    "start": "2956000",
    "end": "2985000"
  },
  {
    "text": "screenshot this is a 25 megabyte Linux executable single file that works",
    "start": "2958290",
    "end": "2965070"
  },
  {
    "text": "and runs and is a REST API using JSON serialization and some of the stuff that we talked about earlier so basically an",
    "start": "2965070",
    "end": "2970860"
  },
  {
    "text": "app that's really similar to the one we looked at in the last demo just to be very clear about this this is the best",
    "start": "2970860",
    "end": "2977040"
  },
  {
    "text": "case so this is with us making a lot of assumptions and hoping for the best and saying well we think we we think we",
    "start": "2977040",
    "end": "2983130"
  },
  {
    "text": "might be able to achieve this if we tried really hard I'm gonna speed up a little bit I'm almost out of time",
    "start": "2983130",
    "end": "2988590"
  },
  {
    "start": "2985000",
    "end": "3044000"
  },
  {
    "text": "so these are some perf results for startup top line they're what you get",
    "start": "2988590",
    "end": "2994590"
  },
  {
    "text": "today caveat we always include a single we always include a request as part of",
    "start": "2994590",
    "end": "3000110"
  },
  {
    "text": "measuring start up for asp net because otherwise it would be very easy for us to cheat by just being lazier and not",
    "start": "3000110",
    "end": "3006110"
  },
  {
    "text": "doing initialization while main is running so we always measure main and first request and then combine them",
    "start": "3006110",
    "end": "3011360"
  },
  {
    "text": "that's what you're seeing here so the black line the second one is the impact of the single-file host it's a",
    "start": "3011360",
    "end": "3018020"
  },
  {
    "text": "pure just downward shift 30 40 milliseconds of benefit it's no real trade-off for you the other line the the",
    "start": "3018020",
    "end": "3025190"
  },
  {
    "text": "sort of melon colored or coral colored line at 200 is removing MBC and removing",
    "start": "3025190",
    "end": "3032240"
  },
  {
    "text": "a bunch of Managed features that we're saying well maybe you don't need it in this scenario so there's about a hundred milliseconds of time to get back by",
    "start": "3032240",
    "end": "3039380"
  },
  {
    "text": "slimming down the amount of code that needs to run the amount of assemblies that need to get loaded and so on so the",
    "start": "3039380",
    "end": "3046820"
  },
  {
    "text": "best thing that you could do to help this is probably the most experimental thing we're talking about today love to hear from people what scenarios do you",
    "start": "3046820",
    "end": "3053750"
  },
  {
    "text": "have we're using self-contained publish what would smaller faster dotnet mean what would you use it for",
    "start": "3053750",
    "end": "3060470"
  },
  {
    "text": "what are your deployment environments what are your constraints those kind of things let's shift gears and we're going",
    "start": "3060470",
    "end": "3066770"
  },
  {
    "text": "to talk about blazer and electron so hopefully you're a little bit familiar with blazer but if you're not you're",
    "start": "3066770",
    "end": "3073400"
  },
  {
    "text": "gonna get a taste in just a second if you like what you see and you want to learn about blazer and go to a good general blazer talk my friend Steve",
    "start": "3073400",
    "end": "3079760"
  },
  {
    "text": "Sanderson is gonna be on today a little bit later in this room I encourage you to go to his talk and check it out we've",
    "start": "3079760",
    "end": "3085820"
  },
  {
    "text": "shipped blazer server as part of dotnet core 3 oh so that's new and we've officially announced blazer webassembly",
    "start": "3085820",
    "end": "3091370"
  },
  {
    "text": "support shipping May in 2020 beyond that what's on the horizon for blazer well we",
    "start": "3091370",
    "end": "3096800"
  },
  {
    "text": "have lots of ideas about improving tools we have lots of ideas about supporting more of what browsers give you and we",
    "start": "3096800",
    "end": "3102920"
  },
  {
    "text": "have lots of ideas about more language features and goodies for blazer however we're also very keen on adding more app",
    "start": "3102920",
    "end": "3108470"
  },
  {
    "text": "models more hosting models and more ways to run blazer I'm going to show you a little bit of a marriage what a marriage",
    "start": "3108470",
    "end": "3115070"
  },
  {
    "text": "might look like between blazer and electron and what are some of the things that that might give you and we've we've",
    "start": "3115070",
    "end": "3121550"
  },
  {
    "text": "shown some samples of electron and use before but we haven't really done a deep dive and we haven't really talked that",
    "start": "3121550",
    "end": "3126650"
  },
  {
    "text": "much about what the advantages of that are so let's jump right into that and just to be a little bit different because it's blazer and it's special",
    "start": "3126650",
    "end": "3132620"
  },
  {
    "start": "3131000",
    "end": "3157000"
  },
  {
    "text": "we're gonna do the demo first this time so let me get my",
    "start": "3132620",
    "end": "3139640"
  },
  {
    "text": "Glaser solution here now I like to call this B electron and everyone else seems to seems to pronounce it blech Tron and",
    "start": "3139640",
    "end": "3146630"
  },
  {
    "text": "it kind of hurts me but I guess make up make up your own mind what you think is right your interpretation is as valid as",
    "start": "3146630",
    "end": "3153319"
  },
  {
    "text": "mine so I'll go ahead and get this fired up this is building ok so I've got my",
    "start": "3153319",
    "end": "3159829"
  },
  {
    "start": "3157000",
    "end": "3224000"
  },
  {
    "text": "app and this is just a blazer template app that I have electron eyes I have put",
    "start": "3159829",
    "end": "3165019"
  },
  {
    "text": "this inside of an electron shell if you're not familiar with electron electron is the desktop application that",
    "start": "3165019",
    "end": "3171319"
  },
  {
    "text": "powers things like vs code and a bunch of other stuff it is chromium and node",
    "start": "3171319",
    "end": "3176479"
  },
  {
    "text": "in a desktop application shell it is cross-platform it works on every operating system you'd care about for",
    "start": "3176479",
    "end": "3181489"
  },
  {
    "text": "desktops and it has a rich ecosystem with a bunch of features like crash reporting auto updates installers",
    "start": "3181489",
    "end": "3187819"
  },
  {
    "text": "publishing and so on and I have taken my blazer app and I have put it inside this electron shell and you can see it's",
    "start": "3187819",
    "end": "3193700"
  },
  {
    "text": "giving me this sort of single page application kind of feel and activity and I'm got in the background here the",
    "start": "3193700",
    "end": "3200119"
  },
  {
    "text": "code for what's on the screen right now I've got a dotnet event handler hooked up to an HTML button and when I click",
    "start": "3200119",
    "end": "3207289"
  },
  {
    "text": "that button you can see my dotnet event handler code is running is incrementing",
    "start": "3207289",
    "end": "3212989"
  },
  {
    "text": "that count and blazer is updating that markup electron all of the UI that",
    "start": "3212989",
    "end": "3218150"
  },
  {
    "text": "you're seeing here is HTML because it's chromium so it's the HTML web stack of technologies in the browser powering the",
    "start": "3218150",
    "end": "3224449"
  },
  {
    "start": "3224000",
    "end": "3344000"
  },
  {
    "text": "UI so I had a conversation with my boss this morning and he said that he's very",
    "start": "3224449",
    "end": "3230119"
  },
  {
    "text": "concerned about our overuse of this counter button all of these counter increments are very precious resources",
    "start": "3230119",
    "end": "3236660"
  },
  {
    "text": "we pay we pay by the click and his boss his Ross is a real tightwad I'm here and",
    "start": "3236660",
    "end": "3243079"
  },
  {
    "text": "so he wants to know is there any way we could reduce our usage of the counter so I thought I would gently nag people to",
    "start": "3243079",
    "end": "3251059"
  },
  {
    "text": "avoid using so much counter and the way that I want to do that is I want to show",
    "start": "3251059",
    "end": "3256430"
  },
  {
    "text": "an operating system notification if you have exceeded your quota for the count so I'm going to get the notification",
    "start": "3256430",
    "end": "3262279"
  },
  {
    "text": "service from di this is something that I've added from the prototype so don't assume that this exists today I'll get the notification service and I",
    "start": "3262279",
    "end": "3270229"
  },
  {
    "text": "want to say if your current count is greater than or equal to ten then I",
    "start": "3270229",
    "end": "3277850"
  },
  {
    "text": "want to show you a notification and I can use this notification service and you can see I have this this show async",
    "start": "3277850",
    "end": "3284600"
  },
  {
    "text": "method here and I can give it a notification options or I can give it a title and body in the interest of time I",
    "start": "3284600",
    "end": "3290600"
  },
  {
    "text": "have one that I have written already here so you don't have to watch me struggle the type so I'm gonna show you",
    "start": "3290600",
    "end": "3295910"
  },
  {
    "text": "a rude notification and kind of tell you off if you exceed your counts I don't",
    "start": "3295910",
    "end": "3301040"
  },
  {
    "text": "know why that's not building oh because I need to make this async let's do that",
    "start": "3301040",
    "end": "3307190"
  },
  {
    "text": "real quick get this going and watch the",
    "start": "3307190",
    "end": "3312860"
  },
  {
    "text": "bottom-right corner of the screen so I'm gonna click get to nine the next one",
    "start": "3312860",
    "end": "3320710"
  },
  {
    "text": "didn't happen okay great well that's",
    "start": "3320710",
    "end": "3326060"
  },
  {
    "text": "that's ahh because focus assist is on that's great let's turn off focus assist",
    "start": "3326060",
    "end": "3331910"
  },
  {
    "text": "now there it is so again my notification yeah thirteen is really too many I",
    "start": "3331910",
    "end": "3337070"
  },
  {
    "text": "should probably stop let's do something else so so notification is interaction with the operating system easy to do",
    "start": "3337070",
    "end": "3342590"
  },
  {
    "text": "when you're inside of a desktop application what else can we do so I have this fetch data page that's loading",
    "start": "3342590",
    "end": "3347780"
  },
  {
    "start": "3344000",
    "end": "3549000"
  },
  {
    "text": "this weather report and sort of pulling it from the internet and showing it to you in this nice little UI now I heard",
    "start": "3347780",
    "end": "3353810"
  },
  {
    "text": "from my boss that he doesn't really like using this application he doesn't really like this UI you know I think I've done",
    "start": "3353810",
    "end": "3359720"
  },
  {
    "text": "a good job on it but he really prefers Excel and his needs are very important so it'd be great if we could get this",
    "start": "3359720",
    "end": "3367070"
  },
  {
    "text": "data somehow into Excel if you've been to blazer talks before you've probably seen us do some Excel Interop here so I",
    "start": "3367070",
    "end": "3375410"
  },
  {
    "text": "can do that I'm gonna copy one of our previous demos and I'm going to give it its own little twist so we're gonna",
    "start": "3375410",
    "end": "3381050"
  },
  {
    "text": "export this data from Excel or from from the elektron window into Excel and I'm",
    "start": "3381050",
    "end": "3387200"
  },
  {
    "text": "just going to define this little export function and I'm gonna totally put it in the wrong place and stuff up my demo just a sec so I'm gonna define this",
    "start": "3387200",
    "end": "3394160"
  },
  {
    "text": "export function I am using a library here called EP plus I don't feel like",
    "start": "3394160",
    "end": "3399380"
  },
  {
    "text": "this code is too hard to understand but basically creating an excel package adding a worksheet and then it's got",
    "start": "3399380",
    "end": "3404780"
  },
  {
    "text": "this nice little function where you give it some that type and it will just automatically create columns and rows from that collection pretty cool pretty convenient",
    "start": "3404780",
    "end": "3411550"
  },
  {
    "text": "so if I wanted to because it's a blazer application I could add an HTML button",
    "start": "3411550",
    "end": "3417620"
  },
  {
    "text": "here and I could say @ on click and I could have an export button but that's not very snazzy that doesn't really show",
    "start": "3417620",
    "end": "3424250"
  },
  {
    "text": "off the power of the electron if I have to add a button to do that what if I could add a native context menu to do",
    "start": "3424250",
    "end": "3430550"
  },
  {
    "text": "that so that is what I'm going to do so I can get from the cascading parameter system a parameter that I have defined",
    "start": "3430550",
    "end": "3438440"
  },
  {
    "text": "if you have not seen cascading parameters before do not let it throw you this is just basically a way of",
    "start": "3438440",
    "end": "3444950"
  },
  {
    "text": "saying this is a value that is passed down through my UI tree kind of like a",
    "start": "3444950",
    "end": "3450200"
  },
  {
    "text": "context in react if you're at all familiar with that if you're not I apologize but just pretend that I get an",
    "start": "3450200",
    "end": "3456050"
  },
  {
    "text": "access to the menu somehow and I can do something and the reason why it's a cascading parameter and not a DI service",
    "start": "3456050",
    "end": "3461330"
  },
  {
    "text": "is well I've hooked it up to the routing system so I can add context menus per page and then they sort of show when",
    "start": "3461330",
    "end": "3468080"
  },
  {
    "text": "they're on that page and then they go away when you're not on that page so I can scope this functionality to a given page let's go ahead and define a menu so",
    "start": "3468080",
    "end": "3476660"
  },
  {
    "text": "for my menu I have this set context menu method and I will pass a new menu item",
    "start": "3476660",
    "end": "3482900"
  },
  {
    "text": "and I'm gonna set the label of this to be export to excel and I'm gonna set my",
    "start": "3482900",
    "end": "3492530"
  },
  {
    "text": "click action on this menu to call my export function now the thing that's",
    "start": "3492530",
    "end": "3497630"
  },
  {
    "text": "missing here is that we haven't really done anything with this we're just creating the worksheet we're not putting",
    "start": "3497630",
    "end": "3503900"
  },
  {
    "text": "it anywhere but because I'm inside electron and I'm inside of a desktop application well I could just save it to",
    "start": "3503900",
    "end": "3509390"
  },
  {
    "text": "the temp directory and I can just open Excel I can do all those things I don't have to prompt to you for a file",
    "start": "3509390",
    "end": "3514460"
  },
  {
    "text": "download which is how this this demo would normally go I can just do it directly because I'm on the desktop",
    "start": "3514460",
    "end": "3520940"
  },
  {
    "text": "machine so let me grab that snippet real quick and let's give this a try yes that",
    "start": "3520940",
    "end": "3531260"
  },
  {
    "text": "is menu also the loading loading so you see",
    "start": "3531260",
    "end": "3536650"
  },
  {
    "text": "if I come to my counter page I can hit that context menu and it's empty but if I come to my fetch data page I can hit",
    "start": "3536650",
    "end": "3542230"
  },
  {
    "text": "that context menu and I have this nice native looking context menu here that says export to excel let's let's hope",
    "start": "3542230",
    "end": "3548110"
  },
  {
    "text": "there works though so there it is in Excel inside the blazer process I'm able",
    "start": "3548110",
    "end": "3553900"
  },
  {
    "start": "3549000",
    "end": "3600000"
  },
  {
    "text": "to create this worksheet I'm able to save it to disk and I'm able to open it and the reason why that works is that",
    "start": "3553900",
    "end": "3559420"
  },
  {
    "text": "I'm inside of a normal net core process so all the things that you could do in a normal net core process with B electron",
    "start": "3559420",
    "end": "3565240"
  },
  {
    "text": "you can just do skip over that so how this works",
    "start": "3565240",
    "end": "3570460"
  },
  {
    "text": "we run your blazer app in Adana core process which is similar to how blazer server works we use the electron net",
    "start": "3570460",
    "end": "3577270"
  },
  {
    "text": "library to control electron so we're using a third-party library that someone",
    "start": "3577270",
    "end": "3582460"
  },
  {
    "text": "else has created that's on the internet there's a link there if you want to check it out we're using that to boot electron and manage a lot of the",
    "start": "3582460",
    "end": "3587680"
  },
  {
    "text": "communication with it inside the electron renderer process we have a custom build of Blazers JavaScript",
    "start": "3587680",
    "end": "3593050"
  },
  {
    "text": "support code and we have a custom renderer inside of our dotnet process that's managing the communication",
    "start": "3593050",
    "end": "3599110"
  },
  {
    "text": "between those two so you have a dotnet process that's remote controlling basically a chrome process to give you",
    "start": "3599110",
    "end": "3604900"
  },
  {
    "text": "an HTML UI the fact that it's a Donette process means that well you've got that familiar dotnet programming environment",
    "start": "3604900",
    "end": "3611380"
  },
  {
    "text": "as well of are all of our existing tools and diagnostic capabilities that you have for dotnet so what might this look",
    "start": "3611380",
    "end": "3618340"
  },
  {
    "text": "like in the future if we chose to invest in this well we would need to build a bunch of blazer e ways to do electron",
    "start": "3618340",
    "end": "3624850"
  },
  {
    "text": "I'm a be showed you a couple in the in the demo here I had a notice at a notification service I had a I had a",
    "start": "3624850",
    "end": "3632140"
  },
  {
    "text": "menu manager kind of thing it would probably come with us building a bunch of blazer capabilities for electron",
    "start": "3632140",
    "end": "3638290"
  },
  {
    "text": "features that we don't have we need to take a look at the electron API surface which is extensive and figure out what",
    "start": "3638290",
    "end": "3644920"
  },
  {
    "text": "of those things you need to be successful in blazer as well as a bunch more Docs and recipes in addition the",
    "start": "3644920",
    "end": "3651430"
  },
  {
    "text": "fact that we'd be doing something like electron means that we would need a new tool chain we need Donna build button",
    "start": "3651430",
    "end": "3657280"
  },
  {
    "text": "Donna build support to build the electron application Donna published support to publish it as well as templates and probably integrations for",
    "start": "3657280",
    "end": "3663640"
  },
  {
    "text": "you with their crash report and they're updating service so with",
    "start": "3663640",
    "end": "3669049"
  },
  {
    "text": "that I'm at time and I'm out of stuff to say so thanks for coming you can find",
    "start": "3669049",
    "end": "3674210"
  },
  {
    "text": "these materials online a little bit later today and I hope you enjoy the rest of the conference",
    "start": "3674210",
    "end": "3679930"
  }
]