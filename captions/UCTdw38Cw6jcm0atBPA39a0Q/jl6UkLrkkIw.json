[
  {
    "text": "my name is mark good nur I'm here today to talk to you about c++ in containers I'm a program manager on the C++ team at",
    "start": "299",
    "end": "7980"
  },
  {
    "text": "Microsoft our team works on the support for C++ in both visual studio and Visual",
    "start": "7980",
    "end": "13380"
  },
  {
    "text": "Studio code so I work across both of those those products are C++ extension and Visual Studio our team is also",
    "start": "13380",
    "end": "21779"
  },
  {
    "text": "responsible for the Microsoft C++ compiler I don't really have anything to say about that today this talk is about",
    "start": "21779",
    "end": "27689"
  },
  {
    "text": "containers I'm not really showing windows containers windows containers are thing but I'm not really talking about them much today and that's not",
    "start": "27689",
    "end": "35160"
  },
  {
    "text": "really my space on the C++ team at Microsoft I spend more of my time on IOT",
    "start": "35160",
    "end": "42300"
  },
  {
    "text": "sort of stuff I've worked on our Linux support and Visual Studio and things like that I also work on an IOT project",
    "start": "42300",
    "end": "48420"
  },
  {
    "text": "at Microsoft called address fear which is they secure an attempt to bring security into the IOT space but that's",
    "start": "48420",
    "end": "55559"
  },
  {
    "text": "this talks not about that either so containers if you're here to see a talk about containers and C++ I presume",
    "start": "55559",
    "end": "62699"
  },
  {
    "text": "you probably have some baseline level of what a container is but we can go ahead and do a little bit of level setting",
    "start": "62699",
    "end": "68189"
  },
  {
    "text": "here so containers are very popular these days because they're more efficient than a VM they have a lot of",
    "start": "68189",
    "end": "75060"
  },
  {
    "text": "characteristics like a VM and that they're self-contained but they're not abstracted away from the host machine",
    "start": "75060",
    "end": "80430"
  },
  {
    "text": "via something like a hypervisor a virtual machine thinks it is on a machine a container knows that it's",
    "start": "80430",
    "end": "87479"
  },
  {
    "text": "right well container runs on a container engine that provides a runtime environment for the containers but it",
    "start": "87479",
    "end": "93840"
  },
  {
    "text": "actually does share resources with the host operating system such as the kernel but they do have some great",
    "start": "93840",
    "end": "98909"
  },
  {
    "text": "characteristics as opposed to virtual machines in terms of things like that they have lower disk cost so they're a",
    "start": "98909",
    "end": "104790"
  },
  {
    "text": "lot more efficient they also self-contained dependencies so containers the application in the",
    "start": "104790",
    "end": "111570"
  },
  {
    "text": "dependencies are actually isolated from the host environment and this is all",
    "start": "111570",
    "end": "116939"
  },
  {
    "text": "described in a simple text file docker file which makes it really great to be able to run these anywhere now I",
    "start": "116939",
    "end": "123299"
  },
  {
    "text": "mentioned docker file docker is very heavily associated with containers but docker is just another runtime for",
    "start": "123299",
    "end": "129119"
  },
  {
    "text": "containers there's other runtimes out there so that's where docker kind of comes into",
    "start": "129119",
    "end": "134790"
  },
  {
    "text": "this picture and then there's isolation the containers themselves are isolated",
    "start": "134790",
    "end": "139980"
  },
  {
    "text": "from the host so they don't have direct access to the hosts resources so you can't break out from a container and",
    "start": "139980",
    "end": "145890"
  },
  {
    "text": "manipulate the host environment for example and the containers themselves are actually isolated from each other",
    "start": "145890",
    "end": "151260"
  },
  {
    "text": "you have to expose services from a container so that another container can call it or anything else can call it but",
    "start": "151260",
    "end": "157620"
  },
  {
    "text": "what does this have to do with C++ why C++ in containers I was talking with",
    "start": "157620",
    "end": "162870"
  },
  {
    "text": "some other folks and I guess I've been looking at containers for a while just kind of from the perspective of well I",
    "start": "162870",
    "end": "168120"
  },
  {
    "text": "work at Microsoft I work on the C++ team we have a cloud containers are one way",
    "start": "168120",
    "end": "173490"
  },
  {
    "text": "that you can drive compute on a cloud so it's interesting and C++ has a lot of",
    "start": "173490",
    "end": "178800"
  },
  {
    "text": "stuff to do with compute so why aren't people talking about running C++ in containers what are people doing instead",
    "start": "178800",
    "end": "185070"
  },
  {
    "text": "and a lot of people are talking about rust and golang and these sort of things but why'd are they talking about those",
    "start": "185070",
    "end": "190920"
  },
  {
    "text": "sort of things they're talking about those sort of things because they have characteristics like size that they can be very optimized from a size",
    "start": "190920",
    "end": "197160"
  },
  {
    "text": "perspective from a binary perspective well C++ can give you this too right you",
    "start": "197160",
    "end": "202320"
  },
  {
    "text": "can get very optimized binaries with C++ from performance perspective those languages have similar characteristics",
    "start": "202320",
    "end": "208739"
  },
  {
    "text": "to C++ in terms of performance but why can't you just use C++ in this environment then and then finally scale",
    "start": "208739",
    "end": "215959"
  },
  {
    "text": "so if C++ is so great for performance and containers are really great for",
    "start": "215959",
    "end": "221640"
  },
  {
    "text": "running in a cloud environment and being able to scale them up you know as long as you've got a good credit card why",
    "start": "221640",
    "end": "228510"
  },
  {
    "text": "aren't people talking about using C++ within this context you know what can we do what are people talking about with",
    "start": "228510",
    "end": "234450"
  },
  {
    "text": "C++ in containers instead well build containers build containers are",
    "start": "234450",
    "end": "240480"
  },
  {
    "text": "something that you definitely see happening in the C++ community because what C++ developer would not want a",
    "start": "240480",
    "end": "246840"
  },
  {
    "text": "single text file that you can check into your repository that describes a reproducible build environment all you",
    "start": "246840",
    "end": "252870"
  },
  {
    "text": "have to do is check that docker file into github and anybody on your team can clone it down and have this in the exact",
    "start": "252870",
    "end": "259590"
  },
  {
    "text": "same container image running locally and the same build environment which is pretty great and then you can also use",
    "start": "259590",
    "end": "264630"
  },
  {
    "text": "that in your CI CD system of course and this is clean from the host machine so it doesn't matter what the other",
    "start": "264630",
    "end": "269830"
  },
  {
    "text": "people on your team have installed from a perspective of libraries or from a perspective of compilers and those sort",
    "start": "269830",
    "end": "276370"
  },
  {
    "text": "of things because the docker file actually describes the environment that the container actually is right so it's",
    "start": "276370",
    "end": "282970"
  },
  {
    "text": "it's going to be the same and that even actually works cross-platform I happen to be using Windows for my host machine",
    "start": "282970",
    "end": "288520"
  },
  {
    "text": "here but somebody else could be doing the same thing on Linux or Mac right so that's pretty great so we will take a",
    "start": "288520",
    "end": "295570"
  },
  {
    "text": "quick look here at a build container and so let's see so just gonna fire up PS",
    "start": "295570",
    "end": "303850"
  },
  {
    "text": "code this is just a simple little hello world app it's just gonna print out",
    "start": "303850",
    "end": "309190"
  },
  {
    "text": "hello no big deal but in vs code I have a docker extension installed and this",
    "start": "309190",
    "end": "315130"
  },
  {
    "text": "docker extension actually has the capability to add docker files to your work plate workspace is a quick way to",
    "start": "315130",
    "end": "320320"
  },
  {
    "text": "get started and we've actually got one for C++ there so this is just gonna this",
    "start": "320320",
    "end": "325450"
  },
  {
    "text": "is an example of what a docker file looks like and so there's any people here are using",
    "start": "325450",
    "end": "330490"
  },
  {
    "text": "docker today okay so most of you so this is probably a repeat for most of you so this is a simple docker file at the top",
    "start": "330490",
    "end": "338170"
  },
  {
    "text": "there it says from GCC latest and GCC what that means is it's going to pull down a image GCC as the base image for",
    "start": "338170",
    "end": "347140"
  },
  {
    "text": "the container that image is going to come from docker hub which is a container registry it's an open and",
    "start": "347140",
    "end": "352780"
  },
  {
    "text": "public container registry the docker maintains it's very common this is what you'll see in most tutorials but there",
    "start": "352780",
    "end": "358510"
  },
  {
    "text": "are other container registries that are run by different cloud vendors or other people you can run a private container",
    "start": "358510",
    "end": "363670"
  },
  {
    "text": "registry so there's it's just a very common one to use but this particular docker image is maintained by GCC",
    "start": "363670",
    "end": "370480"
  },
  {
    "text": "themselves which is pretty great if you want to actually be able to try out specific versions of GCC then you can",
    "start": "370480",
    "end": "376990"
  },
  {
    "text": "get them directly from the source right or you can track latest without having to worry about building GCC from source",
    "start": "376990",
    "end": "383490"
  },
  {
    "text": "so the next thing that happens here is it's going to copy in my directory that's what the copy dot means it's",
    "start": "383490",
    "end": "389470"
  },
  {
    "text": "going to copy and everything in my directory into the container at that location of user source my app and then",
    "start": "389470",
    "end": "395650"
  },
  {
    "text": "the one thing it's not going to bring in and this is important is anything that's in this ignore so you can specify files that you",
    "start": "395650",
    "end": "402330"
  },
  {
    "text": "don't want to pull into the container image may be things like locally built",
    "start": "402330",
    "end": "407820"
  },
  {
    "text": "binaries or objects you don't want in there because you want it produced in the container and so here it's setting",
    "start": "407820",
    "end": "413010"
  },
  {
    "text": "in a working directory it's just gonna run GCC directly on this because this is like kind of a little toy example of how",
    "start": "413010",
    "end": "418620"
  },
  {
    "text": "to do this and then it's just going to run the application and so in order to",
    "start": "418620",
    "end": "423630"
  },
  {
    "text": "do this we'll just say docker build dash T says give the label to my target now",
    "start": "423630",
    "end": "435450"
  },
  {
    "text": "wait I'm just going to do this right",
    "start": "435450",
    "end": "441150"
  },
  {
    "text": "quick because I'm forgetting my name and so I want to do dr. bill basic demo up",
    "start": "441150",
    "end": "452599"
  },
  {
    "text": "in DC and then the dot just means in this directory so it's gonna pick up the",
    "start": "453260",
    "end": "458460"
  },
  {
    "text": "docker file from this directory and of course I type it yeah awesome nothing",
    "start": "458460",
    "end": "467160"
  },
  {
    "text": "like too much talk too much coffee before this right you said - oh yeah yes",
    "start": "467160",
    "end": "474470"
  },
  {
    "text": "and so that ran very fast because I've already built this image before which is",
    "start": "476090",
    "end": "481170"
  },
  {
    "text": "why I was looking at that to make sure that I was using the same name because otherwise it would run through all the compilation steps again and so if we",
    "start": "481170",
    "end": "488160"
  },
  {
    "text": "take another quick look at that docker image LS and I can say GCC you can see",
    "start": "488160",
    "end": "493860"
  },
  {
    "text": "that the GCC image is about a gigabyte in terms of what it pulls down but these steps here are important because the",
    "start": "493860",
    "end": "500460"
  },
  {
    "text": "docker file actually has a strategy in terms of how it builds up the local image that's very optimized so that if",
    "start": "500460",
    "end": "506820"
  },
  {
    "text": "you change things in your docker file you can invalidate the previous layers when you're building but so there we go",
    "start": "506820",
    "end": "513479"
  },
  {
    "text": "and so if we want to run this we say docker run",
    "start": "513479",
    "end": "517639"
  },
  {
    "text": "and it just says hello so that's great so it ran now the other thing we can do in terms of you know is a build system",
    "start": "525420",
    "end": "531360"
  },
  {
    "text": "you want to get your binaries out of there right and so you can say docker copy oh wait first we need to see our",
    "start": "531360",
    "end": "536880"
  },
  {
    "text": "container which isn't there because right now that container is not running",
    "start": "536880",
    "end": "541890"
  },
  {
    "text": "it ran and exited so it's not still running and so when you say - hey you can get all of your containers over there",
    "start": "541890",
    "end": "547050"
  },
  {
    "text": "it gives funny little random names to your containers and then we can say Dockers and copy give my container name",
    "start": "547050",
    "end": "554340"
  },
  {
    "text": "and then I can say they shall pop that",
    "start": "554340",
    "end": "563490"
  },
  {
    "text": "up a little bit higher on the screen oh I see what I did so now you can see that",
    "start": "563490",
    "end": "570210"
  },
  {
    "text": "over here in my directory the my app showed up but this isn't going to run in PowerShell because that's a linux image",
    "start": "570210",
    "end": "576510"
  },
  {
    "text": "because I'm using a Linux image for the container so I can quickly switch over to WSL and fire up a new shell here and",
    "start": "576510",
    "end": "585060"
  },
  {
    "text": "now I've got a Linux environment on Windows where I can actually run my app and I've still got so now that that",
    "start": "585060",
    "end": "591900"
  },
  {
    "text": "application was able to be ported copied out of the docker image and run in another Linux environment and now I'm",
    "start": "591900",
    "end": "597810"
  },
  {
    "text": "going to set my default back to PowerShell because I need it for the rest of my demos so that's kind of a",
    "start": "597810",
    "end": "603600"
  },
  {
    "text": "quick demo just kind of you know what a basic you know just getting started what does the docker file look like you know",
    "start": "603600",
    "end": "609810"
  },
  {
    "text": "and what does it build in there look like in this case we're running GCC directly but you could run make you could run a script you could run CMake",
    "start": "609810",
    "end": "616080"
  },
  {
    "text": "or anything else you need and the next example will be a bit more involved than that and so you know that's pretty great",
    "start": "616080",
    "end": "625560"
  },
  {
    "text": "because now I've got something that runs on my machine and so with docker now I can run on your machine too so this is",
    "start": "625560",
    "end": "632730"
  },
  {
    "text": "just a little meme I found online it's pretty great but I mean this is really kind of what Dockers about because it's",
    "start": "632730",
    "end": "638130"
  },
  {
    "text": "self packaging everything together so that it's all together and you don't have to bootstrap every single time but",
    "start": "638130",
    "end": "645840"
  },
  {
    "text": "so if we want to talk a little bit more about like you know what does this look like in a more real-world application we",
    "start": "645840",
    "end": "651330"
  },
  {
    "text": "can start talking a little bit about micro services and what this sort of stuff looks like and so in a micro",
    "start": "651330",
    "end": "656640"
  },
  {
    "text": "service you want to start with you want to kind of break things down into the smallest units of logical work so that ever so",
    "start": "656640",
    "end": "662790"
  },
  {
    "text": "the system can be distributed and one of the things that that gives you is resiliency so that one now you have to",
    "start": "662790",
    "end": "668130"
  },
  {
    "text": "design your system this way of course but when you design your system this way if one part of the system goes down it",
    "start": "668130",
    "end": "673290"
  },
  {
    "text": "doesn't bring down everything else because it's not monolithic and one of the other cool things when you're using containers is you can have different",
    "start": "673290",
    "end": "679560"
  },
  {
    "text": "host environments so you can have maybe different base Linux images and you can also have different dependencies so you",
    "start": "679560",
    "end": "685980"
  },
  {
    "text": "can use incompatible libraries for example in different containers and so that gives you a lot of flexibility in",
    "start": "685980",
    "end": "692250"
  },
  {
    "text": "terms of what you can actually use and then finally you can start doing things",
    "start": "692250",
    "end": "697800"
  },
  {
    "text": "like scaling up units independently as you need to because if one container is getting hit because that service has",
    "start": "697800",
    "end": "702990"
  },
  {
    "text": "higher compute resource needs then you can scale that container up independent of the others to kind of optimize what",
    "start": "702990",
    "end": "710100"
  },
  {
    "text": "you need to do and then this one I think is really interesting for C++ you can start externalizing concerns to where",
    "start": "710100",
    "end": "716579"
  },
  {
    "text": "they're best handled like picking an HTTP library maybe but what this means",
    "start": "716579",
    "end": "722880"
  },
  {
    "text": "is more practically is for things like HTTP you can use something like a proxy",
    "start": "722880",
    "end": "728010"
  },
  {
    "text": "server like Ingenix they can actually handle protocol transitions so that it can be set up and configured for HTTP",
    "start": "728010",
    "end": "734760"
  },
  {
    "text": "with all of your certificates and everything that's actually managed by your IT staff and the deployments but",
    "start": "734760",
    "end": "740370"
  },
  {
    "text": "then it can actually bridge back to http to run in the local container network that's not exposed externally and then",
    "start": "740370",
    "end": "746100"
  },
  {
    "text": "you don't have to actually configure all of the HTTP stuff you know from a perspective of what you're having to do in the applications that you're exposing",
    "start": "746100",
    "end": "752220"
  },
  {
    "text": "the services with so that's pretty great and then finally there's this thing",
    "start": "752220",
    "end": "757500"
  },
  {
    "text": "called multistage builds that's really great because it used to be that you had to have different docker files for",
    "start": "757500",
    "end": "763199"
  },
  {
    "text": "different containers and so in order to specify a runtime container that might be different than your build container",
    "start": "763199",
    "end": "768839"
  },
  {
    "text": "you would have to actually set up two different docker files maybe scripts to manage this but now you can actually in",
    "start": "768839",
    "end": "774420"
  },
  {
    "text": "one file specify all of the stages of your build container and then use those resources and copy them into an output",
    "start": "774420",
    "end": "781800"
  },
  {
    "text": "another container that's actually your runtime and I'll show that in just a second and so if we want to start",
    "start": "781800",
    "end": "788970"
  },
  {
    "text": "talking about like what sort of application could we look at to look at these concepts I've got this",
    "start": "788970",
    "end": "795090"
  },
  {
    "text": "application that will find a face in AC and it's exposed in a C++ web service and so basically what we're gonna do is",
    "start": "795090",
    "end": "802200"
  },
  {
    "text": "set up a proxy server that will expose our services to the X out side so that",
    "start": "802200",
    "end": "807480"
  },
  {
    "text": "the requests can come in from outside of the container Network and then it can proxy those requests back into our",
    "start": "807480",
    "end": "813720"
  },
  {
    "text": "node.js web app and this web app then can call our C++ service that's using",
    "start": "813720",
    "end": "819690"
  },
  {
    "text": "OpenCV to find a face in a picture that's submitted to it and circle that face and so a user can come in they can",
    "start": "819690",
    "end": "826470"
  },
  {
    "text": "give their picture and it'll go to the C++ sir OpenCV service and then the user can come back and request to get that",
    "start": "826470",
    "end": "833550"
  },
  {
    "text": "image back from the service and the service will return an image with the faces circled and so let's take a look",
    "start": "833550",
    "end": "842820"
  },
  {
    "text": "at that so open vs code again oops oh",
    "start": "842820",
    "end": "853700"
  },
  {
    "text": "wait uh no that was right sorry I have",
    "start": "854120",
    "end": "859680"
  },
  {
    "text": "some weird directory structures so this is an example is this big enough actually I just forgot to ask on the",
    "start": "859680",
    "end": "865500"
  },
  {
    "text": "first time I open vs code it okay I've got a thumbs up from the back so this is another docker file this one is going to",
    "start": "865500",
    "end": "872160"
  },
  {
    "text": "describe two containers so the first one the first thing you'll see is that the from statement is labeled as billed so",
    "start": "872160",
    "end": "878460"
  },
  {
    "text": "now I can refer to this container within the docker file in later steps and access resources from this container and",
    "start": "878460",
    "end": "884220"
  },
  {
    "text": "later in later steps in producing the docker file and so this one is actually from another image called Alpine and",
    "start": "884220",
    "end": "890400"
  },
  {
    "text": "Alpine is pretty cool so if we go docker image LS a you can see that the",
    "start": "890400",
    "end": "898640"
  },
  {
    "text": "the Alpine image is only six megabytes so that's pretty great if you're trying to manage your resources in terms of",
    "start": "898640",
    "end": "904800"
  },
  {
    "text": "what you're deploying especially if you're deploying at scale this is a great little container image to use because it's so efficient now in this",
    "start": "904800",
    "end": "912090"
  },
  {
    "text": "one in order to build I'm pulling in all of my updates I'm pulling in a whole bunch of build build utilities and then",
    "start": "912090",
    "end": "919890"
  },
  {
    "text": "I'm doing a whole bunch of stuff here that's not really too relevant but it's probably the sort of thing you would see in a in a real-world docker file where",
    "start": "919890",
    "end": "926640"
  },
  {
    "text": "you're pulling in a whole bunch of assets that you need in order to build in this particular case I'm using VC",
    "start": "926640",
    "end": "931830"
  },
  {
    "text": "package which is a library manager for C++ libraries it doesn't support Alpine",
    "start": "931830",
    "end": "937520"
  },
  {
    "text": "so one of the guys on my team who works on VC package hacked up some stuff so that we could try using it with Alpine",
    "start": "937520",
    "end": "942930"
  },
  {
    "text": "and that's all of what that stuff is doing but I don't want to talk about that because I don't want you to have to",
    "start": "942930",
    "end": "947970"
  },
  {
    "text": "go out and try and use that will support Alpine eventually someday but so then",
    "start": "947970",
    "end": "953100"
  },
  {
    "text": "what winds up happening down here at the bottom is we run VC package we build all of our libraries that this application",
    "start": "953100",
    "end": "958710"
  },
  {
    "text": "needs we set our working directory and then this one actually uses C make we're passing in a tool chain file and a bunch",
    "start": "958710",
    "end": "965310"
  },
  {
    "text": "of other stuff and finally making our application and so for this I can say",
    "start": "965310",
    "end": "970620"
  },
  {
    "text": "build and I can actually say build the target and I want to build that image that's the build image from there and I",
    "start": "970620",
    "end": "977850"
  },
  {
    "text": "want to tag it as mine faces build you",
    "start": "977850",
    "end": "983730"
  },
  {
    "text": "don't have to do this it if you build the runtime image it will actually build all of this it'll just flow right through and build the whole thing and",
    "start": "983730",
    "end": "990150"
  },
  {
    "text": "just create an intermediate container but I like my containers labeled and so",
    "start": "990150",
    "end": "995610"
  },
  {
    "text": "this one had better run fast because oh wow thank you double dash for target and so that ran",
    "start": "995610",
    "end": "1005210"
  },
  {
    "text": "really fast this because it's actually been built before none of the and so that's the thing I was talking about before was that",
    "start": "1005210",
    "end": "1011210"
  },
  {
    "text": "different layers of an image can become invalidated by subsequent layers so if I",
    "start": "1011210",
    "end": "1016460"
  },
  {
    "text": "did something like run this and then I later ran another apk update afterwards",
    "start": "1016460",
    "end": "1024230"
  },
  {
    "text": "it could invalidate all of the previous layers and everything would have to be run again and so you want to be cognizant when you're building your",
    "start": "1024230",
    "end": "1029870"
  },
  {
    "text": "layers and the each statement in here can produce a different image layer and so you need to be careful about that but",
    "start": "1029870",
    "end": "1036260"
  },
  {
    "text": "at any rate so now we've got that one and now if I want to re if I want to run or build the runtime environment I can",
    "start": "1036260",
    "end": "1044060"
  },
  {
    "text": "say next let me pop this up bigger",
    "start": "1044060",
    "end": "1050680"
  },
  {
    "text": "and then now I don't have to specify a target because it's going to run all the way through and to that last runtime",
    "start": "1053160",
    "end": "1059710"
  },
  {
    "text": "target that I had specified and the initial build of that initial build container when I move this across",
    "start": "1059710",
    "end": "1066310"
  },
  {
    "text": "machines and build that because of the number of library because I'm using an HTTP library that has boost dependencies",
    "start": "1066310",
    "end": "1071560"
  },
  {
    "text": "the initial run of that build container takes about a few hours at least and so now what we can see actually let's clear",
    "start": "1071560",
    "end": "1078790"
  },
  {
    "text": "this and now we can see oops so these",
    "start": "1078790",
    "end": "1092650"
  },
  {
    "text": "are the container images that I have for this application and you can see that the build container is actually about six gigabytes but the runtime container",
    "start": "1092650",
    "end": "1099880"
  },
  {
    "text": "is only about 50 megabytes and so that's that's great savings in terms of you know the cost of disks that you're gonna",
    "start": "1099880",
    "end": "1106510"
  },
  {
    "text": "have you know especially if you're running in a cloud environment and you can see there's also the web site which",
    "start": "1106510",
    "end": "1111940"
  },
  {
    "text": "is a node.js app that's at about 140 Meg's so the c++ is clocking in pretty good here and this is actually more efficient",
    "start": "1111940",
    "end": "1118660"
  },
  {
    "text": "than some other stuff that you could use as well now to run all of these services together in this particular example I'm",
    "start": "1118660",
    "end": "1124960"
  },
  {
    "text": "going to use docker compose which is something that just comes with docker desktop you specify this docker compose",
    "start": "1124960",
    "end": "1131230"
  },
  {
    "text": "yamo file and so what this is doing is it's actually specifying different services that are using these images",
    "start": "1131230",
    "end": "1137950"
  },
  {
    "text": "that are that are output here that you can see and some I'm starting the service for the web app I'm starting a",
    "start": "1137950",
    "end": "1143710"
  },
  {
    "text": "service for the C++ service and I'm starting another service for what I'm",
    "start": "1143710",
    "end": "1148780"
  },
  {
    "text": "calling the website which is actually in genex and so I didn't build a separate Ingenix image that's actually just the",
    "start": "1148780",
    "end": "1156310"
  },
  {
    "text": "public name for the image for Ingenix and so when I run this docker compose file for the first time it's actually",
    "start": "1156310",
    "end": "1161440"
  },
  {
    "text": "gonna look out to docker hub and it's gonna pull Ingenix down and install that image locally on my machine and then use",
    "start": "1161440",
    "end": "1167290"
  },
  {
    "text": "that for running the service the other ones that are specified are not in a public image repository anyway it's just",
    "start": "1167290",
    "end": "1174610"
  },
  {
    "text": "finding them from my local images a lot of tutorials will tell you to do things like build your image locally and then",
    "start": "1174610",
    "end": "1182140"
  },
  {
    "text": "push it to docker hub you don't actually need to do that if you build your image locally you can reference that name locally you don't",
    "start": "1182140",
    "end": "1188260"
  },
  {
    "text": "need to push it up in order to find it and so finally you can see that the all",
    "start": "1188260",
    "end": "1193270"
  },
  {
    "text": "of these are using this network app network and so this app network is a simple bridge network that you specify",
    "start": "1193270",
    "end": "1199240"
  },
  {
    "text": "here and so now all of these containers can see each other and these containers can see each other by the name that is",
    "start": "1199240",
    "end": "1205660"
  },
  {
    "text": "specified here for each service and then only one of the services has ports that are exposed so the Ingenix one has is",
    "start": "1205660",
    "end": "1213280"
  },
  {
    "text": "exposed on port 8080 that's mapping internally to 80 and we have this",
    "start": "1213280",
    "end": "1218700"
  },
  {
    "text": "Ingenix configuration here that is actually a standard kind of reverse proxy and so what this is saying is that",
    "start": "1218700",
    "end": "1225490"
  },
  {
    "text": "for the route location redirect to the web app that's running on port 3000 on",
    "start": "1225490",
    "end": "1230559"
  },
  {
    "text": "the internal network and then for if it's under slash files which is where",
    "start": "1230559",
    "end": "1235809"
  },
  {
    "text": "the C++ service is expecting to find things then it's on port 4000 and so I",
    "start": "1235809",
    "end": "1241260"
  },
  {
    "text": "also want to show you one quick thing about the web app because this was very",
    "start": "1241260",
    "end": "1248049"
  },
  {
    "text": "tricky or at least it was tricky for me to grok understanding this what you'll",
    "start": "1248049",
    "end": "1253929"
  },
  {
    "text": "see here is that within this web app there's this request here that's actually going to the internal network",
    "start": "1253929",
    "end": "1259990"
  },
  {
    "text": "name so because this is running inside the container it's using the name of the",
    "start": "1259990",
    "end": "1266200"
  },
  {
    "text": "service that's the internal service name and so that's where the request is happening this request is not happening",
    "start": "1266200",
    "end": "1271480"
  },
  {
    "text": "outside of the container network but there's this other file here which is",
    "start": "1271480",
    "end": "1277960"
  },
  {
    "text": "this image file which is actually going to display our return image and here I'm just using the image tag to get the",
    "start": "1277960",
    "end": "1283690"
  },
  {
    "text": "image back and there I'm specifying localhost 8080 slash files to hit the C++ web service to get that image back",
    "start": "1283690",
    "end": "1290110"
  },
  {
    "text": "and that's because that request is actually happening in the web browser it's not happening in the container on",
    "start": "1290110",
    "end": "1295960"
  },
  {
    "text": "the internal container network it's happening external and so it's it's almost embarrassing how long it took me",
    "start": "1295960",
    "end": "1301000"
  },
  {
    "text": "to figure this out and debug this but it is it is the sort of thing that you can trip up on but let's go back to the",
    "start": "1301000",
    "end": "1311260"
  },
  {
    "text": "other one and so we've got our container images now so now how do I actually use this it's pretty simple so I say docker",
    "start": "1311260",
    "end": "1318610"
  },
  {
    "text": "compose shows up and - D means to attach so that",
    "start": "1318610",
    "end": "1323630"
  },
  {
    "text": "it won't lock my terminal here so yeah so all of my services are up now so I",
    "start": "1323630",
    "end": "1329390"
  },
  {
    "text": "should be able to hit that and so now we can go to localhost 8080 you can see",
    "start": "1329390",
    "end": "1336920"
  },
  {
    "text": "that my web development skills were honed in the age when HTML did not have a version number and from here we can",
    "start": "1336920",
    "end": "1343640"
  },
  {
    "text": "actually choose a file there's a lot of things in this world that make me feel old these days I'm not sure if this",
    "start": "1343640",
    "end": "1349220"
  },
  {
    "text": "picture of Ken Thompson and Dennis Ritchie taking in the year that I was born makes me feel old or young but it",
    "start": "1349220",
    "end": "1356810"
  },
  {
    "text": "will pick that picture and then will upload it to our service and there you can see it's actually so it's actually",
    "start": "1356810",
    "end": "1362600"
  },
  {
    "text": "taking that service or that picture it's posted it to the C++ service and then it's used OpenCV to circle their faces",
    "start": "1362600",
    "end": "1369200"
  },
  {
    "text": "and save the file and now we've could use to get requests to return it back and now if I want to bring this down I",
    "start": "1369200",
    "end": "1376340"
  },
  {
    "text": "can just say docker compose down and then that's going to take everything back down again so those containers will",
    "start": "1376340",
    "end": "1383000"
  },
  {
    "text": "all stop and my resources will be cleaned up so the pretty easy way to try working",
    "start": "1383000",
    "end": "1388250"
  },
  {
    "text": "with multiple containers with services working with each other",
    "start": "1388250",
    "end": "1393520"
  },
  {
    "text": "so let's come back",
    "start": "1394060",
    "end": "1397630"
  },
  {
    "text": "all right so what did we see so we saw a multi-stage build container for a C++",
    "start": "1403039",
    "end": "1408659"
  },
  {
    "text": "web service so just a couple of simple commands there in order to use that and",
    "start": "1408659",
    "end": "1414600"
  },
  {
    "text": "then we saw a hell we defined the related services in a docker compose diamo file and then we configured the",
    "start": "1414600",
    "end": "1421379"
  },
  {
    "text": "Ingenix proxy server settings and then we were mindful of you know how we needed to make whether the network calls",
    "start": "1421379",
    "end": "1427529"
  },
  {
    "text": "were being made on the internal container network or if the calls were being made from the external of the",
    "start": "1427529",
    "end": "1432749"
  },
  {
    "text": "container network and then a couple simple commands to bring that up and down but so this is this is all cool and",
    "start": "1432749",
    "end": "1440700"
  },
  {
    "text": "everything but you know I mean I did say that this was about the cloud right and so so what about it what does it mean to",
    "start": "1440700",
    "end": "1448289"
  },
  {
    "text": "use containers in the cloud well you know really when you're talking about using containers in the cloud you're",
    "start": "1448289",
    "end": "1454740"
  },
  {
    "text": "going up there for scalability purposes maybe to use a lot of compute so you're gonna have a bunch of containers running",
    "start": "1454740",
    "end": "1459779"
  },
  {
    "text": "right now I could sit here and start showing you how to do this in Azure or",
    "start": "1459779",
    "end": "1465299"
  },
  {
    "text": "maybe I could be contrary and show you how to use a AWS or Google but I really wanted to show you how to use this in",
    "start": "1465299",
    "end": "1471539"
  },
  {
    "text": "kind of a vendor-neutral way because there's something that all of the vendors are actually using today to",
    "start": "1471539",
    "end": "1476610"
  },
  {
    "text": "supply these services of how you actually manage containers at scale because that's really what the cloud is",
    "start": "1476610",
    "end": "1481799"
  },
  {
    "text": "about it's about scale and so how do you manage these containers at scale and what you need to manage containers at",
    "start": "1481799",
    "end": "1487289"
  },
  {
    "text": "scale is an orchestration service and so today what orchestration really means in",
    "start": "1487289",
    "end": "1493289"
  },
  {
    "text": "the cloud world is kubernetes if you go look at the documentation for working with containers and most of the",
    "start": "1493289",
    "end": "1499860"
  },
  {
    "text": "different cloud vendors it's usually a thin layer on top of kubernetes or it's just straight kubernetes so kubernetes",
    "start": "1499860",
    "end": "1506340"
  },
  {
    "text": "is really what you want in order to manage a bunch of containers so what is kubernetes how many of you are using",
    "start": "1506340",
    "end": "1512340"
  },
  {
    "text": "kubernetes okay that significantly fewer than the number of people using containers which isn't surprising",
    "start": "1512340",
    "end": "1518879"
  },
  {
    "text": "so kubernetes starts with kind of defining two clusters so that's kind of the core root object level of kubernetes",
    "start": "1518879",
    "end": "1525840"
  },
  {
    "text": "that you're interacting with this cluster and a cluster contains one or more nodes a node you can think of as a",
    "start": "1525840",
    "end": "1532169"
  },
  {
    "text": "machine within the cluster that could be a physical machine it could be a virtual machine and kubernetes can manage more than just",
    "start": "1532169",
    "end": "1540380"
  },
  {
    "text": "containers it's a complete orchestration service that manages all sorts of resources but we're not going to look at",
    "start": "1540380",
    "end": "1545610"
  },
  {
    "text": "anything other than containers within a cluster you have a pod and so this is",
    "start": "1545610",
    "end": "1550770"
  },
  {
    "text": "the object that you actually manage you know what what you're doing with the different containers in here in a pod",
    "start": "1550770",
    "end": "1556650"
  },
  {
    "text": "can contain one or more containers and the interesting thing about a pod is compared to just a container is that a",
    "start": "1556650",
    "end": "1563220"
  },
  {
    "text": "pod the containers in a pod all have access to the same resources and the kubernetes environment can actually",
    "start": "1563220",
    "end": "1569549"
  },
  {
    "text": "manage pods across multiple nodes because the whole thing about this is scale right so you want your cluster to",
    "start": "1569549",
    "end": "1576059"
  },
  {
    "text": "grow bigger and you want to have multiple nodes and you want to be able to manage all of these resources and when something goes wrong or when your",
    "start": "1576059",
    "end": "1582000"
  },
  {
    "text": "IT staff needs to scale something up or down they need to be they need to be free to move these containers maybe to a",
    "start": "1582000",
    "end": "1587730"
  },
  {
    "text": "different geo region maybe they need to scale it up or down and the pods give them the ability to move those",
    "start": "1587730",
    "end": "1593490"
  },
  {
    "text": "containers across different nodes in the network without impacting what's actually running in the containers but",
    "start": "1593490",
    "end": "1601200"
  },
  {
    "text": "that doesn't really tell you much about how you're going to work with this does it so when you're working with",
    "start": "1601200",
    "end": "1607289"
  },
  {
    "text": "kubernetes the thing you're probably going to be working with is a deployment and a deployment is going to describe a pod and different resources that you're",
    "start": "1607289",
    "end": "1614970"
  },
  {
    "text": "using within that pod and then in order to have these things work across",
    "start": "1614970",
    "end": "1620940"
  },
  {
    "text": "different pods different containers you're going to need to expose an application that's running there as a service so that other things within that",
    "start": "1620940",
    "end": "1627620"
  },
  {
    "text": "cluster can reference that and use the resources from it and then there's this other concept of a job a job you can",
    "start": "1627620",
    "end": "1635610"
  },
  {
    "text": "think of as a simple cron job you can have scheduled jobs that will describe a pod and will spin up a pod and do some",
    "start": "1635610",
    "end": "1641549"
  },
  {
    "text": "tasks from from start to completion jobs actually support parallelism depending on how you configure things whether or",
    "start": "1641549",
    "end": "1649020"
  },
  {
    "text": "not the application you want to run can support parallelism of course this parallelism and how you package",
    "start": "1649020",
    "end": "1656010"
  },
  {
    "text": "applications to move them across different kubernetes environments is a much bigger topic so I don't have very",
    "start": "1656010",
    "end": "1661649"
  },
  {
    "text": "much to say about that jobs are not really what you would use for that sort of thing but they're simple enough for",
    "start": "1661649",
    "end": "1667260"
  },
  {
    "text": "us to describe in a simple kind of demo app present like this where we can actually show",
    "start": "1667260",
    "end": "1672419"
  },
  {
    "text": "some simple parallelism but just know that parallelism in general is a big concept or a deep topic area within this",
    "start": "1672419",
    "end": "1679200"
  },
  {
    "text": "space jobs aren't suitable for things like scientific computing so if you've",
    "start": "1679200",
    "end": "1684630"
  },
  {
    "text": "got a scientific computing app that you want to try and throw this sort of technology that you're want to go you're going to want to look at something other",
    "start": "1684630",
    "end": "1690090"
  },
  {
    "text": "than jobs and then finally we have persistent volume claims these are a way",
    "start": "1690090",
    "end": "1695700"
  },
  {
    "text": "that you can specify storage or memory that different pods can access and it",
    "start": "1695700",
    "end": "1701909"
  },
  {
    "text": "can have a lifetime beyond the lifetime of the pod and now when I look at something like this you know what am I",
    "start": "1701909",
    "end": "1708960"
  },
  {
    "text": "going to show you how can I build a demo app that would actually use all of these concepts and you know I started thinking",
    "start": "1708960",
    "end": "1715919"
  },
  {
    "text": "about that and you know what would be something interesting to scale up I mean I could scale up that that face web",
    "start": "1715919",
    "end": "1723210"
  },
  {
    "text": "service but it's already kind of performant it's not really that interesting and I also kind of wanted to do something without network access",
    "start": "1723210",
    "end": "1729659"
  },
  {
    "text": "because I think a lot of C++ stuff you might want to run in a cloud you know to process a whole bunch of files or something maybe maybe a legacy app maybe",
    "start": "1729659",
    "end": "1737399"
  },
  {
    "text": "you've got a legacy app that you want to try and move up so maybe if that legacy app took like a file input and instead",
    "start": "1737399",
    "end": "1744090"
  },
  {
    "text": "of having a single file maybe we could parallelize it by you know running that same app but you know what the queue of",
    "start": "1744090",
    "end": "1749399"
  },
  {
    "text": "files for it to process and so I was thinking about this and I'm not sure I didn't test this so we'll see if this works but I was thinking about what's",
    "start": "1749399",
    "end": "1755909"
  },
  {
    "text": "the react this could be and I started thinking about the Simpsons and I started thinking about my favorite episode of The Simpsons which is space",
    "start": "1755909",
    "end": "1761970"
  },
  {
    "text": "Homer so we'll see if this actually if the audio works here [Music]",
    "start": "1761970",
    "end": "1775059"
  },
  {
    "text": "you fool now we may never know if ants can be trained to sort tiny screws in space that was a little quiet but the",
    "start": "1775059",
    "end": "1783260"
  },
  {
    "text": "punchline there was we'll never know if ants can be trained to sort Chinese screws in space and so you know but can",
    "start": "1783260",
    "end": "1789920"
  },
  {
    "text": "ants sort tiny screws in space if he didn't have Homer there and he hadn't ruined their experiment you know how",
    "start": "1789920",
    "end": "1795290"
  },
  {
    "text": "would you how would you know how would you know if ants can count tiny screws in space you know maybe you want to",
    "start": "1795290",
    "end": "1801200"
  },
  {
    "text": "count them by the different ant type you know this this shows from the 90s so you",
    "start": "1801200",
    "end": "1806570"
  },
  {
    "text": "know it's probably CSV data right they got it they've got to be tracking this in CSV it's probably batch processing of",
    "start": "1806570",
    "end": "1812809"
  },
  {
    "text": "data from yesterday because it's got to get back from space right and we didn't have the sort of modems we have today although I honestly don't know what kind",
    "start": "1812809",
    "end": "1819530"
  },
  {
    "text": "of modems we have for space but in any rate C++ was cool in the 90s right still",
    "start": "1819530",
    "end": "1826130"
  },
  {
    "text": "is yeah different ways but back then it was rocket scientists using C++ so that's pretty great but it's many years",
    "start": "1826130",
    "end": "1832220"
  },
  {
    "text": "right what if this experiments still running what if they got more ants up there they got more sensors more data we",
    "start": "1832220",
    "end": "1838400"
  },
  {
    "text": "want to get that app off and off of an old system that's being retired you know we need to migrate it somewhere because",
    "start": "1838400",
    "end": "1843620"
  },
  {
    "text": "that is a very big topic for containers actually a lot of people use containers to lift an application off of old",
    "start": "1843620",
    "end": "1849950"
  },
  {
    "text": "hardware and move it into another environment just to preserve that application in an environment that matches the original so that's kind of a",
    "start": "1849950",
    "end": "1857090"
  },
  {
    "text": "important topic for this sort of stuff but when we do this could we also scale it could we make it work better so let's",
    "start": "1857090",
    "end": "1864500"
  },
  {
    "text": "let's think about that so how could we do this so with what I've explained so far so I'll set up a persistent volume",
    "start": "1864500",
    "end": "1870800"
  },
  {
    "text": "claim that the apps can share just put all of the data in and I'm going to set",
    "start": "1870800",
    "end": "1876350"
  },
  {
    "text": "up a deployment that has a Redis server with a queue for ant files and then I'm",
    "start": "1876350",
    "end": "1882920"
  },
  {
    "text": "going to expose it as a service so that different containers can actually access this and so first I'm going to run a job",
    "start": "1882920",
    "end": "1888559"
  },
  {
    "text": "that's got a little C++ application and it's gonna that jobs can create a pod that is mapped in that persistent volume",
    "start": "1888559",
    "end": "1894770"
  },
  {
    "text": "flame is a slash data at the gray box ant space data is a little C++ app",
    "start": "1894770",
    "end": "1899810"
  },
  {
    "text": "that's going to generate a whole bunch of files CSV files for my simulated ant space data because",
    "start": "1899810",
    "end": "1905240"
  },
  {
    "text": "they don't have a Space Shuttle with ants on it and then I have a little Python script",
    "start": "1905240",
    "end": "1910610"
  },
  {
    "text": "that's just gonna scroll through all of the data that's been generated and populate the Redditt queue with a bunch",
    "start": "1910610",
    "end": "1917030"
  },
  {
    "text": "of key value pairs of the file names so that I can then use those file that I can then scale this up and the way I'm",
    "start": "1917030",
    "end": "1923690"
  },
  {
    "text": "going to do that is I have another job that I'm going to run after that first job is done and so I'm mapping in the",
    "start": "1923690",
    "end": "1929150"
  },
  {
    "text": "data directory again so I've got access to the date of the previous pop generated and then my little Python",
    "start": "1929150",
    "end": "1934580"
  },
  {
    "text": "script is going to read the cue from the Redis server and it's just a queue of the filenames and then it's going to",
    "start": "1934580",
    "end": "1940880"
  },
  {
    "text": "invoke my C++ app that just takes the filename as the input and then it's going to generate a little report about",
    "start": "1940880",
    "end": "1946760"
  },
  {
    "text": "how many screws were counted by which kind of ants and so now we can go ahead and pop out and take a look at that so",
    "start": "1946760",
    "end": "1958730"
  },
  {
    "text": "the first thing we want to do is look at our kubernetes assets and here what we",
    "start": "1958730",
    "end": "1965030"
  },
  {
    "text": "have this is much too big there we go alright so this is a description of a",
    "start": "1965030",
    "end": "1971270"
  },
  {
    "text": "deployment so we've got a little bit of metadata that gets specified in this case since I'm running locally on my",
    "start": "1971270",
    "end": "1978050"
  },
  {
    "text": "machine I'm not specifying any sort of replication one one instance of this is fine and then you can see down here for",
    "start": "1978050",
    "end": "1985670"
  },
  {
    "text": "the container it's using the image name Redis again this is a the name from docker hub I didn't build this locally",
    "start": "1985670",
    "end": "1992420"
  },
  {
    "text": "here but when I ran this the first time it reached out to docker hub and pulled that Redis image down so that I could",
    "start": "1992420",
    "end": "1998660"
  },
  {
    "text": "use it locally and then then for the environment it has some things that gets",
    "start": "1998660",
    "end": "2003790"
  },
  {
    "text": "set for Redis and there's also the command for the container that gets run which is write a server to start that up",
    "start": "2003790",
    "end": "2010230"
  },
  {
    "text": "I've got another little yamo file here that specifies I want to expose a service for that Redis server and then I",
    "start": "2010230",
    "end": "2017470"
  },
  {
    "text": "have another little demo file that just says some details about the persistent volume claim that pods can later use and",
    "start": "2017470",
    "end": "2024270"
  },
  {
    "text": "so in order to deploy this oh and actually before I show you this so this",
    "start": "2024270",
    "end": "2032110"
  },
  {
    "text": "is docker desktop this is available cross-platform it's great for you know",
    "start": "2032110",
    "end": "2038170"
  },
  {
    "text": "just doing local development but the one thing I want to show you docker desktop actually",
    "start": "2038170",
    "end": "2043180"
  },
  {
    "text": "supports kubernetes it's not on by default but if you want to try playing with kubernetes if you start looking at",
    "start": "2043180",
    "end": "2049780"
  },
  {
    "text": "guides about kubernetes you're gonna find all sorts of stuff about how we run cuban eddies with things called mini",
    "start": "2049780",
    "end": "2054970"
  },
  {
    "text": "cube and all sorts of other stuff that's really hard to configure and is distributed in ways that she won't get",
    "start": "2054970",
    "end": "2060100"
  },
  {
    "text": "updates just installed docker the docker desktop and just enable kubernetes here",
    "start": "2060100",
    "end": "2065260"
  },
  {
    "text": "you'll get Cube control which is the command-line utility you need and everything will just be set up and you can get going",
    "start": "2065260",
    "end": "2070929"
  },
  {
    "text": "just ignore all of these guides with their complex multi-page documentation about how to get started with kubernetes",
    "start": "2070929",
    "end": "2076360"
  },
  {
    "text": "just do this and then you can follow the rest of the guide once they start talking about cube control the",
    "start": "2076360",
    "end": "2082330"
  },
  {
    "text": "command-line utility you can just skip until they get to that and this will work it took me too long to figure that",
    "start": "2082330",
    "end": "2089050"
  },
  {
    "text": "out but so what I want to do is use cube control which is a primary CLI interface for kubernetes and I'm just going to say",
    "start": "2089050",
    "end": "2095800"
  },
  {
    "text": "apply and apply apply - eff or file but",
    "start": "2095800",
    "end": "2101560"
  },
  {
    "text": "it's going to apply all of the files in this directory so with that I have actually deployed all of these things",
    "start": "2101560",
    "end": "2106840"
  },
  {
    "text": "that were specified in the ammo files that just showed you and so then I can say cube controller cluster info just to",
    "start": "2106840",
    "end": "2112750"
  },
  {
    "text": "kind of come back to the concepts I was showing on the slide before so this is information about the cluster I'm using",
    "start": "2112750",
    "end": "2119610"
  },
  {
    "text": "so it's running here on my machine and we can see oops there's kind of a",
    "start": "2119610",
    "end": "2131500"
  },
  {
    "text": "standard syntax for this so I can say cube control get nodes and so I only have one node which is my local docker",
    "start": "2131500",
    "end": "2137980"
  },
  {
    "text": "desktop here and then I can say cube control get deployments and we can see",
    "start": "2137980",
    "end": "2144070"
  },
  {
    "text": "the Redis deployment that I just created and if I say cube control get pods we",
    "start": "2144070",
    "end": "2149560"
  },
  {
    "text": "can see the pods that that created so we've got a pot up and running now docker is the runtime environment for",
    "start": "2149560",
    "end": "2154960"
  },
  {
    "text": "the containers so if I want to see the containers I can actually say docker container LS and now you can see I",
    "start": "2154960",
    "end": "2161290"
  },
  {
    "text": "actually have a container running there that Redis spun up now red I'm sorry",
    "start": "2161290",
    "end": "2166900"
  },
  {
    "text": "that the kubernetes spun up now the interesting thing is if I were to come in here and muck with this with",
    "start": "2166900",
    "end": "2172600"
  },
  {
    "text": "shocker and if I were to say stop that container kubernetes actually knows what's going on in its environment and",
    "start": "2172600",
    "end": "2178690"
  },
  {
    "text": "kubernetes would say no no no no I've got a deployment that's running and it's supposed to be running in a container for Redis and so if I stopped it outside",
    "start": "2178690",
    "end": "2186220"
  },
  {
    "text": "of that environment without getting rid of my deployment first kubernetes will just spin the container back up again or",
    "start": "2186220",
    "end": "2192040"
  },
  {
    "text": "spin another container back up again yes I did create a person a persistent",
    "start": "2192040",
    "end": "2199990"
  },
  {
    "text": "volume self way cute control get PBC oh",
    "start": "2199990",
    "end": "2205560"
  },
  {
    "text": "I'm sorry I didn't create a persistent volume I decided to use a persistent volume claim so yeah I just found that",
    "start": "2206880",
    "end": "2214570"
  },
  {
    "text": "easier to do with the containers or with the with the pods I created later and so",
    "start": "2214570",
    "end": "2221620"
  },
  {
    "text": "that's our that's our basic environment here so now we've got all of the stuff that was on the left side of the slide",
    "start": "2221620",
    "end": "2226740"
  },
  {
    "text": "yes left side of the slide up and running and so now I can say bring up",
    "start": "2226740",
    "end": "2232330"
  },
  {
    "text": "another instance of vs code and we can look at generating our space data and so",
    "start": "2232330",
    "end": "2239800"
  },
  {
    "text": "for this one now I have an a job that's specified in this job again here it's using a local image so if I say docker",
    "start": "2239800",
    "end": "2248070"
  },
  {
    "text": "image LS you can see I've already I've",
    "start": "2248070",
    "end": "2256900"
  },
  {
    "text": "already generated I've already built this container image and so it's actually going to find the local the local container here again like this",
    "start": "2256900",
    "end": "2263500"
  },
  {
    "text": "image name a lot of the guides will tell you that you need to publish your image publicly to docker hub in order to use",
    "start": "2263500",
    "end": "2268720"
  },
  {
    "text": "it it's not true you can put you can just build your image locally and refer to the local name right there and it'll work now the other thing I'm doing here",
    "start": "2268720",
    "end": "2275980"
  },
  {
    "text": "is I'm setting some environment variables in the container for the number of files I want to generate how many lines how many machs lines and then",
    "start": "2275980",
    "end": "2282850"
  },
  {
    "text": "here's the volume mount so now I'm just using the persistent volume claim and then I'm mounting it into the slash data",
    "start": "2282850",
    "end": "2290020"
  },
  {
    "text": "path here and then for the docker file itself I've got another little multistage build",
    "start": "2290020",
    "end": "2296050"
  },
  {
    "text": "container here I'm using a version of Alpine that's all from Python that",
    "start": "2296050",
    "end": "2301150"
  },
  {
    "text": "already has Python set up for me which gives me a little bit less work I need to do",
    "start": "2301150",
    "end": "2306640"
  },
  {
    "text": "now in my daugher ignore this",
    "start": "2306640",
    "end": "2311710"
  },
  {
    "text": "yeah so in my daugher ignore i made sure to put the binary name that I'm generating because in my local testing I",
    "start": "2311710",
    "end": "2318190"
  },
  {
    "text": "and I I forgot to put my binary name in the docker ignore file when I was doing this initially and I was copying my",
    "start": "2318190",
    "end": "2324940"
  },
  {
    "text": "binary into the container image and it made it in part on another machine and I",
    "start": "2324940",
    "end": "2334630"
  },
  {
    "text": "did a lot of debugging to figure that out only to realize that I was copying a binary into the container and so it",
    "start": "2334630",
    "end": "2339880"
  },
  {
    "text": "wasn't it so that was getting just copied back out into another container and of course I'm not running alpine",
    "start": "2339880",
    "end": "2345280"
  },
  {
    "text": "locally so of course it wasn't working but so the docker file it's pretty basic",
    "start": "2345280",
    "end": "2351640"
  },
  {
    "text": "and then we're copying from the build output we're copying the the C++ app and",
    "start": "2351640",
    "end": "2358120"
  },
  {
    "text": "the little Python script all the Python script does as I mentioned the Python",
    "start": "2358120",
    "end": "2363850"
  },
  {
    "text": "script just reads the environment variables to see how many lines it needs to generate and output that and then it",
    "start": "2363850",
    "end": "2370120"
  },
  {
    "text": "invokes the C++ app with those there's not really too much interesting in the",
    "start": "2370120",
    "end": "2376150"
  },
  {
    "text": "C++ app it's just generating it's just generating a whole bunch of files based",
    "start": "2376150",
    "end": "2381700"
  },
  {
    "text": "on the numbers I gave it with some random data based on those numbers and then once it's done with that it comes",
    "start": "2381700",
    "end": "2389470"
  },
  {
    "text": "down here and it actually connects to the Redis queue and then it's just loops over the directory to push the generated",
    "start": "2389470",
    "end": "2397990"
  },
  {
    "text": "file names into the Redis queue and of course you could do that from C++ but it",
    "start": "2397990",
    "end": "2403810"
  },
  {
    "text": "didn't seem particularly performance related so Python is good glue code so that's how I decided to do that and so",
    "start": "2403810",
    "end": "2410830"
  },
  {
    "text": "in order to apply this we can then again do Cube control apply dash F and instead",
    "start": "2410830",
    "end": "2418570"
  },
  {
    "text": "of doing the entire directory I can actually just say which file name I want to use so that's going to spin that out",
    "start": "2418570",
    "end": "2425430"
  },
  {
    "text": "and then we can say who control get jobs and so we can see that our job is",
    "start": "2425430",
    "end": "2432040"
  },
  {
    "text": "running here and then I can say Cube control get pods and now we can see that",
    "start": "2432040",
    "end": "2437650"
  },
  {
    "text": "we actually have a pod running for and space data and we can say you can",
    "start": "2437650",
    "end": "2444490"
  },
  {
    "text": "actually get the output of what's running in a pod by saying cube control logs oops and the right pod name I can",
    "start": "2444490",
    "end": "2458470"
  },
  {
    "text": "hear my computer's fan running so now the other thing that's interesting here so this is the log is still in process",
    "start": "2458470",
    "end": "2464830"
  },
  {
    "text": "because the files are still being generated but if I say cube control get pods again one thing that's kind of",
    "start": "2464830",
    "end": "2470920"
  },
  {
    "text": "interesting here that's useful to know so you can copy this Redis cue name and you can actually say cube control exec",
    "start": "2470920",
    "end": "2479340"
  },
  {
    "text": "internet IT interactive and then my pod name and I can say bash and so now I'm",
    "start": "2479430",
    "end": "2487690"
  },
  {
    "text": "actually in the pod and I can actually start interacting with things that are running there locally and see what's going on and I can say write a CLI and I",
    "start": "2487690",
    "end": "2497680"
  },
  {
    "text": "can connect to the server that we're running and now I can say take a look at",
    "start": "2497680",
    "end": "2504190"
  },
  {
    "text": "what's in that queue and so my queue name is ant files and so I can say start at the beginning and end when it's done",
    "start": "2504190",
    "end": "2509340"
  },
  {
    "text": "and so now I can see like that Redis queue just has the list of the file names that's all that's in that Redis queue is",
    "start": "2509340",
    "end": "2515590"
  },
  {
    "text": "and I can tell because it's 20 that that's the number that I set so I'm pretty sure I'm done and so now if we",
    "start": "2515590",
    "end": "2521560"
  },
  {
    "text": "look back at the pods again and we can see that indeed the ants base data has",
    "start": "2521560",
    "end": "2527140"
  },
  {
    "text": "finished generating now and now what's cool even though that has finished I can actually still look at the logs for it",
    "start": "2527140",
    "end": "2533050"
  },
  {
    "text": "and so now you can see the log file is different you can see that I got to the end of my work queue and it's exited so",
    "start": "2533050",
    "end": "2539140"
  },
  {
    "text": "that's pretty great and then so finally now we want to proud now we want to do all of our work so you can say let's",
    "start": "2539140",
    "end": "2547120"
  },
  {
    "text": "look at the screw counter and for this one this is just another little job",
    "start": "2547120",
    "end": "2553510"
  },
  {
    "text": "definition and so for this one you can notice here on parallelism I've set it",
    "start": "2553510",
    "end": "2559660"
  },
  {
    "text": "to two so now I'm going to spin up two pods so I can actually scale this up I could say ten if I wanted to but this is",
    "start": "2559660",
    "end": "2565630"
  },
  {
    "text": "pretty great because now I've got now I can take that original application I can scale it out I have my image here for",
    "start": "2565630",
    "end": "2572350"
  },
  {
    "text": "ant screw counter that I built before and if we take a look at that in the doctor or sila yeah",
    "start": "2572350",
    "end": "2582040"
  },
  {
    "text": "sure let's talk about that later so we can say doctor image LS and I want to",
    "start": "2582040",
    "end": "2590110"
  },
  {
    "text": "look at this these containers or these images I should say and so you can see",
    "start": "2590110",
    "end": "2597700"
  },
  {
    "text": "that here again the Brun containers a little bit smaller than the billed container but not not dramatically so in",
    "start": "2597700",
    "end": "2605200"
  },
  {
    "text": "this particular instance and then again I'm mapping in the data path from that",
    "start": "2605200",
    "end": "2610240"
  },
  {
    "text": "persistent volume claim if I take a look at the dockerfile one thing you'll notice here I switched away from Alpine",
    "start": "2610240",
    "end": "2617380"
  },
  {
    "text": "at this point I'm using a debian variant here is my build container and it wasn't",
    "start": "2617380",
    "end": "2622480"
  },
  {
    "text": "really the build container that was a problem it was the runtime container that was a problem and so you can see",
    "start": "2622480",
    "end": "2628450"
  },
  {
    "text": "here I'm setting locales in my C++ code I was using function for format the cop",
    "start": "2628450",
    "end": "2636460"
  },
  {
    "text": "to format commas that use locale in order to format the commas it turns out",
    "start": "2636460",
    "end": "2641860"
  },
  {
    "text": "that if you actually start looking into it Alpine isn't great with locales it's",
    "start": "2641860",
    "end": "2647080"
  },
  {
    "text": "really hard to configure locales on on Alpine I found a lot of stuff about this from web devs about their struggles with",
    "start": "2647080",
    "end": "2653650"
  },
  {
    "text": "locales and Alpine so this is one of the great things you can throw your hands up in the air and say alright well then",
    "start": "2653650",
    "end": "2659230"
  },
  {
    "text": "I'll just use a different host environment and so I switch to Debi and we're little cows were working and I was",
    "start": "2659230",
    "end": "2664690"
  },
  {
    "text": "back to the races you know and the thing is another team member of mine said well why don't you just stop using locales I",
    "start": "2664690",
    "end": "2670570"
  },
  {
    "text": "said well yeah I could but I liked that function and I don't want to and it's just a demo app but if if size were",
    "start": "2670570",
    "end": "2675850"
  },
  {
    "text": "really important to me then I could make those sort of decisions to use a different function in order to still use",
    "start": "2675850",
    "end": "2681220"
  },
  {
    "text": "Alpine if size was really important to me but finally so we copied the output from the from the build container into a",
    "start": "2681220",
    "end": "2689410"
  },
  {
    "text": "runtime container and then you can see here we're spending up the entry point for the container is the Python another",
    "start": "2689410",
    "end": "2695260"
  },
  {
    "text": "Python script this Python script basically all it does prints out how",
    "start": "2695260",
    "end": "2701200"
  },
  {
    "text": "it's being used and then what it does is it connects to the Redis Q so that's",
    "start": "2701200",
    "end": "2706450"
  },
  {
    "text": "what it's doing here it's gonna it's connecting to the Redis work queue and then what it's doing is its looping over the work queue and it",
    "start": "2706450",
    "end": "2713109"
  },
  {
    "text": "grabs a item out of the work queue and puts a lease on it so that another worker won't grab that same item out of",
    "start": "2713109",
    "end": "2719470"
  },
  {
    "text": "the work queue and I picked 120 seconds in playing with this that's about that was max enough for what I'm doing here",
    "start": "2719470",
    "end": "2725470"
  },
  {
    "text": "and then while it's got that at least it calls the sub process which is the ant screw counter passing at it's filename",
    "start": "2725470",
    "end": "2731800"
  },
  {
    "text": "and down in here we can see where's my main so all the main is doing is it's",
    "start": "2731800",
    "end": "2741250"
  },
  {
    "text": "taking that file name and then it's opening that path with a C++ library",
    "start": "2741250",
    "end": "2746650"
  },
  {
    "text": "called CSV monkey I'll have a link in there but there's actually a thing called CSV game which looks at what are",
    "start": "2746650",
    "end": "2753700"
  },
  {
    "text": "the most performant programming languages for CSV I'm sure you won't be surprised that C++ is the winner but the",
    "start": "2753700",
    "end": "2760900"
  },
  {
    "text": "most performant library was that CSV Monkey so that was why I picked that one but it's a header only file and then",
    "start": "2760900",
    "end": "2768040"
  },
  {
    "text": "that's then it just runs through that and then it just prints out a little it just prints out a little report on which",
    "start": "2768040",
    "end": "2774760"
  },
  {
    "text": "ants counted the most screws and so in order to run this we can come back over",
    "start": "2774760",
    "end": "2780730"
  },
  {
    "text": "here and we can say cube Patrol apply and then we will I should",
    "start": "2780730",
    "end": "2790140"
  },
  {
    "text": "oops that was it Hockman where's my",
    "start": "2790710",
    "end": "2798490"
  },
  {
    "text": "funny man screw counter there we go so I",
    "start": "2798490",
    "end": "2803530"
  },
  {
    "text": "apply my yamo file that describes my job so it created my job I can see with cube",
    "start": "2803530",
    "end": "2809560"
  },
  {
    "text": "control get jobs that there it's there it's running well it looks like ones",
    "start": "2809560",
    "end": "2815500"
  },
  {
    "text": "already completed and I can say Q control get pods and indeed I can see",
    "start": "2815500",
    "end": "2821230"
  },
  {
    "text": "there that this ran fast enough that both of those pods have already completed but I can grab one of these",
    "start": "2821230",
    "end": "2826599"
  },
  {
    "text": "and I can actually look at the output from that and there's my logs now I",
    "start": "2826599",
    "end": "2834220"
  },
  {
    "text": "really wanted to print this on green and white paper with punch holes on the side but I really didn't want to take up an",
    "start": "2834220",
    "end": "2840010"
  },
  {
    "text": "entire bag the printer that big so that's what",
    "start": "2840010",
    "end": "2845029"
  },
  {
    "text": "we've got for that and so coming back",
    "start": "2845029",
    "end": "2853910"
  },
  {
    "text": "here so with no Homer we've actually got",
    "start": "2853910",
    "end": "2859549"
  },
  {
    "text": "our ants have finally sorted screws and we finally know how many they've sorted and so looking at this in review",
    "start": "2859549",
    "end": "2868160"
  },
  {
    "text": "so we specified some basic kubernetes resources in order to distribute our work setting up reddest red a server for",
    "start": "2868160",
    "end": "2876170"
  },
  {
    "text": "in a persistent volume claim for managing the files and both how we wanted to divide the work up and then",
    "start": "2876170",
    "end": "2882980"
  },
  {
    "text": "generated cement files so just a little C++ app to generate an arbitrary number",
    "start": "2882980",
    "end": "2888079"
  },
  {
    "text": "of files and a little python script that just ran over the number of the generated files to populate the work",
    "start": "2888079",
    "end": "2893480"
  },
  {
    "text": "queue and then it was spent all specified in a kubernetes job that just runs it run to completion and then",
    "start": "2893480",
    "end": "2899779"
  },
  {
    "text": "finally for counting the screws there was another C++ app that took the CSV file as input and then add a Python",
    "start": "2899779",
    "end": "2905989"
  },
  {
    "text": "script there's the entry point to the containers that read from the work queue and Redis and then invoke the C++ app",
    "start": "2905989",
    "end": "2911539"
  },
  {
    "text": "with the file that it had and then finally that cuber Nettie's job just spun up and ran in multiple ran multiple",
    "start": "2911539",
    "end": "2918200"
  },
  {
    "text": "pods in parallel so kind of wrapping up what we saw I think that hopefully you",
    "start": "2918200",
    "end": "2925789"
  },
  {
    "text": "can see that C++ and containers have a bunch of complementary characteristics that these things can work well together",
    "start": "2925789",
    "end": "2931930"
  },
  {
    "text": "building in containers is valuable it's easy to get started you see a lot of this in the C++ community today of",
    "start": "2931930",
    "end": "2938420"
  },
  {
    "text": "people using build containers because it's just such an obvious win in multi-state once you move on to actually",
    "start": "2938420",
    "end": "2945289"
  },
  {
    "text": "running your app in a container multistage builds can really help in terms of keeping your build and your runtime definitions in sync with each",
    "start": "2945289",
    "end": "2951440"
  },
  {
    "text": "other but I think the thing I want you to take away from this is that C++ it has a it has a place in containers",
    "start": "2951440",
    "end": "2958279"
  },
  {
    "text": "beyond just build environments it really lets you externalize some of your concerns to where they're best handled",
    "start": "2958279",
    "end": "2964279"
  },
  {
    "text": "particularly when you think about the people we're going to have to keep the system up and running over time that if you can externalize concerns to where",
    "start": "2964279",
    "end": "2970640"
  },
  {
    "text": "the right people can manage those assets and those resources the better but that means that C++ can be used in",
    "start": "2970640",
    "end": "2977329"
  },
  {
    "text": "these modern cloud invited deployments and kubernetes can be used with it to paralyze your C++ workloads and so so",
    "start": "2977329",
    "end": "2986299"
  },
  {
    "text": "what now is you know kind of look to the people here you know that you should go",
    "start": "2986299",
    "end": "2991760"
  },
  {
    "text": "out and learn and share how to deploy C++ apps in a modern cloud environment",
    "start": "2991760",
    "end": "2996770"
  },
  {
    "text": "or just even in a base kubernetes environment like this it's applicable to any cloud and the reason why is go out",
    "start": "2996770",
    "end": "3002770"
  },
  {
    "text": "there and try and find information on this and you're not going to find it nobody's talking about this I know that",
    "start": "3002770",
    "end": "3008410"
  },
  {
    "text": "people are doing it because whenever I talk about something like this whenever I write a blog post about containers in",
    "start": "3008410",
    "end": "3014980"
  },
  {
    "text": "C++ I have enterprise customers contact me asking me questions about what they're doing and sharing stuff about what",
    "start": "3014980",
    "end": "3021220"
  },
  {
    "text": "they're doing people are doing this but there's not a lot of public information out there about it and I think that",
    "start": "3021220",
    "end": "3027910"
  },
  {
    "text": "there's a lot to be said for that we can all do a lot more with C++ than just the language itself we need to talk more",
    "start": "3027910",
    "end": "3035349"
  },
  {
    "text": "about how we use C++ in these modern environments because we're just not talking about it we seem to only talk",
    "start": "3035349",
    "end": "3040839"
  },
  {
    "text": "about spaceship operator and stuff but you know deployment practices for these",
    "start": "3040839",
    "end": "3046839"
  },
  {
    "text": "apps they're just not well known and you know but here's some questions that I've",
    "start": "3046839",
    "end": "3052630"
  },
  {
    "text": "got you know and that I've been trying to work through myself as well that I think that you know that all of y'all",
    "start": "3052630",
    "end": "3058240"
  },
  {
    "text": "could take a look at - because I think the first blog post I wrote about containers and C++ was about one year",
    "start": "3058240",
    "end": "3064779"
  },
  {
    "text": "ago and now I'm here talking about it so I think that there's there's an appetite for this sort of stuff but there's just",
    "start": "3064779",
    "end": "3071589"
  },
  {
    "text": "a lot more that can be done it's a very deep topic area it's less about the language it's more about how you can run",
    "start": "3071589",
    "end": "3077740"
  },
  {
    "text": "these apps in this sort of environment and even for things like build I mean what are the best practices for managing",
    "start": "3077740",
    "end": "3083349"
  },
  {
    "text": "build and running containers in a CI CD system I see a lot of people doing it I find you know I can find public repos of",
    "start": "3083349",
    "end": "3090339"
  },
  {
    "text": "C++ apps that have a CI CD system specified I don't see any documentation about how it was configured and set up",
    "start": "3090339",
    "end": "3096849"
  },
  {
    "text": "it must have been simple right because otherwise they must not that",
    "start": "3096849",
    "end": "3102579"
  },
  {
    "text": "must be why they didn't describe it you know but so with that",
    "start": "3102579",
    "end": "3107650"
  },
  {
    "text": "I'll get the slides posted I included some references here to a bunch of stuff that I used in terms of how to figure",
    "start": "3107650",
    "end": "3114130"
  },
  {
    "text": "out how to build all of these demos a couple of the links down there at the bottom are shameless plugs to some of my",
    "start": "3114130",
    "end": "3119380"
  },
  {
    "text": "own blog posts that MSNBC post in a container that seems their windows",
    "start": "3119380",
    "end": "3125410"
  },
  {
    "text": "containers are a thing they are thing a lot of people use windows containers for",
    "start": "3125410",
    "end": "3132030"
  },
  {
    "text": "lifting and shifting dotnet applications to the cloud so that's a place where",
    "start": "3132030",
    "end": "3137170"
  },
  {
    "text": "they really have probably most but I actually have talked to enterprise customers who are trying to lift and",
    "start": "3137170",
    "end": "3142540"
  },
  {
    "text": "shift Windows C++ apps to the cloud as well and I'll probably be writing some",
    "start": "3142540",
    "end": "3147670"
  },
  {
    "text": "more about that in the future that's my github repo down there at the bottom I don't have the source for all of this postage yet because I needed to work on",
    "start": "3147670",
    "end": "3154180"
  },
  {
    "text": "my content and not keep monkey in with my source code so I'm going to monkey with my source code now that I'm done",
    "start": "3154180",
    "end": "3159460"
  },
  {
    "text": "and get that posted soon and you'll be able to find it there I'll make sure the slides are there as well and with that",
    "start": "3159460",
    "end": "3165700"
  },
  {
    "text": "I've also got a troubleshooting slide here in terms of some tips and tricks that I used in terms of debugging this",
    "start": "3165700",
    "end": "3171550"
  },
  {
    "text": "application as I was going through and with that questions so the question is",
    "start": "3171550",
    "end": "3191410"
  },
  {
    "text": "kind of the the productivity impact of trying to work with containers in a complex app like this right I see",
    "start": "3191410",
    "end": "3219390"
  },
  {
    "text": "I see okay so there's a lot to unpack there and I'm not sure I'm gonna be able to echo all of that back to the mic for",
    "start": "3241500",
    "end": "3248099"
  },
  {
    "text": "the recording we'll try so you're talking about some of the difficulties in particular with embedded systems and",
    "start": "3248099",
    "end": "3253440"
  },
  {
    "text": "getting a build container set up with the cross compiling tool chains and that",
    "start": "3253440",
    "end": "3258660"
  },
  {
    "text": "sort of stuff and it had an impact on your development team in terms of productivity there's probably a lot to",
    "start": "3258660",
    "end": "3264990"
  },
  {
    "text": "say about that I kind of intentionally didn't talk about IOT in this presentation although it's interesting",
    "start": "3264990",
    "end": "3272069"
  },
  {
    "text": "because within the broader C++ ecosystem the people that I've seen adopt",
    "start": "3272069",
    "end": "3278190"
  },
  {
    "text": "containers more than anybody else actually are the embedded in IOT folk which is unusual because they seem to be",
    "start": "3278190",
    "end": "3283680"
  },
  {
    "text": "such laggards usually but in this space for C++ they're actually much more ahead of people and I'm surprised that you",
    "start": "3283680",
    "end": "3289890"
  },
  {
    "text": "actually had that level of difficulty with containers and cross compilers was this a recent project or an older one",
    "start": "3289890",
    "end": "3298190"
  },
  {
    "text": "okay legacy so legacy legacy embedded projects I can believe yeah maybe there's more to run into there I'm",
    "start": "3299690",
    "end": "3306089"
  },
  {
    "text": "actually seeing a lot of activity and try and people trying to move cross compiling tool chains into containers",
    "start": "3306089",
    "end": "3312420"
  },
  {
    "text": "and one of the reasons people are interested in doing that is is specifically because of the complexity",
    "start": "3312420",
    "end": "3319980"
  },
  {
    "text": "of setting up a cross compiling environment to begin with and so if you can successfully get it into a container",
    "start": "3319980",
    "end": "3325170"
  },
  {
    "text": "to build then you're one step ahead of the game for getting new team members up and running I think you mentioned",
    "start": "3325170",
    "end": "3331470"
  },
  {
    "text": "flashing and things like that and I think that that's an area where more work is needed because nomads even if",
    "start": "3331470",
    "end": "3338910"
  },
  {
    "text": "you can build in a container for a embedded app you still need to flash in debug on the device in order to actually",
    "start": "3338910",
    "end": "3346079"
  },
  {
    "text": "be productive and a lot of times those tools are kind of maybe wrapped up in the cross compiling tools themselves as",
    "start": "3346079",
    "end": "3351960"
  },
  {
    "text": "well and because you need to break out to USB or serial doing that from the container environment back to the host",
    "start": "3351960",
    "end": "3358140"
  },
  {
    "text": "can be difficult I've heard of people doing it but I don't really have any good documentation or examples I've seen but I've heard",
    "start": "3358140",
    "end": "3364410"
  },
  {
    "text": "people talk about it it's something we're looking at one of our teams Microsoft is actually working on getting",
    "start": "3364410",
    "end": "3371810"
  },
  {
    "text": "cross-compiling toolchains for embedded microcontrollers into containers specifically to try and help with",
    "start": "3371810",
    "end": "3378080"
  },
  {
    "text": "acquisition and building and that sort of stuff so I think that there's a place for it",
    "start": "3378080",
    "end": "3383310"
  },
  {
    "text": "the interesting thing though as well is that sometimes in edge computing environments in IOT where you actually",
    "start": "3383310",
    "end": "3390120"
  },
  {
    "text": "have a larger machine that has maybe GPU or a higher level of compute in those",
    "start": "3390120",
    "end": "3397140"
  },
  {
    "text": "scenarios we are seeing people actually deploy containers as a runtime environment and I think I think we're",
    "start": "3397140",
    "end": "3404340"
  },
  {
    "text": "doing it for azure IOT edge I believe Amazon's Greengrass project has something similar that they're doing I",
    "start": "3404340",
    "end": "3409920"
  },
  {
    "text": "think the hardest thing about those environments is they're often very similar to kubernetes deployments but",
    "start": "3409920",
    "end": "3415290"
  },
  {
    "text": "the concepts are documented differently because in particularly different cloud vendors but hopefully we see some",
    "start": "3415290",
    "end": "3420960"
  },
  {
    "text": "harmonization there so it's easier to reason about but in those in those instances a lot of times people are trying to get to the",
    "start": "3420960",
    "end": "3426300"
  },
  {
    "text": "containers to deploy down there because it lets them use higher-level languages because they're also on a machine that",
    "start": "3426300",
    "end": "3431400"
  },
  {
    "text": "can run a container a microcontroller is not going to run a container but you",
    "start": "3431400",
    "end": "3436440"
  },
  {
    "text": "know if you've got something that's got a GPU you know or something bigger at the edge then you can run containers",
    "start": "3436440",
    "end": "3441690"
  },
  {
    "text": "there now now for now it's great because everything's self-contained right and we've even seen things where we've got",
    "start": "3441690",
    "end": "3448050"
  },
  {
    "text": "examples of CI CD systems that are producing the container runtime images and actually pushing them all the way",
    "start": "3448050",
    "end": "3453150"
  },
  {
    "text": "down to the edge so it's it's an exciting area it's too bad you had difficult it may be it's a history of",
    "start": "3453150",
    "end": "3460080"
  },
  {
    "text": "like you've mentioned legacy yes yeah",
    "start": "3460080",
    "end": "3470930"
  },
  {
    "text": "right yeah it's yeah so it's it's a question of scale so in a CIC the",
    "start": "3472280",
    "end": "3477540"
  },
  {
    "text": "comments I think is that for a CI CD system there's a there's a an obvious win from a scale perspective and a",
    "start": "3477540",
    "end": "3483330"
  },
  {
    "text": "manageability perspective of the build system to move into a container but for a local individual developer there may",
    "start": "3483330",
    "end": "3488430"
  },
  {
    "text": "not be as much of a gain I don't know I mean I think that I think that there are gains for using build containers locally",
    "start": "3488430",
    "end": "3494430"
  },
  {
    "text": "as well it does mean you need to think a little bit differently but yeah I still",
    "start": "3494430",
    "end": "3500100"
  },
  {
    "text": "think there's a gain because it's much easier to it would be much easier to on ramp people but then they'll have to deal with some",
    "start": "3500100",
    "end": "3506729"
  },
  {
    "text": "extra concepts of working with containers but luckily that doesn't require thinking about kubernetes and",
    "start": "3506729",
    "end": "3512219"
  },
  {
    "text": "all of the other stuff it should just be install docker docker build and you should it should be simple but it's not",
    "start": "3512219",
    "end": "3519119"
  },
  {
    "text": "always yeah any other questions",
    "start": "3519119",
    "end": "3525890"
  },
  {
    "text": "alright well thanks a lot [Applause]",
    "start": "3527450",
    "end": "3538310"
  }
]