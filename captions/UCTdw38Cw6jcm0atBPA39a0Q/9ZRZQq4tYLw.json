[
  {
    "text": "all right I guess I think we will start I guess the first thing thank you everyone for coming this early in the",
    "start": "5050",
    "end": "10639"
  },
  {
    "text": "morning I know it's 9 o'clock people struggle is personally for me that's obviously the case it's like my friend Amy day so I",
    "start": "10639",
    "end": "18650"
  },
  {
    "text": "guess that what today is worth 14 of June so I will start by taking a straw in memory lane and go back to what",
    "start": "18650",
    "end": "24140"
  },
  {
    "text": "happened in 2014 just a few years earlier because some pre momentous things happened for example with did you",
    "start": "24140",
    "end": "30980"
  },
  {
    "text": "know that Taco Bell Fanny announced their breakfast menu back in 2014 I didn't know that and Alibaba had the",
    "start": "30980",
    "end": "37730"
  },
  {
    "text": "biggest IPO ever 25 billion dollars which you know being a Chinese company and off it's a bit of a national pride",
    "start": "37730",
    "end": "43789"
  },
  {
    "text": "for me and then you also have the grumpy cat and of course everyone was singing let it go Hornets Hughes and in the past",
    "start": "43789",
    "end": "50809"
  },
  {
    "text": "and everywhere because of frozen and of course Amazon announced it was lambda3 event as well and since then we've had",
    "start": "50809",
    "end": "58010"
  },
  {
    "text": "this whole service training that's been popping under and getting more and more momentum every year and I've also be",
    "start": "58010",
    "end": "64338"
  },
  {
    "text": "able to pay this really wonderful game whereby every time I say the word the service someone reminds me that there's",
    "start": "64339",
    "end": "70160"
  },
  {
    "text": "still service somewhere which here which of course is missing a point entirely",
    "start": "70160",
    "end": "75260"
  },
  {
    "text": "because server less is serve less for the same reason that Wi-Fi is wireless",
    "start": "75260",
    "end": "80600"
  },
  {
    "text": "even though they're still wires connected somewhere but when you're trying to connect to the NDC Wi-Fi for",
    "start": "80600",
    "end": "86150"
  },
  {
    "text": "example those wires not your concern anymore so I think that's the industry as the community we've argued for powwow",
    "start": "86150",
    "end": "93500"
  },
  {
    "text": "what does actually mean to be serviced eventually we settle on three things service it's any technology that you",
    "start": "93500",
    "end": "100190"
  },
  {
    "text": "don't pay for it when you're not using it and you don't have to think about you don't have to worry about scaling you",
    "start": "100190",
    "end": "105740"
  },
  {
    "text": "don't have to worry about provisioning and managing servers you may have also heard the term function a service or",
    "start": "105740",
    "end": "111800"
  },
  {
    "text": "fast which is very closely related to service and that's where you're gonna find a DOS lambda and your functions or",
    "start": "111800",
    "end": "118940"
  },
  {
    "text": "Google cloud functions and so on and it's a pretty accurate description for the technology because is it's very",
    "start": "118940",
    "end": "125600"
  },
  {
    "text": "close to what you actually do in terms of writing a function a handle a function that allows the platform the",
    "start": "125600",
    "end": "131750"
  },
  {
    "text": "call on your behalf when some event happens in the ecosystem it could be someone making HTTP requests to an end",
    "start": "131750",
    "end": "137629"
  },
  {
    "text": "point or I'm publishing a message into as a nurse or Kinesis or and so on and when you",
    "start": "137629",
    "end": "143900"
  },
  {
    "text": "compare functions of service to infrastructures of service to contain as a service or perform the service you can",
    "start": "143900",
    "end": "150650"
  },
  {
    "text": "see that it's very close to platform the service in terms of what does the provider handle for us versus what do we",
    "start": "150650",
    "end": "157010"
  },
  {
    "text": "have to manage ourselves the main difference being whether whether or not the universe scaling is the application",
    "start": "157010",
    "end": "163459"
  },
  {
    "text": "or the individual functions that make up your application and just because something is fast that's necessarily",
    "start": "163459",
    "end": "169760"
  },
  {
    "text": "mean there is service and vice versa take two blades for example which allows you to run fast on your own kubernetes",
    "start": "169760",
    "end": "176780"
  },
  {
    "text": "cluster by our definition of service you shouldn't have to pay for you when no one's using it but even when no one's",
    "start": "176780",
    "end": "183170"
  },
  {
    "text": "running functions on that cognitive cluster you still have to pay for that cluster yourself and of course you see",
    "start": "183170",
    "end": "188720"
  },
  {
    "text": "the thing about scaling and provisioning and managing servers that runs your community cluster equally when you have",
    "start": "188720",
    "end": "195590"
  },
  {
    "text": "services like s3 or Google bigquery or as your blob storage so table story for",
    "start": "195590",
    "end": "201560"
  },
  {
    "text": "example those are services say you don't have to think about scaling eternal magnifying power managing service and",
    "start": "201560",
    "end": "207260"
  },
  {
    "text": "they just Auto scarce so by definition they are also service even though they",
    "start": "207260",
    "end": "212299"
  },
  {
    "text": "are not functions to service a lot of industry leaders for take some inwardly",
    "start": "212299",
    "end": "218269"
  },
  {
    "text": "for example who's known for his the mapping technique they believe their servlets will fundamentally change how",
    "start": "218269",
    "end": "223430"
  },
  {
    "text": "we build and run software in the future and for good reason - for starters your",
    "start": "223430",
    "end": "228650"
  },
  {
    "text": "application tend to be a lot more scalable sure there's still gonna be some scaling limits most of those well most of them are soft",
    "start": "228650",
    "end": "234919"
  },
  {
    "text": "limits for example Amazon limits you to scaling up to 500 containers per minute",
    "start": "234919",
    "end": "240109"
  },
  {
    "text": "for both your protection as well for tears but I still a lot faster than most of us is able to do with our own safe",
    "start": "240109",
    "end": "246500"
  },
  {
    "text": "communities cluster because - you wish that kind of scaling speed you have to have a lot of spare capacity just lying",
    "start": "246500",
    "end": "253099"
  },
  {
    "text": "around and you have to pay for those capacity your paper does capacity even",
    "start": "253099",
    "end": "258289"
  },
  {
    "text": "when you're not using it so for you in terms of the cost perspective is really no efficient but as provider they have",
    "start": "258289",
    "end": "265130"
  },
  {
    "text": "the scale economy so for them is perfectly fine to have a lot of spare capacity lying around so that their",
    "start": "265130",
    "end": "270890"
  },
  {
    "text": "customers can pintu even when they need it and then there's the whole aspect of you don't",
    "start": "270890",
    "end": "276539"
  },
  {
    "text": "pay for it when you're not using it so chances are your system can also be a lot cheaper to run as well and you also",
    "start": "276539",
    "end": "282749"
  },
  {
    "text": "get multi out of the box so you can keep baseline resilience out of the box we'll",
    "start": "282749",
    "end": "288239"
  },
  {
    "text": "have you have to do anything yourself but for me the biggest reason goes to service is the fact that from having an",
    "start": "288239",
    "end": "295319"
  },
  {
    "text": "idea to having something running in production so that you can start testing the idea against the market there's so",
    "start": "295319",
    "end": "301469"
  },
  {
    "text": "many things we have to do just to get there we have to decide what language and what framework we want to use we",
    "start": "301469",
    "end": "307169"
  },
  {
    "text": "have to learn those frameworks and we have to think about configuring the servers we already saw how we're going",
    "start": "307169",
    "end": "313259"
  },
  {
    "text": "to deployment see ICD and we have to build up those machine images and to capacity planning meetings and so on and",
    "start": "313259",
    "end": "319619"
  },
  {
    "text": "so forth but waiting to service all of that becomes either irrelevant or they have been justly simplified of course",
    "start": "319619",
    "end": "326789"
  },
  {
    "text": "you said I think about our deployment for example but we've heard a lot of the building capabilities as well as tools",
    "start": "326789",
    "end": "332399"
  },
  {
    "text": "like the service framework deployment becomes so simple and you don't think about configuring load balancers and",
    "start": "332399",
    "end": "338969"
  },
  {
    "text": "auto scalars anymore all of that just comes out of the box so in return you",
    "start": "338969",
    "end": "344429"
  },
  {
    "text": "get far greater velocity to production and you do that by minimizing a man of undifferentiated thing that you have",
    "start": "344429",
    "end": "351119"
  },
  {
    "text": "doing yourself including configuring servers and configuring a Mis and so on and setting up the servers and so on and",
    "start": "351119",
    "end": "358740"
  },
  {
    "text": "so forth and you also give yourself less operational responsibilities that you have to do yourself by offering more",
    "start": "358740",
    "end": "364860"
  },
  {
    "text": "more than to the provider that you're working with of course ultimately operate obviously your responsibility",
    "start": "364860",
    "end": "371399"
  },
  {
    "text": "you have to pay on your customers behalf and we serve less you still have to do a lot of things you still have figured out",
    "start": "371399",
    "end": "377159"
  },
  {
    "text": "how you're going to see ICD and the login monitoring this with tracing and so on I did a separate talk last year at",
    "start": "377159",
    "end": "384389"
  },
  {
    "text": "the Col motion Milan where I talked about a lot of these things in terms of how do you test your function locally",
    "start": "384389",
    "end": "389729"
  },
  {
    "text": "how to make sure you to continuous delivery and not all the monitoring operational side of things so go check",
    "start": "389729",
    "end": "396029"
  },
  {
    "text": "it out afterwards so I did work with a a piece of a non-trivial service",
    "start": "396029",
    "end": "401430"
  },
  {
    "text": "application when I migrated a social network to run pretty much entirely on surveillance and one of the things I",
    "start": "401430",
    "end": "407820"
  },
  {
    "text": "learned there is that event-driven architectures has more and more become the norm in the surveillance world and",
    "start": "407820",
    "end": "414120"
  },
  {
    "text": "events are a great way for you to build systems in a really loosely kappa 'we and functional service of offering such",
    "start": "414120",
    "end": "420810"
  },
  {
    "text": "as lambda is the perfect glue or connective tissue that allows you to connect all these different services",
    "start": "420810",
    "end": "426419"
  },
  {
    "text": "together and over time you see people use the lambda with other event sources",
    "start": "426419",
    "end": "432419"
  },
  {
    "text": "in the similar way over and over and certain pattern starts to emerge and as",
    "start": "432419",
    "end": "437910"
  },
  {
    "text": "should be customary for any talk that touches on design patterns I'm gonna start with a warning that a design",
    "start": "437910",
    "end": "444210"
  },
  {
    "text": "pattern is not necessarily a recipe for success no you see a recipe for disaster it's",
    "start": "444210",
    "end": "449729"
  },
  {
    "text": "just what it is that no repeated way that something has been done up to now and it's not a substitute for really an",
    "start": "449729",
    "end": "457950"
  },
  {
    "text": "electron understand the problem that you're dealing with as well as the constraints that you're working with and if you just blindly following patterns",
    "start": "457950",
    "end": "464669"
  },
  {
    "text": "you're not aware of the how you fits your context and you also run the risk of miss the point that when the contest",
    "start": "464669",
    "end": "472139"
  },
  {
    "text": "underneath that underpins those design patterns and best practices as they shift around today's best practices and",
    "start": "472139",
    "end": "478770"
  },
  {
    "text": "Pattison patterns can become tomorrow's anti patterns so guess what I'm saying here is that I'm not here to show you",
    "start": "478770",
    "end": "484950"
  },
  {
    "text": "some magic bullet that know you can just blindly follow because magic bullet doesn't exist and we should stop trying",
    "start": "484950",
    "end": "491550"
  },
  {
    "text": "to follow them all trying to find them all together it's the Maxion okay I'm",
    "start": "491550",
    "end": "497520"
  },
  {
    "text": "gonna keep talking anyway so all I'm doing here is I'm gonna show you a few patterns that I've noticed as I talk to",
    "start": "497520",
    "end": "503970"
  },
  {
    "text": "up any people they are using servlets and my name is yen I'm a principal engineer for a company called the zone",
    "start": "503970",
    "end": "510180"
  },
  {
    "text": "based in the UK we are a suppose we are subscription based platform for watching sports and we often go up on a tag line",
    "start": "510180",
    "end": "517440"
  },
  {
    "text": "of Netflix for sports because it is very similar model in terms of being a subscription-based platform we have lots",
    "start": "517440",
    "end": "524370"
  },
  {
    "text": "different sports and leagues available on our platform already and we are always adding more and more different",
    "start": "524370",
    "end": "530220"
  },
  {
    "text": "sports onto the platform and we're spending a lot of money doing so as well we just recently announced a 1 billion",
    "start": "530220",
    "end": "536070"
  },
  {
    "text": "dollar deal to bring boxing to the platform son of money is that the involved with sports image image rise is just mind",
    "start": "536070",
    "end": "543300"
  },
  {
    "text": "blowing our platform is available in five countries right now but we expanded",
    "start": "543300",
    "end": "548580"
  },
  {
    "text": "that pretty aggressively too and it's available across more than 30 different platforms including smartphones Apple TV",
    "start": "548580",
    "end": "555180"
  },
  {
    "text": "as well some really all the set of boxes available in Japan and any moment in time we have about half a million people",
    "start": "555180",
    "end": "561570"
  },
  {
    "text": "watching sports on our platform so it does come with a certain quiet laugh at interesting technical challenges as well",
    "start": "561570",
    "end": "567690"
  },
  {
    "text": "and if interested in serving the current challenges you can also we're also hiring in multiple locations go to",
    "start": "567690",
    "end": "573600"
  },
  {
    "text": "entering the zone to come to find out or you can follow us on Twitter to see what a team has been up to personally I've",
    "start": "573600",
    "end": "581220"
  },
  {
    "text": "been used a dress form was 10 years now and as I mentioned earlier I also worked on some non-trivial service applications",
    "start": "581220",
    "end": "587490"
  },
  {
    "text": "and some of my work has been also captured in well architected white paper the Amazon published last year I want to",
    "start": "587490",
    "end": "595019"
  },
  {
    "text": "start with a very simple pattern where I see a lot of people now are moving cron jobs that they run on their server onto",
    "start": "595019",
    "end": "601620"
  },
  {
    "text": "the cloud using a combination of car watch events which allows and the lambda",
    "start": "601620",
    "end": "606870"
  },
  {
    "text": "weave carwash events you can I think either something sick does I'm pretty sure there's something very similar in",
    "start": "606870",
    "end": "612029"
  },
  {
    "text": "the Shores well where you can say hey wow I have something I want to run every say five minutes and when that happens",
    "start": "612029",
    "end": "618750"
  },
  {
    "text": "trigger a lambda function to do something and from that you can also go a lot further as well you can use that",
    "start": "618750",
    "end": "625020"
  },
  {
    "text": "to automate a lot of the operational things that you tend to do in your environment for example whenever you",
    "start": "625020",
    "end": "630570"
  },
  {
    "text": "write something to stand out from your lambda function that gets captured and shipped into clash locks automatically",
    "start": "630570",
    "end": "636329"
  },
  {
    "text": "for you but carwash locks is not great for searching so what people tend to do is they'd go to the console and say I'm",
    "start": "636329",
    "end": "643320"
  },
  {
    "text": "going to stream this log this car was locked loop it's your lambda function and from there I'm gonna share all my logs to some low",
    "start": "643320",
    "end": "650220"
  },
  {
    "text": "aggregation service I'm using it which could be a self-hosted log out stack for",
    "start": "650220",
    "end": "655290"
  },
  {
    "text": "example but you didn't want to create this menu process in the development cycle where you have to always remember",
    "start": "655290",
    "end": "660930"
  },
  {
    "text": "the coaster console and subscribe your new law group to a lambda function and so on so what you can do is automate",
    "start": "660930",
    "end": "666899"
  },
  {
    "text": "this by neighbor cloud enable and cloud fill in your environment which then opens a door for you to",
    "start": "666899",
    "end": "673360"
  },
  {
    "text": "even patterns against API calls happens in the ecosystem on your behalf so",
    "start": "673360",
    "end": "678850"
  },
  {
    "text": "whenever the lambda servers create a new law group with the create local API call you can tap into that and react to it",
    "start": "678850",
    "end": "685959"
  },
  {
    "text": "with a lambda function whose job is to then subscribe the new law group to your log shipping function so now whenever",
    "start": "685959",
    "end": "693220"
  },
  {
    "text": "you create new new function you create a new log group you also matically get the capability to ship those logs to your",
    "start": "693220",
    "end": "699820"
  },
  {
    "text": "log aggregation service and this pattern of using car clouds field events that",
    "start": "699820",
    "end": "705610"
  },
  {
    "text": "show events are captured in culture to then create event patterns and trigger lambda function that should be used to a",
    "start": "705610",
    "end": "712360"
  },
  {
    "text": "pattern for example something also you also have to know about cloud which locks is that by default it retains your",
    "start": "712360",
    "end": "719470"
  },
  {
    "text": "logs forever and if you can be shipping your logs to somewhere else already it really doesn't make sense for you to pay",
    "start": "719470",
    "end": "724930"
  },
  {
    "text": "what 3 cents per gigabyte per month going on forever so one of the things",
    "start": "724930",
    "end": "729940"
  },
  {
    "text": "you could do is use the same technique and just have a lambda function to then automatically update the retention",
    "start": "729940",
    "end": "735279"
  },
  {
    "text": "policy to something more reasonable maybe seven days and whenever you create",
    "start": "735279",
    "end": "740380"
  },
  {
    "text": "a new API maybe you also have a conventional team to also want to create alarms around the latency say the 95",
    "start": "740380",
    "end": "747910"
  },
  {
    "text": "percentile latency for individual endpoints so that they shouldn't go beyond say 2 seconds you can also",
    "start": "747910",
    "end": "753760"
  },
  {
    "text": "automate that so that whenever you create a new API you can tap into the creative Pullman API code that the",
    "start": "753760",
    "end": "759790"
  },
  {
    "text": "system makes for you and then automatically create those alarms and those dashboards you can also do things",
    "start": "759790",
    "end": "765010"
  },
  {
    "text": "around how when things are happen in the console for example when you see someone",
    "start": "765010",
    "end": "770320"
  },
  {
    "text": "logging into the 80s console at some real time or from a real location that",
    "start": "770320",
    "end": "775390"
  },
  {
    "text": "you don't have any people then you could also create the lambda functions to react to that and automatically allow",
    "start": "775390",
    "end": "780940"
  },
  {
    "text": "someone that maybe some maybe someone's the credentials been compromised and we have someone logging into the console",
    "start": "780940",
    "end": "786820"
  },
  {
    "text": "and install and so forth of course a lot of us appear where applications are for",
    "start": "786820",
    "end": "793209"
  },
  {
    "text": "living and you can also do that with lambda and servlets very easily you may have a single page application the",
    "start": "793209",
    "end": "799149"
  },
  {
    "text": "support in start as the deploy into s3 and exposed to your car front so you can see the end and on the back end of",
    "start": "799149",
    "end": "805839"
  },
  {
    "text": "things you have a lambda function behind API gateway and is using tournament EBT pose as the backend",
    "start": "805839",
    "end": "811730"
  },
  {
    "text": "database for authentication you can also use service offerings such as Amazon's a",
    "start": "811730",
    "end": "818420"
  },
  {
    "text": "tornado service which after the box suppose a number of user flows in terms of the registration sign in/sign I'll",
    "start": "818420",
    "end": "825950"
  },
  {
    "text": "change passwords and so on and you get a number of the good practices after the box as well in terms of how it manages",
    "start": "825950",
    "end": "833089"
  },
  {
    "text": "the passwords securely and also supportive inside MFA's and capture and",
    "start": "833089",
    "end": "838310"
  },
  {
    "text": "so on you can for example has building a mobile app you can use some other",
    "start": "838310",
    "end": "843920"
  },
  {
    "text": "third-party all of the provider and you can technical against those or provider",
    "start": "843920",
    "end": "849019"
  },
  {
    "text": "and the trade receipt how can you get back you can then you send it to talk Neto federated identity service which",
    "start": "849019",
    "end": "856820"
  },
  {
    "text": "would then in that case would validate the tokens on your behalf and if the token is valid and you can change that",
    "start": "856820",
    "end": "863390"
  },
  {
    "text": "token with to a temporary address credential so that allows the mobile app",
    "start": "863390",
    "end": "869300"
  },
  {
    "text": "to directly access resources that you have in a TAS so if for example if you",
    "start": "869300",
    "end": "875449"
  },
  {
    "text": "want to use the IOT service the EDS provides this is how you would do at any occasion against the IOT service and if",
    "start": "875449",
    "end": "881810"
  },
  {
    "text": "your app if you are publishing events from the mobile app rather than having to create service just so that you can",
    "start": "881810",
    "end": "887600"
  },
  {
    "text": "provide some authentication layer in between you can just have the mobile app talk directly with Kinesis and publish",
    "start": "887600",
    "end": "894560"
  },
  {
    "text": "your clients to class or events that way as well and oftentimes you also wanted",
    "start": "894560",
    "end": "900890"
  },
  {
    "text": "to multi region for better resilience but also sometimes for better latency",
    "start": "900890",
    "end": "906140"
  },
  {
    "text": "for your users as well and nowadays it's become really easy to build a multi region active active api's on AWS",
    "start": "906140",
    "end": "913279"
  },
  {
    "text": "because Star MVP NASA post global tables where you can have a table replicated across multiple regions for you",
    "start": "913279",
    "end": "919640"
  },
  {
    "text": "automatically and API gateway also supposed region endpoint store you can bring your own cloud for anticipation in",
    "start": "919640",
    "end": "926449"
  },
  {
    "text": "front of a Pik where now as well and to set up a multi multi region set up with a Clarion lambda and tournament DB",
    "start": "926449",
    "end": "933019"
  },
  {
    "text": "behind the scenes is really really easy and my friend Alistair cast Pony now working for a the Ria's has also did of",
    "start": "933019",
    "end": "940470"
  },
  {
    "text": "such in a recently as well to show you exactly how you can do that setup so go check it out afterwards and then ever",
    "start": "940470",
    "end": "948540"
  },
  {
    "text": "you see people do a lot with lambda is a building data processing pipelines and of course on AWS that the factos",
    "start": "948540",
    "end": "955350"
  },
  {
    "text": "solution for data Lake is s3 where you can put all of your events data into it",
    "start": "955350",
    "end": "960480"
  },
  {
    "text": "and you can manage your assets with IEM permissions and you can also encrypt",
    "start": "960480",
    "end": "965880"
  },
  {
    "text": "data using kms and this is awesome this all comes out of the box and amazon also announced a new service last at the last",
    "start": "965880",
    "end": "972540"
  },
  {
    "text": "we invent called macy which uses the machine learning to treat and trans to",
    "start": "972540",
    "end": "978600"
  },
  {
    "text": "understand the data you have in the s3 in case and tried and lurch you whenever it detects that you have potentially",
    "start": "978600",
    "end": "985920"
  },
  {
    "text": "user identifiable information in the astra pocket which nowadays prefer gdpr",
    "start": "985920",
    "end": "991680"
  },
  {
    "text": "in full effect is also really going to be really really important for us now and also can alert you when they see",
    "start": "991680",
    "end": "997500"
  },
  {
    "text": "when you see something that looks like secrets or credentials or api keys and you can create an alert you",
    "start": "997500",
    "end": "1003530"
  },
  {
    "text": "automatically instead of getting data into s3 what you find also find is that",
    "start": "1003530",
    "end": "1009050"
  },
  {
    "text": "a lot of people were you saying something like Kinesis and connects Canisius streams and connect that to",
    "start": "1009050",
    "end": "1014570"
  },
  {
    "text": "Canisius firehose and the pipe tour dates and patched them and save them into s3 or without um to write any code",
    "start": "1014570",
    "end": "1022250"
  },
  {
    "text": "yourself it's just a field configuration and you can also automate automate that you say in CloudFormation or using",
    "start": "1022250",
    "end": "1029120"
  },
  {
    "text": "terraform as well and of course when you have events go into Canisius you can",
    "start": "1029120",
    "end": "1034280"
  },
  {
    "text": "also have a lambda functions that react to them and do some other processing and even when you have firehose you can also",
    "start": "1034280",
    "end": "1041780"
  },
  {
    "text": "do some additional manipulation and the transformation using lambda functions as well and once the file has been drop",
    "start": "1041780",
    "end": "1048620"
  },
  {
    "text": "into a three bucket you can also react to that because that's also an event source for lambda to them to other",
    "start": "1048620",
    "end": "1054800"
  },
  {
    "text": "processing perhaps you want to take the whatever data has been saved into s3 and put them into elasticsearch so that you",
    "start": "1054800",
    "end": "1061790"
  },
  {
    "text": "can index those documents or maybe you want to record some meditator in the tournament EP or in my particular case",
    "start": "1061790",
    "end": "1068090"
  },
  {
    "text": "i've been using Google pay query for many many years which is a really fantastic platform for doing PR work law",
    "start": "1068090",
    "end": "1074180"
  },
  {
    "text": "you can also have lambda function stream any data you have stored in a 3 star",
    "start": "1074180",
    "end": "1079460"
  },
  {
    "text": "rectally into Google pay query as well and of course Amazon also announced their the counter offering to bigquery",
    "start": "1079460",
    "end": "1086540"
  },
  {
    "text": "called Athena so nowadays as you say whatever data into s3 you can also",
    "start": "1086540",
    "end": "1092420"
  },
  {
    "text": "analyze them with while doing it also run ad hoc queries against them using a thinner and you can visualize the",
    "start": "1092420",
    "end": "1098960"
  },
  {
    "text": "results using Amazon's the Quick Start Service as well so we know nowadays you",
    "start": "1098960",
    "end": "1108470"
  },
  {
    "text": "can build an entire data processing pipeline almost without having to write any code yourself an attachment is the",
    "start": "1108470",
    "end": "1115910"
  },
  {
    "text": "event you've an aspect of servlets at the start and I want to just go into a little bit more",
    "start": "1115910",
    "end": "1121090"
  },
  {
    "text": "so we've of course we for even processing there's the love pattern you",
    "start": "1121090",
    "end": "1126650"
  },
  {
    "text": "may have heard about in terms of events so saying or just know you need for a",
    "start": "1126650",
    "end": "1131780"
  },
  {
    "text": "lot processing for example I'm not going to talk about any of those specific patterns I won't just this is more of I",
    "start": "1131780",
    "end": "1137270"
  },
  {
    "text": "guess a trend in the chain how with few systems how we build some nowadays versus necessary design pattern so",
    "start": "1137270",
    "end": "1146150"
  },
  {
    "text": "Canisius we've talked about that earlier already this is the way you typically would use in a dress to stream a lot of",
    "start": "1146150",
    "end": "1152060"
  },
  {
    "text": "things or events that's happening in your system into a stream and when you have micro-services you've got different",
    "start": "1152060",
    "end": "1158390"
  },
  {
    "text": "bounded context those things those different parent contact you can make state changes inside them and when",
    "start": "1158390",
    "end": "1164480"
  },
  {
    "text": "something changes you can also publish that as the event to your keynesian stream so that other subsystems can also",
    "start": "1164480",
    "end": "1170720"
  },
  {
    "text": "react to those state changes in the system and those different other systems I can also have their own pack and",
    "start": "1170720",
    "end": "1177620"
  },
  {
    "text": "stores for data which could be tournament TP it could be konista so it could be a SNS could be s3 it could be",
    "start": "1177620",
    "end": "1184400"
  },
  {
    "text": "something and whatever it is that you use and of course as those are the subsystems creates",
    "start": "1184400",
    "end": "1190070"
  },
  {
    "text": "state changes they can also dam publish events back into Canisius stream so that other systems that interested in those",
    "start": "1190070",
    "end": "1196910"
  },
  {
    "text": "kind of state changes can also react to them as well and using events you can",
    "start": "1196910",
    "end": "1202130"
  },
  {
    "text": "pair a really loosely coupled system that way and suppose you've got multiple micro services",
    "start": "1202130",
    "end": "1208010"
  },
  {
    "text": "each one of them rap means the noise inside their own bounty context and when something happens in one you don't",
    "start": "1208010",
    "end": "1213560"
  },
  {
    "text": "necessarily what you don't want to have a synchronous communication to another service to notify them instead everyone",
    "start": "1213560",
    "end": "1219620"
  },
  {
    "text": "would just be communicating through events by publishing and subscribing to a shared stream and this is of course",
    "start": "1219620",
    "end": "1226790"
  },
  {
    "text": "not a new idea he's been around for many years and many people call them unified the lock processing I think I probably",
    "start": "1226790",
    "end": "1232850"
  },
  {
    "text": "see from the date on that my friend that Alex Tina has been trying to write his spoke since about 2014 so this book has",
    "start": "1232850",
    "end": "1241160"
  },
  {
    "text": "been a work in progress for quite a number of years and one of the things that you run is one and so I guess challenges are running too when trying",
    "start": "1241160",
    "end": "1247820"
  },
  {
    "text": "to build system this way is that now different system now different micro services are communicating via events so",
    "start": "1247820",
    "end": "1256820"
  },
  {
    "text": "contracts on those events becomes important how do you make sure that once one system changes the culture for the",
    "start": "1256820",
    "end": "1263270"
  },
  {
    "text": "event it's not going to break is talking to break other systems that depends on those events this is where if something",
    "start": "1263270",
    "end": "1269420"
  },
  {
    "text": "things like the open API spur comes into play which has also been extended to support acing api's so message driven a",
    "start": "1269420",
    "end": "1276830"
  },
  {
    "text": "PRS as well and to make sure that when you make a code change you're not gonna create breaking you",
    "start": "1276830",
    "end": "1283370"
  },
  {
    "text": "cannot you're not going to break other systems that's where you can use things like pact which has got a proof of concept",
    "start": "1283370",
    "end": "1289100"
  },
  {
    "text": "going on in the moment which allows you to use the same tool kit that you have with pact and peruse them against the",
    "start": "1289100",
    "end": "1296870"
  },
  {
    "text": "message con you saw event contracts instead so before you release a call",
    "start": "1296870",
    "end": "1301970"
  },
  {
    "text": "into a production you can run a simple command to check that the event that you're producing is it's not gonna its",
    "start": "1301970",
    "end": "1308510"
  },
  {
    "text": "back compatible and it's not gonna break the contract that you've agreed with the consumers of your events so I love",
    "start": "1308510",
    "end": "1315680"
  },
  {
    "text": "working with events except for one one case whereby I really don't like it when",
    "start": "1315680",
    "end": "1321860"
  },
  {
    "text": "we try to use events as a way to orchestrate workflows within the same boundary context and I'll see after I've",
    "start": "1321860",
    "end": "1329270"
  },
  {
    "text": "done this in the past myself and and I've seen other people do that as well and you run into a few problems when you",
    "start": "1329270",
    "end": "1335720"
  },
  {
    "text": "try to do that because for starters you your workflow it doesn't exist as a",
    "start": "1335720",
    "end": "1341330"
  },
  {
    "text": "standalone concept anywhere in your code anywhere you can you can you can see it's part",
    "start": "1341330",
    "end": "1346639"
  },
  {
    "text": "from us apart from in your mental motor system and you add all these other complexities that it just it wouldn't",
    "start": "1346639",
    "end": "1353029"
  },
  {
    "text": "have to do otherwise in terms of how you do tracing monitoring and logging and so on and the only way when you when you",
    "start": "1353029",
    "end": "1360529"
  },
  {
    "text": "actually see the the workflow is in someone's architectural diagram and when",
    "start": "1360529",
    "end": "1365779"
  },
  {
    "text": "you look at the when you look at a system you're looking at individual bits as opposed to the whole workflow and see",
    "start": "1365779",
    "end": "1370940"
  },
  {
    "text": "how things are going so instead what you should use is in areas is the step functions I guess in as your functions",
    "start": "1370940",
    "end": "1377869"
  },
  {
    "text": "you have with that logic apps that's the one right so that is for me that's much better too in terms of something that",
    "start": "1377869",
    "end": "1384769"
  },
  {
    "text": "you should use to orchestrate workflows inside a particular boundary context and of course as you as the different",
    "start": "1384769",
    "end": "1391820"
  },
  {
    "text": "functions in the use as part of your staff functions the state machine those functions create state changes you",
    "start": "1391820",
    "end": "1398629"
  },
  {
    "text": "should also report them back to the keynesian stream so that other subsystems can then also react to them",
    "start": "1398629",
    "end": "1404419"
  },
  {
    "text": "and so on so those are some high-level architectural patterns I want to also",
    "start": "1404419",
    "end": "1410509"
  },
  {
    "text": "spend some time looking at some I guess the implementation level patterns and also give us a chance to talk about I",
    "start": "1410509",
    "end": "1416210"
  },
  {
    "text": "guess a topic that I think we should talk about more which is how do we what",
    "start": "1416210",
    "end": "1421669"
  },
  {
    "text": "how do we choose the past event source for different situations because besides the service themselves we now also have",
    "start": "1421669",
    "end": "1427789"
  },
  {
    "text": "additional dynamic we'd consider in terms of how the start event source interact with your functions in terms of",
    "start": "1427789",
    "end": "1434480"
  },
  {
    "text": "error handling as well as concurrency as well and the first part I want to talk about is decoupled invitations which",
    "start": "1434480",
    "end": "1441320"
  },
  {
    "text": "comes straight out of the Sao SOA patterns book so this is this is a very",
    "start": "1441320",
    "end": "1447950"
  },
  {
    "text": "good pattern for dealing with a long-running processes with lambda functions for example you have a limit",
    "start": "1447950",
    "end": "1453379"
  },
  {
    "text": "on how long your function can run for but when you have AP is using a PRK way that limit is even shorter",
    "start": "1453379",
    "end": "1459710"
  },
  {
    "text": "a Pik way limits your integration endpoints to 29 seconds timeout so even",
    "start": "1459710",
    "end": "1464990"
  },
  {
    "text": "though your functions can run for five minutes when you're using a Pik way as the event source your timer after 29",
    "start": "1464990",
    "end": "1470840"
  },
  {
    "text": "seconds you also have you also want to do with",
    "start": "1470840",
    "end": "1475900"
  },
  {
    "text": "cases whereby when you need to integrate with downstream systems there are maybe not as scalable as you are now you're",
    "start": "1475900",
    "end": "1482200"
  },
  {
    "text": "using lambda functions now you can scare automatically to do whatever you need but maybe you're walking down streams",
    "start": "1482200",
    "end": "1488800"
  },
  {
    "text": "there are much more constrained by say the database that they use or the fact that is runs on the ec2 so scaling is",
    "start": "1488800",
    "end": "1496210"
  },
  {
    "text": "not as fast and north dynamic as as you can be so when you're dealing with down streams and scholars some potentially a",
    "start": "1496210",
    "end": "1502240"
  },
  {
    "text": "hard limit on her maximum super taking support and when you experience a spike",
    "start": "1502240",
    "end": "1507640"
  },
  {
    "text": "in traffic and you're projecting the spike in traffic directly onto your downstream then you're gonna cause the",
    "start": "1507640",
    "end": "1513520"
  },
  {
    "text": "downstream to become slow and time out and eventually that we cannot that will start to with be refracted in your own",
    "start": "1513520",
    "end": "1520120"
  },
  {
    "text": "system as well as if you're not handling those that there's a timeout and the errors gracefully as the name of the",
    "start": "1520120",
    "end": "1528670"
  },
  {
    "text": "pattern suggests you are decoupling the response from the initial request so in",
    "start": "1528670",
    "end": "1534160"
  },
  {
    "text": "this case suppose one of the users is a posting is make a post request to a PRSA",
    "start": "1534160",
    "end": "1539200"
  },
  {
    "text": "API do something for me you can in that case you can queue up some work for some",
    "start": "1539200",
    "end": "1544360"
  },
  {
    "text": "background worker to carry on but in the meantime you can also respond back to to the caller this refer to or to to say",
    "start": "1544360",
    "end": "1550780"
  },
  {
    "text": "yep sure we've received your request we're going to be processing in the background and when it's when the result",
    "start": "1550780",
    "end": "1556600"
  },
  {
    "text": "is available here's the location viral HTTP header that you can find there is",
    "start": "1556600",
    "end": "1561670"
  },
  {
    "text": "the response so the caller with location would be polling at the endpoint for results as for when it's ready but one",
    "start": "1561670",
    "end": "1568900"
  },
  {
    "text": "of the processing is still going on in the background you will say it's not ready yet but when it's ready no these",
    "start": "1568900",
    "end": "1574570"
  },
  {
    "text": "hairs will find results and to eventually the background worker finishes job notify the API so result",
    "start": "1574570",
    "end": "1581230"
  },
  {
    "text": "becomes available for the caller the next time it tries to pause for result",
    "start": "1581230",
    "end": "1586800"
  },
  {
    "text": "so this allows you to motorized any spice in traffic that you experience through the worker so that you don't",
    "start": "1586980",
    "end": "1592900"
  },
  {
    "text": "expose those spikes in traffic directly on to your downstream systems and dependencies so when you experience the",
    "start": "1592900",
    "end": "1601059"
  },
  {
    "text": "spike in traffic you would based on the maximal concurrence that maximum throughput your work",
    "start": "1601059",
    "end": "1606110"
  },
  {
    "text": "can carry out you were motorized there so that your downstream sister there's an experience the same spike in traffic",
    "start": "1606110",
    "end": "1611720"
  },
  {
    "text": "and you would just carry on a work maybe take bit longer but you don't cause the downstream to to experience an outage at",
    "start": "1611720",
    "end": "1623690"
  },
  {
    "text": "the same time you can also even when you have you how to do something expensive processing you can still respond back to",
    "start": "1623690",
    "end": "1629870"
  },
  {
    "text": "the caller a lot earlier I mean it is some clever things around the UI to in terms of how we how we communicate those",
    "start": "1629870",
    "end": "1636350"
  },
  {
    "text": "status changes in the same way that was when you send a message via whatsapp the message goes to the buffer you get sent",
    "start": "1636350",
    "end": "1643160"
  },
  {
    "text": "to the sweetie to the side and you have different you can depending on depending on where the message to say that the",
    "start": "1643160",
    "end": "1649040"
  },
  {
    "text": "message you can get different notifications in terms of whether now it's been sent to the other side has it been received by the other side has it",
    "start": "1649040",
    "end": "1655370"
  },
  {
    "text": "been read by the other side you can do something similar in terms of how you communicate the status of the work that",
    "start": "1655370",
    "end": "1660740"
  },
  {
    "text": "you're trying to do in a background and probably moving the urgency to give a response right away we also give",
    "start": "1660740",
    "end": "1667340"
  },
  {
    "text": "ourselves some flexibility around how we manage the failures and which wise and",
    "start": "1667340",
    "end": "1672470"
  },
  {
    "text": "so on and walk for a simple a simple example you can a Pik way and you can",
    "start": "1672470",
    "end": "1677510"
  },
  {
    "text": "lambda function we've done MTB as your database and when someone pup when someone makes a request to say to some",
    "start": "1677510",
    "end": "1683000"
  },
  {
    "text": "work you can save some meditator in a tournament it be table in this case resolve is no so is the results not",
    "start": "1683000",
    "end": "1689150"
  },
  {
    "text": "ready yet in the background I'm going to clear up some tasks with sqs and when",
    "start": "1689150",
    "end": "1694910"
  },
  {
    "text": "can respond to the quarterly for 302 with a location for where the result would be when it becomes available and",
    "start": "1694910",
    "end": "1700730"
  },
  {
    "text": "we have a lambda function in the background as pouring the jobs on the sqs and it's doing this background",
    "start": "1700730",
    "end": "1705770"
  },
  {
    "text": "processing and notice that I also have as x I also have a created at timestamp",
    "start": "1705770",
    "end": "1710929"
  },
  {
    "text": "so that this is a way that I can use to stop the caller from poling indefinitely",
    "start": "1710929",
    "end": "1716090"
  },
  {
    "text": "so she have a ways to timeout to call the caller from from polling so when",
    "start": "1716090",
    "end": "1723290"
  },
  {
    "text": "someone says Mary's already yet with charity the base in this case miss are still no so I'm sorry results not quite",
    "start": "1723290",
    "end": "1729590"
  },
  {
    "text": "ready yet here's the 202 and with location of where you find result when it becomes available when my background",
    "start": "1729590",
    "end": "1736100"
  },
  {
    "text": "lambda function finishes it's going to save the result back into theta base and it's gonna set the result to be",
    "start": "1736100",
    "end": "1741529"
  },
  {
    "text": "something so that the next time when I call a pose again I can say okay yep the",
    "start": "1741529",
    "end": "1746989"
  },
  {
    "text": "job is done he is a 200 and this is your actual response so sqs is when a problem",
    "start": "1746989",
    "end": "1756199"
  },
  {
    "text": "if asked us is that right now it's not as native lesson 8 we support the event",
    "start": "1756199",
    "end": "1761239"
  },
  {
    "text": "source for lambda so you have it right and have to run your own infrastructure in terms of a cron job for example 2po",
    "start": "1761239",
    "end": "1767589"
  },
  {
    "text": "tasks that you have in SQL support for sqs and lambda is coming pretty soon but",
    "start": "1767589",
    "end": "1772879"
  },
  {
    "text": "amazon has been committed to use any specific dates yet so one of the things you could consider is juice instead of",
    "start": "1772879",
    "end": "1778579"
  },
  {
    "text": "SQS use something like Canisius stream or DynamoDB stream as well which allows",
    "start": "1778579",
    "end": "1783739"
  },
  {
    "text": "you to control concurrency that you have on the worker side of things with ptolemy TV streams the keynesian streams",
    "start": "1783739",
    "end": "1790129"
  },
  {
    "text": "the concurrency is controlled by the numbers shard you have in the stream so you have a stream with five shots every",
    "start": "1790129",
    "end": "1796339"
  },
  {
    "text": "single shard will have a dedicated instance of lambda function so that when you want to have for no more than five",
    "start": "1796339",
    "end": "1802489"
  },
  {
    "text": "concurrent requests go into your downstream system for example then you can show that with numbers shards you",
    "start": "1802489",
    "end": "1808249"
  },
  {
    "text": "have in the stream and if one the purpose of doing this is to to a motor to a motors and in spikes in traffic",
    "start": "1808249",
    "end": "1814279"
  },
  {
    "text": "then you also may means the SNS is really poor choice here because we're SNS every message that you publish the",
    "start": "1814279",
    "end": "1821690"
  },
  {
    "text": "SNS will create an invocation for of lambda function right away so that means again you're back to the land of mapping",
    "start": "1821690",
    "end": "1828319"
  },
  {
    "text": "one to one of the traffic that you experience to the demand concurrency that you show you you push down to your",
    "start": "1828319",
    "end": "1835369"
  },
  {
    "text": "downstream system and then the common pattern people use is the pop sir I'm",
    "start": "1835369",
    "end": "1840829"
  },
  {
    "text": "sure everyone's familiar with that already whereby you have a broker between the subscribe for between a",
    "start": "1840829",
    "end": "1846049"
  },
  {
    "text": "publisher of events and the subscribers are interested in those events in this",
    "start": "1846049",
    "end": "1852649"
  },
  {
    "text": "case for every message the you guessed publish to that you publish through the broker it gets fan out to all of the",
    "start": "1852649",
    "end": "1858769"
  },
  {
    "text": "different subscribers you have and it's great for the coupling different like the person you have and allows you to",
    "start": "1858769",
    "end": "1865579"
  },
  {
    "text": "allow you to to to segregate failure so that the individual subscribers may fail it doesn't necessarily have to bring",
    "start": "1865579",
    "end": "1872359"
  },
  {
    "text": "doubt it bring down whole thing again interests of the broker you can use SNS Kinesis streams",
    "start": "1872359",
    "end": "1880430"
  },
  {
    "text": "or tournament EP streams and so on and I think that it was the de facto option here would be SNS where you can have a",
    "start": "1880430",
    "end": "1887780"
  },
  {
    "text": "topic that's been subscribed by many different lambda functions and every time you publish message is going to",
    "start": "1887780",
    "end": "1893750"
  },
  {
    "text": "create invocation for each of those subscribers and the thing you get with",
    "start": "1893750",
    "end": "1899030"
  },
  {
    "text": "SNS and lambda is that because it's an asynchronous events or lambda you get to",
    "start": "1899030",
    "end": "1904760"
  },
  {
    "text": "retry after the box process the port for the letter Q as well so if you publish a",
    "start": "1904760",
    "end": "1909890"
  },
  {
    "text": "message and it triggers the lambda function and their function errors for some reason you get to retry after the",
    "start": "1909890",
    "end": "1915950"
  },
  {
    "text": "box and if you configure tell adhere on a function then the the event that was felt lambda couldn't process will also",
    "start": "1915950",
    "end": "1923690"
  },
  {
    "text": "get pushed into that delta q automatically which could be sqs q or it could be another SNS topic as well as I",
    "start": "1923690",
    "end": "1932360"
  },
  {
    "text": "mentioned with SNS and lambda is a one invocation per message per subscriber so",
    "start": "1932360",
    "end": "1937640"
  },
  {
    "text": "again this is where we have to because we have to be conscious about the amount of the amount traffic that we exposed to",
    "start": "1937640",
    "end": "1944300"
  },
  {
    "text": "our downstream system but also the fact that with lambda you have a soft limit on the number of concurrent executions",
    "start": "1944300",
    "end": "1950390"
  },
  {
    "text": "you have per region which by default is a 1000 even though you can decrease that with a support ticket but again when",
    "start": "1950390",
    "end": "1957830"
  },
  {
    "text": "you're not careful you can have also have too many concurrent seclusion happening and end up causing all your",
    "start": "1957830",
    "end": "1963860"
  },
  {
    "text": "other functions to be straight out as well and we fastened s you can also",
    "start": "1963860",
    "end": "1969380"
  },
  {
    "text": "suffer from a temporal issues that you can experience for example if you well in a simple case where you have a very",
    "start": "1969380",
    "end": "1976610"
  },
  {
    "text": "small spike in traffic and you experienced some errors because the downstream couldn't handle that spike in",
    "start": "1976610",
    "end": "1982100"
  },
  {
    "text": "traffic because of the reach highs chances are those reach are is going to kick in the moments later and you'll be",
    "start": "1982100",
    "end": "1988280"
  },
  {
    "text": "fine then but if your spike in traffic is sustained for a long period of time so then even the reach wise can then",
    "start": "1988280",
    "end": "1996140"
  },
  {
    "text": "still be fail because of that the spike in traffic and because the downstream is still under stress and if your",
    "start": "1996140",
    "end": "2002980"
  },
  {
    "text": "downstream is having really bad day and is just suffering an outage for some period of time then you can then or even",
    "start": "2002980",
    "end": "2010119"
  },
  {
    "text": "all your rich highs and any message that gets receive and processing that time who also just fail so if that's you if",
    "start": "2010119",
    "end": "2017950"
  },
  {
    "text": "if you're concerned about again if your concern about the amount super you",
    "start": "2017950",
    "end": "2024159"
  },
  {
    "text": "exposed to a downstream as well as the temporal issues then condense is also a very interesting option here as a broker",
    "start": "2024159",
    "end": "2030610"
  },
  {
    "text": "we've Kinesis to retry is behavior such that if Canisius caused your function",
    "start": "2030610",
    "end": "2035739"
  },
  {
    "text": "with a bunch of records and your function errors for whatever reason then Canisius will just keep calling your",
    "start": "2035739",
    "end": "2041409"
  },
  {
    "text": "farm the same patch of records until either the data has now expired from the stream or your function eventually is",
    "start": "2041409",
    "end": "2048339"
  },
  {
    "text": "able to succeed in processing that patch as we talked about earlier we've Kinesis",
    "start": "2048339",
    "end": "2053710"
  },
  {
    "text": "and lambda is one invocation per shot so you have a fine control over the command",
    "start": "2053710",
    "end": "2058750"
  },
  {
    "text": "concurrency that you have at the work layer and the return to success mechanism allows you to have a better",
    "start": "2058750",
    "end": "2065950"
  },
  {
    "text": "control while we allow you to deal with temporal issues a lot better for",
    "start": "2065950",
    "end": "2070960"
  },
  {
    "text": "starters we amortized any spikes in traffic with concurrency but if the down stream is having a problem and all of",
    "start": "2070960",
    "end": "2077378"
  },
  {
    "text": "everything or attempt to extract the downstream is failing then because it's which one this is until success so the whole system we",
    "start": "2077379",
    "end": "2084339"
  },
  {
    "text": "just keep on we trying until eventually the down stream comes back and we just continue on from before at the mass and",
    "start": "2084339",
    "end": "2090520"
  },
  {
    "text": "amount stupid that's detected by the amount number of number of shots we have in the stream so we don't win us when",
    "start": "2090520",
    "end": "2096398"
  },
  {
    "text": "the downstream system comes back online we don't just overwhelm it with all this traffic that's been stored and not in",
    "start": "2096399",
    "end": "2102609"
  },
  {
    "text": "the process and besides Kinesis you also have done MTB streams as well in the AWS",
    "start": "2102609",
    "end": "2109380"
  },
  {
    "text": "so a question I get asked often is no way to know you should use Canisius",
    "start": "2109380",
    "end": "2114400"
  },
  {
    "text": "stream or talented DynamoDB streams instead and how do you choose between the two I think the most important",
    "start": "2114400",
    "end": "2120369"
  },
  {
    "text": "question to ask is what is your source of truth in this case for a lot of",
    "start": "2120369",
    "end": "2126190"
  },
  {
    "text": "systems that were building done with the source of truth is the probability going to be the database something gets",
    "start": "2126190",
    "end": "2132010"
  },
  {
    "text": "written to the database Minster is now cannon to the state of our system unless",
    "start": "2132010",
    "end": "2137109"
  },
  {
    "text": "you're building an eventual system whereby software by this is not it's not listen it's not the the",
    "start": "2137109",
    "end": "2143410"
  },
  {
    "text": "it's not one thing based is the accumulation of all the events has happened that you can occasionally",
    "start": "2143410",
    "end": "2149500"
  },
  {
    "text": "create snapshots on four of course but for those kind of systems the source of truth becomes event stream itself as",
    "start": "2149500",
    "end": "2156279"
  },
  {
    "text": "opposed to say whatever snapshot is created for the states and there's a lot",
    "start": "2156279",
    "end": "2162099"
  },
  {
    "text": "of things to consider around dynamic TV streams as well that it's your limited chip because it's the",
    "start": "2162099",
    "end": "2167829"
  },
  {
    "text": "stream is tied to a particular table so you're limited to the events there are I guess the match that are matched to",
    "start": "2167829",
    "end": "2174849"
  },
  {
    "text": "whatever data you have in that particular table and those events describe domain dice tournament eBay so",
    "start": "2174849",
    "end": "2182680"
  },
  {
    "text": "items updated items inserted or items deleted they don't necessary describe",
    "start": "2182680",
    "end": "2189160"
  },
  {
    "text": "what's happened in your system which could be we should be user created user",
    "start": "2189160",
    "end": "2194230"
  },
  {
    "text": "profile modified profile image updated and so on those are the application",
    "start": "2194230",
    "end": "2199269"
  },
  {
    "text": "level events that we want to work with but when we work internally TV streams we have two that the mapping in our own",
    "start": "2199269",
    "end": "2206049"
  },
  {
    "text": "head that okay of right through this particular table means use has been created and we have the work with the",
    "start": "2206049",
    "end": "2212680"
  },
  {
    "text": "DynamoDB domain events instead and from the operational side of things are also",
    "start": "2212680",
    "end": "2218200"
  },
  {
    "text": "some interesting differences for example with Donovan TP it also scales the number of shots in the stream which is",
    "start": "2218200",
    "end": "2224980"
  },
  {
    "text": "on one hand is goofing it means that we don't have to implement some kind of auto scaling mechanism ourselves for",
    "start": "2224980",
    "end": "2230559"
  },
  {
    "text": "Kinesis but on the other hand where we want to have a fine control over the",
    "start": "2230559",
    "end": "2235750"
  },
  {
    "text": "amount concurrency that we have now this again can start impact us because the",
    "start": "2235750",
    "end": "2241329"
  },
  {
    "text": "system will automatically scale the number of shots in the stream which means we can now if we use internal",
    "start": "2241329",
    "end": "2246609"
  },
  {
    "text": "Madiba stream as the broker we can now we can now increase we can now with our",
    "start": "2246609",
    "end": "2251980"
  },
  {
    "text": "control increase in amount report that we exposing to the downstream system that we're working with another thing to",
    "start": "2251980",
    "end": "2259329"
  },
  {
    "text": "keep in mind is that we've Kinesis you can extend the default 24 hours later attention to your thing up to two",
    "start": "2259329",
    "end": "2266049"
  },
  {
    "text": "weeks now but we've done MTB streams you can't do that if you're limited to 24 hours of data retention",
    "start": "2266049",
    "end": "2273370"
  },
  {
    "text": "in terms of cost Canisius charging you based on request count as well as the",
    "start": "2273370",
    "end": "2278770"
  },
  {
    "text": "number of shots or shot hours we've done on me TV streams the only charge based",
    "start": "2278770",
    "end": "2284650"
  },
  {
    "text": "on a number of poll requests you make which interestingly when you process them from lambda those charges are free",
    "start": "2284650",
    "end": "2292300"
  },
  {
    "text": "so which means that if you're using tournament EP already you kind of get the stream for free of course you still",
    "start": "2292300",
    "end": "2298660"
  },
  {
    "text": "pay for this read and write stripper on the table itself but the stree in the use of the stream itself is actually",
    "start": "2298660",
    "end": "2304600"
  },
  {
    "text": "comes as free which is quite interesting so if you compare the cost of a different event sources that we've",
    "start": "2304600",
    "end": "2310900"
  },
  {
    "text": "discussed today Kinesis versus as a nest versus tournament eps and assuming that",
    "start": "2310900",
    "end": "2316300"
  },
  {
    "text": "you're only doing one message per second this is how much it's likely to cost you per month which from that you may say",
    "start": "2316300",
    "end": "2323980"
  },
  {
    "text": "well Kinesis is really really expensive by comparison because it's more than order magnitude more expensive compared",
    "start": "2323980",
    "end": "2331090"
  },
  {
    "text": "to animal TP but when scaled up to say a thousand messages per second the picture",
    "start": "2331090",
    "end": "2337660"
  },
  {
    "text": "now looks very very different because with with Kinesis sure you have to pay for shallower so when even when you",
    "start": "2337660",
    "end": "2344590"
  },
  {
    "text": "don't have enough stripper you still pay for them even when no one is sending you any events you Kinesis you still have to",
    "start": "2344590",
    "end": "2349870"
  },
  {
    "text": "pay for the shot but in terms of the the cost per million request Kinesis is much cheaper compared to the",
    "start": "2349870",
    "end": "2356440"
  },
  {
    "text": "other options so as you go to some it goes even a moderate amount of scale as",
    "start": "2356440",
    "end": "2361750"
  },
  {
    "text": "an S can be drastically more expensive compared to Kinesis of course those",
    "start": "2361750",
    "end": "2368050"
  },
  {
    "text": "there's a lot of things that can affect how much you're actually gonna pay including the exercise of your payload",
    "start": "2368050",
    "end": "2373570"
  },
  {
    "text": "and so on so those are just estimates based on some very strict assumptions",
    "start": "2373570",
    "end": "2379320"
  },
  {
    "text": "but it's news needle straight the point that you when you think about the cost of the event sources that you want to",
    "start": "2379320",
    "end": "2385270"
  },
  {
    "text": "work with you have to think about the scale that you're dealing with that has some that can have a massive difference",
    "start": "2385270",
    "end": "2390610"
  },
  {
    "text": "in terms of how much you end up paying and you never stop there as well you can",
    "start": "2390610",
    "end": "2397660"
  },
  {
    "text": "also have pops up on top pops up we can have your lambda function also act as a broker to send to for messages on to",
    "start": "2397660",
    "end": "2404710"
  },
  {
    "text": "other systems which allows you to the hand have to have subscribers they are not",
    "start": "2404710",
    "end": "2411010"
  },
  {
    "text": "necessarily supported by any of the any of the event sources that we have for example SNS doesn't support s3 this is a",
    "start": "2411010",
    "end": "2417910"
  },
  {
    "text": "poor number of others downstream systems they may want to use you can use your own lambda function to do that the job",
    "start": "2417910",
    "end": "2423910"
  },
  {
    "text": "of the broker but when you do that you also then take on the responsibility of dealing with partial failures so if your",
    "start": "2423910",
    "end": "2430839"
  },
  {
    "text": "lambda function is reacting to an event that's been popping you as an S and you have to notify all these different",
    "start": "2430839",
    "end": "2436809"
  },
  {
    "text": "downstream systems what happens if one of them fails do you then we tried everything or do you then have to",
    "start": "2436809",
    "end": "2443740"
  },
  {
    "text": "remember the only one fails that you just keep on referring that particular event source so that's the particulars",
    "start": "2443740",
    "end": "2450940"
  },
  {
    "text": "of subscriber then you have taken that responsibility yourself for managing exceptions and managing partial failures",
    "start": "2450940",
    "end": "2458190"
  },
  {
    "text": "and the last part I wanna touch on is the saga pattern which is a pattern for",
    "start": "2458190",
    "end": "2463210"
  },
  {
    "text": "managing failures in the disability transaction which when you have a microservices is something that we tend",
    "start": "2463210",
    "end": "2469450"
  },
  {
    "text": "to run into very often when a particular user action triggers multiple API calls",
    "start": "2469450",
    "end": "2474819"
  },
  {
    "text": "against different micro services all of them then know that becomes a disability transaction when one of them fails we",
    "start": "2474819",
    "end": "2481690"
  },
  {
    "text": "potentially have the flow pack or the state change that we have made as already so Katie McCaffrey I think she's",
    "start": "2481690",
    "end": "2488829"
  },
  {
    "text": "still at the Twitter she didn't really talk and go to a couple years ago on the saga pattern itself and one example - e",
    "start": "2488829",
    "end": "2496000"
  },
  {
    "text": "juice was say a travel booking system whereby you have a transaction that involves booking a hotel booking a fly",
    "start": "2496000",
    "end": "2502869"
  },
  {
    "text": "and poking your car renter and so on and what happens if a bogey or if the hotel",
    "start": "2502869",
    "end": "2508540"
  },
  {
    "text": "successful and the flower cessful and the car rental fare for whatever reason now you need to roll back the entire",
    "start": "2508540",
    "end": "2514540"
  },
  {
    "text": "transaction and all state changes that you've introduced so far so we functions",
    "start": "2514540",
    "end": "2520809"
  },
  {
    "text": "you can model your actions as well as the rollback in all the comments and actions as individual functions so those",
    "start": "2520809",
    "end": "2528819"
  },
  {
    "text": "are my actions and which one of them I have a matching and opposite compensating action to rollback the",
    "start": "2528819",
    "end": "2534970"
  },
  {
    "text": "state change and to to orchestrate that I need to have something that can the",
    "start": "2534970",
    "end": "2540580"
  },
  {
    "text": "they can orchestrate my transaction and that's where something like staff functions or as your logic apps can come",
    "start": "2540580",
    "end": "2546550"
  },
  {
    "text": "in as the orchestrator for the transaction whereby I have the start I",
    "start": "2546550",
    "end": "2552850"
  },
  {
    "text": "have 10 if you can use the start I have my book hotel action and if that's a seat then you move on to the next one to",
    "start": "2552850",
    "end": "2559390"
  },
  {
    "text": "prove the fly and intercedes goes to the rental page and when everything's on",
    "start": "2559390",
    "end": "2564520"
  },
  {
    "text": "happy path then we're going to finish the transaction but if any one any one stage one of one of these guys fails",
    "start": "2564520",
    "end": "2570820"
  },
  {
    "text": "then we go to the compensating actions for that particular book flight action",
    "start": "2570820",
    "end": "2576610"
  },
  {
    "text": "and then we also when the finishes we also going to execute the cancellation for the hotel as well and then we go to",
    "start": "2576610",
    "end": "2582520"
  },
  {
    "text": "finish in the failed stay for the whole transaction so suppose I want to visit",
    "start": "2582520",
    "end": "2587740"
  },
  {
    "text": "Dublin I wanna stay in the Premier Inn then again form a happy path I can see",
    "start": "2587740",
    "end": "2592840"
  },
  {
    "text": "that - those are the function that's been executed but if the hotel if",
    "start": "2592840",
    "end": "2598300"
  },
  {
    "text": "booking without fail then you execute the compensating actions for the broken hotel and similarly when the flight",
    "start": "2598300",
    "end": "2604840"
  },
  {
    "text": "booking fails you execute the compensating actions for a flop flight booking and then the hotel booking as",
    "start": "2604840",
    "end": "2610900"
  },
  {
    "text": "well all the codes available and github so feel free to go and play and play",
    "start": "2610900",
    "end": "2616330"
  },
  {
    "text": "around with that I mentioned a lot I mentioned at the start about some of the things that you have to do when you go",
    "start": "2616330",
    "end": "2622540"
  },
  {
    "text": "to serve less in terms of the how do you do operation sort of things I've also put a course together based on a lot of",
    "start": "2622540",
    "end": "2628480"
  },
  {
    "text": "things I've learned in my time we're fermenting so you can also get it from the Mannings the early assets program",
    "start": "2628480",
    "end": "2634180"
  },
  {
    "text": "and get 40% off with that code I'm also going to be talking about how to apply",
    "start": "2634180",
    "end": "2639430"
  },
  {
    "text": "the principles of chaos engineering to serve less when now we don't have service anymore so a lot of tools that",
    "start": "2639430",
    "end": "2645910"
  },
  {
    "text": "we use for - in chaos engine today in terms of the chaos monkey and the simian army of this world the neuron can apply",
    "start": "2645910",
    "end": "2652930"
  },
  {
    "text": "because infrastructure is not in our control anymore how to read and still to resilience testing with service I'm",
    "start": "2652930",
    "end": "2660280"
  },
  {
    "text": "going to do that with the atria user group here in the Oslo I think a 5:30 tonight and that does everything of God",
    "start": "2660280",
    "end": "2669010"
  },
  {
    "text": "thank you guys very much for coming so early",
    "start": "2669010",
    "end": "2673650"
  },
  {
    "text": "[Applause]",
    "start": "2674790",
    "end": "2684420"
  },
  {
    "text": "the whole time so even with a patient's",
    "start": "2689750",
    "end": "2715710"
  },
  {
    "text": "a service when you keep bugging them your studio you still have to rely on the tracing as you cross from one service another so typically we say with",
    "start": "2715710",
    "end": "2724590"
  },
  {
    "text": "application service or even function service you have your you have your working logically we've advocated a",
    "start": "2724590",
    "end": "2729960"
  },
  {
    "text": "service so you've got an API and the chances are you have one API pin entry point that kind of talk to another API",
    "start": "2729960",
    "end": "2735930"
  },
  {
    "text": "and internal API and so on so in terms of challenges is the same instant debugging you still need this",
    "start": "2735930",
    "end": "2741920"
  },
  {
    "text": "reinterpret to street racing so with lambda you can do the same thing as well and that's one of the things",
    "start": "2741920",
    "end": "2747150"
  },
  {
    "text": "I've done in the past where part is I've got I've got me to wear for my lambda function so that when an event comes in",
    "start": "2747150",
    "end": "2753840"
  },
  {
    "text": "I inspect the event and extract those collation IDs and I make sure that including every single lock message that",
    "start": "2753840",
    "end": "2760680"
  },
  {
    "text": "produced from the function and when I make HTTP call or when I send a message to SNS and so on those collation IDs are",
    "start": "2760680",
    "end": "2767250"
  },
  {
    "text": "also automatically included in those outgoing communications so that when I publish a message there's an S that",
    "start": "2767250",
    "end": "2773790"
  },
  {
    "text": "triggers and a lambda function and those correlation ID will be included in the in the event that that other function",
    "start": "2773790",
    "end": "2780270"
  },
  {
    "text": "receives and you also extract them automatically used using the middleware so that includes for me right now that's",
    "start": "2780270",
    "end": "2787290"
  },
  {
    "text": "not a very good set of common tools they can use are having to reinvent a same tooth in multiple places now but the",
    "start": "2787290",
    "end": "2794400"
  },
  {
    "text": "idea is quite similar in terms of you have middleware that there's the capturing side of things and then you have lock custom blockers that knows",
    "start": "2794400",
    "end": "2801060"
  },
  {
    "text": "where to find those correlation ID you have you have extracted and then you have custom clients for a tea",
    "start": "2801060",
    "end": "2807030"
  },
  {
    "text": "P and a diversity K that essentially wraps around the a twisty K itself and injects those collation IDs so that as a",
    "start": "2807030",
    "end": "2814770"
  },
  {
    "text": "developer I don't have the constant you think about okay now I need to inspecting the invocation events get",
    "start": "2814770",
    "end": "2822600"
  },
  {
    "text": "collation IDs include them I make sure that I include them in every single time I lock a lock something for my function",
    "start": "2822600",
    "end": "2828450"
  },
  {
    "text": "so you still get the same so the same source support from the the tracing side of things where if something happens I",
    "start": "2828450",
    "end": "2835410"
  },
  {
    "text": "can go to the my lock aggregation service and look for some user ID for example I can see all the other",
    "start": "2835410",
    "end": "2842880"
  },
  {
    "text": "functions that has done something for that particular user or could be over the ID and also to use things like",
    "start": "2842880",
    "end": "2849330"
  },
  {
    "text": "sampling as well so in production I don't lock at epoch I lock at 1% sample rate and when except for when",
    "start": "2849330",
    "end": "2857010"
  },
  {
    "text": "there's an error so he was one function errors then I done I always locked the",
    "start": "2857010",
    "end": "2862680"
  },
  {
    "text": "invocation event itself so it has captured and I can then we play that event invocation locally so it's the",
    "start": "2862680",
    "end": "2870210"
  },
  {
    "text": "same challenges before nothing has really changed the tooling has the charts to be adapted to support a new so",
    "start": "2870210",
    "end": "2876360"
  },
  {
    "text": "no functions right in application the same idea",
    "start": "2876360",
    "end": "2881390"
  },
  {
    "text": "so the question is that your looks very nice but looks a lot vendor lock-in as well so with the service framework guys",
    "start": "2889150",
    "end": "2895190"
  },
  {
    "text": "they've actually started doing this raincoat event gateway so that's potentially one way way if we get out of",
    "start": "2895190",
    "end": "2901910"
  },
  {
    "text": "the vendor lock-in whereby you have a standard set of events that can get mapped to different providers and a set",
    "start": "2901910",
    "end": "2908359"
  },
  {
    "text": "of framework itself the post-deployment to different vendors anyway but I know when the lock-in is you know it's a risk",
    "start": "2908359",
    "end": "2915140"
  },
  {
    "text": "but to be honest I don't think it's a problem that many people actually have to deal with and I have seen a lot of",
    "start": "2915140",
    "end": "2920690"
  },
  {
    "text": "people and a lot of companies try to do so come up with solutions to this problem that they may have some time the",
    "start": "2920690",
    "end": "2925999"
  },
  {
    "text": "future end up creating this all is over engineering just to compensate for that and it's something that I they end up",
    "start": "2925999",
    "end": "2931609"
  },
  {
    "text": "having to pay for for a very long time because you're dealing with your own customers abstractions and you're in the",
    "start": "2931609",
    "end": "2937549"
  },
  {
    "text": "Hampton use the least common denominator across all little providers that you may potentially want to work with for me it",
    "start": "2937549",
    "end": "2944989"
  },
  {
    "text": "I used to cook up a query I use different services from different providers so ultimately all those things",
    "start": "2944989",
    "end": "2951739"
  },
  {
    "text": "are different service that you can use so nothing really stops you from say using lambda for some stuff but other",
    "start": "2951739",
    "end": "2957589"
  },
  {
    "text": "things too where does the sparrow service in nature for example I mean some AI service is a lot better in a",
    "start": "2957589",
    "end": "2963170"
  },
  {
    "text": "short and lambda and then than a the rear so I'm quite happy to have something that's also running in a show",
    "start": "2963170",
    "end": "2968900"
  },
  {
    "text": "and then use HTTP so ultimate different subsystems can just talk to each other v DP that way as well so when the",
    "start": "2968900",
    "end": "2976249"
  },
  {
    "text": "locking is interesting topic not a lot of people worry about that in practice or haven't seen many people actually run",
    "start": "2976249",
    "end": "2982039"
  },
  {
    "text": "into that particular problem and when they have I've yet to see the instance where part of the world you've done to",
    "start": "2982039",
    "end": "2988039"
  },
  {
    "text": "prevent vendor lock-in actually helps you when you do in the Humpty know - if",
    "start": "2988039",
    "end": "2993200"
  },
  {
    "text": "that in the same way that we all use the ORM for many years worried about database migration but when it does",
    "start": "2993200",
    "end": "2998839"
  },
  {
    "text": "happen is still just so much work to do anyway so yeah for me it's a it's",
    "start": "2998839",
    "end": "3005229"
  },
  {
    "text": "something something should be conscious of but maybe not necessarily try to solve until you actually have that",
    "start": "3005229",
    "end": "3011469"
  },
  {
    "text": "problem many more questions okay Eve now I'm gonna be oh that's this",
    "start": "3011469",
    "end": "3018160"
  },
  {
    "text": "so I can't even see this",
    "start": "3018160",
    "end": "3021880"
  }
]