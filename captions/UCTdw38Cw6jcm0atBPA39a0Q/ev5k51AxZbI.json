[
  {
    "text": "so I will start with what I hope will be the most boring part of this",
    "start": "30",
    "end": "6390"
  },
  {
    "text": "presentation I will introduce myself so my name is Vlad econ enough I came here",
    "start": "6390",
    "end": "13349"
  },
  {
    "text": "from Israel I work in our industry for almost 20 years nine of them in the role",
    "start": "13349",
    "end": "20910"
  },
  {
    "text": "of Software Architect and software architecture is not only my job but it",
    "start": "20910",
    "end": "27090"
  },
  {
    "text": "also became a hobby I really loved you know researching this topic blogging",
    "start": "27090",
    "end": "32130"
  },
  {
    "text": "about it and of course speaking at conferences like this today I want to",
    "start": "32130",
    "end": "38550"
  },
  {
    "text": "talk about messenger messaging and more specifically about the architectural",
    "start": "38550",
    "end": "44460"
  },
  {
    "text": "pattern we usually call events and the thing is events there like everywhere",
    "start": "44460",
    "end": "50910"
  },
  {
    "text": "nowadays event-driven architecture is based on events events events sourcing",
    "start": "50910",
    "end": "56670"
  },
  {
    "text": "finally getting the attention it deserves it's also based on events",
    "start": "56670",
    "end": "62059"
  },
  {
    "text": "microservices are everywhere and many are calling for integrating them",
    "start": "62059",
    "end": "68490"
  },
  {
    "text": "asynchronously through events as well however this popularity came with a cost",
    "start": "68490",
    "end": "75170"
  },
  {
    "text": "some how many see the events as some kind of you know secret sauce for",
    "start": "75170",
    "end": "81020"
  },
  {
    "text": "preparing distributed systems as if you can take a monolith pour some events",
    "start": "81020",
    "end": "86820"
  },
  {
    "text": "over it boom you've got yourself micro services the management design and of",
    "start": "86820",
    "end": "92820"
  },
  {
    "text": "course modern architecture of course it's not really true events are not some",
    "start": "92820",
    "end": "99000"
  },
  {
    "text": "magic but they're just a tool and as any tool it can be used to create some great",
    "start": "99000",
    "end": "105930"
  },
  {
    "text": "stuff but if you are going to abuse it or misuse it it's a great way to take",
    "start": "105930",
    "end": "112020"
  },
  {
    "text": "your legs off and actually I have experience of doing both so in the next",
    "start": "112020",
    "end": "118409"
  },
  {
    "text": "hour I want to share with you my experience the mistakes I did how we",
    "start": "118409",
    "end": "124049"
  },
  {
    "text": "were able to fix them and most importantly what we've learned from this experience and I hope it will be helpful",
    "start": "124049",
    "end": "130860"
  },
  {
    "text": "to you and you will be able to skip this learning phase and since we",
    "start": "130860",
    "end": "137200"
  },
  {
    "text": "are talking about an architectural pattern I want to start from the basics to make sure that we are on the same",
    "start": "137200",
    "end": "144970"
  },
  {
    "text": "page about what is software architecture what are its goals and how to evaluate",
    "start": "144970",
    "end": "151420"
  },
  {
    "text": "software architecture like what's the difference between a good one and a bad one then we'll do the same for the event",
    "start": "151420",
    "end": "159670"
  },
  {
    "text": "pattern again we'll see the definition of this pattern what an event is and",
    "start": "159670",
    "end": "165489"
  },
  {
    "text": "then we also see that not all events are made the same and instead actually there are three types or flavors of events which are",
    "start": "165489",
    "end": "173590"
  },
  {
    "text": "used for messaging next I will share some scary war stories on how",
    "start": "173590",
    "end": "180280"
  },
  {
    "text": "distributed system design can go wrong and of course the discussion will be based heavily on the preceding",
    "start": "180280",
    "end": "187389"
  },
  {
    "text": "theoretical part on software architecture and events and I will finish with three heuristics like simple",
    "start": "187389",
    "end": "196329"
  },
  {
    "text": "rules of thumb that I am using today when applying messaging you know to evaluate and keep distributed system",
    "start": "196329",
    "end": "203440"
  },
  {
    "text": "architecture contract on track so without further ado what is software",
    "start": "203440",
    "end": "210639"
  },
  {
    "text": "architecture and when answering this",
    "start": "210639",
    "end": "215859"
  },
  {
    "text": "question usually two quotes come to mind the first one is by Ralph Johnson who",
    "start": "215859",
    "end": "222489"
  },
  {
    "text": "said that architecture is about the importance stuff whatever that is and",
    "start": "222489",
    "end": "229290"
  },
  {
    "text": "Martin Fowler who said that software architecture is those decisions which",
    "start": "229290",
    "end": "235959"
  },
  {
    "text": "are both important and hard to change now both these authors stressed the",
    "start": "235959",
    "end": "242470"
  },
  {
    "text": "importance of architecture and I guess no one would argue with that right",
    "start": "242470",
    "end": "247900"
  },
  {
    "text": "we built software not for expressing ourselves but to solve business problems",
    "start": "247900",
    "end": "253569"
  },
  {
    "text": "for organizations which are going to be using this software and software can",
    "start": "253569",
    "end": "260049"
  },
  {
    "text": "make companies more efficient it can increase their competitive advantage profitability",
    "start": "260049",
    "end": "266000"
  },
  {
    "text": "in some cases software even enables the business itself for example when",
    "start": "266000",
    "end": "271910"
  },
  {
    "text": "software is the company is the product that company is selling there are four",
    "start": "271910",
    "end": "278450"
  },
  {
    "text": "robust software architecture and design is not something which is nice to have",
    "start": "278450",
    "end": "283900"
  },
  {
    "text": "instead it's crucial for the success not only of the system but of the whole",
    "start": "283900",
    "end": "290240"
  },
  {
    "text": "organization that is going to be serving and that's what makes those",
    "start": "290240",
    "end": "295690"
  },
  {
    "text": "architectural decisions so important and unfortunately hard for example eight",
    "start": "295690",
    "end": "303260"
  },
  {
    "text": "years ago I was the first employee of a company called intra novice and I had to",
    "start": "303260",
    "end": "309620"
  },
  {
    "text": "plan and design its architecture from scratch so we had to decide whether to",
    "start": "309620",
    "end": "315230"
  },
  {
    "text": "use self-manage servers or go to the cloud they also like the old days before",
    "start": "315230",
    "end": "320630"
  },
  {
    "text": "cloud was cool we also have had to choose whether to dive into the brave new world of no",
    "start": "320630",
    "end": "326900"
  },
  {
    "text": "sequel or to stay where we are most comfortable with relational databases of",
    "start": "326900",
    "end": "332720"
  },
  {
    "text": "course we also had to choose languages frameworks patents architectural styles",
    "start": "332720",
    "end": "337940"
  },
  {
    "text": "etc now not only these decisions were hard but they also involved lots of risk",
    "start": "337940",
    "end": "345740"
  },
  {
    "text": "you know one wrong step could make the system way more complex to implement in",
    "start": "345740",
    "end": "351320"
  },
  {
    "text": "to maintain both in short and long terms therefore in my opinion the goal of",
    "start": "351320",
    "end": "358580"
  },
  {
    "text": "software architecture is to manage systems complexity and we manage this",
    "start": "358580",
    "end": "365300"
  },
  {
    "text": "architectural complexity by decomposing systems in two sets of interconnected",
    "start": "365300",
    "end": "370700"
  },
  {
    "text": "components modules those modules can appear at different levels they can be",
    "start": "370700",
    "end": "375979"
  },
  {
    "text": "methods classes namespaces services and even whole systems but in this",
    "start": "375979",
    "end": "381860"
  },
  {
    "text": "presentation I will speak about modules in context of a microservices so at",
    "start": "381860",
    "end": "388850"
  },
  {
    "text": "whatever levels modules are they make it more they make it easier to reason about",
    "start": "388850",
    "end": "395169"
  },
  {
    "text": "responsibility of each module and its interactions with the rest of the system moreover modularity",
    "start": "395169",
    "end": "403130"
  },
  {
    "text": "simplifies understanding of the system as a whole with proper map a modules",
    "start": "403130",
    "end": "409580"
  },
  {
    "text": "it's easier to grasp what the system is supposed to do and how does it work on",
    "start": "409580",
    "end": "417010"
  },
  {
    "text": "the architecture level modularity reduces risk of the system's design it",
    "start": "417010",
    "end": "423350"
  },
  {
    "text": "limits the scope of those implementation decisions to the scope of each module so",
    "start": "423350",
    "end": "428990"
  },
  {
    "text": "for one module you can choose for example a relational database for another one something more modern",
    "start": "428990",
    "end": "435190"
  },
  {
    "text": "in other words modularity helps us to manage systems complexity it does that",
    "start": "435190",
    "end": "442010"
  },
  {
    "text": "by dividing this complexity into two parts the first one is local complexity",
    "start": "442010",
    "end": "448210"
  },
  {
    "text": "local complexity is complexity of a specific component and I think the",
    "start": "448210",
    "end": "456500"
  },
  {
    "text": "easiest way to demonstrate this idea is you know if you have a module and you",
    "start": "456500",
    "end": "462800"
  },
  {
    "text": "want to evaluate it slow its local complexity complexity ask how hard will",
    "start": "462800",
    "end": "469340"
  },
  {
    "text": "it be for a junior team member to grasp what's going on inside of this module",
    "start": "469340",
    "end": "475729"
  },
  {
    "text": "water its goals what's the business domain of it what it's doing and how does it work for example in our company",
    "start": "475729",
    "end": "483560"
  },
  {
    "text": "we had a module which was in charge of Commission's calculating Commission's for sales agents and you know its public",
    "start": "483560",
    "end": "492470"
  },
  {
    "text": "API resembled a resembled a coherent set of methods which all of them were",
    "start": "492470",
    "end": "498260"
  },
  {
    "text": "related in this way when I read those Commission's on the other hand we had a",
    "start": "498260",
    "end": "504949"
  },
  {
    "text": "much bigger module and at some point in code logic for managing advertising",
    "start": "504949",
    "end": "510470"
  },
  {
    "text": "campaigns contracts with publishers creative catalog and even finances so",
    "start": "510470",
    "end": "516800"
  },
  {
    "text": "you know I don't need even a junior team member sometimes I would look at it and",
    "start": "516800",
    "end": "521810"
  },
  {
    "text": "have no idea what's going on there therefore its local local complexity it's way way higher the second type of",
    "start": "521810",
    "end": "530870"
  },
  {
    "text": "systems complexity is global complexity it is defined by the",
    "start": "530870",
    "end": "536570"
  },
  {
    "text": "level of interconnectedness between the system's components with low",
    "start": "536570",
    "end": "542360"
  },
  {
    "text": "interconnectedness you know it's easier to understand what role each component plays in the system and it's also easier",
    "start": "542360",
    "end": "549980"
  },
  {
    "text": "to evolve components you know since modifications will have lower impact too",
    "start": "549980",
    "end": "555860"
  },
  {
    "text": "on the rest of the system we are modifying only one component here's an",
    "start": "555860",
    "end": "561709"
  },
  {
    "text": "example with relatively I think it's it has a low global complexity it has five",
    "start": "561709",
    "end": "566839"
  },
  {
    "text": "components and you know we can trace all the dependency between them and on the",
    "start": "566839",
    "end": "572300"
  },
  {
    "text": "other hand here we have the same number of components but way more connections",
    "start": "572300",
    "end": "577730"
  },
  {
    "text": "between them and that makes global complexity of this system higher than the previous one",
    "start": "577730",
    "end": "584890"
  },
  {
    "text": "thus this process of defining components boundaries is actually a key",
    "start": "584890",
    "end": "591050"
  },
  {
    "text": "architectural decision proper boundaries reduce complexity of the system and make",
    "start": "591050",
    "end": "596899"
  },
  {
    "text": "it more adaptable to future requirements and changes so if you go back to the",
    "start": "596899",
    "end": "603230"
  },
  {
    "text": "question of what is software architecture I think Ruth Millan gave a",
    "start": "603230",
    "end": "609860"
  },
  {
    "text": "crystal clear answer she said that system design is inherently about boundaries what's in",
    "start": "609860",
    "end": "617240"
  },
  {
    "text": "what's out what spends and what moves between those boundaries it reshapes",
    "start": "617240",
    "end": "622700"
  },
  {
    "text": "what's outside just as it shapes what is inside so system design is about drawing",
    "start": "622700",
    "end": "630589"
  },
  {
    "text": "components boundaries and speaking of what moves between those boundaries",
    "start": "630589",
    "end": "637510"
  },
  {
    "text": "let's talk about events as I said in the introduction it's a common practice",
    "start": "637510",
    "end": "644300"
  },
  {
    "text": "today to use events for loosening coupling between the systems systems components right and the idea behind",
    "start": "644300",
    "end": "652190"
  },
  {
    "text": "this pattern is actually very simple an event is just a message which is used as",
    "start": "652190",
    "end": "660800"
  },
  {
    "text": "a contract for integrating systems some system can",
    "start": "660800",
    "end": "666630"
  },
  {
    "text": "publish its events and other systems who are interested in that information can",
    "start": "666630",
    "end": "672120"
  },
  {
    "text": "subscribe to those events therefore in this scenario the event plays the role",
    "start": "672120",
    "end": "677790"
  },
  {
    "text": "of integration contract between those systems of course events can take",
    "start": "677790",
    "end": "683610"
  },
  {
    "text": "different forms they can be a JSON documents XML files protobuf but",
    "start": "683610",
    "end": "689569"
  },
  {
    "text": "whatever way you choose to represent the events the idea behind them is the same",
    "start": "689569",
    "end": "695190"
  },
  {
    "text": "an event is just a data structure with no behavior attached to it it only",
    "start": "695190",
    "end": "702029"
  },
  {
    "text": "represent represents something interesting that happened in the past for example in our company we have event",
    "start": "702029",
    "end": "709470"
  },
  {
    "text": "called click impression campaign started a paycheck generated etc now if you look",
    "start": "709470",
    "end": "717360"
  },
  {
    "text": "into what's going in what's going on inside of the event usually it contains",
    "start": "717360",
    "end": "722430"
  },
  {
    "text": "its type some meta data for example a timestamp a name of the system that",
    "start": "722430",
    "end": "728399"
  },
  {
    "text": "created it and of course the payload you know the specific content of the event",
    "start": "728399",
    "end": "733920"
  },
  {
    "text": "message however payload is were those",
    "start": "733920",
    "end": "739050"
  },
  {
    "text": "events really differ and actually there are three types of different events in",
    "start": "739050",
    "end": "745949"
  },
  {
    "text": "here's article called what you mean by event-driven Martin Fowler identifies three types of events",
    "start": "745949",
    "end": "754759"
  },
  {
    "text": "the first one is what he calls event notification such event is used to",
    "start": "754759",
    "end": "761100"
  },
  {
    "text": "notify that something important has happened and the key here is to notify",
    "start": "761100",
    "end": "767639"
  },
  {
    "text": "the source system doesn't expect any direct or indirect maybe indirect but it",
    "start": "767639",
    "end": "774630"
  },
  {
    "text": "doesn't expect any direct response to the event and in fact it isn't even",
    "start": "774630",
    "end": "780779"
  },
  {
    "text": "aware who the subscribers are for that specific event also such event contains",
    "start": "780779",
    "end": "788630"
  },
  {
    "text": "minimal information on nature of the change for example what was change",
    "start": "788630",
    "end": "794059"
  },
  {
    "text": "changed in the systems data because of this event I subscribe",
    "start": "794059",
    "end": "799200"
  },
  {
    "text": "if it's interested in knowing that information you know can execute the query against the source system and to",
    "start": "799200",
    "end": "806580"
  },
  {
    "text": "get the more detailed information in some sent event notifications you know",
    "start": "806580",
    "end": "812940"
  },
  {
    "text": "it's like pager everybody knows where the pager is good so here is well you",
    "start": "812940",
    "end": "822870"
  },
  {
    "text": "get a event notification okay some stuff is going on but you have to call the",
    "start": "822870",
    "end": "829589"
  },
  {
    "text": "number to get the more detailed information about what's happened the",
    "start": "829589",
    "end": "835680"
  },
  {
    "text": "next type is what Martin Fowler calls event carried State transfer and here",
    "start": "835680",
    "end": "841830"
  },
  {
    "text": "the original originating system not notified that something has happened but the message contains all the",
    "start": "841830",
    "end": "849570"
  },
  {
    "text": "information that was changed because of some business transaction it can come in",
    "start": "849570",
    "end": "855810"
  },
  {
    "text": "two forms the first one let's say you have some customer entity so the event can contain a snapshot of this customer",
    "start": "855810",
    "end": "863370"
  },
  {
    "text": "state the updated state the second form is to specify what were the fields that",
    "start": "863370",
    "end": "870779"
  },
  {
    "text": "actually changed because of the business transaction so if for example you have like 200 different fields and only two",
    "start": "870779",
    "end": "878279"
  },
  {
    "text": "of them change so we just publish what changed and not all of them in any way",
    "start": "878279",
    "end": "883650"
  },
  {
    "text": "this information is supposed to be sufficient for the subscribers and they",
    "start": "883650",
    "end": "889380"
  },
  {
    "text": "don't have to query the publisher for additional details as in the case for",
    "start": "889380",
    "end": "894480"
  },
  {
    "text": "the event notification and of course the obvious advantage of this approach is",
    "start": "894480",
    "end": "900290"
  },
  {
    "text": "the considerably lower dependency of subscribers on the publishers it both",
    "start": "900290",
    "end": "907170"
  },
  {
    "text": "make the subscribers more resilient they can continue function even if the",
    "start": "907170",
    "end": "912420"
  },
  {
    "text": "publisher is down for some reason they have local snapshot of all the data and",
    "start": "912420",
    "end": "918420"
  },
  {
    "text": "it also lowers the risk on the publisher themselves so if some subscriber is",
    "start": "918420",
    "end": "924300"
  },
  {
    "text": "going crazy and he really needs to process some information many many times",
    "start": "924300",
    "end": "930600"
  },
  {
    "text": "it's not going to affect the publisher because that subscriber has all data",
    "start": "930600",
    "end": "935810"
  },
  {
    "text": "locally and the final type is the events",
    "start": "935810",
    "end": "942540"
  },
  {
    "text": "used for event sourcing and usually they're called domain events do I have",
    "start": "942540",
    "end": "950760"
  },
  {
    "text": "to give a small introduction about event sourcing yes",
    "start": "950760",
    "end": "955920"
  },
  {
    "text": "okay so I'll do it briefly event sourcing is a different way of representing system state if for example",
    "start": "955920",
    "end": "963410"
  },
  {
    "text": "we in traditional systems we have some database record which represents the",
    "start": "963410",
    "end": "969780"
  },
  {
    "text": "current state of some entity of the system for example customer ID I know something his name is",
    "start": "969780",
    "end": "976440"
  },
  {
    "text": "John last name John some status and when you're looking at this record do you",
    "start": "976440",
    "end": "982170"
  },
  {
    "text": "know its current state event sourcing is a different and kind of interesting way",
    "start": "982170",
    "end": "988560"
  },
  {
    "text": "to represent the same data it includes the dimension of time so instead of storing the current state you are",
    "start": "988560",
    "end": "995520"
  },
  {
    "text": "stirring the complete list of events that led to the state so the customer",
    "start": "995520",
    "end": "1001520"
  },
  {
    "text": "was initialized then he have there his contact details and such etc and you can",
    "start": "1001520",
    "end": "1007010"
  },
  {
    "text": "always go through those events to calculate the current state so that's a",
    "start": "1007010",
    "end": "1013690"
  },
  {
    "text": "venture in 101 so for event sourcing we are using events as well those are",
    "start": "1013690",
    "end": "1020210"
  },
  {
    "text": "usually called domain events and as I said each change the system state is",
    "start": "1020210",
    "end": "1027199"
  },
  {
    "text": "represented by an event and such events are somewhere in between so somewhere in",
    "start": "1027199",
    "end": "1035180"
  },
  {
    "text": "between those previous two types as notification events they do notify that",
    "start": "1035180",
    "end": "1040490"
  },
  {
    "text": "something important has happened but they also have to contain data that describes what actually has happened",
    "start": "1040490",
    "end": "1048940"
  },
  {
    "text": "this data however should be modeled as close as possible to the business domain",
    "start": "1048940",
    "end": "1054620"
  },
  {
    "text": "it not some particular state or presentation as in the case of events",
    "start": "1054620",
    "end": "1059960"
  },
  {
    "text": "for carrying a changes in state the previous that's why usually when speaking about",
    "start": "1059960",
    "end": "1066679"
  },
  {
    "text": "domain events people describe them as as stateless stateless in a sense as Marian",
    "start": "1066679",
    "end": "1073280"
  },
  {
    "text": "Duncan Jones says here event should be stateless as regards the entity to which",
    "start": "1073280",
    "end": "1078530"
  },
  {
    "text": "event occurred in other words money deposited event holds no data on the",
    "start": "1078530",
    "end": "1085070"
  },
  {
    "text": "account balance if you know the balance you can always run through those domain events and calculate from scratch so",
    "start": "1085070",
    "end": "1093559"
  },
  {
    "text": "those are the three types of events I will quickly summarize them with a small",
    "start": "1093559",
    "end": "1098690"
  },
  {
    "text": "example notification event again only signals that something has happened",
    "start": "1098690",
    "end": "1104750"
  },
  {
    "text": "for example marriage or divorce event correct a transfer is basically data",
    "start": "1104750",
    "end": "1111800"
  },
  {
    "text": "replication mechanism through events and an example would be personal details",
    "start": "1111800",
    "end": "1118820"
  },
  {
    "text": "changed event such event may be fired when a person's last name changes",
    "start": "1118820",
    "end": "1124610"
  },
  {
    "text": "however unlike notification event it would have no connection to the reason",
    "start": "1124610",
    "end": "1130190"
  },
  {
    "text": "whether it's because a marriage or divorce adjust the fact his last name was changed and finally domain events",
    "start": "1130190",
    "end": "1138650"
  },
  {
    "text": "are somewhere in between they do reflect the reason for example married and all",
    "start": "1138650",
    "end": "1144380"
  },
  {
    "text": "the related data but they again they shouldn't be coupled to a specific state",
    "start": "1144380",
    "end": "1149809"
  },
  {
    "text": "representation they should reflect so much as possible the business domain and not some kind of a projection of it or",
    "start": "1149809",
    "end": "1158059"
  },
  {
    "text": "model it and it's crucial to choose the",
    "start": "1158059",
    "end": "1163100"
  },
  {
    "text": "correct event type for a specific task otherwise instead of modern architecture",
    "start": "1163100",
    "end": "1168550"
  },
  {
    "text": "architecture you will end up with accidental complexity and even the",
    "start": "1168550",
    "end": "1174410"
  },
  {
    "text": "dreaded distributed models to demonstrate it I want to share some war",
    "start": "1174410",
    "end": "1180020"
  },
  {
    "text": "and horror stories from the company I've been working at for the last eight years",
    "start": "1180020",
    "end": "1186039"
  },
  {
    "text": "as I said the companies in Chernobyl and our goal was to allow companies that are",
    "start": "1188120",
    "end": "1196520"
  },
  {
    "text": "producing for example products or services to outsource their marketing related chores so they will come to us",
    "start": "1196520",
    "end": "1203780"
  },
  {
    "text": "and we'll create a advertising materials will publish advertising campaigns will",
    "start": "1203780",
    "end": "1208910"
  },
  {
    "text": "optimize them to make sure you know that spend Allah spend the least and they're the most effective collect the leads",
    "start": "1208910",
    "end": "1216920"
  },
  {
    "text": "from those campaigns and eventually our sales agents would make the calls to sell our clients products pretty complex",
    "start": "1216920",
    "end": "1226370"
  },
  {
    "text": "and white business domain and as it usually happens initially we try to",
    "start": "1226370",
    "end": "1233000"
  },
  {
    "text": "implement it as one huge monolith and",
    "start": "1233000",
    "end": "1239960"
  },
  {
    "text": "complexity wise you know the system who had very low global complexity because hey we have only one component but this",
    "start": "1239960",
    "end": "1249440"
  },
  {
    "text": "components local complexity was huge everything was in it and unsurprisingly",
    "start": "1249440",
    "end": "1256810"
  },
  {
    "text": "after some time this design started breaking under its own weight",
    "start": "1256810",
    "end": "1262550"
  },
  {
    "text": "it became slow hard to test and overall unpredictable so at some point we",
    "start": "1262550",
    "end": "1269690"
  },
  {
    "text": "decided ok we cannot take it anymore we have to break this monolith into two sub",
    "start": "1269690",
    "end": "1275510"
  },
  {
    "text": "systems marketing and serum that's what it looked like marketing system it was",
    "start": "1275510",
    "end": "1283160"
  },
  {
    "text": "in charge of collecting and publishing marketing events for example impression",
    "start": "1283160",
    "end": "1289190"
  },
  {
    "text": "click submitted late etc and this marketing system was kind of stupid it",
    "start": "1289190",
    "end": "1296780"
  },
  {
    "text": "didn't really do anything with those events apart from publishing them to the subscribers the subscribers were free to",
    "start": "1296780",
    "end": "1304340"
  },
  {
    "text": "pick up those events and do whatever they need with their data so those",
    "start": "1304340",
    "end": "1312140"
  },
  {
    "text": "subscribers included first of all our CRM system our bi department you know they wanted to analyze what's going on",
    "start": "1312140",
    "end": "1318560"
  },
  {
    "text": "in in our marketing domain and our clients",
    "start": "1318560",
    "end": "1324289"
  },
  {
    "text": "organizations that were using our services they also need to get some notification about marketing events so",
    "start": "1324289",
    "end": "1333950"
  },
  {
    "text": "those subscribers were free to make their own decisions on how to project those marketing events into some kind of",
    "start": "1333950",
    "end": "1342559"
  },
  {
    "text": "their own state which is going to be convenient for their needs",
    "start": "1342559",
    "end": "1347889"
  },
  {
    "text": "architectural wise the goal was of the of this redesign was to lower local",
    "start": "1347889",
    "end": "1354799"
  },
  {
    "text": "complexity of the systems components and we did once we started decoupling and",
    "start": "1354799",
    "end": "1361039"
  },
  {
    "text": "those different concerns local complexity went down no arguing about",
    "start": "1361039",
    "end": "1366049"
  },
  {
    "text": "that now let's see what happened to the global complexity here",
    "start": "1366049",
    "end": "1372490"
  },
  {
    "text": "as time passed we'll notice that this state this state calculation logic here",
    "start": "1372490",
    "end": "1379970"
  },
  {
    "text": "on the right side how does that work oh it works the first time I'm ever using",
    "start": "1379970",
    "end": "1386600"
  },
  {
    "text": "it so this state calculations which is performed by all of the subscribers was",
    "start": "1386600",
    "end": "1394309"
  },
  {
    "text": "duplicated across all of them you know despite the freedom to choose whatever",
    "start": "1394309",
    "end": "1399440"
  },
  {
    "text": "model they need all of them projected the same data as a result the business",
    "start": "1399440",
    "end": "1407750"
  },
  {
    "text": "logic that generated that state was duplicated across all of them and that",
    "start": "1407750",
    "end": "1413139"
  },
  {
    "text": "introduced what I call logical coupling between these components this business",
    "start": "1413139",
    "end": "1421279"
  },
  {
    "text": "logic was duplicated across three different systems and it had to change",
    "start": "1421279",
    "end": "1427600"
  },
  {
    "text": "simultaneously also we were at some",
    "start": "1427600",
    "end": "1433759"
  },
  {
    "text": "point we were hit in the face by unreliability of network here on the left side on the publishing side we",
    "start": "1433759",
    "end": "1441590"
  },
  {
    "text": "naively assumed that whatever we are going to publish from the marketing system all those events will be",
    "start": "1441590",
    "end": "1447980"
  },
  {
    "text": "delivered in the same order they are published and they will be",
    "start": "1447980",
    "end": "1453840"
  },
  {
    "text": "delivered exactly once as if this whole system X is one big logical transaction",
    "start": "1453840",
    "end": "1461580"
  },
  {
    "text": "of course that's not possible and well the moment things didn't go as",
    "start": "1461580",
    "end": "1469500"
  },
  {
    "text": "planned the same sets of events produced different results for different",
    "start": "1469500",
    "end": "1476400"
  },
  {
    "text": "subscribers they had the same business logic that process them but because of the nature of network but some of the",
    "start": "1476400",
    "end": "1483570"
  },
  {
    "text": "events arrived out of order they a calculated different results now to fix",
    "start": "1483570",
    "end": "1492150"
  },
  {
    "text": "this we had to employ some infrastructure infrastructure who do you know which entered entangled those",
    "start": "1492150",
    "end": "1498690"
  },
  {
    "text": "components even more and bottom line whatever you look at it with this may",
    "start": "1498690",
    "end": "1505140"
  },
  {
    "text": "Buddha or without this woudl this system has a very high global complexity all",
    "start": "1505140",
    "end": "1512610"
  },
  {
    "text": "its components are entangled and really strongly coupled to each other the",
    "start": "1512610",
    "end": "1520260"
  },
  {
    "text": "solution was to refactor marketing into an event search system and instead of publishing notification events it",
    "start": "1520260",
    "end": "1528750"
  },
  {
    "text": "emitted some minimal workable state that would be enough for the subscribers need",
    "start": "1528750",
    "end": "1534930"
  },
  {
    "text": "need from the Vance perspective we went from I would say we went from event",
    "start": "1534930",
    "end": "1542550"
  },
  {
    "text": "notification to event period state transfer so instead instead of PO has",
    "start": "1542550",
    "end": "1550740"
  },
  {
    "text": "thrown raw data on the clients this server and this service took care of",
    "start": "1550740",
    "end": "1557220"
  },
  {
    "text": "this business logic that projected this state and published this changes in the",
    "start": "1557220",
    "end": "1564090"
  },
  {
    "text": "state to all the consumers through event carrier state transfer this refactoring",
    "start": "1564090",
    "end": "1570900"
  },
  {
    "text": "all over both the global complexity of the whole system and the local",
    "start": "1570900",
    "end": "1576000"
  },
  {
    "text": "complexity of its components because first of all those subscribers didn't",
    "start": "1576000",
    "end": "1581760"
  },
  {
    "text": "need this state calculation logic anymore it resided only in one place so that's",
    "start": "1581760",
    "end": "1589260"
  },
  {
    "text": "what our a final decomposition look like marketing emitted an event correct state",
    "start": "1589260",
    "end": "1599130"
  },
  {
    "text": "change events which were received by those subscribers and they created their",
    "start": "1599130",
    "end": "1604560"
  },
  {
    "text": "local copies of them and then do a did their job now speaking of this CRM system in the",
    "start": "1604560",
    "end": "1612930"
  },
  {
    "text": "middle originally we implemented it in a traditional way it stores the data in a",
    "start": "1612930",
    "end": "1620010"
  },
  {
    "text": "relational database however after some time this implementation was limiting us",
    "start": "1620010",
    "end": "1626700"
  },
  {
    "text": "in multiple ways first it was hard to scale a relational database second it",
    "start": "1626700",
    "end": "1634620"
  },
  {
    "text": "limited us to the relational model but bi people they needed a more a way to",
    "start": "1634620",
    "end": "1642570"
  },
  {
    "text": "get more insight into the into the data so they continued continually bombarded us with some weird requests add this",
    "start": "1642570",
    "end": "1650400"
  },
  {
    "text": "field here that field they're calculating amount of times for example a customer change his phone number and",
    "start": "1650400",
    "end": "1656130"
  },
  {
    "text": "stuff like that and of course we had limited success implemented with this",
    "start": "1656130",
    "end": "1661350"
  },
  {
    "text": "rigid in a relational model and third we",
    "start": "1661350",
    "end": "1666960"
  },
  {
    "text": "wanted to break out of this a relational database prison and instead to embrace",
    "start": "1666960",
    "end": "1672630"
  },
  {
    "text": "the polyglot persistent model to use multiple days databases you know to get",
    "start": "1672630",
    "end": "1679800"
  },
  {
    "text": "the benefits of each type of databases database for cash for operations for reading such and such' so to achieve",
    "start": "1679800",
    "end": "1687150"
  },
  {
    "text": "these goals we refactored this serum system into an events or advanced sourcing and securest",
    "start": "1687150",
    "end": "1693060"
  },
  {
    "text": "based system do I need to give you a",
    "start": "1693060",
    "end": "1699300"
  },
  {
    "text": "quick introduction to secure us anyone okay",
    "start": "1699300",
    "end": "1705740"
  },
  {
    "text": "so in CQRS is a pattern you know that",
    "start": "1705740",
    "end": "1710840"
  },
  {
    "text": "allows you to represent the same data in multiple a persistent models and that's",
    "start": "1710840",
    "end": "1716120"
  },
  {
    "text": "what our initial implementation looked like it was pretty much by the book so the client would submit a command its",
    "start": "1716120",
    "end": "1723409"
  },
  {
    "text": "execution would result in new domain events that were appended to the event",
    "start": "1723409",
    "end": "1728990"
  },
  {
    "text": "store and projected interview models finally the comments result was",
    "start": "1728990",
    "end": "1734890"
  },
  {
    "text": "communicated from those read models back to the users so those were the so-called",
    "start": "1734890",
    "end": "1741640"
  },
  {
    "text": "one-way commands but the thing is there",
    "start": "1741640",
    "end": "1746779"
  },
  {
    "text": "is no such thing as a one-way command one-way command is an event a system",
    "start": "1746779",
    "end": "1754250"
  },
  {
    "text": "should be able to refuse execution of a command and of course communicate back",
    "start": "1754250",
    "end": "1760039"
  },
  {
    "text": "to the user the reason why it was refused was this an infrastructural issue or maybe the",
    "start": "1760039",
    "end": "1766909"
  },
  {
    "text": "comment was invalid and if it's if it was invalid then what are the validation",
    "start": "1766909",
    "end": "1773419"
  },
  {
    "text": "issues how can he fix those errors and submit the proper command so our users",
    "start": "1773419",
    "end": "1784899"
  },
  {
    "text": "were also you know they were not really happy about this secure thing because",
    "start": "1784899",
    "end": "1791450"
  },
  {
    "text": "they expected to get result results immediately for example if a sales agent executed a",
    "start": "1791450",
    "end": "1798710"
  },
  {
    "text": "command will change state of a customer well he expected to see the result of",
    "start": "1798710",
    "end": "1804919"
  },
  {
    "text": "this operation displayed immediately on the screen once he got is okay from the server naturally he expected to see the",
    "start": "1804919",
    "end": "1812510"
  },
  {
    "text": "updated data on his screen and that's understandable so at some point again we",
    "start": "1812510",
    "end": "1822620"
  },
  {
    "text": "decided that this system needs a change so to fix this we implemented proper",
    "start": "1822620",
    "end": "1829610"
  },
  {
    "text": "commands now they were executed synchronously and the execution result",
    "start": "1829610",
    "end": "1836240"
  },
  {
    "text": "was delivered immediately to the as part of request/response model you",
    "start": "1836240",
    "end": "1841519"
  },
  {
    "text": "know a simple restful call now moreover",
    "start": "1841519",
    "end": "1847480"
  },
  {
    "text": "in some cases the execution result not",
    "start": "1847480",
    "end": "1852980"
  },
  {
    "text": "only returned the execution result of the command did that succeed or fail if",
    "start": "1852980",
    "end": "1860269"
  },
  {
    "text": "it well if it failed why but also we returned updated data as well which was",
    "start": "1860269",
    "end": "1866960"
  },
  {
    "text": "supposed to be displayed on the UI now here here is the tricky part",
    "start": "1866960",
    "end": "1872109"
  },
  {
    "text": "that was like a shortcut because we according to everyone who is doing say",
    "start": "1872109",
    "end": "1877399"
  },
  {
    "text": "qrs that's something that you are not supposed to do however if you're",
    "start": "1877399",
    "end": "1886279"
  },
  {
    "text": "returning data that originates from a strongly consistent data store the event",
    "start": "1886279",
    "end": "1891499"
  },
  {
    "text": "store then you can just return it there is no point in waiting for for it to be",
    "start": "1891499",
    "end": "1900379"
  },
  {
    "text": "projected into those real models the limitation is you cannot return",
    "start": "1900379",
    "end": "1907190"
  },
  {
    "text": "projected data why because again you're turning the result as fast as possible",
    "start": "1907190",
    "end": "1912289"
  },
  {
    "text": "but projections are asynchronous and it will take time propagate those changes",
    "start": "1912289",
    "end": "1918649"
  },
  {
    "text": "across all projections so physically you are not able to do it you can only only return data from a",
    "start": "1918649",
    "end": "1924769"
  },
  {
    "text": "strongly consistent store and again the result of this was much better user",
    "start": "1924769",
    "end": "1932269"
  },
  {
    "text": "experience for our self agents now let's",
    "start": "1932269",
    "end": "1937279"
  },
  {
    "text": "talk more in depth about this projection stick the serum system publish those",
    "start": "1937279",
    "end": "1945590"
  },
  {
    "text": "domain events which were used for event sourcing as its public API and it",
    "start": "1945590",
    "end": "1953659"
  },
  {
    "text": "expected other system to leverage that freedom of generating their own",
    "start": "1953659",
    "end": "1958690"
  },
  {
    "text": "projections so here we have 100 different event types do whatever you",
    "start": "1958690",
    "end": "1964700"
  },
  {
    "text": "want good luck and of course this honeymoon period and it very",
    "start": "1964700",
    "end": "1971860"
  },
  {
    "text": "quickly at some point we realized that you know 90% of those subscribers we're",
    "start": "1971860",
    "end": "1978460"
  },
  {
    "text": "projecting the same model despite the freedom to adapt they stick",
    "start": "1978460",
    "end": "1983590"
  },
  {
    "text": "with their own with the same model which was used by almost all of them and again",
    "start": "1983590",
    "end": "1989289"
  },
  {
    "text": "as in the case of marketing system this introduced logical coupling the logic",
    "start": "1989289",
    "end": "1995950"
  },
  {
    "text": "that projected events into a workable state was duplicated in all those",
    "start": "1995950",
    "end": "2001679"
  },
  {
    "text": "subscribing components not only it was duplicated but because it held in",
    "start": "2001679",
    "end": "2008100"
  },
  {
    "text": "knowledge of how each domain affects the state it was coupled to the serums",
    "start": "2008100",
    "end": "2014419"
  },
  {
    "text": "implementation details and as a result it caused another type of coupling implementation coupling all those",
    "start": "2014419",
    "end": "2023190"
  },
  {
    "text": "subscribers had to close the follow changes in serums implementation if when",
    "start": "2023190",
    "end": "2029580"
  },
  {
    "text": "you have a type of events what was added was introduced they had to reflect this",
    "start": "2029580",
    "end": "2035130"
  },
  {
    "text": "in their code as fast as possible why because even you have a new event can",
    "start": "2035130",
    "end": "2040890"
  },
  {
    "text": "affect the value of some of their fields that they are projecting ignoring this",
    "start": "2040890",
    "end": "2046020"
  },
  {
    "text": "event eventually will lead to inconsistent data something that usually business people are not really happy",
    "start": "2046020",
    "end": "2052200"
  },
  {
    "text": "about and finally we have here a third type of coupling and this one is more",
    "start": "2052200",
    "end": "2060868"
  },
  {
    "text": "subtle one I call it semantic coupling some events in the CRM system were not",
    "start": "2060869",
    "end": "2067500"
  },
  {
    "text": "defined clearly and subscribers had to make assumptions on meanings of those",
    "start": "2067500",
    "end": "2073919"
  },
  {
    "text": "events for example we have this event here agent assigned to lead now the",
    "start": "2073919",
    "end": "2079740"
  },
  {
    "text": "question is what does it mean when a subscriber receives three such events",
    "start": "2079740",
    "end": "2087148"
  },
  {
    "text": "does it mean that three agents are assigned to the need or only the last",
    "start": "2087149",
    "end": "2092970"
  },
  {
    "text": "one the event is schema doesn't you know",
    "start": "2092970",
    "end": "2098400"
  },
  {
    "text": "tell this a difference doesn't communicate this knowledge so",
    "start": "2098400",
    "end": "2104240"
  },
  {
    "text": "the subscribers had to make assumptions or the implementation details and",
    "start": "2104240",
    "end": "2110750"
  },
  {
    "text": "sometimes they did they they made different assumptions so to sum it up if",
    "start": "2110750",
    "end": "2120150"
  },
  {
    "text": "we were to evaluate this architecture again it screams scream that has high",
    "start": "2120150",
    "end": "2125160"
  },
  {
    "text": "global complexity despite messaging and all those services all systems",
    "start": "2125160",
    "end": "2132450"
  },
  {
    "text": "components are again tightly coupled to each other because of implementation",
    "start": "2132450",
    "end": "2138390"
  },
  {
    "text": "logical and semantic couplings now to decouple this mess what we did is we",
    "start": "2138390",
    "end": "2146570"
  },
  {
    "text": "encapsulated the state projecting logic in the CRM system itself so instead of",
    "start": "2146570",
    "end": "2153990"
  },
  {
    "text": "exposing its domain events it published published changes to the projected state",
    "start": "2153990",
    "end": "2159690"
  },
  {
    "text": "through event carried state transfer effectively the serums public API now",
    "start": "2159690",
    "end": "2168180"
  },
  {
    "text": "compressed its implementation details those domain events into a more",
    "start": "2168180",
    "end": "2173670"
  },
  {
    "text": "restricted and limited set of public events which were just used to notify",
    "start": "2173670",
    "end": "2180600"
  },
  {
    "text": "subscribers about changes in the state of those editors of course it did raise",
    "start": "2180600",
    "end": "2188850"
  },
  {
    "text": "the local complexity of the CRM system again we moved some logic that wasn't",
    "start": "2188850",
    "end": "2195330"
  },
  {
    "text": "there before but again that's nothing really serious because first of all it's really",
    "start": "2195330",
    "end": "2201060"
  },
  {
    "text": "coherent with what was there in the first place it all works and operates on",
    "start": "2201060",
    "end": "2206130"
  },
  {
    "text": "the same data on the same schema and usually both the original code and the",
    "start": "2206130",
    "end": "2212100"
  },
  {
    "text": "new one they are changing in the same pace so this change didn't have any",
    "start": "2212100",
    "end": "2217230"
  },
  {
    "text": "considerable effect on a the local complexity of the CRM system however",
    "start": "2217230",
    "end": "2222810"
  },
  {
    "text": "this refactoring dramatically reduced global complexity of the whole system",
    "start": "2222810",
    "end": "2229770"
  },
  {
    "text": "because again we removed all those sources for couplings between those components",
    "start": "2229770",
    "end": "2237880"
  },
  {
    "text": "next story one day our managers decided to try working with a new business",
    "start": "2240360",
    "end": "2249630"
  },
  {
    "text": "vertical you know to evaluate a new way of making money and for that I needed a",
    "start": "2249630",
    "end": "2255960"
  },
  {
    "text": "new system so this system was defined in the manager in design terms as core",
    "start": "2255960",
    "end": "2261960"
  },
  {
    "text": "business domain that's how our company was going to make money so technically",
    "start": "2261960",
    "end": "2267240"
  },
  {
    "text": "we had to invest our most advanced tools in design of this project so back in",
    "start": "2267240",
    "end": "2275760"
  },
  {
    "text": "those days this micro-services trend started appearing we heard about about",
    "start": "2275760",
    "end": "2281760"
  },
  {
    "text": "those micro services superhero companies doing great stuff with this pattern so",
    "start": "2281760",
    "end": "2288810"
  },
  {
    "text": "we decided to give it a try so we decompose this business domains into",
    "start": "2288810",
    "end": "2294120"
  },
  {
    "text": "those tiny tiny services well tiny because micro right it should",
    "start": "2294120",
    "end": "2299820"
  },
  {
    "text": "be small and we actually if there was not only asynchronous communication",
    "start": "2299820",
    "end": "2305850"
  },
  {
    "text": "between them also also some of them communicated seeing Krista but that doesn't really matter over time however",
    "start": "2305850",
    "end": "2313710"
  },
  {
    "text": "all those micro services became more and more chatty and more and more connection",
    "start": "2313710",
    "end": "2321060"
  },
  {
    "text": "started adding up between them until at some point almost all of them needed",
    "start": "2321060",
    "end": "2326580"
  },
  {
    "text": "data from all other services to complete some of its operations and as you can",
    "start": "2326580",
    "end": "2333030"
  },
  {
    "text": "see here global complexity of this solution skyrocketed suddenly all those",
    "start": "2333030",
    "end": "2339860"
  },
  {
    "text": "systems components became entangled and very tightly coupled to each other now",
    "start": "2339860",
    "end": "2347390"
  },
  {
    "text": "it was really hard to change this decomposition and you know we were",
    "start": "2347390",
    "end": "2353280"
  },
  {
    "text": "really we were really optimistic we thought that it will be to be better soon it wasn't of course the solution",
    "start": "2353280",
    "end": "2361410"
  },
  {
    "text": "was first of all to realize that we naively decomposed the system without",
    "start": "2361410",
    "end": "2367110"
  },
  {
    "text": "being familiar enough with with its business domain so those boundaries were",
    "start": "2367110",
    "end": "2372180"
  },
  {
    "text": "wrong from the beginning and what we had to do is to merge them together yeah to lower the global",
    "start": "2372180",
    "end": "2379830"
  },
  {
    "text": "complexity of the system to raise the local complexity of this component but",
    "start": "2379830",
    "end": "2384930"
  },
  {
    "text": "only then you know we could decompose it into a more limited set of components and with more coherent business behavior",
    "start": "2384930",
    "end": "2393150"
  },
  {
    "text": "in each of them",
    "start": "2393150",
    "end": "2396170"
  },
  {
    "text": "for the fifth story actually I cannot trash talk too much because I",
    "start": "2398270",
    "end": "2405680"
  },
  {
    "text": "wasn't involved directly in this implementation so I will try not to",
    "start": "2405680",
    "end": "2412040"
  },
  {
    "text": "restrain myself about a year ago we our",
    "start": "2412040",
    "end": "2420060"
  },
  {
    "text": "company was merged with another company and that new company was building a",
    "start": "2420060",
    "end": "2425670"
  },
  {
    "text": "trading platform and here is what I external de pond when we were doing architectural reviews the system would",
    "start": "2425670",
    "end": "2433520"
  },
  {
    "text": "process commands from from its users those commands resulted in a transaction",
    "start": "2433520",
    "end": "2442470"
  },
  {
    "text": "against a relational database and then",
    "start": "2442470",
    "end": "2447530"
  },
  {
    "text": "events which were published to a message bus Kafka in this case and of course the",
    "start": "2447530",
    "end": "2455190"
  },
  {
    "text": "goal of this distribution here was to",
    "start": "2455190",
    "end": "2460350"
  },
  {
    "text": "create a distributed system a scalable system and you know overall modern architecture now the obvious problem",
    "start": "2460350",
    "end": "2468390"
  },
  {
    "text": "here is we have transactional coupling here this operation assumes assumes that it can be",
    "start": "2468390",
    "end": "2476700"
  },
  {
    "text": "executed in the same transaction which it can't infrastructural wise you know",
    "start": "2476700",
    "end": "2482100"
  },
  {
    "text": "without going into distributed transactions you know you want to keep it sane so implementation wise it wasn't",
    "start": "2482100",
    "end": "2489780"
  },
  {
    "text": "possible to guarantee this transaction against two stores relational database",
    "start": "2489780",
    "end": "2495180"
  },
  {
    "text": "and a message bus and what happened if the server went down in the middle of",
    "start": "2495180",
    "end": "2502440"
  },
  {
    "text": "process processing one of the commands if it already committed data",
    "start": "2502440",
    "end": "2507720"
  },
  {
    "text": "to the database and then it the server failed before publishing the events none of the subscribers were had any",
    "start": "2507720",
    "end": "2516480"
  },
  {
    "text": "clue about that operation those event not only they were not delivered",
    "start": "2516480",
    "end": "2521700"
  },
  {
    "text": "they didn't even exist at all in any place there was no trace of them now",
    "start": "2521700",
    "end": "2528359"
  },
  {
    "text": "also the order of the events here is important as well but again it wasn't",
    "start": "2528359",
    "end": "2535740"
  },
  {
    "text": "enforced in any way by the producer those events were just generated not",
    "start": "2535740",
    "end": "2541530"
  },
  {
    "text": "stored in the database generated in memory and published and of course we cannot use time step for",
    "start": "2541530",
    "end": "2547710"
  },
  {
    "text": "ordering the events the system run a runs on multiple servers and each server",
    "start": "2547710",
    "end": "2552869"
  },
  {
    "text": "can have a different local time so that introduced an additional dimension of",
    "start": "2552869",
    "end": "2559680"
  },
  {
    "text": "transactional coupling they say this system assumed that all consumers will",
    "start": "2559680",
    "end": "2566160"
  },
  {
    "text": "process the events in the same order as they were published by the producer now",
    "start": "2566160",
    "end": "2574829"
  },
  {
    "text": "let's see what those consumers are actually doing with those events so the",
    "start": "2574829",
    "end": "2580980"
  },
  {
    "text": "first one is committing the events into some kind of backup database nothing",
    "start": "2580980",
    "end": "2587730"
  },
  {
    "text": "really interesting could be boring the next one however projected a state out",
    "start": "2587730",
    "end": "2594839"
  },
  {
    "text": "of those event events and stirred that state in a cache database and the last",
    "start": "2594839",
    "end": "2603270"
  },
  {
    "text": "subscriber which was used to process events for the analysis systems for the",
    "start": "2603270",
    "end": "2609720"
  },
  {
    "text": "BI what I did is when it received the event first it would enrich the original",
    "start": "2609720",
    "end": "2615780"
  },
  {
    "text": "event from the state from this cache right here now what happened is this",
    "start": "2615780",
    "end": "2625760"
  },
  {
    "text": "last line here actually introduced temporal coupling in a distributed",
    "start": "2625760",
    "end": "2632520"
  },
  {
    "text": "system in a synchronously communicated system those events can be processed by",
    "start": "2632520",
    "end": "2640410"
  },
  {
    "text": "the analysis subscriber only after they were processed by this state generating",
    "start": "2640410",
    "end": "2647849"
  },
  {
    "text": "subscriber and of course it's very challenging to implement so no one",
    "start": "2647849",
    "end": "2653609"
  },
  {
    "text": "really did it as a result the events that were submitted to BI were enriched",
    "start": "2653609",
    "end": "2660450"
  },
  {
    "text": "with the wrong State not always it reflect reflected the most up-to-date state from this cache in other words it",
    "start": "2660450",
    "end": "2669900"
  },
  {
    "text": "corrupted data and of course the simplest solution here is the outbox",
    "start": "2669900",
    "end": "2676560"
  },
  {
    "text": "pattern you know to leverage the relational database which is already",
    "start": "2676560",
    "end": "2682560"
  },
  {
    "text": "used by the system so when the system modifies some state in those relational",
    "start": "2682560",
    "end": "2689190"
  },
  {
    "text": "tables to add an additional table called outbox and write out all the events that",
    "start": "2689190",
    "end": "2694980"
  },
  {
    "text": "are about to be published as a result of that operation into that event a sort",
    "start": "2694980",
    "end": "2700650"
  },
  {
    "text": "internet table and then then after this transaction is committed some relay can",
    "start": "2700650",
    "end": "2707550"
  },
  {
    "text": "pick up those events from that table and publish them to the message bus and this",
    "start": "2707550",
    "end": "2713910"
  },
  {
    "text": "way it decouples all those you know logical and transactional couplings",
    "start": "2713910",
    "end": "2720630"
  },
  {
    "text": "between those components and the worst",
    "start": "2720630",
    "end": "2726210"
  },
  {
    "text": "horror story is about a nice",
    "start": "2726210",
    "end": "2731390"
  },
  {
    "text": "microservices based system it was really nice it had low global complexity there",
    "start": "2731390",
    "end": "2739800"
  },
  {
    "text": "were those micro services were really coherent there were not really coupled",
    "start": "2739800",
    "end": "2746849"
  },
  {
    "text": "with with each other and you know local complexities of the services of",
    "start": "2746849",
    "end": "2753359"
  },
  {
    "text": "themselves we were pretty low as well you know a dream however one day we had to",
    "start": "2753359",
    "end": "2760500"
  },
  {
    "text": "introduce a new micro service and that new micro service had to process data",
    "start": "2760500",
    "end": "2766800"
  },
  {
    "text": "from all of them it had to subscribe to events from all those services do some",
    "start": "2766800",
    "end": "2773369"
  },
  {
    "text": "magic and then communicate this magic back to them asynchronously so what",
    "start": "2773369",
    "end": "2780780"
  },
  {
    "text": "happened here is this new micro service introduced a whole lot of implementation",
    "start": "2780780",
    "end": "2789450"
  },
  {
    "text": "coupling which spanned across all of this system so what was a properly",
    "start": "2789450",
    "end": "2797550"
  },
  {
    "text": "decomposed system became an entangled distributed monolith because one",
    "start": "2797550",
    "end": "2803760"
  },
  {
    "text": "properly designed service I call it architectural Trojan horse the solution",
    "start": "2803760",
    "end": "2811080"
  },
  {
    "text": "we the solution that we picked was to use domain driven design anti-corruption",
    "start": "2811080",
    "end": "2817920"
  },
  {
    "text": "pattern into corruption layer pattern sorry to separate the integration",
    "start": "2817920",
    "end": "2825119"
  },
  {
    "text": "complexity from the business complexity of the new server the new service so",
    "start": "2825119",
    "end": "2830880"
  },
  {
    "text": "this layer right here what I did is actually collected data from the rest of",
    "start": "2830880",
    "end": "2836280"
  },
  {
    "text": "the system transform that into some workable state which was more convenient for this new micro service and in that",
    "start": "2836280",
    "end": "2846720"
  },
  {
    "text": "way the this new micro service which was pretty complex it has very a complex",
    "start": "2846720",
    "end": "2852660"
  },
  {
    "text": "business logic it was decouple from the rest of the system the coupling was the coupling to",
    "start": "2852660",
    "end": "2862290"
  },
  {
    "text": "the rest of the system was here by this anti-corruption layer but because there",
    "start": "2862290",
    "end": "2869040"
  },
  {
    "text": "was no you know complex business logic here there was something tolerable anyway it was much more convenient than",
    "start": "2869040",
    "end": "2876240"
  },
  {
    "text": "this previous scenario so that's domain driven design and the",
    "start": "2876240",
    "end": "2882210"
  },
  {
    "text": "corruption layer so now I finished with",
    "start": "2882210",
    "end": "2888030"
  },
  {
    "text": "those scary stories and to summarize them I want to share three rules of",
    "start": "2888030",
    "end": "2894119"
  },
  {
    "text": "thumb that actually sums up all the problems that I've just shown you and the solutions that we used eventually to",
    "start": "2894119",
    "end": "2901619"
  },
  {
    "text": "solve so first of all when designing event-driven systems be",
    "start": "2901619",
    "end": "2907170"
  },
  {
    "text": "pessimistic about everything do not may even assume that everything will work no",
    "start": "2907170",
    "end": "2912690"
  },
  {
    "text": "things will fail all the time and usually on Saturdays this optimistic",
    "start": "2912690",
    "end": "2920450"
  },
  {
    "text": "consistency model as I've shown you here it can be called a data corruption it",
    "start": "2920450",
    "end": "2927119"
  },
  {
    "text": "will corrupt the data and usually when when you income encounter such a such",
    "start": "2927119",
    "end": "2936509"
  },
  {
    "text": "problem in the design people oh yeah but you know how often will it happen if we",
    "start": "2936509",
    "end": "2942660"
  },
  {
    "text": "have 1% of those events being lost who will notice and you know that's the",
    "start": "2942660",
    "end": "2950130"
  },
  {
    "text": "scary because the system is going to corrupt the data and no one will notice so don't you lie on optimistic",
    "start": "2950130",
    "end": "2957599"
  },
  {
    "text": "consistency make sure those events are all always",
    "start": "2957599",
    "end": "2963569"
  },
  {
    "text": "delivered to the subscribers you know the word driven is is there in",
    "start": "2963569",
    "end": "2970019"
  },
  {
    "text": "event-driven architecture for reason make sure those events are delivered to",
    "start": "2970019",
    "end": "2975749"
  },
  {
    "text": "the subscribers no matter what now some events can can really be implementation",
    "start": "2975749",
    "end": "2984119"
  },
  {
    "text": "details especially those domain events as in events or systems and it's usually",
    "start": "2984119",
    "end": "2991559"
  },
  {
    "text": "tempting you know to expose them as public API but you do not want external",
    "start": "2991559",
    "end": "2998099"
  },
  {
    "text": "systems to depend on your implementation details you need to be able to change",
    "start": "2998099",
    "end": "3004279"
  },
  {
    "text": "the implementation details as you are working on your requirements your",
    "start": "3004279",
    "end": "3010009"
  },
  {
    "text": "clients on the other hand expect to get a more stable API which is not going to change often",
    "start": "3010009",
    "end": "3015910"
  },
  {
    "text": "so therefore use some events as private implementation details and other events",
    "start": "3015910",
    "end": "3023299"
  },
  {
    "text": "as public API and again private can be very default a detailed domain events",
    "start": "3023299",
    "end": "3030170"
  },
  {
    "text": "like many of them many different types of events and you can change to change",
    "start": "3030170",
    "end": "3035989"
  },
  {
    "text": "them as you like but for the public API press those private events into a more",
    "start": "3035989",
    "end": "3043830"
  },
  {
    "text": "restricted in a more stable of public events and of course use the correct",
    "start": "3043830",
    "end": "3049510"
  },
  {
    "text": "type of events for your need in this case event carrier state transfer is the",
    "start": "3049510",
    "end": "3057310"
  },
  {
    "text": "better option for integrating services now if you're going to neglect this and",
    "start": "3057310",
    "end": "3064840"
  },
  {
    "text": "choose wrong event visibility it will introduce logical coupling between the",
    "start": "3064840",
    "end": "3071770"
  },
  {
    "text": "systems components it will lead to overtime it will for sure lead to duplicated logic between your systems",
    "start": "3071770",
    "end": "3080230"
  },
  {
    "text": "components now instead of going async by",
    "start": "3080230",
    "end": "3085240"
  },
  {
    "text": "default when integrating services evaluate their consistency requirements",
    "start": "3085240",
    "end": "3091830"
  },
  {
    "text": "so if you're integrating to microservices what happen here to",
    "start": "3091830",
    "end": "3102190"
  },
  {
    "text": "patiently about it if you have two micro services and when integrating them",
    "start": "3102190",
    "end": "3109410"
  },
  {
    "text": "eventual eventual consistency is acceptable that's great use asynchronous",
    "start": "3109410",
    "end": "3115750"
  },
  {
    "text": "communication through events and of course a event carry state transfer is",
    "start": "3115750",
    "end": "3123340"
  },
  {
    "text": "the natural choice for such a communication between for integrating",
    "start": "3123340",
    "end": "3128680"
  },
  {
    "text": "them if on the other hand you have two micro services and one of them always",
    "start": "3128680",
    "end": "3134910"
  },
  {
    "text": "expects to read the rest written information by the second one it expects",
    "start": "3134910",
    "end": "3141010"
  },
  {
    "text": "to read the last right then you have a bit more challenging situation in this",
    "start": "3141010",
    "end": "3146710"
  },
  {
    "text": "case you cannot just use those event carriers state transfer events and you",
    "start": "3146710",
    "end": "3153310"
  },
  {
    "text": "know deliver them asynchronously in this case the simple thing will be just to issue a synchronous call you know a get",
    "start": "3153310",
    "end": "3159250"
  },
  {
    "text": "request give me this data and you will always receive the most up-to-date information another option would be for",
    "start": "3159250",
    "end": "3165970"
  },
  {
    "text": "the source to publish an event notification saying hey something",
    "start": "3165970",
    "end": "3172210"
  },
  {
    "text": "interesting has happened but if you're interested in the data call me synchronously and I will",
    "start": "3172210",
    "end": "3177670"
  },
  {
    "text": "give it to you and finally if you have two microservices and there are some",
    "start": "3177670",
    "end": "3185650"
  },
  {
    "text": "operations which cannot be executed concurrently like one operation one",
    "start": "3185650",
    "end": "3192190"
  },
  {
    "text": "service another one in the second you cannot execute them concurrently only one can be executed at the same time",
    "start": "3192190",
    "end": "3199440"
  },
  {
    "text": "here stop whatever you're doing and merge them those services together because that's the shortcut to enormous",
    "start": "3199440",
    "end": "3207700"
  },
  {
    "text": "global complexity of the system and to",
    "start": "3207700",
    "end": "3213760"
  },
  {
    "text": "wrap this whole thing up I will go very briefly about everything I've shown you",
    "start": "3213760",
    "end": "3220630"
  },
  {
    "text": "so software architectures goal is to manage complexity it divides software",
    "start": "3220630",
    "end": "3226060"
  },
  {
    "text": "architecture divide systems complexities into two types local complexity complexity on the component level and",
    "start": "3226060",
    "end": "3232930"
  },
  {
    "text": "global complexity is level of interconnectedness between the systems",
    "start": "3232930",
    "end": "3238119"
  },
  {
    "text": "components there are three types of events notification event which says",
    "start": "3238119",
    "end": "3243880"
  },
  {
    "text": "that hey something interesting has happened event carrier State transfer for publish and changes in data between",
    "start": "3243880",
    "end": "3250840"
  },
  {
    "text": "services and domain events which not find that something interesting has",
    "start": "3250840",
    "end": "3255850"
  },
  {
    "text": "happened in the business domain again there are somewhere in between those two previous types these are heuristics",
    "start": "3255850",
    "end": "3265210"
  },
  {
    "text": "first of all be pessimistic assume that things are going to fail and make sure",
    "start": "3265210",
    "end": "3271450"
  },
  {
    "text": "that your system is delivering the events no matter what use private and",
    "start": "3271450",
    "end": "3278680"
  },
  {
    "text": "public events to limit the public API of components and evaluate consistency",
    "start": "3278680",
    "end": "3286330"
  },
  {
    "text": "requirements to choose the correct way of integrating services and I think I'm",
    "start": "3286330",
    "end": "3293619"
  },
  {
    "text": "done here and we have five more minutes for questions if there are any",
    "start": "3293619",
    "end": "3299849"
  },
  {
    "text": "yeah so look that's a great question and before diving into an implementation of",
    "start": "3317060",
    "end": "3323340"
  },
  {
    "text": "those events or systems we always evaluated the expected lifetime of those",
    "start": "3323340",
    "end": "3330810"
  },
  {
    "text": "business entities and for example in our CRM system you know we would like our",
    "start": "3330810",
    "end": "3337800"
  },
  {
    "text": "customer to be a long-lived to have transactions which will spend years but usually the their lifespan is",
    "start": "3337800",
    "end": "3345720"
  },
  {
    "text": "limited by let's say 100 200 events so so we just maintain the state it's just",
    "start": "3345720",
    "end": "3352830"
  },
  {
    "text": "cheaper to keep it instead of you know doing those generating snapshots or",
    "start": "3352830",
    "end": "3358770"
  },
  {
    "text": "archiving it and in another system in in",
    "start": "3358770",
    "end": "3365820"
  },
  {
    "text": "those come in the Commission's module you know we have this detailed monetary",
    "start": "3365820",
    "end": "3371070"
  },
  {
    "text": "transactions and they're actually you know we to pay less for storage storage",
    "start": "3371070",
    "end": "3377850"
  },
  {
    "text": "we had to retire some of the data archive it if for example a sales agent is no longer working for us no point in",
    "start": "3377850",
    "end": "3384660"
  },
  {
    "text": "holding it there we just move it to a file from the database in a flat file and that's it does that answer your",
    "start": "3384660",
    "end": "3391470"
  },
  {
    "text": "question",
    "start": "3391470",
    "end": "3393530"
  },
  {
    "text": "you mean",
    "start": "3403619",
    "end": "3406798"
  },
  {
    "text": "oh that's a great question well so when",
    "start": "3414310",
    "end": "3420280"
  },
  {
    "text": "you are publishing those events usually you can publish it okay so the question",
    "start": "3420280",
    "end": "3425410"
  },
  {
    "text": "was if let's say you have an event events or system which is a not only",
    "start": "3425410",
    "end": "3430600"
  },
  {
    "text": "event so any system which publishes the events how the subscribers can fetch the",
    "start": "3430600",
    "end": "3438430"
  },
  {
    "text": "events that were lost because of some infrastructural issue for example servers run down how does it know that",
    "start": "3438430",
    "end": "3443560"
  },
  {
    "text": "okay something has missed so the first and easiest option you know Eastern should use aq each subscriber has local",
    "start": "3443560",
    "end": "3451540"
  },
  {
    "text": "q which belongs to the subscriber so when it goes down goes back up it just reached the q again that's the easy part",
    "start": "3451540",
    "end": "3458670"
  },
  {
    "text": "however that's asynchronous publishing of the events through this queue however",
    "start": "3458670",
    "end": "3465640"
  },
  {
    "text": "we encountered some situations where for example subscribers had bugs in their",
    "start": "3465640",
    "end": "3471550"
  },
  {
    "text": "business logic so they couldn't rely on this queue they will have to ask the",
    "start": "3471550",
    "end": "3476860"
  },
  {
    "text": "publisher to republish all the events and publisher say no I'm not doing it so in such a case we always prefer the",
    "start": "3476860",
    "end": "3484720"
  },
  {
    "text": "event source in the publishers to expose to api's for the event first one is",
    "start": "3484720",
    "end": "3490420"
  },
  {
    "text": "asynchronous through queue and second is what's called ketchup subscription we're just going by some timestamp so you",
    "start": "3490420",
    "end": "3497530"
  },
  {
    "text": "always keep the last a record idea of the record you can always get know the delta what happen after it you can",
    "start": "3497530",
    "end": "3503890"
  },
  {
    "text": "reverse it the other way that answer your question any more questions one two",
    "start": "3503890",
    "end": "3511510"
  },
  {
    "text": "three sold no more questions if I still still didn't worry to death enough you",
    "start": "3511510",
    "end": "3519490"
  },
  {
    "text": "can follow me on Twitter I blog about the stuff recently I was honored to participate in this book project who I",
    "start": "3519490",
    "end": "3525250"
  },
  {
    "text": "wrote the story of our company but more from the domain driven design perspective and this book is really free",
    "start": "3525250",
    "end": "3533830"
  },
  {
    "text": "so there is no reason I forget it that was my little shameless plug thanks so",
    "start": "3533830",
    "end": "3539500"
  },
  {
    "text": "much [Applause]",
    "start": "3539500",
    "end": "3546590"
  }
]