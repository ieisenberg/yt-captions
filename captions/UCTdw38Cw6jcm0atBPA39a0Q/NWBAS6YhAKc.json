[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "so let's get started what you're looking at here this is a picture of the European gas Network and well as you can",
    "start": "360",
    "end": "8080"
  },
  {
    "text": "see it is quite complicated it has these Junctions nodes um well it's very complicated um",
    "start": "8080",
    "end": "15160"
  },
  {
    "text": "but there's good reason for that because in the Netherlands and many other European countries we use natural gas to",
    "start": "15160",
    "end": "22680"
  },
  {
    "text": "power our industry and to warm our houses so to make sure that there is",
    "start": "22680",
    "end": "28160"
  },
  {
    "text": "always an ample supply of gas available we have these things called gas storages",
    "start": "28160",
    "end": "33960"
  },
  {
    "text": "spread all over the network so if you look around Europe there are quite a few of these gas",
    "start": "33960",
    "end": "39399"
  },
  {
    "text": "storages and the way this works is that during the warmer summer months uh the",
    "start": "39399",
    "end": "45160"
  },
  {
    "text": "demand for gas is lower so at that time energy companies purchase natural gas on",
    "start": "45160",
    "end": "51480"
  },
  {
    "text": "the market and they store it in one of these gas storages and then when it gets colder",
    "start": "51480",
    "end": "58199"
  },
  {
    "text": "and demand goes up so prices go up you can see that the gas storage is being",
    "start": "58199",
    "end": "63680"
  },
  {
    "text": "emptied again and by the difference in price the energy companies using these",
    "start": "63680",
    "end": "68759"
  },
  {
    "text": "gas storages can make a profit and the company sorry the country as a whole benefits because there's always enough",
    "start": "68759",
    "end": "75320"
  },
  {
    "text": "gas available but first of all let me",
    "start": "75320",
    "end": "81280"
  },
  {
    "text": "introduce myself my name is Luke D in in the Netherlands o and E is pronounced U",
    "start": "81280",
    "end": "87600"
  },
  {
    "text": "so it's kind of like Luke Skywalk Skywalker I always say that resonates with a lot of it people I am a CTO and",
    "start": "87600",
    "end": "96280"
  },
  {
    "text": "Cloud architect with a Dutch consultancy firm called exper and well if you want",
    "start": "96280",
    "end": "101520"
  },
  {
    "text": "to get in touch you know what to do over the past years I've been working",
    "start": "101520",
    "end": "107680"
  },
  {
    "text": "with a team for a company that operates one of these gas storages and the cool",
    "start": "107680",
    "end": "113520"
  },
  {
    "text": "thing about this company is that they offer this gas storage as a service to other energy companies so the way this",
    "start": "113520",
    "end": "121000"
  },
  {
    "text": "works is the operator they they paid for an empty gas field and they put this",
    "start": "121000",
    "end": "126840"
  },
  {
    "text": "huge Factory on top of it and well there was no gas anymore uh in the gas field",
    "start": "126840",
    "end": "132280"
  },
  {
    "text": "because well it had been used and now they use it as a kind of a parking garage for natural gas but it's so huge",
    "start": "132280",
    "end": "140280"
  },
  {
    "text": "this one company it it doesn't need all that space so they decided to rent out the remainder space to other energy",
    "start": "140280",
    "end": "147280"
  },
  {
    "text": "companies and of course send them an invoice for that so customers they will",
    "start": "147280",
    "end": "153360"
  },
  {
    "text": "inject or withdraw gas from this storage yeah we've seen that in summer generally",
    "start": "153360",
    "end": "159360"
  },
  {
    "text": "we inject into the gas storage and in Winter generally we take it out but each each customer can decide for themselves",
    "start": "159360",
    "end": "166440"
  },
  {
    "text": "whether they want to put stuff in or get it out the important thing to realize here",
    "start": "166440",
    "end": "173400"
  },
  {
    "text": "is that the input must always match the output so whatever is being consumed at",
    "start": "173400",
    "end": "179200"
  },
  {
    "text": "the uh industry side or the houses side needs to be produced put into the",
    "start": "179200",
    "end": "185200"
  },
  {
    "text": "network at the other end if you take too much gas out of the network well the Flames will go out of course but if you",
    "start": "185200",
    "end": "191959"
  },
  {
    "text": "put too much gas into the network that Flames may go higher than you think and you'll get fires so this is very time",
    "start": "191959",
    "end": "198879"
  },
  {
    "text": "critical and Mission critical process so the amount of gas flowing through this network it is huge and any deviation can",
    "start": "198879",
    "end": "207840"
  },
  {
    "text": "cost well thousands or maybe Millions of Euros well to give you a little bit of",
    "start": "207840",
    "end": "215280"
  },
  {
    "text": "an idea about the size that we are talking about uh this gas field is located somewhere in the Netherlands",
    "start": "215280",
    "end": "222239"
  },
  {
    "text": "about 2 and a half kilomet below the surface of the Earth it can contain 8.4",
    "start": "222239",
    "end": "227799"
  },
  {
    "text": "billion cubic meters of gas and well that is a number that doesn't resonate",
    "start": "227799",
    "end": "233120"
  },
  {
    "text": "probably so I put it in different words about 6 million households can run on",
    "start": "233120",
    "end": "238680"
  },
  {
    "text": "only this field for for about a year or the whole country of the Netherlands for about two",
    "start": "238680",
    "end": "245120"
  },
  {
    "text": "months it produces or no it stores 48 terawatt Hours of energy and you can",
    "start": "245120",
    "end": "252560"
  },
  {
    "text": "either inject or withdraw with about 4 to 500 gigatt hours per per day so",
    "start": "252560",
    "end": "258919"
  },
  {
    "text": "really huge huge numbers before we dive into details let",
    "start": "258919",
    "end": "264199"
  },
  {
    "text": "me ask you uh does anyone here ever work with Azure on a daily basis Maybe",
    "start": "264199",
    "end": "271520"
  },
  {
    "text": "Ah that's good because I have a lot of azure stuff and does anyone here already",
    "start": "271520",
    "end": "276960"
  },
  {
    "text": "build a mission critical system oh just a couple of those really",
    "start": "276960",
    "end": "282360"
  },
  {
    "text": "nice I hope you can uh learn something okay what I mean with uh",
    "start": "282360",
    "end": "288759"
  },
  {
    "text": "Mission critical system is that if there is ever an outage you want the amount of",
    "start": "288759",
    "end": "295120"
  },
  {
    "text": "data in such a system uh that can be lost that you can tolerate the lose close to zero so you want zero bytes of",
    "start": "295120",
    "end": "303039"
  },
  {
    "text": "data lost the time to recovery after such an outage you want it to be close to zero",
    "start": "303039",
    "end": "309320"
  },
  {
    "text": "as well so well whenever something goes wrong the system should be up and running immediately after about zero",
    "start": "309320",
    "end": "317120"
  },
  {
    "text": "seconds well that is of course a very tall order because the closer you get to",
    "start": "317120",
    "end": "323360"
  },
  {
    "text": "zero the higher your cost will be and it will even go exponentially the closer you get to zero downtime and zero dat",
    "start": "323360",
    "end": "329919"
  },
  {
    "text": "loss you will need to introduce a lot of complexity redundancy uh and a more complex system",
    "start": "329919",
    "end": "336880"
  },
  {
    "text": "is always more expensive so instead of well battling",
    "start": "336880",
    "end": "342919"
  },
  {
    "text": "against outages I propose that you start dealing with outages and you make your",
    "start": "342919",
    "end": "348360"
  },
  {
    "text": "system clever enough to start dealing with these outages and then recover",
    "start": "348360",
    "end": "355840"
  },
  {
    "start": "356000",
    "end": "356000"
  },
  {
    "text": "itself before we dive into into those details let me first uh explain what we",
    "start": "356520",
    "end": "363000"
  },
  {
    "text": "found there because we were asked by this customer the storage operator to help them replace an earlier",
    "start": "363000",
    "end": "369960"
  },
  {
    "text": "system when we came in the earlier system was running uh and they were",
    "start": "369960",
    "end": "375599"
  },
  {
    "text": "doing manual deployments every month so during the deployment weekend somebody",
    "start": "375599",
    "end": "380880"
  },
  {
    "text": "would take a USB thumb drive walk up to a a server put the old binaries somewhere",
    "start": "380880",
    "end": "387880"
  },
  {
    "text": "safe hopefully and then put in the new binaries and of course uh during this",
    "start": "387880",
    "end": "393240"
  },
  {
    "text": "deployment the system would be unavailable so they would have to claim maintenance hours for this",
    "start": "393240",
    "end": "400880"
  },
  {
    "text": "unavailability there was no Telemetry flowing from the system so the system does talk with for example the",
    "start": "401520",
    "end": "407599"
  },
  {
    "text": "compressors that make up the uh well that that take care of the uh gas storage pumping gas in or taking it out",
    "start": "407599",
    "end": "415400"
  },
  {
    "text": "again but if that system was offline then the system uh didn't know how to deal with that and then simply it would",
    "start": "415400",
    "end": "422319"
  },
  {
    "text": "crash and any data being processed that that time would be",
    "start": "422319",
    "end": "427919"
  },
  {
    "text": "lost the system was also running on a single machine so if there was an well a",
    "start": "427919",
    "end": "433520"
  },
  {
    "text": "need to uh grow its capacity maybe uh add a little bit more memory your dis space to it then again it needed to be",
    "start": "433520",
    "end": "441080"
  },
  {
    "text": "offline uh powered down modified and then boot it up again and if there was",
    "start": "441080",
    "end": "447080"
  },
  {
    "text": "ever a hardware failure then well hopefully we would have some spare parts there so really not a situation you want",
    "start": "447080",
    "end": "454000"
  },
  {
    "text": "to be in and finally uh because this system uh",
    "start": "454000",
    "end": "459240"
  },
  {
    "text": "assumed the availability of the uh remote systems uh it would generally",
    "start": "459240",
    "end": "465479"
  },
  {
    "text": "crash when we came in we decided to do it radically different so this was not a",
    "start": "465960",
    "end": "471720"
  },
  {
    "text": "company used to running stuff in the cloud so we had some explaining and some convincing to do and well these are some",
    "start": "471720",
    "end": "478240"
  },
  {
    "text": "of the things that we me mentioned to the company that well the cloud could bring",
    "start": "478240",
    "end": "484120"
  },
  {
    "text": "them the cloud is really easy to scale so if you need more compute if you need more data storage uh anything it's just",
    "start": "484120",
    "end": "491960"
  },
  {
    "text": "a click of a button and a deployment away so yeah it's really just it can grow and",
    "start": "491960",
    "end": "499360"
  },
  {
    "text": "Shrink with the demand that a system needs it also comes with excellent slas",
    "start": "499360",
    "end": "504840"
  },
  {
    "text": "so if you look at the slas that our Azure Services provide it is almost always uh three or four nights and",
    "start": "504840",
    "end": "511599"
  },
  {
    "text": "that's really good the cloud is also Built For Speed",
    "start": "511599",
    "end": "517159"
  },
  {
    "text": "and what I mean with that is that well the cloud offers all these services like well storage queuing uh compute power on",
    "start": "517159",
    "end": "524120"
  },
  {
    "text": "demand uh scaling networking so that really allows us as software developers",
    "start": "524120",
    "end": "529959"
  },
  {
    "text": "to focus on building features instead of having to take care of all this first and then adding the",
    "start": "529959",
    "end": "537360"
  },
  {
    "text": "features Cloud also brings up does many failover options so well in Azure if you",
    "start": "537360",
    "end": "543440"
  },
  {
    "text": "store a bit of data then it's always copied at least three times so it's well",
    "start": "543440",
    "end": "548519"
  },
  {
    "text": "redundantly available and you don't have to do anything for it and if H one of those copies fails then it's up to the",
    "start": "548519",
    "end": "554920"
  },
  {
    "text": "cloud service provider to well to fix it for you you don't have to be uh called out of bed they will just do it and well",
    "start": "554920",
    "end": "562640"
  },
  {
    "text": "you pay for the operations and that's about it the cloud is also a really secure and",
    "start": "562640",
    "end": "569640"
  },
  {
    "text": "compliant way uh to run your application so Cloud offers of course the ability to",
    "start": "569640",
    "end": "576399"
  },
  {
    "text": "deploy our infrastructure as code so we Define in well in uh templates what our",
    "start": "576399",
    "end": "582120"
  },
  {
    "text": "infrastructure should look like and then we can deploy it automatically and then",
    "start": "582120",
    "end": "587800"
  },
  {
    "text": "well if there's no human touching this infrastructure that means that it can be audited by Simply Having a look at these",
    "start": "587800",
    "end": "594880"
  },
  {
    "text": "files we can also make use of azure policies and policies will make sure",
    "start": "594880",
    "end": "600120"
  },
  {
    "text": "that we can never deploy infrastr infrastructure in a unsecure way uh",
    "start": "600120",
    "end": "605800"
  },
  {
    "text": "insecure way so we can always make sure using these policies that our infrastructure is compliant to the rules",
    "start": "605800",
    "end": "611600"
  },
  {
    "text": "that we Define and finally we can do isolated networking so instead of uh everything",
    "start": "611600",
    "end": "619360"
  },
  {
    "text": "flowing through the internet we can make our own virtual Network inside the cloud hook up all the services that we need",
    "start": "619360",
    "end": "626440"
  },
  {
    "text": "and have very short communication lines and finally we have these premium skus",
    "start": "626440",
    "end": "633800"
  },
  {
    "text": "available in the cloud and these are really beefy virtual machines you can run on uh excellent databases with very",
    "start": "633800",
    "end": "640959"
  },
  {
    "text": "low latency excellent performance so really the best of the best in Hardware",
    "start": "640959",
    "end": "646720"
  },
  {
    "text": "with even better slas than the regular skus there is a catch there though and",
    "start": "646720",
    "end": "654000"
  },
  {
    "start": "652000",
    "end": "652000"
  },
  {
    "text": "it will come up when we build the system we follow out a couple of AR ecture principles so",
    "start": "654000",
    "end": "661440"
  },
  {
    "text": "as a team we decided that we wanted to build autonomous business capabilities",
    "start": "661440",
    "end": "666680"
  },
  {
    "text": "and that means that we divide the Ser uh the domain into different parts so every",
    "start": "666680",
    "end": "673399"
  },
  {
    "text": "functional part of the gas storage domain will be able to run on its own",
    "start": "673399",
    "end": "678600"
  },
  {
    "text": "and that means if one of these services that we buil goes down the other services should not be bothered by it",
    "start": "678600",
    "end": "685480"
  },
  {
    "text": "and the way you can do that is by introducing asynchronous communication instead of synchronous so to put it",
    "start": "685480",
    "end": "692920"
  },
  {
    "text": "directly we don't do service to service calls we only do pops up",
    "start": "692920",
    "end": "698959"
  },
  {
    "text": "messaging we built these autonomous business capabilities as scalable inversion units and that means uh",
    "start": "699639",
    "end": "707240"
  },
  {
    "text": "scalable means that it can be sized to uh to the need uh that means if we have",
    "start": "707240",
    "end": "714040"
  },
  {
    "text": "a demand for more performance more throughput then we can scale one of these units instead of having to scale",
    "start": "714040",
    "end": "719240"
  },
  {
    "text": "scale the entire system which is well more cost efficient and by running",
    "start": "719240",
    "end": "724880"
  },
  {
    "text": "multiple versions side by side we can make the coupling between teams lower so",
    "start": "724880",
    "end": "730120"
  },
  {
    "text": "if a team is using my data contracts from version one I'm introducing version",
    "start": "730120",
    "end": "735279"
  },
  {
    "text": "two then they will have a little bit of time to start adapting version two so a",
    "start": "735279",
    "end": "740480"
  },
  {
    "text": "change on my end does not necessarily mean a change on their end giving the teams even more autonomy",
    "start": "740480",
    "end": "748920"
  },
  {
    "text": "we also made sure that the system was very developer friendly and that means uh well first and foremost autonomous",
    "start": "750240",
    "end": "756120"
  },
  {
    "text": "teams so they can decide for themselves when to start releasing their stuff into production we also do F5 in five so",
    "start": "756120",
    "end": "764040"
  },
  {
    "text": "assuming that a new team member has a working laptop with uh some software pre-installed it is just a matter of",
    "start": "764040",
    "end": "770639"
  },
  {
    "text": "pulling the repo hitting F5 and they can be productive and the way we do that is by",
    "start": "770639",
    "end": "777360"
  },
  {
    "text": "using a lot of containers especially on Local Host we can make sure that all the",
    "start": "777360",
    "end": "782600"
  },
  {
    "text": "systems that we use in Azure have counterparts that we can run as containers on Local Host so you can even",
    "start": "782600",
    "end": "789680"
  },
  {
    "text": "work offline if you zoom in on which Services",
    "start": "789680",
    "end": "797760"
  },
  {
    "start": "794000",
    "end": "794000"
  },
  {
    "text": "the whole gas storage domain makes up you can see that there are a few uh functional uh distinctions to be made so",
    "start": "797760",
    "end": "805079"
  },
  {
    "text": "the first one and the most important one is dispatch and this is is where customers energy companies go and start",
    "start": "805079",
    "end": "812600"
  },
  {
    "text": "requesting either injection or withdrawal of gas from the storage each and every one of those",
    "start": "812600",
    "end": "819160"
  },
  {
    "text": "customers has a contract H that specifies how much gas they are entitled",
    "start": "819160",
    "end": "824880"
  },
  {
    "text": "to put into that storage and at which rate they can take it out or put it in",
    "start": "824880",
    "end": "830160"
  },
  {
    "text": "and these are the capacities I'm talking about if one of these customers has too",
    "start": "830160",
    "end": "837399"
  },
  {
    "text": "much capacity or too little they can start trading uh access capacity among each other so it's very",
    "start": "837399",
    "end": "843600"
  },
  {
    "text": "much like the stock market here so if I have too much space available I can sell",
    "start": "843600",
    "end": "849440"
  },
  {
    "text": "a little bit of that space to you and then uh everyone is happy and of course",
    "start": "849440",
    "end": "854720"
  },
  {
    "text": "uh the storage operator gets a cut from every uh transaction being made and this is done in the finance domain so the",
    "start": "854720",
    "end": "861480"
  },
  {
    "text": "finance domain it will no um monitor all the transactions being made in the",
    "start": "861480",
    "end": "867079"
  },
  {
    "text": "dispatch in the trade domains and then for every uh line it will well calculate",
    "start": "867079",
    "end": "873320"
  },
  {
    "text": "what the invoice would be sent to the customer and finally everyone wants to",
    "start": "873320",
    "end": "879079"
  },
  {
    "text": "have some insights in how full this storage is how much of their uh uh contractual capacity they are using how",
    "start": "879079",
    "end": "886120"
  },
  {
    "text": "how much they have been using do they need to modify their contracts well all these insights they can be made in the",
    "start": "886120",
    "end": "892839"
  },
  {
    "text": "dispatching sorry the reporting domain which is also constantly monitoring all the changes in the other domain",
    "start": "892839",
    "end": "899680"
  },
  {
    "text": "storing it in data warehouse so you can make nice uh cubes and",
    "start": "899680",
    "end": "906519"
  },
  {
    "text": "charts right so I already mentioned that the dispatch service is the most",
    "start": "907320",
    "end": "912639"
  },
  {
    "start": "908000",
    "end": "908000"
  },
  {
    "text": "important one and well this is why it's featured in My Demo as well so let's",
    "start": "912639",
    "end": "918360"
  },
  {
    "text": "zoom in a little bit on the dispatching service so this is a single single page",
    "start": "918360",
    "end": "924320"
  },
  {
    "text": "web application front end which the customers can use to log into and then",
    "start": "924320",
    "end": "929480"
  },
  {
    "text": "they can start uh well getting some insights in how their storage capacity",
    "start": "929480",
    "end": "934519"
  },
  {
    "text": "is uh is doing and start requesting injection and",
    "start": "934519",
    "end": "939839"
  },
  {
    "text": "withdrawal well a front end always needs to talk to an API of course and this is the dispatch API this is a net core web",
    "start": "940079",
    "end": "947680"
  },
  {
    "text": "API uh it will receive these requests coming in from the front end whenever uh",
    "start": "947680",
    "end": "953519"
  },
  {
    "text": "the plant needs to be contacted it will not do service to service calls no it will send mess mesages and then at some",
    "start": "953519",
    "end": "960720"
  },
  {
    "text": "point messages uh will come back and if the front end needs to be notified about any changes we can use signal R for that",
    "start": "960720",
    "end": "968519"
  },
  {
    "text": "so we can do asynchronous pushes of changes to the front end and while I already mentioned the",
    "start": "968519",
    "end": "975880"
  },
  {
    "text": "plant API this is where the actual compressors are that uh there are physical physically part of the gas",
    "start": "975880",
    "end": "982120"
  },
  {
    "text": "storage um and the network this is where the magic happens so dispatch API says",
    "start": "982120",
    "end": "987920"
  },
  {
    "text": "how much and the plant API will actually do the the dirty",
    "start": "987920",
    "end": "993000"
  },
  {
    "text": "business it's important to know plant API it has an it has an API so you can",
    "start": "993000",
    "end": "999079"
  },
  {
    "text": "ask it how it's doing but you can never tell it to do stuff you can only ask queries how are you doing what is your",
    "start": "999079",
    "end": "1005519"
  },
  {
    "text": "health uh state for example nothing uh operational so the way this works um",
    "start": "1005519",
    "end": "1013560"
  },
  {
    "text": "this demo works is front end will send a message to the dispatch API which is",
    "start": "1013560",
    "end": "1019160"
  },
  {
    "text": "call this dispatch API will send a message on a Queue at some point the",
    "start": "1019160",
    "end": "1025160"
  },
  {
    "text": "plant API will pick up that message start procing processing it in reality this can take hours weeks months because",
    "start": "1025160",
    "end": "1032798"
  },
  {
    "text": "you can plan ahead in My Demo it's almost real time once the plant is done uh it sends",
    "start": "1032799",
    "end": "1039798"
  },
  {
    "text": "a message back to anyone who is interested in this situation it's the dispatch API it sees oh my order was",
    "start": "1039799",
    "end": "1046558"
  },
  {
    "text": "processed so it notifies the front end using signal",
    "start": "1046559",
    "end": "1051559"
  },
  {
    "start": "1051000",
    "end": "1051000"
  },
  {
    "text": "R well of course I cannot show you the real system uh that won't work but I did",
    "start": "1051760",
    "end": "1058799"
  },
  {
    "text": "uh create a nice demo uh using all kinds of uh fancy new features like uh Blazer",
    "start": "1058799",
    "end": "1064280"
  },
  {
    "text": "web assembly Dapper H Docker every cool stuff uh is right in here and the cool",
    "start": "1064280",
    "end": "1070559"
  },
  {
    "text": "thing is it is open source and it's uh free for all to",
    "start": "1070559",
    "end": "1075799"
  },
  {
    "text": "get I do have a a nice reason to to use Dapper by the way um I wouldn't",
    "start": "1075799",
    "end": "1082000"
  },
  {
    "text": "necessarily say it's production ready but for demos it's really a killer framework and this is because it allows",
    "start": "1082000",
    "end": "1089559"
  },
  {
    "text": "me to easily and simply create a a solution that uses a state store and a",
    "start": "1089559",
    "end": "1094880"
  },
  {
    "text": "message uh pops up system so these are just components read readily available",
    "start": "1094880",
    "end": "1100640"
  },
  {
    "text": "and I can configure um my application in well matter of seconds to start using",
    "start": "1100640",
    "end": "1106880"
  },
  {
    "text": "this storage the cool thing is uh depper has",
    "start": "1106880",
    "end": "1112960"
  },
  {
    "text": "abstracted um the actual implementation from the uh interfaces so if I say I",
    "start": "1112960",
    "end": "1118159"
  },
  {
    "text": "want to use a state store on my laptop I can choose my state store to be a database running in a container and if",
    "start": "1118159",
    "end": "1125200"
  },
  {
    "text": "I'm running in Azure I can be running on kubernetes or container apps for example my state store could be an Azure storage",
    "start": "1125200",
    "end": "1132400"
  },
  {
    "text": "account and by simply changing a little bit of configuration I can Target different stores and I don't ever have",
    "start": "1132400",
    "end": "1138799"
  },
  {
    "text": "to change my code kind of a killer feature in this",
    "start": "1138799",
    "end": "1144600"
  },
  {
    "text": "case finally I already mentioned we're heavily relying on containers so uh well",
    "start": "1144840",
    "end": "1150240"
  },
  {
    "text": "this is where Docker compost comes in and don't worry uh I'll show it all but Docker compose you can use it from",
    "start": "1150240",
    "end": "1157000"
  },
  {
    "text": "Visual Studio to not only spin up uh your own production sorry your own uh written code but you can also spin up",
    "start": "1157000",
    "end": "1164640"
  },
  {
    "text": "well this mongod DB I was talking about and you can spin up the Dapper side cars and well and just a matter of F5 and you can",
    "start": "1164640",
    "end": "1171559"
  },
  {
    "text": "do debugging so it's kind of a powerful uh mechanism there so let's switch",
    "start": "1171559",
    "end": "1179559"
  },
  {
    "text": "to I'll show you the the working demo first so don't worry it's very simple this is",
    "start": "1179559",
    "end": "1187240"
  },
  {
    "text": "my uh my current view of the gas storage I'm in the dispatching domain I have logged in as a customer and now I can",
    "start": "1187240",
    "end": "1194960"
  },
  {
    "text": "say well I want to inject uh 12 from",
    "start": "1194960",
    "end": "1200039"
  },
  {
    "text": "example and then uh you see a a blue popup there and that means that a message was sent and a message was",
    "start": "1200039",
    "end": "1206440"
  },
  {
    "text": "received back and all that stuff happened in the background and the way this works",
    "start": "1206440",
    "end": "1211720"
  },
  {
    "text": "is well by um Docker compose",
    "start": "1211720",
    "end": "1219240"
  },
  {
    "text": "so if you look at uh this Docker compose file and well it won't take forever so",
    "start": "1219240",
    "end": "1224400"
  },
  {
    "text": "if you're not familiar with Doc and compose just uh close your ears for for a minute but uh if you are this may be",
    "start": "1224400",
    "end": "1230480"
  },
  {
    "text": "interesting so this is my dispatch API this is Dapper side car attached to it",
    "start": "1230480",
    "end": "1236360"
  },
  {
    "text": "so um yeah I'm not going to go into details about that the plant API plant",
    "start": "1236360",
    "end": "1241760"
  },
  {
    "text": "API Dapper and this is the way you can run this in production but I'm not running in production I'm running on my",
    "start": "1241760",
    "end": "1248720"
  },
  {
    "text": "laptop so I want to do an addition of some helper containers so like I",
    "start": "1248720",
    "end": "1254679"
  },
  {
    "text": "mentioned I'm adding mongod DB as my state store I'm adding Express as a way to look inside this database",
    "start": "1254679",
    "end": "1262360"
  },
  {
    "text": "I'm adding red is for pops up messaging and you guessed it redish insides to",
    "start": "1262360",
    "end": "1267480"
  },
  {
    "text": "have a look at what my pops up messaging system is doing so I not only have a",
    "start": "1267480",
    "end": "1272880"
  },
  {
    "text": "working queuing system but I can also see inside that queuing system what's happening",
    "start": "1272880",
    "end": "1279760"
  },
  {
    "text": "well uh you can see that happening here so this is the reddish insights container I've already sent a a few",
    "start": "1279760",
    "end": "1287279"
  },
  {
    "text": "messages by requesting storage so if I hit this button a couple of",
    "start": "1287279",
    "end": "1293520"
  },
  {
    "text": "times it will start doing stuff and that stuff will immediately show up here so",
    "start": "1293520",
    "end": "1299440"
  },
  {
    "text": "if there's an issue I can probably locate it here if the issue is in my messaging system I can even go into",
    "start": "1299440",
    "end": "1307679"
  },
  {
    "text": "these messaging streams and see the exact data that was sent over the wire",
    "start": "1307679",
    "end": "1313039"
  },
  {
    "text": "so this is a request flowing in and this is a response after processing and for example can see uh well this one has",
    "start": "1313039",
    "end": "1322400"
  },
  {
    "text": "succeeded and the same thing goes for the Telemetry about which information is",
    "start": "1322400",
    "end": "1328080"
  },
  {
    "text": "Flowing between the services so I can run a query",
    "start": "1328080",
    "end": "1333480"
  },
  {
    "text": "here uh I need to be faster so let me quickly hit this button a couple more",
    "start": "1333480",
    "end": "1339279"
  },
  {
    "text": "times and now quickly go here",
    "start": "1339279",
    "end": "1346279"
  },
  {
    "text": "yes without touching uh well any Telemetry at all I just add this",
    "start": "1346320",
    "end": "1351760"
  },
  {
    "text": "container to my composition it has a magic endpoint and Dapper will know where to send its data and Telemetry",
    "start": "1351760",
    "end": "1358760"
  },
  {
    "text": "start showing up here I didn't write a single line of code for all this Telemetry to appear here but you can see",
    "start": "1358760",
    "end": "1364840"
  },
  {
    "text": "stuff is happening apparently with the plant API in the dispatch API and I can",
    "start": "1364840",
    "end": "1369919"
  },
  {
    "text": "even make it uh more graphical by showing you this I can zoom in somehow",
    "start": "1369919",
    "end": "1375279"
  },
  {
    "text": "but uh the left one is the dispatch API this is the plant API and you can see",
    "start": "1375279",
    "end": "1381240"
  },
  {
    "text": "messages flowing between them and the amount of uh circles that you see are",
    "start": "1381240",
    "end": "1386720"
  },
  {
    "text": "indicative of the amount of traffic relatively so kind of cool zero",
    "start": "1386720",
    "end": "1394799"
  },
  {
    "text": "code and finally if I want to see what's happening in my state store I can have a",
    "start": "1394799",
    "end": "1400200"
  },
  {
    "text": "look at Express but this will come up in my second",
    "start": "1400200",
    "end": "1405400"
  },
  {
    "text": "demo right",
    "start": "1405919",
    "end": "1409919"
  },
  {
    "start": "1413000",
    "end": "1413000"
  },
  {
    "text": "well how do we deploy this into production well of course we use automation for that and we kept it as",
    "start": "1414360",
    "end": "1421520"
  },
  {
    "text": "simple as possible so whenever a developer changes code it is written on",
    "start": "1421520",
    "end": "1427080"
  },
  {
    "text": "the laptop of course uh but at some point you will push it to a central repository in this case as",
    "start": "1427080",
    "end": "1433559"
  },
  {
    "text": "devops uh this will trigger a uh continuous delivery pipe one so first we we will compile the code we will run all",
    "start": "1433559",
    "end": "1441279"
  },
  {
    "text": "kinds of unit and integration tests against it and if that all works out we will generate container image and tag it",
    "start": "1441279",
    "end": "1448080"
  },
  {
    "text": "with a new version and then we will push that container image to an Azure container registry we want it to be a",
    "start": "1448080",
    "end": "1454799"
  },
  {
    "text": "private registry not just Ducker Hub which anyone can use now this is uh intellectual property here so it's a",
    "start": "1454799",
    "end": "1460880"
  },
  {
    "text": "private container registry once this image is available we",
    "start": "1460880",
    "end": "1466559"
  },
  {
    "text": "can talk to kubernetes which is our production uh container cluster and we can say hey there's a new version",
    "start": "1466559",
    "end": "1473159"
  },
  {
    "text": "available please go ahead and upgrade it for me kubernetes will then uh well it",
    "start": "1473159",
    "end": "1479039"
  },
  {
    "text": "will uh make sure that the new state is applied so the new uh tag tag version is",
    "start": "1479039",
    "end": "1484399"
  },
  {
    "text": "the one uh running in test at that point we can do manual testing smoke testing",
    "start": "1484399",
    "end": "1489600"
  },
  {
    "text": "integration sorry uh coded UI test for example and if we're happy we take that",
    "start": "1489600",
    "end": "1495000"
  },
  {
    "text": "same exact container image version and deploy that to",
    "start": "1495000",
    "end": "1500039"
  },
  {
    "text": "production well there needs to be a small difference in configuration of course because the test environment us",
    "start": "1500039",
    "end": "1506760"
  },
  {
    "text": "uses a test database and a test messaging queue for example we need to configure it to be uh",
    "start": "1506760",
    "end": "1514720"
  },
  {
    "text": "listening to the production systems now the only thing that changes between these deployments is the configuration",
    "start": "1514720",
    "end": "1520360"
  },
  {
    "text": "files so container image is immutable and it flows through different different",
    "start": "1520360",
    "end": "1525440"
  },
  {
    "text": "environments it can even run on my laptop um the trick is providing the proper",
    "start": "1525440",
    "end": "1532120"
  },
  {
    "text": "configuration for the proper environment well let's have a look at",
    "start": "1532120",
    "end": "1538000"
  },
  {
    "start": "1536000",
    "end": "1536000"
  },
  {
    "text": "the Azure architecture now it is quite complicated and don't worry I will show you uh uh the holistic",
    "start": "1538000",
    "end": "1545200"
  },
  {
    "text": "overview so on the left hand side in the well yellowish uh thing we can see",
    "start": "1545200",
    "end": "1551360"
  },
  {
    "text": "Global Services like traffic manager Azure active directory and uh all that",
    "start": "1551360",
    "end": "1556559"
  },
  {
    "text": "sort of stuff then in the red we have these two firewalls the firewall on the",
    "start": "1556559",
    "end": "1563840"
  },
  {
    "text": "left is an application Gateway web application firewall and it will protect",
    "start": "1563840",
    "end": "1569240"
  },
  {
    "text": "traffic flowing into the system the one on the right it will protect traffic",
    "start": "1569240",
    "end": "1574279"
  },
  {
    "text": "flowing out of the system so left Ingress and right egress and both need",
    "start": "1574279",
    "end": "1579799"
  },
  {
    "text": "to be monitored because well like I mentioned there's a lot of zeros flowing through this",
    "start": "1579799",
    "end": "1585120"
  },
  {
    "text": "system then all the compute runs in AK S as your kubernetes services and we made",
    "start": "1585120",
    "end": "1591440"
  },
  {
    "text": "sure that uh the system node pool the one on the left is separated from the workload Noe",
    "start": "1591440",
    "end": "1597919"
  },
  {
    "text": "pools and we have two Noe pools for the workloads and that is because we want to run multiple versions side by side and",
    "start": "1597919",
    "end": "1605200"
  },
  {
    "text": "they cannot interfere with each other so if one goes all the way uh like a Haywire using CPU or memory it won't",
    "start": "1605200",
    "end": "1612760"
  },
  {
    "text": "affect the other version and by simply switching using a DNS trick we can say this is now the the production version",
    "start": "1612760",
    "end": "1620000"
  },
  {
    "text": "and by this means we can separate our releases so we can put binaries on those",
    "start": "1620000",
    "end": "1625200"
  },
  {
    "text": "nodes we can separate the release of those nodes to the customers from the deployments of the nodes so by simply",
    "start": "1625200",
    "end": "1633159"
  },
  {
    "text": "saying uh green is now production or blue is now production we can switch between versions do fallbacks uh in a",
    "start": "1633159",
    "end": "1640360"
  },
  {
    "text": "matter of seconds well all this comput of course",
    "start": "1640360",
    "end": "1646600"
  },
  {
    "text": "it generates a lot of data and the data need to be stored somewhere well we have storage for uh for binaries we have",
    "start": "1646600",
    "end": "1653320"
  },
  {
    "text": "storage for container images for Secrets uh of course structured data is in SQL",
    "start": "1653320",
    "end": "1658960"
  },
  {
    "text": "server and all the Telemetry is kept in log",
    "start": "1658960",
    "end": "1664279"
  },
  {
    "text": "analytics well the way we deploy all this infrastructure I already mentioned this is done automatically and you will",
    "start": "1665880",
    "end": "1673480"
  },
  {
    "text": "see this is very similar to The Way We deploy our binaries our software to produ ction so same thing happens we",
    "start": "1673480",
    "end": "1680399"
  },
  {
    "text": "have this repository we have files defining the infrastructure infrastructure as code and we well",
    "start": "1680399",
    "end": "1687080"
  },
  {
    "text": "whenever A Change Is Made we can run the tests that uh make sure that um the the",
    "start": "1687080",
    "end": "1692519"
  },
  {
    "text": "Powershell scripts that we have are still valid and then uh we can deploy these templates to a test environment",
    "start": "1692519",
    "end": "1699519"
  },
  {
    "text": "automatically no Hands-On and then once this is done we know that the scripts",
    "start": "1699519",
    "end": "1704840"
  },
  {
    "text": "and the changes are valid and then we can go ahead and deploy the same uh changes to the production",
    "start": "1704840",
    "end": "1712159"
  },
  {
    "text": "environment really nice there's a catch here as",
    "start": "1712159",
    "end": "1717518"
  },
  {
    "text": "well so at some point fortunately before we were running a production uh that",
    "start": "1718120",
    "end": "1724399"
  },
  {
    "text": "that was a close one uh we had a really na nasty surprise in our Azure bill so what happened during the weekend",
    "start": "1724399",
    "end": "1732559"
  },
  {
    "text": "of course during the weekend there was this crash Loop in one of our parts and",
    "start": "1732559",
    "end": "1737600"
  },
  {
    "text": "the part was was running on many virtual machines so it was crashing on many virtual machines and starting over",
    "start": "1737600",
    "end": "1743440"
  },
  {
    "text": "crashing starting over and all this useless Telemetry that was gathered by the uh the logging agent and put into",
    "start": "1743440",
    "end": "1751480"
  },
  {
    "text": "log analytics and log analytics is one of the most expensive Azure resources if",
    "start": "1751480",
    "end": "1757240"
  },
  {
    "text": "you put stuff in it so don't put stuff in it it's free but it's soon as you",
    "start": "1757240",
    "end": "1762519"
  },
  {
    "text": "start using it it is hugely expensive and well that was what happened to us so we had a really nasty",
    "start": "1762519",
    "end": "1769440"
  },
  {
    "text": "surprise in the AZ it did of course trigger us to start thinking about well cost optimization so",
    "start": "1769440",
    "end": "1777320"
  },
  {
    "text": "we had all this nice stuff in place all we were monitoring in infrastructure Health we were monitoring software",
    "start": "1777320",
    "end": "1783760"
  },
  {
    "text": "Health we forgot to monitor software cost sorry infrastructure",
    "start": "1783760",
    "end": "1789000"
  },
  {
    "text": "cost so what we did uh we added spent to the dashboard so every developer going",
    "start": "1789000",
    "end": "1795640"
  },
  {
    "text": "to the portal would immediately see the current spend and if there is a spike there well it will show up that is part",
    "start": "1795640",
    "end": "1801919"
  },
  {
    "text": "one we've put hard caps on the nonproduction environments so if it ever happened again uh simply it would stop",
    "start": "1801919",
    "end": "1809320"
  },
  {
    "text": "working which is really nice save money and of course you cannot do this in production because this is a system that",
    "start": "1809320",
    "end": "1815960"
  },
  {
    "text": "needs to be up and running so we want to be notified about costs going out of control we don't want anything to stop",
    "start": "1815960",
    "end": "1822960"
  },
  {
    "text": "working so this is why we can have cost alerts these uh so-call budgets within",
    "start": "1822960",
    "end": "1828279"
  },
  {
    "text": "Azure if we get to 80% of the budget we will get an email well somebody needs to monitor",
    "start": "1828279",
    "end": "1836399"
  },
  {
    "text": "that email uh and do stuff with it and this is why we also started running on",
    "start": "1836399",
    "end": "1841679"
  },
  {
    "text": "call duty at that time we weren't in production yet but we talked about it uh",
    "start": "1841679",
    "end": "1846960"
  },
  {
    "text": "it made sense start running on duty Call um calls on uh the system before it was",
    "start": "1846960",
    "end": "1854760"
  },
  {
    "text": "even running in production and this allowed us well to get used to doing",
    "start": "1854760",
    "end": "1860120"
  },
  {
    "text": "this it was my first time running supports uh Duty we needed to get",
    "start": "1860120",
    "end": "1865279"
  },
  {
    "text": "familiarized with the page of Duty tool which uh is the incident reporting uh system we can also uh we could also use",
    "start": "1865279",
    "end": "1873480"
  },
  {
    "text": "this time to start documenting uh the proper way to deal with these outages",
    "start": "1873480",
    "end": "1878559"
  },
  {
    "text": "because well a lot of these outages they happen at night somehow and you get cold out of bed you are not as sharp as you",
    "start": "1878559",
    "end": "1886159"
  },
  {
    "text": "are during the day you want to get back to bed as soon as possible so it really helps if you had this run book available",
    "start": "1886159",
    "end": "1892919"
  },
  {
    "text": "specifying do this do this do that make sure that this is in place and then uh",
    "start": "1892919",
    "end": "1898360"
  },
  {
    "text": "go back to bed so this really helped us and",
    "start": "1898360",
    "end": "1903440"
  },
  {
    "text": "um yeah okay it's good we also had another look at the",
    "start": "1903440",
    "end": "1909720"
  },
  {
    "text": "services that make up the gas storage domain so we had a good look we talked to the customer and we said well what",
    "start": "1909720",
    "end": "1916679"
  },
  {
    "text": "will happen if one of these Services goes down uh for a longer period of time and it turned out that it was okay for",
    "start": "1916679",
    "end": "1924880"
  },
  {
    "text": "all of these uh systems to be offline for a day for a couple of days even",
    "start": "1924880",
    "end": "1930000"
  },
  {
    "text": "except for the dispatch domain so as long as customers can request either injection and withdrawal and it's",
    "start": "1930000",
    "end": "1936600"
  },
  {
    "text": "actually processed the customer was happy so all these other systems they were running on",
    "start": "1936600",
    "end": "1943000"
  },
  {
    "text": "well high level skus it wasn't even needed so we could optimize for of course there as",
    "start": "1943000",
    "end": "1949840"
  },
  {
    "text": "well so we did we infrastruct we refactored the infrastructure optimizing",
    "start": "1949840",
    "end": "1956600"
  },
  {
    "text": "for cost so the mission critical Parts they kept running on these really beefy",
    "start": "1956600",
    "end": "1961840"
  },
  {
    "text": "uh premium skus but the other stuff that could run on standard sqs because it",
    "start": "1961840",
    "end": "1966880"
  },
  {
    "text": "doesn't matter if it's down and of course every Dev and test environment can always run on uh sub premium",
    "start": "1966880",
    "end": "1974360"
  },
  {
    "text": "Hardware we also introduced Dynamic scaling so we had a good feeling about",
    "start": "1974360",
    "end": "1980159"
  },
  {
    "text": "the hours that the system would be used most so we could scale uh well for the",
    "start": "1980159",
    "end": "1986200"
  },
  {
    "text": "Peaks and then scale down uh for the throughs we also added conditions to",
    "start": "1986200",
    "end": "1992919"
  },
  {
    "text": "resources so um this Azure firewall I'm not sure if you've ever ever used it but",
    "start": "1992919",
    "end": "1998240"
  },
  {
    "text": "that is quite an expensive resource and an application application Gateway with application firewall also very",
    "start": "1998240",
    "end": "2005840"
  },
  {
    "text": "expensive you don't need that in your test environment right so who's going to hack your test environment and what will",
    "start": "2005840",
    "end": "2011240"
  },
  {
    "text": "they get well in our case there's no production data there so good luck so we",
    "start": "2011240",
    "end": "2017760"
  },
  {
    "text": "added conditions to resources making sure that we only had expensive resources in the uh production",
    "start": "2017760",
    "end": "2024919"
  },
  {
    "text": "environment and well this is the downside AR downsized architecture as you can see fewer icons",
    "start": "2024919",
    "end": "2033320"
  },
  {
    "text": "so fewer icons means lower Azure Bill lower Azure bill is always nice uh but",
    "start": "2033320",
    "end": "2039279"
  },
  {
    "text": "it's also nice for the developers lower complexity fewer icons means lower systems to interact with",
    "start": "2039279",
    "end": "2046320"
  },
  {
    "text": "right there was a downside however so now our test environment is no longer",
    "start": "2046320",
    "end": "2051839"
  },
  {
    "text": "identical to our production environment so how do we know that if we make code changes that affect the production",
    "start": "2051839",
    "end": "2058599"
  },
  {
    "text": "environment how do we know that they won't break this is something we solved",
    "start": "2058599",
    "end": "2066200"
  },
  {
    "text": "later but first oh no there was another outage in Azure ah and this time uh we",
    "start": "2066720",
    "end": "2072919"
  },
  {
    "text": "were running in production and I was in fact uh called out of bat for this one",
    "start": "2072919",
    "end": "2079280"
  },
  {
    "text": "so between dispatching Finance trade reporting we always use pops up",
    "start": "2079280",
    "end": "2085040"
  },
  {
    "text": "messaging we heavily rely on messaging so whenever State changes inside",
    "start": "2085040",
    "end": "2090358"
  },
  {
    "text": "dispatching a customer has requested something and it has been processed we notify the rest of the systems by",
    "start": "2090359",
    "end": "2096398"
  },
  {
    "text": "messaging pop messaging you just send a message every other system will get it",
    "start": "2096399",
    "end": "2102079"
  },
  {
    "text": "it's important to realize that dispatching uh needs to be able to send this message but the other systems they",
    "start": "2102079",
    "end": "2109040"
  },
  {
    "text": "don't need to be able to receive it so this is not part of the mission critical path not part of the time critical",
    "start": "2109040",
    "end": "2116000"
  },
  {
    "text": "part so you guessed it as your service bus was down uh messages could not be sent",
    "start": "2116000",
    "end": "2123280"
  },
  {
    "text": "and we will call out of bed so we needed to deal with this and the way how it",
    "start": "2123280",
    "end": "2128520"
  },
  {
    "text": "will come up so we decided we don't want this anymore so uh let's refactor the",
    "start": "2128520",
    "end": "2135599"
  },
  {
    "text": "infrastructure a little bit more we added multiple regions so instead of running only in West Europe",
    "start": "2135599",
    "end": "2142440"
  },
  {
    "text": "on redundant Hardware we added an entire new region in uh North Europe and North",
    "start": "2142440",
    "end": "2148560"
  },
  {
    "text": "Europe would mostly act as a hot standby so it would be there binaries would be",
    "start": "2148560",
    "end": "2154839"
  },
  {
    "text": "running but no DNS uh tricks were done to have traffic flow to that system so",
    "start": "2154839",
    "end": "2161280"
  },
  {
    "text": "effectively it would do nothing it would be just standing there uh ready for action but not actually doing that but",
    "start": "2161280",
    "end": "2168560"
  },
  {
    "text": "for queuing we thought well uh a message can easily be posted to uh the the",
    "start": "2168560",
    "end": "2176079"
  },
  {
    "text": "secondary queue and then be received there the only thing that we need to do is have a little bit of magic deciding",
    "start": "2176079",
    "end": "2182839"
  },
  {
    "text": "which message queue we are using and on the other hand we need to start listening to two messaging cues well",
    "start": "2182839",
    "end": "2189880"
  },
  {
    "text": "then we at least we pay for all these resources into two regions and actually use them so that's a nice benefit so",
    "start": "2189880",
    "end": "2196599"
  },
  {
    "text": "this is one way to solve the queue unavailability",
    "start": "2196599",
    "end": "2201800"
  },
  {
    "text": "issue of course we have this uh uh this environment in the secondary Azure region now and it's running but how do",
    "start": "2201800",
    "end": "2209000"
  },
  {
    "text": "you know it will work when uh there is a disaster so we decided we wanted to do a",
    "start": "2209000",
    "end": "2215160"
  },
  {
    "text": "failover at least once per day so every day that we were in the office we would",
    "start": "2215160",
    "end": "2220280"
  },
  {
    "text": "start by doing a failover and then uh it would work or not but we would find out",
    "start": "2220280",
    "end": "2226480"
  },
  {
    "text": "really fast and then uh if there was ever a need to do a failover because of",
    "start": "2226480",
    "end": "2232560"
  },
  {
    "text": "an outage inure we would just have complete faith in this process so now it",
    "start": "2232560",
    "end": "2237880"
  },
  {
    "text": "will work you could just get out of bed hit the failover button go back to bed this is how much faith we had in the",
    "start": "2237880",
    "end": "2244200"
  },
  {
    "text": "system of course you want to check if the problem has been resolved but you know where I'm",
    "start": "2244200",
    "end": "2249599"
  },
  {
    "text": "going it's no use to have a secondary environment if you do not absolutely know for sure that it's actually",
    "start": "2249599",
    "end": "2256400"
  },
  {
    "text": "working and that means uh well you need to eliminate single point of failures",
    "start": "2256400",
    "end": "2261880"
  },
  {
    "text": "you need to have redundancy for everything every part of your system you need to duplicate infrastructure so you",
    "start": "2261880",
    "end": "2268599"
  },
  {
    "text": "have two elements of compute running you have two data stores running and okay",
    "start": "2268599",
    "end": "2275000"
  },
  {
    "text": "well if you have two data stores running you need to deal with some issues of course so compute in the green part",
    "start": "2275000",
    "end": "2282480"
  },
  {
    "text": "that's easy it's stateless it will just scale all over the planet and well it doesn't keep any data so you never need",
    "start": "2282480",
    "end": "2289079"
  },
  {
    "text": "to look for your data it will just work but the red part the data stores they",
    "start": "2289079",
    "end": "2295079"
  },
  {
    "text": "need special care so for databases uh we use aure SQL",
    "start": "2295079",
    "end": "2303319"
  },
  {
    "text": "which comes uh out of the box with a really nice feature it's called Geo replication it's just a feature you pay",
    "start": "2303319",
    "end": "2308960"
  },
  {
    "text": "for and it will allow you to have two databases running in two separate Azure regions you say this is now the the one",
    "start": "2308960",
    "end": "2315760"
  },
  {
    "text": "to talk to the primary one and aure will make sure that all traffic goes there",
    "start": "2315760",
    "end": "2320920"
  },
  {
    "text": "the data is stored there and every bit of data stored there will be copied there you can do fail over you can do",
    "start": "2320920",
    "end": "2328319"
  },
  {
    "text": "fail back you can switch multiple times uh per day switch is always done uh",
    "start": "2328319",
    "end": "2333760"
  },
  {
    "text": "while waiting for pending transactions so you never lose any data unless one actually explodes so really solid",
    "start": "2333760",
    "end": "2341119"
  },
  {
    "text": "process definitely something to",
    "start": "2341119",
    "end": "2345119"
  },
  {
    "text": "recommend well if you uh have a look at blob storage blob storage is a totally",
    "start": "2346240",
    "end": "2352520"
  },
  {
    "text": "different Beast so blob storage does come with a built-in failover option but",
    "start": "2352520",
    "end": "2357920"
  },
  {
    "text": "this well the the state of the system after failover is a single region copy of your data you will need to make sure",
    "start": "2357920",
    "end": "2365040"
  },
  {
    "text": "that it becomes a Geo redundance system again so copies the data back to the original",
    "start": "2365040",
    "end": "2370720"
  },
  {
    "text": "region and there's no warning at what point in time this is done so that's not",
    "start": "2370720",
    "end": "2376319"
  },
  {
    "text": "something that we uh felt comfortable using so we decided Well we don't generate a lot of blob data every day",
    "start": "2376319",
    "end": "2383520"
  },
  {
    "text": "when we do a failover it's just momentarily so why don't we just bring the data that was generated in the",
    "start": "2383520",
    "end": "2389960"
  },
  {
    "text": "secondary region back to the primary region when we fell back and that works really well for us so we just have two",
    "start": "2389960",
    "end": "2396880"
  },
  {
    "text": "databases and if one has data we copy it over to the uh primary which is our favorite",
    "start": "2396880",
    "end": "2405119"
  },
  {
    "text": "location and I already explained about pops up messaging we just have two cues running active active and if one que",
    "start": "2405119",
    "end": "2412400"
  },
  {
    "text": "fails uh we send it to the other one and that's well works really well only sometimes you get this message",
    "start": "2412400",
    "end": "2420640"
  },
  {
    "text": "and you get it twice because the sending party it said well no I was unable to send the message but the message message",
    "start": "2420640",
    "end": "2427520"
  },
  {
    "text": "queue did in fact uh crash after receiving the message it happens and",
    "start": "2427520",
    "end": "2432800"
  },
  {
    "text": "then you get two identical messages flowing into your system at one point and then well you need to D duplicate it",
    "start": "2432800",
    "end": "2439640"
  },
  {
    "text": "of course uh fortunately aure service bus has built-in capabilities for message D duplication it's not uh the",
    "start": "2439640",
    "end": "2447079"
  },
  {
    "text": "Holy Grail but at least it's something so what we did is we uh brought back the",
    "start": "2447079",
    "end": "2452800"
  },
  {
    "text": "processing of messages to a single instance and then uh well we keep a list",
    "start": "2452800",
    "end": "2458119"
  },
  {
    "text": "of messages that we already processed and as soon uh as long as that list is persisted somewhere save you can",
    "start": "2458119",
    "end": "2465040"
  },
  {
    "text": "always see okay I already processed this message so I can discard this one and",
    "start": "2465040",
    "end": "2470480"
  },
  {
    "text": "finally we made sure that if a message was processed twice it would not not have side effects so processing the same",
    "start": "2470480",
    "end": "2478200"
  },
  {
    "text": "message twice it is even okay right well let's see how we",
    "start": "2478200",
    "end": "2485800"
  },
  {
    "start": "2483000",
    "end": "2483000"
  },
  {
    "text": "deployed this new uh redundant infrastructure it is very similar to the infrastructure deployment we saw before",
    "start": "2485800",
    "end": "2492720"
  },
  {
    "text": "but what we now do before we uh deploy our um production environment we will",
    "start": "2492720",
    "end": "2498400"
  },
  {
    "text": "first deploy our secondary region then we can test it and if",
    "start": "2498400",
    "end": "2504480"
  },
  {
    "text": "everything is well then we can make the secondary region our primary uh well our main region so the secondary becomes",
    "start": "2504480",
    "end": "2511040"
  },
  {
    "text": "active one that gives us the opportunity to take down the primary region and",
    "start": "2511040",
    "end": "2516520"
  },
  {
    "text": "replace that and if everything is Happy tests uh work out everything is good we can switch",
    "start": "2516520",
    "end": "2523960"
  },
  {
    "text": "back to production and do the fback the cool thing is now we have a",
    "start": "2523960",
    "end": "2530119"
  },
  {
    "text": "place to test our infrastructure uh changes so if we have production level infrastructure changes we can apply them",
    "start": "2530119",
    "end": "2536760"
  },
  {
    "text": "to the secondary environment and find out if these changes are in fact okay so",
    "start": "2536760",
    "end": "2542480"
  },
  {
    "text": "problem solved right well we did not only look",
    "start": "2542480",
    "end": "2549079"
  },
  {
    "text": "at our services which parts of the services are not Mission critical we also looked at our Azure infrastructure",
    "start": "2549079",
    "end": "2556079"
  },
  {
    "text": "so the red Parts in the aure infrastructure are mission critical and it's absolutely vital that these are",
    "start": "2556079",
    "end": "2563400"
  },
  {
    "text": "online at all times so if we don't have Ingress well we cannot receive any uh",
    "start": "2563400",
    "end": "2568640"
  },
  {
    "text": "dispatching requests of course if we don't have computer running well nothing is listening to the",
    "start": "2568640",
    "end": "2575359"
  },
  {
    "text": "Ingress and if we don't have our database then we cannot fetch any contracts so we cannot validate what is",
    "start": "2575359",
    "end": "2582119"
  },
  {
    "text": "coming in so these are absolutely necessary for the system to be alive but",
    "start": "2582119",
    "end": "2588960"
  },
  {
    "text": "all the other stuff and mostly the data related stuff we had a look at and",
    "start": "2588960",
    "end": "2594839"
  },
  {
    "text": "thought well what can we do to reduce the coupling to these data stores so for",
    "start": "2594839",
    "end": "2600480"
  },
  {
    "text": "aure storage for the container registry for key Vol we looked at each and one of them and then decided Well what can we",
    "start": "2600480",
    "end": "2607400"
  },
  {
    "text": "do to lower the direct dependency to these remote systems and that brings us by at the",
    "start": "2607400",
    "end": "2615640"
  },
  {
    "start": "2613000",
    "end": "2613000"
  },
  {
    "text": "next level of this presentation and that is dealing with outages by adding resilience and this is more uh software",
    "start": "2615640",
    "end": "2622400"
  },
  {
    "text": "architecture related so first uh we start cutting dependencies like I mentioned uh start",
    "start": "2622400",
    "end": "2629920"
  },
  {
    "text": "cutting the dependency to storage key Vault all these services that well that",
    "start": "2629920",
    "end": "2635119"
  },
  {
    "text": "can be worked around in case of failure we added some nice design patterns like the retrive pattern and",
    "start": "2635119",
    "end": "2642040"
  },
  {
    "text": "the circuit breaker and we started caching a lot of data locally so fetch it first and then",
    "start": "2642040",
    "end": "2648680"
  },
  {
    "text": "start processing uh based on that information instead of the uh actual remote systems and the last and one of",
    "start": "2648680",
    "end": "2656599"
  },
  {
    "text": "my favorite design patterns is the outbox pattern and it will come up in a nice",
    "start": "2656599",
    "end": "2662280"
  },
  {
    "text": "demo but first the retry pattern this is is absolutely vital to have in your",
    "start": "2662280",
    "end": "2669640"
  },
  {
    "start": "2664000",
    "end": "2664000"
  },
  {
    "text": "Cloud native environment so the software systems that you talk to they are often",
    "start": "2669640",
    "end": "2675160"
  },
  {
    "text": "offline for just a millisecond or two so it really makes a lot of sense to add some retry logic in your system whenever",
    "start": "2675160",
    "end": "2682680"
  },
  {
    "text": "you calling you are calling remote systems so what you do is you just",
    "start": "2682680",
    "end": "2688200"
  },
  {
    "text": "simply wait a little bit and then try the operation again and you will see that usually it succeeds of course there",
    "start": "2688200",
    "end": "2695920"
  },
  {
    "text": "is a chance that the caller thinks that it failed but the receiver actually got",
    "start": "2695920",
    "end": "2701200"
  },
  {
    "text": "your message so same as messaging here you need to make sure that your systems",
    "start": "2701200",
    "end": "2706359"
  },
  {
    "text": "processing those messages are itm potent and they are able to detect duplicate messages coming",
    "start": "2706359",
    "end": "2712440"
  },
  {
    "text": "in you need to be very sensible about this so if you have a validation error",
    "start": "2712440",
    "end": "2717960"
  },
  {
    "text": "coming back from your API it does not make sense to retry it you can retry it as long as you want the validation error",
    "start": "2717960",
    "end": "2724200"
  },
  {
    "text": "will never go away but if you get a server out or a deadlock from your database then it all of a sudden does",
    "start": "2724200",
    "end": "2730920"
  },
  {
    "text": "make a lot of sense so and if one of these retry operations uh saves you from",
    "start": "2730920",
    "end": "2736160"
  },
  {
    "text": "being called out of bed it's already worth the effort you do of course need to uh be",
    "start": "2736160",
    "end": "2743000"
  },
  {
    "text": "aware of the uh consequences so any operation that you perform on this remote system it will statistically take",
    "start": "2743000",
    "end": "2750480"
  },
  {
    "text": "longer to complete but in exchange for that you get a higher chance of success and if",
    "start": "2750480",
    "end": "2757359"
  },
  {
    "text": "this system out there does have an issue that takes a bit of uh bit more",
    "start": "2757359",
    "end": "2763000"
  },
  {
    "text": "time it could uh result in a lot of systems trying to do retries uh calling",
    "start": "2763000",
    "end": "2769599"
  },
  {
    "text": "on that system and if it does become available it may have a search of",
    "start": "2769599",
    "end": "2774960"
  },
  {
    "text": "pending requests process bringing it down immediately again and there is something to do in",
    "start": "2774960",
    "end": "2781040"
  },
  {
    "text": "that area as well but first let me uh show you a nice demo of the front end uh",
    "start": "2781040",
    "end": "2787559"
  },
  {
    "text": "which is my dispatching front end it wants to do a rest API call on the back end and that API call it will be uh well",
    "start": "2787559",
    "end": "2796000"
  },
  {
    "text": "kind of crappy and that is",
    "start": "2796000",
    "end": "2801400"
  },
  {
    "text": "because I have this okay in my front end I want to",
    "start": "2801400",
    "end": "2807520"
  },
  {
    "text": "fetch the amount of gas currently in my uh personal store so I've logged in as a customer I want to see how much gas I",
    "start": "2807520",
    "end": "2814440"
  },
  {
    "text": "have in this store this oper is called so this is the operation running on the dispatch API it will do an HTTP get and",
    "start": "2814440",
    "end": "2823240"
  },
  {
    "text": "get the gas in store for a certain customer and as you can see I've added a bug there so about 70% of the calls to",
    "start": "2823240",
    "end": "2830280"
  },
  {
    "text": "this API will fail and they will result in a 503 service unavailable and if you",
    "start": "2830280",
    "end": "2836079"
  },
  {
    "text": "remember correctly this is an operation that makes sense to retry because the server may be available the next time",
    "start": "2836079",
    "end": "2842319"
  },
  {
    "text": "you try it all right well then you can probably",
    "start": "2842319",
    "end": "2847440"
  },
  {
    "text": "imagine uh when I want to call this API I have a little bit of code for that",
    "start": "2847440",
    "end": "2854200"
  },
  {
    "text": "in my um front end and because I use Blazer my front end is just CP nice and",
    "start": "2854200",
    "end": "2859880"
  },
  {
    "text": "readable and well when I want to get my guas in store you would probably expect there to",
    "start": "2859880",
    "end": "2867480"
  },
  {
    "text": "be a while loop here and do a retries and examine results um but I don't want that because",
    "start": "2867480",
    "end": "2875079"
  },
  {
    "text": "I'm making many many HTTP calls all all day long and I don't want to have that",
    "start": "2875079",
    "end": "2880920"
  },
  {
    "text": "retry Behavior around every call I make using HTP client to the uh API",
    "start": "2880920",
    "end": "2888480"
  },
  {
    "text": "fortunately we can tweak this uh this class here HTP client we can tweak it",
    "start": "2888480",
    "end": "2894800"
  },
  {
    "text": "using an open source library to incorporate built-in retry behavior and",
    "start": "2894800",
    "end": "2900520"
  },
  {
    "text": "for this I have used poly poly is an uh Library you can just get off of the",
    "start": "2900520",
    "end": "2905680"
  },
  {
    "text": "internet it's open source it's very popular and well it worked really",
    "start": "2905680",
    "end": "2912680"
  },
  {
    "text": "well so the way you do this uh regularly in plain old hpn net core is at HTP",
    "start": "2912680",
    "end": "2919200"
  },
  {
    "text": "client you register it as a service so it can be used for dependency injection",
    "start": "2919200",
    "end": "2924480"
  },
  {
    "text": "but now I'm adding some Voodoo there uh using this policy Builder and you can see I'm adding a fullback policy and a",
    "start": "2924480",
    "end": "2931599"
  },
  {
    "text": "retry policy so the retry behavior is well try it again if there is a",
    "start": "2931599",
    "end": "2937319"
  },
  {
    "text": "error that makes sense to retry and the fallback policy is something you do",
    "start": "2937319",
    "end": "2942760"
  },
  {
    "text": "whenever uh well you try it you try it again it didn't work now what well then",
    "start": "2942760",
    "end": "2948559"
  },
  {
    "text": "you get the fallback policy if you have a quick look at that you can see uh well I've configured",
    "start": "2948559",
    "end": "2956040"
  },
  {
    "text": "policy uh for transion H HTTP errors I will do a wait and retry and because",
    "start": "2956040",
    "end": "2962680"
  },
  {
    "text": "this is a demo I will only do one retry and that works for me in real life you would probably do a couple more",
    "start": "2962680",
    "end": "2970119"
  },
  {
    "text": "retries and then as a fallback policy I will simply invoke this uh value Factory",
    "start": "2970119",
    "end": "2975640"
  },
  {
    "text": "delegate which run uh returns minus one as a static value well let's see it in",
    "start": "2975640",
    "end": "2983640"
  },
  {
    "text": "action I will open my uh developer tools here and make sure that it's uh",
    "start": "2984200",
    "end": "2990160"
  },
  {
    "text": "clean when I call that API well we inlock so uh it filed twice so that's",
    "start": "2990160",
    "end": "2997640"
  },
  {
    "text": "simple statistics Happening Here I configured it to to do one retry that means two calls in total one the try one",
    "start": "2997640",
    "end": "3004839"
  },
  {
    "text": "the retry and then uh well it failed so uh it went to the fullback policy and",
    "start": "3004839",
    "end": "3010400"
  },
  {
    "text": "said well I'm returning minus one for this and this means that the customer it",
    "start": "3010400",
    "end": "3015760"
  },
  {
    "text": "does see bogus data but it can continue to work so even though there is an issue in",
    "start": "3015760",
    "end": "3023400"
  },
  {
    "text": "somewhere in my system a buggy service the function fun ality is mostly still there we call this degraded",
    "start": "3023400",
    "end": "3030160"
  },
  {
    "text": "functionality you can still do requests because that API is not buggy but fetching the state is a little bit buggy",
    "start": "3030160",
    "end": "3036960"
  },
  {
    "text": "so I can try it again and then well of",
    "start": "3036960",
    "end": "3043160"
  },
  {
    "text": "course that's almost not not statistics anymore but now you can see uh 240 which",
    "start": "3043520",
    "end": "3049839"
  },
  {
    "text": "is the actual value poly to the rescue",
    "start": "3049839",
    "end": "3055640"
  },
  {
    "text": "right I did this yeah okay well remember me saying that",
    "start": "3061400",
    "end": "3067960"
  },
  {
    "start": "3065000",
    "end": "3065000"
  },
  {
    "text": "there could be a search if the backend system all of a sudden uh comes online after uh well a lot of people have been",
    "start": "3067960",
    "end": "3075240"
  },
  {
    "text": "waiting for it to come online by using the retry pattern so how can you avoid",
    "start": "3075240",
    "end": "3080640"
  },
  {
    "text": "this so you can detect this outage Downstream and then say uh well I know",
    "start": "3080640",
    "end": "3086920"
  },
  {
    "text": "who you are I know you want to call the back end but the back end isn't available so don't even bother and this",
    "start": "3086920",
    "end": "3092520"
  },
  {
    "text": "is what the circuit breaker pattern does so it's a a switch somewhere in your um",
    "start": "3092520",
    "end": "3098040"
  },
  {
    "text": "in your HTP client and it will say don't even go there and go to the fallback",
    "start": "3098040",
    "end": "3103319"
  },
  {
    "text": "policy immediately so this prevents waiting so instead of having to wait for all those",
    "start": "3103319",
    "end": "3110079"
  },
  {
    "text": "retries to uh to finish to find out for the customer to find out yeah there is",
    "start": "3110079",
    "end": "3116200"
  },
  {
    "text": "in fact an issue somewhere in the system you can immediately provide feedback so if the circuit breaker says don't even",
    "start": "3116200",
    "end": "3122079"
  },
  {
    "text": "bother you can catch that exception and say uh well there appears to be a",
    "start": "3122079",
    "end": "3127280"
  },
  {
    "text": "problem uh try again tomorrow for example so this prevents a lot of people",
    "start": "3127280",
    "end": "3133200"
  },
  {
    "text": "uh building up uh and queuing in front of the remote system of course if you use poly then",
    "start": "3133200",
    "end": "3139880"
  },
  {
    "text": "you will need to have some kind of logic dealing with this circle breaker open exception and this is something that you",
    "start": "3139880",
    "end": "3145119"
  },
  {
    "text": "need to do uh talk to the business about so what happens if this API is not",
    "start": "3145119",
    "end": "3151480"
  },
  {
    "text": "available and then to recover this is not like the actual circuit breaker in",
    "start": "3151480",
    "end": "3156559"
  },
  {
    "text": "your house you flip it back on and uh current starts flowing again in software",
    "start": "3156559",
    "end": "3162760"
  },
  {
    "text": "uh re-enabling this circuit breaker is generally an analog process so first you let 10% through then you let 50% through",
    "start": "3162760",
    "end": "3170200"
  },
  {
    "text": "and then you go all the way to the 100% for example and by this means you have an additional safety me meure to prevent",
    "start": "3170200",
    "end": "3177760"
  },
  {
    "text": "these surges from happening Downstream then there is of course",
    "start": "3177760",
    "end": "3184160"
  },
  {
    "start": "3182000",
    "end": "3182000"
  },
  {
    "text": "distributed caching so uh instead of fetching stuff freshly from the database",
    "start": "3184160",
    "end": "3190160"
  },
  {
    "text": "uh why not just take as much of that data as you can slowly changing data",
    "start": "3190160",
    "end": "3195440"
  },
  {
    "text": "copy it local and use it as a fallback mechanism you need however to make sure",
    "start": "3195440",
    "end": "3201960"
  },
  {
    "text": "that this data stays fresh so we need to have a mechanism in place for example",
    "start": "3201960",
    "end": "3207240"
  },
  {
    "text": "listening to messages or um you know whatever you choose you need to make sure that your",
    "start": "3207240",
    "end": "3213599"
  },
  {
    "text": "data stays crispy fresh so you're not working on an old version of the truth",
    "start": "3213599",
    "end": "3219040"
  },
  {
    "text": "you can do that two ways asynchronously by well sending messages whenever the data changes or synchronously whenever",
    "start": "3219040",
    "end": "3226440"
  },
  {
    "text": "you want to query something you first try to query it in the remote system and then update your cach on the way back",
    "start": "3226440",
    "end": "3233720"
  },
  {
    "text": "that is called read through caching well it makes a lot of sense if you are",
    "start": "3233720",
    "end": "3239440"
  },
  {
    "text": "in a orchestrator uh environment like kubernetes to store this data uh on",
    "start": "3239440",
    "end": "3244920"
  },
  {
    "text": "every node in the cluster making it highly available so uh if one of these nodes gets killed because of scaling or",
    "start": "3244920",
    "end": "3252040"
  },
  {
    "text": "it dies because of an error you'll always have the remaining healthy nodes to um to use as a copy of your",
    "start": "3252040",
    "end": "3259640"
  },
  {
    "text": "data then my favorite pattern the outbox pattern and this is well have you ever",
    "start": "3260000",
    "end": "3266760"
  },
  {
    "text": "wanted to send a message to a to a service bus for example but only if a",
    "start": "3266760",
    "end": "3272520"
  },
  {
    "text": "local transaction uh succeeded so you want to change the gas in store for a customer and notify the world about it",
    "start": "3272520",
    "end": "3279440"
  },
  {
    "text": "but if the transaction on the database fails you don't want to send that message and if the message fails you don't want to do the",
    "start": "3279440",
    "end": "3285599"
  },
  {
    "text": "transaction well that is a uh problem that well in the old days could be solved with a distributed transaction",
    "start": "3285599",
    "end": "3293160"
  },
  {
    "text": "coordinator fortunately we don't use that anymore but there's a uh a simple pattern you can use to avoid this",
    "start": "3293160",
    "end": "3301520"
  },
  {
    "text": "problem so you buffer your data in a table in your",
    "start": "3301640",
    "end": "3307599"
  },
  {
    "text": "database and you do that in the same transaction that modifies your other data so the change to the gas in store",
    "start": "3307599",
    "end": "3314319"
  },
  {
    "text": "you will combine that with a message you put in a table instead of on the service",
    "start": "3314319",
    "end": "3319480"
  },
  {
    "text": "bus and if it's in the table in the same transaction it is either completing or",
    "start": "3319480",
    "end": "3324680"
  },
  {
    "text": "rolling back but both changes are done uh at the same time because it's in the same transaction and then at that point",
    "start": "3324680",
    "end": "3331400"
  },
  {
    "text": "you can start processing in the background uh you process this outbox",
    "start": "3331400",
    "end": "3336520"
  },
  {
    "text": "and try start uh sorry start trying to send this message out and if it doesn't",
    "start": "3336520",
    "end": "3341880"
  },
  {
    "text": "work immediately that's okay because you're now in the background thread and yeah well at some point you know that",
    "start": "3341880",
    "end": "3347720"
  },
  {
    "text": "your queuing system will come back online so at one point it will work so you will have a sort of guaranteed",
    "start": "3347720",
    "end": "3354160"
  },
  {
    "text": "delivery well the benefit here is that you don't",
    "start": "3354160",
    "end": "3359240"
  },
  {
    "text": "need a distributed transaction you can make your changes on a database instead of on a remote system and a database and",
    "start": "3359240",
    "end": "3367760"
  },
  {
    "text": "the added benefit here is that if you ever have a lot of stuff to send out",
    "start": "3367760",
    "end": "3372799"
  },
  {
    "text": "putting it in a queue first in a uh queue in database first can flatten the",
    "start": "3372799",
    "end": "3379720"
  },
  {
    "text": "peak well three minutes that uh should be fine I can do a nice demo here",
    "start": "3379720",
    "end": "3387319"
  },
  {
    "text": "right so the system is up and running I have already mentioned that I'm using uh redish pop sh messaging as",
    "start": "3387319",
    "end": "3395440"
  },
  {
    "text": "my queuing system redis is running as a uh container here I will now stop that",
    "start": "3395440",
    "end": "3402839"
  },
  {
    "text": "kill my pops up messaging and now I will go back",
    "start": "3402839",
    "end": "3409039"
  },
  {
    "text": "to my user interface uh clear this start sending requests",
    "start": "3409039",
    "end": "3417160"
  },
  {
    "text": "well what you should see is that the guess in store is not uh changing but my uh service or my API is returning 202 so",
    "start": "3417880",
    "end": "3426079"
  },
  {
    "text": "it received my message it was able to change my uh uh data inside the dispatch",
    "start": "3426079",
    "end": "3433039"
  },
  {
    "text": "uh API but it could not talk to the plant because the messaging is down but that's okay my messaging will now come",
    "start": "3433039",
    "end": "3440559"
  },
  {
    "text": "back to life keep an eye on this here and then",
    "start": "3440559",
    "end": "3445720"
  },
  {
    "text": "if the demo guards are favoring me then at some point my messaging system will",
    "start": "3445720",
    "end": "3451599"
  },
  {
    "text": "come back online and the pending messages will be",
    "start": "3451599",
    "end": "3456240"
  },
  {
    "text": "processed minimal effort it's like a few lines of code to uh to build this using",
    "start": "3457079",
    "end": "3462160"
  },
  {
    "text": "Dapper I generally uh genuinely invite you to have a look at the uh at the",
    "start": "3462160",
    "end": "3467520"
  },
  {
    "text": "project just just a few lines of code and a very resilient",
    "start": "3467520",
    "end": "3473838"
  },
  {
    "text": "system right okay yeah almost there wrapping",
    "start": "3474400",
    "end": "3483240"
  },
  {
    "text": "up I won't go over all of these but uh if you want to make a picture of this uh",
    "start": "3483280",
    "end": "3488400"
  },
  {
    "text": "be quick and if not I will have a couple of useful links",
    "start": "3488400",
    "end": "3495280"
  },
  {
    "text": "to uh for you to uh to visit so the top one is uh the the source code of the",
    "start": "3495280",
    "end": "3501520"
  },
  {
    "text": "demo below that is link to poly if you want to reach out and get in",
    "start": "3501520",
    "end": "3507119"
  },
  {
    "text": "touch with me with further questions uh please do so using LinkedIn LinkedIn and",
    "start": "3507119",
    "end": "3512880"
  },
  {
    "text": "uh if you want to know what more about experience have a look at the final link and finally um if you want to earn",
    "start": "3512880",
    "end": "3520839"
  },
  {
    "text": "a lot of Swag uh take this Microsoft Challenge and then uh well you need a UK",
    "start": "3520839",
    "end": "3526400"
  },
  {
    "text": "address if I'm not mistaken but uh well there's a good likelihood that you have",
    "start": "3526400",
    "end": "3531520"
  },
  {
    "text": "one of those that's it that's my talk if you have questions please come up and see me",
    "start": "3531520",
    "end": "3537640"
  },
  {
    "text": "and thank you very much for being here",
    "start": "3537640",
    "end": "3543078"
  }
]