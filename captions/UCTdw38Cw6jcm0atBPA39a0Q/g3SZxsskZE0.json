[
  {
    "start": "0",
    "end": "72000"
  },
  {
    "text": "hello hello yes oh yeah thank you all",
    "start": "5279",
    "end": "12490"
  },
  {
    "text": "for coming to this this is a my technical talk I have a more kind of",
    "start": "12490",
    "end": "19359"
  },
  {
    "text": "silly fun talk tomorrow same time this room so if you're expecting that run",
    "start": "19359",
    "end": "26880"
  },
  {
    "text": "this is this is a proper technical talk about diagnostics and metrics and",
    "start": "26880",
    "end": "32320"
  },
  {
    "text": "tracing and and all that kind of good stuff I'm mark Rendell I have a company called",
    "start": "32320",
    "end": "39790"
  },
  {
    "text": "Rendell labs which is just me mucking about with stuff and then putting it on",
    "start": "39790",
    "end": "45520"
  },
  {
    "text": "github and at some point something's gonna happen and people are going to",
    "start": "45520",
    "end": "50950"
  },
  {
    "text": "start giving me money still trying to work that bit of it out you can follow",
    "start": "50950",
    "end": "57460"
  },
  {
    "text": "me on twitter at Mark Rendell and if you've got any questions or you go off and you try to implement this then",
    "start": "57460",
    "end": "63489"
  },
  {
    "text": "please do feel free to reach out to me on Twitter or anywhere else you can get",
    "start": "63489",
    "end": "68590"
  },
  {
    "text": "hold of me I always like to help people do good stuff so I pop up at NDC most",
    "start": "68590",
    "end": "76299"
  },
  {
    "start": "72000",
    "end": "295000"
  },
  {
    "text": "years go to most of the different conferences and I always seem to be",
    "start": "76299",
    "end": "81369"
  },
  {
    "text": "talking about something different and this year I'm talking about diagnostics and metrics and I thought it's probably",
    "start": "81369",
    "end": "88659"
  },
  {
    "text": "worth talking briefly about why so this whole kind of thing with me getting into",
    "start": "88659",
    "end": "95740"
  },
  {
    "text": "this started about this time last year one of my customers was having a problem",
    "start": "95740",
    "end": "101470"
  },
  {
    "text": "with a piece of software that was being much slower than they thought it should be and they said can you help make it",
    "start": "101470",
    "end": "108820"
  },
  {
    "text": "faster and I said yes and so I sat in on the first meeting where they were discussing how they were going to make",
    "start": "108820",
    "end": "114820"
  },
  {
    "text": "it faster and people were saying well I think it might be this that's slowing it down it might be this we might be",
    "start": "114820",
    "end": "121509"
  },
  {
    "text": "leaking some memory somewhere we might be doing too much garbage collection and so people have been guessing what was",
    "start": "121509",
    "end": "126729"
  },
  {
    "text": "wrong and then trying to fix it and optimize it and everything else and I said have you actually measured what's",
    "start": "126729",
    "end": "133930"
  },
  {
    "text": "going on when this process is running to find out what's you know",
    "start": "133930",
    "end": "139820"
  },
  {
    "text": "how long each different some part of this process is taking and they said no",
    "start": "139820",
    "end": "144860"
  },
  {
    "text": "do you think we should ally when it couldn't hurt why don't I add some",
    "start": "144860",
    "end": "150980"
  },
  {
    "text": "instrumentation to your code and we can sort of add up the bits and everything and so I did that and then I showed them",
    "start": "150980",
    "end": "160130"
  },
  {
    "text": "the kind of metrics that I'd gathered out of this and they looked at one of these things that was happening about",
    "start": "160130",
    "end": "165770"
  },
  {
    "text": "20,000 times every process and they went what's that and I went it's doing a lookup against",
    "start": "165770",
    "end": "173390"
  },
  {
    "text": "another service and they went no it's supposed to batch 20,000 IDs together",
    "start": "173390",
    "end": "179390"
  },
  {
    "text": "and then send them all to that service and then it sends all of those results",
    "start": "179390",
    "end": "185510"
  },
  {
    "text": "back in one go but it wasn't it was opening a connection and doing one request and then closing the connection",
    "start": "185510",
    "end": "191810"
  },
  {
    "text": "again and then opening the connection again and once they fixed that it knocked about a minute off the time that",
    "start": "191810",
    "end": "198740"
  },
  {
    "text": "the thing was taking and you know they had no idea that this approach this external service was being hit all these",
    "start": "198740",
    "end": "205790"
  },
  {
    "text": "times and so that's what the whole point of metrics and tracing and Diagnostics",
    "start": "205790",
    "end": "211520"
  },
  {
    "text": "is about it's about having visibility into what your system is doing",
    "start": "211520",
    "end": "216850"
  },
  {
    "text": "specifically in production because no one had picked this up in dev or in QA",
    "start": "216850",
    "end": "223310"
  },
  {
    "text": "or testing because in testing they didn't look up 20,000 things they looked up 20 things and so that didn't really",
    "start": "223310",
    "end": "230660"
  },
  {
    "text": "have a noticeable effect it was only when it got into production and started dealing with actual data that they that",
    "start": "230660",
    "end": "236720"
  },
  {
    "text": "this started happening and and this wasn't seen metrics Diagnostics all the",
    "start": "236720",
    "end": "244430"
  },
  {
    "text": "dashboards and and everything else that you see you tend to associate them with this new kind of micro services and",
    "start": "244430",
    "end": "250900"
  },
  {
    "text": "distributed web applications and and all that sort of thing this wasn't that this was a WPF application running on the",
    "start": "250900",
    "end": "257060"
  },
  {
    "text": "desktop and but I used the same technologies and the same techniques to",
    "start": "257060",
    "end": "263990"
  },
  {
    "text": "add the instrumentation to it as I would have done if it had been a dotnet core 2.2 application",
    "start": "263990",
    "end": "269330"
  },
  {
    "text": "running in kubernetes cluster in Google Cloud so this is relevant to everybody",
    "start": "269330",
    "end": "276379"
  },
  {
    "text": "whether you're writing Nets desktop applications might be xamarin applications running on a phone you can",
    "start": "276379",
    "end": "283039"
  },
  {
    "text": "use the same set of techniques also dashboards are cool it's nice to be able to get up on stage and go yay dashboards",
    "start": "283039",
    "end": "290289"
  },
  {
    "text": "and so I wanted some of that for myself",
    "start": "290289",
    "end": "295389"
  },
  {
    "start": "295000",
    "end": "368000"
  },
  {
    "text": "so I want to get clear right at the start there is the difference between metrics and logs just in case anybody's",
    "start": "295389",
    "end": "302060"
  },
  {
    "text": "not clear logs people are quite good at logging these days people have kind of",
    "start": "302060",
    "end": "307400"
  },
  {
    "text": "spun up an elastic search or or loop or they're using an online service like log",
    "start": "307400",
    "end": "312770"
  },
  {
    "text": "Lee or something like that and you know even if it's just try something catch",
    "start": "312770",
    "end": "319849"
  },
  {
    "text": "exception log error even if that's all you're doing that's still good because",
    "start": "319849",
    "end": "324889"
  },
  {
    "text": "it means you've got that text is going off that's logging that's text and that's creating a searchable record of",
    "start": "324889",
    "end": "334190"
  },
  {
    "text": "everything that's happened in your system so that you can go and get stack traces or descriptions or that sort of",
    "start": "334190",
    "end": "340849"
  },
  {
    "text": "thing metrics really just numbers and numbers that you can aggregate and",
    "start": "340849",
    "end": "347779"
  },
  {
    "text": "average or sum or window over time things that you can do maths things with",
    "start": "347779",
    "end": "354050"
  },
  {
    "text": "and make pretty charts and stuff so a logging dashboard you'll generally be",
    "start": "354050",
    "end": "359509"
  },
  {
    "text": "able to see text in there a metrics dashboard is all pretty lines and colors and animations and that sort of thing",
    "start": "359509",
    "end": "367180"
  },
  {
    "text": "and we're going to be talking about metrics in here so yeah metrics is very",
    "start": "367180",
    "end": "373370"
  },
  {
    "start": "368000",
    "end": "391000"
  },
  {
    "text": "good for when you're dealing with things like performance or how often is",
    "start": "373370",
    "end": "379460"
  },
  {
    "text": "something happening how long does it take when it does happen how much CPU is being used at any given point these are",
    "start": "379460",
    "end": "385940"
  },
  {
    "text": "all metrics text error messages information that's that's logging and",
    "start": "385940",
    "end": "392449"
  },
  {
    "text": "this area of this this kind of it is it",
    "start": "392449",
    "end": "397580"
  },
  {
    "text": "almost feels new like we haven't been doing this properly and so now there's there's a movement towards this and it's",
    "start": "397580",
    "end": "405800"
  },
  {
    "text": "referred to as a p.m. which actually stands for application performance management and not monitoring which I",
    "start": "405800",
    "end": "412310"
  },
  {
    "text": "literally only discovered as I wrote this slide I've always assumed the M was for monitoring but it's not it's for",
    "start": "412310",
    "end": "418370"
  },
  {
    "text": "management and there's a big growth area at the moment and I found this website which is very useful called open APM",
    "start": "418370",
    "end": "426170"
  },
  {
    "start": "420000",
    "end": "454000"
  },
  {
    "text": "Daioh which is got lots of information about lots of open-source tools that you",
    "start": "426170",
    "end": "432380"
  },
  {
    "text": "can use for application performance management and you can actually go in and say this is my stack this is what",
    "start": "432380",
    "end": "439280"
  },
  {
    "text": "I'm using so you can go in and say I'm using net and it will go right here are some libraries you can use here's the",
    "start": "439280",
    "end": "444470"
  },
  {
    "text": "back end technology you can use here's the sort of stuff that you need to do what you need to do so that's a great",
    "start": "444470",
    "end": "450590"
  },
  {
    "text": "resource and I will leave you to go and view that for yourself so what do we",
    "start": "450590",
    "end": "456950"
  },
  {
    "start": "454000",
    "end": "660000"
  },
  {
    "text": "want to measure you want to measure things like how often something happens you want to measure how much stuff is",
    "start": "456950",
    "end": "463910"
  },
  {
    "text": "going through your system and that could be number of requests or number of objects or number of bytes depending on",
    "start": "463910",
    "end": "471080"
  },
  {
    "text": "the kind of system that you're writing it could be how many records did I get back from the database or it could be",
    "start": "471080",
    "end": "476990"
  },
  {
    "text": "how many bytes were returned from the database that then broke down into those",
    "start": "476990",
    "end": "482150"
  },
  {
    "text": "records it's timings so if I start a timer and then do my database query and then stop",
    "start": "482150",
    "end": "488900"
  },
  {
    "text": "that timer how long is my database query taking how often are errors happening",
    "start": "488900",
    "end": "494000"
  },
  {
    "text": "how often is each kind of error happening so yes in your logging system you've got a thing that says there was a",
    "start": "494000",
    "end": "500210"
  },
  {
    "text": "null reference exception because we haven't got c-sharp eight yet but in your metric system in your dashboards",
    "start": "500210",
    "end": "506180"
  },
  {
    "text": "you can go right over the last hour there have been 1,500 null reference exceptions one not implemented exception",
    "start": "506180",
    "end": "515030"
  },
  {
    "text": "and one exception that I've never even heard of and I'm scared now and I want to go and be a farmer so you can see the",
    "start": "515030",
    "end": "523550"
  },
  {
    "text": "the number of errors that you've got going through there and you've got system data so if system batery stuff like what's the memory usage like at the",
    "start": "523550",
    "end": "531140"
  },
  {
    "text": "moment what's the disk I go the network usage and so forth for web",
    "start": "531140",
    "end": "537160"
  },
  {
    "text": "applications you're going to be looking at stuff like requests so how many requests per second are you serving and",
    "start": "537160",
    "end": "542740"
  },
  {
    "text": "you can cut that up and and group it by how many requests to this page to this",
    "start": "542740",
    "end": "548410"
  },
  {
    "text": "controller to this area of my MVC application what are my response times",
    "start": "548410",
    "end": "553480"
  },
  {
    "text": "like what are my status codes going out so how many are 200 and now we near 404",
    "start": "553480",
    "end": "559450"
  },
  {
    "text": "and how many are 401 that sort of thing what kind of errors are happening database or upstream HTTP requests",
    "start": "559450",
    "end": "567430"
  },
  {
    "text": "upstream I just had a conversation with someone who said someone said it was downstream so downstream is what's",
    "start": "567430",
    "end": "574300"
  },
  {
    "text": "calling you upstream is what you're calling okay yes it is I'm not arguing",
    "start": "574300",
    "end": "579940"
  },
  {
    "text": "about it native applications and this is the thing that I was working on it's",
    "start": "579940",
    "end": "587170"
  },
  {
    "text": "things like startup time so if you've got an application and you want someone to double-click an icon on the desktop",
    "start": "587170",
    "end": "593410"
  },
  {
    "text": "or tap an icon on their phone then that application needs to load really quickly",
    "start": "593410",
    "end": "600370"
  },
  {
    "text": "as quickly as it possibly can and so measuring things like startup time is very useful and then if you when you",
    "start": "600370",
    "end": "608620"
  },
  {
    "text": "release a new version of your software you can immediately see from the dashboard you can overlay either new",
    "start": "608620",
    "end": "614560"
  },
  {
    "text": "version and the old version of the software and you can go oh god we've slowed down we're taking an extra second to startup what's happened there and go",
    "start": "614560",
    "end": "621490"
  },
  {
    "text": "and looking into that things like feature usage so you can get feature tracking as a kind of high-level feature",
    "start": "621490",
    "end": "627120"
  },
  {
    "text": "yeah in in some monitoring software but",
    "start": "627120",
    "end": "633160"
  },
  {
    "text": "you can just say okay I'm gonna create a thing that says this is how often they used invoicing this is how often they",
    "start": "633160",
    "end": "639579"
  },
  {
    "text": "used the contact database this is how often they use that just general performance so how long does it take to",
    "start": "639579",
    "end": "648130"
  },
  {
    "text": "navigate from one screen to another screen within your application how long does it take to to calculate total or to",
    "start": "648130",
    "end": "654880"
  },
  {
    "text": "populate a grid and then the same stuff as web applications",
    "start": "654880",
    "end": "660240"
  },
  {
    "start": "660000",
    "end": "720000"
  },
  {
    "text": "system data so you want to be monitoring things like CPU time because if that go",
    "start": "660240",
    "end": "666250"
  },
  {
    "text": "who's up near a hundred then things are probably bad and you're likely to stop",
    "start": "666250",
    "end": "672310"
  },
  {
    "text": "working fairly soon but at the same time if your CPU is consistently running at one percent then maybe your servers too",
    "start": "672310",
    "end": "679990"
  },
  {
    "text": "big and you could get away with downsizing it to t2 micro or or",
    "start": "679990",
    "end": "687250"
  },
  {
    "text": "something memory you don't want to be running out of memory disk network i/o and now the common language runtime and",
    "start": "687250",
    "end": "694180"
  },
  {
    "text": "particularly in dotnet core 2.2 there's a whole lot of information that you can pull out of there which I will hopefully",
    "start": "694180",
    "end": "701170"
  },
  {
    "text": "have time to touch on to watch the end of the talk about things like how many garbage collections are happening how",
    "start": "701170",
    "end": "707620"
  },
  {
    "text": "many objects are going to gin zero gen one that sort of thing what's the thread pool doing how is the thread pool count",
    "start": "707620",
    "end": "715330"
  },
  {
    "text": "gone past what we've set is the maximum that sort of stuff so how to measure and",
    "start": "715330",
    "end": "722200"
  },
  {
    "start": "720000",
    "end": "863000"
  },
  {
    "text": "this is the fun bit because there are lots of libraries out there that you can get there's a great library that I like",
    "start": "722200",
    "end": "729790"
  },
  {
    "text": "using for my web applications my dotnet core application is called app metrics which Martin has done a talk or is going",
    "start": "729790",
    "end": "737770"
  },
  {
    "text": "to do a talk about metrics is brilliant but there is a problem with that because",
    "start": "737770",
    "end": "744460"
  },
  {
    "text": "if I say I want to use app metrics then I need everyone else who is contributing",
    "start": "744460",
    "end": "751510"
  },
  {
    "text": "to my overall system to say yes all right we'll use that metrics and then we",
    "start": "751510",
    "end": "756670"
  },
  {
    "text": "can all hook into the same thing the company where I was putting in this this",
    "start": "756670",
    "end": "764230"
  },
  {
    "text": "software this this instrumentation into their software uses Gibralter loop which is a really nice even look if you're in",
    "start": "764230",
    "end": "770740"
  },
  {
    "text": "dotnet then loop is a really nice logging and metric system combined and",
    "start": "770740",
    "end": "777600"
  },
  {
    "text": "it's done by Kendall Miller who is around somewhere and doing a talk about",
    "start": "777600",
    "end": "783100"
  },
  {
    "text": "how CPUs work tomorrow but yes we in our in this team's area of this big",
    "start": "783100",
    "end": "792250"
  },
  {
    "text": "organization they wanted to use loop because it was the most appropriate thing for them to use but",
    "start": "792250",
    "end": "800100"
  },
  {
    "text": "not everybody wanted to use loop and this is a big organization this is this is like 10,000 developers working in",
    "start": "800360",
    "end": "807449"
  },
  {
    "text": "lots of different languages and thousands of developers working in net and so they've got shared libraries",
    "start": "807449",
    "end": "814319"
  },
  {
    "text": "they've got teams whose whole job is just to make libraries for the other teams to use so if you want to use",
    "start": "814319",
    "end": "822240"
  },
  {
    "text": "zookeeper then you have to use their zookeeper library so to talk to their",
    "start": "822240",
    "end": "827429"
  },
  {
    "text": "internal implementation of zookeeper because they're using Kerberos authentication or whatever it might be",
    "start": "827429",
    "end": "832679"
  },
  {
    "text": "so they've got lots of different teams making lots of different things and so you can't go to a team who is making a",
    "start": "832679",
    "end": "839970"
  },
  {
    "text": "library to be used by 50 other teams and say hey can you add support for this",
    "start": "839970",
    "end": "845850"
  },
  {
    "text": "logging system that we use we're fully aware that nobody else in the organization uses it but we really like",
    "start": "845850",
    "end": "851459"
  },
  {
    "text": "it please support it because they're gonna go no because if they had to do that for all 50 of the people all 50 of",
    "start": "851459",
    "end": "857550"
  },
  {
    "text": "the teams then they'd just be running around in circles trying to support all these different things and so ie was",
    "start": "857550",
    "end": "866879"
  },
  {
    "start": "863000",
    "end": "1030000"
  },
  {
    "text": "reminded of something I'd seen mentioned during the whole dotnet core asp net",
    "start": "866879",
    "end": "872279"
  },
  {
    "text": "core stand-ups and everything called diagnostic sauce and this is it's built",
    "start": "872279",
    "end": "880019"
  },
  {
    "text": "into dotnet core but it's available as a package on nougat there's a net standard",
    "start": "880019",
    "end": "886800"
  },
  {
    "text": "2.0 version there's a net four six one version because now we have separate net four six one versions for things because",
    "start": "886800",
    "end": "893639"
  },
  {
    "text": "it turns out it doesn't implement net standard 2.0 but it's it's built-in and",
    "start": "893639",
    "end": "900470"
  },
  {
    "text": "so it's not like you're taking a dependency on an external library I mean",
    "start": "900470",
    "end": "906389"
  },
  {
    "text": "we had this with logging as well who uses is it common logging as an",
    "start": "906389",
    "end": "912809"
  },
  {
    "text": "abstraction so as an organization you go we'll standardize on common logging and",
    "start": "912809",
    "end": "918209"
  },
  {
    "text": "then if I want it to go to n log it can go to n log if I want it to go to Sarah log it can go to Sarah log and it's",
    "start": "918209",
    "end": "924929"
  },
  {
    "text": "coming yet okay so we've got that but you still have to get people to agree on that thing",
    "start": "924929",
    "end": "930160"
  },
  {
    "text": "and that's actually easier now that there's Microsoft extensions logging",
    "start": "930160",
    "end": "935949"
  },
  {
    "text": "because all organizations are happy to take dependencies on Microsoft packages",
    "start": "935949",
    "end": "941500"
  },
  {
    "text": "so yeah let's use Microsoft's what extensions dot logging instead this is the same sort of thing you're going it's",
    "start": "941500",
    "end": "947319"
  },
  {
    "text": "a Microsoft package look it starts with system dot it's signed with the Microsoft key don't have to put it",
    "start": "947319",
    "end": "952509"
  },
  {
    "text": "through security operations and all this sort of thing and so I thought can I put diagnostic source throughout the code",
    "start": "952509",
    "end": "959410"
  },
  {
    "text": "and use that as an abstraction over logging so that's what I did so it's",
    "start": "959410",
    "end": "965740"
  },
  {
    "text": "part of the.net framework and it basically has three capabilities you can",
    "start": "965740",
    "end": "972939"
  },
  {
    "text": "write events to it you can trace activities so you can say I'm starting",
    "start": "972939",
    "end": "979990"
  },
  {
    "text": "an activity and you can go off and do a bunch of stuff and you can say that activity is now finished and then at the",
    "start": "979990",
    "end": "987759"
  },
  {
    "text": "other end you can listen for events through diagnostic source and say I'm",
    "start": "987759",
    "end": "994209"
  },
  {
    "text": "gonna do something with this data that's coming through here which is all you really need now you might be thinking",
    "start": "994209",
    "end": "1001079"
  },
  {
    "text": "you just described trace and I sort of did except the thing with trace is its",
    "start": "1001079",
    "end": "1008279"
  },
  {
    "text": "strings again trace is great for logging you can write things to system dot trace",
    "start": "1008279",
    "end": "1014730"
  },
  {
    "text": "source or Diagnostics trace and then pick that up and writer their diagnostic",
    "start": "1014730",
    "end": "1019860"
  },
  {
    "text": "source works with objects works with structured data and so it's much more",
    "start": "1019860",
    "end": "1025850"
  },
  {
    "text": "geared towards the metrics and diagnostics side of things so writing",
    "start": "1025850",
    "end": "1033120"
  },
  {
    "start": "1030000",
    "end": "1195000"
  },
  {
    "text": "events is really simple you create this",
    "start": "1033120",
    "end": "1040610"
  },
  {
    "text": "dodgy stuff going on under the covers to make this as easy as possible to use",
    "start": "1040610",
    "end": "1046140"
  },
  {
    "text": "okay but essentially you create a diagnostic source now you'll notice here",
    "start": "1046140",
    "end": "1052620"
  },
  {
    "text": "so you've got a diagnostic source which is what you write into and you've got a diagnostic listener which you'd imagine",
    "start": "1052620",
    "end": "1060990"
  },
  {
    "text": "is what you're going to list - at the other end and write that data out to somewhere except when you create",
    "start": "1060990",
    "end": "1067130"
  },
  {
    "text": "note that button yeah I got a new pointy",
    "start": "1067130",
    "end": "1073410"
  },
  {
    "text": "thing [Music] so yes you create a diagnostic source",
    "start": "1073410",
    "end": "1078660"
  },
  {
    "text": "but you create a new diagnostic listener so that's interesting but whatever you",
    "start": "1078660",
    "end": "1086910"
  },
  {
    "text": "create a diagnostic listener but your assign it to a diagnostic source and you have to give that diagnostic listener a",
    "start": "1086910",
    "end": "1092970"
  },
  {
    "text": "name and a fairly good standard for that is to say use the full type name",
    "start": "1092970",
    "end": "1099480"
  },
  {
    "text": "including the namespace of the class that I'm generating these Diagnostics",
    "start": "1099480",
    "end": "1104490"
  },
  {
    "text": "from that's fine now there is an issue here that you don't",
    "start": "1104490",
    "end": "1110490"
  },
  {
    "text": "want to be generating these Diagnostics if nobody's listening and particularly",
    "start": "1110490",
    "end": "1117420"
  },
  {
    "text": "if people are putting these in upstream packages that you're pulling from your internal artifactory or whatever it",
    "start": "1117420",
    "end": "1124110"
  },
  {
    "text": "might be you don't want this is in the system code this is in like low level",
    "start": "1124110",
    "end": "1130890"
  },
  {
    "text": "parts of libraries and so if nobody cares about the Diagnostics you don't want to be generating the",
    "start": "1130890",
    "end": "1136500"
  },
  {
    "text": "Diagnostics so we have a diagnostic source which has got a name and then we",
    "start": "1136500",
    "end": "1141990"
  },
  {
    "text": "have a name of an event on that diagnostic source so you can have one",
    "start": "1141990",
    "end": "1148470"
  },
  {
    "text": "diagnostic source with multiple events happening on it and before we write anything to it",
    "start": "1148470",
    "end": "1153810"
  },
  {
    "text": "we say if Diagnostics dot is enabled main then Diagnostics dot write main new",
    "start": "1153810",
    "end": "1162060"
  },
  {
    "text": "are count equals args length because this bit here is an allocation and if",
    "start": "1162060",
    "end": "1170550"
  },
  {
    "text": "you want this going into something that's doing 20,000 requests a second or one request to 20,000 things a second if",
    "start": "1170550",
    "end": "1177720"
  },
  {
    "text": "you want this put into your software at the lowest level you don't want to be allocating objects unless you actually",
    "start": "1177720",
    "end": "1184050"
  },
  {
    "text": "need to and I'm going to come back to that in a bit because people always ask for syntactic sugar around this and it",
    "start": "1184050",
    "end": "1190590"
  },
  {
    "text": "looks like it should be possible but the obvious way of doing it is not and then we have activities and",
    "start": "1190590",
    "end": "1197630"
  },
  {
    "start": "1195000",
    "end": "1270000"
  },
  {
    "text": "activities diagnostic source was around for a while and they it was on four point three point something and then",
    "start": "1197630",
    "end": "1204170"
  },
  {
    "text": "they added activities on to it and activities they do something in a",
    "start": "1204170",
    "end": "1211460"
  },
  {
    "text": "specific way but they provide an extra layer of cleverness on top of that so",
    "start": "1211460",
    "end": "1218270"
  },
  {
    "text": "look quickly at how you use an activity so we say if Diagnostics that so it's still just a diagnostic source and we",
    "start": "1218270",
    "end": "1225320"
  },
  {
    "text": "still say is it enabled and if it is then we create a new activity and we say",
    "start": "1225320",
    "end": "1231860"
  },
  {
    "text": "this is where we're going to put the name of this event here and then we say",
    "start": "1231860",
    "end": "1236870"
  },
  {
    "text": "diagnostic start start activity and we pass in the activity that we just created and some arguments and then we",
    "start": "1236870",
    "end": "1243290"
  },
  {
    "text": "do something and then we have a try finally here and we have a diagnostic",
    "start": "1243290",
    "end": "1248510"
  },
  {
    "text": "start/stop activity and this automatically does stopwatch resolution",
    "start": "1248510",
    "end": "1255170"
  },
  {
    "text": "timing of that that operation so that",
    "start": "1255170",
    "end": "1260960"
  },
  {
    "text": "you can see how long things are taking and it does something else useful as",
    "start": "1260960",
    "end": "1266450"
  },
  {
    "text": "well which we will come back to again in a little while so I'm just going to show",
    "start": "1266450",
    "end": "1272240"
  },
  {
    "start": "1270000",
    "end": "1653000"
  },
  {
    "text": "you quickly some actual code because code is always good for these sorts of",
    "start": "1272240",
    "end": "1277790"
  },
  {
    "text": "things so I have got you can go",
    "start": "1277790",
    "end": "1284710"
  },
  {
    "text": "is that is that big enough can everyone",
    "start": "1288480",
    "end": "1293919"
  },
  {
    "text": "yeah good right so I've got just a simple asp net core application here",
    "start": "1293919",
    "end": "1301240"
  },
  {
    "text": "what this actually does it exists for a different purpose you give it a URL it",
    "start": "1301240",
    "end": "1308230"
  },
  {
    "text": "goes to that URL downloads the HTML sees if it can find an OG image or Twitter",
    "start": "1308230",
    "end": "1313749"
  },
  {
    "text": "image meta tag at the top then goes and gets the image that it points to if it's there resizes it to a size that you",
    "start": "1313749",
    "end": "1319990"
  },
  {
    "text": "specified presses it to JPEG and returns it back again which I couldn't find as a pre-existing service so I wrote it and",
    "start": "1319990",
    "end": "1327779"
  },
  {
    "text": "so this is this is what's going on here so I've got my controller and up at the",
    "start": "1327779",
    "end": "1335200"
  },
  {
    "text": "top here I've got a diagnostic source now these things not only is it fine to",
    "start": "1335200",
    "end": "1340389"
  },
  {
    "text": "make them private static read-only that's actually what you want to do because otherwise you're going to have",
    "start": "1340389",
    "end": "1345639"
  },
  {
    "text": "multiple listeners attached to multiple instances of the same diagnostic source and you'll end up thrashing memory and",
    "start": "1345639",
    "end": "1352419"
  },
  {
    "text": "garbage collector and everything else so just create a static instance and use it over and over again it is thread safe",
    "start": "1352419",
    "end": "1359619"
  },
  {
    "text": "for reasons that we will also come back to and then we go down to here and we",
    "start": "1359619",
    "end": "1366429"
  },
  {
    "text": "say diag not so I'll take that out for",
    "start": "1366429",
    "end": "1373240"
  },
  {
    "text": "now and we'll just look at this one so if Diagnostics dot is enabled image resize so if somebody is listening and",
    "start": "1373240",
    "end": "1380169"
  },
  {
    "text": "doing something with this information then working out the original length of the original size of this image work out",
    "start": "1380169",
    "end": "1387639"
  },
  {
    "text": "the new size of the image after I've compressed it using image sharp and then",
    "start": "1387639",
    "end": "1392700"
  },
  {
    "text": "write that out to diagnostics and so I know the amount of space I've saved or",
    "start": "1392700",
    "end": "1399580"
  },
  {
    "text": "the amount of bandwidth that's the word the amount of bandwidth I've saved",
    "start": "1399580",
    "end": "1405360"
  },
  {
    "text": "processing this request so that now goes off and that could be picked up by",
    "start": "1405360",
    "end": "1411039"
  },
  {
    "text": "anything I might have one listener on there that's just sending that off",
    "start": "1411039",
    "end": "1416110"
  },
  {
    "text": "somewhere or I might have half a dozen listeners sending it to different place",
    "start": "1416110",
    "end": "1421539"
  },
  {
    "text": "I might have some Diagnostics going to one place and some Diagnostics going to another place it's it's a proper in",
    "start": "1421539",
    "end": "1429220"
  },
  {
    "text": "place abstraction that separates the producer from the consumer and leaves it",
    "start": "1429220",
    "end": "1436690"
  },
  {
    "text": "entirely up to you how you do the consuming side of things so to make sure",
    "start": "1436690",
    "end": "1442539"
  },
  {
    "text": "that actually goes somewhere I have to come to here so I've got a console",
    "start": "1442539",
    "end": "1451299"
  },
  {
    "text": "monitor this is the simplest possible level for this and if I go into console",
    "start": "1451299",
    "end": "1457599"
  },
  {
    "text": "monitor this is a hosted service so if",
    "start": "1457599",
    "end": "1463840"
  },
  {
    "text": "you're not familiar with don't net core to point whatever you now have",
    "start": "1463840",
    "end": "1470099"
  },
  {
    "text": "essentially something that will just run in the background of your application doing useful stuff so it's a great place",
    "start": "1470099",
    "end": "1477580"
  },
  {
    "text": "for putting things like sinks for logging or metrics or whatever else so when this starts up we have a two-step",
    "start": "1477580",
    "end": "1483999"
  },
  {
    "text": "process we say diagnostic listener dot all listeners this is a static property",
    "start": "1483999",
    "end": "1490479"
  },
  {
    "text": "on the diagnostic listener type and it is an i observable you don't often see i",
    "start": "1490479",
    "end": "1498309"
  },
  {
    "text": "observables in first-class microsoft api's but we've got one here so you",
    "start": "1498309",
    "end": "1505419"
  },
  {
    "text": "attach to this and you say whenever a diagnostic listener is created whenever a diagnostic source is created let me",
    "start": "1505419",
    "end": "1513039"
  },
  {
    "text": "know so I can decide whether I want to subscribe to it and so you then say",
    "start": "1513039",
    "end": "1518700"
  },
  {
    "text": "every time I get one of these through what I'm actually getting here is another I observable diagnostic listener",
    "start": "1518700",
    "end": "1526929"
  },
  {
    "text": "is an i observable of key value pair of string object and so then we're going to",
    "start": "1526929",
    "end": "1533499"
  },
  {
    "text": "subscribe to that as well and then I",
    "start": "1533499",
    "end": "1538960"
  },
  {
    "text": "will get fed things off there so yeah I can do stuff in here to do things like I",
    "start": "1538960",
    "end": "1546309"
  },
  {
    "text": "could say if [Music] SawStop name does not or that starts",
    "start": "1546309",
    "end": "1555090"
  },
  {
    "text": "with Rendell abs dot so I could put that",
    "start": "1555090",
    "end": "1561180"
  },
  {
    "text": "in there and say only subscribe to things that are my own namespaces so I'm",
    "start": "1561180",
    "end": "1566490"
  },
  {
    "text": "not picking up stuff from other people's things if you're building a library then",
    "start": "1566490",
    "end": "1571620"
  },
  {
    "text": "it would be nice if you did use whatever names to it so if Jason net wanted to",
    "start": "1571620",
    "end": "1578430"
  },
  {
    "text": "put Diagnostics into the JSON dotnet library then hopefully he'll start them with Newton soft dot and we can listen",
    "start": "1578430",
    "end": "1586050"
  },
  {
    "text": "on that as well and in this instance I'm just going to say log that output to the",
    "start": "1586050",
    "end": "1592560"
  },
  {
    "text": "command line and so if I go into here and do dotnet run okay so that's",
    "start": "1592560",
    "end": "1605130"
  },
  {
    "text": "listening on there and then I can nope not you this is just something that",
    "start": "1605130",
    "end": "1612900"
  },
  {
    "text": "generates traffic and then I can go back over here and then I'll just shut that down so because it's using log it's",
    "start": "1612900",
    "end": "1620220"
  },
  {
    "text": "actually making it look quite a lot like the log but you can see here so this is",
    "start": "1620220",
    "end": "1625320"
  },
  {
    "text": "coming from Rendell labs meta image Diagnostics console monitor and it's",
    "start": "1625320",
    "end": "1630360"
  },
  {
    "text": "written out the name of the source the key so the the event name effectively",
    "start": "1630360",
    "end": "1635940"
  },
  {
    "text": "and then I think I've just serialized the values off and the original size was",
    "start": "1635940",
    "end": "1643010"
  },
  {
    "text": "563 K and the shrunk size is 32 K so that was obviously a massive and badly",
    "start": "1643010",
    "end": "1650220"
  },
  {
    "text": "compressed image the first time around so that that does that that's fairly",
    "start": "1650220",
    "end": "1657810"
  },
  {
    "start": "1653000",
    "end": "1799000"
  },
  {
    "text": "straightforward and obvious any questions about anything so far",
    "start": "1657810",
    "end": "1664220"
  },
  {
    "text": "because when you call the SUBSCRIBE method let's just go back nope it's in",
    "start": "1668450",
    "end": "1682279"
  },
  {
    "text": "the code isn't it when I call subscribe",
    "start": "1682279",
    "end": "1688580"
  },
  {
    "text": "here so I've got source I'm using the reactive extensions here none of these",
    "start": "1688580",
    "end": "1694279"
  },
  {
    "text": "will actually do anything it's kind of like if you're not familiar with reactive you know if you create an async",
    "start": "1694279",
    "end": "1700369"
  },
  {
    "text": "and you create an ienumerable method and then you call it and it doesn't actually",
    "start": "1700369",
    "end": "1705470"
  },
  {
    "text": "do any of the code in the method until you start in numerating over it with for each or two lists or whatever this is",
    "start": "1705470",
    "end": "1711169"
  },
  {
    "text": "the same thing it won't start doing anything with it until you called dot subscribe on the I observable as soon as",
    "start": "1711169",
    "end": "1717559"
  },
  {
    "text": "you call dot subscribe it sets a flag inside the diagnostic listener to say",
    "start": "1717559",
    "end": "1722659"
  },
  {
    "text": "yes someone is listening to you and when you dispose that if all the streams",
    "start": "1722659",
    "end": "1729139"
  },
  {
    "text": "dispose that then it will shut it off again and say it's alright nobody's listening anymore with things like",
    "start": "1729139",
    "end": "1735889"
  },
  {
    "text": "dynamic configuration in in.net core where you can kind of go in and change a",
    "start": "1735889",
    "end": "1741379"
  },
  {
    "text": "value in console or zookeeper or a text file if you must you can actually say",
    "start": "1741379",
    "end": "1748429"
  },
  {
    "text": "when that changes disable metrics so you can turn it on and off while your",
    "start": "1748429",
    "end": "1753739"
  },
  {
    "text": "systems running and because there is obviously a performance hit to doing this that's why we don't want to do it",
    "start": "1753739",
    "end": "1760700"
  },
  {
    "text": "if nobody's listening but you might have really low level I need to get some",
    "start": "1760700",
    "end": "1766460"
  },
  {
    "text": "information out but I don't want that performance hit on a day-to-day basis 24/7",
    "start": "1766460",
    "end": "1773919"
  },
  {
    "text": "and I've lost some slides",
    "start": "1776360",
    "end": "1780250"
  },
  {
    "text": "okay shift f5 so this therefore gives us",
    "start": "1785910",
    "end": "1801790"
  },
  {
    "start": "1799000",
    "end": "2255000"
  },
  {
    "text": "a mechanism where we can say write to",
    "start": "1801790",
    "end": "1807400"
  },
  {
    "text": "diagnostic source don't worry about that not being supported it's as close to being actually in the.net framework as",
    "start": "1807400",
    "end": "1814300"
  },
  {
    "text": "it could possibly be is there anyone in the room whose company will not let them install new get packages from Microsoft",
    "start": "1814300",
    "end": "1821320"
  },
  {
    "text": "signed by Microsoft supported by Microsoft that have maintained inside the dotnet / core FX repository no not",
    "start": "1821320",
    "end": "1831160"
  },
  {
    "text": "really but yeah so this is baked in properly and it is part of dotnet core in",
    "start": "1831160",
    "end": "1840730"
  },
  {
    "text": "particular so it's supported by some of the stuff inside net core and asp net",
    "start": "1840730",
    "end": "1848380"
  },
  {
    "text": "core it's supported in asp net core they will say we are starting processing a",
    "start": "1848380",
    "end": "1856420"
  },
  {
    "text": "request so right at the hosting level Microsoft or ASP net cord or hosting as",
    "start": "1856420",
    "end": "1861850"
  },
  {
    "text": "soon as it comes off kestrel it says start an activity which is processing",
    "start": "1861850",
    "end": "1867670"
  },
  {
    "text": "this request and then once it's finished writing the response back out again it",
    "start": "1867670",
    "end": "1872890"
  },
  {
    "text": "says stop that activity and you can hook into that and say how long is this taking actually at the lowest possible",
    "start": "1872890",
    "end": "1879940"
  },
  {
    "text": "level in the framework because by the time you know yet you can put a starter",
    "start": "1879940",
    "end": "1885220"
  },
  {
    "text": "timer and end a time in your controller method and that'll tell you how long",
    "start": "1885220",
    "end": "1891850"
  },
  {
    "text": "your controller method took to run but I don't think I need to tell anybody that how long it takes your controller method",
    "start": "1891850",
    "end": "1897760"
  },
  {
    "text": "to run and how long that actually took on the server and not the same thing at",
    "start": "1897760",
    "end": "1903760"
  },
  {
    "text": "all by the time you've got things like caching and compression and all the various other parts of the pipeline and",
    "start": "1903760",
    "end": "1909460"
  },
  {
    "text": "the middleware and everything else that's going on so because we've got this standard way of doing this in the",
    "start": "1909460",
    "end": "1915640"
  },
  {
    "text": "same sense that Microsoft writes a ton stuff to the logs do not put something",
    "start": "1915640",
    "end": "1921610"
  },
  {
    "text": "into production with logging set to information for Microsoft or system",
    "start": "1921610",
    "end": "1928180"
  },
  {
    "text": "namespaces because you will run up a bill of many millions of pounds in Splunk in about a week but it's useful",
    "start": "1928180",
    "end": "1938770"
  },
  {
    "text": "to have it it's nice to have it there and diagnostics gives us the same thing for this structured data this this this",
    "start": "1938770",
    "end": "1945640"
  },
  {
    "text": "useful maths type data entity framework core",
    "start": "1945640",
    "end": "1952660"
  },
  {
    "text": "has it in there as well so entity framework also starting an activity I'm running a query against the database the queries returned I've serialized all the",
    "start": "1952660",
    "end": "1959680"
  },
  {
    "text": "data back out again I'm stopping the activity and so you can hook that in there as well and they because it's got",
    "start": "1959680",
    "end": "1966040"
  },
  {
    "text": "this object that you pass in with all these different values on asp net core",
    "start": "1966040",
    "end": "1971950"
  },
  {
    "text": "gives you the HTTP context that it's using for the duration of that request entity framework core gives you the DB",
    "start": "1971950",
    "end": "1980620"
  },
  {
    "text": "connection that it's using for the duration of that request it gives you the DB command it therefore is giving",
    "start": "1980620",
    "end": "1986380"
  },
  {
    "text": "you the sequel that it is running against the database even better than",
    "start": "1986380",
    "end": "1992560"
  },
  {
    "text": "those two things though is that HTTP client supports this so this is system",
    "start": "1992560",
    "end": "1998980"
  },
  {
    "text": "net HTTP client doesn't matter where you're using that from its supports",
    "start": "1998980",
    "end": "2004410"
  },
  {
    "text": "diagnostic source and we'll have a look at why that's really cool now because",
    "start": "2004410",
    "end": "2012290"
  },
  {
    "text": "there is another issue with gathering these kind of metrics we are building",
    "start": "2012290",
    "end": "2018810"
  },
  {
    "text": "big distributed systems who is working on a system that runs across multiple",
    "start": "2018810",
    "end": "2025260"
  },
  {
    "text": "machines and makes requests to other services on your intranet or on the",
    "start": "2025260",
    "end": "2032010"
  },
  {
    "text": "internet or anything anywhere else in order to process a single request if",
    "start": "2032010",
    "end": "2038130"
  },
  {
    "text": "you're not now you're gonna be within the next couple years or get another top",
    "start": "2038130",
    "end": "2046400"
  },
  {
    "text": "because because trust me it's cool it's so much more complicated you couldn't char",
    "start": "2046400",
    "end": "2051618"
  },
  {
    "text": "so much more per day for getting these things to work and you look so much",
    "start": "2051619",
    "end": "2056779"
  },
  {
    "text": "cleverer at the end of it you really do but this has introduced this problem of distributed tracing an Aeron standard",
    "start": "2056779",
    "end": "2063529"
  },
  {
    "text": "was talking about this with regards to a Kadam net now obviously akadama is an",
    "start": "2063529",
    "end": "2068898"
  },
  {
    "text": "actor system and so the whole point is that you've got dozens or hundreds of machines and you're just farming out",
    "start": "2068899",
    "end": "2076279"
  },
  {
    "text": "requests and going I don't care who does it somebody do it get back to me when it's done and so you want to be able to correlate",
    "start": "2076279",
    "end": "2082908"
  },
  {
    "text": "all these things together when you get them back again when you're looking through the logs you want to go right so",
    "start": "2082909",
    "end": "2089210"
  },
  {
    "text": "this exception happened but what request was that processing and why was it doing that and traced that right the way back",
    "start": "2089210",
    "end": "2095480"
  },
  {
    "text": "up through and there are platforms like Yeager and Zipkin which are designed to",
    "start": "2095480",
    "end": "2101180"
  },
  {
    "text": "manage the data that you get out of these things where you have request IDs",
    "start": "2101180",
    "end": "2107990"
  },
  {
    "text": "and spans and so you can say right so this happened over here and this happened on an arbitrary",
    "start": "2107990",
    "end": "2114079"
  },
  {
    "text": "machine I don't really care which one and then it made three requests to three different services and I can still see",
    "start": "2114079",
    "end": "2120739"
  },
  {
    "text": "that they were children of that because they're sharing a correlation idea across all these things and ASP neck",
    "start": "2120739",
    "end": "2128210"
  },
  {
    "text": "core because it supports this diagnostic source and this activity thing actually",
    "start": "2128210",
    "end": "2133730"
  },
  {
    "text": "works with that internally and there is some very clever code in there there is",
    "start": "2133730",
    "end": "2140859"
  },
  {
    "text": "something called the HTTP correlation protocol which makes it sound like it's",
    "start": "2140859",
    "end": "2148970"
  },
  {
    "text": "a standard and it is a standard in Microsoft but it is something that the",
    "start": "2148970",
    "end": "2155869"
  },
  {
    "text": "w3c are working on because this is becoming a global problem and we need a",
    "start": "2155869",
    "end": "2162499"
  },
  {
    "text": "global solution and it would be nice if everything talked the same language and use the same solution so at the moment",
    "start": "2162499",
    "end": "2168559"
  },
  {
    "text": "Microsoft have got their own but it's adaptable they can change it if they need to so asp net core when it starts",
    "start": "2168559",
    "end": "2175519"
  },
  {
    "text": "processing a request looks at the request headers and says have you got a request ID and if it has then it goes",
    "start": "2175519",
    "end": "2183550"
  },
  {
    "text": "I don't care what that is I'm gonna generate another random string it could",
    "start": "2183550",
    "end": "2189610"
  },
  {
    "text": "be a gooood or it could just be date/time nail dot tix or something and",
    "start": "2189610",
    "end": "2195340"
  },
  {
    "text": "I'm gonna tack that on to the end of this request ID and so whether that's going to yo-yo roars it kin or something",
    "start": "2195340",
    "end": "2203230"
  },
  {
    "text": "else you'll be able to correlate these requests together and see them grouped",
    "start": "2203230",
    "end": "2208900"
  },
  {
    "text": "into the overall thing and it also has a correlation context because you might have various tags you might want to say",
    "start": "2208900",
    "end": "2215650"
  },
  {
    "text": "okay so the product ID that we're working with you know over on the first server that started processing this",
    "start": "2215650",
    "end": "2221320"
  },
  {
    "text": "request it knows what the product ID is it may be that the product ID is not one",
    "start": "2221320",
    "end": "2227950"
  },
  {
    "text": "of the parameters that it's passing on to another service it might have gone and done one lookup already and got back a user ID and now",
    "start": "2227950",
    "end": "2235660"
  },
  {
    "text": "it's going to the user service to say what's this user with this user ID but you can pass across the product ID that",
    "start": "2235660",
    "end": "2243160"
  },
  {
    "text": "was a originally specified an activity provides a way of doing this with",
    "start": "2243160",
    "end": "2248290"
  },
  {
    "text": "something called baggage which we'll look at briefly and so even better I can",
    "start": "2248290",
    "end": "2257410"
  },
  {
    "start": "2255000",
    "end": "2535000"
  },
  {
    "text": "actually I've got the code for for where it does this I'll just drag that up quickly so this is where Microsoft the",
    "start": "2257410",
    "end": "2266410"
  },
  {
    "text": "asp net core team are doing this inside the hosting service and they've got",
    "start": "2266410",
    "end": "2275200"
  },
  {
    "text": "other ones of these for things like executing a view or whatever it might be that they're doing and so you can see",
    "start": "2275200",
    "end": "2281200"
  },
  {
    "text": "they've got this request ID head and lane and they've got activity name and activity start key they've got some",
    "start": "2281200",
    "end": "2288250"
  },
  {
    "text": "deprecated keys it never even made it into proper production before they have",
    "start": "2288250",
    "end": "2294430"
  },
  {
    "text": "some deprecated keys if you are planning on actually working with the Diagnostics",
    "start": "2294430",
    "end": "2300640"
  },
  {
    "text": "that they generate get used to diving into the code and digging around and finding out what they are because that",
    "start": "2300640",
    "end": "2306880"
  },
  {
    "text": "is literally the only documentation there is at the moment this is a known issue people are supposed to be working",
    "start": "2306880",
    "end": "2312970"
  },
  {
    "text": "on it when I said something yesterday David Fowler when pull requests yeah",
    "start": "2312970",
    "end": "2318790"
  },
  {
    "text": "okay I'm not busy I may actually do it",
    "start": "2318790",
    "end": "2324359"
  },
  {
    "text": "so yes when this this is the point where the request starts being processed and",
    "start": "2324359",
    "end": "2329590"
  },
  {
    "text": "so you can see here we say if diagnostic listen are enabled so it won't do this",
    "start": "2329590",
    "end": "2334900"
  },
  {
    "text": "if you don't have a listener set up it's not going to do it at all and that means",
    "start": "2334900",
    "end": "2340600"
  },
  {
    "text": "even the weird thing with that is you might not be doing anything with the data but if you want it to do this",
    "start": "2340600",
    "end": "2347680"
  },
  {
    "text": "request correlation ID thing and pass it on to upstream stuff you need to attach",
    "start": "2347680",
    "end": "2355119"
  },
  {
    "text": "a listener otherwise this code won't happen at all they're talking about maybe reversing that so the default is",
    "start": "2355119",
    "end": "2362380"
  },
  {
    "text": "that it does it and there's a switch to turn it off but at the moment even if you're not actually listening",
    "start": "2362380",
    "end": "2367660"
  },
  {
    "text": "you need to pretend to listen to make it do this we say start activity and if I go down to start activity I don't have a",
    "start": "2367660",
    "end": "2376000"
  },
  {
    "text": "definition found because this is the new ASP neck core mono repo and there was no",
    "start": "2376000",
    "end": "2382510"
  },
  {
    "text": "way I was gonna do dotnet restore on that on the conference Wi-Fi you can thank me later",
    "start": "2382510",
    "end": "2389640"
  },
  {
    "text": "so where are we start activity is down here so we're gonna create a new activity with the activity name we've",
    "start": "2390840",
    "end": "2396940"
  },
  {
    "text": "got this request ID which we try to take off the headers if it was there then we're going to say activity dot set",
    "start": "2396940",
    "end": "2402940"
  },
  {
    "text": "parent ID to this request ID and then that will cause the activity when it is",
    "start": "2402940",
    "end": "2408670"
  },
  {
    "text": "started to generate a sub ID off that and we're also going to split out the",
    "start": "2408670",
    "end": "2414670"
  },
  {
    "text": "correlation context into an array and then if there is anything there we'll",
    "start": "2414670",
    "end": "2421000"
  },
  {
    "text": "add that to the activity as baggage so that gets passed through now I'm not",
    "start": "2421000",
    "end": "2426850"
  },
  {
    "text": "going to dive into the activity code because it's a bit gnarly but activity",
    "start": "2426850",
    "end": "2432100"
  },
  {
    "text": "there is an activity dot current static property because there's no standard way",
    "start": "2432100",
    "end": "2439540"
  },
  {
    "text": "of passing something around there's a standard way of passing things around in asp.net core you've got the HTTP context",
    "start": "2439540",
    "end": "2448330"
  },
  {
    "text": "and actually they do attach the activity to the context just in case and you have dependency",
    "start": "2448330",
    "end": "2455089"
  },
  {
    "text": "injection but you don't necessarily have that in uwp or xamarin for example so",
    "start": "2455089",
    "end": "2460339"
  },
  {
    "text": "they are using an async local context for the current property and we don't",
    "start": "2460339",
    "end": "2468349"
  },
  {
    "text": "know what that is it's like thread local so thread local creates an instance of a static property for every single thread",
    "start": "2468349",
    "end": "2476150"
  },
  {
    "text": "once it's been created it sticks to that thread and it just stays there a sync",
    "start": "2476150",
    "end": "2481490"
  },
  {
    "text": "local does the same thing but within an async on so if you do a wait on something then when it comes back",
    "start": "2481490",
    "end": "2488240"
  },
  {
    "text": "whatever thread it gets rehydrated on it will still have that same value on there",
    "start": "2488240",
    "end": "2493309"
  },
  {
    "text": "and so activity dot current will follow you through an entire set of async",
    "start": "2493309",
    "end": "2499880"
  },
  {
    "text": "processes and it will always point to the right activity and so you can say",
    "start": "2499880",
    "end": "2505430"
  },
  {
    "text": "when you say start a new activity this default behavior is to go is there an activity current if there is",
    "start": "2505430",
    "end": "2512450"
  },
  {
    "text": "set this new activities parent to the current activity set the current activity to this new activity leave it",
    "start": "2512450",
    "end": "2519079"
  },
  {
    "text": "like that until we stop the activity which is why it's so important to do it in try finally blocks and then set the",
    "start": "2519079",
    "end": "2526099"
  },
  {
    "text": "current activity back to the parent of whatever this activity was did that make sense yes good excellent I'm very happy",
    "start": "2526099",
    "end": "2535390"
  },
  {
    "start": "2535000",
    "end": "2763000"
  },
  {
    "text": "the reason that this is incredibly useful and the reason that you want it to be happening even if you're not",
    "start": "2535390",
    "end": "2542089"
  },
  {
    "text": "actually listening to the things and writing them out anywhere is the HTTP client does the opposite of this so HTTP",
    "start": "2542089",
    "end": "2549500"
  },
  {
    "text": "client when you say get async or get ass get string async or post or whatever you",
    "start": "2549500",
    "end": "2555470"
  },
  {
    "text": "might do looks at activity current and if it says oh look there's a current",
    "start": "2555470",
    "end": "2560750"
  },
  {
    "text": "activity then it takes the activity ID off there and it takes the baggage off",
    "start": "2560750",
    "end": "2566900"
  },
  {
    "text": "the current activity and it puts the request ID and correlation context headers into the request that it's",
    "start": "2566900",
    "end": "2573740"
  },
  {
    "text": "sending out and then passes it on up and also has the side effect that it's",
    "start": "2573740",
    "end": "2579710"
  },
  {
    "text": "timing or HTTP requests for you from inside the framework which is pretty meat and so you've got this I'm hoping",
    "start": "2579710",
    "end": "2588420"
  },
  {
    "text": "we're at the kind of early stages of this process where we've got this level",
    "start": "2588420",
    "end": "2594150"
  },
  {
    "text": "of metric gathering and information provision inside not just a SP net cord",
    "start": "2594150",
    "end": "2602160"
  },
  {
    "text": "not just entity framework core but actually inside net core itself and at the moment it's just on HTTP client but",
    "start": "2602160",
    "end": "2609630"
  },
  {
    "text": "you can see it going into more things one thing when they put finally when",
    "start": "2609630",
    "end": "2615810"
  },
  {
    "text": "Microsoft up windows or system got Windows the WPF source code as opposed to just zamel which is all we've got so",
    "start": "2615810",
    "end": "2622260"
  },
  {
    "text": "far when they put the WPF source code on github I'm cloning it and as anyone ever used",
    "start": "2622260",
    "end": "2629370"
  },
  {
    "text": "the binding trace source which just spouts text off saying there was a",
    "start": "2629370",
    "end": "2637350"
  },
  {
    "text": "binding error and none there's no consistency in the format of those",
    "start": "2637350",
    "end": "2642360"
  },
  {
    "text": "errors so I have to write a parser and you have to write multiple passes for",
    "start": "2642360",
    "end": "2648210"
  },
  {
    "text": "all the different errors and so forth and I'm going to my first pull request to WPF is to create additional versions",
    "start": "2648210",
    "end": "2657720"
  },
  {
    "text": "of those that put that out as structured data over a diagnostic source so you can",
    "start": "2657720",
    "end": "2663630"
  },
  {
    "text": "just go listen for binding errors on the diagnostic source and it'll actually have consistent source names and value",
    "start": "2663630",
    "end": "2669360"
  },
  {
    "text": "names and field names and whatever else might be in there so yes basically if",
    "start": "2669360",
    "end": "2674430"
  },
  {
    "text": "you get a request in if you've got these Diagnostics turned on if you get a request in and it had a request ID then",
    "start": "2674430",
    "end": "2681780"
  },
  {
    "text": "it'll automatically be put into the current activity and then if you make an HTTP request with any HTTP client at all",
    "start": "2681780",
    "end": "2688830"
  },
  {
    "text": "then it will pass that request ID on plus your little sub bit to say this is",
    "start": "2688830",
    "end": "2695610"
  },
  {
    "text": "now part of this process and all that's just handled for you and it means that you can do it as well HTTP client is",
    "start": "2695610",
    "end": "2704150"
  },
  {
    "text": "doing that here so it's got a delegating handler that it uses Diagnostics handler",
    "start": "2704150",
    "end": "2713640"
  },
  {
    "text": "here and yeah so it says where is it",
    "start": "2713640",
    "end": "2719799"
  },
  {
    "text": "activity current activity equals activity current if it's not null and",
    "start": "2719799",
    "end": "2725700"
  },
  {
    "text": "you haven't already put a request ID in because obviously it doesn't want to be coming along and overwriting your",
    "start": "2725700",
    "end": "2732130"
  },
  {
    "text": "request ID then it will say realize this and put it into the new header so that's",
    "start": "2732130",
    "end": "2737500"
  },
  {
    "text": "in there as well that's in system dot med HTTP and it's part of the core FX",
    "start": "2737500",
    "end": "2745180"
  },
  {
    "text": "repository so it is as close to being part of the base class library as you can get without actually breaking dotnet",
    "start": "2745180",
    "end": "2752440"
  },
  {
    "text": "core 4.8 no dotnet full-fat for point what are we supposed to call net now",
    "start": "2752440",
    "end": "2758069"
  },
  {
    "text": "because you can't dotnet doom classic dotnet this is what the correlation",
    "start": "2758069",
    "end": "2765279"
  },
  {
    "start": "2763000",
    "end": "2867000"
  },
  {
    "text": "protocol looks like request ID starts with a pipe to say this is definitely the start I haven't just forgotten to",
    "start": "2765279",
    "end": "2771220"
  },
  {
    "text": "give you the start this is the start if the pipes not there then it's probably me being stupid then there is the root",
    "start": "2771220",
    "end": "2777670"
  },
  {
    "text": "request ID which is this one that starts with nine eight two three and then it",
    "start": "2777670",
    "end": "2782950"
  },
  {
    "text": "ends with the dot and again it has to end with a dot there are two great things about it ending with a dot one is",
    "start": "2782950",
    "end": "2789789"
  },
  {
    "text": "that you know there are three great things about is ending with the dot surprise fear and a mootness efficiency",
    "start": "2789789",
    "end": "2796890"
  },
  {
    "text": "Monty Python jokes I didn't expect no I forgot was no so three good things about",
    "start": "2796890",
    "end": "2803859"
  },
  {
    "text": "ending with a dot one you definitely have ended it with a dot that's on",
    "start": "2803859",
    "end": "2809680"
  },
  {
    "text": "purpose it hasn't just been cut off at some point you haven't overflowed the maximum length of a string the maximum",
    "start": "2809680",
    "end": "2815769"
  },
  {
    "text": "length of this by the way is 1,024 characters so yes you know it ends there",
    "start": "2815769",
    "end": "2821099"
  },
  {
    "text": "it means when you're adding on to the end of something you don't have to do that thing where you go if there was",
    "start": "2821099",
    "end": "2828039"
  },
  {
    "text": "something there before then append a dot and then append this thing otherwise just append this thing because you don't",
    "start": "2828039",
    "end": "2834069"
  },
  {
    "text": "you're not prepending it's fine for there to be a dot on the end as well but",
    "start": "2834069",
    "end": "2839170"
  },
  {
    "text": "most importantly if this goes into some kind of searchable database and I'm",
    "start": "2839170",
    "end": "2845079"
  },
  {
    "text": "going this ends with 42 dots I can search on dot 42 dots and find",
    "start": "2845079",
    "end": "2851770"
  },
  {
    "text": "those things if I search on dot 42 I'm gonna get everything that starts with dot 42 as well so it makes that nice and",
    "start": "2851770",
    "end": "2859059"
  },
  {
    "text": "easy and then we have the correlation context which is just a string of key",
    "start": "2859059",
    "end": "2864190"
  },
  {
    "text": "value pairs done as a comma delimited list so we've looked at reading events",
    "start": "2864190",
    "end": "2869650"
  },
  {
    "start": "2867000",
    "end": "3230000"
  },
  {
    "text": "using the monitor but before we finish I just want to show you oh hang on I'll",
    "start": "2869650",
    "end": "2876280"
  },
  {
    "text": "show you the one other thing that we didn't cover so in my image controller",
    "start": "2876280",
    "end": "2883950"
  },
  {
    "text": "this writing Diagnostics dot is enabled then do this and create a new thing is",
    "start": "2883950",
    "end": "2891780"
  },
  {
    "text": "is strenuous and so you might find the people well",
    "start": "2891780",
    "end": "2899130"
  },
  {
    "text": "one mad thing they could do is just assume it's going to be enabled and not bother checking because they can't be",
    "start": "2899130",
    "end": "2904720"
  },
  {
    "text": "bothered and the other possibility which is much worse is that they just won't put Diagnostics into their code and you",
    "start": "2904720",
    "end": "2911559"
  },
  {
    "text": "don't want that so you want to make it nice and easy for them but there is a problem and I will show you the nature",
    "start": "2911559",
    "end": "2919510"
  },
  {
    "text": "of this problem using sharp lab so what I've got here",
    "start": "2919510",
    "end": "2928740"
  },
  {
    "text": "you don't use sharp lab by the way sharp lab dot IO you type in a c-sharp code on",
    "start": "2928740",
    "end": "2934030"
  },
  {
    "text": "one side and on the other side you can get it to show you what that c-sharp",
    "start": "2934030",
    "end": "2939160"
  },
  {
    "text": "code turns into but also in c-sharp code or you can get it to show you the il or",
    "start": "2939160",
    "end": "2945280"
  },
  {
    "text": "if you run it you can get it to show you the machine code that the JIT put out which scares the hell out of me and they",
    "start": "2945280",
    "end": "2950650"
  },
  {
    "text": "don't do it but yes so people go or we could create an extension method just",
    "start": "2950650",
    "end": "2956740"
  },
  {
    "text": "right if enabled and then that saves lots of time I can just say data Diagnostics or start right if enabled",
    "start": "2956740",
    "end": "2962589"
  },
  {
    "text": "and then this is nice the problem here though is that you're saying call this",
    "start": "2962589",
    "end": "2970420"
  },
  {
    "text": "right if enabled method create this object and pass it into that method so you've completely missed the point of is",
    "start": "2970420",
    "end": "2978280"
  },
  {
    "text": "enabled so please don't go and think aha clever I'll go and do this because the",
    "start": "2978280",
    "end": "2984670"
  },
  {
    "text": "whole point of having the is enabled thing is to say don't create objects unless you absolutely have to but",
    "start": "2984670",
    "end": "2992460"
  },
  {
    "text": "because it was so tempting to actually do this I did manage to figure out how",
    "start": "2992460",
    "end": "2999190"
  },
  {
    "text": "to come up with a syntactic sugar that's almost nicer so we created an extension",
    "start": "2999190",
    "end": "3006090"
  },
  {
    "text": "method called this is a simplified version so if we go and look down here",
    "start": "3006090",
    "end": "3011400"
  },
  {
    "text": "just quickly so yes you can see dear stop right if enabled foo new global",
    "start": "3011400",
    "end": "3017460"
  },
  {
    "text": "anonymous type etc etc instead we",
    "start": "3017460",
    "end": "3023250"
  },
  {
    "text": "created an if enabled extension method and if the diagnostic source is enabled",
    "start": "3023250",
    "end": "3032960"
  },
  {
    "text": "it returns the diagnostic source otherwise it returns null and this",
    "start": "3032960",
    "end": "3046910"
  },
  {
    "text": "question mark dot would be good window",
    "start": "3047270",
    "end": "3051830"
  },
  {
    "text": "okay so diagnostic source if enabled question mark dot right so we're using",
    "start": "3057410",
    "end": "3065360"
  },
  {
    "text": "the null dereferencing operator what that actually compiles to and you can",
    "start": "3065360",
    "end": "3070970"
  },
  {
    "text": "see that down so it's it's still roughly the same but what that compiles to down",
    "start": "3070970",
    "end": "3076220"
  },
  {
    "text": "here if I can find my M method is diagnostic source equals Diagnostics or",
    "start": "3076220",
    "end": "3085010"
  },
  {
    "text": "star if enabled if it's not null then call right and do the new process and so",
    "start": "3085010",
    "end": "3091610"
  },
  {
    "text": "we do actually have this essentially D sugars to what you should be writing and",
    "start": "3091610",
    "end": "3098210"
  },
  {
    "text": "it does it really nicely the only problem with that that I really didn't",
    "start": "3098210",
    "end": "3104120"
  },
  {
    "text": "like was you're saying if enabled Fuu dot right Fuu and I was kind of like I",
    "start": "3104120",
    "end": "3110960"
  },
  {
    "text": "don't I'm I'm writing food twice why am I writing food twice and I was watching somebody do a talk about something and I",
    "start": "3110960",
    "end": "3117500"
  },
  {
    "text": "thought oh I could do that instead so",
    "start": "3117500",
    "end": "3123340"
  },
  {
    "text": "move that out",
    "start": "3126760",
    "end": "3130300"
  },
  {
    "text": "so now I have an extension method that says Diagnostics or if enabled image",
    "start": "3133550",
    "end": "3138600"
  },
  {
    "text": "resize dot right and it just knows that it's image resize and I just want to",
    "start": "3138600",
    "end": "3144660"
  },
  {
    "text": "show you how that works because it was weird because obviously that's using the",
    "start": "3144660",
    "end": "3150600"
  },
  {
    "text": "null dereferencing operator so we need something that can be null which means I need to create an object except if I",
    "start": "3150600",
    "end": "3156870"
  },
  {
    "text": "create an object then I've just done that allocation that I was trying to avoid anyway so it would be much better",
    "start": "3156870",
    "end": "3163380"
  },
  {
    "text": "if I could create a struct because then I don't have an allocation and I can just put the diagnostic source and the",
    "start": "3163380",
    "end": "3169590"
  },
  {
    "text": "name into the struct and then put a write method on that except then I can't",
    "start": "3169590",
    "end": "3175230"
  },
  {
    "text": "use the null dereferencing operator except you can use the null dereferencing operator on a nullable of",
    "start": "3175230",
    "end": "3182400"
  },
  {
    "text": "a struct and I'm not sure how nullable is a struct but it is they've done",
    "start": "3182400",
    "end": "3191490"
  },
  {
    "text": "something nasty I want to try to recreate nullable and I couldn't because there's something weird going on in the",
    "start": "3191490",
    "end": "3196890"
  },
  {
    "text": "base class library to make it work but anyway so I've got I've got a public read-only struct maybe diagnostic source",
    "start": "3196890",
    "end": "3204120"
  },
  {
    "text": "and my if enabled returns a nullable of that struct and now that works I only",
    "start": "3204120",
    "end": "3211380"
  },
  {
    "text": "have to type the name of the event that I'm writing once and I've still got my lovely syntactic sugar don't worry about",
    "start": "3211380",
    "end": "3217890"
  },
  {
    "text": "grabbing photos of this because I'm gonna do a git push as soon as I've",
    "start": "3217890",
    "end": "3223170"
  },
  {
    "text": "finished and just take a picture of the last slide which has got the github URL on it so yeah that was fun so then you",
    "start": "3223170",
    "end": "3232050"
  },
  {
    "start": "3230000",
    "end": "3327000"
  },
  {
    "text": "want somewhere to write this through - I've actually submitted a pull request to loop loop has now got an open source",
    "start": "3232050",
    "end": "3237960"
  },
  {
    "text": "agent for dotnet core and I was kinda like this is really cool so I sent them a pull request that made it pick up all",
    "start": "3237960",
    "end": "3243870"
  },
  {
    "text": "the asp net core and entity framework call diagnostics and write those out but",
    "start": "3243870",
    "end": "3249690"
  },
  {
    "text": "I like writing them too in flux DB particularly because this is a desktop application running on desktops there it",
    "start": "3249690",
    "end": "3255900"
  },
  {
    "text": "in flux DB if you don't know what it is is a time series database it is optimized for writing items numbers to a",
    "start": "3255900",
    "end": "3264150"
  },
  {
    "text": "stream with a timestamp and then running queries against them and there are two main popular time",
    "start": "3264150",
    "end": "3272460"
  },
  {
    "text": "series databases right now as influx TV and Prometheus and the difference",
    "start": "3272460",
    "end": "3277500"
  },
  {
    "text": "between them is that you send data to influx TV whereas Prometheus comes to",
    "start": "3277500",
    "end": "3282839"
  },
  {
    "text": "you and asks for data which is called scraping which is brilliant in a micro service environment because Prometheus",
    "start": "3282839",
    "end": "3288720"
  },
  {
    "text": "will go hello can I have some data please and if the service doesn't say",
    "start": "3288720",
    "end": "3294480"
  },
  {
    "text": "yes you can have some data then Prometheus goes that service is crashed it's stopped talking to me which is",
    "start": "3294480",
    "end": "3301680"
  },
  {
    "text": "great and very useful in flux it's much more traditional hey take this data and",
    "start": "3301680",
    "end": "3306690"
  },
  {
    "text": "store it for me and when you've got desktop machines all running like 500 of",
    "start": "3306690",
    "end": "3313920"
  },
  {
    "text": "them all running a WPF application you don't really want to be going can we open a port on the firewall so that this",
    "start": "3313920",
    "end": "3320970"
  },
  {
    "text": "Prometheus server can spread out connections to 500 pcs and pull data",
    "start": "3320970",
    "end": "3326069"
  },
  {
    "text": "back so in flux it's incredibly easy to write to in flux it has a line format",
    "start": "3326069",
    "end": "3333539"
  },
  {
    "start": "3327000",
    "end": "3600000"
  },
  {
    "text": "where you just have the name of the measurement and then comma separated key value pairs for the tags and then a",
    "start": "3333539",
    "end": "3339990"
  },
  {
    "text": "space and then comma separated key value pairs for the fields so tags are for",
    "start": "3339990",
    "end": "3346319"
  },
  {
    "text": "grouping and filtering and fields are the actual data and then optionally at",
    "start": "3346319",
    "end": "3351809"
  },
  {
    "text": "the end you have a timestamp and so I just have to take the various names and",
    "start": "3351809",
    "end": "3357589"
  },
  {
    "text": "the object that is being passed through and potentially something off the activity and translate that into this",
    "start": "3357589",
    "end": "3364170"
  },
  {
    "text": "format and then write it off doing a flux DB I did this initially using the official influx DB c-sharp client every",
    "start": "3364170",
    "end": "3372299"
  },
  {
    "text": "single line that it writes to this rate this byte stream of utf-8 encoded text",
    "start": "3372299",
    "end": "3381890"
  },
  {
    "text": "every single line it was allocating five dictionaries and here's a kind this is",
    "start": "3381890",
    "end": "3387809"
  },
  {
    "text": "not this when you put the Diagnostics in you don't want them to make things worse",
    "start": "3387809",
    "end": "3392849"
  },
  {
    "text": "why is this running slowly because you're measuring it it's just two quantum",
    "start": "3392849",
    "end": "3399630"
  },
  {
    "text": "or quantum tomorrow that's just been hurting my brain come for the quantum stay for the owl so yes I went thought",
    "start": "3399630",
    "end": "3409830"
  },
  {
    "text": "that and I went off and I wrote my own in flux client and I keep meaning to sort of send them something because it's",
    "start": "3409830",
    "end": "3416340"
  },
  {
    "text": "not a pull request it's basically a York hose here's some better code not sure how to phrase that probably not",
    "start": "3416340",
    "end": "3422970"
  },
  {
    "text": "like that so it's not quite ready for putting on nougat yet I'm still tweaking",
    "start": "3422970",
    "end": "3429450"
  },
  {
    "text": "it round the edges but it's in the example code that I've got for this",
    "start": "3429450",
    "end": "3436430"
  },
  {
    "text": "application so let's close all of those",
    "start": "3436430",
    "end": "3443240"
  },
  {
    "text": "yeah gonna save that so in my startup I'm going to comment out that line and",
    "start": "3443240",
    "end": "3454290"
  },
  {
    "text": "I'm going to uncomment those lines and do that and then I'm gonna pull this",
    "start": "3454290",
    "end": "3461070"
  },
  {
    "text": "down here and run that again but yes I",
    "start": "3461070",
    "end": "3471720"
  },
  {
    "text": "don't think I've really got time to go into it but what it essentially does is",
    "start": "3471720",
    "end": "3476760"
  },
  {
    "text": "it upfront allocates of 128 K buffer and then every time something wants to write",
    "start": "3476760",
    "end": "3483300"
  },
  {
    "text": "a line to it it puts it onto a queue and I'm using the new system thread and",
    "start": "3483300",
    "end": "3488670"
  },
  {
    "text": "channels it was basically how many of the cool new things like spam and memory",
    "start": "3488670",
    "end": "3494130"
  },
  {
    "text": "and utf-8 formatter and and system dot threading channels",
    "start": "3494130",
    "end": "3499260"
  },
  {
    "text": "and system to i/o type lines can I use in one NuGet package and the answer was",
    "start": "3499260",
    "end": "3505590"
  },
  {
    "text": "all of them except pipelines I couldn't find a way to make that work but channels it's all in there and so",
    "start": "3505590",
    "end": "3512220"
  },
  {
    "text": "essentially it just writes them directly to this chunk of data one at a time",
    "start": "3512220",
    "end": "3517320"
  },
  {
    "text": "until it runs out of space and then it sends it and starts another one and it's all array pooled and everything and so",
    "start": "3517320",
    "end": "3522810"
  },
  {
    "text": "it's gone from five dictionaries plus various strings and everything being allocated for each line written to",
    "start": "3522810",
    "end": "3529590"
  },
  {
    "text": "nothing being allocated for each line written other than the object which was sent to",
    "start": "3529590",
    "end": "3535330"
  },
  {
    "text": "Diagnostics or stop right in the first place so that's doing that now and then I can go across to here and I can",
    "start": "3535330",
    "end": "3541630"
  },
  {
    "text": "generate some more traffic that's",
    "start": "3541630",
    "end": "3550000"
  },
  {
    "text": "generating traffic so that should be coming in as going through there and then I can find here again and I've got",
    "start": "3550000",
    "end": "3557560"
  },
  {
    "text": "chronograph running and if I hit refresh there you can see that I've got data",
    "start": "3557560",
    "end": "3566110"
  },
  {
    "text": "coming through here so chronograph is the kind of default out-of-the-box user",
    "start": "3566110",
    "end": "3572740"
  },
  {
    "text": "interface for influx DB it's great in the way that sequel server management",
    "start": "3572740",
    "end": "3578740"
  },
  {
    "text": "studio is great it's a nice tool for digging around in the data and discovering it and figuring out how to",
    "start": "3578740",
    "end": "3585550"
  },
  {
    "text": "build a query what you then want to do is take that query and go to graph honor",
    "start": "3585550",
    "end": "3591160"
  },
  {
    "text": "and paste it into graph honor because you want to use graph honor for your",
    "start": "3591160",
    "end": "3596410"
  },
  {
    "text": "actual dashboards but this is this is a nice way of doing that and so you can see here I've got it's automatically",
    "start": "3596410",
    "end": "3602710"
  },
  {
    "text": "adding tags that's the name of my laptop please don't find out on the network and hack me Troy like Troy comes to my talks",
    "start": "3602710",
    "end": "3610120"
  },
  {
    "text": "that's my user ID and we've got the activity duration which it's pulling off the activity that was created and this",
    "start": "3610120",
    "end": "3616780"
  },
  {
    "text": "is actually the HTTP request in that stop so actually just by adding this",
    "start": "3616780",
    "end": "3622180"
  },
  {
    "text": "listener in and writing it through this is my request timer and I could decorate with this with some additional stuff and",
    "start": "3622180",
    "end": "3628630"
  },
  {
    "text": "everything else but this is this is pulling this data across quite happily",
    "start": "3628630",
    "end": "3634150"
  },
  {
    "text": "and you can see it's got various chunks of data in there but I've also got my render labs meta image image resize and",
    "start": "3634150",
    "end": "3643000"
  },
  {
    "text": "that's gonna show me so those were the original sizes and the blue one is the",
    "start": "3643000",
    "end": "3648220"
  },
  {
    "text": "compressed sizes and that's showing me useful information as well so I can generate that if you wanted to use",
    "start": "3648220",
    "end": "3655420"
  },
  {
    "text": "Prometheus then you could use Prometheus if somebody else wanted to use data dog they could use data dog my customer who",
    "start": "3655420",
    "end": "3662470"
  },
  {
    "text": "uses loop they can use Lu it's all there everybody is producing it",
    "start": "3662470",
    "end": "3667900"
  },
  {
    "text": "and some people are consuming it and some people are maybe not consuming it okay so now fundamentally you have no",
    "start": "3667900",
    "end": "3675910"
  },
  {
    "text": "excuse not to be generating these metrics and you have no excuse not to be",
    "start": "3675910",
    "end": "3682350"
  },
  {
    "text": "storing these metrics and writing them off somewhere that you can do something useful with them Microsoft have gone to",
    "start": "3682350",
    "end": "3688090"
  },
  {
    "text": "all that trouble to make it so that you can do this so it would actually be rude to not keep monitoring this stuff here",
    "start": "3688090",
    "end": "3697390"
  },
  {
    "text": "so in summary measure everything as long as you put that if enabled thing on then",
    "start": "3697390",
    "end": "3703150"
  },
  {
    "text": "you can always turn it on and off at the point where you're listening to it so it",
    "start": "3703150",
    "end": "3708190"
  },
  {
    "text": "doesn't hurt you apart from having to type an extra couple of lines of code to go that might take 10 milliseconds I'll",
    "start": "3708190",
    "end": "3716109"
  },
  {
    "text": "measure that that might happen a lot will count how often that's happening write it into a time series database",
    "start": "3716109",
    "end": "3722830"
  },
  {
    "text": "like influx or Prometheus you can also get things that do time series into sequel server or Postgres equal Postgres",
    "start": "3722830",
    "end": "3729400"
  },
  {
    "text": "equal actually has time scale DB which is an extension and microsoft are even",
    "start": "3729400",
    "end": "3735760"
  },
  {
    "text": "deploying it into a zero database for Postgres equal now so that's quite cool I did have one person go can you write",
    "start": "3735760",
    "end": "3743770"
  },
  {
    "text": "it to db2 and I'm like you can write it to db2 I'm not sure what you're going to",
    "start": "3743770",
    "end": "3748869"
  },
  {
    "text": "do with it once it's in there but you can write it today use graph honor for dashboards I didn't have time to show",
    "start": "3748869",
    "end": "3756130"
  },
  {
    "text": "graph honor but seriously that's what everybody uses it's awesome it makes you",
    "start": "3756130",
    "end": "3761980"
  },
  {
    "text": "look like a total pro and if you use diagonally it does though seriously you",
    "start": "3761980",
    "end": "3767980"
  },
  {
    "text": "just gotta go I just do that oh wow that looks amazing look guys away the dashboard taking the",
    "start": "3767980",
    "end": "3773859"
  },
  {
    "text": "rest of the week off and yeah use diagnostic sauce listen to diagnostic",
    "start": "3773859",
    "end": "3779109"
  },
  {
    "text": "sauce because you never know who's writing into it apart from these three I'm hoping that more people and WPF and",
    "start": "3779109",
    "end": "3785230"
  },
  {
    "text": "you know pull requests the stuff that's not using it and write your own things",
    "start": "3785230",
    "end": "3790720"
  },
  {
    "text": "the diagnostic source and go to the other teams in your organization and say hey diagnostic we",
    "start": "3790720",
    "end": "3797869"
  },
  {
    "text": "can use diagnostic source we can all use diagnostic source and we can all agree on it and then we can use those metrics",
    "start": "3797869",
    "end": "3804289"
  },
  {
    "text": "or not use them as and when we see fees we see fit so that's it this is the",
    "start": "3804289",
    "end": "3809690"
  },
  {
    "text": "slide you want to get a picture of I'll do a git push literally as soon as you've all talked and you'll be able to",
    "start": "3809690",
    "end": "3816170"
  },
  {
    "text": "grab that code including that weird nullable struct thing thanks very much for coming",
    "start": "3816170",
    "end": "3821329"
  },
  {
    "text": "enjoy the rest of the day come back for the party later we're doing more monty python things and all sorts of math",
    "start": "3821329",
    "end": "3827210"
  },
  {
    "text": "stuff and I'll be back on here at the end of the day tomorrow to talk about the future thanks very much",
    "start": "3827210",
    "end": "3834370"
  },
  {
    "text": "[Applause]",
    "start": "3834370",
    "end": "3839900"
  },
  {
    "text": "[Music]",
    "start": "3842280",
    "end": "3864570"
  },
  {
    "text": "[Music]",
    "start": "3867660",
    "end": "3872929"
  }
]