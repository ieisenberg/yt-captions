[
  {
    "text": "thank you so much for coming sorry about this room layout obviously everyone's sitting on the edges and I'm River one",
    "start": "10270",
    "end": "17920"
  },
  {
    "text": "dresser I'm left-handed I apologize to you folks if I end up being biased to that side but I suspect we'll see how it",
    "start": "17920",
    "end": "24250"
  },
  {
    "text": "turns out so I'm gonna talk today about",
    "start": "24250",
    "end": "29500"
  },
  {
    "text": "kubernetes we'll go a little bit deeper than some of the kind of intro topic so you may have already seen so my name is",
    "start": "29500",
    "end": "35350"
  },
  {
    "text": "Shahid Iqbal I'm a freelance hands-on consultant working in kind of Dorne Asia",
    "start": "35350",
    "end": "40600"
  },
  {
    "text": "and kubernetes projects I'm a developer have been for more than ten years and I'm also a Microsoft MVP I based in the",
    "start": "40600",
    "end": "48730"
  },
  {
    "text": "UK although I work globally I was based out here a few years ago actually and I really enjoyed my time so I'm really",
    "start": "48730",
    "end": "54580"
  },
  {
    "text": "pleased to be back speaking here as well and I run a meet-up in the UK and always",
    "start": "54580",
    "end": "59920"
  },
  {
    "text": "take an opportunity when I'm speaking to a group of people to encourage them to get into speaking I did this about two years ago and I've loved it ever since",
    "start": "59920",
    "end": "66240"
  },
  {
    "text": "so start with a little lightning talk if you want just contact the local meetups it's a really active meet-up teaming",
    "start": "66240",
    "end": "71799"
  },
  {
    "text": "over here as well highly encouraged a main reason for these slides really on my contact details we'll see how we get",
    "start": "71799",
    "end": "78609"
  },
  {
    "text": "on with time for questions if I don't get to your questions today grab me I'm I'm around for the rest of",
    "start": "78609",
    "end": "84670"
  },
  {
    "text": "the conference but if not feel free to ping me on Twitter LinkedIn email wherever you want so what we're going to",
    "start": "84670",
    "end": "91630"
  },
  {
    "text": "cover today broadly speaking we're going to talk about scheduling we'll talk a",
    "start": "91630",
    "end": "98439"
  },
  {
    "text": "little bit about admission controllers and I'll touch on how we can extend",
    "start": "98439",
    "end": "104380"
  },
  {
    "text": "community some of the options then we'll do a little bit of a shift and I'll talk a little bit about scaling and in",
    "start": "104380",
    "end": "109749"
  },
  {
    "text": "particular I want to cover two topics one round virtual node and one around Kida or kada as always with cloud native",
    "start": "109749",
    "end": "116770"
  },
  {
    "text": "projects we always argue about how we pronounce things there's another one and hopefully I'll have some demos for you",
    "start": "116770",
    "end": "122020"
  },
  {
    "text": "along the way so I'm not going to cover I'm not going to cover the fundamentals",
    "start": "122020",
    "end": "127179"
  },
  {
    "text": "of kubernetes my assumption is that everyone in this room has a good grasp of the basics as the synopsis",
    "start": "127179",
    "end": "133840"
  },
  {
    "text": "kind of said so you know what pods are you know deployments are you know services etc etc I'm also not going to",
    "start": "133840",
    "end": "141670"
  },
  {
    "text": "deep dive into how we create customer resources operators again that's quite a deep topic in itself and is actually probably",
    "start": "141670",
    "end": "148720"
  },
  {
    "text": "best suited for a workshop final disclaimer is that you know the",
    "start": "148720",
    "end": "155860"
  },
  {
    "text": "definition advanced is very subjective my idea advanced may not match your idea or advance so if having seen that list",
    "start": "155860",
    "end": "163720"
  },
  {
    "text": "of topics if you think you know those topics really well please feel free to find another session I won't be offended",
    "start": "163720",
    "end": "169330"
  },
  {
    "text": "at all otherwise stick with me even if there's something you know initially hopefully there'll be something else",
    "start": "169330",
    "end": "175030"
  },
  {
    "text": "that you haven't seen before before I start we useful just to get rid",
    "start": "175030",
    "end": "180220"
  },
  {
    "text": "of the room so how many people here are developers working with communities okay",
    "start": "180220",
    "end": "185530"
  },
  {
    "text": "I would say probably about half operators people who are responsible for 18 communities you can be one you can be",
    "start": "185530",
    "end": "191560"
  },
  {
    "text": "both well no nobody here is responsible for operating the clusters Wow okay so",
    "start": "191560",
    "end": "200379"
  },
  {
    "text": "what did the other half the room do security architects okay cool",
    "start": "200379",
    "end": "209639"
  },
  {
    "text": "anybody brand-new to kubernetes okay I don't know if you heard my disclaimer at",
    "start": "209639",
    "end": "215680"
  },
  {
    "text": "the start but great just want to make sure",
    "start": "215680",
    "end": "222209"
  },
  {
    "text": "so pod scheduling when we look at the",
    "start": "222209",
    "end": "227709"
  },
  {
    "text": "control plane it's comprised of a number of components we have the API server we",
    "start": "227709",
    "end": "233470"
  },
  {
    "text": "have this scheduler controller manager and cloud controller manager and it's CD and when I do an intro talk I I",
    "start": "233470",
    "end": "239919"
  },
  {
    "text": "basically say the schedulers job is to find some way to run your containers on pods today we'll dive a little bit",
    "start": "239919",
    "end": "246639"
  },
  {
    "text": "deeper into what that actually means at a high level when we talk about scheduling pods what does the schedule",
    "start": "246639",
    "end": "253480"
  },
  {
    "text": "actually do essentially when you create a pod the scheduler detects that there's no",
    "start": "253480",
    "end": "260169"
  },
  {
    "text": "node assigned to that pod and it simply assigns a node now simply is misleading",
    "start": "260169",
    "end": "267099"
  },
  {
    "text": "here the scheduler has a very complex algorithm that it chooses a number of",
    "start": "267099",
    "end": "272830"
  },
  {
    "text": "parameters to decide where to schedule your pods but more people who come to communities certainly",
    "start": "272830",
    "end": "280480"
  },
  {
    "text": "in the initial phases don't really need to know anything more they just need to know the scheduler does its job and",
    "start": "280480",
    "end": "286480"
  },
  {
    "text": "generally does a pretty good job of that but sometimes you need a little bit more",
    "start": "286480",
    "end": "291490"
  },
  {
    "text": "control why why do you need this control well you might have a cluster that's got",
    "start": "291490",
    "end": "297820"
  },
  {
    "text": "some specialized hardware or software running in it and you want to make sure",
    "start": "297820",
    "end": "303040"
  },
  {
    "text": "that where clothes are using that particular hardware software similarly",
    "start": "303040",
    "end": "308440"
  },
  {
    "text": "you may have multi-talented teams you may need to allocate certain resources to certain teams you may have regulatory",
    "start": "308440",
    "end": "317680"
  },
  {
    "text": "requirements that say certain workloads must run on certain machines or with",
    "start": "317680",
    "end": "323950"
  },
  {
    "text": "certain software on those machines alternatively this may be an application",
    "start": "323950",
    "end": "330610"
  },
  {
    "text": "architecture issue you may want to ensure that certain components within your app architecture are located",
    "start": "330610",
    "end": "336670"
  },
  {
    "text": "together or probably more commonly actually you'll want certain components in the architecture to not be located",
    "start": "336670",
    "end": "343270"
  },
  {
    "text": "together I will will talk a little bit more about that in a second when we have",
    "start": "343270",
    "end": "350230"
  },
  {
    "text": "a think about the options we have for scheduling we've got a number of these and what we'll do is we'll talk about",
    "start": "350230",
    "end": "356260"
  },
  {
    "text": "each of these one by one it's a node selector this is the the",
    "start": "356260",
    "end": "363190"
  },
  {
    "text": "most basic approach for telling the scheduler where you want your pods to run you simply add a node selector",
    "start": "363190",
    "end": "370720"
  },
  {
    "text": "element into your pod spec you give it a label a key value pair and that",
    "start": "370720",
    "end": "379960"
  },
  {
    "text": "scheduler will find a node that has that label on it and schedule a pod there now",
    "start": "379960",
    "end": "385300"
  },
  {
    "text": "there are a number of labels already added to nodes so this example here this is a IKS node and we can see we've got",
    "start": "385300",
    "end": "393070"
  },
  {
    "text": "some know we've got some labels around the VM type here the region it's in the",
    "start": "393070",
    "end": "398380"
  },
  {
    "text": "zone it's in and something to do with the storage so these are added in and we could specifically say if we wanted our",
    "start": "398380",
    "end": "404920"
  },
  {
    "text": "workloads to be run on a particular VM we would target this label here",
    "start": "404920",
    "end": "410630"
  },
  {
    "text": "now if that label isn't sufficient you can actually add your own custom labels",
    "start": "410630",
    "end": "415760"
  },
  {
    "text": "and you simply do that by doing Cube control and actually I should point out",
    "start": "415760",
    "end": "420840"
  },
  {
    "text": "in my demos and in mice screenshots whenever you see Kay that's me I've",
    "start": "420840",
    "end": "425970"
  },
  {
    "text": "aliased cube control to K because one we don't have to argue about whether there's cube controller cube cuddle or coop control and two I don't want to",
    "start": "425970",
    "end": "433530"
  },
  {
    "text": "type Q control every time so K is just much easier so if there's nothing else you take away today just alias cube",
    "start": "433530",
    "end": "439920"
  },
  {
    "text": "control to K and then hopefully that's that's enough so what I do i do cube",
    "start": "439920",
    "end": "445650"
  },
  {
    "text": "control label node give it the name of the node and then I give it my key value pair now label the node node selector",
    "start": "445650",
    "end": "454470"
  },
  {
    "text": "has some issues it's matching basically on an exact match on the key value pair",
    "start": "454470",
    "end": "462500"
  },
  {
    "text": "another problem node selectors is if there is if if you specify an iPod note",
    "start": "462500",
    "end": "468720"
  },
  {
    "text": "selector sorry in your pod spec and there is in a node with a matching label your pod won't get scheduled they'll be",
    "start": "468720",
    "end": "475500"
  },
  {
    "text": "sitting in pending forever so with this in mind this is where node affinity in",
    "start": "475500",
    "end": "481380"
  },
  {
    "text": "ante Finity comes in so similar to node selector they allow you to pods to",
    "start": "481380",
    "end": "486930"
  },
  {
    "text": "decide which you know to run on but now they have a little bit more flexibility so rather than matching on a precise",
    "start": "486930",
    "end": "493800"
  },
  {
    "text": "label you can now have some conditions so you can specify things like it's in a",
    "start": "493800",
    "end": "499410"
  },
  {
    "text": "list of lists of letter values it's greater than less than whatever",
    "start": "499410",
    "end": "505940"
  },
  {
    "text": "crucially you can also now specify how demanding you are about the presence on",
    "start": "505940",
    "end": "513419"
  },
  {
    "text": "that label so how do we do this when we",
    "start": "513419",
    "end": "520050"
  },
  {
    "text": "talk about specifying the demand we use a rather wordy parameter called require",
    "start": "520050",
    "end": "525089"
  },
  {
    "text": "doing scheduling ignoring execution what this is saying is this label must exist",
    "start": "525089",
    "end": "531300"
  },
  {
    "text": "on the node otherwise if it doesn't don't schedule a so this is essentially the same behavior as a note selector but",
    "start": "531300",
    "end": "539580"
  },
  {
    "text": "now we have this option of having a software requirement so now we're telling the scheduler that please use a node with this",
    "start": "539580",
    "end": "545880"
  },
  {
    "text": "particular label matching those conditions but if you don't find one don't worry run it somewhere else now if",
    "start": "545880",
    "end": "555240"
  },
  {
    "text": "you're looking at this you think you what's all of this ignore doing execution that's pretty redundant well there is another option",
    "start": "555240",
    "end": "561540"
  },
  {
    "text": "it's not been implemented this option says required during scheduling required",
    "start": "561540",
    "end": "567120"
  },
  {
    "text": "during execution so the required doing scheduling is in the scheduling phase",
    "start": "567120",
    "end": "572370"
  },
  {
    "text": "whereas during execution suggest that when a part is already running you may want to take an effect",
    "start": "572370",
    "end": "578520"
  },
  {
    "text": "now this is not been infinitely implemented and it probably won't be because there's other ways of doing this",
    "start": "578520",
    "end": "583589"
  },
  {
    "text": "now which we'll touch on so how do we do no Definity now in our pod spec we have",
    "start": "583589",
    "end": "590850"
  },
  {
    "text": "the affinity and here's that required during scheduling in or during execution and then here's our selector so now this",
    "start": "590850",
    "end": "597870"
  },
  {
    "text": "time we're saying for example we want the instance typed to be a particular instance type here ups even though I've",
    "start": "597870",
    "end": "603990"
  },
  {
    "text": "said an in and this should be this could be a list I've just specify the one instance type ciarán I'm asking the",
    "start": "603990",
    "end": "609839"
  },
  {
    "text": "scheduler to use a particular VM type in my cluster to run my workloads this is",
    "start": "609839",
    "end": "616350"
  },
  {
    "text": "the hard requirement on the software requirement the preferred we have this additional parameter called weight on",
    "start": "616350",
    "end": "622470"
  },
  {
    "text": "what the weight is doing is telling the scheduler that right there may not be a node with the requisite labels on it but",
    "start": "622470",
    "end": "630690"
  },
  {
    "text": "how strongly do I want you to prefer one over the other so this is just like a waiting to make it use a particular",
    "start": "630690",
    "end": "637520"
  },
  {
    "text": "label so nodes lectures they solve all",
    "start": "637520",
    "end": "643470"
  },
  {
    "text": "the problems I know not quite so when the problems with node selectors an",
    "start": "643470",
    "end": "648990"
  },
  {
    "text": "affinity is they don't prevent certain nodes from having workloads deploy to",
    "start": "648990",
    "end": "655740"
  },
  {
    "text": "them the two options node selectors an affinity are used by the pods to say",
    "start": "655740",
    "end": "662520"
  },
  {
    "text": "which node I want to go on but nodes at the moment have no say in the matter if you want you to prevent a particular",
    "start": "662520",
    "end": "669510"
  },
  {
    "text": "node from being deployed - you'd have to update every deployment in your cluster and add a node selector or add in node",
    "start": "669510",
    "end": "676380"
  },
  {
    "text": "ante affinity this is where tanks and toleration come",
    "start": "676380",
    "end": "681990"
  },
  {
    "text": "in so taints and toleration z' taints allow you allow a node to repel pods so",
    "start": "681990",
    "end": "689399"
  },
  {
    "text": "it says do not deploy anything on to me unless that pod tolerates this taint",
    "start": "689399",
    "end": "698750"
  },
  {
    "text": "these taints are comprised of three parameters a key a value and now",
    "start": "699079",
    "end": "704610"
  },
  {
    "text": "additionally this no this effect parameter and the effect can be no scheduled prefer no schedule and no",
    "start": "704610",
    "end": "712980"
  },
  {
    "text": "execute so this is where Tencent orations differ",
    "start": "712980",
    "end": "719970"
  },
  {
    "text": "from the selectors and affinity i've talked about so far because existing running pods can be evicted from a node",
    "start": "719970",
    "end": "727440"
  },
  {
    "text": "if they don't if you add a taint to a node and you don't tolerate it and",
    "start": "727440",
    "end": "733850"
  },
  {
    "text": "kubernetes actually add some of these tends to nodes in certain conditions so for example when a node is running out",
    "start": "733850",
    "end": "740040"
  },
  {
    "text": "of memory kubernetes will taint it to say it's running out of memory so me",
    "start": "740040",
    "end": "745170"
  },
  {
    "text": "disk space inserts several other issues so how do we tend to node not too",
    "start": "745170",
    "end": "752880"
  },
  {
    "text": "difficult cube control tank node give it the name of the node and now we doing the key the value and additionally this",
    "start": "752880",
    "end": "759300"
  },
  {
    "text": "effect it's a no schedule if I take a",
    "start": "759300",
    "end": "764399"
  },
  {
    "text": "look at a deployment without tolerating it so this is a three node cluster and I",
    "start": "764399",
    "end": "770370"
  },
  {
    "text": "haven't put any kind of toleration in my pods that we can see that I'm running to",
    "start": "770370",
    "end": "777089"
  },
  {
    "text": "two of those are running on one node and one is running on one and nothing's running a node zero which you normally",
    "start": "777089",
    "end": "782490"
  },
  {
    "text": "would expect if I now add a toleration to this pod spec system I'm saying I'm",
    "start": "782490",
    "end": "792689"
  },
  {
    "text": "tolerating that particular value this toleration seconds is interesting",
    "start": "792689",
    "end": "799110"
  },
  {
    "text": "because what toleration seconds does is it says if a taint is added to a node I",
    "start": "799110",
    "end": "804709"
  },
  {
    "text": "will wait that amount of seconds before I kick off this pod",
    "start": "804709",
    "end": "810870"
  },
  {
    "text": "what that lets you do is let's say you have a transient issue a transient",
    "start": "810870",
    "end": "816210"
  },
  {
    "text": "memory issue for example with the Toleration there it means that the pod won't get kicked off immediately it'll",
    "start": "816210",
    "end": "822450"
  },
  {
    "text": "wait for that amount of time if the issue results itself then he won't get kicked off once I've added that",
    "start": "822450",
    "end": "830550"
  },
  {
    "text": "toleration when I schedule again so I've read redeployed this you can see now I'm",
    "start": "830550",
    "end": "836190"
  },
  {
    "text": "getting what I would have expected which is one deployment per node which is the classic way it usually would default to",
    "start": "836190",
    "end": "843330"
  },
  {
    "text": "if I mean there's lots of other reasons why that wouldn't happen but by default that's usually what you get so let's",
    "start": "843330",
    "end": "849210"
  },
  {
    "text": "quickly summarize canes versus no Definity because they can be live it confusing so node affinity any pod can",
    "start": "849210",
    "end": "857190"
  },
  {
    "text": "be scheduled unless the pod explicitly says it shouldn't go on a node so this is an T Finity the node has knows no say",
    "start": "857190",
    "end": "865380"
  },
  {
    "text": "in the matter whatsoever whereas tanks allow nodes to repel all pods unless they explicitly",
    "start": "865380",
    "end": "871880"
  },
  {
    "text": "tolerate the taint and I said the other key difference is existing running pods",
    "start": "871880",
    "end": "877500"
  },
  {
    "text": "can also be kicked off evicted as always",
    "start": "877500",
    "end": "882780"
  },
  {
    "text": "with these things there are nuances and there are lots of subtle details if you're looking into this I'd recommend",
    "start": "882780",
    "end": "888300"
  },
  {
    "text": "having a look at the docs because there's some new things coming in this area as well actually and as I said the",
    "start": "888300",
    "end": "896460"
  },
  {
    "text": "taints they prevent kind of casual scheduling on to certain nodes and these nodes may be things I have limited",
    "start": "896460",
    "end": "902480"
  },
  {
    "text": "expensive resources a classical example might be a server with GPUs on it you",
    "start": "902480",
    "end": "907890"
  },
  {
    "text": "don't want anything just running on that GPU so you only want those workloads that need to use the GPU and we'll see",
    "start": "907890",
    "end": "914490"
  },
  {
    "text": "how these chains come into effect much later on what I'm talking about virtual nodes so far we've been talking about",
    "start": "914490",
    "end": "924750"
  },
  {
    "text": "pods being attracted to nodes there's another scheduling influence we can have",
    "start": "924750",
    "end": "931200"
  },
  {
    "text": "which is inter pod affinity this is deciding where to run a pod based on",
    "start": "931200",
    "end": "936690"
  },
  {
    "text": "what else is running on that particular node okay",
    "start": "936690",
    "end": "942529"
  },
  {
    "text": "so this allows you to do things like ensure that certain components always",
    "start": "942529",
    "end": "947599"
  },
  {
    "text": "run alongside each other so for example you might have a cash component and a",
    "start": "947599",
    "end": "952669"
  },
  {
    "text": "web component and you want to ensure that they always live on the same note",
    "start": "952669",
    "end": "958209"
  },
  {
    "text": "as I said earlier more commonly you want to ensure that certain components don't run together so for example you may want",
    "start": "959229",
    "end": "965929"
  },
  {
    "text": "to ensure that the multiple replicas of your application are spread across zones",
    "start": "965929",
    "end": "970989"
  },
  {
    "text": "and this way if you lose the zone if you lose the node you don't lose you don't",
    "start": "970989",
    "end": "977449"
  },
  {
    "text": "have any downtime so pod affinity has",
    "start": "977449",
    "end": "982789"
  },
  {
    "text": "similar constructs for indicating the strictness so won't lay by that point",
    "start": "982789",
    "end": "989499"
  },
  {
    "text": "you have this additional parameter called topology key and the topology key",
    "start": "989499",
    "end": "995509"
  },
  {
    "text": "is a little bit confusing so hopefully we'll clarify as we go along but this reference is a node label and it says",
    "start": "995509",
    "end": "1002409"
  },
  {
    "text": "what level and I'm using the air quotes vary delivery here what level of the infrastructure do I use as a separation",
    "start": "1002409",
    "end": "1009999"
  },
  {
    "text": "and this could be something like hostname this could be volt domain this could be availability zone let's try and",
    "start": "1009999",
    "end": "1017709"
  },
  {
    "text": "make this a little bit clearer so here's our is my cluster I've got four nodes in",
    "start": "1017709",
    "end": "1023379"
  },
  {
    "text": "there if I look at the labels for hostname I have node 1 node 2 node 3 node 4 when the topology Keys hostname",
    "start": "1023379",
    "end": "1031538"
  },
  {
    "text": "it's going to treat each one of these as separate nodes ignore the yellow color",
    "start": "1031539",
    "end": "1036788"
  },
  {
    "text": "that's that shouldn't be there the orange color so it's gonna treat each one of these nodes as a different zone",
    "start": "1036789",
    "end": "1044199"
  },
  {
    "text": "if you like and it will spread the deployments across any one of these if I",
    "start": "1044199",
    "end": "1050049"
  },
  {
    "text": "chose the zone and this could be an existing label or custom label I've added now that topology key will mean",
    "start": "1050049",
    "end": "1058750"
  },
  {
    "text": "it'll treat the cluster as if it's two blocks of service and we'll pick one of",
    "start": "1058750",
    "end": "1064119"
  },
  {
    "text": "those two servers to deploy two strands",
    "start": "1064119",
    "end": "1069250"
  },
  {
    "text": "have a quick look at what the pod affinity looks like again it's not dissimilar to what you've seen already",
    "start": "1069250",
    "end": "1074590"
  },
  {
    "text": "this time in support of finish see same much-much expressions we've",
    "start": "1074590",
    "end": "1079600"
  },
  {
    "text": "seen before and here's that topology key so this is just a label from your node",
    "start": "1079600",
    "end": "1087750"
  },
  {
    "text": "so let's take an example of this so I've got a application here which has got a web and a cash component about four",
    "start": "1088290",
    "end": "1094720"
  },
  {
    "text": "replicas and I want to ensure that these are spread out evenly ads across my cluster but I want one of each on each",
    "start": "1094720",
    "end": "1102040"
  },
  {
    "text": "node now as I said the scheduler may do this anyway but you you might ensure it",
    "start": "1102040",
    "end": "1107290"
  },
  {
    "text": "does it so what we do is we set pod affinity for the cache so this is the",
    "start": "1107290",
    "end": "1113530"
  },
  {
    "text": "web this is the pod spec for the web i've pseudocode if you like and what I'm saying here is I want the cache",
    "start": "1113530",
    "end": "1120010"
  },
  {
    "text": "I want my web component to have affinity with the cache component and here I'm",
    "start": "1120010",
    "end": "1125860"
  },
  {
    "text": "saying is preferred because the cache component may not be deployed yet so if I set as a hard requirement I'm a",
    "start": "1125860",
    "end": "1131740"
  },
  {
    "text": "deadlock myself I may have a dependency where I have to deploy one before the other and because I'm using the topology",
    "start": "1131740",
    "end": "1139090"
  },
  {
    "text": "key of host name and I've got four instances it's going to spread those",
    "start": "1139090",
    "end": "1144990"
  },
  {
    "text": "pods across the four instances now if we take a look at the pod spec for the",
    "start": "1144990",
    "end": "1151570"
  },
  {
    "text": "cache this time we have pod affinity for the web and again we've got preferred",
    "start": "1151570",
    "end": "1157090"
  },
  {
    "text": "because we just don't know which order we may deploy in but we have pod ante Finity to itself so it's going to repel",
    "start": "1157090",
    "end": "1163570"
  },
  {
    "text": "itself and again we're using the hostname as the topology key so now we",
    "start": "1163570",
    "end": "1169090"
  },
  {
    "text": "get that behavior we get one of each on each of the nodes we take an example now",
    "start": "1169090",
    "end": "1175300"
  },
  {
    "text": "with the zones so here I've got a cache and a web and in this example I don't",
    "start": "1175300",
    "end": "1180460"
  },
  {
    "text": "care if they run together or not I just want to make sure that each one is in an independent zone because these zones are",
    "start": "1180460",
    "end": "1186310"
  },
  {
    "text": "failure availability zones if you like so now I have as we saw before pod",
    "start": "1186310",
    "end": "1194140"
  },
  {
    "text": "affinity anti-fan you see the key thing now is that apology key is the zone so look in the zone label here so now it",
    "start": "1194140",
    "end": "1200350"
  },
  {
    "text": "will pick one of these two notes incidentally I can combine other selectors with this so I can use this",
    "start": "1200350",
    "end": "1207220"
  },
  {
    "text": "plus other selectors to influence each one within the zone so you see it gets quite complicated if you really",
    "start": "1207220",
    "end": "1213229"
  },
  {
    "text": "want to but essentially it's gonna ensure that there's one one component in",
    "start": "1213229",
    "end": "1218389"
  },
  {
    "text": "each of the two zones and then similarly for the cash it's gonna do the same again we're using the topology key of",
    "start": "1218389",
    "end": "1224419"
  },
  {
    "text": "zone and in this animation I've put them together but it doesn't necessarily mean they would go together unless I added",
    "start": "1224419",
    "end": "1230720"
  },
  {
    "text": "and I'm sorry actually the would cause of the affinity but yeah okay",
    "start": "1230720",
    "end": "1238450"
  },
  {
    "text": "it's very quickly touch on the pod spec it's a lot yeah mo which I'm sure by the",
    "start": "1238450",
    "end": "1244159"
  },
  {
    "text": "end of today normally it really cares about when you're when you're going to work on this you look it up but here's",
    "start": "1244159",
    "end": "1249559"
  },
  {
    "text": "the pod anti Finity so here's a hard requirement and this is the web front-end and it's basically saying",
    "start": "1249559",
    "end": "1255739"
  },
  {
    "text": "don't you know repel ourselves an Tiffany T to ourselves at the hostname",
    "start": "1255739",
    "end": "1261529"
  },
  {
    "text": "level and then here's our kind of preferred to the cache and then the",
    "start": "1261529",
    "end": "1267019"
  },
  {
    "text": "cache is there in the reverse is probably no point neighboring the point but you can see and if we have a quick",
    "start": "1267019",
    "end": "1276019"
  },
  {
    "text": "look at that example I showed you when I deployed it to my cluster and we can see",
    "start": "1276019",
    "end": "1281299"
  },
  {
    "text": "here I've got cash in web cache and web cache and web and each one is spread across in this case I use the host name",
    "start": "1281299",
    "end": "1287389"
  },
  {
    "text": "across the host names so I've got that behavior expected so as we've seen",
    "start": "1287389",
    "end": "1294830"
  },
  {
    "text": "there's quite a few options for having really fine-grained control over how we schedule what if none of these suffice",
    "start": "1294830",
    "end": "1302229"
  },
  {
    "text": "you have what I call the nuclear option so you can write a custom scheduler so",
    "start": "1302229",
    "end": "1307609"
  },
  {
    "text": "scheduler that uses whatever custom logic you want to decide where the pods",
    "start": "1307609",
    "end": "1313879"
  },
  {
    "text": "go the schedule can be written in any language there's an example on the on the web where somebody's written in bash",
    "start": "1313879",
    "end": "1320080"
  },
  {
    "text": "probably not production ready it needs access to the API server so that's",
    "start": "1320080",
    "end": "1327559"
  },
  {
    "text": "important to bear in mind and once you've got the scheduler to use it's actually Privia now in a pod spec we",
    "start": "1327559",
    "end": "1335239"
  },
  {
    "text": "just say schedule name scheduler name and we give it the name of the scheduler that's running in our cluster so that's",
    "start": "1335239",
    "end": "1341359"
  },
  {
    "text": "the deployment name",
    "start": "1341359",
    "end": "1344109"
  },
  {
    "text": "so that's that's scheduling and I think you see that you can see that there's",
    "start": "1347380",
    "end": "1353000"
  },
  {
    "text": "quite a lot of how they what we want to extend kubernetes our control it a bit more than the scheduling there's other",
    "start": "1353000",
    "end": "1359659"
  },
  {
    "text": "aspects we may want to take control of an example of this might be we want to",
    "start": "1359659",
    "end": "1364820"
  },
  {
    "text": "have control over the resources that are created we may want to apply custom",
    "start": "1364820",
    "end": "1369919"
  },
  {
    "text": "policies that say you must have you know for example every deployment must have some labels on it which team owns it or",
    "start": "1369919",
    "end": "1375830"
  },
  {
    "text": "who to call if there's a problem things like that you may want to prevent",
    "start": "1375830",
    "end": "1381799"
  },
  {
    "text": "certain resources from being created the typical example here is load balancer services people don't what load balancer",
    "start": "1381799",
    "end": "1387110"
  },
  {
    "text": "services created because they've got some kind of inverse solution already",
    "start": "1387110",
    "end": "1391840"
  },
  {
    "text": "you may want to inject additional logic transparently into your resources so",
    "start": "1392350",
    "end": "1397669"
  },
  {
    "text": "rather than having everyone update their deployments you may want to have some logic that adds maybe a sidecar",
    "start": "1397669",
    "end": "1404090"
  },
  {
    "text": "container into a deployment whenever that resource is created one of the ways",
    "start": "1404090",
    "end": "1412730"
  },
  {
    "text": "you can do this is by using admission controllers so admission controllers as",
    "start": "1412730",
    "end": "1418940"
  },
  {
    "text": "I say essentially code which intercepts the API requests before they persisted and lets you do some things to them",
    "start": "1418940",
    "end": "1425889"
  },
  {
    "text": "there are three types of controllers can be validating controllers can be",
    "start": "1425889",
    "end": "1432200"
  },
  {
    "text": "mutating controllers and some controllers can do both these",
    "start": "1432200",
    "end": "1439580"
  },
  {
    "text": "controllers are enabled or disabled using the cube API server so this is a",
    "start": "1439580",
    "end": "1444710"
  },
  {
    "text": "component within the control plane if you went to Josh's talk yesterday you would have seen him talk about the cube",
    "start": "1444710",
    "end": "1450440"
  },
  {
    "text": "API server and actually all of the control plane components problem we keep",
    "start": "1450440",
    "end": "1456590"
  },
  {
    "text": "IVR servers you have limited options when you're using a manage to communities provider so things like a que se KSG ke the control plan is",
    "start": "1456590",
    "end": "1463940"
  },
  {
    "text": "managed for you so you don't have many options in terms of controlling what runs the other problem with admission",
    "start": "1463940",
    "end": "1470990"
  },
  {
    "text": "controllers is they're compiled into the API server binary so if you want your own admission controller",
    "start": "1470990",
    "end": "1476990"
  },
  {
    "text": "you might need to write some gold code might need to fork kubernetes",
    "start": "1476990",
    "end": "1482450"
  },
  {
    "text": "and then you may need to compile in running yourself good luck with anyone who wants to for kubernetes and runni",
    "start": "1482450",
    "end": "1487940"
  },
  {
    "text": "themselves there are a number of",
    "start": "1487940",
    "end": "1495040"
  },
  {
    "text": "admission control is really built in and you have to find out with your specific cloud provider which ones are enabled",
    "start": "1495040",
    "end": "1501800"
  },
  {
    "text": "most of the cloud providers have enabled the sensible admission control is there",
    "start": "1501800",
    "end": "1507920"
  },
  {
    "text": "are two I want to focus on but before I do let's have a look at the lifecycle of an API request and see where these",
    "start": "1507920",
    "end": "1514520"
  },
  {
    "text": "admission controllers come in so I make a request whether I'm using cube control",
    "start": "1514520",
    "end": "1520460"
  },
  {
    "text": "whether I'm using the UI doesn't really matter that hits the API server and the HTTP handler so firstly that goes",
    "start": "1520460",
    "end": "1528230"
  },
  {
    "text": "through some authentication and authorization logic then it hits easy mutating admission controllers so these",
    "start": "1528230",
    "end": "1535550"
  },
  {
    "text": "are the controllers which are changing the requests they might be modifying the existing requests they may be adding",
    "start": "1535550",
    "end": "1542000"
  },
  {
    "text": "some additional resources to the requests so for example you might be asking for a one container they may be",
    "start": "1542000",
    "end": "1548090"
  },
  {
    "text": "adding another container into that pod once the mutation controllers run we do",
    "start": "1548090",
    "end": "1554270"
  },
  {
    "text": "some schema validation of the objects then the validating admission control is",
    "start": "1554270",
    "end": "1560270"
  },
  {
    "text": "run and the validating ones run after the mutating because otherwise you could",
    "start": "1560270",
    "end": "1565970"
  },
  {
    "text": "mutate after you validated and become invalid and find me that request is",
    "start": "1565970",
    "end": "1571940"
  },
  {
    "text": "persisted in net CD and at this point other custom controllers other controllers kick in so if this was a",
    "start": "1571940",
    "end": "1577910"
  },
  {
    "text": "deployment the deployment controller kicks in detects that persisted change and starts doing his thing within these",
    "start": "1577910",
    "end": "1587420"
  },
  {
    "text": "two controllers there's two special kind of controllers and they've got fantastic names mutating admission webhook",
    "start": "1587420",
    "end": "1595880"
  },
  {
    "text": "controllers and validating admission Webber webhook controllers try saying",
    "start": "1595880",
    "end": "1602420"
  },
  {
    "text": "that five times in a row so these special admission web hooks allow you",
    "start": "1602420",
    "end": "1609530"
  },
  {
    "text": "our best so the mutating one as the name suggests allows you to mutate resources and the",
    "start": "1609530",
    "end": "1615679"
  },
  {
    "text": "valid has validating one allows you to block the creation of resources if you deem it to be invalid these controllers",
    "start": "1615679",
    "end": "1626540"
  },
  {
    "text": "they invoke a HTTP call back they're using web standard web hooks industry",
    "start": "1626540",
    "end": "1631850"
  },
  {
    "text": "standard and the nice thing is this logic doesn't need to be compiled into the API server in fact the logic for",
    "start": "1631850",
    "end": "1639799"
  },
  {
    "text": "these doesn't even need to be in the cluster logic for this can live outside of the cluster if you want so let's have",
    "start": "1639799",
    "end": "1648530"
  },
  {
    "text": "a quick look at how we can use these admission web hooks this is where we",
    "start": "1648530",
    "end": "1657080"
  },
  {
    "text": "pray to the demo gods so when we want to",
    "start": "1657080",
    "end": "1663530"
  },
  {
    "text": "set up an admission web hook we need to define a we're validating Wed hook",
    "start": "1663530",
    "end": "1670090"
  },
  {
    "text": "configuration can everyone see there's that big enough I can't see the screen for me it's not clear enough to make",
    "start": "1670090",
    "end": "1676220"
  },
  {
    "text": "your bit bigger so this that's the",
    "start": "1676220",
    "end": "1681290"
  },
  {
    "text": "resource kind we have give it a name the web hooks have to have an have another name which is normally like your company",
    "start": "1681290",
    "end": "1687590"
  },
  {
    "text": "URI then we say which rules we want to apply this web hook to so in this case",
    "start": "1687590",
    "end": "1692840"
  },
  {
    "text": "I've said all API groups v1 on one create of pods obviously you've got",
    "start": "1692840",
    "end": "1698450"
  },
  {
    "text": "quite a flexibility there what what actions and on what resources you want this particular web book to apply to",
    "start": "1698450",
    "end": "1704290"
  },
  {
    "text": "you've got failure policy and that says what do I do if there's an error running",
    "start": "1704290",
    "end": "1709549"
  },
  {
    "text": "the web hook so let's say there's a the Internet's down for example if there's",
    "start": "1709549",
    "end": "1714830"
  },
  {
    "text": "an external connection what do I do the default I think is ignore whereas this",
    "start": "1714830",
    "end": "1719840"
  },
  {
    "text": "says fail so this is going to ensure that if there's ever a technical issue the web book will still found so it",
    "start": "1719840",
    "end": "1725540"
  },
  {
    "text": "means you can't deploy any pods and finally you can see the client config and in this case it's going to invoke",
    "start": "1725540",
    "end": "1732470"
  },
  {
    "text": "another function that's running in the cluster note the CA bundles blank here",
    "start": "1732470",
    "end": "1738830"
  },
  {
    "text": "because this is running on my docker kubernetes cluster you would have to give a certificate if you",
    "start": "1738830",
    "end": "1744560"
  },
  {
    "text": "for real so let's have a look at my Asha functions code so this is a nodejs Asha",
    "start": "1744560",
    "end": "1752870"
  },
  {
    "text": "function and I've taken Kelsie heart",
    "start": "1752870",
    "end": "1757940"
  },
  {
    "text": "ours original version and made it work with Asha functions so the the top bits",
    "start": "1757940",
    "end": "1763010"
  },
  {
    "text": "bog-standard Asha functions we get the request body and we grab the pods back",
    "start": "1763010",
    "end": "1768980"
  },
  {
    "text": "out of there here's the spec for the containers and then we're going to look",
    "start": "1768980",
    "end": "1775580"
  },
  {
    "text": "at the container image what image are we using if the image matches this",
    "start": "1775580",
    "end": "1780620"
  },
  {
    "text": "particular image here we're going to say that's the bad image we're not allowed to use it and we're going to send back a",
    "start": "1780620",
    "end": "1786470"
  },
  {
    "text": "failure response otherwise it's true and we basically send aloud true and we send",
    "start": "1786470",
    "end": "1792410"
  },
  {
    "text": "that response back so that's kind of 45 ish lines for controlling which image we",
    "start": "1792410",
    "end": "1799490"
  },
  {
    "text": "run so first of all I need to ensure that I've deployed wrong just go to this",
    "start": "1799490",
    "end": "1807950"
  },
  {
    "text": "window here so I need to deploy the webhook configuration first let's have a",
    "start": "1807950",
    "end": "1815600"
  },
  {
    "text": "look",
    "start": "1815600",
    "end": "1817809"
  },
  {
    "text": "oops forgot the - if everyone's watching you see and this is why okay so now that",
    "start": "1825300",
    "end": "1832720"
  },
  {
    "text": "configuration is created actually let me show you I've got two pod specs that I'm",
    "start": "1832720",
    "end": "1838390"
  },
  {
    "text": "going to run the first pod spec is using that image I'm not allowed to use and I",
    "start": "1838390",
    "end": "1845800"
  },
  {
    "text": "will show you afterwards s there's no smoke and mirrors this is the one that I'm allowed to use because it's not the",
    "start": "1845800",
    "end": "1850840"
  },
  {
    "text": "v1 okay so I should have an azure functions window open here and I just",
    "start": "1850840",
    "end": "1857170"
  },
  {
    "text": "need to connect to it again because this tends to timeout so this bit is a little bit unpredictable with the connection",
    "start": "1857170",
    "end": "1864040"
  },
  {
    "text": "we'll see the web hook should work hopefully we'll see the logs as well but if not we'll should stay should still",
    "start": "1864040",
    "end": "1869980"
  },
  {
    "text": "see the web hook effect so just wait for that to connect so I'm relying on the",
    "start": "1869980",
    "end": "1876310"
  },
  {
    "text": "conference Wi-Fi I'll give that another two seconds and if it doesn't I'll just",
    "start": "1876310",
    "end": "1882760"
  },
  {
    "text": "show you the actual demo okay it's",
    "start": "1882760",
    "end": "1890530"
  },
  {
    "text": "thinking about it",
    "start": "1890530",
    "end": "1893100"
  },
  {
    "text": "we'll try it may not show the logs there but let's try so now if I apply just",
    "start": "1898480",
    "end": "1908240"
  },
  {
    "text": "remind myself our name is called hello words ok apply - earth",
    "start": "1908240",
    "end": "1915400"
  },
  {
    "text": "I'll try the v1 I moved up a little bit we can see says error from server image",
    "start": "1915400",
    "end": "1923180"
  },
  {
    "text": "not allowed blah blah blah hello world is using a bad image if I come over to",
    "start": "1923180",
    "end": "1929360"
  },
  {
    "text": "the ok yeah this this logs don't always show that is actually invoking that as a",
    "start": "1929360",
    "end": "1936410"
  },
  {
    "text": "function just to show you that it is doing that if I then try and apply the v2 image which see that one is created",
    "start": "1936410",
    "end": "1946250"
  },
  {
    "text": "so find out okay get a pods whoops okay pods ignore the Robie mq that's for",
    "start": "1946250",
    "end": "1951830"
  },
  {
    "text": "another demo but we can see the hello world is there I'm just gonna just gonna delete just delete that for now don't",
    "start": "1951830",
    "end": "1959240"
  },
  {
    "text": "worry there for the next one so that was just a quick demo of the",
    "start": "1959240",
    "end": "1966410"
  },
  {
    "text": "validating webhooks I chose the validating webhooks because they're much",
    "start": "1966410",
    "end": "1971900"
  },
  {
    "text": "easier to do if you want mutating webhooks they're a little bit harder because you need to be able to authenticate and",
    "start": "1971900",
    "end": "1977570"
  },
  {
    "text": "authorize against the server so the example I just showed you there was",
    "start": "1977570",
    "end": "1983750"
  },
  {
    "text": "essentially using these web hooks as a policy you know running some kind of policy please don't do that",
    "start": "1983750",
    "end": "1993200"
  },
  {
    "text": "there are better tools out there now for doing this and if my clicker it's decided to die on me my old computers",
    "start": "1993200",
    "end": "2005830"
  },
  {
    "text": "died on me I think come on yeah if you want policy if you want to control what",
    "start": "2005830",
    "end": "2013150"
  },
  {
    "text": "can run mandate certain things are present then please have a look at the open policy agent this is using web",
    "start": "2013150",
    "end": "2020830"
  },
  {
    "text": "hooks and admission web books in particular behind the scenes but it's taking the abstraction a bit higher so I",
    "start": "2020830",
    "end": "2027040"
  },
  {
    "text": "wanted to show you how these things work how that lower-level infrastructure works but you shouldn't need to do that unless",
    "start": "2027040",
    "end": "2032900"
  },
  {
    "text": "something you're trying to do something that Oprah doesn't support so that's",
    "start": "2032900",
    "end": "2040370"
  },
  {
    "text": "kind of admission webhooks what if you want to go even further what if you want to extend the kubernetes api",
    "start": "2040370",
    "end": "2045530"
  },
  {
    "text": "or if you want to build abstractions on top of existing communities resources or",
    "start": "2045530",
    "end": "2051740"
  },
  {
    "text": "you want to create entirely new resources within kubernetes and you want",
    "start": "2051740",
    "end": "2058340"
  },
  {
    "text": "to use cube control to manage these resources you have a couple of options",
    "start": "2058340",
    "end": "2063648"
  },
  {
    "text": "here so one is you can create your own cube api server it's going to an extension server that's a lot of work",
    "start": "2063649",
    "end": "2071080"
  },
  {
    "text": "you have to implement the whole api server yourself and you have to have the persistence for it another option and",
    "start": "2071080",
    "end": "2078530"
  },
  {
    "text": "the one that I think most people have probably heard of work with kubernetes is custom resource definitions or CR DS",
    "start": "2078530",
    "end": "2086230"
  },
  {
    "text": "you also have custom controllers or talk about how those two fit together in a second so thinking about these custom",
    "start": "2086530",
    "end": "2094010"
  },
  {
    "text": "resource definitions this is a new resource type alongside the existing resources so where we've got pods and",
    "start": "2094010",
    "end": "2100880"
  },
  {
    "text": "deployments and services you can create your own resource type you can use cube",
    "start": "2100880",
    "end": "2107750"
  },
  {
    "text": "control to manage those resources so you can do cube control create Tillie we'll have a look at one of these in a second",
    "start": "2107750",
    "end": "2113620"
  },
  {
    "text": "and these custom resource definitions are persisted in the ad CD cluster now",
    "start": "2113620",
    "end": "2123110"
  },
  {
    "text": "it's worth mentioning that if you create a custom resource definition without any custom controller it's pretty useless",
    "start": "2123110",
    "end": "2129590"
  },
  {
    "text": "all you're essentially doing is creating doing some crud and please don't use that CD as your datastore for your own",
    "start": "2129590",
    "end": "2135860"
  },
  {
    "text": "applications by creating custom resource definition that's not a good idea so how do we create a custom resource",
    "start": "2135860",
    "end": "2142250"
  },
  {
    "text": "definition well we create a resource kind called custom resource definition we give it a name we specify the version",
    "start": "2142250",
    "end": "2151130"
  },
  {
    "text": "and we have this scope so the scope says is this name spaced or cluster wide",
    "start": "2151130",
    "end": "2156620"
  },
  {
    "text": "scope then we give it some names so we have the plural name the singular name the resource car name and then you have",
    "start": "2156620",
    "end": "2163100"
  },
  {
    "text": "short names so much like you have po4 pods or get SVC for service you can",
    "start": "2163100",
    "end": "2168440"
  },
  {
    "text": "define your own custom name once you've created that custom resource definition",
    "start": "2168440",
    "end": "2174620"
  },
  {
    "text": "you can now create a custom resource so much like you would have done with the",
    "start": "2174620",
    "end": "2180170"
  },
  {
    "text": "pod you can now create custom resource so this is my full resource you can see it's got my API version I defined",
    "start": "2180170",
    "end": "2187040"
  },
  {
    "text": "here's my kind and now in the spec I can put pretty much wherever I want what can",
    "start": "2187040",
    "end": "2195290"
  },
  {
    "text": "do now is I can define I can apply that this little video I can apply that custom resource now I can create an",
    "start": "2195290",
    "end": "2205040"
  },
  {
    "text": "instance of a custom resource so here's my kind of full resource being created and now I can do keep control get foo",
    "start": "2205040",
    "end": "2212920"
  },
  {
    "text": "that was never built in originally but there is there's my foo object I can use a shorthand I can also delete that for",
    "start": "2212920",
    "end": "2219740"
  },
  {
    "text": "object that's all I can do though that's it but it's quite nice for being able to use the same tooling the same commands",
    "start": "2219740",
    "end": "2228070"
  },
  {
    "text": "so custom controllers can be used to change the behavior of resources these",
    "start": "2229300",
    "end": "2235730"
  },
  {
    "text": "can be existing resources so if you want pods to behave in a different way you can write a custom controller more often",
    "start": "2235730",
    "end": "2242450"
  },
  {
    "text": "than not you'll see custom controllers paired with the custom resource definitions so the custom resource",
    "start": "2242450",
    "end": "2248870"
  },
  {
    "text": "definition is the state if you like and the controller is the logic that does the action that does the magic custom",
    "start": "2248870",
    "end": "2257990"
  },
  {
    "text": "controllers often written in go but they don't have to be and you often hear the",
    "start": "2257990",
    "end": "2263210"
  },
  {
    "text": "term operator and broadly speaking an operator is the custom resource definition combined with the custom",
    "start": "2263210",
    "end": "2268430"
  },
  {
    "text": "controller you want to write a custom",
    "start": "2268430",
    "end": "2273850"
  },
  {
    "text": "operator my first piece of advice is probably don't have a look if there's",
    "start": "2273850",
    "end": "2279500"
  },
  {
    "text": "one already there so there are loads of these out there now this is one of the",
    "start": "2279500",
    "end": "2285440"
  },
  {
    "text": "lists I've found this is quite old now but you can see it's quite small but this for example there's an AWS operator",
    "start": "2285440",
    "end": "2290900"
  },
  {
    "text": "there so this lets you provision ATO Bleus resources using cube control which",
    "start": "2290900",
    "end": "2296000"
  },
  {
    "text": "is quite cool so you might say keep control cray dynamodb it's quite cool if you do want",
    "start": "2296000",
    "end": "2305839"
  },
  {
    "text": "to write your own custom controller there are a number of ways of doing this there's a sample custom controller in",
    "start": "2305839",
    "end": "2311990"
  },
  {
    "text": "the kubernetes source code which gives you an idea of how to do them another",
    "start": "2311990",
    "end": "2317720"
  },
  {
    "text": "option is to use something like the operator framework so this kind of bootstraps the building blocks of a",
    "start": "2317720",
    "end": "2324069"
  },
  {
    "text": "operator and allows you to kind of get some of the boilerplate code out of the way as I said this is not a task to be",
    "start": "2324069",
    "end": "2332690"
  },
  {
    "text": "taken lightly they're quite complicated but obviously many many people are creating operators either too abstract",
    "start": "2332690",
    "end": "2339140"
  },
  {
    "text": "they're kind of kubernetes api abstract their own business logic behind the community api or just because they it's",
    "start": "2339140",
    "end": "2346039"
  },
  {
    "text": "simpler than running lots of individual resources so we can take bigger shift",
    "start": "2346039",
    "end": "2351380"
  },
  {
    "text": "now and talking a lot about scheduling and resources and extending crunching gearchange and I want to talk about",
    "start": "2351380",
    "end": "2357579"
  },
  {
    "text": "scaling there's almost no link to the",
    "start": "2357579",
    "end": "2363740"
  },
  {
    "text": "price section except I do tie back in sir so bear with me so we talked about auto scaling within",
    "start": "2363740",
    "end": "2370700"
  },
  {
    "text": "kubernetes the most people have probably heard of the horizontal pod autoscaler",
    "start": "2370700",
    "end": "2376000"
  },
  {
    "text": "so this is the component which adds more pods into your cluster to deal with load",
    "start": "2376000",
    "end": "2383260"
  },
  {
    "text": "and there's a v2 pod autoscaler which can actually use external metrics so the",
    "start": "2383260",
    "end": "2389809"
  },
  {
    "text": "v1 can only use the pod metric so he looks at CPU I think we're touching this in a second the v2 one's quite nice",
    "start": "2389809",
    "end": "2395329"
  },
  {
    "text": "because they look at external metrics there's another scaler called vertical pod autoscaler and this scaler actually",
    "start": "2395329",
    "end": "2402500"
  },
  {
    "text": "increases the amount of resources assigned to a pod when it needs it so this is now a vertical scaling scaling",
    "start": "2402500",
    "end": "2408230"
  },
  {
    "text": "up versus scaling out another option is in scaling is scaling the cluster itself",
    "start": "2408230",
    "end": "2415180"
  },
  {
    "text": "so the cluster autoscaler will see if this pods waiting to be scheduled which don't have because of",
    "start": "2415180",
    "end": "2422390"
  },
  {
    "text": "insufficient resources can actually increase the amount of nodes in your cluster now this relies on where you're",
    "start": "2422390",
    "end": "2429020"
  },
  {
    "text": "running this cluster so if you're running on a cloud provider it's going to kick into the cloud providers infrastructure",
    "start": "2429020",
    "end": "2435070"
  },
  {
    "text": "the problem across the autoscaler is it's not particularly fast it depends on platform you're running on but typically",
    "start": "2435070",
    "end": "2442820"
  },
  {
    "text": "we're talking about minutes to add a new node to the cluster if you imagine what it's doing is spinning up another VM",
    "start": "2442820",
    "end": "2449540"
  },
  {
    "text": "then it's actually bringing that into the clusters is doing all the bootstrapping it needs to do cubelets and all that stuff there's another",
    "start": "2449540",
    "end": "2458690"
  },
  {
    "text": "option called the virtual queue blur / virtual node so the virtual Kubla is an",
    "start": "2458690",
    "end": "2465500"
  },
  {
    "text": "open source project that was originally created by some of the Microsoft team and they donated it to the CN CF and",
    "start": "2465500",
    "end": "2473780"
  },
  {
    "text": "what this lets you do is lets you connect your kubernetes cluster to some external compute provider and we'll have",
    "start": "2473780",
    "end": "2480440"
  },
  {
    "text": "another look at that we'll have a look at this a little bit later before I dive into the kind of virtual node I want you",
    "start": "2480440",
    "end": "2486470"
  },
  {
    "text": "to talk about water scaling triggers so what triggers auto scaling and I've kind of touched in this already but horizontal scaling uses the metrics from",
    "start": "2486470",
    "end": "2494599"
  },
  {
    "text": "the pod or the v1 did so we one looked at the CPU and memory usage of your pod and determined if I needed to scale up",
    "start": "2494599",
    "end": "2501170"
  },
  {
    "text": "sorry scale out the v2 is really nice because now it can use metric some",
    "start": "2501170",
    "end": "2506660"
  },
  {
    "text": "external sources so for example you can scale up based on how many items you've",
    "start": "2506660",
    "end": "2511670"
  },
  {
    "text": "got in a queue for example which is pretty cool the VP a no surprise really",
    "start": "2511670",
    "end": "2518060"
  },
  {
    "text": "used looks at the CPU and memory usage of the pod and then as I touched on",
    "start": "2518060",
    "end": "2523190"
  },
  {
    "text": "already the cluster autoscaler says are there any pods waiting to be scheduled because there's not enough",
    "start": "2523190",
    "end": "2528230"
  },
  {
    "text": "resources that's the trigger one of the",
    "start": "2528230",
    "end": "2534589"
  },
  {
    "text": "issues that kubernetes has had and the very last release is kind of ruined this",
    "start": "2534589",
    "end": "2539810"
  },
  {
    "text": "bit of the talk for me kubernetes wasn't able to scale auto scale deployments",
    "start": "2539810",
    "end": "2545960"
  },
  {
    "text": "down to zero so why would you care about that well if you're running a micro",
    "start": "2545960",
    "end": "2552440"
  },
  {
    "text": "services architecture and you have message handlers which are responding to messages on a queue and maybe these",
    "start": "2552440",
    "end": "2559250"
  },
  {
    "text": "messages are only fired once a week once a month previously you'd have to have a",
    "start": "2559250",
    "end": "2564859"
  },
  {
    "text": "message handler sitting there waiting for that message the whole time because the autoscaler can only scale",
    "start": "2564859",
    "end": "2570740"
  },
  {
    "text": "down to one as a minimum number you might be running as your functions or",
    "start": "2570740",
    "end": "2576559"
  },
  {
    "text": "functions all applications where you're responding to an event and then handlers kick in and up until 1:15 this wasn't",
    "start": "2576559",
    "end": "2585170"
  },
  {
    "text": "possible in 115 they added the ability to do scaling to 0 but it's very early",
    "start": "2585170",
    "end": "2590450"
  },
  {
    "text": "alpha feature and it's behind the feature gate and 116 I believe the feature gates been removed but it's",
    "start": "2590450",
    "end": "2596029"
  },
  {
    "text": "still unclear at the moment whether this is going to behave exactly as we anticipate because when kubernetes",
    "start": "2596029",
    "end": "2603259"
  },
  {
    "text": "didn't have this feature the kada or Kida was introduced so key there's a",
    "start": "2603259",
    "end": "2608779"
  },
  {
    "text": "kubernetes event-driven autoscaler and it was an open source project that was led by mark soft and red hair and",
    "start": "2608779",
    "end": "2615650"
  },
  {
    "text": "essentially allows you to auto scale deployments to zero instances and also",
    "start": "2615650",
    "end": "2622490"
  },
  {
    "text": "scale up from zero instances to n number of instances on demand the way that",
    "start": "2622490",
    "end": "2629599"
  },
  {
    "text": "works is essentially Kida acts as a metric server and also responds to",
    "start": "2629599",
    "end": "2634849"
  },
  {
    "text": "events from external sources and combined together what it allows you to do is say when there's an event so for",
    "start": "2634849",
    "end": "2641450"
  },
  {
    "text": "example if it's looking at queue when there's n number of messages on a queue then start scaling up the deployment so",
    "start": "2641450",
    "end": "2649339"
  },
  {
    "text": "much like the HPI is doing except critically go down to 0 so kita has a",
    "start": "2649339",
    "end": "2656359"
  },
  {
    "text": "number of scale as an event sources at the moment so it will allow you to react to AWS events on cloud watch service",
    "start": "2656359",
    "end": "2663529"
  },
  {
    "text": "pass DCP Kafka tons of these and there were many others in development as well",
    "start": "2663529",
    "end": "2668950"
  },
  {
    "text": "and I'll show you a demo if time allows on the Raby mq one so talked about that",
    "start": "2668950",
    "end": "2676039"
  },
  {
    "text": "virtual node before I said we have this virtual node virtual Kuebler so let me",
    "start": "2676039",
    "end": "2681109"
  },
  {
    "text": "clarify the terminology just in case is confusing so virtual Kubler is the underlying technology and the",
    "start": "2681109",
    "end": "2687500"
  },
  {
    "text": "implementation is a virtual node and what virtual node does when you install it into your kubernetes cluster it gives",
    "start": "2687500",
    "end": "2694880"
  },
  {
    "text": "you another node so here I've got three existing nodes in my cluster these could be bare metal or virtual machines",
    "start": "2694880",
    "end": "2700460"
  },
  {
    "text": "when I add the virtual note I get a fourth node it looks like any other node",
    "start": "2700460",
    "end": "2705940"
  },
  {
    "text": "it implements most of the node and pod functionality I would expect except this",
    "start": "2705940",
    "end": "2711650"
  },
  {
    "text": "virtual node is being powered by an external compute provider so what this",
    "start": "2711650",
    "end": "2717890"
  },
  {
    "text": "lets me do is treat it like another node use cube control as I normally would",
    "start": "2717890",
    "end": "2722950"
  },
  {
    "text": "except now those pods are running somewhere else where is that somewhere",
    "start": "2722950",
    "end": "2727970"
  },
  {
    "text": "else there are a number of implementations so as your container instances is one of these the Fargate",
    "start": "2727970",
    "end": "2735670"
  },
  {
    "text": "Nomad various others I'm gonna show you demo with a CI so",
    "start": "2735670",
    "end": "2742880"
  },
  {
    "text": "just briefly as your container instances are the kind of service container",
    "start": "2742880",
    "end": "2748030"
  },
  {
    "text": "offering on kubernetes Orion on Azure so just to get the buzzwords in there as",
    "start": "2748030",
    "end": "2753710"
  },
  {
    "text": "well so essentially don't need to provision any architecture you just give a a CI",
    "start": "2753710",
    "end": "2759020"
  },
  {
    "text": "your container and tell it to run it you pay per second for the running container and this is really good for testing",
    "start": "2759020",
    "end": "2766040"
  },
  {
    "text": "images for running short-lived containers and now with the virtual node maybe for handling sudden spikes in",
    "start": "2766040",
    "end": "2772520"
  },
  {
    "text": "traffic so for example I've got a cluster and I've got three nodes in that",
    "start": "2772520",
    "end": "2778760"
  },
  {
    "text": "cluster and I've got the virtual node installed as well I get a sudden spike in traffic and my existing nodes a",
    "start": "2778760",
    "end": "2785990"
  },
  {
    "text": "running halt I'm running out of space running out of capacity I could scale my cluster at",
    "start": "2785990",
    "end": "2791210"
  },
  {
    "text": "this point but that might take two or three four minutes this is an e-commerce site I'm losing customers at this point",
    "start": "2791210",
    "end": "2798110"
  },
  {
    "text": "I'm losing sales with the virtual node what can happen is those additional pods",
    "start": "2798110",
    "end": "2804110"
  },
  {
    "text": "to handle the load can be spun up onto a CI we're now handling those customers",
    "start": "2804110",
    "end": "2810440"
  },
  {
    "text": "requests and when the load goes away those containers go away oops those",
    "start": "2810440",
    "end": "2815660"
  },
  {
    "text": "containers go away and we stop paying for the additional compute so in a case",
    "start": "2815660",
    "end": "2822770"
  },
  {
    "text": "this is just an option you enable for other cloud providers you can get hold",
    "start": "2822770",
    "end": "2828380"
  },
  {
    "text": "of the virtual Kuebler project and just install it yourself if you wanted to you can actually have",
    "start": "2828380",
    "end": "2834800"
  },
  {
    "text": "for example a AWS cluster uks cluster spanning out into a CI I don't know why",
    "start": "2834800",
    "end": "2843710"
  },
  {
    "text": "you would but you could be mindful that you'd have to give some service principled credentials things like that",
    "start": "2843710",
    "end": "2848869"
  },
  {
    "text": "to the to the actual component and that's not something you necessarily want to do so I've got about two about",
    "start": "2848869",
    "end": "2857960"
  },
  {
    "text": "twelve minutes so hopefully I can get some demos done in that time and leave some time for",
    "start": "2857960",
    "end": "2864560"
  },
  {
    "text": "questions so let's have a look at a kada demo",
    "start": "2864560",
    "end": "2870350"
  },
  {
    "text": "first to think",
    "start": "2870350",
    "end": "2872950"
  },
  {
    "text": "so in my cluster at the moment if I'd",
    "start": "2877720",
    "end": "2882970"
  },
  {
    "text": "okay get pods you can see I've got RabbitMQ so I've got RabbitMQ installed",
    "start": "2882970",
    "end": "2888310"
  },
  {
    "text": "and what I'm going to be deploying is a small go application two components one",
    "start": "2888310",
    "end": "2896680"
  },
  {
    "text": "that's reading from the queue one that's writing to the key so in fact I've already deployed the one that's reading",
    "start": "2896680",
    "end": "2902680"
  },
  {
    "text": "from the queue so if I do K get deployments you can see we have this",
    "start": "2902680",
    "end": "2910450"
  },
  {
    "text": "consumer and it's sitting there with zero instances so there's no pods but",
    "start": "2910450",
    "end": "2915760"
  },
  {
    "text": "I've got the the consumer the one that's waiting for messages off the queue sitting there it's not taking any resources because there's no pods",
    "start": "2915760",
    "end": "2922150"
  },
  {
    "text": "running let me quickly show you the",
    "start": "2922150",
    "end": "2927850"
  },
  {
    "text": "gamma phone so here's the consumer so",
    "start": "2927850",
    "end": "2933730"
  },
  {
    "text": "the top bits just fairly standard deployment the magic is what about by this custom resource definition this",
    "start": "2933730",
    "end": "2942550"
  },
  {
    "text": "custom resource definition is saying that I want to scale the RabbitMQ deployment and I have some polling",
    "start": "2942550",
    "end": "2950650"
  },
  {
    "text": "intervals here for how quickly I'd poll for how quickly I cooled down how many replicas I run and then here's the",
    "start": "2950650",
    "end": "2957190"
  },
  {
    "text": "trigger so the trigger is listening to the RabbitMQ and it's looking for a queue depth going about five okay so",
    "start": "2957190",
    "end": "2963040"
  },
  {
    "text": "this custom resource definitely sure this scaled object was added by kada so you can see the API version is in the",
    "start": "2963040",
    "end": "2969100"
  },
  {
    "text": "kita namespace k2 namespace so that's the magic really the publisher is just",
    "start": "2969100",
    "end": "2976780"
  },
  {
    "text": "the kubernetes job which is who's gonna run the go binary and it's going to dump",
    "start": "2976780",
    "end": "2982270"
  },
  {
    "text": "a lot of messages into the key the consumer is waiting I think about a second between each each consumers",
    "start": "2982270",
    "end": "2989770"
  },
  {
    "text": "pausing for about half a second or a second I think just to kind of demonstrate the effect so now if I come",
    "start": "2989770",
    "end": "2997180"
  },
  {
    "text": "over to you here and if I apply the I",
    "start": "2997180",
    "end": "3004100"
  },
  {
    "text": "can type it's the publisher so now that job is",
    "start": "3004100",
    "end": "3014500"
  },
  {
    "text": "running so now it's spitting pods it's adding so this is the publisher running",
    "start": "3014500",
    "end": "3020650"
  },
  {
    "text": "I now do you get pods again see that's finished so what we should start seeing",
    "start": "3020650",
    "end": "3026700"
  },
  {
    "text": "this demo isn't failing there we are so we can see now there's a consumer spun up so with zero instances we now have",
    "start": "3026700",
    "end": "3033670"
  },
  {
    "text": "one consumer now cuz I'm going to Windows terminal I can't do the watch commander that refreshes nicely so I'm",
    "start": "3033670",
    "end": "3040539"
  },
  {
    "text": "just going to do that we can see now we have a lot more I'll keep on doing that",
    "start": "3040539",
    "end": "3047190"
  },
  {
    "text": "periodically we'll see if I just do care get deployments we'll see we're up to",
    "start": "3047190",
    "end": "3054339"
  },
  {
    "text": "five of eight and actually as well as a show D in the config it'll scale up to",
    "start": "3054339",
    "end": "3059559"
  },
  {
    "text": "thirty instances it's we're up to sixteen see that this should only take",
    "start": "3059559",
    "end": "3069250"
  },
  {
    "text": "another thirty seconds or so",
    "start": "3069250",
    "end": "3072750"
  },
  {
    "text": "so we can see loads of consumers each of them is reading off that key and what we",
    "start": "3079740",
    "end": "3088510"
  },
  {
    "text": "should start seeing very soon is once they're finished and there's nothing",
    "start": "3088510",
    "end": "3094119"
  },
  {
    "text": "left in the key so we're up to the max now we're up to the 30 I'll give this another 30 seconds or so",
    "start": "3094119",
    "end": "3101430"
  },
  {
    "text": "if not we can come back to it oh yeah that was that that's how quick that was so we can see in the time it took me to",
    "start": "3101430",
    "end": "3109000"
  },
  {
    "text": "say I'll give you 30 seconds we went from 30 scaled all the way back down to",
    "start": "3109000",
    "end": "3114280"
  },
  {
    "text": "zero so from now duque get pods oops",
    "start": "3114280",
    "end": "3121619"
  },
  {
    "text": "we'll see that's the RabbitMQ whoops and that's that publisher come on that was",
    "start": "3121770",
    "end": "3127180"
  },
  {
    "text": "just the job so it's completed and we've scaled back down to zero again so that's",
    "start": "3127180",
    "end": "3132730"
  },
  {
    "text": "quite cool the next demo is the virtual know demo and this one does rely on lot",
    "start": "3132730",
    "end": "3140260"
  },
  {
    "text": "of fiddling with windows and having a good internet connection so I'm going to rely on a video for this one hopefully",
    "start": "3140260",
    "end": "3146680"
  },
  {
    "text": "people can see the video if not feel free to move a little bit closer so here",
    "start": "3146680",
    "end": "3153190"
  },
  {
    "text": "my cluster I've got the virtual know deployed and I should have said actually the virtual notes ports there's a",
    "start": "3153190",
    "end": "3158319"
  },
  {
    "text": "Windows and a Linux virtual node you can have this is a Linux one so I've got three existing nodes in my cluster and",
    "start": "3158319",
    "end": "3164730"
  },
  {
    "text": "I've got the virtual node if I have a look at that virtual node if I describe",
    "start": "3164730",
    "end": "3170619"
  },
  {
    "text": "it what we'll see is that I type really",
    "start": "3170619",
    "end": "3179589"
  },
  {
    "text": "slowly what we'll see is that it's got",
    "start": "3179589",
    "end": "3186280"
  },
  {
    "text": "some labels and one of the labels is type equals virtual Keibler more important he's got a taint on it",
    "start": "3186280",
    "end": "3192670"
  },
  {
    "text": "so the tank says don't schedule because I wouldn't want a scheduled pod so I'm",
    "start": "3192670",
    "end": "3199060"
  },
  {
    "text": "just gonna pause that a second I don't want to schedule pods on that virtual node so I'm going to be paying for ACI instances if I've got existing capacity",
    "start": "3199060",
    "end": "3205329"
  },
  {
    "text": "but I don't want to deploy anything to it so I taint it incidentally while I've",
    "start": "3205329",
    "end": "3211300"
  },
  {
    "text": "got the video pause notice the capacity of the cluster 800 CPUs and four terabytes this is the virtual node",
    "start": "3211300",
    "end": "3217470"
  },
  {
    "text": "for terabytes of memory this can be whatever number it wants to be this is the this is your credit card size",
    "start": "3217470",
    "end": "3223849"
  },
  {
    "text": "basically so okay so that's that's the",
    "start": "3223849",
    "end": "3231299"
  },
  {
    "text": "virtual node so let's have a look at the deployments so this is a a web can",
    "start": "3231299",
    "end": "3238140"
  },
  {
    "text": "ecommerce site few components running but the one we're really interested in",
    "start": "3238140",
    "end": "3244410"
  },
  {
    "text": "is the online store have a look away they're all running you can see they're",
    "start": "3244410",
    "end": "3249599"
  },
  {
    "text": "all running on the actual ak's nodes and that's the one we're interested in that's our e-commerce site and",
    "start": "3249599",
    "end": "3256099"
  },
  {
    "text": "recklessly we've only got one instance of AI ecommerce site running because we",
    "start": "3256099",
    "end": "3261720"
  },
  {
    "text": "like living on the edge if I have a look at that pod we can see that",
    "start": "3261720",
    "end": "3272510"
  },
  {
    "text": "I think I was struggling to find the relevant section area so you can see that it tolerates the taint",
    "start": "3276700",
    "end": "3285280"
  },
  {
    "text": "so it's tolerating the ACI team so you're saying I'm allowed to run on that",
    "start": "3285280",
    "end": "3291220"
  },
  {
    "text": "on that virtual note so why isn't it already running on a virtual note",
    "start": "3291220",
    "end": "3298289"
  },
  {
    "text": "because we've set an anti affinity so we've said prefer not to run on that but",
    "start": "3298650",
    "end": "3306160"
  },
  {
    "text": "your note but you are allowed to run on it so it's now combining those two effects which means that we're not using",
    "start": "3306160",
    "end": "3314560"
  },
  {
    "text": "it unless we need to so you can see they're not in virtual nod to prefer not to run but you do",
    "start": "3314560",
    "end": "3320800"
  },
  {
    "text": "tolerate it otherwise so here's that you commerce site and do various things you",
    "start": "3320800",
    "end": "3329980"
  },
  {
    "text": "can add things to the cart conscious of time I might just jump a little bit so what we're going to do is going to split",
    "start": "3329980",
    "end": "3336580"
  },
  {
    "text": "the windows in a second and we're going to bring up app insights which is",
    "start": "3336580",
    "end": "3342160"
  },
  {
    "text": "showing the metrics on that site so you can see I've got essentially one request per second coming in and request",
    "start": "3342160",
    "end": "3348670"
  },
  {
    "text": "generation is essentially zero milliseconds in this bottom pane in the",
    "start": "3348670",
    "end": "3354310"
  },
  {
    "text": "cloud shell I'm gonna run a load test I'm running a component called hey which does is really nice load testing tool",
    "start": "3354310",
    "end": "3359380"
  },
  {
    "text": "very easy to use if you keep an eye on the top right window you see suddenly",
    "start": "3359380",
    "end": "3364870"
  },
  {
    "text": "there's a spike in requests so we're now going to turn the requests per second and our request duration has jumped up a",
    "start": "3364870",
    "end": "3370660"
  },
  {
    "text": "little bit jumped up to 500 milliseconds on the left hand side on the cube",
    "start": "3370660",
    "end": "3375850"
  },
  {
    "text": "control window what we'll do now is we'll do we'll have a look at the pods we're running so remember there was one",
    "start": "3375850",
    "end": "3380860"
  },
  {
    "text": "pod running before why do you get pods we can see there's a lot more of the",
    "start": "3380860",
    "end": "3386290"
  },
  {
    "text": "online store pods running probably more",
    "start": "3386290",
    "end": "3391360"
  },
  {
    "text": "interestingly let's have a look where they're running so if I run that with the Oh wide and incidentally if you now",
    "start": "3391360",
    "end": "3398740"
  },
  {
    "text": "look at the the request Eurasian you see nice drop down again so even the load is",
    "start": "3398740",
    "end": "3404290"
  },
  {
    "text": "actually going up at this point but the request duration is now dropping down",
    "start": "3404290",
    "end": "3409320"
  },
  {
    "text": "so if I now have a look away those pods are running you can see they're running on the virtual node so this point I'm",
    "start": "3409320",
    "end": "3414900"
  },
  {
    "text": "paying for them per second I'm paying for those but hopefully people are buying really expensive surface devices",
    "start": "3414900",
    "end": "3419970"
  },
  {
    "text": "I'm making decent marginal margins on them this is all real time at this point",
    "start": "3419970",
    "end": "3426600"
  },
  {
    "text": "this was real time that scale up in real time I didn't didn't fudge the video what we'll do is as you can see the",
    "start": "3426600",
    "end": "3433290"
  },
  {
    "text": "request or the request amount is the request rate is going up and up and up and actually the duration is is very",
    "start": "3433290",
    "end": "3440490"
  },
  {
    "text": "good it's zero or just above what we can do now is if I kill that load test we'll",
    "start": "3440490",
    "end": "3447720"
  },
  {
    "text": "see the request rate drops to zero now this takes about 90 seconds and I didn't",
    "start": "3447720",
    "end": "3453750"
  },
  {
    "text": "want to have a video running for 90 seconds and we have to fill so I did did edit the video at this point but 90",
    "start": "3453750",
    "end": "3459570"
  },
  {
    "text": "seconds later when you do get pods we can see we're back down to that existing half pod the virtual node stuff is all",
    "start": "3459570",
    "end": "3466800"
  },
  {
    "text": "gone so we've stopped paying for it now we're back down to the existing number",
    "start": "3466800",
    "end": "3471980"
  },
  {
    "text": "so that was the virtual node the video continues just to show it again just how",
    "start": "3471980",
    "end": "3478350"
  },
  {
    "text": "quickly is but I think given the time I'll stop it there so I was the last",
    "start": "3478350",
    "end": "3484290"
  },
  {
    "text": "demo and let's just wrap up",
    "start": "3484290",
    "end": "3490970"
  },
  {
    "text": "so what did he just say you saw that the virtual node was tainted to prevent pods",
    "start": "3495720",
    "end": "3502450"
  },
  {
    "text": "from being scheduled learn to accidentally and that ecommerce shop deployment was configured to tolerate",
    "start": "3502450",
    "end": "3511029"
  },
  {
    "text": "the virtual node but also have an anti finiti to minimize the usage of the",
    "start": "3511029",
    "end": "3517269"
  },
  {
    "text": "virtual node and that allowed us when we scaled up to use the virtual node pay",
    "start": "3517269",
    "end": "3523450"
  },
  {
    "text": "the per second building on the ACI containers and once we were finished we're done so just to wrap up as we've",
    "start": "3523450",
    "end": "3531940"
  },
  {
    "text": "hopefully seen there's lots of really powerful constructs within kubernetes to control pod scheduling and admission",
    "start": "3531940",
    "end": "3539499"
  },
  {
    "text": "webhooks give us quite a lot of power in terms of customizing what resources are created",
    "start": "3539499",
    "end": "3546568"
  },
  {
    "text": "if you want ultimate control and extensibility you need to have custom controllers with custom resources and",
    "start": "3547410",
    "end": "3555309"
  },
  {
    "text": "finally with something like the virtual node and I didn't show it here but you could combine the qaida scaling with the",
    "start": "3555309",
    "end": "3561519"
  },
  {
    "text": "virtual node and you have scaling to zero and virtual nodes means you are having service contain service clusters",
    "start": "3561519",
    "end": "3569109"
  },
  {
    "text": "you're not paying for on on Azure and Google you don't pay for the control",
    "start": "3569109",
    "end": "3574989"
  },
  {
    "text": "plane if you have server list nodes you don't pay for the nodes unless you're running somewhere clothes if you have key to scheduling you have zero pods",
    "start": "3574989",
    "end": "3582099"
  },
  {
    "text": "unless there's something happening so you have crew serverless kubernetes clusters if you want to learn more that",
    "start": "3582099",
    "end": "3589509"
  },
  {
    "text": "virtual not scaling demos on that github repo there in the synopsis of this talk",
    "start": "3589509",
    "end": "3594759"
  },
  {
    "text": "I mentioned about service meshes but does it talk tomorrow about service",
    "start": "3594759",
    "end": "3600789"
  },
  {
    "text": "meshes so I didn't cover that I do talk about service machines I did a talk here last year actually which is a",
    "start": "3600789",
    "end": "3607119"
  },
  {
    "text": "higher-level kind of micro services talk and I cover service meshes in there and if you want",
    "start": "3607119",
    "end": "3612369"
  },
  {
    "text": "to learn more about lots of these cloud native technologies I highly recommend cutter coder and with that think I'm",
    "start": "3612369",
    "end": "3618609"
  },
  {
    "text": "literally 11 seconds over so I'll say thank you very much the slides available at that link they're happy to take",
    "start": "3618609",
    "end": "3625660"
  },
  {
    "text": "questions outside otherwise thank you so much you [Applause]",
    "start": "3625660",
    "end": "3633029"
  }
]