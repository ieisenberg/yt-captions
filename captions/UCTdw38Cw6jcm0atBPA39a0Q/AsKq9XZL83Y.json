[
  {
    "text": "all right welcome so my name is Philip and this is",
    "start": "840",
    "end": "6000"
  },
  {
    "text": "a session about the upcoming Dooms Day or as we like to call it the Q day which",
    "start": "6000",
    "end": "11280"
  },
  {
    "text": "is the day on which Quantum computerss will be able to break some of our existing cryptography so first of all",
    "start": "11280",
    "end": "18080"
  },
  {
    "text": "thank you for coming I I really appreciate you coming I I really do especially as you know I I had a look at",
    "start": "18080",
    "end": "24760"
  },
  {
    "text": "the agenda and I can safely tell you that every single session that is happening in parallel to this one is actually better than this",
    "start": "24760",
    "end": "31399"
  },
  {
    "text": "one so from that perspective you may have not chosen wisely but I'll do my best to make it as useful and as",
    "start": "31399",
    "end": "38559"
  },
  {
    "text": "interesting as possible now as I mentioned my name is f I do have a last name but nobody can",
    "start": "38559",
    "end": "44039"
  },
  {
    "text": "pronounce it including me so I typically just say FW not there's a legend that one time",
    "start": "44039",
    "end": "49600"
  },
  {
    "text": "one like somebody pronounced my name correctly once and then immediately",
    "start": "49600",
    "end": "55399"
  },
  {
    "text": "died so there you go uh no so I'm a Microsoft MVP in the category called",
    "start": "55399",
    "end": "61680"
  },
  {
    "text": "Azure high performance Computing now this is a bit cryptic but what is buried in there is actually the field of",
    "start": "61680",
    "end": "67960"
  },
  {
    "text": "quantum Computing and so if you'd like to learn more about quantum computers then I have this book recommendation for you so this is a book that I wrote a",
    "start": "67960",
    "end": "74960"
  },
  {
    "text": "while ago now I always recommend this book to people because I really like the author but but uh the point is that",
    "start": "74960",
    "end": "81759"
  },
  {
    "text": "today we are going to look at Quantum Computing from a different angle namely we are going to",
    "start": "81759",
    "end": "88479"
  },
  {
    "text": "uh sort of consider quantum computers to be the threat actor and see how we can",
    "start": "88479",
    "end": "93520"
  },
  {
    "text": "protect ourselves from that and so this is the rough agenda for today we'll start with a a little bit of a warm-up",
    "start": "93520",
    "end": "99520"
  },
  {
    "text": "just to make sure that everybody's on the same page so this will be some super basic stuff just to align uh everybody",
    "start": "99520",
    "end": "106399"
  },
  {
    "text": "then we will talk about Quantum threats we will talk about quantum computers and sort of what they do that they are",
    "start": "106399",
    "end": "112799"
  },
  {
    "text": "actually efficient at s solving certain types of problems and then we'll talk about post",
    "start": "112799",
    "end": "118840"
  },
  {
    "text": "Quantum cryptography and sort of how we can protect ourselves from that and at the end we'll have a look at some code",
    "start": "118840",
    "end": "124520"
  },
  {
    "text": "will be net code because that is in the subtitle for this session so there we go",
    "start": "124520",
    "end": "130599"
  },
  {
    "text": "um so here's the warm-up so the warm-up question is as follows is it possible to have",
    "start": "130599",
    "end": "136680"
  },
  {
    "text": "unbreakable encryption right I promise you that this is not a tricky question we will not have to invoke any Quantum",
    "start": "136680",
    "end": "142720"
  },
  {
    "text": "Concepts to actually be able to answer it now I'd like you I would like you to think in your head for about two two",
    "start": "142720",
    "end": "149640"
  },
  {
    "text": "seconds about this and come up with the answer and the answer to this question is actually and this is surprising to",
    "start": "149640",
    "end": "155519"
  },
  {
    "text": "some people at least to the people that answer wrongly the answer is yes now",
    "start": "155519",
    "end": "160680"
  },
  {
    "text": "what is even more surprising is that the scheme that guarantees this is unbelievably simple it's in fact it's so",
    "start": "160680",
    "end": "166080"
  },
  {
    "text": "simple you can go home and teach your child how to do unbreakable encryption because that is the technique that we",
    "start": "166080",
    "end": "171800"
  },
  {
    "text": "call onetime Pad really the only skill that you have to have here is to be able to convert a",
    "start": "171800",
    "end": "178720"
  },
  {
    "text": "a payload to Binary right so you start with a message you convert it into a binary format then you generate a random",
    "start": "178720",
    "end": "185519"
  },
  {
    "text": "key that has at least the same amount of bits so it has to have the same length or might be longer as well and then you",
    "start": "185519",
    "end": "192480"
  },
  {
    "text": "just go through the individual bits of the message and the key and you apply xor logic between them and xor exclusive",
    "start": "192480",
    "end": "198440"
  },
  {
    "text": "or means that a zero and a zero would give you a zero a one and a one would also give you a zero but the zero and a",
    "start": "198440",
    "end": "204440"
  },
  {
    "text": "one would give you a one that is it right that is your Cipher text and you can always recover the original message",
    "start": "204440",
    "end": "209560"
  },
  {
    "text": "from the cipher text by repeating the same procedure but now between the cipher text and the",
    "start": "209560",
    "end": "214840"
  },
  {
    "text": "key now this is not unconditionally or this is not unconditional you have to meet certain",
    "start": "214840",
    "end": "222519"
  },
  {
    "text": "prerequisites so first of all the key must be at least the length of the message because otherwise you run out of bits the second thing is the key must be",
    "start": "222519",
    "end": "229599"
  },
  {
    "text": "completely random so you need a really good source of entropy and finally the key must never be reused right so this",
    "start": "229599",
    "end": "235959"
  },
  {
    "text": "is why it's called a onetime pad now if you consider all of this it's just not very practical this technique right",
    "start": "235959",
    "end": "242200"
  },
  {
    "text": "because you have super long Keys you have to change them all the time now an interesting aspect of this is that this",
    "start": "242200",
    "end": "248400"
  },
  {
    "text": "can be combined very nicely with the emerging Quantum communication Technologies but this is something that",
    "start": "248400",
    "end": "253640"
  },
  {
    "text": "is really not relevant for us today so we not dive into that but this is something that is used",
    "start": "253640",
    "end": "261000"
  },
  {
    "text": "in some places it was used quite a lot in the past as well like for example in the communication between the Soviet",
    "start": "261000",
    "end": "266680"
  },
  {
    "text": "Union and the United States during the Cold War like they literally had like long sheets of pre-shared onetime PA",
    "start": "266680",
    "end": "272759"
  },
  {
    "text": "keys and they would just use that to encrypt messages we can actually prove that if you fulfill all these criteria",
    "start": "272759",
    "end": "279639"
  },
  {
    "text": "that this scheme is actually mathematically theoretically secure like you gain zero information by intercepting the messages and there's",
    "start": "279639",
    "end": "285600"
  },
  {
    "text": "like no pattern that you can use to attack this other than just guessing but because it's just so not",
    "start": "285600",
    "end": "292960"
  },
  {
    "text": "because it is not really practical we have other schemes that we use but overall one time PA falls into the",
    "start": "292960",
    "end": "298479"
  },
  {
    "text": "category of symmetric andry right and the symmetric encryption basically relies on the the fact in",
    "start": "298479",
    "end": "304080"
  },
  {
    "text": "communication scenarios that two parties share the same key you can see that there's a yellow key here and I mean the",
    "start": "304080",
    "end": "309800"
  },
  {
    "text": "fact that it's yellow on both sides proves that this is really the same key now in this case a key and the message",
    "start": "309800",
    "end": "315360"
  },
  {
    "text": "produces a cipher text and the cipher text and the key produces the message back and out of this class of symmetric",
    "start": "315360",
    "end": "321840"
  },
  {
    "text": "algorithms AES is by far the most widely used and in fact we have so much trust",
    "start": "321840",
    "end": "327199"
  },
  {
    "text": "in AES that we think that it will be not it will not be vulnerable to Quantum",
    "start": "327199",
    "end": "332479"
  },
  {
    "text": "Computing attacks but we are going to come back to this later and even like the national",
    "start": "332479",
    "end": "337880"
  },
  {
    "text": "security agencies across the world they use AES for encryption now symmetric",
    "start": "337880",
    "end": "343400"
  },
  {
    "text": "encryption is great it's fast it's relatively simple it's reliable but of",
    "start": "343400",
    "end": "348800"
  },
  {
    "text": "course it has the cheick and the neck problem if you use it for communication right if you would like to use symmetric",
    "start": "348800",
    "end": "354039"
  },
  {
    "text": "encryption to create a secure Communication channel then you need a secure Communication channel in the",
    "start": "354039",
    "end": "359360"
  },
  {
    "text": "first place to be able to agree on the key that you are going to use with your counterpart and this is of course why we",
    "start": "359360",
    "end": "365319"
  },
  {
    "text": "have asymmetric encryption and now in this case we have two keys that are different from each other and these are",
    "start": "365319",
    "end": "370840"
  },
  {
    "text": "private and public keys and the gist of asymmetric encryption is that the the",
    "start": "370840",
    "end": "375880"
  },
  {
    "text": "public key is derived from the private key there is a mathematical relationship between them right and the way this",
    "start": "375880",
    "end": "382440"
  },
  {
    "text": "works generally is that it is easy to go from private key to public key but it's almost impossible to go the opposite way",
    "start": "382440",
    "end": "389680"
  },
  {
    "text": "right theoretically it is possible but it's just super difficult so to recover",
    "start": "389680",
    "end": "394919"
  },
  {
    "text": "the private key out of the public key and you know within this scheme now",
    "start": "394919",
    "end": "402520"
  },
  {
    "text": "anybody can encrypt something with the public key but only the person with a private key can decrypt it and the same",
    "start": "402520",
    "end": "408479"
  },
  {
    "text": "scheme can also be used for signatures where you know data can be signed with a private key and then the public key can",
    "start": "408479",
    "end": "414199"
  },
  {
    "text": "be used to verify the the Integrity of that and these are basically the two common scenarios for asymmetric",
    "start": "414199",
    "end": "420479"
  },
  {
    "text": "encryption the the key exchange establishment so for example in TS uh we would run the initial handshake",
    "start": "420479",
    "end": "428280"
  },
  {
    "text": "using asymmetric encryption and switch to AES because it's it's it's better right and then um digital signatures of",
    "start": "428280",
    "end": "435000"
  },
  {
    "text": "course something that is widely used as well in in in places like like authentication tokens like this is a jot",
    "start": "435000",
    "end": "441160"
  },
  {
    "text": "token here and the blue part here this is the signature right and this way anybody who's consuming the token can",
    "start": "441160",
    "end": "447680"
  },
  {
    "text": "then verify the authenticity and integrity of this token and so just to summarize this I mean asymmetric crypto",
    "start": "447680",
    "end": "454520"
  },
  {
    "text": "is based on difficult mathematical problems right so this key derivation going from private to public that",
    "start": "454520",
    "end": "461720"
  },
  {
    "text": "depends on on on on these two problems here so these are the the two major branches of of asymmetric cryptography",
    "start": "461720",
    "end": "468520"
  },
  {
    "text": "if you will RSA and elliptic curve cryptography and then the problems that their hard are different mathematically",
    "start": "468520",
    "end": "474720"
  },
  {
    "text": "but if you reduce them down to like the bare minimum you'll actually see that these are the same but we are going to",
    "start": "474720",
    "end": "480360"
  },
  {
    "text": "come back to to this later on so this was just a warmup and let's now talk about some",
    "start": "480360",
    "end": "486919"
  },
  {
    "text": "Quantum stuff so before um we get to anything useful I wanted to spend maybe",
    "start": "486919",
    "end": "492360"
  },
  {
    "text": "five minutes talking about how quantum computers work and the basic unit of information in Quantum information",
    "start": "492360",
    "end": "498759"
  },
  {
    "text": "science is is a cuit a Quantum bit now a cubit can be observed to be in one of",
    "start": "498759",
    "end": "505919"
  },
  {
    "text": "two possible States and uh and in that sense it is like a regular bit now from",
    "start": "505919",
    "end": "513159"
  },
  {
    "text": "the quantum Computing Community we call uh bits regular bits we call them classical beats in fact we call entire",
    "start": "513159",
    "end": "520518"
  },
  {
    "text": "binary computation classical computation right I I mean we do it because we don't want to call it Legacy",
    "start": "520519",
    "end": "527880"
  },
  {
    "text": "right so we're being ni we're calling it classic so when you hear me uh refer to classical stuff I don't mean like",
    "start": "527880",
    "end": "534160"
  },
  {
    "text": "ancient Greece I really mean the computation that we use today and the current information theory that we use",
    "start": "534160",
    "end": "540959"
  },
  {
    "text": "and so a bit can only be a zero or a one now a qbit can only be observed to be in one of two possible States now these",
    "start": "540959",
    "end": "547480"
  },
  {
    "text": "states are are shown here this symbol is called a cat Kat zero and Cat one this is notation from quantum mechanics it's",
    "start": "547480",
    "end": "553519"
  },
  {
    "text": "called a bracket notation or even better draak notation after Paul D who I think",
    "start": "553519",
    "end": "560519"
  },
  {
    "text": "the third greatest scientist that this country has ever produced right after uh",
    "start": "560519",
    "end": "565920"
  },
  {
    "text": "Newton Maxwell so this is K zero this is K one",
    "start": "565920",
    "end": "571320"
  },
  {
    "text": "and a state of a cube is actually a vector and so basically direct notation allows us to write vectors in a short",
    "start": "571320",
    "end": "577600"
  },
  {
    "text": "hand in a shorthand fashion and so these are really just vectors but fundamentally if we stop here basically",
    "start": "577600",
    "end": "584560"
  },
  {
    "text": "what we've done is we've reconstructed classical Computing on a quantum computer right because I mean there's",
    "start": "584560",
    "end": "591120"
  },
  {
    "text": "this oneto one correspondence between the observable States and and the bit value zero and bit value one so you can",
    "start": "591120",
    "end": "597920"
  },
  {
    "text": "think of quantum computation as being a superet conceptually of classical",
    "start": "597920",
    "end": "602959"
  },
  {
    "text": "computation but of course we will not stop here right because a cubit can also be in a superposition State and the",
    "start": "602959",
    "end": "610480"
  },
  {
    "text": "superposition state is something that can be visualized for a single cubid on a block sphere so this thing is called the block sphere it's called block",
    "start": "610480",
    "end": "617160"
  },
  {
    "text": "sphere because Felix block used it for the first time but it's just a sphere there's nothing special about it and so",
    "start": "617160",
    "end": "623120"
  },
  {
    "text": "we start here at the center and if I draw a vector that points to the North Pole and another Vector that point point",
    "start": "623120",
    "end": "629480"
  },
  {
    "text": "to the South Pole those would be my States K 0 and K 1 but I can actually",
    "start": "629480",
    "end": "634920"
  },
  {
    "text": "draw from the center towards any other point on the surface of the sphere in fact I can come up with infinitely many",
    "start": "634920",
    "end": "640160"
  },
  {
    "text": "of such vectors and actually all those other vectors are also valid states of a cubit",
    "start": "640160",
    "end": "645720"
  },
  {
    "text": "they are simply different ways of mixing the states k0o and K one together so mathematically speaking this is a linear",
    "start": "645720",
    "end": "652000"
  },
  {
    "text": "combination of both k0 and K one right now the thing with superposition",
    "start": "652000",
    "end": "659560"
  },
  {
    "text": "is that we can never see a super position right so we can only observe",
    "start": "659560",
    "end": "664720"
  },
  {
    "text": "the observable States that's why they are called observable States so we cannot ever walk up to a cubit and say",
    "start": "664720",
    "end": "669920"
  },
  {
    "text": "hey Cubit which state you are in and then it will sayk thanks for asking I'm in a super position it will always say",
    "start": "669920",
    "end": "675360"
  },
  {
    "text": "I'm in a state K zero and C one these observable States right I mean there can be other pairs of observable States but",
    "start": "675360",
    "end": "682360"
  },
  {
    "text": "this is is not relevant for us so so now this this has a lot of like",
    "start": "682360",
    "end": "689760"
  },
  {
    "text": "really strange uh philosophical consequences because if the Cubit is in a superposition State then it is",
    "start": "689760",
    "end": "696240"
  },
  {
    "text": "effectively in a this sort of mixed state of both of its possible outcomes",
    "start": "696240",
    "end": "701680"
  },
  {
    "text": "of of both of its possible values right and this then leads to many",
    "start": "701680",
    "end": "707160"
  },
  {
    "text": "philosophical paradoxes of course the most famous being the the the case of the cat of irn shinger that was both",
    "start": "707160",
    "end": "713600"
  },
  {
    "text": "dead and alive at the same time right if you consider being dead and being alive to be the two observable St State then",
    "start": "713600",
    "end": "720279"
  },
  {
    "text": "when the cat is in a superposition of both then it is really both dead and alive at the same time it's not that we",
    "start": "720279",
    "end": "725800"
  },
  {
    "text": "don't know whether it's leaving or or not but it's really in this mixed state right so we will not resolve this",
    "start": "725800",
    "end": "731680"
  },
  {
    "text": "Paradox here today but I just wanted to highlight it because quantum mechanics is",
    "start": "731680",
    "end": "736959"
  },
  {
    "text": "weird now when the program evolves like what happens in a in a computer program like at the highest possible level in a",
    "start": "736959",
    "end": "743880"
  },
  {
    "text": "classical program everything can be reduced to just operations that happen on Beats right right so you have an",
    "start": "743880",
    "end": "750560"
  },
  {
    "text": "input into your program there's a bunch of bits then you have the execution of a program at which point the bits get shuffled around and then you have the",
    "start": "750560",
    "end": "757320"
  },
  {
    "text": "output of the program that is also represented by a bunch of bits at at any point we can actually",
    "start": "757320",
    "end": "763920"
  },
  {
    "text": "attach a debugger right and inspect the state of the program and inspect the state of a CPU registry and and and and",
    "start": "763920",
    "end": "772399"
  },
  {
    "text": "maybe even inspect the hardware itself and the voltage there everything is fully transparent right now in a quantum",
    "start": "772399",
    "end": "779279"
  },
  {
    "text": "computer is different like the input phase is sort of similar because if I",
    "start": "779279",
    "end": "784399"
  },
  {
    "text": "want to input something into a quantum computer then I I'm really inputting my",
    "start": "784399",
    "end": "789800"
  },
  {
    "text": "own classical information right and our classical information is 01 base so I would just map this two states K 0 and K",
    "start": "789800",
    "end": "795800"
  },
  {
    "text": "one and let quantum computer start its work and then the output is also sort of",
    "start": "795800",
    "end": "800880"
  },
  {
    "text": "similar to the classical output because as we said I mean we can only observe the cubits to be in a state k0o",
    "start": "800880",
    "end": "808120"
  },
  {
    "text": "and K 1 in which case we can then map this to classical beats and basically then that phas is is the same but the",
    "start": "808120",
    "end": "814399"
  },
  {
    "text": "execution that's fundamentally different because at this moment the the cubits inside of a quantum computer they can",
    "start": "814399",
    "end": "821000"
  },
  {
    "text": "explore this superposition State and they can also take advantage of other Quantum effects which um which we don't",
    "start": "821000",
    "end": "827360"
  },
  {
    "text": "need to talk about today but the point here is that if I have three three cubits that I started the calculation",
    "start": "827360",
    "end": "834399"
  },
  {
    "text": "with right then for three cubits I can have eight",
    "start": "834399",
    "end": "839680"
  },
  {
    "text": "possible outcomes right it's 2 to the^ three so effectively here during the execution of this program I can have a",
    "start": "839680",
    "end": "846399"
  },
  {
    "text": "superposition of all these eight possible outcomes simultaneously and this is what we call",
    "start": "846399",
    "end": "852360"
  },
  {
    "text": "Quantum parallelism so quantum computers can take algorithmic advantage of superposition and this is where some of",
    "start": "852360",
    "end": "859079"
  },
  {
    "text": "their possible computational advantages can can come from the way you can think",
    "start": "859079",
    "end": "864120"
  },
  {
    "text": "about this I mean this is not a not a perfect way to maybe describe this",
    "start": "864120",
    "end": "869600"
  },
  {
    "text": "because that effect is super subtle but it's a good way to at least begin thinking about this is if you consider a",
    "start": "869600",
    "end": "875759"
  },
  {
    "text": "function f ofx right now on a classical computer if you work with a function f ofx you basically have to pass different",
    "start": "875759",
    "end": "882440"
  },
  {
    "text": "values of X separately right like f of zero and then pass one and then maybe",
    "start": "882440",
    "end": "887759"
  },
  {
    "text": "pass two and three and so on now on on a quantum computer you can actually create a superposition of all the possible",
    "start": "887759",
    "end": "892959"
  },
  {
    "text": "values of X and pass that into a function and try to calculate from there and so this is is almost the opp",
    "start": "892959",
    "end": "899120"
  },
  {
    "text": "opposite and and here's why so if you consider so this is the input into a",
    "start": "899120",
    "end": "904440"
  },
  {
    "text": "quantum computer and in this case we have I believe five cubits and then the input goes through",
    "start": "904440",
    "end": "911079"
  },
  {
    "text": "an an an a set of H Gates so these Gates create a superp position in the quantum computer and what now happens is that",
    "start": "911079",
    "end": "918240"
  },
  {
    "text": "each Cubit enters the superposition state so if I have five cubits I have two to the power five which is 32",
    "start": "918240",
    "end": "924639"
  },
  {
    "text": "possible outcomes right like basically the the the calculation of of this",
    "start": "924639",
    "end": "930120"
  },
  {
    "text": "program would yield a number between maybe a zero and 31 and so now I have",
    "start": "930120",
    "end": "935319"
  },
  {
    "text": "the superposition of all these possible values existing out there in the vector space of this Quantum program and then",
    "start": "935319",
    "end": "941680"
  },
  {
    "text": "the trick for writing a Quantum algorithm is to steer the evolution of this program in such a way that the",
    "start": "941680",
    "end": "948040"
  },
  {
    "text": "correct result the one that the algorithm is supposed to reach will get Amplified and the others will get sort",
    "start": "948040",
    "end": "954519"
  },
  {
    "text": "of cancelled out or or pruned and that's the reason why I this is sort of opposite to what classical",
    "start": "954519",
    "end": "961240"
  },
  {
    "text": "computers do because you are not uh you know searching for the",
    "start": "961240",
    "end": "967240"
  },
  {
    "text": "solution but you're eliminating the the incorrect Solutions if you will and that",
    "start": "967240",
    "end": "972360"
  },
  {
    "text": "is basically the way you should think about Quantum computations so now this leads us to RSA",
    "start": "972360",
    "end": "977880"
  },
  {
    "text": "and so RSA is one of the most widely used public private crypto systems in the world and the the security of RSA",
    "start": "977880",
    "end": "984560"
  },
  {
    "text": "relies on the factoring problem of of of of large numbers",
    "start": "984560",
    "end": "990319"
  },
  {
    "text": "and you know RSA is maybe not as widely used today as it was in the past for",
    "start": "990319",
    "end": "995800"
  },
  {
    "text": "example in TLS 1.3 you cannot even use RSA for key key exchange anymore but",
    "start": "995800",
    "end": "1001240"
  },
  {
    "text": "it's a good example because the mathematics are actually not very complicated so I like to use it uh as an",
    "start": "1001240",
    "end": "1006519"
  },
  {
    "text": "as an example of how quantum computers can actually attack uh classic",
    "start": "1006519",
    "end": "1011680"
  },
  {
    "text": "cryptography so this is how RSA works at its heart right like you start by picking two huge prime numbers p and Q",
    "start": "1011680",
    "end": "1018920"
  },
  {
    "text": "and you also pick an exponent e although that is almost always uh uh",
    "start": "1018920",
    "end": "1024520"
  },
  {
    "text": "65537 so it's almost always a constant and then what you do is you multiply P",
    "start": "1024520",
    "end": "1029959"
  },
  {
    "text": "by q and you get an n and you publish that n and you also publish your e and",
    "start": "1029959",
    "end": "1035918"
  },
  {
    "text": "basically the N now becomes the public key and the p and Q stay private and they make up the private key and so if",
    "start": "1035919",
    "end": "1043558"
  },
  {
    "text": "somebody would like to encrypt something using your public key what they do is they follow this formula they take them",
    "start": "1043559",
    "end": "1049000"
  },
  {
    "text": "message that they are trying to encrypt they convert it into binary which basically gives it a numerical format",
    "start": "1049000",
    "end": "1055400"
  },
  {
    "text": "they raise it to the power e and then they calculate modulus with n and effectively what this means is that n is",
    "start": "1055400",
    "end": "1061440"
  },
  {
    "text": "like the only variable here and that is the public key and so that produces a cipher text and now you can always",
    "start": "1061440",
    "end": "1067440"
  },
  {
    "text": "recover the message out of the cipher text provided you have access to p and Q so you use a different formula uh but",
    "start": "1067440",
    "end": "1074559"
  },
  {
    "text": "the p and Qs are there so if we now sort of reduce this to the bare minimum the security of the whole thing boils down",
    "start": "1074559",
    "end": "1080080"
  },
  {
    "text": "to the fact that if you know n you will not be able to find the p and the",
    "start": "1080080",
    "end": "1085360"
  },
  {
    "text": "Q and so here is a a Json web Keys document that is published by Google as",
    "start": "1085360",
    "end": "1090600"
  },
  {
    "text": "part of the IDC protocol right so if your application is consuming uh tokens issued by Google you",
    "start": "1090600",
    "end": "1097600"
  },
  {
    "text": "can go to this URL fetch the public information about the the keys that are used to sign this token and then you can",
    "start": "1097600",
    "end": "1104720"
  },
  {
    "text": "validate this token and you can see here there is an N actually there are two keys but there's an n and this is the E",
    "start": "1104720",
    "end": "1110280"
  },
  {
    "text": "and it's the same here this is actually 65537 and this is the",
    "start": "1110280",
    "end": "1116080"
  },
  {
    "text": "n so effectively if I now have the technology that allows me to take this n",
    "start": "1116080",
    "end": "1122840"
  },
  {
    "text": "and find out the values of p and Q as we said here then I'll be able to self sign",
    "start": "1122840",
    "end": "1128960"
  },
  {
    "text": "any Google token right like I will be able to impersonate any Google user and",
    "start": "1128960",
    "end": "1134320"
  },
  {
    "text": "uh and of course that would be a sort of a devastating attack on Google if you think about this but of course if I have",
    "start": "1134320",
    "end": "1140720"
  },
  {
    "text": "the technology that allows me to do that then I have much better things to attack than Google right let's probably go to my bank first or maybe not to my B maybe",
    "start": "1140720",
    "end": "1148200"
  },
  {
    "text": "to your bank but you get the point right yeah so let's now travel to year",
    "start": "1148200",
    "end": "1155200"
  },
  {
    "text": "1994 and this is cool because in year 1994 there were no quantum computers",
    "start": "1155200",
    "end": "1161919"
  },
  {
    "text": "they were purely theoretical devices and then there was a computational model that was developed",
    "start": "1161919",
    "end": "1167720"
  },
  {
    "text": "over the 19 1980s um predominantly by by by David",
    "start": "1167720",
    "end": "1174039"
  },
  {
    "text": "deuts at Cambridge where so no quantum computers purely",
    "start": "1174039",
    "end": "1181520"
  },
  {
    "text": "theoretical devices there was a computational models also purely theoretical and then Peter sh from IBM",
    "start": "1181520",
    "end": "1187640"
  },
  {
    "text": "at that time now with MIT he developed this theoretical algorithm for this theoretical computational model for",
    "start": "1187640",
    "end": "1193559"
  },
  {
    "text": "these theoretical devices where he said okay if all these things fall into place",
    "start": "1193559",
    "end": "1199799"
  },
  {
    "text": "then we can achieve pretty much exponential speed up when it comes to integer factorization right and so lo",
    "start": "1199799",
    "end": "1206960"
  },
  {
    "text": "and behold years later quantum computers became reality we can actually now try to run this algorithm there and it",
    "start": "1206960",
    "end": "1213520"
  },
  {
    "text": "actually works and we can only run it for very small numbers at the moment but it it is",
    "start": "1213520",
    "end": "1220000"
  },
  {
    "text": "correct so how would you go about attacking RSA well you follow a following recipe you start by picking a",
    "start": "1220000",
    "end": "1226640"
  },
  {
    "text": "number a that is smaller than n that is relatively prime to n and then you consider a function that looks like this",
    "start": "1226640",
    "end": "1232720"
  },
  {
    "text": "a to the^ X modulus n for different X's being integers and and you plot this function",
    "start": "1232720",
    "end": "1241000"
  },
  {
    "text": "then right and you sort of observe how it looks like and at some point you will",
    "start": "1241000",
    "end": "1246320"
  },
  {
    "text": "recognize hopefully that at certain intervals it starts to repeat itself and basically",
    "start": "1246320",
    "end": "1253200"
  },
  {
    "text": "that repetition interval is the period of the function this is R once you have R you can go to the this very simple",
    "start": "1253200",
    "end": "1259280"
  },
  {
    "text": "formula and you can actually calculate the candidates for p and Q so this is",
    "start": "1259280",
    "end": "1264360"
  },
  {
    "text": "greatest common divisor algorithm this is something that we have known since the time of ancient Greece this is also",
    "start": "1264360",
    "end": "1269480"
  },
  {
    "text": "very easy so one and three are possible to be done easily on a classical computer it's the number two that is",
    "start": "1269480",
    "end": "1276279"
  },
  {
    "text": "prohibitively expensive in fact it's so expensive that we think that you know on the largest supercomputers it given the",
    "start": "1276279",
    "end": "1283400"
  },
  {
    "text": "sizes of of integers used in RSA it will take Millions maybe hundreds of millions of computations years on on the biggest",
    "start": "1283400",
    "end": "1290159"
  },
  {
    "text": "super computers so let's look at an example let's Factor 15 right so let's now",
    "start": "1290159",
    "end": "1295760"
  },
  {
    "text": "assume that Google switched to 4bit RSA by accident and published n equal 15",
    "start": "1295760",
    "end": "1302279"
  },
  {
    "text": "right so how do we attack it well we said a to be 13 because it's smaller",
    "start": "1302279",
    "end": "1307440"
  },
  {
    "text": "than it's smaller than than than n and it's relatively prime doesn't have to be that but that's what we said and then we",
    "start": "1307440",
    "end": "1314919"
  },
  {
    "text": "basically plot the function right so if this is 13 so this 13 to the power X modulus n so that function is already",
    "start": "1314919",
    "end": "1321039"
  },
  {
    "text": "plotted here and you can see clearly that it actually repeats itself at intervals of",
    "start": "1321039",
    "end": "1327159"
  },
  {
    "text": "four and then what we do is we take the r and we substitute it into this formula",
    "start": "1327159",
    "end": "1332960"
  },
  {
    "text": "right so this is now a squ a is 13 so this is 13 squ 169 + 1 and here is 169",
    "start": "1332960",
    "end": "1341159"
  },
  {
    "text": "minus 1 and so basically we have to find the greatest common divisor between 170",
    "start": "1341159",
    "end": "1347120"
  },
  {
    "text": "and 15 and 68 and 15 and those are five and three and these are really the",
    "start": "1347120",
    "end": "1352400"
  },
  {
    "text": "factors of 15 right so this is a super simple example now I mean before we get any",
    "start": "1352400",
    "end": "1358240"
  },
  {
    "text": "further I mean if you have any 4bit RSA security you should really run home and",
    "start": "1358240",
    "end": "1363520"
  },
  {
    "text": "update because it has just been compromised but but uh but you get the",
    "start": "1363520",
    "end": "1369039"
  },
  {
    "text": "idea right so if we now scale this up then you know this second step becomes",
    "start": "1369039",
    "end": "1374240"
  },
  {
    "text": "really prohibitively expensive and so we'll never actually be able to do this for the larger numbers",
    "start": "1374240",
    "end": "1380320"
  },
  {
    "text": "now what sh realized is that basically this problem here is roughly a problem",
    "start": "1380320",
    "end": "1385679"
  },
  {
    "text": "from signal processing right and in Signal processing there exists a technique called fast for year transform",
    "start": "1385679",
    "end": "1392760"
  },
  {
    "text": "which um can be actually used here for order finding and on a quantum computer",
    "start": "1392760",
    "end": "1397919"
  },
  {
    "text": "we have a Quantum variant of it called Quantum forer transform and this is basically at the heart of shes algorithm",
    "start": "1397919",
    "end": "1403080"
  },
  {
    "text": "I mean shes algorithm is actually a hybrid algorithm so basically the step one and step three run on the classical",
    "start": "1403080",
    "end": "1409279"
  },
  {
    "text": "computer and then step two runs on the quantum computer and uh and so thanks to the",
    "start": "1409279",
    "end": "1415679"
  },
  {
    "text": "quantum for transform actually there's this um almost exponential speed up but now you might say but well but",
    "start": "1415679",
    "end": "1423640"
  },
  {
    "text": "this is RSA this is anyway nobody wants to use it maybe for some tokens in TLS we don't use anymore uh RSA and that",
    "start": "1423640",
    "end": "1431080"
  },
  {
    "text": "is a valid objection actually in TLS 1.3 it is forbidden and we use elliptic curve cryptography actually a lot more",
    "start": "1431080",
    "end": "1438880"
  },
  {
    "text": "uh but as it turns out actually and this was already in it's not like somebody realiz realized it later I mean it was",
    "start": "1438880",
    "end": "1445240"
  },
  {
    "text": "in the original shorts paper he basically showed that you can actually use the same algorithm to actually",
    "start": "1445240",
    "end": "1451960"
  },
  {
    "text": "compute discrete logarithm over elliptic curve or on elliptic curves on over Prime fields which is basically the same",
    "start": "1451960",
    "end": "1458000"
  },
  {
    "text": "problem fundamentally it's about this order finding and you can equally easy",
    "start": "1458000",
    "end": "1463400"
  },
  {
    "text": "attack elliptic curve cryptography with with this algorithm in fact you can",
    "start": "1463400",
    "end": "1468440"
  },
  {
    "text": "actually at a alytic curve cryptography even easier just the mathematics is more complicated but fundamentally in terms",
    "start": "1468440",
    "end": "1474360"
  },
  {
    "text": "of resources so this is a paper from Microsoft from I think maybe seven years back where they basically show that the",
    "start": "1474360",
    "end": "1481080"
  },
  {
    "text": "amount of resources is actually lower in a quantum computer if You' like to attack elliptic curve cryptography then",
    "start": "1481080",
    "end": "1486760"
  },
  {
    "text": "you'd like to attack RSA now the reason why we want to use elliptic curve cryptography everywhere right now over",
    "start": "1486760",
    "end": "1494240"
  },
  {
    "text": "RSA is is different because with RSA we have the sort of long LIF session keys",
    "start": "1494240",
    "end": "1500360"
  },
  {
    "text": "right so if you compromise the private key um then then you can decrypt a huge",
    "start": "1500360",
    "end": "1506279"
  },
  {
    "text": "amount of information right with elliptic Cur cryptography you can sort of derive these things much more often",
    "start": "1506279",
    "end": "1511520"
  },
  {
    "text": "so that is fundamentally the reason why we want to use elliptic Cur cryptography now the question is of",
    "start": "1511520",
    "end": "1518120"
  },
  {
    "text": "course how realistic this is or what are the timelines for this attack now",
    "start": "1518120",
    "end": "1523840"
  },
  {
    "text": "basically where we are at the moment with quantum computers is that they are",
    "start": "1523840",
    "end": "1529320"
  },
  {
    "text": "small and they make a lot of Errors right uh we think that maybe this year maybe",
    "start": "1529320",
    "end": "1539039"
  },
  {
    "text": "next year we will reach a point where there will be a quantum computer that actually can no longer be efficiently",
    "start": "1539039",
    "end": "1545200"
  },
  {
    "text": "simulated on on classical Hardware even taking the largest supercomputers in the",
    "start": "1545200",
    "end": "1550840"
  },
  {
    "text": "world and of course this boils down to the amount of cubits that you'd like to simulate right because every time you",
    "start": "1550840",
    "end": "1557000"
  },
  {
    "text": "add an additional cuit the vector space of the program doubles right so if you have three cubits you",
    "start": "1557000",
    "end": "1563320"
  },
  {
    "text": "have eight possible outcomes if you have four cubits you have 16 possible outcomes and so on every time you add",
    "start": "1563320",
    "end": "1569000"
  },
  {
    "text": "the next one it actually doubles right so it grows exponentially and so by the",
    "start": "1569000",
    "end": "1574760"
  },
  {
    "text": "time you reach about 32 cubits that you like to simulate you run out of memory on like a consumer devices and by the",
    "start": "1574760",
    "end": "1581279"
  },
  {
    "text": "time you reach into 50s of cubits then you run out of memory on the largest super Computing clusters in the world",
    "start": "1581279",
    "end": "1588360"
  },
  {
    "text": "now by the time you reach 260 Cubit actually the number is so large is",
    "start": "1588360",
    "end": "1595399"
  },
  {
    "text": "actually larger than the amount of atoms in the entire observable universe which basically means that at that point we",
    "start": "1595399",
    "end": "1600559"
  },
  {
    "text": "would have to convert the whole universe into memory to be able to simulate such a quantum computer now we have good",
    "start": "1600559",
    "end": "1606000"
  },
  {
    "text": "reasons to believe that we will scale them up into thousands maybe millions of cubits but we will see so in any case",
    "start": "1606000",
    "end": "1613720"
  },
  {
    "text": "the global risk Institute does this annual survey of like top Quantum computing uh scientists that are",
    "start": "1613720",
    "end": "1619720"
  },
  {
    "text": "involved in the field just to gauge their their their feelings about where",
    "start": "1619720",
    "end": "1624760"
  },
  {
    "text": "the field is and one of the questions there is very relevant for us today so",
    "start": "1624760",
    "end": "1630240"
  },
  {
    "text": "when when do people think that RSA will be broken and just about everybody agree",
    "start": "1630240",
    "end": "1635520"
  },
  {
    "text": "that this will happen in 30 years right about half of the people think that this will happen in about 15 years and then",
    "start": "1635520",
    "end": "1642360"
  },
  {
    "text": "some optimists think that will happen by the end of this decade so now I'll let you draw your own",
    "start": "1642360",
    "end": "1648600"
  },
  {
    "text": "your own conclusions from this probably the first thing that jumps to mind when you look at this is",
    "start": "1648600",
    "end": "1655200"
  },
  {
    "text": "probably like I don't care right like it's so far away uh the counter argument",
    "start": "1655200",
    "end": "1660919"
  },
  {
    "text": "to this would be that it's already too late because of course if you are a a",
    "start": "1660919",
    "end": "1666320"
  },
  {
    "text": "Super Evil threat actor like a state actor you harvest now and you come back to this data later right when you when",
    "start": "1666320",
    "end": "1674159"
  },
  {
    "text": "you have the capacity to decrypt it now then you have to Define your thread",
    "start": "1674159",
    "end": "1679679"
  },
  {
    "text": "model and is it really important that some data comes out with a 20year delay",
    "start": "1679679",
    "end": "1684799"
  },
  {
    "text": "right but maybe some data should never become public right in fact if it's promised to be encrypted and save then",
    "start": "1684799",
    "end": "1691000"
  },
  {
    "text": "maybe it should never become public so that is really this question right like uh at which point do we switch to post",
    "start": "1691000",
    "end": "1697559"
  },
  {
    "text": "Quantum cryptography and probably we should switch as soon as possible so asymmetric cryptography is",
    "start": "1697559",
    "end": "1704960"
  },
  {
    "text": "basically doomed because there is really no alternative or there was no alternative until",
    "start": "1704960",
    "end": "1710919"
  },
  {
    "text": "recently what about symmetric cryptography and for that we we have another paper from 1996 by love",
    "start": "1710919",
    "end": "1718559"
  },
  {
    "text": "Grover and in this paper he showed that you can have a Quantum search algorithm",
    "start": "1718559",
    "end": "1724080"
  },
  {
    "text": "through an unsorted data set so basically finding a needle in a Hast stack with a",
    "start": "1724080",
    "end": "1729840"
  },
  {
    "text": "brute force with a quadratic speed up now a quadratic speed up is",
    "start": "1729840",
    "end": "1735240"
  },
  {
    "text": "actually something that is super impressive if you think think about this because it means that if you need 100",
    "start": "1735240",
    "end": "1740519"
  },
  {
    "text": "steps on a classical computer you only need 10 steps on a quantum computer to do this but the thing is that it's",
    "start": "1740519",
    "end": "1748880"
  },
  {
    "text": "impressive when you go from 100 to 10 but if you have a huge number of steps",
    "start": "1748880",
    "end": "1754000"
  },
  {
    "text": "and then you achieve a quadratic speed up so you take a square root of that huge number it's still a huge number so",
    "start": "1754000",
    "end": "1759960"
  },
  {
    "text": "this is a technique that we can use to Brute Force AES for example but the thing is that it doesn't",
    "start": "1759960",
    "end": "1766360"
  },
  {
    "text": "really help much right because classically to brute force a 256 you need 2 to the^ 256 steps now with a",
    "start": "1766360",
    "end": "1773679"
  },
  {
    "text": "quadratic speed up you only need 2 to the power 128 steps and so that is great",
    "start": "1773679",
    "end": "1780559"
  },
  {
    "text": "but uh but it's also still very difficult and so you can completely counter the computational advantage of",
    "start": "1780559",
    "end": "1786840"
  },
  {
    "text": "quantum computers here by simply doubling your key size and so here's the summary of",
    "start": "1786840",
    "end": "1792519"
  },
  {
    "text": "everything we talk about so far right this is not an exhaustive list of of of of algorithm it's just sort of to to to",
    "start": "1792519",
    "end": "1799240"
  },
  {
    "text": "to highlight the general direction that we should be thinking about stuff if you have symmetric algorithms then they",
    "start": "1799240",
    "end": "1805360"
  },
  {
    "text": "should be considered to be half as powerful against quantum computers right so basically as 128 should no longer be",
    "start": "1805360",
    "end": "1813279"
  },
  {
    "text": "used and then if you have asymmetric encryption then uh you should consider all of that to be",
    "start": "1813279",
    "end": "1820720"
  },
  {
    "text": "vulnerable and so this leads us to postquantum cryptography so in 2016 the the the",
    "start": "1820760",
    "end": "1828360"
  },
  {
    "text": "National Institute of Standards and technology and National here means the US they they announced this post Quantum",
    "start": "1828360",
    "end": "1835399"
  },
  {
    "text": "crypto competition right and the goal was to develop a new algorithms that would actually be resistance to Quantum",
    "start": "1835399",
    "end": "1841440"
  },
  {
    "text": "attacks and in 2022 they announced the the the four",
    "start": "1841440",
    "end": "1846799"
  },
  {
    "text": "winners and so they have some of the best names that you will ever encounter",
    "start": "1846799",
    "end": "1852840"
  },
  {
    "text": "in technology like kyber and the lithium right I mean these are clear Star Wars and Star Trek references",
    "start": "1852840",
    "end": "1859600"
  },
  {
    "text": "uh only one of them uh kyber I mean you can see that it has a different Emoji I",
    "start": "1859600",
    "end": "1865559"
  },
  {
    "text": "pa a lot of attention to creating these slides so this is the only one that can actually be used for key exchange so",
    "start": "1865559",
    "end": "1872519"
  },
  {
    "text": "this is the only one that we can actually put into TLS the others are just signature algorithms so we can use",
    "start": "1872519",
    "end": "1878200"
  },
  {
    "text": "them for signatures and three of them kyber delum and Falcon are actually based on the",
    "start": "1878200",
    "end": "1883279"
  },
  {
    "text": "branch of mathematics called ltis algebra and we had a slide where I try to explain the RSA security a little bit",
    "start": "1883279",
    "end": "1890240"
  },
  {
    "text": "so I wanted to include a slide about ltis algebra as well it this so-called learning with errors problem this is",
    "start": "1890240",
    "end": "1897440"
  },
  {
    "text": "vastly simplified because the mathematics is much more complicated but effectively it Bo boils down to this you",
    "start": "1897440",
    "end": "1902760"
  },
  {
    "text": "start by picking two vectors in this latice space and uh calculating a DOT product",
    "start": "1902760",
    "end": "1909240"
  },
  {
    "text": "between them is something super easy and so basically this gives you a number and",
    "start": "1909240",
    "end": "1914399"
  },
  {
    "text": "then you introduce an an intentional error right so this is uh this is",
    "start": "1914399",
    "end": "1920559"
  },
  {
    "text": "something that that you have to choose from a specific distribution but it's sort of intentionally now skewing the",
    "start": "1920559",
    "end": "1927240"
  },
  {
    "text": "result and then you pick the the modulus for for the arithmetic which basically sort of confines it to the specific",
    "start": "1927240",
    "end": "1933559"
  },
  {
    "text": "range because with modulus it sort of wraps around itself mathematically and then uh and then you",
    "start": "1933559",
    "end": "1939720"
  },
  {
    "text": "get a t and this is effectively a number and so what you do is you publish the T the Q and the a but the S Vector you",
    "start": "1939720",
    "end": "1945720"
  },
  {
    "text": "keep private and this is this is the private key effectively and the strength of the whole thing boils down to this",
    "start": "1945720",
    "end": "1951880"
  },
  {
    "text": "that if you know T and A and and Q you will not be able to recover the original s and primarily because of this",
    "start": "1951880",
    "end": "1957880"
  },
  {
    "text": "intentional error that was in introduced and so this is really at the heart of of kyber and and the lithium for example",
    "start": "1957880",
    "end": "1965240"
  },
  {
    "text": "now last year in August 2024 so just what four or five months",
    "start": "1965240",
    "end": "1970360"
  },
  {
    "text": "ago these um three of these algorithm this competition winners were actually standardized as official standards and",
    "start": "1970360",
    "end": "1977840"
  },
  {
    "text": "and so kyber uh um became actually so they all lost their cool names sadly so kyber",
    "start": "1977840",
    "end": "1984440"
  },
  {
    "text": "became mlkm module latis based key encapsulation mechanism standard fips 203 and then the lithium became MLD DSA",
    "start": "1984440",
    "end": "1992279"
  },
  {
    "text": "module latis based digital signature standard fips 204 and the same with Spinx it became fips 205 so I personally",
    "start": "1992279",
    "end": "1999960"
  },
  {
    "text": "continue to call them kyber and the lithium because so much cooler but basically what does it mean",
    "start": "1999960",
    "end": "2005200"
  },
  {
    "text": "that they were standardized I mean it just means that now everybody's encouraged to actually",
    "start": "2005200",
    "end": "2010840"
  },
  {
    "text": "go ahead and Implement that in the software and that is now happening and there is a lot of standardization effort",
    "start": "2010840",
    "end": "2018039"
  },
  {
    "text": "across the industry ongoing around these tops so the major thing of course is is",
    "start": "2018039",
    "end": "2023679"
  },
  {
    "text": "is TLS right so there is a draft for for this is not published yet as as final uh",
    "start": "2023679",
    "end": "2031880"
  },
  {
    "text": "standard but it's been ongoing actually even before this ml cam standardization",
    "start": "2031880",
    "end": "2038000"
  },
  {
    "text": "just for kyber uh so the latest one was published notice the date here I don't know why",
    "start": "2038000",
    "end": "2044039"
  },
  {
    "text": "but somebody did this on the 25th of December so this is the latest state of",
    "start": "2044039",
    "end": "2050040"
  },
  {
    "text": "it and this basically describes how postquantum cryptography should be integrated into TLS 1.3 and this is",
    "start": "2050040",
    "end": "2057000"
  },
  {
    "text": "actually a hybrid algorithm so it actually does both uh elliptic curve Dy",
    "start": "2057000",
    "end": "2062919"
  },
  {
    "text": "Helman and kyber ml CM at the same time like it actually does both of them and",
    "start": "2062919",
    "end": "2069200"
  },
  {
    "text": "then takes the um the the the secret and",
    "start": "2069200",
    "end": "2074520"
  },
  {
    "text": "then does the the key derivation over both of them and produces one final one and the reason why it's done like this",
    "start": "2074520",
    "end": "2081320"
  },
  {
    "text": "is because there is still a a bit of a worry that you know we are trying to",
    "start": "2081320",
    "end": "2087599"
  },
  {
    "text": "make things better and we will make them worse by switching purely to kyber because with elliptic Cur cryptography",
    "start": "2087599",
    "end": "2094440"
  },
  {
    "text": "and RSA there's like 50 years almost of experience when when it comes to trying to attack it and also implementing it",
    "start": "2094440",
    "end": "2102359"
  },
  {
    "text": "because actually the problems can come from both sides so somebody might suddenly come up with a with a wonderful",
    "start": "2102359",
    "end": "2108720"
  },
  {
    "text": "new technique to actually attack kyber maybe even on classical computer uh this is actually highly unlikely at this",
    "start": "2108720",
    "end": "2115040"
  },
  {
    "text": "stage because that algorithm has been out there for now almost a decade uh but the second problem is",
    "start": "2115040",
    "end": "2123920"
  },
  {
    "text": "actually probably bigger that the implementation might contain error right and especially as the the lower",
    "start": "2123920",
    "end": "2130480"
  },
  {
    "text": "level stuff like if you consider like op SSL for example the algorithm implementation there would be in C right",
    "start": "2130480",
    "end": "2137280"
  },
  {
    "text": "and this is not a language that really is very forgiving with mistakes and so the mathematics might be sound but there",
    "start": "2137280",
    "end": "2144040"
  },
  {
    "text": "might be a at an implementation issue at at some level but in any case this is",
    "start": "2144040",
    "end": "2149319"
  },
  {
    "text": "Now supported by all the major browsers uh there is one notable browser",
    "start": "2149319",
    "end": "2155160"
  },
  {
    "text": "that is missing here that is of course the internet Explorer of today Safari right but all the other browsers they",
    "start": "2155160",
    "end": "2161440"
  },
  {
    "text": "support by default this uh post Quantum hybrid defy Helman uh kyber uh TLS 1.3",
    "start": "2161440",
    "end": "2170520"
  },
  {
    "text": "key agreement protocol there's actually a nice website",
    "start": "2170520",
    "end": "2176160"
  },
  {
    "text": "um this one it's PQ cloudfare research.com you can basically go there",
    "start": "2176160",
    "end": "2181640"
  },
  {
    "text": "and open it and it will tell you whether you are using a browser that supports postquantum cryptography and notice that",
    "start": "2181640",
    "end": "2188520"
  },
  {
    "text": "if I open this in Safari right so it says this is not post Quantum secure and here is post Quantum secure now this",
    "start": "2188520",
    "end": "2195920"
  },
  {
    "text": "used to be a flag but you can now it's enabled by default in fact in all these browsers now is there any overhead here",
    "start": "2195920",
    "end": "2203640"
  },
  {
    "text": "with uh with kyber there is quite some actually so this is just a comparison",
    "start": "2203640",
    "end": "2209920"
  },
  {
    "text": "between various algorithms and and ml cam so kyber comes",
    "start": "2209920",
    "end": "2215119"
  },
  {
    "text": "in like three strength levels and 768 is the one that is used uh by default and",
    "start": "2215119",
    "end": "2221040"
  },
  {
    "text": "you can see here that the the public key and the cipher text so basically this is what this is what comes down from the server and then the cipher text goes",
    "start": "2221040",
    "end": "2227640"
  },
  {
    "text": "back to the server from the client so you have two kilobytes of overhead of data that needs to travel during the the",
    "start": "2227640",
    "end": "2236160"
  },
  {
    "text": "TLs handshake which is much much less uh which is much much more than what",
    "start": "2236160",
    "end": "2241720"
  },
  {
    "text": "happens in in D Helman for example uh because they're actually I mean it's different because the size C",
    "start": "2241720",
    "end": "2247640"
  },
  {
    "text": "Forex doesn't travel back and so it's difficult to compare but it's less less data like a lot less",
    "start": "2247640",
    "end": "2254520"
  },
  {
    "text": "actually and so there could be like iot devices for example some older device that might have trouble switching to",
    "start": "2254520",
    "end": "2260440"
  },
  {
    "text": "this because the you know the amount of data that travels during the handshake is just so much",
    "start": "2260440",
    "end": "2266079"
  },
  {
    "text": "larger but on the flip side the algorithm itself for kyber is much quicker to execute then then the",
    "start": "2266079",
    "end": "2272920"
  },
  {
    "text": "calculations that are needed in Dy Helman on elliptic cryptography with Dy Helman and RSA especially so actually",
    "start": "2272920",
    "end": "2279400"
  },
  {
    "text": "computationally you can actually do more operations per second with with with kyber than with these other",
    "start": "2279400",
    "end": "2286880"
  },
  {
    "text": "algorithms now Cloud flare has been actually leading the the adoption when it comes to post Quantum security they",
    "start": "2287160",
    "end": "2294440"
  },
  {
    "text": "already support um this hybrid kyber Dy Helman key exchange already going back",
    "start": "2294440",
    "end": "2301079"
  },
  {
    "text": "to 2022 and uh they actually publish report",
    "start": "2301079",
    "end": "2306200"
  },
  {
    "text": "how much of traffic to you know their servers is is post Quantum protected because they have it enabled on all of",
    "start": "2306200",
    "end": "2312440"
  },
  {
    "text": "their end points by default and basically this is data from 2024 in the beginning of the year there was only",
    "start": "2312440",
    "end": "2318440"
  },
  {
    "text": "about 1% of traffic that was post Quantum uh protected and and now it has",
    "start": "2318440",
    "end": "2324280"
  },
  {
    "text": "grown to to almost one3 now TLS is of course just one thing",
    "start": "2324280",
    "end": "2331200"
  },
  {
    "text": "but of course we have the messaging gaps that are also in need of being postquantum protected and signal there",
    "start": "2331200",
    "end": "2337599"
  },
  {
    "text": "was the first one they adopted kyber into their um into their own they have",
    "start": "2337599",
    "end": "2343240"
  },
  {
    "text": "their own custom protocol and they they they adopted kyber in there and they now call it postquantum extended D",
    "start": "2343240",
    "end": "2349760"
  },
  {
    "text": "Helman and they did it already back in 2023 so signal is a good choice if you",
    "start": "2349760",
    "end": "2355000"
  },
  {
    "text": "are using messaging apps but surprisingly there's an even better alternative now because the Apple has",
    "start": "2355000",
    "end": "2362960"
  },
  {
    "text": "updated their iMessage app or the messages app as it's called to use postquantum cryptography as well",
    "start": "2362960",
    "end": "2369599"
  },
  {
    "text": "they called the protocol pq3 and they actually did this basically it's roughly the same as what signal did except they",
    "start": "2369599",
    "end": "2376599"
  },
  {
    "text": "also introduced ongoing re keying I think it's every 50 messages that they actually generate a new a new key which",
    "start": "2376599",
    "end": "2383160"
  },
  {
    "text": "means of course that if somebody wants to you know capture your traffic and then decrypt the messages they have a lot more things to decrypt rather than",
    "start": "2383160",
    "end": "2391119"
  },
  {
    "text": "just one key so uh these are the two messaging apps that support postquantum",
    "start": "2391119",
    "end": "2397440"
  },
  {
    "text": "cryptography today the others don't so uh these are the ones that probably are",
    "start": "2397440",
    "end": "2403319"
  },
  {
    "text": "better to use if you ask me and now if you're a developer of course you should go and and and",
    "start": "2403319",
    "end": "2409280"
  },
  {
    "text": "Implement stuff right now if you are a net developer then you are out of luck because there's no official support for",
    "start": "2409280",
    "end": "2415280"
  },
  {
    "text": "postquantum cryptography in net there is an an open issue that is currently",
    "start": "2415280",
    "end": "2420720"
  },
  {
    "text": "slotted for Net 10 for adding official support but I'm not sure whether",
    "start": "2420720",
    "end": "2426800"
  },
  {
    "text": "anything that there will happen because there is no no movement there at the moment um so we will see uh but in any",
    "start": "2426800",
    "end": "2434920"
  },
  {
    "text": "case that still has a longer time frame but if you are AET developer you can",
    "start": "2434920",
    "end": "2440400"
  },
  {
    "text": "still use this bouncy castle Library which is actually a library that exists for Java originally but it has a net",
    "start": "2440400",
    "end": "2446599"
  },
  {
    "text": "port and so it's always released sort of in two versions in parallel it has one of this is the official logo but it's",
    "start": "2446599",
    "end": "2452440"
  },
  {
    "text": "one of the coolest logos in software right so that alone is worth giving it a try so we are going to look at some",
    "start": "2452440",
    "end": "2457880"
  },
  {
    "text": "bouncy castle code in a second just this this is the final slide I wanted to include there's this open Quantum save",
    "start": "2457880",
    "end": "2463760"
  },
  {
    "text": "project which is basically like the the center of the universe if you will for postquantum cryptography this is a",
    "start": "2463760",
    "end": "2470319"
  },
  {
    "text": "project that's coordinated by University of waterl in Canada and out of the many things that they do they have the this",
    "start": "2470319",
    "end": "2477040"
  },
  {
    "text": "leap oqs which is a C library that provides implementation of all the the",
    "start": "2477040",
    "end": "2483160"
  },
  {
    "text": "quantum resistant crypto algorithms in C and because it is and in C you can then",
    "start": "2483160",
    "end": "2488640"
  },
  {
    "text": "use it really everywhere and uh since this month they started produce they",
    "start": "2488640",
    "end": "2494440"
  },
  {
    "text": "started to produce bindings for the higher level languages so I saw that there is now Leb oqs with bindings for",
    "start": "2494440",
    "end": "2501480"
  },
  {
    "text": "python for Java for go and I would expect that others will come also soon",
    "start": "2501480",
    "end": "2507520"
  },
  {
    "text": "they also have a open SSL provider for op SSL 3 so we can actually use that",
    "start": "2507520",
    "end": "2513000"
  },
  {
    "text": "together with OP SSL and from what I saw the official implementation in op SSL that is coming now for ML cam will",
    "start": "2513000",
    "end": "2519359"
  },
  {
    "text": "actually be based on Lio Qs so this is really like the the thing that is going to basically you know underpin security",
    "start": "2519359",
    "end": "2527760"
  },
  {
    "text": "of of the whole internet going forward all right so let's now look at",
    "start": "2527760",
    "end": "2534040"
  },
  {
    "text": "some code so we are going to start with this is this large",
    "start": "2534040",
    "end": "2539359"
  },
  {
    "text": "enough yeah good it's too large for me but I have",
    "start": "2539359",
    "end": "2544559"
  },
  {
    "text": "to so we start with the just a simple console application and here we'll just look at some um bouncy castle apis just",
    "start": "2544559",
    "end": "2552319"
  },
  {
    "text": "to be able to follow the flow right so in this case we will do ml cm and we",
    "start": "2552319",
    "end": "2558640"
  },
  {
    "text": "start with step one and so basically we are going to do the same thing that will happen in in in TLS 1.3 if it was purely",
    "start": "2558640",
    "end": "2566680"
  },
  {
    "text": "based on ML cam right so we start with um with this step one which effectively",
    "start": "2566680",
    "end": "2573240"
  },
  {
    "text": "means we are telling bouncy castle we are going to use mlcm 768 and we would like to get a a a pair of keys right so",
    "start": "2573240",
    "end": "2580920"
  },
  {
    "text": "this is the pair of keys for Alice so we now have a public key and a private key and they will be displayed here uh when",
    "start": "2580920",
    "end": "2587240"
  },
  {
    "text": "we run this and of course private key has to stay with Alis and then the public key",
    "start": "2587240",
    "end": "2592520"
  },
  {
    "text": "is something that she can share with Bob now in the Second Step Bob will now use",
    "start": "2592520",
    "end": "2598680"
  },
  {
    "text": "the public key of alleys so this is this one and what he will do is he will initialize the the process called an",
    "start": "2598680",
    "end": "2604720"
  },
  {
    "text": "encapsulation which effectively means that he will generate a new shared secret 32 byte secret and um create a",
    "start": "2604720",
    "end": "2614280"
  },
  {
    "text": "cipher text based on Alice's public key and that's basically what happens here so there's a cipher text and the and the",
    "start": "2614280",
    "end": "2621240"
  },
  {
    "text": "secret I mean these are empty arrays first right but then they are actually filled with this operation so at this",
    "start": "2621240",
    "end": "2626880"
  },
  {
    "text": "point Bob has a secret and so he keeps this secret and but the cipher text he now sends back to Alis and so this is",
    "start": "2626880",
    "end": "2634440"
  },
  {
    "text": "again in the client server scenario this is now the client sending back the cipher text to the server and now in step three what Alice",
    "start": "2634440",
    "end": "2642119"
  },
  {
    "text": "does is is like the reverse right so she will decapsulate now the secret out of the cyer cipher text and in order to do",
    "start": "2642119",
    "end": "2648960"
  },
  {
    "text": "that she has to have the the private key and so she has the private key and then basically she can run the decapsulation",
    "start": "2648960",
    "end": "2655559"
  },
  {
    "text": "and so now she has a secret and that secret should be identical to the secret that Bob has and at that point they can",
    "start": "2655559",
    "end": "2661440"
  },
  {
    "text": "actually switch to symmetric encryption and start sending each other messages that are encrypted with AES to",
    "start": "2661440",
    "end": "2667599"
  },
  {
    "text": "56 so if we run this we should see that it it it it",
    "start": "2667599",
    "end": "2674800"
  },
  {
    "text": "works I mean it has a green checkbox so that proves everything right uh so these are the the keys I",
    "start": "2674800",
    "end": "2681680"
  },
  {
    "text": "mean the keys are really long right that's why they are truncated Now Bob's secret is this and then the cipher text",
    "start": "2681680",
    "end": "2688200"
  },
  {
    "text": "is also long because remember the priv the public key that travels from the server to the client will be over 1",
    "start": "2688200",
    "end": "2694359"
  },
  {
    "text": "kilobyte and also the cipher text will be over 1 kiloby and but then what Alis um recovers out",
    "start": "2694359",
    "end": "2700880"
  },
  {
    "text": "of the cipher text with the decapsulation is is the same secret that that Bob has right so it sort of worked",
    "start": "2700880",
    "end": "2707440"
  },
  {
    "text": "so now let's look at the same process but now for um MLD DSA so this is a",
    "start": "2707440",
    "end": "2712599"
  },
  {
    "text": "signature algorithm so it has a different First Step because first we need some text that we are trying to sign so now Alice is is preparing some",
    "start": "2712599",
    "end": "2719720"
  },
  {
    "text": "text that she will sign she then does something that is very similar to what we did before uh which is generate a key",
    "start": "2719720",
    "end": "2727000"
  },
  {
    "text": "key pair but this is not uh the same key PA as we used for for key exchange right",
    "start": "2727000",
    "end": "2733599"
  },
  {
    "text": "because we need a different algorithm so this this is MLD DSA key pair and now she has a public and a private key and",
    "start": "2733599",
    "end": "2740200"
  },
  {
    "text": "of course just like before the private key stays with her but the public key is something that she can share with Bob",
    "start": "2740200",
    "end": "2745920"
  },
  {
    "text": "and with everybody and then in the next step Alice will sign the data right so to",
    "start": "2745920",
    "end": "2750960"
  },
  {
    "text": "sign the data she needs this um MLD DSA signer and she initializes it using the",
    "start": "2750960",
    "end": "2757559"
  },
  {
    "text": "private key and she also passes the raw data so this is actually plain Text data that she's trying to sign and then she",
    "start": "2757559",
    "end": "2764079"
  },
  {
    "text": "obtains the signature right so this API is a bit awkward I mean it's stateful",
    "start": "2764079",
    "end": "2769359"
  },
  {
    "text": "but that's how it is implemented in bouncy castle and what we will now do is we will print this out and we can then",
    "start": "2769359",
    "end": "2776960"
  },
  {
    "text": "sh send the the plain text message to Bob and also the signature to Bob right so that he can verify this signature",
    "start": "2776960",
    "end": "2784280"
  },
  {
    "text": "using the public key that he already got um against this this message and so this is what Bob does he also initializes the",
    "start": "2784280",
    "end": "2791480"
  },
  {
    "text": "MLD DSA signer but now this time using the public key of valys because he",
    "start": "2791480",
    "end": "2796640"
  },
  {
    "text": "doesn't have his own keys and it would then not work right so it has to be the corresponding key and he then uh sort of passes the",
    "start": "2796640",
    "end": "2805079"
  },
  {
    "text": "data into the signer and then runs the verification against the specific signature",
    "start": "2805079",
    "end": "2810640"
  },
  {
    "text": "so let's try this out",
    "start": "2810640",
    "end": "2815359"
  },
  {
    "text": "and basically so this is the original pair of keys from from Alice this is the row text this is the bite array",
    "start": "2817480",
    "end": "2823480"
  },
  {
    "text": "representing the plane text this is the signature and then the verification succeeded so basically these two things",
    "start": "2823480",
    "end": "2829280"
  },
  {
    "text": "these are the building blocks that you can now take and and start implement or start using in implementing different",
    "start": "2829280",
    "end": "2835160"
  },
  {
    "text": "workflows in your applications right the most obvious thing uh that comes to mind",
    "start": "2835160",
    "end": "2841040"
  },
  {
    "text": "would be to take ml cam so kyber and use it for some sort of an end to end",
    "start": "2841040",
    "end": "2847400"
  },
  {
    "text": "chat encryption right so this is what I wanted to show you next this is by no means a a reference implementation right",
    "start": "2847400",
    "end": "2854800"
  },
  {
    "text": "it is just a a starting point that shows how you can start sort of uh integrating",
    "start": "2854800",
    "end": "2860920"
  },
  {
    "text": "these algorithms because typically if you like to put something out on the market then you really should follow an",
    "start": "2860920",
    "end": "2866440"
  },
  {
    "text": "official protocol like um like the signal protocol right but that makes uh",
    "start": "2866440",
    "end": "2872160"
  },
  {
    "text": "the demo a bit more difficult to follow so what we'll do is we'll go",
    "start": "2872160",
    "end": "2878240"
  },
  {
    "text": "here um and here I have a Blazer application and the the whole thing is",
    "start": "2878240",
    "end": "2884520"
  },
  {
    "text": "basically 200 lines of code and half of it is is HTML and in fact the HTML is so",
    "start": "2884520",
    "end": "2890920"
  },
  {
    "text": "bad that it actually proves that this was not written by AI but this is a Blazer applic this is a",
    "start": "2890920",
    "end": "2897960"
  },
  {
    "text": "Blazer chat application and it's a Blazer wasm and I think this is a cool thing about um about bouncy castle",
    "start": "2897960",
    "end": "2905599"
  },
  {
    "text": "because it has no native dependencies so all the algorithms are actually implemented in managed code so you can",
    "start": "2905599",
    "end": "2911000"
  },
  {
    "text": "actually take bouncy castle and you can actually compile it into wasm as well and it then runs in the browser locally",
    "start": "2911000",
    "end": "2917599"
  },
  {
    "text": "entirely this is not possible with the crypto apis of of net because they have",
    "start": "2917599",
    "end": "2923319"
  },
  {
    "text": "native dependencies so that is quite nice so we have this this this Blazer wasm chart I will actually start by um",
    "start": "2923319",
    "end": "2931160"
  },
  {
    "text": "by showing you this app so I'm going to run this app so because it's a wasm app it runs entirely browser we still need",
    "start": "2931160",
    "end": "2938000"
  },
  {
    "text": "some medium for messages to travel between one user and the other and for that we have a a signal our server so",
    "start": "2938000",
    "end": "2944680"
  },
  {
    "text": "I'm going to start it and now this is the",
    "start": "2944680",
    "end": "2951400"
  },
  {
    "text": "chat and this is the other browser right so I've now um launched this application",
    "start": "2951400",
    "end": "2958200"
  },
  {
    "text": "so I can enter this chat as Philip and I need a second user I need a",
    "start": "2958200",
    "end": "2965000"
  },
  {
    "text": "second name B Bob",
    "start": "2965000",
    "end": "2971119"
  },
  {
    "text": "Bobby little Bobby little Bobby tables",
    "start": "2971119",
    "end": "2977119"
  },
  {
    "text": "so so what now has happened I have to explain this because the HTML is so bad that you probably have no idea so",
    "start": "2977119",
    "end": "2983880"
  },
  {
    "text": "basically Philip now sees that there's one other user than himself right so he sees that Bob's there and then Bobby",
    "start": "2983880",
    "end": "2990240"
  },
  {
    "text": "sees that Philip is there and they both have now their public keys and the reason why they have their public Keys is in the code here in this or code",
    "start": "2990240",
    "end": "2998280"
  },
  {
    "text": "basically whenever the page gets initialized we actually generate an ml cir so there's a private key and the",
    "start": "2998280",
    "end": "3003799"
  },
  {
    "text": "public key and the private key is um um is kept in the browser locally but the",
    "start": "3003799",
    "end": "3010280"
  },
  {
    "text": "public key is sent uh to the server right and so it's then available with the list of users to be actually pulled",
    "start": "3010280",
    "end": "3016440"
  },
  {
    "text": "from the server so now phip knows that this is Bobby with his public key and then Bobby",
    "start": "3016440",
    "end": "3023280"
  },
  {
    "text": "knows that this is pH with his public key and they can now establish a secure session it does doesn't matter who does it it just matters that it it is done",
    "start": "3023280",
    "end": "3031640"
  },
  {
    "text": "right because effectively uh it's like the Alice and Bob scenario that we had",
    "start": "3031640",
    "end": "3036799"
  },
  {
    "text": "before right it was Bob that was doing the encapsulation based on the public key right so now any of them can",
    "start": "3036799",
    "end": "3042799"
  },
  {
    "text": "actually start the encapsulation process so Philip will do this based on Bobby's",
    "start": "3042799",
    "end": "3048680"
  },
  {
    "text": "key and now what has happened is they have negotiated a shared secret and this is now",
    "start": "3048680",
    "end": "3055160"
  },
  {
    "text": "um 32 bite secret so it can be used for a um AES 256 right so I can now send",
    "start": "3055160",
    "end": "3063440"
  },
  {
    "text": "high and now what happens is that this message is encrypted with this AES key this happens entirely in the browser as",
    "start": "3063440",
    "end": "3068920"
  },
  {
    "text": "well and then travels through the signal server in an encrypted format and it's",
    "start": "3068920",
    "end": "3073960"
  },
  {
    "text": "decrypted in this browser right so hi and then can say byy right so there's a",
    "start": "3073960",
    "end": "3079359"
  },
  {
    "text": "lot of effort for this conversation so just to have a look at at the key",
    "start": "3079359",
    "end": "3087400"
  },
  {
    "text": "aspects here right so there's this negotiate secret",
    "start": "3087400",
    "end": "3093720"
  },
  {
    "text": "which is basically the function that um that was called when I pressed on this establish secure session and and you",
    "start": "3093720",
    "end": "3100920"
  },
  {
    "text": "should recognize this is basically the same code that we were looking at moments ago right and what happens is",
    "start": "3100920",
    "end": "3106200"
  },
  {
    "text": "that the user that initiated this would use the public key of the other user and",
    "start": "3106200",
    "end": "3111440"
  },
  {
    "text": "then run the encapsulation and then the shared secret state secret with the",
    "start": "3111440",
    "end": "3116799"
  },
  {
    "text": "browser this is local data this is just a local field here but the cipher text",
    "start": "3116799",
    "end": "3123119"
  },
  {
    "text": "was sent over signal R to the other side and then it was actually picked up here",
    "start": "3123119",
    "end": "3129040"
  },
  {
    "text": "right on the other side and then the decapsulation process ran uh using the",
    "start": "3129040",
    "end": "3134200"
  },
  {
    "text": "the original private key that is actually corresponding to the the public key for which the encapsulation was done",
    "start": "3134200",
    "end": "3141440"
  },
  {
    "text": "and this way they have the shared secret and then for the outgoing messages and the incoming messages",
    "start": "3141440",
    "end": "3147280"
  },
  {
    "text": "they simply they simply use AES here AES encrypt AES decrypt to do this now again",
    "start": "3147280",
    "end": "3154480"
  },
  {
    "text": "this is not an example to to uh to show you sort of super robust End to End",
    "start": "3154480",
    "end": "3160960"
  },
  {
    "text": "security because there are some questions that we should be answering here about the role of the server here and so on but it's a good way to at",
    "start": "3160960",
    "end": "3166559"
  },
  {
    "text": "least begin thinking about how you can actually Implement these algorithms into something useful and so the final thing I want to",
    "start": "3166559",
    "end": "3172680"
  },
  {
    "text": "show you is also how you could integrate MLD DSA into qu real life scenario and",
    "start": "3172680",
    "end": "3178839"
  },
  {
    "text": "for this we have here um an identity server right aw day identity server I",
    "start": "3178839",
    "end": "3183920"
  },
  {
    "text": "mean there's a wday boot just right outside so if you have done any like",
    "start": "3183920",
    "end": "3189520"
  },
  {
    "text": "token issuing on the net platform I mean chances are that you have used this because that is um probably the best",
    "start": "3189520",
    "end": "3195880"
  },
  {
    "text": "option and so what I've done is as as part of sort of my my my way of spending",
    "start": "3195880",
    "end": "3202599"
  },
  {
    "text": "free time I've I've set up some integration libraries that basically we allow for taking the delium algorithm",
    "start": "3202599",
    "end": "3210000"
  },
  {
    "text": "from bouncy castle or MLD DSA and have it seamlessly integrate into various parts of net like for example the dend",
    "start": "3210000",
    "end": "3216599"
  },
  {
    "text": "the identity server or aspn net core because it is not supported out of the box and so here I have this helper that",
    "start": "3216599",
    "end": "3223920"
  },
  {
    "text": "basically as I bootstrap my identity server I will say I would like MLD DSA support",
    "start": "3223920",
    "end": "3229880"
  },
  {
    "text": "by um additionally by uh mlsa support and this is actually coming from",
    "start": "3229880",
    "end": "3237119"
  },
  {
    "text": "a a library that I call Strat web delium I mean there's a family of these libraries this is from nouet basically",
    "start": "3237119",
    "end": "3243079"
  },
  {
    "text": "what it does it just tells identity server how to deal with mlsa in various",
    "start": "3243079",
    "end": "3249160"
  },
  {
    "text": "places where it needs to deal with with cryptography and so one thing that I can",
    "start": "3249160",
    "end": "3254480"
  },
  {
    "text": "do now is when I configure my identity server I can say you know what if somebody would like to obtain a token",
    "start": "3254480",
    "end": "3260920"
  },
  {
    "text": "for this particular API they will have to go through mlsa 65 so this is one of",
    "start": "3260920",
    "end": "3267280"
  },
  {
    "text": "it's like the mid security mlsa variant so let me start this",
    "start": "3267280",
    "end": "3273960"
  },
  {
    "text": "IDP net run and what I can now do is I",
    "start": "3273960",
    "end": "3279040"
  },
  {
    "text": "can go and fetch the Json web Keys document and notice that the Json web Keys document now reports only one key",
    "start": "3279040",
    "end": "3285799"
  },
  {
    "text": "and this is not um an RSA or elliptic curve cryptography based key but is",
    "start": "3285799",
    "end": "3290839"
  },
  {
    "text": "actually a key that is using mlsa 65 and the way this is reported here and integrated is also based on another",
    "start": "3290839",
    "end": "3297400"
  },
  {
    "text": "standard because there is another emerging standard that basically tells us how to integrate mlsa into um various",
    "start": "3297400",
    "end": "3304920"
  },
  {
    "text": "signature algorithms and into Json web tokens and this is basically the public part that is needed to then validate",
    "start": "3304920",
    "end": "3312000"
  },
  {
    "text": "such a token if a token was signed with this particular key so so far so good so now we just",
    "start": "3312000",
    "end": "3318599"
  },
  {
    "text": "need an API that will actually accept tokens that are signed with mlsa and for that I have an aspet core API and out of",
    "start": "3318599",
    "end": "3325640"
  },
  {
    "text": "the box it would not work right so uh I actually have a line here that makes it work so",
    "start": "3325640",
    "end": "3332079"
  },
  {
    "text": "let's comment this out and let's start this API and see because this way you",
    "start": "3332079",
    "end": "3337280"
  },
  {
    "text": "will you will know that I'm not lying which I do a",
    "start": "3337280",
    "end": "3342920"
  },
  {
    "text": "lot uh and so this is my test application so it basically just fetches",
    "start": "3343799",
    "end": "3349160"
  },
  {
    "text": "the token and then we'll call the the endo on the API right this demo endpoint",
    "start": "3349160",
    "end": "3356000"
  },
  {
    "text": "and demo endpoint only responds with a with a Hello World so if I",
    "start": "3356000",
    "end": "3361599"
  },
  {
    "text": "now run this application um this is the token that",
    "start": "3361599",
    "end": "3367440"
  },
  {
    "text": "was obtained and you can see that I got a 401 and the reason why I got a 401 if I go here you will see that the",
    "start": "3367440",
    "end": "3373240"
  },
  {
    "text": "signature validation failed because net out of the box asp.net doesn't know how to deal with this mlsa",
    "start": "3373240",
    "end": "3380280"
  },
  {
    "text": "signatures but that is a good sign because it means that we have a a token that is signed",
    "start": "3380280",
    "end": "3386400"
  },
  {
    "text": "with mlsa so I can actually try to oops I was trying to copy",
    "start": "3386400",
    "end": "3391480"
  },
  {
    "text": "this um I don't know if it",
    "start": "3391480",
    "end": "3396520"
  },
  {
    "text": "worked because I wanted to show you this token J J.O come",
    "start": "3397359",
    "end": "3405359"
  },
  {
    "text": "on no it didn't work that's my that's my Airline booking code by the way",
    "start": "3405520",
    "end": "3411530"
  },
  {
    "text": "[Laughter]",
    "start": "3411530",
    "end": "3415110"
  },
  {
    "text": "uh where's my token here one more time oh",
    "start": "3416559",
    "end": "3425839"
  },
  {
    "text": "copy oopsie and now where where is it decoded",
    "start": "3425839",
    "end": "3433440"
  },
  {
    "text": "there you see so the algorithm is mlds 65 so the token contents are sort of normal stuff you would expect but it's",
    "start": "3433440",
    "end": "3441000"
  },
  {
    "text": "actually using an algorithm that is a a post Quantum enabled so so let's now",
    "start": "3441000",
    "end": "3447720"
  },
  {
    "text": "come back here and basically this and call this right so this comes",
    "start": "3447720",
    "end": "3453000"
  },
  {
    "text": "from another nouet library that allows you to integrate with the lithium start with lium ASP net core and it basically",
    "start": "3453000",
    "end": "3458520"
  },
  {
    "text": "tells ASP net core what to do when you encounter these types of tokens right",
    "start": "3458520",
    "end": "3463760"
  },
  {
    "text": "and and how to validate them so let's now restart the",
    "start": "3463760",
    "end": "3468960"
  },
  {
    "text": "API and now it's running and let's run the the demo up as well and now it has",
    "start": "3469400",
    "end": "3477160"
  },
  {
    "text": "um it has responded and there should be a line somewhere here successfully validated the token right so it's is as",
    "start": "3477160",
    "end": "3483119"
  },
  {
    "text": "simple as that and so these are this sample ways of how you can actually get",
    "start": "3483119",
    "end": "3489319"
  },
  {
    "text": "into postquantum cryptography into your own apps in a in a in a way that",
    "start": "3489319",
    "end": "3495119"
  },
  {
    "text": "actually doesn't require much work so I think this is everything that I had I",
    "start": "3495119",
    "end": "3500799"
  },
  {
    "text": "need to check there you go uh I think we ran out of time anyway if you'd like to",
    "start": "3500799",
    "end": "3507039"
  },
  {
    "text": "see those slides then they are online they are web page and then if you'd like to see those demos they are also online",
    "start": "3507039",
    "end": "3513319"
  },
  {
    "text": "on GitHub and uh yeah I think that's everything",
    "start": "3513319",
    "end": "3519119"
  },
  {
    "text": "now because we ran out of time I don't think we can do questions uh but I timed",
    "start": "3519119",
    "end": "3524359"
  },
  {
    "text": "it perfectly because I didn't want any questions because there are there are always smarter people than me and then",
    "start": "3524359",
    "end": "3530079"
  },
  {
    "text": "it's embarrassing but if you'd like to talk about any of this stuff then just grab me afterwards I think this is a a",
    "start": "3530079",
    "end": "3535520"
  },
  {
    "text": "safer space to things uh thank you again for coming and and I hope this was",
    "start": "3535520",
    "end": "3543760"
  },
  {
    "text": "not thanks",
    "start": "3550480",
    "end": "3554000"
  }
]