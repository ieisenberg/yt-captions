[
  {
    "text": "uh okay hello everyone my name is alisto um I'm a long time just not developer",
    "start": "5160",
    "end": "10559"
  },
  {
    "text": "and I focus mainly on security and today I want to talk to you about formal verification of smart contracts c-sharp",
    "start": "10559",
    "end": "17940"
  },
  {
    "text": "smart contracts um so I'm just gonna do for short but",
    "start": "17940",
    "end": "22980"
  },
  {
    "text": "just a basic overview of Stratus the stratus platform and basic blockchain concepts then I'm gonna do a little bit",
    "start": "22980",
    "end": "29519"
  },
  {
    "text": "about static analysis of c-sharp code then I'm going to do a bit about 400 verification that's about the theory",
    "start": "29519",
    "end": "35040"
  },
  {
    "text": "part of it and the last part we can look at actually do informal verification of c-sharp smart contracts",
    "start": "35040",
    "end": "42120"
  },
  {
    "text": "okay so I want to talk about the stratus platform I don't know how many of you have heard about Stratus but basically",
    "start": "42120",
    "end": "48840"
  },
  {
    "text": "let's try this it's a blockchain platform that supports smart contracts in c-sharp",
    "start": "48840",
    "end": "54539"
  },
  {
    "text": "um right now if you're doing smart contract development or blockchain development most likely you're using",
    "start": "54539",
    "end": "60120"
  },
  {
    "text": "ethereum or languages like Civility and JavaScript um it's kind of surprising that there",
    "start": "60120",
    "end": "65518"
  },
  {
    "text": "aren't really that many options for doing smart contract development in.net",
    "start": "65519",
    "end": "71240"
  },
  {
    "text": "design basically it's a fill that Gap um because right now blockchain",
    "start": "71240",
    "end": "76860"
  },
  {
    "text": "developers are coming really really important and you know many Enterprise adopt blockchain technology but given",
    "start": "76860",
    "end": "82740"
  },
  {
    "text": "how popular.net and well Java but given how popular these allowances are in the enterprise we really need a native",
    "start": "82740",
    "end": "89340"
  },
  {
    "text": "c-sharp blockchain development platform so that's what Stratus does okay so I'll just go over",
    "start": "89340",
    "end": "94860"
  },
  {
    "text": "um just a basic blockchain concepts because like I said Windows 10 developers and it has not only taken off whatever reason has already taken off",
    "start": "94860",
    "end": "100320"
  },
  {
    "text": "among data Developers okay so a blockchain is just a kind of a ledger basically where you record transactions",
    "start": "100320",
    "end": "106560"
  },
  {
    "text": "what makes it unique is that it's actually doing a decentralized manner so you don't need a centralized server to",
    "start": "106560",
    "end": "112979"
  },
  {
    "text": "control access or to coordinates uh basically and prints for anyone can spin up a blockchain node and they can start",
    "start": "112979",
    "end": "119880"
  },
  {
    "text": "participating in the blockchain network and they have the protocols exist to ensure there's trust between the",
    "start": "119880",
    "end": "125759"
  },
  {
    "text": "different nodes even though it didn't be running even though sometimes maybe actually be hostile okay so on the basically they have a",
    "start": "125759",
    "end": "132360"
  },
  {
    "text": "blockchain is that you have a chain of blocks where each block is dependent on the previous block so each block stores",
    "start": "132360",
    "end": "138780"
  },
  {
    "text": "a hash of the previous blocks I had writes that to its own header so that means is that you can't modify that",
    "start": "138780",
    "end": "144480"
  },
  {
    "text": "blockchain if you modify one block of it the entire thing gets invalidated so that's the mechanism that blockchain",
    "start": "144480",
    "end": "150660"
  },
  {
    "text": "basically preserves basically blockchain preserve the Integrity of the records okay so and so that's a unifying points",
    "start": "150660",
    "end": "157560"
  },
  {
    "text": "for behind blockchain is decentralized trust okay um you can have blockchain nodes running",
    "start": "157560",
    "end": "163500"
  },
  {
    "text": "all over the world running the same software and they all coordinate I have consensus and they maintain a reliable",
    "start": "163500",
    "end": "170280"
  },
  {
    "text": "uh transactions okay and you have these consensus protocols basically uh that do",
    "start": "170280",
    "end": "175560"
  },
  {
    "text": "the thing so for because of proof of proof of stick and always basically all these consensus there are a lot of",
    "start": "175560",
    "end": "181019"
  },
  {
    "text": "blockchain to record this transaction data in a decentralized way without having to have any sort of like centralized control okay and there is",
    "start": "181019",
    "end": "188459"
  },
  {
    "text": "economic incentive basically for people to cooperate so it actually works basically if you decide I mean you can't",
    "start": "188459",
    "end": "194700"
  },
  {
    "text": "decide say you want to be hostile to attack the blockchain network like one node but that's actually more economically sensible for you to",
    "start": "194700",
    "end": "200819"
  },
  {
    "text": "cooperate with the other blockchain knows right so that's really and so when blockchain took off with Bitcoin that's",
    "start": "200819",
    "end": "207060"
  },
  {
    "text": "really a key Innovation um there's a problem called it by something General's problem but but basically Bitcoin attention to solve",
    "start": "207060",
    "end": "215400"
  },
  {
    "text": "okay so just looking at just some of the looking at the implementation of the components of blockchain uh obviously",
    "start": "215400",
    "end": "220860"
  },
  {
    "text": "it's a we just have a peer-to-peer Network that's basically communicating like this this classic protocol the",
    "start": "220860",
    "end": "226799"
  },
  {
    "text": "other messages being sent as transactions uh you have consensus rules you have a state machine basically that",
    "start": "226799",
    "end": "232799"
  },
  {
    "text": "processes three different transactions and of course you have the actual blockchain that actually that's actually records or is that the Journal of the",
    "start": "232799",
    "end": "238980"
  },
  {
    "text": "transactions and you have this algorithm that coordinates Us control over the blockchain in a decentralized way",
    "start": "238980",
    "end": "244500"
  },
  {
    "text": "so that's basically that's basically what a blockchain is and I mean it's something that's becoming very important",
    "start": "244500",
    "end": "249780"
  },
  {
    "text": "right now so like I said let's try this as a blockchain platform implemented in POC shop okay right now blockchains like",
    "start": "249780",
    "end": "256859"
  },
  {
    "text": "Bitcoin they mostly like C plus plus or C or us what's right this is actually pure C sharp and it's all open source",
    "start": "256859",
    "end": "263520"
  },
  {
    "text": "okay and let's try this basically and the way it's designed you can basically use how much of a platform you actually need you can plug in different",
    "start": "263520",
    "end": "270060"
  },
  {
    "text": "components to the platform and just basically use whatever you need to customize whatever you need so we talk towards Enterprises we need to do",
    "start": "270060",
    "end": "276479"
  },
  {
    "text": "blockchain development Bitcoin protocols in C sharp it's a full",
    "start": "276479",
    "end": "284160"
  },
  {
    "text": "implementation and I mean if you have if you have an Enterprise uh you will use like a blockchain I mean instead of",
    "start": "284160",
    "end": "291120"
  },
  {
    "text": "having like say like a central so if you have to coordinate with like another person another party so your",
    "start": "291120",
    "end": "296400"
  },
  {
    "text": "transactions basically on a blockchain they're verifiable they're transparent very mutable they're cost efficient",
    "start": "296400",
    "end": "301979"
  },
  {
    "text": "they're cross-broad decentralized and fast so that's the reason that basically more online prices today are tuning",
    "start": "301979",
    "end": "307320"
  },
  {
    "text": "towards blockchain technology to solve different problems and try that's what we can design basically to fill that need for a.net blockchain platform and",
    "start": "307320",
    "end": "314820"
  },
  {
    "text": "the thing that's not contract that also does is it provides a smart contract platform using.net as a virtual machine",
    "start": "314820",
    "end": "322020"
  },
  {
    "text": "individuals Okay so what exactly is a smart contract",
    "start": "322020",
    "end": "329580"
  },
  {
    "text": "well the first generation of blockchains like Bitcoin they were designed just to record simple transactional",
    "start": "329580",
    "end": "335639"
  },
  {
    "text": "cryptocurrency just like you have a ledger okay so you buy Bitcoin you sell Bitcoin you transfer Bitcoin to someone we receive it that's what it was",
    "start": "335639",
    "end": "342660"
  },
  {
    "text": "designed to do so uh leads are blockchains like ethereum they generalize this basically",
    "start": "342660",
    "end": "348180"
  },
  {
    "text": "okay so instead of just recording transactions but if you record just changes to data structures and in that",
    "start": "348180",
    "end": "354240"
  },
  {
    "text": "way basically you would create what like sort of like what the critical a will computer where you could basically have like this arbitrary computation on data",
    "start": "354240",
    "end": "360840"
  },
  {
    "text": "but still using the blockchain okay so so let's smoke so basically all",
    "start": "360840",
    "end": "368100"
  },
  {
    "text": "smart contracts are their computer code they're getting their plate structures on the blockchain okay so people when",
    "start": "368100",
    "end": "373560"
  },
  {
    "text": "people talk about smart smart contracts I mean usually it's like they smell like a misnomer because they're not very",
    "start": "373560",
    "end": "378780"
  },
  {
    "text": "smart one and they're not legally binding too so but I mean you can't say that you know that dumb computer is",
    "start": "378780",
    "end": "385259"
  },
  {
    "text": "gonna you know change Finance forever it doesn't have that same rented so I guess we're stuck with the smart contract name okay so so what the Smart Switch is just",
    "start": "385259",
    "end": "392580"
  },
  {
    "text": "computer code running on the blockchain and they coordinate these complex transfers so you can enable the type of",
    "start": "392580",
    "end": "397979"
  },
  {
    "text": "apps like well tokens decentralized Finance you know all the things that that in the news right now basically",
    "start": "397979",
    "end": "403080"
  },
  {
    "text": "they're all implemented inside smart contracts Okay so a smart contract executes on a virtual",
    "start": "403080",
    "end": "410100"
  },
  {
    "text": "machine so you probably heard of the evm for ethereum right so um that basically that's that's basically it's a virtual",
    "start": "410100",
    "end": "416340"
  },
  {
    "text": "machine that all the blockchain knows run and your ethereum smart contracts execute on that blockchain node",
    "start": "416340",
    "end": "421860"
  },
  {
    "text": "okay and the smart contract well and the smart contract it's not like general purpose computer code",
    "start": "421860",
    "end": "427500"
  },
  {
    "text": "um it has to be it has have certain properties because of the decentralized needs it has to be deterministic if you",
    "start": "427500",
    "end": "433259"
  },
  {
    "text": "run code on one block node with the same problem with the same input you must get",
    "start": "433259",
    "end": "438360"
  },
  {
    "text": "the exact same results so that's the thing so even though you might use like a two incomplete language there are like",
    "start": "438360",
    "end": "443580"
  },
  {
    "text": "restrictions of what you can do in your smart contracts okay so and so basically so before smart",
    "start": "443580",
    "end": "451380"
  },
  {
    "text": "contract you just have basically a Bitcoin which just like this like cryptocurrency just basically money but now it's smart contracts you can have",
    "start": "451380",
    "end": "457740"
  },
  {
    "text": "you know decentralized organizations you can have tokens I mean it's open up a whole new a whole huge and Powerful",
    "start": "457740",
    "end": "464340"
  },
  {
    "text": "range of programs you can run on the blockchain and that's why Smart Control development today is really really important",
    "start": "464340",
    "end": "470880"
  },
  {
    "text": "okay so this is just an example of a smart contract um because it's very similar to what a regular like regular",
    "start": "470880",
    "end": "476639"
  },
  {
    "text": "c-sharp or regular Java program but that's basically this basically runs on the blockchain it doesn't run on a local",
    "start": "476639",
    "end": "482699"
  },
  {
    "text": "computer um and so and so basically so these the instructors and classes they sort of",
    "start": "482699",
    "end": "487740"
  },
  {
    "text": "coordinate transfer in value from one party to the next so when you have to sell your tokens or your nfts or things",
    "start": "487740",
    "end": "493860"
  },
  {
    "text": "like that have a mortgage hoverboard risky this is the cool that you run to actually do these things",
    "start": "493860",
    "end": "499520"
  },
  {
    "text": "okay so what the stratus platform does is it provides a virtual machine for",
    "start": "499919",
    "end": "504960"
  },
  {
    "text": "smart contracts based on the.net CLR now that's a really interesting that's a really interesting choice because",
    "start": "504960",
    "end": "510840"
  },
  {
    "text": "typically for ethereum for instance and I mean most other smart contract platforms what they do is they actually",
    "start": "510840",
    "end": "517020"
  },
  {
    "text": "create their own custom virtual machine but what Stratus does it basically it",
    "start": "517020",
    "end": "522180"
  },
  {
    "text": "shows to use the.net CLR as a VM and I mean there are a lot different things you can",
    "start": "522180",
    "end": "528240"
  },
  {
    "text": "say about that but I mean from a from a security point of view it's really interesting because the thing is when",
    "start": "528240",
    "end": "533339"
  },
  {
    "text": "you ethereum is what you like about well say 8 14 say 14 years old and I mean dot",
    "start": "533339",
    "end": "539040"
  },
  {
    "text": "10 has been existence for a very long time so people have been attacking.net attack and trying to break it for a very",
    "start": "539040",
    "end": "544200"
  },
  {
    "text": "long time so there's a huge amount of knowledge about the.net CLR and what languages like C shot there are here A",
    "start": "544200",
    "end": "550380"
  },
  {
    "text": "bunch of static analysis tools as well so that's the advantage I use any.net CLR first file contract VM has over",
    "start": "550380",
    "end": "556800"
  },
  {
    "text": "ethereum and you know other virtual machines so and of course well you know if you",
    "start": "556800",
    "end": "562200"
  },
  {
    "text": "have a assembly as a smart contract then you know it has to be analyzed before you actually because like you say it has",
    "start": "562200",
    "end": "568019"
  },
  {
    "text": "some certain properties it can't be non-deterministic it can't be non-bounded so you must actually analyze",
    "start": "568019",
    "end": "573180"
  },
  {
    "text": "your contract before you actually upload it to a blockchain node okay so um well just you guys look at",
    "start": "573180",
    "end": "579720"
  },
  {
    "text": "basically what a con example contract this is a standard token contract so you",
    "start": "579720",
    "end": "584820"
  },
  {
    "text": "know a token basically a seller like okay you have well those coins I mean probably whatever that's one and you",
    "start": "584820",
    "end": "590100"
  },
  {
    "text": "know what two countries I mean it's just really just a way to exchange value on top of an existing cryptocurrency",
    "start": "590100",
    "end": "597779"
  },
  {
    "text": "and the way that's actually influenced it's just basically all you have is a ledger that records okay so and so",
    "start": "597779",
    "end": "603720"
  },
  {
    "text": "address you got so and so tokens transmitted I mean that's really all that that's really all that it's actually compared to what compared to",
    "start": "603720",
    "end": "610560"
  },
  {
    "text": "how it's talked about it's actually really simple and it kind of there is a customer I mean what where exactly when you when you say own a token you know",
    "start": "610560",
    "end": "617100"
  },
  {
    "text": "what is it you actually own all right so I mean but that that's a that's a talk",
    "start": "617100",
    "end": "622260"
  },
  {
    "text": "for another day um so this is basically this is a smart contract code in C sharp so I can see",
    "start": "622260",
    "end": "628380"
  },
  {
    "text": "it's just regular C sharp so you know if you're a c-sharp developer this would",
    "start": "628380",
    "end": "633839"
  },
  {
    "text": "actually be a lot more familiar so you don't have until like another language like ethereum foreign",
    "start": "633839",
    "end": "640700"
  },
  {
    "text": "just to give you a look at what which will be talking about um so using the tool called Silver we",
    "start": "643700",
    "end": "652019"
  },
  {
    "text": "can actually verify that smart contract okay so when I run this inside when I",
    "start": "652019",
    "end": "657300"
  },
  {
    "text": "run this basically the silver verifier it does a lot of transmissions on the source code and it splits back out",
    "start": "657300",
    "end": "663300"
  },
  {
    "text": "verification of different properties okay so each method in the smart contract gets analyzed and the silver",
    "start": "663300",
    "end": "669240"
  },
  {
    "text": "tool will actually tell you okay well if there's a problem with a particular particular method it will actually flag it",
    "start": "669240",
    "end": "675000"
  },
  {
    "text": "okay so we look at how we can talk about how this gets done in the next slide Okay so talking about from a security",
    "start": "675000",
    "end": "681600"
  },
  {
    "text": "point of view so you know smart contracts they're they're prone to a lot of different vulnerabilities I mean",
    "start": "681600",
    "end": "686640"
  },
  {
    "text": "nearly every day you probably hear about you know this smart contract got hot uh",
    "start": "686640",
    "end": "691740"
  },
  {
    "text": "so and so lost millions of dollars and things like that and I mean you know it's really if you",
    "start": "691740",
    "end": "697019"
  },
  {
    "text": "think about like critical code even though the code is relatively simple if you make a mistake on a smart contract",
    "start": "697019",
    "end": "702360"
  },
  {
    "text": "it could cost you basically you know it can cause your entire business um either you make a mistake and people",
    "start": "702360",
    "end": "708240"
  },
  {
    "text": "lose whatever they invest in or a hacker hacks you and they deliberately Tron so you know whatever from your smart",
    "start": "708240",
    "end": "714360"
  },
  {
    "text": "contract so whenever I think it's about contract code that's I mean it's security is like really really critical",
    "start": "714360",
    "end": "720480"
  },
  {
    "text": "okay and but the thing about this is that if you're a net developer and you",
    "start": "720480",
    "end": "725640"
  },
  {
    "text": "want to do smart con you want to do smart contract development and you have to use a language you're not familiar with well obviously you know it's far",
    "start": "725640",
    "end": "732300"
  },
  {
    "text": "easier to write secure code code that follows best practices if you're using a",
    "start": "732300",
    "end": "738120"
  },
  {
    "text": "language that you're familiar with um so you know for a dot-in developer if you want to get into smart contract development what you have means you have",
    "start": "738120",
    "end": "744720"
  },
  {
    "text": "to learn a new language and that's that's really kind of problematic because you know the channels are very highly make a mistake you're not going",
    "start": "744720",
    "end": "750360"
  },
  {
    "text": "to be writing you know at least not initially not going to be writing really secure code so basically a lot of static analysis",
    "start": "750360",
    "end": "757079"
  },
  {
    "text": "and formal verification tools have been developed to help developers basically find these vulnerabilities inside smart",
    "start": "757079",
    "end": "763680"
  },
  {
    "text": "control code okay so there are I mean there are a lot of the front for mostly for ethereum a",
    "start": "763680",
    "end": "771000"
  },
  {
    "text": "lot of different smart contracts security tools so the tool has been so this tool is called",
    "start": "771000",
    "end": "777120"
  },
  {
    "text": "Silver and silver is a static analyzer and a formal verifier for Stratus",
    "start": "777120",
    "end": "783000"
  },
  {
    "text": "c-sharp smart contracts okay so let me talk about so basically psych analysis it's where you look at",
    "start": "783000",
    "end": "790200"
  },
  {
    "text": "the properties of a program without actually executing them so normally uh",
    "start": "790200",
    "end": "795240"
  },
  {
    "text": "when you test like when you write tests for programs like a unit test or you do things like Photo you're actually executing the code to see what happens",
    "start": "795240",
    "end": "801360"
  },
  {
    "text": "so all that psych analysis ask is let's look at the source code what can we actually derive from just looking at the",
    "start": "801360",
    "end": "808920"
  },
  {
    "text": "source code and there are a lot of things are actually smart that Cyclones can actually do that actually you know they actually literally prove certain",
    "start": "808920",
    "end": "814560"
  },
  {
    "text": "things it could have certain properties okay so um you know so things like software",
    "start": "814560",
    "end": "820620"
  },
  {
    "text": "metrics so we all know these different we have to use different metrics like okay how many classes you have how many classes you have in your assembly",
    "start": "820620",
    "end": "827279"
  },
  {
    "text": "um how long is it how long is the class um how many methods do you have do you use Fields instead of properties so all",
    "start": "827279",
    "end": "833880"
  },
  {
    "text": "those things basically so when you look at those things you're basically doing static analysis and it kind of giving metrics on what your code does",
    "start": "833880",
    "end": "840600"
  },
  {
    "text": "okay and that's what most of these um you know code quality tools they use static analysis we'll tell you these things",
    "start": "840600",
    "end": "845880"
  },
  {
    "text": "okay so there are a lot of different properties you can actually just looking at the source code you can actually derive from without actually having to",
    "start": "845880",
    "end": "851459"
  },
  {
    "text": "run the code because you can't you cannot test you know you can't basically test every bug potential bug okay in",
    "start": "851459",
    "end": "857459"
  },
  {
    "text": "this case so testing it tells you that it doesn't tell you there aren't any bugs",
    "start": "857459",
    "end": "862760"
  },
  {
    "text": "it's a analyzer for Stratus smart contracts and what's up because it analyzes the code boot at the by code",
    "start": "866000",
    "end": "872459"
  },
  {
    "text": "level at the net Cil level and also at the c-sharp language level okay um so server has different",
    "start": "872459",
    "end": "878160"
  },
  {
    "text": "interfaces you can run the CLI",
    "start": "878160",
    "end": "882139"
  },
  {
    "text": "okay so this is a silver on the CLI so I'm just a suitable for like if you're doing and we can actually run without",
    "start": "883740",
    "end": "888839"
  },
  {
    "text": "the colors and stuff like that so if you're like in a build pipeline you can run server like that",
    "start": "888839",
    "end": "894180"
  },
  {
    "text": "um you know as part of a CI pipeline uh you can write inside chip will not look like what I'm going to be doing now right inside just for demonstration and",
    "start": "894180",
    "end": "900240"
  },
  {
    "text": "reports and if you're a developer what most likely you're using silver inside Visual Studio",
    "start": "900240",
    "end": "905519"
  },
  {
    "text": "okay and so in terms of just static analysis um it does use the front syntactic semantic analysis called graph",
    "start": "905519",
    "end": "911399"
  },
  {
    "text": "analysis control flow data flow these different kinds of static analysis and it also does formal verification of",
    "start": "911399",
    "end": "918420"
  },
  {
    "text": "c-sharp using spec shop so we'll see uh we'll see from location a little while",
    "start": "918420",
    "end": "924839"
  },
  {
    "text": "okay um so yeah so basically so the source code analysis part of silver uses",
    "start": "924839",
    "end": "931620"
  },
  {
    "text": "um Roslyn so for example Russell basically is the official compiler API for c-sharp and right so next was",
    "start": "931620",
    "end": "938399"
  },
  {
    "text": "basically anything the compiler can do it exposes that those functions to the user",
    "start": "938399",
    "end": "945380"
  },
  {
    "text": "okay so um probably we can look at how so if you guys look at how Roslin",
    "start": "946560",
    "end": "953519"
  },
  {
    "text": "is used inside silver so this is uh this is simple smart contract now like I said",
    "start": "953519",
    "end": "959100"
  },
  {
    "text": "there are a lot of restrictions about the kind of cool you can actually use inside a smart contracts and what services kbsp does the analysis and it",
    "start": "959100",
    "end": "965639"
  },
  {
    "text": "would flat anytime you try to use any sort of illegal code inside the smart contract it will tell you so if I try to import for example like the",
    "start": "965639",
    "end": "972300"
  },
  {
    "text": "system that collections namespace well that brings it error basically you know you can't actually there are a lot of",
    "start": "972300",
    "end": "977579"
  },
  {
    "text": "restrictions on what you can do inside smart contract and using numbers from that particular that particular namespace is not allowed so it also a",
    "start": "977579",
    "end": "984120"
  },
  {
    "text": "flag error you know to flag that using that that cut that namespace you'll flag it as an error inside Visual Studio",
    "start": "984120",
    "end": "990839"
  },
  {
    "text": "and a lot of different basically rules that that silver has to implement so okay you're not allowed to create new",
    "start": "990839",
    "end": "996360"
  },
  {
    "text": "objects on the Heap because that's actually because you know if you create a new object and let's say the node runs",
    "start": "996360",
    "end": "1001459"
  },
  {
    "text": "out of memory that's a non-deterministic problem because then you know so basically you're not allowed",
    "start": "1001459",
    "end": "1007100"
  },
  {
    "text": "to any sort of any sort of Destruction will use like uh memory you aren't allowed to create that so if I try to",
    "start": "1007100",
    "end": "1013339"
  },
  {
    "text": "create a dictionary inside a smart contract this particular contract is not allowed",
    "start": "1013339",
    "end": "1020120"
  },
  {
    "text": "here okay so there's an example of Rosalind",
    "start": "1020120",
    "end": "1025520"
  },
  {
    "text": "analyzer so if I try to declare a field Etc again you can't actually use Fields",
    "start": "1025520",
    "end": "1031699"
  },
  {
    "text": "you can actually use public Fields inside smart contracts okay so basically so that's how silver",
    "start": "1031699",
    "end": "1036798"
  },
  {
    "text": "uses Roslyn to do this kind of static analysis of smart contract code",
    "start": "1036799",
    "end": "1042400"
  },
  {
    "text": "okay so we can look at the byte code analysis part of the static analysis so",
    "start": "1049760",
    "end": "1055100"
  },
  {
    "text": "when you do when you actually do by good analysis um you're looking at the actual assembly",
    "start": "1055100",
    "end": "1061580"
  },
  {
    "text": "the by code and the assembly so you don't actually need this source code to be able to do the analysis and many",
    "start": "1061580",
    "end": "1067039"
  },
  {
    "text": "times actually there are a lot of things are actually simple to do is looking at the.net byte code and look at the C sharp because each other is very complex",
    "start": "1067039",
    "end": "1072380"
  },
  {
    "text": "language so many times if you just compile that to CIO and then analyze the Cil you actually have to do a lot of",
    "start": "1072380",
    "end": "1078620"
  },
  {
    "text": "things but then you were just looking at the source code so these are different types of analysis you know you have choreograph analysis",
    "start": "1078620",
    "end": "1084500"
  },
  {
    "text": "class hierarchy control for data flow different types of analysis and um so basically what what server does it",
    "start": "1084500",
    "end": "1090320"
  },
  {
    "text": "converts that particular Cil into a tree address code for analysis",
    "start": "1090320",
    "end": "1096080"
  },
  {
    "text": "okay so this is an example so we're running silver um so I have a smart contract here at",
    "start": "1096080",
    "end": "1102919"
  },
  {
    "text": "this particular this particular URL at GitHub this is it was being sent as a pull request",
    "start": "1102919",
    "end": "1108940"
  },
  {
    "text": "okay I think that crashed okay but basically but basically get it you can basically run this inside so when you can write um basically you can analyze",
    "start": "1115160",
    "end": "1121760"
  },
  {
    "text": "pull it from GitHub and analyze that particular assembly okay on so from that particular assembly",
    "start": "1121760",
    "end": "1129080"
  },
  {
    "text": "you can get you know like a call graph so this is a call graph of those methods in the assembly",
    "start": "1129080",
    "end": "1136059"
  },
  {
    "text": "okay so so you can just see the different nodes and basically the core Graphics can tell you okay what nodes",
    "start": "1148940",
    "end": "1154700"
  },
  {
    "text": "are calling what and which notes are best which numbers have a skill link so this is a type of static analysis you can actually do",
    "start": "1154700",
    "end": "1160640"
  },
  {
    "text": "inside silicone obviously I think that's from the byte code okay and again another thing is the",
    "start": "1160640",
    "end": "1166940"
  },
  {
    "text": "control for graphs I can you can basically run run this and it will just give you a list of all the basic blocks",
    "start": "1166940",
    "end": "1172220"
  },
  {
    "text": "in your code you get you get like a list of so you can see like where the different decisions with different",
    "start": "1172220",
    "end": "1177260"
  },
  {
    "text": "decision statements are and so this did this with types that you can actually do in service all these are actually useful",
    "start": "1177260",
    "end": "1182600"
  },
  {
    "text": "if you look for unlocking a smart contract for vulnerability information like this is actually pretty useful",
    "start": "1182600",
    "end": "1188620"
  },
  {
    "text": "okay so yeah so we saw you know we looked at this source code analysis part of silver and how we could use like",
    "start": "1192320",
    "end": "1198020"
  },
  {
    "text": "silver as using as a result analyzer inside Visual Studio okay and",
    "start": "1198020",
    "end": "1204200"
  },
  {
    "text": "um so there are things that that still uses for us on the floor so we'll see it a little later one but basically that Russian is a really powerful compiler",
    "start": "1204200",
    "end": "1210919"
  },
  {
    "text": "API let's just do a lot of different things static analysis um you know either inside the visual studio or on the command line",
    "start": "1210919",
    "end": "1218840"
  },
  {
    "text": "okay so probably we could talk about formal verification now just a brief",
    "start": "1218840",
    "end": "1224000"
  },
  {
    "text": "intro into form of education so we saw that the previous type of analysis we were",
    "start": "1224000",
    "end": "1229760"
  },
  {
    "text": "looking just for certain properties of a program you know where the decision statements are what calls are being made what procedures are being called but",
    "start": "1229760",
    "end": "1236419"
  },
  {
    "text": "there are certain questions we want to ask that require a lot deeper type of analysis",
    "start": "1236419",
    "end": "1241580"
  },
  {
    "text": "well you actually have to reason about the program code okay so things like okay a function",
    "start": "1241580",
    "end": "1248059"
  },
  {
    "text": "returns a certain fact or is it in a certain value or prompt is always passed with a certain value an arrays access",
    "start": "1248059",
    "end": "1254720"
  },
  {
    "text": "within bounds or you know a function returns or without as sorted so the",
    "start": "1254720",
    "end": "1260179"
  },
  {
    "text": "thing is it's actually possible to prove that you know these things just looking at the source cool you can actually",
    "start": "1260179",
    "end": "1265940"
  },
  {
    "text": "prove that these things will always happen okay so if we look at this this c-sharp",
    "start": "1265940",
    "end": "1272600"
  },
  {
    "text": "program um basically it was saying okay if you look at this program can we say that this program always returns true or",
    "start": "1272600",
    "end": "1279260"
  },
  {
    "text": "is it would always returns through it never return false okay and so if you just look at let me just look at the code",
    "start": "1279260",
    "end": "1285740"
  },
  {
    "text": "um we can say yeah we can give like an informal art we can say yes okay look um the conditions as if I is more than",
    "start": "1285740",
    "end": "1292760"
  },
  {
    "text": "15 but we know what i is not going to be 115 because I is the loop variable is always less than 10. so this will always",
    "start": "1292760",
    "end": "1299000"
  },
  {
    "text": "control always fall to here so that's the information we can say okay yes we know that this method will always return",
    "start": "1299000",
    "end": "1304100"
  },
  {
    "text": "false just looking at the source code",
    "start": "1304100",
    "end": "1308020"
  },
  {
    "text": "anything okay so if we have that we have an informal argument like that so how do we",
    "start": "1309740",
    "end": "1316280"
  },
  {
    "text": "formalize that argument so normally when we formalize you know reason we want to say okay what exactly what are the",
    "start": "1316280",
    "end": "1322220"
  },
  {
    "text": "things we're talking about so inside the program well we have variables and we know these variables kind of take",
    "start": "1322220",
    "end": "1327799"
  },
  {
    "text": "certain values so if we take about the state of a program at any given time the",
    "start": "1327799",
    "end": "1332840"
  },
  {
    "text": "status will be just a map of the values to the program variables that's all that",
    "start": "1332840",
    "end": "1338960"
  },
  {
    "text": "state is and I said program execute it transitions between different states",
    "start": "1338960",
    "end": "1344000"
  },
  {
    "text": "okay so and that's that's an abstraction of how a program executes so that that's",
    "start": "1344000",
    "end": "1349039"
  },
  {
    "text": "that's and that's actually pretty precise and definite so we can actually use that as and figuring a reason what",
    "start": "1349039",
    "end": "1354320"
  },
  {
    "text": "problem you can actually use the program State how you can say okay uh different sets of the program States they actually",
    "start": "1354320",
    "end": "1360919"
  },
  {
    "text": "characterize in a very specific way the program's Behavior okay so if we were to make these logical",
    "start": "1360919",
    "end": "1367580"
  },
  {
    "text": "statements about the program about the the program states that will always create a reason in a definite way about",
    "start": "1367580",
    "end": "1373880"
  },
  {
    "text": "how the program behaves okay um so",
    "start": "1373880",
    "end": "1379940"
  },
  {
    "text": "we have we have we can look we can we can just look at a function and see okay and it's also things well how do we",
    "start": "1379940",
    "end": "1385520"
  },
  {
    "text": "actually prove statements about that well basically we have to use a logic we have to use a four more logic basically",
    "start": "1385520",
    "end": "1390679"
  },
  {
    "text": "to to prove that these things will happen okay so uh what how we go about in form",
    "start": "1390679",
    "end": "1397700"
  },
  {
    "text": "of education is that well first of all we annotate the different uh test source",
    "start": "1397700",
    "end": "1402860"
  },
  {
    "text": "code with the front of making the front statements okay so this particular annotation says for all I I is 115. okay",
    "start": "1402860",
    "end": "1410179"
  },
  {
    "text": "and that signal is true because uh basically so when we see when the control gets when I get to here we know",
    "start": "1410179",
    "end": "1417080"
  },
  {
    "text": "that I is more than 15. such a logical statement about what the program could",
    "start": "1417080",
    "end": "1423760"
  },
  {
    "text": "okay so we have so things like a solution so professionally with assertions um and when you're doing unit",
    "start": "1425840",
    "end": "1432020"
  },
  {
    "text": "tests you see okay you know assert at this particular property has a certain value or it's not null so assertions",
    "start": "1432020",
    "end": "1440120"
  },
  {
    "text": "um function precondition those are those are assertions that say okay before the function executes then the prompt has",
    "start": "1440120",
    "end": "1446539"
  },
  {
    "text": "been passed are going to be a certain way and similarly post conditions um are three function executes the return value",
    "start": "1446539",
    "end": "1452900"
  },
  {
    "text": "of the function is going to be a certain value and then you also have things like Loop because it says inside the loop uh",
    "start": "1452900",
    "end": "1458960"
  },
  {
    "text": "this condition always holds so all those kinds of statements are annotations",
    "start": "1458960",
    "end": "1464179"
  },
  {
    "text": "okay so if you consider an entire set of these annotations for a program on bus",
    "start": "1464179",
    "end": "1469340"
  },
  {
    "text": "quality specifications for the program and if you have a specification for a program it's a very precise way to",
    "start": "1469340",
    "end": "1475159"
  },
  {
    "text": "define how your program behaves and that is how we can actually use phone verification to show that where the",
    "start": "1475159",
    "end": "1480980"
  },
  {
    "text": "program satisfies the certification or not",
    "start": "1480980",
    "end": "1484960"
  },
  {
    "text": "okay so this is specification that's a very precise statement of how the program behaves using formal logic",
    "start": "1489020",
    "end": "1496100"
  },
  {
    "text": "okay and that's so basically the main typologic we talk about phone vacation as whole logic so basically follow",
    "start": "1496100",
    "end": "1502400"
  },
  {
    "text": "location just a logic for reason about how the program behaves given the program specification and the main",
    "start": "1502400",
    "end": "1509059"
  },
  {
    "text": "notation is just simple it's you have if you have a precondition you have a program statement and a post condition",
    "start": "1509059",
    "end": "1516500"
  },
  {
    "text": "okay and I mean that's just and just that's just basically that's just like the basic notation that all these formal verifiers rely on",
    "start": "1516500",
    "end": "1523940"
  },
  {
    "text": "okay so what default verify I would do is it would take the annotations and it",
    "start": "1523940",
    "end": "1529159"
  },
  {
    "text": "would take the source code and transform that into something called verification conditions and basically you can show",
    "start": "1529159",
    "end": "1535760"
  },
  {
    "text": "that if you prove that's on a different question they're just pure logic formulas if you can prove that the",
    "start": "1535760",
    "end": "1541580"
  },
  {
    "text": "verification conditions if they're they're valid that means that the program annotations uh match the program",
    "start": "1541580",
    "end": "1548960"
  },
  {
    "text": "Behavior it means that the specification is actually correct if it's not valid means either your annotations are wrong",
    "start": "1548960",
    "end": "1554840"
  },
  {
    "text": "or something is wrong with your cooler most of the time you know we think that something is wrong with the code that's why it actually we can't prove these",
    "start": "1554840",
    "end": "1560419"
  },
  {
    "text": "verification conditions okay so um",
    "start": "1560419",
    "end": "1567380"
  },
  {
    "text": "so basically that's that's how we that's basically what the whole core idea of form of education is we want to prove statements about programs by deriving",
    "start": "1567380",
    "end": "1574100"
  },
  {
    "text": "these verification is from the program code and the specification and running that through a verifier and the verifier",
    "start": "1574100",
    "end": "1580220"
  },
  {
    "text": "can tell us if it is that these verification equations will and this classification is correct if it doesn't hold then it means that that something",
    "start": "1580220",
    "end": "1587539"
  },
  {
    "text": "is wrong with our code okay so this is an example basically when you run a set aside we have a",
    "start": "1587539",
    "end": "1594440"
  },
  {
    "text": "simple program we had a sample program uh like we said",
    "start": "1594440",
    "end": "1600500"
  },
  {
    "text": "well we said okay can we reset this function will always return false okay and so in this case",
    "start": "1600500",
    "end": "1608659"
  },
  {
    "text": "if we verify this we we have uh we make an annotation here and this says that um we what we're",
    "start": "1608659",
    "end": "1616279"
  },
  {
    "text": "saying is that the function a is always going to return false right that's a",
    "start": "1616279",
    "end": "1621559"
  },
  {
    "text": "specification",
    "start": "1621559",
    "end": "1624100"
  },
  {
    "text": "okay and if we if we run that through the verifier",
    "start": "1629779",
    "end": "1634179"
  },
  {
    "text": "so if we run that through the verifier um what we would see is that basically verify I would take the that particular",
    "start": "1638840",
    "end": "1644539"
  },
  {
    "text": "that specification we did I'll combine the source code and would tell us okay so you know",
    "start": "1644539",
    "end": "1652299"
  },
  {
    "text": "it will tell us okay whether or not the that actual method actually verified so we can just look at the the results here",
    "start": "1654080",
    "end": "1662140"
  },
  {
    "text": "okay so we could see at this this click is the method actually verified right so now what if I were to change parts of",
    "start": "1662960",
    "end": "1669440"
  },
  {
    "text": "the program okay so let's say I change this",
    "start": "1669440",
    "end": "1674740"
  },
  {
    "text": "let's say it changes to five",
    "start": "1683179",
    "end": "1686620"
  },
  {
    "text": "okay",
    "start": "1691640",
    "end": "1694000"
  },
  {
    "text": "oh yeah okay yeah you got yeah thanks a lot yeah you're right actually",
    "start": "1698000",
    "end": "1703659"
  },
  {
    "text": "okay",
    "start": "1704720",
    "end": "1707320"
  },
  {
    "text": "okay so this is gonna so this biscuit so we know that this is actually it's always going to be first so let's say I'm",
    "start": "1715279",
    "end": "1720320"
  },
  {
    "text": "increased this to 25.",
    "start": "1720320",
    "end": "1724059"
  },
  {
    "text": "okay so we see basically so because I changed the code it means that now the program code does not actually match the",
    "start": "1728539",
    "end": "1734539"
  },
  {
    "text": "specification so we verify it plugs us",
    "start": "1734539",
    "end": "1739059"
  },
  {
    "text": "okay so we so we have this method here it says that that particular method it's field verification",
    "start": "1742220",
    "end": "1748900"
  },
  {
    "text": "okay the that post connection is going to be satisfied because we change the code so I mean and that that is great",
    "start": "1749419",
    "end": "1755240"
  },
  {
    "text": "procedure that's basically all that for foreign",
    "start": "1755240",
    "end": "1759278"
  },
  {
    "text": "so here's a better example okay this is a Max function",
    "start": "1767860",
    "end": "1773720"
  },
  {
    "text": "okay and um so the max function this has actually more annotations inside the function",
    "start": "1773720",
    "end": "1779600"
  },
  {
    "text": "we have again we have these preconditions and we also have a loop invariant inside the loop",
    "start": "1779600",
    "end": "1787279"
  },
  {
    "text": "okay so I can run this",
    "start": "1787279",
    "end": "1790360"
  },
  {
    "text": "okay so and this also succeeds but let's say I change let's say I change this uh",
    "start": "1793340",
    "end": "1799960"
  },
  {
    "text": "let's say I change this okay so this is supposed to so this",
    "start": "1800600",
    "end": "1806000"
  },
  {
    "text": "particular function so this specification here says that this particular function it's supposed to It's supposed to return",
    "start": "1806000",
    "end": "1813020"
  },
  {
    "text": "the maximum value it's supposed to return the maximum",
    "start": "1813020",
    "end": "1818419"
  },
  {
    "text": "value",
    "start": "1818419",
    "end": "1820658"
  },
  {
    "text": "yeah it's supposed to return the maximum value um what if I change the code so it actually so basically the algorithm for",
    "start": "1831080",
    "end": "1837440"
  },
  {
    "text": "maximum is actually wrong so when I try to verify this",
    "start": "1837440",
    "end": "1841898"
  },
  {
    "text": "okay second so I can basically so that particular method is going to feel verification because the code no longer matches the specification",
    "start": "1845840",
    "end": "1852020"
  },
  {
    "text": "okay that is no guarantee that this particular method is going to return if there's going to return the maximum value",
    "start": "1852020",
    "end": "1859120"
  },
  {
    "text": "okay so um so basically so that's really how we do uh formal verification",
    "start": "1859940",
    "end": "1865760"
  },
  {
    "text": "you know okay and we can just talk real quickly so like you know so we've seen as quick",
    "start": "1865760",
    "end": "1871760"
  },
  {
    "text": "what form of verification is um how do we like integrate how do we integrate statements and so how do you integrate",
    "start": "1871760",
    "end": "1878059"
  },
  {
    "text": "statements uh specifications into programs well there are a couple options we can use entirely new language we can",
    "start": "1878059",
    "end": "1883460"
  },
  {
    "text": "use a separate language or you can extend an existing language okay and they're at the front so right",
    "start": "1883460",
    "end": "1889159"
  },
  {
    "text": "now for verification you know it's actually using many City critical systems like Microsoft design uh device",
    "start": "1889159",
    "end": "1894860"
  },
  {
    "text": "drivers um it has been showing that you can actually make an entire operating system for many verifiable so they are made",
    "start": "1894860",
    "end": "1901039"
  },
  {
    "text": "tools right now for for education for languages like C Java uh okay so foreign",
    "start": "1901039",
    "end": "1908440"
  },
  {
    "text": "application inside smart contracts",
    "start": "1910960",
    "end": "1915220"
  },
  {
    "text": "okay and so smart contract with contrast like general purpose could a smart contract was actually very amenable it's",
    "start": "1919940",
    "end": "1926480"
  },
  {
    "text": "a formal verification so as we saw the code has been deterministic um we have a guarantee that smart",
    "start": "1926480",
    "end": "1932179"
  },
  {
    "text": "contract we will always terminate because you have you only have finite costs you can only execute for so long so that's one major thing will we remove",
    "start": "1932179",
    "end": "1939080"
  },
  {
    "text": "we always know that problem is going to terminate and right now it's in this it's an",
    "start": "1939080",
    "end": "1944360"
  },
  {
    "text": "industry right now where companies that they ordered smart contracts um basically that that's a very big",
    "start": "1944360",
    "end": "1949640"
  },
  {
    "text": "industry right now we're using for vacations all that smart contracts look for vulnerabilities and there are also a lot of Open Source tools that you can",
    "start": "1949640",
    "end": "1955820"
  },
  {
    "text": "use for formal verification okay so just a couple of them just uh sorry verify that's actually extension",
    "start": "1955820",
    "end": "1962179"
  },
  {
    "text": "to the the solicit compiler act as a specification language for ethereum",
    "start": "1962179",
    "end": "1968299"
  },
  {
    "text": "okay so we're gonna look at spec shop now splackshop was created by Microsoft",
    "start": "1968299",
    "end": "1974899"
  },
  {
    "text": "research basically it was designed to be a programming system to incorporate formal verification",
    "start": "1974899",
    "end": "1980600"
  },
  {
    "text": "okay and so and there are a lot of different design rules that that spec shop had to sort of eliminate the drawbacks from the previous ways of the",
    "start": "1980600",
    "end": "1988100"
  },
  {
    "text": "informal verification okay so basically what snapshot does so we saw when we were doing when you're",
    "start": "1988100",
    "end": "1994220"
  },
  {
    "text": "actually doing the form of verification um we actually just I like these annotations to the c-sharp smart code",
    "start": "1994220",
    "end": "2000159"
  },
  {
    "text": "and without mostly verify I took those annotations took this smart code it transformed it into another language called Boogie and it run that 3D",
    "start": "2000159",
    "end": "2007120"
  },
  {
    "text": "verifier and I was able to actually verify that code okay um so let's talk I just talk about",
    "start": "2007120",
    "end": "2013419"
  },
  {
    "text": "basically uh spec shop um spec shop was actually a pretty cool technology I mean well relatively",
    "start": "2013419",
    "end": "2019120"
  },
  {
    "text": "speaking you know it was written it was origin talk that's C sharp 2.0 that was like you know like decades ago so to get",
    "start": "2019120",
    "end": "2025960"
  },
  {
    "text": "spec shop to run on one computers we had to make some changes okay so we wanted to like shop to support all the News",
    "start": "2025960",
    "end": "2032380"
  },
  {
    "text": "latest versions of C sharp we also wanted this if we have if you have spec shop code it should also work with any",
    "start": "2032380",
    "end": "2038980"
  },
  {
    "text": "c-sharp compiler um you can write from different well interface like Visual Studio Jupiter and also the Android",
    "start": "2038980",
    "end": "2045279"
  },
  {
    "text": "inside visuals to the other Rosen analyzer so how we did is we use Rosen syntax",
    "start": "2045279",
    "end": "2050800"
  },
  {
    "text": "rewriters basically what we would do is so let's say we have some new c-sharp syntax like we have so now we have in C",
    "start": "2050800",
    "end": "2056980"
  },
  {
    "text": "sharp expression but it functions we have string interpolation but these things aren't supported by older",
    "start": "2056980",
    "end": "2062138"
  },
  {
    "text": "versions of C sharp so we can actually use Roslyn to rewrite that code so basically the older equivalent so we can",
    "start": "2062139",
    "end": "2069220"
  },
  {
    "text": "see here for this particular so we basically when we we write when we",
    "start": "2069220",
    "end": "2074378"
  },
  {
    "text": "actually um when we're doing the rewrite and so basically everything gets printed out when the program is actually being",
    "start": "2074379",
    "end": "2080618"
  },
  {
    "text": "compiled okay so if you have say an expression body function like this",
    "start": "2080619",
    "end": "2086320"
  },
  {
    "text": "this actually gets transformed into this basically you just have a return statement set up the expression instead",
    "start": "2086320",
    "end": "2091898"
  },
  {
    "text": "of that particular operator and string interpolation just gets transformed into streamlab format",
    "start": "2091899",
    "end": "2098580"
  },
  {
    "text": "okay so and so how we maintain compatibility with C sharp we just quickly embed the annotations as",
    "start": "2106000",
    "end": "2112839"
  },
  {
    "text": "comments so if you run the C sharp code through a compiler the compiler would not see the annotations only when I went",
    "start": "2112839",
    "end": "2118960"
  },
  {
    "text": "through the spec shop compiler that's when the last one is actually going to pick up those annotations",
    "start": "2118960",
    "end": "2125338"
  },
  {
    "text": "okay and so when you passed when you pass uh that C sharp code through the true server it rewrites basically",
    "start": "2127060",
    "end": "2133660"
  },
  {
    "text": "there's all this rewriting to get a valid spec shop program and then it sends that to this Flagship verifier",
    "start": "2133660",
    "end": "2140980"
  },
  {
    "text": "okay so that's the verifier pipeline uh we just we have the annotations we",
    "start": "2140980",
    "end": "2146380"
  },
  {
    "text": "uncomment them we rewrite the newer C sharp code to a version of C sharp code aspectship supports we have positive",
    "start": "2146380",
    "end": "2152680"
  },
  {
    "text": "spec shops flexshop translate that into Cil and runs Boogie on that and that's the entire verifier pipeline",
    "start": "2152680",
    "end": "2159820"
  },
  {
    "text": "okay so we look at so here is a here's a smart contract a really simple smart contract it just does multiplication of",
    "start": "2159820",
    "end": "2165820"
  },
  {
    "text": "two values but you see that it has different so all these annotations so we actually need",
    "start": "2165820",
    "end": "2171940"
  },
  {
    "text": "these yes I'm just trying to show what spec shop can do so we have these annotations here",
    "start": "2171940",
    "end": "2178980"
  },
  {
    "text": "okay so and so when we run when we run this through choose server it will rewrite the code",
    "start": "2186820",
    "end": "2192880"
  },
  {
    "text": "we write the annotations okay would compile the code and this is",
    "start": "2192880",
    "end": "2199000"
  },
  {
    "text": "feedback or the results telling us okay this particular this particular method is valid or invalid and so honestly",
    "start": "2199000",
    "end": "2204579"
  },
  {
    "text": "problem is that it actually detected for that method okay so that's a basic that's basically",
    "start": "2204579",
    "end": "2209680"
  },
  {
    "text": "how what what silver does so we can just look at how silver looks",
    "start": "2209680",
    "end": "2215200"
  },
  {
    "text": "for smart contract vulnerabilities okay so one really common problem is",
    "start": "2215200",
    "end": "2221440"
  },
  {
    "text": "where you have a call and you don't actually check you make a transfer policy but you don't actually check",
    "start": "2221440",
    "end": "2228099"
  },
  {
    "text": "whether return value is and that that's something that that I mean as new developers we all basically do this",
    "start": "2228099",
    "end": "2234880"
  },
  {
    "text": "um you know we just fire function and we forget whatever the result is that that of course if you're in a smart contract",
    "start": "2234880",
    "end": "2240400"
  },
  {
    "text": "I can have really you know profound effects on what you're doing so that's how we have this donate contract",
    "start": "2240400",
    "end": "2247680"
  },
  {
    "text": "okay so um this is just a really really simple uh contract basically whatever whatever you",
    "start": "2249940",
    "end": "2258400"
  },
  {
    "text": "say whatever money you send whatever cryptocurrency you send to it it basically just sends that to whoever",
    "start": "2258400",
    "end": "2264160"
  },
  {
    "text": "owns the contract of course we don't this we just signed therapy but we just want to see basically how the smart contract verification looks so if we",
    "start": "2264160",
    "end": "2271060"
  },
  {
    "text": "have this really really simple smart contract",
    "start": "2271060",
    "end": "2274799"
  },
  {
    "text": "Okay so I'm gonna verify this so what I can say is",
    "start": "2276400",
    "end": "2283680"
  },
  {
    "text": "so what I can say so I don't have a specification here so okay let me put this specification says Okay I want us",
    "start": "2296339",
    "end": "2303220"
  },
  {
    "text": "so that when I transfer the money front that's been sent to me that the balance of the owner has increased by a",
    "start": "2303220",
    "end": "2311020"
  },
  {
    "text": "particular amount foreign",
    "start": "2311020",
    "end": "2316020"
  },
  {
    "text": "now if I try to verify this what's going to happen",
    "start": "2321599",
    "end": "2326460"
  },
  {
    "text": "okay so so what compiles it",
    "start": "2329500",
    "end": "2333839"
  },
  {
    "text": "and verify this so you see that the that method actually fails because it's telling us that",
    "start": "2334900",
    "end": "2342480"
  },
  {
    "text": "so that donate method um it doesn't actually that assertion doesn't hold okay that associated with",
    "start": "2343180",
    "end": "2350560"
  },
  {
    "text": "that actually doesn't hold the reason is that that particular transfer method it actually returns a value it could be",
    "start": "2350560",
    "end": "2356980"
  },
  {
    "text": "basically if it succeeds it actually turns a different value so what we wrote in here there's no guarantee that what",
    "start": "2356980",
    "end": "2362500"
  },
  {
    "text": "we have done here with actually the actual currency will actually get transferred to the particular person",
    "start": "2362500",
    "end": "2367599"
  },
  {
    "text": "right so what we have to do here is we have to say",
    "start": "2367599",
    "end": "2371880"
  },
  {
    "text": "okay so we know that the transfer is actually two and then a transfer result and what we can see here is that",
    "start": "2378579",
    "end": "2387299"
  },
  {
    "text": "so we're going to say is that the it's only when the transfer succeeds that the balance of the owner will",
    "start": "2391780",
    "end": "2399280"
  },
  {
    "text": "increase with whatever was centered okay this is the implication operator so with this new",
    "start": "2399280",
    "end": "2404740"
  },
  {
    "text": "contract now we can try verifying this again",
    "start": "2404740",
    "end": "2409140"
  },
  {
    "text": "okay so now we see okay so now it verifies because the verifier was able to prove",
    "start": "2419980",
    "end": "2425619"
  },
  {
    "text": "that the code we've written matches our specification that that the balance of",
    "start": "2425619",
    "end": "2431320"
  },
  {
    "text": "the owner will always increase okay so that's one way that we can use and of course so we if we were doing if we were",
    "start": "2431320",
    "end": "2437380"
  },
  {
    "text": "doing this traditionally we would use the unit test and say okay um we would make a mock-up mock-up uh",
    "start": "2437380",
    "end": "2443500"
  },
  {
    "text": "have like a value so we would say okay if what happens when I trans result is false",
    "start": "2443500",
    "end": "2449320"
  },
  {
    "text": "um you know so we can mock those values but the thing about is that you know we have to do that basically for every method we have to try and think on you",
    "start": "2449320",
    "end": "2456160"
  },
  {
    "text": "know whatever bugs would occur in our program but for our verification basically as long as the code does much",
    "start": "2456160",
    "end": "2463180"
  },
  {
    "text": "specification it's going to be flagged okay so and that's so that's really the",
    "start": "2463180",
    "end": "2468220"
  },
  {
    "text": "power of static analysis um you don't have to consider you don't have to consider basically every",
    "start": "2468220",
    "end": "2473680"
  },
  {
    "text": "particular condition that that you know you could think of where an error will happen or a bug would occur",
    "start": "2473680",
    "end": "2479320"
  },
  {
    "text": "um once your code does much specification then default the verifier will actually tell you okay this you",
    "start": "2479320",
    "end": "2484839"
  },
  {
    "text": "have to look at your code something is wrong inside your code you so that's how formal verification can complement",
    "start": "2484839",
    "end": "2490839"
  },
  {
    "text": "um different ways of testing like unit testing and fuzzing",
    "start": "2490839",
    "end": "2495539"
  },
  {
    "text": "okay so another thing we can look let's look at briefly as re-entry attacks um basically and this is a really really",
    "start": "2495900",
    "end": "2501280"
  },
  {
    "text": "famous type of vulnerability and smart contract is one of the actually first vulnerable attacks on ethereum and a",
    "start": "2501280",
    "end": "2506380"
  },
  {
    "text": "real Straight Talk actually cause ethereum basically that was what caused ethereum to Fork um you know so these types of volunteers are actually very",
    "start": "2506380",
    "end": "2512440"
  },
  {
    "text": "very common so um how we can mitigate this is that so this is a standard token contract",
    "start": "2512440",
    "end": "2520480"
  },
  {
    "text": "um what happens so what Stratus does is try to expose this API function where you",
    "start": "2520480",
    "end": "2526480"
  },
  {
    "text": "can say you can actually tell if a particular address is actually another smart contract and you cannot and you",
    "start": "2526480",
    "end": "2533200"
  },
  {
    "text": "can basically say okay no I don't want to send I don't want to deal with this if the Tactical address is a smart contract",
    "start": "2533200",
    "end": "2540160"
  },
  {
    "text": "okay so this is a this is a token this is a token contract okay we have a method here",
    "start": "2540160",
    "end": "2547660"
  },
  {
    "text": "called transfer from and we have transfer to",
    "start": "2547660",
    "end": "2553500"
  },
  {
    "text": "okay so what I want to do is",
    "start": "2554140",
    "end": "2557700"
  },
  {
    "text": "so I want to let's say I write a precondition",
    "start": "2559540",
    "end": "2564059"
  },
  {
    "text": "syntax it's just basically plain C sharp code more or less okay",
    "start": "2587460",
    "end": "2592839"
  },
  {
    "text": "sorry oh yeah thank you again",
    "start": "2592839",
    "end": "2598180"
  },
  {
    "text": "it's the second time you've saved me yes so okay so I can write in this this",
    "start": "2598180",
    "end": "2603400"
  },
  {
    "text": "particular this function free condition okay so let's I would say this and see that's firefighters and see what happens",
    "start": "2603400",
    "end": "2611400"
  },
  {
    "text": "okay I think we still have a sense we have a syntax error",
    "start": "2620260",
    "end": "2624720"
  },
  {
    "text": "oh yeah okay yeah so this is kind of it's contrary because when you put in when you write a function precondition",
    "start": "2627359",
    "end": "2633339"
  },
  {
    "text": "it actually goes below the function declaration but before the actual curly",
    "start": "2633339",
    "end": "2638500"
  },
  {
    "text": "brackets so that's one kind of strange thing so basically that's where they require statement goes",
    "start": "2638500",
    "end": "2645900"
  },
  {
    "text": "okay so this is what's a compile and so we can see that with that annotation",
    "start": "2655920",
    "end": "2664318"
  },
  {
    "text": "okay so you can see that any so any function any function that we have annotation is going to feel because",
    "start": "2667060",
    "end": "2672099"
  },
  {
    "text": "there's no Infinity verifier to prove that we're actually that particular call has been made so an address that isn't a",
    "start": "2672099",
    "end": "2679660"
  },
  {
    "text": "smart contract so what we would have to do this because we will have to go into our code and we would have to basically",
    "start": "2679660",
    "end": "2685060"
  },
  {
    "text": "put checks um into our code to check to see that you know the address that what we're dealing with is in a smart contract code",
    "start": "2685060",
    "end": "2691240"
  },
  {
    "text": "and you know and so once we've put what we've put those checks in we will run the verify again and the verifier would",
    "start": "2691240",
    "end": "2698380"
  },
  {
    "text": "be able to tell us okay if it can prove that that particular method is never called with an address that is a another",
    "start": "2698380",
    "end": "2705520"
  },
  {
    "text": "smart contract then yeah basically that that the contract will actually validate and so all this is being done statically",
    "start": "2705520",
    "end": "2711880"
  },
  {
    "text": "um it's not being you're not using in a test with guitar right and say okay what happens if I pass in a smart contract",
    "start": "2711880",
    "end": "2717099"
  },
  {
    "text": "okay by just looking at the physical at the source code okay um yeah so and so basically so that",
    "start": "2717099",
    "end": "2722980"
  },
  {
    "text": "that's basically just a brief overview of foreign verification of c-sharp smart contracts um I'll post up the links to the",
    "start": "2722980",
    "end": "2729760"
  },
  {
    "text": "repository and test online so um if you have any if you have any questions uh take a note or you can just",
    "start": "2729760",
    "end": "2736359"
  },
  {
    "text": "get me on social media okay so thanks thanks very much",
    "start": "2736359",
    "end": "2741480"
  },
  {
    "text": "[Applause]",
    "start": "2741580",
    "end": "2746469"
  }
]