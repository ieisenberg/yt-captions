[
  {
    "text": "all right so let's start off this session first of all how was lunch for everyone was it good uh great it was",
    "start": "4279",
    "end": "12519"
  },
  {
    "text": "really awesome for me as well question I'm a first time NDC speaker is the food",
    "start": "12519",
    "end": "17720"
  },
  {
    "text": "always this good or is it just Porto just Porto okay then I came to the",
    "start": "17720",
    "end": "24439"
  },
  {
    "text": "right place thank you very much all right welcome everyone thanks for coming to the session uh my my name is AAL fou",
    "start": "24439",
    "end": "31279"
  },
  {
    "text": "I'm a test automation engineer from the Netherlands I work for a company called test coders uh more about that later but",
    "start": "31279",
    "end": "37600"
  },
  {
    "text": "first I got to admit I'm very happy to see so many of you interested in uh in testing because you know who doesn't",
    "start": "37600",
    "end": "44039"
  },
  {
    "text": "want to you know sit in for a 60-minute talk about unit testing right because",
    "start": "44039",
    "end": "49879"
  },
  {
    "text": "that is the most awesome part of development who agrees with",
    "start": "49879",
    "end": "54920"
  },
  {
    "text": "me ah you feel pressured into that doing that I know it no I'm kidding um but it",
    "start": "54920",
    "end": "61559"
  },
  {
    "text": "is true right unit testing is generally not most exciting part of your day I think most of you are developers",
    "start": "61559",
    "end": "67159"
  },
  {
    "text": "actually right who who's developer engineer that's literally every one of you cool um so yeah it's not the most",
    "start": "67159",
    "end": "75320"
  },
  {
    "text": "important most it is the most important part if you ask me um but it's not the most exciting part of your day and I",
    "start": "75320",
    "end": "82560"
  },
  {
    "text": "hope to offer you something in the session that might actually get unit testing at least a little bit",
    "start": "82560",
    "end": "87799"
  },
  {
    "text": "interesting a little bit less boring because because yeah it can be quite boring I've seen some some tests and",
    "start": "87799",
    "end": "94439"
  },
  {
    "text": "some test suite and I can imagine why you feel that way but first I'll introduce myself a little bit I said I'm",
    "start": "94439",
    "end": "100840"
  },
  {
    "text": "from the Netherlands test automation engineer but actually I want to introduce someone",
    "start": "100840",
    "end": "105920"
  },
  {
    "text": "else um I didn't bring a co-speaker with me but I want to introduce you uh to someone who I believe is the best test",
    "start": "105920",
    "end": "113560"
  },
  {
    "text": "engineer of all time in the history of the field of test Automation and that is",
    "start": "113560",
    "end": "118920"
  },
  {
    "text": "uh my son uh now I blocked his eyes a bit funky actually just for security reasons or",
    "start": "118920",
    "end": "124920"
  },
  {
    "text": "privacy reasons um but I generally believe that he is the best test engineer out there um he's only he",
    "start": "124920",
    "end": "131879"
  },
  {
    "text": "turned two years old uh to yeah we we celebrated the second birthday last week and he's super skilled in two practices",
    "start": "131879",
    "end": "141879"
  },
  {
    "text": "um in in the practice of test engineering and the first one is actually um low testing I think most of",
    "start": "141879",
    "end": "147680"
  },
  {
    "text": "you are familiar with the term low testing you you have performed a few of these yourselves specifically stress",
    "start": "147680",
    "end": "153760"
  },
  {
    "text": "testing I mean the level of sophistication that goes in his test design and execution when testing the",
    "start": "153760",
    "end": "161040"
  },
  {
    "text": "limits of my patients that is just really up to professional levels you",
    "start": "161040",
    "end": "166159"
  },
  {
    "text": "know it's really ridiculous and the other one is uh exploratory testing and that's actually what we're going to talk",
    "start": "166159",
    "end": "171360"
  },
  {
    "text": "about today and as also an example of what you see on this picture here is he just had a very successful yeah session",
    "start": "171360",
    "end": "180200"
  },
  {
    "text": "as you can see he found an alternative way to fit into his seat like you know feed up he couldn't get out of it any",
    "start": "180200",
    "end": "186560"
  },
  {
    "text": "after this but you know let's forget about that um sometimes test cases go wrong he you know that happens with",
    "start": "186560",
    "end": "193239"
  },
  {
    "text": "exploratory testing as you can see it's quite a big bump on his head that's because he just discovered",
    "start": "193239",
    "end": "199959"
  },
  {
    "text": "gravity yeah yeah it's actually uh due to his",
    "start": "199959",
    "end": "205360"
  },
  {
    "text": "sister she's not as much of a test engineer really um but she's like the enabler she's like the scrum Master",
    "start": "205360",
    "end": "212959"
  },
  {
    "text": "remover of impediments you know and he was in his seat in that previous picture",
    "start": "212959",
    "end": "218760"
  },
  {
    "text": "he was in a seat and you can see the straps on his shoulder she removed those straps for him and then he just you know",
    "start": "218760",
    "end": "225439"
  },
  {
    "text": "dropped down he just felt like let's go for the ground and and he hit it quite hard so um those are my kids they're uh",
    "start": "225439",
    "end": "234280"
  },
  {
    "text": "where yeah they're they're animals they're true dragons masters of Destruction if you if you will no I'll",
    "start": "234280",
    "end": "241799"
  },
  {
    "text": "kiding aide I of them but yeah inspiration for me",
    "start": "241799",
    "end": "247159"
  },
  {
    "text": "um as I said before I I'm I'm in Consulting specifically the niche of test automation unlike I believe most of",
    "start": "247159",
    "end": "254560"
  },
  {
    "text": "you so I'm not a developer not a programmer not as skilled as it as you guys but um I do get hired by um",
    "start": "254560",
    "end": "261479"
  },
  {
    "text": "software companies um to look at issues and when I get hired um yeah something",
    "start": "261479",
    "end": "267639"
  },
  {
    "text": "broke or something yeah typically something broke or there are a lot of bugs or there is something not right",
    "start": "267639",
    "end": "275759"
  },
  {
    "text": "with quality there is there is an issue there there's May too too much bugs or",
    "start": "275759",
    "end": "282000"
  },
  {
    "text": "you know releasing goes way too uh way too slow um stuff like that so that's",
    "start": "282000",
    "end": "288240"
  },
  {
    "text": "the companies I typically see so when I talk about stuff from work it's not that I think all companies are bad or Aller",
    "start": "288240",
    "end": "295080"
  },
  {
    "text": "development organizations um are doing it wrong definitely not there's a lot of you guys doing it it very very right uh",
    "start": "295080",
    "end": "301440"
  },
  {
    "text": "but I just want to share one common problem that I seem to come across uh when helping developer set up buildin",
    "start": "301440",
    "end": "309000"
  },
  {
    "text": "quality because that's what they're usually after and this is one of the most common questions I get",
    "start": "309000",
    "end": "316280"
  },
  {
    "text": "asked and I know some of you are struggling with this question who who has okay be honest okay who has asked",
    "start": "316280",
    "end": "322919"
  },
  {
    "text": "himself this questions um in the last year more than once all right so that's for the viewers",
    "start": "322919",
    "end": "331039"
  },
  {
    "text": "that's almost everyone at least more than half of it um and there's a good reason for it because there's no one",
    "start": "331039",
    "end": "337560"
  },
  {
    "text": "clear answer when we're looking at unit testing which we are today there are a few things that we can Implement few",
    "start": "337560",
    "end": "344199"
  },
  {
    "text": "things that we can look at they're quite tricky as well and I know most of you are using them um the most obvious one",
    "start": "344199",
    "end": "350319"
  },
  {
    "text": "is coverage everyone's familiar with coverage right don't need out",
    "start": "350319",
    "end": "356120"
  },
  {
    "text": "cool but there's an issue with coverage as you can see there many many forms of",
    "start": "356120",
    "end": "363600"
  },
  {
    "text": "coverage yeah yeah um basically I will",
    "start": "363600",
    "end": "368840"
  },
  {
    "text": "narrow this down to two classifications two main classes of coverage and they're",
    "start": "368840",
    "end": "376639"
  },
  {
    "text": "not the same there is on one hand code coverage that I think all of you are familiar",
    "start": "376639",
    "end": "382039"
  },
  {
    "text": "with that's the one you referring to in your head right now and there's test coverage that's saying something else",
    "start": "382039",
    "end": "388840"
  },
  {
    "text": "and terminology might be confusing sometimes and I will explain that a little bit later but I want to go over both",
    "start": "388840",
    "end": "394800"
  },
  {
    "text": "Concepts real quick now you said all you you're familiar with code coverage um",
    "start": "394800",
    "end": "400440"
  },
  {
    "text": "typically with code coverage we have source code and we have test code or we have a a test Suite somewhere what code",
    "start": "400440",
    "end": "406599"
  },
  {
    "text": "coverage does it only looks at that source code part it doesn't do anything",
    "start": "406599",
    "end": "412240"
  },
  {
    "text": "basically with the test code you know you you feed that to a runner or or whatever and but your code coverage tool",
    "start": "412240",
    "end": "417919"
  },
  {
    "text": "is only looking at your Source Cod what is your source code doing after you execute your test what's it doing so",
    "start": "417919",
    "end": "425120"
  },
  {
    "text": "when I play my test it checks how much stuff and we'll break that down a little",
    "start": "425120",
    "end": "431479"
  },
  {
    "text": "bit how much stuff got triggered when I executed my test",
    "start": "431479",
    "end": "438360"
  },
  {
    "text": "suite and then there is a percentage that's really cool to put up on GitHub in your batches and public repository if",
    "start": "438360",
    "end": "444879"
  },
  {
    "text": "you have a very high coverage really nice to show off um but I want you to",
    "start": "444879",
    "end": "450840"
  },
  {
    "text": "learn and to think about what does that tell you what have you learned when you look at that number and therefore you",
    "start": "450840",
    "end": "457960"
  },
  {
    "text": "need to dive into that coverage tool a little bit because what it actually says it's a metric that says something about",
    "start": "457960",
    "end": "463560"
  },
  {
    "text": "quantity nothing about quality absolutely nothing I could write a",
    "start": "463560",
    "end": "470120"
  },
  {
    "text": "simple script pretend that is a test then run it and it could still get me",
    "start": "470120",
    "end": "476280"
  },
  {
    "text": "100% code coverage because I would could just just call you know entry points of my source code and and I could call",
    "start": "476280",
    "end": "482680"
  },
  {
    "text": "everything but code coverage does not look at your tests if your tests are good you could have written tests that",
    "start": "482680",
    "end": "489680"
  },
  {
    "text": "don't include any assertions and still get a high coverage I'm not saying it's useless you",
    "start": "489680",
    "end": "496199"
  },
  {
    "text": "should definitely use it you should definitely use it but I advise you to use it when you're in the process of",
    "start": "496199",
    "end": "502879"
  },
  {
    "text": "writing your unit tests right so not when you're there and you think okay have I done enough check",
    "start": "502879",
    "end": "509560"
  },
  {
    "text": "it out don't look at the metric don't look at the number but usually these TP these tools come with a report like um",
    "start": "509560",
    "end": "516760"
  },
  {
    "text": "it it says these lines it highlights the lines that you didn't cover in red or that didn't run in red and and the lines",
    "start": "516760",
    "end": "523518"
  },
  {
    "text": "that did run it highlights those in green or something like that look at those reports they very very useful and",
    "start": "523519",
    "end": "529279"
  },
  {
    "text": "uh I should encourage you to uh to use that then there's another one test",
    "start": "529279",
    "end": "534560"
  },
  {
    "text": "coverage mentioned it before test coverage instead of code coverage actually uses it the entire Spectrum it",
    "start": "534560",
    "end": "542399"
  },
  {
    "text": "actually is a quantity of metric oh sorry a metric of quality um so it says",
    "start": "542399",
    "end": "549200"
  },
  {
    "text": "something about how well is your test Suite testing your source code how well",
    "start": "549200",
    "end": "554800"
  },
  {
    "text": "is it doing that job whoops um there are not many",
    "start": "554800",
    "end": "561440"
  },
  {
    "text": "automation tools out there but there is one that I'd like to mention I'm not going into that in depth um but you can",
    "start": "561440",
    "end": "567959"
  },
  {
    "text": "look it up and that is mut testing anyone heard of mutation testing yeah a couple of you have those who haven't",
    "start": "567959",
    "end": "575040"
  },
  {
    "text": "it's a tool that introduces mutants in your source code then takes your your",
    "start": "575040",
    "end": "580320"
  },
  {
    "text": "your your test suite and runs it and see if it traces back to these introduced mutants if you if you find all the",
    "start": "580320",
    "end": "586839"
  },
  {
    "text": "mutants if they got killed basically by the test so if the tests fail as they should then uh they are doing a good job",
    "start": "586839",
    "end": "595880"
  },
  {
    "text": "now there's test coverage also for manual testing but we're not not talking about that",
    "start": "595880",
    "end": "601320"
  },
  {
    "text": "today so what we want ultimately is a high coverage that what we want that's",
    "start": "601839",
    "end": "607000"
  },
  {
    "text": "uh that's the goal here now how do we get there how do we design tests or a",
    "start": "607000",
    "end": "614120"
  },
  {
    "text": "test Suite that that achieves that that goal it's not easy and typically what we",
    "start": "614120",
    "end": "619839"
  },
  {
    "text": "do um what I would do is I start on the uh left of this graph that you see here",
    "start": "619839",
    "end": "626200"
  },
  {
    "text": "you start automating obvious cases you know the things that are super clear the",
    "start": "626200",
    "end": "631519"
  },
  {
    "text": "the the the yeah the easy ones then you'll move on to a bit more difficult",
    "start": "631519",
    "end": "636880"
  },
  {
    "text": "ones things that you think like I'm not sure if people are going to use this code this way or whatever but it could",
    "start": "636880",
    "end": "644040"
  },
  {
    "text": "be done um and you move to the middle to the different cases that's usually where uh where it",
    "start": "644040",
    "end": "651000"
  },
  {
    "text": "gets really difficult after that when we get to the edge cases I mean technically we could go on",
    "start": "651000",
    "end": "658079"
  },
  {
    "text": "and on and it's an infin infinitive amount of edge cases that you probably can come up with uh and it gets really",
    "start": "658079",
    "end": "667600"
  },
  {
    "text": "difficult right so there's a technique a test design",
    "start": "668560",
    "end": "674320"
  },
  {
    "text": "technique that I've seen many developers apply and it's it's a very well uh it's a good technique it's called error",
    "start": "674320",
    "end": "680040"
  },
  {
    "text": "guessing it basically builds off on the experience you have and the knowledge you have of a system and therefore you",
    "start": "680040",
    "end": "688200"
  },
  {
    "text": "get to uh you get to design your test case you think all right that component might be a bit you know shaky that's",
    "start": "688200",
    "end": "695079"
  },
  {
    "text": "that's where I'm going to attack it a bit more that's that's a type of error guessing an example of error guessing",
    "start": "695079",
    "end": "701480"
  },
  {
    "text": "there comes a problem you will never get the full coverage because as I said",
    "start": "701480",
    "end": "707040"
  },
  {
    "text": "before they're endless edge cases are endless so you want to get as much edge cases as possible there's another",
    "start": "707040",
    "end": "713959"
  },
  {
    "text": "technique um in test engineering it's called the decision table technique and it's actually quite easy and I'm going",
    "start": "713959",
    "end": "719639"
  },
  {
    "text": "to illustrate this technique uh with a simple front end system so this is maybe not a login or sorry maybe not a a unit",
    "start": "719639",
    "end": "726920"
  },
  {
    "text": "Test example I will show you one later though um but just to explain decision",
    "start": "726920",
    "end": "732200"
  },
  {
    "text": "table Technique we have a login page I know it says sign up but it could say login doesn't doesn't really matter and",
    "start": "732200",
    "end": "739639"
  },
  {
    "text": "it has two input fields and those could be either right or wrong both of them right so the the username could be",
    "start": "739639",
    "end": "745639"
  },
  {
    "text": "either right or wrong so if it's empty it's wrong if it's like some funny string it's wrong um pretty",
    "start": "745639",
    "end": "752440"
  },
  {
    "text": "straightforward um you would write a table for that and to determine what",
    "start": "752440",
    "end": "758720"
  },
  {
    "text": "what cases you should automate or what tests you should automate and when there's two conditions or two properties",
    "start": "758720",
    "end": "764480"
  },
  {
    "text": "in this case it Narrows down or boils down to four test cases to just cover",
    "start": "764480",
    "end": "770040"
  },
  {
    "text": "all possible scenarios makes sense right okay not that",
    "start": "770040",
    "end": "775920"
  },
  {
    "text": "difficult now there's another one now there's three",
    "start": "775920",
    "end": "781399"
  },
  {
    "text": "conditions I really had to look for this this image though because there are almost no login systems with three input",
    "start": "781399",
    "end": "787920"
  },
  {
    "text": "Val input Fields but uh I managed to found one um what happens then so before",
    "start": "787920",
    "end": "795480"
  },
  {
    "text": "when there was two conditions we had four test cases now there's three conditions and we have to automate eight test cases hm I can see this problem",
    "start": "795480",
    "end": "803680"
  },
  {
    "text": "here right it's still doable I mean you can you can still do this but",
    "start": "803680",
    "end": "810759"
  },
  {
    "text": "hm the problem is this with the decision table technique although it's very thorough and gives you a high coverage",
    "start": "811560",
    "end": "817639"
  },
  {
    "text": "this is the formula for calculating the amount of test cases you need to automate and after I uh I draw up the",
    "start": "817639",
    "end": "826519"
  },
  {
    "text": "this next table I get to see more and more why you",
    "start": "826519",
    "end": "833920"
  },
  {
    "text": "don't like unit testing so X being the amount of test",
    "start": "833920",
    "end": "840079"
  },
  {
    "text": "cases and being the the amount of conditions that you can come up with",
    "start": "840079",
    "end": "845720"
  },
  {
    "text": "because not all examples are as straightforward as that login page",
    "start": "845720",
    "end": "853279"
  },
  {
    "text": "okay so I'm not even let's let's if you can come up with a uh with 10 conditions",
    "start": "853839",
    "end": "860360"
  },
  {
    "text": "that means like do the math like 1,24 test cases for for for one single",
    "start": "860360",
    "end": "865920"
  },
  {
    "text": "unit nah I'm not going to do that who you U you is going to do that yeah that's the one guy yeah I like",
    "start": "865920",
    "end": "873440"
  },
  {
    "text": "you we need to talk I'm going to hire you all right I I would go up to three",
    "start": "873440",
    "end": "880800"
  },
  {
    "text": "maybe four after that I'm I'm out you know that's not my game now that's where",
    "start": "880800",
    "end": "885880"
  },
  {
    "text": "it's get boring I don't want to do that but I do want to get that High coverage though I've got an example I know this",
    "start": "885880",
    "end": "893240"
  },
  {
    "text": "is a uh python syntax example I'm not a net developer as I said before I think",
    "start": "893240",
    "end": "898680"
  },
  {
    "text": "python is very easy to read has almost no syntax a lot of downsides to it but",
    "start": "898680",
    "end": "904279"
  },
  {
    "text": "we have a simple unit test right here the most simplest unit test in the world of testing there's a function that does",
    "start": "904279",
    "end": "910639"
  },
  {
    "text": "not need to be written but for the sake of this presentation it is and it's called add numbers and we're going to test that thing it accepts an array of",
    "start": "910639",
    "end": "917560"
  },
  {
    "text": "integers and that's it it provides us back it returns an integer and that's all the requirements there",
    "start": "917560",
    "end": "923920"
  },
  {
    "text": "is now we just looked at the decision table design technique and I want to",
    "start": "923920",
    "end": "929000"
  },
  {
    "text": "think I want you to think how many conditions using the decision table design technique how many conditions can",
    "start": "929000",
    "end": "936399"
  },
  {
    "text": "you come up with for this extremely easy test or simple test I'll give you a few",
    "start": "936399",
    "end": "942319"
  },
  {
    "text": "all right so as you can see we have a list or an array of two integers and",
    "start": "942319",
    "end": "949519"
  },
  {
    "text": "those are two positive integers and it could be negative integers could be an empty array so stuff like that that's",
    "start": "949519",
    "end": "955199"
  },
  {
    "text": "what we're typically looking for so I've already given you three I will give you a second to think about how many other",
    "start": "955199",
    "end": "961480"
  },
  {
    "text": "conditions that are rather there or not can you think",
    "start": "961480",
    "end": "967040"
  },
  {
    "text": "of who says more than",
    "start": "967319",
    "end": "972440"
  },
  {
    "text": "three right okay who says more than four yeah who says more than",
    "start": "972440",
    "end": "980279"
  },
  {
    "text": "five six all right six cool seven seven yeah",
    "start": "980279",
    "end": "985920"
  },
  {
    "text": "there's a few in oh nice eight no still the same guy okay thank you",
    "start": "985920",
    "end": "991959"
  },
  {
    "text": "very much um so the ones that set eight you're",
    "start": "991959",
    "end": "997519"
  },
  {
    "text": "going to write 265 unit tests for this thing okay",
    "start": "997519",
    "end": "1004920"
  },
  {
    "text": "theoretically what I'm trying to illustrate is um the fact that someone",
    "start": "1004920",
    "end": "1009959"
  },
  {
    "text": "here or the most of you say three or four and and someone else thinks okay I can think of more stuff that would",
    "start": "1009959",
    "end": "1015720"
  },
  {
    "text": "result in people here down here here writing only 32 test cases and the one",
    "start": "1015720",
    "end": "1021079"
  },
  {
    "text": "other ones in the back are writing 26056 or something I don't know a lot",
    "start": "1021079",
    "end": "1026640"
  },
  {
    "text": "more test cases okay there's a better way to do that luckily for us",
    "start": "1026640",
    "end": "1033180"
  },
  {
    "text": "[Music] um this is the way that we're doing it right now and this is very specific the",
    "start": "1033180",
    "end": "1038760"
  },
  {
    "text": "hands the title specific it's uh explicit uh if I change the input I got",
    "start": "1038760",
    "end": "1044000"
  },
  {
    "text": "to change the output you know 1 and two equals three if I say one and three then my test fails one so I always have to",
    "start": "1044000",
    "end": "1050760"
  },
  {
    "text": "alter two parameters here or not even parameters two input two hardcoded",
    "start": "1050760",
    "end": "1056320"
  },
  {
    "text": "things now where property based testing comes in is first it makes it more generic and I'm going to show you an the",
    "start": "1056320",
    "end": "1062960"
  },
  {
    "text": "exact same sample example but I refactored it into a property based testing example and that looks something",
    "start": "1062960",
    "end": "1069160"
  },
  {
    "text": "like this now this is hypothesis it's just a",
    "start": "1069160",
    "end": "1075200"
  },
  {
    "text": "p python Library don't worry about it I'll I'll tell you what it does it's funky uh funky stuff but there is stuff",
    "start": "1075200",
    "end": "1081919"
  },
  {
    "text": "for The NET Framework as well there is FS check I haven't listed it I'm sure you can Google property based testing C",
    "start": "1081919",
    "end": "1088480"
  },
  {
    "text": "and property based testing. net there's a great Library called FS che check that out what it does it describes the input",
    "start": "1088480",
    "end": "1096039"
  },
  {
    "text": "rather than specifies the input and it does that right there and then passes it",
    "start": "1096039",
    "end": "1101280"
  },
  {
    "text": "on to a parameterized test now the most important part about this is actually the second part the",
    "start": "1101280",
    "end": "1107799"
  },
  {
    "text": "assertion part the testing part a test without assertions is not test so the testing part where we now describe the",
    "start": "1107799",
    "end": "1115360"
  },
  {
    "text": "output as well now it becomes fully parameterized now we can run this thing",
    "start": "1115360",
    "end": "1121440"
  },
  {
    "text": "hundreds of times thousands of times probably in a couple seconds with all kind of different inputs because that's",
    "start": "1121440",
    "end": "1127640"
  },
  {
    "text": "actually what a property based testing framework does it generates input based",
    "start": "1127640",
    "end": "1133080"
  },
  {
    "text": "off that description that we had here at the top now since since we've described",
    "start": "1133080",
    "end": "1139120"
  },
  {
    "text": "our output we can also run assertions that actually give me feedback if",
    "start": "1139120",
    "end": "1144760"
  },
  {
    "text": "there's invaluable assertions that don't say anything that then it becomes pointless so these things typically say",
    "start": "1144760",
    "end": "1152880"
  },
  {
    "text": "something yeah let's build a dragon okay okay so I'm going to give you an actual example that makes a little bit more",
    "start": "1153720",
    "end": "1159799"
  },
  {
    "text": "sense because that last one was just a refactored one that no one's ever going to",
    "start": "1159799",
    "end": "1165440"
  },
  {
    "text": "use so for this you have to know we have written a simple sorting algorithm",
    "start": "1165440",
    "end": "1171919"
  },
  {
    "text": "you're not ever going to do that but let's say for a s you have written an sorting algorithm it's just a function",
    "start": "1171919",
    "end": "1177559"
  },
  {
    "text": "or a class method whatever uh it accepts an array of integers again but it also returns disordered",
    "start": "1177559",
    "end": "1185440"
  },
  {
    "text": "array uh yeah now this thing becomes a bit more",
    "start": "1185440",
    "end": "1191000"
  },
  {
    "text": "specific because now I've also specified some other parameters so that's something you can do with property based",
    "start": "1191000",
    "end": "1196720"
  },
  {
    "text": "testing you can keep it very vague uh say a list of integers that's still very vague I could you know massage the",
    "start": "1196720",
    "end": "1202960"
  },
  {
    "text": "do a little bit and uh and tell it at least I want a minimum amount of items in that array of two or a maximum amount",
    "start": "1202960",
    "end": "1209840"
  },
  {
    "text": "of items or maximum amount of attempts anything really um sometimes that's",
    "start": "1209840",
    "end": "1215840"
  },
  {
    "text": "useful so an array of integers with a minimum of two and the actual cool thing",
    "start": "1215840",
    "end": "1221159"
  },
  {
    "text": "here is in the bottom where this is where we built that Dragon actually um",
    "start": "1221159",
    "end": "1226360"
  },
  {
    "text": "is first we check the type that's the first first assertion um second assertion it's a it's a python out of",
    "start": "1226360",
    "end": "1232400"
  },
  {
    "text": "the box thing it basically checks that the input that we put into the test or",
    "start": "1232400",
    "end": "1237640"
  },
  {
    "text": "the the content of that array is the exact same content that comes out of the out of the function when we call it um",
    "start": "1237640",
    "end": "1244720"
  },
  {
    "text": "so that there's no data loss or or trimming or deleting of duplicates or something like that and the last",
    "start": "1244720",
    "end": "1250840"
  },
  {
    "text": "assertion um that's really funny syntax you should ignore that but basically",
    "start": "1250840",
    "end": "1256320"
  },
  {
    "text": "what it says is it checks if each item in the array is smaller than the next",
    "start": "1256320",
    "end": "1261919"
  },
  {
    "text": "one that's basically what it checks now this thing that this thing can run two",
    "start": "1261919",
    "end": "1267440"
  },
  {
    "text": "300 times somewhat like that um but let's run it I actually wrote this algorithm and and and let's run it I",
    "start": "1267440",
    "end": "1273679"
  },
  {
    "text": "want to show you the the output so carus here it",
    "start": "1273679",
    "end": "1279799"
  },
  {
    "text": "goes on the left I know you can't read it but I'll zoom in a little bit on the left you'll see the the output of my",
    "start": "1279799",
    "end": "1285919"
  },
  {
    "text": "test and at the top you'll see all the examples that it",
    "start": "1285919",
    "end": "1292039"
  },
  {
    "text": "tried to run now this is a failing test you should know this test is actually",
    "start": "1292039",
    "end": "1298279"
  },
  {
    "text": "failing um and the reason it prints this out because I I I put it in there um but",
    "start": "1298279",
    "end": "1303400"
  },
  {
    "text": "I want to show you something is that interesting is like um at the top you see the examples it tries to run are",
    "start": "1303400",
    "end": "1310880"
  },
  {
    "text": "quite long quite extensive big big numbers big integers negative positive",
    "start": "1310880",
    "end": "1315960"
  },
  {
    "text": "everything big lists a lot of items and each run it seems to become a bit",
    "start": "1315960",
    "end": "1322480"
  },
  {
    "text": "more simple if you will and that is because it is actually failing and I",
    "start": "1322480",
    "end": "1327960"
  },
  {
    "text": "know for a fact that from the second example right there that starts with minus",
    "start": "1327960",
    "end": "1333679"
  },
  {
    "text": "16 the test fails but it does not stop running that's the sweet thing it does",
    "start": "1333679",
    "end": "1339360"
  },
  {
    "text": "not stop running until it knows for sure that it that it's false yeah falsifying",
    "start": "1339360",
    "end": "1345120"
  },
  {
    "text": "that it has a super easy example for you to show so keeps simplifying it and keeps running it until it finds the",
    "start": "1345120",
    "end": "1350960"
  },
  {
    "text": "easiest example and even that doesn't work and then it shows you that at the bottom",
    "start": "1350960",
    "end": "1356720"
  },
  {
    "text": "here in this case that's called shrinking as I said complex example doesn't work I make",
    "start": "1356720",
    "end": "1364400"
  },
  {
    "text": "it simpler I'll make it simpler until I find the easiest example I can find and",
    "start": "1364400",
    "end": "1370840"
  },
  {
    "text": "that doesn't work because one and zero is not a sorted array because I'm",
    "start": "1370840",
    "end": "1377080"
  },
  {
    "text": "sorting an ascending order you got to know that it was an ascending order I was looking for so basically what it",
    "start": "1377080",
    "end": "1382840"
  },
  {
    "text": "says yeah nice AAL but you've written algorithm that can't even S I can't even",
    "start": "1382840",
    "end": "1389120"
  },
  {
    "text": "sort that that's pretty stupid and the reason for for that is because I didn't wrote any source code I just returned",
    "start": "1389120",
    "end": "1395840"
  },
  {
    "text": "the very same thing I returned the list that did get and then didn't do anything with it and that um that Resorts into",
    "start": "1395840",
    "end": "1402279"
  },
  {
    "text": "only one only one assertion that is actually failing here so as you see you can see",
    "start": "1402279",
    "end": "1408679"
  },
  {
    "text": "there's my little uh little test again and it has the three assertions and as you can see there's a little arrow next",
    "start": "1408679",
    "end": "1415039"
  },
  {
    "text": "to the last one now you remember that that last assertion was telling me whether or not the sword was listed",
    "start": "1415039",
    "end": "1420600"
  },
  {
    "text": "basically that's one of the properties a listed sword listed ass sorted list sorry or array so basically telling me",
    "start": "1420600",
    "end": "1428039"
  },
  {
    "text": "that list of one and zero you cannot sort that you",
    "start": "1428039",
    "end": "1433679"
  },
  {
    "text": "idiot it has the right type yes and it contains the same items yeah sure but you can't sort",
    "start": "1433679",
    "end": "1440960"
  },
  {
    "text": "it now that's pretty neat there's something else I want to show you briefly about property based",
    "start": "1441120",
    "end": "1447240"
  },
  {
    "text": "testing because I think we covered the basics right now there's there's a little bit more I'm not going to you know teach you how to implement all of",
    "start": "1447240",
    "end": "1454120"
  },
  {
    "text": "this because I don't know FS check and that's I think what most of you are going to use if you're going to use",
    "start": "1454120",
    "end": "1459360"
  },
  {
    "text": "property based testing which after today you will of course um there's something else",
    "start": "1459360",
    "end": "1465039"
  },
  {
    "text": "because you are typically not writing source code that uses arrays of integers",
    "start": "1465039",
    "end": "1471559"
  },
  {
    "text": "you probably are be using something more complex and every I looked it up every",
    "start": "1471559",
    "end": "1478000"
  },
  {
    "text": "property based testing tool and framework out there for any Technologies has this ability of creating your own",
    "start": "1478000",
    "end": "1485080"
  },
  {
    "text": "custom strategies in case of hypothesis that's what they call it it could be complex types could be interfaces you",
    "start": "1485080",
    "end": "1491960"
  },
  {
    "text": "could use basically anything as a um descriptive input so in this case python again",
    "start": "1491960",
    "end": "1500960"
  },
  {
    "text": "doesn't work with interfaces at least not explicit it doesn't have an interface keyword so I'm using a dog",
    "start": "1500960",
    "end": "1506880"
  },
  {
    "text": "Class A model sort of and I'm writing a test right here this is the",
    "start": "1506880",
    "end": "1513520"
  },
  {
    "text": "test um and above that test you'll see how I described the input this is my",
    "start": "1513520",
    "end": "1519600"
  },
  {
    "text": "description before we had just we we passed a list of integers in that given",
    "start": "1519600",
    "end": "1524720"
  },
  {
    "text": "decorator now we're doing a custom uh strategy where I basically built my class I gave",
    "start": "1524720",
    "end": "1531159"
  },
  {
    "text": "it my two attributes that it has a dog has a name and it's of a certain breed um and I'm passing that to my test now",
    "start": "1531159",
    "end": "1538320"
  },
  {
    "text": "I'm printing that out um in the test which is also funny so this is not a test even though it says it's test",
    "start": "1538320",
    "end": "1544600"
  },
  {
    "text": "because a test should contain at least one assertion yes yes thank you great",
    "start": "1544600",
    "end": "1553240"
  },
  {
    "text": "um so the funny thing is and that's what I want you to remember I'm I'm giving it",
    "start": "1553240",
    "end": "1559000"
  },
  {
    "text": "the name attribute as a text so I'm not specifying anything else I keep it very",
    "start": "1559000",
    "end": "1564200"
  },
  {
    "text": "vague I say text hypothy here do something with text strings and then it",
    "start": "1564200",
    "end": "1569760"
  },
  {
    "text": "does something like this so the everything between the",
    "start": "1569760",
    "end": "1575960"
  },
  {
    "text": "brackets was just the breed that it selected from a constant list basically and if you if you look at it there's no",
    "start": "1575960",
    "end": "1582960"
  },
  {
    "text": "almost no normal characters in there because I didn't specify anything else I didn't say what characters to use what",
    "start": "1582960",
    "end": "1588480"
  },
  {
    "text": "not to use um it even tried a an awful lot of spaces there okay that's just",
    "start": "1588480",
    "end": "1594679"
  },
  {
    "text": "stuff these are edge cases right who would think of any of these edge cases by by show of hands who would think to",
    "start": "1594679",
    "end": "1601760"
  },
  {
    "text": "write a single specific explicit unit test to test something",
    "start": "1601760",
    "end": "1607039"
  },
  {
    "text": "like pointer there's no one raising his hand oh that's the one yeah yeah he would he",
    "start": "1607039",
    "end": "1613520"
  },
  {
    "text": "would think of it cool cool nice that's what I me mean but these are edge cases",
    "start": "1613520",
    "end": "1619240"
  },
  {
    "text": "that actually may cause trouble this is where the bugs are you've seen that graph before where I",
    "start": "1619240",
    "end": "1625440"
  },
  {
    "text": "had the happy path different path and edge cases the bugs are on the right side of that graph they're not in the",
    "start": "1625440",
    "end": "1632120"
  },
  {
    "text": "happy path because that's what you were thinking about when you were writing your your source code they're not in the",
    "start": "1632120",
    "end": "1637760"
  },
  {
    "text": "middle typically because that's something you can come up with with error guessing no they're in the edge",
    "start": "1637760",
    "end": "1644480"
  },
  {
    "text": "cases that's where it becomes tricky",
    "start": "1644480",
    "end": "1649520"
  },
  {
    "text": "right I had this in the title of the talk as well now I want you to be honest who of",
    "start": "1650799",
    "end": "1657520"
  },
  {
    "text": "you came actually for the property based testing stuff yeah you're all good boys and who",
    "start": "1657520",
    "end": "1664440"
  },
  {
    "text": "of you actually you know come on be honest came for the test reduction stuff you thought yeah that's more interesting",
    "start": "1664440",
    "end": "1670799"
  },
  {
    "text": "than than anything else okay so cool yeah test reduction",
    "start": "1670799",
    "end": "1678360"
  },
  {
    "text": "um there's a lot of there was a lot of noise around property based testing in the beginning",
    "start": "1678360",
    "end": "1683760"
  },
  {
    "text": "it's actually been around for for quite a long time um but everywhere I I I",
    "start": "1683760",
    "end": "1690080"
  },
  {
    "text": "looked basically you get all kinds of claims that property based testing leads",
    "start": "1690080",
    "end": "1695760"
  },
  {
    "text": "to less testing that's not entirely true sorry so that's the bad",
    "start": "1695760",
    "end": "1703039"
  },
  {
    "text": "news but the good news is property based testing actually",
    "start": "1703039",
    "end": "1709120"
  },
  {
    "text": "can reduce your test efforts the time that you not test efforts the time that you spend on on unit",
    "start": "1709120",
    "end": "1716519"
  },
  {
    "text": "testing it also increases that coverage that's the most important thing that's that's why we want to do it because we",
    "start": "1716519",
    "end": "1722960"
  },
  {
    "text": "it does Edge it tests edge cases that we couldn't think about we don't but still it need to be",
    "start": "1722960",
    "end": "1730320"
  },
  {
    "text": "covered and yes it possibly I said possibly explicitly possibly decreases",
    "start": "1730480",
    "end": "1736080"
  },
  {
    "text": "test code um not test cases because actually it increases test cases because",
    "start": "1736080",
    "end": "1742360"
  },
  {
    "text": "that test that runs if it runs successfully in about about 250 times or",
    "start": "1742360",
    "end": "1747480"
  },
  {
    "text": "200 times by default in less than a second like most unit tests they're very quick so technically the amount of test",
    "start": "1747480",
    "end": "1755000"
  },
  {
    "text": "cases that you run massively increases when you use property based testing however you may be able to in decrease",
    "start": "1755000",
    "end": "1761840"
  },
  {
    "text": "your test code not just because it's parameterized if you haven't so and you see that you have a lot of repeated test",
    "start": "1761840",
    "end": "1767399"
  },
  {
    "text": "go please first parameterize um makes it a whole lot easier a little bit generic",
    "start": "1767399",
    "end": "1772799"
  },
  {
    "text": "um but yeah incre decrease test code but not test",
    "start": "1772799",
    "end": "1778840"
  },
  {
    "text": "cases so let's get back to uh let's back to this question when have you done enough so",
    "start": "1778840",
    "end": "1786840"
  },
  {
    "text": "now you have your coverage in place you run your property based testing tool and you say ah cool I got a 99% coverage",
    "start": "1786840",
    "end": "1793600"
  },
  {
    "text": "then you run it again and at maybe 98 because you know property based testing doesn't always do the same thing twice",
    "start": "1793600",
    "end": "1799440"
  },
  {
    "text": "you know it's semi- random data not exactly but sort of so you at least you",
    "start": "1799440",
    "end": "1804640"
  },
  {
    "text": "got a high coverage cool and um that's nice whoops that was the next",
    "start": "1804640",
    "end": "1810399"
  },
  {
    "text": "one um but we're still looking at unit testing and I want you to to understand",
    "start": "1810399",
    "end": "1818080"
  },
  {
    "text": "that property based testing isn't something you always have to apply necessarily I think it's actually a",
    "start": "1818080",
    "end": "1824840"
  },
  {
    "text": "great addition in some cases uh I don't want you to think that oh I've got all my tests wrong and now I've got to",
    "start": "1824840",
    "end": "1831320"
  },
  {
    "text": "refactor everything and apply property based testing everywhere that's not necessarily true um and that's another",
    "start": "1831320",
    "end": "1840679"
  },
  {
    "text": "issue um that I've come across quite often with with development teams is",
    "start": "1840679",
    "end": "1846159"
  },
  {
    "text": "They Don't Really yet understand when to apply which technique when to go all the",
    "start": "1846159",
    "end": "1852120"
  },
  {
    "text": "way on unit testing and perhaps use property based testing or mutation testing to check all of of that and when",
    "start": "1852120",
    "end": "1858320"
  },
  {
    "text": "to you know test lightly because yeah there are cases where you",
    "start": "1858320",
    "end": "1864480"
  },
  {
    "text": "can actually do that you don't always have to do it and for that there's a model maybe you've heard of it maybe you",
    "start": "1864480",
    "end": "1870080"
  },
  {
    "text": "haven't it's called risk-based testing and that's where we look at probability of something or a unit or an",
    "start": "1870080",
    "end": "1878159"
  },
  {
    "text": "entire component or maybe an entire system to break How likely is something",
    "start": "1878159",
    "end": "1883480"
  },
  {
    "text": "to go you know down and the impact it will have on the end user or the",
    "start": "1883480",
    "end": "1889000"
  },
  {
    "text": "organization or you know now we can I've sketched four",
    "start": "1889000",
    "end": "1894960"
  },
  {
    "text": "blocks you know let's say that there's a low impact and a low probability then",
    "start": "1894960",
    "end": "1900039"
  },
  {
    "text": "the risk level of course would be low and then you need to assign you need to assign actions and",
    "start": "1900039",
    "end": "1907440"
  },
  {
    "text": "efforts to all of these levels now I specifically have only three levels as you can say low medium high I've seen",
    "start": "1907440",
    "end": "1915799"
  },
  {
    "text": "organizations use this model model and it becomes very well it's yeah it's kind",
    "start": "1915799",
    "end": "1921039"
  },
  {
    "text": "of a pitfall to specify more levels like there's low there's very low the medium",
    "start": "1921039",
    "end": "1927039"
  },
  {
    "text": "rare and high critical and all that I would advise you to avoid uh getting too",
    "start": "1927039",
    "end": "1933679"
  },
  {
    "text": "many levels because you have to assign a certain set of test activities or",
    "start": "1933679",
    "end": "1938799"
  },
  {
    "text": "quality activities um to each uh level now this is where I believe property",
    "start": "1938799",
    "end": "1944960"
  },
  {
    "text": "based testing you could assign for example to the high risk level if",
    "start": "1944960",
    "end": "1950279"
  },
  {
    "text": "something U has a huge impact if it goes down and it's actually quite likely that that is going to happen then you I",
    "start": "1950279",
    "end": "1956880"
  },
  {
    "text": "believe you want to test that very thoroughly right so 100% test coverage",
    "start": "1956880",
    "end": "1962039"
  },
  {
    "text": "doesn't necessarily mean or is it always necessary for the low risk stuff I'm",
    "start": "1962039",
    "end": "1969039"
  },
  {
    "text": "fine with just happy path you know happy path test case is that cover",
    "start": "1969039",
    "end": "1974919"
  },
  {
    "text": "that yeah so that concludes most of my uh most of my stuff I want",
    "start": "1976039",
    "end": "1983799"
  },
  {
    "text": "to yeah I want to recap a little bit before we uh go down because I've seen there's still food left from lunch you",
    "start": "1983799",
    "end": "1989880"
  },
  {
    "text": "know I'm really anxious to get some more um if there's nothing you're going to",
    "start": "1989880",
    "end": "1996880"
  },
  {
    "text": "remember from this talk that's very sad but I hope you at least remember this one thing I build a MM dragon and what I",
    "start": "1996880",
    "end": "2006000"
  },
  {
    "text": "mean by that dragon I've been mentioned it before as well I like dragons um dragons are absolute",
    "start": "2006000",
    "end": "2011919"
  },
  {
    "text": "Monsters of Destruction I want and they are very well in you know attacking stuff and I want you to attack your",
    "start": "2011919",
    "end": "2018679"
  },
  {
    "text": "stuff I want you to try and break what you make if you can break what you make",
    "start": "2018679",
    "end": "2024440"
  },
  {
    "text": "then you know exactly what to do when you're refactoring if you can't break what you make you've done a really good",
    "start": "2024440",
    "end": "2029480"
  },
  {
    "text": "job you know then you don't need the coverage and the risk-based testing just make sure you can't break it in order to",
    "start": "2029480",
    "end": "2037159"
  },
  {
    "text": "do so a property based test is an absolute dragon as I said before is very accurate because that's what dragons are",
    "start": "2037159",
    "end": "2043799"
  },
  {
    "text": "dragons are very really accurate have you there's there's this little series I believe what's it called Game of Thrones",
    "start": "2043799",
    "end": "2049520"
  },
  {
    "text": "anyone knows it yeah I see some laughs okay only four people know Game of Thrones in this room that's that's oh",
    "start": "2049520",
    "end": "2055919"
  },
  {
    "text": "now it's more okay okay cool there's this there's actually this one scene where this this Dragon Queen is being",
    "start": "2055919",
    "end": "2062079"
  },
  {
    "text": "attacked in an arena you know you know what I'm talking about I don't know which season or episode it was but she's",
    "start": "2062079",
    "end": "2067358"
  },
  {
    "text": "she's being attacked she's in an arena she's being protected by some of her guards and and then all of a sudden her",
    "start": "2067359",
    "end": "2073560"
  },
  {
    "text": "dragon flies into the rescue and he starts you know attacking all of her attackers and uh it's really funny",
    "start": "2073560",
    "end": "2080200"
  },
  {
    "text": "actually when he is so accurate in his level of Destruction that he seems to",
    "start": "2080200",
    "end": "2086040"
  },
  {
    "text": "know exactly which one are the good ones the good guys and which one are the bad guys you know but to me they look almost",
    "start": "2086040",
    "end": "2091560"
  },
  {
    "text": "the same you know they're both wearing masks and armor and everyone is shouting and throwing Spears and stuff and uh no",
    "start": "2091560",
    "end": "2097839"
  },
  {
    "text": "he knows exactly oh I need to eat that guy and throw that one away you know that's why I think they are very",
    "start": "2097839",
    "end": "2103359"
  },
  {
    "text": "accurate that's where I learn that and um I want you to make a unit test that does exactly that and apply it when",
    "start": "2103359",
    "end": "2110240"
  },
  {
    "text": "necessary also learn from Game of Thrones you don't always need dragons you don't always want dragons so",
    "start": "2110240",
    "end": "2116160"
  },
  {
    "text": "risk-based testing for that to determine when and what to need and uh go build yourself a",
    "start": "2116160",
    "end": "2122680"
  },
  {
    "text": "dragon that was it I'm going to thank you for your attention thanks for coming in if you want to get the slides I will",
    "start": "2122680",
    "end": "2129000"
  },
  {
    "text": "uh put this repo public in about a second you can always email me um and",
    "start": "2129000",
    "end": "2134040"
  },
  {
    "text": "I'm also on slack especially the NC space I hope you had a good time I hope you learn something and pick up",
    "start": "2134040",
    "end": "2139359"
  },
  {
    "text": "something that you can take home with you um I'm enjoyed myself thank you very",
    "start": "2139359",
    "end": "2145240"
  },
  {
    "text": "[Applause]",
    "start": "2145240",
    "end": "2155800"
  },
  {
    "text": "much",
    "start": "2155800",
    "end": "2158800"
  }
]