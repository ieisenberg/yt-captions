[
  {
    "text": "hello hello testing okay good sorry for the slight delay we had a network",
    "start": "4840",
    "end": "10219"
  },
  {
    "text": "connectivity issue but we are on now so well I am Damian this is David Fowler David",
    "start": "10219",
    "end": "17210"
  },
  {
    "text": "yeah we are from the a spinet team at Microsoft today we're gonna do a talk on",
    "start": "17210",
    "end": "22520"
  },
  {
    "text": "signal are a little bit different to the talks with are in the past we're kind of challenging ourselves what Dave is",
    "start": "22520",
    "end": "27710"
  },
  {
    "text": "challenging himself really I've got the easy job to do something that we're not particularly familiar with which it'll",
    "start": "27710",
    "end": "34550"
  },
  {
    "text": "be fun but it's we're gonna use it as a teaching and learning exercise to hopefully let you walk away with a bit",
    "start": "34550",
    "end": "40549"
  },
  {
    "text": "more information about how signal hour works under the covers and what has driven some of the recent expansion in",
    "start": "40549",
    "end": "48379"
  },
  {
    "text": "how you can use signal I was just kind of cool especially in these new sort of cloud focused scenarios so very quick",
    "start": "48379",
    "end": "55640"
  },
  {
    "text": "refresh on what signal are is I'm assuming I shouldn't assume but does everyone here know what signal is who",
    "start": "55640",
    "end": "62059"
  },
  {
    "text": "who is used signal are before excellent okay well we're gonna do a quick refresh because you know it's been what six",
    "start": "62059",
    "end": "67820"
  },
  {
    "text": "years now I think we've had a version of signal herb that's been shipped but we've gone through two major revisions",
    "start": "67820",
    "end": "73790"
  },
  {
    "text": "we've got the sort of classic signal our phrase Fannett and then the 8-minute core signal our which came out was a",
    "start": "73790",
    "end": "78860"
  },
  {
    "text": "year and a half two years eighteen point one point one so what is it well we've",
    "start": "78860",
    "end": "84170"
  },
  {
    "text": "got to changed how we talk about it we used to talk about incredibly simple real-time web for net which I think I",
    "start": "84170",
    "end": "90290"
  },
  {
    "text": "coined six years ago but now you know we've moved on the industry's a bit different we care about other things and",
    "start": "90290",
    "end": "96080"
  },
  {
    "text": "so what is signal are it's a framework for duplic duplex RPC and and streaming",
    "start": "96080",
    "end": "103159"
  },
  {
    "text": "between client and server there's lots of other RPC frameworks like we add a G RPC support needs Bennett core three but",
    "start": "103159",
    "end": "109580"
  },
  {
    "text": "signal I still has some unique capabilities especially the server push element which you don't get from things",
    "start": "109580",
    "end": "116060"
  },
  {
    "text": "like G RPC which is why it's still around that's the real-time messaging written server server push functionality that I",
    "start": "116060",
    "end": "122060"
  },
  {
    "text": "talked about there it also is built on top of a set of unique protocols that",
    "start": "122060",
    "end": "128090"
  },
  {
    "text": "really formed the basis of signal art in the original signal there were protocols",
    "start": "128090",
    "end": "133190"
  },
  {
    "text": "under the covers but we didn't really talk about them we didn't you know standardized them that we didn't really",
    "start": "133190",
    "end": "138660"
  },
  {
    "text": "document them they were just an implementation detail of the ACE P net signal our framework now that we're in",
    "start": "138660",
    "end": "145770"
  },
  {
    "text": "more of a heterogeneous sort of embracing the heterogeneous world on the asp net team and we have a sure and we",
    "start": "145770",
    "end": "152100"
  },
  {
    "text": "have services all the type of things we want Sigma to work with as many things as possible and so we do have a product",
    "start": "152100",
    "end": "158400"
  },
  {
    "text": "a couple of protocols will talk about that and that's what really allows signaler to work these days then we have",
    "start": "158400",
    "end": "165000"
  },
  {
    "text": "this service support for client addressing and grouping and that's one of those things that really extends",
    "start": "165000",
    "end": "170670"
  },
  {
    "text": "signal are beyond your typical RPC framework right you have the ability to say send a message to this individual",
    "start": "170670",
    "end": "176880"
  },
  {
    "text": "client or to group a series of clients into a group that you call them and send them a message you don't get that with a",
    "start": "176880",
    "end": "182850"
  },
  {
    "text": "typical point-to-point RPC framework so very quick demo here's you know classic",
    "start": "182850",
    "end": "189239"
  },
  {
    "text": "signal our app the Charter app chat are all signal apps have to have their last",
    "start": "189239",
    "end": "195510"
  },
  {
    "text": "Val remove in order to make them a signal or app so I'm going to boot this",
    "start": "195510",
    "end": "200760"
  },
  {
    "text": "one up and it just looks like the standard sort of chat app you would have seen we demo for signaler for awhile if",
    "start": "200760",
    "end": "208350"
  },
  {
    "text": "your browser is downloading a proxy script which I'm very happy to so I can type in here and hit Send and it sends",
    "start": "208350",
    "end": "214890"
  },
  {
    "text": "and comes back from the server all the type of normal stuff that you would see and I've got this other button over here Stream which utilizes a new feature in",
    "start": "214890",
    "end": "222560"
  },
  {
    "text": "signal area nice Burnett core and I can click that and the server is streaming information down to me it's going to",
    "start": "222560",
    "end": "228030"
  },
  {
    "text": "count up to 10 in this case now we were able to do things like this before in Sigma but because of a spinet core and",
    "start": "228030",
    "end": "235350"
  },
  {
    "text": "we have some new browser output window stuck there that's super interesting I'm",
    "start": "235350",
    "end": "240570"
  },
  {
    "text": "using David's laptop so if I'm feel like I'm clunking around a bit that's why so let's have a look at the server code so",
    "start": "240570",
    "end": "245760"
  },
  {
    "text": "we can all remember and refresh yourselves what this looks like here's the really simple part right the send message on the server is just in a hub",
    "start": "245760",
    "end": "252060"
  },
  {
    "text": "I'd turn around say clients dot all that send async and that's all I have to do the stream one is the new one so I'm now",
    "start": "252060",
    "end": "258989"
  },
  {
    "text": "taking advantage of you have turned off tap having me would like a terrorist",
    "start": "258989",
    "end": "264720"
  },
  {
    "text": "all right that's why I'm struggling so much we're using the C sharp 8i async",
    "start": "264720",
    "end": "273750"
  },
  {
    "text": "enumerable or async streams feature in order to very simply allow a client to call the server and then us stream",
    "start": "273750",
    "end": "279570"
  },
  {
    "text": "information back with a beautiful awaiting yielding full loop right there like doing that type of stuff previously",
    "start": "279570",
    "end": "285750"
  },
  {
    "text": "required you to use extra frameworks or other type of primitives now that stuff is all kind of built in what does it",
    "start": "285750",
    "end": "292020"
  },
  {
    "text": "look like in the client it's all pretty straightforward as long as you're happy and comfortable doing JavaScript that is",
    "start": "292020",
    "end": "298290"
  },
  {
    "text": "the wrong file that's the C sharp file so you know we've seen this type of stuff before I've got a bunch of",
    "start": "298290",
    "end": "305130"
  },
  {
    "text": "JavaScript I create a connection up here on line 35 I'm configuring some logging so we can see some stuff take place I'm",
    "start": "305130",
    "end": "311970"
  },
  {
    "text": "gonna grab my chat form it's wire up an event listener check some validity I actually used like html5 validation and",
    "start": "311970",
    "end": "318270"
  },
  {
    "text": "stuff in here which is kind of cool and then I go ahead and they do some Dom stuff like this is all very very",
    "start": "318270",
    "end": "324510"
  },
  {
    "text": "standard type of stuff that you would have seen when doing any type of client development I'm not using any frameworks",
    "start": "324510",
    "end": "329520"
  },
  {
    "text": "this is just bare-bones to sort of see how this stuff works so that's our super quick refresher on how signaler works that's all we really",
    "start": "329520",
    "end": "335640"
  },
  {
    "text": "need to get back to in our level of understanding to understand what we're going to do the next so we've all seen",
    "start": "335640",
    "end": "342810"
  },
  {
    "text": "in the past how signaler supports multiple clients I showed you the JavaScript client just there we also",
    "start": "342810",
    "end": "348330"
  },
  {
    "text": "support different transports so I'm using WebSockets but as we've had forever we fall back to",
    "start": "348330",
    "end": "353550"
  },
  {
    "text": "other transports like service and events and long polling in the cases that we can't do that and we ship a bunch of client SDKs we ship the JavaScript SDK",
    "start": "353550",
    "end": "360930"
  },
  {
    "text": "the dotnet SDK the Java SDK there is a swift SDK that's third-party there's a",
    "start": "360930",
    "end": "366660"
  },
  {
    "text": "Python SDK and we are currently writing a C++ SDK so we've got all this nice",
    "start": "366660",
    "end": "371729"
  },
  {
    "text": "support on the client and our transport so what is it that makes that possible well I mentioned it before we have these",
    "start": "371729",
    "end": "379350"
  },
  {
    "text": "protocols so this flexibility is enabled by two layers we have a transport protocol layer which as you can imagine",
    "start": "379350",
    "end": "385860"
  },
  {
    "text": "it defines the set of rules that say while a client wants to connect to a server over some type of transport ok",
    "start": "385860",
    "end": "392310"
  },
  {
    "text": "the default one that you usually use too is HTTP but you can plug in your own transports if you wish to and there's a",
    "start": "392310",
    "end": "398380"
  },
  {
    "text": "to respect their you can go up onto our github site you can read the protocol spec to enhance port and then the second",
    "start": "398380",
    "end": "403990"
  },
  {
    "text": "layer is the hub protocol and that's the messaging protocol that signaler uses to support the fact that the client can",
    "start": "403990",
    "end": "409450"
  },
  {
    "text": "call a method on the server and that the server can call methods on the client and that gives you all the message types",
    "start": "409450",
    "end": "415180"
  },
  {
    "text": "that you would expect in any type of protocol so for transports we've all seen these type of diagrams before a",
    "start": "415180",
    "end": "420760"
  },
  {
    "text": "client connects to the server with long polling and then the server is going to wait for an event to take place in that",
    "start": "420760",
    "end": "426420"
  },
  {
    "text": "response back and then the client will send another request the server sent events was one of our fallback",
    "start": "426420",
    "end": "431530"
  },
  {
    "text": "transports as well the serve the client will send a request to the server the server turns around and then pumps",
    "start": "431530",
    "end": "438220"
  },
  {
    "text": "messages down over that event source object stream back to the client and we",
    "start": "438220",
    "end": "444250"
  },
  {
    "text": "can get messages that way WebSockets is the one that we really want to use right if we're in the browser we do a WebSocket request to the",
    "start": "444250",
    "end": "450910"
  },
  {
    "text": "server the server says yep that sounds great let me ever send you back a 101 and we'll switch protocols and then we",
    "start": "450910",
    "end": "456280"
  },
  {
    "text": "can just happily send messages to each other over that existing TCP connection wonderful the very first request that",
    "start": "456280",
    "end": "462430"
  },
  {
    "text": "gets sent is a negotiate request before any of the messages start flowing the quiet and the server have to agree on",
    "start": "462430",
    "end": "468310"
  },
  {
    "text": "what transport they're going to use and what protocol our messaging protocol they're going to use and so we send up a",
    "start": "468310",
    "end": "473500"
  },
  {
    "text": "negotiate request post some endpoint with a negotiate path and optionally",
    "start": "473500",
    "end": "478720"
  },
  {
    "text": "sending a negotiate version and then the client the server will respond with the response with a bunch of metadata like a",
    "start": "478720",
    "end": "484510"
  },
  {
    "text": "connection token and an ID what version are we can negotiating with and then a list of transports of the server",
    "start": "484510",
    "end": "490630"
  },
  {
    "text": "supports okay then the client can use that information then to actually make a connection to the server here are the",
    "start": "490630",
    "end": "497380"
  },
  {
    "text": "types of messages that are in our messaging protocol so this is all the types of messages that are required for",
    "start": "497380",
    "end": "502630"
  },
  {
    "text": "a server to support a client talking to it with hubs you don't need to know these you can go to github and read the",
    "start": "502630",
    "end": "508150"
  },
  {
    "text": "spec but if you're going to build a server like we're going to today you'll need to understand these different type of messages so that you can set up a",
    "start": "508150",
    "end": "515349"
  },
  {
    "text": "compliance server so clients can connect you so why don't we build a server because I mean we can show slides all",
    "start": "515349",
    "end": "521200"
  },
  {
    "text": "day but I want David not to on stage so I'm gonna make him write a server in something other than a dotnet language",
    "start": "521200",
    "end": "527740"
  },
  {
    "text": "Mario you're gonna use go yeah add a programming go right nope okay does any want to hear it no goal who knows go does anyone know so no",
    "start": "527740",
    "end": "535730"
  },
  {
    "text": "one's gonna be able to call him out anything anyone can do that it's like you guys kind of data alright I probably learnt go over the last couple of months",
    "start": "535730",
    "end": "542779"
  },
  {
    "text": "I got super annoyed very well but no more than you guys service good alright",
    "start": "542779",
    "end": "553670"
  },
  {
    "text": "so let's do a hello world gold just to everyone's feet wet and warm wet warm warm and wet",
    "start": "553670",
    "end": "559730"
  },
  {
    "text": "alright let's in the same folder I'll do a make there dry run this is fully open",
    "start": "559730",
    "end": "569690"
  },
  {
    "text": "BS code yeah code supports every language pretty much",
    "start": "569690",
    "end": "575120"
  },
  {
    "text": "pretty much on the planet right so I'll type in the main go here here's my empty",
    "start": "575120",
    "end": "581150"
  },
  {
    "text": "file right easy suffer I'll create a package is like a an assembly boundary",
    "start": "581150",
    "end": "587510"
  },
  {
    "text": "basically package main here's my main function isn't doing very much right now",
    "start": "587510",
    "end": "593150"
  },
  {
    "text": "I'm gonna print hello world so fmt print",
    "start": "593150",
    "end": "598550"
  },
  {
    "text": "lying hello world pretty simple so",
    "start": "598550",
    "end": "604520"
  },
  {
    "text": "import her so first dotnet developers imports relate using I want to import namespace okay",
    "start": "604520",
    "end": "610550"
  },
  {
    "text": "if MT is the package name okay FME has a packet method called print' light on it",
    "start": "610550",
    "end": "615950"
  },
  {
    "text": "I'm calling print and I'm printing hello world pretty simple right on the shell I",
    "start": "615950",
    "end": "621860"
  },
  {
    "text": "can run go run main I should print hello world right that was quite awful awesome",
    "start": "621860",
    "end": "629000"
  },
  {
    "text": "all right we go developers Oh excellent yeah if nothing else walk out today see",
    "start": "629000",
    "end": "635720"
  },
  {
    "text": "you've now know how to do hello world and go alright so that was that was lame okay let's do hello world HTTP so I can",
    "start": "635720",
    "end": "642440"
  },
  {
    "text": "connect to that with signal on that right no okay so there's a package called HTTP in goal framework and go DCL",
    "start": "642440",
    "end": "650290"
  },
  {
    "text": "understand HTTP package where i can call methods like listen and serve which will",
    "start": "650290",
    "end": "656330"
  },
  {
    "text": "listen on a on a port and address i can say listen on localhost 8080 five",
    "start": "656330",
    "end": "662200"
  },
  {
    "text": "because that's very specific for a reason haha I can so far this is",
    "start": "662200",
    "end": "669180"
  },
  {
    "text": "nothing right it's actually listened to add code for a specific end point okay so I want a",
    "start": "669180",
    "end": "674220"
  },
  {
    "text": "handle handle funk slash and I wanted to",
    "start": "674220",
    "end": "680760"
  },
  {
    "text": "return hello world I'm gonna do an anonymous function okay and there's no type in for single yeah so I have to",
    "start": "680760",
    "end": "687990"
  },
  {
    "text": "actually remember this it is w is a HTTP",
    "start": "687990",
    "end": "693630"
  },
  {
    "text": "dot works response writer and request is",
    "start": "693630",
    "end": "699090"
  },
  {
    "text": "a pointer pointer of HTTP you don't request not read request request alright",
    "start": "699090",
    "end": "705530"
  },
  {
    "text": "good so far all right now I'm gonna print hello world so write W dot right",
    "start": "705530",
    "end": "714620"
  },
  {
    "text": "this should be like that they should",
    "start": "716150",
    "end": "721350"
  },
  {
    "text": "probably not be there all right better write hello world and it won't",
    "start": "721350",
    "end": "730410"
  },
  {
    "text": "work because this is a a byte array this plus a bite area and I'm passing it or a",
    "start": "730410",
    "end": "736260"
  },
  {
    "text": "byte slice and I'm passing it a string string right but in go stranger bytes I can just cast it I should just work Oh",
    "start": "736260",
    "end": "745400"
  },
  {
    "text": "constitutes all wait other way around buttery right I can cast this to a byte array I didn't go everything is",
    "start": "745400",
    "end": "751620"
  },
  {
    "text": "backwards so this is an array of bytes well yeah I was like even your application of my lambda backwards to",
    "start": "751620",
    "end": "757200"
  },
  {
    "text": "what I'm used to is its forwards because you your English you're saying W is a response writer request is a pointer to",
    "start": "757200",
    "end": "763590"
  },
  {
    "text": "replace okay so it's like VB all over again oh I mean I mean yeah so if I hit port",
    "start": "763590",
    "end": "770910"
  },
  {
    "text": "80 85 alive okay so we've got two hello",
    "start": "770910",
    "end": "776880"
  },
  {
    "text": "world mr. Ringo we're closer to connecting the signal a client at this point yeah I have an ace to the end point alright first step is to get your",
    "start": "776880",
    "end": "782730"
  },
  {
    "text": "application into Matt's kitchen so you wrote this thing called chatter yes and it was in a folder called chatter and",
    "start": "782730",
    "end": "790500"
  },
  {
    "text": "it's supposed to call it the root yes I'm gonna copy all of it over to here",
    "start": "790500",
    "end": "796230"
  },
  {
    "text": "okay can I have your entire yeah hey you got you got all my stuff thing let's rename",
    "start": "796230",
    "end": "801930"
  },
  {
    "text": "this to index okay and then tell go to",
    "start": "801930",
    "end": "809370"
  },
  {
    "text": "serve stomach falls from the group okay so I can do by the way I have a script",
    "start": "809370",
    "end": "815970"
  },
  {
    "text": "I'm gonna copy and pitch me at some point I'm just like going for my brain right now okay so handle slash and I",
    "start": "815970",
    "end": "823260"
  },
  {
    "text": "want to handle all files so file server and AC Peeta der I'm saying hand serve",
    "start": "823260",
    "end": "831170"
  },
  {
    "text": "files from this folder so here's that folder but the route the file server",
    "start": "831170",
    "end": "836730"
  },
  {
    "text": "method is returning a handler yep basically and then that's been possible handle takes a path and a handler a",
    "start": "836730",
    "end": "841920"
  },
  {
    "text": "Tyler is an interface that has a method called serve yep sir takes me requests and a response you can",
    "start": "841920",
    "end": "847170"
  },
  {
    "text": "write though it's like out requests it's like a request handler in the network middleware and file server implements",
    "start": "847170",
    "end": "853290"
  },
  {
    "text": "the the serve interface yep and it gives you a way to specify a directory to serve files from make sense right so now",
    "start": "853290",
    "end": "859620"
  },
  {
    "text": "I should run this again and I should see my Damian is beautiful you went to see boots",
    "start": "859620",
    "end": "865140"
  },
  {
    "text": "way too much time trying to network hey it's got to be pretty for the people but Ingo if I hit the actual network",
    "start": "865140",
    "end": "872790"
  },
  {
    "text": "networking start annoys hit look at the console there's lots of errors yeah so it requested the negotiate endpoint and",
    "start": "872790",
    "end": "880110"
  },
  {
    "text": "then I said couldn't find it makes sense right I don't have negotiate endpoint so we're basically at the first point my JavaScript code is running I showed you",
    "start": "880110",
    "end": "885660"
  },
  {
    "text": "before signal is trying to make a connection making the device sheet request yep ending a 404 because all you've done so far is write an HTML page",
    "start": "885660",
    "end": "891779"
  },
  {
    "text": "yeah toppy my HTML page yes copy sorry I'm building on your and your previous the first step in getting",
    "start": "891779",
    "end": "897779"
  },
  {
    "text": "the protocol to work if you negotiate endpoint that's correct so looking at the full protocol to here is the actual",
    "start": "897779",
    "end": "903649"
  },
  {
    "text": "link to the website that has our protocol description I had described with a transport protocol has to be",
    "start": "903649",
    "end": "909600"
  },
  {
    "text": "full duplex has to be binary safe has to be tech safe describes didn't ago she endpoint the responses for version 1",
    "start": "909600",
    "end": "916320"
  },
  {
    "text": "versus version 0 so we're gonna implement version 0 response to that okay I'm Lizzy who's ever like implemented a",
    "start": "916320",
    "end": "923459"
  },
  {
    "text": "protocol before like look there at the read an IRC or read some protocol and they've written code to implement it like a few hey that's a few people",
    "start": "923459",
    "end": "930300"
  },
  {
    "text": "that's good ok so I want more clients we want something fun to do go and try and implement ours",
    "start": "930300",
    "end": "935670"
  },
  {
    "text": "and then give us feedback it is if it's any good like maybe we need to improve our protocol it's perfect it's perfect",
    "start": "935670",
    "end": "941639"
  },
  {
    "text": "yeah okay I will let them be the judge of that based on how well you go in the",
    "start": "941639",
    "end": "946829"
  },
  {
    "text": "next half an hour so I'm going to create a function called map hub to map my hub and to not write the thing in Reverse",
    "start": "946829",
    "end": "952050"
  },
  {
    "text": "it's a path or a pathway the string okay okay path in the string I need to",
    "start": "952050",
    "end": "957959"
  },
  {
    "text": "handle the negotiate method first so time to start a copypasta okay negotiate",
    "start": "957959",
    "end": "965370"
  },
  {
    "text": "always goes to slash negotiate that's hard-coded it is okay I believe I have this thing in",
    "start": "965370",
    "end": "972980"
  },
  {
    "text": "snippet all right hi chichi okay map hub",
    "start": "973100",
    "end": "982110"
  },
  {
    "text": "pretty simple let's do much here's negotiate I need to copy the actual struck so in go strikes or battle",
    "start": "982110",
    "end": "988980"
  },
  {
    "text": "strikes verify your types the live on the stack so I'm declaring two straps",
    "start": "988980",
    "end": "994769"
  },
  {
    "text": "here that will throw my negotiate response okay and these tags over here are the attributes so these are like",
    "start": "994769",
    "end": "1000589"
  },
  {
    "text": "Jason name is transport lowercase T and Jason name here is also lowercase transport formats and then you can also",
    "start": "1000589",
    "end": "1007790"
  },
  {
    "text": "add things like I want to omit this feel that if it's no for example so this is",
    "start": "1007790",
    "end": "1013430"
  },
  {
    "text": "basically an attribute a c-sharp so thing this has like this other stuff that can be read out reflection time got",
    "start": "1013430",
    "end": "1018920"
  },
  {
    "text": "it got it it's just matter they have yeah a special comment yep it's pretty gross I love go tell us what you really",
    "start": "1018920",
    "end": "1028579"
  },
  {
    "text": "think that's fine nobody have to actually like",
    "start": "1028579",
    "end": "1033650"
  },
  {
    "text": "handle the ghost yet method so map hub will hit the string in to the path the",
    "start": "1033650",
    "end": "1039709"
  },
  {
    "text": "path bit of the actual signaler connection I'll make the Sigma hub chat is the actual hub okay and here's",
    "start": "1039709",
    "end": "1047240"
  },
  {
    "text": "my negotiate handler which is like slash chat slash negotiate right where this is going if you look at the actual error it",
    "start": "1047240",
    "end": "1052700"
  },
  {
    "text": "should have said /type /annot she ate right here yep okay got it is it alright so let's copy-paste this",
    "start": "1052700",
    "end": "1059720"
  },
  {
    "text": "negotiate handler so we can have a time to explain it",
    "start": "1059720",
    "end": "1066340"
  },
  {
    "text": "alright so what did we just do we copied",
    "start": "1067540",
    "end": "1074090"
  },
  {
    "text": "a bunch of things from my snippets the first thing is expressive post not a get",
    "start": "1074090",
    "end": "1080180"
  },
  {
    "text": "or a put her up if your not post return of 400 it's a bad client plants doing bad things for any particular reason we want to post",
    "start": "1080180",
    "end": "1086390"
  },
  {
    "text": "and certificate no okay alright that's fine I think it was because security you want",
    "start": "1086390",
    "end": "1091640"
  },
  {
    "text": "to plan for hanging a body at some point okay I think we had a body in the first version and we removed it",
    "start": "1091640",
    "end": "1097220"
  },
  {
    "text": "okay reasons the shiny can be any",
    "start": "1097220",
    "end": "1102680"
  },
  {
    "text": "anything we generate a random crypto hash for security reasons the connection ID yep okay so the ID this way well this",
    "start": "1102680",
    "end": "1109640"
  },
  {
    "text": "what identify your connections for future use easily I want to talk to that connection so this is ID and actually Jen from the server-side the protocol",
    "start": "1109640",
    "end": "1115910"
  },
  {
    "text": "doesn't specify the format condoning anything it's just an opaque string that's right okay so get actually ID",
    "start": "1115910",
    "end": "1121280"
  },
  {
    "text": "we'll just basics for encode a randomly generated by Turay okay this is this is the goal the goal version of new random",
    "start": "1121280",
    "end": "1128300"
  },
  {
    "text": "new crypto random like generate random bytes okay this is before encode divider into a string and then we send JSON",
    "start": "1128300",
    "end": "1135500"
  },
  {
    "text": "response that map to this truck so this is this is the equivalent of doing new negotiate response setting properties",
    "start": "1135500",
    "end": "1141500"
  },
  {
    "text": "set fields and then setting values and this returning okay a giant rate make",
    "start": "1141500",
    "end": "1146810"
  },
  {
    "text": "sense right this is good so far simple simple all right let's see why our server doesn't know so I'm not having to",
    "start": "1146810",
    "end": "1152330"
  },
  {
    "text": "do a ten point I'll be run go and in EDM does anyone here use edge iam I mean",
    "start": "1152330",
    "end": "1158780"
  },
  {
    "text": "edge new edge new edge are we supposed to call it we should have looked at the marketing material before he can GM make it a thing edgy edgy you krej is the",
    "start": "1158780",
    "end": "1165650"
  },
  {
    "text": "other one at hawk I just so bad though okay all right so I see more success",
    "start": "1165650",
    "end": "1171650"
  },
  {
    "text": "this time perfect okay more white less red so negotiate responded with a",
    "start": "1171650",
    "end": "1177980"
  },
  {
    "text": "beautiful jason response we can see it got responded here transport WebSockets",
    "start": "1177980",
    "end": "1183050"
  },
  {
    "text": "that's for a formats text binary transfer form is basically let you know if the transport supports text or binary",
    "start": "1183050",
    "end": "1188270"
  },
  {
    "text": "means pretty obvious here so that's also new in a snit course again ours we now support binary message types and so the",
    "start": "1188270",
    "end": "1193910"
  },
  {
    "text": "transport has to say yes I can do binary I mean when you have that because server-sent events did not support binary so we have to be",
    "start": "1193910",
    "end": "1199820"
  },
  {
    "text": "able to tell you whether we do it or not yeah but it tried to connect to the chat",
    "start": "1199820",
    "end": "1205970"
  },
  {
    "text": "endpoint with the WebSocket hand request and it get before four okay so renegotiate now the next step is the",
    "start": "1205970",
    "end": "1212420"
  },
  {
    "text": "client wants to say yep I'm ready to send you a WebSocket because you said I could use WebSockets yep so it created a WebSocket connection",
    "start": "1212420",
    "end": "1217850"
  },
  {
    "text": "but that horribly failed because you haven't written okay okay okay so let's add some more code now so let's kill the",
    "start": "1217850",
    "end": "1223400"
  },
  {
    "text": "server all right copy pasta in my public I'm gonna add some code to handle a",
    "start": "1223400",
    "end": "1230150"
  },
  {
    "text": "website for the connection is that built into the HTTP package you were using already they have a WebSocket thing it",
    "start": "1230150",
    "end": "1235520"
  },
  {
    "text": "is so there is a WebSocket package as well that is separate okay yeah after you recommend using a third party package because it's a one built in is",
    "start": "1235520",
    "end": "1240980"
  },
  {
    "text": "probably not good oh okay you always in the built in one yeah of course so so I",
    "start": "1240980",
    "end": "1248180"
  },
  {
    "text": "added a handler for the chat the hub endpoint okay and let's look at the",
    "start": "1248180",
    "end": "1253790"
  },
  {
    "text": "high-level returns a higher instance that implements the the handler interface yep gives me about for a",
    "start": "1253790",
    "end": "1258800"
  },
  {
    "text": "connection jacket actually get stuff from the request and response from so if",
    "start": "1258800",
    "end": "1264020"
  },
  {
    "text": "you had negotiated from the client side so the client can do in the go she ate get lady back and then connect with that idea to WebSockets okay so I've have an",
    "start": "1264020",
    "end": "1270530"
  },
  {
    "text": "ID I'm gonna send that up with my right socket connection and pass the other a string in the query string yep and then",
    "start": "1270530",
    "end": "1276740"
  },
  {
    "text": "the server I'm assuming that would usually validate that yes that was the idea I create for you this is also a",
    "start": "1276740",
    "end": "1282200"
  },
  {
    "text": "ways they're gonna require sticky sessions in core because you have to have had the ID come from this server",
    "start": "1282200",
    "end": "1287660"
  },
  {
    "text": "it's tight full staple I'm not innocent okay that request for some period of time yes there's also a feature in Sigma",
    "start": "1287660",
    "end": "1293960"
  },
  {
    "text": "Arbor you can do under gonna go she ate list connection you can connect with an endpoint directly from the client side to by plug if and will just work so why",
    "start": "1293960",
    "end": "1301610"
  },
  {
    "text": "did we bother with doing in the guys ship is by default in the go she is because it wants to support flow them out to the other transports at the",
    "start": "1301610",
    "end": "1307670"
  },
  {
    "text": "surprise if the client doesn't know where it's gonna run okay the client has to be able to negotiate about the other transport okay so the modern signal a",
    "start": "1307670",
    "end": "1314180"
  },
  {
    "text": "server does support doing like a single request connection right thing well you don't have to negotiate first if you",
    "start": "1314180",
    "end": "1320030"
  },
  {
    "text": "just both Yolo I'm gonna use WebSockets can I know because I know it'll work where do I get my ID from if I don't",
    "start": "1320030",
    "end": "1326180"
  },
  {
    "text": "negotiate so the color so the code says get ad from the query string if it's empty just gen1 oh okay",
    "start": "1326180",
    "end": "1332210"
  },
  {
    "text": "cool all right all good in the client-side there's an option called",
    "start": "1332210",
    "end": "1337970"
  },
  {
    "text": "skip negotiate if you make it true it just does the actual dirt nice okay but if you can figure skating ago you",
    "start": "1337970",
    "end": "1343640"
  },
  {
    "text": "have to say WebSockets only fair enough so you can't do skip negotiate suckers is the only one that supports a direct",
    "start": "1343640",
    "end": "1349580"
  },
  {
    "text": "connection so you need to correlate with an ID that's right okay so here's our up luck it handily no no we should be good",
    "start": "1349580",
    "end": "1355850"
  },
  {
    "text": "to go all right this should work mmm all right so you have a WebSocket endpoint now so we would expect to see the",
    "start": "1355850",
    "end": "1361910"
  },
  {
    "text": "WebSocket request succeed less read more white okay yeah this is less read okay",
    "start": "1361910",
    "end": "1368630"
  },
  {
    "text": "so it can be WebSockets it got was happy",
    "start": "1368630",
    "end": "1373670"
  },
  {
    "text": "it sent the handshake the there's a handshake that goes from client to server okay it chose JSON protocol",
    "start": "1373670",
    "end": "1379580"
  },
  {
    "text": "because that's the default protocol then it died completely because the goal server actually wants you to keep this",
    "start": "1379580",
    "end": "1385640"
  },
  {
    "text": "function around until the socket is dead so if it doesn't nothing it'll just kill the whole cache in amino so you have to",
    "start": "1385640",
    "end": "1391760"
  },
  {
    "text": "start reading from a from the actual socket once you go would do that packin action so I have to write a for loop in here so",
    "start": "1391760",
    "end": "1398750"
  },
  {
    "text": "let's do I'll just keep copy pasting to this probably easier I know right so",
    "start": "1398750",
    "end": "1404390"
  },
  {
    "text": "here's the hash a request let me get from the client side oh oh okay so the socket was established yep",
    "start": "1404390",
    "end": "1410450"
  },
  {
    "text": "and the very next step is someone's gonna send the message that's right which end is sending the message the",
    "start": "1410450",
    "end": "1416750"
  },
  {
    "text": "client the client will send a special message object message right that's a signal our message right and that's part",
    "start": "1416750",
    "end": "1422300"
  },
  {
    "text": "of our transport spec or part of the hub okay fantastic so we went from from",
    "start": "1422300",
    "end": "1427670"
  },
  {
    "text": "transport protocol spec right we really went from not having action to having one once we have one you flip into the",
    "start": "1427670",
    "end": "1434300"
  },
  {
    "text": "hub protocols but now we're in the hub protocol was doing hubs and the hop work lies about invocations okay and both",
    "start": "1434300",
    "end": "1440600"
  },
  {
    "text": "dreamers have to negotiate the actual transport hub protocol right behind shakes for the very first thing in the",
    "start": "1440600",
    "end": "1446840"
  },
  {
    "text": "hub protocol is the highest request okay god quiet stands the hand she's saying I can do Jason version one and the server says no stop or yes that's",
    "start": "1446840",
    "end": "1454460"
  },
  {
    "text": "cool okay and then it sends a handshake response if we if we very temporarily print out",
    "start": "1454460",
    "end": "1464360"
  },
  {
    "text": "what happened let's just do that so then go there's no well true there's no while loops there's no do",
    "start": "1464360",
    "end": "1469790"
  },
  {
    "text": "well there's no for you oh like an empty for there's a fork there's just one big one the type yeah those way okay let's",
    "start": "1469790",
    "end": "1478370"
  },
  {
    "text": "locate that I says I'm gonna read a message off the WebSocket off the wire",
    "start": "1478370",
    "end": "1483740"
  },
  {
    "text": "I'll declare a data array of bytes slice of bytes receive data and then error",
    "start": "1483740",
    "end": "1492200"
  },
  {
    "text": "handling go is kind of jank see you end up having to write code like this a lot",
    "start": "1492200",
    "end": "1498520"
  },
  {
    "text": "get a thing that has an error there's no exception it's nothing throws and blows up in your face it's kind of nice okay",
    "start": "1498520",
    "end": "1505660"
  },
  {
    "text": "also when you save go format rather than this format your code just destroys this very opinion it's good it's good it's",
    "start": "1505660",
    "end": "1512030"
  },
  {
    "text": "good why is it doing that oh it's killing me what huh okay hold on there's something",
    "start": "1512030",
    "end": "1521930"
  },
  {
    "text": "wrong here you've got if at the end instead of just oh it's not equal to AH",
    "start": "1521930",
    "end": "1527180"
  },
  {
    "text": "way okay good let me just print this so FMT that print the print line okay so",
    "start": "1527180",
    "end": "1536600"
  },
  {
    "text": "you're receiving a message and if there was an error then you print it's a break yep I break out okay and then I'm gonna",
    "start": "1536600",
    "end": "1542540"
  },
  {
    "text": "print the actual data from the client server so whenever I receive a print on the console okay so I received then I'll",
    "start": "1542540",
    "end": "1552320"
  },
  {
    "text": "just cast with shrink is that's cool assume all bytes or strings is I'll be",
    "start": "1552320",
    "end": "1557360"
  },
  {
    "text": "doing codings I expect to see some wing-dings yeah Jason should work",
    "start": "1557360",
    "end": "1563680"
  },
  {
    "text": "alright so at this point I can just refresh she got the same right but",
    "start": "1563680",
    "end": "1573100"
  },
  {
    "text": "there's no more white that's interesting so the server received the protocol",
    "start": "1573100",
    "end": "1579740"
  },
  {
    "text": "there's a handshake a football Jason version one we're good to go so now we should part the protocol",
    "start": "1579740",
    "end": "1587260"
  },
  {
    "text": "assume is good because this code is perfect so this is a handshake doesn't the climb",
    "start": "1587260",
    "end": "1592460"
  },
  {
    "text": "expect you to shake back they respond yeah isn't that the whole point of a handshake like right now I've done this I know it's kind of embarrassing I guess",
    "start": "1592460",
    "end": "1603430"
  },
  {
    "text": "so we're gonna copy this giant process handshake function did fail eventually",
    "start": "1603430",
    "end": "1608450"
  },
  {
    "text": "yeah oh yeah why did it so okay so it time to time down yeah hey so the client",
    "start": "1608450",
    "end": "1614240"
  },
  {
    "text": "I did this all right I guess no one's",
    "start": "1614240",
    "end": "1619910"
  },
  {
    "text": "there all right doorbell no one's home no one's home tap out okay I'm gonna copy this process handshake function",
    "start": "1619910",
    "end": "1626780"
  },
  {
    "text": "which very naively parses the handshake take one protocol let's actually look at the protocol in a different browser I",
    "start": "1626780",
    "end": "1633200"
  },
  {
    "text": "love Ejim but this is a bug this is bug in the new Chrome diet verifiably the actual chromium team so it's not a giant",
    "start": "1633200",
    "end": "1640160"
  },
  {
    "text": "fault oh really yeah weird WebSocket inspector only",
    "start": "1640160",
    "end": "1646310"
  },
  {
    "text": "shows one frame Oh oops so as long as what you want is in the",
    "start": "1646310",
    "end": "1651800"
  },
  {
    "text": "first message you fine good to go okay I'm on I'm on the bleeding edge bits of Aegean that's why it didn't work",
    "start": "1651800",
    "end": "1658240"
  },
  {
    "text": "it was miss river still running thread this again so you can actually see the",
    "start": "1658240",
    "end": "1666110"
  },
  {
    "text": "data being sent over the WebSocket connection connection there it is there",
    "start": "1666110",
    "end": "1671990"
  },
  {
    "text": "it is I guess when you sent one thing but see this this block this super strange blood that's my wingding you",
    "start": "1671990",
    "end": "1679910"
  },
  {
    "text": "came through it's awesome so every single message in the Jason protocol is",
    "start": "1679910",
    "end": "1686300"
  },
  {
    "text": "permitted by the it's called a record separator what's a record separator record separate yeah it's ASCII cool of",
    "start": "1686300",
    "end": "1692390"
  },
  {
    "text": "30 okay we chose it because we needed to have a protocol that wasn't bound to a specific transport we could have said",
    "start": "1692390",
    "end": "1698470"
  },
  {
    "text": "every single message and Ziggler is bounced to the WebSocket message that would be easier I see but to make it",
    "start": "1698470",
    "end": "1703820"
  },
  {
    "text": "hard for ourselves we want to have our own format I can left across mobile transports okay so if you're on TCP",
    "start": "1703820",
    "end": "1709220"
  },
  {
    "text": "there's no framing so how do you find the actual end of the message if you don't have framing need to know this is the end this is the end of a signal a",
    "start": "1709220",
    "end": "1715130"
  },
  {
    "text": "message yeah which means you could have more than one frame that happen but is it a full message until you see this actual do you",
    "start": "1715130",
    "end": "1720530"
  },
  {
    "text": "want to use character turns or line see it had to be Jason say you can't put this in Jason I'd be fun to one then you can open it",
    "start": "1720530",
    "end": "1726930"
  },
  {
    "text": "isn't okay all right so let's press the handshake so here's a response here's a",
    "start": "1726930",
    "end": "1733230"
  },
  {
    "text": "night a parting because we're super night we're gonna assume that whatever gets sent that the first thing that gets",
    "start": "1733230",
    "end": "1741150"
  },
  {
    "text": "sent is the actual protocol the highest rate request I mean why even is that actually naive",
    "start": "1741150",
    "end": "1747060"
  },
  {
    "text": "or is that for perfectly legitimate not what you would expect the client set a single by our time oh I see",
    "start": "1747060",
    "end": "1753300"
  },
  {
    "text": "it would break but who does that who does that it would do that yeah a malicious client may be okay for this",
    "start": "1753300",
    "end": "1759390"
  },
  {
    "text": "code assumes that the thing I got have a full method I had a full message because I'm lazy so I got I see I get it I get a",
    "start": "1759390",
    "end": "1764940"
  },
  {
    "text": "payload and then I look for the 30 which is the actual record separator okay I slice here's a slice operation they can",
    "start": "1764940",
    "end": "1770370"
  },
  {
    "text": "just like say you know get in this an end so I unmarshal is deserialize so I",
    "start": "1770370",
    "end": "1776370"
  },
  {
    "text": "allocate a struct ID serialize the payload into that struct and if there was an error it's it's the words you",
    "start": "1776370",
    "end": "1783600"
  },
  {
    "text": "realize and deserialize a.net ism what does everyone say that I think on Java",
    "start": "1783600",
    "end": "1788610"
  },
  {
    "text": "this is decirles if Java oh yeah cuz I'm Marshall sounds I've seen part different stringify",
    "start": "1788610",
    "end": "1794870"
  },
  {
    "text": "Marshall unmarshal it sounds more level it's something more like I'm quoting sounds scared I'm quoting super hard I'm",
    "start": "1794870",
    "end": "1801300"
  },
  {
    "text": "muscles Marshall Marshall unmarshal the protocol isn't Jason return an error",
    "start": "1801300",
    "end": "1807390"
  },
  {
    "text": "response to the clients are you okay and to me is Jason oh we're all good okay so",
    "start": "1807390",
    "end": "1813120"
  },
  {
    "text": "I'm going to run in the handshake response okay yep so I'm gonna run this first I'm just say error equals process",
    "start": "1813120",
    "end": "1819420"
  },
  {
    "text": "presence handshake WebSockets in the handshake it's good if",
    "start": "1819420",
    "end": "1824430"
  },
  {
    "text": "like every piece of gold and planet if air is Michael to nil just awful",
    "start": "1824430",
    "end": "1830880"
  },
  {
    "text": "just Oh return and print because in case I want to see the ER yes Prince it okay",
    "start": "1830880",
    "end": "1838910"
  },
  {
    "text": "okay so this should work now we should have way less read so in theory now",
    "start": "1838910",
    "end": "1845370"
  },
  {
    "text": "we'll be able to leave it open and a one time out it'll just we've done our handshake and now we're waiting for something else to happen how many",
    "start": "1845370",
    "end": "1851430"
  },
  {
    "text": "seconds do we have to wait to be guaranteed their success oh okay serve a handshake complete all",
    "start": "1851430",
    "end": "1858820"
  },
  {
    "text": "right okay handshakes good we're done okay so can i all right make it fail",
    "start": "1858820",
    "end": "1864580"
  },
  {
    "text": "again where do something else will suck it suck it suck it there it is okay",
    "start": "1864580",
    "end": "1871870"
  },
  {
    "text": "uh-huh no I'm my head you might see from that's the blood by the way see it",
    "start": "1871870",
    "end": "1877120"
  },
  {
    "text": "returns whispering means client going to server and red is server back yep right",
    "start": "1877120",
    "end": "1883540"
  },
  {
    "text": "okay and so the server sent back an empty Jason object yep sure is the handshake being completed yep okay oh what's that",
    "start": "1883540",
    "end": "1893670"
  },
  {
    "text": "interesting so the client just tried to like do something yeah what is it doing",
    "start": "1893670",
    "end": "1901510"
  },
  {
    "text": "let's find out so when you're lost you just search for type also we're back in",
    "start": "1901510",
    "end": "1907780"
  },
  {
    "text": "the spec okay Type six it's a pain a ping it's the client and server send pings back and forth to make sure they",
    "start": "1907780",
    "end": "1913540"
  },
  {
    "text": "the other parties okay okay they're right this was the client because it was green yeah it was gonna quietly I think of the server side okay and if we're",
    "start": "1913540",
    "end": "1921010"
  },
  {
    "text": "lucky they sent two things whoo and at some point it gets angry and",
    "start": "1921010",
    "end": "1926200"
  },
  {
    "text": "says you know what I'm not pinging me you're offline okay so signal are includes a ping-pong kind of thing",
    "start": "1926200",
    "end": "1933730"
  },
  {
    "text": "basically apologies pink just pings but is their only client to server or just the server sender ping as well in a",
    "start": "1933730",
    "end": "1939010"
  },
  {
    "text": "good server not your server yeah and the good server says penis both directions okay and so the client is basically",
    "start": "1939010",
    "end": "1944800"
  },
  {
    "text": "trying to make sure that the connection is actually alive be great you never trust what your connection API is telling you go through a tunnel of your",
    "start": "1944800",
    "end": "1951190"
  },
  {
    "text": "connection you go up on a plane yep you fly through our knowledge fly through a tunnel a black hole okay I think we are",
    "start": "1951190",
    "end": "1959140"
  },
  {
    "text": "working black hole sorry once the two pings basically don't get a reply the client says nope this connection is not",
    "start": "1959140",
    "end": "1965050"
  },
  {
    "text": "good isn't just Pink's it's any messages and emails when you get sent if things haven't been sent in that time for okay",
    "start": "1965050",
    "end": "1970630"
  },
  {
    "text": "okay all right so we need to get the server to respond mm pink all right we",
    "start": "1970630",
    "end": "1976150"
  },
  {
    "text": "need to add our own pinging let's do that let's do that let's do that there's things here's my super fancy",
    "start": "1976150",
    "end": "1981820"
  },
  {
    "text": "ping logic what what's the ping timer what's the timing it expects I mean seconds some",
    "start": "1981820",
    "end": "1991220"
  },
  {
    "text": "protocols specify if in the code summer no okay the client decides went to to diabase on",
    "start": "1991220",
    "end": "1998520"
  },
  {
    "text": "a threshold I think our default is like if you haven't seen it at least two pings in like 30 seconds okay 30 seconds",
    "start": "1998520",
    "end": "2004910"
  },
  {
    "text": "that's the default yeah we figure it yeah you can we tried more aggressive numbers and it kind of broke people so",
    "start": "2004910",
    "end": "2009920"
  },
  {
    "text": "we kind of went conservative by default said so it dies at some point but it's not super aggressive okay you can tweak",
    "start": "2009920",
    "end": "2015020"
  },
  {
    "text": "it to be whatever you want on the client side so here's a ping er so in.net you'd create a new timer new timer has a",
    "start": "2015020",
    "end": "2020960"
  },
  {
    "text": "callback that gets called every whatever seconds you passed into it in the call bot he would just like write",
    "start": "2020960",
    "end": "2026270"
  },
  {
    "text": "doing something there right right super simple ish until you learn how it works right this is the goal version you",
    "start": "2026270",
    "end": "2034700"
  },
  {
    "text": "create ticker and and go there there aren't that many primitives so the pattern you see a lot is channels so a",
    "start": "2034700",
    "end": "2041750"
  },
  {
    "text": "challenge is a basically think of it as an is ignorable you can actually read from or write in - okay so I create",
    "start": "2041750",
    "end": "2048470"
  },
  {
    "text": "ticker I'm gonna run every 10 seconds and I made a channel of bull just don't ask why this is here yet here's an",
    "start": "2048470",
    "end": "2054710"
  },
  {
    "text": "infinite loop and it says whenever the ticker fires run this callback so I'm casting over the actual channel firing",
    "start": "2054710",
    "end": "2061820"
  },
  {
    "text": "are done being sent okay they fire an anonymous coroutine in line",
    "start": "2061820",
    "end": "2067159"
  },
  {
    "text": "this actually this this is TAS not run combat yeah this is tango okay I'm",
    "start": "2067160",
    "end": "2072590"
  },
  {
    "text": "ticker is basically this is basically a a weight for each have you guys seen the",
    "start": "2072590",
    "end": "2077810"
  },
  {
    "text": "icing and durable powdered in c-sharp yeah well I showed it in the chat oh yeah wait for each is equal weight",
    "start": "2077810",
    "end": "2084050"
  },
  {
    "text": "for each tick and ticker okay right this code does that",
    "start": "2084050",
    "end": "2090679"
  },
  {
    "text": "okay all right take your word for it cuz no one in here knows guys it's perfect we",
    "start": "2090680",
    "end": "2098240"
  },
  {
    "text": "can come you all right at the end take it out stop and I'm gonna write a bull into the done channel ah she's",
    "start": "2098240",
    "end": "2105860"
  },
  {
    "text": "super super janky synthetics you're putting something into the channel",
    "start": "2105860",
    "end": "2111440"
  },
  {
    "text": "that's why you're doing some right yeah okay so it's a challenge on the on this side you're reading from it this",
    "start": "2111440",
    "end": "2116950"
  },
  {
    "text": "side being what side the there right there looking at it this for right I'm",
    "start": "2116950",
    "end": "2122800"
  },
  {
    "text": "putting true into done okay pushing it in like forcing it in all right so now",
    "start": "2122800",
    "end": "2132610"
  },
  {
    "text": "this should give me a stable connection a stable one thing so this should not",
    "start": "2132610",
    "end": "2138130"
  },
  {
    "text": "timeout okay let's look at crome and just stare for like half an hour maybe",
    "start": "2138130",
    "end": "2146830"
  },
  {
    "text": "deja vu I think last year we had a signal a demo and recall that we spent a lot of time waiting for something to go",
    "start": "2146830",
    "end": "2151930"
  },
  {
    "text": "wrong middle at all it's because oh okay there we go all right oh okay two pink spin but one",
    "start": "2151930",
    "end": "2159550"
  },
  {
    "text": "of the first one was red yeah that mean the server was sending one day ah every",
    "start": "2159550",
    "end": "2164860"
  },
  {
    "text": "ten seconds the service end the pain and every something the client's of thing oh I can't I just got I think you said this before in the punk each side is just",
    "start": "2164860",
    "end": "2171790"
  },
  {
    "text": "sending messages each side is just saying if I don't see anything from the other side in a time period I'm just",
    "start": "2171790",
    "end": "2177310"
  },
  {
    "text": "gonna assume that you nicked off yep okay got it got it alright cool stable let's try you",
    "start": "2177310",
    "end": "2184120"
  },
  {
    "text": "actually use the question oh let's do an invocation okay that didn't work so on",
    "start": "2184120",
    "end": "2193630"
  },
  {
    "text": "the server side we received the invocation but nothing is handling it okay right so the handshake happened sending things back and forth we're",
    "start": "2193630",
    "end": "2200380"
  },
  {
    "text": "stable no and nobody actually handle it so my generation that I wrote defending a message to say please call this method",
    "start": "2200380",
    "end": "2206140"
  },
  {
    "text": "but you're going you're just ignoring it you know what I'm saying cool cool Tori you're throwing it away yeah well the client fail it does",
    "start": "2206140",
    "end": "2217570"
  },
  {
    "text": "hangover alright yeah alright so let's sounds like if it looks like we're close",
    "start": "2217570",
    "end": "2223030"
  },
  {
    "text": "yeah this feels right some more copy and paste a movie done soon all right so",
    "start": "2223030",
    "end": "2228480"
  },
  {
    "text": "we're gonna copy this these two types hug message and how about his implication to the top of the file",
    "start": "2228480",
    "end": "2234550"
  },
  {
    "text": "because that's clean every message and the Jason hub protocol has a type",
    "start": "2234550",
    "end": "2240640"
  },
  {
    "text": "property it tells you what type is being about type six is paying type 4 is whatever I want is implication",
    "start": "2240640",
    "end": "2246619"
  },
  {
    "text": "and then an implication message which is type what is it me for type 1 has a",
    "start": "2246619",
    "end": "2254749"
  },
  {
    "text": "bunch of specific fields like the target which is the method being invoked the implication ID which is an ID so the",
    "start": "2254749",
    "end": "2260660"
  },
  {
    "text": "client can correlate responses from the server-side right so I book with with implication 0 you sent to the server",
    "start": "2260660",
    "end": "2265819"
  },
  {
    "text": "side the server wants to respond with a value the server will say implication zeroes response is this ok then",
    "start": "2265819",
    "end": "2271609"
  },
  {
    "text": "arguments are a bunch of Justin arguments please show method you're calling on spawn so let's finally at the point will",
    "start": "2271609",
    "end": "2277130"
  },
  {
    "text": "be doing the IPC base okay here's our PC okay little let's hustle so here's the",
    "start": "2277130",
    "end": "2284450"
  },
  {
    "text": "man loop I'm gonna copy this codes slash it into right here by implication",
    "start": "2284450",
    "end": "2294829"
  },
  {
    "text": "you want more snippet this one you're printing your message is twice I think",
    "start": "2294829",
    "end": "2300109"
  },
  {
    "text": "now yeah yeah good alright so on receive",
    "start": "2300109",
    "end": "2305150"
  },
  {
    "text": "we find the record separator ASCII code 30 sliced a byte array get the raw hub message deserialize into the actual one",
    "start": "2305150",
    "end": "2312259"
  },
  {
    "text": "that has a type only this is kind of inefficient but it works I get the type if it's one that I know",
    "start": "2312259",
    "end": "2318650"
  },
  {
    "text": "it's an implication so I do it again but using the Raman the full message right a",
    "start": "2318650",
    "end": "2323690"
  },
  {
    "text": "sense sorry so you need to be able to parse to know what type it is you need",
    "start": "2323690",
    "end": "2331579"
  },
  {
    "text": "to know the title copper t eating just to see you read just the type I see you figure out this 1 to 6 I knew parse the actual concrete type",
    "start": "2331579",
    "end": "2338239"
  },
  {
    "text": "based on that number got it I'm excited I just get the invocation and we call it on implication method there's nothing",
    "start": "2338239",
    "end": "2344480"
  },
  {
    "text": "right now right and to make it do something very basic we should actually respond with the completion response and",
    "start": "2344480",
    "end": "2350779"
  },
  {
    "text": "the completion response is in the spec and it's type 3 and it says here is the",
    "start": "2350779",
    "end": "2357859"
  },
  {
    "text": "type 3 which is a completion and the application ID but which I'm completing and it can't have an error or it can't have a result okay but it cannot both",
    "start": "2357859",
    "end": "2365150"
  },
  {
    "text": "failure this is the answer to my a piece equal support a call violation yep okay that's right it can be no if you're",
    "start": "2365150",
    "end": "2372230"
  },
  {
    "text": "avoiding I'm not returning anything okay it can be no it's lawyer forget type of thing not for I forget no no just void",
    "start": "2372230",
    "end": "2377930"
  },
  {
    "text": "this void okay I see it's still a response some response but nothing is in it right so you've got it",
    "start": "2377930",
    "end": "2383220"
  },
  {
    "text": "so here's the invocation and we're going to do a basic completion Act so I'll",
    "start": "2383220",
    "end": "2390750"
  },
  {
    "text": "copy this logic into here this is nothing it's funny this is actually a",
    "start": "2390750",
    "end": "2400410"
  },
  {
    "text": "compiler if you drop a trillion comma oh wow",
    "start": "2400410",
    "end": "2406310"
  },
  {
    "text": "holy all right this shouldn't make the implication return nothing nothing",
    "start": "2407480",
    "end": "2414720"
  },
  {
    "text": "well so back to our protocol test here's",
    "start": "2414720",
    "end": "2421710"
  },
  {
    "text": "a response ah clients happy but nothing happened but I didn't get a message no okay nope so let's make this work",
    "start": "2421710",
    "end": "2429540"
  },
  {
    "text": "note so now we're at the point where the client was able to call like my hub method yep but in my other example the",
    "start": "2429540",
    "end": "2435300"
  },
  {
    "text": "hub method was turning around saying clients all dots end right but we haven't written that part yet and go",
    "start": "2435300",
    "end": "2440580"
  },
  {
    "text": "right and so the clients like yeah I sent a message but now we need to do the pushpot correct so ever needs to push",
    "start": "2440580",
    "end": "2446490"
  },
  {
    "text": "this to all the clients and it's important to know that the protocol doesn't dictate the actual grouping are",
    "start": "2446490",
    "end": "2451800"
  },
  {
    "text": "broadcasting or I send to a client he's just talking about what happens between client and server right so I call a",
    "start": "2451800",
    "end": "2456870"
  },
  {
    "text": "method on the server side the server can decide to return a result yep broadcast everyone broadcast to a group not",
    "start": "2456870",
    "end": "2463260"
  },
  {
    "text": "returnable all I doesn't know nothing no routes or anything it's just like I got a message just know it was in a group due to the protocol right right that",
    "start": "2463260",
    "end": "2469950"
  },
  {
    "text": "soul says also recited for detail that's right so let's make it do so I had this",
    "start": "2469950",
    "end": "2475860"
  },
  {
    "text": "thing to make it reply to wanna connection but maybe we shouldn't make it reply to both all that once this time",
    "start": "2475860",
    "end": "2482970"
  },
  {
    "text": "is short go also does not have a ternary operator you can't just and go say like",
    "start": "2482970",
    "end": "2488460"
  },
  {
    "text": "you can't do question mark you can't do or not equal to no right this doesn't",
    "start": "2488460",
    "end": "2495900"
  },
  {
    "text": "work and go that's unfortunate someone if I do this this is like horrific right",
    "start": "2495900",
    "end": "2501360"
  },
  {
    "text": "okay let's implement reply to one connection that's what happened as the first step",
    "start": "2501360",
    "end": "2508820"
  },
  {
    "text": "so the first step is you're literally just going to turn around and make sure this message is sent to the per to me okay right but it's not in the",
    "start": "2508820",
    "end": "2516869"
  },
  {
    "text": "reply that's right just I'm pushing another man this is an invocation the same pan sent to the server side the",
    "start": "2516869",
    "end": "2521970"
  },
  {
    "text": "client supports implication so I can send them back to the client and invocation saying I'm gonna echo your",
    "start": "2521970",
    "end": "2527310"
  },
  {
    "text": "incoming with an arguments about client side okay so this guy says if target is sent I'm gonna create a replay type one",
    "start": "2527310",
    "end": "2535650"
  },
  {
    "text": "is in location target is sent I'm calling sent on the client side I'm gonna echo the same argument I passed into the actual server side okay it's",
    "start": "2535650",
    "end": "2543900"
  },
  {
    "text": "almost like echo this is why you're really doing an app yep yet go if I run this this should echo it to myself oh",
    "start": "2543900",
    "end": "2551180"
  },
  {
    "text": "wow yeah look claps tough we're doing",
    "start": "2551180",
    "end": "2556230"
  },
  {
    "text": "that half crowed were you doing the heading go guys can you show the traffic",
    "start": "2556230",
    "end": "2561450"
  },
  {
    "text": "yeah were you doing that did you send the the message to the client before you",
    "start": "2561450",
    "end": "2567060"
  },
  {
    "text": "sent the ACK or did you send it after the ACK good question and does it matter before it doesn't matter it doesn't",
    "start": "2567060",
    "end": "2573090"
  },
  {
    "text": "matter okay yeah because the whole thing is like asynchronous is nothing matter",
    "start": "2573090",
    "end": "2578160"
  },
  {
    "text": "that's right okay so oh it went through this guy but didn't go to this this other browser cuz they're not looking at",
    "start": "2578160",
    "end": "2586500"
  },
  {
    "text": "being broadcast right so you did send it to the client before you sent the client the reply from the original message",
    "start": "2586500",
    "end": "2593130"
  },
  {
    "text": "that's right because I can see in the log okay but I can't get that did you see like the order of operations there okay with the client isn't broadcasting",
    "start": "2593130",
    "end": "2600090"
  },
  {
    "text": "so this browser isn't the same as that browser there's no there's no I'm gonna brush each person is chatting with themselves right mhm okay can we make",
    "start": "2600090",
    "end": "2606600"
  },
  {
    "text": "them so they can talk to each other that's right this is fun chat okay where everybody's right this is like when you get shadow band right in Xbox Live so",
    "start": "2606600",
    "end": "2616590"
  },
  {
    "text": "you're talking you everyone else what we're gonna do here is declare a",
    "start": "2616590",
    "end": "2621840"
  },
  {
    "text": "concurrent dictionary equivalent and go which is a sync map so I'm gonna declare",
    "start": "2621840",
    "end": "2627600"
  },
  {
    "text": "a thing to try the clients clients equals to sink top map No",
    "start": "2627600",
    "end": "2637579"
  },
  {
    "text": "I'm gonna pass it by reference we don't want a copy of it okay yeah if you learn",
    "start": "2637900",
    "end": "2643219"
  },
  {
    "text": "girl you have to remember all this stuff see you see sure so ampersand was",
    "start": "2643219",
    "end": "2648739"
  },
  {
    "text": "referenced and the star was a pointer that's right so I need a point of doing",
    "start": "2648739",
    "end": "2655190"
  },
  {
    "text": "that because what they happen if a pathway value yeah and I mutate the",
    "start": "2655190",
    "end": "2660289"
  },
  {
    "text": "object Oh guess what happens okay no one knows it's a copy it's a copy of the object so you wouldn't happen it",
    "start": "2660289",
    "end": "2666019"
  },
  {
    "text": "wouldn't actually I didn't see it okay clients uh store connection ID so I'm",
    "start": "2666019",
    "end": "2671569"
  },
  {
    "text": "mapping in the connection ID I'm storing the ID to the websocket itself so I didn't have a list of WebSockets by D so",
    "start": "2671569",
    "end": "2676579"
  },
  {
    "text": "just a dictionary just a prediction yep and there is the ID and then the actual connection is the value but it stops",
    "start": "2676579",
    "end": "2682219"
  },
  {
    "text": "I'll just client start remove no it's not delete delete' connection ID and",
    "start": "2682219",
    "end": "2687349"
  },
  {
    "text": "then I'll pass this into the invocation of possibly reference okay why it's no",
    "start": "2687349",
    "end": "2695150"
  },
  {
    "text": "make sure I have this be client is this pointer of sync that and right here the",
    "start": "2695150",
    "end": "2704749"
  },
  {
    "text": "syntax is kind of weird get ready for you might be blowing with a bizarre syntax so this and go is a cast",
    "start": "2704749",
    "end": "2715599"
  },
  {
    "text": "it looks bizarre but it's super nice so the value is an object it's like an object oh you can do it in line like",
    "start": "2715599",
    "end": "2721699"
  },
  {
    "text": "left to right right yeah so interface is the equivalent of object this is like an interface wouldn't with anything right",
    "start": "2721699",
    "end": "2726979"
  },
  {
    "text": "and then I'm doing a cast - I plug a connection because I know the value is like much like a connection got it and",
    "start": "2726979",
    "end": "2733420"
  },
  {
    "text": "doing it this way absol it's me dot and keep casting and dotting that link like a C and C sharp requires LIGO wrapping",
    "start": "2733420",
    "end": "2740119"
  },
  {
    "text": "around Renta sees like this or you can do an expose this and the cast this is no generics like you have to pass it",
    "start": "2740119",
    "end": "2746390"
  },
  {
    "text": "through as an object because you can't just you know do nothing to sync maps of T another thing pretty bad okay yeah",
    "start": "2746390",
    "end": "2753469"
  },
  {
    "text": "that's why does it make you feel dirty yeah 100% what is it saying I can't do here",
    "start": "2753469",
    "end": "2759769"
  },
  {
    "text": "cuz you made it Bella this is there a pointer haha alright so we should have a",
    "start": "2759769",
    "end": "2767029"
  },
  {
    "text": "fully working application if I'm not mistaken oh no we don't get it actually",
    "start": "2767029",
    "end": "2772819"
  },
  {
    "text": "it's good enough yeah yeah even I'm your",
    "start": "2772819",
    "end": "2783079"
  },
  {
    "text": "first yeah good so we have two choices we can make streaming work or we could now I do slides and then I just want to",
    "start": "2783079",
    "end": "2791150"
  },
  {
    "text": "reiterate though like we literally took a functional a spinet course signaler app where we use the a spinet course",
    "start": "2791150",
    "end": "2797690"
  },
  {
    "text": "signaler api on the server i use the JavaScript client and then we took the entire client part and then you wrote a",
    "start": "2797690",
    "end": "2803989"
  },
  {
    "text": "hard coded chat server it uses the signaler protocol in go it's not a",
    "start": "2803989",
    "end": "2810890"
  },
  {
    "text": "generic signal a server like if you want to go and add another hub it's not like you just add a type and then call a map",
    "start": "2810890",
    "end": "2817099"
  },
  {
    "text": "method correct right you have a hard-coded server that's built specifically for this chat app but the",
    "start": "2817099",
    "end": "2822739"
  },
  {
    "text": "client just thinks it's a signal server that's right that's pretty cool all right no iswe think I think it's cool you",
    "start": "2822739",
    "end": "2828259"
  },
  {
    "text": "think it's cool I think it's cool yeah well if they're cool it's fun alright so",
    "start": "2828259",
    "end": "2835039"
  },
  {
    "text": "you built a server and go well so there's a bunch of stuff you didn't do yeah because it's just a hard-coded demo",
    "start": "2835039",
    "end": "2842539"
  },
  {
    "text": "right but what happens if like threads occur or whatever like what does that",
    "start": "2842539",
    "end": "2847700"
  },
  {
    "text": "mean it's not thread safe what you did so the pings are running in probably the actual like other nothing is gonna",
    "start": "2847700",
    "end": "2853730"
  },
  {
    "text": "synchronize okay let's lock it right okay I should be locked I see but for the sake of two clients that turns out",
    "start": "2853730",
    "end": "2859160"
  },
  {
    "text": "it's pretty safe okay there's no error handling really had a lot of if statements but you're not doing anything using it with them other than printing",
    "start": "2859160",
    "end": "2865099"
  },
  {
    "text": "into the console there's no grouping so they no because that is very much like I said some part of the protocol the",
    "start": "2865099",
    "end": "2870380"
  },
  {
    "text": "grouping thing is just really part of our server API and our server implementation so I mean you could add",
    "start": "2870380",
    "end": "2875989"
  },
  {
    "text": "that yep but you didn't do it there's no client to server streaming we could do server to Terminal class streaming",
    "start": "2875989",
    "end": "2882470"
  },
  {
    "text": "server the client streaming which should just be another for loop is my guess with a timer that's right yeah so it wouldn't be too hard and there's no",
    "start": "2882470",
    "end": "2888380"
  },
  {
    "text": "concept of cancellations so in sync today the protocol actually supports cancelling an invocation you didn't do",
    "start": "2888380",
    "end": "2894619"
  },
  {
    "text": "that although you know if the client had tried to say cancel this the server just would have gone all right cool then this",
    "start": "2894619",
    "end": "2901309"
  },
  {
    "text": "is frame interleaving what does that mean well if we think about the two layers going on here we've got our",
    "start": "2901309",
    "end": "2907549"
  },
  {
    "text": "transport frames which in this case were WebSockets right so we have a WebSocket each of these orange boxes is a",
    "start": "2907549",
    "end": "2913549"
  },
  {
    "text": "WebSocket frame or message and they can be of different sizes right and this is per transport they all define how they",
    "start": "2913549",
    "end": "2920539"
  },
  {
    "text": "send their messages according to their spec then we have on top of that the hub messages or the hub frames from the hub",
    "start": "2920539",
    "end": "2927230"
  },
  {
    "text": "protocol and they don't necessarily align with the transport frames now this is just like you can have Ethernet",
    "start": "2927230",
    "end": "2933680"
  },
  {
    "text": "frames and then on top of that you can have tcp/ip frames and then on top of that you can have and I'm generalizing",
    "start": "2933680",
    "end": "2940999"
  },
  {
    "text": "so his network wants like you can know afterwards and then you can have HTTP messages on top of that and they don't",
    "start": "2940999",
    "end": "2947420"
  },
  {
    "text": "all line up perfectly like things get chunked and they get correlated according to the rules of the layout now",
    "start": "2947420",
    "end": "2953180"
  },
  {
    "text": "it turns out that doing it from a browser makes it a little easier because",
    "start": "2953180",
    "end": "2958670"
  },
  {
    "text": "WebSockets in browsers when you call right it pretty much guarantees it's",
    "start": "2958670",
    "end": "2964130"
  },
  {
    "text": "always gonna be in one frame gonna help me because I he'll be right there because of how we wrote it how we wrote the client okay so you didn't have to",
    "start": "2964130",
    "end": "2971660"
  },
  {
    "text": "worry about it but as you can see sometimes in the real world in real implementations they don't line up and you have to deal with that so for",
    "start": "2971660",
    "end": "2977660"
  },
  {
    "text": "example I could have a WebSocket transport frame which has a header with a bunch of bytes that mean things and then my actual message payload and then",
    "start": "2977660",
    "end": "2983900"
  },
  {
    "text": "I could have a JSON ping which we saw right type equals six and then this other message could be my non-blocking",
    "start": "2983900",
    "end": "2989989"
  },
  {
    "text": "invocation message and so like you have to deal with that in a real signal a server otherwise it will be horribly",
    "start": "2989989",
    "end": "2995089"
  },
  {
    "text": "unreliable so what about scale out we know we've done lot to talk to about scale out in the past this is a typical",
    "start": "2995089",
    "end": "3001839"
  },
  {
    "text": "diagram you'll end up seeing we have all of our clients here and in order to support more clients we had more servers",
    "start": "3001839",
    "end": "3008619"
  },
  {
    "text": "but then we have the problem of how does client number one talk to client number four when they're on a different server",
    "start": "3008619",
    "end": "3014619"
  },
  {
    "text": "well then you have to add another layer which is the backplane all the way on the right-hand side and then you know",
    "start": "3014619",
    "end": "3019809"
  },
  {
    "text": "the server's all connected the backplane and they can coordinate messages and send them to each we still support that that's all",
    "start": "3019809",
    "end": "3025540"
  },
  {
    "text": "supported today we ship a Redis a backplane implementation I think the only one we ship now yeah that's all",
    "start": "3025540",
    "end": "3032230"
  },
  {
    "text": "good good and well then we also have this great thing now the outer signal our service which David was a big part",
    "start": "3032230",
    "end": "3038350"
  },
  {
    "text": "of architecting and so this provides signal a scale out as a service as a platform service you know you get a",
    "start": "3038350",
    "end": "3043900"
  },
  {
    "text": "subscription and your app connects to it and then you've got scale out but it also doesn't just do the backplane part",
    "start": "3043900",
    "end": "3049060"
  },
  {
    "text": "it offloads the signal or connections from the client out of your application",
    "start": "3049060",
    "end": "3054490"
  },
  {
    "text": "you don't have to worry about having a web socket endpoint in your a spinet core app anymore you'll go out they get",
    "start": "3054490",
    "end": "3060850"
  },
  {
    "text": "handled by the paths by the platform as-a-service okay and then like magic happens that correlates those messages back into your",
    "start": "3060850",
    "end": "3067540"
  },
  {
    "text": "application and that's fantastic for scale because now you've got to scale units you've got your web application",
    "start": "3067540",
    "end": "3074620"
  },
  {
    "text": "with your MVC and your pages and your hub code but all your web sockets are actually connecting over on this other",
    "start": "3074620",
    "end": "3080290"
  },
  {
    "text": "thing and you can scale them independently you're not using up HTTP connection resources on your web app",
    "start": "3080290",
    "end": "3086320"
  },
  {
    "text": "that's all being paid for and scaled separately in the azure signaler service so it relays that client traffic to and",
    "start": "3086320",
    "end": "3092320"
  },
  {
    "text": "from over a couple of web sockets between your application and the service so here's like how your app starts",
    "start": "3092320",
    "end": "3098080"
  },
  {
    "text": "you've got your client that's connecting to your a spinet core app you've got web track traffic going to like pages or MVC",
    "start": "3098080",
    "end": "3103600"
  },
  {
    "text": "views and then you've got your web socket or signaler connections going up to you to your hub right and that's all",
    "start": "3103600",
    "end": "3109720"
  },
  {
    "text": "in one blue box you can only scale the a spinet core app as a unit you can't split those two things apart but then if",
    "start": "3109720",
    "end": "3115510"
  },
  {
    "text": "you deploy it to add your signal or service your app now connects over to the signal server sort of within the",
    "start": "3115510",
    "end": "3121510"
  },
  {
    "text": "data center right over that black two-way arrow that's some dedicated connections between your application on",
    "start": "3121510",
    "end": "3128200"
  },
  {
    "text": "the server side and the ads of signaler service and then the clients sort of gets split personality they go over and",
    "start": "3128200",
    "end": "3135100"
  },
  {
    "text": "connect all the web sockets over to the client endpoint and but they happily keep doing their web traffic over to",
    "start": "3135100",
    "end": "3141190"
  },
  {
    "text": "your ace minute core app which is fantastic and then this is what it looks like when you add more clients they're",
    "start": "3141190",
    "end": "3147250"
  },
  {
    "text": "all connecting their web sockets to the client endpoint on the edge of signalized service you never see them",
    "start": "3147250",
    "end": "3152260"
  },
  {
    "text": "you don't have to worry about them that it all gets taken care of by the signal or service and then you're a spinet core",
    "start": "3152260",
    "end": "3157349"
  },
  {
    "text": "connects to the server end point which is private to you and then you get an",
    "start": "3157349",
    "end": "3162660"
  },
  {
    "text": "in-memory representation of all the clients currently connected to you the signaler co doesn't know any different",
    "start": "3162660",
    "end": "3169170"
  },
  {
    "text": "your hub code doesn't know any different you just say clients don't all dot Send and in memory it goes yeah I've got six",
    "start": "3169170",
    "end": "3174989"
  },
  {
    "text": "clients send those please and then those messages actually go over one of these pipes to the server and then the",
    "start": "3174989",
    "end": "3181709"
  },
  {
    "text": "signaler service is the one that figures out where they go okay and those clients could be connected all over the world you just don't have to worry about it so",
    "start": "3181709",
    "end": "3188130"
  },
  {
    "text": "it completely solves an entire category of problem that is traditionally very very difficult to solve with regards to",
    "start": "3188130",
    "end": "3194309"
  },
  {
    "text": "scaling sockets basically all right and then one of the things that enables is",
    "start": "3194309",
    "end": "3199440"
  },
  {
    "text": "this completely new programming model servlet who's using Azure functions or AWS lamdaur or something like that okay",
    "start": "3199440",
    "end": "3205469"
  },
  {
    "text": "so with a thing like the signaler service you can now build real-time or",
    "start": "3205469",
    "end": "3210690"
  },
  {
    "text": "server push applications without you having an ace pin air core application there's no asp net in this whatsoever",
    "start": "3210690",
    "end": "3216479"
  },
  {
    "text": "there's no app I've deployed there's no traditional signaler server I just have a client in this case it's changing an",
    "start": "3216479",
    "end": "3222930"
  },
  {
    "text": "out of storage blob that fires an event grid event to my as a function which handles the event grid event and it",
    "start": "3222930",
    "end": "3229199"
  },
  {
    "text": "turns around and posts a message via the rest endpoint to the edge of signaler service which then broadcasts whatever",
    "start": "3229199",
    "end": "3235380"
  },
  {
    "text": "on my actual function wants to to all the connected signal our clients and there are people building apps like this today it is actually basically",
    "start": "3235380",
    "end": "3241440"
  },
  {
    "text": "officially supported by Azure functions working in conjunction with the signal or service so could we build that no no",
    "start": "3241440",
    "end": "3251640"
  },
  {
    "text": "yeah so do them so we just went through the whole benefit of being able to offload your WebSocket connections on to",
    "start": "3251640",
    "end": "3259019"
  },
  {
    "text": "a totally different server can we make that work so you know four minutes four",
    "start": "3259019",
    "end": "3264180"
  },
  {
    "text": "minutes so instead of doing it from scratch I'll probably just record a rose I'll show that kind of explain yeah it works",
    "start": "3264180",
    "end": "3269699"
  },
  {
    "text": "right so I I'm going to open an application I wrote that uses",
    "start": "3269699",
    "end": "3278479"
  },
  {
    "text": "okay okay so here's a basic if that core segment application okay another chat",
    "start": "3280140",
    "end": "3285430"
  },
  {
    "text": "app yep but different actually I'm gonna copy it does - yes I didn't try that and the startup plus it's very",
    "start": "3285430",
    "end": "3291790"
  },
  {
    "text": "similar it has this call to add a just ignore that's the only difference right is that my a spinet core app now",
    "start": "3291790",
    "end": "3297750"
  },
  {
    "text": "is saying you signal a but I want you to use the as your signal a service load that's it",
    "start": "3297750",
    "end": "3302800"
  },
  {
    "text": "they were the difference right so I have installed the vanilla roger Sigma SDK okay no tricks up my sleeve nothing",
    "start": "3302800",
    "end": "3309130"
  },
  {
    "text": "crazy I did this because this is the reasons okay I will mention and the chat",
    "start": "3309130",
    "end": "3315670"
  },
  {
    "text": "hub is the same hub right two methods yep send a stream all the people right and I wrote this and if I look at the",
    "start": "3315670",
    "end": "3323290"
  },
  {
    "text": "app settings normally you go to the add report 'l you would create a new subscript and you I'll just ignore",
    "start": "3323290",
    "end": "3329110"
  },
  {
    "text": "service and get a connection string that contains little your secret key and you're like endpoint address okay so",
    "start": "3329110",
    "end": "3335410"
  },
  {
    "text": "like my app that's still going on done that it's Ziggler service endpoint yeah but what if I could just point to the",
    "start": "3335410",
    "end": "3340840"
  },
  {
    "text": "local host I don't say port is this right you're telling the standard as a signal service client where to connect",
    "start": "3340840",
    "end": "3346690"
  },
  {
    "text": "it's a point to my local figma looking at point to you right fake one right so I wrote wanted go for fun it's a fun fun",
    "start": "3346690",
    "end": "3354880"
  },
  {
    "text": "to profit because that's what we do here",
    "start": "3354880",
    "end": "3360850"
  },
  {
    "text": "it is here's my Sigma or my address signal our server so before I show you the code let me run it to make sure it",
    "start": "3360850",
    "end": "3367300"
  },
  {
    "text": "works still works all right Phil - your signal are go run main let go then if I",
    "start": "3367300",
    "end": "3377350"
  },
  {
    "text": "launch this application",
    "start": "3377350",
    "end": "3381870"
  },
  {
    "text": "should connect to that end point and it says connected if I launch I want to scroll probably I can show you the",
    "start": "3383720",
    "end": "3391430"
  },
  {
    "text": "actual thing happening if I go to localhost five dozen which is my yeah",
    "start": "3391430",
    "end": "3397060"
  },
  {
    "text": "attic off your beautiful application but here is the initial negotiate request to",
    "start": "3397060",
    "end": "3402680"
  },
  {
    "text": "my application okay they returned a response that said instead of going to my application go to the Sigma service",
    "start": "3402680",
    "end": "3409160"
  },
  {
    "text": "that's how it works so in negotiating request can actually respond with yeah this is fine but actually what you did negotiate over",
    "start": "3409160",
    "end": "3415430"
  },
  {
    "text": "here instead and this is how right offload those connections over to another service so the Sigma service gives you gives you an access token for",
    "start": "3415430",
    "end": "3421490"
  },
  {
    "text": "this signal or you're gonna hit a mine is hosted local wave security security security security tokens the URL points",
    "start": "3421490",
    "end": "3429650"
  },
  {
    "text": "the client endpoint the server goes to the server end point there's a plan points on the actual goal server my figler server yep do I see there's a",
    "start": "3429650",
    "end": "3436369"
  },
  {
    "text": "documented protocol for the application to service right communication they",
    "start": "3436369",
    "end": "3442430"
  },
  {
    "text": "implement that's on a different github repository somewhere that you can write ok and if I type test this should work",
    "start": "3442430",
    "end": "3448820"
  },
  {
    "text": "right here's my actual service and traffic is actually going to my go application not my main application so",
    "start": "3448820",
    "end": "3455270"
  },
  {
    "text": "if I look higher negotiate happens on the main server on five thousand on five thousand comes back goes to eighty eight",
    "start": "3455270",
    "end": "3460640"
  },
  {
    "text": "eighty seven which is a segment of service ok connects to that server directly with this giant query string yeah and then from then on it's just",
    "start": "3460640",
    "end": "3466910"
  },
  {
    "text": "ignore business just send stuff I can work through that service can you it will will to clients work that's right",
    "start": "3466910",
    "end": "3473000"
  },
  {
    "text": "that's right let's do this so now my age minute core app is still running because it served this",
    "start": "3473000",
    "end": "3479000"
  },
  {
    "text": "incredibly beautiful page that you wrote that's right and but then after that it only handles",
    "start": "3479000",
    "end": "3484130"
  },
  {
    "text": "the negotiate requests the first one and then that reply is no no go and connect your web socket over here and right",
    "start": "3484130",
    "end": "3489859"
  },
  {
    "text": "that's it doesn't really know anything until the service calls are back and says someone hit Send that's right here's the message yep and",
    "start": "3489859",
    "end": "3495830"
  },
  {
    "text": "then the server runs and says your server runs and says yeah ok class let's send all and then that goes back to the service and broadcasts to all the",
    "start": "3495830",
    "end": "3502040"
  },
  {
    "text": "clients even better the service itself is actually understand Sigler it just proxies traffic from the client and",
    "start": "3502040",
    "end": "3507349"
  },
  {
    "text": "point to the server endpoint awesome alright practice lesson we had done just like touch well ok so hopefully we've",
    "start": "3507349",
    "end": "3515359"
  },
  {
    "text": "gotten a good indication about how signal works under the covers today hopefully you can",
    "start": "3515359",
    "end": "3521150"
  },
  {
    "text": "see why the edge of signal service might be a benefit to you if you're trying to run this stuff in scale there's a code available for people good essay will be",
    "start": "3521150",
    "end": "3527000"
  },
  {
    "text": "it will be by the end of the day yes okay well thanks for coming along if you've got any questions you can reach out to both of us on Twitter and have a",
    "start": "3527000",
    "end": "3534050"
  },
  {
    "text": "great conference Cheers [Applause]",
    "start": "3534050",
    "end": "3540980"
  }
]