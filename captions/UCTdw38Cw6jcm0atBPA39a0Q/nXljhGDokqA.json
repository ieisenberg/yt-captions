[
  {
    "text": "hi everyone I'm Casey Olin hoot I'm program manager on the dotnet and visual",
    "start": "4330",
    "end": "9730"
  },
  {
    "text": "studio team at Microsoft hopefully some of you all came out last night at the",
    "start": "9730",
    "end": "15160"
  },
  {
    "text": "dotnet User Group maybe some of you and saw me walk through like what was new individuals to 2017 and part of that I",
    "start": "15160",
    "end": "21699"
  },
  {
    "text": "showed what Roslyn analyzers were so in today's session we're gonna go through how you can build a rosin analyzer and",
    "start": "21699",
    "end": "27220"
  },
  {
    "text": "then like what the heck that even is etc alright so here's a brief agenda for",
    "start": "27220",
    "end": "32259"
  },
  {
    "text": "those of you who like to know what we're gonna do up front so we'll talk about what analyzers are what this mysterious",
    "start": "32260",
    "end": "37930"
  },
  {
    "text": "Roslyn thing is we'll go through the different api's that exist what tools you need to build an analyzer and then",
    "start": "37930",
    "end": "45100"
  },
  {
    "text": "we'll build an analyzer and a fixer and then you can join our awesome third-party ecosystem if you want all",
    "start": "45100",
    "end": "53110"
  },
  {
    "text": "right but why should anyone care like why are you here well then the top feedbacks we get in visual studio just",
    "start": "53110",
    "end": "60519"
  },
  {
    "text": "in general for productivity is people say I wish I had a refactoring that did XYZ or can't you make you know like",
    "start": "60519",
    "end": "68380"
  },
  {
    "text": "remove all my log line calls for me or can you convert these multi-line strings",
    "start": "68380",
    "end": "74410"
  },
  {
    "text": "that I have to a single line and so people have all these or like you know you might have a super weird naming",
    "start": "74410",
    "end": "80470"
  },
  {
    "text": "convention on your team that we don't support and you want to throw an error if people like you violate it and don't",
    "start": "80470",
    "end": "86890"
  },
  {
    "text": "use that naming convention and so these are top requests that we get but as the compiler team it doesn't make sense for",
    "start": "86890",
    "end": "93880"
  },
  {
    "text": "us to make these compiler errors and force them on the entire world and so that's why rosin analyzers exist so that",
    "start": "93880",
    "end": "101230"
  },
  {
    "text": "you can write your own to enforce whatever you want on yourself on your",
    "start": "101230",
    "end": "106330"
  },
  {
    "text": "team for your library etc and so here is just an example of what a rose and",
    "start": "106330",
    "end": "112720"
  },
  {
    "text": "analyzer looks like it's that squiggle that you see letting you know that there's a violation so that's part of",
    "start": "112720",
    "end": "118690"
  },
  {
    "text": "the diagnostic and they can use the light bulb to provide a fixer that will then fix whatever your error was and so",
    "start": "118690",
    "end": "126790"
  },
  {
    "text": "that's the main point is that if there is something that you want to use to make your life easier so there's some repetitive task you're doing over and",
    "start": "126790",
    "end": "133150"
  },
  {
    "text": "over again with refactoring or code generation etc this is what can use an analyzer for and then if you",
    "start": "133150",
    "end": "139810"
  },
  {
    "text": "are a library author this is probably my favorite example so the xunit team you",
    "start": "139810",
    "end": "145270"
  },
  {
    "text": "may have noticed like one day like your ex unit nougat package upgraded and you have the copa jillion errors you're like",
    "start": "145270",
    "end": "150580"
  },
  {
    "text": "what just happened and that was because he added a rosin analyzer nougat package to their nougat so that you get this",
    "start": "150580",
    "end": "158050"
  },
  {
    "text": "sort of enforcement to help you learn how to properly properly use X unit so here people were using the attributes",
    "start": "158050",
    "end": "165610"
  },
  {
    "text": "incorrectly for different types and so here they offer the fixes to help you make it actually compile it and work",
    "start": "165610",
    "end": "172299"
  },
  {
    "text": "based on how they did their library and so if you're a library author you can use these to help enforce the right way",
    "start": "172299",
    "end": "178870"
  },
  {
    "text": "of using your API so that's another reason why you might want to look into",
    "start": "178870",
    "end": "184000"
  },
  {
    "text": "writing these so I'm not gonna truly demo something right now but I'm going",
    "start": "184000",
    "end": "190900"
  },
  {
    "text": "to show you how approachable these are hopefully so this is what one looks like",
    "start": "190900",
    "end": "198069"
  },
  {
    "text": "on github alright so this is just an analyzer that squiggles if a logline",
    "start": "198069",
    "end": "206019"
  },
  {
    "text": "exists so it was that initial screenshot you can see all my code fits on just this little screen right here all this",
    "start": "206019",
    "end": "213819"
  },
  {
    "text": "up here is boilerplate and the only real code I wrote was right down here and so",
    "start": "213819",
    "end": "219489"
  },
  {
    "text": "that's like seven lines of code essentially so that's how approachable these things are to writing it's not",
    "start": "219489",
    "end": "226060"
  },
  {
    "text": "like once you get your wrap your head around the concepts putting it together is not very many lines of code at all",
    "start": "226060",
    "end": "232540"
  },
  {
    "text": "and the fixer is like ten lines of code so that's just a brief look at where",
    "start": "232540",
    "end": "237819"
  },
  {
    "text": "we're headed at the end of this talk to let you know like you know it's gonna be okay we're get through this compilers",
    "start": "237819",
    "end": "244269"
  },
  {
    "text": "can be cool alright so back to the",
    "start": "244269",
    "end": "249639"
  },
  {
    "text": "PowerPoint all right so what is an analyzer an analyzer has two parts the",
    "start": "249639",
    "end": "257200"
  },
  {
    "text": "first is mandatory and not optional so that's the diagnostic diagnostic is just",
    "start": "257200",
    "end": "262389"
  },
  {
    "text": "the squiggle that we put that put in the editor so you know if you have that blog line call",
    "start": "262389",
    "end": "268540"
  },
  {
    "text": "you say oh where do I want to draw the squiggle so there's a known violation and then if you have that it's going to",
    "start": "268540",
    "end": "274840"
  },
  {
    "text": "break the build if you have an error so Diagnostics run anywhere that your code runs so run your CI whatever and then",
    "start": "274840",
    "end": "282340"
  },
  {
    "text": "the optional part that an analyzer can have is a fixer a fixer is tied to UI so",
    "start": "282340",
    "end": "288070"
  },
  {
    "text": "it must be in Visual Studio or soon hopefully you can write one analyzer that will work with vs code and brittle",
    "start": "288070",
    "end": "294460"
  },
  {
    "text": "studio for Mac when you do that it's tied to that UI so again it won't run",
    "start": "294460",
    "end": "300070"
  },
  {
    "text": "you can't like have these fixers running your CI but you can use them inside Visual Studio to then fix however you",
    "start": "300070",
    "end": "306640"
  },
  {
    "text": "want so that's the two main parts of an analyzer and we're going to build both",
    "start": "306640",
    "end": "312430"
  },
  {
    "text": "of them so what is this thing Rozlyn that I keep talking about Roslyn is the",
    "start": "312430",
    "end": "319960"
  },
  {
    "text": "codename for our project the true name is the dotnet compiler platform but like",
    "start": "319960",
    "end": "326320"
  },
  {
    "text": "that doesn't mean anything anyway so my as was call it Roslyn and so Roslyn is where we completely reaaargh attacted",
    "start": "326320",
    "end": "333190"
  },
  {
    "text": "the c-sharp and visual basic compiler from native code into managed code I think it took six years seven years to",
    "start": "333190",
    "end": "341140"
  },
  {
    "text": "do that so a long time and you might be like why the heck would you do that great question",
    "start": "341140",
    "end": "347950"
  },
  {
    "text": "there's two main reasons we did it the first was so that we could write new features faster by features I mean new",
    "start": "347950",
    "end": "355150"
  },
  {
    "text": "language features so if you went to you know Mads and John session yesterday or their session today you probably saw",
    "start": "355150",
    "end": "361060"
  },
  {
    "text": "that like where are you talking about c-sharp 8 and it's been I don't know anymore it's been full okay so if for",
    "start": "361060",
    "end": "367810"
  },
  {
    "text": "years since I joined the team and that was when c-sharp 6 came out and now there's been seven seven point one seven",
    "start": "367810",
    "end": "373630"
  },
  {
    "text": "point two seven point three and now we're like talking about eight already and have prototypes which just shows how",
    "start": "373630",
    "end": "379390"
  },
  {
    "text": "fast language development can happen now we can do these point releases we can get you prototypes things that we could",
    "start": "379390",
    "end": "385210"
  },
  {
    "text": "never have done on the old compiler that we had also we can write new IDE",
    "start": "385210",
    "end": "390700"
  },
  {
    "text": "features faster so any were factoring that you see in Visual Studio you may have noticed like every update or point",
    "start": "390700",
    "end": "396250"
  },
  {
    "text": "release of Visual Studio we also have more fixes and more refactorings that's because it becomes almost trivial",
    "start": "396250",
    "end": "402280"
  },
  {
    "text": "for us to write them not really but like compared to how it used to be and then",
    "start": "402280",
    "end": "409180"
  },
  {
    "text": "the second reason that we did it so why do we are attacked all of this so that we could create an open-source API",
    "start": "409180",
    "end": "415840"
  },
  {
    "text": "surface over the entire compiler so that anyone could write a code focused tool or technology and so this is very",
    "start": "415840",
    "end": "422590"
  },
  {
    "text": "analyzers come from so now rather than the compiler being this sort of black box where you don't know what's",
    "start": "422590",
    "end": "429189"
  },
  {
    "text": "happening in there and also in spits out il and it's all good you can now with it being opened up",
    "start": "429189",
    "end": "435520"
  },
  {
    "text": "access all of these different api's that we've made available to build what you need and so here I've just abstracted",
    "start": "435520",
    "end": "443830"
  },
  {
    "text": "them out into the four main api's there's a lot more but you know here is the gist and then here's what you can",
    "start": "443830",
    "end": "450190"
  },
  {
    "text": "sort of build with them so the syntax tree API it's high fidelity representation of your source code",
    "start": "450190",
    "end": "455889"
  },
  {
    "text": "that's how you write formatting tools because whitespace matters and formatting the symbol API is where you",
    "start": "455889",
    "end": "461560"
  },
  {
    "text": "want more semantic key related things like if you want to navigate two types or members the binding API let's do",
    "start": "461560",
    "end": "468610"
  },
  {
    "text": "things like extract method and then the emit API which if you truly want to do some crazy stuff you can use that",
    "start": "468610",
    "end": "475690"
  },
  {
    "text": "that's what edit continued for example is built on today so that's like an overview of what api's we have now let's",
    "start": "475690",
    "end": "482889"
  },
  {
    "text": "dig into the first two because those are the two that we'll be using today so the",
    "start": "482889",
    "end": "488259"
  },
  {
    "text": "syntax tree API this is my rough sketch of a syntax tree to make it as less",
    "start": "488259",
    "end": "495219"
  },
  {
    "text": "scary as possible so a syntax tree has notes nodes represent syntactic",
    "start": "495219",
    "end": "501849"
  },
  {
    "text": "constructs like you know declarations expressions etc and then you have tokens which are these green things and tokens",
    "start": "501849",
    "end": "509770"
  },
  {
    "text": "are like you know key words literals identifiers what-have-you and then we",
    "start": "509770",
    "end": "516640"
  },
  {
    "text": "have trivia which is what makes our syntax tree perhaps different than other ones you've seen is that all this white",
    "start": "516640",
    "end": "522669"
  },
  {
    "text": "space and like preprocessor directives and comments are all captured in our",
    "start": "522669",
    "end": "528579"
  },
  {
    "text": "syntax tree as well so that's important if you're writing on these tools that does a refactoring or",
    "start": "528579",
    "end": "533740"
  },
  {
    "text": "or moves code around you want to keep comments or duplicate comments you need that information and so all of that is",
    "start": "533740",
    "end": "540339"
  },
  {
    "text": "in our syntax tree so it's a high fidelity representation of your source code the to then properties of the",
    "start": "540339",
    "end": "548589"
  },
  {
    "text": "syntax tree are that again if the complete representation of your code and that they're immutable and they're",
    "start": "548589",
    "end": "555190"
  },
  {
    "text": "mutable that's important because then you know if multiple users are working on that syntax tree",
    "start": "555190",
    "end": "561490"
  },
  {
    "text": "you're not having like mixed up state so it's like I work on my syntax tree I do something see if it can be applied if it",
    "start": "561490",
    "end": "568180"
  },
  {
    "text": "can't throw it out do it again kind of thing rather than us all mutating this same tree and then getting",
    "start": "568180",
    "end": "574660"
  },
  {
    "text": "in some crazy state with your code the other advantage of it being immutable is",
    "start": "574660",
    "end": "579880"
  },
  {
    "text": "for those of you who are in brittle studio 2015 or 2017 you probably have",
    "start": "579880",
    "end": "585520"
  },
  {
    "text": "seen this little dip few when you access the light bulb where we do a live diff and that's because we have two trees",
    "start": "585520",
    "end": "591820"
  },
  {
    "text": "because they're immutable and we can diff them and show you what the code change is gonna do and so just another",
    "start": "591820",
    "end": "598089"
  },
  {
    "text": "like from the tooling perspective what we're able to do with these syntax trees being immutable so pretty cool the other",
    "start": "598089",
    "end": "606700"
  },
  {
    "text": "API we're in time out is the semantic model the semantic model lets you access",
    "start": "606700",
    "end": "612700"
  },
  {
    "text": "semantic information so like you know is this a field or is this a property what",
    "start": "612700",
    "end": "618250"
  },
  {
    "text": "is the name of this method what is the type of this parameter so if you want the answers to those questions you need",
    "start": "618250",
    "end": "624790"
  },
  {
    "text": "to ask the semantic model and that's where that comes in the semantic model also has knowledge of the compilation so",
    "start": "624790",
    "end": "631779"
  },
  {
    "text": "if we need something from metadata etc you can get that from your semantic model all right",
    "start": "631779",
    "end": "638020"
  },
  {
    "text": "so how these two api's interact with each other so your syntax tree your semantic model how do they work together",
    "start": "638020",
    "end": "643560"
  },
  {
    "text": "well from a node in your syntax tree you then ask questions to your semantic",
    "start": "643560",
    "end": "649390"
  },
  {
    "text": "model like what type am i and the semantic model will then return that to you and so that's how you can like go",
    "start": "649390",
    "end": "654579"
  },
  {
    "text": "through you're like oh I'm at this node I need more information I'm gonna get my semantic model ask it some questions get",
    "start": "654579",
    "end": "660490"
  },
  {
    "text": "the answer and continue on my merry way which is all fine and dandy",
    "start": "660490",
    "end": "665560"
  },
  {
    "text": "except what if you don't need that sort of like nitty-gritty information from your syntax tree like",
    "start": "665560",
    "end": "671720"
  },
  {
    "text": "you're writing something that only has to do with semantics you don't care about whitespace you don't care about",
    "start": "671720",
    "end": "677149"
  },
  {
    "text": "comments you're never going to touch them what do you do well we have this",
    "start": "677149",
    "end": "682220"
  },
  {
    "text": "new tree called I operation which is what we're gonna use later today and I",
    "start": "682220",
    "end": "688220"
  },
  {
    "text": "operation is a higher level of abstraction over this so for example you",
    "start": "688220",
    "end": "694820"
  },
  {
    "text": "know if you have multiple shapes of the same thing in the language it can abstract over both those shapes and it's",
    "start": "694820",
    "end": "702140"
  },
  {
    "text": "so high level that it even abstract over languages so you can write one analyzer",
    "start": "702140",
    "end": "707330"
  },
  {
    "text": "using the eye operation API that works for Visual Basic and c-sharp so that's",
    "start": "707330",
    "end": "713000"
  },
  {
    "text": "important to you and your team that's what you can do here but it also works across shapes within the same language which we'll see an example of that in a",
    "start": "713000",
    "end": "719600"
  },
  {
    "text": "second how I operation works in this entire model that we have set up is you",
    "start": "719600",
    "end": "725750"
  },
  {
    "text": "get your operation from your semantic model and then from your eye operation tree then if you need more nitty-gritty",
    "start": "725750",
    "end": "732500"
  },
  {
    "text": "information you can go back and ask questions to your syntax tree to get information like what is my span or my",
    "start": "732500",
    "end": "739640"
  },
  {
    "text": "location in this document and then here",
    "start": "739640",
    "end": "744980"
  },
  {
    "text": "are the reasons why you would use the different API so if you care about formatting or syntax patterns you would",
    "start": "744980",
    "end": "751310"
  },
  {
    "text": "use your syntax tree API if you only care about semantic patterns or if you",
    "start": "751310",
    "end": "756800"
  },
  {
    "text": "need that cross language support then operation might be the thing for you",
    "start": "756800",
    "end": "762940"
  },
  {
    "text": "all right so that was like a lot so let's take a sec recap slide so again",
    "start": "762940",
    "end": "770600"
  },
  {
    "text": "there's a syntax tree that's the high fidelity representation of your source code includes whitespace all sorts of",
    "start": "770600",
    "end": "776209"
  },
  {
    "text": "other trivia you have the semantic model where you learn semantic information then you have eye operation which is",
    "start": "776209",
    "end": "782270"
  },
  {
    "text": "like the newest evolution of the Rosslyn api's that gives that's abstract over",
    "start": "782270",
    "end": "787970"
  },
  {
    "text": "syntactic shapes and it's probably more similar to what you all may have liked in school learned as a syntax tree and",
    "start": "787970",
    "end": "795680"
  },
  {
    "text": "then the last API that we're going to use today when we write our fixer is the syntax generator which allows you to",
    "start": "795680",
    "end": "802410"
  },
  {
    "text": "language agnostic Li create syntax so we'll get into that but the gist of a fixer is that you're gonna go and create",
    "start": "802410",
    "end": "810300"
  },
  {
    "text": "a new sub tree where you're going to have the syntax of the fix and then you're gonna swap it into that original",
    "start": "810300",
    "end": "817320"
  },
  {
    "text": "syntax tree out with the note that you want to change and then return that new syntax tree that's essentially how a fix",
    "start": "817320",
    "end": "823200"
  },
  {
    "text": "is gonna work all right so that was like a lot and that's like the theory yada yada is let's like build",
    "start": "823200",
    "end": "830250"
  },
  {
    "text": "something so that's sound good all right so you have tools we made this easy we",
    "start": "830250",
    "end": "836550"
  },
  {
    "text": "have like templates for you there's like you know our documentation which is just",
    "start": "836550",
    "end": "843060"
  },
  {
    "text": "the source code and then install instructions now so this is how you get",
    "start": "843060",
    "end": "849750"
  },
  {
    "text": "started the tools that you're really gonna want are the syntax visualizer which comes with the SDK and then these",
    "start": "849750",
    "end": "857089"
  },
  {
    "text": "analyzers are in fixer templates that we provide for you and then the link to our documentation is just source dot",
    "start": "857089",
    "end": "863279"
  },
  {
    "text": "Rosalind IO which is lets you like symbolically navigate our source code from the web when you're in Visual",
    "start": "863279",
    "end": "871350"
  },
  {
    "text": "Studio or installing it if you want to get the SDK right away you just like go to the work load that's the Visual",
    "start": "871350",
    "end": "877710"
  },
  {
    "text": "Studio extension development one and then make sure that highlighted spot is checked and that's how you can get the",
    "start": "877710",
    "end": "883890"
  },
  {
    "text": "templates to write these cool all right",
    "start": "883890",
    "end": "889890"
  },
  {
    "text": "so what is art what are we gonna build today we're going to build an analyzer",
    "start": "889890",
    "end": "895110"
  },
  {
    "text": "that finds every spot where you've nude up a zero length array and we're gonna suggest that you use array dot empty",
    "start": "895110",
    "end": "901560"
  },
  {
    "text": "instead so just like reduce number of allocations that you make that's all we're gonna do so we're gonna be looking",
    "start": "901560",
    "end": "907320"
  },
  {
    "text": "for any place that you knew up empty or a zero length array and then suggest",
    "start": "907320",
    "end": "913050"
  },
  {
    "text": "that you do this instead now if we did this with the syntactic tree API we",
    "start": "913050",
    "end": "920279"
  },
  {
    "text": "would have to look and realize that there's two different ways to new up a zero length array right there's the way",
    "start": "920279",
    "end": "926279"
  },
  {
    "text": "on the left and there's the way on the right and when you're you know dealing",
    "start": "926279",
    "end": "931980"
  },
  {
    "text": "with syntax like these are looking lately different so their syntax trees are totally different this is what the",
    "start": "931980",
    "end": "939390"
  },
  {
    "text": "first one looks like so you could see if you want to see if it was a zero length array you would go back you like follow",
    "start": "939390",
    "end": "945060"
  },
  {
    "text": "it down and then find that zero and say oh it's of length zero but if you go the",
    "start": "945060",
    "end": "950490"
  },
  {
    "text": "other one it's a bit more monstrous looking and then you come down and there's like this omitted token thing",
    "start": "950490",
    "end": "956430"
  },
  {
    "text": "that you would have to look for inside to be able to even tell that that was a blank zero and so traditionally before I",
    "start": "956430",
    "end": "965519"
  },
  {
    "text": "operation you would have to go through and parse these two different types of syntax and account for both of those in",
    "start": "965519",
    "end": "971579"
  },
  {
    "text": "your analyzer to see if you found a zero length array but this is where I",
    "start": "971579",
    "end": "976829"
  },
  {
    "text": "operation comes in and the eye operation tree abstracts over these two different shapes and there's just a concept of an",
    "start": "976829",
    "end": "983160"
  },
  {
    "text": "array creation and from that you can get dimensions and things like that so I can",
    "start": "983160",
    "end": "989430"
  },
  {
    "text": "show you going to our handy dandy documentation mmm the source code is",
    "start": "989430",
    "end": "998910"
  },
  {
    "text": "your source start rather than i/o you can just like search in here so I'm just searching for the eye operation and here",
    "start": "998910",
    "end": "1005120"
  },
  {
    "text": "if i zoom in you can see here's the what eye operation looks like has parents it",
    "start": "1005120",
    "end": "1011720"
  },
  {
    "text": "has kinds has syntax types etc and yeah",
    "start": "1011720",
    "end": "1018110"
  },
  {
    "text": "and so we'll just be coming back to this frequently to figure out why things are going on but this is the basis for how",
    "start": "1018110",
    "end": "1025220"
  },
  {
    "text": "we're gonna move forward for the rest of the talk all right so now we're in visual studio this is what you're gonna",
    "start": "1025220",
    "end": "1031970"
  },
  {
    "text": "want to do so when you do file new after you've installed that SDK you're gonna",
    "start": "1031970",
    "end": "1037010"
  },
  {
    "text": "see this template so you can write an analyzer with a code fix there's just a template for it there's also a factoring",
    "start": "1037010",
    "end": "1044120"
  },
  {
    "text": "but we'll get into that later and so yeah here's template that you want I",
    "start": "1044120",
    "end": "1049700"
  },
  {
    "text": "already have it open I deleted a lot of the boilerplate so the initial one comes with an example where it will find I",
    "start": "1049700",
    "end": "1057290"
  },
  {
    "text": "think all your class names and offer to make them all uppercase so it's just like a silly little example to show you",
    "start": "1057290",
    "end": "1062960"
  },
  {
    "text": "a basic analyzer and so we're gonna just go through and do this other one instead so I deleted",
    "start": "1062960",
    "end": "1069350"
  },
  {
    "text": "all the comments that are in here and this is essentially what you have if all fits I think the screen all right so",
    "start": "1069350",
    "end": "1078080"
  },
  {
    "text": "half of this is boilerplate or maybe more all of us all this beautiful so",
    "start": "1078080",
    "end": "1083390"
  },
  {
    "text": "what is it doing this first chunk is just giving you like what strings do you",
    "start": "1083390",
    "end": "1089090"
  },
  {
    "text": "want to appear to the user so like what's the title what is the message format the description etc and they're",
    "start": "1089090",
    "end": "1095360"
  },
  {
    "text": "all managing this resources file so I could like come in here I don't know say",
    "start": "1095360",
    "end": "1103120"
  },
  {
    "text": "just so that you know that it's real as well okay so just like at whatever you",
    "start": "1107530",
    "end": "1114020"
  },
  {
    "text": "want in here what messages you want to appear when they hover when they do control dot and get the light bulb etc",
    "start": "1114020",
    "end": "1120970"
  },
  {
    "text": "so I have that or like what shows in the error list as well so that's all I was in here the other thing you'll notice oh",
    "start": "1120970",
    "end": "1129080"
  },
  {
    "text": "I guess live unit testing died well okay you can set a category for this as well",
    "start": "1129080",
    "end": "1134630"
  },
  {
    "text": "and then all these are bundled up into something called a diagnostic descriptor as this is something that describes your",
    "start": "1134630",
    "end": "1140870"
  },
  {
    "text": "diagnostic and so in here you can see that comes with the ID then it takes that title message category you can",
    "start": "1140870",
    "end": "1148280"
  },
  {
    "text": "choose what I'm sorry zoom zoom zoom you can see nope all right I don't even know",
    "start": "1148280",
    "end": "1161000"
  },
  {
    "text": "why I'm using a mouse anyways okay here we go you can put the default severity of your",
    "start": "1161000",
    "end": "1167590"
  },
  {
    "text": "analyzer in here so if you want to be a suggestion if you want to be off by default whatever you can change it in",
    "start": "1167590",
    "end": "1174080"
  },
  {
    "text": "here you can come in here and see you can make it like a warning error info or hidden which means not showing it all",
    "start": "1174080",
    "end": "1181390"
  },
  {
    "text": "sorts Ben keep it as a warning because I wrote unit test so we're just saying",
    "start": "1181390",
    "end": "1186710"
  },
  {
    "text": "Cupit that way so change anything and that's just all bundled up into this diagnostic descriptor and then this is",
    "start": "1186710",
    "end": "1194690"
  },
  {
    "text": "the main meat this is like the meat of it we're just going to this initialize function and then we're going to",
    "start": "1194690",
    "end": "1200330"
  },
  {
    "text": "register a callback so when our code analysis goes through this document we're gonna say hey when",
    "start": "1200330",
    "end": "1205809"
  },
  {
    "text": "you see a like array that's been created I want you to see if it's of length 0",
    "start": "1205809",
    "end": "1211390"
  },
  {
    "text": "and if it is I want to report a diagnostic and put in a squiggle that's",
    "start": "1211390",
    "end": "1216429"
  },
  {
    "text": "what we're doing here so we're some common here and if I come",
    "start": "1216429",
    "end": "1222370"
  },
  {
    "text": "into my context so the only thing we have available here is context when I do this let's do some zoomin if I type",
    "start": "1222370",
    "end": "1233260"
  },
  {
    "text": "register you can see that you can register all sorts of different actions or like on different actions so like",
    "start": "1233260",
    "end": "1240700"
  },
  {
    "text": "typically people do like syntax so when you see a syntax node you're looking for this or at the start of a compilation or",
    "start": "1240700",
    "end": "1245980"
  },
  {
    "text": "when you see a code block etc because we're using eye operation we're gonna say when you see an operation so that's",
    "start": "1245980",
    "end": "1253360"
  },
  {
    "text": "what we're gonna start with and then it's asking for our callback so we're",
    "start": "1253360",
    "end": "1259059"
  },
  {
    "text": "gonna call our callback like analyze operation why not and then it's looking for a kind so what",
    "start": "1259059",
    "end": "1265960"
  },
  {
    "text": "is our operation kind so when we see what are we going to trigger this so if we go back to our handy-dandy",
    "start": "1265960",
    "end": "1272220"
  },
  {
    "text": "documentation we can see that there's the operation kind here we're gonna",
    "start": "1272220",
    "end": "1277659"
  },
  {
    "text": "click on this and see what kinds there are and we're just gonna hope that",
    "start": "1277659",
    "end": "1283299"
  },
  {
    "text": "there's something called array something and sure enough I missed it I was on it",
    "start": "1283299",
    "end": "1291580"
  },
  {
    "text": "in the beginning oh here we go you can see that there's something called array",
    "start": "1291580",
    "end": "1296649"
  },
  {
    "text": "creation and it has this information so it's tied to this and so if we click on",
    "start": "1296649",
    "end": "1303309"
  },
  {
    "text": "the IRA creation operation we can see looking at it it has this beautiful",
    "start": "1303309",
    "end": "1308830"
  },
  {
    "text": "thing dimension sizes we're looking at the dimension of our array so we don't",
    "start": "1308830",
    "end": "1313840"
  },
  {
    "text": "have to check those two different syntaxes there's just one array creation thing it has dimension sizes it doesn't",
    "start": "1313840",
    "end": "1320080"
  },
  {
    "text": "matter which type of new double zero length array syntax you use so that's what we're gonna use so we're coming",
    "start": "1320080",
    "end": "1327700"
  },
  {
    "text": "here have our operation kind we're looking for that array creation I'm",
    "start": "1327700",
    "end": "1334090"
  },
  {
    "text": "gonna use control dot to generate this method that's where that squiggle because it hasn't been written yet if I",
    "start": "1334090",
    "end": "1339520"
  },
  {
    "text": "use control dot it'll generate it for me I said that one whose expression body",
    "start": "1339520",
    "end": "1345309"
  },
  {
    "text": "members so I'm gonna come here and switch it to a block body so you all can read it and then I'm gonna rename this",
    "start": "1345309",
    "end": "1352270"
  },
  {
    "text": "to context so that matches my operation analysis context better alright so now",
    "start": "1352270",
    "end": "1358779"
  },
  {
    "text": "that we're in here this is our callback so we're what the heck are we gonna do in this the gist of what we're gonna do",
    "start": "1358779",
    "end": "1364059"
  },
  {
    "text": "is why I said earlier we're just gonna say hey we have this array creation expression is it zero length and are the",
    "start": "1364059",
    "end": "1372820"
  },
  {
    "text": "so are the dimension sizes zero and if they are report a diagnostic so we're",
    "start": "1372820",
    "end": "1378309"
  },
  {
    "text": "gonna come in here we're gonna get our array creation expression so from our context we can get the operation we're",
    "start": "1378309",
    "end": "1387279"
  },
  {
    "text": "gonna cast it though as that I array creation operation so now we have our",
    "start": "1387279",
    "end": "1393190"
  },
  {
    "text": "array creation then we're just gonna say hey if this thing has a dimension so if",
    "start": "1393190",
    "end": "1402789"
  },
  {
    "text": "has that if it has a dimension then we're gonna come in here rate creation",
    "start": "1402789",
    "end": "1408669"
  },
  {
    "text": "dimension sizes grab it because we know it's a length one and so if you're wondering what these stars are by the way I had like",
    "start": "1408669",
    "end": "1415630"
  },
  {
    "text": "we're doing this for a and to how a I assistive technology can make developers",
    "start": "1415630",
    "end": "1421090"
  },
  {
    "text": "more productive and so this is like we machine learned on some github repos I",
    "start": "1421090",
    "end": "1426639"
  },
  {
    "text": "figured out based on people's context what members of different types and",
    "start": "1426639",
    "end": "1432520"
  },
  {
    "text": "stuff are they using and then we're putting them at the top and so I guess the version the model that we updated",
    "start": "1432520",
    "end": "1437679"
  },
  {
    "text": "yesterday has Rozlyn in it and so it's trained on the Rozlyn code base and so",
    "start": "1437679",
    "end": "1443020"
  },
  {
    "text": "it's suggesting things that my team has use here so that's why you see only start things which they are going to",
    "start": "1443020",
    "end": "1449409"
  },
  {
    "text": "come in handy so constant value and then has value is what I wanted you can see",
    "start": "1449409",
    "end": "1454990"
  },
  {
    "text": "like suggested it here if you can see that so pretty handy I have to scroll",
    "start": "1454990",
    "end": "1461770"
  },
  {
    "text": "less now so it's helping me learn this new API I'm unfamiliar with once",
    "start": "1461770",
    "end": "1467170"
  },
  {
    "text": "in here I can grab my dimensions so come here dimension sizes yep yep see it like",
    "start": "1467170",
    "end": "1475930"
  },
  {
    "text": "wrote that line for me beautiful so it turns out though if I use one of our new",
    "start": "1475930",
    "end": "1481780"
  },
  {
    "text": "refactorings where you can toggle between explicit type and the implicit type dimension is an object so in order",
    "start": "1481780",
    "end": "1489370"
  },
  {
    "text": "to see if it's zero I have to do this like you know thing that we hate if it's an int and Casta as an int and then",
    "start": "1489370",
    "end": "1497350"
  },
  {
    "text": "check if it's zero however how many you are using C sharp seven yeah yeah",
    "start": "1497350",
    "end": "1504970"
  },
  {
    "text": "alright so yeah I can because I'm checking here both the shape and the",
    "start": "1504970",
    "end": "1512080"
  },
  {
    "text": "value of this expression I can just use pattern matching so just get rid of all",
    "start": "1512080",
    "end": "1517720"
  },
  {
    "text": "that there we go nice and readable so that's pattern matching by the way",
    "start": "1517720",
    "end": "1522780"
  },
  {
    "text": "and so now that I know it's of size zero I just create my diagnostic so created",
    "start": "1522780",
    "end": "1529720"
  },
  {
    "text": "diagnostic so I created it I give it",
    "start": "1529720",
    "end": "1534940"
  },
  {
    "text": "that descriptor so it wants like Oh what are all the like data or in details about this that we need to present so",
    "start": "1534940",
    "end": "1541510"
  },
  {
    "text": "that's that rule that we put up above up here this rule where we said about our",
    "start": "1541510",
    "end": "1547450"
  },
  {
    "text": "default severity was what the ID was the title from that resources file so we put",
    "start": "1547450",
    "end": "1552790"
  },
  {
    "text": "that in there and then it needs a location so location is from the syntax",
    "start": "1552790",
    "end": "1558460"
  },
  {
    "text": "tree which we don't have right now we have our operation so from our operation",
    "start": "1558460",
    "end": "1563880"
  },
  {
    "text": "we need to grab our syntax and then from there get location is something that we",
    "start": "1563880",
    "end": "1571180"
  },
  {
    "text": "can call and so what's happening here is that we need that location because we need to know where exactly in the",
    "start": "1571180",
    "end": "1576640"
  },
  {
    "text": "document we need to draw this squiggle and so that's why we have that so we're saying hey squiggly under the survey",
    "start": "1576640",
    "end": "1582550"
  },
  {
    "text": "creation expression that we have so that's that's doing and then you have to",
    "start": "1582550",
    "end": "1587950"
  },
  {
    "text": "remember to report the diagnostic which is the number one thing I forget to do",
    "start": "1587950",
    "end": "1593530"
  },
  {
    "text": "every single time because if you don't report it anywhere then it just is sent",
    "start": "1593530",
    "end": "1598750"
  },
  {
    "text": "into the abyss and doesn't do anything all right so we've written it if my live",
    "start": "1598750",
    "end": "1604090"
  },
  {
    "text": "unit testing was working you would see all my tests are passing maybe hopefully we'll find out in a second",
    "start": "1604090",
    "end": "1611100"
  },
  {
    "text": "so you can either write unit tests I can show you what okay except I have my fixer in here oh maybe not no you",
    "start": "1611100",
    "end": "1621010"
  },
  {
    "text": "shouldn't have to save but here we go let's just go to I'll show you what a",
    "start": "1621010",
    "end": "1627070"
  },
  {
    "text": "unit test looks like because they're kind of crazy we're going to probably fix it soon so if I come in here you can",
    "start": "1627070",
    "end": "1635260"
  },
  {
    "text": "see that you're like oh you give it string of your program so like here I",
    "start": "1635260",
    "end": "1641980"
  },
  {
    "text": "have a zero length array and a string and then you're saying Oh like what is the diagnostic result you expected so",
    "start": "1641980",
    "end": "1648760"
  },
  {
    "text": "have to give it like all that information from that resources file you have to say where the squiggles gonna",
    "start": "1648760",
    "end": "1653980"
  },
  {
    "text": "appear and then you verify that it happened oh you're right that's what it",
    "start": "1653980",
    "end": "1661810"
  },
  {
    "text": "was so you know hmm",
    "start": "1661810",
    "end": "1667000"
  },
  {
    "text": "we're just gonna we're just gonna run it and see what happens so if you did f5",
    "start": "1667000",
    "end": "1672450"
  },
  {
    "text": "don't tell anyone I hate testing mmm so if you click f5 what we're going to do",
    "start": "1672450",
    "end": "1680050"
  },
  {
    "text": "is rip a new instance of Visual Studio we're gonna package this analyzer as an",
    "start": "1680050",
    "end": "1685120"
  },
  {
    "text": "extension with the file extension v6 install it into this Visual Studio and",
    "start": "1685120",
    "end": "1690940"
  },
  {
    "text": "then you should just be able to open up any project write a zero length array and then have it work so here I'm",
    "start": "1690940",
    "end": "1697720"
  },
  {
    "text": "opening a project already have some written and in here once it opens you'll",
    "start": "1697720",
    "end": "1705460"
  },
  {
    "text": "see but because it's taking a while I'm gonna subject you to my cow jokes mmm",
    "start": "1705460",
    "end": "1711430"
  },
  {
    "text": "what do you call a cow with no legs not",
    "start": "1711430",
    "end": "1718330"
  },
  {
    "text": "steak anyone else got anything ground beef",
    "start": "1718330",
    "end": "1725160"
  },
  {
    "text": "so if I come to tools extensions and updates' you'll see that my analyzer",
    "start": "1727960",
    "end": "1733630"
  },
  {
    "text": "o'rama is installed as an extension here and so it's running and then sure enough my",
    "start": "1733630",
    "end": "1739750"
  },
  {
    "text": "zero length arrays are squiggled and if",
    "start": "1739750",
    "end": "1744850"
  },
  {
    "text": "you can see there I hover over and it has my message for me it did not",
    "start": "1744850",
    "end": "1750400"
  },
  {
    "text": "squiggle the one that's nonzero length so that's how you can test that works you're set at five we spin up a new",
    "start": "1750400",
    "end": "1756130"
  },
  {
    "text": "instance of Visual Studio install it as an extension and you can test and see if it works so while you have to wait for",
    "start": "1756130",
    "end": "1762580"
  },
  {
    "text": "Visual Studio load on that pretty easy way of testing that it works besides",
    "start": "1762580",
    "end": "1768520"
  },
  {
    "text": "writing unit tests mm-hmm anyways onto the fix",
    "start": "1768520",
    "end": "1773670"
  },
  {
    "text": "so let's write a fix so we have the code",
    "start": "1773670",
    "end": "1778930"
  },
  {
    "text": "fix provider file I come in here again you got some boilerplate going on like",
    "start": "1778930",
    "end": "1785290"
  },
  {
    "text": "what is the title of it so what's gonna show up in the light bulb menu then you have like what Diagnostics is it fixing",
    "start": "1785290",
    "end": "1792580"
  },
  {
    "text": "so you can fix more than one diagnostic with the fix we're just doing a one to one though",
    "start": "1792580",
    "end": "1798130"
  },
  {
    "text": "and then again you're just gonna register something that happens when they trigger the light bulb on that",
    "start": "1798130",
    "end": "1803290"
  },
  {
    "text": "diagnostic so I'm gonna uncomment this and I need to put my callback in here",
    "start": "1803290",
    "end": "1809650"
  },
  {
    "text": "and we're good to go so it's like you use a raid empty what a creative name",
    "start": "1809650",
    "end": "1816630"
  },
  {
    "text": "we're gonna give it my document we're gonna give it the diagnostic and a",
    "start": "1816630",
    "end": "1821920"
  },
  {
    "text": "cancellation token so again from here has control dot to generate this method",
    "start": "1821920",
    "end": "1829440"
  },
  {
    "text": "ie I should have changed my code style rules but near the black body instead",
    "start": "1829440",
    "end": "1836830"
  },
  {
    "text": "we're gonna make this a sync all right so what happens in a fix",
    "start": "1836830",
    "end": "1842160"
  },
  {
    "text": "again the thing that we're gonna do is we're gonna grab the current documents",
    "start": "1842160",
    "end": "1848050"
  },
  {
    "text": "I'm gonna write this out for you grab the current docs syntax tree then we're",
    "start": "1848050",
    "end": "1854290"
  },
  {
    "text": "going to find the node that has that original expression in it that",
    "start": "1854290",
    "end": "1860350"
  },
  {
    "text": "arrey creation once we do that we're",
    "start": "1860350",
    "end": "1865419"
  },
  {
    "text": "going to build our fix so that means like build a subtree so build the",
    "start": "1865419",
    "end": "1870970"
  },
  {
    "text": "subtree of our fix nice tree a tree and",
    "start": "1870970",
    "end": "1876490"
  },
  {
    "text": "once we do that we're going to swap the original expression",
    "start": "1876490",
    "end": "1881860"
  },
  {
    "text": "for our new one and then return a document with the new syntax tree so",
    "start": "1881860",
    "end": "1889120"
  },
  {
    "text": "does that like flow make sense so again we're gonna find our syntax tree find",
    "start": "1889120",
    "end": "1895090"
  },
  {
    "text": "that node that we want to replace then build up a new subtree with the syntax that we want swap them out and then",
    "start": "1895090",
    "end": "1902019"
  },
  {
    "text": "return a document with that new tree with the swap in it and that's boom are fixed that's all it is all right so",
    "start": "1902019",
    "end": "1910509"
  },
  {
    "text": "let's do it so here we can come in here",
    "start": "1910509",
    "end": "1916450"
  },
  {
    "text": "did you grab our root so it's an extra you get by the root so we have a document and thank goodness for Intel a",
    "start": "1916450",
    "end": "1925210"
  },
  {
    "text": "code because it has the thing that I want the top so get our syntax root I have to make it async one day I'll write",
    "start": "1925210",
    "end": "1931509"
  },
  {
    "text": "a code fix maybe or get someone else to that adds the away because I always forget it mmm-hmm all right then we want to hope I",
    "start": "1931509",
    "end": "1941200"
  },
  {
    "text": "had a comment for it we're gonna find that node of that expression so like where is this array creation expression",
    "start": "1941200",
    "end": "1947139"
  },
  {
    "text": "like where is it so to get it we'll call it the original expression so we're",
    "start": "1947139",
    "end": "1954850"
  },
  {
    "text": "gonna get our root and there's something called fine node so we're gonna find it and you give it a span if you see here",
    "start": "1954850",
    "end": "1961779"
  },
  {
    "text": "so again a span is that location in the document like where is it and so luckily",
    "start": "1961779",
    "end": "1967120"
  },
  {
    "text": "that's the thing that we squiggled so we should be able to get it here so we're",
    "start": "1967120",
    "end": "1972309"
  },
  {
    "text": "gonna from our diagnostic we reported there is something called a location and",
    "start": "1972309",
    "end": "1978070"
  },
  {
    "text": "that has the source span so that's we're getting there so it's going to find what node is associated with that location in",
    "start": "1978070",
    "end": "1984850"
  },
  {
    "text": "my document so now I have my original expression we're also going to grab our",
    "start": "1984850",
    "end": "1992559"
  },
  {
    "text": "semantic model because are going to need it later so we're going to it's part of the document get",
    "start": "1992559",
    "end": "2002820"
  },
  {
    "text": "semantic model again I forgot to put a weight in here and then in order to now",
    "start": "2002820",
    "end": "2012210"
  },
  {
    "text": "build this subtree the last thing that we need is our syntax generator so that's that syntax generator a Pio is",
    "start": "2012210",
    "end": "2018660"
  },
  {
    "text": "talking you about we now use that and it's gonna show you like super nicely easily say make me this make me that and",
    "start": "2018660",
    "end": "2026400"
  },
  {
    "text": "it does it it's pretty great it's like Beauty and the Beast so I have a syntax generator get our",
    "start": "2026400",
    "end": "2036300"
  },
  {
    "text": "generator from our document cool so I'm now gonna do this with edit and",
    "start": "2036300",
    "end": "2043050"
  },
  {
    "text": "continue fingers crossed so that we can see the syntax as we're building it up",
    "start": "2043050",
    "end": "2048570"
  },
  {
    "text": "so this is like my favorite way of doing it but yeah so we'll see it real quick",
    "start": "2048570",
    "end": "2055770"
  },
  {
    "text": "but before I do that lets us stub out what our subtree is gonna be so how do",
    "start": "2055770",
    "end": "2061980"
  },
  {
    "text": "we know what this is gonna look like so we want it to be like no something like empty and whatever this is what we want",
    "start": "2061980",
    "end": "2070800"
  },
  {
    "text": "to change it to we can use the syntax visualizer inside Visual Studio and so",
    "start": "2070800",
    "end": "2077879"
  },
  {
    "text": "you just like you know come to your quick launch and type syntax visualizer I also could have used this to show you",
    "start": "2077880",
    "end": "2083639"
  },
  {
    "text": "earlier that the different ways of mooing up a zero length array have different syntax trees but I will just",
    "start": "2083640",
    "end": "2092820"
  },
  {
    "text": "do it here instead so I can select this expression and then you'll notice that it highlighted itself in this huge tree",
    "start": "2092820",
    "end": "2099750"
  },
  {
    "text": "associate with my document and so I can come in here and be like oh it's an invocation expression that has a some",
    "start": "2099750",
    "end": "2106380"
  },
  {
    "text": "simple member access expression in it which has you know this type in it and a",
    "start": "2106380",
    "end": "2112830"
  },
  {
    "text": "generic etc and so as you click on these you can see them also highlighted in the",
    "start": "2112830",
    "end": "2118290"
  },
  {
    "text": "document so you can see it's highlighting the empty int here and then when I come here it's highlighting the",
    "start": "2118290",
    "end": "2124050"
  },
  {
    "text": "array so I can see what all the different parts of this and tax our and so this is an easy way of",
    "start": "2124050",
    "end": "2130880"
  },
  {
    "text": "identifying what the heck this tree looks like we don't have it for the eye operation tree yet but we're gonna build",
    "start": "2130880",
    "end": "2138260"
  },
  {
    "text": "it so rather than seeing just a syntax tree you'll also be able to see the eye operation tree in here as well but right",
    "start": "2138260",
    "end": "2144410"
  },
  {
    "text": "now you can't so sorry but you don't need it y'all are smart you know all",
    "start": "2144410",
    "end": "2151010"
  },
  {
    "text": "right so we have an invocation expression that simple member access expression then we have you know that",
    "start": "2151010",
    "end": "2157130"
  },
  {
    "text": "array type that we have to get and then we have a generic that we have to build so I'm just gonna stub these out in",
    "start": "2157130",
    "end": "2163010"
  },
  {
    "text": "comments so that we can remember what we're building as we do it so at its root it's an invocation expression which",
    "start": "2163010",
    "end": "2170300"
  },
  {
    "text": "is gonna be this part I'm now gonna use ctrl D which duplicates a line new",
    "start": "2170300",
    "end": "2178760"
  },
  {
    "text": "feature anyways so then we have our memo yeah I remember access expression which",
    "start": "2178760",
    "end": "2185300"
  },
  {
    "text": "is this control D come back we need our generic which is just this control D now",
    "start": "2185300",
    "end": "2195680"
  },
  {
    "text": "we need our type expression which was just array and that is the syntax that",
    "start": "2195680",
    "end": "2201890"
  },
  {
    "text": "we're going to build up right so that's what we're gonna build up in this subtree let's just kill this alright",
    "start": "2201890",
    "end": "2209839"
  },
  {
    "text": "cool so now we're going to just start debugging so we ran again f5 then we're",
    "start": "2209839",
    "end": "2218180"
  },
  {
    "text": "going to hit our light bulb and then we're news edit and continue and the immediate window to see ourselves",
    "start": "2218180",
    "end": "2223280"
  },
  {
    "text": "building up the syntax and see what's happening all right cow joke number two",
    "start": "2223280",
    "end": "2231609"
  },
  {
    "text": "what do you call a cow with two legs",
    "start": "2231609",
    "end": "2236650"
  },
  {
    "text": "anyone anyone crickets lean beef you're welcome you're welcome",
    "start": "2238599",
    "end": "2249990"
  },
  {
    "text": "I'll be here all week look we might have",
    "start": "2251640",
    "end": "2257140"
  },
  {
    "text": "time for one more you men uh all right what do you call a cow that jumps over a",
    "start": "2257140",
    "end": "2263680"
  },
  {
    "text": "barbed wire fence shredded beef is a",
    "start": "2263680",
    "end": "2269080"
  },
  {
    "text": "good guess but not quite it anyone else an utter disaster all right",
    "start": "2269080",
    "end": "2281530"
  },
  {
    "text": "okay no more jokes hmm so from this you know I hover over",
    "start": "2281530",
    "end": "2286600"
  },
  {
    "text": "CEO and ii soslow use a raid on empty of a press control dot i'm now hit my",
    "start": "2286600",
    "end": "2292150"
  },
  {
    "text": "breakpoint we are going to have to deal because on same screen that the UI elements drawn over okay so hopefully",
    "start": "2292150",
    "end": "2299140"
  },
  {
    "text": "it'll be okay uh so oh it's really mmm let's move my immediate window maybe",
    "start": "2299140",
    "end": "2306940"
  },
  {
    "text": "over here instead that might have made it worse okay well we'll just come back",
    "start": "2306940",
    "end": "2314410"
  },
  {
    "text": "to it when we need it all right so here we are let's build our type expression first so to do this from our",
    "start": "2314410",
    "end": "2324160"
  },
  {
    "text": "semantic model we're going to grab so we can like see here a semantic model we",
    "start": "2324160",
    "end": "2329290"
  },
  {
    "text": "have a compilation we want to get a type named by met it so we're gonna get our",
    "start": "2329290",
    "end": "2334990"
  },
  {
    "text": "type by metadata name so we're just gonna find system array in that compilation and use that so that's gonna",
    "start": "2334990",
    "end": "2340960"
  },
  {
    "text": "be our array type that we've just grabbed there and then now we need to",
    "start": "2340960",
    "end": "2347800"
  },
  {
    "text": "wrap it up inside of an expression so to do that we're gonna do the like type",
    "start": "2347800",
    "end": "2353770"
  },
  {
    "text": "expression and then we can use that generator API and this is all you do you get a like dot and you type in the name",
    "start": "2353770",
    "end": "2361570"
  },
  {
    "text": "that you wanted find type expression and now we're just gonna wrap this around the array type all right so to show that",
    "start": "2361570",
    "end": "2369760"
  },
  {
    "text": "works we're just gonna step come to our",
    "start": "2369760",
    "end": "2374860"
  },
  {
    "text": "immediate window goto type expression and just to string",
    "start": "2374860",
    "end": "2380500"
  },
  {
    "text": "that all day yeah boom our syntax so to",
    "start": "2380500",
    "end": "2385540"
  },
  {
    "text": "string if your to string on any of our like nodes or whatever we just like string output whatever it is this is how",
    "start": "2385540",
    "end": "2391660"
  },
  {
    "text": "you can easily verify your syntax that you're building up all right so now",
    "start": "2391660",
    "end": "2397450"
  },
  {
    "text": "we've done that come back up here now let's build our generic expression so",
    "start": "2397450",
    "end": "2403329"
  },
  {
    "text": "the tricky part of this is that we need to know what the generic type is so what",
    "start": "2403329",
    "end": "2408940"
  },
  {
    "text": "is the type of this array if we go to our documentation will notice that in",
    "start": "2408940",
    "end": "2417460"
  },
  {
    "text": "our IRA creation operation we only have dimension sizes and what the initializer",
    "start": "2417460",
    "end": "2422680"
  },
  {
    "text": "is so that doesn't contain anything related to the type of the array or the",
    "start": "2422680",
    "end": "2427810"
  },
  {
    "text": "element type in the array so we're gonna just pray that I operation has something so if we go to eye operation interface",
    "start": "2427810",
    "end": "2434560"
  },
  {
    "text": "that implements Scroll in here oh there's something called type that",
    "start": "2434560",
    "end": "2440260"
  },
  {
    "text": "sounds promising if we look at it what it is so it's an eye type symbol if I",
    "start": "2440260",
    "end": "2448450"
  },
  {
    "text": "come in here not seeing much but like what implements this so I can double",
    "start": "2448450",
    "end": "2454270"
  },
  {
    "text": "click to see references and then sure enough over here there's something",
    "start": "2454270",
    "end": "2460420"
  },
  {
    "text": "called an eye array type symbol so if I click on this oh I from zoomed in all",
    "start": "2460420",
    "end": "2469930"
  },
  {
    "text": "right there we go and look in here oh look at that beautiful there's something",
    "start": "2469930",
    "end": "2476800"
  },
  {
    "text": "called element type that gets the type of the elements store in the array so that's what we need perfect",
    "start": "2476800",
    "end": "2482710"
  },
  {
    "text": "so come back over here not to my debugging session come back over here so",
    "start": "2482710",
    "end": "2489790"
  },
  {
    "text": "we need to get what this type is so first we need to get our operation in order to get any of this because it was",
    "start": "2489790",
    "end": "2494950"
  },
  {
    "text": "all through the eye operation API so in order to get that again if you remember from that diagram from before from the",
    "start": "2494950",
    "end": "2502000"
  },
  {
    "text": "semantic model you can grab your operation so in here I can get my operation so I want it for my original",
    "start": "2502000",
    "end": "2509079"
  },
  {
    "text": "expression those came the operation for that from there I need to get our symbol our type",
    "start": "2509079",
    "end": "2517089"
  },
  {
    "text": "symbol type symbol which all this is I",
    "start": "2517089",
    "end": "2522400"
  },
  {
    "text": "put all this code on my github so I'll share the length of that later but you all can access this anytime you want so",
    "start": "2522400",
    "end": "2530349"
  },
  {
    "text": "from that we're going to one my day Oh getting that so from my operation it has",
    "start": "2530349",
    "end": "2537369"
  },
  {
    "text": "a type so that was that type but then we want to cast it as that I array type",
    "start": "2537369",
    "end": "2544089"
  },
  {
    "text": "symbol and then from this I can get that element type so as my element type so from my type symbol now I can get that",
    "start": "2544089",
    "end": "2552790"
  },
  {
    "text": "element type cool so now I know what this value is",
    "start": "2552790",
    "end": "2559060"
  },
  {
    "text": "now I need to do the other part so let's just construct this generic expression so again I go to my generator ice type",
    "start": "2559060",
    "end": "2568000"
  },
  {
    "text": "dot it's probably called generic something and sure enough generic name is there so I give it my identifier",
    "start": "2568000",
    "end": "2575260"
  },
  {
    "text": "which is empty and then whatever my element type is alright so let's like",
    "start": "2575260",
    "end": "2581589"
  },
  {
    "text": "prove this did what we thought it was gonna do so again you can step I got a",
    "start": "2581589",
    "end": "2587109"
  },
  {
    "text": "love edit and continue come back over in my immediate window type of my generic",
    "start": "2587109",
    "end": "2593770"
  },
  {
    "text": "expression to string that and I can see",
    "start": "2593770",
    "end": "2599950"
  },
  {
    "text": "I have empty of type string or whatever it's going to be cool now have that",
    "start": "2599950",
    "end": "2610200"
  },
  {
    "text": "cool now for the easy part because we're just wrapping all we did all the hard part which you know was finding like",
    "start": "2612040",
    "end": "2618310"
  },
  {
    "text": "array type and the generic and now we're just like you know adding parentheses essentially and stitching them together",
    "start": "2618310",
    "end": "2624280"
  },
  {
    "text": "so from here oh no no no no I forgot to move this move this up hopefully this",
    "start": "2624280",
    "end": "2631750"
  },
  {
    "text": "works all right so from here right my remember access expression so again go",
    "start": "2631750",
    "end": "2638200"
  },
  {
    "text": "to my generator sure enough member access expression like we tried to make this as easy as",
    "start": "2638200",
    "end": "2644380"
  },
  {
    "text": "possible so I'm just going to feed it my type expression so that was where I'm",
    "start": "2644380",
    "end": "2649870"
  },
  {
    "text": "getting that array and then we're going to dot it with now that generic expression that we wrote so again step",
    "start": "2649870",
    "end": "2660220"
  },
  {
    "text": "over it come in here say member acts",
    "start": "2660220",
    "end": "2666580"
  },
  {
    "text": "this expression to string it now you can see it's system dot array die empty of",
    "start": "2666580",
    "end": "2673180"
  },
  {
    "text": "the type that we wanted so we've built up that syntax there oops alright and",
    "start": "2673180",
    "end": "2682780"
  },
  {
    "text": "now the last and final piece of the subtree let's go back the invocation",
    "start": "2682780",
    "end": "2688150"
  },
  {
    "text": "expression so it has to be an invocation expression at the roots so invocation expression take our generator invocation",
    "start": "2688150",
    "end": "2698440"
  },
  {
    "text": "expression and then just wrap our member access expression in that boom and so",
    "start": "2698440",
    "end": "2705880"
  },
  {
    "text": "now i should be able to step come over here and you get the point right you",
    "start": "2705880",
    "end": "2712750"
  },
  {
    "text": "know i'm coming over here and verifying but it's really helpful especially if it's your first time riding an analyzer",
    "start": "2712750",
    "end": "2718570"
  },
  {
    "text": "to come through and just to string everything and make sure that's building",
    "start": "2718570",
    "end": "2723640"
  },
  {
    "text": "up what you thought it was so now i can see this is exactly what i wanted it's that array dot empty of whatever my type",
    "start": "2723640",
    "end": "2729040"
  },
  {
    "text": "is as an invocation expression cool so",
    "start": "2729040",
    "end": "2734260"
  },
  {
    "text": "now that we did all of that we have to do these final steps so remember a swap",
    "start": "2734260",
    "end": "2740380"
  },
  {
    "text": "that original expression with the new one so now I have this invocation expression I want to swap that where my",
    "start": "2740380",
    "end": "2745780"
  },
  {
    "text": "original expression was in the tree so to do that we're gonna create a new tree",
    "start": "2745780",
    "end": "2750850"
  },
  {
    "text": "we're gonna come to the old one and there's something called replace node so we make this easy for you and you give",
    "start": "2750850",
    "end": "2757390"
  },
  {
    "text": "it the old node which is our original expression give it our new one which is",
    "start": "2757390",
    "end": "2762580"
  },
  {
    "text": "our invocation expression and then I just need to make a new document with",
    "start": "2762580",
    "end": "2768100"
  },
  {
    "text": "that new syntax tree in it so in a create a new document and then going to say document dot with syntax you with",
    "start": "2768100",
    "end": "2777580"
  },
  {
    "text": "syntax for you I guess in Teleco t' is totally trained on all this so nice and easy give it my new route and then now I",
    "start": "2777580",
    "end": "2786820"
  },
  {
    "text": "need to return my new document so now o",
    "start": "2786820",
    "end": "2796920"
  },
  {
    "text": "up here I misspelled it Oh also if I decide to want to keep that we offer to",
    "start": "2798300",
    "end": "2804970"
  },
  {
    "text": "fix your spelling mistakes for you in here and so offers switches so we'll just keep it misspelled why not okay so",
    "start": "2804970",
    "end": "2813720"
  },
  {
    "text": "I undo my breakpoint undo my very point so now actually go to click continue to",
    "start": "2813720",
    "end": "2820480"
  },
  {
    "text": "go back through my thing that I've been debugging this whole time so I've come over here and do control",
    "start": "2820480",
    "end": "2826480"
  },
  {
    "text": "dot it now will offer to make this in a",
    "start": "2826480",
    "end": "2831730"
  },
  {
    "text": "raid empty so pretty nifty eh yeah thank",
    "start": "2831730",
    "end": "2837400"
  },
  {
    "text": "you so mmm yeah and so you can see that I didn't have to generate that diff view I",
    "start": "2837400",
    "end": "2843100"
  },
  {
    "text": "didn't have to do anything on the light bulb I didn't have to say draw squiggle I just said where to draw the squiggle",
    "start": "2843100",
    "end": "2849580"
  },
  {
    "text": "and so like most the heavy lifting is already done for you with our templates",
    "start": "2849580",
    "end": "2856180"
  },
  {
    "text": "that we have here yes",
    "start": "2856180",
    "end": "2860250"
  },
  {
    "text": "of course you're gonna call me out on that okay yeah so hmm this only works if you have the",
    "start": "2864920",
    "end": "2871859"
  },
  {
    "text": "framework that has system dot array in it so I should have done if I wanted to",
    "start": "2871859",
    "end": "2877440"
  },
  {
    "text": "make this more robust was when I initially did my diagnostic I wouldn't",
    "start": "2877440",
    "end": "2882450"
  },
  {
    "text": "want to report this okay so okay a raid on empty is only available I think in four six of the framework I believe I",
    "start": "2882450",
    "end": "2889890"
  },
  {
    "text": "think so was when we added it so I wouldn't ever want to squiggle it and change it for someone that was not on",
    "start": "2889890",
    "end": "2896130"
  },
  {
    "text": "for six or greater so what I would need to do is here if I want to make this",
    "start": "2896130",
    "end": "2901349"
  },
  {
    "text": "truly robust when I report the diagnostic I would want to I'm debugging",
    "start": "2901349",
    "end": "2908150"
  },
  {
    "text": "let's stop debugging what I would want to do is wrap this whole thing and wrap",
    "start": "2908150",
    "end": "2916559"
  },
  {
    "text": "this whole thing in a compilation start action and if I do that then in here I'm",
    "start": "2916559",
    "end": "2932339"
  },
  {
    "text": "great at variable naming by the way then in here I would want to see like so I",
    "start": "2932339",
    "end": "2938789"
  },
  {
    "text": "want to see that array type exists so then I would come in grab my compilation",
    "start": "2938789",
    "end": "2945499"
  },
  {
    "text": "and just like we did to get that type come on compilation then I would get",
    "start": "2945499",
    "end": "2953549"
  },
  {
    "text": "type by metadata name and see if system dot array existed and so here I would",
    "start": "2953549",
    "end": "2959039"
  },
  {
    "text": "see if this exists and then like you know if you know I forget what is this",
    "start": "2959039",
    "end": "2966920"
  },
  {
    "text": "so if it's not null or whatever it I'm supposed to do for my check there then I",
    "start": "2968029",
    "end": "2973619"
  },
  {
    "text": "would put this in so then this now does",
    "start": "2973619",
    "end": "2979289"
  },
  {
    "text": "the check to see do you have a sister not array available in your compilation",
    "start": "2979289",
    "end": "2984989"
  },
  {
    "text": "and it will only offer to give the diagnostic and the fix if it exists oh",
    "start": "2984989",
    "end": "2991369"
  },
  {
    "text": "okay what was your question then I see",
    "start": "2991789",
    "end": "3003849"
  },
  {
    "text": "ok well let's find out shall we so the question is if you they don't",
    "start": "3003849",
    "end": "3010009"
  },
  {
    "text": "have the using for this fix what happens I believe we add it for you but there's",
    "start": "3010009",
    "end": "3016849"
  },
  {
    "text": "only one way to truly know and that would be to test it oh I don't have any",
    "start": "3016849",
    "end": "3029869"
  },
  {
    "text": "more but I have fungus jokes you all know the fungus is oh someone have a",
    "start": "3029869",
    "end": "3036259"
  },
  {
    "text": "joke for me ok so the joke is how do you count cows is this appropriate by the",
    "start": "3036259",
    "end": "3041509"
  },
  {
    "text": "way whoever set it with the calculator",
    "start": "3041509",
    "end": "3048910"
  },
  {
    "text": "it's pretty good I would I'm gonna take that mm-hmm how does a cow count how many legs it",
    "start": "3048910",
    "end": "3055700"
  },
  {
    "text": "has cuz apparently they're flying off the shelves alright so in it oh maybe I'm not",
    "start": "3055700",
    "end": "3066170"
  },
  {
    "text": "targeting even the right thing here ok let's see control dot let's see what",
    "start": "3066170",
    "end": "3073009"
  },
  {
    "text": "happens oh it doesn't do anything because it's always qualified it yeah oh nice look",
    "start": "3073009",
    "end": "3080719"
  },
  {
    "text": "what we do we're so like even you're less work for you guys you have to check",
    "start": "3080719",
    "end": "3086450"
  },
  {
    "text": "that is there so yep there you go and so now I correctly checked that as I should",
    "start": "3086450",
    "end": "3092089"
  },
  {
    "text": "have done the beginning but I don't to make a more complicated that this exists in there compilation and then offers it",
    "start": "3092089",
    "end": "3099319"
  },
  {
    "text": "and then yeah if you don't have the using will qualify it for you and put it in there cool all right what time am i",
    "start": "3099319",
    "end": "3105799"
  },
  {
    "text": "over 40 okay I'm eight minutes so I just brag to all that I operation was so a",
    "start": "3105799",
    "end": "3113380"
  },
  {
    "text": "abstract or high-level that it works over multiple languages so let's test it you say what languages it applies to up",
    "start": "3113380",
    "end": "3120619"
  },
  {
    "text": "here so we're going to do language names Visual Basic",
    "start": "3120619",
    "end": "3127950"
  },
  {
    "text": "and then we'll do it for the fix as well I believe I stayed here language names",
    "start": "3127950",
    "end": "3141200"
  },
  {
    "text": "visual basic alright so now let's go and",
    "start": "3141200",
    "end": "3146640"
  },
  {
    "text": "test it again and open up a VB project where we do same thing and see if it",
    "start": "3146640",
    "end": "3153360"
  },
  {
    "text": "works alright why did the mushroom go to the",
    "start": "3153360",
    "end": "3161130"
  },
  {
    "text": "party anyway anyway we're on to funguses",
    "start": "3161130",
    "end": "3166530"
  },
  {
    "text": "now because he was a fungi I know guys",
    "start": "3166530",
    "end": "3173310"
  },
  {
    "text": "thanks for laughs alright mmm the other one that you have to tell is you can't tell like that joke that time opposite",
    "start": "3173310",
    "end": "3179490"
  },
  {
    "text": "direction one why did the fungus leave the party because there wasn't mushroom",
    "start": "3179490",
    "end": "3189200"
  },
  {
    "text": "terrible but hey maybe you'll make friend tonight who knows tell some jokes",
    "start": "3189200",
    "end": "3195530"
  },
  {
    "text": "alright and so here we are loaded thank goodness cuz I'm out of jokes open a VB",
    "start": "3195530",
    "end": "3202890"
  },
  {
    "text": "file hopefully hopefully hopefully once my analysis runs yep now you can see",
    "start": "3202890",
    "end": "3209160"
  },
  {
    "text": "that same thing here it's got our same message and I should be able to do control dot and yep it offers to use it",
    "start": "3209160",
    "end": "3218910"
  },
  {
    "text": "and uses the VB syntax for me so because use a syntax generator API it's language agnostic Allah creating my syntax so it",
    "start": "3218910",
    "end": "3226890"
  },
  {
    "text": "used the VB syntax in here for me and where's the VB as well so cool that's",
    "start": "3226890",
    "end": "3233730"
  },
  {
    "text": "how we wrote it in again like if we look at how much code that was besides my",
    "start": "3233730",
    "end": "3239340"
  },
  {
    "text": "like comment craziness that I put in here the fix was probably like 20 lines",
    "start": "3239340",
    "end": "3246300"
  },
  {
    "text": "maybe 15 lines of code here so not a lot and then remember our analyzer was",
    "start": "3246300",
    "end": "3251880"
  },
  {
    "text": "barely any at all just this so once you like wrap your head around like what",
    "start": "3251880",
    "end": "3257700"
  },
  {
    "text": "that you do which once you write the first analyzer and get work writing anything thereafter is",
    "start": "3257700",
    "end": "3262720"
  },
  {
    "text": "usually much easier so yeah there you go so back to slides yeah alright so here",
    "start": "3262720",
    "end": "3275920"
  },
  {
    "text": "you go here's an analyzer I wrote for you guys analyzers are not scary hmm",
    "start": "3275920",
    "end": "3281950"
  },
  {
    "text": "so yeah yeah that's that's the takeaway if you want to see what some",
    "start": "3281950",
    "end": "3288400"
  },
  {
    "text": "community-based analyzers exist there today so some people will have like gone ham so we have like we're writing a",
    "start": "3288400",
    "end": "3295690"
  },
  {
    "text": "bunch of the FX cop analyzers or FX cop rules as a Rawls and analyzers so you get live feedback on whether or not",
    "start": "3295690",
    "end": "3302710"
  },
  {
    "text": "you're using the best practices from FX cop or like the security things so we've",
    "start": "3302710",
    "end": "3307930"
  },
  {
    "text": "written a lot of those as analyzers a lot of those news I operation so if you want to see that in works you can look",
    "start": "3307930",
    "end": "3314020"
  },
  {
    "text": "at our repo for that Rozlyn eater it's something like a guy wrote 180 refactorings and code fixes or",
    "start": "3314020",
    "end": "3321670"
  },
  {
    "text": "something like that so if you need examples or he might have written one that you want like check it out someone",
    "start": "3321670",
    "end": "3328630"
  },
  {
    "text": "on my team wrote a bunch of style cop analyzers as part of his open-source project that he has for this so I wrote",
    "start": "3328630",
    "end": "3334839"
  },
  {
    "text": "all the style cop rules as Roz and analyzers so you can use that Soner cube",
    "start": "3334839",
    "end": "3340059"
  },
  {
    "text": "I wrote one a bunch for a STONER lint I think they also have hundreds and there's code cracker which is another",
    "start": "3340059",
    "end": "3346599"
  },
  {
    "text": "kind of grassroots one that popped up that does a lot of VB ones as well I believe so if you want to like see",
    "start": "3346599",
    "end": "3352150"
  },
  {
    "text": "examples in the wild or use them yourself so you can contribute to these projects write your own a lot of people",
    "start": "3352150",
    "end": "3357430"
  },
  {
    "text": "have written their own for their teams at their company or whatever yeah and",
    "start": "3357430",
    "end": "3362619"
  },
  {
    "text": "then here is a ton of references for you so like if you want to learn more about",
    "start": "3362619",
    "end": "3368440"
  },
  {
    "text": "the api's we have a nice overview that I didn't write which is why it's really good then if you want that source code",
    "start": "3368440",
    "end": "3376539"
  },
  {
    "text": "index so what I've been calling the documentation that's or start on the i/o we have various guides to help you get",
    "start": "3376539",
    "end": "3382900"
  },
  {
    "text": "started if you really want to find analyzers exist today we don't have a registry or anything so you just sort of",
    "start": "3382900",
    "end": "3389470"
  },
  {
    "text": "have to like google Roslyn analyzers or go to nougat org and type Eliezer or go to the extension gallery",
    "start": "3389470",
    "end": "3396050"
  },
  {
    "text": "and click analyser and do that someone made this website called awesome Roslyn",
    "start": "3396050",
    "end": "3403870"
  },
  {
    "text": "which sounds pretty cool right skip verification let's just oh you",
    "start": "3403870",
    "end": "3410480"
  },
  {
    "text": "can't see it escape escape oh no how do I get out of presentation",
    "start": "3410480",
    "end": "3416240"
  },
  {
    "text": "mode okay here we go and so it's like a list of books on",
    "start": "3416240",
    "end": "3425000"
  },
  {
    "text": "Roslyn tutorials on Roslyn and different open-source projects that use Roslyn so",
    "start": "3425000",
    "end": "3431510"
  },
  {
    "text": "that's something that you want you can do that and oh man this is yeah so you",
    "start": "3431510",
    "end": "3438950"
  },
  {
    "text": "did my job for me and put all this in here for you so that's awesome Roslyn is",
    "start": "3438950",
    "end": "3444080"
  },
  {
    "text": "the github project for that that you can use etc and yeah I think that's it how",
    "start": "3444080",
    "end": "3453620"
  },
  {
    "text": "much time I have a three minutes so does anyone have any questions oh yeah so the questions was the",
    "start": "3453620",
    "end": "3465650"
  },
  {
    "text": "performance of these we're actually building a tool right now to be able to",
    "start": "3465650",
    "end": "3471560"
  },
  {
    "text": "measure the performance of these we don't actually have a way of doing it right now there's certain actions that",
    "start": "3471560",
    "end": "3478070"
  },
  {
    "text": "you shouldn't well no they shouldn't register too but that request so if you write anything that requires the entire",
    "start": "3478070",
    "end": "3484220"
  },
  {
    "text": "couple so accomplish an end to action that requires the whole compilation to be done in order to access that so that",
    "start": "3484220",
    "end": "3490730"
  },
  {
    "text": "one will have like you know will take longer than the other ones but if you write these unless you like are writing",
    "start": "3490730",
    "end": "3497630"
  },
  {
    "text": "infinite loops and then or mining Bitcoin in them they should be performing",
    "start": "3497630",
    "end": "3505360"
  },
  {
    "text": "so the question is can I just like have the so in my example could I've just",
    "start": "3516650",
    "end": "3522329"
  },
  {
    "text": "done a system daughter ADA empty of the type and just have it generate the syntax tree for me someone wrote a tool",
    "start": "3522329",
    "end": "3530280"
  },
  {
    "text": "that does that I believe sort of but yeah okay so it",
    "start": "3530280",
    "end": "3546450"
  },
  {
    "text": "has to for the array I needed to make sure that it was current I can't just",
    "start": "3546450",
    "end": "3551460"
  },
  {
    "text": "have like a string identifier array I need to be the array linked to system dot array and I need to know like my",
    "start": "3551460",
    "end": "3557819"
  },
  {
    "text": "generic type and so how would you get that from a string input right",
    "start": "3557819",
    "end": "3563640"
  },
  {
    "text": "I believe those someone I can't remember the name of the tool but it's like just do like Roslyn string it to what is it",
    "start": "3563640",
    "end": "3571380"
  },
  {
    "text": "called oh yeah Roslyn quota that's what it is Roslyn quota and if you go there you",
    "start": "3571380",
    "end": "3576539"
  },
  {
    "text": "just type in like what syntax you wanted and it shows you what you have to build out with the generator of the syntax",
    "start": "3576539",
    "end": "3582779"
  },
  {
    "text": "factory to get it yeah so people have written like all sorts of cool tools for writing these in Roslyn as well so go",
    "start": "3582779",
    "end": "3590849"
  },
  {
    "text": "wild any other questions cool well as I said if you're not here",
    "start": "3590849",
    "end": "3597809"
  },
  {
    "text": "for my comedy I'll be here all week so just find me at any time and happy to",
    "start": "3597809",
    "end": "3603539"
  },
  {
    "text": "talk about whatever so also if you want to write these the Rosslyn team our team",
    "start": "3603539",
    "end": "3608609"
  },
  {
    "text": "has a git er channel Gator dot I am slash Rosslyn or something like that so",
    "start": "3608609",
    "end": "3614760"
  },
  {
    "text": "if you're having trouble with any analyzer that you're writing just hop on to get her and like our entire team is",
    "start": "3614760",
    "end": "3619890"
  },
  {
    "text": "there so you can just ask us any question you have and we're happy to help so yeah thanks guys for coming out",
    "start": "3619890",
    "end": "3626010"
  },
  {
    "text": "enjoy the rest of NBC Thanks",
    "start": "3626010",
    "end": "3630260"
  }
]