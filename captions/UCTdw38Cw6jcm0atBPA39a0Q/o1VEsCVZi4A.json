[
  {
    "text": "okay uh hello everyone good morning uh thanks for joining the talk I am PE and",
    "start": "1000",
    "end": "8880"
  },
  {
    "text": "I'll be talking about opfs is it the next evolution in web storage or it's",
    "start": "8880",
    "end": "14839"
  },
  {
    "text": "just going to be another experimental Tech you know that in web world is very common like you see many Tech coming in",
    "start": "14839",
    "end": "21279"
  },
  {
    "text": "and going out as quickly as it came in so uh before I deep dive into opfs uh",
    "start": "21279",
    "end": "29720"
  },
  {
    "text": "what is it like has anyone heard of it uh Has anyone used it I would like to know that so for that I would request",
    "start": "29720",
    "end": "36399"
  },
  {
    "text": "you to take out your phones and we'll run a quick poll so just give me a second",
    "start": "36399",
    "end": "43520"
  },
  {
    "text": "uh yeah yeah uh could you please join the",
    "start": "43520",
    "end": "52719"
  },
  {
    "text": "link it would ask you to fill out your name and then we'll probably see over here",
    "start": "55160",
    "end": "61120"
  },
  {
    "text": "the",
    "start": "61120",
    "end": "63239"
  },
  {
    "text": "audience okay I think it's a bit difficult okay I see that a few people",
    "start": "72400",
    "end": "78680"
  },
  {
    "text": "have joined now okay",
    "start": "78680",
    "end": "84280"
  },
  {
    "text": "uh yeah so uh you can probably click on one of these options and submit uh so we",
    "start": "85360",
    "end": "94079"
  },
  {
    "text": "have never heard of it never heard of it that's",
    "start": "94079",
    "end": "101200"
  },
  {
    "text": "expected never heard of",
    "start": "101200",
    "end": "104840"
  },
  {
    "text": "it yeah so uh if you are tapping over there there's a submit Button as well so",
    "start": "107840",
    "end": "113000"
  },
  {
    "text": "you you know remember to submit that as well okay so it's 11 never heard of it",
    "start": "113000",
    "end": "120719"
  },
  {
    "text": "out of 13 so let's see if we have like the other two as",
    "start": "120719",
    "end": "127399"
  },
  {
    "text": "well okay probably it's a duplicate entry but yeah I got the gist uh essentially no one's heard of it and",
    "start": "129399",
    "end": "135760"
  },
  {
    "text": "that's actually good for me now I can say anything and you you would have to believe uh so I'll move",
    "start": "135760",
    "end": "144920"
  },
  {
    "text": "on yeah so what is opfs opfs is origin",
    "start": "148280",
    "end": "153800"
  },
  {
    "text": "private file system uh it's a file system within your browser that's private to An Origin and I'll explain",
    "start": "153800",
    "end": "161800"
  },
  {
    "text": "origin first what's origin so origin is constituted of the scheme which is stps",
    "start": "161800",
    "end": "168840"
  },
  {
    "text": "and then the domain or the host name which is example.com and then the port so that's an origin if you were to",
    "start": "168840",
    "end": "175080"
  },
  {
    "text": "compare it with other Origins for example in the first example it says evil.com which is different different",
    "start": "175080",
    "end": "180159"
  },
  {
    "text": "from example.com so it's uh it's not the same origin next one is example.com but",
    "start": "180159",
    "end": "186080"
  },
  {
    "text": "the origin a is www.example.com so it's a different subdomain and then the next one is also",
    "start": "186080",
    "end": "192280"
  },
  {
    "text": "a different subdomain the next one is a different scheme and the next one is a different port the second last one it's",
    "start": "192280",
    "end": "200159"
  },
  {
    "text": "it's the same so it's same scheme same host name and the same port the last one",
    "start": "200159",
    "end": "205280"
  },
  {
    "text": "is interesting because it doesn't specify the port but because you're using https so it is implicit that",
    "start": "205280",
    "end": "212319"
  },
  {
    "text": "you're using the 443 Port so yeah that's an origin coming back so it's it's a",
    "start": "212319",
    "end": "218200"
  },
  {
    "text": "file system private to An Origin and it is a sandboxed file system when I say",
    "start": "218200",
    "end": "223840"
  },
  {
    "text": "sandboxed what I mean is that the files that are stored in this file system they are not on the user visible file system",
    "start": "223840",
    "end": "231360"
  },
  {
    "text": "for example when you download something it goes into uh your D directory or your downloads directory but that's not the",
    "start": "231360",
    "end": "237120"
  },
  {
    "text": "case in origin private file system the look ation of the files is kind of an",
    "start": "237120",
    "end": "242400"
  },
  {
    "text": "internal detail of the browser implementation uh so that you know malicious actors cannot gain access to",
    "start": "242400",
    "end": "248480"
  },
  {
    "text": "those files easily and whatever scripts maybe you know whatever script you run in that opfs in that origin private file",
    "start": "248480",
    "end": "255560"
  },
  {
    "text": "system that only has access to that particular origin and not outside of it",
    "start": "255560",
    "end": "260600"
  },
  {
    "text": "so that what that's what sandbox is and uh if you were to look at uh you",
    "start": "260600",
    "end": "266560"
  },
  {
    "text": "know the diagram uh you'll notice there's a similarity between how hard drives store data and how opfs stores",
    "start": "266560",
    "end": "273759"
  },
  {
    "text": "data so on the rout you see sdd uh like the hard drive and then you have folders",
    "start": "273759",
    "end": "279840"
  },
  {
    "text": "and then you have a lot of files within those folders and similarly in opfs you get the root directory just like a hard",
    "start": "279840",
    "end": "286639"
  },
  {
    "text": "drive you get Navigator do storage. G directory and then you have folders and files within the",
    "start": "286639",
    "end": "294479"
  },
  {
    "text": "opfs okay I already talked about that yeah but why even bother about opfs like",
    "start": "296520",
    "end": "304160"
  },
  {
    "text": "what are the benefits so first of all obviously is security because the file",
    "start": "304160",
    "end": "309960"
  },
  {
    "text": "system itself is sandboxed a malicious actor would not be able to gain access to your user visible file system second",
    "start": "309960",
    "end": "318120"
  },
  {
    "text": "is flexibility uh so we have other browser storages for example local storage or session storage or index TV",
    "start": "318120",
    "end": "325600"
  },
  {
    "text": "but because opfs lets you work directly with files uh it is much more flexible ible you can build libraries build uh",
    "start": "325600",
    "end": "333120"
  },
  {
    "text": "you know uh systems on top of opfs that that would be able to mimic the",
    "start": "333120",
    "end": "338240"
  },
  {
    "text": "functionality of you of you know index DB as well uh next important one is user",
    "start": "338240",
    "end": "344600"
  },
  {
    "text": "interaction so this is this is like a cool one because you know uh you notice uh you might have used some apis show",
    "start": "344600",
    "end": "351039"
  },
  {
    "text": "open file picker or the show save file picker you know there's an input button and you have to click on it and that's",
    "start": "351039",
    "end": "357000"
  },
  {
    "text": "when you get access to a file but uh in case of of in case of opfs that's not the case you just get directly you get",
    "start": "357000",
    "end": "364639"
  },
  {
    "text": "uh the file handle directly and you can do whatever with it so there's no user interaction involved you can work with",
    "start": "364639",
    "end": "371199"
  },
  {
    "text": "the files directly and uh performance uh performance is a big thing for opfs so",
    "start": "371199",
    "end": "379080"
  },
  {
    "text": "uh you might have noticed when you download files from internet uh sometimes Google you know Chrome",
    "start": "379080",
    "end": "384840"
  },
  {
    "text": "browsers block it they say safe browsing or in terms of Microsoft Edge uh you",
    "start": "384840",
    "end": "390160"
  },
  {
    "text": "know sometimes it blocks the files says smart screen blocked the files that's because it is being downloaded to the",
    "start": "390160",
    "end": "396360"
  },
  {
    "text": "user visible file system but in case of opfs because it's a sandboxed file",
    "start": "396360",
    "end": "401440"
  },
  {
    "text": "system uh the browsers do not run those checks uh so it's much more performant there are no extra security",
    "start": "401440",
    "end": "408160"
  },
  {
    "text": "checks and uh adding to this performance benefits uh there are in place rights so",
    "start": "408160",
    "end": "414919"
  },
  {
    "text": "uh who out of the audience like understands what are in place rights like in anyone any",
    "start": "414919",
    "end": "421199"
  },
  {
    "text": "idea okay I'll show you know I'll just try",
    "start": "421199",
    "end": "426360"
  },
  {
    "text": "to should I zoom in a bit okay so let's say we have a file you know there's a new file and the content of that file is",
    "start": "429440",
    "end": "436440"
  },
  {
    "text": "like hello hello and if it's a non inplace right mechanism uh and you were",
    "start": "436440",
    "end": "442759"
  },
  {
    "text": "to append something to it so let's say I wanted to append world to this hello text what would happen in case of uh the",
    "start": "442759",
    "end": "449919"
  },
  {
    "text": "scenario wherein it is non inplace rights the browser would first create a temp file so the temp file will will",
    "start": "449919",
    "end": "456759"
  },
  {
    "text": "already have you know this content so it would already have hello",
    "start": "456759",
    "end": "462000"
  },
  {
    "text": "but it's a temp file nothing is being written yet to the actual file and then when you append the text the world would",
    "start": "462000",
    "end": "468520"
  },
  {
    "text": "be appended to this temp file and when you close the file when you close the",
    "start": "468520",
    "end": "474639"
  },
  {
    "text": "stream that's when actually the contents are copied back to the uh you know to",
    "start": "474639",
    "end": "481400"
  },
  {
    "text": "this to this main file this is what non- inplace right is so uh I think you can",
    "start": "481400",
    "end": "487400"
  },
  {
    "text": "uh kind of extrapolate from there what in place right is that you open the actual file and you already know the",
    "start": "487400",
    "end": "493039"
  },
  {
    "text": "position wherein the last right was and you just append to it so it would you know directly append to this main file",
    "start": "493039",
    "end": "499280"
  },
  {
    "text": "so it's much more performant that way because you're not loading anything to memory you're not creating a temporary",
    "start": "499280",
    "end": "506599"
  },
  {
    "text": "file okay yeah coming back so how do you use opfs apis there",
    "start": "506960",
    "end": "515800"
  },
  {
    "text": "are essentially two ways uh first is using the main thread and the second one",
    "start": "515800",
    "end": "521360"
  },
  {
    "text": "is using web workers so I'll uh you know run some code uh I'll show you just give",
    "start": "521360",
    "end": "527959"
  },
  {
    "text": "me a second yeah let's open up for example let's say uh open up google.com",
    "start": "527959",
    "end": "533640"
  },
  {
    "text": "and we'll open up the dev tools let me zoom in in a bit okay",
    "start": "533640",
    "end": "542200"
  },
  {
    "text": "sorry okay should I zoom in a bit more or is",
    "start": "554279",
    "end": "561120"
  },
  {
    "text": "it visible yeah it should be good okay so",
    "start": "561120",
    "end": "566800"
  },
  {
    "text": "how do we gain access uh to the opfs so if you remember I showed in an earlier slide you do uh so I'll just",
    "start": "566800",
    "end": "574240"
  },
  {
    "text": "create a variable",
    "start": "574240",
    "end": "577160"
  },
  {
    "text": "first opfs rout and yeah I've already did that before so I'll take help so uh",
    "start": "585040",
    "end": "592120"
  },
  {
    "text": "you just use the Navigator do storage. getet directory and you'll get the handle for the root directory of opfs so",
    "start": "592120",
    "end": "599480"
  },
  {
    "text": "you now have the root directory uh now let's create a directory within it so you do opfs root dot get directory",
    "start": "599480",
    "end": "609560"
  },
  {
    "text": "handle and you mention the directory name for example uh some",
    "start": "609560",
    "end": "616519"
  },
  {
    "text": "directory and if it doesn't exist you create",
    "start": "616519",
    "end": "622000"
  },
  {
    "text": "it okay and because this is an asynchronous API we have to put a wait",
    "start": "622560",
    "end": "628079"
  },
  {
    "text": "in front",
    "start": "628079",
    "end": "631240"
  },
  {
    "text": "cost directory handle yeah and uh the directory should",
    "start": "633880",
    "end": "640399"
  },
  {
    "text": "be created let's confirm that so I'm using an extension uh you know uh OPF",
    "start": "640399",
    "end": "645560"
  },
  {
    "text": "Explorer and you can see that the directory is created uh it's some directory now uh let's try creating a",
    "start": "645560",
    "end": "651839"
  },
  {
    "text": "file in here so we'll do a similar thing we'll get a file handle now and yeah so",
    "start": "651839",
    "end": "660720"
  },
  {
    "text": "what we are doing is we are in the directory handle we are getting a file Handle by the name first file.txt and we",
    "start": "660720",
    "end": "667440"
  },
  {
    "text": "are creating the file if it doesn't exist so let's run",
    "start": "667440",
    "end": "672519"
  },
  {
    "text": "that okay let's open up some yeah so the first file is created but it's empty uh",
    "start": "674200",
    "end": "679920"
  },
  {
    "text": "there is no content within it right now let's change that so uh generally",
    "start": "679920",
    "end": "686760"
  },
  {
    "text": "when you want to write to a file you create a stream uh and using that stream you write to files so we'll do something",
    "start": "686760",
    "end": "693959"
  },
  {
    "text": "uh we'll yeah oh sorry con writeable",
    "start": "693959",
    "end": "701970"
  },
  {
    "text": "[Music] Stream So what I'm doing here is I'm using the file handle and then creating",
    "start": "701970",
    "end": "708160"
  },
  {
    "text": "a writeable stream over it so uh one interesting thing happens now a",
    "start": "708160",
    "end": "713600"
  },
  {
    "text": "temporary file is created this is what I was talking about earlier when you want to uh you know work with uh a system",
    "start": "713600",
    "end": "719079"
  },
  {
    "text": "where where and it doesn't support in place rights this is what happens a temporary file is created and now if I",
    "start": "719079",
    "end": "724680"
  },
  {
    "text": "want to write something to it let's",
    "start": "724680",
    "end": "728360"
  },
  {
    "text": "say let's say I write hello yeah uh so you'll notice that the",
    "start": "732920",
    "end": "739519"
  },
  {
    "text": "content is not yet in the main file it is in the temporary file and if you want to have those",
    "start": "739519",
    "end": "747000"
  },
  {
    "text": "changes in your actual file you have to close the",
    "start": "747000",
    "end": "753279"
  },
  {
    "text": "stream yeah uh so now the changes should be in the main file let's confirm that",
    "start": "753279",
    "end": "760000"
  },
  {
    "text": "yeah the hello is there so this is how you would write to a file in case of uh",
    "start": "760000",
    "end": "765079"
  },
  {
    "text": "you know when you're using the opfs apis using main thread so all of this is running on the main thread uh you can",
    "start": "765079",
    "end": "771800"
  },
  {
    "text": "because I'm running it on Console so it's on Main thread uh you can do a few other operations like you know General",
    "start": "771800",
    "end": "777800"
  },
  {
    "text": "file handling operations uh so for example let me get the file object so let's say I get the file",
    "start": "777800",
    "end": "786519"
  },
  {
    "text": "object file handle. getet",
    "start": "787519",
    "end": "792560"
  },
  {
    "text": "file and yes it's an asynchronous API so I'll use await so now I have the file",
    "start": "792560",
    "end": "798560"
  },
  {
    "text": "object and I can get like uh a lot of details out of this so I can get the",
    "start": "798560",
    "end": "803839"
  },
  {
    "text": "last modified date the name size or you know even the text for example I do this",
    "start": "803839",
    "end": "809240"
  },
  {
    "text": "this and use await so I'll be able to get the text out of it so yeah uh that's",
    "start": "809240",
    "end": "814639"
  },
  {
    "text": "how you use uh opfs apis on the main thread cool uh I'll come",
    "start": "814639",
    "end": "823000"
  },
  {
    "text": "back yeah oh sorry yeah and uh so this was how you use main",
    "start": "824279",
    "end": "832279"
  },
  {
    "text": "thread uh this is basically just the code that I was showing uh over there and",
    "start": "832279",
    "end": "839600"
  },
  {
    "text": "just give me a",
    "start": "841399",
    "end": "844040"
  },
  {
    "text": "second yeah uh but how do you use opfs apis in web worker uh so has anyone here",
    "start": "848040",
    "end": "857120"
  },
  {
    "text": "used web workers like know about oh amazing uh so web workers for yeah I",
    "start": "857120",
    "end": "863360"
  },
  {
    "text": "mean I hadn't use web workers before this as well uh that was new to me and",
    "start": "863360",
    "end": "869199"
  },
  {
    "text": "web workers are like really spatial uh so web workers are a mechanism through which you can kind of achieve uh you",
    "start": "869199",
    "end": "875560"
  },
  {
    "text": "know concurrency in JavaScript world so JavaScript as you would know is you know single threaded so whatever you run on",
    "start": "875560",
    "end": "882320"
  },
  {
    "text": "the JavaScript engine it would block your thread but if you want to use have if you want to have some kind of",
    "start": "882320",
    "end": "888040"
  },
  {
    "text": "concurrency you use uh you use web workers so you can run a script parallel to your uh main thread and how you talk",
    "start": "888040",
    "end": "894880"
  },
  {
    "text": "to the web worker is through messages you send a message to the web worker and you you get some data back through a",
    "start": "894880",
    "end": "901600"
  },
  {
    "text": "message uh so it is a bit different in how you use the API and also in terms of",
    "start": "901600",
    "end": "908199"
  },
  {
    "text": "uh the performance gains that you get so the first thing here is that you create",
    "start": "908199",
    "end": "913440"
  },
  {
    "text": "a sync access handle so you remember we already had the file handle in case of",
    "start": "913440",
    "end": "918480"
  },
  {
    "text": "async API as well but now you run an extra operation you get a sync access handle so I'm using the term sync uh",
    "start": "918480",
    "end": "926240"
  },
  {
    "text": "what what do I mean by that what I mean is that whenever you you know after you get the sync access handle and you run",
    "start": "926240",
    "end": "932560"
  },
  {
    "text": "operations over it it would block the web worker it's not blocking the main thread but it's blocking the web worker",
    "start": "932560",
    "end": "938600"
  },
  {
    "text": "but that would affect your application because you know uh most of your application is running on the main thread so your UI would still be very",
    "start": "938600",
    "end": "945680"
  },
  {
    "text": "smooth uh so everything is happening on the web worker and how you write text to",
    "start": "945680",
    "end": "951319"
  },
  {
    "text": "is uh text to it uh to a file in web worker is you use a text encoder you",
    "start": "951319",
    "end": "956519"
  },
  {
    "text": "encode some text and just write it and it's instantly right you know written to the file there is no temp file there is",
    "start": "956519",
    "end": "963240"
  },
  {
    "text": "no opening of a temp file closing of a temp file it's really really fast uh I'll I'll get to a demo uh where",
    "start": "963240",
    "end": "970839"
  },
  {
    "text": "we'll see this in action okay so uh uh let's let's uh you",
    "start": "970839",
    "end": "977519"
  },
  {
    "text": "know let's show a demo of uh how it would work if you were to work with you",
    "start": "977519",
    "end": "983680"
  },
  {
    "text": "know video streams uh video streams are like a really good use case of showing how OPF is this uh might enhance the",
    "start": "983680",
    "end": "991480"
  },
  {
    "text": "experience so okay so yeah so what I'm going to do",
    "start": "991480",
    "end": "997639"
  },
  {
    "text": "is you know I have created uh kind of uh two sets of operations here one which",
    "start": "997639",
    "end": "1003959"
  },
  {
    "text": "runs without the opfs and one which runs with opfs so I'm going to start recording what it would do is it would",
    "start": "1003959",
    "end": "1010959"
  },
  {
    "text": "open up uh the video stream the camera stream and it would start start",
    "start": "1010959",
    "end": "1016000"
  },
  {
    "text": "recording and because I'm running it you you know with without opfs so it's going to store the recording within memory uh",
    "start": "1016000",
    "end": "1023639"
  },
  {
    "text": "in Ram so let's do that okay it should get the permission",
    "start": "1023639",
    "end": "1031319"
  },
  {
    "text": "yeah oh hello and now let's stop the recording so you can see that I can play",
    "start": "1031319",
    "end": "1037558"
  },
  {
    "text": "the recording uh it's in memory right now uh I can play it and it would uh it",
    "start": "1037559",
    "end": "1043558"
  },
  {
    "text": "would the recording would be there as long as I don't refresh the page because as soon as I refresh the page page uh",
    "start": "1043559",
    "end": "1049520"
  },
  {
    "text": "you know because it was it was in memory it would be lost and I do not have access to the recording uh that's where",
    "start": "1049520",
    "end": "1056679"
  },
  {
    "text": "you know because with opfs we have persistence uh we have storage on browser we can uh store that recording",
    "start": "1056679",
    "end": "1064480"
  },
  {
    "text": "uh in browser so let's try that so it's the same operation start",
    "start": "1064480",
    "end": "1070080"
  },
  {
    "text": "recording and hello uh and I stop recording so now uh I'll play recording",
    "start": "1070080",
    "end": "1078919"
  },
  {
    "text": "that's like that's usual uh but where it shines is that uh you know that",
    "start": "1078919",
    "end": "1084000"
  },
  {
    "text": "recording is saved on disk so this is another plugin I'm using uh to see the",
    "start": "1084000",
    "end": "1090919"
  },
  {
    "text": "opfs files so you can see that uh a test. webm file is created within recordings folder and it's of like 1 MB",
    "start": "1090919",
    "end": "1099000"
  },
  {
    "text": "and even if I refresh the page close the browser close the machine it's going to be there uh it's persisted to the dis so",
    "start": "1099000",
    "end": "1105720"
  },
  {
    "text": "I refresh the page and it's there uh but there's there's one more thing to it so",
    "start": "1105720",
    "end": "1111360"
  },
  {
    "text": "let's try uh recording again and it's recording uh but let's say you",
    "start": "1111360",
    "end": "1117880"
  },
  {
    "text": "know something bad was to happen you know the browser was going to crash uh",
    "start": "1117880",
    "end": "1123400"
  },
  {
    "text": "so I've opened up uh a task manager and yeah I crash the tab forcefully uh I'm",
    "start": "1123400",
    "end": "1129600"
  },
  {
    "text": "just kind of trying out you know if a browser can crash like it can happen at unusual times so let's just crash the",
    "start": "1129600",
    "end": "1137360"
  },
  {
    "text": "process so it was record in earlier and I yeah I crashed it so because it was",
    "start": "1137360",
    "end": "1146760"
  },
  {
    "text": "writing to the disk uh in real time we still have the recording uh so we can",
    "start": "1146760",
    "end": "1152360"
  },
  {
    "text": "check it out and the recording should still be there yeah it's like uh this",
    "start": "1152360",
    "end": "1158039"
  },
  {
    "text": "time it's a bigger file it's around 7 MPS but the recording is still there so that's the benefit of using opfs like",
    "start": "1158039",
    "end": "1164799"
  },
  {
    "text": "you can persist uh to your disk and I even tried crashing the tab and it worked so you can play the recording and",
    "start": "1164799",
    "end": "1172600"
  },
  {
    "text": "it would work yeah cool uh",
    "start": "1172600",
    "end": "1180039"
  },
  {
    "text": "okay okay [Music]",
    "start": "1184159",
    "end": "1189460"
  },
  {
    "text": "so okay so uh a question might arise that I used the specific synchronous",
    "start": "1191919",
    "end": "1197919"
  },
  {
    "text": "apis like use the web worker approach uh in Saving that recording to disk why not",
    "start": "1197919",
    "end": "1203039"
  },
  {
    "text": "use the async API so uh just think of a scenario where in this video stream is",
    "start": "1203039",
    "end": "1208960"
  },
  {
    "text": "getting huge which it can like for example when uh you know you're recording a video and it's a meeting uh",
    "start": "1208960",
    "end": "1215159"
  },
  {
    "text": "it can go over an hour long and it can go into GBS and if you're storing all of",
    "start": "1215159",
    "end": "1220600"
  },
  {
    "text": "that recording within memory your browser might get a bit slow or if it",
    "start": "1220600",
    "end": "1225919"
  },
  {
    "text": "were to crash you wouldn't have the time to store the that recording on disk like on a browser crash there is no event",
    "start": "1225919",
    "end": "1232400"
  },
  {
    "text": "like it's it just crashes there is no event uh so you have to be kind of uh prepared that you are saving all that",
    "start": "1232400",
    "end": "1239600"
  },
  {
    "text": "data uh onto disk in real time so that's why you use the uh the web worker apis",
    "start": "1239600",
    "end": "1247200"
  },
  {
    "text": "so yeah uh so what do you get out of this uh without without opfs in memory",
    "start": "1247200",
    "end": "1252440"
  },
  {
    "text": "uh if the video gets large uh it will take up a lot of memory and it is prone to data data loss if the browser crashes",
    "start": "1252440",
    "end": "1259320"
  },
  {
    "text": "with opfs with the web worker approach uh specifically uh the rights are",
    "start": "1259320",
    "end": "1264520"
  },
  {
    "text": "synchronous and they persist to disk and the data is safe even if the browser",
    "start": "1264520",
    "end": "1269640"
  },
  {
    "text": "crashes uh and obviously it doesn't block the main thread so your web application would still be very",
    "start": "1269640",
    "end": "1277158"
  },
  {
    "text": "responsive okay uh why did I you know think of this specific example uh of",
    "start": "1278240",
    "end": "1283520"
  },
  {
    "text": "recording a video stream so me and my friend uh created a chrome EXT ition",
    "start": "1283520",
    "end": "1288919"
  },
  {
    "text": "some time back and it's called buy [Music]",
    "start": "1288919",
    "end": "1294869"
  },
  {
    "text": "so yeah uh so it's a Chrome extension that lets you record Google meets uh for free and it's kind of a screen recorder",
    "start": "1301840",
    "end": "1309200"
  },
  {
    "text": "but much more suited to Google meets so you can uh you know uh record any number of Google meets and uh this was a",
    "start": "1309200",
    "end": "1316320"
  },
  {
    "text": "specific problem that I encountered with Bey and so let's say I open up a new",
    "start": "1316320",
    "end": "1322000"
  },
  {
    "text": "Google meet session and Bez is running uh",
    "start": "1322000",
    "end": "1327600"
  },
  {
    "text": "so so let's open up a new Google meet session and I hit record so this is the",
    "start": "1327600",
    "end": "1334720"
  },
  {
    "text": "extension I hit record yeah and as you can see the timer",
    "start": "1334720",
    "end": "1342159"
  },
  {
    "text": "has started so recording is going on so what was happening earlier was I was saving the recordings in memory and some",
    "start": "1342159",
    "end": "1350200"
  },
  {
    "text": "users started complaining that their recordings were being lost after they you know ended the meeting somehow the",
    "start": "1350200",
    "end": "1356480"
  },
  {
    "text": "browser crashed or the tab crashed or you know some error happened and they were not able to retrieve their recordings that's when I started",
    "start": "1356480",
    "end": "1362919"
  },
  {
    "text": "searching for solutions to this problem that how can I persist to dis uh how can I save these recordings so the recording",
    "start": "1362919",
    "end": "1369320"
  },
  {
    "text": "is not lost so now uh we use opfs for that so if I were to go into the",
    "start": "1369320",
    "end": "1375039"
  },
  {
    "text": "recording section of the extension uh you can see that the top topmost one",
    "start": "1375039",
    "end": "1381279"
  },
  {
    "text": "that's the that's the recording so if I refresh the page you'll see it is growing uh you know by the time I",
    "start": "1381279",
    "end": "1386919"
  },
  {
    "text": "refresh so it's 152 KB it's 153 KB it's being written to the disk in real time",
    "start": "1386919",
    "end": "1392840"
  },
  {
    "text": "so even if the browser was to crash uh you know something happened uh users recording would still be",
    "start": "1392840",
    "end": "1400039"
  },
  {
    "text": "safe yeah I'll stop recording and as soon as I stop recording the recording would be downloaded yeah so that was",
    "start": "1400039",
    "end": "1406679"
  },
  {
    "text": "about uh Bey uh let's go back yeah uh now I talked about uh the",
    "start": "1406679",
    "end": "1414279"
  },
  {
    "text": "async API and the Sync API and how the Sync API has much better performance",
    "start": "1414279",
    "end": "1419600"
  },
  {
    "text": "than the async API let's try that out like let's see with the Benchmark uh uh",
    "start": "1419600",
    "end": "1425320"
  },
  {
    "text": "how that fears so uh",
    "start": "1425320",
    "end": "1432880"
  },
  {
    "text": "okay so what I'm doing here is that uh I'm taking a file and I am appending 10",
    "start": "1435200",
    "end": "1441400"
  },
  {
    "text": "rows of data 100 rows of data th000 rows of data and 5,000 rows of data and I'll",
    "start": "1441400",
    "end": "1446799"
  },
  {
    "text": "be comparing the time it takes uh for uh the process to write using async API and",
    "start": "1446799",
    "end": "1453159"
  },
  {
    "text": "the Sync API so let's try that with the async API you'll notice 10 rows it's",
    "start": "1453159",
    "end": "1459279"
  },
  {
    "text": "really fast 100 uh it's fast still fast for, it starts to take time and in the",
    "start": "1459279",
    "end": "1465840"
  },
  {
    "text": "meanwhile it's running uh you know let me just show you a cool thing so you see there's this logs",
    "start": "1465840",
    "end": "1473080"
  },
  {
    "text": "directory in the opfs and as I refresh you'll notice that there's a temp file",
    "start": "1473080",
    "end": "1479080"
  },
  {
    "text": "being created as I you know earlier showed uh there's a temp file every time I'm I'm appending to the file a new temp",
    "start": "1479080",
    "end": "1486200"
  },
  {
    "text": "file is created every time the right is uh you know flushed to the disk that",
    "start": "1486200",
    "end": "1491360"
  },
  {
    "text": "temp file is created that's why it's kind of getting a bit slow so yeah I'll close this",
    "start": "1491360",
    "end": "1498919"
  },
  {
    "text": "and it's still taking a bit of time to write 5,000 rows of data in the meanwhile I can show you how the code",
    "start": "1498919",
    "end": "1506039"
  },
  {
    "text": "looks like so I'll close this file I'll close this",
    "start": "1506039",
    "end": "1514120"
  },
  {
    "text": "file yeah and let me just yeah so",
    "start": "1514120",
    "end": "1520360"
  },
  {
    "text": "uh yeah uh just ignore all of the kind of code just focus on this one uh this is the main function where I'm appending",
    "start": "1520360",
    "end": "1526840"
  },
  {
    "text": "the data uh to to uh the file and in this one what I'm doing is I'm creating a writeable stream as I showcased",
    "start": "1526840",
    "end": "1533520"
  },
  {
    "text": "earlier here I create uh the writeable stream and then I'm figuring out like what's the current uh position wherein I",
    "start": "1533520",
    "end": "1540640"
  },
  {
    "text": "want to write to the file and then I write to that particular position so this is where I write to that particular",
    "start": "1540640",
    "end": "1547159"
  },
  {
    "text": "position and I close the stream so that's when the temp file gets uh deleted and the actual stuff is written",
    "start": "1547159",
    "end": "1553600"
  },
  {
    "text": "to the main file yeah uh I think uh The Benchmark should be done",
    "start": "1553600",
    "end": "1558880"
  },
  {
    "text": "yeah so as you can see uh you know uh I've tried to create a pretty graph uh",
    "start": "1558880",
    "end": "1564000"
  },
  {
    "text": "so let's compare it with uh the syn Crites so as you can see for 5,000 records uh 5,000 rows it has taken",
    "start": "1564000",
    "end": "1570480"
  },
  {
    "text": "around a minute now let's try the same thing with Sync",
    "start": "1570480",
    "end": "1575600"
  },
  {
    "text": "API so it's comparable for 10 rows it's much faster for 100 it's much much",
    "start": "1575600",
    "end": "1582039"
  },
  {
    "text": "faster 4,000 and I think it should be just about finished by now yeah so it's like",
    "start": "1582039",
    "end": "1587159"
  },
  {
    "text": "much faster uh uh and there's like uh you know a huge exponential performance",
    "start": "1587159",
    "end": "1592440"
  },
  {
    "text": "gain as the file size increases because it is not loading the file in memory uh it is not creating a temp file it is",
    "start": "1592440",
    "end": "1598880"
  },
  {
    "text": "just directly writing to the file uh at whatever the current position is",
    "start": "1598880",
    "end": "1604600"
  },
  {
    "text": "so and if I were to show you a bit of code uh so for those who have not worked",
    "start": "1604600",
    "end": "1611320"
  },
  {
    "text": "with workers uh creating a worker is like really simple so this is how I initialize a worker you just give it uh",
    "start": "1611320",
    "end": "1618399"
  },
  {
    "text": "uh the script and then you just do new worker and that's how you know you can run some process parallely and how do I",
    "start": "1618399",
    "end": "1626880"
  },
  {
    "text": "send data to it so let's see that as well",
    "start": "1626880",
    "end": "1632799"
  },
  {
    "text": "so so as you can see just give me a second WR sync",
    "start": "1633200",
    "end": "1639039"
  },
  {
    "text": "file yeah so I'm sending the data from this main thread over to the web worker",
    "start": "1639039",
    "end": "1645320"
  },
  {
    "text": "uh using post message so this is the API that's used to communicate between uh main thread and the web worker so you",
    "start": "1645320",
    "end": "1651840"
  },
  {
    "text": "send data uh over the over to the web worker and this is the worker file uh in",
    "start": "1651840",
    "end": "1656880"
  },
  {
    "text": "this uh nothing special just an just a message listener and in that message listener I'm getting a file handle and",
    "start": "1656880",
    "end": "1663440"
  },
  {
    "text": "then I am writing to uh the file this is the Sync API so you'll notice there is no await in here it's not uh an",
    "start": "1663440",
    "end": "1670720"
  },
  {
    "text": "asynchronous API it's a Sync API it blocks the web worker but it doesn't block the main thread and you just flush",
    "start": "1670720",
    "end": "1676799"
  },
  {
    "text": "the changes and it's done yeah uh let's come back uh so yeah",
    "start": "1676799",
    "end": "1683080"
  },
  {
    "text": "that's the graph okay yeah uh so this is the same graph",
    "start": "1683080",
    "end": "1690440"
  },
  {
    "text": "that I was showing uh earlier so when you uh are using the AP opfs async API",
    "start": "1690440",
    "end": "1697960"
  },
  {
    "text": "you know stream is closed after every write it creates a temp file much slower",
    "start": "1697960",
    "end": "1703240"
  },
  {
    "text": "uh but when you're using a web worker there is no temp file you can directly append to the file and gain exponential",
    "start": "1703240",
    "end": "1709480"
  },
  {
    "text": "performance uh benefits out of it cool uh so uh there is uh you might",
    "start": "1709480",
    "end": "1718399"
  },
  {
    "text": "be thinking that you know why even bother with async API then so async API is like really good for working with",
    "start": "1718399",
    "end": "1724760"
  },
  {
    "text": "small files because you don't have to have that overhead of workers you just directly start out within your main",
    "start": "1724760",
    "end": "1730840"
  },
  {
    "text": "application and you can work with smaller files only when you want to work with larger files wherein you want to have a stream that's when you kind of",
    "start": "1730840",
    "end": "1737600"
  },
  {
    "text": "tap into the power of web workers and the Sync API cool uh so let's see how it compares",
    "start": "1737600",
    "end": "1746399"
  },
  {
    "text": "to some of the other browser storages uh so we have local storage session storage",
    "start": "1746399",
    "end": "1751440"
  },
  {
    "text": "uh we have cache API on browser uh index DB and then we have opfs so uh what's",
    "start": "1751440",
    "end": "1758120"
  },
  {
    "text": "the storage limit for local storage session storage it's like at most 10 MBS 5 MB each and but for cache API index TV",
    "start": "1758120",
    "end": "1766799"
  },
  {
    "text": "opfs they kind of use the same uh Kota for their storages in Chrome you can use",
    "start": "1766799",
    "end": "1773240"
  },
  {
    "text": "uh kind of 60% of the hard drive space available per origin and Firefox has a",
    "start": "1773240",
    "end": "1778399"
  },
  {
    "text": "different limits it it's 10% Safari has a different limit it's 20% uh the next one is persistence like",
    "start": "1778399",
    "end": "1786279"
  },
  {
    "text": "what I mean by persistence here is that in case uh you know browser is running out of storage uh would the browser",
    "start": "1786279",
    "end": "1793600"
  },
  {
    "text": "automatically delete your data uh in case of local storage it wouldn't you have to EXP explicitly delete the data",
    "start": "1793600",
    "end": "1799440"
  },
  {
    "text": "in case of session storage yes it would automatically delete the data when the session closes uh in case of all other",
    "start": "1799440",
    "end": "1806640"
  },
  {
    "text": "three storages cache API or indextv or opfs you have to explicitly request for",
    "start": "1806640",
    "end": "1812760"
  },
  {
    "text": "persistent storage uh with this uh function and when you do that uh kind of",
    "start": "1812760",
    "end": "1819760"
  },
  {
    "text": "uh for Firefox specifically the limits change for everything else it Remains the Same but for Firefox specifically uh",
    "start": "1819760",
    "end": "1827120"
  },
  {
    "text": "it you know sorry uh yeah for Firefox specifically it increases the limit to 50% of hard",
    "start": "1827120",
    "end": "1834760"
  },
  {
    "text": "drive uh okay so some other uh comparison points so what kind of API is",
    "start": "1834760",
    "end": "1842760"
  },
  {
    "text": "there uh for local storage session storage it's a Sync API even on the main thread it blocks the main thread uh but",
    "start": "1842760",
    "end": "1849000"
  },
  {
    "text": "because you know on local storage and session storage you work with smaller uh data set you you generally use it for",
    "start": "1849000",
    "end": "1854960"
  },
  {
    "text": "key value pays so it's not really a performance hit uh in case of cache API it's async index",
    "start": "1854960",
    "end": "1861480"
  },
  {
    "text": "DB it's an async API opfs give you gives you options of async and Sync API both",
    "start": "1861480",
    "end": "1868200"
  },
  {
    "text": "like I showed earlier uh where can you use this uh like can you use it in a in a worker for local and session storage",
    "start": "1868200",
    "end": "1874399"
  },
  {
    "text": "you cannot use it in a worker for cache API and index TB you can use it in both uh for opfs I might be wrong in this one",
    "start": "1874399",
    "end": "1881799"
  },
  {
    "text": "uh but as far as I have searched uh it's only available in the main thread and web worker not in service worker but I",
    "start": "1881799",
    "end": "1888039"
  },
  {
    "text": "might be wrong with that uh and what kind of data would you store on these",
    "start": "1888039",
    "end": "1894039"
  },
  {
    "text": "storages local storage session storage you generally use uh to store strings or",
    "start": "1894039",
    "end": "1899559"
  },
  {
    "text": "key value pairs for cache API you know you generally use it in service workers",
    "start": "1899559",
    "end": "1904679"
  },
  {
    "text": "uh to Cache uh a fetch request response for index TV you might use it uh to",
    "start": "1904679",
    "end": "1911159"
  },
  {
    "text": "store some structured data and opfs is like file based you can store anything and some of the use cases for these",
    "start": "1911159",
    "end": "1918360"
  },
  {
    "text": "storages would be that for local storage and session storage you will use it to store your app state for example there's",
    "start": "1918360",
    "end": "1925240"
  },
  {
    "text": "a filter on your web application and you want to purchase it uh for the next session you use it on uh you use local",
    "start": "1925240",
    "end": "1931320"
  },
  {
    "text": "storage uh to store all those filters uh that sorting uh State and then for uh",
    "start": "1931320",
    "end": "1938519"
  },
  {
    "text": "cache API uh you would use it like I mentioned earlier uh you know cach the static resources cache the uh you know",
    "start": "1938519",
    "end": "1945320"
  },
  {
    "text": "fetch response to make kind of an offline application uh index TB uh you know a use case for",
    "start": "1945320",
    "end": "1951240"
  },
  {
    "text": "index TB might be you you creating a messaging application and you want to store like the recent 100 messages so",
    "start": "1951240",
    "end": "1958320"
  },
  {
    "text": "that when a user Scrolls up they don't have to make you know Network calls and that kind of data can be stored in index",
    "start": "1958320",
    "end": "1963880"
  },
  {
    "text": "TV uh for opfs uh it's it's like really good for streams uh you know I showed an",
    "start": "1963880",
    "end": "1970399"
  },
  {
    "text": "example for video uh so you can uh use it to store that you can use it for logs",
    "start": "1970399",
    "end": "1975880"
  },
  {
    "text": "so logs can get pretty huge like you know some of the applications when they start logging in uh they can get into",
    "start": "1975880",
    "end": "1981519"
  },
  {
    "text": "GBS and uh opfs would be a really good uh technology for that and because opfs",
    "start": "1981519",
    "end": "1988159"
  },
  {
    "text": "is a file system you can build on top of it so vasm site it's a site port for web",
    "start": "1988159",
    "end": "1995679"
  },
  {
    "text": "uh you know for uh for vasm which uses opfs so people are building libraries on",
    "start": "1995679",
    "end": "2001480"
  },
  {
    "text": "top of opfs as well okay uh uh let's talk about uh you",
    "start": "2001480",
    "end": "2009279"
  },
  {
    "text": "know some of the companies who are already using opfs one of them is Photoshop uh",
    "start": "2009279",
    "end": "2017039"
  },
  {
    "text": "so Photoshop uses PSD format to store uh its uh kind of the working",
    "start": "2017039",
    "end": "2023000"
  },
  {
    "text": "format for its files and it gets pretty huge it can go into like GBS and it like",
    "start": "2023000",
    "end": "2028399"
  },
  {
    "text": "it grows exponentially as you do more and more operations and they were running into problems that uh they were",
    "start": "2028399",
    "end": "2033840"
  },
  {
    "text": "not able to Port that application the desktop application to web because they was not a good enough uh performant file",
    "start": "2033840",
    "end": "2040639"
  },
  {
    "text": "system for web so that's uh you know uh this they tried opfs and I'll actually",
    "start": "2040639",
    "end": "2046360"
  },
  {
    "text": "show it to you uh because that's the good thing about web everything is open uh you can see you can just open up the",
    "start": "2046360",
    "end": "2053040"
  },
  {
    "text": "dev tools and you can try to see you know what's how it's working so let's see uh uh let's let me open up Photoshop",
    "start": "2053040",
    "end": "2062079"
  },
  {
    "text": "let me zoom in a bit okay yeah and I'll open up the dev",
    "start": "2068839",
    "end": "2077078"
  },
  {
    "text": "tools and I'll open up the opfs directory you can see that they're already like even when I just loaded the",
    "start": "2077919",
    "end": "2084480"
  },
  {
    "text": "web page they have already created a lot of files and sorry I think I clicked on",
    "start": "2084480",
    "end": "2089638"
  },
  {
    "text": "something accidentally yeah so I opened one of",
    "start": "2089639",
    "end": "2096919"
  },
  {
    "text": "their demos and it's still loading but you'll notice that uh you know by the time the file is loaded uh they have",
    "start": "2096919",
    "end": "2104160"
  },
  {
    "text": "created a kind of cache uh to fasten the performance and as and when I zoom in or",
    "start": "2104160",
    "end": "2110119"
  },
  {
    "text": "like do operations over this you'll notice that the file size is increasing they are like doing a lot of operations",
    "start": "2110119",
    "end": "2115680"
  },
  {
    "text": "so that uh you know they don't have to talk to the server uh to do these all all of these operations they're doing it",
    "start": "2115680",
    "end": "2121440"
  },
  {
    "text": "uh right on your system and uh they mention on their blog that they're doing",
    "start": "2121440",
    "end": "2127240"
  },
  {
    "text": "this because their files can sometimes get larger than what's you know what the user memory is and if you don't have",
    "start": "2127240",
    "end": "2134400"
  },
  {
    "text": "enough user memory this system might crash and the application might not be usable so that's how they use opfs to",
    "start": "2134400",
    "end": "2141400"
  },
  {
    "text": "create a kind of uh you know uh cache for using this functionality over",
    "start": "2141400",
    "end": "2148838"
  },
  {
    "text": "web okay uh notion already uses opfs as well so they were earlier using index TB",
    "start": "2149680",
    "end": "2157200"
  },
  {
    "text": "uh for caching uh while navigation but they switched over to opfs and they saw around 20% Improvement in their",
    "start": "2157200",
    "end": "2164480"
  },
  {
    "text": "navigation times and uh Autodesk also uses uh you know on their online model",
    "start": "2164480",
    "end": "2171920"
  },
  {
    "text": "viewer uh they use opfs and they mentioned that they gained around 2 to 7x of performance gains uh just by uh",
    "start": "2171920",
    "end": "2180400"
  },
  {
    "text": "using opfs so yeah uh these are some like real world examples other companies might be",
    "start": "2180400",
    "end": "2185680"
  },
  {
    "text": "using it uh I showed that bz is using it so yeah a lot of uh uh real world",
    "start": "2185680",
    "end": "2190880"
  },
  {
    "text": "companies are using it right now okay uh so we talked about apis but",
    "start": "2190880",
    "end": "2197760"
  },
  {
    "text": "what's the browser support so uh chromium as us as usual you know started",
    "start": "2197760",
    "end": "2203319"
  },
  {
    "text": "supporting this much earlier than others it started supporting the browser storage spec in October 2020 but at that",
    "start": "2203319",
    "end": "2211359"
  },
  {
    "text": "time it didn't support the web worker API so uh interestingly that the web",
    "start": "2211359",
    "end": "2216599"
  },
  {
    "text": "worker API came in in Safari first before Chrome so that that was surprising to me because Chrome is",
    "start": "2216599",
    "end": "2221720"
  },
  {
    "text": "usually the one who is ahead in this API race but Safari shipped uh the opfs spec",
    "start": "2221720",
    "end": "2228240"
  },
  {
    "text": "and the higher performance uh in place rights uh with vorker in December 2021",
    "start": "2228240",
    "end": "2234240"
  },
  {
    "text": "then in 2022 chromium started supporting the uh in place rights and then in March",
    "start": "2234240",
    "end": "2240560"
  },
  {
    "text": "2023 as usual Firefox has last to the race and it started supporting the opfs",
    "start": "2240560",
    "end": "2246960"
  },
  {
    "text": "and higher performance in place right but yeah essentially all of the major browsers right now do support uh",
    "start": "2246960",
    "end": "2255359"
  },
  {
    "text": "opfs uh so this was the current state of opfs and the file standard uh but what's",
    "start": "2255359",
    "end": "2262000"
  },
  {
    "text": "next so uh this opfs as I mentioned is sandboxed all of the in place rights uh",
    "start": "2262000",
    "end": "2269280"
  },
  {
    "text": "functionality that we saw earlier that's kind of limited to the opfs within the sandbox file system but users uh you",
    "start": "2269280",
    "end": "2276480"
  },
  {
    "text": "know developers have been demanding on the community group that why not have this functionality for user visible file",
    "start": "2276480",
    "end": "2282520"
  },
  {
    "text": "system as well for example you know when you work with desktop applications uh you're not restricted to a Sandbox file",
    "start": "2282520",
    "end": "2288680"
  },
  {
    "text": "system you can you know uh for example when you open up Photoshop you can select a file and uh it gets access to",
    "start": "2288680",
    "end": "2295920"
  },
  {
    "text": "that file on your D drive or your C drive or like on Mac on that main file system and you're able to work with it",
    "start": "2295920",
    "end": "2302079"
  },
  {
    "text": "that's not possible right now in web so that's what the users are demanding let's see how it goes it's just a",
    "start": "2302079",
    "end": "2307480"
  },
  {
    "text": "proposal right now uh one other thing which is a bit which is a big problem is that there is not consistent browser",
    "start": "2307480",
    "end": "2314440"
  },
  {
    "text": "support for all these apis uh for uh for example in terms of vs code Dev uh uh",
    "start": "2314440",
    "end": "2322680"
  },
  {
    "text": "Has anyone used vscode dodev it's like the online version of vscode oh some people cool uh so I'll show you right",
    "start": "2322680",
    "end": "2330240"
  },
  {
    "text": "now what I mean by inconsistent browser support so let me fire up vscode dodev",
    "start": "2330240",
    "end": "2337960"
  },
  {
    "text": "I'll just create a file let's say I create a new file and I write some text oh",
    "start": "2337960",
    "end": "2346240"
  },
  {
    "text": "sorry yeah I write some text over it let's say I write hello world and I I",
    "start": "2346240",
    "end": "2351280"
  },
  {
    "text": "press control s or command s for mac and I try to save it so it asks me that",
    "start": "2351280",
    "end": "2357000"
  },
  {
    "text": "where I want to write it now that I've given the access uh it wouldn't ask me",
    "start": "2357000",
    "end": "2362079"
  },
  {
    "text": "again uh so if I you know some more text",
    "start": "2362079",
    "end": "2367880"
  },
  {
    "text": "yeah some I write some more text and I I press control s or command s it would",
    "start": "2367920",
    "end": "2373400"
  },
  {
    "text": "just save it because it already has access to that file uh but interestingly this doesn't work in Firefox so if I",
    "start": "2373400",
    "end": "2380119"
  },
  {
    "text": "were to open up Firefox just give me a",
    "start": "2380119",
    "end": "2385160"
  },
  {
    "text": "second so let's try the same",
    "start": "2385160",
    "end": "2389400"
  },
  {
    "text": "thing yeah so yeah uh there's a file that I've tried to create I uh write something on",
    "start": "2394119",
    "end": "2401280"
  },
  {
    "text": "it and when I press contr s or command s it's downloaded that's that's not a good",
    "start": "2401280",
    "end": "2408760"
  },
  {
    "text": "uh user experience uh it's not asking me where I want to save it or like it's not showing me anything it's just directly",
    "start": "2408760",
    "end": "2414400"
  },
  {
    "text": "downloading it and the Firefox still doesn't have access to that file if I write something more uh if I write some",
    "start": "2414400",
    "end": "2421200"
  },
  {
    "text": "more text over here yeah so I write something more and I press controls or",
    "start": "2421200",
    "end": "2426440"
  },
  {
    "text": "command s again it would Again download it like that's that's really really bad uh and it's",
    "start": "2426440",
    "end": "2432480"
  },
  {
    "text": "because Firefox doesn't support the apis right now uh for some of the newer file",
    "start": "2432480",
    "end": "2437680"
  },
  {
    "text": "standards so yeah uh that's one thing the users have been kind of developers have been demanding that we want",
    "start": "2437680",
    "end": "2443480"
  },
  {
    "text": "consistent browser support for all these",
    "start": "2443480",
    "end": "2448040"
  },
  {
    "text": "apis okay uh okay so a recap of what we covered uh so we covered what is opfs",
    "start": "2448680",
    "end": "2454440"
  },
  {
    "text": "it's uh file system private to An Origin and some of the major benefits are it's",
    "start": "2454440",
    "end": "2460280"
  },
  {
    "text": "sandboxed uh it gives you flexibility to work with the file system and uh there",
    "start": "2460280",
    "end": "2466760"
  },
  {
    "text": "is less user interaction in comparison to some of the other apis and it has you know huge performance gains there are",
    "start": "2466760",
    "end": "2474040"
  },
  {
    "text": "two ways to use opfs one is using the main thread other is using the web",
    "start": "2474040",
    "end": "2479319"
  },
  {
    "text": "worker then we uh then we saw a demo of using opfs when you're trying to record",
    "start": "2479319",
    "end": "2486720"
  },
  {
    "text": "a video stream and I showed how uh byy was the one which inspired this uh kind",
    "start": "2486720",
    "end": "2493440"
  },
  {
    "text": "of scenario wherein I encountered this scenario and it it led me to uh find the",
    "start": "2493440",
    "end": "2499400"
  },
  {
    "text": "solution then we talked about logs uh in which we compared performance of async",
    "start": "2499400",
    "end": "2504560"
  },
  {
    "text": "API and the Sync API and we also talked about how opfs",
    "start": "2504560",
    "end": "2509680"
  },
  {
    "text": "compares to some of the other web storages like local storage session storage and",
    "start": "2509680",
    "end": "2514880"
  },
  {
    "text": "indextv uh we saw how Autodesk uh Photoshop and notion are using opfs to",
    "start": "2514880",
    "end": "2521680"
  },
  {
    "text": "kind of gain uh free performance gains and we talked about uh you know uh",
    "start": "2521680",
    "end": "2528280"
  },
  {
    "text": "that most of the major browsers uh do actually support uh these apis and then",
    "start": "2528280",
    "end": "2534480"
  },
  {
    "text": "we talked about how you know some of the requests from developer Community uh",
    "start": "2534480",
    "end": "2539800"
  },
  {
    "text": "they drive where the file standard is going okay uh so we covered all that uh",
    "start": "2539800",
    "end": "2545200"
  },
  {
    "text": "but now uh I guess uh none of you had heard of opfs before",
    "start": "2545200",
    "end": "2550720"
  },
  {
    "text": "but now when you think of uh opfs uh what word comes to your mind let me just",
    "start": "2550720",
    "end": "2556640"
  },
  {
    "text": "open up that uh that uh link again just I would request everyone to take out your phone",
    "start": "2556640",
    "end": "2562960"
  },
  {
    "text": "again and yeah yeah you can I mean if you",
    "start": "2562960",
    "end": "2568079"
  },
  {
    "text": "already have it open that's good if you don't have it you can just scan it again",
    "start": "2568079",
    "end": "2574440"
  },
  {
    "text": "cool uh I'll move ahead so just I'll move over to the next",
    "start": "2577480",
    "end": "2583640"
  },
  {
    "text": "question yeah uh just write a word that comes to your mind you know what do you think about opfs",
    "start": "2583640",
    "end": "2591000"
  },
  {
    "text": "now okay flexibility limited that's interesting uh you can also like uh some",
    "start": "2595760",
    "end": "2602319"
  },
  {
    "text": "of the other responses dodgy",
    "start": "2602319",
    "end": "2607920"
  },
  {
    "text": "that's interesting useful custom cash yeah that's",
    "start": "2607920",
    "end": "2613119"
  },
  {
    "text": "interesting potential okay so I see that you know",
    "start": "2613119",
    "end": "2618160"
  },
  {
    "text": "some of some of the folks have liked useful so that's why it's kind of bigger than some of the other",
    "start": "2618160",
    "end": "2625680"
  },
  {
    "text": "responses yeah that's cool uh that's nice yeah cool uh let's move",
    "start": "2626880",
    "end": "2637720"
  },
  {
    "text": "ahead okay I'm still getting responses yeah I'll wait a few more uh seconds",
    "start": "2637720",
    "end": "2644839"
  },
  {
    "text": "then cool I think we uh yeah I think that was it uh so let's move back and",
    "start": "2645079",
    "end": "2652680"
  },
  {
    "text": "yes uh I'm open to questions now that was for the presentation any questions",
    "start": "2652680",
    "end": "2657920"
  },
  {
    "text": "uh I'm sure that people would have questions because this was a topic that nobody had heard before yeah go ahead",
    "start": "2657920",
    "end": "2665559"
  },
  {
    "text": "the s that user wants to get of that so if a user wants to do that probably you",
    "start": "2665559",
    "end": "2673040"
  },
  {
    "text": "know you see on top of for example if I you know you you notice this uh this on",
    "start": "2673040",
    "end": "2679760"
  },
  {
    "text": "the top generally if you want to clear out side data you can you know clear out your side data from here but if you want",
    "start": "2679760",
    "end": "2685920"
  },
  {
    "text": "uh you can also uh build uh you know a button into your application that can let user delete all that data",
    "start": "2685920",
    "end": "2694720"
  },
  {
    "text": "yeah that's the third part no no the standard dep tools do not",
    "start": "2705000",
    "end": "2710079"
  },
  {
    "text": "have support to show that OPF is right now it's in the works in the community it's one of the major asks but it's not",
    "start": "2710079",
    "end": "2716200"
  },
  {
    "text": "there yet yeah the",
    "start": "2716200",
    "end": "2723760"
  },
  {
    "text": "oh",
    "start": "2729960",
    "end": "2732160"
  },
  {
    "text": "physical oh uh yeah uh so like I",
    "start": "2737640",
    "end": "2742960"
  },
  {
    "text": "mentioned before it's a Sandbox file system so you cannot map it uh to some Drive uh on your user visible file",
    "start": "2742960",
    "end": "2748559"
  },
  {
    "text": "system like even if you were to figure out where where these files are stored on opfs Chrome might change it because",
    "start": "2748559",
    "end": "2754800"
  },
  {
    "text": "it's an internal detail even if you know it now tomorrow it might be a different place so right now you cannot do it but",
    "start": "2754800",
    "end": "2761800"
  },
  {
    "text": "users have been asking that you know uh a Sandbox file system is kind of limited uh you would want uh you know a free",
    "start": "2761800",
    "end": "2768400"
  },
  {
    "text": "flow of data within that limited file system and the user visible file system so that's a request in the community but",
    "start": "2768400",
    "end": "2774480"
  },
  {
    "text": "it's not there yet yeah files it creates is there for",
    "start": "2774480",
    "end": "2782640"
  },
  {
    "text": "you yeah yeah like I uh in the bz as well uh those files were in uh the opfs",
    "start": "2782640",
    "end": "2789800"
  },
  {
    "text": "but uh you have to build that functionality in your application it gives you the apis but you have to build",
    "start": "2789800",
    "end": "2795319"
  },
  {
    "text": "that functionality to enable users to download that just in Casa uh you know just as I was showing in case of BZ so",
    "start": "2795319",
    "end": "2801319"
  },
  {
    "text": "the user can download the recordings",
    "start": "2801319",
    "end": "2806319"
  },
  {
    "text": "yeah yeah so uh the soundbox is defined by origin uh so",
    "start": "2812240",
    "end": "2817359"
  },
  {
    "text": "yeah so even if you know multiple applications so for example if you if opfs is working on google.com if you",
    "start": "2817359",
    "end": "2823240"
  },
  {
    "text": "open multiple tabs yes they can access the same file system uh parallely so your application has to handle that",
    "start": "2823240",
    "end": "2829359"
  },
  {
    "text": "because you're using multiple tabs to open the same file system but if it's different tabs with different Origins",
    "start": "2829359",
    "end": "2835240"
  },
  {
    "text": "they wouldn't have access to other file systems yeah",
    "start": "2835240",
    "end": "2840599"
  },
  {
    "text": "yeah browser decides how much space can I",
    "start": "2841720",
    "end": "2848839"
  },
  {
    "text": "yeah yeah",
    "start": "2852800",
    "end": "2855640"
  },
  {
    "text": "that's yeah yeah that's that's a really good question and I have actually",
    "start": "2862880",
    "end": "2868119"
  },
  {
    "text": "thought about it in case of BZ as well because user might as well forget about it and it gets it gets into GBS uh so",
    "start": "2868119",
    "end": "2875240"
  },
  {
    "text": "Chrome provides you with an AP AP a quota API wherein you can determine at certain you know points that if you're",
    "start": "2875240",
    "end": "2881880"
  },
  {
    "text": "exceeding the quota or like where you are in that quota so uh like I mentioned earlier in one of the slides Chrome lets",
    "start": "2881880",
    "end": "2888400"
  },
  {
    "text": "you use 60% of the hard drive space if you go over 60% try to go over 60% it",
    "start": "2888400",
    "end": "2894200"
  },
  {
    "text": "would error out it would throw an error user would not be able to fill up that uh you know go over that but still if",
    "start": "2894200",
    "end": "2900200"
  },
  {
    "text": "you want to build you know mechanisms so that user doesn't do that you can use the Kota API to detect where you know",
    "start": "2900200",
    "end": "2907200"
  },
  {
    "text": "user is",
    "start": "2907200",
    "end": "2910920"
  },
  {
    "text": "yeah sorry I didn't get the",
    "start": "2922119",
    "end": "2925960"
  },
  {
    "text": "question yeah okay and you realiz that",
    "start": "2927880",
    "end": "2937440"
  },
  {
    "text": "yeah how do you how can you understand that and how you can clear oh yeah yeah",
    "start": "2937559",
    "end": "2944640"
  },
  {
    "text": "I I I don't think there is a native way I guess uh to determine that probably uh",
    "start": "2944640",
    "end": "2950160"
  },
  {
    "text": "you know some of the uh I don't know I don't use cleaners right now but if you",
    "start": "2950160",
    "end": "2956119"
  },
  {
    "text": "know there was an application earlier C cleaner which let you you know show that uh uh how much space browser is taking",
    "start": "2956119",
    "end": "2963359"
  },
  {
    "text": "so you might see that but that's that's an interesting uh ask I I would say uh I'm not sure if there is a way right now",
    "start": "2963359",
    "end": "2969839"
  },
  {
    "text": "to see how much of the data is being used I think I can uh let's say I can try that uh let's open up the dev tools",
    "start": "2969839",
    "end": "2975960"
  },
  {
    "text": "because it I think it shows in the application section yeah I think it shows here so if I were to using some of",
    "start": "2975960",
    "end": "2982319"
  },
  {
    "text": "the data uh let's try that for photoshop.com because it was there so if",
    "start": "2982319",
    "end": "2987559"
  },
  {
    "text": "I were to open up Firefox uh this is where is applications yeah yeah so you can see here it's using",
    "start": "2987559",
    "end": "2995240"
  },
  {
    "text": "4GB it's using 4gbs already yeah so you can see that over",
    "start": "2995240",
    "end": "3001559"
  },
  {
    "text": "here but it's kind of hidden it's for the developer not for the",
    "start": "3001559",
    "end": "3006280"
  },
  {
    "text": "user yeah that yeah that's uh I I'm assuming because I'm not sure",
    "start": "3008760",
    "end": "3015200"
  },
  {
    "text": "about this but this includes opfs and might be including some other things as well yeah but yeah that was an",
    "start": "3015200",
    "end": "3021200"
  },
  {
    "text": "interesting question thank you I learned something new as well yeah you got two",
    "start": "3021200",
    "end": "3026280"
  },
  {
    "text": "tabs access the same file yeah issue that that might uh so",
    "start": "3026280",
    "end": "3032760"
  },
  {
    "text": "generally if you have a file handle open for a file and other tab tries to access it it would for the second time when you",
    "start": "3032760",
    "end": "3039000"
  },
  {
    "text": "try it it would throw an error that the file is already open that's how generally file systems work uh like in",
    "start": "3039000",
    "end": "3044400"
  },
  {
    "text": "case of nodejs as well if you try to open a stream to an already opened stream it would throw error but yeah",
    "start": "3044400",
    "end": "3049880"
  },
  {
    "text": "there is uh a spec of you know I was talking about what's next and that is",
    "start": "3049880",
    "end": "3055079"
  },
  {
    "text": "also something let me me just close this so if I go back yeah uh this is also",
    "start": "3055079",
    "end": "3060680"
  },
  {
    "text": "something that has been kind of a popular request uh that people users want to read the same file uh through",
    "start": "3060680",
    "end": "3068480"
  },
  {
    "text": "multiple tabs yeah that's a request as well yeah",
    "start": "3068480",
    "end": "3074960"
  },
  {
    "text": "yeah oh sorry change I actually didn't get the",
    "start": "3076079",
    "end": "3083319"
  },
  {
    "text": "question can you repeat that sorry allow to a folder so anything get put in there",
    "start": "3083319",
    "end": "3088680"
  },
  {
    "text": "or FES in there so say you got theend files",
    "start": "3088680",
    "end": "3096000"
  },
  {
    "text": "got does support uh the transcoding no support like watching files watching",
    "start": "3098960",
    "end": "3105960"
  },
  {
    "text": "files uh no it doesn't support that right now yeah no it doesn't there's not a vulture spec like you can watch it but",
    "start": "3105960",
    "end": "3111799"
  },
  {
    "text": "I think that's a good use case people would might want to have it for example in case of loggers as well that what's",
    "start": "3111799",
    "end": "3117599"
  },
  {
    "text": "being written yeah yeah uh more questions please yeah",
    "start": "3117599",
    "end": "3127359"
  },
  {
    "text": "out us yeah",
    "start": "3127960",
    "end": "3135520"
  },
  {
    "text": "delete delete yeah uh in case it is not uh the",
    "start": "3135520",
    "end": "3142480"
  },
  {
    "text": "if if you have not requested for persistent storage uh I don't know the algorithm for for you know how browsers",
    "start": "3142480",
    "end": "3147720"
  },
  {
    "text": "handle it but it might delete uh you know whatever it feels like uh I don't think there's a public uh you know",
    "start": "3147720",
    "end": "3153040"
  },
  {
    "text": "declaration from browsers that it would delete the first file or the last file in the system like I'm not sure but it",
    "start": "3153040",
    "end": "3159240"
  },
  {
    "text": "would delete something to make space for what you're trying to write to uh in case it is not persistent",
    "start": "3159240",
    "end": "3166280"
  },
  {
    "text": "yeah cool uh any more questions",
    "start": "3166280",
    "end": "3171319"
  },
  {
    "text": "please nopes uh thank you then uh thank you for joining the talk have a great",
    "start": "3171319",
    "end": "3177760"
  },
  {
    "text": "day [Applause]",
    "start": "3177760",
    "end": "3185940"
  }
]