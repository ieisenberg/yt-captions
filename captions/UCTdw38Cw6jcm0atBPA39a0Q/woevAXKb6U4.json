[
  {
    "text": "okay so this is on I think we might as well get started how are you today have",
    "start": "4440",
    "end": "10860"
  },
  {
    "text": "you enjoyed the coffee and the breakfast and the thingies out there how about the Keynote",
    "start": "10860",
    "end": "18600"
  },
  {
    "text": "it was very mind-opening at least for me",
    "start": "18600",
    "end": "23359"
  },
  {
    "text": "I think we're kinda ready cool uh thank you for being here in such a large",
    "start": "25560",
    "end": "31980"
  },
  {
    "text": "number uh today we're going to talk about um well how to deep dive or to",
    "start": "31980",
    "end": "37280"
  },
  {
    "text": "embrace.net in grpc okay so um in.net so",
    "start": "37280",
    "end": "42899"
  },
  {
    "text": "I assume all of you are like dot net developers or you have to deal with.net",
    "start": "42899",
    "end": "49140"
  },
  {
    "text": "code in your work life Okay cool so who am I first my name is Irina dominte my",
    "start": "49140",
    "end": "56340"
  },
  {
    "text": "married name you'll find me as irina's Corto on uh on social media I'm from Romania I'm an independent consultant in",
    "start": "56340",
    "end": "64018"
  },
  {
    "text": "software architect it's always a love with in love with.net Microsoft MVP I",
    "start": "64019",
    "end": "71040"
  },
  {
    "text": "organized the user group I teach.net and I blog or you soon I'm not blogging as",
    "start": "71040",
    "end": "77460"
  },
  {
    "text": "much as I would I have at the last numbering I had about 100 drafts",
    "start": "77460",
    "end": "83659"
  },
  {
    "text": "articles wannabe articles but they just sit there",
    "start": "83659",
    "end": "88680"
  },
  {
    "text": "so uh if we're gonna talk about microservices or fancy shiny new and",
    "start": "88680",
    "end": "95579"
  },
  {
    "text": "useful architectures where we might as well talk about where we",
    "start": "95579",
    "end": "101340"
  },
  {
    "text": "first started with the monolith right so um I must ask you who here loves",
    "start": "101340",
    "end": "108780"
  },
  {
    "text": "monolith or used to love monoliths I'm Gilda's charge yeah and why is that",
    "start": "108780",
    "end": "116040"
  },
  {
    "text": "well because for the developer working with a monolith was very easy life",
    "start": "116040",
    "end": "122399"
  },
  {
    "text": "when you had the monolith you had pretty pretty much every thing in your code",
    "start": "122399",
    "end": "127979"
  },
  {
    "text": "base in one place and if you needed something you could have gone and instantiated that something use that and",
    "start": "127979",
    "end": "136080"
  },
  {
    "text": "everything was there and one uh big plus over the monoliths",
    "start": "136080",
    "end": "141360"
  },
  {
    "text": "is that nowadays is not valid anymore but back in the days 10 years ago when",
    "start": "141360",
    "end": "148319"
  },
  {
    "text": "you had such a big chunk of a solution and you built you wanted to build the thing you might have as well built the",
    "start": "148319",
    "end": "155220"
  },
  {
    "text": "solution and go outside grab a coffee stay with your colleagues and so on it was easy because the build time took",
    "start": "155220",
    "end": "162480"
  },
  {
    "text": "that long so um one thing with the monolith was that it's very hard to scale such thing",
    "start": "162480",
    "end": "169739"
  },
  {
    "text": "without losing a lot of money you had to scale to monolith the entire thing like put it in and create two instances of it",
    "start": "169739",
    "end": "177780"
  },
  {
    "text": "and usually the systems have parts that are not that used anymore or uh are less",
    "start": "177780",
    "end": "186060"
  },
  {
    "text": "used than others and that's the deal with microservices it allows you to scale small parts of your app or your",
    "start": "186060",
    "end": "192780"
  },
  {
    "text": "system so um it's expensive to work with monoliths",
    "start": "192780",
    "end": "198239"
  },
  {
    "text": "nowadays and now we have to adapt to Modern architectures so when I first started working like 13",
    "start": "198239",
    "end": "205560"
  },
  {
    "text": "years ago I started working with web forms does",
    "start": "205560",
    "end": "210720"
  },
  {
    "text": "anyone here remembers ASB web forms yay it was cool isn't it to have components",
    "start": "210720",
    "end": "216480"
  },
  {
    "text": "and render that respond to uh different events handlers and so on",
    "start": "216480",
    "end": "221519"
  },
  {
    "text": "nice and after that another programmatic approach appeared SP MVC and it was such",
    "start": "221519",
    "end": "229739"
  },
  {
    "text": "breakthrough like asbnbc was the thing everyone wanted to work with asbnbc it",
    "start": "229739",
    "end": "235860"
  },
  {
    "text": "had a clear separation of things and then things started to move on and",
    "start": "235860",
    "end": "241620"
  },
  {
    "text": "the architecture started to be more uh split like you had a front-end app and",
    "start": "241620",
    "end": "248280"
  },
  {
    "text": "then you had a back end and the back end didn't render uh front-end code anymore",
    "start": "248280",
    "end": "253620"
  },
  {
    "text": "like web forms used to do where espnvc used to do so now you have two parts of",
    "start": "253620",
    "end": "259859"
  },
  {
    "text": "any app to manage you have the client app written in whatever.js we won't",
    "start": "259859",
    "end": "265020"
  },
  {
    "text": "mention that part and the backend API that serves data to the client but we",
    "start": "265020",
    "end": "271320"
  },
  {
    "text": "all know that well the future is distributed right and to save money uh",
    "start": "271320",
    "end": "278580"
  },
  {
    "text": "we kind of need to scale only the parts of our system that are really in need of scaling",
    "start": "278580",
    "end": "284220"
  },
  {
    "text": "and now uh the previous architecture started to become like that we have front-ends that use different",
    "start": "284220",
    "end": "291660"
  },
  {
    "text": "backend apis and basically they're mixing everything together in one app",
    "start": "291660",
    "end": "297060"
  },
  {
    "text": "and then you have some other architectures front-end related but not we won't talk about them",
    "start": "297060",
    "end": "304199"
  },
  {
    "text": "right now so every backend has one database or two databases and then maybe",
    "start": "304199",
    "end": "310259"
  },
  {
    "text": "one of the backends talks Downstream with another backhand like a third-party",
    "start": "310259",
    "end": "315900"
  },
  {
    "text": "apis you need to integrate like server to server with some other API or maybe",
    "start": "315900",
    "end": "321660"
  },
  {
    "text": "your business need has something like this like you need for example to have a",
    "start": "321660",
    "end": "328979"
  },
  {
    "text": "polyglot environment you might have parts that are very suitable uh written to be written in core or maybe node.js",
    "start": "328979",
    "end": "336479"
  },
  {
    "text": "and you need to consume those or maybe you have a.net core or a third-party API",
    "start": "336479",
    "end": "342180"
  },
  {
    "text": "that you do not care in what language is written and you need to mix it all",
    "start": "342180",
    "end": "347520"
  },
  {
    "text": "together and make it work and understand each other and now you might say okay so why do we",
    "start": "347520",
    "end": "354300"
  },
  {
    "text": "need grpc because we already have Json and we already have the common language between everything",
    "start": "354300",
    "end": "359699"
  },
  {
    "text": "so we all say that we Implement rest apis and I'm gonna ask you how many of you",
    "start": "359699",
    "end": "365940"
  },
  {
    "text": "are really implementing rest apis yeah",
    "start": "365940",
    "end": "371820"
  },
  {
    "text": "my hand is down uh because basically what we're most of us doing is HTTP apis",
    "start": "371820",
    "end": "378000"
  },
  {
    "text": "we're implementing apis that respond to date and data to be served over the network to whatever system right",
    "start": "378000",
    "end": "383880"
  },
  {
    "text": "so um that rest for everything or restful apis is not good anymore it has",
    "start": "383880",
    "end": "390720"
  },
  {
    "text": "its own applicability if you want to expose something to the public to the outside world to be consumed but how",
    "start": "390720",
    "end": "396900"
  },
  {
    "text": "about Downstream apis so ABI to API inside your system and",
    "start": "396900",
    "end": "402720"
  },
  {
    "text": "this is pretty much uh the thing that we're going to talk today so now",
    "start": "402720",
    "end": "409080"
  },
  {
    "text": "the client server architecture the most easiest architecture that we know uh",
    "start": "409080",
    "end": "415080"
  },
  {
    "text": "it's based on request response where a client being it maybe a server client in",
    "start": "415080",
    "end": "420840"
  },
  {
    "text": "general it doesn't need to be a front-end app a client can also be an API so when it talks to a server and gets",
    "start": "420840",
    "end": "428460"
  },
  {
    "text": "data from a server it does something under the hood called content negotiation",
    "start": "428460",
    "end": "433639"
  },
  {
    "text": "and that under the hood operation takes care of the format of",
    "start": "433639",
    "end": "440039"
  },
  {
    "text": "the request or you as the developer you need to take care of these things like what's the format of the request is Json",
    "start": "440039",
    "end": "446280"
  },
  {
    "text": "enough or what are the fields that are saying ascending towards that client what is the payload the the client has",
    "start": "446280",
    "end": "453840"
  },
  {
    "text": "enough data how is that data formatted and so on so if a request fails how do you handle",
    "start": "453840",
    "end": "461759"
  },
  {
    "text": "retries do you implement your own thing to handle retries how do you handle error",
    "start": "461759",
    "end": "467819"
  },
  {
    "text": "errors if something fails how do you deal with authentication so",
    "start": "467819",
    "end": "473340"
  },
  {
    "text": "between two System Authentication is to be there so another thing that is not that easy",
    "start": "473340",
    "end": "480479"
  },
  {
    "text": "to deal with in in rest apis is what happens if the model that you send to the consumer where the response changes",
    "start": "480479",
    "end": "488220"
  },
  {
    "text": "you also need to kind of force your consumer to change after your after you right or you need to version your API in",
    "start": "488220",
    "end": "495840"
  },
  {
    "text": "such way that you won't break your consumers now there's a different story if you own the team where you have",
    "start": "495840",
    "end": "503099"
  },
  {
    "text": "access to the team that implements the consumer uh then you can go ahead and say hey",
    "start": "503099",
    "end": "508620"
  },
  {
    "text": "team you need to add this field or to remove this field or to change the data",
    "start": "508620",
    "end": "513779"
  },
  {
    "text": "format of the field but usually uh some apis that are exposed to the outside",
    "start": "513779",
    "end": "519120"
  },
  {
    "text": "world don't know who are their consumers they simply expose their apis and someone or",
    "start": "519120",
    "end": "526320"
  },
  {
    "text": "some system will consume the API think about product companies I don't like GitHub right GitHub is there we use it",
    "start": "526320",
    "end": "533940"
  },
  {
    "text": "every time but pretty much there are a lot of integration with GitHub right so GitHub",
    "start": "533940",
    "end": "540000"
  },
  {
    "text": "cannot go ahead and tell their clients hey you need to change your expectancy from me I am adding this field or I'm",
    "start": "540000",
    "end": "547140"
  },
  {
    "text": "removing this field this is deprecated this is the process that takes time and you can simply cannot call your consumer",
    "start": "547140",
    "end": "553800"
  },
  {
    "text": "hey change yourself I'm gonna change the model I'm responding with so this is difficult but if you also talk let's",
    "start": "553800",
    "end": "562620"
  },
  {
    "text": "think about one thing if you have two different things the teams inside your company that are working on separate",
    "start": "562620",
    "end": "569220"
  },
  {
    "text": "apis there's still a communication between those teams like I'm changing the model you need to change what you're",
    "start": "569220",
    "end": "574740"
  },
  {
    "text": "expecting from me and so on so you have pretty much no Common Ground than to",
    "start": "574740",
    "end": "579899"
  },
  {
    "text": "expect and prevent errors like with forward compatibility or backwards",
    "start": "579899",
    "end": "585060"
  },
  {
    "text": "compatibility so pretty much this is what is wrong with rest besides other",
    "start": "585060",
    "end": "591420"
  },
  {
    "text": "thing that we're we're gonna not talk about uh right now so rest exposing",
    "start": "591420",
    "end": "597060"
  },
  {
    "text": "things over API in Json format usually or XML and so on",
    "start": "597060",
    "end": "602279"
  },
  {
    "text": "takes communication it needs communication needs to plan for the future and you need to",
    "start": "602279",
    "end": "608640"
  },
  {
    "text": "expect that your consumer will change over time and not when you want it so getting back to RPC so RPC has a",
    "start": "608640",
    "end": "617820"
  },
  {
    "text": "concept um has been around since I don't know I think the 70s I wasn't around that time",
    "start": "617820",
    "end": "623760"
  },
  {
    "text": "but um RPC as a general concept will make",
    "start": "623760",
    "end": "628920"
  },
  {
    "text": "systems behave and look like they're part of the same boundary",
    "start": "628920",
    "end": "634920"
  },
  {
    "text": "so RPC as a concept I'm gonna ask you to look at some code",
    "start": "634920",
    "end": "641940"
  },
  {
    "text": "so we have an order and a call to a create order of a specific request",
    "start": "641940",
    "end": "647240"
  },
  {
    "text": "c-sharp code here it doesn't matter what um what it does behind the scene but we",
    "start": "647240",
    "end": "654839"
  },
  {
    "text": "interrogate was the payment process status and regarding and looking at the",
    "start": "654839",
    "end": "660300"
  },
  {
    "text": "status of the payment we we try to check that if it's successful we're gonna arrange shipping for whatever that uh",
    "start": "660300",
    "end": "667740"
  },
  {
    "text": "order is uh the code looks pretty decent I mean you can tell what's happening",
    "start": "667740",
    "end": "673380"
  },
  {
    "text": "just by looking at it it's rather self-explanatory and if you look at this",
    "start": "673380",
    "end": "678540"
  },
  {
    "text": "you might say that our these are Services between the same app right in",
    "start": "678540",
    "end": "685620"
  },
  {
    "text": "the same context in the monolith maybe these are there so you don't care about orchestrating",
    "start": "685620",
    "end": "692880"
  },
  {
    "text": "the microservices if these were microservice architecture part and so on but if what if I would tell you that the",
    "start": "692880",
    "end": "700980"
  },
  {
    "text": "process uh payment for a line of code it's actually a network call so it's a",
    "start": "700980",
    "end": "707940"
  },
  {
    "text": "call over the wire to another API that knows how to process a payment",
    "start": "707940",
    "end": "713040"
  },
  {
    "text": "or to respond with a payment status so this does a travel over the network",
    "start": "713040",
    "end": "719700"
  },
  {
    "text": "it takes data from one side to another it's not in process so RPC has a",
    "start": "719700",
    "end": "725940"
  },
  {
    "text": "hole will make the code look local even if the API that you're calling Under the",
    "start": "725940",
    "end": "733320"
  },
  {
    "text": "form of a method call it's under a different uh system a different server all together so it",
    "start": "733320",
    "end": "740459"
  },
  {
    "text": "has a cola method look and feel it's not it's not create HTTP request of this",
    "start": "740459",
    "end": "745560"
  },
  {
    "text": "kind it's I'm going to call this method I'm going to get the answer I'm going to process the answer so because it has",
    "start": "745560",
    "end": "751380"
  },
  {
    "text": "this column method look and feel it's very prone to errors at least when you were using HTTP",
    "start": "751380",
    "end": "758220"
  },
  {
    "text": "clients or you have HTTP client libraries you're you're aware that",
    "start": "758220",
    "end": "763860"
  },
  {
    "text": "they're in that moment a network call will be made like make a HTTP client",
    "start": "763860",
    "end": "769260"
  },
  {
    "text": "call get something from another API bring it back and process that and use that",
    "start": "769260",
    "end": "774360"
  },
  {
    "text": "so with RPC the code will look like you're just calling a method it's not you being aware that an HTTP code will",
    "start": "774360",
    "end": "782160"
  },
  {
    "text": "be made so basically um RPC as a concept will make a",
    "start": "782160",
    "end": "788279"
  },
  {
    "text": "distributed system look local and behave like a monolith pretty much",
    "start": "788279",
    "end": "794279"
  },
  {
    "text": "so behaving like monolith means that communication is made transparent it's like you're looking through it and",
    "start": "794279",
    "end": "800339"
  },
  {
    "text": "you're not aware that is there okay but what's the fast with grpc and",
    "start": "800339",
    "end": "807600"
  },
  {
    "text": "what's the deal with it in.net so a short of History um it started in 2001 as a Google",
    "start": "807600",
    "end": "816060"
  },
  {
    "text": "project internal one called stabi and fast forwarding a few years they over",
    "start": "816060",
    "end": "821519"
  },
  {
    "text": "open source that uh and in 2019 we got it in.net uh any",
    "start": "821519",
    "end": "829320"
  },
  {
    "text": "other language out there got grpcb4.net and they have a grpc version that is",
    "start": "829320",
    "end": "834420"
  },
  {
    "text": "more stable and we they are able to use it but with your pcn.net they there were",
    "start": "834420",
    "end": "840720"
  },
  {
    "text": "struggles and there still are but it's more stable than um it was before so grpc the one that we're going to use",
    "start": "840720",
    "end": "848399"
  },
  {
    "text": "in.net is contract based so you're basically defining the thing that you're exposing to the outside world and other",
    "start": "848399",
    "end": "855540"
  },
  {
    "text": "system under the form of an interface with grpc you will have no more code references so",
    "start": "855540",
    "end": "861779"
  },
  {
    "text": "no more nugget packages that contain HTTP clients that know how to call",
    "start": "861779",
    "end": "868200"
  },
  {
    "text": "different apis traveling around so no more code references that way a thing",
    "start": "868200",
    "end": "874800"
  },
  {
    "text": "with nugget packages is that Distributing HTTP clients under this form is a way of",
    "start": "874800",
    "end": "883260"
  },
  {
    "text": "also integrating business logic in there and I've seen it so many times people say hey I'm going to create a library",
    "start": "883260",
    "end": "889620"
  },
  {
    "text": "for this that knows how to call the API X and then this small Library not only",
    "start": "889620",
    "end": "896880"
  },
  {
    "text": "knows how to call Api X but as any other business logic that shouldn't be in there so uh we end up with spaghetti",
    "start": "896880",
    "end": "904019"
  },
  {
    "text": "gold all over the place another thing with grpc is that it uses",
    "start": "904019",
    "end": "909660"
  },
  {
    "text": "HTTP 2 under the hood out of the box it has a different serialization",
    "start": "909660",
    "end": "915660"
  },
  {
    "text": "mechanism so it's not Json serialization it's protobuf which is binary and it",
    "start": "915660",
    "end": "922139"
  },
  {
    "text": "makes a smaller payload that's one perks of using grpc it's available in many",
    "start": "922139",
    "end": "927660"
  },
  {
    "text": "languages we'll uh which means that will allow you to basically have polyglot environments if",
    "start": "927660",
    "end": "934260"
  },
  {
    "text": "you have a C plus plus a node.js or whatever you can talk through grpc and",
    "start": "934260",
    "end": "939540"
  },
  {
    "text": "also it does code generation out of the box for you like you're implementing the stuff and you",
    "start": "939540",
    "end": "944760"
  },
  {
    "text": "also have code without you running tools or whatever to obtain the code so if you look back at how client",
    "start": "944760",
    "end": "952139"
  },
  {
    "text": "request response architecture will look like we introduced something in between so",
    "start": "952139",
    "end": "958440"
  },
  {
    "text": "now we won't have a simple request response but an HTTP request we will have something in between named",
    "start": "958440",
    "end": "964440"
  },
  {
    "text": "protophile that we're going to inspect so this protophile is simply a",
    "start": "964440",
    "end": "969680"
  },
  {
    "text": "text-based file that has a specific syntax that describes what you're trying to",
    "start": "969680",
    "end": "976260"
  },
  {
    "text": "expose with your services so let's have a look first you need to say what is the syntax",
    "start": "976260",
    "end": "982440"
  },
  {
    "text": "version that you want to specify what is the namespace that you want to generate",
    "start": "982440",
    "end": "988019"
  },
  {
    "text": "and what is the package that you want to uh to allow there so what you'll do next",
    "start": "988019",
    "end": "993480"
  },
  {
    "text": "is to say hey I have a thing that I want to expose and be able to consume",
    "start": "993480",
    "end": "999720"
  },
  {
    "text": "Downstream that is called fibo it's a service called fibo from Fibonacci and",
    "start": "999720",
    "end": "1006079"
  },
  {
    "text": "then I expose an operation and that operation is of type RPC named compute",
    "start": "1006079",
    "end": "1012079"
  },
  {
    "text": "Fibonacci it has an input named request request number and returns a Fibonacci",
    "start": "1012079",
    "end": "1018199"
  },
  {
    "text": "result so the thing with grpc when you're describing the service is that you",
    "start": "1018199",
    "end": "1023480"
  },
  {
    "text": "cannot have like no parameters you need to have an input so an input being a",
    "start": "1023480",
    "end": "1029720"
  },
  {
    "text": "thing that you need to pass around even if it contains nothing it's still an input that needs to be",
    "start": "1029720",
    "end": "1035058"
  },
  {
    "text": "there so one thing again returns one thing out so",
    "start": "1035059",
    "end": "1040160"
  },
  {
    "text": "looking at the the types you have this keyword name the message where you",
    "start": "1040160",
    "end": "1045620"
  },
  {
    "text": "describe the input and output basic from basically for this so requested number it's an n32 with a name number equals",
    "start": "1045620",
    "end": "1053900"
  },
  {
    "text": "one yeah that equals one it's not an assignment is the order of the field in the specific uh requested number",
    "start": "1053900",
    "end": "1062720"
  },
  {
    "text": "um type and when it gets built it's basically a c-sharp property that you",
    "start": "1062720",
    "end": "1068600"
  },
  {
    "text": "would use in a normal sharp class but in grpc language it's called the message so",
    "start": "1068600",
    "end": "1075200"
  },
  {
    "text": "class or message here same happens with Fibonacci result you give it a name like",
    "start": "1075200",
    "end": "1081080"
  },
  {
    "text": "a property name and if you would have more properties you would go uh below",
    "start": "1081080",
    "end": "1086179"
  },
  {
    "text": "write in property name and then equal to to see that is the second in the order",
    "start": "1086179",
    "end": "1091400"
  },
  {
    "text": "in there so I might ask you this sounds familiar have you ever worked with",
    "start": "1091400",
    "end": "1098120"
  },
  {
    "text": "WCF or soap services like that yeah",
    "start": "1098120",
    "end": "1103220"
  },
  {
    "text": "there you see how funny it is in in it and software development there are some",
    "start": "1103220",
    "end": "1109220"
  },
  {
    "text": "Concepts that tend to die and then after a few years resurface under a different form so this is one of those forms",
    "start": "1109220",
    "end": "1117020"
  },
  {
    "text": "so one of the cool things about grpc is that it supports something that is",
    "start": "1117020",
    "end": "1122179"
  },
  {
    "text": "called types or modes uh it's unary like",
    "start": "1122179",
    "end": "1127580"
  },
  {
    "text": "request response the easiest way as we we all know from client server request",
    "start": "1127580",
    "end": "1133340"
  },
  {
    "text": "response server streaming client streaming and the community combination of the previous two and if we were to",
    "start": "1133340",
    "end": "1140179"
  },
  {
    "text": "look at the animation how you describe this is you have a client you have a server as you have in any other uh",
    "start": "1140179",
    "end": "1146840"
  },
  {
    "text": "architecture so two entities like talking with each other the client initiates a request a HTTP request and",
    "start": "1146840",
    "end": "1155660"
  },
  {
    "text": "then the server receives the request and sends the response back so one thing in one thing out in the unary type how",
    "start": "1155660",
    "end": "1164240"
  },
  {
    "text": "would you describe such thing as Service as simply as you've seen before before input type returns output type and",
    "start": "1164240",
    "end": "1172280"
  },
  {
    "text": "that's it uh the next one called server streaming um it's similar the client still needs",
    "start": "1172280",
    "end": "1179360"
  },
  {
    "text": "to initiate a request so it's not like server go hey you do something the client still needs to open a",
    "start": "1179360",
    "end": "1185299"
  },
  {
    "text": "communication line with the server uh but now if the server streams it",
    "start": "1185299",
    "end": "1191780"
  },
  {
    "text": "means that it sends several pieces of data under the same TCP connection so",
    "start": "1191780",
    "end": "1197179"
  },
  {
    "text": "one thing in several things out and you depict this just by adding the stream",
    "start": "1197179",
    "end": "1202400"
  },
  {
    "text": "keyword near the part that you want to be it as a stream so in this case I have one thing in",
    "start": "1202400",
    "end": "1209780"
  },
  {
    "text": "requested number and returns a stream of Fibonacci result so many things out",
    "start": "1209780",
    "end": "1217640"
  },
  {
    "text": "the next one client streaming it's pretty much similar but the other way around the client still needs to open a",
    "start": "1217640",
    "end": "1225080"
  },
  {
    "text": "communication line it sends several pieces of data the server receives the data and sends",
    "start": "1225080",
    "end": "1231260"
  },
  {
    "text": "back one thing like one response think about this how would work for example uh",
    "start": "1231260",
    "end": "1239419"
  },
  {
    "text": "upload things you chunk the thing and upload the bytes and so on or maybe",
    "start": "1239419",
    "end": "1244880"
  },
  {
    "text": "collect data from different sensors like if you have 100 sensors",
    "start": "1244880",
    "end": "1250480"
  },
  {
    "text": "every one of those will open one communication lines the one connection and send several pieces of data in",
    "start": "1250480",
    "end": "1257059"
  },
  {
    "text": "instead of having 100 sensors opening a new connection every time they want to",
    "start": "1257059",
    "end": "1262400"
  },
  {
    "text": "send data so this is HTTP 2 under the hood and this is why it's possible",
    "start": "1262400",
    "end": "1268520"
  },
  {
    "text": "so 100 and many things in versus 100 or",
    "start": "1268520",
    "end": "1274640"
  },
  {
    "text": "multiplied by whatever many things you want to send to the server so how you uh",
    "start": "1274640",
    "end": "1280220"
  },
  {
    "text": "you write this that you're going to expose just by adding the string keyword near",
    "start": "1280220",
    "end": "1285500"
  },
  {
    "text": "the part that you want to be as a stream so in our case several stream in and one thing out",
    "start": "1285500",
    "end": "1293179"
  },
  {
    "text": "and the last one uh is the same but it has several things in several things out",
    "start": "1293179",
    "end": "1300320"
  },
  {
    "text": "so combine the two of them and you'll have bi-directional streaming so a quick",
    "start": "1300320",
    "end": "1305960"
  },
  {
    "text": "note this happens over single TCP connection so online of communication and many things traveling back and forth",
    "start": "1305960",
    "end": "1313220"
  },
  {
    "text": "how do you write this so by adding the stream keyword just remove things in and",
    "start": "1313220",
    "end": "1319280"
  },
  {
    "text": "a string of a stream of things out cool let's see some code",
    "start": "1319280",
    "end": "1325899"
  },
  {
    "text": "and I'm gonna show you how you create such a I hope it's visible enough I'm going to",
    "start": "1326600",
    "end": "1332600"
  },
  {
    "text": "try to zoom it so basically in Visual Studio you have the project template that it comes",
    "start": "1332600",
    "end": "1339500"
  },
  {
    "text": "um oh whoa whoa and you click next you give it whatever name you want",
    "start": "1339500",
    "end": "1344840"
  },
  {
    "text": "and it will end up creating a solution file for you we I just want to show you the how the project structure looks",
    "start": "1344840",
    "end": "1351500"
  },
  {
    "text": "because it will look the same in my demos so um",
    "start": "1351500",
    "end": "1356780"
  },
  {
    "text": "I think you all work with the web API or you had uh or MVC where you had the controller folder very well organized",
    "start": "1356780",
    "end": "1363860"
  },
  {
    "text": "well in grpc you have no controllers but you have produce folder and you have",
    "start": "1363860",
    "end": "1370640"
  },
  {
    "text": "a Services folder and the rest of the things they're familiar app settings where you can read and configure things",
    "start": "1370640",
    "end": "1376640"
  },
  {
    "text": "program Cs and so on by looking at programs yes",
    "start": "1376640",
    "end": "1383020"
  },
  {
    "text": "I hope this is visible further down okay how do you basically activate a",
    "start": "1384200",
    "end": "1391100"
  },
  {
    "text": "grpc thingy so you just add the middleware add your PC",
    "start": "1391100",
    "end": "1396380"
  },
  {
    "text": "and then you need to say hey I'm gonna mop a grpc service called this way so",
    "start": "1396380",
    "end": "1403159"
  },
  {
    "text": "this is part of the template it gets generated but I'm going to show you how it gets generated",
    "start": "1403159",
    "end": "1408200"
  },
  {
    "text": "so looking at the protofile we'll see here that uh it's a service",
    "start": "1408200",
    "end": "1414520"
  },
  {
    "text": "that expose an RPC method called say hello and it has two types the input type and",
    "start": "1414520",
    "end": "1421580"
  },
  {
    "text": "the output type hello request hello reply and basically what you need to do is to",
    "start": "1421580",
    "end": "1427280"
  },
  {
    "text": "give an implementation for this it's like an interface you have the protophile that specifies what you want",
    "start": "1427280",
    "end": "1433280"
  },
  {
    "text": "from your server but it's still your jump to your job to implement the actual um",
    "start": "1433280",
    "end": "1438620"
  },
  {
    "text": "the actual content so you have a greater service okay so greater service it's a class",
    "start": "1438620",
    "end": "1445340"
  },
  {
    "text": "that will inherit this a greater greater base this is the code",
    "start": "1445340",
    "end": "1450440"
  },
  {
    "text": "that is generated for you so it's part of the template and the code generation that is there",
    "start": "1450440",
    "end": "1456580"
  },
  {
    "text": "this is the base class that is generated in order for you to override what's inside",
    "start": "1456580",
    "end": "1464059"
  },
  {
    "text": "for example I'm gonna F12 in here to show you some funky code",
    "start": "1464059",
    "end": "1470000"
  },
  {
    "text": "you see that this is abstract partial class greater base that has pretty much",
    "start": "1470000",
    "end": "1476620"
  },
  {
    "text": "what I need so it looks at the gr the protophile and will generate a stab",
    "start": "1476620",
    "end": "1484419"
  },
  {
    "text": "what's here right here say hello so you're basically overriding",
    "start": "1484419",
    "end": "1490159"
  },
  {
    "text": "this method that is generated for you so in the service you just go ahead override the method give it that hey I",
    "start": "1490159",
    "end": "1498200"
  },
  {
    "text": "get one thing in I'm gonna have to return this out like the message type",
    "start": "1498200",
    "end": "1504200"
  },
  {
    "text": "okay one thing with grpc service implementations is that",
    "start": "1504200",
    "end": "1510799"
  },
  {
    "text": "if you specified hey I have one input you when you override the method you also have this second parameter or third",
    "start": "1510799",
    "end": "1518120"
  },
  {
    "text": "or fourth parameter called server call context which is similar to what we",
    "start": "1518120",
    "end": "1523340"
  },
  {
    "text": "already know from HTTP clients like the context of the current request well this",
    "start": "1523340",
    "end": "1529159"
  },
  {
    "text": "is the context of the grpc request so if you have a client streaming you can",
    "start": "1529159",
    "end": "1534559"
  },
  {
    "text": "access things related to this piece of information by using the server called context and on top of it you have the",
    "start": "1534559",
    "end": "1541820"
  },
  {
    "text": "HTTP context that you all know cool um",
    "start": "1541820",
    "end": "1547880"
  },
  {
    "text": "what we have in terms of packages is grpcsb and net core and a specific",
    "start": "1547880",
    "end": "1553820"
  },
  {
    "text": "version this is what you need to add and pretty much you have a server implementation and another thing that",
    "start": "1553820",
    "end": "1560840"
  },
  {
    "text": "you can do with any other for example I will I have and I'm gonna show you console apps you can edit the project",
    "start": "1560840",
    "end": "1568940"
  },
  {
    "text": "file and you're gonna say Hey you will find a",
    "start": "1568940",
    "end": "1574279"
  },
  {
    "text": "file a Proto file under this path and this path is not necessarily to be under",
    "start": "1574279",
    "end": "1580460"
  },
  {
    "text": "the same project it can be on a network it can be on disks somewhere but you",
    "start": "1580460",
    "end": "1585620"
  },
  {
    "text": "need to make sure that the protofile will be accessible by all the apps that",
    "start": "1585620",
    "end": "1590720"
  },
  {
    "text": "need to consume it uh and also another thing that you need to add in here is that uh hey uh this",
    "start": "1590720",
    "end": "1599059"
  },
  {
    "text": "specific project is of type grpc server server so you add this parameter in here with",
    "start": "1599059",
    "end": "1605419"
  },
  {
    "text": "the value to depict that is the server that will serve a grpc request",
    "start": "1605419",
    "end": "1610580"
  },
  {
    "text": "so uh enough with this uh let's have a quick look at my Demos",
    "start": "1610580",
    "end": "1617179"
  },
  {
    "text": "in here so what I have I have a server that has the four methods implemented",
    "start": "1617179",
    "end": "1623600"
  },
  {
    "text": "and then I'm going to have four console apps unary bi-directional client streaming and server streaming that are",
    "start": "1623600",
    "end": "1630559"
  },
  {
    "text": "nothing more than console apps doing requests to the server so in this specific case you will have to have a",
    "start": "1630559",
    "end": "1636320"
  },
  {
    "text": "server running and the client that makes requests with a server to get responses back so let's",
    "start": "1636320",
    "end": "1643340"
  },
  {
    "text": "see how the server server looks protophile I'm specifying the four methods",
    "start": "1643340",
    "end": "1649940"
  },
  {
    "text": "so it's called still called the gritter it's I am exposing to say hello once",
    "start": "1649940",
    "end": "1655039"
  },
  {
    "text": "again one thing out and for any other uh method I have a stream of request in",
    "start": "1655039",
    "end": "1661039"
  },
  {
    "text": "returns one thing and so on the name of the method it's a rather um I try to be a very uh intuitive and",
    "start": "1661039",
    "end": "1670279"
  },
  {
    "text": "what I have in here is the what I send so a request with a property called content value and the response with the",
    "start": "1670279",
    "end": "1676880"
  },
  {
    "text": "property name message okay so these are the this is the protophile and then for",
    "start": "1676880",
    "end": "1682580"
  },
  {
    "text": "uh one consumer I'm gonna show you that I have no code references",
    "start": "1682580",
    "end": "1688880"
  },
  {
    "text": "so I have here and I'm going to show you why I have that many packages",
    "start": "1688880",
    "end": "1694880"
  },
  {
    "text": "so packages I'm not seeing a reference to the server so no the only thing that",
    "start": "1694880",
    "end": "1700760"
  },
  {
    "text": "I need to add in common with this project is in the Cs project itself",
    "start": "1700760",
    "end": "1708200"
  },
  {
    "text": "I have this protobuf include to make it reach the protofile that",
    "start": "1708200",
    "end": "1715100"
  },
  {
    "text": "lives on the server project file project so you might as well have it in any",
    "start": "1715100",
    "end": "1720500"
  },
  {
    "text": "other place on top of your um your specific dotnet project and in this",
    "start": "1720500",
    "end": "1726200"
  },
  {
    "text": "case I'm specifying that is a client instead of a server as I used before okay so I'm going to close all this",
    "start": "1726200",
    "end": "1735320"
  },
  {
    "text": "and I'm gonna get back to the service server story to show you how things will",
    "start": "1735320",
    "end": "1741500"
  },
  {
    "text": "go so say hello um it's an overridden",
    "start": "1741500",
    "end": "1747919"
  },
  {
    "text": "overrides of the base class it has one thing in it has the several contacts that you can access and it basically",
    "start": "1747919",
    "end": "1755059"
  },
  {
    "text": "sends back what you send in with some extra um strings like I'm going to say hello back",
    "start": "1755059",
    "end": "1761840"
  },
  {
    "text": "with what I send value from the host server and I'm going to show you one thing",
    "start": "1761840",
    "end": "1768200"
  },
  {
    "text": "before I dig more into the code so I have a console to the left hand side",
    "start": "1768200",
    "end": "1773960"
  },
  {
    "text": "that I'm going to run and here the server instance will just listen for incoming requests",
    "start": "1773960",
    "end": "1780440"
  },
  {
    "text": "so it will listen on this Port 5000 so server running up and",
    "start": "1780440",
    "end": "1785840"
  },
  {
    "text": "running and then on the right hand side I will also have a console with that",
    "start": "1785840",
    "end": "1792020"
  },
  {
    "text": "console application running the console app so what I will do is to run this",
    "start": "1792020",
    "end": "1797299"
  },
  {
    "text": "and if everything works fine I should see things moving so what I'm",
    "start": "1797299",
    "end": "1802460"
  },
  {
    "text": "sending from the client part I'm sending NDC and I get a Hello back with NDC value",
    "start": "1802460",
    "end": "1808880"
  },
  {
    "text": "from this particular server so I added this just because I wanted to show you",
    "start": "1808880",
    "end": "1814100"
  },
  {
    "text": "some more things in the end so let's have a look what the server side to see what happened and I hope is big enough",
    "start": "1814100",
    "end": "1823539"
  },
  {
    "text": "so on the server side some things happened a request came in and then the",
    "start": "1824020",
    "end": "1830179"
  },
  {
    "text": "request came in for localhost 5000 greeter greeter say hello without type",
    "start": "1830179",
    "end": "1836720"
  },
  {
    "text": "of application grpc so it's not application Json or whatever we used to",
    "start": "1836720",
    "end": "1841820"
  },
  {
    "text": "do it's application grpc it has a 200 a status code but that status code is at",
    "start": "1841820",
    "end": "1848419"
  },
  {
    "text": "the TCP connection level so HTTP Communication channel it took that",
    "start": "1848419",
    "end": "1854600"
  },
  {
    "text": "amount of type and it's a HTTP tool and another thing",
    "start": "1854600",
    "end": "1860000"
  },
  {
    "text": "it's a post request so everything that goes to a grpc method",
    "start": "1860000",
    "end": "1867500"
  },
  {
    "text": "call its post so no matter if you're getting data you do a post",
    "start": "1867500",
    "end": "1872539"
  },
  {
    "text": "because we used to do way back where we didn't use like uh HTTP methods so",
    "start": "1872539",
    "end": "1878240"
  },
  {
    "text": "getting things post you're sending things Post Yeah so",
    "start": "1878240",
    "end": "1883520"
  },
  {
    "text": "every other request is it's a post request cool so classical client client",
    "start": "1883520",
    "end": "1890539"
  },
  {
    "text": "server request response and if we were to look at the code in the client",
    "start": "1890539",
    "end": "1896360"
  },
  {
    "text": "there are a few things that we need to talk about for example so",
    "start": "1896360",
    "end": "1903260"
  },
  {
    "text": "um grpc talks in channels",
    "start": "1903260",
    "end": "1909080"
  },
  {
    "text": "and clients so in order to make a requests over grpc",
    "start": "1909080",
    "end": "1915440"
  },
  {
    "text": "server you need to open a channel you need to specify with the which is the",
    "start": "1915440",
    "end": "1921260"
  },
  {
    "text": "address and then you can specify some Channel options like credential if there",
    "start": "1921260",
    "end": "1926840"
  },
  {
    "text": "there's the case but in our case we're going to do insecure calls because we like it that way",
    "start": "1926840",
    "end": "1932260"
  },
  {
    "text": "and then we're going to use the client and you'll see that you have greater",
    "start": "1932260",
    "end": "1938419"
  },
  {
    "text": "greater client and this is not code that I written this is auto-generated for you when it discovers the protophile so a",
    "start": "1938419",
    "end": "1945679"
  },
  {
    "text": "greater client you pass the channel so the communication channel to that port uh and that's it you create a request",
    "start": "1945679",
    "end": "1953179"
  },
  {
    "text": "message as I told you cannot issue requests that have no values so you need",
    "start": "1953179",
    "end": "1958399"
  },
  {
    "text": "to use those messages that you described in the service and then you simply just do clients call",
    "start": "1958399",
    "end": "1965720"
  },
  {
    "text": "the method that you want and that's it so in our case we have say hello client",
    "start": "1965720",
    "end": "1971779"
  },
  {
    "text": "stream server stream bi-directional and so on already implemented on the server",
    "start": "1971779",
    "end": "1976940"
  },
  {
    "text": "so this will be visible in your clients okay so you've seen this working",
    "start": "1976940",
    "end": "1984080"
  },
  {
    "text": "and some other things that you can pass around is that you can do some options",
    "start": "1984080",
    "end": "1989360"
  },
  {
    "text": "for every grpc request so it opens the communication Channel and inside it a",
    "start": "1989360",
    "end": "1995000"
  },
  {
    "text": "lot of things related to grpc Will Travel and sometimes you need to access those things",
    "start": "1995000",
    "end": "2001179"
  },
  {
    "text": "so um you can also pass some other things like",
    "start": "2001179",
    "end": "2007500"
  },
  {
    "text": "you need to pass metadata in it I'm going to uncover but I'm gonna get back to it like later",
    "start": "2007500",
    "end": "2014200"
  },
  {
    "text": "uh I'm not writing gold like because I don't want you to see me like how I type",
    "start": "2014200",
    "end": "2020620"
  },
  {
    "text": "badly so um you can pass headers but these headers are poor grpc requests not at",
    "start": "2020620",
    "end": "2028419"
  },
  {
    "text": "the uh the HTTP request level you can pass it a deadline uh for example if you",
    "start": "2028419",
    "end": "2034899"
  },
  {
    "text": "say hey if you do not get back from the server in that a lot of time consider yourself uh dead that's the timeline",
    "start": "2034899",
    "end": "2042399"
  },
  {
    "text": "that you have to get back a response if you don't then well throw an exception",
    "start": "2042399",
    "end": "2047559"
  },
  {
    "text": "and also you can pass cancellation tokens if you need so let's see the server is still running",
    "start": "2047559",
    "end": "2054220"
  },
  {
    "text": "listening and from the unary console I'm gonna run it again and if things go well",
    "start": "2054220",
    "end": "2063398"
  },
  {
    "text": "we're gonna see an exception which is what which was intended I'm gonna make",
    "start": "2063399",
    "end": "2068440"
  },
  {
    "text": "this uh more readable so we got an on handle exception uh an RPC exception",
    "start": "2068440",
    "end": "2073898"
  },
  {
    "text": "with status code deadline exit is so on and so forth so this is what we wanted to obtain so well",
    "start": "2073899",
    "end": "2080858"
  },
  {
    "text": "one millisecond it's super super small amount of time so we got this cool",
    "start": "2080859",
    "end": "2088240"
  },
  {
    "text": "um the second one so we're still listening for incoming requests we're",
    "start": "2088240",
    "end": "2093520"
  },
  {
    "text": "gonna see how client streaming works so I'm gonna.net run it",
    "start": "2093520",
    "end": "2099839"
  },
  {
    "text": "and you'll see on the server that things are getting in a lot of things are moving",
    "start": "2100119",
    "end": "2105940"
  },
  {
    "text": "you see I got a request to It Whatever content value and so on so a lot of things",
    "start": "2105940",
    "end": "2111220"
  },
  {
    "text": "and the client got one single response so the the this value is the last value",
    "start": "2111220",
    "end": "2117520"
  },
  {
    "text": "received from the server which is corresponding to this the actual implementation for it is",
    "start": "2117520",
    "end": "2125320"
  },
  {
    "text": "on the service here so it's client streaming it's basically",
    "start": "2125320",
    "end": "2130540"
  },
  {
    "text": "a loop sorry uh that goes",
    "start": "2130540",
    "end": "2136800"
  },
  {
    "text": "at the way it's request right and it simply writes the request that it gets",
    "start": "2138480",
    "end": "2144579"
  },
  {
    "text": "from the payload okay so you're looking at the request stream when you override this you'll get an",
    "start": "2144579",
    "end": "2150940"
  },
  {
    "text": "request stream that's why the stream keyword in there and the server called context and you will be able to access",
    "start": "2150940",
    "end": "2156820"
  },
  {
    "text": "the request stream and extract key from things from uh from there for for",
    "start": "2156820",
    "end": "2162099"
  },
  {
    "text": "example when you still have things move next and access the the current uh thingy that it's traveling through there",
    "start": "2162099",
    "end": "2169240"
  },
  {
    "text": "so in the client stream client this time in the console app the",
    "start": "2169240",
    "end": "2175839"
  },
  {
    "text": "scenario is pretty much the same for every other example that I did as a for Loop going to this value at just sending",
    "start": "2175839",
    "end": "2182320"
  },
  {
    "text": "request requests towards the server so it loops and send creates a new request",
    "start": "2182320",
    "end": "2187420"
  },
  {
    "text": "and then waits for the last response there and you see here",
    "start": "2187420",
    "end": "2192820"
  },
  {
    "text": "um canceled I need to you can catch exceptions but you need to filter those",
    "start": "2192820",
    "end": "2197980"
  },
  {
    "text": "exceptions uh over status code and that status code it's different than",
    "start": "2197980",
    "end": "2204400"
  },
  {
    "text": "what we used to use with HTTP there is still an okay but that's not HTTP okay",
    "start": "2204400",
    "end": "2211660"
  },
  {
    "text": "result it's related to the specific grpc inside for example out of range invalid",
    "start": "2211660",
    "end": "2217420"
  },
  {
    "text": "argument deadline extended in our case uh data loss canceled and so on and so",
    "start": "2217420",
    "end": "2223540"
  },
  {
    "text": "forth so status code for the specific grpc one so client streaming we watch this let's",
    "start": "2223540",
    "end": "2231040"
  },
  {
    "text": "see the server streaming so you see the information in there still running",
    "start": "2231040",
    "end": "2237880"
  },
  {
    "text": "I'm gonna run this server is",
    "start": "2237880",
    "end": "2243820"
  },
  {
    "text": "streaming back things from the um from the server side",
    "start": "2243820",
    "end": "2248980"
  },
  {
    "text": "so several things out one thing in okay and you're gonna see some things in",
    "start": "2248980",
    "end": "2255880"
  },
  {
    "text": "there like found some trailer values in grpc header",
    "start": "2255880",
    "end": "2261240"
  },
  {
    "text": "that I'm gonna look show you so basically in server streaming",
    "start": "2261240",
    "end": "2269520"
  },
  {
    "text": "you have a way of sending several options uh in the the request you see so",
    "start": "2270220",
    "end": "2277060"
  },
  {
    "text": "I'm waiting for each response in the response stream I'm reading all the response stream and I can search for a key uh for a",
    "start": "2277060",
    "end": "2285520"
  },
  {
    "text": "value for key sorry get value Mike fake header and you can write that back",
    "start": "2285520",
    "end": "2292480"
  },
  {
    "text": "cool and bi-directional and then I have some more example to show you server still running",
    "start": "2292480",
    "end": "2298480"
  },
  {
    "text": "and guess what it's going to send 10 things in",
    "start": "2298480",
    "end": "2304780"
  },
  {
    "text": "and it's going to get 10 things out but don't get fooled this ordering is not",
    "start": "2304780",
    "end": "2311920"
  },
  {
    "text": "guaranteed like on how HTTP is working so I was lucky",
    "start": "2311920",
    "end": "2317140"
  },
  {
    "text": "this time so I'm sending the eyes and I'm receiving the eyes back again",
    "start": "2317140",
    "end": "2323640"
  },
  {
    "text": "okay in bi-directional It's a combination of the two so you're calling",
    "start": "2324160",
    "end": "2329260"
  },
  {
    "text": "the method that you're exposing to the protophile and you wait for everything to come in and then you'll wait for the",
    "start": "2329260",
    "end": "2337000"
  },
  {
    "text": "things to come out cool um let's show you some more things we",
    "start": "2337000",
    "end": "2342280"
  },
  {
    "text": "talked about trailer values and I said I'm gonna show you",
    "start": "2342280",
    "end": "2348160"
  },
  {
    "text": "how you can extract things from the context so you have the server called context where you can get the HTTP",
    "start": "2348160",
    "end": "2354760"
  },
  {
    "text": "context of the specific grpc request and you can get things like which is the",
    "start": "2354760",
    "end": "2359859"
  },
  {
    "text": "what's the user for the current you can get the claims or maybe you can get the client certificate that is best for that",
    "start": "2359859",
    "end": "2366760"
  },
  {
    "text": "connection and you'll be able to do this in inside every other grpc method that",
    "start": "2366760",
    "end": "2372339"
  },
  {
    "text": "you're exposing another thing is that you can",
    "start": "2372339",
    "end": "2377460"
  },
  {
    "text": "mimic headers for grpc requests in terms of they allow you to um to send headers",
    "start": "2377460",
    "end": "2385960"
  },
  {
    "text": "back to the client not that the HTTP level but at the grpc one so how you do",
    "start": "2385960",
    "end": "2392200"
  },
  {
    "text": "that uh you simply just add to that context response trailer and you add a",
    "start": "2392200",
    "end": "2398260"
  },
  {
    "text": "key with a value and that will be uh traveling towards",
    "start": "2398260",
    "end": "2403300"
  },
  {
    "text": "your client and just just add it to the response just as you would you uh would do with the",
    "start": "2403300",
    "end": "2410079"
  },
  {
    "text": "traditional header in HTTP but this is down beneath okay",
    "start": "2410079",
    "end": "2415480"
  },
  {
    "text": "um let's see what else I was supposed to show you right now okay",
    "start": "2415480",
    "end": "2422560"
  },
  {
    "text": "moving back to the slides because I have some more things",
    "start": "2422560",
    "end": "2428460"
  },
  {
    "text": "talking about grpc interns internals so until now we talked about okay how",
    "start": "2428680",
    "end": "2433960"
  },
  {
    "text": "things are working what you can do and so on but internally grpc status codes are different than",
    "start": "2433960",
    "end": "2441280"
  },
  {
    "text": "HTTP status codes as I told you you have when you catch an exception for example",
    "start": "2441280",
    "end": "2446619"
  },
  {
    "text": "you need to filter out by what happened so this is inside",
    "start": "2446619",
    "end": "2452260"
  },
  {
    "text": "the communication channel so these are different another thing that you can",
    "start": "2452260",
    "end": "2458800"
  },
  {
    "text": "use with your grpc request is RPC exception guess what with grpc you have",
    "start": "2458800",
    "end": "2464740"
  },
  {
    "text": "one exception type it's like exception the gold class so um in here you have RPC exception if you",
    "start": "2464740",
    "end": "2472000"
  },
  {
    "text": "want to deal with RPC well basically what's inside it's up to you to discover",
    "start": "2472000",
    "end": "2478540"
  },
  {
    "text": "so RPC exception uh looking at the code",
    "start": "2478540",
    "end": "2484540"
  },
  {
    "text": "server side oh sorry sorry sorry",
    "start": "2484540",
    "end": "2492220"
  },
  {
    "text": "you can catch exceptions and you can treat them like differently",
    "start": "2492220",
    "end": "2498339"
  },
  {
    "text": "when the status goes off that specific exception it's on a specific range and you can",
    "start": "2498339",
    "end": "2504520"
  },
  {
    "text": "also use this for a retries and we're going to talk about that soon enough okay so capture PC exception catch again",
    "start": "2504520",
    "end": "2511900"
  },
  {
    "text": "on RPC exception if what specific status code happened and you can treat them",
    "start": "2511900",
    "end": "2517060"
  },
  {
    "text": "them this way okay um",
    "start": "2517060",
    "end": "2522960"
  },
  {
    "text": "request headers so when you issue a call you can add a",
    "start": "2523140",
    "end": "2529420"
  },
  {
    "text": "request header uh when you issue a response header again you can add those",
    "start": "2529420",
    "end": "2534880"
  },
  {
    "text": "trailers to the context and it will be visible on the client and the same happens with response uh trailer and so",
    "start": "2534880",
    "end": "2541060"
  },
  {
    "text": "on but one thing is that you still have access to what you had before HTTP context the top level you can add there",
    "start": "2541060",
    "end": "2548140"
  },
  {
    "text": "things that are visible and um in the HTTP code so if you're talking",
    "start": "2548140",
    "end": "2554680"
  },
  {
    "text": "thinking about implementing this you can also tweak some things and you should tweak some things for example you can",
    "start": "2554680",
    "end": "2561520"
  },
  {
    "text": "enable detailed errors just by putting this on true you can configure the maximum size of the request if you have",
    "start": "2561520",
    "end": "2568420"
  },
  {
    "text": "of scenarios where I know you upload things and you want to limit each chunk of data that goes to the server then you",
    "start": "2568420",
    "end": "2575560"
  },
  {
    "text": "can add this configure it as an option I don't know two megabytes or more or less",
    "start": "2575560",
    "end": "2581079"
  },
  {
    "text": "depending on the scenario you can set what is the maximum of the message size again depending on some computation you",
    "start": "2581079",
    "end": "2588460"
  },
  {
    "text": "might need to um to implement to think about sorry so um another thing",
    "start": "2588460",
    "end": "2593980"
  },
  {
    "text": "that is a good practice even in apis were in things like well ASB and VC is",
    "start": "2593980",
    "end": "2600400"
  },
  {
    "text": "regarding the compression level of the response so you can add different compression types in here and you can",
    "start": "2600400",
    "end": "2607300"
  },
  {
    "text": "say that hey I want compression level to be optimal and it will work things for",
    "start": "2607300",
    "end": "2612880"
  },
  {
    "text": "you or maybe I want to use a compression algorithm that is gzip or whatever and",
    "start": "2612880",
    "end": "2617920"
  },
  {
    "text": "you can add that in here or maybe you want to implement your own compression provider or add your broader compression",
    "start": "2617920",
    "end": "2624160"
  },
  {
    "text": "or why not your own you can add this in here another thing that is the",
    "start": "2624160",
    "end": "2630400"
  },
  {
    "text": "worth mentioning uh it's called Interceptor and it's a",
    "start": "2630400",
    "end": "2635859"
  },
  {
    "text": "similar thing to what a middleware is right but this time the Interceptor",
    "start": "2635859",
    "end": "2641400"
  },
  {
    "text": "intercepts uh different types of grpc requests so if you're talking unary",
    "start": "2641400",
    "end": "2646960"
  },
  {
    "text": "and that it's a blocking call you can create an Interceptor and you override that",
    "start": "2646960",
    "end": "2652119"
  },
  {
    "text": "also interceptors are of Two Types on the server side you can add that like I",
    "start": "2652119",
    "end": "2658720"
  },
  {
    "text": "added in here it's generic and can create your own or you can intercept",
    "start": "2658720",
    "end": "2664420"
  },
  {
    "text": "things when you send the request over the server so you basically you'll be",
    "start": "2664420",
    "end": "2671560"
  },
  {
    "text": "able to create something that is like a I know a pipeline just to add more things in",
    "start": "2671560",
    "end": "2678700"
  },
  {
    "text": "um in the grpc request like you would do like with a normal middleware",
    "start": "2678700",
    "end": "2684760"
  },
  {
    "text": "uh let's see such an interceptor so for example in the client side",
    "start": "2684760",
    "end": "2691660"
  },
  {
    "text": "uh it's I created an error Handler Interceptor but I not uh it doesn't not",
    "start": "2691660",
    "end": "2697480"
  },
  {
    "text": "get through it so um Interceptor you inherited this class and you override",
    "start": "2697480",
    "end": "2702940"
  },
  {
    "text": "what you need for example I need to intercept when things are like a calling",
    "start": "2702940",
    "end": "2708420"
  },
  {
    "text": "grpc unary like blocking sorry async uh you have some weird",
    "start": "2708420",
    "end": "2715060"
  },
  {
    "text": "things like there the context and the continuation again it will wait for the",
    "start": "2715060",
    "end": "2720819"
  },
  {
    "text": "next um Interceptor if there is one uh just like it happens with the middleware you",
    "start": "2720819",
    "end": "2727180"
  },
  {
    "text": "pass the control back and then control the gas back to you um and well you can",
    "start": "2727180",
    "end": "2733480"
  },
  {
    "text": "add things in here another thing that you can add",
    "start": "2733480",
    "end": "2738940"
  },
  {
    "text": "is Interceptor at the server level for example you can Implement a logging",
    "start": "2738940",
    "end": "2744520"
  },
  {
    "text": "Interceptor I don't know to not necessarily too long but even to trace things related to grpc requests you can",
    "start": "2744520",
    "end": "2752319"
  },
  {
    "text": "pass parameters if there's the case you can inject things and for example I need to um",
    "start": "2752319",
    "end": "2758560"
  },
  {
    "text": "pass the unit server Handler uh server call contacts and to log things like hey",
    "start": "2758560",
    "end": "2764500"
  },
  {
    "text": "I'm starting to receive a call of this type you see you're awaiting the continuation for the content request and",
    "start": "2764500",
    "end": "2771339"
  },
  {
    "text": "so on and if you want to activate this you simply need to go into the grpc part",
    "start": "2771339",
    "end": "2777280"
  },
  {
    "text": "and just add it in the server server part so if we're looking back here",
    "start": "2777280",
    "end": "2784960"
  },
  {
    "text": "supposedly let's see urinary",
    "start": "2784960",
    "end": "2791319"
  },
  {
    "text": "started started started I'm gonna maximize this a bit",
    "start": "2791319",
    "end": "2796619"
  },
  {
    "text": "I'm gonna.net run it to see it how it works okay yeah of course this died",
    "start": "2796960",
    "end": "2805859"
  },
  {
    "text": "I'm gonna comment this thing again",
    "start": "2806680",
    "end": "2810900"
  },
  {
    "text": "seems to be working building unit I'm gonna clear the screen just so",
    "start": "2811859",
    "end": "2819720"
  },
  {
    "text": "I'm not seeing it okay here it is",
    "start": "2826839",
    "end": "2832420"
  },
  {
    "text": "uh I wasn't inspired enough to create it so it's an info message like logging",
    "start": "2832420",
    "end": "2837819"
  },
  {
    "text": "information uh it's in server logging Interceptor I'm starting to receive a",
    "start": "2837819",
    "end": "2843160"
  },
  {
    "text": "call of type unary in method greeters hey hello so I'm intercepting or only that specific type of um",
    "start": "2843160",
    "end": "2850599"
  },
  {
    "text": "type of calls and it's up to me what I do with them so either I'm extracting claims you can use that you can extract",
    "start": "2850599",
    "end": "2857440"
  },
  {
    "text": "claims you can extract security related things where you can log or whatever the business case you have you can intercept",
    "start": "2857440",
    "end": "2864400"
  },
  {
    "text": "each one so um moving forward",
    "start": "2864400",
    "end": "2869740"
  },
  {
    "text": "if you talk about security since I just mentioned that you can basically use everything that",
    "start": "2869740",
    "end": "2877119"
  },
  {
    "text": "you use in a web API and now you have two",
    "start": "2877119",
    "end": "2882640"
  },
  {
    "text": "options you can put it at the channel level so for each grpc thingy that",
    "start": "2882640",
    "end": "2887980"
  },
  {
    "text": "travels through the TCP Channel or at the connection level so TCP connection whatever you would use there you're able",
    "start": "2887980",
    "end": "2894460"
  },
  {
    "text": "to to extract information and to be able to see if the call is loud or not",
    "start": "2894460",
    "end": "2901540"
  },
  {
    "text": "so uh Azure ad client certificate jvd token I should remove from there or auth",
    "start": "2901540",
    "end": "2908800"
  },
  {
    "text": "WS Federation and so on so there are different topics to talk",
    "start": "2908800",
    "end": "2914260"
  },
  {
    "text": "about security and I'm not going to dig into it right now but I have a few more",
    "start": "2914260",
    "end": "2920380"
  },
  {
    "text": "things that I want to show you since dotnet6 grpc should do some awesome",
    "start": "2920380",
    "end": "2926800"
  },
  {
    "text": "things in.net and one of them is called grpc transcoding uh some people say hey",
    "start": "2926800",
    "end": "2932619"
  },
  {
    "text": "I won't use grpc to my Downstream apis I'm gonna keep using HTTP calls because",
    "start": "2932619",
    "end": "2938740"
  },
  {
    "text": "my apis are also I I also need them to be exposed like to the outside world in",
    "start": "2938740",
    "end": "2945520"
  },
  {
    "text": "the browser and I cannot use the RPC for that without using a grpc web or some other",
    "start": "2945520",
    "end": "2951579"
  },
  {
    "text": "tools so guess what there is this thingy called grpc transcoding that allows you",
    "start": "2951579",
    "end": "2957700"
  },
  {
    "text": "to do exactly that so allows you to do I have a server that's called transcoding",
    "start": "2957700",
    "end": "2964300"
  },
  {
    "text": "kbi that listens uh to a specific port and I'm going to show you this",
    "start": "2964300",
    "end": "2971440"
  },
  {
    "text": "sorry sorry uh basically right now it's it's a hack",
    "start": "2971440",
    "end": "2977560"
  },
  {
    "text": "but until they release a.net7 I hope this will be fixed you need to copy from",
    "start": "2977560",
    "end": "2983140"
  },
  {
    "text": "GitHub some folder structure uh called Google API with these two",
    "start": "2983140",
    "end": "2988839"
  },
  {
    "text": "protophiles and this basically will allow you to you also need to import them in your",
    "start": "2988839",
    "end": "2996060"
  },
  {
    "text": "protophile and this will allow you to do this to say hey I need to have an option",
    "start": "2996060",
    "end": "3002339"
  },
  {
    "text": "to expose this as an endpoint in the browser as in process but to also be in",
    "start": "3002339",
    "end": "3009660"
  },
  {
    "text": "the browser so in our case they want to expose a get request under this path the",
    "start": "3009660",
    "end": "3014700"
  },
  {
    "text": "parameters will be bind bound from the path and we'll be able to do this",
    "start": "3014700",
    "end": "3023160"
  },
  {
    "text": "so https localhost the port that is running V1 greater and name and we're",
    "start": "3023160",
    "end": "3029819"
  },
  {
    "text": "gonna get back hello the parameter that we're sending so if I'm extending NDC",
    "start": "3029819",
    "end": "3035760"
  },
  {
    "text": "I'm going to get back hello NDC and this is very cool because basically what I",
    "start": "3035760",
    "end": "3041040"
  },
  {
    "text": "have is the grpc servers here it is complete implementation I have the",
    "start": "3041040",
    "end": "3046380"
  },
  {
    "text": "option of hey this is your PC up to my Downstream but I also need to expose this in the in the",
    "start": "3046380",
    "end": "3052260"
  },
  {
    "text": "browser um it's still new fairly new and not",
    "start": "3052260",
    "end": "3057300"
  },
  {
    "text": "stable enough but it also works with post requests and it also allows you to",
    "start": "3057300",
    "end": "3063000"
  },
  {
    "text": "issue requests for example from from the browser so I'm sending a name in so in Postman",
    "start": "3063000",
    "end": "3069839"
  },
  {
    "text": "in beta version you're able to send messages with grpc and if we invoke this",
    "start": "3069839",
    "end": "3075960"
  },
  {
    "text": "we're going to get back messages from Postman so I think this is very cool because you",
    "start": "3075960",
    "end": "3083819"
  },
  {
    "text": "couldn't do this before and now you basically have two rabbits one stone and you'll be able to to touch them both",
    "start": "3083819",
    "end": "3091559"
  },
  {
    "text": "so grpc transcoding is one of the things that is very cool",
    "start": "3091559",
    "end": "3096839"
  },
  {
    "text": "another thing is Transit fold handling so if you ever use poly",
    "start": "3096839",
    "end": "3103140"
  },
  {
    "text": "now you'll be able to use this also out of the box without using some extra",
    "start": "3103140",
    "end": "3109440"
  },
  {
    "text": "packages so here here here you'll be able to configure either of",
    "start": "3109440",
    "end": "3116099"
  },
  {
    "text": "your try policy or hedging policy for each request because this will be passed",
    "start": "3116099",
    "end": "3122220"
  },
  {
    "text": "through the channel so specific to the grpc piece so basically you can say hey what are the max attempts to retry the",
    "start": "3122220",
    "end": "3129599"
  },
  {
    "text": "initial back off with the time span maximum back off back of multiplier and",
    "start": "3129599",
    "end": "3135180"
  },
  {
    "text": "which are the retrievable statuses that you want to do so basically you won't sometimes you don't need to retry every",
    "start": "3135180",
    "end": "3141240"
  },
  {
    "text": "time just when something happens and the status code that is their triggers uh",
    "start": "3141240",
    "end": "3147240"
  },
  {
    "text": "the hedging policy again you can specify hedging delay maximum of temps and which are the known fatal status codes that",
    "start": "3147240",
    "end": "3154020"
  },
  {
    "text": "you want to to use again so you can specify the method config give it a name",
    "start": "3154020",
    "end": "3159720"
  },
  {
    "text": "that is comfortable for you and then just pass it for uh pass it to that that",
    "start": "3159720",
    "end": "3165420"
  },
  {
    "text": "client okay I'm not gonna demo this but another thing that I'm gonna demo is",
    "start": "3165420",
    "end": "3172319"
  },
  {
    "text": "client side load balancing what if you could do client-side load balancing without using some additional tools and",
    "start": "3172319",
    "end": "3179700"
  },
  {
    "text": "now you'll be able to do this what you have to do is to allow this to have and",
    "start": "3179700",
    "end": "3185760"
  },
  {
    "text": "to be either a static resolver Factory or you know the DNS and you can add the resolver factory so",
    "start": "3185760",
    "end": "3193740"
  },
  {
    "text": "basically what we're going to do is hey I need to uh I know the addresses that I will have",
    "start": "3193740",
    "end": "3200460"
  },
  {
    "text": "a server running the this port in this port so every time you want to create and issue a grpc request you'll be",
    "start": "3200460",
    "end": "3208500"
  },
  {
    "text": "either be served by one of them or the other one based on on the the policy",
    "start": "3208500",
    "end": "3214380"
  },
  {
    "text": "that I'm specifying okay so um I'm gonna see uh specify hey uh for this address",
    "start": "3214380",
    "end": "3221339"
  },
  {
    "text": "give it a name localhost I have this options for the channel the credentials",
    "start": "3221339",
    "end": "3227880"
  },
  {
    "text": "and I have the service config where I'm specifying I want it to be round robin so take one and the next one and so on",
    "start": "3227880",
    "end": "3234660"
  },
  {
    "text": "and for example if you want to say uh is the pick first also",
    "start": "3234660",
    "end": "3240359"
  },
  {
    "text": "or you can also Implement your own so what I'm gonna do is",
    "start": "3240359",
    "end": "3245400"
  },
  {
    "text": "okay so we're issuing requests I'm going to have the server running it's still",
    "start": "3245400",
    "end": "3250800"
  },
  {
    "text": "running and I'm going to have the second server running on Port",
    "start": "3250800",
    "end": "3256400"
  },
  {
    "text": "2002 so two instances of the server and now I will have another console app",
    "start": "3256400",
    "end": "3263160"
  },
  {
    "text": "that is that will be running an issue requests and we're gonna see",
    "start": "3263160",
    "end": "3269819"
  },
  {
    "text": "hey uh we got hello back with NDC value from localhost 5000 and now if I do the",
    "start": "3269819",
    "end": "3276540"
  },
  {
    "text": "same request same request let's add",
    "start": "3276540",
    "end": "3281819"
  },
  {
    "text": "hmm just a sec this is running",
    "start": "3281819",
    "end": "3286640"
  },
  {
    "text": "I'm running what I need to run",
    "start": "3291059",
    "end": "3294619"
  },
  {
    "text": "no no no no this should work",
    "start": "3300540",
    "end": "3304520"
  },
  {
    "text": "what happened okay",
    "start": "3306240",
    "end": "3312200"
  },
  {
    "text": "demo Gods today anyways uh I'm gonna try one more time",
    "start": "3312300",
    "end": "3318180"
  },
  {
    "text": "extras grpc clear screen",
    "start": "3318180",
    "end": "3324078"
  },
  {
    "text": "balance DNS build server console say hello",
    "start": "3327359",
    "end": "3332460"
  },
  {
    "text": "transcoding transcoding transcoding",
    "start": "3332460",
    "end": "3336380"
  },
  {
    "text": "no not this I'm gonna close it",
    "start": "3340559",
    "end": "3344359"
  },
  {
    "text": "live demos right so this runs",
    "start": "3350940",
    "end": "3357680"
  },
  {
    "text": "okay I'm gonna give up I don't know what happened yeah but basically client-side load",
    "start": "3358079",
    "end": "3363480"
  },
  {
    "text": "balancing not in my case apparently but it should serve you like the first one and the second one uh before",
    "start": "3363480",
    "end": "3370380"
  },
  {
    "text": "okay um let's see what else do we have",
    "start": "3370380",
    "end": "3376760"
  },
  {
    "text": "cleanser load balancing so DNS resolver static resolver Peak first or round",
    "start": "3379859",
    "end": "3385680"
  },
  {
    "text": "robin policy and if you want you can Implement your own like take the first one and after next five requests or the",
    "start": "3385680",
    "end": "3392760"
  },
  {
    "text": "second server and so on sky is the limiting here so um I'm still wondering why that demo",
    "start": "3392760",
    "end": "3399180"
  },
  {
    "text": "doesn't work so what are the benefits of using grpc first of all I think it's",
    "start": "3399180",
    "end": "3405839"
  },
  {
    "text": "visible and important enough to look at the performance versus size so the same",
    "start": "3405839",
    "end": "3412140"
  },
  {
    "text": "request the same response size for the HTTP API versus a grpc gives you a",
    "start": "3412140",
    "end": "3417960"
  },
  {
    "text": "payload that is 80 small smaller in the payload response just because it's",
    "start": "3417960",
    "end": "3423720"
  },
  {
    "text": "different serialization uh we'll allow you polyglot environments which is important to have a system that is",
    "start": "3423720",
    "end": "3430260"
  },
  {
    "text": "pretty much serving everything [Music] from the language that it's suitable",
    "start": "3430260",
    "end": "3435540"
  },
  {
    "text": "enough low Network usage point to point because that's what you expect 0.8 point B make data traveling over so HTTP",
    "start": "3435540",
    "end": "3445260"
  },
  {
    "text": "multiple calls over TCP connection is very important it's contract based",
    "start": "3445260",
    "end": "3451380"
  },
  {
    "text": "HTTP 2 supports different streaming types and it can be configured to run with HTTP 3. I don't know about you guys",
    "start": "3451380",
    "end": "3458940"
  },
  {
    "text": "and girls but I'm personally just getting my head around the HTTP 2 and now they're talking about HTTP 3s it's",
    "start": "3458940",
    "end": "3465480"
  },
  {
    "text": "hard to to keep up sometimes uh and those downsides uh it still has the",
    "start": "3465480",
    "end": "3471420"
  },
  {
    "text": "temporal coupling so the temporal coupling will be a thing that will allow you to stay here not to lose every uh",
    "start": "3471420",
    "end": "3478380"
  },
  {
    "text": "anything by using a service buses going messaging and so on and grpc is not the",
    "start": "3478380",
    "end": "3483660"
  },
  {
    "text": "technology for that um it's not humor readable it wasn't humor readable until Postman created the",
    "start": "3483660",
    "end": "3489780"
  },
  {
    "text": "better version of it and IT addresses grpc you'll need better testing and",
    "start": "3489780",
    "end": "3495180"
  },
  {
    "text": "you'll need to focus on cicd in a way that will prevent you from uh losing",
    "start": "3495180",
    "end": "3501540"
  },
  {
    "text": "access to the Proto files so if you're traveling a file over the network you're gonna make sure that you test that",
    "start": "3501540",
    "end": "3507240"
  },
  {
    "text": "thoroughly it does only post requests which means there's no caching for you yay right no I think there will work on",
    "start": "3507240",
    "end": "3515880"
  },
  {
    "text": "on solving this also you have the single point of Truth the protofile so normal chord references and so on and it's not",
    "start": "3515880",
    "end": "3523859"
  },
  {
    "text": "supported in Azure it is supported in Asia after two years they brought support in Asia",
    "start": "3523859",
    "end": "3530460"
  },
  {
    "text": "so when and why grpc so when you have Downstream apis in your system that you",
    "start": "3530460",
    "end": "3537240"
  },
  {
    "text": "want so also want to expose to the outside world it has four ways it's",
    "start": "3537240",
    "end": "3543119"
  },
  {
    "text": "performant and so on and um you know distributed systems are all",
    "start": "3543119",
    "end": "3548819"
  },
  {
    "text": "about trade-offs so we need to pick the right technology for the specific job that we have and we should know the",
    "start": "3548819",
    "end": "3555059"
  },
  {
    "text": "tools so as next steps because um my time is up is to look up this grpc web",
    "start": "3555059",
    "end": "3561420"
  },
  {
    "text": "HTTP 3 and stuff like that and you'll have the resources in here so",
    "start": "3561420",
    "end": "3567839"
  },
  {
    "text": "it's a demo and so on also uh thanks for listening uh and don't forget about the",
    "start": "3567839",
    "end": "3574740"
  },
  {
    "text": "the scoring the cards no Reds uh only greens uh on your way out so thank you",
    "start": "3574740",
    "end": "3581040"
  },
  {
    "text": "for listening me [Applause]",
    "start": "3581040",
    "end": "3589789"
  }
]