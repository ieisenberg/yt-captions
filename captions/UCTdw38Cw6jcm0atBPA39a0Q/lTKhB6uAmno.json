[
  {
    "text": "hi everyone and welcome to technics and sorry for techniques and practices for",
    "start": "9560",
    "end": "15140"
  },
  {
    "text": "testing angular I'm Adam Stephenson I'm a solution architect at SSW I specialize",
    "start": "15140",
    "end": "21950"
  },
  {
    "text": "in building large enterprise web applications and I'm lucky I've been building angular and not dotnet core",
    "start": "21950",
    "end": "28700"
  },
  {
    "text": "applications since they're both in early beta in Brisbane and been really lucky",
    "start": "28700",
    "end": "36200"
  },
  {
    "text": "over the last couple of years to just pretty much only do the new angular stuff and I spend about half my time",
    "start": "36200",
    "end": "41840"
  },
  {
    "text": "writing code for clients and traveling and the other half of my time traveling around talking about it and teaching which is really fun because that's where",
    "start": "41840",
    "end": "48260"
  },
  {
    "text": "you really learn because you get to see what everyone else is doing so hopefully we can share some of that experience",
    "start": "48260",
    "end": "53300"
  },
  {
    "text": "with you today around testing so you're going to hear us say angular 2 but what",
    "start": "53300",
    "end": "60260"
  },
  {
    "text": "we really mean to say is just angular because the angular team would like it if everyone stops using the version numbers in the naming because it's been",
    "start": "60260",
    "end": "67250"
  },
  {
    "text": "quite confusing and we're currently at angular 4 and soon we're going to be probably next month we might be at",
    "start": "67250",
    "end": "73280"
  },
  {
    "text": "angular 5 so the idea is that it's going to be evergreen a bit kind of like Chrome I think we're at sixty because I",
    "start": "73280",
    "end": "79700"
  },
  {
    "text": "think I'm getting some touch bar features for my macbook for Chrome in version 60 I'm not sure yet but just",
    "start": "79700",
    "end": "85399"
  },
  {
    "text": "like chrome you don't really know the number angular is going to be the same so if you're talking about angular the first version you should be saying",
    "start": "85399",
    "end": "90439"
  },
  {
    "text": "angularjs and if you're talking about the second version or four or five or whatever comes after that then it's just",
    "start": "90439",
    "end": "96409"
  },
  {
    "text": "angular so you'll see us try our best just to say angular so who here in the",
    "start": "96409",
    "end": "103130"
  },
  {
    "text": "room hands nice and high is tested angularjs okay cool probably close to",
    "start": "103130",
    "end": "109069"
  },
  {
    "text": "half the room that's good and who has done any testing with the new angular",
    "start": "109069",
    "end": "114189"
  },
  {
    "text": "okay so if you have hands and so probably a third of the room so you're",
    "start": "114189",
    "end": "119270"
  },
  {
    "text": "all in the right place we're gonna be talking about all the new stuff that's in the new testing utilities for angular",
    "start": "119270",
    "end": "126819"
  },
  {
    "text": "so in 1979 was the first time that debug that testing was actually differentiated",
    "start": "126819",
    "end": "132860"
  },
  {
    "text": "as a different practice to debugging in 1996 we got XP and which had a real",
    "start": "132860",
    "end": "138830"
  },
  {
    "text": "focus on testing in 1998 we got s unit F by Kent Beck which was the unit testing framework for",
    "start": "138830",
    "end": "146060"
  },
  {
    "text": "small talk which is the first of the xunit frameworks which is you know really what a lot of our current testing",
    "start": "146060",
    "end": "151159"
  },
  {
    "text": "is still based upon in 2001 we got jeaious unit from pivotal labs and",
    "start": "151159",
    "end": "156200"
  },
  {
    "text": "there's worth taking a note of them they pop up a fair bit and that was the JavaScript implementation of s unit we",
    "start": "156200",
    "end": "163819"
  },
  {
    "text": "got 2,000 in 2003 we got TDD and in 2006 we got behavior driven design by day and",
    "start": "163819",
    "end": "171530"
  },
  {
    "text": "North was like an extension of TDD with human readable tests and in 2006 we got",
    "start": "171530",
    "end": "178519"
  },
  {
    "text": "selenium for doing outrunning out in doing tests and in 2010 we got Jasmine",
    "start": "178519",
    "end": "183769"
  },
  {
    "text": "from pivotal labs again which was the updated version of jeaious unit in 2010",
    "start": "183769",
    "end": "189200"
  },
  {
    "text": "we got angular 1 which is the first time I had a framework or in the yeah was the",
    "start": "189200",
    "end": "196040"
  },
  {
    "text": "first time that we had a framework where the hello world was actually unit tested which I was really excited about because",
    "start": "196040",
    "end": "202250"
  },
  {
    "text": "from the very first day angular 1 had a real focus on testing which was excellent we got 20 in 2011 we got karma",
    "start": "202250",
    "end": "210199"
  },
  {
    "text": "from Google whose original name was testacular and I really wish they'd have stuck with that because I think that's",
    "start": "210199",
    "end": "215659"
  },
  {
    "text": "pretty cool in 2013 we got protractor for running our angular end-to-end tests",
    "start": "215659",
    "end": "220940"
  },
  {
    "text": "which uses selenium under the covers and in 2016 we've got angular 2 now I find",
    "start": "220940",
    "end": "228079"
  },
  {
    "text": "the history of testing really interesting because when you look back over it we're using protractor which",
    "start": "228079",
    "end": "235819"
  },
  {
    "text": "uses selenium under the covers we're still running our unit tests in karma we're still writing them in Jasmine",
    "start": "235819",
    "end": "241639"
  },
  {
    "text": "Jasmine uses BDD we're still encouraging TDD like the tools that we're using in",
    "start": "241639",
    "end": "248030"
  },
  {
    "text": "the practices that we're using they're not new and this is by far the best",
    "start": "248030",
    "end": "253250"
  },
  {
    "text": "coverage of we seen in any room of testing and we asked exactly the same question in January this year in London",
    "start": "253250",
    "end": "259070"
  },
  {
    "text": "and two people had done angular 1 testing and no one had done any angular 2 testing and so fought so it's always",
    "start": "259070",
    "end": "267080"
  },
  {
    "text": "been a struggle to get people to do testing and I think that's because it's traditionally been hard and front-end",
    "start": "267080",
    "end": "273469"
  },
  {
    "text": "testing has been harder than back in testing and that's we're here to talk about today is we",
    "start": "273469",
    "end": "279380"
  },
  {
    "text": "think that angular's made it a lot easier the the tools and the frameworks that angular has given us have made",
    "start": "279380",
    "end": "285710"
  },
  {
    "text": "front int us testing much more easy and that's all we're gonna cover today so the agenda we're going to talk about the",
    "start": "285710",
    "end": "292850"
  },
  {
    "text": "tools that we've got for testing we're gonna have a look at jasmine we're gonna talk about faking dependencies we're",
    "start": "292850",
    "end": "298070"
  },
  {
    "text": "gonna look at the testbed API and we're gonna talk around the challenges around testing asynchronous code with the async",
    "start": "298070",
    "end": "304820"
  },
  {
    "text": "and fake async methods and then we can look at into in tests so let's jump in",
    "start": "304820",
    "end": "310700"
  },
  {
    "text": "and talk about some of the common tools that people use for testing with angular but it's important to remember like Adam",
    "start": "310700",
    "end": "317510"
  },
  {
    "text": "said that testing is not an afterthought for angular you know it's it's been baked into the system from the ground up",
    "start": "317510",
    "end": "323120"
  },
  {
    "text": "and so much so if you go actually go to print out the documentation on angular do it's 99 pages long so it's actually a",
    "start": "323120",
    "end": "331130"
  },
  {
    "text": "fair bit and that's just how to kind of use it not sort of best practices as well and that's I only know that because",
    "start": "331130",
    "end": "336200"
  },
  {
    "text": "Adam actually likes to print out documentation and read it which is kind of strange bit so it's a there's a lot",
    "start": "336200",
    "end": "342650"
  },
  {
    "text": "of information around and there's two main types of tests that people do with their angular code the first is unit",
    "start": "342650",
    "end": "348169"
  },
  {
    "text": "tests where you're just testing a small function or a small piece of section of your application and then you've got",
    "start": "348169",
    "end": "354169"
  },
  {
    "text": "into n tests which are completely different where you actually run the entire application in the browser and",
    "start": "354169",
    "end": "359210"
  },
  {
    "text": "then you query the Dom in the browser and select elements and run tests against what they've got the tools at",
    "start": "359210",
    "end": "365600"
  },
  {
    "text": "the moment that are the most popular is karma as a test Runner and then using",
    "start": "365600",
    "end": "370669"
  },
  {
    "text": "jasmine as the testing framework for the syntax and the assertions and all of the matches and all of the different spying",
    "start": "370669",
    "end": "377870"
  },
  {
    "text": "and faking utilities that you get but angular is also a big part of those testing utilities especially in the next",
    "start": "377870",
    "end": "383360"
  },
  {
    "text": "version of it the very angular 2 or 4 or 5 and there's lots of different testing",
    "start": "383360",
    "end": "389270"
  },
  {
    "text": "helpers we're going to go through when you're doing it into n tests then you've got protractor is the main tool for",
    "start": "389270",
    "end": "395450"
  },
  {
    "text": "running it into n tests but a lot of people are using jasmine as their testing framework on top of that so the syntax is very familiar across the to",
    "start": "395450",
    "end": "402110"
  },
  {
    "text": "there's other ones you can use if you are used to using say mocker and sign-on you could do that and more frequently",
    "start": "402110",
    "end": "408590"
  },
  {
    "text": "I've seen people wanting to use jest and I've really enjoyed using just for running tests because they're much much",
    "start": "408590",
    "end": "413600"
  },
  {
    "text": "faster and also running an ode you don't have to worry and you see I process about having chrome setup and other",
    "start": "413600",
    "end": "419480"
  },
  {
    "text": "sorts of things but that's still you're still way out on the fringes if you're using just with your angular by far and",
    "start": "419480",
    "end": "424580"
  },
  {
    "text": "away it's almost like 99% of people using jasmine and karma and everyone's",
    "start": "424580",
    "end": "431750"
  },
  {
    "text": "using angular utilities so what does Jasmine look like well if you look at an individual JavaScript test they very",
    "start": "431750",
    "end": "438230"
  },
  {
    "text": "often look like this where you'd have an it or a single speck or a test that some of the words you'll hear and they will",
    "start": "438230",
    "end": "444380"
  },
  {
    "text": "take two arguments in the function the first is a string which just describes the individual tests and then it takes a",
    "start": "444380",
    "end": "449780"
  },
  {
    "text": "function as the second argument where you actually do your tests and you can see here we have a Jasmine matcher with",
    "start": "449780",
    "end": "455330"
  },
  {
    "text": "the dot two equal but there's a whole bunch of other kind of helping matches from the Jasmine library or oh yeah",
    "start": "455330",
    "end": "462140"
  },
  {
    "text": "library and then you would normally wrap this test in a describe block which is where you'd have a suite of tests so",
    "start": "462140",
    "end": "467480"
  },
  {
    "text": "inside this describe block which also takes two arguments of a string describing the set of tests and the",
    "start": "467480",
    "end": "473419"
  },
  {
    "text": "actual function that is where you put all your tests so you might end up having a couple of tests inside these",
    "start": "473419",
    "end": "478880"
  },
  {
    "text": "describe blocks and you often end up nesting more described blocks inside of this described block so if you were testing say a logout function you might",
    "start": "478880",
    "end": "486169"
  },
  {
    "text": "have another described block just for that logout function because you'll have four tests around that one particular function so it ends up being a nested",
    "start": "486169",
    "end": "492979"
  },
  {
    "text": "structure but that's the kind of the basics so comas a test runner that runs in the terminal and you can run it on",
    "start": "492979",
    "end": "499610"
  },
  {
    "text": "your CI processes and you'll get this output like this in the terminal we'll say it's executed say for example six of",
    "start": "499610",
    "end": "505970"
  },
  {
    "text": "six tests and most people tend to run this on another screen just so they can",
    "start": "505970",
    "end": "511190"
  },
  {
    "text": "have some room and then you've got protractor and that's very similar but the way that it actually runs your test",
    "start": "511190",
    "end": "516349"
  },
  {
    "text": "is fundamentally different and we'll be running some of these tests today so here you can see it's running in the terminal and it's showing kind of that",
    "start": "516349",
    "end": "522710"
  },
  {
    "text": "behavior driven development kind of wording there so the the describe blockers page colon joke page and then",
    "start": "522710",
    "end": "528830"
  },
  {
    "text": "the next part of it down here is the individual tests running so one of my other favorite testing tools is Duncan",
    "start": "528830",
    "end": "538700"
  },
  {
    "text": "is such a fanboy of wallaby that he actually got them to make stickers wallaby stickers in the world I actually",
    "start": "538700",
    "end": "545160"
  },
  {
    "text": "have a whole bunch of them here if anybody wants a wallaby sticker later they can come get one but what the it",
    "start": "545160",
    "end": "550949"
  },
  {
    "text": "who's used wallaby who's heard of wallaby oh yes so it's getting more popular so it's a hundred bucks I'll",
    "start": "550949",
    "end": "557490"
  },
  {
    "text": "just get that out there every year you've got to be into it but it's great if you're riding lots of tests or there you really value testing and then it can",
    "start": "557490",
    "end": "564720"
  },
  {
    "text": "be worth it so this is what it gives you on the left-hand side of these tests here you can see you've got a couple of green and red dots so the red ones",
    "start": "564720",
    "end": "569850"
  },
  {
    "text": "failing over here and then on the other side you can see that it is expected to be three so what you'd get in the",
    "start": "569850",
    "end": "575790"
  },
  {
    "text": "terminal you get right here there's a bunch of other benefits you get a lot of test coverage tools and other sorts of things but that's kind of the real big",
    "start": "575790",
    "end": "582569"
  },
  {
    "text": "bonus of using it angular CLI is also a really important testing tool because it",
    "start": "582569",
    "end": "587579"
  },
  {
    "text": "comes with all the live they're testing harness setup so rather than having to go set up all of these tools and get",
    "start": "587579",
    "end": "593579"
  },
  {
    "text": "them to work together you can just turn on the CLI and run so it's a great way to learn to test but it's also great for",
    "start": "593579",
    "end": "598589"
  },
  {
    "text": "client projects and real projects and we we pretty much run the CLR and everything we do so in summary for the",
    "start": "598589",
    "end": "605699"
  },
  {
    "text": "tools we think the CLI is awesome and that you should be using it for most projects and that karma and protractor",
    "start": "605699",
    "end": "611939"
  },
  {
    "text": "and Jasmine really are the default for the community at the moment and that you should check out wallaby jeaious that's",
    "start": "611939",
    "end": "617399"
  },
  {
    "text": "pretty cool and can help out and we'll be using it a bunch today so you'll get to see it so let's move on to talk about",
    "start": "617399",
    "end": "622439"
  },
  {
    "text": "jasmine for a second and let's jump in and actually write some tests so we've got this very simple application we're",
    "start": "622439",
    "end": "629100"
  },
  {
    "text": "gonna write some tests around today it's a Chuck Norris jokes application and you can click the button that shows the next joke and the reason I like this",
    "start": "629100",
    "end": "635999"
  },
  {
    "text": "for showing testing is because it's it's ink insanely simple to understand what it's doing it's just a component and",
    "start": "635999",
    "end": "641459"
  },
  {
    "text": "you've got some button clicks which talk to a component that talked to an angular service that talked to a back-end and then you've got to think about how do",
    "start": "641459",
    "end": "647610"
  },
  {
    "text": "you deal with all of those dependencies and fake out the things that you want to fake out and all talk about your choices of how you do that so it's very simple",
    "start": "647610",
    "end": "654629"
  },
  {
    "text": "to understand but we'll talk about the different practices you can use okay so",
    "start": "654629",
    "end": "660209"
  },
  {
    "text": "let's jump over into the idea and let's actually run a couple of tests if I come over into Visual Studio code here you",
    "start": "660209",
    "end": "666329"
  },
  {
    "text": "can see that we have a very vanilla angular CLI project that we've used to make it and if we open up the source",
    "start": "666329",
    "end": "673709"
  },
  {
    "text": "folder we have this app folder and inside of here we have a joke feature and this joke feature just has a joke",
    "start": "673709",
    "end": "679170"
  },
  {
    "text": "component TS file a joke service and it has a spec file and we'll show you more",
    "start": "679170",
    "end": "685079"
  },
  {
    "text": "of the joke component but I'm just going to write some of the simplest test we can in angular for now so if we open up",
    "start": "685079",
    "end": "690509"
  },
  {
    "text": "this dot spec dot CSV file and the build tool is looking for anything that ends in dot spec TS so that's how it knows to",
    "start": "690509",
    "end": "696419"
  },
  {
    "text": "run Carmen knows to run these files when you ask to run your unit tests so if I",
    "start": "696419",
    "end": "701669"
  },
  {
    "text": "give us a bit more room here I'm going to come in and write a describe block and I'm going to say that we're going to be testing a suite of tests here so the",
    "start": "701669",
    "end": "709769"
  },
  {
    "text": "name I'm going to give we're going to be testing a component here and we're going",
    "start": "709769",
    "end": "716040"
  },
  {
    "text": "to be testing the joke component and then down in here I can do an individual it block and or just a test and I'm",
    "start": "716040",
    "end": "722399"
  },
  {
    "text": "going to start off with something very simple and say that it should add one plus one here and then down in here I",
    "start": "722399",
    "end": "727559"
  },
  {
    "text": "can do a Jasmine expectation and I can say that I expect one plus one equal three so of course this is going to fail",
    "start": "727559",
    "end": "734129"
  },
  {
    "text": "and I can open up the terminal at the bottom and I can run ng to get a hold of the angular CLI and then just run test",
    "start": "734129",
    "end": "740369"
  },
  {
    "text": "and it's going to kick off karma and Karma's going to build our app and run our tests so in this case we expect it",
    "start": "740369",
    "end": "747419"
  },
  {
    "text": "to fail and sometimes I don't mind these sort of sanity tests in my application because when you've got lots of",
    "start": "747419",
    "end": "752999"
  },
  {
    "text": "dependencies to configure and lots of services to fake and other sorts of things sometimes a simple test like this",
    "start": "752999",
    "end": "758519"
  },
  {
    "text": "can be nice just to see that it's running and you've got all your dependencies lined up so down here you can see that it executed one of one",
    "start": "758519",
    "end": "764429"
  },
  {
    "text": "tests and it failed this is your default experience with the CLI and it expected",
    "start": "764429",
    "end": "769470"
  },
  {
    "text": "to to equal three so I could come up here and fix this and then it will just rerun because it's comments watching by",
    "start": "769470",
    "end": "775919"
  },
  {
    "text": "default it'll watch the file save because I'm automatically saving in Visual Studio code and then it's saying",
    "start": "775919",
    "end": "781079"
  },
  {
    "text": "one of one successful so I'm gonna kill this now kill the terminal and I'm just going to push command shift equals to",
    "start": "781079",
    "end": "787709"
  },
  {
    "text": "open the Wallaby shortcuts and then push start so now we'll just run the rest of the demo with wallaby but pretty much",
    "start": "787709",
    "end": "793410"
  },
  {
    "text": "it's doing the same thing it's just running your tests but it gives you a feedback right now and in the IDE straightaway and you can get it for like",
    "start": "793410",
    "end": "799589"
  },
  {
    "text": "visual studio and web pack and a bunch of not web pack crossing over here a web storm there's a whole bunch of different",
    "start": "799589",
    "end": "805889"
  },
  {
    "text": "ideas that works for so if I change this to be equal to three you'll see will fail and show you the thing there",
    "start": "805889",
    "end": "812070"
  },
  {
    "text": "and then if I change it back it'll rerun and it's quite fast it's usually faster than your experience with running Jazmin",
    "start": "812070",
    "end": "820649"
  },
  {
    "text": "and karma but it feels a little bit as fast as Jess which is super fast so I'm going to come down and write the world's",
    "start": "820649",
    "end": "825720"
  },
  {
    "text": "simplest angular test now so I'm going to do another it block here I'm going to say that it should have a title of let's",
    "start": "825720",
    "end": "834810"
  },
  {
    "text": "say Chuck Norris jokes here Chuck Norris jokes and just going to",
    "start": "834810",
    "end": "841410"
  },
  {
    "text": "copy this so we can test against it so down in here I'm going to have a constant here for our component",
    "start": "841410",
    "end": "848300"
  },
  {
    "text": "component and this is going to be equal to a new joke component and this joke",
    "start": "848300",
    "end": "854850"
  },
  {
    "text": "component has a dependency on the joke service so I'm going to get this red squiggly here because it's saying oh you",
    "start": "854850",
    "end": "860190"
  },
  {
    "text": "got to pass in something for this dependency in the constructor of the joke service we need to talk a whole bunch about this but for now I'm just",
    "start": "860190",
    "end": "865709"
  },
  {
    "text": "going to shortcut it and pass in null so I just want to write a really simple test I'm just going to test the title on the page or actually the title of the",
    "start": "865709",
    "end": "872910"
  },
  {
    "text": "property in the class of the component nothing to do with the HTML template yet so in here then I can do another Jasmine",
    "start": "872910",
    "end": "879570"
  },
  {
    "text": "expectation I'm just going to say that I expect my component title and I really love this every day I still get off on",
    "start": "879570",
    "end": "885600"
  },
  {
    "text": "it because we got typescript in our unit tests which is great compared to what we used to be doing so I get all this good",
    "start": "885600",
    "end": "891300"
  },
  {
    "text": "intellisense so I expect my component title is going to be equal to the string of Chuck Norris jokes and it looks like",
    "start": "891300",
    "end": "898050"
  },
  {
    "text": "wallabies frozen up I'm just going to restart that and rerun it so then you",
    "start": "898050",
    "end": "905430"
  },
  {
    "text": "can see down here it's passing it's showing me at ran it in two milliseconds but if I make this fail here we can see that it it's failing and showing us the",
    "start": "905430",
    "end": "912149"
  },
  {
    "text": "message on the side here so that's go to the simplest way you can run an angular test and I still really like that if I",
    "start": "912149",
    "end": "917910"
  },
  {
    "text": "don't have to deal with the HTML and I've just got a really simple service but you'll see us get into more complicated tests now as we move forward",
    "start": "917910",
    "end": "925190"
  },
  {
    "text": "so we had a quick look at how we can just use the syntax here and we had a look at how we can just new up a",
    "start": "925190",
    "end": "931199"
  },
  {
    "text": "component or service but we'll talk more about other ways to make your dependencies for your tests so in",
    "start": "931199",
    "end": "937829"
  },
  {
    "text": "summary jasmine really is the default still for the angular community in terms of your testing framework",
    "start": "937829",
    "end": "943900"
  },
  {
    "text": "and it's more than syntax so you know there's a lot of helping functions and",
    "start": "943900",
    "end": "950380"
  },
  {
    "text": "fakes and spies and sorts of things like that which we'll show you now awesome can I just get can I switch over from",
    "start": "950380",
    "end": "957610"
  },
  {
    "text": "the hand hill to this one because I'm as I'm coding the hint this one's going to be much easier if that's okay awesome",
    "start": "957610",
    "end": "966120"
  },
  {
    "text": "excellent okay so we're going to talk about faking dependency so the faking",
    "start": "966120",
    "end": "971680"
  },
  {
    "text": "and setup of dependencies is still one of the hardest parts of testing so it doesn't matter what testing you've been",
    "start": "971680",
    "end": "977320"
  },
  {
    "text": "doing what whether it's back in testing or front-end testing if you're trying to test a unit of code and that code has a",
    "start": "977320",
    "end": "983920"
  },
  {
    "text": "lot of dependencies managing the those dependencies and testing around those dependencies is one of the greatest",
    "start": "983920",
    "end": "989980"
  },
  {
    "text": "challenges and we have that a lot when we're testing our our angular",
    "start": "989980",
    "end": "995110"
  },
  {
    "text": "applications so we're always injecting services so this is how this is the code",
    "start": "995110",
    "end": "1000150"
  },
  {
    "text": "that Duncan had we had were instantiating a joke component he was just passing in null but to be able to",
    "start": "1000150",
    "end": "1006360"
  },
  {
    "text": "do any real kind of tests we need to be able to work with that service so what's a very common pattern is that we'd go",
    "start": "1006360",
    "end": "1012000"
  },
  {
    "text": "and create a fake object we'd create our own object we'd put a function onto that",
    "start": "1012000",
    "end": "1017820"
  },
  {
    "text": "object and it would return something that we knew so that then when we're asserting against our component against",
    "start": "1017820",
    "end": "1024449"
  },
  {
    "text": "its behavior when we can expect what that dependencies behavior is going to be so we then we take that fake that we",
    "start": "1024449",
    "end": "1032160"
  },
  {
    "text": "created and we pass it into our service and we can run our tests an alternative method to creating your own fakes is to",
    "start": "1032160",
    "end": "1038160"
  },
  {
    "text": "use Jasmine spies so what we can do with the Jasmine spy is that we can take an",
    "start": "1038160",
    "end": "1043709"
  },
  {
    "text": "object pass it in and then we can put behavior or override behavior on that",
    "start": "1043709",
    "end": "1048720"
  },
  {
    "text": "object so in this case we're taking a joke service and we're saying let's get the get joke method and let's attribute",
    "start": "1048720",
    "end": "1055800"
  },
  {
    "text": "this particular behavior so it's going to return a value and the value it's going to return is an observable to fake",
    "start": "1055800",
    "end": "1061559"
  },
  {
    "text": "joke now why spies are great is they let you intercept any function call so you",
    "start": "1061559",
    "end": "1067710"
  },
  {
    "text": "can use your real service and intercept the function calls and you can override the behavior of that function",
    "start": "1067710",
    "end": "1075470"
  },
  {
    "text": "what's really great about spies is they also let you check the interaction between your class or your component and",
    "start": "1075560",
    "end": "1082740"
  },
  {
    "text": "the dependencies so we can check to see whether the joke service whether that joke method was actually called we can",
    "start": "1082740",
    "end": "1089670"
  },
  {
    "text": "check how many times it was called and we can even check what parameters were actually pass to that get joke method",
    "start": "1089670",
    "end": "1097760"
  },
  {
    "text": "let's go and have a look at what that might look like in code so I'm gonna",
    "start": "1098660",
    "end": "1104370"
  },
  {
    "text": "create a new test and the test that I'm going to create is it should set the",
    "start": "1104370",
    "end": "1109800"
  },
  {
    "text": "joke property when initialized so let's",
    "start": "1109800",
    "end": "1115500"
  },
  {
    "text": "go and just jump in and have a bit of our look at our joint component so when our joke component is initialized mg on",
    "start": "1115500",
    "end": "1121740"
  },
  {
    "text": "in it executes and we execute the get joke method the get joke method calls",
    "start": "1121740",
    "end": "1127320"
  },
  {
    "text": "our joke service cause it's Jack get joke method and it takes the observable",
    "start": "1127320",
    "end": "1132450"
  },
  {
    "text": "that it returns and then map's it into this joke property on our component so what I want to do is I want to check",
    "start": "1132450",
    "end": "1138480"
  },
  {
    "text": "when the components initialized this joke gets set the joke property gets set",
    "start": "1138480",
    "end": "1144080"
  },
  {
    "text": "so I could come down here and I could come in and like Duncan's done I could just come and instantiate a new",
    "start": "1144080",
    "end": "1150740"
  },
  {
    "text": "component but what I'm gonna do is I'm gonna lean on jasmine a little bit and I'm gonna use its before each",
    "start": "1150740",
    "end": "1156570"
  },
  {
    "text": "functionality so that I don't have to in every single test actually have to instantiate a new component so I'm going",
    "start": "1156570",
    "end": "1163410"
  },
  {
    "text": "to come up here and create declare my component at the component and I'm gonna",
    "start": "1163410",
    "end": "1170640"
  },
  {
    "text": "say it's gonna be a whoops joke component and then I'm going to use our",
    "start": "1170640",
    "end": "1177060"
  },
  {
    "text": "before each to say when I come in say that my component is equal to a new joke",
    "start": "1177060",
    "end": "1185430"
  },
  {
    "text": "component and just like Duncan did for the moment I'm gonna pass him null and now because I've done that I can come",
    "start": "1185430",
    "end": "1191280"
  },
  {
    "text": "and remove the instantiation of my component from out of the test and Duncan's test will still pass okay so I",
    "start": "1191280",
    "end": "1197910"
  },
  {
    "text": "don't need to do that now down in my test so our test we're looking to set the joke property when it's initialized",
    "start": "1197910",
    "end": "1204450"
  },
  {
    "text": "so I want to come in here and I on my component I want to call the ng on method which is what happens when it's",
    "start": "1204450",
    "end": "1210760"
  },
  {
    "text": "initialized and then I want to do an assertion and I'm going to expect that the components joke property is equal to",
    "start": "1210760",
    "end": "1218920"
  },
  {
    "text": "something that I know so fake something okay now how am I going to do",
    "start": "1218920",
    "end": "1224920"
  },
  {
    "text": "that I'm going to inject a dependency into my joke component for my service so",
    "start": "1224920",
    "end": "1230170"
  },
  {
    "text": "I'm going to come up and I'm going to create a fake joke service fake joke",
    "start": "1230170",
    "end": "1236020"
  },
  {
    "text": "service and I'm going to say just my fake joke service can be in any so now",
    "start": "1236020",
    "end": "1241810"
  },
  {
    "text": "in Y before reach I'm going to say that my thanked joke service is an object and",
    "start": "1241810",
    "end": "1247450"
  },
  {
    "text": "on my object I'm going to come in here and I'm going to put a get joke method on it and what I'm going to do is I'm",
    "start": "1247450",
    "end": "1253750"
  },
  {
    "text": "going to say it returns an observable of",
    "start": "1253750",
    "end": "1258840"
  },
  {
    "text": "fake joke now I don't know I do I need to come up here and import of I'm just",
    "start": "1262260",
    "end": "1270460"
  },
  {
    "text": "because it's a test I'm going to import the rxjs kitchen-sink obviously wouldn't do that",
    "start": "1270460",
    "end": "1276360"
  },
  {
    "text": "oops in my actual application so now",
    "start": "1276360",
    "end": "1282250"
  },
  {
    "text": "I've got the off keyword and now what I've done now that I've got this service I can inject it into my component and I",
    "start": "1282250",
    "end": "1289060"
  },
  {
    "text": "know what that service is going to do what I call the get joke method so I can",
    "start": "1289060",
    "end": "1296410"
  },
  {
    "text": "come down here I can see that Wallabies already telling me that it's going to work because now I can check and I can",
    "start": "1296410",
    "end": "1301660"
  },
  {
    "text": "say like my joke the the joke on the component I'm going to expect to be what",
    "start": "1301660",
    "end": "1307030"
  },
  {
    "text": "I passed into it so that's using a fake object I could come in here and instead",
    "start": "1307030",
    "end": "1313570"
  },
  {
    "text": "of doing that what I'm gonna do is use a Jasmine spy so instead of creating my",
    "start": "1313570",
    "end": "1318640"
  },
  {
    "text": "own object I'm going to come in here and say that the fake joke service is equal",
    "start": "1318640",
    "end": "1324790"
  },
  {
    "text": "to jasmine dot create spy object and I'm",
    "start": "1324790",
    "end": "1332740"
  },
  {
    "text": "gonna pass in my fake joke service and then I'm gonna pass in an array and",
    "start": "1332740",
    "end": "1339710"
  },
  {
    "text": "that array is the is the methods that I want to specify on that fake joke service I'm gonna pass then get joke and",
    "start": "1339710",
    "end": "1346810"
  },
  {
    "text": "now I can attribute the behavior that I want on to that get joke method so I can",
    "start": "1346810",
    "end": "1352010"
  },
  {
    "text": "come in and go fake joke service get joke and tell it what I want to do I want to return a value and the value",
    "start": "1352010",
    "end": "1359900"
  },
  {
    "text": "that I want to return is an observable of fake joke and if everything lines up",
    "start": "1359900",
    "end": "1370930"
  },
  {
    "text": "my test is passing again so there's two ways of doing the same thing I created",
    "start": "1370930",
    "end": "1376280"
  },
  {
    "text": "an object and passed in a fake object and then I created a Jasmin spy now",
    "start": "1376280",
    "end": "1381500"
  },
  {
    "text": "what's nice about the Jasmin spy is I can come down here and remember I can I can check how my component is",
    "start": "1381500",
    "end": "1387560"
  },
  {
    "text": "interacting with that service so I can come down here and I can say expect that",
    "start": "1387560",
    "end": "1393230"
  },
  {
    "text": "my fake joke services get joke method has been called okay so it so I can now",
    "start": "1393230",
    "end": "1405980"
  },
  {
    "text": "check that interaction of my component under test with its dependency so if I",
    "start": "1405980",
    "end": "1411320"
  },
  {
    "text": "don't cut if I don't call the method by not calling on in it it's going to give me an error I can even come down here",
    "start": "1411320",
    "end": "1417230"
  },
  {
    "text": "and check how many times it's been called",
    "start": "1417230",
    "end": "1421330"
  },
  {
    "text": "so was it called three times No was it only called one time oops yes",
    "start": "1428160",
    "end": "1436500"
  },
  {
    "text": "pretty cool so we're getting a lot of extra power out of using Jasmine spies",
    "start": "1436500",
    "end": "1442289"
  },
  {
    "text": "so we had a look at injecting a fake object and then we had a look at the benefits of using Jasmine spies so the",
    "start": "1442679",
    "end": "1449350"
  },
  {
    "text": "nice thing about faking is they're isolated I'm actually going and creating an object that just has the behavior",
    "start": "1449350",
    "end": "1454780"
  },
  {
    "text": "that I need there's a few downsides you can end up with a lot of duplicated code and you can up and end up in the",
    "start": "1454780",
    "end": "1461320"
  },
  {
    "text": "situation where someone goes and updates the behavior of the service and they don't update the testing the tests",
    "start": "1461320",
    "end": "1467020"
  },
  {
    "text": "around it so you can end up shipping something into production where all of the testing is working but it's actually",
    "start": "1467020",
    "end": "1472270"
  },
  {
    "text": "not running in production because the tests haven't been updated the benefits of spying is that you've got the spying",
    "start": "1472270",
    "end": "1477850"
  },
  {
    "text": "functionality and assertions and you end up with cleaner code so it's important",
    "start": "1477850",
    "end": "1483370"
  },
  {
    "text": "to know that I've given you two strategies and two different tools and you need to have both of them on your tool belt both of them you'll need in",
    "start": "1483370",
    "end": "1490090"
  },
  {
    "text": "different circumstances and the faking and setting up of dependencies is still one of the hardest parts of unit testing",
    "start": "1490090",
    "end": "1497850"
  },
  {
    "text": "which is convenient cuz that's where we're up to so let's talk about the testbed API because that's one of the",
    "start": "1503070",
    "end": "1509020"
  },
  {
    "text": "newer parts in angular at the moment so we're gonna talk about a few different",
    "start": "1509020",
    "end": "1514090"
  },
  {
    "text": "types of tests now because the test beds help us solve a different type of test so we've been writing these isolated",
    "start": "1514090",
    "end": "1519309"
  },
  {
    "text": "tests were just testing the properties and the methods on a class or it could be a component or a service and we have",
    "start": "1519309",
    "end": "1525250"
  },
  {
    "text": "no HTML template involved whereas in the community there's this concept now people talking about shallow tests where",
    "start": "1525250",
    "end": "1530860"
  },
  {
    "text": "you're testing not only the components class but also interacting with the HTML template that's involved and being able",
    "start": "1530860",
    "end": "1536740"
  },
  {
    "text": "to select the HTML template query say an element on there and check its value",
    "start": "1536740",
    "end": "1542169"
  },
  {
    "text": "then run detect changes and do some work with the test and then see if things have changed there's also integrated",
    "start": "1542169",
    "end": "1547179"
  },
  {
    "text": "tests where you're testing more of the app more components at once or the entire application but we're just going to look at isolated and shallow tests",
    "start": "1547179",
    "end": "1553750"
  },
  {
    "text": "today so we're going to use this testbed the main thing you're gonna use it for",
    "start": "1553750",
    "end": "1559669"
  },
  {
    "text": "is configuring your tests so you can come in and say testbed configure testing module and being a hint in the",
    "start": "1559669",
    "end": "1566989"
  },
  {
    "text": "name there it sets up a module for you and if you've done any angular it's just like an angular module and you can pass",
    "start": "1566989",
    "end": "1573830"
  },
  {
    "text": "in all the parts of what a normal angular module need and being an angular module what it does is it says for this",
    "start": "1573830",
    "end": "1580429"
  },
  {
    "text": "section of my code these are all the dependencies for it to be able to run so for this set of tests these are all the",
    "start": "1580429",
    "end": "1585739"
  },
  {
    "text": "dependencies for this set of tests to run and it's one of the pains in the butt of doing front-end testing and",
    "start": "1585739",
    "end": "1591049"
  },
  {
    "text": "setting up all your dependencies so this can really help so the first thing we have here is imports and that is all of",
    "start": "1591049",
    "end": "1596839"
  },
  {
    "text": "the other modules you depend on so we have HTTP dependency in our joke service so I'm just bringing an HTTP module",
    "start": "1596839",
    "end": "1603019"
  },
  {
    "text": "I have declarations and that just another fancy word for components so we",
    "start": "1603019",
    "end": "1608389"
  },
  {
    "text": "have the joke component which is what we're testing and then we have providers and that's where you register your",
    "start": "1608389",
    "end": "1613489"
  },
  {
    "text": "services your angular services so we're registering our joke service here so once we have this testbed it gives us a",
    "start": "1613489",
    "end": "1619099"
  },
  {
    "text": "hold of this fixture and that's kind of the second main reason you want to use test that is to be able to get a hold of",
    "start": "1619099",
    "end": "1624859"
  },
  {
    "text": "HTML templates not just because it's super easy to set up dependencies so you",
    "start": "1624859",
    "end": "1629960"
  },
  {
    "text": "also you can use the testbed to set up your dependencies for a service which has no template but this testbed create",
    "start": "1629960",
    "end": "1635359"
  },
  {
    "text": "component and then passing in the Joe component gives us this fixture once we have this fixture we can get the",
    "start": "1635359",
    "end": "1640399"
  },
  {
    "text": "component itself again which means we've got the properties and methods accessible but we can get this debug",
    "start": "1640399",
    "end": "1645679"
  },
  {
    "text": "element and it's this fixture debug element we can use to query the HTML template associated with the tests and",
    "start": "1645679",
    "end": "1652249"
  },
  {
    "text": "we can do a bunch of other things like run fixture dot detect changes so that after you do some things in your test it",
    "start": "1652249",
    "end": "1658489"
  },
  {
    "text": "will then go and update the change detection so the things are bound to the page again that you've done in your",
    "start": "1658489",
    "end": "1663830"
  },
  {
    "text": "tests so we can say fixture dot debug element query and we can query by CSS so",
    "start": "1663830",
    "end": "1670279"
  },
  {
    "text": "any CSS selectors you used to using you can use them here to be able to query the Dom to grab whatever you want so in",
    "start": "1670279",
    "end": "1675859"
  },
  {
    "text": "this example I'm grabbing the paragraph element and I can call dot native element if I'm running in a browser",
    "start": "1675859",
    "end": "1681440"
  },
  {
    "text": "environment to be able to interact with that P tag as if I am in the browser so",
    "start": "1681440",
    "end": "1686809"
  },
  {
    "text": "this is going to give me all the browser specific API this area for this P tag so the test but",
    "start": "1686809",
    "end": "1694400"
  },
  {
    "text": "it's really great because it can it can really help make a testing module and give you this kind of system for",
    "start": "1694400",
    "end": "1700610"
  },
  {
    "text": "building up all your dependencies for your tests because it gets much more complicated than this when you have six dependencies or six services and two or",
    "start": "1700610",
    "end": "1707030"
  },
  {
    "text": "three components and a button and the router and HTTP and all sorts of things you can query the HTML templates with it",
    "start": "1707030",
    "end": "1713840"
  },
  {
    "text": "you can run detect changes and you can do a whole bunch more so it tends to be the go-to for most of your tests but if",
    "start": "1713840",
    "end": "1720440"
  },
  {
    "text": "I can I still like to just and you up the class if it's if it's something simple so let's jump over and actually",
    "start": "1720440",
    "end": "1726230"
  },
  {
    "text": "configure our current tests to use the testbed and run a test against the HTML template and do a couple of different",
    "start": "1726230",
    "end": "1733160"
  },
  {
    "text": "tests in that way so I'm going to jump back over and I'm going to take a little bit of pleasure in getting rid of Adams",
    "start": "1733160",
    "end": "1739850"
  },
  {
    "text": "tests maybe I'm enhancing them okay so",
    "start": "1739850",
    "end": "1746090"
  },
  {
    "text": "we're gonna say that we want to have this fixture property but we're going to initialize it down below so I'm going to",
    "start": "1746090",
    "end": "1751670"
  },
  {
    "text": "say let fixture of type component fixture and the type of component fixture is going to be the joke",
    "start": "1751670",
    "end": "1757940"
  },
  {
    "text": "component and then underneath here we're going to need to get a handle on the component as well and this is going to",
    "start": "1757940",
    "end": "1764240"
  },
  {
    "text": "be of type joke component and then we're also going to get a handle on the the almost did company there and joke",
    "start": "1764240",
    "end": "1773810"
  },
  {
    "text": "service here so we want a property for the joke service and that's going to be of type joke service so if you've done",
    "start": "1773810",
    "end": "1781280"
  },
  {
    "text": "much testing you probably going war wait a second you're passing in the real service here this is a decision point for all of your teams how value do you",
    "start": "1781280",
    "end": "1788060"
  },
  {
    "text": "want to get out of your front-end testing so I'm gonna pass in the real service here but make sure that I'm",
    "start": "1788060",
    "end": "1794870"
  },
  {
    "text": "going to intercept it and I never actually call the real back-end that the service can and if I had more time that",
    "start": "1794870",
    "end": "1800030"
  },
  {
    "text": "I would also fake out the HTTP section so I really can't stuff up and call the backend but for now we're just going to",
    "start": "1800030",
    "end": "1805400"
  },
  {
    "text": "intercept all requests out to this service with the spy but I like this because one it's easier to configure but",
    "start": "1805400",
    "end": "1810860"
  },
  {
    "text": "two it's giving me a little bit of more and this is my personal opinion it's not black and white and it's not right and",
    "start": "1810860",
    "end": "1816320"
  },
  {
    "text": "wrong because then if someone changes this joke services methods and properties now my tests will break as",
    "start": "1816320",
    "end": "1822740"
  },
  {
    "text": "well because I'm actually interacting against the real joke service so this is definitely something your team is going to need to decide on",
    "start": "1822740",
    "end": "1828880"
  },
  {
    "text": "what flavor do you like to do do you want to test more of it and get a bit more kind of integration sort of testing",
    "start": "1828880",
    "end": "1833980"
  },
  {
    "text": "in a unit test but for now that's what we're going to do so I'm going to come down here and I'm going to get the test",
    "start": "1833980",
    "end": "1839500"
  },
  {
    "text": "bed and I can call configure testing module on it and that takes in an object and the first thing we're going to do is",
    "start": "1839500",
    "end": "1846930"
  },
  {
    "text": "imports which is an array and we're going to pass in the HTTP module and",
    "start": "1846930",
    "end": "1852010"
  },
  {
    "text": "then we will get declarations and that",
    "start": "1852010",
    "end": "1857170"
  },
  {
    "text": "is also an array and we only have joke component in this example and then we have our providers so you saw this",
    "start": "1857170",
    "end": "1863410"
  },
  {
    "text": "before and this is going to be the joke service that we want to register with angular inside of these providers so",
    "start": "1863410",
    "end": "1869680"
  },
  {
    "text": "once I have this I can use this test bed to initialize all those properties above so I want to get this fixture because I",
    "start": "1869680",
    "end": "1875710"
  },
  {
    "text": "want to interact with the HTML template so I'm going to say fixture is going to be equal to the test bed create a",
    "start": "1875710",
    "end": "1882010"
  },
  {
    "text": "component for me in the component I want you to make please test bed is this joke component and with that I can start",
    "start": "1882010",
    "end": "1888400"
  },
  {
    "text": "using this fixture for lots of things so next up I want to get the component and I'm going to initialize that with this",
    "start": "1888400",
    "end": "1894160"
  },
  {
    "text": "fixture and I'm going to say hey fixture can you please give me a handle on the component instance and then also I'm",
    "start": "1894160",
    "end": "1900760"
  },
  {
    "text": "going to use this test bed to get a hold of some dependency injection so this is a different way to doing dependency",
    "start": "1900760",
    "end": "1906700"
  },
  {
    "text": "injection in angular than you are angular than before so I can say that I have this joke service and it's going to",
    "start": "1906700",
    "end": "1915010"
  },
  {
    "text": "be equal to the test bed dot get and there's a whole bunch of different",
    "start": "1915010",
    "end": "1920680"
  },
  {
    "text": "helpers on this test bed this is just one of them and I want to get an instance of the joke service so I'm",
    "start": "1920680",
    "end": "1926200"
  },
  {
    "text": "going to ask it to inject that joke service so it's available in my test but now I've actually got the real service",
    "start": "1926200",
    "end": "1931270"
  },
  {
    "text": "so I've got to be careful with what I do here and I've deleted Adams service I'm also going to delete his test here just",
    "start": "1931270",
    "end": "1937570"
  },
  {
    "text": "for fun and I'm gonna come in here and make another test so I'm going to say in this one not now I'm not saying we",
    "start": "1937570",
    "end": "1943690"
  },
  {
    "text": "should initialize the property we should have the HTML template with the text",
    "start": "1943690",
    "end": "1949360"
  },
  {
    "text": "actually on that template so in here as they should have a joke bound [Music]",
    "start": "1949360",
    "end": "1955920"
  },
  {
    "text": "bound to the template so inside of here",
    "start": "1955920",
    "end": "1962020"
  },
  {
    "text": "I'm going to need to show you another way that you can use a spy same exact same thing just a different syntax so",
    "start": "1962020",
    "end": "1968080"
  },
  {
    "text": "I'm going to spy on here the company service so sorry joke service I can hear",
    "start": "1968080",
    "end": "1974530"
  },
  {
    "text": "some people helping me out here we just ran a 2-day workshop where everything was about companies so I apologize",
    "start": "1974530",
    "end": "1979600"
  },
  {
    "text": "so just switching entities in my brain so joke service here and I want to spy on the get joke method and then I can go",
    "start": "1979600",
    "end": "1988210"
  },
  {
    "text": "down here and say and dot and we'll see all the different things that are available on a spy so I could call a",
    "start": "1988210",
    "end": "1993490"
  },
  {
    "text": "fake or call through but in this case I want to return a single value so what I want to return here is going to be an",
    "start": "1993490",
    "end": "2000600"
  },
  {
    "text": "observable dot of the string of the joke so for now let's just say something",
    "start": "2000600",
    "end": "2007350"
  },
  {
    "text": "that's not looking like a joke like fake joke and then underneath here what's happened is we've just instantiated this",
    "start": "2007350",
    "end": "2012900"
  },
  {
    "text": "joke component and we've gone and make this request and the spies intercepted and given back this fake joke but that's",
    "start": "2012900",
    "end": "2019380"
  },
  {
    "text": "changes so we have to actually run detect fixture dot detects changes here so the HTML template will update so I'm",
    "start": "2019380",
    "end": "2025470"
  },
  {
    "text": "going to come in here and use this fixture again and say here that I want to save fixture detect changes and",
    "start": "2025470",
    "end": "2033840"
  },
  {
    "text": "execute that so now the HTML template will be updated with that fake joke string and then down in here I can set",
    "start": "2033840",
    "end": "2040440"
  },
  {
    "text": "up a constant joke paragraph element and it's this joke paragraph element I'm",
    "start": "2040440",
    "end": "2046230"
  },
  {
    "text": "going to use from the actual HTML so here I can say fixture oops",
    "start": "2046230",
    "end": "2053510"
  },
  {
    "text": "fixture the debug element query and I am query by dot CSS and the CSS I'm going",
    "start": "2053510",
    "end": "2062429"
  },
  {
    "text": "to query by is this P tag and then I want to get ahold of the native element of that so I'm going to need to import",
    "start": "2062429",
    "end": "2068760"
  },
  {
    "text": "by from platform - browser so this is the browser based thing and then down underneath here I'm",
    "start": "2068760",
    "end": "2076408"
  },
  {
    "text": "going to do a Jasmine expectation I'm going to expect that my joke paragraph dot text content content is going to be",
    "start": "2076409",
    "end": "2085440"
  },
  {
    "text": "equal to the string of fake jokes let's just see if this will",
    "start": "2085440",
    "end": "2091610"
  },
  {
    "text": "fail first done a whole bunch juice I'm actually just going to restart all of you for a second and that should kick",
    "start": "2091610",
    "end": "2100250"
  },
  {
    "text": "back in and say you're expecting fate to equal fake jokes so let's just finish that off and now our tests passing so",
    "start": "2100250",
    "end": "2106250"
  },
  {
    "text": "that's pretty cool we're actually grabbing the HTML template and checking the P tag so of course this is going to",
    "start": "2106250",
    "end": "2111770"
  },
  {
    "text": "be more brittle and now you're more invested in keeping up to date something that's married to the template as well but that's quite powerful so we had a",
    "start": "2111770",
    "end": "2120560"
  },
  {
    "text": "look at how we can set up the test bed in the before each and how it can be much easier to actually set up all your dependencies because when you do a lot",
    "start": "2120560",
    "end": "2127040"
  },
  {
    "text": "of angular you're making modules all the time so it's the way you used to doing it and then we were able to use a debug",
    "start": "2127040",
    "end": "2132860"
  },
  {
    "text": "element to query by that P tag so it's a pretty big API there's lots of things",
    "start": "2132860",
    "end": "2138050"
  },
  {
    "text": "you can do it at this test bed so it takes a bit of time to learn and get comfortable with but it's well worth it",
    "start": "2138050",
    "end": "2143180"
  },
  {
    "text": "use it in all your tests and it helps you make basically an NG module to set",
    "start": "2143180",
    "end": "2148610"
  },
  {
    "text": "up your two dependencies and then it runs everything in a zone and if you're a little bit like me the very first time I heard the word zone I'm like what a",
    "start": "2148610",
    "end": "2155720"
  },
  {
    "text": "zone so I'm gonna pass it over to Adam and he's going to talk about signs awesome so I'm going to talk around the",
    "start": "2155720",
    "end": "2164480"
  },
  {
    "text": "challenge and talk about the challenges around testing asynchronous code because asynchronous code eggs codes complexity",
    "start": "2164480",
    "end": "2171980"
  },
  {
    "text": "to writing your JavaScript unit tests if you've got you know it's quite simple to have a form with a button on it the",
    "start": "2171980",
    "end": "2177980"
  },
  {
    "text": "button calls a service the service makes a HTTP request which would turn something and then when you're doing",
    "start": "2177980",
    "end": "2183200"
  },
  {
    "text": "your tests you want to assert that is all about working together but the challenges around that asynchrony so",
    "start": "2183200",
    "end": "2189890"
  },
  {
    "text": "luckily so how we've been doing that in the past is with jasmine done callbacks and they work by using a promise and",
    "start": "2189890",
    "end": "2196700"
  },
  {
    "text": "then calling done the downside of jasmine done callbacks as they require chaining promises handling errors and",
    "start": "2196700",
    "end": "2203450"
  },
  {
    "text": "then calling done explicitly and while we don't actually really recommend them or like using them that much we still",
    "start": "2203450",
    "end": "2209570"
  },
  {
    "text": "need to use them sometimes around some edge cases what we've got now which",
    "start": "2209570",
    "end": "2217490"
  },
  {
    "text": "makes life a lot more fun is the a is the async method and the fake async and really the key to them is zones does",
    "start": "2217490",
    "end": "2225620"
  },
  {
    "text": "anyone want to try to scribing zones no okay",
    "start": "2225620",
    "end": "2230930"
  },
  {
    "text": "so Zames zones aren't difficult I just think they're a little misunderstood okay so here's the textbook definition",
    "start": "2230930",
    "end": "2237320"
  },
  {
    "text": "is that zones defined and executors define an execution context for",
    "start": "2237320",
    "end": "2242750"
  },
  {
    "text": "asynchronous operations so what happens when you're executing your asynchronous code in angular is it executed within a",
    "start": "2242750",
    "end": "2250010"
  },
  {
    "text": "zone so whenever you kick off an asynchronous operation like a button click what happens is a mod is a micro",
    "start": "2250010",
    "end": "2256460"
  },
  {
    "text": "task is put on a queue when that when that task completes the micro task is",
    "start": "2256460",
    "end": "2261860"
  },
  {
    "text": "taken off the queue and why that's really powerful is angular's aware of when there's outstanding asynchronous",
    "start": "2261860",
    "end": "2268580"
  },
  {
    "text": "operations now when we come to testing it gets even better so we've got the",
    "start": "2268580",
    "end": "2274310"
  },
  {
    "text": "async and the fake async keywords and what happens is when you wrap your tests in the async keyword they're now going",
    "start": "2274310",
    "end": "2281210"
  },
  {
    "text": "to execute inside a inside a testing zone so what happens now is when I do",
    "start": "2281210",
    "end": "2287180"
  },
  {
    "text": "something like do a button click in the testing zone I'm putting a micro task on the queue and I can now use fixture dot",
    "start": "2287180",
    "end": "2295250"
  },
  {
    "text": "when stable to know when all of the micro tasks have taken off the queue and all of the asynchronous operations have",
    "start": "2295250",
    "end": "2301880"
  },
  {
    "text": "completed so it's going to make our testing much easier so when we're writing a fixed it up when stable",
    "start": "2301880",
    "end": "2308120"
  },
  {
    "text": "resolves when all pending asynchronous activities within the test completes so it makes it much easier for testing",
    "start": "2308120",
    "end": "2314270"
  },
  {
    "text": "async in our angular apps now this fake async and fake async is similar to async",
    "start": "2314270",
    "end": "2322130"
  },
  {
    "text": "but we use instead of using when stable we actually use the tick method and tick",
    "start": "2322130",
    "end": "2327890"
  },
  {
    "text": "simulates the passage of time until all of the pending asynchronous requests are complete alternatively you can specify a",
    "start": "2327890",
    "end": "2335090"
  },
  {
    "text": "number of milliseconds to to simulate waiting ok so what's really nice about",
    "start": "2335090",
    "end": "2340490"
  },
  {
    "text": "fake async is instead of using result waiting for when stable it's actually a",
    "start": "2340490",
    "end": "2345710"
  },
  {
    "text": "much more linear progression through your test let's go and have a look at",
    "start": "2345710",
    "end": "2351020"
  },
  {
    "text": "what that might look like now I'm gonna do a test and I what the",
    "start": "2351020",
    "end": "2357750"
  },
  {
    "text": "test I'm going to do is I'm going to say it should get the get the next quote on",
    "start": "2357750",
    "end": "2365270"
  },
  {
    "text": "button click so Duncan's previous test should have a joke the end of the page",
    "start": "2365270",
    "end": "2371250"
  },
  {
    "text": "said when the page is initialized we should go out and get a joke from the service and bind it to the page and",
    "start": "2371250",
    "end": "2377250"
  },
  {
    "text": "check that and that's that was nice but I'm going to take it the next step and I'm gonna say let's do that but when the",
    "start": "2377250",
    "end": "2382799"
  },
  {
    "text": "buttons clicked it should go and get another joke and it should bind that to the page and I want to test that as well",
    "start": "2382799",
    "end": "2388410"
  },
  {
    "text": "now Duncan keeps deleting all my code but I'm more of a copy his code and",
    "start": "2388410",
    "end": "2393720"
  },
  {
    "text": "still it kind of a guy so I'm gonna take the code off his previous test and then I'm gonna go and make it better so what",
    "start": "2393720",
    "end": "2400680"
  },
  {
    "text": "he was doing was he was creating the spy then he was doing a round of change detection he was getting a handle on the",
    "start": "2400680",
    "end": "2406470"
  },
  {
    "text": "joke paragraph and checking the tax I'm now gonna go and get a handle on the button so I'm gonna I'm gonna create the",
    "start": "2406470",
    "end": "2413640"
  },
  {
    "text": "button I'm gonna say fixture debug element and I'm gonna do a query by CSS",
    "start": "2413640",
    "end": "2422869"
  },
  {
    "text": "for a button and then I'm gonna get the native element and what's really cool is",
    "start": "2422869",
    "end": "2429059"
  },
  {
    "text": "I can just go button dot click so I've now simulated close I've now actually clicked the button so what I'm going to",
    "start": "2429059",
    "end": "2436049"
  },
  {
    "text": "do now is I'm going to come in I'm gonna need to do another round of change detection so I'm going to do it detect",
    "start": "2436049",
    "end": "2441390"
  },
  {
    "text": "changes and now I'm going to do my assertion and I'm gonna say that I want",
    "start": "2441390",
    "end": "2448319"
  },
  {
    "text": "my joke paragraphs text content to be equal to something else",
    "start": "2448319",
    "end": "2456680"
  },
  {
    "text": "okay but at the moment my return value is only returning a single value and I'm",
    "start": "2456680",
    "end": "2463049"
  },
  {
    "text": "going to go and query the service twice what's with the page loads and once when I hit the button so I'm gonna change",
    "start": "2463049",
    "end": "2468210"
  },
  {
    "text": "that to return values and then I'm gonna come in here and put another value in",
    "start": "2468210",
    "end": "2475010"
  },
  {
    "text": "what I'd really like to be able to do is come in here and go observable of fake",
    "start": "2475010",
    "end": "2480839"
  },
  {
    "text": "joke too and put a delay on it of say two milliseconds because that would be a",
    "start": "2480839",
    "end": "2486000"
  },
  {
    "text": "cool test to simulate waiting longer on the second one I'm not gonna call it a bug but",
    "start": "2486000",
    "end": "2491090"
  },
  {
    "text": "let's say that there's still some work going on to make that happen for me so",
    "start": "2491090",
    "end": "2497150"
  },
  {
    "text": "what I'm going to do instead is I'm going to come in and I'm gonna do an observable timer and I'm gonna say wait",
    "start": "2497150",
    "end": "2502780"
  },
  {
    "text": "2,000 milliseconds and then do a map and what I'm gonna do after my map is then",
    "start": "2502780",
    "end": "2509300"
  },
  {
    "text": "I'm going to return fake joke - okay and",
    "start": "2509300",
    "end": "2519230"
  },
  {
    "text": "that'll do the same that'll do the same thing so now the first time I request something from the service it'll return",
    "start": "2519230",
    "end": "2524540"
  },
  {
    "text": "fake joke the second time it's going to wait two seconds and then return fake joke - now you can see here I'm having",
    "start": "2524540",
    "end": "2534140"
  },
  {
    "text": "some issues obviously so the buttons getting clicked I'm doing detect changes and I'm still getting the initial fake",
    "start": "2534140",
    "end": "2539450"
  },
  {
    "text": "joke because it's waiting two seconds to send me the second message does that",
    "start": "2539450",
    "end": "2544910"
  },
  {
    "text": "make sense so what I want to do is I want to take control so I'm gonna wrap the whole test",
    "start": "2544910",
    "end": "2553060"
  },
  {
    "text": "in fake ASIC okay and that's going to",
    "start": "2553060",
    "end": "2561050"
  },
  {
    "text": "give me the ability to actually take a whole word on there",
    "start": "2561050",
    "end": "2568510"
  },
  {
    "text": "I missed it",
    "start": "2571520",
    "end": "2576760"
  },
  {
    "text": "I think you put it on the very bottom closing the hole",
    "start": "2578430",
    "end": "2584480"
  },
  {
    "text": "there we go it looks like the Kampala was just ah no no I've taken it off all",
    "start": "2598240",
    "end": "2604390"
  },
  {
    "text": "you think it's waiting for me I try again",
    "start": "2604390",
    "end": "2610380"
  },
  {
    "text": "the suspense suspense there we go that's better I actually was put in the wrong spot",
    "start": "2617079",
    "end": "2622209"
  },
  {
    "text": "okay awesome so now what I've done is I've wrapped the whole method in fake async and what wrapping the whole method",
    "start": "2622209",
    "end": "2628479"
  },
  {
    "text": "in fake async gives me the ability to do is to come in here and go after I click",
    "start": "2628479",
    "end": "2633759"
  },
  {
    "text": "the button what I want to do is I want to come and wait let's wait those let's",
    "start": "2633759",
    "end": "2639969"
  },
  {
    "text": "wait two seconds and see and I'll need to import tick I'm getting back its now",
    "start": "2639969",
    "end": "2650439"
  },
  {
    "text": "it's so now it's simulate simulating waiting the two seconds and now I'm getting back what I would expect which",
    "start": "2650439",
    "end": "2656649"
  },
  {
    "text": "is fake joke - and my test is passing so the fake async method lets me control",
    "start": "2656649",
    "end": "2663459"
  },
  {
    "text": "simulator time what's really cool is that even though I haven't I'm just going to call out even though I've got a",
    "start": "2663459",
    "end": "2668799"
  },
  {
    "text": "two-second wait it only took 30 seconds - 36 milliseconds to execute the test",
    "start": "2668799",
    "end": "2674829"
  },
  {
    "text": "because fake async is working with simulated time now I'm gonna show you a very similar test I'm gonna do exactly",
    "start": "2674829",
    "end": "2680619"
  },
  {
    "text": "the same thing but I'm going to do it with async instead of fake async so I'm",
    "start": "2680619",
    "end": "2692049"
  },
  {
    "text": "just gonna import async and remember I said instead of using tick a the async",
    "start": "2692049",
    "end": "2698769"
  },
  {
    "text": "users fixtured dot when stable and I do",
    "start": "2698769",
    "end": "2706809"
  },
  {
    "text": "I'm gonna say then and what I'm going to do is I'm going to move my detect",
    "start": "2706809",
    "end": "2714939"
  },
  {
    "text": "changes and my assertion up into when",
    "start": "2714939",
    "end": "2720789"
  },
  {
    "text": "stable",
    "start": "2720789",
    "end": "2723449"
  },
  {
    "text": "extra bracket oh not having luck with",
    "start": "2728160",
    "end": "2735940"
  },
  {
    "text": "brackets now am i there we go okay so",
    "start": "2735940",
    "end": "2743410"
  },
  {
    "text": "and I can't so I'm gonna use when stable now because I'm using an async method instead of tick and you'll see in a",
    "start": "2743410",
    "end": "2749830"
  },
  {
    "text": "second when it reloads that my test is passing okay so it's doing the same thing but now I don't have that linear",
    "start": "2749830",
    "end": "2756010"
  },
  {
    "text": "progression the other interesting thing as you can see my async test is actually using real",
    "start": "2756010",
    "end": "2762070"
  },
  {
    "text": "time so it's actually taking the field two seconds to execute so we had a look",
    "start": "2762070",
    "end": "2771070"
  },
  {
    "text": "at using the async wrapper calling the button click and then using fixture dot when stable to resolve our async tests",
    "start": "2771070",
    "end": "2777940"
  },
  {
    "text": "as well as using fake async and using the tick method the benefit of async is",
    "start": "2777940",
    "end": "2783460"
  },
  {
    "text": "it really does simplify coding our asynchronous tests I prefer fake async a lot of the time",
    "start": "2783460",
    "end": "2789340"
  },
  {
    "text": "because the tests appear to be asynchronous the challenge with fake async though is that there's some",
    "start": "2789340",
    "end": "2794620"
  },
  {
    "text": "situations where it doesn't work for example you can't make xhr requests so",
    "start": "2794620",
    "end": "2801730"
  },
  {
    "text": "in summary testing is still writing testing codes can still be a little edgy",
    "start": "2801730",
    "end": "2808200"
  },
  {
    "text": "and but the new helpers that we've got around with async and fake async make",
    "start": "2808200",
    "end": "2814180"
  },
  {
    "text": "life a lot easier so these bits are cool and we're looking at writing unit tests",
    "start": "2814180",
    "end": "2820540"
  },
  {
    "text": "but let's actually shift gear a little bit now and let's actually write a couple of end-to-end tests to finish up",
    "start": "2820540",
    "end": "2826540"
  },
  {
    "text": "so the intent tests ensure that integrated components function is expected so you've got to take that mind",
    "start": "2826540",
    "end": "2833500"
  },
  {
    "text": "shift of going what I'm really doing here is running the entire up in the browser I could not actually know that",
    "start": "2833500",
    "end": "2838510"
  },
  {
    "text": "it's angular in a way and then I'm selecting things off the page and checking that they're actually what",
    "start": "2838510",
    "end": "2844060"
  },
  {
    "text": "they're meant to be so usually they're very different they run a lot slower usually tend to run them when you're checking in your code or when you're",
    "start": "2844060",
    "end": "2850210"
  },
  {
    "text": "actually writing them you don't let them sit there spinning away like when you're writing you or if you're going to be doing test-driven development sort of",
    "start": "2850210",
    "end": "2855970"
  },
  {
    "text": "thing and usually you're testing more users story where they login navigate to a page click a button so it's a very",
    "start": "2855970",
    "end": "2862700"
  },
  {
    "text": "different motivation for these tests so let's go write some very simple tests around and to enter around the testing",
    "start": "2862700",
    "end": "2870560"
  },
  {
    "text": "the joke title and also around the joke button so it's kind of similar to what we did with our unit tests in a way so",
    "start": "2870560",
    "end": "2876980"
  },
  {
    "text": "if we jump back over to Visual Studio code here I'm going to close this down and just open back up Explorer here and",
    "start": "2876980",
    "end": "2883010"
  },
  {
    "text": "you can see at the very top we have this e to e folder and that was put there by the angular CLI and you get a default",
    "start": "2883010",
    "end": "2889460"
  },
  {
    "text": "test out-of-the-box I renamed it to be jokey - E - spec PS but if we open this",
    "start": "2889460",
    "end": "2896780"
  },
  {
    "text": "up we can see here that it's empty and the very first thing I'm going to need to do is import a couple of helpers here",
    "start": "2896780",
    "end": "2902750"
  },
  {
    "text": "and I'm gonna get these from protractor because that's what we use for writing",
    "start": "2902750",
    "end": "2908270"
  },
  {
    "text": "these tests so I want to get element and so I can select some elements I want to get by so I can actually do that CSS",
    "start": "2908270",
    "end": "2914510"
  },
  {
    "text": "selecting and I also want to get a browser helper so I can navigate around so then I need to make another describe",
    "start": "2914510",
    "end": "2921349"
  },
  {
    "text": "block so you can see what using jasmine again so it feels very familiar so here but my motivation is really",
    "start": "2921349",
    "end": "2927230"
  },
  {
    "text": "different now what I'm actually testing is a page or a set of pages in a lot of cases in this case we're testing the",
    "start": "2927230",
    "end": "2933079"
  },
  {
    "text": "joke page and I like to think about it like a page versus a component because I'll have lots of components on a page",
    "start": "2933079",
    "end": "2938329"
  },
  {
    "text": "normally so in this case down here I can come down and make another individual",
    "start": "2938329",
    "end": "2943819"
  },
  {
    "text": "spec here and I'm going to say that it should have a title of the similar sort",
    "start": "2943819",
    "end": "2948920"
  },
  {
    "text": "of thing here of Chuck Norris jokes and",
    "start": "2948920",
    "end": "2954410"
  },
  {
    "text": "I'm gonna grab that like we did before just so we've got the same thing again so down in here what I'll kick off by",
    "start": "2954410",
    "end": "2960920"
  },
  {
    "text": "saying hey browser can you go get to a URL for me and I just want to go to the",
    "start": "2960920",
    "end": "2966050"
  },
  {
    "text": "base URL for application we actually have no routing because it's a really simple app just go load the page and",
    "start": "2966050",
    "end": "2971900"
  },
  {
    "text": "navigate to here and then what I want to do next is I want to get a hold of our title so I'm going to set a constant of",
    "start": "2971900",
    "end": "2978380"
  },
  {
    "text": "title and this is going to be equal to element by dot CSS and I want to grab",
    "start": "2978380",
    "end": "2984950"
  },
  {
    "text": "the h1 element because that's what we've got our title of our application in and then once I've got a handle on that I'm",
    "start": "2984950",
    "end": "2990619"
  },
  {
    "text": "going to use the text function to be able to actually get the text so you can see the syntax is",
    "start": "2990619",
    "end": "2996590"
  },
  {
    "text": "slightly different here from protractor for the helpers but it feels very very similar then once I have this then I can",
    "start": "2996590",
    "end": "3002860"
  },
  {
    "text": "do a Jasmine expectation again and say that I expect my title to equal the Chuck Norris jokes here and missing the",
    "start": "3002860",
    "end": "3011680"
  },
  {
    "text": "quote on the end there now I don't have any whiz-bang wallaby here to spin this up and run really fast because that's not what end-to-end tests do or how they",
    "start": "3011680",
    "end": "3018250"
  },
  {
    "text": "work I have to actually run this and it fires up the browser so I'm going to give us a bit of room and move this over to come out of full screen and move this",
    "start": "3018250",
    "end": "3025120"
  },
  {
    "text": "over to the side here just get rid of these and if you're very fast like",
    "start": "3025120",
    "end": "3030190"
  },
  {
    "text": "Superman you'll see when I run an NG eatery down here in the terminal you'll see it'll spin up the browser on the",
    "start": "3030190",
    "end": "3035830"
  },
  {
    "text": "side the default is going to be chrome and it's going to navigate to the root of the application and then it's going",
    "start": "3035830",
    "end": "3042130"
  },
  {
    "text": "to query by CSS for the h1 tag and then see if it equals Chuck Norris jokes so it spins up runs checks it doesn't seem",
    "start": "3042130",
    "end": "3055300"
  },
  {
    "text": "to be able to find it slow Superman and we have an error so error is timeout",
    "start": "3055300",
    "end": "3066790"
  },
  {
    "text": "failure interesting let's kill that down",
    "start": "3066790",
    "end": "3074560"
  },
  {
    "text": "and let's actually run that one more time so ng e to e and let me just glance over this note you can do by CSS dot get",
    "start": "3074560",
    "end": "3085930"
  },
  {
    "text": "text and element title let's have one we'll run it it looks down into the",
    "start": "3085930",
    "end": "3094510"
  },
  {
    "text": "terminal here I want to go",
    "start": "3094510",
    "end": "3097980"
  },
  {
    "text": "time for a cup of coffee runs now it looks like it's stalling to query for it",
    "start": "3105690",
    "end": "3111779"
  },
  {
    "text": "and find it which is kind of interesting I browser protractors felt right found",
    "start": "3111779",
    "end": "3120210"
  },
  {
    "text": "time out waiting to find it so unfortunately my demo here for the last demo of the day's failing on us but",
    "start": "3120210",
    "end": "3127289"
  },
  {
    "text": "we've been pretty lucky so far I don't think we're going to want to watch me",
    "start": "3127289",
    "end": "3133349"
  },
  {
    "text": "debug a test live but some people might go yeah this is where the action happens this is the current page is not an",
    "start": "3133349",
    "end": "3139349"
  },
  {
    "text": "angular application",
    "start": "3139349",
    "end": "3141980"
  },
  {
    "text": "we are going to so we're going to take questions straight after the talk outside and if work out what the issue",
    "start": "3152330",
    "end": "3159990"
  },
  {
    "text": "is you can come and join him but you can basically see the gist of how these",
    "start": "3159990",
    "end": "3165150"
  },
  {
    "text": "tests work here so you'll navigate to the page you want to get and you'll use these helpers to select queries off the",
    "start": "3165150",
    "end": "3170940"
  },
  {
    "text": "page and your one these tests so I think most likely my problem here with my test is probably something to do with my",
    "start": "3170940",
    "end": "3176130"
  },
  {
    "text": "dependencies or something else here versus the actual code in the screen because I've run this a bunch of times",
    "start": "3176130",
    "end": "3181940"
  },
  {
    "text": "but if we move back here over to our slides we did have a quick look at how we can run a test and we use the similar",
    "start": "3181940",
    "end": "3188520"
  },
  {
    "text": "syntax here to actually and you can see the exact code here so by dot CSS here",
    "start": "3188520",
    "end": "3194190"
  },
  {
    "text": "for the h1 and then we're expecting the title to equal and you can also run other tests so in this case here what",
    "start": "3194190",
    "end": "3200520"
  },
  {
    "text": "I'm doing is I'm navigating to the root of the application and then I'm",
    "start": "3200520",
    "end": "3205950"
  },
  {
    "text": "selecting the first joke and then I'm doing a button click and then selecting the second joke and expecting that the",
    "start": "3205950",
    "end": "3211800"
  },
  {
    "text": "second joke will have been set onto the page so you kind of end up doing a few different things here in these end-to-end tests that you do so in",
    "start": "3211800",
    "end": "3220620"
  },
  {
    "text": "summary they're not a unit test they run in the browser and they usually test a much more broader user story your",
    "start": "3220620",
    "end": "3226290"
  },
  {
    "text": "motives for writing you for an end-to-end test they're going to be very different than testing a function and they help save a lot of manual testing",
    "start": "3226290",
    "end": "3233400"
  },
  {
    "text": "you imagine you can automate a lot of this across multiple browsers and very aggression testing and large code bases",
    "start": "3233400",
    "end": "3238980"
  },
  {
    "text": "they can be super invaluable and that kind of leaves us with like our summary of testing in our teams I guess is",
    "start": "3238980",
    "end": "3245400"
  },
  {
    "text": "testing something that the whole team needs to practice and it's something they need to practice regularly it's not super difficult to do but if you're not",
    "start": "3245400",
    "end": "3252450"
  },
  {
    "text": "doing it regularly enough you tend to be under pressure at work and you don't want to jump in and write the test because you're running out of time but",
    "start": "3252450",
    "end": "3258300"
  },
  {
    "text": "if you do practice regularly they're not actually so difficult to to get in a habit of doing a lot of so we also run a",
    "start": "3258300",
    "end": "3265830"
  },
  {
    "text": "lot of courses a lot of two days and three day courses so we have a whole much more than we cover now in our",
    "start": "3265830",
    "end": "3271740"
  },
  {
    "text": "course work so if you want to get that for free you can use this coupon so you can see we have a whole bunch of course",
    "start": "3271740",
    "end": "3277050"
  },
  {
    "text": "work that goes through using all the things that we've demonstrated in more so if you go to courses fire bootcamp",
    "start": "3277050",
    "end": "3282660"
  },
  {
    "text": "comm you can go to end n-b-c - Sydney - 2017 is the coupon a",
    "start": "3282660",
    "end": "3288119"
  },
  {
    "text": "last for and you try and actually click on the lesson and then you can put that in that coupon and then you've got",
    "start": "3288119",
    "end": "3293400"
  },
  {
    "text": "access so I'll leave that open for a day yeah so everything you want to get don't",
    "start": "3293400",
    "end": "3299819"
  },
  {
    "text": "forget Adams favorite color is green and we love green so we had a look at the",
    "start": "3299819",
    "end": "3312599"
  },
  {
    "text": "tools that everybody's using today we had a look at jasmine and being the",
    "start": "3312599",
    "end": "3318089"
  },
  {
    "text": "testing framework we looked at how we can fake dependencies with Jasmine spires we looked at the testbed API for",
    "start": "3318089",
    "end": "3323970"
  },
  {
    "text": "helping set up our tests we had a look at async and fake async to help with",
    "start": "3323970",
    "end": "3328979"
  },
  {
    "text": "asynchrony in our tests and we had a look at a couple of end-to-end tests thank you very much guys this is our",
    "start": "3328979",
    "end": "3335819"
  },
  {
    "text": "twitter handles make sure if you say hi if you see it's a real conference and thank you very much",
    "start": "3335819",
    "end": "3342109"
  },
  {
    "text": "[Applause]",
    "start": "3342340",
    "end": "3345570"
  }
]