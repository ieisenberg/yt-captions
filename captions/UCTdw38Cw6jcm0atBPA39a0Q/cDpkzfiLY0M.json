[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "all right well let's go ahead and get started because i think it is time so good good afternoon everybody or",
    "start": "1439",
    "end": "9360"
  },
  {
    "text": "if you're in the americas good morning um i uh",
    "start": "9360",
    "end": "14719"
  },
  {
    "text": "today we're going to talk about sass and specifically all of those parts that are the less",
    "start": "14719",
    "end": "21119"
  },
  {
    "text": "common less utilized utilized part of sas that may um that you may or may not already know",
    "start": "21119",
    "end": "27439"
  },
  {
    "text": "about but are extremely powerful for uh making some really robust style",
    "start": "27439",
    "end": "32960"
  },
  {
    "text": "sheets if you have any questions during the talk feel free to ask them in slack i",
    "start": "32960",
    "end": "38320"
  },
  {
    "text": "have it open and i will look at it periodically so don't hesitate to put your questions",
    "start": "38320",
    "end": "44000"
  },
  {
    "text": "as we're talking about it especially if they're about the code that i'm showing",
    "start": "44000",
    "end": "49120"
  },
  {
    "text": "uh because it's a whole lot easier to talk about it right now when we're looking at it than trying to go back to it at the end of the session",
    "start": "49120",
    "end": "55280"
  },
  {
    "text": "um all the code that i'm showing i will make sure to have available online it's on github i'll",
    "start": "55280",
    "end": "63199"
  },
  {
    "start": "60000",
    "end": "130000"
  },
  {
    "text": "give you the link at the top at the end of the talk that way you know no need to take 50 screenshots or",
    "start": "63199",
    "end": "68720"
  },
  {
    "text": "whatever i will give you the code um so that you guys can play with it on your own and see how",
    "start": "68720",
    "end": "74159"
  },
  {
    "text": "it works i got a funny story on how i got started with sus is i actually used to really",
    "start": "74159",
    "end": "80560"
  },
  {
    "text": "not like sas i was a less person and adamantly so because i was not a ruby person and none",
    "start": "80560",
    "end": "86240"
  },
  {
    "text": "of my projects had ruby on it well that's no longer actually the case now it runs on node just fine",
    "start": "86240",
    "end": "92400"
  },
  {
    "text": "but and it's worth knowing the difference between the two a lot of the features we're talking",
    "start": "92400",
    "end": "97520"
  },
  {
    "text": "about today are in dart sass which is kind of the latest newer newest version if you're",
    "start": "97520",
    "end": "102720"
  },
  {
    "text": "still running an older version of ruby's or ruby says it won't work um a lot of these are kind of available",
    "start": "102720",
    "end": "109840"
  },
  {
    "text": "in the the most the later versions not so much the older ones worth noting that i believe that at this",
    "start": "109840",
    "end": "116479"
  },
  {
    "text": "point the ruby one is deprecated as well so always worth moving up since it's",
    "start": "116479",
    "end": "122560"
  },
  {
    "text": "you know no longer going to be supported at some point probably soon so what is sas anyway and sas is",
    "start": "122560",
    "end": "130399"
  },
  {
    "start": "130000",
    "end": "197000"
  },
  {
    "text": "technically stands for syntactically awesome style sheets i think we can all agree that they are",
    "start": "130399",
    "end": "135599"
  },
  {
    "text": "indeed awesome um and what is what it is is essentially it's a style sheet language that is",
    "start": "135599",
    "end": "142080"
  },
  {
    "text": "compiled to css yeah it allows you to use variables nested rules",
    "start": "142080",
    "end": "147599"
  },
  {
    "text": "mix-ins functions and more all with a fully css compatible",
    "start": "147599",
    "end": "155280"
  },
  {
    "text": "syntax so that's the really cool thing about about sas is that even if you don't use",
    "start": "155280",
    "end": "161040"
  },
  {
    "text": "the full breadth of sas you can write just normal css in it and it will work just fine however",
    "start": "161040",
    "end": "166800"
  },
  {
    "text": "it has a lot more one of the one of the very common narratives i often see on twitter is",
    "start": "166800",
    "end": "172560"
  },
  {
    "text": "that at this point sas is dead because cess basically has the same features as what",
    "start": "172560",
    "end": "178239"
  },
  {
    "text": "the newer features coming out with css are and we're going to get rid of it soon there's no point in continuing with",
    "start": "178239",
    "end": "183599"
  },
  {
    "text": "it yeah yeah and it's not everybody who says that but i've seen it a couple times and i hope that this presentation will show",
    "start": "183599",
    "end": "190400"
  },
  {
    "text": "you that no sus is not dead and can do a whole lot more than just css alone so there's two syntaxes when",
    "start": "190400",
    "end": "198640"
  },
  {
    "start": "197000",
    "end": "242000"
  },
  {
    "text": "you're using sas one is the scss syntax which has brackets",
    "start": "198640",
    "end": "203760"
  },
  {
    "text": "and semicolon looks a lot like css the other one is the indented syntax and",
    "start": "203760",
    "end": "209840"
  },
  {
    "text": "that one is a lot simpler and cleaner in the sense that none of the brackets are",
    "start": "209840",
    "end": "214959"
  },
  {
    "text": "there none of your semicolons are there however it's a lot more white space sensitive",
    "start": "214959",
    "end": "220319"
  },
  {
    "text": "today because it looks a lot more like css i'm going to use scss which is generally what i use in my",
    "start": "220319",
    "end": "226640"
  },
  {
    "text": "day and day life anyway but it has the advantage of looking a lot like css and so if you're not familiar with sas",
    "start": "226640",
    "end": "232640"
  },
  {
    "text": "hopefully it will help with following along and making it look a little bit more",
    "start": "232640",
    "end": "237920"
  },
  {
    "text": "familiar for you one of the big things that most people",
    "start": "237920",
    "end": "244480"
  },
  {
    "start": "242000",
    "end": "454000"
  },
  {
    "text": "know in sas is the ability to nest so the ability to nest code is really cool because it",
    "start": "244480",
    "end": "251120"
  },
  {
    "text": "allows us to very clearly indicate what our block of code really looks like",
    "start": "251120",
    "end": "256720"
  },
  {
    "text": "so what happens with that is you essentially have your ins instead of having to say",
    "start": "256720",
    "end": "264400"
  },
  {
    "text": "input um and then your class and then your your class values or input and then",
    "start": "264400",
    "end": "270320"
  },
  {
    "text": "invalid and input and hover you can all stick that in one large uh",
    "start": "270320",
    "end": "275600"
  },
  {
    "text": "one large block that is uh nested within each other the cool that's where you get into things like",
    "start": "275600",
    "end": "282080"
  },
  {
    "text": "the ampersand so see how this class invalid has the ampersand at the beginning of it that refers back to its",
    "start": "282080",
    "end": "288960"
  },
  {
    "text": "parent so the parent in this case is input it's the overarching grouping and so in this case it would be",
    "start": "288960",
    "end": "296000"
  },
  {
    "text": "one input pseudo class and valid we can we have a color of danger and a border and etc etc etc so",
    "start": "296000",
    "end": "304000"
  },
  {
    "text": "that's what the ampersand is there for it tells you that it's a reference back to the parent inside of the group",
    "start": "304000",
    "end": "311280"
  },
  {
    "text": "over here we also have the error referencing to the paragraph tag underneath and in this particular case it's a",
    "start": "311280",
    "end": "316880"
  },
  {
    "text": "paragraph tag i'm saying that hey any uh dot error after an invalid input go",
    "start": "316880",
    "end": "323440"
  },
  {
    "text": "ahead and show the error you can also do this for hover and focus",
    "start": "323440",
    "end": "328639"
  },
  {
    "text": "it's very very convenient for that because it very clearly puts your general style and then your hover",
    "start": "328639",
    "end": "334080"
  },
  {
    "text": "and focus together kind of an accessibility shout out over here anytime you do a hover you probably want",
    "start": "334080",
    "end": "339520"
  },
  {
    "text": "to do a focus as well because that way your users when they're tabbing through a form for example like",
    "start": "339520",
    "end": "344800"
  },
  {
    "text": "in this example can go ahead and get the same experience but that allows to keep those things",
    "start": "344800",
    "end": "350720"
  },
  {
    "text": "nice and grouped the downside to nesting is that it's very very easy",
    "start": "350720",
    "end": "357120"
  },
  {
    "text": "to want to nest everything so if you're talking about for example a list inside of a",
    "start": "357120",
    "end": "362880"
  },
  {
    "text": "navigation tag it's very easy to say i have a n i have my nav inside of which i last i",
    "start": "362880",
    "end": "370479"
  },
  {
    "text": "list i nest my ul in what side of which i list uh i nest my li inside of which i nest",
    "start": "370479",
    "end": "377120"
  },
  {
    "text": "my anchor tag probably not necessary but then if you look at the exported code in css",
    "start": "377120",
    "end": "384479"
  },
  {
    "text": "that ends up being nav uel lia for every single time so that becomes",
    "start": "384479",
    "end": "390639"
  },
  {
    "text": "very very specific very very quickly the problem with that level of specificity",
    "start": "390639",
    "end": "396400"
  },
  {
    "text": "is the more you nest the more specific you get the more trying to override or tweak that style",
    "start": "396400",
    "end": "402319"
  },
  {
    "text": "for a specific use case becomes difficult and that's when we can get into some real problems and you will see a number",
    "start": "402319",
    "end": "408479"
  },
  {
    "text": "of people that don't like nesting specifically because you see so much of that infinite christmas tree nesting",
    "start": "408479",
    "end": "415039"
  },
  {
    "text": "of doom that becomes very hard to override if you find yourself nesting more than two or three deep and",
    "start": "415039",
    "end": "421919"
  },
  {
    "text": "getting that really staunch christmas tree start thinking is it really necessary",
    "start": "421919",
    "end": "427360"
  },
  {
    "text": "where are some things that really don't need to be nested like that where can i flatten that tree so back to",
    "start": "427360",
    "end": "433680"
  },
  {
    "text": "our navigation example nav l nav li nav uel",
    "start": "433680",
    "end": "438960"
  },
  {
    "text": "nav a is more than plenty in terms of our nesting we don't have to have them christmas",
    "start": "438960",
    "end": "444080"
  },
  {
    "text": "trees all within each other and we can still get that nice grouping that we get out of nesting",
    "start": "444080",
    "end": "451840"
  },
  {
    "text": "the other big part that most people are familiar with in terms of sas is variables and",
    "start": "453199",
    "end": "459440"
  },
  {
    "start": "454000",
    "end": "643000"
  },
  {
    "text": "that's one of the things that was very popular made it kind of popular very early now we also have custom properties in",
    "start": "459440",
    "end": "466560"
  },
  {
    "text": "css and that's one of the arguments for people um saying that sas is dead in terms of",
    "start": "466560",
    "end": "472319"
  },
  {
    "text": "having equivalent abilities well the thing with sas variables and custom properties is",
    "start": "472319",
    "end": "479199"
  },
  {
    "text": "they really don't work the same they have in terms of their output they're very",
    "start": "479199",
    "end": "484240"
  },
  {
    "text": "very different sas variables uh which is that part that you see on the right over here in the dart with",
    "start": "484240",
    "end": "491120"
  },
  {
    "text": "the dark blue background are all compiled um down",
    "start": "491120",
    "end": "496400"
  },
  {
    "text": "to their values so when the sas is compiled into its css output you will see that the the variable gets",
    "start": "496400",
    "end": "504240"
  },
  {
    "text": "transformed into its value on the other hand with css the the value stays a variable",
    "start": "504240",
    "end": "513440"
  },
  {
    "text": "so that has this the advantage that no matter what you can change that variable value",
    "start": "513440",
    "end": "519039"
  },
  {
    "text": "dynamically and it will go ahead and change everywhere that you go ahead and reference that",
    "start": "519039",
    "end": "524720"
  },
  {
    "text": "variable in sas that's not possible because again that value gets",
    "start": "524720",
    "end": "531760"
  },
  {
    "text": "changed at compile time to whatever the value of the variable is so you get in terms of theming there's a",
    "start": "531760",
    "end": "538399"
  },
  {
    "text": "lot of differences on how these can be used if we go for the concept of a dark theme",
    "start": "538399",
    "end": "543760"
  },
  {
    "text": "for example if we go ahead and have",
    "start": "543760",
    "end": "549120"
  },
  {
    "text": "uh if we go ahead and have that um the variables for our primary to be dark",
    "start": "549120",
    "end": "555279"
  },
  {
    "text": "blue versus light blue and our in a dark theme then we can go ahead and",
    "start": "555279",
    "end": "560399"
  },
  {
    "text": "say our button no matter what has a background of primary we're reassigning based on whether or not you have a class of dark",
    "start": "560399",
    "end": "566399"
  },
  {
    "text": "it works great in sas you can't do that because that value gets gets assigned at compile time so you do",
    "start": "566399",
    "end": "573519"
  },
  {
    "text": "have to go ahead and write it in write it out and for both cases",
    "start": "573519",
    "end": "579040"
  },
  {
    "text": "the cool thing though is you can totally use both of these together to achieve a really cool and very very",
    "start": "579040",
    "end": "585360"
  },
  {
    "text": "powerful outlook because what you get is you get the benefit of being able to assign your",
    "start": "585360",
    "end": "590480"
  },
  {
    "text": "colors to variables and your all of those things we love to assign to variables",
    "start": "590480",
    "end": "595839"
  },
  {
    "text": "all of those values we don't want to remember okay i don't know about you but remembering hex colors for what my theme",
    "start": "595839",
    "end": "601120"
  },
  {
    "text": "colors are is not exactly at the top of my mind 90 of the time so i do love to put those in variables",
    "start": "601120",
    "end": "607279"
  },
  {
    "text": "and same with what is my border radius or padding for certain things i do a lot",
    "start": "607279",
    "end": "612399"
  },
  {
    "text": "of those things in variables those can then be assigned to actual css",
    "start": "612399",
    "end": "618240"
  },
  {
    "text": "variables and then saved in order for them to maintain that variable aspect and to be",
    "start": "618240",
    "end": "624320"
  },
  {
    "text": "able to achieve kind of the same results and still have the full benefits of both sides now what",
    "start": "624320",
    "end": "629839"
  },
  {
    "text": "you'll notice on that side on the right with the on the left i mean with the white",
    "start": "629839",
    "end": "635760"
  },
  {
    "text": "background you'll see that you have curly braces around my css variable",
    "start": "635760",
    "end": "642320"
  },
  {
    "text": "and what that is is just simple interpolation if we were to just assign dollar sign primary and not put",
    "start": "642320",
    "end": "648399"
  },
  {
    "start": "643000",
    "end": "700000"
  },
  {
    "text": "that pound bracket around it it would literally as a variable be assigned as",
    "start": "648399",
    "end": "654079"
  },
  {
    "text": "dollar sign primary it would take the actual string and plop it right in there which obviously isn't legit css it won't",
    "start": "654079",
    "end": "662160"
  },
  {
    "text": "work it won't do anything um what the pound brackets does is it takes the",
    "start": "662160",
    "end": "668640"
  },
  {
    "text": "value of that element and sticks it in there instead of the actual string",
    "start": "668640",
    "end": "675200"
  },
  {
    "text": "the there's a number of places where you have to do that um i'll point them out here and there um",
    "start": "675200",
    "end": "681839"
  },
  {
    "text": "but that's that's how you get the value in order in order not to just assign when you're trying to assign a",
    "start": "681839",
    "end": "688399"
  },
  {
    "text": "variable any questions so far",
    "start": "688399",
    "end": "694320"
  },
  {
    "text": "go with no since slack is being really quiet okay so what we're going to do is a lot",
    "start": "695120",
    "end": "701120"
  },
  {
    "text": "of the examples we're going to look at going forward are basically are based on this layout",
    "start": "701120",
    "end": "707120"
  },
  {
    "text": "three cards coffee cupcake and bacon because these are a few of my favorite things and so what we're going to do is",
    "start": "707120",
    "end": "715920"
  },
  {
    "text": "basically restyle this to be a little bit less boring than simple gray black and white because",
    "start": "715920",
    "end": "721040"
  },
  {
    "text": "that's kind of boring the c html for these cards is going to be the same for",
    "start": "721040",
    "end": "726560"
  },
  {
    "start": "724000",
    "end": "762000"
  },
  {
    "text": "all three you're going to have a container div with the class of whatever is part of that card so whether it's",
    "start": "726560",
    "end": "733360"
  },
  {
    "text": "coffee cupcake or bacon it's going to have a header which is going to be an h2 with a header class it's content",
    "start": "733360",
    "end": "739120"
  },
  {
    "text": "with a class of content and the button at the bottom with the class of actions",
    "start": "739120",
    "end": "744480"
  },
  {
    "text": "pretty straightforward all three cards are done exactly the same just a different class at the top you",
    "start": "744480",
    "end": "751120"
  },
  {
    "text": "know coffee cupcake versus bacon so in the more advanced stuff in css the",
    "start": "751120",
    "end": "756959"
  },
  {
    "text": "first thing i was left to show is mixins because mixins are incredibly powerful and mixins are kind of like a function",
    "start": "756959",
    "end": "764639"
  },
  {
    "start": "762000",
    "end": "901000"
  },
  {
    "text": "in a lot of way and they spit out a rule set so what happens with the mix end is you",
    "start": "764639",
    "end": "770399"
  },
  {
    "text": "have a you basically say i'm creating the mixin that's the at mixin",
    "start": "770399",
    "end": "775920"
  },
  {
    "text": "then you give it a name in this case i'm going to call it card colors and then you pass it in a value you",
    "start": "775920",
    "end": "781360"
  },
  {
    "text": "don't have to pass it in a parameter but in this case i'm going to because that's what they're really good for and",
    "start": "781360",
    "end": "786480"
  },
  {
    "text": "that's what they're really powerful for and so in this case it's going to be expecting a color so i called my very",
    "start": "786480",
    "end": "792079"
  },
  {
    "text": "my parameter my color and i'm going to say hey with this mix in i want you to take the",
    "start": "792079",
    "end": "797680"
  },
  {
    "text": "header of whatever i assign this mix into and give it a background color up that header or background of whatever",
    "start": "797680",
    "end": "804160"
  },
  {
    "text": "color i passed in the way we assign that to our cards",
    "start": "804160",
    "end": "809680"
  },
  {
    "text": "is i go say okay coffee i want you to include this mixin that's how you so you've got your",
    "start": "809680",
    "end": "817120"
  },
  {
    "text": "you've got your definition which is the app mexican the way you implement it is with at include and so the at",
    "start": "817120",
    "end": "824079"
  },
  {
    "text": "you include the name of the mix in and then whatever and you pass in whatever parameters you're going to pass",
    "start": "824079",
    "end": "830240"
  },
  {
    "text": "in in this case for coffee i'm passing in cadet blue for cupcake plum and for bacon gold",
    "start": "830240",
    "end": "836480"
  },
  {
    "text": "these are all css color names i figured that was a little bit nicer to talk through than hex codes so what we're what that's",
    "start": "836480",
    "end": "843760"
  },
  {
    "text": "going to do is i'm going to say basically i want coffee to have a header that is has a background of cat blue",
    "start": "843760",
    "end": "849600"
  },
  {
    "text": "cupcake a background of plum and bacon about header background of gold",
    "start": "849600",
    "end": "855040"
  },
  {
    "text": "what that looks like on the output and is super simple it's exactly what we",
    "start": "855040",
    "end": "860880"
  },
  {
    "text": "thought it was going to do right it's going to take that header so dot copy dot header",
    "start": "860880",
    "end": "865920"
  },
  {
    "text": "and same down the line giving it a background color what that looks like in our little ui",
    "start": "865920",
    "end": "872560"
  },
  {
    "text": "is three beautiful little cards with three beautiful little backgrounds cool that's exactly what we were",
    "start": "872560",
    "end": "877760"
  },
  {
    "text": "expecting now you'll notice in these cards that i showed you this code that's not near",
    "start": "877760",
    "end": "885519"
  },
  {
    "text": "enough code to style these cards this way there's a lot more code that went into styling these cards in terms of getting",
    "start": "885519",
    "end": "891519"
  },
  {
    "text": "them to lay out etc etc etc and i did not put that in my mixin i",
    "start": "891519",
    "end": "897040"
  },
  {
    "text": "simply put the part that was dynamic and the reason for that is that",
    "start": "897040",
    "end": "902560"
  },
  {
    "start": "901000",
    "end": "1063000"
  },
  {
    "text": "a mixin basically takes all of that code that's in that mix in",
    "start": "902560",
    "end": "908079"
  },
  {
    "text": "it all that's that if you put static code on it all of that static code it'll go ahead and assign any variables you",
    "start": "908079",
    "end": "913920"
  },
  {
    "text": "have and plops it into that rule set that you created that allows for if you're using static",
    "start": "913920",
    "end": "920800"
  },
  {
    "text": "values there what happens is you're basically duplicating that code every time you use",
    "start": "920800",
    "end": "926079"
  },
  {
    "text": "that mixin mixins are great for dynamic stuff they are not good for static stuff",
    "start": "926079",
    "end": "931920"
  },
  {
    "text": "if we're dealing with static we want to use that extend and what that does is it takes a class",
    "start": "931920",
    "end": "937440"
  },
  {
    "text": "that you've already written and it basically assigns whatever the",
    "start": "937440",
    "end": "942880"
  },
  {
    "text": "whatever that the class name is or whatever also to that class so let's look at how that works",
    "start": "942880",
    "end": "950320"
  },
  {
    "text": "let's say i have i put all of the code in the mixin so this is all of the code you would need to style the card don't bother",
    "start": "950320",
    "end": "956240"
  },
  {
    "text": "trying to read it the point is to show you that it's a lot of it and that it's long and laborious and that we don't want to duplicate it",
    "start": "956240",
    "end": "963440"
  },
  {
    "text": "what the values are doesn't really matter at this particular point in time so let's say i go ahead and make my",
    "start": "963440",
    "end": "969440"
  },
  {
    "text": "mixin called card and i go ahead and include it with all of its glory what happens is for each of our cards",
    "start": "969440",
    "end": "977120"
  },
  {
    "text": "for coffee cupcake and bacon we get that entire chunk of code so we end up with it three times if we have more cards we",
    "start": "977120",
    "end": "983600"
  },
  {
    "text": "get it as many times as we have cards that's really laborious really extensive",
    "start": "983600",
    "end": "988880"
  },
  {
    "text": "and it's gonna blow our css very very quickly if we instead go ahead",
    "start": "988880",
    "end": "994880"
  },
  {
    "text": "and use the add includes instead of defining that static code as a mixin we just define it as standard",
    "start": "994880",
    "end": "1002399"
  },
  {
    "text": "css class we go ahead and say you know what coffee cupcake and bacon i want you to extend that class",
    "start": "1002399",
    "end": "1010959"
  },
  {
    "text": "and so what happens is that card is still a class so it stays it stays around and then bacon cupcake",
    "start": "1010959",
    "end": "1018240"
  },
  {
    "text": "and coffee are also assigned to its value and so now what you have is instead of duplicating it three times",
    "start": "1018240",
    "end": "1024959"
  },
  {
    "text": "you're just keeping it once and assigning those class names or those",
    "start": "1024959",
    "end": "1030798"
  },
  {
    "text": "rule set names to whatever that class was as well and so that allows you to keep",
    "start": "1030799",
    "end": "1036240"
  },
  {
    "text": "the consistency across everything and not bloat your code so mixins great for dynamic code",
    "start": "1036240",
    "end": "1043120"
  },
  {
    "text": "extend great for static code because extend is just taking a making a reference back to a",
    "start": "1043120",
    "end": "1049120"
  },
  {
    "text": "different class right you can't pass any parameters or do any like you could do logic in it but you can't pass any parameters",
    "start": "1049120",
    "end": "1055760"
  },
  {
    "text": "does that make sense to everybody",
    "start": "1055760",
    "end": "1059200"
  },
  {
    "text": "functions color functions are the bomb and where there's a lot of them i i",
    "start": "1062160",
    "end": "1068080"
  },
  {
    "start": "1063000",
    "end": "1105000"
  },
  {
    "text": "listed them out here where i'm not going to go through each and every color function and what they do because that would be boring and you",
    "start": "1068080",
    "end": "1074240"
  },
  {
    "text": "guys can read a spec like the best of them um but i am going to use some here and",
    "start": "1074240",
    "end": "1079440"
  },
  {
    "text": "there as we're talking through examples because they're super awesome and that is one of the things that",
    "start": "1079440",
    "end": "1085600"
  },
  {
    "text": "it can do that css can't do so color functions usually what they",
    "start": "1085600",
    "end": "1090720"
  },
  {
    "text": "have is they have a name and they take in parameters uh what i'm going to show you in this one",
    "start": "1090720",
    "end": "1096320"
  },
  {
    "text": "is the complement one because it's not as straightforward as some of the others what happens with the",
    "start": "1096320",
    "end": "1103760"
  },
  {
    "text": "complement the complement one is it looks at the color wheel and it takes the color that is straight across it in",
    "start": "1103760",
    "end": "1110799"
  },
  {
    "start": "1105000",
    "end": "1217000"
  },
  {
    "text": "the color wheel so it's going to look at a color pair and go straight across the wheel so if we start with orange",
    "start": "1110799",
    "end": "1116880"
  },
  {
    "text": "if we pass in orange it's going to return blue because it's straight across if i pass in red it's going to return",
    "start": "1116880",
    "end": "1123120"
  },
  {
    "text": "green again straight across the color wheel what you will notice with color",
    "start": "1123120",
    "end": "1128400"
  },
  {
    "text": "functions is a lot of them are very very closely tied to things",
    "start": "1128400",
    "end": "1133840"
  },
  {
    "text": "around the color wheel so if you're not familiar with color theory i would",
    "start": "1133840",
    "end": "1139760"
  },
  {
    "text": "highly recommend looking into that it will be very very helpful in terms of understanding",
    "start": "1139760",
    "end": "1145200"
  },
  {
    "text": "why and how they work and also why they're named the way they are it's not necessary to understand and use",
    "start": "1145200",
    "end": "1152640"
  },
  {
    "text": "them but it will greatly help you in that endeavor",
    "start": "1152640",
    "end": "1157360"
  },
  {
    "text": "so going back to our function and using complement so what we're gonna do is our",
    "start": "1159520",
    "end": "1165679"
  },
  {
    "text": "headers nice and pretty but our button at the bottom was still gray and kind of boring so we're gonna go ahead and",
    "start": "1165679",
    "end": "1171280"
  },
  {
    "text": "assign it complement we take the color that we pass in we pass it through the complement function and poof we have",
    "start": "1171280",
    "end": "1178480"
  },
  {
    "text": "a different color button at the bottom so um coffee is that that blue color its",
    "start": "1178480",
    "end": "1185440"
  },
  {
    "text": "complement is kind of a brown cupcake is kind of the is plum that complement is kind of green",
    "start": "1185440",
    "end": "1191600"
  },
  {
    "text": "and gold for our bacon has a compliment which is almost just straight up css blue the",
    "start": "1191600",
    "end": "1198240"
  },
  {
    "text": "problem with that though is if we look at that a little bit more closely the accessibility on that is",
    "start": "1198240",
    "end": "1203760"
  },
  {
    "text": "pretty pretty bad and that's pretty unreadable so let's go ahead and in sas purely in sas write some logic to",
    "start": "1203760",
    "end": "1211120"
  },
  {
    "text": "try to prevent that accessibility problem starting to look a lot more like",
    "start": "1211120",
    "end": "1216799"
  },
  {
    "text": "javascript here very very quickly so i'm going to take my mixin and i'm going to expand upon it",
    "start": "1216799",
    "end": "1222480"
  },
  {
    "start": "1217000",
    "end": "1289000"
  },
  {
    "text": "and i'm going to say you know what that button at the bottom i'm going to start with a button color",
    "start": "1222480",
    "end": "1227760"
  },
  {
    "text": "of white and then i'm going to change i'm going to take that complement background we already had that before but while the",
    "start": "1227760",
    "end": "1235840"
  },
  {
    "text": "contrast doesn't pass so while my contrast checker is equal to false",
    "start": "1235840",
    "end": "1242799"
  },
  {
    "text": "i want to darken the button text by one percent and keep looping until that contrast",
    "start": "1242799",
    "end": "1248000"
  },
  {
    "text": "passes so there's a lot to unpack in this function the if we look at just the button part",
    "start": "1248000",
    "end": "1253679"
  },
  {
    "text": "of it we've got button text we're assigning that a color of white great that's pretty straightforward we've got",
    "start": "1253679",
    "end": "1260559"
  },
  {
    "text": "our background we've already done dealt with that let's look at this while loop a little bit closely",
    "start": "1260559",
    "end": "1266000"
  },
  {
    "text": "because that's where it starts getting really interesting yeah we have our complement color we did that we have our color function darken um",
    "start": "1266000",
    "end": "1273919"
  },
  {
    "text": "basically does all it does is it takes the amount of black in a color and increases",
    "start": "1273919",
    "end": "1280400"
  },
  {
    "text": "it um until you get to whatever you want to be and based on a percentage and then we",
    "start": "1280400",
    "end": "1287440"
  },
  {
    "text": "have our while loop so this is our wow function and a wall function works very",
    "start": "1287440",
    "end": "1292960"
  },
  {
    "text": "very similar to any other language that you might be writing it basically",
    "start": "1292960",
    "end": "1298159"
  },
  {
    "text": "while the condition inside the parentheses is is resolves it continues to do its thing",
    "start": "1298159",
    "end": "1305120"
  },
  {
    "text": "so in our case while our con color contrast doesn't pass so is equal to false it goes ahead and",
    "start": "1305120",
    "end": "1311440"
  },
  {
    "text": "darkens the button color so the way they're constructed is you've got inside we have our our function",
    "start": "1311440",
    "end": "1318720"
  },
  {
    "text": "we have the condition and um let's talk about conditions really",
    "start": "1318720",
    "end": "1324080"
  },
  {
    "text": "quick conditions are again very similar to other languages except if you're used to javascript a",
    "start": "1324080",
    "end": "1330559"
  },
  {
    "start": "1325000",
    "end": "1428000"
  },
  {
    "text": "lot of you i'm guessing um do write a decent amount of javascript",
    "start": "1330559",
    "end": "1336080"
  },
  {
    "text": "and so we don't have triple equals in sas um we just have double equals um the",
    "start": "1336080",
    "end": "1342559"
  },
  {
    "text": "mathematical values are going to be very similar to other languages keep in mind though that especially for",
    "start": "1342559",
    "end": "1348159"
  },
  {
    "text": "percent the divided versus percent because they actually use the",
    "start": "1348159",
    "end": "1353760"
  },
  {
    "text": "the divided sign that may or that can work for division but it will also sometimes",
    "start": "1353760",
    "end": "1359919"
  },
  {
    "text": "resolve as a unit depending on the function that you're using",
    "start": "1359919",
    "end": "1365039"
  },
  {
    "text": "so sometimes that can mean divided sometimes that can be percentage based on the situation",
    "start": "1365039",
    "end": "1370880"
  },
  {
    "text": "got greater than and less than those are pretty self-explanatory bullying behavior and or and not",
    "start": "1370880",
    "end": "1377760"
  },
  {
    "text": "there's no double ampersands there's no pipes you actually spell out the word",
    "start": "1377760",
    "end": "1382799"
  },
  {
    "text": "that tripped me up for quite some time um because you actually have to spell it um you can you can concatenate strings",
    "start": "1382799",
    "end": "1391679"
  },
  {
    "text": "just like in most other languages but using plus dash or slash the big thing though if your",
    "start": "1391679",
    "end": "1399039"
  },
  {
    "text": "javascript person to remember is that unlike javascript sas considers every value to be",
    "start": "1399039",
    "end": "1405200"
  },
  {
    "text": "true except for false and null so if it empty strings",
    "start": "1405200",
    "end": "1410240"
  },
  {
    "text": "zeros those sorts of things are actually considered to be true in sas so if you're doing a boolean",
    "start": "1410240",
    "end": "1417200"
  },
  {
    "text": "check on anything keep that in mind literally the only things that are ever considered false are",
    "start": "1417200",
    "end": "1423200"
  },
  {
    "text": "false and null so let's go back to our function we've",
    "start": "1423200",
    "end": "1429600"
  },
  {
    "start": "1428000",
    "end": "1441000"
  },
  {
    "text": "got our we've got our row rule we've got this function and we've got our condition um and how do we write sas functions",
    "start": "1429600",
    "end": "1436240"
  },
  {
    "text": "because last i check functions didn't exactly exist in css well just like most things we have to",
    "start": "1436240",
    "end": "1442880"
  },
  {
    "start": "1441000",
    "end": "1496000"
  },
  {
    "text": "define it and the syntax is going to look very very similar to the syntax that",
    "start": "1442880",
    "end": "1448559"
  },
  {
    "text": "you're going to see in other languages you're going to start it with the app function that's going to",
    "start": "1448559",
    "end": "1453840"
  },
  {
    "text": "tell sas what in the world you're doing then you're going to give it a name you're going to pass in as many",
    "start": "1453840",
    "end": "1458960"
  },
  {
    "text": "parameters as you want and then you're going to have a return",
    "start": "1458960",
    "end": "1464080"
  },
  {
    "text": "you have to have a return in a function mix ends work very similarly but they",
    "start": "1464080",
    "end": "1469360"
  },
  {
    "text": "implicitly return whatever class uh whatever rule set you're sticking in it",
    "start": "1469360",
    "end": "1475120"
  },
  {
    "text": "the difference between a mix-in and a function is that a mix and will return a rule set",
    "start": "1475120",
    "end": "1481279"
  },
  {
    "text": "a function will return whatever that return value that you assign is not necessarily a rule set um",
    "start": "1481279",
    "end": "1488320"
  },
  {
    "text": "and probably doesn't work great for rule set it works great for i'm trying to return a singular value",
    "start": "1488320",
    "end": "1495520"
  },
  {
    "text": "so we're going to take this beautiful beautiful function that i stole straight out of the wick out of the w3",
    "start": "1495600",
    "end": "1501919"
  },
  {
    "start": "1496000",
    "end": "1538000"
  },
  {
    "text": "spec for color contrast and what we're going to do is we're going to make sure that",
    "start": "1501919",
    "end": "1506960"
  },
  {
    "text": "we can that our color contrast passes on our button this is not the full blown like ratio",
    "start": "1506960",
    "end": "1514080"
  },
  {
    "text": "luminosity check that you would generally do this is a simplified version",
    "start": "1514080",
    "end": "1519360"
  },
  {
    "text": "if we really wanted to use this we would there's a little bit more math to do but i wanted to show the concept more",
    "start": "1519360",
    "end": "1525840"
  },
  {
    "text": "than how you calculate color contrast i do have some accessibility talks if anybody's",
    "start": "1525840",
    "end": "1531039"
  },
  {
    "text": "interested but since this is about sas i figured i'd simplify it and focus on the sas concepts",
    "start": "1531039",
    "end": "1537679"
  },
  {
    "text": "so what we're going to do is we have our function we go we have our function name we go ahead",
    "start": "1537679",
    "end": "1544000"
  },
  {
    "start": "1538000",
    "end": "1598000"
  },
  {
    "text": "and give it our parameters which are our text color and our background color",
    "start": "1544000",
    "end": "1549360"
  },
  {
    "text": "and then we go ahead and calculate our red green and b value sum them up and sum",
    "start": "1549360",
    "end": "1555279"
  },
  {
    "text": "them up so over here we have some color functions we have red green and blue what those are is they take a",
    "start": "1555279",
    "end": "1562159"
  },
  {
    "text": "color any color and return the amount of red green and blue respectively that whatever color you passed in is",
    "start": "1562159",
    "end": "1568400"
  },
  {
    "text": "going to have super convenient for our current use case the other part that you'll see is some",
    "start": "1568400",
    "end": "1573919"
  },
  {
    "text": "math functions you've got that max and that min sas has a butt load of those again i'm not going to run through",
    "start": "1573919",
    "end": "1580000"
  },
  {
    "text": "them for the same reason as the color functions that would get boring very very quickly",
    "start": "1580000",
    "end": "1585679"
  },
  {
    "text": "but you have a slew of them max and min being exactly what you think it's going to give you max is going to give you the bigger",
    "start": "1585679",
    "end": "1591919"
  },
  {
    "text": "value of the 2 and is going to return the smaller value of the two",
    "start": "1591919",
    "end": "1596880"
  },
  {
    "text": "and so then we got to have a return right because our function right here does not have a return yet and we said",
    "start": "1597360",
    "end": "1602880"
  },
  {
    "start": "1598000",
    "end": "1615000"
  },
  {
    "text": "earlier that functions have to have a return our return is going to if you remember the expression",
    "start": "1602880",
    "end": "1609679"
  },
  {
    "text": "from earlier is either going to return true or false we pass or we don't pass so we're going to write an if statement",
    "start": "1609679",
    "end": "1615520"
  },
  {
    "start": "1615000",
    "end": "1773000"
  },
  {
    "text": "because you can do that in sas at if you get an expression and you can",
    "start": "1615520",
    "end": "1620720"
  },
  {
    "text": "even get really fancy with it and do an at else you don't have to but it is",
    "start": "1620720",
    "end": "1626159"
  },
  {
    "text": "definitely there we're going to use an if else keep in mind if you're used to javascript it doesn't take parentheses",
    "start": "1626159",
    "end": "1634640"
  },
  {
    "text": "around that expression so remember that gets a little weird looking at if",
    "start": "1634640",
    "end": "1640320"
  },
  {
    "text": "you're really used to javascript and actually i have them in there which is glorious um",
    "start": "1640320",
    "end": "1645520"
  },
  {
    "text": "at the first level so it might actually work i'd have to double check that with the code to see if it's a typo or",
    "start": "1645520",
    "end": "1651440"
  },
  {
    "text": "not anywho so we're gonna say okay let's look at the bottom if else block first",
    "start": "1651440",
    "end": "1657760"
  },
  {
    "text": "and we're gonna say hey if our sum is less than 400 um that number is based on the color",
    "start": "1657760",
    "end": "1664240"
  },
  {
    "text": "basically the color difference between the two it's not exact but it will work most of the time so",
    "start": "1664240",
    "end": "1669840"
  },
  {
    "text": "um that's where i kind of put the stop if we were to if i were to use this in production or i would definitely want to fine tune",
    "start": "1669840",
    "end": "1676480"
  },
  {
    "text": "it but basically if the difference in our colors is less than 400 i want you to return false",
    "start": "1676480",
    "end": "1682000"
  },
  {
    "text": "and so that our while loop can keep going otherwise return true our color is good enough notice at the",
    "start": "1682000",
    "end": "1689440"
  },
  {
    "text": "top i have another if we started with our button color of white",
    "start": "1689440",
    "end": "1694559"
  },
  {
    "text": "and so what i want to do with that is make sure that if we ever get to black something",
    "start": "1694559",
    "end": "1700880"
  },
  {
    "text": "went terribly awry because we've ran through the entire gamut from white to gray and still haven't found a color that passes color",
    "start": "1700880",
    "end": "1707360"
  },
  {
    "text": "contrast there's a problem there there's a going to be a color um that actually",
    "start": "1707360",
    "end": "1712720"
  },
  {
    "text": "there's going to be a gray value that actually passes so something went terribly wrong so this",
    "start": "1712720",
    "end": "1718640"
  },
  {
    "text": "prevents it from spinning completely out of control the other way i could have done that is",
    "start": "1718640",
    "end": "1725039"
  },
  {
    "text": "there's actually a way in um so this will prevent it from",
    "start": "1725039",
    "end": "1730159"
  },
  {
    "text": "failing and keep the composition going you there is actually an error you can throw if you want it to",
    "start": "1730159",
    "end": "1737039"
  },
  {
    "text": "actually throw an error and stop the compilation and what that will do is go ahead and",
    "start": "1737039",
    "end": "1742559"
  },
  {
    "text": "print out whatever message you do in your console and tell you why it aired out so those can be really really",
    "start": "1742559",
    "end": "1748480"
  },
  {
    "text": "convenient to be able to tell you what's going on in your application",
    "start": "1748480",
    "end": "1755039"
  },
  {
    "text": "we have now our returns those mandatory returns we were talking about and we can look at our full function",
    "start": "1755919",
    "end": "1762559"
  },
  {
    "text": "together with our while so now we know we've got our while we've got our contrast checker we've got our",
    "start": "1762559",
    "end": "1768240"
  },
  {
    "text": "false and we go ahead and do our thing and so now when we spit it out it does",
    "start": "1768240",
    "end": "1775039"
  },
  {
    "start": "1773000",
    "end": "1811000"
  },
  {
    "text": "spit out a beautiful color on each of them so we have",
    "start": "1775039",
    "end": "1780399"
  },
  {
    "text": "coffee ends up with a background color of white cupcake ends up with the 2e2e2e and bacon ends up with white as",
    "start": "1780399",
    "end": "1788640"
  },
  {
    "text": "well and now our accessibility is significantly nicer and we can actually read that text",
    "start": "1788640",
    "end": "1794720"
  },
  {
    "text": "now we did some really fancy schmancy math on all of that and there's a lot of ways in which we",
    "start": "1794720",
    "end": "1800960"
  },
  {
    "text": "could have typoed something or we could have done something wrong and it kind of feels black box-ish right so",
    "start": "1800960",
    "end": "1808559"
  },
  {
    "text": "there's this beautiful thing called at debug it's the it's the sas equivalent of javascript's",
    "start": "1808559",
    "end": "1814799"
  },
  {
    "start": "1811000",
    "end": "1858000"
  },
  {
    "text": "console.log and what it does is it whatever you spit in there it goes ahead and spits out for you",
    "start": "1814799",
    "end": "1823120"
  },
  {
    "text": "in your console wherever you're running that sass in this case i was just running nodes",
    "start": "1823120",
    "end": "1829840"
  },
  {
    "text": "directly on my system so you can see my console output it tells me which file my bug is in which line number it's",
    "start": "1829840",
    "end": "1836960"
  },
  {
    "text": "at and whatever i told it to spit out so in this case my text color plus my background color",
    "start": "1836960",
    "end": "1843279"
  },
  {
    "text": "equals whatever that number was that sum was um but you can make it spit out whatever you want",
    "start": "1843279",
    "end": "1848720"
  },
  {
    "text": "and you can totally change strings and do all that fun stuff if you want",
    "start": "1848720",
    "end": "1854000"
  },
  {
    "start": "1858000",
    "end": "1879000"
  },
  {
    "text": "so we still have our three cards coffee cupcake and bacon",
    "start": "1859200",
    "end": "1864320"
  },
  {
    "text": "but we're realistically writing the same thing three times right we're writing at extend every time",
    "start": "1864320",
    "end": "1869840"
  },
  {
    "text": "at include every time and just passing it a color could we get even lazier about it and just write it",
    "start": "1869840",
    "end": "1876080"
  },
  {
    "text": "once absolutely we can use an add each and what each does there's two different",
    "start": "1876080",
    "end": "1882960"
  },
  {
    "start": "1879000",
    "end": "1996000"
  },
  {
    "text": "syntaxes for it this first one just takes a series of values",
    "start": "1882960",
    "end": "1888320"
  },
  {
    "text": "and for each each value in that series of values does stuff whatever you want it to",
    "start": "1888320",
    "end": "1896000"
  },
  {
    "text": "the other option is to do a key value pair um so very similar to what you would have in an array like an array of",
    "start": "1896000",
    "end": "1902000"
  },
  {
    "text": "objects for example where you have where you can go ahead and reference not only the key",
    "start": "1902000",
    "end": "1908720"
  },
  {
    "text": "but whatever those value in that list is going to be we're going to use that second syntax",
    "start": "1908720",
    "end": "1915200"
  },
  {
    "text": "because we not only want to know which card we're dealing with but we also want to know which",
    "start": "1915200",
    "end": "1920960"
  },
  {
    "text": "color is our initial color so what we're going to do is say back to",
    "start": "1920960",
    "end": "1926640"
  },
  {
    "text": "the very beginning where we had that cadet blue plum and gold for each of them we're going to do coffee",
    "start": "1926640",
    "end": "1932159"
  },
  {
    "text": "colon cadet blue cupcake colon plum and bacon colon gold and we're gonna",
    "start": "1932159",
    "end": "1937919"
  },
  {
    "text": "pass that through our four each so our key is essentially our selector",
    "start": "1937919",
    "end": "1942960"
  },
  {
    "text": "and then we have our color as part of our cards now i pass and dot coffee um because",
    "start": "1942960",
    "end": "1950159"
  },
  {
    "text": "maybe next time i want to do that on something that has an id as a selector",
    "start": "1950159",
    "end": "1955760"
  },
  {
    "text": "or maybe next time i want to do that as a on an element instead of simply on",
    "start": "1955760",
    "end": "1962399"
  },
  {
    "text": "a class so that allows me a lot of versatility and that is one of those use cases where i have to use that",
    "start": "1962399",
    "end": "1968000"
  },
  {
    "text": "interpolation that we talked about at the beginning of the session where you have the pound bracket pound",
    "start": "1968000",
    "end": "1973919"
  },
  {
    "text": "otherwise it would literally just print out selector as my variable and that wouldn't be very",
    "start": "1973919",
    "end": "1979840"
  },
  {
    "text": "helpful and so now what i can do is for each of the values in that cards variable",
    "start": "1979840",
    "end": "1985919"
  },
  {
    "text": "it's going to go ahead and do our thing and spit out the equivalent of what we were doing before",
    "start": "1985919",
    "end": "1993840"
  },
  {
    "text": "so let's look at the output we still get our pretty out pretty output so now with just",
    "start": "1994480",
    "end": "2001919"
  },
  {
    "start": "1996000",
    "end": "2041000"
  },
  {
    "text": "a mixin and a function and in each we get all of this pretty code that we",
    "start": "2001919",
    "end": "2008320"
  },
  {
    "text": "can reuse throughout our application all over the place with extreme",
    "start": "2008320",
    "end": "2014080"
  },
  {
    "text": "consistency and with the ability to very very easily update it",
    "start": "2014080",
    "end": "2019200"
  },
  {
    "text": "clean it up exchange it because everything is really controlled by that one source that's where the real power",
    "start": "2019200",
    "end": "2025440"
  },
  {
    "text": "of all this is as you're controlling all of your code from one place",
    "start": "2025440",
    "end": "2031039"
  },
  {
    "text": "then you can keep that consistency throughout your app but let's keep going we've we've talked",
    "start": "2031039",
    "end": "2037679"
  },
  {
    "text": "a lot about cards what we also need is is a navigation on our little",
    "start": "2037679",
    "end": "2042799"
  },
  {
    "start": "2041000",
    "end": "2070000"
  },
  {
    "text": "wannabe app right so um simple nav nothing particularly um",
    "start": "2042799",
    "end": "2049919"
  },
  {
    "text": "glorious about it you've got a nav tag we've got a list we've got list items and inside of it we",
    "start": "2049919",
    "end": "2056560"
  },
  {
    "text": "have links right we have three of them one my favorite things login and profile because these seem like pretty standard",
    "start": "2056560",
    "end": "2062960"
  },
  {
    "text": "links you would have if you do download the code they go to nowhere but",
    "start": "2062960",
    "end": "2068000"
  },
  {
    "text": "there you go and for that we're going to do a for loop because we want those links they're really boring right now they're",
    "start": "2068000",
    "end": "2074480"
  },
  {
    "start": "2070000",
    "end": "2099000"
  },
  {
    "text": "standard excuse me browser default color we want to make those pretty rainbow colors",
    "start": "2074480",
    "end": "2080320"
  },
  {
    "text": "because everything else about our application is rainbow colored so let's go ahead and make this rainbow color",
    "start": "2080320",
    "end": "2086839"
  },
  {
    "text": "2.",
    "start": "2086839",
    "end": "2089839"
  },
  {
    "text": "so we're going to iterate through our list by using an app for loop and so",
    "start": "2095599",
    "end": "2102400"
  },
  {
    "start": "2099000",
    "end": "2178000"
  },
  {
    "text": "4 basically goes through whatever from whatever that first number",
    "start": "2102400",
    "end": "2107680"
  },
  {
    "text": "is to the second number so so 4i which is our iterator from whatever number to whatever number",
    "start": "2107680",
    "end": "2115200"
  },
  {
    "text": "do stuff there's kind of two syntaxes for it you can do",
    "start": "2115200",
    "end": "2121200"
  },
  {
    "text": "from through or from two so from through is gonna be inclusive",
    "start": "2121200",
    "end": "2127440"
  },
  {
    "text": "that's the top one so if you say from one through ten it's going to iterate with i equals one two three four five",
    "start": "2127440",
    "end": "2134079"
  },
  {
    "text": "six seven eight nine and ten if you do the from 210 it'll stop at nine",
    "start": "2134079",
    "end": "2142480"
  },
  {
    "text": "does that make sense because you've got one of them so that the through is inclusive two is exclusive",
    "start": "2142480",
    "end": "2149040"
  },
  {
    "text": "the other thing is how that iteration count that iteration works all by itself you don't have to",
    "start": "2149040",
    "end": "2154720"
  },
  {
    "text": "increment the i um that if that first number is smaller than the second number",
    "start": "2154720",
    "end": "2161040"
  },
  {
    "text": "it'll count up by ones if that's uh first number is smaller as",
    "start": "2161040",
    "end": "2166160"
  },
  {
    "text": "larger than the second number um it'll decrement by one and it will do that increment and",
    "start": "2166160",
    "end": "2171599"
  },
  {
    "text": "decrement for you which is really cool so",
    "start": "2171599",
    "end": "2176880"
  },
  {
    "text": "let's go back to our color wheel and play with some color functions since we're playing with the rainbow and what we're going to do is",
    "start": "2176880",
    "end": "2184640"
  },
  {
    "start": "2178000",
    "end": "2312000"
  },
  {
    "text": "we're going to say we've got three of them so we're going to make a try we're going to base it on the triad which basically spits",
    "start": "2184640",
    "end": "2191760"
  },
  {
    "text": "splits the color wheel in three circles 360 degrees divided by 3 is 120 degrees",
    "start": "2191760",
    "end": "2198240"
  },
  {
    "text": "that's how where we're going to rotate it so what we're going to do is we're going to take that for loop",
    "start": "2198240",
    "end": "2204720"
  },
  {
    "text": "we're going to start with the base color of whatever random green and we're going to iterate one through",
    "start": "2204720",
    "end": "2211200"
  },
  {
    "text": "three because we have three nav items right and the type i which is going to iterate one through",
    "start": "2211200",
    "end": "2217200"
  },
  {
    "text": "three and we're gonna change the link color to be adjusted so we're gonna that base",
    "start": "2217200",
    "end": "2223280"
  },
  {
    "text": "color we're gonna rotate which is what adjust hue does it rotates you on the color wheel",
    "start": "2223280",
    "end": "2229040"
  },
  {
    "text": "so it keeps the same amount of amount of white the same amount of black in that color and just change",
    "start": "2229040",
    "end": "2234640"
  },
  {
    "text": "changes what your hue is going to be which is the the the color aspect of it um keep in mind that you might be",
    "start": "2234640",
    "end": "2241760"
  },
  {
    "text": "tempted to do this on the list coming in from some data you can't do this and not know how many items are",
    "start": "2241760",
    "end": "2249680"
  },
  {
    "text": "in your list this is done at compile time not at runtime so you have to know ahead of time how",
    "start": "2249680",
    "end": "2256720"
  },
  {
    "text": "many items you have you can totally do some stuff like and like we could repeat this by doing",
    "start": "2256720",
    "end": "2262240"
  },
  {
    "text": "nth of type with you know n plus or even odd those sorts of things if we",
    "start": "2262240",
    "end": "2267839"
  },
  {
    "text": "wanted to however",
    "start": "2267839",
    "end": "2271838"
  },
  {
    "text": "you you can't just say i'm getting an unknown amount of data i'm going to apply this based on the",
    "start": "2272880",
    "end": "2278480"
  },
  {
    "text": "amount of data that i'm getting in because it's being done at compile time not at run time you won't",
    "start": "2278480",
    "end": "2284480"
  },
  {
    "text": "it's too late at that point to be able to do this so that is one of the limitations however if you already know how many you",
    "start": "2284480",
    "end": "2290480"
  },
  {
    "text": "have if you're dealing with a static site or if you're dealing with a navbar for example such as in this case we already know how many",
    "start": "2290480",
    "end": "2297599"
  },
  {
    "text": "items we have this is perfect um so we're going to go ahead and for each link",
    "start": "2297599",
    "end": "2303440"
  },
  {
    "text": "we're going to go ahead and adjust what that color is so let's see what that looks like",
    "start": "2303440",
    "end": "2309760"
  },
  {
    "text": "what that looks like is super simple we end up with our a link a visited whatever color rotated",
    "start": "2309760",
    "end": "2316720"
  },
  {
    "start": "2312000",
    "end": "2365000"
  },
  {
    "text": "now notice that this starts on blue and the reason it starts on blue and not on green even though that was my base color",
    "start": "2316720",
    "end": "2323520"
  },
  {
    "text": "is because even at number one we've already rotated 120 right we've already gone around the",
    "start": "2323520",
    "end": "2330480"
  },
  {
    "text": "circle 120 degrees because 1 times 120 is 120",
    "start": "2330480",
    "end": "2336000"
  },
  {
    "text": "degrees uh we could have made it we could have put some kind of safeguard on it if we wanted to start on green but that's okay",
    "start": "2336000",
    "end": "2342880"
  },
  {
    "text": "we go all the way around circle and circle back to it that's perfectly fine as well",
    "start": "2342880",
    "end": "2350079"
  },
  {
    "text": "um so what that gives us is our pretty pretty nav bar with pretty pretty rainbows",
    "start": "2350160",
    "end": "2357119"
  },
  {
    "text": "so i've thrown a lot at you during this talk very very quickly i realize um",
    "start": "2357359",
    "end": "2363680"
  },
  {
    "text": "what we've gone over is the scss syntax versus the indented syntax remember",
    "start": "2363680",
    "end": "2369200"
  },
  {
    "text": "that's the semicolon versus non-semicolon stuff and bracket versus not",
    "start": "2369200",
    "end": "2374720"
  },
  {
    "text": "nesting beware of your christmas trees uh crosston properties versus variables and how",
    "start": "2374720",
    "end": "2380400"
  },
  {
    "text": "those work together that interpolation piece in order to get the value out of something",
    "start": "2380400",
    "end": "2385760"
  },
  {
    "text": "color functions we didn't go through all of them but we went through a number of them um operators",
    "start": "2385760",
    "end": "2392240"
  },
  {
    "text": "beware that they don't work like javascript right no versus false being the only things that are false empty strings",
    "start": "2392240",
    "end": "2398800"
  },
  {
    "text": "and zeros being true unlike javascript some math functions and then the really",
    "start": "2398800",
    "end": "2404000"
  },
  {
    "text": "important bits which are your app rules so you're at mixin at extend so the",
    "start": "2404000",
    "end": "2409520"
  },
  {
    "text": "mixins being really really good for dynamic content at extend being great for static",
    "start": "2409520",
    "end": "2414560"
  },
  {
    "text": "while function if else h4 and debug which is debug being our",
    "start": "2414560",
    "end": "2419760"
  },
  {
    "text": "console log so as promised if you want to find the code to be able to run this yourself",
    "start": "2419760",
    "end": "2425760"
  },
  {
    "text": "here's the link i'll leave this up for a couple seconds and i will take any questions anybody",
    "start": "2425760",
    "end": "2432880"
  },
  {
    "start": "2427000",
    "end": "2574000"
  },
  {
    "text": "has",
    "start": "2436839",
    "end": "2439839"
  },
  {
    "text": "c",
    "start": "2450839",
    "end": "2453839"
  },
  {
    "text": "so we're looking at trying to share our scss variables with our gs do you have any recommendation",
    "start": "2463680",
    "end": "2469920"
  },
  {
    "text": "recommended way to do that",
    "start": "2469920",
    "end": "2473359"
  },
  {
    "text": "are you meaning to share your css variables across files like across various scss files or",
    "start": "2475440",
    "end": "2482560"
  },
  {
    "text": "into the actual js itself like for the js to assign this assass variables",
    "start": "2482560",
    "end": "2489838"
  },
  {
    "text": "i have never tried to cross pollinate that way um so i do not actually have a",
    "start": "2490079",
    "end": "2496480"
  },
  {
    "text": "recommendation for that i'm really not sure",
    "start": "2496480",
    "end": "2501520"
  },
  {
    "text": "cool um and i apologize if i've mispronounced your name helder says that he does it using",
    "start": "2504240",
    "end": "2512720"
  },
  {
    "text": "webpack",
    "start": "2520839",
    "end": "2523839"
  },
  {
    "text": "anybody else",
    "start": "2539200",
    "end": "2542000"
  },
  {
    "text": "when you had the loop with keys and value if you wanted more than one value like supply primary and second how would i go",
    "start": "2548000",
    "end": "2556720"
  },
  {
    "text": "about doing that okay so let's pull up that slide",
    "start": "2556720",
    "end": "2562880"
  },
  {
    "text": "really quick so that would be",
    "start": "2562880",
    "end": "2569039"
  },
  {
    "text": "this one maybe there we go um the",
    "start": "2570800",
    "end": "2577680"
  },
  {
    "start": "2574000",
    "end": "3071000"
  },
  {
    "text": "mapping in sas is pretty limited um it's not quite as versatile as",
    "start": "2577680",
    "end": "2585359"
  },
  {
    "text": "say doing an obj a full-blown object like in javascript let me double",
    "start": "2585359",
    "end": "2592800"
  },
  {
    "text": "check something really quick",
    "start": "2592800",
    "end": "2607839"
  },
  {
    "text": "um what you can do is um basically you can destructure it in a",
    "start": "2610880",
    "end": "2618400"
  },
  {
    "text": "way that basically you would have instead of value like value",
    "start": "2618400",
    "end": "2625520"
  },
  {
    "text": "value one equals basically all three of your items value two equals all three of your items",
    "start": "2625520",
    "end": "2631839"
  },
  {
    "text": "the same way as this top part and that way you can then make a third list of the values of values",
    "start": "2631839",
    "end": "2637839"
  },
  {
    "text": "and then you can iterate not only around your value your value of values but then around those values so you probably want to",
    "start": "2637839",
    "end": "2644560"
  },
  {
    "text": "nest those properties does that make any sort of sense",
    "start": "2644560",
    "end": "2649838"
  },
  {
    "text": "um so you wouldn't end up with um right because it doesn't really have a",
    "start": "2650400",
    "end": "2657440"
  },
  {
    "text": "very it's a strict context um the other thing you can do is you can uh say",
    "start": "2657440",
    "end": "2666480"
  },
  {
    "text": "um i can't like yeah that's you can",
    "start": "2666480",
    "end": "2672800"
  },
  {
    "text": "you can say values you could say for example values",
    "start": "2672800",
    "end": "2680560"
  },
  {
    "text": "and i'm going to try to use something concrete i'm going to use like animals and their types",
    "start": "2680560",
    "end": "2685680"
  },
  {
    "text": "um because that makes more sense than random foo and bars but what you could totally do is say",
    "start": "2685680",
    "end": "2691920"
  },
  {
    "text": "animals colon cat furry cute comma",
    "start": "2691920",
    "end": "2698720"
  },
  {
    "text": "you know uh dog slobbery also cute comma um and that you can",
    "start": "2698720",
    "end": "2705599"
  },
  {
    "text": "string multiple um so between your columns are those uh between your commas or each",
    "start": "2705599",
    "end": "2711520"
  },
  {
    "text": "separation so you can make lists of lists if you want to shorthand",
    "start": "2711520",
    "end": "2716839"
  },
  {
    "text": "it that's the other ways you can put those together",
    "start": "2716839",
    "end": "2723519"
  },
  {
    "text": "i personally would probably lean towards assigning each kind of list to a variable simply",
    "start": "2723920",
    "end": "2729839"
  },
  {
    "text": "because of readability but you definitely don't have to you can string that all the way in line if you",
    "start": "2729839",
    "end": "2735920"
  },
  {
    "text": "want to",
    "start": "2735920",
    "end": "2738318"
  },
  {
    "text": "this might be out of scope but do you know how to activate which extension to get code",
    "start": "2743280",
    "end": "2749359"
  },
  {
    "text": "compilation intelligence when using scss and vs code um",
    "start": "2749359",
    "end": "2755599"
  },
  {
    "text": "yes i actually use vs code so let me tell you what i use um",
    "start": "2755599",
    "end": "2763280"
  },
  {
    "text": "let's see so the way i compile stuff is",
    "start": "2763280",
    "end": "2769920"
  },
  {
    "text": "i just run i just run the dumb watcher in the console the one that's right",
    "start": "2769920",
    "end": "2776640"
  },
  {
    "text": "there on the front page like i have it installed on my machine do i",
    "start": "2776640",
    "end": "2782079"
  },
  {
    "text": "have anything specific for sass in here",
    "start": "2782079",
    "end": "2788800"
  },
  {
    "text": "um cess uh if you type in sas in terms of",
    "start": "2788800",
    "end": "2795079"
  },
  {
    "text": "extensions there are a number of them",
    "start": "2795079",
    "end": "2800160"
  },
  {
    "text": "specifically for indentation and syntax highlighting the only thing i use is um i use",
    "start": "2800160",
    "end": "2807599"
  },
  {
    "text": "beautify for being able to clean up my files when my indentation gets",
    "start": "2807599",
    "end": "2813839"
  },
  {
    "text": "wonky but the actual syntax highlighting it looks like the theme i am using is doing it by default",
    "start": "2813839",
    "end": "2820640"
  },
  {
    "text": "i'm doing a pretty good job by default so i don't seem to have anything specific to sas installed related to",
    "start": "2820640",
    "end": "2827040"
  },
  {
    "text": "that and the theme i am using is",
    "start": "2827040",
    "end": "2832560"
  },
  {
    "text": "um one monacai theme by joshua",
    "start": "2833760",
    "end": "2840720"
  },
  {
    "text": "asimov so it seems to be doing it all by its onesies without any extra",
    "start": "2840720",
    "end": "2846319"
  },
  {
    "text": "help any other questions",
    "start": "2846319",
    "end": "2859838"
  },
  {
    "text": "are your slides available anywhere yes my slides are published on martine.dub if you go under",
    "start": "2870720",
    "end": "2877359"
  },
  {
    "text": "publications all of my slides for all of my talks are there so far",
    "start": "2877359",
    "end": "2887838"
  },
  {
    "text": "cool well if nobody has any other questions oh which naming convention do you feel",
    "start": "2896480",
    "end": "2903280"
  },
  {
    "text": "works best with sas um that's solely and strictly up to you",
    "start": "2903280",
    "end": "2908640"
  },
  {
    "text": "honestly it um what i highly recommend is not necessarily a strict boxer one is",
    "start": "2908640",
    "end": "2916240"
  },
  {
    "text": "better than the next or one is better than the other um is to make a team agreement with",
    "start": "2916240",
    "end": "2921359"
  },
  {
    "text": "whoever you're working with and make sure you're being consistent um i",
    "start": "2921359",
    "end": "2928960"
  },
  {
    "text": "generally name things lowercase and dashed much more and based on what",
    "start": "2928960",
    "end": "2936400"
  },
  {
    "text": "they're used for rather than what they do so i'm going to say instead of saying",
    "start": "2936400",
    "end": "2945119"
  },
  {
    "text": "like i'm never going to call a class danger background i would call it uh you know error for",
    "start": "2945119",
    "end": "2950400"
  },
  {
    "text": "example but i think the more important than how you go about your specific naming is",
    "start": "2950400",
    "end": "2958079"
  },
  {
    "text": "whatever your team is comfortable with and whatever is for you guys to agree on",
    "start": "2958079",
    "end": "2963520"
  },
  {
    "text": "what works for you because even different projects you might have different needs in terms of",
    "start": "2963520",
    "end": "2969680"
  },
  {
    "text": "that or some projects might work better one way versus another so",
    "start": "2969680",
    "end": "2975040"
  },
  {
    "text": "i think that's a discussion with the other devs on your team to come up with whatever works for you guys and agree to",
    "start": "2975040",
    "end": "2981280"
  },
  {
    "text": "it and stick to it that's the important bit more so than what syntax you're going to use",
    "start": "2981280",
    "end": "2987200"
  },
  {
    "text": "so very similar to just standard css on",
    "start": "2987200",
    "end": "2991680"
  },
  {
    "text": "that",
    "start": "2996839",
    "end": "2999839"
  },
  {
    "text": "uh do you have a chance to work with till when i have not worked with tailwind so i",
    "start": "3003920",
    "end": "3011520"
  },
  {
    "text": "am i cannot give you any like better or worse difference of any",
    "start": "3011520",
    "end": "3017280"
  },
  {
    "text": "kind because i've never worked with tailwind before",
    "start": "3017280",
    "end": "3027839"
  },
  {
    "text": "well i will be around on slack i'm gonna surrender the room for the",
    "start": "3035440",
    "end": "3041040"
  },
  {
    "text": "next person but i will be available you know just generally slack you can dm me or",
    "start": "3041040",
    "end": "3047599"
  },
  {
    "text": "in the hallway track or whatever um thank you everybody for coming",
    "start": "3047599",
    "end": "3054480"
  },
  {
    "text": "and i hope you guys all i'll flash the code one last the qr code for the where to find the",
    "start": "3054480",
    "end": "3061520"
  },
  {
    "text": "code for this presentation one last time if anybody missed it and hope you guys",
    "start": "3061520",
    "end": "3068720"
  },
  {
    "text": "have a wonderful day thank you",
    "start": "3068720",
    "end": "3073838"
  }
]