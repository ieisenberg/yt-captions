[
  {
    "start": "0",
    "end": "130000"
  },
  {
    "text": "all right get everyone hope you guys",
    "start": "4570",
    "end": "9850"
  },
  {
    "text": "have been having a good NDC good conference so far before I get started just a quick show of hands how many of",
    "start": "9850",
    "end": "16750"
  },
  {
    "text": "you got Isis the bulk of your production workloads running on the cloud right now all right cool and what about your",
    "start": "16750",
    "end": "25090"
  },
  {
    "text": "running in your own data center how many have you got majority of his stuff running in your own data center all",
    "start": "25090",
    "end": "30640"
  },
  {
    "text": "right good all right probably a bit of half-and-half my name is Mahesh Christian I work for a",
    "start": "30640",
    "end": "36340"
  },
  {
    "text": "company called the AGL energy it's based in Melbourne Australia and yes that's",
    "start": "36340",
    "end": "41410"
  },
  {
    "text": "right so I've come all the way here to do a talk it's a long way to fly it's a long flight AGL energy obviously we are",
    "start": "41410",
    "end": "50560"
  },
  {
    "text": "in the energy business we not only generate electricity we also you know we",
    "start": "50560",
    "end": "56410"
  },
  {
    "text": "also sell gas and electricity to to consumers in Australia and we run a lot",
    "start": "56410",
    "end": "64299"
  },
  {
    "text": "of our infrastructure a lot of stuff in the cloud I probably you know we I would",
    "start": "64299",
    "end": "69460"
  },
  {
    "text": "say that we're probably one of the largest consumers of a sure within Australia it's of one of the largest",
    "start": "69460",
    "end": "74560"
  },
  {
    "text": "consumers we run things like our SAP workloads and everything else in there I",
    "start": "74560",
    "end": "81030"
  },
  {
    "text": "have been working in in the cloud from the very early days of azure of being an",
    "start": "81030",
    "end": "86920"
  },
  {
    "text": "azure and maybe for a few years a number of years and I've been very passionate about building highly resilient",
    "start": "86920",
    "end": "93729"
  },
  {
    "text": "applications that run on the cloud so we knew when you run your applications you know in terms of when when it fails it",
    "start": "93729",
    "end": "101080"
  },
  {
    "text": "doesn't really affect the application application continues to run and things like that it even in the event of failure the topic the talk I'm gonna",
    "start": "101080",
    "end": "108939"
  },
  {
    "text": "give today is titled architectural patterns for the cloud but the interesting thing is that whether you're running your applications in the cloud",
    "start": "108939",
    "end": "115210"
  },
  {
    "text": "or in it's a distributed application is running in your own data center you will find that all the the patterns that I",
    "start": "115210",
    "end": "120850"
  },
  {
    "text": "talked about is still relevant to you however as you will see during the talk it becomes even more relevant if you're",
    "start": "120850",
    "end": "127390"
  },
  {
    "text": "running in the cloud the agenda is actually pretty simple I'm gonna talk about some of the guiding principles",
    "start": "127390",
    "end": "134169"
  },
  {
    "start": "130000",
    "end": "130000"
  },
  {
    "text": "based on which you know the catalog of patterns of picked up our and I'll run through a series of",
    "start": "134169",
    "end": "140500"
  },
  {
    "text": "patterns there are about 21 patterns that I'm going to talk about today right so the the emphasis is more on breadth",
    "start": "140500",
    "end": "147610"
  },
  {
    "text": "rather than on depth of the pattern so in each and every pattern I'll talk about what is the problem that's",
    "start": "147610",
    "end": "153370"
  },
  {
    "text": "actually trying to solve how do you actually fix the problem how do you solve the problem and then some considerations so hopefully it gives you",
    "start": "153370",
    "end": "160360"
  },
  {
    "text": "enough to make you dangerous right so so hopefully you know when you go back to",
    "start": "160360",
    "end": "166420"
  },
  {
    "text": "work and then use come up across a scenario where you need to use these patterns you'll dig a little bit deeper",
    "start": "166420",
    "end": "172000"
  },
  {
    "text": "and then start utilizing these patterns itself so as I said there are 21 patterns so I would suggest that you",
    "start": "172000",
    "end": "178090"
  },
  {
    "text": "hold on to your questions till the very end so I've run through the you know my presentation and run through it and I'll",
    "start": "178090",
    "end": "184209"
  },
  {
    "text": "wrap up with a few links that you can actually use when I said deep dive so you know you can actually follow those",
    "start": "184209",
    "end": "190209"
  },
  {
    "text": "links and get more information about these patterns itself so let's talk",
    "start": "190209",
    "end": "195280"
  },
  {
    "text": "about some of these guiding principles what does the reason that most people",
    "start": "195280",
    "end": "201850"
  },
  {
    "start": "197000",
    "end": "197000"
  },
  {
    "text": "move to the cloud and primary reason a lot of people cite is the power of the you know the to leverage the power of",
    "start": "201850",
    "end": "207940"
  },
  {
    "text": "the seemingly infinite cloud right so you've run your workload and if you want",
    "start": "207940",
    "end": "213430"
  },
  {
    "text": "to scale you know lots of people visiting your site and things like that you can quickly scale scale up scale out",
    "start": "213430",
    "end": "220060"
  },
  {
    "text": "whatever you want to call it quite easily without having to worry about running out of hardware and so on I said",
    "start": "220060",
    "end": "227170"
  },
  {
    "text": "seemingly infinite because sometimes you can actually run out of space even over there right but to do that a lot of",
    "start": "227170",
    "end": "235239"
  },
  {
    "text": "cloud providers there are certain things that come out of the box right so you can earn multiple instances and they'll give you load balancers global load",
    "start": "235239",
    "end": "241420"
  },
  {
    "text": "balancers that will allow you to kind of look distributor traffic equally between all the instances and so on and so forth",
    "start": "241420",
    "end": "246790"
  },
  {
    "text": "but you still need to make sure that your architecture your applications appropriately to make use of this of you",
    "start": "246790",
    "end": "253390"
  },
  {
    "text": "know the scale that it actually provides so if you've got a big monolithic application you kind of like need to break it down into smaller components",
    "start": "253390",
    "end": "259060"
  },
  {
    "text": "and you need to start to decouple these these these components once you decouple these components then it makes a lot",
    "start": "259060",
    "end": "265300"
  },
  {
    "text": "more sense you can start to scale these things independently you can start to isolate them and if some of these things fail they",
    "start": "265300",
    "end": "271730"
  },
  {
    "text": "don't start perfect other parts of the system itself so so that's one of the things that you need to start thinking",
    "start": "271730",
    "end": "276770"
  },
  {
    "text": "about the second reason that people want",
    "start": "276770",
    "end": "281780"
  },
  {
    "start": "279000",
    "end": "279000"
  },
  {
    "text": "to move to the cloud is that you know it's it's a lot cheaper a lot cheaper than the average data center that you",
    "start": "281780",
    "end": "286850"
  },
  {
    "text": "run your current workloads on and the reason it's cheap is because the cloud is literally built on you know commodity",
    "start": "286850",
    "end": "293210"
  },
  {
    "text": "hardware hardware that's a lot cheaper than the expensive ones that you put",
    "start": "293210",
    "end": "298910"
  },
  {
    "text": "into your racks in your data center so they are more prone to failure than the",
    "start": "298910",
    "end": "305600"
  },
  {
    "text": "hardware over there so you know they even talk about things like mean time to recovery that's more important than the",
    "start": "305600",
    "end": "312080"
  },
  {
    "text": "mean time to failure which is what a lot of these Hardware typically you know state in their specifications and so on",
    "start": "312080",
    "end": "319240"
  },
  {
    "text": "so that sucks the first thing the second thing is of course you know the cloud is",
    "start": "319240",
    "end": "325130"
  },
  {
    "text": "massively multi-talented right so you're running a lot of a lot of other people are sharing the infrastructure sharing",
    "start": "325130",
    "end": "333200"
  },
  {
    "text": "the same resources that your applications are running on so you could have your application could be really",
    "start": "333200",
    "end": "338930"
  },
  {
    "text": "well-written behaving really well but you know you could have noisy neighbors who literally you know spoiling the",
    "start": "338930",
    "end": "344990"
  },
  {
    "text": "party that you're actually having right so you know they start to eat up into your resources and so on and cause",
    "start": "344990",
    "end": "350450"
  },
  {
    "text": "failure so that's another reason for failure and again you've got distributed applications so when you have",
    "start": "350450",
    "end": "355790"
  },
  {
    "text": "distributed applications you can chances are some of the the downstream services",
    "start": "355790",
    "end": "361340"
  },
  {
    "text": "they have actually failed and so what does that mean to you right so you have no control over these applications that",
    "start": "361340",
    "end": "368030"
  },
  {
    "text": "they're that they're failed so the basic thing here is that failure is imminent",
    "start": "368030",
    "end": "373880"
  },
  {
    "text": "right in the cloud and rather than avoid failure you've got to start to embrace",
    "start": "373880",
    "end": "379280"
  },
  {
    "text": "failure and you start to start thinking about you know I spoke about how you start to put things into components and",
    "start": "379280",
    "end": "387169"
  },
  {
    "text": "so on so when failure does happen you want to make sure that you have a limited blast radius so it doesn't",
    "start": "387169",
    "end": "392660"
  },
  {
    "text": "affect some of these other services and so on it's going to be one of the key things that we want to explore and",
    "start": "392660",
    "end": "398650"
  },
  {
    "text": "failure when failure does occur you want to make sure that you you you degrade for me as well so that's another key",
    "start": "398650",
    "end": "405410"
  },
  {
    "text": "thing that you want to think about never send a human to do a machines job this",
    "start": "405410",
    "end": "410599"
  },
  {
    "start": "408000",
    "end": "408000"
  },
  {
    "text": "is one of the quotes from the matrix it's one of my favorite movies and you",
    "start": "410599",
    "end": "417050"
  },
  {
    "text": "know it's very appropriate to use it now and you know when we are deploying our",
    "start": "417050",
    "end": "422180"
  },
  {
    "text": "applications and so on there used to be a time when we would you know have a",
    "start": "422180",
    "end": "428030"
  },
  {
    "text": "planned outage you know you said well you know we've got a window of about two hours and you kind of like give your",
    "start": "428030",
    "end": "433220"
  },
  {
    "text": "build scripts to deployment scripts to someone and they would actually go ahead and deploy it you know click cops you",
    "start": "433220",
    "end": "439430"
  },
  {
    "text": "know do a bunch of things to deploy the application and if it succeed it's good",
    "start": "439430",
    "end": "444949"
  },
  {
    "text": "but if it fails and it takes a lot more time to kind of like roll it back you can't do those things anymore right so",
    "start": "444949",
    "end": "450199"
  },
  {
    "text": "you want to have automation you want to automate everything so not only do you want to automate your build pipeline and everything else",
    "start": "450199",
    "end": "455479"
  },
  {
    "text": "your whole deployment needs to be automated you want to have zero downtime deployment you're all talking about high",
    "start": "455479",
    "end": "461389"
  },
  {
    "text": "availability and you can only do that when you're automating all those things but it doesn't doesn't stop there it",
    "start": "461389",
    "end": "467569"
  },
  {
    "text": "just doesn't stop when you deploy your application you want to make sure that nothing goes wrong over there you want",
    "start": "467569",
    "end": "473030"
  },
  {
    "text": "to have good monitoring over there and good alerting so when something actually goes wrong or is about to go wrong you are notified",
    "start": "473030",
    "end": "480020"
  },
  {
    "text": "you're alerted that something is gonna go wrong and then you can do something about it I would wait why do you need to",
    "start": "480020",
    "end": "485479"
  },
  {
    "text": "do something about it right so again it's a human over there say what you need to do is to to make sure that the",
    "start": "485479",
    "end": "491389"
  },
  {
    "text": "machine takes control of that as well so you have a whole bunch of self-healing and everything else built in all of that",
    "start": "491389",
    "end": "497810"
  },
  {
    "text": "is automated as well you want to build",
    "start": "497810",
    "end": "503180"
  },
  {
    "start": "501000",
    "end": "501000"
  },
  {
    "text": "for performance and responsiveness in this day and age where you know the span of attention of people is very very",
    "start": "503180",
    "end": "508880"
  },
  {
    "text": "short even a few milliseconds can cause people to you know be impatient and then",
    "start": "508880",
    "end": "514219"
  },
  {
    "text": "go over to another another site and you know there's a loss of sale and everything else that all the citizens",
    "start": "514219",
    "end": "520399"
  },
  {
    "text": "will show that you can actually map and how slow their responses and how it starts effects ails and things like that",
    "start": "520399",
    "end": "525920"
  },
  {
    "text": "so but certain things just do take a lot of time to do so how they actually solve",
    "start": "525920",
    "end": "531200"
  },
  {
    "text": "this problem and you do this by running things asynchronously",
    "start": "531200",
    "end": "536290"
  },
  {
    "text": "so the customer still gets a good experience but you can actually take a lot of the you know the work offline and",
    "start": "537050",
    "end": "543440"
  },
  {
    "text": "do do these things asynchronously the other thing is that you want to start to optimize for speed while I did computer",
    "start": "543440",
    "end": "551600"
  },
  {
    "text": "science in university you know we thought about things like how you need to optimize for for storage space and",
    "start": "551600",
    "end": "557300"
  },
  {
    "text": "things like that you know you talk about things like data bases and normalization and so on and so forth but now storage",
    "start": "557300",
    "end": "563630"
  },
  {
    "text": "is cheap you can create multiple copies of your data store it in different places and you know that makes if it",
    "start": "563630",
    "end": "571370"
  },
  {
    "text": "makes you up or for a your machine go faster you an application go faster so be it and I put a little asterisk over that",
    "start": "571370",
    "end": "578120"
  },
  {
    "text": "right so it's still kind of like it depends on the situation you don't want to be in a situation where you're just",
    "start": "578120",
    "end": "583460"
  },
  {
    "text": "ridiculously creating more and more things and you're blowing out your cost so you still need to keep an eye on it",
    "start": "583460",
    "end": "589190"
  },
  {
    "text": "but in most cases that should be fine and again you want to start thinking",
    "start": "589190",
    "end": "595430"
  },
  {
    "text": "about latency and bandwidth if you are running in the old days like client-server applications you know the",
    "start": "595430",
    "end": "602030"
  },
  {
    "text": "client and the server they're all we're in the same network and that you could have really chatty calls you know going",
    "start": "602030",
    "end": "608150"
  },
  {
    "text": "back and forth between your client and your server and was all okay but now in a distributed environment when you have",
    "start": "608150",
    "end": "613460"
  },
  {
    "text": "like an is like your your services your API sitting somewhere else and your data",
    "start": "613460",
    "end": "618650"
  },
  {
    "text": "sitting somewhere else some of these these high chattiness can actually kill your applications they can make it so slow that's totally unusable so when",
    "start": "618650",
    "end": "626360"
  },
  {
    "text": "you're designing these things you want to start thinking about those things as well last but not the least you also",
    "start": "626360",
    "end": "633830"
  },
  {
    "start": "631000",
    "end": "631000"
  },
  {
    "text": "need to deal with legacy applications I mean a GL we run a lot of SAP you know",
    "start": "633830",
    "end": "640250"
  },
  {
    "text": "workloads and so on and again we have a lot of modern applications you know the and so you still have your legacy",
    "start": "640250",
    "end": "647120"
  },
  {
    "text": "applications like SAP and you have your modern applications your web apps your AP is and Microsoft's and everything",
    "start": "647120",
    "end": "652550"
  },
  {
    "text": "that you've built and they still need to communicate with each other and not only that in some cases some of the the",
    "start": "652550",
    "end": "659030"
  },
  {
    "text": "workloads recited in in in your like on-prem while your you know your modern applications are",
    "start": "659030",
    "end": "665100"
  },
  {
    "text": "sitting in the cloud so you need to start thinking about that as well so we'll talk about some of these patterns",
    "start": "665100",
    "end": "670950"
  },
  {
    "text": "that addresses a lot of these things you know how you deal with things like legacy applications and your modern applications and so I've categorized the",
    "start": "670950",
    "end": "677850"
  },
  {
    "text": "patterns that we want to talk about into into five separate areas we'll talk about available T patterns what happens",
    "start": "677850",
    "end": "684450"
  },
  {
    "start": "678000",
    "end": "678000"
  },
  {
    "text": "when you know how do you make your application highly available even in the event of failure and so on what do you",
    "start": "684450",
    "end": "690779"
  },
  {
    "text": "data management patterns you have a lot of these days you know data is cheap and",
    "start": "690779",
    "end": "697230"
  },
  {
    "text": "storage is cheap and we end up producing more and more data so I will look at some amount of patterns to deal with",
    "start": "697230",
    "end": "702930"
  },
  {
    "text": "some of those things I will look at design and implementation patterns I did talk about things like legacy",
    "start": "702930",
    "end": "708060"
  },
  {
    "text": "applications talking to your cloud applications we'll look at some of those patterns that address that we'll talk",
    "start": "708060",
    "end": "713790"
  },
  {
    "text": "about performance and scalability patterns as well and then finally we'll finish up with resiliency patterns what",
    "start": "713790",
    "end": "719070"
  },
  {
    "text": "how do you deal with with failure when things go wrong how does the application",
    "start": "719070",
    "end": "724350"
  },
  {
    "text": "deal with it so let's talk with available let's start with availability",
    "start": "724350",
    "end": "729540"
  },
  {
    "text": "patterns right I mean we talk about things like high availability you want to make sure that the application is running all the time and you can achieve",
    "start": "729540",
    "end": "736710"
  },
  {
    "text": "a lot of these things quite quite easily right I mean there are certain things that you can get out of the box with all",
    "start": "736710",
    "end": "741780"
  },
  {
    "text": "the cloud providers you can run multiple instances like I said earlier and you can put a you know set a load balancer",
    "start": "741780",
    "end": "747780"
  },
  {
    "text": "in front of it and if you want to if you're using databases you can have replication you can create multiple",
    "start": "747780",
    "end": "753300"
  },
  {
    "text": "copies of your data and you kind of like get some level of high availability but that's not enough in most cases so there",
    "start": "753300",
    "end": "759720"
  },
  {
    "start": "759000",
    "end": "759000"
  },
  {
    "text": "are three patterns that I want to talk about the first one is your health endpoint monitoring so when we talk",
    "start": "759720",
    "end": "765600"
  },
  {
    "text": "about you know SSL lace and things like that the one of the key things a problem",
    "start": "765600",
    "end": "770790"
  },
  {
    "start": "766000",
    "end": "766000"
  },
  {
    "text": "that we want to fix is that there's a need to ensure that applications are running within the required SSL ice so",
    "start": "770790",
    "end": "776580"
  },
  {
    "text": "how do you address this thing what you do is you build functionality within the application itself that starts to to",
    "start": "776580",
    "end": "782670"
  },
  {
    "text": "check the health of the application and then you expose this through endpoints and so an agent sits over there and then",
    "start": "782670",
    "end": "791010"
  },
  {
    "text": "it kind of like hits these endpoints frequently it is you what the status of the application is and and starts monitoring now there",
    "start": "791010",
    "end": "801050"
  },
  {
    "text": "are certain things that you want to think about when you're building your health endpoint itself first and foremost you know how do you start to",
    "start": "801050",
    "end": "807080"
  },
  {
    "text": "expose like this one endpoint that goes in and checks all the different things and I did all the downstream services",
    "start": "807080",
    "end": "812810"
  },
  {
    "text": "that it actually connects to or or you know you you kind of like have multiple endpoints that can actually you know for",
    "start": "812810",
    "end": "819590"
  },
  {
    "text": "each and every one of those functionality right do you want to do",
    "start": "819590",
    "end": "825140"
  },
  {
    "text": "like a you want to do like a shallow hill check or a deep hill check a shallow health it could be like a simple pink writes over the source up and",
    "start": "825140",
    "end": "831620"
  },
  {
    "text": "running a deep one could be looking at you know all these other services that actually talks to and then sees whether",
    "start": "831620",
    "end": "837290"
  },
  {
    "text": "they are up and running as well you want to start thinking about the frequency in",
    "start": "837290",
    "end": "843290"
  },
  {
    "text": "which you actually want to do your health check how many things do you do I mean like you don't want to be in a",
    "start": "843290",
    "end": "849710"
  },
  {
    "text": "situation where you're constantly hitting your health service endpoint and you're kind of like bossing yourself",
    "start": "849710",
    "end": "855350"
  },
  {
    "text": "right so you know you want to avoid things like that you have an agent that",
    "start": "855350",
    "end": "861500"
  },
  {
    "text": "is monitoring it what if the agent actually goes down so who monitors the monitor right so that is those are",
    "start": "861500",
    "end": "867620"
  },
  {
    "text": "additional things that you want to think about the next pattern I want to talk",
    "start": "867620",
    "end": "873470"
  },
  {
    "start": "871000",
    "end": "871000"
  },
  {
    "text": "about is around this this pattern called load leveling using cues and one thing",
    "start": "873470",
    "end": "881000"
  },
  {
    "text": "that I did mention is that there are certain things that are just slow it takes a lot of time to execute right so when you have a let's say you have an",
    "start": "881000",
    "end": "887750"
  },
  {
    "text": "endpoint like an API endpoint and your client talks to it let's assume that it takes a long time to finish the",
    "start": "887750",
    "end": "893390"
  },
  {
    "text": "operation that it wants to do so literally what happens is when it hits the endpoint it's just waiting for this",
    "start": "893390",
    "end": "898970"
  },
  {
    "text": "thing to finish out and when it's waiting it just holds up valuable resources and then when you have heavy",
    "start": "898970",
    "end": "905240"
  },
  {
    "text": "load and a lot of these turns are actually waiting that starts to create problems performance and reliability",
    "start": "905240",
    "end": "911120"
  },
  {
    "text": "problems actually start to to come up so how do you actually solve the problem well you you solve the problem by",
    "start": "911120",
    "end": "917120"
  },
  {
    "text": "actually having a queue and and doing a lot of these things asynchronously now",
    "start": "917120",
    "end": "922160"
  },
  {
    "text": "I'd like to it kind of like explain this with a non-technical example right let's say you want to",
    "start": "922160",
    "end": "927810"
  },
  {
    "text": "and apply for a permit so you go to your counsel you know you're making some changes to your house you go to the to",
    "start": "927810",
    "end": "934110"
  },
  {
    "text": "the council and you submit a form so they've got a window over there and the person sitting over there and you can",
    "start": "934110",
    "end": "939420"
  },
  {
    "text": "actually go and submit the form right it's fine so you go and submit the form it takes the person some amount of time to",
    "start": "939420",
    "end": "945870"
  },
  {
    "text": "process all the form and get back to you and while it's happening all you're doing is waiting over there right sets",
    "start": "945870",
    "end": "951600"
  },
  {
    "text": "waste of resources on your part they just sit over there stand over there waiting for the other person to complete it and then someone else comes along and",
    "start": "951600",
    "end": "958410"
  },
  {
    "text": "they want to apply a permit because you're holding it out right and they all he needs to do is get in line and now",
    "start": "958410",
    "end": "963480"
  },
  {
    "text": "he's waiting even longer and then another person comes in and suddenly you have like a like lots of people waiting",
    "start": "963480",
    "end": "968850"
  },
  {
    "text": "and until my job is done this cannot be processed right so what if they actually turn it around a little bit and then",
    "start": "968850",
    "end": "975089"
  },
  {
    "text": "they have like a tray right in front of it all you need to do is to go and drop your item in the tray and you can",
    "start": "975089",
    "end": "981240"
  },
  {
    "text": "actually go away right so your time is not wasted and everyone who actually comes in can actually drop their forms",
    "start": "981240",
    "end": "987390"
  },
  {
    "text": "and they can go on their merry way as well and you think about it right so you",
    "start": "987390",
    "end": "992670"
  },
  {
    "text": "can also do this thing even when the council is not open so you know the tray is sitting just outside the window so",
    "start": "992670",
    "end": "998700"
  },
  {
    "text": "you can actually use the same analogy in this in this scenario right so what actually happens is whoops too far",
    "start": "998700",
    "end": "1011380"
  },
  {
    "text": "so what happens is the client who calls the API endpoint the API endpoints",
    "start": "1011380",
    "end": "1017500"
  },
  {
    "text": "whatever task it needs to do it's a long-running task it creates an item and it puts it into a queue a worker thread over here a",
    "start": "1017500",
    "end": "1026120"
  },
  {
    "text": "command processor picks up this item and then process it or process it offline asynchronously it can take a long time",
    "start": "1026120",
    "end": "1031938"
  },
  {
    "text": "to do it that's fine you know it does this stuff it writes your database and so on and so forth it's all fine if there's a number of items in the",
    "start": "1031939",
    "end": "1038930"
  },
  {
    "text": "queue actually increase you can actually start to scale this you can actually have more processes that are doing it you know the same analogy you know if I",
    "start": "1038930",
    "end": "1044630"
  },
  {
    "text": "extend the analogy if if there are lots and lots of application form sitting over there I can have another person start to",
    "start": "1044630",
    "end": "1052760"
  },
  {
    "text": "process some of these forms as well right so in this scenario what actually",
    "start": "1052760",
    "end": "1059600"
  },
  {
    "text": "happens is that if for these these are durable queues if something actually goes wrong hitting the wrong button",
    "start": "1059600",
    "end": "1065950"
  },
  {
    "text": "if something actually goes wrong over here and there's a failure the item goes",
    "start": "1065950",
    "end": "1073430"
  },
  {
    "text": "back into the queue and you can actually execute it or an or again so you got to be careful so that you can actually",
    "start": "1073430",
    "end": "1078710"
  },
  {
    "text": "start to think about things like I don't put in C over here what it means is that when you're executing the same task",
    "start": "1078710",
    "end": "1084710"
  },
  {
    "text": "again you want to get the exactly the same result let's say you are doing a like a wire",
    "start": "1084710",
    "end": "1090050"
  },
  {
    "text": "transfer right and you're halfway through the wire transfer and there's a failure and the whole system breaks down so what happens is the item goes back",
    "start": "1090050",
    "end": "1097070"
  },
  {
    "text": "into the queue and if you execute the same item again you don't want to deduct money from the same account twice right",
    "start": "1097070",
    "end": "1102920"
  },
  {
    "text": "this is where you need to be careful and you need to think about item frequency",
    "start": "1102920",
    "end": "1108880"
  },
  {
    "text": "going back to the council example right so let's assume that there are hundreds of forms that get delivered to the",
    "start": "1110500",
    "end": "1115640"
  },
  {
    "text": "council every day and but you know whatever reason you you didn't do yours",
    "start": "1115640",
    "end": "1120860"
  },
  {
    "text": "on time but you want to you're prepared to pay extra right so you want to pay a hundred bucks to make sure that yours is",
    "start": "1120860",
    "end": "1127190"
  },
  {
    "text": "done quicker the council will happily take your money and process yours first right so that's probably separate tray",
    "start": "1127190",
    "end": "1134120"
  },
  {
    "text": "for that where you can actually pass out so the same thing applies over here you can actually start to set up priority queues and based on the priority queues",
    "start": "1134120",
    "end": "1141230"
  },
  {
    "text": "you can actually start to pick a pick the pick the ones that are more important and then process them ahead of time so so you can actually",
    "start": "1141230",
    "end": "1148490"
  },
  {
    "text": "have a whole bunch of hues over here and then depending on the function that you",
    "start": "1148490",
    "end": "1153830"
  },
  {
    "text": "want you can post the to the right cue the command processor can actually pick it up in the next cuter and of course",
    "start": "1153830",
    "end": "1161930"
  },
  {
    "text": "you know the command processor can be scaled independently so you see more and more items queuing up over here you can actually start to scale it so all those",
    "start": "1161930",
    "end": "1168380"
  },
  {
    "text": "items get done done quickly but every",
    "start": "1168380",
    "end": "1173540"
  },
  {
    "start": "1172000",
    "end": "1172000"
  },
  {
    "text": "now and then in spite of doing things a synchronously there will be plenty of there will be a lot of load on your on",
    "start": "1173540",
    "end": "1179420"
  },
  {
    "text": "your server and there will be a point where you have so much load that it's",
    "start": "1179420",
    "end": "1185300"
  },
  {
    "text": "starting to cost performance and reliability issues so how do you",
    "start": "1185300",
    "end": "1190520"
  },
  {
    "text": "actually fix this right so what you need to do see you you kind of like start to monitor your resource utilization and",
    "start": "1190520",
    "end": "1195950"
  },
  {
    "text": "when your resources listen you start to set some thresholds and when it reaches those thresholds what you want to do is",
    "start": "1195950",
    "end": "1202220"
  },
  {
    "text": "firstly what you want to do is you want to disable some of those non-essential services so you can actually free up some resources between your your server",
    "start": "1202220",
    "end": "1209210"
  },
  {
    "text": "and then you've got to start rejecting new requests coming in that's no two",
    "start": "1209210",
    "end": "1216950"
  },
  {
    "text": "ways about you start to reject those DUHS requests because it is more important that your service doesn't fail",
    "start": "1216950",
    "end": "1224080"
  },
  {
    "text": "then you know rejecting some some new recruits that are coming in but I didn't",
    "start": "1224080",
    "end": "1230540"
  },
  {
    "text": "you know you do other things like you start to defer some of the non-essential tasks as well but the key thing to keep",
    "start": "1230540",
    "end": "1236090"
  },
  {
    "text": "in mind over here is that throttling is always a temporary measure so what you",
    "start": "1236090",
    "end": "1242870"
  },
  {
    "text": "do is you start to reject these the new requests that are coming in but while you're rejecting it you want to make sure that you do other you put other",
    "start": "1242870",
    "end": "1250700"
  },
  {
    "text": "things in place so you know like things like auto scaling or things to to make sure that you know the",
    "start": "1250700",
    "end": "1257440"
  },
  {
    "text": "you can start to process more requests and things like that once you do that then you can actually you know get rid",
    "start": "1257440",
    "end": "1262690"
  },
  {
    "text": "off of the throttling itself you also need to keep in mind that when something",
    "start": "1262690",
    "end": "1268000"
  },
  {
    "text": "actually goes wrong and you're rejecting these calls you are returning the appropriate code back to the calling",
    "start": "1268000",
    "end": "1274270"
  },
  {
    "text": "client one of the patterns I'll talk about is a retry pattern right what the retry pattern is when something actually",
    "start": "1274270",
    "end": "1279790"
  },
  {
    "text": "goes wrong we basically say hey you know it maybe it's uh you know transient error just try again right you don't",
    "start": "1279790",
    "end": "1285310"
  },
  {
    "text": "want to be in a scenario where you are experiencing a lot of load and you're rejecting the service and the client",
    "start": "1285310",
    "end": "1291730"
  },
  {
    "text": "actually thinks oh it's temporary and I'm gonna call this person again call the service again and it starts to compound a component the problem as well",
    "start": "1291730",
    "end": "1297990"
  },
  {
    "text": "so making sure that you return the appropriate codes the client can basically you look at it and you're like okay well you know there's something",
    "start": "1297990",
    "end": "1304690"
  },
  {
    "text": "wrong with it I will hold back for a while before I try my operation again and you also need",
    "start": "1304690",
    "end": "1311470"
  },
  {
    "text": "to think about how we you know how you perform graceful decoration when some other unit throttling and things like",
    "start": "1311470",
    "end": "1317080"
  },
  {
    "text": "that happen how do you how does the the client handle so these are things that you need to think up front before you",
    "start": "1317080",
    "end": "1322630"
  },
  {
    "text": "start your the whole application Nowell architecture itself well then let's talk",
    "start": "1322630",
    "end": "1330310"
  },
  {
    "text": "about data management patterns like I said you know in this day and age we are generating lots and lots lots of data",
    "start": "1330310",
    "end": "1336670"
  },
  {
    "text": "right data is king and even if we don't need the data we just collect it anyway so that we can maybe use it in the",
    "start": "1336670",
    "end": "1342580"
  },
  {
    "text": "future which is okay there's nothing wrong with it right but it come in a lot of other problems that we need to to",
    "start": "1342580",
    "end": "1347740"
  },
  {
    "text": "deal with so I've got about six patents over here acacia side materialized view",
    "start": "1347740",
    "end": "1353850"
  },
  {
    "text": "CQRS Valerie and I'll go through them one by one starting with the acacia side pattern now casing is actually a really",
    "start": "1353850",
    "end": "1359590"
  },
  {
    "start": "1359000",
    "end": "1359000"
  },
  {
    "text": "good thing so when it helps with performance in a rather than go to the data source every time the case is a lot",
    "start": "1359590",
    "end": "1366730"
  },
  {
    "text": "faster than let's say a relational database so you go to it get the data and and you know you return back the",
    "start": "1366730",
    "end": "1372340"
  },
  {
    "text": "data back to the client it's really good but what it actually does is that at",
    "start": "1372340",
    "end": "1378910"
  },
  {
    "text": "some point in time the case data gets stale so you've gone and updated the data source but the case is still",
    "start": "1378910",
    "end": "1385300"
  },
  {
    "text": "holding on to old data and then you have all these data consistency issues so how do you actually solve this problem",
    "start": "1385300",
    "end": "1391630"
  },
  {
    "text": "the way you solve this problem is is effectively let's say that you have",
    "start": "1391630",
    "end": "1398679"
  },
  {
    "text": "let's say you have you know API endpoint you hit the API endpoint looking for data it goes to the cash purse and say",
    "start": "1400660",
    "end": "1407120"
  },
  {
    "text": "hey do you have the data that I'm looking for and you say well I don't have the data I'm looking for so you go",
    "start": "1407120",
    "end": "1412160"
  },
  {
    "text": "in to the data source get the data and when you get the data you check it back into the data cache right so that's",
    "start": "1412160",
    "end": "1418940"
  },
  {
    "text": "that's that's okay that's all good the subsequent calls will always find the data in the data education and then",
    "start": "1418940",
    "end": "1424340"
  },
  {
    "text": "it's quick right now what happens is that if you want to update this data over here that is the main data source",
    "start": "1424340",
    "end": "1430010"
  },
  {
    "text": "you always go to another API endpoint or the same UPN whatever it is you go to this API endpoint and when it updates",
    "start": "1430010",
    "end": "1436550"
  },
  {
    "text": "the data in the case it invalidates the sorry the updated data in the data source it invalidates the case over here",
    "start": "1436550",
    "end": "1444429"
  },
  {
    "text": "so what it means is it removes the item from the case so if you're looking for",
    "start": "1444429",
    "end": "1450380"
  },
  {
    "text": "the data again where you go and you'll find there's no data in there and you know you need start from scratch you",
    "start": "1450380",
    "end": "1456320"
  },
  {
    "text": "know you go back to the your main data source you get the data and so by doing this your data isn't stale so it's",
    "start": "1456320",
    "end": "1463550"
  },
  {
    "text": "always the most recent copy that you have you can do certain things like you",
    "start": "1463550",
    "end": "1468950"
  },
  {
    "text": "can improve the performance by actually priming the case so when you start the application you can actually load data from the data source and check it into",
    "start": "1468950",
    "end": "1475220"
  },
  {
    "text": "the case so you know the first time it's not empty so you can do things like that to improve your performance even further",
    "start": "1475220",
    "end": "1482890"
  },
  {
    "text": "the one thing you need to think about is that most cases sometimes the case is a lot smaller than your actual data source",
    "start": "1482890",
    "end": "1490179"
  },
  {
    "text": "so you still need to think about hey what happens with you know how long do I",
    "start": "1490179",
    "end": "1495710"
  },
  {
    "text": "hold on to this thing lifetime of the case data itself you need to start thinking about that you want to start thinking about data eviction policies so",
    "start": "1495710",
    "end": "1501800"
  },
  {
    "text": "if the if data is there in the case for a very long time you know maybe you want to get rid of it or you know you need to",
    "start": "1501800",
    "end": "1507260"
  },
  {
    "text": "come up with policies that handle that well the one thing that you need to be",
    "start": "1507260",
    "end": "1513140"
  },
  {
    "text": "careful off in this thing is like someone coming in directly and updating the data source over here say in which",
    "start": "1513140",
    "end": "1520220"
  },
  {
    "text": "case then you still have the same problem that you originally started with so you end but still they're over here materialized",
    "start": "1520220",
    "end": "1530090"
  },
  {
    "start": "1528000",
    "end": "1528000"
  },
  {
    "text": "view is an X pattern I want to talk about when you're going and looking at",
    "start": "1530090",
    "end": "1535880"
  },
  {
    "text": "data itself right like I said typically in most cases we're still storing data",
    "start": "1535880",
    "end": "1540920"
  },
  {
    "text": "in a relational in a relational databases a relational database so you have multiple tables and you do you know",
    "start": "1540920",
    "end": "1547640"
  },
  {
    "text": "joins you do group bys and all these kind of things and this is generally quite slow the second thing is if you",
    "start": "1547640",
    "end": "1556070"
  },
  {
    "text": "want to do calculated fields I'll go I'll give it an example of something from my industry energy right so one of",
    "start": "1556070",
    "end": "1562520"
  },
  {
    "text": "the things that we do at at HDL is you know we have all these smart meters right so the smart meters basically show",
    "start": "1562520",
    "end": "1568910"
  },
  {
    "text": "you collect usage information about the electricity that you've consumed and they keep sending back data every 15",
    "start": "1568910",
    "end": "1575030"
  },
  {
    "text": "minutes so you can actually look at it and say well hey you know how much is my consumption you know in this hour or",
    "start": "1575030",
    "end": "1581630"
  },
  {
    "text": "this day this week and so on and so for you can actually get all the all the data you can actually look at it but",
    "start": "1581630",
    "end": "1587330"
  },
  {
    "text": "here's the thing right so we the the meter data is always in thing in units",
    "start": "1587330",
    "end": "1592670"
  },
  {
    "text": "like kilowatt hours or something like that a user doesn't understand what that unit is really they want to know in in",
    "start": "1592670",
    "end": "1599060"
  },
  {
    "text": "dollar amounts how much they've actually consumed and so there's a lot of complex",
    "start": "1599060",
    "end": "1604070"
  },
  {
    "text": "calculations so you know they could how like the price could be different between the certain time periods and",
    "start": "1604070",
    "end": "1609380"
  },
  {
    "text": "people could be in different prices and you need to kind of like calculate all these in the fly and rather than",
    "start": "1609380",
    "end": "1615110"
  },
  {
    "text": "actually calculate this on the fly what if you pre calculated this and created materialized to be over everything resides over there and that will",
    "start": "1615110",
    "end": "1621890"
  },
  {
    "text": "actually make you know make it really performant so the way to fix the problem",
    "start": "1621890",
    "end": "1627620"
  },
  {
    "text": "like I said is is is effectively you create separate views based on the specific queries and you can do a whole",
    "start": "1627620",
    "end": "1633710"
  },
  {
    "text": "bunch of this you know combined calculated fields you can do transformations you do all of the stuff and put it in a separate view and say in",
    "start": "1633710",
    "end": "1642830"
  },
  {
    "text": "this example right so you've got this complex data you know you do your",
    "start": "1642830",
    "end": "1648530"
  },
  {
    "text": "complex you know group buys and everything else and check it into a materialized view and whenever you want",
    "start": "1648530",
    "end": "1654080"
  },
  {
    "text": "data you just get it directly from you you just remember that this is a",
    "start": "1654080",
    "end": "1660050"
  },
  {
    "text": "read-only view of the data itself right so when if you want to go change the the data you still need to go and update the",
    "start": "1660050",
    "end": "1667010"
  },
  {
    "text": "source data oh here so things that you need to think",
    "start": "1667010",
    "end": "1672020"
  },
  {
    "text": "about is like you know how do you actually deal with trigger mechanism when you update this data how frequently do you start to update this and when",
    "start": "1672020",
    "end": "1678200"
  },
  {
    "text": "does it get triggered and how do you update this you want to start thinking about you know storage cost blobs if you",
    "start": "1678200",
    "end": "1684380"
  },
  {
    "text": "start to creating lots and lots of materialized views the data is complex in this large and how do you how do you",
    "start": "1684380",
    "end": "1689510"
  },
  {
    "text": "deal with it most of the time it's not a problem you know like I said you know we",
    "start": "1689510",
    "end": "1694730"
  },
  {
    "text": "we do a lot of these things ourselves in a at HDL so we create a lot of lot of",
    "start": "1694730",
    "end": "1700160"
  },
  {
    "text": "views even usage data so uses data that that's there for every 15 minutes and",
    "start": "1700160",
    "end": "1705830"
  },
  {
    "text": "and so on so it all works it's not it's not such a big problem a lot a lot of a",
    "start": "1705830",
    "end": "1713060"
  },
  {
    "text": "lot of cases the the materialized views are are you can sort in transient stores you know you can store it in a cage and",
    "start": "1713060",
    "end": "1718490"
  },
  {
    "text": "you can literally blow it away and then recreate it whenever you want so works are quite well the one thing is",
    "start": "1718490",
    "end": "1725420"
  },
  {
    "text": "when you want strong consistency that's still a problem you know you need to",
    "start": "1725420",
    "end": "1732350"
  },
  {
    "text": "figure out you know the materialized view may there may be a bit of a lag between the time this is updated and and",
    "start": "1732350",
    "end": "1738950"
  },
  {
    "text": "you see the results over here so you need to keep that in mind it's kind of",
    "start": "1738950",
    "end": "1744800"
  },
  {
    "start": "1744000",
    "end": "1744000"
  },
  {
    "text": "like an extension of the materialized view itself right is the right you know",
    "start": "1744800",
    "end": "1752720"
  },
  {
    "text": "there's a bit of a mismatch between reading and writing data but what we generally do is is we kind of like run",
    "start": "1752720",
    "end": "1760760"
  },
  {
    "text": "them through like a standard like a business logic and they all go through the same flow and when you're writing",
    "start": "1760760",
    "end": "1766940"
  },
  {
    "text": "data what happens you put locks on the down the on the table itself or you know on the records and that leads to you",
    "start": "1766940",
    "end": "1773600"
  },
  {
    "text": "know locking and you know it slows down the reads and so there's kind of like this mismatch right so so the CQRS",
    "start": "1773600",
    "end": "1780650"
  },
  {
    "text": "pattern actually solves this now I've been talking about secures for a long time and maybe out five six years ago",
    "start": "1780650",
    "end": "1785930"
  },
  {
    "text": "when I even asked the question like how many people know about this and you know hardly you know quite a just few people",
    "start": "1785930",
    "end": "1791710"
  },
  {
    "text": "in the audience who put their hand up on casa christian again how many of you have heard about this pattern and use it yeah see the nice thing about it is like",
    "start": "1791710",
    "end": "1798190"
  },
  {
    "text": "a I see a lot more people putting their hand up and starting to use this pattern so how does this pattern work like",
    "start": "1798190",
    "end": "1803500"
  },
  {
    "text": "literally what you do is you separate out your reeds which is effectively a queries and your commands which is affecting your rights and and so you",
    "start": "1803500",
    "end": "1813640"
  },
  {
    "text": "kind of like use this the the query centric work for the Q centric workflow pattern that I was talking about right",
    "start": "1813640",
    "end": "1819880"
  },
  {
    "text": "so when you are doing your commands your rights you check it into a queue and your command processor or your worker or",
    "start": "1819880",
    "end": "1825640"
  },
  {
    "text": "here picks up this item and it asynchronously writes to the database and it can be a really slow operation",
    "start": "1825640",
    "end": "1830860"
  },
  {
    "text": "but you don't care right so it eventually makes a lot of these changes and it writes to the to your data source",
    "start": "1830860",
    "end": "1836320"
  },
  {
    "text": "and and then you can still do a bunch of calculations and create your materialized views over here so when",
    "start": "1836320",
    "end": "1843280"
  },
  {
    "text": "your when an application wants to read the data it just goes in and just goes to the query the data is actually",
    "start": "1843280",
    "end": "1850110"
  },
  {
    "text": "appropriately shaped for it so you can actually go and say hey get me the data and then takes the data and it's it's you know it's so quick and it's it's",
    "start": "1850110",
    "end": "1856600"
  },
  {
    "text": "really performant so even with this design you need to you know you could",
    "start": "1856600",
    "end": "1863830"
  },
  {
    "text": "you have to deal with things like this eventual consistency issues that I spoke about earlier so you still need to reckon with that",
    "start": "1863830",
    "end": "1869130"
  },
  {
    "text": "but this is this is a this is a pattern that that is you know extremely popular",
    "start": "1869130",
    "end": "1874990"
  },
  {
    "text": "these days and there are a number of things that it actually provides right even when some",
    "start": "1874990",
    "end": "1880000"
  },
  {
    "text": "of the the nice thing about it is like even if some some parts of system actually fail for example let's say the",
    "start": "1880000",
    "end": "1886960"
  },
  {
    "text": "command processor fails right and the database is not available whatever it may be you can still start putting items",
    "start": "1886960",
    "end": "1892360"
  },
  {
    "text": "into the queue and then when this system is up it can actually pick it up and and and and then process it and you have",
    "start": "1892360",
    "end": "1899650"
  },
  {
    "text": "this materialized divisible here right so even if the system is down you can still have your reads and they can still",
    "start": "1899650",
    "end": "1904930"
  },
  {
    "text": "continue to work so you kind of like introduced a lot of resilience into the into the architecture itself the next",
    "start": "1904930",
    "end": "1914230"
  },
  {
    "start": "1910000",
    "end": "1910000"
  },
  {
    "text": "pattern is the valid key pattern that I want to talk about and in a typical application when you want to access data",
    "start": "1914230",
    "end": "1919450"
  },
  {
    "text": "let's say you want to access a customer data right so what do you do you go and go to an API and say hey can you get me this customer data it",
    "start": "1919450",
    "end": "1925570"
  },
  {
    "text": "over the database it grabs the customer data and then gives it to you right so the API would actually do security",
    "start": "1925570",
    "end": "1930970"
  },
  {
    "text": "checks and everything else and it's all fine but what if you're dealing with a different kind of data so let's say",
    "start": "1930970",
    "end": "1936820"
  },
  {
    "text": "you're dealing with something like a streaming data let's say it's a video images or audio meters or the data itself is so big rights like like large",
    "start": "1936820",
    "end": "1943090"
  },
  {
    "text": "documents and so on so in this scenario what really happens is that when you",
    "start": "1943090",
    "end": "1948220"
  },
  {
    "text": "when you have many are calling the API to get the data from the data source all that does is it goes in streams all the",
    "start": "1948220",
    "end": "1954370"
  },
  {
    "text": "data loads it up and then it passes it back to the whoever is asking for and it",
    "start": "1954370",
    "end": "1963190"
  },
  {
    "text": "starts to consume you know compute and other resources and things like that it's probably in the long run it's not",
    "start": "1963190",
    "end": "1969190"
  },
  {
    "text": "it's not a great way of doing it but you also don't want the client to go",
    "start": "1969190",
    "end": "1975640"
  },
  {
    "text": "directly to the data source because you want to have you know you want it to be secure and so on so so the way to fix this problem right so you effectively",
    "start": "1975640",
    "end": "1981910"
  },
  {
    "text": "end up the client ends up going to the cloud application and say you know can you please give me a token to access the",
    "start": "1981910",
    "end": "1987940"
  },
  {
    "text": "data right so it gives a time-limited token which actually expires and so you",
    "start": "1987940",
    "end": "1993910"
  },
  {
    "text": "go directly to the data service and then you know you give it to add the access token and this token is actually called",
    "start": "1993910",
    "end": "2000120"
  },
  {
    "text": "a valet key so you give the valet key and since I can I have the data and then the data is directly streaming between",
    "start": "2000120",
    "end": "2006930"
  },
  {
    "text": "the service and the client and you don't have to have an someone sitting in between they're actually basically reads",
    "start": "2006930",
    "end": "2012300"
  },
  {
    "text": "the data and pass it back there are certain things that you want to think about in this pattern again you know you",
    "start": "2012300",
    "end": "2018330"
  },
  {
    "text": "need to kind of like manage the Valatie period of the key you don't want the Valatie period to be too short then it's",
    "start": "2018330",
    "end": "2023430"
  },
  {
    "text": "too short then you know you got to start requesting for this valet another valet key again and that's not efficient and",
    "start": "2023430",
    "end": "2030270"
  },
  {
    "text": "you don't want to make it too long either because in that case you know you have like a rule key running around you're worried about you know misuse and",
    "start": "2030270",
    "end": "2036180"
  },
  {
    "text": "things like that this is not suitable when you are doing some kind of transformation with the data itself",
    "start": "2036180",
    "end": "2042170"
  },
  {
    "text": "let's assume you know it's probably a bad example but let's say you have",
    "start": "2042170",
    "end": "2048179"
  },
  {
    "text": "let's say like a video right so like a colored like a and you're converting into black and white and passing through",
    "start": "2048180",
    "end": "2054179"
  },
  {
    "text": "right there's a transformation you're doing on-the-fly and those are the kind of scenarios where it's not applicable",
    "start": "2054180",
    "end": "2059190"
  },
  {
    "text": "what you should really be doing is you should be creating a copy of it in like black and white and storing it right and",
    "start": "2059190",
    "end": "2064649"
  },
  {
    "text": "but yeah it's a kind of like an extension of that is the static content",
    "start": "2064650",
    "end": "2070440"
  },
  {
    "start": "2067000",
    "end": "2067000"
  },
  {
    "text": "hosting now I kept in data patterns content I also treat content as such as",
    "start": "2070440",
    "end": "2076980"
  },
  {
    "text": "data so in this scenario let's say you're you've got a single patient so we",
    "start": "2076980",
    "end": "2083010"
  },
  {
    "text": "do this at at HDL we've got an application called my account it's it's an application that allows you to self-service right and it's a single",
    "start": "2083010",
    "end": "2090840"
  },
  {
    "text": "page app it's written an angular so what does it contain it contains HTML it contains typescript JavaScript CSS files",
    "start": "2090840",
    "end": "2098430"
  },
  {
    "text": "images and all those kind of things now",
    "start": "2098430",
    "end": "2103470"
  },
  {
    "text": "typically what happens is a lot of these things are hosted in a web server and all the web server does is it goes and",
    "start": "2103470",
    "end": "2109830"
  },
  {
    "text": "grabs the resource from your file system reads it back and pass it on to the client right that's a way stage of you",
    "start": "2109830",
    "end": "2118230"
  },
  {
    "text": "know the the web servers resources and compute and everything else because all it's doing is it's reading getting it",
    "start": "2118230",
    "end": "2124920"
  },
  {
    "text": "passing it back to someone else so what if you actually served all the static",
    "start": "2124920",
    "end": "2132300"
  },
  {
    "text": "content directly from you know rather nitrous served from the web server you basically so extreme you know you know",
    "start": "2132300",
    "end": "2139740"
  },
  {
    "text": "you basically serve it from your storage service things like your blob and so on so in the case of my account what we're",
    "start": "2139740",
    "end": "2145500"
  },
  {
    "text": "doing is we're actually directly putting it into the CDN so so that's that's even",
    "start": "2145500",
    "end": "2151860"
  },
  {
    "text": "better so you know you you you chuck everything into the H service and because it's only HTML and CSS and",
    "start": "2151860",
    "end": "2157350"
  },
  {
    "text": "things like that you don't have to worry about things like you know security and things like that right we still run our",
    "start": "2157350",
    "end": "2164370"
  },
  {
    "text": "API isn't everything else and that's all hosted in the server and the suicide you know you still need your web service to",
    "start": "2164370",
    "end": "2170640"
  },
  {
    "text": "actually process that but at least you don't waste valuable resources in just",
    "start": "2170640",
    "end": "2175950"
  },
  {
    "text": "hosting static content there are certain things that you need",
    "start": "2175950",
    "end": "2181780"
  },
  {
    "text": "to think about you know obviously your deployment model and everything else changes now so you need to figure out",
    "start": "2181780",
    "end": "2187060"
  },
  {
    "text": "how you do it there are certain things like you know when you're using let's say you chuck all the stuff into blob",
    "start": "2187060",
    "end": "2192760"
  },
  {
    "text": "storage the URL pot can look very cryptic so how do you map it to how you",
    "start": "2192760",
    "end": "2198070"
  },
  {
    "text": "do your routing and all that you need to figure out but it's it's not a it's not it's not too complex you can actually do",
    "start": "2198070",
    "end": "2203380"
  },
  {
    "text": "that the next pattern I want to talk about is sharding I keep talking about",
    "start": "2203380",
    "end": "2210400"
  },
  {
    "start": "2204000",
    "end": "2204000"
  },
  {
    "text": "this thing right so you you're creating more and more data these days and which",
    "start": "2210400",
    "end": "2215680"
  },
  {
    "text": "is good but when you have large data stores you kind of start to introduce",
    "start": "2215680",
    "end": "2221080"
  },
  {
    "text": "some limitations of the system itself you know limitation in terms of storage space your computing resources and",
    "start": "2221080",
    "end": "2228820"
  },
  {
    "text": "they're all stretched because your database is now too big so how do you solve the problem you solve the problem",
    "start": "2228820",
    "end": "2234040"
  },
  {
    "text": "by actually splitting the data into horizontal partitions or shards right",
    "start": "2234040",
    "end": "2239680"
  },
  {
    "text": "and then and then you distribute it out and so when your application actually wants to do you to use certain type of",
    "start": "2239680",
    "end": "2245290"
  },
  {
    "text": "data it just goes to that chart and it's a lot more easier to process that rather than have a really large database so",
    "start": "2245290",
    "end": "2253210"
  },
  {
    "text": "things you need to think about is like what is charting strategy is a lot of people basically go and say well you know we're going to base it on the",
    "start": "2253210",
    "end": "2261030"
  },
  {
    "text": "customers zero no fair prepare the geolocation where they are and then we'll shot it based on that",
    "start": "2261030",
    "end": "2268000"
  },
  {
    "text": "some people will basically say you know a to a to D is a it's a shot and then e",
    "start": "2268000",
    "end": "2273880"
  },
  {
    "text": "2 H is another shot and so on and so forth whatever works for you right there's no really good rule on saying this is the",
    "start": "2273880",
    "end": "2280270"
  },
  {
    "text": "right shouting technique but you need to make sure that whatever it is you can",
    "start": "2280270",
    "end": "2285430"
  },
  {
    "text": "you can partition it appropriately right so it's kind of like equal across the multiple shots so the data is split up",
    "start": "2285430",
    "end": "2291610"
  },
  {
    "text": "equilibria in multiple shots when you have shots you want to make sure that you avoid queries that span multiple",
    "start": "2291610",
    "end": "2298350"
  },
  {
    "text": "shots as well that'll literally kill it I mean so you want to avoid that at all cost",
    "start": "2298350",
    "end": "2304800"
  },
  {
    "text": "things like reference data and you know they can be shared across all these you",
    "start": "2304800",
    "end": "2310300"
  },
  {
    "text": "know they can be duplicated in shared across all these shots so even if you want to do like joints and things like that they all work quite well let's move on to",
    "start": "2310300",
    "end": "2320130"
  },
  {
    "text": "design an implementation patterns this is where I want to talk a lot about you",
    "start": "2320130",
    "end": "2327000"
  },
  {
    "text": "know you may have legacy code legacy applications in your system and but you are now building modern cloud",
    "start": "2327000",
    "end": "2332760"
  },
  {
    "text": "applications how do they actually talk to each other and so on what are the patterns that are involved there are about nine patterns and but we've",
    "start": "2332760",
    "end": "2339690"
  },
  {
    "text": "already seen covered a couple of them we've covered things like CQRS and the static content hosting so we will talk",
    "start": "2339690",
    "end": "2344910"
  },
  {
    "text": "about the first we will talk about the rest starting with the Ambassador pattern when you want to start talking",
    "start": "2344910",
    "end": "2353490"
  },
  {
    "start": "2348000",
    "end": "2348000"
  },
  {
    "text": "to you know cloud services and so on you may want to introduce a lot of there's a",
    "start": "2353490",
    "end": "2359010"
  },
  {
    "text": "lot of cross-cutting functionality that you want to have things like retries and you know circuit breaker patterns and",
    "start": "2359010",
    "end": "2365550"
  },
  {
    "text": "things I will talk about in a in this talk and when you have legacy",
    "start": "2365550",
    "end": "2374550"
  },
  {
    "text": "applications it's really hard to go and change these legacy applications to to build in a lot of these things in every",
    "start": "2374550",
    "end": "2380850"
  },
  {
    "text": "call that it makes so if you want to do retry logic in it it's really hard to go and change the legacy application so",
    "start": "2380850",
    "end": "2386370"
  },
  {
    "text": "that every call that it actually makes is you know it's got creature logic in it for example so the way you actually fix the problem is you you end up",
    "start": "2386370",
    "end": "2393420"
  },
  {
    "text": "putting a proxy that sits between the legacy application the remote shows so every time rather than actually call the",
    "start": "2393420",
    "end": "2398910"
  },
  {
    "text": "cloud service directly you call the proxy the proxy typically the Ambassador and and the Ambassador a terrifically",
    "start": "2398910",
    "end": "2411570"
  },
  {
    "text": "the the proxy it handles things like retry logic circuit breaker if you want to do things like monitoring and logging all of that stuff gets done over there",
    "start": "2411570",
    "end": "2417960"
  },
  {
    "text": "and then you call the remote service of course you know it introduced things like latency overheads you know you have",
    "start": "2417960",
    "end": "2424110"
  },
  {
    "text": "impact of generalized server features for example you know in some cases you don't want to retry right but now you're",
    "start": "2424110",
    "end": "2430740"
  },
  {
    "text": "calling generalized functionality so you're forced to use retry so you can you can fix a lot of these things by",
    "start": "2430740",
    "end": "2436830"
  },
  {
    "text": "having passing the context to the proxy so the legacy application can pass them some context so it can decide whether it",
    "start": "2436830",
    "end": "2443370"
  },
  {
    "text": "wants to do things like retry and so on this pattern is uh is also is generally",
    "start": "2443370",
    "end": "2450240"
  },
  {
    "text": "implement as a sidecar pattern I'll talk about the sidecar pattern I'll cover that in a bit but just something to keep",
    "start": "2450240",
    "end": "2456300"
  },
  {
    "text": "in mind when you're writing cloud",
    "start": "2456300",
    "end": "2462000"
  },
  {
    "start": "2458000",
    "end": "2458000"
  },
  {
    "text": "applications you know you kind of like green fields when you start from scratch and you kind of like do your domain-driven design you come up with",
    "start": "2462000",
    "end": "2468600"
  },
  {
    "text": "this really nice clean architecture and data models and everything else but then they want to talk to legacy applications",
    "start": "2468600",
    "end": "2475050"
  },
  {
    "text": "and legacy applications you know you have these outdated data models and protocols and everything else and so",
    "start": "2475050",
    "end": "2481620"
  },
  {
    "text": "what happens is to talk to them you're clean model now we kind of it gets corrupted because you need to kind of",
    "start": "2481620",
    "end": "2487470"
  },
  {
    "text": "like I had these data fields and things like that you didn't really want to do right so how do you actually protect this so what you do is you create this",
    "start": "2487470",
    "end": "2493590"
  },
  {
    "text": "this anti-corruption layer that actually sits between it's it's a facade that actually sits between your legacy",
    "start": "2493590",
    "end": "2499740"
  },
  {
    "text": "application and your modern cloud application right and this still has all",
    "start": "2499740",
    "end": "2506250"
  },
  {
    "text": "this clean design and everything else and but when it wants to talk to the legacy application it calls these",
    "start": "2506250",
    "end": "2512430"
  },
  {
    "text": "methods you know this functionality in the anti-corruption layer the anti-corruption layer has all the glib",
    "start": "2512430",
    "end": "2518130"
  },
  {
    "text": "ugly bits in it right it does all the transformations and everything else it converts you know there's this nice data",
    "start": "2518130",
    "end": "2525420"
  },
  {
    "text": "structures into this bad data certificate that and then it calls these legacy applications and the same thing",
    "start": "2525420",
    "end": "2532380"
  },
  {
    "text": "can happen over here so the anti-corruption layer literally protects this thing it's pretty useful when",
    "start": "2532380",
    "end": "2538920"
  },
  {
    "text": "you're migrating really large legacy applications into the cloud and there's",
    "start": "2538920",
    "end": "2543960"
  },
  {
    "text": "this a pattern called triangular pattern we'll talk about this in a bit and it's kind of like that will actually help you",
    "start": "2543960",
    "end": "2551720"
  },
  {
    "text": "figuring out how the permanency decisions as well like how long does the anti-corruption layer remain and when do",
    "start": "2551720",
    "end": "2558810"
  },
  {
    "text": "you need to get rid of it and things like that back and forth front ends or BFF is a",
    "start": "2558810",
    "end": "2566310"
  },
  {
    "start": "2562000",
    "end": "2562000"
  },
  {
    "text": "pattern that's kind of like become prominent since you you know we've started having micro services and things",
    "start": "2566310",
    "end": "2572490"
  },
  {
    "text": "like that it's become more and more prominent so you know the backend services right so I'll explain what is",
    "start": "2572490",
    "end": "2579210"
  },
  {
    "text": "the back services tend to be very generic so you kinda have this have this nice clean domain model that exposes all your data",
    "start": "2579210",
    "end": "2587220"
  },
  {
    "text": "so you have like a customer data and so on or your product you kind of like build all these kinda like generic",
    "start": "2587220",
    "end": "2592799"
  },
  {
    "text": "services back-end services that exposes your data but then but then you have",
    "start": "2592799",
    "end": "2598349"
  },
  {
    "text": "your front ends and let's say you have a mobile front end and the mobile front end when it needs to go get this data it",
    "start": "2598349",
    "end": "2604979"
  },
  {
    "text": "needs to maybe call multi we need to make multiple calls to get the data in in in the shape and size that it wants",
    "start": "2604979",
    "end": "2611819"
  },
  {
    "text": "to actually display and so on you know you've got a desktop web application you can only needs data in a certain format",
    "start": "2611819",
    "end": "2618779"
  },
  {
    "text": "so to fix this problem what you do is you create a specific you you create a",
    "start": "2618779",
    "end": "2626369"
  },
  {
    "text": "separate back-end service for each and every front-end so in this case you've got a BFF for mobile application and you",
    "start": "2626369",
    "end": "2633150"
  },
  {
    "text": "have a BFF for a desktop client application what this mobile BFF does is it can actually start aggregate some of",
    "start": "2633150",
    "end": "2640380"
  },
  {
    "text": "these services it may call the customer service it may call the product service you know it kind of like gets all the",
    "start": "2640380",
    "end": "2645719"
  },
  {
    "text": "data together and then it passed ships it in in the structure and shape that it wants and and sends it back to the to",
    "start": "2645719",
    "end": "2652680"
  },
  {
    "text": "the mobile application this is effectively an implementation of a",
    "start": "2652680",
    "end": "2658200"
  },
  {
    "text": "gateway aggregation pattern which is effectively what has an X pattern on on the screen is so you know the problem",
    "start": "2658200",
    "end": "2666569"
  },
  {
    "start": "2661000",
    "end": "2661000"
  },
  {
    "text": "this is kind of like an extension of it right so what happens is that there are",
    "start": "2666569",
    "end": "2672089"
  },
  {
    "text": "applications that want to call multiple services to get some functionality done",
    "start": "2672089",
    "end": "2678140"
  },
  {
    "text": "so in this case like you know you know you want to call services a B C and D and this generates a lot of traffic so",
    "start": "2678140",
    "end": "2689549"
  },
  {
    "text": "you got to call multiple services but you don't need all the data that's coming out of each and every one of the services you only want a subset of this",
    "start": "2689549",
    "end": "2695729"
  },
  {
    "text": "data so what you do is like if you were to do this in your client application there's a lot of traffic that goes back",
    "start": "2695729",
    "end": "2702450"
  },
  {
    "text": "and forth for a ready little data that you really need right so what you do is you create this this gateway aggregator",
    "start": "2702450",
    "end": "2709619"
  },
  {
    "text": "over here that aggregates all the data together and then pass it back to the application now",
    "start": "2709619",
    "end": "2715910"
  },
  {
    "text": "this application this pattern is only works when the Gateway aggregate that",
    "start": "2715910",
    "end": "2722760"
  },
  {
    "text": "the aggregation gateway sits closer to to all the others all the downstream services otherwise you still have the",
    "start": "2722760",
    "end": "2730140"
  },
  {
    "text": "same problem that you originally had right there are certain things that you need to worry about one is you have all",
    "start": "2730140",
    "end": "2735960"
  },
  {
    "text": "these patterns like a B C and D or the downstream services what if a B and C are successful but D is not what do you",
    "start": "2735960",
    "end": "2741900"
  },
  {
    "text": "do in those can scenarios right do you completely fail the whole service or do you start to you know you know how do",
    "start": "2741900",
    "end": "2749610"
  },
  {
    "text": "you handle those kind of failures of course the aggregation gateway can be a bottleneck you need to think about in a",
    "start": "2749610",
    "end": "2756150"
  },
  {
    "text": "single point of failure how you address that there's another pattern called the",
    "start": "2756150",
    "end": "2763530"
  },
  {
    "start": "2761000",
    "end": "2761000"
  },
  {
    "text": "gateway routing pattern except for the term gateway in it they're very different to the you know the the",
    "start": "2763530",
    "end": "2770700"
  },
  {
    "text": "previous pattern that I spoke about the gateway routing pattern think about this thing where you have multiple consumers",
    "start": "2770700",
    "end": "2776250"
  },
  {
    "text": "right off of a certain of a lot of downstream services and it's really hard",
    "start": "2776250",
    "end": "2783870"
  },
  {
    "text": "to when you have a lot of consumers and you have a lot of services setting up",
    "start": "2783870",
    "end": "2789840"
  },
  {
    "text": "these service endpoints to cater for all of these in these consumers is actually quite hard and particularly when let's",
    "start": "2789840",
    "end": "2800400"
  },
  {
    "text": "say one of these Stanko",
    "start": "2800400",
    "end": "2804710"
  },
  {
    "text": "particularly when let's say one of these services actually changes you don't want to be in a situation where you're",
    "start": "2808000",
    "end": "2813880"
  },
  {
    "text": "changing making changes on all the consumers because you know this end point is actually changed or the",
    "start": "2813880",
    "end": "2818920"
  },
  {
    "text": "structure of this exchange you don't want to be in a position where you go and change multiple consumers example",
    "start": "2818920",
    "end": "2825250"
  },
  {
    "text": "could be let's say you have an email gateway over here right and you decide",
    "start": "2825250",
    "end": "2831460"
  },
  {
    "text": "to change your email gateway provider and so let's say assume you have multiple consumers over there rather than go and make the scene is in all of",
    "start": "2831460",
    "end": "2837910"
  },
  {
    "text": "them all you need to do is change the gateway router right and and not worry",
    "start": "2837910",
    "end": "2844750"
  },
  {
    "text": "about not worrying about changing any and making changes in the consumer now",
    "start": "2844750",
    "end": "2850900"
  },
  {
    "text": "of course you know this does kind of like introduce latency in the system there's another level of indirection another you know it needs to go through",
    "start": "2850900",
    "end": "2858700"
  },
  {
    "text": "this and then go through the go through the actual service so there are certain things but you know you kind of like",
    "start": "2858700",
    "end": "2864190"
  },
  {
    "text": "balance out the advantages with the other problems that you get with it as well a sidecar pattern is this is the",
    "start": "2864190",
    "end": "2874840"
  },
  {
    "start": "2870000",
    "end": "2870000"
  },
  {
    "text": "one that I actually mentioned about earlier now this has become quite popular in the last couple of years",
    "start": "2874840",
    "end": "2880350"
  },
  {
    "text": "particularly the rise of containers and things like that so what is the problem",
    "start": "2880350",
    "end": "2885910"
  },
  {
    "text": "that it's actually trying to fix and let's say you take the example of you have you know you know you like you have",
    "start": "2885910",
    "end": "2893140"
  },
  {
    "text": "a lot of cross-cutting and functionality with any application things like live retries and so on that I actually spoke about earlier right now when you have",
    "start": "2893140",
    "end": "2899410"
  },
  {
    "text": "those things you what you do is you end up creating a library so you can",
    "start": "2899410",
    "end": "2904900"
  },
  {
    "text": "actually use the library and then using the library you you make calls to your system right so let's assume that you",
    "start": "2904900",
    "end": "2911140"
  },
  {
    "text": "create a new get package it's great you know your dotnet code Dolf works but what if your application is written in",
    "start": "2911140",
    "end": "2918880"
  },
  {
    "text": "Java suddenly all of that becomes unusable right so what you end up doing is you you implement and run these",
    "start": "2918880",
    "end": "2926770"
  },
  {
    "text": "shared services as a separate service",
    "start": "2926770",
    "end": "2931260"
  },
  {
    "text": "like that and it's it's sitting isn't the same host so you have your primary application and you have the sidecar",
    "start": "2933550",
    "end": "2939830"
  },
  {
    "text": "running in a separate process within the same same container if I can call it that and when I do this right so what happens",
    "start": "2939830",
    "end": "2947750"
  },
  {
    "text": "is you know there is a bit of inter process communication that happens",
    "start": "2947750",
    "end": "2953810"
  },
  {
    "text": "between these two things and but you know this can be written in a completely different languages can be Java this can",
    "start": "2953810",
    "end": "2959360"
  },
  {
    "text": "be dotnet and you can still work and it's kind of like resembles like a sidecar and like a motor byte and hence",
    "start": "2959360",
    "end": "2965780"
  },
  {
    "text": "the name as well like I said it works",
    "start": "2965780",
    "end": "2970850"
  },
  {
    "text": "really well with containers this is a strangler strangler pattern that I was talking about earlier and so when we've",
    "start": "2970850",
    "end": "2979670"
  },
  {
    "start": "2972000",
    "end": "2972000"
  },
  {
    "text": "been assigned to migrate these old legacy applications into into into new applications right there may be a lot of",
    "start": "2979670",
    "end": "2985030"
  },
  {
    "text": "other applications that want to talk to the to the new application that is being",
    "start": "2985030",
    "end": "2990230"
  },
  {
    "text": "migrated a lot of this doesn't happen overnight so you kind of like need to go through a lengthy process when you're",
    "start": "2990230",
    "end": "2996230"
  },
  {
    "text": "migrating your old applications to the new so how does how does it work how do the other applications work with the",
    "start": "2996230",
    "end": "3002050"
  },
  {
    "text": "sample with you know the application that's being migrated so the way you do it is you create a strangler facade and",
    "start": "3002050",
    "end": "3010260"
  },
  {
    "text": "so when you first start with the right this is your modern application and you have this legacy application over here",
    "start": "3010260",
    "end": "3015550"
  },
  {
    "text": "you end up calling the strangler facade and that redirects traffic depending on that that knows whether it's now you",
    "start": "3015550",
    "end": "3023590"
  },
  {
    "text": "need to talk to a modern application or you need to talk to the old legacy code it decides and then it kind of like",
    "start": "3023590",
    "end": "3028930"
  },
  {
    "text": "redirects the traffic and over a period of time right this gets smaller and smaller you know you kind of like start",
    "start": "3028930",
    "end": "3034210"
  },
  {
    "text": "to strangle the legacy application and then it eventually dies and so every all the calls end up going to the modern",
    "start": "3034210",
    "end": "3040560"
  },
  {
    "text": "implementation itself and the key thing",
    "start": "3040560",
    "end": "3046450"
  },
  {
    "text": "over here is like you know when do you kind of get rid of this facade because they're kind of like added the latency in to a system right if you design your",
    "start": "3046450",
    "end": "3052840"
  },
  {
    "text": "system well and the strangler facade is kind of like a representation of the modern application you'll literally be a",
    "start": "3052840",
    "end": "3060310"
  },
  {
    "text": "we should be able to swap out the endpoints over here and it should just work when you",
    "start": "3060310",
    "end": "3065370"
  },
  {
    "text": "all the workloads through so let's",
    "start": "3065370",
    "end": "3070650"
  },
  {
    "text": "quickly talk about some of the performance and scalability patterns the good news is that if you look at the",
    "start": "3070650",
    "end": "3077460"
  },
  {
    "text": "list we've covered all these patterns you know use this case slide CQRS materialized views and so on and so",
    "start": "3077460",
    "end": "3083130"
  },
  {
    "text": "forth so we can literally kind of like skip through this thing and then go over to resiliency patterns right so there's",
    "start": "3083130",
    "end": "3090420"
  },
  {
    "text": "about seven in here but again we probably covered some of them already like you know the health endpoint",
    "start": "3090420",
    "end": "3096420"
  },
  {
    "text": "monitoring is already there load living is already covered so we got about maybe but four or five more patterns to go",
    "start": "3096420",
    "end": "3101610"
  },
  {
    "start": "3101000",
    "end": "3101000"
  },
  {
    "text": "through let's talk about the bulkhead pattern so what happens is that when",
    "start": "3101610",
    "end": "3108030"
  },
  {
    "text": "you're when you are hosting an application like a cloud application you kind of like and there's a lot of",
    "start": "3108030",
    "end": "3115830"
  },
  {
    "text": "traffic that actually comes through and like I said failure is imminent right so when you have failure you want to make",
    "start": "3115830",
    "end": "3123690"
  },
  {
    "text": "sure that you want to isolate some of this failure and you do this through the use of bulkheads so if you look at ships",
    "start": "3123690",
    "end": "3132930"
  },
  {
    "text": "and submarines and so on what they do is they they have these bulkheads built into them so even if there's a breach",
    "start": "3132930",
    "end": "3138990"
  },
  {
    "text": "and there's a leak or whatever it is they can completely seal off but like one of these bulkheads and although you",
    "start": "3138990",
    "end": "3146010"
  },
  {
    "text": "know there's water that's actually coming through one it doesn't affect the rest of the ship so acts in the same",
    "start": "3146010",
    "end": "3151620"
  },
  {
    "text": "same principle over here so what you do is you partition your services into into groups right and you can actually think",
    "start": "3151620",
    "end": "3159000"
  },
  {
    "text": "of it recognizing the best example to explain this is let's say you have like a premium subscription you know you have paid uses and you have like a free",
    "start": "3159000",
    "end": "3165540"
  },
  {
    "text": "subscription right you can start to put all the paid users into a certain bulkhead and then you have the rest in",
    "start": "3165540",
    "end": "3172980"
  },
  {
    "text": "like in other you know bulkheads and so on so even though you get a lot of traffic in in the free subscriptions",
    "start": "3172980",
    "end": "3179100"
  },
  {
    "text": "that still doesn't affect anything in in in in in the in the premium subscription bulkhead right Amazon in uses you know",
    "start": "3179100",
    "end": "3188880"
  },
  {
    "text": "what they call ourselves to implement bulkheads functionality so you know you could have like your load balancer and your",
    "start": "3188880",
    "end": "3195480"
  },
  {
    "text": "you know application and your data all in one cell and you know there's you",
    "start": "3195480",
    "end": "3201000"
  },
  {
    "text": "know there's something goes wrong only that cell is affected so then they deploy it across multiple cell so each",
    "start": "3201000",
    "end": "3206940"
  },
  {
    "text": "and every cell is literally a bulkhead so failures in one cell they're completely isolated and don't",
    "start": "3206940",
    "end": "3212640"
  },
  {
    "text": "affect the failure and other ones other cells retry patterns it's probably the",
    "start": "3212640",
    "end": "3219420"
  },
  {
    "start": "3218000",
    "end": "3218000"
  },
  {
    "text": "first pattern that I should've talked about right so the key the thing though is that like I said transient errors are",
    "start": "3219420",
    "end": "3225090"
  },
  {
    "text": "quite common in the cloud and so when you do get transient failures the first thing you need to do is to check whether",
    "start": "3225090",
    "end": "3230880"
  },
  {
    "text": "it is a transient failure so if it is a transient failure then you want to try again and most of the times it's okay so",
    "start": "3230880",
    "end": "3237720"
  },
  {
    "text": "it'll succeed right but if it doesn't succeed then you may want to wait a little bit and then try again and so it",
    "start": "3237720",
    "end": "3245280"
  },
  {
    "text": "works works up quite well so every cloud application should have a retrial logic",
    "start": "3245280",
    "end": "3250530"
  },
  {
    "text": "built into it now there are certain",
    "start": "3250530",
    "end": "3255720"
  },
  {
    "text": "things that you want to think about right so one is like how many times do you try before you give up so maybe it's",
    "start": "3255720",
    "end": "3262410"
  },
  {
    "text": "not a transient error right so it's a more permanent error so so you need to basically have like a certain number of",
    "start": "3262410",
    "end": "3267450"
  },
  {
    "text": "cria of retries you do before you give up and then you don't keep trying over and over again so that's it's a bad",
    "start": "3267450",
    "end": "3273330"
  },
  {
    "text": "thing it's like this thing where you know you call up you know your partner your spouse or whoever and say you don't want to convey an important message you",
    "start": "3273330",
    "end": "3278880"
  },
  {
    "text": "pick up the phone I mean you you dial her number and she's not picking it up you may think oh you know maybe you know",
    "start": "3278880",
    "end": "3285390"
  },
  {
    "text": "maybe she didn't hear then the phone the first name maybe you know it took a lot you know it's hidden the person where took her time you literally sometimes",
    "start": "3285390",
    "end": "3291870"
  },
  {
    "text": "call again right and it made you me succeed but it doesn't pick up the phone for the second time you kind of like",
    "start": "3291870",
    "end": "3296970"
  },
  {
    "text": "have a little bit of back off you back off for awhile and then you call again right so the same thing applies over",
    "start": "3296970",
    "end": "3302940"
  },
  {
    "text": "here so exponential back-off is the preferred one so you kind of like wait for a while and then you kind of like",
    "start": "3302940",
    "end": "3308460"
  },
  {
    "text": "double it and then you again doublet and and then you wait but what happens is that let's assume there are a number of",
    "start": "3308460",
    "end": "3314500"
  },
  {
    "text": "calls that actually come into the system and they all been rejected because of some some kind of failure and they all",
    "start": "3314500",
    "end": "3320650"
  },
  {
    "text": "have exponential back-off and they keep hitting the server back at the same time and suddenly you know when the system is",
    "start": "3320650",
    "end": "3325780"
  },
  {
    "text": "up and running you get all these these these calls coming back at the same time so what you need to do is you need to",
    "start": "3325780",
    "end": "3331119"
  },
  {
    "text": "start to introduce things like jitters into their back off algorithm so it kind",
    "start": "3331119",
    "end": "3336220"
  },
  {
    "text": "of like introduces randomness into the system so when you go back and call the service you know they're not hitting the",
    "start": "3336220",
    "end": "3341619"
  },
  {
    "text": "service at the same time extension of",
    "start": "3341619",
    "end": "3347590"
  },
  {
    "start": "3344000",
    "end": "3344000"
  },
  {
    "text": "the retry is like the circuit breaker pattern right so at some point in time you need to give up and when you do give up you and so when you do when you do",
    "start": "3347590",
    "end": "3356230"
  },
  {
    "text": "give up so the you know you need to stop hitting the service or Noor again so you",
    "start": "3356230",
    "end": "3362530"
  },
  {
    "text": "stop this you know the circuit breaker literally is is taken from you know like",
    "start": "3362530",
    "end": "3367990"
  },
  {
    "text": "electricity in the house right I mean when you have a shot in the house for example the system trips and the sacred breaker you know comes into play so",
    "start": "3367990",
    "end": "3377260"
  },
  {
    "text": "there there are literally three states to the sacred Riccar the closed state when current is flowing through or you know all the calls are coming through",
    "start": "3377260",
    "end": "3382720"
  },
  {
    "text": "that's the closed state that's the normal state but when you do retry and after a certain amount of time it",
    "start": "3382720",
    "end": "3388060"
  },
  {
    "text": "actually fails it it basically triggers the sacred breaker and it's an open State at that point in time current is",
    "start": "3388060",
    "end": "3394300"
  },
  {
    "text": "not flowing or calls aren't being made but when calls aren't being made I mean that's not the end of it right so every",
    "start": "3394300",
    "end": "3400840"
  },
  {
    "text": "so often you need to go back and see if it's working again that's like the half open state so when the half open state",
    "start": "3400840",
    "end": "3407260"
  },
  {
    "text": "you still make a call and the call succeeds then you you continue on the thing about circuit breaker right is you",
    "start": "3407260",
    "end": "3414010"
  },
  {
    "text": "should always have a fallback that's the that's a better way of implementing it",
    "start": "3414010",
    "end": "3419050"
  },
  {
    "text": "rather than saying how you know what the other service isn't working I'm just going to you know throw up an error",
    "start": "3419050",
    "end": "3424270"
  },
  {
    "text": "message or you know do a graceful degradation or something there rather than that right you need to have a fallback you know the the the the",
    "start": "3424270",
    "end": "3429880"
  },
  {
    "text": "example that I give is let's assume that you've got a road right you got a manger and all the traffic is flowing through it but there's some kind of an accident",
    "start": "3429880",
    "end": "3435760"
  },
  {
    "text": "that's happened rather let more and more vehicles go through you have kind of",
    "start": "3435760",
    "end": "3440920"
  },
  {
    "text": "like you know you have a stop sign over there in the then you don't let any more vehicles go to right but that's not enough you need",
    "start": "3440920",
    "end": "3446560"
  },
  {
    "text": "to have a detour so the detour may actually take you longer to get there so in this case right there you may want to",
    "start": "3446560",
    "end": "3452170"
  },
  {
    "text": "display cash data rather than actually going to the real data source and getting the data so but it still continues to work it may be a little bit",
    "start": "3452170",
    "end": "3458980"
  },
  {
    "text": "slower but I didn't hate it like this it's working right or if the data may be slow its stale but it'll still work so",
    "start": "3458980",
    "end": "3465550"
  },
  {
    "text": "every now and then you start to let a few more cars go through right if that car succeed in getting through then you",
    "start": "3465550",
    "end": "3470890"
  },
  {
    "text": "can actually open the main main road for all traffic right so you kind of like need to follow the same principle in",
    "start": "3470890",
    "end": "3478900"
  },
  {
    "text": "some cases you may want to consider about accelerated sacred braking so you know I spoke about things like",
    "start": "3478900",
    "end": "3484440"
  },
  {
    "text": "throttling when tackling is there you don't want to you know you basically don't want to retry it you kind of like",
    "start": "3484440",
    "end": "3489760"
  },
  {
    "text": "break the secret right away and running",
    "start": "3489760",
    "end": "3495280"
  },
  {
    "start": "3492000",
    "end": "3492000"
  },
  {
    "text": "pretty close to my time so this a couple of more patterns to go a compensating transaction is is you know when you have",
    "start": "3495280",
    "end": "3503680"
  },
  {
    "text": "databases right one of the things of a nice thing about databases is you know acid the acid in nature so you can run",
    "start": "3503680",
    "end": "3509530"
  },
  {
    "text": "everything in a transaction you can run multiple calls and you you know all these calls can you can commit them or",
    "start": "3509530",
    "end": "3516849"
  },
  {
    "text": "roll them back at the end of the transaction right it's great however when you have distributed systems right",
    "start": "3516849",
    "end": "3522580"
  },
  {
    "text": "and some of these could be long-running holding onto these resources in terms of a transaction is really a bad thing so",
    "start": "3522580",
    "end": "3530470"
  },
  {
    "text": "rather than actually do transactions right so you kind of like do inserts and do updates and things like that and you have compensating transactions where you",
    "start": "3530470",
    "end": "3538080"
  },
  {
    "text": "kind of like undo the operation that you just did that's a much better way so",
    "start": "3538080",
    "end": "3544000"
  },
  {
    "text": "let's say you you know you put our money into someone's account and there's some kind of failure you know you kind of",
    "start": "3544000",
    "end": "3549460"
  },
  {
    "text": "like the next step is not to undo them you know it's not to kind of like you just reverse the operation you go you've",
    "start": "3549460",
    "end": "3554950"
  },
  {
    "text": "taken some money out you know you put the money back or you know you kind of like have this composite of transactions",
    "start": "3554950",
    "end": "3560740"
  },
  {
    "text": "actually do it much better way and you know it doesn't lock up any of the",
    "start": "3560740",
    "end": "3566200"
  },
  {
    "text": "resources and you know you get good performance and everything else of",
    "start": "3566200",
    "end": "3572890"
  },
  {
    "text": "course you know you know you need to think about things like I didn't put into consideration if you do the same again what happens all those kind of",
    "start": "3572890",
    "end": "3577930"
  },
  {
    "text": "things need to be taken into account the scheduler agent supervised departments",
    "start": "3577930",
    "end": "3583180"
  },
  {
    "start": "3581000",
    "end": "3581000"
  },
  {
    "text": "kind of like an extension of of this right and so when you have when you have multiple steps that you actually perform",
    "start": "3583180",
    "end": "3589810"
  },
  {
    "text": "and and so rolling back is really hard right so what you do is you do this by",
    "start": "3589810",
    "end": "3597340"
  },
  {
    "text": "having these three you know you have the scheduler agent on the supervisor the",
    "start": "3597340",
    "end": "3602620"
  },
  {
    "text": "scheduler is is what arranges all the steps that need to be done and the agent",
    "start": "3602620",
    "end": "3608860"
  },
  {
    "text": "basically contains a logic that needs to be executed and supervised and basically monitors to see hey you know if there's",
    "start": "3608860",
    "end": "3614500"
  },
  {
    "text": "any failure in any of the steps that's happened right if there's failure any of these steps then what it does it",
    "start": "3614500",
    "end": "3620290"
  },
  {
    "text": "actually does cause the compensating transactions through the through the appropriate agents and if you think you",
    "start": "3620290",
    "end": "3627760"
  },
  {
    "text": "know this this this sounds complicated well it is right it's not it's not trivial it's it's harder to implement",
    "start": "3627760",
    "end": "3632800"
  },
  {
    "text": "and so on and so forth but you know you do get that advantage based on that now",
    "start": "3632800",
    "end": "3639460"
  },
  {
    "text": "that's kind of like you know it's just like we just right on time it's quite quickly recap yeah we did go through",
    "start": "3639460",
    "end": "3646450"
  },
  {
    "text": "about 21 patterns all up it's not that you're gonna use all of these things you",
    "start": "3646450",
    "end": "3651460"
  },
  {
    "text": "know from day one you know you've got to use what is appropriate for you and so on and you know your mileage may vary",
    "start": "3651460",
    "end": "3656980"
  },
  {
    "text": "you know some how you implement them there's no strict rules about some of these things that actually said but you",
    "start": "3656980",
    "end": "3665350"
  },
  {
    "text": "know when when you do when you do come across situation you know you at least",
    "start": "3665350",
    "end": "3670420"
  },
  {
    "text": "an income kind of like know enough about it to actually dig a little bit deeper and to dig a little bit deeper there are",
    "start": "3670420",
    "end": "3675730"
  },
  {
    "text": "certain resources that you can actually use there's this book called cloud",
    "start": "3675730",
    "end": "3681340"
  },
  {
    "text": "architecture patterns came about five years ago is was written by a fellow MVP bill it's actually quite a good book and",
    "start": "3681340",
    "end": "3689890"
  },
  {
    "text": "then you have this this book the designing distributed system some more recent book that's actually come out it",
    "start": "3689890",
    "end": "3696310"
  },
  {
    "text": "talks about a whole bunch of patterns and power and paradigms it even talks about things like you know there's a lot",
    "start": "3696310",
    "end": "3701470"
  },
  {
    "text": "of things like containers that that's kind of like new and now that was not there in in Bill's book it talks about",
    "start": "3701470",
    "end": "3708880"
  },
  {
    "text": "things like citecar partners example and how it all works and this is other book this came out last year cloud",
    "start": "3708880",
    "end": "3715290"
  },
  {
    "text": "NATO development patterns and best practices again it talks about a number of those patterns that I mentioned today",
    "start": "3715290",
    "end": "3720540"
  },
  {
    "text": "in this talk right but one valuable resource is this thing over here this",
    "start": "3720540",
    "end": "3725609"
  },
  {
    "text": "Docs dermaxyl calm as your architecture patterns the structure and the grouping",
    "start": "3725609",
    "end": "3730710"
  },
  {
    "text": "of the the patterns and everything else I picked up from that site it's actually quite a good resource I highly recommend",
    "start": "3730710",
    "end": "3738480"
  },
  {
    "text": "going through that and of course you've got the Amazons have got their architecture website it's got a lot of",
    "start": "3738480",
    "end": "3745470"
  },
  {
    "text": "white papers in there highly recommend looking at reading through those white papers really good last but not the",
    "start": "3745470",
    "end": "3752040"
  },
  {
    "text": "least if you want to implement all some of those resiliency patterns you know retries and bulkheads and circuit",
    "start": "3752040",
    "end": "3759840"
  },
  {
    "text": "breakers and things like that there's a library that you can actually use it's called poly so so again highly recommend",
    "start": "3759840",
    "end": "3766349"
  },
  {
    "text": "the in fact there was a talk on poly yesterday was a last talk yesterday I'm not sure Danny after you go to that one",
    "start": "3766349",
    "end": "3771720"
  },
  {
    "text": "yeah a few people so again I highly recommend you know looking into inter poly if you want to implement these",
    "start": "3771720",
    "end": "3776880"
  },
  {
    "text": "patterns that's all I had I mean if you've got any questions we've run out of time but I'm you know I'll hang around for questions you can always",
    "start": "3776880",
    "end": "3783390"
  },
  {
    "text": "email me or that's my twitter handle my education you can even ask me questions in Twitter",
    "start": "3783390",
    "end": "3788460"
  },
  {
    "text": "make sure that you fill out you know the feedback on the way out green would be good but you know if you got further",
    "start": "3788460",
    "end": "3796440"
  },
  {
    "text": "feedback and I'm happy to hear as well right thanks [Applause]",
    "start": "3796440",
    "end": "3804480"
  },
  {
    "text": "all right thank you these are get from the",
    "start": "3804480",
    "end": "3809130"
  }
]