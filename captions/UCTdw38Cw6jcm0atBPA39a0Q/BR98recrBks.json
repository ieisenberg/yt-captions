[
  {
    "start": "0",
    "end": "83000"
  },
  {
    "text": "very good cool well thank you very much for coming so obviously we have darker",
    "start": "5870",
    "end": "14520"
  },
  {
    "text": "and darker with order age and everyone is loving deploying containers into production however Adam some of you may",
    "start": "14520",
    "end": "21450"
  },
  {
    "text": "be aware once you hit a certain size of container and certain scale of containers you start to run into some",
    "start": "21450",
    "end": "27210"
  },
  {
    "text": "interesting problems and that's where you need some additional support so that your containers don't end up looking a",
    "start": "27210",
    "end": "32640"
  },
  {
    "text": "bit like this and this is where kuba Nettie's comes in humanities is designed to help you run containers at scale and",
    "start": "32640",
    "end": "39719"
  },
  {
    "text": "that's what we're going to be talking about today so my name is Ben Horne I'm a founder of ocelot up war we're",
    "start": "39719",
    "end": "47010"
  },
  {
    "text": "basically do a lot of work in docker containers helping companies that dot am",
    "start": "47010",
    "end": "52199"
  },
  {
    "text": "and my grave monoliths applications into containers and make more beautiful and nice and like maintainable and we also",
    "start": "52199",
    "end": "59219"
  },
  {
    "text": "build around products so one of which is cut coda cata coda is an interactive learning platform for software",
    "start": "59219",
    "end": "65370"
  },
  {
    "text": "developers you medically get a step-by-step tutorial together with an interactive environment and you can",
    "start": "65370",
    "end": "72990"
  },
  {
    "text": "start learning docker you can start learning Cuban it is you can start learning DCOs and measures and all of the cool things which we're going to be",
    "start": "72990",
    "end": "78720"
  },
  {
    "text": "talking about today or for free all interactive all all online what I want",
    "start": "78720",
    "end": "84360"
  },
  {
    "start": "83000",
    "end": "132000"
  },
  {
    "text": "to go into today is kind of introduce Cuba natives and introduce the problem Richards holes and how you can actually",
    "start": "84360",
    "end": "90090"
  },
  {
    "text": "get started and how you can start with a name production like our Monday basically I'm and I highlighted the kind",
    "start": "90090",
    "end": "96870"
  },
  {
    "text": "of key point which I think are important and which I've kind of my clients and people which I work with have",
    "start": "96870",
    "end": "101940"
  },
  {
    "text": "experienced and the problems which they went into a comment basis so how do you actually deploy Cuba natives how do you",
    "start": "101940",
    "end": "108210"
  },
  {
    "text": "launch it how do you then deploy applications on top of them what does that look like how can you then start",
    "start": "108210",
    "end": "113250"
  },
  {
    "text": "taking advantage of actually having a proper orchestration and a proper container is system for like managing",
    "start": "113250",
    "end": "119790"
  },
  {
    "text": "secret Sam scaling and I all the important stuff and then actually where does Cooper letters fit into the entire",
    "start": "119790",
    "end": "125340"
  },
  {
    "text": "ecosystem how do they compare to nomad how did compared to dsos and swarm the",
    "start": "125340",
    "end": "130619"
  },
  {
    "text": "other offerings and so that's kind of the overview but my aim is to get you to understand where Cuba netted fits and",
    "start": "130619",
    "end": "137250"
  },
  {
    "start": "132000",
    "end": "144000"
  },
  {
    "text": "how you can start siding whether it's important for you or not and how you make that judgment call",
    "start": "137250",
    "end": "144340"
  },
  {
    "start": "144000",
    "end": "264000"
  },
  {
    "text": "so kuba natives with bit weird it's a bit of a weird name it's not what you would expect and any thought that",
    "start": "144340",
    "end": "150140"
  },
  {
    "text": "managed to containers but actually let's take a step back and lets you look at what containers are in the first place so docker like for last two years has",
    "start": "150140",
    "end": "157790"
  },
  {
    "text": "all you've been reading about in hack news it's been the latest technology it's the best way to get you to the top and your blog post retweeted everywhere",
    "start": "157790",
    "end": "164629"
  },
  {
    "text": "but like what container it's like why why is everyone so enthusiastic about",
    "start": "164629",
    "end": "169700"
  },
  {
    "text": "this if we look at the real world if we look at how items and products and parts",
    "start": "169700",
    "end": "176329"
  },
  {
    "text": "of physical infrastructure is sent all around the world they're all done in a huge big massive metal shipping",
    "start": "176329",
    "end": "182419"
  },
  {
    "text": "containers and the shipping containers have a certain very interesting key properties they are Wi-Fi there why",
    "start": "182419",
    "end": "189379"
  },
  {
    "text": "height and and actually they have special things like they have doors in certain locations and every single",
    "start": "189379",
    "end": "196129"
  },
  {
    "text": "corner they have a hook and if this hook which allows them to be connected and allows them to interconnect with each",
    "start": "196129",
    "end": "201379"
  },
  {
    "text": "other container and that's how you get this very strong coherent unit even if the sea is slightly unfriendly like in",
    "start": "201379",
    "end": "208699"
  },
  {
    "text": "the pitted pitch at the beginning and if this standardization that they are all the same side toward got the same hooks",
    "start": "208699",
    "end": "215000"
  },
  {
    "text": "in order some places the doors and a label that all in a third place that make them work together it makes them",
    "start": "215000",
    "end": "221090"
  },
  {
    "text": "work at the connected coherent unit without that standardization it wouldn't work what's actually inside the",
    "start": "221090",
    "end": "227989"
  },
  {
    "text": "container doesn't really matter at that point it can be cars it could be t-shirts it could be toilet paper it's just irrelevant it's all about that",
    "start": "227989",
    "end": "234799"
  },
  {
    "text": "standardization and making them connect together seamlessly Dave important and",
    "start": "234799",
    "end": "240169"
  },
  {
    "text": "that's the same mind that when you look at containers of the software world with actually on the inside doesn't really",
    "start": "240169",
    "end": "246049"
  },
  {
    "text": "matter it could be the JVM running java it could be done there and course ALR could be mono it could just be a goal on",
    "start": "246049",
    "end": "253400"
  },
  {
    "text": "binary with missing else that doesn't really matter what matters it watch on the outside what matters is how you",
    "start": "253400",
    "end": "259489"
  },
  {
    "text": "start on how you build them and how they all connect and talk to each other from",
    "start": "259489",
    "end": "265880"
  },
  {
    "start": "264000",
    "end": "391000"
  },
  {
    "text": "look at the container they look and feel very similar to what we were if we were winning a hypervisor so generally with",
    "start": "265880",
    "end": "271909"
  },
  {
    "text": "merengue yes so then we'd have a further I bare metal be an easy to instance or something",
    "start": "271909",
    "end": "278660"
  },
  {
    "text": "which we actually own in a physical back on top of that we'd have a host operating system which whether we're comfortable be a red hair and boo to",
    "start": "278660",
    "end": "285560"
  },
  {
    "text": "Santos and then normally would have a hypervisor which manages to communication between your third",
    "start": "285560",
    "end": "291200"
  },
  {
    "text": "machines and the underlying host operating system and the hardware this is what doctor is fundamentally",
    "start": "291200",
    "end": "296900"
  },
  {
    "text": "different docker is Colonel derivation so instead of you having a guest operating system which takes over head",
    "start": "296900",
    "end": "303710"
  },
  {
    "text": "and it have its own kernel is completely isolated docker gets all of it benefits but being able to take advantage of the",
    "start": "303710",
    "end": "310250"
  },
  {
    "text": "host operating system itself it's being able to take advantage of what's already been booted was there and what's",
    "start": "310250",
    "end": "316730"
  },
  {
    "text": "performing and on top of that you have containers each container starts at an",
    "start": "316730",
    "end": "322130"
  },
  {
    "text": "image the image is a pre-baked package more or less and which have got",
    "start": "322130",
    "end": "328310"
  },
  {
    "text": "everything you which your application needs in order to be able to win so it'll any rent I'm dependencies which",
    "start": "328310",
    "end": "333410"
  },
  {
    "text": "you need for example the underlying virtual machine like the JVM or course healer it's got the processes and it's",
    "start": "333410",
    "end": "340220"
  },
  {
    "text": "got any dependencies which it needs I nuget packages have all been downloaded and compiled into this container image",
    "start": "340220",
    "end": "345830"
  },
  {
    "text": "and it's got any configuration everything your application needs to be able to start and that's all packaged up",
    "start": "345830",
    "end": "351800"
  },
  {
    "text": "are they image when South starch turns into a container and all of these",
    "start": "351800",
    "end": "356840"
  },
  {
    "text": "containers are completely isolated they're winning completely independent and completely separate to each other",
    "start": "356840",
    "end": "361910"
  },
  {
    "text": "and so when you ask is container what winning it will only be the things which you actually told it to be winning be it",
    "start": "361910",
    "end": "368510"
  },
  {
    "text": "you're done let potus be it your ASP done application be it a bash pumped",
    "start": "368510",
    "end": "373700"
  },
  {
    "text": "whatever you told it to be winning that is what the container thinks is winning on a host and nothing else everything",
    "start": "373700",
    "end": "380060"
  },
  {
    "text": "else is completely isolated it completely invisible which means that the sandbox and means that they can",
    "start": "380060",
    "end": "385570"
  },
  {
    "text": "interact with things which they shouldn't be allowed to do which is great from a security point of view and",
    "start": "385570",
    "end": "392590"
  },
  {
    "start": "391000",
    "end": "479000"
  },
  {
    "text": "they kind of have other interesting properties so for me these are probably some of the most important ones so as I",
    "start": "392590",
    "end": "399800"
  },
  {
    "text": "was saying that from the viewpoint of the container is going on process space if the only thing running on the box",
    "start": "399800",
    "end": "405710"
  },
  {
    "text": "from the viewpoint of and so that means that it can ruin whatever you want but it's all the sandbox it's all isolated it's all",
    "start": "405710",
    "end": "412130"
  },
  {
    "text": "secure it goes on network interface and so if you it's got IP address so you can send Network packets you can open ports",
    "start": "412130",
    "end": "418940"
  },
  {
    "text": "you can interact with it how you would normally if it were the process or a virtual machine it's good to unroot",
    "start": "418940",
    "end": "424430"
  },
  {
    "text": "directress I'm from the viewpoint of the container it's got everything which the operating system needs it's got all the",
    "start": "424430",
    "end": "430040"
  },
  {
    "text": "light things like XC XC x XTC directory",
    "start": "430040",
    "end": "435380"
  },
  {
    "text": "it's got I'm far I've got user it got home directors it's got everything which you would expect from our operating",
    "start": "435380",
    "end": "441020"
  },
  {
    "text": "system but if you delete everything and you completely destroy the home directory it's not going to interact i'm",
    "start": "441020",
    "end": "446840"
  },
  {
    "text": "not going to cover up the hosts file instead it's completely isolated and protected which is great familiar kind",
    "start": "446840",
    "end": "452840"
  },
  {
    "text": "of like testing point of view because if your test scripts actually accidentally clean up a little bit too much and like",
    "start": "452840",
    "end": "459320"
  },
  {
    "text": "maybe delete one directly too high it doesn't take out the entire host it just takes out the container and you can if",
    "start": "459320",
    "end": "465290"
  },
  {
    "text": "we start and come back to normal and this is a wholesome boxed and you so you can think of the properties and some of",
    "start": "465290",
    "end": "470960"
  },
  {
    "text": "the mechanisms are a little bit like virtual machines but they're very different they have a lot of different",
    "start": "470960",
    "end": "476030"
  },
  {
    "text": "key properties which are important because their containers the key notarization is what makes them happen",
    "start": "476030",
    "end": "484010"
  },
  {
    "start": "479000",
    "end": "688000"
  },
  {
    "text": "it what makes them important and it also is what makes storm interesting from a performance point of view because you",
    "start": "484010",
    "end": "490010"
  },
  {
    "text": "don't have this middleware layer you don't have this hypervisor managing the processes you also don't have any of the",
    "start": "490010",
    "end": "496580"
  },
  {
    "text": "overhead which you're generally used to if you don't have any bottlenecks in terms of CPU you get access to the",
    "start": "496580",
    "end": "502130"
  },
  {
    "text": "native memory and most importantly you can access to the native IL and so if you even gonna like heavy data",
    "start": "502130",
    "end": "508160"
  },
  {
    "text": "processing jobs for example winning databases or equal fervor you don't have any bottleneck which you generally used",
    "start": "508160",
    "end": "513770"
  },
  {
    "text": "to with hyper fighters because if or talking directly to the host is all having me access to the performance",
    "start": "513770",
    "end": "521289"
  },
  {
    "text": "because you also don't have any access to because you don't need that guest",
    "start": "521289",
    "end": "527090"
  },
  {
    "text": "operating system in the way you also don't have to do any pre allocation you don't have to give the operating system",
    "start": "527090",
    "end": "532370"
  },
  {
    "text": "a gig of ram just in order to win your little and 100 magno process instead",
    "start": "532370",
    "end": "538370"
  },
  {
    "text": "wherever your process of the using is how much resource it will take and so you can get much better return on",
    "start": "538370",
    "end": "544190"
  },
  {
    "text": "investment from your infrastructure in your hardware bucovina can actually start taking advantage about like using",
    "start": "544190",
    "end": "550370"
  },
  {
    "text": "all of the possible wham you don't have to give it pre-allocated just for the operating system in order to be happy",
    "start": "550370",
    "end": "557000"
  },
  {
    "text": "and every thought everything takes milliseconds to launch because the important aspect of the colonel and",
    "start": "557000",
    "end": "563000"
  },
  {
    "text": "that's already been booted by the host operating system the processes just launched like they would normal",
    "start": "563000",
    "end": "568610"
  },
  {
    "text": "processes been said that contained the sandbox deshielded inside of container win time and would you don't get without",
    "start": "568610",
    "end": "575720"
  },
  {
    "text": "him and this containers them tales have been around for a long time containers",
    "start": "575720",
    "end": "583310"
  },
  {
    "text": "as a concept were introduced into in freebsd in the 1980s because the freebsd",
    "start": "583310",
    "end": "590210"
  },
  {
    "text": "crater needed to be able to work on freebsd future updates at the same time",
    "start": "590210",
    "end": "596150"
  },
  {
    "text": "is running freebsd so we needed to be able to learn two things like by sight and this is where the concept of containers were introduced and then this",
    "start": "596150",
    "end": "604010"
  },
  {
    "text": "with extended with things like the lowest zones we had other concepts which",
    "start": "604010",
    "end": "609589"
  },
  {
    "text": "were introduced in Red Hat and then Google and a lot of other people introduced them into the Linux kernel at",
    "start": "609589",
    "end": "615530"
  },
  {
    "text": "part of the alex c feature set and then doctor came along which kind of made it accessible and it made all of this",
    "start": "615530",
    "end": "621830"
  },
  {
    "text": "technology which was already in the linux kernel to begin with but it was very difficult and very hard to actually",
    "start": "621830",
    "end": "628430"
  },
  {
    "text": "take advantage of and actually manage darker made it accessible and that's why people love docker they have built an",
    "start": "628430",
    "end": "635780"
  },
  {
    "text": "amazing tool set and how you can take advantage of the container technology in a sane manageable way which you don't",
    "start": "635780",
    "end": "643430"
  },
  {
    "text": "have to be linux kernel experts in order to be able to take advantage of and for",
    "start": "643430",
    "end": "648950"
  },
  {
    "text": "me like is not just a toolset it's also that they've actually got us to agree on something before containers everyone was",
    "start": "648950",
    "end": "655700"
  },
  {
    "text": "trying to reinvent the wheel they all add different ways of describing at different ways of launching their",
    "start": "655700",
    "end": "661190"
  },
  {
    "text": "different ways of actually like structure in everything and building images dhaka aboard all of that together",
    "start": "661190",
    "end": "667010"
  },
  {
    "text": "they created some standards which have you been watching Twitter with an interesting conversation but I've",
    "start": "667010",
    "end": "673640"
  },
  {
    "text": "created an ecosystem and a way of describing what a container she looks like and this is why",
    "start": "673640",
    "end": "678830"
  },
  {
    "text": "we now can start innovating and pushing things forward we think like Cuba net is because the foundation is there we don't",
    "start": "678830",
    "end": "685520"
  },
  {
    "text": "have to keep trying to reinvent that wheel but as I saying at the beginning",
    "start": "685520",
    "end": "690610"
  },
  {
    "text": "containers are great but when she start winning like a hundred containers things started to get a little bit more",
    "start": "690610",
    "end": "696350"
  },
  {
    "text": "difficult one server is like an a simple thing to manage but a thousand servers",
    "start": "696350",
    "end": "701570"
  },
  {
    "text": "is a very different problem and a very different beast how do you know which container is winning on which hosts how",
    "start": "701570",
    "end": "707510"
  },
  {
    "text": "do you manage when a host goes down and he's still want that workload to be redistributed acosta system and then how",
    "start": "707510",
    "end": "713330"
  },
  {
    "text": "do you cannot manage scaling maintenance modes all of this normal production winning activities inside a container",
    "start": "713330",
    "end": "719930"
  },
  {
    "text": "ecosystem and this is where cuban actors commence in cuban it is just one of many",
    "start": "719930",
    "end": "724970"
  },
  {
    "text": "different orchestration systems which our available in a moment so he's got dr. swarm which is the lovely whales",
    "start": "724970",
    "end": "731089"
  },
  {
    "text": "holding containers and 50 fish Dockers built in a kind of default option for",
    "start": "731089",
    "end": "737930"
  },
  {
    "text": "managing containers on multiple different hosts it's got cuba netted which will be talking about more we've got D cos I'm mesosphere which is",
    "start": "737930",
    "end": "744770"
  },
  {
    "text": "inherently from the Twitter architecture worth crated internally at Twitter and then we've got hash corpse nomads and",
    "start": "744770",
    "end": "751370"
  },
  {
    "text": "they all have different problems they also open it slightly different ways but my personal favorite is clipping edit",
    "start": "751370",
    "end": "757040"
  },
  {
    "text": "and Cuban entity is also gaining traction in the community at the hole and so this is some stats about what",
    "start": "757040",
    "end": "764180"
  },
  {
    "text": "people are looking at and what people are investigating and obviously dr. swarm is the default because it's darker",
    "start": "764180",
    "end": "769760"
  },
  {
    "text": "it's the one which doc or pushing that's what people are naturally gravitate them before towards but what I have generally",
    "start": "769760",
    "end": "777020"
  },
  {
    "text": "found is that people start implementing it and they hit a certain point and they need some additional functionality which",
    "start": "777020",
    "end": "783050"
  },
  {
    "text": "didn't exist and that's where people are then going to Cuba Nettie's and from a viewpoint about who owns it everything",
    "start": "783050",
    "end": "789470"
  },
  {
    "text": "is open source Cuba natives was created inside Google more or less and but",
    "start": "789470",
    "end": "796430"
  },
  {
    "text": "Google have released it to the entire ecosystem is part of the cloud native foundation and which works and operates",
    "start": "796430",
    "end": "803150"
  },
  {
    "text": "very similar to the Linux Foundation and as such other people the company investing and committing to the actual",
    "start": "803150",
    "end": "809960"
  },
  {
    "text": "source code until we've got google is the main competitor but we've got Red Hat we've got meteor we've got caress we",
    "start": "809960",
    "end": "815390"
  },
  {
    "text": "live the music mesosphere who even have their own orchestration but they're",
    "start": "815390",
    "end": "820820"
  },
  {
    "text": "still helping communities become the best that it can possibly be and be only",
    "start": "820820",
    "end": "827240"
  },
  {
    "text": "cool people lots of people outside of Google if not just Google it's an open",
    "start": "827240",
    "end": "832520"
  },
  {
    "text": "ecosystem which is being supported constantly and we can kind of see that",
    "start": "832520",
    "end": "837590"
  },
  {
    "text": "from stack overflow and how many people are actually jumping on board asking questions adopt an eight winning it in",
    "start": "837590",
    "end": "843560"
  },
  {
    "text": "production and Cooper netted is only two years old but it gained all of this traction and all of this birds because",
    "start": "843560",
    "end": "849530"
  },
  {
    "text": "it's kind of pretty cool however it's not without problems so one of the things which you'll find and as I talk",
    "start": "849530",
    "end": "856220"
  },
  {
    "text": "through what different orchestration attitude is it is quite the boss and",
    "start": "856220",
    "end": "861760"
  },
  {
    "text": "while i'm showing demos and what I'm explaining it bear with me when I say it the bowls because it does make sense",
    "start": "861760",
    "end": "868540"
  },
  {
    "text": "well it looks like there's lots of duplication it's actually giving you the options and customization and the",
    "start": "868540",
    "end": "875360"
  },
  {
    "text": "configuration which you need for winning different types of posters and different workloads until my general feeling with",
    "start": "875360",
    "end": "882740"
  },
  {
    "start": "879000",
    "end": "909000"
  },
  {
    "text": "kuba letters is it got kind of quite steep learning curve but kind of once you get over this initial hurdle which",
    "start": "882740",
    "end": "888860"
  },
  {
    "text": "is what my aim is for the rest of the talk it's kind of like it just all hangs together and it kind of works quite",
    "start": "888860",
    "end": "894290"
  },
  {
    "text": "nicely and for that the aim so let's break it down and let's talk a little bit more in detail into what this is so",
    "start": "894290",
    "end": "902060"
  },
  {
    "text": "Cooper native is open source or scanner and it's designed for automating deployment scaling and management of",
    "start": "902060",
    "end": "907220"
  },
  {
    "text": "container applications and this crew is kind of born inside Google through",
    "start": "907220",
    "end": "913640"
  },
  {
    "text": "google have been running containers for the last 10 years and as such they have learned and got a lot of experience",
    "start": "913640",
    "end": "920300"
  },
  {
    "text": "about how you've in containers at scale and one let's go scale I mean proper scale like billions of container the",
    "start": "920300",
    "end": "926870"
  },
  {
    "text": "launch per week inside can google and they've run everything different workloads big data the search engines",
    "start": "926870",
    "end": "933170"
  },
  {
    "text": "databases everything it's containerized and they basically issue workloads into that cluster it gets managed it gets",
    "start": "933170",
    "end": "939710"
  },
  {
    "text": "organized and stuff comes out the other end and they thought all of their experience in a",
    "start": "939710",
    "end": "945410"
  },
  {
    "text": "paper and based on or the experience and system which they built called Borg would say summarized into a white paper",
    "start": "945410",
    "end": "952040"
  },
  {
    "text": "the white papers aren't very accessible they're not very easy for people to take and deploy into their own ecosystem",
    "start": "952040",
    "end": "957470"
  },
  {
    "text": "which is then they took all of that experience I made it open source and built Cuban edges but the white paper is",
    "start": "957470",
    "end": "963350"
  },
  {
    "text": "interesting in if you want more details then it's available for you could to go read and their mindset is how they run",
    "start": "963350",
    "end": "970730"
  },
  {
    "text": "container that Google been an open source manageable way that people can vinit themselves so they can take all of the containers which you need to learn",
    "start": "970730",
    "end": "976939"
  },
  {
    "text": "in your system you put them in turku benetti's and kuba netted manages which hosts which server which data center",
    "start": "976939",
    "end": "983749"
  },
  {
    "text": "they need to be winning on to ensure maximum performance high availability and all the goodness which we would",
    "start": "983749",
    "end": "989119"
  },
  {
    "text": "expect and alongside that it's got some really cool features which generally you",
    "start": "989119",
    "end": "995360"
  },
  {
    "start": "990000",
    "end": "1032000"
  },
  {
    "text": "can get away with not having but when they're there they just make life so much easier for example horizontal",
    "start": "995360",
    "end": "1000369"
  },
  {
    "text": "scaling when you're in a significant load self-healing so when things go down",
    "start": "1000369",
    "end": "1005860"
  },
  {
    "text": "it just automatically knows how to repair itself and bring it back to life things like low ballentine are just part",
    "start": "1005860",
    "end": "1011410"
  },
  {
    "text": "of the features outbox you don't have to think that house manager it's just there",
    "start": "1011410",
    "end": "1016779"
  },
  {
    "text": "ready and waiting for you to work with and things like managing canary releases and roll out and all of this course off",
    "start": "1016779",
    "end": "1023110"
  },
  {
    "text": "which historically you generally had to write complex automated scripts in order to be able to do it's just there I part",
    "start": "1023110",
    "end": "1029949"
  },
  {
    "text": "the accumulated feet of that and document isn't the only game in town so",
    "start": "1029949",
    "end": "1036880"
  },
  {
    "start": "1032000",
    "end": "1080000"
  },
  {
    "text": "ducker is just one container implementation it's got the mindset it's the most popular but other companies and",
    "start": "1036880",
    "end": "1042610"
  },
  {
    "text": "as a people who adopt in different ways so chorus of relief rocket which is got some really nice a different way of",
    "start": "1042610",
    "end": "1049360"
  },
  {
    "text": "looking at the problem of how do you manage containers very security focused we've got hyper which again is kind of",
    "start": "1049360",
    "end": "1055539"
  },
  {
    "text": "taking a virtual machine approach I'm wrapping a virtual machine around a",
    "start": "1055539",
    "end": "1062020"
  },
  {
    "text": "container to ensure maximum security and then we also have windows containers",
    "start": "1062020",
    "end": "1067029"
  },
  {
    "text": "coming which I'll be talking about this afternoon so how do you actually store and how do you actually deploy this",
    "start": "1067029",
    "end": "1072580"
  },
  {
    "text": "introduction and as certain key core component which I think are important to understand how the",
    "start": "1072580",
    "end": "1078640"
  },
  {
    "text": "moving parts actually fit together so everything all the stay in all of the information is stored in X ed X ed it's",
    "start": "1078640",
    "end": "1086020"
  },
  {
    "start": "1080000",
    "end": "1117000"
  },
  {
    "text": "very similar to zoo keeper or console it basically highly available distributed",
    "start": "1086020",
    "end": "1092070"
  },
  {
    "text": "value store and that store that everything which you need about your system and so it will even know if your",
    "start": "1092070",
    "end": "1098710"
  },
  {
    "text": "master goes down all of the information is still replicated across multiple data centers and it's still there and",
    "start": "1098710",
    "end": "1103990"
  },
  {
    "text": "maintaining it also uses xcd for maintaining service discovery and things like dns and I which container the",
    "start": "1103990",
    "end": "1110590"
  },
  {
    "text": "winning on which hosts and how do you find where things are managed and so exited the underlying base of what cuban",
    "start": "1110590",
    "end": "1116650"
  },
  {
    "text": "actors are building on on top of that we have an API which would expected every application has an API now and you have",
    "start": "1116650",
    "end": "1122980"
  },
  {
    "start": "1117000",
    "end": "1135000"
  },
  {
    "text": "a master the master is responsible for understanding what workloads need to be",
    "start": "1122980",
    "end": "1128290"
  },
  {
    "text": "deployed and where they need to be deployed to so it has a viewpoint over everything was happening in your system and in your data centers along so that",
    "start": "1128290",
    "end": "1136810"
  },
  {
    "start": "1135000",
    "end": "1203000"
  },
  {
    "text": "we have accumulated proxy that while I'm not trying not to follow stage for the proxy wins on every single node in your",
    "start": "1136810",
    "end": "1143830"
  },
  {
    "text": "cluster so everything will node which you're going to want containers to be deployed to and containers running will",
    "start": "1143830",
    "end": "1150370"
  },
  {
    "text": "have a proxy server and if we'll manage deploying because containers actually launched in the processes and having",
    "start": "1150370",
    "end": "1156520"
  },
  {
    "text": "them winning on the individual host it will also manage networking and communication and IP tables and all of",
    "start": "1156520",
    "end": "1162640"
  },
  {
    "text": "that walls and all of that management an individual host the master would then communicate with all of these different",
    "start": "1162640",
    "end": "1168100"
  },
  {
    "text": "boxes on your cluster and manage which ones need to be deployed where and alongside that we have the cube CT out",
    "start": "1168100",
    "end": "1175630"
  },
  {
    "text": "this is a command line interface so you can actually see and manage your workload so you can see the health of",
    "start": "1175630",
    "end": "1182410"
  },
  {
    "text": "the cluster you can see what know join your system you can see what containers are winning it on your host and where",
    "start": "1182410",
    "end": "1189280"
  },
  {
    "text": "they're winning but not everyone likes our command lines and some something like nice more digitalization for",
    "start": "1189280",
    "end": "1195520"
  },
  {
    "text": "monitors and a sporting and so they were the dashboard which represents the health de status and everything across",
    "start": "1195520",
    "end": "1201250"
  },
  {
    "text": "your entire datacenter so these are key components it seems complex when he",
    "start": "1201250",
    "end": "1207730"
  },
  {
    "start": "1203000",
    "end": "1217000"
  },
  {
    "text": "first get into it but actually when you break it down into quite a nice logical simplified view of how architecture",
    "start": "1207730",
    "end": "1213790"
  },
  {
    "text": "works so how do you actually learn and how do you start deploying stuff so one",
    "start": "1213790",
    "end": "1219220"
  },
  {
    "start": "1217000",
    "end": "1270000"
  },
  {
    "text": "of the simplest ways is to reuse cube TTL you faker eight you give it file I",
    "start": "1219220",
    "end": "1224950"
  },
  {
    "text": "yamel structure and then that will go to the master it will execute where within the yellow file and that will get",
    "start": "1224950",
    "end": "1232450"
  },
  {
    "text": "deployed on to your cluster the Emma file details all the internal aspects of",
    "start": "1232450",
    "end": "1238180"
  },
  {
    "text": "what you want to be deployed and it's got certain key interesting properties like it's got the name it's got how many",
    "start": "1238180",
    "end": "1244060"
  },
  {
    "text": "replicas or how many instances of that container you want winning and things which would expect like the container",
    "start": "1244060",
    "end": "1249130"
  },
  {
    "text": "image into a portent need to be opened the things which will expect and what your would normally be running on docker",
    "start": "1249130",
    "end": "1255370"
  },
  {
    "text": "it's just been defined in a young approach and I kind of think of it as an",
    "start": "1255370",
    "end": "1261790"
  },
  {
    "text": "idoc a compose but for production I'm if you use the duck on compose so let's",
    "start": "1261790",
    "end": "1266950"
  },
  {
    "text": "actually look at how this approach if the Wi-Fi is friendly",
    "start": "1266950",
    "end": "1273000"
  },
  {
    "start": "1270000",
    "end": "1488000"
  },
  {
    "text": "because it it's not nighttime here it's just nighttime in the UK so if we go and",
    "start": "1279320",
    "end": "1286070"
  },
  {
    "text": "Vern as our cubes etl so I'm just using catch coda because it's easy and we've",
    "start": "1286070",
    "end": "1293780"
  },
  {
    "text": "got help script which basically launches the master launches AG CD instance it",
    "start": "1293780",
    "end": "1299810"
  },
  {
    "text": "launched at the proxy and download coupe TTL and gives us a instance of Cuba debt",
    "start": "1299810",
    "end": "1304820"
  },
  {
    "text": "is winning and if we do presentation mode you can see and so you can now do",
    "start": "1304820",
    "end": "1311060"
  },
  {
    "text": "like kuti tailgate nodes and we've got localhost ready and waiting for",
    "start": "1311060",
    "end": "1317870"
  },
  {
    "text": "container word i'll just be issued so then we can use a cube CTL and we can do",
    "start": "1317870",
    "end": "1324410"
  },
  {
    "text": "oopsy die then so what this command executed was a fairly similar how doc",
    "start": "1324410",
    "end": "1330830"
  },
  {
    "text": "oven works but we basically said told the cuban native master to run a service",
    "start": "1330830",
    "end": "1336260"
  },
  {
    "text": "which we'd given friendly name of HTTP use this particular image and launch one",
    "start": "1336260",
    "end": "1342530"
  },
  {
    "text": "of done in the prescott and so what we can Daryl do is ask for and how many",
    "start": "1342530",
    "end": "1348320"
  },
  {
    "text": "deployments you have and it will say like we thought he's asked earth to deploy HTTP you've requested that they",
    "start": "1348320",
    "end": "1355250"
  },
  {
    "text": "have one desired state there is currently one available because everything's healthy and everything is",
    "start": "1355250",
    "end": "1360380"
  },
  {
    "text": "up to date and it gives you the overview of what applications are available and if we wanted some more information we",
    "start": "1360380",
    "end": "1366410"
  },
  {
    "text": "can kind of go describe and it gives you some more in-depth information about what winning on system and actually",
    "start": "1366410",
    "end": "1371690"
  },
  {
    "text": "where web particular containers are where the hosts what the information is and if we are running 10 containers we'd",
    "start": "1371690",
    "end": "1378140"
  },
  {
    "text": "have 10 things in our instance and when",
    "start": "1378140",
    "end": "1383150"
  },
  {
    "text": "we do thief so now we've got a container winning by default very similar to with",
    "start": "1383150",
    "end": "1388490"
  },
  {
    "text": "docker everything in sandbox and everything is shielded so you need to expose and tau eliminated what ports you",
    "start": "1388490",
    "end": "1395330"
  },
  {
    "text": "want to be opened and what services you want to be made available so in this case we simply just telling computer to",
    "start": "1395330",
    "end": "1403670"
  },
  {
    "text": "explode the deployment called HTTP and we've make it available on the external",
    "start": "1403670",
    "end": "1409490"
  },
  {
    "text": "IP address on this port a map so instead of doing things like duh",
    "start": "1409490",
    "end": "1415470"
  },
  {
    "text": "govern hyphen p we're just separated our process we've got our content of winning",
    "start": "1415470",
    "end": "1421020"
  },
  {
    "text": "and then we add an additional thing to learn our service and make it available in the recover that's what Cooper netted",
    "start": "1421020",
    "end": "1426600"
  },
  {
    "text": "during the master is talking to the proxy the poxy goes are neither container being made available and it's",
    "start": "1426600",
    "end": "1433050"
  },
  {
    "text": "updating the IP tables and updating or the networking balls in order to make that happen and then we can issue a coke",
    "start": "1433050",
    "end": "1439620"
  },
  {
    "text": "arrest and we've now got kubernetes is running our containers for us in the recovers everything is still docker so",
    "start": "1439620",
    "end": "1448500"
  },
  {
    "text": "it can be duck appears we've got our Cuban NC the instant winning as containers and then we also have our",
    "start": "1448500",
    "end": "1455090"
  },
  {
    "text": "HTTP server winning at the top we could fundamentally crew beneath you that just managing these darker containers for us",
    "start": "1455090",
    "end": "1461460"
  },
  {
    "text": "it's not doing anything special it's not adding it's not changing how dock works is not changing how the container the",
    "start": "1461460",
    "end": "1468000"
  },
  {
    "text": "bill or how the image works just making it much easier to manage at scale and",
    "start": "1468000",
    "end": "1473010"
  },
  {
    "text": "fundamentally that is creepy letters like in a very simplified straightforward way if you just do cube",
    "start": "1473010",
    "end": "1480150"
  },
  {
    "text": "detail win instead of document which is also now how does it look when you actually burn like real applications not",
    "start": "1480150",
    "end": "1486180"
  },
  {
    "text": "just a single HTTP container so Cuba",
    "start": "1486180",
    "end": "1492120"
  },
  {
    "start": "1488000",
    "end": "1606000"
  },
  {
    "text": "netted introduces certain concepts to make managing containers easier at scale",
    "start": "1492120",
    "end": "1497400"
  },
  {
    "text": "and the first concept is called a pod a party basically multiple containers or",
    "start": "1497400",
    "end": "1503970"
  },
  {
    "text": "logically grouped together and it means that you can have multiple different",
    "start": "1503970",
    "end": "1509510"
  },
  {
    "text": "processes which all share the same IP address they all share the same network",
    "start": "1509510",
    "end": "1515150"
  },
  {
    "text": "interface they all look and feel like they're deployed at one single container but for management purposes and for",
    "start": "1515150",
    "end": "1521730"
  },
  {
    "text": "making them easier they've been separated into multiple different containers and this allows you to do",
    "start": "1521730",
    "end": "1527580"
  },
  {
    "text": "various interesting different concepts and you can do this concept with and dock itself and so you like I the",
    "start": "1527580",
    "end": "1536310"
  },
  {
    "text": "concept of a potted basically you have a long run in container like which is called pause and that's responsible for",
    "start": "1536310",
    "end": "1542640"
  },
  {
    "text": "creating the network interfaces responsible for creating any volumes any additional data and all of",
    "start": "1542640",
    "end": "1548820"
  },
  {
    "text": "the containers then connect and share to that one container namespace and so that's why you have that's how he can",
    "start": "1548820",
    "end": "1555360"
  },
  {
    "text": "take advantage of the network interface it can take advantage of sharing volumes",
    "start": "1555360",
    "end": "1560490"
  },
  {
    "text": "and having everything look and feel like one single container Bert them being separated isolated it's more useful for",
    "start": "1560490",
    "end": "1567840"
  },
  {
    "text": "other described in this example you've got an application and then you want to enhance it with maybe a lager or maybe",
    "start": "1567840",
    "end": "1574590"
  },
  {
    "text": "some backup scripts or additional functionality which your application",
    "start": "1574590",
    "end": "1579659"
  },
  {
    "text": "needs and because of all sharing the same namespace they all are maximizing performance because I don't have any",
    "start": "1579659",
    "end": "1585630"
  },
  {
    "text": "additional jumps to make in terms of different interfaces and different approaches you can maximize how much",
    "start": "1585630",
    "end": "1592169"
  },
  {
    "text": "three port your containers Bochy dealing with and so it's a nice way to architect it and this is how kuba net is just did",
    "start": "1592169",
    "end": "1599370"
  },
  {
    "text": "things by default you don't have to think about it like you do with docker it's just automatically giving you the best practices and structuring your",
    "start": "1599370",
    "end": "1605299"
  },
  {
    "text": "applications and you can think of pods as like how you scare all your applications and so pods are scaled",
    "start": "1605299",
    "end": "1612480"
  },
  {
    "start": "1606000",
    "end": "1640000"
  },
  {
    "text": "together so if you scale a pod which I've got your web application and a",
    "start": "1612480",
    "end": "1617669"
  },
  {
    "text": "logger it will when you scaled out you'll have to web applications and two loggers running side by side when you",
    "start": "1617669",
    "end": "1623820"
  },
  {
    "text": "have 10 of them ill scared together and so you don't have your web application any database in the same pod because you",
    "start": "1623820",
    "end": "1630720"
  },
  {
    "text": "want to be able to scale and split them independently and so that's held pods a light logically strokes it together just",
    "start": "1630720",
    "end": "1637020"
  },
  {
    "text": "like nice little logical connected resources these are all managed by",
    "start": "1637020",
    "end": "1642570"
  },
  {
    "text": "controllers all of the cumulative managers everything other controller so the third controller and one which is",
    "start": "1642570",
    "end": "1649289"
  },
  {
    "text": "probably the most are widely used is the replication controller and this has managed it how many instances of the",
    "start": "1649289",
    "end": "1656549"
  },
  {
    "text": "pods are winning on the system at any one point in time so here we've heard that did the desired count is 2 & so",
    "start": "1656549",
    "end": "1662789"
  },
  {
    "text": "kubin entities will make sure that there are two pods always running in the system if one of the pods are want to",
    "start": "1662789",
    "end": "1668399"
  },
  {
    "text": "container crushes kuba natives will instantly detect that and automatically restart it for you if the pod or if the",
    "start": "1668399",
    "end": "1674880"
  },
  {
    "text": "host goes down again Cuba natives will detect that the pot no longer there it will detect that you",
    "start": "1674880",
    "end": "1680460"
  },
  {
    "text": "wanted two of them and it will find another host where that container needs to be running and as 12 different",
    "start": "1680460",
    "end": "1686490"
  },
  {
    "text": "control is always possible for only in different parts of your infrastructure and solving different problems so one",
    "start": "1686490",
    "end": "1693120"
  },
  {
    "text": "which I really like is the demon set this basically tell you tell google to launch a container the demon set and",
    "start": "1693120",
    "end": "1700140"
  },
  {
    "text": "when new host get added into your cluster it will automatically deploy whatever container the needs on to that",
    "start": "1700140",
    "end": "1705930"
  },
  {
    "text": "host and so if you're doing things like log aggregation backup scripts like",
    "start": "1705930",
    "end": "1711090"
  },
  {
    "text": "visualization any debugging tools it will automatically be deployed so you don't have to think about how that whole",
    "start": "1711090",
    "end": "1718080"
  },
  {
    "text": "sketch configured kuba netted will just manage it for you and then as you update",
    "start": "1718080",
    "end": "1723150"
  },
  {
    "text": "it it will just be automatically updated and rolled out across the system for ya",
    "start": "1723150",
    "end": "1728840"
  },
  {
    "start": "1727000",
    "end": "1868000"
  },
  {
    "text": "replication controls are always ensure that everything is in the desired stain is always up to date and always working",
    "start": "1728840",
    "end": "1734460"
  },
  {
    "text": "across the entire system and so that's where you'll see people running most commonly and this is what we ran in the",
    "start": "1734460",
    "end": "1739770"
  },
  {
    "text": "first example you can see at the top we say that the kind of application controller and that defines the type of",
    "start": "1739770",
    "end": "1748130"
  },
  {
    "text": "the type of method that Cuba Nettie's will be using in order to manage what",
    "start": "1748190",
    "end": "1753810"
  },
  {
    "text": "your containers actually doing so if we changed from being a replication controller to a demon sir Cuba netted will treat it differently and it'll tree",
    "start": "1753810",
    "end": "1760170"
  },
  {
    "text": "that life cycle in a different way and then we are now we've got certain properties for example the replicas",
    "start": "1760170",
    "end": "1766080"
  },
  {
    "text": "which manages how many should be actually be running and you can keep",
    "start": "1766080",
    "end": "1771360"
  },
  {
    "text": "detail which I described that get angry thing can say create this will then start launching the pod in the de cover",
    "start": "1771360",
    "end": "1778080"
  },
  {
    "text": "which will be winning Redis we can say get pods and if we're good actually give us a state of what's happening so",
    "start": "1778080",
    "end": "1784770"
  },
  {
    "text": "instead of it just being like this it's raining or not winning Cuban attitude actually aware of like that more than",
    "start": "1784770",
    "end": "1790890"
  },
  {
    "text": "offer on in a life cycle of an application and so for example I would say that a containers creating which",
    "start": "1790890",
    "end": "1797220"
  },
  {
    "text": "means that it's downloading the image and it's setting up all the networking and it's actually configuring all the",
    "start": "1797220",
    "end": "1802260"
  },
  {
    "text": "fat hosts and then that will just switch to winning what if a is in a in a stable",
    "start": "1802260",
    "end": "1807690"
  },
  {
    "text": "live state and then the cover that we described before everything for an inlet",
    "start": "1807690",
    "end": "1812790"
  },
  {
    "text": "Nina's for your jealousy like your reddit container wings along with the pores container which is managing the network some multiple different things",
    "start": "1812790",
    "end": "1819450"
  },
  {
    "text": "can connect to that where this instance and it works for everything so if we say",
    "start": "1819450",
    "end": "1824460"
  },
  {
    "text": "deploy a front-end application in this case we're saying Vern will often end",
    "start": "1824460",
    "end": "1829680"
  },
  {
    "text": "have three instances always available so we'll have three individual separated pods but when we say get the replication",
    "start": "1829680",
    "end": "1836970"
  },
  {
    "text": "controllers it gives us an overview and an aggregation of what's actually winning on a system so I'll say the",
    "start": "1836970",
    "end": "1842850"
  },
  {
    "text": "desired state and a current state this is interesting especially when you get into things like scaling because your",
    "start": "1842850",
    "end": "1848460"
  },
  {
    "text": "desired state maybe a thousand but the current state may be on 500 and that's because you don't have enough resources",
    "start": "1848460",
    "end": "1854220"
  },
  {
    "text": "available in your cluster in order to be able to winning at a scale which you actually request and so that's why it's",
    "start": "1854220",
    "end": "1860580"
  },
  {
    "text": "nice be able to digitalize and see the difference between the divide and the current state which I described here and",
    "start": "1860580",
    "end": "1869300"
  },
  {
    "text": "other thing the y mo is all infrastructure is cold it's your infrastructure and it's how the current",
    "start": "1869300",
    "end": "1875280"
  },
  {
    "text": "state of your application should be deployed at scale in third cluster and so when people instead of manually",
    "start": "1875280",
    "end": "1885030"
  },
  {
    "text": "winning duck burn or manually updating things when new versions need to be rolled out for example a new doc image",
    "start": "1885030",
    "end": "1890640"
  },
  {
    "text": "the Yama file will be updated and any send that or dated llamo to the Cuban latest master and then that will",
    "start": "1890640",
    "end": "1897090"
  },
  {
    "text": "understand and that will understand what needs to be changed and how that needs to be rolled out across your system and in that Camille version committed and",
    "start": "1897090",
    "end": "1903510"
  },
  {
    "text": "Thor's controlled it can then be have its own Jenkin tasks which managed Cuba netted swim process and everything can",
    "start": "1903510",
    "end": "1910170"
  },
  {
    "text": "be structured in a more sane way than its random ad hoc given at his win scripts so let's take a look at how that",
    "start": "1910170",
    "end": "1918300"
  },
  {
    "start": "1915000",
    "end": "2148000"
  },
  {
    "text": "actually looks at scale",
    "start": "1918300",
    "end": "1922280"
  },
  {
    "text": "so the guest book is kind of like Cuba netted version of hello world it's it's",
    "start": "1929400",
    "end": "1934870"
  },
  {
    "text": "got a reddish master and then it's got a Redis too eager it's got venoth master",
    "start": "1934870",
    "end": "1942940"
  },
  {
    "text": "and it got a ready Flav for replication and scaling purposes and then it got a PHP application just sitting at the",
    "start": "1942940",
    "end": "1949780"
  },
  {
    "text": "front end aspect and we can look out what this looks like solicitor our",
    "start": "1949780",
    "end": "1955600"
  },
  {
    "text": "various replication controller and we saying that we need two replicas of it for availability and performance reasons",
    "start": "1955600",
    "end": "1962100"
  },
  {
    "text": "we give it everything which would expect like name the image but we also can give it some detailed tour and service",
    "start": "1962100",
    "end": "1968710"
  },
  {
    "text": "discovery so by default kuba Nettie's has dns service discovery built into the",
    "start": "1968710",
    "end": "1973720"
  },
  {
    "text": "box so you don't have to worry about it when we define and we launch container we can't a in order to discover what the",
    "start": "1973720",
    "end": "1982090"
  },
  {
    "text": "containers of winning on the network use DNS and you can switch to use an",
    "start": "1982090",
    "end": "1987670"
  },
  {
    "text": "environment variables which will set IP addresses but by default here we then use DNS and so that means our very slave",
    "start": "1987670",
    "end": "1994660"
  },
  {
    "text": "will be able to ping other containers for example cord where this master which we define here and they'll be able to do",
    "start": "1994660",
    "end": "2001530"
  },
  {
    "text": "that over dns and without actually knowing each other and we've also got",
    "start": "2001530",
    "end": "2006780"
  },
  {
    "text": "replication controllers for a front end and it all works in the same way we just defy a different image we specify",
    "start": "2006780",
    "end": "2012900"
  },
  {
    "text": "there's a number or what you would expect but all defined at the Amal files and then beyond that we've got our",
    "start": "2012900",
    "end": "2018240"
  },
  {
    "text": "services so previously in the previous demo we had cube GT ow we told it to",
    "start": "2018240",
    "end": "2024690"
  },
  {
    "text": "expose a certain container but we can also configure how contains the exposed using gamma files and using these this",
    "start": "2024690",
    "end": "2032280"
  },
  {
    "text": "way of defining our infrastructures configuration and we just set the service kind option we say what poured",
    "start": "2032280",
    "end": "2039990"
  },
  {
    "text": "the containers vinegar and what poor we want to be exposed I made the container available and that's how things get",
    "start": "2039990",
    "end": "2047160"
  },
  {
    "text": "deployed and so we can kind of live through we can create our master where you can create the service and so we can",
    "start": "2047160",
    "end": "2054210"
  },
  {
    "text": "get through seas and it'll tell us what container exposed what IP addresses they're winning on which ports are",
    "start": "2054210",
    "end": "2060060"
  },
  {
    "text": "available in a nice structured way and we can listen through and deploy",
    "start": "2060060",
    "end": "2065429"
  },
  {
    "text": "everything do and now when we look at actually what's on the system you can",
    "start": "2065430",
    "end": "2071220"
  },
  {
    "text": "see we've got off for an end we've got our various master we've got a slave all of these replication controllers which",
    "start": "2071220",
    "end": "2076409"
  },
  {
    "text": "we've told out how to deploy our system we can create our service to make it",
    "start": "2076410",
    "end": "2081510"
  },
  {
    "text": "available so now we've got different and running on port 80 we've got reddish",
    "start": "2081510",
    "end": "2087450"
  },
  {
    "text": "master I've got a better slave and this is in this example one host but it could be many hosts I need to give this diff",
    "start": "2087450",
    "end": "2093480"
  },
  {
    "text": "nice aggregated view and then we can go to the dashboard you I",
    "start": "2093480",
    "end": "2105710"
  },
  {
    "text": "while I do a little dance just why the Wi-Fi is loading up and this dashboard",
    "start": "2111490",
    "end": "2116830"
  },
  {
    "text": "would then represent basically everything which clubs et al is showing us been a nice pretty away and I we kind",
    "start": "2116830",
    "end": "2123340"
  },
  {
    "text": "of like really dashboards as monitoring visualization of what the state of the cluster with actually winning so now we",
    "start": "2123340",
    "end": "2129250"
  },
  {
    "text": "can see that we've got a better slave we've got red its master we got for an end and how many pods are winning so with a nice way to visualize everything",
    "start": "2129250",
    "end": "2136390"
  },
  {
    "text": "in a nice way for the dashboard and if things start going wrong and for example if when its master disappears you will",
    "start": "2136390",
    "end": "2142840"
  },
  {
    "text": "actually be able to visualize and see that along with your map monitoring metrics and so that's kind of how",
    "start": "2142840",
    "end": "2149890"
  },
  {
    "start": "2148000",
    "end": "2176000"
  },
  {
    "text": "containers are all all accessed and so web contagion replication controllers are the heart of Cuba natives for me",
    "start": "2149890",
    "end": "2156700"
  },
  {
    "text": "personally they manage what's running and how many things should be winning at in the first place but containers also",
    "start": "2156700",
    "end": "2162010"
  },
  {
    "text": "need to be accessed so we exposed up for an end using a known port we said when",
    "start": "2162010",
    "end": "2168040"
  },
  {
    "text": "our containers make our festival on port thirty thousand eighty and but Cuba net is buddy for had different ways that you",
    "start": "2168040",
    "end": "2174280"
  },
  {
    "text": "may want to work and deal with them and this is where the services come in so you've got web contagion controllers",
    "start": "2174280",
    "end": "2179859"
  },
  {
    "start": "2176000",
    "end": "2183000"
  },
  {
    "text": "running things you've got services which make them accessible and this is where could beat CTL manager de proxies",
    "start": "2179859",
    "end": "2186720"
  },
  {
    "start": "2183000",
    "end": "2267000"
  },
  {
    "text": "ensures the data is going to the correct place and the correct host and so you",
    "start": "2186720",
    "end": "2192190"
  },
  {
    "text": "can send traffic to any particular tree benetti's nodes and that will know how to read traffic to the correct container",
    "start": "2192190",
    "end": "2198190"
  },
  {
    "text": "on the correct host even if it's not the one ethan traffic to in the first place and so in your dns settings you can",
    "start": "2198190",
    "end": "2204310"
  },
  {
    "text": "basically use dns round-robin send traffic to any other nodes and then it will discover and send traffic to where",
    "start": "2204310",
    "end": "2210550"
  },
  {
    "text": "it actually needs to go into the covers and so again it's all about maintaining high availability and ensuring that if a",
    "start": "2210550",
    "end": "2217690"
  },
  {
    "text": "no goes down you don't lose traffic or you don't lose reliability in terms of",
    "start": "2217690",
    "end": "2225160"
  },
  {
    "text": "our application controllers everything they've managed via labels and so if if",
    "start": "2225160",
    "end": "2231010"
  },
  {
    "text": "where it kind of get the bowls but it kind of makes sense and so it's got the name which is for an end and we also",
    "start": "2231010",
    "end": "2236440"
  },
  {
    "text": "give it labels and neither hell containers are grouped together and logically and so in this case we say the",
    "start": "2236440",
    "end": "2242890"
  },
  {
    "text": "label is called for an end and obviously we have three vectors in our service we can say expose all of these",
    "start": "2242890",
    "end": "2249969"
  },
  {
    "text": "containers winning with the name for intend on port 80 and group everything based on this front end name and so",
    "start": "2249969",
    "end": "2257140"
  },
  {
    "text": "that's how it can manage load balancing for us because we can take any pod winning on any different host and group",
    "start": "2257140",
    "end": "2264039"
  },
  {
    "text": "them together based on its name and based on its label and with the approach",
    "start": "2264039",
    "end": "2270190"
  },
  {
    "start": "2267000",
    "end": "2314000"
  },
  {
    "text": "of no port it basically defining the port and making it making that",
    "start": "2270190",
    "end": "2278769"
  },
  {
    "text": "application available on that port on any particular hosts so this is really good if you have applications running",
    "start": "2278769",
    "end": "2285099"
  },
  {
    "text": "for example databases and they are always winning on 3389 and you wonder",
    "start": "2285099",
    "end": "2291130"
  },
  {
    "text": "poor to be consistent and available for all applications across your cluster so they don't have to keep going and keep",
    "start": "2291130",
    "end": "2296589"
  },
  {
    "text": "looking up which port the applicable actual application is winning on and that's where no pork comes in and you",
    "start": "2296589",
    "end": "2303400"
  },
  {
    "text": "basically in the ml file which is the hard to lothian you just define which port right you want to be available and",
    "start": "2303400",
    "end": "2308859"
  },
  {
    "text": "that's how Cuba netted managers and reserves that port for that particular container but it also smart and it's",
    "start": "2308859",
    "end": "2316180"
  },
  {
    "start": "2314000",
    "end": "2366000"
  },
  {
    "text": "particularly good at when it's running in the cloud because it's appreciated of all the cloud api's and what's at",
    "start": "2316180",
    "end": "2321819"
  },
  {
    "text": "available and possible so if you're running in Google compute engine a jaw",
    "start": "2321819",
    "end": "2327430"
  },
  {
    "text": "or et tu an AWS it will know how to configure and how to communicate with",
    "start": "2327430",
    "end": "2332739"
  },
  {
    "text": "all of the load balancers and how to set up and how to configure them to update",
    "start": "2332739",
    "end": "2338380"
  },
  {
    "text": "and serve traffic and to your individual particular pods and so it's aware and it",
    "start": "2338380",
    "end": "2343660"
  },
  {
    "text": "will use that and take advantage of it instead of you having to reinvent wheel and having another layer of indirection",
    "start": "2343660",
    "end": "2349779"
  },
  {
    "text": "and when you start the containers in your service instead of exposing a node",
    "start": "2349779",
    "end": "2355630"
  },
  {
    "text": "port and defining that you simply say the type of load balancer and then it google and cleaver natives will not be",
    "start": "2355630",
    "end": "2361450"
  },
  {
    "text": "kuba lettuce will manage that and they will communicate an update everything I've it needs to the other way is",
    "start": "2361450",
    "end": "2368559"
  },
  {
    "start": "2366000",
    "end": "2413000"
  },
  {
    "text": "external IP addresses and so if you have a subnet for your data center and on",
    "start": "2368559",
    "end": "2376150"
  },
  {
    "text": "your networking and everything is configured properly you can give containers individual IP addresses and",
    "start": "2376150",
    "end": "2381880"
  },
  {
    "text": "now will it be accessible via the IP address across your network and again",
    "start": "2381880",
    "end": "2386890"
  },
  {
    "text": "when you start the container inside the service you lift the IP addresses which",
    "start": "2386890",
    "end": "2391960"
  },
  {
    "text": "you want it to be made available on this will be updated when it launches the coup proxy will update all of the IP",
    "start": "2391960",
    "end": "2398920"
  },
  {
    "text": "addresses and the IP tables and then traffic will be any traffic sent to 10",
    "start": "2398920",
    "end": "2404559"
  },
  {
    "text": "to 50 for 13 will go to that individual pod and if you can start doing sac I bit of static IP addresses even with",
    "start": "2404559",
    "end": "2411579"
  },
  {
    "text": "container system and now what a new thing is is if you are villing in your",
    "start": "2411579",
    "end": "2416680"
  },
  {
    "start": "2413000",
    "end": "2519000"
  },
  {
    "text": "data center or you don't particularly want to use a cloud load balancer then now an English load balancer and it",
    "start": "2416680",
    "end": "2422289"
  },
  {
    "text": "works in a very similar way you just have complete control of it and so you can specify rules and approaches about",
    "start": "2422289",
    "end": "2428950"
  },
  {
    "text": "how you want traffic to be managed and dispute across your system and so it's all rule-based for example here is",
    "start": "2428950",
    "end": "2435579"
  },
  {
    "text": "defined in a vault in anything going to our mud cloud service payments goes in actually to all of the pods which I have",
    "start": "2435579",
    "end": "2443829"
  },
  {
    "text": "got the label called payments and so if we've got 20 different payments microservices winning traffic will be",
    "start": "2443829",
    "end": "2449890"
  },
  {
    "text": "load balanced and shared across those based on the host header and then you just have a list of rules which you",
    "start": "2449890",
    "end": "2454900"
  },
  {
    "text": "manage and update as part of a yama file and then you send it to cute detail they'll dispute across your data center",
    "start": "2454900",
    "end": "2460900"
  },
  {
    "text": "and everything will just be updated in a nice consistent way without dropping",
    "start": "2460900",
    "end": "2466539"
  },
  {
    "text": "traffic if you want even more control you can jump in and start update and",
    "start": "2466539",
    "end": "2471579"
  },
  {
    "text": "load balancing rules so if you want to introduce like sticky sessions in engine X if you want to change the how the SSL",
    "start": "2471579",
    "end": "2478869"
  },
  {
    "text": "is configured it's all available at all possible with all there and could be netted just the same defaults beefy one",
    "start": "2478869",
    "end": "2486099"
  },
  {
    "text": "that flexibility this is where you have the English controller and be made available and as I say and everything",
    "start": "2486099",
    "end": "2493869"
  },
  {
    "text": "it's done by DNS so even in our mobile intervals we've got kind of like the",
    "start": "2493869",
    "end": "2499569"
  },
  {
    "text": "veins which is basically doing a loop over everything and then for every",
    "start": "2499569",
    "end": "2504640"
  },
  {
    "text": "single thing which we define in our paths we say it's accessible and proxy the request to a particular container",
    "start": "2504640",
    "end": "2510910"
  },
  {
    "text": "and you'll find that container based on Dennis so everything it managed by Dennis and I makes it discoverable",
    "start": "2510910",
    "end": "2516940"
  },
  {
    "text": "and easier to find which I defined here but this is okay and this is like DNS is",
    "start": "2516940",
    "end": "2524920"
  },
  {
    "start": "2519000",
    "end": "2582000"
  },
  {
    "text": "great and dnf is a great way to find that like container is winning on this particular host on this particular IP",
    "start": "2524920",
    "end": "2530560"
  },
  {
    "text": "address but there's also the problem I like how do you actually send network traffic to that particular host and this",
    "start": "2530560",
    "end": "2535870"
  },
  {
    "text": "is where overlay and software-defined networks come in and so if you're used to winning containers you may be familiar with tooling like we've or",
    "start": "2535870",
    "end": "2543070"
  },
  {
    "text": "calico or now docker itself and to manage this networking for you and managing how container 11 hosts talks to",
    "start": "2543070",
    "end": "2550630"
  },
  {
    "text": "a container on another host without expose in any particular port kuba Netta's do this for you it manages all",
    "start": "2550630",
    "end": "2557050"
  },
  {
    "text": "of that communication out of the box so you don't have to think about it again there isn't a ducker the whole batteries",
    "start": "2557050",
    "end": "2563650"
  },
  {
    "text": "included but removable if you want to use we've if you want to use calico everyone health co-op Cuba netted",
    "start": "2563650",
    "end": "2570580"
  },
  {
    "text": "support and it's very easy to drop in and drop out and different ways are doing networking for you about how the",
    "start": "2570580",
    "end": "2576130"
  },
  {
    "text": "box Cuba net is is managing ridding containers at scale and so you don't have to worry about it so this is kind",
    "start": "2576130",
    "end": "2584110"
  },
  {
    "start": "2582000",
    "end": "2616000"
  },
  {
    "text": "of like the key main points so we've got controllers which are winning and showing the lifecycle and application",
    "start": "2584110",
    "end": "2589960"
  },
  {
    "text": "and how different things are managed we've got services which are managing how containers talk to each other what",
    "start": "2589960",
    "end": "2595930"
  },
  {
    "text": "poor exposed and how different things communicate whether it be low balances",
    "start": "2595930",
    "end": "2601210"
  },
  {
    "text": "or external IP addresses DNS is supported at the box to make things discoverable by nice friendly names",
    "start": "2601210",
    "end": "2607420"
  },
  {
    "text": "which we're familiar with and then with the overlay networks which help different hosts talk to each of them and",
    "start": "2607420",
    "end": "2613060"
  },
  {
    "text": "this is the peak or components of human lettuce but there's more important thing",
    "start": "2613060",
    "end": "2618250"
  },
  {
    "start": "2616000",
    "end": "2735000"
  },
  {
    "text": "it's not just at like winning that scale and winning them at auction we need more support for things like how do we keep",
    "start": "2618250",
    "end": "2624580"
  },
  {
    "text": "containers 'life and how do we keep them updated so when we're defining our",
    "start": "2624580",
    "end": "2630220"
  },
  {
    "text": "container and when we're defining our replication controller we can add",
    "start": "2630220",
    "end": "2636010"
  },
  {
    "text": "additional options one of the options which are you very frequently is the live mr. basically health checking built",
    "start": "2636010",
    "end": "2643120"
  },
  {
    "text": "into Cuba netters and check into where the container is a live or not like it's great having a container",
    "start": "2643120",
    "end": "2648609"
  },
  {
    "text": "winning but that doesn't necessarily mean that your application is operating as it should be it could be alive but",
    "start": "2648609",
    "end": "2654460"
  },
  {
    "text": "just sending 500 rests which you don't really want you had been syntech until",
    "start": "2654460",
    "end": "2659769"
  },
  {
    "text": "we can do with our liveness probe in this case we're doing HTTP gap beacon to do tcp connection g thumping requests",
    "start": "2659769",
    "end": "2667240"
  },
  {
    "text": "any health check you'd expect from nagios or other monitoring solutions we",
    "start": "2667240",
    "end": "2672759"
  },
  {
    "text": "say which part to keep hitting along that we turn in a nice to enjoy request everything's happy if it doesn't and",
    "start": "2672759",
    "end": "2679240"
  },
  {
    "text": "every turns a 500 Cuban answers will detect this it will detect and healthy or move it from the load balancer and",
    "start": "2679240",
    "end": "2686039"
  },
  {
    "text": "update or the iptables subtending network traffic to it and flag it as not",
    "start": "2686039",
    "end": "2691240"
  },
  {
    "text": "winning but in healthy and so we just define it when we define in our reputation controllers these are really",
    "start": "2691240",
    "end": "2697779"
  },
  {
    "text": "nice thing is readiness so this is particularly useful if you're winning your containers of running tomcat or a",
    "start": "2697779",
    "end": "2703990"
  },
  {
    "text": "heavy java process or has got some initial warmup time which needs to be performed and so you can have a a probe",
    "start": "2703990",
    "end": "2711880"
  },
  {
    "text": "which checks you say like you may be winning but are you actually ready to start receiving traffic and so it's just",
    "start": "2711880",
    "end": "2717819"
  },
  {
    "text": "if noise health checks and separating how your application works and being appreciated that applications aren't",
    "start": "2717819",
    "end": "2725559"
  },
  {
    "text": "just in a state of winning or not willing there's different life cycles which it goes through and kuba netted",
    "start": "2725559",
    "end": "2731019"
  },
  {
    "text": "appreciate that and it's already fine when you're defining your application controllers it also manages updating and",
    "start": "2731019",
    "end": "2737940"
  },
  {
    "start": "2735000",
    "end": "2848000"
  },
  {
    "text": "so one of the key things is rolling updates so when we have got version one",
    "start": "2737940",
    "end": "2745930"
  },
  {
    "text": "of our container and we want to go to version two we don't necessarily want to go like let's stop everything and let's",
    "start": "2745930",
    "end": "2751930"
  },
  {
    "text": "like just start version 2 because that would stop live in traffic pigley if we",
    "start": "2751930",
    "end": "2757450"
  },
  {
    "text": "got throw boot up time sort of warm-up time we want to be able to ensure that we're still maintaining high availability and we're still serving our",
    "start": "2757450",
    "end": "2764640"
  },
  {
    "text": "capacity without actually taking down and any loss of service and so other orchestration system to have got they're",
    "start": "2764640",
    "end": "2771730"
  },
  {
    "text": "prone to just stopping everything and starting everything again Cuba net is instead is rolling updates and so you",
    "start": "2771730",
    "end": "2778720"
  },
  {
    "text": "generally you'll update your llamo file you'll go from 30 to two thousand three for the image you'll say rolling update",
    "start": "2778720",
    "end": "2785800"
  },
  {
    "text": "apply and that will then update everything in a nice seamless fashion and it will be appreciated of health",
    "start": "2785800",
    "end": "2792250"
  },
  {
    "text": "checks and will be appreciated of readiness and so little it will stop one container it will start a new container",
    "start": "2792250",
    "end": "2798310"
  },
  {
    "text": "until that containers ready and healthy it won't continue rolling out the update until you get this nice staged approach",
    "start": "2798310",
    "end": "2805230"
  },
  {
    "text": "you can then take this abode for canary release it and you can say I want fifty",
    "start": "2805230",
    "end": "2810520"
  },
  {
    "text": "percent of my traffic going to container a and fifty percent going to container be once I'm happy with that release",
    "start": "2810520",
    "end": "2815890"
  },
  {
    "text": "continue to roll out if you start seeing things are going wrong and not as you would expect then you just say roll back",
    "start": "2815890",
    "end": "2823599"
  },
  {
    "text": "and Cuba netted will know how to go back to the previous state and undo any deployments which you actually put in",
    "start": "2823599",
    "end": "2828940"
  },
  {
    "text": "place and we can feel it in the log files and so add things are going through we can say at the top with an",
    "start": "2828940",
    "end": "2837090"
  },
  {
    "text": "update engine X and it will just slowly roll out it will always ensure that the",
    "start": "2837090",
    "end": "2842710"
  },
  {
    "text": "containers running but everything's being updated and bring them one container down and we flashing and bringing it back up in terms of Canary",
    "start": "2842710",
    "end": "2849880"
  },
  {
    "start": "2848000",
    "end": "2946000"
  },
  {
    "text": "releases again if you thin flexures and labels are the way to manage and know which ones machinarium which ones most",
    "start": "2849880",
    "end": "2855940"
  },
  {
    "text": "stable release and which containers should I send traffic to and which one should I lights and traffic to and",
    "start": "2855940",
    "end": "2861280"
  },
  {
    "text": "Felicity how you can start separating your service and separating your load in a knife seamless way by just having",
    "start": "2861280",
    "end": "2868480"
  },
  {
    "text": "selectors if those are cool and appreciated of things like maintenance",
    "start": "2868480",
    "end": "2874270"
  },
  {
    "text": "like performing security updates on a host operating system 82 needing to reboot the actual virtual machine which",
    "start": "2874270",
    "end": "2881320"
  },
  {
    "text": "it's running on and so you can say drain a particular note keep Nettie's will then stop all the containers moved on",
    "start": "2881320",
    "end": "2887740"
  },
  {
    "text": "and restart them on a different host and then it will be the node will be paying",
    "start": "2887740",
    "end": "2893920"
  },
  {
    "text": "to an unhealthy state add new workloads are executed and distributed to Cuba netted it will not load them onto that",
    "start": "2893920",
    "end": "2900700"
  },
  {
    "text": "particular host because you performing maintenance and so we will find other hosts which were available when you're",
    "start": "2900700",
    "end": "2905890"
  },
  {
    "text": "finished went to hold the node of updated and it's happy then you can say",
    "start": "2905890",
    "end": "2911080"
  },
  {
    "text": "bring it back in keep it until then instantly start we're deploying reissuing workloads on to that",
    "start": "2911080",
    "end": "2916760"
  },
  {
    "text": "particular host for you this is particularly useful in terms of data centers and so you can start winning",
    "start": "2916760",
    "end": "2923000"
  },
  {
    "text": "this app data center scale anything like I we need to perform maintenance on a network path or an f5 load balancer you",
    "start": "2923000",
    "end": "2930230"
  },
  {
    "text": "can take out all of the nodes in that low data center drain them all and with",
    "start": "2930230",
    "end": "2935480"
  },
  {
    "text": "all the traffic we shift to a different data center and can bring it back up a kind of like a datacenter scale instead",
    "start": "2935480",
    "end": "2941360"
  },
  {
    "text": "of going to each individual node which could be problematic if it's got thousands of them so this is called um",
    "start": "2941360",
    "end": "2947690"
  },
  {
    "start": "2946000",
    "end": "3004000"
  },
  {
    "text": "and then there isn't managers and other things which you need to be appreciative when you're running in production which",
    "start": "2947690",
    "end": "2954010"
  },
  {
    "text": "containers it's so cleon great art if I'm honest and one of them a secrets",
    "start": "2954010",
    "end": "2959240"
  },
  {
    "text": "management and reason which I'm not particularly happy with containers and secret management is they have default",
    "start": "2959240",
    "end": "2965300"
  },
  {
    "text": "to use environment variables which while environment variables are very convenient they're not the most secure",
    "start": "2965300",
    "end": "2970580"
  },
  {
    "text": "way of managing database secrets and so things applications generally have a nice habit of like the environment",
    "start": "2970580",
    "end": "2977600"
  },
  {
    "text": "variable could be potentially useful for deeper things so let's lie plug that in a secure in location for example",
    "start": "2977600",
    "end": "2984050"
  },
  {
    "text": "pagerduty has got a system in place which will detect and potentially the mobile environment variables and remove",
    "start": "2984050",
    "end": "2990440"
  },
  {
    "text": "them from their log files just in case anything actually happens no Jay s and M p.m. are particularly happy to like",
    "start": "2990440",
    "end": "2997430"
  },
  {
    "text": "share the environment variable with other things running on the system and so you don't necessarily want your",
    "start": "2997430",
    "end": "3003520"
  },
  {
    "text": "passwords be in this place and so crib annette is managed of it as volumes instead so when you start your container",
    "start": "3003520",
    "end": "3011020"
  },
  {
    "start": "3004000",
    "end": "3062000"
  },
  {
    "text": "you can flag the secrets which you need access to and then v secret emanage has",
    "start": "3011020",
    "end": "3017590"
  },
  {
    "text": "files on disk instead there are physical files they're just a volume which cuban",
    "start": "3017590",
    "end": "3022750"
  },
  {
    "text": "exited managing for you and so you can say output my database westford which",
    "start": "3022750",
    "end": "3028840"
  },
  {
    "text": "lifts up my DB password and that's how your application will death where your application will read from when it's booting up and how it gets access to the",
    "start": "3028840",
    "end": "3035320"
  },
  {
    "text": "secret but it means that if an attacker does get access to the environment variables it can't actually see what the",
    "start": "3035320",
    "end": "3041260"
  },
  {
    "text": "secrets are in the first place and for Cuba net is managing it and ever incubi density camel and so that's what",
    "start": "3041260",
    "end": "3047570"
  },
  {
    "text": "we'd expect our secrets to be managed by two and four here is simply defining the",
    "start": "3047570",
    "end": "3052700"
  },
  {
    "text": "mount we're defining where the secret should be stored in this case ax ed secret volume and then we've pointing it",
    "start": "3052700",
    "end": "3059510"
  },
  {
    "text": "to what secrets store we're actually looking for and the same with API keys",
    "start": "3059510",
    "end": "3065150"
  },
  {
    "start": "3062000",
    "end": "3160000"
  },
  {
    "text": "with same with everything and so that's just a nicer way I'm in a different way just our box are managing how we do this",
    "start": "3065150",
    "end": "3072040"
  },
  {
    "text": "in terms of scaling and we can start being restrictive about which hosts and",
    "start": "3072040",
    "end": "3080090"
  },
  {
    "text": "which nodes containers should or shouldn't be running on particularly useful for databases so you may have the",
    "start": "3080090",
    "end": "3086210"
  },
  {
    "text": "hosts and nodes which are more suited to winning 13 types of workloads for example they have a SSD disk or they",
    "start": "3086210",
    "end": "3092900"
  },
  {
    "text": "have high memory or they have high CPU and so when we define our application we can say like always win this can",
    "start": "3092900",
    "end": "3099380"
  },
  {
    "text": "particular container on a node which have got disc type SSD and so Cuba",
    "start": "3099380",
    "end": "3104990"
  },
  {
    "text": "netted will realize and appreciate that and so when it got workloads I'm when you're scaling up it will only scale it",
    "start": "3104990",
    "end": "3110000"
  },
  {
    "text": "up onto those particular nodes nodes are then just added and defined labels and",
    "start": "3110000",
    "end": "3115400"
  },
  {
    "text": "selectors and so you can simply play the master this is the label of type SSD disk and it though containers can be",
    "start": "3115400",
    "end": "3122270"
  },
  {
    "text": "deployed on to appropriately in terms of scaling again we can affect auto scaling",
    "start": "3122270",
    "end": "3128780"
  },
  {
    "text": "and at the moment it's based on cpu usage he simply they often end",
    "start": "3128780",
    "end": "3134240"
  },
  {
    "text": "application which is our PHP application also scale up to five maximum containers",
    "start": "3134240",
    "end": "3139970"
  },
  {
    "text": "and basis on a threshold of eighty percent CPU until Q benetti's will automatically monitor it it will look at",
    "start": "3139970",
    "end": "3146599"
  },
  {
    "text": "what a cpu usage is across the containers if it does peaking and spoken to eighty percent it will start",
    "start": "3146599",
    "end": "3151970"
  },
  {
    "text": "launching more on different nodes and it launches dormi will update the load balancer and the IP tables and we'll",
    "start": "3151970",
    "end": "3157670"
  },
  {
    "text": "start spreading and sharing that traffic across everything so if we look at what",
    "start": "3157670",
    "end": "3163490"
  },
  {
    "start": "3160000",
    "end": "3278000"
  },
  {
    "text": "you have done we don't have time if you want it all on Cuba natives it's all on",
    "start": "3163490",
    "end": "3168560"
  },
  {
    "text": "katakana and for multi house but we'll move on to cover the interesting topic",
    "start": "3168560",
    "end": "3173869"
  },
  {
    "text": "so auto scaling is great um but cumulative",
    "start": "3173869",
    "end": "3179360"
  },
  {
    "text": "planning to go a step further and that's with bin packing so because Cuba natives",
    "start": "3179360",
    "end": "3185750"
  },
  {
    "text": "knows how your application starts he's also monitoring how your application actually operates and the processes and",
    "start": "3185750",
    "end": "3193340"
  },
  {
    "text": "the behaviors of what the application actually looks like so for example it",
    "start": "3193340",
    "end": "3199070"
  },
  {
    "text": "knows whether it's a high memory application or high memory usage application or well his very bound to",
    "start": "3199070",
    "end": "3204950"
  },
  {
    "text": "CPU or i/o it will then use this metrics and these judgments to judge what other hosts and other containers that",
    "start": "3204950",
    "end": "3211640"
  },
  {
    "text": "particular container should be running on so if you've got a very high memory and low CPU container willing it should",
    "start": "3211640",
    "end": "3219290"
  },
  {
    "text": "be paired with the container which is needs a lot to CPU but very low memory and this is how you can maximize and",
    "start": "3219290",
    "end": "3225710"
  },
  {
    "text": "take advantage of your entire infrastructure without introducing bottlenecks or contingent or containers",
    "start": "3225710",
    "end": "3232190"
  },
  {
    "text": "and applications fighting for the same reason and this is how Google operates at scale they fit how Google can have",
    "start": "3232190",
    "end": "3240040"
  },
  {
    "text": "hundreds of thousands of servers or winning at eighty percent because each application is not competing and not",
    "start": "3240040",
    "end": "3246850"
  },
  {
    "text": "constraining the fighting for the same resources because it's monitoring what the application actually needs and if",
    "start": "3246850",
    "end": "3252620"
  },
  {
    "text": "the concept is going to be introduced into Cuba netis its concept called pinback bin packing and for me I think",
    "start": "3252620",
    "end": "3258290"
  },
  {
    "text": "would be like playing Tetris with your applications like you benetti's will know which applications are running wear",
    "start": "3258290",
    "end": "3264500"
  },
  {
    "text": "and wear when you say deploy something it will know where to fit that into your entire deployment approach and so you",
    "start": "3264500",
    "end": "3271250"
  },
  {
    "text": "won't have to do capacity planning you won't have to do resource management you'll basically have everything",
    "start": "3271250",
    "end": "3276440"
  },
  {
    "text": "structured and dim for you we then comes up with strict Nick so we're in a team",
    "start": "3276440",
    "end": "3281960"
  },
  {
    "start": "3278000",
    "end": "3348000"
  },
  {
    "text": "level we can start saying that certain teams are only allowed to deploy certain amount of resources into our datacenters",
    "start": "3281960",
    "end": "3290000"
  },
  {
    "text": "on into our clusters and particularly for protesting you could have testing which takes twenty percent and it can",
    "start": "3290000",
    "end": "3295760"
  },
  {
    "text": "only ever take twenty percent even if it goes a little bit crazy and you know you're not potentially constraining and",
    "start": "3295760",
    "end": "3301400"
  },
  {
    "text": "potentially impact in your production usage and it's just a royal way to manage how everything is I'm shared and",
    "start": "3301400",
    "end": "3308470"
  },
  {
    "text": "everything is not fighting for the same one and if you've all done by namespace so every container can be issued into a",
    "start": "3308470",
    "end": "3316670"
  },
  {
    "text": "namespace but the full communities within cube system but it's like your",
    "start": "3316670",
    "end": "3322150"
  },
  {
    "text": "professional services team could have their own namespace and so that's ring-fenced and separate from everything",
    "start": "3322150",
    "end": "3328700"
  },
  {
    "text": "else going on system when you do things like coupe GT I'll get pods you can say get pods for all needed particularly",
    "start": "3328700",
    "end": "3335300"
  },
  {
    "text": "namespace and throw your teams don't have to worry and digitalize what else is happening on the cluster you can just",
    "start": "3335300",
    "end": "3341599"
  },
  {
    "text": "care about what's actually in your interest and so it's a nice way to manage ring a particular scale and you",
    "start": "3341599",
    "end": "3349430"
  },
  {
    "start": "3348000",
    "end": "3422000"
  },
  {
    "text": "can then list what's happening just by using coupe CTR once you get to a",
    "start": "3349430",
    "end": "3356030"
  },
  {
    "text": "certain particular scale you can then start winning Cuba natives at high availability so you want to learn",
    "start": "3356030",
    "end": "3361130"
  },
  {
    "text": "multiple Martin masters to ensure that if Walmart to get shot in the head or",
    "start": "3361130",
    "end": "3366740"
  },
  {
    "text": "kind of like losing network infrastructure you can still start deploying containers and you can still",
    "start": "3366740",
    "end": "3371750"
  },
  {
    "text": "manage your host in a multiple way and this is all part of like an approach called Federation or uber lettuce and",
    "start": "3371750",
    "end": "3379220"
  },
  {
    "text": "which is allowing you to win containers and rinku benetti's across multiple different sage centers and ruin them as",
    "start": "3379220",
    "end": "3385970"
  },
  {
    "text": "scale and be data center aware so it will know whether it's winning in region 1 or region 2 and it will make sure that",
    "start": "3385970",
    "end": "3392810"
  },
  {
    "text": "when containers are operating in it will work and communicate with things which are nearby to ensure that it's got like",
    "start": "3392810",
    "end": "3398839"
  },
  {
    "text": "less latency in network traffic's and Google because it's open source it's",
    "start": "3398839",
    "end": "3403970"
  },
  {
    "text": "also very appreciative of being open and transparent about it approaches it so",
    "start": "3403970",
    "end": "3409760"
  },
  {
    "text": "you'll see lots of proposals and lots of detailed architecture detailed design documents and decisions in the gate hood",
    "start": "3409760",
    "end": "3416660"
  },
  {
    "text": "bleep repo and so if you're actually interested in what's happening you can go down you can find out more information and this will then auto",
    "start": "3416660",
    "end": "3424220"
  },
  {
    "start": "3422000",
    "end": "3440000"
  },
  {
    "text": "scale across clusters and so it won't just be it would it be pods which can be",
    "start": "3424220",
    "end": "3429319"
  },
  {
    "text": "scaled it will also then start detective and your hosts have got reach the third and capacity and start spinning up additional house for you and so you can",
    "start": "3429319",
    "end": "3436069"
  },
  {
    "text": "start scaling act like a bigger larger level",
    "start": "3436069",
    "end": "3441250"
  },
  {
    "text": "so with that I'm will move on okay let",
    "start": "3441800",
    "end": "3449450"
  },
  {
    "text": "me just um I'm running out of time okay",
    "start": "3449450",
    "end": "3457520"
  },
  {
    "text": "if we'll aren't skip the bear bad plug so um like ribbon ideas I've got all of",
    "start": "3457520",
    "end": "3463730"
  },
  {
    "text": "these problems a lousy train container that scale and allows you to win a minute cloud and win them across different things but like where did that",
    "start": "3463730",
    "end": "3470330"
  },
  {
    "text": "fit into the entire ecosystem and so swarm is great I'm swarm kit is the new",
    "start": "3470330",
    "end": "3476780"
  },
  {
    "text": "floor molded particularly interesting and that's available and I would say",
    "start": "3476780",
    "end": "3482030"
  },
  {
    "text": "that that's probably people first logical approach um where they're trying to scale out to multiple different hosts",
    "start": "3482030",
    "end": "3487460"
  },
  {
    "text": "because it's a simpler learning curve and you don't have to deal and it's just a natural wave winning Zing's DCOs is",
    "start": "3487460",
    "end": "3493550"
  },
  {
    "text": "kind of dedicated and optimized for winning different types of workloads um and so if not just associated with",
    "start": "3493550",
    "end": "3500450"
  },
  {
    "text": "winning containers it can also burn Hadoop job it can rinse park and come on ETL processes and so that's where you",
    "start": "3500450",
    "end": "3506870"
  },
  {
    "text": "kind of need when you want to take advantage of your entire cluster and when different types listed by dcs fits",
    "start": "3506870",
    "end": "3512990"
  },
  {
    "text": "in terms of nomads and it's kind of like it's just a scheduler it didn't do",
    "start": "3512990",
    "end": "3518300"
  },
  {
    "text": "frequent management it doesn't do auto scaling and it didn't have some of the features which are discussed instead",
    "start": "3518300",
    "end": "3524570"
  },
  {
    "text": "it's just a pure scheduler but at the same time it's probably the purest and cleanest and neatest one of them all",
    "start": "3524570",
    "end": "3531290"
  },
  {
    "text": "because it did one job and it did it very well and not only did it can do containers we can do VMs it can do jar",
    "start": "3531290",
    "end": "3537680"
  },
  {
    "text": "files and it can manage it winning processes and so if that's what you need then no matter is actually quite a good",
    "start": "3537680",
    "end": "3543290"
  },
  {
    "text": "alternative without all of the additional complexity which comes with Cuban edges but connected about the",
    "start": "3543290",
    "end": "3549350"
  },
  {
    "text": "traction it's got the mindset if definitely got the most people proactively working on it in terms of",
    "start": "3549350",
    "end": "3555290"
  },
  {
    "text": "the community and as I said that I it got powerful features to help you in and containers out scale and it's got even",
    "start": "3555290",
    "end": "3561020"
  },
  {
    "text": "more coming like the role map is transparent it visible but it's also aggressive like constantly they're",
    "start": "3561020",
    "end": "3566210"
  },
  {
    "text": "releasing new updates which you actually need and would you actually want when you win and contain the touch scale so",
    "start": "3566210",
    "end": "3571550"
  },
  {
    "start": "3570000",
    "end": "3599000"
  },
  {
    "text": "with that let's summarize the other thing google it is it's open",
    "start": "3571550",
    "end": "3577199"
  },
  {
    "text": "source it's designed for winning and automating containers at scale originally backed by Google is now cloud",
    "start": "3577199",
    "end": "3583170"
  },
  {
    "text": "native foundation and so it's all open source multiple different companies are working on it and once you hit that",
    "start": "3583170",
    "end": "3589229"
  },
  {
    "text": "point in your container architecture you need 13 particular features and that's where kuba net is fits in when you need",
    "start": "3589229",
    "end": "3595890"
  },
  {
    "text": "auto scaling when you need better health checks and low balancing and winning things this is where communities and",
    "start": "3595890",
    "end": "3601589"
  },
  {
    "text": "you'll start to hear that point and it's an Isis simple way of managing multiple different hosts and where your workloads",
    "start": "3601589",
    "end": "3606989"
  },
  {
    "text": "are actually winning it's got a lot of traction it's got a lot of interest it's definitely progressing nicely and it's",
    "start": "3606989",
    "end": "3613199"
  },
  {
    "text": "definitely a project to watch if you're planning come to deploy containers into the future I gave you a quick demo of",
    "start": "3613199",
    "end": "3619499"
  },
  {
    "text": "Cuban it is on catch coda if you want to learn more than that's obviously a great place because that's my baby but it's",
    "start": "3619499",
    "end": "3625769"
  },
  {
    "text": "all there it's all free and so if you want to play with Cuba neta to yourself then feel free and if you have any questions then to please reach out and",
    "start": "3625769",
    "end": "3632279"
  },
  {
    "text": "contact me with that thank you for your time and I hope to see some of you in the windows contain a session this",
    "start": "3632279",
    "end": "3637619"
  },
  {
    "text": "afternoon thank",
    "start": "3637619",
    "end": "3640459"
  }
]