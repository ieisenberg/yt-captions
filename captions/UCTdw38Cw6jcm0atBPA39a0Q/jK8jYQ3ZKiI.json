[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "well hello okay thank you very much for coming I'm slightly surprised to see anyone",
    "start": "1760",
    "end": "8370"
  },
  {
    "text": "here because this is essentially something you will never ever want to do so we are going to be talking about",
    "start": "8370",
    "end": "15680"
  },
  {
    "text": "almost every detail you need to get to get dotnet code running from scratch and",
    "start": "15680",
    "end": "25189"
  },
  {
    "text": "I would say if you ever thinking about how to solve a problem you think I know",
    "start": "25189",
    "end": "30599"
  },
  {
    "text": "I'll write my own dotnet runtime I would highly recommend you go away and think about it again",
    "start": "30599",
    "end": "36950"
  },
  {
    "text": "Microsoft did this very well there is no reason for anyone else to do this now of course if you're thinking oh",
    "start": "36950",
    "end": "43829"
  },
  {
    "text": "it might be fun to write my own down there runtime that's a completely different matter and I would highly",
    "start": "43829",
    "end": "48989"
  },
  {
    "text": "recommend giving it a go because it was quite fun in a very kind of nice techie sort of way and that's exactly the kind",
    "start": "48989",
    "end": "56910"
  },
  {
    "text": "of people I hope you are because this is very neat very techy I will be going into as I say just about everyday",
    "start": "56910",
    "end": "64290"
  },
  {
    "text": "detail of how to do this whether we can do that in one hour is yet to be discovered so excitement for all of us here so I'm",
    "start": "64290",
    "end": "73020"
  },
  {
    "text": "Chris bacon my day job is I work for Google in the cloud net team along with",
    "start": "73020",
    "end": "79049"
  },
  {
    "text": "John and some other people this is nothing to do with that Google at Google we are not writing our own down there",
    "start": "79049",
    "end": "85710"
  },
  {
    "text": "runtime janta made that very clear this is this is totally not Google word not yet yes who no no as far as May",
    "start": "85710",
    "end": "93900"
  },
  {
    "text": "there are no plans to do so either okay so let's get going so just to be clear",
    "start": "93900",
    "end": "100140"
  },
  {
    "text": "on what we're going to do I have a visual studio I have Visual Studio open",
    "start": "100140",
    "end": "105329"
  },
  {
    "text": "here on the right I hope you can see that we have a couple of projects here",
    "start": "105329",
    "end": "113040"
  },
  {
    "text": "we have a classic hello world this is a c-sharp project which has oh let's",
    "start": "113040",
    "end": "121259"
  },
  {
    "start": "120000",
    "end": "260000"
  },
  {
    "text": "shrink that font size slightly which has",
    "start": "121259",
    "end": "126560"
  },
  {
    "text": "considerable own hello world and what we're gonna try and do is write a program in C naught C sharp",
    "start": "126560",
    "end": "133950"
  },
  {
    "text": "see that can take the dll produced by the c-sharp compiler and execute that",
    "start": "133950",
    "end": "141450"
  },
  {
    "text": "code now this actually is too difficult is too ambitious too complicated so what",
    "start": "141450",
    "end": "148200"
  },
  {
    "text": "we're actually going to do is we're going to take this code and execute that",
    "start": "148200",
    "end": "153560"
  },
  {
    "text": "and you will see this is still fairly complicated but this is I hope manageable right so we're going to build",
    "start": "153560",
    "end": "161549"
  },
  {
    "text": "that now I've already set up a build rule to copy the screw to pull into the",
    "start": "161549",
    "end": "166830"
  },
  {
    "text": "correct place and yet the correct place is the same directory as this C file",
    "start": "166830",
    "end": "172380"
  },
  {
    "text": "here now I'm not an expert in C I haven't done a lot of C for many many",
    "start": "172380",
    "end": "177690"
  },
  {
    "text": "years so I apologize up front if my idioms are wrong my casings are wrong my whatever",
    "start": "177690",
    "end": "183989"
  },
  {
    "text": "is wrong please don't tell me about it maybe at the end you can come and criticize my C but it's not something I",
    "start": "183989",
    "end": "189329"
  },
  {
    "text": "do any more regularly so I have here a C file now the talk did say this was going",
    "start": "189329",
    "end": "195540"
  },
  {
    "text": "to be from scratch and but you can see there is already code here the code here is very minimal and it's actually almost",
    "start": "195540",
    "end": "201900"
  },
  {
    "text": "completely type def struct definitions rather than actual code so we are basically going to write all the code",
    "start": "201900",
    "end": "207359"
  },
  {
    "text": "from nothing at all so just to quickly whisk through what's here we've got some standard includes we've got a few macros",
    "start": "207359",
    "end": "212910"
  },
  {
    "text": "that I'll describe later we have a function called crash which just print out an error message and exits and then",
    "start": "212910",
    "end": "219120"
  },
  {
    "text": "we have a whole load of Struck's and the type death to the drugs and some more macros and then again as you can see a",
    "start": "219120",
    "end": "226519"
  },
  {
    "text": "struct off the struct after struct and we'll come to what these are in a moment the reason i've defined them predefined",
    "start": "226519",
    "end": "232079"
  },
  {
    "text": "them is because it's just a bit tedious copying them out of the specification and if you guys forget it's wrong",
    "start": "232079",
    "end": "237690"
  },
  {
    "text": "it all goes horribly wrong very very quickly and then there's this this quick array here which again the numbers are",
    "start": "237690",
    "end": "243060"
  },
  {
    "text": "important if I get it wrong it's all very embarrassing for everyone so I've pre done that so this is our actual code",
    "start": "243060",
    "end": "248519"
  },
  {
    "text": "that we're starting with if you don't know C hopefully this very clear I'll just run it and tada press ENTER to exit",
    "start": "248519",
    "end": "255989"
  },
  {
    "text": "there we go it works good news right so let's make a start now",
    "start": "255989",
    "end": "264510"
  },
  {
    "start": "260000",
    "end": "330000"
  },
  {
    "text": "the the document you need to do this is the ECMO standard 335 this is the full",
    "start": "264510",
    "end": "271710"
  },
  {
    "text": "tedious and detailed specification of how dotnet works exist the CLI",
    "start": "271710",
    "end": "279200"
  },
  {
    "text": "partitions 1 to 6 and if we reach down to the contents you can see you've got constant architecture which is good to",
    "start": "279200",
    "end": "285900"
  },
  {
    "text": "read just to get a general idea you then got all the details of metadata semantics silly instruction set so the",
    "start": "285900",
    "end": "291060"
  },
  {
    "text": "SIL instruction set still stands for common intermediate language right yes",
    "start": "291060",
    "end": "296670"
  },
  {
    "text": "and that is what the c-sharp compiler actually produces it produces SIL so when we say you know x equals 1 it",
    "start": "296670",
    "end": "303420"
  },
  {
    "text": "produces sorry VAR x equals 1 they produces the the il to execute that ok",
    "start": "303420",
    "end": "311700"
  },
  {
    "text": "so this is a very detailed document there's all kinds of stuff in the contents that we're not going to talk about and that's not the point I'm not",
    "start": "311700",
    "end": "318450"
  },
  {
    "text": "going to explain some of what what I'm going to do because there isn't enough time so some of it I will explain as I",
    "start": "318450",
    "end": "323970"
  },
  {
    "text": "go along other bits I hope just kind of pick up as we go along ok so this is the dog and this is a directory where main",
    "start": "323970",
    "end": "333000"
  },
  {
    "start": "330000",
    "end": "540000"
  },
  {
    "text": "dot C is and as I say I've set it up to copy hello world DLL to that directory and when we run this I've arranged it",
    "start": "333000",
    "end": "339870"
  },
  {
    "text": "inverted to do that it passes hello world DLL as a parameter so the first thing we do right here we go",
    "start": "339870",
    "end": "346620"
  },
  {
    "text": "C coding there's gonna be a lot of it I hope you enjoy it right we need to load that file so we're going to load the",
    "start": "346620",
    "end": "352350"
  },
  {
    "text": "file and we're going to pass it our p1 which and see the the offset 1 is the",
    "start": "352350",
    "end": "359000"
  },
  {
    "text": "first parameter of Z naught is the name of the executable there's actually running so we need now to write a thing",
    "start": "359000",
    "end": "366300"
  },
  {
    "text": "that loads file so we have a mythical low file which currently returns nothing but it will return something later on",
    "start": "366300",
    "end": "373320"
  },
  {
    "text": "we're gonna load the file and just to see what we're doing and just to prove we'll just run that to",
    "start": "373320",
    "end": "381090"
  },
  {
    "text": "prove that we are passing in writes ok low file hello a DLL right so late a",
    "start": "381090",
    "end": "391320"
  },
  {
    "text": "file from disk how do you do that told you we're going to start a scratch doing everything we first of all open the file",
    "start": "391320",
    "end": "398370"
  },
  {
    "text": "we say want to read it it's a binary file and we want to have read access to",
    "start": "398370",
    "end": "404430"
  },
  {
    "text": "it that returns an int file descriptor we then need to find the length of the",
    "start": "404430",
    "end": "410100"
  },
  {
    "text": "file this is a little bit tedious we could map it but map isn't portable and I can never remember the windows way of",
    "start": "410100",
    "end": "416340"
  },
  {
    "text": "memory mapping things so instead we we seek to the end to find the link we then",
    "start": "416340",
    "end": "423360"
  },
  {
    "text": "seek back the beginning to find let's go",
    "start": "423360",
    "end": "429690"
  },
  {
    "text": "back at the beginning we then allocated some data I'm using malloc because it",
    "start": "429690",
    "end": "434729"
  },
  {
    "text": "hits C so we have to actually allocate data for the right length we then read the file contents and then because I'm a",
    "start": "434729",
    "end": "443729"
  },
  {
    "text": "good citizen we close the file ok so that now has load the file into a memory",
    "start": "443729",
    "end": "452419"
  },
  {
    "text": "program now executable files in Windows have ever since the ms-dos days",
    "start": "452419",
    "end": "459139"
  },
  {
    "text": "contained a marker at the begin the file which is MZ which apparently were the initials of a very early investors",
    "start": "459139",
    "end": "464880"
  },
  {
    "text": "programmer I didn't who they were so what we can do is we can just verify that this file does have those those",
    "start": "464880",
    "end": "472800"
  },
  {
    "text": "those values so we will say now little by my macros Val all it does is it takes",
    "start": "472800",
    "end": "479639"
  },
  {
    "text": "a memory pointer a pointer which in this case T P data offset 0 cast the result",
    "start": "479639",
    "end": "487560"
  },
  {
    "text": "to a pointer to chart and then dereference is the the pointer so it means I can read a value at a particular",
    "start": "487560",
    "end": "493800"
  },
  {
    "text": "offset from a memory pointer without having to worry about types and other inconvenient things so this one should",
    "start": "493800",
    "end": "499500"
  },
  {
    "text": "be M and we're gonna do is going to crash if this isn't right and this one",
    "start": "499500",
    "end": "506849"
  },
  {
    "text": "that should be Zed oops said capitals in",
    "start": "506849",
    "end": "513020"
  },
  {
    "text": "okay say that's good and then if we and",
    "start": "514349",
    "end": "521169"
  },
  {
    "text": "now we know isn't it suitable if Miss Grimes and we just run that and it isn't",
    "start": "521169",
    "end": "527500"
  },
  {
    "text": "it's good for excellent we've passed the first hurdle good news right so now the",
    "start": "527500",
    "end": "533410"
  },
  {
    "text": "question is what do we do we've got this big blob of memory that",
    "start": "533410",
    "end": "538750"
  },
  {
    "text": "somehow contains that that c-sharp program but how do we run it so we turn to the manual and this is the part we",
    "start": "538750",
    "end": "545620"
  },
  {
    "text": "need second to second 25 the structure of the runtime file format so let's go here right so we start off with an",
    "start": "545620",
    "end": "552760"
  },
  {
    "text": "ms-dos header as I explained which has the MZ that's 14 5a and then the thing we need this is Elif a new pointer here",
    "start": "552760",
    "end": "558760"
  },
  {
    "text": "and this is a pointer that tells us where the next sort of header is in this",
    "start": "558760",
    "end": "564700"
  },
  {
    "text": "file so we're gonna say LF a new your cause and again using our macro to read an int from now I will actually just",
    "start": "564700",
    "end": "571990"
  },
  {
    "text": "define a P ms-dos header which is the",
    "start": "571990",
    "end": "577089"
  },
  {
    "text": "same as the data cuz it starts officer zero in the file but it just makes it slightly clearer that which which header",
    "start": "577089",
    "end": "582100"
  },
  {
    "text": "we're currently reading into so if I knew plus no sorry sorry I think you",
    "start": "582100",
    "end": "591580"
  },
  {
    "text": "equals that and then the offset we need to read it from is three C in this file as the manual told us so we read that",
    "start": "591580",
    "end": "598360"
  },
  {
    "text": "and now we have an NFA new and as the manual says but if you can read that to",
    "start": "598360",
    "end": "606040"
  },
  {
    "text": "make it slightly bigger and unsigned integer off everything new to the PE header the PE header is the portable",
    "start": "606040",
    "end": "612130"
  },
  {
    "text": "execution header so that's what we're gonna go next so we're going to make a pointer to the PE header and I've",
    "start": "612130",
    "end": "620380"
  },
  {
    "text": "another macro which just allows me to get a pointer at a particular offset now",
    "start": "620380",
    "end": "625990"
  },
  {
    "text": "we're going to be plus 4 because the first four bytes the P header are does PE null null which are not interesting",
    "start": "625990",
    "end": "633700"
  },
  {
    "text": "so we're gonna give you those very good and now we want to check no you're not",
    "start": "633700",
    "end": "641529"
  },
  {
    "text": "gonna look at the definition of the PE header which is yeah and you can see here the first thing that looks interesting is",
    "start": "641529",
    "end": "646920"
  },
  {
    "text": "the offset zero that should be value that's always a fixed value so we can check that so now we can say if Val",
    "start": "646920",
    "end": "655710"
  },
  {
    "text": "we've got the P header and it's a short",
    "start": "655710",
    "end": "660790"
  },
  {
    "text": "cuz it's a two by two thing that's right yep so the size there is two bytes offset zero so that's a short so we read a",
    "start": "660790",
    "end": "666940"
  },
  {
    "text": "short frumpy header at all so it's zero and if that is not the value specified which is one for C and X then we crash",
    "start": "666940",
    "end": "675610"
  },
  {
    "text": "and say this is not a don't net but",
    "start": "675610",
    "end": "681040"
  },
  {
    "text": "don't let executable terrible news but if it if it is 1 for C then we say it is",
    "start": "681040",
    "end": "688480"
  },
  {
    "text": "a net XC q bull that's big smiley right",
    "start": "688480",
    "end": "695110"
  },
  {
    "text": "whoops there we go right so again we can",
    "start": "695110",
    "end": "700270"
  },
  {
    "text": "now run that and see if it succeeds it succeeded its next eautiful and it's a",
    "start": "700270",
    "end": "706690"
  },
  {
    "text": "dot next feed for good news now I've forgotten to put the carriage turns on",
    "start": "706690",
    "end": "712360"
  },
  {
    "text": "the end get to used to write line in c-sharp ok so just run that and there we are it's no suitable and it is it done",
    "start": "712360",
    "end": "718570"
  },
  {
    "text": "executable good news ok right we now",
    "start": "718570",
    "end": "725080"
  },
  {
    "start": "720000",
    "end": "900000"
  },
  {
    "text": "have to go and look at what comes next so immediately after the PS signature is P file headed we should just looked at",
    "start": "725080",
    "end": "731790"
  },
  {
    "text": "it then goes into a padi serve out some of these flags that we're not interested in I should say we're doing the absolute",
    "start": "731790",
    "end": "737200"
  },
  {
    "text": "minimum necessary here to get to the Ashley executing code we will do nothing and let's be have tea and that means",
    "start": "737200",
    "end": "743440"
  },
  {
    "text": "we're not verifying anything we're not error checking we're not doing anything like that that you would normally do right immediately followed off the PE",
    "start": "743440",
    "end": "749110"
  },
  {
    "text": "header is the PE optional header right and so immediately following so we can",
    "start": "749110",
    "end": "756700"
  },
  {
    "text": "go and look at this and see this is 20 bytes long the PE header so we can now say the PE optional header it's a",
    "start": "756700",
    "end": "765760"
  },
  {
    "text": "pointer that starts at the MS DOS header but at an officer of 20 and so that point macro just just let you get",
    "start": "765760",
    "end": "772090"
  },
  {
    "text": "pointers offset all the pointers",
    "start": "772090",
    "end": "776100"
  },
  {
    "text": "yes you may be right thank you great so we now have the optional header",
    "start": "779350",
    "end": "787340"
  },
  {
    "text": "and then also if we just whisk down a bit further we can see there is a where",
    "start": "787340",
    "end": "793220"
  },
  {
    "text": "that there's another header we need called the PE a section header which",
    "start": "793220",
    "end": "799190"
  },
  {
    "text": "actually I think we'll get to in just a moment and back at the P header the only",
    "start": "799190",
    "end": "805910"
  },
  {
    "text": "other bit we need from this PE header is this number of sections and I'll explain what this is in just a moment and why we",
    "start": "805910",
    "end": "812780"
  },
  {
    "text": "want it so we will get a variable an int",
    "start": "812780",
    "end": "818000"
  },
  {
    "text": "which contains the number of sections in this far now a section is to do with how data is represented in these sp4 files",
    "start": "818000",
    "end": "825550"
  },
  {
    "text": "so there's split up into sections and then the addressing is kind of on a section relative addressing which we'll",
    "start": "825550",
    "end": "831920"
  },
  {
    "text": "come to in a moment so no sections it's a short it's at and",
    "start": "831920",
    "end": "838670"
  },
  {
    "text": "the PE header and it's offset to great",
    "start": "838670",
    "end": "843950"
  },
  {
    "text": "so now we can print out how many sections we have",
    "start": "843950",
    "end": "850389"
  },
  {
    "text": "okay excellent let's run that again and we should have a central number",
    "start": "854320",
    "end": "861399"
  },
  {
    "text": "sections we do three it seems reasonable right so now we need to load the",
    "start": "861399",
    "end": "868899"
  },
  {
    "text": "sections so we will loop through all the sections I did warn you every detail was",
    "start": "868899",
    "end": "881769"
  },
  {
    "text": "going to be gone through so this is one of those details so each section",
    "start": "881769",
    "end": "887649"
  },
  {
    "text": "contains a bit of memory that we've loaded in the file and then it has like a virtual base address and then all",
    "start": "887649",
    "end": "893380"
  },
  {
    "text": "future addressing is via that virtual base address not the actual kind of offset in the file so we find a pointer",
    "start": "893380",
    "end": "901959"
  },
  {
    "start": "900000",
    "end": "1260000"
  },
  {
    "text": "to the section oh no before that we need to get the section header so which",
    "start": "901959",
    "end": "908380"
  },
  {
    "text": "follows the optional header so we have the section section headers and the headers because they're just",
    "start": "908380",
    "end": "913660"
  },
  {
    "text": "sequentially in memory they're not there's no indexing into them they're just sequential so that say we need to",
    "start": "913660",
    "end": "921279"
  },
  {
    "text": "find out how long the optional header is and then it's just after the optional so the optional header is you can see is",
    "start": "921279",
    "end": "926459"
  },
  {
    "text": "there's something at offset and i6 that has a size of 128 so what's 96 plus 128 that's 224 so the",
    "start": "926459",
    "end": "938319"
  },
  {
    "text": "offset from the optional header of 224 that is the section header right so to",
    "start": "938319",
    "end": "949360"
  },
  {
    "text": "load the first section we have a pointer from the section header or it's going to look at what the second header is first",
    "start": "949360",
    "end": "955360"
  },
  {
    "text": "of all now down here somewhere",
    "start": "955360",
    "end": "960519"
  },
  {
    "text": "we have the section header definition right so here you can see each section header has a format following total of",
    "start": "960519",
    "end": "966699"
  },
  {
    "text": "40 bytes per section header and this is the content so I would say virtual address is and the pointer to the raw",
    "start": "966699",
    "end": "972100"
  },
  {
    "text": "data so we have to kind of copy some data around so we can access it later right P optional header so we're going",
    "start": "972100",
    "end": "980410"
  },
  {
    "text": "to do I times 40 because the optional not awful header sorry section headers these section headers so",
    "start": "980410",
    "end": "989180"
  },
  {
    "text": "we create a pointer to this section header this section right we then have",
    "start": "989180",
    "end": "996569"
  },
  {
    "text": "to I've got a structure already defined could off yet no obvious answer a relative virtual address and it just",
    "start": "996569",
    "end": "1004129"
  },
  {
    "text": "contains the base address the size and then the actual pointer to where we're",
    "start": "1004129",
    "end": "1010310"
  },
  {
    "text": "going to store them everywhere Malick's and meta soms and memory environment and then peanuts because we create a linked list of the all the RV A's or VA",
    "start": "1010310",
    "end": "1019129"
  },
  {
    "text": "sections rather so if each one we create a struct nugget a handy macro that",
    "start": "1019129",
    "end": "1024558"
  },
  {
    "text": "generates that Alex memory for a",
    "start": "1024559",
    "end": "1029900"
  },
  {
    "text": "particular struct and returns a pointer to it we then need to go wait you might",
    "start": "1029900",
    "end": "1035449"
  },
  {
    "text": "be thinking crumbs have already been going for quarter of now and all we've done is this I must tell you that",
    "start": "1035449",
    "end": "1040610"
  },
  {
    "text": "unfortunately exciting that will be when we get to actually executing code it's only a small part of what we have to do",
    "start": "1040610",
    "end": "1046788"
  },
  {
    "text": "to get there and this is all the getting there so right well carry on getting",
    "start": "1046789",
    "end": "1052100"
  },
  {
    "text": "there so we need to set the base address which as you can hear as this is this",
    "start": "1052100",
    "end": "1057650"
  },
  {
    "text": "virtual address and these are the addresses at the rest of the file uses -",
    "start": "1057650",
    "end": "1063970"
  },
  {
    "text": "oops say we set the base address to the",
    "start": "1063970",
    "end": "1070309"
  },
  {
    "text": "virtual address which is odd offset twelve and a size for size an integer so we have an integer P section and as off",
    "start": "1070309",
    "end": "1077240"
  },
  {
    "text": "at twelve wasn't it yeah at twelve we set the size to again that's here",
    "start": "1077240",
    "end": "1086000"
  },
  {
    "text": "virtual size officer eight is an integer P section offset eight we now we",
    "start": "1086000",
    "end": "1091850"
  },
  {
    "text": "actually set the data now we now know the size of it so we will we will now",
    "start": "1091850",
    "end": "1097880"
  },
  {
    "text": "we're going to connect this which clears the memory to zero and the reason we're doing that is because the some times the",
    "start": "1097880",
    "end": "1104210"
  },
  {
    "text": "size of the the claimed size of the section is not actually the size of the raw data and we want it zero filled so",
    "start": "1104210",
    "end": "1111799"
  },
  {
    "text": "that we don't end up with garbage in our in our data and correct Priya zero fills",
    "start": "1111799",
    "end": "1116899"
  },
  {
    "text": "it we're then going to you get the ahve offset which is this",
    "start": "1116899",
    "end": "1122780"
  },
  {
    "text": "pointer to raw data here so that's offset 20 it's an integer so again we use our handy macro to get it what's it",
    "start": "1122780",
    "end": "1131930"
  },
  {
    "text": "opposite 20 and now we do a memory copy to copy that data into the area which is",
    "start": "1131930",
    "end": "1138920"
  },
  {
    "text": "allocated so the destination is the memory of dis allocated the source is",
    "start": "1138920",
    "end": "1145960"
  },
  {
    "text": "the offset who we've just read the ave offset and it's the offset into the entire file from the beginning of the",
    "start": "1145960",
    "end": "1152930"
  },
  {
    "text": "file which is why we've done it from P data and then we need to the size now",
    "start": "1152930",
    "end": "1158000"
  },
  {
    "text": "unfortunately for reasons I don't understand you have to take the minimum of the claimed ERV a size and the and",
    "start": "1158000",
    "end": "1166690"
  },
  {
    "text": "the size of the raw data it can be either one rather can be larger than",
    "start": "1166690",
    "end": "1172670"
  },
  {
    "text": "those so that's a offset a 16 okay so we've done the memory copy and now we",
    "start": "1172670",
    "end": "1178880"
  },
  {
    "text": "just connect up our link list so we say ah but where are we storing this stuff good question what we actually need to",
    "start": "1178880",
    "end": "1185810"
  },
  {
    "text": "do is keep a record of everything we've know about this file so I just happen to have a struct called T file so we'll",
    "start": "1185810",
    "end": "1194630"
  },
  {
    "text": "have a pointer to that now T file as you can say we have a pointer to all the r-va is and this is the head of the",
    "start": "1194630",
    "end": "1200720"
  },
  {
    "text": "linked list that we're about to generate I'll talk about the other stuff soon so",
    "start": "1200720",
    "end": "1205960"
  },
  {
    "text": "we need to allocate so we'll allocate one of these and now we can use that to",
    "start": "1205960",
    "end": "1216610"
  },
  {
    "text": "store our r.v A's so there's a IV over to next and this is just how it's going",
    "start": "1216610",
    "end": "1222140"
  },
  {
    "text": "at a linked list because we've collected it's the initial P file that prva s is",
    "start": "1222140",
    "end": "1227570"
  },
  {
    "text": "null so that's correct and then we just need to connect up the",
    "start": "1227570",
    "end": "1233590"
  },
  {
    "text": "linked list so we're doing is realistic in each section in the beginning of the",
    "start": "1233590",
    "end": "1239180"
  },
  {
    "text": "linked list so now we have loaded our sections good news right let's run that",
    "start": "1239180",
    "end": "1245240"
  },
  {
    "text": "instead of crashes coefficient it doesn't number section 3 we've loaded our sessions",
    "start": "1245240",
    "end": "1252490"
  },
  {
    "text": "so what next we've now kind of got our memory in a",
    "start": "1253940",
    "end": "1259020"
  },
  {
    "text": "way that we can now use it when later on we're told to go and read an RV a address we can now we now know our of",
    "start": "1259020",
    "end": "1266220"
  },
  {
    "start": "1260000",
    "end": "1620000"
  },
  {
    "text": "EA's go to the base addresses sorted out so now we need to move on so so far we",
    "start": "1266220",
    "end": "1272850"
  },
  {
    "text": "haven't done anything to do with with.net at all really we've just been filling around with memory and headers",
    "start": "1272850",
    "end": "1279140"
  },
  {
    "text": "but we're about to move on something where we are dealing with CLI things",
    "start": "1279140",
    "end": "1286320"
  },
  {
    "text": "because we get to this CLI header so the next thing we do is load and look out",
    "start": "1286320",
    "end": "1291600"
  },
  {
    "text": "this CLI header so the first of all question is how do we get the address of the CLI header it's in the file",
    "start": "1291600",
    "end": "1297330"
  },
  {
    "text": "somewhere and the way we do that is this entry here so offset 208 in the PE",
    "start": "1297330",
    "end": "1304950"
  },
  {
    "text": "header we have listener header now you",
    "start": "1304950",
    "end": "1310110"
  },
  {
    "text": "notice as 8 bytes long so what is this and the answer is touch up here each data entry contains the r-va",
    "start": "1310110",
    "end": "1316230"
  },
  {
    "text": "now that's what we've just been playing with that's why we need these RVs and the size so both those are four by tents",
    "start": "1316230",
    "end": "1321360"
  },
  {
    "text": "so basically the first four offset 208 the first four bytes is the r-va address and then the next four bytes is the size",
    "start": "1321360",
    "end": "1327690"
  },
  {
    "text": "we're going to ignore the size and just just read the r-va address so let's load",
    "start": "1327690",
    "end": "1334860"
  },
  {
    "text": "the CLI header so we'll have a pointer",
    "start": "1334860",
    "end": "1340440"
  },
  {
    "text": "oops pointer to the CLI header and now we need to load the RV address now how do",
    "start": "1340440",
    "end": "1345960"
  },
  {
    "text": "we do that well we're gonna write a method called let find fine RV a find",
    "start": "1345960",
    "end": "1352350"
  },
  {
    "text": "data so we give it the file this doesn't exist yet we're gonna write it in a moment what was it we wanted we wanted an",
    "start": "1352350",
    "end": "1359039"
  },
  {
    "text": "integer from the which header was it",
    "start": "1359039",
    "end": "1364340"
  },
  {
    "text": "data directory oh yes yes so that's actually part of this thing called the the PE is actually the optional header",
    "start": "1364340",
    "end": "1371549"
  },
  {
    "text": "yes one the section of this optional header says part of this optional header",
    "start": "1371549",
    "end": "1376789"
  },
  {
    "text": "so I'll head up at offset 208 yes okay",
    "start": "1379760",
    "end": "1385650"
  },
  {
    "text": "so now we need to go and write this RV a fine data method so we're going to be",
    "start": "1385650",
    "end": "1392370"
  },
  {
    "text": "returning a pointer and we need to take a tiff file reason me to file this because that's where the of EA's are",
    "start": "1392370",
    "end": "1398070"
  },
  {
    "text": "stored and then we have the address so what does this look like well we need to",
    "start": "1398070",
    "end": "1407960"
  },
  {
    "text": "whisk through this linked list so we start at the head it's a bit tedious",
    "start": "1408470",
    "end": "1414030"
  },
  {
    "text": "having to Codel this by hand but that was the promise of this talk come on",
    "start": "1414030",
    "end": "1420840"
  },
  {
    "text": "while you're doing that and then while prva doesn't get to the linked list i",
    "start": "1420840",
    "end": "1429690"
  },
  {
    "text": "can't type and if we can't find it we will just return now possibly we should crash I'm not quite sure",
    "start": "1429690",
    "end": "1435480"
  },
  {
    "text": "oh yes oh yes yes yes thank you as I",
    "start": "1435480",
    "end": "1442890"
  },
  {
    "text": "said I've done C for a while and this is a very simple comparison so if the",
    "start": "1442890",
    "end": "1448200"
  },
  {
    "text": "address is anywhere within the header we have to return the correct memory address that is kind of where that would",
    "start": "1448200",
    "end": "1453630"
  },
  {
    "text": "be so we just say if prva will say if address is greater or equal to prva base",
    "start": "1453630",
    "end": "1460890"
  },
  {
    "text": "address and address is less than the base address plus the size then we've",
    "start": "1460890",
    "end": "1470970"
  },
  {
    "text": "got the right one so then we return so we have to return the our VAP data but",
    "start": "1470970",
    "end": "1478080"
  },
  {
    "text": "then we have to return the correct offset so it's however far the address was into that structure",
    "start": "1478080",
    "end": "1486650"
  },
  {
    "text": "now I'm just going to make sure I get this right",
    "start": "1486650",
    "end": "1491570"
  },
  {
    "text": "right so we returned then we were this pointer macro which it gives us the",
    "start": "1495630",
    "end": "1500650"
  },
  {
    "text": "correct offset into here so it's a is the address - the base address of this",
    "start": "1500650",
    "end": "1508030"
  },
  {
    "text": "section okay so that that's done that's",
    "start": "1508030",
    "end": "1514960"
  },
  {
    "text": "good news so now we can load we've got the CLR header from the r-va now the next thing",
    "start": "1514960",
    "end": "1523059"
  },
  {
    "text": "to do is look in this CLI header and there's some interesting things in this",
    "start": "1523059",
    "end": "1530050"
  },
  {
    "text": "year I hit up that look very kind of starting to look familiar the kind of things that we'd expect",
    "start": "1530050",
    "end": "1535840"
  },
  {
    "text": "so major runtime version minor runtime version let's print those out so runtime",
    "start": "1535840",
    "end": "1545110"
  },
  {
    "text": "version and these are they're both",
    "start": "1545110",
    "end": "1553360"
  },
  {
    "text": "shorts they're offset four and six so we need short into the CLI header the",
    "start": "1553360",
    "end": "1560470"
  },
  {
    "text": "offset floor wasn't it yep before is the major version and six is the minor version so we'll just print out these",
    "start": "1560470",
    "end": "1566620"
  },
  {
    "text": "two things and let's run that and that's",
    "start": "1566620",
    "end": "1573910"
  },
  {
    "text": "about a header on the game and so that says",
    "start": "1573910",
    "end": "1579179"
  },
  {
    "text": "ah it's nothing at all so that means it's one we're certainly got a bug in our find our VA oh yes it's I know I did",
    "start": "1581410",
    "end": "1588730"
  },
  {
    "text": "if you go to that I made the elementary for mistake of forgetting to move on to",
    "start": "1588730",
    "end": "1593980"
  },
  {
    "text": "the next item in our link list right it's let's run that and they were a",
    "start": "1593980",
    "end": "1600220"
  },
  {
    "text": "runtime version 2.5 which I must MIT I'm a bit vague on runtime versions but it seems about right",
    "start": "1600220",
    "end": "1606360"
  },
  {
    "text": "what ah that comes later the other 4.0 you will",
    "start": "1607020",
    "end": "1612370"
  },
  {
    "text": "get there right so that's the runtime",
    "start": "1612370",
    "end": "1618160"
  },
  {
    "text": "version and yes that's the CLI version",
    "start": "1618160",
    "end": "1625420"
  },
  {
    "start": "1620000",
    "end": "1690000"
  },
  {
    "text": "which would be the 4.0 then ask me the semantics of that I didn't quite name",
    "start": "1625420",
    "end": "1630670"
  },
  {
    "text": "right so we've got the runtime version now this thing here the entry point",
    "start": "1630670",
    "end": "1636850"
  },
  {
    "text": "token now the entry point of a program is the usually the kind of where you start running the program so this looks",
    "start": "1636850",
    "end": "1642790"
  },
  {
    "text": "important what is a token we'll come to that later but for the moment we'll just we'll just record that now we all we",
    "start": "1642790",
    "end": "1651070"
  },
  {
    "text": "happen to have something to store this in our T filed a structure and it's just",
    "start": "1651070",
    "end": "1656320"
  },
  {
    "text": "an integer so we will use our normal method of reading integers and store",
    "start": "1656320",
    "end": "1665740"
  },
  {
    "text": "that into the T file structure so isn't it see I had her and it's offset is 20",
    "start": "1665740",
    "end": "1672160"
  },
  {
    "text": "and this an inch as I said so we'll do that and we'll just print it out because it's quite interesting entry point token",
    "start": "1672160",
    "end": "1681940"
  },
  {
    "text": "now we're going to print it as hex because that proves its interest",
    "start": "1681940",
    "end": "1688950"
  },
  {
    "start": "1690000",
    "end": "1892000"
  },
  {
    "text": "okay we're gonna run that so there we",
    "start": "1690250",
    "end": "1695450"
  },
  {
    "text": "are into point taken six lots of zeroes one now this this a token is something",
    "start": "1695450",
    "end": "1700850"
  },
  {
    "text": "about how net metadata is stored within the file and what comfortable will need",
    "start": "1700850",
    "end": "1706760"
  },
  {
    "text": "to come please a bit more or face soon but basically the the most significant byte which is the six tells you what",
    "start": "1706760",
    "end": "1714019"
  },
  {
    "text": "which table and will come to table soon which table this refers to and then the",
    "start": "1714019",
    "end": "1719510"
  },
  {
    "text": "other 24 bits are which entry in this table is it so its entry one in Table",
    "start": "1719510",
    "end": "1725120"
  },
  {
    "text": "six and we'll learn more about that very soon right so we've got an inch point",
    "start": "1725120",
    "end": "1732380"
  },
  {
    "text": "taken and now we need to move on to the actual what was called the metadata so",
    "start": "1732380",
    "end": "1738110"
  },
  {
    "text": "we have here an RV a and size two physical metadata now the metadata is literally everything about your program",
    "start": "1738110",
    "end": "1745519"
  },
  {
    "text": "is stored in what are called metadata tables so every method every type every parameter every field every everything",
    "start": "1745519",
    "end": "1751940"
  },
  {
    "text": "else you can think of they're storing metadata tables so what we're now going to do is load the metadata got a pointer",
    "start": "1751940",
    "end": "1758029"
  },
  {
    "text": "to the metadata header and then we will have to read through some of this metadata just enough that we can get",
    "start": "1758029",
    "end": "1764539"
  },
  {
    "text": "what we need to execute the wonderful exciting program we're trying to execute so the first thing we'll do is get a",
    "start": "1764539",
    "end": "1772039"
  },
  {
    "text": "pointer to the metadata so PMF later and",
    "start": "1772039",
    "end": "1778159"
  },
  {
    "text": "again if you look this isn't our VA so we use our our VA find data method that's our file and the address is right",
    "start": "1778159",
    "end": "1787340"
  },
  {
    "text": "is the offset eight into the CLI header so we see my header comma eight okay so",
    "start": "1787340",
    "end": "1795380"
  },
  {
    "text": "that's that loaded is that right no no",
    "start": "1795380",
    "end": "1800630"
  },
  {
    "text": "silly me I've forgotten to actually use these are macro right that's better",
    "start": "1800630",
    "end": "1806960"
  },
  {
    "text": "all right that should that should build go with sortie bugging yes was totally",
    "start": "1806960",
    "end": "1811970"
  },
  {
    "text": "buggin and they're done I think I've just done",
    "start": "1811970",
    "end": "1818900"
  },
  {
    "text": "this wrong yeah that's you been int okay right so that's now got a pointer to our",
    "start": "1818900",
    "end": "1823970"
  },
  {
    "text": "master data and we're going to exactly what the meta is very soon and now",
    "start": "1823970",
    "end": "1829610"
  },
  {
    "text": "because if we go down to this definition of metadata header which is nowhere is",
    "start": "1829610",
    "end": "1835220"
  },
  {
    "text": "this is this right here we are this is in section 24 so this is the this is the",
    "start": "1835220",
    "end": "1848900"
  },
  {
    "text": "metadata header and one thing that's worth showing here is this version and",
    "start": "1848900",
    "end": "1855050"
  },
  {
    "text": "this is the CLI version but this expects to run on so we can printf CLI version",
    "start": "1855050",
    "end": "1864140"
  },
  {
    "text": "so yes as a string and this fortunately is utf-8 we'll just assume it's ASCII",
    "start": "1864140",
    "end": "1870920"
  },
  {
    "text": "which it is in this case so that means we can just print it rightly it's a",
    "start": "1870920",
    "end": "1876620"
  },
  {
    "text": "minute of clips clips just made that the char star and we use our pointer macro",
    "start": "1876620",
    "end": "1883850"
  },
  {
    "text": "to just get an offset of 16 because that's where it is offset 16 into our",
    "start": "1883850",
    "end": "1890770"
  },
  {
    "text": "metadata hello and so now if we print if we run that right version 4.0 points 3",
    "start": "1890770",
    "end": "1898610"
  },
  {
    "start": "1892000",
    "end": "2059000"
  },
  {
    "text": "or 3/1 night now this is much more you may have seen that kind of number when you're playing with dotnet code so we",
    "start": "1898610",
    "end": "1905270"
  },
  {
    "text": "really are getting to stuff that's now much more familiar it's taking a while there's been quite a few kind of twisty paths but we're sort of getting there",
    "start": "1905270",
    "end": "1911600"
  },
  {
    "text": "that's good news okay however I have to tell you the most fiddly and annoying",
    "start": "1911600",
    "end": "1917300"
  },
  {
    "text": "bed is still to come but it won't take too long to get through it now the reason it's frilly and annoying is",
    "start": "1917300",
    "end": "1922640"
  },
  {
    "text": "because of reasons of making sure the file is as small as possible there's now a whole load of headers that just follow",
    "start": "1922640",
    "end": "1927830"
  },
  {
    "text": "sequentially after each other but they're all variable length and there's no indexing into them so unfortunately",
    "start": "1927830",
    "end": "1932960"
  },
  {
    "text": "we now do have to like do some nasty pointer arithmetic and just keep track of where we are in headers and all that",
    "start": "1932960",
    "end": "1938360"
  },
  {
    "text": "kind of stuff so I'll get through that as quickly as possible so hopefully in 10 minutes we should be through that but",
    "start": "1938360",
    "end": "1945470"
  },
  {
    "text": "it's quite interesting seeing the kind of stuff at these headers contain and well let's just do it and then we'll your see so we've just uh listen uh",
    "start": "1945470",
    "end": "1953440"
  },
  {
    "text": "right so here we are verbal link stuff the version is a variable length string so now you'll notice the offsets are not",
    "start": "1953440",
    "end": "1959299"
  },
  {
    "text": "just simple numbers they're now things like a 16 plus m 16 plus X plus X plus 2 noise kind of stuff so we now have to",
    "start": "1959299",
    "end": "1965869"
  },
  {
    "text": "kind of keep incrementing pointers to or offsets to keep track of where we are in strings so the first week you notice how",
    "start": "1965869",
    "end": "1972379"
  },
  {
    "text": "long was that version that version string and fortunately it tells us",
    "start": "1972379",
    "end": "1977840"
  },
  {
    "text": "offset 12 we have an integer that contains the links or that version string here's to see I had a still so",
    "start": "1977840",
    "end": "1983509"
  },
  {
    "text": "we'll get the version length by reading an integer into our metadata header",
    "start": "1983509",
    "end": "1988639"
  },
  {
    "text": "opposite 12 we will now keep track of an offset so this is an offset into all",
    "start": "1988639",
    "end": "1995509"
  },
  {
    "text": "these headers which we will initialize that 16 plus the version length and",
    "start": "1995509",
    "end": "2001090"
  },
  {
    "text": "that's because you'll notice that the variable length thing is at 16 we're gonna add the version length now",
    "start": "2001090",
    "end": "2006399"
  },
  {
    "text": "fortunately the version length already contain all these dealt with padding so",
    "start": "2006399",
    "end": "2011499"
  },
  {
    "text": "we don't thought about that so now we are here so offset now contains 16 plus",
    "start": "2011499",
    "end": "2017440"
  },
  {
    "text": "X we now need to know how many streams",
    "start": "2017440",
    "end": "2022570"
  },
  {
    "text": "are there now I'm not gonna I don't know why the cross streams particularly and very soon what you'll learn what this means so we know how many streams there",
    "start": "2022570",
    "end": "2029289"
  },
  {
    "text": "are and that's a 16 plus X plus 2 but OC suppose X is officer plus 2 so we're",
    "start": "2029289",
    "end": "2034389"
  },
  {
    "text": "gonna find the stream count so that's again it's a short because it yep that's",
    "start": "2034389",
    "end": "2039730"
  },
  {
    "text": "a 2-byte numbers as a short and we're p metadata and off set it off set passed",
    "start": "2039730",
    "end": "2046330"
  },
  {
    "text": "it to you it's let it print out our stream count just to make sure that it",
    "start": "2046330",
    "end": "2054669"
  },
  {
    "text": "looks sane okay oops it's not important but I'm",
    "start": "2054669",
    "end": "2061589"
  },
  {
    "start": "2059000",
    "end": "2265000"
  },
  {
    "text": "perfectionist okay and we run this and there should be five streams and there",
    "start": "2061589",
    "end": "2066658"
  },
  {
    "text": "are and there are essentially always five streams and we'll come on well actually I can quickly show you and the",
    "start": "2066659",
    "end": "2072270"
  },
  {
    "text": "streams are right stream header right",
    "start": "2072270",
    "end": "2077520"
  },
  {
    "text": "these are the streams strings heap the US and blob heaps that gooood heap and",
    "start": "2077520",
    "end": "2082858"
  },
  {
    "text": "the tilde stream which is by followers complicated in the most difficult to deal with but we have to we'll talk",
    "start": "2082859",
    "end": "2091378"
  },
  {
    "text": "about what are these streams are for in a moment we're only going to have to worry about the tilde stream and the strings heap right so for each stream",
    "start": "2091379",
    "end": "2098280"
  },
  {
    "text": "we're now going to increment the offset by four because as we lost track where",
    "start": "2098280",
    "end": "2105119"
  },
  {
    "text": "we were which farm where were we I think we're in here well me yes so that gives",
    "start": "2105119",
    "end": "2112859"
  },
  {
    "text": "us access to the streams headers which is what we now need to do through the",
    "start": "2112859",
    "end": "2119010"
  },
  {
    "text": "each stream has a header that we're now going to read to find out what stream it is and where the data is associated with",
    "start": "2119010",
    "end": "2124740"
  },
  {
    "text": "that stream in the file so we are literally going to for loop through each",
    "start": "2124740",
    "end": "2131270"
  },
  {
    "text": "stream okay so we need to find the",
    "start": "2131270",
    "end": "2139140"
  },
  {
    "text": "stream offset and in the header here you can see the offset is offset zero and it's an integer so we read an integer",
    "start": "2139140",
    "end": "2145970"
  },
  {
    "text": "from the metadata whatever offset we've now got to the next thing is the stream",
    "start": "2145970",
    "end": "2151920"
  },
  {
    "text": "size we ask you don't care about that not gonna verify our stream is maintaining the size but we will just",
    "start": "2151920",
    "end": "2157470"
  },
  {
    "text": "read it because it's quite nice just print it out so we can just check that everything looks the same so it's offset",
    "start": "2157470",
    "end": "2165089"
  },
  {
    "text": "plus four we now need the stream name which is",
    "start": "2165089",
    "end": "2170190"
  },
  {
    "text": "here it's a name of the stream as null terminator variable length array of ascii characters and pathogen later for",
    "start": "2170190",
    "end": "2176250"
  },
  {
    "text": "like the boundary with nulls so we get a stream name char pointer which is in the",
    "start": "2176250",
    "end": "2184200"
  },
  {
    "text": "metadata which is just pointer offset plus 8 because that's a off state right and now we write and now we",
    "start": "2184200",
    "end": "2197640"
  },
  {
    "text": "actually want to get so the stream offset we have here this integer this is an offset into the from the metadata",
    "start": "2197640",
    "end": "2204630"
  },
  {
    "text": "header of where the actual stream dat reeze so let's get a pointer to that so",
    "start": "2204630",
    "end": "2209700"
  },
  {
    "text": "stream this is call it a stream and it's a pointer so we it's based on the",
    "start": "2209700",
    "end": "2215250"
  },
  {
    "text": "metadata pointer but it's a stream offset bytes past the beginning of the",
    "start": "2215250",
    "end": "2221010"
  },
  {
    "text": "message ID head okay we now need to increment our offset for the next cycle around the loop and then we'll actually",
    "start": "2221010",
    "end": "2226230"
  },
  {
    "text": "look at these these values now the offset increment is a pain it's the 8 bytes of these two things plus its",
    "start": "2226230",
    "end": "2232110"
  },
  {
    "text": "variable length thing here so 8 plus the padding so 8 plus and we get the length",
    "start": "2232110",
    "end": "2239460"
  },
  {
    "text": "the I know strings unsafe I don't care will get the length of the string we add",
    "start": "2239460",
    "end": "2245070"
  },
  {
    "text": "for for padding and then we end it by the negation of 3 and that that does the",
    "start": "2245070",
    "end": "2251940"
  },
  {
    "text": "padding correctly so that it pads it out to 4 bytes so that's that that's our",
    "start": "2251940",
    "end": "2257340"
  },
  {
    "text": "loop will now loop through all the streams and let's just print out what stream as we found so we have a stream",
    "start": "2257340",
    "end": "2266790"
  },
  {
    "start": "2265000",
    "end": "2525000"
  },
  {
    "text": "name and we should find that these stream names here hash good hash us has",
    "start": "2266790",
    "end": "2272790"
  },
  {
    "text": "probably things now we found those streams hopefully if we've got our pointers right we have looking at we",
    "start": "2272790",
    "end": "2278790"
  },
  {
    "text": "found all the correct streams as expected victory it may feel like a small victory but we are getting there",
    "start": "2278790",
    "end": "2285960"
  },
  {
    "text": "whoo good news right say what are we",
    "start": "2285960",
    "end": "2290970"
  },
  {
    "text": "going to do with these streams well we have treating me differently so we will now do a if a nice stroke accomplished",
    "start": "2290970",
    "end": "2296760"
  },
  {
    "text": "again is unsafe thing care if if a street name is now unfortunately have I",
    "start": "2296760",
    "end": "2302190"
  },
  {
    "text": "got my keyboard map correct I have good we're gonna have to do with this tilde stream now this is one that contains all",
    "start": "2302190",
    "end": "2308550"
  },
  {
    "text": "what I called the metadata tables",
    "start": "2308550",
    "end": "2311750"
  },
  {
    "text": "right so the question is what are metadata tables well let's go to the",
    "start": "2314950",
    "end": "2320300"
  },
  {
    "text": "documentation right here so this is the",
    "start": "2320300",
    "end": "2325340"
  },
  {
    "text": "definition of all what are called metadata logical format tables so",
    "start": "2325340",
    "end": "2330440"
  },
  {
    "text": "there's a whole lot of things in here some of which will you can kind of think oh yeah I can see why that would be",
    "start": "2330440",
    "end": "2335599"
  },
  {
    "text": "needed in in in add on there that's cute for so some obvious ones method def this is a method definition so let's just go",
    "start": "2335599",
    "end": "2342320"
  },
  {
    "text": "and look at the details of what this actually contains it contains an RV a now to what you might ask well if we",
    "start": "2342320",
    "end": "2350270"
  },
  {
    "text": "just whizzed down here it tells us so it seriously r-va here we are know if our",
    "start": "2350270",
    "end": "2357470"
  },
  {
    "text": "v8 cause Norton either was an option I said 12 a does not equal naught and let me to me it's bigger then RV a shall",
    "start": "2357470",
    "end": "2365960"
  },
  {
    "text": "point to the sill code stream in this file yes finally we found some il-2 it's cute",
    "start": "2365960",
    "end": "2373040"
  },
  {
    "text": "we have initially found it yet but we now have that we're reading the right documentation so this is really good",
    "start": "2373040",
    "end": "2378380"
  },
  {
    "text": "news so back up to what else here there's some flags there's more flags",
    "start": "2378380",
    "end": "2384589"
  },
  {
    "text": "there's a name and yes that really is the name of the method and then there's",
    "start": "2384589",
    "end": "2389810"
  },
  {
    "text": "what's called a signature now the signature is everything apart from the name that defines its method so it's like what the return type is what the",
    "start": "2389810",
    "end": "2396410"
  },
  {
    "text": "premise types are any generic constraints all that and stuff we're not going to care about signatures at all in",
    "start": "2396410",
    "end": "2401420"
  },
  {
    "text": "what we're doing today and then it contains an entry into the parameters so that you can find out about the",
    "start": "2401420",
    "end": "2406910"
  },
  {
    "text": "parameters like the names the parameters the types all that kinda stuff and the order of the parameters right so how do",
    "start": "2406910",
    "end": "2416869"
  },
  {
    "text": "you load these tables we do it by going",
    "start": "2416869",
    "end": "2422300"
  },
  {
    "text": "and looking at the documentation yet again where were we that's about a",
    "start": "2422300",
    "end": "2429220"
  },
  {
    "text": "stream right hit the tilde stream yes so this is the so the data we've got for",
    "start": "2429220",
    "end": "2434540"
  },
  {
    "text": "the toda stream points to this structure and we don't care about any of this apart from the first thing we care about",
    "start": "2434540",
    "end": "2440810"
  },
  {
    "text": "is valid so they can be up to 64 table valid is an 8 byte 64 bit number and",
    "start": "2440810",
    "end": "2446720"
  },
  {
    "text": "it's just a bit for old saying which tables are valid in this particular file so they've me up to 64 tables in this father will be nowhere",
    "start": "2446720",
    "end": "2453230"
  },
  {
    "text": "near suitable so we need to go through this bit field finding out which tables are valid and then the first minute is",
    "start": "2453230",
    "end": "2458480"
  },
  {
    "text": "find out the length of all these tables and as you can see this entry down here",
    "start": "2458480",
    "end": "2464180"
  },
  {
    "text": "tables this is the sequence of physical tables but who actually contains its first of all it contains a list of all the lengths of valid tables then it",
    "start": "2464180",
    "end": "2470119"
  },
  {
    "text": "contains the actual date in the tables so the first we have to do is find out all the links for the tables which we",
    "start": "2470119",
    "end": "2475700"
  },
  {
    "text": "will do so long long valid so we first will read that valid header which is a",
    "start": "2475700",
    "end": "2482240"
  },
  {
    "text": "long long which doesn't see it that's how you do a suitable bit number there's probably other ways but this is one way",
    "start": "2482240",
    "end": "2487640"
  },
  {
    "text": "and that's what officer ate there it is we then have to get a pointer to a row",
    "start": "2487640",
    "end": "2496609"
  },
  {
    "text": "counter pointer so as I said the first thing it contains is the length of the",
    "start": "2496609",
    "end": "2502520"
  },
  {
    "text": "tables which is a officer at 24 so we go find a pointed officer 24 and we have they're all in the length of the tables",
    "start": "2502520",
    "end": "2508460"
  },
  {
    "text": "so we use int and now we have a for loop through so we'll have a couple of variables here we'll start j at 1 which",
    "start": "2508460",
    "end": "2515240"
  },
  {
    "text": "is the bit I was counting how many bits and J is the the bit mask so you cyclist",
    "start": "2515240",
    "end": "2527660"
  },
  {
    "start": "2525000",
    "end": "2615000"
  },
  {
    "text": "here and we say if valid and J so it means if this is a valid table then we",
    "start": "2527660",
    "end": "2535250"
  },
  {
    "text": "record something about it so in the pay file but also had an entry for these tables which is a 64-bit assist for",
    "start": "2535250",
    "end": "2540710"
  },
  {
    "text": "entry array of counts and pointers so we in this sort of live through we set the",
    "start": "2540710",
    "end": "2547490"
  },
  {
    "text": "count and the count is wherever the integer the road count pointer is pointing to and then we have to",
    "start": "2547490",
    "end": "2553339"
  },
  {
    "text": "increment the row counter but only for valid tables now you might say if you don't see doing a plus equals one",
    "start": "2553339",
    "end": "2559280"
  },
  {
    "text": "doesn't encumbered amount by two increments it by one or whatever it's pointing to and I said we're pointer in so that's going to increment it by four",
    "start": "2559280",
    "end": "2564859"
  },
  {
    "text": "bytes so that's now got the length that's good news and now we actually",
    "start": "2564859",
    "end": "2570589"
  },
  {
    "text": "laid the data so we have table data because Piro counter because the table",
    "start": "2570589",
    "end": "2577010"
  },
  {
    "text": "eight starts where the row counter the row entry is finish or print something out we'll print that",
    "start": "2577010",
    "end": "2582210"
  },
  {
    "text": "we've know he's going to print out as he as we load each table we're going to print out something about it so we'll just print out that start with lesson",
    "start": "2582210",
    "end": "2591150"
  },
  {
    "text": "six four again it can be up suitable tables so we cycle through your suit four times we look in our previously",
    "start": "2591150",
    "end": "2597420"
  },
  {
    "text": "stored area to find out how many rows there are in each table and if count",
    "start": "2597420",
    "end": "2604140"
  },
  {
    "text": "does not equal naught then we need to load this table so first of all we look",
    "start": "2604140",
    "end": "2609299"
  },
  {
    "text": "at the table size which is right there just how many bytes each entry in the",
    "start": "2609299",
    "end": "2615150"
  },
  {
    "text": "table takes now this is I've had a bit of a shortcut here because if you go and look at some of these definitions of",
    "start": "2615150",
    "end": "2622910"
  },
  {
    "text": "method def example this is what's in the table so we have a four byte constant a 2-byte flag another two by flag and then",
    "start": "2622910",
    "end": "2629549"
  },
  {
    "text": "a name it doesn't tell you how many bytes it is why would they do that and the answer is is because it's variable but it's variable in a very",
    "start": "2629549",
    "end": "2637289"
  },
  {
    "text": "constrained way so it's either 16 or 32 bits depending on how many entries are in this table so if there are more than",
    "start": "2637289",
    "end": "2644729"
  },
  {
    "text": "2 to the 16 entries it'll be a 32 bit it's as fewer it'll be 16 bit we're only",
    "start": "2644729",
    "end": "2650369"
  },
  {
    "text": "dealing with small files so they're always going to be 16 bits in this case so I've hard coded 16 bits you can't do",
    "start": "2650369",
    "end": "2656249"
  },
  {
    "text": "that in a real a real system but that means that I know at compile time the",
    "start": "2656249",
    "end": "2662009"
  },
  {
    "text": "size of all my tables or so I've just stuck those in an array and that was one of the arrays I showed you the beginning I said it's important these are right so",
    "start": "2662009",
    "end": "2668579"
  },
  {
    "text": "that's the table size right we're then going to allocate some we're going to",
    "start": "2668579",
    "end": "2675329"
  },
  {
    "text": "allocate some memory to store the right",
    "start": "2675329",
    "end": "2682890"
  },
  {
    "text": "we need a pointer for each entry in the table and we're going to do a plus 1 because the table tokens have 1 based",
    "start": "2682890",
    "end": "2689940"
  },
  {
    "text": "indexing not zero based so it's quite handy just to know if to worry about that and we'll set the first entry the",
    "start": "2689940",
    "end": "2697049"
  },
  {
    "text": "0th entry to null right we now need to go through each item in the table",
    "start": "2697049",
    "end": "2705150"
  },
  {
    "text": "and copy it to the right place now you might ask why doing this tool why didn't we just not copy it anywhere and the",
    "start": "2705150",
    "end": "2712920"
  },
  {
    "text": "answer is that we need to throw a little bit of extra information along with each item in the table so we unfortunately we",
    "start": "2712920",
    "end": "2717960"
  },
  {
    "text": "need to have somewhere to store the extra information there our first words are doing it I chose to do this way now",
    "start": "2717960",
    "end": "2723150"
  },
  {
    "text": "the prefix is that very is the extra information we want to store so we need",
    "start": "2723150",
    "end": "2728999"
  },
  {
    "text": "to allocate something that's got the size the prefix plus the table size",
    "start": "2728999",
    "end": "2735089"
  },
  {
    "text": "which is the size of a changing the table and then we're just going to set the the only thing we actually want to",
    "start": "2735089",
    "end": "2740249"
  },
  {
    "text": "know is the file that this table entry came from so we store that in the prefix",
    "start": "2740249",
    "end": "2745970"
  },
  {
    "text": "and then we have to memory copy now",
    "start": "2745970",
    "end": "2751230"
  },
  {
    "text": "again P plus 1 that just skips past however large the prefix is and then our",
    "start": "2751230",
    "end": "2757950"
  },
  {
    "text": "tape table data is our incrementing pointer of where we are throughout this mess data and you copy the table size so",
    "start": "2757950",
    "end": "2766529"
  },
  {
    "text": "that's good that's done we then oops we",
    "start": "2766529",
    "end": "2772619"
  },
  {
    "text": "then set so we've got an array that",
    "start": "2772619",
    "end": "2779999"
  },
  {
    "text": "contain all the pointers of its data so now set that to prefix it's not just a prefix it contains the prefix plus all",
    "start": "2779999",
    "end": "2786480"
  },
  {
    "text": "the data it's just and then we need to increment our table data pointer it's a",
    "start": "2786480",
    "end": "2792660"
  },
  {
    "text": "void pointers if we can't add to it and what we need to do is add on the size of",
    "start": "2792660",
    "end": "2797940"
  },
  {
    "text": "this particular table so that's done so we've now loaded all our data and we",
    "start": "2797940",
    "end": "2803519"
  },
  {
    "text": "will triumphantly print out the fact that we have loaded table ID whatever",
    "start": "2803519",
    "end": "2812869"
  },
  {
    "text": "and we will show how many entries we have in each table so it stabilizes I",
    "start": "2812869",
    "end": "2821009"
  },
  {
    "text": "from the outer loop here that we're iterating over and it's count which was how many entries we have now if it's all",
    "start": "2821009",
    "end": "2826980"
  },
  {
    "start": "2825000",
    "end": "3165000"
  },
  {
    "text": "correct and this is where it could have been horribly wrong because there's a lot of point free stuff no but there we are so we've loaded those tables and that",
    "start": "2826980",
    "end": "2833910"
  },
  {
    "text": "tells you how many entries are off so just quickly Table six is the method death table and you can see we've got two entries in",
    "start": "2833910",
    "end": "2840210"
  },
  {
    "text": "our method death that means within the hello world program that we compiled using the c-track compiler we have two",
    "start": "2840210",
    "end": "2846090"
  },
  {
    "text": "methods you might say two methods how can that be there's only one method in your program",
    "start": "2846090",
    "end": "2852300"
  },
  {
    "text": "but of course this is a non-static class so the compiler has also generated a",
    "start": "2852300",
    "end": "2858180"
  },
  {
    "text": "constructor for us that's the other method so when it says method def it literally means it doesn't just mean",
    "start": "2858180",
    "end": "2864990"
  },
  {
    "text": "what we think of as methods it also means constructors and static constructors or class constructors well",
    "start": "2864990",
    "end": "2872360"
  },
  {
    "text": "yes running out of time so I'm not gonna do that and we still haven't actually",
    "start": "2872360",
    "end": "2878490"
  },
  {
    "text": "any code right so but this is really good news so we've done we're done we can now return our file somebody's going",
    "start": "2878490",
    "end": "2886080"
  },
  {
    "text": "to change the signature of this method to return a T file pointer and we need",
    "start": "2886080",
    "end": "2892410"
  },
  {
    "text": "to store the file oh we have loaded a",
    "start": "2892410",
    "end": "2899340"
  },
  {
    "text": "file yes we now have 12 minutes left to execute something in this file but the",
    "start": "2899340",
    "end": "2905730"
  },
  {
    "text": "good news is that was the hardest bit of this by a long way so now we really can",
    "start": "2905730",
    "end": "2910830"
  },
  {
    "text": "get on to more interesting things although that was quite interesting I thought it's not uninteresting now",
    "start": "2910830",
    "end": "2917000"
  },
  {
    "text": "organize all my paperwork here I did take the low-tech solution of printing out the actual code so I wouldn't have",
    "start": "2917000",
    "end": "2924450"
  },
  {
    "text": "to remember every single every single bit as I was going along right remember we loaded an entry point token that",
    "start": "2924450",
    "end": "2933120"
  },
  {
    "text": "tells us what method we need to run first so we need to load an entry point",
    "start": "2933120",
    "end": "2942090"
  },
  {
    "text": "load the entry point method so we will",
    "start": "2942090",
    "end": "2947460"
  },
  {
    "text": "do that now remember I'll show you the method death stuff so this is a type I pre rope just",
    "start": "2947460",
    "end": "2953790"
  },
  {
    "text": "to represent that method def stuff so we all have entry point method Def and we",
    "start": "2953790",
    "end": "2961620"
  },
  {
    "text": "will call a method that doesn't yet exist cool get method by token and we'll pass it the file that contains oh if I",
    "start": "2961620",
    "end": "2968700"
  },
  {
    "text": "know they do that sorry we'll pass it the entry point o in obedience right yes I",
    "start": "2968700",
    "end": "2974310"
  },
  {
    "text": "mean you pass it the file and the token right so let's write this method you're",
    "start": "2974310",
    "end": "2981870"
  },
  {
    "text": "gonna be returning one of them whoops",
    "start": "2981870",
    "end": "2986900"
  },
  {
    "text": "pointer to it so we have a T file let me have a method token so how's this gonna",
    "start": "2986900",
    "end": "2995910"
  },
  {
    "text": "work well we need to find which need to load the right table entry for this token now a method token we've looked a",
    "start": "2995910",
    "end": "3002390"
  },
  {
    "text": "method death but there's also another way of referencing methods called method ref which is where you want to reference a method that is not in your dll and",
    "start": "3002390",
    "end": "3009800"
  },
  {
    "text": "obviously you can't doubt the method def because you don't have il for it so there's another way there's another table called method ref that we're not",
    "start": "3009800",
    "end": "3017300"
  },
  {
    "text": "going to use but the token could be a method ref talker not a method depth",
    "start": "3017300",
    "end": "3022880"
  },
  {
    "text": "akin so what we do is we're going to extract the table ID from the method",
    "start": "3022880",
    "end": "3027890"
  },
  {
    "text": "token and then if it is a table ID method def which is 6 then we can just",
    "start": "3027890",
    "end": "3035600"
  },
  {
    "text": "return now this this macro is or it does",
    "start": "3035600",
    "end": "3043310"
  },
  {
    "text": "it just it just goes to the correct end table in the file and and gets me there",
    "start": "3043310",
    "end": "3051380"
  },
  {
    "text": "already loaded method def in this case from there and then of course if that's wrong we'll just crash because I can't",
    "start": "3051380",
    "end": "3059210"
  },
  {
    "text": "deal with it we'll say return null because the compiler complains if you don't return for a method okay so now we've we've",
    "start": "3059210",
    "end": "3064760"
  },
  {
    "text": "loaded that method check it build if I made a mistake I've made a mistake",
    "start": "3064760",
    "end": "3070250"
  },
  {
    "text": "I'm like I'm wrong",
    "start": "3070250",
    "end": "3072970"
  },
  {
    "text": "it's all good no errors so that's great",
    "start": "3083100",
    "end": "3088690"
  },
  {
    "text": "so what we can now print the name of this method which is quite quite nice an entry point method name right so we have",
    "start": "3088690",
    "end": "3100510"
  },
  {
    "text": "our P entry method F and look we have a name name index what does that mean it",
    "start": "3100510",
    "end": "3107590"
  },
  {
    "text": "means remember the streams we were talking about earlier when we loaded the file it means it's an index into the hash",
    "start": "3107590",
    "end": "3113440"
  },
  {
    "text": "strings stream so to read that we will",
    "start": "3113440",
    "end": "3118680"
  },
  {
    "text": "[Music] use another macro called get string",
    "start": "3118680",
    "end": "3123690"
  },
  {
    "text": "where we passed the file we pass at the offset and that will give us the correct",
    "start": "3123690",
    "end": "3130180"
  },
  {
    "text": "pointer trial point about which points there is now conveniently these are utf-8 strings at a null terminated in",
    "start": "3130180",
    "end": "3135220"
  },
  {
    "text": "the file so we can just reference already utf-8 we'll pretend they're asking now it won't work because we",
    "start": "3135220",
    "end": "3141310"
  },
  {
    "text": "didn't actually do with the string stream here so what do that now so if",
    "start": "3141310",
    "end": "3147490"
  },
  {
    "text": "the stream name equals or was it hash strings and equals naught means equal",
    "start": "3147490",
    "end": "3155140"
  },
  {
    "text": "then we'll do in the P file has a P strings pointer so we'll just do that so",
    "start": "3155140",
    "end": "3162160"
  },
  {
    "text": "now we've recorded by the string stream styles in the kind of file data now if I",
    "start": "3162160",
    "end": "3167530"
  },
  {
    "start": "3165000",
    "end": "3345000"
  },
  {
    "text": "run this you should print out the name of our entry method and it does main how",
    "start": "3167530",
    "end": "3172570"
  },
  {
    "text": "about that and look look it really was called main you take all",
    "start": "3172570",
    "end": "3182680"
  },
  {
    "text": "this for granted okay good right so well",
    "start": "3182680",
    "end": "3191530"
  },
  {
    "text": "next we are so close to executing code so we have the entry point method loaded",
    "start": "3191530",
    "end": "3197770"
  },
  {
    "text": "we've got a reference to the method def for it so what means do now what we need to do now is when you execute code you",
    "start": "3197770",
    "end": "3203800"
  },
  {
    "text": "have to execute that on some kind of state that keeps track of things like where you are in the code in fact that's",
    "start": "3203800",
    "end": "3209230"
  },
  {
    "text": "all you track off to the moment so we're going to call a method would create method state and this is",
    "start": "3209230",
    "end": "3216330"
  },
  {
    "text": "going to create message state for this entry point method that we've that we've",
    "start": "3216330",
    "end": "3227670"
  },
  {
    "text": "just loaded so we need to define this",
    "start": "3227670",
    "end": "3232860"
  },
  {
    "text": "method earlier obviously return something in a moment we'll worry about that in a moment TM DF",
    "start": "3232860",
    "end": "3238290"
  },
  {
    "text": "method death beam method death right so",
    "start": "3238290",
    "end": "3244680"
  },
  {
    "text": "what it means to create a method state so the method state right we need to have a type a struct which is our method",
    "start": "3244680",
    "end": "3252930"
  },
  {
    "text": "state and what we gonna need we're going to need a pointer to the il we're going",
    "start": "3252930",
    "end": "3258660"
  },
  {
    "text": "to need an instruction pointer that's an offset into the il of where we are and",
    "start": "3258660",
    "end": "3264330"
  },
  {
    "text": "possibly that's what we need we need locals John says you haven't got any",
    "start": "3264330",
    "end": "3270270"
  },
  {
    "text": "locals who cares about make rules we'd also keep a reference to the file",
    "start": "3270270",
    "end": "3276060"
  },
  {
    "text": "which I think we might need later okay shop there isn't much later to going but and we'll just time death that",
    "start": "3276060",
    "end": "3284030"
  },
  {
    "text": "okay so this is actually going to return a tea method state pointer so first of",
    "start": "3287230",
    "end": "3295070"
  },
  {
    "text": "all we'll create method staked point method state tema third estate because T",
    "start": "3295070",
    "end": "3305030"
  },
  {
    "text": "my handy McCrae to create one of them",
    "start": "3305030",
    "end": "3311380"
  },
  {
    "text": "okay so how do we how do we how do we load this stuff that's a good question",
    "start": "3311380",
    "end": "3317090"
  },
  {
    "text": "and let me just double check how to do that okay so we have to go through a",
    "start": "3317090",
    "end": "3329000"
  },
  {
    "text": "thing called the aisle header now fortunately if you're thinking oh no not another header it's a very simple item",
    "start": "3329000",
    "end": "3338260"
  },
  {
    "text": "so in the file we look up the IP address of the OVA which has to be discovered",
    "start": "3338260",
    "end": "3344690"
  },
  {
    "text": "earlier is the address of the il header now the aisle header right this is the",
    "start": "3344690",
    "end": "3359420"
  },
  {
    "text": "aisle header there are two types of aisle header a tiny one or a fact one so I get unfortunate naming we're only",
    "start": "3359420",
    "end": "3366170"
  },
  {
    "text": "gonna have to do with a tiny header which is just 1 byte long and in fact I'm not even going to check that it is the tiny header I promise you it is so",
    "start": "3366170",
    "end": "3373630"
  },
  {
    "text": "method state pil is simply one byte after the I our head that's right one",
    "start": "3373630",
    "end": "3388600"
  },
  {
    "text": "excellent and in fact that's all we need to do we collect it so the instruction",
    "start": "3388600",
    "end": "3395030"
  },
  {
    "text": "pointer is already 0 so we can just return that method I mistake so that's good so we have a method state when able",
    "start": "3395030",
    "end": "3401390"
  },
  {
    "text": "to store that tea method state equals great a mess state and now",
    "start": "3401390",
    "end": "3409040"
  },
  {
    "text": "we can execute it so we execute tea",
    "start": "3409040",
    "end": "3417740"
  },
  {
    "text": "method state ok how do you execute il",
    "start": "3417740",
    "end": "3427340"
  },
  {
    "text": "well and this is an interpretive runtime so all we do we just read it up codes",
    "start": "3427340",
    "end": "3433250"
  },
  {
    "text": "execute them one at a time so we have an infinite loop to go through the opcodes",
    "start": "3433250",
    "end": "3440180"
  },
  {
    "text": "we load an opcode right so this is an",
    "start": "3440180",
    "end": "3445940"
  },
  {
    "text": "unsigned char we're loading it for now I'm trying to create a quick pointer straight to the il that that's immutable",
    "start": "3445940",
    "end": "3454700"
  },
  {
    "text": "so we can just get a copy of that easily enough any won't change and then the",
    "start": "3454700",
    "end": "3460160"
  },
  {
    "text": "offset is the instruction point to the construction point so let's just print out what we've now we're gonna print",
    "start": "3460160",
    "end": "3467270"
  },
  {
    "text": "this out as a two digit hex and here we have your code and then what we're gonna",
    "start": "3467270",
    "end": "3473450"
  },
  {
    "text": "do is have a big switch a small switch statement on the opcode which of course",
    "start": "3473450",
    "end": "3480890"
  },
  {
    "text": "by default it will just crash and say cannot yet execute opcode okay slight duplication",
    "start": "3480890",
    "end": "3491330"
  },
  {
    "text": "there but nevermind okay so let's run this",
    "start": "3491330",
    "end": "3497200"
  },
  {
    "text": "I'm not thinking my linter down there oh",
    "start": "3497300",
    "end": "3503720"
  },
  {
    "text": "sorry nope e-file is just a tea farm pick file we don't need file oh that's what you",
    "start": "3504530",
    "end": "3521460"
  },
  {
    "text": "mean yes thank you thank you thank you that should be a pee method great oh no",
    "start": "3521460",
    "end": "3531210"
  },
  {
    "text": "it's prefix P file oh come on come on prefix doc P far there we are okay does",
    "start": "3531210",
    "end": "3537390"
  },
  {
    "text": "that build it builds does it run it runs Oh except it doesn't print all over them",
    "start": "3537390",
    "end": "3543780"
  },
  {
    "text": "Oh - thanks right try to get them I'm",
    "start": "3543780",
    "end": "3552210"
  },
  {
    "text": "still running right run and how about that we can't ask you top code to a what",
    "start": "3552210",
    "end": "3559260"
  },
  {
    "text": "is OP code to a yeah we to ask me we like within one minute of finishing so",
    "start": "3559260",
    "end": "3565470"
  },
  {
    "text": "okay to a is if we get a I or spy where I've conveniently already laid this main method so we're going to get the ellipse",
    "start": "3565470",
    "end": "3571320"
  },
  {
    "text": "and all that we're gonna look at the IRS c-sharp and you notice just one instruction return which is o X 2 a so",
    "start": "3571320",
    "end": "3579450"
  },
  {
    "text": "and that's defined here and then it's to",
    "start": "3579450",
    "end": "3584550"
  },
  {
    "text": "find it in the documentation here you can see ret hasn't opcode to a so we",
    "start": "3584550",
    "end": "3593970"
  },
  {
    "text": "will make it so we can execute to a",
    "start": "3593970",
    "end": "3599630"
  },
  {
    "text": "and what you do with return you return",
    "start": "3601190",
    "end": "3606910"
  },
  {
    "text": "so ladies and gentlemen I present to you a fully running Il interpreter from",
    "start": "3607180",
    "end": "3615589"
  },
  {
    "text": "scratch thank you thank you that was",
    "start": "3615589",
    "end": "3626809"
  },
  {
    "text": "quite intense but I hope it demonstrates to you that this stuff which we",
    "start": "3626809",
    "end": "3632539"
  },
  {
    "text": "completed for granted we don't normally know or care how it works but actually",
    "start": "3632539",
    "end": "3637549"
  },
  {
    "text": "it's not that complicated you can count it up in an hour as I've just demonstrated and although the only",
    "start": "3637549",
    "end": "3643819"
  },
  {
    "text": "instruction we can currently execute is return it actually it's a shame we didn't have another ten minutes because",
    "start": "3643819",
    "end": "3649010"
  },
  {
    "text": "we had it's surprisingly easy now to get a subset of SIL executing like all the",
    "start": "3649010",
    "end": "3655970"
  },
  {
    "text": "automatic stuff for integers it's just trivial completely trivial the next thing I was actually if we had like two",
    "start": "3655970",
    "end": "3662270"
  },
  {
    "text": "more minutes I would have shown just returning an exit code from a program which the mint would have loaded a",
    "start": "3662270",
    "end": "3667730"
  },
  {
    "text": "constant integer and returned it and then got out at the end and we could have displayed our AC code so it's not a",
    "start": "3667730",
    "end": "3674720"
  },
  {
    "text": "complicated however having said all that because we've ignored so much like we don't have a type system at all let",
    "start": "3674720",
    "end": "3681619"
  },
  {
    "text": "alone one that can handle generics we don't have a heap at all you can't load other assemblies at all so all this",
    "start": "3681619",
    "end": "3689869"
  },
  {
    "text": "stuff is actually it does build up the complexity but it is completely possible",
    "start": "3689869",
    "end": "3694940"
  },
  {
    "text": "for one person to write a pretty complete il interpreted runtime in a few",
    "start": "3694940",
    "end": "3702559"
  },
  {
    "text": "months and I know that because I did it a few years ago it's never been used oh well no was used as it was used as a",
    "start": "3702559",
    "end": "3707960"
  },
  {
    "text": "prototype and then if I come across blazer which is this new c-sharp and a browser thing so their prototype used my",
    "start": "3707960",
    "end": "3713829"
  },
  {
    "text": "runtime in their prototype they don't use anymore but it was quite satisfying they did initially say thank you very",
    "start": "3713829",
    "end": "3720680"
  },
  {
    "text": "much for coming if you want to talk about anything including questioning my sanity then do come and talk to me at the end",
    "start": "3720680",
    "end": "3726950"
  },
  {
    "text": "thank you very much for coming [Applause]",
    "start": "3726950",
    "end": "3732419"
  }
]