[
  {
    "text": "still morning right just barely how are we I hope you're enjoying this NDC event",
    "start": "120",
    "end": "6629"
  },
  {
    "text": "I am so happy that NDC has come to the United States I've been doing NDC events for years in Europe and I always thought",
    "start": "6629",
    "end": "13290"
  },
  {
    "text": "they were one of the best conferences around so I was really happy and honored to be part of this event so today's",
    "start": "13290",
    "end": "19439"
  },
  {
    "text": "topic is an opinionated opinionated approach to asp.net core this is basically where I sat down after a",
    "start": "19439",
    "end": "25590"
  },
  {
    "text": "couple code reviews and said you know we're doing some interesting things in these projects I'd like to jot down some",
    "start": "25590",
    "end": "32099"
  },
  {
    "text": "ideas of things that we've done right and things that we've done wrong and I came up with a list of something like 61",
    "start": "32099",
    "end": "37350"
  },
  {
    "text": "items and I thought well if I can cut it down to an even 50 maybe I could make a conference talk out of it so that's what",
    "start": "37350",
    "end": "43620"
  },
  {
    "text": "you're going to hear today we're going to cover topics like mmm organizing your",
    "start": "43620",
    "end": "49829"
  },
  {
    "text": "solutions and projects organizing your startup code working with controllers working with Razer pages also how to",
    "start": "49829",
    "end": "56489"
  },
  {
    "text": "organize client code a couple tips for writing c-sharp code in the.net core environment and working with views and",
    "start": "56489",
    "end": "63600"
  },
  {
    "text": "razor pages so I do assume that you know a little bit about asp.net core maybe you're already working on a project",
    "start": "63600",
    "end": "69299"
  },
  {
    "text": "maybe you're planning to start a project and if so I hope that these tips help you so we'll start about solutions from",
    "start": "69299",
    "end": "75810"
  },
  {
    "text": "projects first oh also some testing tips some of my personal philosophy and maybe",
    "start": "75810",
    "end": "81570"
  },
  {
    "text": "some rants towards the end solutions and projects you know there's this really interesting thing if you go out onto",
    "start": "81570",
    "end": "88170"
  },
  {
    "text": "github and you look at project structures how things are laid out inside of a github repository across",
    "start": "88170",
    "end": "95070"
  },
  {
    "text": "various technologies across node and across ruby and people that are doing pure spa's and microsoft repositories",
    "start": "95070",
    "end": "102930"
  },
  {
    "text": "for dotnet core code you'll start to notice a consistent project structure that i've adopted for my project so if",
    "start": "102930",
    "end": "110700"
  },
  {
    "text": "you look at pretty much well if you look at any microsoft repository related to",
    "start": "110700",
    "end": "116250"
  },
  {
    "text": "dotnet core or asp.net core your Garant is guaranteed to see a few things at the",
    "start": "116250",
    "end": "122009"
  },
  {
    "text": "top level of that project which is you're always going to see a source folder underneath of there I know",
    "start": "122009",
    "end": "128479"
  },
  {
    "text": "that all of the CS proj files all of the projects that make up this solution this new get package whatever we're putting",
    "start": "128479",
    "end": "134930"
  },
  {
    "text": "together inside of this repo they're all going to live inside of there there's always going to be a test folder where",
    "start": "134930",
    "end": "140510"
  },
  {
    "text": "all the unit testing projects live if this repository represents some sort of",
    "start": "140510",
    "end": "146360"
  },
  {
    "text": "library that people are going to use there's typically a samples directory that shows you a few different ways to",
    "start": "146360",
    "end": "153069"
  },
  {
    "text": "consume this library and work with the api's there's typically some build scripts checked in at the top level",
    "start": "153069",
    "end": "158989"
  },
  {
    "text": "there might be some benchmarks if it's a performance sensitive piece and I like",
    "start": "158989",
    "end": "164329"
  },
  {
    "text": "this repository structure it's something I've adopted for my projects it takes a little bit of work inside a visual",
    "start": "164329",
    "end": "170329"
  },
  {
    "text": "studio I'll give you a tip for that in just a second but if you can mimic that repository structure inside a visual",
    "start": "170329",
    "end": "177410"
  },
  {
    "text": "studio when I actually look at the solution inside a visual studio it encourages developers to follow that",
    "start": "177410",
    "end": "184069"
  },
  {
    "text": "structure so docks might be another top-level folder that you have for a project of course one",
    "start": "184069",
    "end": "189829"
  },
  {
    "text": "challenge to this is that we know that the solution Explorer in Visual Studio is a complete fabrication of what",
    "start": "189829",
    "end": "197959"
  },
  {
    "text": "actually exists on disks right the solution Explorer lives it doesn't actually show us the physical file",
    "start": "197959",
    "end": "203750"
  },
  {
    "text": "system layout but and what do I mean by that I mean if I come into now don't do",
    "start": "203750",
    "end": "210410"
  },
  {
    "text": "this audit advance on me please this is not a pub comp presentation if I come",
    "start": "210410",
    "end": "215630"
  },
  {
    "text": "into Visual Studio and I'm looking at the regular solution Explorer view and I tell this to add a new folder that's not",
    "start": "215630",
    "end": "223370"
  },
  {
    "text": "adding a folder on my desk where are we here have to back out a little bit",
    "start": "223370",
    "end": "231760"
  },
  {
    "text": "adding a new solution folder creates a virtual folder that the solution file understands but it doesn't create",
    "start": "232060",
    "end": "238040"
  },
  {
    "text": "something on disk so I can create this new solution folder it's not going to show up on file system it's not going to show up in my repository I can add items",
    "start": "238040",
    "end": "244669"
  },
  {
    "text": "into it they're just gonna be dumped into the root of the project however Visual Studio 2017 up here in the",
    "start": "244669",
    "end": "250910"
  },
  {
    "text": "action toolbar a visual studio of the solution Explorer there is this little",
    "start": "250910",
    "end": "256220"
  },
  {
    "text": "thing to switch over and to a solutions and folders view and when I click on that now I have a view of the file",
    "start": "256220",
    "end": "262460"
  },
  {
    "text": "system just like what I would have in Visual Studio code its presenting the truth so if I right-click a folder and I",
    "start": "262460",
    "end": "269240"
  },
  {
    "text": "say please add another folder it actually adds something to the file system of that folder so it has some",
    "start": "269240",
    "end": "274820"
  },
  {
    "text": "advantages and disadvantages and you might find yourself toggling back and forth between the solution view and the",
    "start": "274820",
    "end": "279860"
  },
  {
    "text": "folder view the folder view is great when you want to create a folder on the file system you want to add some files",
    "start": "279860",
    "end": "285200"
  },
  {
    "text": "to it so here I have a script folder which I'll talk about just a bit I encourage people to add scripts to their",
    "start": "285200",
    "end": "290750"
  },
  {
    "text": "project and check them into the repository but some of the things I lose like if I try to right-click on a",
    "start": "290750",
    "end": "296900"
  },
  {
    "text": "project if I like right clicking to manage NuGet packages and right-clicking to do different things with my project",
    "start": "296900",
    "end": "303320"
  },
  {
    "text": "all those project options are going because now it's just kind of a folder but you can toggle back and forth",
    "start": "303320",
    "end": "309860"
  },
  {
    "text": "depending on what what you want to achieve at the moment so I can right click now and get to manage and you get",
    "start": "309860",
    "end": "317510"
  },
  {
    "text": "packages some other things that you might consider checking in include",
    "start": "317510",
    "end": "325780"
  },
  {
    "text": "samples and tools so here's the great thing about Microsoft open sourcing",
    "start": "325780",
    "end": "331850"
  },
  {
    "text": "things there was never a problem if I wanted to see the Microsoft source code",
    "start": "331850",
    "end": "336919"
  },
  {
    "text": "for let's say system about string or something that was built into the dotnet framework there was always decompiler",
    "start": "336919",
    "end": "342230"
  },
  {
    "text": "tools that I could use to dig into code that they wrote for asp.net or anything so having that code now be open source",
    "start": "342230",
    "end": "350360"
  },
  {
    "text": "on github yes it's an advantage I don't have to work quite as hard to see the code that they wrote the big advantage to me is",
    "start": "350360",
    "end": "356990"
  },
  {
    "text": "the other things that you find inside of those github repositories for asp.net core and dotnet core and core FX the",
    "start": "356990",
    "end": "364100"
  },
  {
    "text": "samples folder so when I was trying to understand asp.net security and what was happening at a lower level I went into",
    "start": "364100",
    "end": "370820"
  },
  {
    "text": "the github repo asp.net slash security and I found the samples folder and lo",
    "start": "370820",
    "end": "375890"
  },
  {
    "text": "and behold inside of there were just these somewhat thrown together samples",
    "start": "375890",
    "end": "381320"
  },
  {
    "text": "of things you would never do in production but they were very revealing of how this",
    "start": "381320",
    "end": "386419"
  },
  {
    "text": "how the middleware and how the services worked for things like asp.net cookie authentication so you dig into the",
    "start": "386419",
    "end": "393410"
  },
  {
    "text": "cookie sample and you'll see an example of different configuration options and what the middle way is supposed to do",
    "start": "393410",
    "end": "398990"
  },
  {
    "text": "and what it's not supposed to do the other thing that is extremely valuable inside of those github repositories are",
    "start": "398990",
    "end": "405289"
  },
  {
    "text": "the unit tests because again you can read through the unit test and find testing tips from Microsoft how do they",
    "start": "405289",
    "end": "411289"
  },
  {
    "text": "test stuff like middleware and also you can look at what a service and what a piece of middleware supposed to do by",
    "start": "411289",
    "end": "417199"
  },
  {
    "text": "reading the unit test so those are all very valuable and things we didn't have access to before I also like to include",
    "start": "417199",
    "end": "424520"
  },
  {
    "text": "development scripts so with that net core we have a command-line interface that can do all sorts of interesting",
    "start": "424520",
    "end": "430370"
  },
  {
    "text": "things we can use it to add package references and with the entity framework and it can",
    "start": "430370",
    "end": "435410"
  },
  {
    "text": "create migrations of deep databases if you're developing for some sort of cloud platform like an EWS or a sure it's very",
    "start": "435410",
    "end": "443090"
  },
  {
    "text": "useful to have scripts checked in so that when developers clone the repository they'll know that there is a",
    "start": "443090",
    "end": "448610"
  },
  {
    "text": "script in there to set up a development environment for example we'll go out to Azure and set up an app service and a",
    "start": "448610",
    "end": "453740"
  },
  {
    "text": "sequel database and give it some default parameters for them to start working so I always include development scripts oh",
    "start": "453740",
    "end": "460159"
  },
  {
    "text": "and one other thing the solution file the dot SLN file it's nice to keep that in the root of the repository that way",
    "start": "460159",
    "end": "465650"
  },
  {
    "text": "you can clone a repository and just double click that right away I don't have to go searching for it and I couldn't open up the solution but here's",
    "start": "465650",
    "end": "473750"
  },
  {
    "text": "an example of an ad migration script that has checked in so a developer can just say add migration add employee",
    "start": "473750",
    "end": "482300"
  },
  {
    "text": "feature or edit invoice feature and what that will do is go over to the data project run EF migrations to add a new",
    "start": "482300",
    "end": "488960"
  },
  {
    "text": "migration automatically update my database and then put me back into the folder that I was in before with a pop",
    "start": "488960",
    "end": "495370"
  },
  {
    "text": "so it just kind of makes things a little bit easier deployment scripts and",
    "start": "495370",
    "end": "502130"
  },
  {
    "text": "templates depending on what cloud environment you're working in there's various different ways to approach the",
    "start": "502130",
    "end": "508669"
  },
  {
    "text": "provisioning of a development or QA environment I use Azure quite a bit so one of the",
    "start": "508669",
    "end": "514599"
  },
  {
    "text": "things that we'll do is usually check in a script file that you can run that will",
    "start": "514599",
    "end": "519940"
  },
  {
    "text": "execute an azure resource manager template which is a Jason file which includes all the configuration",
    "start": "519940",
    "end": "525520"
  },
  {
    "text": "information for setting up a resource group in fact in Visual Studio there's resource group projects that you can",
    "start": "525520",
    "end": "532540"
  },
  {
    "text": "create they'll automatically generates some PowerShell scripts for you and some templates that you can modify inside of",
    "start": "532540",
    "end": "538930"
  },
  {
    "text": "Visual Studio to like set up an app service set up a sequel server set up an azure key ball wire up all the",
    "start": "538930",
    "end": "545380"
  },
  {
    "text": "configuration settings they look kind of like this this would be an example of",
    "start": "545380",
    "end": "552029"
  },
  {
    "text": "going to the automation script inside of the azure portal and say generate one of me generate for me a resource manager",
    "start": "552029",
    "end": "559990"
  },
  {
    "text": "template that I can then check in the source control and that resource manager template describes the resources I have",
    "start": "559990",
    "end": "565300"
  },
  {
    "text": "created and all their configuration entries unfortunately they're frustrating to work with any one use",
    "start": "565300",
    "end": "571839"
  },
  {
    "text": "resource manager templates a couple yeah it's amazing you can go and do a sure",
    "start": "571839",
    "end": "578530"
  },
  {
    "text": "you can set up let's say a virtual machine or an app service you can do these things then you can come to automation script and you can have as",
    "start": "578530",
    "end": "584350"
  },
  {
    "text": "your generate the script that is supposed to create that resource and in my experience they only round-trip about",
    "start": "584350",
    "end": "591660"
  },
  {
    "text": "80% of the time sometimes you have to go back in and tweak things and the documentation it's not that good and you",
    "start": "591660",
    "end": "598120"
  },
  {
    "text": "get strange error messages but when things are automated and they're working well it's a truly wonderful experience",
    "start": "598120",
    "end": "605190"
  },
  {
    "text": "another option for a sure would be the azure CLI that it can create virtual machines and delete virtual machines and",
    "start": "605190",
    "end": "611530"
  },
  {
    "text": "sequel servers and app services so we check them and what about builds some of",
    "start": "611530",
    "end": "618910"
  },
  {
    "text": "the projects that I create use out there which basically gives me a free build engine for open source projects if I",
    "start": "618910",
    "end": "624670"
  },
  {
    "text": "have something out there where I want to create a new get package inside of out there I can tell it where and github is",
    "start": "624670",
    "end": "631720"
  },
  {
    "text": "the source code that it should pull down when I do a push or a pull request where is the source code where's the source",
    "start": "631720",
    "end": "638950"
  },
  {
    "text": "code live that it should pull down and then I give a build instructions and I can either describe the build instructions in a UI by selecting check",
    "start": "638950",
    "end": "645430"
  },
  {
    "text": "boxes and saying do this and do that or I can check in a gamo file so my general",
    "start": "645430",
    "end": "651070"
  },
  {
    "text": "recommendation when you use these build systems that try to be GUI driven is to get as much out of the GUI as you can",
    "start": "651070",
    "end": "657339"
  },
  {
    "text": "and try to put it into scripts or some sort of configuration file so for example with out there if I check in an",
    "start": "657339",
    "end": "663640"
  },
  {
    "text": "app there yeah Moe file into the rudiment repository that gives out there all the instructions it needs to do a",
    "start": "663640",
    "end": "669459"
  },
  {
    "text": "build and one of the things I can tell it when it does a build is to use a build script that I also have checked in",
    "start": "669459",
    "end": "675700"
  },
  {
    "text": "so build PS one typically dotnet core applications are pretty straightforward to build this would be an example of a",
    "start": "675700",
    "end": "682480"
  },
  {
    "text": "PowerShell script that basically does dotnet restore net build dotnet run the",
    "start": "682480",
    "end": "688330"
  },
  {
    "text": "tests and then dotnet pack to create the nougat package so the advantage to this",
    "start": "688330",
    "end": "693580"
  },
  {
    "text": "is if a build is not working and out there and I don't have a script I'm just",
    "start": "693580",
    "end": "698950"
  },
  {
    "text": "relying on that Bayer UI to do things for me it's very difficult for me to debug I can't run the OP Nayyar build",
    "start": "698950",
    "end": "704709"
  },
  {
    "text": "locally at least with this I can rub that I can run this PowerShell script locally on my machine and it should",
    "start": "704709",
    "end": "711310"
  },
  {
    "text": "produce the same result as when it's inside of a player running same thing",
    "start": "711310",
    "end": "716410"
  },
  {
    "text": "goes for vsti so if you use visual studio team services you're probably aware that you can create a build",
    "start": "716410",
    "end": "721510"
  },
  {
    "text": "definition and inside of a build definition you can drag and drop these different tasks and arrange them and",
    "start": "721510",
    "end": "726910"
  },
  {
    "text": "configure them to do the same things that we just saw on the ps1 script so do it not never store do a dotnet build on",
    "start": "726910",
    "end": "733060"
  },
  {
    "text": "a test on that publish publish the artifacts some of those steps are not things that you can easily replicate in",
    "start": "733060",
    "end": "739930"
  },
  {
    "text": "a local development environment things like publish the web artifact because that's actually taking a zip file and",
    "start": "739930",
    "end": "745510"
  },
  {
    "text": "putting it into VST s somewhere where you can download it later but certainly not never stored not net building a test",
    "start": "745510",
    "end": "752200"
  },
  {
    "text": "out not published not necessarily I need something and I don't necessarily need to describe those steps inside of a GUI",
    "start": "752200",
    "end": "758170"
  },
  {
    "text": "so an alternative would be to use from the tax catalog a simple PowerShell task",
    "start": "758170",
    "end": "764950"
  },
  {
    "text": "or command line tasks or custom tasks that you can get from the V STS",
    "start": "764950",
    "end": "770589"
  },
  {
    "text": "marketplace that know how to run build scripts like PI sake or cake cake if you haven't heard of it as a gives you the",
    "start": "770589",
    "end": "778029"
  },
  {
    "text": "ability to c-sharp to write build definitions to write build tasks using c-sharp code so",
    "start": "778029",
    "end": "783529"
  },
  {
    "text": "it's familiar and you can run that same cake or P sake or command line script on",
    "start": "783529",
    "end": "790069"
  },
  {
    "text": "your turbo on the machine and also inside of the STS and that makes your builds a little bit easier to debug as",
    "start": "790069",
    "end": "797629"
  },
  {
    "text": "well as source controlling what's actually happening so let's get out of some of the Moonbeam stuff and talk",
    "start": "797629",
    "end": "802939"
  },
  {
    "text": "about startup code so and doing code reviews when I open up a project one of the first places I look is inside a",
    "start": "802939",
    "end": "809089"
  },
  {
    "text": "startup Nazi ass because we know that for asp.net core that's what defines what services are going to be registered",
    "start": "809089",
    "end": "814999"
  },
  {
    "text": "with the asp.net core container that describes what little where's in effect for doing HTTP processing and to me",
    "start": "814999",
    "end": "821359"
  },
  {
    "text": "that's all start up top CS should be responsible for it basically describes how is the application going to behave",
    "start": "821359",
    "end": "828049"
  },
  {
    "text": "at runtime but when I open up startup CS sometimes I see some some of the most",
    "start": "828049",
    "end": "833239"
  },
  {
    "text": "bizarre things that people are doing I've seen people see databases and run",
    "start": "833239",
    "end": "839209"
  },
  {
    "text": "database migrations and move files around on the filesystem copy you know make sure their CSS files are copied out",
    "start": "839209",
    "end": "845989"
  },
  {
    "text": "of some folder and put into dub-dub-dub root things like that to me there's better places to put that kind of logic",
    "start": "845989",
    "end": "851839"
  },
  {
    "text": "if you insist on having that logic inside of your application and we'll talk about where that is but to me",
    "start": "851839",
    "end": "857389"
  },
  {
    "text": "there's three responsibilities inside of startup startup not see us there's the constructor you can do some",
    "start": "857389",
    "end": "862969"
  },
  {
    "text": "limited work inside of the constructor if you want to inject some services like the hosting environment or I",
    "start": "862969",
    "end": "868149"
  },
  {
    "text": "configuration and save that off as a field to use later there's configure services to configure",
    "start": "868149",
    "end": "873349"
  },
  {
    "text": "the service provider aka the container inside of asp.net core and there's",
    "start": "873349",
    "end": "878389"
  },
  {
    "text": "configure where you can receive an app builder as well as other injected dependencies to define your middleware",
    "start": "878389",
    "end": "883879"
  },
  {
    "text": "that's all you want to do so in asp.net",
    "start": "883879",
    "end": "890959"
  },
  {
    "text": "core 2.0 if I open our programmer up see us I actually like to get as many things",
    "start": "890959",
    "end": "900049"
  },
  {
    "text": "out of the way as possible before we even get to the startup constructor so if you want to configure some logging and things like that that would be best",
    "start": "900049",
    "end": "906979"
  },
  {
    "text": "to do inside of the main method in fact if we at a different project here program to",
    "start": "906979",
    "end": "913540"
  },
  {
    "text": "see us maybe you know by now but you",
    "start": "913540",
    "end": "918730"
  },
  {
    "text": "scaffold out an asp.net core 2.0 application this create default builder does a number of things for you",
    "start": "918730",
    "end": "924580"
  },
  {
    "text": "including setting up some default application configuration sources so it",
    "start": "924580",
    "end": "930040"
  },
  {
    "text": "goes ahead and registers app settings Jason and app settings dock development Jason as configuration sources and also",
    "start": "930040",
    "end": "936870"
  },
  {
    "text": "configures kestrel would also configures a console logger so if anything goes wrong things spit out into the console a",
    "start": "936870",
    "end": "943420"
  },
  {
    "text": "lot of the stuff like that logging and so forth is taken care of for you before you even get into startup so to me",
    "start": "943420",
    "end": "950529"
  },
  {
    "text": "startup these days is really about two things first of all there's services so",
    "start": "950529",
    "end": "956730"
  },
  {
    "text": "inside of configure services I have sometimes seen hundreds of lines of code",
    "start": "956730",
    "end": "962430"
  },
  {
    "text": "because people want to use the MVC services but customize them a bit so they'll add some code to do things maybe",
    "start": "962430",
    "end": "969190"
  },
  {
    "text": "like this so 10-15 lines of code to customize some of the MVC options to add",
    "start": "969190",
    "end": "974620"
  },
  {
    "text": "different conventions to change the locations and so forth but you can imagine if there's this block of code to",
    "start": "974620",
    "end": "980110"
  },
  {
    "text": "configure that MVC services and then you add some additional code inside of configure services to configure or",
    "start": "980110",
    "end": "986020"
  },
  {
    "text": "entity framework and to configure asp.net identity configure services becomes very cumbersome to look at and",
    "start": "986020",
    "end": "991870"
  },
  {
    "text": "try to figure out what's going on so I always encourage people to keep this method flat all I want to see is a list",
    "start": "991870",
    "end": "998710"
  },
  {
    "text": "of things that you're doing oh you're adding MVC you're adding some security services you're using mediator you're adding some data stores and if",
    "start": "998710",
    "end": "1005880"
  },
  {
    "text": "I'm interested in some specific details like what are you doing to customize NBC I can just put the cursor on that line",
    "start": "1005880",
    "end": "1011400"
  },
  {
    "text": "press f12 and I can look at exactly what you're doing but this is a good big picture of you which is what I want to",
    "start": "1011400",
    "end": "1017400"
  },
  {
    "text": "see inside of configure services I don't actually want to see all the little configuration details",
    "start": "1017400",
    "end": "1022940"
  },
  {
    "text": "same thing for configure which is setting up little where although I do",
    "start": "1022940",
    "end": "1028860"
  },
  {
    "text": "believe it's okay to have an elf statement inside of there so I just want to be able to see oh you're in",
    "start": "1028860",
    "end": "1034890"
  },
  {
    "text": "development so we'll use the developer exception page and database err page and browser link which no one uses anymore",
    "start": "1034890",
    "end": "1041930"
  },
  {
    "text": "it's on the slog otherwise we use this exception handler and then they'll probably be a string of a little way of",
    "start": "1041930",
    "end": "1048540"
  },
  {
    "text": "beneath that and and again most pieces of middleware allow you to pass in options to specify",
    "start": "1048540",
    "end": "1053910"
  },
  {
    "text": "some different behaviors for example the static files middleware can pass in options to tell it what physical direct",
    "start": "1053910",
    "end": "1060420"
  },
  {
    "text": "directory to look in and so forth but if I'm going to have any of those options inside of configure again I want to",
    "start": "1060420",
    "end": "1066270"
  },
  {
    "text": "write an extension method for I application builder so I can just see something that says use static files",
    "start": "1066270",
    "end": "1071760"
  },
  {
    "text": "with options right and those options are tucked off as details somewhere else and",
    "start": "1071760",
    "end": "1076920"
  },
  {
    "text": "I can see exactly what middleware is in the project and what order that little",
    "start": "1076920",
    "end": "1082440"
  },
  {
    "text": "wire is executing and then what about all this other stuff so what if you want to run any framework migrations what if",
    "start": "1082440",
    "end": "1088740"
  },
  {
    "text": "you do need to copy files for some strange reason what if you want to seed the database with data well it's really",
    "start": "1088740",
    "end": "1095100"
  },
  {
    "text": "interesting that asp.net core what we're creating is a console application you know if I do a dotnet run I am running a",
    "start": "1095100",
    "end": "1101640"
  },
  {
    "text": "process from the console that standalone and what's interesting about that",
    "start": "1101640",
    "end": "1107070"
  },
  {
    "text": "process is there's this point in time after I've asked the web host builder to",
    "start": "1107070",
    "end": "1113430"
  },
  {
    "text": "build me a host and before I call run which is when it starts opening or",
    "start": "1113430",
    "end": "1118500"
  },
  {
    "text": "listening for socket connections to come in and prompts us HTTP messages there's this period of time right in here where",
    "start": "1118500",
    "end": "1124440"
  },
  {
    "text": "I have a fully configured application all the services and all the configuration options that I've pumped into the application are there we know",
    "start": "1124440",
    "end": "1131160"
  },
  {
    "text": "about our app settings we have our connection strings we know which services were going to use in production and so if I want to execute some code at",
    "start": "1131160",
    "end": "1138270"
  },
  {
    "text": "that point to do something like seed the database then the main method of program",
    "start": "1138270",
    "end": "1143820"
  },
  {
    "text": "dot C S or somewhere inside of program dot C is between build and run that's a good place to call out and do things",
    "start": "1143820",
    "end": "1150270"
  },
  {
    "text": "because I can take advantage of all this knowledge that I have so here's an",
    "start": "1150270",
    "end": "1155640"
  },
  {
    "text": "example I want to process some DB commands looking at the incoming command-line arguments and using my host",
    "start": "1155640",
    "end": "1162840"
  },
  {
    "text": "so that I can get the services and connection strings and things that are configured here's a piece of code",
    "start": "1162840",
    "end": "1170890"
  },
  {
    "text": "that might be easier to come over to visual studio and look at that here's a",
    "start": "1170890",
    "end": "1179950"
  },
  {
    "text": "piece of code that'll basically say okay if someone did a dotnet run on my application and passed in an argument",
    "start": "1179950",
    "end": "1185140"
  },
  {
    "text": "drop dB what we're going to do is use our services to get a DB context and",
    "start": "1185140",
    "end": "1190360"
  },
  {
    "text": "make sure the database is deleted and if they passed in drop DB space migrate DB will also did it get a DB context and",
    "start": "1190360",
    "end": "1197200"
  },
  {
    "text": "tell it to run the current migrations which could even create a database from scratch and if they also typed in C DB",
    "start": "1197200",
    "end": "1203530"
  },
  {
    "text": "we can add some initial data that's tucked away inside of that application somewhere and I just want to point out",
    "start": "1203530",
    "end": "1208780"
  },
  {
    "text": "that all of this is inside of a using statement where we get an I service",
    "start": "1208780",
    "end": "1215710"
  },
  {
    "text": "scoped Factory and tell it to create a scope and that's very important if",
    "start": "1215710",
    "end": "1220990"
  },
  {
    "text": "you're ever going to go directly to the service provider inside of asp.net core",
    "start": "1220990",
    "end": "1226750"
  },
  {
    "text": "and ask it to resolve a service which is what happens down here so dear service provider give me B DB context derived",
    "start": "1226750",
    "end": "1234580"
  },
  {
    "text": "class so I can work worked with the database if you ever do this outside of the scope of an HTTP transaction you",
    "start": "1234580",
    "end": "1240460"
  },
  {
    "text": "have to be very careful that you don't accidentally create a singleton which is what will happen if you don't explicitly",
    "start": "1240460",
    "end": "1246270"
  },
  {
    "text": "get a service scope factory tell it and tell it to create a scope which gives",
    "start": "1246270",
    "end": "1251290"
  },
  {
    "text": "you back a service provider that you can use to resolve services but when you dispose it you can clean everything off",
    "start": "1251290",
    "end": "1256900"
  },
  {
    "text": "make sure that goes away so how would this get used well I could write a little script that a developer can do",
    "start": "1256900",
    "end": "1264340"
  },
  {
    "text": "call execute called recreate DB so when I arrived to the office in the morning",
    "start": "1264340",
    "end": "1269500"
  },
  {
    "text": "and I do a git pull to get the latest source code the people who've checked in I don't know if there's new migrations or new sets of test data or what is it",
    "start": "1269500",
    "end": "1276190"
  },
  {
    "text": "so I'll just do a git pull and then recreate DB and it'll run my application drop it migrate it see the database and",
    "start": "1276190",
    "end": "1282820"
  },
  {
    "text": "then stop it will not listen for sockets at that point so that makes life a little bit easier let's talk about",
    "start": "1282820",
    "end": "1290470"
  },
  {
    "text": "project structure I have an extremely difficult time these days looking at a",
    "start": "1290470",
    "end": "1298780"
  },
  {
    "text": "traditional asp.net MVC project that has like controllers folder and a views folder and a models folder to me it",
    "start": "1298780",
    "end": "1306200"
  },
  {
    "text": "drives me insane let me show you let me try to demonstrate that by let's pretend",
    "start": "1306200",
    "end": "1312080"
  },
  {
    "text": "for a minute so over here I have created a new project web application 35 I'm",
    "start": "1312080",
    "end": "1319669"
  },
  {
    "text": "about to do some work on it you know we just came out of a sprint meeting and someone has told me that the register or",
    "start": "1319669",
    "end": "1326990"
  },
  {
    "text": "the reset password users are not able to reset passwords and I need to go in to",
    "start": "1326990",
    "end": "1332240"
  },
  {
    "text": "go into this application and look at that bug so this application was generated by doing family project asking",
    "start": "1332240",
    "end": "1338360"
  },
  {
    "text": "for an MVC project and setting the authentication options equal to individual authentication so it's using",
    "start": "1338360",
    "end": "1344269"
  },
  {
    "text": "asp.net identity and it spit out a bunch of user interface code that allows users to register and log in and log out",
    "start": "1344269",
    "end": "1351110"
  },
  {
    "text": "change the password reset their password etc etc but now it's my responsibility",
    "start": "1351110",
    "end": "1356570"
  },
  {
    "text": "to work on this feature what everyone else in the company thinks of as a feature to reset a password so hmm let",
    "start": "1356570",
    "end": "1365179"
  },
  {
    "text": "me start with the controller is it in the account controller or the manage controller I don't know but how bad",
    "start": "1365179",
    "end": "1371389"
  },
  {
    "text": "could it be to just look through one of these let's start actually at the very top of this file that line one okay here",
    "start": "1371389",
    "end": "1379159"
  },
  {
    "text": "I can see we're going to login login",
    "start": "1379159",
    "end": "1384649"
  },
  {
    "text": "with two-factor authentication mm-hmm maybe I just should have done a finding files lock out register external login",
    "start": "1384649",
    "end": "1394230"
  },
  {
    "text": "[Music] what's going on confirm email forgot password oh here we go all the way down",
    "start": "1394230",
    "end": "1401929"
  },
  {
    "text": "here at line 392 reset password this must be the area that I went to work in",
    "start": "1401929",
    "end": "1407809"
  },
  {
    "text": "okay so next let me find the model that this is working with because maybe the problem something with the validation",
    "start": "1407809",
    "end": "1413779"
  },
  {
    "text": "with the model I guess that's in the models folder so I have to come over here I apologize if you can't see the",
    "start": "1413779",
    "end": "1419389"
  },
  {
    "text": "solution Explorer but I found the view model okay there's the D model now I have to find the view mmm",
    "start": "1419389",
    "end": "1425450"
  },
  {
    "text": "so we have to jump over to the views folder and fortunately yeah I can see",
    "start": "1425450",
    "end": "1430639"
  },
  {
    "text": "under the account folder there is a recessed reset password view and finally I haven't even got to the unit test yet",
    "start": "1430639",
    "end": "1437690"
  },
  {
    "text": "but finally I might be able to work on this bug where there's a problem with reset password that just drives me insane the model-view-controller design",
    "start": "1437690",
    "end": "1445660"
  },
  {
    "text": "pattern tells us that we should have a separation of concerns between the model",
    "start": "1445660",
    "end": "1450710"
  },
  {
    "text": "the view and the controller the controller receives an HTTP request the controller uses some services to build a",
    "start": "1450710",
    "end": "1456950"
  },
  {
    "text": "model the model doesn't know anything about HTTP doesn't know anything about the use the controller takes that model can hand it off to a view and the view",
    "start": "1456950",
    "end": "1463790"
  },
  {
    "text": "has the logic to render that model so there's a separation of concerned but no one ever said that there had to be a",
    "start": "1463790",
    "end": "1470060"
  },
  {
    "text": "physical separation between the abstractions in that design pattern where we had to put them into three",
    "start": "1470060",
    "end": "1475250"
  },
  {
    "text": "different directories so for the last oh I'd say year and a half I've been using",
    "start": "1475250",
    "end": "1481400"
  },
  {
    "text": "a concept known as feature folders so with feature folders you can organize",
    "start": "1481400",
    "end": "1487250"
  },
  {
    "text": "folders however you want you might even organize it organize them hierarchically like your UI is organized",
    "start": "1487250",
    "end": "1494270"
  },
  {
    "text": "so when I when I go into the application there's an admin link and I click on that and there's a menu open that allows",
    "start": "1494270",
    "end": "1499550"
  },
  {
    "text": "me to manage this and manage that and manage seasons and oh you know now when I'm trying to work on a feature that",
    "start": "1499550",
    "end": "1505760"
  },
  {
    "text": "someone has identified in the application I'm kind of following the same logic when I navigate through these folders and lo lo and behold here's my",
    "start": "1505760",
    "end": "1511730"
  },
  {
    "text": "controller ant in that folder I just open it up there's some views associated with it I can open that up and there are",
    "start": "1511730",
    "end": "1517280"
  },
  {
    "text": "some models and they're all in the same folder still a separation of concern it's just not a physical separation of",
    "start": "1517280",
    "end": "1522560"
  },
  {
    "text": "the abstractions and to me it's it's a much easier way to organize MVC applications and find things and work on",
    "start": "1522560",
    "end": "1530690"
  },
  {
    "text": "things and actually work on features this would be maybe how we could start",
    "start": "1530690",
    "end": "1537530"
  },
  {
    "text": "reorganizing the account controller breaking it out into smaller pieces and",
    "start": "1537530",
    "end": "1543350"
  },
  {
    "text": "maybe having a registry set password controller folder inside of here",
    "start": "1543350",
    "end": "1549100"
  },
  {
    "text": "to do this it's very easy I actually have a nougat package or just OD code",
    "start": "1549100",
    "end": "1554690"
  },
  {
    "text": "feature folders you can install that actually the command you'd probably want to use today is net and package OD code",
    "start": "1554690",
    "end": "1560720"
  },
  {
    "text": "feature folders and then configure services you can just add NBC and feature folders to that service",
    "start": "1560720",
    "end": "1567560"
  },
  {
    "text": "it'll configure your NBC options to use those that being said these days I quite",
    "start": "1567560",
    "end": "1577820"
  },
  {
    "text": "like Ranger pages who's using razor pages who knows about razor pages okay",
    "start": "1577820",
    "end": "1583840"
  },
  {
    "text": "when I first when razor pages first came out I and I think many other people looked at and said oh this is gonna be",
    "start": "1583840",
    "end": "1589100"
  },
  {
    "text": "one of those two simplistic things that Microsoft has come up with that I never want to actually use but then when I",
    "start": "1589100",
    "end": "1596150"
  },
  {
    "text": "actually started digging into it I realized razor pages are exactly what I want when I went to generate HTML so I'm",
    "start": "1596150",
    "end": "1604220"
  },
  {
    "text": "gonna walk you through a couple razor page scenarios just to show you what I think are the advantages but to me if",
    "start": "1604220",
    "end": "1610190"
  },
  {
    "text": "I'm building an API that has to return JSON or XML I'm not generating HTML I'm",
    "start": "1610190",
    "end": "1615380"
  },
  {
    "text": "building an API that's when I use MVC controllers if I'm generating HTML from",
    "start": "1615380",
    "end": "1621560"
  },
  {
    "text": "the server I don't want to controller with the view I want to use a razor page so over here in Visual Studio I just",
    "start": "1621560",
    "end": "1628400"
  },
  {
    "text": "want to show you that as an alternative to web application 35 with all those",
    "start": "1628400",
    "end": "1634340"
  },
  {
    "text": "huge 500 line controllers and controllers and views are in different places I also have web application 36",
    "start": "1634340",
    "end": "1642050"
  },
  {
    "text": "new an improved version of web application 35 but this one was",
    "start": "1642050",
    "end": "1647690"
  },
  {
    "text": "generated using file new project and selecting asp.net core razor pages and",
    "start": "1647690",
    "end": "1653780"
  },
  {
    "text": "individual authentication so instead of generating huge controllers it has now",
    "start": "1653780",
    "end": "1659120"
  },
  {
    "text": "generated a series of razor pages and now when someone comes to me and says hey there's a bug with the users",
    "start": "1659120",
    "end": "1665330"
  },
  {
    "text": "resetting passwords what are you going to do about it what I will do after I close all these",
    "start": "1665330",
    "end": "1671990"
  },
  {
    "text": "things up here let's not save anything what I will do is say oh let's go into pages I guess",
    "start": "1671990",
    "end": "1678380"
  },
  {
    "text": "that would be under account and let me look through here oh here's a reset password the razor page let me click to",
    "start": "1678380",
    "end": "1685310"
  },
  {
    "text": "open that and here's reset pay password the code-behind or page model for that razor page and",
    "start": "1685310",
    "end": "1691430"
  },
  {
    "text": "tada I now have everything opened that I need to work on that feature so to me",
    "start": "1691430",
    "end": "1696440"
  },
  {
    "text": "razor pages are a lot like folders I don't need to use feature folders if I'm building stuff of",
    "start": "1696440",
    "end": "1702070"
  },
  {
    "text": "features with razor pages so what are they exactly yes a razor page is still",
    "start": "1702070",
    "end": "1709000"
  },
  {
    "text": "just a razor view has a CS HTML extension uses tag helpers uses model",
    "start": "1709000",
    "end": "1714220"
  },
  {
    "text": "binding you can render sections you can use layout pages you start all those things that you usually do with range",
    "start": "1714220",
    "end": "1720370"
  },
  {
    "text": "reviews the difference is it's going to have a page model or code behind file",
    "start": "1720370",
    "end": "1726519"
  },
  {
    "text": "behind it which some people think oh my gosh maybe it's too much like web forms but it's not there's still the",
    "start": "1726519",
    "end": "1732370"
  },
  {
    "text": "separation of concerns there's still dependency injection so you can see when I would need to reset a user password I",
    "start": "1732370",
    "end": "1737980"
  },
  {
    "text": "can have a constructor and ask for dependencies like a user manager or a",
    "start": "1737980",
    "end": "1743409"
  },
  {
    "text": "logger or dbcontext or I hosting environment I can I'm not a big fan of this but I can define my input model I",
    "start": "1743409",
    "end": "1751389"
  },
  {
    "text": "can define input models and output models and have this razor page work",
    "start": "1751389",
    "end": "1756549"
  },
  {
    "text": "with them when a user posts something to my razor page I can tell asp.net core",
    "start": "1756549",
    "end": "1763000"
  },
  {
    "text": "that I want to try to receive posted form values into this property input so",
    "start": "1763000",
    "end": "1768190"
  },
  {
    "text": "that's how I can receive things like the user's email and their password and their confirm password but one get",
    "start": "1768190",
    "end": "1777309"
  },
  {
    "text": "method responds to a get request but one post method responds to a post requests",
    "start": "1777309",
    "end": "1782350"
  },
  {
    "text": "there's no synthetic click events or any funny stuff like that so to me this is",
    "start": "1782350",
    "end": "1787480"
  },
  {
    "text": "just as good as having a controller and using a controller to render a view just things are organized a little bit",
    "start": "1787480",
    "end": "1793720"
  },
  {
    "text": "differently plus razor pages have some some advantages over controllers like",
    "start": "1793720",
    "end": "1799059"
  },
  {
    "text": "one of the features they added to razor pages is that they will automatically validate anti forgery tokens on a forum",
    "start": "1799059",
    "end": "1804460"
  },
  {
    "text": "posts you don't have to worry about developers accidentally forgetting the validate anti forgery token attribute on",
    "start": "1804460",
    "end": "1811000"
  },
  {
    "text": "a controller action they will do that for me because they just assume everything's going to be a forum post when there's a post so razor page is",
    "start": "1811000",
    "end": "1820840"
  },
  {
    "text": "good give them a try controllers",
    "start": "1820840",
    "end": "1827070"
  },
  {
    "text": "I do not allow people inside of start-up t us to say app dot use NBC and then",
    "start": "1827630",
    "end": "1835430"
  },
  {
    "text": "write that little lambda expression that takes a route builder and define routes inside of you know the conventional",
    "start": "1835430",
    "end": "1840560"
  },
  {
    "text": "routes inside of start-up Nazi ass you know the conventional route would be something like controller slash action",
    "start": "1840560",
    "end": "1846350"
  },
  {
    "text": "slash the optional ID parameter when people rely on those routes and inside",
    "start": "1846350",
    "end": "1852110"
  },
  {
    "text": "of start-up CS they build horrible horrible looking api's they don't think",
    "start": "1852110",
    "end": "1857510"
  },
  {
    "text": "about the URLs they don't think about parameter names I want everyone and I",
    "start": "1857510",
    "end": "1862880"
  },
  {
    "text": "encourage everyone to use route parameters because with route parameters develop alert developers are much more",
    "start": "1862880",
    "end": "1869810"
  },
  {
    "text": "likely to say we know actually this this piece of the API it's part of the admin",
    "start": "1869810",
    "end": "1875720"
  },
  {
    "text": "section or the admin feature of our API so let me put a literal admin in front",
    "start": "1875720",
    "end": "1881240"
  },
  {
    "text": "of this so admin / manage something and then some action perhaps and I don't",
    "start": "1881240",
    "end": "1886850"
  },
  {
    "text": "know if you've ever worked on one of those MVC projects where every single action parameter was named ID you ever",
    "start": "1886850",
    "end": "1894020"
  },
  {
    "text": "done that ever had that even if it was something like invoice date right if someone's passing in an invoice date and",
    "start": "1894020",
    "end": "1900080"
  },
  {
    "text": "they'll still call it ID drives me insane so the routing the route",
    "start": "1900080",
    "end": "1905480"
  },
  {
    "text": "attributes also encourage people to think about the parameter names and what they should be called and what they",
    "start": "1905480",
    "end": "1911420"
  },
  {
    "text": "should be mean for the actual action so instead of having an ID because I'm just being lazy and relying on the",
    "start": "1911420",
    "end": "1916610"
  },
  {
    "text": "conventional route to find this out of Starbucks yes I'm actually thinking this is a seasoned ID versus a matchset ID",
    "start": "1916610",
    "end": "1922760"
  },
  {
    "text": "and my actions become a little bit clearer to me so I encourage you to use",
    "start": "1922760",
    "end": "1927800"
  },
  {
    "text": "the route attributes and throw away the other forms of routing this one I'm",
    "start": "1927800",
    "end": "1933650"
  },
  {
    "text": "still I was big one mediator and now I'm backing off for a little bit on that how many people use mediator anyway whew",
    "start": "1933650",
    "end": "1941270"
  },
  {
    "text": "it's a very simple in-memory message boss what it allows me to do is inside of a controller action I can remove",
    "start": "1941270",
    "end": "1948920"
  },
  {
    "text": "pretty much all of my logic inside of a controller action and instead what I want to do is put together either a",
    "start": "1948920",
    "end": "1954260"
  },
  {
    "text": "command or a query so in this case I'm putting together a command command is actually just based on the",
    "start": "1954260",
    "end": "1959510"
  },
  {
    "text": "inputs that the user has typed into a form I'm gonna accept those inputs as a command and I'm going to tell mediator",
    "start": "1959510",
    "end": "1966140"
  },
  {
    "text": "to send this command off somewhere in a system that's actually going to process it and produce some result for me so all",
    "start": "1966140",
    "end": "1972470"
  },
  {
    "text": "of the all of the logic and the services and the things that go into logging in a",
    "start": "1972470",
    "end": "1977900"
  },
  {
    "text": "user are completely removed from the controller there's somewhere in a request handler that I've defined for",
    "start": "1977900",
    "end": "1983810"
  },
  {
    "text": "that specific type login user commune so the good news is that means some logic",
    "start": "1983810",
    "end": "1989750"
  },
  {
    "text": "becomes a lot easier to reuse its packaged away instead of a component that's not coupled to your UI or to a",
    "start": "1989750",
    "end": "1995840"
  },
  {
    "text": "controller at all it's also easy with mediator to introduce things like decorators so if I want this command to",
    "start": "1995840",
    "end": "2002320"
  },
  {
    "text": "flow through a pipeline something that'll log it and something that will validate it and then something that'll actually execute the login that's",
    "start": "2002320",
    "end": "2009070"
  },
  {
    "text": "relatively easy to do with mediator and I can plug and plug things in but that",
    "start": "2009070",
    "end": "2014140"
  },
  {
    "text": "being said there's always downsides right so a lot of people will look at it and say that's just another layer of",
    "start": "2014140",
    "end": "2019450"
  },
  {
    "text": "abstraction and what you're doing is you're making it harder for me to work on the login user feature because I",
    "start": "2019450",
    "end": "2025390"
  },
  {
    "text": "don't know where that goes so you have to decide based on your team and based on the type of application you're",
    "start": "2025390",
    "end": "2030820"
  },
  {
    "text": "building and how much flexibility you need and how much were you usability you need whether it's whether or not to use",
    "start": "2030820",
    "end": "2036730"
  },
  {
    "text": "mediator but it's good for specific scenarios the other thing I tell people",
    "start": "2036730",
    "end": "2044320"
  },
  {
    "text": "is don't build projects anymore that have an API have API endpoints inside of",
    "start": "2044320",
    "end": "2050440"
  },
  {
    "text": "it and also have endpoints that render HTML and take form posts at least don't",
    "start": "2050440",
    "end": "2056440"
  },
  {
    "text": "do it if you're using any form of cookie authentication because as soon as you have cookie authentication you have the",
    "start": "2056440",
    "end": "2061629"
  },
  {
    "text": "risk of a cross-site request forgery and a lot of people don't realize that they have to protect from cross-site request forgeries and they're api's so in order",
    "start": "2061630",
    "end": "2069550"
  },
  {
    "text": "to do that one of the things we have to do is get anti forgery tokens down to our JavaScript so that when we make Ajax",
    "start": "2069550",
    "end": "2075909"
  },
  {
    "text": "calls or use the fetch API we can pass along an HTTP header that includes an anti forgery token and this is just a",
    "start": "2075910",
    "end": "2082179"
  },
  {
    "text": "simple code example of an endpoint you could build that javascript could invoke",
    "start": "2082180",
    "end": "2088929"
  },
  {
    "text": "to get the anti forgery token needs to send along so just inject the int for jury service and what this get",
    "start": "2088930",
    "end": "2097280"
  },
  {
    "text": "request will do is use that service to get in-store tokens it's not obvious but getting stor tokens actually does two",
    "start": "2097280",
    "end": "2102470"
  },
  {
    "text": "things one thing I will do is return a data structure that has the anti forgery token inside of it and also has the",
    "start": "2102470",
    "end": "2108530"
  },
  {
    "text": "header name the JavaScript should use when it sends that token along so we will take that data structure and",
    "start": "2108530",
    "end": "2114530"
  },
  {
    "text": "serialize it back and send it down to JavaScript so it can use that token and write the appropriate header but the",
    "start": "2114530",
    "end": "2120170"
  },
  {
    "text": "other side effect that happens here that's not obvious is that if the anti forgery token cookie has not been set",
    "start": "2120170",
    "end": "2127040"
  },
  {
    "text": "into the browser yet when I call getting stored tokens I ante forgery did the default implementation of III and set",
    "start": "2127040",
    "end": "2133220"
  },
  {
    "text": "forgery will issue that cookie so at that point I could start using follow the anti forgery token on my API",
    "start": "2133220",
    "end": "2140270"
  },
  {
    "text": "endpoints typically not something you want to do if you you know if you can separate them you don't have to worry",
    "start": "2140270",
    "end": "2145400"
  },
  {
    "text": "about that type of thing security policies if you're just coming",
    "start": "2145400",
    "end": "2151760"
  },
  {
    "text": "in to asp.net core and you're wondering how authorization works and how you can write authorization attributes to work",
    "start": "2151760",
    "end": "2158000"
  },
  {
    "text": "with roles and Active Directory groups and things like that excuse me that",
    "start": "2158000",
    "end": "2165800"
  },
  {
    "text": "could be an entire day workshop an entire day of a workshop but basically things boil everything in asp.net core",
    "start": "2165800",
    "end": "2171319"
  },
  {
    "text": "boils down to claims so I can build a claims principle to define a user and",
    "start": "2171319",
    "end": "2176329"
  },
  {
    "text": "add claims to that principle saying this is the first name this is their email address this is a role that they're in",
    "start": "2176329",
    "end": "2181730"
  },
  {
    "text": "like admin or the department that they're in which is sales and once that",
    "start": "2181730",
    "end": "2186950"
  },
  {
    "text": "is there when I went to authorize that user to do something I can look at",
    "start": "2186950",
    "end": "2192650"
  },
  {
    "text": "claims and these again so claimed can represent roles they can represent facts about me they might represent permissions that I have so a claim could",
    "start": "2192650",
    "end": "2200569"
  },
  {
    "text": "be is can edit invoices that could be a claim and the way I evaluate claims the",
    "start": "2200569",
    "end": "2207800"
  },
  {
    "text": "easy way to evaluate those is to use an authorization policy builder and when I",
    "start": "2207800",
    "end": "2214099"
  },
  {
    "text": "have a policy builder there's a fluent API where I can say require this require that and require a claim like it is",
    "start": "2214099",
    "end": "2220550"
  },
  {
    "text": "admin with this value and when I build that policy I can then use it and give it a mean and I could",
    "start": "2220550",
    "end": "2229640"
  },
  {
    "text": "build I could say authorized that authorized attribute is admin or I could",
    "start": "2229640",
    "end": "2235250"
  },
  {
    "text": "wrap it up into a custom attribute user is admin what that'll do is it's basically the authorized attribute",
    "start": "2235250",
    "end": "2240559"
  },
  {
    "text": "saying evaluate the policy is admin which checks for the claim is admin",
    "start": "2240559",
    "end": "2246819"
  },
  {
    "text": "hopefully that's making sense security policies are very easy once you know",
    "start": "2246819",
    "end": "2252529"
  },
  {
    "text": "that they're there and you know everything is working on clean talk about views for a second don't use HTML helpers anymore they're",
    "start": "2252529",
    "end": "2259099"
  },
  {
    "text": "hideous and they were always the worst part with espn/abc use tag helpers if",
    "start": "2259099",
    "end": "2266359"
  },
  {
    "text": "you're not already so things like ESP - for a SP - validation summary those are good but easy to read they're also",
    "start": "2266359",
    "end": "2272299"
  },
  {
    "text": "extensible you can build your own tag helper by deriving from a base class tag helper and implementing a process method",
    "start": "2272299",
    "end": "2279190"
  },
  {
    "text": "they're relatively straightforward for most trivial tag helpers use view",
    "start": "2279190",
    "end": "2284269"
  },
  {
    "text": "components view components are like partial views but they get to render",
    "start": "2284269",
    "end": "2290000"
  },
  {
    "text": "things independently so a view component is like a controller in the sense that",
    "start": "2290000",
    "end": "2296869"
  },
  {
    "text": "you can give it a constructor and you can enjoy inject services into it but it",
    "start": "2296869",
    "end": "2302900"
  },
  {
    "text": "doesn't respond to a request it has to be rendered from some other view so",
    "start": "2302900",
    "end": "2307940"
  },
  {
    "text": "interview I can say actually this way with a tag helper I can say go out and",
    "start": "2307940",
    "end": "2313490"
  },
  {
    "text": "render the view component main menu this main menu is a class with an invoked method so we can have logic in there it",
    "start": "2313490",
    "end": "2319069"
  },
  {
    "text": "can do data access and it can say return of you and that view could be whatever markup you need with whatever model and",
    "start": "2319069",
    "end": "2324559"
  },
  {
    "text": "that's a good way to build composable you is if you need to client-side code",
    "start": "2324559",
    "end": "2331670"
  },
  {
    "text": "so everyone's using some form of angular or typescript or react these days and my",
    "start": "2331670",
    "end": "2338240"
  },
  {
    "text": "favorite tool to build that sort of thing is web pack I'm not going to go into a lot of detail on this since I",
    "start": "2338240",
    "end": "2343819"
  },
  {
    "text": "think there's some other talks this week on web pack but this is an example web",
    "start": "2343819",
    "end": "2349009"
  },
  {
    "text": "pack configuration file ah so the thing I wanted to point out",
    "start": "2349009",
    "end": "2355920"
  },
  {
    "text": "about webpack as I've seen a lot of developers struggle with that webpack configuration file and the trick is don't think of webpack config KS as a",
    "start": "2355920",
    "end": "2364980"
  },
  {
    "text": "typical configuration file it's not a JSON file it's not static inert data it's actually a JavaScript module that",
    "start": "2364980",
    "end": "2372950"
  },
  {
    "text": "webpack the tool will load up an X cube so you can put executable code in there if you need more flexibility so for",
    "start": "2372950",
    "end": "2378690"
  },
  {
    "text": "example if I need web pack to go out and find tight strip files that are kind of scattered across feature folders I can",
    "start": "2378690",
    "end": "2386160"
  },
  {
    "text": "actually write some JavaScript code that gets executed inside a node to say let's go out and lob up all the TS files spec",
    "start": "2386160",
    "end": "2394530"
  },
  {
    "text": "TS files so these are unit test specifications grab them from all the feature folders and put them into an",
    "start": "2394530",
    "end": "2400349"
  },
  {
    "text": "array for me as well as all the specs that are in this client folder I'm not",
    "start": "2400349",
    "end": "2408900"
  },
  {
    "text": "gonna talk about JavaScript services that much that was another Steve Sanderson creation though but that",
    "start": "2408900",
    "end": "2415770"
  },
  {
    "text": "basically allows you to use webpack hot reloads integrated into asp.net core",
    "start": "2415770",
    "end": "2421349"
  },
  {
    "text": "middleware so that when you send a request to your asp.net core application asp.net core can work with web pack to",
    "start": "2421349",
    "end": "2429380"
  },
  {
    "text": "compile all your typescript files bundle them into a JavaScript file put them in the browser and then as you make changes",
    "start": "2429380",
    "end": "2435270"
  },
  {
    "text": "to your JavaScript and save it those changes can be compiled and",
    "start": "2435270",
    "end": "2440339"
  },
  {
    "text": "automatically swapped into the browser for you the hot module replacement I'm a",
    "start": "2440339",
    "end": "2446970"
  },
  {
    "text": "big fan of con emu anyone use con Meo or commander so once you start working with",
    "start": "2446970",
    "end": "2453630"
  },
  {
    "text": "some of these command line tools when you're writing some command line scripts you'll know you'll realize the basic Windows command line is sometimes a",
    "start": "2453630",
    "end": "2461310"
  },
  {
    "text": "little bit deficient so I use con mu so a couple different things I can do here",
    "start": "2461310",
    "end": "2467339"
  },
  {
    "text": "one is I can right click and say create another console for me and have it's hard to save it here but let me look",
    "start": "2467339",
    "end": "2473970"
  },
  {
    "text": "down here at the bottom tab consoles which is very useful when you have a long-running task in one",
    "start": "2473970",
    "end": "2481270"
  },
  {
    "text": "I can also do things like this see if I have a setup to work today",
    "start": "2481270",
    "end": "2487650"
  },
  {
    "text": "where are we github you release rips yeah so I just",
    "start": "2489480",
    "end": "2500860"
  },
  {
    "text": "typed J s command because inside of this project there's a bunch of things that happen to have to happen with JX and",
    "start": "2500860",
    "end": "2506470"
  },
  {
    "text": "things aren't quite configured correctly but ideally on the left hand side here I",
    "start": "2506470",
    "end": "2512250"
  },
  {
    "text": "think I just ran it from the wrong folder it's all um this would be running web pack watch up here would be running",
    "start": "2512250",
    "end": "2519070"
  },
  {
    "text": "web pack unit test or running unit tests on my app down here would be running a karma integration task and I'd be able",
    "start": "2519070",
    "end": "2525250"
  },
  {
    "text": "to have all three windows open and all those things running at the same time and if I write some typescript code and",
    "start": "2525250",
    "end": "2530860"
  },
  {
    "text": "save the file and it fails a unit test I would see some red scroll by and that would be glorious that does that all",
    "start": "2530860",
    "end": "2537820"
  },
  {
    "text": "happen for me let me try to go to see if",
    "start": "2537820",
    "end": "2543910"
  },
  {
    "text": "I get this working real quick what folder am I in",
    "start": "2543910",
    "end": "2550589"
  },
  {
    "text": "this might be a little bit better yeah over here is the webpack watch over here",
    "start": "2556170",
    "end": "2565230"
  },
  {
    "text": "we're still failing so you get the idea the command that does all that for",
    "start": "2565230",
    "end": "2573420"
  },
  {
    "text": "Connie M you would be to run Connie mu with this following run list in one",
    "start": "2573420",
    "end": "2579299"
  },
  {
    "text": "window I went to run npm run watch then in another window npm run test watch put",
    "start": "2579299",
    "end": "2585960"
  },
  {
    "text": "that in a new window that split horizontally that's SH and then NPN run karma unit test in a new console that",
    "start": "2585960",
    "end": "2592950"
  },
  {
    "text": "split vertically so it takes this side that was split horizontally and splits it vertically and I get that window in",
    "start": "2592950",
    "end": "2598230"
  },
  {
    "text": "the bottom bottom rate fascinating right I'm gonna skip over a few slides here",
    "start": "2598230",
    "end": "2604740"
  },
  {
    "text": "related to client food I do want to point out look Bauer is dead just use NPM or yarn for client-side stuff even",
    "start": "2604740",
    "end": "2614369"
  },
  {
    "text": "if you're just you know if you're not yeah you're not writing a node.js application I understand you're just",
    "start": "2614369",
    "end": "2620339"
  },
  {
    "text": "using bootstrap and jQuery but you know all those front-end dependencies now they're all in NPM so forget about these",
    "start": "2620339",
    "end": "2626250"
  },
  {
    "text": "other package managers in qiyam or yarn will do just fine for you to download those and manage those a new get for",
    "start": "2626250",
    "end": "2633869"
  },
  {
    "text": "anything dotnet related I was not a big fan I tried to like type script for so long and it wasn't until I'd say",
    "start": "2633869",
    "end": "2640589"
  },
  {
    "text": "beginning of 2017 where I thought it really started to mesh well with the way",
    "start": "2640589",
    "end": "2646950"
  },
  {
    "text": "JavaScript programmers wanted to work and I really started to enjoy tight script and now I do encourage people to",
    "start": "2646950",
    "end": "2652799"
  },
  {
    "text": "take a look at it if they haven't looked at it yet type Spirit just finally embrace the node ecosystem you can npm",
    "start": "2652799",
    "end": "2659430"
  },
  {
    "text": "install a typescript compiler the typescript compiler will do things like use the node module resolution strategy",
    "start": "2659430",
    "end": "2666420"
  },
  {
    "text": "in the way it tracks directories and looks around and then it understands the node modules folder so when you npm",
    "start": "2666420",
    "end": "2672480"
  },
  {
    "text": "install other things and inside of typescript you import them it knows to look in there this paths configuration",
    "start": "2672480",
    "end": "2679349"
  },
  {
    "text": "option so this is a typescript config file the pass option is very useful when you want to go and define your own",
    "start": "2679349",
    "end": "2685079"
  },
  {
    "text": "custom sort of modules folder so I don't want I don't want to forced to put my typescript files in a",
    "start": "2685079",
    "end": "2692120"
  },
  {
    "text": "specific folder I want to be able to put them someplace and tell typescript look if something doesn't import through from",
    "start": "2692120",
    "end": "2698810"
  },
  {
    "text": "bar then one of the places where you should look for something called bar is in the client slash script folder so you",
    "start": "2698810",
    "end": "2704990"
  },
  {
    "text": "go into there and look for it and that's what that would do so typescript has come a long way but",
    "start": "2704990",
    "end": "2712210"
  },
  {
    "text": "most projects where I have to do any amount of typescript or JavaScript I'll have the project open in two editors",
    "start": "2712210",
    "end": "2718610"
  },
  {
    "text": "visual sphere for c-sharp code and Visual Studio code for typescript and es2015 it was still by far the best",
    "start": "2718610",
    "end": "2725270"
  },
  {
    "text": "editor for typescript and JavaScript code so if you haven't tried Visual Studio code for JavaScript you really",
    "start": "2725270",
    "end": "2732020"
  },
  {
    "text": "should use Visual Studio code for JavaScript it does a much better job and produces fewer false positives than",
    "start": "2732020",
    "end": "2739390"
  },
  {
    "text": "Visual Studio I think of dub-dub-dub root as my bin folder when I'm using typescript so",
    "start": "2739390",
    "end": "2746390"
  },
  {
    "text": "where do I compile things where do I output them well place them into dub-dub-dub route although bundled and",
    "start": "2746390",
    "end": "2752750"
  },
  {
    "text": "minified stuff it's like so it's like a bin folder for me but for javascript and typescript testing just a quick word on",
    "start": "2752750",
    "end": "2763420"
  },
  {
    "text": "how many test projects should you have so I've worked on projects where there's a web project and a core project and you",
    "start": "2763420",
    "end": "2769910"
  },
  {
    "text": "know some stats calculation project all these things that are separated out and people will say hey we need a test",
    "start": "2769910",
    "end": "2775700"
  },
  {
    "text": "project per production project what to me is crazy because now I have to go",
    "start": "2775700",
    "end": "2781220"
  },
  {
    "text": "looking everywhere for tasks to me a project typically when I want to create a new project is because I want to",
    "start": "2781220",
    "end": "2787220"
  },
  {
    "text": "create a new unit of deployment or I want to deploy that code differently than lock code that's in other projects",
    "start": "2787220",
    "end": "2792670"
  },
  {
    "text": "and to meet unit tests don't have to be deployed you just have to execute them so if you want to put the unit tests for",
    "start": "2792670",
    "end": "2799190"
  },
  {
    "text": "three different projects that are part of a system on the same test project that's fine I like using X unit",
    "start": "2799190",
    "end": "2806930"
  },
  {
    "text": "there's various options now for dotnet core but I still feel that X unit has the is the best test Runner and the best",
    "start": "2806930",
    "end": "2813320"
  },
  {
    "text": "test language for writing unit tests so it's lo ceremony has a good vocabulary",
    "start": "2813320",
    "end": "2819050"
  },
  {
    "text": "and it's my preferred testing framework I try very hard to avoid mom so I'll tell you a little story about how this",
    "start": "2819050",
    "end": "2825800"
  },
  {
    "text": "came around I started trying to do test-driven development around 2004 and I did it the traditional way so write",
    "start": "2825800",
    "end": "2831470"
  },
  {
    "text": "the test before you write the code then you do red green factor and follow all those steps did that for years and then",
    "start": "2831470",
    "end": "2837620"
  },
  {
    "text": "I felt like I got to the point where I was comfortable writing testing code without necessarily writing the test",
    "start": "2837620",
    "end": "2843140"
  },
  {
    "text": "first so yeah I started not following that as religiously and that was fine things still turned out fine but I was",
    "start": "2843140",
    "end": "2849260"
  },
  {
    "text": "still trying to think about unit tests how do you unit test a controller well the only way to unit tests is to make",
    "start": "2849260",
    "end": "2856010"
  },
  {
    "text": "sure you isolate that controller so it's not working with any of your real production services so you're giving it",
    "start": "2856010",
    "end": "2861440"
  },
  {
    "text": "fakes or stubs or mocks to that controller and then you know what's",
    "start": "2861440",
    "end": "2866810"
  },
  {
    "text": "writing a lot of code but it seemed to work pretty decent for c-sharp anyway then first big angularjs project came",
    "start": "2866810",
    "end": "2875030"
  },
  {
    "text": "along and I tried to follow that same philosophy angularjs controller how am I getting unit tested well I'm gonna fake",
    "start": "2875030",
    "end": "2882140"
  },
  {
    "text": "out and mock out all the services that get passed into that controller so me and a couple other people on this team",
    "start": "2882140",
    "end": "2888200"
  },
  {
    "text": "we had this huge huge pile of unit tests for our angular controllers and it was so frustrating because every release",
    "start": "2888200",
    "end": "2894800"
  },
  {
    "text": "something would break unit tests would pass something would break and that's when I realized that trying to mock up",
    "start": "2894800",
    "end": "2902270"
  },
  {
    "text": "things create mock services and write the unit test you're just programming in",
    "start": "2902270",
    "end": "2907930"
  },
  {
    "text": "expectations to your unit test that it should behave the way you think it should which is not really what I went",
    "start": "2907930",
    "end": "2914180"
  },
  {
    "text": "out out of the unit's house so I started using this different approach on that angularjs project and years ago and I",
    "start": "2914180",
    "end": "2921200"
  },
  {
    "text": "said look what if we didn't mock any service except HTTP what if we wrote",
    "start": "2921200",
    "end": "2926270"
  },
  {
    "text": "tasks that called into the controller and if the controller called into the service that called another service that",
    "start": "2926270",
    "end": "2931730"
  },
  {
    "text": "eventually did an HTTP call what if it went the whole way to the HTTP layer and we just mocked out the data at the HTTP",
    "start": "2931730",
    "end": "2938300"
  },
  {
    "text": "layer and what I found was we wrote 30% less test code we actually found bugs",
    "start": "2938300",
    "end": "2944660"
  },
  {
    "text": "when people checked in bugs into the project before they got to production and all of a sudden it just kind of",
    "start": "2944660",
    "end": "2949940"
  },
  {
    "text": "changed my view on a lot that year and I started thinking when I write a test now I'm not",
    "start": "2949940",
    "end": "2956559"
  },
  {
    "text": "necessarily going to think of it as a unit test you know traditionally traditionally at least to me a unit test",
    "start": "2956559",
    "end": "2961690"
  },
  {
    "text": "the reason we wanted to isolate things so if someone checked in a bug out of some low-level system component that it",
    "start": "2961690",
    "end": "2967540"
  },
  {
    "text": "didn't break all 1,000 or 200 or five unit tests that are in the project it only hit you know an isolated area of my",
    "start": "2967540",
    "end": "2974770"
  },
  {
    "text": "unit test that was testing that feature but to me it's not worth it",
    "start": "2974770",
    "end": "2980799"
  },
  {
    "text": "I would rather write let's say ten lines of test code that could fail for any",
    "start": "2980799",
    "end": "2987280"
  },
  {
    "text": "number of reasons inside of the system because to me that's still an effective test it provides a lot of value for me",
    "start": "2987280",
    "end": "2992799"
  },
  {
    "text": "and I only had to write ten lines of code and I didn't have to mock a bunch of stuff up where am I going with this",
    "start": "2992799",
    "end": "2998349"
  },
  {
    "text": "well it turns out with asp.net core there's a couple interesting things you can do one if you look in the Microsoft",
    "start": "2998349",
    "end": "3003660"
  },
  {
    "text": "repositories you'll see they have a nougat specifically when they write unit tests like how do they test middleware or the useless thing called the asp.net",
    "start": "3003660",
    "end": "3010440"
  },
  {
    "text": "core test host the asp.net court éstos kind of like the thing we used to do with web api a few years ago where you",
    "start": "3010440",
    "end": "3016680"
  },
  {
    "text": "could host the web api in memory the asp.net core test host provides me an",
    "start": "3016680",
    "end": "3021990"
  },
  {
    "text": "API where I can say let's create an application with this startup and this middleware and these services and then",
    "start": "3021990",
    "end": "3028859"
  },
  {
    "text": "send requests into it that don't actually travel over the network so everything happens inside of memory and you can find tests inside of the",
    "start": "3028859",
    "end": "3035369"
  },
  {
    "text": "micropyle microsoft repository that look like this let's create a server so behind-the-scenes that's using this test",
    "start": "3035369",
    "end": "3041790"
  },
  {
    "text": "host and we're going to pass in some options for the cookie authentication services that the login password be here",
    "start": "3041790",
    "end": "3049160"
  },
  {
    "text": "we're going to send off HTTP messages to that server they're just really traveling through memory and it's gonna",
    "start": "3049160",
    "end": "3056549"
  },
  {
    "text": "go the whole way through the system it's gonna travel through all my little ware use services that are configured in there and I'm gonna see that it comes",
    "start": "3056549",
    "end": "3062309"
  },
  {
    "text": "out with the status code and this header and so forth another example excuse me",
    "start": "3062309",
    "end": "3069329"
  },
  {
    "text": "down here at the bottom create a server use that server to create a client and",
    "start": "3069329",
    "end": "3074849"
  },
  {
    "text": "use that client to send off a get request here I just want to make sure I get back a status code to me those three",
    "start": "3074849",
    "end": "3080940"
  },
  {
    "text": "lines are beautiful because of those three lines if that test passes successfully I have a higher degree of confidence",
    "start": "3080940",
    "end": "3087539"
  },
  {
    "text": "that the system is going to work versus having 20 tests one that isolates the",
    "start": "3087539",
    "end": "3094229"
  },
  {
    "text": "logger and one that isolates the middleware and so forth but this is my personal philosophy and opinion you can",
    "start": "3094229",
    "end": "3101609"
  },
  {
    "text": "differ so where can you mock things out well again I like mocking things out of",
    "start": "3101609",
    "end": "3107670"
  },
  {
    "text": "the data layer so you have to have the abilities to switch abstractions between let's say something that talks to cosmos",
    "start": "3107670",
    "end": "3114089"
  },
  {
    "text": "DB or MongoDB was something that just holds data in memory and if you're using",
    "start": "3114089",
    "end": "3119789"
  },
  {
    "text": "entity framework and to be framework or actually has this thing called the in-memory provider so it simulates sequel server or simulates a database",
    "start": "3119789",
    "end": "3126450"
  },
  {
    "text": "just by holding data in memory and no it's not going to catch errors like we've tried to insert records with",
    "start": "3126450",
    "end": "3133319"
  },
  {
    "text": "duplicate primary keys it doesn't enforce database constraints but it is a mock or a fake data layer that if I",
    "start": "3133319",
    "end": "3139769"
  },
  {
    "text": "configure that entity framework to be in memory I can use all the rest of my services inside of an application with",
    "start": "3139769",
    "end": "3145589"
  },
  {
    "text": "that test host and fire off request just do something like save this new user or save this invoice or edit something",
    "start": "3145589",
    "end": "3151890"
  },
  {
    "text": "everything happens in memory and I have basically an integration test but it's not an integration test where I have to",
    "start": "3151890",
    "end": "3158099"
  },
  {
    "text": "mess around with the UI it's an integration task that goes through all my middle where all my services exercises everything right up to the",
    "start": "3158099",
    "end": "3164460"
  },
  {
    "text": "actual database layer and to me that means writing a lot less test code and",
    "start": "3164460",
    "end": "3170400"
  },
  {
    "text": "having better bang for the buck for the number of lines of test code that I have",
    "start": "3170400",
    "end": "3175499"
  },
  {
    "text": "so using the EF core in memory provider pretty straightforward just have to say to use an in-memory database and follow",
    "start": "3175499",
    "end": "3182910"
  },
  {
    "text": "a couple constraints when you're instantiating this thing and that's good so more integration tests fewer unit",
    "start": "3182910",
    "end": "3190829"
  },
  {
    "text": "tasks that's kind of my current motto for some scenarios for some scenarios not everywhere but heavy business logic",
    "start": "3190829",
    "end": "3198359"
  },
  {
    "text": "I still like to isolate and test that have specific unit tests for that but to",
    "start": "3198359",
    "end": "3203400"
  },
  {
    "text": "me not having to test a controller in isolation as beautiful because most controllers are let's face it relatively",
    "start": "3203400",
    "end": "3210210"
  },
  {
    "text": "simple I would rather test all the middleware and the controller and everything down to the database layer",
    "start": "3210210",
    "end": "3216529"
  },
  {
    "text": "c-sharp code so one of the things that people are doing with asp.net core of realize if they're taking the advantage",
    "start": "3216940",
    "end": "3222650"
  },
  {
    "text": "that asp.net core can execute on Linux and so when they deploy they picked",
    "start": "3222650",
    "end": "3227780"
  },
  {
    "text": "Linux VMs or Linux app services and they save 20 to 30 percent on that server because they're not paying for the",
    "start": "3227780",
    "end": "3233359"
  },
  {
    "text": "Windows license but there's always a little hiccup some little hiccups so some things that we have run into and I",
    "start": "3233359",
    "end": "3238640"
  },
  {
    "text": "should back up and say if you're gonna do that if you're going so to me one let's talk about docker for a second to",
    "start": "3238640",
    "end": "3244550"
  },
  {
    "text": "me one of the advantages of using docker containers is that I can develop on my",
    "start": "3244550",
    "end": "3250160"
  },
  {
    "text": "machine which is Windows but I'm executing code that is in the production",
    "start": "3250160",
    "end": "3255950"
  },
  {
    "text": "environment which is Linux and there's a big advantage to that because I can catch problems sooner so I think in some",
    "start": "3255950",
    "end": "3262700"
  },
  {
    "text": "sense problems like this so just the",
    "start": "3262700",
    "end": "3268280"
  },
  {
    "text": "littlest things bite you and c-sharp code you hard code new lines into an application but new lines are really",
    "start": "3268280",
    "end": "3275119"
  },
  {
    "text": "different on Linux and Mac versus Windows so instead of hard-coding / r / r / n use environment new line it's",
    "start": "3275119",
    "end": "3284420"
  },
  {
    "text": "amazing how many people hard code paths right so I need to build the path to",
    "start": "3284420",
    "end": "3289450"
  },
  {
    "text": "slash users slash temp slash and then I have the filename or I have some base",
    "start": "3289450",
    "end": "3295369"
  },
  {
    "text": "holder name that's configurable and then I have my file name how do I put them together well I could just use this",
    "start": "3295369",
    "end": "3300560"
  },
  {
    "text": "string plus slash the string except that slash right it's different on Linux vs.",
    "start": "3300560",
    "end": "3306200"
  },
  {
    "text": "Windows the proper way to do that use path not combine also be aware that",
    "start": "3306200",
    "end": "3311329"
  },
  {
    "text": "environment variable names can be different between the two environments so those are the types of little things",
    "start": "3311329",
    "end": "3316520"
  },
  {
    "text": "that you can catch if you're using docker to actually develop on Linux and then finally me personally I despise the",
    "start": "3316520",
    "end": "3324230"
  },
  {
    "text": "async suffix on methods I think having the word async here and having that word",
    "start": "3324230",
    "end": "3331099"
  },
  {
    "text": "async here is just too much icing so even though the Microsoft recommendation is that async Russia methods should have",
    "start": "3331099",
    "end": "3337640"
  },
  {
    "text": "the async suffix I don't do that and to me I felt justified when I read this quote from the inventor of C++ he said",
    "start": "3337640",
    "end": "3345290"
  },
  {
    "text": "for new features people insist on loud explicit scent I said yeah when a sink first came",
    "start": "3345290",
    "end": "3351130"
  },
  {
    "text": "around it was scary so we're just gonna use the async word everywhere make sure people are aware this is a sink but now",
    "start": "3351130",
    "end": "3357760"
  },
  {
    "text": "it's an established feature people want a terse notation and I think I I personally have reached that point I",
    "start": "3357760",
    "end": "3363190"
  },
  {
    "text": "wish we could just have everything be a sync by default and not even have those key words there but that's pipe dream so",
    "start": "3363190",
    "end": "3370359"
  },
  {
    "text": "I think it's fine that's used at you sink suffix but you can differ with me",
    "start": "3370359",
    "end": "3375520"
  },
  {
    "text": "and that's all I have for you I thank you for attending this is my email address if you have some questions I",
    "start": "3375520",
    "end": "3381220"
  },
  {
    "text": "think we're out of time I'll hang out and answer questions have a good afternoon thank you",
    "start": "3381220",
    "end": "3388710"
  },
  {
    "text": "[Applause]",
    "start": "3388790",
    "end": "3394520"
  }
]