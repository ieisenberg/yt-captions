[
  {
    "text": "i suppose we should start because it's now 142 right",
    "start": "7839",
    "end": "13920"
  },
  {
    "text": "okay hi everybody how's it going",
    "start": "13920",
    "end": "20400"
  },
  {
    "text": "i'm gonna go to ndc first first one in australia how's it going",
    "start": "20400",
    "end": "25680"
  },
  {
    "text": "so i've been to a bunch of the ndc events um they're all they're all really well done um and so far this is no",
    "start": "25680",
    "end": "31840"
  },
  {
    "text": "different this is this is going great um how many of you are javascript developers",
    "start": "31840",
    "end": "38399"
  },
  {
    "text": "how many of you are just forced to write javascript but you're really you know you'd rather",
    "start": "39360",
    "end": "44800"
  },
  {
    "text": "not that's really that's really most of us right like when you have a choice",
    "start": "44800",
    "end": "51199"
  },
  {
    "text": "how many people just choose javascript even when you have other options unfortunately we don't have a lot of",
    "start": "51199",
    "end": "56960"
  },
  {
    "text": "other options especially if you want to do like highly interactive sites in the web so that's what this talk is about this",
    "start": "56960",
    "end": "62960"
  },
  {
    "text": "talk is about your web applications the stuff that you're building and how it's eventually going to break in the hands",
    "start": "62960",
    "end": "70000"
  },
  {
    "text": "of your customers this talk is called javascript's most wanted and it's about outlaws it's about",
    "start": "70000",
    "end": "78159"
  },
  {
    "text": "the javascript errors that happen in production for your real customers even when you",
    "start": "78159",
    "end": "83360"
  },
  {
    "text": "don't you never emerge during testing even when all of your developers and all of your",
    "start": "83360",
    "end": "89040"
  },
  {
    "text": "qa staff if you have them never expose stuff but crazy stuff happens when you",
    "start": "89040",
    "end": "94159"
  },
  {
    "text": "actually put something into production on the real internet the internet in a lot of ways is still",
    "start": "94159",
    "end": "101360"
  },
  {
    "text": "the wild wild web it is as crockford says the most hostile development environment imaginable",
    "start": "101360",
    "end": "108640"
  },
  {
    "text": "because javascript itself is kind of hard there's a lot of complexity just in",
    "start": "108640",
    "end": "114479"
  },
  {
    "text": "javascript as a language and then we add on top of that that we're going to take this javascript",
    "start": "114479",
    "end": "120640"
  },
  {
    "text": "application that we've built and we're going to ship it down over an internet that is",
    "start": "120640",
    "end": "126640"
  },
  {
    "text": "as you well know not always very reliable honestly in the last few days i've come",
    "start": "126640",
    "end": "132640"
  },
  {
    "text": "to new realization on how unreliable it can be accessing it from from this part of the",
    "start": "132640",
    "end": "138080"
  },
  {
    "text": "world i'm sorry",
    "start": "138080",
    "end": "144160"
  },
  {
    "text": "so you take this javascript app and you try and shove it down these pipes across this internet into a browser environment",
    "start": "145760",
    "end": "151760"
  },
  {
    "text": "that you also don't control you're trying to just build an application that will run in your customers browser that maybe you built",
    "start": "151760",
    "end": "158800"
  },
  {
    "text": "it in chrome but they're running it in ie9 does it work should it work maybe not",
    "start": "158800",
    "end": "165680"
  },
  {
    "text": "only are they running it in some old version of a browser but they've put a bunch of gunk into it they've asked",
    "start": "165680",
    "end": "171360"
  },
  {
    "text": "toolbar malware is injecting ads into your page or they have an ad blocker that's stripping out a bunch of",
    "start": "171360",
    "end": "177040"
  },
  {
    "text": "analytics services and does your app still work when all of the analytics services are gone there's so much that's",
    "start": "177040",
    "end": "183519"
  },
  {
    "text": "going to break when we actually get into the real world and so that's what we're going to do today is we're going to talk about",
    "start": "183519",
    "end": "189920"
  },
  {
    "text": "six of the most common errors that i see happening in production apps",
    "start": "189920",
    "end": "196319"
  },
  {
    "text": "how do they manifest themselves how do we see them in reporting tools how do we diagnose them we're going to",
    "start": "196319",
    "end": "202959"
  },
  {
    "text": "open them up live in chrome debugger and we are going to diagnose fix them and show you how you can",
    "start": "202959",
    "end": "209200"
  },
  {
    "text": "prevent these things from happening in the future sound good awesome",
    "start": "209200",
    "end": "214799"
  },
  {
    "text": "so in order to like expose these bugs we need",
    "start": "214799",
    "end": "220080"
  },
  {
    "text": "a honeypot we need something for these outlaws to attack and so i built this app for all these",
    "start": "220080",
    "end": "226720"
  },
  {
    "text": "outlaws to come out and i want to show it to you it's called soliloquy so soliloquy is this thing i've been",
    "start": "226720",
    "end": "231840"
  },
  {
    "text": "working on it's what i call an anti-social network",
    "start": "231840",
    "end": "238080"
  },
  {
    "text": "it's kind of like twitter so just like twitter you can type in you know narcissistic",
    "start": "238080",
    "end": "244720"
  },
  {
    "text": "thoughts about yourself and what you're doing and just like twitter those will show up here in a timeline that you can look",
    "start": "244720",
    "end": "250879"
  },
  {
    "text": "over and just like twitter i have annoying inline ads that are injected into those",
    "start": "250879",
    "end": "256239"
  },
  {
    "text": "timeline and i have some amazing sponsors already from from cats",
    "start": "256239",
    "end": "261519"
  },
  {
    "text": "and bacon more bacon and uh and mr dundee",
    "start": "261519",
    "end": "268080"
  },
  {
    "text": "and so i have all of these things coming in that's just like twitter but unlike twitter",
    "start": "268080",
    "end": "273199"
  },
  {
    "text": "i've left out one of the most annoying things other people",
    "start": "273199",
    "end": "279120"
  },
  {
    "text": "because with soliloquy it's all about you only you can write status updates and",
    "start": "279120",
    "end": "285040"
  },
  {
    "text": "only you can see your status updates right so this soliloquy is going it's going to be huge right if anybody here",
    "start": "285040",
    "end": "292080"
  },
  {
    "text": "is you know venture capitalist get your term sheets ready like this thing is going to be amazing",
    "start": "292080",
    "end": "299840"
  },
  {
    "text": "but i want to make sure that soliloquy uh has has a really great user experience i want people who are using",
    "start": "299840",
    "end": "306080"
  },
  {
    "text": "this to have a good time when they're doing it and make sure it doesn't have any errors",
    "start": "306080",
    "end": "311280"
  },
  {
    "text": "none of the outlaws attack and so in order to do that i'm going to protect soliloquy with another thing that i work",
    "start": "311280",
    "end": "316560"
  },
  {
    "text": "on which is track js so track js is a javascript error monitoring tool",
    "start": "316560",
    "end": "322639"
  },
  {
    "text": "that helps us understand when things are gonna go uh wrong uh and we're gonna show just a little bit about that but this isn't really",
    "start": "322639",
    "end": "328639"
  },
  {
    "text": "about that what track gs does this is the entirety of the sales pitch is we capture really",
    "start": "328639",
    "end": "333759"
  },
  {
    "text": "detailed error reports about like how did a user get into this situation what were they entering what were they",
    "start": "333759",
    "end": "339440"
  },
  {
    "text": "clicking on what kind of things were happening in the console that led to an error so that we can give people really detailed error reports",
    "start": "339440",
    "end": "346320"
  },
  {
    "text": "and i wrote it so like if you want to know more about it we can talk later so let's get into actually a real error",
    "start": "346320",
    "end": "354639"
  },
  {
    "text": "so here's our first wanted poster this is our most wanted and this is an outlier called scripty",
    "start": "354639",
    "end": "360400"
  },
  {
    "text": "joe how many people have run into scripty joe",
    "start": "360400",
    "end": "366160"
  },
  {
    "text": "script air this is the most common error that has ever been reported into track js or any",
    "start": "366160",
    "end": "373360"
  },
  {
    "text": "time i've worked with a production app so what happens with scripty joe",
    "start": "373360",
    "end": "380080"
  },
  {
    "text": "just launched the look we not that long ago and we only get about 2 400 hits a week",
    "start": "380080",
    "end": "386880"
  },
  {
    "text": "and script air happened right away as soon as we launched 2400 times the scripture happened and it didn't just",
    "start": "386880",
    "end": "392639"
  },
  {
    "text": "affect like one-off browsers it didn't affect just you know ie10 or whatever this is affecting everything this is",
    "start": "392639",
    "end": "398960"
  },
  {
    "text": "affecting recent versions of tons of different browsers",
    "start": "398960",
    "end": "404400"
  },
  {
    "text": "across the board so let's let's take a look at soliloquy itself and we'll look at some code we'll see if we can diagnose what's going",
    "start": "404400",
    "end": "410479"
  },
  {
    "text": "wrong",
    "start": "410479",
    "end": "412720"
  },
  {
    "text": "all right so here it is let's pop open the dev tools and see what we can see",
    "start": "419039",
    "end": "423840"
  },
  {
    "text": "maybe we should look at the code first so here is here is the code of soliloquy i trust",
    "start": "425360",
    "end": "431840"
  },
  {
    "text": "you all have signed your non-disclosure agreements under your chairs right good all right we'll move on",
    "start": "431840",
    "end": "438800"
  },
  {
    "text": "uh so here's the here's the code backing soliloquy and it's not it's not all that complex but one of the things we need to do is",
    "start": "438800",
    "end": "445199"
  },
  {
    "text": "we need to capture these errors that are happening in our app and show and send them back to my server so that",
    "start": "445199",
    "end": "451199"
  },
  {
    "text": "we can like see what's going wrong and one of the ways you could do that was with track.js but for the purpose of this demo we're going to do this right",
    "start": "451199",
    "end": "457520"
  },
  {
    "text": "here so window.on error if you're not familiar with it is this function that's",
    "start": "457520",
    "end": "462720"
  },
  {
    "text": "existed since the very beginning of javascript in the browser and it allows you to basically attach a",
    "start": "462720",
    "end": "468240"
  },
  {
    "text": "function to get any unhandled error that happens on the page it'll just dump into this function and",
    "start": "468240",
    "end": "474240"
  },
  {
    "text": "you can do stuff with it and so what i'm doing is i'm just going to push it in the console so that we can see it and so what this is going to show",
    "start": "474240",
    "end": "481039"
  },
  {
    "text": "us is what is available to us programmatically when an error happens what can we see about it",
    "start": "481039",
    "end": "488240"
  },
  {
    "text": "it will go the console but in a slightly different way and that's what we're going to show i'm going to show you right now so if we pop this open and reload the",
    "start": "489840",
    "end": "496639"
  },
  {
    "text": "page we see some errors on soliloquy now the second error",
    "start": "496639",
    "end": "503199"
  },
  {
    "text": "is this big enough is this too small for anybody all right good so this second error is this uncaught",
    "start": "503199",
    "end": "509680"
  },
  {
    "text": "reference error now this is like a real error this is this is informational but",
    "start": "509680",
    "end": "515200"
  },
  {
    "text": "this isn't javascript telling us this that's chrome telling us that chrome",
    "start": "515200",
    "end": "520560"
  },
  {
    "text": "operating at a different level of abstraction it's actually telling us real data what's available to us programmatically",
    "start": "520560",
    "end": "527360"
  },
  {
    "text": "that we could actually like send back to our servers or dump into a log or try and do something with it is",
    "start": "527360",
    "end": "533120"
  },
  {
    "text": "this right here is this this array programmatically we think there's a",
    "start": "533120",
    "end": "538399"
  },
  {
    "text": "script error we don't know the file we don't know the line",
    "start": "538399",
    "end": "543839"
  },
  {
    "text": "we don't know the column and we don't know anything about it it's just your stuff's broken dude that's that's",
    "start": "543839",
    "end": "551040"
  },
  {
    "text": "all we know of course like it's a real error but it's being hidden from us so why is it",
    "start": "551040",
    "end": "557440"
  },
  {
    "text": "hiding it from us so what's interesting about this is that this the underlying error is coming from",
    "start": "557440",
    "end": "562480"
  },
  {
    "text": "this file called the sidebar ad provider and what's interesting about the sidebar",
    "start": "562480",
    "end": "567920"
  },
  {
    "text": "ad provider in this case is not necessarily even what's in it but where is it coming from",
    "start": "567920",
    "end": "575560"
  },
  {
    "text": "the main app where i'm coming where soliloquy is coming from right now is a domain called www.soliloquy.local",
    "start": "576800",
    "end": "584360"
  },
  {
    "text": "but this file this sidebar ad provider is being served from somewhere else it's coming from this place called",
    "start": "585040",
    "end": "591279"
  },
  {
    "text": "ads.local which is a different origin so the brow how many people have heard",
    "start": "591279",
    "end": "597200"
  },
  {
    "text": "the term same origin policy that's what we're dealing with right here part of the same origin policy is",
    "start": "597200",
    "end": "604079"
  },
  {
    "text": "trying to protect information from leaking between origins one of the ways information can leak is",
    "start": "604079",
    "end": "610959"
  },
  {
    "text": "in an error and so because sidebar ad provider is in a different",
    "start": "610959",
    "end": "616320"
  },
  {
    "text": "origin than the rest of the page chrome is trying to protect it and say hey i'm not actually going to reveal any",
    "start": "616320",
    "end": "622959"
  },
  {
    "text": "details about this thing i'm going to strip everything out of this air and say something broke you've got to go figure",
    "start": "622959",
    "end": "629040"
  },
  {
    "text": "it out yourself and so that is the actual origin or",
    "start": "629040",
    "end": "634320"
  },
  {
    "text": "the browser origin is the origin of script error but there's a way we can get around it",
    "start": "634320",
    "end": "639680"
  },
  {
    "text": "um so sidebar add provider is coming from this other origin but we can tell the browser to go ahead and trust",
    "start": "639680",
    "end": "644880"
  },
  {
    "text": "origins and let that information cross and we do that with cross origin resource sharing or cores",
    "start": "644880",
    "end": "651519"
  },
  {
    "text": "you may be familiar with cores if you use like uh do ajax calls to different domains if",
    "start": "651519",
    "end": "657680"
  },
  {
    "text": "you're integrating with third-party apis that's typically where course comes in but it's also",
    "start": "657680",
    "end": "662720"
  },
  {
    "text": "really useful in this case because when you take a javascript file and you serve it with the cores headers",
    "start": "662720",
    "end": "670399"
  },
  {
    "text": "like i'm doing here",
    "start": "670480",
    "end": "674120"
  },
  {
    "text": "like i'm doing here access control allow headers and access control allow origin these are the http",
    "start": "679600",
    "end": "686079"
  },
  {
    "text": "headers that come from cores or cross-origin resource sharing and what this is doing is because the web server",
    "start": "686079",
    "end": "693120"
  },
  {
    "text": "is serving this file with these headers it's saying hey you can go ahead and use this anywhere i don't mind it's it's",
    "start": "693120",
    "end": "699040"
  },
  {
    "text": "cool you can we don't need to hide this information and so we're already doing that so we've done half of the problem",
    "start": "699040",
    "end": "705920"
  },
  {
    "text": "but now we need to tell the browser that our page also trusts that file both sides need to trust to make sure that",
    "start": "705920",
    "end": "712959"
  },
  {
    "text": "works so there's a really cool way you can do that and it's fairly new inside the html spec",
    "start": "712959",
    "end": "720000"
  },
  {
    "text": "so here's all of the script files coming in to soliloquy and you can see that like",
    "start": "720720",
    "end": "725760"
  },
  {
    "text": "they're all coming from different places right nothing is actually coming from dub dub",
    "start": "725760",
    "end": "731440"
  },
  {
    "text": "dub dot soliloquy i have a bunch of like my files coming in from a cdn which a lot of people do for like performance",
    "start": "731440",
    "end": "737279"
  },
  {
    "text": "reasons and then i have a couple of different files coming in from ads.local and so i would have script air all over",
    "start": "737279",
    "end": "744000"
  },
  {
    "text": "my app anytime anything goes wrong it's guaranteed to be on a different origin right now because that's where all of my",
    "start": "744000",
    "end": "749200"
  },
  {
    "text": "scripts are coming from and so script air would be all over this app but we can get around",
    "start": "749200",
    "end": "756079"
  },
  {
    "text": "that by they're already being served with course headers and now we just need to tell the browser to trust these",
    "start": "756079",
    "end": "762399"
  },
  {
    "text": "and so we do that by decorating uh these script tags with cross origin",
    "start": "762399",
    "end": "767519"
  },
  {
    "text": "anonymous which is new inside the spec and what this tells the browser to do is when",
    "start": "767519",
    "end": "772560"
  },
  {
    "text": "we're loading this file look for those course headers if those chorus headers are there",
    "start": "772560",
    "end": "778160"
  },
  {
    "text": "same origin policy doesn't apply anymore we're good to go we trust this file both sides trust it and we're good to go so",
    "start": "778160",
    "end": "784480"
  },
  {
    "text": "i'm just going to copy and paste this little this guy down",
    "start": "784480",
    "end": "789440"
  },
  {
    "text": "and if we reload our page here we can see that we actually haven't fixed the error itself right we haven't",
    "start": "792720",
    "end": "800160"
  },
  {
    "text": "changed anything however what we're able to get now is real data so programmatically we now know that a",
    "start": "800160",
    "end": "807600"
  },
  {
    "text": "bunch of our users are having this uncaught reference error this coming from sidebar ad provider on line 20",
    "start": "807600",
    "end": "813680"
  },
  {
    "text": "column 16 with a stack trace and so by putting this little change",
    "start": "813680",
    "end": "819519"
  },
  {
    "text": "we're able to get a round script there and actually start addressing some real problems in our app",
    "start": "819519",
    "end": "825199"
  },
  {
    "text": "and so this was scripty joe scripty pro comes from browser obfuscation due to the same origin",
    "start": "825199",
    "end": "832240"
  },
  {
    "text": "policy and it's really noisy if you start capturing javascript errors from production on your apps this is going to",
    "start": "832240",
    "end": "839760"
  },
  {
    "text": "be one of the first things you run against it's going to hide all kinds of good details from you and so you're probably going to have to deal with this",
    "start": "839760",
    "end": "845120"
  },
  {
    "text": "sooner rather than later so there's really two ways you can do it if you have to load from third parties",
    "start": "845120",
    "end": "851120"
  },
  {
    "text": "which if you're using a bunch of services inevitably you'll you'll have to reference something from somewhere the way to do it is with cores",
    "start": "851120",
    "end": "858000"
  },
  {
    "text": "and cross-origin attributes alternatively just load everything from the same origin and then you don't to",
    "start": "858000",
    "end": "863279"
  },
  {
    "text": "deal with this problem that's of course a performance trade-off you have to deal with whether or not the",
    "start": "863279",
    "end": "868320"
  },
  {
    "text": "advantages of loading from cdns or other parties is worth losing that visibility",
    "start": "868320",
    "end": "874560"
  },
  {
    "text": "so this was our first outlaw it was hiding the other outlaw which is",
    "start": "874560",
    "end": "880160"
  },
  {
    "text": "jane addsy jane adzy is manifesting itself as this area which",
    "start": "880160",
    "end": "885279"
  },
  {
    "text": "we saw a few minutes ago this get random ads is not defined and what's interesting about get random",
    "start": "885279",
    "end": "892000"
  },
  {
    "text": "ads is not defined is that i've been monitoring soliloquy for a little while and you know i was a little i was a",
    "start": "892000",
    "end": "897760"
  },
  {
    "text": "little nervous every time i'm leading up to a talk and so i i don't want to like change anything like we went into code",
    "start": "897760",
    "end": "904000"
  },
  {
    "text": "freeze on soliloquy i didn't want to break it last minute um and so i hadn't checked anything in",
    "start": "904000",
    "end": "909440"
  },
  {
    "text": "for like a couple of weeks but all of a sudden yesterday for no apparent reason",
    "start": "909440",
    "end": "915839"
  },
  {
    "text": "bam my air rate is up 6 000 like what is going on",
    "start": "915839",
    "end": "922560"
  },
  {
    "text": "i didn't change anything you didn't change anything why is this thing blowing up",
    "start": "922560",
    "end": "928639"
  },
  {
    "text": "so let's take a look at soliloquy and see if we can figure out like how how is this breaking and why is this breaking",
    "start": "928639",
    "end": "935759"
  },
  {
    "text": "so now if we take a look at our console here's that same error that was being hidden by by uh by scripty joe before",
    "start": "936720",
    "end": "943040"
  },
  {
    "text": "and let's actually like dig into this a little bit so here chrome is just telling us hey",
    "start": "943040",
    "end": "948240"
  },
  {
    "text": "this is an uncaught reference error get random ad is not defined so it's coming here from from sidebar ad",
    "start": "948240",
    "end": "953440"
  },
  {
    "text": "provider and the chrome dev tools are like really smart and it's basically telling us exactly",
    "start": "953440",
    "end": "959920"
  },
  {
    "text": "where this thing is going wrong it's saying hey we tried to call this function inside of this file",
    "start": "959920",
    "end": "965040"
  },
  {
    "text": "and and we didn't it's not there there is no function called get random ad",
    "start": "965040",
    "end": "970399"
  },
  {
    "text": "so let's let's maybe take a look at this file um",
    "start": "970399",
    "end": "976079"
  },
  {
    "text": "this isn't mine right this isn't part of my app this is something from an advertising provider i",
    "start": "976079",
    "end": "982560"
  },
  {
    "text": "put this thing on my site to try and get ad revenue so i could like monetize my my site",
    "start": "982560",
    "end": "987839"
  },
  {
    "text": "but i didn't write this code so well let's maybe we'll take a copy of it",
    "start": "987839",
    "end": "993759"
  },
  {
    "text": "down locally and we'll see if we can can fix it so this was the um the sidebar ad provider",
    "start": "993759",
    "end": "999440"
  },
  {
    "text": "and it was this line here this line 20 get random ad so we just look around like it's not",
    "start": "999440",
    "end": "1005040"
  },
  {
    "text": "defined let's see if we can find where this is looks like we call it a couple of different places",
    "start": "1005040",
    "end": "1011120"
  },
  {
    "text": "down here at the bottom there's this function called get random ads",
    "start": "1011120",
    "end": "1017440"
  },
  {
    "text": "maybe maybe this was just somebody like who didn't know how to exit vim correctly and",
    "start": "1017440",
    "end": "1023759"
  },
  {
    "text": "you know left a little left a little thing let's let's just try it let's just try it",
    "start": "1023759",
    "end": "1029120"
  },
  {
    "text": "if we make that change and now let's reload oh look no there's no air",
    "start": "1030319",
    "end": "1036000"
  },
  {
    "text": "and look at all these new ads i have now i got even more bacon and and bears",
    "start": "1036000",
    "end": "1042400"
  },
  {
    "text": "and and mr dundee i actually just put dundee into this demo for you",
    "start": "1042400",
    "end": "1050240"
  },
  {
    "text": "usually usually i talk i use david hasselhoff but i felt like this might be",
    "start": "1050480",
    "end": "1055760"
  },
  {
    "text": "better all right so this error was trivial right it was a",
    "start": "1055760",
    "end": "1062160"
  },
  {
    "text": "typo we all make typos i've made lots of typos the problem here is that this was a typo",
    "start": "1062160",
    "end": "1069280"
  },
  {
    "text": "that was introduced beyond any controls that you or your organizations can put",
    "start": "1069280",
    "end": "1075200"
  },
  {
    "text": "can have right you're relying on a third party who is writing javascript that you are",
    "start": "1075200",
    "end": "1081039"
  },
  {
    "text": "injecting into your app at runtime like whenever a user connects to it",
    "start": "1081039",
    "end": "1086480"
  },
  {
    "text": "this is unplanned changes anytime you are bringing in a script from somebody else even if that somebody",
    "start": "1086480",
    "end": "1093120"
  },
  {
    "text": "else is somebody really trustworthy like google or microsoft or twitter or",
    "start": "1093120",
    "end": "1099919"
  },
  {
    "text": "stripe or braintree or a payment provider anytime you're doing it from anybody you are giving control",
    "start": "1099919",
    "end": "1106080"
  },
  {
    "text": "of the runtime experience of your app to another organization and we need to recognize that like we",
    "start": "1106080",
    "end": "1112160"
  },
  {
    "text": "kind of gloss over that fact today but we are introducing the ability for some other team to break our app even",
    "start": "1112160",
    "end": "1119919"
  },
  {
    "text": "when we're not in active development a web app should never not be in maintenance you",
    "start": "1119919",
    "end": "1126799"
  },
  {
    "text": "can never just disband the team and say hey this app is done because the web isn't done the web is still dynamic and",
    "start": "1126799",
    "end": "1132720"
  },
  {
    "text": "it's still injecting stuff and so anytime you're building an app and you're bringing in third party you",
    "start": "1132720",
    "end": "1138000"
  },
  {
    "text": "have to weigh the risk weigh the value of bringing in third parties versus the risk that they're",
    "start": "1138000",
    "end": "1143600"
  },
  {
    "text": "going to create problems in your app downstream compatibility with new browsers etc",
    "start": "1143600",
    "end": "1151440"
  },
  {
    "text": "okay so those were our major blocking errors so now let's get into some stuff that's",
    "start": "1151440",
    "end": "1158080"
  },
  {
    "text": "a little bit more subtle so this is clara context and cleric context reports an error as",
    "start": "1158080",
    "end": "1165360"
  },
  {
    "text": "cannot read a property of undefined and so",
    "start": "1165360",
    "end": "1171440"
  },
  {
    "text": "we're seeing this a lot inside of soliloquy and and one of the things that we're looking at here is that this this",
    "start": "1171440",
    "end": "1177360"
  },
  {
    "text": "error is manifesting as cannot read property destroy of undefined but every time it happens",
    "start": "1177360",
    "end": "1183760"
  },
  {
    "text": "what we what we're seeing in our logs is that immediately before it happens the user is clicking on this button",
    "start": "1183760",
    "end": "1189679"
  },
  {
    "text": "this js-delete dash statement and then this error happens so i think i have enough context that we",
    "start": "1189679",
    "end": "1196240"
  },
  {
    "text": "could like go into soliloquy and see if we can recreate that so let's just refresh this",
    "start": "1196240",
    "end": "1202720"
  },
  {
    "text": "so i happen to know because i wrote it that that js.statement",
    "start": "1202720",
    "end": "1207840"
  },
  {
    "text": "delete button is this little garbage can right here so if we just give this a little refresh",
    "start": "1207840",
    "end": "1215200"
  },
  {
    "text": "and uh if we try and delete one of these statements we see that we printed into the console that we were",
    "start": "1215200",
    "end": "1220960"
  },
  {
    "text": "going to attempt to delete a statement with an id but it blew up uncaught type error cannot reproperty",
    "start": "1220960",
    "end": "1227840"
  },
  {
    "text": "destroy of undefined exactly what we were seeing in our logs so let's see if we can figure out why that's happening",
    "start": "1227840",
    "end": "1233760"
  },
  {
    "text": "so i'm going to just use the chrome tools here and we'll pop open and like take a look at stack trace",
    "start": "1233760",
    "end": "1240400"
  },
  {
    "text": "that's a kind of a terrible stack trace some function that doesn't have a name",
    "start": "1240799",
    "end": "1247840"
  },
  {
    "text": "blew up on statement view js line 30. that's not really that's not really a",
    "start": "1247840",
    "end": "1253600"
  },
  {
    "text": "very cool stack trace i don't really understand anything from that but",
    "start": "1253600",
    "end": "1259360"
  },
  {
    "text": "recently in the let well not recently maybe 12 18 months ago",
    "start": "1259360",
    "end": "1265440"
  },
  {
    "text": "chrome shipped with a new a feature that's off by default but it's",
    "start": "1265440",
    "end": "1270640"
  },
  {
    "text": "it's really cool so if you go and look in the sources tab where you look at all this code",
    "start": "1270640",
    "end": "1277039"
  },
  {
    "text": "there's this little check box down here called async",
    "start": "1277039",
    "end": "1282320"
  },
  {
    "text": "now this is amazing so javascript is an async language so much of the stuff that we do with",
    "start": "1282320",
    "end": "1288720"
  },
  {
    "text": "javascript is we're setting up functions to be called back later",
    "start": "1288720",
    "end": "1293919"
  },
  {
    "text": "do something later when the user dot when the user clicks on this do something later when the network is done",
    "start": "1293919",
    "end": "1299679"
  },
  {
    "text": "do something later after a timeout has occurred but whenever we set up these things we lose context because the all of the code",
    "start": "1299679",
    "end": "1307760"
  },
  {
    "text": "that we were setting up our application and deciding what callbacks to attach",
    "start": "1307760",
    "end": "1313360"
  },
  {
    "text": "stops and then we wait for users to interact or networks to complete and then starts back up and we lose all the",
    "start": "1313360",
    "end": "1321120"
  },
  {
    "text": "context all the logic about what functions we're executing we lose in those asynchronous boundaries we don't",
    "start": "1321120",
    "end": "1327600"
  },
  {
    "text": "know why or we we know what blew up inside of a callback but we don't know what",
    "start": "1327600",
    "end": "1333360"
  },
  {
    "text": "attached that callback and why and that's what this async checkbox does",
    "start": "1333360",
    "end": "1338880"
  },
  {
    "text": "so i'm going to click it and it's going to be amazing so we're going to refresh this and we're going to do the exact same thing here",
    "start": "1338880",
    "end": "1344960"
  },
  {
    "text": "again i'm going to try and delete this statement this time we have async stack traces turned on",
    "start": "1344960",
    "end": "1351520"
  },
  {
    "text": "i'm going to delete it still don't have this problem fixed let's pop open and take a look at the stack trace now though",
    "start": "1351520",
    "end": "1358840"
  },
  {
    "text": "bam that's awesome all right so we still have this same line this is what blew up",
    "start": "1358840",
    "end": "1364559"
  },
  {
    "text": "an anonymous function on statement view js line 30. what we know is that that anonymous",
    "start": "1364559",
    "end": "1371200"
  },
  {
    "text": "function was passed in a callback to set timeout and that set timeout was called inside",
    "start": "1371200",
    "end": "1377840"
  },
  {
    "text": "of a function that actually has a name called on delete which is also on statement view js",
    "start": "1377840",
    "end": "1383840"
  },
  {
    "text": "we know that on delete was called by a dispatch thing from jquery and an event",
    "start": "1383840",
    "end": "1389280"
  },
  {
    "text": "handle which is kind of enough to know that like hey there was some event that happened jquery was wrapping up an event",
    "start": "1389280",
    "end": "1395120"
  },
  {
    "text": "and i'd said hey handle this event with on delete on delete said hey i got to do stuff",
    "start": "1395120",
    "end": "1400400"
  },
  {
    "text": "later i'm going to pass this thing into into set timeout and that's what blew up and now i haven't even looked at code",
    "start": "1400400",
    "end": "1405919"
  },
  {
    "text": "yet and i have way better context of what happened because i can see this history",
    "start": "1405919",
    "end": "1412320"
  },
  {
    "text": "so let's take a look at statement view js line 30 and see if we can actually uh get to the bottom of it",
    "start": "1412320",
    "end": "1419520"
  },
  {
    "text": "so this uh soliloquy happens to be written in backbone which i know is like an ancient you know framework in you",
    "start": "1423279",
    "end": "1428559"
  },
  {
    "text": "know javascript terms but like it doesn't really matter at this point we're just talking about raw javascript",
    "start": "1428559",
    "end": "1434240"
  },
  {
    "text": "so let's take a look at this on delete function here's here's line 30.",
    "start": "1434240",
    "end": "1439600"
  },
  {
    "text": "give you a moment to digest that",
    "start": "1440000",
    "end": "1444200"
  },
  {
    "text": "has anybody spotted the problem yeah",
    "start": "1446480",
    "end": "1452640"
  },
  {
    "text": "this this is the most common error in javascript",
    "start": "1452640",
    "end": "1460559"
  },
  {
    "text": "even for very experienced people like myself i make this error all the",
    "start": "1460559",
    "end": "1465840"
  },
  {
    "text": "time still we're passing a function into a callback",
    "start": "1465840",
    "end": "1471440"
  },
  {
    "text": "or we're passing a function into into an asynchronous thing into settimeout and inside of that function we're using",
    "start": "1471440",
    "end": "1479039"
  },
  {
    "text": "the keyword this implying that there is an object context",
    "start": "1479039",
    "end": "1484640"
  },
  {
    "text": "that we're running inside and i want to access properties or functions on that context",
    "start": "1484640",
    "end": "1492400"
  },
  {
    "text": "this is some object that represents statement view on line 29",
    "start": "1492400",
    "end": "1498240"
  },
  {
    "text": "and on line 31. but on line 30 this is cast into the future when this",
    "start": "1498240",
    "end": "1506000"
  },
  {
    "text": "set timeout expires and in the future we don't know what",
    "start": "1506000",
    "end": "1511440"
  },
  {
    "text": "this is in this case this is probably going to be the global object it's probably going",
    "start": "1511440",
    "end": "1516720"
  },
  {
    "text": "to be window when set timeout expires and it calls our callback it doesn't know the context it was executed in and",
    "start": "1516720",
    "end": "1523279"
  },
  {
    "text": "so it blows up and so the specific error that we're getting",
    "start": "1523279",
    "end": "1528320"
  },
  {
    "text": "the specific error that we're getting is cannot read property destroy of undefined",
    "start": "1528320",
    "end": "1534320"
  },
  {
    "text": "it's trying to find a property destroy on this thing called this dot model",
    "start": "1534320",
    "end": "1539679"
  },
  {
    "text": "but this isn't what we think it is and so this dot model ends up being undefined",
    "start": "1539679",
    "end": "1545840"
  },
  {
    "text": "and there isn't a property called destroy on undefined and that's why that error gets generated",
    "start": "1545840",
    "end": "1551840"
  },
  {
    "text": "so there's a couple of different like easy ways to fix this right and like probably the most common",
    "start": "1551840",
    "end": "1557919"
  },
  {
    "text": "um is just to save off the context that you want to operate in and so depending on which javascript book or blog you",
    "start": "1557919",
    "end": "1564720"
  },
  {
    "text": "might have read first will dictate your preference on whether or not you feel this should be called var varself",
    "start": "1564720",
    "end": "1570240"
  },
  {
    "text": "equals this or var that equals this right who's a who's who uses who likes self",
    "start": "1570240",
    "end": "1578880"
  },
  {
    "text": "who likes that i like that",
    "start": "1578880",
    "end": "1585760"
  },
  {
    "text": "anyway so we take a cut we we basically grab a reference to what is the context that we care about and we store it",
    "start": "1585760",
    "end": "1591200"
  },
  {
    "text": "another into a value that we control and then we can fix that just by saying that dot model dot destroy right",
    "start": "1591200",
    "end": "1599200"
  },
  {
    "text": "see i i like that because it's like go destroy that model like you've you've like taken this and you've made it of",
    "start": "1599200",
    "end": "1605840"
  },
  {
    "text": "that it's not yourself anymore it's it's somebody else anyway all right so this is this would",
    "start": "1605840",
    "end": "1612000"
  },
  {
    "text": "be one easy way to solve this we could check this real quick and make sure that this works",
    "start": "1612000",
    "end": "1617440"
  },
  {
    "text": "yeah we can delete a statement but there's a bunch of other cool ways we",
    "start": "1617440",
    "end": "1622720"
  },
  {
    "text": "could do this too um like so for example this is a really simple function um it only references you know model.destroy",
    "start": "1622720",
    "end": "1630480"
  },
  {
    "text": "so we could be like maybe a little bit more explicit we could say something like bar model equals this dot",
    "start": "1630480",
    "end": "1636400"
  },
  {
    "text": "model and then we'll just reference it as model.destroy that would work too",
    "start": "1636400",
    "end": "1643600"
  },
  {
    "text": "or we could we could use some new advanced javascripty things and we could actually",
    "start": "1643600",
    "end": "1649840"
  },
  {
    "text": "set the context that we want to operate in and so then let's just back all this out",
    "start": "1649840",
    "end": "1655760"
  },
  {
    "text": "and leave it as this what if i just want to make make sure that",
    "start": "1655760",
    "end": "1660799"
  },
  {
    "text": "the context of this function that whatever this is is something i control and we can do that because in newer",
    "start": "1660799",
    "end": "1668080"
  },
  {
    "text": "releases of javascript functions have some things we can do with them",
    "start": "1668080",
    "end": "1673360"
  },
  {
    "text": "like we can bind them what bind lets us do is it lets us set",
    "start": "1673360",
    "end": "1678559"
  },
  {
    "text": "whenever this function is called here's what you're this is i don't care what object you're executing in i don't care where you put",
    "start": "1678559",
    "end": "1684960"
  },
  {
    "text": "the function we are like attaching a context to a function permanently and so we can do that by just saying hey",
    "start": "1684960",
    "end": "1691600"
  },
  {
    "text": "bind the value of this from you know our outer closure into the value of this on the inner closure",
    "start": "1691600",
    "end": "1697919"
  },
  {
    "text": "and this should work if we refresh this yeah we've bound it",
    "start": "1697919",
    "end": "1703919"
  },
  {
    "text": "but this isn't the most compatible thing in the world right this this works in chrome it'll work in an edge it'll work",
    "start": "1703919",
    "end": "1709600"
  },
  {
    "text": "in firefox but it probably won't work in like ie9",
    "start": "1709600",
    "end": "1715120"
  },
  {
    "text": "so if we wanted to work in like older browsers which i do for for soliloquy um",
    "start": "1715120",
    "end": "1720399"
  },
  {
    "text": "we could polyfill this so um working i'm using uh uh backbone here which already",
    "start": "1720399",
    "end": "1726240"
  },
  {
    "text": "takes a dependency on lodash lodash is like a really popular",
    "start": "1726240",
    "end": "1731360"
  },
  {
    "text": "um like set of utilities for javascript and it manifests itself as",
    "start": "1731360",
    "end": "1736960"
  },
  {
    "text": "you know an underscore so what we can do is uh we can use underscore.bind",
    "start": "1736960",
    "end": "1743679"
  },
  {
    "text": "the function to this now this is a super compatible way of doing the same thing now it's not native",
    "start": "1743679",
    "end": "1750080"
  },
  {
    "text": "in javascript you have to bring in this utility library to do it but um it does give you the the benefit of now",
    "start": "1750080",
    "end": "1756080"
  },
  {
    "text": "i can do it in this style of gluing the context together and it should work in every browser",
    "start": "1756080",
    "end": "1762559"
  },
  {
    "text": "now it's probably a little overkill for this particular example because i got one line here but if you had a more",
    "start": "1762559",
    "end": "1768159"
  },
  {
    "text": "complex callback with a lot of stuff going on there might be design advantages to actually gluing context",
    "start": "1768159",
    "end": "1773360"
  },
  {
    "text": "together",
    "start": "1773360",
    "end": "1776360"
  },
  {
    "text": "i think it's just called function.bind it was an extension as part of es6",
    "start": "1780480",
    "end": "1788398"
  },
  {
    "text": "all right so now we can delete statements right up until we get to ads",
    "start": "1789840",
    "end": "1795440"
  },
  {
    "text": "sweet all right so here was our here was our outlaw",
    "start": "1795440",
    "end": "1801039"
  },
  {
    "text": "clara this and that context now this this error",
    "start": "1801039",
    "end": "1807279"
  },
  {
    "text": "this isn't something that would arise only in production like this is a logical error this is a this is just a straight-up bug in javascript",
    "start": "1807440",
    "end": "1814799"
  },
  {
    "text": "but it happens so much javascript of apps of reasonable size",
    "start": "1814799",
    "end": "1822559"
  },
  {
    "text": "it's so complex to test every possible edge condition of the order at which things happen in the network stack in",
    "start": "1822559",
    "end": "1829600"
  },
  {
    "text": "interaction stack in timeout stacks that even though it's theoretically possible to discover all of these",
    "start": "1829600",
    "end": "1836159"
  },
  {
    "text": "through a robust set of unit testing almost nobody does because it's too expensive to test every single possible",
    "start": "1836159",
    "end": "1843760"
  },
  {
    "text": "permutation and so we still see this error is one of the most common things that happen in production so this you",
    "start": "1843760",
    "end": "1850559"
  },
  {
    "text": "can find anytime there is a functional argument if you are passing a function",
    "start": "1850559",
    "end": "1856480"
  },
  {
    "text": "as an argument into something else and that function has the keyword this anywhere in it throw up a red flag make",
    "start": "1856480",
    "end": "1863120"
  },
  {
    "text": "sure you understand the context that that function is going to call back with and that is like the key on how to do",
    "start": "1863120",
    "end": "1868960"
  },
  {
    "text": "this so this happens with callbacks with promises with async any of the ways you can do this you're going to still have",
    "start": "1868960",
    "end": "1874320"
  },
  {
    "text": "this problem and you need to like make sure you understand the context if you're going to use the keyword this",
    "start": "1874320",
    "end": "1881360"
  },
  {
    "text": "okay let's move on to the next one so this error is dolly data",
    "start": "1881919",
    "end": "1887360"
  },
  {
    "text": "dolly data manifests as substring is not a function and this one's pretty isolated like",
    "start": "1887360",
    "end": "1893600"
  },
  {
    "text": "we're not seeing very many people have this in fact only one person has this",
    "start": "1893600",
    "end": "1900399"
  },
  {
    "text": "we saw this error 2000 times but we saw it 2000 times",
    "start": "1900399",
    "end": "1905679"
  },
  {
    "text": "from one person one person just reported this error that many times",
    "start": "1905679",
    "end": "1911039"
  },
  {
    "text": "and so like maybe you don't need to care but like something is definitely going wrong",
    "start": "1911039",
    "end": "1917840"
  },
  {
    "text": "for this person and i want to see like i want to see if we can fix it so this particular person is seeing this a dot",
    "start": "1917840",
    "end": "1924000"
  },
  {
    "text": "text dot substring is not a function so let's take a look at soliloquy and see if we can understand why that",
    "start": "1924000",
    "end": "1929039"
  },
  {
    "text": "happens so if i just refresh on you know my demo customer here",
    "start": "1929039",
    "end": "1935200"
  },
  {
    "text": "everything seems to work so maybe it's something with this particular customer right so um looking at my log i see that",
    "start": "1935200",
    "end": "1941600"
  },
  {
    "text": "hey this is you know customer abc who's having this problem so let's let's go and load their data",
    "start": "1941600",
    "end": "1949640"
  },
  {
    "text": "so when i load soliloquy for this customer they have a kind of a terrible",
    "start": "1952159",
    "end": "1958159"
  },
  {
    "text": "experience here they see nothing like none of their stuff is there none",
    "start": "1958159",
    "end": "1964799"
  },
  {
    "text": "of their their posts none of their data if they try to interact with it",
    "start": "1964799",
    "end": "1970880"
  },
  {
    "text": "it just goes away when you refresh nothing gets persisted and they're seeing this error",
    "start": "1971360",
    "end": "1976480"
  },
  {
    "text": "a dot text dot substring is not a function so something is definitely going wrong",
    "start": "1976480",
    "end": "1981519"
  },
  {
    "text": "here so let's take a look at at statement model js line 21 where this",
    "start": "1981519",
    "end": "1986640"
  },
  {
    "text": "problem seems to be happening so here here's the here's the error in question",
    "start": "1986640",
    "end": "1992640"
  },
  {
    "text": "or the line in question and so it's happening right here so let's let's break this down and see if we can figure out what's going on so i",
    "start": "1992640",
    "end": "1999120"
  },
  {
    "text": "have a function called parse and parse takes this thing called resp",
    "start": "1999120",
    "end": "2004320"
  },
  {
    "text": "or response probably so we're probably dealing with like getting some data from somewhere",
    "start": "2004320",
    "end": "2009840"
  },
  {
    "text": "and now we have some expectations on that data it looks like we're transforming some data um we're using another lowdash",
    "start": "2009840",
    "end": "2016480"
  },
  {
    "text": "underscore function called map which allows us to iterate over an array of objects and transform them from one",
    "start": "2016480",
    "end": "2022480"
  },
  {
    "text": "thing into another so we're looping over resp so at this point we already have an",
    "start": "2022480",
    "end": "2028159"
  },
  {
    "text": "expectation resp is an array of objects right so we're looping over it",
    "start": "2028159",
    "end": "2034640"
  },
  {
    "text": "and then for every thing inside of it we expect we're setting a property called text on it",
    "start": "2034640",
    "end": "2041519"
  },
  {
    "text": "we expect text to already exist and we expect it to have a function on it called substring",
    "start": "2041519",
    "end": "2048320"
  },
  {
    "text": "so we're expecting we have this this set of expectations already of this data",
    "start": "2048320",
    "end": "2053679"
  },
  {
    "text": "where item is an object it has a property called text and text is a string so that we have a substring",
    "start": "2053679",
    "end": "2060398"
  },
  {
    "text": "function but that's blowing up so we just like set a break point here and take a look at what actually happens",
    "start": "2060399",
    "end": "2066800"
  },
  {
    "text": "when this runs let's just give it a little refresh we pop in and let's take a look at",
    "start": "2066800",
    "end": "2072320"
  },
  {
    "text": "what's in resp i'm just going to go down here to the local scope and pop and take a look",
    "start": "2072320",
    "end": "2078800"
  },
  {
    "text": "so here here's our object this is minified code and so it's actually called a even though the source",
    "start": "2082240",
    "end": "2088398"
  },
  {
    "text": "map is showing me item we didn't talk about that right now this is resp so resp is an array it's an",
    "start": "2088399",
    "end": "2095520"
  },
  {
    "text": "array of objects we already see that there are 101 objects in this array so so far so good we're matching our",
    "start": "2095520",
    "end": "2102160"
  },
  {
    "text": "expectations let's take a look at one of these objects if we pop into the object we do see a",
    "start": "2102160",
    "end": "2108720"
  },
  {
    "text": "property called text but text is not a string",
    "start": "2108720",
    "end": "2114079"
  },
  {
    "text": "text is a number and a number does not have substring i can't go into my",
    "start": "2114079",
    "end": "2119839"
  },
  {
    "text": "console and type i don't even remember what's what what did it do",
    "start": "2119839",
    "end": "2124960"
  },
  {
    "text": "substring 0 140.",
    "start": "2124960",
    "end": "2128760"
  },
  {
    "text": "[Music]",
    "start": "2137220",
    "end": "2140390"
  },
  {
    "text": "substring's not a function that doesn't exist on number so why is that happening so if we look at our network itself",
    "start": "2142480",
    "end": "2150720"
  },
  {
    "text": "let's uncheck this breakpoint go if we take a look at this network itself",
    "start": "2153119",
    "end": "2160240"
  },
  {
    "text": "the response that we're getting from our server indeed has an array of objects",
    "start": "2160240",
    "end": "2166320"
  },
  {
    "text": "with a text property that's 42. so how so my app is blowing up because my client side has one set of expectations",
    "start": "2166320",
    "end": "2173520"
  },
  {
    "text": "my client side was written to expect i get an array of objects with a string on it but my server returned an array of",
    "start": "2173520",
    "end": "2180640"
  },
  {
    "text": "objects with a number on it and my app blew up because it didn't know how to handle it",
    "start": "2180640",
    "end": "2186720"
  },
  {
    "text": "so if we take a look at the code in question which was statement model",
    "start": "2186720",
    "end": "2193920"
  },
  {
    "text": "the code the server shouldn't have done that right somebody probably made a mistake something got released the api changed",
    "start": "2195839",
    "end": "2203280"
  },
  {
    "text": "somebody fat fingered something maybe somebody attacked my api and inserted a",
    "start": "2203280",
    "end": "2208560"
  },
  {
    "text": "piece of data that shouldn't have gotten in there for whatever the reason it happened and so we should change our javascript to be",
    "start": "2208560",
    "end": "2215200"
  },
  {
    "text": "more flexible like if if this is an expectation that isn't always true we should really be safe",
    "start": "2215200",
    "end": "2221119"
  },
  {
    "text": "about it so maybe what we should do is we should say um you know what if rest doesn't even",
    "start": "2221119",
    "end": "2227520"
  },
  {
    "text": "exist maybe we should say hey we're either going to iterate over resp or we'll",
    "start": "2227520",
    "end": "2232720"
  },
  {
    "text": "iterate over an empty array let's make sure that it's real and now let's loop over the things in it",
    "start": "2232720",
    "end": "2240240"
  },
  {
    "text": "so we'll take a look at item well item.text might not even exist",
    "start": "2240240",
    "end": "2246400"
  },
  {
    "text": "and if it does exist it might not be a string in which the case we have here so",
    "start": "2246400",
    "end": "2251599"
  },
  {
    "text": "we should just check that we should say like if if item is a thing",
    "start": "2251599",
    "end": "2257520"
  },
  {
    "text": "and if um dot is string",
    "start": "2257520",
    "end": "2263760"
  },
  {
    "text": "item dot text",
    "start": "2263760",
    "end": "2268599"
  },
  {
    "text": "so let's just be safe about it we have these expectations let's call it out so we're only going to you know do this",
    "start": "2270320",
    "end": "2277200"
  },
  {
    "text": "transformation on item.txt if it's not but what happens if it's not what should we do",
    "start": "2277200",
    "end": "2282720"
  },
  {
    "text": "if item.txt is in the is in the wrong format we should probably do something we should probably write something to",
    "start": "2282720",
    "end": "2289440"
  },
  {
    "text": "our logs so that we know stuff's going wrong so maybe we'll do a console.warn um we got bad data",
    "start": "2289440",
    "end": "2299240"
  },
  {
    "text": "we got bad data item",
    "start": "2300000",
    "end": "2303599"
  },
  {
    "text": "and then what do we do as far as the user because like item.txt is probably a thing that the ui needs so we should",
    "start": "2305280",
    "end": "2311680"
  },
  {
    "text": "probably write item.txt is um",
    "start": "2311680",
    "end": "2317119"
  },
  {
    "text": "invalid data or whatever so if we put this in place and take a",
    "start": "2317119",
    "end": "2323440"
  },
  {
    "text": "look at at our code now",
    "start": "2323440",
    "end": "2327838"
  },
  {
    "text": "our ui actually loads now because now we're able to process that data",
    "start": "2329280",
    "end": "2335599"
  },
  {
    "text": "so it's still not about the greatest user experience in the world here right because the user has a timeline full of",
    "start": "2335599",
    "end": "2342160"
  },
  {
    "text": "invalid data messages but we're at least able to show them something the app just doesn't break on them overtly",
    "start": "2342160",
    "end": "2350320"
  },
  {
    "text": "and our logs themselves report something there's way more um",
    "start": "2350320",
    "end": "2356720"
  },
  {
    "text": "that is much easier to understand what is actually going wrong we don't see this something blew up because substring",
    "start": "2357280",
    "end": "2363520"
  },
  {
    "text": "is not a function that will require diagnosis we see that hey we got some bad data here was something we didn't",
    "start": "2363520",
    "end": "2369119"
  },
  {
    "text": "expect that came down from the server so this is the kind of error that",
    "start": "2369119",
    "end": "2375200"
  },
  {
    "text": "happens when a client slide expectation doesn't match a server-side expectation which as people are building more and",
    "start": "2375200",
    "end": "2381680"
  },
  {
    "text": "more complex apps is happening a lot more how many of your organizations have",
    "start": "2381680",
    "end": "2387520"
  },
  {
    "text": "a different group of people working on the backend apis versus the client-side",
    "start": "2387520",
    "end": "2393839"
  },
  {
    "text": "front-end application you have a back end team and a front end team right",
    "start": "2393839",
    "end": "2399359"
  },
  {
    "text": "this happens when you have two different teams somebody thinks the data type is x it ends up being y the expectations",
    "start": "2399359",
    "end": "2405839"
  },
  {
    "text": "don't match maybe the api releases code before the front end got out",
    "start": "2405839",
    "end": "2411040"
  },
  {
    "text": "and you you have a mismatch so this tends to happen and you end up with a production fault two different teams",
    "start": "2411040",
    "end": "2417040"
  },
  {
    "text": "working on different expectations happens anytime you see separate teams working on the two sides",
    "start": "2417040",
    "end": "2422720"
  },
  {
    "text": "the trouble with this is it's really difficult to prevent with standard style unit testing",
    "start": "2422720",
    "end": "2427760"
  },
  {
    "text": "even if both the back end team was testing all of their apis and the front-end team was testing all their",
    "start": "2427760",
    "end": "2433680"
  },
  {
    "text": "expectations the problem is that nobody ever integrated them together and actually ran through a test and so you",
    "start": "2433680",
    "end": "2438960"
  },
  {
    "text": "got to make sure that you're constantly monitoring on what actually happens doing a full end-to-end test before you",
    "start": "2438960",
    "end": "2444319"
  },
  {
    "text": "put stuff into production and even watching when it's in production to make sure stuff doesn't change",
    "start": "2444319",
    "end": "2450400"
  },
  {
    "text": "this one is my favorite for australia this is",
    "start": "2451680",
    "end": "2457920"
  },
  {
    "text": "scripty or this is script load failed this manifests itself as something is",
    "start": "2457920",
    "end": "2464640"
  },
  {
    "text": "not a function now this isn't happening a lot",
    "start": "2464640",
    "end": "2470960"
  },
  {
    "text": "you know we get about 2 400 hits a week on soliloquy and this only happened 134 times",
    "start": "2470960",
    "end": "2478480"
  },
  {
    "text": "it happened to 129 people so this isn't like a one-off this isn't one user with a bad",
    "start": "2478480",
    "end": "2483839"
  },
  {
    "text": "situation this isn't like an uncompatible browser this is something that a significant amount of my customers are running into",
    "start": "2483839",
    "end": "2490400"
  },
  {
    "text": "as pervasive there's more than it's happening to multiple people so let's take a look and see if we can figure out",
    "start": "2490400",
    "end": "2496319"
  },
  {
    "text": "why does a dot inline ads why does that break",
    "start": "2496319",
    "end": "2502240"
  },
  {
    "text": "i'm going to switch back to my standard customer",
    "start": "2503200",
    "end": "2508319"
  },
  {
    "text": "and we'll reload all right so looking at soliloquy refreshing it here",
    "start": "2508319",
    "end": "2514720"
  },
  {
    "text": "i do not see that error it's not happening for me close the bug works on my machine",
    "start": "2514720",
    "end": "2521119"
  },
  {
    "text": "right move on now let's figure out why why would this happen",
    "start": "2521119",
    "end": "2526160"
  },
  {
    "text": "so let's let's look in our code and let's just do a search for inline ads why where is that where does that come",
    "start": "2526160",
    "end": "2532880"
  },
  {
    "text": "from and that's defined in two places here it's defined once",
    "start": "2532880",
    "end": "2538640"
  },
  {
    "text": "in one of my advertising providers one of my advertising providers defines this interface when i use this provider it",
    "start": "2538640",
    "end": "2545359"
  },
  {
    "text": "says hey put our script on the page we'll we'll create this function called inline ads and you set up your",
    "start": "2545359",
    "end": "2551440"
  },
  {
    "text": "advertisement with that so here's where window.inline ads comes from and then i use",
    "start": "2551440",
    "end": "2557599"
  },
  {
    "text": "window.inline ads here in my main soliloquy.js file so i'm",
    "start": "2557599",
    "end": "2562640"
  },
  {
    "text": "setting up the page i want to like put some ads on the page initialize it and do some stuff",
    "start": "2562640",
    "end": "2568480"
  },
  {
    "text": "and so like i don't know why this wouldn't be a function like i have one file that puts it on the page and i have",
    "start": "2568480",
    "end": "2574079"
  },
  {
    "text": "another file that uses it and like there's no real variability about either of those",
    "start": "2574079",
    "end": "2580319"
  },
  {
    "text": "so if we go and look at the uh the actual html file that this comes from i see all right here's here's inline ad",
    "start": "2580319",
    "end": "2586960"
  },
  {
    "text": "provider it's coming in right here here's where it would get defined why would why would it ever not",
    "start": "2586960",
    "end": "2593680"
  },
  {
    "text": "get defined well let's just pretend it's not there and see if we can like recreate the",
    "start": "2593680",
    "end": "2599920"
  },
  {
    "text": "problem so if i just comment out inline ad providers not on the page and reload",
    "start": "2599920",
    "end": "2606880"
  },
  {
    "text": "i absolutely get the error that was reported this a dot inline ads is not a function",
    "start": "2606880",
    "end": "2612640"
  },
  {
    "text": "so this is this is what's happening but look at the user experience again",
    "start": "2612640",
    "end": "2617760"
  },
  {
    "text": "when this happens for those 130 some people like this is what soliloquy looks like to them",
    "start": "2617760",
    "end": "2623119"
  },
  {
    "text": "looks like crap there's nothing here none of my ads are there i'm not making any money",
    "start": "2623119",
    "end": "2629200"
  },
  {
    "text": "their timeline isn't there if they were to like type some stuff in and try and interact with it it just doesn't do",
    "start": "2629200",
    "end": "2635119"
  },
  {
    "text": "anything it's just broken and they're like this soliloquy thing sucks i'm gonna go back to twitter",
    "start": "2635119",
    "end": "2641200"
  },
  {
    "text": "so that's not what i want i want people to use this so let's why would this happen why would",
    "start": "2641200",
    "end": "2646720"
  },
  {
    "text": "this why would this happen and why this happens is probably way more clear to you",
    "start": "2646720",
    "end": "2653280"
  },
  {
    "text": "than most people who i've talked to because you live in australia",
    "start": "2653280",
    "end": "2658800"
  },
  {
    "text": "and sometimes sometimes stuff just doesn't load",
    "start": "2658800",
    "end": "2664640"
  },
  {
    "text": "and it happens a lot uh at the recent google i o conference they released some internal numbers from",
    "start": "2664880",
    "end": "2671680"
  },
  {
    "text": "uh android and when android is making an http request",
    "start": "2671680",
    "end": "2676960"
  },
  {
    "text": "based on the network that it's on between one and four percent of the time that request just fails",
    "start": "2676960",
    "end": "2684079"
  },
  {
    "text": "like maybe the the ssl handshake failed maybe the",
    "start": "2684079",
    "end": "2689119"
  },
  {
    "text": "maybe the dns lookup failed maybe like you just went into an elevator and like you lost connectivity",
    "start": "2689119",
    "end": "2695599"
  },
  {
    "text": "maybe you lived in australia like a lot of times it's just the request",
    "start": "2695599",
    "end": "2700960"
  },
  {
    "text": "doesn't work and so that's what's happening here is that on a significant percentage of time",
    "start": "2700960",
    "end": "2706480"
  },
  {
    "text": "inline ad provider js doesn't come down now that could be any number of things maybe their dns service is like a",
    "start": "2706480",
    "end": "2711760"
  },
  {
    "text": "slightly slower maybe um maybe it's just random and like various different scripts are like",
    "start": "2711760",
    "end": "2717599"
  },
  {
    "text": "failing to load often but when this particular script fails to load it manifests itself in a really um",
    "start": "2717599",
    "end": "2725040"
  },
  {
    "text": "dangerous user experience and a really bad um uh a bad experience for my customer and",
    "start": "2725040",
    "end": "2730640"
  },
  {
    "text": "so let's see if we can like be a little bit smarter about that so here where i'm using",
    "start": "2730640",
    "end": "2736640"
  },
  {
    "text": "that file is right here right here on line 38 i'm",
    "start": "2736640",
    "end": "2741680"
  },
  {
    "text": "just calling a function called window.inline ads and i'm setting it up so i'm giving it my you know customer",
    "start": "2741680",
    "end": "2747200"
  },
  {
    "text": "key i'm saying hey i want to like you know show ads every 700 something i don't",
    "start": "2747200",
    "end": "2753200"
  },
  {
    "text": "remember but we're just calling this function with our configuration but what's happening in these small set",
    "start": "2753200",
    "end": "2759760"
  },
  {
    "text": "of cases is sometimes inline ads isn't a function it's not there so let's check it let's just let's just",
    "start": "2759760",
    "end": "2767680"
  },
  {
    "text": "be obvious about it let's say hey if window.inline ads is a",
    "start": "2767680",
    "end": "2772839"
  },
  {
    "text": "thing then let's set it up and if it's not a thing again let's just",
    "start": "2772839",
    "end": "2779760"
  },
  {
    "text": "put something in the log and say inline ads failed again",
    "start": "2779760",
    "end": "2785520"
  },
  {
    "text": "get them to give you some free stuff",
    "start": "2785520",
    "end": "2790880"
  },
  {
    "text": "and then just continue like inline ads in the case of soliloquy it isn't a killer feature",
    "start": "2792480",
    "end": "2798319"
  },
  {
    "text": "if i if i don't have inline ads are you really going to care if you open twitter tomorrow and all of",
    "start": "2798319",
    "end": "2804640"
  },
  {
    "text": "a sudden all the inline ads were gone you care that much would it like negatively affect your",
    "start": "2804640",
    "end": "2811359"
  },
  {
    "text": "experience and so like this is something that's not critical for me and so just by taking it out of the critical path",
    "start": "2811359",
    "end": "2817040"
  },
  {
    "text": "and saying hey load inline ads if they're there and if not like just move on",
    "start": "2817040",
    "end": "2822160"
  },
  {
    "text": "these customers these 130 people a week who have this problem they get a way better user experience they don't even know that anything went wrong",
    "start": "2822160",
    "end": "2828720"
  },
  {
    "text": "and that's awesome like we just they like it's still failing but they don't they don't need to have a a",
    "start": "2828720",
    "end": "2835200"
  },
  {
    "text": "bad experience and so when we think about all the different scripts that we're loading all the different things you",
    "start": "2835200",
    "end": "2841520"
  },
  {
    "text": "assemble on your page what happens if one of them isn't there what happens if some random script as",
    "start": "2841520",
    "end": "2848400"
  },
  {
    "text": "part of your overall app just doesn't come down what's the experience is it a catastrophic things are just gone",
    "start": "2848400",
    "end": "2855680"
  },
  {
    "text": "and does it have to be what if hypothetical situation you had a credit",
    "start": "2855680",
    "end": "2861119"
  },
  {
    "text": "card checkout form and you used a third party script to process that credit card like stripe or",
    "start": "2861119",
    "end": "2866240"
  },
  {
    "text": "braintree or paypal or any of those what would happen on that credit card form if their js file didn't come down",
    "start": "2866240",
    "end": "2874480"
  },
  {
    "text": "would it work would it would you have a customer typing in a credit card number and nothing happening and being really frustrated",
    "start": "2874720",
    "end": "2880480"
  },
  {
    "text": "would you your form take a credit card number and then go and post it somewhere because it didn't have the script to",
    "start": "2880480",
    "end": "2886640"
  },
  {
    "text": "like intercept it and do the proper thing there's all kinds of terrible things that can happen when just part of",
    "start": "2886640",
    "end": "2892000"
  },
  {
    "text": "your application fails and so we gotta think in a safety mindset the web is",
    "start": "2892000",
    "end": "2897359"
  },
  {
    "text": "flaky parts of my script or parts of my app are going to fail and we need to like fail gracefully when it does",
    "start": "2897359",
    "end": "2905200"
  },
  {
    "text": "all right i only have time for one more error this one's kind of fun this is my",
    "start": "2905200",
    "end": "2910400"
  },
  {
    "text": "browser crashing and my browser crashing is manifest by",
    "start": "2910400",
    "end": "2916000"
  },
  {
    "text": "slow performance and occasionally a browser crash now the problem with a browser crash",
    "start": "2916000",
    "end": "2922880"
  },
  {
    "text": "event is that all the tools we have to monitor web applications are built in",
    "start": "2922880",
    "end": "2928160"
  },
  {
    "text": "javascript they're inside the application and so when the browser itself goes down",
    "start": "2928160",
    "end": "2935760"
  },
  {
    "text": "like the whole runtime goes down with it and so we don't know that it happened",
    "start": "2935760",
    "end": "2941119"
  },
  {
    "text": "like the whole browser just disappeared and we can't get one more error report out the door on the way out and so the",
    "start": "2941119",
    "end": "2947280"
  },
  {
    "text": "only way we really know this is happening is when our customers complain",
    "start": "2947280",
    "end": "2952480"
  },
  {
    "text": "and unfortunately they complain on twitter and they say so look we such a piece of junk i'm like been typing all",
    "start": "2952480",
    "end": "2958400"
  },
  {
    "text": "of my thoughts in it all day and like it just gets slower and slower and then it crashes and it sucks and i hate it so",
    "start": "2958400",
    "end": "2963920"
  },
  {
    "text": "much and and that's you know bad publicity one and and two it's just really it's",
    "start": "2963920",
    "end": "2969599"
  },
  {
    "text": "it's not a fun experience for them so let's take a look at silicone see if we can um understand what happened",
    "start": "2969599",
    "end": "2976800"
  },
  {
    "text": "so what what we're hearing is that people use soliloquy for a long duration",
    "start": "2976800",
    "end": "2982000"
  },
  {
    "text": "and it gets the performance suffers and and then it crashes and so that that sounds like a memory",
    "start": "2982000",
    "end": "2988720"
  },
  {
    "text": "leak so there's a bunch of different tools we can use to diagnose memory leaks who's",
    "start": "2988720",
    "end": "2994079"
  },
  {
    "text": "diagnosed memory leaks before anybody sometimes it's terrible",
    "start": "2994079",
    "end": "2999599"
  },
  {
    "text": "but with some of the new tools here i actually think it's kind of fun so how i like to do it is i like to use the timeline function in inside of chrome",
    "start": "2999599",
    "end": "3006400"
  },
  {
    "text": "here and what the timeline lets us do is it lets us record a series of events and it",
    "start": "3006400",
    "end": "3011920"
  },
  {
    "text": "give us a playback of what's the browser actually doing when we were doing those things like what sort of events were",
    "start": "3011920",
    "end": "3019040"
  },
  {
    "text": "happening in the javascript layer what sort of events were being painted on the screen and so we can like diagnose behavior",
    "start": "3019040",
    "end": "3025040"
  },
  {
    "text": "and so what i like to do here is i'm going to like type a few statements into soliloquy and then i'm going to",
    "start": "3025040",
    "end": "3030960"
  },
  {
    "text": "delete those statements back out which should hypothetically you know change the state of my",
    "start": "3030960",
    "end": "3036480"
  },
  {
    "text": "application and then return it back to the original and so i should expect everything to kind of level out",
    "start": "3036480",
    "end": "3043520"
  },
  {
    "text": "so i'm going to just refresh the page here quick make sure everything's clean and we'll start recording",
    "start": "3043520",
    "end": "3051440"
  },
  {
    "text": "and while that's recording we'll say hello sydney",
    "start": "3053440",
    "end": "3059440"
  },
  {
    "text": "you don't know what winter is",
    "start": "3060400",
    "end": "3065119"
  },
  {
    "text": "this is a mild spring day and then i'm going to delete those",
    "start": "3065680",
    "end": "3073920"
  },
  {
    "text": "all right so we've recorded about 24 seconds of activity we'll take a look at what that looks",
    "start": "3074079",
    "end": "3079200"
  },
  {
    "text": "like and i know this is a little intimidating at the beginning like this this screen",
    "start": "3079200",
    "end": "3085680"
  },
  {
    "text": "just shoves so much data in your face and so we're going to break it down and actually take a look now the thing i think is confusing about",
    "start": "3085680",
    "end": "3092240"
  },
  {
    "text": "this is that the the place to start on this page isn't at the top",
    "start": "3092240",
    "end": "3097520"
  },
  {
    "text": "it's this line chart right here",
    "start": "3097520",
    "end": "3102640"
  },
  {
    "text": "right here on the the bottom half of my screen this is the place to to kind of see what's happening",
    "start": "3102640",
    "end": "3108400"
  },
  {
    "text": "and let me clean i don't care about that i don't care about that what i want to carry what i care about here in terms of",
    "start": "3108400",
    "end": "3113680"
  },
  {
    "text": "a memory leak is i want to know what is the javascript using in terms of its memory",
    "start": "3113680",
    "end": "3119440"
  },
  {
    "text": "how many html nodes are on the page because the size of the page is a reflection of like how much memory the",
    "start": "3119440",
    "end": "3124880"
  },
  {
    "text": "browser is using and i want to know how many listeners are attached to those nodes because that is a direct",
    "start": "3124880",
    "end": "3130640"
  },
  {
    "text": "correlation back to how much how much javascript needs to remain in",
    "start": "3130640",
    "end": "3135760"
  },
  {
    "text": "browser memory to deal with callbacks to those sort of events the more listeners you have the more javascript can't be",
    "start": "3135760",
    "end": "3140800"
  },
  {
    "text": "can't be garbage collected and so when we look at this here like there's a bunch of stuff",
    "start": "3140800",
    "end": "3146640"
  },
  {
    "text": "happening like there's definitely a few drops there's a few garbage cleanup events that happen but for the most part",
    "start": "3146640",
    "end": "3152800"
  },
  {
    "text": "we are kind of stepping up as we go and like we're ending with significantly",
    "start": "3152800",
    "end": "3160160"
  },
  {
    "text": "more nodes and listeners than we had when we started so like there definitely is something",
    "start": "3160160",
    "end": "3166000"
  },
  {
    "text": "like there's definitely something going on we're not we're not right back where we started so let's start digging in further and so",
    "start": "3166000",
    "end": "3172400"
  },
  {
    "text": "what's cool about this is that this is your 10 000 foot view this is like in general what happened but now we can",
    "start": "3172400",
    "end": "3178640"
  },
  {
    "text": "like start zooming in and see like the nitty-gritty details so i used to play a whole lot of video",
    "start": "3178640",
    "end": "3185200"
  },
  {
    "text": "games a whole like an unhealthy amount of video games um and one of my favorite i used to play a",
    "start": "3185200",
    "end": "3191200"
  },
  {
    "text": "lot of first-person shooters on computers and uh and so the controls for all those games is wasd on your keyboard",
    "start": "3191200",
    "end": "3197760"
  },
  {
    "text": "right so you could have like one hand over here and the other on your mouse and really rock some headshots",
    "start": "3197760",
    "end": "3204640"
  },
  {
    "text": "it's the same controls it's like it's a video game so we like we can um we",
    "start": "3204640",
    "end": "3211839"
  },
  {
    "text": "we can interact come on sorry",
    "start": "3214079",
    "end": "3221880"
  },
  {
    "text": "please wait there we go there we go",
    "start": "3224800",
    "end": "3230720"
  },
  {
    "text": "so we can interact with our charts if you get the right focus window which is this little thing right here in the",
    "start": "3230720",
    "end": "3236319"
  },
  {
    "text": "middle if you get your focus window right there you can interact with this just like a video game where you're like",
    "start": "3236319",
    "end": "3242079"
  },
  {
    "text": "zooming in zooming out strafing left strafing right dodging bullets taking a",
    "start": "3242079",
    "end": "3247200"
  },
  {
    "text": "look at javascript errors so what i want to zoom in on here is this this step function here i see a series of things",
    "start": "3247200",
    "end": "3254160"
  },
  {
    "text": "that every time this is happening it's ticking up my usage of both nodes memory and listeners and i",
    "start": "3254160",
    "end": "3260319"
  },
  {
    "text": "want to see what's going on so let's just keep zooming in and the closer we get on on one of these",
    "start": "3260319",
    "end": "3268079"
  },
  {
    "text": "the closer we get on one of these we see that like it's not one big step happening",
    "start": "3269040",
    "end": "3276480"
  },
  {
    "text": "there's a bunch of little actions all happening together",
    "start": "3276480",
    "end": "3281520"
  },
  {
    "text": "and we see it happening not just once but like multiple times over the course of this uh of the lifetime of this app",
    "start": "3282079",
    "end": "3289599"
  },
  {
    "text": "so i'm going to zoom in here on this one and we're going to take a look at what exactly is going on",
    "start": "3289599",
    "end": "3294880"
  },
  {
    "text": "so the closer we get here our view i'm going to",
    "start": "3294880",
    "end": "3301040"
  },
  {
    "text": "drag this down here a little bit our view here begins looking not just",
    "start": "3301040",
    "end": "3307920"
  },
  {
    "text": "like lines but we can actually see what was going on that was causing these things",
    "start": "3307920",
    "end": "3314799"
  },
  {
    "text": "so i can actually see real javascript that was executing now we're like really fine grain we're talking about a",
    "start": "3314799",
    "end": "3319839"
  },
  {
    "text": "difference of you know 18 650 milliseconds to 18 651 milliseconds we",
    "start": "3319839",
    "end": "3326480"
  },
  {
    "text": "are like we are going real nitpicky here but here's what was actually happening at this at this timing is i see a timer",
    "start": "3326480",
    "end": "3333760"
  },
  {
    "text": "fired that timer fired this thing in sidebar ad provider which called a function called place ad which triggered",
    "start": "3333760",
    "end": "3339760"
  },
  {
    "text": "some ajax while this was happening the number of nodes went up",
    "start": "3339760",
    "end": "3344799"
  },
  {
    "text": "if we keep going we see a timer fired again the same the same pattern nodes went up",
    "start": "3344799",
    "end": "3351520"
  },
  {
    "text": "same timer fired sidebar ad provider place add nodes went up",
    "start": "3351520",
    "end": "3357280"
  },
  {
    "text": "if we scroll over a little bit more we see it again and then here's something just a little",
    "start": "3358240",
    "end": "3363520"
  },
  {
    "text": "bit different we see an xhr ready state change so that's an ajax completed and",
    "start": "3363520",
    "end": "3368559"
  },
  {
    "text": "ajax finished we called a callback we did some stuff um",
    "start": "3368559",
    "end": "3374720"
  },
  {
    "text": "don't have quite enough screen real estate to show you much more it called a function called place add success",
    "start": "3374720",
    "end": "3381520"
  },
  {
    "text": "and the number of nodes and memory went up and so we have this pattern that every you know in rapid succession the number",
    "start": "3381520",
    "end": "3388160"
  },
  {
    "text": "of nodes are going up and has to do with this sidebar ad provider so let's take a look at sidebar app provider and see if",
    "start": "3388160",
    "end": "3393280"
  },
  {
    "text": "we can like reason about what happened",
    "start": "3393280",
    "end": "3396720"
  },
  {
    "text": "here's a function that we saw in our timeline place add and place ad is happening inside of a",
    "start": "3398640",
    "end": "3405280"
  },
  {
    "text": "set interval so that's a timer firing every so many milliseconds we're on a loop where this callback just says every",
    "start": "3405280",
    "end": "3411680"
  },
  {
    "text": "so many milliseconds call me so that's where we see a timer going off it's calling place ad",
    "start": "3411680",
    "end": "3417760"
  },
  {
    "text": "what does place ad do place ads going out making an ajax call one of the other things we saw that was",
    "start": "3417760",
    "end": "3423680"
  },
  {
    "text": "contributing is an xhr finishing and we saw whatever was happening in response to that ajax",
    "start": "3423680",
    "end": "3429119"
  },
  {
    "text": "finishing was increasing the amount of memory pressure we saw place add success",
    "start": "3429119",
    "end": "3435040"
  },
  {
    "text": "so this seems to be like related to the memory leak so what's actually happening here is in",
    "start": "3435040",
    "end": "3441119"
  },
  {
    "text": "set interval the first thing we do is we clear out some html container we have some element",
    "start": "3441119",
    "end": "3446640"
  },
  {
    "text": "it's got some html in it we zero it out then we go and make an ajax call to a",
    "start": "3446640",
    "end": "3452640"
  },
  {
    "text": "server and we get some new content we get a new advertisement and we take that advertisement and we shove it into the",
    "start": "3452640",
    "end": "3459119"
  },
  {
    "text": "container again and then we attach a click handler so that we know when the user clicked on the ad",
    "start": "3459119",
    "end": "3464720"
  },
  {
    "text": "so you can see it kind of happening here on that right hand side bar we see every",
    "start": "3464720",
    "end": "3470640"
  },
  {
    "text": "few milliseconds the container for all of those ads zeroes itself out we make a bunch of",
    "start": "3470640",
    "end": "3476799"
  },
  {
    "text": "calls and get new ads we put them in there and we wire up click handlers the problem here",
    "start": "3476799",
    "end": "3484559"
  },
  {
    "text": "is that we've wired up this click handler but we've never unwired the click handler",
    "start": "3484559",
    "end": "3489599"
  },
  {
    "text": "so even though we took all of those elements and we threw them away when we zeroed out the container there's still this little bit of javascript",
    "start": "3489599",
    "end": "3496799"
  },
  {
    "text": "attached to those elements waiting to be clicked on they're they're hanging out even though they're not",
    "start": "3496799",
    "end": "3502559"
  },
  {
    "text": "visible they're not recoverable but this function is attached to it and so neither can be garbage collected and",
    "start": "3502559",
    "end": "3508000"
  },
  {
    "text": "they just sit there and grow so when we see this happening all of these ads that are on the page right now",
    "start": "3508000",
    "end": "3514319"
  },
  {
    "text": "for for bears they're still there they're just floating out in in the",
    "start": "3514319",
    "end": "3519440"
  },
  {
    "text": "netherworld waiting for something that can never happen and so our customers who who use",
    "start": "3519440",
    "end": "3524640"
  },
  {
    "text": "soliloquy all day after several hours like there could be",
    "start": "3524640",
    "end": "3530240"
  },
  {
    "text": "literally millions of pictures of crocodile dundee",
    "start": "3530240",
    "end": "3535839"
  },
  {
    "text": "just waiting to be clicked on and it takes down chrome of all the wanting to",
    "start": "3535839",
    "end": "3542160"
  },
  {
    "text": "be clicked on takes down the browser and so that is my browser crashing that",
    "start": "3542160",
    "end": "3547920"
  },
  {
    "text": "is the core thing that causes memory leaks is detached dom elements it's why it's a",
    "start": "3547920",
    "end": "3554799"
  },
  {
    "text": "core thing in looking at memory tools it's when you have an element and you remove it from the core dom but",
    "start": "3554799",
    "end": "3560400"
  },
  {
    "text": "something is referencing it there's an uh event listener still attached to it that causes so much of the browser's",
    "start": "3560400",
    "end": "3567680"
  },
  {
    "text": "memory to be retained waiting for these events to happen and the characteristics of this is slow performance and",
    "start": "3567680",
    "end": "3573040"
  },
  {
    "text": "eventually crashing if your app does any sort of client-side rendering this is a possibility",
    "start": "3573040",
    "end": "3579280"
  },
  {
    "text": "unfortunately there's not a really good way to monitor for these sort of things and so i'd encourage you if you're",
    "start": "3579280",
    "end": "3584319"
  },
  {
    "text": "building one of these ambitious client-side apps you need to periodically scan for it and like the tools are pretty cool and you can kind",
    "start": "3584319",
    "end": "3591119"
  },
  {
    "text": "of learn a lot about the base level of browser interaction simply by like looking at the core things what is the",
    "start": "3591119",
    "end": "3597359"
  },
  {
    "text": "browser doing when you're doing these sort of interactions so these were the outlaw yeah",
    "start": "3597359",
    "end": "3604480"
  },
  {
    "text": "go for it",
    "start": "3604480",
    "end": "3606880"
  },
  {
    "text": "yeah exactly so the question was could we have avoided the memory late by calling off",
    "start": "3610640",
    "end": "3615760"
  },
  {
    "text": "exactly you avoid it by call by calling off when um rather than just of clearing all the elements out",
    "start": "3615760",
    "end": "3621440"
  },
  {
    "text": "we should have gone through them and detached all the click handlers then cleared out the element that would allow",
    "start": "3621440",
    "end": "3626640"
  },
  {
    "text": "the whole thing to be garbage collected you're right i should probably should have actually like fixed it but i'm kind of running short on time",
    "start": "3626640",
    "end": "3633200"
  },
  {
    "text": "we could hack on it after if you want all right so these were the errors that we captured today these were the outlaws",
    "start": "3633200",
    "end": "3640799"
  },
  {
    "text": "first scripty joe it's browser obfuscation it's the first error that you're going to have to deal with to",
    "start": "3640799",
    "end": "3645839"
  },
  {
    "text": "actually get a better picture of what's going on in your client-side environment the second is jane adsey",
    "start": "3645839",
    "end": "3650880"
  },
  {
    "text": "this anytime you're introducing a third-party script you're introducing some risk in your application that some other organization can make changes to",
    "start": "3650880",
    "end": "3657920"
  },
  {
    "text": "your production app clara context is one of the most common javascript development errors it's a",
    "start": "3657920",
    "end": "3663760"
  },
  {
    "text": "misunderstanding of context and the complexity of javascript apps tend that these even make it into production dolly",
    "start": "3663760",
    "end": "3670319"
  },
  {
    "text": "data a misunderstanding of a contract expectation between a client side and the server side if you have multiple",
    "start": "3670319",
    "end": "3676480"
  },
  {
    "text": "different things happening multiple different teams working eventually somebody's going to miss and you need to",
    "start": "3676480",
    "end": "3682000"
  },
  {
    "text": "have ways to like test for this during your deployment or monitor for this in production logan no loden",
    "start": "3682000",
    "end": "3689119"
  },
  {
    "text": "this one's obvious for y'all sometimes the internet breaks you need to code your client-side app",
    "start": "3689119",
    "end": "3694559"
  },
  {
    "text": "defensively so that when an arbitrary script in your application fails to load what is the experience you give to your",
    "start": "3694559",
    "end": "3700720"
  },
  {
    "text": "user can you gracefully fall back and finally my browser crash in memory",
    "start": "3700720",
    "end": "3705760"
  },
  {
    "text": "leaks happen when you do client-side rendering you need to periodically check your apps to make sure",
    "start": "3705760",
    "end": "3710880"
  },
  {
    "text": "you're not using up all the memory of your of your customers and causing all their macbook fans to spin up like jet",
    "start": "3710880",
    "end": "3716240"
  },
  {
    "text": "airplanes we did all of that with the help of track js so track js is a company that i",
    "start": "3716240",
    "end": "3722960"
  },
  {
    "text": "started um does javascript error monitoring all of the data that we have today was based off of some analytical",
    "start": "3722960",
    "end": "3728720"
  },
  {
    "text": "tools we took over the areas that have been captured over the last six to 12 months so this is like really the most",
    "start": "3728720",
    "end": "3734640"
  },
  {
    "text": "common errors that happen in the real world and i am todd gardner i've been your deputy sheriff today",
    "start": "3734640",
    "end": "3741119"
  },
  {
    "text": "if you want to talk to me more about javascripts javascript error handling",
    "start": "3741119",
    "end": "3746240"
  },
  {
    "text": "anything really you can get me on twitter toddhgardner you can hit me up on email or i'm going to be hanging out all week",
    "start": "3746240",
    "end": "3752720"
  },
  {
    "text": "um thank you very much [Applause]",
    "start": "3752720",
    "end": "3760480"
  },
  {
    "text": "i also organized this thing called pubconf which is like the after party on friday",
    "start": "3760480",
    "end": "3768559"
  },
  {
    "text": "tickets are literally about to sell out so if you want to go to pub comp and you should because it's awesome it's",
    "start": "3768559",
    "end": "3774319"
  },
  {
    "text": "basically a dev variety show in a bar like i pull a bunch of the ndc speakers in and they do five minute funny talks",
    "start": "3774319",
    "end": "3781359"
  },
  {
    "text": "and then we buy a bunch of beer so i mean how bad could it be right",
    "start": "3781359",
    "end": "3787440"
  },
  {
    "text": "uh so grab a ticket for that at uh pubconf dot io you should do it sooner rather than later um",
    "start": "3787440",
    "end": "3793359"
  },
  {
    "text": "thank you very much i'll be here if anybody wants to hang out and talk um sorry one more thing there's a rating",
    "start": "3793359",
    "end": "3798720"
  },
  {
    "text": "thing they do these at all the ndc you give me a card based on what you how",
    "start": "3798720",
    "end": "3803760"
  },
  {
    "text": "you think i did if you give me a green one you can have a sticker that is over there",
    "start": "3803760",
    "end": "3809599"
  },
  {
    "text": "if you don't give me a green one you can still have a sticker but i'll be sad about it",
    "start": "3809599",
    "end": "3815599"
  },
  {
    "text": "okay",
    "start": "3815599",
    "end": "3818599"
  }
]