[
  {
    "text": "come to my talk using VC package in anger and we will talk about VC package",
    "start": "3639",
    "end": "9120"
  },
  {
    "text": "obviously from the name so you might ask why you should listen to me talk about VC package and the answer is that I",
    "start": "9120",
    "end": "16000"
  },
  {
    "text": "started moving paxes C++ projects to VC package 3 years ago and we use them in",
    "start": "16000",
    "end": "21400"
  },
  {
    "text": "various we use VC package in various complex scenarios for example we have multiple interdependent packages we have",
    "start": "21400",
    "end": "28080"
  },
  {
    "text": "private packages private VC p package remotes we have custom Target triplets",
    "start": "28080",
    "end": "33440"
  },
  {
    "text": "and we target bunch of platforms we target x64 arms we target Linux maos",
    "start": "33440",
    "end": "39840"
  },
  {
    "text": "windows and we actually tried some other platforms but we currently don't have customers on those platforms so we don't",
    "start": "39840",
    "end": "45399"
  },
  {
    "text": "maintain them anyway about this talk so what this talk Isn't So this talk isn't",
    "start": "45399",
    "end": "51160"
  },
  {
    "text": "a tutorial for using VC package okay you don't need to understand VC page to",
    "start": "51160",
    "end": "56359"
  },
  {
    "text": "understand this St thankfully uh but if you start using VC package you might want to revisit this talk to refresh",
    "start": "56359",
    "end": "62600"
  },
  {
    "text": "yourself this is an advocacy for Konan I actually think Kanan is fine but I like VC package better even although I will",
    "start": "62600",
    "end": "70240"
  },
  {
    "text": "show you some pretty scary stuff this implies it's not advocacy against VC package and it very",
    "start": "70240",
    "end": "76240"
  },
  {
    "text": "definitely is not advocacy against package management in general use package managers know fetch content is",
    "start": "76240",
    "end": "82400"
  },
  {
    "text": "not a package management okay so what this talk is it's me sharing my",
    "start": "82400",
    "end": "88280"
  },
  {
    "text": "experience from using from using we package for 3 years in production in multiple teams and for stuff that we",
    "start": "88280",
    "end": "95399"
  },
  {
    "text": "actually compile and then push to our customers it will be more realistic look at using VC package in the abstract I",
    "start": "95399",
    "end": "102320"
  },
  {
    "text": "mentioned that I'm tired of talks that are like there is VC package you can depend on fmt and it will build it for",
    "start": "102320",
    "end": "107799"
  },
  {
    "text": "you this is what it looks like when you spend three years using VC package and pushing it to the Limit and of course",
    "start": "107799",
    "end": "113399"
  },
  {
    "text": "it's meting lot of the stuff is really annoying and sometimes you need to vend",
    "start": "113399",
    "end": "119200"
  },
  {
    "text": "so first before we see some scary stuff tips if you use VC",
    "start": "119200",
    "end": "124880"
  },
  {
    "text": "package if you have to pick between manifest mode and classic Mode manifest mode no questions use manifest mode",
    "start": "124880",
    "end": "132360"
  },
  {
    "text": "classic Mode is stateful it's old VC package back when it was meant to be up",
    "start": "132360",
    "end": "137519"
  },
  {
    "text": "replacement so if you want to install new dependency you have to do it manually remove all dependency you use",
    "start": "137519",
    "end": "143879"
  },
  {
    "text": "do it manually update the same and so on and so on nobody has time for that now",
    "start": "143879",
    "end": "149599"
  },
  {
    "text": "next always have version Baseline in your VC package specification why actually so let's take",
    "start": "149599",
    "end": "156280"
  },
  {
    "text": "a look at very simple project see how simple it is to use VC package we have two files cmake list VC package Jon",
    "start": "156280",
    "end": "164280"
  },
  {
    "text": "cmake list is minimal just required version and project and one dependen in VC package this is minimum B buildable",
    "start": "164280",
    "end": "172760"
  },
  {
    "text": "project let's build it it will give us fmt in version 10 this is fine we can",
    "start": "172760",
    "end": "178000"
  },
  {
    "text": "start development great awesome aome so what's the issue the issue is when we",
    "start": "178000",
    "end": "183400"
  },
  {
    "text": "come back a year later we build the project again it starts building and wait we have",
    "start": "183400",
    "end": "190200"
  },
  {
    "text": "fmt1 because now we are building against completely different versions of our dependencies because we didn't specify",
    "start": "190200",
    "end": "196840"
  },
  {
    "text": "versions the versions that we use are just the ones that were checked out in VC package at the time of last build so",
    "start": "196840",
    "end": "204080"
  },
  {
    "text": "I hope new major versions of your dependencies don't break you uh of course they will I mean I had someone",
    "start": "204080",
    "end": "210840"
  },
  {
    "text": "complain that catch 2 became suddenly incompatible in new version because he",
    "start": "210840",
    "end": "216000"
  },
  {
    "text": "did this and he got updated from version V2 to V3 which is completely incompatible with",
    "start": "216000",
    "end": "221400"
  },
  {
    "text": "anything so always specify version Baseline now there are actually if you",
    "start": "221400",
    "end": "227319"
  },
  {
    "text": "read the docs if you just type into Google VC package Baseline there is a good chance you will you will find",
    "start": "227319",
    "end": "233760"
  },
  {
    "text": "built-in Baseline okay this is in DOS it got better but it's still the first thing I",
    "start": "233760",
    "end": "240040"
  },
  {
    "text": "find found on Google yesterday don't use built-in Baseline no it's terrible I will show you why let",
    "start": "240040",
    "end": "248239"
  },
  {
    "text": "this is the commit from Friday literally last commit on Friday this is the hash",
    "start": "248239",
    "end": "253640"
  },
  {
    "text": "this is the same hash we Bas as a built-in Baseline and we build and we",
    "start": "253640",
    "end": "259199"
  },
  {
    "text": "get a bunch of Errors so what's happening is that built-in Baseline again operates on the",
    "start": "259199",
    "end": "265479"
  },
  {
    "text": "VC package checkout that you have on your drive so",
    "start": "265479",
    "end": "270520"
  },
  {
    "text": "because you you didn't have check out from Friday afternoon maybe you just had check out from Friday morning you can't",
    "start": "270520",
    "end": "276400"
  },
  {
    "text": "build no don't do this so what you should be using is config V page",
    "start": "276400",
    "end": "282000"
  },
  {
    "text": "configuration where you just say actually for Baseline go to get go to this address check it out and use it as",
    "start": "282000",
    "end": "288520"
  },
  {
    "text": "a registry you can also put it into your main manifest file this is good for",
    "start": "288520",
    "end": "294440"
  },
  {
    "text": "short examples but I don't do this why because in actual practice you will have like of these you will you will have the",
    "start": "294440",
    "end": "302240"
  },
  {
    "text": "default you might have some private Registries and so on and that's actually a lot of space and you will have many",
    "start": "302240",
    "end": "308880"
  },
  {
    "text": "more of these you will have many more dependencies you will have to scroll to see all of them so having it all in",
    "start": "308880",
    "end": "314560"
  },
  {
    "text": "single file is messy Annoying It's better to keep them split and the last thing remember that",
    "start": "314560",
    "end": "322199"
  },
  {
    "text": "VC package uses minimal version selection if you are not familiar with this this was I guess you could say",
    "start": "322199",
    "end": "329680"
  },
  {
    "text": "vented for go and what it does is that picks the lowest version that satisfies",
    "start": "329680",
    "end": "334919"
  },
  {
    "text": "all constraints of the version selection you know set and this will become late",
    "start": "334919",
    "end": "341840"
  },
  {
    "text": "relevant later we will see why now the last of this Prelude so I",
    "start": "341840",
    "end": "348919"
  },
  {
    "text": "will be using either one or two projects for the examples it will be named very originally Fu and Fu",
    "start": "348919",
    "end": "355039"
  },
  {
    "text": "SDK Fu SDK will always rely on lip Fu uh just because this is how it works in my",
    "start": "355039",
    "end": "360680"
  },
  {
    "text": "company and I found all of these at work and the Manifest will contain this fictional Baseline key to make it",
    "start": "360680",
    "end": "369000"
  },
  {
    "text": "reproducible from slides but obviously this doesn't exist it's a short hand for the VC package configuration with the",
    "start": "369000",
    "end": "375240"
  },
  {
    "text": "Bas slide at dead hash good are we all good with this so let's talk about the first issue",
    "start": "375240",
    "end": "382560"
  },
  {
    "text": "that you will run into when you use VC package I have sorted them by the by like the likelihood of you having this",
    "start": "382560",
    "end": "389199"
  },
  {
    "text": "problem now the fun part is that Baseline that you specify always inserts the",
    "start": "389199",
    "end": "395520"
  },
  {
    "text": "constraints into the resolution what does this mean well let's have flip F again we will say that we depend on fmt",
    "start": "395520",
    "end": "402479"
  },
  {
    "text": "but in some specific version that we care about 910 is a good version why not",
    "start": "402479",
    "end": "407639"
  },
  {
    "text": "and we have a baseline what happens when we build it we get fmt",
    "start": "407639",
    "end": "414120"
  },
  {
    "text": "10.1.1 why why do we get different version than we rely on because B",
    "start": "414120",
    "end": "419599"
  },
  {
    "text": "Baseline has this constraint so when Baseline says 10.1 or or1 or greater and",
    "start": "419599",
    "end": "427120"
  },
  {
    "text": "we say 9.1 or greater 10.1.1 wins there is nothing really surprising about this",
    "start": "427120",
    "end": "434720"
  },
  {
    "text": "except for the part where you don't expect the Baseline to add",
    "start": "434720",
    "end": "439800"
  },
  {
    "text": "constraints now what can you do about this what do you do if you actually want",
    "start": "439800",
    "end": "445000"
  },
  {
    "text": "these versions to matter well you can use old Baseline you can just say whatever my Baseline is 2 years in the",
    "start": "445000",
    "end": "452160"
  },
  {
    "text": "past that's so long ago that I it can't overwrite my new versions at",
    "start": "452160",
    "end": "458280"
  },
  {
    "text": "all okay that's",
    "start": "458280",
    "end": "462319"
  },
  {
    "text": "weird anyway uh so when we you use old",
    "start": "463319",
    "end": "469080"
  },
  {
    "text": "Baseline we have an issue that you now use old versions of your transitive",
    "start": "469080",
    "end": "474720"
  },
  {
    "text": "dependencies and what this means is that if we go back here we actually they had",
    "start": "474720",
    "end": "480240"
  },
  {
    "text": "these two packages VC package cake these are VC packages helpers to build cmake",
    "start": "480240",
    "end": "485639"
  },
  {
    "text": "based projects okay and the versions we get there are dependent on the Baseline",
    "start": "485639",
    "end": "490960"
  },
  {
    "text": "because we don't depend on them directly and this is fine you know like",
    "start": "490960",
    "end": "496800"
  },
  {
    "text": "for a VC package cake whatever helper the fact that you use all the Baseline",
    "start": "496800",
    "end": "501919"
  },
  {
    "text": "is whatever doesn't matter it's unlikely to break you what if you rely on open",
    "start": "501919",
    "end": "507120"
  },
  {
    "text": "SSL you don't want to use open SSL is 2 years old that's going to be terrible so",
    "start": "507120",
    "end": "513039"
  },
  {
    "text": "the other option is to use override they look like this you say actually I want",
    "start": "513039",
    "end": "519518"
  },
  {
    "text": "fmt at this version no further constain resolution give me fmt",
    "start": "519519",
    "end": "525320"
  },
  {
    "text": "9.1.0 and it works you now get FM 9.1.0 and you are happy of course only",
    "start": "525320",
    "end": "533120"
  },
  {
    "text": "for a few moments because then you find out that this doesn't propagate from dependencies so you have your SDK",
    "start": "533120",
    "end": "539240"
  },
  {
    "text": "project project it depends on your library you build it and you are back to fmt",
    "start": "539240",
    "end": "546200"
  },
  {
    "text": "10.1.1 so what do you do about this well the best thing is to hope that you don't",
    "start": "546200",
    "end": "552800"
  },
  {
    "text": "care about the version but if there is over right you probably cared so you actually just say I don't depend to fmt",
    "start": "552800",
    "end": "560480"
  },
  {
    "text": "but I want to override the version to 9.1.0 and that works but it's annoying",
    "start": "560480",
    "end": "568200"
  },
  {
    "text": "you know you don't depend on this you you shouldn't have to know this exist but you have to override it for your",
    "start": "568200",
    "end": "574240"
  },
  {
    "text": "build to work and this breaks the abstraction of dependency management",
    "start": "574240",
    "end": "579680"
  },
  {
    "text": "because you can no longer just say give me these dependencies you can be like okay so my transitive dependency needs",
    "start": "579680",
    "end": "586120"
  },
  {
    "text": "this version and this version and I have to override myself and so you find yourself",
    "start": "586120",
    "end": "593120"
  },
  {
    "text": "specifying veral fenes you have never used and if you ever publish your pro project as a VC package package the same",
    "start": "593120",
    "end": "601000"
  },
  {
    "text": "thing happens to your users of course uh this has happened to us at work exactly with fmt because fmt",
    "start": "601000",
    "end": "608519"
  },
  {
    "text": "10 had a bug where it couldn't build our library because it couldn't format some reference",
    "start": "608519",
    "end": "613680"
  },
  {
    "text": "tles and uh our SDK team used the library used new Baseline that build",
    "start": "613680",
    "end": "619880"
  },
  {
    "text": "broke we had to fix it and so on but wait there is more there is always more",
    "start": "619880",
    "end": "627880"
  },
  {
    "text": "so you're always b line and again we are talking about literally the baseline from Friday morning versus the baseline",
    "start": "627880",
    "end": "634760"
  },
  {
    "text": "from Friday afternoon might not have port in the registry the port might be",
    "start": "634760",
    "end": "639800"
  },
  {
    "text": "too new for your Baseline and this will cause a fail of the version resolution",
    "start": "639800",
    "end": "645680"
  },
  {
    "text": "let's take a look we see in VC package versions boost te make that there is this version 185 o okay it's there it's",
    "start": "645680",
    "end": "655240"
  },
  {
    "text": "present so we will depend on it we say yes we want boost in this version this",
    "start": "655240",
    "end": "661560"
  },
  {
    "text": "should work there's no reason for this not to work but we have some baseline And when we build it we get",
    "start": "661560",
    "end": "667320"
  },
  {
    "text": "error because the Baseline is too old for that specific Port like as far as as",
    "start": "667320",
    "end": "672600"
  },
  {
    "text": "it concerned it doesn't even know that boost cmake exist so it can't give you a version constraint so build",
    "start": "672600",
    "end": "680440"
  },
  {
    "text": "eror yeah we see packages like this a",
    "start": "680440",
    "end": "684959"
  },
  {
    "text": "lot but that's still a good one you know at least your build fails early it will",
    "start": "685680",
    "end": "692240"
  },
  {
    "text": "be getting worse as we go on now VC package only supports one type",
    "start": "692240",
    "end": "698839"
  },
  {
    "text": "of constraints on version It's greater or equal this is because it uses minimal version selection and minimal version",
    "start": "698839",
    "end": "705200"
  },
  {
    "text": "selection algorithm only supports these constraints that's easy now these",
    "start": "705200",
    "end": "710800"
  },
  {
    "text": "constraints should never be in Conflict you should never be able to create an empty set with this constraint because",
    "start": "710800",
    "end": "716920"
  },
  {
    "text": "you can't overlap two of these constraints in a way that they remove all space between them there will always",
    "start": "716920",
    "end": "723000"
  },
  {
    "text": "be some version that exists that fulfills this of course that's not true in VC",
    "start": "723000",
    "end": "728720"
  },
  {
    "text": "package world if you resolve two constraints like this it can fail let's",
    "start": "728720",
    "end": "733760"
  },
  {
    "text": "take a look at an example so we have our library we use upsale in version 2021",
    "start": "733760",
    "end": "739440"
  },
  {
    "text": "something we don't care about the rest and we have our SDK which uses the library and also wants to use upsale but",
    "start": "739440",
    "end": "746600"
  },
  {
    "text": "in version 2023 it's a bit newer so the reasonable expectation is that we",
    "start": "746600",
    "end": "753079"
  },
  {
    "text": "will get this version right who agrees with this expectation now of course the issue is",
    "start": "753079",
    "end": "759240"
  },
  {
    "text": "that if this was true I wouldn't be showing it to you right so let's build it and we get an error what does the",
    "start": "759240",
    "end": "765399"
  },
  {
    "text": "error say so there is a version conflict on upsale okay we get 2021 from Liu good",
    "start": "765399",
    "end": "771839"
  },
  {
    "text": "2023 and they can't be compared because they have scheme relax and scheme string",
    "start": "771839",
    "end": "778399"
  },
  {
    "text": "what the hell is going on so what's going on is that VC package has four different version types version or",
    "start": "778399",
    "end": "785399"
  },
  {
    "text": "relaxed version which is just an endle of digits separated by dots semantic",
    "start": "785399",
    "end": "791199"
  },
  {
    "text": "version which is the same except it's supposed to be semantic version no there is no checking Merion date that's your",
    "start": "791199",
    "end": "798240"
  },
  {
    "text": "dat like string you know 20 24- 08-04 and Merion string this is your",
    "start": "798240",
    "end": "804440"
  },
  {
    "text": "released named apple and orange and and when you ask VC package",
    "start": "804440",
    "end": "810560"
  },
  {
    "text": "to resolve versions it only Compares versions in the same domain and of course strings are incomparable because",
    "start": "810560",
    "end": "817959"
  },
  {
    "text": "you can't compare apples and oranges that's just not how it works",
    "start": "817959",
    "end": "823760"
  },
  {
    "text": "but uh it's not as bad as it sounds because back in the 2022 actually",
    "start": "823760",
    "end": "830000"
  },
  {
    "text": "convince B that VAR relaxed and somewh should be comparable this is surpr this",
    "start": "830000",
    "end": "835360"
  },
  {
    "text": "is like surprisingly small change but really useful because it fixed lot issues where some ports were going",
    "start": "835360",
    "end": "841360"
  },
  {
    "text": "between relaxed version and some version relaxed version and some version and you had these islands that couldn't be",
    "start": "841360",
    "end": "847519"
  },
  {
    "text": "compared between each other now you can't actually have date like version the VC package uh doesn't",
    "start": "847519",
    "end": "856720"
  },
  {
    "text": "accept this will not accept this I keep having arguments about this about once a",
    "start": "856720",
    "end": "861920"
  },
  {
    "text": "year and no this is not happening but it would be nice but once again there is something",
    "start": "861920",
    "end": "868800"
  },
  {
    "text": "more now again remember Baseline constraints are always",
    "start": "868800",
    "end": "875320"
  },
  {
    "text": "inserted so what happens when you have just one Library it depends on upsale and has a baseline well it's going to",
    "start": "875320",
    "end": "882320"
  },
  {
    "text": "fail of course because our library uses dat string as the version and the",
    "start": "882320",
    "end": "889000"
  },
  {
    "text": "Baseline uses relaxed version because the versioning has changed and of course now we can't build you know we have just",
    "start": "889000",
    "end": "896519"
  },
  {
    "text": "one package and it conflicts with itself when resolving the",
    "start": "896519",
    "end": "903360"
  },
  {
    "text": "dependencies yeah VC package it's is a",
    "start": "904360",
    "end": "910639"
  },
  {
    "text": "thing now but this were actually like good we will get into much worse issues",
    "start": "911320",
    "end": "917959"
  },
  {
    "text": "now because until now we got build failure and build is like and when you're build fails that's good you C the",
    "start": "917959",
    "end": "925199"
  },
  {
    "text": "error early what if you get into runtime issues let's get to runtime issues so we",
    "start": "925199",
    "end": "931399"
  },
  {
    "text": "have a library we have some baseline and we depend on Boost Circle buffer in version 180 good let's build this and we",
    "start": "931399",
    "end": "941120"
  },
  {
    "text": "get like 40 dependencies because VC package does model boost that's nice but",
    "start": "941120",
    "end": "947360"
  },
  {
    "text": "if you like there is an issue here who sees it and it's actually like the",
    "start": "947360",
    "end": "952959"
  },
  {
    "text": "reduced output if you just build it in your console it just Scrolls past us you get 40 more lines what's the issue",
    "start": "952959",
    "end": "960920"
  },
  {
    "text": "exactly we are building different we are building the circular buffer at 180 which we ask for and the rest of boost",
    "start": "963519",
    "end": "969680"
  },
  {
    "text": "at 179 and then we link it together and we hope for the best this is of course extremely if anddr and every and",
    "start": "969680",
    "end": "978000"
  },
  {
    "text": "anything that happens to you is fair play and boost of course does not promise you to be link compatible with",
    "start": "978000",
    "end": "984199"
  },
  {
    "text": "inversions it doesn't even promise to be API compatible with inversions",
    "start": "984199",
    "end": "989480"
  },
  {
    "text": "yeah anyway the reason I use boost in this section is that actually found this when updating our boost dependencies and",
    "start": "989480",
    "end": "996680"
  },
  {
    "text": "I got it kind of fixed for Boost 180 hh1 hh1 here means that it's like the second",
    "start": "996680",
    "end": "1003160"
  },
  {
    "text": "iteration of the recipe for this version of boost and to be clear I don't want to",
    "start": "1003160",
    "end": "1008759"
  },
  {
    "text": "take too much credit I got it fixed I mean I found some person who knows how to fix it and I made noise at him until",
    "start": "1008759",
    "end": "1014600"
  },
  {
    "text": "he did it okay now the issue is this fixes it for a trivial case",
    "start": "1014600",
    "end": "1020560"
  },
  {
    "text": "now if you have this and say 181 this will be",
    "start": "1020560",
    "end": "1027360"
  },
  {
    "text": "fine but uh it's not fine when you actually do more work with Boost and",
    "start": "1027360",
    "end": "1033760"
  },
  {
    "text": "because the weight it's fixed is that boost packages now use version constraints when they depend on other boost packages so boost 181 circular",
    "start": "1033760",
    "end": "1041918"
  },
  {
    "text": "buffer says I need these dependencies in 181 as well but it's easy to break and I will",
    "start": "1041919",
    "end": "1048400"
  },
  {
    "text": "show you how we are back again with our library this time we depend on Boost ICL and it's in",
    "start": "1048400",
    "end": "1055039"
  },
  {
    "text": "version 182 then we take our SDK depend on library and we say actually we still",
    "start": "1055039",
    "end": "1061080"
  },
  {
    "text": "need circular buffer 181 remember 181 is more than 180 so this should be fixed",
    "start": "1061080",
    "end": "1067280"
  },
  {
    "text": "now now here is what will actually happen we start building it looks fine",
    "start": "1067280",
    "end": "1073360"
  },
  {
    "text": "except it's not so what's happening what's happening is that we have these two dependency",
    "start": "1073360",
    "end": "1080280"
  },
  {
    "text": "trees one from the circular buffer one from boost ICL and the Boost ICL depends",
    "start": "1080280",
    "end": "1086080"
  },
  {
    "text": "on its own three with higher version so it wins but anything that's not in the Boost ICL dependency Tre like the",
    "start": "1086080",
    "end": "1092720"
  },
  {
    "text": "circular buffer that gets the old version yeah we are back here again and",
    "start": "1092720",
    "end": "1099320"
  },
  {
    "text": "this is not the only package where this applies actually if you have like SPL packages of any monotic project like QT",
    "start": "1099320",
    "end": "1106919"
  },
  {
    "text": "KDE U then might be I I didn't check exhaustively then you are in this issue",
    "start": "1106919",
    "end": "1113360"
  },
  {
    "text": "once again now there's an interesting part in VC package docs where they",
    "start": "1113360",
    "end": "1119120"
  },
  {
    "text": "actually mention this issue and they have a suggested workaround it's a fun",
    "start": "1119120",
    "end": "1124440"
  },
  {
    "text": "one I actually really like it I'm not kidding so what you can do is that you can have more Registries and you can say",
    "start": "1124440",
    "end": "1131520"
  },
  {
    "text": "this registry only catches these packages so you say actually for Boost",
    "start": "1131520",
    "end": "1137000"
  },
  {
    "text": "packages you know and anything else that fits this pattern use this Baseline",
    "start": "1137000",
    "end": "1142520"
  },
  {
    "text": "instead and in theory by specifying new enough Baseline for your Boost you can",
    "start": "1142520",
    "end": "1147640"
  },
  {
    "text": "force all of them to have the same version now what's the issue with this",
    "start": "1147640",
    "end": "1153400"
  },
  {
    "text": "how how do we break it",
    "start": "1153400",
    "end": "1156440"
  },
  {
    "text": "again so the answer is we just depend on you boost version this in the Baseline",
    "start": "1160200",
    "end": "1166440"
  },
  {
    "text": "it will break instantly once again and of course there's other fun fact if",
    "start": "1166440",
    "end": "1171520"
  },
  {
    "text": "you if you take this as it in documentation and you just say I want new Baseline it won't build because",
    "start": "1171520",
    "end": "1177559"
  },
  {
    "text": "there is new Boost related package that doesn't fit into the pattern but like",
    "start": "1177559",
    "end": "1182880"
  },
  {
    "text": "that's fine you spend one minute looking at the error and then you just say Okay",
    "start": "1182880",
    "end": "1188159"
  },
  {
    "text": "this add this pattern to the packages from the specific Baseline now this is getting to even",
    "start": "1188159",
    "end": "1196520"
  },
  {
    "text": "more fun stuff so VC package has this mis feature okay technically it's",
    "start": "1196520",
    "end": "1203080"
  },
  {
    "text": "feature but no it's Mis feature and it's called default features and this is back",
    "start": "1203080",
    "end": "1208240"
  },
  {
    "text": "from the days when VC package was an up replacement when you called VC package",
    "start": "1208240",
    "end": "1213919"
  },
  {
    "text": "install this package and other package and then you told your build to actually look into this directory for his",
    "start": "1213919",
    "end": "1221120"
  },
  {
    "text": "dependencies and it's a set of features of ports that you build without asking",
    "start": "1221120",
    "end": "1227159"
  },
  {
    "text": "okay in VC package p uh ports have features which is like I want my open CV",
    "start": "1227159",
    "end": "1232520"
  },
  {
    "text": "to be able to read PNG files so PNG is a feature of open",
    "start": "1232520",
    "end": "1237679"
  },
  {
    "text": "CV Now default features will give you big packages this is uh the one I run",
    "start": "1237679",
    "end": "1244159"
  },
  {
    "text": "into first so open CV we want to open PNG packages and",
    "start": "1244159",
    "end": "1252840"
  },
  {
    "text": "[Music]",
    "start": "1253480",
    "end": "1256569"
  },
  {
    "text": "why are we building chirograph config free type G X11 and",
    "start": "1268840",
    "end": "1276480"
  },
  {
    "text": "everything else if we want open CV that can open a PNG file because it's in default features",
    "start": "1276480",
    "end": "1283279"
  },
  {
    "text": "for some reason all of this is in the default features of open CV now thankfully you can actually just",
    "start": "1283279",
    "end": "1289679"
  },
  {
    "text": "disable these you can say default features false I don't want default features they are stupid idea and then",
    "start": "1289679",
    "end": "1296400"
  },
  {
    "text": "if you build it it looks reasonable you know six packages Z lip VC package",
    "start": "1296400",
    "end": "1301640"
  },
  {
    "text": "helpers lip PNG open CV PNG yeah this is reasonable this is",
    "start": "1301640",
    "end": "1307799"
  },
  {
    "text": "fine so will it remain fine of course not because we will",
    "start": "1307799",
    "end": "1314480"
  },
  {
    "text": "ignore you saying I don't want default features how does it happen let's look",
    "start": "1314480",
    "end": "1319760"
  },
  {
    "text": "we have Library F and it doesn't want default features of TV and we have SDK",
    "start": "1319760",
    "end": "1325919"
  },
  {
    "text": "and SDK doesn't know anything about open CV it just knows that it needs to use our library let's build it and we are",
    "start": "1325919",
    "end": "1334080"
  },
  {
    "text": "back to 45 packages the one extra package is from lipu again we are",
    "start": "1334080",
    "end": "1339400"
  },
  {
    "text": "building Cairo free typ G no no this is terrible",
    "start": "1339400",
    "end": "1346279"
  },
  {
    "text": "but it's what it is what it is and what's happening is that JBC package",
    "start": "1346279",
    "end": "1352480"
  },
  {
    "text": "completely ignores by Design default features in transitive dependencies okay if like a transitive",
    "start": "1352480",
    "end": "1358840"
  },
  {
    "text": "depend if you have dependency that says open CV no default features only PNG",
    "start": "1358840",
    "end": "1364760"
  },
  {
    "text": "then what you actually get is open CV PNG and default features yes for reasons",
    "start": "1364760",
    "end": "1371440"
  },
  {
    "text": "and the reasons are again Legacy from many years ago when it was an up",
    "start": "1371440",
    "end": "1377080"
  },
  {
    "text": "replacement now this is open source we can fix it right uh yeah someone tried there and it",
    "start": "1377080",
    "end": "1385320"
  },
  {
    "text": "has been open for two and a half years and I will let you guess how long it has been since there was like last reply to",
    "start": "1385320",
    "end": "1392840"
  },
  {
    "text": "the pr or something you can guess you know uh yeah no it's not moving forward",
    "start": "1392840",
    "end": "1401240"
  },
  {
    "text": "for some reason again there is a work of course and the work is exactly what you expect",
    "start": "1401240",
    "end": "1408039"
  },
  {
    "text": "you will actually I depend open CV I don't know what version I depend I don't know what features I depend but I just",
    "start": "1408039",
    "end": "1414080"
  },
  {
    "text": "know that I don't depend on default features so yeah uh this is the workaround it",
    "start": "1414080",
    "end": "1422240"
  },
  {
    "text": "works of course you can't put this into the override so you can just say if it's an override this is like forced",
    "start": "1422240",
    "end": "1429440"
  },
  {
    "text": "dependency versus this is actual dependency so how do you tell it's a real",
    "start": "1429440",
    "end": "1435360"
  },
  {
    "text": "dependency well you add a command not a real dependency yes I know about the typo",
    "start": "1435360",
    "end": "1441760"
  },
  {
    "text": "when I was proof reading I decided to keep it because it kind of fits the situation but of course there is more",
    "start": "1441760",
    "end": "1450640"
  },
  {
    "text": "why wouldn't there be more so you know building too much is not such an issue",
    "start": "1450640",
    "end": "1456000"
  },
  {
    "text": "know okay like I don't want my CI machines to SP to spend 50 minutes building instead of 20 minutes building",
    "start": "1456000",
    "end": "1463080"
  },
  {
    "text": "but I can live with this you know and when I have the final uh Library I do",
    "start": "1463080",
    "end": "1469039"
  },
  {
    "text": "strip it for unused code with Linker and so on so you know it's not so terrible but you can get worse who here",
    "start": "1469039",
    "end": "1475480"
  },
  {
    "text": "knows FFM Library okay it's really cool Library it",
    "start": "1475480",
    "end": "1480799"
  },
  {
    "text": "can read basically any audio video input we like we I'm not going to say we like",
    "start": "1480799",
    "end": "1486679"
  },
  {
    "text": "it we use it okay if you have ever used the C API it's terrible but we use it",
    "start": "1486679",
    "end": "1492480"
  },
  {
    "text": "it's nice and the interesting part about FFM is that it can be lensed under like",
    "start": "1492480",
    "end": "1498600"
  },
  {
    "text": "five different different licenses based on which subset of it you build and the",
    "start": "1498600",
    "end": "1504200"
  },
  {
    "text": "subset we use is lgpl because we are Distributing a commercial product so we just you know use lgpl subset distribute",
    "start": "1504200",
    "end": "1511240"
  },
  {
    "text": "it as a dynamic library but fmex default build back in",
    "start": "1511240",
    "end": "1517039"
  },
  {
    "text": "the day was GP licensed so you know when we went and",
    "start": "1517039",
    "end": "1523520"
  },
  {
    "text": "used FFM in lgpl configuration and then the SDK team went and used our package",
    "start": "1523520",
    "end": "1530679"
  },
  {
    "text": "then they got FM pack license with GPL yeah look there been two and a half",
    "start": "1530679",
    "end": "1536640"
  },
  {
    "text": "years I am still extremely mad about this like that's not reasonable in any",
    "start": "1536640",
    "end": "1543080"
  },
  {
    "text": "way well let's move on so uh at the start we have seen that",
    "start": "1543080",
    "end": "1551399"
  },
  {
    "text": "VC package also gets us some uh helper packages you know we got like VC VC",
    "start": "1551399",
    "end": "1557200"
  },
  {
    "text": "Package C help at version 2023 Dash something I don't know the",
    "start": "1557200",
    "end": "1562919"
  },
  {
    "text": "rest of the date but some of the helpers are unver and this is fun because what does",
    "start": "1562919",
    "end": "1568919"
  },
  {
    "text": "it mean it means that when you check out VC package locally that's where you get these helpers from",
    "start": "1568919",
    "end": "1576000"
  },
  {
    "text": "so even if you keep the same VC package binary the same Baseline the same",
    "start": "1576000",
    "end": "1581480"
  },
  {
    "text": "version specs in your manifest if you have if you have like get pulled in your",
    "start": "1581480",
    "end": "1587039"
  },
  {
    "text": "VC package checkout The Bu can change and yes I had to debug this of",
    "start": "1587039",
    "end": "1592960"
  },
  {
    "text": "course and our CI just started failing one day so after a few days I found",
    "start": "1592960",
    "end": "1598720"
  },
  {
    "text": "found out that we periodically updated VC package checkout we did keep the old",
    "start": "1598720",
    "end": "1603840"
  },
  {
    "text": "binary and the version and so on but the new checkout actually didn't work it had back and um so I lost few days fixing",
    "start": "1603840",
    "end": "1612120"
  },
  {
    "text": "this before I figured out that I just need to roll back VC package to known good version modal of the story",
    "start": "1612120",
    "end": "1618960"
  },
  {
    "text": "don't let your CI machines update VC package implicitly don't let your developers update VC package",
    "start": "1618960",
    "end": "1625320"
  },
  {
    "text": "implicitly and this has led me to an idea you know maybe I was wrong when I",
    "start": "1625320",
    "end": "1631240"
  },
  {
    "text": "told you that you should always use baselines and versions maybe you should just check out VC package never change",
    "start": "1631240",
    "end": "1637559"
  },
  {
    "text": "the version and that's your and that's your like versioning scheme right no this a terrible idea",
    "start": "1637559",
    "end": "1644120"
  },
  {
    "text": "don't do that okay uh because you still get a like more power from being able to specify",
    "start": "1644120",
    "end": "1651080"
  },
  {
    "text": "your versions than just check checking out the VC page at specific hash but",
    "start": "1651080",
    "end": "1657799"
  },
  {
    "text": "keep in mind that you can't move your VC package checkout or things will break I",
    "start": "1657799",
    "end": "1664519"
  },
  {
    "text": "actually did find a fun example literally yesterday so what I do is that I checked",
    "start": "1664519",
    "end": "1670480"
  },
  {
    "text": "out specific version I checked it out for completely different reasons I needed it to reproduce one issue I have",
    "start": "1670480",
    "end": "1676519"
  },
  {
    "text": "shown you earlier and I went to one of the builds this one specifically all of",
    "start": "1676519",
    "end": "1682159"
  },
  {
    "text": "these examples I will show you at the I will show you an address where you can get them I said build and then I got",
    "start": "1682159",
    "end": "1688200"
  },
  {
    "text": "really weird error in manifest mode VC package install does not support individual package arguments I am not",
    "start": "1688200",
    "end": "1695519"
  },
  {
    "text": "even running VC package myself it's all the responsibility of the VC package scripts and then it starts putting more",
    "start": "1695519",
    "end": "1702640"
  },
  {
    "text": "errors and then whole like uh help message from the VC package tool and so",
    "start": "1702640",
    "end": "1707919"
  },
  {
    "text": "on what happened well the scripts that are supposed to help you B like use VC",
    "start": "1707919",
    "end": "1715320"
  },
  {
    "text": "package you know for example this one that helps you integrate with cake changed and the binary has also changed",
    "start": "1715320",
    "end": "1721519"
  },
  {
    "text": "and now the old scripts with the new binary don't work",
    "start": "1721519",
    "end": "1727080"
  },
  {
    "text": "okay now have I scared you enough who here",
    "start": "1727080",
    "end": "1732279"
  },
  {
    "text": "still wants to use VC package oh a couple of people good uh so",
    "start": "1732279",
    "end": "1737640"
  },
  {
    "text": "let's start about the good part who who here thinks that this is",
    "start": "1737640",
    "end": "1742799"
  },
  {
    "text": "going to be empty",
    "start": "1742799",
    "end": "1745799"
  },
  {
    "text": "now it's not actually have good things to say about VC package so first of all it's really easy",
    "start": "1747880",
    "end": "1754480"
  },
  {
    "text": "to get started you check out one repo you boot VC package to get the binary",
    "start": "1754480",
    "end": "1760080"
  },
  {
    "text": "then you go to your own project and you say actually give me new application in",
    "start": "1760080",
    "end": "1765240"
  },
  {
    "text": "this directory and it's okay it generate VC package Json scaffolding it even",
    "start": "1765240",
    "end": "1771000"
  },
  {
    "text": "generates like properly displ configuration and you can start building this is now like VC package enabled",
    "start": "1771000",
    "end": "1777880"
  },
  {
    "text": "project and you say actually give me fmt it understands how to edit its own",
    "start": "1777880",
    "end": "1783320"
  },
  {
    "text": "Json which you know it's like the minimum but it works and good you can now start",
    "start": "1783320",
    "end": "1789960"
  },
  {
    "text": "building and you will avoid lot of the issues that I told you about because it did like do the right",
    "start": "1789960",
    "end": "1796760"
  },
  {
    "text": "job now another thing that I actually like about VC package is the Baseline it's it's causing me a lot of",
    "start": "1796760",
    "end": "1804480"
  },
  {
    "text": "grief but the grief it's causing me is because the VC package tool doesn't use",
    "start": "1804480",
    "end": "1809559"
  },
  {
    "text": "it properly because at the end of the day the Baseline is a created set of packages that VC package has all of them",
    "start": "1809559",
    "end": "1816679"
  },
  {
    "text": "has buil them together and checked that they work on all target platforms if it's if it's like hash in the VC package",
    "start": "1816679",
    "end": "1824320"
  },
  {
    "text": "repository then you know you can build all of these all of these things together on uh x64 arm Linux Windows Mac",
    "start": "1824320",
    "end": "1834240"
  },
  {
    "text": "this is good this is very useful they spent a lot of money to build run all of the",
    "start": "1834240",
    "end": "1839960"
  },
  {
    "text": "builds now another thing I actually really like OBC package is that it",
    "start": "1839960",
    "end": "1845760"
  },
  {
    "text": "exposes the packages build system so if your dependency uses cake to build",
    "start": "1845760",
    "end": "1852960"
  },
  {
    "text": "itself and exports cmake targets then you will get those cake Target to use",
    "start": "1852960",
    "end": "1859320"
  },
  {
    "text": "yourself this is really valuable because it means that when you go to documentation of that of your dependency",
    "start": "1859320",
    "end": "1865559"
  },
  {
    "text": "for example catch and you say oh like this integration with cake is good I want to use it you know that it's there",
    "start": "1865559",
    "end": "1872960"
  },
  {
    "text": "you don't have like if you work with Konan Konan recreates all of the targets",
    "start": "1872960",
    "end": "1878519"
  },
  {
    "text": "and you have to rely on the fact that like whoever made the Conan package did",
    "start": "1878519",
    "end": "1884039"
  },
  {
    "text": "not change those targets didn't rename them didn't make them behave different and so on I have had lot of bucks uh in",
    "start": "1884039",
    "end": "1890960"
  },
  {
    "text": "catch to about this and V package just says no like this Library uses this",
    "start": "1890960",
    "end": "1896600"
  },
  {
    "text": "build system you get to use it as well okay now another thing I like the",
    "start": "1896600",
    "end": "1905679"
  },
  {
    "text": "triplet files triplet file lets you customize the build of all of your dependencies pretty easily this is like",
    "start": "1905679",
    "end": "1913279"
  },
  {
    "text": "the minimum triet file I think this isn't actually even a custom for Linux",
    "start": "1913279",
    "end": "1918760"
  },
  {
    "text": "yet but you have to say architecture you are building for CRT linkage and system",
    "start": "1918760",
    "end": "1923960"
  },
  {
    "text": "name to get started and then you can get started you know like who here links",
    "start": "1923960",
    "end": "1931000"
  },
  {
    "text": "everything statically yeah okay I should actually like drop my hand because we use FM pack",
    "start": "1931000",
    "end": "1938039"
  },
  {
    "text": "but everything else yeah just build it statically link it it's good nobody has",
    "start": "1938039",
    "end": "1943080"
  },
  {
    "text": "time for dynamic linking except when you have to deal with FM P so what do you do",
    "start": "1943080",
    "end": "1948720"
  },
  {
    "text": "actually if it's FFM p is dynamic otherwise static good enough done and",
    "start": "1948720",
    "end": "1954919"
  },
  {
    "text": "everything works now similar question who here just",
    "start": "1954919",
    "end": "1960679"
  },
  {
    "text": "builds everything with the default Linux targets that where like the compiler doesn't even generate pop count because",
    "start": "1960679",
    "end": "1966600"
  },
  {
    "text": "it's scared that you will run it on machine that's older than me and it doesn't have pop count right nobody because nobody has",
    "start": "1966600",
    "end": "1973200"
  },
  {
    "text": "time for this so we just say okay actually you know Target at least and three that's the machine that we are",
    "start": "1973200",
    "end": "1978600"
  },
  {
    "text": "using in production or you know you can use whatever machine you are fine with targeting here it's just see compiler",
    "start": "1978600",
    "end": "1985480"
  },
  {
    "text": "flex and you can have them here in the tri file and you will get them to the",
    "start": "1985480",
    "end": "1993000"
  },
  {
    "text": "dependency now same question if you make Dynamic Library do you properly control",
    "start": "1993000",
    "end": "1999399"
  },
  {
    "text": "the symbol visibility of your dependencies because if you don't know if you build statically a library and",
    "start": "1999399",
    "end": "2005880"
  },
  {
    "text": "you link it into a dynamic Library you will still expose all of its symbols well we do because we build",
    "start": "2005880",
    "end": "2011320"
  },
  {
    "text": "Dynamic libraries and it's simply with repats you know and who here use the",
    "start": "2011320",
    "end": "2017039"
  },
  {
    "text": "sanitizers we do a lot like sanitizers but we had an issue a lot of the",
    "start": "2017039",
    "end": "2022600"
  },
  {
    "text": "sanitizers need you to rebuild everything or they will give you false positive for example container sanitizer",
    "start": "2022600",
    "end": "2029360"
  },
  {
    "text": "is completely awesome feature but for it to work everything that touches your STD",
    "start": "2029360",
    "end": "2036000"
  },
  {
    "text": "vector or similar container has to be compiled with the sanitizer enabled if not you will get errors so",
    "start": "2036000",
    "end": "2043240"
  },
  {
    "text": "you just put this into the triplet you say F sanitize and I don't remember the flag from my on to my head but you can",
    "start": "2043240",
    "end": "2049720"
  },
  {
    "text": "do this it's easy it actually is how we how we do it because that's the like",
    "start": "2049720",
    "end": "2054878"
  },
  {
    "text": "only way not to go insane do you want to keep consistent language standards everywhere you should",
    "start": "2054879",
    "end": "2062079"
  },
  {
    "text": "once again don't like don't link together libraries that have been compiled with different languages",
    "start": "2062079",
    "end": "2068000"
  },
  {
    "text": "standards bad mojo might work might not work it's better to just compile",
    "start": "2068000",
    "end": "2073800"
  },
  {
    "text": "everything with C++ 20 or whatever you use now who here has ever tried to just",
    "start": "2073800",
    "end": "2080358"
  },
  {
    "text": "take lto of all of your dependencies compile it together and see what",
    "start": "2080359",
    "end": "2085960"
  },
  {
    "text": "happens one person actually did this uh it took like a day and a half we have a",
    "start": "2085960",
    "end": "2093240"
  },
  {
    "text": "lot of dependencies but you know you can just uh do lto in a triplet file for all of",
    "start": "2093240",
    "end": "2100839"
  },
  {
    "text": "your dependencies and then when you link it you have lto information for all of your",
    "start": "2100839",
    "end": "2105920"
  },
  {
    "text": "dependencies don't do this with big projects or used in lto and basically",
    "start": "2105920",
    "end": "2113240"
  },
  {
    "text": "any other customization that you can think of that goes through the compiler it's easy to",
    "start": "2113240",
    "end": "2120320"
  },
  {
    "text": "do now this is my one dick against Kanan in my talk okay VC package doesn't not",
    "start": "2120320",
    "end": "2127920"
  },
  {
    "text": "have executable package metadata if you have ever used Konan then you know that",
    "start": "2127920",
    "end": "2133040"
  },
  {
    "text": "if you ask Konan hey what's the what are the dependencies of this package it starts by running Python and it runs and",
    "start": "2133040",
    "end": "2140800"
  },
  {
    "text": "it runs python script from that the dependency provides to find this out",
    "start": "2140800",
    "end": "2146119"
  },
  {
    "text": "no no we package does not have executive metadata it's all just Json you can",
    "start": "2146119",
    "end": "2152599"
  },
  {
    "text": "parit it whatever you want so you can write your own tools instead of running some weird by",
    "start": "2152599",
    "end": "2159119"
  },
  {
    "text": "scripts and finally licensing who here likes licensing I hate licensing but I have to",
    "start": "2159119",
    "end": "2166000"
  },
  {
    "text": "comply with licenses you know you have to do it so who knows the licenses of",
    "start": "2166000",
    "end": "2172000"
  },
  {
    "text": "all of their dependencies yeah we do we have to do it right and do you automatically audit",
    "start": "2172000",
    "end": "2178400"
  },
  {
    "text": "them do you comply with MIT licenses you know like do you generate all notices for MIT and AES by the way I hate the",
    "start": "2178400",
    "end": "2185800"
  },
  {
    "text": "fact that the EP license that you should use like a different text for the acknowledgement than is the license text",
    "start": "2185800",
    "end": "2192880"
  },
  {
    "text": "might is much nicer about this now VC package makes this uh reasonably hard okay it's not",
    "start": "2192880",
    "end": "2200520"
  },
  {
    "text": "easy it's never easy because you will just run into packages that that like everybody can use it unless you use it",
    "start": "2200520",
    "end": "2206680"
  },
  {
    "text": "for evil how does that work but what do you do is that vcp just",
    "start": "2206680",
    "end": "2213960"
  },
  {
    "text": "gives you all of the port license files into build three if you use some if you have dependency it doesn't matter how",
    "start": "2213960",
    "end": "2219760"
  },
  {
    "text": "deep you will get the license file in there so you can just automatically scan",
    "start": "2219760",
    "end": "2225040"
  },
  {
    "text": "it it also tries to give you spdx compliant summary of your",
    "start": "2225040",
    "end": "2230200"
  },
  {
    "text": "dependencies this is experimental stage so you are not supposed to rely on it",
    "start": "2230200",
    "end": "2235640"
  },
  {
    "text": "but when I was building automat automation for our license handling for",
    "start": "2235640",
    "end": "2240920"
  },
  {
    "text": "our SDK that we distribute U I think I was like 90% happy with this and for the",
    "start": "2240920",
    "end": "2246640"
  },
  {
    "text": "remaining few like libraries I just had to go through the license files and then I finally had to special case one or two",
    "start": "2246640",
    "end": "2252800"
  },
  {
    "text": "which were just weird about about their licenses okay now",
    "start": "2252800",
    "end": "2260839"
  },
  {
    "text": "conclusion don't be actually scared of e package okay I have shown you some nasty",
    "start": "2260839",
    "end": "2266880"
  },
  {
    "text": "examples of issues you can run into but I did spend three years collecting them",
    "start": "2266880",
    "end": "2272000"
  },
  {
    "text": "pushing things kind of to the Limit but be careful when using it okay I show I",
    "start": "2272000",
    "end": "2278240"
  },
  {
    "text": "have shown you some of the edge cases you can run into I have zero doubts that there are more that you can run into so",
    "start": "2278240",
    "end": "2286880"
  },
  {
    "text": "kind of what you should take away is that VC package is functional it has its V but it's functional and some of those",
    "start": "2286880",
    "end": "2294520"
  },
  {
    "text": "vs will cause you issues and the best thing you can do is to know about them",
    "start": "2294520",
    "end": "2300440"
  },
  {
    "text": "you know but uh it also gets things right and it as well like three years",
    "start": "2300440",
    "end": "2307640"
  },
  {
    "text": "into the let's call it experiment I would keep VC package mostly because I don't want to",
    "start": "2307640",
    "end": "2314160"
  },
  {
    "text": "invest all of the work into getting Kanan and then finding out that Kanan has the same issues I actually talked uh",
    "start": "2314160",
    "end": "2320720"
  },
  {
    "text": "yeah if you have Konan set up keep it I have friends who use Conan and it turns",
    "start": "2320720",
    "end": "2326119"
  },
  {
    "text": "out and when we talk together that lot of the issues are actually very similar I know that for example the CCI the",
    "start": "2326119",
    "end": "2333240"
  },
  {
    "text": "Conan Center Central Conan index or something it avoids the the Boost issue",
    "start": "2333240",
    "end": "2338800"
  },
  {
    "text": "but do you know how it just says you build all of boost every time goodbye which is a",
    "start": "2338800",
    "end": "2345839"
  },
  {
    "text": "solution you know it works but he but if you are not using package manager try VC",
    "start": "2345839",
    "end": "2352920"
  },
  {
    "text": "package Oran and again no fetch content is not a",
    "start": "2352920",
    "end": "2359040"
  },
  {
    "text": "package manager okay it's not and that's the end I would like uh",
    "start": "2359040",
    "end": "2367560"
  },
  {
    "text": "uh I happy to hear questions and just this is a link to GitHub repository where you can find all of the examples",
    "start": "2367560",
    "end": "2374000"
  },
  {
    "text": "that you can just compile test them and play around with",
    "start": "2374000",
    "end": "2378880"
  },
  {
    "text": "them okay that's [Applause]",
    "start": "2380520",
    "end": "2390680"
  },
  {
    "text": "it questions yes",
    "start": "2390680",
    "end": "2395760"
  },
  {
    "text": "[Music] uh uh if if you have ever tried the experimental support for like artifacts",
    "start": "2407090",
    "end": "2414839"
  },
  {
    "text": "in wec package uh no uh I know that it's there it's",
    "start": "2414839",
    "end": "2420760"
  },
  {
    "text": "getting a lot of work actually uh but basically we don't care that much for",
    "start": "2420760",
    "end": "2427839"
  },
  {
    "text": "the twool chains and stuff because we use lot of them and what we actually",
    "start": "2427839",
    "end": "2432880"
  },
  {
    "text": "might use in the close future is the caching of artifacts in",
    "start": "2432880",
    "end": "2439200"
  },
  {
    "text": "the in the manner of like when you are getting some archive from some U URL to build a package to ensure that it's",
    "start": "2439200",
    "end": "2446040"
  },
  {
    "text": "mirrored in our own like infrastructure so that we don't have issues with like",
    "start": "2446040",
    "end": "2451720"
  },
  {
    "text": "random uh we don't have issues when random repositories have issues as well because that has been actually like an",
    "start": "2451720",
    "end": "2458359"
  },
  {
    "text": "pretty annoying from the approach that vage uses to build from sources unless you have like valid",
    "start": "2458359",
    "end": "2464920"
  },
  {
    "text": "cash uh it's when your CI just fails because some repository Say the video L",
    "start": "2464920",
    "end": "2471760"
  },
  {
    "text": "repository had like 5 minute break when where it didn't work because we use uh",
    "start": "2471760",
    "end": "2476839"
  },
  {
    "text": "the Avid dependency from there and we we can't get it for 5 minutes now the build fails and you have to go and start the",
    "start": "2476839",
    "end": "2483640"
  },
  {
    "text": "build again and it kind of sucks",
    "start": "2483640",
    "end": "2489240"
  },
  {
    "text": "okay more questions it seems like the answer is no",
    "start": "2491480",
    "end": "2496520"
  },
  {
    "text": "so I think we are done here thank you [Applause]",
    "start": "2496520",
    "end": "2504268"
  }
]