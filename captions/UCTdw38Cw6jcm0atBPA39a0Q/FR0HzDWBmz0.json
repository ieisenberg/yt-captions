[
  {
    "start": "0",
    "end": "125000"
  },
  {
    "text": "right so it's uh 10 20 so you can just start whenever you're ready okay good luck thank you",
    "start": "9280",
    "end": "18000"
  },
  {
    "text": "um hi everyone uh i'm naheed and i'm with you from toronto canada",
    "start": "18000",
    "end": "24080"
  },
  {
    "text": "tonight actually today i'm talking to the future uh i'm a back-end developer specialized on",
    "start": "24080",
    "end": "30640"
  },
  {
    "text": "application architecture um we today we're going to talk about common mistakes and misconceptions in",
    "start": "30640",
    "end": "37840"
  },
  {
    "text": "web application security using oauth 2 and open id connect you can find",
    "start": "37840",
    "end": "44480"
  },
  {
    "text": "my contact info on the screen in case you wanted to connect which i will be very happy to",
    "start": "44480",
    "end": "52079"
  },
  {
    "text": "uh and i'm currently a software architect and in mcafee um as about me",
    "start": "52079",
    "end": "59680"
  },
  {
    "text": "uh in the next 60 minutes we're going to talk about the specs and",
    "start": "59680",
    "end": "66000"
  },
  {
    "text": "olaf to an open id connect specs i'm going to go over specs which you may",
    "start": "66000",
    "end": "71439"
  },
  {
    "text": "already be familiar with but we're going to go over the details and",
    "start": "71439",
    "end": "76720"
  },
  {
    "text": "also going over some best practices about this items and also talk about future of this",
    "start": "76720",
    "end": "83680"
  },
  {
    "text": "concept following that i will have a quick demo using i am identity server for which is an open",
    "start": "83680",
    "end": "91280"
  },
  {
    "text": "source library for oauth and open id connect i'll do my best to leave some time for",
    "start": "91280",
    "end": "96640"
  },
  {
    "text": "questions but you can also reach me over slack for a question for chad i'll be",
    "start": "96640",
    "end": "103040"
  },
  {
    "text": "very happy to i'm very passionate about security concepts and i consider myself learning all the time",
    "start": "103040",
    "end": "110000"
  },
  {
    "text": "so then feel free to just reach out to chad",
    "start": "110000",
    "end": "115840"
  },
  {
    "text": "so one second",
    "start": "119520",
    "end": "123679"
  },
  {
    "start": "125000",
    "end": "182000"
  },
  {
    "text": "okay let's get started uh let's talk about authentication and",
    "start": "125040",
    "end": "131760"
  },
  {
    "text": "authorization these are the two of the main problems on modern uh web applications they uh like",
    "start": "131760",
    "end": "139360"
  },
  {
    "text": "authentication is about who you are that's like verifying the user to make sure that this is the this is",
    "start": "139360",
    "end": "146000"
  },
  {
    "text": "who they say they are and also authorization is about what you can do it's like uh this process deals with",
    "start": "146000",
    "end": "153280"
  },
  {
    "text": "granting or denying rights to access resources like as an example just imagine an",
    "start": "153280",
    "end": "159760"
  },
  {
    "text": "application which is managing the data on behalf of the user so this application should do",
    "start": "159760",
    "end": "165040"
  },
  {
    "text": "authentication to make sure the user is who they say they are and also needs to",
    "start": "165040",
    "end": "170560"
  },
  {
    "text": "make sure this user who are who they are so they can access just the data that",
    "start": "170560",
    "end": "176400"
  },
  {
    "text": "they are allowed to which means to authorize the user",
    "start": "176400",
    "end": "181760"
  },
  {
    "start": "182000",
    "end": "472000"
  },
  {
    "text": "here is a big picture of how modern applications may look like and um so in this picture you can",
    "start": "182959",
    "end": "190319"
  },
  {
    "text": "you see like different scenarios like for example browsers communicate with web applications",
    "start": "190319",
    "end": "196000"
  },
  {
    "text": "and browser-based applications communicate uh with web apis also like native applications",
    "start": "196000",
    "end": "202000"
  },
  {
    "text": "communicate with the web api server-based or new no ui application like device sas",
    "start": "202000",
    "end": "207760"
  },
  {
    "text": "uh and connect with the web apis also like web applications connecting to the",
    "start": "207760",
    "end": "213120"
  },
  {
    "text": "web apis uh as their as themselves or on behalf of the user also web apis can",
    "start": "213120",
    "end": "219760"
  },
  {
    "text": "communicate with each other again as their own or as uh or sometimes on behalf of the",
    "start": "219760",
    "end": "226720"
  },
  {
    "text": "user so and typically each and every one of these",
    "start": "226720",
    "end": "232000"
  },
  {
    "text": "relations that you see they need to protect resources which means that they need to implement",
    "start": "232000",
    "end": "237120"
  },
  {
    "text": "authentication and authorization every time we talk about resources and protection so both of them are matter we",
    "start": "237120",
    "end": "243519"
  },
  {
    "text": "need to know who is this user also they need to access just what we want them to access or what they have",
    "start": "243519",
    "end": "250319"
  },
  {
    "text": "access to so the solution uh for these is",
    "start": "250319",
    "end": "255360"
  },
  {
    "text": "oauth2 and open id connect so os2 oauth2 is the industry standard protocol",
    "start": "255360",
    "end": "262800"
  },
  {
    "text": "for authorization it is actually a delegation protocol um it means that",
    "start": "262800",
    "end": "270400"
  },
  {
    "text": "it's actually letting someone who controls a resource allow a software um",
    "start": "270639",
    "end": "276639"
  },
  {
    "text": "application to access that resource on their behalf means that the user is owning the data but they are",
    "start": "276639",
    "end": "283280"
  },
  {
    "text": "delegating this uh access to a software so oauth is um works over https",
    "start": "283280",
    "end": "291840"
  },
  {
    "text": "and also like us can work on devices apis servers and applications",
    "start": "291840",
    "end": "298000"
  },
  {
    "text": "and the way that it works is using access tokens rather than credentials in fact olaf was came to the picture",
    "start": "298000",
    "end": "306720"
  },
  {
    "text": "for delegation and also like to avoid the password the anti-pattern open id",
    "start": "306720",
    "end": "313520"
  },
  {
    "text": "connect is uh the standard open standard for the authentication this is the most",
    "start": "313520",
    "end": "320720"
  },
  {
    "text": "recent this is not the first one uh the federation identity and also like",
    "start": "320720",
    "end": "326000"
  },
  {
    "text": "samal and now open id connect open id connect in fact is a single identity layer on",
    "start": "326000",
    "end": "332320"
  },
  {
    "text": "the top of all us and it actually extends to for authentication scenarios",
    "start": "332320",
    "end": "340000"
  },
  {
    "text": "so if you're interested to know oawasu is being developed uh with the oauth working group",
    "start": "340000",
    "end": "347199"
  },
  {
    "text": "of ietf which is internet engineering task force but open id connect specification is",
    "start": "347199",
    "end": "353840"
  },
  {
    "text": "developed by open id working group these are two uh",
    "start": "353840",
    "end": "358960"
  },
  {
    "text": "different like organizations but they are connected now that we know the problems we said",
    "start": "358960",
    "end": "365280"
  },
  {
    "text": "that the problems are uh authentication authorization and also we saw the big picture right",
    "start": "365280",
    "end": "370800"
  },
  {
    "text": "and now let's look at that big picture with the solutions right so as you see on each of those lines i",
    "start": "370800",
    "end": "377680"
  },
  {
    "text": "draw that like how open id connect or olaf too can come to the picture",
    "start": "377680",
    "end": "383120"
  },
  {
    "text": "and uh solve our problems right so if you see at the top like at the top there",
    "start": "383120",
    "end": "388960"
  },
  {
    "text": "is authorizations that were added as well so we're gonna get deeper into this that",
    "start": "388960",
    "end": "395120"
  },
  {
    "text": "how this has to work right so but uh to to go through let's say",
    "start": "395120",
    "end": "402319"
  },
  {
    "text": "i mean i want to say that all through and open id connect are actually open standards means that anyone can",
    "start": "402319",
    "end": "408639"
  },
  {
    "text": "implement it there is no actual implementation proposed it's like there is different libraries and providers",
    "start": "408639",
    "end": "415120"
  },
  {
    "text": "and that but the specs is providing us the standard right so and these are actually",
    "start": "415120",
    "end": "421360"
  },
  {
    "text": "fundamentally very complicated so which may lead to so many mistakes",
    "start": "421360",
    "end": "426479"
  },
  {
    "text": "and misconceptions on implementation uh so specs are more than like 400 pages uh",
    "start": "426479",
    "end": "433520"
  },
  {
    "text": "if i certified and um also like the point is that these specs are",
    "start": "433520",
    "end": "439440"
  },
  {
    "text": "not written for developers who are using those libraries right specs are written for people who are",
    "start": "439440",
    "end": "445840"
  },
  {
    "text": "writing the library or the providers the services which are which there is so many of them in",
    "start": "445840",
    "end": "452800"
  },
  {
    "text": "the market as well and as well as open sources so that's why specs are not that simple to read as a",
    "start": "452800",
    "end": "459520"
  },
  {
    "text": "developer who is trying to actually use those libraries so let's discuss some of the details of",
    "start": "459520",
    "end": "466800"
  },
  {
    "text": "this specs and also going through the best practices for this",
    "start": "466800",
    "end": "472960"
  },
  {
    "start": "472000",
    "end": "637000"
  },
  {
    "text": "uh to be able to actually go through that we need like let's let's talk about the terminology like some of these keywords",
    "start": "473120",
    "end": "479919"
  },
  {
    "text": "that is all over the place that what does this mean so in oh like i'm gonna",
    "start": "479919",
    "end": "485440"
  },
  {
    "text": "start with uh olaf the reason is that as we said open id connect is in fact",
    "start": "485440",
    "end": "492879"
  },
  {
    "text": "an extension on the top of ola so if we do i know like everybody is interested you know authentication",
    "start": "492879",
    "end": "499360"
  },
  {
    "text": "and an authorization but in fact because of an id connect is on the top of olaf it's for the best if you learn this back",
    "start": "499360",
    "end": "506479"
  },
  {
    "text": "if you learn the details of olaf and then say now like the extension for authentication works like this",
    "start": "506479",
    "end": "514399"
  },
  {
    "text": "uh so let's start with the roles so when we talk about the rules on uh oauth",
    "start": "514399",
    "end": "520560"
  },
  {
    "text": "so there is some keywords that they may seem very complicated like research on there like",
    "start": "520560",
    "end": "526160"
  },
  {
    "text": "um which resource owner or ro is the user is a person who is doing",
    "start": "526160",
    "end": "532320"
  },
  {
    "text": "actually that delegation it's like uh",
    "start": "532320",
    "end": "537839"
  },
  {
    "text": "which is end user if if the client actually it can be end user so the resource",
    "start": "537839",
    "end": "544160"
  },
  {
    "text": "server is the api right it's hosting the protected resources",
    "start": "544160",
    "end": "549360"
  },
  {
    "text": "and also it's capable of accepting and responding to protected resources",
    "start": "549360",
    "end": "555680"
  },
  {
    "text": "uh requesting uh by the by this access token so it's like in like in",
    "start": "555680",
    "end": "562080"
  },
  {
    "text": "simple word research server is the service that exposes that data right so then it's api like in most of",
    "start": "562080",
    "end": "569040"
  },
  {
    "text": "scenarios when we talk about resources we're just talking about the api client",
    "start": "569040",
    "end": "575040"
  },
  {
    "text": "client is actually the application it's the application making protected the",
    "start": "575040",
    "end": "580320"
  },
  {
    "text": "resource requests on behalf of the user so on behalf of that resource owner that",
    "start": "580320",
    "end": "585440"
  },
  {
    "text": "we just talked about and the term client can and can be like a",
    "start": "585440",
    "end": "592720"
  },
  {
    "text": "web application device and even an api and the first one is the authorization",
    "start": "592720",
    "end": "600640"
  },
  {
    "text": "server or as so the authorizations server is uh the component",
    "start": "600640",
    "end": "606000"
  },
  {
    "text": "which is issuing the access token to the client after uh successfully authenticating the",
    "start": "606000",
    "end": "611680"
  },
  {
    "text": "resource owner and also uh obtaining the authorization right so after making sure that uh this is",
    "start": "611680",
    "end": "618959"
  },
  {
    "text": "valid this is the one that um issuing the token so the authorization",
    "start": "618959",
    "end": "626079"
  },
  {
    "text": "server you might um see it as a security token service as well which is like",
    "start": "626079",
    "end": "631360"
  },
  {
    "text": "sts like these are the same if you saw the same keyword",
    "start": "631360",
    "end": "638240"
  },
  {
    "start": "637000",
    "end": "735000"
  },
  {
    "text": "um the next uh thing in the terminology is the client",
    "start": "638560",
    "end": "643839"
  },
  {
    "text": "type before i talk about client type i should say the client that we talked about so for a client",
    "start": "643839",
    "end": "650480"
  },
  {
    "text": "like it has two uh property so each client has a unique identifier which we call",
    "start": "650480",
    "end": "657920"
  },
  {
    "text": "client id it's a public identifier um for the apps and uh it's like a random string sorry",
    "start": "657920",
    "end": "665440"
  },
  {
    "text": "but it's suggested to not be uh guessable very easily right and another property that the client has is",
    "start": "665440",
    "end": "673760"
  },
  {
    "text": "a client secret and the secret is known only to the client to this application and also to",
    "start": "673760",
    "end": "679920"
  },
  {
    "text": "authorization server so again it's a random string but it's better not to be guessable and it's for the best to",
    "start": "679920",
    "end": "687279"
  },
  {
    "text": "use like like cryptography secure libraries to generate that's",
    "start": "687279",
    "end": "692560"
  },
  {
    "text": "that secret so the reason i said that because now",
    "start": "692560",
    "end": "697760"
  },
  {
    "text": "the type of client is related to that uh security to that um secret right so the first type of",
    "start": "697760",
    "end": "705040"
  },
  {
    "text": "clients are confidential client so confidential clients are the ones that can",
    "start": "705040",
    "end": "710480"
  },
  {
    "text": "actually keep that secret secure so they and they are like able to securely",
    "start": "710480",
    "end": "717040"
  },
  {
    "text": "authenticate with the authorization server right like um i'm gonna provide some examples of this",
    "start": "717040",
    "end": "722800"
  },
  {
    "text": "and uh the public client but is not like that they are unable uh",
    "start": "722800",
    "end": "728079"
  },
  {
    "text": "to hold this secret secure right it's like um",
    "start": "728079",
    "end": "735200"
  },
  {
    "start": "735000",
    "end": "838000"
  },
  {
    "text": "like as an example the small apps mobile apps and devices are public clients so they are running",
    "start": "735200",
    "end": "742320"
  },
  {
    "text": "on the browser on the internet and also like uh devices are owned by a user so there is a user",
    "start": "742320",
    "end": "749440"
  },
  {
    "text": "they have like a smart tv imagine their smart tv it's in people's houses right so i know it",
    "start": "749440",
    "end": "755040"
  },
  {
    "text": "sounds very very hard but it is not impossible that somebody read the content that we upload on the tv also like",
    "start": "755040",
    "end": "762560"
  },
  {
    "text": "because user has the ownership they can actually read the wi-fi uh communication or something like this",
    "start": "762560",
    "end": "769040"
  },
  {
    "text": "which means that they are not um confidential right they are",
    "start": "769040",
    "end": "775360"
  },
  {
    "text": "considered public line and for confidential like apis like web applications like an nvc web",
    "start": "775360",
    "end": "781360"
  },
  {
    "text": "application which is on the server uh there is a another type of client",
    "start": "781360",
    "end": "786880"
  },
  {
    "text": "which they call credential clients just as an extension and which uh is more of a future concept",
    "start": "786880",
    "end": "794079"
  },
  {
    "text": "so it's like they have credentials uh but then because it's it's they are mostly dynamically",
    "start": "794079",
    "end": "801519"
  },
  {
    "text": "registered so then it means that the authorization server cannot confirm their identity it's just just as",
    "start": "801519",
    "end": "808720"
  },
  {
    "text": "a side note just to know like there is a third type as well",
    "start": "808720",
    "end": "814560"
  },
  {
    "text": "uh so here comes to the first note so i decided to just show the",
    "start": "814560",
    "end": "821040"
  },
  {
    "text": "notes like the best practices or stuff like that we learned we have to focus more",
    "start": "821040",
    "end": "826160"
  },
  {
    "text": "by this lamp and the devices are public client so this is a matter because in so many",
    "start": "826160",
    "end": "832079"
  },
  {
    "text": "of examples they just introduce devices or smart tvs as a confidential",
    "start": "832079",
    "end": "838720"
  },
  {
    "start": "838000",
    "end": "1056000"
  },
  {
    "text": "the next thing in the terminology is the scopes scopes initially propose the concept of",
    "start": "838800",
    "end": "845519"
  },
  {
    "text": "a scope by oauth2 so scopes are used to express what an application can do on behalf of",
    "start": "845519",
    "end": "852639"
  },
  {
    "text": "a given user and it's always scopes are subset of what a user can do in the first place right",
    "start": "852639",
    "end": "860800"
  },
  {
    "text": "so uh so then they are just for handling delegation and on behalf of the user",
    "start": "860800",
    "end": "868959"
  },
  {
    "text": "and because of that as we said that scripts are subs of what user can actually do",
    "start": "868959",
    "end": "874560"
  },
  {
    "text": "scopes cannot allow an application to do more than what the user can do right and the other like here and",
    "start": "874560",
    "end": "881920"
  },
  {
    "text": "i have some example of the scopes like for example you can say order write",
    "start": "881920",
    "end": "887360"
  },
  {
    "text": "order delete or they're read so which these are like user can delegate order",
    "start": "887360",
    "end": "893600"
  },
  {
    "text": "write to this application so an application can just make an order instead of like in",
    "start": "893600",
    "end": "898959"
  },
  {
    "text": "on behalf of the user the other concept is consent the concept is",
    "start": "898959",
    "end": "905680"
  },
  {
    "text": "like the application can request one or more scopes this information then",
    "start": "905680",
    "end": "912880"
  },
  {
    "text": "later presented to the user in the consent screen and so then the user",
    "start": "912880",
    "end": "919839"
  },
  {
    "text": "can actually limit those scopes right and say like for example like",
    "start": "919839",
    "end": "925440"
  },
  {
    "text": "application is asking or even they have registered i mean they have access to application have access to or the right",
    "start": "925440",
    "end": "932160"
  },
  {
    "text": "order delete but then on the content users say i don't want this application to be able to",
    "start": "932160",
    "end": "937519"
  },
  {
    "text": "delete this order right so most of you already seen the consent",
    "start": "937519",
    "end": "944560"
  },
  {
    "text": "form especially like when you try to log in using social media which is more of open id",
    "start": "944560",
    "end": "951120"
  },
  {
    "text": "connect or authentication but the same concept so in general",
    "start": "951120",
    "end": "956560"
  },
  {
    "text": "the scopes that that an application is requesting can be modified by um resource on air by",
    "start": "956560",
    "end": "964079"
  },
  {
    "text": "the user and also authorization server both of them can actually",
    "start": "964079",
    "end": "969440"
  },
  {
    "text": "modify the scopes there is a tip about scopes which is very important",
    "start": "969440",
    "end": "974880"
  },
  {
    "text": "because um in general there is no standard i mean the specs doesn't say",
    "start": "974880",
    "end": "979920"
  },
  {
    "text": "about the scopes in fact like um scopes like the the access token",
    "start": "979920",
    "end": "985920"
  },
  {
    "text": "i mean they can be not be in access token slogan can contain no scope but like yeah that's why like it's",
    "start": "985920",
    "end": "992959"
  },
  {
    "text": "um best practices about scopes that is say that scopes alone in an access token are not",
    "start": "992959",
    "end": "1000079"
  },
  {
    "text": "enough to carry on authorization decisions so it means that",
    "start": "1000079",
    "end": "1006079"
  },
  {
    "text": "like it's they are not enough so it's on the application to actually",
    "start": "1006079",
    "end": "1011600"
  },
  {
    "text": "mix the scopes with um with the with what user can do with user",
    "start": "1011600",
    "end": "1017519"
  },
  {
    "text": "privileges to decide about permissions right later in the demo i'm going to",
    "start": "1017519",
    "end": "1023040"
  },
  {
    "text": "show you a sample of this that how they should be",
    "start": "1023040",
    "end": "1028558"
  },
  {
    "text": "this is a very important um and olaf does not define any particular",
    "start": "1028640",
    "end": "1035120"
  },
  {
    "text": "values for scopes since it's highly dependent on services internal architecture",
    "start": "1035120",
    "end": "1040640"
  },
  {
    "text": "and needs but it is suggested um that scopes does not carry the",
    "start": "1040640",
    "end": "1046400"
  },
  {
    "text": "permission alone right so they have to be mixed with with user privilege to decide about",
    "start": "1046400",
    "end": "1052080"
  },
  {
    "text": "permissions on the api's speciality",
    "start": "1052080",
    "end": "1056559"
  },
  {
    "start": "1056000",
    "end": "1125000"
  },
  {
    "text": "and the next thing is access tokens so access token is like as we said oauth",
    "start": "1057679",
    "end": "1064640"
  },
  {
    "text": "is about delegation of the access using access token instead of",
    "start": "1064640",
    "end": "1069840"
  },
  {
    "text": "credentials right so then this is one of the actual main concept of the oauth",
    "start": "1069840",
    "end": "1074880"
  },
  {
    "text": "so access tokens are the things that application used to make api requests on behalf of",
    "start": "1074880",
    "end": "1080960"
  },
  {
    "text": "user and so again for access token on olaf there is no defined structure",
    "start": "1080960",
    "end": "1087919"
  },
  {
    "text": "and that is required by factories best practices for that but it's not required right it's it's like",
    "start": "1087919",
    "end": "1095200"
  },
  {
    "text": "it the specs say that access token should be an opaque string means that like it should",
    "start": "1095200",
    "end": "1100880"
  },
  {
    "text": "not be transparent to the user right and it can be any random string",
    "start": "1100880",
    "end": "1107039"
  },
  {
    "text": "uh bear tokens are actually the most common type of uh or predominant type of uh access to",
    "start": "1107039",
    "end": "1114160"
  },
  {
    "text": "confused within oauth too um but the spec doesn't require to do that",
    "start": "1114160",
    "end": "1120840"
  },
  {
    "text": "right so um here i have an",
    "start": "1120840",
    "end": "1127039"
  },
  {
    "start": "1125000",
    "end": "1368000"
  },
  {
    "text": "example of a access token which is a jwt",
    "start": "1127039",
    "end": "1133679"
  },
  {
    "text": "jwt or json web token some people call it jot is an open standard they have it has an",
    "start": "1133679",
    "end": "1140960"
  },
  {
    "text": "rfc for itself which define a compact and also self-contained way for securely transmitting the",
    "start": "1140960",
    "end": "1147120"
  },
  {
    "text": "information between parties as a json object like in simple word it's a way to just",
    "start": "1147120",
    "end": "1152960"
  },
  {
    "text": "send the json object uh here and there in a secure way right and this information on",
    "start": "1152960",
    "end": "1161200"
  },
  {
    "text": "jwt token can be verified and trusted because it is",
    "start": "1161200",
    "end": "1166640"
  },
  {
    "text": "digitally signed so on best practices it suggests that you use jwt",
    "start": "1166640",
    "end": "1172640"
  },
  {
    "text": "for the access token but if you see um on the screen so i'm gonna try to actually",
    "start": "1172640",
    "end": "1180400"
  },
  {
    "text": "um i hope it's big enough so uh this is this screen that you see",
    "start": "1180400",
    "end": "1186640"
  },
  {
    "text": "i tried to like decode a jwt token using jwt io",
    "start": "1186640",
    "end": "1193520"
  },
  {
    "text": "it's just a website and uh so if you see each data ability has three parts the",
    "start": "1193520",
    "end": "1199840"
  },
  {
    "text": "header the payload and also the signature right so what we talked about um",
    "start": "1199840",
    "end": "1206320"
  },
  {
    "text": "their scopes and you can see in the payload it's the content of this token",
    "start": "1206320",
    "end": "1211600"
  },
  {
    "text": "and um in the in the signature so that's you see the signature of this",
    "start": "1211600",
    "end": "1217200"
  },
  {
    "text": "that you say it's a sign and it's secure so but what i wanted to actually",
    "start": "1217200",
    "end": "1222240"
  },
  {
    "text": "talk about is the header as well so on the best practices it is suggested to if you to use jwt in",
    "start": "1222240",
    "end": "1229200"
  },
  {
    "text": "the first place and also using typed one so if you see the token that i have there",
    "start": "1229200",
    "end": "1234880"
  },
  {
    "text": "it say 80 plus jwt as a type means that this is a access token which is jwt it means that",
    "start": "1234880",
    "end": "1242720"
  },
  {
    "text": "if i have another jwt token i can recognize which one is access token and later when we",
    "start": "1242720",
    "end": "1248480"
  },
  {
    "text": "get to identity token you will see that i want the type gonna be different so then i can say",
    "start": "1248480",
    "end": "1253840"
  },
  {
    "text": "which token is what this is um suggested to do so and um yeah",
    "start": "1253840",
    "end": "1263840"
  },
  {
    "text": "uh so here as a tip i have it um locked a little bit to just make sure um we do",
    "start": "1264960",
    "end": "1270960"
  },
  {
    "text": "that so to use type json web token as a best practice to do",
    "start": "1270960",
    "end": "1277520"
  },
  {
    "text": "okay so in general json web tokens um are suggested because of consistency",
    "start": "1277520",
    "end": "1284080"
  },
  {
    "text": "as well because it is consistent to use everywhere and also they are self-contained so when you use gwt you there is no need",
    "start": "1284080",
    "end": "1291840"
  },
  {
    "text": "to round trip to authorization server to verify but if you use a random string right to verify that the api it has to be a",
    "start": "1291840",
    "end": "1299120"
  },
  {
    "text": "round trip to the uh authorization server to make sure that this is valid or",
    "start": "1299120",
    "end": "1305039"
  },
  {
    "text": "figure out some other way to just validate that token the other tip about jw tokens which is",
    "start": "1305039",
    "end": "1311840"
  },
  {
    "text": "very important is that the jw tokens",
    "start": "1311840",
    "end": "1316960"
  },
  {
    "text": "can be verified without doing a database look up around crypto authorization server as we said",
    "start": "1316960",
    "end": "1322799"
  },
  {
    "text": "so that's why there was no way to invalidate the token until it expires",
    "start": "1322799",
    "end": "1328159"
  },
  {
    "text": "so it means that like like if you have a token so this token is up the client and um",
    "start": "1328159",
    "end": "1335679"
  },
  {
    "text": "like client might might make like a couple of calls to the apis so even if it's um invalid right even if",
    "start": "1335679",
    "end": "1343120"
  },
  {
    "text": "you decide to invalid that the ways there is a standard to invalidate talking and things",
    "start": "1343120",
    "end": "1348559"
  },
  {
    "text": "but uh like if you don't implement other things or don't do in simple way",
    "start": "1348559",
    "end": "1353919"
  },
  {
    "text": "there is no way to invalidate it that's why i suggested to use a short term token not like because some",
    "start": "1353919",
    "end": "1360080"
  },
  {
    "text": "of the software they use um token for like a week or two so then it is if it's in the wrong hand so then",
    "start": "1360080",
    "end": "1367600"
  },
  {
    "text": "you're gonna be in trouble i mean the application gonna be in trouble the next concept to go through is the",
    "start": "1367600",
    "end": "1374799"
  },
  {
    "start": "1368000",
    "end": "1572000"
  },
  {
    "text": "endpoints under oauth2 we have we have multiple endpoints but",
    "start": "1374799",
    "end": "1380320"
  },
  {
    "text": "two of the main ones that we're going to discuss here is the authorization endpoint and also",
    "start": "1380320",
    "end": "1385840"
  },
  {
    "text": "token input so authorization endpoint which is the first one is um used to interact with the resource",
    "start": "1385840",
    "end": "1392559"
  },
  {
    "text": "owner and obtain the authorization grant so uh and big on this authorization server",
    "start": "1392559",
    "end": "1400080"
  },
  {
    "text": "first actually verify the identity of this resource owner to make sure like it is a valid one i'll show an",
    "start": "1400080",
    "end": "1407120"
  },
  {
    "text": "example of um how this work but also the token and after that the token emblem token",
    "start": "1407120",
    "end": "1413840"
  },
  {
    "text": "and point is the one which is actually used to obtain access token um",
    "start": "1413840",
    "end": "1420080"
  },
  {
    "text": "here is uh here i have example of audrey's uh authorized endpoint so about the request",
    "start": "1420080",
    "end": "1426640"
  },
  {
    "text": "that how does it work to do alter endpoint which is a get so you send the",
    "start": "1426640",
    "end": "1432480"
  },
  {
    "text": "client id scopes and then the response type and um the rudolph url",
    "start": "1432480",
    "end": "1440559"
  },
  {
    "text": "so it's just a sample thing to how it works so when we get to the grants so we're gonna",
    "start": "1440559",
    "end": "1446799"
  },
  {
    "text": "talk about more details but here it's just to say that in the terminology there is an",
    "start": "1446799",
    "end": "1452799"
  },
  {
    "text": "authorized endpoint which is saying what grant to use and here is the token endpoint um",
    "start": "1452799",
    "end": "1460080"
  },
  {
    "text": "like um example of the post to token and point about the request and also like",
    "start": "1460080",
    "end": "1466240"
  },
  {
    "text": "the response on the on the left you see the request which is um to the token endpoint the",
    "start": "1466240",
    "end": "1472480"
  },
  {
    "text": "information required and also on the right on the top the",
    "start": "1472480",
    "end": "1478480"
  },
  {
    "text": "successful response and below you're going to see the error response",
    "start": "1478480",
    "end": "1483840"
  },
  {
    "text": "and if you see the ax on the top uh top right we have access we have actually token response",
    "start": "1483840",
    "end": "1491360"
  },
  {
    "text": "which contains access token token type and and also reference token expires in so",
    "start": "1491360",
    "end": "1497279"
  },
  {
    "text": "within this the access token and token and type are the mandatory one the x-partisan",
    "start": "1497279",
    "end": "1502559"
  },
  {
    "text": "is recommended but the rest are optional and um like can be not there",
    "start": "1502559",
    "end": "1508880"
  },
  {
    "text": "and for the for the errors there is different errors involved like invalid request is an example like",
    "start": "1508880",
    "end": "1515360"
  },
  {
    "text": "you can have invalid decline in valid grant and but this is the standard to",
    "start": "1515360",
    "end": "1521919"
  },
  {
    "text": "how to get the response which is very actually descriptive",
    "start": "1521919",
    "end": "1528240"
  },
  {
    "text": "here i have a high-level uh diagram of how this works now we know",
    "start": "1528240",
    "end": "1535120"
  },
  {
    "text": "these keywords in the tech terminology now when you see the resource owner you know that this is the user when you see",
    "start": "1535120",
    "end": "1541039"
  },
  {
    "text": "the authorization server and when you see the resource server and also client you know",
    "start": "1541039",
    "end": "1547840"
  },
  {
    "text": "that you would know that this is the application which is asking for a resource right so this is",
    "start": "1547840",
    "end": "1554640"
  },
  {
    "text": "very very high level just to show how the round trips to this to to each other is happening but uh",
    "start": "1554640",
    "end": "1561279"
  },
  {
    "text": "we're gonna go further to the mall and to the details of the grant this is just to give you a picture of how in general",
    "start": "1561279",
    "end": "1568400"
  },
  {
    "text": "in the high level in abstract tanks work grant types for the grant types actually",
    "start": "1568400",
    "end": "1575840"
  },
  {
    "start": "1572000",
    "end": "1689000"
  },
  {
    "text": "grants are and are the flows are the solutions for different use cases",
    "start": "1575840",
    "end": "1581120"
  },
  {
    "text": "uh it's like i have this use case for example i have a mobile app okay what's the solution",
    "start": "1581120",
    "end": "1586159"
  },
  {
    "text": "with olaf i have like uh web app what is the solution or what's gonna um suggest to me right",
    "start": "1586159",
    "end": "1594159"
  },
  {
    "text": "uh for this if you see i have them with different ones right so you see client credentials and but",
    "start": "1594159",
    "end": "1600400"
  },
  {
    "text": "you see authorization code and password and implicit in different font because some of these are legacy grants",
    "start": "1600400",
    "end": "1607120"
  },
  {
    "text": "and they are not suggested to use and we're going to discuss like um the ones that are not legacy",
    "start": "1607120",
    "end": "1613039"
  },
  {
    "text": "with more details actually and um let's let's go to client credentials as",
    "start": "1613039",
    "end": "1619279"
  },
  {
    "text": "a first one so line credentials is um the grant type or is the flow as you see",
    "start": "1619279",
    "end": "1626480"
  },
  {
    "text": "in the picture um it's it's a flow that client is asking is is authenticating it's",
    "start": "1626480",
    "end": "1634159"
  },
  {
    "text": "uh sending their client id and client secret and then they're gonna get an access token to be able to",
    "start": "1634159",
    "end": "1640480"
  },
  {
    "text": "call an api and based on this sample you see that there is a client secret involved right",
    "start": "1640480",
    "end": "1646159"
  },
  {
    "text": "this means that um this this must be confidential client right so and this is true this um grant type",
    "start": "1646159",
    "end": "1655120"
  },
  {
    "text": "is to obtain access token for for a client but out of the scope of",
    "start": "1655120",
    "end": "1660960"
  },
  {
    "text": "user this is not on behalf when we had that big picture we said okay sometimes this web application or",
    "start": "1660960",
    "end": "1666159"
  },
  {
    "text": "this api they want to um access each other but they don't want to",
    "start": "1666159",
    "end": "1671679"
  },
  {
    "text": "do that on behalf of user this is the grant suggested for that this grant is suggested for server to",
    "start": "1671679",
    "end": "1677440"
  },
  {
    "text": "server as we discussed and also for confidential client for this grant as well like",
    "start": "1677440",
    "end": "1683679"
  },
  {
    "text": "access token can be any string but it is suggested the best practices for this",
    "start": "1683679",
    "end": "1688799"
  },
  {
    "text": "grant is to use json web token as well because like even if you do the call and not on",
    "start": "1688799",
    "end": "1695760"
  },
  {
    "start": "1689000",
    "end": "2052000"
  },
  {
    "text": "behalf of the user but you do to the same api right if if if we talk and if we",
    "start": "1695760",
    "end": "1701360"
  },
  {
    "text": "use another access access token type and not the jwts so then we need another code and other",
    "start": "1701360",
    "end": "1708159"
  },
  {
    "text": "infrastructure to be able to read that access token as well but just in favor of consistency it's suggested to use json",
    "start": "1708159",
    "end": "1715840"
  },
  {
    "text": "web token for this as well and also https i know this is server to",
    "start": "1715840",
    "end": "1721840"
  },
  {
    "text": "server but honestly https is the only thing protecting requests from being",
    "start": "1721840",
    "end": "1726880"
  },
  {
    "text": "intercepted or modified so that's why it is suggested so let's",
    "start": "1726880",
    "end": "1733039"
  },
  {
    "text": "go to the next one authorization code grant authorization code grant we said",
    "start": "1733039",
    "end": "1738159"
  },
  {
    "text": "it is legacy and it is suggested to not to use it but authorization code grant is actually",
    "start": "1738159",
    "end": "1745840"
  },
  {
    "text": "based for the pixie pixy is the next one that we said okay it's not legacy that's why it's good if",
    "start": "1745840",
    "end": "1752000"
  },
  {
    "text": "we go through this and i want to go through this and say why it is suggested not to use it",
    "start": "1752000",
    "end": "1757520"
  },
  {
    "text": "and then now the the one that is suggested to use it uh what it is so on the left you see a",
    "start": "1757520",
    "end": "1764799"
  },
  {
    "text": "high-level diagram which shows how authorization code grant works so um",
    "start": "1764799",
    "end": "1772559"
  },
  {
    "text": "it is used let's say by confidential and also public client to exchange it's based on",
    "start": "1772559",
    "end": "1779120"
  },
  {
    "text": "exchange authorization code for access token so first the client is um requesting a code",
    "start": "1779120",
    "end": "1787440"
  },
  {
    "text": "from the authorization server and then gonna exchange it for the access token",
    "start": "1787440",
    "end": "1793919"
  },
  {
    "text": "right then there is there is two um two process involved here so this brand is using",
    "start": "1793919",
    "end": "1801440"
  },
  {
    "text": "front channel to use to get the access token which is the less secure one and then it uses the back channel to",
    "start": "1801440",
    "end": "1808640"
  },
  {
    "text": "exchange this code with the act and with access token which is the highly secure way to get that",
    "start": "1808640",
    "end": "1818399"
  },
  {
    "text": "all right and also in this uh in this grant what we do is that we are sending the return url as well",
    "start": "1818399",
    "end": "1824720"
  },
  {
    "text": "like we say that when we ask for the code we say and this is the redirect url and then so",
    "start": "1824720",
    "end": "1832320"
  },
  {
    "text": "this redirect url is what i'm gonna redirect you and also it's registered",
    "start": "1832320",
    "end": "1837360"
  },
  {
    "text": "for client if i want to go through that again from the top after this description i would say that okay like the client is",
    "start": "1837360",
    "end": "1844320"
  },
  {
    "text": "at is going to authorization server using their identifier if they are confidential using um yeah",
    "start": "1844320",
    "end": "1852000"
  },
  {
    "text": "using actually they're just on the identifier and then and they say this is my redirect url and with this",
    "start": "1852000",
    "end": "1859279"
  },
  {
    "text": "redirect url client is already registered on the authorization server means that there is another check that",
    "start": "1859279",
    "end": "1865840"
  },
  {
    "text": "this authorization so we're going to check that redirect url is mapped and it's correct and also they",
    "start": "1865840",
    "end": "1872799"
  },
  {
    "text": "will send this estate which is for um like cross site request forgery attack actually but it's",
    "start": "1872799",
    "end": "1879360"
  },
  {
    "text": "not tied to the code what is happening on the front channel the authorization server gonna redirect",
    "start": "1879360",
    "end": "1884720"
  },
  {
    "text": "back to the client with the code right and then after that client gonna request",
    "start": "1884720",
    "end": "1891519"
  },
  {
    "text": "again so you see on the uh right below that it would go to now to the token endpoint",
    "start": "1891519",
    "end": "1896880"
  },
  {
    "text": "and say okay now exchange this code that i have right i received in the previous um step",
    "start": "1896880",
    "end": "1904000"
  },
  {
    "text": "with this uh with my with an access token just exchanges with access token and it's gonna send the real requirement",
    "start": "1904000",
    "end": "1910640"
  },
  {
    "text": "again right it would say okay so that was it and also like for the confidential client it",
    "start": "1910640",
    "end": "1917279"
  },
  {
    "text": "would send the secret as well so but secret not for the public lines so for confidential",
    "start": "1917279",
    "end": "1923039"
  },
  {
    "text": "client so this um flow was actually",
    "start": "1923039",
    "end": "1929600"
  },
  {
    "text": "this flow was actually was originally requested for mobile applications right",
    "start": "1930080",
    "end": "1936240"
  },
  {
    "text": "but there was uh there was like a couple of attacks which was re reported on this flow that's why they",
    "start": "1936240",
    "end": "1942880"
  },
  {
    "text": "said don't use it let's see what was those attacks so the first attack which was was",
    "start": "1942880",
    "end": "1948720"
  },
  {
    "text": "authorization code interception attack so this was for public clients so which was reported absolutely the",
    "start": "1948720",
    "end": "1956240"
  },
  {
    "text": "document that i have is for smartphones is for uh phone applications",
    "start": "1956240",
    "end": "1962320"
  },
  {
    "text": "so in the uh for the public lines as i said we don't have any secret right so then as long as somebody",
    "start": "1962320",
    "end": "1970240"
  },
  {
    "text": "grab that code somebody can access that code they can they can just go and exchange that with",
    "start": "1970240",
    "end": "1976000"
  },
  {
    "text": "the authorization server so on their smartphones um like just imagine i have",
    "start": "1976000",
    "end": "1983600"
  },
  {
    "text": "an app and then i have a malicious app right this malicious app is just registering itself under the",
    "start": "1983600",
    "end": "1989600"
  },
  {
    "text": "same with our qrl correct and then after like",
    "start": "1989600",
    "end": "1994720"
  },
  {
    "text": "when when when the authorization code is back the the operating system browser",
    "start": "1994720",
    "end": "2000880"
  },
  {
    "text": "might return to the malicious app or to the legitimate app right if the mill each of those can",
    "start": "2000880",
    "end": "2007279"
  },
  {
    "text": "happen that's why it is not a full line so and then if the malicious app received that",
    "start": "2007279",
    "end": "2013039"
  },
  {
    "text": "so they can exchange for the access token right they don't even need to be like a copy of that app they can be any",
    "start": "2013039",
    "end": "2019679"
  },
  {
    "text": "app right as long as they can be there on that smartphone and they register themselves",
    "start": "2019679",
    "end": "2026159"
  },
  {
    "text": "on the same return url redirect url so they will work and then they exchange so",
    "start": "2026159",
    "end": "2032880"
  },
  {
    "text": "i know you might discuss that there was a state uh like uh parameter but it's not tied",
    "start": "2032880",
    "end": "2038799"
  },
  {
    "text": "to the code in the authorization code and this was just for public clients right",
    "start": "2038799",
    "end": "2046080"
  },
  {
    "text": "there was and you might say okay now for confidential so why not using that so there is",
    "start": "2046080",
    "end": "2052079"
  },
  {
    "start": "2052000",
    "end": "2166000"
  },
  {
    "text": "another attack which called authorization code injection attack it's it's a more complex attack",
    "start": "2052079",
    "end": "2058560"
  },
  {
    "text": "but um in fact this one is like just imagine it is actually happening from a",
    "start": "2058560",
    "end": "2065040"
  },
  {
    "text": "legitimate client right so um on the authorization code injection",
    "start": "2065040",
    "end": "2070720"
  },
  {
    "text": "so i have a client so which is the user the user try to log in",
    "start": "2070720",
    "end": "2076000"
  },
  {
    "text": "and then i like him just imagine there is like a browser extension on their machine or",
    "start": "2076000",
    "end": "2082158"
  },
  {
    "text": "something that when they try to log in when they receive actually that code back now",
    "start": "2082159",
    "end": "2088638"
  },
  {
    "text": "that that like malicious uh like extension gonna grab that code",
    "start": "2088639",
    "end": "2094638"
  },
  {
    "text": "right and send it to the attacker attacker in fact has",
    "start": "2094639",
    "end": "2099760"
  },
  {
    "text": "a client which is legitimate client right but then they don't have the username",
    "start": "2099760",
    "end": "2105200"
  },
  {
    "text": "password of this user right so just imagine this user is already authenticated and everything but they",
    "start": "2105200",
    "end": "2111359"
  },
  {
    "text": "want to have the same access that this user has what they would do is to just get that",
    "start": "2111359",
    "end": "2116880"
  },
  {
    "text": "code okay this is confidential client they need secret that's why they use a legitimate client so so they would use",
    "start": "2116880",
    "end": "2124480"
  },
  {
    "text": "this code we and from the same app from the their client they try to initiate",
    "start": "2124480",
    "end": "2131440"
  },
  {
    "text": "authorization code grant they would go to the server and then once they receive the code instead of",
    "start": "2131440",
    "end": "2136720"
  },
  {
    "text": "for the next step instead of they and try to exchange code with access token with their own code",
    "start": "2136720",
    "end": "2144240"
  },
  {
    "text": "they will replace that and the user code with that and then they exchange this attack is called authorization code",
    "start": "2144240",
    "end": "2151760"
  },
  {
    "text": "injection means that it's not even from a malicious app or malicious client it's from a legitimate client but we and",
    "start": "2151760",
    "end": "2159280"
  },
  {
    "text": "we didn't i mean use an attacker is using that it's not our actual user using that",
    "start": "2159280",
    "end": "2166880"
  },
  {
    "start": "2166000",
    "end": "2417000"
  },
  {
    "text": "that's why it is such as that um to do not use authorization code grant and use pixi",
    "start": "2167359",
    "end": "2174320"
  },
  {
    "text": "but what is this pixel so pixi is a proof key code exchange uh it it",
    "start": "2174320",
    "end": "2182160"
  },
  {
    "text": "there was an rfc on 2015 i guess for pixie so pixie is here to fix that",
    "start": "2182160",
    "end": "2188320"
  },
  {
    "text": "problem the problems that we talked about and this pixie is to fix that but how it's trying to fix that",
    "start": "2188320",
    "end": "2195599"
  },
  {
    "text": "just imagine for the pixie um to when we use pixi for",
    "start": "2195599",
    "end": "2200720"
  },
  {
    "text": "public clients um so like um um it does the same right for",
    "start": "2200720",
    "end": "2207040"
  },
  {
    "text": "public and confidential it will receive the code and then it would exchange the code with their access token but what it does",
    "start": "2207040",
    "end": "2216000"
  },
  {
    "text": "it hasn't it has actually just imagine like we said that for confidential they would use the secret uh to exchange",
    "start": "2216000",
    "end": "2222720"
  },
  {
    "text": "the code with the access token right the secret is to guarantee that hey this is",
    "start": "2222720",
    "end": "2228720"
  },
  {
    "text": "the client but then uh the attacker would actually attack that as well with just uh doing",
    "start": "2228720",
    "end": "2235760"
  },
  {
    "text": "using their legitimate client but here on pixi this um this",
    "start": "2235760",
    "end": "2240800"
  },
  {
    "text": "this secret is like a like imagine a dynamic secret way right it's just that on each request",
    "start": "2240800",
    "end": "2247760"
  },
  {
    "text": "on each of this um flow the full one it's like there is the authentication is happening",
    "start": "2247760",
    "end": "2254240"
  },
  {
    "text": "why because the mechanism is in a way that when and just just imagine this client as a",
    "start": "2254240",
    "end": "2260640"
  },
  {
    "text": "code verifier which is a random string right just they would say okay i want this um i",
    "start": "2260640",
    "end": "2266480"
  },
  {
    "text": "have this um like random stream that i generated so",
    "start": "2266480",
    "end": "2271520"
  },
  {
    "text": "when i want to on the front channel i'm asking for the code right i go to authorization server i'm going",
    "start": "2271520",
    "end": "2277359"
  },
  {
    "text": "to send the request to the client id redirect uri and the other things which was already",
    "start": "2277359",
    "end": "2283040"
  },
  {
    "text": "on authorization code flow but along with that i'm gonna actually send them this uh",
    "start": "2283040",
    "end": "2288560"
  },
  {
    "text": "code verifier and also um then but but in a way with a method i'm gonna",
    "start": "2288560",
    "end": "2295440"
  },
  {
    "text": "like for example hash it right so then i want to i they name it code challenge means that",
    "start": "2295440",
    "end": "2301599"
  },
  {
    "text": "it's the code verifier which is hashed or secured but then also the method that",
    "start": "2301599",
    "end": "2308480"
  },
  {
    "text": "is sent to right so now i'm sending a random string with the metal that i",
    "start": "2308480",
    "end": "2314640"
  },
  {
    "text": "generated this random string to the authorization server right so authorization server",
    "start": "2314640",
    "end": "2320320"
  },
  {
    "text": "is getting that and then and later when i received the code it would already back to me and then i",
    "start": "2320320",
    "end": "2325599"
  },
  {
    "text": "received the code so now with that when i'm asking like when the client is asking for",
    "start": "2325599",
    "end": "2331520"
  },
  {
    "text": "the to exchange this access token they're gonna send the actual code verifier now right the code verifier the",
    "start": "2331520",
    "end": "2338320"
  },
  {
    "text": "the random string that they had without hashing or encrypting or doing any cryptography",
    "start": "2338320",
    "end": "2345040"
  },
  {
    "text": "like function on that right they would send the actual one so in the first one the",
    "start": "2345040",
    "end": "2351920"
  },
  {
    "text": "the challenge center which is the modified code verifier the the encrypted one",
    "start": "2351920",
    "end": "2358000"
  },
  {
    "text": "and in the second one the actual code verifier means that authorization server now has a chance to",
    "start": "2358000",
    "end": "2363680"
  },
  {
    "text": "check yes this is the same one why because they received the method and me before and also code challenge",
    "start": "2363680",
    "end": "2371760"
  },
  {
    "text": "now with that code verifier when it's sent they can apply the same method on the code verify",
    "start": "2371760",
    "end": "2377040"
  },
  {
    "text": "to make sure these two are the same right um so that's why there is guarantee that",
    "start": "2377040",
    "end": "2383440"
  },
  {
    "text": "the same client which actually requested the code and received the code is the same client is exchanging the",
    "start": "2383440",
    "end": "2391280"
  },
  {
    "text": "access token with us that's why it's secure and it is i just said for the previous attack reason that",
    "start": "2391280",
    "end": "2397520"
  },
  {
    "text": "we talked suggested to use pixie for both um public and also a confidential",
    "start": "2397520",
    "end": "2403280"
  },
  {
    "text": "club there were some tips um about pixi um so this is um like",
    "start": "2403280",
    "end": "2410480"
  },
  {
    "text": "as we said for a stolen authorization code attack and also um code injection so there is",
    "start": "2410480",
    "end": "2418079"
  },
  {
    "start": "2417000",
    "end": "2473000"
  },
  {
    "text": "a very good tip about pixi as well so which actually can um we can be in trouble if we do that so",
    "start": "2418079",
    "end": "2425359"
  },
  {
    "text": "which is the reoric uri so rhetoric url must your way must be",
    "start": "2425359",
    "end": "2431920"
  },
  {
    "text": "compared using exact string match for the pc so this is a good tip um to do that",
    "start": "2431920",
    "end": "2439599"
  },
  {
    "text": "so imagine like this is an example that can go wrong like if you register because some of the",
    "start": "2439599",
    "end": "2445599"
  },
  {
    "text": "providers actually letting you do that so if you for example register the first",
    "start": "2445599",
    "end": "2450800"
  },
  {
    "text": "one so that the attacker can go with the third one and just um return back like as a readable",
    "start": "2450800",
    "end": "2457599"
  },
  {
    "text": "url can receive your code so it it actually helps to detect mix-up",
    "start": "2457599",
    "end": "2464160"
  },
  {
    "text": "attack um so it's it would take very long to explain weeks of attack but it's",
    "start": "2464160",
    "end": "2470000"
  },
  {
    "text": "good to know that rudolph you are well gonna help us on that also do not use referral http header",
    "start": "2470000",
    "end": "2477200"
  },
  {
    "start": "2473000",
    "end": "2581000"
  },
  {
    "text": "so even if you use pixi so do not use refer http headers this is in the best",
    "start": "2477200",
    "end": "2482960"
  },
  {
    "text": "practices because if you use um http like referrers the leakage can happen from",
    "start": "2482960",
    "end": "2490319"
  },
  {
    "text": "like oauth client and also authorization server um so like like just imagine",
    "start": "2490319",
    "end": "2497599"
  },
  {
    "text": "when you receive code or or even the access token if you have a link out into that in that",
    "start": "2497599",
    "end": "2504079"
  },
  {
    "text": "page on somewhere else it can cause leakage okay so i'm not gonna go deep into how",
    "start": "2504079",
    "end": "2510400"
  },
  {
    "text": "the location work um so the password grant",
    "start": "2510400",
    "end": "2516160"
  },
  {
    "text": "and um there is a password grant and implicit or to off",
    "start": "2516160",
    "end": "2522480"
  },
  {
    "text": "legacy one so i guess i'm gonna skip those um so but they are on the deck you can",
    "start": "2522480",
    "end": "2529040"
  },
  {
    "text": "go over them i'm gonna share the deck actually but the best practices say um use pixie instead of those",
    "start": "2529040",
    "end": "2536800"
  },
  {
    "text": "and also implicit grant so implicit grant just just let's say implicit grant is",
    "start": "2536800",
    "end": "2542480"
  },
  {
    "text": "was suggested for the javascript applications uh because like at 2012 like the",
    "start": "2542480",
    "end": "2550079"
  },
  {
    "text": "we wouldn't be able to actually make a goal from javascript to another domain right so that's why they",
    "start": "2550079",
    "end": "2556880"
  },
  {
    "text": "simplified authorization code flow and they suggested to use this implicit grant but this is not the case we have a",
    "start": "2556880",
    "end": "2564160"
  },
  {
    "text": "course and the solution is there it's not suggested to use this anymore because",
    "start": "2564160",
    "end": "2569920"
  },
  {
    "text": "now we can do ajax call um to outs to other domains and this is",
    "start": "2569920",
    "end": "2575760"
  },
  {
    "text": "not the case anymore so that's why it is suggested to use pixi insta",
    "start": "2575760",
    "end": "2581680"
  },
  {
    "start": "2581000",
    "end": "2645000"
  },
  {
    "text": "so now if we come go back to the terminology so um it's better to say that okay here",
    "start": "2581680",
    "end": "2588160"
  },
  {
    "text": "and like just when client credentials are and pixie are the ones to be used",
    "start": "2588160",
    "end": "2595200"
  },
  {
    "text": "so reference token is the last thing on the oauth so it means that um",
    "start": "2595839",
    "end": "2602640"
  },
  {
    "text": "so for for the reference token if when you receive an access token uh and this token is expired so",
    "start": "2602640",
    "end": "2609280"
  },
  {
    "text": "when you use it invalid token so you like refresh showcase to have to to have a chance to just ask for a new",
    "start": "2609280",
    "end": "2617599"
  },
  {
    "text": "access token right um so for the confidential clients already",
    "start": "2617599",
    "end": "2622800"
  },
  {
    "text": "when you ask for a refresh token when we are actually requesting um the secret but not",
    "start": "2622800",
    "end": "2629760"
  },
  {
    "text": "for public clients so that's why for the public clients the best practices say that use um send their constraint",
    "start": "2629760",
    "end": "2637440"
  },
  {
    "text": "refresh tokens or do the refresh talking rotations so this is um suggested like um center",
    "start": "2637440",
    "end": "2646078"
  },
  {
    "start": "2645000",
    "end": "2731000"
  },
  {
    "text": "so here i have that so sender constraint refresh token is to tie this reference",
    "start": "2646160",
    "end": "2651680"
  },
  {
    "text": "token to the client just to make sure the same client who had the access token with the refresh token",
    "start": "2651680",
    "end": "2658160"
  },
  {
    "text": "is actually requesting for the reference token and one-time use is actually it suggests",
    "start": "2658160",
    "end": "2663520"
  },
  {
    "text": "that it's um it's um suggests i mean in the future it's gonna be in the",
    "start": "2663520",
    "end": "2668560"
  },
  {
    "text": "uh spec so it's just in case that things go wrong and the attacker received actually a",
    "start": "2668560",
    "end": "2674560"
  },
  {
    "text": "refresh token so just make sure that it's used one time right and even if the legitimate client who",
    "start": "2674560",
    "end": "2681599"
  },
  {
    "text": "didn't accept didn't receive that request i mean like the reference token was used but",
    "start": "2681599",
    "end": "2687680"
  },
  {
    "text": "this client which had that because of one time like um they wouldn't be able to use that that's okay just",
    "start": "2687680",
    "end": "2693520"
  },
  {
    "text": "it's one client and there there was an attack so then it's better to know and stuff just",
    "start": "2693520",
    "end": "2698960"
  },
  {
    "text": "doing nothing so here i have some use cases",
    "start": "2698960",
    "end": "2704319"
  },
  {
    "text": "which show um like what is the like we talked about authorization and",
    "start": "2704319",
    "end": "2709760"
  },
  {
    "text": "out and authentication here i have something to just convince you that we need authentication",
    "start": "2709760",
    "end": "2715119"
  },
  {
    "text": "uh here so uh for the delegate delegated authorization yes it is",
    "start": "2715119",
    "end": "2721119"
  },
  {
    "text": "authorization but then when we talk about spa law games bob logging mobile app and single sign-on these are all",
    "start": "2721119",
    "end": "2727440"
  },
  {
    "text": "authentication cases right something is um is required and all of the is not for",
    "start": "2727440",
    "end": "2734160"
  },
  {
    "text": "authentication the reason it's safe because so like we talked about like highlights",
    "start": "2734160",
    "end": "2739359"
  },
  {
    "text": "in the terminology right we just skipped the detail but like here there was no standard way to get user info we",
    "start": "2739359",
    "end": "2745920"
  },
  {
    "text": "didn't talk about actually uh user info also like every implementation for",
    "start": "2745920",
    "end": "2752480"
  },
  {
    "text": "authentication is different yeah some people use them federation authentication saml but then",
    "start": "2752480",
    "end": "2758079"
  },
  {
    "text": "there is no there was no like standard for that and also like there was no um",
    "start": "2758079",
    "end": "2765680"
  },
  {
    "text": "common sense of scope actually for uh like this user info or or just to say",
    "start": "2765680",
    "end": "2772160"
  },
  {
    "text": "what is data about this user that's why actually open id connect",
    "start": "2772160",
    "end": "2777280"
  },
  {
    "text": "came to picture so this is so this is actually the most recent um standard",
    "start": "2777280",
    "end": "2782960"
  },
  {
    "text": "or technology for authentication but uh this is hand to hand with all of us too and as we said it",
    "start": "2782960",
    "end": "2791119"
  },
  {
    "text": "is an extension on the top of our work as i try to demonstrate in a simple very",
    "start": "2791119",
    "end": "2796319"
  },
  {
    "text": "simple way um that it is on the top it's an extension on the top of a wasp too",
    "start": "2796319",
    "end": "2801520"
  },
  {
    "text": "and it uses all of all all that and then i'm gonna get there actually in a bit",
    "start": "2801520",
    "end": "2808000"
  },
  {
    "text": "uh so uh on open id connect there is a couple of new concepts added",
    "start": "2808000",
    "end": "2815359"
  },
  {
    "text": "right um in the terminology so first of all on um about this like i'm gonna just talk",
    "start": "2815359",
    "end": "2822640"
  },
  {
    "start": "2818000",
    "end": "2910000"
  },
  {
    "text": "about the things which is added not the things which are shared like uh when like on uh open id connect when we read",
    "start": "2822640",
    "end": "2829599"
  },
  {
    "text": "the spec we we see a concept as a relying party right",
    "start": "2829599",
    "end": "2834800"
  },
  {
    "text": "relaying party or rp which is actually the client right this is a client which accept",
    "start": "2834800",
    "end": "2840960"
  },
  {
    "text": "which would support open id connect so then like the same client that we talked if it supports um",
    "start": "2840960",
    "end": "2847440"
  },
  {
    "text": "open id connect they call it rp index back and op or open id provider again it's an",
    "start": "2847440",
    "end": "2854160"
  },
  {
    "text": "authorization server which is capable of authenticating the user and providing um",
    "start": "2854160",
    "end": "2859760"
  },
  {
    "text": "the claims related to this authentication to the relaying party so then these terms is",
    "start": "2859760",
    "end": "2866240"
  },
  {
    "text": "actually this is like authorization server and client but like in this spec they just",
    "start": "2866240",
    "end": "2872400"
  },
  {
    "text": "um have different names right so here is a high level of",
    "start": "2872400",
    "end": "2878160"
  },
  {
    "text": "how open id connect works right in the high level it's just um they um like um relaying party asking for",
    "start": "2878160",
    "end": "2886640"
  },
  {
    "text": "authentication asking like them you know open id provider asking for",
    "start": "2886640",
    "end": "2892880"
  },
  {
    "text": "authentication and then um having that back and then like it's the rest like like",
    "start": "2892880",
    "end": "2899839"
  },
  {
    "text": "having a identity talking or eventually accident access token back and also",
    "start": "2899839",
    "end": "2905040"
  },
  {
    "text": "asking for the user info like here all over the place you see the user info because like yes this is one",
    "start": "2905040",
    "end": "2912559"
  },
  {
    "start": "2910000",
    "end": "3070000"
  },
  {
    "text": "of the things added we're going to get to the end point um sorry i'm trying to go to faster pace because i'm um",
    "start": "2912559",
    "end": "2919599"
  },
  {
    "text": "checking the time and i still have a lot to say so for um the scopes actually it's",
    "start": "2919599",
    "end": "2926960"
  },
  {
    "text": "one of the things which is on which is special about open id characters that there was no common",
    "start": "2926960",
    "end": "2932880"
  },
  {
    "text": "uh or standard scope about users or authentication in the oauth right but um",
    "start": "2932880",
    "end": "2940240"
  },
  {
    "text": "open id connect it comes that um like it say that yes there is a standard",
    "start": "2940240",
    "end": "2945839"
  },
  {
    "text": "the scopes can be used to request some specific setup information and",
    "start": "2945839",
    "end": "2951920"
  },
  {
    "text": "make about user and make them available on claim values this is the big",
    "start": "2951920",
    "end": "2957920"
  },
  {
    "text": "difference constant is the same so but the difference that on the constant on open id connect when we show",
    "start": "2957920",
    "end": "2964800"
  },
  {
    "text": "the constant so we don't say do we want them to you i mean we don't say if that's the case too but we say okay user",
    "start": "2964800",
    "end": "2972000"
  },
  {
    "text": "and user do you want me to return this information of you to this application",
    "start": "2972000",
    "end": "2977599"
  },
  {
    "text": "so then it's it's a bit um difference now when you have just oauth and then when you add open id",
    "start": "2977599",
    "end": "2984480"
  },
  {
    "text": "connect it's actually added to that in addition what to do also what to expose to this application would matter",
    "start": "2984480",
    "end": "2992640"
  },
  {
    "text": "and also like um as a tip like open id scope is mandatorian or kinetic connect",
    "start": "2992640",
    "end": "2997760"
  },
  {
    "text": "there is another concept which is an id token so which is an open id connect",
    "start": "2997760",
    "end": "3004559"
  },
  {
    "text": "as an id token it's again a jwt token which contains claims about",
    "start": "3004559",
    "end": "3011520"
  },
  {
    "text": "the authentication event right so and it might it may contain other claims",
    "start": "3011520",
    "end": "3016720"
  },
  {
    "text": "as well but now you see that it has information about when authentication happened",
    "start": "3016720",
    "end": "3021839"
  },
  {
    "text": "and then when the id token issued and things like that but in olaf token",
    "start": "3021839",
    "end": "3028480"
  },
  {
    "text": "there was no information about this and if you see uh like um the top now i have actually",
    "start": "3028480",
    "end": "3036000"
  },
  {
    "text": "a an id um id token on the screen if you see the top and the type it's now",
    "start": "3036000",
    "end": "3041520"
  },
  {
    "text": "jwt like we had eight tip loss gwg right so if i have",
    "start": "3041520",
    "end": "3046640"
  },
  {
    "text": "two tokens right so this one is identity token the other one was access token right",
    "start": "3046640",
    "end": "3052800"
  },
  {
    "text": "and here like in the playload you can see like um properties which are related to the authentication just",
    "start": "3052800",
    "end": "3060720"
  },
  {
    "text": "happened right um and it's not just about scopes which are for authorization for delegation of access",
    "start": "3060720",
    "end": "3068720"
  },
  {
    "text": "so uh and so when we come to open id connect",
    "start": "3068720",
    "end": "3074720"
  },
  {
    "start": "3070000",
    "end": "3157000"
  },
  {
    "text": "there is more endpoints added so the main one which i said user rainfall we saw user info here and",
    "start": "3074720",
    "end": "3080400"
  },
  {
    "text": "they're everywhere that um this is actually one of the things added for openid connect",
    "start": "3080400",
    "end": "3085760"
  },
  {
    "text": "and this is an endpoint can be used to retrieve identity information about the user in the high level diagram when we",
    "start": "3085760",
    "end": "3092000"
  },
  {
    "text": "sold is that the relay party actually gonna ask for",
    "start": "3092000",
    "end": "3097040"
  },
  {
    "text": "uh authentication and after that can ask for user info right this end point and",
    "start": "3097040",
    "end": "3102480"
  },
  {
    "text": "this was what was uh missing in the olaf right we needed something to know okay",
    "start": "3102480",
    "end": "3108160"
  },
  {
    "text": "this user who logged in who was that user and also discovery endpoint you might",
    "start": "3108160",
    "end": "3113440"
  },
  {
    "text": "see this um in the open id connect providers so it retains",
    "start": "3113440",
    "end": "3119839"
  },
  {
    "text": "information like issuer name keymad or materials and supported the scopes like most of them",
    "start": "3119839",
    "end": "3126400"
  },
  {
    "text": "has this this is in the spec um so this is a example of uh",
    "start": "3126400",
    "end": "3132240"
  },
  {
    "text": "user info endpoint and um if you see like for user user info endpoint",
    "start": "3132240",
    "end": "3139119"
  },
  {
    "text": "we need to send the access token right and to be able to access that which means it's authorized",
    "start": "3139119",
    "end": "3145040"
  },
  {
    "text": "and um a sample of the results is like that i get actually information about this user",
    "start": "3145040",
    "end": "3151520"
  },
  {
    "text": "like um as many as user uh letters to return right give consent to turn so on",
    "start": "3151520",
    "end": "3158800"
  },
  {
    "start": "3157000",
    "end": "3321000"
  },
  {
    "text": "open idconnect terminology is a game so we it was um authorization code implicit",
    "start": "3158800",
    "end": "3166079"
  },
  {
    "text": "as well but for the same reasons actually the exact same reasons they are they are not",
    "start": "3166079",
    "end": "3172079"
  },
  {
    "text": "suggested to be used but pixi and um hybrid",
    "start": "3172079",
    "end": "3178000"
  },
  {
    "text": "is the ones that are safe so i'm gonna quickly go through the hybrid one so and hybrid",
    "start": "3178000",
    "end": "3184000"
  },
  {
    "text": "grant is um of uh like the pixie is exactly like how we describe that right",
    "start": "3184000",
    "end": "3190640"
  },
  {
    "text": "so the only difference about pixi is that we are actually sending the we are",
    "start": "3190640",
    "end": "3197440"
  },
  {
    "text": "sending the openid scope as well to the authorization server or openid",
    "start": "3197440",
    "end": "3202800"
  },
  {
    "text": "provider and then after that that's the authorization server which is now open id provider which can",
    "start": "3202800",
    "end": "3209599"
  },
  {
    "text": "handle that and challenge that and um like showing their login",
    "start": "3209599",
    "end": "3215200"
  },
  {
    "text": "to the user which means a centralized login that's that's actually one of the biggest purposes to do that",
    "start": "3215200",
    "end": "3221280"
  },
  {
    "text": "to have that right so then if this authorization server is open id connect provider",
    "start": "3221280",
    "end": "3226960"
  },
  {
    "text": "so the only thing you need to do is just send open id scope and the hybrid one hybrid is",
    "start": "3226960",
    "end": "3235119"
  },
  {
    "text": "actually good to know about that and so hybrid is safe but uh so for hybrid",
    "start": "3235119",
    "end": "3240720"
  },
  {
    "text": "what we do is that we're gonna receive an authorization code flow we're gonna receive id token",
    "start": "3240720",
    "end": "3247040"
  },
  {
    "text": "uh um in addition of the code right and then we exchange that code for the access token",
    "start": "3247040",
    "end": "3252800"
  },
  {
    "text": "but there is a difference here in which they call it hybrid and the hybrid there is a property you see here as a c",
    "start": "3252800",
    "end": "3259280"
  },
  {
    "text": "hash is actually the hashed version of code so which means that when client receive",
    "start": "3259280",
    "end": "3264800"
  },
  {
    "text": "that it's gonna compare this this hashed version um",
    "start": "3264800",
    "end": "3269920"
  },
  {
    "text": "and it received the code and it's gonna do the hash the code and it's gonna compare them to",
    "start": "3269920",
    "end": "3275520"
  },
  {
    "text": "make sure that um it is the same to just make it secure right but downside to this is that so as you",
    "start": "3275520",
    "end": "3282559"
  },
  {
    "text": "see because we said on the front channel it's going to receive code plus id token means that id token is",
    "start": "3282559",
    "end": "3288160"
  },
  {
    "text": "perceived as a in front channel which is not secure so it might leak",
    "start": "3288160",
    "end": "3293760"
  },
  {
    "text": "additional personal like information about user that you don't want to right",
    "start": "3293760",
    "end": "3298799"
  },
  {
    "text": "also like um this mitigation stuff that we talked about this um thing that compares c hash with the code",
    "start": "3298799",
    "end": "3306640"
  },
  {
    "text": "is that it is actually need to be implemented on the client which results to more complicated client",
    "start": "3306640",
    "end": "3312960"
  },
  {
    "text": "library which is not suggested much um and it's better to",
    "start": "3312960",
    "end": "3318079"
  },
  {
    "text": "handle everything like on the server not on the client so that's why i suggested to use",
    "start": "3318079",
    "end": "3323839"
  },
  {
    "start": "3321000",
    "end": "3599000"
  },
  {
    "text": "uh authorization code plus pixie or pixi for all clients",
    "start": "3323839",
    "end": "3330720"
  },
  {
    "text": "here i have some use cases i have the these use cases like it's a web app native",
    "start": "3330720",
    "end": "3336240"
  },
  {
    "text": "mobile app and spa all of them is suggested to use pixi these are the this is like we tried to explain why uh",
    "start": "3336240",
    "end": "3344160"
  },
  {
    "text": "i hope i i try i could convince you and for api for service and server to server communication to",
    "start": "3344160",
    "end": "3351040"
  },
  {
    "text": "access and to receive access the client authorization is what is suggested",
    "start": "3351040",
    "end": "3357040"
  },
  {
    "text": "so i have actually a couple of this um this these are in my deck it's",
    "start": "3357040",
    "end": "3362880"
  },
  {
    "text": "about best practices about spots and native apps that i'm not sure that we have time to go through that",
    "start": "3362880",
    "end": "3370880"
  },
  {
    "text": "so um okay i wanted to do a demo i have",
    "start": "3370880",
    "end": "3376559"
  },
  {
    "text": "like five minutes so i'm going to show you a quick demo",
    "start": "3376559",
    "end": "3383599"
  },
  {
    "text": "so here all right i would need to",
    "start": "3383599",
    "end": "3391838"
  },
  {
    "text": "stop presenting and then represent",
    "start": "3392160",
    "end": "3396960"
  },
  {
    "text": "so here i have an application",
    "start": "3401200",
    "end": "3405838"
  },
  {
    "text": "well something happened with my words sorry um here i have um",
    "start": "3411920",
    "end": "3419200"
  },
  {
    "text": "an application which is which i wanna [Music] show you actually um like uh different",
    "start": "3419200",
    "end": "3426079"
  },
  {
    "text": "scenarios using um identity server for which is an open source uh library for openid",
    "start": "3426079",
    "end": "3433119"
  },
  {
    "text": "connect and also oauth so i just want to show you quickly oh it was here uh i want i want to show",
    "start": "3433119",
    "end": "3441119"
  },
  {
    "text": "you quickly that like all the stuff that we talked about how like how easy would be to if we use",
    "start": "3441119",
    "end": "3448799"
  },
  {
    "text": "the right library if we use the right uh provider right i'm gonna share this code",
    "start": "3448799",
    "end": "3455839"
  },
  {
    "text": "um because i'm not sure if i can just um show to you everything so i have",
    "start": "3455839",
    "end": "3463520"
  },
  {
    "text": "this uh like all the scenarios here at listed but unfortunately because a rough time we",
    "start": "3463520",
    "end": "3470559"
  },
  {
    "text": "couldn't do that so here like um let me show you a very quick demo of this",
    "start": "3470559",
    "end": "3479520"
  },
  {
    "text": "client authorization flow",
    "start": "3479520",
    "end": "3489839"
  },
  {
    "text": "in this model what i have is that i have in this model i have a identity server",
    "start": "3496079",
    "end": "3501760"
  },
  {
    "text": "project so which is a authorization server for oauth and also",
    "start": "3501760",
    "end": "3506880"
  },
  {
    "text": "its open id connect provider right um so this one like here to be able",
    "start": "3506880",
    "end": "3513680"
  },
  {
    "text": "uh to implement that so what is so i have a client registered here so",
    "start": "3513680",
    "end": "3519839"
  },
  {
    "text": "this client is as easy as a console application so here all i said was that now i have this",
    "start": "3519839",
    "end": "3526400"
  },
  {
    "text": "client and this client is the console app so i'm gonna do client credentials and",
    "start": "3526400",
    "end": "3533839"
  },
  {
    "text": "it has a secret because it's a confidential and also i say that what is this course that i want",
    "start": "3533839",
    "end": "3539280"
  },
  {
    "text": "this application to have access to and now like uh",
    "start": "3539280",
    "end": "3545599"
  },
  {
    "text": "on my application on the same client thing so just um like i'm gonna receive a",
    "start": "3545599",
    "end": "3552480"
  },
  {
    "text": "token so using let me show you the code",
    "start": "3552480",
    "end": "3559838"
  },
  {
    "text": "so here receiving token is as simple as just make a call to this",
    "start": "3561200",
    "end": "3567440"
  },
  {
    "text": "authorization server that i have okay and just say give me a token for this and just say this is my",
    "start": "3567440",
    "end": "3574720"
  },
  {
    "text": "client and this is the scopes that i want to access to and that's all and i'm gonna have a",
    "start": "3574720",
    "end": "3580960"
  },
  {
    "text": "token which later with this token i can call an api but then this this call is not on behalf",
    "start": "3580960",
    "end": "3587920"
  },
  {
    "text": "of any user this calls actually on like this console app is doing the call",
    "start": "3587920",
    "end": "3593680"
  },
  {
    "text": "and look at this so now i'm trying to receive the token",
    "start": "3593680",
    "end": "3600559"
  },
  {
    "text": "right this is my token and then i called this api so on this api this is often like olaf",
    "start": "3600559",
    "end": "3607119"
  },
  {
    "text": "uh information received so which called an api so now i'm going to",
    "start": "3607119",
    "end": "3613599"
  },
  {
    "text": "call like a delete api see like because of the access issue now i had i didn't have",
    "start": "3613599",
    "end": "3619839"
  },
  {
    "text": "access i'm charged another token and now i have that thing let me show you what was that",
    "start": "3619839",
    "end": "3627200"
  },
  {
    "text": "not access like look at this now i'm trying to like call an api with different scopes",
    "start": "3627200",
    "end": "3634799"
  },
  {
    "text": "just to demonstrate how the scopes are working right so and here i am like um this is this is what",
    "start": "3634799",
    "end": "3642480"
  },
  {
    "text": "actually i wanted to show you so here i have an api so look at this api like this i'm not sure i'm not showing",
    "start": "3642480",
    "end": "3649920"
  },
  {
    "text": "you actually how the how to write the code on an api or how to do an endpoint it's just to",
    "start": "3649920",
    "end": "3655119"
  },
  {
    "text": "demonstrate how the things are working so this is my api i'm gonna share my code so remember with the tip that",
    "start": "3655119",
    "end": "3662559"
  },
  {
    "text": "we talked about scopes right i said that scopes are saying what access right but we said",
    "start": "3662559",
    "end": "3669280"
  },
  {
    "text": "that this this is the api that at the end need to decide about permission right so here to demonstrate that i have this",
    "start": "3669280",
    "end": "3676400"
  },
  {
    "text": "api so which is like me like i wanted to say that okay now this is the api and just the user",
    "start": "3676400",
    "end": "3683040"
  },
  {
    "text": "can do that right so i go here and i say okay like um call this user account when i come here",
    "start": "3683040",
    "end": "3690000"
  },
  {
    "text": "for this so i would check if you see here there is no name for this identity means that",
    "start": "3690000",
    "end": "3695520"
  },
  {
    "text": "it wasn't on behalf of a user right just just to show that so here like i'm gonna",
    "start": "3695520",
    "end": "3703280"
  },
  {
    "text": "just return that means that on this api uh with the scope the scope was full",
    "start": "3703280",
    "end": "3709119"
  },
  {
    "text": "when we called this like i had like write and delete and read access but then because the user is not logged",
    "start": "3709119",
    "end": "3716400"
  },
  {
    "text": "in we would say no means that like combining user privileges",
    "start": "3716400",
    "end": "3722319"
  },
  {
    "text": "plus desktops that's what i wanted to show you",
    "start": "3722319",
    "end": "3728240"
  },
  {
    "text": "okay sorry i'm out of time",
    "start": "3728480",
    "end": "3734079"
  },
  {
    "text": "and i'm gonna show you this code it's a i have um on this code i have this is repo i'll",
    "start": "3734799",
    "end": "3741280"
  },
  {
    "text": "show like i have um client authorization i have code authorization with pixi and i have",
    "start": "3741280",
    "end": "3748720"
  },
  {
    "text": "a javascript line and i have some some like older like.net for",
    "start": "3748720",
    "end": "3753920"
  },
  {
    "text": "applications and using that as well i am and i hope it will be useful um",
    "start": "3753920",
    "end": "3762079"
  },
  {
    "text": "sorry i didn't leave any time for questions and if if if there is any question so i",
    "start": "3762079",
    "end": "3768559"
  },
  {
    "text": "guess uh maybe like for two three minutes so feel free to ask i'm so sorry if i",
    "start": "3768559",
    "end": "3776319"
  },
  {
    "text": "talked very fast i tried to like and there is like the future remaining so but then i'm gonna have the",
    "start": "3776319",
    "end": "3783839"
  },
  {
    "text": "slides there and on the slides i i had this future thing just to talk but then now i'm gonna do a",
    "start": "3783839",
    "end": "3790079"
  },
  {
    "text": "modification i'm gonna list them in this slide then give you the chance to review those and",
    "start": "3790079",
    "end": "3795680"
  },
  {
    "text": "yeah i get so excited myself when i talk about these concepts and yeah uh if if there is any question",
    "start": "3795680",
    "end": "3802720"
  },
  {
    "text": "please feel free to ask me in the slack channel or even now if there is something",
    "start": "3802720",
    "end": "3808319"
  },
  {
    "text": "this is denise here uh i have a question regarding the attack which we were talking about on the authorization code",
    "start": "3808319",
    "end": "3813680"
  },
  {
    "text": "flow our company is actually uh you know using oauth and open id connect",
    "start": "3813680",
    "end": "3820160"
  },
  {
    "text": "heavily and we are we have implemented hybrid code flow so you don't think the hybrid also is",
    "start": "3820160",
    "end": "3826960"
  },
  {
    "text": "prone to the attacks hybrid code flow is also prone to the",
    "start": "3826960",
    "end": "3832480"
  },
  {
    "text": "attacks i mean it can be attacked so the attack that we talked to them no",
    "start": "3832480",
    "end": "3838000"
  },
  {
    "text": "hybrid should be good for the authorization code and for em like um interception and",
    "start": "3838000",
    "end": "3845119"
  },
  {
    "text": "also injection no as we talked that um the hash of the code is actually",
    "start": "3845119",
    "end": "3850480"
  },
  {
    "text": "providing the attack so means that this is suggested use pixie or hybrid but for the hybrid as we",
    "start": "3850480",
    "end": "3856480"
  },
  {
    "text": "talk so there is heavier logic on the client to match this um encode the encrypted code right",
    "start": "3856480",
    "end": "3865440"
  },
  {
    "text": "so like yeah yeah but no no like it's suggested for open id connect using pixie or hybrid flow but like pixi",
    "start": "3865440",
    "end": "3873359"
  },
  {
    "text": "is like a easier one because client is not involved with the with the logic okay",
    "start": "3873359",
    "end": "3880240"
  },
  {
    "text": "thank you yeah",
    "start": "3880240",
    "end": "3883359"
  },
  {
    "text": "okay i guess we are good thank you yeah that's good yeah yeah i'm er",
    "start": "3886559",
    "end": "3893760"
  },
  {
    "text": "yeah okay good yeah no actually",
    "start": "3893760",
    "end": "3909039"
  },
  {
    "text": "you",
    "start": "3909039",
    "end": "3911119"
  }
]