[
  {
    "text": "how's everyone doing today you doing good is my audio okay i'm using these mics here because you know you got those",
    "start": "2399",
    "end": "8320"
  },
  {
    "text": "little lavalier mics and i've got this thing this in the way i actually i did this uh",
    "start": "8320",
    "end": "15040"
  },
  {
    "text": "this is totally unrelated to this talk but i did a um i used resnet image classification i built a bunch of stuff around that uh",
    "start": "15040",
    "end": "21600"
  },
  {
    "text": "just to take random images from the internet and classify them and i'd go from axolotls to zucchinis",
    "start": "21600",
    "end": "28160"
  },
  {
    "text": "which i think has a different word here and i can't remember it is it courgette yeah courgette see i don't know how to",
    "start": "28160",
    "end": "33360"
  },
  {
    "text": "say it yeah but yeah so i put my picture in and it said that i was a fur coat",
    "start": "33360",
    "end": "39920"
  },
  {
    "text": "anyhow ai's gonna take over the world so welcome to dungeons dragons and graph",
    "start": "40399",
    "end": "47280"
  },
  {
    "text": "databases my name is guy royce i'm a developer advocate at redis there",
    "start": "47280",
    "end": "52879"
  },
  {
    "text": "are three things on this slide that matter one of them matters to you one of them matters to me",
    "start": "52879",
    "end": "59520"
  },
  {
    "text": "and one of the matters to my boss can you guess what the thing is that matters to my boss",
    "start": "59520",
    "end": "66320"
  },
  {
    "text": "oh yeah can i get there we go that right there yeah the redis logo so uh we want you all to know that redis is more than",
    "start": "66640",
    "end": "72720"
  },
  {
    "text": "just a cache has more than strings you can do more than getting set i'm going to show you a little bit of redis today uh most of my talks about",
    "start": "72720",
    "end": "79680"
  },
  {
    "text": "graph databases and the cypher query language but my demos will be using redis graph because there's a graph database that you can use with redis",
    "start": "79680",
    "end": "87520"
  },
  {
    "text": "there's the thing that i care about that's that twitter id i judge my value as a human based on how",
    "start": "87520",
    "end": "93520"
  },
  {
    "text": "many people follow me on twitter so please help monetize my narcissism",
    "start": "93520",
    "end": "99680"
  },
  {
    "text": "and thank you and the thing that you care about is that github.com guy royce so i've got",
    "start": "99680",
    "end": "105759"
  },
  {
    "text": "a bunch of code that i updated this morning i'm sure that will end well and",
    "start": "105759",
    "end": "111680"
  },
  {
    "text": "it's all out there on github all these slides all the code all the all the resources are out there on github so if you want to try this stuff out yourself",
    "start": "111680",
    "end": "118320"
  },
  {
    "text": "that's where you can go and yes i do have guy.dev as a domain name so",
    "start": "118320",
    "end": "124159"
  },
  {
    "text": "if there's any other people out there named guy that want lastname.guy.dev i'll be happy to give you a sub domain",
    "start": "124159",
    "end": "130479"
  },
  {
    "text": "and in addition to being a developer advocate i'm also a fan of dungeons and dragons",
    "start": "131280",
    "end": "137040"
  },
  {
    "text": "i've been playing dungeons dragons since since reagan was president",
    "start": "137040",
    "end": "144160"
  },
  {
    "text": "since the early 80s um i've been doing it a long time and so i thought i would show my character sheet",
    "start": "144160",
    "end": "150640"
  },
  {
    "text": "uh there so there's me i'm neutral good so uh",
    "start": "150640",
    "end": "156560"
  },
  {
    "text": "at least i think i am i guess if i was neutral evil i might think i was neutral good i don't know",
    "start": "156560",
    "end": "161840"
  },
  {
    "text": "uh but i'm uh a bard was the closest thing i could come up with for developer advocate",
    "start": "161840",
    "end": "167519"
  },
  {
    "text": "um obviously a dwarf or a wizard one of the other",
    "start": "167519",
    "end": "173360"
  },
  {
    "text": "um level five armor class of 11. you might notice if you play a lot of",
    "start": "173360",
    "end": "178400"
  },
  {
    "text": "dnd then my armor class is 11. i'm not i'm not wearing armor uh and uh but my dexterity is an eight",
    "start": "178400",
    "end": "184560"
  },
  {
    "text": "so this means like what it is is that as a developer advocate i've got a plus two bonus to armor just because i have a tough hide and that comes from uh being",
    "start": "184560",
    "end": "191920"
  },
  {
    "text": "a public speaker and so you suffer those slings and arrows you build a thick thick hide",
    "start": "191920",
    "end": "196959"
  },
  {
    "text": "so my abilities are over here on the right of note are the intelligence in the",
    "start": "196959",
    "end": "202800"
  },
  {
    "text": "wisdom of eight and the charisma of 16 which tells you everything you need to know about what you're going to get",
    "start": "202800",
    "end": "208400"
  },
  {
    "text": "today which is all sizzle no steak",
    "start": "208400",
    "end": "215120"
  },
  {
    "text": "but as a d d player and as a person who runs d d games in general but particularly as a player",
    "start": "215599",
    "end": "220879"
  },
  {
    "text": "uh i like to maximize my my gaming potential i want to you know i want to level up faster",
    "start": "220879",
    "end": "226799"
  },
  {
    "text": "i want to get the gold i want to defeat the monster this is my problem how do i",
    "start": "226799",
    "end": "232000"
  },
  {
    "text": "go to the dungeon and get those the most efficient way possible i want to find the rooms in the",
    "start": "232000",
    "end": "237519"
  },
  {
    "text": "dungeon that have the things that i care about things like monsters",
    "start": "237519",
    "end": "242799"
  },
  {
    "text": "that are of an appropriate experience level for a challenge rating for me to defeat but give me the experience i need to increase my character's level",
    "start": "242799",
    "end": "249680"
  },
  {
    "text": "and has the best treasure and so you know i'm i'm a developer",
    "start": "249680",
    "end": "255200"
  },
  {
    "text": "advocate i'm a dnd player but i'm also a developer and so i'm like",
    "start": "255200",
    "end": "260959"
  },
  {
    "text": "i could build a database and i could put the dungeon in the database and then i could query the dungeon query that database and find out",
    "start": "260959",
    "end": "267759"
  },
  {
    "text": "which rooms i should go to first and i could use the relational database",
    "start": "267759",
    "end": "273360"
  },
  {
    "text": "to do that right i could have a rooms table with a big schema and a treasures table and a",
    "start": "273360",
    "end": "280000"
  },
  {
    "text": "monsters table or i could use a graph database",
    "start": "280000",
    "end": "285680"
  },
  {
    "text": "with nodes and relationships and i'm guessing i'm assuming but we'll",
    "start": "285680",
    "end": "290880"
  },
  {
    "text": "do a show of hands anyhow just to shame the few people that this won't be true of is how many of you have used a",
    "start": "290880",
    "end": "297440"
  },
  {
    "text": "relational database in your career exactly how many of you have used a graph database",
    "start": "297440",
    "end": "303840"
  },
  {
    "text": "okay a few of you the whole point of this talk is to take",
    "start": "303840",
    "end": "310000"
  },
  {
    "text": "a relational database compare it against the graph database show how they can be similar show where",
    "start": "310000",
    "end": "316240"
  },
  {
    "text": "they're different so how do i solve similar sets of problems and so for those of you who didn't raise your",
    "start": "316240",
    "end": "322800"
  },
  {
    "text": "hand about having used the graph database there's probably a question in your head which is what's a graph database",
    "start": "322800",
    "end": "329440"
  },
  {
    "text": "there's probably a small number of you in here that said oh i thought this was going to be a talk about graphql",
    "start": "329440",
    "end": "335759"
  },
  {
    "text": "it happens every time i give this talk actually this is not to talk about graphql graph ul is a different thing entirely",
    "start": "335759",
    "end": "341759"
  },
  {
    "text": "but that doesn't mean you should run away because graph databases are really really cool",
    "start": "341759",
    "end": "347120"
  },
  {
    "text": "but in order to answer what a graph database is there's a little bit of what the heck's a graph",
    "start": "347120",
    "end": "354400"
  },
  {
    "text": "i mean it's not something that my manager just generates right to see you know it's not it's not a burn",
    "start": "354560",
    "end": "360240"
  },
  {
    "text": "down chart right uh what's a graph well uh a graph is a set of nodes or vertices",
    "start": "360240",
    "end": "368400"
  },
  {
    "text": "connected by edges or relationships and as soon as you see them you're going to recognize",
    "start": "368400",
    "end": "373520"
  },
  {
    "text": "them for what they are they can represent all sorts of things like a social graph would be for example that uh i follow",
    "start": "373520",
    "end": "380319"
  },
  {
    "text": "you on twitter and then you follow me there's a great",
    "start": "380319",
    "end": "385360"
  },
  {
    "text": "because you just followed me right [Laughter] uh and so that's a graph there's a",
    "start": "385360",
    "end": "391199"
  },
  {
    "text": "where the nodes and that follow is the relationship or it could be",
    "start": "391199",
    "end": "396639"
  },
  {
    "text": "like a like a like a genealogical relationship like a your family tree",
    "start": "396639",
    "end": "401919"
  },
  {
    "text": "is a graph for me it's more of a family web but you know your mileage may vary uh",
    "start": "401919",
    "end": "408080"
  },
  {
    "text": "and so a uh a family tree has like you know there's a there's a mom and a dad and they get",
    "start": "408080",
    "end": "414400"
  },
  {
    "text": "together and you know do what they do he said awkwardly",
    "start": "414400",
    "end": "421120"
  },
  {
    "text": "um but so you know there's a relationship there the people are the nodes",
    "start": "421120",
    "end": "426720"
  },
  {
    "text": "traffic systems work this way bus stops are nodes",
    "start": "426720",
    "end": "432800"
  },
  {
    "text": "uh but it can also be things like objects this 20-sided die is a graph",
    "start": "433120",
    "end": "440400"
  },
  {
    "text": "the points are the vertices the edges are well they're the edges",
    "start": "440400",
    "end": "446960"
  },
  {
    "text": "right and so this is i think worth noting because it shows that the graph is",
    "start": "446960",
    "end": "453759"
  },
  {
    "text": "it's not bound like we tend to draw our graphs on pieces of paper and we draw circles and lines and connecting them",
    "start": "453759",
    "end": "459199"
  },
  {
    "text": "and stuff but they're not bound by two dimensions or convenience of being put on a piece of paper they can be",
    "start": "459199",
    "end": "464400"
  },
  {
    "text": "three-dimensional they can be n-dimensional it doesn't matter but the whole idea of a graph is an",
    "start": "464400",
    "end": "469919"
  },
  {
    "text": "abstraction around these things that have points or nodes and the connections between them",
    "start": "469919",
    "end": "477120"
  },
  {
    "text": "the simplest of a graph is a null graph thank you for attending my ted talk",
    "start": "477199",
    "end": "484400"
  },
  {
    "text": "null graph some mathematicians i am told because i read a wikipedia article",
    "start": "486400",
    "end": "492160"
  },
  {
    "text": "argue as to whether a null graph is a real graph or not you know who cares",
    "start": "492160",
    "end": "499120"
  },
  {
    "text": "let's add some nodes they may be technically correct and as",
    "start": "499360",
    "end": "504479"
  },
  {
    "text": "we all know technically correct is the best kind of correct but this is a graph",
    "start": "504479",
    "end": "511360"
  },
  {
    "text": "it has several nodes it doesn't have any relationships but it's still graph",
    "start": "511360",
    "end": "517599"
  },
  {
    "text": "we can put some relationships to those nodes and now we we get a graph where we can start kind of talking about it a little bit",
    "start": "519120",
    "end": "524800"
  },
  {
    "text": "um this graph has relationships connecting them it's got pieces that aren't connected",
    "start": "524800",
    "end": "530800"
  },
  {
    "text": "like we've got node e out here it's all by its lonesome it's isolated",
    "start": "530800",
    "end": "536160"
  },
  {
    "text": "and so when a portion your graph is disconnected from the larger graph or from the totality of the graph",
    "start": "536160",
    "end": "542160"
  },
  {
    "text": "the full graph it's isolated and this sub graph here nodes b and f",
    "start": "542160",
    "end": "548480"
  },
  {
    "text": "best friends forever are isolated but they're related to each other they're connected to each other so",
    "start": "548480",
    "end": "553600"
  },
  {
    "text": "they're isolated but they're still they do have a relationship and even what you would think of as the",
    "start": "553600",
    "end": "559040"
  },
  {
    "text": "main part of the graph is actually isolated because it's not connected to the full graph",
    "start": "559040",
    "end": "565519"
  },
  {
    "text": "if you connect all the nodes you've got what's called a connected graph so this connected graph is",
    "start": "569040",
    "end": "575360"
  },
  {
    "text": "got nodes they're not all fully connected because but there's a path so i can get from node d to node c by way of a and d",
    "start": "575360",
    "end": "584240"
  },
  {
    "text": "or just by way of node a a fully connected graph i i don't have a",
    "start": "584240",
    "end": "590720"
  },
  {
    "text": "separate fully connected graph picture here but i have a i've i've grayed out the rest of the graph and the subgraph",
    "start": "590720",
    "end": "596560"
  },
  {
    "text": "is fully connected and that means that every node is connected to every node if you've ever seen one of those network",
    "start": "596560",
    "end": "602320"
  },
  {
    "text": "diagrams the big star it's the big star and it's you know the every single thing connects across the chords going across",
    "start": "602320",
    "end": "608079"
  },
  {
    "text": "the big circle that is a fully connected graph",
    "start": "608079",
    "end": "613279"
  },
  {
    "text": "that that whole n times n minus 1 calculation to get the number of connections in a network",
    "start": "613519",
    "end": "619519"
  },
  {
    "text": "that's the formula for the number of connections in a fully connected graph",
    "start": "619519",
    "end": "624320"
  },
  {
    "text": "the graphs i've been showing you here are undirected and i i always try and think of another",
    "start": "626720",
    "end": "632240"
  },
  {
    "text": "way to describe this but i always fail um node graphs that are undirected do not",
    "start": "632240",
    "end": "637920"
  },
  {
    "text": "have any directionality which is not a useful definition but what it means is",
    "start": "637920",
    "end": "643279"
  },
  {
    "text": "there's no arrows in essence so you can have an extra bit of information that says this is a",
    "start": "643279",
    "end": "650160"
  },
  {
    "text": "connection from two so in the following example i gave earlier where if if i",
    "start": "650160",
    "end": "655680"
  },
  {
    "text": "follow you on twitter that's a directed relationship and then you following me on twitter is a",
    "start": "655680",
    "end": "661360"
  },
  {
    "text": "directed relationship in the other direction for the family example that i used earlier um there's a natural direction to that",
    "start": "661360",
    "end": "668240"
  },
  {
    "text": "relationship right you know my mother bore me not the other way around",
    "start": "668240",
    "end": "675120"
  },
  {
    "text": "and so that has a natural direction um streets if you were building a transportation network that has",
    "start": "675120",
    "end": "680399"
  },
  {
    "text": "directionality it's a one-way road right and so a lot of graphs are directed it's",
    "start": "680399",
    "end": "687519"
  },
  {
    "text": "just a little bit of extra information we talk about the nodes of a graph",
    "start": "687519",
    "end": "694000"
  },
  {
    "text": "we can describe them with degrees the degree of a node is how many",
    "start": "694000",
    "end": "699600"
  },
  {
    "text": "relationships it has if you have a directed graph you can",
    "start": "699600",
    "end": "705680"
  },
  {
    "text": "have out degrees which is just the number of relationships that are outbound",
    "start": "705680",
    "end": "710800"
  },
  {
    "text": "and in degrees which is the number of relationships that are inbound",
    "start": "710800",
    "end": "715959"
  },
  {
    "text": "and i i sort of mentioned this earlier but there really aren't any rules here anything can connect to anything",
    "start": "717600",
    "end": "723440"
  },
  {
    "text": "so uh in this particular graph here i have nodes a and c connecting",
    "start": "723440",
    "end": "729040"
  },
  {
    "text": "bi-directionally to each other that follows follows back relationship uh node a is actually really got a",
    "start": "729040",
    "end": "734800"
  },
  {
    "text": "relationship to itself you're trolling me",
    "start": "734800",
    "end": "740720"
  },
  {
    "text": "and so they can kind of go wherever and this has been neatly put out on a two-dimensional surface so that it looks",
    "start": "741920",
    "end": "747600"
  },
  {
    "text": "good on screen but you know node b can connect to node e",
    "start": "747600",
    "end": "752800"
  },
  {
    "text": "without having to draw a big loop around right it's just it's just the nature of the relationship",
    "start": "752800",
    "end": "759079"
  },
  {
    "text": "a graph database then which was our original question is a uh when you put a date when you put",
    "start": "759600",
    "end": "767440"
  },
  {
    "text": "data on top of this structure and so the nodes aren't just",
    "start": "767440",
    "end": "772959"
  },
  {
    "text": "these nodes with letters that don't mean anything they actually become elements in your data so in this case they become",
    "start": "772959",
    "end": "782160"
  },
  {
    "text": "rooms and they become monsters and they become treasure and so you give them a label and so this note is a room this",
    "start": "782160",
    "end": "788880"
  },
  {
    "text": "note is a monster this note is a treasure and then you can associate attributes",
    "start": "788880",
    "end": "794000"
  },
  {
    "text": "with those nodes as well other than just the label of what it is so if we look here closely we'll see that uh we have two monsters alice the",
    "start": "794000",
    "end": "801920"
  },
  {
    "text": "elf uh that has a name she has an idea of four challenger rating of seven and is",
    "start": "801920",
    "end": "807760"
  },
  {
    "text": "worth 350 experience points if i slay her meanwhile we have bob the ogre there's",
    "start": "807760",
    "end": "814480"
  },
  {
    "text": "data associated with that as well uh fun fact that's sort of a fun fact my",
    "start": "814480",
    "end": "819760"
  },
  {
    "text": "grandparents were named alice and bob i've always thought it was really weird that that's sort of like the stock",
    "start": "819760",
    "end": "825199"
  },
  {
    "text": "personas you always use it for example when you're doing talks and software and everything it's like those are my grandparents names",
    "start": "825199",
    "end": "832560"
  },
  {
    "text": "and yes my my grandmother was a bit elfin but no my grandfather was not ogre-like",
    "start": "832560",
    "end": "838160"
  },
  {
    "text": "so he's a very nice old man um not only can you put the data on the",
    "start": "838160",
    "end": "844399"
  },
  {
    "text": "nodes but the relationships have a type like the room contains a monster or the room leads to another room",
    "start": "844399",
    "end": "852000"
  },
  {
    "text": "or i follow someone on twitter and those relationships can have data",
    "start": "852000",
    "end": "857360"
  },
  {
    "text": "associated associated with them beyond just their type so you can do the same name value pair",
    "start": "857360",
    "end": "863120"
  },
  {
    "text": "data on those as well and that gives you a database worthy of mordor",
    "start": "863120",
    "end": "870360"
  },
  {
    "text": "so nodes in a graph and in a graph database they represent items generally i tend to think that they're",
    "start": "872560",
    "end": "878720"
  },
  {
    "text": "nouns strictly speaking that doesn't have to be true but i find they tend to be nouns",
    "start": "878720",
    "end": "884560"
  },
  {
    "text": "they can have labels multiple labels and they have attributes and they can just be by themselves",
    "start": "884560",
    "end": "890800"
  },
  {
    "text": "floating in space they don't have to have any relationships",
    "start": "890800",
    "end": "895680"
  },
  {
    "text": "relationships represent a connection and connect two nodes they have a type",
    "start": "896399",
    "end": "902079"
  },
  {
    "text": "and they have a direction and they can also have attributes but and i think this is important if you",
    "start": "902079",
    "end": "908639"
  },
  {
    "text": "delete a node its relationships go away so because by definition a relationship",
    "start": "908639",
    "end": "916480"
  },
  {
    "text": "is has two nodes on either and two points determine a line you take a point away",
    "start": "916480",
    "end": "921519"
  },
  {
    "text": "you don't have a line anymore and so they tend to read like sentences",
    "start": "921519",
    "end": "928240"
  },
  {
    "text": "with transitive verbs the room contains a monster",
    "start": "928240",
    "end": "934079"
  },
  {
    "text": "the room contains a treasure i suppose you could flip the directionality of this and have the",
    "start": "934079",
    "end": "939440"
  },
  {
    "text": "monster is contained by a room but uh my english teacher told me that the passive voice was to be avoided so",
    "start": "939440",
    "end": "946880"
  },
  {
    "text": "we won't do that so that's graph theory in like what 10",
    "start": "946880",
    "end": "952800"
  },
  {
    "text": "minutes enough enough graph theory let's",
    "start": "952800",
    "end": "958880"
  },
  {
    "text": "actually do something real with this because i've still got my problem i still need to find the rooms that i",
    "start": "958880",
    "end": "964639"
  },
  {
    "text": "need to go to to get the gold and to get the experience so they can level up my character",
    "start": "964639",
    "end": "970639"
  },
  {
    "text": "and i still have to make a decision on how i'm going to solve it spoiler alert it's going to be graph databases",
    "start": "971199",
    "end": "977920"
  },
  {
    "text": "am i going to use a relational database or i'm going to use a graph database",
    "start": "977920",
    "end": "983519"
  },
  {
    "text": "and so when we talk to a relational database there's a query language we use",
    "start": "983519",
    "end": "990000"
  },
  {
    "text": "anyone know what it is everyone knows what it is right the real question is is it pronounced",
    "start": "990000",
    "end": "995920"
  },
  {
    "text": "sql or sql yes that is the correct answer yes i",
    "start": "995920",
    "end": "1002480"
  },
  {
    "text": "pronounce it both ways so when we talk to a relational database if we're not using an orm which is",
    "start": "1002480",
    "end": "1008480"
  },
  {
    "text": "pretty much what everyone always says nowadays um you use sql",
    "start": "1008480",
    "end": "1013920"
  },
  {
    "text": "this is um actually i learned sql in college back in 1990",
    "start": "1013920",
    "end": "1019839"
  },
  {
    "text": "something like one or two and it's the only programming language i",
    "start": "1019839",
    "end": "1024880"
  },
  {
    "text": "still use on occasion that i learned back then so it's it's it's still there",
    "start": "1024880",
    "end": "1031280"
  },
  {
    "text": "we all know it it's the language we use to talk to relational databases there are a couple languages for talking to graph databases as well the one we're",
    "start": "1031280",
    "end": "1038400"
  },
  {
    "text": "going to look at today is cipher cipher was created by neo4j",
    "start": "1038400",
    "end": "1043918"
  },
  {
    "text": "who open sourced it redis used that open source language spec to build the query",
    "start": "1043919",
    "end": "1049200"
  },
  {
    "text": "language for redis graph and uh you're probably studying that syntax",
    "start": "1049200",
    "end": "1054480"
  },
  {
    "text": "down there intently and wondering what is this all about um",
    "start": "1054480",
    "end": "1059600"
  },
  {
    "text": "i think cipher is kind of like and we're going to get into the details here but the way i it was described to me when i",
    "start": "1059600",
    "end": "1065440"
  },
  {
    "text": "first saw it when it was introduced to me was like a cross between ascii art and a query language",
    "start": "1065440",
    "end": "1074640"
  },
  {
    "text": "because if you look at that thing after match there it's it's ascii art representing the",
    "start": "1074640",
    "end": "1080880"
  },
  {
    "text": "graph so we'll look at that more closely these matchers these pattern matchers",
    "start": "1080880",
    "end": "1086080"
  },
  {
    "text": "they match they look like what they are like like this bit here that matches a room",
    "start": "1086080",
    "end": "1091360"
  },
  {
    "text": "node a room with a label of node and assigns it to a variable r",
    "start": "1091360",
    "end": "1097120"
  },
  {
    "text": "that we can so we can refer to it later in the query and it's got parentheses on it like it's round",
    "start": "1097120",
    "end": "1103280"
  },
  {
    "text": "it's the way it's the way i drew the picture up there the monster same thing",
    "start": "1103280",
    "end": "1111120"
  },
  {
    "text": "this matches the monster at a monster node assigns it to a variable m",
    "start": "1112080",
    "end": "1118559"
  },
  {
    "text": "and then the relationship here it's an arrow it's pointing it's showing the direction of this relationship",
    "start": "1118559",
    "end": "1124880"
  },
  {
    "text": "and it's got the label on it which is contains and assigns it to variable c",
    "start": "1124880",
    "end": "1130400"
  },
  {
    "text": "and so what these matters do is they'll go across the entire graph and wherever there is a room that",
    "start": "1130400",
    "end": "1136400"
  },
  {
    "text": "contains a monster it will match it and so if i use the the query i had here",
    "start": "1136400",
    "end": "1141440"
  },
  {
    "text": "earlier match treasure contains a room",
    "start": "1141440",
    "end": "1146720"
  },
  {
    "text": "room contains a monster or the room contains the treasure and a monster is what that query is doing",
    "start": "1146720",
    "end": "1153200"
  },
  {
    "text": "um it's going to match all those instances in the database that have that pattern so this match",
    "start": "1153200",
    "end": "1159039"
  },
  {
    "text": "query here would give me all the rooms in the graph that contain both the treasure and a monster",
    "start": "1159039",
    "end": "1165840"
  },
  {
    "text": "and then return them",
    "start": "1165919",
    "end": "1168799"
  },
  {
    "text": "and so that's that's what these matches do they match if you've ever done something with like uh like rust",
    "start": "1172720",
    "end": "1179039"
  },
  {
    "text": "or elixir where they've got these these like switch like statements that have various pattern matchers",
    "start": "1179039",
    "end": "1184880"
  },
  {
    "text": "it's kind of the same idea but against the entire graph",
    "start": "1184880",
    "end": "1189600"
  },
  {
    "text": "so let's go through all the crud operations uh with uh with cipher and with sql so",
    "start": "1191520",
    "end": "1199120"
  },
  {
    "text": "if i want to create a room for my database of dungeons",
    "start": "1199120",
    "end": "1204880"
  },
  {
    "text": "if i'm using sql assuming we have a table already we just insert into it we know this",
    "start": "1204880",
    "end": "1213039"
  },
  {
    "text": "the equivalent call in uh cipher would be to call create",
    "start": "1213360",
    "end": "1219600"
  },
  {
    "text": "and then like pass it a node i pass it the curly brace or not through the braces the uh the parentheses which says",
    "start": "1219600",
    "end": "1225280"
  },
  {
    "text": "a node and i say create me a node and give it a label of room",
    "start": "1225280",
    "end": "1231120"
  },
  {
    "text": "and assign it to the variable r so we can mess with it later in the query and then after i've created it i call",
    "start": "1231120",
    "end": "1236640"
  },
  {
    "text": "set and i can just set properties on it and so one key difference here that you can see already",
    "start": "1236640",
    "end": "1242080"
  },
  {
    "text": "is that in a relational database i've got a schema right my table has columns",
    "start": "1242080",
    "end": "1249919"
  },
  {
    "text": "defined ahead of time in graph that's in in redis graph and in neo4j for that",
    "start": "1249919",
    "end": "1255039"
  },
  {
    "text": "matter that's not true i can set any properties i want on there i'm happening i happen to be setting the",
    "start": "1255039",
    "end": "1262240"
  },
  {
    "text": "id in the name but you can set anything you want there and they can vary from node to node even",
    "start": "1262240",
    "end": "1267520"
  },
  {
    "text": "though they have the same label so there's it's schema-less but that's this index for creating a",
    "start": "1267520",
    "end": "1273280"
  },
  {
    "text": "node and assigning some properties on it now that we've created something let's",
    "start": "1273280",
    "end": "1278960"
  },
  {
    "text": "read it we all know uh how to read things from",
    "start": "1278960",
    "end": "1284000"
  },
  {
    "text": "relational databases select star from users where clue greater than zero",
    "start": "1284000",
    "end": "1290000"
  },
  {
    "text": "uh oh zero rows returned",
    "start": "1290000",
    "end": "1293840"
  },
  {
    "text": "to match uh to query nodes in a redis graph or in a graph database with cipher we use the match",
    "start": "1295520",
    "end": "1302559"
  },
  {
    "text": "command and so that's going to match on that pattern so this is going to match everything that's a room it's got a room label",
    "start": "1302559",
    "end": "1309440"
  },
  {
    "text": "and then we're going to filter that through a where clause where there are id is equal to the id we care about and we're going to return it",
    "start": "1309440",
    "end": "1317120"
  },
  {
    "text": "so far it's nothing shockingly difficult here what's interesting here i think and one",
    "start": "1317120",
    "end": "1323120"
  },
  {
    "text": "of the things i kind of like about cipher is this match where pattern gets repeated in this case we're matching",
    "start": "1323120",
    "end": "1329919"
  },
  {
    "text": "and then we're filtering and then we're returning but if we want to update a room",
    "start": "1329919",
    "end": "1336720"
  },
  {
    "text": "in sql our syntax is different in graph it's mostly the same",
    "start": "1337919",
    "end": "1344080"
  },
  {
    "text": "we're going to match where we're going to find and filter and then we're going to set the property",
    "start": "1344080",
    "end": "1350320"
  },
  {
    "text": "so the statue room is getting an update to a statue hall",
    "start": "1350320",
    "end": "1355600"
  },
  {
    "text": "and so we match a room where the idea is won we can return it we can set it",
    "start": "1355919",
    "end": "1363440"
  },
  {
    "text": "and we can delete it deletion my favorite command",
    "start": "1363440",
    "end": "1369760"
  },
  {
    "text": "delete from rooms where id equals one how many have ever accidentally done that in production",
    "start": "1370480",
    "end": "1377600"
  },
  {
    "text": "not not no [Laughter] to do the comparable action in cipher",
    "start": "1379360",
    "end": "1386159"
  },
  {
    "text": "again it's match where but instead of setting it instead of returning it we delete it",
    "start": "1386159",
    "end": "1393679"
  },
  {
    "text": "everyone tracking so far good i'm probably going a little too slow actually",
    "start": "1393760",
    "end": "1399919"
  },
  {
    "text": "i was like yes yes you are um there's a variation in this syntax",
    "start": "1399919",
    "end": "1405760"
  },
  {
    "text": "here uh i've been using this match where syntax i kind of drilled it down uh kind of drilled it in",
    "start": "1405760",
    "end": "1411600"
  },
  {
    "text": "kind of hit you over the head with a little bit uh you can also uh inline all that",
    "start": "1411600",
    "end": "1417840"
  },
  {
    "text": "so here we're matching a node all nodes in the graph where they have a label of room and they",
    "start": "1417840",
    "end": "1425840"
  },
  {
    "text": "have in curly braces these properties that match so this is matching where the id is one",
    "start": "1425840",
    "end": "1431200"
  },
  {
    "text": "you could put additional properties in here and say it's like where common name is equal to some other thing",
    "start": "1431200",
    "end": "1436960"
  },
  {
    "text": "and and the syntax actually inside of those curly braces is exactly the syntax you would use if you were like defining an object in javascript not json but",
    "start": "1436960",
    "end": "1444320"
  },
  {
    "text": "javascript specifically so the strings go in quotes the numbers don't that sort of thing",
    "start": "1444320",
    "end": "1451679"
  },
  {
    "text": "so that's another way you can do that you can also do that when you're creating so i created a room and then i set properties on it",
    "start": "1451919",
    "end": "1459200"
  },
  {
    "text": "but you can actually create a node and provide the properties you want all",
    "start": "1459200",
    "end": "1464640"
  },
  {
    "text": "in one motion so this is creating a room with an id",
    "start": "1464640",
    "end": "1470320"
  },
  {
    "text": "and a name and you'll note that on this particular one there's not an r in front",
    "start": "1470320",
    "end": "1475840"
  },
  {
    "text": "of room because i don't need to refer to it so i don't need to assign it to a variable",
    "start": "1475840",
    "end": "1481600"
  },
  {
    "text": "and so we already did dungeons rooms of the dungeon we can create monsters the same way here i'm using uh",
    "start": "1484480",
    "end": "1490960"
  },
  {
    "text": "that new syntax to create a monster and here i'm using uh actually both",
    "start": "1490960",
    "end": "1497039"
  },
  {
    "text": "syntaxes you can mix and match them together so i'm creating a treasure giving it a couple properties and setting additional properties on it",
    "start": "1497039",
    "end": "1505039"
  },
  {
    "text": "but it still works the same so this is our relational database so",
    "start": "1505039",
    "end": "1512080"
  },
  {
    "text": "far we've got three tables with rows of them",
    "start": "1512080",
    "end": "1517120"
  },
  {
    "text": "here's our graph database so far we've got some nodes floating out there in space",
    "start": "1517120",
    "end": "1522480"
  },
  {
    "text": "so far we haven't done anything with a relational database or with a graph database that we can't do with a relational database",
    "start": "1522480",
    "end": "1529840"
  },
  {
    "text": "let's look at connecting these things together let's put a monster in a room",
    "start": "1530960",
    "end": "1537520"
  },
  {
    "text": "i think nc ndc may have done that already i'm here on stage so",
    "start": "1537840",
    "end": "1543520"
  },
  {
    "text": "first thing we've got to do to put a monster in a room",
    "start": "1543520",
    "end": "1547440"
  },
  {
    "text": "we have to alter our table if we're doing a relational database",
    "start": "1548640",
    "end": "1554080"
  },
  {
    "text": "and then we have to create update the properties of that table to create those relationships so we're creating a",
    "start": "1554480",
    "end": "1559679"
  },
  {
    "text": "one-to-many relationship you know a monster has one room each room has",
    "start": "1559679",
    "end": "1566159"
  },
  {
    "text": "many monsters done this pattern a million times in",
    "start": "1566159",
    "end": "1571279"
  },
  {
    "text": "relational databases how do we do this with graph",
    "start": "1571279",
    "end": "1577200"
  },
  {
    "text": "like this you uh match the room you match the monster",
    "start": "1579679",
    "end": "1586080"
  },
  {
    "text": "and then referencing those variables you can create a relationship between them so you can create thing i know about r",
    "start": "1586080",
    "end": "1593279"
  },
  {
    "text": "contains thing i know about m there's a temptation",
    "start": "1593279",
    "end": "1598480"
  },
  {
    "text": "to create to to in those create statements to want to try and match don't do that",
    "start": "1598480",
    "end": "1604799"
  },
  {
    "text": "if you do that you'll create new nodes with the same properties so you've got to match the things you want to connect together",
    "start": "1604799",
    "end": "1610400"
  },
  {
    "text": "first you can do this all as one statement i could say create our colon room with a bunch of properties contains",
    "start": "1610400",
    "end": "1618000"
  },
  {
    "text": "m colon monster with a bunch of properties and i can create it all in one fell swoop but if you have existing nodes you have",
    "start": "1618000",
    "end": "1624320"
  },
  {
    "text": "to find them and reference them first and then you can create relationships between them",
    "start": "1624320",
    "end": "1629840"
  },
  {
    "text": "but this puts a monster in a room and because i'm a bit of a completionist",
    "start": "1629840",
    "end": "1634880"
  },
  {
    "text": "we have a slide for treasure as well which works exactly the same way",
    "start": "1634880",
    "end": "1641799"
  },
  {
    "text": "and when you put treasure in the room it's the same thing except now my text is golden instead of red",
    "start": "1642159",
    "end": "1649440"
  },
  {
    "text": "so this is our relational database now we've got a room it's got a couple of wonder minis hanging off of it",
    "start": "1653600",
    "end": "1660000"
  },
  {
    "text": "this is our graph database we've got uh some isolate all the rooms are isolated",
    "start": "1660000",
    "end": "1665279"
  },
  {
    "text": "right so we've got a room it contains a monster or contains a treasure it contains both but these rooms are",
    "start": "1665279",
    "end": "1670480"
  },
  {
    "text": "isolate these little subgraphs are isolated from each other",
    "start": "1670480",
    "end": "1675120"
  },
  {
    "text": "but it's enough that we can do some interesting queries munchkin time",
    "start": "1675679",
    "end": "1681960"
  },
  {
    "text": "we can find out which rooms have the most suitable monsters and which rooms have the most suitable treasures",
    "start": "1683360",
    "end": "1690320"
  },
  {
    "text": "so if we wanted to for example farm all the xp find the rooms that have the most",
    "start": "1690799",
    "end": "1696399"
  },
  {
    "text": "the best monster the monsters that are worth the most experience points we're doing that in a relational database we do a classic join select",
    "start": "1696399",
    "end": "1704720"
  },
  {
    "text": "the id and name of the room the experience of the monster",
    "start": "1704720",
    "end": "1710320"
  },
  {
    "text": "from the rooms and the monsters join them with a simple where there are other better ways and order them descending",
    "start": "1710320",
    "end": "1718158"
  },
  {
    "text": "that will give us a nice ordered list a priority list of monsters to go and slay",
    "start": "1719200",
    "end": "1726080"
  },
  {
    "text": "how do we do this this how do we do this with graph well we can match all the rooms that",
    "start": "1728399",
    "end": "1735440"
  },
  {
    "text": "contain monsters and that will go through the graph and find every room that contains a monster",
    "start": "1735440",
    "end": "1741039"
  },
  {
    "text": "if a room contains two monsters you'll get two results room monster one room monster two",
    "start": "1741039",
    "end": "1748720"
  },
  {
    "text": "and then we return those same values the id the name the experience points and we can order them the rest of this",
    "start": "1748960",
    "end": "1755360"
  },
  {
    "text": "actually looks kind of sequel like honestly we can order it by that experience value descending",
    "start": "1755360",
    "end": "1761600"
  },
  {
    "text": "so the biggest is at the top we go and we got a priority list",
    "start": "1761600",
    "end": "1767320"
  },
  {
    "text": "same thing for the gold again i'm a completionist",
    "start": "1768960",
    "end": "1776600"
  },
  {
    "text": "so so far so good right but so what i haven't done anything",
    "start": "1780080",
    "end": "1786880"
  },
  {
    "text": "with a graph database that you can't do just as easily with a relational database except maybe it's schema-less",
    "start": "1786880",
    "end": "1792320"
  },
  {
    "text": "which may or may not be a better thing depending on whether you like javascript or typescript",
    "start": "1792320",
    "end": "1798320"
  },
  {
    "text": "it's fighting words aren't they",
    "start": "1799120",
    "end": "1802320"
  },
  {
    "text": "well this is where the graph gets interesting because what happens when i want to connect the rooms together",
    "start": "1805440",
    "end": "1813039"
  },
  {
    "text": "that's a more interesting problem anyone ever done use cte in sql",
    "start": "1814320",
    "end": "1821360"
  },
  {
    "text": "was it fun well maybe for varying values of fun",
    "start": "1821360",
    "end": "1826799"
  },
  {
    "text": "yeah um how do we connect rooms to rooms in a relational database",
    "start": "1826799",
    "end": "1835279"
  },
  {
    "text": "by creating a mapping table you got a many-to-many relationship now rooms connected rooms and so this is",
    "start": "1835279",
    "end": "1841840"
  },
  {
    "text": "just a it's actually a table that represents the graph because you've got a table of connections between rooms",
    "start": "1841840",
    "end": "1848840"
  },
  {
    "text": "and you insert into them so the first row says room one",
    "start": "1848840",
    "end": "1854399"
  },
  {
    "text": "uh connects to room one second row says that room one connects to room two and then there's a corresponding room two",
    "start": "1854399",
    "end": "1859760"
  },
  {
    "text": "connects to room one and so you just create a table that's got all these",
    "start": "1859760",
    "end": "1864799"
  },
  {
    "text": "relationships in it saying this node goes to this node this node goes to this node",
    "start": "1864799",
    "end": "1869919"
  },
  {
    "text": "and then when you go to query it well you need to use cte",
    "start": "1869919",
    "end": "1874559"
  },
  {
    "text": "how do we connect rooms in redis in in a graph database like with like",
    "start": "1875279",
    "end": "1880480"
  },
  {
    "text": "redis graph how do we connect these rooms using cipher",
    "start": "1880480",
    "end": "1885360"
  },
  {
    "text": "it's exactly the same way we put the monsters in the room it's exactly the same way we put the treasures in the room",
    "start": "1885840",
    "end": "1891600"
  },
  {
    "text": "because the graph database doesn't care what the nodes are any node can be related to any node regardless of",
    "start": "1891600",
    "end": "1898240"
  },
  {
    "text": "whether they are of the same type or different types this is why like social media is a great example but it's kind",
    "start": "1898240",
    "end": "1903360"
  },
  {
    "text": "of a cliched example for graph databases because like you can like a thing",
    "start": "1903360",
    "end": "1909519"
  },
  {
    "text": "right and that's a relationship guy liked this post",
    "start": "1909519",
    "end": "1914880"
  },
  {
    "text": "but i can also like comments on posts and those are you know you can think of those as different nodes in a graph",
    "start": "1915440",
    "end": "1922159"
  },
  {
    "text": "but the relationship's the same type because it's just it doesn't care",
    "start": "1922159",
    "end": "1928799"
  },
  {
    "text": "and so here we just match room one match room two and create a relationship to them",
    "start": "1931279",
    "end": "1937840"
  },
  {
    "text": "so here's our relational database for this actually rather trivial problem it's gotten kind of",
    "start": "1942159",
    "end": "1948720"
  },
  {
    "text": "you can hardly see the dungeon behind it it's gotten a little complex",
    "start": "1948720",
    "end": "1955840"
  },
  {
    "text": "and and frankly the blue color i chose over there is not nearly as good as the gray and the red and the gold that's",
    "start": "1955840",
    "end": "1962080"
  },
  {
    "text": "probably the biggest problem with this uh this this model so this is our relational database so",
    "start": "1962080",
    "end": "1967919"
  },
  {
    "text": "far here's our graph so far this is probably looks familiar right it looks like what it is",
    "start": "1967919",
    "end": "1974960"
  },
  {
    "text": "right the graph is got rooms in it and they are connected in ways that are intuitive uh this room leads to this",
    "start": "1974960",
    "end": "1982159"
  },
  {
    "text": "room which leads to another room it kind of looks like what it is i actually in some ways feel like this is object oriented",
    "start": "1982159",
    "end": "1988720"
  },
  {
    "text": "because i'm thinking about nouns all the nodes are nouns and like when you're doing oo programming your your classes",
    "start": "1988720",
    "end": "1994559"
  },
  {
    "text": "tend to represent things the instantiated classes your objects are the nouns of your system",
    "start": "1994559",
    "end": "2000880"
  },
  {
    "text": "generally and then the methods are the verbs and and with graph it's kind of like the nodes are the nouns",
    "start": "2000880",
    "end": "2007519"
  },
  {
    "text": "and then the relationships are the verbs and um",
    "start": "2007519",
    "end": "2012559"
  },
  {
    "text": "it just feels like it maps so neatly to my problem domain i",
    "start": "2012559",
    "end": "2018159"
  },
  {
    "text": "find graph just to be it just sort of has this intuitive beauty to it sorry i'm waxing poetic",
    "start": "2018159",
    "end": "2025519"
  },
  {
    "text": "but now that we have a graph this graph full of these rooms and these monsters and these",
    "start": "2026480",
    "end": "2032880"
  },
  {
    "text": "treasures let's do uh some more interesting queries and i'm just going to do the uh the",
    "start": "2032880",
    "end": "2038399"
  },
  {
    "text": "graph queries this time i'm not going to do sql equivalents because because they won't fit on the screen",
    "start": "2038399",
    "end": "2046760"
  },
  {
    "text": "and this is this is where graph databases start to shine",
    "start": "2048639",
    "end": "2053679"
  },
  {
    "text": "you can use this little star right here say",
    "start": "2055599",
    "end": "2061040"
  },
  {
    "text": "match n number of leads to relationships to get to the destination node",
    "start": "2061040",
    "end": "2066878"
  },
  {
    "text": "so now instead of saying matching a room that connects to a room or a room that contains a treasure i can say match a room that connects to",
    "start": "2066879",
    "end": "2073919"
  },
  {
    "text": "a room or a room that connects to a room that connects to a room room that connects to a room that connects to the room to connect to your room et cetera",
    "start": "2073919",
    "end": "2079760"
  },
  {
    "text": "et cetera et cetera now needless to say this could be an expensive query",
    "start": "2079760",
    "end": "2088158"
  },
  {
    "text": "if you've got 20 nodes in your graph that are all rooms and you say",
    "start": "2088159",
    "end": "2093358"
  },
  {
    "text": "give me all permutations of paths from every room to every room",
    "start": "2093359",
    "end": "2098720"
  },
  {
    "text": "that's a lot of permutations not going anywhere for a while",
    "start": "2098720",
    "end": "2104880"
  },
  {
    "text": "um and so this is an expensive query to run there are ways to optimize it",
    "start": "2105599",
    "end": "2112400"
  },
  {
    "text": "and some of you may have come to this have this question growing in your head saying",
    "start": "2113119",
    "end": "2118880"
  },
  {
    "text": "so what if my graph is just a circle of rooms isn't there an infinite number of permutations",
    "start": "2118880",
    "end": "2125520"
  },
  {
    "text": "well yes there are i will tell you that uh all the graph databases are aware of",
    "start": "2125520",
    "end": "2132160"
  },
  {
    "text": "that problem and they will not like they'll they'll not circle around multiple times so",
    "start": "2132160",
    "end": "2138240"
  },
  {
    "text": "you'll get a subset of that infinity",
    "start": "2138240",
    "end": "2143720"
  },
  {
    "text": "you can also limit this and say well i don't want as far as it can go",
    "start": "2148000",
    "end": "2153920"
  },
  {
    "text": "i want to go from one to say three so this particular query would find",
    "start": "2153920",
    "end": "2159280"
  },
  {
    "text": "rooms that are one hop away up to three hops away",
    "start": "2159280",
    "end": "2164240"
  },
  {
    "text": "so you can limit this and so this lets you do queries like hey",
    "start": "2164800",
    "end": "2170079"
  },
  {
    "text": "i'm in a room in the dungeon i want to find rooms nearby that i might want to go to",
    "start": "2170079",
    "end": "2176400"
  },
  {
    "text": "and so to do that i would match a room with an id of one leads to",
    "start": "2176400",
    "end": "2182240"
  },
  {
    "text": "one or two hops away another room and then i return that destination room",
    "start": "2182240",
    "end": "2188320"
  },
  {
    "text": "r i get the id in the name this will give me a list of all the rooms that are nearby now i've got a menu to choose from where",
    "start": "2188320",
    "end": "2194079"
  },
  {
    "text": "do i want to go that could be useful if you're dungeon crawling",
    "start": "2194079",
    "end": "2201160"
  },
  {
    "text": "i can get more specific i don't care about the room if it doesn't have gold in it",
    "start": "2202480",
    "end": "2209119"
  },
  {
    "text": "same basic query here i'm matching a room id of one",
    "start": "2210960",
    "end": "2217200"
  },
  {
    "text": "presumably that's the room i'm in that leads to one or two tops away",
    "start": "2217200",
    "end": "2222480"
  },
  {
    "text": "another room but that room has to contain a treasure",
    "start": "2222480",
    "end": "2227520"
  },
  {
    "text": "so the match is getting a little more sophisticated return the id of the room the name of",
    "start": "2227520",
    "end": "2232560"
  },
  {
    "text": "the room the value of the treasure and you know let's go ahead and order it descending so i know which room has the",
    "start": "2232560",
    "end": "2238320"
  },
  {
    "text": "most valuable treasure and let's just get the top one from the list so",
    "start": "2238320",
    "end": "2243359"
  },
  {
    "text": "give me a give me the most the nearest room to me that has the most value",
    "start": "2243359",
    "end": "2248480"
  },
  {
    "text": "give me a room that's up to two rooms away and give me the one that has the biggest",
    "start": "2248480",
    "end": "2254000"
  },
  {
    "text": "treasure in it so this is where i'm going next",
    "start": "2254000",
    "end": "2258240"
  },
  {
    "text": "you can query the longest path through the dungeon so this query basically solves the",
    "start": "2261599",
    "end": "2266960"
  },
  {
    "text": "traveling salesman problem where you can say give me all the rooms",
    "start": "2266960",
    "end": "2272800"
  },
  {
    "text": "that lead to all the rooms but it does something interesting here this is a syntax i haven't shown you yet",
    "start": "2272800",
    "end": "2278560"
  },
  {
    "text": "you can take these paths when you have a multi-hop path you can",
    "start": "2278560",
    "end": "2284320"
  },
  {
    "text": "capture them and then you can use them as operands and functions to ask questions about it so this here is matching basically all",
    "start": "2284320",
    "end": "2291839"
  },
  {
    "text": "the paths from room to every room to every room in the dungeon",
    "start": "2291839",
    "end": "2297040"
  },
  {
    "text": "and it's assigning all those paths to a variable p and then i can return here uh the nodes",
    "start": "2297040",
    "end": "2303359"
  },
  {
    "text": "that are in that path i can return how long that path is i could return i don't",
    "start": "2303359",
    "end": "2308800"
  },
  {
    "text": "in this one but i could return the relationships in that path and then i'm ordering them",
    "start": "2308800",
    "end": "2315599"
  },
  {
    "text": "by length descending so the longest path is at the top which is going to be the",
    "start": "2315599",
    "end": "2321359"
  },
  {
    "text": "one that hits every room and then i limit it to one so i just see that one",
    "start": "2321359",
    "end": "2327599"
  },
  {
    "text": "so this lets me be a completionist and hit every room in the dungeon",
    "start": "2327599",
    "end": "2332480"
  },
  {
    "text": "i can find the room with the biggest treasure",
    "start": "2335200",
    "end": "2339560"
  },
  {
    "text": "so here i'm matching treasures assigning them to treasure",
    "start": "2340480",
    "end": "2346240"
  },
  {
    "text": "nodes assigning them to the variable max and then i'm using i'm using the with to do a an aggregation",
    "start": "2346240",
    "end": "2353040"
  },
  {
    "text": "in this case i'm getting the room that has the i'm getting the value of the maximum treasure give me the value of",
    "start": "2353040",
    "end": "2358240"
  },
  {
    "text": "the biggest treasure in the dungeon so all the treasure nodes apply a max aggregator give it a little",
    "start": "2358240",
    "end": "2364960"
  },
  {
    "text": "alias there of max gp now i've got a variable i can use later on in my query so i'm going to match all",
    "start": "2364960",
    "end": "2370880"
  },
  {
    "text": "the rooms that contain treasures and then i'm going to say where the gold piece value of the treasure in that room",
    "start": "2370880",
    "end": "2376960"
  },
  {
    "text": "is equal to the gold piece value of the biggest treasure now if there's a tie for first place you'll get two results back in this",
    "start": "2376960",
    "end": "2382880"
  },
  {
    "text": "query and then i just return those values so this lets me find big treasure",
    "start": "2382880",
    "end": "2388560"
  },
  {
    "text": "play big games win big prizes i can combine all this together",
    "start": "2388560",
    "end": "2397280"
  },
  {
    "text": "to create something that rivals some of the worst sql queries that i've ever written",
    "start": "2397280",
    "end": "2403920"
  },
  {
    "text": "where i'm matching the max treasure and getting that maximum gold piece value and then i find all the rooms that",
    "start": "2404480",
    "end": "2410720"
  },
  {
    "text": "contain treasure where it has that and i assign that as my destination and then i get a path from the room that",
    "start": "2410720",
    "end": "2417839"
  },
  {
    "text": "i'm starting in to the room i want to stop in and the room where i start is just hard coded",
    "start": "2417839",
    "end": "2423280"
  },
  {
    "text": "and the destination is what i just queried as that room and then i can return the nodes and the",
    "start": "2423280",
    "end": "2429040"
  },
  {
    "text": "length and then i can order that ascending so the shortest path bubbles to the top",
    "start": "2429040",
    "end": "2435599"
  },
  {
    "text": "because there's going to be multiple paths going to match this and then i limit it to one so i see that shortest path so this is the slow",
    "start": "2435599",
    "end": "2442000"
  },
  {
    "text": "version of the shortest path algorithm through the graph this will work",
    "start": "2442000",
    "end": "2447119"
  },
  {
    "text": "it i'm going to try and demo it it might work on my macbook",
    "start": "2447119",
    "end": "2453319"
  },
  {
    "text": "the better way to do that is uh this way so this is doing a",
    "start": "2453599",
    "end": "2459200"
  },
  {
    "text": "similar thing but we're just calling a function that is specifically designed to solve this problem as part of redis graph which",
    "start": "2459200",
    "end": "2465760"
  },
  {
    "text": "does the shortest path and you just give it a matcher that says start to stop",
    "start": "2465760",
    "end": "2470880"
  },
  {
    "text": "and now so this is more performance a lot a lot more performant",
    "start": "2470880",
    "end": "2476160"
  },
  {
    "text": "so that's a lot of queries there's a bit of a bit of a syntax dump i know um let's",
    "start": "2476160",
    "end": "2482880"
  },
  {
    "text": "do a demo are we ready for a demo do we want to see this this thing is",
    "start": "2482880",
    "end": "2488000"
  },
  {
    "text": "real and not just a bunch of talk let's see if i can",
    "start": "2488000",
    "end": "2494040"
  },
  {
    "text": "okay yes you're seeing what you need to see oh my god we're seeing behind the scenes",
    "start": "2494720",
    "end": "2501838"
  },
  {
    "text": "so i have written i've got uh redis stack installed on my macbook i think i've got it running no i don't docker",
    "start": "2502160",
    "end": "2509359"
  },
  {
    "text": "compose up dash d now we don't need to detach it",
    "start": "2509359",
    "end": "2514960"
  },
  {
    "text": "so i've just got a docker image it's got redistac redistac is open source redis with a bunch of common modules one of them is",
    "start": "2514960",
    "end": "2521839"
  },
  {
    "text": "redis graph there's search there's json there's uh time series and bloom and",
    "start": "2521839",
    "end": "2527839"
  },
  {
    "text": "it's just extensions plugins that make redis do more things adds new data types and stuff one of them is a graph",
    "start": "2527839",
    "end": "2532960"
  },
  {
    "text": "database type in a key so i've got my i've got that running",
    "start": "2532960",
    "end": "2539200"
  },
  {
    "text": "and i've got some code here that i've written we're not going to go too deep into the code it's all on github if you want to check",
    "start": "2539200",
    "end": "2544880"
  },
  {
    "text": "it out but what it does is it generates a random dungeon and so i'm just going to go",
    "start": "2544880",
    "end": "2550960"
  },
  {
    "text": "ahead and run it like running npm start",
    "start": "2550960",
    "end": "2555599"
  },
  {
    "text": "and it's done how's that for a demo",
    "start": "2556720",
    "end": "2561359"
  },
  {
    "text": "yay um yeah we're gonna go query this right",
    "start": "2562839",
    "end": "2568319"
  },
  {
    "text": "so um actually let's write some code to query it first and then i'll do the the fancy bubble thing so you can actually",
    "start": "2568319",
    "end": "2573760"
  },
  {
    "text": "see it graphically so i've got a little demo.js here i've written and so all this does is",
    "start": "2573760",
    "end": "2579760"
  },
  {
    "text": "this is kind of show you a little bit how the code works but it's not complicated so i'm just using node redis",
    "start": "2579760",
    "end": "2585200"
  },
  {
    "text": "i'm using javascript because because i hate my life",
    "start": "2585200",
    "end": "2592200"
  },
  {
    "text": "on the plus side it does mean i get to go home at night and drink so so i'm just creating a client here i'm",
    "start": "2593839",
    "end": "2599920"
  },
  {
    "text": "saying if there's an error log it i'm connecting i am using a node's new top level await",
    "start": "2599920",
    "end": "2605680"
  },
  {
    "text": "feature which came out in i think 14.8 which is kicks mooches acis it's fantastic",
    "start": "2605680",
    "end": "2612000"
  },
  {
    "text": "um and then here i'm saying using redis node redis is client it's got a dot graph dot query",
    "start": "2612000",
    "end": "2619359"
  },
  {
    "text": "and that's a command in redis it's a graph.query i pass in the key that contains my graph",
    "start": "2619359",
    "end": "2624880"
  },
  {
    "text": "called mine dungeon because imagination and then i pass a query just like i was",
    "start": "2624880",
    "end": "2631280"
  },
  {
    "text": "showing you earlier the same queries so i'm matching a room where uh the room id it's a different",
    "start": "2631280",
    "end": "2637680"
  },
  {
    "text": "syntax here we're saying id of room you can id is a function you pass it a node it will give you the id of it or",
    "start": "2637680",
    "end": "2643599"
  },
  {
    "text": "you pass it a relationship it'll give you the idea of it where that equals one so this will return room number one",
    "start": "2643599",
    "end": "2650560"
  },
  {
    "text": "and then it gets returns the name and uh the id",
    "start": "2650560",
    "end": "2656640"
  },
  {
    "text": "and so if i run this little bit of code npm run demo",
    "start": "2656640",
    "end": "2663240"
  },
  {
    "text": "we can see that i get back headers of name and id which is what i set up here",
    "start": "2663280",
    "end": "2668880"
  },
  {
    "text": "uh the room number one is the red jail although as an american that doesn't feel like how jail should be spelled",
    "start": "2668880",
    "end": "2677839"
  },
  {
    "text": "and there's the id of one and then we can see that it returned a response in",
    "start": "2678079",
    "end": "2683280"
  },
  {
    "text": "a quarter of a millisecond which is kind of cool",
    "start": "2683280",
    "end": "2689280"
  },
  {
    "text": "i mean it's local i mean it's going to be fast right and so we could put any query we want in here like we could say",
    "start": "2689280",
    "end": "2695359"
  },
  {
    "text": "uh match let's do match let's do sort of the match start the star.star match n",
    "start": "2695359",
    "end": "2702240"
  },
  {
    "text": "just get rid of the where and we'll just return",
    "start": "2702240",
    "end": "2707359"
  },
  {
    "text": "and i'm not sure what this is going to do actually i mean i know what this does but i'm not sure i haven't tested this variation",
    "start": "2707920",
    "end": "2714240"
  },
  {
    "text": "with this sample code before there we go",
    "start": "2714240",
    "end": "2720079"
  },
  {
    "text": "oh look it's a raise [Laughter] i'm sure there's data in there somewhere",
    "start": "2720079",
    "end": "2728079"
  },
  {
    "text": "so yeah that was that was delightful little response wasn't it it's like that it's like that no no no no no no batman video",
    "start": "2728319",
    "end": "2734800"
  },
  {
    "text": "that was on the internet it was real popular for a while because javascript well let's let's go ahead and do this query somewhere that",
    "start": "2734800",
    "end": "2741119"
  },
  {
    "text": "it might look a little nicer and so i'm going to use redis insight and i'm this is redis insight one reddish insight two",
    "start": "2741119",
    "end": "2747040"
  },
  {
    "text": "is out but they haven't added the it's still a preview and they haven't added the cool graph features that are in site",
    "start": "2747040",
    "end": "2752560"
  },
  {
    "text": "one yet to it yet so i'm gonna do match and return",
    "start": "2752560",
    "end": "2759359"
  },
  {
    "text": "and here is that font big enough by the way",
    "start": "2759359",
    "end": "2764160"
  },
  {
    "text": "it should be reasonably big and i'm just going to go ahead and full screen this so this is giving me the",
    "start": "2764960",
    "end": "2771440"
  },
  {
    "text": "entire graph and it actually showing me the relationships as well this this just looks cool right because i can like grab",
    "start": "2771440",
    "end": "2777040"
  },
  {
    "text": "these nodes and drag them around and it's just kind of a fun little demo but i can double click on these",
    "start": "2777040",
    "end": "2783599"
  },
  {
    "text": "you see that here's all the randomly generated rooms this is the name of my dungeon here",
    "start": "2783599",
    "end": "2789040"
  },
  {
    "text": "let's see if i can scroll down and see it or zoom in and see it",
    "start": "2789040",
    "end": "2794720"
  },
  {
    "text": "the deep castle of sardana lux",
    "start": "2795680",
    "end": "2802400"
  },
  {
    "text": "i don't i've got a random fantasy name generator here and so it generates some really weird stuff um",
    "start": "2802400",
    "end": "2808800"
  },
  {
    "text": "let's let's run it again and see if we get a different dungeon",
    "start": "2808800",
    "end": "2814160"
  },
  {
    "text": "and we'll just refresh this query and now",
    "start": "2814319",
    "end": "2820800"
  },
  {
    "text": "we zoom in this is hard to do on the touch pad",
    "start": "2821599",
    "end": "2826400"
  },
  {
    "text": "it's the the dim caverd caverns of glasmuzz",
    "start": "2826640",
    "end": "2833119"
  },
  {
    "text": "it's always kind of fun the random names that this thing comes up with and um if we if we do like a more basic",
    "start": "2833440",
    "end": "2839440"
  },
  {
    "text": "query let me um",
    "start": "2839440",
    "end": "2845079"
  },
  {
    "text": "let's see match uh d dungeon",
    "start": "2845119",
    "end": "2850240"
  },
  {
    "text": "my sample graph does not exactly match up to the the the ones in the slide i actually created a dungeon node and it has",
    "start": "2850559",
    "end": "2856800"
  },
  {
    "text": "entrances eggs and systems to rooms but if we match all the nodes of type dungeon which there will be only one and",
    "start": "2856800",
    "end": "2862319"
  },
  {
    "text": "return it",
    "start": "2862319",
    "end": "2864880"
  },
  {
    "text": "then we just get that one node and that's the dim cap dim caverns but",
    "start": "2868160",
    "end": "2873359"
  },
  {
    "text": "if i double click on this there's the rooms there's the black chamber the painted pit the vile stairs",
    "start": "2873359",
    "end": "2880400"
  },
  {
    "text": "the vile stairs contains a lot of treasure oh no no it's it's not treasure",
    "start": "2880400",
    "end": "2885680"
  },
  {
    "text": "it's monsters it contains a lot of monsters including",
    "start": "2885680",
    "end": "2890880"
  },
  {
    "text": "fair andrea the displacer beast two knolls and",
    "start": "2890880",
    "end": "2896400"
  },
  {
    "text": "pannezia something the giant ant i guess that's probably the displacer b's pet i don't know",
    "start": "2896400",
    "end": "2903680"
  },
  {
    "text": "and i could go to the black pit and then it shows me more relationships and i can kind of walk around for this tool which is",
    "start": "2903760",
    "end": "2910559"
  },
  {
    "text": "it's actually kind of cool right it makes it really visual i mean obviously visual isn't useful for coding",
    "start": "2910559",
    "end": "2917280"
  },
  {
    "text": "it's good for visualization it's kind of in the name but if we wanted to look at the actual data that i got back from this dungeon",
    "start": "2917280",
    "end": "2923119"
  },
  {
    "text": "query you can click over here and say here's the the data so like if i wanted to match all the",
    "start": "2923119",
    "end": "2928160"
  },
  {
    "text": "rooms let's uh let's say match",
    "start": "2928160",
    "end": "2934800"
  },
  {
    "text": "r colon room return r enter that's just going to give me all the",
    "start": "2934800",
    "end": "2940240"
  },
  {
    "text": "rooms but if i go to the tabular view then here's all the rooms and their names",
    "start": "2940240",
    "end": "2946160"
  },
  {
    "text": "actually it's paginated so there's the rest of them so you know we can get like meaningful results out of this for you",
    "start": "2946319",
    "end": "2952160"
  },
  {
    "text": "for like actual work right so but yeah so that's my little demo",
    "start": "2952160",
    "end": "2958480"
  },
  {
    "text": "there uh this code's all in github of course so feel free to play with it um i do love seeing look at that",
    "start": "2958480",
    "end": "2965200"
  },
  {
    "text": "half a millisecond",
    "start": "2965200",
    "end": "2968440"
  },
  {
    "text": "so yeah i think that's all i got in the demo here yeah let's get the slides back up here",
    "start": "2970640",
    "end": "2978079"
  },
  {
    "text": "i got 10 minutes we'll have time for questions don't worry",
    "start": "2978960",
    "end": "2984040"
  },
  {
    "text": "uh i've talked about some of the practical applications obviously dungeons and dragons is not a practical application for graph databases",
    "start": "2984160",
    "end": "2990480"
  },
  {
    "text": "and unless you're hasbro than i suppose it is wizards of coast may actually maybe",
    "start": "2990480",
    "end": "2996079"
  },
  {
    "text": "they're using this for dnd beyond i don't know but social networks are sort of like the canonical example because a social graph",
    "start": "2996079",
    "end": "3002960"
  },
  {
    "text": "is very tied to this sort of model i mentioned genealogy as well it's sort",
    "start": "3002960",
    "end": "3008640"
  },
  {
    "text": "of a social graph over time with people you may or may not like um",
    "start": "3008640",
    "end": "3014079"
  },
  {
    "text": "transportation networks i mentioned those as well um you know you could do these path inquiries and find like",
    "start": "3014079",
    "end": "3020319"
  },
  {
    "text": "the best path based on traffic conditions even and uh the one this kind i didn't",
    "start": "3020319",
    "end": "3026160"
  },
  {
    "text": "mention that's kind of neat is logistics so if you're trying to figure out where the e coli tainted spinach came from",
    "start": "3026160",
    "end": "3032800"
  },
  {
    "text": "because that's a problem um and you've got a graph that represents",
    "start": "3032800",
    "end": "3037839"
  },
  {
    "text": "all the farms all the trucks all the warehouses all the all the stores",
    "start": "3037839",
    "end": "3044240"
  },
  {
    "text": "and you're like well people who got sick bought it at this store you could do a graph query and find all the farms that spinach could have came from",
    "start": "3044240",
    "end": "3051760"
  },
  {
    "text": "and and of course there's the most obvious one which no one wants to talk about which is contact tracing",
    "start": "3051760",
    "end": "3058880"
  },
  {
    "text": "that's a totally i mean it's actually really simple problem solved with graph because it's got it's got two types it's got a node which",
    "start": "3058880",
    "end": "3065119"
  },
  {
    "text": "is people and it's got a relationship which was we're in the same place",
    "start": "3065119",
    "end": "3070319"
  },
  {
    "text": "and that's it right and so uh that's another good graph application",
    "start": "3070319",
    "end": "3076079"
  },
  {
    "text": "hopefully we don't have to use it as much as we we did so lots of practical applications i",
    "start": "3076079",
    "end": "3081920"
  },
  {
    "text": "actually think that if you're uh if you've got a properly scoped app graph is not a bad candidate for a lot of",
    "start": "3081920",
    "end": "3088000"
  },
  {
    "text": "things things you wouldn't necessarily think would be obvious the more mundane things you were like i'm just going to put this in a relational database like",
    "start": "3088000",
    "end": "3094319"
  },
  {
    "text": "you could use a graph database to do that because it does map neatly to your problem domain",
    "start": "3094319",
    "end": "3101200"
  },
  {
    "text": "i've been noodling on doing a talk i was going to call like graph graph and graph attorneys at law",
    "start": "3101200",
    "end": "3106480"
  },
  {
    "text": "and the idea was i was going to use a graph database to store my database to store my data and then it's going to",
    "start": "3106480",
    "end": "3111520"
  },
  {
    "text": "have an object graph of my objects in memory and then i was going to expose that using graphql",
    "start": "3111520",
    "end": "3117760"
  },
  {
    "text": "but i suspect that i just wouldn't need the layer in the middle and then i could probably just build an adapter on top of redis graph that",
    "start": "3117760",
    "end": "3124319"
  },
  {
    "text": "exposes a graphql result but i haven't done the experiment so we'll see",
    "start": "3124319",
    "end": "3130319"
  },
  {
    "text": "here's some resources for you to go check out you can tell i edited my slides this morning to make them better because",
    "start": "3130319",
    "end": "3135839"
  },
  {
    "text": "there's a weird gap between redis and redis stack but there's if you want to learn more",
    "start": "3135839",
    "end": "3141440"
  },
  {
    "text": "about uh redis in general you can go to redis.io if you want to learn about redis stack which is redis with a bunch",
    "start": "3141440",
    "end": "3146640"
  },
  {
    "text": "of modules that's also out on redis.io at docslash stack you can install it as a docker image",
    "start": "3146640",
    "end": "3152240"
  },
  {
    "text": "like i did you can do it in the cloud you can do it all the ways that you would want to do it there's even a brew install",
    "start": "3152240",
    "end": "3159039"
  },
  {
    "text": "redisgraph.io if you want to find out the details on the cipherquery language and what parts",
    "start": "3159200",
    "end": "3164480"
  },
  {
    "text": "redis graphs specifically supports um there's the spec out there from neo4j",
    "start": "3164480",
    "end": "3170000"
  },
  {
    "text": "for the cypher query language and the open cipher spec and then here's a link to a blog post",
    "start": "3170000",
    "end": "3175119"
  },
  {
    "text": "that i wrote a couple years ago which is sort of the inspiration for this talk",
    "start": "3175119",
    "end": "3181359"
  },
  {
    "text": "you do not have to worry about capturing this because i have conveniently given you a qr code that you can scan",
    "start": "3181359",
    "end": "3187040"
  },
  {
    "text": "this qr code is totally reliable it will never give you up nor will let you down",
    "start": "3187040",
    "end": "3195480"
  },
  {
    "text": "it actually does take you to the repo i want to rick roll you so badly but i just can't good faith do it",
    "start": "3195680",
    "end": "3201280"
  },
  {
    "text": "and um i've been working for redis for uh uh die four minus one years so please",
    "start": "3201280",
    "end": "3206319"
  },
  {
    "text": "go check out some of our stuff we've got a discord server uh which i'm always on except when i'm at ndc and then i'm",
    "start": "3206319",
    "end": "3212000"
  },
  {
    "text": "never on there uh we got free classes at redis university",
    "start": "3212000",
    "end": "3217280"
  },
  {
    "text": "and uh you can set up a cloud version of reddit stack or just redis redis out at",
    "start": "3217280",
    "end": "3222880"
  },
  {
    "text": "credits.com try free that's what i've got um",
    "start": "3222880",
    "end": "3227920"
  },
  {
    "text": "thanks a lot i've got time for we've got about five minutes for questions i think",
    "start": "3227920",
    "end": "3233599"
  },
  {
    "text": "uh the yes relation of two relationships of the same type between the same as you know so we're made if you're in vegan",
    "start": "3235359",
    "end": "3241920"
  },
  {
    "text": "it's 40 meters away we may be distributed i don't think so because um the way the",
    "start": "3241920",
    "end": "3247839"
  },
  {
    "text": "graph store so the question was is can you create the same relationship with the same type",
    "start": "3247839",
    "end": "3253440"
  },
  {
    "text": "uh but with different data so can i have a like i follow you",
    "start": "3253440",
    "end": "3259280"
  },
  {
    "text": "and then maybe there's some other number associated with that and then i follow you again and some other number right",
    "start": "3259280",
    "end": "3264800"
  },
  {
    "text": "i'm not positive uh with restraint specifically i don't think so though because the way it's stored internally",
    "start": "3264800",
    "end": "3270720"
  },
  {
    "text": "um is with a sparse matrix and so so one way to model a graph i don't have",
    "start": "3270720",
    "end": "3276400"
  },
  {
    "text": "any slides on how these work internally but there's two ways to model graphs internally one is you can have a bunch of linked lists and then the linked list",
    "start": "3276400",
    "end": "3283359"
  },
  {
    "text": "says this for each node and it says this node here's all the nodes it connects to and so you do a lot",
    "start": "3283359",
    "end": "3289520"
  },
  {
    "text": "of of n operations over those lists to find things it doesn't scale very well it's slow",
    "start": "3289520",
    "end": "3295760"
  },
  {
    "text": "now the other way is you can use a matrix where you've got all the nodes and all the nodes and then you get a num",
    "start": "3295760",
    "end": "3301599"
  },
  {
    "text": "numeric value that says they're related it's kind of like when you look at like for in the before times when we used",
    "start": "3301599",
    "end": "3308240"
  },
  {
    "text": "paper maps before the iphones came out uh you would have these little charts in there would",
    "start": "3308240",
    "end": "3313280"
  },
  {
    "text": "say distance from like you know bristol to london if you're driving and it would you know give you a number",
    "start": "3313280",
    "end": "3320079"
  },
  {
    "text": "and then they look like that and it would be for every node in the graph and the problem with that is that",
    "start": "3320079",
    "end": "3325599"
  },
  {
    "text": "space complexity grows quickly every single time you add a node you're doubling it or whatever whatever the math is i think",
    "start": "3325599",
    "end": "3332160"
  },
  {
    "text": "it's doubling it's a lot and um",
    "start": "3332160",
    "end": "3337359"
  },
  {
    "text": "what redis graph does is using a sparse matrix which is sort of a compressed version of that",
    "start": "3337359",
    "end": "3343040"
  },
  {
    "text": "matrix and because it's a matrix i don't think you could put the same type multiple times because it would they'd",
    "start": "3343040",
    "end": "3348480"
  },
  {
    "text": "overlap each other so so i my money's on it won't work but i haven't tried it",
    "start": "3348480",
    "end": "3354960"
  },
  {
    "text": "good question other questions over there",
    "start": "3354960",
    "end": "3361798"
  },
  {
    "text": "yeah yeah the question is basically can you put a value on a relationship between two nodes the answer is yes you can and",
    "start": "3369520",
    "end": "3376400"
  },
  {
    "text": "you can query on that in the same way that you query on the nodes i have found that when i want to put a lot of values on a relationship",
    "start": "3376400",
    "end": "3383200"
  },
  {
    "text": "it usually means i want a new node and so i i'm and",
    "start": "3383200",
    "end": "3388880"
  },
  {
    "text": "it's just what i've sort of discovered and playing with with these tools remind you i haven't built any proper production code with this i'm i'm a",
    "start": "3388880",
    "end": "3394559"
  },
  {
    "text": "developer advocate i don't do real work but um but what i found is generally like i was",
    "start": "3394559",
    "end": "3402000"
  },
  {
    "text": "i was doing on stream i was building what i was calling redis mud and so i was building this dungeon but i was",
    "start": "3402000",
    "end": "3407040"
  },
  {
    "text": "going to build a text-based multi-user dungeon online and i'm like well we've got rooms",
    "start": "3407040",
    "end": "3412319"
  },
  {
    "text": "and there's relationships which are the connections between the rooms and i quickly realized that i had another node",
    "start": "3412319",
    "end": "3417520"
  },
  {
    "text": "type which was door and so um but yeah you can put those values on",
    "start": "3417520",
    "end": "3424240"
  },
  {
    "text": "there and you can filter on them so there are ways to do that so you could say well wait this this distance and say well how",
    "start": "3424240",
    "end": "3431359"
  },
  {
    "text": "much traffic's on this road and then okay well then that changes which is the shortest path",
    "start": "3431359",
    "end": "3436480"
  },
  {
    "text": "because it's not really the shortest number of hops now it's the shortest total value",
    "start": "3436480",
    "end": "3442240"
  },
  {
    "text": "of the relationships in that line",
    "start": "3442240",
    "end": "3447440"
  },
  {
    "text": "great question i saw another question over there somewhere back there over there we'll go there",
    "start": "3447440",
    "end": "3454680"
  },
  {
    "text": "uh the question is can you create the same reciprocating relationship when you create a command um",
    "start": "3460319",
    "end": "3465760"
  },
  {
    "text": "there's there's one way that i'm positive you can do it there are instances where you can use",
    "start": "3465760",
    "end": "3470880"
  },
  {
    "text": "double-headed arrows like when you're matching and you say i don't care what direction the relationship is it can go either way you",
    "start": "3470880",
    "end": "3477440"
  },
  {
    "text": "can use a double-headed arrow in a query i don't think you can do that when you're creating but you can create a node with a",
    "start": "3477440",
    "end": "3484240"
  },
  {
    "text": "relationship give it a variable and then reference that variable a second time so if i have like a room and i want to put",
    "start": "3484240",
    "end": "3490240"
  },
  {
    "text": "a monster if i have a room and i want to connect it to another room i can say room one and then room two could be referenced on",
    "start": "3490240",
    "end": "3496240"
  },
  {
    "text": "either side of it so you can do that right there",
    "start": "3496240",
    "end": "3503838"
  },
  {
    "text": "so the question is is there any real way to infer relationships like a bulldog is an animal and it's also a type of dog",
    "start": "3514079",
    "end": "3519119"
  },
  {
    "text": "that sort of thing there's there's sort of two ideas there um one idea is is this relation nodes can have",
    "start": "3519119",
    "end": "3526000"
  },
  {
    "text": "multiple labels so i could make a node that has a label of animal a label of dog and a label of",
    "start": "3526000",
    "end": "3534160"
  },
  {
    "text": "bulldog which actually kind of lends itself it's reminiscent of object inheritance hierarchies in",
    "start": "3534160",
    "end": "3539520"
  },
  {
    "text": "object-oriented programming languages i think there could be some value in doing that",
    "start": "3539520",
    "end": "3544880"
  },
  {
    "text": "probably about as much as there isn't using inheritance over composition but",
    "start": "3544880",
    "end": "3550319"
  },
  {
    "text": "but uh the other thing i think this is more what you might be hitting at is that graphs are ways of representing",
    "start": "3550319",
    "end": "3555440"
  },
  {
    "text": "object graphs like you know so i've got a node that is an animal i've got a node that is a",
    "start": "3555440",
    "end": "3562480"
  },
  {
    "text": "dog i have a node that's a bulldog and then i can create relationships between them and i put weights on those to say how tightly related they are",
    "start": "3562480",
    "end": "3569520"
  },
  {
    "text": "and then you can do queries on those relationships and get an idea of how closely related concepts are or like you",
    "start": "3569520",
    "end": "3576559"
  },
  {
    "text": "can do it for content recommendation like you've got well this person's really into javascript and javascript's kind of like typescript",
    "start": "3576559",
    "end": "3583599"
  },
  {
    "text": "he's lovely sorry did i offend everyone",
    "start": "3583599",
    "end": "3589760"
  },
  {
    "text": "but you know if you you know so you you like this you might like this other thing it's kind of it's kind of the same",
    "start": "3589760",
    "end": "3595520"
  },
  {
    "text": "problem as recommending friends because what they're doing is they're looking at the density of the",
    "start": "3595520",
    "end": "3601280"
  },
  {
    "text": "relationships between nodes so uh if i'm connected to you on on facebook",
    "start": "3601280",
    "end": "3606720"
  },
  {
    "text": "and then you've got a bunch of friends and i'm connected to most of them but now all of them you can there's a you know there's a lot of relationships",
    "start": "3606720",
    "end": "3612799"
  },
  {
    "text": "there and you can count them and say well if this is really high then you probably know this person over here too",
    "start": "3612799",
    "end": "3617839"
  },
  {
    "text": "so it's a similar sort of problem so i think we're out of time for questions",
    "start": "3617839",
    "end": "3623440"
  },
  {
    "text": "happy to chat out in the lobby afterwards as well but thanks a lot everyone you've been a",
    "start": "3623440",
    "end": "3629359"
  },
  {
    "text": "fantastic audience and i mean that in a totally pandering way",
    "start": "3629359",
    "end": "3635599"
  }
]