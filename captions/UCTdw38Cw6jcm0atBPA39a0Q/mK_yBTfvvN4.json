[
  {
    "start": "0",
    "end": "117000"
  },
  {
    "text": "okay welcome back who has been to my",
    "start": "1129",
    "end": "6240"
  },
  {
    "text": "previous talk okay most of you so as you",
    "start": "6240",
    "end": "12210"
  },
  {
    "text": "might know yeah traditionally I'm more interested in in writing servers then writing clients but",
    "start": "12210",
    "end": "18029"
  },
  {
    "text": "obviously you know the reason why anybody puts up a server is mostly because they want to connect clients to it right so that's kind of like an",
    "start": "18029",
    "end": "24570"
  },
  {
    "text": "important topic so I do a lot of work with our customers to help them",
    "start": "24570",
    "end": "31890"
  },
  {
    "text": "integrate either new clients or existing clients into these new token-based",
    "start": "31890",
    "end": "37890"
  },
  {
    "text": "systems and you know doctor the goal of",
    "start": "37890",
    "end": "43739"
  },
  {
    "text": "this talk is basically to give you a good guidance depending on which type of",
    "start": "43739",
    "end": "49350"
  },
  {
    "text": "client you're writing Howie how you can do that when I when I put this talk together they wrote the abstract I was",
    "start": "49350",
    "end": "54870"
  },
  {
    "text": "pretty ambitious I can do all the client types in 60 minutes yeah and then I put the slides together and it turned out to be 40 year 45 slides for 60 minutes so",
    "start": "54870",
    "end": "62760"
  },
  {
    "text": "you can do the math yourself it's gonna be a lot of stuff okay so um but what I",
    "start": "62760",
    "end": "70590"
  },
  {
    "text": "did is because you know these 60 minutes are just the start yeah the beginning that you learn about",
    "start": "70590",
    "end": "76290"
  },
  {
    "text": "what you need to learn about so I put many links and you know like you know",
    "start": "76290",
    "end": "81750"
  },
  {
    "text": "like references to further reading material onto the slides and I uploaded the slides already on on to speaker deck",
    "start": "81750",
    "end": "88170"
  },
  {
    "text": "so you can download the slides from day I get all the links from there and then you get all the you know there to further reading references so as I said",
    "start": "88170",
    "end": "97200"
  },
  {
    "text": "we do a lot of customer work with you know help people writing or integrating",
    "start": "97200",
    "end": "103170"
  },
  {
    "text": "those clients and when I start working with them or you know like you know the",
    "start": "103170",
    "end": "108780"
  },
  {
    "text": "first meeting and so on people are often very confused yeah and the reason why they are confused this is because it's",
    "start": "108780",
    "end": "116360"
  },
  {
    "text": "complicated yeah there is so much stuff out there on the internet that give you",
    "start": "116360",
    "end": "122520"
  },
  {
    "start": "117000",
    "end": "117000"
  },
  {
    "text": "guidance for various things and as it turns out just in the last month the",
    "start": "122520",
    "end": "128280"
  },
  {
    "text": "guidance has even changed for certain types of clients so the duties talk reflects all of the new",
    "start": "128280",
    "end": "133800"
  },
  {
    "text": "guidance that it has been our put out there and the other thing is that",
    "start": "133800",
    "end": "139670"
  },
  {
    "text": "typically you don't do Oprah open ID connect on your own or on its own or you",
    "start": "139670",
    "end": "145500"
  },
  {
    "text": "do you typically don't do ooofff on its own typically it's the combination of both now because only with that you get both",
    "start": "145500",
    "end": "153030"
  },
  {
    "text": "the authentication and the session management and the API access there is open connect is only authentication and",
    "start": "153030",
    "end": "158340"
  },
  {
    "text": "session management and Wharf is only API access here you typically combine them together but guess what these two these",
    "start": "158340",
    "end": "164460"
  },
  {
    "text": "two standards are being maintained by two different standards bodies so o of is all IETF mia various open idea is all",
    "start": "164460",
    "end": "173070"
  },
  {
    "text": "in the open ID foundation so you also have to string together those documents and follow the cross-reference between",
    "start": "173070",
    "end": "179730"
  },
  {
    "text": "the documents to figure out what's going on so as I said the objective is to to",
    "start": "179730",
    "end": "185360"
  },
  {
    "start": "183000",
    "end": "183000"
  },
  {
    "text": "filter the important information and give you give you the guidance for for",
    "start": "185360",
    "end": "191760"
  },
  {
    "text": "the most typical types of clients you want to ride which is server to server Web Apps native mobile and and staff",
    "start": "191760",
    "end": "198600"
  },
  {
    "text": "okay so as I said when you when you go to this website yes what I did I took",
    "start": "198600",
    "end": "205020"
  },
  {
    "text": "all of their specs that they put out and try to put them into context and that's what it looks like okay and so there's a",
    "start": "205020",
    "end": "212489"
  },
  {
    "text": "fair amount of reading material if you want to get the big picture and there",
    "start": "212489",
    "end": "217739"
  },
  {
    "text": "was a guy that recently counted all the pages of all the specs and together they",
    "start": "217739",
    "end": "223440"
  },
  {
    "text": "are twice the number of pages as a worn piece okay so it's a substantial amount",
    "start": "223440",
    "end": "231180"
  },
  {
    "text": "of reading material let's put it this way I think I read them all ma'am and you have to also be like a bit",
    "start": "231180",
    "end": "238440"
  },
  {
    "text": "a little bit in the mood for that too reading specs as you probably it's not happening every day yeah so yeah let's",
    "start": "238440",
    "end": "245370"
  },
  {
    "text": "get started you probably have seen this picture before in my talks that's the big picture that's that's what we're",
    "start": "245370",
    "end": "251400"
  },
  {
    "start": "246000",
    "end": "246000"
  },
  {
    "text": "trying to build typically right front ends talk to backends and backends talk to other back ends and while I -",
    "start": "251400",
    "end": "258150"
  },
  {
    "text": "traditionally talked a lot about the backends this time we're going to talk about the front ends now which is browsers native apps and typically",
    "start": "258150",
    "end": "264630"
  },
  {
    "text": "something like call server-to-server communication now when you when you retail stacks they",
    "start": "264630",
    "end": "270629"
  },
  {
    "text": "make a distinction between two fundamental types of clients and they are called public clients and",
    "start": "270629",
    "end": "275819"
  },
  {
    "text": "confidential clients yeah so a confidential client is basically in the world of OAuth a client that can",
    "start": "275819",
    "end": "283080"
  },
  {
    "text": "securely store a secret okay and what that basically translates to it is they",
    "start": "283080",
    "end": "288690"
  },
  {
    "text": "are typically clients which are installed on a server right there running maybe in your data center you",
    "start": "288690",
    "end": "295139"
  },
  {
    "text": "you you can securely store secrets or data on these servers or maybe that they",
    "start": "295139",
    "end": "300150"
  },
  {
    "text": "run in the data center of business partners things like that a public",
    "start": "300150",
    "end": "306060"
  },
  {
    "text": "client on the other on the other end you know these are things that run on end-user devices like an iPhone or a",
    "start": "306060",
    "end": "312900"
  },
  {
    "text": "desktop PC or a browser you know and you don't have control over these things you",
    "start": "312900",
    "end": "318000"
  },
  {
    "text": "know that they are outside your reach there's also no point in storing secrets in there because where would you store",
    "start": "318000",
    "end": "323639"
  },
  {
    "text": "them like probably not in the source code right so that's a fundamental distinction that we have to look at and",
    "start": "323639",
    "end": "330180"
  },
  {
    "text": "depending on what type of trend you're writing there is different there are different approaches here so big we're going to start with confidential ones",
    "start": "330180",
    "end": "336509"
  },
  {
    "text": "because they are the easier ones to be honest and then we're going to move on to to public lines so in a nutshell",
    "start": "336509",
    "end": "343710"
  },
  {
    "text": "right writing a client always means this you request the token you used to token right that's what you do when you're",
    "start": "343710",
    "end": "349770"
  },
  {
    "text": "building a talk line for a token based system but obviously there are a lot of",
    "start": "349770",
    "end": "355380"
  },
  {
    "text": "things happening between these two steps here which is managing the token so let's have a look at the most simplest scenario in or which is called a client",
    "start": "355380",
    "end": "362789"
  },
  {
    "start": "360000",
    "end": "360000"
  },
  {
    "text": "credential flow and that is a pure server-to-server style communication",
    "start": "362789",
    "end": "367860"
  },
  {
    "text": "right so one server is calling another server that there's no direct interactive human involved yet it's just",
    "start": "367860",
    "end": "373919"
  },
  {
    "text": "the two machines talking to each other but still you want to do authentication so the way this works in office that",
    "start": "373919",
    "end": "379440"
  },
  {
    "text": "basically you have this thing called the authorization server that's the term that the o of people use it's a very",
    "start": "379440",
    "end": "384750"
  },
  {
    "text": "misleading term because many people think that it has to do with user authorization it has not now it has to",
    "start": "384750",
    "end": "390690"
  },
  {
    "text": "do with client authorization so in other words this authorization server knows",
    "start": "390690",
    "end": "396089"
  },
  {
    "text": "about all the clients in your system it knows about all the api's in your system then the opens the connection to the so called",
    "start": "396089",
    "end": "402300"
  },
  {
    "text": "token end point it authenticates with the token end point with that secret that disk line can store securely he",
    "start": "402300",
    "end": "409289"
  },
  {
    "text": "asks for an access token for an API of a multiple API and then if if the",
    "start": "409289",
    "end": "414570"
  },
  {
    "text": "authorization versus yes you are allowed to do that you're getting your token and from that point on you can use the token",
    "start": "414570",
    "end": "420479"
  },
  {
    "text": "okay it's a very simple scenario but a very common one server-to-server communication then you think that token",
    "start": "420479",
    "end": "428009"
  },
  {
    "start": "427000",
    "end": "427000"
  },
  {
    "text": "typically means you just you know open an HTTP connection to an endpoint you use the authorization header for this",
    "start": "428009",
    "end": "434460"
  },
  {
    "text": "and you put the word para on there which is coming from another spec it's reference here which basically means",
    "start": "434460",
    "end": "440729"
  },
  {
    "text": "what you know telling the recipient what to expect and in this case he's expecting an OAuth token okay that can",
    "start": "440729",
    "end": "448770"
  },
  {
    "text": "come in many shapes there were Jason DEP tokens there were custom token formats ooofff doesn't mandate the token format",
    "start": "448770",
    "end": "454020"
  },
  {
    "text": "but the word bear are tells the recipient that is some token type that he is supposed to understand okay there",
    "start": "454020",
    "end": "462330"
  },
  {
    "text": "are other options here like using the query string order or the post body which are more like you know like alternatives if you can't use the header",
    "start": "462330",
    "end": "469160"
  },
  {
    "text": "generally recommendation is use the header because the authorization header has a special meaning in HTTP it's",
    "start": "469160",
    "end": "475050"
  },
  {
    "text": "reserved for transporting credentials they often don't end up in log files for example you know and browsers treat them",
    "start": "475050",
    "end": "482070"
  },
  {
    "text": "differently as well and so on so soft so that that's the typical way you do that but once you are behind beyond that very",
    "start": "482070",
    "end": "494010"
  },
  {
    "text": "basic scenario so you got your token you used it it's working now you have to write a real application right and this",
    "start": "494010",
    "end": "499979"
  },
  {
    "text": "real application now means it needs to store to manage these tokens as well and this is typically the more the more",
    "start": "499979",
    "end": "505470"
  },
  {
    "text": "interesting part because depending what type of application you're writing you have different approaches to that but",
    "start": "505470",
    "end": "510720"
  },
  {
    "text": "generally speaking you store these token somewhere now maybe on the server like",
    "start": "510720",
    "end": "516330"
  },
  {
    "text": "in memory for example or in a cache or maybe it's even a distributed cache HP",
    "start": "516330",
    "end": "523200"
  },
  {
    "text": "or net has this concept of a session for example where you can store things or",
    "start": "523200",
    "end": "528900"
  },
  {
    "text": "database for example yum and then you have to use that token yeah so what you don't do is obviously you",
    "start": "528900",
    "end": "534870"
  },
  {
    "text": "don't get a token for every request you're getting a token a topi has a certain lifetime and then you're using",
    "start": "534870",
    "end": "540120"
  },
  {
    "text": "this token for this lifetime one of the response parameters coming back from the",
    "start": "540120",
    "end": "546390"
  },
  {
    "text": "token endpoint is called expires in and that tells you from now this token will be valid for this number of seconds okay",
    "start": "546390",
    "end": "553950"
  },
  {
    "text": "so you have to do your own math basically okay now it's whatever 2 o'clock it says it expires in 3600",
    "start": "553950",
    "end": "560220"
  },
  {
    "text": "seconds so it's gonna be valid for 1 hour ma'am and now you know there were two fundamental approaches how you want",
    "start": "560220",
    "end": "566790"
  },
  {
    "text": "to manage them one I I call proactive where you have a server-side cash system",
    "start": "566790",
    "end": "572250"
  },
  {
    "text": "right so you get the token it's valid for 60 minutes you put it in the cash you put the cash lifetime to 59 minutes",
    "start": "572250",
    "end": "578880"
  },
  {
    "text": "for example yeah and the next you know then you start using the token and when it's not available anymore in the cash",
    "start": "578880",
    "end": "585000"
  },
  {
    "text": "you know it was about to expire you get a new one and you continue working okay",
    "start": "585000",
    "end": "590089"
  },
  {
    "text": "there's also a like a reactive approach that that means basically you don't care about all of this lifetime management at",
    "start": "590089",
    "end": "596610"
  },
  {
    "text": "all we'll just keep using their token and perspec a 401 coming back from the",
    "start": "596610",
    "end": "602279"
  },
  {
    "text": "server tells you your token it's not good anymore okay and then you would go back to the token service get a new token and resend the request ma'am",
    "start": "602279",
    "end": "610880"
  },
  {
    "text": "so which approach you prefer is up to you but you should definitely be",
    "start": "610880",
    "end": "616200"
  },
  {
    "text": "prepared for cases where you get back a 401 so you need to have this resend",
    "start": "616200",
    "end": "622709"
  },
  {
    "text": "logic somehow implemented so in other",
    "start": "622709",
    "end": "627930"
  },
  {
    "start": "627000",
    "end": "627000"
  },
  {
    "text": "words if we look at the bigger picture is what what do clients need to do well they need to request a token so we've",
    "start": "627930",
    "end": "633870"
  },
  {
    "text": "seen only one protocol flow in oo of so far and if you have read aspects or you",
    "start": "633870",
    "end": "639450"
  },
  {
    "text": "know seen other talks you know that there are more of what they call flows okay so and you know a flow is basically",
    "start": "639450",
    "end": "645570"
  },
  {
    "text": "like a flavor of the protocol if you like that is optimized for certain types of clients another fundamental decision",
    "start": "645570",
    "end": "653730"
  },
  {
    "text": "that you have to take is is this a headless client or is it something that has a an interactive user involved that",
    "start": "653730",
    "end": "659640"
  },
  {
    "text": "makes things more complicated where do I store the token how do I renew the token and maybe is do I do I require a",
    "start": "659640",
    "end": "666360"
  },
  {
    "text": "long-lived access meaning for example if there is a user do I require to access this api's after the",
    "start": "666360",
    "end": "672100"
  },
  {
    "text": "user has you know left my application he shut down his computer do you need like some automated processes in the",
    "start": "672100",
    "end": "677860"
  },
  {
    "text": "background keep on working ma'am and then you use the token that's that's the easy part okay let's switch to the",
    "start": "677860",
    "end": "685420"
  },
  {
    "start": "684000",
    "end": "684000"
  },
  {
    "text": "more interesting approach which is about user centric clients so when you have a user involved it's much more involved",
    "start": "685420",
    "end": "693520"
  },
  {
    "text": "and much more complicated than just doing making an API call get a token and and start start that typically have to",
    "start": "693520",
    "end": "699130"
  },
  {
    "text": "have a user workflow in between right so if you first need to send a user to the server he needs to authenticate with the",
    "start": "699130",
    "end": "704500"
  },
  {
    "text": "server that might be already a complex workflow depending what you're doing you",
    "start": "704500",
    "end": "709510"
  },
  {
    "text": "know that user might be a local user or it might go to an external identity provider so that there are redirects",
    "start": "709510",
    "end": "714910"
  },
  {
    "text": "involved in the browser you might want to start a single sign-on session or maybe you want to join a single sign-on",
    "start": "714910",
    "end": "721660"
  },
  {
    "text": "session if this already exists and then once all of this is done you start",
    "start": "721660",
    "end": "726790"
  },
  {
    "text": "making API calls on behalf of that user and again you start managing the token",
    "start": "726790",
    "end": "732130"
  },
  {
    "text": "so that you know you make optimal use of it as long as it's valid and once this is over this valve validity time you",
    "start": "732130",
    "end": "738760"
  },
  {
    "text": "need to get a new token and this should be done in a way that it's not very intrusive for your end user right what",
    "start": "738760",
    "end": "744730"
  },
  {
    "text": "you want to avoid is doing like redirects in the browser or something it should just be it should happen in the",
    "start": "744730",
    "end": "749830"
  },
  {
    "text": "background so to speak yeah to accommodate this or created this",
    "start": "749830",
    "end": "755050"
  },
  {
    "text": "thing called the authorization code flow yeah and keep in mind this is not an introduction to OAuth yeah I will go",
    "start": "755050",
    "end": "760090"
  },
  {
    "text": "over these things pretty quickly we can't we don't have the time to explain all the basics here but the",
    "start": "760090",
    "end": "766570"
  },
  {
    "text": "authorization code flow is if call it like the mother of all flows in OAuth they must have the first one they",
    "start": "766570",
    "end": "772120"
  },
  {
    "text": "created and the idea is this you are in an interactive application you send the",
    "start": "772120",
    "end": "777220"
  },
  {
    "start": "773000",
    "end": "773000"
  },
  {
    "text": "user to the external token system right you you redirect the browser for example to this authorized endpoint you send",
    "start": "777220",
    "end": "783910"
  },
  {
    "text": "your parameters along the scope list basically tells the server what",
    "start": "783910",
    "end": "789040"
  },
  {
    "text": "resources does the client need to access so open ID and email means give me his",
    "start": "789040",
    "end": "794200"
  },
  {
    "text": "subject ID and his email address and you also want to talk to API one API two and there's this special scope here in oak",
    "start": "794200",
    "end": "800440"
  },
  {
    "text": "MIDI Connect called offline access and what this signals signals the service that it should emit more things",
    "start": "800440",
    "end": "807910"
  },
  {
    "text": "to you that allow you to manage to manage the token life time without requiring user interaction okay the so",
    "start": "807910",
    "end": "814209"
  },
  {
    "text": "called refresh token and we're gonna see that in a second so the code response type means basically wants to serve is done it will",
    "start": "814209",
    "end": "821110"
  },
  {
    "start": "821000",
    "end": "821000"
  },
  {
    "text": "come back to the client application it will send this so-called code okay and the code the code is a one-time token",
    "start": "821110",
    "end": "827350"
  },
  {
    "text": "and now the client application opened the back-channel communication to the server authenticates with the server",
    "start": "827350",
    "end": "834129"
  },
  {
    "start": "831000",
    "end": "831000"
  },
  {
    "text": "it's a confidential client right it has a client secret sends in the code and",
    "start": "834129",
    "end": "839139"
  },
  {
    "text": "then the server will return back the tokens that you care about the identity token for the front-end the access token",
    "start": "839139",
    "end": "846790"
  },
  {
    "text": "for the API and the Refresh token for the token lifetime management okay that is I think a very common flow that you",
    "start": "846790",
    "end": "854559"
  },
  {
    "text": "all know this code flow has been around",
    "start": "854559",
    "end": "860589"
  },
  {
    "text": "from for many years mind you our office from 20 2012 okay and you know many many",
    "start": "860589",
    "end": "867129"
  },
  {
    "text": "people any people fought that's that's by far the most secure way of doing that right because you're getting the code on the front and if an attacker would be",
    "start": "867129",
    "end": "873279"
  },
  {
    "text": "able to attack the browser which is the most weak you know that the weakest link in our chain by stealing that code the",
    "start": "873279",
    "end": "879370"
  },
  {
    "text": "attack I couldn't get the tokens because he's still missing the client secret and the client secret is stored on the",
    "start": "879370",
    "end": "884649"
  },
  {
    "text": "server side ma'am so many people thought okay code flow is the most secure thing sorry",
    "start": "884649",
    "end": "890980"
  },
  {
    "text": "unfortunately attackers are also very clever now and they find new and exciting ways to attack our system and",
    "start": "890980",
    "end": "897490"
  },
  {
    "start": "894000",
    "end": "894000"
  },
  {
    "text": "one problem that code flow can't solve is the so called code substitution attack and the code substitution attack",
    "start": "897490",
    "end": "903759"
  },
  {
    "text": "means if I can steal a code from somewhere maybe with a veteran network sniffer or maybe I can trick you in",
    "start": "903759",
    "end": "909699"
  },
  {
    "text": "logging into a malicious application I can steal your code coming back from the server well the attacker can turn that code",
    "start": "909699",
    "end": "916420"
  },
  {
    "text": "into a token part it can go to the legitimate application login on the way back substitute the valid token with the",
    "start": "916420",
    "end": "925300"
  },
  {
    "text": "stolen token and thus trick the client application to use his client secret to turn the code into tokens",
    "start": "925300",
    "end": "932230"
  },
  {
    "text": "okay and now you can impersonate your victim ma'am so code flow on its",
    "start": "932230",
    "end": "940269"
  },
  {
    "text": "own does not have a mitigation technique for that because there's no way to validate that the code you get back on",
    "start": "940269",
    "end": "945910"
  },
  {
    "text": "the front channel actually belongs to the currently logged on user okay so open early connect came after a Worf it",
    "start": "945910",
    "end": "954399"
  },
  {
    "text": "came after the after the fact when this attack or vulnerability became public so",
    "start": "954399",
    "end": "960069"
  },
  {
    "text": "they they designed for it it's called the so-called hybrid flow and let me show you that first so when you're building an open reconnect based",
    "start": "960069",
    "end": "966309"
  },
  {
    "text": "system and you have a library which supports the hybrid flow I would recommend using debt over the pure code",
    "start": "966309",
    "end": "973300"
  },
  {
    "text": "flow the way hybrid flow works is this you know same scenario the only thing that that has changed here is the",
    "start": "973300",
    "end": "979029"
  },
  {
    "start": "975000",
    "end": "975000"
  },
  {
    "text": "response type so instead of just asking for a code you're asking for an additional identity token and the",
    "start": "979029",
    "end": "985329"
  },
  {
    "text": "identity token is a signed data structure assigned with the private key of the token service so what you can do",
    "start": "985329",
    "end": "991899"
  },
  {
    "text": "is when you receive the identity token you can validate a token make sure it's it's valid it's been signed by the right",
    "start": "991899",
    "end": "997089"
  },
  {
    "text": "party and what's inside of that identity",
    "start": "997089",
    "end": "1002430"
  },
  {
    "start": "1002000",
    "end": "1002000"
  },
  {
    "text": "token is a special claim called the C hashed claim and what the C hash is is",
    "start": "1002430",
    "end": "1007620"
  },
  {
    "text": "the hash of the code okay so you first make sure the ID token is valid and",
    "start": "1007620",
    "end": "1014059"
  },
  {
    "text": "there are other things in there nonsense and you know things against replay protection and so on and once once the",
    "start": "1014059",
    "end": "1020129"
  },
  {
    "text": "ID token is valid you get to see hash value u hash the code yourself and you compare the two values together and this",
    "start": "1020129",
    "end": "1026640"
  },
  {
    "text": "way you can make sure that the code actually belongs to the identity token which means it belongs to the currently logged on user okay",
    "start": "1026640",
    "end": "1032938"
  },
  {
    "text": "that's how hyperflow protects against this problem and my general",
    "start": "1032939",
    "end": "1037949"
  },
  {
    "text": "recommendation is don't use code flow whatever type of client you're writing never use code flow on its own it is",
    "start": "1037949",
    "end": "1044640"
  },
  {
    "text": "vulnerable to code substitution okay hybrid flow as I said it's one of the",
    "start": "1044640",
    "end": "1049860"
  },
  {
    "text": "options if your client library supports that so in in my world the most common",
    "start": "1049860",
    "end": "1056760"
  },
  {
    "text": "client I would ride using hybrid flow is a spinet Cora based clients okay you",
    "start": "1056760",
    "end": "1061799"
  },
  {
    "text": "know like a map application that asks that that authenticates the user gets",
    "start": "1061799",
    "end": "1067049"
  },
  {
    "text": "the tokens and you two tokens okay so I really show this sample already in my previous talk but",
    "start": "1067049",
    "end": "1073710"
  },
  {
    "text": "basically the way this looks like is that's that's an 8-minute core application and you can see here's the",
    "start": "1073710",
    "end": "1079500"
  },
  {
    "text": "open MediConnect library from Microsoft and I would recommend using that if you are on a spinet core it's a really good",
    "start": "1079500",
    "end": "1085049"
  },
  {
    "text": "client library it has implemented many of the mitigation techniques that you have - including hybrid okay so you can",
    "start": "1085049",
    "end": "1092640"
  },
  {
    "text": "see here the response type is not code it's code ID token and once you ask for",
    "start": "1092640",
    "end": "1099450"
  },
  {
    "text": "Cora D token dis client library knows that it needs to do all the C hashing and you know verifying the codes and and",
    "start": "1099450",
    "end": "1105960"
  },
  {
    "text": "so on and so forth okay so that's very important what I also shown this morning is that",
    "start": "1105960",
    "end": "1113190"
  },
  {
    "text": "by using the built in HP nut core security features you can also implement",
    "start": "1113190",
    "end": "1118440"
  },
  {
    "text": "automatic token management meaning you",
    "start": "1118440",
    "end": "1123630"
  },
  {
    "text": "can hook into the lifetime events of the session management yeah and one of these",
    "start": "1123630",
    "end": "1128820"
  },
  {
    "text": "events is called validate principle and this just gets called on every incoming",
    "start": "1128820",
    "end": "1134880"
  },
  {
    "text": "request and then now the request comes in you can look at your current access token look at the expiration of the",
    "start": "1134880",
    "end": "1141090"
  },
  {
    "text": "current access token if the token is about to expire you can trigger a refresh request with the reboot the",
    "start": "1141090",
    "end": "1147390"
  },
  {
    "text": "token service get a new access token throw away the old one stored a new one in the session and a nice effect of that",
    "start": "1147390",
    "end": "1155340"
  },
  {
    "text": "is is that your client code your your business application code does not need to know anything about this it's done",
    "start": "1155340",
    "end": "1162090"
  },
  {
    "text": "automatically as part of the session management features of a spinet core yeah so you can see here here's the the",
    "start": "1162090",
    "end": "1169290"
  },
  {
    "text": "most important line of code that means yes we need to refresh okay and then here we where we're getting a new token",
    "start": "1169290",
    "end": "1175770"
  },
  {
    "text": "and you can see the other event I'm handing is called signing out and at sign out time when the user signs out",
    "start": "1175770",
    "end": "1181950"
  },
  {
    "text": "I'm basically getting rid of these tokens by invalidating deb them at the token revocation endpoint at the token",
    "start": "1181950",
    "end": "1188580"
  },
  {
    "text": "service so here is where the the token gets revoked okay so with these two",
    "start": "1188580",
    "end": "1193650"
  },
  {
    "text": "things together you have a pretty nice client package here that application doing authentication getting access",
    "start": "1193650",
    "end": "1199380"
  },
  {
    "text": "token token management is automated at sign out time you clean up behind you okay so let's",
    "start": "1199380",
    "end": "1207450"
  },
  {
    "text": "run that pretty quickly so I am oh I",
    "start": "1207450",
    "end": "1213300"
  },
  {
    "text": "should run my server I guess that would help yeah okay so I'm logging in Bob and",
    "start": "1213300",
    "end": "1227610"
  },
  {
    "text": "Bob yes my consent screen you can see I'm actually getting all these tokens I asked for API offline access and all",
    "start": "1227610",
    "end": "1234750"
  },
  {
    "text": "these things I say yes allow and then then I could call the API and you can",
    "start": "1234750",
    "end": "1240030"
  },
  {
    "text": "see here I I dumped out the content of the current authentication session and you see the SD identity token does the",
    "start": "1240030",
    "end": "1245820"
  },
  {
    "text": "Refresh token and yes the access token and I configure this client to have a",
    "start": "1245820",
    "end": "1250920"
  },
  {
    "text": "really short access token lifetime like 75 seconds or something so if I talk for",
    "start": "1250920",
    "end": "1256170"
  },
  {
    "text": "long enough and refresh the page you should see that the access token is changing and that the expiration goes",
    "start": "1256170",
    "end": "1263070"
  },
  {
    "text": "into the future which shows yes that our lifetime management works automatically",
    "start": "1263070",
    "end": "1268740"
  },
  {
    "text": "that code is I wrote a blog post about this and the sample is on github and you",
    "start": "1268740",
    "end": "1275040"
  },
  {
    "text": "have to link for that so if you want to read more about how it works and and and",
    "start": "1275040",
    "end": "1282600"
  },
  {
    "text": "how you wire it up it's all in there and again you can download the slides from from speaker deck ok ha",
    "start": "1282600",
    "end": "1292890"
  },
  {
    "start": "1292000",
    "end": "1292000"
  },
  {
    "text": "the world is not perfect right there are issues with hybrid flow as well not",
    "start": "1292890",
    "end": "1298080"
  },
  {
    "text": "security issues really but the problem of hybrid flow is and that's the reason why it's not very common the client",
    "start": "1298080",
    "end": "1304530"
  },
  {
    "text": "libraries they are pretty pretty complicated right you need to do all this crypto right you need to validate",
    "start": "1304530",
    "end": "1310170"
  },
  {
    "text": "the errors a signature of the identity token you need to create you know keep track of your nonces you need to do all",
    "start": "1310170",
    "end": "1317040"
  },
  {
    "text": "other things then you need to do the hashing of the code and compare it with the hash claim and so on so long story",
    "start": "1317040",
    "end": "1322680"
  },
  {
    "text": "short not all platforms have support for hybrid flow ok Microsoft has a really",
    "start": "1322680",
    "end": "1329520"
  },
  {
    "text": "good library as I said it works really well but for example I had to do an integration for a customer",
    "start": "1329520",
    "end": "1335650"
  },
  {
    "text": "recently with a PHP based client and guess what there was no pre-built",
    "start": "1335650",
    "end": "1340990"
  },
  {
    "text": "library for PHP that supported hyper flow all they supported was code flow because culture law is much easier to",
    "start": "1340990",
    "end": "1346450"
  },
  {
    "text": "implement yeah so that's one of the problems with hybrid flow that the adoption is not very high which you",
    "start": "1346450",
    "end": "1353440"
  },
  {
    "text": "don't care about if you're doing HP and core but if you do cross-platform work you have to make sure that you know the",
    "start": "1353440",
    "end": "1359050"
  },
  {
    "text": "platform's you're trying to use have have support for that now the other",
    "start": "1359050",
    "end": "1365200"
  },
  {
    "text": "thing which is a bit funny sometimes or not depending on how you see it you know hybrid flow was invented before",
    "start": "1365200",
    "end": "1372850"
  },
  {
    "text": "this thing called gdpr so in hybrid flow",
    "start": "1372850",
    "end": "1379150"
  },
  {
    "text": "there is a mandatory claim that you can't strip and that's the user idea of",
    "start": "1379150",
    "end": "1385210"
  },
  {
    "text": "the current user because you need that fault for linking the identities between the various hops which means you know",
    "start": "1385210",
    "end": "1391090"
  },
  {
    "text": "you are transmitting a token over the front channel of a browser and inside of that token there is a unique identifier",
    "start": "1391090",
    "end": "1397030"
  },
  {
    "text": "for the user now the recommendation is that this unique identifier should be just a random number right some some",
    "start": "1397030",
    "end": "1403210"
  },
  {
    "text": "internal identifier but not everybody listens to my recommendations yeah and sometimes people use email addresses for",
    "start": "1403210",
    "end": "1409180"
  },
  {
    "text": "example a subject IDs and then suddenly depending on your GDP our consultant he flexed is because you are leaking",
    "start": "1409180",
    "end": "1414970"
  },
  {
    "text": "information on the browser channel about the user which is you know a byproduct",
    "start": "1414970",
    "end": "1420760"
  },
  {
    "text": "of this mechanism which you can mitigate by not using email addresses I guess and",
    "start": "1420760",
    "end": "1427750"
  },
  {
    "text": "using real user IDs but that's just the way it is and you might run into that if you're using this approach okay let's",
    "start": "1427750",
    "end": "1437020"
  },
  {
    "start": "1434000",
    "end": "1434000"
  },
  {
    "text": "switch our focus to public lines and see what what what's happening there and how they involved and maybe we find",
    "start": "1437020",
    "end": "1443140"
  },
  {
    "text": "afterwards a solution to solving our hybrid flow problem as well so in you",
    "start": "1443140",
    "end": "1448660"
  },
  {
    "text": "know public lines as I said they are they are deployed to like on client devices in browsers and so on and the",
    "start": "1448660",
    "end": "1454570"
  },
  {
    "text": "way you treat them is slightly different so with confidential clients you typically have a one-to-one relationship between the client ID and the instance",
    "start": "1454570",
    "end": "1461260"
  },
  {
    "text": "of the software that you're using right you have your app one app to app free they are all installed on the server",
    "start": "1461260",
    "end": "1466390"
  },
  {
    "text": "each of them have unique secret so that's how you identify these these clients with with public clients",
    "start": "1466390",
    "end": "1474960"
  },
  {
    "text": "they're typically not how it works right because you are writing a client let's say an iOS client you give it a client",
    "start": "1474960",
    "end": "1482070"
  },
  {
    "text": "idea you deploy to the app store and then 1 million people downloaded they all share the same client ID right",
    "start": "1482070",
    "end": "1487710"
  },
  {
    "text": "because that's just the way it is there's nothing bad about this yeah I'm just making you aware of that that",
    "start": "1487710",
    "end": "1492750"
  },
  {
    "text": "suddenly you can't identify instances of your software anymore but only types of",
    "start": "1492750",
    "end": "1498570"
  },
  {
    "text": "software depending on your security requirements there is an something",
    "start": "1498570",
    "end": "1503910"
  },
  {
    "text": "called dynamic client registration and the idea is especially for for native apps that you're shipping your app to",
    "start": "1503910",
    "end": "1510750"
  },
  {
    "text": "the App Store for example using bootstrap client ID and then the first time the user runs tests the user",
    "start": "1510750",
    "end": "1517200"
  },
  {
    "text": "authenticates with your back-end system and then the pack and system issues a unique new client ID down to the to the",
    "start": "1517200",
    "end": "1523650"
  },
  {
    "text": "client and maybe also a client secret right because it's now bound to the instance and that's how you can",
    "start": "1523650",
    "end": "1528840"
  },
  {
    "text": "effectively turn a public line into a confidential client so that that's you know my bank does that for example yeah",
    "start": "1528840",
    "end": "1536280"
  },
  {
    "text": "it's also very common let's say you have some some commercial back-end software maybe as IP something like this and they",
    "start": "1536280",
    "end": "1543090"
  },
  {
    "text": "ship their client software why are the 80 app store then on the first time you run the client software they pair with",
    "start": "1543090",
    "end": "1549600"
  },
  {
    "text": "the backend and suddenly you become a unique client for example but that's something you have to implement yourself",
    "start": "1549600",
    "end": "1556070"
  },
  {
    "text": "so let's have a look at native clients first so native clients the good thing",
    "start": "1556730",
    "end": "1563610"
  },
  {
    "start": "1559000",
    "end": "1559000"
  },
  {
    "text": "about native clients is that there is a really good document to read you have one of the many documents that the IT",
    "start": "1563610",
    "end": "1569040"
  },
  {
    "text": "have put out one is called OAuth 204 native applications ma'am and the first",
    "start": "1569040",
    "end": "1575400"
  },
  {
    "text": "confusion is yeah that people say like yeah but I'm not doing oh I'm doing oh bloody connect yes but this document was",
    "start": "1575400",
    "end": "1581160"
  },
  {
    "text": "written by the IETF and the ITF owns ooofff so they can't use the word open ID Connect yeah in in the title but",
    "start": "1581160",
    "end": "1588600"
  },
  {
    "text": "guess what all of the reference implementations of this spec they use oak MIDI connect and not oh off and that",
    "start": "1588600",
    "end": "1596370"
  },
  {
    "text": "as the sample code is hosted on the github organization of the open MIDI foundation and not an idea",
    "start": "1596370",
    "end": "1601680"
  },
  {
    "text": "so it's a bit silly yeah it's it's an artificial separation of two things that really closely belong together but makes",
    "start": "1601680",
    "end": "1608220"
  },
  {
    "text": "your or our life harder to find the right pieces of information really am so",
    "start": "1608220",
    "end": "1614010"
  },
  {
    "text": "but nevertheless ignore the title yeah it's for native applications and it's",
    "start": "1614010",
    "end": "1619500"
  },
  {
    "text": "not a protocol it's what they call a best current practice yeah best current records are basically documents that",
    "start": "1619500",
    "end": "1626640"
  },
  {
    "text": "they put on top of the protocol so what they do is they tell you what up there",
    "start": "1626640",
    "end": "1631830"
  },
  {
    "text": "best practices for using this protocol in that specific situation ma'am so it's",
    "start": "1631830",
    "end": "1639630"
  },
  {
    "text": "it's actually a really good read because it's very practical it you know like it it specifically talks about features of",
    "start": "1639630",
    "end": "1647610"
  },
  {
    "text": "iOS and Android and Windows and Mac OS and so on and how you would do these things so it's very very good to read",
    "start": "1647610",
    "end": "1653600"
  },
  {
    "text": "you know one one anti-pattern tape they point out is native login dialogues yeah",
    "start": "1653600",
    "end": "1661110"
  },
  {
    "start": "1654000",
    "end": "1654000"
  },
  {
    "text": "so you know for many many years native developers you know the intuitive thing to do for authentication is they they",
    "start": "1661110",
    "end": "1667440"
  },
  {
    "text": "write a dialogue and drop over the username field and did a password field right and do their own thing so oh of",
    "start": "1667440",
    "end": "1675090"
  },
  {
    "text": "has a flow for that it's called the resource owner password flow and the idea is that you collect the name and",
    "start": "1675090",
    "end": "1680280"
  },
  {
    "text": "the password in the native dialog you sent that to the token service you get",
    "start": "1680280",
    "end": "1685500"
  },
  {
    "text": "back a token then you store that token hopefully securely and then you start using this token and throw away the idea",
    "start": "1685500",
    "end": "1691920"
  },
  {
    "text": "to your original password ma'am in theory that's good but I always get suspicious when I see these native login",
    "start": "1691920",
    "end": "1699690"
  },
  {
    "text": "dialogues because now you have to rely on the fact that this developer did the right thing did he really throw away my",
    "start": "1699690",
    "end": "1705420"
  },
  {
    "text": "password did he really store that token securely right and one good exercise if",
    "start": "1705420",
    "end": "1711660"
  },
  {
    "text": "you want to do that is you know when you back up your iPhone you do two backups one is the application backup and one is",
    "start": "1711660",
    "end": "1717810"
  },
  {
    "text": "the keychain backup so in theory in the application backup there should be only the apps that you installed and in the",
    "start": "1717810",
    "end": "1723630"
  },
  {
    "text": "keychain backup should be all sensitive data like your tokens and your passwords and so on so what I did is I I did this",
    "start": "1723630",
    "end": "1730140"
  },
  {
    "text": "backup and only install the application backup or restore the applications I got my new",
    "start": "1730140",
    "end": "1736750"
  },
  {
    "text": "phone and inferior I should be locked out from all apps on the phone right",
    "start": "1736750",
    "end": "1742590"
  },
  {
    "text": "what do you think happened I was locked into many many apps right and what what",
    "start": "1742590",
    "end": "1749350"
  },
  {
    "text": "does that mean that the developer just stored the token or the pairs were just in the application directory they didn't",
    "start": "1749350",
    "end": "1754480"
  },
  {
    "text": "even use the secure data storage features of the platform they're on ok and that's just a by-product of you know",
    "start": "1754480",
    "end": "1761410"
  },
  {
    "text": "giving all responsibility to the client developer so you shouldn't do that if",
    "start": "1761410",
    "end": "1768669"
  },
  {
    "text": "you can and you know that's always a bit tricky to explain to your non-technical",
    "start": "1768669",
    "end": "1773970"
  },
  {
    "text": "manager but what you what you what you really should do is you should use a",
    "start": "1773970",
    "end": "1779020"
  },
  {
    "start": "1776000",
    "end": "1776000"
  },
  {
    "text": "server-side rendered login page right instead of building your own native one you open the browser you go to your",
    "start": "1779020",
    "end": "1786520"
  },
  {
    "text": "login page on your token server everything exists already right your your your name and password and your",
    "start": "1786520",
    "end": "1793179"
  },
  {
    "text": "external logins and your logging and your auditing and all the things that you build already for your login page and you just reuse that from the native",
    "start": "1793179",
    "end": "1800830"
  },
  {
    "text": "client ok so let me show you a quick demo of that as well how that how that looks like so here is an iOS device",
    "start": "1800830",
    "end": "1811900"
  },
  {
    "text": "right so when I click login it uses a special API from Apple to open an",
    "start": "1811900",
    "end": "1819570"
  },
  {
    "text": "instance of the system browser inside your application and why do you want to have the system browser well because you",
    "start": "1819570",
    "end": "1825850"
  },
  {
    "text": "want to reuse the cookie container on your mobile phone right so let's say for example this application allows Google",
    "start": "1825850",
    "end": "1832450"
  },
  {
    "text": "logins and you're already locked on to Google on your phone you can get single sign-on now in your native application",
    "start": "1832450",
    "end": "1837880"
  },
  {
    "text": "yeah and I think that's a big usability improvement so when I click the login button and I use this special Apple API",
    "start": "1837880",
    "end": "1845710"
  },
  {
    "text": "then Apple will insert a little screen here saying hey be careful you are now authenticating regardless of what the",
    "start": "1845710",
    "end": "1853150"
  },
  {
    "text": "app just told you you're about to do you are authenticated because that's the only reason why you would invoke this API ok so they show you the name of the",
    "start": "1853150",
    "end": "1861070"
  },
  {
    "text": "app they show you the name of the server you're gonna authenticate to and there's a chance for you to say like huh that's",
    "start": "1861070",
    "end": "1866470"
  },
  {
    "text": "weird angry birds need to authenticate me yeah so and then it goes to to a you know to",
    "start": "1866470",
    "end": "1874629"
  },
  {
    "text": "a login page that you can style in any way you want in this case it's just our standard login page in identity server",
    "start": "1874629",
    "end": "1879999"
  },
  {
    "text": "and you can see this page allows Google login stuff fingers crossed",
    "start": "1879999",
    "end": "1885369"
  },
  {
    "text": "have you heard that Google will shut down their login end point actually yesterday was the planned date where",
    "start": "1885369",
    "end": "1891700"
  },
  {
    "text": "they shut down the old login end point so when you're using Microsoft's you know Google library there's a chance",
    "start": "1891700",
    "end": "1897460"
  },
  {
    "text": "it'll stop working in the next couple of days yeah I'm still using that so fingers crossed",
    "start": "1897460",
    "end": "1903299"
  },
  {
    "text": "yeah I'm still locked in okay so I got single sign-on with Google now do the",
    "start": "1903480",
    "end": "1910179"
  },
  {
    "text": "consent screen that is the application showing I say yes I'm okay with Deb and now we transport the tokens back into",
    "start": "1910179",
    "end": "1916659"
  },
  {
    "text": "the native device the access token refresh token then I would store the refresh token on the secure data storage",
    "start": "1916659",
    "end": "1924690"
  },
  {
    "text": "platform like keychain for example and from that point on I can do my token management automatically and renew my my",
    "start": "1924690",
    "end": "1931539"
  },
  {
    "text": "lifetime right so when I call an API that's working I can refresh the token",
    "start": "1931539",
    "end": "1936549"
  },
  {
    "text": "that's working as well and I guess when I go to the token service come on and",
    "start": "1936549",
    "end": "1944850"
  },
  {
    "text": "revoke the token like click here log in with the same account here's my",
    "start": "1944850",
    "end": "1951039"
  },
  {
    "text": "application I'm gonna revoke to token so next time this application tries to refresh it it",
    "start": "1951039",
    "end": "1956379"
  },
  {
    "text": "will say okay so how does that work Oh",
    "start": "1956379",
    "end": "1962009"
  },
  {
    "text": "before I'll show you how it works let me show you another example of that for example github desktop yeah the",
    "start": "1962009",
    "end": "1968980"
  },
  {
    "text": "github desktop is a desktop application it's written in electron which you know",
    "start": "1968980",
    "end": "1974440"
  },
  {
    "text": "is native enough for me so the idea is when you want to connect Kitab desktop",
    "start": "1974440",
    "end": "1980019"
  },
  {
    "text": "to your death to your github account the chances are quite high that you have an existing logon session already in your",
    "start": "1980019",
    "end": "1985239"
  },
  {
    "text": "browser with github so you can say sign in using the browser it goes to get up",
    "start": "1985239",
    "end": "1990850"
  },
  {
    "text": "it comes back to you and I'm locked in okay which i think is a nice user",
    "start": "1990850",
    "end": "1997179"
  },
  {
    "text": "experience and much much nicer than now having to type in my github password into an dialogue then to two-factor",
    "start": "1997179",
    "end": "2003000"
  },
  {
    "text": "authentication waiting for the SMS to come in right and answer one for sauce ma'am so native dialogues they are a",
    "start": "2003000",
    "end": "2010770"
  },
  {
    "text": "thing of the 90s okay so the way this",
    "start": "2010770",
    "end": "2018750"
  },
  {
    "text": "works is well today they're using code flow yeah response type is code the only thing that's different here if you see that",
    "start": "2018750",
    "end": "2025010"
  },
  {
    "text": "typically what you do is you you register a so-called customer URI scheme on on the on the operating system that",
    "start": "2025010",
    "end": "2031830"
  },
  {
    "text": "the operating system knows yeah when the browser is is calling this last URL it",
    "start": "2031830",
    "end": "2037020"
  },
  {
    "text": "will transfer control back to the client application okay and then then you get the code and then you can make make the",
    "start": "2037020",
    "end": "2044429"
  },
  {
    "text": "call over the back channel and get your your tokens right so now how do they protect",
    "start": "2044429",
    "end": "2052290"
  },
  {
    "text": "against code substitution well there's a subtle thing here happening you see here",
    "start": "2052290",
    "end": "2057470"
  },
  {
    "text": "there's this thing called the code challenge so you see the code challenge so the thing you do is you create",
    "start": "2057470",
    "end": "2063658"
  },
  {
    "text": "something called a code verifier which is just a random number then you hash that random number and you send that",
    "start": "2063659",
    "end": "2069210"
  },
  {
    "text": "hash number as the code challenge to your server so what the server now will do is it will associate the code",
    "start": "2069210",
    "end": "2075210"
  },
  {
    "text": "challenge with the code okay and under on the back-channel communication you are sending the clear text random number",
    "start": "2075210",
    "end": "2081960"
  },
  {
    "text": "which is called the code verifier and then on the server side the server will take the code verifier hash it and",
    "start": "2081960",
    "end": "2087419"
  },
  {
    "text": "compare it with the hashed berry fire you send in on the front channel and only if they both match you know that",
    "start": "2087419",
    "end": "2093118"
  },
  {
    "text": "you're actually handing in the right code okay that's another way to mitigate the code substitution attack and this is",
    "start": "2093119",
    "end": "2101849"
  },
  {
    "text": "called pixie proof key for code exchange and it it serves this it solves the the",
    "start": "2101849",
    "end": "2108690"
  },
  {
    "start": "2102000",
    "end": "2102000"
  },
  {
    "text": "exact same problem as a hybrid flow but it's much easier to implement because",
    "start": "2108690",
    "end": "2113940"
  },
  {
    "text": "the client doesn't need to do anything beyond creating a random number hashing it and sending it to the server and the",
    "start": "2113940",
    "end": "2119910"
  },
  {
    "text": "server is doing all of the validation okay so in the long term my prediction will be that most people will just",
    "start": "2119910",
    "end": "2126119"
  },
  {
    "text": "implement pixie because it's so easy to implement and that will solve the code",
    "start": "2126119",
    "end": "2131820"
  },
  {
    "text": "substitution problem for all for all client that okay good again after that you need to",
    "start": "2131820",
    "end": "2141390"
  },
  {
    "text": "need to do token management and you know you store it somewhere some applications",
    "start": "2141390",
    "end": "2149670"
  },
  {
    "text": "you know like when using the keychain you can put additional biometrics on top of it so my banking at for example it",
    "start": "2149670",
    "end": "2155609"
  },
  {
    "text": "stores the Refresh token in the keychain and then I have to use face ID or touch ID to unlock that item again and then",
    "start": "2155609",
    "end": "2162660"
  },
  {
    "text": "they can get the Refresh token they can get an access token from there and so on okay client libraries that implement all",
    "start": "2162660",
    "end": "2172200"
  },
  {
    "start": "2170000",
    "end": "2170000"
  },
  {
    "text": "of this for you well that there are two reference implementations for that one is for iOS you written objective-c one",
    "start": "2172200",
    "end": "2179009"
  },
  {
    "text": "is for Android written in Java and that's a library written by me it's in in c-sharp it's using you know it's a",
    "start": "2179009",
    "end": "2186180"
  },
  {
    "text": "so-called dotnet standard library so it runs on on multiple platforms as well and you know maybe that's more up your",
    "start": "2186180",
    "end": "2192150"
  },
  {
    "text": "street then using objective-c for example okay the big elephant in the room is",
    "start": "2192150",
    "end": "2199940"
  },
  {
    "start": "2196000",
    "end": "2196000"
  },
  {
    "text": "browser-based applications and they are traditionally the hardest to secure type",
    "start": "2199940",
    "end": "2207479"
  },
  {
    "text": "of application because they run in a really hostile environment yeah it's called a browser and the browser think",
    "start": "2207479",
    "end": "2214529"
  },
  {
    "text": "of the browser as a shared execution runtime where multiple applications run at the same time in multiple tabs and",
    "start": "2214529",
    "end": "2221009"
  },
  {
    "text": "one of them might be malicious the other one might be trusted and you know like but they're sharing basically the same browser and you know that there are",
    "start": "2221009",
    "end": "2227279"
  },
  {
    "text": "attacks to browser-based applications which only exists because of that's that",
    "start": "2227279",
    "end": "2232289"
  },
  {
    "text": "fact and they start with the word cross right and that basically means you are making calls across a trust boundary",
    "start": "2232289",
    "end": "2240319"
  },
  {
    "text": "less trusted application might inject code into your more trusted application",
    "start": "2240319",
    "end": "2245729"
  },
  {
    "text": "yeah for example that's that's called cross-site scripting right or you might leak data across boundaries for example",
    "start": "2245729",
    "end": "2254219"
  },
  {
    "text": "cookies or basic authentication headers or windows authentication headers even",
    "start": "2254219",
    "end": "2259829"
  },
  {
    "text": "and that's called cross-site request forgery now these are browser specific problems that are hard to solve okay",
    "start": "2259829",
    "end": "2267950"
  },
  {
    "text": "actually I wrote a blog post about this recently and I went back to to the old Wharf archives here to see what was the",
    "start": "2267950",
    "end": "2277010"
  },
  {
    "text": "motivation and thinking when they started working on these specs here and there was a long discussion there was a",
    "start": "2277010",
    "end": "2284280"
  },
  {
    "text": "long discussion going on and the conclusion was this yeah it's very hard",
    "start": "2284280",
    "end": "2294030"
  },
  {
    "text": "to secure them so we've been talking to the IETF for a long time and saying like",
    "start": "2294030",
    "end": "2300480"
  },
  {
    "text": "wouldn't it be great if there would be a comparable spec out there or at a best current practice you know just like the",
    "start": "2300480",
    "end": "2307079"
  },
  {
    "text": "or for native apps like something like or for browser-based apps when you bring all the smart people together and they",
    "start": "2307079",
    "end": "2313079"
  },
  {
    "text": "want and for all right a guidance document how you know what are your options for sparse what are the",
    "start": "2313079",
    "end": "2320310"
  },
  {
    "text": "trade-offs what's the threat model what do you have to think about okay and they were kind of avoiding that discussion",
    "start": "2320310",
    "end": "2328440"
  },
  {
    "text": "for a long time because it opens up a whole can of worms if you do that as it turns out now so you know just to give",
    "start": "2328440",
    "end": "2336150"
  },
  {
    "start": "2335000",
    "end": "2335000"
  },
  {
    "text": "you some history to understand why where we are today you know traditionally when",
    "start": "2336150",
    "end": "2341490"
  },
  {
    "text": "we started building space or browser-based applications right they were actually just old-school web",
    "start": "2341490",
    "end": "2348420"
  },
  {
    "text": "applications with extra chava script right we sprinkle some H X here and",
    "start": "2348420",
    "end": "2353819"
  },
  {
    "text": "there to make them more responsive and more fun to use right but people were still using cookies to secure these API",
    "start": "2353819",
    "end": "2361109"
  },
  {
    "text": "or HX calls now cookies have one fundamental problem it's called cross-site request forgery right that",
    "start": "2361109",
    "end": "2367619"
  },
  {
    "text": "basically a browser can leak cookies across domains meaning you're",
    "start": "2367619",
    "end": "2372780"
  },
  {
    "text": "going first to your good app login get a cookie you get to your bad app and this",
    "start": "2372780",
    "end": "2378119"
  },
  {
    "text": "bad app makes a call to the good app and the browser will send the cookie along across domains and then the bad app can",
    "start": "2378119",
    "end": "2383430"
  },
  {
    "text": "impersonate a current user yeah obviously that there were mitigation techniques for that they are well",
    "start": "2383430",
    "end": "2389010"
  },
  {
    "text": "understood they are called ante for tree protection yeah if you an MVC developer you all know",
    "start": "2389010",
    "end": "2394170"
  },
  {
    "text": "them right validate and D forgery token and and D forgery token hidden field and so on but there was no",
    "start": "2394170",
    "end": "2402299"
  },
  {
    "text": "common guidance for API so I did many code reviews in the past where people",
    "start": "2402299",
    "end": "2407859"
  },
  {
    "text": "call API is from the browser used the cookie to secure them but they didn't protect the cookies against cross-site",
    "start": "2407859",
    "end": "2413710"
  },
  {
    "text": "request forgery well because mostly to be honest and that's a bit said is because Microsoft never put these things into the standard",
    "start": "2413710",
    "end": "2420099"
  },
  {
    "text": "templates right everybody knows about the MVC way of doing it not that many people know what they do what they have",
    "start": "2420099",
    "end": "2426400"
  },
  {
    "text": "to do for API so the IETF in 2011 or whenever 2010 Phila and maybe started",
    "start": "2426400",
    "end": "2433660"
  },
  {
    "text": "say okay can't we use OAuth to get rid of cookies right so they started working on Wharf to buy the time and there was",
    "start": "2433660",
    "end": "2441369"
  },
  {
    "text": "this new flow they wanted to invent called the implicit flow that makes it easier to write spars and as you can see",
    "start": "2441369",
    "end": "2447940"
  },
  {
    "text": "in 2011 it wasn't very clear to everyone why you would ever write a JavaScript",
    "start": "2447940",
    "end": "2452980"
  },
  {
    "text": "based application okay that's a nice screen shot from the IETF email archive",
    "start": "2452980",
    "end": "2459519"
  },
  {
    "text": "Sam he did Google for it it didn't help so the one limitation we had in 2011 was",
    "start": "2459519",
    "end": "2467079"
  },
  {
    "text": "there was no cause he had no cross domain Ajax requests there possible so you know you might say like why can't we",
    "start": "2467079",
    "end": "2473859"
  },
  {
    "text": "just use code flow just as we use for all the other types of clients here well because code flow requires the",
    "start": "2473859",
    "end": "2479920"
  },
  {
    "text": "back-channel communication which means cross domain Ajax calls this didn't work",
    "start": "2479920",
    "end": "2484960"
  },
  {
    "text": "right course didn't exist by the time so they came up with a very very simplistic approach where basically you know the",
    "start": "2484960",
    "end": "2491589"
  },
  {
    "text": "the spa makes a request to the server and the tokens come back directly on the",
    "start": "2491589",
    "end": "2497170"
  },
  {
    "text": "URL ma'am that is still today the",
    "start": "2497170",
    "end": "2502450"
  },
  {
    "text": "official guidance how you should write sparse and if you're doing that don't feel bad about it it's it's it's not",
    "start": "2502450",
    "end": "2508750"
  },
  {
    "text": "that you're doing something wrong it's just that now it's 2019 right and we",
    "start": "2508750",
    "end": "2514240"
  },
  {
    "text": "have solved the problem of cross domain HX and we have caused so maybe we",
    "start": "2514240",
    "end": "2519700"
  },
  {
    "text": "shouldn't do this anymore because now we can make back-channel calls from a from from from JavaScript and we don't have",
    "start": "2519700",
    "end": "2525190"
  },
  {
    "text": "to expose our tokens anymore on URLs yeah what's bad about URLs well they can",
    "start": "2525190",
    "end": "2532180"
  },
  {
    "text": "leak that's one problem you specifically have to use the hash fragment here otherwise browsers leak",
    "start": "2532180",
    "end": "2538880"
  },
  {
    "text": "them for example on refer ahead us and other places they end up in your browser history for example again you can write",
    "start": "2538880",
    "end": "2545660"
  },
  {
    "text": "some JavaScript code to to remove them from there but you have to do a couple of things here to make this as good as",
    "start": "2545660",
    "end": "2551839"
  },
  {
    "text": "possible and still there are implementation flaws in many implementations and still we are relying",
    "start": "2551839",
    "end": "2557119"
  },
  {
    "text": "on all the browser's doing the right thing with regards to the hash fragment for example so if they ever change that",
    "start": "2557119",
    "end": "2562160"
  },
  {
    "text": "behavior we have a big problem ma'am so in other words long story short the ietf announced so to speak that",
    "start": "2562160",
    "end": "2570500"
  },
  {
    "start": "2567000",
    "end": "2567000"
  },
  {
    "text": "they're going to deprecated the implicit flow in the sense of it's not what you would use anymore today okay and to in",
    "start": "2570500",
    "end": "2578029"
  },
  {
    "text": "my opinion that that's a good thing because you have one flow less to learn",
    "start": "2578029",
    "end": "2583519"
  },
  {
    "text": "now because what they want to do is there they wanted to pick a code flow with pixie okay and it turns out that if",
    "start": "2583519",
    "end": "2592789"
  },
  {
    "text": "you look at that server side that app scan could do code for which pixie native apps can do cultural pixie",
    "start": "2592789",
    "end": "2599089"
  },
  {
    "text": "JavaScript apps can do quota with pixie so basically all you have to learn one flow in your company for all of your",
    "start": "2599089",
    "end": "2604640"
  },
  {
    "text": "client types here which is actually really good because that was very confusing before and that's the current",
    "start": "2604640",
    "end": "2612680"
  },
  {
    "text": "you know guidance so to speak as I said if you have an current application using",
    "start": "2612680",
    "end": "2617990"
  },
  {
    "text": "implicit flow you know it's not that you are vulnerable to something new it's",
    "start": "2617990",
    "end": "2623089"
  },
  {
    "text": "just that you know we are we now have better things what better ways to do the",
    "start": "2623089",
    "end": "2628640"
  },
  {
    "text": "same thing to be honest with you the whole talk to a discussion of implicit",
    "start": "2628640",
    "end": "2635569"
  },
  {
    "start": "2631000",
    "end": "2631000"
  },
  {
    "text": "versus code yes that was interesting and code is definitely better than implicit but there's another thing that is",
    "start": "2635569",
    "end": "2641299"
  },
  {
    "text": "specific to browser-based applications which is not solved by just changing the flow and that's token management or or",
    "start": "2641299",
    "end": "2647569"
  },
  {
    "text": "more specifically token storage ma'am so in in JavaScript there is no secure data",
    "start": "2647569",
    "end": "2653119"
  },
  {
    "text": "storage regardless what you use sessions store local store index DB whatever they",
    "start": "2653119",
    "end": "2660380"
  },
  {
    "text": "are all accessible by JavaScript so if you have a cross-site scripting attack in your application anybody can just",
    "start": "2660380",
    "end": "2666140"
  },
  {
    "text": "download the call turns of your storage and that would mean tokens right and then they could use these tokens to call your api's",
    "start": "2666140",
    "end": "2672750"
  },
  {
    "text": "directly the other thing is yeah when people say like yeah let's do code flow",
    "start": "2672750",
    "end": "2678599"
  },
  {
    "text": "that also implies you could do Refresh tokens right refresh tokens are long-lived often yeah so that makes it",
    "start": "2678599",
    "end": "2686130"
  },
  {
    "text": "even worth because now you have Refresh tokens in the browser that are potentially long-lived that don't have a",
    "start": "2686130",
    "end": "2692310"
  },
  {
    "text": "client secret and if they get stolen an attacker can potentially get new tokens for an extended lifetime yeah so the",
    "start": "2692310",
    "end": "2701550"
  },
  {
    "text": "thing you really have to protect against in my opinion is it's not oh of and these things it's it's cross-site",
    "start": "2701550",
    "end": "2707400"
  },
  {
    "text": "scripting okay and it turns out that it's not easy first of all you should be",
    "start": "2707400",
    "end": "2714900"
  },
  {
    "text": "on the latest versions of the of the front-end frameworks right like that the latest version of angular and the latest",
    "start": "2714900",
    "end": "2720359"
  },
  {
    "text": "versions of react they are pretty good to give you good cross-site scripting protection out of the box at least for",
    "start": "2720359",
    "end": "2728970"
  },
  {
    "text": "the code that is produced by the framework vendors now you download some",
    "start": "2728970",
    "end": "2733980"
  },
  {
    "text": "shady extension from NPM you never know what they're doing right and both react",
    "start": "2733980",
    "end": "2739109"
  },
  {
    "text": "and both angular have escape hatches yes I saw something like an API called unsafe write to DOM yeah and what is",
    "start": "2739109",
    "end": "2746310"
  },
  {
    "text": "what does unsafe mean well it's unsafe yeah and some some of them you know to make their life easier they they use",
    "start": "2746310",
    "end": "2752400"
  },
  {
    "text": "these low-level api s and obviously when they get injections in there you suddenly get non sanitized output in the",
    "start": "2752400",
    "end": "2759030"
  },
  {
    "text": "Dom which can lead to cross-site scripting right so be careful with that the other thing is content security",
    "start": "2759030",
    "end": "2764550"
  },
  {
    "text": "policy so how many people in the room write JavaScript applications how many",
    "start": "2764550",
    "end": "2770070"
  },
  {
    "text": "of you use content security policy yes that is depressing yeah it's you know",
    "start": "2770070",
    "end": "2778050"
  },
  {
    "text": "CSP was specifically designed to mitigate cross-site scripting attacks okay but not many people are using it",
    "start": "2778050",
    "end": "2787140"
  },
  {
    "text": "and I'm not saying you are lazy I'm the reason is it's hard it's hard to use",
    "start": "2787140",
    "end": "2792240"
  },
  {
    "text": "yeah it's very very hard to take an existing application and add CSP to it",
    "start": "2792240",
    "end": "2799170"
  },
  {
    "text": "because it's so restrictive that it most probably will break your application yeah it's it's much much easier that",
    "start": "2799170",
    "end": "2806160"
  },
  {
    "text": "when you're writing a new application that the first thing you do is you create a CSP policy and then you write",
    "start": "2806160",
    "end": "2811259"
  },
  {
    "text": "your code to be CSP compatible and not make your CSP compatible with your code right that's much better",
    "start": "2811259",
    "end": "2819709"
  },
  {
    "text": "III really fought these piece working really well and and then I spoke to a",
    "start": "2819709",
    "end": "2824759"
  },
  {
    "text": "guy from the OS team recently and he pointed me to this video here on YouTube and it's from Google researchers and",
    "start": "2824759",
    "end": "2831450"
  },
  {
    "text": "what they did is they spied at the internet right they have the technology to do that I think and they found only",
    "start": "2831450",
    "end": "2837329"
  },
  {
    "text": "one point six million CSPs on the internet from all the websites they inspected which is not a lot right and",
    "start": "2837329",
    "end": "2844170"
  },
  {
    "text": "to make it even worse because they were all so loosely defined they were allowed",
    "start": "2844170",
    "end": "2849359"
  },
  {
    "text": "they were able to break more than 90% of them okay and the golden rule is when",
    "start": "2849359",
    "end": "2855779"
  },
  {
    "text": "you watch the video the longer you sit you'll see is peak ads the more probably it's broken okay it should be a very concise small",
    "start": "2855779",
    "end": "2863279"
  },
  {
    "text": "one people for example vitalist see the ends in their CSP right that don't do",
    "start": "2863279",
    "end": "2869339"
  },
  {
    "text": "that right I mean on CD ends there was all kinds of stuff to do you trust every single thing on on a CDN they found out",
    "start": "2869339",
    "end": "2875369"
  },
  {
    "text": "if there's a single JSONP endpoint on the CDN you can bypass the whitelist because you can abuse that whitelist an",
    "start": "2875369",
    "end": "2882269"
  },
  {
    "text": "endpoint to load other JavaScript form you know other locations for example so watch this video it's very enlightening",
    "start": "2882269",
    "end": "2889170"
  },
  {
    "text": "especially because they give you good tips how to lock down your CSP as well okay what the link is dead then search",
    "start": "2889170",
    "end": "2902699"
  },
  {
    "text": "on youtube for make see is peak rate again make CSP great again yes these are",
    "start": "2902699",
    "end": "2910589"
  },
  {
    "text": "the talk titles we have to you [Laughter]",
    "start": "2910589",
    "end": "2917589"
  },
  {
    "text": "the other thing you might have heard of its called token binding token binding is also a very promising technology to",
    "start": "2917589",
    "end": "2925880"
  },
  {
    "text": "basically bind your tokens to the browser meaning if somebody can steal the token from the browser they can't",
    "start": "2925880",
    "end": "2931250"
  },
  {
    "text": "use it because you need something in the browser which is not accessible by JavaScript and if you take you remove",
    "start": "2931250",
    "end": "2936440"
  },
  {
    "text": "the token this thing is missing it doesn't work they went a couple of years",
    "start": "2936440",
    "end": "2941599"
  },
  {
    "text": "to to standardize this thing it's now RFC's it's all good and in the last",
    "start": "2941599",
    "end": "2947000"
  },
  {
    "text": "moment Google said we're not implementing it we don't think this",
    "start": "2947000",
    "end": "2953030"
  },
  {
    "text": "feature is useful so they actually had it in Chrome and they remove the code and that's the thread on their issue",
    "start": "2953030",
    "end": "2958820"
  },
  {
    "text": "tracker that talks about this over 20 or 30 pages all kinds of people had tried",
    "start": "2958820",
    "end": "2964280"
  },
  {
    "text": "away in it's gone from chrome and to be honest if it's not in chrome it's pretty useless right I mean there's one big",
    "start": "2964280",
    "end": "2970190"
  },
  {
    "text": "crowds are missing that feature then you can't rely on idiom so we updated our",
    "start": "2970190",
    "end": "2979130"
  },
  {
    "start": "2974000",
    "end": "2974000"
  },
  {
    "text": "client library or YDC client chairs through the port code flow now and to be honest if you're using that client",
    "start": "2979130",
    "end": "2984950"
  },
  {
    "text": "library all you need to do to change from the old implicit flow to the new code flow is changed its response type",
    "start": "2984950",
    "end": "2991250"
  },
  {
    "text": "property to code that's it okay and then you're getting all the new code flow stuff for free which doesn't which which",
    "start": "2991250",
    "end": "2997640"
  },
  {
    "text": "doesn't save you from saving yourself against M JavaScript sorry a cross-site scripting right so that's that still an",
    "start": "2997640",
    "end": "3006119"
  },
  {
    "text": "unsolved problem in the sense of that it",
    "start": "3006119",
    "end": "3011140"
  },
  {
    "text": "you know you can do it 100% secure I can show you the sparse sample that we use",
    "start": "3011140",
    "end": "3020290"
  },
  {
    "text": "typically you see basically the idea is you have a you have an HTML file you're loading this ortc client chairs you're",
    "start": "3020290",
    "end": "3026500"
  },
  {
    "text": "setting all your parameters like the authority and the client ID and the response type is code and your scopes",
    "start": "3026500",
    "end": "3031630"
  },
  {
    "text": "and all these things and then to basically start the token request you",
    "start": "3031630",
    "end": "3038380"
  },
  {
    "text": "call sign in redirect and to log out you call sign I'll redirect so with a good JavaScript based client library you can",
    "start": "3038380",
    "end": "3044830"
  },
  {
    "text": "remove all of that complexity you know from from the business code so when I run dad you won't be very",
    "start": "3044830",
    "end": "3057130"
  },
  {
    "text": "exciting but you know I can press a login button so I can log in right I",
    "start": "3057130",
    "end": "3064680"
  },
  {
    "text": "login you see me using no we you see",
    "start": "3064680",
    "end": "3070810"
  },
  {
    "text": "we're using code flow and pixie so it supports pixie as well and we are back in the client here's your user object",
    "start": "3070810",
    "end": "3077170"
  },
  {
    "text": "yes here are your tokens and so on and basically what is library will also do is in the in the background refresh the",
    "start": "3077170",
    "end": "3083830"
  },
  {
    "text": "token not using a refresh token but using something called silent renewal which basically finds the token through",
    "start": "3083830",
    "end": "3089530"
  },
  {
    "text": "the session lifetime which i think is a bit more secure and and then having refresh tokens unbound from from the",
    "start": "3089530",
    "end": "3095830"
  },
  {
    "text": "session and then I can call api's I guess yeah and look out again you know",
    "start": "3095830",
    "end": "3102430"
  },
  {
    "text": "what you would expect so that's you know not nothing really has changed for your",
    "start": "3102430",
    "end": "3107710"
  },
  {
    "text": "application code but if you want to follow the latest guidance then then switch to code flow mam",
    "start": "3107710",
    "end": "3114040"
  },
  {
    "start": "3113000",
    "end": "3113000"
  },
  {
    "text": "another thing has come up recently that yeah I want to make you aware of it's called same side cookies so you maybe",
    "start": "3114040",
    "end": "3120880"
  },
  {
    "text": "remember that when I started with the history thing here I said the starting point was that many people use cookies",
    "start": "3120880",
    "end": "3127120"
  },
  {
    "text": "to secure the api's but browsers send cookies cross-domain and that leads to cross-site request forgery and just",
    "start": "3127120",
    "end": "3135520"
  },
  {
    "text": "recently I did the w3c added this to the cookies spec it's called same side",
    "start": "3135520",
    "end": "3141010"
  },
  {
    "text": "cookies and when you're when you're issuing a cookie you can append the same side flag and telling the browser how",
    "start": "3141010",
    "end": "3146860"
  },
  {
    "text": "it's supposed to send the cookie and what it essentially means is the browser will only send the cookie now if it's",
    "start": "3146860",
    "end": "3153070"
  },
  {
    "text": "been originated from a page that belongs to the same origin where it came from in the first place effectively mitigating cross-site",
    "start": "3153070",
    "end": "3159160"
  },
  {
    "text": "request forgery now are the only you",
    "start": "3159160",
    "end": "3164320"
  },
  {
    "text": "might think like why didn't they do that five years ago or 10 years even right wouldn't have been the most obvious",
    "start": "3164320",
    "end": "3170590"
  },
  {
    "text": "thing to implement and I guess I don't know why they didn't do it maybe nobody fought about it there so in theory if",
    "start": "3170590",
    "end": "3178480"
  },
  {
    "text": "same side cookies would be a reality our cookies would be much more safe okay and when you when you look at can I",
    "start": "3178480",
    "end": "3185160"
  },
  {
    "text": "use all of the recent modern browsers support it the only issue I have a",
    "start": "3185160",
    "end": "3192180"
  },
  {
    "text": "little bit is that the very last version before the most recent one sometimes doesn't support it right so if you you",
    "start": "3192180",
    "end": "3198960"
  },
  {
    "text": "know users right they're not often not always on the latest and greatest version so for example if they are",
    "start": "3198960",
    "end": "3204660"
  },
  {
    "text": "stable iOS 11 they are vulnerable right if they are on an earlier version of Safari they're vulnerable and so on so I",
    "start": "3204660",
    "end": "3210690"
  },
  {
    "text": "think it's a little bit too early to just put all your baskets into the same side cookie all your eggs into the same",
    "start": "3210690",
    "end": "3216390"
  },
  {
    "text": "side cookie basket yeah but I think if this is if just keeps on going this gives us another really nice you",
    "start": "3216390",
    "end": "3222690"
  },
  {
    "text": "know defense-in-depth mechanism so I",
    "start": "3222690",
    "end": "3227720"
  },
  {
    "text": "have a couple of customers yeah that said like yeah I understand you have to",
    "start": "3227720",
    "end": "3233549"
  },
  {
    "start": "3229000",
    "end": "3229000"
  },
  {
    "text": "throw your mungus amount of JavaScript at my front end to make it secure right you have to write it you know use a",
    "start": "3233549",
    "end": "3239099"
  },
  {
    "text": "client library and do the token management and protect against cross-site scripting and blah blah blah",
    "start": "3239099",
    "end": "3244200"
  },
  {
    "text": "so if they come up they come up with another that's not by the way not my my name here the PFF architecture it stands",
    "start": "3244200",
    "end": "3252029"
  },
  {
    "text": "for back-end for front-end and and the idea is that basically what you're doing",
    "start": "3252029",
    "end": "3257099"
  },
  {
    "text": "is you're doing all of your token business on the back end you're like with HP and core for example of openly",
    "start": "3257099",
    "end": "3262259"
  },
  {
    "text": "Connect you store the token server-side you manage the lifetime of the token on the server yeah and whenever the front",
    "start": "3262259",
    "end": "3269609"
  },
  {
    "text": "end needs to call an API it calls that server in the same side and you're either using same side cookies or maybe",
    "start": "3269609",
    "end": "3275970"
  },
  {
    "text": "the same side cookies plus plus MD forgery you how to make them more secure and then you know the connection between",
    "start": "3275970",
    "end": "3282630"
  },
  {
    "text": "the front end and the back end is secured by cookies and whenever you want to call you know like a cross cross side",
    "start": "3282630",
    "end": "3288930"
  },
  {
    "text": "or you know like cross origin api's you proxy them across your back-end",
    "start": "3288930",
    "end": "3293970"
  },
  {
    "text": "the back end attaches the access token to it and it becomes a pure server-to-server communication yeah I",
    "start": "3293970",
    "end": "3301019"
  },
  {
    "text": "mean that is an alternative don't don't think that this saves you from getting",
    "start": "3301019",
    "end": "3306930"
  },
  {
    "text": "rid of your cross-site scripting right I mean it's still the same problem if somebody can inject script in your",
    "start": "3306930",
    "end": "3313799"
  },
  {
    "text": "front-end it can make them call the back and the back end will happily attach to token to it and then call other services",
    "start": "3313799",
    "end": "3319680"
  },
  {
    "text": "right I mean it's not not a solution for cross-site scripting but it's a different approach to building these",
    "start": "3319680",
    "end": "3325440"
  },
  {
    "text": "types of applications if you think the other one is too much black magic okay",
    "start": "3325440",
    "end": "3331920"
  },
  {
    "text": "I've written a blog post about that as well I can quickly show you show you the",
    "start": "3331920",
    "end": "3339990"
  },
  {
    "text": "sample because we have five more minutes so that's this game",
    "start": "3339990",
    "end": "3345690"
  },
  {
    "text": "so you see basically the host here the",
    "start": "3345690",
    "end": "3350700"
  },
  {
    "text": "host basically does all of the open early connect and ofbusiness on the server side just like I showed you the",
    "start": "3350700",
    "end": "3356460"
  },
  {
    "text": "third the very first a student ko application but then it renders out a spa okay and then you can implement your",
    "start": "3356460",
    "end": "3365730"
  },
  {
    "text": "own API is here for example if you want to have some API right that are that that that are working for your for your",
    "start": "3365730",
    "end": "3373020"
  },
  {
    "text": "spa for example you can implement them here that's why it's called back-end for front-end right and they are really best",
    "start": "3373020",
    "end": "3378869"
  },
  {
    "text": "friends now so I login okay",
    "start": "3378869",
    "end": "3386359"
  },
  {
    "text": "[Music] let's see let's find it again let's try",
    "start": "3392530",
    "end": "3412549"
  },
  {
    "text": "it again okay yeah so now we come back",
    "start": "3412549",
    "end": "3423020"
  },
  {
    "text": "we render the spa out just bar itself doesn't store any tokens it's just using a cookie the cookies HTP only so it's",
    "start": "3423020",
    "end": "3429619"
  },
  {
    "text": "protected from cross-site scripting the cookie is same site as well yeah so we can have a look at our cookies here so",
    "start": "3429619",
    "end": "3437210"
  },
  {
    "text": "here's my BFF cookie you can see it's HP only and it's using same side strict even so there were two settings in same",
    "start": "3437210",
    "end": "3444260"
  },
  {
    "text": "side legs and strict Lex allows get requests with cross domain and strict allows no cross-domain requests",
    "start": "3444260",
    "end": "3450710"
  },
  {
    "text": "whatsoever so that's working as well and now I can call my local API for example you know that just uses the server-side",
    "start": "3450710",
    "end": "3457400"
  },
  {
    "text": "identity sends me back some data and if you are you know now having to call",
    "start": "3457400",
    "end": "3463130"
  },
  {
    "text": "back-end API then there were two approaches here one is that you're building you know like a front-end API that then",
    "start": "3463130",
    "end": "3470180"
  },
  {
    "text": "calls the back-end services or your proxy maybe fruta front-end to your back-end there's a pretty handy open",
    "start": "3470180",
    "end": "3477319"
  },
  {
    "text": "source project which makes this proxying",
    "start": "3477319",
    "end": "3482740"
  },
  {
    "text": "pretty nice it's called proxy kit and wonder what it is basically it's an it's",
    "start": "3482740",
    "end": "3489650"
  },
  {
    "text": "it's in reverse proxy as middleware so if you need to ever have the need of reverse proxying calls from the front",
    "start": "3489650",
    "end": "3497240"
  },
  {
    "text": "end to the back end instead of replicating all the api's you can put in Brock's ticket here but whenever",
    "start": "3497240",
    "end": "3502309"
  },
  {
    "text": "something comes in on slash API it forwards it to the back end and you see it does that by attaching the access",
    "start": "3502309",
    "end": "3509029"
  },
  {
    "text": "token that is stored on the server side as well ma'am so when I run my API here which is the",
    "start": "3509029",
    "end": "3516170"
  },
  {
    "text": "back-end API and then I'm making an API call from the front-end you see it first",
    "start": "3516170",
    "end": "3522349"
  },
  {
    "text": "goes to my PFF write the BFF proxies it to the backend attached",
    "start": "3522349",
    "end": "3527380"
  },
  {
    "text": "touken and that's working as well okay so I'm not saying one is better than the",
    "start": "3527380",
    "end": "3534490"
  },
  {
    "text": "other both have to cross-site scripting problem yeah but they are different yeah",
    "start": "3534490",
    "end": "3540940"
  },
  {
    "text": "and some people prefer one approach over the other and some people prefer the other approach over there and all I'm giving you here are two options really",
    "start": "3540940",
    "end": "3547180"
  },
  {
    "text": "ma'am but still public enemy number one will",
    "start": "3547180",
    "end": "3553210"
  },
  {
    "text": "be cross-site scripting and that's definitely something you have to look into when you're building sparse look into CSP especially look look into CSP m",
    "start": "3553210",
    "end": "3560829"
  },
  {
    "text": "I think that that's my recommendation number one to try to make this work for you here are some more links for you that",
    "start": "3560829",
    "end": "3568210"
  },
  {
    "text": "you should that you can you know read after you know whatever you want that's",
    "start": "3568210",
    "end": "3573910"
  },
  {
    "text": "it I have a limited amount of stickers here if anybody won't stick us there are not enough for everyone and with that",
    "start": "3573910",
    "end": "3581849"
  },
  {
    "text": "thank you for your time and I hope you enjoyed the rest or you enjoy the rest of the conference",
    "start": "3581849",
    "end": "3587109"
  },
  {
    "text": "thank you",
    "start": "3587109",
    "end": "3589349"
  }
]