[
  {
    "text": "good evening I got a couple of hello",
    "start": "5670",
    "end": "10870"
  },
  {
    "text": "hello has anybody here actually played around with Android or cutland in the",
    "start": "10870",
    "end": "16240"
  },
  {
    "text": "room a couple guys great this is probably just going to be pretty basic for you but I have to tell you as",
    "start": "16240",
    "end": "22690"
  },
  {
    "text": "somebody has who has done done it quite a bit and untested differently it was",
    "start": "22690",
    "end": "29699"
  },
  {
    "text": "really interesting to discover the way that things are done so I decided I",
    "start": "29699",
    "end": "36430"
  },
  {
    "text": "wanted to share this because I didn't actually have the same kind of experiences piecing this together as",
    "start": "36430",
    "end": "43050"
  },
  {
    "text": "what is usually now available you know directly on unlike in the web site for",
    "start": "43050",
    "end": "49090"
  },
  {
    "text": "for Kotlin or for TDD in general I also",
    "start": "49090",
    "end": "54610"
  },
  {
    "text": "came from a proof-of-concept background where we didn't write tests I know that sounds terrible but we actually had people who would",
    "start": "54610",
    "end": "60879"
  },
  {
    "text": "test for us so I don't have to worry about that and and I don't know if all of you ever came from that background",
    "start": "60879",
    "end": "66430"
  },
  {
    "text": "where you start up as a consultant and you just want to get something built but",
    "start": "66430",
    "end": "72340"
  },
  {
    "text": "then I got put on a team most recently that had this approach and I thought it",
    "start": "72340",
    "end": "78070"
  },
  {
    "text": "was kind of cool and I wanted to share things that I liked about it and things that I didn't like about it so first those of you who do this all",
    "start": "78070",
    "end": "85479"
  },
  {
    "text": "the time this is probably just a little bit more of a basic refresher for me it",
    "start": "85479",
    "end": "90670"
  },
  {
    "text": "was exciting to go through the process of learning TDD what it really was so",
    "start": "90670",
    "end": "95860"
  },
  {
    "text": "this is about a little heavy on the TV a little loud on the Kotlin because luckily for us Colin makes it easy so",
    "start": "95860",
    "end": "101759"
  },
  {
    "text": "that's a little bit about what this is about for those of you who don't know me my name is Heather Downey I'm really",
    "start": "101759",
    "end": "108610"
  },
  {
    "text": "into innovation and enterprise level stuff I like to do consumer facing applications and some people know me as",
    "start": "108610",
    "end": "116259"
  },
  {
    "text": "a speaker so if you're interested at all in additional things that I do you can",
    "start": "116259",
    "end": "121719"
  },
  {
    "text": "follow me at Coraline on Twitter alright if you're interested in what we're gonna",
    "start": "121719",
    "end": "127299"
  },
  {
    "text": "cover today let me give you a little overview all right",
    "start": "127299",
    "end": "132970"
  },
  {
    "text": "we are gonna kind of just go over the kind of case study that I was given just",
    "start": "132970",
    "end": "138160"
  },
  {
    "text": "a real basic one I had the original he said he completely written out but sometimes the way that",
    "start": "138160",
    "end": "143379"
  },
  {
    "text": "it goes is that you're not allowed to share some of those details because the company doesn't want to sign off on him",
    "start": "143379",
    "end": "149290"
  },
  {
    "text": "and unfortunately for me they just decided not to so instead I went ahead and gave an example but I will kind of",
    "start": "149290",
    "end": "156310"
  },
  {
    "text": "just go into a little bit more detail about the kinds of implementations that we did I'll also give you a brief",
    "start": "156310",
    "end": "163209"
  },
  {
    "text": "introduction to test-driven development because like I said that was one of the things that I discovered during the",
    "start": "163209",
    "end": "168459"
  },
  {
    "text": "course of this application that we were building and what is the difference between TDD and behavior driven",
    "start": "168459",
    "end": "174250"
  },
  {
    "text": "development also a little introduction to how Kotlin fits in to testing and",
    "start": "174250",
    "end": "180549"
  },
  {
    "text": "it's not Kotlin itself I don't go through the whole language it's awesome I'm gonna give you that as we're warning",
    "start": "180549",
    "end": "187209"
  },
  {
    "text": "but I just go specifically into how Kotlin applies to testing and using TDD",
    "start": "187209",
    "end": "193090"
  },
  {
    "text": "in a proof of concept approach what we think about that the coolest part of",
    "start": "193090",
    "end": "198340"
  },
  {
    "text": "this entire thing was my discovery of an easy kind of five-step method of how to approach TDD because until that time I",
    "start": "198340",
    "end": "206079"
  },
  {
    "text": "was very overwhelmed with how much extra work it felt like and how much my brain disliked it and we're gonna go into a",
    "start": "206079",
    "end": "213250"
  },
  {
    "text": "little bit of a collaborative game I know there's not very many people but hopefully you'll kind of interact a",
    "start": "213250",
    "end": "218590"
  },
  {
    "text": "little and some key takeaways so this is what we're gonna cover today and this is",
    "start": "218590",
    "end": "224019"
  },
  {
    "text": "again quite interactive so anybody have any questions before we start yes No awesome",
    "start": "224019",
    "end": "232199"
  },
  {
    "text": "so I used to call them client objectives this is a case study kind of about that",
    "start": "232199",
    "end": "239879"
  },
  {
    "text": "probably most of you in the room are on a team yes is anybody here just on their own like it sold it yeah well you are",
    "start": "239879",
    "end": "247150"
  },
  {
    "text": "awesome awesome have you ever been in a team before though okay most companies",
    "start": "247150",
    "end": "253049"
  },
  {
    "text": "have a process of how they break down the tasks we got to do this is not the",
    "start": "253049",
    "end": "259690"
  },
  {
    "text": "talk for that but most of us know it as the agile process right it usually is",
    "start": "259690",
    "end": "265830"
  },
  {
    "text": "interpreted depending on how much you need it but when I the reason I'm putting that up",
    "start": "265830",
    "end": "271120"
  },
  {
    "text": "it's because this started from a place of just a simple user story at first we",
    "start": "271120",
    "end": "276400"
  },
  {
    "text": "were just saying yeah we can build an app in like four weeks five weeks six weeks whatever it is but the amount of",
    "start": "276400",
    "end": "283030"
  },
  {
    "text": "time that we quote quite often has nothing to do with thinking about the testing we don't think about the",
    "start": "283030",
    "end": "289300"
  },
  {
    "text": "additional testing of a QA person you know think about the testing of our client let alone thinking of the test",
    "start": "289300",
    "end": "295990"
  },
  {
    "text": "before you write them right I was thinking this is how long it would take for me to implement this the problem",
    "start": "295990",
    "end": "302500"
  },
  {
    "text": "with giving a lot of just a ballpark they I usually have a client engagement",
    "start": "302500",
    "end": "309280"
  },
  {
    "text": "person will kind of rope you into I'll just give me a ballpark idea how long that would take and so whatever you say",
    "start": "309280",
    "end": "314470"
  },
  {
    "text": "off-the-cuff is probably wrong you need to double it and the triple it for good measure and so when I tell Simon oh",
    "start": "314470",
    "end": "321630"
  },
  {
    "text": "implementing that screen I'll take me a week what really the actual implementation probably take a lot less",
    "start": "321630",
    "end": "327460"
  },
  {
    "text": "than that but because we have to iron out all the details of what they really want that's probably how long",
    "start": "327460",
    "end": "334090"
  },
  {
    "text": "realistically the entire process is going to take okay so now we're kind of",
    "start": "334090",
    "end": "339610"
  },
  {
    "text": "up against this deadline where we signed a contract and no we have to deliver it week five whatever States in we deliver",
    "start": "339610",
    "end": "347860"
  },
  {
    "text": "it so I'm really interested in how we're going to achieve this 100% test coverage",
    "start": "347860",
    "end": "355180"
  },
  {
    "text": "mystery in five weeks to me that's a lot of extra work you know to be able to do",
    "start": "355180",
    "end": "360490"
  },
  {
    "text": "that not that testing isn't good it's that how do we make sure that we cover that so the way that the team that",
    "start": "360490",
    "end": "368830"
  },
  {
    "text": "I worked on approached it is that well we just do everything TDD and I'm like wow that's some not a lot of time for",
    "start": "368830",
    "end": "374410"
  },
  {
    "text": "that you sure we have time and I said oh yeah eventually once you get good at it you can build it in the same amount of",
    "start": "374410",
    "end": "380919"
  },
  {
    "text": "time so what I'm going to just kind of walk you through is what actually",
    "start": "380919",
    "end": "386889"
  },
  {
    "text": "happened because again we all have different holes in our backgrounds right there's a lot of things that I know a",
    "start": "386889",
    "end": "392740"
  },
  {
    "text": "lot about that you probably don't and vice versa my particular hole is that I didn't ever follow the TDD way like I",
    "start": "392740",
    "end": "400960"
  },
  {
    "text": "had always just played around until something got to work and then maybe I would a unit test later to make sure that we",
    "start": "400960",
    "end": "406680"
  },
  {
    "text": "had some test coverage for it but I had never written tests first my brain wasn't thinking that way my brain thinks",
    "start": "406680",
    "end": "413490"
  },
  {
    "text": "as an implementer right so a user story",
    "start": "413490",
    "end": "418560"
  },
  {
    "text": "that I get like day one kinda looks like this as an administrator I want to be",
    "start": "418560",
    "end": "425460"
  },
  {
    "text": "able to create user accounts so I can grant users access to the system this",
    "start": "425460",
    "end": "430890"
  },
  {
    "text": "should be what they call a small pointed ticket and I'm like okay great",
    "start": "430890",
    "end": "436740"
  },
  {
    "text": "as the team that we were on was also an XP shop that meant that more than one of",
    "start": "436740",
    "end": "444030"
  },
  {
    "text": "us would actually sit at the computer at the time and work on this right there",
    "start": "444030",
    "end": "449840"
  },
  {
    "text": "was nothing else in the ticket except for this so that's all they felt that",
    "start": "449840",
    "end": "455760"
  },
  {
    "text": "they needed to give us and I'm like oh I think I have I think I understand the basics here I can I can go from there",
    "start": "455760",
    "end": "462980"
  },
  {
    "text": "but because of the way that unity can work it actually needed more acceptance",
    "start": "462980",
    "end": "469680"
  },
  {
    "text": "criteria it needed better acceptance criteria so that basic statement started",
    "start": "469680",
    "end": "475110"
  },
  {
    "text": "being able to be broken down further and further good acceptance criteria might be a list like this if I'm an",
    "start": "475110",
    "end": "482580"
  },
  {
    "text": "administrator I can create user accounts so right there that is one piece of it I",
    "start": "482580",
    "end": "488000"
  },
  {
    "text": "can create a user account by entering the following information about the user X Y Z I cannot assign a new user to",
    "start": "488000",
    "end": "495720"
  },
  {
    "text": "report to an inactive user oh that was important to know I didn't know that now I know that I cannot assign a new user",
    "start": "495720",
    "end": "503040"
  },
  {
    "text": "to report to a user if it recruits a cyclic whole relationship like yeah",
    "start": "503040",
    "end": "509940"
  },
  {
    "text": "that's pretty self-explanatory and the system notifies me that it sent an email to the new users email address",
    "start": "509940",
    "end": "516120"
  },
  {
    "text": "containing the system generated initial password and instructions for the person",
    "start": "516120",
    "end": "521159"
  },
  {
    "text": "to log in and change a password and I am able to verify with the intended recipient of the email that it was",
    "start": "521160",
    "end": "527040"
  },
  {
    "text": "received there's a lot more going on in that ticket than I originally intended so what is starting to happen",
    "start": "527040",
    "end": "533970"
  },
  {
    "text": "is that as a developer I have to ensure I have good acceptance criteria or I",
    "start": "533970",
    "end": "541079"
  },
  {
    "text": "didn't work on a ticket that was new for me because usually as developers we're",
    "start": "541079",
    "end": "547740"
  },
  {
    "text": "the last ones down the road after all the decisions are made we're kind of left holding the bag well we spent all this time on design and hashing out what",
    "start": "547740",
    "end": "554339"
  },
  {
    "text": "we think it needs to be and okay now you just need to hurry up and do it but by",
    "start": "554339",
    "end": "560100"
  },
  {
    "text": "approaching it this way what I was fascinated to see is that I actually had power to push back and say well we can't",
    "start": "560100",
    "end": "565769"
  },
  {
    "text": "write tests for this because I don't have enough small chunks of acceptance",
    "start": "565769",
    "end": "571800"
  },
  {
    "text": "criteria so that I can do those things and that was something I felt was very beneficial because these are really easy",
    "start": "571800",
    "end": "578339"
  },
  {
    "text": "black and white things that a client can say oh yeah I wasn't specific about that and so the onus is not on you to deliver",
    "start": "578339",
    "end": "584550"
  },
  {
    "text": "like something that it was complete in five weeks the onus is on them to give",
    "start": "584550",
    "end": "590310"
  },
  {
    "text": "us complete acceptance criteria if they want something accurate so that was something that was kind of like a side",
    "start": "590310",
    "end": "595620"
  },
  {
    "text": "thing that I really felt was valuable so now that we have our good acceptance",
    "start": "595620",
    "end": "601680"
  },
  {
    "text": "criteria this is my first introduction to TDD cool has ever been anybody in",
    "start": "601680",
    "end": "606809"
  },
  {
    "text": "here done TDD as an approach good couple of you cool so come along with me I",
    "start": "606809",
    "end": "612120"
  },
  {
    "text": "didn't even really know what it was no of course like everybody else I started googling it basically you'd",
    "start": "612120",
    "end": "619649"
  },
  {
    "text": "write a failing test you make that test pass and refactor like that it's that's",
    "start": "619649",
    "end": "625889"
  },
  {
    "text": "all it is TDD can be defined as a programming practice that instructs developers to",
    "start": "625889",
    "end": "631259"
  },
  {
    "text": "write new code only if an automated test has failed so this avoids duplication of",
    "start": "631259",
    "end": "637410"
  },
  {
    "text": "code and TDD means test-driven development the primary goal of TDD is to make the",
    "start": "637410",
    "end": "644910"
  },
  {
    "text": "code clearer simple and bug free so this is the intention behind this a lot of",
    "start": "644910",
    "end": "650819"
  },
  {
    "text": "people just refer to it as red green refactor okay this was an interesting concept to me because I've never written",
    "start": "650819",
    "end": "657800"
  },
  {
    "text": "something on purpose that doesn't work okay usually it's an accident so it was a",
    "start": "657800",
    "end": "664259"
  },
  {
    "text": "huge paradigm shift for my brain my brain doesn't like it so I really",
    "start": "664259",
    "end": "670770"
  },
  {
    "text": "needed a little bit more of an example of what that is I needed some clarifications about TDD I",
    "start": "670770",
    "end": "677810"
  },
  {
    "text": "needed to know that TDD is not about testing or about design",
    "start": "677810",
    "end": "684080"
  },
  {
    "text": "it's also not right some of the tests and then build a system that passes the tests it does not mean do lots of",
    "start": "684080",
    "end": "692850"
  },
  {
    "text": "testing so I was a little bit confused as to exactly what kind of approach we",
    "start": "692850",
    "end": "699780"
  },
  {
    "text": "were supposed to do how far down the minutiae did we need to go with all of this it felt really overwhelming and the",
    "start": "699780",
    "end": "706410"
  },
  {
    "text": "only reason it felt overwhelming is because I love building but this felt like taking an exam all the time right I",
    "start": "706410",
    "end": "714470"
  },
  {
    "text": "felt like taking an exam and that kind of took the joy out of it but then something else was kind of introduced to",
    "start": "714470",
    "end": "720270"
  },
  {
    "text": "me as a concept it's that TDD gives you confidence that what you have written",
    "start": "720270",
    "end": "727730"
  },
  {
    "text": "can be automatically tested and completely covered no matter at what",
    "start": "727730",
    "end": "733920"
  },
  {
    "text": "point your budget runs out no matter what point you have to hand it over you know that you have tests for everything",
    "start": "733920",
    "end": "740430"
  },
  {
    "text": "and that is valuable production code and I was like yeah but but if they didn't",
    "start": "740430",
    "end": "745710"
  },
  {
    "text": "get a whole system within that five weeks is that valuable it's interesting just to kind of mole of your head so I",
    "start": "745710",
    "end": "752340"
  },
  {
    "text": "started looking into TDD just a little bit more and I just discovered an",
    "start": "752340",
    "end": "757620"
  },
  {
    "text": "interview with Robert Martin uncle Bob about his three laws of TDD so that I",
    "start": "757620",
    "end": "764430"
  },
  {
    "text": "could think about the way to situate my brain number one you are not allowed to write any production code unless it is",
    "start": "764430",
    "end": "771840"
  },
  {
    "text": "to make a failing unit test pass and it has to be in the smallest way so if you",
    "start": "771840",
    "end": "777690"
  },
  {
    "text": "write something to call a function that you haven't written yet that fails so",
    "start": "777690",
    "end": "782880"
  },
  {
    "text": "that means the smallest amount of work that you can do to make that pass is you create a blank function that passes null",
    "start": "782880",
    "end": "790830"
  },
  {
    "text": "now the test passes that was rich to me too that is like writing the red test getting it to pass",
    "start": "790830",
    "end": "798600"
  },
  {
    "text": "and now we have to refactor that to really be more of what we mean so that means it's very very small very",
    "start": "798600",
    "end": "804900"
  },
  {
    "text": "incremental this actually worked really well with some of our junior developers who had to slow down and think in",
    "start": "804900",
    "end": "810990"
  },
  {
    "text": "smaller pieces absolutely law number two you are not allowed to",
    "start": "810990",
    "end": "816840"
  },
  {
    "text": "write any more of a unit test than is sufficient to fail and compilation failures our failures also kind of blew",
    "start": "816840",
    "end": "824610"
  },
  {
    "text": "my mind a little bit and his third law which is you are not allowed to write",
    "start": "824610",
    "end": "830490"
  },
  {
    "text": "any more production code than is sufficient to pass the current failing unit test so that means if you do",
    "start": "830490",
    "end": "838950"
  },
  {
    "text": "something with a new production code that actually causes any sort of a cascade effect you're only supposed to",
    "start": "838950",
    "end": "844260"
  },
  {
    "text": "do one at a time only fix one at a time that and if you can't fix one at a time",
    "start": "844260",
    "end": "850170"
  },
  {
    "text": "that's an artifact of something that is too tightly coupled so that promotes a",
    "start": "850170",
    "end": "855540"
  },
  {
    "text": "decoupled kind of system which of course is something that we all want to get to right we want to be able to swap out any",
    "start": "855540",
    "end": "862410"
  },
  {
    "text": "sort of calls that we're doing so now that I'm a little more familiar with the",
    "start": "862410",
    "end": "867960"
  },
  {
    "text": "way to think about it how do I name all of my tests right so there is a process",
    "start": "867960",
    "end": "878610"
  },
  {
    "text": "in place that many people use there's a couple of different ones the one that I'm going to show you is a given when",
    "start": "878610",
    "end": "884490"
  },
  {
    "text": "then anybody familiar with that yes a couple of you okay for those who aren't",
    "start": "884490",
    "end": "889530"
  },
  {
    "text": "given is the preparation okay it's the object that's under the test",
    "start": "889530",
    "end": "896040"
  },
  {
    "text": "initialization okay that's usually where any of your stubs or mock creations of",
    "start": "896040",
    "end": "901980"
  },
  {
    "text": "your object will happen within your test class and any injection of dependencies",
    "start": "901980",
    "end": "907860"
  },
  {
    "text": "okay it kind of looks like this given user is logged in okay this would be the",
    "start": "907860",
    "end": "913560"
  },
  {
    "text": "beginning naming of your test given when this happens when would be the execution",
    "start": "913560",
    "end": "919220"
  },
  {
    "text": "okay an operation to test in a given test it could look like",
    "start": "919220",
    "end": "925849"
  },
  {
    "text": "one of those like when a user launches the app or when the user clicks logout okay then is the assertion okay this is",
    "start": "925849",
    "end": "934429"
  },
  {
    "text": "the important I'd argue part of this test it processes the received result",
    "start": "934429",
    "end": "941059"
  },
  {
    "text": "and verifies any mocks that you have and it might look like this then the user",
    "start": "941059",
    "end": "947419"
  },
  {
    "text": "sees the logged out text this is very small right a very small test to me",
    "start": "947419",
    "end": "954129"
  },
  {
    "text": "there are additional frameworks that some of their really major applications",
    "start": "954129",
    "end": "959859"
  },
  {
    "text": "companies have put together that actually makes this a little bit easier one of them is Shazam has anybody ever",
    "start": "959859",
    "end": "967219"
  },
  {
    "text": "used Shazam you know to listen to music and it process it and tells you who the artist is Shazam wrote their own test",
    "start": "967219",
    "end": "975139"
  },
  {
    "text": "framework in Kotlin so that they actually could chain method calls that",
    "start": "975139",
    "end": "980629"
  },
  {
    "text": "makes it very easy to read kind of look like this right I mean look at the",
    "start": "980629",
    "end": "986989"
  },
  {
    "text": "extension methods all the way down right it's just an example of their helper",
    "start": "986989",
    "end": "992419"
  },
  {
    "text": "framework okay although that was pretty cool but it's not something I can use because it's proprietary to them so",
    "start": "992419",
    "end": "998929"
  },
  {
    "text": "really I needed to think about it in the most basic what shifts of Kotlin way which is kind of like whatever unit of",
    "start": "998929",
    "end": "1005499"
  },
  {
    "text": "work the statement under the text and at the expected behavior okay when really",
    "start": "1005499",
    "end": "1011649"
  },
  {
    "text": "if I wanted to let's say create a password validator okay all I'm thinking",
    "start": "1011649",
    "end": "1018369"
  },
  {
    "text": "about is something that looks like this right I just want a basic validation method to me there is only one test",
    "start": "1018369",
    "end": "1026428"
  },
  {
    "text": "because there's only one method so all I care about is what goes in and out right",
    "start": "1026429",
    "end": "1032610"
  },
  {
    "text": "much to my surprise looked more like this so there really was like four tests",
    "start": "1032610",
    "end": "1039279"
  },
  {
    "text": "for that one function because there were four different kinds of cases I can come",
    "start": "1039279",
    "end": "1044529"
  },
  {
    "text": "out of this and this can go on and on there can be quite a bit you can only test what you know you can only write",
    "start": "1044529",
    "end": "1051580"
  },
  {
    "text": "tests for what you know should or should not occur right so as you go you may",
    "start": "1051580",
    "end": "1057179"
  },
  {
    "text": "additional tests for existing functions also as QA does their job and discovers",
    "start": "1057179",
    "end": "1063240"
  },
  {
    "text": "things you have to add additional tests blew my mind so instead of me writing just that one one function now in my",
    "start": "1063240",
    "end": "1071880"
  },
  {
    "text": "brain I like wrote five but four of them were tests right very different way to",
    "start": "1071880",
    "end": "1078780"
  },
  {
    "text": "think about it but if I change anything in my function don't I want it to be",
    "start": "1078780",
    "end": "1085140"
  },
  {
    "text": "caught somewhere if my test mirror is my function exactly then there's not a lot",
    "start": "1085140",
    "end": "1091380"
  },
  {
    "text": "of value in that there's not a lot of changing if the what the data is that goes in right",
    "start": "1091380",
    "end": "1097140"
  },
  {
    "text": "all of those test cases what is very cool about Kotlin is you can use",
    "start": "1097140",
    "end": "1105240"
  },
  {
    "text": "backticks to name your methods or classes as you like it wouldn't look",
    "start": "1105240",
    "end": "1111240"
  },
  {
    "text": "like it that's a little bit easier read one of the best parts of this language",
    "start": "1111240",
    "end": "1117450"
  },
  {
    "text": "is its human readability and I know I kind of jumped ahead before the introduction of Kotlin part but this is",
    "start": "1117450",
    "end": "1124020"
  },
  {
    "text": "the reason why I thought I would jump in the pool with it because there's lots of",
    "start": "1124020",
    "end": "1129809"
  },
  {
    "text": "different kinds of test frameworks available for all different languages but this is the first time I saw a language built-in that can do this kind",
    "start": "1129809",
    "end": "1136200"
  },
  {
    "text": "of thing so anytime anything would compile and I'd get errors it was as if somebody wrote me a book or a tweet it",
    "start": "1136200",
    "end": "1142260"
  },
  {
    "text": "was very cool this is a hundred percent human readable even someone who has no",
    "start": "1142260",
    "end": "1148350"
  },
  {
    "text": "idea what tests or class is is doing it can they can read the method name and",
    "start": "1148350",
    "end": "1154530"
  },
  {
    "text": "understand the purpose right even more if you've already some test cases or",
    "start": "1154530",
    "end": "1161010"
  },
  {
    "text": "scenarios written it can be easily transformed into these unit tests by copying and pasting titles of your test",
    "start": "1161010",
    "end": "1167039"
  },
  {
    "text": "scenarios and this includes Java the great thing about Kotlin is it's compatible with Java right so you can",
    "start": "1167039",
    "end": "1174030"
  },
  {
    "text": "write to us in Kotlin for code that already exists pretty cool",
    "start": "1174030",
    "end": "1179560"
  },
  {
    "text": "and that brings me to the difference between TDD and BDD or behavior driven",
    "start": "1179560",
    "end": "1184960"
  },
  {
    "text": "development too many anachronism oh my gosh that is that is a one part of our",
    "start": "1184960",
    "end": "1191230"
  },
  {
    "text": "industry you gotta work on the jargon behavior driven development is perhaps",
    "start": "1191230",
    "end": "1197020"
  },
  {
    "text": "the biggest source of confusion during this part of the journey when it's applied to automated testing BDD is a",
    "start": "1197020",
    "end": "1204550"
  },
  {
    "text": "set of best practices for writing great tests BDD can and should be used",
    "start": "1204550",
    "end": "1212530"
  },
  {
    "text": "together with TDD and unit testing methods so now I'm like oh so now I need",
    "start": "1212530",
    "end": "1218110"
  },
  {
    "text": "now I need to know this - all right really behavior driven development",
    "start": "1218110",
    "end": "1224020"
  },
  {
    "text": "allows test focus on the desired behavior or outcome it actually hilariously decouples the naming of the",
    "start": "1224020",
    "end": "1232360"
  },
  {
    "text": "tests from what the actual functionality is doing at the integration level that's",
    "start": "1232360",
    "end": "1239380"
  },
  {
    "text": "interesting a common problem with poor unit test is they rely too much on how the tested",
    "start": "1239380",
    "end": "1245620"
  },
  {
    "text": "function is implemented so that means that if you update the function even without changing the inputs and outputs",
    "start": "1245620",
    "end": "1252280"
  },
  {
    "text": "you must also update the test right this is a problem because it makes you even changes very tedious so behavior driven",
    "start": "1252280",
    "end": "1261010"
  },
  {
    "text": "development addresses this problem by showing you how to test so you should not have",
    "start": "1261010",
    "end": "1266320"
  },
  {
    "text": "supplementation but instead behavior okay so with it unit testing gives you",
    "start": "1266320",
    "end": "1272740"
  },
  {
    "text": "the what test-driven development gives you the when and behavior driven development gives you the how okay",
    "start": "1272740",
    "end": "1279480"
  },
  {
    "text": "although you can use each individually you really should combine them for the best results because they complement",
    "start": "1279480",
    "end": "1285160"
  },
  {
    "text": "each other really well so now I kind of had a little bit more of a framework for",
    "start": "1285160",
    "end": "1291370"
  },
  {
    "text": "how to think about TDD I had never really messed with Kotlin before the",
    "start": "1291370",
    "end": "1296440"
  },
  {
    "text": "last time I had touched Android was definitely in the java days and that was back before a lot more work was done on",
    "start": "1296440",
    "end": "1302890"
  },
  {
    "text": "it right it's mobile has come a long way it's been very interesting specifically",
    "start": "1302890",
    "end": "1308380"
  },
  {
    "text": "watching both iOS and Android changed what their recommended images are for building it's been pretty",
    "start": "1308380",
    "end": "1314650"
  },
  {
    "text": "cool did anybody use Java or Objective C to do any of those yeah completely so",
    "start": "1314650",
    "end": "1320110"
  },
  {
    "text": "you know wouldn't you agree that both platforms took a step in a much better direction though like a little bit",
    "start": "1320110",
    "end": "1326140"
  },
  {
    "text": "easier to work with definitely much more to stuff but there's still a lot of power and using those other languages",
    "start": "1326140",
    "end": "1332140"
  },
  {
    "text": "and a lot of developers still do but it was very cool to watch this language",
    "start": "1332140",
    "end": "1338380"
  },
  {
    "text": "grow and then get adopted by Google as their official one for Android is really neat so let's introduce Catlin and why I",
    "start": "1338380",
    "end": "1346690"
  },
  {
    "text": "think it's cool Kotlin is very concise the less code you write the fewer mistakes you make it's also very",
    "start": "1346690",
    "end": "1353740"
  },
  {
    "text": "expressive you can express whatever you want in a shorter way because Java is",
    "start": "1353740",
    "end": "1359620"
  },
  {
    "text": "quite verbose right what I thought was also interesting is when I first used",
    "start": "1359620",
    "end": "1366280"
  },
  {
    "text": "Java right I had done it after dotnet after c-sharp right so I always thought",
    "start": "1366280",
    "end": "1371650"
  },
  {
    "text": "it was like hasti sharp is like just a little bit more brief but they're very similar in a lot of ways right have",
    "start": "1371650",
    "end": "1378190"
  },
  {
    "text": "their own runtimes they they're both action oriented there's a lot in common I just noticed that I could do some",
    "start": "1378190",
    "end": "1385270"
  },
  {
    "text": "things a little quicker a little less for us in c-sharp and Kotlin is even",
    "start": "1385270",
    "end": "1390340"
  },
  {
    "text": "more so but it's much more compatible with it directly it's also pragmatic",
    "start": "1390340",
    "end": "1397740"
  },
  {
    "text": "straight to the point without a lot of writing it doesn't take a lot to get something to build it's also typesafe",
    "start": "1397740",
    "end": "1406020"
  },
  {
    "text": "hooray remember the billion dollars mistake it's really important that you",
    "start": "1406020",
    "end": "1412600"
  },
  {
    "text": "have something that you don't have to think about too much I really appreciate a good JavaScript developer because of",
    "start": "1412600",
    "end": "1420310"
  },
  {
    "text": "this because it's not a type say sorry not a type safe language typescript is",
    "start": "1420310",
    "end": "1425380"
  },
  {
    "text": "but it's it's interesting that they chose to go this way as well colin is",
    "start": "1425380",
    "end": "1430390"
  },
  {
    "text": "also functional so has anybody ever done any sort of functional programming in the room cool yes have you ever swapped",
    "start": "1430390",
    "end": "1437200"
  },
  {
    "text": "out trying between each of these in Colin yeah yeah very cool",
    "start": "1437200",
    "end": "1444559"
  },
  {
    "text": "and what's neat is that functions and properties are first class citizens in Colin very cool it's also friendly so I",
    "start": "1444559",
    "end": "1452509"
  },
  {
    "text": "think I mentioned it before but interoperability between Kotlin and Java works almost perfectly it's very awesome",
    "start": "1452509",
    "end": "1457669"
  },
  {
    "text": "and it's human readable that was the",
    "start": "1457669",
    "end": "1462980"
  },
  {
    "text": "thing that drew me in the most because I had a choice between doing Kotlin or Swift on this project and I could have",
    "start": "1462980",
    "end": "1469279"
  },
  {
    "text": "you know chosen to work on the iOS or Android implementation and I really appreciated the way that Colin was put",
    "start": "1469279",
    "end": "1475429"
  },
  {
    "text": "together the best thing that apart from improving readability it's also better",
    "start": "1475429",
    "end": "1481909"
  },
  {
    "text": "understood in the output of a result when it fails you can see the readable error much more clearly after something",
    "start": "1481909",
    "end": "1489529"
  },
  {
    "text": "like this so any questions very good so",
    "start": "1489529",
    "end": "1497990"
  },
  {
    "text": "this was an interesting part I remember I think I mentioned that I worked a lot on proof of concepts and the company I",
    "start": "1497990",
    "end": "1505789"
  },
  {
    "text": "worked with at the time they would give me a couple of days maybe to come up",
    "start": "1505789",
    "end": "1511700"
  },
  {
    "text": "with something that they wanted to impress a client with as please give us a budget to do the real thing to do",
    "start": "1511700",
    "end": "1518090"
  },
  {
    "text": "production but they needed something in their hands because most clients don't know what they want till they see it and",
    "start": "1518090",
    "end": "1524149"
  },
  {
    "text": "they're like ok Heather we need this on Friday it is currently Wednesday morning you know and I'd be like oh ok like",
    "start": "1524149",
    "end": "1531529"
  },
  {
    "text": "usually they were some pressure for me to like stay up all night or anything but it was can you give us something that we can just show them that means",
    "start": "1531529",
    "end": "1538070"
  },
  {
    "text": "you break a lot of traditional rules in production code to deliver something that quickly unless you are just that",
    "start": "1538070",
    "end": "1544970"
  },
  {
    "text": "speedy and it is possible to be that speedy in a lot of ways but remember you also have to deal with deployment and",
    "start": "1544970",
    "end": "1550700"
  },
  {
    "text": "the like if this was a cloud-based app I'd also have to deal with you know",
    "start": "1550700",
    "end": "1557299"
  },
  {
    "text": "deployment to the cloud nice thing about mobile is you can put it just directly on someone's device and just hand it",
    "start": "1557299",
    "end": "1562340"
  },
  {
    "text": "over so they could look at it Febrary you don't have to worry about deploying it to the App Store's at least not for proof of concepts after",
    "start": "1562340",
    "end": "1571369"
  },
  {
    "text": "working on this whole project and delivering what we've delivered I can",
    "start": "1571369",
    "end": "1576379"
  },
  {
    "text": "tell you pretty strongly that my opinion of using",
    "start": "1576379",
    "end": "1581380"
  },
  {
    "text": "TDD and proof of concepts is don't it's - there's just too much to it it's not",
    "start": "1581380",
    "end": "1587170"
  },
  {
    "text": "that you that you can't do this well in production code it's just it's a lot to do in that short amount of time it's a",
    "start": "1587170",
    "end": "1594250"
  },
  {
    "text": "very verbose but if you have to do any exploratory work you don't truly know",
    "start": "1594250",
    "end": "1599770"
  },
  {
    "text": "what's possible until you research it and try some things out especially if you're new to either the framework or",
    "start": "1599770",
    "end": "1605230"
  },
  {
    "text": "like Android in general it was you have to kind of do a little bit of research",
    "start": "1605230",
    "end": "1610780"
  },
  {
    "text": "of us - what classes do what and you have to know those things before you can really write a red green refactor test",
    "start": "1610780",
    "end": "1618850"
  },
  {
    "text": "scenario you'd have to know a little bit of it so that is a limitation that I saw",
    "start": "1618850",
    "end": "1624510"
  },
  {
    "text": "specifically using TDD with derivative concepts is that you'd have to already know a lot about what you're working in",
    "start": "1624510",
    "end": "1632290"
  },
  {
    "text": "in order for that to really go and not that you can't write tests for a proof of concept but if it's not production",
    "start": "1632290",
    "end": "1638320"
  },
  {
    "text": "code what is the value in it it either works or it doesn't when you're presenting it okay so that's just some",
    "start": "1638320",
    "end": "1644440"
  },
  {
    "text": "definitely my opinion but especially when it comes to what clients want is that most clients don't really want to",
    "start": "1644440",
    "end": "1651340"
  },
  {
    "text": "pay for tests extra tests to be done and see almost nothing they would like to see something okay so I think the answer",
    "start": "1651340",
    "end": "1660520"
  },
  {
    "text": "to this question really is where is the value lie okay it definitely lies in something that is",
    "start": "1660520",
    "end": "1666790"
  },
  {
    "text": "going to be maintained and created for the long haul but not necessarily something that just needs to be done",
    "start": "1666790",
    "end": "1673450"
  },
  {
    "text": "very quickly because you know if you've got lots of time I mean you really know how you're gonna do it maybe you can try",
    "start": "1673450",
    "end": "1682030"
  },
  {
    "text": "I mean if you have a lot of time to present that proof of concept just go a little bit later as you know TDD is",
    "start": "1682030",
    "end": "1689890"
  },
  {
    "text": "valuable as a tool you need to use it when it fits and don't use it when it doesn't which is also the same thing for",
    "start": "1689890",
    "end": "1697270"
  },
  {
    "text": "doing things and software development in general how agile are you",
    "start": "1697270",
    "end": "1703450"
  },
  {
    "text": "what does agile mean to you guys how small and iterative do you want to be does that mean you have no planning",
    "start": "1703450",
    "end": "1709330"
  },
  {
    "text": "upfront these are questions that we ask time if it works continue using it if it doesn't work for you guys then don't",
    "start": "1709330",
    "end": "1715180"
  },
  {
    "text": "work then don't do that I know lots of different groups they'll just say let's just do have a brainstorming session for",
    "start": "1715180",
    "end": "1720550"
  },
  {
    "text": "several hours which by the way is planning you know and see if we can flush something out and go with it that",
    "start": "1720550",
    "end": "1728050"
  },
  {
    "text": "sounds like it's agile to me but to other people they're like that's technically more water fallish you know",
    "start": "1728050",
    "end": "1733620"
  },
  {
    "text": "semantics like do what works for you that's really the most important thing",
    "start": "1733620",
    "end": "1739030"
  },
  {
    "text": "that I've learned is that when you want to be valuable as a developer and you want to deliver something pretty quickly",
    "start": "1739030",
    "end": "1745230"
  },
  {
    "text": "sometimes you have to adjust the processes that you have and you have to be willing to speak up to your",
    "start": "1745230",
    "end": "1751390"
  },
  {
    "text": "management team or the team you've got around you to say you know what is it",
    "start": "1751390",
    "end": "1756520"
  },
  {
    "text": "just ask the question what is important here is it important that we get that we deliver something in this time or is it",
    "start": "1756520",
    "end": "1762430"
  },
  {
    "text": "important that we deliver a hundred percent test coverage sometimes the answer is both then that means you have",
    "start": "1762430",
    "end": "1768310"
  },
  {
    "text": "to decide how much of that code you can give in that time right and nobody wants to hear that they want to hear all of",
    "start": "1768310",
    "end": "1774310"
  },
  {
    "text": "the above but remember something's got to give so don't be afraid to be the one to be",
    "start": "1774310",
    "end": "1779980"
  },
  {
    "text": "realistic in that way okay let's do some sort of a collaborative game shall we at",
    "start": "1779980",
    "end": "1786730"
  },
  {
    "text": "least yeah oh he says one or two of you will hopefully do this I'm gonna go ahead and give you some scenarios based",
    "start": "1786730",
    "end": "1792910"
  },
  {
    "text": "on the given win then okay given that the state of the world is X when something happens the state of the world",
    "start": "1792910",
    "end": "1799270"
  },
  {
    "text": "now looks like Y okay like given my bank account is in credit and I made no",
    "start": "1799270",
    "end": "1806170"
  },
  {
    "text": "withdrawals recently when I attempt to withdraw an amount less than my cards limit then the withdrawal should",
    "start": "1806170",
    "end": "1811570"
  },
  {
    "text": "complete with out errors or warnings which is what I always hope for every time I buy a noble ticket all right I",
    "start": "1811570",
    "end": "1819580"
  },
  {
    "text": "have like please go through every time but that's mostly because I'm out of the",
    "start": "1819580",
    "end": "1825070"
  },
  {
    "text": "country and I just never know it's gonna any thing that's gonna get pinged or if it's gonna go through a good trick that",
    "start": "1825070",
    "end": "1831820"
  },
  {
    "text": "prevents most of the accidental misuse and the given when then is to use past",
    "start": "1831820",
    "end": "1836890"
  },
  {
    "text": "tense forgiving clauses present tense for win and future tense for then",
    "start": "1836890",
    "end": "1842440"
  },
  {
    "text": "that was helpful to me any anyways and this makes it clear that given statements are preconditions and",
    "start": "1842440",
    "end": "1847600"
  },
  {
    "text": "parameters and that the then statements are post conditions and expectations so and your application life cycle it needs",
    "start": "1847600",
    "end": "1854649"
  },
  {
    "text": "to be taken into consideration this is very useful as specifically when you're doing things like showing and hiding",
    "start": "1854649",
    "end": "1859809"
  },
  {
    "text": "screens and when they appear and when they disappear so make given and then passive they should describe values",
    "start": "1859809",
    "end": "1866230"
  },
  {
    "text": "rather than actions okay make sure when is active it should",
    "start": "1866230",
    "end": "1871330"
  },
  {
    "text": "describe the action under the test and try having only one wins statement for",
    "start": "1871330",
    "end": "1877389"
  },
  {
    "text": "each scenario remember we went from like one function to four tests right I'm",
    "start": "1877389",
    "end": "1882549"
  },
  {
    "text": "gonna give you a case and you guys gonna just let me know how many things we could probably build from that right",
    "start": "1882549",
    "end": "1888549"
  },
  {
    "text": "okay as a user I want to be able to log",
    "start": "1888549",
    "end": "1895120"
  },
  {
    "text": "into the app once and not have to do it again okay right so given what anybody",
    "start": "1895120",
    "end": "1904720"
  },
  {
    "text": "know yeah so given okay given the users logged in when what okay so when app",
    "start": "1904720",
    "end": "1917139"
  },
  {
    "text": "launches okay or when like main activities running okay that's fine",
    "start": "1917139",
    "end": "1923379"
  },
  {
    "text": "don't know what what user is still",
    "start": "1923379",
    "end": "1930909"
  },
  {
    "text": "logged in so that is you're checking a pool for that right so we have now written the condition of a test that",
    "start": "1930909",
    "end": "1937419"
  },
  {
    "text": "doesn't exist yet right so that means all I'm gonna do is write it is just a",
    "start": "1937419",
    "end": "1942820"
  },
  {
    "text": "sign of bool and make it true that's the test pass yes is that useful now that",
    "start": "1942820",
    "end": "1952179"
  },
  {
    "text": "means we have one test right that passes but that doesn't actually do or really",
    "start": "1952179",
    "end": "1958419"
  },
  {
    "text": "really need it to do in order to fulfill this this user story right that's just",
    "start": "1958419",
    "end": "1964090"
  },
  {
    "text": "one one of them right so we know that we you need a bool that gives us an answer so what's the next one given what",
    "start": "1964090",
    "end": "1973240"
  },
  {
    "text": "no this is what I had to go through by the way it was like given what you might",
    "start": "1973240",
    "end": "1981190"
  },
  {
    "text": "have the same given by the way it might be like yeah I know right this is okay",
    "start": "1981190",
    "end": "2001080"
  },
  {
    "text": "so given that this function yeah so given that some function name okay",
    "start": "2001080",
    "end": "2008450"
  },
  {
    "text": "has received true or false then what sure sure absolutely",
    "start": "2008450",
    "end": "2021300"
  },
  {
    "text": "or that's so that's one test right so then we write an additional method that",
    "start": "2021300",
    "end": "2028140"
  },
  {
    "text": "takes in or at least checks that bool and then does something so if the users",
    "start": "2028140",
    "end": "2034200"
  },
  {
    "text": "logging in for the first time that's one test saying when the user logs in I want",
    "start": "2034200",
    "end": "2039390"
  },
  {
    "text": "you to change this bool to their logged in when this user logs in I want to",
    "start": "2039390",
    "end": "2045990"
  },
  {
    "text": "store their information when the shoes are like than that you see it adds one and adds one so now that we are thinking",
    "start": "2045990",
    "end": "2051840"
  },
  {
    "text": "that's already for okay right okay so",
    "start": "2051840",
    "end": "2061139"
  },
  {
    "text": "now we have a negative test right when the user is not logged in I cannot",
    "start": "2061140",
    "end": "2066810"
  },
  {
    "text": "launch the app right so this is just this is all tied to just one user story right and it's in my brain it's still",
    "start": "2066810",
    "end": "2073590"
  },
  {
    "text": "one function but really it's different pieces of it okay so let's try a different one as a user I don't want my",
    "start": "2073590",
    "end": "2080850"
  },
  {
    "text": "password to be shown when I type it right yes",
    "start": "2080850",
    "end": "2087409"
  },
  {
    "text": "ah yes yes okay so you that was a very",
    "start": "2088109",
    "end": "2101579"
  },
  {
    "text": "good question by the way so your question was what if there are dependencies on the other test passing",
    "start": "2101579",
    "end": "2107789"
  },
  {
    "text": "there are not dependencies on the other tests passing they individually are run whether or not things need to be in",
    "start": "2107789",
    "end": "2114869"
  },
  {
    "text": "place in order for later tests you right to pass is the point of the red green",
    "start": "2114869",
    "end": "2120599"
  },
  {
    "text": "refactor the idea is that you're writing pieces of that test right now you just need something to do this you're like",
    "start": "2120599",
    "end": "2126809"
  },
  {
    "text": "well that's not that useful I need to do an additional step in order to write a test that will be more useful right you",
    "start": "2126809",
    "end": "2133680"
  },
  {
    "text": "start with a smallest and then you continue to go but they would are still run independently you should be able to",
    "start": "2133680",
    "end": "2139499"
  },
  {
    "text": "hide all the other tests and run them individually and have them still pass does that make sense yeah I know so for",
    "start": "2139499",
    "end": "2148829"
  },
  {
    "text": "me it was very difficult because when I started I'm already 12 steps ahead thinking about the next thing okay and the",
    "start": "2148829",
    "end": "2156109"
  },
  {
    "text": "practice for me was what is the first thing that needs to happen or what is",
    "start": "2156109",
    "end": "2161970"
  },
  {
    "text": "the smallest thing that can happen and I thought it was kind of silly even an uncle Bob said in his interviews like",
    "start": "2161970",
    "end": "2168210"
  },
  {
    "text": "okay so I have to write all this stuff and it's extra code and actually write less production code than I do tests so",
    "start": "2168210",
    "end": "2174779"
  },
  {
    "text": "there's way more code in my des classes then there is a reproduction code and he's like yeah but that's a good thing",
    "start": "2174779",
    "end": "2180420"
  },
  {
    "text": "because you want it to be as small as possible to do the least amount of work and completely decoupled that was the",
    "start": "2180420",
    "end": "2187230"
  },
  {
    "text": "idea yes I think that's probably accurate so that",
    "start": "2187230",
    "end": "2197940"
  },
  {
    "text": "was that was a good point so just to repeat any dependencies maybe that you would need should be referenced in the",
    "start": "2197940",
    "end": "2204480"
  },
  {
    "text": "given statement so like give and I my users like then are given I do have this password or I don't that indicates to",
    "start": "2204480",
    "end": "2211500"
  },
  {
    "text": "not just like the human eye but also as you're building this what you should be",
    "start": "2211500",
    "end": "2218490"
  },
  {
    "text": "expecting so strange things started to happen I started not wanting to write a",
    "start": "2218490",
    "end": "2224370"
  },
  {
    "text": "lot of tests which means I started to want to do the simplest thing possible and not make it complex at least in my",
    "start": "2224370",
    "end": "2231600"
  },
  {
    "text": "production code because it but I already have four or five tests for just a basic thing right and that was a good turning",
    "start": "2231600",
    "end": "2240000"
  },
  {
    "text": "point for me is that I realized that in a way even though it's more work to",
    "start": "2240000",
    "end": "2245310"
  },
  {
    "text": "write tests it definitely made me not want to write more production code okay",
    "start": "2245310",
    "end": "2250950"
  },
  {
    "text": "and I know that sounds strange but it was smaller like our files were smaller",
    "start": "2250950",
    "end": "2256950"
  },
  {
    "text": "we actually ran a test against it just to analyze to see and they were smaller but yes",
    "start": "2256950",
    "end": "2263460"
  },
  {
    "text": "the point is your finger still typed more when you do you do test-driven development for sure there's no denying",
    "start": "2263460",
    "end": "2269310"
  },
  {
    "text": "that and so like it go ahead say that",
    "start": "2269310",
    "end": "2276240"
  },
  {
    "text": "again you can do this would be a unit",
    "start": "2276240",
    "end": "2281790"
  },
  {
    "text": "test just to do the functionality of that was that your question",
    "start": "2281790",
    "end": "2287750"
  },
  {
    "text": "hmm",
    "start": "2290479",
    "end": "2293479"
  },
  {
    "text": "mm-hmm sure but it depends on the way",
    "start": "2299960",
    "end": "2312120"
  },
  {
    "text": "you've abstracted your patterns right so if you're doing mvvm as an approach or",
    "start": "2312120",
    "end": "2318720"
  },
  {
    "text": "my presenter however you're doing it you can right now I was just giving you an example of yeah when this user does this",
    "start": "2318720",
    "end": "2325610"
  },
  {
    "text": "but the UI is separate you know from the actual level of functionality that does",
    "start": "2325610",
    "end": "2330690"
  },
  {
    "text": "it right so you can write another one for that right in this case because we",
    "start": "2330690",
    "end": "2335970"
  },
  {
    "text": "worked in a team we were just doing the functionality layer we were just doing the manager or the presenter work or the",
    "start": "2335970",
    "end": "2342710"
  },
  {
    "text": "view model if you will yeah but that's that's a good point is that you can",
    "start": "2342710",
    "end": "2347940"
  },
  {
    "text": "write this like four different levels of that application as well so I might not really care what the UI is doing in this",
    "start": "2347940",
    "end": "2354240"
  },
  {
    "text": "layer but I might in the next yes and in case three as a user I want to login to",
    "start": "2354240",
    "end": "2362670"
  },
  {
    "text": "the app to access the system okay to me all of these seems like pretty simple",
    "start": "2362670",
    "end": "2368700"
  },
  {
    "text": "requests right Kotlin does a really good job of making a lot of this easy but I",
    "start": "2368700",
    "end": "2375540"
  },
  {
    "text": "had to stop and think right I just stop and think about how I do this so now that you kind of had a little bit",
    "start": "2375540",
    "end": "2382620"
  },
  {
    "text": "of a taste of how much you have to break it down let me show you what kind of saved me a little bit okay I was able to",
    "start": "2382620",
    "end": "2390810"
  },
  {
    "text": "search online and an anonymous writer otherwise I would credit them created",
    "start": "2390810",
    "end": "2396240"
  },
  {
    "text": "the five step method of easy TDD which I am like glory hallelujah cuz right now that's so much thinking about how to",
    "start": "2396240",
    "end": "2402930"
  },
  {
    "text": "write things down I need I need to be able to automate this in my brain right",
    "start": "2402930",
    "end": "2409310"
  },
  {
    "text": "number one decide the inputs and outputs so I'm like okay decide the input I need I know that I'm gonna need this and I",
    "start": "2409310",
    "end": "2415860"
  },
  {
    "text": "know I'm gonna want that at the end we start this process from a high level we don't care about the implementation just",
    "start": "2415860",
    "end": "2421950"
  },
  {
    "text": "yet we have the goal calculate password strength you know to get to that goal we usually need some inputs right",
    "start": "2421950",
    "end": "2429910"
  },
  {
    "text": "and then we get some output based on them so when you normally start writing code to get to some goal",
    "start": "2429910",
    "end": "2435940"
  },
  {
    "text": "you'd probably start with a function you probably think of what data the function needs to work and what kind of results",
    "start": "2435940",
    "end": "2441700"
  },
  {
    "text": "it will give back right we can start this process by doing exactly that we just won't write any code for it yet",
    "start": "2441700",
    "end": "2446789"
  },
  {
    "text": "okay so how would this work the input is easy it just has to be the password",
    "start": "2446789",
    "end": "2451869"
  },
  {
    "text": "right the output is also easy it has to be some value describing the strength of the password right it's for a validator",
    "start": "2451869",
    "end": "2457569"
  },
  {
    "text": "to keep things simple let's say the password is either strong or it isn't so we can use a boolean value for the input",
    "start": "2457569",
    "end": "2464230"
  },
  {
    "text": "for the output okay so input is password and then the output is bull okay then I have to choose the",
    "start": "2464230",
    "end": "2473049"
  },
  {
    "text": "function signature right so now that we know what data goes in and what comes out we need to choose the function",
    "start": "2473049",
    "end": "2478420"
  },
  {
    "text": "signature so that is what the parameters the function takes and whether it returned something this step is again",
    "start": "2478420",
    "end": "2484030"
  },
  {
    "text": "very similar so what we've been doing forever it just you kind of approach",
    "start": "2484030",
    "end": "2490030"
  },
  {
    "text": "writing code without TDD just like this right before you can write any code for a function you need to decide what all",
    "start": "2490030",
    "end": "2497109"
  },
  {
    "text": "this is so none of this is has deviated from the traditional coding methods that I've done but first of the parameters",
    "start": "2497109",
    "end": "2504640"
  },
  {
    "text": "what does our function need to work in this case it's simple all it requires is",
    "start": "2504640",
    "end": "2509950"
  },
  {
    "text": "the password right we can do the whole calculation based entirely on that value and that value alone but what about the",
    "start": "2509950",
    "end": "2516970"
  },
  {
    "text": "return value simple since this is a calculation we can return the result",
    "start": "2516970",
    "end": "2522010"
  },
  {
    "text": "directly right in some more complex cases the return value might be a promise or some sort of additional",
    "start": "2522010",
    "end": "2529539"
  },
  {
    "text": "change method but instead of returning a value the function might take a callback parameter or it might just not return",
    "start": "2529539",
    "end": "2535900"
  },
  {
    "text": "anything at all it could just be a void right either way at this point we can now decide what calling the function",
    "start": "2535900",
    "end": "2542859"
  },
  {
    "text": "would look like in code so now we finally get to touch it tada okay now we",
    "start": "2542859",
    "end": "2550000"
  },
  {
    "text": "had written our first line of production code hooray okay cool next we decide on one aspect",
    "start": "2550000",
    "end": "2558369"
  },
  {
    "text": "of functionality we now know that the goal the day involved in the function signature right",
    "start": "2558369",
    "end": "2564839"
  },
  {
    "text": "in a non TDD workflow you jump into writing code for the function now you might already have some ideas on how",
    "start": "2564839",
    "end": "2571709"
  },
  {
    "text": "this would work right I know I do I think Riley really rapidly we need to",
    "start": "2571709",
    "end": "2577140"
  },
  {
    "text": "check for this we need to check for that we had to return value was affected by this right this is how most people run",
    "start": "2577140",
    "end": "2584519"
  },
  {
    "text": "into trouble with TDD including your surely because my head was filled it's all these ideas on how to write the",
    "start": "2584519",
    "end": "2590249"
  },
  {
    "text": "function and but I'm not sure of exactly how to lay out the code until you start writing it like I wanted to I would love",
    "start": "2590249",
    "end": "2596609"
  },
  {
    "text": "I want to touch the protection code now right I just I'm visualizing it in my head so instead of thinking of all the choices",
    "start": "2596609",
    "end": "2602729"
  },
  {
    "text": "let's focus on just one tiny thing for now so what is the single simplest",
    "start": "2602729",
    "end": "2609569"
  },
  {
    "text": "possible behavior that we need to get a tiny bit closer to our goal right so a",
    "start": "2609569",
    "end": "2614880"
  },
  {
    "text": "common problem is to try and tackle a chunk of behavior that's really big right because that's what makes me get",
    "start": "2614880",
    "end": "2622380"
  },
  {
    "text": "up in the morning what makes me code if we think of password strength there's ideas of different rules like special",
    "start": "2622380",
    "end": "2629640"
  },
  {
    "text": "characters and numbers password length etc and of course it's hard to think of a test that would cover every one of",
    "start": "2629640",
    "end": "2636359"
  },
  {
    "text": "those situations right so what is the simplest possible step we can take to make this function be a little closer to",
    "start": "2636359",
    "end": "2643169"
  },
  {
    "text": "the ultimate goal of validating a password hey what would be the very first line or two of code that I could",
    "start": "2643169",
    "end": "2649499"
  },
  {
    "text": "write if I both this function without TDD all right what is the smallest",
    "start": "2649499",
    "end": "2654630"
  },
  {
    "text": "amount the very simplest rule for password strength might be the empty password right that's really easy so the",
    "start": "2654630",
    "end": "2661229"
  },
  {
    "text": "output should always be false when the password is empty that's something you can write and so thus I was able to",
    "start": "2661229",
    "end": "2668249"
  },
  {
    "text": "finally start adding my various conditons cases I started with the",
    "start": "2668249",
    "end": "2674640"
  },
  {
    "text": "easiest one whether or not something's null whether or not something's empty that's usually how I was able to very",
    "start": "2674640",
    "end": "2680999"
  },
  {
    "text": "quickly just add some tests right in the beginning and then I started thinking about them as I went number four is that",
    "start": "2680999",
    "end": "2688349"
  },
  {
    "text": "you implement the test right the main difference is that instead of focusing on implementing the",
    "start": "2688349",
    "end": "2694210"
  },
  {
    "text": "we're focusing on how the function would be called and what happens as a result",
    "start": "2694210",
    "end": "2699369"
  },
  {
    "text": "so that is that we're thinking about the function and how it behaves under some conditions so how the function behaves",
    "start": "2699369",
    "end": "2706330"
  },
  {
    "text": "is what we want to test once you start testing behavior under some conditions like time of day or whatever you know",
    "start": "2706330",
    "end": "2712960"
  },
  {
    "text": "testing becomes a lot easier because we can look at behavior from the outside we don't need to know the implementation if",
    "start": "2712960",
    "end": "2718780"
  },
  {
    "text": "we're just choosing behavior and that blew my mind because I think in code but",
    "start": "2718780",
    "end": "2727240"
  },
  {
    "text": "this made me think like a client and that broke my brain a little bit but the",
    "start": "2727240",
    "end": "2734980"
  },
  {
    "text": "good artifact from that is that it did make me be a little bit closer to the humanity of the project okay we decided",
    "start": "2734980",
    "end": "2741550"
  },
  {
    "text": "the function takes a password as its only parameter okay we also decided it returns a boolean to indicate whether the password was strong",
    "start": "2741550",
    "end": "2748540"
  },
  {
    "text": "or not right we also chose that for an empty password the result should always",
    "start": "2748540",
    "end": "2753910"
  },
  {
    "text": "be false to indicate an empty password is weak all right implemented that pretty easy and number five we finally",
    "start": "2753910",
    "end": "2761730"
  },
  {
    "text": "implemented the code so these are the five steps that I was able to break down and think about that really started me",
    "start": "2761730",
    "end": "2769570"
  },
  {
    "text": "to go because I'm I don't do well without examples I need to know examples of how to do things the problem is that",
    "start": "2769570",
    "end": "2776589"
  },
  {
    "text": "takes away creativity if I just look at how an example of a red green refactor test I will always think that way that",
    "start": "2776589",
    "end": "2784359"
  },
  {
    "text": "takes away almost all the creativity on how I think about problems so all I will only ever do it this way",
    "start": "2784359",
    "end": "2790170"
  },
  {
    "text": "so this this five steps kind of allowed me to still kind of retake the creative",
    "start": "2790170",
    "end": "2795250"
  },
  {
    "text": "part of my brain because implement code it's very self-explanatory right we'll just add",
    "start": "2795250",
    "end": "2800260"
  },
  {
    "text": "the smallest amount of code that makes the test pass right if we were to continue developing the password strength function all we do is just",
    "start": "2800260",
    "end": "2807970"
  },
  {
    "text": "repeat steps one through five or sorry three through five yes yes three through five that's correct and she was the next",
    "start": "2807970",
    "end": "2813940"
  },
  {
    "text": "tiny step to make step four at tests at five on who might repeat that's all I did and really we're already doing that",
    "start": "2813940",
    "end": "2822930"
  },
  {
    "text": "anyway without TDD we just didn't think about it formally so then it stopped feeling so foreign",
    "start": "2822930",
    "end": "2830240"
  },
  {
    "text": "right if you keep advancing in small steps like this tdd some suddenly becomes a lot easier yes you might end",
    "start": "2830240",
    "end": "2837140"
  },
  {
    "text": "up with several tests for a very small amount of code but that's not a bad thing okay so TDD kind of helps you in",
    "start": "2837140",
    "end": "2843320"
  },
  {
    "text": "this way to reduce the amount of useless code you might otherwise write you're",
    "start": "2843320",
    "end": "2849350"
  },
  {
    "text": "not really sure if it really affects it because you can give it a cursory glance and have you ever done this where you've",
    "start": "2849350",
    "end": "2854660"
  },
  {
    "text": "asked another up here or perhaps the senior above you to like look at it and they see something right away you're",
    "start": "2854660",
    "end": "2860240"
  },
  {
    "text": "like you don't need to assign that to a variable just return the result why are you doing that this is an extra step it",
    "start": "2860240",
    "end": "2867470"
  },
  {
    "text": "does work but it's a waste of code why are you doing that and this actually",
    "start": "2867470",
    "end": "2872480"
  },
  {
    "text": "prevents that from ever happening what do you think about it because every line",
    "start": "2872480",
    "end": "2879140"
  },
  {
    "text": "of code you add is verified by a test so you're not allowed to write production code without a test it's both it's the",
    "start": "2879140",
    "end": "2885980"
  },
  {
    "text": "most wonderful and an infuriating process I don't think I've ever been through but it taught me a lot of lessons about how quickly my brain skips",
    "start": "2885980",
    "end": "2893060"
  },
  {
    "text": "to the next exciting thing instead of taking the steps in between I'd be terrible at being able to program a",
    "start": "2893060",
    "end": "2900860"
  },
  {
    "text": "robot because if I just say okay you got a walking out turn right and and left yeah but what does it take to run what",
    "start": "2900860",
    "end": "2907160"
  },
  {
    "text": "does it take to walk what it takes a step well what is a step like I have to put my heel down first and then the middle of my foot and then step on my",
    "start": "2907160",
    "end": "2913490"
  },
  {
    "text": "you know there's there's a lot of tiny pieces to it but because we've had these",
    "start": "2913490",
    "end": "2919100"
  },
  {
    "text": "wonderful object-oriented programming exist for so long we don't think that way we're like go run there TURN RIGHT",
    "start": "2919100",
    "end": "2925430"
  },
  {
    "text": "because we have extra functions that just go do that for us so this kind of allowed me to take a step back almost on",
    "start": "2925430",
    "end": "2932810"
  },
  {
    "text": "that robotic level which sounded really tedious but it actually made me find ways to make things even more efficient",
    "start": "2932810",
    "end": "2939560"
  },
  {
    "text": "than what the framework allowed me to do you know that was that was an interesting kind of take away so",
    "start": "2939560",
    "end": "2947330"
  },
  {
    "text": "speaking of takeaways let's talk about some Q on shall we",
    "start": "2947330",
    "end": "2952060"
  },
  {
    "text": "if you do TV with Kotlin specifically it will avoid over architecting right with",
    "start": "2953300",
    "end": "2960110"
  },
  {
    "text": "tightly focused coding work on acceptance criteria right it had it only",
    "start": "2960110",
    "end": "2965120"
  },
  {
    "text": "is allowed to do things the acceptance criteria tells you to do and where the tests tell you to do it provides",
    "start": "2965120",
    "end": "2971390"
  },
  {
    "text": "confidence that those cascading code changes are flagged by failing tests so the moment you do something that changes",
    "start": "2971390",
    "end": "2977720"
  },
  {
    "text": "anything it really does tell you what it loves specifically about doing it in Kotlin is",
    "start": "2977720",
    "end": "2983960"
  },
  {
    "text": "because it adds a human readable style of executable test phrasing that is",
    "start": "2983960",
    "end": "2990320"
  },
  {
    "text": "awesome cuz I don't know about you but instead of looking at that I mean I really look",
    "start": "2990320",
    "end": "2996590"
  },
  {
    "text": "at that much much better I know it's not a lot of detail but this thing right",
    "start": "2996590",
    "end": "3002440"
  },
  {
    "text": "here probably saved me hours of debugging just being able to read that",
    "start": "3002440",
    "end": "3007450"
  },
  {
    "text": "okay because when you're starting to be in a large group of people every minute",
    "start": "3007450",
    "end": "3013150"
  },
  {
    "text": "is really important why live text meant for robots information meant for humans you know I for one would definitely go",
    "start": "3013150",
    "end": "3020050"
  },
  {
    "text": "for the second one but I know people who would prefer the first you know that's my fallible opinion anyway right so what",
    "start": "3020050",
    "end": "3027400"
  },
  {
    "text": "do you think yeah thank you very much",
    "start": "3027400",
    "end": "3032650"
  },
  {
    "text": "for listening to me today if you have any more questions about the journey that you two can go on to doing TDD as",
    "start": "3032650",
    "end": "3038140"
  },
  {
    "text": "Colin I'll be just outside thank you very much",
    "start": "3038140",
    "end": "3043310"
  },
  {
    "text": "[Applause]",
    "start": "3043310",
    "end": "3045630"
  }
]