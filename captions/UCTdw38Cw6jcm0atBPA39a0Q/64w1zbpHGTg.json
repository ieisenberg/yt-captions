[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "today we can be looking at sort of microSD composition patterns more to the point monolith decomposition patterns so",
    "start": "9559",
    "end": "15309"
  },
  {
    "text": "patterns that you make make use of when moving towards a micro service architecture my name's Sam Newman I've",
    "start": "15309",
    "end": "22550"
  },
  {
    "text": "written a book about micro services which should be there there is and I",
    "start": "22550",
    "end": "27619"
  },
  {
    "text": "also run my own training and advisory firm if you don't know more about what I do you can find information on my",
    "start": "27619",
    "end": "33440"
  },
  {
    "start": "33000",
    "end": "98000"
  },
  {
    "text": "website and I'm in the process of actually writing a brand new book called moneth - micro services which hopefully",
    "start": "33440",
    "end": "38829"
  },
  {
    "text": "should be out sort of towards the end of the summer there's more information my",
    "start": "38829",
    "end": "44120"
  },
  {
    "text": "website you can see it you can read an early version over there what we're going to be sharing what I'm going to be sharing with you today is some of the",
    "start": "44120",
    "end": "50870"
  },
  {
    "text": "themes from that book and some of the ideas from that book there's a lot more detail here but I wanted to give you a bit of a taste and really I think deal",
    "start": "50870",
    "end": "58820"
  },
  {
    "text": "with kind of a fundamental truth about micro service architectures which is for most people you are trying to transform",
    "start": "58820",
    "end": "65088"
  },
  {
    "text": "something you already have into a micro service architecture yeah it's very rare that you're starting with a blank sheet",
    "start": "65089",
    "end": "71240"
  },
  {
    "text": "of paper and you get to think all what should we do today it's not like that often you've got an",
    "start": "71240",
    "end": "76249"
  },
  {
    "text": "existing system that's got for whatever reason to a state where you are struggling to manage it always not",
    "start": "76249",
    "end": "81319"
  },
  {
    "text": "allowing you to do the things that you want to do and so you're looking to change it and of course micro services are very very you know buzzword",
    "start": "81319",
    "end": "87979"
  },
  {
    "text": "compliant and you think yes I need some of those so how do you take what you've got now and moved to that world and I'm",
    "start": "87979",
    "end": "94159"
  },
  {
    "text": "going to be sharing with you a few ideas and a few patterns associated those migrations today because it's what we",
    "start": "94159",
    "end": "99439"
  },
  {
    "text": "want right we want my nice little hexagonal micro service architecture and as I talk about a lot one of the main",
    "start": "99439",
    "end": "106579"
  },
  {
    "text": "things this architecture optimizes for is sort of reducing the cost and impact of change they try and come up with an",
    "start": "106579",
    "end": "113869"
  },
  {
    "text": "architecture and a set of deployment practices as well that allow us to make a change to a service and deploy that a",
    "start": "113869",
    "end": "120799"
  },
  {
    "text": "new version of that service into a production environment without having to change anything else is this facet of",
    "start": "120799",
    "end": "127069"
  },
  {
    "text": "independent deployability this characteristic of independent deploy ability is key to what micro services",
    "start": "127069",
    "end": "133490"
  },
  {
    "text": "are about micro services are an opinionated type of architecture one of the opinions we have is independent",
    "start": "133490",
    "end": "140450"
  },
  {
    "text": "deploy ability is good won't talk about some of the other opinions of Micra service architecture a bit later on",
    "start": "140450",
    "end": "146400"
  },
  {
    "text": "now of course micro services are most often can something compared to the",
    "start": "146400",
    "end": "151439"
  },
  {
    "text": "monolith right at least we've seen the monitors the big bad beast it's the worst thing in the world now and I'll",
    "start": "151439",
    "end": "158579"
  },
  {
    "text": "pity me I've got a model if you go home and say how was work today well you know I don't you know it was it",
    "start": "158579",
    "end": "164099"
  },
  {
    "text": "was tough we had to we had to do with a monolith it's become like some kind of all-consuming desire to kill them on a",
    "start": "164099",
    "end": "170459"
  },
  {
    "text": "lift which i think is a bit of a it's a bit ring wrongheaded actually but before we get into that we should talk about",
    "start": "170459",
    "end": "175799"
  },
  {
    "text": "what we mean when we talk about a monolith a sort of more dictionary definition of a monolith is something is",
    "start": "175799",
    "end": "182010"
  },
  {
    "text": "not divisible it's something that cannot be broken apart into pieces which already doesn't really make sense for",
    "start": "182010",
    "end": "188939"
  },
  {
    "text": "the arm on its because most of our Manas can but we typically talk about a monolith in the in the context of",
    "start": "188939",
    "end": "195299"
  },
  {
    "text": "deployment so talking about normally we're talking about a monolith as a unit of deployment so we can think of the",
    "start": "195299",
    "end": "201269"
  },
  {
    "start": "200000",
    "end": "480000"
  },
  {
    "text": "classic single process monolith well we take all of our code together and we bundle it into a single process and that",
    "start": "201269",
    "end": "208409"
  },
  {
    "text": "process gets deployed and that's our sort of deployment topology so if a simple deployment architecture and it",
    "start": "208409",
    "end": "214409"
  },
  {
    "text": "normally follows that all of our data is in one big giant database and just you",
    "start": "214409",
    "end": "221340"
  },
  {
    "text": "know sort of point out that this is actually a type of distributed system it's just a really simple one a",
    "start": "221340",
    "end": "226519"
  },
  {
    "text": "distributed system is one where you've got two computers talking to each other over about networks and this this does",
    "start": "226519",
    "end": "232709"
  },
  {
    "text": "fall into that bracket of course you'll also be serving data probably up information up onto a web page as well",
    "start": "232709",
    "end": "239519"
  },
  {
    "text": "therefore making it an even more distributed system so all the codes packaged together into a single process",
    "start": "239519",
    "end": "246419"
  },
  {
    "text": "or the data is stored in a single database and it's a two type of system",
    "start": "246419",
    "end": "251879"
  },
  {
    "text": "architecture which has done us very well indeed and there are lots of companies that have been incredibly successful building monolithic architectures even",
    "start": "251879",
    "end": "259500"
  },
  {
    "text": "if some of them now want to move away from that we have variations on this theme of course we have the modular",
    "start": "259500",
    "end": "265500"
  },
  {
    "text": "monolith which is embracing cutting-edge brand new ideas from the mid 60's about",
    "start": "265500",
    "end": "270690"
  },
  {
    "text": "decomposition of software so where this in this example where our code is still all host",
    "start": "270690",
    "end": "275730"
  },
  {
    "text": "together in a single process but the code is now broken down into modules those modules can be worked on",
    "start": "275730",
    "end": "282390"
  },
  {
    "text": "independently potentially by different teams and then we link those modules together to form the running process",
    "start": "282390",
    "end": "289340"
  },
  {
    "text": "these ideas are sound this works really well but it turns out that as an industry we are extremely bad at doing",
    "start": "289340",
    "end": "296730"
  },
  {
    "text": "this the only way the places where it does sort of work is when we're working with third-party software when we're",
    "start": "296730",
    "end": "303360"
  },
  {
    "text": "actually pulling and think about all the shared developer dependencies you have that's you're using modules that have had a defined boundary and you link with",
    "start": "303360",
    "end": "310590"
  },
  {
    "text": "those modules and get benefits what we've seen to be very bad at is building a system ourselves that we can decompose",
    "start": "310590",
    "end": "317130"
  },
  {
    "text": "into these modules again these IDs are not new and it would actually do is",
    "start": "317130",
    "end": "322560"
  },
  {
    "text": "quite a lot of good to go back and read the ideas of structure programming and the work done by David Parnas others in",
    "start": "322560",
    "end": "327960"
  },
  {
    "text": "the early 70s so this is nice but we still have a sort of typically a single unit of deployment a single process that",
    "start": "327960",
    "end": "334080"
  },
  {
    "text": "we're dealing with this is highly underrated for a number of my clients when they say should I go to micro",
    "start": "334080",
    "end": "339330"
  },
  {
    "text": "services I say no a good modular monolith is probably enough for many people it gives you some benefits one of",
    "start": "339330",
    "end": "346680"
  },
  {
    "text": "the key benefits the good modular decomposition can bring is the ability for you to have teams working",
    "start": "346680",
    "end": "352170"
  },
  {
    "text": "independently on separate models or modules rather you still have that coordination effort around deployment",
    "start": "352170",
    "end": "358710"
  },
  {
    "text": "but this is still a much more simple deployment topology it's a much simpler",
    "start": "358710",
    "end": "363930"
  },
  {
    "text": "distributed system to deal with there's another type of model if we can consider and that is the monolith which is say a",
    "start": "363930",
    "end": "370290"
  },
  {
    "text": "third party piece of software this could be something you're installing on premise this could be like a CRM this",
    "start": "370290",
    "end": "375330"
  },
  {
    "text": "could be SAP this could be Salesforce it could be a SAS product but a piece of software that has a high degree of",
    "start": "375330",
    "end": "381360"
  },
  {
    "text": "configuration and value to your company but there is effectively something that you buy licenses for which you can't",
    "start": "381360",
    "end": "387750"
  },
  {
    "text": "actively do much with apart from configuration you can't get into the internals of Salesforce and redesign the",
    "start": "387750",
    "end": "394050"
  },
  {
    "text": "architecture of that system you're sort of beholden to the architecture and the design as laid out by the providers so",
    "start": "394050",
    "end": "400380"
  },
  {
    "text": "there's lots of these are also monolithic software and a lot of my clients are actively building their own",
    "start": "400380",
    "end": "407220"
  },
  {
    "text": "software to migrate away from these systems and a challenge always is well how do I do an incremental migration of",
    "start": "407220",
    "end": "413880"
  },
  {
    "text": "effectively what is somebody else's big black box that's arrived in my premises and there are some things that we can do",
    "start": "413880",
    "end": "419970"
  },
  {
    "text": "the challenge with these types of systems is you typically have much less control or ability to change the",
    "start": "419970",
    "end": "426180"
  },
  {
    "text": "underlying system some of the techniques we'll talk about a bit later on do require you to have some degree of",
    "start": "426180",
    "end": "431880"
  },
  {
    "text": "ability to change the system there are those some things that we can do in these types of situations because most",
    "start": "431880",
    "end": "437250"
  },
  {
    "text": "of the time a lot these systems will actually expose a database directly which gives you some ability to do some",
    "start": "437250",
    "end": "442890"
  },
  {
    "text": "really dirty things if you want to just can be very useful and they often nowadays as well also expose an API",
    "start": "442890",
    "end": "449090"
  },
  {
    "text": "which opens them up for some kind of migration techniques things like the strangler fig pattern which we discuss a",
    "start": "449090",
    "end": "455220"
  },
  {
    "text": "bit later on so there are definitely things that we can do with the third party monolith the sort of cots product",
    "start": "455220",
    "end": "461790"
  },
  {
    "text": "although it's fair to say that you will have more limitations placed upon you in these situations we kind of had the",
    "start": "461790",
    "end": "468120"
  },
  {
    "text": "fourth type of monolith that we need to talk about today and it's it's one I suspect many of you have and in fact many of the people that claim to have",
    "start": "468120",
    "end": "474690"
  },
  {
    "text": "micro service architecture this is actually what they've got and that my friends is a thing called the distributed monolith which on the face",
    "start": "474690",
    "end": "481290"
  },
  {
    "start": "480000",
    "end": "557000"
  },
  {
    "text": "of it seems like an odd thing to say Moloch is a single thing but you're saying it's distributed so how can it be",
    "start": "481290",
    "end": "486870"
  },
  {
    "text": "a monolith no we talk about a monolith as being something that's non divisible hard to break apart a distributed",
    "start": "486870",
    "end": "493080"
  },
  {
    "text": "monolith is a distributed system that is so coupled together that you cannot",
    "start": "493080",
    "end": "498150"
  },
  {
    "text": "deploy pieces of it independently and in turn you actually tends to deploy the whole thing together there can be a",
    "start": "498150",
    "end": "503790"
  },
  {
    "text": "number of reasons why you I have a distributed monolith a lot of them have",
    "start": "503790",
    "end": "509280"
  },
  {
    "text": "their roots and of the the same problems that people have building modular software still crop up when building these kinds of architectures if you get",
    "start": "509280",
    "end": "515880"
  },
  {
    "text": "your module boundaries wrong if you don't adhere to the ideas of things like information hiding you can end up with",
    "start": "515880",
    "end": "522270"
  },
  {
    "text": "very coupled architecture you'll see the symptoms of this where you start doing things like trying to run up very small",
    "start": "522270",
    "end": "528060"
  },
  {
    "text": "changes in functionality and finding that those change in functionality always require changes or lots of parts",
    "start": "528060",
    "end": "534090"
  },
  {
    "text": "of your system every now and then even the micro service architecture you might have some cross-cutting changes required",
    "start": "534090",
    "end": "540300"
  },
  {
    "text": "but when that becomes the norm you start moving into a world having complexity about how you deploy your software the cost of deploying",
    "start": "540300",
    "end": "547379"
  },
  {
    "text": "software drastically increases the worst situations are when basically because it's so hard to decouple this",
    "start": "547379",
    "end": "553829"
  },
  {
    "text": "architecture people say well let's just release it all together and so come your next release okay we want to deploy one",
    "start": "553829",
    "end": "560489"
  },
  {
    "text": "little part of it but you know we'll just deploy the whole thing together because that's the only model that actually seems to make sense to us and",
    "start": "560489",
    "end": "566279"
  },
  {
    "text": "doesn't that look like a lot of fun doesn't it look like a lot of fun you've now got 15 different teams all trying to",
    "start": "566279",
    "end": "572100"
  },
  {
    "text": "coordinate right on Tuesday morning we're all going live at the same time on your mark get set go",
    "start": "572100",
    "end": "577709"
  },
  {
    "text": "what what do you mean that hasn't worked quick roll it all back phone the CTO you know these kinds of mass deployment",
    "start": "577709",
    "end": "583739"
  },
  {
    "text": "activities are an absolute disaster and are not much fun at all we end up having with these systems a very high cost of",
    "start": "583739",
    "end": "590309"
  },
  {
    "text": "change and a much larger scope deployments the larger the scope of the deployment the more risk there is",
    "start": "590309",
    "end": "596699"
  },
  {
    "text": "associated with the deployment the more chances something is going to go wrong so this is not good right a micro",
    "start": "596699",
    "end": "604230"
  },
  {
    "text": "service architecture fundamentally is all about trying to make it easier for us to release software and distributed",
    "start": "604230",
    "end": "609660"
  },
  {
    "text": "monoliths they might achieve other things for us but we have a higher cost of change with a distributed monolith",
    "start": "609660",
    "end": "616589"
  },
  {
    "text": "than we would with a single process monolith and so you may end up with sort",
    "start": "616589",
    "end": "621720"
  },
  {
    "text": "of the worst of both worlds this lovely release coordination activity sometimes this comes about because of a lack of or",
    "start": "621720",
    "end": "629489"
  },
  {
    "text": "not getting your service berendeys in the right place we'll talk about how you do that in a moment it could often come about because of sort of release",
    "start": "629489",
    "end": "635699"
  },
  {
    "text": "practices so some of you may have heard of a release practice called the release train which sounds like an exciting form",
    "start": "635699",
    "end": "642540"
  },
  {
    "text": "of transportation who wouldn't want to have a ride on the release train now the release train actually is a technique",
    "start": "642540",
    "end": "647939"
  },
  {
    "text": "that can be quite useful when trying to move organizations towards continuous delivery the way it works is you set up",
    "start": "647939",
    "end": "653999"
  },
  {
    "text": "two you said Isaiah a duration and you say that every four weeks all the software we've built in four weeks we",
    "start": "653999",
    "end": "659339"
  },
  {
    "text": "release all together and the idea is is that you actually decrease the duration of that train and get to smaller and",
    "start": "659339",
    "end": "666299"
  },
  {
    "text": "smaller pieces and then eventually you throw the rly the concept of the release train away altogether and move at to proper continuous",
    "start": "666299",
    "end": "673019"
  },
  {
    "text": "delivery and release on demand the problem is that many people see the released train as the goal and",
    "start": "673019",
    "end": "678940"
  },
  {
    "text": "the destination and we now have of course formally specified trademarked",
    "start": "678940",
    "end": "683950"
  },
  {
    "text": "laminated process maps out there that talk about how fantastic the release train is and mentioning no names but you",
    "start": "683950",
    "end": "691899"
  },
  {
    "text": "know this can cause some problems because now we have many organizations that see as aspirational this release",
    "start": "691899",
    "end": "697690"
  },
  {
    "text": "technique but what it ends up doing is it codifies and enshrines the idea that",
    "start": "697690",
    "end": "703120"
  },
  {
    "text": "we should release lots of software together and even if you don't start off with a distributed monolith you'll end",
    "start": "703120",
    "end": "708459"
  },
  {
    "text": "up with one if you keep doing this for too long so whether or not you've been told you've got to do safe do yourselves",
    "start": "708459",
    "end": "714430"
  },
  {
    "text": "a favor and only see the released train as a stepping stone onto a lot of much better ideas this idea of trying to",
    "start": "714430",
    "end": "722050"
  },
  {
    "text": "reduce the cost of change is really very important probably the best summation I think of the ideas behind some of the",
    "start": "722050",
    "end": "729070"
  },
  {
    "text": "ideas behind continuous delivery we're done by John Osborne out 10 years ago now this presentation is hard to track",
    "start": "729070",
    "end": "734950"
  },
  {
    "text": "down you can find the slides but if you can dig out the original presentation it's well worth it I think it's available to people who sign up the",
    "start": "734950",
    "end": "741339"
  },
  {
    "text": "Safari platform but in two slides he really distills down the concepts behind continuous delivery he talks about the",
    "start": "741339",
    "end": "748810"
  },
  {
    "text": "cost of change so here we have a long duration between releases the longer the",
    "start": "748810",
    "end": "753850"
  },
  {
    "text": "duration between each release the more things have changed the more things that have changed the sort of the higher the",
    "start": "753850",
    "end": "760180"
  },
  {
    "text": "risk of the deployment the more things there are to go wrong more importantly you get your software out less",
    "start": "760180",
    "end": "766149"
  },
  {
    "text": "frequently you have a release process you don't use as often and therefore there are more things to go wrong and what sometimes happens in these",
    "start": "766149",
    "end": "772420"
  },
  {
    "text": "situations is the release goes badly and people say right next time let's be even more careful or spend a lot longer over",
    "start": "772420",
    "end": "780190"
  },
  {
    "text": "the next release to put some more things in place and make sure we definitely don't make a mistake the next release takes even longer there's more",
    "start": "780190",
    "end": "786190"
  },
  {
    "text": "functionality and oh look you've got a whole lot of problems whereas the idea is you want to drastically reduce how",
    "start": "786190",
    "end": "792880"
  },
  {
    "text": "frequent I'd suggest eclis reduce how long it takes you to get software out you're looking at lots of small releases",
    "start": "792880",
    "end": "798220"
  },
  {
    "text": "of software this is what we're aiming for if each release is small in scope there",
    "start": "798220",
    "end": "803680"
  },
  {
    "text": "is less to go wrong it's easier to reason about any issues you might have if you have to rollback it's easier to",
    "start": "803680",
    "end": "809949"
  },
  {
    "text": "do you have the ability to roll forward if any of you have seen the accelerate state of",
    "start": "809949",
    "end": "814989"
  },
  {
    "text": "DevOps report and I definitely urge you to to read that it shows very clearly that the most high-performing IT teams",
    "start": "814989",
    "end": "820869"
  },
  {
    "text": "in the world they release software more frequently than anybody else and they have lower defect rates there used to be",
    "start": "820869",
    "end": "826660"
  },
  {
    "text": "this idea that you either go fast and break stuff will go slow and steady that's not true all the evidence now",
    "start": "826660",
    "end": "831879"
  },
  {
    "text": "shows us that is not true organizations which release really frequently have lower defect rates than",
    "start": "831879",
    "end": "837249"
  },
  {
    "text": "organizations that release infrequently so just work out which side of the equation that you want to be on because",
    "start": "837249",
    "end": "843039"
  },
  {
    "text": "you can't have your cake and eat it it turns out so if you are in a situation where you've got a release train try and",
    "start": "843039",
    "end": "849759"
  },
  {
    "start": "846000",
    "end": "897000"
  },
  {
    "text": "move away from that see it as a transitory stepping stone towards better mechanisms for deploying your software",
    "start": "849759",
    "end": "856329"
  },
  {
    "text": "if you're stuck with a release train because of your architecture or your organizational structure fix those",
    "start": "856329",
    "end": "862269"
  },
  {
    "text": "things but do not see this as a destination because even if you end up with it we start with a lovely beautiful",
    "start": "862269",
    "end": "867850"
  },
  {
    "text": "well factored architecture it won't stay that way for long you know the distributed monolith",
    "start": "867850",
    "end": "873369"
  },
  {
    "text": "fundamentally is not a great place to be and I have certainly worked in situations where I've advocated merging",
    "start": "873369",
    "end": "879489"
  },
  {
    "text": "things back together to properly redefine the service boundaries again before splitting it back out if you",
    "start": "879489",
    "end": "885549"
  },
  {
    "text": "can't find ways to do some change these things independently you may well be better off with a modular monolith",
    "start": "885549",
    "end": "892749"
  },
  {
    "text": "although I'd suggest if you're having trouble with this you might find a modular model it's difficult as well what we're aiming for here fantastic",
    "start": "892749",
    "end": "903089"
  },
  {
    "text": "it's all right it's not on this stage what we're aiming for here is is architecture which enables continuous",
    "start": "903089",
    "end": "909549"
  },
  {
    "text": "delivery and that's you know that's not surprising to me because I got into micro services because I was originally",
    "start": "909549",
    "end": "915699"
  },
  {
    "text": "someone who focused on continuous delivery how do I help people ship software more quickly and I realized",
    "start": "915699",
    "end": "921489"
  },
  {
    "text": "often the architecture that we had was one of the main inhibitors so I started looking at these architectural styles",
    "start": "921489",
    "end": "927459"
  },
  {
    "text": "that allows this that makes it much easier for us and lo this is about",
    "start": "927459",
    "end": "933059"
  },
  {
    "text": "organizational aspects this there's architectural aspects as well making this sort of stuff possible it's not",
    "start": "933059",
    "end": "938499"
  },
  {
    "text": "trivial work but it is worth doing when it comes to breaking down the monolith",
    "start": "938499",
    "end": "943809"
  },
  {
    "text": "though we've got to think about what we're breaking it down into and this is where domain-driven design comes into play so I know this is",
    "start": "943809",
    "end": "951310"
  },
  {
    "text": "something I think gets understated there's too much fixation on the technology side of this there's too many",
    "start": "951310",
    "end": "956770"
  },
  {
    "text": "people talking about kubernetes and service meshes and and those things are great and useful but are really fairly",
    "start": "956770",
    "end": "962500"
  },
  {
    "text": "uninteresting if you fundamentally get your logical architecture on domain driven design ends up being incredibly",
    "start": "962500",
    "end": "967840"
  },
  {
    "text": "useful to us here micro services are modeled around business domain we're",
    "start": "967840",
    "end": "973900"
  },
  {
    "text": "looking for high cohesion of business-related functionality and the",
    "start": "973900",
    "end": "979090"
  },
  {
    "text": "reason we want that is because once reduce the cost of change if my business functionality is smeared all over my",
    "start": "979090",
    "end": "984550"
  },
  {
    "text": "system a simple change in functionality may require changes across multiple services then I'm back into a world of",
    "start": "984550",
    "end": "991090"
  },
  {
    "text": "lots of release coordination and potentially a slippery slide into a distributed monolith so we're looking",
    "start": "991090",
    "end": "997660"
  },
  {
    "text": "for our ways to group our system logically into components which have",
    "start": "997660",
    "end": "1002670"
  },
  {
    "text": "high cohesion of business functionality and domain driven design it's a great way of doing this the original book sort",
    "start": "1002670",
    "end": "1009480"
  },
  {
    "text": "of on this was the the blue book by Eric Evans it's a really good book I know a lot of people have struggled with it so I would suggest probably the starter I",
    "start": "1009480",
    "end": "1016470"
  },
  {
    "text": "would start with domain driven design distilled by Vaughn Vernon Vaughn's here the conference I haven't had a chance to",
    "start": "1016470",
    "end": "1021600"
  },
  {
    "text": "say hello yet but I'm sure he's doing some talks you should definitely go and see him these two be great introductions",
    "start": "1021600",
    "end": "1027230"
  },
  {
    "start": "1027000",
    "end": "1417000"
  },
  {
    "text": "when I'm working with a team to do a system decomposition we starting with the monolith one of the first things",
    "start": "1027230",
    "end": "1033000"
  },
  {
    "text": "we'll do is we'll say look we need to come up with a domain model that represents what the scope of this",
    "start": "1033000",
    "end": "1038610"
  },
  {
    "text": "monolith is because the reality is your monolith is just a big mass of code it's",
    "start": "1038610",
    "end": "1043620"
  },
  {
    "text": "probably what Brian Foote calls a big ball of mud it is not going to be structured nicely around business",
    "start": "1043620",
    "end": "1049170"
  },
  {
    "text": "concepts it's going to be something that's grown organically over time sort of like a fungus and so we need to bring",
    "start": "1049170",
    "end": "1056070"
  },
  {
    "text": "at least a sense of what the logical ordering or modeling in here could be and so carrying out a domain modeling",
    "start": "1056070",
    "end": "1062310"
  },
  {
    "text": "exercise says okay if we think about how people use this system and the mental",
    "start": "1062310",
    "end": "1067380"
  },
  {
    "text": "models they have and the business processes we're operating we can come up with a domain model now that domain",
    "start": "1067380",
    "end": "1072870"
  },
  {
    "text": "model may not match how the code is organized but it does represent what it does",
    "start": "1072870",
    "end": "1078630"
  },
  {
    "text": "and it also represents a model that we would like to use going forward for our services architecture and so you start",
    "start": "1078630",
    "end": "1085110"
  },
  {
    "text": "to sort of get a sense of okay where are the different groupings of functionality inside this monolith and I use the",
    "start": "1085110",
    "end": "1091380"
  },
  {
    "text": "normal user technique like events storming and slowly what you'll stop will start happening it's out of the ashes of this model it'll start saying",
    "start": "1091380",
    "end": "1098100"
  },
  {
    "text": "okay well these are kind of the groupings of functionality we've got so in a situation here we've got invoicing",
    "start": "1098100",
    "end": "1103530"
  },
  {
    "text": "and order management and loyalty management and notifications functionality and any good domain model",
    "start": "1103530",
    "end": "1109800"
  },
  {
    "text": "also give you a sense of how these concepts are related and so straightaway we've got an interesting picture we're",
    "start": "1109800",
    "end": "1115650"
  },
  {
    "text": "starting to build out we have a logical representation of what our monolithic system does hopefully as a directed a",
    "start": "1115650",
    "end": "1122190"
  },
  {
    "text": "cyclical graph of dependencies if it's not a directed a cyclical graph of dependencies you have an issue because circular dependencies are kind of tricky",
    "start": "1122190",
    "end": "1129000"
  },
  {
    "text": "to implement so we started already we're getting useful information because one",
    "start": "1129000",
    "end": "1135240"
  },
  {
    "text": "of the big things we got to think about is where do we start our decomposition journey we've got this big monolithic",
    "start": "1135240",
    "end": "1141270"
  },
  {
    "text": "system and Manas do not start you know on day one they take years to grow",
    "start": "1141270",
    "end": "1146390"
  },
  {
    "text": "nurturing huge amounts of investment you're not going to kill this thing in a week even if that was your goal it's",
    "start": "1146390",
    "end": "1152550"
  },
  {
    "text": "going to be a multi-year journey so you start thinking about well how could we bake bright light off the first piece",
    "start": "1152550",
    "end": "1158360"
  },
  {
    "text": "this logical model is already giving you some information that makes it easier to reason about where you might want to",
    "start": "1158360",
    "end": "1164490"
  },
  {
    "text": "start so look at this and think well look wouldn't it be great if we extracted the notifications functionality but you realize that",
    "start": "1164490",
    "end": "1171360"
  },
  {
    "text": "looking at your logical domain model that that is likely to be quite difficult because it's such a core",
    "start": "1171360",
    "end": "1176760"
  },
  {
    "text": "domain concept inside your system therefore it's likely to be a problem to",
    "start": "1176760",
    "end": "1182280"
  },
  {
    "text": "extract from a code point of view lots of parts your system are going to need to use that notifications functionality",
    "start": "1182280",
    "end": "1187380"
  },
  {
    "text": "so if you want to extract that and rip that from the still-beating heart of your mainframe it's likely to have it be",
    "start": "1187380",
    "end": "1194070"
  },
  {
    "text": "a lot of work because you're gonna have all of these inbound dependencies that are going to have to be rerouted instead you can start thinking about things",
    "start": "1194070",
    "end": "1200220"
  },
  {
    "text": "further up in the stack that might be less enmeshed in the center of your system and may be easier to extract this",
    "start": "1200220",
    "end": "1207780"
  },
  {
    "text": "is quite useful exercise and then you should follow this up by actually looking at what the codes telling you to these month how far apart of these things sometimes the",
    "start": "1207780",
    "end": "1214560"
  },
  {
    "text": "right answer is to refactor your model if a little bits as the code more adequately represents these ideas it",
    "start": "1214560",
    "end": "1220950"
  },
  {
    "text": "guess makes it easier to move the challenge of course with this is that we",
    "start": "1220950",
    "end": "1226830"
  },
  {
    "text": "can approach is purely from a technical point of view and sort of exclude all understanding or context of our business",
    "start": "1226830",
    "end": "1233010"
  },
  {
    "text": "because here's the thing monoliths are not inherently bad micro-services aren't",
    "start": "1233010",
    "end": "1238440"
  },
  {
    "text": "inherently good and the goal is not to have micro-services right who cares about that you don't become successful",
    "start": "1238440",
    "end": "1245100"
  },
  {
    "text": "because you have micro-services your customers do not care great about micro",
    "start": "1245100",
    "end": "1251040"
  },
  {
    "text": "services they are a micro so his architecture is something you might choose to adopt because it's going to",
    "start": "1251040",
    "end": "1256590"
  },
  {
    "text": "help you fix some problems that your current architects you can't fit fix right you're trying to use a markzware",
    "start": "1256590",
    "end": "1262800"
  },
  {
    "text": "architecture to achieve something else it might be faster time-to-market it might be to handle scale better it",
    "start": "1262800",
    "end": "1270120"
  },
  {
    "text": "might be to improve the robustness of your application it might be to allow more people to work side-by-side without",
    "start": "1270120",
    "end": "1276630"
  },
  {
    "text": "getting in each other's ways those are the goals a micro service architecture is just a means to an end and there are",
    "start": "1276630",
    "end": "1281880"
  },
  {
    "text": "other means to that ends as well so the thing you're trying to achieve the goal",
    "start": "1281880",
    "end": "1287640"
  },
  {
    "text": "you're looking for will also factor into how you think about prioritizing that decomposition because on the one hand we",
    "start": "1287640",
    "end": "1294330"
  },
  {
    "text": "can think okay what is he what's the easy stuff for us to drag out of this system but you've got to balance that",
    "start": "1294330",
    "end": "1299490"
  },
  {
    "text": "and trade that off against those things you're actually trying to achieve for example I might find a piece of functionality that pops out really",
    "start": "1299490",
    "end": "1305850"
  },
  {
    "text": "nicely as a lovely well factored service but it's a piece of code that hasn't changed in the last 10 years and it just",
    "start": "1305850",
    "end": "1311550"
  },
  {
    "text": "works and if my goal is to ship software more quickly why am i spending my time",
    "start": "1311550",
    "end": "1317220"
  },
  {
    "text": "extracting functionality which we haven't changed for ages and have no plans to change so straightaway you've",
    "start": "1317220",
    "end": "1323280"
  },
  {
    "text": "got to bring that thinking in as well we can all you end up with a bit of a trade-off is certainly initially because",
    "start": "1323280",
    "end": "1328650"
  },
  {
    "text": "initially you do want some quick wins you want to get a couple of services extracted get those things into",
    "start": "1328650",
    "end": "1334980"
  },
  {
    "text": "production start learning from those experiences as quickly as possible because I just how we do things right",
    "start": "1334980",
    "end": "1340170"
  },
  {
    "text": "and you want a nice quick win you want to get confidence because as you do this",
    "start": "1340170",
    "end": "1345210"
  },
  {
    "text": "you'll get better at it process you'll work out the skills technology and techniques that work in your context so you want to adopt a sort",
    "start": "1345210",
    "end": "1352740"
  },
  {
    "text": "of an incremental approach to this journey so you end up sort of trading these things off in the one hand you've",
    "start": "1352740",
    "end": "1357960"
  },
  {
    "text": "got how easy is it to extract this piece of functionality into a micro service and you're trading that off against the",
    "start": "1357960",
    "end": "1365190"
  },
  {
    "text": "benefits of decomposition and that's what we're trying to deal with I also",
    "start": "1365190",
    "end": "1371429"
  },
  {
    "text": "know just pause for a moment and and just reiterate a point I made earlier the monolith has sort of become this",
    "start": "1371429",
    "end": "1377490"
  },
  {
    "text": "sort of replacement word for a legacy system and so that people are just assuming that monoliths are inherently",
    "start": "1377490",
    "end": "1383669"
  },
  {
    "text": "bad systems right the malla fundamentally isn't the enemy your goal",
    "start": "1383669",
    "end": "1388770"
  },
  {
    "text": "is rarely if ever to kill the monolith in these situations all it is is if the",
    "start": "1388770",
    "end": "1393960"
  },
  {
    "text": "malefic architect's you have right now isn't working for you you're looking to change it enough so it does the vast",
    "start": "1393960",
    "end": "1399240"
  },
  {
    "text": "majority of monolith migrations I've seen involved taking out a small portion",
    "start": "1399240",
    "end": "1404400"
  },
  {
    "text": "of the functionality from the monolith it's the function as you care about the most for whatever reason and quite often",
    "start": "1404400",
    "end": "1409980"
  },
  {
    "text": "the monolith continues to live he's just doing less stuff than it did before the monolith has become a micro leaf maybe",
    "start": "1409980",
    "end": "1415770"
  },
  {
    "text": "maybe that's for my next book not all monoliths are bad some monoliths bring us inspiration and knowledge and maybe",
    "start": "1415770",
    "end": "1423419"
  },
  {
    "start": "1417000",
    "end": "1574000"
  },
  {
    "text": "you know kickstart evolution who knows and some some somewhat questionable makeup anyway right the key thing I",
    "start": "1423419",
    "end": "1430740"
  },
  {
    "text": "wanted you to take away from this part of the talk is to remember you do actually need a good reason for your",
    "start": "1430740",
    "end": "1436559"
  },
  {
    "text": "migration if you don't have an understanding about what it is you're trying to achieve as a result of your",
    "start": "1436559",
    "end": "1443460"
  },
  {
    "text": "micro service migration it's going to be problematic for you because you will not understand how to prioritize your work",
    "start": "1443460",
    "end": "1449039"
  },
  {
    "text": "and then you're just like well what are you doing well you're just creating micro services for sake of it",
    "start": "1449039",
    "end": "1454409"
  },
  {
    "text": "it might be great for the CV but it's a pointless waste of time right so you what is it you're trying to achieve and",
    "start": "1454409",
    "end": "1460500"
  },
  {
    "text": "ideally you should be able to articulate that goal in terms of something that your end users would care about once",
    "start": "1460500",
    "end": "1467820"
  },
  {
    "text": "you've got a sense of what you're trying to achieve you can prioritize it oh it would be great if we could extract this this would give us so many benefits here",
    "start": "1467820",
    "end": "1473370"
  },
  {
    "text": "but oh look it's really difficult and you can use the consultants friend to help you now yes the quadrants so",
    "start": "1473370",
    "end": "1480120"
  },
  {
    "text": "we have a quadrant and so going from left to right we've got things which will give us more benefit if we extract",
    "start": "1480120",
    "end": "1485130"
  },
  {
    "text": "them from bottom to top we have things that are easier I mean it's not you put them out you do some analysis you say",
    "start": "1485130",
    "end": "1490710"
  },
  {
    "text": "I'd love to extract this but it's really difficult I'd love to extract this actually looks really easy great let's pick some of those things it's really",
    "start": "1490710",
    "end": "1497730"
  },
  {
    "text": "not rocket science right we're looking for these quick wins things that we could do quickly and easily that would",
    "start": "1497730",
    "end": "1502860"
  },
  {
    "text": "give us some benefit to help us get our releases out more quickly we're looking for this incremental decomposition we",
    "start": "1502860",
    "end": "1510779"
  },
  {
    "text": "want to be taking small parts out of our monolith extracting them deploying them into a production environment",
    "start": "1510779",
    "end": "1517429"
  },
  {
    "text": "integrating them with the monolith a lot of this is a learning journey you're going on a lot of the learnings from",
    "start": "1517429",
    "end": "1524940"
  },
  {
    "text": "this it's partly yes the work of extracting the monolith but most of your education is going to come from running",
    "start": "1524940",
    "end": "1530130"
  },
  {
    "text": "these things in production that's where the scary stuff comes from first that's what the stuff you can't necessarily",
    "start": "1530130",
    "end": "1535350"
  },
  {
    "text": "prepare yourself for get one microservice extracted from your monolith integrate the monolith and the",
    "start": "1535350",
    "end": "1542190"
  },
  {
    "text": "Micra service together get it deployed into production sit with it for a bit and then think about what you've done",
    "start": "1542190",
    "end": "1548880"
  },
  {
    "text": "and then decide should we do it again or was this a really bad idea",
    "start": "1548880",
    "end": "1554970"
  },
  {
    "text": "right I get sick and tired of people who extract this but they take a year out of",
    "start": "1554970",
    "end": "1560159"
  },
  {
    "text": "doing any feature delivery they couldn't they transform their monolith into a hundred fifty microservices and then",
    "start": "1560159",
    "end": "1566429"
  },
  {
    "text": "they deploy the whole thing at once and I get a phone call saying Sam it's really slow and we don't know what's causing it it's like yes that will",
    "start": "1566429",
    "end": "1572490"
  },
  {
    "text": "happen right don't don't get full into those traps that the days of the Big Bang rewrite are over we can't afford",
    "start": "1572490",
    "end": "1579510"
  },
  {
    "start": "1574000",
    "end": "1785000"
  },
  {
    "text": "that sort of stuff anymore because our customers want software to be delivered right Big Bang rewrites were great when",
    "start": "1579510",
    "end": "1585090"
  },
  {
    "text": "your customers expected to get software delivered once a year or once every two years you had a year window in which you",
    "start": "1585090",
    "end": "1590490"
  },
  {
    "text": "could pretend you could rewrite the whole system while no one was looking now your customers want software to be",
    "start": "1590490",
    "end": "1595590"
  },
  {
    "text": "delivered every week or every day some of the times these Big Bang rewrites don't work and and as Martin will point",
    "start": "1595590",
    "end": "1601020"
  },
  {
    "text": "out the only thing we guaranteed with a Big Bang rewrite is a Big Bang and they'll look I love an explosion in an",
    "start": "1601020",
    "end": "1607409"
  },
  {
    "text": "action film I don't necessarily want Big Bang's in my IT projects so if we're",
    "start": "1607409",
    "end": "1612750"
  },
  {
    "text": "thinking about so is migration and we don't want these big bang rewrites we want to keep delivering features to our customers we",
    "start": "1612750",
    "end": "1619770"
  },
  {
    "text": "have to find patterns that allow us to incrementally decompose our micro",
    "start": "1619770",
    "end": "1624840"
  },
  {
    "text": "service architecture because what we want to be able to do is get good at changing our architecture at the same",
    "start": "1624840",
    "end": "1630780"
  },
  {
    "text": "time as actually delivering new features well the most useful patterns are actually here is a surprisingly simple",
    "start": "1630780",
    "end": "1637020"
  },
  {
    "text": "looking pattern that comes in handy very often that's a pattern called the strangler fig pan it's actually named",
    "start": "1637020",
    "end": "1642240"
  },
  {
    "text": "after a type of plant noise live in Australia I loved living out there as many of you may be aware all the things",
    "start": "1642240",
    "end": "1648120"
  },
  {
    "text": "in Australia want to kill you the people are nice right but all the things on the land want to kill you're the animals on",
    "start": "1648120",
    "end": "1653429"
  },
  {
    "text": "the land this this the weather that wants to kill you the sea that wants to kill jellyfish and sharks even the",
    "start": "1653429",
    "end": "1659880"
  },
  {
    "text": "plants can be quite vicious this is a strangler fig it's a type of figures about twelve to species it's actually a",
    "start": "1659880",
    "end": "1665850"
  },
  {
    "text": "photograph taken in a rainforest in Queensland and what they do is they take root in the frost canopy so upon the",
    "start": "1665850",
    "end": "1671460"
  },
  {
    "text": "tree line so not on the floor but up well the leaves are and they extend their tendrils down they wrap themselves",
    "start": "1671460",
    "end": "1676650"
  },
  {
    "text": "around trees and they take root in the soil and over time they grow up and become bigger stronger vines that start",
    "start": "1676650",
    "end": "1683309"
  },
  {
    "text": "to look like trees so we're actually seeing here is the vine on the outside wrapped itself around the tree now once",
    "start": "1683309",
    "end": "1690240"
  },
  {
    "text": "that vine has built itself up enough it becomes a tree in its own right and if the underlying tree was built on dies",
    "start": "1690240",
    "end": "1696030"
  },
  {
    "text": "and rots away the tree doesn't care that the vine carries on living looking now like a tree and so it's sort of this",
    "start": "1696030",
    "end": "1702480"
  },
  {
    "text": "idea of taking existing structure in this case a tree wrapping the vine around it the vine couldn't stand up by",
    "start": "1702480",
    "end": "1708780"
  },
  {
    "text": "itself it needed something else to be supported on and then once it's replaced it you can take the tree away if you",
    "start": "1708780",
    "end": "1714210"
  },
  {
    "text": "want so Nature has a way of you know dealing with these things so in our software terms this can also be useful to us",
    "start": "1714210",
    "end": "1720090"
  },
  {
    "text": "because we can wrap our incrementally wrap our micro-service architecture around our existing monolithic",
    "start": "1720090",
    "end": "1727620"
  },
  {
    "text": "architecture allowing us to build on top of the model if make use of the moment",
    "start": "1727620",
    "end": "1733710"
  },
  {
    "text": "if make use of the important aspects of the monolith but incrementally my great functionality away from it and the nice",
    "start": "1733710",
    "end": "1739950"
  },
  {
    "text": "thing about these stronger applications is motely strangler fig patterns is they work very well actually for third party",
    "start": "1739950",
    "end": "1746250"
  },
  {
    "text": "products because they can offer just work at the API level of these systems when implementing Australia",
    "start": "1746250",
    "end": "1752940"
  },
  {
    "text": "patent this is a pattern that works generically across other types of architectures well you got kind of two building blocks right you got what's called asset capture this is the process",
    "start": "1752940",
    "end": "1759869"
  },
  {
    "text": "of identifying the functionality that you want to move so in our case we would be doing this by doing some domain",
    "start": "1759869",
    "end": "1765239"
  },
  {
    "text": "modeling exercises say ok this is the functionality that logically now needs to move and then what you need to be",
    "start": "1765239",
    "end": "1771269"
  },
  {
    "text": "able to do is you need to be able to intercept calls to their old the old location of that functionality and",
    "start": "1771269",
    "end": "1777389"
  },
  {
    "text": "divert them somewhere else instead this is actually written out really nicely over on Martin Fowler site and he's the",
    "start": "1777389",
    "end": "1783419"
  },
  {
    "text": "person that came up with this pattern name now when we talk about movement of functionality it might be that you're",
    "start": "1783419",
    "end": "1790830"
  },
  {
    "start": "1785000",
    "end": "2072000"
  },
  {
    "text": "actually copying and pasting code from an existing system it turns out that doesn't happen as much as I would like",
    "start": "1790830",
    "end": "1796820"
  },
  {
    "text": "partly because people have often got to the point where I know logically we do invoicing in here but the code is",
    "start": "1796820",
    "end": "1802799"
  },
  {
    "text": "everywhere in this monolith and it would take us weeks to refactor that code to find it let alone move it often as well",
    "start": "1802799",
    "end": "1809609"
  },
  {
    "text": "you might be changing technologies stack as you move to my experience architecture although I don't like doing that I would rather when you do your",
    "start": "1809609",
    "end": "1815369"
  },
  {
    "text": "migration at least initially you keep all of your technology choices the same because I think you've got enough stuff",
    "start": "1815369",
    "end": "1820919"
  },
  {
    "text": "going on right if you're a PHP shop build micro sources and PHP for a while before you start trying to change your",
    "start": "1820919",
    "end": "1826649"
  },
  {
    "text": "programming language so you might be lucky and be able to find the code and copy it and a copy is the important word",
    "start": "1826649",
    "end": "1833429"
  },
  {
    "text": "not cut copy often though what people didn't up doing is they rewrite that small piece of functionality you're",
    "start": "1833429",
    "end": "1839909"
  },
  {
    "text": "breaking down that rewrite there you I'm only having to rework the piece of functionality that I'm aiming to move so I've got to re-implement that logical",
    "start": "1839909",
    "end": "1846779"
  },
  {
    "text": "boundary so giving example of my point the most simple way of implementing a strangler fig and this is works really",
    "start": "1846779",
    "end": "1854009"
  },
  {
    "text": "well with any kind of system that's driven via HTTP so in this example here this could be a monolithic system where",
    "start": "1854009",
    "end": "1859470"
  },
  {
    "text": "we're intercepting HTTP underneath the user interface so calls are coming in from a UI this also could be a headless",
    "start": "1859470",
    "end": "1865590"
  },
  {
    "text": "application this could be actually I've done something similar to this with Salesforce where fxe Salesforce is the",
    "start": "1865590",
    "end": "1871200"
  },
  {
    "text": "monolith behind HTTP so the first thing we're going to need is some kind of proxy and it's actually something you",
    "start": "1871200",
    "end": "1878159"
  },
  {
    "text": "would do straightaway first one easy just stick a proxy between upstream calls and your monolith and that proxy does absolutely nothing",
    "start": "1878159",
    "end": "1885060"
  },
  {
    "text": "it just routes all calls through and we get that into production the reason we",
    "start": "1885060",
    "end": "1890070"
  },
  {
    "text": "do this cuz it's not doing anything functionally different for us but it's quite important what we've done is not",
    "start": "1890070",
    "end": "1895590"
  },
  {
    "text": "just given us a place where we can intercept and redirect calls later on but we're also starting to understand",
    "start": "1895590",
    "end": "1900600"
  },
  {
    "text": "the implications of adding Network hops so in this situation a call user comes straight into your monolith now it goes",
    "start": "1900600",
    "end": "1906480"
  },
  {
    "text": "viral proxy now that shouldn't add more than a few milliseconds of latency to your system it's a good idea to find out",
    "start": "1906480",
    "end": "1913680"
  },
  {
    "text": "if you've got a really crap Network as early as possible if this increases the latency of your calls by say 500",
    "start": "1913680",
    "end": "1919650"
  },
  {
    "text": "milliseconds you need to stop because you cannot do micro services on a network like that one of the clients I",
    "start": "1919650",
    "end": "1926160"
  },
  {
    "text": "work with years ago we had whole kinds of performance issues with our system until we realized that because of how",
    "start": "1926160",
    "end": "1931320"
  },
  {
    "text": "the networking was configured all calls between our services were going via a second country I think are doing being",
    "start": "1931320",
    "end": "1937170"
  },
  {
    "text": "routed via Luxembourg now that adds latency that's not good right so find",
    "start": "1937170",
    "end": "1942690"
  },
  {
    "text": "that out first just put this in keep an eye on the request times run it for a couple of weeks make sure you're happy you may already have an existing proxy",
    "start": "1942690",
    "end": "1950130"
  },
  {
    "text": "that you could use to do this for this purpose it'll just depend on who's in control that proxy you might want to put",
    "start": "1950130",
    "end": "1955350"
  },
  {
    "text": "your own in so you've got control over what's happening next you start building your service you can start implementing",
    "start": "1955350",
    "end": "1961620"
  },
  {
    "text": "your service you can be deploying your brand-new micro service into a production environment you can be",
    "start": "1961620",
    "end": "1967470"
  },
  {
    "text": "testing it in situ and it is safe to do so because right now no one's calling it the call set functionality are still",
    "start": "1967470",
    "end": "1974430"
  },
  {
    "text": "being served by the monolith when you're confident that your new service is ready you just change the proxy configuration",
    "start": "1974430",
    "end": "1979710"
  },
  {
    "text": "to rewrite the call that was going to your monolithic system and you route that instead over to your brand-new",
    "start": "1979710",
    "end": "1985530"
  },
  {
    "text": "micro service architecture so this could just be a straightforward proxy configuration you could get fancy and do",
    "start": "1985530",
    "end": "1990750"
  },
  {
    "text": "this with some kind of release flag system although there's a lot to be said we're just you know an entry Dan nginx file and over time you can keep",
    "start": "1990750",
    "end": "1998610"
  },
  {
    "text": "diverting more and more functionality away now we have to deal with state we haven't talked about data and state here",
    "start": "1998610",
    "end": "2004550"
  },
  {
    "text": "we're going to come back to that a bit later on but I have uses multiple times to great effect not just for micromesh",
    "start": "2004550",
    "end": "2010940"
  },
  {
    "text": "migrations but also for monolith migrations as well of mine Paul Hammond a she's on a nice write-up of different applications of",
    "start": "2010940",
    "end": "2017730"
  },
  {
    "text": "the strangler a strangler fig pattern from a number of different projects if",
    "start": "2017730",
    "end": "2022920"
  },
  {
    "text": "you wanna get an overview of where it can be used again one thing I do want to point out here though is although the implication of that picture you can see",
    "start": "2022920",
    "end": "2029310"
  },
  {
    "text": "there in Paul's post is that the goal is to kill the monolith in my experience it's extremely rare that that is actually the business goal unless you've",
    "start": "2029310",
    "end": "2036690"
  },
  {
    "text": "really got a burning platform like this is a mainframe system and all the people that know how to code in it are dead",
    "start": "2036690",
    "end": "2042420"
  },
  {
    "text": "right normally you're just moving enough stuff away until there's a reason to",
    "start": "2042420",
    "end": "2047580"
  },
  {
    "text": "come back and do the rest the nice thing about these strangler figs pattern usage is it allows you to stop at any stage in",
    "start": "2047580",
    "end": "2054090"
  },
  {
    "text": "net migration this is also the problem with a Big Bang rewrite you're nine months into finishing a 12-month rewrite",
    "start": "2054090",
    "end": "2060240"
  },
  {
    "text": "and suddenly your budget gets pulled we haven't released anything you've got nine months of just value gone away but",
    "start": "2060240",
    "end": "2065700"
  },
  {
    "text": "here if you stop a third of the way in you've got a third of the value released and deployed which is really valuable so",
    "start": "2065700",
    "end": "2073378"
  },
  {
    "start": "2072000",
    "end": "2115000"
  },
  {
    "text": "the strangler fig works really well when you've got the stuff sort of saw up up at the top of your call stack let's see if this is gonna work yeah so up here",
    "start": "2073379",
    "end": "2079320"
  },
  {
    "text": "right so I invoice seeing all the management stuff like that those are kind of things that if they're the top",
    "start": "2079320",
    "end": "2084450"
  },
  {
    "text": "of the call stack of your model it could be quite easy to grab and intercept but what about when you've got things that are sort of deeper inside your logical",
    "start": "2084450",
    "end": "2091290"
  },
  {
    "text": "stack like I can't intercept a call that sends a notification to one of my customers I can't intercept a call that",
    "start": "2091290",
    "end": "2098700"
  },
  {
    "text": "increments loyalty points in my in my loyalty account because those are sort",
    "start": "2098700",
    "end": "2103740"
  },
  {
    "text": "of done side effects of other things happening so if I want to start extracting this functionality this is when I do need to get my hands dirty",
    "start": "2103740",
    "end": "2110340"
  },
  {
    "text": "another pattern that works really well here again allowing us to do this in an incremental fashion it's a pattern called branch by",
    "start": "2110340",
    "end": "2116160"
  },
  {
    "start": "2115000",
    "end": "2310000"
  },
  {
    "text": "abstraction so branch by abstraction is often used by people who do trunk based development to avoid the need for",
    "start": "2116160",
    "end": "2121860"
  },
  {
    "text": "branching in source code but it's really useful here because it opens up some nice interesting rollout mechanisms the",
    "start": "2121860",
    "end": "2128760"
  },
  {
    "text": "way branch by abstraction works is firstly you've got to Cle create a clean abstraction around the piece of code",
    "start": "2128760",
    "end": "2134280"
  },
  {
    "text": "that you're going to change so this would require you to do some refactoring of your monolithic system so you'd be",
    "start": "2134280",
    "end": "2139350"
  },
  {
    "text": "grabbing all this invoicing Codel and notifications code together and putting in a box we sometimes call these boxes",
    "start": "2139350",
    "end": "2144840"
  },
  {
    "text": "classes switch on those some of you might be aware of right so you don't make it class or something like that then we",
    "start": "2144840",
    "end": "2149850"
  },
  {
    "text": "need an abstraction a switching abstraction point and that could be as simple as basically having that class",
    "start": "2149850",
    "end": "2155880"
  },
  {
    "text": "and then re routing all the calls into that class and now rather than just directly calling out to you know SMTP",
    "start": "2155880",
    "end": "2161340"
  },
  {
    "text": "servers or whatsapp api's they now come to your nice and notifications class to use that functionality and you know what",
    "start": "2161340",
    "end": "2167700"
  },
  {
    "text": "already if you do nothing else you've made your monolith better all right and maybe you'll be brave enough to make the",
    "start": "2167700",
    "end": "2174060"
  },
  {
    "text": "rest of your monolith better without having to build a mic so its architecture but I'll leave that for you to consider so now we need the ability",
    "start": "2174060",
    "end": "2180090"
  },
  {
    "text": "to switch between this implementation of the functionality where our loyalty",
    "start": "2180090",
    "end": "2185250"
  },
  {
    "text": "points are our notifications are sent inside our process bounty are handled inside this monolith and we need to",
    "start": "2185250",
    "end": "2190710"
  },
  {
    "text": "create an implementation that's going to call out to our services so once we've done this of first step we then create",
    "start": "2190710",
    "end": "2196470"
  },
  {
    "text": "an abstraction point that allows us to switch implementations and that could be as simple as having an interface for",
    "start": "2196470",
    "end": "2202410"
  },
  {
    "text": "your class the current interface of that you implement is the current monolith implementation so you could call it the",
    "start": "2202410",
    "end": "2209220"
  },
  {
    "text": "monolithic notifications class that implements the notifications interface if you say wish so next you start",
    "start": "2209220",
    "end": "2215100"
  },
  {
    "text": "working on the new implementation this service calling implementation is really just going to be a bunch of client calls",
    "start": "2215100",
    "end": "2221340"
  },
  {
    "text": "that are going to call out to your service like this right at this point you will be you'll be checking this in",
    "start": "2221340",
    "end": "2227040"
  },
  {
    "text": "this has be something you'll be working on while doing other features you'll be checking this in to the same piece of code you can coexist",
    "start": "2227040",
    "end": "2233070"
  },
  {
    "text": "both implementations cleanly because only one of them is the live code path and that's the existing implementation",
    "start": "2233070",
    "end": "2238500"
  },
  {
    "text": "you can be deploying your brand-new service into production and testing in situ which gets a release process you're",
    "start": "2238500",
    "end": "2244500"
  },
  {
    "text": "happy with and that's safe to do so because it's not yet in the live code path once you're happy that the things",
    "start": "2244500",
    "end": "2250650"
  },
  {
    "text": "are working appropriately you basically just switch which implementation of the abstraction you're using this could be",
    "start": "2250650",
    "end": "2257340"
  },
  {
    "text": "done it's a typically done with a feature flag the nice thing of course is we haven't removed the old code if",
    "start": "2257340",
    "end": "2262710"
  },
  {
    "text": "there's a problem we just flicked the implementation back this could be a this would normally be a cookie this might be a compile time flag it could be a start",
    "start": "2262710",
    "end": "2269610"
  },
  {
    "text": "up time or even a runtime build toggle there's lots different ways of making that stuff work once you're really",
    "start": "2269610",
    "end": "2274620"
  },
  {
    "text": "confidently it's working well you might decide to anicut you'd nearly always clean where you definitely clean up the",
    "start": "2274620",
    "end": "2279630"
  },
  {
    "text": "feature flag once you no longer need it you may actually at that point also decided to remove the old code from the monolith",
    "start": "2279630",
    "end": "2284880"
  },
  {
    "text": "and now you're shrinking the monolith wouldn't that be nice like you're starting to slowly chip away that",
    "start": "2284880",
    "end": "2290010"
  },
  {
    "text": "functionality that last cleanup step is often optional and many people just leave that code lying around now that",
    "start": "2290010",
    "end": "2295619"
  },
  {
    "text": "process of getting code refactoring it behind a box kratie not a nice abstraction knowing how to do that well",
    "start": "2295619",
    "end": "2301680"
  },
  {
    "text": "we've obviously got the refracting book from Martin fan of the the latest edition actually came out the beginning of this year as well worth a read but",
    "start": "2301680",
    "end": "2308880"
  },
  {
    "text": "for this specific purpose I'd also recommend with this book by Michael feathers working effectively with legacy",
    "start": "2308880",
    "end": "2315180"
  },
  {
    "start": "2310000",
    "end": "2732000"
  },
  {
    "text": "codes an excellent book which talks about how you basically refactor code bases that might be a bit old",
    "start": "2315180",
    "end": "2320849"
  },
  {
    "text": "Michael's definition of legacy code is code without tests which is you know kind of valid and I think it works quite",
    "start": "2320849",
    "end": "2326910"
  },
  {
    "text": "well here this branch by abstraction patent because we can coexist both implementations in the code base at the",
    "start": "2326910",
    "end": "2332789"
  },
  {
    "text": "same time aside from reducing our merge pain and a need for branches it also opens up patterns like a parallel run so",
    "start": "2332789",
    "end": "2340890"
  },
  {
    "text": "with a parallel run pattern I can execute both implementations in production at the same time so whenever",
    "start": "2340890",
    "end": "2346890"
  },
  {
    "text": "a call comes in I send that call to both the existing implementation and the",
    "start": "2346890",
    "end": "2351990"
  },
  {
    "text": "brand-new implementation at once now this would be a terrible idea if you were doing this for sending emails",
    "start": "2351990",
    "end": "2358109"
  },
  {
    "text": "because you do not want to send emails twice but this can work quite well as a comparison mechanism the same calls",
    "start": "2358109",
    "end": "2364680"
  },
  {
    "text": "coming in both pieces of functionality of being executed and you can validate are they coming up with the same answers",
    "start": "2364680",
    "end": "2370650"
  },
  {
    "text": "because this is a true refactoring we're not trying to change the functionality of the software so we should get the",
    "start": "2370650",
    "end": "2376950"
  },
  {
    "text": "same answers I've used it for calculations before in something an",
    "start": "2376950",
    "end": "2382200"
  },
  {
    "text": "investment bank where we would run all of our pricing for these certain financial trades in parallel and at the",
    "start": "2382200",
    "end": "2388230"
  },
  {
    "text": "end of each day we'd have an excel sheet that came out with any discrepancies and then we'd go back and check why were those numbers different sometimes we",
    "start": "2388230",
    "end": "2394410"
  },
  {
    "text": "found we'd accidentally fixed bugs and sometimes our client may have put the bugs back in our new system but you know",
    "start": "2394410",
    "end": "2399660"
  },
  {
    "text": "what can you do I spoke to a real estate company up in Switzerland called home gate and they actually did",
    "start": "2399660",
    "end": "2405869"
  },
  {
    "text": "effectively a parallel run like this for their in for the listing upload system from their real estate agents so they",
    "start": "2405869",
    "end": "2411960"
  },
  {
    "text": "actually run both systems in parallel with when you've got both in point patience coexisted inside the same run",
    "start": "2411960",
    "end": "2417730"
  },
  {
    "text": "time you open up some really interesting possibilities like this to validate that your software's working correctly and",
    "start": "2417730",
    "end": "2423280"
  },
  {
    "text": "you can even also use it to do quite fine-grained canary rollouts as well inside that malefics stack we haven't",
    "start": "2423280",
    "end": "2430450"
  },
  {
    "text": "talked about data and state much and we have to think about that because well you know in this situation I've taken my",
    "start": "2430450",
    "end": "2436300"
  },
  {
    "text": "own voicing code I've ripped that out of the monolith but unfortunately my",
    "start": "2436300",
    "end": "2441610"
  },
  {
    "text": "invoicing service actually needs to access data to do its job and right now of course all the data lives in the",
    "start": "2441610",
    "end": "2447400"
  },
  {
    "text": "monolith and specifically in the monolithic database so we got to think well how do I get hold of my data so",
    "start": "2447400",
    "end": "2454540"
  },
  {
    "text": "well one option is just just just just go get the data right just go get it just directly access the Mullis database",
    "start": "2454540",
    "end": "2462280"
  },
  {
    "text": "now I'm I'm going to assume you're all grown-ups here this is not a good idea",
    "start": "2462280",
    "end": "2468490"
  },
  {
    "text": "as a long-term strategy if you're doing it for a couple of weeks or a few weeks before completing the migration fine but",
    "start": "2468490",
    "end": "2476230"
  },
  {
    "text": "be honest with yourselves because if you leave this in place you'll end up with a distributed model it's the fastest way",
    "start": "2476230",
    "end": "2482710"
  },
  {
    "text": "to get a distributed monolith is have lots of services all talking to the same database because it creates huge amounts",
    "start": "2482710",
    "end": "2489280"
  },
  {
    "text": "of coupling of implementation coupling okay so this is only something I would",
    "start": "2489280",
    "end": "2494590"
  },
  {
    "text": "count ins doing for a very short period of time your micro service migration of this invoicing service is not complete",
    "start": "2494590",
    "end": "2501040"
  },
  {
    "text": "if you've got this line in the mix the reason for this is we like to think about our micro services as being black",
    "start": "2501040",
    "end": "2507340"
  },
  {
    "text": "boxes the focus is on end-to-end slices of business functionality that means we need to include the data storage",
    "start": "2507340",
    "end": "2513070"
  },
  {
    "text": "we don't want outside parties reaching straight into our database because it becomes impossible for us to separate",
    "start": "2513070",
    "end": "2519280"
  },
  {
    "text": "what is shared from what is hidden we now have external parties coupled to our internal implementation detail this",
    "start": "2519280",
    "end": "2527050"
  },
  {
    "text": "is why you start getting into the problems where I make a change here and it breaks someone here Leslie Lamport says a distributed system is one where a",
    "start": "2527050",
    "end": "2534370"
  },
  {
    "text": "computer I never heard of starts my computer from work from working and this is a fantastic way of doing this have",
    "start": "2534370",
    "end": "2539980"
  },
  {
    "text": "all of your storages talk to a database then go and rename a column and see what happens and guess what you'd only find",
    "start": "2539980",
    "end": "2545500"
  },
  {
    "text": "out in production so instead we want to think about services if they want information from you that",
    "start": "2545500",
    "end": "2551530"
  },
  {
    "text": "you hold they come and ask you for that information via well-defined service interfaces that allows you to decide",
    "start": "2551530",
    "end": "2558370"
  },
  {
    "text": "what you shared or what is hidden it also makes it obvious to you as to who your consumers actually are so none of",
    "start": "2558370",
    "end": "2564220"
  },
  {
    "text": "this backdoor access of databases get rid of that you'll thank me later and it's really again is a cutting edge",
    "start": "2564220",
    "end": "2570490"
  },
  {
    "text": "idea called information hiding that only comes from 1970 so in this situation",
    "start": "2570490",
    "end": "2575880"
  },
  {
    "text": "invoicing these some data so we've got to think about what is the data the invoicing needs if the data that I need",
    "start": "2575880",
    "end": "2582430"
  },
  {
    "text": "is data that's really still owned by the monolith so if you think about it some",
    "start": "2582430",
    "end": "2587620"
  },
  {
    "text": "are domain model point of view my invoicing service needs to get information about orders the orders are",
    "start": "2587620",
    "end": "2594370"
  },
  {
    "text": "still logically managed by the monolith invoicing doesn't manage orders therefore it's appropriate for me to go",
    "start": "2594370",
    "end": "2599770"
  },
  {
    "text": "and ask the monolith for the information I want and so what I need to do is expose some kind of service interface on",
    "start": "2599770",
    "end": "2606400"
  },
  {
    "text": "the monolith itself in this situation I've exposed an API but this could be an event bus or some other projection so",
    "start": "2606400",
    "end": "2612580"
  },
  {
    "text": "I'm gonna go and ask them on if please can I have some of the information I like and now I'm accessing the database",
    "start": "2612580",
    "end": "2618820"
  },
  {
    "text": "indirectly and I'm also starting to define a new API here which could be the sign of another micro service that might",
    "start": "2618820",
    "end": "2625720"
  },
  {
    "text": "want to emerge later on this is really useful so the data you want is owned and",
    "start": "2625720",
    "end": "2631540"
  },
  {
    "text": "managed by another piece of code go to that code and ask it to get the data you want and this might help you start to",
    "start": "2631540",
    "end": "2638350"
  },
  {
    "text": "realize you know what behind the scenes here I think this is maybe another service that wants to be extracted it's",
    "start": "2638350",
    "end": "2643870"
  },
  {
    "text": "calling out to me so then you can get",
    "start": "2643870",
    "end": "2649120"
  },
  {
    "text": "that mice and you can see how that might continue you might then pull that orders service out and you pull another piece",
    "start": "2649120",
    "end": "2654940"
  },
  {
    "text": "out it's often what's happened you start putting a piece of string and it always more not so come out with it on the",
    "start": "2654940",
    "end": "2660910"
  },
  {
    "text": "other hand this is the more tricky undertaking what if the data you want is actually data you should be owning and",
    "start": "2660910",
    "end": "2666760"
  },
  {
    "text": "managing if we think about sort of services as encapsulating state machines the state that needs to change the",
    "start": "2666760",
    "end": "2673000"
  },
  {
    "text": "entire state machine is inside that service I need my data locally please give me my data well in that situation",
    "start": "2673000",
    "end": "2680200"
  },
  {
    "text": "we've got to get the data from here over to here so the source of truth the system",
    "start": "2680200",
    "end": "2686200"
  },
  {
    "text": "of record for invoicing related data is now the invoicing service and so too it's probably an obvious thing now we'd",
    "start": "2686200",
    "end": "2692890"
  },
  {
    "text": "need to invert that relationship we now need to change the monolith to come to the invoicing service for the data it",
    "start": "2692890",
    "end": "2699670"
  },
  {
    "text": "needs and actually that branch by abstraction pattern we shared earlier would be a great technique to make that work the kind of tricky bit is that",
    "start": "2699670",
    "end": "2707980"
  },
  {
    "text": "whole see what I did there is I just do some animations and I made a database split apart fortunately it's a bit more",
    "start": "2707980",
    "end": "2714910"
  },
  {
    "text": "tricky than that so putting databases apart is not fun but it is important",
    "start": "2714910",
    "end": "2720400"
  },
  {
    "text": "that you do it there's a whole bunch of technique so let's go run through a couple of example refactoring so give you some ideas about the types of",
    "start": "2720400",
    "end": "2726430"
  },
  {
    "text": "trade-offs that this can cause and and the challenges you may face but also show how it is very much possible so if",
    "start": "2726430",
    "end": "2733690"
  },
  {
    "start": "2732000",
    "end": "2776000"
  },
  {
    "text": "you're interesting doing some proper database refactoring I think this is the best book on database view factoring",
    "start": "2733690",
    "end": "2739750"
  },
  {
    "text": "because I think it's the only book on database refactoring it is actually very good though as well it's sort of the",
    "start": "2739750",
    "end": "2745120"
  },
  {
    "text": "database refactoring equivalent of martin fowler's refracting book i would also suggest you do this work in concert",
    "start": "2745120",
    "end": "2750730"
  },
  {
    "text": "with any change tool that allows you to define incremental sequel delta scripts",
    "start": "2750730",
    "end": "2756820"
  },
  {
    "text": "that can be version controlled and run in a deterministic fashion that sounds quite long-winded just use Flyway DB",
    "start": "2756820",
    "end": "2763660"
  },
  {
    "text": "that's the easiest thing just go use Flyway and you'll thank me later don't I don't like these database tipping tools",
    "start": "2763660",
    "end": "2769780"
  },
  {
    "text": "to this purpose I think Flyway is a much better idea let's take a look at the first example refactoring of a database",
    "start": "2769780",
    "end": "2775690"
  },
  {
    "text": "that we're trying to split apart so this is our sort of monolithic music shop I've been using the same domain for my",
    "start": "2775690",
    "end": "2781420"
  },
  {
    "start": "2776000",
    "end": "2961000"
  },
  {
    "text": "talks for a long time we are still against all odds selling CDs online I didn't claim that",
    "start": "2781420",
    "end": "2787150"
  },
  {
    "text": "we're making any profit but it's our core business and we're committed we decide to split apart our micro service architecture inside our monolithic",
    "start": "2787150",
    "end": "2794410"
  },
  {
    "text": "system we've identified our catalog related functionality and our finance related functionality and those are",
    "start": "2794410",
    "end": "2799990"
  },
  {
    "text": "going to be our two services that we're going to want to extract at the moment inside the database we've got the catalog looks after that it's data in a",
    "start": "2799990",
    "end": "2807490"
  },
  {
    "text": "line items table sis gives you like you have an ID that says ok this is this CD",
    "start": "2807490",
    "end": "2812560"
  },
  {
    "text": "is the the death polka Hits Vol to and it's 15 kronor so death polka is a",
    "start": "2812560",
    "end": "2820030"
  },
  {
    "text": "mash-up of death metal and polka now I thought I'd made that up and I was did",
    "start": "2820030",
    "end": "2825220"
  },
  {
    "text": "of course in Stavanger last year and someone started playing me death polka and it believe me it's all too real",
    "start": "2825220",
    "end": "2830830"
  },
  {
    "text": "so death polka the greatest hits of death polka vol 2 and then we've got the",
    "start": "2830830",
    "end": "2836440"
  },
  {
    "text": "ledger which is where we store our financial transactions and this is obviously data that the finance code",
    "start": "2836440",
    "end": "2841840"
  },
  {
    "text": "cares greatly about one of the things that we do is we generate a top 10 list of our best-selling CDs and the easiest",
    "start": "2841840",
    "end": "2848560"
  },
  {
    "text": "way for us to do this is to effectively do a select where we look at all the records in the ledger for the last week",
    "start": "2848560",
    "end": "2854590"
  },
  {
    "text": "group them by the ID of the item that's been sold to account sort by that count",
    "start": "2854590",
    "end": "2860650"
  },
  {
    "text": "we're getting a top 10 list now if we did that just on the ledger table we'd come back with just a whole load of ID's",
    "start": "2860650",
    "end": "2866620"
  },
  {
    "text": "where I want 10 IDs we weren't actually the name of the album's that we've sold so we would do a join operation we would",
    "start": "2866620",
    "end": "2873190"
  },
  {
    "text": "join those IDs against the line items table might use an ID or something called a SKU so stock keeping unit now",
    "start": "2873190",
    "end": "2880540"
  },
  {
    "text": "of course if we're going to make catalogue and finance two separate services this joint operation is a",
    "start": "2880540",
    "end": "2886240"
  },
  {
    "text": "problem because these will become two different databases as well so we have to sever that join that can't exist",
    "start": "2886240",
    "end": "2892830"
  },
  {
    "text": "instead what we're going to do is move the join up into the application tier so",
    "start": "2892830",
    "end": "2899530"
  },
  {
    "text": "this is obviously going to have some issues right so what we're going to end",
    "start": "2899530",
    "end": "2905170"
  },
  {
    "text": "up with is something that looks a bit like this so now we've gone from doing one database call and a join down in the",
    "start": "2905170",
    "end": "2912250"
  },
  {
    "text": "database we're now doing two database round-trips an extra network copy in between and the join operation is being",
    "start": "2912250",
    "end": "2917860"
  },
  {
    "text": "done the application tier I do not mean to offend any of you but I suggest that",
    "start": "2917860",
    "end": "2923050"
  },
  {
    "text": "you will not be able to implement a join operation as effectively and efficiently as people who have been building",
    "start": "2923050",
    "end": "2928420"
  },
  {
    "text": "databases like this the last 40 years they've got a lot of expertise in doing effective and efficient joins so this is",
    "start": "2928420",
    "end": "2934810"
  },
  {
    "text": "almost certainly going to have increased latency that might not necessarily be an issue when you split databases apart",
    "start": "2934810",
    "end": "2941410"
  },
  {
    "text": "often you can make systems faster because you can remove sort of bottlenecks and allow for parallel",
    "start": "2941410",
    "end": "2946810"
  },
  {
    "text": "processing but if you split databases apart and you're joining across that date this will have an impact though in our",
    "start": "2946810",
    "end": "2952450"
  },
  {
    "text": "case a top 10 list that we update once a week who cares it's not an issue but it might be so you've got to think about",
    "start": "2952450",
    "end": "2958480"
  },
  {
    "text": "that when you're looking to decompose your database it's more to think about of course we look inside are monolithic",
    "start": "2958480",
    "end": "2964150"
  },
  {
    "start": "2961000",
    "end": "3314000"
  },
  {
    "text": "schema here's our ledger we have a row we have a SKU column that's a foreign key relationship and that foreign key",
    "start": "2964150",
    "end": "2971230"
  },
  {
    "text": "relationship points the line items table foreign key relationships in a relational database improve the",
    "start": "2971230",
    "end": "2976240"
  },
  {
    "text": "performance of joins because it it basically tells the database that these things are connected you can carry out",
    "start": "2976240",
    "end": "2981280"
  },
  {
    "text": "you can generate things like secondary indices to make these operations faster but it also typically would give us",
    "start": "2981280",
    "end": "2987280"
  },
  {
    "text": "referential integrity it will ensure that we can't delete row 1 2 3 here from",
    "start": "2987280",
    "end": "2992290"
  },
  {
    "text": "the line items table because if we do it will say oh if we try to say hang on you can't that's going to violate",
    "start": "2992290",
    "end": "2997359"
  },
  {
    "text": "referential integrity so we use our database as a safety net to look for data inconsistency it's worth reflecting",
    "start": "2997359",
    "end": "3004500"
  },
  {
    "text": "of course that when we do that we don't rely on the database we'd normally have our application also stop you from doing",
    "start": "3004500",
    "end": "3010500"
  },
  {
    "text": "these things the database is just there to make sure you don't do it now of course when we go to two separate",
    "start": "3010500",
    "end": "3016380"
  },
  {
    "text": "schemas we have nothing that's going to enforce our referential integrity it's a couple this we've also have got to ask",
    "start": "3016380",
    "end": "3022349"
  },
  {
    "text": "the question what is our foreign key now in this example here I've changed the foreign key to a non opaque",
    "start": "3022349",
    "end": "3027750"
  },
  {
    "text": "URI which some people might like to do if they're building a rest-based system so I fir placed that Franchi with",
    "start": "3027750",
    "end": "3032849"
  },
  {
    "text": "actually HTTP resource that you could directly dereference now I don't know anyone that does this I wouldn't do it",
    "start": "3032849",
    "end": "3038880"
  },
  {
    "text": "probably myself the reasons there's a number of reasons firstly spitting databases apart is scary enough without",
    "start": "3038880",
    "end": "3045089"
  },
  {
    "text": "also changing your you know rewriting foreign key relationships in the database secondly people are always",
    "start": "3045089",
    "end": "3050849"
  },
  {
    "text": "worried what if I change how our lookup entries in the catalog thirdly in this situation I don't want to look up one",
    "start": "3050849",
    "end": "3057510"
  },
  {
    "text": "item when I go from the finance service over to the catalog service I'm going to look up 10 so does this mean I'm making",
    "start": "3057510",
    "end": "3063570"
  },
  {
    "text": "ten separate HTTP round trips up we wouldn't do that I want to make one call and pass all the IDS in so normally",
    "start": "3063570",
    "end": "3070050"
  },
  {
    "text": "people would just leave us as saying one two three so that means the finance service now needs to know that when it",
    "start": "3070050",
    "end": "3076020"
  },
  {
    "text": "sees one two three coming out that skew column if it wants to get that the related resource is going to have to go",
    "start": "3076020",
    "end": "3081810"
  },
  {
    "text": "and fetch that from somewhere or have that read in from somewhere so that's--that some smarts are now gonna have to be up in your application",
    "start": "3081810",
    "end": "3088109"
  },
  {
    "text": "the other thing of course is there's nothing is stopping us introducing inconsistency in our data so we have",
    "start": "3088109",
    "end": "3095819"
  },
  {
    "text": "some options option number one don't bother just just let people delete stuff in the catalog worst case scenario",
    "start": "3095819",
    "end": "3102270"
  },
  {
    "text": "your top 10 list says I don't know what this is but you might have to change your code right so you know our",
    "start": "3102270",
    "end": "3109109"
  },
  {
    "text": "bestseller this week was ID one to four but someone deleted the record in the database but we not great option number",
    "start": "3109109",
    "end": "3115260"
  },
  {
    "text": "two would be to maybe implement a cascading deletes or some people just do it do use events and do a cascading",
    "start": "3115260",
    "end": "3121920"
  },
  {
    "text": "delete so I delete a record from the catalog I fire an event and the event",
    "start": "3121920",
    "end": "3126960"
  },
  {
    "text": "gets picked up by the finance service and I use that to delete records in my financial ledger if you want to go to",
    "start": "3126960",
    "end": "3132510"
  },
  {
    "text": "prison really quickly that's a great option don't do that if vensica could be useful in a deletion",
    "start": "3132510",
    "end": "3137730"
  },
  {
    "text": "case if I delete a row from the catalog table I might fire an event and say this item has been deleted my finance service",
    "start": "3137730",
    "end": "3145079"
  },
  {
    "text": "could receive that event and say ah ok it's been deleted we're gonna take that data and store that locally as a hot",
    "start": "3145079",
    "end": "3151260"
  },
  {
    "text": "historic memory of what that actually looked like so you could use that to solve the problem in a different way the",
    "start": "3151260",
    "end": "3157710"
  },
  {
    "text": "really bad option here is before you delete something from the catalog check if anyone else is using it that's a",
    "start": "3157710",
    "end": "3164099"
  },
  {
    "text": "nightmare because it effectively is an explicit reverse dependency on every",
    "start": "3164099",
    "end": "3169410"
  },
  {
    "text": "single service it depends on you so now the catalog needs to know all the other services that might use its information",
    "start": "3169410",
    "end": "3174960"
  },
  {
    "text": "it needs to be gathered to able to go and ask all of them are you using this ID and even if you did all of that work",
    "start": "3174960",
    "end": "3182160"
  },
  {
    "text": "which by the way you absolutely should not it's still not guaranteed to work unless you also lock all of those remote",
    "start": "3182160",
    "end": "3188490"
  },
  {
    "text": "services because I could go out to the finance service they are using entry one two three I'm not using entry one two",
    "start": "3188490",
    "end": "3194010"
  },
  {
    "text": "three I say great okay I'll go and delete the record and just as I've been doing that you put a reference on entry",
    "start": "3194010",
    "end": "3199109"
  },
  {
    "text": "one two three the only way I can guarantee that would work would be to say okay I'm deleting it lock your",
    "start": "3199109",
    "end": "3204210"
  },
  {
    "text": "database I would do my deletion now unlock your database doesn't that sound like fun just say no rights in this",
    "start": "3204210",
    "end": "3211559"
  },
  {
    "text": "situation I would probably just not allow deletion do a shadow delete soldier problems the key things here is",
    "start": "3211559",
    "end": "3218340"
  },
  {
    "text": "a technologist point of view we can come up with five or six ways to solve that problem all of them have a business",
    "start": "3218340",
    "end": "3225720"
  },
  {
    "text": "impact they have impacts the way the system is used they impact the users of the system and so you would have to have",
    "start": "3225720",
    "end": "3232200"
  },
  {
    "text": "a conversation with your people who use a system to ask them what the right answer is now if this is the first time",
    "start": "3232200",
    "end": "3239220"
  },
  {
    "text": "they've heard about you building a micro service architecture and making changes they're going to go no no just don't allow that case but I've got to why now",
    "start": "3239220",
    "end": "3246990"
  },
  {
    "text": "if you're doing a micro service architecture you're implementing a micro silica service architecture to solve",
    "start": "3246990",
    "end": "3252660"
  },
  {
    "text": "legitimate business problems legitimate problems your users and stakeholders are having and you've talked to your",
    "start": "3252660",
    "end": "3258030"
  },
  {
    "text": "colleagues about what you're doing and got their input event storming exercises for coming up with two main model a",
    "start": "3258030",
    "end": "3263610"
  },
  {
    "text": "great place to get people on board then when you have this conversation it goes a lot smoother it goes do you know how",
    "start": "3263610",
    "end": "3269520"
  },
  {
    "text": "he's splitting apart our system so we can handle the customer load they go yep great I want that yeah I want that too",
    "start": "3269520",
    "end": "3275850"
  },
  {
    "text": "but I need to do that but this is going to happen if I do that what should we do that's a much easier conversation so",
    "start": "3275850",
    "end": "3282390"
  },
  {
    "text": "they always when you start breaking the system's apart you will end up creating some situations where the behavior of",
    "start": "3282390",
    "end": "3289110"
  },
  {
    "text": "the system will change and you can talk about the trade-offs from a technological point of view but you're",
    "start": "3289110",
    "end": "3295530"
  },
  {
    "text": "going to need to get input from the people use a system to understand what the right thing to do is let's look at",
    "start": "3295530",
    "end": "3302310"
  },
  {
    "text": "another one last example I'll skip over the the static reference data one kind",
    "start": "3302310",
    "end": "3307350"
  },
  {
    "text": "of give time for some questions let's take a look at another one that looks on the face of it to be quite a simple",
    "start": "3307350",
    "end": "3313220"
  },
  {
    "text": "decomposition so we have here our monolithic system we've got our catalog code in our warehouse code this is the",
    "start": "3313220",
    "end": "3319560"
  },
  {
    "text": "much earlier version of our architecture very simple basic database and each",
    "start": "3319560",
    "end": "3325050"
  },
  {
    "text": "throwing a database looks like this we have the name of the album that we're selling we have the amount and we have",
    "start": "3325050",
    "end": "3330120"
  },
  {
    "text": "the number of items in stock okay so this bit here seems related to a",
    "start": "3330120",
    "end": "3335280"
  },
  {
    "text": "catalogue service or a Catholic functionality and the stock levels seem very clearly something that the",
    "start": "3335280",
    "end": "3340320"
  },
  {
    "text": "warehouse cares about and normally what you would do to track this down would be to actually look at how your database",
    "start": "3340320",
    "end": "3347070"
  },
  {
    "text": "mappings are being used so if you're going through Lync or hibernate you'd actually should be able to track down okay both of these bits of code and loading",
    "start": "3347070",
    "end": "3353940"
  },
  {
    "text": "this table which ones care about this the most can we spit along maybe those",
    "start": "3353940",
    "end": "3359100"
  },
  {
    "text": "of logical lines and so this example is quite straightforward decomposition and I'm sure many of you have done this kind",
    "start": "3359100",
    "end": "3365160"
  },
  {
    "text": "of database refactoring in your past but we see we need to consider what happens when when Finance and cattle have become",
    "start": "3365160",
    "end": "3372150"
  },
  {
    "text": "a so and warehouse and catalogue becomes services in their own right let's imagine a brave new world where we have",
    "start": "3372150",
    "end": "3378090"
  },
  {
    "text": "three whole services so here they are the catalogue service the payment gateway in the warehouse service now",
    "start": "3378090",
    "end": "3385070"
  },
  {
    "text": "when you build a distributor system you have to deal with the fact that sometimes you can't talk to bits of the",
    "start": "3385070",
    "end": "3390690"
  },
  {
    "text": "de tributo system this could be because the service is actually down it could be because of a temporary network timeout",
    "start": "3390690",
    "end": "3397050"
  },
  {
    "text": "it could be because someone's disconnected to cable and all the packets are falling on the floor and you've got to stuff all the network",
    "start": "3397050",
    "end": "3402630"
  },
  {
    "text": "packets back in the cable before you can reconnect it right these things will happen with a simple distributed system",
    "start": "3402630",
    "end": "3408690"
  },
  {
    "text": "you see these bot equal partitions infrequently so a partition is where one part of a distributed system can't see",
    "start": "3408690",
    "end": "3415080"
  },
  {
    "text": "another part with a normal monolith the single process model if they happen very infrequently the more distributed the",
    "start": "3415080",
    "end": "3421740"
  },
  {
    "text": "system you have the more you are likely you are to see them especially if your network is poor it could be all sorts of",
    "start": "3421740",
    "end": "3427920"
  },
  {
    "text": "reasons and you have to think about what do your should your system do when these partitions occur sometimes they're so",
    "start": "3427920",
    "end": "3434310"
  },
  {
    "text": "short-lived that you can just work around and through retries okay a network timeout okay retry that up to",
    "start": "3434310",
    "end": "3441000"
  },
  {
    "text": "three times with an exponential back-off in between that's a standard thing connection libraries like hysterics and",
    "start": "3441000",
    "end": "3446070"
  },
  {
    "text": "poly do for you or service measures do for you or offload some of that by having a message broker to handle",
    "start": "3446070",
    "end": "3452430"
  },
  {
    "text": "guarantee delivery later on fine but sometimes there will actually be more",
    "start": "3452430",
    "end": "3457590"
  },
  {
    "text": "significant impacts let's take a look at our our organization here we're selling CDs online and for whatever reason we",
    "start": "3457590",
    "end": "3463770"
  },
  {
    "text": "are unable to talk to our warehouse and our warehouse managers our stock levels so we don't know what's in stock we know",
    "start": "3463770",
    "end": "3469500"
  },
  {
    "text": "how much something costs because that's in the catalogue we can take people's money because we've got a thin wrapper",
    "start": "3469500",
    "end": "3475110"
  },
  {
    "text": "around stripe and stripe is good and so it will work right this is good but we don't know if we've got any CDs in stock",
    "start": "3475110",
    "end": "3481130"
  },
  {
    "text": "this failure mode could not exist with your monolithic system because with your monolithic system",
    "start": "3481130",
    "end": "3487980"
  },
  {
    "text": "either the whole things up or the whole things down now if we can tolerate this particular situation then we actually",
    "start": "3487980",
    "end": "3494670"
  },
  {
    "text": "will make our system more robust because we can maintain some operations even when we have failure if we don't think",
    "start": "3494670",
    "end": "3501600"
  },
  {
    "text": "about this though we could end up with a system that will decide what it wants to do without us being involved he's the question now I'm gonna ask all",
    "start": "3501600",
    "end": "3508080"
  },
  {
    "text": "of you in this situation we know how much something costs but we don't know if it's in stock but we can take",
    "start": "3508080",
    "end": "3515280"
  },
  {
    "text": "people's money put your hands up should we keep selling CDs wait it has",
    "start": "3515280",
    "end": "3521150"
  },
  {
    "text": "you capitalist but right ok hands up if we shouldn't sell CDs you naive fools",
    "start": "3521150",
    "end": "3528780"
  },
  {
    "text": "right um ecommerce companies they keep selling the CDs in this situation the",
    "start": "3528780",
    "end": "3535110"
  },
  {
    "text": "reasons actually quite straightforward they're business reasons if I sell you a CD and take your money and then find out",
    "start": "3535110",
    "end": "3541050"
  },
  {
    "text": "I don't have the CD I go sorry I offered to give you your money back or optionally back order the CD on the",
    "start": "3541050",
    "end": "3547580"
  },
  {
    "text": "other hand if I don't sell CDs at all no one's happy I'm not making any money I",
    "start": "3547580",
    "end": "3553590"
  },
  {
    "text": "can't sell the CDs I do actually have and guess what my customers are annoyed they can't buy the CD and they'll go buy",
    "start": "3553590",
    "end": "3559560"
  },
  {
    "text": "it somewhere else anyway and they won't come back so that's why CD companies make that switch trains the business",
    "start": "3559560",
    "end": "3565290"
  },
  {
    "text": "domain we're sitting concert tickets you get a very different answer I think I've got tickets to see a hidden Metallica",
    "start": "3565290",
    "end": "3572910"
  },
  {
    "text": "geek they're playing in a small club around the corner next week my friends are flying over from Stavanger and",
    "start": "3572910",
    "end": "3578430"
  },
  {
    "text": "Trondheim we have a great party our sorry you don't really have any tickets",
    "start": "3578430",
    "end": "3584510"
  },
  {
    "text": "the amount of pain and suffering to your custom in that situation is distinctly",
    "start": "3584510",
    "end": "3589890"
  },
  {
    "text": "different you can't back order a ticket for an event so normally ticket companies in this",
    "start": "3589890",
    "end": "3595860"
  },
  {
    "text": "situation will shut them down because they know you'll come back why because they're the only ones are the tickets",
    "start": "3595860",
    "end": "3601400"
  },
  {
    "text": "right so different business contexts you make a different choice this actually this trade-off is actually",
    "start": "3601400",
    "end": "3607560"
  },
  {
    "text": "based on something called cap theory this is a much crap theories you ever need to know cap Theory basically says",
    "start": "3607560",
    "end": "3614130"
  },
  {
    "text": "that when you have a partition you have to trade off between consistency and availability when we take the money",
    "start": "3614130",
    "end": "3620070"
  },
  {
    "text": "we're saying it's more important that we maintain the ability to sell CDs that availability that operation is more",
    "start": "3620070",
    "end": "3626010"
  },
  {
    "text": "importantly important than having a consistent view of our data when we don't take the money we're saying",
    "start": "3626010",
    "end": "3631230"
  },
  {
    "text": "consistency of our system is more important to us than availability of that operation this is as much cap",
    "start": "3631230",
    "end": "3636420"
  },
  {
    "text": "series you ever need to know if someone ever tells you you can beat cap theory you can't don't worry about it it is a",
    "start": "3636420",
    "end": "3642750"
  },
  {
    "text": "common-sense trade-off but again you can have to take your customers on that journey with you we are over time I",
    "start": "3642750",
    "end": "3648240"
  },
  {
    "text": "apologize for that I'm going to happy to hang around for questions up we got on the side but thank you so much of your time if you want to see more stuff",
    "start": "3648240",
    "end": "3654690"
  },
  {
    "text": "there'll be the slide to be up by website later today and more information about a new book is there thank you",
    "start": "3654690",
    "end": "3660640"
  },
  {
    "text": "[Applause]",
    "start": "3660640",
    "end": "3669219"
  }
]