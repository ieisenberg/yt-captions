[
  {
    "start": "0",
    "end": "129000"
  },
  {
    "text": "so um there's a lot of ground to cover so let me speak a little bit about me first and then forget about me and just",
    "start": "440",
    "end": "6359"
  },
  {
    "text": "focus on the content uh my name is Abraham as you probably saw in the",
    "start": "6359",
    "end": "11480"
  },
  {
    "text": "agenda I'm an independent Java and Scala developer I have worked with other",
    "start": "11480",
    "end": "16520"
  },
  {
    "text": "languages in the past I've done a bit of net I've done a bit of Ruby I've done a bit of PHP I tried to",
    "start": "16520",
    "end": "24080"
  },
  {
    "text": "love those things behind I didn't enjoy them anyway um I set up independent but",
    "start": "24080",
    "end": "30720"
  },
  {
    "text": "I do most of my business with a company called equal experts they are um you could call them an agile um consultancy",
    "start": "30720",
    "end": "37680"
  },
  {
    "text": "they focus on digital transformation which is basically trying to help organizations",
    "start": "37680",
    "end": "43559"
  },
  {
    "text": "change the way they work and the way they design products via the use of Technologies you improve the technology",
    "start": "43559",
    "end": "49120"
  },
  {
    "text": "but you improve the technology that they have in the applications but also you try to improve their",
    "start": "49120",
    "end": "55079"
  },
  {
    "text": "processes um programming is not the only thing I do I also write for instance the",
    "start": "55079",
    "end": "60440"
  },
  {
    "text": "author of real world maintainable software this is a small mini book is free you can just Google it and download",
    "start": "60440",
    "end": "67080"
  },
  {
    "text": "it I'm also co-author of continuous delivery in Java which despite the name",
    "start": "67080",
    "end": "72920"
  },
  {
    "text": "is not all about Java they are especially the let's say devops stuff is",
    "start": "72920",
    "end": "78439"
  },
  {
    "text": "quite open is uh you know we talk about Docker and Amazon and azour Etc so",
    "start": "78439",
    "end": "83720"
  },
  {
    "text": "that's not specific uh to it it's currently on sale on Amazon for some",
    "start": "83720",
    "end": "88880"
  },
  {
    "text": "reason I don't know but if you use that QR code you can just go and buy a copy very",
    "start": "88880",
    "end": "94200"
  },
  {
    "text": "easily or if you don't want to buy a copy you could always just U take a look at some free chapters because um the",
    "start": "94200",
    "end": "100079"
  },
  {
    "text": "good guys of Microsoft um Azure decided to sponsor there so you can download those chapters and take a look for free",
    "start": "100079",
    "end": "106000"
  },
  {
    "text": "that's fine anyway um before I get into it I like my",
    "start": "106000",
    "end": "112360"
  },
  {
    "text": "presentations to be more interactive I don't like just being talking here for an hour and and making everyone go to",
    "start": "112360",
    "end": "119119"
  },
  {
    "text": "sleep so if you have any questions or any comments just raise your hand at that moment and we can cover it you",
    "start": "119119",
    "end": "124360"
  },
  {
    "text": "don't need to wait until the end if you want to wait until the end that's fine too but you don't need to okay right continuous integration",
    "start": "124360",
    "end": "132280"
  },
  {
    "start": "129000",
    "end": "249000"
  },
  {
    "text": "contined deployment builds etc etc if you compare the age of it and the",
    "start": "132280",
    "end": "140040"
  },
  {
    "text": "age of programming with how long we've had continu integration that's a relatively new practice and as such I",
    "start": "140040",
    "end": "147120"
  },
  {
    "text": "think there is still some um diversity in thought uh different people",
    "start": "147120",
    "end": "155519"
  },
  {
    "text": "understand different things when they talking about continuous integration continuous deployment and the different",
    "start": "155519",
    "end": "160879"
  },
  {
    "text": "understandings in my opinion they are not necessarily wrong it's not that there is a canonical view of what",
    "start": "160879",
    "end": "166640"
  },
  {
    "text": "continuous integration should be and if you do anything differently you're doing it wrong I don't believe that I think",
    "start": "166640",
    "end": "172720"
  },
  {
    "text": "you know you can just do whatever works for you and for your organization but it is important to know",
    "start": "172720",
    "end": "178640"
  },
  {
    "text": "what you have in mind whenever you discuss these things because otherwise you might be talking from different places so one thing that I'd like to do",
    "start": "178640",
    "end": "185239"
  },
  {
    "text": "first is explain what is my understanding of continuous integration and continuous deployment and by this I",
    "start": "185239",
    "end": "191080"
  },
  {
    "text": "don't mean to say you have to do this if you do it differently you're doing it wrong what I mean is everything that I",
    "start": "191080",
    "end": "196319"
  },
  {
    "text": "explain is going to be based on these principles so if there's anything that kind of grinds with you it's maybe because you'll have different principles",
    "start": "196319",
    "end": "203239"
  },
  {
    "text": "okay so first of all when I think of a build when I think is something or when I think of continuous deployment is the",
    "start": "203239",
    "end": "210480"
  },
  {
    "text": "practice and the tools that means that you make a change you push that to a shared repository like GitHub or",
    "start": "210480",
    "end": "217360"
  },
  {
    "text": "subversion or gitlab or whatever you're using and then that triggers a build which means you compile you test",
    "start": "217360",
    "end": "223480"
  },
  {
    "text": "everything and then that is deployed to production or if what you're building is a library that other things depend on",
    "start": "223480",
    "end": "231080"
  },
  {
    "text": "then once you finish compiling and testing that library then you create a",
    "start": "231080",
    "end": "236680"
  },
  {
    "text": "new compiled binary version of that library and everything that depends on it kicks a build as well so as to use a",
    "start": "236680",
    "end": "243120"
  },
  {
    "text": "new version of the library and make sure that it can work with a new version Etc and then you have a cascate",
    "start": "243120",
    "end": "250120"
  },
  {
    "start": "249000",
    "end": "540000"
  },
  {
    "text": "right when you're doing all these things and you're trying to tackle problems",
    "start": "250120",
    "end": "255560"
  },
  {
    "text": "that are several questions that you're going to have to face so there are three basic principles that I um engage with",
    "start": "255560",
    "end": "261479"
  },
  {
    "text": "whenever I do continuous integration continuous deployment the first question is a question of complexity versus",
    "start": "261479",
    "end": "267040"
  },
  {
    "text": "Simplicity and what I mean by this is say you have a slow build right say you",
    "start": "267040",
    "end": "272320"
  },
  {
    "text": "think you know this is taking actually let's do a quick um survey how many people have a fully automated continuous",
    "start": "272320",
    "end": "279840"
  },
  {
    "text": "integration continuous deployment pipeline okay how many of you does it",
    "start": "279840",
    "end": "285960"
  },
  {
    "text": "take 10 minutes or less that's pretty good how many of you",
    "start": "285960",
    "end": "291000"
  },
  {
    "text": "takes between 10 and 30 minutes okay 30 minutes to an",
    "start": "291000",
    "end": "297160"
  },
  {
    "text": "hour more than 1 hour more than two hours how",
    "start": "297160",
    "end": "304919"
  },
  {
    "text": "long that's big that's I'd be interesting to know to know more about it",
    "start": "305880",
    "end": "312160"
  },
  {
    "text": "anyway this happens to everyone we have a build that takes longer that we wanted to take and there are usually two",
    "start": "312160",
    "end": "317759"
  },
  {
    "text": "approaches that you can have one is what I call the approach of complexity which means let's add stuff to it right and",
    "start": "317759",
    "end": "325039"
  },
  {
    "text": "that could be let's add uh more nodes to",
    "start": "325039",
    "end": "330400"
  },
  {
    "text": "our jenin or to our team City or whatever you're using to build so I can build more things in parallel or let's",
    "start": "330400",
    "end": "336280"
  },
  {
    "text": "use more powerful Hardware so I can get things quicker or let's do distribut",
    "start": "336280",
    "end": "341400"
  },
  {
    "text": "distributed compilation or cached compilation or things like that this can certainly help but to me that also has",
    "start": "341400",
    "end": "347960"
  },
  {
    "text": "the drawback of you adding more um moving parts that you have to manage",
    "start": "347960",
    "end": "354919"
  },
  {
    "text": "then is the other way the way of simplicity so why",
    "start": "354919",
    "end": "360160"
  },
  {
    "text": "do I like this because complexity when you try that path many times it ends up being a bit like this I don't know if",
    "start": "360160",
    "end": "366360"
  },
  {
    "text": "you've seen this before this is a a Goldberg this is called Goldberg machines which is usually like it's a",
    "start": "366360",
    "end": "372639"
  },
  {
    "text": "comical thing it's meant to be like a very um complex like an overly",
    "start": "372639",
    "end": "377960"
  },
  {
    "text": "convoluted Contraption to do very simple things in this case this guy has all this Machinery just to remind him that",
    "start": "377960",
    "end": "385280"
  },
  {
    "text": "he needs to posst that letter whenever he walks by the mailbox right and this is sometimes where ends",
    "start": "385280",
    "end": "391479"
  },
  {
    "text": "up happening we start adding things to our builds and the moment we know is that we have this super complicated thing that is impossible to",
    "start": "391479",
    "end": "397919"
  },
  {
    "text": "manage I prefer whenever I can sometimes you cannot but whenever I can I prefer to go the way of",
    "start": "397919",
    "end": "404360"
  },
  {
    "text": "Simplicity um there is a quote from The Little Prince that I quite like which says Perfection is not is achieved not",
    "start": "404360",
    "end": "411560"
  },
  {
    "text": "when there is nothing more to add but when there is nothing left to take away I take this to heart and I apply it to",
    "start": "411560",
    "end": "417440"
  },
  {
    "text": "the concept of builds and Contin ation and continuous deployment so I make my own version of this which is basically",
    "start": "417440",
    "end": "424479"
  },
  {
    "text": "the fastest build is the one you don't need to run so everything that I'm going to do in this presentation is always",
    "start": "424479",
    "end": "430440"
  },
  {
    "text": "identify things that I don't actually need to do and try to change the architector and the structure of my code",
    "start": "430440",
    "end": "437199"
  },
  {
    "text": "so I don't do those things okay so that's the first part that's the first of my values I said there are three this",
    "start": "437199",
    "end": "443440"
  },
  {
    "text": "is the first one second one oh sorry yes I jump ahead a little bit so",
    "start": "443440",
    "end": "450840"
  },
  {
    "text": "the way you achieve this is your build instead of we I know we talk about pipelines what I try to do is actually",
    "start": "450840",
    "end": "457400"
  },
  {
    "text": "instead of a pipeline create more of a network of interconnected bills so the idea is each of those bubbles is going",
    "start": "457400",
    "end": "463960"
  },
  {
    "text": "to be an independently buildable or Deployable um entity right so for",
    "start": "463960",
    "end": "470599"
  },
  {
    "text": "instance once in the middle will typically be libraries or modules that",
    "start": "470599",
    "end": "475680"
  },
  {
    "text": "you compile and you test and then when you have them you create a binary and you put them somewhere where you can use",
    "start": "475680",
    "end": "481120"
  },
  {
    "text": "them later and those banies are versions so you know which ones you're using and the idea is if I make a change to this",
    "start": "481120",
    "end": "487960"
  },
  {
    "text": "particular module then okay I'm going to kick a build that's going to compile that's going to test when it's ready I'm",
    "start": "487960",
    "end": "493840"
  },
  {
    "text": "going to create a binary I put it available and immediately after everything that depends on it in this case only this one is going to kick a",
    "start": "493840",
    "end": "500919"
  },
  {
    "text": "build so then it's going to get the latest version of this previous artifact again I'm going to compile I'm going to",
    "start": "500919",
    "end": "506440"
  },
  {
    "text": "test I'm going to make sure everything works and when that's ready then I'm going to create a new version of that",
    "start": "506440",
    "end": "511639"
  },
  {
    "text": "and I'm also going to put it available on my artifactory and then when that's finished then that's going to kick a",
    "start": "511639",
    "end": "517479"
  },
  {
    "text": "build of the dependencies right so whenever I change something my continuous deployment idea is I rebuild",
    "start": "517479",
    "end": "524320"
  },
  {
    "text": "everything that directly or indirectly depends on it and the idea is having the",
    "start": "524320",
    "end": "529920"
  },
  {
    "text": "picture of this graph structured in a way that I always rebuild as few things",
    "start": "529920",
    "end": "536560"
  },
  {
    "text": "as possible okay",
    "start": "536560",
    "end": "541160"
  },
  {
    "start": "540000",
    "end": "627000"
  },
  {
    "text": "right the way you achieve this it doesn't matter if you have a monolith or",
    "start": "541839",
    "end": "547000"
  },
  {
    "text": "a microservices architecture you can always achieve this kind of diagram you just get that in different ways if you",
    "start": "547000",
    "end": "552880"
  },
  {
    "text": "have a monolith what you do is you stop breaking it down right so you just do this basically you",
    "start": "552880",
    "end": "559519"
  },
  {
    "text": "have a big ball and then you don't have a big ball obviously this journey is not so easy so you do it step by step and",
    "start": "559519",
    "end": "565959"
  },
  {
    "text": "the idea is for instance you start from this part if this is your super application that maybe first you spin",
    "start": "565959",
    "end": "573000"
  },
  {
    "text": "out the back end right and now you have in instead of one ball you have two",
    "start": "573000",
    "end": "578360"
  },
  {
    "text": "balls you have the back end and then you have the application whenever you change the back end okay you have to build both",
    "start": "578360",
    "end": "583920"
  },
  {
    "text": "things because you will build this one first and then this one later but if you take something that is not the back end",
    "start": "583920",
    "end": "589360"
  },
  {
    "text": "you don't need to rebuild the back end you don't need to retest it you don't need to redeploy it you just need to work on this one and then you carry on",
    "start": "589360",
    "end": "596480"
  },
  {
    "text": "getting stuff out so for instance maybe you carve out the data model now you have three Bs and then maybe you say",
    "start": "596480",
    "end": "602480"
  },
  {
    "text": "okay I'm going to carve out the graphical components once you get to this point for instance you can already",
    "start": "602480",
    "end": "607680"
  },
  {
    "text": "see if I change my back end I only need to rebuild and retest these two modules",
    "start": "607680",
    "end": "615240"
  },
  {
    "text": "okay if I change the data model I have to rebuild everything but how often do you change your data model right this is how you slowly build something that is a",
    "start": "615240",
    "end": "621920"
  },
  {
    "text": "network and you only build and test the parts that you need whenever you make a",
    "start": "621920",
    "end": "627720"
  },
  {
    "start": "627000",
    "end": "770000"
  },
  {
    "text": "change micros Serv who has microservices ior yeah they cool yeah anyway same",
    "start": "627720",
    "end": "636120"
  },
  {
    "text": "Journey or different Journey Sol um same goal but the idea is now instead of breaking it down what you're going to do",
    "start": "636120",
    "end": "641920"
  },
  {
    "text": "is you're going to build them up right so initially you have your four or 400 Services all very",
    "start": "641920",
    "end": "648600"
  },
  {
    "text": "independent right they don't depend on each other they don't trigger bills on each other etc etc but then eventually",
    "start": "648600",
    "end": "654839"
  },
  {
    "text": "you realize you know what we're doing this stuff we're doing this uh logic and",
    "start": "654839",
    "end": "660440"
  },
  {
    "text": "actually we have the same logic in two of them what do you do do you keep the duplication or do you extract the",
    "start": "660440",
    "end": "666880"
  },
  {
    "text": "duplication so you only have it once maybe you extract it okay then you create a library and then whenever you",
    "start": "666880",
    "end": "673440"
  },
  {
    "text": "change a library you know you have to repo these two Services because they both depend on it and then you continue",
    "start": "673440",
    "end": "678680"
  },
  {
    "text": "this journey and then you keep adding features to your services and you realize huh there is another common set",
    "start": "678680",
    "end": "684040"
  },
  {
    "text": "of functionality here let's create another library and then eventually you have Li",
    "start": "684040",
    "end": "689279"
  },
  {
    "text": "liaries that depend on other libraries right and you keep on building this graph but actually the graph also builds",
    "start": "689279",
    "end": "695600"
  },
  {
    "text": "the other way because your services yes we call them",
    "start": "695600",
    "end": "700720"
  },
  {
    "text": "independent but they talk to each other which means they kind of depend on each other right if you change one and you",
    "start": "700720",
    "end": "707440"
  },
  {
    "text": "break that communication then you have a problem so you need to verify you're not breaking",
    "start": "707440",
    "end": "712519"
  },
  {
    "text": "that communication which means whenever you deploy one of this you actually need to have something",
    "start": "712519",
    "end": "718880"
  },
  {
    "text": "after to them that verifies that the communication is still working properly right you could have this people call it",
    "start": "718880",
    "end": "725720"
  },
  {
    "text": "in different ways some people call it integration test and people call it contract tests it doesn't matter how you",
    "start": "725720",
    "end": "730800"
  },
  {
    "text": "call them the thing is you have something there that verifies that the different Services can still talk to",
    "start": "730800",
    "end": "736120"
  },
  {
    "text": "each other right so then as I said regardless of whether you have a monolith or a",
    "start": "736120",
    "end": "742120"
  },
  {
    "text": "microservices architecture the point is you gradually go to this pattern of",
    "start": "742120",
    "end": "747839"
  },
  {
    "text": "having a network of independently Deployable independently buildable modules that whenever you change they",
    "start": "747839",
    "end": "755199"
  },
  {
    "text": "can skate the changes down right so for instance I just change",
    "start": "755199",
    "end": "761000"
  },
  {
    "text": "this so that means I have to rebuild this this this and this and run those tests but I do not need to run this two",
    "start": "761000",
    "end": "766880"
  },
  {
    "text": "and that is how I'm going to be saving time in my build I don't know if you have something",
    "start": "766880",
    "end": "773920"
  },
  {
    "start": "770000",
    "end": "805000"
  },
  {
    "text": "like this already this idea of um I make a change to one thing and that took us",
    "start": "773920",
    "end": "779240"
  },
  {
    "text": "another one and that to get another one if you do great if you don't there is another talk that I did a few years ago",
    "start": "779240",
    "end": "784839"
  },
  {
    "text": "with an example of how you can do this it's maybe a little bit of fashion at the moment because it uses um this",
    "start": "784839",
    "end": "791519"
  },
  {
    "text": "example Maven and subversion and team City but the principles stand you can",
    "start": "791519",
    "end": "797480"
  },
  {
    "text": "maybe take a look at it get the idea and then apply it to whatever technology that you're using at the",
    "start": "797480",
    "end": "803639"
  },
  {
    "text": "moment okay so that was the first principle I do Jump Ahead ahead a little bit the",
    "start": "803839",
    "end": "810720"
  },
  {
    "start": "805000",
    "end": "876000"
  },
  {
    "text": "second principle is about uh refactoring skills and very good test and testing skills",
    "start": "810720",
    "end": "817560"
  },
  {
    "text": "why because everything that I'm going to be saying is about changing this code",
    "start": "817560",
    "end": "822760"
  },
  {
    "text": "and moving this here and merging and splitting and stretching it's going to be like like you're making bread and",
    "start": "822760",
    "end": "828279"
  },
  {
    "text": "you're just nting that down right you're going to have to be able to process your code and change it very easily and very",
    "start": "828279",
    "end": "834600"
  },
  {
    "text": "confidently if you don't think you have those skills or if you think you do but the code base is not up to scratch it's",
    "start": "834600",
    "end": "841000"
  },
  {
    "text": "not it doesn't have good test cover it then you're going to struggle to do everything that I say here so if that is",
    "start": "841000",
    "end": "846120"
  },
  {
    "text": "the case take a look at these things or any other resources that you may know get",
    "start": "846120",
    "end": "852000"
  },
  {
    "text": "all those skills get those um tests running especially the first one I don't know if you're ready but that's",
    "start": "852000",
    "end": "858000"
  },
  {
    "text": "particularly useful to know what to do when you have a code base that doesn't have tests or that doesn't have good",
    "start": "858000",
    "end": "863800"
  },
  {
    "text": "tests because that's going to help you add tests to the code base before you make any changes to it and that's going",
    "start": "863800",
    "end": "869360"
  },
  {
    "text": "to give you the confidence that you need to do all the changes that we're going to see now okay and the third of the principles",
    "start": "869360",
    "end": "876639"
  },
  {
    "start": "876000",
    "end": "993000"
  },
  {
    "text": "is about safety who was at pcom last",
    "start": "876639",
    "end": "884079"
  },
  {
    "text": "night okay I promise I had this light already okay I didn't steal",
    "start": "884480",
    "end": "891279"
  },
  {
    "text": "it what I mean by this is um safety I'm going to be talking about architectural",
    "start": "891279",
    "end": "896399"
  },
  {
    "text": "changes right this is how people usually change the architecture of an",
    "start": "896399",
    "end": "901560"
  },
  {
    "text": "application I have my old architecture and then I have the new one and I'm going to flip a switch and hope for the",
    "start": "901560",
    "end": "908160"
  },
  {
    "text": "best right that's not how I like to do things I particularly avoid cases where",
    "start": "908160",
    "end": "916880"
  },
  {
    "text": "you have someone or a couple of people in the team that say we are changing the structure of the application so nobody",
    "start": "916880",
    "end": "923240"
  },
  {
    "text": "else can make changes otherwise we can step on each other's toes right I believe the world shouldn't stop just",
    "start": "923240",
    "end": "929199"
  },
  {
    "text": "because you're changing the architecture that should be seen as just another refactor and so everything that I'm",
    "start": "929199",
    "end": "934279"
  },
  {
    "text": "going to do is going to be done assuming that you can have some people doing normal work normal features some of the",
    "start": "934279",
    "end": "940759"
  },
  {
    "text": "people rearchitecturing the applications completely right so it's more something like this I took this picture in London",
    "start": "940759",
    "end": "947199"
  },
  {
    "text": "but I think it's common pretty much all over Europe right so here you have a case of someone wants to tear down a",
    "start": "947199",
    "end": "953519"
  },
  {
    "text": "building and build something else but the council has come and said yeah but we want to keep the Spirit of the stet",
    "start": "953519",
    "end": "959839"
  },
  {
    "text": "so you cannot touch the facade so what do you do you build some scaffolding around to protect your facade you tear",
    "start": "959839",
    "end": "967079"
  },
  {
    "text": "down everything that you don't want but your faad is still there intact then you build up the new thing you attach it and",
    "start": "967079",
    "end": "974000"
  },
  {
    "text": "then you can remove this colding so that's the strategy that I'm going to be following sometimes you will think all",
    "start": "974000",
    "end": "981519"
  },
  {
    "text": "these steps you're taking that's a bit too much you don't need all that maybe but it's safer this way that means you",
    "start": "981519",
    "end": "988279"
  },
  {
    "text": "can do all the these changes safely and without",
    "start": "988279",
    "end": "993399"
  },
  {
    "start": "993000",
    "end": "1019000"
  },
  {
    "text": "worry I'll be presenting five patterns obviously in the world there are many",
    "start": "995759",
    "end": "1000880"
  },
  {
    "text": "more patterns this is just some examples so one thing that I like to talk about first is some techniques why because I",
    "start": "1000880",
    "end": "1006759"
  },
  {
    "text": "will I will apply this these techniques in all my patterns but then if you encounter a situation different to the",
    "start": "1006759",
    "end": "1013519"
  },
  {
    "text": "ones I described just use these techniques and you can probably figure it out okay techniques",
    "start": "1013519",
    "end": "1019519"
  },
  {
    "start": "1019000",
    "end": "1104000"
  },
  {
    "text": "three the first one is about avoiding build phases we have a",
    "start": "1019519",
    "end": "1025400"
  },
  {
    "text": "build builds typically are you compile you test you deploy right deploy can be",
    "start": "1025400",
    "end": "1032959"
  },
  {
    "text": "if it's a service that means you put it into production or if it's a library that means you get the binary and you",
    "start": "1032959",
    "end": "1038400"
  },
  {
    "text": "put it available in some kind of um binary repository at factory Etc now we",
    "start": "1038400",
    "end": "1044918"
  },
  {
    "text": "can break this down further because test we have different types of test right you could say well we have test that",
    "start": "1044919",
    "end": "1051440"
  },
  {
    "text": "assert the internal logic of a component and there are test that assert the sorry",
    "start": "1051440",
    "end": "1057559"
  },
  {
    "text": "the integration logic of that component with all components right we usually call them the internal logic is usually",
    "start": "1057559",
    "end": "1064280"
  },
  {
    "text": "the unit tests and the integration logic many names depending on the scenario you",
    "start": "1064280",
    "end": "1069360"
  },
  {
    "text": "could talk about contract integration test n2n test smoke test etc etc etc it",
    "start": "1069360",
    "end": "1074440"
  },
  {
    "text": "doesn't matter how you call it the main point is to differentiate this why because you will realize that many times",
    "start": "1074440",
    "end": "1080760"
  },
  {
    "text": "you are kicking a build and whenever you kick a build you do all this but depending on the change that you're making maybe you don't need to recompile",
    "start": "1080760",
    "end": "1088280"
  },
  {
    "text": "or maybe you don't need to test the internal logic because only the external logic is affected so the idea is",
    "start": "1088280",
    "end": "1094480"
  },
  {
    "text": "identify whenever this is happening and then restructure the code so naturally",
    "start": "1094480",
    "end": "1099640"
  },
  {
    "text": "these faces that you think don't need to happen they don't happen the second one is about um",
    "start": "1099640",
    "end": "1107240"
  },
  {
    "start": "1104000",
    "end": "1180000"
  },
  {
    "text": "identifying and restra um and restruction sub buil um typical scenario you have a",
    "start": "1107240",
    "end": "1116000"
  },
  {
    "text": "library a and then you have b c and d that depend on it so whenever you change a you need to rebuild b c and d and then",
    "start": "1116000",
    "end": "1125200"
  },
  {
    "text": "if there are other things that depend on b c and d and then this change May concate",
    "start": "1125200",
    "end": "1130720"
  },
  {
    "text": "down now if you get a magnifying glass and you take a look at a and the dependencies between a and b c and d",
    "start": "1130720",
    "end": "1138480"
  },
  {
    "text": "sometimes it looks a bit like this right it happens that b c and d they don't necessarily depend on everything that is",
    "start": "1138480",
    "end": "1145760"
  },
  {
    "text": "inside a they just depend on bits of inside inside a if that is the case then",
    "start": "1145760",
    "end": "1151080"
  },
  {
    "text": "actually what you can do is split a into these three individual components so you do that with this picture now if I make",
    "start": "1151080",
    "end": "1158120"
  },
  {
    "text": "a change to let's say A2 before A2 was part of a which means I",
    "start": "1158120",
    "end": "1165280"
  },
  {
    "text": "had to rebuild A1 A2 A3 b c and d I had to rebuild everything after this change if I make a",
    "start": "1165280",
    "end": "1171480"
  },
  {
    "text": "change to A2 I have to rebuild A2 and D I'm not touching everything else and",
    "start": "1171480",
    "end": "1178240"
  },
  {
    "text": "that's how I'm saving time and then finally the last trick is transforming built-in dependencies into runtime",
    "start": "1178240",
    "end": "1186200"
  },
  {
    "start": "1180000",
    "end": "1216000"
  },
  {
    "text": "dependencies this together with the other things obviously has some drawbacks that are some um disadvantages",
    "start": "1186200",
    "end": "1192080"
  },
  {
    "text": "of doing things so it's always going to be a bit of a um a trade-off a balancing ad and you need to decide which problem",
    "start": "1192080",
    "end": "1198480"
  },
  {
    "text": "is hitting you harder and then that will tell you which option you need to take so that was good for an",
    "start": "1198480",
    "end": "1205320"
  },
  {
    "text": "introduction let's go for the",
    "start": "1205320",
    "end": "1208840"
  },
  {
    "start": "1216000",
    "end": "1568000"
  },
  {
    "text": "patterns decoupling API from implementation",
    "start": "1216480",
    "end": "1222159"
  },
  {
    "text": "okay typical scenario you have a library and you have something that depends on that Library here I call Web interace it",
    "start": "1222159",
    "end": "1229039"
  },
  {
    "text": "could be anything else it could be a web service it could be a batch",
    "start": "1229039",
    "end": "1234200"
  },
  {
    "text": "process it could be anything it's an application that depends on a library simple now let's say I make a change to",
    "start": "1234200",
    "end": "1240960"
  },
  {
    "text": "the library if I make a change to the library well obviously that means I need to recompile this I need to retest this",
    "start": "1240960",
    "end": "1247799"
  },
  {
    "text": "I need to create the new B put it available blah blah blah once that's ready then I need to kick this bill which means I need to compile it I need",
    "start": "1247799",
    "end": "1254120"
  },
  {
    "text": "to test it etc etc and then finally deploy now what happens if I make a",
    "start": "1254120",
    "end": "1259280"
  },
  {
    "text": "change to the internal implementation of the library but I don't change the",
    "start": "1259280",
    "end": "1264600"
  },
  {
    "text": "external Behavior right the contract so to speak is the",
    "start": "1264600",
    "end": "1269919"
  },
  {
    "text": "same do I need to recompile this well the code hasn't changed so I don't do I",
    "start": "1269919",
    "end": "1275760"
  },
  {
    "text": "need to rerun the unit tests of my web interface well again the code hasn't changed so I don't where the only thing",
    "start": "1275760",
    "end": "1283159"
  },
  {
    "text": "that I need to change is the common behavior of the implementation of the library and imp position of this and",
    "start": "1283159",
    "end": "1290000"
  },
  {
    "text": "then if everything is working correctly then I do need to redeploy this but there are a number of things that I'm doing that I don't want to",
    "start": "1290000",
    "end": "1296520"
  },
  {
    "text": "do I can avoid that if instead of having this picture I had something like",
    "start": "1296520",
    "end": "1302120"
  },
  {
    "text": "this I split on one side the API and on the other side the implementation of the",
    "start": "1302120",
    "end": "1307400"
  },
  {
    "text": "library so if I'm making a change to the internal logic of the library I'm making it here in",
    "start": "1307400",
    "end": "1313760"
  },
  {
    "text": "implementation in my build that's not a dependency of this which means I do not",
    "start": "1313760",
    "end": "1319080"
  },
  {
    "text": "recompile or retest the web interface what I do do is I create a new version of the of this",
    "start": "1319080",
    "end": "1325840"
  },
  {
    "text": "binary I put into artifactory and then I have this new job that I call the assembly which basically what it does is",
    "start": "1325840",
    "end": "1332799"
  },
  {
    "text": "it gets this binary and this binary puts them together runs all those integration",
    "start": "1332799",
    "end": "1338880"
  },
  {
    "text": "tests that verify that this Behavior can play with this behavior and then if everything is fine I deploy that to",
    "start": "1338880",
    "end": "1344720"
  },
  {
    "text": "production yeah okay how do we get to from one to the other so we start",
    "start": "1344720",
    "end": "1350120"
  },
  {
    "text": "here",
    "start": "1350120",
    "end": "1353120"
  },
  {
    "text": "sorry we start in this position the first thing that I'm going to do is just create a new",
    "start": "1357559",
    "end": "1363279"
  },
  {
    "text": "job I make it a dependency of the web interface and that job at the moment is",
    "start": "1363279",
    "end": "1368400"
  },
  {
    "text": "empty it doesn't really do anything so right now we haven't changed anything I still have all the dependencies that I",
    "start": "1368400",
    "end": "1374000"
  },
  {
    "text": "had before second thing that I'm going to do is I'm going to start looking at this",
    "start": "1374000",
    "end": "1379200"
  },
  {
    "text": "and I'm going to start looking particularly at the test and the deployment activities and I'm going to do that so I",
    "start": "1379200",
    "end": "1385559"
  },
  {
    "text": "can start moving to the assembly all the stuff that is testing the integration",
    "start": "1385559",
    "end": "1391320"
  },
  {
    "text": "between the web interface and the library and doing the deployment and doing whatever smoke test that I usually",
    "start": "1391320",
    "end": "1396880"
  },
  {
    "text": "run after deployment and what I will leave in this module is the compilation the unit test",
    "start": "1396880",
    "end": "1402360"
  },
  {
    "text": "and the contract test in this context when I talk about contract test what I mean is uh the test that are verifying",
    "start": "1402360",
    "end": "1410039"
  },
  {
    "text": "how this works against how this is supposed to work right against the external Behavior not against the actual",
    "start": "1410039",
    "end": "1415840"
  },
  {
    "text": "implementation it can external behavior of the library okay so I have done this now",
    "start": "1415840",
    "end": "1421039"
  },
  {
    "text": "right now I'm still doing the same amount of of uh work it's just that instead of doing it in two places and doing it in three places okay next step",
    "start": "1421039",
    "end": "1430240"
  },
  {
    "text": "we're going to look at the library internally and I'm going to make sure that inside that module I can clearly",
    "start": "1430240",
    "end": "1435880"
  },
  {
    "text": "identify what is the API and what is implementation and if I have to I'm",
    "start": "1435880",
    "end": "1440919"
  },
  {
    "text": "going to start doing some refactoring internally so maybe I have in different packages or different name spaces",
    "start": "1440919",
    "end": "1447240"
  },
  {
    "text": "clearly what is the API and what is implementation and once I have that I start changing this one",
    "start": "1447240",
    "end": "1454440"
  },
  {
    "text": "internally instead refactoring just to make sure that on compile time it only depends on the API",
    "start": "1454440",
    "end": "1461320"
  },
  {
    "text": "bit right in my configuration this is still one thing which means this technically",
    "start": "1461320",
    "end": "1468200"
  },
  {
    "text": "the depends on the whole thing but actually if you look at the code it's only using the beats in this particular",
    "start": "1468200",
    "end": "1473760"
  },
  {
    "text": "package or namespace right and hopefully I'm using dependence injection to get",
    "start": "1473760",
    "end": "1479000"
  },
  {
    "text": "the implementation and you will see why in a minute I'm using explicit wiring I don't",
    "start": "1479000",
    "end": "1485080"
  },
  {
    "text": "know what kind of uh depend injection tools you use typically people these",
    "start": "1485080",
    "end": "1490320"
  },
  {
    "text": "days use Auto wiring instead of specifying I want this particular class that's okay but for this moment do",
    "start": "1490320",
    "end": "1497520"
  },
  {
    "text": "explicit so explicitly say I want this class in this package or in this names",
    "start": "1497520",
    "end": "1503240"
  },
  {
    "text": "space why because now we're going to add another build",
    "start": "1503240",
    "end": "1509399"
  },
  {
    "text": "here that is just a copy of that but in a different package or in a different name space okay that means that whenever I",
    "start": "1509399",
    "end": "1516559"
  },
  {
    "text": "have this assembly I'm actually going to have temporarily the implementation twice because I'm going to have this one",
    "start": "1516559",
    "end": "1522679"
  },
  {
    "text": "on this one but because they are in different name spaces I'm not going to have a conflict right from the point of",
    "start": "1522679",
    "end": "1528520"
  },
  {
    "text": "view of code they look like they're two different things and this web interface is not really using that because we're making",
    "start": "1528520",
    "end": "1535159"
  },
  {
    "text": "explicit wiring which means we're using that names space and that implementation but once we're in this",
    "start": "1535159",
    "end": "1541000"
  },
  {
    "text": "point I can just change the configuration here to say actually don't",
    "start": "1541000",
    "end": "1546080"
  },
  {
    "text": "get the classes from this Nam space get it from the other and then that's the",
    "start": "1546080",
    "end": "1551760"
  },
  {
    "text": "one I'm using and that's the one that is unused code and the moment it becomes unused code I can just delete it",
    "start": "1551760",
    "end": "1558960"
  },
  {
    "text": "and then we in the final State all good questions okay let's go for the next one",
    "start": "1558960",
    "end": "1567919"
  },
  {
    "text": "slicing who has a um two tier or three tier or any tier application or has had",
    "start": "1567919",
    "end": "1576360"
  },
  {
    "start": "1568000",
    "end": "1901000"
  },
  {
    "text": "one of these multiple tier applications okay pretty people let's actually make the difference who has it",
    "start": "1576360",
    "end": "1582240"
  },
  {
    "text": "now a multi-tier application okay few but still still",
    "start": "1582240",
    "end": "1587960"
  },
  {
    "text": "some I don't know how you SL your application when you do something like that but this",
    "start": "1587960",
    "end": "1594039"
  },
  {
    "text": "is a very common thing right you would maybe have different modules and one of your modules is your persistence and the",
    "start": "1594039",
    "end": "1600919"
  },
  {
    "text": "other one is your validation or your business logic and the other one is your front end and then you put all those things together into the web service or",
    "start": "1600919",
    "end": "1608399"
  },
  {
    "text": "web application or whatever you're doing okay now this is",
    "start": "1608399",
    "end": "1613640"
  },
  {
    "text": "fine but when you look at things I mean you yes you have persistence and validation and front end but you also",
    "start": "1613640",
    "end": "1619919"
  },
  {
    "text": "have uh different domains different aspects within your application right so",
    "start": "1619919",
    "end": "1625320"
  },
  {
    "text": "for instance you may have some uh account management for your users to",
    "start": "1625320",
    "end": "1630440"
  },
  {
    "text": "manage their own account to say oh this is my address or this is my email",
    "start": "1630440",
    "end": "1635760"
  },
  {
    "text": "Etc and that account is going to have to be spread across all modules right",
    "start": "1635760",
    "end": "1641840"
  },
  {
    "text": "because you can have the pages for the account you can have the business Logic for the account and then you're going to have all the persistence on how to say",
    "start": "1641840",
    "end": "1648320"
  },
  {
    "text": "the det of this account and now say you have your Communications preference again that's going to be spread in all",
    "start": "1648320",
    "end": "1655120"
  },
  {
    "text": "modules because you need persistance validation and front end and then say you have your payment options again",
    "start": "1655120",
    "end": "1660960"
  },
  {
    "text": "that's going to be all over the place because you need Pages business logic and persistence for your",
    "start": "1660960",
    "end": "1666279"
  },
  {
    "text": "payment let's say I want to add a new payment method to my web I know I want",
    "start": "1666279",
    "end": "1672600"
  },
  {
    "text": "to integrate with Apple pay or with Bitcoin or whatever you want what do I need to do well I'm going to need to",
    "start": "1672600",
    "end": "1679840"
  },
  {
    "text": "make changes to the front end so people can select this new payment method so I have to change rebuild this",
    "start": "1679840",
    "end": "1686880"
  },
  {
    "text": "module I'm going to have to validate that new payment method so I'm going to have to change and rebuild this module",
    "start": "1686880",
    "end": "1692440"
  },
  {
    "text": "and of course I'm going to have to save those details so I'm going to have to change and rebuild that module which means I am changing and rebuilding",
    "start": "1692440",
    "end": "1699440"
  },
  {
    "text": "absolutely everything right because I cannot just compile this I have to compile and rebuild the whole module so",
    "start": "1699440",
    "end": "1705240"
  },
  {
    "text": "I'm doing everything every time that I need to do something What If instead of slicing our",
    "start": "1705240",
    "end": "1711399"
  },
  {
    "text": "application according to persistent validation front end we slice it",
    "start": "1711399",
    "end": "1716600"
  },
  {
    "text": "according to domains like that now let's say I want to add a new",
    "start": "1716600",
    "end": "1722399"
  },
  {
    "text": "payment method okay I need to change the front end to add a new page for that payment",
    "start": "1722399",
    "end": "1728039"
  },
  {
    "text": "method the business logic and the persistence but that's all concentrated here so this is the only modu that I",
    "start": "1728039",
    "end": "1734440"
  },
  {
    "text": "have to change I don't need to rebuild the account I do not need to rebuild the communication",
    "start": "1734440",
    "end": "1739960"
  },
  {
    "text": "this is going to give me a system that whenever I want to add a new feature is going to concentrate my changes and",
    "start": "1739960",
    "end": "1745279"
  },
  {
    "text": "leave the other parts alone so how do you go from one place to the",
    "start": "1745279",
    "end": "1751279"
  },
  {
    "text": "other it's going to be a similar Journey to the previous one so first we start with explicit wiring for the dependence",
    "start": "1751279",
    "end": "1757519"
  },
  {
    "text": "injection so whenever we bring these things in the web service we make sure",
    "start": "1757519",
    "end": "1762760"
  },
  {
    "text": "to make a reference to the full name space or the full package of whatever classes I'm loading",
    "start": "1762760",
    "end": "1768960"
  },
  {
    "text": "and then I'm going to start creating new modules so for instance I can just get all the payment stuff copy it into a new",
    "start": "1768960",
    "end": "1775679"
  },
  {
    "text": "module and make that a dependency because I'm using explicit dependency injection this code is",
    "start": "1775679",
    "end": "1782120"
  },
  {
    "text": "initially not used because what the web service is actually loading is the old",
    "start": "1782120",
    "end": "1787799"
  },
  {
    "text": "ones but then I can change the dependency injection configuration so then this is the one",
    "start": "1787799",
    "end": "1793679"
  },
  {
    "text": "that is used and that is just dead code that nobody's using on one it is dead code I can just delete it and then I can",
    "start": "1793679",
    "end": "1801399"
  },
  {
    "text": "do the same thing for the communications right so initially this is dead code because it's in a new namespace nobody's",
    "start": "1801399",
    "end": "1806919"
  },
  {
    "text": "using but then I change the configuration and then that's the dead code and I can just delete it and then I",
    "start": "1806919",
    "end": "1813640"
  },
  {
    "text": "do the same for the account this is dead code but then I change the configuration now that's dead",
    "start": "1813640",
    "end": "1819039"
  },
  {
    "text": "code and I can delete it and I end up in the position that I wanted to be obviously this is probably going to take",
    "start": "1819039",
    "end": "1824760"
  },
  {
    "text": "a few days or maybe even a few weeks depending on how big your code base is but the point is you can gradually make",
    "start": "1824760",
    "end": "1831399"
  },
  {
    "text": "these changes while someone else is doing something else right this doesn't stop anyone from",
    "start": "1831399",
    "end": "1836919"
  },
  {
    "text": "working questions on that one",
    "start": "1836919",
    "end": "1843039"
  },
  {
    "text": "yes sorry I can hear you well",
    "start": "1846519",
    "end": "1851440"
  },
  {
    "text": "right so the question for the recording is what if these Services talk to one another as opposed to just to the web",
    "start": "1865279",
    "end": "1871360"
  },
  {
    "text": "service there is one thing that maybe I didn't um explain well at the beginning which is in this context I am assuming",
    "start": "1871360",
    "end": "1878200"
  },
  {
    "text": "this payment Communications account they are not Services they are um libraries",
    "start": "1878200",
    "end": "1883960"
  },
  {
    "text": "right so this is meant to be um the case where this web service actually brings",
    "start": "1883960",
    "end": "1890159"
  },
  {
    "text": "this in as dependencies and then I only have one service at that deploys to production that has all these code",
    "start": "1890159",
    "end": "1897720"
  },
  {
    "text": "embedded is that okay great okay next one library is a service this is going",
    "start": "1897720",
    "end": "1904120"
  },
  {
    "start": "1901000",
    "end": "2204000"
  },
  {
    "text": "to be more of a Services oriented um",
    "start": "1904120",
    "end": "1908840"
  },
  {
    "text": "pattern okay so I have different Services it can be three like in here it can be 30 it doesn't matter but the",
    "start": "1909760",
    "end": "1916279"
  },
  {
    "text": "point is all these services depend on a common Library maybe it's one of these",
    "start": "1916279",
    "end": "1921320"
  },
  {
    "text": "very basic libraries like how you do your logging or how you do your um I don't know your payments or something",
    "start": "1921320",
    "end": "1927200"
  },
  {
    "text": "like that something that you want to make sure that every service is doing in exactly the same way now that's very useful but the",
    "start": "1927200",
    "end": "1934360"
  },
  {
    "text": "problem is whenever you change that Library well of course you're going to have to rebuild and redeploy all the",
    "start": "1934360",
    "end": "1940240"
  },
  {
    "text": "services right let's say we have 30 of them and let's say for each of them you have two instances because you want",
    "start": "1940240",
    "end": "1947039"
  },
  {
    "text": "resiliency that means that whenever you change that Library you're going to have to redeploy",
    "start": "1947039",
    "end": "1953440"
  },
  {
    "text": "60 instances of your services but let's say you have um blue",
    "start": "1953440",
    "end": "1959039"
  },
  {
    "text": "green deployment which means you first create your new instance before taking the other one down which means for a",
    "start": "1959039",
    "end": "1964279"
  },
  {
    "text": "brief period of time you're going to have 120 instances active in production",
    "start": "1964279",
    "end": "1969480"
  },
  {
    "text": "right while you're doing that transition while you're doing that deployment so every time you change that Library you need 120 instances in",
    "start": "1969480",
    "end": "1977519"
  },
  {
    "text": "production that's going to take a lot of resources right and maybe you want to avoid that one thing you can do is if this is",
    "start": "1977519",
    "end": "1984880"
  },
  {
    "text": "needed by so many other services don't make it a library make it another",
    "start": "1984880",
    "end": "1991120"
  },
  {
    "text": "service there's one thing that you're going to have to add later which is some kind of integration testing between that",
    "start": "1991120",
    "end": "1996440"
  },
  {
    "text": "library and the services to make sure that whenever you change it you respect the contract between the library and the",
    "start": "1996440",
    "end": "2002519"
  },
  {
    "text": "services that use the library okay but the point is when you do it this way whenever you make a change to the",
    "start": "2002519",
    "end": "2007960"
  },
  {
    "text": "library service you don't need to redeploy all the other services you just need to",
    "start": "2007960",
    "end": "2014240"
  },
  {
    "text": "redeploy okay you just need to redeploy that one",
    "start": "2014240",
    "end": "2020159"
  },
  {
    "text": "and then make sure that everything is still communicating to each other by the way whenever I show arrows",
    "start": "2020159",
    "end": "2028200"
  },
  {
    "text": "in my diagrams because I'm focusing on the build these arrows just represent um",
    "start": "2028200",
    "end": "2035600"
  },
  {
    "text": "dependenc in terms of building if doesn't represent dependencies in terms of communicating so actually these",
    "start": "2035600",
    "end": "2042080"
  },
  {
    "text": "Services a b and c in production they talk to the library but I'm not representing that here okay I just want",
    "start": "2042080",
    "end": "2048118"
  },
  {
    "text": "you to avoid some uh confusion okay so how do you get from one point to the other we start here the",
    "start": "2048119",
    "end": "2054320"
  },
  {
    "text": "first thing that we need to do is in each of them A B and C we are going to have some kind of test that verify that",
    "start": "2054320",
    "end": "2060480"
  },
  {
    "text": "the service can use the library properly yes so what we're going to do is we're going to",
    "start": "2060480",
    "end": "2066000"
  },
  {
    "text": "create some new bills that are precisely those tests and what I do is slowly I",
    "start": "2066000",
    "end": "2072040"
  },
  {
    "text": "transform that kind of logic that kind of test that I have here the veryy that a a works with Library I'm going to",
    "start": "2072040",
    "end": "2078638"
  },
  {
    "text": "transform it and move it here and the same with b and the same with c and just I'm going to start extracting those test",
    "start": "2078639",
    "end": "2084320"
  },
  {
    "text": "so I'm still testing the same things and just testing it in a different place next thing I do is I create that",
    "start": "2084320",
    "end": "2090800"
  },
  {
    "text": "new service about initially I could just make it a dependency of the actual Library as well and then I make sure",
    "start": "2090800",
    "end": "2098920"
  },
  {
    "text": "that whenever I change that service I trigger this build right in this",
    "start": "2098920",
    "end": "2104839"
  },
  {
    "text": "transitionary period it might appear that things are a bit worse because now whenever I change that Library I still",
    "start": "2104839",
    "end": "2111640"
  },
  {
    "text": "have to redeploy these Services plus I have to also redeploy that one plus I'm",
    "start": "2111640",
    "end": "2116720"
  },
  {
    "text": "going to have to run all this which depending on how you have set up your build you might actually run them twice",
    "start": "2116720",
    "end": "2122680"
  },
  {
    "text": "because you're going to run them after this is Chang and after this is Chang but again this is just a transition",
    "start": "2122680",
    "end": "2128599"
  },
  {
    "text": "period okay next thing I start doing is for these Services a b and c I start",
    "start": "2128599",
    "end": "2136560"
  },
  {
    "text": "changing them so instead of getting the functionality that they need from the library directly from code instead of",
    "start": "2136560",
    "end": "2144240"
  },
  {
    "text": "actually making calls to that Library I change that code to make calls to the",
    "start": "2144240",
    "end": "2149359"
  },
  {
    "text": "service right so what up to now used to be a call to a particular method or a",
    "start": "2149359",
    "end": "2154800"
  },
  {
    "text": "call to a particular class I'm going to transform it to to ACC called to AR rest endpoint in the service I gradually do",
    "start": "2154800",
    "end": "2161599"
  },
  {
    "text": "that until at one point these Services they have a dependency to the library",
    "start": "2161599",
    "end": "2167920"
  },
  {
    "text": "but when you look at it it's not really using them anymore all the code has gone everything every time that these",
    "start": "2167920",
    "end": "2173480"
  },
  {
    "text": "Services need to make use of the library they actually talk to the service when you get to that point you can delete",
    "start": "2173480",
    "end": "2180440"
  },
  {
    "text": "those dependencies now you could stop at this point because this is already giving you",
    "start": "2180440",
    "end": "2186839"
  },
  {
    "text": "that advantage of of if I change my library I don't need to redeploy my services or you could do some clean up",
    "start": "2186839",
    "end": "2193319"
  },
  {
    "text": "and say you know what I don't need two of this I'm just going to get that and merge it together and then you end up",
    "start": "2193319",
    "end": "2198760"
  },
  {
    "text": "with this picture questions okay we're nearly there but F",
    "start": "2198760",
    "end": "2206640"
  },
  {
    "start": "2204000",
    "end": "2503000"
  },
  {
    "text": "out okay does any of you have this um typical Library called um",
    "start": "2206640",
    "end": "2214599"
  },
  {
    "text": "utils or Commons or that which you just put all the useful stuff that you can imagine",
    "start": "2214599",
    "end": "2221760"
  },
  {
    "text": "okay how many of you I'm not going to judge would describe that as a bit of a Dumping Ground for",
    "start": "2221760",
    "end": "2228680"
  },
  {
    "text": "stuff it happens you know I've done it everyone has done it because you start thinking you know what this is useful I",
    "start": "2228680",
    "end": "2235359"
  },
  {
    "text": "want to put in a share place but I don't know where to put it I'm just going to put it here and then you start putting more things here and then eventually you",
    "start": "2235359",
    "end": "2242040"
  },
  {
    "text": "end up with something like that when you have like a massive b and a million things depending on it",
    "start": "2242040",
    "end": "2249400"
  },
  {
    "text": "so those b c d e f blah blah blah those could be all the libraries or they could",
    "start": "2250880",
    "end": "2257599"
  },
  {
    "text": "be Services right it's just things that use a and then those could and probably do",
    "start": "2257599",
    "end": "2264560"
  },
  {
    "text": "have all the dependencies hanging from it which means whenever you change a you have like a build storm where everything",
    "start": "2264560",
    "end": "2270599"
  },
  {
    "text": "is rebuilt and it maybe take like two or 3 hours to clear the",
    "start": "2270599",
    "end": "2275839"
  },
  {
    "text": "queue so so this is a problem right this fan out these so many things depending",
    "start": "2276240",
    "end": "2281880"
  },
  {
    "text": "on that super useful library is a bit of a problem because whenever you changing boom explosion of builds so what you",
    "start": "2281880",
    "end": "2288640"
  },
  {
    "text": "want to have is something more like if you look like we said before",
    "start": "2288640",
    "end": "2294160"
  },
  {
    "text": "with the magnifying glass and you see the internal structure it's probably going to be something like this when you have sub",
    "start": "2294160",
    "end": "2300920"
  },
  {
    "text": "things and maybe inally they depend on each other and then the different things depend on each of beds and it might be",
    "start": "2300920",
    "end": "2306520"
  },
  {
    "text": "that is not even clean as this and you have to do some work to get to this point but the idea is once you identify",
    "start": "2306520",
    "end": "2313000"
  },
  {
    "text": "this you can stct those as independent bills and then get to this picture",
    "start": "2313000",
    "end": "2319680"
  },
  {
    "text": "instead so here if I change A1 I'm only building four of my dependen",
    "start": "2319680",
    "end": "2327520"
  },
  {
    "text": "as opposed to seven of them so I'm saving a lot of building time here okay the problem is getting to this",
    "start": "2327520",
    "end": "2334880"
  },
  {
    "text": "point so how do we get to that point but by the way whenever you're facing some of this it helps a lot if the first",
    "start": "2334880",
    "end": "2342079"
  },
  {
    "text": "thing you do is actually analyze the code get a flip chart get some paper or a whiteboard and start drawing this",
    "start": "2342079",
    "end": "2348560"
  },
  {
    "text": "diagram actually and saying okay I have this package and I have this classes and this depends on that etc etc because",
    "start": "2348560",
    "end": "2354440"
  },
  {
    "text": "that's going to um you're going to be able to use that diagram as a map to know which",
    "start": "2354440",
    "end": "2361119"
  },
  {
    "text": "direction you need to take and to know which steps you need to start with Okay so let's say this is my I just analyzed",
    "start": "2361119",
    "end": "2368640"
  },
  {
    "text": "the code and I draw this on my whiteboard and I said okay you know what let's start with this thing that I'm",
    "start": "2368640",
    "end": "2374520"
  },
  {
    "text": "calling A1 let's get that one out as an independent thing okay so the first thing you need",
    "start": "2374520",
    "end": "2379720"
  },
  {
    "text": "to do is create a new A1 and make that",
    "start": "2379720",
    "end": "2384920"
  },
  {
    "text": "depend on the old a because at the end of the day it needs A2 and then",
    "start": "2384920",
    "end": "2390280"
  },
  {
    "text": "configure a dependency to all the things that are currently using the old A1 this",
    "start": "2390280",
    "end": "2395319"
  },
  {
    "text": "is going to be a copy of code same t as before and it a different names space so then I don't have any conflicts whenever",
    "start": "2395319",
    "end": "2401800"
  },
  {
    "text": "these are pulling both dependencies now if these are um",
    "start": "2401800",
    "end": "2410319"
  },
  {
    "text": "libraries that are using this code directly then it's even easier to do the change because probably what I have is",
    "start": "2410319",
    "end": "2416640"
  },
  {
    "text": "just a bunch of inputs at the beginning of the file so all I have to do is change that input and then that's it now",
    "start": "2416640",
    "end": "2423599"
  },
  {
    "text": "I'm using A1 I mean I'm using the new A1 and the old old A1 is just dead",
    "start": "2423599",
    "end": "2429599"
  },
  {
    "text": "code at this point I can delete these dependencies so now my build is already",
    "start": "2429599",
    "end": "2436119"
  },
  {
    "text": "being faster because whenever I change A1 I'm not rebuilding the whole thing I'm just rebuilding those and this since",
    "start": "2436119",
    "end": "2442880"
  },
  {
    "text": "it's dead code I can just get rid of it you might decide this is enough this",
    "start": "2442880",
    "end": "2448640"
  },
  {
    "text": "is running Improvement or you might decide you know what let's go for it let's also get out whoops let's also get",
    "start": "2448640",
    "end": "2455319"
  },
  {
    "text": "out A3 same step steps create a new A3 which is just a",
    "start": "2455319",
    "end": "2460520"
  },
  {
    "text": "copy of the old one under a new name space set up your dependencies set up the dependencies of the things",
    "start": "2460520",
    "end": "2467560"
  },
  {
    "text": "Downstream and then change the thing Downstream to depend or to use the new one instead of the old one once you're",
    "start": "2467560",
    "end": "2474440"
  },
  {
    "text": "not using the old one anymore delete those dependencies and once you have deleted those dependencies this is dead",
    "start": "2474440",
    "end": "2480079"
  },
  {
    "text": "code get rid of it right so if you now remove the magnifying glass because now",
    "start": "2480079",
    "end": "2486480"
  },
  {
    "text": "you only have one thing left then it looks a bit like this or if you reshuffle things a little bit then",
    "start": "2486480",
    "end": "2493119"
  },
  {
    "text": "like this which is a match PR pror that is going to",
    "start": "2493119",
    "end": "2498760"
  },
  {
    "text": "um cause less work to the build whenever you're making changes okay finally I hope you're still",
    "start": "2498760",
    "end": "2506520"
  },
  {
    "start": "2503000",
    "end": "3005000"
  },
  {
    "text": "awake configuration as a surfice this one is quite similar to library as a",
    "start": "2506520",
    "end": "2512000"
  },
  {
    "text": "service but because configuration items are a bit special it's going to have some tricks it's going to have have some",
    "start": "2512000",
    "end": "2518000"
  },
  {
    "text": "um special nuances or special considerations okay so tell me",
    "start": "2518000",
    "end": "2523040"
  },
  {
    "text": "things um first of all how many of you have the",
    "start": "2523040",
    "end": "2528079"
  },
  {
    "text": "configuration files for your applications or for your libraries your services whatever you're doing as part",
    "start": "2528079",
    "end": "2534599"
  },
  {
    "text": "of the code as part of the repository right so whenever you change your configuration you have to push that",
    "start": "2534599",
    "end": "2541680"
  },
  {
    "text": "and that triggers a build correct okay what kind of stuff do you have in your configuration files",
    "start": "2541680",
    "end": "2548880"
  },
  {
    "text": "tell me do you have uh things like future Flags or do you have things like uh",
    "start": "2548880",
    "end": "2555240"
  },
  {
    "text": "throtle configuration or database URL connections you have that kind of thing",
    "start": "2555240",
    "end": "2561359"
  },
  {
    "text": "yeah all that and probably many other things and chances are you have the same",
    "start": "2561359",
    "end": "2566559"
  },
  {
    "text": "thing duplicated for each environment yeah so you going to have all your feature Flags throttle URL",
    "start": "2566559",
    "end": "2573160"
  },
  {
    "text": "connection etc etc etc for Def and then everything else for stage or test or and",
    "start": "2573160",
    "end": "2578559"
  },
  {
    "text": "then everything else for production what does that mean that means that if I want to change the",
    "start": "2578559",
    "end": "2583760"
  },
  {
    "text": "configuration of staging of test I change the config file and I",
    "start": "2583760",
    "end": "2588839"
  },
  {
    "text": "push and as part of that I need to recompile retest redeploy all the",
    "start": "2588839",
    "end": "2595640"
  },
  {
    "text": "environments even though what I just did doesn't affect the code and it only affects one of the environment but",
    "start": "2595640",
    "end": "2602319"
  },
  {
    "text": "because the way we have built the continuous integration environment I have to redo everything in in all the",
    "start": "2602319",
    "end": "2608000"
  },
  {
    "text": "places",
    "start": "2608000",
    "end": "2611000"
  },
  {
    "text": "okay but I said before the configuration is a bit",
    "start": "2613880",
    "end": "2619599"
  },
  {
    "text": "tricky and is that you have this problem but then you have another problem which is there are two types we could say of",
    "start": "2619960",
    "end": "2626960"
  },
  {
    "text": "configuration items I call them soft and hard the soft ones are the ones that you",
    "start": "2626960",
    "end": "2632200"
  },
  {
    "text": "could afford to check every time in runtime right for instance feature flag",
    "start": "2632200",
    "end": "2638119"
  },
  {
    "text": "so whenever you are going through a bit of code that says okay I'm going to start this part you could afford to say",
    "start": "2638119",
    "end": "2644040"
  },
  {
    "text": "What's the value of the feature flag it's on okay then I go this branch and then next time what's the value of the",
    "start": "2644040",
    "end": "2649839"
  },
  {
    "text": "feature flag is on okay then I can go this time and then there are some other configuration items that you cannot",
    "start": "2649839",
    "end": "2656720"
  },
  {
    "text": "afford to do that because it's too costly for instance the details for uh to connect to the database creating a",
    "start": "2656720",
    "end": "2663800"
  },
  {
    "text": "database connection is actually quite expensive so you don't want to be doing that every time which means you cannot",
    "start": "2663800",
    "end": "2669520"
  },
  {
    "text": "afford to read what are the details for the database connection every time you need to talk to database in fact what",
    "start": "2669520",
    "end": "2676520"
  },
  {
    "text": "you typically want to do is whenever you start your application you read those details once you don't read them again",
    "start": "2676520",
    "end": "2683079"
  },
  {
    "text": "because then what you do is you create a bunch of connections and you keep them in a pool and you keep reusing them",
    "start": "2683079",
    "end": "2688400"
  },
  {
    "text": "right that means that the soft configuration items I could change them",
    "start": "2688400",
    "end": "2694400"
  },
  {
    "text": "on the fly without deploying my application in theory the had ones I can't whenever",
    "start": "2694400",
    "end": "2700680"
  },
  {
    "text": "I change the had ones I need to at the very least restart the",
    "start": "2700680",
    "end": "2705960"
  },
  {
    "text": "application what that means is if this is my service right this is the build of my service is one single",
    "start": "2706720",
    "end": "2713599"
  },
  {
    "text": "blob that does everything I want to change it to something like this so one side the soft",
    "start": "2713599",
    "end": "2721359"
  },
  {
    "text": "configuration items are a different service altogether so whenever I Chang",
    "start": "2721359",
    "end": "2726440"
  },
  {
    "text": "that whenever I change the soft configuration items I do not recompile or redeploy anything or than that the",
    "start": "2726440",
    "end": "2733720"
  },
  {
    "text": "soft configuration service itself that works for instance very well for fut flag so you could actually have",
    "start": "2733720",
    "end": "2739880"
  },
  {
    "text": "a f flag service so then anything else and it fure flag instead of having its own configuration file it actually talks",
    "start": "2739880",
    "end": "2746440"
  },
  {
    "text": "to the fut flag service say hey am I supposed to do this and that and that one says do this and then whenever you",
    "start": "2746440",
    "end": "2752480"
  },
  {
    "text": "change that the only thing you need to do is do some basic smoke test to make sure that the new config items that you",
    "start": "2752480",
    "end": "2758880"
  },
  {
    "text": "put in here still work with the service but you're saving a lot of time just by",
    "start": "2758880",
    "end": "2764040"
  },
  {
    "text": "pulling that into a different service how about the hard configuration items you cannot put that into a different",
    "start": "2764040",
    "end": "2769280"
  },
  {
    "text": "service because you cannot read that every time you actually need to to read",
    "start": "2769280",
    "end": "2774680"
  },
  {
    "text": "those in advance when you're loading but what you can do is separate what is the actual",
    "start": "2774680",
    "end": "2780680"
  },
  {
    "text": "deployment from the building so all your compilation all your um",
    "start": "2780680",
    "end": "2787520"
  },
  {
    "text": "testing Etc you could have it here you could produce a binary for the service",
    "start": "2787520",
    "end": "2792640"
  },
  {
    "text": "and then it's in this other build where you're actually managing the configuration and the deployment so if you change your hard configuration items",
    "start": "2792640",
    "end": "2799599"
  },
  {
    "text": "you don't recompile or retest you just redeploy and then do some Basics mode test in the end to make sure everything",
    "start": "2799599",
    "end": "2805680"
  },
  {
    "text": "is fine okay the way to get there if I look inside the build on my",
    "start": "2805680",
    "end": "2813800"
  },
  {
    "text": "service an over simplification maybe something like this so I'm going to have",
    "start": "2813800",
    "end": "2819119"
  },
  {
    "text": "some configuration that if I change I have to redeploy I'm going to have",
    "start": "2819119",
    "end": "2824280"
  },
  {
    "text": "everything else which basically means the compilation and the testing which again if I change I have to deoy and",
    "start": "2824280",
    "end": "2830800"
  },
  {
    "text": "then probably I'm going to have some smoke test that I run after the",
    "start": "2830800",
    "end": "2836640"
  },
  {
    "text": "deployment let's focus on these parts first configuration and smoke",
    "start": "2836640",
    "end": "2841960"
  },
  {
    "text": "tests first thing is get those smoke tests out as an inde dependent build in",
    "start": "2841960",
    "end": "2848480"
  },
  {
    "text": "a similar way that we did before we create a new build we make it a dependency initially it's empty but then we move the stuff etc etc right so",
    "start": "2848480",
    "end": "2855640"
  },
  {
    "text": "whenever I change the service this this is what I do the deployment this is where I test the",
    "start": "2855640",
    "end": "2862040"
  },
  {
    "text": "deployment next thing make sure to separate very clearly what is the soft",
    "start": "2862040",
    "end": "2867960"
  },
  {
    "text": "configuration items and the hard configuration items if they are different files Al together maybe better",
    "start": "2867960",
    "end": "2874040"
  },
  {
    "text": "right because then you can clearly identify what is soft what is hard and once you know what is soft create a new",
    "start": "2874040",
    "end": "2880160"
  },
  {
    "text": "service that initially nobody's going to use but create it and make it a dependency and then gradually start",
    "start": "2880160",
    "end": "2886760"
  },
  {
    "text": "moving the soft config items to that service and this service rewrite it so",
    "start": "2886760",
    "end": "2893119"
  },
  {
    "text": "whenever you need that config item you don't read it from the file you actually make a call to the other service So",
    "start": "2893119",
    "end": "2900200"
  },
  {
    "text": "eventually you still have all the soft configuration items in here but nobody's reading them because the service is",
    "start": "2900200",
    "end": "2906839"
  },
  {
    "text": "actually going in run time to the soft configuration service to read those values and then once you get to that",
    "start": "2906839",
    "end": "2913040"
  },
  {
    "text": "point you can just delete that file of soft",
    "start": "2913040",
    "end": "2918119"
  },
  {
    "text": "configuration you could stop here that's already going to give you a lot of benefit because most of the times the",
    "start": "2918559",
    "end": "2925240"
  },
  {
    "text": "configuration items that you change most often are the soft ones right you change your futter fly you change your",
    "start": "2925240",
    "end": "2931400"
  },
  {
    "text": "throttles you don't change your database connections every day right you say you have a database that's a database and",
    "start": "2931400",
    "end": "2937960"
  },
  {
    "text": "then you keep it forever so you could stop here or you could go to the next ST which is you",
    "start": "2937960",
    "end": "2943079"
  },
  {
    "text": "know what I also want to get that out to the picture Okay so let's look at everything that is",
    "start": "2943079",
    "end": "2948480"
  },
  {
    "text": "going on here I have the everything else which is the compilation testing etc etc",
    "start": "2948480",
    "end": "2954559"
  },
  {
    "text": "I have a hat configuration and I have the deployment so basically what I'm going",
    "start": "2954559",
    "end": "2959599"
  },
  {
    "text": "to do is I'm going to stick these things in one way or to put in another words",
    "start": "2959599",
    "end": "2964960"
  },
  {
    "text": "I'm going to get the everything else and extract it",
    "start": "2964960",
    "end": "2970039"
  },
  {
    "text": "out so at this point this what I call the service actually looks more like a",
    "start": "2970240",
    "end": "2976319"
  },
  {
    "text": "library because this just has code and test and produces a binary and this one",
    "start": "2976319",
    "end": "2981440"
  },
  {
    "text": "is the one that actually slaps some configuration into it and makes a deployment so even though I'm calling",
    "start": "2981440",
    "end": "2987240"
  },
  {
    "text": "this the service from the point of view what am I deploying this is what I'm deploying but then that way whenever I",
    "start": "2987240",
    "end": "2993799"
  },
  {
    "text": "change my configuration I do not need to rebuild or test anything just redeploy and run the smoke",
    "start": "2993799",
    "end": "3000760"
  },
  {
    "text": "tests questions on that one good so that was the five patterns",
    "start": "3000760",
    "end": "3007480"
  },
  {
    "text": "obviously as I said before you might encounter a situation that is not exactly like any other ones that I have",
    "start": "3007480",
    "end": "3013640"
  },
  {
    "text": "described but you can probably figure out how to apply this ideas or how to apply this sign to your case and if you",
    "start": "3013640",
    "end": "3020160"
  },
  {
    "text": "don't and talk to me cuz I like these things so I'm always happy to look for a new",
    "start": "3020160",
    "end": "3025480"
  },
  {
    "text": "challenge and maybe help you with it so important questions when should you",
    "start": "3025480",
    "end": "3032839"
  },
  {
    "text": "do this right you might be tempted now that you send this to go back to your office and start redoing the architecture",
    "start": "3032839",
    "end": "3038680"
  },
  {
    "text": "everything is that the right thing to do maybe not or maybe you're thinking you know what this is too complicated I'm",
    "start": "3038680",
    "end": "3044000"
  },
  {
    "text": "just going to do the other way which is add more powerful hardware and hopefully that will take care of it and don't get",
    "start": "3044000",
    "end": "3050240"
  },
  {
    "text": "me wrong I like more powerful Hardware but that's not always the answer now the question is this obviously is an",
    "start": "3050240",
    "end": "3055920"
  },
  {
    "text": "investment you can have to dedicate work to this and sometimes they are mistakes you know there's always a risk of doing",
    "start": "3055920",
    "end": "3062240"
  },
  {
    "text": "this kind of thing so very very very important question that you need to ask yourself is is it worth",
    "start": "3062240",
    "end": "3067520"
  },
  {
    "text": "it that is an entire new debate I have another presentation that I did a couple",
    "start": "3067520",
    "end": "3073079"
  },
  {
    "text": "of years ago about when to decide where you have botton legs in your build how",
    "start": "3073079",
    "end": "3079040"
  },
  {
    "text": "to gather statistics about your build and how to identify the bits that you need to retach if you take a look at",
    "start": "3079040",
    "end": "3084480"
  },
  {
    "text": "that maybe can help or if you have any questions I'm going to be here all day I'm happy to have a chat but the point",
    "start": "3084480",
    "end": "3089799"
  },
  {
    "text": "is first you need to identify where you have your problems and once you say you know what this this module here is the",
    "start": "3089799",
    "end": "3096079"
  },
  {
    "text": "problem this is what is making the build so slow okay then maybe you apply one of the patterns to change that and fix the",
    "start": "3096079",
    "end": "3103240"
  },
  {
    "text": "situation so to recap try not necessarily to run things",
    "start": "3103240",
    "end": "3108920"
  },
  {
    "start": "3104000",
    "end": "3263000"
  },
  {
    "text": "faster but to run fewer things try to keep things simple and change things",
    "start": "3108920",
    "end": "3114200"
  },
  {
    "text": "only when you actually need them I like um finishing with a little uh",
    "start": "3114200",
    "end": "3124240"
  },
  {
    "text": "reflection a little thought about it um against you don't well you",
    "start": "3124240",
    "end": "3129960"
  },
  {
    "text": "probably don't know much about me but I'm quite a gig for anything that is space related this is why I like um",
    "start": "3129960",
    "end": "3135359"
  },
  {
    "text": "Rich's keynote so much yesterday with all sou by the Moon that was just amazing um this as you probably know is",
    "start": "3135359",
    "end": "3142160"
  },
  {
    "text": "the Endeavor um space shuttle this is on display at the California Science Museum",
    "start": "3142160",
    "end": "3148359"
  },
  {
    "text": "in Los Angeles I had a chance to go there two three years ago and I was completely mesmerized and the",
    "start": "3148359",
    "end": "3156000"
  },
  {
    "text": "thing I like about the um space shut program is they started thinking about",
    "start": "3156000",
    "end": "3161280"
  },
  {
    "text": "it in the 60s and 70s and they went through a very long period of design until the 80s when they finally started",
    "start": "3161280",
    "end": "3169160"
  },
  {
    "text": "to flight I think the first shuttle flight was in 1981",
    "start": "3169160",
    "end": "3176440"
  },
  {
    "text": "and they kept on using the space shle until uh 2011 so about 30 years of usage",
    "start": "3177599",
    "end": "3184640"
  },
  {
    "text": "now the reason I'm talking about this is because in it and in software many times we think oh you know what we do is so",
    "start": "3184640",
    "end": "3192839"
  },
  {
    "text": "complex and it's so difficult and it evolves so fast it's like oh this framework is two years old what are you",
    "start": "3192839",
    "end": "3198599"
  },
  {
    "text": "talking about man we need to drop that and rewrite the whole thing from scratch because you know if it is 2 years old or",
    "start": "3198599",
    "end": "3204920"
  },
  {
    "text": "5 years old that's too old already we need to drop it but the thing is these people they managed to do something as",
    "start": "3204920",
    "end": "3212359"
  },
  {
    "text": "complicated as go into space and back multiple times reusing the same Vehicles",
    "start": "3212359",
    "end": "3218200"
  },
  {
    "text": "reusing the same tools and the question is if these people can manage to do",
    "start": "3218200",
    "end": "3224240"
  },
  {
    "text": "something like that we use the same tools to do something as complicated for 30 years why can't",
    "start": "3224240",
    "end": "3229960"
  },
  {
    "text": "we why do we have a constant need to drop everything we have and have a new tool when clearly people can reuse tools",
    "start": "3229960",
    "end": "3237440"
  },
  {
    "text": "for some very complicated things so I'm not saying that progress is bad I'm not saying Innovation is bad",
    "start": "3237440",
    "end": "3243760"
  },
  {
    "text": "Innovation is great sometimes the answer is not getting new tools sometimes the answer is getting the tools that we",
    "start": "3243760",
    "end": "3249920"
  },
  {
    "text": "already have and learn to use them better thank you [Applause]",
    "start": "3249920",
    "end": "3257890"
  },
  {
    "text": "[Music]",
    "start": "3257890",
    "end": "3261010"
  }
]