[
  {
    "text": "thanks thanks oh that's not easy yeah that's a new m1",
    "start": "11200",
    "end": "17440"
  },
  {
    "text": "and kind of a bit not working as expected but anyway thanks god all is",
    "start": "17440",
    "end": "23119"
  },
  {
    "text": "fixed thanks a lot for having me today that's my first in dc i'm very excited actually so many people it's actually a",
    "start": "23119",
    "end": "30240"
  },
  {
    "text": "bit a bit scary but i'll try to do my best so",
    "start": "30240",
    "end": "35840"
  },
  {
    "text": "going real time using asian cosmos db and react um obviously we're going to",
    "start": "35840",
    "end": "41920"
  },
  {
    "text": "talk about asia services as signalr asian signal asia cosmos db asia",
    "start": "41920",
    "end": "47760"
  },
  {
    "text": "functions a bit of react code and demo in the end unfortunately it didn't",
    "start": "47760",
    "end": "55120"
  },
  {
    "text": "work out from the same reason because it's a new m1 and i didn't manage to",
    "start": "55120",
    "end": "60800"
  },
  {
    "text": "properly um transfer all my data so um but i have screens so you will you will",
    "start": "60800",
    "end": "67360"
  },
  {
    "text": "understand what should supposed to happen um a couple of words about me uh my name",
    "start": "67360",
    "end": "73520"
  },
  {
    "text": "is solana berzanko once again you can find me on twitter if you have any questions please feel free to connect or comments",
    "start": "73520",
    "end": "80720"
  },
  {
    "text": "or maybe feedback i would be happy and today is my first day in company",
    "start": "80720",
    "end": "86000"
  },
  {
    "text": "called experience and i'm very happy i really i'm gonna open a bottle of champagne and celebrate it later on",
    "start": "86000",
    "end": "92240"
  },
  {
    "text": "so first nbc first day in the company so uh yeah i'm very very happy about it",
    "start": "92240",
    "end": "98159"
  },
  {
    "text": "and um in the abstract of to for my session in the description for my",
    "start": "98159",
    "end": "103200"
  },
  {
    "text": "session i was uh talking about monitoring systems so first of all i want to say a couple of words uh what",
    "start": "103200",
    "end": "110320"
  },
  {
    "text": "about our use case so what we did what i would try to do to",
    "start": "110320",
    "end": "115840"
  },
  {
    "text": "show uh during the demo uh i was working at some point in a product company where we were basically",
    "start": "115840",
    "end": "123520"
  },
  {
    "text": "selling beverages so we had the warehouses and with all the products inside and for",
    "start": "123520",
    "end": "130160"
  },
  {
    "text": "us was very important to understand how the movements of articles are happening inside the warehouse",
    "start": "130160",
    "end": "136239"
  },
  {
    "text": "because they are driving the physical process and this is the great way to understand the state of our",
    "start": "136239",
    "end": "141280"
  },
  {
    "text": "warehouse or inventory so inside of our house we have movements of articles when we",
    "start": "141280",
    "end": "148000"
  },
  {
    "text": "have for example our articles arrived in the warehouse we have inbound movement when",
    "start": "148000",
    "end": "154560"
  },
  {
    "text": "we moved our articles to the specific shelf or maybe picking shelf or maybe the packaging stations it's every time",
    "start": "154560",
    "end": "161760"
  },
  {
    "text": "there's event happening which is uh represents a representation of a movement from one location to the",
    "start": "161760",
    "end": "168000"
  },
  {
    "text": "another location and based on this information we can",
    "start": "168000",
    "end": "173840"
  },
  {
    "text": "we can calculate our stock and we can also display information for the warehouse we can",
    "start": "173840",
    "end": "179200"
  },
  {
    "text": "also have uh many many different basically views and projections of our data of our movements",
    "start": "179200",
    "end": "185680"
  },
  {
    "text": "depends on how we we can aggregate it how we want to see it uh or maybe what",
    "start": "185680",
    "end": "190959"
  },
  {
    "text": "our clients needs and in our case in my demo in this case i",
    "start": "190959",
    "end": "197120"
  },
  {
    "text": "will show exactly those two those two use cases how to how we will calculate from the same amount of data",
    "start": "197120",
    "end": "203760"
  },
  {
    "text": "from the same movements stock information and the warehouse status and",
    "start": "203760",
    "end": "209120"
  },
  {
    "text": "before we will go to that part i want to say also a couple of words about our services so basically what we going",
    "start": "209120",
    "end": "216560"
  },
  {
    "text": "to use what we will see today so asia cosmos db um i hope that",
    "start": "216560",
    "end": "223760"
  },
  {
    "text": "everyone more or less at least heard about it if we for those who didn't hear",
    "start": "223760",
    "end": "228959"
  },
  {
    "text": "anything uh it's a globally distributed multi-modal massively scalable database",
    "start": "228959",
    "end": "236000"
  },
  {
    "text": "uh you can see that there is that different apis supported it's a table api cassandra sql mongodb and gremlin",
    "start": "236000",
    "end": "244000"
  },
  {
    "text": "for graph so by default there is a sql api and",
    "start": "244000",
    "end": "250319"
  },
  {
    "text": "i can i want to say one thing that for those who never used cosmos db before",
    "start": "250319",
    "end": "255760"
  },
  {
    "text": "uh like small hint or tip uh never use a sql api as you would use traditional",
    "start": "255760",
    "end": "262240"
  },
  {
    "text": "database because i i made this mistake and i saw how what kind of consequences can be out of this",
    "start": "262240",
    "end": "269120"
  },
  {
    "text": "if we're gonna use it as a normal traditional database we will build the queries in the end we will end up",
    "start": "269120",
    "end": "274880"
  },
  {
    "text": "complaining the asian cosmos db is extremely expensive and no one please don't use it so just remember that it's",
    "start": "274880",
    "end": "280800"
  },
  {
    "text": "not exactly the same thing and we should we should exactly build those",
    "start": "280800",
    "end": "285919"
  },
  {
    "text": "projections and views uh to optimize our read operations instead of building queries and",
    "start": "285919",
    "end": "292560"
  },
  {
    "text": "call them every time and execute them every time but we need to fetch the data",
    "start": "292560",
    "end": "298000"
  },
  {
    "text": "so uh i would not i don't want to spend too much time on cosmos db there is a i have another session where i'm still talking",
    "start": "298000",
    "end": "304160"
  },
  {
    "text": "more details about how cosmos db works itself uh we go into the next service so",
    "start": "304160",
    "end": "309280"
  },
  {
    "text": "we're going to use azure functions so i will have function up where i will have different functions to create",
    "start": "309280",
    "end": "315520"
  },
  {
    "text": "movements uh to to negotiate to call negotiate a endpoint with the signal our service",
    "start": "315520",
    "end": "321600"
  },
  {
    "text": "also to get some stock information to generate the stock information and etc etc",
    "start": "321600",
    "end": "326800"
  },
  {
    "text": "and um again couple of words about asia functions why do i like to use them um",
    "start": "326800",
    "end": "332320"
  },
  {
    "text": "of course i'm a big fan of normal development where we build like huge apis a lot of core everything else we",
    "start": "332320",
    "end": "338000"
  },
  {
    "text": "like as developers but asia functions sometimes can be very very useful when we need to build small pieces of core",
    "start": "338000",
    "end": "344880"
  },
  {
    "text": "small bricks and we want to have a fast development we maybe have a multi-language",
    "start": "344880",
    "end": "351520"
  },
  {
    "text": "environment it's also fine uh azure functions supports c-sharp and java and javascript python",
    "start": "351520",
    "end": "358639"
  },
  {
    "text": "and partial as well as well so also azure functions are very easy in in",
    "start": "358639",
    "end": "365280"
  },
  {
    "text": "the way of deployment so we don't need to take it to care about anything we just can publish it and asia",
    "start": "365280",
    "end": "370560"
  },
  {
    "text": "will take care of the rest for us and of course the uh pricing options uh",
    "start": "370560",
    "end": "376479"
  },
  {
    "text": "it's serverless so we pay as we use and if we not calling our azure functions we",
    "start": "376479",
    "end": "382240"
  },
  {
    "text": "would not pay anything if we made a i don't know 100 requests we will pay only for those requests so this is also a",
    "start": "382240",
    "end": "389199"
  },
  {
    "text": "great thing to save a cost especially when we're just starting maybe if you have a small application it would be the",
    "start": "389199",
    "end": "394880"
  },
  {
    "text": "perfect way to go and the last thing is asia signalr",
    "start": "394880",
    "end": "400800"
  },
  {
    "text": "so asia's signalr it's a fully managed real-time",
    "start": "400800",
    "end": "406240"
  },
  {
    "text": "messaging service and uh so what is happening there that our",
    "start": "406240",
    "end": "411840"
  },
  {
    "text": "clients basically has um an option to they connect to our signalr uh service",
    "start": "411840",
    "end": "418720"
  },
  {
    "text": "through websocket and if websockets somehow it's not supported not available then it will be",
    "start": "418720",
    "end": "423759"
  },
  {
    "text": "um then another service service server sent event will be used or long pooling",
    "start": "423759",
    "end": "430720"
  },
  {
    "text": "instead and um basically uh it's kind of um just uh and",
    "start": "430720",
    "end": "438240"
  },
  {
    "text": "it's not an abstraction let's say like this is a as a traditional signalr uh it's a service available in asia and",
    "start": "438240",
    "end": "445680"
  },
  {
    "text": "exactly working exactly in the same way that's fully managed by asia and we don't really need to take care of of",
    "start": "445680",
    "end": "452319"
  },
  {
    "text": "anything and is if i remember correctly there is like by default um",
    "start": "452319",
    "end": "458240"
  },
  {
    "text": "one instance of asia signalr can support 100 000 connections",
    "start": "458240",
    "end": "463919"
  },
  {
    "text": "so pretty pretty good as for for one instance i would say and",
    "start": "463919",
    "end": "470639"
  },
  {
    "text": "go into our use case so as i was as i mentioned already that",
    "start": "470639",
    "end": "476000"
  },
  {
    "text": "i was working in the product company so we were building a system the monitoring system",
    "start": "476000",
    "end": "483039"
  },
  {
    "text": "warehouse system we were rewriting it and um our idea was that we can have uh for",
    "start": "483039",
    "end": "489280"
  },
  {
    "text": "example in the warehouse we can have different devices and then we can scan every time there is a movement happening",
    "start": "489280",
    "end": "495039"
  },
  {
    "text": "we can scan the articles and we can scan the um location or the",
    "start": "495039",
    "end": "500479"
  },
  {
    "text": "our shells and those events will be stored in cosmos cosmos db",
    "start": "500479",
    "end": "506639"
  },
  {
    "text": "uh this basically would have uh would be like event sourcing i would say because",
    "start": "506639",
    "end": "512719"
  },
  {
    "text": "we will have movements we will just append every movement which is happening there all our events will be stored in",
    "start": "512719",
    "end": "518240"
  },
  {
    "text": "cosmos db what will happen afterwards then we will react on those changes we will",
    "start": "518240",
    "end": "524080"
  },
  {
    "text": "react on on our movements on the events and with change feed",
    "start": "524080",
    "end": "530720"
  },
  {
    "text": "we will will basically listen subscribe to a change feed and we will generate uh different views",
    "start": "530720",
    "end": "538880"
  },
  {
    "text": "for from those movements so for in one case we will have a state of the warehouse and we",
    "start": "538880",
    "end": "545920"
  },
  {
    "text": "will update the view for the specific location for example how many articles were moved on this",
    "start": "545920",
    "end": "552080"
  },
  {
    "text": "location or how many many articles removed from this location and the second use case is we will",
    "start": "552080",
    "end": "558000"
  },
  {
    "text": "calculate stock information so basically only the location",
    "start": "558000",
    "end": "563519"
  },
  {
    "text": "id or location address and how many articles currently uh is on this shelf",
    "start": "563519",
    "end": "571120"
  },
  {
    "text": "and those this information across those views we will write back in cosmos db so we will have our projections and they",
    "start": "571680",
    "end": "578880"
  },
  {
    "text": "will be available uh for read why do like what's the actual purpose of doing it in this way",
    "start": "578880",
    "end": "585200"
  },
  {
    "text": "uh for us was very important to be able to easily say if if we still have this",
    "start": "585200",
    "end": "590560"
  },
  {
    "text": "product if this product is still available and for example we also when we receiving an order we want to",
    "start": "590560",
    "end": "598560"
  },
  {
    "text": "easily find the place where do we have those articles where do we have those products so our so we can basically",
    "start": "598560",
    "end": "605440"
  },
  {
    "text": "build an optimized route inside the warehouse how our pickers can go and and take those",
    "start": "605440",
    "end": "611680"
  },
  {
    "text": "products and this information",
    "start": "611680",
    "end": "616880"
  },
  {
    "text": "will help would help us to optimize in internal roads uh how the also the cars",
    "start": "616880",
    "end": "623200"
  },
  {
    "text": "like basically those forklift drivers can move inside the warehouse how the people how the employees can pick up",
    "start": "623200",
    "end": "628399"
  },
  {
    "text": "some products uh and and many many different things basically based on the same",
    "start": "628399",
    "end": "633519"
  },
  {
    "text": "information among the same amount the same set of data we can generate as many",
    "start": "633519",
    "end": "638880"
  },
  {
    "text": "projections as we want for for different purposes and this approach gave us",
    "start": "638880",
    "end": "645680"
  },
  {
    "text": "flexibility for exactly the the reason as i said we can generate as many views",
    "start": "645680",
    "end": "651519"
  },
  {
    "text": "as we want so basically those lego bricks um for every client for every consumer for",
    "start": "651519",
    "end": "658000"
  },
  {
    "text": "every need we can just rerun the change fit pull all the data from the beginning maybe from the specific point in time",
    "start": "658000",
    "end": "664959"
  },
  {
    "text": "and generate a projection for the client",
    "start": "664959",
    "end": "671839"
  },
  {
    "text": "so the next step was is to actually stop monitoring so",
    "start": "671839",
    "end": "678720"
  },
  {
    "text": "as we as i mentioned before we're going to use signalr and idea was that we will have a real-time",
    "start": "678720",
    "end": "687600"
  },
  {
    "text": "stock monitoring basically showing that what is happening in the warehouse",
    "start": "687600",
    "end": "692640"
  },
  {
    "text": "in the current time in the current moment and having our",
    "start": "692640",
    "end": "698320"
  },
  {
    "text": "stock information already calculated as a from the previous example and the same would be for the state of warehouse",
    "start": "698320",
    "end": "705920"
  },
  {
    "text": "it when it was written back to cosmos db we would have the same basically structure the same",
    "start": "705920",
    "end": "713040"
  },
  {
    "text": "we will subscribe to a change feed and with the azure function we have we'll have trigger",
    "start": "713040",
    "end": "718160"
  },
  {
    "text": "and we will react on on the update of the projection and we will",
    "start": "718160",
    "end": "724000"
  },
  {
    "text": "inform say to our signal our servers that hey we have some changes and then signal signalr will basically push this",
    "start": "724000",
    "end": "731200"
  },
  {
    "text": "to our clients and that kind of approach basically introduced for us uh simplicity because",
    "start": "731200",
    "end": "738880"
  },
  {
    "text": "we don't need to use any other services we don't need to use any we don't need to introduce complexity we",
    "start": "738880",
    "end": "745600"
  },
  {
    "text": "already used azure functions we already know how to use cosmos db how to use change feed we basically did the same",
    "start": "745600",
    "end": "752320"
  },
  {
    "text": "thing we did before but for the other purpose and that allow us to very quickly first of",
    "start": "752320",
    "end": "759360"
  },
  {
    "text": "all for the whole team to learn how to build it and then independently develop our system uh without worrying like okay",
    "start": "759360",
    "end": "766639"
  },
  {
    "text": "here we need to another technology not another library we didn't care about it because we were using the same things",
    "start": "766639",
    "end": "773839"
  },
  {
    "text": "and moving forward also for us was a great basically benefit a huge benefit that asia cosmos",
    "start": "775040",
    "end": "782240"
  },
  {
    "text": "db and the change fit amazing feature they have",
    "start": "782240",
    "end": "788480"
  },
  {
    "text": "has a integration with another azure services so",
    "start": "788480",
    "end": "794480"
  },
  {
    "text": "we can as as we already showed that we can use azure functions we can also use notification hub or azure app service",
    "start": "794480",
    "end": "801440"
  },
  {
    "text": "for basically event like for notification and event",
    "start": "801440",
    "end": "807920"
  },
  {
    "text": "computing we also can have a stream processing real-time",
    "start": "807920",
    "end": "813120"
  },
  {
    "text": "stream processing processing with asia stream analytics and apache spark",
    "start": "813120",
    "end": "818639"
  },
  {
    "text": "storm or hdinsight this was our use case exactly",
    "start": "818639",
    "end": "825519"
  },
  {
    "text": "when we were receiving all those movements when we were calculating what kind of a",
    "start": "825519",
    "end": "830720"
  },
  {
    "text": "load on system we would have because we had around 30 or 40 warehouses for the",
    "start": "830720",
    "end": "836959"
  },
  {
    "text": "initial start let's say and we still had we wanted to expand and in every warehouse there's basically",
    "start": "836959",
    "end": "842959"
  },
  {
    "text": "like every second every like milliseconds there's happening some some events because uh",
    "start": "842959",
    "end": "848639"
  },
  {
    "text": "basically picker when he scanned the crate of of products we were creating we were generating",
    "start": "848639",
    "end": "854160"
  },
  {
    "text": "movements for every bottle of the of uh of the product every bottle yeah because we're delivering beverages",
    "start": "854160",
    "end": "861600"
  },
  {
    "text": "and um it was generating really really really high load like a lot of different",
    "start": "861600",
    "end": "867279"
  },
  {
    "text": "movements and if you wanted to see some information like for example how",
    "start": "867279",
    "end": "873199"
  },
  {
    "text": "many articles even even how many articles we still have in our warehouse we needed to have real time um",
    "start": "873199",
    "end": "880800"
  },
  {
    "text": "processing of this data and for this apache spark uh was the basically the",
    "start": "880800",
    "end": "886160"
  },
  {
    "text": "great great um service for for our use case so asia cosmos db has uh um under the hood",
    "start": "886160",
    "end": "893519"
  },
  {
    "text": "connectors to the uh with apache spark so the opposite average spark has connected to hd cosmos db node",
    "start": "893519",
    "end": "901040"
  },
  {
    "text": "and uh in real time can basically calculate and aggregate all this data and this will be much much faster than",
    "start": "901040",
    "end": "907600"
  },
  {
    "text": "we will try it also possible with azure cosmos db uh like functions but it will be much faster",
    "start": "907600",
    "end": "914800"
  },
  {
    "text": "with apache spark and also data movement uh it's always was",
    "start": "914800",
    "end": "922639"
  },
  {
    "text": "it's always the same question when when we when we are selecting database uh",
    "start": "922639",
    "end": "929519"
  },
  {
    "text": "the product managers or like stakeholders doesn't matter they all have the same question what if we will",
    "start": "929519",
    "end": "934720"
  },
  {
    "text": "decide to use different database and with azure cosmos db the great thing",
    "start": "934720",
    "end": "940320"
  },
  {
    "text": "that we can easily move our data um in any other data storage it could be the",
    "start": "940320",
    "end": "945680"
  },
  {
    "text": "data lake or blob storage um or storage blob or storage table",
    "start": "945680",
    "end": "950880"
  },
  {
    "text": "or the same cosmos db if we'll change our mind in the process this could be the same cosmos db",
    "start": "950880",
    "end": "958160"
  },
  {
    "text": "because change feed stores the whole history of our like of",
    "start": "958160",
    "end": "963440"
  },
  {
    "text": "our changes all the history of the events from the very very beginning so we can easily just pull all this data",
    "start": "963440",
    "end": "970560"
  },
  {
    "text": "from change feed and transfer it to another data storage",
    "start": "970560",
    "end": "976240"
  },
  {
    "text": "we can also work with the change fit in a different way so we can pull the data it's a pull",
    "start": "976240",
    "end": "982079"
  },
  {
    "text": "model we can also use um change feed processor library it's basically an obstruction on top of this",
    "start": "982079",
    "end": "989279"
  },
  {
    "text": "pool model and this pool is already like done for us and we will",
    "start": "989279",
    "end": "995440"
  },
  {
    "text": "subscribe on a specific container this data will be anytime when there is a change happening",
    "start": "995440",
    "end": "1001440"
  },
  {
    "text": "the data those events will be pushed to us so we have to specify which database which container we're listening to we",
    "start": "1001440",
    "end": "1007440"
  },
  {
    "text": "have to take care of deployment but this is basically quite like pretty easy way to",
    "start": "1007440",
    "end": "1012480"
  },
  {
    "text": "to get get some data from change feed but of course the easiest way with the",
    "start": "1012480",
    "end": "1018959"
  },
  {
    "text": "azure functions we still have to connect to database specify connection string and",
    "start": "1018959",
    "end": "1024480"
  },
  {
    "text": "say which container we want to listen to but it's much easier from the perspective that asia is taking care of",
    "start": "1024480",
    "end": "1031520"
  },
  {
    "text": "us for us of the like the managing completely the azure function and how",
    "start": "1031520",
    "end": "1036720"
  },
  {
    "text": "how it's happening how it works so",
    "start": "1036720",
    "end": "1041600"
  },
  {
    "text": "the function up what we're going to use uh is basically we have we will have our unit of",
    "start": "1042559",
    "end": "1049039"
  },
  {
    "text": "deployment and development and uh our function up will have a couple of",
    "start": "1049039",
    "end": "1054320"
  },
  {
    "text": "functions as already mentioned and we will use um two triggers two type of triggers in our",
    "start": "1054320",
    "end": "1060080"
  },
  {
    "text": "case one trigger is http just to call um for example to trigger creation of the",
    "start": "1060080",
    "end": "1067440"
  },
  {
    "text": "calculation of stock information or um to call negotiating point for example",
    "start": "1067440",
    "end": "1074799"
  },
  {
    "text": "and also we will use cosmos db trigger uh to react on changes to react on",
    "start": "1074799",
    "end": "1080240"
  },
  {
    "text": "movements and generate our new projections also functions has",
    "start": "1080240",
    "end": "1086960"
  },
  {
    "text": "many different bindings there could be output and input binding we will have",
    "start": "1086960",
    "end": "1092799"
  },
  {
    "text": "cosmos db binding and signal are binding so",
    "start": "1092799",
    "end": "1099280"
  },
  {
    "text": "that's basically how it will look like uh i'll show just the the usage and",
    "start": "1099280",
    "end": "1104559"
  },
  {
    "text": "combination of those bindings in my code then we i will also show the",
    "start": "1104559",
    "end": "1109840"
  },
  {
    "text": "the rest of the code with the logic so as you can see here that for a creation of the movement",
    "start": "1109840",
    "end": "1117039"
  },
  {
    "text": "i will use http trigger and i will also use cosmos db uh output",
    "start": "1117039",
    "end": "1124240"
  },
  {
    "text": "binding so what does it mean basically then uh i will say okay i received a movement",
    "start": "1124240",
    "end": "1130080"
  },
  {
    "text": "i received an event and when my azure function will finish uh execution this movement will be",
    "start": "1130080",
    "end": "1136160"
  },
  {
    "text": "automatically saved to cosmos db so we don't need to create a client we don't need to add this document we don't need",
    "start": "1136160",
    "end": "1142160"
  },
  {
    "text": "to say call any safe safe whatever save data method we just need to add to this",
    "start": "1142160",
    "end": "1148480"
  },
  {
    "text": "documents our collection our item our movement and when the asia",
    "start": "1148480",
    "end": "1153919"
  },
  {
    "text": "function will finish execution it will be automatically sent to our our cosmos db",
    "start": "1153919",
    "end": "1160480"
  },
  {
    "text": "the next one is calculate stock we will have cosmos db trigger as you can see we will listen to",
    "start": "1160640",
    "end": "1168240"
  },
  {
    "text": "the warehouse database and to the movements container we also specify cosmos db connection",
    "start": "1168240",
    "end": "1175520"
  },
  {
    "text": "and we have two other properties which is this collection name is to basically manage the state of change feed between",
    "start": "1175520",
    "end": "1181919"
  },
  {
    "text": "the uh to sync the state of the change feed between the asia functions and also",
    "start": "1181919",
    "end": "1188720"
  },
  {
    "text": "uh the flag if you want to create this container of or not",
    "start": "1188720",
    "end": "1194320"
  },
  {
    "text": "we also can provide for example prefix for this list container if you want to use the same container but to share to",
    "start": "1194799",
    "end": "1202159"
  },
  {
    "text": "share it between different azure functions we can provide the prefix for the for the name of this container and",
    "start": "1202159",
    "end": "1208480"
  },
  {
    "text": "then it's we can kind of reuse the resources",
    "start": "1208480",
    "end": "1213520"
  },
  {
    "text": "the next one is to get the storage locations so",
    "start": "1213919",
    "end": "1219360"
  },
  {
    "text": "this also has a http trigger and cosmos db",
    "start": "1219360",
    "end": "1224480"
  },
  {
    "text": "uh input binding uh basically uh here we're gonna going to listen to",
    "start": "1224480",
    "end": "1230559"
  },
  {
    "text": "stock per location we will connect the stock per location uh container and once we will call this",
    "start": "1230559",
    "end": "1237919"
  },
  {
    "text": "function this all the data from this container will be automatically pulled uh from there and we can just return it",
    "start": "1237919",
    "end": "1244960"
  },
  {
    "text": "to the client uh here i'm not using any like filtering or or whatever because i want to receive",
    "start": "1244960",
    "end": "1251600"
  },
  {
    "text": "all the information from the from the container but we can also uh after like a specifying connection",
    "start": "1251600",
    "end": "1258400"
  },
  {
    "text": "string setting we can also provide for example partition key or id of the document or maybe even sql query which",
    "start": "1258400",
    "end": "1264799"
  },
  {
    "text": "is doesn't look really good to be honest in my opinion but it's possible",
    "start": "1264799",
    "end": "1270880"
  },
  {
    "text": "i would not to be honest recommend doing this because i think that it will just introduce complexity and it will be very",
    "start": "1270880",
    "end": "1278159"
  },
  {
    "text": "very confusing when you will open your code you see http trigger and then you see a sql query like and it's like okay",
    "start": "1278159",
    "end": "1285520"
  },
  {
    "text": "so i would just recommend to maybe specify a partition query maybe creating the projections",
    "start": "1285520",
    "end": "1291039"
  },
  {
    "text": "maybe storage procedure if you really want need to do something specific but not do not use a scale",
    "start": "1291039",
    "end": "1297919"
  },
  {
    "text": "queries inside the binding if it's not really really necessary",
    "start": "1297919",
    "end": "1303679"
  },
  {
    "text": "so with the asia functions and triggers and bindings",
    "start": "1303679",
    "end": "1309120"
  },
  {
    "text": "uh what was the great that we had no need to write all this like",
    "start": "1309120",
    "end": "1315600"
  },
  {
    "text": "all the score we had much less core as a result so the development was faster",
    "start": "1315600",
    "end": "1321039"
  },
  {
    "text": "development was much easier because we don't need to create clients to connect to our database we do need to manage to",
    "start": "1321039",
    "end": "1327280"
  },
  {
    "text": "have the whole data access layer for example we have no need in this all the information getting our data is",
    "start": "1327280",
    "end": "1333600"
  },
  {
    "text": "basically can be done and copy with a couple of lines and um",
    "start": "1333600",
    "end": "1339280"
  },
  {
    "text": "i want to show the rest of the code so we will now go to a demo part",
    "start": "1339280",
    "end": "1344559"
  },
  {
    "text": "if i can manage again with",
    "start": "1344559",
    "end": "1348320"
  },
  {
    "text": "yep great managed so",
    "start": "1350640",
    "end": "1356640"
  },
  {
    "text": "let's start from the creation of movement can you see actually the the code oh",
    "start": "1357440",
    "end": "1364480"
  },
  {
    "text": "good okay great so the same thing as i said already i'm",
    "start": "1364480",
    "end": "1369840"
  },
  {
    "text": "using trigger and i'm using output binding so i'm receiving some information i",
    "start": "1369840",
    "end": "1376240"
  },
  {
    "text": "could have a query i could have a body it doesn't really matter in the request",
    "start": "1376240",
    "end": "1382159"
  },
  {
    "text": "then i'm creating basically the movement i'm from the from the information i received",
    "start": "1382159",
    "end": "1390400"
  },
  {
    "text": "uh as you can see here i'm just generating some random movements uh because obviously it's just for a demo",
    "start": "1390400",
    "end": "1397280"
  },
  {
    "text": "purpose but i have some random data for my articles random data for my locations i generated",
    "start": "1397280",
    "end": "1403760"
  },
  {
    "text": "this information and just returned the object afterwards when i have this object as i",
    "start": "1403760",
    "end": "1410559"
  },
  {
    "text": "mentioned already what i have to do is just say documents out the collection of",
    "start": "1410559",
    "end": "1415600"
  },
  {
    "text": "my uh documents with the output binding i will just add this item",
    "start": "1415600",
    "end": "1422960"
  },
  {
    "text": "and that's all i don't need to to call any other method just to save this information",
    "start": "1422960",
    "end": "1428000"
  },
  {
    "text": "once the execution of azure function will be finished it will be automatically sent back",
    "start": "1428000",
    "end": "1434960"
  },
  {
    "text": "get storage location here's a great example actually there is really much less code we we",
    "start": "1436159",
    "end": "1443440"
  },
  {
    "text": "need to to basically get the data i used input binding i get all the",
    "start": "1443440",
    "end": "1449039"
  },
  {
    "text": "information from my container and i just return it back so of course like some",
    "start": "1449039",
    "end": "1454159"
  },
  {
    "text": "logging maybe some validation if it's not empty or whatever and but i just like one line of code basically was",
    "start": "1454159",
    "end": "1462480"
  },
  {
    "text": "with some attributes and some magic behind it and we are good to go so",
    "start": "1462480",
    "end": "1467500"
  },
  {
    "text": "[Music] also with the calculation of stock",
    "start": "1467500",
    "end": "1474880"
  },
  {
    "text": "yes i guess that i was showing different no yeah the calculation of of the stock",
    "start": "1476720",
    "end": "1482240"
  },
  {
    "text": "information also is happening with the cosmos db trigger so as i said we have our",
    "start": "1482240",
    "end": "1487679"
  },
  {
    "text": "movements um container we're going to listen to and",
    "start": "1487679",
    "end": "1493039"
  },
  {
    "text": "here we just deserializing our movements and basically handle movement changes is",
    "start": "1493039",
    "end": "1499200"
  },
  {
    "text": "basically the business logic how we going to process and aggregate our data",
    "start": "1499200",
    "end": "1506080"
  },
  {
    "text": "i moved all the logic away so it would not distract from the from the actual flow but here i have",
    "start": "1507679",
    "end": "1514880"
  },
  {
    "text": "like helper uh that just group groups all the movements and um it",
    "start": "1514880",
    "end": "1521919"
  },
  {
    "text": "will select by storage location by every shelf where i have how many movements happened how",
    "start": "1521919",
    "end": "1528640"
  },
  {
    "text": "many items were added or how many items were removed from this location and then it will just give me back the aggregated",
    "start": "1528640",
    "end": "1534720"
  },
  {
    "text": "already calculated data and from for those three functions",
    "start": "1534720",
    "end": "1540880"
  },
  {
    "text": "that's basically all i would not show you the rest yet because i want to get back to my",
    "start": "1540880",
    "end": "1547039"
  },
  {
    "text": "presentation and",
    "start": "1547039",
    "end": "1550158"
  },
  {
    "text": "try to extend it yes i'm sorry for this switching uh",
    "start": "1553039",
    "end": "1558799"
  },
  {
    "text": "just otherwise i would not see what i'm actually showing you okay",
    "start": "1558799",
    "end": "1563840"
  },
  {
    "text": "so that was uh the part of how we generate movements how we can calculate our stock",
    "start": "1563840",
    "end": "1569679"
  },
  {
    "text": "information and now we go to the signal connection so basically now what we",
    "start": "1569679",
    "end": "1576080"
  },
  {
    "text": "how we can connect to the signal are how we can receive the information how we can work with this",
    "start": "1576080",
    "end": "1583440"
  },
  {
    "text": "we will have another function with the http trigger and signalr uh binding",
    "start": "1583440",
    "end": "1589679"
  },
  {
    "text": "this is this needed uh to return to receive for our client the service and",
    "start": "1589679",
    "end": "1595520"
  },
  {
    "text": "point url and access talking so this asia function will be called by",
    "start": "1595520",
    "end": "1601120"
  },
  {
    "text": "our clients in my case only one client this will be sp application so i would call this",
    "start": "1601120",
    "end": "1609039"
  },
  {
    "text": "asia function explicitly and it will call negotiating point",
    "start": "1609039",
    "end": "1615360"
  },
  {
    "text": "and i will return back this and point url and access token which will be used by",
    "start": "1615360",
    "end": "1620400"
  },
  {
    "text": "my client to connect to the signalr and signalr later on will transfer the data and notify my clients",
    "start": "1620400",
    "end": "1626880"
  },
  {
    "text": "that something is happened there and there is a trigger also um this",
    "start": "1626880",
    "end": "1633200"
  },
  {
    "text": "basically stock change trigger so when we received our movements we calculated our inventory and",
    "start": "1633200",
    "end": "1640720"
  },
  {
    "text": "we saved back this data and now we have to notify our clients that hey something",
    "start": "1640720",
    "end": "1646480"
  },
  {
    "text": "something happened so in this case we are going to use cosmos db trigger",
    "start": "1646480",
    "end": "1653279"
  },
  {
    "text": "and signal our binding binding as well so we gonna subscribe to a collection",
    "start": "1653279",
    "end": "1659440"
  },
  {
    "text": "which is called stock per location and any time the change should happen this",
    "start": "1659440",
    "end": "1665120"
  },
  {
    "text": "it will use this signalr binding uh to add the messages basically to the to the",
    "start": "1665120",
    "end": "1670720"
  },
  {
    "text": "queue so it will send the messages to signalr that hey there something has happened we can get we can put some data",
    "start": "1670720",
    "end": "1676559"
  },
  {
    "text": "there as well we can specify to which basically hub we are listening",
    "start": "1676559",
    "end": "1682159"
  },
  {
    "text": "and it will communicate all the changes basically in real time but of course",
    "start": "1682159",
    "end": "1687919"
  },
  {
    "text": "when we are using like free tire and just for testing purposes it would not be that fast",
    "start": "1687919",
    "end": "1693200"
  },
  {
    "text": "but still so this is uh basically the small",
    "start": "1693200",
    "end": "1698880"
  },
  {
    "text": "piece of application um our client which i'm using for",
    "start": "1698880",
    "end": "1704480"
  },
  {
    "text": "for monitoring my inventory and i have storage location",
    "start": "1704480",
    "end": "1709679"
  },
  {
    "text": "which is has id two to two just basically a refilling process it's a part of refilling uh step",
    "start": "1709679",
    "end": "1716320"
  },
  {
    "text": "and i have some some items there so when the change is happening with asia with",
    "start": "1716320",
    "end": "1721520"
  },
  {
    "text": "asia function my client will call the on the start of the application my client will call negotiate negotiating",
    "start": "1721520",
    "end": "1728960"
  },
  {
    "text": "point will receive information how to connect to actual signalr",
    "start": "1728960",
    "end": "1734639"
  },
  {
    "text": "service and will establish connection by web socket and then asia function will let signalr",
    "start": "1735039",
    "end": "1741679"
  },
  {
    "text": "know through the signal are binding that something happened so there's going to be communication in triangle and then",
    "start": "1741679",
    "end": "1748399"
  },
  {
    "text": "signalr will then send back those messages with with the data",
    "start": "1748399",
    "end": "1755360"
  },
  {
    "text": "that's how it looks like when we want to connect to signalr from a signal service",
    "start": "1756720",
    "end": "1762159"
  },
  {
    "text": "from our client so we have of course i'm using signalr library and so on and",
    "start": "1762159",
    "end": "1767279"
  },
  {
    "text": "i will have a hub connection builder so i it's uh",
    "start": "1767279",
    "end": "1772880"
  },
  {
    "text": "i need to provide the url to my azure function just slash api no negotiate or",
    "start": "1772880",
    "end": "1778159"
  },
  {
    "text": "something it's not needed uh this library will on its own uh called",
    "start": "1778159",
    "end": "1783679"
  },
  {
    "text": "endpoint with the negotiate wrote and we'll get all the necessary",
    "start": "1783679",
    "end": "1789120"
  },
  {
    "text": "basic information oops i'm sorry all the necessary information for our connection",
    "start": "1789120",
    "end": "1794399"
  },
  {
    "text": "and then afterwards then we can start basically connection.start it will establish",
    "start": "1794399",
    "end": "1802080"
  },
  {
    "text": "connection with azure signalr through the websocket and basically our client will be ready to receive some messages",
    "start": "1802080",
    "end": "1809600"
  },
  {
    "text": "this this is how we can subscribe on a specific um basically event",
    "start": "1809600",
    "end": "1815440"
  },
  {
    "text": "we can say connection on and specify the event name so when there is a change",
    "start": "1815440",
    "end": "1820559"
  },
  {
    "text": "happening for the uh for example movement was created or stock information was updated uh we subscribe",
    "start": "1820559",
    "end": "1827039"
  },
  {
    "text": "to it and then we can provide like basically business logic how we going to handle uh our",
    "start": "1827039",
    "end": "1833360"
  },
  {
    "text": "change how how we're going to handle this message for my client i'm using react and i'm",
    "start": "1833360",
    "end": "1841120"
  },
  {
    "text": "using more big state three has anyone ever used mobix d3 here from",
    "start": "1841120",
    "end": "1847520"
  },
  {
    "text": "no no one no one okay great this this is this is um very lightweight basically um",
    "start": "1847520",
    "end": "1855440"
  },
  {
    "text": "there is mobx and there is one big state tree so basically it's a data structure a tree structure of our",
    "start": "1855440",
    "end": "1862720"
  },
  {
    "text": "data for the client and it's a library that helps and simplifies the",
    "start": "1862720",
    "end": "1868159"
  },
  {
    "text": "organization of application state of course in a very very structured",
    "start": "1868159",
    "end": "1874320"
  },
  {
    "text": "manner so we basically have a store where related to a specific entity where we",
    "start": "1874320",
    "end": "1880320"
  },
  {
    "text": "can specify how we're going to re show our data on on",
    "start": "1880320",
    "end": "1885440"
  },
  {
    "text": "ui uh so basically views and how we're going to operate with our data through",
    "start": "1885440",
    "end": "1890640"
  },
  {
    "text": "the actions and of course the model itself it's how our data looks like so for the",
    "start": "1890640",
    "end": "1897039"
  },
  {
    "text": "for the ui for the small applications for example mobixt3 in my opinion is a really nice",
    "start": "1897039",
    "end": "1903919"
  },
  {
    "text": "nice library because it simplifies and speed ups the development quite",
    "start": "1903919",
    "end": "1909360"
  },
  {
    "text": "quite good so yeah oh i already said everything why i liked it but yeah once",
    "start": "1909360",
    "end": "1914720"
  },
  {
    "text": "more so it's provide centralized stores as i already mentioned there's there was the models with views and actions",
    "start": "1914720",
    "end": "1921360"
  },
  {
    "text": "it's um data is easy to use but it's protected so that that's actually the good point i",
    "start": "1921360",
    "end": "1927440"
  },
  {
    "text": "forgot to mention uh so my data is mutable but it's only can be mutated through the specific actions so i cannot",
    "start": "1927440",
    "end": "1934640"
  },
  {
    "text": "just call the property and my model say uh and assign it a different value i",
    "start": "1934640",
    "end": "1939679"
  },
  {
    "text": "cannot do this this would not work and this is kind of like encapsulates with",
    "start": "1939679",
    "end": "1945519"
  },
  {
    "text": "my data so protects it and the last thing is um can",
    "start": "1945519",
    "end": "1951039"
  },
  {
    "text": "it's normalized my data so it has a built-in support for references so i can",
    "start": "1951039",
    "end": "1956720"
  },
  {
    "text": "have a normalized data and i can basically just reference one store from the different place of of my application",
    "start": "1956720",
    "end": "1963039"
  },
  {
    "text": "and i can reuse already what is created so i don't need to duplicate it somehow and",
    "start": "1963039",
    "end": "1969519"
  },
  {
    "text": "demo part so once again the same magic",
    "start": "1971039",
    "end": "1978158"
  },
  {
    "text": "with mirroring great so going back to my",
    "start": "1979120",
    "end": "1984159"
  },
  {
    "text": "back end basically this is how negotiating point looks like",
    "start": "1984159",
    "end": "1989760"
  },
  {
    "text": "in general so not enhancing more one more line besides the actual",
    "start": "1989760",
    "end": "1994880"
  },
  {
    "text": "attributes so i triggered i have a trigger i got all the information with",
    "start": "1994880",
    "end": "2000000"
  },
  {
    "text": "my access token and url and i just returned this connection information back",
    "start": "2000000",
    "end": "2005600"
  },
  {
    "text": "with the stock change trigger itself it's a bit different so as i said already that we're going to send back",
    "start": "2005600",
    "end": "2011840"
  },
  {
    "text": "the messages of what actually what actually happened so we're going to react in changes in",
    "start": "2011840",
    "end": "2017840"
  },
  {
    "text": "cosmos db we will lock some information we will generate the message",
    "start": "2017840",
    "end": "2025039"
  },
  {
    "text": "and i will have event called stock prolocation uh changed so basically",
    "start": "2025039",
    "end": "2031200"
  },
  {
    "text": "the something that some updates happen update happened or maybe some new articles that were added and i also will send back the actual",
    "start": "2031200",
    "end": "2039039"
  },
  {
    "text": "input like all the storage locations that were updated i will send them back in arguments and i will just add the",
    "start": "2039039",
    "end": "2047519"
  },
  {
    "text": "those these messages to the signalr messages collection and that's basically",
    "start": "2047519",
    "end": "2052878"
  },
  {
    "text": "all so they will be sent to the service agent signal service and this service will communicate to our",
    "start": "2052879",
    "end": "2059118"
  },
  {
    "text": "clients through the web socket that something happened",
    "start": "2059119",
    "end": "2063280"
  },
  {
    "text": "going to the client oops",
    "start": "2064800",
    "end": "2070638"
  },
  {
    "text": "yes so this is the place how i'm what i'm connecting basically to the signalr",
    "start": "2070639",
    "end": "2077679"
  },
  {
    "text": "service and as i mentioned before that i'm using in",
    "start": "2077679",
    "end": "2083200"
  },
  {
    "text": "using mobix state 3 so that's how it looks like i have a store where i'm",
    "start": "2083200",
    "end": "2089118"
  },
  {
    "text": "describing the model because this is this is my store to connect to the",
    "start": "2089119",
    "end": "2094240"
  },
  {
    "text": "signalr i don't really have any model there so the only thing i need to do with the store is just to connect to the",
    "start": "2094240",
    "end": "2100480"
  },
  {
    "text": "service so my model will be just an empty object and the actions which uh",
    "start": "2100480",
    "end": "2106720"
  },
  {
    "text": "that i specified here is will be connected socket and getstream so it's two two actions",
    "start": "2106720",
    "end": "2114880"
  },
  {
    "text": "with the connection to socket as i said i'm going to use signalr",
    "start": "2114880",
    "end": "2121280"
  },
  {
    "text": "library and i'm providing the url to my azure function",
    "start": "2121280",
    "end": "2128240"
  },
  {
    "text": "and i'm starting my connection here so i can also like provide some logic how i'm going to handle if something",
    "start": "2128240",
    "end": "2134960"
  },
  {
    "text": "failed maybe there is problem with some notification but that's basically have to up to you how to do",
    "start": "2134960",
    "end": "2140480"
  },
  {
    "text": "this but the main the most important line is this one so we connect connection dot",
    "start": "2140480",
    "end": "2146160"
  },
  {
    "text": "start and then afterwards when i want to basically",
    "start": "2146160",
    "end": "2152560"
  },
  {
    "text": "receive uh the events subscribe to this specific event i have a event name",
    "start": "2152560",
    "end": "2158880"
  },
  {
    "text": "and i'm checking if i already have this subscription or not because i don't want any duplication and i will",
    "start": "2158880",
    "end": "2166640"
  },
  {
    "text": "connect to the event i will listen to the changes and then i will",
    "start": "2166640",
    "end": "2172560"
  },
  {
    "text": "execute basically i will process this data i will use some",
    "start": "2172560",
    "end": "2178720"
  },
  {
    "text": "business logic whatever i have maybe just to show one on the screen maybe just aggregate it and show it in different",
    "start": "2178720",
    "end": "2185040"
  },
  {
    "text": "ways it doesn't really matter so the most important that we can react on those events here",
    "start": "2185040",
    "end": "2191920"
  },
  {
    "text": "and from the ui part that's all i want to go",
    "start": "2192320",
    "end": "2198640"
  },
  {
    "text": "back to a portal not back but not to a portal and actually show",
    "start": "2198640",
    "end": "2204880"
  },
  {
    "text": "show the um the azure function the function up i have",
    "start": "2206560",
    "end": "2212000"
  },
  {
    "text": "so this is the the function app i'm using for cosmos for this um",
    "start": "2212560",
    "end": "2218000"
  },
  {
    "text": "demo for cosmos db signalrs react so i have functions all those functions we",
    "start": "2218000",
    "end": "2223280"
  },
  {
    "text": "already saw before they are listed here so basically um you can have those",
    "start": "2223280",
    "end": "2229680"
  },
  {
    "text": "functions all together but also a good way if there is no specific reason to keep them together",
    "start": "2229680",
    "end": "2235280"
  },
  {
    "text": "will be better to create different function up for different uh for separate",
    "start": "2235280",
    "end": "2240880"
  },
  {
    "text": "function and i can also trigger them from here for example i can",
    "start": "2240880",
    "end": "2247119"
  },
  {
    "text": "run code and test trigger and they should work if you provide some data",
    "start": "2247119",
    "end": "2253279"
  },
  {
    "text": "and with our database cosmosdb here what i have is",
    "start": "2253440",
    "end": "2260560"
  },
  {
    "text": "i have a warehouse database and i as we saw before i have three containers",
    "start": "2262560",
    "end": "2267839"
  },
  {
    "text": "so we saw already movement container with so already how stock per location basically will be created and this",
    "start": "2267839",
    "end": "2273520"
  },
  {
    "text": "container just for managing state of azure functions as i mentioned before that i had some",
    "start": "2273520",
    "end": "2280079"
  },
  {
    "text": "troubles with the demo itself so i will go back to my",
    "start": "2280079",
    "end": "2286040"
  },
  {
    "text": "presentation and i managed to do some screens before",
    "start": "2286040",
    "end": "2292720"
  },
  {
    "text": "i managed to do some screens of how to actually um",
    "start": "2293440",
    "end": "2299560"
  },
  {
    "text": "oops i'm sorry",
    "start": "2300400",
    "end": "2303599"
  },
  {
    "text": "not nothing easy",
    "start": "2308320",
    "end": "2311960"
  },
  {
    "text": "oh great so uh i have a couple of screens uh",
    "start": "2313359",
    "end": "2318480"
  },
  {
    "text": "where i want to show basically what is what was supposed to happen during the demo",
    "start": "2318480",
    "end": "2323520"
  },
  {
    "text": "um i all this core is on github available",
    "start": "2323520",
    "end": "2328560"
  },
  {
    "text": "so if someone would be interested to actually see how it works it can i can run it later on you can drop me a",
    "start": "2328560",
    "end": "2333920"
  },
  {
    "text": "message you can do this together doesn't it [Music] but in general",
    "start": "2333920",
    "end": "2340640"
  },
  {
    "text": "so this is how the application looks like in general so there is just two buttons to",
    "start": "2340640",
    "end": "2347119"
  },
  {
    "text": "create the movements to generate some random movements and start interval should basically simulate um",
    "start": "2347119",
    "end": "2355440"
  },
  {
    "text": "the the movements are happening in the real time in in our warehouse so basically the collection of movements",
    "start": "2355440",
    "end": "2360960"
  },
  {
    "text": "the uh with a higher load of data and in our",
    "start": "2360960",
    "end": "2366240"
  },
  {
    "text": "database there's of course at this moment there would be nothing and once the uh we will trigger creation",
    "start": "2366240",
    "end": "2373599"
  },
  {
    "text": "of movements we will start receiving on our ui some information about storage locations so we will have the storage",
    "start": "2373599",
    "end": "2379920"
  },
  {
    "text": "location and the names of the articles we will have for example minus minus one",
    "start": "2379920",
    "end": "2387200"
  },
  {
    "text": "minus whatever values and normally like it's the question like how does it happen that we have the negative",
    "start": "2387200",
    "end": "2393359"
  },
  {
    "text": "value in the shelf but actually it's it's quite easy uh like this is a real use case it can happen in warehouse",
    "start": "2393359",
    "end": "2400160"
  },
  {
    "text": "because people can still people can broke something the bottle can suddenly disappear and that's what generates the",
    "start": "2400160",
    "end": "2407200"
  },
  {
    "text": "minus values basically and we should handle this uh for for us it was also very important to understand where we",
    "start": "2407200",
    "end": "2414079"
  },
  {
    "text": "actually have uh when when is it happening and what's the reason for it and in the date in a cosmos db we will",
    "start": "2414079",
    "end": "2421280"
  },
  {
    "text": "have some documents generated in the movements containers uh",
    "start": "2421280",
    "end": "2426400"
  },
  {
    "text": "they if you can see they would look like just a plain document was uh with some information basically what is the",
    "start": "2426400",
    "end": "2432400"
  },
  {
    "text": "movement from which location to which location it happened uh but it's basically just an event",
    "start": "2432400",
    "end": "2439200"
  },
  {
    "text": "when we will have uh stock information calculated sorry",
    "start": "2439200",
    "end": "2444960"
  },
  {
    "text": "this basically will be aggregation of our movements so on this location",
    "start": "2444960",
    "end": "2451760"
  },
  {
    "text": "a type for example of the step in the process is like picking or refilling or inbound outbound doesn't really matter",
    "start": "2451760",
    "end": "2458560"
  },
  {
    "text": "and we will have a different articles so with basically basically quantity the article",
    "start": "2458560",
    "end": "2465200"
  },
  {
    "text": "id and article name so that's the only information that will be interested for us and",
    "start": "2465200",
    "end": "2471760"
  },
  {
    "text": "this is um the stock per location that's the information that our client will receive and i will be able to just to",
    "start": "2471760",
    "end": "2478400"
  },
  {
    "text": "display per every location all the information about articles aggregated information",
    "start": "2478400",
    "end": "2486319"
  },
  {
    "text": "in the demo i also like usually i",
    "start": "2487119",
    "end": "2492160"
  },
  {
    "text": "trigger the stock change such the stock change trigger basically just to generate some movements and see uh",
    "start": "2492160",
    "end": "2499839"
  },
  {
    "text": "first of all that i can test like this my asia functions triggering it from asia but also",
    "start": "2499839",
    "end": "2505920"
  },
  {
    "text": "to generate some events and see how the changes are happening in real time",
    "start": "2505920",
    "end": "2511760"
  },
  {
    "text": "yeah that's basically what we were supposed to see with the demo and",
    "start": "2511760",
    "end": "2518000"
  },
  {
    "text": "i guess there are already a bit of out of time so just to summarize it so in with this approach",
    "start": "2518079",
    "end": "2524400"
  },
  {
    "text": "we managed to have much much less code with azure functions we already saw how bindings and triggers can can",
    "start": "2524400",
    "end": "2531119"
  },
  {
    "text": "nicely combine and afterwards we just need to write a couple of lines to actually return the data or aggregate it",
    "start": "2531119",
    "end": "2538240"
  },
  {
    "text": "we can concentrate on our business logic so we don't need to take care like we had the concern that our developers",
    "start": "2538240",
    "end": "2544319"
  },
  {
    "text": "don't know how to use the cosmos db or our developers to know how to use some connections to like signalr but",
    "start": "2544319",
    "end": "2550079"
  },
  {
    "text": "with azure functions doesn't really matter we can concentrate on business logic use those bindings uh and we don't",
    "start": "2550079",
    "end": "2556480"
  },
  {
    "text": "really like our developers don't have a need to actually see it and spend invest time of course it's great",
    "start": "2556480",
    "end": "2563119"
  },
  {
    "text": "when they when they learn but when there is a not to slow down but",
    "start": "2563119",
    "end": "2568240"
  },
  {
    "text": "speed up the process this is a good way to go and also it's introduced us simplicity",
    "start": "2568240",
    "end": "2573839"
  },
  {
    "text": "um in building basically those separate components independently and we don't",
    "start": "2573839",
    "end": "2579280"
  },
  {
    "text": "need to basically be worried that one developer will step on another we can just provide",
    "start": "2579280",
    "end": "2586160"
  },
  {
    "text": "the same the amount of data same sets of data our movements in a container and",
    "start": "2586160",
    "end": "2591200"
  },
  {
    "text": "then we can just connect to to the change feed for example pull this information and every developer can",
    "start": "2591200",
    "end": "2596800"
  },
  {
    "text": "generate different projections uh independently and work in it and that's basically all um",
    "start": "2596800",
    "end": "2606000"
  },
  {
    "text": "yeah once again if someone have any questions or comments uh please feel free to",
    "start": "2606000",
    "end": "2613520"
  },
  {
    "text": "to either write me or now if if there is any but i guess i have only a couple of minutes left",
    "start": "2613520",
    "end": "2619760"
  },
  {
    "text": "with because of those problems from the beginning thanks a lot for the for the attention uh sorry for the problems and",
    "start": "2619760",
    "end": "2625599"
  },
  {
    "text": "the troubles with demo if anything someone wants to have code it will be available in github",
    "start": "2625599",
    "end": "2632760"
  },
  {
    "text": "[Applause]",
    "start": "2632760",
    "end": "2638859"
  },
  {
    "text": "you",
    "start": "2644640",
    "end": "2646720"
  }
]