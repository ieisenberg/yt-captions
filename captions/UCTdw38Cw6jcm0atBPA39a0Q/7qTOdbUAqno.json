[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "okay well thanks for coming along this is a bit of a dry title I'm hoping the",
    "start": "2310",
    "end": "7380"
  },
  {
    "text": "topic won't be drying some I'm actually impressed so it got people to turn up I either that we were here for a nice nap either way I'll try and keep the",
    "start": "7380",
    "end": "14129"
  },
  {
    "text": "noise down but face of how it's for coming along my name is Sam Newman I am",
    "start": "14129",
    "end": "19320"
  },
  {
    "text": "an independent consultant now I have a company called Sam Newman and associates because I'm egocentric and therefore",
    "start": "19320",
    "end": "24600"
  },
  {
    "text": "like naming things after myself so anyway if you want to know more about",
    "start": "24600",
    "end": "29760"
  },
  {
    "text": "what I do come talk to me later I also wrote a book a couple years ago called building market services which you may or may not have written read if you like",
    "start": "29760",
    "end": "36420"
  },
  {
    "start": "30000",
    "end": "107000"
  },
  {
    "text": "learning about micro services it might be the book for you this topic is not about micro services is actually really",
    "start": "36420",
    "end": "42480"
  },
  {
    "text": "in some ways about my first sort of love and passion really which is helping",
    "start": "42480",
    "end": "47879"
  },
  {
    "text": "people get software into production quickly that was my focus for many many years and actually that led me to look",
    "start": "47879",
    "end": "53429"
  },
  {
    "text": "into micro service architectures as a way of making it easier to create loosely coupled architectures loosely",
    "start": "53429",
    "end": "59850"
  },
  {
    "text": "coupled architectures being something which are much easier to ship into production more quickly I want to take",
    "start": "59850",
    "end": "65190"
  },
  {
    "text": "you back in time actually to give you a bit of a bit of a history lesson really to explain my journey into the world of",
    "start": "65190",
    "end": "71250"
  },
  {
    "text": "continuous integration and continuous delivery what we're going to be doing in this talk is recapping a number of sort",
    "start": "71250",
    "end": "78210"
  },
  {
    "text": "of central tenants around CI and CD looking into things like feature branching and feature toggles and",
    "start": "78210",
    "end": "84600"
  },
  {
    "text": "re-examining them in the context of you know the emergence of git and github and",
    "start": "84600",
    "end": "90479"
  },
  {
    "text": "new types of development practices that we now have and and really trying to think okay do the does the advice that",
    "start": "90479",
    "end": "96149"
  },
  {
    "text": "we gave you know back in 2005 around these sorts of things it really stack up in the new world based on what we know",
    "start": "96149",
    "end": "102750"
  },
  {
    "text": "now and based on how we develop software now so will this destroy does start in at least for me in 2004 and I just",
    "start": "102750",
    "end": "109590"
  },
  {
    "start": "107000",
    "end": "256000"
  },
  {
    "text": "started as a pimply-faced youth at ThoughtWorks and and they said okay so it was my",
    "start": "109590",
    "end": "116159"
  },
  {
    "text": "first day at work and they said okay you're going to go to this platform at Euston station and between the fourth",
    "start": "116159",
    "end": "121649"
  },
  {
    "text": "and fifth pillar there'll be some people standing around and they'll look like you're going to be working with them and you'll just have to work it out based on",
    "start": "121649",
    "end": "128580"
  },
  {
    "text": "what they look like and I think it spoke volumes about a lack of diversity in the team at the time which was very easy to",
    "start": "128580",
    "end": "135150"
  },
  {
    "text": "walk and up that platform and see exactly what I was going to be working with but nonetheless so we would get on the platform and we",
    "start": "135150",
    "end": "140580"
  },
  {
    "text": "travel all the way up to where the client site was in a place called hemel hempstead if you've been to hemel",
    "start": "140580",
    "end": "147630"
  },
  {
    "text": "hempstead you'll know very little about it really because it's quite an anonymous place so we get on the train",
    "start": "147630",
    "end": "152700"
  },
  {
    "text": "and train all the way up and we'd have dreams on the way to him all about maybe if we just stayed on a few more stops we",
    "start": "152700",
    "end": "158460"
  },
  {
    "text": "could just get off at Bletchley Park and no one would notice wanderin going I look at some in enigma machines as I'm Turing Brahms we never",
    "start": "158460",
    "end": "164430"
  },
  {
    "text": "did it though because we were dedicated professionals and also because you know often the train stops ahem ahem said",
    "start": "164430",
    "end": "169950"
  },
  {
    "text": "anyway I arrived at a project it was a very large project that thought the time",
    "start": "169950",
    "end": "176010"
  },
  {
    "text": "was running primary doing the development in the United Kingdom but also with support from people in Canada",
    "start": "176010",
    "end": "182190"
  },
  {
    "text": "and India as well and it was a project for one of Europe's largest retailers",
    "start": "182190",
    "end": "187590"
  },
  {
    "text": "and it was sort of a form of a rescue project in a way which was this company",
    "start": "187590",
    "end": "192780"
  },
  {
    "text": "had engaged another supplier to create a brand new electronic point-of-sale",
    "start": "192780",
    "end": "199080"
  },
  {
    "text": "system and that electronic point-of-sale system was late and so they said oh it's",
    "start": "199080",
    "end": "204780"
  },
  {
    "text": "very very late so they got with her once Appliance had to come in and fix it and so we turned up and it was I think it",
    "start": "204780",
    "end": "210090"
  },
  {
    "text": "was an 18-month project originally when they started it and they were 18 months in and they were still 18 months away",
    "start": "210090",
    "end": "215640"
  },
  {
    "text": "from delivering and I think everyone could do the maths and work out that's not going in the right direction so it was sort of coming it was all",
    "start": "215640",
    "end": "221520"
  },
  {
    "text": "hands to the pump and we gotta fix stuff to make stuff happen and it's been going on for probably about a year or two I",
    "start": "221520",
    "end": "226680"
  },
  {
    "text": "think before I got there and so I arrived in an interesting juncture in the in a lifecycle of this",
    "start": "226680",
    "end": "233580"
  },
  {
    "text": "project if this retailer had multiple different stores different branches",
    "start": "233580",
    "end": "239280"
  },
  {
    "text": "different types of chains a different brand underneath the overall banner and so they've been slowly rolling out this",
    "start": "239280",
    "end": "244620"
  },
  {
    "text": "new point-of-sale system to different stores and effectively cutting new releases to represent each store roll",
    "start": "244620",
    "end": "251130"
  },
  {
    "text": "out a new set of features these releases were almost like a milestone so a collection of things and so we had most",
    "start": "251130",
    "end": "257370"
  },
  {
    "start": "256000",
    "end": "493000"
  },
  {
    "text": "this development had been done up to this point was being done on the r3 branch of code and so this was the kind",
    "start": "257370",
    "end": "264090"
  },
  {
    "text": "of new cutting-edge features we're working on this is like a a mix of a monolithic server back-end",
    "start": "264090",
    "end": "269130"
  },
  {
    "text": "and I swing based fronting we should we'll get an appellant ourselves point-of-sale systems of running in fact they still run the same point-of-sale",
    "start": "269130",
    "end": "275370"
  },
  {
    "text": "systems this day and so the bulk of the organization at this point the bulk of the delivery organization was working",
    "start": "275370",
    "end": "281460"
  },
  {
    "text": "and making changes on this sort of our three branch of code and it was the current release and they're actually putting out multiple deployments from",
    "start": "281460",
    "end": "287880"
  },
  {
    "text": "that branch it wasn't like you know there was only gonna do one release so we're actually releasing fairly",
    "start": "287880",
    "end": "293670"
  },
  {
    "text": "frequently from that main branch of code now as I mentioned his project initially",
    "start": "293670",
    "end": "299220"
  },
  {
    "text": "had started off in a bit of a hurry as in we need to get something out and so as is always the case when you have to",
    "start": "299220",
    "end": "305490"
  },
  {
    "text": "make compromises between doing things the right way and actually you know actually having software that works and",
    "start": "305490",
    "end": "311820"
  },
  {
    "text": "being used in production you sometimes have to make a few compromises and compromises had indeed been made and",
    "start": "311820",
    "end": "317640"
  },
  {
    "text": "around the time of the our three branch of code when those releases were getting out the DES team were getting a bit of",
    "start": "317640",
    "end": "322740"
  },
  {
    "text": "breathing space and to give you an idea at this point you had about 60 developers working across multiple teams",
    "start": "322740",
    "end": "327870"
  },
  {
    "text": "on this project and that you know things were fairly stable and things were getting out nicely the core feature set",
    "start": "327870",
    "end": "334800"
  },
  {
    "text": "was was being used quite widely now and we thought okay well this is a great opportunity to sort of clean up a few",
    "start": "334800",
    "end": "340620"
  },
  {
    "text": "things that we've done that we knew was shortcuts but also it learnt a lot about how to build the system well and we",
    "start": "340620",
    "end": "347100"
  },
  {
    "text": "wanted to make some architectural changes also there was things like you know we had two or three different ways",
    "start": "347100",
    "end": "352620"
  },
  {
    "text": "of achieving a certain goal right persistence for example has been done in multiple different ways and it was thought actually yes we could unify that",
    "start": "352620",
    "end": "358740"
  },
  {
    "text": "as well so what happened was that we the senior was made to actually have a small",
    "start": "358740",
    "end": "364800"
  },
  {
    "text": "team go and start looking at making these targeted changes but some of these changes were going to be quite disruptive and so they did what we would",
    "start": "364800",
    "end": "371790"
  },
  {
    "text": "traditionally do an atty stage of this is part of the software development lifecycle which is we created a branch",
    "start": "371790",
    "end": "378480"
  },
  {
    "text": "and so that small team went off and started making these refactorings and these changes on a separate branch of",
    "start": "378480",
    "end": "386640"
  },
  {
    "text": "code which was called r4 and the idea was at a certain time when they were ready r4 would become the brand-new release",
    "start": "386640",
    "end": "393000"
  },
  {
    "text": "branch it would be the version of the code that starts running in all these stores and so changes were still being",
    "start": "393000",
    "end": "398730"
  },
  {
    "text": "made by the bulk of the team which stayed worth your nori and they were delivering customer face features out to production the r4 branch",
    "start": "398730",
    "end": "405870"
  },
  {
    "text": "of code was a refactoring branch where new abstractions are being created new ways of working it was a lovely lovely",
    "start": "405870",
    "end": "411810"
  },
  {
    "text": "lovely clear clean codebase at this point because I've been so things so much refactoring and then they said well",
    "start": "411810",
    "end": "417210"
  },
  {
    "text": "okay we think we're in a good place now we think this can now become the brand-new release branch this is should",
    "start": "417210",
    "end": "423990"
  },
  {
    "text": "be now be promoted to being what we've released our code from and of course at this point we had to do what we always",
    "start": "423990",
    "end": "429810"
  },
  {
    "text": "have to do at this point which is now merge all the features that have been worked on in r3 over onto the brand-new",
    "start": "429810",
    "end": "435990"
  },
  {
    "text": "r4 release branch and of course that went really really well as you can",
    "start": "435990",
    "end": "441210"
  },
  {
    "text": "imagine there were definitely absolutely no problems whatsoever and it was a completely painless process and nobody",
    "start": "441210",
    "end": "447660"
  },
  {
    "text": "died actually no one did die but at some days there it was pretty bad so it took a while to get the code to compile a few",
    "start": "447660",
    "end": "455190"
  },
  {
    "text": "days I think it was but then you had this whole process of just like the textual merging of like what they've",
    "start": "455190",
    "end": "461400"
  },
  {
    "text": "renamed things and those things have moved around and that took a long time carrying out that initial merge and then",
    "start": "461400",
    "end": "467610"
  },
  {
    "text": "we started realizing that even though we thought we'd done the merges that we'd introduce a whole load of bugs and defects we'd introduce regressions and",
    "start": "467610",
    "end": "474900"
  },
  {
    "text": "features that we thought had been cleanly merged over it actually being sort of regressed and haven't actually been properly merged at all they weren't",
    "start": "474900",
    "end": "480930"
  },
  {
    "text": "working properly with introduced brand-new bugs because of just clashes in functionality and so it was decided",
    "start": "480930",
    "end": "486510"
  },
  {
    "text": "to create a team to target fixes are in this area hence the creation of the r3",
    "start": "486510",
    "end": "494639"
  },
  {
    "text": "r4 merge bug fix team doesn't just get your pulse racing when you'd arrive on",
    "start": "494639",
    "end": "499950"
  },
  {
    "text": "site and your first day and you've learned all this stuff about its amazing companies great people that work there and how much awesome technology there",
    "start": "499950",
    "end": "505889"
  },
  {
    "text": "and it's martin fowler's company and he does loads of great stuff and then you turn up they say hi Sam you're going to",
    "start": "505889",
    "end": "511530"
  },
  {
    "text": "be working in the r3 r4 merged bug fix team and it does they was did exactly",
    "start": "511530",
    "end": "517529"
  },
  {
    "text": "what it said in the tin I mean my initial reaction was obvious yeah yeah well thank you I wasn't at all annoyed I",
    "start": "517529",
    "end": "523709"
  },
  {
    "text": "learnt a lot to be fair hence kind of almost it kick-started at that next phase of my career because I got to",
    "start": "523709",
    "end": "529740"
  },
  {
    "text": "relive through the experiences of what not to do and deal with the aftermath of that I will say that there was a bit of",
    "start": "529740",
    "end": "536370"
  },
  {
    "text": "a pose many years later I was I lived in London and many years later I was woken up in",
    "start": "536370",
    "end": "541680"
  },
  {
    "text": "the dead of night my bed was shaking and it turned out there'd been an explosion and an oil refinery next to the site",
    "start": "541680",
    "end": "547380"
  },
  {
    "text": "where we'd been working in Hemel Hempstead luckily no one died no one's even injured amazingly but I do sort of",
    "start": "547380",
    "end": "553650"
  },
  {
    "text": "like to feel that this was sort of some some sort of deferred explosion as a result of that merge of code it would",
    "start": "553650",
    "end": "560310"
  },
  {
    "text": "have been much more poetic if it happened on the day we did the merge so there's a lot of things that came out of",
    "start": "560310",
    "end": "566250"
  },
  {
    "text": "that experience not just for me but for many others and the seeds of of the continuous delivery movement started on",
    "start": "566250",
    "end": "571800"
  },
  {
    "text": "that project des Farley who was the author one of the authors of the continuous delivery book in fact was the",
    "start": "571800",
    "end": "576870"
  },
  {
    "text": "architect on that project and of course at this point many people will be saying but but Sam wouldn't you or weren't you",
    "start": "576870",
    "end": "583860"
  },
  {
    "text": "doing continuous integration weren't you actually continually integrating your code and validating that code works",
    "start": "583860",
    "end": "589410"
  },
  {
    "text": "together that's how we reduce merge pain so just a brief recap of what continuous",
    "start": "589410",
    "end": "594660"
  },
  {
    "text": "integration is I think actually hands up here who is doing continuous integration but hands up high okay most people claim",
    "start": "594660",
    "end": "601920"
  },
  {
    "text": "to be doing continuous integration so I'm going to recap it though to make sure we're on the same page it's really a very simple process and it's a",
    "start": "601920",
    "end": "609180"
  },
  {
    "text": "mechanism by which you make sure that the code that you've committed works with a code that's already there you integrate that code together you",
    "start": "609180",
    "end": "615210"
  },
  {
    "text": "validate it so you know you work on your laptop on your desktop machine we were working on laptops back then it was well",
    "start": "615210",
    "end": "622890"
  },
  {
    "text": "the embarrassing moment when the the retailers offices were burgled and everybody's laptops was stolen apart",
    "start": "622890",
    "end": "629760"
  },
  {
    "text": "from our laptops and like even burglars decided not to take Toshiba Tecla laptops it was sort of the size of small",
    "start": "629760",
    "end": "635610"
  },
  {
    "text": "planets that you'd carry around anyway so we've been working away on these sort of Titanic size laptops that just",
    "start": "635610",
    "end": "642030"
  },
  {
    "text": "steam-powered and you check your code in and you know that these days it was not",
    "start": "642030",
    "end": "647520"
  },
  {
    "text": "get it was not even subversion back then it was something a lot worse I won't name because I think the vendor still exists and they might get angry so you",
    "start": "647520",
    "end": "653520"
  },
  {
    "text": "check the code in to the source code repository and in some kind of continuous integration tool detects that",
    "start": "653520",
    "end": "659250"
  },
  {
    "text": "change so it could be a polling train - it could be a post commit trigger and says okay we're going to kick off an",
    "start": "659250",
    "end": "665220"
  },
  {
    "text": "integration process and I'm going to tell you whether or not your integration has worked so starting",
    "start": "665220",
    "end": "671040"
  },
  {
    "text": "for the basic stuff like does it compile people do think that's a bit silly does",
    "start": "671040",
    "end": "676259"
  },
  {
    "text": "it compile but even or not I spent a good five years helping roll out continuous integration to many companies",
    "start": "676259",
    "end": "681540"
  },
  {
    "text": "across Europe and that was often a huge improvement in their current state of affairs making sure that the code",
    "start": "681540",
    "end": "687600"
  },
  {
    "text": "actually all compiled together anyway we've got better now of course we talk about different test Suites and those of",
    "start": "687600",
    "end": "692730"
  },
  {
    "text": "you at the previous talk would have learned how how far testing has become has come since then so you know this is",
    "start": "692730",
    "end": "698370"
  },
  {
    "text": "the process of continuous integration there are some rules about what continuous integration is and this is where things get interesting and people",
    "start": "698370",
    "end": "704519"
  },
  {
    "text": "get quite cross because they say that's not continuous integration and actually this yes this is this is what continuous",
    "start": "704519",
    "end": "710550"
  },
  {
    "text": "integration is all about right you check your new change and you get it validated that's very straightforward somebody",
    "start": "710550",
    "end": "717449"
  },
  {
    "text": "else checks in some code they get their change validated validation of the integration is key compilation running",
    "start": "717449",
    "end": "723630"
  },
  {
    "text": "some tests you have to have a suite that validates your integration otherwise you're not doing continuous integration",
    "start": "723630",
    "end": "729110"
  },
  {
    "text": "when the build breaks when you check in a change that breaks your build it should be the number one priority of the",
    "start": "729110",
    "end": "735120"
  },
  {
    "text": "team to fix that build you want to keep your builds green normally that means that the guilty party who checked in the",
    "start": "735120",
    "end": "741449"
  },
  {
    "text": "change has to go and fix it that's normally the rule which also leads to patterns of behavior like nobody checks",
    "start": "741449",
    "end": "747630"
  },
  {
    "text": "in after four o'clock on a Friday because everybody wants to go home it's a brave soul indeed who decides to check",
    "start": "747630",
    "end": "753449"
  },
  {
    "text": "in at four o'clock on a Friday so in the build breaks it's your job to fix it and normally what you would do is stop the",
    "start": "753449",
    "end": "759959"
  },
  {
    "text": "line it's not anybody else checking into that chain can be made freely the other",
    "start": "759959",
    "end": "766529"
  },
  {
    "text": "thing and this is where things get kind of interesting this is the rule the other rule of continuous integration that most people forget is that you",
    "start": "766529",
    "end": "774269"
  },
  {
    "text": "check in daily if you take a long time",
    "start": "774269",
    "end": "779880"
  },
  {
    "text": "between integrations and you decide oh I've been making these changes locally for days and days and weeks and now it's",
    "start": "779880",
    "end": "785279"
  },
  {
    "text": "on II decide to check it in you have a huge merge problem you're likely going to break the build and annoy everybody",
    "start": "785279",
    "end": "790819"
  },
  {
    "text": "continuous integration states extremely clearly that you check in daily now I'm",
    "start": "790819",
    "end": "795839"
  },
  {
    "text": "not saying that if you don't check in daily you're a bad person or that it doesn't work for you or isn't successful",
    "start": "795839",
    "end": "801829"
  },
  {
    "text": "that's fine it may well work perfectly well for you it's not continuous integration just",
    "start": "801829",
    "end": "807120"
  },
  {
    "text": "being very clear so I won't be talking about what continuous integration is this is what it is right integrating your changes daily and",
    "start": "807120",
    "end": "812910"
  },
  {
    "text": "validating that they work so we want to check in frequently because we reduce",
    "start": "812910",
    "end": "818820"
  },
  {
    "text": "the merge pain who reduce the chances of conflicts we reduce the chances of problems we break that merged pain up and so of course when we talk about the",
    "start": "818820",
    "end": "825720"
  },
  {
    "text": "r3 r4 merge bug fix team the question I had was will weren't be checking in together won't be integrating our",
    "start": "825720",
    "end": "831630"
  },
  {
    "text": "changes making sure they worked and the answer was we were kinder if it would do",
    "start": "831630",
    "end": "837060"
  },
  {
    "text": "what was quite common which was actually we're running CI builds on branches of code so we had the bulk of the",
    "start": "837060",
    "end": "844290"
  },
  {
    "text": "organization who were working on the r3 code and they had a build on the r3 branch and they were checking in their",
    "start": "844290",
    "end": "849630"
  },
  {
    "text": "changes and those changes were being validated and they were getting feedback that yes their changes worked likewise",
    "start": "849630",
    "end": "856170"
  },
  {
    "text": "the r4 team were checking in their changes on a branch of code validating that the yes indeed they did work the",
    "start": "856170",
    "end": "862170"
  },
  {
    "text": "issue of course is this integration was localized to those branches of code the code wasn't actually being integrated",
    "start": "862170",
    "end": "868020"
  },
  {
    "text": "together what that meant was that when we decided to move the functionality from the r3 branch over to the r4 branch",
    "start": "868020",
    "end": "874350"
  },
  {
    "text": "to make that now the live release branch we heard a giant pain the reason",
    "start": "874350",
    "end": "880350"
  },
  {
    "text": "ultimately that this branching this merging wasn't happening more frequently was because that not only were the cost",
    "start": "880350",
    "end": "885450"
  },
  {
    "text": "of branches quite high so you had long-lived branches but also the difficulty and complexity of merges was",
    "start": "885450",
    "end": "890820"
  },
  {
    "text": "quite was quite high and we it would fell into this nasty pattern which is all branches are nasty merging is really",
    "start": "890820",
    "end": "898230"
  },
  {
    "text": "difficult let's not merge a lot we might as well bundle up all the pain and defer it because then future Sam can deal with it",
    "start": "898230",
    "end": "905310"
  },
  {
    "text": "and future Sam did indeed have to deal with it over many many many months so this idea of integrating once a day",
    "start": "905310",
    "end": "911730"
  },
  {
    "start": "910000",
    "end": "1246000"
  },
  {
    "text": "which is very strong in continuous integration wasn't really what we were doing we were integrating locally into those local branches and so we you know",
    "start": "911730",
    "end": "919560"
  },
  {
    "text": "we had his problem now the reason of course that we weren't just making these changes on the r4 codebase a sort of",
    "start": "919560",
    "end": "926850"
  },
  {
    "text": "refactoring straight on to the release branch of code it's because these changes often in required multiple",
    "start": "926850",
    "end": "932400"
  },
  {
    "text": "separate steps you were checking in work that was sort of half-finished",
    "start": "932400",
    "end": "938279"
  },
  {
    "text": "so we don't want to do so I'm working on a piece of code a piece of functionality it's gonna take me several days to",
    "start": "938279",
    "end": "944110"
  },
  {
    "text": "complete I don't want to just leave it lying around on my laptop which is the option that aren't certainly read used",
    "start": "944110",
    "end": "949600"
  },
  {
    "text": "to live by where I'm just going to wait to check my coding now of course if I wait to check my coding I'm deferring",
    "start": "949600",
    "end": "955330"
  },
  {
    "text": "that integration effort I'm also running the risk that my think might happen to my laptop like it getting stolen and",
    "start": "955330",
    "end": "961720"
  },
  {
    "text": "lose my source code we want to put it somewhere safe so I don't got just wait to check in my half-finished refactoring",
    "start": "961720",
    "end": "968170"
  },
  {
    "text": "my my introduction of a brand new piece of functionality that's only half ready to go live to my customers and so really",
    "start": "968170",
    "end": "975279"
  },
  {
    "text": "waiting to check something in doesn't really make sense so let me look at the other option and",
    "start": "975279",
    "end": "980740"
  },
  {
    "text": "effectively what happened with r4 just in a big way which is what we're going to do instead is we're going to make a branch of code we're going to make our",
    "start": "980740",
    "end": "987700"
  },
  {
    "text": "changes locally on that branch of code making those changes safely because they're not actually being going to be released until we've completed that",
    "start": "987700",
    "end": "993940"
  },
  {
    "text": "process and then once we've completed that process we then merge that code back into the release branch or promote",
    "start": "993940",
    "end": "1000300"
  },
  {
    "text": "the branch or work on to being the release branch which is the technique used of the retailer this is a classic",
    "start": "1000300",
    "end": "1005850"
  },
  {
    "text": "release branch mentality so I've got maybe trunk or whatever my release branch is going to be called might be",
    "start": "1005850",
    "end": "1011339"
  },
  {
    "text": "called master depending on your version control tool of choice and you start working on the future and so what you do",
    "start": "1011339",
    "end": "1017130"
  },
  {
    "text": "is you you branch the code you fought the code and you start making your changes locally probably the branch",
    "start": "1017130",
    "end": "1022500"
  },
  {
    "text": "named after the feature so you do this work for a few days and one of your colleagues starts doing the same thing",
    "start": "1022500",
    "end": "1028079"
  },
  {
    "text": "they make their fork of the code they stop making their changes locally and when they're finished you merge your",
    "start": "1028079",
    "end": "1035610"
  },
  {
    "text": "features back in back into trunk and at this point it's probably okay right",
    "start": "1035610",
    "end": "1041250"
  },
  {
    "text": "because I've been making my changes not much is shifted since I took my feature branch change and I checked it in I've",
    "start": "1041250",
    "end": "1046558"
  },
  {
    "text": "checked in a few you know noodle refactorings I've cleaned out some code I've renamed a few things make it easy to understand and then my colleague",
    "start": "1046559",
    "end": "1054630"
  },
  {
    "text": "comes to check they're changing and sunny realized oh look a whole lot of stuff has changed in trunk I've now got to actually check all of my stuff in and",
    "start": "1054630",
    "end": "1061890"
  },
  {
    "text": "it's a much more painful process because I'm now having to deal with that large Delta of change that comes from the",
    "start": "1061890",
    "end": "1067080"
  },
  {
    "text": "other feature branch being merged in and this often leads to nice interesting social patterns of",
    "start": "1067080",
    "end": "1073800"
  },
  {
    "text": "behavior like you know you've got a nasty check into you and a push that you know is gonna make it really awkward for",
    "start": "1073800",
    "end": "1079950"
  },
  {
    "text": "other people to merge in but you want to get your change in fur so you have the easier time of it and so you sort of",
    "start": "1079950",
    "end": "1085560"
  },
  {
    "text": "distract people you say oh look over there you quickly check-in the code I do remember on one occasion actually",
    "start": "1085560",
    "end": "1092910"
  },
  {
    "text": "distracting one of my colleagues and trying to enter their password three times on their lock screen because when",
    "start": "1092910",
    "end": "1098730"
  },
  {
    "text": "you did that it actually locked the laptop because they thought it was being attacked by some malicious party you had",
    "start": "1098730",
    "end": "1104430"
  },
  {
    "text": "to go and contact the Syst admins to get your machine unlocked and so me and my pair did down and sort of just locked the machine for them they couldn't get",
    "start": "1104430",
    "end": "1110640"
  },
  {
    "text": "back in when we could get our change in right this is just autumn a car like this it's not great stuff but he kind of",
    "start": "1110640",
    "end": "1115650"
  },
  {
    "text": "wouldn't have us to go to the pub they weren't so happy about it now of course you can actually again make these things these processes a bit easier I mean one",
    "start": "1115650",
    "end": "1122190"
  },
  {
    "text": "of the things that you can do for example is you can run CI you can use you know tools like dough for example make it very easy for you to run a CI",
    "start": "1122190",
    "end": "1129990"
  },
  {
    "text": "build on your branches and you can actually configure these tools now that when they detect a bronzer they'll automatically run the builds on them so",
    "start": "1129990",
    "end": "1136620"
  },
  {
    "text": "at least locally for your feature branch you're getting validation that your changes are working you can ease also of",
    "start": "1136620",
    "end": "1144810"
  },
  {
    "text": "course pull changes from your trunk or master on to your feature branch to also",
    "start": "1144810",
    "end": "1150180"
  },
  {
    "text": "make things a bit easier for that final merge you've picked up any other changes that have been made and you can do a bit",
    "start": "1150180",
    "end": "1155340"
  },
  {
    "text": "of a merge effort every day the issue of course is it still doesn't avoid the problem like this even if I'm rebasing",
    "start": "1155340",
    "end": "1161460"
  },
  {
    "text": "from master the other feature branch if that gets checked in ahead of me there's gonna be as large change sitting there",
    "start": "1161460",
    "end": "1167670"
  },
  {
    "text": "waiting for me once I do that final pour ultimately in this process we are deferring integration that's what we're",
    "start": "1167670",
    "end": "1173790"
  },
  {
    "text": "doing we're doing local integration on our own branches but we are deferring integrating all of those things together",
    "start": "1173790",
    "end": "1180110"
  },
  {
    "text": "now ultimately I think what my learn my lessons learnt from the from the retailer back in 2004 was that a lot of",
    "start": "1180110",
    "end": "1189090"
  },
  {
    "text": "the pain that comes down to these merge activities and these integration activities come down to the not the size of the change and how long it's been",
    "start": "1189090",
    "end": "1194970"
  },
  {
    "text": "since you last did your merge there's some sort of function in there I think that I'm working on which is like you",
    "start": "1194970",
    "end": "1200610"
  },
  {
    "text": "know you almost need a parameter for your branch that's telling you although this is getting pretty all there's been a lot of changes right now",
    "start": "1200610",
    "end": "1206820"
  },
  {
    "text": "you're approaching danger zone territory right now you better get this stuff moved back Ian otherwise you're going to be in a lot of trouble so that this not",
    "start": "1206820",
    "end": "1214140"
  },
  {
    "text": "just the size of the change not just the Delta between what you've got on what is on the trunk you're going to merge with there's also been how long since you",
    "start": "1214140",
    "end": "1221070"
  },
  {
    "text": "last did emerge as well just because it's quite hard to understand the changes that have been made you've lost",
    "start": "1221070",
    "end": "1226140"
  },
  {
    "text": "context a lot of the time to understand what the right thing is to do because ultimately the longer you go between",
    "start": "1226140",
    "end": "1231870"
  },
  {
    "text": "merges it's less likely your change is going to be purely textual in nature you're actually looking at semantic",
    "start": "1231870",
    "end": "1237360"
  },
  {
    "text": "changes in functionality in the structure of your code base but you really need to understand and grop to be",
    "start": "1237360",
    "end": "1242910"
  },
  {
    "text": "able to carry out an adequate merge and this is the other problem really that",
    "start": "1242910",
    "end": "1249630"
  },
  {
    "start": "1246000",
    "end": "1531000"
  },
  {
    "text": "comes with branches especially branches that are longer lived refactorings are very hard to merge so some source code",
    "start": "1249630",
    "end": "1257580"
  },
  {
    "text": "tools like git can do an okay job picking up a very simple I think my",
    "start": "1257580",
    "end": "1266430"
  },
  {
    "text": "beard too big come people still here at the back okay am i coming out over the",
    "start": "1266430",
    "end": "1273960"
  },
  {
    "text": "mic APA okay all right so merging and",
    "start": "1273960",
    "end": "1280020"
  },
  {
    "text": "managing refactorings on branches can be quite challenging the reason is if I do something simple like a rename I just",
    "start": "1280020",
    "end": "1286530"
  },
  {
    "text": "change the name of a file change name of a class most modern cells control tools can do a fairly good job of saying this",
    "start": "1286530",
    "end": "1292530"
  },
  {
    "text": "is probably the same thing like I'm free handle that merge for you but think of the other kinds of refactorings you might do like removing",
    "start": "1292530",
    "end": "1297930"
  },
  {
    "text": "duplication creating brand-new abstractions moving code into new modules and new packages the more",
    "start": "1297930",
    "end": "1304440"
  },
  {
    "text": "aggressive your refactoring are the harder it's going to be to merge well its lead to is organizations that",
    "start": "1304440",
    "end": "1310140"
  },
  {
    "text": "practice branches that live for long periods of time tend to not do much refactoring because refactoring is",
    "start": "1310140",
    "end": "1315750"
  },
  {
    "text": "really hard to merge and so you don't do to refactor you on the future branches because it's just going to make your life more difficult when you come to do",
    "start": "1315750",
    "end": "1321420"
  },
  {
    "text": "the merge and so the longer the branches live when your code base you'll find merging in refactor managing the",
    "start": "1321420",
    "end": "1327060"
  },
  {
    "text": "refractions are less like to happen because of the merge pain the other option you've got so rather than just avoiding",
    "start": "1327060",
    "end": "1334200"
  },
  {
    "text": "checking in and rather than maybe making feature branches is just to check in your half-baked change",
    "start": "1334200",
    "end": "1339210"
  },
  {
    "text": "anyway right this is it just we just go check it in that's not a feature branch",
    "start": "1339210",
    "end": "1344240"
  },
  {
    "text": "the coats not finished yet but we're checking it in anyway and it's all going to be fine which of course makes absolutely no",
    "start": "1344240",
    "end": "1350640"
  },
  {
    "text": "sense because by definition your changes are half-baked and they're not finished yet and they're not fit for purpose so",
    "start": "1350640",
    "end": "1357299"
  },
  {
    "text": "how can we just check them in to the same branch of code or the same trunk without causing problems in our release",
    "start": "1357299",
    "end": "1362850"
  },
  {
    "text": "cycle this is actually a effectively technique called trunk based development",
    "start": "1362850",
    "end": "1367919"
  },
  {
    "text": "and the manager behind trunk based development is that everybody checks in to trunk they're some of the main ideas",
    "start": "1367919",
    "end": "1374159"
  },
  {
    "text": "from continuous delivery so rather than putting on branches of code we all check in to the same trunk so it's a very",
    "start": "1374159",
    "end": "1384360"
  },
  {
    "text": "simple approach in a way I'm checking changes in every day maybe like once a",
    "start": "1384360",
    "end": "1390029"
  },
  {
    "text": "day at least it's what I'm looking for likens with continuous integration and the idea is is that you're breaking up",
    "start": "1390029",
    "end": "1395700"
  },
  {
    "text": "your merge pane you're making lots of very very small tiny merges where needed when you're putting changes from other",
    "start": "1395700",
    "end": "1401520"
  },
  {
    "text": "people and you're breaking up that pane and integrating your code very very often into the same trunk so integrating",
    "start": "1401520",
    "end": "1408510"
  },
  {
    "text": "often you're getting very very fast feedback on the quality of your integration you're deferring that integration and that merge plane is",
    "start": "1408510",
    "end": "1415830"
  },
  {
    "text": "significantly reduced I I often think I don't think a big merge is of some of a",
    "start": "1415830",
    "end": "1421230"
  },
  {
    "text": "lot of little merges I think you know it's actually worse than that I think it's the multiplication of a lot of little merges but of course this doesn't",
    "start": "1421230",
    "end": "1428039"
  },
  {
    "text": "really help explain what we do about half finished features you know I'm halfway through making a change in some",
    "start": "1428039",
    "end": "1434549"
  },
  {
    "text": "piece of functionality and I can't clearly release that out to my to my customers so trunk based development",
    "start": "1434549",
    "end": "1441510"
  },
  {
    "text": "goes hand-in-hand with what I think would have called feature toggles or sometimes called feature Flags what we",
    "start": "1441510",
    "end": "1447270"
  },
  {
    "text": "do with feature toggles our feature Flags I'll call them feature toggles for the rest its talk is that we hide",
    "start": "1447270",
    "end": "1452309"
  },
  {
    "text": "half-finished functionality behind these toggles and so we check in the code it's",
    "start": "1452309",
    "end": "1457380"
  },
  {
    "text": "integrated in the branch but it affects we use a toggle to mean it's not in the live code path this is a very simplistic",
    "start": "1457380",
    "end": "1463799"
  },
  {
    "text": "example I've got a web page here and I'm working on some lovely brand-new widget so I'm working in fact on a thing called",
    "start": "1463799",
    "end": "1471419"
  },
  {
    "text": "the super budget and I do is I have a flag in this example in the configuration file and once my",
    "start": "1471419",
    "end": "1476640"
  },
  {
    "text": "widget is ready to be released I change the value in the configuration file and my widget appears having the ability to",
    "start": "1476640",
    "end": "1483899"
  },
  {
    "text": "toggle these things off and on means that what you can do in say your test environment is turn your toggles on and actually test the partially implemented",
    "start": "1483899",
    "end": "1490649"
  },
  {
    "text": "functionality the code itself is actually live inside your code base you can still run subcutaneous tests against",
    "start": "1490649",
    "end": "1496860"
  },
  {
    "text": "that functionality but it's not exposed to the users in lots of other ways of specifying toggles you can do it the",
    "start": "1496860",
    "end": "1502860"
  },
  {
    "text": "configuration flag like this you can do it with a fire with a flag on the command line this is how Google do their",
    "start": "1502860",
    "end": "1510270"
  },
  {
    "text": "flag system and you can also even use sort of centralized systems to manage",
    "start": "1510270",
    "end": "1515700"
  },
  {
    "text": "the value of your flags and that might allow you to toggle those values off and",
    "start": "1515700",
    "end": "1521070"
  },
  {
    "text": "on so people have been using things like zookeeper and console to actually store",
    "start": "1521070",
    "end": "1526140"
  },
  {
    "text": "the value of your flags allowing your applications to that and turn things off and on in production so that's kind of",
    "start": "1526140",
    "end": "1532559"
  },
  {
    "start": "1531000",
    "end": "1794000"
  },
  {
    "text": "nice when you've got a public-facing change and it's a brand new piece of functionality it's actually quite easy",
    "start": "1532559",
    "end": "1538559"
  },
  {
    "text": "to get a sense of how you hide a piece of brand new functionality that's half implemented a new widget on a page is",
    "start": "1538559",
    "end": "1544980"
  },
  {
    "text": "actually really easy thing to get your head around likewise a new page in your website it's just not something you wire",
    "start": "1544980",
    "end": "1550200"
  },
  {
    "text": "into your main information architecture she's not visible to people but what if it's actually a change in an existing",
    "start": "1550200",
    "end": "1556110"
  },
  {
    "text": "piece of functionality so there's some functionality that's already there I need a brand new implementation of it",
    "start": "1556110",
    "end": "1561240"
  },
  {
    "text": "but changes it quite fundamentally but you can't get rid of the old code right now because it's actually still being",
    "start": "1561240",
    "end": "1566580"
  },
  {
    "text": "used you're still actively being used I mentioned a talk will go CD earlier and",
    "start": "1566580",
    "end": "1572640"
  },
  {
    "text": "actually I got a great example of how you can make this work from the deep dark history of go so go is a comma is a",
    "start": "1572640",
    "end": "1580220"
  },
  {
    "text": "sort of deployable as a locally deployed CI and CD server it's been around for",
    "start": "1580220",
    "end": "1586620"
  },
  {
    "text": "many years it started off as a product called cruise very early on and it's changed a lot as you'd expect any",
    "start": "1586620",
    "end": "1591899"
  },
  {
    "text": "product to change over many years six years ago they've made decision to",
    "start": "1591899",
    "end": "1598309"
  },
  {
    "text": "migrate how they were handling persistence migrated from us is a tool",
    "start": "1598309",
    "end": "1603570"
  },
  {
    "text": "called I batis over to using hibernate the reason for this change was that I",
    "start": "1603570",
    "end": "1608700"
  },
  {
    "text": "batis require sort of handcrafted sequel queries now it's becoming hard to maintain and they wanted to replace their persistence system with a brand",
    "start": "1608700",
    "end": "1615270"
  },
  {
    "text": "new persistence system which is hibernate to allow them to talk different databases and also support",
    "start": "1615270",
    "end": "1620640"
  },
  {
    "text": "different databases their clients and so in the existing system right now that the hibernate the I batiste persistence",
    "start": "1620640",
    "end": "1627660"
  },
  {
    "text": "layer was sort of very deeply integrated in the rest of the product because lots of things need to be put stuff into a",
    "start": "1627660",
    "end": "1633390"
  },
  {
    "text": "database and get it back out again and so we need to sort of start working and incrementally changing over this",
    "start": "1633390",
    "end": "1639960"
  },
  {
    "text": "persistence layer the issue of course though is that that this is a product that people are using it's not SAS based",
    "start": "1639960",
    "end": "1645390"
  },
  {
    "text": "product but nonetheless go with shipping features at brand new versions of go to",
    "start": "1645390",
    "end": "1651000"
  },
  {
    "text": "their castles every two weeks and in fact I think now it's every day so you go to the website and you could download",
    "start": "1651000",
    "end": "1656580"
  },
  {
    "text": "a new build every single two weeks this change was not going to take two weeks has changes gonna take probably several months so you don't want to put stuff on",
    "start": "1656580",
    "end": "1663750"
  },
  {
    "text": "a branch for a month you wanna be checking this changing incrementally so how do you make that work we are still trying to cut new builds of software but",
    "start": "1663750",
    "end": "1669840"
  },
  {
    "text": "also have to work the pattern used here is something called branch by abstraction and the idea is that rather",
    "start": "1669840",
    "end": "1676080"
  },
  {
    "text": "than saying okay I want to check in a different version of my code on a branch and then merge that in I'm actually",
    "start": "1676080",
    "end": "1681990"
  },
  {
    "text": "gonna affect you checking a new implementation of some piece of code into trunk and hide it using an",
    "start": "1681990",
    "end": "1687630"
  },
  {
    "text": "abstraction and toggle between the two different limitations so they created they started creating effectively the",
    "start": "1687630",
    "end": "1693450"
  },
  {
    "text": "skeleton of what the new hibernate persistence was going to be and then created an abstraction layer and so you",
    "start": "1693450",
    "end": "1699000"
  },
  {
    "text": "had to move all those calls from the existing direct calls into the I batas persistence layer and now they're talking to that abstraction layer that",
    "start": "1699000",
    "end": "1706530"
  },
  {
    "text": "abstraction layer then routes all the traffic through to your existing I batis layer and what you could do is you could",
    "start": "1706530",
    "end": "1714420"
  },
  {
    "text": "turn that you could configure that abstraction with a configuration value and flick that flag off and on to switch",
    "start": "1714420",
    "end": "1720780"
  },
  {
    "text": "previewing persisting your information in I batis to switching over to hibernate now obviously this high brace",
    "start": "1720780",
    "end": "1727140"
  },
  {
    "text": "that didn't work for four weeks they were implementing effectively method by method going along implementing those",
    "start": "1727140",
    "end": "1733080"
  },
  {
    "text": "make new methods a users new persistence layer and so they had the flag you could fit that on but it was a deep hidden",
    "start": "1733080",
    "end": "1738210"
  },
  {
    "text": "flag that only was being used by the development team testing and so as they migrated certain",
    "start": "1738210",
    "end": "1743370"
  },
  {
    "text": "slices of functionality over to using the new persistence layer what they could do is flick that flag on in a test",
    "start": "1743370",
    "end": "1748950"
  },
  {
    "text": "environment run tests against it make sure that that stream of functionality works the new persistence layer but for",
    "start": "1748950",
    "end": "1754679"
  },
  {
    "text": "the public that flag was flipped off once the migration had occurred and this",
    "start": "1754679",
    "end": "1760080"
  },
  {
    "text": "was done over many many months because they were what they were doing as a sensible thing is they're making an architectural change like this while",
    "start": "1760080",
    "end": "1765900"
  },
  {
    "text": "still shipping features and they were like chipping away at it every new story they did their chip a little way a bit a bit a little bit further away and I like",
    "start": "1765900",
    "end": "1772470"
  },
  {
    "text": "this idea rounding Big Bang rewriter just making small incremental changes to your software and so when they were",
    "start": "1772470",
    "end": "1777720"
  },
  {
    "text": "already and they migrated it over I could get rid of the old code and also get rid of the flag as well it's often",
    "start": "1777720",
    "end": "1784590"
  },
  {
    "text": "the key thing one of the big mistakes people use with feature toggles and feature flags is they keep them lying around for a long period of time when",
    "start": "1784590",
    "end": "1791280"
  },
  {
    "text": "you don't need the flag anymore get rid of them so this is a nice way is a nice",
    "start": "1791280",
    "end": "1796980"
  },
  {
    "start": "1794000",
    "end": "1820000"
  },
  {
    "text": "alternative to feature branching rather than having to branch out new alternative implementations of existing",
    "start": "1796980",
    "end": "1803850"
  },
  {
    "text": "functionality and then merge them back in when you're done you effectively create create a new abstraction allows",
    "start": "1803850",
    "end": "1809220"
  },
  {
    "text": "you to have a new implementation of that functionality side by side and when you're ready switch it over that's",
    "start": "1809220",
    "end": "1815340"
  },
  {
    "text": "branch by abstraction pattern means you size depth the need for future branching so that mentioned with flags there are",
    "start": "1815340",
    "end": "1822179"
  },
  {
    "start": "1820000",
    "end": "1890000"
  },
  {
    "text": "some rules use it in as few places as possible normally one is a good plum replacer to use a flag in and two is",
    "start": "1822179",
    "end": "1830040"
  },
  {
    "text": "getting iffy for me the more places you use a flag the more complicated is going to be few to reason about what the",
    "start": "1830040",
    "end": "1835980"
  },
  {
    "text": "behavior of that flag is going to be and do remove those flags once you're done I did work with one client who had over",
    "start": "1835980",
    "end": "1843900"
  },
  {
    "text": "300 flags that were different in their production environment in their QA environment and they had never removed",
    "start": "1843900",
    "end": "1850170"
  },
  {
    "text": "those flags and so it became kind of impossible to understand which flags were actually in active usage it was",
    "start": "1850170",
    "end": "1855540"
  },
  {
    "text": "also impossible to understand the differences in behavior between those two versions of code with monolithic",
    "start": "1855540",
    "end": "1861150"
  },
  {
    "text": "systems you may have a few more flags and you'd like with a marker service based architecture you will put you end up with fewer flags because often you",
    "start": "1861150",
    "end": "1867510"
  },
  {
    "text": "can control release of functionality to your customers just by not shipping a service in the first place it also keeps",
    "start": "1867510",
    "end": "1872640"
  },
  {
    "text": "the number of flags per service down to sort of a minimum size but with a more distributed architecture like",
    "start": "1872640",
    "end": "1878190"
  },
  {
    "text": "that you're more likely going to need some kind of system to help you manage those flags we'll talk about that in a",
    "start": "1878190",
    "end": "1883289"
  },
  {
    "text": "moment there are some nice benefits to creating these abstractions that allow for functionality to be toggled off and",
    "start": "1883289",
    "end": "1890309"
  },
  {
    "start": "1890000",
    "end": "1934000"
  },
  {
    "text": "on the first is that these same this same sort of technical capability can get reused for things like a be testing",
    "start": "1890309",
    "end": "1897029"
  },
  {
    "text": "so they'd be testing normally doing is you're diverting a certain part of your traffic to one version of functionality",
    "start": "1897029",
    "end": "1903570"
  },
  {
    "text": "and a different set of your traffic to a different version of functionality this could allow you to test different treatments for example so this would",
    "start": "1903570",
    "end": "1910889"
  },
  {
    "text": "actually be one way of potentially seeing if the new implementation of some some piece of functionality was actually",
    "start": "1910889",
    "end": "1915929"
  },
  {
    "text": "better for your customers than previously and then if it was then you could effectively remove that flag and turn it on for everybody and also with a",
    "start": "1915929",
    "end": "1923429"
  },
  {
    "text": "bit more work on top you could also use this sort of mechanism for something like canary releasing although that",
    "start": "1923429",
    "end": "1928710"
  },
  {
    "text": "tends to apply a bit more work but ultimately the abstraction points around that can help for things like canary",
    "start": "1928710",
    "end": "1933720"
  },
  {
    "text": "releases if you want to know more about the ideas behind trunk based development and branch by abstraction and feature",
    "start": "1933720",
    "end": "1939960"
  },
  {
    "start": "1934000",
    "end": "2276000"
  },
  {
    "text": "toggles an old colleague of mine Paul Hammond has started putting together a whole lot of interesting resources over at trunk base development comm and so",
    "start": "1939960",
    "end": "1947789"
  },
  {
    "text": "you want to take a look at that that might give you not a few nice pointers now emerging from the ruins of the",
    "start": "1947789",
    "end": "1956460"
  },
  {
    "text": "retailer project which actually went very very well I must say the client was very happy this offer got shipped no one",
    "start": "1956460",
    "end": "1961500"
  },
  {
    "text": "foot fired no one died but a lot of lessons were learned and many of those",
    "start": "1961500",
    "end": "1966870"
  },
  {
    "text": "lessons ended up in the continuous delivery book which they which Dave and Jays started working on in I think",
    "start": "1966870",
    "end": "1973130"
  },
  {
    "text": "2007-2008 but was finally published actually in 2011 and it talks in that book a lot about reducing the use of",
    "start": "1973130",
    "end": "1979649"
  },
  {
    "text": "branches limiting long-lived branches because this integration pane and promoted this idea of trunk based",
    "start": "1979649",
    "end": "1985409"
  },
  {
    "text": "development as an alternative to feature branching weave but motivated by the idea of continually integrating code to",
    "start": "1985409",
    "end": "1993059"
  },
  {
    "text": "reduce merge pain actually also bouncer ship functionality more quickly to your cutter to your customers the other ideas",
    "start": "1993059",
    "end": "1998760"
  },
  {
    "text": "that came out from this book in 2000 there were things like cheating every check-in as a release candidate which in",
    "start": "1998760",
    "end": "2003980"
  },
  {
    "text": "many ways is the sort of main idea in the context use delivery book rather than this idea",
    "start": "2003980",
    "end": "2010130"
  },
  {
    "text": "I'm gonna check in some code and then later on I'm gonna validate whether or not that codes good enough and then maybe we'll do some more cherry picks to",
    "start": "2010130",
    "end": "2015830"
  },
  {
    "text": "make it work and then we'll ship here now it's sort of shifting things much more onto the hands of the developers to",
    "start": "2015830",
    "end": "2021050"
  },
  {
    "text": "say no no no you don't get to abdicate responsibility you have to be confident that every check-in you make could be",
    "start": "2021050",
    "end": "2026060"
  },
  {
    "text": "released into a production environment and so there's a bunch of stuff in the book to explain how you do that another",
    "start": "2026060",
    "end": "2032810"
  },
  {
    "text": "idea that comes out of crop in this book is about reducing the size of changes and increasing the frequency of",
    "start": "2032810",
    "end": "2038090"
  },
  {
    "text": "deployment I mean it's this idea and the reasons behind this idea I put and put",
    "start": "2038090",
    "end": "2043400"
  },
  {
    "text": "out quite well by journals bought he basically did lovely presentation about metrics in in the ops space and then",
    "start": "2043400",
    "end": "2052129"
  },
  {
    "text": "explains really nicely in two slides why continuous delivery is such a good idea the idea is like this if you take a long",
    "start": "2052130",
    "end": "2059510"
  },
  {
    "text": "time between releases of software you have more changes more changes build up and so the Delta between one release and",
    "start": "2059510",
    "end": "2066440"
  },
  {
    "text": "another is larger and therefore you increase the risk that you're going to introduce a problem it's more chance",
    "start": "2066440",
    "end": "2072919"
  },
  {
    "text": "that you're going to screw something up if you've made a lot more changes and so if you do check them in and you have",
    "start": "2072920",
    "end": "2078409"
  },
  {
    "text": "made a mistake and you've broken something because of the large Delta you've also got a lot of functionality",
    "start": "2078410",
    "end": "2083600"
  },
  {
    "text": "to look at to understand what it is you've broken and any ability to fix that release is made more it's made more",
    "start": "2083600",
    "end": "2088610"
  },
  {
    "text": "difficult because working out what's broken is harder so working out what you can patch or rollback is more",
    "start": "2088610",
    "end": "2093620"
  },
  {
    "text": "complicated so the releases themselves are more fraught you're more likely to break something if you break something it's",
    "start": "2093620",
    "end": "2099350"
  },
  {
    "text": "going to be harder to fix and hold it to rollback what happens when we have these long release cycles is we do things like",
    "start": "2099350",
    "end": "2106280"
  },
  {
    "text": "this we say well you know this theory this is quite risky and the last release we did didn't work out so well so what",
    "start": "2106280",
    "end": "2112820"
  },
  {
    "text": "we can do this time around is we're gonna be extra specially careful we're gonna be to really take our time over",
    "start": "2112820",
    "end": "2118820"
  },
  {
    "text": "this next week and get it right we're gonna put a few more procedures in place a lot more sign-off to make sure we don't can't possibly make a mistake and",
    "start": "2118820",
    "end": "2126140"
  },
  {
    "text": "what happens is the next release takes you even longer to get out the door because these new procedures you've put in place to eliminate the possibility",
    "start": "2126140",
    "end": "2132320"
  },
  {
    "text": "you've made a mistake and that release of course because it takes much longer has even more changes in it and when you",
    "start": "2132320",
    "end": "2137690"
  },
  {
    "text": "release it lo and behold oh look it's broken as well and it's a whole problems with it so what we're going to",
    "start": "2137690",
    "end": "2142880"
  },
  {
    "text": "do this time it's going to be different we're definitely going to get it right this time let's put some more procedures",
    "start": "2142880",
    "end": "2148820"
  },
  {
    "text": "in place let's put some more sign-off in place and it's going to be wonderful and it's going to be absolutely fine and",
    "start": "2148820",
    "end": "2154340"
  },
  {
    "text": "of course this this sort of vicious cycle continues a lot of the work I do about sort of helping customers ship",
    "start": "2154340",
    "end": "2161090"
  },
  {
    "text": "software more quickly into a production system comes down to looking through their release processes and it's more",
    "start": "2161090",
    "end": "2166580"
  },
  {
    "text": "it's sort of like looking at organizational scar tissue alright so there's the procedures that are put in place because of something bad that",
    "start": "2166580",
    "end": "2172790"
  },
  {
    "text": "happened about ten years ago that no one can quite remember and so there's a speak the release process where you seem",
    "start": "2172790",
    "end": "2178580"
  },
  {
    "text": "to like H a pentagram in the floor with chalk and and slaughter a chicken and say these words I mean does that I mean",
    "start": "2178580",
    "end": "2185930"
  },
  {
    "text": "is that really necessary while it's what we've been doing for many years and it hasn't done us any wrong and it's like okay great all right breaking out of this cycle is",
    "start": "2185930",
    "end": "2193190"
  },
  {
    "text": "really hard but it's actually something you need to do because ultimately if you ship software more quickly and more",
    "start": "2193190",
    "end": "2198770"
  },
  {
    "text": "frequently to your customers here's what happens each individual release is smaller in scope therefore you are less",
    "start": "2198770",
    "end": "2205280"
  },
  {
    "text": "likely to screw it up and if their problem does occur it's much easier for you to work out what it is you broke and",
    "start": "2205280",
    "end": "2210740"
  },
  {
    "text": "it's going to be much easier for you to roll that change back or roll it forward by fixing it it also means your shipping",
    "start": "2210740",
    "end": "2216590"
  },
  {
    "text": "functionality to your customers more quickly therefore getting feedback as to whether or not the features actually do what you want them to do you also have a",
    "start": "2216590",
    "end": "2222980"
  },
  {
    "text": "release process that you're using more frequently therefore that release process is more likely to work because it's being used over and over again and",
    "start": "2222980",
    "end": "2228950"
  },
  {
    "text": "it's tried and tested so this idea of decreasing the stud the size and scope",
    "start": "2228950",
    "end": "2234950"
  },
  {
    "text": "of each release she's releasing functionality more quickly to your customers is actually about reducing the",
    "start": "2234950",
    "end": "2240440"
  },
  {
    "text": "risk of releases it's actually about being safer there is a sort of idea that",
    "start": "2240440",
    "end": "2245630"
  },
  {
    "text": "comes at spouted that you can either go fast and break stuff or go slow and steady and beat and make not break stuff",
    "start": "2245630",
    "end": "2251720"
  },
  {
    "text": "and it's absolute rubbish those organizations that ship software really quickly do so only because they",
    "start": "2251720",
    "end": "2257600"
  },
  {
    "text": "have really reliable rigorous release processes that allow them to ship software in a safe fashion releasing",
    "start": "2257600",
    "end": "2264290"
  },
  {
    "text": "more quickly actually can help you have a more robust release process you can go fast and safe and so this idea that you",
    "start": "2264290",
    "end": "2272240"
  },
  {
    "text": "have to choose is absolute rubbish it's his other ideas integrate often",
    "start": "2272240",
    "end": "2277319"
  },
  {
    "text": "keep those batch changes small keep those check-in small and ship your software frequently all of these ideas",
    "start": "2277319",
    "end": "2284380"
  },
  {
    "text": "coming out the continuous delivery book in many ways what happened in that whole period of time was we took a lot of the",
    "start": "2284380",
    "end": "2289749"
  },
  {
    "text": "practices or coming out of enterprise delivery that were coming out from the xB movement lots of unit testing",
    "start": "2289749",
    "end": "2295329"
  },
  {
    "text": "automated testing practices continuously integration and bringing those but they had those sort of practices had given us",
    "start": "2295329",
    "end": "2301359"
  },
  {
    "text": "sort of higher quality more certainty more visibility into the quality of our software but really you know we weren't",
    "start": "2301359",
    "end": "2307089"
  },
  {
    "text": "actually necessarily delivering our software more frequently to our customers to our users you know you'd",
    "start": "2307089",
    "end": "2312640"
  },
  {
    "text": "ask people how often they released their software back and say 2006 so every six months was good right how many people",
    "start": "2312640",
    "end": "2318969"
  },
  {
    "text": "here release their software every month or more frequently how many people here",
    "start": "2318969",
    "end": "2324189"
  },
  {
    "text": "they released their software more what once a week or more frequently right if I'd asked that question 10 years ago",
    "start": "2324189",
    "end": "2330009"
  },
  {
    "text": "people would have thought I was talking crazy what happened was these ideas came out that gave us visibility into the",
    "start": "2330009",
    "end": "2336039"
  },
  {
    "text": "quality of our software but we weren't quite fixing that last mile problem and then you had all the dot-com people",
    "start": "2336039",
    "end": "2341199"
  },
  {
    "text": "coming out shipping software like Flickr were 15 times a day and these ideas sort",
    "start": "2341199",
    "end": "2346329"
  },
  {
    "text": "of came together and gave us what the continuous delivery movement was all about really which was saying okay let's bring together those practices about",
    "start": "2346329",
    "end": "2352119"
  },
  {
    "text": "visibility of the quality of our software bury that together with fast and frequent delivery and overall",
    "start": "2352119",
    "end": "2357669"
  },
  {
    "text": "everything gets better so while this whole thing was happening and we were automating build pipelines and you know",
    "start": "2357669",
    "end": "2364329"
  },
  {
    "text": "measuring cycle time and helping people ship their software more quickly this little thing called get emerged",
    "start": "2364329",
    "end": "2370869"
  },
  {
    "text": "gets actually been around 'obviously for quite a while but we should probably understand a little bit and the number of people",
    "start": "2370869",
    "end": "2377140"
  },
  {
    "text": "think that get shifts the equation in terms of how we develop software we",
    "start": "2377140",
    "end": "2383079"
  },
  {
    "text": "should do-- remember the history of why get exists so get exists because there",
    "start": "2383079",
    "end": "2388390"
  },
  {
    "text": "was a falling out around licensing for the disputed version control tool being used by Linus and the Linux kernel",
    "start": "2388390",
    "end": "2394509"
  },
  {
    "text": "administrators so Linus decides to write his own and that's what git is it's a",
    "start": "2394509",
    "end": "2401079"
  },
  {
    "text": "rewrite of a it's a implementation of a distributed version control tool to suit",
    "start": "2401079",
    "end": "2406479"
  },
  {
    "text": "Linus and how the Linux kernel is to and the main goal in creating a get",
    "start": "2406479",
    "end": "2412160"
  },
  {
    "text": "order to allow liners to merge a patch in less than three seconds that was it",
    "start": "2412160",
    "end": "2417979"
  },
  {
    "text": "that was the goal the whole architecture of get is actually predicated on the",
    "start": "2417979",
    "end": "2424460"
  },
  {
    "text": "requirements primarily of the Linux kernel Linux kernel is not one thing it's not one deployable you have the ID",
    "start": "2424460",
    "end": "2432049"
  },
  {
    "text": "of the next project but multiple different vendors build their own kernels and there's lots of ideas you're moving patches around you're applying",
    "start": "2432049",
    "end": "2437569"
  },
  {
    "text": "your own patches and this is a fundamentally different sort of delivery process than most of us use but most of",
    "start": "2437569",
    "end": "2444079"
  },
  {
    "text": "us now use git which is a version control tool designed for a different way of working there are some lovely things and get though right first the",
    "start": "2444079",
    "end": "2450619"
  },
  {
    "text": "branches are significantly more lightweight one of the problems with the the retailer I mentioned at the",
    "start": "2450619",
    "end": "2456499"
  },
  {
    "text": "beginning was that we only had we could only we couldn't afford to make lots of branches and so we had that r4 branch",
    "start": "2456499",
    "end": "2461599"
  },
  {
    "text": "that we were trying on a lot of things on we would have be much better off if we could have created more short-lived branches but version control tool using",
    "start": "2461599",
    "end": "2468589"
  },
  {
    "text": "branches were very very expensive it's worth remembering there's something like subversion for example when you branch",
    "start": "2468589",
    "end": "2473630"
  },
  {
    "text": "code that's a copy of the code that's being stored it's a lot of work so branching is not something you did",
    "start": "2473630",
    "end": "2479420"
  },
  {
    "text": "lightly with git it's it's really simple right it's such a lightweight operation",
    "start": "2479420",
    "end": "2484549"
  },
  {
    "text": "that the creation and management of branches is much easier to work with you have other nice things that you have a full-course or false copy of source",
    "start": "2484549",
    "end": "2491390"
  },
  {
    "text": "history and your local laptop which always like when I'm developing on planes and in trains with poor",
    "start": "2491390",
    "end": "2496900"
  },
  {
    "text": "connectivity and also we have significantly better merging of text which has made merging code easier",
    "start": "2496900",
    "end": "2504069"
  },
  {
    "text": "certainly much better in get than it was and subversion the key thing to understand of course is that git has got",
    "start": "2504069",
    "end": "2510170"
  },
  {
    "text": "quite got better at textual merging identifying this thing it's probably the",
    "start": "2510170",
    "end": "2515509"
  },
  {
    "text": "same as this thing this is probably a rename this is probably a move I can kind of work out that block where that",
    "start": "2515509",
    "end": "2520880"
  },
  {
    "text": "goes but what but it can't merge semantics it can't understand the intent",
    "start": "2520880",
    "end": "2526369"
  },
  {
    "text": "behind a change that was made by somebody else and apply that intent on your code there are no operational",
    "start": "2526369",
    "end": "2532489"
  },
  {
    "text": "transforms yet in our source control tools like there are four are sort of document sharing tools there are people",
    "start": "2532489",
    "end": "2539299"
  },
  {
    "text": "working on things like this people who are actually building whole IDs and source control tools that",
    "start": "2539299",
    "end": "2545749"
  },
  {
    "text": "actually implement the understanding of intent these these systems actually require you affects you to hook your",
    "start": "2545749",
    "end": "2551899"
  },
  {
    "text": "refactoring tool into your source control tool so you've actually said I've done a refactoring you actually store the refactoring not the output the",
    "start": "2551899",
    "end": "2558199"
  },
  {
    "text": "refactoring and that makes it easy if you to apply those things on other pieces of code I don't know anyone here",
    "start": "2558199",
    "end": "2565249"
  },
  {
    "text": "that's using this stuff yet maybe in the future we'll have this and this will make merging branches even easier because it will operate a lot more like",
    "start": "2565249",
    "end": "2571729"
  },
  {
    "text": "actually editing collaborative editing documents that's in the moment so git came out and was starting to be used by",
    "start": "2571729",
    "end": "2578569"
  },
  {
    "text": "many people and in in a small community really initially but it started to pick",
    "start": "2578569",
    "end": "2583939"
  },
  {
    "text": "up and a few people were kind of interested in it but sort of like interested in it in an academic way almost disabuse version control tools",
    "start": "2583939",
    "end": "2590659"
  },
  {
    "text": "they've been others around before but this is a new one let's give it a bit of a look cause it's interesting but most",
    "start": "2590659",
    "end": "2596059"
  },
  {
    "text": "of us were still using normal traditional centralized source control tools the thing that really made github",
    "start": "2596059",
    "end": "2602149"
  },
  {
    "text": "popular and changed the way we think about software development was github github launched in 2008 it took them",
    "start": "2602149",
    "end": "2609799"
  },
  {
    "start": "2603000",
    "end": "2795000"
  },
  {
    "text": "only a few short days after their release to expose something that changed",
    "start": "2609799",
    "end": "2615469"
  },
  {
    "text": "how we think about open-source software delivery and software delivery in general so I think it's a third blog",
    "start": "2615469",
    "end": "2620959"
  },
  {
    "text": "post after they launched they exposed the pull request but now git has had a",
    "start": "2620959",
    "end": "2627380"
  },
  {
    "text": "pull request functionality built into it from the very very early days github input into their own type of pull",
    "start": "2627380",
    "end": "2633019"
  },
  {
    "text": "request mechanism on top which is something that Linus is tool angry about to this day but he things be angry about an awful lot of stuff so I can't keep a",
    "start": "2633019",
    "end": "2639649"
  },
  {
    "text": "list and this functionality allowed drastically changed how easy it was for you to contribute to an open source",
    "start": "2639649",
    "end": "2645319"
  },
  {
    "text": "project previously if you wanted to make a change to an open source project what you have to do is you would have to",
    "start": "2645319",
    "end": "2650539"
  },
  {
    "text": "either become a committer or you would have to get that code check it out make the change locally test that change and",
    "start": "2650539",
    "end": "2657499"
  },
  {
    "text": "then generate a patch file so thank you larry wolf or the patch file format you would then send that patch file rivera",
    "start": "2657499",
    "end": "2663289"
  },
  {
    "text": "email to one of the people that had the commit right to that source code repo and say he's a change can you make it",
    "start": "2663289",
    "end": "2668779"
  },
  {
    "text": "can you make it for me into that committed would then have to merge your change in or just give you commit rights",
    "start": "2668779",
    "end": "2674800"
  },
  {
    "text": "most of time you'd have to submit a few patches to a project before you would be allowed to actually be part of the cork",
    "start": "2674800",
    "end": "2680920"
  },
  {
    "text": "emitter group with the pull request model you made it very easy just to create a brandt to that code make your",
    "start": "2680920",
    "end": "2685990"
  },
  {
    "text": "changes locally you send a pull request to the committee's who can then merge your pull request in using git itself",
    "start": "2685990",
    "end": "2691770"
  },
  {
    "text": "significantly lowering the barrier to entry to making changes and project after project moved away from using",
    "start": "2691770",
    "end": "2698650"
  },
  {
    "text": "centralized source control systems moved away from hose source code hosting like source forward for example over to",
    "start": "2698650",
    "end": "2704200"
  },
  {
    "text": "github primarily because of this there's a bunch of really nice visualizations of source code of the history of source",
    "start": "2704200",
    "end": "2711340"
  },
  {
    "text": "code from version control systems and this is a little snippet of a visualization of the Ruby on Rails",
    "start": "2711340",
    "end": "2718180"
  },
  {
    "text": "codebase and so it is a graphical representation of the people who",
    "start": "2718180",
    "end": "2723340"
  },
  {
    "text": "committed to the project and the commits those people made we can see here a small number of developers and around",
    "start": "2723340",
    "end": "2728740"
  },
  {
    "text": "this point they actually moved over to github from SourceForge and what you start seeing is a drastic uptick in the",
    "start": "2728740",
    "end": "2735940"
  },
  {
    "text": "number of committers that were actually coming in and contributing functionality to the project it wasn't just that the",
    "start": "2735940",
    "end": "2742210"
  },
  {
    "text": "number of committees increased it was also that the number of volume of changes that came in increased this has",
    "start": "2742210",
    "end": "2748060"
  },
  {
    "text": "become it was hugely impactful for this project and really allowed it to kick",
    "start": "2748060",
    "end": "2753130"
  },
  {
    "text": "into high gear and this is this is the experience that was was mirrored by project after project in moving over to",
    "start": "2753130",
    "end": "2758950"
  },
  {
    "text": "the github environment and it was no surprise that sort of shortly after they launched not many years after it",
    "start": "2758950",
    "end": "2764560"
  },
  {
    "text": "launches about 2011 the github actually outstripped both google code which has",
    "start": "2764560",
    "end": "2770830"
  },
  {
    "text": "now been shuttered and SourceForge in terms of that number of commits it was handling a number of projects it was",
    "start": "2770830",
    "end": "2776290"
  },
  {
    "text": "handling that's pretty meteoric rise in that just those three years this is primarily down to the ability of a pull",
    "start": "2776290",
    "end": "2782800"
  },
  {
    "text": "request in my opinion that's the real empowering thing about open source development it makes it much easier for",
    "start": "2782800",
    "end": "2788500"
  },
  {
    "text": "you to accept contributions from the outside world you've drastically lowered the barrier to entry for making those changes so this is fantastic but of",
    "start": "2788500",
    "end": "2796840"
  },
  {
    "text": "course it's point you're saying but sam pr's use branches and yes they do when you",
    "start": "2796840",
    "end": "2803110"
  },
  {
    "text": "make a pull request you are creating your changes on the branch and you're asking for someone to pull that change in",
    "start": "2803110",
    "end": "2808240"
  },
  {
    "text": "and so the same challenges do occur the larger the change you're making the",
    "start": "2808240",
    "end": "2813940"
  },
  {
    "text": "longer you've been working on that change the bigger effectively the PR is going to be but if you're a maintainer",
    "start": "2813940",
    "end": "2820810"
  },
  {
    "text": "of a project and you someone sends you a huge Delta a huge PR it's going to take you a long time for you to review that",
    "start": "2820810",
    "end": "2826900"
  },
  {
    "text": "change and make sure it's good enough to be checked in so we want to keep our PR short just like want to keep our",
    "start": "2826900",
    "end": "2832180"
  },
  {
    "text": "branches short the key thing to understand of course as well as the open source development isn't about a bunch",
    "start": "2832180",
    "end": "2838570"
  },
  {
    "text": "of full-time people working nine till five to create some end to end product",
    "start": "2838570",
    "end": "2843730"
  },
  {
    "text": "it's actually about people who have an hour here and an hour there and two or three hours in the weekend to make a",
    "start": "2843730",
    "end": "2848860"
  },
  {
    "text": "change for an open source project they're mostly doing it out of the goodness of their heart you have also a mix of trusted and untrusted committers",
    "start": "2848860",
    "end": "2855760"
  },
  {
    "text": "normally the trusted committers can commit directly and without needing to do PRS this process is the development",
    "start": "2855760",
    "end": "2861370"
  },
  {
    "text": "process around open source development is fundamentally different to the development processes we use in our",
    "start": "2861370",
    "end": "2866920"
  },
  {
    "text": "companies day in day out and so the same challenges around PR still exist with long live branches if you're on long",
    "start": "2866920",
    "end": "2872470"
  },
  {
    "text": "live PR it's going to be a pain to merge it's going to be expensive to merge so we take a long time to review and so",
    "start": "2872470",
    "end": "2877960"
  },
  {
    "text": "people still are going to like small tightly defined PRS that allow you to most out of functionality in now of",
    "start": "2877960",
    "end": "2884440"
  },
  {
    "text": "course github as I get allowed us to do some really interesting things through branches and as we often do as",
    "start": "2884440",
    "end": "2890950"
  },
  {
    "text": "technologists we think well this is quite interesting let's build something really complicated on top of it and then",
    "start": "2890950",
    "end": "2897310"
  },
  {
    "start": "2893000",
    "end": "3026000"
  },
  {
    "text": "hence we enter git flow so what git flow does is is git flow is a standard way of working with branches",
    "start": "2897310",
    "end": "2903850"
  },
  {
    "text": "and a set of tools on top of git branches to make it easy to sort of codifies form of working with feature",
    "start": "2903850",
    "end": "2910180"
  },
  {
    "text": "branches this is a diagram on the simpler diagrams that explains how git",
    "start": "2910180",
    "end": "2915340"
  },
  {
    "text": "flow works I say explains how git flow works and I say simple this is sort of",
    "start": "2915340",
    "end": "2920800"
  },
  {
    "text": "anything but so you've got a master branch or hotfix branch or release branch you have a developer branch and",
    "start": "2920800",
    "end": "2926140"
  },
  {
    "text": "then you have your feature branches which is where you do most of your work and there are all kinds of programs your command lines that you run to later",
    "start": "2926140",
    "end": "2932800"
  },
  {
    "text": "merge in features and push it through to the hotfix branch and and sort of merge it over to the release branch and you go",
    "start": "2932800",
    "end": "2938620"
  },
  {
    "text": "back to the master branch and you disappear upside your own fundament and then you go home and cry it seems to",
    "start": "2938620",
    "end": "2944230"
  },
  {
    "text": "me the get flow action when you get down to it is optimized around the development process where developers work by themselves for a long period of",
    "start": "2944230",
    "end": "2950499"
  },
  {
    "text": "time and a feature and then merge that feature in I don't actually mind too much if that's what you want to use your",
    "start": "2950499",
    "end": "2955900"
  },
  {
    "text": "open source projects that mirrors the way those projects work I don't know about you but I don't like in a denier",
    "start": "2955900",
    "end": "2962440"
  },
  {
    "text": "software delivery team that works 9:00 till 5:00 together the idea that somebody's going to go off by themselves and work for a long period of time on a",
    "start": "2962440",
    "end": "2970029"
  },
  {
    "text": "feature by themselves before merging it in I have some people that use git flow says but Sam we check in our we have",
    "start": "2970029",
    "end": "2978220"
  },
  {
    "text": "really short live branches our features only last for a day or two and if your features only last for a day or two I've",
    "start": "2978220",
    "end": "2983680"
  },
  {
    "text": "got no idea why you need git flow you don't need something that complicated if what you're going to do is do a little",
    "start": "2983680",
    "end": "2988779"
  },
  {
    "text": "change a branch and merge it back in you don't need that sort of stuff and so a number the teams I've been working with",
    "start": "2988779",
    "end": "2994029"
  },
  {
    "text": "have been making use of git flow what you tend to see is those feature branches it's almost like those feature",
    "start": "2994029",
    "end": "2999460"
  },
  {
    "text": "branches are living longer because the git flow stuff makes things a bit more painful to check in and the git flow",
    "start": "2999460",
    "end": "3004470"
  },
  {
    "text": "stuff is there to support these longer live branches which is sort of enforcing and encouraging a pretty bad behavior we",
    "start": "3004470",
    "end": "3010739"
  },
  {
    "text": "come back to this idea we want to check in frequently I don't want people working by themselves on features that",
    "start": "3010739",
    "end": "3016109"
  },
  {
    "text": "take weeks and weeks and months before merging them in I want to ship my software quickly and again the open",
    "start": "3016109",
    "end": "3021269"
  },
  {
    "text": "source world is not your day job your day job is different I mentioned earlier",
    "start": "3021269",
    "end": "3028859"
  },
  {
    "start": "3026000",
    "end": "3183000"
  },
  {
    "text": "that sometimes the toggles and the features things get it can become quite more can become complicated to manage",
    "start": "3028859",
    "end": "3035430"
  },
  {
    "text": "especially when you've got systems that involve lots of services and you can sort of jury-rigged your own control",
    "start": "3035430",
    "end": "3040829"
  },
  {
    "text": "mechanisms to allow you to flip toggles off and on recently last couple of years a number of companies are actually two",
    "start": "3040829",
    "end": "3047339"
  },
  {
    "text": "companies have emerged that I'm actually providing platforms to manage feature toggles in fact there's going to be a",
    "start": "3047339",
    "end": "3053700"
  },
  {
    "text": "talk and if I haven't already missed it by the CEO of launch directly talking about how to use feature toggles and so",
    "start": "3053700",
    "end": "3060749"
  },
  {
    "text": "your split by your launch dark you both give you service ass based products press base way of managing your flags and so they can do some fairly",
    "start": "3060749",
    "end": "3067019"
  },
  {
    "text": "interesting things like spit dot IO for example can even turn flags off and on for certain user cohorts which can be",
    "start": "3067019",
    "end": "3073529"
  },
  {
    "text": "nice way of hiding features for to users they can even dgo code based toggles as well so you can do a rollout",
    "start": "3073529",
    "end": "3080160"
  },
  {
    "text": "of a feature to a certain country group to sign test it out sort of a way of",
    "start": "3080160",
    "end": "3086130"
  },
  {
    "text": "implementing a canary effectively I'm a little bit skeptical about these not not",
    "start": "3086130",
    "end": "3091229"
  },
  {
    "text": "because I don't think they work more though for these to work you have to often rely on somebody's centrally",
    "start": "3091229",
    "end": "3096690"
  },
  {
    "text": "managed platform and they're often a very critical part in your execution path if I can't find out the values of",
    "start": "3096690",
    "end": "3103499"
  },
  {
    "text": "my toggles in production what happens and so you do have to understand the failure mode around these things and",
    "start": "3103499",
    "end": "3109920"
  },
  {
    "text": "it's a very very good documentation on how these two's with two tools work that you can learn from but I would urge if",
    "start": "3109920",
    "end": "3115319"
  },
  {
    "text": "you're interested in using these things to manage your toggles that you look and understand the architecture and what happens if you can't talk to the",
    "start": "3115319",
    "end": "3121619"
  },
  {
    "text": "centralized server and also go see the launch time dart leeteuk's I'm sure it'd be very entertaining",
    "start": "3121619",
    "end": "3126859"
  },
  {
    "text": "more recently things have been progressing some people anybody here",
    "start": "3126859",
    "end": "3132029"
  },
  {
    "text": "read this book the DevOps handbook so times past the DevOps movement has has",
    "start": "3132029",
    "end": "3139109"
  },
  {
    "text": "has been around for a while now it's maturing we've been living with with github and the things it allows us to do",
    "start": "3139109",
    "end": "3145289"
  },
  {
    "text": "we have now version control tools very widely available TFS gives us get support and has for a number of years we",
    "start": "3145289",
    "end": "3151079"
  },
  {
    "text": "have access to a very powerful version control tool that actually allows us to you make use of branches much more",
    "start": "3151079",
    "end": "3157920"
  },
  {
    "text": "lighter weight branches than we first did back in 2004 and before that so has",
    "start": "3157920",
    "end": "3164700"
  },
  {
    "text": "the world really changed has it shifted this book was written by a number of people including Jess Humble who worked",
    "start": "3164700",
    "end": "3170670"
  },
  {
    "text": "on me who wrote the continues delivery book and it was really them distilling down their knowledge and if you know much about the DevOps movement you'll",
    "start": "3170670",
    "end": "3176640"
  },
  {
    "text": "probably know every single person who wrote this book and it's harder to think of a more prestigious set of DevOps",
    "start": "3176640",
    "end": "3183359"
  },
  {
    "start": "3183000",
    "end": "3338000"
  },
  {
    "text": "authors as this they make a statement in the book and they reflect actually on this idea of trunk based development",
    "start": "3183359",
    "end": "3189799"
  },
  {
    "text": "trunk based development is likely the most controversial practice discussed in this book given some of the",
    "start": "3189799",
    "end": "3195569"
  },
  {
    "text": "conversations I've been having over the last six months I certainly agree with that however the data from the puppet",
    "start": "3195569",
    "end": "3202469"
  },
  {
    "text": "labs 2015 state of DevOps report is clear trunk based development predicts",
    "start": "3202469",
    "end": "3207930"
  },
  {
    "text": "higher throughput and better ability and even higher job satisfaction and lower rates of burnout so what's",
    "start": "3207930",
    "end": "3215160"
  },
  {
    "text": "this report they're citing so how many people here have read the state of",
    "start": "3215160",
    "end": "3220200"
  },
  {
    "text": "DevOps report anyone you the rest of you should it's a short read the 2,000 this",
    "start": "3220200",
    "end": "3226830"
  },
  {
    "text": "David quote in a 2015 version now I should have recap about the 2017 version",
    "start": "3226830",
    "end": "3232140"
  },
  {
    "text": "is available it's a report they put out every year and what it involves is a",
    "start": "3232140",
    "end": "3237470"
  },
  {
    "text": "statistically rigorous survey of multiple software delivery projects and what they're looking at are what",
    "start": "3237470",
    "end": "3243510"
  },
  {
    "text": "practices are used by high-performing IT teams and high-performing IT teams are",
    "start": "3243510",
    "end": "3249000"
  },
  {
    "text": "you know if you're a hyper winged IT team based on your throughput so how quick for your delivery to a cycle time",
    "start": "3249000",
    "end": "3254430"
  },
  {
    "text": "how frequently you ship software your failure rate and also a bunch of factors about things like employee satisfaction",
    "start": "3254430",
    "end": "3260550"
  },
  {
    "text": "looking much more the human factors and what Nicole Jezz and Jin Kim have been",
    "start": "3260550",
    "end": "3266910"
  },
  {
    "text": "doing with this study he's trying to understand rather than relying on our gut feel about all this practice works",
    "start": "3266910",
    "end": "3273720"
  },
  {
    "text": "for me they're forced University applicable actually trying to carry out a statistically valid survey to say look",
    "start": "3273720",
    "end": "3279960"
  },
  {
    "text": "these practices are used by high-performing teams - teens are more likely to be using his practice",
    "start": "3279960",
    "end": "3285030"
  },
  {
    "text": "therefore these are the sorts of practices that might be good for you there's a whole bunch of stuff out there",
    "start": "3285030",
    "end": "3290220"
  },
  {
    "text": "about how the report put together this is a quote from the 2016 report we found that having branches or forks with very",
    "start": "3290220",
    "end": "3296790"
  },
  {
    "text": "short lifetimes of less than a day before being merged into trunk and having less than three active branches",
    "start": "3296790",
    "end": "3303210"
  },
  {
    "text": "in total are important aspects of continuous delivery and all contribute to higher performance so does merge encoding - trunk or master",
    "start": "3303210",
    "end": "3310890"
  },
  {
    "text": "on a daily basis now the report does not say that if you have longer live feature",
    "start": "3310890",
    "end": "3316110"
  },
  {
    "text": "branches that you can't be successful just that the vast majority of the high-performing teams that they see",
    "start": "3316110",
    "end": "3322230"
  },
  {
    "text": "through this study over the last several years are using this or these sorts of",
    "start": "3322230",
    "end": "3327990"
  },
  {
    "text": "techniques they are merging in their branches very frequently they're not letting them live for very long and ideally they're integrating into Brunt",
    "start": "3327990",
    "end": "3334590"
  },
  {
    "text": "into branch trunk on a daily basis so say are you saying that branch is that",
    "start": "3334590",
    "end": "3341460"
  },
  {
    "text": "all branches are evil not necessarily no for me it's all about integration frequency if you're using",
    "start": "3341460",
    "end": "3347920"
  },
  {
    "text": "branches but integrating very very frequently I think you're probably going to be fine I think some people's value",
    "start": "3347920",
    "end": "3354640"
  },
  {
    "text": "have frequently differ I like integrating daily other people maybe you know every two days or something like",
    "start": "3354640",
    "end": "3360640"
  },
  {
    "text": "that that's kind of okay the key thing to keep an eye on if you are going to be making use of branches and all the",
    "start": "3360640",
    "end": "3365890"
  },
  {
    "text": "evidence we've seen so far you really want to be making sure you're checking in frequently if you're finding you're",
    "start": "3365890",
    "end": "3371590"
  },
  {
    "text": "not able to integrate frequently because your code is taking longer to you know work on maybe the features taking you",
    "start": "3371590",
    "end": "3377770"
  },
  {
    "text": "more time have a look and think can we actually make this feature smaller can I break this work up into smaller chunks",
    "start": "3377770",
    "end": "3382780"
  },
  {
    "text": "or can I use techniques like feature toggles or branch but abstraction to hide that half check ting code to reduce",
    "start": "3382780",
    "end": "3389320"
  },
  {
    "text": "how long I'm keeping these branches around for I also think that once you get to the point where you are having",
    "start": "3389320",
    "end": "3394420"
  },
  {
    "text": "branches that are very shortly leaf maybe only living for a day or two shifting to trunk based development that",
    "start": "3394420",
    "end": "3399580"
  },
  {
    "text": "drastically simplifies your use of your source control tools is something that's quite possible so keeping your batch",
    "start": "3399580",
    "end": "3405700"
  },
  {
    "text": "size small is going to keep the size of your branches small integrating often it's going to reduce your merge plane and make it easier for you to ship",
    "start": "3405700",
    "end": "3411370"
  },
  {
    "text": "software to your customers and shipping often is going to reduce the pain of your release cycle it's gonna get",
    "start": "3411370",
    "end": "3417250"
  },
  {
    "text": "software out to your customers more quickly it's gonna give you data on whether your software works so really",
    "start": "3417250",
    "end": "3422980"
  },
  {
    "text": "you know in summary has much changed since 2004 yes a load of stuff and also",
    "start": "3422980",
    "end": "3428440"
  },
  {
    "text": "know it still feels to me like the same and that she's not just a feel anymore we now have good studies out there that",
    "start": "3428440",
    "end": "3435340"
  },
  {
    "text": "back this idea up tools like github are fantastic the processes around things",
    "start": "3435340",
    "end": "3440800"
  },
  {
    "text": "like pull requests are great when you have a mix of trusted and untrusted committers and they can even work inside",
    "start": "3440800",
    "end": "3446110"
  },
  {
    "text": "organizations where you have that mix of people but most of us don't work in those environments most of us are working with a set of trusted colleagues",
    "start": "3446110",
    "end": "3453130"
  },
  {
    "text": "on the same project working a nine-to-five day and so I just questioned the value of some of these",
    "start": "3453130",
    "end": "3458830"
  },
  {
    "text": "practices in those kinds of environments anyway I hope this talk didn't make too many people angry I'll be annoyed if it",
    "start": "3458830",
    "end": "3465340"
  },
  {
    "text": "made no one angry though but anyway thank you so much for your time",
    "start": "3465340",
    "end": "3470160"
  }
]