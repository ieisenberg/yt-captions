[
  {
    "text": "hi London welcome uh my name is Ian Cooper and uh hopefully thank you very",
    "start": "8599",
    "end": "15879"
  },
  {
    "text": "much for coming at 1740 to hear me speak uh this is was kind of the group of",
    "start": "15879",
    "end": "21080"
  },
  {
    "text": "death there's a load of really good speakers on so I'm also grateful I'm not talking to an empty room um it's been I think it was last",
    "start": "21080",
    "end": "29080"
  },
  {
    "text": "year was the 10th anniversary of uh James Lewis and Martin Fowler producing their paper on",
    "start": "29080",
    "end": "35360"
  },
  {
    "text": "microservices which really in a typical way of say thought Works captured what they saw as being a new emergent",
    "start": "35360",
    "end": "42079"
  },
  {
    "text": "movement in uh software architecture influenced by things like fine grain s",
    "start": "42079",
    "end": "47360"
  },
  {
    "text": "at Netflix um and they captured it all in a paper and it had impacts on the industry um",
    "start": "47360",
    "end": "56160"
  },
  {
    "text": "for a while it was very popular everyone was like I want to be doing micros Services right and of late what's",
    "start": "56160",
    "end": "62440"
  },
  {
    "text": "happened is a bit of a backlash people are all like you know microservices are",
    "start": "62440",
    "end": "67720"
  },
  {
    "text": "terrible let's all go back to the monolith so this talk is a little bit about uh in much the same pitch of",
    "start": "67720",
    "end": "74560"
  },
  {
    "text": "anyone who's seen my TD where did it all go wrong talk um it's a love letter to microservices and it tries to explain",
    "start": "74560",
    "end": "80560"
  },
  {
    "text": "where I think people have been going wrong with microservices and why they hate them and when they should actually",
    "start": "80560",
    "end": "86000"
  },
  {
    "text": "use monoliths um but how you can kind of fix your journey to microservices to use",
    "start": "86000",
    "end": "92159"
  },
  {
    "text": "them better if you want to I'm old that's really what that slide",
    "start": "92159",
    "end": "97200"
  },
  {
    "text": "says Okay I I I work basically on an open",
    "start": "97200",
    "end": "102439"
  },
  {
    "text": "source project uh for net any net devs in the room yeah we compete with mass transit",
    "start": "102439",
    "end": "108439"
  },
  {
    "text": "it's called brighter where's Toby wave your hand Toby I tell you what I got some stickers somewhere",
    "start": "108439",
    "end": "116600"
  },
  {
    "text": "I got like the few left they give them to Toby uh mind your head it's don't want to kill anybody I'm a terrible",
    "start": "120520",
    "end": "126399"
  },
  {
    "text": "throw uh to's a better catch than I'm the throw so Toby can hand some of those out for you if you want a laptop sticker",
    "start": "126399",
    "end": "132640"
  },
  {
    "text": "from us um it's we alternative to say mass transit and service bus we've been around longer as than either of them in",
    "start": "132640",
    "end": "140760"
  },
  {
    "text": "the role of a framework both of them started as Brokers uh for msmq and we were a",
    "start": "140760",
    "end": "148280"
  },
  {
    "text": "framework and they PIV to become a framework later on when they drop being a broker so we were actually first we",
    "start": "148280",
    "end": "154879"
  },
  {
    "text": "also can be used in a cqrs role and we predate mediator uh Jimmy copied most of our",
    "start": "154879",
    "end": "161159"
  },
  {
    "text": "stuff because he wanted to use it didn't want all the messaging framework all",
    "start": "161159",
    "end": "166959"
  },
  {
    "text": "right so I'm going to start off we'll have a little talk about some fundamentals and definitions because I",
    "start": "166959",
    "end": "172760"
  },
  {
    "text": "think one of the things we're going to need to do is agree some terms so that we can then talk about what",
    "start": "172760",
    "end": "178959"
  },
  {
    "text": "microservices are then I'm going to focus on what I think are the key",
    "start": "178959",
    "end": "185000"
  },
  {
    "text": "misunderstandings that have led to the problems we find ourself in with our microservice practice and then I will",
    "start": "185000",
    "end": "191200"
  },
  {
    "text": "try and give you some pragmatic advice about the way to view the world that",
    "start": "191200",
    "end": "196440"
  },
  {
    "text": "will help you use monoliths or microservices as appropriate on your journey to doing software laughably I",
    "start": "196440",
    "end": "204120"
  },
  {
    "text": "put Q&A at the end we're never going to have time for Q&A but it's kind of that thing you do at the end there will be",
    "start": "204120",
    "end": "210120"
  },
  {
    "text": "time for questions all right uh if I finish with about 1 minute we'll be lucky all right so some fundamental some",
    "start": "210120",
    "end": "217159"
  },
  {
    "text": "definitions let's agree the meaning of some words and some ideas so as I'm sure you know since",
    "start": "217159",
    "end": "224319"
  },
  {
    "text": "1973 there has been a well- defined fundamental theorem of software engineering it is late in the day so I'm",
    "start": "224319",
    "end": "231640"
  },
  {
    "text": "going to forgive you if it slipped some of your mind I could pick on Toby and say Toby can you remember what it is but",
    "start": "231640",
    "end": "237120"
  },
  {
    "text": "that's really unkind because it's late for Toby too but that is the fundamental theory of software engineering as I'm",
    "start": "237120",
    "end": "242920"
  },
  {
    "text": "sure you all remember with that done I think we can move on okay I will explain the fundamental theorem of software",
    "start": "242920",
    "end": "249280"
  },
  {
    "text": "engineering the fundamental theory of software engineering comes from Edward yordon and Larry Constantine it was",
    "start": "249280",
    "end": "254760"
  },
  {
    "text": "defined in structured design in about 1975 but probably predates that it may well really go back as far as the NATO",
    "start": "254760",
    "end": "260759"
  },
  {
    "text": "software conference in 1968 NATO 90 data software comp for those you don't know was designed to",
    "start": "260759",
    "end": "267440"
  },
  {
    "text": "answer the question how do we get faster at doing software development a question we have been asking for the last nearly",
    "start": "267440",
    "end": "273759"
  },
  {
    "text": "60 years right due to complexity it is always easier and cheaper to create two",
    "start": "273759",
    "end": "280880"
  },
  {
    "text": "small pieces rather than one big piece if the two small pieces do the same job",
    "start": "280880",
    "end": "285960"
  },
  {
    "text": "as the single piece this is because combining two problems in one piece forces us to deal with the unneeded",
    "start": "285960",
    "end": "292160"
  },
  {
    "text": "interactions between the two pieces right let's reason about that so I currently work at just eat takeaway we",
    "start": "292160",
    "end": "297520"
  },
  {
    "text": "deliver food to you if you can imagine that if I had a piece of code and I said",
    "start": "297520",
    "end": "303800"
  },
  {
    "text": "you know what I'm going to put in that piece of code a pricing engine for your basket and Courier assignment you might",
    "start": "303800",
    "end": "310520"
  },
  {
    "text": "go do those things really live together Ian are you sure you sure that makes sense to have those all in one code base",
    "start": "310520",
    "end": "317639"
  },
  {
    "text": "and are you sure it makes some sense to have all the code for this running into the code to that you probably it's going to be a lot easier we could break that",
    "start": "317639",
    "end": "323680"
  },
  {
    "text": "up right and that's all that's already saying if I have two different ideas or",
    "start": "323680",
    "end": "329280"
  },
  {
    "text": "three ideas or four ideas or five ideas we can all rationally agree it's",
    "start": "329280",
    "end": "334880"
  },
  {
    "text": "probably going to be easier to break those pieces up because then we don't go unwanted interdependencies between those",
    "start": "334880",
    "end": "340560"
  },
  {
    "text": "items right and we can rephrase that as follows the cost of a computer system",
    "start": "340560",
    "end": "346680"
  },
  {
    "text": "will be minimized when the parts of the problem are solvable",
    "start": "346680",
    "end": "352160"
  },
  {
    "text": "separately right and manageably small that is how we reduce the cost of",
    "start": "352160",
    "end": "358639"
  },
  {
    "text": "software there was a note even in 1975 everyone has a def different definition of manageably small and then",
    "start": "358639",
    "end": "366680"
  },
  {
    "text": "the Crux of much of our pain right but the idea is breaking software into Parts",
    "start": "366680",
    "end": "373520"
  },
  {
    "text": "helps us manage it so how do we break into parts so modules are this key idea that",
    "start": "373520",
    "end": "379919"
  },
  {
    "text": "emerged back structure programming in the 70s and uh yordan constantly defined",
    "start": "379919",
    "end": "385319"
  },
  {
    "text": "as follows a lexically contiguous sequence of program statements other words kind of like a script that goes",
    "start": "385319",
    "end": "390680"
  },
  {
    "text": "from one end to the other bounded by boundary elements so in other words it's in some kind of box in net and assembly",
    "start": "390680",
    "end": "396840"
  },
  {
    "text": "or in Python a module having an aggregate identify is got a name uh",
    "start": "396840",
    "end": "401880"
  },
  {
    "text": "another way of saying this is a module is a bounded contigous group of statements has a single name which can be referred to as a units in other words",
    "start": "401880",
    "end": "407840"
  },
  {
    "text": "we can break our software into pieces we give it a name and we contain some amount of code in that in that in that",
    "start": "407840",
    "end": "416560"
  },
  {
    "text": "space okay Martin defines a software component as something that is",
    "start": "416720",
    "end": "423639"
  },
  {
    "text": "independently replaceable and upgradeable in other words I can swap it",
    "start": "423639",
    "end": "428879"
  },
  {
    "text": "out either to upgrade it or to replace it and the other things that make up my",
    "start": "428879",
    "end": "434440"
  },
  {
    "text": "system won't care it's a component plugs and plays right two main types of",
    "start": "434440",
    "end": "440599"
  },
  {
    "text": "components we tend to use libraries I would include Frameworks and libraries so something I run in process in my code",
    "start": "440599",
    "end": "447240"
  },
  {
    "text": "that I leverage to go faster through reuse and services something I talk to in another process we'll come to that in",
    "start": "447240",
    "end": "453400"
  },
  {
    "text": "a second okay components are modules but",
    "start": "453400",
    "end": "458560"
  },
  {
    "text": "they add the characteristic that they are replaceable in other words I can swap",
    "start": "458560",
    "end": "463960"
  },
  {
    "text": "one for the other so if you have essentially a module that has a well- defined interface where you can swap in",
    "start": "463960",
    "end": "470800"
  },
  {
    "text": "another them that has the same interface either it's an upgrade or a replacement",
    "start": "470800",
    "end": "475919"
  },
  {
    "text": "then effectively it's a component you can swap one for the other right pretty straightforward",
    "start": "475919",
    "end": "482400"
  },
  {
    "text": "stuff okay a service so a service is a component that exists in its own process",
    "start": "482400",
    "end": "490159"
  },
  {
    "text": "clients talk to it over some interprocess communication mechanism such as RPC restful CES over HTTP or",
    "start": "490159",
    "end": "497080"
  },
  {
    "text": "messaging right so service is a component if it's a component then",
    "start": "497080",
    "end": "504000"
  },
  {
    "text": "effectively it's a independently replaceable or upgradable module a",
    "start": "504000",
    "end": "509039"
  },
  {
    "text": "module just a named collection of some code all right so for services to be",
    "start": "509039",
    "end": "514159"
  },
  {
    "text": "components the upgrade or replacement of one service should not require coordination with another seem",
    "start": "514159",
    "end": "519719"
  },
  {
    "text": "straightforward that's how we build software we've been doing this since the 70s that's kind of all of the structured",
    "start": "519719",
    "end": "525160"
  },
  {
    "text": "decomposition model basically that we have so microservices are just a set of",
    "start": "525160",
    "end": "532000"
  },
  {
    "text": "practices for successively building a software component architectural SK",
    "start": "532000",
    "end": "537279"
  },
  {
    "text": "style at scale so in other words we're going to use those ideas at scale to",
    "start": "537279",
    "end": "544040"
  },
  {
    "text": "break up our software all right so this definition comes from uh James do and Martin Fowler",
    "start": "544040",
    "end": "550640"
  },
  {
    "text": "componentization via services in other words we're going to use components independently reget replaceable units",
    "start": "550640",
    "end": "558399"
  },
  {
    "text": "and we're going to use Services we're going to put them in processes right and then that note at the bottom often you",
    "start": "558399",
    "end": "564600"
  },
  {
    "text": "will hear this phrase used phrase independent deployability what that means is if I want to upgrade one",
    "start": "564600",
    "end": "571880"
  },
  {
    "text": "component in my architecture I shouldn't have to impact anything else right I should be to replace or upgrade a single",
    "start": "571880",
    "end": "578079"
  },
  {
    "text": "component without taking down all my components if you find yourself in a world with your microservices with an order to replace one one of your",
    "start": "578079",
    "end": "584959"
  },
  {
    "text": "microservices you need to take all the others down then it's not a micros service right you haven't met the",
    "start": "584959",
    "end": "592320"
  },
  {
    "text": "service definition which hasn't met the component definition which is independently replaceable or upgradeable",
    "start": "592320",
    "end": "598480"
  },
  {
    "text": "typically that's why we you tend to use things like messaging because it makes that a lot easier right organized around business",
    "start": "598480",
    "end": "605720"
  },
  {
    "text": "capabilities so effectively when we do that breaking up we're going to break up",
    "start": "605720",
    "end": "612079"
  },
  {
    "text": "according to elements of our business's domain model smart endpoints and dum",
    "start": "612079",
    "end": "617480"
  },
  {
    "text": "pipes in other words the domain model should live in our services not on the",
    "start": "617480",
    "end": "622680"
  },
  {
    "text": "communication between our services and we should design for failure so as well as being replaceable",
    "start": "622680",
    "end": "628600"
  },
  {
    "text": "and upgradeable it would be good if one of our components could fail and we would survive that either because we",
    "start": "628600",
    "end": "634640"
  },
  {
    "text": "have some kind of scaling out so in other words the failure one doesn't really matter or because we use",
    "start": "634640",
    "end": "639880"
  },
  {
    "text": "something like messaging and therefore effectively we have a bulkhead to failure because work just cues waiting",
    "start": "639880",
    "end": "646240"
  },
  {
    "text": "for the component to be restored messaging will also help with independent deployability that gets us",
    "start": "646240",
    "end": "651279"
  },
  {
    "text": "towards reactive architectures and that's not really topic of this talk we will need in addition to the",
    "start": "651279",
    "end": "657399"
  },
  {
    "text": "support these design ideas infrastructure automation because if we're going to have a lot of independently Deployable Services that's",
    "start": "657399",
    "end": "665000"
  },
  {
    "text": "going to be too much to do by hand right so we're going to need to basically a to deploy by infrastructure automation",
    "start": "665000",
    "end": "671920"
  },
  {
    "text": "we're going to want decentralized data management if every service right is this independent unit then it and it",
    "start": "671920",
    "end": "679519"
  },
  {
    "text": "alone owns its implementation details including its data schemas and the data living inside it so in order to",
    "start": "679519",
    "end": "686040"
  },
  {
    "text": "basically manage I want to view a know our sales figures for the last three",
    "start": "686040",
    "end": "691600"
  },
  {
    "text": "months I'm going to have to have some way getting data out of those services and collecting it together centrally",
    "start": "691600",
    "end": "696920"
  },
  {
    "text": "right by exposing it for events or the like decentralized governance right in",
    "start": "696920",
    "end": "703000"
  },
  {
    "text": "other words we're not going to be to work in a model where effectively have multiple teams who are all supposed to",
    "start": "703000",
    "end": "708320"
  },
  {
    "text": "be working independently on their services if everything has to go through some kind of change control board we're just going to really uh end the value of",
    "start": "708320",
    "end": "715600"
  },
  {
    "text": "that so we want decentralized governance we want to give teams quite a lot of Independence to be able to release and deploy their software on their own right",
    "start": "715600",
    "end": "723320"
  },
  {
    "text": "and we think about products not projects in other words we want uh Pro a product manager focused on a given microservice",
    "start": "723320",
    "end": "731240"
  },
  {
    "text": "and taking that forward rather than thinking about projects that include a whole Lo of them right that's the defin",
    "start": "731240",
    "end": "736399"
  },
  {
    "text": "basic definition of microservices but as you can see the key idea here right it's a replaceable and",
    "start": "736399",
    "end": "743360"
  },
  {
    "text": "upgradable unit of code that is aligned to a domain that essentially achieves",
    "start": "743360",
    "end": "749279"
  },
  {
    "text": "isolation through the process model benefits strong module boundaries",
    "start": "749279",
    "end": "755440"
  },
  {
    "text": "process boundaries are strong they're hard to cross it's not like basically changing you know uh the the boundary",
    "start": "755440",
    "end": "762480"
  },
  {
    "text": "between two classes in your code it's a lot harder to to to change and that's",
    "start": "762480",
    "end": "767600"
  },
  {
    "text": "good because effectively it means you won't reach in the implementation details on the far side it has negative",
    "start": "767600",
    "end": "773040"
  },
  {
    "text": "consequences too independent deployment right we've said that effectively one component cannot affect the other in",
    "start": "773040",
    "end": "779639"
  },
  {
    "text": "terms of it's replace or upgrade so essentially that's a benefit we end up being able to independently deploy any",
    "start": "779639",
    "end": "785120"
  },
  {
    "text": "component teams gain control of their own release schedule technology diversity each",
    "start": "785120",
    "end": "791720"
  },
  {
    "text": "component can effectively run its own particular uh language or Frameworks and fault tolerant right if",
    "start": "791720",
    "end": "799320"
  },
  {
    "text": "we're essentially going to build these things to survive failure by scaling out by using message cues then essentially",
    "start": "799320",
    "end": "806040"
  },
  {
    "text": "our overall architecture will be resilient to the failure of an individual component and cognitive load is reduced",
    "start": "806040",
    "end": "815040"
  },
  {
    "text": "right microservices have a principle of code that lives in my head and that's",
    "start": "815040",
    "end": "820480"
  },
  {
    "text": "actually what the micro refers to right and technically it's code that lives in James Lewis's head um according to the",
    "start": "820480",
    "end": "828079"
  },
  {
    "text": "definition but um James has got a reasonable sized head so it's probably reasonable Siz of out of",
    "start": "828079",
    "end": "834680"
  },
  {
    "text": "code uh costs distribution distribution is always complexity multiplier right we",
    "start": "834759",
    "end": "840279"
  },
  {
    "text": "start dealing with networks we start dealing with issues of um uh you know is the network up how much bandwidth",
    "start": "840279",
    "end": "846399"
  },
  {
    "text": "latency Etc so it's going to cause pain for us right verification it's it's kind of gets a",
    "start": "846399",
    "end": "852880"
  },
  {
    "text": "bit harder to live in a world where effectively you say oh what you should do is just test the API of your",
    "start": "852880",
    "end": "858399"
  },
  {
    "text": "microservice and then deploy it and provided the contracts right it'll all work and everyone's a bit like really",
    "start": "858399",
    "end": "865480"
  },
  {
    "text": "I'm not sure I entirely believe in that uh and people want to T end to end I can I deploy everything onto my computer I'd",
    "start": "865480",
    "end": "872959"
  },
  {
    "text": "really like to deploy the entire application and all of the microservices right operational",
    "start": "872959",
    "end": "878959"
  },
  {
    "text": "complexity um essentially every microservice is now going to have uh need Telemetry deployment scripts the",
    "start": "878959",
    "end": "886160"
  },
  {
    "text": "cost of effectively operating all of these Services goes up right it's bad enough that usually we have uh one",
    "start": "886160",
    "end": "893480"
  },
  {
    "text": "person on the team that will deal with the build scripts um but you multiply that problem now by about you know X",
    "start": "893480",
    "end": "898639"
  },
  {
    "text": "member teams and a you got X number of people that need to deal with the build scripts and skill issues right we may",
    "start": "898639",
    "end": "904839"
  },
  {
    "text": "well have now be dealing with lots of things that people are not used to we may want them to do messaging and they",
    "start": "904839",
    "end": "910279"
  },
  {
    "text": "may have only ever done HTTP all right so we may have a whole range of upskilling to do to get the",
    "start": "910279",
    "end": "917279"
  },
  {
    "text": "microservices uh and data right how do we get hold of our data now it's all distributed everywhere how do we you",
    "start": "917279",
    "end": "924279"
  },
  {
    "text": "know we want to build everything with new gen products how do I get hold of my data now it's all in all these micr",
    "start": "924279",
    "end": "929720"
  },
  {
    "text": "services this seems like a bad idea what it was just in one big database that was easy right okay so we think of these problems",
    "start": "929720",
    "end": "938440"
  },
  {
    "text": "as the microservice premium once when I ages ago right at",
    "start": "938440",
    "end": "944319"
  },
  {
    "text": "the beginning of microservice I gave a talk about microservices right really early on it was at NDC Oslo and a friend",
    "start": "944319",
    "end": "951199"
  },
  {
    "text": "of to M Liam was in the audience uh and I got to some point",
    "start": "951199",
    "end": "956360"
  },
  {
    "text": "basically the audience was really enjoying what I was saying I got this point saying yeah unless you're about 30",
    "start": "956360",
    "end": "961560"
  },
  {
    "text": "you know 40 devs you're not going to need microservices and he said half the room turned against me he said because",
    "start": "961560",
    "end": "967199"
  },
  {
    "text": "they brought their boss to explain we should be doing microservices boss our team of five right and I and they they I",
    "start": "967199",
    "end": "973360"
  },
  {
    "text": "was no longer their friend but the problems you're trying to solve are as follows the code doesn't fit in your",
    "start": "973360",
    "end": "979800"
  },
  {
    "text": "head right I have this really large problem and I need to break it up into pieces so that tends to lead you towards",
    "start": "979800",
    "end": "986759"
  },
  {
    "text": "some kind of modularization or componentization ation that itself doesn't mean you need microservices",
    "start": "986759",
    "end": "991880"
  },
  {
    "text": "because you have a modular monolith a five Pizza team so this pizza team idea a pizza team is about six people it's",
    "start": "991880",
    "end": "998480"
  },
  {
    "text": "just rough right so there is really about 30 to 40 people once you get Beyond about 30 to 40 people it's",
    "start": "998480",
    "end": "1005360"
  },
  {
    "text": "difficult for us to communicate properly about what we're doing and you know that smaller number we can all fit in a room",
    "start": "1005360",
    "end": "1011560"
  },
  {
    "text": "we can all shout at each other call each other you know question each other's parentage that kind of thing but when we",
    "start": "1011560",
    "end": "1016639"
  },
  {
    "text": "get to bigger than that we're probably in separate rooms in separate buildings and that gets harder",
    "start": "1016639",
    "end": "1022040"
  },
  {
    "text": "okay uh toe and I once got toed off it turns out the Gen X are much better um",
    "start": "1022040",
    "end": "1028000"
  },
  {
    "text": "uh calling each other names and being friends afterwards uh and the Millennials all complain that we were creating a toxic",
    "start": "1028000",
    "end": "1034438"
  },
  {
    "text": "workplace U subdomains uh have different forces for change so if you have things",
    "start": "1034439",
    "end": "1041480"
  },
  {
    "text": "that essentially create separate forces for change if they're all collocated",
    "start": "1041480",
    "end": "1046600"
  },
  {
    "text": "together in one space that becomes very difficult because you know everybody wants to be working here in order to try",
    "start": "1046600",
    "end": "1054080"
  },
  {
    "text": "and resolve their particular requirements and you're all getting each other's way so if you can try and break",
    "start": "1054080",
    "end": "1059760"
  },
  {
    "text": "it up to move everybody into different places you'll go faster and a wide range of interaction Styles so typically this",
    "start": "1059760",
    "end": "1066039"
  },
  {
    "text": "is the I need web I need mobile I need to talk text to gen whatever it is",
    "start": "1066039",
    "end": "1071400"
  },
  {
    "text": "effectively that you're doing all right the more interaction uh connections you",
    "start": "1071400",
    "end": "1076520"
  },
  {
    "text": "get the more likely you might to break up into micros Services sometimes it's just summarized",
    "start": "1076520",
    "end": "1082400"
  },
  {
    "text": "as this right like one of those Fairground rides we'd be",
    "start": "1082400",
    "end": "1087760"
  },
  {
    "text": "tall all right so so where did it all go wrong right where did we where did we",
    "start": "1087760",
    "end": "1094320"
  },
  {
    "text": "get into a world where uh people has microservices",
    "start": "1094320",
    "end": "1100039"
  },
  {
    "text": "efforts ran into significant problems the problem really I think like",
    "start": "1100039",
    "end": "1105880"
  },
  {
    "text": "so many things relates to the name microservices is an appallingly badly",
    "start": "1105880",
    "end": "1112480"
  },
  {
    "text": "chosen name and I think even uh James and Martin will admit to that these",
    "start": "1112480",
    "end": "1118880"
  },
  {
    "text": "days when people use the word micro a whole set of people went off on",
    "start": "1118880",
    "end": "1126720"
  },
  {
    "text": "a journey that said what they mean is really",
    "start": "1126720",
    "end": "1133440"
  },
  {
    "text": "small so uh Fred George uh Fred George is also The Man Behind um",
    "start": "1133440",
    "end": "1139840"
  },
  {
    "text": "uh uh a version of extreme programming that is like extreme program is not extreme enough for me I'm going to go",
    "start": "1139840",
    "end": "1145919"
  },
  {
    "text": "really extreme got to fire all of the product managers and the testers and just have de devs talking to customers",
    "start": "1145919",
    "end": "1152320"
  },
  {
    "text": "things that so here thing is I'm going to take it to the next level so he was like let's have basically 100 lines of",
    "start": "1152320",
    "end": "1158679"
  },
  {
    "text": "code Services right um if it's more than for one programmer to develop and design",
    "start": "1158679",
    "end": "1164200"
  },
  {
    "text": "maintain it's not a micro Services right and you can find blog posts on side",
    "start": "1164200",
    "end": "1169400"
  },
  {
    "text": "single function microservices Prov with the highest degree of granularity this increasing granularity giv us more",
    "start": "1169400",
    "end": "1175080"
  },
  {
    "text": "control over resource consumption availability and scalability so people were really focused on making these",
    "start": "1175080",
    "end": "1180240"
  },
  {
    "text": "things as Tiny as possible all right arguably their mistake is that really",
    "start": "1180240",
    "end": "1185440"
  },
  {
    "text": "the micro just means that notion of independently replaceable and upgradeable obviously if something gets",
    "start": "1185440",
    "end": "1191200"
  },
  {
    "text": "too big you can't do that right so this leads to what we tend to",
    "start": "1191200",
    "end": "1197760"
  },
  {
    "text": "call the Nano Services anti pan so this I can't remember this is whose diagram this is but these float around these are",
    "start": "1197760",
    "end": "1203720"
  },
  {
    "text": "called basically Death Star diagrams and death star diagrams represent all of the connections between",
    "start": "1203720",
    "end": "1210720"
  },
  {
    "text": "the various services that you have obviously you get this problem of you know if I got two things I get one",
    "start": "1210720",
    "end": "1216600"
  },
  {
    "text": "connection and if I've got three things I get three but when I get to five it's about to 25 and it keeps going up exponentially right so the more things",
    "start": "1216600",
    "end": "1222520"
  },
  {
    "text": "you have the more connections you have and you end up in this web I don't think this is monzo but monzo famously put",
    "start": "1222520",
    "end": "1228880"
  },
  {
    "text": "their um Death Star diagram online see this is the complexity we cope with at monzo and the rest of they became the",
    "start": "1228880",
    "end": "1235039"
  },
  {
    "text": "main characters of the day with the rest of us kind of going why uh um so what",
    "start": "1235039",
    "end": "1240120"
  },
  {
    "text": "are the problems so one problem is effectively that they you have so many integration",
    "start": "1240120",
    "end": "1245200"
  },
  {
    "text": "points right you've massively increased the complexity your reasoning about",
    "start": "1245200",
    "end": "1250280"
  },
  {
    "text": "anything that you do is now really hard because you're you're connected to a huge number of",
    "start": "1250280",
    "end": "1256679"
  },
  {
    "text": "things your latency increases significantly right the problem that",
    "start": "1256679",
    "end": "1262200"
  },
  {
    "text": "some of these people identified in their microservice environments were like it takes 34 calls to render some piece of",
    "start": "1262200",
    "end": "1268880"
  },
  {
    "text": "output to the user because they were having to literally Bounce from task to task to task to task in this function as",
    "start": "1268880",
    "end": "1274760"
  },
  {
    "text": "a service model in order to get anything done so of course every single call even if it adds a small amount of latency",
    "start": "1274760",
    "end": "1281640"
  },
  {
    "text": "that all mounts up so they resulting incredibly High latency calls they have a high operation",
    "start": "1281640",
    "end": "1288960"
  },
  {
    "text": "overhead if every single one of these things needs build and deploy scripts",
    "start": "1288960",
    "end": "1295600"
  },
  {
    "text": "Telemetry you're just creating a massive overhead for every single service every piece of metadata that you need to",
    "start": "1295600",
    "end": "1302039"
  },
  {
    "text": "maintain is now increasing by the number of items that you're adding typically when we see these",
    "start": "1302039",
    "end": "1309240"
  },
  {
    "text": "people are working in a very synchronous fashion they've gone into their code base and said pretty much hey every",
    "start": "1309240",
    "end": "1315440"
  },
  {
    "text": "function call in here should be a separate microservice or maybe at best hey every class in here should be a",
    "start": "1315440",
    "end": "1321080"
  },
  {
    "text": "separate microservice right and they're making RPC style calls between them but",
    "start": "1321080",
    "end": "1326320"
  },
  {
    "text": "those are heavily coupled both temporally both things need to be available at the same time for a synchronous conversation basically to",
    "start": "1326320",
    "end": "1333279"
  },
  {
    "text": "succeed and also just in terms of behaviorally changing anything's really hard because there's a web of",
    "start": "1333279",
    "end": "1339840"
  },
  {
    "text": "connections that I have to basically work my way through we end up with very low cohesion",
    "start": "1339840",
    "end": "1346480"
  },
  {
    "text": "and perversely High coupling where people will think my microservices will",
    "start": "1346480",
    "end": "1351720"
  },
  {
    "text": "give me Loosely coupled services and in fact they've just got highly coupled functions talking to each other long",
    "start": "1351720",
    "end": "1358039"
  },
  {
    "text": "release Cycles weirdly my release Cycles end up increasing because none of these",
    "start": "1358039",
    "end": "1363200"
  },
  {
    "text": "things are actually independently Deployable they don't really even meet the module definition so in order to deploy anything I have to figure out hey",
    "start": "1363200",
    "end": "1370440"
  },
  {
    "text": "what things do I need to actually deploy all at the same time in order to make this work right and there a significant",
    "start": "1370440",
    "end": "1377400"
  },
  {
    "text": "obstacle to reasoning because you want to know how something",
    "start": "1377400",
    "end": "1383000"
  },
  {
    "text": "is done well it's done across 34 services and that's also a problem in",
    "start": "1383000",
    "end": "1388480"
  },
  {
    "text": "planning how What teams do I need to get involved what people do I need to get involved in the process right so this",
    "start": "1388480",
    "end": "1395159"
  },
  {
    "text": "whole thing becomes a house of",
    "start": "1395159",
    "end": "1398840"
  },
  {
    "text": "cards so micro is a bit of a problem word Services unfortunately also became",
    "start": "1400240",
    "end": "1406000"
  },
  {
    "text": "a bit of a problem word so what tended to happen was people were fixated a slightly they",
    "start": "1406000",
    "end": "1412200"
  },
  {
    "text": "misinterpreted slightly what that service process boundary means and they said well a microservice is a process",
    "start": "1412200",
    "end": "1418640"
  },
  {
    "text": "each service is autonomous and self-contained and runs as a unique process and if it's a process well hell",
    "start": "1418640",
    "end": "1425799"
  },
  {
    "text": "that means in our modern world it's a container right so each microservices packages a dockage container Docker",
    "start": "1425799",
    "end": "1431840"
  },
  {
    "text": "container to enable deployment to Comm cluster application orchestration great a cloud native application consists of",
    "start": "1431840",
    "end": "1437520"
  },
  {
    "text": "discrete reusable components known as microservices that are packaged in containers and this thing spread",
    "start": "1437520",
    "end": "1442679"
  },
  {
    "text": "throughout devops like wildfire right containers are microservices these two",
    "start": "1442679",
    "end": "1448320"
  },
  {
    "text": "terms as far as they're concerned are synonymous right kubernetes what what",
    "start": "1448320",
    "end": "1453640"
  },
  {
    "text": "runs in my by microservices right there are two quite different models lambda's not really",
    "start": "1453640",
    "end": "1459840"
  },
  {
    "text": "doesn't really get a function as a service don't really get to escape that model uh functions launched Byam is all",
    "start": "1459840",
    "end": "1465480"
  },
  {
    "text": "that you need to build a microservice to the level of granularity Desire",
    "start": "1465480",
    "end": "1470360"
  },
  {
    "text": "right so all this kind of surfaced a little bit with the Prime video you can't actually find there's an arive",
    "start": "1470799",
    "end": "1476600"
  },
  {
    "text": "link on this the slides go on my GitHub but there's an archive link because they've taken it down now but what",
    "start": "1476600",
    "end": "1482080"
  },
  {
    "text": "happened was Prime video there here in London somewhere so hopefully know from Prime videos in the talk uh I'm not going to find them anyway they had",
    "start": "1482080",
    "end": "1488360"
  },
  {
    "text": "effectively an architecture which consisted of a number of Lambda functions which are being orchestrated by a step",
    "start": "1488360",
    "end": "1494600"
  },
  {
    "text": "function and they decided that's a bit of unnecessary distribution and it we're just going to basically rewrite that as",
    "start": "1494600",
    "end": "1501640"
  },
  {
    "text": "a single service that's hosted in eks and actually the whole thing CS rather",
    "start": "1501640",
    "end": "1506919"
  },
  {
    "text": "the whole thing is much more efficient now right so they just reduced the cost of their process model",
    "start": "1506919",
    "end": "1513880"
  },
  {
    "text": "unfortunately the way they highlighted this thing was essentially from distributed services to a monolithic",
    "start": "1513880",
    "end": "1520960"
  },
  {
    "text": "application and the internet exploded microservices are a disaster Amazon has",
    "start": "1520960",
    "end": "1527320"
  },
  {
    "text": "abandoned mic micro Services I mean it's like the idea that you woke up yesterday and there's Amazon now running a huge",
    "start": "1527320",
    "end": "1534399"
  },
  {
    "text": "monolith packaging its entire e-commerce operation uh apparently according to the",
    "start": "1534399",
    "end": "1539640"
  },
  {
    "text": "internet that was that was the case um but uh really was just the one service",
    "start": "1539640",
    "end": "1544760"
  },
  {
    "text": "had changed its process model but The Usual Suspects uh decided that they",
    "start": "1544760",
    "end": "1550279"
  },
  {
    "text": "needed to have their say right Renta Gob appeared uh and said um it's clear in",
    "start": "1550279",
    "end": "1557399"
  },
  {
    "text": "practice micros Services POS perhaps the biggest siren song for needlessly complicating your system okay",
    "start": "1557399",
    "end": "1566760"
  },
  {
    "text": "uh I also think the um there are dangers that lead to this kind of model of",
    "start": "1566760",
    "end": "1572679"
  },
  {
    "text": "application development so I team toies is a great book if you've not read team topologies you may well find that your",
    "start": "1572679",
    "end": "1577919"
  },
  {
    "text": "managers are all reading team topologies and going we must work according to the team topologies model it's kind of",
    "start": "1577919",
    "end": "1583720"
  },
  {
    "text": "become the latest you know thing that your managers are all doing but it doesn't include anti pans which I find a",
    "start": "1583720",
    "end": "1590240"
  },
  {
    "text": "bit strange so one of the things they talk about is fracture planes so fracture planes basically are what we",
    "start": "1590240",
    "end": "1595559"
  },
  {
    "text": "used to talk about is being partitioning your system how do I partition it into pieces and they've got models of our",
    "start": "1595559",
    "end": "1601320"
  },
  {
    "text": "fracture planes but they don't talk about anti patterns of that and what I commonly see is this fracture plane of",
    "start": "1601320",
    "end": "1607080"
  },
  {
    "text": "Team availability which kind of said we've got this thing we need to build",
    "start": "1607080",
    "end": "1612320"
  },
  {
    "text": "okay uh where should it live oh in that team with their microservices they're really busy let's just create a new",
    "start": "1612320",
    "end": "1618679"
  },
  {
    "text": "microservice so people just create whole new services to create whole individual",
    "start": "1618679",
    "end": "1624279"
  },
  {
    "text": "uh HTTP endpoints that basically say well our API is just going to consist of",
    "start": "1624279",
    "end": "1629480"
  },
  {
    "text": "a entirely new microservice over here how will they communicate well we'll send messages between them right it's",
    "start": "1629480",
    "end": "1635240"
  },
  {
    "text": "just a lot of needless complexity and what they're doing is they're trying to leverage",
    "start": "1635240",
    "end": "1640960"
  },
  {
    "text": "microservices to avoid an organizational problem of bottlenecks that they might",
    "start": "1640960",
    "end": "1646080"
  },
  {
    "text": "be better solving with something like inner source by effectively saying we just create whole new components the whole time and",
    "start": "1646080",
    "end": "1652960"
  },
  {
    "text": "effectively it starts well and then you end up with you know five 500 components",
    "start": "1652960",
    "end": "1658120"
  },
  {
    "text": "and you wonder what happened and each one of them was an individual new function that you added and part of the",
    "start": "1658120",
    "end": "1663559"
  },
  {
    "text": "problem is I W read that quote to you this all right so this is back in",
    "start": "1663559",
    "end": "1670399"
  },
  {
    "text": "1975 it's kind of we knew what we know what we were talking about then so it's a comparison basically of the cost on",
    "start": "1670399",
    "end": "1677799"
  },
  {
    "text": "basic Bally the y axis to the number of components and the idea is that the",
    "start": "1677799",
    "end": "1684000"
  },
  {
    "text": "intram module effects that's the complexity inside your code base in a",
    "start": "1684000",
    "end": "1690279"
  },
  {
    "text": "given module as you increase the number of components that goes down so your cost",
    "start": "1690279",
    "end": "1697279"
  },
  {
    "text": "of any individual component lowers because it's doing less",
    "start": "1697279",
    "end": "1702760"
  },
  {
    "text": "right but everyone forgets there are also inter modu effects",
    "start": "1702760",
    "end": "1709200"
  },
  {
    "text": "which is essentially the complexity of modules talking to each other and as I",
    "start": "1709200",
    "end": "1714640"
  },
  {
    "text": "increase the number of components that goes up and that leads to this curve where",
    "start": "1714640",
    "end": "1721039"
  },
  {
    "text": "effectively there is a point at which I cross over from cost going down to cost",
    "start": "1721039",
    "end": "1727039"
  },
  {
    "text": "climbing back up again I've now got too many",
    "start": "1727039",
    "end": "1731840"
  },
  {
    "text": "components and some of this is down to a failure in that terms of fracture plane availability to realiz the following",
    "start": "1732720",
    "end": "1741200"
  },
  {
    "text": "problem cost of ownership is an order of magnitude greater than cost a author",
    "start": "1741840",
    "end": "1748240"
  },
  {
    "text": "right it it doesn't you can do a simple thought experiment if it takes you three months to write some software but 36",
    "start": "1748240",
    "end": "1754279"
  },
  {
    "text": "months to own it then it's an order of magnitude greater to own that software right we can do simple calculations we",
    "start": "1754279",
    "end": "1761240"
  },
  {
    "text": "you know estimate basically say the uh a team cost you about a million a year uh",
    "start": "1761240",
    "end": "1766600"
  },
  {
    "text": "and it takes them six months to write a piece a software that cost you 500,000 if the software lives for 5 years right",
    "start": "1766600",
    "end": "1774000"
  },
  {
    "text": "that's 5 million let's say that 50% of their time is spent in baau right which",
    "start": "1774000",
    "end": "1779159"
  },
  {
    "text": "which is optimistically the cost of the software not all the 5 million that's 2 and a half million compared to",
    "start": "1779159",
    "end": "1784600"
  },
  {
    "text": "500,000 right we don't need to get better at authoring software our",
    "start": "1784600",
    "end": "1791399"
  },
  {
    "text": "challenge the financial challenge to any business is not I need to write more",
    "start": "1791399",
    "end": "1796880"
  },
  {
    "text": "code faster it's I need to reduce the cost of owning my software fundamentally",
    "start": "1796880",
    "end": "1802600"
  },
  {
    "text": "that's the chat GPT problem right no one ever said our business will succeed if only we could write code faster the",
    "start": "1802600",
    "end": "1809440"
  },
  {
    "text": "actual thing is our business will succeed if only we could reduce the cost of owning",
    "start": "1809440",
    "end": "1815200"
  },
  {
    "text": "software so the problem is that effectively that fracture by availability it will essentially pivot",
    "start": "1816279",
    "end": "1824600"
  },
  {
    "text": "start increasing our costs and bankrupt us because we haven't taking control of the cost of",
    "start": "1824600",
    "end": "1830679"
  },
  {
    "text": "ownership okay so some pratic advice how how do",
    "start": "1830679",
    "end": "1837000"
  },
  {
    "text": "you get out of this scenario i i i note basically uh the note here is I did a",
    "start": "1837000",
    "end": "1843320"
  },
  {
    "text": "huge study uh in around 1966 a guy called Jack bra that lovely guy he",
    "start": "1843320",
    "end": "1849120"
  },
  {
    "text": "basically said uh every piece of evidence we have says that no one takes any advice you offer them so I I I I I",
    "start": "1849120",
    "end": "1856519"
  },
  {
    "text": "give the rest of this talk in the sure and certain knowledge that you'll ignore me but there we go right so the 4 plus",
    "start": "1856519",
    "end": "1863880"
  },
  {
    "text": "one model Creed by Philip Crut and it's a way to think about architecture and one of the problems in architecture is",
    "start": "1863880",
    "end": "1870000"
  },
  {
    "text": "that we apply a lot of different models to reason about how we're going to build software uh and not all those models fit",
    "start": "1870000",
    "end": "1877960"
  },
  {
    "text": "conceptually into the same space and we get into problems when what we're actually doing is trying to combine too",
    "start": "1877960",
    "end": "1886240"
  },
  {
    "text": "many things in one space so scenarios effectively are the requirements logical",
    "start": "1886240",
    "end": "1891799"
  },
  {
    "text": "is domain that we're actually trying to look at development is how we want to basically build a solution to that um uh",
    "start": "1891799",
    "end": "1898399"
  },
  {
    "text": "in terms of how we slice up our software process is physically how many processes",
    "start": "1898399",
    "end": "1903880"
  },
  {
    "text": "we're going to use how will they interoperate and physical is how will we deploy that on disk we'll run through",
    "start": "1903880",
    "end": "1909000"
  },
  {
    "text": "that again so not going to dwell on scenarios scenar how you capture your requirements use cases scratching user",
    "start": "1909000",
    "end": "1916000"
  },
  {
    "text": "stories scratching things on the back of cigarette packets whatever basically appeals to you at the minute I'm a big",
    "start": "1916000",
    "end": "1921639"
  },
  {
    "text": "fan of domain storytelling I think it's a very modern way of doing use cases essentially you have an actor which",
    "start": "1921639",
    "end": "1927919"
  },
  {
    "text": "could be a computer or a person doing something that's an activity which they do and they do it on a thing right and",
    "start": "1927919",
    "end": "1934559"
  },
  {
    "text": "you can effectively build descriptions as the whole systems using that you also want to think about non-functional requirements again I'm not going to go",
    "start": "1934559",
    "end": "1941080"
  },
  {
    "text": "into in depth I'm big fan of ATT tribute different design or atam as a way of effectively capturing quality attributes",
    "start": "1941080",
    "end": "1947080"
  },
  {
    "text": "for our eventual soft Ware all right The Logical model so The Logical model is uh",
    "start": "1947080",
    "end": "1954159"
  },
  {
    "text": "supports the functional requirements what the system should provide in terms of services to its users the system is",
    "start": "1954159",
    "end": "1960399"
  },
  {
    "text": "decomposed into set of key abstractions from the problem domain so this is where we're thinking about what is the problem",
    "start": "1960399",
    "end": "1966639"
  },
  {
    "text": "we're actually modeling what is the business problem what does it look like right so it's kind of our domain model",
    "start": "1966639",
    "end": "1974679"
  },
  {
    "text": "and the key thing we want to in terms of this talk right get out of the domain model is",
    "start": "1974679",
    "end": "1980840"
  },
  {
    "text": "effectively what are our subdomains and you can effectively how",
    "start": "1980840",
    "end": "1986320"
  },
  {
    "text": "do you think about what the subdomains are the parts that you can break this up to so natural seems understood bymes so",
    "start": "1986320",
    "end": "1992120"
  },
  {
    "text": "I work at just takeaway right and an obvious high level kind of approach for us would be to say we have customers we",
    "start": "1992120",
    "end": "1999880"
  },
  {
    "text": "have Partners people in restaurants and pharmacies and the like we have couriers people that deliver food for you right",
    "start": "1999880",
    "end": "2006559"
  },
  {
    "text": "so there are those at least those three pieces we might also think there something payments that moves money around or something fulfillment that",
    "start": "2006559",
    "end": "2012720"
  },
  {
    "text": "moves work around I've got five pieces and I can keep going like that right I can keep talking to the business about",
    "start": "2012720",
    "end": "2018159"
  },
  {
    "text": "what does this business look like um domain storytelling which we just saw in the use case stuff you can",
    "start": "2018159",
    "end": "2024519"
  },
  {
    "text": "actually look at that model which effectively is modeling out use cases in your domain and draw up some boundaries",
    "start": "2024519",
    "end": "2030840"
  },
  {
    "text": "um or value stream mapping which is a v you've done Six Sigma or the like essentially says hey we can break up any",
    "start": "2030840",
    "end": "2037039"
  },
  {
    "text": "given work flow into about 5 to 15 separate processes all of those are valuable techniques I'm not want to pick",
    "start": "2037039",
    "end": "2044120"
  },
  {
    "text": "one but at the end of it what you want to do is come up with your subdomains quick idea so this is don't",
    "start": "2044120",
    "end": "2049800"
  },
  {
    "text": "worry about you can see about seeing the detail this is what a domain storytelling diagram looks like for",
    "start": "2049800",
    "end": "2054919"
  },
  {
    "text": "ticket sales and the idea effectively is that you can say okay uh maybe",
    "start": "2054919",
    "end": "2061040"
  },
  {
    "text": "subdomains are where an actor doesn't interact with any other actors just just produces an object um where there's one",
    "start": "2061040",
    "end": "2067800"
  },
  {
    "text": "way information flows other words it's all go into a given actor um different triggers so hey maybe we need to break",
    "start": "2067800",
    "end": "2074520"
  },
  {
    "text": "things up because this one is triggered by an event in time this one is triggered by user action um maybe there",
    "start": "2074520",
    "end": "2080919"
  },
  {
    "text": "are things that happen off stage like payments um maybe there are different languages in other words uh the DDD",
    "start": "2080919",
    "end": "2087839"
  },
  {
    "text": "concept of we talk about uh policy this way you talk about policy that way because we're underwriting in claims",
    "start": "2087839",
    "end": "2094280"
  },
  {
    "text": "different use to the same thing right whatever your heuristics are it's not important to this talk I can kind of slice this up and say I think those are",
    "start": "2094280",
    "end": "2101599"
  },
  {
    "text": "separate subdomains in my system and I can reason and talk about those subdomains of separate ideas and they",
    "start": "2101599",
    "end": "2107560"
  },
  {
    "text": "may have separate reasons to change um doain story telling is great I I encourage you to go and look at",
    "start": "2107560",
    "end": "2114279"
  },
  {
    "text": "it be aware and which the point a point we returned to obviously our business is",
    "start": "2115079",
    "end": "2121280"
  },
  {
    "text": "not static right there's this old joke and you know it's pre pandemic is a joke but",
    "start": "2121280",
    "end": "2127359"
  },
  {
    "text": "how you you know you're in the you live in the kind of naughties you sat in the same desk for five years and work for six companies right um so business",
    "start": "2127359",
    "end": "2134800"
  },
  {
    "text": "models change business is Pivot we add new ideas you know just takeaway doesn't just do food anymore right and as those",
    "start": "2134800",
    "end": "2142400"
  },
  {
    "text": "things develop obviously there will be changes to your domain model all right",
    "start": "2142400",
    "end": "2147760"
  },
  {
    "text": "um tasks and activities change more frequently than processes and what we",
    "start": "2147760",
    "end": "2153240"
  },
  {
    "text": "mean by that is um there's thing called the guest life cycle when you check into a hotel all right it goes some browsing",
    "start": "2153240",
    "end": "2160040"
  },
  {
    "text": "to check in to stay to completing your stat it's called the guest life cycle it's well understood in that industry and it's divid into processes and a",
    "start": "2160040",
    "end": "2166520"
  },
  {
    "text": "typical process is checkin right within checkin over time that has changed once",
    "start": "2166520",
    "end": "2172000"
  },
  {
    "text": "upon a time I got a physical key now I get a card right so processes like",
    "start": "2172000",
    "end": "2178319"
  },
  {
    "text": "checkin tend to be very long lived and very stable tasks and activities like I",
    "start": "2178319",
    "end": "2183560"
  },
  {
    "text": "hand you a mechanism to get into your room now I've got Hilton for example which I can just do it on my phone app",
    "start": "2183560",
    "end": "2190240"
  },
  {
    "text": "right change over time quite rapidly so it's best in model processes non activities and tasks and one of the",
    "start": "2190240",
    "end": "2196040"
  },
  {
    "text": "reasons you get into trouble with effectively functions of service modelage and modeling activities and",
    "start": "2196040",
    "end": "2201680"
  },
  {
    "text": "tasks so logical reviews require constant gardening we continually have to converse with the business to change",
    "start": "2201680",
    "end": "2207680"
  },
  {
    "text": "our logical model so development the software is",
    "start": "2207680",
    "end": "2213480"
  },
  {
    "text": "packaged in small chunks programs libr are sub subsystems that can be developed by one more small developers so we take",
    "start": "2213480",
    "end": "2219680"
  },
  {
    "text": "those domains that that that model of our broken down domains and we say how are we going to build",
    "start": "2219680",
    "end": "2226839"
  },
  {
    "text": "that and that's what we're going to Define our service boundaries now remember the parts of the original",
    "start": "2227119",
    "end": "2234119"
  },
  {
    "text": "problem must be solvable separately so that's this process activities and tasks thing it's often better to focus on",
    "start": "2234119",
    "end": "2240560"
  },
  {
    "text": "processes because they tend to orchestrate stuff right as your your subdivision not to focus on activities",
    "start": "2240560",
    "end": "2246200"
  },
  {
    "text": "and tasks within it because they may just be sharing State Etc as part of the flow right I refer to this as the",
    "start": "2246200",
    "end": "2253160"
  },
  {
    "text": "Goldilocks Point that's what we're looking for right this point in",
    "start": "2253160",
    "end": "2258400"
  },
  {
    "text": "decomposition where effectively we reduce the complexity of the size of the",
    "start": "2258400",
    "end": "2263599"
  },
  {
    "text": "individual component without sign without trading that off badly against",
    "start": "2263599",
    "end": "2269079"
  },
  {
    "text": "the number of components that we own uh it is hard to find right that's why we",
    "start": "2269079",
    "end": "2274920"
  },
  {
    "text": "often say you'll do your microservices twice right there are certain helpers so there",
    "start": "2274920",
    "end": "2282200"
  },
  {
    "text": "what we talk what um Neil Ford and friends in architect soft architecture the hard Parts talk about granular in",
    "start": "2282200",
    "end": "2287720"
  },
  {
    "text": "granularity integrators and disintegrators so disintegrators are codes too big won't fit in my head uh",
    "start": "2287720",
    "end": "2294160"
  },
  {
    "text": "distribution of code changes in other words effectively there are lots of changes in this area and lots of changes",
    "start": "2294160",
    "end": "2299680"
  },
  {
    "text": "in this area and they driven by quite separate forces um continuous change for your problems so in other words whole",
    "start": "2299680",
    "end": "2306200"
  },
  {
    "text": "loads of people keep wanting to change this this source code could we break and it's a constant po point of conflict",
    "start": "2306200",
    "end": "2312839"
  },
  {
    "text": "could we break it up integrators acid transactions don't try and split acid",
    "start": "2312839",
    "end": "2318400"
  },
  {
    "text": "transactions across independent processes it is painful shared code in",
    "start": "2318400",
    "end": "2323680"
  },
  {
    "text": "other words essentially these two things both need to use the algorithm X right",
    "start": "2323680",
    "end": "2329079"
  },
  {
    "text": "we don't really want to share the code probably they're both just the same thing if they're both using algorithm X",
    "start": "2329079",
    "end": "2334720"
  },
  {
    "text": "shared data right we have to keep passing this this data structure between all these little tiny components and",
    "start": "2334720",
    "end": "2340240"
  },
  {
    "text": "it's a big heavy data structure maybe actually if they're all operating on the same data structure they're all the same",
    "start": "2340240",
    "end": "2347680"
  },
  {
    "text": "thing so fracture plane uh in in Te topologist terms is looking for a",
    "start": "2349280",
    "end": "2355760"
  },
  {
    "text": "business domain bounded context actually which is a hell of a phrase which is kind of like hedging your bets between I",
    "start": "2355760",
    "end": "2361240"
  },
  {
    "text": "don't know what a domain is I don't know what a boundary context is um so boundary context from domain from design",
    "start": "2361240",
    "end": "2367520"
  },
  {
    "text": "explicitly set boundaries in terms of Team organization usage within specific Parts application physical",
    "start": "2367520",
    "end": "2372640"
  },
  {
    "text": "manifestations so what it basically means is a bounded context is effectively an artifact of this this phase and it's the people the process",
    "start": "2372640",
    "end": "2379640"
  },
  {
    "text": "and the technology that you use to implement a subdomain and within that you agree for sanity we will agree that",
    "start": "2379640",
    "end": "2386760"
  },
  {
    "text": "the the mean the words have a given meaning within that team and Etc effectively when we say claims we may we",
    "start": "2386760",
    "end": "2392640"
  },
  {
    "text": "mean this typically when you begin you try and align them with domains over time",
    "start": "2392640",
    "end": "2399839"
  },
  {
    "text": "because domains change they will drift out alignment with domains that's what context mapping is all about right but",
    "start": "2399839",
    "end": "2406280"
  },
  {
    "text": "they're not quite the same thing people use them interchangeably um uncertain so what",
    "start": "2406280",
    "end": "2412280"
  },
  {
    "text": "should you do right in terms of breaking things up so if you are uncertain about your domain about basically how you",
    "start": "2412280",
    "end": "2419560"
  },
  {
    "text": "might split it up if you're sitting there going I just don't know is it this is it that Etc I can't figure out what",
    "start": "2419560",
    "end": "2425200"
  },
  {
    "text": "my banded contexts are or effectively if you're you're just below 30 people a good starting place is a monolith",
    "start": "2425200",
    "end": "2431319"
  },
  {
    "text": "because it will help you learn okay you might use modules within it and those modules may be your first stab or",
    "start": "2431319",
    "end": "2438280"
  },
  {
    "text": "attempt at saying what I think the subdomains are inside my given monolith and it's an easy place to refine them",
    "start": "2438280",
    "end": "2444440"
  },
  {
    "text": "because they're easier to change there so typically you're going to have to have a single CI boundary you don't want",
    "start": "2444440",
    "end": "2450040"
  },
  {
    "text": "more than about five Pizza teams basically working on this five teams 10 pizza roll okay and it needs a monor",
    "start": "2450040",
    "end": "2456480"
  },
  {
    "text": "repo right needs a single repo where all of the code lives because it's a single CI",
    "start": "2456480",
    "end": "2461680"
  },
  {
    "text": "boundary right that's a good first step if you're uncertain start here all right that if you clearly can",
    "start": "2461680",
    "end": "2471480"
  },
  {
    "text": "see that you have clear domains and those domains have complexity that will",
    "start": "2471480",
    "end": "2478240"
  },
  {
    "text": "fit in your head right and you've got an easy model which basically says great I",
    "start": "2478240",
    "end": "2484560"
  },
  {
    "text": "can effectively say I'm going to have a micro service for each one of these domains so you got some constraints",
    "start": "2484560",
    "end": "2491440"
  },
  {
    "text": "forces for change of cohesive any acid requirements can be F within the service boundary and that's your ideal",
    "start": "2491440",
    "end": "2497839"
  },
  {
    "text": "microservice and that's the poster child we were all really shooting for back 10 or 11 years ago right clear alignment I",
    "start": "2497839",
    "end": "2504560"
  },
  {
    "text": "have a domain code for the doain subdomain code for the that subdomain fits in my head there are no acid",
    "start": "2504560",
    "end": "2510000"
  },
  {
    "text": "transaction problems every all the changes land up here rather than across everywhere else there's my micros subes",
    "start": "2510000",
    "end": "2516040"
  },
  {
    "text": "you can find those you're good all right and that is what microservices were intended to to Really",
    "start": "2516040",
    "end": "2522599"
  },
  {
    "text": "model but there are some more complex models I can't really that I feel that",
    "start": "2522599",
    "end": "2528800"
  },
  {
    "text": "this is one subdomain but the code is more complicated than I can fit in my",
    "start": "2528800",
    "end": "2535640"
  },
  {
    "text": "head so I'm facing this challenge of unseemingly unnaturally sprit splitting",
    "start": "2535640",
    "end": "2541040"
  },
  {
    "text": "up my subdomain because of the complexity of the code base so one option is can you find a a",
    "start": "2541040",
    "end": "2548760"
  },
  {
    "text": "seams inside the subdomain are you is is this subdomain generally irreducible so",
    "start": "2548760",
    "end": "2554440"
  },
  {
    "text": "you can look for activities then we like to change but you could say oh you know",
    "start": "2554440",
    "end": "2559680"
  },
  {
    "text": "check-in actually has two main activities verify customer um give",
    "start": "2559680",
    "end": "2564960"
  },
  {
    "text": "customer access to room that's probably not going to change I'm going to split that into two parts I've now got two",
    "start": "2564960",
    "end": "2570880"
  },
  {
    "text": "manageable subdomains whose complexity I can understand right",
    "start": "2570880",
    "end": "2577079"
  },
  {
    "text": "Beware of the complexity of inter modular dependencies if you do that right and that is about I may have to push a chunk of data between them which",
    "start": "2577240",
    "end": "2583920"
  },
  {
    "text": "refers to effectively the customer if it's independently solvable",
    "start": "2583920",
    "end": "2590000"
  },
  {
    "text": "each split within the subdomain becomes a microservice but what happens if I can't do that what happens if I look at",
    "start": "2590000",
    "end": "2595760"
  },
  {
    "text": "it and I say there are acid transactions between the two halves and there's a huge amount of data that I moving so we",
    "start": "2595760",
    "end": "2601720"
  },
  {
    "text": "have these around for example baskets when you're shopping and you want to price effectively a basket as a result",
    "start": "2601720",
    "end": "2608559"
  },
  {
    "text": "of adding an item is effectively a transaction because you want to see a coherent set of delivery charges or",
    "start": "2608559",
    "end": "2614400"
  },
  {
    "text": "whatever for adding that item so it's an asset transaction that needs to run even though there's quite a lot of complexity around",
    "start": "2614400",
    "end": "2620160"
  },
  {
    "text": "pricing okay so what do you do you need what's called a macro",
    "start": "2620160",
    "end": "2626040"
  },
  {
    "text": "service all right um so macro Services effectively are using modularity to try and",
    "start": "2626040",
    "end": "2634240"
  },
  {
    "text": "effectively break up our microser service into a number of pieces so the",
    "start": "2634240",
    "end": "2639599"
  },
  {
    "text": "idea comes from Cindy strean and basically it says it's effectively a service right but you can effectively",
    "start": "2639599",
    "end": "2646200"
  },
  {
    "text": "componentize it inside it likely has more than one module library or service",
    "start": "2646200",
    "end": "2651440"
  },
  {
    "text": "inside so it consists of more than one part those parts effectively are usually",
    "start": "2651440",
    "end": "2656599"
  },
  {
    "text": "independently replaceable but it may be sharing data maybe a CI boundary most likely right typically it has a larger",
    "start": "2656599",
    "end": "2664160"
  },
  {
    "text": "team 20 devs thr or three teams working on on it so effectively you know that's",
    "start": "2664160",
    "end": "2669400"
  },
  {
    "text": "a manageable number we can effectively all sit in in a largest room we can chat to each other so it's a manageable level",
    "start": "2669400",
    "end": "2675559"
  },
  {
    "text": "of complexity um it may or may not have need a monor repo in other words probably be want to get everybody's code",
    "start": "2675559",
    "end": "2681559"
  },
  {
    "text": "in the single repo because we're likely to want to have some kind of CI boundary to make sure that everything works",
    "start": "2681559",
    "end": "2686680"
  },
  {
    "text": "together because we may well be forced into releasing our software together right dependency management becomes a",
    "start": "2686680",
    "end": "2692319"
  },
  {
    "text": "lot easier though still non-trivial the fewer the services Repose the better observability in debugging right so this",
    "start": "2692319",
    "end": "2697640"
  },
  {
    "text": "is this model effectively of a macro service and it's kind of if you like the missing piece in our Armory because it",
    "start": "2697640",
    "end": "2705680"
  },
  {
    "text": "lets us say you know what this thing doesn't really devolve into a simple microservice it needs to be a bit bigger",
    "start": "2705680",
    "end": "2712880"
  },
  {
    "text": "we quite often look at these in terms of micr Kernel architectures so an interesting way to build these is to",
    "start": "2712880",
    "end": "2718559"
  },
  {
    "text": "effectively have some kind of centralized thing that you need to do some kind of workflows for example",
    "start": "2718559",
    "end": "2724440"
  },
  {
    "text": "pricing effectively have modules represent the things that pricing needs to do that effectively can be owned by",
    "start": "2724440",
    "end": "2731480"
  },
  {
    "text": "individual teams allowing you to essentially separate the cognitive load to individual teams and one core team",
    "start": "2731480",
    "end": "2738960"
  },
  {
    "text": "you all have to work together you can all share data but you can break the problem up in a more useful fashion that makes it more",
    "start": "2738960",
    "end": "2745760"
  },
  {
    "text": "manageable okay you may have a very simple model where essentially you think",
    "start": "2745760",
    "end": "2753359"
  },
  {
    "text": "each one of these domains is Trivial these subdomains right and if I was to put them all out",
    "start": "2753359",
    "end": "2759760"
  },
  {
    "text": "on their own I might rapidly hit that Nano Services problem because I'm increasing the number of items that I've",
    "start": "2759760",
    "end": "2765880"
  },
  {
    "text": "got these are Services where you feel this thing wouldn't earn its weight and",
    "start": "2765880",
    "end": "2771800"
  },
  {
    "text": "cost in terms of telemetry observability managing build scripts Etc so the",
    "start": "2771800",
    "end": "2777960"
  },
  {
    "text": "question is can you combine them and typically we do this all the time we just don't know it so if a team owns a",
    "start": "2777960",
    "end": "2786000"
  },
  {
    "text": "lot of small Serv Services you're effectively doing this you're giving them basically because teams are a bounded context even though you don't",
    "start": "2786000",
    "end": "2791839"
  },
  {
    "text": "really know that you imagine it imagine they own multiple bounded contexts but you're effectively giving the teams a",
    "start": "2791839",
    "end": "2798640"
  },
  {
    "text": "whole load of software and saying um hey you earn all of this so if you can find",
    "start": "2798640",
    "end": "2804720"
  },
  {
    "text": "ones that are kind of aligned you can combine it into a macro service you",
    "start": "2804720",
    "end": "2809760"
  },
  {
    "text": "simply say okay this service actually has a number of moving parts for whatever reason but effectively it's",
    "start": "2809760",
    "end": "2815400"
  },
  {
    "text": "combining all these smaller domains together together right so the code for domains is much smaller than your head",
    "start": "2815400",
    "end": "2820680"
  },
  {
    "text": "um you can question if it should be a module right maybe this thing could just be a module inside this larger domain rather than effectively being a",
    "start": "2820680",
    "end": "2826760"
  },
  {
    "text": "standalone uh service so I've still got replaceability body a component but",
    "start": "2826760",
    "end": "2831800"
  },
  {
    "text": "effectively I want to move into that kind of model so the question you're really asking is is it truly independent of",
    "start": "2831800",
    "end": "2838000"
  },
  {
    "text": "others does it has separate reasons to change are the behaviors it operates about the same work item are we talking",
    "start": "2838000",
    "end": "2843800"
  },
  {
    "text": "to ourself typically you may find and you often find these by experience by",
    "start": "2843800",
    "end": "2849359"
  },
  {
    "text": "looking at your microservice estate and you find two components that are very chatty they're talking to each other and",
    "start": "2849359",
    "end": "2855640"
  },
  {
    "text": "they're basically exchanging information about the same thing they're having a conversation with nobody else but each",
    "start": "2855640",
    "end": "2860760"
  },
  {
    "text": "other they're tiny and the data going back and forth is the same thing they're just operating on typically you can just",
    "start": "2860760",
    "end": "2867000"
  },
  {
    "text": "combine them and make them two modules in one service with some shared data",
    "start": "2867000",
    "end": "2872119"
  },
  {
    "text": "right just because you've chosen to use microservices doesn't mean you can't have a microservices that uses",
    "start": "2872119",
    "end": "2878160"
  },
  {
    "text": "modularity make sense um watch for basically thing",
    "start": "2878160",
    "end": "2884040"
  },
  {
    "text": "another good smell is you've got an acid transaction that's distributed over them and you're having to do tons of work with sagas to effectively figure out how",
    "start": "2884040",
    "end": "2890720"
  },
  {
    "text": "to orchestrate everything that's you typically often a smell that you've got these small pieces that generally want",
    "start": "2890720",
    "end": "2896119"
  },
  {
    "text": "to live together okay",
    "start": "2896119",
    "end": "2901800"
  },
  {
    "text": "um the thing that we do note though right is if the logical domain can change",
    "start": "2901800",
    "end": "2907960"
  },
  {
    "text": "and if we base our partitions on the subdomains if the subdomains",
    "start": "2907960",
    "end": "2913920"
  },
  {
    "text": "change then essentially our microservice boundaries May will change or what we choose to do and this is one of the",
    "start": "2913920",
    "end": "2920920"
  },
  {
    "text": "problems with microservices identified right at the beginning is when your components of services remote",
    "start": "2920920",
    "end": "2926520"
  },
  {
    "text": "Communications then refactoring is much harder than within processed libraries so one of the costs of microservices we",
    "start": "2926520",
    "end": "2933599"
  },
  {
    "text": "forget is that change is harder so if your business is always changing in",
    "start": "2933599",
    "end": "2938760"
  },
  {
    "text": "certain areas there may be a good a good reason to make that area a macros service because effectively those in",
    "start": "2938760",
    "end": "2945119"
  },
  {
    "text": "those changes with inside will be much easier than those changes that move",
    "start": "2945119",
    "end": "2950520"
  },
  {
    "text": "across right I've going to skip that uh bar talk somewhere else and skip that",
    "start": "2950520",
    "end": "2956440"
  },
  {
    "text": "one as well all right okay so processes so how many physical processes",
    "start": "2956440",
    "end": "2964520"
  },
  {
    "text": "does my microservice have remember we said basically it's probably not one okay so when we talk about the process",
    "start": "2964520",
    "end": "2971240"
  },
  {
    "text": "model it's a group of tasks that form an executable unit they represent a level which the process architecture can be tactically controlled start to recover",
    "start": "2971240",
    "end": "2977640"
  },
  {
    "text": "reconfig and shut down so the process step is when we figure out how many processes do we want and if we have more",
    "start": "2977640",
    "end": "2982960"
  },
  {
    "text": "than one how do they interoperate they're talking over to each other by CFA or grpc or what's going",
    "start": "2982960",
    "end": "2989680"
  },
  {
    "text": "on and the trick here is that effectively um we want to think about",
    "start": "2989680",
    "end": "2996000"
  },
  {
    "text": "models that help us expose basically a decent model of how processes work so a",
    "start": "2996000",
    "end": "3002760"
  },
  {
    "text": "12 Factor apps is a good model we want to in a modern world SE to be application Centric not infrastructure",
    "start": "3002760",
    "end": "3008720"
  },
  {
    "text": "Centric in other words what we don't want to do is have tons of knowledge in our code about the infrastructure we",
    "start": "3008720",
    "end": "3014799"
  },
  {
    "text": "want to essentially choose to host our code in infrastructure the 12s is a good",
    "start": "3014799",
    "end": "3020040"
  },
  {
    "text": "model the other things to think about when you talk about interoperability is async versus sync communication",
    "start": "3020040",
    "end": "3025599"
  },
  {
    "text": "messaging or RPC or Eventing that kind of thing we're not going to C with that so much right so even back in the original",
    "start": "3025599",
    "end": "3033640"
  },
  {
    "text": "paper there was this clear idea that a service May consist of multiple processes that will always be deployed",
    "start": "3033640",
    "end": "3039000"
  },
  {
    "text": "uh uh and developed together so the 12 fact app model is really useful here and it basically",
    "start": "3039000",
    "end": "3045920"
  },
  {
    "text": "says your application May consist of a number of processes those processes are",
    "start": "3045920",
    "end": "3052720"
  },
  {
    "text": "things that have different scaling characteristics so if I have an HTTP worker that's",
    "start": "3052720",
    "end": "3059520"
  },
  {
    "text": "listening to http requests and a CFA worker that is listening to a partition",
    "start": "3059520",
    "end": "3065640"
  },
  {
    "text": "on a CFA stream they will scale very differently the CFA worker Ling to a",
    "start": "3065640",
    "end": "3071040"
  },
  {
    "text": "stream is only ever going to scale up to the number of partitions that I've created on my stream the HTTP worker is",
    "start": "3071040",
    "end": "3078359"
  },
  {
    "text": "going to scale up as far as it can and order to handle HTTP requests coming into the server if I combine them",
    "start": "3078359",
    "end": "3085000"
  },
  {
    "text": "together in one process which do I scale them for right you get the classic kubernetes problem of people are scaling",
    "start": "3085000",
    "end": "3090720"
  },
  {
    "text": "for CPU because effectively they're scaling what would be an HTTP worker whereas in",
    "start": "3090720",
    "end": "3096079"
  },
  {
    "text": "fact I'm okay if the service worker runs hot what I care about is actually the latency on the on the on the que or the",
    "start": "3096079",
    "end": "3102680"
  },
  {
    "text": "stream so because they have totally different scaling characteristics they should be totally different processes",
    "start": "3102680",
    "end": "3110359"
  },
  {
    "text": "and what we tend to think of these as as process types what are the different process",
    "start": "3110359",
    "end": "3116680"
  },
  {
    "text": "types that my service has what are the different ways it may need to scale and that collection is called the process",
    "start": "3116680",
    "end": "3124880"
  },
  {
    "text": "formation and without that you're just going to think oh you know microservice",
    "start": "3125079",
    "end": "3130319"
  },
  {
    "text": "equals basically Docker container right and that isn't the reality the reality is microservices May consist there as",
    "start": "3130319",
    "end": "3136200"
  },
  {
    "text": "many processes as I need to scale effectively in terms of process types and as many instances of that as I need",
    "start": "3136200",
    "end": "3141920"
  },
  {
    "text": "to meet my scaling right there are some simple cases we just an HTTP worker but in other cases you're going to need to",
    "start": "3141920",
    "end": "3147960"
  },
  {
    "text": "want to scale things very differently okay some integrates and disintegrates some processes basically",
    "start": "3147960",
    "end": "3154480"
  },
  {
    "text": "scalability in ther but disintegrating into smaller pieces for different scalability requirements fault tolerance",
    "start": "3154480",
    "end": "3160160"
  },
  {
    "text": "right I actually need to break this thing up because I don't want for here to affect the other thing and integrators I need to do an acid",
    "start": "3160160",
    "end": "3165880"
  },
  {
    "text": "transaction I can't make it across to processes I have some shared code I don't want to move across to your",
    "start": "3165880",
    "end": "3172520"
  },
  {
    "text": "processes all right and finally we get to this model which basically says a microservice is an application right a",
    "start": "3172520",
    "end": "3179680"
  },
  {
    "text": "whole microservice is an application the 12 Factor absense uh which may be basically a macro service May consist of",
    "start": "3179680",
    "end": "3187079"
  },
  {
    "text": "multiple apps or maybe some a micrel model with multiple plugins",
    "start": "3187079",
    "end": "3192240"
  },
  {
    "text": "right and an app or a micronel plugin has effectively a process formation of",
    "start": "3192240",
    "end": "3197799"
  },
  {
    "text": "multiple process types and that's what you need to think about at this",
    "start": "3197799",
    "end": "3203480"
  },
  {
    "text": "level physical so the physical thing uh various elements networks Etc is effectively we",
    "start": "3205079",
    "end": "3212040"
  },
  {
    "text": "decide to put those processes on hosts this just is this is where you decide that thing runs in kubernetes or it runs",
    "start": "3212040",
    "end": "3218599"
  },
  {
    "text": "in ECS or it runs in cus and Lambda or it's I'm going to run it on ec2 instances or whatever your hosting model",
    "start": "3218599",
    "end": "3224000"
  },
  {
    "text": "is it's going to run on bare tin in my data center right the physical one perhaps least interesting for our",
    "start": "3224000",
    "end": "3229799"
  },
  {
    "text": "conversation essentially says now how do I think about that and the problem we'",
    "start": "3229799",
    "end": "3236440"
  },
  {
    "text": "we kind of got ourselves into a lot in thinking about microservices is we've got very confused about which one of",
    "start": "3236440",
    "end": "3243599"
  },
  {
    "text": "those four plus one things we're talking about right typically a lot we think about in terms of microservices happens",
    "start": "3243599",
    "end": "3250240"
  },
  {
    "text": "in that development view how do we allocate people processing technology to",
    "start": "3250240",
    "end": "3256000"
  },
  {
    "text": "a particular partition of our problem space it's very separate from how do we",
    "start": "3256000",
    "end": "3261480"
  },
  {
    "text": "actually partition our problem space it's very separate from how many processes do we actually need to",
    "start": "3261480",
    "end": "3267640"
  },
  {
    "text": "effectively operate that software and it's very different from how do we deploy those processes at runtime to our",
    "start": "3267640",
    "end": "3274160"
  },
  {
    "text": "infrastructure and it's nothing to do with size micro originally just means code that fits in your head and a",
    "start": "3274160",
    "end": "3280319"
  },
  {
    "text": "replaceable unit of software and service just really means something that uses a process boundary rather than an inter",
    "start": "3280319",
    "end": "3288040"
  },
  {
    "text": "module boundary for separation and that's where we've gone wrong right but ultimately feel free to",
    "start": "3288040",
    "end": "3295960"
  },
  {
    "text": "start with monolith use microservices and be aware of macros Services they're the kind of missing piece of the puzzle",
    "start": "3295960",
    "end": "3303200"
  },
  {
    "text": "all right thanks very much",
    "start": "3303200",
    "end": "3307160"
  }
]