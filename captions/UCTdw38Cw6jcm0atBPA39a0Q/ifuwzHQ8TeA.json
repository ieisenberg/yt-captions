[
  {
    "text": "clicker all set and it's 4/20 buy my watch now so I expected this would be a",
    "start": "10780",
    "end": "18410"
  },
  {
    "text": "small crowd a self-selecting crowd this is very niche topic but hopefully you'll",
    "start": "18410",
    "end": "24020"
  },
  {
    "text": "get something interesting out of this this whole discussion will be talking about what you can read the slide",
    "start": "24020",
    "end": "29450"
  },
  {
    "text": "anchored metadata so this is maybe a topic you've never come across before I certainly never had until we started",
    "start": "29450",
    "end": "36559"
  },
  {
    "text": "looking into it year or so ago my name is Austin Bingham I work for in half own this company 60",
    "start": "36559",
    "end": "42829"
  },
  {
    "text": "north we do a lot of Python work consulting training things like that and",
    "start": "42829",
    "end": "48320"
  },
  {
    "text": "this came out of some of our sort of internal developments so ideas we've been tossing around for a while I'm at a",
    "start": "48320",
    "end": "55309"
  },
  {
    "text": "disadvantage here because I like to point it screens when I present and I can't really do that in this so I'm gonna try to use this little pointer so",
    "start": "55309",
    "end": "62269"
  },
  {
    "text": "if you see me getting flustered that's that's part of what's going on here so what is the problem",
    "start": "62269",
    "end": "68120"
  },
  {
    "text": "I'm trying to solve I want to associate metadata with my code and this is",
    "start": "68120",
    "end": "73670"
  },
  {
    "text": "something we do on a pretty regular basis so I've got some code here can",
    "start": "73670",
    "end": "79100"
  },
  {
    "text": "anybody tell me what what language that is it's one of the hot new things right that's rust right I didn't know much",
    "start": "79100",
    "end": "86450"
  },
  {
    "text": "rust until I started working on this we might want to be able to tag parts of",
    "start": "86450",
    "end": "91549"
  },
  {
    "text": "our code and associate data saying you know please don't mutate this if you're doing mutation testing so I don't want",
    "start": "91549",
    "end": "97759"
  },
  {
    "text": "that that bit of code just those you know five characters they're not the whole line but just that little bit to not be touched or maybe I don't want",
    "start": "97759",
    "end": "104359"
  },
  {
    "text": "linting to apply to that bit of code there or maybe I want to disable testing on that bit of code for some reason",
    "start": "104359",
    "end": "110719"
  },
  {
    "text": "there's lots of reasons we might want to do this kind of thing and it comes up over and over again",
    "start": "110719",
    "end": "116049"
  },
  {
    "text": "we found this problem specifically when we were working on a tool called cosmic",
    "start": "116049",
    "end": "121250"
  },
  {
    "text": "ray cosmic rays and you test mutation testing tool for python we've been",
    "start": "121250",
    "end": "126439"
  },
  {
    "text": "working on it for actually quite a long time so to motivate this a little bit I want to talk about mutation testing very",
    "start": "126439",
    "end": "132500"
  },
  {
    "text": "briefly interesting in its own right so what is mutation testing if you've never heard of it well you have some body of",
    "start": "132500",
    "end": "138470"
  },
  {
    "text": "code under test your application your library something like that and you have a sweet that tests it tells you that it",
    "start": "138470",
    "end": "144830"
  },
  {
    "text": "works correctly the idea of mutation testing is that you make a single small change to your code perhaps change a",
    "start": "144830",
    "end": "151909"
  },
  {
    "text": "great event to a less than or a one to a zero or something like that and then you run your test suite and if",
    "start": "151909",
    "end": "158420"
  },
  {
    "text": "your test suite is good if it is able to tell you that your code is actually not functioning properly what you get is a",
    "start": "158420",
    "end": "164810"
  },
  {
    "text": "test failure at that point so if you have a test suite a very high fidelity test suite that can actually detect all",
    "start": "164810",
    "end": "170950"
  },
  {
    "text": "changes in functionality in your program any small change like that should show",
    "start": "170950",
    "end": "176180"
  },
  {
    "text": "result in a test failure so this is an interesting problem in its own right and involves all sorts of complex problems and has been a real joy to work on but",
    "start": "176180",
    "end": "183680"
  },
  {
    "text": "we have a particular problem this is not just for Python but this is the theory of mutation testing this notion of",
    "start": "183680",
    "end": "188950"
  },
  {
    "text": "equivalent to mutants one kind of equivalent mutant that shows up in Python regularly is what you see here",
    "start": "188950",
    "end": "195590"
  },
  {
    "text": "you don't have to really know python to appreciate this talk but this is code that is your it's the main block of a",
    "start": "195590",
    "end": "201319"
  },
  {
    "text": "Python program and it's only executed if the module that you're executing is the main module which might be the case when",
    "start": "201319",
    "end": "208130"
  },
  {
    "text": "you're running the program but is never the case when you're running your test suite so any code in here that the mutation testing tool modifies will",
    "start": "208130",
    "end": "216139"
  },
  {
    "text": "never result in any change in your test suite output so we have to somehow tell the testing tool or the mutation testing tool please don't futz with this code",
    "start": "216139",
    "end": "222440"
  },
  {
    "text": "right here that's a common one this is another one that's a little bit more devious so stare at that and anybody see",
    "start": "222440",
    "end": "229129"
  },
  {
    "text": "what the problem is of course you don't see what the problem is it's very very subtle maybe you do see it you're very very smart the problem in this code for",
    "start": "229129",
    "end": "236299"
  },
  {
    "text": "mutation testing point of view is that zero cosmic-ray is going to plow through your code looking for numbers and things",
    "start": "236299",
    "end": "241609"
  },
  {
    "text": "that it can mess with it's gonna see a zero and it's gonna change it to a one or a thousand or minus six or something like that what's gonna happen is an",
    "start": "241609",
    "end": "249709"
  },
  {
    "text": "almost completely unobservable change in the behavior of your program what this function is doing is consuming an",
    "start": "249709",
    "end": "255199"
  },
  {
    "text": "iterable just to get the side-effects doing nothing else with the the iterable and this is just a technique this is",
    "start": "255199",
    "end": "261199"
  },
  {
    "text": "just an idiom for constructing a double-ended to you and ramming a bunch of stuff through it to get it to be",
    "start": "261199",
    "end": "266630"
  },
  {
    "text": "processed right if I change that 0 to a 1 it says that the the double in dequeue can now go from size 0 to size 1 that's",
    "start": "266630",
    "end": "273110"
  },
  {
    "text": "great the only way I could ever detect that to analyze essentially pythons internal data management structures that you",
    "start": "273110",
    "end": "279500"
  },
  {
    "text": "never really want to look at unless you're a C Python hacker so this is another undetectable change it's a legitimate change that the mutation",
    "start": "279500",
    "end": "286760"
  },
  {
    "text": "testing suite could make but it's impossible to test so how do we tell cosmic-ray not to touch that how do I",
    "start": "286760",
    "end": "293510"
  },
  {
    "text": "communicate that to a tool this is the core of the problem we were trying to solve and this has been wanted for a",
    "start": "293510",
    "end": "300170"
  },
  {
    "text": "long time if you look at the time stamp on this this github issue goes back to 2015 it's likely there are cases where I know that they're completely acceptable",
    "start": "300170",
    "end": "307100"
  },
  {
    "text": "failures that I need to avoid let that the user tell me about and not run tests or not run mutations over certain parts",
    "start": "307100",
    "end": "313580"
  },
  {
    "text": "of code I thought hard about this that I thought for a little while at least and I realized that there you know I could",
    "start": "313580",
    "end": "318800"
  },
  {
    "text": "have a separate file that says aunt line such-and-such and file such-and-such don't mutate or don't apply specific",
    "start": "318800",
    "end": "325340"
  },
  {
    "text": "mutation operators to this range of code I said this would be very brittle because the code will change over time",
    "start": "325340",
    "end": "330500"
  },
  {
    "text": "how do I maintain those things so I thought about it and kind of abandoned the idea and moved on the alternative",
    "start": "330500",
    "end": "338930"
  },
  {
    "text": "when you've probably seen is something like this I put these no QA you know the hash tag here I'll try to use the",
    "start": "338930",
    "end": "344960"
  },
  {
    "text": "pointer for the first time these kinds of things comments telling the linting tool for example please don't run",
    "start": "344960",
    "end": "351560"
  },
  {
    "text": "linting on this bit of code so you've probably seen this in Python or whatever other language you work in it's very",
    "start": "351560",
    "end": "356840"
  },
  {
    "text": "common and it works it works just fine but it has some problems what I call inline metadata here here are the",
    "start": "356840",
    "end": "362600"
  },
  {
    "text": "problems one is that it's language specific if I write a tool to do that it has to be written for a specific language because it's using the",
    "start": "362600",
    "end": "368980"
  },
  {
    "text": "mechanisms the syntax of the language to communicate the metadata so if I write it once for Python I have to do the same",
    "start": "368980",
    "end": "375200"
  },
  {
    "text": "thing for rust or the same thing for Perl god forbid I'm not supposed to bash",
    "start": "375200",
    "end": "380930"
  },
  {
    "text": "other languages here so I won't do that anymore but it can also be collisions what if I want to say two things about this line",
    "start": "380930",
    "end": "387080"
  },
  {
    "text": "of code I want to say no QA and don't mutate how do I do that maybe they can live side by side maybe they well",
    "start": "387080",
    "end": "393230"
  },
  {
    "text": "somehow shake hands but I don't know that that's really built into how these metadata facilities work it clutters",
    "start": "393230",
    "end": "398990"
  },
  {
    "text": "your code this is something I just don't like on an aesthetic level that's ugly I think it's kind of takes away from the joy of writing Python when I have to put",
    "start": "398990",
    "end": "405260"
  },
  {
    "text": "other cruft in my code and to a degree it's not robust refactoring if I make refactorings those",
    "start": "405260",
    "end": "412009"
  },
  {
    "text": "little tags those comments will follow the lines of code along maybe but I'm using a refactoring tool they may not",
    "start": "412009",
    "end": "417860"
  },
  {
    "text": "follow this along so actually they seem robust but they can break if you start using tools that help you do proper",
    "start": "417860",
    "end": "424220"
  },
  {
    "text": "software engineering so there's a number of problems with this approach and we want to try to explore the other option",
    "start": "424220",
    "end": "429620"
  },
  {
    "text": "that's why it was appealing to externalize this metadata this approach we're talking about here so the solution",
    "start": "429620",
    "end": "436849"
  },
  {
    "text": "be a question mark there because this seems to work what I'm going to demonstrate and show here in this talk",
    "start": "436849",
    "end": "442699"
  },
  {
    "text": "does seem to work but hasn't really been used very broadly so I was having a discussion at a queue in Bristol a",
    "start": "442699",
    "end": "449840"
  },
  {
    "text": "couple of years ago with these two guys Rob small shear who's sitting right over there and David McKeever who if you've never",
    "start": "449840",
    "end": "456319"
  },
  {
    "text": "met David you should meet him he's a great guy very very smart and we got talking about this problem and sort of",
    "start": "456319",
    "end": "461960"
  },
  {
    "text": "tossing around very seriously this idea of externalizing the metadata and of course too you have a proper discussion",
    "start": "461960",
    "end": "468740"
  },
  {
    "text": "we had to you know be official about things so we had to have some beer as well and this really got our juices flowing and got us thinking about how we",
    "start": "468740",
    "end": "474620"
  },
  {
    "text": "might do this and it seems like more and more of a tractable idea if you could just find a way that as your code",
    "start": "474620",
    "end": "481130"
  },
  {
    "text": "changes over time which it inevitably will you can automatically move your anchors around to your your metadata I",
    "start": "481130",
    "end": "487849"
  },
  {
    "text": "just can give you some foreshadowing we'll talk about something called anchors here in a little bit so the idea",
    "start": "487849",
    "end": "493639"
  },
  {
    "text": "very straightforward you got your source code and you've got some external file containing the metadata and it says you know at this",
    "start": "493639",
    "end": "500750"
  },
  {
    "text": "place in the source code don't do mutations at this place in the source code disable a certain kind of operator",
    "start": "500750",
    "end": "507169"
  },
  {
    "text": "and this by itself is very simple but it still doesn't address the key question",
    "start": "507169",
    "end": "512539"
  },
  {
    "text": "what happens when the code changes I like this slide because this is obviously akiles two things you can",
    "start": "512539",
    "end": "519320"
  },
  {
    "text": "observe akiles worked out and also arrows were huge apparently back then look at the size of that thing I mean",
    "start": "519320",
    "end": "525140"
  },
  {
    "text": "you get hit in the heel you get hit in the pinky you might die from something like that I don't know if that's actually to scale but it looks like a big arrow to me anyhow this is the",
    "start": "525140",
    "end": "531230"
  },
  {
    "text": "Achilles heel of this above the externalizing problem how can you have the computer do automatic updates rather",
    "start": "531230",
    "end": "537110"
  },
  {
    "text": "than forcing you to keep your anchors up-to-date with your code that's what we wanted to avoid so",
    "start": "537110",
    "end": "542370"
  },
  {
    "text": "the challenge how can I keep metadata aligned with changing source code source",
    "start": "542370",
    "end": "547709"
  },
  {
    "text": "code will change and the metadata needs to follow along or be ablated when it loan lock no longer matches that is",
    "start": "547709",
    "end": "553470"
  },
  {
    "text": "dropped off when it no longer matches the code I was able to put this problem",
    "start": "553470",
    "end": "558509"
  },
  {
    "text": "off for a long time because the backlog of issues for cosmic rays pretty substantial and it's a part-time hobby",
    "start": "558509",
    "end": "564240"
  },
  {
    "text": "project so we don't put a lot of energy into it most of the time so I was able to kind of convince myself I shouldn't work on this but after I'm not exactly",
    "start": "564240",
    "end": "573059"
  },
  {
    "text": "sure why I got inspired but I did get inspired to do some reading about this one afternoon and I found this wonderful",
    "start": "573059",
    "end": "579209"
  },
  {
    "text": "paper from the Czech Republic by Carol and Maria ble koba I don't know if I'm",
    "start": "579209",
    "end": "587069"
  },
  {
    "text": "pronouncing that right she seems to be the head researcher here because she has many more citations in publications and",
    "start": "587069",
    "end": "592139"
  },
  {
    "text": "this is exactly what I was looking for metadata anchoring for source code robust location descriptor definition",
    "start": "592139",
    "end": "598230"
  },
  {
    "text": "building and interpreting great so it was a very very promising paper and I read the paper and it kind of struck me",
    "start": "598230",
    "end": "605009"
  },
  {
    "text": "as something hey I could do this I understood the algorithms I understood the concepts they were talking about it wasn't too far out of my comfort zone it",
    "start": "605009",
    "end": "611879"
  },
  {
    "text": "felt like something I could program so I said okay I give this a shot what's the basis of the idea the basis of the idea",
    "start": "611879",
    "end": "620370"
  },
  {
    "text": "is you have this notion of a context and the context includes three things let's try the pointer again you have what we",
    "start": "620370",
    "end": "626249"
  },
  {
    "text": "call the topic I kind of made this term up for myself but it comes from other ideas in their paper the topic is the",
    "start": "626249",
    "end": "631290"
  },
  {
    "text": "thing that you are anchoring this is the range of code I don't want to mutate or that I don't want to lint or whatever and you just remember what that text",
    "start": "631290",
    "end": "638490"
  },
  {
    "text": "looks like you store that and you also store some text from before that and some text from after that so you know",
    "start": "638490",
    "end": "645509"
  },
  {
    "text": "ten characters or twenty characters before and after the topic so you can understand the context that what it",
    "start": "645509",
    "end": "650759"
  },
  {
    "text": "looked like when you made the anchor and this is what gets stored off to the side this is how you point to a piece of code",
    "start": "650759",
    "end": "659089"
  },
  {
    "text": "the real magic the real trick that they brought to bear on this is this thing",
    "start": "659089",
    "end": "664649"
  },
  {
    "text": "called the smith-waterman alignment algorithm smith-waterman is an algorithm from genetics research in its job in",
    "start": "664649",
    "end": "672059"
  },
  {
    "text": "genetics is to take two sequences of nucleotides and find out how they map how they aligned so you can try to start",
    "start": "672059",
    "end": "679020"
  },
  {
    "text": "comparing genes I don't know exactly what they use it for but it is a well-established algorithm it has lots",
    "start": "679020",
    "end": "686490"
  },
  {
    "text": "of good implementations and it's quite fast and it gives really good results for what they do and it seems to give a",
    "start": "686490",
    "end": "691650"
  },
  {
    "text": "good results for aligning pieces of source code that are similar but not identical which is exactly the problem",
    "start": "691650",
    "end": "697650"
  },
  {
    "text": "that we had how can I take an original piece of source code a change source code and figure out where they touch",
    "start": "697650",
    "end": "704670"
  },
  {
    "text": "are they still mostly the same this was the problem we wanted to solve and they seem to have found a good algorithm for",
    "start": "704670",
    "end": "709710"
  },
  {
    "text": "it so there's a couple of data structures and algorithms so we're gonna go back to CS 101 here for a little",
    "start": "709710",
    "end": "716910"
  },
  {
    "text": "while the first data structure we have in the in this work in the tool is",
    "start": "716910",
    "end": "723330"
  },
  {
    "text": "called Spore and we'll get to that in a little bit is okay the the topic we remember this string we remember the",
    "start": "723330",
    "end": "729510"
  },
  {
    "text": "text that we're we're anchoring we remember the offset into the source file where that starts and we remember some",
    "start": "729510",
    "end": "736110"
  },
  {
    "text": "before and after text again 10 to 20 characters something like that so that we can remember what the file looked",
    "start": "736110",
    "end": "741390"
  },
  {
    "text": "like there's some nominal width to this beginning and I almost reached down the",
    "start": "741390",
    "end": "747420"
  },
  {
    "text": "point at the screen that wouldn't help you very much there's some nominal width to before-and-after here so it could be that the topic is right at the front of",
    "start": "747420",
    "end": "753900"
  },
  {
    "text": "my file and I can't have all of the before that I want but I remember how big I expect it to be so that if the anchor moves I can actually get the",
    "start": "753900",
    "end": "760380"
  },
  {
    "text": "correct amount so we have to store all that information for each anchor the data structure looks I'm sorry well this",
    "start": "760380",
    "end": "765870"
  },
  {
    "text": "does look kind of like this but if we were going to anchor this code again some rust code I might have the topic",
    "start": "765870",
    "end": "771540"
  },
  {
    "text": "pointing to that line so that's 15 characters something like that I would remember some 10 characters before that",
    "start": "771540",
    "end": "777600"
  },
  {
    "text": "10 characters after that and an offset into the file so that's how I point to a location in a source code file",
    "start": "777600",
    "end": "784400"
  },
  {
    "text": "associated with that is a bigger data structure called the anchor so the anchor has the context and slide it and",
    "start": "784400",
    "end": "791070"
  },
  {
    "text": "that's how it knows how to point to something in a file here it remembers where the path is the encoding of the",
    "start": "791070",
    "end": "796470"
  },
  {
    "text": "file this is actually really important because if if I'm talking about all sets into a file and talking about bytes typically speaking I need to know the",
    "start": "796470",
    "end": "801960"
  },
  {
    "text": "encoding so we have to store that and it also stores the actual metadata so this is the thing this anchor is the thing",
    "start": "801960",
    "end": "807930"
  },
  {
    "text": "that says I got your metadata and this is the code that it applies to so none of this is terribly complicated yeah this",
    "start": "807930",
    "end": "813329"
  },
  {
    "text": "is just simple data structures but these are you know it took a little while to get to exactly this shape and it's worth understanding these bits so with anchors",
    "start": "813329",
    "end": "821639"
  },
  {
    "text": "in place if I can create an anchor to point into somewhere in a source file how do I take a changed source file and",
    "start": "821639",
    "end": "828720"
  },
  {
    "text": "get the anchor to point to the right place that is where the algorithms come into play no the important algorithm",
    "start": "828720",
    "end": "835620"
  },
  {
    "text": "smith-waterman I think it's really interesting it's kind of a fun thing to",
    "start": "835620",
    "end": "840870"
  },
  {
    "text": "talk about these these details in a sense because I think we get a lot of this at these at these conferences this",
    "start": "840870",
    "end": "846690"
  },
  {
    "text": "is pretty low-level this is a very computer science e it's kind of takes some people out of their comfort zone hopefully it certainly was entertaining",
    "start": "846690",
    "end": "853139"
  },
  {
    "text": "too right so it is used in genomics as I said for aligning sequences of nucleotides you",
    "start": "853139",
    "end": "858750"
  },
  {
    "text": "know G ATTC ACC G those things it finds all potential all optimal alignments",
    "start": "858750",
    "end": "865079"
  },
  {
    "text": "between two sequences of nucleotides and reports them back to you and then it applies some gap penalties and scoring",
    "start": "865079",
    "end": "872940"
  },
  {
    "text": "functions and stuff there's a bit of there's a few knobs you can twist on the algorithm to kind of coax it to do the right thing for you and there's some",
    "start": "872940",
    "end": "879899"
  },
  {
    "text": "research to be done in that for for um anchored metadata of course and it uses",
    "start": "879899",
    "end": "885630"
  },
  {
    "text": "some backtracking to help you find the the optimal alignment between two things and not just optimal scores of alignment",
    "start": "885630",
    "end": "890880"
  },
  {
    "text": "but the actual alignments between the two either sequences of nucleotides or source code files so the basic idea and",
    "start": "890880",
    "end": "898290"
  },
  {
    "text": "this is that a high-level will see some diagrammatic explanations in a second that really make this much clearer I think as for each pair of input elements",
    "start": "898290",
    "end": "904980"
  },
  {
    "text": "we have a a matrix you know n by M matrix and for each combination of the Cartesian cross-product where you want",
    "start": "904980",
    "end": "912269"
  },
  {
    "text": "to call it we calculate a score and that score is based on how well those two things match so is is it an A in an A",
    "start": "912269",
    "end": "919079"
  },
  {
    "text": "that matches really well is it an A and a G those don't match at all and the score is based on the path we followed",
    "start": "919079",
    "end": "924899"
  },
  {
    "text": "through the text so far to get to that point so if we've been following a long contiguous streak our score is going to",
    "start": "924899",
    "end": "930389"
  },
  {
    "text": "be really high but if there have been discontinued discontinuities the score will go down as a result and this is how",
    "start": "930389",
    "end": "935939"
  },
  {
    "text": "it can deal with bits of code that are similar then dissimilar for a little bit",
    "start": "935939",
    "end": "941339"
  },
  {
    "text": "and then similar again so if you inserted thing into your source code you can detect that and it can remember to",
    "start": "941339",
    "end": "946650"
  },
  {
    "text": "update your anchor yeah if there is as I just said if there's a contiguous streak",
    "start": "946650",
    "end": "952650"
  },
  {
    "text": "of matches and you get a very high scores and there's a gap penalty if there are discontinuities work you could",
    "start": "952650",
    "end": "960660"
  },
  {
    "text": "get you can get maximal scores you get more than one maximal score that is they have the same score and they're the",
    "start": "960660",
    "end": "966120"
  },
  {
    "text": "biggest of all the scores so you might get more than one match back from the from the algorithm this is important",
    "start": "966120",
    "end": "971850"
  },
  {
    "text": "this is an area I haven't explored much but it I need to think hard about it and yeah we can use backtracking",
    "start": "971850",
    "end": "978330"
  },
  {
    "text": "to figure out the actual path so let's it's easier to understand with a",
    "start": "978330",
    "end": "984150"
  },
  {
    "text": "demonstration so let's take two sequences of nucleotides GAC CG and GCC",
    "start": "984150",
    "end": "989220"
  },
  {
    "text": "a just intuitively we can kind of see where these are gonna match right you can you can see okay it kind of we see",
    "start": "989220",
    "end": "995460"
  },
  {
    "text": "GCC and we see G and CC here and kind of figure that's kind of how they're going to line up and in fact that's exactly",
    "start": "995460",
    "end": "1000920"
  },
  {
    "text": "what happens in this case so we can eyeball it you know we've got brains and eyes but how does the computer do it well it does it kind of like this so we",
    "start": "1000920",
    "end": "1008330"
  },
  {
    "text": "build this matrix and I hope you can see that we've got the first series here GAC",
    "start": "1008330",
    "end": "1013430"
  },
  {
    "text": "CG along the top and GCC a along the side and this is the scoring matrix",
    "start": "1013430",
    "end": "1018860"
  },
  {
    "text": "we're gonna fill this up with scores as we go along so we initialize this outer band with zeros so this outer band is",
    "start": "1018860",
    "end": "1025370"
  },
  {
    "text": "fine because it's not I mean it's zeros because there's no actual nucleotides represented there it's just the baseline score that we're going to try to",
    "start": "1025370",
    "end": "1031310"
  },
  {
    "text": "increase as we find our path through things so the first place we want if we can we want to find a score is for G and",
    "start": "1031310",
    "end": "1037310"
  },
  {
    "text": "G all right so obviously those match and so following this little algorithm here the score at this cell is the maximum of",
    "start": "1037310",
    "end": "1044990"
  },
  {
    "text": "either the the score at the diagonal here is zero so looking up at this",
    "start": "1044990",
    "end": "1051440"
  },
  {
    "text": "diagonal here plus the score function AI BJ or the gap penalty plus the scores at",
    "start": "1051440",
    "end": "1059510"
  },
  {
    "text": "the sides so we're trying to find the best way to get from one of our efferent neighbors we would call these into the",
    "start": "1059510",
    "end": "1066530"
  },
  {
    "text": "cell we're trying to score and score functions these are just examples core functions they don't have to be these but you know three if a is equal to B",
    "start": "1066530",
    "end": "1073280"
  },
  {
    "text": "otherwise minus three for the score function and a gap penalty of minus two the our other knobs we can play with in the",
    "start": "1073280",
    "end": "1078980"
  },
  {
    "text": "algorithm so if we run that algorithm for this first cell here G and G we get",
    "start": "1078980",
    "end": "1084530"
  },
  {
    "text": "a score of 3 we get not just a score of 3 but we get a back pointer to where we",
    "start": "1084530",
    "end": "1089930"
  },
  {
    "text": "came into this from where we got that maximum score from so the algorithm said yeah well you know these these are the",
    "start": "1089930",
    "end": "1095690"
  },
  {
    "text": "same and so you got a score of 3 plus your your incoming zero here that gives you a three and I remember that error",
    "start": "1095690",
    "end": "1101450"
  },
  {
    "text": "for you it's possible to have two arrows maybe even three coming out of any of these",
    "start": "1101450",
    "end": "1107810"
  },
  {
    "text": "scored cells so we have to keep track of those these are the arrows we follow to do the backtracking later on to",
    "start": "1107810",
    "end": "1113240"
  },
  {
    "text": "calculate the actual match we then move through the grids",
    "start": "1113240",
    "end": "1119750"
  },
  {
    "text": "left to right like reading a book and we fill it up with arrows as we go along and ultimately we end up with something",
    "start": "1119750",
    "end": "1125690"
  },
  {
    "text": "that looks like this and our job now is to scan through these these numbers and",
    "start": "1125690",
    "end": "1133070"
  },
  {
    "text": "find the biggest score or the biggest scores so here we get seven that's the biggest number in the script this graph",
    "start": "1133070",
    "end": "1140060"
  },
  {
    "text": "and so it's the it's the the winning score but there could be multiple sevens or multiple whatever's 13s whatever the high score happens to be so now now that",
    "start": "1140060",
    "end": "1148250"
  },
  {
    "text": "I found seven my job is okay found a good match that's a pretty good number for this kind of small sized input I",
    "start": "1148250",
    "end": "1154070"
  },
  {
    "text": "need to go back through the arrows and follow it until I hit a zero and if I do",
    "start": "1154070",
    "end": "1159200"
  },
  {
    "text": "that I end up with something like this and this back track tells me how GAC CG",
    "start": "1159200",
    "end": "1165500"
  },
  {
    "text": "maps to GCC a if I look at that now I see that G matches to G great this a",
    "start": "1165500",
    "end": "1170870"
  },
  {
    "text": "matches to C but we would call that a discontinuity because it's not going on the diagonal it's going on well here",
    "start": "1170870",
    "end": "1175940"
  },
  {
    "text": "it's going horizontally or it could be going vertically and then we continue on the diagonal and we build up our our",
    "start": "1175940",
    "end": "1182450"
  },
  {
    "text": "backtrack and so now we have this this C sorry the C maps to this C this C maps",
    "start": "1182450",
    "end": "1188300"
  },
  {
    "text": "to this C so that's the GCC mapping to G ACC that we intuited earlier or that",
    "start": "1188300",
    "end": "1193400"
  },
  {
    "text": "maybe I tried to convince you to into it earlier but that's what I saw so this in small this this is how the",
    "start": "1193400",
    "end": "1199160"
  },
  {
    "text": "algorithm works and it's just that just bigger for a source code or four big nucleotides so we end up with this",
    "start": "1199160",
    "end": "1205250"
  },
  {
    "text": "alignment which is what we intuitively expect and it's that that intuitiveness which is interesting here because",
    "start": "1205250",
    "end": "1210750"
  },
  {
    "text": "that's how we would match if I was to take an anchor and try to match it to a new bit of source code I would have to",
    "start": "1210750",
    "end": "1216210"
  },
  {
    "text": "be working in an intuitive way there as well it has to match with how I think otherwise it's just computer noise it's",
    "start": "1216210",
    "end": "1221280"
  },
  {
    "text": "it's you know machine learning gone crazy which it kind of has I think so",
    "start": "1221280",
    "end": "1227010"
  },
  {
    "text": "that's kind of neat I think that's that's that's an interesting algorithm and it's interesting do we have applications for something like that in",
    "start": "1227010",
    "end": "1232830"
  },
  {
    "text": "computer science and in programming and so I set out to write that so how do we",
    "start": "1232830",
    "end": "1238200"
  },
  {
    "text": "apply that to updating our anchors it's a pretty straightforward process we take the context remember our context is the",
    "start": "1238200",
    "end": "1245820"
  },
  {
    "text": "before bit the topic and the after bit and we align it with the new source code where does this context match best in",
    "start": "1245820",
    "end": "1251909"
  },
  {
    "text": "the change source code and that gives us some location I then take within that",
    "start": "1251909",
    "end": "1257039"
  },
  {
    "text": "match where does the topic from the context align with the new source code I then use that to calculate the offset",
    "start": "1257039",
    "end": "1263309"
  },
  {
    "text": "and create a brand new anchor and brand new context and a line that's topic with the new source code and I have a new",
    "start": "1263309",
    "end": "1269039"
  },
  {
    "text": "anchor and we are set this is implemented as I mentioned earlier in a",
    "start": "1269039",
    "end": "1274230"
  },
  {
    "text": "tool called Spore it's implemented twice really one and a half times at this point something we've written and and",
    "start": "1274230",
    "end": "1280500"
  },
  {
    "text": "you are welcome to go check it out on github if you want so there's a rust version here rust the Spore which I",
    "start": "1280500",
    "end": "1287220"
  },
  {
    "text": "probably just could call spore from that one it is the official version it's the one that I'm updating and maintaining and working on the initial work was done",
    "start": "1287220",
    "end": "1294630"
  },
  {
    "text": "on a Python version which still kind of work so I think the data structures have drifted apart a bit and the big problem",
    "start": "1294630",
    "end": "1301020"
  },
  {
    "text": "with the Python version of course is that it's slow I love Python I use it all the time it's a very powerful language but it running fast is not it's",
    "start": "1301020",
    "end": "1308460"
  },
  {
    "text": "its Forte running fast is something that spore is really good at and so I realize that the utility of a tool like this was",
    "start": "1308460",
    "end": "1316440"
  },
  {
    "text": "gonna be based on how fast it could run because I'm in an ID I'm typing along I make a change and I save and I want my",
    "start": "1316440",
    "end": "1321600"
  },
  {
    "text": "anchors to maybe automatically update that needs to be as fast as possible so rewriting it in Spore was sort of an",
    "start": "1321600",
    "end": "1328200"
  },
  {
    "text": "obvious answer well if I mean practical rewriting it in C++ it's the obvious answer because I know C++ I don't really",
    "start": "1328200",
    "end": "1333240"
  },
  {
    "text": "know rust but this is a good chance to learn rust so it was a good experience and it's a beautiful language in many ways we'll get to that in a second how",
    "start": "1333240",
    "end": "1340830"
  },
  {
    "text": "does support work again not a lot of rocket science behind it it Korea ates for your project a dot spore",
    "start": "1340830",
    "end": "1346769"
  },
  {
    "text": "directory much like a dot gif directory or something like that just a place for it to put its data inside that directory",
    "start": "1346769",
    "end": "1352919"
  },
  {
    "text": "you have a bunch of yamo files that have UUID file names I needed unique file names because you could you could",
    "start": "1352919",
    "end": "1359159"
  },
  {
    "text": "imagine renaming the files in something in some sense encoding the location inside the file in the file name here",
    "start": "1359159",
    "end": "1364289"
  },
  {
    "text": "but we might have multiple anchors that point to the same thing but have different kinds of metadata coming from",
    "start": "1364289",
    "end": "1370559"
  },
  {
    "text": "different tools entirely so we just use uu IDs because we can generate those for",
    "start": "1370559",
    "end": "1376289"
  },
  {
    "text": "free and forever and inside each of these files you have some tummy Amal and",
    "start": "1376289",
    "end": "1381809"
  },
  {
    "text": "you can see all the bits and pieces here of the data structures we talked about so the topic is right here struct con",
    "start": "1381809",
    "end": "1388799"
  },
  {
    "text": "some after and some offset and so forth and here's the metadata it's just a dictionary mutate false so spoor doesn't",
    "start": "1388799",
    "end": "1396989"
  },
  {
    "text": "care what that metadata is all it promises is that it will maintain it for you and give it to you when when you ask for it it's up for a tool that",
    "start": "1396989",
    "end": "1403589"
  },
  {
    "text": "cosmic-ray to have some integration with Spore to go okay I've I'm about to mutate this place am I allowed to do",
    "start": "1403589",
    "end": "1408899"
  },
  {
    "text": "that give me the metadata for this range that I'm about to look at is there anything I need to know in there so",
    "start": "1408899",
    "end": "1414570"
  },
  {
    "text": "spore is very hands-off in that senses I don't know here's some data you you make your decision based on that and there could be other tools besides cosmic-ray",
    "start": "1414570",
    "end": "1420509"
  },
  {
    "text": "using Spore and the same support directory for their own purposes as well so again no rocket science nothing",
    "start": "1420509",
    "end": "1427679"
  },
  {
    "text": "complicated there it has a command-line interface that is very similar to tools",
    "start": "1427679",
    "end": "1433169"
  },
  {
    "text": "like git it's a I think it has a very good model there so you can do things like initialize your repository you can",
    "start": "1433169",
    "end": "1440700"
  },
  {
    "text": "add anchors to it lists and do details and critically you can do update this is",
    "start": "1440700",
    "end": "1446369"
  },
  {
    "text": "the that's the real magic bit there we say please look for any anchors that are out of date that don't match their",
    "start": "1446369",
    "end": "1451799"
  },
  {
    "text": "occurrence source files and try to align them again and tell me if there's any problems with that okay so this slide",
    "start": "1451799",
    "end": "1460619"
  },
  {
    "text": "says demo I would like to do a demo but this is this is a shorter format than I originally wrote this talk for so what",
    "start": "1460619",
    "end": "1466259"
  },
  {
    "text": "I'm gonna do is go through the rest of the talk which is not hugely long and then come back to the demo in a second I",
    "start": "1466259",
    "end": "1472829"
  },
  {
    "text": "like that picture quite a bit there's quite a bit of work",
    "start": "1472829",
    "end": "1478320"
  },
  {
    "text": "that I would love to do in Spore and if anybody is feeling energetic and has time on their hands and wants to help I",
    "start": "1478320",
    "end": "1484680"
  },
  {
    "text": "would love to have your help excuse me some of the obvious things that spores should do is integrate with an IDE",
    "start": "1484680",
    "end": "1491760"
  },
  {
    "text": "so this is a you know mock-up of integration with Visual Studio code and it'd be nice if you could turn on spore",
    "start": "1491760",
    "end": "1497700"
  },
  {
    "text": "mode and it could highlight bits of code and say yeah you've got a tag and anchor there and you can edit that anchor if",
    "start": "1497700",
    "end": "1504240"
  },
  {
    "text": "you click on this button and then it could just do the work of calling out the spore and doing things that needs to do I don't think this would be terribly",
    "start": "1504240",
    "end": "1510390"
  },
  {
    "text": "difficult I mean I've looked a bit at doing this kind of integration with Visual Studio code and it's not it's not not all that",
    "start": "1510390",
    "end": "1517320"
  },
  {
    "text": "bad they've done a really good job actually of making it very approachable there are other sort of conceptual",
    "start": "1517320",
    "end": "1522780"
  },
  {
    "text": "things we need to think about one is anchoring directories right now we don't",
    "start": "1522780",
    "end": "1528060"
  },
  {
    "text": "really have that ability but it might be nice to be able to say just completely you know I'm gonna put some metadata on",
    "start": "1528060",
    "end": "1533100"
  },
  {
    "text": "this directory and just don't do any mutation there at all for example I don't think this is going to be terribly",
    "start": "1533100",
    "end": "1538890"
  },
  {
    "text": "difficult to accomplish but it's something I haven't given a huge amount of thought to either ultimately I think",
    "start": "1538890",
    "end": "1544260"
  },
  {
    "text": "it's just another kind of anchor that has some boolean this as this as a directory rather than a file it might be that simple a stickier problem it's the",
    "start": "1544260",
    "end": "1554820"
  },
  {
    "text": "question and what do I do with renames right so in some sense this is just",
    "start": "1554820",
    "end": "1560490"
  },
  {
    "text": "comes down to source controlled integration but it's maybe higher level than that even so here I'm saying you know get move food to bar Spore doesn't",
    "start": "1560490",
    "end": "1568950"
  },
  {
    "text": "know that that's happened all it knows is that it has a bunch anchors that used to point to foo and foo appears to have disappeared now that's all I can tell",
    "start": "1568950",
    "end": "1574800"
  },
  {
    "text": "you is that all these anchors are out of date it might be nice to be able to integrate with tools like git to say",
    "start": "1574800",
    "end": "1580110"
  },
  {
    "text": "when you do a rename we know when a rename is detected can we have a hook that goes up to goes to Spore and says",
    "start": "1580110",
    "end": "1586170"
  },
  {
    "text": "hey Spore you know foo has become this update all of your anchors that shouldn't be that doesn't sound too hard",
    "start": "1586170",
    "end": "1592770"
  },
  {
    "text": "to do but I know very little about integrating with git so maybe this is really complicated but this this the",
    "start": "1592770",
    "end": "1597950"
  },
  {
    "text": "okay well then then I'll expect a pull request in the next week Thanks yeah I'm",
    "start": "1597950",
    "end": "1604740"
  },
  {
    "text": "not kidding I know where you work I know your boss he's not gonna care but",
    "start": "1604740",
    "end": "1612090"
  },
  {
    "text": "no I um ignoring the question of integrating with get the question of",
    "start": "1612090",
    "end": "1617550"
  },
  {
    "text": "what to do with renames is a complicated one because maybe you're not using it maybe you're just playing around with some files and so how do we detect this",
    "start": "1617550",
    "end": "1623550"
  },
  {
    "text": "is are there heuristics we can run to determine that a rename has happened for example maybe so and there's a lot of",
    "start": "1623550",
    "end": "1629520"
  },
  {
    "text": "other stuff that could be done currently spore is using a homegrown me grown",
    "start": "1629520",
    "end": "1635430"
  },
  {
    "text": "smith-waterman implementation which is probably sub optimal this is one of the most highly researched algorithms and",
    "start": "1635430",
    "end": "1641520"
  },
  {
    "text": "genetics and its really fast good implementations of it are super fast so I should probably boot mine out",
    "start": "1641520",
    "end": "1647340"
  },
  {
    "text": "the door and use a third party one alternative tokenization so if you go and read that paper that I initially got",
    "start": "1647340",
    "end": "1655770"
  },
  {
    "text": "the ideas from stole the ideas from they tokenize their source code on words on",
    "start": "1655770",
    "end": "1662880"
  },
  {
    "text": "spaces and they they they tokenize whole words and that's how they do they're they're matching my current",
    "start": "1662880",
    "end": "1669660"
  },
  {
    "text": "implementation tokenized is on characters and initially that was because I hadn't thought about the",
    "start": "1669660",
    "end": "1675150"
  },
  {
    "text": "problem very hard but then I then I started thinking that well actually tokenizing on character seems to make a lot of sense because what if I have an",
    "start": "1675150",
    "end": "1680760"
  },
  {
    "text": "identifier you know foo capital B bar and I rename that to foo underscore bar",
    "start": "1680760",
    "end": "1688170"
  },
  {
    "text": "right now I can I can catch those realignments if I if I tokenize on",
    "start": "1688170",
    "end": "1693570"
  },
  {
    "text": "characters but not if I tokenize on words but I need to understand better why they tokenized so in words so maybe",
    "start": "1693570",
    "end": "1698610"
  },
  {
    "text": "there's some research to be done there or maybe that should be just a nod we can twist on spork saying do alternate",
    "start": "1698610",
    "end": "1705480"
  },
  {
    "text": "kinds of tokenization i need to explore different kinds of scoring functions and related to that i need to think about",
    "start": "1705480",
    "end": "1710610"
  },
  {
    "text": "function ensembles this for example of this would be if i got two equally high",
    "start": "1710610",
    "end": "1715770"
  },
  {
    "text": "scores see i got you know seven and seven if we're two paths through the match how do i choose between those two",
    "start": "1715770",
    "end": "1720900"
  },
  {
    "text": "well just add you ask the user do i just pick the first one or do i perhaps pick the one that seems to be closest to the",
    "start": "1720900",
    "end": "1726540"
  },
  {
    "text": "original location or do i have a family of scoring functions that all contribute to a final score this would be the",
    "start": "1726540",
    "end": "1732600"
  },
  {
    "text": "notion of function ensembles it's a really interesting topic and I think that it's going to come it's something",
    "start": "1732600",
    "end": "1738450"
  },
  {
    "text": "we need to think about really hard if we start working with bigger bigger bodies of code storing the anchor history it might be",
    "start": "1738450",
    "end": "1745080"
  },
  {
    "text": "useful in some cases to have a you know essentially a log of all the locations an anchor looked at match quality",
    "start": "1745080",
    "end": "1752669"
  },
  {
    "text": "warnings so you know you've got a match but maybe it's maybe it's poor maybe it's not very good and we want to be able to warn the user that I mean we've",
    "start": "1752669",
    "end": "1758730"
  },
  {
    "text": "done an update we've moved your anchor but we don't entirely trust it maybe you should look at it again this one is",
    "start": "1758730",
    "end": "1766019"
  },
  {
    "text": "really interesting if we could make this work you can make it work and Lisp I think but maybe not in Python semantic",
    "start": "1766019",
    "end": "1771840"
  },
  {
    "text": "anchors can i anchor a function and anchor a class it seems doable I could",
    "start": "1771840",
    "end": "1777600"
  },
  {
    "text": "do it in my head but how do I teach a computer to do that think about a STS",
    "start": "1777600",
    "end": "1783389"
  },
  {
    "text": "you can think about all sorts of interesting approaches but I don't know which ones would work best and this is really an area that if you could get it",
    "start": "1783389",
    "end": "1789990"
  },
  {
    "text": "to work would be super powerful then you're not relying on text matching you're relying on matching patterns in the program and I think that could be",
    "start": "1789990",
    "end": "1796169"
  },
  {
    "text": "much more I can be much more effective much more realistic give you better results but I don't exactly know how to",
    "start": "1796169",
    "end": "1801210"
  },
  {
    "text": "approach it yet again because I haven't had huge amounts of time to think about it so those are the kinds of open questions in Spore in this entire area",
    "start": "1801210",
    "end": "1807240"
  },
  {
    "text": "as far as I know so if you have any insights into that you want to bang your heading it's a hard problem join in it's",
    "start": "1807240",
    "end": "1813299"
  },
  {
    "text": "it's um it's it's fun stuff I think so there's a lot of interest in rust lately",
    "start": "1813299",
    "end": "1819750"
  },
  {
    "text": "and I think for a good reason and so I thought I'd spend a little bit of time talking about why I switched from Python to rust I told you the",
    "start": "1819750",
    "end": "1826110"
  },
  {
    "text": "obvious reason and that reason was speed right Python has a great language and I can think very quickly in Python and get",
    "start": "1826110",
    "end": "1831809"
  },
  {
    "text": "the ideas down and so I was able to use Python to figure this problem out to find the edges and the angles of it but",
    "start": "1831809",
    "end": "1838440"
  },
  {
    "text": "then I realized it just wasn't going to scale properly so this was the big reason that I switched to rust also",
    "start": "1838440",
    "end": "1845580"
  },
  {
    "text": "curiosity rust seems to have a lot of good ideas in it if you haven't looked at it it's worth investigating but to",
    "start": "1845580",
    "end": "1851159"
  },
  {
    "text": "kind of see how they pulled ideas from some from Python some from kind of the haskell world some from c++ systems",
    "start": "1851159",
    "end": "1858059"
  },
  {
    "text": "programming and D in places like that and they pulled them together into I think a really nice synthesis you get a",
    "start": "1858059",
    "end": "1864570"
  },
  {
    "text": "lot of good qualities in rust you can avoid null pointers things like that at",
    "start": "1864570",
    "end": "1869669"
  },
  {
    "text": "systems level that's really really useful to not have programs that crash so it's nice and any program really",
    "start": "1869669",
    "end": "1875660"
  },
  {
    "text": "so I was curious to see what it was like to build a substantial program in rust that was another motivation for it",
    "start": "1875660",
    "end": "1881660"
  },
  {
    "text": "as with any language there's a bit of a learning curve and you're gonna do things the wrong way at first and you're",
    "start": "1881660",
    "end": "1887750"
  },
  {
    "text": "gonna spend a lot of time on stackoverflow trying to figure out how to you know make X talk to Y and work",
    "start": "1887750",
    "end": "1893120"
  },
  {
    "text": "with their type system and they're their lifetime checker they have all these new concepts you have to work with in rust",
    "start": "1893120",
    "end": "1898480"
  },
  {
    "text": "ultimately though if you have experience with you know C++ C sharp Java most",
    "start": "1898480",
    "end": "1904430"
  },
  {
    "text": "mainstream languages you're not going to be too far afield when you get into rust you're gonna have to train a few things",
    "start": "1904430",
    "end": "1910790"
  },
  {
    "text": "into your brain but otherwise it's a very enjoyable experience or I thought so as well overall I found it to be very",
    "start": "1910790",
    "end": "1916100"
  },
  {
    "text": "positive I enjoyed working in rust still do I still feel like I have a lot to learn I want to do some more projects but it's got very nice tooling",
    "start": "1916100",
    "end": "1922370"
  },
  {
    "text": "especially a language that is so new I basically fired up the BS code which is",
    "start": "1922370",
    "end": "1927620"
  },
  {
    "text": "what I use for most things nowadays and a lot of stuff just kind of worked there's no debugger that's a problem but",
    "start": "1927620",
    "end": "1934010"
  },
  {
    "text": "the rest of the stuff the packaging system and the the ability to build and run tests and stuff was all very nice it",
    "start": "1934010",
    "end": "1939620"
  },
  {
    "text": "has a nice quick development cycle especially compared to large C++ programs very fast execution it feels",
    "start": "1939620",
    "end": "1947810"
  },
  {
    "text": "quite maintainable I think this is one of the the goals they had when designing the language was to make it possible to",
    "start": "1947810",
    "end": "1953330"
  },
  {
    "text": "make big changes very rapidly and they don't have great refactoring tools quite",
    "start": "1953330",
    "end": "1958880"
  },
  {
    "text": "yet but their compiler is good at catching of course compilation bugs and the way the language is designed I think",
    "start": "1958880",
    "end": "1964430"
  },
  {
    "text": "lets you model things the way your brain thinks about them in a sense yeah I don't find that I'm fighting I'm not",
    "start": "1964430",
    "end": "1971390"
  },
  {
    "text": "fighting class hierarchies and stuff as much as I would in normal class oriented programming languages it feels very",
    "start": "1971390",
    "end": "1978500"
  },
  {
    "text": "robust I I definitely trust rust code more than I would trusts a C++ code I",
    "start": "1978500",
    "end": "1984800"
  },
  {
    "text": "mean you can write C++ in a way that pointers are effectively hidden but there's always that possibility that you've missed something in rust you can",
    "start": "1984800",
    "end": "1991640"
  },
  {
    "text": "actually never work you can make it so you never have to worry about no reference are no pointer dereferences",
    "start": "1991640",
    "end": "1997940"
  },
  {
    "text": "you can't of course should you foot off a trust as well if you choose to but they make it very explicit when you enter that zone so it's it's a trade-off",
    "start": "1997940",
    "end": "2005170"
  },
  {
    "text": "it's it's well worth learning I think that I learn from the experience of switching over to",
    "start": "2005170",
    "end": "2012060"
  },
  {
    "text": "Russ for something and I think it was the right decision for this project it's not the right decision for every project",
    "start": "2012060",
    "end": "2017310"
  },
  {
    "text": "of course so quick fly through of all that I'm gonna go back to well I don't",
    "start": "2017310",
    "end": "2022950"
  },
  {
    "text": "really have to go back to this slide but I will because I like the picture right demo hopefully the demo does not turn",
    "start": "2022950",
    "end": "2030120"
  },
  {
    "text": "out to be a train wreck right I put a train wreck up because what's the likelihood of two train wrecks being in the same room at the same time very",
    "start": "2030120",
    "end": "2035690"
  },
  {
    "text": "small so I've already got one the demo will not be it's the joke about the guy who takes a bomb on a plane with him",
    "start": "2035690",
    "end": "2041670"
  },
  {
    "text": "right said why do you take why do you bring a bomb on the plane he says you know the odds are of there being two bombs on a plane basically zero genius",
    "start": "2041670",
    "end": "2049790"
  },
  {
    "text": "all right I need to switch my I've got new glasses and I'm still learning to work with them switch my settings real",
    "start": "2049790",
    "end": "2057389"
  },
  {
    "text": "quick here somehow I've lost my pointer",
    "start": "2057390",
    "end": "2062940"
  },
  {
    "text": "here we go mirror my displays and bring up an IDE",
    "start": "2062940",
    "end": "2073159"
  },
  {
    "text": "okay how's that as a font size it's okay okay let me try this glasses off okay",
    "start": "2073160",
    "end": "2081950"
  },
  {
    "text": "this is I mean what are we doing on time how we're doing all right this is just going to be a quick demonstration of what it's like to drive",
    "start": "2081950",
    "end": "2088399"
  },
  {
    "text": "Spore today okay so it's um the basic idea is I've got this directory here",
    "start": "2088400",
    "end": "2094230"
  },
  {
    "text": "called history and it contains snapshots of what a particular source code file anchor dot RS looked like over several",
    "start": "2094230",
    "end": "2100080"
  },
  {
    "text": "commits in in its in its life its life time I'm going to start at one of those versions and we're gonna create an",
    "start": "2100080",
    "end": "2106170"
  },
  {
    "text": "anchor for it and then use spore to continually update that anchor as I put new versions on top of it so we're going",
    "start": "2106170",
    "end": "2111690"
  },
  {
    "text": "to simulate a development cycle several development cycles so I'm gonna copy",
    "start": "2111690",
    "end": "2118940"
  },
  {
    "text": "history zero zero anchor - anchor dot RS so I'm gonna close this history here so",
    "start": "2118940",
    "end": "2126780"
  },
  {
    "text": "now we've got anchor RS looks like this it's a bit of source code about rust source code and we are going to create",
    "start": "2126780",
    "end": "2132780"
  },
  {
    "text": "an anchor on this line here and we're gonna see that that anchor follows that line of code as we make all sorts of",
    "start": "2132780",
    "end": "2139710"
  },
  {
    "text": "changes to what's going on so if you don't know rust they have this",
    "start": "2139710",
    "end": "2145170"
  },
  {
    "text": "packaging system tool thing called cargo that's kind of the entry point of doing everything so I can tell cargo pre please run my program in this case that",
    "start": "2145170",
    "end": "2152700"
  },
  {
    "text": "spore and run in it and it runs pretty quickly and it actually compiled and ran",
    "start": "2152700",
    "end": "2158190"
  },
  {
    "text": "there and it created this new directory called spore dot spore so this is the repository directory so now if I say cargo run",
    "start": "2158190",
    "end": "2166200"
  },
  {
    "text": "status right it's gonna tell me it's gonna say nothing I don't have any any anchors to talk to you about so",
    "start": "2166200",
    "end": "2171300"
  },
  {
    "text": "everything is kind of cool there's nothing for you to think about I'm going to now add an anchor so this is worth",
    "start": "2171300",
    "end": "2179130"
  },
  {
    "text": "breaking down a little bit I think I guess that's the hardest part for you guys to see is at the bottom there isn't",
    "start": "2179130",
    "end": "2184290"
  },
  {
    "text": "it I apologize for that so this is the metadata you you echo in some Yemen and",
    "start": "2184290",
    "end": "2190680"
  },
  {
    "text": "you say add to this file I'm an anchor anchor dot RS create an anchor pointing to that at offset 46 and it's going to",
    "start": "2190680",
    "end": "2198210"
  },
  {
    "text": "be 20 characters long and it's gonna have a 10 character before and after context needs sign if I run that thank",
    "start": "2198210",
    "end": "2205890"
  },
  {
    "text": "God that worked okay good I found a bug in things this morning and so you know kind of bated breath up here this is",
    "start": "2205890",
    "end": "2212460"
  },
  {
    "text": "what it spits out so we can see you know it offset 46 this is the topic here",
    "start": "2212460",
    "end": "2217890"
  },
  {
    "text": "that's that let me make this permanent",
    "start": "2217890",
    "end": "2222990"
  },
  {
    "text": "and open up anchor once more so we can see that so before VEX string right so",
    "start": "2222990",
    "end": "2231180"
  },
  {
    "text": "we've anchored this bit here and we can also see some before and some after so",
    "start": "2231180",
    "end": "2240090"
  },
  {
    "text": "okay that's that's all pretty straightforward so far and still if I ask for the status it will tell me yeah",
    "start": "2240090",
    "end": "2246780"
  },
  {
    "text": "there's nothing - nothing to talk about so I just I guess to orient you a bit more this finished and running that's",
    "start": "2246780",
    "end": "2251820"
  },
  {
    "text": "that's cargo outputting stuff that's not sport outputting stuff okay so let's um let's start doing some",
    "start": "2251820",
    "end": "2259290"
  },
  {
    "text": "development if I now copy version 0 1 of",
    "start": "2259290",
    "end": "2264570"
  },
  {
    "text": "anchor RS over the top you may not yeah we've added some includes here some",
    "start": "2264570",
    "end": "2270180"
  },
  {
    "text": "some using statements so we've can we bumped our data structure down a little bit and if I ask",
    "start": "2270180",
    "end": "2277340"
  },
  {
    "text": "for the status will tell me ah anchor a 7/8 blah-blah-blah-blah-blah is",
    "start": "2278069",
    "end": "2283690"
  },
  {
    "text": "out of date so it's it's taken the context in that file compared it to the source full source file and say I no",
    "start": "2283690",
    "end": "2289480"
  },
  {
    "text": "longer match that sore spots a simple comparison I don't match in fact I can ask it for the diff oh sorry cargo run",
    "start": "2289480",
    "end": "2300520"
  },
  {
    "text": "diff a 7 and it will show me the diff this is not terribly useful but it was easy to implement so I added what we",
    "start": "2300520",
    "end": "2307359"
  },
  {
    "text": "want to do now is have have spore automatically update our anchor force so",
    "start": "2307359",
    "end": "2312630"
  },
  {
    "text": "if we look at this is the thing that's going to change right this is the number that's gonna get updated when I run",
    "start": "2312630",
    "end": "2317890"
  },
  {
    "text": "update so I say cargo run update update with no arguments just updates",
    "start": "2317890",
    "end": "2323890"
  },
  {
    "text": "everything that's out of date and it'll run and we see it updated that to 194 and in fact if I go to this file and I",
    "start": "2323890",
    "end": "2333010"
  },
  {
    "text": "put my cursor there we see that this is",
    "start": "2333010",
    "end": "2338530"
  },
  {
    "text": "offset 194 I have it it's in the bottom toolbar that's offset 194 into my file so spors done something pretty",
    "start": "2338530",
    "end": "2344740"
  },
  {
    "text": "reasonable there and this is not the most complicated change where we just add some header files and things got kind of bumped down that's a pretty easy",
    "start": "2344740",
    "end": "2349869"
  },
  {
    "text": "one so let's go through a few more iterations until we get to something more significant than that so if I copy",
    "start": "2349869",
    "end": "2355990"
  },
  {
    "text": "history 0 to 2 anchor I say cargo run",
    "start": "2355990",
    "end": "2361450"
  },
  {
    "text": "status again it reports that we're out of dates and I'm going to run update one",
    "start": "2361450",
    "end": "2369819"
  },
  {
    "text": "more time I like watching this file is we do this so we can verify the things we're changing I run it again it updated",
    "start": "2369819",
    "end": "2375400"
  },
  {
    "text": "to 201 so something move the anchor once again come down here copy version 3 into",
    "start": "2375400",
    "end": "2383260"
  },
  {
    "text": "place run the update odd updated once again it seems like I removed some stuff",
    "start": "2383260",
    "end": "2389230"
  },
  {
    "text": "from the file so let's look at the status of anchor RS now this is still pretty pretty familiar I'm currently",
    "start": "2389230",
    "end": "2394329"
  },
  {
    "text": "futzing around with you know the modules that I'm using and pulling into maybe messing around with some of these I don't even know what those are called",
    "start": "2394329",
    "end": "2400030"
  },
  {
    "text": "and rust decorators let's call them we're getting very close to a much more",
    "start": "2400030",
    "end": "2406039"
  },
  {
    "text": "interesting update I promise so we'll copy Oh 4 in place and it looks like we added some stuff down here and if I run",
    "start": "2406039",
    "end": "2414430"
  },
  {
    "text": "updates it's happy so we're about to do a pretty substantial change I'm gonna",
    "start": "2414430",
    "end": "2420319"
  },
  {
    "text": "copy version 5 of anchor into place we've had some insight into what our",
    "start": "2420319",
    "end": "2426229"
  },
  {
    "text": "data structure should really be shaped like and now we've made a big change and I make that edit and okay I've changed",
    "start": "2426229",
    "end": "2431989"
  },
  {
    "text": "the shape of this context struct the thing that we've been pointing to I've even changed the data types that I'm",
    "start": "2431989",
    "end": "2437690"
  },
  {
    "text": "pointing to right so the signature in a sense of the struct has changed I come",
    "start": "2437690",
    "end": "2443930"
  },
  {
    "text": "here this is telling me offset 184 and offset 184 is way up in here somewhere",
    "start": "2443930",
    "end": "2451089"
  },
  {
    "text": "way out here so we're we're clearly off so you just for up to the challenge you",
    "start": "2451089",
    "end": "2456349"
  },
  {
    "text": "know the answer because I wouldn't do this demo if I didn't think it was but yes it handles this surprise to my surprise it handled it quite well so I'm",
    "start": "2456349",
    "end": "2463069"
  },
  {
    "text": "gonna run update and indeed it figures out where the anchors supposed to be and",
    "start": "2463069",
    "end": "2468529"
  },
  {
    "text": "in fact we can see that it's even seeing the new bit of code so that is a very",
    "start": "2468529",
    "end": "2475869"
  },
  {
    "text": "quick demo question yeah yet your prop so the",
    "start": "2475869",
    "end": "2489799"
  },
  {
    "text": "question was if we had a larger context say it was five lines of code would it would it have problems with that so I",
    "start": "2489799",
    "end": "2496969"
  },
  {
    "text": "think that yes that would present certain challenges because lots of little changes could happen inside there",
    "start": "2496969",
    "end": "2502430"
  },
  {
    "text": "at the same time you have much more to match on as well so that might bump the score up in the the smith-waterman run",
    "start": "2502430",
    "end": "2509410"
  },
  {
    "text": "the TLDR answer is I'm not entirely sure there's so many moving things in here that it needs to be explored I have",
    "start": "2509410",
    "end": "2516619"
  },
  {
    "text": "played with larger things harder to demo kinds of things and it seems to do the right things in those cases as well so I",
    "start": "2516619",
    "end": "2523099"
  },
  {
    "text": "think the algorithm scales well with a scale is the wrong word it behaves well with larger inputs because you just get",
    "start": "2523099",
    "end": "2528680"
  },
  {
    "text": "bigger scores and you're looking for a maximum score which is part of why that works all right so that's the",
    "start": "2528680",
    "end": "2536330"
  },
  {
    "text": "that's the demo let's go back to the slides here and actually that's really",
    "start": "2536330",
    "end": "2541700"
  },
  {
    "text": "all I've got so thank you I think we",
    "start": "2541700",
    "end": "2546800"
  },
  {
    "text": "have plenty of time if we want to take some questions or anything like that no thank you right have I run it on",
    "start": "2546800",
    "end": "2566990"
  },
  {
    "text": "anything besides source code I probably run it just idly on some open you know",
    "start": "2566990",
    "end": "2573200"
  },
  {
    "text": "natural language text but not not with any goal just to kind of see if it worked in it I've never it's never not",
    "start": "2573200",
    "end": "2580430"
  },
  {
    "text": "behaved on things that I put into it because it's I don't see how it would be sensitive to the differences between",
    "start": "2580430",
    "end": "2586400"
  },
  {
    "text": "source code and natural text although I may be totally off-base about that but",
    "start": "2586400",
    "end": "2592040"
  },
  {
    "text": "certainly is concerned about source code",
    "start": "2592040",
    "end": "2597700"
  },
  {
    "text": "yeah",
    "start": "2599050",
    "end": "2602050"
  },
  {
    "text": "[Music]",
    "start": "2615160",
    "end": "2618230"
  },
  {
    "text": "yeah so the the question / statement was that you could this if this worked with",
    "start": "2629550",
    "end": "2635740"
  },
  {
    "text": "other kinds of text you could in principle use this to annotate more or less anything and yeah that's true you could edit eight I think books you can",
    "start": "2635740",
    "end": "2641230"
  },
  {
    "text": "annotate actual data maybe even if you've got you know CSV files and stuff like that I don't see why it couldn't",
    "start": "2641230",
    "end": "2646750"
  },
  {
    "text": "work on essentially anything yeah okay",
    "start": "2646750",
    "end": "2653020"
  },
  {
    "text": "say that again oh so the the anchors",
    "start": "2653020",
    "end": "2662980"
  },
  {
    "text": "yeah I mean yes I envision the anchors being tracked because if I if I have associated Met so yeah do I want to",
    "start": "2662980",
    "end": "2669070"
  },
  {
    "text": "revision control the the anchors yes I think that was I think that would be a sort of a normal thing to do because if",
    "start": "2669070",
    "end": "2674980"
  },
  {
    "text": "you know developer one has created some important anchors about the thing and developer to you know clones or poles or",
    "start": "2674980",
    "end": "2680620"
  },
  {
    "text": "something like that they would want that data as well but that's an interesting",
    "start": "2680620",
    "end": "2685870"
  },
  {
    "text": "question maybe we need some way of having you know anchors that follow the code around and then also private anchors or something like that that's a",
    "start": "2685870",
    "end": "2692860"
  },
  {
    "text": "that's another open open question I mean so far the only user of this program is me so it you know if it works for me",
    "start": "2692860",
    "end": "2699220"
  },
  {
    "text": "than I kind of feel a it serves my purposes this is so partly this is a call to you know if you're interested in",
    "start": "2699220",
    "end": "2704680"
  },
  {
    "text": "this kind of stuff and you think it's neat and you want to contribute we're wide open for for that kind of stuff",
    "start": "2704680",
    "end": "2710250"
  },
  {
    "text": "okay oh sorry yes the question was is",
    "start": "2710250",
    "end": "2724870"
  },
  {
    "text": "this even limited to just text could we use it on essentially anything that we could tokenize and I think that's true I",
    "start": "2724870",
    "end": "2731650"
  },
  {
    "text": "mean the the core algorithm doesn't care about really the nature of what you're",
    "start": "2731650",
    "end": "2736900"
  },
  {
    "text": "putting into it it needs a score function the two things that are being scored in a gap a penalty function and with that it can give you a score",
    "start": "2736900",
    "end": "2744359"
  },
  {
    "text": "sure yeah so yeah you what he said is that you could create interesting tokenizer over other kinds of data that",
    "start": "2751750",
    "end": "2758000"
  },
  {
    "text": "lets you shape or attach data to or somehow reason about almost the data I",
    "start": "2758000",
    "end": "2763880"
  },
  {
    "text": "mean we might it's almost certainly run into some complexities with using Spore",
    "start": "2763880",
    "end": "2768980"
  },
  {
    "text": "directly for that because spore is I mean you can see it's data structures are kind of very text file oriented but",
    "start": "2768980",
    "end": "2775010"
  },
  {
    "text": "maybe that's just something we need to think about and we need to refactor sport because yeah you could totally see",
    "start": "2775010",
    "end": "2781370"
  },
  {
    "text": "this being applied to I don't a database or something like that if you could somehow you know fit the database into a",
    "start": "2781370",
    "end": "2788390"
  },
  {
    "text": "shape that could be streamed into the the algorithm to do the matching then yeah then you can you've got a tool that can help you realign metadata with",
    "start": "2788390",
    "end": "2795050"
  },
  {
    "text": "arbitrary data and it would be interesting as well okay well thanks",
    "start": "2795050",
    "end": "2803930"
  },
  {
    "text": "again for your time I'll be around a little bit today maybe not tomorrow but if you have questions or anything you can email me or tweet but or if you want",
    "start": "2803930",
    "end": "2809930"
  },
  {
    "text": "to work on the project I'd love to have your help thanks thanks again [Applause]",
    "start": "2809930",
    "end": "2817539"
  }
]