[
  {
    "text": "right hello everybody just a heads up um i don't think i can hear anybody if",
    "start": "6000",
    "end": "13440"
  },
  {
    "text": "they talk um i have no idea why i never used this laptop um i thought i'd be safe jumping on the",
    "start": "13440",
    "end": "20400"
  },
  {
    "text": "macbook to give a talk rather than trying to get webex to work on my development",
    "start": "20400",
    "end": "26000"
  },
  {
    "text": "linux setup on me the mac has also failed me but hopefully",
    "start": "26000",
    "end": "32320"
  },
  {
    "text": "you can all hear me at least that'd be quite nice",
    "start": "32320",
    "end": "37440"
  },
  {
    "text": "i have joined the chat on my phone so if you have thanks for the thumbs up",
    "start": "37440",
    "end": "43440"
  },
  {
    "text": "there i've joined the chat on my phone so if you want to ask any questions",
    "start": "43440",
    "end": "48800"
  },
  {
    "text": "as we go through the talk i will just answer them as they come up i have slack over there on the other",
    "start": "48800",
    "end": "54640"
  },
  {
    "text": "screen so if you ask questions over there i will also see them so if you see me turning",
    "start": "54640",
    "end": "59760"
  },
  {
    "text": "to left that's why um this is a 101 talk we're not going to",
    "start": "59760",
    "end": "65119"
  },
  {
    "text": "go into depth on anything this is for people who have maybe heard of open telemetry or haven't heard of it",
    "start": "65119",
    "end": "71439"
  },
  {
    "text": "yet and are interested in getting started with it and would just like to have a nice",
    "start": "71439",
    "end": "76560"
  },
  {
    "text": "overview of how everything fits together so it's in everyone's benefit if you do ask questions as we go along to make",
    "start": "76560",
    "end": "83439"
  },
  {
    "text": "sure that i do cover things properly a message over here give me a second",
    "start": "83439",
    "end": "90960"
  },
  {
    "text": "i actually hear people speak might be jones's problem not mine that's nice so yes open telemetry 101",
    "start": "94079",
    "end": "101840"
  },
  {
    "text": "so hopefully i can ah there we go that's me hazard um right so i am a software",
    "start": "101840",
    "end": "109520"
  },
  {
    "text": "developer no big surprise i do come from the net world originally i went to javascript because my wrists",
    "start": "109520",
    "end": "116000"
  },
  {
    "text": "got sore using the mouse and visual studio honest to god that's the reason um eventually started doing erlang and",
    "start": "116000",
    "end": "122240"
  },
  {
    "text": "the last eight years have been spent doing that remotely with my lovely team and more recently indeed",
    "start": "122240",
    "end": "128239"
  },
  {
    "text": "writing pure script which is quite cool if you follow my twitter you'll never see me talk about any of those subjects",
    "start": "128239",
    "end": "134000"
  },
  {
    "text": "unless i'm trolling the donaire community which i do from time to time um you'll most likely see me posting",
    "start": "134000",
    "end": "140000"
  },
  {
    "text": "pictures of either my dog coffee or sourdough my dog is downstairs in her bed so she doesn't interrupt us during this",
    "start": "140000",
    "end": "146800"
  },
  {
    "text": "talk i apologize for that i know some people would like to see her",
    "start": "146800",
    "end": "152480"
  },
  {
    "text": "so we're coming from about six months ago we opportune times decided to step back",
    "start": "154720",
    "end": "161760"
  },
  {
    "text": "and think about some of the things we do on our platform and whether things work",
    "start": "161760",
    "end": "167280"
  },
  {
    "text": "or not um which is a general pause on new development and actually step back and sharpen some",
    "start": "167280",
    "end": "173599"
  },
  {
    "text": "stores and see what works and see what doesn't work and try and fix some of these things so one of the things we came up with is",
    "start": "173599",
    "end": "180000"
  },
  {
    "text": "you know actually we're doing pretty well we do actually build software quite quickly it works really well customers don't generally complain all",
    "start": "180000",
    "end": "186800"
  },
  {
    "text": "that much we've got quite a few of them and that's nice um so that's",
    "start": "186800",
    "end": "192640"
  },
  {
    "text": "planning back there that's good for us runtime issues to cost us money um we're",
    "start": "192640",
    "end": "198800"
  },
  {
    "text": "only a very small team there are i think six developers currently we've got way more than that",
    "start": "198800",
    "end": "204080"
  },
  {
    "text": "in terms of clients everything is bespoke per client so we are managing",
    "start": "204080",
    "end": "209120"
  },
  {
    "text": "a product or three per client so if there are issues which we need to",
    "start": "209120",
    "end": "214640"
  },
  {
    "text": "diagnose that takes us away from active software development and we need to avoid that as much as we possibly can",
    "start": "214640",
    "end": "221680"
  },
  {
    "text": "we do have some really good tools diagnosing our issues we've got extensive logging we've always",
    "start": "221680",
    "end": "227760"
  },
  {
    "text": "done everything by a printf it works very well because we're in erlang we can attach to",
    "start": "227760",
    "end": "233280"
  },
  {
    "text": "remote nodes and execute arbitrary code on them whenever we want to generally do quite a lot of introspection that way you know um",
    "start": "233280",
    "end": "240879"
  },
  {
    "text": "we work in the media and code and delivery area and we can attach to running",
    "start": "240879",
    "end": "246720"
  },
  {
    "text": "encoders and have a look at various cues within a workflow see whether",
    "start": "246720",
    "end": "251840"
  },
  {
    "text": "a hardware acceleration accelerations on the fits and that kind of thing um and that's quite handy",
    "start": "251840",
    "end": "260400"
  },
  {
    "text": "there are also plenty of inspection tools built into erlang itself um yeah cool um",
    "start": "260400",
    "end": "269120"
  },
  {
    "text": "such as observer um yeah the entire thing about erlang is in theory you're building software",
    "start": "269120",
    "end": "275600"
  },
  {
    "text": "that you're never going to restart um because that would involve downtime",
    "start": "275600",
    "end": "280880"
  },
  {
    "text": "telecoms and all that so obviously the ability to look at things at runtime and patch",
    "start": "280880",
    "end": "286400"
  },
  {
    "text": "things at runtime without actually stopping any fingers baked right into that",
    "start": "286400",
    "end": "291600"
  },
  {
    "text": "and we of course our own diagramming tools and metrics and such and you see here that's one of our",
    "start": "291600",
    "end": "298800"
  },
  {
    "text": "workflows for our encoder and that works quite nicely as well um",
    "start": "298800",
    "end": "304400"
  },
  {
    "text": "that's nice it's all hand rolled but the thing is those are tools for us",
    "start": "304400",
    "end": "310160"
  },
  {
    "text": "and we found that if we give customers the ability to see what is going on our customers can often self-diagnose",
    "start": "310160",
    "end": "316960"
  },
  {
    "text": "issues and fix themselves they're not stupid they hire engineers in our industry that is",
    "start": "316960",
    "end": "322840"
  },
  {
    "text": "and generally if an encoder goes pop if they have the information at hand",
    "start": "322840",
    "end": "329680"
  },
  {
    "text": "they can probably work out why and what actually happened there so we're often asked to integrate with",
    "start": "329680",
    "end": "335840"
  },
  {
    "text": "their lovely enterprise logging and monitoring infrastructure which is all on premise and that's fine and great",
    "start": "335840",
    "end": "341120"
  },
  {
    "text": "one of the ways we can do that is uh snmp i'm sure at this point if i was in a",
    "start": "341120",
    "end": "347440"
  },
  {
    "text": "room with you all i'd hear some groans um yes it's not a terribly pleasant thing to",
    "start": "347440",
    "end": "352880"
  },
  {
    "text": "use so we'll move on from that we can do any old ad hoc influx db grafana or whatever and do pretty",
    "start": "352880",
    "end": "359520"
  },
  {
    "text": "dashboards like this in the past we've generally found that when we go to the effort of building",
    "start": "359520",
    "end": "365360"
  },
  {
    "text": "these dashboards they're used during the sales meetings and they're never looked at",
    "start": "365360",
    "end": "370560"
  },
  {
    "text": "ever again so they're handy for that i guess but so forth and a common request is to",
    "start": "370560",
    "end": "377680"
  },
  {
    "text": "export our logs well i've got news for them our logs while they are quite useful to",
    "start": "377680",
    "end": "382960"
  },
  {
    "text": "us aren't quite useful to them warnings like this isn't going to happen appearing in",
    "start": "382960",
    "end": "389440"
  },
  {
    "text": "our logs doesn't actually help our customers solve issues so we need to step back and think here a",
    "start": "389440",
    "end": "394800"
  },
  {
    "text": "little bit oh i've got my system track four here",
    "start": "394800",
    "end": "399120"
  },
  {
    "text": "yes um so yes this isn't gonna this is supposed to happen it's not useful to our customers so we can't just go hey",
    "start": "400880",
    "end": "407199"
  },
  {
    "text": "have our logs stick them unlockstash and do what you will with them because suddenly our logs",
    "start": "407199",
    "end": "412400"
  },
  {
    "text": "become effectively an api that we have to maintain and our logs are for us thank you very much",
    "start": "412400",
    "end": "419919"
  },
  {
    "text": "so i think the standards are actually quite useful um we'll ignore snmp and that's led us to go and look at open",
    "start": "419919",
    "end": "426960"
  },
  {
    "text": "telemetry so what happened here was i was tasked with going to look at",
    "start": "426960",
    "end": "432160"
  },
  {
    "text": "what is our observability story going to be over the next year or two and i did some googling as one does when",
    "start": "432160",
    "end": "438400"
  },
  {
    "text": "looking at new things and i came across the observability working group for erlang and the",
    "start": "438400",
    "end": "444240"
  },
  {
    "text": "observability working group for erlang linked to open telemetry and i found out there's a whole part of people getting very",
    "start": "444240",
    "end": "450000"
  },
  {
    "text": "excited about open telemetry most of them are elixir developers rather than erlang",
    "start": "450000",
    "end": "456080"
  },
  {
    "text": "developers because erlang developers are stuck in the 70s i imagine and that's that includes us",
    "start": "456080",
    "end": "461440"
  },
  {
    "text": "too obviously but the elixir developers are well on this they are they love open telemetry they've had",
    "start": "461440",
    "end": "466960"
  },
  {
    "text": "some things for doing this for a long time they've had open metrics and open tracing and open telemetry is actually",
    "start": "466960",
    "end": "472160"
  },
  {
    "text": "just a um step forward from that shall we say i actually wrote on the",
    "start": "472160",
    "end": "479520"
  },
  {
    "text": "website earlier to see what they said open telemetry was because while i i'm using it",
    "start": "479520",
    "end": "484879"
  },
  {
    "text": "every day at work now i couldn't actually get a definition and apparently it's a collection of tools apis and sdks",
    "start": "484879",
    "end": "490080"
  },
  {
    "text": "which are used to instrument generate collect and export temperature data very exciting um that kind of makes",
    "start": "490080",
    "end": "495520"
  },
  {
    "text": "sense you want to analyze our performance and behavior good stuff the cool thing about open telemetry is",
    "start": "495520",
    "end": "503280"
  },
  {
    "text": "that the specification itself is open source it's up there in github and you can make pull requests to it the",
    "start": "503280",
    "end": "510400"
  },
  {
    "text": "specification and documentation effectively live side by side or the same thing and for more or less it's all",
    "start": "510400",
    "end": "518479"
  },
  {
    "text": "vendor neutral and that's really nice the problem with vendor driven initiatives is very often you end up with a standard",
    "start": "518479",
    "end": "524959"
  },
  {
    "text": "that benefits a single vendor and actually trying to build extensions off that actually work anywhere else",
    "start": "524959",
    "end": "530000"
  },
  {
    "text": "doesn't really work terribly well but the vendors are involved if you go to the meetings and there are a lot of",
    "start": "530000",
    "end": "536720"
  },
  {
    "text": "meetings let me tell you um there's a google calendar on online i think there's a six or seven meetings every single day",
    "start": "536720",
    "end": "543040"
  },
  {
    "text": "of the week um people get involved and talk about what needs to be done and people",
    "start": "543040",
    "end": "548640"
  },
  {
    "text": "from various vendors turn up those meetings say well actually that won't work for us this thing needs to work this way and so and so forth",
    "start": "548640",
    "end": "555680"
  },
  {
    "text": "that's quite nice it's a nice way of working obviously it's built as an open standard and we all know the",
    "start": "555680",
    "end": "560800"
  },
  {
    "text": "problem standards is once we actually have a standard someone will end up building another stand on top of that and so forth and that's already",
    "start": "560800",
    "end": "566800"
  },
  {
    "text": "happening with this thing you know people diverge slightly and there are some competing things happening already",
    "start": "566800",
    "end": "573040"
  },
  {
    "text": "whatever um don't mind too much the benefits of using an open standard outweigh",
    "start": "573040",
    "end": "579200"
  },
  {
    "text": "pontificating between trying to pick different ones um so there's the",
    "start": "579200",
    "end": "584640"
  },
  {
    "text": "url for the specification i'm getting open effectively the specification lists what",
    "start": "584640",
    "end": "589680"
  },
  {
    "text": "modules you should expect to see in any implementation what functions should the invitation and what the code layout should be in any of",
    "start": "589680",
    "end": "596480"
  },
  {
    "text": "those indentations and of course things like version strategies and such like that and that's quite interesting because",
    "start": "596480",
    "end": "602160"
  },
  {
    "text": "what we're saying here is no matter what language you work in day-to-day at work um for your products",
    "start": "602160",
    "end": "609839"
  },
  {
    "text": "the use of open telemetry should largely look the same across those languages and",
    "start": "609839",
    "end": "616000"
  },
  {
    "text": "platforms because it has been written as thus now obviously there's a little bit of",
    "start": "616000",
    "end": "621680"
  },
  {
    "text": "difference in interpretation if you're in a functional language versus an oop language or whatever but by and",
    "start": "621680",
    "end": "629200"
  },
  {
    "text": "large this tends to work quite well because people from both of those camps attend those meetings and have it out on a zoom so you can find",
    "start": "629200",
    "end": "637760"
  },
  {
    "text": "all the indentations the languages and get up as well over here so there's the go on the erlang one the python one so and so forth",
    "start": "637760",
    "end": "643920"
  },
  {
    "text": "whatever i'll dive right into look at tracing i think that's the most simple thing",
    "start": "643920",
    "end": "652560"
  },
  {
    "text": "so um first off let's just say what is tracing well originally",
    "start": "652640",
    "end": "658240"
  },
  {
    "text": "if i said tracing i would think of graphs like this this is a flame graph from d trace and",
    "start": "658240",
    "end": "664800"
  },
  {
    "text": "typically these things use a low level to understand what software is doing and where it's spending its time and so on and so forth",
    "start": "664800",
    "end": "672240"
  },
  {
    "text": "and that's quite useful but the problem is things have changed and now our architecture diagrams look like this",
    "start": "672240",
    "end": "678480"
  },
  {
    "text": "for some reason um i don't know when this happened i have i just closed my eyes and opened them",
    "start": "678480",
    "end": "684480"
  },
  {
    "text": "one day and people were doing micro services and this is what things now look like this is that's",
    "start": "684480",
    "end": "691279"
  },
  {
    "text": "monzo's architecture apparently um that's cool for them so chasing is",
    "start": "691279",
    "end": "696959"
  },
  {
    "text": "actually more now about finding out what happens and how we got there and where even here",
    "start": "696959",
    "end": "702000"
  },
  {
    "text": "is you know if something goes wrong in this architecture if a microservice goes pop or the size start erroring out it's",
    "start": "702000",
    "end": "709200"
  },
  {
    "text": "all very well and good looking at its logs but unless you understand the wider context of how that",
    "start": "709200",
    "end": "714320"
  },
  {
    "text": "fault occurred you're not really going to be able to make any meaningful attempt at fixing it um and that's that's quite important",
    "start": "714320",
    "end": "722160"
  },
  {
    "text": "so take our example originally for warning this is not supposed to happen i've removed the curse word because i'm",
    "start": "722160",
    "end": "728160"
  },
  {
    "text": "professional what more information could we expose against this log message",
    "start": "728160",
    "end": "734480"
  },
  {
    "text": "well we could quite easily attach a call stack that's quite normal if if things crash having a call stacks",
    "start": "734480",
    "end": "740959"
  },
  {
    "text": "normally quite useful things i have we could determine what actually happened to",
    "start": "740959",
    "end": "746240"
  },
  {
    "text": "cause this call stack to be invoked in the first place a user clicked a button well lots of useful things no isn't it",
    "start": "746240",
    "end": "752399"
  },
  {
    "text": "we could attach information such as database for access to these queries you know this is",
    "start": "752399",
    "end": "758000"
  },
  {
    "text": "the database there's access this is where it's accessed we can attach the information such as i",
    "start": "758000",
    "end": "763839"
  },
  {
    "text": "don't know um where the user was connecting from which server do they connect to which host",
    "start": "763839",
    "end": "768959"
  },
  {
    "text": "name they use to connect to that server and indeed at the infrastructure level which servers are being used underneath",
    "start": "768959",
    "end": "774720"
  },
  {
    "text": "the underneath the surface this is all useful information to know when trying to",
    "start": "774720",
    "end": "780079"
  },
  {
    "text": "diagnose issues within a system you could now with structured logging you could do",
    "start": "780079",
    "end": "785600"
  },
  {
    "text": "this you could quite happily pile a whole heap of stuff into",
    "start": "785600",
    "end": "791360"
  },
  {
    "text": "a structured log and have all of this as a pile of text in a",
    "start": "791360",
    "end": "797279"
  },
  {
    "text": "file and that would certainly work um but it's actually slightly more convenient",
    "start": "797279",
    "end": "802399"
  },
  {
    "text": "to think in terms of more high grain concepts",
    "start": "802399",
    "end": "807519"
  },
  {
    "text": "and",
    "start": "807519",
    "end": "809680"
  },
  {
    "text": "open the dmtr tracing comes into things so you have if the open telemetry",
    "start": "813360",
    "end": "820480"
  },
  {
    "text": "tracing api is generally per application you will configure a tracer and that is used to get",
    "start": "820480",
    "end": "827519"
  },
  {
    "text": "instances of any object you might use within the tracing api to write any things like traces",
    "start": "827519",
    "end": "833440"
  },
  {
    "text": "the default implementation is a no op and we'll come back to this but essentially the idea is when you are",
    "start": "833440",
    "end": "841199"
  },
  {
    "text": "writing code to trace your libraries that you are writing and the software you are writing you",
    "start": "841199",
    "end": "848880"
  },
  {
    "text": "don't actually want to know anything about the implementation behind that you just want to write",
    "start": "848880",
    "end": "855360"
  },
  {
    "text": "traces and attach information and do so in a common way that everyone else will understand",
    "start": "855360",
    "end": "862000"
  },
  {
    "text": "and i write my library to i don't know",
    "start": "862000",
    "end": "867279"
  },
  {
    "text": "shuffle bites around on my disk or stream some video somewhere i want to be able to trace stuff out i",
    "start": "867279",
    "end": "873760"
  },
  {
    "text": "want to write call all the api methods to do that but i don't actually want them to do anything by default because i don't want",
    "start": "873760",
    "end": "879839"
  },
  {
    "text": "to know how the application's configured and i'm sure all for many of that in dot net you've got your eye logger or i log or",
    "start": "879839",
    "end": "886639"
  },
  {
    "text": "whatever you the implementation is generally something you want to leave to the um to the application using your code",
    "start": "886639",
    "end": "896000"
  },
  {
    "text": "so at the very beginning of the application you'll generally set things up and say well okay i want to use this tracing provider",
    "start": "896000",
    "end": "901920"
  },
  {
    "text": "for my application and all the libraries will get involved and do that now underneath the api generally",
    "start": "901920",
    "end": "908959"
  },
  {
    "text": "we have three concepts we need to know about the first one is spans i think of spans as being",
    "start": "908959",
    "end": "916079"
  },
  {
    "text": "analogous to call stacks generally how did i get here is a useful thing to",
    "start": "916079",
    "end": "922880"
  },
  {
    "text": "know this is a picture i stole from the livestack blog because very useful place to learn about open telemetry if you're",
    "start": "922880",
    "end": "928639"
  },
  {
    "text": "so inclined later on in order to do any operation with an open telemetry you'll want to create a",
    "start": "928639",
    "end": "935360"
  },
  {
    "text": "span and a span is just a bag of context saying where i currently am",
    "start": "935360",
    "end": "941120"
  },
  {
    "text": "and spans can nest so generally what you'll do is you'll create a top level span for a user request",
    "start": "941120",
    "end": "946800"
  },
  {
    "text": "and when actions happen underneath that request you'll create further spans and they'll belong to the pair and spam and",
    "start": "946800",
    "end": "951839"
  },
  {
    "text": "it'll go all the way down and that's very handy attached to spans are attributes",
    "start": "951839",
    "end": "959759"
  },
  {
    "text": "attributes are very useful too",
    "start": "959759",
    "end": "963279"
  },
  {
    "text": "attributes are a list of key value pairs where the value can actually be any one",
    "start": "964959",
    "end": "970800"
  },
  {
    "text": "of these things a string boolean float an energy or indeed a list of further values",
    "start": "970800",
    "end": "975839"
  },
  {
    "text": "and this enables you to do things like say for the context of this whole span this",
    "start": "975839",
    "end": "981199"
  },
  {
    "text": "is the user that was doing this operation this is the host that the user came in",
    "start": "981199",
    "end": "986480"
  },
  {
    "text": "on this is the ip address of this server thank you very much here is the context for this spam and when you",
    "start": "986480",
    "end": "993600"
  },
  {
    "text": "go and do operations with that span such as writing events which these things over",
    "start": "993600",
    "end": "1000320"
  },
  {
    "text": "here that context will be effectively attached to those events",
    "start": "1000320",
    "end": "1005440"
  },
  {
    "text": "obviously it's not to normalize at this point it needs to be put somewhere else before that happens but the idea is you will be creating",
    "start": "1005440",
    "end": "1013120"
  },
  {
    "text": "spans attaching events to those spans and there will be attributes attached to the span",
    "start": "1013120",
    "end": "1018320"
  },
  {
    "text": "and you can also says just here more attributes can be added to events you can indeed do that so on a",
    "start": "1018320",
    "end": "1024558"
  },
  {
    "text": "per event basis you can say well yes this is this event and yes i inherit all my spams contacts but here's",
    "start": "1024559",
    "end": "1031438"
  },
  {
    "text": "some further context let you know why this thing actually happened thank you very much",
    "start": "1031439",
    "end": "1036640"
  },
  {
    "text": "the only thing event has is a name and a timestamp really and that name's actually quite a",
    "start": "1036640",
    "end": "1043280"
  },
  {
    "text": "useful thing because you might want to query on that so it's generally not just a big long arbitrary piece of text it's",
    "start": "1043280",
    "end": "1048720"
  },
  {
    "text": "normally something quite short and pithy um something i'm pretty good at so um",
    "start": "1048720",
    "end": "1054000"
  },
  {
    "text": "there we go um a span has multiple attributes but a span has multiple events attached to it and",
    "start": "1054000",
    "end": "1060160"
  },
  {
    "text": "those events will have a collection of attributes associated with",
    "start": "1060160",
    "end": "1065840"
  },
  {
    "text": "wonderful now that's all said and done isn't something",
    "start": "1065840",
    "end": "1072320"
  },
  {
    "text": "that you i couldn't just develop ourselves something special about that",
    "start": "1072320",
    "end": "1077600"
  },
  {
    "text": "i mean we've been building netted context out of ioc containers for years",
    "start": "1077600",
    "end": "1083200"
  },
  {
    "text": "um but there are some useful things you can do if you adopt an open standard for how",
    "start": "1083200",
    "end": "1091280"
  },
  {
    "text": "you're going to do your tracing and library implementers also do the same",
    "start": "1091280",
    "end": "1097360"
  },
  {
    "text": "because what happens in a distributed environment when you have an action carried out by a",
    "start": "1097360",
    "end": "1103600"
  },
  {
    "text": "user hitting a front-end service here we have user pressed a button the",
    "start": "1103600",
    "end": "1109039"
  },
  {
    "text": "action starts there thank you very much we know where the user came in on we know browsers they use",
    "start": "1109039",
    "end": "1114480"
  },
  {
    "text": "we hit the service layer and decide to execute command and we start a spam for that so we can do this thing",
    "start": "1114480",
    "end": "1120559"
  },
  {
    "text": "and then we call the transaction service which is some reason is a service someone's written do transactions for us i don't",
    "start": "1120559",
    "end": "1127120"
  },
  {
    "text": "know why they've done that but microservices are cool so that's what they've done",
    "start": "1127120",
    "end": "1132240"
  },
  {
    "text": "and that spans god's own context for example um i'm sitting currently running on this",
    "start": "1132240",
    "end": "1137520"
  },
  {
    "text": "service and this is my and this is the source ip by which this request came in on",
    "start": "1137520",
    "end": "1144400"
  },
  {
    "text": "that's wonderful except i don't know why that transaction got started i don't know what the context",
    "start": "1144400",
    "end": "1150000"
  },
  {
    "text": "is associated with that and what you can do the service layer is send baggage over",
    "start": "1150000",
    "end": "1156160"
  },
  {
    "text": "the wire and it actually is called baggage and i actually quite like that name i have to admit",
    "start": "1156160",
    "end": "1162960"
  },
  {
    "text": "you can baggage over to whichever open cemetery invitation you are using and send that along so that can be",
    "start": "1162960",
    "end": "1169840"
  },
  {
    "text": "bundled along with the spans and events being written on that microservice and the idea",
    "start": "1169840",
    "end": "1178240"
  },
  {
    "text": "is it's only an idea because i haven't seen too many people implement this yet",
    "start": "1178240",
    "end": "1184400"
  },
  {
    "text": "um it's that you can bake this into the communication infrastructure that you use to",
    "start": "1184400",
    "end": "1190559"
  },
  {
    "text": "get your message around in the first place for example in erlang we tend to use cowboy",
    "start": "1190559",
    "end": "1197200"
  },
  {
    "text": "as a web server that's what it's called called cowboy ask me later why it's called cowboy um",
    "start": "1197200",
    "end": "1203520"
  },
  {
    "text": "and we use something called spud gun to send http requests to those servers it's not actually",
    "start": "1203520",
    "end": "1210240"
  },
  {
    "text": "difficult to write some middleware for cowboy that understands exactly what baggage looks like and then",
    "start": "1210240",
    "end": "1216559"
  },
  {
    "text": "automatically create a span and a context based on that when starting a request and handle this at",
    "start": "1216559",
    "end": "1222480"
  },
  {
    "text": "the infrastructure level so my code doesn't actually have to worry about where context is coming from",
    "start": "1222480",
    "end": "1230080"
  },
  {
    "text": "that's super handy and again you know the patterns for that are baked right",
    "start": "1230080",
    "end": "1235600"
  },
  {
    "text": "into the standard itself and i find that very interesting so the implementation looks",
    "start": "1235600",
    "end": "1242000"
  },
  {
    "text": "a bit like this you'll request an instance of the current tracer you'll go and create some spans using that tracer",
    "start": "1242000",
    "end": "1248080"
  },
  {
    "text": "you'll attach events to the spans and you'll end those spans and that will cause them to effectively be exported",
    "start": "1248080",
    "end": "1255120"
  },
  {
    "text": "very handy profit indeed now obviously service locators are very",
    "start": "1255120",
    "end": "1261039"
  },
  {
    "text": "1990 and i've already seen some arguments about this mostly from the enterprise",
    "start": "1261039",
    "end": "1266080"
  },
  {
    "text": "crowd because they actually care about these things um but effectively this is what it ends",
    "start": "1266080",
    "end": "1272880"
  },
  {
    "text": "up looking like you are in some code you need the tracer you call out to a fact",
    "start": "1272880",
    "end": "1278320"
  },
  {
    "text": "to a service case to go and get the factory and that's all fine and great the reason it's done that way is because",
    "start": "1278320",
    "end": "1283679"
  },
  {
    "text": "it's very implementation agnostic if you want to go and do that with um dependency injection either through",
    "start": "1283679",
    "end": "1290720"
  },
  {
    "text": "an ic container or otherwise you're free to go and do that but the actual spec itself just says look i need to go and get",
    "start": "1290720",
    "end": "1296640"
  },
  {
    "text": "trace from somewhere and this is a way of doing that what this actually means is when you're",
    "start": "1296640",
    "end": "1304000"
  },
  {
    "text": "sat inside library code you don't need to hook that library code up to anything in order for it to then go and get an",
    "start": "1304000",
    "end": "1310720"
  },
  {
    "text": "implementation of the tracer so as i mentioned earlier when i'm sat in a library",
    "start": "1310720",
    "end": "1316320"
  },
  {
    "text": "writing code and i'm not writing this code for an application specifically",
    "start": "1316320",
    "end": "1321360"
  },
  {
    "text": "i just want to go and get the tracer and do operations with it and by default those are all going to be",
    "start": "1321360",
    "end": "1327280"
  },
  {
    "text": "a no-op i don't want to have to bake in ioc container support to my library i don't",
    "start": "1327280",
    "end": "1332880"
  },
  {
    "text": "want to have to be to build my api around being past this thing no i just want to go and get it thank",
    "start": "1332880",
    "end": "1338880"
  },
  {
    "text": "you very much and that's why it's been done this way and the idea is when the application starts up it instantiates the",
    "start": "1338880",
    "end": "1345360"
  },
  {
    "text": "implementation and that library code will then be able to go and get an actual trace and do things with it and indeed you can then go and pin",
    "start": "1345360",
    "end": "1352000"
  },
  {
    "text": "things off if you don't want traceable from certain modules and such and that's all very controllable at the top level it's",
    "start": "1352000",
    "end": "1359120"
  },
  {
    "text": "incredibly handy so actually happens in most code is you'll normally go and get an instance",
    "start": "1359120",
    "end": "1364159"
  },
  {
    "text": "of the current tracer you'll get the current span and you'll write events to it generally you'll not actually be creating spans you'll",
    "start": "1364159",
    "end": "1370080"
  },
  {
    "text": "generally not be doing any configuration you'll just go and get the current tracer and write some events thank you very much",
    "start": "1370080",
    "end": "1375919"
  },
  {
    "text": "in language support macros generally this is all put into a single macro anyway which is",
    "start": "1375919",
    "end": "1381679"
  },
  {
    "text": "write event and that macro will go and do the one two for you um i'm sure in c-sharp you think of",
    "start": "1381679",
    "end": "1388799"
  },
  {
    "text": "many creative ways wrapping this thing up generally things like traces and spans are bound to the",
    "start": "1388799",
    "end": "1394799"
  },
  {
    "text": "current thread whose operation you're in um i actually left c-sharp",
    "start": "1394799",
    "end": "1400640"
  },
  {
    "text": "before you guys got the async stuff so i've got no idea how that works in your world but",
    "start": "1400640",
    "end": "1406159"
  },
  {
    "text": "hey-ho i'm sure someone will find a way so most code will only do those things",
    "start": "1406159",
    "end": "1412640"
  },
  {
    "text": "an application set up you'll normally configure open telemetry with tracing providers some exporters saying where the data is",
    "start": "1412640",
    "end": "1418880"
  },
  {
    "text": "going to go and then you'll go and create spans before invoking code at service boundaries",
    "start": "1418880",
    "end": "1424559"
  },
  {
    "text": "somehow and indeed if you are leaning on an ioc container to do",
    "start": "1424559",
    "end": "1430960"
  },
  {
    "text": "things like your unit of work implementation or such um it's not too hard to envisage",
    "start": "1430960",
    "end": "1437279"
  },
  {
    "text": "actually hooking it up so that when you call functions on things like i don't know asp.net mvc",
    "start": "1437279",
    "end": "1443520"
  },
  {
    "text": "web handlers that you're given the tracer or the current span that you're operating within",
    "start": "1443520",
    "end": "1448880"
  },
  {
    "text": "as part of the function call well imagine that's exactly what you'd be doing",
    "start": "1448880",
    "end": "1454080"
  },
  {
    "text": "don't know for sure though so what's that actually look like in practice well in python you get as you get as you",
    "start": "1454080",
    "end": "1460720"
  },
  {
    "text": "get your tracer starting span and writing an event to that spam in javascript",
    "start": "1460720",
    "end": "1468559"
  },
  {
    "text": "getting a tracer starting a span and writing an event to that span in erlang",
    "start": "1468559",
    "end": "1475360"
  },
  {
    "text": "beautiful erlang look there's commas and full stops getting a tracer starting a span adding",
    "start": "1475360",
    "end": "1481120"
  },
  {
    "text": "a vent to that span you can see a pattern emerging here and pure script same thing again i have",
    "start": "1481120",
    "end": "1486240"
  },
  {
    "text": "a pure script there because my little baby um but all these things look the same which is nice except for c-sharp which",
    "start": "1486240",
    "end": "1492720"
  },
  {
    "text": "doesn't look the same ah okay it was a great surprise to me a few months ago when i came across this i",
    "start": "1492720",
    "end": "1499600"
  },
  {
    "text": "was looking at the implementations for open telemetry across different platforms and seeing how they'd achieve certain things especially",
    "start": "1499600",
    "end": "1506880"
  },
  {
    "text": "regards to metrics which we'll talk about soon and i came across this little thing in c",
    "start": "1506880",
    "end": "1512240"
  },
  {
    "text": "sharp which says well we have different names for things because we kind of only had code to do",
    "start": "1512240",
    "end": "1517760"
  },
  {
    "text": "this and we're not going to change things and also span is an overloaded term in c",
    "start": "1517760",
    "end": "1522880"
  },
  {
    "text": "sharp and so on and so forth and actually looking back in the mailing",
    "start": "1522880",
    "end": "1528000"
  },
  {
    "text": "lists and on twitter and indeed i got involved as well have a little argument and forth there's a lot of",
    "start": "1528000",
    "end": "1535279"
  },
  {
    "text": "uh opinionated people out there who either get angry about this or really don't care at all um whatever",
    "start": "1535279",
    "end": "1543200"
  },
  {
    "text": "the key thing is some things have effectively been renamed if you're in c sharp and that's not really fair really",
    "start": "1543200",
    "end": "1549200"
  },
  {
    "text": "because c sharp got their first c sharp or net should i say",
    "start": "1549200",
    "end": "1554240"
  },
  {
    "text": "had a very rich tracing set up while open telemetry was being developed",
    "start": "1554240",
    "end": "1559760"
  },
  {
    "text": "and it didn't really make sense to go and redo that by renaming a whole pile of stuff the things work together and if you look at",
    "start": "1559760",
    "end": "1566159"
  },
  {
    "text": "the documentation for the c sharp it normally refers back and says okay well if you're looking at expands those are",
    "start": "1566159",
    "end": "1573360"
  },
  {
    "text": "activities attributes are attacks and events are still events don't worry about it",
    "start": "1573360",
    "end": "1579120"
  },
  {
    "text": "there's no point in getting frustrated about it the decision has been made and it doesn't actually matter all that",
    "start": "1579120",
    "end": "1584960"
  },
  {
    "text": "much the key thing is underneath the hood things will still be talking in terms of the concepts and",
    "start": "1584960",
    "end": "1592640"
  },
  {
    "text": "constructs we have already mentioned and what's kind of good is given that",
    "start": "1592640",
    "end": "1599279"
  },
  {
    "text": "you are all excellent net developers already the chances are that you are already doing things",
    "start": "1599279",
    "end": "1606799"
  },
  {
    "text": "activities tags and events because everybody loves tracing and we're all incredibly ops friendly and therefore",
    "start": "1606799",
    "end": "1613200"
  },
  {
    "text": "have been doing this since the api came out right absolutely i can see you all nodding i can't see you all nodding my bandwidth",
    "start": "1613200",
    "end": "1619360"
  },
  {
    "text": "it's absolutely terrible but i'll see you all nothing and say yes we are all doing this already so good news you're already using open",
    "start": "1619360",
    "end": "1626080"
  },
  {
    "text": "telemetry if you're using activities in c sharp cool beans so",
    "start": "1626080",
    "end": "1632559"
  },
  {
    "text": "now you have tracers what do you actually want to do with them this is kind of",
    "start": "1632559",
    "end": "1639120"
  },
  {
    "text": "cool because there are multiple places for sticking",
    "start": "1639120",
    "end": "1644480"
  },
  {
    "text": "traces and spans and salt and they all understand the terminology that we are talking about here in open",
    "start": "1644480",
    "end": "1650960"
  },
  {
    "text": "temperature so here's zipkin over here there's a nice little span graph there with some events at the bottom of it",
    "start": "1650960",
    "end": "1656720"
  },
  {
    "text": "here's jaeger which happens to misspell in that little bullet",
    "start": "1656720",
    "end": "1661360"
  },
  {
    "text": "here's new relic with a similar looking ui and here's lightstep with yet another ui with",
    "start": "1666000",
    "end": "1672159"
  },
  {
    "text": "steps and such i don't have an op good gif",
    "start": "1672159",
    "end": "1679039"
  },
  {
    "text": "i haven't got an opinion on which of these tools one should use to store their spans they all look the",
    "start": "1679039",
    "end": "1687200"
  },
  {
    "text": "same to me anyway and also generally i already have a whole pile of tools for",
    "start": "1687200",
    "end": "1693200"
  },
  {
    "text": "inspecting our software this is for our clients to choose from and i don't want to have to choose this chances are they've already got",
    "start": "1693200",
    "end": "1699120"
  },
  {
    "text": "something installed that can handle this and we want to push to that so that's kind of cool they get pretty",
    "start": "1699120",
    "end": "1704640"
  },
  {
    "text": "grass free wonderful but you want to get information into",
    "start": "1704640",
    "end": "1709919"
  },
  {
    "text": "these pieces of software and there's some decisions to be made at this point so you can write your",
    "start": "1709919",
    "end": "1715360"
  },
  {
    "text": "app and you can use a built-in in process exporter which just dumps things",
    "start": "1715360",
    "end": "1723039"
  },
  {
    "text": "directly into your jaeger is it fair to jaeger zipkin and new relic and such this works really",
    "start": "1723039",
    "end": "1731200"
  },
  {
    "text": "well for local development or just getting started it works really well where you only have",
    "start": "1731200",
    "end": "1738480"
  },
  {
    "text": "one or two services set up to do this i know it works really well",
    "start": "1738480",
    "end": "1743760"
  },
  {
    "text": "if you're just building yet another cms that's absolutely fine but there are some issues with this",
    "start": "1743760",
    "end": "1750840"
  },
  {
    "text": "approach primarily the issue is actually down to",
    "start": "1750840",
    "end": "1758159"
  },
  {
    "text": "resource usage you generally go and you store all these spans and traces before they get",
    "start": "1758159",
    "end": "1765039"
  },
  {
    "text": "exported to whichever software you're wanting to use and that needs to happen inside your",
    "start": "1765039",
    "end": "1771039"
  },
  {
    "text": "application in process the other big problem is that you end up then having to",
    "start": "1771039",
    "end": "1776960"
  },
  {
    "text": "language specific integration for each vendor tool so over here where i've got my impro set exporter exported to jaeger and zipkin",
    "start": "1776960",
    "end": "1784640"
  },
  {
    "text": "well in c sharp i'll need to write a c sharp jaeger exporter and a c sharp pacific and exporter and an airline",
    "start": "1784640",
    "end": "1790000"
  },
  {
    "text": "gallery to write an erlang exporter and an erlang typical exporter in languages where you have lots of",
    "start": "1790000",
    "end": "1796559"
  },
  {
    "text": "developers happily bashing out open source stuff within their niches um that's not a huge problem i can",
    "start": "1796559",
    "end": "1802480"
  },
  {
    "text": "imagine in.net that there'd be people happy to build exporters to the cows come home",
    "start": "1802480",
    "end": "1808320"
  },
  {
    "text": "i work in erlang there's probably two or three open source developers who actually",
    "start": "1808320",
    "end": "1813760"
  },
  {
    "text": "build things on the planet um they build very useful things and we use them every single day but most of",
    "start": "1813760",
    "end": "1819679"
  },
  {
    "text": "the time open source erlang is a case of someone wrote something to solve that problem and then abandoned it never to speak of",
    "start": "1819679",
    "end": "1826080"
  },
  {
    "text": "it ever again so it's not terribly useful to us um in our in our platform",
    "start": "1826080",
    "end": "1832399"
  },
  {
    "text": "and also the problem is the integration is part of the app release itself so that means that",
    "start": "1832399",
    "end": "1838399"
  },
  {
    "text": "if i want to add a different exporter and put things in new relic now i have",
    "start": "1838399",
    "end": "1844559"
  },
  {
    "text": "to redeploy my application to do that or the very least reconfigure it and that's not really all that useful",
    "start": "1844559",
    "end": "1850159"
  },
  {
    "text": "most likely redeployed because i'm gonna have to actually download the library that does that thing um and that's fine if you've got a",
    "start": "1850159",
    "end": "1856720"
  },
  {
    "text": "single application deployment but it's not fine if your architecture diagram looks like monzo's one",
    "start": "1856720",
    "end": "1862399"
  },
  {
    "text": "earlier the big bag of microservices no that's not terribly useful at all",
    "start": "1862399",
    "end": "1868639"
  },
  {
    "text": "so we've got in the open telemetry world as well as the standard and the",
    "start": "1868720",
    "end": "1874480"
  },
  {
    "text": "specification it's actually a specification standard for what is known as the open telemetry",
    "start": "1874480",
    "end": "1880480"
  },
  {
    "text": "collector and as well as a specification standard there's also an implementation",
    "start": "1880480",
    "end": "1885519"
  },
  {
    "text": "um i believe it's written in go we shouldn't hold that against it but the idea is that you can run an open",
    "start": "1885519",
    "end": "1893279"
  },
  {
    "text": "telemetry exporter out outside collector sorry outside of your application",
    "start": "1893279",
    "end": "1900080"
  },
  {
    "text": "and that can be responsible for them talking to jaeger zipkin etc which means it can be independently",
    "start": "1900080",
    "end": "1906960"
  },
  {
    "text": "deployed and support for those things only have to be written once and that's kind of cool that's",
    "start": "1906960",
    "end": "1914159"
  },
  {
    "text": "actually incredibly useful and i guess even more useful when you start doing things like this and",
    "start": "1914159",
    "end": "1919440"
  },
  {
    "text": "you spin up multiple applications on a single host i don't know inside dot containers or something whatever's cool",
    "start": "1919440",
    "end": "1925200"
  },
  {
    "text": "these days and they can all push to a single hotel collector they just sat there on that",
    "start": "1925200",
    "end": "1930480"
  },
  {
    "text": "single host or indeed and if you got a dispute of microservices architecture you might want to have a single hotel",
    "start": "1930480",
    "end": "1938159"
  },
  {
    "text": "collector sat there on its own infrastructure and things can be configured to talk to that",
    "start": "1938159",
    "end": "1944480"
  },
  {
    "text": "and they can that can go and push into jager zipkin and etcetera",
    "start": "1944480",
    "end": "1950080"
  },
  {
    "text": "now this represents quite a useful step for us because suddenly the memory pressure and the",
    "start": "1950080",
    "end": "1958640"
  },
  {
    "text": "infrastructure concerns for managing your spans and traces and such can all",
    "start": "1958640",
    "end": "1965600"
  },
  {
    "text": "be dealt with by whoever's job it is to run the hotel collector",
    "start": "1965600",
    "end": "1971039"
  },
  {
    "text": "which in an enterprise organization as much as we like to wave the devops term around probably",
    "start": "1971039",
    "end": "1977519"
  },
  {
    "text": "isn't going to be the dev team it's probably going to be the ops team because we probably still have one of those and that's the kind of thing they",
    "start": "1977519",
    "end": "1982720"
  },
  {
    "text": "like to do um that is just the way the world works still and that's kind of nice they can",
    "start": "1982720",
    "end": "1988159"
  },
  {
    "text": "go and play with that to the heart's content and if they decide they want different back end they can go and do that and the applications can carry on",
    "start": "1988159",
    "end": "1993679"
  },
  {
    "text": "running because they've been told well the collector's over there in fact that's not even how that works the cat has been told the app is over",
    "start": "1993679",
    "end": "1999360"
  },
  {
    "text": "there even different it's even the other way around super cool",
    "start": "1999360",
    "end": "2004399"
  },
  {
    "text": "so yes the open telemetry collector means you have an independent deployment set up you can offload all that work to",
    "start": "2004399",
    "end": "2011200"
  },
  {
    "text": "an external host if you need to and there's no need for language integrations which in erlang is wonderful because",
    "start": "2011200",
    "end": "2018960"
  },
  {
    "text": "it means we haven't got to write our own for a change which is what we have to do if we wanted to use an erlang exporter",
    "start": "2018960",
    "end": "2025679"
  },
  {
    "text": "for example in our test setup for now we are using dipkin and",
    "start": "2025679",
    "end": "2031120"
  },
  {
    "text": "prometheus and griffana and that's fine and great i've had to modify all the plugins to keep up to date with",
    "start": "2031120",
    "end": "2038080"
  },
  {
    "text": "the latest open client imitation in erlang and that's a fork that we have to look after because other people haven't done",
    "start": "2038080",
    "end": "2043840"
  },
  {
    "text": "that yet and that problem only grows exponentially across the number of",
    "start": "2043840",
    "end": "2049118"
  },
  {
    "text": "languages and number of implications that need to be created",
    "start": "2049119",
    "end": "2054480"
  },
  {
    "text": "bit of a faff so yes we'll leave that with the experts",
    "start": "2054480",
    "end": "2059679"
  },
  {
    "text": "and just shove our spans traces and such into the collector thank you very much",
    "start": "2059679",
    "end": "2065040"
  },
  {
    "text": "so in summary generally the idea is the hope is that everybody",
    "start": "2065040",
    "end": "2071280"
  },
  {
    "text": "will start writing all the library code against traces and spans and add events to them",
    "start": "2071280",
    "end": "2077200"
  },
  {
    "text": "and they'll all go and honorably create spans for new context we'll all have support for flowing",
    "start": "2077200",
    "end": "2082398"
  },
  {
    "text": "context between services using whatever web um client you're using i have no idea what using.net",
    "start": "2082399",
    "end": "2089118"
  },
  {
    "text": "these days for sending http requests but i imagine you have the ability to do that baked in and i imagine that probably could support this",
    "start": "2089119",
    "end": "2096158"
  },
  {
    "text": "stuff by default and add events for everything so when i'm building my crappy library to move",
    "start": "2096159",
    "end": "2101920"
  },
  {
    "text": "bytes from one part of my disk to another i can make sure it's traced up to the hilt and",
    "start": "2101920",
    "end": "2107839"
  },
  {
    "text": "not actually worry about the implementation at any point in practice now as it actually happens",
    "start": "2107839",
    "end": "2113920"
  },
  {
    "text": "the way this is actually going down as it currently stands is rather than tie themselves to open",
    "start": "2113920",
    "end": "2120079"
  },
  {
    "text": "telemetry library implementers are just allowing configuration and saying well actually if you want to",
    "start": "2120079",
    "end": "2128640"
  },
  {
    "text": "use open telemetry with our library here the extension points to go and do that which is a bit disappointing but i can",
    "start": "2128640",
    "end": "2135040"
  },
  {
    "text": "understand why that is because open telemetry wanting to be the standard",
    "start": "2135040",
    "end": "2140079"
  },
  {
    "text": "is a noble goal but not necessarily one that they'll",
    "start": "2140079",
    "end": "2146240"
  },
  {
    "text": "ever win um everybody wants to be their standard and they can't be the standard because there are always going to be another one",
    "start": "2146240",
    "end": "2152000"
  },
  {
    "text": "out there but the cool thing is you can export traces to whatever tool you want from there either by in process or using",
    "start": "2152000",
    "end": "2158000"
  },
  {
    "text": "the collector and i do mean everything in our software now if if something happens you add a",
    "start": "2158000",
    "end": "2166000"
  },
  {
    "text": "trace for it um it's up to the application as it starts up to configure itself to",
    "start": "2166000",
    "end": "2172720"
  },
  {
    "text": "either decide at once tracing in certain areas or not and that's fine obvious and you can even do things",
    "start": "2172720",
    "end": "2178640"
  },
  {
    "text": "like configure the collector to say drop every 99 out of 100 messages coming",
    "start": "2178640",
    "end": "2185280"
  },
  {
    "text": "from path system if you decide it's a really heavy heavy part system if you only want a physical view of",
    "start": "2185280",
    "end": "2191359"
  },
  {
    "text": "roughly what's going on on a busy environment you can do that and that's fine so more tracing the",
    "start": "2191359",
    "end": "2197200"
  },
  {
    "text": "better really now metrics are actually more interesting uh as far",
    "start": "2197200",
    "end": "2204400"
  },
  {
    "text": "as i'm concerned anyway because we have hand rolled our metrics",
    "start": "2204400",
    "end": "2210880"
  },
  {
    "text": "implementations since ever in the erlang world we have large workflows containing",
    "start": "2210880",
    "end": "2218320"
  },
  {
    "text": "processors whose job it is to move or transform or do things with",
    "start": "2218320",
    "end": "2224880"
  },
  {
    "text": "video or audio streams by the frame or by the packet or whatever",
    "start": "2224880",
    "end": "2230400"
  },
  {
    "text": "and the design of that has never been quite clear so we've always come up with",
    "start": "2230400",
    "end": "2235520"
  },
  {
    "text": "our own way of doing it and surprise surprise our way isn't the best way because people who are",
    "start": "2235520",
    "end": "2242480"
  },
  {
    "text": "cleverer than us have come up with better ways of handling these things it didn't occur to me that um pull based",
    "start": "2242480",
    "end": "2250000"
  },
  {
    "text": "systems for metrics would be remotely harmful in any way and it turns out actually they're not",
    "start": "2250000",
    "end": "2255920"
  },
  {
    "text": "very useful you need to support push-based metrics if you want good performance and so on so so forth",
    "start": "2255920",
    "end": "2261520"
  },
  {
    "text": "we can talk about that let's if you want to um but anyway the stat the patterns and",
    "start": "2261520",
    "end": "2266560"
  },
  {
    "text": "standards and open telemetry kind of leads our happy path and that makes us quite happy and more importantly we can get shiny",
    "start": "2266560",
    "end": "2272800"
  },
  {
    "text": "graphs that impress our customers without actually tying ourselves to any kind of technology which means earlier when i showed you",
    "start": "2272800",
    "end": "2278800"
  },
  {
    "text": "that lovely grafana screenshot we can still go and generate those but just because we're generating shiny",
    "start": "2278800",
    "end": "2284400"
  },
  {
    "text": "grafana's screenshots doesn't mean that grafana is the only thing we support which up until now has been the",
    "start": "2284400",
    "end": "2289680"
  },
  {
    "text": "case um if somebody wants something else i could implement it that's a bit of a pain really so similar to",
    "start": "2289680",
    "end": "2298079"
  },
  {
    "text": "tracing um you have meters this is confusing to me when i first",
    "start": "2298079",
    "end": "2304800"
  },
  {
    "text": "looked at it um because to me a meter is is not what a meter is an open telemetry so let's go",
    "start": "2304800",
    "end": "2310480"
  },
  {
    "text": "definitions of open telemetry here a meter is configured per application",
    "start": "2310480",
    "end": "2316079"
  },
  {
    "text": "and is used to get instances of the instruments we are going to be writing to and again by",
    "start": "2316079",
    "end": "2321760"
  },
  {
    "text": "default everything is a no ob so this is analogous to the tracer earlier you want to have per application",
    "start": "2321760",
    "end": "2327760"
  },
  {
    "text": "or per domain a meter which you're going to do things with",
    "start": "2327760",
    "end": "2333200"
  },
  {
    "text": "so scopes to a meter are instruments good name for something too now an",
    "start": "2333359",
    "end": "2339359"
  },
  {
    "text": "instrument has a name and a type and that's all it has",
    "start": "2339359",
    "end": "2346400"
  },
  {
    "text": "the scope is the meter that originally created them and that's useful and that generally",
    "start": "2346400",
    "end": "2352960"
  },
  {
    "text": "defined up front as a part of your library setup and the names are really important",
    "start": "2352960",
    "end": "2360640"
  },
  {
    "text": "and this is really this is a crucial thing when we first started creating our instruments",
    "start": "2360640",
    "end": "2366800"
  },
  {
    "text": "not understanding open chemistry having not rtfm's um we were trying to create namespaced",
    "start": "2366800",
    "end": "2372960"
  },
  {
    "text": "names and it turns out that's a silly thing to do names",
    "start": "2372960",
    "end": "2378079"
  },
  {
    "text": "are short names are meant to be reused names are not",
    "start": "2378079",
    "end": "2385119"
  },
  {
    "text": "the key differentiating factor between values written to instruments",
    "start": "2385119",
    "end": "2390240"
  },
  {
    "text": "instruments can have a number of different properties they can be pushed or pulled that is",
    "start": "2390640",
    "end": "2396320"
  },
  {
    "text": "synchronous or asynchronous they can be monotonic or not that is to",
    "start": "2396320",
    "end": "2401839"
  },
  {
    "text": "say they can just go up or they can have a value that fluctuates or a value that goes up or down and so",
    "start": "2401839",
    "end": "2408800"
  },
  {
    "text": "and so forth and that's important to know and they can be additive or grouping in their behavior so an",
    "start": "2408800",
    "end": "2414480"
  },
  {
    "text": "additive instrument would be a case of i write a value to the instrument",
    "start": "2414480",
    "end": "2420640"
  },
  {
    "text": "and the increments encounter a grouping one would be i write a value to my instrument and it",
    "start": "2420640",
    "end": "2426720"
  },
  {
    "text": "works out my rolling average as we go along two",
    "start": "2426720",
    "end": "2431839"
  },
  {
    "text": "our recorded values are associated with the instruments we used to write them",
    "start": "2431839",
    "end": "2437359"
  },
  {
    "text": "a list of labels and a label is a lot i can actually tracing only keys and values limited to",
    "start": "2437359",
    "end": "2444319"
  },
  {
    "text": "strings only this is really important so if i've got myself an instrument over here the name and a",
    "start": "2444319",
    "end": "2450960"
  },
  {
    "text": "type and i want to write a value to it and supply not only the value",
    "start": "2450960",
    "end": "2456560"
  },
  {
    "text": "but the labels associated with that value when i write the instrument",
    "start": "2456560",
    "end": "2461839"
  },
  {
    "text": "and that's the standard synchronous instruments have a lovely ability to build the labels from",
    "start": "2461839",
    "end": "2468800"
  },
  {
    "text": "the current span contacts and that's really useful too obviously you know if you're operating within a particular service",
    "start": "2468800",
    "end": "2475200"
  },
  {
    "text": "operation it might be useful when writing metrics to have that information",
    "start": "2475200",
    "end": "2480960"
  },
  {
    "text": "exported as part of the value you are writing so let's look at a specific",
    "start": "2480960",
    "end": "2489119"
  },
  {
    "text": "instrument type and see what this looks like in terms of code and",
    "start": "2489119",
    "end": "2494240"
  },
  {
    "text": "implementation because this is the easiest way to understand what an instrument is",
    "start": "2494240",
    "end": "2500079"
  },
  {
    "text": "we'll look at the simplest well to my mind the simplest type of instrument which is",
    "start": "2500079",
    "end": "2507119"
  },
  {
    "text": "a counter so down here i've listed the three properties of the counter",
    "start": "2507119",
    "end": "2512640"
  },
  {
    "text": "they are synchronous the monotonic and the additive these are defaults and let's say",
    "start": "2512640",
    "end": "2519920"
  },
  {
    "text": "i've written a processor that receives video frames and i want to record how many frames it receives over time",
    "start": "2519920",
    "end": "2527839"
  },
  {
    "text": "is to say got a function that's receiving a video frame whenever it does probably 25 times a",
    "start": "2527839",
    "end": "2534400"
  },
  {
    "text": "second or they're about how video tends to work we want to record",
    "start": "2534400",
    "end": "2539520"
  },
  {
    "text": "these frames as we receive them that would imply it's synchronous that is to say whenever i receive a",
    "start": "2539520",
    "end": "2546480"
  },
  {
    "text": "frame i'm going to write a value to my counter",
    "start": "2546480",
    "end": "2551680"
  },
  {
    "text": "you don't have negative game counts that doesn't happen you don't use frames um if you receive a frame the",
    "start": "2551680",
    "end": "2560079"
  },
  {
    "text": "number of frames you received goes up so this kind of uh instrument type is clearly monotonic",
    "start": "2560079",
    "end": "2567520"
  },
  {
    "text": "and the value we do record can be added to previous values and also to give a total over time hence it's additive so if i",
    "start": "2567520",
    "end": "2575119"
  },
  {
    "text": "want to know how many frames i receive every hour that's a question i can ask on the counter by giving it values i give it",
    "start": "2575119",
    "end": "2583280"
  },
  {
    "text": "so how does it work well i'll go and get the meter and type my app i'll create an",
    "start": "2583280",
    "end": "2590480"
  },
  {
    "text": "instrument belonging to that meter so here we go um the complete rock one here whatever",
    "start": "2590480",
    "end": "2597520"
  },
  {
    "text": "whatever um and i'm going to write a valley's adjustment with some labels so there we go there's some that's my value and some",
    "start": "2597520",
    "end": "2604240"
  },
  {
    "text": "labels i've actually used one example here that's a bit of a shame but never mind",
    "start": "2604240",
    "end": "2609680"
  },
  {
    "text": "um the other type of instrument we might want to look at",
    "start": "2609680",
    "end": "2615119"
  },
  {
    "text": "for a simplicity point of view is value recorder which is also synchronous but it's not monotonic um but it is",
    "start": "2615119",
    "end": "2623040"
  },
  {
    "text": "grouping so for example if i'm receiving a process video frames i might want to record how big those",
    "start": "2623040",
    "end": "2629040"
  },
  {
    "text": "frames are as they come in how many bytes are they that's example i just showed actually so",
    "start": "2629040",
    "end": "2634560"
  },
  {
    "text": "obviously it's synchronous because we're going to as the frames come in the size of the frame is going to go up or down as it",
    "start": "2634560",
    "end": "2640960"
  },
  {
    "text": "comes in it doesn't make any sense for to keep going up and up unless we want to see unless we want to",
    "start": "2640960",
    "end": "2646000"
  },
  {
    "text": "have a counter called total bytes at which point that would be a counter but no we want to have a look at the",
    "start": "2646000",
    "end": "2652079"
  },
  {
    "text": "size of the frames over time so they're definitely not monotonic and when we",
    "start": "2652079",
    "end": "2657440"
  },
  {
    "text": "add them together to do total that's not what we're doing here we want to see averages over time so would imply",
    "start": "2657440",
    "end": "2663760"
  },
  {
    "text": "this is a grouping counter um that's the example i just showed so",
    "start": "2663760",
    "end": "2669359"
  },
  {
    "text": "cool so um in the code example i just showed",
    "start": "2669359",
    "end": "2675280"
  },
  {
    "text": "we wrote the value and the labels at the same time so the name of the instrument used to record them as part of that",
    "start": "2675280",
    "end": "2681040"
  },
  {
    "text": "value the meter the instrument belong to is also part of that value and the unique combinations of the",
    "start": "2681040",
    "end": "2687760"
  },
  {
    "text": "labels associated with that recorded value um is also then can you differentiate",
    "start": "2687760",
    "end": "2695520"
  },
  {
    "text": "the values written to the store so instruments are designed to be used",
    "start": "2695520",
    "end": "2700880"
  },
  {
    "text": "by multiple consumers with their own distinct combinations of labels the code example i just showed doesn't make any sense uh because",
    "start": "2700880",
    "end": "2708000"
  },
  {
    "text": "i'm having to specify the labels constantly all the time the instruments and application needs",
    "start": "2708000",
    "end": "2714640"
  },
  {
    "text": "to find up front for a little bit of thor thought indeed they should um so what we were doing originally in",
    "start": "2714640",
    "end": "2719760"
  },
  {
    "text": "our code base when we first jumped in gunko saying we're going to use open telemetry once we started defining",
    "start": "2719760",
    "end": "2725119"
  },
  {
    "text": "instruments per processor as it were and that's kind of absolutely not how it works instruments",
    "start": "2725119",
    "end": "2732640"
  },
  {
    "text": "generally are a global concept for your application the names of the instruments are going",
    "start": "2732640",
    "end": "2738640"
  },
  {
    "text": "to be thought about quite carefully things like frame count for example is a fairly standard term that you can really",
    "start": "2738640",
    "end": "2744880"
  },
  {
    "text": "understand everything you can use so you can search for all the frame counts across your entire application",
    "start": "2744880",
    "end": "2750079"
  },
  {
    "text": "so for example if we've got a workflow with a thousand processors in it we can have a thousand",
    "start": "2750079",
    "end": "2755440"
  },
  {
    "text": "different frame counts if you group them by their distinct values and that's quite useful",
    "start": "2755440",
    "end": "2761920"
  },
  {
    "text": "because i can see how much latency there is from the beginning of system to the end of the system",
    "start": "2761920",
    "end": "2767040"
  },
  {
    "text": "across the processor chain this is marvelous stuff really but the example i just showed",
    "start": "2767040",
    "end": "2774240"
  },
  {
    "text": "had us um writing the labels as we wrote the value and that's",
    "start": "2774240",
    "end": "2779440"
  },
  {
    "text": "quite inefficient because generally these things need grouping and memory before they get sent off to collector",
    "start": "2779440",
    "end": "2785599"
  },
  {
    "text": "so for this purpose we have a concept in open telemetry known as bound instruments and this is generally",
    "start": "2785599",
    "end": "2792079"
  },
  {
    "text": "what you'll do you hold the application meter you'll create an instrument belonging to that meter",
    "start": "2792079",
    "end": "2797280"
  },
  {
    "text": "and you'll then call bind on that instrument passing in a label set so here we sample",
    "start": "2797280",
    "end": "2803520"
  },
  {
    "text": "the comma and so on and so forth there you go and codec h264 wonderful stuff and then i can write a value",
    "start": "2803520",
    "end": "2810480"
  },
  {
    "text": "to that counter without passing in the label set and indeed again and again the gain as",
    "start": "2810480",
    "end": "2816000"
  },
  {
    "text": "data comes in and that gives us a pattern actually for using the instruments",
    "start": "2816000",
    "end": "2821440"
  },
  {
    "text": "in our code um which i'll get shall get you soon and the idea is the",
    "start": "2821440",
    "end": "2827760"
  },
  {
    "text": "banishments can be created up front for the labels needed and there is an assumed performance penalty for not doing this in reality",
    "start": "2827760",
    "end": "2833680"
  },
  {
    "text": "there's not really that much of one but if you've got a thousand instruments or hundred instruments in",
    "start": "2833680",
    "end": "2840240"
  },
  {
    "text": "your application and several thousand things types of value there's a whole lot of lookups you need",
    "start": "2840240",
    "end": "2846000"
  },
  {
    "text": "to do in order to write values and based on those labels as they get written and it can be a bit of a",
    "start": "2846000",
    "end": "2852240"
  },
  {
    "text": "bottleneck cpu-wise whereas if you create bound instruments you can up",
    "start": "2852240",
    "end": "2857680"
  },
  {
    "text": "the implementation can optimize by creating a reference for example based",
    "start": "2857680",
    "end": "2862960"
  },
  {
    "text": "on the label set and write by the reference instead that would be a thing that it does",
    "start": "2862960",
    "end": "2868319"
  },
  {
    "text": "which is nice collection then starts looking a lot like it does in tracing world so again you",
    "start": "2868319",
    "end": "2876319"
  },
  {
    "text": "can have an exporter which is invoked every clubs interval from prometheus influx or whatever",
    "start": "2876319",
    "end": "2882720"
  },
  {
    "text": "and the values get stored in process until they are collected just because you're writing frames uh",
    "start": "2882720",
    "end": "2889359"
  },
  {
    "text": "every time they come in 25 times a second doesn't mean you want to call prometheus 25 times",
    "start": "2889359",
    "end": "2894800"
  },
  {
    "text": "55 times a second that's not it at all prometheus will most likely be configured to call the application once every",
    "start": "2894800",
    "end": "2901280"
  },
  {
    "text": "second or once every five seconds and say what are all the values that you have seen",
    "start": "2901280",
    "end": "2906400"
  },
  {
    "text": "since i last spoke to you and that's how that generally works and it's up to the application and the",
    "start": "2906400",
    "end": "2912880"
  },
  {
    "text": "implementation of open telemetry to know what to do with those types of instrument to make these kind of calls possible",
    "start": "2912880",
    "end": "2918720"
  },
  {
    "text": "but the problem is a high cardinality of labels means a lot of potential memory pressure",
    "start": "2918720",
    "end": "2923760"
  },
  {
    "text": "and also indeed cpu pressure for example if you have a label",
    "start": "2923760",
    "end": "2930480"
  },
  {
    "text": "or an instrument called frame count and i've got a thousand processors each the label set",
    "start": "2930480",
    "end": "2935839"
  },
  {
    "text": "that's a thousand different values being kept in memory and aggregated on and counted on before",
    "start": "2935839",
    "end": "2942319"
  },
  {
    "text": "being shipped out every second of seconds in the case of things like averages or such um the grouping",
    "start": "2942319",
    "end": "2950319"
  },
  {
    "text": "instruments i actually have to keep some of that those values around in memory in order to create calculations itself",
    "start": "2950319",
    "end": "2956160"
  },
  {
    "text": "so it's not terribly good to hold all that in memory because it also means that the application dies perfectly",
    "start": "2956160",
    "end": "2961440"
  },
  {
    "text": "involved use a later and also per vendee that implement thing which is just",
    "start": "2961440",
    "end": "2967040"
  },
  {
    "text": "blah again hate writing code we prefer something for us so thank you for the the open telemetry collector will do",
    "start": "2967040",
    "end": "2973440"
  },
  {
    "text": "this for us it can happily pull the data from our applications or indeed we can push to the open time to collector as we get it",
    "start": "2973440",
    "end": "2980319"
  },
  {
    "text": "and um it can be responsible then palming after prometheus every collection interval",
    "start": "2980319",
    "end": "2986160"
  },
  {
    "text": "and it also means that there can be some kind of ways of tidying up that data so one of the things that developers",
    "start": "2986160",
    "end": "2993839"
  },
  {
    "text": "traditionally misunderstand with cardinality and label sets of metrics is",
    "start": "2993839",
    "end": "2998880"
  },
  {
    "text": "how to reduce cardinality or how to limit cardinality and um that's kind of okay",
    "start": "2998880",
    "end": "3006319"
  },
  {
    "text": "if you have some business knowledge on how to then reduce that cardinality at the point of putting it into prometheus",
    "start": "3006319",
    "end": "3012880"
  },
  {
    "text": "and whoever's responsible looking at after the collector can do that for you which is nice so developers can get on",
    "start": "3012880",
    "end": "3018559"
  },
  {
    "text": "and spin as much data as they want to into their metrics and leave it all for ups to sort out",
    "start": "3018559",
    "end": "3024960"
  },
  {
    "text": "later on um and that's that's that's a nice way of working unless you're ops",
    "start": "3024960",
    "end": "3030480"
  },
  {
    "text": "um so yeah singer's instruments are push-based as far as the code is concerned but the value needs to be kept in memory somewhere until read by the",
    "start": "3030480",
    "end": "3036880"
  },
  {
    "text": "integration but they can be written to as and when are needed and they can indeed use the current",
    "start": "3036880",
    "end": "3042640"
  },
  {
    "text": "spine context to build label sets but async instruments don't work that way they only get read once per collection",
    "start": "3042640",
    "end": "3049040"
  },
  {
    "text": "interval and they have no access to spanned contacts we've not covered those yet so go back that diagram over here you've",
    "start": "3049040",
    "end": "3055280"
  },
  {
    "text": "got a collection interval coming over every five seconds asking your app what's the current state of the world",
    "start": "3055280",
    "end": "3060880"
  },
  {
    "text": "when it gets asked that that's when you want to go and read an asynchronous instrument and the way you do that is for example",
    "start": "3060880",
    "end": "3068160"
  },
  {
    "text": "with a value observer like this which is asynchronous number one grouping",
    "start": "3068160",
    "end": "3073280"
  },
  {
    "text": "for example an encoder would like to record how much gpu it's using",
    "start": "3073280",
    "end": "3078319"
  },
  {
    "text": "over time well it's clearly it makes no sense to be writing the gpu every time it changes because",
    "start": "3078319",
    "end": "3084720"
  },
  {
    "text": "they're changing all the time what's the granularity of that it doesn't make sense for us to have a timer and sample that ourselves because",
    "start": "3084720",
    "end": "3091599"
  },
  {
    "text": "why would we no what i want to do is give open telemetry a call back and say",
    "start": "3091599",
    "end": "3096800"
  },
  {
    "text": "when you want to know what the value is for this ask me and i'll tell you what it is",
    "start": "3096800",
    "end": "3102640"
  },
  {
    "text": "it's the value at a point in time it's not monotonic it's likely going up um but you want to work at average and",
    "start": "3102640",
    "end": "3108400"
  },
  {
    "text": "peaks so it's probably a grouping type so we'll get hold of that application meter",
    "start": "3108400",
    "end": "3113920"
  },
  {
    "text": "we'll create an instrument belonging to that meter which is a value observer we'll set a call back up by subscribing",
    "start": "3113920",
    "end": "3120000"
  },
  {
    "text": "to gpusage get given object called record in this case which we can then write to whenever we",
    "start": "3120000",
    "end": "3127760"
  },
  {
    "text": "are invoked and that's how you'll do that so generally you'll have two types of meter",
    "start": "3127760",
    "end": "3132960"
  },
  {
    "text": "in two types of instruments in your application you'll have your synchronous ones which everything has a handle to in his",
    "start": "3132960",
    "end": "3138240"
  },
  {
    "text": "writing and you'll have your async ones which are passing information like this every time",
    "start": "3138240",
    "end": "3143440"
  },
  {
    "text": "the collection is performed generally what we'll do is we'll define all of our instruments up front and bung",
    "start": "3143440",
    "end": "3149599"
  },
  {
    "text": "them in a record like this so let's frame count by size and cheap usage and so on and so forth",
    "start": "3149599",
    "end": "3155520"
  },
  {
    "text": "in our modules and classes we'll have bound instruments in the module state in init when we set",
    "start": "3155520",
    "end": "3162880"
  },
  {
    "text": "up we'll pass in the config the record completely with all the instruments",
    "start": "3162880",
    "end": "3168559"
  },
  {
    "text": "and we'll bind the instruments we care about and store the balance in our state",
    "start": "3168559",
    "end": "3173760"
  },
  {
    "text": "this would be equivalent to you having an asp.net mvc controller that and the",
    "start": "3173760",
    "end": "3178800"
  },
  {
    "text": "constructor gets given the total collection of instruments does a bind operation against those",
    "start": "3178800",
    "end": "3184559"
  },
  {
    "text": "instruments stashes them somewhere in member state and then writes this instrument during the actual",
    "start": "3184559",
    "end": "3191280"
  },
  {
    "text": "callbacks for i don't know it's sending data down to client um all fairly standard stuff really",
    "start": "3191280",
    "end": "3199280"
  },
  {
    "text": "so indeed giving up as input call i can then do things like record frame count length input thank you very much",
    "start": "3199280",
    "end": "3205920"
  },
  {
    "text": "nice standard patterns this is the complete list of actually all the types",
    "start": "3205920",
    "end": "3212240"
  },
  {
    "text": "of um instruments you might want to create in open telemetry turns out this pretty",
    "start": "3212240",
    "end": "3218240"
  },
  {
    "text": "much encompasses everything you might ever want to do with metrics some very clever people have sat down and argued about this for a very long time and this",
    "start": "3218240",
    "end": "3224000"
  },
  {
    "text": "is what they came up with um behavior of you can actually change depending on how you configure them",
    "start": "3224000",
    "end": "3230240"
  },
  {
    "text": "but the default implications are indeed that counter up down value or synchronous and with adding",
    "start": "3230240",
    "end": "3235760"
  },
  {
    "text": "modernists and so on so forth happy days so",
    "start": "3235760",
    "end": "3241040"
  },
  {
    "text": "open telemetry yourself isn't complete um which i know just gave a talk about at",
    "start": "3241040",
    "end": "3246880"
  },
  {
    "text": "the conference and we're jumping hardly into it ourselves um but it's not even gone ga yet it's",
    "start": "3246880",
    "end": "3254160"
  },
  {
    "text": "tracing's gonna go ga anytime soon they're trying to finalize things and just sort out",
    "start": "3254160",
    "end": "3259200"
  },
  {
    "text": "how they're going to version tracing and metrics independently of each other but the idea is once trace things gone",
    "start": "3259200",
    "end": "3266079"
  },
  {
    "text": "ga people can actually start using it properly metrics can just kind of soon follow it um there are",
    "start": "3266079",
    "end": "3272160"
  },
  {
    "text": "plans to do things around logging and there are indeed other infrastructure concerns um",
    "start": "3272160",
    "end": "3277520"
  },
  {
    "text": "telemetry wise which are going to end up getting grouped into opengl but tracing metrics",
    "start": "3277520",
    "end": "3282640"
  },
  {
    "text": "the two main ones i believe that the net implementation of metrics is going to mirror the spec as dot net",
    "start": "3282640",
    "end": "3289839"
  },
  {
    "text": "itself hasn't got an invitation or anything that looks like it just yet so that'll be nice um it's always kind",
    "start": "3289839",
    "end": "3295359"
  },
  {
    "text": "of cool when um standards are adopted by people in the world in terms of us well we're",
    "start": "3295359",
    "end": "3301680"
  },
  {
    "text": "jumping just straight straight in really we're adopting open chemistry across our entire",
    "start": "3301680",
    "end": "3308000"
  },
  {
    "text": "application because our own abstractions kind of suck and the ones it gives us are pretty good",
    "start": "3308000",
    "end": "3313599"
  },
  {
    "text": "and even if open telemetry dies on its ass um at the end of the day we've got a pile of interfaces we'll just rewrite",
    "start": "3313599",
    "end": "3321040"
  },
  {
    "text": "our code against those interfaces and do things the wrong way the code's not going to go anywhere is it",
    "start": "3321040",
    "end": "3327040"
  },
  {
    "text": "but it's really cool because outside of the demos we have to do to sell our products in the first place we can defer the technical decisions",
    "start": "3327680",
    "end": "3333920"
  },
  {
    "text": "until we actually deploy to our customers on site which means if they already have grafana",
    "start": "3333920",
    "end": "3340240"
  },
  {
    "text": "um or they already have um lightstep or they already have splunk or",
    "start": "3340240",
    "end": "3347119"
  },
  {
    "text": "so and so forth that's fine doesn't bother us we can just configure the appropriate exporter",
    "start": "3347119",
    "end": "3353359"
  },
  {
    "text": "and everything be fine or even better the customer might even by then have an open telemetry collectors out",
    "start": "3353359",
    "end": "3360240"
  },
  {
    "text": "there monitoring their own systems and then now i ask wishful thinking because most of our customers are very enterprise",
    "start": "3360240",
    "end": "3366480"
  },
  {
    "text": "and therefore it'll be five or ten years until they actually get on board of anything like this um but we're there we're waiting for",
    "start": "3366480",
    "end": "3372240"
  },
  {
    "text": "them which is super exciting and cool um so i highly recommend if you haven't",
    "start": "3372240",
    "end": "3377599"
  },
  {
    "text": "looked into any of this stuff at all yet playing with it um and the easiest thing to do is pull down",
    "start": "3377599",
    "end": "3383599"
  },
  {
    "text": "a docker manifold or two and just spin up kindergartner and",
    "start": "3383599",
    "end": "3389040"
  },
  {
    "text": "prometheus there's actually some i i again i don't use docker very much i i run on nixos i",
    "start": "3389040",
    "end": "3395040"
  },
  {
    "text": "i don't i don't need it but i believe you can do some orchestration docker these days quite easily by actually",
    "start": "3395040",
    "end": "3400160"
  },
  {
    "text": "spinning up multiple containers using a single file and there's some out there for doing this with this setup um and you spin all",
    "start": "3400160",
    "end": "3407520"
  },
  {
    "text": "these things up and go and write some code in your chosen language that goes and speaks to those things you'll see data appear in",
    "start": "3407520",
    "end": "3413200"
  },
  {
    "text": "those things it's very exciting um your product managers will absolutely love you for it",
    "start": "3413200",
    "end": "3418880"
  },
  {
    "text": "and your ops team will absolutely wet themselves when they see what beautiful things you can give them",
    "start": "3418880",
    "end": "3424799"
  },
  {
    "text": "for analyzing what's going on in your application so that's cool that is i actually the",
    "start": "3424799",
    "end": "3430400"
  },
  {
    "text": "only time i recommend docker is for the band and things like this anyway hopefully this was a reasonably",
    "start": "3430400",
    "end": "3436480"
  },
  {
    "text": "good 101 as i said i'm not an expert um i i've just been responsible for our",
    "start": "3436480",
    "end": "3441760"
  },
  {
    "text": "implantation and getting to grips on that i've actually managed to run just up to time which is a surprise so i",
    "start": "3441760",
    "end": "3450240"
  },
  {
    "text": "probably haven't got time for questions um but that said i am around on slack um twitter and such if you want",
    "start": "3450240",
    "end": "3458480"
  },
  {
    "text": "to ask me anything and that's it thank you very much for coming to my",
    "start": "3458480",
    "end": "3464559"
  },
  {
    "text": "lovely talk about open telemetry",
    "start": "3464559",
    "end": "3475839"
  },
  {
    "text": "you",
    "start": "3476240",
    "end": "3478319"
  }
]