[
  {
    "text": "morning everyone thanks for making it here after the attendee party 9 am-4 is",
    "start": "5640",
    "end": "11740"
  },
  {
    "text": "always a bit of a hard slot what I wanted to talk today about is",
    "start": "11740",
    "end": "18100"
  },
  {
    "text": "just what makes react different in my mind it's really interesting JavaScript",
    "start": "18100",
    "end": "23320"
  },
  {
    "text": "has changed so much over the past even yeah it's completely I'm like we've",
    "start": "23320",
    "end": "29260"
  },
  {
    "text": "seen before you go into sort of angular 1 projects and they're not using they're",
    "start": "29260",
    "end": "35829"
  },
  {
    "text": "using gulp or grunt as a build system probably not transpiling",
    "start": "35829",
    "end": "41129"
  },
  {
    "text": "angular has its own module system we now have one that standard compliant in the",
    "start": "41129",
    "end": "46390"
  },
  {
    "text": "browser some browsers but yeah reactors kind of one of these",
    "start": "46390",
    "end": "52629"
  },
  {
    "text": "libraries which I just find in it really differentiates itself in the way it",
    "start": "52629",
    "end": "59140"
  },
  {
    "text": "makes you think and today is going to be going through sort of the basics of react and sort of some",
    "start": "59140",
    "end": "65979"
  },
  {
    "text": "of the shifts and mindset that it'll it'll sort of uh it'll change the way you think about",
    "start": "65979",
    "end": "72670"
  },
  {
    "text": "buildings these larger JavaScript applications",
    "start": "72670",
    "end": "77578"
  },
  {
    "text": "so there seems to be this trend of we want to reinvent everything as a single page application",
    "start": "78030",
    "end": "84719"
  },
  {
    "text": "the problem with that is most of the time we end up something like this where",
    "start": "84719",
    "end": "89799"
  },
  {
    "text": "you don't understand what's actually going on in your app anymore you don't understand where data lives how it flows",
    "start": "89799",
    "end": "96250"
  },
  {
    "text": "through the system if your performance problems it's hard to trace where they come in that sort of stuff and this is",
    "start": "96250",
    "end": "102549"
  },
  {
    "text": "pretty typical so what I'm not talking about today is why you should build single single page applications and",
    "start": "102549",
    "end": "108820"
  },
  {
    "text": "comparing react to like MVC or server-side technologies that's another",
    "start": "108820",
    "end": "114009"
  },
  {
    "text": "major discussion but I just want to make cover sort of what what react is and how",
    "start": "114009",
    "end": "119950"
  },
  {
    "text": "it can if you are going to this single page application road or building desktop apps using electron or something",
    "start": "119950",
    "end": "127659"
  },
  {
    "text": "like that and using new web technologies how can actually help you build an app and understand flow data flows through",
    "start": "127659",
    "end": "134379"
  },
  {
    "text": "your application a bit about me my name is Jake in urban I",
    "start": "134379",
    "end": "140830"
  },
  {
    "text": "work for ratifying Perth I moved back about a year ago from London and that's",
    "start": "140830",
    "end": "146709"
  },
  {
    "text": "actually where I got introduced to react day to day I do a lot of net and",
    "start": "146709",
    "end": "153569"
  },
  {
    "text": "depending on the client JavaScript or MBC or anything react ratifies a",
    "start": "153569",
    "end": "160810"
  },
  {
    "text": "consulting company so get thrown into all sorts of situations best way to contact me after the talk if",
    "start": "160810",
    "end": "168519"
  },
  {
    "text": "you want to get in touch as either Twitter or I've got a lot of sample code and examples and things up in my github",
    "start": "168519",
    "end": "176250"
  },
  {
    "text": "but where I actually found out about react and I started getting into it was a very cool conference called code on",
    "start": "176250",
    "end": "183010"
  },
  {
    "text": "the sea this is the best idea anyone's had for a conference so the idea is you",
    "start": "183010",
    "end": "188349"
  },
  {
    "text": "go fly to Florida you jump on a cruise ship and Jacksonville and then the first",
    "start": "188349",
    "end": "193540"
  },
  {
    "text": "day of the conference is while you're cruising down to the Bahamas and then you've got three days in the Bahamas and",
    "start": "193540",
    "end": "198819"
  },
  {
    "text": "then the second day of the conference is when you're cruising back why are there not more conferences like",
    "start": "198819",
    "end": "205060"
  },
  {
    "text": "that so that was us on their little dinghy going to one of the islands it was a",
    "start": "205060",
    "end": "211180"
  },
  {
    "text": "really great conference but one of the the presenters there Rob Ashton was",
    "start": "211180",
    "end": "218109"
  },
  {
    "text": "talking about the way he builds JavaScript applications he was the same guy that introduced me",
    "start": "218109",
    "end": "224380"
  },
  {
    "text": "to browserify and at the time they it didn't have like web pack wasn't out and",
    "start": "224380",
    "end": "229630"
  },
  {
    "text": "and it wasn't sort of this the es6 module system wasn't out and",
    "start": "229630",
    "end": "234780"
  },
  {
    "text": "had been doing building apps like this for sort of a couple of years now",
    "start": "234780",
    "end": "240000"
  },
  {
    "text": "using browser of fire which uses similar the sort of node module system but it",
    "start": "240000",
    "end": "245980"
  },
  {
    "text": "brings it to the browser we'll talk a bit about that later but this was the first time I'd sort of",
    "start": "245980",
    "end": "251079"
  },
  {
    "text": "really got excited about web development it just made sense to me I often find",
    "start": "251079",
    "end": "256630"
  },
  {
    "text": "that uh I can't I go into a project that I haven't been touching for three six",
    "start": "256630",
    "end": "263710"
  },
  {
    "text": "months and I just start struggling with where the data is going how it actually works",
    "start": "263710",
    "end": "271090"
  },
  {
    "text": "and with reactant and sort of using browserify and these newer sort of techniques it just made sense to me and",
    "start": "271090",
    "end": "278550"
  },
  {
    "text": "one of the things that I think helps us with react it's sort of",
    "start": "278550",
    "end": "285000"
  },
  {
    "text": "it's modeled after well actually I think this quote",
    "start": "285000",
    "end": "292020"
  },
  {
    "text": "describes the tenant in react very well so this is quite by Dykstra the",
    "start": "292020",
    "end": "298680"
  },
  {
    "text": "interesting part here is our powers to visualize processes valving in time a relatively poorly developed so when",
    "start": "298680",
    "end": "306700"
  },
  {
    "text": "thinking about like async code or a single page application that has state distributed state changing over time we",
    "start": "306700",
    "end": "314500"
  },
  {
    "text": "have a really hard time tracking that in our mind that's why things like MVC and",
    "start": "314500",
    "end": "319840"
  },
  {
    "text": "server-side applications are so easy because it's stateless request comes in we build up our model we throw it over",
    "start": "319840",
    "end": "325990"
  },
  {
    "text": "to the view that does the render and it returns super easy to reason about what",
    "start": "325990",
    "end": "331120"
  },
  {
    "text": "is going to be sent back to the client so when facebook we're building reacts",
    "start": "331120",
    "end": "336220"
  },
  {
    "text": "they're kind of like well if we can model get a sort of similar flow to what",
    "start": "336220",
    "end": "341320"
  },
  {
    "text": "we have on the server or even in game design where we just throw away the frame we don't bother trying to update",
    "start": "341320",
    "end": "347349"
  },
  {
    "text": "pixels we just re render the into the game at 60 frames a second based on the",
    "start": "347349",
    "end": "352570"
  },
  {
    "text": "current state of the world we'll have a much simpler programming model so that's where react sort of the",
    "start": "352570",
    "end": "359830"
  },
  {
    "text": "the basis of reactors and if you start thinking about that you've got state and then you have your application projected",
    "start": "359830",
    "end": "368080"
  },
  {
    "text": "from that state you can reason about what's going to happen with your application quite well",
    "start": "368080",
    "end": "374340"
  },
  {
    "text": "so if we have our application state you then simply render that to the",
    "start": "374340",
    "end": "381460"
  },
  {
    "text": "application it's a it's just one pretty much a a pure function that takes",
    "start": "381460",
    "end": "387970"
  },
  {
    "text": "application state and you're rendered application comes out the other side much the same as if using razor in SP",
    "start": "387970",
    "end": "396220"
  },
  {
    "text": "net MVC you just pass your application state to your razor views and then you get a",
    "start": "396220",
    "end": "402849"
  },
  {
    "text": "rendered application out the difference is unlike the client unlike the server",
    "start": "402849",
    "end": "408640"
  },
  {
    "text": "we have to deal with user input and like this state changing over time so the way",
    "start": "408640",
    "end": "415330"
  },
  {
    "text": "react does that is you simply have events events are attached to Dom so",
    "start": "415330",
    "end": "421630"
  },
  {
    "text": "this includes input like typing it could be push messaging if you've got a",
    "start": "421630",
    "end": "428410"
  },
  {
    "text": "server-side likes signal our connection or any sort of external state",
    "start": "428410",
    "end": "435540"
  },
  {
    "text": "and then the in the event handler we produce a new application state which",
    "start": "435540",
    "end": "442210"
  },
  {
    "text": "then we re render so it's a one-way data flow there is no data binding in react",
    "start": "442210",
    "end": "447850"
  },
  {
    "text": "and this actually if you just let go of the fact that I love my data binding I love being able to put these tags that",
    "start": "447850",
    "end": "454390"
  },
  {
    "text": "make no sense and then suddenly all of this stuff magically happens if you let",
    "start": "454390",
    "end": "459730"
  },
  {
    "text": "all that go and just embrace the fact that I can just not worry about syncing up my application state to the",
    "start": "459730",
    "end": "466960"
  },
  {
    "text": "Dom I'll just throw away the entire Dom every time my applications state changes",
    "start": "466960",
    "end": "473080"
  },
  {
    "text": "you can sort of really understand what's what will happen based on the changes of",
    "start": "473080",
    "end": "479470"
  },
  {
    "text": "state makes it easy to test as well let's do a bit of a react 101 we'll just",
    "start": "479470",
    "end": "486070"
  },
  {
    "text": "dive into some code",
    "start": "486070",
    "end": "489000"
  },
  {
    "text": "so one of the biggest problems with react is that you have this huge",
    "start": "491760",
    "end": "497850"
  },
  {
    "text": "ecosystem it really embraces Mon JavaScript tooling so to start today we're not going to we're just going to",
    "start": "497850",
    "end": "504310"
  },
  {
    "text": "write es 5 in the browser not using any fancy extensions or anything",
    "start": "504310",
    "end": "510360"
  },
  {
    "text": "so the initial let me just bump that up can everyone at the back see the code",
    "start": "510360",
    "end": "516960"
  },
  {
    "text": "we're good no I saw it no okay pump it up one more that better",
    "start": "516960",
    "end": "523680"
  },
  {
    "text": "cool so in react you've got an entry point to",
    "start": "523680",
    "end": "528800"
  },
  {
    "text": "your system you've got react Dom render you need something to render it into so",
    "start": "528800",
    "end": "534350"
  },
  {
    "text": "here we're just going document.getelementbyid grabbing a container element which is this div and",
    "start": "534350",
    "end": "539420"
  },
  {
    "text": "then we want to rel this hello something into that",
    "start": "539420",
    "end": "545680"
  },
  {
    "text": "that's the starting point of our application we need a point that reactors going to render itself into",
    "start": "545680",
    "end": "552769"
  },
  {
    "text": "this is one of the interesting things we don't own the Dom so things like jQuery",
    "start": "552769",
    "end": "559550"
  },
  {
    "text": "don't work with react because if you mutate the Dom and react doesn't know",
    "start": "559550",
    "end": "565130"
  },
  {
    "text": "about it things start getting weird because react is expecting to for it to",
    "start": "565130",
    "end": "570709"
  },
  {
    "text": "control the Dom so we'll start off and the first concept we need to understand is an element so",
    "start": "570709",
    "end": "579370"
  },
  {
    "text": "because we actually not react we just stay in JavaScript the whole time we",
    "start": "579880",
    "end": "585560"
  },
  {
    "text": "don't worry about templates we don't worry about having these HTML strings we need some way to create Dom elements the",
    "start": "585560",
    "end": "593149"
  },
  {
    "text": "way we do this is with a create element call so I'm just going to create an h1",
    "start": "593149",
    "end": "598459"
  },
  {
    "text": "element we're going to ignore the second parameter for now and then I'm just",
    "start": "598459",
    "end": "603560"
  },
  {
    "text": "going to go hello in DC cool I'll save that",
    "start": "603560",
    "end": "611769"
  },
  {
    "text": "so if i refresh now I've got hello NDC if I open up the browser dev tools",
    "start": "612790",
    "end": "621040"
  },
  {
    "text": "you can see that I've got my container and then hello NDC has been rendered out",
    "start": "621040",
    "end": "627250"
  },
  {
    "text": "that's pretty cool we're now actually putting something in the Dom",
    "start": "627250",
    "end": "632680"
  },
  {
    "text": "but that's not very useful what we can do is also we can start creating an HTML",
    "start": "632680",
    "end": "639339"
  },
  {
    "text": "hierarchy so if I want to wrap that h1 in it",
    "start": "639339",
    "end": "645850"
  },
  {
    "text": "if I want to wrap it in a div",
    "start": "645850",
    "end": "649870"
  },
  {
    "text": "I can just pass down children like other",
    "start": "658649",
    "end": "663990"
  },
  {
    "text": "children I can either use strengths or elements pass them and compose them together so if we refresh that you can",
    "start": "663990",
    "end": "670589"
  },
  {
    "text": "see under here we've got we've got my div and got the h1 we can",
    "start": "670589",
    "end": "678119"
  },
  {
    "text": "also pass multiple children so I can just go react create element",
    "start": "678119",
    "end": "686240"
  },
  {
    "text": "and refresh now we've got hello NDC reactors awesome so this is how we build up the Dom we just have this javascript",
    "start": "696380",
    "end": "703280"
  },
  {
    "text": "representation of elements we tell react to render them and then it goes and",
    "start": "703280",
    "end": "708320"
  },
  {
    "text": "renders them that's pretty cool but not particularly useful yet",
    "start": "708320",
    "end": "713470"
  },
  {
    "text": "so we'll have a look at this second argument here and we need to be able to put attributes on",
    "start": "713470",
    "end": "720710"
  },
  {
    "text": "our elements so if I want to give this div an ID so I can I can style it I can",
    "start": "720710",
    "end": "728450"
  },
  {
    "text": "just go ID equals hello react if I save",
    "start": "728450",
    "end": "734030"
  },
  {
    "text": "that and have a look at the element again",
    "start": "734030",
    "end": "738400"
  },
  {
    "text": "you can see I've actually got ID hello react so once again we've got a",
    "start": "740320",
    "end": "745520"
  },
  {
    "text": "JavaScript object representation of how to create these elements attributes so",
    "start": "745520",
    "end": "751970"
  },
  {
    "text": "we just here creating JavaScript object the key ends up being the attribute name the value is the value of the attribute",
    "start": "751970",
    "end": "760120"
  },
  {
    "text": "this is kind of not very useful we've just reinvented HTML so what we want to",
    "start": "760780",
    "end": "766760"
  },
  {
    "text": "do is create something that's reusable and this is one where reacts power starts coming in we've got it's a very",
    "start": "766760",
    "end": "773240"
  },
  {
    "text": "component driven system so the next concept we need to understand is we want to create a reusable class so if I go",
    "start": "773240",
    "end": "780650"
  },
  {
    "text": "react dot create class I",
    "start": "780650",
    "end": "785560"
  },
  {
    "text": "then pass it what's called a class specification so this tells react what",
    "start": "786070",
    "end": "791390"
  },
  {
    "text": "my component does it has one function on it which is render",
    "start": "791390",
    "end": "797440"
  },
  {
    "text": "well one required function the result of the render function needs to return a",
    "start": "797440",
    "end": "803900"
  },
  {
    "text": "collection of elements of actually a single element so we'll just move all of",
    "start": "803900",
    "end": "812950"
  },
  {
    "text": "like rendering code into this component",
    "start": "812950",
    "end": "818470"
  },
  {
    "text": "naming conventions will now change that to hello because it's a",
    "start": "818590",
    "end": "823630"
  },
  {
    "text": "constructor like a representation similar in c-sharp you have classes and",
    "start": "823630",
    "end": "828800"
  },
  {
    "text": "then you have instances of classes react create class allows us to create a class",
    "start": "828800",
    "end": "834150"
  },
  {
    "text": "definition which then we need to turn into an element so we can render it so",
    "start": "834150",
    "end": "839520"
  },
  {
    "text": "we'll wrap that with react dot create element",
    "start": "839520",
    "end": "845000"
  },
  {
    "text": "cool so we've now got our application still rendering and we've got a reusable component just to sort of show that it",
    "start": "848180",
    "end": "855420"
  },
  {
    "text": "is reusable we could easily go react dot create",
    "start": "855420",
    "end": "861110"
  },
  {
    "text": "element wrap it in a div and",
    "start": "861110",
    "end": "866420"
  },
  {
    "text": "then we get two of them so we can see that we've actually got reusable components also not very useful we you",
    "start": "873470",
    "end": "880290"
  },
  {
    "text": "can't build an application with this so the next thing we need is some sort of state our applications not useful unless",
    "start": "880290",
    "end": "887370"
  },
  {
    "text": "it can track state so what I want to do is I",
    "start": "887370",
    "end": "895250"
  },
  {
    "text": "need some way something to like trigger this state so I'm going to do is make this div clickable",
    "start": "895250",
    "end": "903440"
  },
  {
    "text": "so the way we actually do event in react is just passing attributes so I can say",
    "start": "908280",
    "end": "914350"
  },
  {
    "text": "unclick function and then whenever I click that will call me",
    "start": "914350",
    "end": "921550"
  },
  {
    "text": "back so it will just go console.log high for the moment I",
    "start": "921550",
    "end": "926670"
  },
  {
    "text": "clicked there actually jump over to the console we can see that has been put out",
    "start": "926670",
    "end": "931960"
  },
  {
    "text": "to the console so react as a synthetic event system on any element we can",
    "start": "931960",
    "end": "937180"
  },
  {
    "text": "attach any event handler and react will make sure take care of all of the browser inconsistencies and things that",
    "start": "937180",
    "end": "943690"
  },
  {
    "text": "we used to using jQuery and other libraries for react normalizes all of",
    "start": "943690",
    "end": "949480"
  },
  {
    "text": "those things you'll notice the naming convention is also not the same as",
    "start": "949480",
    "end": "955300"
  },
  {
    "text": "JavaScript react because it owns everything has taken the opportunity to just normalize all of the naming so for",
    "start": "955300",
    "end": "963130"
  },
  {
    "text": "all properties and events you can just use pascal casing and it's all happy so",
    "start": "963130",
    "end": "969400"
  },
  {
    "text": "now that we've we're doing this on click I want to actually I want my component",
    "start": "969400",
    "end": "975550"
  },
  {
    "text": "to have some sort of state so we want to start with our hello",
    "start": "975550",
    "end": "980740"
  },
  {
    "text": "component having some sort of initial state so we just go get initial State",
    "start": "980740",
    "end": "987510"
  },
  {
    "text": "this is another function and we need to return an object",
    "start": "987510",
    "end": "993240"
  },
  {
    "text": "so I'm just going to track the number of clicks that has happened in my",
    "start": "993240",
    "end": "998530"
  },
  {
    "text": "application we then need to update the state so the",
    "start": "998530",
    "end": "1005490"
  },
  {
    "text": "way we do that is using a something called this get statement oh",
    "start": "1005490",
    "end": "1012660"
  },
  {
    "text": "sorry set state can anyone see a problem with what I'm",
    "start": "1012660",
    "end": "1019200"
  },
  {
    "text": "doing right now with the callback handler here yep exactly",
    "start": "1019200",
    "end": "1025680"
  },
  {
    "text": "so JavaScript has funky scoping so this function here is going to have its own",
    "start": "1025680",
    "end": "1032250"
  },
  {
    "text": "scope that's what we want to do is raise this up to our class level and just have a click handler",
    "start": "1032250",
    "end": "1039689"
  },
  {
    "text": "which is our function",
    "start": "1039690",
    "end": "1043100"
  },
  {
    "text": "and on-click just calls back clickhandler",
    "start": "1046610",
    "end": "1051680"
  },
  {
    "text": "so now click handler we want to update our state now we could do this",
    "start": "1051680",
    "end": "1058040"
  },
  {
    "text": "state dot clicks plus plus but this is going to cause us no end of",
    "start": "1058040",
    "end": "1065550"
  },
  {
    "text": "problems because react wants to own the state it wants to understand the state and as I was saying before we want to",
    "start": "1065550",
    "end": "1073410"
  },
  {
    "text": "create a new application state not modify the old application state so",
    "start": "1073410",
    "end": "1078600"
  },
  {
    "text": "that's what this set state thing does we can just specify what parts of the state we want to update so I'm just going to",
    "start": "1078600",
    "end": "1085230"
  },
  {
    "text": "use the existing clicks and add one I then want to render something so I'm",
    "start": "1085230",
    "end": "1090900"
  },
  {
    "text": "just going to go plus put a space after there and go this start States State",
    "start": "1090900",
    "end": "1096720"
  },
  {
    "text": "clicks",
    "start": "1096720",
    "end": "1099320"
  },
  {
    "text": "cool so I'm now rendering I'm using the state in my render and then when I click",
    "start": "1107970",
    "end": "1115000"
  },
  {
    "text": "I call set state which then re renders the entire application",
    "start": "1115000",
    "end": "1120330"
  },
  {
    "text": "essentially so that's Hillary react that's most of",
    "start": "1120330",
    "end": "1125680"
  },
  {
    "text": "the components you need to understand there's a couple of things we haven't covered like props which we'll cover",
    "start": "1125680",
    "end": "1132190"
  },
  {
    "text": "right now so with this create health element hello if I want to say okay I",
    "start": "1132190",
    "end": "1138850"
  },
  {
    "text": "want hello to say who I'm saying hello to so I want to replace this in DC with I passed that in",
    "start": "1138850",
    "end": "1147340"
  },
  {
    "text": "as of a parameter so I'm gonna go hello name",
    "start": "1147340",
    "end": "1154200"
  },
  {
    "text": "I'm sure you change that to this stop props dot name",
    "start": "1155700",
    "end": "1162960"
  },
  {
    "text": "calling set state so the question was what causes it to re-render when you call set state react will basically cue",
    "start": "1163920",
    "end": "1172270"
  },
  {
    "text": "up the fact that some application state has changed and then it will rerender it",
    "start": "1172270",
    "end": "1177390"
  },
  {
    "text": "you're not in control of when it rear Enders so react does some nice things",
    "start": "1177390",
    "end": "1182680"
  },
  {
    "text": "with batching changes to make sure it only does one rerender pass question up the back",
    "start": "1182680",
    "end": "1190679"
  },
  {
    "text": "the question was what who calls the initialized state reactor does so we",
    "start": "1194890",
    "end": "1200320"
  },
  {
    "text": "have this class definition and there's particular life cycle methods in there",
    "start": "1200320",
    "end": "1206830"
  },
  {
    "text": "I'll cover that in just a minute but reactor takes care of initializing that",
    "start": "1206830",
    "end": "1212170"
  },
  {
    "text": "class for you and calling the different rare life cycle methods so here I want to pass in name and I'll",
    "start": "1212170",
    "end": "1220150"
  },
  {
    "text": "put make this NDC so and then when i re-render i've got",
    "start": "1220150",
    "end": "1226179"
  },
  {
    "text": "hello mbc so if i pass attributes to when i'm creating an element those are",
    "start": "1226179",
    "end": "1232660"
  },
  {
    "text": "available on the props collection so that's how these different components interact you simply have one prop what",
    "start": "1232660",
    "end": "1240309"
  },
  {
    "text": "are one component which initializes a bunch of children child components and it this parent one normally has state",
    "start": "1240309",
    "end": "1247660"
  },
  {
    "text": "and it passes the state down as props so you get this nice data flow state exists",
    "start": "1247660",
    "end": "1253630"
  },
  {
    "text": "at the top and then just flows down through all of these components",
    "start": "1253630",
    "end": "1259049"
  },
  {
    "text": "it's not immediately obvious why this is useful but we'll we'll get to that",
    "start": "1259049",
    "end": "1265830"
  },
  {
    "text": "so it was a bit of react 101 with that you understand how reactor works",
    "start": "1266160",
    "end": "1271630"
  },
  {
    "text": "essentially question",
    "start": "1271630",
    "end": "1275880"
  },
  {
    "text": "so the question was if I have hundreds of components and I need to pass down hundreds of props I'm gonna it's",
    "start": "1286990",
    "end": "1293780"
  },
  {
    "text": "obviously going to be quite large there's some patterns that we will see lit towards the end which will cover",
    "start": "1293780",
    "end": "1299810"
  },
  {
    "text": "that so there's a couple of concepts that we've covered a react element is a",
    "start": "1299810",
    "end": "1305390"
  },
  {
    "text": "representation of what we want to render a react class gives us a class definition we can create an element from",
    "start": "1305390",
    "end": "1313520"
  },
  {
    "text": "a class we then have props and state and we've also seen the synthetic event",
    "start": "1313520",
    "end": "1319460"
  },
  {
    "text": "system so the building blocks have react there's this is the part that everyone",
    "start": "1319460",
    "end": "1325280"
  },
  {
    "text": "when they first see it everyone there's this concept called JSX and it's first time anyone sees JSX they're like oh my",
    "start": "1325280",
    "end": "1331910"
  },
  {
    "text": "god this is horrible so we've got our hello world component here which we we",
    "start": "1331910",
    "end": "1337880"
  },
  {
    "text": "saw this is pretty nasty really I thought if",
    "start": "1337880",
    "end": "1344150"
  },
  {
    "text": "you've got a hierarchy of different function calls you end up with this close close close close close of",
    "start": "1344150",
    "end": "1350930"
  },
  {
    "text": "presence JSX is the solution to this and it's completely opt-in so you can",
    "start": "1350930",
    "end": "1357020"
  },
  {
    "text": "continue writing your react code like that or we can turn those function calls",
    "start": "1357020",
    "end": "1362210"
  },
  {
    "text": "into pretty much XML elements so react create element we can just replace that",
    "start": "1362210",
    "end": "1368030"
  },
  {
    "text": "with a div tag these two are exactly the same JSX is",
    "start": "1368030",
    "end": "1373850"
  },
  {
    "text": "just a compilation step which turns the code on the right into the code on the",
    "start": "1373850",
    "end": "1378860"
  },
  {
    "text": "left transparently XML is really good for a hierarchical",
    "start": "1378860",
    "end": "1384110"
  },
  {
    "text": "data because it's balanced it works well it's easy to scan you can see the different levels of of sort of how deep",
    "start": "1384110",
    "end": "1392180"
  },
  {
    "text": "your nesting is going and that sort of thing so JSX simply allows you to work in a familiar way but still be writing",
    "start": "1392180",
    "end": "1400310"
  },
  {
    "text": "essentially JavaScript it's just a compilation time helper and it really",
    "start": "1400310",
    "end": "1405470"
  },
  {
    "text": "makes your code easier to understand yes I",
    "start": "1405470",
    "end": "1412359"
  },
  {
    "text": "will get to that in just a minute so one of the things I like to think about",
    "start": "1412359",
    "end": "1418609"
  },
  {
    "text": "is when you get to JSX it's kind of the weird al' kind of weird not the jar jar",
    "start": "1418609",
    "end": "1423889"
  },
  {
    "text": "binks everyone hates kind of weird I thought this was a good analogy because when you first start you're like not so",
    "start": "1423889",
    "end": "1430669"
  },
  {
    "text": "sure I like this but it really does grow on you the next thing is sort of that comes up",
    "start": "1430669",
    "end": "1436759"
  },
  {
    "text": "as mmm that's really ruining my separation of concerns I kind of like my mvvm style architecture where I've got",
    "start": "1436759",
    "end": "1444289"
  },
  {
    "text": "my my view model and I've got my view and I it makes it easy to test well the",
    "start": "1444289",
    "end": "1451159"
  },
  {
    "text": "thing is that those two things are always really tightly coupled majority of the time you're chair making changes",
    "start": "1451159",
    "end": "1458119"
  },
  {
    "text": "to a view model because you want to display some more stuff in your view and you're nearly always making those",
    "start": "1458119",
    "end": "1464509"
  },
  {
    "text": "changes at the same time also with web we've been forced to like",
    "start": "1464509",
    "end": "1471619"
  },
  {
    "text": "keep these things separate because we have different technologies we have HTML 4 markup we've got CSS 4 styles we have",
    "start": "1471619",
    "end": "1480009"
  },
  {
    "text": "JavaScript for our application behavior those technical that so we've been forced to keep them separate reiax gone",
    "start": "1480009",
    "end": "1488149"
  },
  {
    "text": "well they're all kind of the same thing they all want I've got I just want to",
    "start": "1488149",
    "end": "1493580"
  },
  {
    "text": "show something on the screen I want to apply some classes and styles to it let's just represent all of that in",
    "start": "1493580",
    "end": "1500179"
  },
  {
    "text": "JavaScript and there's some really cool side effects that that has",
    "start": "1500179",
    "end": "1505809"
  },
  {
    "text": "so when everything is JavaScript you can just sort of go we don't need a templating language you don't need to go",
    "start": "1505989",
    "end": "1513409"
  },
  {
    "text": "learn what like round brackets the square brackets are in your templates",
    "start": "1513409",
    "end": "1518690"
  },
  {
    "text": "you don't need a sort of have to translate between sort of the naming of",
    "start": "1518690",
    "end": "1525019"
  },
  {
    "text": "directives and the in when you declare them verse attributes and then you don't",
    "start": "1525019",
    "end": "1531619"
  },
  {
    "text": "need to sort of go okay well in angular 2 we're using sort of the or Aurelia",
    "start": "1531619",
    "end": "1537109"
  },
  {
    "text": "we're using the es6 string interpolation style but in angular 2 it's like a the",
    "start": "1537109",
    "end": "1542330"
  },
  {
    "text": "squid double squigglies all these different templating languages we're just inventing a new way of solve",
    "start": "1542330",
    "end": "1550310"
  },
  {
    "text": "problem so we're creating these dear cells to specify bindings and when they",
    "start": "1550310",
    "end": "1557090"
  },
  {
    "text": "don't have enough power we add more features and that sort of stuff we can just with react everything is JavaScript",
    "start": "1557090",
    "end": "1562880"
  },
  {
    "text": "we don't have to worry about learning a new templating language add language and because it's a programming language if",
    "start": "1562880",
    "end": "1569990"
  },
  {
    "text": "we want to refactor our render method because it's all just JavaScript if I've",
    "start": "1569990",
    "end": "1575570"
  },
  {
    "text": "got a bunch of JSX I can just pull that out and assign that to a variable and",
    "start": "1575570",
    "end": "1580910"
  },
  {
    "text": "just use normal refactoring techniques pull it out to a method however you normally clean up your your code you can",
    "start": "1580910",
    "end": "1587780"
  },
  {
    "text": "do exactly the same thing to your rendering code now there's also with react because we're",
    "start": "1587780",
    "end": "1595490"
  },
  {
    "text": "already in JavaScript when there's no pausing step so we don't have any chance of sort of cross-site scripting issues",
    "start": "1595490",
    "end": "1601850"
  },
  {
    "text": "everything is automatically encoded if we have strings that are in JSX there's",
    "start": "1601850",
    "end": "1607640"
  },
  {
    "text": "no way that we can just accidentally execute stuff so react has one way of",
    "start": "1607640",
    "end": "1613730"
  },
  {
    "text": "allowing you to say just render this block of text and it's like dangerously",
    "start": "1613730",
    "end": "1619610"
  },
  {
    "text": "set inner HTML and then you passed that that's the only way to tell react okay I",
    "start": "1619610",
    "end": "1625280"
  },
  {
    "text": "actually don't want you to encode everything it makes it pretty clear that you shouldn't do that so the heap of",
    "start": "1625280",
    "end": "1632240"
  },
  {
    "text": "advantages to having everything in JavaScript and then it's up to you to how you separate",
    "start": "1632240",
    "end": "1638540"
  },
  {
    "text": "your concerns you can just break out more components do similar to in your",
    "start": "1638540",
    "end": "1643820"
  },
  {
    "text": "JavaScript or whatever programming language is your favorite when something gets big you refactor it into smaller",
    "start": "1643820",
    "end": "1650120"
  },
  {
    "text": "classes use composition rather than rather than artificially separating",
    "start": "1650120",
    "end": "1656030"
  },
  {
    "text": "these two things that are separated and a lot of people have found value in this",
    "start": "1656030",
    "end": "1661700"
  },
  {
    "text": "you can see that with angular 2 now the recommended way to do templates is you",
    "start": "1661700",
    "end": "1667310"
  },
  {
    "text": "just have a decorator and you have your template attached to the component so they're in the same file that adds a lot",
    "start": "1667310",
    "end": "1673640"
  },
  {
    "text": "of complexity because then you don't get syntax highlighting and",
    "start": "1673640",
    "end": "1678679"
  },
  {
    "text": "intellisense so what the angular team are doing is they've written their own",
    "start": "1678679",
    "end": "1683929"
  },
  {
    "text": "parsers to sort of give you intellisense in HTML in time in a string and that and",
    "start": "1683929",
    "end": "1690350"
  },
  {
    "text": "then you have to like turn those templates into code so now we need an",
    "start": "1690350",
    "end": "1695660"
  },
  {
    "text": "offline compiler to compile our angular templates into javascript so they can be executed by angular 2 or we have to ship",
    "start": "1695660",
    "end": "1703460"
  },
  {
    "text": "a template compiler to our application and do that all in the browser",
    "start": "1703460",
    "end": "1708490"
  },
  {
    "text": "react simply just keeps it all this JavaScript let's just if we declare",
    "start": "1708490",
    "end": "1713570"
  },
  {
    "text": "everything as JavaScript we don't have these parsing steps to answer your question JSX is not react specific",
    "start": "1713570",
    "end": "1722380"
  },
  {
    "text": "it's just an extension to JavaScript it's not a standard but it's just an extension to JavaScript",
    "start": "1722380",
    "end": "1730640"
  },
  {
    "text": "which gets transpired so if we have this bit of JSX here div class name this is I",
    "start": "1730640",
    "end": "1736280"
  },
  {
    "text": "wanted to call this one out because it's a bit different class and for a reserved",
    "start": "1736280",
    "end": "1743030"
  },
  {
    "text": "keywords in JavaScript so you have to have HTML 4 or class name they're the",
    "start": "1743030",
    "end": "1748429"
  },
  {
    "text": "only two but we've got this bit of J's sex so if we have a react flavored JSX",
    "start": "1748429",
    "end": "1754100"
  },
  {
    "text": "when it compiled trans files it will get react create element if we use say the",
    "start": "1754100",
    "end": "1759799"
  },
  {
    "text": "hyper Script flavor we'll get h div class name foo high so it's just a way",
    "start": "1759799",
    "end": "1767270"
  },
  {
    "text": "of turning XML tags into JavaScript so typescript also supports JSX now and",
    "start": "1767270",
    "end": "1774559"
  },
  {
    "text": "they you if you want it you have to say flavor react and then it'll actually",
    "start": "1774559",
    "end": "1780169"
  },
  {
    "text": "transpile it it's just been made popular but it is being used in other languages how does",
    "start": "1780169",
    "end": "1787280"
  },
  {
    "text": "this how does this actually differ from something like handlebars where I've got",
    "start": "1787280",
    "end": "1792500"
  },
  {
    "text": "a template which I compile to a function and then I just passed my model and then HTML comes out the other side",
    "start": "1792500",
    "end": "1799510"
  },
  {
    "text": "re-rendering your entire application in every time something changes seems really expensive and slow right so in",
    "start": "1799510",
    "end": "1807590"
  },
  {
    "text": "handlebars we've got our application state or our model when we've passed handlebars Dom pops out the other side",
    "start": "1807590",
    "end": "1815380"
  },
  {
    "text": "say that changes the entire Dom gets rear-ended this has a number of problems",
    "start": "1815380",
    "end": "1821269"
  },
  {
    "text": "one say yes you've got a scroll position or you focused on an input the browser",
    "start": "1821269",
    "end": "1827330"
  },
  {
    "text": "trashes the entire DOM and then re-renders it so any sort of transient state that is in the Dom like key",
    "start": "1827330",
    "end": "1834529"
  },
  {
    "text": "presses like focus and typed like data that's in inputs if we're not",
    "start": "1834529",
    "end": "1841669"
  },
  {
    "text": "careful we lose all of that react has something called the virtual Dom so instead of rendering directly",
    "start": "1841669",
    "end": "1850010"
  },
  {
    "text": "from our model into the Dom react has an intermediate state called the virtual",
    "start": "1850010",
    "end": "1855830"
  },
  {
    "text": "Dom the virtual Dom react takes care of",
    "start": "1855830",
    "end": "1861049"
  },
  {
    "text": "turning that which is a JavaScript object representation of the Dom all of",
    "start": "1861049",
    "end": "1866210"
  },
  {
    "text": "those elements it takes care of rel rendering that into the real Dom so what",
    "start": "1866210",
    "end": "1872450"
  },
  {
    "text": "happens if our model changes same scenario bit of state changes what",
    "start": "1872450",
    "end": "1878929"
  },
  {
    "text": "react will do is just render a new virtual Dom because this is all in JavaScript really fast it's just",
    "start": "1878929",
    "end": "1885440"
  },
  {
    "text": "building a object hierarchy that's super super fast in react",
    "start": "1885440",
    "end": "1890830"
  },
  {
    "text": "that virtual Dom has one node which is different so what reactor do is then it will diff",
    "start": "1890830",
    "end": "1898130"
  },
  {
    "text": "the old virtual Dom with the new virtual Dom and create a patch",
    "start": "1898130",
    "end": "1903580"
  },
  {
    "text": "that patch is then applied to the real Dom and this is the magic that makes",
    "start": "1903580",
    "end": "1908659"
  },
  {
    "text": "react fast the diffing algorithm to just diff to object hierarchies is a well",
    "start": "1908659",
    "end": "1915529"
  },
  {
    "text": "solved problem and now there's a number of libraries that do this super super",
    "start": "1915529",
    "end": "1921169"
  },
  {
    "text": "efficiently the Dom manipulation is quite expensive so this part here where we're figuring",
    "start": "1921169",
    "end": "1928610"
  },
  {
    "text": "out how to apply the patch smarts can be applied like okay if we",
    "start": "1928610",
    "end": "1933649"
  },
  {
    "text": "use this like append element or if we've got to remove and then add another one",
    "start": "1933649",
    "end": "1939500"
  },
  {
    "text": "well we can actually reuse that same HTML element and just modify it so the",
    "start": "1939500",
    "end": "1945139"
  },
  {
    "text": "patcher can actually do some really really cool stuff and we don't have to worry about it so other other libraries like angular",
    "start": "1945139",
    "end": "1953750"
  },
  {
    "text": "and knockout they use data binding to solve this problem you have the template that gets parsed and it understands okay",
    "start": "1953750",
    "end": "1961130"
  },
  {
    "text": "this the value of this div is this property over there so it has event",
    "start": "1961130",
    "end": "1966230"
  },
  {
    "text": "handlers so as soon as this thing changes it needs to then go out and only",
    "start": "1966230",
    "end": "1971540"
  },
  {
    "text": "update that it's a different way of looking at it like this but the",
    "start": "1971540",
    "end": "1976700"
  },
  {
    "text": "performance benefits and the simplicity is I think really really compelling",
    "start": "1976700",
    "end": "1984070"
  },
  {
    "text": "so then the new virtual Dom becomes the old virtual Dom that becomes the new",
    "start": "1984340",
    "end": "1989510"
  },
  {
    "text": "status quo and then the cycle just goes round and round and round again",
    "start": "1989510",
    "end": "1994690"
  },
  {
    "text": "one thing to note is that the virtual Dom does not is not the same as the",
    "start": "1994690",
    "end": "2000730"
  },
  {
    "text": "shadow DOM shadow Dom let's say you've got a input type of range in different",
    "start": "2000730",
    "end": "2006940"
  },
  {
    "text": "browsers you get a nice slider or little plus and minus arrows that's a complex",
    "start": "2006940",
    "end": "2013890"
  },
  {
    "text": "input there's actually a bunch of HTML that comprises that makes up that range",
    "start": "2013890",
    "end": "2020560"
  },
  {
    "text": "but we don't see it if we could try and go to the child element of the input range we see nothing even though there",
    "start": "2020560",
    "end": "2027370"
  },
  {
    "text": "is a bunch of HTML under that that's the shadow Dom that's been in browsers",
    "start": "2027370",
    "end": "2032470"
  },
  {
    "text": "forever we just have access to it now so if we want our component can not show",
    "start": "2032470",
    "end": "2038890"
  },
  {
    "text": "the HTML inside it and also you can scope CSS to a shadow Dom so",
    "start": "2038890",
    "end": "2044880"
  },
  {
    "text": "this is kind of the shadow Dom's the technology that underpins web components",
    "start": "2044880",
    "end": "2050470"
  },
  {
    "text": "and that's very different to the virtual Dom technology that react users to be very very fast",
    "start": "2050470",
    "end": "2057720"
  },
  {
    "text": "so next sort of part of react that I think is just",
    "start": "2058710",
    "end": "2063790"
  },
  {
    "text": "awesome is how explicit the life cycle is so when you initially render your",
    "start": "2063790",
    "end": "2070149"
  },
  {
    "text": "application you get a bunch of state initial state from creating this hierarchy and props that are all flowed",
    "start": "2070150",
    "end": "2077649"
  },
  {
    "text": "down so you build this this hierarchy of those classes",
    "start": "2077650",
    "end": "2083039"
  },
  {
    "text": "then react will tell all of your classes if you define component will mount hey",
    "start": "2083039",
    "end": "2089529"
  },
  {
    "text": "you're about to be mounted into the Dom you are becoming a thing after reactors actually created that",
    "start": "2089529",
    "end": "2097509"
  },
  {
    "text": "element in the Dom it will call component didn't mount so this is useful to create like autofocusing text boxes",
    "start": "2097509",
    "end": "2105039"
  },
  {
    "text": "you hook into this and then you can get the real HTML element and call focus",
    "start": "2105039",
    "end": "2110049"
  },
  {
    "text": "imperatively and then finally when your",
    "start": "2110049",
    "end": "2115059"
  },
  {
    "text": "component is going to be removed because the new render has removed your",
    "start": "2115059",
    "end": "2120970"
  },
  {
    "text": "component reactor will actually tell you hey you're about to be removed from the Dom so it gives you chance to hook into",
    "start": "2120970",
    "end": "2127990"
  },
  {
    "text": "that this makes lifecycle really explicit you can unmount you can create",
    "start": "2127990",
    "end": "2133750"
  },
  {
    "text": "like WebSocket connections or hook into event handlers when you unmount you can",
    "start": "2133750",
    "end": "2140109"
  },
  {
    "text": "clean all of that stuff up makes it really easy to understand what's happening",
    "start": "2140109",
    "end": "2145470"
  },
  {
    "text": "then we see state changes which then causes props to flow down",
    "start": "2145470",
    "end": "2153180"
  },
  {
    "text": "when that happens if any of those attributes change values react will call",
    "start": "2153269",
    "end": "2160059"
  },
  {
    "text": "component will receive props so when you go that you make that class definition",
    "start": "2160059",
    "end": "2166470"
  },
  {
    "text": "react uses that to build an instance of your component when it's going to be",
    "start": "2166470",
    "end": "2172539"
  },
  {
    "text": "rendered into the Dom now this is when you do a complete re render what you're",
    "start": "2172539",
    "end": "2178000"
  },
  {
    "text": "saying to react and what you're returning is a bunch of elements they aren't instances so if I have that hello",
    "start": "2178000",
    "end": "2184599"
  },
  {
    "text": "world component when I say create element hello world that doesn't create",
    "start": "2184599",
    "end": "2190450"
  },
  {
    "text": "an instance of my hello world it's only at the point that reactors turning that virtual Dom into real Dom that all",
    "start": "2190450",
    "end": "2197950"
  },
  {
    "text": "realize that element into a real instance so that means as we do multiple",
    "start": "2197950",
    "end": "2205079"
  },
  {
    "text": "virtual Dom murray renders it can keep that same instance alive over multiple",
    "start": "2205079",
    "end": "2212230"
  },
  {
    "text": "re-renders of our location and then simply say you're going to be removed",
    "start": "2212230",
    "end": "2217600"
  },
  {
    "text": "when it gets removed from the virtual Dom it makes sense to everyone cool getting some knots so because we've got",
    "start": "2217600",
    "end": "2224950"
  },
  {
    "text": "one instance that lives over multiple render passes props can change over time",
    "start": "2224950",
    "end": "2230500"
  },
  {
    "text": "those attributes so that says component will receive props we then have this",
    "start": "2230500",
    "end": "2235690"
  },
  {
    "text": "should component update this is one of the amazing performance tweaks you can",
    "start": "2235690",
    "end": "2241690"
  },
  {
    "text": "sort of get into when you have performance rendering issues which while",
    "start": "2241690",
    "end": "2248080"
  },
  {
    "text": "I was working in London were working for a finance institution and we built a proof-of-concept which had a large grid",
    "start": "2248080",
    "end": "2255490"
  },
  {
    "text": "of ticking prices and the institutions like well we sometimes",
    "start": "2255490",
    "end": "2261100"
  },
  {
    "text": "have a burst of prices we want to make sure that your UI handles it so they",
    "start": "2261100",
    "end": "2266200"
  },
  {
    "text": "wanted us to handle about 300 prices a second when we first built this grid",
    "start": "2266200",
    "end": "2272010"
  },
  {
    "text": "there was about a four second lag between when you clicked on something and you'd actually get that event",
    "start": "2272010",
    "end": "2278080"
  },
  {
    "text": "handled that was how far we were behind rendering so we did is the data we version dat rose and it sells we use",
    "start": "2278080",
    "end": "2286360"
  },
  {
    "text": "this should component update for our row component and we simply saw that when we",
    "start": "2286360",
    "end": "2292330"
  },
  {
    "text": "got the new data we just check the version property on that data if it was the same we return false then react just",
    "start": "2292330",
    "end": "2300340"
  },
  {
    "text": "stops re-rendering that entire subtree and just says nope that the result of a",
    "start": "2300340",
    "end": "2306970"
  },
  {
    "text": "rerender will be the same as if i caught like re-rendered so this is a massive",
    "start": "2306970",
    "end": "2312220"
  },
  {
    "text": "performance optimization because we could just every row that didn't have a price update would just go nope nope",
    "start": "2312220",
    "end": "2318910"
  },
  {
    "text": "nope nope nope and then we would have a really really fast rerender and we went from having a four second delay on",
    "start": "2318910",
    "end": "2325420"
  },
  {
    "text": "clicking to rendering at 60fps in about an hour",
    "start": "2325420",
    "end": "2330690"
  },
  {
    "text": "I've had similar performance problems in other applications and it certainly takes a lot longer to to sort of get",
    "start": "2330690",
    "end": "2337840"
  },
  {
    "text": "through after you've said yes to that or if you",
    "start": "2337840",
    "end": "2344560"
  },
  {
    "text": "haven't implemented react we'll say your can opponent is going to update and",
    "start": "2344560",
    "end": "2350070"
  },
  {
    "text": "then it will call render after it's finished render it said",
    "start": "2350070",
    "end": "2355990"
  },
  {
    "text": "component did update so this sort of if you do need to do stuff to the Dom like",
    "start": "2355990",
    "end": "2361180"
  },
  {
    "text": "you want to control your component so you have a jQuery control you can",
    "start": "2361180",
    "end": "2366580"
  },
  {
    "text": "actually use this lifecycle to go and basically tell react I want to own the",
    "start": "2366580",
    "end": "2373150"
  },
  {
    "text": "Dom under this and then you can use jQuery to update bits and pieces so you",
    "start": "2373150",
    "end": "2378160"
  },
  {
    "text": "can use these life cycles to sort of interrupt with the old way of doing things if you really really want to",
    "start": "2378160",
    "end": "2385590"
  },
  {
    "text": "state changed is pretty much the same thing when we call set state it will",
    "start": "2385590",
    "end": "2391150"
  },
  {
    "text": "call should component update component will update render and then component",
    "start": "2391150",
    "end": "2396430"
  },
  {
    "text": "did update so this is what causes the re render cycle either pre props changing or state",
    "start": "2396430",
    "end": "2403480"
  },
  {
    "text": "changing react version 14 or 15 I forget what it",
    "start": "2403480",
    "end": "2410170"
  },
  {
    "text": "was introduced something called stateless components so we saw that when we created that react to create class we",
    "start": "2410170",
    "end": "2417400"
  },
  {
    "text": "had to create a class definition this is kind of heavy because react has to track",
    "start": "2417400",
    "end": "2422500"
  },
  {
    "text": "that lifecycle for that component when is it going to be created when it's going to be destroyed takes care of",
    "start": "2422500",
    "end": "2428080"
  },
  {
    "text": "letting you know when stuff is going to change they introduced these stateless components which is simply a function",
    "start": "2428080",
    "end": "2434140"
  },
  {
    "text": "that takes a bunch of props and then it returns a virtual Dom this makes it",
    "start": "2434140",
    "end": "2440170"
  },
  {
    "text": "really easy to refactor your application if I want to create a new reusable component pull it out to a function give",
    "start": "2440170",
    "end": "2448420"
  },
  {
    "text": "it a name and now I can just use that I can compose that in other parts of my",
    "start": "2448420",
    "end": "2454090"
  },
  {
    "text": "application I'll show you a more complex example of that pretty soon",
    "start": "2454090",
    "end": "2459839"
  },
  {
    "text": "react also has something called prop types reacts debugging ability and sort",
    "start": "2461369",
    "end": "2466950"
  },
  {
    "text": "of dev helpers are just amazing it took because it owns the DOM and it's",
    "start": "2466950",
    "end": "2472710"
  },
  {
    "text": "rendering to the Dom if you say put elements out of order so use a table but",
    "start": "2472710",
    "end": "2479400"
  },
  {
    "text": "you just put a excel and don't have a row it'll tell you hmm I wasn't expecting that particular hierarchy you",
    "start": "2479400",
    "end": "2486539"
  },
  {
    "text": "probably missed this we can also use something called prop types so if our component is expecting",
    "start": "2486539",
    "end": "2494130"
  },
  {
    "text": "you to pass down props we can declare what properties we want so down here you",
    "start": "2494130",
    "end": "2499950"
  },
  {
    "text": "just say hello world dot prop types I expect two things click and clicks I",
    "start": "2499950",
    "end": "2505979"
  },
  {
    "text": "think I actually said yeah clicks clicked and clicks that's wrong but",
    "start": "2505979",
    "end": "2511200"
  },
  {
    "text": "anyway clicked should be a function and clicks is a number if I get that wrong",
    "start": "2511200",
    "end": "2519059"
  },
  {
    "text": "react will actually throw out a warning into the console that says failed prop type required prop click was not",
    "start": "2519059",
    "end": "2526109"
  },
  {
    "text": "specified in hello world it then gives you the hierarchy of who created that so",
    "start": "2526109",
    "end": "2532019"
  },
  {
    "text": "that allows us to sort of get runtime typing and that's not too bad we'll see",
    "start": "2532019",
    "end": "2537059"
  },
  {
    "text": "how typescript can actually make that better a bit later but that's essentially react you've",
    "start": "2537059",
    "end": "2543869"
  },
  {
    "text": "learnt pretty much the entire library I think it's the fact that you can learn",
    "start": "2543869",
    "end": "2550440"
  },
  {
    "text": "it in that amount of time just shows how simple it is the problem is the rest of the ecosystem",
    "start": "2550440",
    "end": "2559880"
  },
  {
    "text": "so in terms of the pluses I find react super fast it's really flexible simple",
    "start": "2559880",
    "end": "2566089"
  },
  {
    "text": "there's a heap of reusable UI components now because everything is componentized",
    "start": "2566089",
    "end": "2573049"
  },
  {
    "text": "there's heaps of components on NPM just go searching there's like grids and all",
    "start": "2573049",
    "end": "2579299"
  },
  {
    "text": "sorts of stuff if you love your data grids it makes it really understand data",
    "start": "2579299",
    "end": "2585210"
  },
  {
    "text": "flow because we're flowing props down we're then raising events back up everything is quite explicit it's just a",
    "start": "2585210",
    "end": "2592529"
  },
  {
    "text": "library and I find this less framework learning everything is JavaScript it's pretty cool the downsides are it's not a",
    "start": "2592529",
    "end": "2599819"
  },
  {
    "text": "framework reactors just a library it doesn't take care of the entire application that you need to build so",
    "start": "2599819",
    "end": "2607140"
  },
  {
    "text": "you have to make more decisions yourself it's also less opinionated they really",
    "start": "2607140",
    "end": "2613170"
  },
  {
    "text": "wanted to keep the opinions out you can find plenty of those there's lots and lots of blog posts but Facebook",
    "start": "2613170",
    "end": "2620099"
  },
  {
    "text": "themselves wanted to kind of stay less opinionated but the biggest downside is it embraces",
    "start": "2620099",
    "end": "2628140"
  },
  {
    "text": "new tooling and this raises the barrier to entry you massively the angular to",
    "start": "2628140",
    "end": "2633809"
  },
  {
    "text": "talk yesterday talked about this because angular 2 has exactly the same problem",
    "start": "2633809",
    "end": "2640280"
  },
  {
    "text": "one last thing I wanted to cover in terms of react itself before I go into the touch on the grater ecosystem is",
    "start": "2640760",
    "end": "2648680"
  },
  {
    "text": "data flow so one of the patterns you tend to find in react applications is",
    "start": "2648680",
    "end": "2654140"
  },
  {
    "text": "something called container or smart components and you want to have one of those quite close to the top of your",
    "start": "2654140",
    "end": "2660900"
  },
  {
    "text": "application that contains all of your state and business logic but it contains no JSX that actually is HTML elements",
    "start": "2660900",
    "end": "2669990"
  },
  {
    "text": "it's all about your logical the way your app works it then shells out to stateless or dumb",
    "start": "2669990",
    "end": "2678119"
  },
  {
    "text": "components and passes props so those dumb components are basically responsible for rendering so you've two",
    "start": "2678119",
    "end": "2685349"
  },
  {
    "text": "sides you have these components which are all at your application level they're smart they understand your",
    "start": "2685349",
    "end": "2691410"
  },
  {
    "text": "business logic you then have a bunch of these small reusable components everywhere that don't know anything",
    "start": "2691410",
    "end": "2697440"
  },
  {
    "text": "about your application but are responsible for rendering so you've got a a massive tree of those",
    "start": "2697440",
    "end": "2704660"
  },
  {
    "text": "props are flowing down so you can see exactly how data is flowing down through your system and",
    "start": "2704660",
    "end": "2711079"
  },
  {
    "text": "then you want to be able to handle a click event but you have no state in",
    "start": "2711079",
    "end": "2716609"
  },
  {
    "text": "these components so what happens is you just bubble those events up passing it through the different layers back to",
    "start": "2716609",
    "end": "2723329"
  },
  {
    "text": "your smart component and then that understands what to do with that that might execute an API request might",
    "start": "2723329",
    "end": "2729210"
  },
  {
    "text": "update some state and in the case that it updates the state the props just flow",
    "start": "2729210",
    "end": "2734220"
  },
  {
    "text": "back down again so it's very explicit dataflow I want to show you a bit bigger example of",
    "start": "2734220",
    "end": "2741420"
  },
  {
    "text": "that so I've got this",
    "start": "2741420",
    "end": "2746510"
  },
  {
    "text": "application called urban plate my brother quite enjoys doing cooking and things and wanted to me to build him a",
    "start": "2746510",
    "end": "2753570"
  },
  {
    "text": "bit of a recipe site so I wanted to just go into one of these and show you what a reactor II looks",
    "start": "2753570",
    "end": "2761340"
  },
  {
    "text": "like and how data flows through so we've just got a Hawaiian Hawaiian pizza",
    "start": "2761340",
    "end": "2766920"
  },
  {
    "text": "recipe so I want to just go recipe view",
    "start": "2766920",
    "end": "2773030"
  },
  {
    "text": "view recipe so react has because we've got the virtual Dom you can install the react",
    "start": "2773120",
    "end": "2780090"
  },
  {
    "text": "dev tools and actually see what our component hierarchy is not yet they're",
    "start": "2780090",
    "end": "2785340"
  },
  {
    "text": "rendered HTML so I've got this view recipe component here",
    "start": "2785340",
    "end": "2790970"
  },
  {
    "text": "bump that up for everyone and you can see that it's got all of these props",
    "start": "2792710",
    "end": "2798210"
  },
  {
    "text": "that are passed to it it also has some state because I can click here and",
    "start": "2798210",
    "end": "2803670"
  },
  {
    "text": "modify the number of Serbs and then that all flows back down so under here",
    "start": "2803670",
    "end": "2809810"
  },
  {
    "text": "I've got recipe headlines which are all the things at the top and I have the recipe",
    "start": "2809810",
    "end": "2815450"
  },
  {
    "text": "if I go into the headlines I've got these components which represent each of",
    "start": "2815450",
    "end": "2820590"
  },
  {
    "text": "these things and you can see on the right the props are just flowing down so all of these are all dumb components I",
    "start": "2820590",
    "end": "2827910"
  },
  {
    "text": "just have this new recipe up the top it understands what a recipe is and then it just passes props down to everything so",
    "start": "2827910",
    "end": "2835650"
  },
  {
    "text": "it gives you a massive level of composition the code for that is really simple",
    "start": "2835650",
    "end": "2841910"
  },
  {
    "text": "so if I'm having fun there you speak",
    "start": "2854460",
    "end": "2861180"
  },
  {
    "text": "so you can see here this is my render method I can just directly each of these",
    "start": "2861690",
    "end": "2867820"
  },
  {
    "text": "things I import that component and then I can just use it",
    "start": "2867820",
    "end": "2874530"
  },
  {
    "text": "that's composition in react I'm just composing these components together I",
    "start": "2874530",
    "end": "2879640"
  },
  {
    "text": "can have a hierarchy of no there's a apart from the h1 there's no real Dom or",
    "start": "2879640",
    "end": "2885940"
  },
  {
    "text": "rendering responsibilities in here I'm keeping a tall application level the rendering side of it is just a dumb",
    "start": "2885940",
    "end": "2892420"
  },
  {
    "text": "component somewhere down in that tree means you can really understand what's",
    "start": "2892420",
    "end": "2897910"
  },
  {
    "text": "happening in your application and how how the data flows how it's structured makes it super easy to refactor as well",
    "start": "2897910",
    "end": "2906599"
  },
  {
    "text": "so the problem comes and the hard where",
    "start": "2908520",
    "end": "2913630"
  },
  {
    "text": "it makes it hard is the es6 modules and the modern JavaScript tooling",
    "start": "2913630",
    "end": "2920550"
  },
  {
    "text": "it embraces modern JavaScript and so you see nearly every boilerplate and every",
    "start": "2920550",
    "end": "2926740"
  },
  {
    "text": "sort of sample is using es6 it's got webpack in there it's got all of these things that if you're coming from",
    "start": "2926740",
    "end": "2932980"
  },
  {
    "text": "angular 1 its massive learning curve so the other thing is modern web dev",
    "start": "2932980",
    "end": "2941020"
  },
  {
    "text": "actually has some really really cool things so there's a reason they're embracing it I want to quickly show you",
    "start": "2941020",
    "end": "2947380"
  },
  {
    "text": "back to this recipe list so the recipe list here",
    "start": "2947380",
    "end": "2954330"
  },
  {
    "text": "we go back you can see it's not styled very well",
    "start": "2955590",
    "end": "2961849"
  },
  {
    "text": "I've just got some hyperlinks and everything sort of smashed together so I want to fix that remember I was",
    "start": "2961849",
    "end": "2969799"
  },
  {
    "text": "saying that everything is JavaScript we've bumped that up for everyone everything is JavaScript so recipes is",
    "start": "2969799",
    "end": "2976400"
  },
  {
    "text": "simply an array which I'm enforcing with the prop types here so if I want to render a list I just go array dot map",
    "start": "2976400",
    "end": "2984170"
  },
  {
    "text": "and then for each recipe I'm rendering a link so what I want to do is I'm not so",
    "start": "2984170",
    "end": "2992449"
  },
  {
    "text": "happy just having a link so what I want to do is actually just go okay I",
    "start": "2992449",
    "end": "2998259"
  },
  {
    "text": "want to create a new component which encapsulates that that doesn't exist",
    "start": "2999489",
    "end": "3005459"
  },
  {
    "text": "notice here I've got es lint telling me this is not defined pretty cool because",
    "start": "3005459",
    "end": "3010959"
  },
  {
    "text": "everything's JavaScript we can just use JavaScript linting",
    "start": "3010959",
    "end": "3015630"
  },
  {
    "text": "so I want to render the recipe using air six here D structuring",
    "start": "3017160",
    "end": "3023818"
  },
  {
    "text": "so I've created a new stateless component that has one prop which is recipe which is then being used to",
    "start": "3029410",
    "end": "3037450"
  },
  {
    "text": "render that if I save that jump back nothing really happens because",
    "start": "3037450",
    "end": "3043740"
  },
  {
    "text": "that's not very interesting I want to wrap it in a div just so at least they're on different lines",
    "start": "3043740",
    "end": "3051240"
  },
  {
    "text": "I'll tab back and then you'll notice hopefully",
    "start": "3051390",
    "end": "3057720"
  },
  {
    "text": "helps if I start things",
    "start": "3058950",
    "end": "3062820"
  },
  {
    "text": "cool let's refresh that I remove these dibs again",
    "start": "3068600",
    "end": "3076630"
  },
  {
    "text": "cool so you can actually see I've got no they're both on one line I'll put the",
    "start": "3076630",
    "end": "3083030"
  },
  {
    "text": "divs back in and save and then a halt tab by the time of alt tabbed it's already applied those changes that's",
    "start": "3083030",
    "end": "3090170"
  },
  {
    "text": "keeping all my current application state something called hot reloading what it's doing is that module has changed so it",
    "start": "3090170",
    "end": "3097700"
  },
  {
    "text": "recompiles that module because I've got babel recompiling things ships that updated file to the browser using",
    "start": "3097700",
    "end": "3105110"
  },
  {
    "text": "WebSockets and then replaces the lake anytime you were calling that module",
    "start": "3105110",
    "end": "3110570"
  },
  {
    "text": "it's replaced that javascript code so now it's executing the new code",
    "start": "3110570",
    "end": "3115720"
  },
  {
    "text": "but we can also do cool things with styles so I'm actually importing here",
    "start": "3115720",
    "end": "3121370"
  },
  {
    "text": "I'm treating a CSS file or it's sass file as a stuff as a module so here I've",
    "start": "3121370",
    "end": "3128390"
  },
  {
    "text": "got a recipe class and notice I'm actually importing a JavaScript object",
    "start": "3128390",
    "end": "3133480"
  },
  {
    "text": "what I want to do is just go class name equals Styles",
    "start": "3133480",
    "end": "3139300"
  },
  {
    "text": "recipe then I'll jump across and have a look at",
    "start": "3139300",
    "end": "3147380"
  },
  {
    "text": "these and you'll notice there's a class name with a generated big generated name",
    "start": "3147380",
    "end": "3153220"
  },
  {
    "text": "that's something called CSS modules so that gives us scoped CSS for our",
    "start": "3153220",
    "end": "3158480"
  },
  {
    "text": "components that's pretty nifty we also get hot reload so I can go background is",
    "start": "3158480",
    "end": "3165170"
  },
  {
    "text": "green because that's how you do bug in CSS and then you get something that's",
    "start": "3165170",
    "end": "3172580"
  },
  {
    "text": "horrible like that but we get also hot reloading there is to ship the CSS to the browser so these are the sort of",
    "start": "3172580",
    "end": "3178220"
  },
  {
    "text": "things that modern JavaScript tooling actually give us this was a quite a funny tweet I found",
    "start": "3178220",
    "end": "3185780"
  },
  {
    "text": "yesterday and saying modern web dev is a tire fire post ball endeavors where it's",
    "start": "3185780",
    "end": "3191570"
  },
  {
    "text": "at and it's kind of true because at the moment getting all of this set up is",
    "start": "3191570",
    "end": "3196880"
  },
  {
    "text": "painful you need to know so much web pack is a amazing tool but configuring it as a",
    "start": "3196880",
    "end": "3203780"
  },
  {
    "text": "little bit of a pain there's now a lot of stuff going on web pack too is just",
    "start": "3203780",
    "end": "3209119"
  },
  {
    "text": "around the corner they're trying to simplify a lot of the configuration there's tools which wrap all of this up",
    "start": "3209119",
    "end": "3216670"
  },
  {
    "text": "but well you just end up having to know so much so because everyone's sort of",
    "start": "3217660",
    "end": "3224000"
  },
  {
    "text": "aligning with all of the new versions of typescript didn't Babel and ACMA script",
    "start": "3224000",
    "end": "3229190"
  },
  {
    "text": "we've got all we've got es6 we've got typescript we then have all these bundles you kind of have to know we then",
    "start": "3229190",
    "end": "3236750"
  },
  {
    "text": "also because we're grabbing all of our packages from node and NPM you kind of have to understand that we're not using",
    "start": "3236750",
    "end": "3242240"
  },
  {
    "text": "Bower anymore those package managers are useless you then need to use like yeoman to",
    "start": "3242240",
    "end": "3250369"
  },
  {
    "text": "scaffold out your application and then we've got sass which builds up and it just keeps going every time you talk to",
    "start": "3250369",
    "end": "3256730"
  },
  {
    "text": "anyone they're like oh my god you should be using this framework or library that was created two minutes ago",
    "start": "3256730",
    "end": "3263140"
  },
  {
    "text": "but it's actually people who are putting a lot of effort so under one of the guys",
    "start": "3263140",
    "end": "3269540"
  },
  {
    "text": "on the jaw and they're working for Microsoft or pay's created these this",
    "start": "3269540",
    "end": "3274940"
  },
  {
    "text": "JavaScript services project so we can actually use the yeoman as v-net core",
    "start": "3274940",
    "end": "3281270"
  },
  {
    "text": "spa template to bootstrap an asp net core site which spins up web pack behind",
    "start": "3281270",
    "end": "3288140"
  },
  {
    "text": "the scenes with hot reloading so and ship either angular 2 or react",
    "start": "3288140",
    "end": "3295210"
  },
  {
    "text": "single page applications via asp net core and it just sets up all this hot",
    "start": "3295210",
    "end": "3300680"
  },
  {
    "text": "reloading it also allows us to like call node modules directly from our MVC stuff so it's just trying to bring these",
    "start": "3300680",
    "end": "3306800"
  },
  {
    "text": "worlds together Facebook have create react app which is a little CLI tool",
    "start": "3306800",
    "end": "3312560"
  },
  {
    "text": "that allows us to just call out and it scaffolds us an application with all of this",
    "start": "3312560",
    "end": "3318680"
  },
  {
    "text": "configuration hidden away there's a couple of things you need to focus on",
    "start": "3318680",
    "end": "3323920"
  },
  {
    "text": "modules and modular module bundlers I think everyone needs to know this at the",
    "start": "3323920",
    "end": "3329420"
  },
  {
    "text": "moment it's not going away and you're going to need compilers it's just the by",
    "start": "3329420",
    "end": "3335000"
  },
  {
    "text": "a JavaScript tooling is going to be there's always going to be new stuff coming out and you're going to have a",
    "start": "3335000",
    "end": "3340670"
  },
  {
    "text": "heap of pain if you don't sort of get on board with these new tools learn the new",
    "start": "3340670",
    "end": "3346160"
  },
  {
    "text": "JavaScript yes yes 2015 plus use Babel a typescript as a pre compiler and",
    "start": "3346160",
    "end": "3352030"
  },
  {
    "text": "understand the tc39 process which is the way we're getting language enhancements",
    "start": "3352030",
    "end": "3357530"
  },
  {
    "text": "or doing just a sec and then start simple don't start with these huge boilerplate just go to the docs getting",
    "start": "3357530",
    "end": "3363740"
  },
  {
    "text": "started and start with something simple and then add things so in over time as you understand them thought I'd quickly",
    "start": "3363740",
    "end": "3370640"
  },
  {
    "text": "talk about the tc39 process because this is the way we actually get new features",
    "start": "3370640",
    "end": "3375800"
  },
  {
    "text": "in JavaScript now essentially we've got five stages when something hits stage",
    "start": "3375800",
    "end": "3381589"
  },
  {
    "text": "for there tc39 committee meet once a year and everything in Stage four ends",
    "start": "3381589",
    "end": "3387500"
  },
  {
    "text": "up in the new version of JavaScript that's why they've moved to es2015 es 2016 yes 2017",
    "start": "3387500",
    "end": "3395530"
  },
  {
    "text": "so like as an example if you follow there's a it's all up on github async",
    "start": "3395530",
    "end": "3401359"
  },
  {
    "text": "and await just hit stage four last week in JavaScript so you can now actually",
    "start": "3401359",
    "end": "3406880"
  },
  {
    "text": "use if you use async and await in dotnet es 2017 will actually contain a sink and",
    "start": "3406880",
    "end": "3414410"
  },
  {
    "text": "a weight as a start standard in JavaScript so it's cool staying across this stuff and understanding what's",
    "start": "3414410",
    "end": "3419960"
  },
  {
    "text": "coming because there's huge amounts of cool stuff in the pipeline",
    "start": "3419960",
    "end": "3425079"
  },
  {
    "text": "modules we're getting close to the end guys modules pretty cool so that's the new",
    "start": "3425079",
    "end": "3433130"
  },
  {
    "text": "syntax for importing a named module or importing a default module so with react",
    "start": "3433130",
    "end": "3439280"
  },
  {
    "text": "we're exporting a default it's got a but it's like a namespace with lodash we're",
    "start": "3439280",
    "end": "3444560"
  },
  {
    "text": "exporting a bunch of functions so defining them all and then exporting each of them as a named function",
    "start": "3444560",
    "end": "3451690"
  },
  {
    "text": "you can also treat other things as as modules which is kind of cool config",
    "start": "3451690",
    "end": "3457730"
  },
  {
    "text": "templates Styles react",
    "start": "3457730",
    "end": "3462760"
  },
  {
    "text": "you can actually use classes and it's encouraged we can use things like static properties to just reduce the amount of",
    "start": "3462760",
    "end": "3470830"
  },
  {
    "text": "boilerplate code but it also works better with typescript so if I've got my",
    "start": "3470830",
    "end": "3476590"
  },
  {
    "text": "hello world I can actually just specify what my prop types are and then I get",
    "start": "3476590",
    "end": "3481600"
  },
  {
    "text": "compile time safety on my props I get full Intelli sense because everything is JavaScript I",
    "start": "3481600",
    "end": "3488190"
  },
  {
    "text": "can also do stateful components and use a generic base class where I can specify",
    "start": "3488190",
    "end": "3495340"
  },
  {
    "text": "the type of my state and the type of my props if I if I type something wrong I",
    "start": "3495340",
    "end": "3501610"
  },
  {
    "text": "get a compiler error we've moved all those runtime prop type warnings to compile time so many advantages by just",
    "start": "3501610",
    "end": "3508570"
  },
  {
    "text": "staying in JavaScript we pull it all together with something called web pack which I'm not going to",
    "start": "3508570",
    "end": "3514960"
  },
  {
    "text": "go into a huge amount of detail on but it essentially takes these JavaScript files and then outputs a single",
    "start": "3514960",
    "end": "3523330"
  },
  {
    "text": "JavaScript file or multiple if you want you can configure it to do that and basically any assets that are you're",
    "start": "3523330",
    "end": "3530500"
  },
  {
    "text": "tracking so images CSS that sort of stuff a basic config you have an entry",
    "start": "3530500",
    "end": "3537070"
  },
  {
    "text": "point and you have some loaders loaders when it sees a module of that type it",
    "start": "3537070",
    "end": "3542530"
  },
  {
    "text": "uses a loader which is basically a transpiler it tells typescript what to",
    "start": "3542530",
    "end": "3547660"
  },
  {
    "text": "do with it and that's a basic web PAP config go to a boilerplate and they're normally about ten times this size but",
    "start": "3547660",
    "end": "3554320"
  },
  {
    "text": "you should be able to start with something like that we've seen hot reloading there's a few",
    "start": "3554320",
    "end": "3560530"
  },
  {
    "text": "like other things I just want to let you know that you can do so isomorphic rendering is another one so this is",
    "start": "3560530",
    "end": "3568210"
  },
  {
    "text": "rendering universal applications another example of why it's called that we have",
    "start": "3568210",
    "end": "3573250"
  },
  {
    "text": "a JavaScript representation on the server we can actually take that virtual",
    "start": "3573250",
    "end": "3578710"
  },
  {
    "text": "Dom that we've rendered we can run our entire node app our react app in node",
    "start": "3578710",
    "end": "3585070"
  },
  {
    "text": "because it's actually not tied to the browser and then we can render that virtual Dom into a string and then ship",
    "start": "3585070",
    "end": "3592720"
  },
  {
    "text": "that to the browser as static HTML so you could almost you could actually right a",
    "start": "3592720",
    "end": "3597809"
  },
  {
    "text": "MVC application using react it's it's pretty cool pretty powerful",
    "start": "3597809",
    "end": "3604300"
  },
  {
    "text": "stuff we didn't really we didn't cover testing",
    "start": "3604300",
    "end": "3609579"
  },
  {
    "text": "because that's a massive topic in itself but once again just because you're not",
    "start": "3609579",
    "end": "3614680"
  },
  {
    "text": "tied to the browser you can actually use things like jeaious Dom if you want or shallow rendering and do UI tests in",
    "start": "3614680",
    "end": "3622359"
  },
  {
    "text": "nodejs so you don't even have to fire up the browser you just trust that react will render it properly to the real Dom",
    "start": "3622359",
    "end": "3628770"
  },
  {
    "text": "a library if you're looking into testing is called enzyme it's by Airbnb so the",
    "start": "3628770",
    "end": "3635260"
  },
  {
    "text": "Airbnb team have been switching everything over to react and they've got an amazing testing library for react",
    "start": "3635260",
    "end": "3643319"
  },
  {
    "text": "there's quite a few things that we haven't actually covered I wanted to give you a sort of a foundation of what",
    "start": "3643319",
    "end": "3648849"
  },
  {
    "text": "why the fundamentals of reactor quite simple and they allow their great",
    "start": "3648849",
    "end": "3654609"
  },
  {
    "text": "building blocks for building really big complex apps and there's some patterns that really allow us to to build",
    "start": "3654609",
    "end": "3660700"
  },
  {
    "text": "large-scale applications so things like higher order components they allow us to",
    "start": "3660700",
    "end": "3666640"
  },
  {
    "text": "they're basically a component factory that we can say okay say we want to",
    "start": "3666640",
    "end": "3672940"
  },
  {
    "text": "authorize component we can just say here are the roles that I require if you",
    "start": "3672940",
    "end": "3678130"
  },
  {
    "text": "don't meet those it just won't render its children otherwise it will pass down",
    "start": "3678130",
    "end": "3684040"
  },
  {
    "text": "sort of your other credentials to the children so you can do some really wicked stuff with that to really reduce",
    "start": "3684040",
    "end": "3690040"
  },
  {
    "text": "the amount of boilerplate things like forms as well you can use higher-order components to make the like assigning",
    "start": "3690040",
    "end": "3697869"
  },
  {
    "text": "the value and then listening to the input events make all of that boilerplate that everyone calls out with",
    "start": "3697869",
    "end": "3703089"
  },
  {
    "text": "react just go away and then finally patterns like flux and",
    "start": "3703089",
    "end": "3708670"
  },
  {
    "text": "redux they're they're a whole talk in itself so I can't go into that but",
    "start": "3708670",
    "end": "3713890"
  },
  {
    "text": "they're worth once you understand the basics look into them but don't choose something like Redux as default because",
    "start": "3713890",
    "end": "3720040"
  },
  {
    "text": "set state will get your really long way so just wrapping up things I love about",
    "start": "3720040",
    "end": "3727660"
  },
  {
    "text": "it dataflow is explicit it from top to bottom events go back up",
    "start": "3727660",
    "end": "3734520"
  },
  {
    "text": "react itself is super simple we saw the first sort of half of the talk we",
    "start": "3734520",
    "end": "3739570"
  },
  {
    "text": "actually showed you pretty much the entire API surface area of react whereas",
    "start": "3739570",
    "end": "3745330"
  },
  {
    "text": "a lot of these other like frameworks is just so much more involved and every",
    "start": "3745330",
    "end": "3751510"
  },
  {
    "text": "because where everything is JavaScript most things you're learning are transferable so there's a bunch of",
    "start": "3751510",
    "end": "3758320"
  },
  {
    "text": "really cool libraries like like cycle Jas and whatnot which which",
    "start": "3758320",
    "end": "3766030"
  },
  {
    "text": "take all of these patterns and they're just done in alternate ways you can move to these other libraries all your",
    "start": "3766030",
    "end": "3771550"
  },
  {
    "text": "knowledge is transferable I'll take questions offline because we're pretty",
    "start": "3771550",
    "end": "3776770"
  },
  {
    "text": "much over time here's two links the urban plate is one and then I've got another repo here",
    "start": "3776770",
    "end": "3783790"
  },
  {
    "text": "which is the web pack react starter and the idea of that is I've got sort of eight or nine commits",
    "start": "3783790",
    "end": "3791320"
  },
  {
    "text": "which introduce each concept one commit at a time so whenever I make changes I",
    "start": "3791320",
    "end": "3797440"
  },
  {
    "text": "rewrite history and fix the commit I introduced that into so I found that really really good to see each step",
    "start": "3797440",
    "end": "3803160"
  },
  {
    "text": "introduced thank you [Applause]",
    "start": "3803160",
    "end": "3811459"
  }
]