[
  {
    "text": "hello so I think it's um time to start and",
    "start": "11040",
    "end": "16400"
  },
  {
    "text": "um yeah some more might be joining but I will I will start now so um welcome and",
    "start": "16400",
    "end": "26160"
  },
  {
    "text": "uh to this talk uh this is talk is about perhaps one of the most common security challenges we face as members of devops",
    "start": "26160",
    "end": "33559"
  },
  {
    "text": "teams or some kind of architect or security advisor and uh at its core it",
    "start": "33559",
    "end": "39960"
  },
  {
    "text": "um looks like this and it's simple we just we have a server and we have some",
    "start": "39960",
    "end": "45480"
  },
  {
    "text": "server resources that we want the client to access in a secure way and uh a",
    "start": "45480",
    "end": "51440"
  },
  {
    "text": "typical example of this is an API and we will start focusing on on that uh and uh",
    "start": "51440",
    "end": "57640"
  },
  {
    "text": "so let's say you have a business partner want to integrate with with you and they suggest to use uh to use htps and an API",
    "start": "57640",
    "end": "66040"
  },
  {
    "text": "key and you get the question is this secure enough then what would your",
    "start": "66040",
    "end": "71439"
  },
  {
    "text": "answer be and if that is not secure enough what should you use instead so",
    "start": "71439",
    "end": "77479"
  },
  {
    "text": "and before we dive into that uh my name is um Tobias and if you search for me",
    "start": "77479",
    "end": "83400"
  },
  {
    "text": "online you might find this um that's my LinkedIn profile and I've been at Omega",
    "start": "83400",
    "end": "89560"
  },
  {
    "text": "point for for some years now doing penetration testing and Security reviews and have had the benefit of seeing",
    "start": "89560",
    "end": "95960"
  },
  {
    "text": "system Integrations at different environments or different kinds from both the",
    "start": "95960",
    "end": "101520"
  },
  {
    "text": "offensive and defensive side but as we all know LinkedIn that's just marketing",
    "start": "101520",
    "end": "107320"
  },
  {
    "text": "so you might use some AI to dig out the truth about me and then you might get",
    "start": "107320",
    "end": "112759"
  },
  {
    "text": "this and uh yeah well it looks uh valid to me so enough about that and uh we go",
    "start": "112759",
    "end": "120000"
  },
  {
    "text": "back to um API security and uh the basic defenses that we have can be grouped",
    "start": "120000",
    "end": "127600"
  },
  {
    "text": "into two infrastructure layer security and application layer security and we will go through those defenses here and",
    "start": "127600",
    "end": "134879"
  },
  {
    "text": "we will start with the with the basics and add more defenses as we go along and",
    "start": "134879",
    "end": "140080"
  },
  {
    "text": "see what motivates more complex thing things like a and send the constrained",
    "start": "140080",
    "end": "145760"
  },
  {
    "text": "access tokens so we start with the basics the infrastructure protections",
    "start": "145760",
    "end": "151920"
  },
  {
    "text": "and I know classic IP based security might be boring for us as a modern Cloud",
    "start": "151920",
    "end": "160040"
  },
  {
    "text": "native devops organization but before you sort of zone out for this slide remember this attackers will find you on",
    "start": "160040",
    "end": "168319"
  },
  {
    "text": "the internet so only expose apis publicly if you need",
    "start": "168319",
    "end": "174840"
  },
  {
    "text": "to do that and uh use private networking to avoid a lot of those sort of",
    "start": "174840",
    "end": "180400"
  },
  {
    "text": "garbage request that will hit public end points but if you do apply that remember",
    "start": "180400",
    "end": "186599"
  },
  {
    "text": "that Network defenses um is just the first layer of defense and you should never assume that that all clients on",
    "start": "186599",
    "end": "195280"
  },
  {
    "text": "the network are are trusted so we need to add more more",
    "start": "195280",
    "end": "201080"
  },
  {
    "text": "security and and more defenses so we had transport and application layer defenses",
    "start": "201080",
    "end": "206480"
  },
  {
    "text": "and um so we next we look at transport layer security and um that it's vital to",
    "start": "206480",
    "end": "212920"
  },
  {
    "text": "have strong transport layer security for the applications um layer defenses that we add later on and um so so it's",
    "start": "212920",
    "end": "221360"
  },
  {
    "text": "important to use end to endend strong transport layer security for all requests and um so that will provide us",
    "start": "221360",
    "end": "228760"
  },
  {
    "text": "with confidentiality and integrity for the request we send and for system",
    "start": "228760",
    "end": "234760"
  },
  {
    "text": "Integrations uh today it's quite possible that you can require TLS 13",
    "start": "234760",
    "end": "240560"
  },
  {
    "text": "only uh and um if you do need to support 1.2 for legacy reasons I mean it's quite",
    "start": "240560",
    "end": "247840"
  },
  {
    "text": "common then it's need to be hardened and uh there are good guides for that and",
    "start": "247840",
    "end": "253239"
  },
  {
    "text": "for system Integrations when no humans are involved just machine to machine it's can be restricted to just four",
    "start": "253239",
    "end": "261880"
  },
  {
    "text": "ciphers and there's more to say about hardening transport lay security and we won't go into details and there are good",
    "start": "261880",
    "end": "268360"
  },
  {
    "text": "tools you can use for uh scanning and evaluating your transport layer security",
    "start": "268360",
    "end": "275520"
  },
  {
    "text": "and uh one such tool that we use during penetration testing is from SSL ABS that",
    "start": "275520",
    "end": "281080"
  },
  {
    "text": "you can use for public endpoints so it's uh that seems pretty",
    "start": "281080",
    "end": "287479"
  },
  {
    "text": "easy to just doing strong transport layer security and um um so one issue",
    "start": "287479",
    "end": "295479"
  },
  {
    "text": "here that we have is it is the end to end aspect and uh if we have like this we have the client",
    "start": "295479",
    "end": "302240"
  },
  {
    "text": "and the API here the server and we have good htps end to end but then also",
    "start": "302240",
    "end": "308280"
  },
  {
    "text": "remember the infrastructure protections and and using firewalls and stuff is",
    "start": "308280",
    "end": "314160"
  },
  {
    "text": "also important so we we of course apply that we should always have something in front of our our service that we build",
    "start": "314160",
    "end": "321440"
  },
  {
    "text": "so we add that and to use good security features with those kind of products it",
    "start": "321440",
    "end": "327440"
  },
  {
    "text": "is to use inspection and maybe have V and things like that then we need to",
    "start": "327440",
    "end": "333280"
  },
  {
    "text": "terminate transport layer security and do the inspection and if we just",
    "start": "333280",
    "end": "338479"
  },
  {
    "text": "continue inbound using hdp that was quite common to to do perhaps early on",
    "start": "338479",
    "end": "344160"
  },
  {
    "text": "to have a firewall and then have a clear text traffic on the internet on the internet and uh yeah that might be fine",
    "start": "344160",
    "end": "351319"
  },
  {
    "text": "if it's small like here it's just uh one API but but in reality it often is a lot",
    "start": "351319",
    "end": "359800"
  },
  {
    "text": "of more things on the inside so then we get quite big un unsecure internet where",
    "start": "359800",
    "end": "365800"
  },
  {
    "text": "it's clear takes traffic and if an attacker gets foot tooled within the the",
    "start": "365800",
    "end": "371479"
  },
  {
    "text": "network it can read and and modify the clear text traffic so um uh so so we of",
    "start": "371479",
    "end": "377919"
  },
  {
    "text": "course need to address this and uh a solution to this is to",
    "start": "377919",
    "end": "383599"
  },
  {
    "text": "um um is to do like this to reencrypt inbound traffic and uh so that we would",
    "start": "383599",
    "end": "391199"
  },
  {
    "text": "regard you could either use path through or reencrypt and we regard that as good end to endend even if it's not true end",
    "start": "391199",
    "end": "398440"
  },
  {
    "text": "to end perhaps given that we protect the node that does the re-encryption properly so uh no one can get foot hold",
    "start": "398440",
    "end": "406160"
  },
  {
    "text": "there but uh that's that's assumed so so this is uh end to end and we also have",
    "start": "406160",
    "end": "411560"
  },
  {
    "text": "the benefit of using the security features in the firewall or Gateway product with inspection and uh such",
    "start": "411560",
    "end": "418080"
  },
  {
    "text": "things so uh um and yeah and one more thing here you could think maybe that",
    "start": "418080",
    "end": "424360"
  },
  {
    "text": "sounds a little bit old to have an internet with HTTP and uh a more modern",
    "start": "424360",
    "end": "430400"
  },
  {
    "text": "version of this is a kubernetes cluster which which grows over time where you",
    "start": "430400",
    "end": "436000"
  },
  {
    "text": "put more and more stuff in and because the sort of default Behavior there is to",
    "start": "436000",
    "end": "441080"
  },
  {
    "text": "terminate TLS at the Ingress controller and then you sort of get the more modern version of the problem so uh be careful",
    "start": "441080",
    "end": "448520"
  },
  {
    "text": "with that so um moving on that was end to end now",
    "start": "448520",
    "end": "455280"
  },
  {
    "text": "how about authentication so we have two parties the server and the client and um",
    "start": "455280",
    "end": "461720"
  },
  {
    "text": "do we get server authentication with transport layer security yes that's by default and uh that's what we usually",
    "start": "461720",
    "end": "468520"
  },
  {
    "text": "see in the web browser using HTTP and uh but here it's machine to machine and we",
    "start": "468520",
    "end": "474879"
  },
  {
    "text": "also want to authenticate the client in a secure way so do we get that",
    "start": "474879",
    "end": "480680"
  },
  {
    "text": "well not by default but the the protocol has support for Mutual transport layer",
    "start": "480680",
    "end": "486919"
  },
  {
    "text": "security or mtls for short but we need to configure that and give the client a",
    "start": "486919",
    "end": "492960"
  },
  {
    "text": "client certific certificate which it it can use so",
    "start": "492960",
    "end": "498360"
  },
  {
    "text": "um uh we we do that and um this is great for now now we have we have end to",
    "start": "498360",
    "end": "505520"
  },
  {
    "text": "endend um confidentiality and integrity of of the request we have strong server and client authentication",
    "start": "505520",
    "end": "512680"
  },
  {
    "text": "and uh if we do it like this with the firewall we also have defense in depth",
    "start": "512680",
    "end": "518279"
  },
  {
    "text": "and uh and sort of the problem is solved we have a secure system integration so",
    "start": "518279",
    "end": "524720"
  },
  {
    "text": "why don't we do this all the time for everything we do are there some issues",
    "start": "524720",
    "end": "530040"
  },
  {
    "text": "here well we talked about the end to endend aspect and uh uh how that and",
    "start": "530040",
    "end": "536120"
  },
  {
    "text": "that could be trouble uh depending on how how the network is and and implementation details so you need to",
    "start": "536120",
    "end": "543040"
  },
  {
    "text": "understand where TLS is terminated and so but U that we have addressed and then",
    "start": "543040",
    "end": "550320"
  },
  {
    "text": "the mutual TLS is is really good but it's it's not for everyone um in a large organization where you don't have built",
    "start": "550320",
    "end": "557600"
  },
  {
    "text": "up or invested in public key infrastructure managing a large number of client certificates can be quite",
    "start": "557600",
    "end": "565680"
  },
  {
    "text": "expensive and and time consuming so uh so so it's not that commonly used but if",
    "start": "565680",
    "end": "571360"
  },
  {
    "text": "you are an organization that have all that then it might be easy to just start using Mutual",
    "start": "571360",
    "end": "576920"
  },
  {
    "text": "TLS and then also we have only done authentication we really don't have any",
    "start": "576920",
    "end": "582320"
  },
  {
    "text": "good support for fing grained authorization which we usually need for",
    "start": "582320",
    "end": "587399"
  },
  {
    "text": "apis because there are a lot of apis and we want to restrict access more fine grained than just based on the client ID",
    "start": "587399",
    "end": "595680"
  },
  {
    "text": "so um we need to do this and we will now address uh different client",
    "start": "595680",
    "end": "601600"
  },
  {
    "text": "authentication methods and um we have some weak ones and some strong ones um the the the the",
    "start": "601600",
    "end": "610000"
  },
  {
    "text": "old ones API key and basic o which we do in the application layer um they they",
    "start": "610000",
    "end": "615519"
  },
  {
    "text": "are regarded as weak since it's a shared shared key or shared secret and um the",
    "start": "615519",
    "end": "621760"
  },
  {
    "text": "strong ones are asymmetric and um there we have mutual TS but as we said that's",
    "start": "621760",
    "end": "628480"
  },
  {
    "text": "not for everyone so is there an alternative for us if we want to do asymmetric client authentication and um",
    "start": "628480",
    "end": "636040"
  },
  {
    "text": "there is one that is kind of new but it is part of the security profiles for o",
    "start": "636040",
    "end": "645160"
  },
  {
    "text": "and openly connect and it's so it is regarded as a secure industry standard",
    "start": "645160",
    "end": "650519"
  },
  {
    "text": "method and that's a called private Key Jot and uh it it without having public",
    "start": "650519",
    "end": "658440"
  },
  {
    "text": "infrastructure the client just generates a private public keeper and uh then it",
    "start": "658440",
    "end": "664040"
  },
  {
    "text": "creates a jot where the subject is the client ID and then the server can",
    "start": "664040",
    "end": "669240"
  },
  {
    "text": "authenticate the client by validating that using the client's public key so uh",
    "start": "669240",
    "end": "675040"
  },
  {
    "text": "so it's quite quite similar but it all happens in the application layer so there needs to be some work done in the",
    "start": "675040",
    "end": "682079"
  },
  {
    "text": "applications uh but it's good but of course you also need to distribute that",
    "start": "682079",
    "end": "687839"
  },
  {
    "text": "client public key can register that so you need to build some kind of infrastructure around that of course so",
    "start": "687839",
    "end": "693639"
  },
  {
    "text": "it it doesn't come for free but but it's there and it's possible to use so we have good strong two strong good methods",
    "start": "693639",
    "end": "700519"
  },
  {
    "text": "to use and um now we can sort of say that we have solved the client",
    "start": "700519",
    "end": "706680"
  },
  {
    "text": "authentication problem because we have good good ways to do that so moving on to client to the authorization part and",
    "start": "706680",
    "end": "716360"
  },
  {
    "text": "uh we have not addressed authorization yet but before we do that I just want to",
    "start": "716880",
    "end": "722800"
  },
  {
    "text": "say if if it's just as simple as it this we just have one API endpoint and one",
    "start": "722800",
    "end": "728600"
  },
  {
    "text": "client uh then we don't really have to do any authorization because if we have authenticated a client it has access to",
    "start": "728600",
    "end": "735120"
  },
  {
    "text": "that endpoint and we're sort of done with authorization we don't have a complex access model that we need to do",
    "start": "735120",
    "end": "741560"
  },
  {
    "text": "any fine green authorization but often reality is much more complex than that and we need um something that can handle",
    "start": "741560",
    "end": "748800"
  },
  {
    "text": "this in a good way and um so so and and you could Al of course argue that you",
    "start": "748800",
    "end": "755360"
  },
  {
    "text": "could do more fine gr things with API keys and uh building around that but but",
    "start": "755360",
    "end": "761360"
  },
  {
    "text": "if you do that and you should and you should support list privilege and and key rotation then you might build sort",
    "start": "761360",
    "end": "768240"
  },
  {
    "text": "of a poorman's o client credentials anyway so so we will look at o client",
    "start": "768240",
    "end": "773720"
  },
  {
    "text": "credentials and that's industry standard for dealing with authorization and uh it",
    "start": "773720",
    "end": "778760"
  },
  {
    "text": "looks like this so we introduced the authorization server and um so we have the API and the",
    "start": "778760",
    "end": "786160"
  },
  {
    "text": "client just as before and we introduced the authorization server and um now the client authenticates with the",
    "start": "786160",
    "end": "792440"
  },
  {
    "text": "authorization server using a strong method preferably like Mutual TLS or",
    "start": "792440",
    "end": "798680"
  },
  {
    "text": "private kid or maybe basic o and then it gets a token back and uh then it can use",
    "start": "798680",
    "end": "805279"
  },
  {
    "text": "that token to access uh API and server resources so it attaches the token with",
    "start": "805279",
    "end": "810519"
  },
  {
    "text": "every request very simple flow U and um and and standard for for machine to",
    "start": "810519",
    "end": "818120"
  },
  {
    "text": "machine and uh it's good that we don't have to deal with these complex redirect flows that we have when users are",
    "start": "818120",
    "end": "824360"
  },
  {
    "text": "involved today everything is simple so that's good but so so let's say that we",
    "start": "824360",
    "end": "829920"
  },
  {
    "text": "we have had a system with API keys and basic o and we have refactored to O to",
    "start": "829920",
    "end": "835440"
  },
  {
    "text": "increase the level of security and um we look at the requests uh from our",
    "start": "835440",
    "end": "841320"
  },
  {
    "text": "resource server point of view from the API and the API gets um the two on the",
    "start": "841320",
    "end": "847240"
  },
  {
    "text": "top is sort of the old one with basic o and the API key and then the uh third",
    "start": "847240",
    "end": "852600"
  },
  {
    "text": "one is the new one the more secure one the oo one and if we strip away everything uh it it's looks like this",
    "start": "852600",
    "end": "859279"
  },
  {
    "text": "it's a header with a secure string and um and we have implemented all these",
    "start": "859279",
    "end": "864560"
  },
  {
    "text": "correctly so they they are cryptographically secure uh so so then",
    "start": "864560",
    "end": "869839"
  },
  {
    "text": "you might wonder which is most secure what what what's the difference there they look it",
    "start": "869839",
    "end": "874959"
  },
  {
    "text": "look pretty like the same and and it is because if you have that string you can",
    "start": "874959",
    "end": "880560"
  },
  {
    "text": "just H use it and make a call to that API endpoint from another client and",
    "start": "880560",
    "end": "886399"
  },
  {
    "text": "that will work perfectly fine so so this is sort of the the bearer scheme here is that you if you",
    "start": "886399",
    "end": "892880"
  },
  {
    "text": "have the the token then you can just use it it's not tied to the client in any way or the request uh so so uh so that",
    "start": "892880",
    "end": "900160"
  },
  {
    "text": "is a um a weakness so what have we actually gained by",
    "start": "900160",
    "end": "905880"
  },
  {
    "text": "introducing oo in this solution that we had well there are some o features and",
    "start": "905880",
    "end": "913399"
  },
  {
    "text": "the first one I mention is that we now have an sort of Industry standard solution there are rfcs and specifications and official threat",
    "start": "913399",
    "end": "920160"
  },
  {
    "text": "models uh when you implement this there are good support in framework so you don't have to do everything yourself and",
    "start": "920160",
    "end": "927279"
  },
  {
    "text": "so that's really good and we also have support for fine gr authorization since um access token they",
    "start": "927279",
    "end": "934839"
  },
  {
    "text": "can contain metadata and um and like all Scopes and we have more information to",
    "start": "934839",
    "end": "941839"
  },
  {
    "text": "base our Access Control decisions on and access tokens can also be made",
    "start": "941839",
    "end": "947120"
  },
  {
    "text": "shortlived so so we follow the principle of Le privilege and so and um having an",
    "start": "947120",
    "end": "954240"
  },
  {
    "text": "authorization server and token also helps us having support for find secret",
    "start": "954240",
    "end": "959480"
  },
  {
    "text": "rotation without uh downtime and and uh because it's not dependent on the resour",
    "start": "959480",
    "end": "966000"
  },
  {
    "text": "service has no dependency to the client secret so we can rotate it given that the authorization server uh supports a",
    "start": "966000",
    "end": "973199"
  },
  {
    "text": "good way for us to rotate the client secret preps automate it or or do it",
    "start": "973199",
    "end": "978920"
  },
  {
    "text": "easily by just manually so but but but if we don't use the these features and",
    "start": "978920",
    "end": "986240"
  },
  {
    "text": "and uh then it it's it's quite quite similar to having an API key that's uh",
    "start": "986240",
    "end": "992600"
  },
  {
    "text": "so so if we have tokens that's just valid for all apis and don't use the scope part then uh it it we haven't",
    "start": "992600",
    "end": "999480"
  },
  {
    "text": "really gained that much perhaps so so that's important to understand that we must also use the good o features that",
    "start": "999480",
    "end": "1005759"
  },
  {
    "text": "we now have access to and um this is of course nothing new the the",
    "start": "1005759",
    "end": "1012000"
  },
  {
    "text": "the the barer um issue that that I showed you it's um um oh sorry I forgot",
    "start": "1012000",
    "end": "1019279"
  },
  {
    "text": "one the most important one we we also have support for something called proof of possession tokens which uh is a",
    "start": "1019279",
    "end": "1026880"
  },
  {
    "text": "stronger way to deal with tokens we will talk more about that later so we don't use this barer approach because the bar",
    "start": "1026880",
    "end": "1033760"
  },
  {
    "text": "issue it was recognized from the beginning you know what this blog post",
    "start": "1033760",
    "end": "1039240"
  },
  {
    "text": "is maybe hard to find now but you can dig it find it and one of the",
    "start": "1039240",
    "end": "1046160"
  },
  {
    "text": "um that was part of the initiative doing o 2",
    "start": "1046160",
    "end": "1051840"
  },
  {
    "text": "H he left that project because he thought there was a lot of security",
    "start": "1051840",
    "end": "1057000"
  },
  {
    "text": "concerns with it and even if bar tokens is not the road to Hell perhaps at least",
    "start": "1057000",
    "end": "1063200"
  },
  {
    "text": "not yet so so it's fair to say that the concerns here are valid and if you the last part",
    "start": "1063200",
    "end": "1071520"
  },
  {
    "text": "here is is is a good read um so a in the hand of developer with deep",
    "start": "1071520",
    "end": "1077400"
  },
  {
    "text": "understanding of web security likely to resp result in a secure implementation but in the hands of most developer it's",
    "start": "1077400",
    "end": "1082640"
  },
  {
    "text": "likely to produce an insecure implementation and uh so it's obvious here that we need to harden o we need",
    "start": "1082640",
    "end": "1089880"
  },
  {
    "text": "security best practices and we need security profiles and one of the most V",
    "start": "1089880",
    "end": "1095400"
  },
  {
    "text": "one of most commonly used and most well known is perhaps FY too and um that's",
    "start": "1095400",
    "end": "1103559"
  },
  {
    "text": "for financial grade apis but that's just Financial grade so it's valid for any um",
    "start": "1103559",
    "end": "1110000"
  },
  {
    "text": "domain that has high security requirements like healthare and and so and if we look at the um requirements",
    "start": "1110000",
    "end": "1117520"
  },
  {
    "text": "have the the four five and and six we can we can see that um shall only issue",
    "start": "1117520",
    "end": "1123480"
  },
  {
    "text": "send the constrainted access tokens so we will look into that we have also talked about Mutual TS and U and uh and",
    "start": "1123480",
    "end": "1131159"
  },
  {
    "text": "then there's this new term here uh demonstrating proof of possession that we will talk about so um and we should",
    "start": "1131159",
    "end": "1137480"
  },
  {
    "text": "only authenticate you using those asymmetric methods so so this is well defined How We Do secure oo so of course",
    "start": "1137480",
    "end": "1145600"
  },
  {
    "text": "we should apply this um um if we have a system that requires uh high",
    "start": "1145600",
    "end": "1152000"
  },
  {
    "text": "security and um mentioned send the constraint access",
    "start": "1152000",
    "end": "1159200"
  },
  {
    "text": "tokens a lot and now we will look into that and there are two ways to do this Mutual LS or demonstrating proof of",
    "start": "1159200",
    "end": "1165679"
  },
  {
    "text": "possession so we start with mutual L and it looks like this it's still client",
    "start": "1165679",
    "end": "1170760"
  },
  {
    "text": "credential flow so nothing much has really changed uh the the difference here now is that with since it's mutual",
    "start": "1170760",
    "end": "1178039"
  },
  {
    "text": "TS we are restricted to use Mutual Ts for client authentication and when we do that then the authorization server um",
    "start": "1178039",
    "end": "1185120"
  },
  {
    "text": "right specification will add the client certificate thumbprint in the CNF claim",
    "start": "1185120",
    "end": "1192000"
  },
  {
    "text": "and then sign the access token and then the client is now required to also do",
    "start": "1192000",
    "end": "1198760"
  },
  {
    "text": "Mutual TLS uh authenticating to the resource server and then the resource",
    "start": "1198760",
    "end": "1205440"
  },
  {
    "text": "server Can U can compare the the client certificate Thum print that were used",
    "start": "1205440",
    "end": "1211559"
  },
  {
    "text": "for the client authentication with the hash in the access token and um by doing",
    "start": "1211559",
    "end": "1217720"
  },
  {
    "text": "this if someone steals that access token that that secure string that we were talking about uh then and try to replay",
    "start": "1217720",
    "end": "1224320"
  },
  {
    "text": "that um without having access to the client's public private keeper then that",
    "start": "1224320",
    "end": "1230559"
  },
  {
    "text": "will fail so this is a much stronger solution so now the to token can't be used by anyone it it's cons send a",
    "start": "1230559",
    "end": "1237679"
  },
  {
    "text": "constraint to the particular client that has access to the private key so that's",
    "start": "1237679",
    "end": "1244039"
  },
  {
    "text": "good but as I as we said previously not everybody can use Mutual TS and uh so",
    "start": "1244039",
    "end": "1251240"
  },
  {
    "text": "the alternative is this and this is kind of new and um there are uh products like",
    "start": "1251240",
    "end": "1259559"
  },
  {
    "text": "um D identied server and and and some some other solutions that have started",
    "start": "1259559",
    "end": "1265159"
  },
  {
    "text": "implementing this but maybe it will more be more standard in in more Sol products",
    "start": "1265159",
    "end": "1271120"
  },
  {
    "text": "in a year or so so it's called demonstrating proof of possession um and",
    "start": "1271120",
    "end": "1276440"
  },
  {
    "text": "it's still client credentials so um the request flow is the same and um it's",
    "start": "1276440",
    "end": "1283360"
  },
  {
    "text": "similar to the mutual TLS that we just saw but since we now we don't do it in",
    "start": "1283360",
    "end": "1290000"
  },
  {
    "text": "the transport layer so we need to do more work we do it in the application layer so this means",
    "start": "1290000",
    "end": "1296520"
  },
  {
    "text": "that the client generates a public private keeper and um then it creates a",
    "start": "1296520",
    "end": "1303000"
  },
  {
    "text": "jot H and uh within that yacht it it sort of it ties that to that token",
    "start": "1303000",
    "end": "1308799"
  },
  {
    "text": "request and um then the authorization server will validate that and now embed",
    "start": "1308799",
    "end": "1316600"
  },
  {
    "text": "the hash of the client's public key in the same claim as was in the mutual TS",
    "start": "1316600",
    "end": "1322480"
  },
  {
    "text": "flow so so it's it's quite similar um and then using the same kear uh the",
    "start": "1322480",
    "end": "1329559"
  },
  {
    "text": "client can now create a new uh deot proof but now it's tied to the request",
    "start": "1329559",
    "end": "1336200"
  },
  {
    "text": "to the resource server and it also embeds the hash of the access token in",
    "start": "1336200",
    "end": "1342480"
  },
  {
    "text": "that uh and and then it sends both those yots to the resource server both the",
    "start": "1342480",
    "end": "1347760"
  },
  {
    "text": "access token which is just a normal access token with this CNF claim and then also the depot proof and then the",
    "start": "1347760",
    "end": "1354200"
  },
  {
    "text": "uh resource server needs to validate both so it validates the depot proof and",
    "start": "1354200",
    "end": "1359720"
  },
  {
    "text": "the access token and now it's tied to that particular Depot proof so uh nobody",
    "start": "1359720",
    "end": "1366880"
  },
  {
    "text": "without having access to the private key can use that um that token from from",
    "start": "1366880",
    "end": "1373840"
  },
  {
    "text": "someone else so so we don't have to we don't won't go into more details here",
    "start": "1373840",
    "end": "1379200"
  },
  {
    "text": "there are more details it just to get an understanding that there are there is an alternative to the mutual TLS um thing",
    "start": "1379200",
    "end": "1386400"
  },
  {
    "text": "but um there are good resources to read about this and and I find those useful",
    "start": "1386400",
    "end": "1392840"
  },
  {
    "text": "and so you can read more about it there and uh good that was sender constrained",
    "start": "1392840",
    "end": "1399679"
  },
  {
    "text": "access token so there's a lot of security that we can start using by introducing",
    "start": "1399679",
    "end": "1405520"
  },
  {
    "text": "OA uh and um so we have now both zero trust defense",
    "start": "1405520",
    "end": "1412559"
  },
  {
    "text": "in depth and Le privilege with with the that we're using to limit the scope for for for each token that we use and uh so",
    "start": "1412559",
    "end": "1421080"
  },
  {
    "text": "so we have this we have Network segmentation um if we can use that some some apis are of course meant to be",
    "start": "1421080",
    "end": "1427400"
  },
  {
    "text": "public so we can't but but if if we have done that properly and then we have the",
    "start": "1427400",
    "end": "1432840"
  },
  {
    "text": "end to end TS properly configured with strong um strong ciphers and so and u",
    "start": "1432840",
    "end": "1438960"
  },
  {
    "text": "we have we are using Mutual TS and proof of possession tokens and we have the",
    "start": "1438960",
    "end": "1444240"
  },
  {
    "text": "fine grained authorization so it's a pretty strong solution and um I just want to indicate",
    "start": "1444240",
    "end": "1451840"
  },
  {
    "text": "with the the blue border that H it's it's important that we also eval",
    "start": "1451840",
    "end": "1458279"
  },
  {
    "text": "evaluate and authenticate the request at the resource server so we we don't terminate that in a Gateway and then um",
    "start": "1458279",
    "end": "1466000"
  },
  {
    "text": "uh because then we have a might have a misconfiguration issue or or something like that so it's a strong solution all",
    "start": "1466000",
    "end": "1472640"
  },
  {
    "text": "the way and um it's time to we do a little summary of the HTTP API",
    "start": "1472640",
    "end": "1480880"
  },
  {
    "text": "integration that we looked at and then we will look at some other kind of Integrations but so if we summarize this",
    "start": "1480880",
    "end": "1487600"
  },
  {
    "text": "we um apply proper Network",
    "start": "1487600",
    "end": "1493360"
  },
  {
    "text": "segmentation strong THS and we have strong methods and uh also the fine grin",
    "start": "1493520",
    "end": "1501039"
  },
  {
    "text": "authorization that we talked about so um so so we have all this and uh that's a",
    "start": "1501039",
    "end": "1508679"
  },
  {
    "text": "lot of stuff right so uh you might starting to think oh should we always",
    "start": "1508679",
    "end": "1515000"
  },
  {
    "text": "use everything all the time for every integration that we have uh there I mean",
    "start": "1515000",
    "end": "1520679"
  },
  {
    "text": "there's a lot of stuff and different some are Banking and some are just some",
    "start": "1520679",
    "end": "1525880"
  },
  {
    "text": "retail and we can't just should we have everything of course it depends so",
    "start": "1525880",
    "end": "1531919"
  },
  {
    "text": "that's the obvious answer here and uh and it depends on the sort of the threat",
    "start": "1531919",
    "end": "1537640"
  },
  {
    "text": "model what you're trying to protect and and and and budget and uh perhaps",
    "start": "1537640",
    "end": "1543919"
  },
  {
    "text": "compliance and regulations and and things like that so uh but it's important to understand what you have uh",
    "start": "1543919",
    "end": "1551000"
  },
  {
    "text": "the tools we have to secure this and then if you choose not to use any of it it's it's a you're aware of that and",
    "start": "1551000",
    "end": "1558399"
  },
  {
    "text": "risk and and it's a sort of an accepted risk for you uh so",
    "start": "1558399",
    "end": "1565600"
  },
  {
    "text": "and so if we look at it in a little bit more General way before we move on to",
    "start": "1565600",
    "end": "1571559"
  },
  {
    "text": "other kind of Integrations so we can form a security Baseline for system",
    "start": "1571559",
    "end": "1576640"
  },
  {
    "text": "Integrations so we always should think of these four key aspects we the network",
    "start": "1576640",
    "end": "1582240"
  },
  {
    "text": "segmentation the the transport layer security and uh the client authentication method",
    "start": "1582240",
    "end": "1588840"
  },
  {
    "text": "and how fine grade we need to do the authorization to to not leaking data",
    "start": "1588840",
    "end": "1594440"
  },
  {
    "text": "between customers and and things like that so so with this knowledge we will now look into um three more other kinds",
    "start": "1594440",
    "end": "1602960"
  },
  {
    "text": "of Integrations uh so we have sort of done HTTP apis and um next we'll look",
    "start": "1602960",
    "end": "1609640"
  },
  {
    "text": "into uh file transfers or sh sharing files and uh and also messaging putting",
    "start": "1609640",
    "end": "1617200"
  },
  {
    "text": "events on on a message part and but is still it just cliental server",
    "start": "1617200",
    "end": "1622640"
  },
  {
    "text": "so we had this uh the Baseline here those four protections so we let's say",
    "start": "1622640",
    "end": "1628440"
  },
  {
    "text": "we are in a financial grade environment where it's worth investing in mutual TS",
    "start": "1628440",
    "end": "1634000"
  },
  {
    "text": "and proof of possession tokens so that's our security level that we want to have in every integration that we do so um",
    "start": "1634000",
    "end": "1641919"
  },
  {
    "text": "and that's secure but then we get a feature request that we need to serve",
    "start": "1641919",
    "end": "1647039"
  },
  {
    "text": "files and uh it doesn't really fit that well in the API perhaps so we want to use some good",
    "start": "1647039",
    "end": "1654159"
  },
  {
    "text": "file storage perhaps and S3 bucket in or or aure blob storage or or whatever so",
    "start": "1654159",
    "end": "1662120"
  },
  {
    "text": "and common solution is perhap that the API serves a secure link to that file and then the client can download it and",
    "start": "1662120",
    "end": "1670080"
  },
  {
    "text": "um if we just do it like that then out of the box usually Rond Services only",
    "start": "1670080",
    "end": "1676960"
  },
  {
    "text": "have uh transport layer security and this secure link and if someone has the link they have access to the file and",
    "start": "1676960",
    "end": "1685039"
  },
  {
    "text": "then it's really not that send the constraint anymore uh because it's more of a uh beer token API key thing so we",
    "start": "1685039",
    "end": "1694440"
  },
  {
    "text": "have a weaker path to the data here and and the filer might be contain a lot of sensitive data so it's worth protecting",
    "start": "1694440",
    "end": "1701760"
  },
  {
    "text": "just as good that's the API endpoints and um the obvious solution here is of",
    "start": "1701760",
    "end": "1707760"
  },
  {
    "text": "course so to do like this just s serve everything through the API and then you",
    "start": "1707760",
    "end": "1714159"
  },
  {
    "text": "know that you have the same security and make that storage internal on on the on the private Network and uh but maybe",
    "start": "1714159",
    "end": "1722519"
  },
  {
    "text": "that's not an option for you perhaps for security reasons or or performance",
    "start": "1722519",
    "end": "1727640"
  },
  {
    "text": "reasons or something else so we need that and then we need to work with that and mitigate the risk so we H so we sort",
    "start": "1727640",
    "end": "1734720"
  },
  {
    "text": "of have the same level of security perhaps we could add the same kind of networking protection and we could also",
    "start": "1734720",
    "end": "1743559"
  },
  {
    "text": "work a little bit more with this secure link making it perhaps one time or or an",
    "start": "1743559",
    "end": "1749039"
  },
  {
    "text": "asserting that it's only valid for this particular item so we don't have any issues there and perhaps the gate we",
    "start": "1749039",
    "end": "1755880"
  },
  {
    "text": "here in front of us could require Mutual TS because we know that the client has a client certificate to do Mutual TS with",
    "start": "1755880",
    "end": "1762720"
  },
  {
    "text": "the authorization servers and then it could also do do with when it should access files and and then of course we",
    "start": "1762720",
    "end": "1768840"
  },
  {
    "text": "don't maybe we can't do the sender constraining properly but that's a risk",
    "start": "1768840",
    "end": "1774559"
  },
  {
    "text": "we might we can accept G given all this so we feel confident that we have the",
    "start": "1774559",
    "end": "1780320"
  },
  {
    "text": "same level of security in both those Integrations now and um but then um not everything is",
    "start": "1780320",
    "end": "1789480"
  },
  {
    "text": "a perfect fit for HTTP right so uh uh we know that in a large enough organization",
    "start": "1789480",
    "end": "1796279"
  },
  {
    "text": "there will be FTP and XML somewhere some integration will use that and and and",
    "start": "1796279",
    "end": "1801919"
  },
  {
    "text": "the way to secure that is to use secure ftps of course so uh and we need to",
    "start": "1801919",
    "end": "1808840"
  },
  {
    "text": "think in the same way here with the network protection and using good",
    "start": "1808840",
    "end": "1814919"
  },
  {
    "text": "quality SFTP and uh having of course least privilege configuration for the uh",
    "start": "1814919",
    "end": "1821200"
  },
  {
    "text": "accounts that we use and uh also using the client certificate authentication",
    "start": "1821200",
    "end": "1826240"
  },
  {
    "text": "method even if it's courts um uh username password so so with that we",
    "start": "1826240",
    "end": "1832159"
  },
  {
    "text": "sort of get the same level of security here and we can feel confident that there's no sort of weak way into our",
    "start": "1832159",
    "end": "1839679"
  },
  {
    "text": "sensitive data and uh then we have the message bars and we can do what we can",
    "start": "1839679",
    "end": "1846320"
  },
  {
    "text": "there in the same way with the network segmentation we have good transport layer security and uh uh we try to do",
    "start": "1846320",
    "end": "1853559"
  },
  {
    "text": "strong client authentication we can use that and then we need to do least privilege configuration for the topics",
    "start": "1853559",
    "end": "1859360"
  },
  {
    "text": "and cues in the same way as we had worked with the Scopes or FTP accounts",
    "start": "1859360",
    "end": "1865320"
  },
  {
    "text": "or or file access and uh maybe also we need to consider message signing because",
    "start": "1865320",
    "end": "1871919"
  },
  {
    "text": "if there's a lot of people putting messages on the same cues and topics how can we know which client put which",
    "start": "1871919",
    "end": "1879000"
  },
  {
    "text": "message right so we might need to do some more work there but um and and when",
    "start": "1879000",
    "end": "1884880"
  },
  {
    "text": "we starting to see this map we realize that securing one of these",
    "start": "1884880",
    "end": "1890919"
  },
  {
    "text": "paths is is not that hard perhaps but securing all paths all the time forever",
    "start": "1890919",
    "end": "1896919"
  },
  {
    "text": "and ever that is hard and uh you're starting to realize uh that",
    "start": "1896919",
    "end": "1903320"
  },
  {
    "text": "um er complexity is really the enemy of security and it's was stated and put",
    "start": "1903320",
    "end": "1909679"
  },
  {
    "text": "very well by Bruce in 1999 and and the the headline there is you can't secure",
    "start": "1909679",
    "end": "1916360"
  },
  {
    "text": "what you don't understand and can really recommend reading this and a way to",
    "start": "1916360",
    "end": "1922919"
  },
  {
    "text": "because that's one of the problems with Integrations in large Solutions is that",
    "start": "1922919",
    "end": "1928159"
  },
  {
    "text": "you sort of lose track of them and you maybe you don't after a few years you don't have a full understanding on how",
    "start": "1928159",
    "end": "1934480"
  },
  {
    "text": "the system works and all the ways you can access the data and you have some weak ways that you don't that you're not",
    "start": "1934480",
    "end": "1941279"
  },
  {
    "text": "aware of and uh one way to keep that understanding is to work with good",
    "start": "1941279",
    "end": "1947919"
  },
  {
    "text": "pictures of the system just a classic system diagram or and and that",
    "start": "1947919",
    "end": "1954840"
  },
  {
    "text": "shows the the um sort of important security aspects and um so so we get an",
    "start": "1954840",
    "end": "1961720"
  },
  {
    "text": "understanding of what it is what's hosting our API here is Asher icons so",
    "start": "1961720",
    "end": "1968360"
  },
  {
    "text": "for those knowing Asher it's quite obvious what what this is that it's an app service it's not a kubernetes",
    "start": "1968360",
    "end": "1973960"
  },
  {
    "text": "cluster and uh and we have some private networking going on with we don't have to go into details there and the the",
    "start": "1973960",
    "end": "1980200"
  },
  {
    "text": "blue z z zone is to show that here we have Network protection and the yellow",
    "start": "1980200",
    "end": "1986039"
  },
  {
    "text": "we don't have it it it's it's public uh and um and as you can see the the",
    "start": "1986039",
    "end": "1991279"
  },
  {
    "text": "message bus is publicly as accessible and that's perhaps of budget reasons",
    "start": "1991279",
    "end": "1996600"
  },
  {
    "text": "because it's expensive to do private networking for in AER for message buses or it's misconfiguration and we're not",
    "start": "1996600",
    "end": "2002519"
  },
  {
    "text": "aware of that so uh this is the strong solution that we talked about with mutual",
    "start": "2002519",
    "end": "2008440"
  },
  {
    "text": "and and and all that and uh then we get a feature request so we feel pretty",
    "start": "2008440",
    "end": "2014080"
  },
  {
    "text": "confident here because the managed ident there that's a strong way to authenticate so it's it's hard to even",
    "start": "2014080",
    "end": "2021240"
  },
  {
    "text": "if it's public it's hard to uh get access to the bus and uh then we get a",
    "start": "2021240",
    "end": "2026639"
  },
  {
    "text": "request that the this client should have access and um it's quite easy to solve",
    "start": "2026639",
    "end": "2032799"
  },
  {
    "text": "that it just give it a a key connection string or sauce key to that's service",
    "start": "2032799",
    "end": "2038600"
  },
  {
    "text": "and we're done so and then all of a sudden we have this strong solution and we have this weak way into our perhaps",
    "start": "2038600",
    "end": "2046360"
  },
  {
    "text": "most sensitive part of the system the message bus where you can maybe control",
    "start": "2046360",
    "end": "2051638"
  },
  {
    "text": "everything that happens so um H and and when we analyze this as an attacker we",
    "start": "2051639",
    "end": "2058200"
  },
  {
    "text": "see that we have those two ways in and one is protected by that client certificate which is really hard to get",
    "start": "2058200",
    "end": "2064560"
  },
  {
    "text": "and saski may not be that hard to get it might be check into Ros and and things like",
    "start": "2064560",
    "end": "2070040"
  },
  {
    "text": "that certificates are of easier to treat in a good way and and and if we add this",
    "start": "2070040",
    "end": "2078520"
  },
  {
    "text": "attacker perspective this is called threat modeling as well and uh and that's uh usually the way you perhaps",
    "start": "2078520",
    "end": "2085599"
  },
  {
    "text": "you you do before a penetration test or in in the beginning to understand the system to understand the weak spots and",
    "start": "2085599",
    "end": "2091440"
  },
  {
    "text": "then uh and so so that's really really good to uh to do as a team and and keep",
    "start": "2091440",
    "end": "2097440"
  },
  {
    "text": "up updated as you add new Integrations so you understand all the communication parts and how strong Your solution",
    "start": "2097440",
    "end": "2106440"
  },
  {
    "text": "is so the solution here is of course or you could do like this or once again go",
    "start": "2108920",
    "end": "2115720"
  },
  {
    "text": "through the API and uh and uh that's the way you access the message bus and then",
    "start": "2115720",
    "end": "2120800"
  },
  {
    "text": "so you mitigate the risk um there uh so uh and then you will have this attacker",
    "start": "2120800",
    "end": "2126599"
  },
  {
    "text": "model and it's easy to analyze and easy to understand yeah another way to look at",
    "start": "2126599",
    "end": "2133359"
  },
  {
    "text": "to get an understanding of the security this was sort of from the architectur",
    "start": "2133359",
    "end": "2138560"
  },
  {
    "text": "perspective and a little bit of networking but maybe from a developer point of view that's building the API",
    "start": "2138560",
    "end": "2144760"
  },
  {
    "text": "this is a way to understand the system where we should with zero trust we",
    "start": "2144760",
    "end": "2150119"
  },
  {
    "text": "should have apis that are secure even if we don't have an infrastructure protection so we don't have that in the",
    "start": "2150119",
    "end": "2157119"
  },
  {
    "text": "picture so but all the protections that we built for API the token validation and and things like that we put that as early as",
    "start": "2157119",
    "end": "2163680"
  },
  {
    "text": "possible in our application layer so we deny requests early that's that's good",
    "start": "2163680",
    "end": "2169079"
  },
  {
    "text": "and that's commonly built that way and uh so if we take a look at we have an",
    "start": "2169079",
    "end": "2175240"
  },
  {
    "text": "endpoint um in this example we have a get product by ID endpoint the code in",
    "start": "2175240",
    "end": "2181839"
  },
  {
    "text": "the application layer it looks like this and uh as we can see here we have this",
    "start": "2181839",
    "end": "2187440"
  },
  {
    "text": "is net and C but in other language it looks quite similar so um it's just example",
    "start": "2187440",
    "end": "2193880"
  },
  {
    "text": "code here but we have some sort of function level access control with some attribute in Java that would be a",
    "start": "2193880",
    "end": "2200400"
  },
  {
    "text": "pre-authorized tag um uh and uh then we have input validation that's good and we",
    "start": "2200400",
    "end": "2207040"
  },
  {
    "text": "have object level authorization that's something that a lot of people Miss that's why idor or Bula broken object",
    "start": "2207040",
    "end": "2215040"
  },
  {
    "text": "level authorization is number one on the over toop 10 list for apis but we have it we we know how to do this good and",
    "start": "2215040",
    "end": "2222119"
  },
  {
    "text": "then so that's the application layer and then we sort of do the domain logic and",
    "start": "2222119",
    "end": "2228440"
  },
  {
    "text": "accessing storage or uh the message bus that we do in the service layer but we we really don't do any security that",
    "start": "2228440",
    "end": "2235079"
  },
  {
    "text": "that that's just business logic and and getting data efficient so this is our solution and if we look at that then our",
    "start": "2235079",
    "end": "2243520"
  },
  {
    "text": "trust boundary boundary will be like this um if we we have just had a storage",
    "start": "2243520",
    "end": "2248599"
  },
  {
    "text": "and that might be fine if it's just an internal storage that we are the only ones that use but uh then we add this uh",
    "start": "2248599",
    "end": "2256640"
  },
  {
    "text": "message bus and uh that not trust boundary grows because uh the message",
    "start": "2256640",
    "end": "2262680"
  },
  {
    "text": "bus listener they it just use the domain logic and the service layer it doesn't go through the API the application layer",
    "start": "2262680",
    "end": "2270119"
  },
  {
    "text": "there so so we so that's included in a trust boundary as well and in larger",
    "start": "2270119",
    "end": "2275280"
  },
  {
    "text": "organizations there can be a lot of clients putting messages on the bus so uh so that this might simply be too weak",
    "start": "2275280",
    "end": "2283160"
  },
  {
    "text": "for us we can't have this big trust boundary it's starting to grow like the insecure internet that we sort of",
    "start": "2283160",
    "end": "2290319"
  },
  {
    "text": "laughed about early on or the big kubernetes cluster H so um we need to",
    "start": "2290319",
    "end": "2296000"
  },
  {
    "text": "mitigate this risk and then we can do some refactoring in the code we still",
    "start": "2296000",
    "end": "2301359"
  },
  {
    "text": "have the function level uh authorization and we have the input validation for early return but uh we have moved the",
    "start": "2301359",
    "end": "2309640"
  },
  {
    "text": "object level authorization because that's often tightly related to domain logic and and things like that and uh",
    "start": "2309640",
    "end": "2316480"
  },
  {
    "text": "now we have put um authorization and validations in the service layer as well",
    "start": "2316480",
    "end": "2323880"
  },
  {
    "text": "so if we look into the service layer then it does the same data access as",
    "start": "2323880",
    "end": "2329560"
  },
  {
    "text": "before nothing has changed really there but we have added function level",
    "start": "2329560",
    "end": "2335000"
  },
  {
    "text": "authorization we have input Val ation since we using strongly typed domain",
    "start": "2335000",
    "end": "2340839"
  },
  {
    "text": "objects and entering this function we don't allow any strings uh that's",
    "start": "2340839",
    "end": "2346280"
  },
  {
    "text": "unrestricted and then we have the object level authorization as well so with with",
    "start": "2346280",
    "end": "2352560"
  },
  {
    "text": "this code we always know that we will do proper authorization even if this code",
    "start": "2352560",
    "end": "2358400"
  },
  {
    "text": "is triggered from a service bu me message or if it's triggered from an API",
    "start": "2358400",
    "end": "2364440"
  },
  {
    "text": "call so um with that we get this blue border and uh we get a",
    "start": "2364440",
    "end": "2371920"
  },
  {
    "text": "much smaller trust boundary once more and that's it's good to understand",
    "start": "2371920",
    "end": "2376960"
  },
  {
    "text": "what's within your trust boundary and um one thing to note",
    "start": "2376960",
    "end": "2382119"
  },
  {
    "text": "here we should of course have the infrastructure protections and the firewall and Gateway even if we build a",
    "start": "2382119",
    "end": "2388680"
  },
  {
    "text": "strong solution like this it's defense in depth you can see the layers here multiple layers of security and that",
    "start": "2388680",
    "end": "2395040"
  },
  {
    "text": "means we actually we're doing the function level authorization twice within the API or perhaps even a third",
    "start": "2395040",
    "end": "2402079"
  },
  {
    "text": "time if we in the Gateway validate the token and route based on Scopes a web",
    "start": "2402079",
    "end": "2408119"
  },
  {
    "text": "application firewall might do some input validation that we also do in the application layer and also in the",
    "start": "2408119",
    "end": "2414359"
  },
  {
    "text": "service layer and that is usually not a problem um sometimes you might need to",
    "start": "2414359",
    "end": "2419640"
  },
  {
    "text": "work on performance for for certain uh applications but but um often it's not a",
    "start": "2419640",
    "end": "2425560"
  },
  {
    "text": "problem it's a strong solution uh and but once again it depends on your context your threat model if it's worth",
    "start": "2425560",
    "end": "2432880"
  },
  {
    "text": "investing in multiple layers of security but uh for high security um applications",
    "start": "2432880",
    "end": "2438560"
  },
  {
    "text": "it's it's definitely worth to have a strong solution uh so um yeah so that was uh",
    "start": "2438560",
    "end": "2446480"
  },
  {
    "text": "trust boundaries and um we have now a really strong solution where we enforce",
    "start": "2446480",
    "end": "2453400"
  },
  {
    "text": "this for every uh type of integration we have and we have strong patterns that uh",
    "start": "2453400",
    "end": "2462440"
  },
  {
    "text": "so we can feel pretty sure that that happens so what can go wrong now uh we",
    "start": "2462440",
    "end": "2467960"
  },
  {
    "text": "have a really good design here for secure Integrations so the thing that can go wrong is of course implementation",
    "start": "2467960",
    "end": "2473800"
  },
  {
    "text": "that we do some mistakes and we do some bugs so I really really important uh",
    "start": "2473800",
    "end": "2480119"
  },
  {
    "text": "thing for secure system integration is to verify that this works as expected so",
    "start": "2480119",
    "end": "2487599"
  },
  {
    "text": "um when we start penetration tests we we often ask the client what they sort of",
    "start": "2487599",
    "end": "2494119"
  },
  {
    "text": "fear and and a lot of clients they say that our we don't we don't really that we",
    "start": "2494119",
    "end": "2501240"
  },
  {
    "text": "leak data between users or customers or to third part Integrations and then uh",
    "start": "2501240",
    "end": "2507400"
  },
  {
    "text": "we we look for what kind of testing do we do to verify that this won't happen and a lot of time those kind of tests",
    "start": "2507400",
    "end": "2514359"
  },
  {
    "text": "the test categories here that's from the web security testing guide they they're",
    "start": "2514359",
    "end": "2519680"
  },
  {
    "text": "really missing so um uh so I I want to show a good example of one kind of test",
    "start": "2519680",
    "end": "2527240"
  },
  {
    "text": "that it's easy to do is this soal negative test case that we",
    "start": "2527240",
    "end": "2534119"
  },
  {
    "text": "should return forbidden if we don't have the correct scope and uh and uh and as",
    "start": "2534119",
    "end": "2540640"
  },
  {
    "text": "penetration testers that's of course something that we will try and and sometimes we succeed and then it feels a",
    "start": "2540640",
    "end": "2546920"
  },
  {
    "text": "little bit unfortunate if if the team building the API haven't bothered",
    "start": "2546920",
    "end": "2552240"
  },
  {
    "text": "haven't done these kind of test to realize that it's not that perhaps that much work to to do so um so don't wait",
    "start": "2552240",
    "end": "2559599"
  },
  {
    "text": "for appen to find those authorization bugs and [Music]",
    "start": "2559599",
    "end": "2565119"
  },
  {
    "text": "um yeah and other good resources for verifying security that we often refer",
    "start": "2565119",
    "end": "2570839"
  },
  {
    "text": "to is uh C controls which sort of is for getting the full picture of security",
    "start": "2570839",
    "end": "2576680"
  },
  {
    "text": "because it covers things like uh service provider management account management",
    "start": "2576680",
    "end": "2581920"
  },
  {
    "text": "the life cycle of an integration that you um uh onboard it in a good way that",
    "start": "2581920",
    "end": "2587960"
  },
  {
    "text": "you monitor it during usage and that you decommission it when once you don't use so don't forget about it because that's",
    "start": "2587960",
    "end": "2594800"
  },
  {
    "text": "also a common mistake that old service and integration endpoints they they they",
    "start": "2594800",
    "end": "2601200"
  },
  {
    "text": "just stay there forever even if they're not used and then you have an unnecessary large attack surface um so",
    "start": "2601200",
    "end": "2608280"
  },
  {
    "text": "um but but SE control it's good and it has also um good guidance for how to hard",
    "start": "2608280",
    "end": "2615720"
  },
  {
    "text": "and infrastructure and things like that but it doesn't say really that much on how to build secure application or",
    "start": "2615720",
    "end": "2621319"
  },
  {
    "text": "application security for for that we often refer to OAS asvs and if we're",
    "start": "2621319",
    "end": "2627079"
  },
  {
    "text": "using oo then we have the best current practices rfcs and the F security",
    "start": "2627079",
    "end": "2632200"
  },
  {
    "text": "profile that I showed you earlier and uh with all this we we will",
    "start": "2632200",
    "end": "2638200"
  },
  {
    "text": "have a really good security Basel running guidance and we of course need to apply the parts that are relevant for",
    "start": "2638200",
    "end": "2644839"
  },
  {
    "text": "the integration that we are building or the context that we're in uh and um this",
    "start": "2644839",
    "end": "2651000"
  },
  {
    "text": "is also a good way working with security is in this structured way it's also a good way to uh to meet compliance",
    "start": "2651000",
    "end": "2659160"
  },
  {
    "text": "requirements and and you're able to show that your solution is also compliant",
    "start": "2659160",
    "end": "2665240"
  },
  {
    "text": "because that might also be important requirements that affects your security that you must use certain authentication",
    "start": "2665240",
    "end": "2672400"
  },
  {
    "text": "methods and cryptos and things like that so um yeah with with all this we have uh a",
    "start": "2672400",
    "end": "2682920"
  },
  {
    "text": "design that is both secure and compliant sort of and um given that all tests are",
    "start": "2682920",
    "end": "2691160"
  },
  {
    "text": "green that you can see here we we have done this I want to point out not we have talked a lot about confidentiality",
    "start": "2691160",
    "end": "2698319"
  },
  {
    "text": "and integrity and and but the the last test category load test and performance",
    "start": "2698319",
    "end": "2703680"
  },
  {
    "text": "availability is also an important aspect of security and for some Integrations",
    "start": "2703680",
    "end": "2709280"
  },
  {
    "text": "that might be the sort of maybe the most important part that is that the integration works and the service",
    "start": "2709280",
    "end": "2714960"
  },
  {
    "text": "responds fast and so you have test that um that um shows that you're not easy to",
    "start": "2714960",
    "end": "2722079"
  },
  {
    "text": "be uh have denial of service attacks and that the scale out works and that the DS protect is in place and and and things",
    "start": "2722079",
    "end": "2729040"
  },
  {
    "text": "like that um so but but let's say we have done all this then it's fair to say",
    "start": "2729040",
    "end": "2735079"
  },
  {
    "text": "that we have a uh Integrations that are secure and compliant by Design and uh",
    "start": "2735079",
    "end": "2743599"
  },
  {
    "text": "that's pretty good so uh it is uh time to uh",
    "start": "2743599",
    "end": "2750680"
  },
  {
    "text": "summarize so yeah to define a security Baseline and I think these are the four",
    "start": "2752040",
    "end": "2758400"
  },
  {
    "text": "key aspects that are valid for an integration uh to sort of think of can",
    "start": "2758400",
    "end": "2765280"
  },
  {
    "text": "we restrict something with network segmentation sometimes you can sometimes you you can't but but uh but a lot of",
    "start": "2765280",
    "end": "2771720"
  },
  {
    "text": "times maybe you don't need to expose uh integration endpoints for",
    "start": "2771720",
    "end": "2777680"
  },
  {
    "text": "everybody on the internet just for your integration Partners um and uh assert",
    "start": "2777680",
    "end": "2783400"
  },
  {
    "text": "strong transport layer security understand where it's terminated and and where it's re-encrypted and and how",
    "start": "2783400",
    "end": "2789839"
  },
  {
    "text": "strong transport layer security you actually have uh all the way from the client to the",
    "start": "2789839",
    "end": "2796160"
  },
  {
    "text": "server and uh assert strong client authentication methods for all requests",
    "start": "2796160",
    "end": "2802480"
  },
  {
    "text": "um that's that's of course really really important and and even if you uh don't",
    "start": "2802480",
    "end": "2809040"
  },
  {
    "text": "have high security requirements or you you can't use Mutual TLS or this new um",
    "start": "2809040",
    "end": "2814880"
  },
  {
    "text": "private Key Jot thing then you could sort of Harden the basic authentication",
    "start": "2814880",
    "end": "2820720"
  },
  {
    "text": "Thing by using random good secrets and rotating that that might and proper Key",
    "start": "2820720",
    "end": "2827559"
  },
  {
    "text": "Management so there's a lot of work that you can do there to to mitigate risks even if you can't use asymmetric methods",
    "start": "2827559",
    "end": "2835040"
  },
  {
    "text": "but because if you use those you still have to rotate those certificates so that problem don't go away and then also",
    "start": "2835040",
    "end": "2840599"
  },
  {
    "text": "use fine grain authorization for all request and have this close to the",
    "start": "2840599",
    "end": "2846960"
  },
  {
    "text": "application core at the resource server so you don't assume that other things",
    "start": "2846960",
    "end": "2852319"
  },
  {
    "text": "have done important security validations for you apply both zero trust and defense in depth and",
    "start": "2852319",
    "end": "2860160"
  },
  {
    "text": "um then we also the importance here um with Integrations one is easy to manage",
    "start": "2860160",
    "end": "2867040"
  },
  {
    "text": "but in a large organization there are maybe hundreds so if you can reduce",
    "start": "2867040",
    "end": "2872880"
  },
  {
    "text": "complexity or keep complexity under control have good good architectural",
    "start": "2872880",
    "end": "2877920"
  },
  {
    "text": "diagrams and threat models that you so you understand the the whole system and how Integrations works and uh know your",
    "start": "2877920",
    "end": "2885280"
  },
  {
    "text": "trust boundaries and do those technically detailed threat models and uh the last thing here verify",
    "start": "2885280",
    "end": "2895760"
  },
  {
    "text": "that it works with tests don't wait for a penetration test to find misconfigurations and and bugs there's a",
    "start": "2895760",
    "end": "2902240"
  },
  {
    "text": "lot of security Focus testing that you can do do uh by yourself by looking into",
    "start": "2902240",
    "end": "2909079"
  },
  {
    "text": "U uh those security Frameworks like Cs and OAS asvs there are of course a lot",
    "start": "2909079",
    "end": "2915119"
  },
  {
    "text": "of Frameworks that can help you but the those are good examples and so thank you",
    "start": "2915119",
    "end": "2922110"
  },
  {
    "text": "[Applause]",
    "start": "2922110",
    "end": "2925829"
  }
]