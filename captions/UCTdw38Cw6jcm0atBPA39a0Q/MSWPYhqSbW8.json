[
  {
    "text": "beginning of my talk my waters already gone there we go okay before I get too",
    "start": "350",
    "end": "7919"
  },
  {
    "text": "deep into the slides I mean I'm I do have some slides I don't want to talk through but really I want to get into",
    "start": "7919",
    "end": "14009"
  },
  {
    "text": "some code and so I want to make sure that we we spend time looking at some code in in Visual Studio and I've just",
    "start": "14009",
    "end": "22199"
  },
  {
    "text": "created a little front end with angular to call the restful services that are in",
    "start": "22199",
    "end": "28769"
  },
  {
    "text": "there and and they're really pretty small so let me just maybe take a look briefly at the application that we're",
    "start": "28769",
    "end": "38610"
  },
  {
    "text": "just going to take a look at here so it's a little budget app as with most",
    "start": "38610",
    "end": "46260"
  },
  {
    "text": "developing projects I was thinking I was going to make it a lot more robust than",
    "start": "46260",
    "end": "51660"
  },
  {
    "text": "it is but you know a time time was against me and then the reality is is I",
    "start": "51660",
    "end": "58079"
  },
  {
    "text": "don't really want to focus on the front end I mean contrary to what this screen",
    "start": "58079",
    "end": "64049"
  },
  {
    "text": "shows I do actually care about user interface this is not exactly pretty but",
    "start": "64049",
    "end": "69689"
  },
  {
    "text": "but in any case I just have three basic tables that I'm working against users",
    "start": "69689",
    "end": "75619"
  },
  {
    "text": "the users table categories and then of",
    "start": "75619",
    "end": "81390"
  },
  {
    "text": "course the budget or expenses this is",
    "start": "81390",
    "end": "86850"
  },
  {
    "text": "something that I've kind of toyed around with a little bit just since I travel a lot I kind of need to keep track of my",
    "start": "86850",
    "end": "92610"
  },
  {
    "text": "expenses and so in the past I've just created a little database to store some of that and this is a really kind of",
    "start": "92610",
    "end": "98400"
  },
  {
    "text": "trim down version of how that might look just to track that and I'm not looking",
    "start": "98400",
    "end": "103500"
  },
  {
    "text": "at a income this is really strictly just expenses so it could go it could go a",
    "start": "103500",
    "end": "108720"
  },
  {
    "text": "lot deeper than this in any case so with the with the categories we could add a",
    "start": "108720",
    "end": "116070"
  },
  {
    "text": "category if we wanted to let's just look at what the categories our food housing transportation miscellaneous got to have",
    "start": "116070",
    "end": "124619"
  },
  {
    "text": "a slush fund for whatever I want all right and I'll",
    "start": "124619",
    "end": "133720"
  },
  {
    "text": "add that too to my category and then of course I've got users and none of those are me and then and the home screen",
    "start": "133720",
    "end": "140950"
  },
  {
    "text": "that's just expenses and we'll take a look at you know some of the some of the things that we're gonna talk about and",
    "start": "140950",
    "end": "147340"
  },
  {
    "text": "is the you know how do we deal with things like like paging and and so on",
    "start": "147340",
    "end": "152680"
  },
  {
    "text": "that doesn't seem like when you first think about rest what that should be a big concern and things but but it's",
    "start": "152680",
    "end": "158680"
  },
  {
    "text": "something we actually have to think about as you look at restful services and we'll talk about some of those things and let's just get back to this",
    "start": "158680",
    "end": "171310"
  },
  {
    "text": "okay so all of the code that we're gonna have",
    "start": "171310",
    "end": "177850"
  },
  {
    "text": "here I uploaded to github so if you're if you want oh this will be available I",
    "start": "177850",
    "end": "183690"
  },
  {
    "text": "guess through through the NDC website as well and of course you can see the link",
    "start": "183690",
    "end": "188709"
  },
  {
    "text": "there but you can download slides as well as all the source code with this as",
    "start": "188709",
    "end": "194140"
  },
  {
    "text": "well just uses a sequel server database on the back end for those that just got four out of Cosmos I'm sorry it's not",
    "start": "194140",
    "end": "199810"
  },
  {
    "text": "it's not a JSON style database but that's alright okay so what are we gonna",
    "start": "199810",
    "end": "207580"
  },
  {
    "text": "cover well we're gonna talk about rest what is rest so just we have a basic",
    "start": "207580",
    "end": "212980"
  },
  {
    "text": "understanding I think we need to set kind of a ground groundwork because really the building of the restful service once you understand is it's",
    "start": "212980",
    "end": "219370"
  },
  {
    "text": "really quite easy in web api so we'll cover what is rest we'll take a look at",
    "start": "219370",
    "end": "225519"
  },
  {
    "text": "asp.net core web api we'll talk about you know some of the things you need to set up just to configure it again it's",
    "start": "225519",
    "end": "232239"
  },
  {
    "text": "gotten really easy so it's not that hard to configure but we'll take a look at that and then then we'll take a look at",
    "start": "232239",
    "end": "237400"
  },
  {
    "text": "swagger what is the role of swagger when we're dealing with with restful services and why might we use it rest and the",
    "start": "237400",
    "end": "247989"
  },
  {
    "text": "idea of rest does not new I mean that this whole idea of communicating distributed processing even before soap",
    "start": "247989",
    "end": "255220"
  },
  {
    "text": "and a SMX web services it's it's been around much longer than that you got",
    "start": "255220",
    "end": "260389"
  },
  {
    "text": "we have decom before that I remember building websites in classic SP where we",
    "start": "260389",
    "end": "266240"
  },
  {
    "text": "communicated with ups through XML with get and post methods only so it's not",
    "start": "266240",
    "end": "272779"
  },
  {
    "text": "that this idea of communicating with a server with a distributed and business-to-business or not so much",
    "start": "272779",
    "end": "278419"
  },
  {
    "text": "business-to-consumer it's been around for a long time we had dotnet remoting that came out with",
    "start": "278419",
    "end": "285680"
  },
  {
    "text": "dotnet of course as well so had either a SMX Web Services or dotnet remoting if we wanted to do things internally and",
    "start": "285680",
    "end": "292400"
  },
  {
    "text": "then the limitations of soap or the ASM X Web Services kind of gave way to WCF",
    "start": "292400",
    "end": "300759"
  },
  {
    "text": "then which really is I guess it's a",
    "start": "300759",
    "end": "306979"
  },
  {
    "text": "combination of a SMX and dotnet remoting because you could you could really choose to do both of those with within",
    "start": "306979",
    "end": "313900"
  },
  {
    "text": "WCF so in fact rest has been around for",
    "start": "313900",
    "end": "318919"
  },
  {
    "text": "a long time so why did I list it as one of these last things because that I rest was was actually available before WCF",
    "start": "318919",
    "end": "324889"
  },
  {
    "text": "but it kind of became popular a lot more popular around that same time and the",
    "start": "324889",
    "end": "330229"
  },
  {
    "text": "first restful services that we could build in in dotnet were in WCF so that",
    "start": "330229",
    "end": "336379"
  },
  {
    "text": "was if you really wanted to truly take advantage of all the restful verbs and",
    "start": "336379",
    "end": "342770"
  },
  {
    "text": "actions we had we had to do that in WCS like the asp.net webforms and a snx",
    "start": "342770",
    "end": "349129"
  },
  {
    "text": "didn't didn't allow for that we really really had get and post methods at that",
    "start": "349129",
    "end": "354409"
  },
  {
    "text": "point and of course now there's graph QL and there's gonna be a talk on graph QL",
    "start": "354409",
    "end": "360500"
  },
  {
    "text": "right in this room right after me which that's a pretty exciting new new",
    "start": "360500",
    "end": "366740"
  },
  {
    "text": "opportunity of things things that are to come and a way to program your your",
    "start": "366740",
    "end": "373159"
  },
  {
    "text": "distributed applications so all of those are still available well WCF really is",
    "start": "373159",
    "end": "379370"
  },
  {
    "text": "like I said from WCF rest and graph QL all those are really available to you so how do we choose between between those",
    "start": "379370",
    "end": "386960"
  },
  {
    "text": "let's just compare those just real briefly obviously we're going to focus on rest in this session but I do want to",
    "start": "386960",
    "end": "393709"
  },
  {
    "text": "take so WCF or soap a SMX web services really",
    "start": "393709",
    "end": "400110"
  },
  {
    "text": "their primary the primary thought there was we want to distribute our business",
    "start": "400110",
    "end": "405930"
  },
  {
    "text": "logic we want to move it somewhere else and so so as you look at old soap web soap services or WCF services that's",
    "start": "405930",
    "end": "414120"
  },
  {
    "text": "really how they're architected the idea is we're moving business logic over to to a different layer so we make these we",
    "start": "414120",
    "end": "420450"
  },
  {
    "text": "call these endpoints with web methods we'll take a look at some of the ideas I'm because because it was so flexible",
    "start": "420450",
    "end": "428340"
  },
  {
    "text": "and removing the business logic in order to really make best use of these types",
    "start": "428340",
    "end": "435030"
  },
  {
    "text": "of services we had to have heavy documentation you had to really understand what are the services what",
    "start": "435030",
    "end": "440670"
  },
  {
    "text": "are they trying to do so it's so it's a very tightly coupled type of scenario even though we're distributing our",
    "start": "440670",
    "end": "446190"
  },
  {
    "text": "processing the the front-end or a client was was pretty tightly coupled to our",
    "start": "446190",
    "end": "452520"
  },
  {
    "text": "back-end in fact if you're using if you're still using WCF services you can",
    "start": "452520",
    "end": "460160"
  },
  {
    "text": "you can have basically connected services well similar to - oh my mind",
    "start": "460160",
    "end": "469110"
  },
  {
    "text": "just went blank WebSockets there we go",
    "start": "469110",
    "end": "474200"
  },
  {
    "text": "we have open communications and things and you leave a session open on the server and and and you're communicating",
    "start": "474200",
    "end": "479910"
  },
  {
    "text": "back and forth so so you have to it's very tightly coupled you really have to understand what's going on on the server",
    "start": "479910",
    "end": "486350"
  },
  {
    "text": "very good for for full-stack developers where you really have to understand the",
    "start": "486350",
    "end": "492180"
  },
  {
    "text": "entire process front to back the endpoints as I mentioned have many methods inside of them for for example",
    "start": "492180",
    "end": "499340"
  },
  {
    "text": "because the there's so much business logic there you might return different structures your the way your data looks",
    "start": "499340",
    "end": "505890"
  },
  {
    "text": "when it comes back or what goes in can can very very drastically from from one",
    "start": "505890",
    "end": "513570"
  },
  {
    "text": "call to the next and so really as I mentioned oh this is wasn't want to take",
    "start": "513570",
    "end": "520050"
  },
  {
    "text": "a look at that's really we consider that kind of our business layer what about rest rest is really a lot more resource",
    "start": "520050",
    "end": "527640"
  },
  {
    "text": "driven and we'll take a look at why in just a moment but but it's really based on the resources that are that are there",
    "start": "527640",
    "end": "536089"
  },
  {
    "text": "there's really if you understand rest there's not a whole lot of documentation",
    "start": "536089",
    "end": "541500"
  },
  {
    "text": "that's required because you understand the the structure they understand how rests works so the documentation goes",
    "start": "541500",
    "end": "548850"
  },
  {
    "text": "down quite a bit each end point is very well-defined as well so it has few",
    "start": "548850",
    "end": "554760"
  },
  {
    "text": "actions in fact the actions that it does have are are pretty well-defined as well and really I'm probably look at that as",
    "start": "554760",
    "end": "562770"
  },
  {
    "text": "much more of a repository layer than than a business layer we don't do a lot of business logic on on the rest",
    "start": "562770",
    "end": "568500"
  },
  {
    "text": "endpoints what about graph QL that came about and",
    "start": "568500",
    "end": "573899"
  },
  {
    "text": "you know it does graph QL really mean the death of rest so graph QL similar to",
    "start": "573899",
    "end": "582750"
  },
  {
    "text": "rest is really focused on resources not only the resources but one of the",
    "start": "582750",
    "end": "588270"
  },
  {
    "text": "limitations of rest is a resource within rest doesn't really know much about its",
    "start": "588270",
    "end": "595950"
  },
  {
    "text": "resources so so we'll see is you have to make a lot of you have to make a lot of",
    "start": "595950",
    "end": "602040"
  },
  {
    "text": "calls to get all the data that you want and a specific client whereas with graph QL the idea is you're",
    "start": "602040",
    "end": "609839"
  },
  {
    "text": "not just fork is focused on the resource but its relationships and as the name",
    "start": "609839",
    "end": "615060"
  },
  {
    "text": "implies it's a querying language you can actually define what data you want just like in a sequel database when I do a",
    "start": "615060",
    "end": "623400"
  },
  {
    "text": "query I can join multiple tables I can specify individual columns that I want so with graph QL you can actually define",
    "start": "623400",
    "end": "630750"
  },
  {
    "text": "within your query what your data structure should look like when it comes back so there are some some pretty",
    "start": "630750",
    "end": "635940"
  },
  {
    "text": "strong benefits there as well it's much more of a semantic model if you've ever",
    "start": "635940",
    "end": "641010"
  },
  {
    "text": "done any kind of business intelligence or built built kind of a back-end and data model like a semantic model that",
    "start": "641010",
    "end": "647070"
  },
  {
    "text": "analysts need to use the the concept is very much the same you have to build the structure on the back end and really",
    "start": "647070",
    "end": "653220"
  },
  {
    "text": "have a well-defined model that can be easily queried on the front end so there's some some heavy",
    "start": "653220",
    "end": "660300"
  },
  {
    "text": "lifting on the back end to make that happen and similar to rest again it has a few",
    "start": "660300",
    "end": "667410"
  },
  {
    "text": "actions and also it's think about it",
    "start": "667410",
    "end": "673020"
  },
  {
    "text": "more of a repository layer it just responds to what we do it's a it stores the data it knows how to get the data",
    "start": "673020",
    "end": "679230"
  },
  {
    "text": "and we can update insert the data and so on the business logic doesn't reside",
    "start": "679230",
    "end": "684630"
  },
  {
    "text": "there the business logic communicates with it and then determines how to how to go there so a couple other things",
    "start": "684630",
    "end": "692540"
  },
  {
    "text": "server side versus client side development and so I just wanted to as I was preparing for this I kind of thought",
    "start": "692540",
    "end": "698250"
  },
  {
    "text": "well what what makes these three different the server in WCF is very",
    "start": "698250",
    "end": "703380"
  },
  {
    "text": "flexible you have your business logic you can you can make it do whatever you want and therefore it requires all that",
    "start": "703380",
    "end": "710310"
  },
  {
    "text": "documentation because the clients have to really understand how to use that so",
    "start": "710310",
    "end": "715590"
  },
  {
    "text": "the client therefore is rigid for for a client for a web developer or a mobile",
    "start": "715590",
    "end": "723510"
  },
  {
    "text": "Android iOS developer to be able to to get any changes they have to come to the",
    "start": "723510",
    "end": "729510"
  },
  {
    "text": "API team or the server developer and request changes and and so they're there",
    "start": "729510",
    "end": "735270"
  },
  {
    "text": "it's very rigid and there's the bottleneck there with rest the server is",
    "start": "735270",
    "end": "740330"
  },
  {
    "text": "quite rigid its well-defined as we talked about as far as how how the rest",
    "start": "740330",
    "end": "746490"
  },
  {
    "text": "of the server should work and the client is actually also quite rigid which if you haven't experienced that we'll we'll",
    "start": "746490",
    "end": "751920"
  },
  {
    "text": "take a look at that as well because this restful architecture really defines what",
    "start": "751920",
    "end": "758130"
  },
  {
    "text": "the server can and can't do that means the client has to adhere to those same type of principles graph QL in graph QL",
    "start": "758130",
    "end": "769260"
  },
  {
    "text": "the server again is quite rigid there's some heavy lifting ridges may be the wrong term there but but there's some",
    "start": "769260",
    "end": "776610"
  },
  {
    "text": "heavy lifting just to build the model that I was talking about and making sure that's available and and the really all",
    "start": "776610",
    "end": "782250"
  },
  {
    "text": "the work is done there and that is because we want the client to be extremely flexible because so the client",
    "start": "782250",
    "end": "788910"
  },
  {
    "text": "can say hey well this is the data that I want and and then they can do with the data how whatever they wanted",
    "start": "788910",
    "end": "795240"
  },
  {
    "text": "and then send the data back and the server developers have to determine how am I gonna deal with that data and how",
    "start": "795240",
    "end": "800670"
  },
  {
    "text": "how am I gonna process that and make sure that we still have data integrity at the end of the day as well",
    "start": "800670",
    "end": "805820"
  },
  {
    "text": "so there's there's trade-offs between all of them so the question then again",
    "start": "805820",
    "end": "812190"
  },
  {
    "text": "which do I choose well it depends there's there's not one that's the right",
    "start": "812190",
    "end": "817199"
  },
  {
    "text": "answer that really they're that they all have their place and where your development",
    "start": "817199",
    "end": "823620"
  },
  {
    "text": "goes so let's just take a look at some of the ideas in this simple simple",
    "start": "823620",
    "end": "830509"
  },
  {
    "text": "application that was talking about with WCF if I wanted to go with this data if",
    "start": "830509",
    "end": "837779"
  },
  {
    "text": "I want to get for example like a summary of data on one of my pages I would come",
    "start": "837779",
    "end": "843060"
  },
  {
    "text": "in and I could get the budget item I could get a user name and pair it up",
    "start": "843060",
    "end": "848370"
  },
  {
    "text": "with with all the expenses that that user has incurred and maybe summarize expenses for each category for that user",
    "start": "848370",
    "end": "855120"
  },
  {
    "text": "and I can return it all in one time so because of that because of the flexible nature of wucf I could have one endpoint",
    "start": "855120",
    "end": "862350"
  },
  {
    "text": "and one method that would do that so usually it would probably be called something like get users and budget by",
    "start": "862350",
    "end": "870930"
  },
  {
    "text": "category or something like that so the more you start developing this and as you can see this is just three tables so",
    "start": "870930",
    "end": "878459"
  },
  {
    "text": "as you start developing this the endpoint names or the method names start to look more like paragraphs than they do like a quick action with rest on the",
    "start": "878459",
    "end": "887940"
  },
  {
    "text": "other hand we're really focused on the resource and not the relationships so with the relationships what the",
    "start": "887940",
    "end": "894209"
  },
  {
    "text": "trade-off there is I can just have a verb I can just say get me all the users but then for each of the users I then",
    "start": "894209",
    "end": "901290"
  },
  {
    "text": "have to go I have to make another call to say get me all their all the expenses",
    "start": "901290",
    "end": "906569"
  },
  {
    "text": "and then I have to get all the categories as well and then the client can determine how to deal with that of",
    "start": "906569",
    "end": "912870"
  },
  {
    "text": "course we can filter it so we don't have to get all the users in the database and you know deal with the millions of",
    "start": "912870",
    "end": "919350"
  },
  {
    "text": "expense records just so I can display ten records on my screen in graph QL",
    "start": "919350",
    "end": "926350"
  },
  {
    "text": "once again there it's it's related it's an object relationship and we can define",
    "start": "926350",
    "end": "931520"
  },
  {
    "text": "okay I want the users and I only want their first name and last name and I want to see if I can build a rapport so",
    "start": "931520",
    "end": "937880"
  },
  {
    "text": "I can say I just I can specify which fields I want just first name last name I just want the category name or I guess",
    "start": "937880",
    "end": "945110"
  },
  {
    "text": "something to go all the way through the relationship I want the the amount of the budget items and the category name",
    "start": "945110",
    "end": "951230"
  },
  {
    "text": "I'd still have to do some aggregation on my site potentially but in any case it",
    "start": "951230",
    "end": "957170"
  },
  {
    "text": "gives me some more capability of",
    "start": "957170",
    "end": "961510"
  },
  {
    "text": "determining what date I want and not getting too much data back so what does",
    "start": "962440",
    "end": "968420"
  },
  {
    "text": "rest actually solve well as I mentioned it's a well-defined architectural",
    "start": "968420",
    "end": "974480"
  },
  {
    "text": "standard the ideas were separating the business domain or the business logic",
    "start": "974480",
    "end": "980450"
  },
  {
    "text": "from the server-side resources we have very well-defined set of verbs and",
    "start": "980450",
    "end": "985850"
  },
  {
    "text": "actions limited set and it focuses on the resource not the business logic or",
    "start": "985850",
    "end": "991430"
  },
  {
    "text": "the relationships so let's take a look at some of these what some of these WCF",
    "start": "991430",
    "end": "996589"
  },
  {
    "text": "or soap methods might look like I already mentioned some get all users I might have one service that has this get",
    "start": "996589",
    "end": "1003040"
  },
  {
    "text": "user by ID get user and budget by user ID get user and budget own typos get",
    "start": "1003040",
    "end": "1009820"
  },
  {
    "text": "user and budget by category ID insert user update user delete user so on and",
    "start": "1009820",
    "end": "1015730"
  },
  {
    "text": "so on this is by no means I'm sure I'm sure you've all seen like api's that",
    "start": "1015730",
    "end": "1024400"
  },
  {
    "text": "just have dozens or maybe even hundreds of methods that just that just get so convoluted and and you need a dictionary",
    "start": "1024400",
    "end": "1031150"
  },
  {
    "text": "just to know what's going on you know what what each of these methods are doing",
    "start": "1031150",
    "end": "1037110"
  },
  {
    "text": "conversely rest has just a set of verbs so we have get and get that's not an",
    "start": "1037110",
    "end": "1043600"
  },
  {
    "text": "accident because get usually what you'll see if you haven't seen it already we we",
    "start": "1043600",
    "end": "1050470"
  },
  {
    "text": "have at least usually to get methods one to get a list of all methods one that gets an individual item we have a post",
    "start": "1050470",
    "end": "1057090"
  },
  {
    "text": "this is post input this is one I don't know why but people",
    "start": "1057090",
    "end": "1064090"
  },
  {
    "text": "seem to have a lot of there's some confusion around which one is an insert and which one is an update post is the",
    "start": "1064090",
    "end": "1069160"
  },
  {
    "text": "insert and put is put is the update the idea here is that a post obviously",
    "start": "1069160",
    "end": "1077590"
  },
  {
    "text": "you're inserting record and with put we're replacing the entire record so if",
    "start": "1077590",
    "end": "1084580"
  },
  {
    "text": "we're going to stick strictly to what wrestle services say I'm just looking I'm looking the resource up by ID and",
    "start": "1084580",
    "end": "1091660"
  },
  {
    "text": "whatever I have I'm just going to replace it so so it's not really focusing on I'm replacing individual",
    "start": "1091660",
    "end": "1097510"
  },
  {
    "text": "items or individual portions of it I'm updating the entire record because that",
    "start": "1097510",
    "end": "1102940"
  },
  {
    "text": "was so because that was so common and some of these objects are rather large",
    "start": "1102940",
    "end": "1107980"
  },
  {
    "text": "we need to have an idea of being able to replace just or update just a portion of it and that's where I hope patch comes",
    "start": "1107980",
    "end": "1114370"
  },
  {
    "text": "in patch is probably not that often used but and it was added later to to the",
    "start": "1114370",
    "end": "1120850"
  },
  {
    "text": "rest documentation but but patch is like put except for it does give you the ability to just just send just a portion",
    "start": "1120850",
    "end": "1128140"
  },
  {
    "text": "of the resource and specify what you want update delete of course allows us to and delete and a resource and then we",
    "start": "1128140",
    "end": "1135280"
  },
  {
    "text": "have some others options that allow us to that allows us to basically query",
    "start": "1135280",
    "end": "1140700"
  },
  {
    "text": "query and endpoint and just say well what methods are available get post put delete and so on it'll return that",
    "start": "1140700",
    "end": "1147490"
  },
  {
    "text": "information head is really just kind of a thing and then trace a trace is",
    "start": "1147490",
    "end": "1153450"
  },
  {
    "text": "another one that's very rarely used just can be used for debugging but it also",
    "start": "1153450",
    "end": "1160030"
  },
  {
    "text": "opens up some vulnerabilities so it's actually not really recommended to use that what about idempotence what's",
    "start": "1160030",
    "end": "1167740"
  },
  {
    "text": "idempotence and what it why is it important and rest idempotence you can execute an action as many times as you",
    "start": "1167740",
    "end": "1174490"
  },
  {
    "text": "want and it will always have it'll have the same effect on the resource so",
    "start": "1174490",
    "end": "1180059"
  },
  {
    "text": "there's many times as I do an update if I if I execute the same update statement it will it will always result in the",
    "start": "1180059",
    "end": "1186340"
  },
  {
    "text": "same in the same result so because of",
    "start": "1186340",
    "end": "1191980"
  },
  {
    "text": "that rest rest services just define what you know what",
    "start": "1191980",
    "end": "1199330"
  },
  {
    "text": "actions are item potent and which ones aren't so get of course oh yeah get",
    "start": "1199330",
    "end": "1206410"
  },
  {
    "text": "decide important because we're not sorry the result might be different is somebody deleted it but but the actual the the fact that I'm doing it get I",
    "start": "1206410",
    "end": "1214500"
  },
  {
    "text": "shouldn't be affecting any server-side resources so that is idempotent post it's not idempotent because if I do an",
    "start": "1214500",
    "end": "1221590"
  },
  {
    "text": "insert multiple times I'm adding a new record I'm creating a new resource over and over so it's not I don't put input",
    "start": "1221590",
    "end": "1227680"
  },
  {
    "text": "it is it's an update delete is idempotent because once i've deleted if i go to delete it again it's it's not",
    "start": "1227680",
    "end": "1234400"
  },
  {
    "text": "going to delete another record it'll just not find the record and not delete it and patch like put is also idempotent",
    "start": "1234400",
    "end": "1243630"
  },
  {
    "text": "asp.net core web api if you build a web api with a Spadina core that does not",
    "start": "1243630",
    "end": "1249820"
  },
  {
    "text": "mean it's restful service it's just a framework and it supports rest it supports all the verbs and as I",
    "start": "1249820",
    "end": "1258040"
  },
  {
    "text": "mentioned I would say many and probably most for sure most web services that",
    "start": "1258040",
    "end": "1263050"
  },
  {
    "text": "I've seen are not rest restful and that's largely because we treat them",
    "start": "1263050",
    "end": "1269860"
  },
  {
    "text": "like they're WCF services we treat them more like a business layer than we do as a data layer or repository rest is",
    "start": "1269860",
    "end": "1278710"
  },
  {
    "text": "really its besides being an architectural standard and there's some things in place it's really a mindset",
    "start": "1278710",
    "end": "1284290"
  },
  {
    "text": "and we have to change the way that we think about dealing with our resources and it does require adoption or buy-in",
    "start": "1284290",
    "end": "1289510"
  },
  {
    "text": "by both client and server-side teams in order to make that happen now obviously",
    "start": "1289510",
    "end": "1294760"
  },
  {
    "text": "if the server-side team controls the restful service the client has to buy into it but in a case I also want to say",
    "start": "1294760",
    "end": "1303820"
  },
  {
    "text": "that rest is not the answer to all of your problems there are definitely some challenges to the that to be solved and",
    "start": "1303820",
    "end": "1311110"
  },
  {
    "text": "and and that's why they're still WCF services and why they're graphic UIL that came about what about swagger",
    "start": "1311110",
    "end": "1317320"
  },
  {
    "text": "well swagger it just is a tool really it's a documentation tool very similar",
    "start": "1317320",
    "end": "1322510"
  },
  {
    "text": "if you ever built soap services or WCF services approach familiar with with the the",
    "start": "1322510",
    "end": "1330460"
  },
  {
    "text": "client generator or wisdoms so the XML documentation for the service and then you could go and and generate a client",
    "start": "1330460",
    "end": "1338320"
  },
  {
    "text": "actually a wrapper for your for your XML web service or for your WCF service",
    "start": "1338320",
    "end": "1343630"
  },
  {
    "text": "swagger gives us some of those same capabilities in some ways it's actually cooler because with swagger we can go in",
    "start": "1343630",
    "end": "1350620"
  },
  {
    "text": "and we can actually test the services right there I know we could do that with soap as well but it seems like this is a",
    "start": "1350620",
    "end": "1356350"
  },
  {
    "text": "little bit a little bit more flexible we'll take a look at that and just a moment okay",
    "start": "1356350",
    "end": "1367950"
  },
  {
    "text": "let's take a look at swagger real quick",
    "start": "1368340",
    "end": "1373710"
  },
  {
    "text": "with swagger with a with the resources that we've mentioned there we've got",
    "start": "1376740",
    "end": "1383730"
  },
  {
    "text": "excuse me with categories I've got get",
    "start": "1383730",
    "end": "1389170"
  },
  {
    "text": "and you can see with a with this get with swagger I can open that up and there's a try it out button and with",
    "start": "1389170",
    "end": "1395500"
  },
  {
    "text": "execute of course it allows us to then execute our command and we can see so we",
    "start": "1395500",
    "end": "1401770"
  },
  {
    "text": "can test our service right here we can we can test the individual endpoints in",
    "start": "1401770",
    "end": "1412690"
  },
  {
    "text": "addition to that notice that it shows and it's color-coded that's so that's a bonus I guess so you can specify which",
    "start": "1412690",
    "end": "1421000"
  },
  {
    "text": "end point or which verb it is that were that we're testing I get post here have",
    "start": "1421000",
    "end": "1426190"
  },
  {
    "text": "what we'll get into why I have three different gets underneath expenses in in",
    "start": "1426190",
    "end": "1433690"
  },
  {
    "text": "just a moment but let's take a look at building our service",
    "start": "1433690",
    "end": "1440970"
  },
  {
    "text": "you know we'll get into looking at postman as well I am in the wrong idea",
    "start": "1448600",
    "end": "1457580"
  },
  {
    "text": "okay normally I would definitely not do",
    "start": "1457580",
    "end": "1463700"
  },
  {
    "text": "this project in the in a single project I have I'd have at least three projects that have data transfer objects or DTO",
    "start": "1463700",
    "end": "1470509"
  },
  {
    "text": "library that has my data objects and interfaces I'd have a data repository but the for the sake of simplicity I",
    "start": "1470509",
    "end": "1477769"
  },
  {
    "text": "have my models and my data layer right here i am using entity framework or for",
    "start": "1477769",
    "end": "1483710"
  },
  {
    "text": "this so if we just look at the did he details briefly then we can build from",
    "start": "1483710",
    "end": "1490399"
  },
  {
    "text": "around there so my user class just like the database table has a user ID first",
    "start": "1490399",
    "end": "1498080"
  },
  {
    "text": "name and last name category whoops expenses will start there I",
    "start": "1498080",
    "end": "1505580"
  },
  {
    "text": "changed my mind as I was developing this the database tables budget item and had",
    "start": "1505580",
    "end": "1510590"
  },
  {
    "text": "budget item ID here I wanted to call it expenses so we have all the same properties of their expense ID user ID",
    "start": "1510590",
    "end": "1515929"
  },
  {
    "text": "day time and so on and then category there very simple poco objects right for",
    "start": "1515929",
    "end": "1524539"
  },
  {
    "text": "my entity framework we simply created a database context and really if you're",
    "start": "1524539",
    "end": "1531440"
  },
  {
    "text": "not familiar with entity framework I don't want to get caught up in entity framework really I want to get to the",
    "start": "1531440",
    "end": "1538159"
  },
  {
    "text": "meat which is just talking about dealing with the resources in restful way so but",
    "start": "1538159",
    "end": "1545090"
  },
  {
    "text": "here with ng framework this allows me to manage the really the objects so so I've got a database set or DB set of users",
    "start": "1545090",
    "end": "1552370"
  },
  {
    "text": "they're basically just my rows my users expenses and categories rows that we can",
    "start": "1552370",
    "end": "1557539"
  },
  {
    "text": "work with so there are a few first of",
    "start": "1557539",
    "end": "1564590"
  },
  {
    "text": "all if I were to add a new project from",
    "start": "1564590",
    "end": "1572710"
  },
  {
    "text": "in in Visual Studio it will run as Microsoft always does",
    "start": "1572710",
    "end": "1580190"
  },
  {
    "text": "they'll give you a demo controller that allows you to you know has the restful endpoints values with some strings but",
    "start": "1580190",
    "end": "1587360"
  },
  {
    "text": "it'll run automatically it doesn't have swagger installed and really there's no",
    "start": "1587360",
    "end": "1592760"
  },
  {
    "text": "need to have swagger if you understand the service if you understand it endpoints then then you don't have to have swagger swagger is really just the",
    "start": "1592760",
    "end": "1598670"
  },
  {
    "text": "documentation but to get things going if I since I do want to have swagger",
    "start": "1598670",
    "end": "1604040"
  },
  {
    "text": "there's a couple of things that we need to do to set up our project and that is",
    "start": "1604040",
    "end": "1609140"
  },
  {
    "text": "in our in our service API there's a start-up CS and in our startup we have",
    "start": "1609140",
    "end": "1616760"
  },
  {
    "text": "this configuration so that that's what application is going to start I need to",
    "start": "1616760",
    "end": "1623690"
  },
  {
    "text": "setup configuration services by default the services dot ad MVC is going to be",
    "start": "1623690",
    "end": "1630650"
  },
  {
    "text": "set up for you already API versioning that was not set up",
    "start": "1630650",
    "end": "1635930"
  },
  {
    "text": "sorry that's that's one that we had to add in there so if you want to if you an enable versioning of your of your",
    "start": "1635930",
    "end": "1641150"
  },
  {
    "text": "restful services then then you need to we need to actually add that in as well",
    "start": "1641150",
    "end": "1647300"
  },
  {
    "text": "that's a change in dotnet core 2.2 used to be added right into the core framework but but now you need to you",
    "start": "1647300",
    "end": "1653180"
  },
  {
    "text": "need to add a new get package for that and add the reference in here the excuse",
    "start": "1653180",
    "end": "1661550"
  },
  {
    "text": "me for swagger configuration one of the configurations we had here is so I added",
    "start": "1661550",
    "end": "1666980"
  },
  {
    "text": "just a cookie policy so checking for cookies just the de comment from the",
    "start": "1666980",
    "end": "1672860"
  },
  {
    "text": "same site I added a configuration option",
    "start": "1672860",
    "end": "1678290"
  },
  {
    "text": "actually I don't need this anymore because I changed the way I changed the",
    "start": "1678290",
    "end": "1685340"
  },
  {
    "text": "way that I was doing that I was handling this inside of here so so I don't need the kit the configuration here that was",
    "start": "1685340",
    "end": "1691160"
  },
  {
    "text": "because I was going to read the connection string from from a configuration file course cross-site",
    "start": "1691160",
    "end": "1697580"
  },
  {
    "text": "scripting will be important now that's mainly if we're going to be using our service if we want to expose it to to an",
    "start": "1697580",
    "end": "1706130"
  },
  {
    "text": "angular or react client or view J's client or something like that so you need to have your core you need to add cores and in",
    "start": "1706130",
    "end": "1713510"
  },
  {
    "text": "addition to that you'll see that and adding cores and come down one second",
    "start": "1713510",
    "end": "1721510"
  },
  {
    "text": "there's configure services and there's another section that is just the configure section where with our cores",
    "start": "1721510",
    "end": "1729320"
  },
  {
    "text": "options so after we've added cores with use cores we need to specify where we're gonna allow that here I've just opened",
    "start": "1729320",
    "end": "1735620"
  },
  {
    "text": "it up so we could allow a request from from any client from any from any orange",
    "start": "1735620",
    "end": "1742549"
  },
  {
    "text": "and and any method you could really limit that to at this point that you're only going to allow get post put just",
    "start": "1742549",
    "end": "1751070"
  },
  {
    "text": "which which items you want and which which origin or what URL basically what",
    "start": "1751070",
    "end": "1757580"
  },
  {
    "text": "clients you want to you want to allow that for the so in talking about security of obviously those are some",
    "start": "1757580",
    "end": "1764299"
  },
  {
    "text": "things you want to consider and and make sure that you you only allow requests from the right place but there's more",
    "start": "1764299",
    "end": "1770750"
  },
  {
    "text": "than that obviously excuse me the other thing that swagger requires is we need",
    "start": "1770750",
    "end": "1779480"
  },
  {
    "text": "to when we say app dot use swagger and then we need to specify where our",
    "start": "1779480",
    "end": "1786049"
  },
  {
    "text": "swagger definition is going to come from so let me run this one more time and just show you what we're getting from",
    "start": "1786049",
    "end": "1793970"
  },
  {
    "text": "our swagger definition and really what is swagger so well here we can see a",
    "start": "1793970",
    "end": "1800840"
  },
  {
    "text": "swagger a screen that helps us kind of test that but but there's a link right here that swagger v1 swagger JSON so if",
    "start": "1800840",
    "end": "1808460"
  },
  {
    "text": "I look at that that was defined right here in my swagger UI where I'm gonna pull that information from so I have a",
    "start": "1808460",
    "end": "1814490"
  },
  {
    "text": "name of the the swagger client and then also where the JSON or the definition is",
    "start": "1814490",
    "end": "1819830"
  },
  {
    "text": "created really swagger for using swagger it's just a definition document it can",
    "start": "1819830",
    "end": "1825649"
  },
  {
    "text": "be done in Y Amal or JSON and then we could we could distribute that very much",
    "start": "1825649",
    "end": "1831620"
  },
  {
    "text": "like we like we distributed wisdom documents and then clients could be",
    "start": "1831620",
    "end": "1837080"
  },
  {
    "text": "generated from from that excuse me so if I look at this",
    "start": "1837080",
    "end": "1844700"
  },
  {
    "text": "swagger JSON you can see that it really is just a JSON file I'm not gonna go",
    "start": "1844700",
    "end": "1849769"
  },
  {
    "text": "through and describe what all this says for us just know that describes what methods are available what data types",
    "start": "1849769",
    "end": "1855950"
  },
  {
    "text": "are are in there and from that this this",
    "start": "1855950",
    "end": "1862610"
  },
  {
    "text": "UI is actually this test UI is actually develop as well so we can see that there are three endpoints that were created",
    "start": "1862610",
    "end": "1867860"
  },
  {
    "text": "the categories endpoint the expenses endpoint and the users endpoint additionally it will also show you what",
    "start": "1867860",
    "end": "1874580"
  },
  {
    "text": "models are available and if we're strict to adhering to what rest does the models",
    "start": "1874580",
    "end": "1881149"
  },
  {
    "text": "should very closely should closely resemble how many endpoints we have that we're working with because we don't want",
    "start": "1881149",
    "end": "1887809"
  },
  {
    "text": "multiple different models coming working within within a single endpoint so our",
    "start": "1887809",
    "end": "1893629"
  },
  {
    "text": "category model just defines it this looks like our our tables and our our DTO so that we that we looked at earlier",
    "start": "1893629",
    "end": "1902408"
  },
  {
    "text": "okay let's look at building the",
    "start": "1902830",
    "end": "1912769"
  },
  {
    "text": "controller's once who built our models we can build our controller and as you've probably experienced as well if I",
    "start": "1912769",
    "end": "1921019"
  },
  {
    "text": "go to my controllers and I choose add controller because I'm using env",
    "start": "1921019",
    "end": "1930289"
  },
  {
    "text": "framework I can choose to create a controller with actions using ng framework right from here if if my entry",
    "start": "1930289",
    "end": "1938659"
  },
  {
    "text": "framework is outside of this if I really have a repository posit or e layer where I'm going to manage that connection I",
    "start": "1938659",
    "end": "1945190"
  },
  {
    "text": "wouldn't do this I'd manage these directly but for the sake of demonstration we can we can definitely",
    "start": "1945190",
    "end": "1950899"
  },
  {
    "text": "see what we can do with that and so I'm going to choose add I'll just go with a",
    "start": "1950899",
    "end": "1955999"
  },
  {
    "text": "simple model right here for miss in my model I'll just go with a user actually",
    "start": "1955999",
    "end": "1961519"
  },
  {
    "text": "user and category about the same and I'm just using my budget context because I already have a users this is just going",
    "start": "1961519",
    "end": "1967369"
  },
  {
    "text": "to create users two users one controller will go ahead and hit add",
    "start": "1967369",
    "end": "1973388"
  },
  {
    "text": "and it only creates the the four methods",
    "start": "1975440",
    "end": "1982770"
  },
  {
    "text": "or the four HTTP verbs that I talked about earlier it doesn't even create a patch for us so we can see that it",
    "start": "1982770",
    "end": "1988500"
  },
  {
    "text": "creates just because I'm using an ER framework it creates a budget context so my database context inside of here and",
    "start": "1988500",
    "end": "1994250"
  },
  {
    "text": "it will actually build all of my logic for me whoo-hoo I generally like to have",
    "start": "1994250",
    "end": "2000950"
  },
  {
    "text": "a little bit more control over that but with our restful services we have HTTP",
    "start": "2000950",
    "end": "2007970"
  },
  {
    "text": "GET and then we also see based on our",
    "start": "2007970",
    "end": "2013390"
  },
  {
    "text": "based on our URL we can also see with",
    "start": "2014050",
    "end": "2021620"
  },
  {
    "text": "the path that we can see we have an HTTP GET with ID and so in this case the example is that the ID would also be",
    "start": "2021620",
    "end": "2029080"
  },
  {
    "text": "would would be part of the URL so not in a query string so those are two types of",
    "start": "2029080",
    "end": "2034820"
  },
  {
    "text": "query strings that we can control and there's going to be some reasons why we want to to limit them in different ways we may have a we may have a path",
    "start": "2034820",
    "end": "2041150"
  },
  {
    "text": "parameter or may have query string parameters so we'll build we'll look at",
    "start": "2041150",
    "end": "2046820"
  },
  {
    "text": "that just momentarily they get both the the get notice this is a list or an",
    "start": "2046820",
    "end": "2052580"
  },
  {
    "text": "ienumerable of users and they get by ID returns just a single user and that's why I said we usually will have to gets",
    "start": "2052580",
    "end": "2059888"
  },
  {
    "text": "most of the time you're probably going to have more than that if you want to allow the users to control to filter a",
    "start": "2059889",
    "end": "2065810"
  },
  {
    "text": "little bit more you'll you'll definitely have more guests than that but what you don't want to do is you don't want to get out of control and start having",
    "start": "2065810",
    "end": "2071600"
  },
  {
    "text": "having them not well I guess passing and multiple query parameters is fine but",
    "start": "2071600",
    "end": "2077898"
  },
  {
    "text": "but you don't want to change what it is that you're returning with each of the different types of gets or put notice it",
    "start": "2077899",
    "end": "2086480"
  },
  {
    "text": "with put and post actually with the post all we have is we're inserting a new",
    "start": "2086480",
    "end": "2093648"
  },
  {
    "text": "user so the only thing is we're passing in the user with a put this was something that was a kind of new to me",
    "start": "2093649",
    "end": "2099020"
  },
  {
    "text": "when when I first started coming to interesting services I'm passing in both the the object that I'm updating as well",
    "start": "2099020",
    "end": "2106609"
  },
  {
    "text": "as the idea of the object so the primary key this concept I mean really in the",
    "start": "2106609",
    "end": "2112849"
  },
  {
    "text": "development that I'd done before that was it was kind of foreign because the user already has that idea I'm updating",
    "start": "2112849",
    "end": "2119240"
  },
  {
    "text": "user I should already know what the idea is inside of there but but but that's a standard or that's a that's kind of a",
    "start": "2119240",
    "end": "2126400"
  },
  {
    "text": "standard practice to pass an ID for whatever reason just to guarantee this",
    "start": "2126400",
    "end": "2132049"
  },
  {
    "text": "is the ID that we have in here notice that with the logic that Microsoft puts",
    "start": "2132049",
    "end": "2137990"
  },
  {
    "text": "in they actually check to see if the ID that we passed in matches the user ID and if it doesn't and they'll do it",
    "start": "2137990",
    "end": "2144650"
  },
  {
    "text": "they'll return a bad request and this is just a kind of demo demo logic the that",
    "start": "2144650",
    "end": "2152270"
  },
  {
    "text": "these are these web services were put in for us the scaffolding put in for us and",
    "start": "2152270",
    "end": "2158569"
  },
  {
    "text": "then post like I said just as an insert if we look at the logic it does insert",
    "start": "2158569",
    "end": "2164990"
  },
  {
    "text": "and then returns a created at action so it actually will will return where it",
    "start": "2164990",
    "end": "2171290"
  },
  {
    "text": "came from so we can recall that action if we want which is a get user so in",
    "start": "2171290",
    "end": "2176540"
  },
  {
    "text": "other words we can pass in to get user with the ID so we can we can return the actual object that was inserted so we",
    "start": "2176540",
    "end": "2182900"
  },
  {
    "text": "get the new idea ID from there as well same things delete user we don't need to",
    "start": "2182900",
    "end": "2188990"
  },
  {
    "text": "pass in anything but the ID we're just deleting an object so why pass in more data than we need to and just to help",
    "start": "2188990",
    "end": "2198260"
  },
  {
    "text": "our method inside of there the other thing that we're going to look at that we want to consider as we go through as we as we build our services here",
    "start": "2198260",
    "end": "2207290"
  },
  {
    "text": "I had several thoughts that went through",
    "start": "2207290",
    "end": "2213859"
  },
  {
    "text": "my mind and I forgot the one that I started it'll come back to me so but",
    "start": "2213859",
    "end": "2220190"
  },
  {
    "text": "really one of the things that we definitely wanna consider is how are we going to use the data obviously and how",
    "start": "2220190",
    "end": "2226130"
  },
  {
    "text": "many records you were dealing with now for a very simple application this may be all we need but as we as our application grows we",
    "start": "2226130",
    "end": "2234920"
  },
  {
    "text": "may have millions of records that we're working with and and returning all millions of our records",
    "start": "2234920",
    "end": "2239940"
  },
  {
    "text": "it just doesn't make this doesn't make a lot of sense so let's look at let's dig",
    "start": "2239940",
    "end": "2249390"
  },
  {
    "text": "into the front-end application and see how how we're using that actually I did",
    "start": "2249390",
    "end": "2256440"
  },
  {
    "text": "want to look at postman first I know that I if we look at postman right here",
    "start": "2256440",
    "end": "2262200"
  },
  {
    "text": "I don't know if any of you guys I recently found is insomnia I don't know if any of you guys have seen that before",
    "start": "2262200",
    "end": "2267990"
  },
  {
    "text": "it's basically like postman but I actually like it better it just seems like it's a little bit easier to use",
    "start": "2267990",
    "end": "2273779"
  },
  {
    "text": "does the same things for us where I can go in with insomnia I can pass in the",
    "start": "2273779",
    "end": "2279599"
  },
  {
    "text": "URL of the the object they don't want to get and and I can specify if I want to do a get post put patch delete or any of",
    "start": "2279599",
    "end": "2287789"
  },
  {
    "text": "the verbs that we talked about so I can test each of these manually from here so",
    "start": "2287789",
    "end": "2292829"
  },
  {
    "text": "if I'm testing my users let's just go with that for right now I can't test it unless it's running I'm gonna come back",
    "start": "2292829",
    "end": "2301529"
  },
  {
    "text": "to and delete that second controller that I just added",
    "start": "2301529",
    "end": "2306920"
  },
  {
    "text": "no it didn't I had that in there before yeah so in fact even without swagger I",
    "start": "2309589",
    "end": "2323730"
  },
  {
    "text": "could I would be able to use insomnia or postman directly from there and and like",
    "start": "2323730",
    "end": "2330690"
  },
  {
    "text": "I said swagger is really more of a it's kind of a documentation tool it allows us to have some manual testing but it",
    "start": "2330690",
    "end": "2336299"
  },
  {
    "text": "also allows the clients then to know what the contracts are so we're building contracts around that and that's why",
    "start": "2336299",
    "end": "2343109"
  },
  {
    "text": "we're versioning comes into play as well this isn't what necessarily what I had",
    "start": "2343109",
    "end": "2349140"
  },
  {
    "text": "in mind before but one of the thoughts that I had was with with versioning you also want to be careful how you version",
    "start": "2349140",
    "end": "2354480"
  },
  {
    "text": "your your your endpoints and your API is one of the one of the places that I",
    "start": "2354480",
    "end": "2362759"
  },
  {
    "text": "worked were had really more of a WCF style web api",
    "start": "2362759",
    "end": "2368460"
  },
  {
    "text": "you know we cut we call them restful services there were anything about restful services they they did exactly",
    "start": "2368460",
    "end": "2374010"
  },
  {
    "text": "all the things that I just mentioned are in there so we had one method that was called get customer and and we we",
    "start": "2374010",
    "end": "2381660"
  },
  {
    "text": "returned a customer object in a certain way it had all the data about the customer and there was all kinds of data",
    "start": "2381660",
    "end": "2387000"
  },
  {
    "text": "within there and then and then one of the our Android team I think it was they said well we want to have a get customer",
    "start": "2387000",
    "end": "2394410"
  },
  {
    "text": "but but we we only want this data and so so the the client was dictating what the",
    "start": "2394410",
    "end": "2400680"
  },
  {
    "text": "API team was what was supposed to be returning and so what we what we ended",
    "start": "2400680",
    "end": "2406350"
  },
  {
    "text": "up doing was we created a another and another get in fact another get customer",
    "start": "2406350",
    "end": "2413880"
  },
  {
    "text": "who called it version 2 and it took a different input and it returned ad",
    "start": "2413880",
    "end": "2418950"
  },
  {
    "text": "structure was completely different from from the previous one so we had version 1 for iOS and version 2 for Android and",
    "start": "2418950",
    "end": "2425280"
  },
  {
    "text": "then and then they were talking about creating a third version because they were wanting to move away from that that",
    "start": "2425280",
    "end": "2431850"
  },
  {
    "text": "you know that that goes against the whole concept of why we've been moving",
    "start": "2431850",
    "end": "2437190"
  },
  {
    "text": "to into this restful services the idea is that we define what a resource looks like and then and then we have this",
    "start": "2437190",
    "end": "2443120"
  },
  {
    "text": "repository it controls how we get access to that and the client manages what it",
    "start": "2443120",
    "end": "2448500"
  },
  {
    "text": "does with that data so excuse me",
    "start": "2448500",
    "end": "2454880"
  },
  {
    "text": "ok so it's running now I've got insomnia running here I just have my localhost",
    "start": "2455630",
    "end": "2461420"
  },
  {
    "text": "users if I hit send it will return my list of users because of the users the",
    "start": "2461420",
    "end": "2468780"
  },
  {
    "text": "way that it's set up if I pass in a parameter of user ID to when I hit send",
    "start": "2468780",
    "end": "2474330"
  },
  {
    "text": "it it should only return that one that one user I'm gonna go ahead and in my",
    "start": "2474330",
    "end": "2483750"
  },
  {
    "text": "swagger service one of the nice things here too is if I'm going to go to users",
    "start": "2483750",
    "end": "2490460"
  },
  {
    "text": "if I do a post notice here's an example so it has the JSON for me on what what",
    "start": "2490460",
    "end": "2495660"
  },
  {
    "text": "the example should look like let me come into this users and I'm gonna add a post",
    "start": "2495660",
    "end": "2502020"
  },
  {
    "text": "inside of here with a post I don't want to put it too because that would that would fail because it wouldn't find that resource that",
    "start": "2502020",
    "end": "2507760"
  },
  {
    "text": "doesn't exist but here I can help where's come on body type oh there we go",
    "start": "2507760",
    "end": "2520750"
  },
  {
    "text": "JSON so user ID since I'm passing in",
    "start": "2520750",
    "end": "2526270"
  },
  {
    "text": "user ID posting that in I'm not gonna pass that in that'll be created for me automatically we'll just go with Gregor",
    "start": "2526270",
    "end": "2532570"
  },
  {
    "text": "and sorry I can't zoom in here in",
    "start": "2532570",
    "end": "2539610"
  },
  {
    "text": "postman or in insomnia otherwise already use postman there for that so but since",
    "start": "2539610",
    "end": "2545020"
  },
  {
    "text": "I've chosen to post I need to pass in the body of the text in this case all I need is the first name in the last name will hit Send and it returns that object",
    "start": "2545020",
    "end": "2554200"
  },
  {
    "text": "for me and notice that is because when I hit post where's my user with the post",
    "start": "2554200",
    "end": "2567430"
  },
  {
    "text": "method",
    "start": "2567430",
    "end": "2569700"
  },
  {
    "text": "what do I have here all that's put sorry I can't read because of this create action method at the end it returns an",
    "start": "2574230",
    "end": "2580050"
  },
  {
    "text": "action result user so so it'll actually go and and reuse that get user method",
    "start": "2580050",
    "end": "2586410"
  },
  {
    "text": "and and return that created action for me and return the user object I can verify that user actually exists now by",
    "start": "2586410",
    "end": "2594960"
  },
  {
    "text": "going back to get and I'll choose send and we'll see six users and I'm there at",
    "start": "2594960",
    "end": "2600660"
  },
  {
    "text": "the bottom as well",
    "start": "2600660",
    "end": "2603410"
  },
  {
    "text": "what about we'll go with expenses and I",
    "start": "2606890",
    "end": "2614190"
  },
  {
    "text": "know it's capitalized inside of there just because that's how my controller is but it doesn't need to be capitalized with my expenses I've got several",
    "start": "2614190",
    "end": "2621840"
  },
  {
    "text": "expenses a not not a whole lot of expenses but you can imagine as as this app gets used there'll be hundreds or",
    "start": "2621840",
    "end": "2628860"
  },
  {
    "text": "thousands of of line items inside of here so we want to be able to with our",
    "start": "2628860",
    "end": "2634020"
  },
  {
    "text": "expenses I want to be able to dictate how I'm going to pass that so with my expenses and this is one of the places",
    "start": "2634020",
    "end": "2640920"
  },
  {
    "text": "where I might have more than one get inside of there what I want to manage",
    "start": "2640920",
    "end": "2649710"
  },
  {
    "text": "let's open up the expenses controller I",
    "start": "2649710",
    "end": "2656150"
  },
  {
    "text": "have a HTTP GET and there's an HTTP GET",
    "start": "2657110",
    "end": "2664770"
  },
  {
    "text": "by ID actually inserted this in in the wrong place let me stop this real quick",
    "start": "2664770",
    "end": "2672360"
  },
  {
    "text": "and I'll show you what happens with swagger when I try to create this in a",
    "start": "2672360",
    "end": "2678900"
  },
  {
    "text": "certain way so",
    "start": "2678900",
    "end": "2681380"
  },
  {
    "text": "okay by default I have my get I have the",
    "start": "2687740",
    "end": "2693510"
  },
  {
    "text": "get all and is just gonna return all all expenses I found returned individual one I pass an ID and because I've had I've passed",
    "start": "2693510",
    "end": "2700890"
  },
  {
    "text": "this oh I guess that's one thing when I mentioned the route is an important part",
    "start": "2700890",
    "end": "2706020"
  },
  {
    "text": "of these web api's with asp.net MVC and",
    "start": "2706020",
    "end": "2711690"
  },
  {
    "text": "web api pre connect or we we could control the routes what we still can",
    "start": "2711690",
    "end": "2718380"
  },
  {
    "text": "but a common way to control them was that we had a in our startup we called a",
    "start": "2718380",
    "end": "2724410"
  },
  {
    "text": "a route config file and we can have multiple different types of configurations they were all in one central place as Microsoft has gone",
    "start": "2724410",
    "end": "2732510"
  },
  {
    "text": "through and as developers have kind of worked with this I realize you know it's much better to control which route I'm",
    "start": "2732510",
    "end": "2738900"
  },
  {
    "text": "listening to right at the controller I'd rather have I'd rather be able to dictate that for this method right here",
    "start": "2738900",
    "end": "2745730"
  },
  {
    "text": "that I want to I want to specify what what path I want to listen for what",
    "start": "2745730",
    "end": "2751410"
  },
  {
    "text": "route I'm actually looking for so for the class by default you'll see up at the top for Web API is it'll put API and",
    "start": "2751410",
    "end": "2758160"
  },
  {
    "text": "then in square brackets controller so it just defaults to whatever the controller name is you could specify the controller",
    "start": "2758160",
    "end": "2764430"
  },
  {
    "text": "here to hard-code that but by having them in square brackets it dynamically determined it is based on the controller",
    "start": "2764430",
    "end": "2770850"
  },
  {
    "text": "name here expenses in this case and that's why the the Web API or swagger used the capital e for for expenses if I",
    "start": "2770850",
    "end": "2779190"
  },
  {
    "text": "if I want to change that I can just change the lowercase expenses right here",
    "start": "2779190",
    "end": "2785330"
  },
  {
    "text": "and that means that every method within this controller will will have that as",
    "start": "2785330",
    "end": "2791760"
  },
  {
    "text": "the base route but it's let us listen to so the only thing that I need to define and here is anything that deviates from",
    "start": "2791760",
    "end": "2798720"
  },
  {
    "text": "that for example HTTP GET I'm not passing in any parameter so I don't need to specify anything with that and it",
    "start": "2798720",
    "end": "2806940"
  },
  {
    "text": "will it will know to come here with this get by ID this will be appended the ID",
    "start": "2806940",
    "end": "2812010"
  },
  {
    "text": "in curly braces will be appended at the end of will at the end of the expenses",
    "start": "2812010",
    "end": "2819130"
  },
  {
    "text": "route using the get verb and then and then comes a question what if I want to",
    "start": "2819130",
    "end": "2826299"
  },
  {
    "text": "add my own query string parameters I want to be able to pass in I want to get",
    "start": "2826299",
    "end": "2832059"
  },
  {
    "text": "expensive by page so I don't have a logic I wanna say okay I want page number five and here's the size of page that I want so I can add logic to be",
    "start": "2832059",
    "end": "2839259"
  },
  {
    "text": "able to to deal with that paging if I try to remove that page from there this",
    "start": "2839259",
    "end": "2846160"
  },
  {
    "text": "now becomes ambiguous swagger or the routing engine it won't really know how",
    "start": "2846160",
    "end": "2852640"
  },
  {
    "text": "to deal with with the configuration here so let me run this and you'll see that",
    "start": "2852640",
    "end": "2865269"
  },
  {
    "text": "swagger is not happy this is something that that can be really frustrating at",
    "start": "2865269",
    "end": "2870940"
  },
  {
    "text": "times when you when you come through this as you're building things you know you've built it right then you come in you open up swagger in it and it's not",
    "start": "2870940",
    "end": "2877690"
  },
  {
    "text": "happy what I found usually when I do this is I'll go and I'll comment out all the methods and one by one we add them",
    "start": "2877690",
    "end": "2884529"
  },
  {
    "text": "back in and see which one which one caused the problem and that's because I",
    "start": "2884529",
    "end": "2889960"
  },
  {
    "text": "really I need to specify a route that is a little bit more unique now I could",
    "start": "2889960",
    "end": "2895839"
  },
  {
    "text": "have called this get expenses by page like it says here and and we could we",
    "start": "2895839",
    "end": "2901509"
  },
  {
    "text": "could definitely have that up there so it can be another end point I prefer to",
    "start": "2901509",
    "end": "2907299"
  },
  {
    "text": "just I already know that I'm working with expenses and I prefer just to give it an end point or a URL name called",
    "start": "2907299",
    "end": "2914259"
  },
  {
    "text": "page in this case and whatever I pass in a query string a speed on that nBC will",
    "start": "2914259",
    "end": "2921210"
  },
  {
    "text": "and that's that with MVC engine that's been around for a while it'll actually map those items to us so as long as the",
    "start": "2921210",
    "end": "2928269"
  },
  {
    "text": "parameter the query parameters page there named page and size it will map",
    "start": "2928269",
    "end": "2933519"
  },
  {
    "text": "those to those those parameters now I've made them integers if they're not integers that's gonna that's gonna fail",
    "start": "2933519",
    "end": "2940150"
  },
  {
    "text": "on me here but but it does that mapping for us I hate saying it this way but but",
    "start": "2940150",
    "end": "2949390"
  },
  {
    "text": "it's fast and it's true it's NBC magic happens right it's not magic it's a it's just mapped",
    "start": "2949390",
    "end": "2956369"
  },
  {
    "text": "so but we've got the magic that's that's in there that maps that to there and then I can then I can pull that out",
    "start": "2956369",
    "end": "2964890"
  },
  {
    "text": "excuse me let's look at real briefly on the client",
    "start": "2964890",
    "end": "2971200"
  },
  {
    "text": "I don't want to get too I don't want to get deep into angular at all but what I",
    "start": "2971200",
    "end": "2979780"
  },
  {
    "text": "do want to show you is just the three services that I'm actually using that call that call the the API so I've built",
    "start": "2979780",
    "end": "2989050"
  },
  {
    "text": "in the expenses there is an expense service I didn't flesh all of them out",
    "start": "2989050",
    "end": "2998640"
  },
  {
    "text": "I can't sue min here either well with the expense service with a you",
    "start": "2999040",
    "end": "3006480"
  },
  {
    "text": "know what I will just take this put it",
    "start": "3006480",
    "end": "3016859"
  },
  {
    "text": "in okay so inside the service basically",
    "start": "3016859",
    "end": "3025349"
  },
  {
    "text": "I just create a variable expense URL which is my base URL for expenses the",
    "start": "3025349",
    "end": "3030810"
  },
  {
    "text": "HTTP client for for angular happens to be just I all have to say is return HTTP",
    "start": "3030810",
    "end": "3038400"
  },
  {
    "text": "GET I am specifying the return type so I've just got a generic there and I need to pass in my URL unless I wanted I want",
    "start": "3038400",
    "end": "3046560"
  },
  {
    "text": "to pass some additional information within the header there's nothing else that I need to do inside of there so",
    "start": "3046560",
    "end": "3051690"
  },
  {
    "text": "react use and yes if use Axios or view whatever using their they've all got",
    "start": "3051690",
    "end": "3058050"
  },
  {
    "text": "wrappers around this that make this very simple to be able to do that as long as you have your URL and you know what the",
    "start": "3058050",
    "end": "3063960"
  },
  {
    "text": "data type is it needs to go in you can pass that in for for the if I want to",
    "start": "3063960",
    "end": "3069720"
  },
  {
    "text": "get so that's this is all expenses where I just get expenses this expenses URL",
    "start": "3069720",
    "end": "3076140"
  },
  {
    "text": "for this top one I've just added in the page ID in the size and then and then",
    "start": "3076140",
    "end": "3086240"
  },
  {
    "text": "I've only done an ad expense inside of here so I didn't deal with the update or anything but notice that this is a post",
    "start": "3086240",
    "end": "3091940"
  },
  {
    "text": "so for the post I just determined I I didn't need to worry about the data so I",
    "start": "3091940",
    "end": "3097770"
  },
  {
    "text": "just called it as a void so I'm not waiting for any any date of this back has passed in the expense URL and then",
    "start": "3097770",
    "end": "3104040"
  },
  {
    "text": "my object it's just a JSON object that the web api will will pick up on the",
    "start": "3104040",
    "end": "3109560"
  },
  {
    "text": "other end and insert we've got just a",
    "start": "3109560",
    "end": "3118170"
  },
  {
    "text": "minute there's one one other thought that I wanted to look at here and that",
    "start": "3118170",
    "end": "3125280"
  },
  {
    "text": "is I wanted to compare one of the issues that you know one of the downsides of using rests actually and that is in the",
    "start": "3125280",
    "end": "3133470"
  },
  {
    "text": "expense component in the expense",
    "start": "3133470",
    "end": "3139890"
  },
  {
    "text": "component when I want to display my expenses here I want to display the user",
    "start": "3139890",
    "end": "3145830"
  },
  {
    "text": "name the category and the amount so the users information is not part of the",
    "start": "3145830",
    "end": "3151170"
  },
  {
    "text": "expense all I have inside of there is user ID either category D and so on that means I need to go into the database I",
    "start": "3151170",
    "end": "3159150"
  },
  {
    "text": "need to go and make a call or at least three different calls one to get all the the budget items one to get the users",
    "start": "3159150",
    "end": "3167070"
  },
  {
    "text": "and one to get the categories there's a couple of ways of dealing with this I",
    "start": "3167070",
    "end": "3172820"
  },
  {
    "text": "just want to show you some of the potential issues you might run into by",
    "start": "3172820",
    "end": "3180450"
  },
  {
    "text": "dealing with this so one option is I could call get expenses and then as I go",
    "start": "3180450",
    "end": "3186090"
  },
  {
    "text": "through my get expenses what I do is first I go and get all the expenses and then when I when I get them back I can",
    "start": "3186090",
    "end": "3192300"
  },
  {
    "text": "do for each loop through every expense and call the get user and get category service for that individual user we call",
    "start": "3192300",
    "end": "3201630"
  },
  {
    "text": "get expenses here when we save that and you're going to notice you're going to",
    "start": "3201630",
    "end": "3206760"
  },
  {
    "text": "notice a huge difference immediately maybe one that shows that it doesn't",
    "start": "3206760",
    "end": "3212490"
  },
  {
    "text": "even work",
    "start": "3212490",
    "end": "3214670"
  },
  {
    "text": "response here",
    "start": "3219220",
    "end": "3222490"
  },
  {
    "text": "well let me just describe it since we're out of time what's happening is for all the users and I've even trimmed it down",
    "start": "3232590",
    "end": "3238350"
  },
  {
    "text": "to where I only have five expenses on a page I make a call and in that scenario",
    "start": "3238350",
    "end": "3244830"
  },
  {
    "text": "I'm making a call to two calls for each row each expense so one to get the five",
    "start": "3244830",
    "end": "3251670"
  },
  {
    "text": "expenses plus ten more to my web api just to get the users a way to get",
    "start": "3251670",
    "end": "3257700"
  },
  {
    "text": "around that obviously we could deal with we you could add some caching on the client side to be able to avoid that",
    "start": "3257700",
    "end": "3263460"
  },
  {
    "text": "round-trip the the way that I got around it here is I first called and made sure",
    "start": "3263460",
    "end": "3268740"
  },
  {
    "text": "that I owed 'add just a collection of users in a collection of categories",
    "start": "3268740",
    "end": "3274410"
  },
  {
    "text": "first so so I called get users and when",
    "start": "3274410",
    "end": "3279450"
  },
  {
    "text": "I got the users I then called get categories and then once I called get categories then I called get expenses",
    "start": "3279450",
    "end": "3285630"
  },
  {
    "text": "and then instead of looping through and",
    "start": "3285630",
    "end": "3290240"
  },
  {
    "text": "instead of looping through and calling my web api for each user I just I just",
    "start": "3292220",
    "end": "3299400"
  },
  {
    "text": "went into defined against that and even there that may not be the best option something that we did fairly quick quick",
    "start": "3299400",
    "end": "3306750"
  },
  {
    "text": "inside of here but but those are some of the things that you want to be concerned with when you're building restful services and if you're going to build",
    "start": "3306750",
    "end": "3312510"
  },
  {
    "text": "the restful services the way they were intended the each endpoint should focus on one structure and that or a one we on",
    "start": "3312510",
    "end": "3320460"
  },
  {
    "text": "one resource only and not the relationships to other resources but the real world is you're not going to build",
    "start": "3320460",
    "end": "3326460"
  },
  {
    "text": "a page that only has that only accesses data from that one resource you need to",
    "start": "3326460",
    "end": "3331470"
  },
  {
    "text": "get access to the related data so so the client it really puts the burden on the",
    "start": "3331470",
    "end": "3337230"
  },
  {
    "text": "client to determine how am I going to get that other data and if I have an object that has just has users first",
    "start": "3337230",
    "end": "3343950"
  },
  {
    "text": "name and last name but then I go to expenses and it might have in a database it might have 50 columns or what however",
    "start": "3343950",
    "end": "3350430"
  },
  {
    "text": "many columns and not only need two of them when I make the call to the get expenses records I may be loading a lot",
    "start": "3350430",
    "end": "3357060"
  },
  {
    "text": "more data than I then I need so those are decisions that really go all those",
    "start": "3357060",
    "end": "3362490"
  },
  {
    "text": "things or decisions that go into using restful services and and how do i mitigate that you know",
    "start": "3362490",
    "end": "3369069"
  },
  {
    "text": "what kind of caching am I going to put in place not just on the server side but even on the client side so I guess in",
    "start": "3369069",
    "end": "3379180"
  },
  {
    "text": "the end with with rest you know if we go if we go that direction with rest there",
    "start": "3379180",
    "end": "3387059"
  },
  {
    "text": "it's well defined and it makes it very easy to build the server side makes it",
    "start": "3387059",
    "end": "3392140"
  },
  {
    "text": "easy to to to separate the client from from the server and you can you can really expose your service to many more",
    "start": "3392140",
    "end": "3399250"
  },
  {
    "text": "clients and have a standard for everybody to follow but but again there's some other considerations too to",
    "start": "3399250",
    "end": "3407680"
  },
  {
    "text": "deal with and and I would go ahead and say that you know rest isn't the answer for all isn't the solution for all",
    "start": "3407680",
    "end": "3414400"
  },
  {
    "text": "problems thank you I should have no positive note it is a",
    "start": "3414400",
    "end": "3425349"
  },
  {
    "text": "solution for many problems [Laughter]",
    "start": "3425349",
    "end": "3429980"
  }
]