[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "all right it is 11:40 I think that's when we are officially supposed to start so let's get rolling",
    "start": "30",
    "end": "5359"
  },
  {
    "text": "I'm going to talk about elasticsearch suggesters so if that's not what you were expecting you're in the wrong place",
    "start": "5359",
    "end": "13129"
  },
  {
    "text": "my name is Brett Hazen I'm a principal consultant at a company called ILM",
    "start": "13219",
    "end": "18300"
  },
  {
    "text": "professional services it's a local consulting company here in the Twin Cities we're hiring it seems like",
    "start": "18300",
    "end": "24990"
  },
  {
    "text": "everyone is so if anyone's looking for a great job in the Twin Cities come talk to me later I am primarily a c-sharp and",
    "start": "24990",
    "end": "32119"
  },
  {
    "text": "she's c-sharp dotnet and JavaScript developer although I've done quite a bit",
    "start": "32120",
    "end": "37140"
  },
  {
    "text": "of other things based on what clients need over the past year I've also done Python a ton of DevOps both with Jenkins",
    "start": "37140",
    "end": "43559"
  },
  {
    "text": "with Azure DevOps obviously some stuff with elasticsearch and some other data stores a runner very",
    "start": "43559",
    "end": "51660"
  },
  {
    "text": "amateur musician sing in a couple choirs and a bird owner if you didn't realize that's not a picture of me that's a",
    "start": "51660",
    "end": "57120"
  },
  {
    "text": "picture of a couple of my birds alright so why did this talk so I was at one",
    "start": "57120",
    "end": "64830"
  },
  {
    "start": "60000",
    "end": "60000"
  },
  {
    "text": "work at work one day programming like this as we all do was working on a project where we had metadata about data",
    "start": "64830",
    "end": "73110"
  },
  {
    "text": "so it was basically a tool that allowed business to figure out what data they",
    "start": "73110",
    "end": "78210"
  },
  {
    "text": "had and there was some health checks on it so they could look at things like the quality of the data and we had an API",
    "start": "78210",
    "end": "85500"
  },
  {
    "text": "that was performing poorly and we needed some more robust search capabilities so we started using elastic search and then",
    "start": "85500",
    "end": "92729"
  },
  {
    "text": "after that and business saw that there was value to having a good tool like that they wanted more things because you",
    "start": "92729",
    "end": "99270"
  },
  {
    "text": "know when you give business something good they want more good things which is good it keeps us employed and we get to",
    "start": "99270",
    "end": "104430"
  },
  {
    "text": "solve interesting problems and so we needed to implement autocomplete and since we're using elastic search there's",
    "start": "104430",
    "end": "110399"
  },
  {
    "text": "several ways to do it but there's one out of box ways which is using a suggestor so I thought that was pretty",
    "start": "110399",
    "end": "116939"
  },
  {
    "text": "interesting there's some other suggesters I wanted to look into them more and I thought maybe other people would find that interesting too looks",
    "start": "116939",
    "end": "123630"
  },
  {
    "text": "like some of you do so that's why we're here so the general plan is to cover some",
    "start": "123630",
    "end": "128910"
  },
  {
    "text": "elasticsearch basics because some of the stuff i'm going to talk about will not make a ton of sense and you have an understanding of some of the",
    "start": "128910",
    "end": "135270"
  },
  {
    "text": "basic parts of elasticsearch so we'll go over indexing and mapping and analyzers because those are really at the core of",
    "start": "135270",
    "end": "141840"
  },
  {
    "text": "how elasticsearch works we'll take a tour through each type of suggestor with an example and then Q&A at the end if",
    "start": "141840",
    "end": "148140"
  },
  {
    "text": "you have questions as I'm going through feel free to put your hand up and I'll answer them as I go to you you don't",
    "start": "148140",
    "end": "153990"
  },
  {
    "text": "need to wait to the end if it's something I just haven't gotten to yet I may just ask you to wait until after that but who in here has used",
    "start": "153990",
    "end": "162270"
  },
  {
    "text": "elasticsearch ok so actually quite a few of you who has used elasticsearch",
    "start": "162270",
    "end": "168750"
  },
  {
    "text": "suggesters ok so not many of you so for",
    "start": "168750",
    "end": "174000"
  },
  {
    "text": "those of you who haven't used elasticsearch if anyone's not super familiar with what it is it's a distributed restful search and analytic",
    "start": "174000",
    "end": "180900"
  },
  {
    "start": "177000",
    "end": "177000"
  },
  {
    "text": "engine and there's some other stuff up there that's what elasticsearch says it is the company that makes it is called",
    "start": "180900",
    "end": "187710"
  },
  {
    "text": "elastic if you've heard of the elk stack it is the Ian elk stack it's really good",
    "start": "187710",
    "end": "192720"
  },
  {
    "text": "at indexing data to make it fast to search it is not a database I see people",
    "start": "192720",
    "end": "198030"
  },
  {
    "text": "confuse it with document databases it feels like it is x because you're indexing json documents like you would",
    "start": "198030",
    "end": "204480"
  },
  {
    "text": "with or something but it doesn't have transactions like we have in the traditional relational database world",
    "start": "204480",
    "end": "210600"
  },
  {
    "text": "and it doesn't have some other features but it is very very good at searching things so to cover some of those elastic",
    "start": "210600",
    "end": "219660"
  },
  {
    "start": "219000",
    "end": "219000"
  },
  {
    "text": "search concepts elastic search has indices so you store all your data in an",
    "start": "219660",
    "end": "225120"
  },
  {
    "text": "index and in a particular instance of elastic search can have more than one index and each index has analyzers and",
    "start": "225120",
    "end": "233070"
  },
  {
    "text": "analyzers are made up of character Fulton's character filters tokenizer z' and token filters an analyzer will have",
    "start": "233070",
    "end": "239850"
  },
  {
    "text": "0 or more character filters one and only one tokenizer and 0 or more token",
    "start": "239850",
    "end": "246420"
  },
  {
    "text": "filters and these can either be built-in or custom elastic search ships with a",
    "start": "246420",
    "end": "252030"
  },
  {
    "text": "lot of them out of the box some of them you actually need to configure to use we'll look at a little bit of that you",
    "start": "252030",
    "end": "259859"
  },
  {
    "text": "can also define these globally for your elastic search a cluster instead of just at the index level",
    "start": "259859",
    "end": "267130"
  },
  {
    "text": "the other really important thing is mappings and that defines the shape of data store and elasticsearch so if you",
    "start": "267130",
    "end": "273760"
  },
  {
    "text": "think of like a database schema it's similar to that there used to be a concept of pipes and elasticsearch in",
    "start": "273760",
    "end": "280300"
  },
  {
    "text": "the early days were within an index you would also have type that led to a lot of really bad analogy is including from",
    "start": "280300",
    "end": "287170"
  },
  {
    "text": "elastic and some of their documentation where people compared types to tables in",
    "start": "287170",
    "end": "292300"
  },
  {
    "text": "sequel which is just not a great comparison in people's tried to use elastic search like sequel and bad",
    "start": "292300",
    "end": "299260"
  },
  {
    "text": "things happen so types are no longer there they were deprecated for quite a few versions but as of elasticsearch 7",
    "start": "299260",
    "end": "305950"
  },
  {
    "text": "which is the most recent one they were finally removed so the way you put your",
    "start": "305950",
    "end": "313060"
  },
  {
    "text": "mappings in has some pretty big implications on how search works and we'll look at a bit of that too so what",
    "start": "313060",
    "end": "320920"
  },
  {
    "start": "320000",
    "end": "320000"
  },
  {
    "text": "analyzers do and I think it's going to be the most instructive to look at this with a specific example so if we look at",
    "start": "320920",
    "end": "327340"
  },
  {
    "text": "the text domain driven design by example and we look at it using the standard",
    "start": "327340",
    "end": "333670"
  },
  {
    "text": "analyser which is what is used if you store data as a text it has no character",
    "start": "333670",
    "end": "340360"
  },
  {
    "text": "filters it uses the standard tokenizer and the token filters it uses are they",
    "start": "340360",
    "end": "347260"
  },
  {
    "text": "standard lowercase and stop and I should have updated these slides because this changed as of elasticsearch 7 the",
    "start": "347260",
    "end": "353980"
  },
  {
    "text": "standard token filter got removed it had been in there forever as a placeholder in case they ever needed it and it never",
    "start": "353980",
    "end": "360100"
  },
  {
    "text": "did anything so finally they decided they could just get rid of it and there is an API for hoping debug these",
    "start": "360100",
    "end": "366550"
  },
  {
    "text": "analyzers we'll take a look at as well so if we look at what our text domain-driven designed by example looks",
    "start": "366550",
    "end": "373060"
  },
  {
    "text": "like after the tokenizer the standard tokenizer splits things on whitespace so we'd have these tokens for each word and",
    "start": "373060",
    "end": "381030"
  },
  {
    "text": "after it passed through the standard filter which again was removed in elasticsearch 7 nothing would happen",
    "start": "381030",
    "end": "387490"
  },
  {
    "text": "because it didn't do anything after the lowercase filter it just lowercases everything pretty",
    "start": "387490",
    "end": "393820"
  },
  {
    "text": "self-explanatory and after the stop filter which is actually disabled by default it would not look any different",
    "start": "393820",
    "end": "401229"
  },
  {
    "text": "now what the stop filter does is remove stop words if you are not familiar with",
    "start": "401229",
    "end": "406389"
  },
  {
    "text": "what those are it's basically just parts of speech that are super common and not",
    "start": "406389",
    "end": "411789"
  },
  {
    "text": "particularly useful so in the English language it's words like by the of so",
    "start": "411789",
    "end": "417669"
  },
  {
    "text": "prepositions those parts of speech so if the stop filter was not disabled it would have removed the token bye and so",
    "start": "417669",
    "end": "425199"
  },
  {
    "text": "what would actually be indexed in elasticsearch from the text domain-driven designed by example is",
    "start": "425199",
    "end": "431160"
  },
  {
    "text": "these tokens that are left domain-driven design an example so that's kind of",
    "start": "431160",
    "end": "438100"
  },
  {
    "text": "high-level whirlwind tour of how analyzers work and how your data is going to get indexed questions on that",
    "start": "438100",
    "end": "447900"
  },
  {
    "text": "okay so we'll get into what suggesters are so what is a suggestor suggest",
    "start": "448320",
    "end": "455710"
  },
  {
    "start": "451000",
    "end": "451000"
  },
  {
    "text": "similar looking terms nothing too earth-shattering but they're pretty useful and what that means depends on",
    "start": "455710",
    "end": "462910"
  },
  {
    "text": "what type of suggestor you're using their documentation says that parts of the suggests features are still under",
    "start": "462910",
    "end": "468669"
  },
  {
    "text": "development but it doesn't say which parts it said that for quite a while so I guess they're still working on",
    "start": "468669",
    "end": "475240"
  },
  {
    "text": "something maybe but they won't say what I can tell you when I originally wrote this talk I was using elasticsearch",
    "start": "475240",
    "end": "481810"
  },
  {
    "text": "something like six four and now we're on 7.04 I've looked through the change logs",
    "start": "481810",
    "end": "487419"
  },
  {
    "text": "for every version they've released since then the only things that have changed with suggesters are bug fixes so they're",
    "start": "487419",
    "end": "492880"
  },
  {
    "text": "a stable feature they've been around for quite a while there and there are three types of them there's a completion",
    "start": "492880",
    "end": "498699"
  },
  {
    "text": "suggester a term suggester and a phrase adjuster we're gonna start with the",
    "start": "498699",
    "end": "504370"
  },
  {
    "start": "504000",
    "end": "504000"
  },
  {
    "text": "completion suggestor so before we move beyond autocomplete we're gonna start with it it's prides autocomplete but it",
    "start": "504370",
    "end": "512650"
  },
  {
    "text": "only works based on a prefix so that could or could not be useful depending on what type of autocomplete you need to",
    "start": "512650",
    "end": "518380"
  },
  {
    "text": "implement and it stored as a special data structure that makes it very fast that data structure is called a finite",
    "start": "518380",
    "end": "524980"
  },
  {
    "text": "state transducer I looked at the week at Wikipedia article on that to see if I could give a better explanation and all",
    "start": "524980",
    "end": "531520"
  },
  {
    "text": "the math symbols symbols quickly reminded me why I didn't more math in college but they are costly",
    "start": "531520",
    "end": "538519"
  },
  {
    "text": "to build what I mean by that is it takes more time when you're indexing your documents to create these because",
    "start": "538519",
    "end": "544610"
  },
  {
    "text": "they're stored in memory which is also part of what makes them super fast and",
    "start": "544610",
    "end": "550880"
  },
  {
    "text": "you want to be a bit weary of them being stored in memory because elasticsearch is built on Java so it's running in the",
    "start": "550880",
    "end": "557839"
  },
  {
    "text": "JVM so you may run up against memory pressure if you haven't allocated enough memory to your JVM runtime so just",
    "start": "557839",
    "end": "564200"
  },
  {
    "text": "something to keep in mind so we're gonna look at that in a demo but just before I",
    "start": "564200",
    "end": "570649"
  },
  {
    "start": "569000",
    "end": "569000"
  },
  {
    "text": "start a couple notes on demos I'm essentially starting with an empty elasticsearch incidence it's local",
    "start": "570649",
    "end": "575870"
  },
  {
    "text": "running on my machine there might be some data in there none of it is data we're gonna use I'm using the newest",
    "start": "575870",
    "end": "581480"
  },
  {
    "text": "version of elasticsearch 7 which is 7.0.4 I believe so no data is",
    "start": "581480",
    "end": "586579"
  },
  {
    "text": "pre-populated I am going to do all of the demos using the REST API if I were",
    "start": "586579",
    "end": "592040"
  },
  {
    "text": "doing an actual production application I would not be using the REST API is there our client libraries for pretty much",
    "start": "592040",
    "end": "598100"
  },
  {
    "text": "every language that I can think of I have personally only used the ones for dotnet they are very good they make it",
    "start": "598100",
    "end": "604370"
  },
  {
    "text": "easy to work with elasticsearch but when I've had issues with a query not returning the results I want it's",
    "start": "604370",
    "end": "609740"
  },
  {
    "text": "usually been because I've written the query poorly it's a lot easier to debug it using the REST API then through the",
    "start": "609740",
    "end": "615320"
  },
  {
    "text": "clients so for each demo we're gonna create a new index that's document that",
    "start": "615320",
    "end": "622040"
  },
  {
    "text": "is customized for our needs we're gonna put some data in and see how the type of suggestor we discussed works so I am",
    "start": "622040",
    "end": "630020"
  },
  {
    "text": "going to use a tool called insomnia if you are not familiar with it it's very similar to postman it's just a basic",
    "start": "630020",
    "end": "636529"
  },
  {
    "text": "rest client and I am pretty positive that that text is too small for you guys in the back so let me know when it looks",
    "start": "636529",
    "end": "644480"
  },
  {
    "text": "big enough everyone can read that now",
    "start": "644480",
    "end": "651190"
  },
  {
    "text": "cool so we're using the REST API the way this",
    "start": "651190",
    "end": "656310"
  },
  {
    "text": "works I've got this running on my local host 9200 is just that a full port and",
    "start": "656310",
    "end": "661530"
  },
  {
    "text": "the slash test is just the name that we're gonna use for this index so you use a put request to create an index",
    "start": "661530",
    "end": "668690"
  },
  {
    "text": "which is a bit weird to me but we're not here to argue the semantics of rest api is so what i'm going to do is create",
    "start": "668690",
    "end": "678410"
  },
  {
    "text": "mappings and mappings have properties if you've looked at elasticsearch before there would be one more level to this",
    "start": "678410",
    "end": "685110"
  },
  {
    "text": "nesting which would have been that type that I mentioned was removed so if you are looking at examples and you see that",
    "start": "685110",
    "end": "690240"
  },
  {
    "text": "difference that's why I'm gonna use one property and we're gonna call it name",
    "start": "690240",
    "end": "695900"
  },
  {
    "text": "we're gonna give it a type of keyword and then we need one more I'm gonna call",
    "start": "695900",
    "end": "704130"
  },
  {
    "text": "it suggest so name and suggest here our arbitrary they're just names that I'm giving to these properties and then the",
    "start": "704130",
    "end": "710850"
  },
  {
    "text": "type is specifying which type of field that we want elasticsearch to use and that controls how this is going to be",
    "start": "710850",
    "end": "717780"
  },
  {
    "text": "indexed so for suggest we need to use a specific type of completion all right so",
    "start": "717780",
    "end": "726960"
  },
  {
    "text": "we have an index we'll put some data into it pretty similar URL we're just",
    "start": "726960",
    "end": "732270"
  },
  {
    "text": "gonna add slash underscore doc to the end and if I wanted to I could also",
    "start": "732270",
    "end": "737550"
  },
  {
    "text": "specify the URL at the end of this but I'm not we don't need it so I'm just not gonna bother so we're gonna put some",
    "start": "737550",
    "end": "744060"
  },
  {
    "text": "data in here and since it was finally nice in Minnesota this past weekend although you may not believe it today I",
    "start": "744060",
    "end": "749910"
  },
  {
    "text": "was doing some gardening stuff so we'll use some gardening products so for the",
    "start": "749910",
    "end": "756990"
  },
  {
    "text": "name I'm just giving a text and then for suggest the syntax for that you can kind",
    "start": "756990",
    "end": "762750"
  },
  {
    "text": "of put in whatever you want in an array so I'm just gonna use both words and practice if I was indexing something I",
    "start": "762750",
    "end": "770550"
  },
  {
    "text": "would probably just be splitting on whitespace to put those in there so I'm",
    "start": "770550",
    "end": "776430"
  },
  {
    "text": "gonna do that what a spading fork to",
    "start": "776430",
    "end": "785240"
  },
  {
    "text": "and how about a fountain",
    "start": "792510",
    "end": "796519"
  },
  {
    "text": "okay so we've got a little bit of data in there to actually use the suggesters",
    "start": "801390",
    "end": "807240"
  },
  {
    "text": "you use the search endpoint that's different from some earlier versions of elastic search and the versions I think",
    "start": "807240",
    "end": "814350"
  },
  {
    "text": "it was only like one in two it's been different for quite a while there was a different end point for suggesters they're part of search now so you can do",
    "start": "814350",
    "end": "822089"
  },
  {
    "text": "both search and get suggesters at the same time which is pretty useful if I were to just send an empty request this",
    "start": "822089",
    "end": "828420"
  },
  {
    "text": "is gonna search do everything return me a some JSON with hits that's the",
    "start": "828420",
    "end": "835920"
  },
  {
    "text": "equivalent to doing an actual query so if we were trying to do a query for everything we'd use a match all query",
    "start": "835920",
    "end": "842600"
  },
  {
    "text": "it's gonna return the same thing but we're not here to talk about queries so the way you use suggesters is you apply",
    "start": "842600",
    "end": "851220"
  },
  {
    "text": "this suggestor key and then for each type of suggestor you want to use you have to specify a name so I'm gonna call",
    "start": "851220",
    "end": "859290"
  },
  {
    "text": "this autocomplete this is arbitrary and then because we're using the completion",
    "start": "859290",
    "end": "866850"
  },
  {
    "text": "suggestor we need to specify a prefix I'm gonna use fo because I know there's data that's gonna come back and then you",
    "start": "866850",
    "end": "873300"
  },
  {
    "text": "specify which type of complete suggestor so we're using the completion suggestor",
    "start": "873300",
    "end": "881180"
  },
  {
    "text": "and then you tell it which field to use so we called it suggest and of course I",
    "start": "881180",
    "end": "892680"
  },
  {
    "text": "type something wrong so I am just gonna go grab part of this quick",
    "start": "892680",
    "end": "901070"
  },
  {
    "text": "so we get nothing back and hits which is good because we're not searching on anything in some of the older versions of elasticsearch that would get returned",
    "start": "909840",
    "end": "917160"
  },
  {
    "text": "by default and you'd need to specify that you want zero results but we're interested in is down here and this",
    "start": "917160",
    "end": "922320"
  },
  {
    "text": "suggests and the completer which is what we called it we're getting back results",
    "start": "922320",
    "end": "932839"
  },
  {
    "text": "so you can see we got back fork fork and fountain because that is the data that",
    "start": "932839",
    "end": "940230"
  },
  {
    "text": "we specified in here so we can show those to our users they get a bit of",
    "start": "940230",
    "end": "946800"
  },
  {
    "text": "autocomplete one thing that is maybe not great is that we're getting back",
    "start": "946800",
    "end": "952080"
  },
  {
    "text": "duplicates if you want to not get those you can specify another piece of this",
    "start": "952080",
    "end": "958560"
  },
  {
    "text": "request to say skip duplicates and then we will only get one",
    "start": "958560",
    "end": "967279"
  },
  {
    "text": "we only get fork back once that option has been in an out of elasticsearch it",
    "start": "967279",
    "end": "973410"
  },
  {
    "text": "was in there in the early days it was removed for a while then it got added back in one of the later versions of six",
    "start": "973410",
    "end": "978860"
  },
  {
    "text": "one other thing you may have noticed if you're paying really close attention to these results is this underscore source",
    "start": "978860",
    "end": "985440"
  },
  {
    "text": "field this is returning the entire document which in our case probably",
    "start": "985440",
    "end": "991589"
  },
  {
    "text": "isn't a huge deal but if you have a big data set that could be a lot of data for",
    "start": "991589",
    "end": "996750"
  },
  {
    "text": "what you're sending over the wire so if you want to disable that you can do this source pulse and it streamlines your",
    "start": "996750",
    "end": "1003589"
  },
  {
    "text": "results a bit more just being conscious of what we're sending over the wire so",
    "start": "1003589",
    "end": "1010490"
  },
  {
    "text": "one last thing I have found useful what the completions suggestor is if your users are like me sometimes they are",
    "start": "1010490",
    "end": "1015700"
  },
  {
    "text": "challenged with typing so if someone typed in fur we'd get nothing but we",
    "start": "1015700",
    "end": "1023570"
  },
  {
    "text": "have something similar in there so you can make the queries fuzzy and what this",
    "start": "1023570",
    "end": "1031670"
  },
  {
    "text": "lets you do is give some leeway to typos so you can set this to integers in",
    "start": "1031670",
    "end": "1038810"
  },
  {
    "text": "practice I've usually set it to auto and it's worked out pretty well if I do that",
    "start": "1038810",
    "end": "1044740"
  },
  {
    "text": "again I've typed something wrong",
    "start": "1045730",
    "end": "1049900"
  },
  {
    "text": "you can see then we do get a result back so just something you can do to make life a bit better for your users because",
    "start": "1060249",
    "end": "1066489"
  },
  {
    "text": "sometimes the worst thing you can do is show no results maybe if you weren't getting any results back you just want",
    "start": "1066489",
    "end": "1072109"
  },
  {
    "text": "to show a message indicating that but showing absolutely nothing probably gonna make most users think something's broken so that is really it for the",
    "start": "1072109",
    "end": "1081320"
  },
  {
    "text": "completion suggestor any questions on that",
    "start": "1081320",
    "end": "1086049"
  },
  {
    "start": "1095000",
    "end": "1095000"
  },
  {
    "text": "the next suggestion we're gonna look at is the term suggestor so this is most useful for correcting a user spelling",
    "start": "1095160",
    "end": "1101880"
  },
  {
    "text": "and the suggestions that it provides are based on edit distance which is a term I",
    "start": "1101880",
    "end": "1107040"
  },
  {
    "text": "wasn't familiar with so what is that it's basically how many characters need",
    "start": "1107040",
    "end": "1112110"
  },
  {
    "start": "1109000",
    "end": "1109000"
  },
  {
    "text": "to be changed for a term to match so if two things don't match how far apart are they so for an example let's say the",
    "start": "1112110",
    "end": "1120300"
  },
  {
    "text": "user provided the text domain but they screwed up a couple characters there that corrected term domain has an edit",
    "start": "1120300",
    "end": "1126990"
  },
  {
    "text": "distance of one because we only had to move one character or change one character to make it correct all right",
    "start": "1126990",
    "end": "1138690"
  },
  {
    "text": "so let's look at a demo so I'm going to",
    "start": "1138690",
    "end": "1145740"
  },
  {
    "text": "delete the index that we were using before so we don't need it we'll set up a new one",
    "start": "1145740",
    "end": "1152779"
  },
  {
    "text": "you do not need to use a specific type of field for the term suggestor like you",
    "start": "1158740",
    "end": "1164260"
  },
  {
    "text": "do for the completion suggestor so we're just going to do a title of type keyword",
    "start": "1164260",
    "end": "1170350"
  },
  {
    "text": "we're gonna use books for our data this time so I'll create that create a couple",
    "start": "1170350",
    "end": "1176830"
  },
  {
    "text": "documents so we have some data with which to test",
    "start": "1176830",
    "end": "1181590"
  },
  {
    "text": "and our request to use the suggestor is gonna look pretty similar to what we had before I'll call it spellcheck instead",
    "start": "1192320",
    "end": "1204710"
  },
  {
    "text": "of prefixed this time we're gonna specify text I'm gonna use the same typo",
    "start": "1204710",
    "end": "1210560"
  },
  {
    "text": "we did in our example and then we're using the term suggestor so we'll do",
    "start": "1210560",
    "end": "1215690"
  },
  {
    "text": "that and then specify the parameters to it our field is called title so if we do",
    "start": "1215690",
    "end": "1223070"
  },
  {
    "text": "that we get back no results which is actually what I expected but does anyone",
    "start": "1223070",
    "end": "1229550"
  },
  {
    "text": "have any idea why that is no okay",
    "start": "1229550",
    "end": "1235820"
  },
  {
    "text": "usually when this happens my first thought is I've done something wrong",
    "start": "1235820",
    "end": "1240920"
  },
  {
    "text": "with the query but I know that I've set this one up right so then my next thought is usually the way the data's",
    "start": "1240920",
    "end": "1246530"
  },
  {
    "text": "indexed is not what I'm expecting and the most useful tool I found for debugging that is there is this analyze",
    "start": "1246530",
    "end": "1254270"
  },
  {
    "text": "endpoint so again it's the root URL of where our elasticsearch instance is",
    "start": "1254270",
    "end": "1259370"
  },
  {
    "text": "living the index and then slash underscore analyze and what this allows",
    "start": "1259370",
    "end": "1264530"
  },
  {
    "text": "you to do is throw text at your index and see how it's being indexed so the",
    "start": "1264530",
    "end": "1272570"
  },
  {
    "text": "text we are gonna look at is domain driven design because we expected that",
    "start": "1272570",
    "end": "1278060"
  },
  {
    "text": "to show up and then you can tell it which field you want to use so we called it title so if we do that this is how it",
    "start": "1278060",
    "end": "1286220"
  },
  {
    "text": "got set up so the text is only in there as this is the exact string we gave it",
    "start": "1286220",
    "end": "1291500"
  },
  {
    "text": "and it's that way because we used the keyword field type which basically just",
    "start": "1291500",
    "end": "1298910"
  },
  {
    "text": "takes something as it is and puts it in there exactly like that you can also use",
    "start": "1298910",
    "end": "1304130"
  },
  {
    "text": "this end point to check specific analyzers so we used if we do the",
    "start": "1304130",
    "end": "1310130"
  },
  {
    "text": "keyword analyzer and I spell analyzer right we'll get the exact same thing",
    "start": "1310130",
    "end": "1316280"
  },
  {
    "text": "back so the actual analyzer we probably want to use is the standard that looks",
    "start": "1316280",
    "end": "1323120"
  },
  {
    "text": "more like what we wanted because we want each word so I'm going to delete that index and",
    "start": "1323120",
    "end": "1330640"
  },
  {
    "text": "I'm gonna change this type to text which I know it uses the standard analyzer I",
    "start": "1330640",
    "end": "1336520"
  },
  {
    "text": "didn't have to delete the index there is a way you can update mappings it's just a little bit quicker for the sake of a",
    "start": "1336520",
    "end": "1342440"
  },
  {
    "text": "demo so I will reindex these documents",
    "start": "1342440",
    "end": "1348100"
  },
  {
    "text": "and now if we do this search again we actually get back the corrected option",
    "start": "1351730",
    "end": "1358490"
  },
  {
    "text": "domain a couple other things I'll point out here is there's this score that's basically just how good of a match this",
    "start": "1358490",
    "end": "1365300"
  },
  {
    "text": "is so how close is it to the text that the user provided and then there's this frequency so the frequency is how many",
    "start": "1365300",
    "end": "1372380"
  },
  {
    "text": "documents in your index in which that text appears so it could be useful in figuring out what's probably the most",
    "start": "1372380",
    "end": "1378890"
  },
  {
    "text": "relevant thing to a user so the term suggesters probably actually the",
    "start": "1378890",
    "end": "1384500"
  },
  {
    "text": "simplest one that's the crux of what there is to it there's some more options if you really want to look into it I",
    "start": "1384500",
    "end": "1391610"
  },
  {
    "text": "haven't found any of the rest of them particularly useful I will mention elastic searches documentation as",
    "start": "1391610",
    "end": "1396950"
  },
  {
    "text": "fantastic so if you're interested more in what's available go check that out but otherwise questions on the term",
    "start": "1396950",
    "end": "1403760"
  },
  {
    "text": "suggestor so the question was I've got",
    "start": "1403760",
    "end": "1415220"
  },
  {
    "text": "this I've got a typo here in spellcheck so within this suggest object this spell",
    "start": "1415220",
    "end": "1421310"
  },
  {
    "text": "check here is just arbitrary so I could actually do multiple suggesters at once",
    "start": "1421310",
    "end": "1427820"
  },
  {
    "text": "if I wanted",
    "start": "1427820",
    "end": "1431230"
  },
  {
    "text": "and that's just my way of when I get them back knowing which suggesters which so it's just an arbitrary name that I",
    "start": "1453309",
    "end": "1458799"
  },
  {
    "text": "assign to it any other questions at this",
    "start": "1458799",
    "end": "1463840"
  },
  {
    "text": "point",
    "start": "1463840",
    "end": "1465990"
  },
  {
    "start": "1474000",
    "end": "1474000"
  },
  {
    "text": "so the next type of suggestor is the phrase suggestor it's like the term suggester only it's fancier you'd use",
    "start": "1474460",
    "end": "1481690"
  },
  {
    "text": "this for building a did you mean feature so if you've ever typed a phrase into Google and typed one of the words",
    "start": "1481690",
    "end": "1487210"
  },
  {
    "text": "correctly incorrectly and it's asked did you actually mean this this is what you'd use that for it's based on an",
    "start": "1487210",
    "end": "1494200"
  },
  {
    "text": "Engram language model so what that way what that is is a way of tokenizing a",
    "start": "1494200",
    "end": "1499809"
  },
  {
    "start": "1496000",
    "end": "1496000"
  },
  {
    "text": "string so for an example if we're indexing the string domain and way you",
    "start": "1499809",
    "end": "1504909"
  },
  {
    "text": "use a gram size of two we're gonna find every two consecutive letter combination",
    "start": "1504909",
    "end": "1510460"
  },
  {
    "text": "from that so if we used anagram size of two on that text we'd get the tokens do",
    "start": "1510460",
    "end": "1516519"
  },
  {
    "text": "OMM a a I and I n so that's useful for individual words but then when we're",
    "start": "1516519",
    "end": "1524440"
  },
  {
    "start": "1524000",
    "end": "1524000"
  },
  {
    "text": "looking at phrases people what I've seen them referred to is shingles instead of",
    "start": "1524440",
    "end": "1530919"
  },
  {
    "text": "grams so for an example if we're looking at domain driven design and we use a",
    "start": "1530919",
    "end": "1535960"
  },
  {
    "text": "minimum shingle size of two and a maximum shingle size of three which is like gram size except now instead of",
    "start": "1535960",
    "end": "1542619"
  },
  {
    "text": "four letters we're doing it four words we'd get the combinations domain driven",
    "start": "1542619",
    "end": "1547720"
  },
  {
    "text": "driven design and domain driven design so that's how we want to think about how our text is being analyzed in an index",
    "start": "1547720",
    "end": "1555879"
  },
  {
    "text": "and stored for searching it questions on that",
    "start": "1555879",
    "end": "1561809"
  },
  {
    "text": "so I'm gonna delete our index again and",
    "start": "1568090",
    "end": "1573270"
  },
  {
    "text": "the setup for this is quite a bit more involved so we haven't seen this yet but",
    "start": "1573270",
    "end": "1578290"
  },
  {
    "text": "we're gonna have this settings part of our index now because we need to",
    "start": "1578290",
    "end": "1584470"
  },
  {
    "text": "configure a specific analyzer so that we can store the text like that so this is",
    "start": "1584470",
    "end": "1593200"
  },
  {
    "text": "all boilerplate just what you need to do for creating custom analyzers so we're gonna have a filter and an analyzer you",
    "start": "1593200",
    "end": "1602680"
  },
  {
    "text": "can do specify multiple filters and multiple analyzers I'm gonna call this",
    "start": "1602680",
    "end": "1608470"
  },
  {
    "text": "one shingle that name I'm giving it is just the name that I'm assigning to it",
    "start": "1608470",
    "end": "1615100"
  },
  {
    "text": "there's no significance to it it's just how we're gonna refer to it later and then the type of filter we're gonna use",
    "start": "1615100",
    "end": "1620860"
  },
  {
    "text": "is the shingle filter and we have to",
    "start": "1620860",
    "end": "1625900"
  },
  {
    "text": "give it a minimum gram size and a max",
    "start": "1625900",
    "end": "1631390"
  },
  {
    "text": "gram size and then we need a custom",
    "start": "1631390",
    "end": "1637330"
  },
  {
    "text": "analyzer too and I am going to call this trigram because we're gonna make reusing",
    "start": "1637330",
    "end": "1643890"
  },
  {
    "text": "gram size of three the type of this is gonna be custom we don't need any",
    "start": "1643890",
    "end": "1650560"
  },
  {
    "text": "character filters we do need a tokenizer because remember every elasticsearch",
    "start": "1650560",
    "end": "1655690"
  },
  {
    "text": "analyzer has one and exactly one tokenizer I'm gonna use the standard tokenizer which is just gonna split",
    "start": "1655690",
    "end": "1662380"
  },
  {
    "text": "things on white space for us and then we need filter we need to at least use our",
    "start": "1662380",
    "end": "1669130"
  },
  {
    "text": "shingle filter so that's how you would set up a custom analyzer so we have this custom analyzer called trigram that's",
    "start": "1669130",
    "end": "1675850"
  },
  {
    "text": "using our custom filter called shingle which is really using a built in type of filter that's in elasticsearch out of",
    "start": "1675850",
    "end": "1683980"
  },
  {
    "text": "box we just have to tell it how we want it to work so then we'll have our",
    "start": "1683980",
    "end": "1689440"
  },
  {
    "text": "mappings we should be used to seeing by now",
    "start": "1689440",
    "end": "1693840"
  },
  {
    "text": "we're gonna stick with our book theme here and this will be a slightly new",
    "start": "1696480",
    "end": "1706960"
  },
  {
    "text": "syntax we haven't seen before if you are indexing the same text multiple times",
    "start": "1706960",
    "end": "1712440"
  },
  {
    "text": "you can specify what are called fields and those are basically it just nested",
    "start": "1712440",
    "end": "1718330"
  },
  {
    "text": "properties so if I want to index title more than one way this is typically what I've seen people do and what I do",
    "start": "1718330",
    "end": "1724360"
  },
  {
    "text": "because I may want to use title as searchable text but I may also want to use it as a filter and if you're trying",
    "start": "1724360",
    "end": "1731410"
  },
  {
    "text": "to filter things you're gonna want an exact match and then the type of the property type of keyword is a lot more",
    "start": "1731410",
    "end": "1738550"
  },
  {
    "text": "useful so you have fields and then it's just the same syntax as properties so",
    "start": "1738550",
    "end": "1743740"
  },
  {
    "text": "I'm gonna call this trigram you give it a type will make",
    "start": "1743740",
    "end": "1750700"
  },
  {
    "text": "text and then this time we're gonna specify an analyzer now we haven't specified an analyzer for anything we've",
    "start": "1750700",
    "end": "1757480"
  },
  {
    "text": "set up so far because every type in elasticsearch has a default analyzer so",
    "start": "1757480",
    "end": "1764020"
  },
  {
    "text": "we're gonna tell it to use our trigram analyzer and if I've actually typed everything correctly",
    "start": "1764020",
    "end": "1770730"
  },
  {
    "text": "no but rather than trying to fix that I'm just gonna go grab something that I",
    "start": "1770730",
    "end": "1776620"
  },
  {
    "text": "know works",
    "start": "1776620",
    "end": "1779130"
  },
  {
    "text": "okay so now we've got an index set up so we should be able to use the phrase suggester so we'll stick with the same",
    "start": "1786210",
    "end": "1795720"
  },
  {
    "text": "books we'd used in our previous example",
    "start": "1795720",
    "end": "1799908"
  },
  {
    "text": "and this is gonna look pretty similar as well by now I think you're probably getting the point that the suggesters",
    "start": "1804860",
    "end": "1810179"
  },
  {
    "text": "are pretty similar with how you use them",
    "start": "1810179",
    "end": "1815299"
  },
  {
    "text": "we're gonna use text again for this one we'll use the same typos as before this",
    "start": "1815299",
    "end": "1822690"
  },
  {
    "text": "time we're using the phrase suggestor and when you have those fields the way",
    "start": "1822690",
    "end": "1827820"
  },
  {
    "text": "that you refer to them is just by the top-level field then dot whatever you",
    "start": "1827820",
    "end": "1834539"
  },
  {
    "text": "named the other ones so since we named to that field trigram it's titled trigram so if we try running this we're",
    "start": "1834539",
    "end": "1842009"
  },
  {
    "text": "getting nothing back which is what I expect is that what anyone else expected",
    "start": "1842009",
    "end": "1848720"
  },
  {
    "text": "any ideas on what's wrong with it",
    "start": "1848720",
    "end": "1852860"
  },
  {
    "text": "No okay so again usually if this sort of thing happens I go to my trusty friend",
    "start": "1854149",
    "end": "1860220"
  },
  {
    "text": "the analyzer and then ask it all right what if I send stuff to this field what",
    "start": "1860220",
    "end": "1868169"
  },
  {
    "text": "is it gonna look like so this is what",
    "start": "1868169",
    "end": "1873659"
  },
  {
    "text": "we're getting so things are being tokenized the way we expect it may be surprising to some people to see that we",
    "start": "1873659",
    "end": "1879360"
  },
  {
    "text": "have grams sizes of less than two that's because I didn't specify an option to take out those when we set up the filter",
    "start": "1879360",
    "end": "1887909"
  },
  {
    "text": "we certainly could have but the other thing is everything is still uppercase twich probably isn't what we want so we",
    "start": "1887909",
    "end": "1895830"
  },
  {
    "text": "just need to make a minor change to our analyzer and add the lowercase filter so",
    "start": "1895830",
    "end": "1907379"
  },
  {
    "text": "we can go back before we start indexing data and make sure that that's doing",
    "start": "1907379",
    "end": "1914460"
  },
  {
    "text": "what we want and that looks more correct so I know that was kind of the same thing we went through before but I just wanted to show",
    "start": "1914460",
    "end": "1920010"
  },
  {
    "text": "that that custom that analyzed and client works for custom analyzers as well as out of box analyzers you can",
    "start": "1920010",
    "end": "1926970"
  },
  {
    "text": "post configurations to it as well so if you're just trying to figure out how to get an analyzer to work before you use",
    "start": "1926970",
    "end": "1932400"
  },
  {
    "text": "it also a useful tool there as well",
    "start": "1932400",
    "end": "1936950"
  },
  {
    "text": "so we'll put some data back and then if",
    "start": "1938690",
    "end": "1948360"
  },
  {
    "text": "we go try to use the suggestor again we actually get something back which is",
    "start": "1948360",
    "end": "1954630"
  },
  {
    "text": "what we expected and it's got a score one of the other parameters I found",
    "start": "1954630",
    "end": "1960660"
  },
  {
    "text": "useful for this is there's one called confidence by default this is a one and you can set this to various values and",
    "start": "1960660",
    "end": "1967560"
  },
  {
    "text": "what it does is basically controls how forgiving the algorithm is so it by",
    "start": "1967560",
    "end": "1975000"
  },
  {
    "text": "default it's only gonna return things that score higher than what was the text that user provided so if I set this",
    "start": "1975000",
    "end": "1981210"
  },
  {
    "text": "really low to zero it's gonna provide more things and you can see it actually",
    "start": "1981210",
    "end": "1986310"
  },
  {
    "text": "gave us back the typo we put in which may or may not be useful typically when",
    "start": "1986310",
    "end": "1991560"
  },
  {
    "text": "I've been working on elasticsearch implementations I don't want to show something like that to the user if it's",
    "start": "1991560",
    "end": "1997170"
  },
  {
    "text": "not actually gonna match anything any search that they could do against our elasticsearch instance in the the phrase",
    "start": "1997170",
    "end": "2004340"
  },
  {
    "text": "suggestor has a pretty neat feature that will let you actually check against your",
    "start": "2004340",
    "end": "2011630"
  },
  {
    "text": "index excuse me it's called kholate and what it lets you",
    "start": "2011630",
    "end": "2019550"
  },
  {
    "text": "do is actually specify a query so I'm",
    "start": "2019550",
    "end": "2027770"
  },
  {
    "text": "gonna use what's called a match phrase query and this is just gonna check to",
    "start": "2027770",
    "end": "2032930"
  },
  {
    "text": "make sure that the phrases are an exact match so I'm gonna put title here",
    "start": "2032930",
    "end": "2039620"
  },
  {
    "text": "because that's the field against which we want to match and then I'm gonna put suggestion with this syntax which",
    "start": "2039620",
    "end": "2045560"
  },
  {
    "text": "basically just means that every suggestion that it finds is gonna be run against this query so if I do that",
    "start": "2045560",
    "end": "2053720"
  },
  {
    "text": "we get zero results back I probably just screwed up something with the query not a big deal if you want to get back",
    "start": "2053720",
    "end": "2060740"
  },
  {
    "text": "results regardless of if they matched or not you can specify this prune option",
    "start": "2060740",
    "end": "2067450"
  },
  {
    "text": "and if you specify it in the right spot you'll get back matches regardless and",
    "start": "2076240",
    "end": "2082330"
  },
  {
    "text": "it'll tell you if it's a collate match true or false so it's saying false there because that didn't match anything so if",
    "start": "2082330",
    "end": "2088148"
  },
  {
    "text": "you think of why that's useful if I have users who are searching for specific things and it's not matching anything in",
    "start": "2088149",
    "end": "2094419"
  },
  {
    "text": "our website or whatever they're searching I probably want to know about that because it either means that our",
    "start": "2094419",
    "end": "2101710"
  },
  {
    "text": "search is not working correctly and users aren't able to find what they want or maybe they're looking for things that",
    "start": "2101710",
    "end": "2107440"
  },
  {
    "text": "we don't have so if you think like if this is an e-commerce site and users are searching for something consistently and",
    "start": "2107440",
    "end": "2113859"
  },
  {
    "text": "it's not matching anything maybe there's something we need to add so it's something to think about one last thing",
    "start": "2113859",
    "end": "2121359"
  },
  {
    "text": "with the phrase suggestor that's particularly useful is you can also highlight things and what that lets you",
    "start": "2121359",
    "end": "2131109"
  },
  {
    "text": "do is wrap what the corrected text in a pre tag and a post tag so it makes it",
    "start": "2131109",
    "end": "2146800"
  },
  {
    "text": "super easy to be able to style things when you're displaying it to users so you can see now when it returns the text",
    "start": "2146800",
    "end": "2152980"
  },
  {
    "text": "it also returns a highlighted version so I could use that em tag to you know like italicize or something to give it use",
    "start": "2152980",
    "end": "2159099"
  },
  {
    "text": "the user a visual indication of that's what we change from what you put in so",
    "start": "2159099",
    "end": "2167740"
  },
  {
    "text": "that is it for what I have for the phrase suggestor any questions on that",
    "start": "2167740",
    "end": "2175500"
  },
  {
    "text": "yeah so the question was just asking for a bit more of clarification and how the",
    "start": "2202380",
    "end": "2208630"
  },
  {
    "text": "Engram filter that I set up came into play because this looks like it was just",
    "start": "2208630",
    "end": "2214240"
  },
  {
    "text": "used with the standard analyzer so if I had just used the standard analyzer I would have only gotten domain-driven",
    "start": "2214240",
    "end": "2221230"
  },
  {
    "text": "InDesign by using the Engram filter we also got the token domain driven and",
    "start": "2221230",
    "end": "2228280"
  },
  {
    "text": "domain driven design so if we hadn't done that we wouldn't have actually been able to match against a frieze because",
    "start": "2228280",
    "end": "2235450"
  },
  {
    "text": "we wouldn't have had a token of those phrases does that answer your question okay any other questions okay so I said",
    "start": "2235450",
    "end": "2248859"
  },
  {
    "text": "there were only three types of suggesters that's kind of true but not completely there's also what is called a",
    "start": "2248859",
    "end": "2255700"
  },
  {
    "start": "2254000",
    "end": "2254000"
  },
  {
    "text": "context suggestor it's used with the completion suggestor but it allows you",
    "start": "2255700",
    "end": "2261490"
  },
  {
    "text": "to specify context too so you can do autocomplete but then you can also do some additional filtering and there are",
    "start": "2261490",
    "end": "2267940"
  },
  {
    "text": "two types of context currently there's a category filter which is exactly what it sounds like and then there's a geo",
    "start": "2267940",
    "end": "2274720"
  },
  {
    "text": "filter which is also what it sounds like the Geo filter lets you do filtering based on latitude and longitude",
    "start": "2274720",
    "end": "2281050"
  },
  {
    "text": "coordinates so if you think in the context of if you have a search where you're searching for locations you could",
    "start": "2281050",
    "end": "2287530"
  },
  {
    "text": "allow you know use the user's location to restrict what results they got to make sure they're the most relevant to",
    "start": "2287530",
    "end": "2293710"
  },
  {
    "text": "them so it requires a spatial mapping though to do the geo one so something to",
    "start": "2293710",
    "end": "2299230"
  },
  {
    "text": "keep in mind it increases the index size of the completion field so if you're concerned about the size of your index",
    "start": "2299230",
    "end": "2304990"
  },
  {
    "text": "you want to be wary of this and it's entirely sort entirely on the heap",
    "start": "2304990",
    "end": "2310540"
  },
  {
    "text": "again this is running in the JVM so tread lightly with this with how much extra data you're adding and how much",
    "start": "2310540",
    "end": "2316240"
  },
  {
    "text": "memory you're using so as far as setting",
    "start": "2316240",
    "end": "2326170"
  },
  {
    "text": "those up it looks pretty similar to our first example",
    "start": "2326170",
    "end": "2331079"
  },
  {
    "text": "we're gonna stick with our theme of books but this time we're gonna add a",
    "start": "2339540",
    "end": "2350100"
  },
  {
    "text": "John row we'll make this a keyword because we're probably only gonna ever",
    "start": "2350100",
    "end": "2356010"
  },
  {
    "text": "use that to filter or display and then we're gonna have our suggest again we",
    "start": "2356010",
    "end": "2361320"
  },
  {
    "text": "still have to use the type of completion but then we're also going to specify contexts so when you do that contexts",
    "start": "2361320",
    "end": "2370770"
  },
  {
    "text": "will have a couple pieces of information you're always gonna have to specify the type this is if it's a category or a geo",
    "start": "2370770",
    "end": "2376500"
  },
  {
    "text": "we're gonna use category you're always gonna specify a name we're gonna call",
    "start": "2376500",
    "end": "2382710"
  },
  {
    "text": "this genre and then this is an optional thing but you could also specify a path",
    "start": "2382710",
    "end": "2387869"
  },
  {
    "text": "and I'm going to do that because we're already indexing the data that we want to use for our category so if I do path",
    "start": "2387869",
    "end": "2395130"
  },
  {
    "text": "I can just say use a genre and if it was like an S feel that would be you know",
    "start": "2395130",
    "end": "2401130"
  },
  {
    "text": "like titled genre or whatever okay so",
    "start": "2401130",
    "end": "2408720"
  },
  {
    "text": "we'll keep using our same text we're gonna have to give it a genre this time this sounds like a development book and",
    "start": "2408720",
    "end": "2420119"
  },
  {
    "text": "because we used that path to tell it to use another field for the context we",
    "start": "2420119",
    "end": "2425130"
  },
  {
    "text": "don't have to do anything different with how we specify this this field if we",
    "start": "2425130",
    "end": "2431250"
  },
  {
    "text": "weren't there'd be some extra syntax to it will add another book in a different",
    "start": "2431250",
    "end": "2440850"
  },
  {
    "text": "genre it sounds like a biography to me",
    "start": "2440850",
    "end": "2448580"
  },
  {
    "text": "so what do we go to actually use that it's gonna look pretty much the same",
    "start": "2452290",
    "end": "2457310"
  },
  {
    "text": "thing same as when we were using the completions suggestor before we're gonna give it a prefix they tell it we're",
    "start": "2457310",
    "end": "2465200"
  },
  {
    "text": "using the completions suggestor tell it which field to use but if we do that it",
    "start": "2465200",
    "end": "2472940"
  },
  {
    "text": "is unhappy if you are using contexts with a completion suggestor you absolutely have to specify the contexts",
    "start": "2472940",
    "end": "2480580"
  },
  {
    "text": "so if you want to be able to do it both ways you're gonna need two different fields but that's gonna take up a lot of",
    "start": "2480580",
    "end": "2485990"
  },
  {
    "text": "memory so just something to think about the way you specify those it's contexts",
    "start": "2485990",
    "end": "2491390"
  },
  {
    "text": "and this is just an object we called ours genre and then you specify which",
    "start": "2491390",
    "end": "2498560"
  },
  {
    "text": "values you want to allow so we had genres of development and biography so",
    "start": "2498560",
    "end": "2507320"
  },
  {
    "text": "you can see we're getting back to results because we allowed all of the",
    "start": "2507320",
    "end": "2512599"
  },
  {
    "text": "genres we have in there if I take one of these out and don't change anything else on the request then we only get one back",
    "start": "2512599",
    "end": "2521359"
  },
  {
    "text": "because we're only allowing the genre of development so if you think of this from a practical standpoint if you're",
    "start": "2521359",
    "end": "2526820"
  },
  {
    "text": "implementing a search that's a faceted search so you know we have books if we're building like a book store",
    "start": "2526820",
    "end": "2532089"
  },
  {
    "text": "typically you're gonna have a faceted search where users can select which genre they want so you could use",
    "start": "2532089",
    "end": "2538339"
  },
  {
    "text": "something like this to help make sure that your autocomplete is only showing them relevant results one other thing",
    "start": "2538339",
    "end": "2546050"
  },
  {
    "text": "I'm going to show with this and this is not necessarily unique to the context",
    "start": "2546050",
    "end": "2553190"
  },
  {
    "text": "suggestor you can do this with just the normal completion suggestor is we have a",
    "start": "2553190",
    "end": "2559760"
  },
  {
    "text": "bit more control over that score that comes back so in addition to just the",
    "start": "2559760",
    "end": "2568040"
  },
  {
    "text": "input I can specify a weight too so I'm going to specify a weight of two so",
    "start": "2568040",
    "end": "2573680"
  },
  {
    "text": "again it's that suggest filled with an array but this time it's an array of objects to give it a bit more information",
    "start": "2573680",
    "end": "2580150"
  },
  {
    "text": "I'm not going to give a score to our other book",
    "start": "2582420",
    "end": "2587520"
  },
  {
    "text": "so if we run this again and include both our genres you can see that when it",
    "start": "2600360",
    "end": "2607320"
  },
  {
    "text": "comes back the score here is 2 and it",
    "start": "2607320",
    "end": "2612810"
  },
  {
    "text": "looks like I had a typo somewhere",
    "start": "2612810",
    "end": "2616280"
  },
  {
    "text": "and the score for the failure that came from development was only one so in this use case since they're the same text not",
    "start": "2629950",
    "end": "2637180"
  },
  {
    "text": "a huge deal but if you think of maybe you want to push values from a certain genre up more because you're trying to",
    "start": "2637180",
    "end": "2643540"
  },
  {
    "text": "get rid of books if you're like making a bookstore just one way you control it if you don't want to have to read index",
    "start": "2643540",
    "end": "2650680"
  },
  {
    "text": "your entire documents every time you do that you can also specify it at query",
    "start": "2650680",
    "end": "2656890"
  },
  {
    "text": "time I'm blanking on the syntax of it",
    "start": "2656890",
    "end": "2665200"
  },
  {
    "text": "though so if you're interested in it there's a it's called boosting so you could look at the documentation and",
    "start": "2665200",
    "end": "2670510"
  },
  {
    "text": "basically you can influence that score without having to read without having to reindex your documents so just another",
    "start": "2670510",
    "end": "2676420"
  },
  {
    "text": "way you could do that okay so we're actually doing pretty well",
    "start": "2676420",
    "end": "2682750"
  },
  {
    "text": "on time questions about the context suggestor okay so I think we have lunch",
    "start": "2682750",
    "end": "2692800"
  },
  {
    "text": "after this so if people want to just be done early that's fine otherwise I have one related demo I can show you if",
    "start": "2692800",
    "end": "2699010"
  },
  {
    "text": "people are interested in that I'm getting some okay well look at that related demo so I'm",
    "start": "2699010",
    "end": "2707319"
  },
  {
    "text": "not going to type this all out this is an example that I took from a project I",
    "start": "2707319",
    "end": "2712569"
  },
  {
    "text": "was working on when we talked about the completion suggestor I mentioned that it only works on prefix that is not always",
    "start": "2712569",
    "end": "2720460"
  },
  {
    "text": "particularly useful because it requires users to type the right thing to get relevant results and if you're indexing",
    "start": "2720460",
    "end": "2727720"
  },
  {
    "text": "things with that maybe start with a word like uh they're not going to do that and then they're not going to get relevant results not great for users so this is a",
    "start": "2727720",
    "end": "2735099"
  },
  {
    "text": "bit a beast of an index setup so again we've got some custom analyzers set up",
    "start": "2735099",
    "end": "2741670"
  },
  {
    "text": "and there are quite a few in here so this keyword analyzer is not super relevant to what we're doing just",
    "start": "2741670",
    "end": "2746890"
  },
  {
    "text": "another example we're gonna use this edge and edge Engram analyzer which is",
    "start": "2746890",
    "end": "2754300"
  },
  {
    "text": "seal similar to the one we were using before so it's a tokenizer that's defined down here",
    "start": "2754300",
    "end": "2760119"
  },
  {
    "text": "it's an edge Engram which is a little bit different than the and gram 1 this is useful when you want",
    "start": "2760119",
    "end": "2766450"
  },
  {
    "text": "to create like more combinations of words so when you don't want to just",
    "start": "2766450",
    "end": "2771580"
  },
  {
    "text": "have like these tokens these tokens it's a bit more flexible and you tell it",
    "start": "2771580",
    "end": "2778090"
  },
  {
    "text": "which token characters to split on so it's splitting on letters so when we say",
    "start": "2778090",
    "end": "2783970"
  },
  {
    "text": "pass in letter here it's saying split on anything that's not a letter so the way it indexes the data is not quite the",
    "start": "2783970",
    "end": "2790630"
  },
  {
    "text": "same and I feel like that doesn't make sense based on a description so we can look at what that data actually looks like what that tokenizer is defined down",
    "start": "2790630",
    "end": "2799330"
  },
  {
    "text": "here and then there's an analyzer up here which is using that tokenizer one",
    "start": "2799330",
    "end": "2804970"
  },
  {
    "text": "other thing I think is neat about this demo to point out so our mappings look pretty similar",
    "start": "2804970",
    "end": "2810130"
  },
  {
    "text": "we've got a name that's a type text then we've got fields so we've got multiple fields key word string not super",
    "start": "2810130",
    "end": "2817000"
  },
  {
    "text": "relevant to us edge and Graham which is using text and that custom analyzer but",
    "start": "2817000",
    "end": "2822880"
  },
  {
    "text": "it also has this search analyzer so when elasticsearch indexes your",
    "start": "2822880",
    "end": "2828070"
  },
  {
    "text": "documents it analyzes it but when you're searching against a particular field it also analyzes the text that was passed",
    "start": "2828070",
    "end": "2834730"
  },
  {
    "text": "in now if a user is passing text in you probably don't want it to be run against",
    "start": "2834730",
    "end": "2841210"
  },
  {
    "text": "an edge and Graham analyzer because you're not going to get good results so you can specify a search analyzer that",
    "start": "2841210",
    "end": "2846940"
  },
  {
    "text": "says hey I want the text to actually look like this before it searches so this edge Ngram search analyzer is just",
    "start": "2846940",
    "end": "2854200"
  },
  {
    "text": "lower casing what they put in to make the the search case insensitive so we'll",
    "start": "2854200",
    "end": "2863770"
  },
  {
    "text": "create that we're gonna add a couple things with names",
    "start": "2863770",
    "end": "2869550"
  },
  {
    "text": "and this query is gonna look quite a bit different because it's not a suggests so we're gonna do a query that's of type",
    "start": "2876030",
    "end": "2882570"
  },
  {
    "text": "prefix and we're gonna use that field so",
    "start": "2882570",
    "end": "2888300"
  },
  {
    "text": "you can see I started typing in the word driven and with the completion suggestor we wouldn't have received anything",
    "start": "2888300",
    "end": "2894420"
  },
  {
    "text": "because it's not at the beginning but because we use that special type of analyzer we actually got things where",
    "start": "2894420",
    "end": "2901950"
  },
  {
    "text": "the word was at the end and in the middle so looking at what that text",
    "start": "2901950",
    "end": "2910170"
  },
  {
    "text": "actually got indexed like looks pretty similar to what we've seen before but",
    "start": "2910170",
    "end": "2916440"
  },
  {
    "text": "again because we use the different type of query we were able to get different results so kind of a whirlwind tour",
    "start": "2916440",
    "end": "2923310"
  },
  {
    "text": "through that but just one other way you can implement a type of autocomplete",
    "start": "2923310",
    "end": "2928880"
  },
  {
    "text": "questions on that",
    "start": "2928880",
    "end": "2932210"
  },
  {
    "text": "all right so any questions on anything at all we went over okay so either you",
    "start": "2939450",
    "end": "2950790"
  },
  {
    "start": "2942000",
    "end": "2942000"
  },
  {
    "text": "all are really comfortable with elasticsearch suggesters now or you have",
    "start": "2950790",
    "end": "2955799"
  },
  {
    "text": "no idea what I was just talking about so well hope it's the former but really any questions okay if not I will say I am",
    "start": "2955799",
    "end": "2965520"
  },
  {
    "text": "supposed to remind you to do speaker evaluations on your way out otherwise thank you for your time if you want to",
    "start": "2965520",
    "end": "2971730"
  },
  {
    "start": "2970000",
    "end": "2970000"
  },
  {
    "text": "get a hold of me after the conference if you think of questions my Twitter handles up there at ready Hazen that's",
    "start": "2971730",
    "end": "2978420"
  },
  {
    "text": "probably the best way to get a hold of me I'm not super active posting things on Twitter but I'm on there a lot otherwise I will be around the rest of",
    "start": "2978420",
    "end": "2985799"
  },
  {
    "text": "the conference for so Friel feel free to come ask me questions at any point about elasticsearch or any other development",
    "start": "2985799",
    "end": "2993299"
  },
  {
    "text": "topic otherwise thanks for your time and I hope you all have a enjoyable rest of your conference",
    "start": "2993299",
    "end": "3000460"
  }
]