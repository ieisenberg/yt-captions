[
  {
    "start": "0",
    "end": "108000"
  },
  {
    "text": "welcome to Big Data and machine learning magic with nodejs and Google Cloud",
    "start": "9610",
    "end": "16260"
  },
  {
    "text": "about us my name is Sarah Robinson I'm a developer advocate on the Google cloud platform team you can find me on twitter",
    "start": "16260",
    "end": "22560"
  },
  {
    "text": "@ s robb tweets i live in new york it's my first time in australia super excited to be here in addition to being a",
    "start": "22560",
    "end": "28560"
  },
  {
    "text": "developer advocate I'm also a Harry Potter advocate big fan of Harry Potter if you want to chat with me about after would love to I'm also a big fan of",
    "start": "28560",
    "end": "35910"
  },
  {
    "text": "Hamilton the musical I'm Bret McGowen I'm also a developer advocate on Google",
    "start": "35910",
    "end": "42150"
  },
  {
    "text": "cloud platform I'm alas a Harry Potter fan more of a Lord of the Rings fan I'm actually going",
    "start": "42150",
    "end": "47280"
  },
  {
    "text": "to New Zealand next week so hopefully I will check out the little Hobbit and tour and all those stuff should be fine",
    "start": "47280",
    "end": "52350"
  },
  {
    "text": "I love Hamilton but not as much as saira we sit next to each other in New York office so mostly I just listen to Sarah",
    "start": "52350",
    "end": "57750"
  },
  {
    "text": "talk about Hamilton all the time you can follow me on here on twitter at at brett mcg so as developer advocate",
    "start": "57750",
    "end": "63540"
  },
  {
    "text": "sir and i we work for google cloud in google cloud if you're not familiar it's public cloud from google we've got all the normal compute stuff like virtual",
    "start": "63540",
    "end": "70110"
  },
  {
    "text": "machines platform as-a-service but we really have a lot of interesting things around machine learning and big data so",
    "start": "70110",
    "end": "76350"
  },
  {
    "text": "as part of our role we'd love to hear what you guys are doing in whatever cloud you're running on Google or not",
    "start": "76350",
    "end": "81360"
  },
  {
    "text": "see what kind of projects you're working on and maybe how we can help we take that feedback back to our teams at",
    "start": "81360",
    "end": "86790"
  },
  {
    "text": "Google to make our stuff better and help you solve your problems so oh I should",
    "start": "86790",
    "end": "92040"
  },
  {
    "text": "say even though I live in New York City I'm from Texas",
    "start": "92040",
    "end": "96860"
  },
  {
    "text": "all right much better how can you tell if someone's from Texas they tell you",
    "start": "97160",
    "end": "102300"
  },
  {
    "text": "they will always tell you exactly so howdy welcome and let me turn it back over to Sarah so I wanna start out by talking",
    "start": "102300",
    "end": "110730"
  },
  {
    "start": "108000",
    "end": "351000"
  },
  {
    "text": "about at a high level what is machine learning so essentially machine learning is teaching computers to recognize patterns",
    "start": "110730",
    "end": "117090"
  },
  {
    "text": "in the same way that our brains do so it's really easy for a child to identify the difference between a cat or a dog",
    "start": "117090",
    "end": "123500"
  },
  {
    "text": "but it's much much more difficult to teach a computer to be able to do the same thing so idea is we write code that",
    "start": "123500",
    "end": "129690"
  },
  {
    "text": "will find these patterns for us and over time these models will improve as we give them more and more data through",
    "start": "129690",
    "end": "135750"
  },
  {
    "text": "more experience so here we have a diagram of a typical deep neural network",
    "start": "135750",
    "end": "140849"
  },
  {
    "text": "this particular neural network is classifying an image that's either an image of a cat or a dog we can think of",
    "start": "140849",
    "end": "147480"
  },
  {
    "text": "the input to this network as the all pixels in the image and then each layer in the network is looking for a",
    "start": "147480",
    "end": "153910"
  },
  {
    "text": "specific set of features in the image maybe it's the shape of the ears the eyes the nose and the output the final",
    "start": "153910",
    "end": "160240"
  },
  {
    "text": "label is gonna be a prediction whether it's a cat or a dog in this case the output is a dog but let's take a step",
    "start": "160240",
    "end": "168280"
  },
  {
    "text": "back for a moment and pretend we didn't have any neural networks and we were gonna try to do some human powered image",
    "start": "168280",
    "end": "173590"
  },
  {
    "text": "detection on our own so if we were to write an algorithm to identify pictures",
    "start": "173590",
    "end": "180130"
  },
  {
    "text": "that's either an apple or an orange how might we do this without machine learning so what are some of the things we might look for in our algorithm you",
    "start": "180130",
    "end": "186520"
  },
  {
    "text": "can shout it out color color is a good one and so we could look at the color and in this example we could say are the",
    "start": "186520",
    "end": "193750"
  },
  {
    "text": "majority the pixels in the image red if so it's an apple otherwise it's an orange so that would work really well",
    "start": "193750",
    "end": "199480"
  },
  {
    "text": "for these two images but what would happen if our images were grayscale then",
    "start": "199480",
    "end": "204940"
  },
  {
    "text": "we might have to look for a different type of feature what might we look for with these two images Sam if there's a",
    "start": "204940",
    "end": "210550"
  },
  {
    "text": "SEM or not we could look at the texture both good examples so if we if we looks for either of those then we'd be able",
    "start": "210550",
    "end": "216850"
  },
  {
    "text": "able to handle the problem of potentially black and white images but what if we got crazy and added a third",
    "start": "216850",
    "end": "224709"
  },
  {
    "text": "fruit to our equation if we added a mango we'd have to start all over again so you get the idea but all of these",
    "start": "224709",
    "end": "231520"
  },
  {
    "text": "images are pretty similar they're all circular they're all fruits so image classification should be much easier if",
    "start": "231520",
    "end": "238239"
  },
  {
    "text": "we have two images that look nothing alike so if we have for example a picture of a dog and a picture of a mop",
    "start": "238239",
    "end": "244989"
  },
  {
    "text": "should be really easy right the mop is not living or breathing has no eyes nose or ears should be pretty easy to",
    "start": "244989",
    "end": "252310"
  },
  {
    "text": "distinguish between these two things but it's actually not it's actually pretty",
    "start": "252310",
    "end": "258130"
  },
  {
    "text": "difficult so here we have four pictures of sheepdogs and four pictures of mops and",
    "start": "258130",
    "end": "265419"
  },
  {
    "text": "it's kind of hard even for the human eye to be able to tell the difference between these two things so the idea",
    "start": "265419",
    "end": "271360"
  },
  {
    "text": "here is that we don't want to write specific rules for each type of image we might encounter in our application because chances are we have to deal with",
    "start": "271360",
    "end": "278020"
  },
  {
    "text": "more than just animals and fruit images we might have photos of everything and",
    "start": "278020",
    "end": "283510"
  },
  {
    "text": "in addition to photos we might have other types of unstructured data that we're dealing with we might have video",
    "start": "283510",
    "end": "289600"
  },
  {
    "text": "audio and texts so we want to talk about today is how we can help you make sense",
    "start": "289600",
    "end": "295690"
  },
  {
    "text": "of this unstructured data through some machine learning products provided by Google cloud so on the left-hand side",
    "start": "295690",
    "end": "301240"
  },
  {
    "text": "here we have a few products to help you build and train your own custom machine learning models using your own data",
    "start": "301240",
    "end": "308169"
  },
  {
    "text": "the tensorflow is an open source framework that lets you do this and if you want a place to run your tensor flow",
    "start": "308169",
    "end": "314410"
  },
  {
    "text": "models run the training and inference we have a product called cloud machine learning engine which lets you run your",
    "start": "314410",
    "end": "319900"
  },
  {
    "text": "tensor flow models on managed Google infrastructure well we're gonna focus on today is the right-hand side which I",
    "start": "319900",
    "end": "327070"
  },
  {
    "text": "like to call friendly machine learning and essentially these give you access to pre trained machine learning models as",
    "start": "327070",
    "end": "332380"
  },
  {
    "text": "an easy-to-use REST API so Google's been solving machine learning problems for many many years and what we're doing",
    "start": "332380",
    "end": "338919"
  },
  {
    "text": "with these API is is we're exposing some of these models to developers and today we're gonna tell you specifically how",
    "start": "338919",
    "end": "345940"
  },
  {
    "text": "you can interact with these five api's using nodejs so I'm gonna hand it over",
    "start": "345940",
    "end": "352090"
  },
  {
    "start": "351000",
    "end": "388000"
  },
  {
    "text": "to Brett to tell us about the vision API all right thanks Sara so the vision API",
    "start": "352090",
    "end": "357849"
  },
  {
    "text": "is a machine learning trained API from Google we have a nice nodejs wrapper",
    "start": "357849",
    "end": "364210"
  },
  {
    "text": "called Google Cloud / vision so we've got NPM modules diffusing nodejs but we",
    "start": "364210",
    "end": "369520"
  },
  {
    "text": "also have these nice little client libraries for dotnet Python Ruby Java go a whole suite of",
    "start": "369520",
    "end": "375610"
  },
  {
    "text": "languages so at the end of the day it's just an HTTP REST API but if you want something that's a little more idiomatic",
    "start": "375610",
    "end": "381070"
  },
  {
    "text": "and works well with your workflow we have a bunch of client libraries for different languages to do things like",
    "start": "381070",
    "end": "386349"
  },
  {
    "text": "work with the vision API so let's talk a little bit about what it can do there's different kinds of detections that can",
    "start": "386349",
    "end": "392740"
  },
  {
    "start": "388000",
    "end": "515000"
  },
  {
    "text": "do so when you send it a photo it can figure out different things about it so the first thing it can do is label",
    "start": "392740",
    "end": "398530"
  },
  {
    "text": "detection so label this image tell me what is this a photo of so in this",
    "start": "398530",
    "end": "403539"
  },
  {
    "text": "example it would say maybe cheetah and it gives you some percentage of confidence like I'm 90 percent sure that",
    "start": "403539",
    "end": "409479"
  },
  {
    "text": "this is a is a cheetah you know maybe I'm 80% sure it's a mammal of some kind",
    "start": "409479",
    "end": "414909"
  },
  {
    "text": "it kind of gives you a range of things that can identify as well as a level of confidence about that the second thing",
    "start": "414909",
    "end": "421629"
  },
  {
    "text": "you can do is face detection now be aware this is not facial recognition all right this can't tell you who this person is and you can't even tell you",
    "start": "421629",
    "end": "428259"
  },
  {
    "text": "that this person in this photo is the same or different than another person in another photo literally all it is is seeing that there are faces and will",
    "start": "428259",
    "end": "435639"
  },
  {
    "text": "look a little bit more about that in a second OCR so you give it a photo and it can find the words and the text in there and",
    "start": "435639",
    "end": "441939"
  },
  {
    "text": "actually extract them out and give you information about that explicit content detection is pretty much what it sounds",
    "start": "441939",
    "end": "447849"
  },
  {
    "text": "like finding things that are violent or maybe adult-themed in your images this is actually",
    "start": "447849",
    "end": "453999"
  },
  {
    "text": "surprisingly or at least surprisingly to me a really really common thing that people do with the vision API is the",
    "start": "453999",
    "end": "459779"
  },
  {
    "text": "explicit content detection so if at any point in your application you maybe have users submitting images from the",
    "start": "459779",
    "end": "466089"
  },
  {
    "text": "internet so random internet users submitting photos what could possibly go wrong so there's a couple of ways you could",
    "start": "466089",
    "end": "472180"
  },
  {
    "text": "handle that traditionally right is you upload an image and you just immediately put it into some queue or some quarantine so that a human being looks",
    "start": "472180",
    "end": "478479"
  },
  {
    "text": "at it and says like alright this photo is good it's nothing too weird let's posted but then you don't get like real-time social interaction so a happy",
    "start": "478479",
    "end": "485649"
  },
  {
    "text": "medium can be to run your image against the explicit content detection and just come it comes back with a score and if",
    "start": "485649",
    "end": "491740"
  },
  {
    "text": "it's below a certain score just go ahead and post it live if it's above a port a certain score maybe block it or put it",
    "start": "491740",
    "end": "497710"
  },
  {
    "text": "into some queue for a human to review so you can get that kind of real-time social responsiveness in your",
    "start": "497710",
    "end": "503050"
  },
  {
    "text": "application landmark detection you give it a photo and it can tell you oh this is a famous landmark around the world I",
    "start": "503050",
    "end": "508389"
  },
  {
    "text": "know what this is and I know where it is I'm in logo detection also kind of what it sounds like if can identify famous",
    "start": "508389",
    "end": "513849"
  },
  {
    "text": "logos in in photos so what are some real-world examples of people who are using the cloud vision API so Disney",
    "start": "513849",
    "end": "521620"
  },
  {
    "start": "515000",
    "end": "606000"
  },
  {
    "text": "came out with this movie called Pete's dragon and they wanted to promote it so they created this game so the name of the dragon in the movie",
    "start": "521620",
    "end": "527470"
  },
  {
    "text": "is Elliott and the way the game works is a scavenger hunt so it gives you some clues so it would say Oh Elliott the",
    "start": "527470",
    "end": "533860"
  },
  {
    "text": "dragon he's hiding behind the couch or he's next to the lamp so go find the",
    "start": "533860",
    "end": "539380"
  },
  {
    "text": "picture of the lamp or go find a picture of a couch and you can reveal Elliott the dragon so you would take your phone",
    "start": "539380",
    "end": "544990"
  },
  {
    "text": "you'd go to the couch you go to the lamp you take a photo it would run it through the vision API and say yes this is a",
    "start": "544990",
    "end": "550839"
  },
  {
    "text": "picture of a lamp and they would overlay the dragon in your photo so you sort of you find Elliott the dragon as part of",
    "start": "550839",
    "end": "556990"
  },
  {
    "text": "the experience so very fun application using the cloud vision API to see if you actually were able to define one of",
    "start": "556990",
    "end": "564850"
  },
  {
    "text": "these clues and show you the dragon realtor.com so these this is a company",
    "start": "564850",
    "end": "570070"
  },
  {
    "text": "that does houses for buying and selling of houses listings so say you're walking",
    "start": "570070",
    "end": "576070"
  },
  {
    "text": "by or driving by a house that you're interested in so there's a few things you can do you know you can like write down the URL that's on the sign",
    "start": "576070",
    "end": "582790"
  },
  {
    "text": "you can like write down the name of the agent you can write down the address or using the realtor app you can actually",
    "start": "582790",
    "end": "588250"
  },
  {
    "text": "take a photo of the for sale sign it uses the OCR the text extraction it actually reads the for sale sign that",
    "start": "588250",
    "end": "594490"
  },
  {
    "text": "you took a photo of searches the realtor database and then returns you the listing information so much much easier",
    "start": "594490",
    "end": "599770"
  },
  {
    "text": "than like trying to scan a QR code or actually write things down so these are a couple of real-world applications of",
    "start": "599770",
    "end": "604990"
  },
  {
    "text": "the cloud vision API so let's talk a little bit more about face detection not facial recognition face detection so it",
    "start": "604990",
    "end": "612160"
  },
  {
    "start": "606000",
    "end": "695000"
  },
  {
    "text": "has identified three photos here there's actually a photo of Sarah I myself and another colleague we were in in Petra in",
    "start": "612160",
    "end": "619360"
  },
  {
    "text": "Jordan last year just kind of a fun little side break during a conference and we were taking this like",
    "start": "619360",
    "end": "625660"
  },
  {
    "text": "three-person selfie to be ridiculous and it has correctly identified that there are three faces I don't think it was",
    "start": "625660",
    "end": "631990"
  },
  {
    "text": "recognizing the camel faces yet but maybe someday and it tells you some information about it so first of all it",
    "start": "631990",
    "end": "637839"
  },
  {
    "text": "tells you where there are faces so a bounding box give you some coordinates in the image but then also let's pick up",
    "start": "637839",
    "end": "644380"
  },
  {
    "text": "let's pick a face I'll pick a totally random face from someone in this image maybe I don't know Sarah and see some",
    "start": "644380",
    "end": "651279"
  },
  {
    "text": "information about her so it says head where likelihood like is she wearing a hat or head wear of some",
    "start": "651279",
    "end": "656620"
  },
  {
    "text": "kind very unlikely that's cuz she's not so I wearing one and our colleague Robert is wearing one so that will return likely",
    "start": "656620",
    "end": "663430"
  },
  {
    "text": "that we're wearing head where joy likelihood very likely it's vacation there are camels you can pet why not",
    "start": "663430",
    "end": "669250"
  },
  {
    "text": "very very likely to have joy there's four emotions it wouldn't attacked sorrow surprise anger and joy so you can",
    "start": "669250",
    "end": "677830"
  },
  {
    "text": "kind of actually do sentiment analysis right like if you have a photo of people interacting with your product or interacting with your service you can",
    "start": "677830",
    "end": "683650"
  },
  {
    "text": "programmatically see people are really mad when they use your site or they're really happy hopefully but also you can",
    "start": "683650",
    "end": "690550"
  },
  {
    "text": "identify different features of the face so where are the eyes where's the nose chin different things like that so",
    "start": "690550",
    "end": "696430"
  },
  {
    "start": "695000",
    "end": "780000"
  },
  {
    "text": "landmark detection you give it a photo of a famous landmark and it tells you what it is right so here's a photo of",
    "start": "696430",
    "end": "702340"
  },
  {
    "text": "the Eiffel Tower you run into the cloud vision API and it says I felt ow no it says Paris Hotel and Casino in Las",
    "start": "702340",
    "end": "708820"
  },
  {
    "text": "Vegas it's actually not the Eiffel Tower and the cloud vision API was not fooled",
    "start": "708820",
    "end": "713860"
  },
  {
    "text": "it was actually able to detect this is not the Eiffel Tower so here's some of the JSON is returned again it gets a",
    "start": "713860",
    "end": "720820"
  },
  {
    "text": "score eighty so it's like eighty percent confident that it's the Paris Hotel and Casino in Las Vegas it also has like",
    "start": "720820",
    "end": "726850"
  },
  {
    "text": "latitude and longitude like where in the world literally is this thing and also the first entry in the JSON response is",
    "start": "726850",
    "end": "733090"
  },
  {
    "text": "called the mid-19th graph API so as Google has been cataloging the world's",
    "start": "733090",
    "end": "739510"
  },
  {
    "text": "information for search over the past many years you know it's it's valuable to know that the the text string Eiffel",
    "start": "739510",
    "end": "746230"
  },
  {
    "text": "Tower is not literally just the letters e iff e l right like Eiffel Tower is the thing it's an entity it's a landmark",
    "start": "746230",
    "end": "752380"
  },
  {
    "text": "it's a tourist attraction it's a public building it exists in Paris like what is",
    "start": "752380",
    "end": "757720"
  },
  {
    "text": "the Eiffel Tower right so this is a key into the knowledge graph API to actually get data back from Google like what do",
    "start": "757720",
    "end": "763930"
  },
  {
    "text": "we know about this entity so if I were to feed at this M ID it would actually tell me all that information and often a",
    "start": "763930",
    "end": "770560"
  },
  {
    "text": "link to like a Wikipedia page to learn more if I want to know more about like what is this entity so if it does this",
    "start": "770560",
    "end": "776140"
  },
  {
    "text": "it does this for a lot of things in the vision API a few more things besides",
    "start": "776140",
    "end": "782260"
  },
  {
    "start": "780000",
    "end": "829000"
  },
  {
    "text": "just types of detection that it can do so it is crop hints so it can give you a suggested bounding box of like where is",
    "start": "782260",
    "end": "788650"
  },
  {
    "text": "the most interesting feature of this it's sort of within this photo like where would you crop it to sort of zoom",
    "start": "788650",
    "end": "793690"
  },
  {
    "text": "in web annotations which I'll talk about in more details in a second it basically",
    "start": "793690",
    "end": "798940"
  },
  {
    "text": "because we've catalogued a lot of images on the Internet we can sort of cross-reference the image that you have analyzed with our internet",
    "start": "798940",
    "end": "806160"
  },
  {
    "text": "with our internet catalog of images to get more information and then text",
    "start": "806160",
    "end": "811420"
  },
  {
    "text": "annotations so this is basically if you are so in the example I showed is taking a picture of a street sign it's just a",
    "start": "811420",
    "end": "817330"
  },
  {
    "text": "few words like no parking here but what if you were to take a picture of like a menu or a page from a book something is",
    "start": "817330",
    "end": "823900"
  },
  {
    "text": "like a lot of text so this basically lets you do bulk text reading from just a photograph so web annotations well",
    "start": "823900",
    "end": "832780"
  },
  {
    "start": "829000",
    "end": "969000"
  },
  {
    "text": "like I said cross-reference your image with images from the internet so this is a a photo of a car and what does web",
    "start": "832780",
    "end": "839620"
  },
  {
    "text": "annotations come back the first thing it comes back with is this the make in the model so Ford Anglia and again here that",
    "start": "839620",
    "end": "845110"
  },
  {
    "text": "mi di talked about so if you wanted to know what the hell is a Ford Anglia you can actually get more information from",
    "start": "845110",
    "end": "850120"
  },
  {
    "text": "the knowledge graph API but it's a little bit more than just a Ford Anglia you'll notice that it seems like a",
    "start": "850120",
    "end": "856450"
  },
  {
    "text": "little bit more going on there's like a portrait in the background there's some like strings of holding it up so it turns out it actually knows that this",
    "start": "856450",
    "end": "863110"
  },
  {
    "text": "car is on display the art Science Museum in Singapore so that's already a little",
    "start": "863110",
    "end": "868600"
  },
  {
    "text": "bit more information than just we could get like literally from the pixels and this image and not only is it on display",
    "start": "868600",
    "end": "875590"
  },
  {
    "text": "in the art Science Museum in Singapore it specifically is in the Harry Potter exhibit in the art Science Museum in",
    "start": "875590",
    "end": "882580"
  },
  {
    "text": "Singapore and so actually references to Harry Potter the literary series so if you've seen the movie you know that they",
    "start": "882580",
    "end": "888370"
  },
  {
    "text": "basically steal this car to go fly to Hogwarts because they miss the train and you could actually well it won't tell",
    "start": "888370",
    "end": "895480"
  },
  {
    "text": "you that much but but you could you can see that it's from the literary series so literally more than just knowing that",
    "start": "895480",
    "end": "901390"
  },
  {
    "text": "it is a car but like what car and where because it can cross-reference this image with other images of things that",
    "start": "901390",
    "end": "907030"
  },
  {
    "text": "it knows about on the on the Internet and if you want to know where did you where did we find similar images on the",
    "start": "907030",
    "end": "914470"
  },
  {
    "text": "Internet to get this cross reference information returns that data as well so if it found your exact image somewhere",
    "start": "914470",
    "end": "920560"
  },
  {
    "text": "on the internet it will return this full matching image and if it found a rough approximation of your image you'll get",
    "start": "920560",
    "end": "927010"
  },
  {
    "text": "those URLs as well both the URL of the actual like jpg or whatever or the page",
    "start": "927010",
    "end": "932800"
  },
  {
    "text": "on which that image was found so kind of a sneaky usage of this API is you know",
    "start": "932800",
    "end": "939850"
  },
  {
    "text": "we've all been to these like forums or whatever you post an image and you check this box is I certify that I have the",
    "start": "939850",
    "end": "944920"
  },
  {
    "text": "rights to this image this is mine and I'm gonna upload it right and everyone just checks sure even if it's not your",
    "start": "944920",
    "end": "950170"
  },
  {
    "text": "image what you actually could cause reference that image using in cloud vision API and say not so fast like",
    "start": "950170",
    "end": "955630"
  },
  {
    "text": "clearly you just search the Google Image Search to find a picture of this because we found it on all these other pages right if you wanted to see is the",
    "start": "955630",
    "end": "963160"
  },
  {
    "text": "content that people are uploading does it exist elsewhere is this really their image on this might be a way to do that",
    "start": "963160",
    "end": "969210"
  },
  {
    "start": "969000",
    "end": "1165000"
  },
  {
    "text": "all right so that's conceptually what is a cloud vision API let's see a little bit of a code in the live demo so first",
    "start": "969210",
    "end": "976000"
  },
  {
    "text": "here's an architecture diagram of the cloud vision API in in action so I'm",
    "start": "976000",
    "end": "982180"
  },
  {
    "text": "gonna use something called cloud functions from Google cloud platform so cloud functions are these like serverless little functions basically",
    "start": "982180",
    "end": "988300"
  },
  {
    "text": "they'll no js' JavaScript functions that run automatically serverless ly you don't to manage anything you just give",
    "start": "988300",
    "end": "994150"
  },
  {
    "text": "it a code and these these functions run in response to events that happen in the cloud so in this case it will respond to",
    "start": "994150",
    "end": "1000480"
  },
  {
    "text": "a file change event in cloud storage which is basically how you save binaries",
    "start": "1000480",
    "end": "1005490"
  },
  {
    "text": "data or blog files blob storage in Google Cloud so will save a picture of this adorable koala will automatically",
    "start": "1005490",
    "end": "1011850"
  },
  {
    "text": "trigger a call to a cloud function which will call it to the cloud vision API and that we just talked about",
    "start": "1011850",
    "end": "1016920"
  },
  {
    "text": "get back all that analysis data save it as a JSON as a JSON blob and then put it",
    "start": "1016920",
    "end": "1023700"
  },
  {
    "text": "in say like a gist into github now normally what you might do in Annacone",
    "start": "1023700",
    "end": "1028770"
  },
  {
    "text": "on sort of list world is if you want to do some additional processing like maybe create a thumbnail of this that would just be the next step in the code but in",
    "start": "1028770",
    "end": "1035339"
  },
  {
    "text": "sort of a functions of the server list serverless functions as a service comma service",
    "start": "1035339",
    "end": "1040949"
  },
  {
    "text": "comma micro-services comma buzz word world we actually could have another",
    "start": "1040950",
    "end": "1046290"
  },
  {
    "text": "service that does that separately right so we just have another cloud function totally independent from the first one",
    "start": "1046290",
    "end": "1051360"
  },
  {
    "text": "because it's not a chain it doesn't need to know anything about the vision API and it separately of the same trigger",
    "start": "1051360",
    "end": "1056730"
  },
  {
    "text": "will run do a resize and maybe make a tiny thumbnail or one thing that you see a lot of is you basically pre render",
    "start": "1056730",
    "end": "1063970"
  },
  {
    "text": "images for different media formats so I have a big image and I want to scale a tiny one down for a thumbnail maybe a",
    "start": "1063970",
    "end": "1070300"
  },
  {
    "text": "smaller one for a phone version a medium one for a tablet or desktop and so forth",
    "start": "1070300",
    "end": "1077190"
  },
  {
    "text": "whoops so what does that code look like so here's my function called analyze",
    "start": "1077190",
    "end": "1083050"
  },
  {
    "text": "image and I want like dig super deep into it but just at a high level so a cloud function has an event parameter",
    "start": "1083050",
    "end": "1089440"
  },
  {
    "text": "and the event this basically generally looks the same for any kind of cloud event but within it is something called",
    "start": "1089440",
    "end": "1096490"
  },
  {
    "text": "event data and that has property specific to this type of event so in this case is a file change event in",
    "start": "1096490",
    "end": "1102610"
  },
  {
    "text": "Google Cloud storage so we're going to create a reference to the image using this data media link and then we're",
    "start": "1102610",
    "end": "1109570"
  },
  {
    "text": "gonna call the cloud vision API that we just talked about so you'll notice that this is actually all the code there's no",
    "start": "1109570",
    "end": "1115450"
  },
  {
    "text": "service accounts there's no API keys there's no OAuth that is because by default most of the code that you run",
    "start": "1115450",
    "end": "1121600"
  },
  {
    "text": "and you go in Google cloud platform runs Auto authenticated to make other API calls within Google Cloud so this is",
    "start": "1121600",
    "end": "1128500"
  },
  {
    "text": "really nice because if you're moving some code from say development environment to staging environment to production environment you don't have to",
    "start": "1128500",
    "end": "1134710"
  },
  {
    "text": "actually manage and ship a lot of these API keys and tokens you will automatically be authenticated to the",
    "start": "1134710",
    "end": "1140680"
  },
  {
    "text": "project in the environment that you're running in so it makes that a lot easier I mean you can supply via special",
    "start": "1140680",
    "end": "1147070"
  },
  {
    "text": "credentials you can but by default it's Auto authenticated to call Google Cloud api's so run some analysis get a",
    "start": "1147070",
    "end": "1154600"
  },
  {
    "text": "response back write it to the github github gist a little bit too much code to put on the slide so you can use your",
    "start": "1154600",
    "end": "1160810"
  },
  {
    "text": "imagination actually we have it posted on github there's a link at the end so",
    "start": "1160810",
    "end": "1166060"
  },
  {
    "start": "1165000",
    "end": "1401000"
  },
  {
    "text": "let's actually see this in action all right so this is our Google Cloud Storage file listing it there are no",
    "start": "1166060",
    "end": "1174220"
  },
  {
    "text": "objects in this bucket because there's nothing so let's upload a picture of an adorable koala but it's actually gonna",
    "start": "1174220",
    "end": "1180580"
  },
  {
    "text": "be a specific photo I was stalking Sarah's Instagram earlier and she went",
    "start": "1180580",
    "end": "1186820"
  },
  {
    "text": "to Lone Pine Koala Sanctuary in Brisbane and got this so I may have may have",
    "start": "1186820",
    "end": "1193370"
  },
  {
    "text": "stolen this photo off her Instagram so sorry Sarah when when you say hey go ahead and set up your dimmer on my",
    "start": "1193370",
    "end": "1198650"
  },
  {
    "text": "laptop be careful because who knows what other things I will do so we're gonna",
    "start": "1198650",
    "end": "1204680"
  },
  {
    "text": "upload this koala and it's going to automatically trigger those two cloud functions want to do the resize and then",
    "start": "1204680",
    "end": "1209690"
  },
  {
    "text": "one to do the cloud vision API analysis and so if we tab over here we can see",
    "start": "1209690",
    "end": "1216010"
  },
  {
    "text": "what is it 4:40 all right here we go so probably",
    "start": "1216010",
    "end": "1221330"
  },
  {
    "text": "this line function execution started downloaded file so you can see extracted",
    "start": "1221330",
    "end": "1226760"
  },
  {
    "text": "labels mammal fauna fauna marsupial koala object object that is my favorite kind of animal and then also where is",
    "start": "1226760",
    "end": "1235490"
  },
  {
    "text": "thumb yog created koala thumb so you can see our two cloud functions running so that's beeps let's go back and see did",
    "start": "1235490",
    "end": "1244640"
  },
  {
    "text": "we create a thumbnail maybe uh-huh yeah so there's a super tiny version that it",
    "start": "1244640",
    "end": "1250790"
  },
  {
    "text": "created and then we should have a gist github gist link let me grab this oh is",
    "start": "1250790",
    "end": "1258710"
  },
  {
    "text": "that the whole thing I don't that's yes got it you can tell this is live because",
    "start": "1258710",
    "end": "1266240"
  },
  {
    "text": "it's not working yeah maybe hold on I just have to like it copied the whole log line that's fine it's always very",
    "start": "1266240",
    "end": "1274490"
  },
  {
    "text": "exciting to watch someone edit text boom alright so here is the gist they created",
    "start": "1274490",
    "end": "1280250"
  },
  {
    "text": "saved it to github with that same mammal fauna fauna marsupial koala Wildlife",
    "start": "1280250",
    "end": "1285860"
  },
  {
    "text": "data so super cool so that is the cloud vision API so I'll hand it back to Sarah",
    "start": "1285860",
    "end": "1291170"
  },
  {
    "text": "to talk about whoops just kidding before you put this in your application you",
    "start": "1291170",
    "end": "1296450"
  },
  {
    "text": "actually can play with the cloud vision API just in your browser right just on your desktop upload an image drag and",
    "start": "1296450",
    "end": "1301760"
  },
  {
    "text": "drop see what the vision API has to say so if you have you're thinking about maybe using the cloud vision API but you",
    "start": "1301760",
    "end": "1306920"
  },
  {
    "text": "don't actually like write a prototype app you can actually literally just in from your browser drag and drop some images it'll give you the JSON response",
    "start": "1306920",
    "end": "1314030"
  },
  {
    "text": "and it'll visually give you response to the API what kind of analysis it does so you can see like if this is a good fit",
    "start": "1314030",
    "end": "1319820"
  },
  {
    "text": "or not for whatever use case maybe you're thinking of oh and by the way if you were wandering",
    "start": "1319820",
    "end": "1325639"
  },
  {
    "text": "going back to that dog and mop example how good is the cloud vision API at telling the difference between a dog and",
    "start": "1325639",
    "end": "1331210"
  },
  {
    "text": "a mop or a broom so we fed all eight of these to the cloud vision API for the",
    "start": "1331210",
    "end": "1337549"
  },
  {
    "text": "dog 99% confident that it's a dog and in fact even the Komondor is 77% act",
    "start": "1337549",
    "end": "1344539"
  },
  {
    "text": "confident about the specific breed I don't know what a dog like mammal is but",
    "start": "1344539",
    "end": "1350419"
  },
  {
    "text": "it's 76% confident but I remember learning about that one in school yeah",
    "start": "1350419",
    "end": "1355519"
  },
  {
    "text": "maybe a dingo was a doglike mammal as well we'll say we could if we have time afterwards we'll try it so we've got a",
    "start": "1355519",
    "end": "1362240"
  },
  {
    "text": "dog right got this right we said if it came back with broom or mop like we'll give it credit for so we ran it on all",
    "start": "1362240",
    "end": "1369169"
  },
  {
    "text": "eight and here's how it did from the dogs three out of four I got dog or got",
    "start": "1369169",
    "end": "1374240"
  },
  {
    "text": "to breed specifically this one it got fur which even looking at it from my own",
    "start": "1374240",
    "end": "1380240"
  },
  {
    "text": "eyes like what in the world is that thing oh great in a card we'll give her credit for that one as far as the the mops and",
    "start": "1380240",
    "end": "1387110"
  },
  {
    "text": "the brooms at the bottom one of them done when it got textile rather than identifying it so I don't know if we can",
    "start": "1387110",
    "end": "1392480"
  },
  {
    "text": "be that generous with our grading but still seven out of eight for a test that is intentionally designed to be misleading is I think pretty decent so",
    "start": "1392480",
    "end": "1401740"
  },
  {
    "start": "1401000",
    "end": "1690000"
  },
  {
    "text": "now I'll hand it back over to Sarah to talk about the natural language API thanks Brett",
    "start": "1401740",
    "end": "1407360"
  },
  {
    "text": "so now we're gonna switch gears and talk about text analysis with the natural language API we also have a handy google",
    "start": "1407360",
    "end": "1414259"
  },
  {
    "text": "cloud node module and if you want to use the not the National image API in your node application just NPM install at",
    "start": "1414259",
    "end": "1420409"
  },
  {
    "text": "Google cloud slash language and what the national language API allows you to do is to get a better understanding of your",
    "start": "1420409",
    "end": "1426500"
  },
  {
    "text": "text so you can do you can extract entities sentiment and syntax from text that you pass to the natural language",
    "start": "1426500",
    "end": "1432470"
  },
  {
    "text": "API I'm gonna dive into each of these methods and then we'll see a live demo",
    "start": "1432470",
    "end": "1438340"
  },
  {
    "text": "so first I'll talk about the entity extraction endpoint I'm big Harry Potter fan as I mentioned before so I just took",
    "start": "1438340",
    "end": "1444320"
  },
  {
    "text": "this sentence from Wikipedia about JK Rowling and wanted to see what the entity analysis endpoint would return so",
    "start": "1444320",
    "end": "1451490"
  },
  {
    "text": "I passed it to the API and returned these five entities and we can look more and see what types of JSON responses we",
    "start": "1451490",
    "end": "1458640"
  },
  {
    "text": "got back for each of these so what's interesting here is that the first three entities are actually all pointing to",
    "start": "1458640",
    "end": "1464760"
  },
  {
    "text": "the same thing they're just different ways of referring to JK Rowling Robert Galbraith has a pen name shoes for a",
    "start": "1464760",
    "end": "1470880"
  },
  {
    "text": "different book series but I won't get into details on that so it was able to API was able to normalize these identify",
    "start": "1470880",
    "end": "1477600"
  },
  {
    "text": "that they're all referring to the same reference so in the JSON we get back the name of the entity the type which is",
    "start": "1477600",
    "end": "1483780"
  },
  {
    "text": "person and then we get some additional metadata so we get the mi dewitt brett spoke about before which was an ID that",
    "start": "1483780",
    "end": "1490320"
  },
  {
    "text": "maps to JK Rowling in Google's knowledge graph and then we get the Wikipedia URL",
    "start": "1490320",
    "end": "1495360"
  },
  {
    "text": "for the Wikipedia page about her so these all points the same one for",
    "start": "1495360",
    "end": "1500370"
  },
  {
    "text": "British we get that it's a location we get the Wikipedia URL for the United Kingdom page so if this had instead said",
    "start": "1500370",
    "end": "1506520"
  },
  {
    "text": "United Kingdom born novelists it would have pointed to the same entity and then",
    "start": "1506520",
    "end": "1513000"
  },
  {
    "text": "we get a similar response for Harry Potter and if you have entities in your texts that don't map to Wikipedia page",
    "start": "1513000",
    "end": "1519630"
  },
  {
    "text": "you still get an entity response back and it just has an empty metadata object so if it had my name in here Sarah",
    "start": "1519630",
    "end": "1526230"
  },
  {
    "text": "Robinson it would find it as an entity it just wouldn't have a Wikipedia page so I don't have one yet maybe one day so",
    "start": "1526230",
    "end": "1535440"
  },
  {
    "text": "that's our entity analysis the next thing you can do with the natural language API is analyze sentiment from",
    "start": "1535440",
    "end": "1540539"
  },
  {
    "text": "your text so if we had this which is what you might see as a restaurant review the food was terrible I would",
    "start": "1540539",
    "end": "1547380"
  },
  {
    "text": "definitely not recommend this restaurant so if you worked at this restaurant chances are you probably want to flag",
    "start": "1547380",
    "end": "1552659"
  },
  {
    "text": "this review and maybe follow up with a customer but you probably don't want to read all the reviews maybe you only want",
    "start": "1552659",
    "end": "1558360"
  },
  {
    "text": "to find the most positive and the most negative ones and then take some sort of action on those follow up about the",
    "start": "1558360",
    "end": "1564240"
  },
  {
    "text": "experience so what you can do with the sentiment analysis endpoint is you get",
    "start": "1564240",
    "end": "1569460"
  },
  {
    "text": "two values back you get score which will tell you how positive or negative is this text ranging from negative 1 to 1",
    "start": "1569460",
    "end": "1575309"
  },
  {
    "text": "so for this we get negative 0.9 it's almost fully negative and then we also get magnitude which tells us regardless",
    "start": "1575309",
    "end": "1582000"
  },
  {
    "text": "of being positive or negative how strong is the sentiment in this text and this is going to be arranged from 0 to",
    "start": "1582000",
    "end": "1587549"
  },
  {
    "text": "infinity normalized based on the link of the text so in this example this text is relatively short it's just a sentence",
    "start": "1587549",
    "end": "1593460"
  },
  {
    "text": "so we get 0.9 relatively small number so that's sentiment analysis and the next",
    "start": "1593460",
    "end": "1600900"
  },
  {
    "text": "thing you can do with the natural image API is get a bit more into the linguistic details of the text so if we",
    "start": "1600900",
    "end": "1606930"
  },
  {
    "text": "take this sentence as an example the natural language API helps us understand text we get a couple of things back and",
    "start": "1606930",
    "end": "1612450"
  },
  {
    "text": "this visualization just shows us the JSON we get back what it looks like so",
    "start": "1612450",
    "end": "1617550"
  },
  {
    "text": "the first thing we get back is a dependency parse tree which basically tells us how the words in a sentence",
    "start": "1617550",
    "end": "1623340"
  },
  {
    "text": "relate to each other which words depend on other words and JSON will give you details on how each word relates to",
    "start": "1623340",
    "end": "1629850"
  },
  {
    "text": "other words in a sentence then we get the parts label which is the role of each word in a sentence so helps is the",
    "start": "1629850",
    "end": "1636990"
  },
  {
    "text": "root verb api's nominal subjects the period at the end is punctuation details",
    "start": "1636990",
    "end": "1642660"
  },
  {
    "text": "on what each word is doing in the sentence then we get part of speech which is is it a noun a verb pronoun or",
    "start": "1642660",
    "end": "1649890"
  },
  {
    "text": "adjective we also get dilemma which is the canonical form of the word so here",
    "start": "1649890",
    "end": "1656340"
  },
  {
    "text": "we just have one lemma for helps we get help and this is useful if you're counting how many times a particular",
    "start": "1656340",
    "end": "1662220"
  },
  {
    "text": "word is used to describe something in your application you probably don't want to count helps and help as two separate",
    "start": "1662220",
    "end": "1667740"
  },
  {
    "text": "things you probably just want to count them as as one thing and you can use the lemma of the canonical form to do that so like if this head and said set",
    "start": "1667740",
    "end": "1674520"
  },
  {
    "text": "understands we would also get a lemma back for that as understand and then",
    "start": "1674520",
    "end": "1679590"
  },
  {
    "text": "finally we get additional morphology details for each token in the sentence and this is gonna differ based on which",
    "start": "1679590",
    "end": "1685770"
  },
  {
    "text": "language your text is in that you send to the API a few weeks ago we announced",
    "start": "1685770",
    "end": "1692190"
  },
  {
    "start": "1690000",
    "end": "1789000"
  },
  {
    "text": "some new features from the natural language API so when it first launched it supported English Spanish and",
    "start": "1692190",
    "end": "1697410"
  },
  {
    "text": "Japanese and we now support a couple more languages and another thing we",
    "start": "1697410",
    "end": "1703350"
  },
  {
    "text": "added was an entity based sentiment so instead of returning just one sentiment value for your entire document it can",
    "start": "1703350",
    "end": "1710460"
  },
  {
    "text": "now tell you the sentiment around specific entities I'll show you that in a moment and then we're continually",
    "start": "1710460",
    "end": "1716550"
  },
  {
    "text": "improving the models behind the sentiment and entity analysis and the API and so I'm gonna go to brief demo",
    "start": "1716550",
    "end": "1723780"
  },
  {
    "text": "if I look at see the natural language api product page you can actually try it",
    "start": "1723780",
    "end": "1731010"
  },
  {
    "text": "out in the browser and generate a visualization like we saw before so what I just want to show here is the entity",
    "start": "1731010",
    "end": "1736410"
  },
  {
    "text": "based sentiment so if I am writing a restaurant review and I say I likes the",
    "start": "1736410",
    "end": "1743340"
  },
  {
    "text": "sushi but the service was terrible we're gonna see what the natural image",
    "start": "1743340",
    "end": "1749130"
  },
  {
    "text": "API has to say about that so we can see here that we get sentiment for each entity so here the entire document",
    "start": "1749130",
    "end": "1755640"
  },
  {
    "text": "sentiment probably wouldn't be as useful to us but here we can see that sushi returned a score of 0.9 on a range of",
    "start": "1755640",
    "end": "1763290"
  },
  {
    "text": "negative 1 to 1 and service returned to score of negative 0.9 so super useful",
    "start": "1763290",
    "end": "1768690"
  },
  {
    "text": "granular information there we also get the full document sentiment again in this case the entity based sentiment is",
    "start": "1768690",
    "end": "1775110"
  },
  {
    "text": "much more useful and we get that visualization which I showed you in the",
    "start": "1775110",
    "end": "1780360"
  },
  {
    "text": "previous slide so we'll share the link to this page at the end you can generate your own visualizations on texts that",
    "start": "1780360",
    "end": "1786360"
  },
  {
    "text": "you pass the API I wanted to talk about a company that's using the natural",
    "start": "1786360",
    "end": "1792510"
  },
  {
    "start": "1789000",
    "end": "1873000"
  },
  {
    "text": "language API in production this company is called whoo check and they are a customer feedback platform so what they",
    "start": "1792510",
    "end": "1799620"
  },
  {
    "text": "allow their customers to do is gather feedback as their customers users are moving through different pages in their",
    "start": "1799620",
    "end": "1805140"
  },
  {
    "text": "application and Moo tricks job is to help their customers make sense of this feedback so if you've ever seen a form",
    "start": "1805140",
    "end": "1811350"
  },
  {
    "text": "like the one on the top right here where you're on a website and it says on a scale of 0 to 10 how was your experience",
    "start": "1811350",
    "end": "1816360"
  },
  {
    "text": "on a specific page so you give it a numbered score and then it might ask you",
    "start": "1816360",
    "end": "1822000"
  },
  {
    "text": "for open-ended feedback so it's pretty easy for bootrec to make sense of this numbered score obviously from 0 to 10",
    "start": "1822000",
    "end": "1827430"
  },
  {
    "text": "but what's much more difficult is to make sense of this open-ended feedback that you're getting and they're actually",
    "start": "1827430",
    "end": "1832890"
  },
  {
    "text": "using each of the natural language API methods to make sense of this feedback and so they use sentiment analysis to",
    "start": "1832890",
    "end": "1839130"
  },
  {
    "text": "just gauge did the numbered score they gave line up with their feedback so maybe they gave it 10 but then they were",
    "start": "1839130",
    "end": "1844530"
  },
  {
    "text": "actually complaining about something so that they can normalize that and then they're using entity and syntax analysis",
    "start": "1844530",
    "end": "1850530"
  },
  {
    "text": "to extract on the topics of each piece of feedback and see how people are talking about that specific thing so",
    "start": "1850530",
    "end": "1856890"
  },
  {
    "text": "maybe they have a high priority customer who is angry about usability instead of having",
    "start": "1856890",
    "end": "1862350"
  },
  {
    "text": "to read the entire piece of feedback they can then route that in near-real-time to the right person to address it so",
    "start": "1862350",
    "end": "1870720"
  },
  {
    "text": "just an example of company using this in the real world next I wanted to show a",
    "start": "1870720",
    "end": "1876750"
  },
  {
    "start": "1873000",
    "end": "2173000"
  },
  {
    "text": "demo highlighting the syntax analysis feature of the API and the way that done",
    "start": "1876750",
    "end": "1881910"
  },
  {
    "text": "that works as I wrote a node script that calls the Twitter streaming API and what this does is it lets you stream tweets",
    "start": "1881910",
    "end": "1888150"
  },
  {
    "text": "based on a particular search term so in this case I'm looking at all the tweets about with Australia in them now the",
    "start": "1888150",
    "end": "1895110"
  },
  {
    "text": "streaming API doesn't give you all the tweets in the firehose it just gives you a subset of them so we're gonna grab a",
    "start": "1895110",
    "end": "1900720"
  },
  {
    "text": "subset of tweets about Australia and then I took the text of each tweet I ran this for a couple of days sent it to the",
    "start": "1900720",
    "end": "1906870"
  },
  {
    "text": "natural language API and the natural language API gives us a JSON response back and then what I do with that JSON",
    "start": "1906870",
    "end": "1913470"
  },
  {
    "text": "response is I store it in a bigquery table bigquery is a big data as a service tool that we offer on Google",
    "start": "1913470",
    "end": "1919890"
  },
  {
    "text": "cloud platform it's fully managed lets you query lots and lots of data really fast so I add that into our bigquery",
    "start": "1919890",
    "end": "1926520"
  },
  {
    "text": "table and then we can do some analysis on this Twitter data so if I go over here to the browser here we can see a",
    "start": "1926520",
    "end": "1934400"
  },
  {
    "text": "subset of what the data in my table looks like so I've got the ID of the",
    "start": "1934400",
    "end": "1939870"
  },
  {
    "text": "tweet when it was created the hashtags in the tweet which is returned from the",
    "start": "1939870",
    "end": "1945570"
  },
  {
    "text": "Twitter API and then I get this giant JSON string which is the response from",
    "start": "1945570",
    "end": "1951300"
  },
  {
    "text": "the natural language API this is the bigquery web UI so you can use it to inspect data in your table you can also",
    "start": "1951300",
    "end": "1957420"
  },
  {
    "text": "write queries directly in the browser you can use the bigquery REST API to write queries as well but in this",
    "start": "1957420",
    "end": "1962730"
  },
  {
    "text": "example we'll show you in the browser so you might be wondering if I'm writing a sequel query how am I gonna parse this",
    "start": "1962730",
    "end": "1969210"
  },
  {
    "text": "giant string and the answer is bigquery has a feature called user-defined functions which lets you write custom",
    "start": "1969210",
    "end": "1975480"
  },
  {
    "text": "JavaScript functions that you can run on columns in your table so if we happen",
    "start": "1975480",
    "end": "1981240"
  },
  {
    "text": "over here I have written a function that is going to look at the most common",
    "start": "1981240",
    "end": "1987970"
  },
  {
    "text": "adjectives used on Twitter to describe Australia in the past couple days I just",
    "start": "1987970",
    "end": "1995380"
  },
  {
    "text": "ran the script for a couple days so what's really crazy here is it's running this custom JavaScript function on all",
    "start": "1995380",
    "end": "2001560"
  },
  {
    "text": "the tweets in my table when it's done running I'll look at exactly how many tweets I'm running this on so",
    "start": "2001560",
    "end": "2008370"
  },
  {
    "text": "essentially what we're doing here is we're taking each token so the natural language API returns a token for each",
    "start": "2008370",
    "end": "2016280"
  },
  {
    "text": "word in our text and it tells us the part of speech so we're just looking at the part of speech tag isn't an",
    "start": "2016280",
    "end": "2024420"
  },
  {
    "text": "adjective if so we'll count it seems to be taking a bit of time while it's running let's look at some details for",
    "start": "2024420",
    "end": "2032040"
  },
  {
    "text": "this table so it's running this over one hundred and forty eight thousand tweets",
    "start": "2032040",
    "end": "2037140"
  },
  {
    "text": "and this is the schema of my table so",
    "start": "2037140",
    "end": "2043140"
  },
  {
    "text": "I'm getting an ID of the tweet the text when it was created the hash tags which",
    "start": "2043140",
    "end": "2049500"
  },
  {
    "text": "you saw the tokens which is that string return from the natural language API and then the score and magnitude from",
    "start": "2049500",
    "end": "2055260"
  },
  {
    "text": "sentiment analysis usually doesn't take this long but live demos you never know",
    "start": "2055260",
    "end": "2060540"
  },
  {
    "text": "so I'm gonna hop on over here to my next query and run that so what this is gonna",
    "start": "2060540",
    "end": "2068159"
  },
  {
    "text": "do is we'll see which query finishes first it will be race this one is going to look at the emojis in my tweets so I",
    "start": "2068160",
    "end": "2075120"
  },
  {
    "text": "love emojis I want to see which emojis people are using on Twitter when they",
    "start": "2075120",
    "end": "2081300"
  },
  {
    "text": "talk about Australia so this is just looking at a particular character code that makes up an emoji to see if the",
    "start": "2081300",
    "end": "2088200"
  },
  {
    "text": "token is an emoji and then we're just going to do a running count of those this man is still running usually it",
    "start": "2088200",
    "end": "2094230"
  },
  {
    "text": "doesn't take that long so I'm gonna look in my query history here and see if I",
    "start": "2094230",
    "end": "2100430"
  },
  {
    "text": "already have version of this let's see",
    "start": "2100430",
    "end": "2105920"
  },
  {
    "text": "about one second",
    "start": "2105920",
    "end": "2109609"
  },
  {
    "text": "hmmm alright well that doesn't appear to be working this one is still running -",
    "start": "2111210",
    "end": "2116800"
  },
  {
    "text": "all right live demos you never know all right I'm gonna keep these running and",
    "start": "2116800",
    "end": "2122070"
  },
  {
    "text": "we can pop back to them at the end see how they do so let me just check this",
    "start": "2122070",
    "end": "2130000"
  },
  {
    "text": "one yes still running maybe it's a Wi-Fi issue I'm not sure um okay I couldn't",
    "start": "2130000",
    "end": "2137500"
  },
  {
    "text": "find that other one all right I'm gonna hop back to the slides and that works",
    "start": "2137500",
    "end": "2144370"
  },
  {
    "text": "you'd be able to see the most common adjectives people are using on Twitter along with the most comment emojis just",
    "start": "2144370",
    "end": "2150880"
  },
  {
    "text": "to show you an example of what you could do so this is this is what the output",
    "start": "2150880",
    "end": "2155920"
  },
  {
    "text": "would look like if we counted the emojis I ran this one on a different data set and then I created an emoji tag cloud",
    "start": "2155920",
    "end": "2162580"
  },
  {
    "text": "just to see a way to visualize which emojis people were using most often to",
    "start": "2162580",
    "end": "2168480"
  },
  {
    "text": "talk about a specific topic just another example of how you could visualize the",
    "start": "2168480",
    "end": "2173560"
  },
  {
    "start": "2173000",
    "end": "2257000"
  },
  {
    "text": "data so now we talked about natural language I'm gonna hand it back over to Brett to talk about the speech API all",
    "start": "2173560",
    "end": "2181600"
  },
  {
    "text": "right thanks so this is speech API this is basically a spoken speech into text and again as Google we've been training",
    "start": "2181600",
    "end": "2188320"
  },
  {
    "text": "these machine learning models over years and years on things like ok Google oh no",
    "start": "2188320",
    "end": "2195280"
  },
  {
    "text": "one usually I get at least someone's phone to go off it ok Google but anyway what's it but I have a very like",
    "start": "2195280",
    "end": "2204730"
  },
  {
    "text": "universally common no at least so you optionally yes so that's actually that's actually one thing that's alright so now",
    "start": "2204730",
    "end": "2212530"
  },
  {
    "text": "you can actually personalize it to your voice but if you don't then it's just a generic voice model so I usually get",
    "start": "2212530",
    "end": "2217600"
  },
  {
    "text": "someone with that so anyway if you want that functionality where you can say ok Google and as your user is speaking it",
    "start": "2217600",
    "end": "2223840"
  },
  {
    "text": "can be like transcribing their spoken word into text that is what the cloud speech API can let you do so it supports",
    "start": "2223840",
    "end": "2230440"
  },
  {
    "text": "over 80 languages actually as of two days ago no longer is at 80 languages it is now over a hundred and ten languages",
    "start": "2230440",
    "end": "2237970"
  },
  {
    "text": "so you all are probably the first people yes y'all probably the first people actually",
    "start": "2237970",
    "end": "2243010"
  },
  {
    "text": "to hear in person about this release so we're very very excited we've added over over 30 more languages to to our speech",
    "start": "2243010",
    "end": "2250420"
  },
  {
    "text": "API so if anyone speaks a weird obscure languages language I may ask for",
    "start": "2250420",
    "end": "2255670"
  },
  {
    "text": "volunteers in a second well we're not there yet Australians too weird that's",
    "start": "2255670",
    "end": "2261400"
  },
  {
    "start": "2257000",
    "end": "2305000"
  },
  {
    "text": "it's indecipherable even by machines so another thing that we added the other",
    "start": "2261400",
    "end": "2267340"
  },
  {
    "text": "day is time offsets so this basically when you give it an audio file it will",
    "start": "2267340",
    "end": "2273310"
  },
  {
    "text": "turn it into text so the famous Abraham Lincoln speech four score and twenty years ago it can actually it'll",
    "start": "2273310",
    "end": "2280240"
  },
  {
    "text": "transcribe the whole phrase of the whole text but it also will give you timestamps for individual words so for",
    "start": "2280240",
    "end": "2285790"
  },
  {
    "text": "example the word for it will say it is between 1.3 and 1.4 seconds that's like",
    "start": "2285790",
    "end": "2291460"
  },
  {
    "text": "the snippet of audio or that specific word exists in your audio stream so really really useful for doing like",
    "start": "2291460",
    "end": "2297040"
  },
  {
    "text": "extractions of where we're in this giant audio file on this particular word come",
    "start": "2297040",
    "end": "2302920"
  },
  {
    "text": "out and that also was brand new we just released that so a customer that's using this in real life so azar basically is a",
    "start": "2302920",
    "end": "2309790"
  },
  {
    "start": "2305000",
    "end": "2342000"
  },
  {
    "text": "chat app where I can talk into my app but I can talk to other people in other",
    "start": "2309790",
    "end": "2314890"
  },
  {
    "text": "countries who maybe don't speak the same language that I do so it basically dovetails this speech",
    "start": "2314890",
    "end": "2320260"
  },
  {
    "text": "API with the Google translation API so that I can speak in my language it turns it into text translates it into the",
    "start": "2320260",
    "end": "2327550"
  },
  {
    "text": "other person's native language so they read what I'm saying in their language and when they speak back it comes to me",
    "start": "2327550",
    "end": "2333280"
  },
  {
    "text": "in my language so really really cool sort of opening up these opportunities for these awkward selfie conversations",
    "start": "2333280",
    "end": "2339700"
  },
  {
    "text": "around the world so very very cool so I'm gonna show a demo where I'm going to",
    "start": "2339700",
    "end": "2348070"
  },
  {
    "start": "2342000",
    "end": "2372000"
  },
  {
    "text": "basically create an audio file we're gonna use a tool called socks that's basically a command-line utility that",
    "start": "2348070",
    "end": "2353860"
  },
  {
    "text": "records audio input from my laptop create a JSON request send it via HTTP",
    "start": "2353860",
    "end": "2360160"
  },
  {
    "text": "POST to the API and then we'll take a look at the response so I'm gonna do it literally just using curl and",
    "start": "2360160",
    "end": "2365470"
  },
  {
    "text": "command-line but again there's a nice nodejs wrapper for this as well as dotnet Python",
    "start": "2365470",
    "end": "2371000"
  },
  {
    "text": "Ruby and all that good stuff so that's exciting I don't think I I think are we",
    "start": "2371000",
    "end": "2378200"
  },
  {
    "start": "2372000",
    "end": "2386000"
  },
  {
    "text": "sure I think this might be a Wi-Fi issue because this should not take that long",
    "start": "2378200",
    "end": "2384040"
  },
  {
    "text": "yeah I'm just gonna refresh this who's",
    "start": "2384970",
    "end": "2390530"
  },
  {
    "start": "2386000",
    "end": "2407000"
  },
  {
    "text": "staying at Hilton can we have your access code yeah so the bigquery counter",
    "start": "2390530",
    "end": "2398660"
  },
  {
    "text": "is client-side so he was disconnected to the internet it was just gonna run forever and ever but don't worry it's",
    "start": "2398660",
    "end": "2403910"
  },
  {
    "text": "not gonna bill you for that all right well we'll come back to that let's see",
    "start": "2403910",
    "end": "2409010"
  },
  {
    "start": "2407000",
    "end": "2414000"
  },
  {
    "text": "did this work let's go to my favorite I'm sorry all right looks like it's",
    "start": "2409010",
    "end": "2415970"
  },
  {
    "start": "2414000",
    "end": "2434000"
  },
  {
    "text": "working it's always something weird in political in there so hopefully that didn't nothing weird came up all right",
    "start": "2415970",
    "end": "2421520"
  },
  {
    "text": "so I created this command line script so I can say something and it will turn it",
    "start": "2421520",
    "end": "2427190"
  },
  {
    "text": "into speech so hello Sydney hope everyone is still awake today all right",
    "start": "2427190",
    "end": "2434990"
  },
  {
    "start": "2434000",
    "end": "2564000"
  },
  {
    "text": "so here is the JSON request that we're about to spin send to the API so here's",
    "start": "2434990",
    "end": "2441410"
  },
  {
    "text": "some data about the actual audio file itself a sample rate its encoding type the language so English US speech",
    "start": "2441410",
    "end": "2449630"
  },
  {
    "text": "contacts so this is basically phrase hints so the cloud speech API is train",
    "start": "2449630",
    "end": "2455030"
  },
  {
    "text": "it's a general-purpose machine learned machine learning trained model which means it's designed for just general use",
    "start": "2455030",
    "end": "2460580"
  },
  {
    "text": "well in your specific applications or in your business you probably have certain terms that just aren't in common your",
    "start": "2460580",
    "end": "2466130"
  },
  {
    "text": "like technical terms or like you know weird product names or whatever that we just don't know about so what you can do",
    "start": "2466130",
    "end": "2472040"
  },
  {
    "text": "is you can actually supply us phrases words as part of the transcription request so we know there's like these",
    "start": "2472040",
    "end": "2479210"
  },
  {
    "text": "terms that we don't really know about but we can now use it to take a best guess that maybe I'm saying something",
    "start": "2479210",
    "end": "2484780"
  },
  {
    "text": "that the cloud speech API might not normally know about Mac's alternatives so this is it will give you like I'm a",
    "start": "2484780",
    "end": "2491330"
  },
  {
    "text": "its best guest but then you can request hey but also give me one or two or three or four maybe like alternate",
    "start": "2491330",
    "end": "2497300"
  },
  {
    "text": "transcriptions that that maybe I can inspect visually manually to see if it's",
    "start": "2497300",
    "end": "2502310"
  },
  {
    "text": "a better transcription and then here we're actually in baiting the audiophile in the request",
    "start": "2502310",
    "end": "2507390"
  },
  {
    "text": "itself so we're doing a base64 encode putting it in the JSON but if you had say like a bunch of audio files that you",
    "start": "2507390",
    "end": "2512760"
  },
  {
    "text": "wanted to transcribe you could actually upload them to say like Google Cloud storage and then actually just send the like a link there and say transcode this",
    "start": "2512760",
    "end": "2519600"
  },
  {
    "text": "file so you don't actually embed it in the request itself so if you want to do like a big batch transcription of audio",
    "start": "2519600",
    "end": "2524970"
  },
  {
    "text": "so let's send it and assuming we're not still on the Hilton guest Wi-Fi login oh",
    "start": "2524970",
    "end": "2529980"
  },
  {
    "text": "here we go so hello Sydney hope everyone is still awake today are we alright yeah sweet",
    "start": "2529980",
    "end": "2537990"
  },
  {
    "text": "well I'm 97.6% confident that we were still awake which is a coincidence because that's how confident it was that",
    "start": "2537990",
    "end": "2544500"
  },
  {
    "text": "it correctly transcribed my audio so that's English as you imagine this",
    "start": "2544500",
    "end": "2550230"
  },
  {
    "text": "product is developed in Silicon Valley in the States so my American accent is it does pretty good so he here speaks",
    "start": "2550230",
    "end": "2556890"
  },
  {
    "text": "like a different language than maybe we can try and see how good it is all right",
    "start": "2556890",
    "end": "2562710"
  },
  {
    "text": "look you want let's let's see if we have the language code where is this thing",
    "start": "2562710",
    "end": "2569640"
  },
  {
    "start": "2564000",
    "end": "2611000"
  },
  {
    "text": "where am i all right we enough medical order here oh how do",
    "start": "2569640",
    "end": "2580590"
  },
  {
    "text": "we spell it pas",
    "start": "2580590",
    "end": "2586440"
  },
  {
    "text": "nope so I also don't think this language code thing has been updated since we added new languages strike one",
    "start": "2586440",
    "end": "2592440"
  },
  {
    "text": "so I'm gonna get another one alright here we go all right you want a volunteer to come",
    "start": "2592440",
    "end": "2598560"
  },
  {
    "text": "up and speak that so I'm gonna use FA as the language code anything you want",
    "start": "2598560",
    "end": "2607560"
  },
  {
    "text": "please don't swear but so you stand here",
    "start": "2607560",
    "end": "2612630"
  },
  {
    "start": "2611000",
    "end": "2625000"
  },
  {
    "text": "and then it's just it's the mic of the laptop so whenever you're ready think of something particularly hilarious notice",
    "start": "2612630",
    "end": "2618630"
  },
  {
    "text": "getting so just hit enter when you're ready and it will run for it will record for five seconds and so male host epsp",
    "start": "2618630",
    "end": "2628700"
  },
  {
    "text": "all right so let's see it's going to turn on that and we will probably need",
    "start": "2628700",
    "end": "2636120"
  },
  {
    "text": "you to verify if it was even close just even close all right so let's see",
    "start": "2636120",
    "end": "2643710"
  },
  {
    "text": "things of the power of the translation API I will translate to English this",
    "start": "2643710",
    "end": "2649620"
  },
  {
    "text": "phrase and see what did it come back with sweaty head that's what you said right yeah as I say we released this two",
    "start": "2649620",
    "end": "2659040"
  },
  {
    "start": "2650000",
    "end": "2666000"
  },
  {
    "text": "days ago so maybe there are some bugs but uh but thank you for volunteering",
    "start": "2659040",
    "end": "2664400"
  },
  {
    "text": "for unrelated reasons sweaty head was actually my nickname in high school but probably I shouldn't explain why what",
    "start": "2665930",
    "end": "2675180"
  },
  {
    "start": "2672000",
    "end": "2721000"
  },
  {
    "text": "did you actually say that was the Google",
    "start": "2675180",
    "end": "2680700"
  },
  {
    "text": "truth API injecting and solving and correcting your statement so thanks alright and now I will turn it back over",
    "start": "2680700",
    "end": "2687930"
  },
  {
    "text": "to Sarah for the video intelligence API thanks Brett so the video intelligence API is our newest machine learning API",
    "start": "2687930",
    "end": "2694620"
  },
  {
    "text": "and as with the other API is we have a node module you can use to interact with it I'm sweeping this run npm install at",
    "start": "2694620",
    "end": "2702000"
  },
  {
    "text": "google cloud /video - intelligence and what the video api does is it lets you",
    "start": "2702000",
    "end": "2707310"
  },
  {
    "text": "understand your videos in the same way that brett described so the vision API lets you understand photos this lets you",
    "start": "2707310",
    "end": "2712410"
  },
  {
    "text": "do that sort of analysis at the video level so you can understand your videos entities that shop frame or high level",
    "start": "2712410",
    "end": "2719760"
  },
  {
    "text": "video level so the best way to demonstrate this is through a demo and",
    "start": "2719760",
    "end": "2724850"
  },
  {
    "start": "2721000",
    "end": "2864000"
  },
  {
    "text": "i'm gonna hop on over here and make this a little bit smaller so here's our demo",
    "start": "2724850",
    "end": "2730920"
  },
  {
    "text": "this is a video of a Superbowl commercial for Google home and I'm gonna",
    "start": "2730920",
    "end": "2736440"
  },
  {
    "text": "play just the first couple seconds of the video so we've got a lot of scenes in this video it starts with a mountain",
    "start": "2736440",
    "end": "2742770"
  },
  {
    "text": "pass then we have a street scene a dog a garage I'm not gonna play the whole",
    "start": "2742770",
    "end": "2748200"
  },
  {
    "text": "thing but the idea here is that there's a lot of different scenes changing a lot is happening in the video and if we were",
    "start": "2748200",
    "end": "2754620"
  },
  {
    "text": "to manually analyze this we would have to watch the whole thing write down what was happening every scene and then maybe",
    "start": "2754620",
    "end": "2759780"
  },
  {
    "text": "store that in a database somewhere and the video API actually does all of this for us so all we need to do is send it",
    "start": "2759780",
    "end": "2766410"
  },
  {
    "text": "our video it returns us back JSON response with details exactly what is happening in every scene",
    "start": "2766410",
    "end": "2773089"
  },
  {
    "text": "and then in addition to that granular analysis it'll tell us at a high level what is this video about so maybe we",
    "start": "2773089",
    "end": "2779630"
  },
  {
    "text": "have a video with costumes and candy it'll tell us it's a video about Halloween so it does some analysis",
    "start": "2779630",
    "end": "2784670"
  },
  {
    "text": "aggregate analysis on all the detailed scene level data that we get back so",
    "start": "2784670",
    "end": "2790579"
  },
  {
    "text": "what I have here below the video is basically just a visualization of the JSON that we get back so it tells us",
    "start": "2790579",
    "end": "2796849"
  },
  {
    "text": "that it's there's a dog in the video and it knows exactly when that dog appears and tells us there's a cake at the end",
    "start": "2796849",
    "end": "2803470"
  },
  {
    "text": "if we scroll down we can see some more data it tells us even what breed of dog that was and if we look here it also",
    "start": "2803470",
    "end": "2813019"
  },
  {
    "text": "identifies that mountain pass from the beginning scene which is pretty cool so this is what it can do with one video",
    "start": "2813019",
    "end": "2819200"
  },
  {
    "text": "but if you're using the video API chances are you have lots and lots of videos that you want to analyze so if we",
    "start": "2819200",
    "end": "2827359"
  },
  {
    "text": "go here to the home page of my app I've got lots of videos here let's say for example that I work at a media company",
    "start": "2827359",
    "end": "2833180"
  },
  {
    "text": "and I've got petabytes of videos sitting in storage buckets let's say specifically it's a sports media company",
    "start": "2833180",
    "end": "2839450"
  },
  {
    "text": "and I've got tons of hours of sports footage and what I want to do is create a highlight reel this is something you",
    "start": "2839450",
    "end": "2845569"
  },
  {
    "text": "might want to do if you have a lot of media is fine all the clips specifically of one thing maybe baseball so I want to",
    "start": "2845569",
    "end": "2851240"
  },
  {
    "text": "find all my baseball videos and compile them into maybe like a minute long highlight reel so with the JSON data",
    "start": "2851240",
    "end": "2857509"
  },
  {
    "text": "that we get back on each video makes it really easy to implement search across our entire video library so if I search",
    "start": "2857509",
    "end": "2864500"
  },
  {
    "start": "2864000",
    "end": "2938000"
  },
  {
    "text": "baseball here you refresh that it tells us not only which videos have baseball",
    "start": "2864500",
    "end": "2872119"
  },
  {
    "text": "but it tells us exactly where we can find the baseball scenes in those videos so this one this video is almost",
    "start": "2872119",
    "end": "2878299"
  },
  {
    "text": "entirely about baseball this is my favorite example here because this video",
    "start": "2878299",
    "end": "2883670"
  },
  {
    "text": "every year Google publishes a year in search video highlighting top searches from that year so lots of different",
    "start": "2883670",
    "end": "2889460"
  },
  {
    "text": "things happening in this video there's only one moment where there's a baseball clip in the video and if your job was to",
    "start": "2889460",
    "end": "2894769"
  },
  {
    "text": "find that clip there's a chance you might even miss it if you're watching this video it's only like a two second",
    "start": "2894769",
    "end": "2899960"
  },
  {
    "text": "clip you might skip over it accidentally but the video API is able to pin point that clip directly so if we go to",
    "start": "2899960",
    "end": "2906110"
  },
  {
    "text": "it here we can see indeed there is a baseball clip in this video this is from",
    "start": "2906110",
    "end": "2911660"
  },
  {
    "text": "last year when the Cubs won the World Series I'm from Chicago so I was pretty excited about that making-meter in search results so that's what the video",
    "start": "2911660",
    "end": "2918950"
  },
  {
    "text": "API can do and we'll do one more search so it's winter in Australia right now",
    "start": "2918950",
    "end": "2924020"
  },
  {
    "text": "although to me this is very mild winter living in New York but I think we can",
    "start": "2924020",
    "end": "2929210"
  },
  {
    "text": "agree it'd be nice to be on a beach right now so machine learning cannot take us to a beach but it can show us",
    "start": "2929210",
    "end": "2935060"
  },
  {
    "text": "all our Beach videos which is the next best thing right so I'm gonna search for all my Beach videos and even if the",
    "start": "2935060",
    "end": "2942650"
  },
  {
    "text": "video is not of you know entirely about a beach we can find just those small",
    "start": "2942650",
    "end": "2947900"
  },
  {
    "text": "clips where we find a beach in our video so here we can skip to those find all of",
    "start": "2947900",
    "end": "2953570"
  },
  {
    "start": "2952000",
    "end": "2991000"
  },
  {
    "text": "our beach scenes across our videos we'll show it one more um so this demo just",
    "start": "2953570",
    "end": "2960230"
  },
  {
    "text": "kind of shows you how the video API is kind of transforming how you analyze videos so something that even just a",
    "start": "2960230",
    "end": "2965870"
  },
  {
    "text": "couple of months or years ago would have taken hours with the video API it just takes seconds or minutes to transcribe",
    "start": "2965870",
    "end": "2971950"
  },
  {
    "text": "before I jump back to the slides I want to revisit these demos okay it finally",
    "start": "2971950",
    "end": "2978020"
  },
  {
    "text": "finished it was a Wi-Fi issue thanks Brett so here we can see the adjectives",
    "start": "2978020",
    "end": "2983050"
  },
  {
    "text": "from that Twitter analysis that I ran and oh we didn't refresh this one so",
    "start": "2983050",
    "end": "2989060"
  },
  {
    "text": "still running but I'm gonna refresh that and let's see I'm gonna search my",
    "start": "2989060",
    "end": "2998660"
  },
  {
    "text": "queries I think it was project query there we go",
    "start": "2998660",
    "end": "3006599"
  },
  {
    "start": "3005000",
    "end": "3024000"
  },
  {
    "text": "all right this is the correct emoji query hopefully it won't take 900",
    "start": "3006599",
    "end": "3013630"
  },
  {
    "text": "seconds I won't make you wait that long but we'll give it just a couple seconds to run again this was using the natural",
    "start": "3013630",
    "end": "3020920"
  },
  {
    "text": "language API to find our most seasoned OGIS there we go so maybe there was some sort of big",
    "start": "3020920",
    "end": "3027790"
  },
  {
    "start": "3024000",
    "end": "3039000"
  },
  {
    "text": "musical event happening people were using a musical note emoji these are the",
    "start": "3027790",
    "end": "3034030"
  },
  {
    "text": "most common emojis used so back to the video API that was a demo the video API",
    "start": "3034030",
    "end": "3039760"
  },
  {
    "start": "3039000",
    "end": "3115000"
  },
  {
    "text": "and I wanted to talk momentarily about the architecture of the demo app and so",
    "start": "3039760",
    "end": "3045460"
  },
  {
    "text": "how it works is all of the video files are being stored in a Google Cloud storage bucket which you saw earlier",
    "start": "3045460",
    "end": "3051940"
  },
  {
    "text": "with Brett's cloud functions demo and I've got a cloud function listening on that bucket so that's triggered whenever",
    "start": "3051940",
    "end": "3057640"
  },
  {
    "text": "new files added to the bucket it will check is it a video file if it is it sends it to the video intelligence API",
    "start": "3057640",
    "end": "3063520"
  },
  {
    "text": "for processing and one thing you can pass in your video API request is the URL of another cloud storage file where",
    "start": "3063520",
    "end": "3070480"
  },
  {
    "text": "you want to write the annotation JSON when it's done processing you don't have to do that you could take some sort of",
    "start": "3070480",
    "end": "3076030"
  },
  {
    "text": "action once it's done but in this example I'm just having it when it's done right to a cloud storage bucket so",
    "start": "3076030",
    "end": "3082750"
  },
  {
    "text": "I've got the videos in one storage bucket and then the video metadata in a separate storage bucket and in the front",
    "start": "3082750",
    "end": "3088599"
  },
  {
    "text": "end is a node.js app that's running on Google App Engine App Engine is our platform as a service products on Google",
    "start": "3088599",
    "end": "3094119"
  },
  {
    "text": "cloud so the front end of the app doesn't actually directly call the video API all it does is it grabs the",
    "start": "3094119",
    "end": "3101160"
  },
  {
    "text": "associate the videos and then it grabs their associated metadata and it implements the search functionality",
    "start": "3101160",
    "end": "3106810"
  },
  {
    "text": "across that JSON so I built it with another developer Alex wolf if you liked it give us a shout out on Twitter and",
    "start": "3106810",
    "end": "3115300"
  },
  {
    "start": "3115000",
    "end": "3163000"
  },
  {
    "text": "then just a look at what the JSON looks like for label detection here's a video",
    "start": "3115300",
    "end": "3121089"
  },
  {
    "text": "that has a bird's eye view scene in it and indeed label detection is able to identify that there's a bird's eye view",
    "start": "3121089",
    "end": "3126579"
  },
  {
    "text": "and what we get here is a segment object so this tells us in microseconds what",
    "start": "3126579",
    "end": "3132069"
  },
  {
    "text": "was the start and end time that the particulars in this case a bird's-eye view appeared in our video if it",
    "start": "3132069",
    "end": "3137810"
  },
  {
    "text": "appeared more than once we've got multiple segment objects it also gives us a confidence score how confident is",
    "start": "3137810",
    "end": "3143900"
  },
  {
    "text": "it that it correctly identify this label so in addition to label detection I don't have a JSON snippet for it but it",
    "start": "3143900",
    "end": "3150890"
  },
  {
    "text": "can also do shot change detection which means show me all the times at the scene like the camera moved to a different",
    "start": "3150890",
    "end": "3156560"
  },
  {
    "text": "scene in the video so it'll just give you the timestamps of all the times the scenes changed so that was the video API",
    "start": "3156560",
    "end": "3164720"
  },
  {
    "start": "3163000",
    "end": "3176000"
  },
  {
    "text": "so we just gave you an overview five different machine learning ap is on Google cloud but we've got one more",
    "start": "3164720",
    "end": "3171140"
  },
  {
    "text": "thing in our talk title we promised big data so we wanted to end with some big data analysis specifically related to",
    "start": "3171140",
    "end": "3178070"
  },
  {
    "start": "3176000",
    "end": "3215000"
  },
  {
    "text": "JavaScript and node and to do that we're going to use this bigquery table and we",
    "start": "3178070",
    "end": "3184670"
  },
  {
    "text": "have a public bigquery table that contains all the public code on github it's a giant table it's over 2 terabytes",
    "start": "3184670",
    "end": "3192410"
  },
  {
    "text": "and it's updated frequently this is just a visualization to show the breakdown of public code on github we look at it by",
    "start": "3192410",
    "end": "3199100"
  },
  {
    "text": "bytes we can see that see accounts for 63% of code and by repositories",
    "start": "3199100",
    "end": "3204670"
  },
  {
    "text": "javascript accounts for the most with 14% of total repositories being javascript repos so there's all sorts of",
    "start": "3204670",
    "end": "3211520"
  },
  {
    "text": "interesting analysis we can do on this on this github table the first thing I'm going to do is find all the JavaScript",
    "start": "3211520",
    "end": "3217820"
  },
  {
    "start": "3215000",
    "end": "3220000"
  },
  {
    "text": "files on github so I'm gonna hop back to the browser and we've got another",
    "start": "3217820",
    "end": "3223910"
  },
  {
    "start": "3223000",
    "end": "3328000"
  },
  {
    "text": "bigquery tab here and just to show you what the table looks like there's a",
    "start": "3223910",
    "end": "3229100"
  },
  {
    "text": "couple different tables that have this data so we have the contents table which",
    "start": "3229100",
    "end": "3234380"
  },
  {
    "text": "contains the contents of every single file in the head branch on github and",
    "start": "3234380",
    "end": "3239510"
  },
  {
    "text": "this table is the biggest one it's over 2 terabytes and preview of what it looks",
    "start": "3239510",
    "end": "3245930"
  },
  {
    "text": "like here's what a row in the table looks like and these files are empty but",
    "start": "3245930",
    "end": "3251090"
  },
  {
    "text": "if I skip ahead we can find some files that contain text so that's what this",
    "start": "3251090",
    "end": "3257360"
  },
  {
    "text": "table looks like and you can easily join that with the files table to do more",
    "start": "3257360",
    "end": "3262940"
  },
  {
    "text": "analysis we're going to query the files table in this query example so this table is a little bit smaller",
    "start": "3262940",
    "end": "3268089"
  },
  {
    "text": "has the file path of every file in the head branch on github along with some",
    "start": "3268089",
    "end": "3273829"
  },
  {
    "text": "other metadata so here we're gonna count how many JavaScript files there aren't",
    "start": "3273829",
    "end": "3278930"
  },
  {
    "text": "github and while it runs does anybody want to guess how many they think there are all of github oh nobody guess all",
    "start": "3278930",
    "end": "3289069"
  },
  {
    "text": "right well the answer is over 300 million which is pretty crazy that is a lot of JavaScript files on github that's",
    "start": "3289069",
    "end": "3296660"
  },
  {
    "text": "a relatively simple query so the next thing I wanted to look at was can we do",
    "start": "3296660",
    "end": "3302180"
  },
  {
    "text": "any sort of analysis on what the most popular node modules are based on this data so if you're a node.js developer",
    "start": "3302180",
    "end": "3308690"
  },
  {
    "text": "you know that the way you define your dependencies is with a package.json file and using bigquery's user-defined",
    "start": "3308690",
    "end": "3315680"
  },
  {
    "text": "functions which i talked about previously it's pretty easy for us to write a JavaScript function to parse the",
    "start": "3315680",
    "end": "3321380"
  },
  {
    "text": "package JSON we just need to look at the dependencies object and then count the different dependencies within that block",
    "start": "3321380",
    "end": "3327069"
  },
  {
    "text": "so if I go over here we have a query already written to look at all the",
    "start": "3327069",
    "end": "3334339"
  },
  {
    "start": "3328000",
    "end": "3360000"
  },
  {
    "text": "package out JSON files on github now I'm not gonna run the full two terabyte query here because i wouldnt want to",
    "start": "3334339",
    "end": "3340400"
  },
  {
    "text": "make you wait for however many seconds it would take to run so i've cheated a",
    "start": "3340400",
    "end": "3346099"
  },
  {
    "text": "little bit and i've extracted all the package JSON files into a table so it doesn't need to do the full scan it's",
    "start": "3346099",
    "end": "3352010"
  },
  {
    "text": "already got the package JSON files so this query is only gonna process almost 7 gigabytes instead of 2 terabytes so",
    "start": "3352010",
    "end": "3358880"
  },
  {
    "text": "I'm gonna run it here and what's really cool about these user-defined functions is that it's doing this complex string",
    "start": "3358880",
    "end": "3365210"
  },
  {
    "text": "parsing and it's running this on every single package of JSON file on github",
    "start": "3365210",
    "end": "3370430"
  },
  {
    "text": "which is kind of crazy so if I look here at the table that I'm this is the table",
    "start": "3370430",
    "end": "3376250"
  },
  {
    "start": "3371000",
    "end": "3404000"
  },
  {
    "text": "I extracted with all the package JSON files there are 2.7 million of them and",
    "start": "3376250",
    "end": "3382400"
  },
  {
    "text": "it's running this custom function on all those files which is kind of crazy and",
    "start": "3382400",
    "end": "3388700"
  },
  {
    "text": "something that previously would have taken a lot of time and resources to do while that's running oh I was gonna ask",
    "start": "3388700",
    "end": "3395480"
  },
  {
    "text": "if anyone had guesses any other guesses on most most common node module for eight which one I don't know that",
    "start": "3395480",
    "end": "3402190"
  },
  {
    "text": "one all right let's see if that's in the top Express this is number one low -",
    "start": "3402190",
    "end": "3407890"
  },
  {
    "start": "3404000",
    "end": "3423000"
  },
  {
    "text": "debug I don't see Google Cloud vision in here but you never know so these are",
    "start": "3407890",
    "end": "3414790"
  },
  {
    "text": "some of the most most common ones I'm guessing a lot of you are familiar with these so if we go back to slides so this",
    "start": "3414790",
    "end": "3426069"
  },
  {
    "start": "3423000",
    "end": "3435000"
  },
  {
    "text": "is what the full query would look like if we just have this nested Select to grab all the package of JSON files on github and just to show you that we",
    "start": "3426069",
    "end": "3432700"
  },
  {
    "text": "actually did run that query but we don't want to make you wait for it to finish processing it took 238 seconds which is",
    "start": "3432700",
    "end": "3438819"
  },
  {
    "text": "actually really really fast considering it was gonna process 2.2 terabytes of data we ran that earlier today we have a",
    "start": "3438819",
    "end": "3446020"
  },
  {
    "text": "strange not to prove it so that's all we have I encourage you to try out all the",
    "start": "3446020",
    "end": "3452740"
  },
  {
    "start": "3449000",
    "end": "3512000"
  },
  {
    "text": "machine learning api's and products we talked about and Brad talks about the in",
    "start": "3452740",
    "end": "3458049"
  },
  {
    "text": "browser demo for the vision API we have a browser demo for all five of these api's so before you write any code you",
    "start": "3458049",
    "end": "3463270"
  },
  {
    "text": "can hop on over to the browser try out these api's see what the response actually looks like and we have the code",
    "start": "3463270",
    "end": "3470799"
  },
  {
    "text": "for all the demos we showed in the talk in various github repos so definitely encourage you to check it out if you",
    "start": "3470799",
    "end": "3482290"
  },
  {
    "text": "have any questions I'm all respond to",
    "start": "3482290",
    "end": "3491619"
  },
  {
    "text": "hashtag sweaty head",
    "start": "3491619",
    "end": "3494460"
  },
  {
    "text": "[Music] you",
    "start": "3500580",
    "end": "3506530"
  }
]