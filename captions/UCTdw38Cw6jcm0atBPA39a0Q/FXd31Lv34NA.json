[
  {
    "text": "cool uh welcome everyone every story has to start somewhere",
    "start": "5779",
    "end": "11580"
  },
  {
    "text": "and mine started last year around over a year ago when I was working in a team",
    "start": "11580",
    "end": "17880"
  },
  {
    "text": "where we had multiple teams building independent graphql microservices",
    "start": "17880",
    "end": "22910"
  },
  {
    "text": "[Music] now the contacts that I'm putting here is that if you're working in an",
    "start": "22910",
    "end": "28439"
  },
  {
    "text": "organization where you've got multiple teams building these independent microservices",
    "start": "28439",
    "end": "34320"
  },
  {
    "text": "then Apple Federation might be the right choice for you and what I found out about that is what",
    "start": "34320",
    "end": "40680"
  },
  {
    "text": "I'm here today to discuss my learnings and hope that this might be useful for you as well",
    "start": "40680",
    "end": "46739"
  },
  {
    "text": "my name is Elena I'm a father who has a daughter toddler who is the",
    "start": "46739",
    "end": "52800"
  },
  {
    "text": "boss of me um she dominates my life to be honest I'm also a consultant at Telstra purple",
    "start": "52800",
    "end": "58920"
  },
  {
    "text": "in wa and I am passionate about building quality products for the users that will",
    "start": "58920",
    "end": "65820"
  },
  {
    "text": "make their life a lot easier it's the first time that I'm actually speaking here at NDC and it's also the",
    "start": "65820",
    "end": "72299"
  },
  {
    "text": "first time that I'm at an NDC conference a lot of first and I I think if I'm not",
    "start": "72299",
    "end": "77880"
  },
  {
    "text": "mistaken in DC Melbourne this is the first time that it's being hosted here as well so many firsts for me today",
    "start": "77880",
    "end": "85860"
  },
  {
    "text": "so enough about me let's get started to what you all hear",
    "start": "85860",
    "end": "90960"
  },
  {
    "text": "about hello I'm Dash so I'm gonna stop with the voice now",
    "start": "90960",
    "end": "97140"
  },
  {
    "text": "um but say hello to Dash Dash is building a movie do application",
    "start": "97140",
    "end": "103020"
  },
  {
    "text": "he's a product lead of a company that has three teams",
    "start": "103020",
    "end": "109100"
  },
  {
    "text": "one of those teams are Azure AWS experts and the other two are Azure experts",
    "start": "109439",
    "end": "114600"
  },
  {
    "text": "so what they're building is we've got the AWS Sim that's building a movie graphql apis within using AWS appsync",
    "start": "114600",
    "end": "123000"
  },
  {
    "text": "and one of the Azure teams is building a reviews graphql API within using Azure",
    "start": "123000",
    "end": "128459"
  },
  {
    "text": "functions and then we've got the identity that's building a user's graphql apis the idea there is that there will be a",
    "start": "128459",
    "end": "135239"
  },
  {
    "text": "mobile application that will be submitting requests to each of those apis",
    "start": "135239",
    "end": "142580"
  },
  {
    "text": "but before I continue down talking about Apple Federation",
    "start": "143099",
    "end": "149640"
  },
  {
    "text": "we need to take a step I need to take a step backwards and look at graphql so very long long time ago",
    "start": "149640",
    "end": "157319"
  },
  {
    "text": "graphql came to be and then this code came to be on the graphql.org I'm not going to read all of",
    "start": "157319",
    "end": "164819"
  },
  {
    "text": "this but what I want you to focus on is that bold bit that says gives the clients the",
    "start": "164819",
    "end": "172260"
  },
  {
    "text": "power to ask for exactly what they need and nothing more",
    "start": "172260",
    "end": "178739"
  },
  {
    "text": "now that says a lot and we go a little bit further with",
    "start": "178739",
    "end": "183780"
  },
  {
    "text": "graphql where it promises You Higher benefits with the idea of having a",
    "start": "183780",
    "end": "189599"
  },
  {
    "text": "single graph you've got a holistic graph where you'll be making your request",
    "start": "189599",
    "end": "196500"
  },
  {
    "text": "and that will equate to where you get a single graph and then a single request",
    "start": "196500",
    "end": "202080"
  },
  {
    "text": "so that's the whole idea right but then",
    "start": "202080",
    "end": "209659"
  },
  {
    "text": "if we go to look at the graphql.org site this is what they see what graphql is",
    "start": "211860",
    "end": "217080"
  },
  {
    "text": "for those of you that haven't worked with graphql you've got a schema basically it's",
    "start": "217080",
    "end": "222360"
  },
  {
    "text": "describing a schema here we've got a type called project and you've got Fields name tagline contributors Etc",
    "start": "222360",
    "end": "230040"
  },
  {
    "text": "and the next step is if you want data that relates to that you can submit for what you want in this case we're",
    "start": "230040",
    "end": "236099"
  },
  {
    "text": "submitting we're saying Hey I want a tagline for this particular project",
    "start": "236099",
    "end": "242819"
  },
  {
    "text": "and then you get a predictable results back so ask for what you want and you get",
    "start": "242819",
    "end": "249480"
  },
  {
    "text": "what you want what you asked for this is another example",
    "start": "249480",
    "end": "256799"
  },
  {
    "text": "from how to graphql basically what this is saying is that I want to get post",
    "start": "256799",
    "end": "262740"
  },
  {
    "text": "followers for that specific user there and by that I'm getting",
    "start": "262740",
    "end": "269400"
  },
  {
    "text": "the data back based in that format that I requested it for right so if you're thinking about it",
    "start": "269400",
    "end": "276720"
  },
  {
    "text": "we don't know where all of those like posts are located where followers are",
    "start": "276720",
    "end": "282360"
  },
  {
    "text": "Etc and graphql is there in the middle which can be you can think of it as an API Gateway for you",
    "start": "282360",
    "end": "289740"
  },
  {
    "text": "but there lies a problem we are devs too and what do devs do we",
    "start": "289740",
    "end": "296880"
  },
  {
    "text": "break things don't we as soon as we start walking with graphql we start thinking hey I've got this",
    "start": "296880",
    "end": "303720"
  },
  {
    "text": "whole graph here but the graph is getting bigger bigger and bigger what if I start creating micro Services",
    "start": "303720",
    "end": "309720"
  },
  {
    "text": "out of that those graphqls so I've got a little mini service here like for example movies and then I've got reviews",
    "start": "309720",
    "end": "315300"
  },
  {
    "text": "there as well and what this gives us is that this multiple overlapping graphs where you",
    "start": "315300",
    "end": "321600"
  },
  {
    "text": "get multiple graphs and then how does your client connect to that you",
    "start": "321600",
    "end": "326940"
  },
  {
    "text": "can have one client connecting to each of those individual graphs think about it you've got multiple teams",
    "start": "326940",
    "end": "336199"
  },
  {
    "text": "multiple development teams and each one of them building individual graphql apis",
    "start": "337139",
    "end": "343440"
  },
  {
    "text": "now going back to this diagram here I promise you'll be seeing a lot of",
    "start": "343440",
    "end": "348840"
  },
  {
    "text": "those these diagrams and it's going to be the washer that nightmare tonight for you so",
    "start": "348840",
    "end": "354180"
  },
  {
    "text": "I'm warning you so we've got movies reviews and users graphical apis",
    "start": "354180",
    "end": "360419"
  },
  {
    "text": "the client is connecting to that so what's happening here is that instead of sending one single having one single",
    "start": "360419",
    "end": "367380"
  },
  {
    "text": "graph and submitting one single request your client needs to know of all of these individual apis",
    "start": "367380",
    "end": "373979"
  },
  {
    "text": "and that's where the problem is your clan needs to be aware of all of them",
    "start": "373979",
    "end": "379979"
  },
  {
    "text": "and do you need to what if all of those apis are secured in the back end",
    "start": "379979",
    "end": "385139"
  },
  {
    "text": "which is the best practice and you need to make sure it's secured right in order to avoid anyone getting your data",
    "start": "385139",
    "end": "391380"
  },
  {
    "text": "so that means you need to authenticate against each individual apis that's out there",
    "start": "391380",
    "end": "396840"
  },
  {
    "text": "and this equality reduces a primary purpose of what graphql was built for",
    "start": "396840",
    "end": "404240"
  },
  {
    "text": "and hence this is where my talk is all about in order to improve this what we need to",
    "start": "405539",
    "end": "412680"
  },
  {
    "text": "do the most logical science is to add an API Gateway in the middle",
    "start": "412680",
    "end": "418020"
  },
  {
    "text": "but how do we do this with graphql well the first option that was created",
    "start": "418020",
    "end": "425639"
  },
  {
    "text": "was key code schema stitching it's pretty good and it's been around for a while",
    "start": "425639",
    "end": "431520"
  },
  {
    "text": "the primary purpose of schema stitching is not to focus on the sub schema like",
    "start": "431520",
    "end": "436740"
  },
  {
    "text": "we've got here so it calls individual apis that you're building as sub schemas and then you've got your gateway schema",
    "start": "436740",
    "end": "444120"
  },
  {
    "text": "focus is here on the Gateway schema so it's basically just here",
    "start": "444120",
    "end": "451080"
  },
  {
    "text": "imagine your building a Gateway that will Access Data from all of those apis at one point it",
    "start": "451080",
    "end": "457259"
  },
  {
    "text": "will become a very complex especially if you've got now we've got three but what if we have 10 graphql apis that we're",
    "start": "457259",
    "end": "463500"
  },
  {
    "text": "connecting to so you need to understand each one of them and then",
    "start": "463500",
    "end": "468900"
  },
  {
    "text": "uh the necessary resolvers within the Gateway so that means there's a lot of code that you need to add within that",
    "start": "468900",
    "end": "475259"
  },
  {
    "text": "Gateway but what if one of those one or two of those API schema changes",
    "start": "475259",
    "end": "480960"
  },
  {
    "text": "it's a breaking change so that means you need to make sure you understand what the changes were and",
    "start": "480960",
    "end": "487139"
  },
  {
    "text": "then make the necessary changes in your gateway as well I'm not saying schema stitching is bad",
    "start": "487139",
    "end": "493440"
  },
  {
    "text": "it's still good it has its own merits for example you don't need to worry",
    "start": "493440",
    "end": "499020"
  },
  {
    "text": "about any of the sub schemas how they're built as long as you know what the schema is you can",
    "start": "499020",
    "end": "505319"
  },
  {
    "text": "definitely resolve it because there's no dependence on those sub schemas but I'd like to introduce you to Apollo",
    "start": "505319",
    "end": "512099"
  },
  {
    "text": "Federation which is what I've been learning a lot about um so with Apollo Federation we've got",
    "start": "512099",
    "end": "518399"
  },
  {
    "text": "concept called the supergraph which is your gateway and then the subscript the sub graph",
    "start": "518399",
    "end": "523919"
  },
  {
    "text": "the primary focus of Apollo Federation is on the subgraph itself so the focus is right here",
    "start": "523919",
    "end": "531660"
  },
  {
    "text": "don't need to worry too much about the supergraph that can be being maintained",
    "start": "531660",
    "end": "537060"
  },
  {
    "text": "by someone else but even them they won't be doing a lot of work on that supergraph because there's a lot of",
    "start": "537060",
    "end": "543839"
  },
  {
    "text": "focus focus going on in that space I'm telling you",
    "start": "543839",
    "end": "549320"
  },
  {
    "text": "so that means that you'll be writing a lot less code on your supergraph and focusing only on what you're building",
    "start": "549899",
    "end": "555959"
  },
  {
    "text": "the sub graph itself but there is a downside with that your sub graph needs to understand apple or",
    "start": "555959",
    "end": "563279"
  },
  {
    "text": "Federation it needs to use some specific directives at Apollo Federation supports",
    "start": "563279",
    "end": "568440"
  },
  {
    "text": "in order for your super graph to be able to interpret that and create your supergraph schema for you",
    "start": "568440",
    "end": "576440"
  },
  {
    "text": "two we're going to dive a little bit more into Apollo Federation which I hope you're looking forward to that like my",
    "start": "578100",
    "end": "585180"
  },
  {
    "text": "friend here Dash who wants to learn a little bit more about it",
    "start": "585180",
    "end": "590279"
  },
  {
    "text": "awesome I'm gonna kick off with this quote from the Apollo graphql team",
    "start": "590279",
    "end": "595800"
  },
  {
    "text": "so basically what this is saying is Apollo Federation is a powerful open",
    "start": "595800",
    "end": "601620"
  },
  {
    "text": "source architecture that helps you build a unified supergraph",
    "start": "601620",
    "end": "607440"
  },
  {
    "text": "that combines multiple indiv and then graphql apis but the point here is",
    "start": "607440",
    "end": "613200"
  },
  {
    "text": "a unified supergraph that's two words that I want you to",
    "start": "613200",
    "end": "618660"
  },
  {
    "text": "leave out with um about this super graph itself",
    "start": "618660",
    "end": "624060"
  },
  {
    "text": "so what does that mean within Apollo Federation that whole",
    "start": "624060",
    "end": "630120"
  },
  {
    "text": "architecture that you're seeing here the sub graph the super graph and interaction with the client application",
    "start": "630120",
    "end": "636240"
  },
  {
    "text": "that's known as a Federated architecture what's cool about it is that you can",
    "start": "636240",
    "end": "641519"
  },
  {
    "text": "have as many multiple graphql apis as you want",
    "start": "641519",
    "end": "647000"
  },
  {
    "text": "and all of those can be the their schema can be composed into",
    "start": "647399",
    "end": "653940"
  },
  {
    "text": "a super graph and that is done automatically for you",
    "start": "653940",
    "end": "659240"
  },
  {
    "text": "so the sub graph itself which are these they're your individual apis that you",
    "start": "659640",
    "end": "664740"
  },
  {
    "text": "are building or your other teams are building and your super graph here this is the entry",
    "start": "664740",
    "end": "673019"
  },
  {
    "text": "point to all of those apis you're submitting requests to that super graph which is then proxying those requests",
    "start": "673019",
    "end": "679320"
  },
  {
    "text": "forward to all of the independent apis and then there's another Concept in",
    "start": "679320",
    "end": "684899"
  },
  {
    "text": "there that you need to understand which is called schema composition so that is basically the process",
    "start": "684899",
    "end": "691740"
  },
  {
    "text": "that gets all of the independent subgraph schemas and then merge them",
    "start": "691740",
    "end": "696839"
  },
  {
    "text": "together to form this super graph schema",
    "start": "696839",
    "end": "701060"
  },
  {
    "text": "so these are the three key items we've got sub graph super graph and schema",
    "start": "701940",
    "end": "707100"
  },
  {
    "text": "composition and I'm going to dive a little bit deeper into those",
    "start": "707100",
    "end": "713540"
  },
  {
    "text": "we're going to start off with sub graph and here think of this I told you you're",
    "start": "718079",
    "end": "725339"
  },
  {
    "text": "going to see a lot of those images so be prepared here we've got three sub broths and",
    "start": "725339",
    "end": "731399"
  },
  {
    "text": "we're going to start off with focusing only on that movie sub graph here so what this is is",
    "start": "731399",
    "end": "738720"
  },
  {
    "text": "just in the individual graphql apis that you're actually building it will have its own distinct schemas",
    "start": "738720",
    "end": "745920"
  },
  {
    "text": "it may contain Fields those schemas may contain fields that relates to some of the other schemas as well",
    "start": "745920",
    "end": "752160"
  },
  {
    "text": "but the important thing within a sub graph is that you need to be aware is you need to expose the type as entities",
    "start": "752160",
    "end": "759360"
  },
  {
    "text": "it needs to understand those so I'm going to kick start this off with",
    "start": "759360",
    "end": "764880"
  },
  {
    "text": "this particular schema here and that's written from AWS absync so we've got our",
    "start": "764880",
    "end": "771959"
  },
  {
    "text": "movies few graphical schema up here in this current state",
    "start": "771959",
    "end": "777660"
  },
  {
    "text": "Apple of federation won't be able to interpret this it may be able to read it but you won't",
    "start": "777660",
    "end": "782820"
  },
  {
    "text": "know what entities are and all of that stuff so to make apple operations understand",
    "start": "782820",
    "end": "787940"
  },
  {
    "text": "and interpret this schema it needs to you need to make sure that those schemas",
    "start": "787940",
    "end": "794639"
  },
  {
    "text": "are an entity and to do that you need to up attach the active directives here and",
    "start": "794639",
    "end": "801240"
  },
  {
    "text": "provide an ID which is a unique identifier for movie for example you can also use multiple keys or",
    "start": "801240",
    "end": "808800"
  },
  {
    "text": "compound keys which you can look up on the docs but generally these are what you need at the",
    "start": "808800",
    "end": "816779"
  },
  {
    "text": "most important bit you cannot include use object types or",
    "start": "816779",
    "end": "822720"
  },
  {
    "text": "even fields that contain any arguments",
    "start": "822720",
    "end": "828379"
  },
  {
    "text": "because that will basically break the whole purpose of a couple of federation and how it generates keys",
    "start": "829079",
    "end": "836779"
  },
  {
    "text": "the other bit that's most important is how do you fetch related data that exists within a separate subgraph in",
    "start": "839160",
    "end": "845700"
  },
  {
    "text": "this case we've got the movie subgraph and we've got a review soap graph we've already looked",
    "start": "845700",
    "end": "851279"
  },
  {
    "text": "at movies and it contains types that belongs only to movies but how does reviews know what movies",
    "start": "851279",
    "end": "858779"
  },
  {
    "text": "that it relates to so what you need to do is within the movie sub graph you need to create a",
    "start": "858779",
    "end": "864839"
  },
  {
    "text": "type that basically contains the ID field and that type needs to be named movies",
    "start": "864839",
    "end": "870959"
  },
  {
    "text": "and then you need to be able to resolve that type from that",
    "start": "870959",
    "end": "876000"
  },
  {
    "text": "review subgraph from the reviews API and to do that what I've done is the top bit of code",
    "start": "876000",
    "end": "882360"
  },
  {
    "text": "that's the graphical schema at least the partial bit of that from the review service and then we've got the resolvers",
    "start": "882360",
    "end": "889019"
  },
  {
    "text": "at the bottom So within the schema",
    "start": "889019",
    "end": "893899"
  },
  {
    "text": "this is all we need we need to make sure we've got an ID field that basically maps to the related movies within the",
    "start": "894300",
    "end": "900180"
  },
  {
    "text": "movie sub graph and that's idif identifiable by the keyword X the",
    "start": "900180",
    "end": "905579"
  },
  {
    "text": "directive at external within that type there and then we're just basically",
    "start": "905579",
    "end": "910920"
  },
  {
    "text": "creating our reviews field within that which relates to the review type within",
    "start": "910920",
    "end": "916019"
  },
  {
    "text": "the review service and within the review step we're basically just creating another field",
    "start": "916019",
    "end": "921959"
  },
  {
    "text": "that maps to movie the next step is to create a resolve reference within your resolvers that",
    "start": "921959",
    "end": "929160"
  },
  {
    "text": "basically returns all of the reviews that matches to that particular movie ID that's passing in",
    "start": "929160",
    "end": "936920"
  },
  {
    "text": "and more or less that's what you need to do in order to resolve the related entities",
    "start": "937680",
    "end": "942779"
  },
  {
    "text": "within your subgraph but the next step is you need to a way",
    "start": "942779",
    "end": "948420"
  },
  {
    "text": "to expose those entities to Apollo Federation the Apollo Gateway so that it understands this and to do that you need",
    "start": "948420",
    "end": "954540"
  },
  {
    "text": "to explain a little bit more where you create a union entity type here which we're saying hey these are the entities",
    "start": "954540",
    "end": "961800"
  },
  {
    "text": "that I want to expose to Apollo Gateway if I excluded director from there so",
    "start": "961800",
    "end": "967860"
  },
  {
    "text": "Apple will get we will not inter will not pick up direct as an entity within that sub graph it will only pick up",
    "start": "967860",
    "end": "974040"
  },
  {
    "text": "movies and the next step there is you need to",
    "start": "974040",
    "end": "979980"
  },
  {
    "text": "make sure you have this type here which basically returns an sdl field and that is a schema",
    "start": "979980",
    "end": "988260"
  },
  {
    "text": "definition language and that's a format that Apollo at the Apollo Gateway is expecting",
    "start": "988260",
    "end": "994680"
  },
  {
    "text": "and the next step is to create the underscore service and then entities field here these are the two required",
    "start": "994680",
    "end": "1002120"
  },
  {
    "text": "Fields that's needed within your subgraph and by then you're mostly done",
    "start": "1002120",
    "end": "1007399"
  },
  {
    "text": "and the Apple Refrigeration can identify and then download the necessary schema and pick up the types that you need from",
    "start": "1007399",
    "end": "1014240"
  },
  {
    "text": "the sub graph cool these are some of the directives that",
    "start": "1014240",
    "end": "1019820"
  },
  {
    "text": "I've spoken about there are some others like I've spoken about external as well",
    "start": "1019820",
    "end": "1025520"
  },
  {
    "text": "which is basically used to specify a field that will need to be used resolved by another subgraph",
    "start": "1025520",
    "end": "1032959"
  },
  {
    "text": "like ID for example within our movie sub graph we've got ID and within the review sub graph within our movies type we've",
    "start": "1032959",
    "end": "1039740"
  },
  {
    "text": "got idea as well so those relates together the next type which is",
    "start": "1039740",
    "end": "1047240"
  },
  {
    "text": "pretty important there is the provides directive",
    "start": "1047240",
    "end": "1052760"
  },
  {
    "text": "so that basically states that within your review sub graph for example",
    "start": "1052760",
    "end": "1058580"
  },
  {
    "text": "if you've got a type called title when you're requesting data there's no",
    "start": "1058580",
    "end": "1065000"
  },
  {
    "text": "title within your review service what it will do it will say hey I know where to get this title it's within the movie",
    "start": "1065000",
    "end": "1071120"
  },
  {
    "text": "server so I can just go there and fetch that from there and that what provides means",
    "start": "1071120",
    "end": "1077720"
  },
  {
    "text": "if you wanted to include the similar field that exists within another subgraph within your own sub graph at",
    "start": "1077720",
    "end": "1083720"
  },
  {
    "text": "your building and another important one which is here",
    "start": "1083720",
    "end": "1089179"
  },
  {
    "text": "is a required subgraph requires field requires directive sorry which means that",
    "start": "1089179",
    "end": "1096500"
  },
  {
    "text": "reviews here will be available on Leaf title exist and you have all of those flexibilities",
    "start": "1096500",
    "end": "1103640"
  },
  {
    "text": "to Output what you want to Output within yourself graph and when",
    "start": "1103640",
    "end": "1109240"
  },
  {
    "text": "cool we've looked at sub graph and this is",
    "start": "1110960",
    "end": "1117020"
  },
  {
    "text": "summary of what we've talked I've talked about which is individual apis and also each of these individual apis",
    "start": "1117020",
    "end": "1123320"
  },
  {
    "text": "contains distinct schemas which may or may not relate to other schemas in other subgraphs",
    "start": "1123320",
    "end": "1132020"
  },
  {
    "text": "and we've talked about entities extending entities and exposing schemas to the Gateway as well",
    "start": "1132020",
    "end": "1139419"
  },
  {
    "text": "but let's look at the super graph which is the most interesting bit here",
    "start": "1140419",
    "end": "1145720"
  },
  {
    "text": "we've got our super graph which is our Gateway the entry point to the data that's being",
    "start": "1146960",
    "end": "1152840"
  },
  {
    "text": "stored regardless where those subgraphs are located right",
    "start": "1152840",
    "end": "1157360"
  },
  {
    "text": "and from then on this super graph contains a super graph schema",
    "start": "1157940",
    "end": "1164559"
  },
  {
    "text": "this is an example of a supergraph schema which is basically a combined schemas",
    "start": "1164660",
    "end": "1170840"
  },
  {
    "text": "from each of the individual subgraphs and also appends some of the",
    "start": "1170840",
    "end": "1176780"
  },
  {
    "text": "special directives at Apple Federation interprets but the most important bit here that I",
    "start": "1176780",
    "end": "1182539"
  },
  {
    "text": "want to pull out is this game as you don't need to generate them it's automatically generated",
    "start": "1182539",
    "end": "1190900"
  },
  {
    "text": "the first time I saw that I was so excited because",
    "start": "1191179",
    "end": "1196400"
  },
  {
    "text": "wow just look at that word automatically generated you don't need to do anything similar to how you need to build all of",
    "start": "1196400",
    "end": "1202820"
  },
  {
    "text": "that with schema stitching which is freaking awesome",
    "start": "1202820",
    "end": "1207980"
  },
  {
    "text": "initially I was I didn't believe it so I had to test it you know how we are at steps and when I got that working it was",
    "start": "1207980",
    "end": "1215360"
  },
  {
    "text": "my mind was blown but how does that occur",
    "start": "1215360",
    "end": "1221059"
  },
  {
    "text": "there is a process called schema composition which basically takes your sub graph",
    "start": "1221059",
    "end": "1227720"
  },
  {
    "text": "schema once you've updated your sub graph it basically uploads to us Apollo schema",
    "start": "1227720",
    "end": "1234020"
  },
  {
    "text": "registry and from there on the Apollo Uplink which is there",
    "start": "1234020",
    "end": "1239299"
  },
  {
    "text": "is notified here I've got a new schema that's been updated I need to update the supergraph schema",
    "start": "1239299",
    "end": "1245059"
  },
  {
    "text": "and apple opening just updates that for you and then we've got the Gateway which is continuously pulling",
    "start": "1245059",
    "end": "1252020"
  },
  {
    "text": "pulling the Apple Uplink and from then on if there's a new update it downloads that and you can start consuming the",
    "start": "1252020",
    "end": "1258260"
  },
  {
    "text": "updated scheme on the cloud I'll be going a little bit deeper into that in a bit but this is",
    "start": "1258260",
    "end": "1264440"
  },
  {
    "text": "how that whole process work but there is another interesting bit",
    "start": "1264440",
    "end": "1270799"
  },
  {
    "text": "so we're going to look at how query execution works freaking awesome",
    "start": "1270799",
    "end": "1276320"
  },
  {
    "text": "so we've got a movie subgraph which is at the top we've looked at that a lot and then the reviews so graph at the",
    "start": "1276320",
    "end": "1281840"
  },
  {
    "text": "bottom right and on the mobile app there we have the query that's saying Hey I want to get",
    "start": "1281840",
    "end": "1287660"
  },
  {
    "text": "reviews for movies one so request is submitted and once it gets",
    "start": "1287660",
    "end": "1293840"
  },
  {
    "text": "to the super graph Gateway what happens there is",
    "start": "1293840",
    "end": "1299240"
  },
  {
    "text": "a Gateway creates this amazingly query plan it basically prepares what it needs",
    "start": "1299240",
    "end": "1305600"
  },
  {
    "text": "to do then I'd love to appear what we're seeing is it's saying hey I've got",
    "start": "1305600",
    "end": "1312500"
  },
  {
    "text": "to fetch movies first from the movies this help graph",
    "start": "1312500",
    "end": "1318020"
  },
  {
    "text": "and then I need to fetch the additional reviews from the review subgraph",
    "start": "1318020",
    "end": "1325400"
  },
  {
    "text": "how freaking cool is that and you can actually debug that in logo OR Logo of that out in your logs if you want to",
    "start": "1325400",
    "end": "1331400"
  },
  {
    "text": "look at it so the process is this based on that query plan it fetches movies from the",
    "start": "1331400",
    "end": "1338299"
  },
  {
    "text": "movie subgraph and then get the reviews from the review",
    "start": "1338299",
    "end": "1343400"
  },
  {
    "text": "subgraphs and Returns the data combine the data and returns it to the client",
    "start": "1343400",
    "end": "1349419"
  },
  {
    "text": "are you excited about how cool is that you don't need to do anything",
    "start": "1349700",
    "end": "1356320"
  },
  {
    "text": "so what your gateway looks like is something as simple as this um you're basically just getting your",
    "start": "1358039",
    "end": "1364460"
  },
  {
    "text": "super graph schema that's been generated create your Apple or Gateway and then injecting Apollo Gateway within an",
    "start": "1364460",
    "end": "1371000"
  },
  {
    "text": "Apollo server and that's it that's the basic that you need but what if your API is being protected by an API key",
    "start": "1371000",
    "end": "1378260"
  },
  {
    "text": "well you can create a little bit more complicated code where you need to inherit the remote graph data source",
    "start": "1378260",
    "end": "1384620"
  },
  {
    "text": "graphql data source and override I will send requests",
    "start": "1384620",
    "end": "1390500"
  },
  {
    "text": "with and in there you'll basically just injecting your API Keys Etc and down",
    "start": "1390500",
    "end": "1395780"
  },
  {
    "text": "here you're overriding the build service and using the authentic and returning the",
    "start": "1395780",
    "end": "1401360"
  },
  {
    "text": "authenticated data source and that's more or less it it's a little bit more complicated than",
    "start": "1401360",
    "end": "1407780"
  },
  {
    "text": "the previous interp implementation that I've showed you but you can do that and the other option as well is you can",
    "start": "1407780",
    "end": "1414140"
  },
  {
    "text": "return responses similarly you can inherit the remote graphql data source",
    "start": "1414140",
    "end": "1420320"
  },
  {
    "text": "here return server IDs and all of that down here over either build service",
    "start": "1420320",
    "end": "1425600"
  },
  {
    "text": "again and then you need to do an extra leg work within your Apollo server",
    "start": "1425600",
    "end": "1431059"
  },
  {
    "text": "and return the correct values with adequate values within your HTTP headers",
    "start": "1431059",
    "end": "1439000"
  },
  {
    "text": "so that's a summary of super graph for you where it's the entry point of your gateway",
    "start": "1439039",
    "end": "1444380"
  },
  {
    "text": "and the most important bit is that your schema supergraph schema is automatically generated just remember",
    "start": "1444380",
    "end": "1450500"
  },
  {
    "text": "that next bit is a schema composition process which I'm going to go through quickly",
    "start": "1450500",
    "end": "1458780"
  },
  {
    "text": "so we've got your super graph which is basically downloading all of your schemas from your various subgraph",
    "start": "1458780",
    "end": "1464480"
  },
  {
    "text": "and creating your super graph schema you can do that using Apollo Studio",
    "start": "1464480",
    "end": "1470720"
  },
  {
    "text": "or a tool called Rover CLI so with that there are two types of schema",
    "start": "1470720",
    "end": "1476120"
  },
  {
    "text": "composition process there's a managed Federation composition and then a local composition",
    "start": "1476120",
    "end": "1481520"
  },
  {
    "text": "with managed Federation is a diagram that I showed you earlier",
    "start": "1481520",
    "end": "1487100"
  },
  {
    "text": "so what happens is we've got the movie sub graph that gets updated which get",
    "start": "1487100",
    "end": "1492380"
  },
  {
    "text": "basically updates gets updated in a schema registry and then that is notified by the",
    "start": "1492380",
    "end": "1499100"
  },
  {
    "text": "notifies the Apple rolling that hey the schema has been updated",
    "start": "1499100",
    "end": "1504200"
  },
  {
    "text": "updates the super graph and then downloads that again if you use this graph gets sub graph",
    "start": "1504200",
    "end": "1509900"
  },
  {
    "text": "gets updated it's the same process again until it gets there and then go to the",
    "start": "1509900",
    "end": "1515179"
  },
  {
    "text": "Apollo link and then downloads those requests I wonder you may be thinking what if",
    "start": "1515179",
    "end": "1521419"
  },
  {
    "text": "polling fails well there's retries within Apple over within",
    "start": "1521419",
    "end": "1527000"
  },
  {
    "text": "um the Gateway attempts to try about every 10 seconds but it retries five",
    "start": "1527000",
    "end": "1532279"
  },
  {
    "text": "times until if it fails on the fifth time it needs to reschedule again",
    "start": "1532279",
    "end": "1537980"
  },
  {
    "text": "on its normally scheduled period until you fix those issues that that",
    "start": "1537980",
    "end": "1544880"
  },
  {
    "text": "cause that failure but at that point in time the important bit is that your super graph schema Remains the version",
    "start": "1544880",
    "end": "1551419"
  },
  {
    "text": "that was there and working so it doesn't fail completely it's still there at the previous version",
    "start": "1551419",
    "end": "1557600"
  },
  {
    "text": "that was actually working this is",
    "start": "1557600",
    "end": "1563299"
  },
  {
    "text": "summary of a code that I wrote which is similar to that request that I submitted that I",
    "start": "1563299",
    "end": "1568640"
  },
  {
    "text": "showed you earlier within that app and the response on the far right hand side and that's in Apollo studio so basically",
    "start": "1568640",
    "end": "1574580"
  },
  {
    "text": "I've asked for movies and we're getting movies within the movie sub graph and reviews from the reviews subgraph and",
    "start": "1574580",
    "end": "1582140"
  },
  {
    "text": "it's all in one request think about it single graph single",
    "start": "1582140",
    "end": "1587360"
  },
  {
    "text": "request but it's on the back end it's multiple subgraphs",
    "start": "1587360",
    "end": "1592539"
  },
  {
    "text": "so the other process is called local schema composition which basically we're using a tool called",
    "start": "1593240",
    "end": "1600460"
  },
  {
    "text": "Rover CLI if you're someone that doesn't want to use Apollo Cloud for example where we've",
    "start": "1600559",
    "end": "1607820"
  },
  {
    "text": "got the Uplink and the Apollo schema registry you can use Rover CLI to actually set configure all the same",
    "start": "1607820",
    "end": "1614539"
  },
  {
    "text": "features within your own CI pipeline so this is the example that I showed you",
    "start": "1614539",
    "end": "1620360"
  },
  {
    "text": "previously where we've got we've built injected the supergraph sdl",
    "start": "1620360",
    "end": "1627260"
  },
  {
    "text": "within the Apollo Gateway but that's just a string at that point in time and if we wanted to make Rover",
    "start": "1627260",
    "end": "1633980"
  },
  {
    "text": "CLI work similarly to how managed Federation work without",
    "start": "1633980",
    "end": "1639340"
  },
  {
    "text": "using Apollo Cloud you can do something like this where within the Apollo Gateway",
    "start": "1639440",
    "end": "1647059"
  },
  {
    "text": "you can override the supergraph sdl function there is that function there that provides you with an update",
    "start": "1647059",
    "end": "1653000"
  },
  {
    "text": "function in the health check and you can create a watcher within your",
    "start": "1653000",
    "end": "1659360"
  },
  {
    "text": "within that function which basically watches whenever the super graph file gets updated the super graph schema gets",
    "start": "1659360",
    "end": "1666080"
  },
  {
    "text": "updated and at that point what you're basically doing is we're saying hey this has been of the super graph schema has",
    "start": "1666080",
    "end": "1672020"
  },
  {
    "text": "been updated I want to read that file and update the client and that's it you can use health check functions there to check if",
    "start": "1672020",
    "end": "1678679"
  },
  {
    "text": "there's any issues with your super graph schema if there are errors then you want to fail safely but at the same time your",
    "start": "1678679",
    "end": "1685039"
  },
  {
    "text": "original schema that's working will still work",
    "start": "1685039",
    "end": "1690399"
  },
  {
    "text": "and then you're basically just returning that cool",
    "start": "1691460",
    "end": "1697480"
  },
  {
    "text": "so this is again where you can just use a command over super graph compose",
    "start": "1698059",
    "end": "1703820"
  },
  {
    "text": "and if you wanted to use that within your CI you can create a yaml file which",
    "start": "1703820",
    "end": "1709760"
  },
  {
    "text": "is on on your right my left confusing",
    "start": "1709760",
    "end": "1716059"
  },
  {
    "text": "and this is as simple as creating naming your sub graph like we've got",
    "start": "1716059",
    "end": "1722059"
  },
  {
    "text": "movies and reviews and then setting your routing URL where it's going to submit all of the requests and your subgraph",
    "start": "1722059",
    "end": "1727880"
  },
  {
    "text": "url where it's going to get your schemas your SEO schemas they can be different those URLs but most of the time it's",
    "start": "1727880",
    "end": "1735260"
  },
  {
    "text": "more or less the same you can also use file if your sub graph schema is within",
    "start": "1735260",
    "end": "1740299"
  },
  {
    "text": "your Gateway repo there is another concept before we go",
    "start": "1740299",
    "end": "1746840"
  },
  {
    "text": "into a small demo part which is called breaking composition but I think it's pretty cool for you to",
    "start": "1746840",
    "end": "1753500"
  },
  {
    "text": "be aware of so let's say you've got movies within sub graph a and sub graph B",
    "start": "1753500",
    "end": "1758899"
  },
  {
    "text": "where real estate in this instance one is a string and the other is an integer",
    "start": "1758899",
    "end": "1766039"
  },
  {
    "text": "once you try to compose a super graph this will fail because the types are",
    "start": "1766039",
    "end": "1771320"
  },
  {
    "text": "different Apollo graphql Compares this to",
    "start": "1771320",
    "end": "1777380"
  },
  {
    "text": "like a compile error and this is a quote from their dogs it's basically a compile",
    "start": "1777380",
    "end": "1782720"
  },
  {
    "text": "error stops generating the supergraph schema",
    "start": "1782720",
    "end": "1788059"
  },
  {
    "text": "but your previous schema that was working is still there and still working you can still access those so that",
    "start": "1788059",
    "end": "1793880"
  },
  {
    "text": "basically prevents you from making any errors until you fix that issue so once you go back and fix that issue with the",
    "start": "1793880",
    "end": "1800299"
  },
  {
    "text": "typing then with that polling approach that is continuously pulling the Uplink or",
    "start": "1800299",
    "end": "1805640"
  },
  {
    "text": "whether you've implemented your own watcher that once that is fixed then that super",
    "start": "1805640",
    "end": "1810980"
  },
  {
    "text": "graph will schema will be automatically generated again",
    "start": "1810980",
    "end": "1815559"
  },
  {
    "text": "cool we've got schema composition",
    "start": "1816020",
    "end": "1821380"
  },
  {
    "text": "working where it's basically just composing your super graph we've looked at both managed Federation composition",
    "start": "1821419",
    "end": "1828020"
  },
  {
    "text": "and local schema composition but now it's time for a little bit of a",
    "start": "1828020",
    "end": "1833480"
  },
  {
    "text": "demo so what I have is I'm going to be using",
    "start": "1833480",
    "end": "1838580"
  },
  {
    "text": "Apollo Studio sandbox Explorer I've got the supergraph Gateway hosted within a",
    "start": "1838580",
    "end": "1844520"
  },
  {
    "text": "Lambda function behind an API Gateway in AWS and the movie sub graph using AWS",
    "start": "1844520",
    "end": "1850760"
  },
  {
    "text": "appsync and then I've got a review sub graphing they'll use a subgraph",
    "start": "1850760",
    "end": "1856640"
  },
  {
    "text": "hosting using Apple of server inside an Azure function",
    "start": "1856640",
    "end": "1862720"
  },
  {
    "text": "so there are two versions of Apollo Federation at the moment and they're compatible",
    "start": "1863299",
    "end": "1868460"
  },
  {
    "text": "that's what's awesome the difference is that with appsync it's only it only supports Apple",
    "start": "1868460",
    "end": "1875659"
  },
  {
    "text": "Federation one at the moment and for the other ones where I'm using",
    "start": "1875659",
    "end": "1881899"
  },
  {
    "text": "Apple server I'm just using like for the Gateway this movies of the reviews of",
    "start": "1881899",
    "end": "1887059"
  },
  {
    "text": "graphene users I'm using Apple Federation too the beauty here is that they are all compatible",
    "start": "1887059",
    "end": "1892700"
  },
  {
    "text": "like the directives that you've used in apple server one in AWS appsync in that",
    "start": "1892700",
    "end": "1898100"
  },
  {
    "text": "movie sub graph is compatible with apple server 2 which is freaking awesome",
    "start": "1898100",
    "end": "1903940"
  },
  {
    "text": "there are some slide gotchas with appsync whereas you need to implement all of these yourself which I have gone",
    "start": "1904580",
    "end": "1911000"
  },
  {
    "text": "through but with Apollo server all of this is done magically for you you don't need to write all of those",
    "start": "1911000",
    "end": "1916460"
  },
  {
    "text": "highlighted codes there which keeps your schema a little bit cleaner",
    "start": "1916460",
    "end": "1921700"
  },
  {
    "text": "including the resolvers if you need to do any of that cool awesome I'm gonna quickly go",
    "start": "1921700",
    "end": "1929179"
  },
  {
    "text": "through some demo I've got about 10 minutes which should be more than enough cool",
    "start": "1929179",
    "end": "1936158"
  },
  {
    "text": "right",
    "start": "1936559",
    "end": "1939460"
  },
  {
    "text": "quickly sign in",
    "start": "1951679",
    "end": "1957559"
  },
  {
    "text": "and here reload cool so this is",
    "start": "1957559",
    "end": "1964100"
  },
  {
    "text": "a Sandbox where I've got currently have movies directors and users in here I don't have",
    "start": "1964100",
    "end": "1971179"
  },
  {
    "text": "any relation to reviews or anything like that what I want you to see is that there's",
    "start": "1971179",
    "end": "1976700"
  },
  {
    "text": "no reviews and as soon as I submit this these are the results that I'm getting",
    "start": "1976700",
    "end": "1982760"
  },
  {
    "text": "but on the right hand side and if I dive into the movies type you",
    "start": "1982760",
    "end": "1989480"
  },
  {
    "text": "can see there's only three fields at the moment I'm going to quickly go through the",
    "start": "1989480",
    "end": "1996799"
  },
  {
    "text": "cloud watch for a bit here just to show you what the query plan that gets generated is",
    "start": "1996799",
    "end": "2005919"
  },
  {
    "text": "oops wrong logo",
    "start": "2010720",
    "end": "2017039"
  },
  {
    "text": "so for that query this is that query plan that I showed you",
    "start": "2024340",
    "end": "2030159"
  },
  {
    "text": "earlier so this is get generator which is pretty simple and Apple Gateway knows that hey I need to",
    "start": "2030159",
    "end": "2036580"
  },
  {
    "text": "fetch those data from the movie sub graph and that's it that's fairly easy",
    "start": "2036580",
    "end": "2042279"
  },
  {
    "text": "but what I'm gonna do now is I'm going to go back to vs code here so this is",
    "start": "2042279",
    "end": "2048040"
  },
  {
    "text": "the structure of my code currently I've got a Federated Gateway project here and all of those are individual",
    "start": "2048040",
    "end": "2055118"
  },
  {
    "text": "projects and apis that you can that's built independently",
    "start": "2055119",
    "end": "2060638"
  },
  {
    "text": "and then I've got the movies API which is using appsync all of those can be deployed independently as well",
    "start": "2060639",
    "end": "2067480"
  },
  {
    "text": "so what I'm gonna do here I'm going to go into features this is currently my Gateway which is",
    "start": "2067480",
    "end": "2073118"
  },
  {
    "text": "what score that I've shown you within the slides and this is my apple or stock Ram",
    "start": "2073119",
    "end": "2080980"
  },
  {
    "text": "building so what I'm gonna do is just enable this stack um the Apollo reviews here",
    "start": "2080980",
    "end": "2087720"
  },
  {
    "text": "and just deploy that stack so what will happen the expectation is that if the demo Gods is with me is that after",
    "start": "2094300",
    "end": "2102820"
  },
  {
    "text": "after this is successful this deployment is successful we will start seeing",
    "start": "2102820",
    "end": "2109740"
  },
  {
    "text": "reviews within the Explorer here",
    "start": "2110500",
    "end": "2116880"
  },
  {
    "text": "so while we're waiting for this to complete",
    "start": "2120640",
    "end": "2125520"
  },
  {
    "text": "there is one thing that I'd like to show you which is",
    "start": "2125680",
    "end": "2130500"
  },
  {
    "text": "this bit of code here so this is basically what's outputting that query plan within the logs",
    "start": "2131020",
    "end": "2137680"
  },
  {
    "text": "um so whenever you want to deploy whenever you want to test what query plan is being generated if you want to look into that you can basically just",
    "start": "2137680",
    "end": "2143920"
  },
  {
    "text": "use that",
    "start": "2143920",
    "end": "2146338"
  },
  {
    "text": "it's still deploying I want to also show you the differences",
    "start": "2149140",
    "end": "2154599"
  },
  {
    "text": "between I've got",
    "start": "2154599",
    "end": "2158940"
  },
  {
    "text": "the movies schema here and then if we look at the review schema",
    "start": "2162339",
    "end": "2170400"
  },
  {
    "text": "see the difference between the two the review schema is being hosted on Apollo server",
    "start": "2181240",
    "end": "2187900"
  },
  {
    "text": "you don't need to add any of those types here any of those fields here not even",
    "start": "2187900",
    "end": "2192940"
  },
  {
    "text": "the type any of this stuff here so all of these you don't need",
    "start": "2192940",
    "end": "2198760"
  },
  {
    "text": "so why this work is if we go inside",
    "start": "2198760",
    "end": "2204000"
  },
  {
    "text": "the index where we're writing the resolvers",
    "start": "2204640",
    "end": "2210599"
  },
  {
    "text": "let's discuss this or this here",
    "start": "2210700",
    "end": "2215640"
  },
  {
    "text": "this is done by Magic with this function here which basically builds all",
    "start": "2217240",
    "end": "2223780"
  },
  {
    "text": "of the necessary fields and adds all of those now we know that the bill has been",
    "start": "2223780",
    "end": "2230200"
  },
  {
    "text": "successfully completed down here and if we go back here uh we're hoping",
    "start": "2230200",
    "end": "2238000"
  },
  {
    "text": "this should refresh in a bit",
    "start": "2238000",
    "end": "2241980"
  },
  {
    "text": "ah cool see you what's taking it sweet time oh yes it worked",
    "start": "2246700",
    "end": "2253680"
  },
  {
    "text": "awesome so we've got reviews here and now if we go inside movies where we had that movie previously you'll notice that",
    "start": "2254079",
    "end": "2260320"
  },
  {
    "text": "we've got reviews here as well which is awesome and I'm just gonna do that add",
    "start": "2260320",
    "end": "2265599"
  },
  {
    "text": "those comments in fields and basically run my query",
    "start": "2265599",
    "end": "2271060"
  },
  {
    "text": "fingers crossed voila reviews is there",
    "start": "2271060",
    "end": "2276579"
  },
  {
    "text": "and it's all being taken from a different a separate subgraph and if we quickly go through to",
    "start": "2276579",
    "end": "2284980"
  },
  {
    "text": "our log groups again here",
    "start": "2284980",
    "end": "2290140"
  },
  {
    "text": "search for query pan",
    "start": "2290140",
    "end": "2293940"
  },
  {
    "text": "uh social groups",
    "start": "2299440",
    "end": "2302880"
  },
  {
    "text": "thought that wasn't working for a man",
    "start": "2305320",
    "end": "2309000"
  },
  {
    "text": "so this is what that query plan looks like it's basically submitting requests to",
    "start": "2310780",
    "end": "2316440"
  },
  {
    "text": "multiple graphql apis in the back end cool",
    "start": "2316440",
    "end": "2322680"
  },
  {
    "text": "doing in terms of time awesome",
    "start": "2325839",
    "end": "2329880"
  },
  {
    "text": "what I wanted to show you as well so all of this I think we still have some time because it's because within the review",
    "start": "2331960",
    "end": "2339760"
  },
  {
    "text": "sub graph here like I explained earlier we've added this movie type here which basically",
    "start": "2339760",
    "end": "2346119"
  },
  {
    "text": "says there's a relationship here with this and the movies sub graph and the movies",
    "start": "2346119",
    "end": "2351820"
  },
  {
    "text": "entity within the movie subgraph there so all of that magic is done through here and then we're using the external",
    "start": "2351820",
    "end": "2358480"
  },
  {
    "text": "ID here that reference that say this is a reference to an external entity",
    "start": "2358480",
    "end": "2363520"
  },
  {
    "text": "and that's how Apollo Gateway identifies which graph is going to submit those",
    "start": "2363520",
    "end": "2370300"
  },
  {
    "text": "data to and which one it relates to and then map all of those together with the resolvers",
    "start": "2370300",
    "end": "2377039"
  },
  {
    "text": "was it for a quick demo I'm just gonna skip this backup",
    "start": "2379660",
    "end": "2384700"
  },
  {
    "text": "backup slide where I was going to show it a video if my thing failed I prepared",
    "start": "2384700",
    "end": "2391000"
  },
  {
    "text": "for the worst cool so in summary your key takeaways are when building graphql apis there is",
    "start": "2391000",
    "end": "2398980"
  },
  {
    "text": "a problem if you're building multiple graphical endpoints and you can use Apollo Federation which",
    "start": "2398980",
    "end": "2404500"
  },
  {
    "text": "has a Federated architecture um to build an API Gateway in front and",
    "start": "2404500",
    "end": "2410740"
  },
  {
    "text": "that with apple Federation is Concepts like super graph which is your individual apis that you're building",
    "start": "2410740",
    "end": "2417880"
  },
  {
    "text": "including sub Graphics so sorry subgraph which is individual apis and super graph which is the entry point to your apis",
    "start": "2417880",
    "end": "2424180"
  },
  {
    "text": "and then we've got a process called schema composition which is that whole process of creating your schema and",
    "start": "2424180",
    "end": "2430780"
  },
  {
    "text": "combining all of them together and lastly I ran you through a demo on how all of that works and yeah I hope",
    "start": "2430780",
    "end": "2438700"
  },
  {
    "text": "you had an awesome time and you enjoy this talk and this may be helpful for you",
    "start": "2438700",
    "end": "2444640"
  },
  {
    "text": "let me know if you have any questions thank you everyone for coming",
    "start": "2444640",
    "end": "2450960"
  },
  {
    "text": "it's waiting for the movies to be returned and then it gets um the reviews because with the when it",
    "start": "2469300",
    "end": "2476079"
  },
  {
    "text": "submits a request reviews it needs to know what id it's relating to but within",
    "start": "2476079",
    "end": "2481960"
  },
  {
    "text": "um the query plan itself if for example let's say you're submitting a request",
    "start": "2481960",
    "end": "2487240"
  },
  {
    "text": "that movies and reviews independently and not related within not within the",
    "start": "2487240",
    "end": "2494079"
  },
  {
    "text": "movies sub graph so that was it can we'll send those in parallel so there are the weather query planning structure",
    "start": "2494079",
    "end": "2500380"
  },
  {
    "text": "there are sequence options and parallel options in there so all of that is done under the hood",
    "start": "2500380",
    "end": "2506020"
  },
  {
    "text": "what I mean by like it",
    "start": "2506020",
    "end": "2509579"
  },
  {
    "text": "yeah yeah it will it will run one after the other",
    "start": "2512320",
    "end": "2518380"
  },
  {
    "text": "in sequence yep",
    "start": "2518380",
    "end": "2521460"
  },
  {
    "text": "uh yes yes you can um it will work similarly um based on where",
    "start": "2527339",
    "end": "2534220"
  },
  {
    "text": "those data is being sent and what's in your mutations of graph",
    "start": "2534220",
    "end": "2540180"
  },
  {
    "text": "yep",
    "start": "2541660",
    "end": "2544380"
  },
  {
    "text": "yes but it's not advisable it's I guess it so the whole purpose of",
    "start": "2547800",
    "end": "2555520"
  },
  {
    "text": "it is the idea is that you'll have only on one single graph right which is if you're",
    "start": "2555520",
    "end": "2561220"
  },
  {
    "text": "trying like I said before we're there send way users as well so we can make whatever we want but at",
    "start": "2561220",
    "end": "2567099"
  },
  {
    "text": "the same time is it best practice Yeah so you need to think about that",
    "start": "2567099",
    "end": "2573700"
  },
  {
    "text": "foreign yep that you can do like a pass-through of",
    "start": "2573700",
    "end": "2579640"
  },
  {
    "text": "an API key yes",
    "start": "2579640",
    "end": "2583260"
  },
  {
    "text": "or claims information do you get that passed down as well yeah",
    "start": "2586180",
    "end": "2591940"
  },
  {
    "text": "yeah for sure you can do all of that um it depends on your own implementation now you want to implement that it will",
    "start": "2591940",
    "end": "2597700"
  },
  {
    "text": "be similar like you can even use oboe for example on behalf of if you need to use all of those authentication types as",
    "start": "2597700",
    "end": "2604000"
  },
  {
    "text": "well so it will work it just means that your gateway implementation might be",
    "start": "2604000",
    "end": "2609160"
  },
  {
    "text": "different than what I've showed you I mean set as just a basic API kit will be something else based on your own",
    "start": "2609160",
    "end": "2614440"
  },
  {
    "text": "implementation so that's it yeah so like if the Gateway shouldn't be as more complicated as what",
    "start": "2614440",
    "end": "2621400"
  },
  {
    "text": "I've shown you unless you're adding some weird over over the top logic in there but yeah",
    "start": "2621400",
    "end": "2628920"
  },
  {
    "text": "um",
    "start": "2629260",
    "end": "2631260"
  },
  {
    "text": "uh you should be um I haven't played around with it with that that much but",
    "start": "2642579",
    "end": "2647800"
  },
  {
    "text": "based on the docs um it's meant for Enterprise for this sort of Enterprise",
    "start": "2647800",
    "end": "2654099"
  },
  {
    "text": "um how do you say Enterprise approach um so yeah it should be able to do all of that but I haven't really delved into",
    "start": "2654099",
    "end": "2660700"
  },
  {
    "text": "that space yet as of yet so yeah",
    "start": "2660700",
    "end": "2665040"
  },
  {
    "text": "yeah another question is the difference between the schema",
    "start": "2665859",
    "end": "2672640"
  },
  {
    "text": "stitching to Federation yep [Music]",
    "start": "2672640",
    "end": "2678720"
  },
  {
    "text": "what what do you want to know so in terms of like like obviously Federation and schema",
    "start": "2678720",
    "end": "2686440"
  },
  {
    "text": "searching from my perspective this basically yeah from a diagrams",
    "start": "2686440",
    "end": "2691480"
  },
  {
    "text": "perspective yes but how is it the thing so with stitching",
    "start": "2691480",
    "end": "2699520"
  },
  {
    "text": "all of those schema super graph schema that I've shown you're basically writing all of",
    "start": "2699520",
    "end": "2706119"
  },
  {
    "text": "those yourself with stitching so you're writing all of those yourself and",
    "start": "2706119",
    "end": "2713319"
  },
  {
    "text": "what will happen is that at some point your gateway will become overly complicated and if the sub graph the sub",
    "start": "2713319",
    "end": "2721780"
  },
  {
    "text": "scheme as they call it in stitching changes there's a breaking change there you need to understand what those",
    "start": "2721780",
    "end": "2728079"
  },
  {
    "text": "breaking change there and at the same time make the same changes within your gateway as well within your gateway",
    "start": "2728079",
    "end": "2735819"
  },
  {
    "text": "schema but whereas with Federation you don't need to do that because all you care about is changing your subgraph",
    "start": "2735819",
    "end": "2743020"
  },
  {
    "text": "and then the scheme automatic the supergraph scheme automatically gets",
    "start": "2743020",
    "end": "2748240"
  },
  {
    "text": "generated for you um so that's it's the focus with Federation is on that sub graph so you",
    "start": "2748240",
    "end": "2754359"
  },
  {
    "text": "as a Dev your focus on that sub graph and not on the Gateway whereas with schema stitching you're purely focused",
    "start": "2754359",
    "end": "2760780"
  },
  {
    "text": "on the Gateway itself and you're writing a lot of code there and the difference also is with Apollo",
    "start": "2760780",
    "end": "2768280"
  },
  {
    "text": "Federation you need to add those directives if you don't then the Gateway will not be able to interpret those and the blink",
    "start": "2768280",
    "end": "2775060"
  },
  {
    "text": "will not be able to build your schema your entities for those whereas that's the advantage of schema stitching is you",
    "start": "2775060",
    "end": "2781300"
  },
  {
    "text": "don't need any of those directives he doesn't care because you're manually building",
    "start": "2781300",
    "end": "2786880"
  },
  {
    "text": "that Gateway so that's the main difference between the two",
    "start": "2786880",
    "end": "2792359"
  },
  {
    "text": "yep what's the look",
    "start": "2793180",
    "end": "2800818"
  },
  {
    "text": "what's it like um you can run it locally it's it's all apple or server so you can run it",
    "start": "2811119",
    "end": "2817119"
  },
  {
    "text": "locally it's not not an issue so it's pretty yeah I haven't had a had an issue running it locally",
    "start": "2817119",
    "end": "2822819"
  },
  {
    "text": "um which is similar to what I was talking about local composition as well where you you're not dependent on that",
    "start": "2822819",
    "end": "2828460"
  },
  {
    "text": "apple or Cloud bit at the top um so all you're doing is everything locally and you can test that and then",
    "start": "2828460",
    "end": "2834460"
  },
  {
    "text": "you can generate your schemas within your Ci or set that up yourself um so that you remove that dependency on",
    "start": "2834460",
    "end": "2841180"
  },
  {
    "text": "an external cloud provider so yeah so you can definitely do that locally which is cool",
    "start": "2841180",
    "end": "2849119"
  },
  {
    "text": "yeah any other question",
    "start": "2849640",
    "end": "2854760"
  },
  {
    "text": "cool uh thank you everyone happy you've come and yeah I'm happy I was able to",
    "start": "2855579",
    "end": "2861220"
  },
  {
    "text": "answer your questions which is awesome just",
    "start": "2861220",
    "end": "2867540"
  }
]