[
  {
    "start": "0",
    "end": "69000"
  },
  {
    "text": "cool cool cool hi everyone little bit the echo need to get you",
    "start": "3500",
    "end": "8900"
  },
  {
    "text": "stirred but that's fine I'm really excited to be here in in pole to actually my first time really enjoyed so",
    "start": "8900",
    "end": "16100"
  },
  {
    "text": "far today we will talk about Armageddon",
    "start": "16100",
    "end": "21190"
  },
  {
    "text": "in a sense of how we will build modern web apps with a polar react more based",
    "start": "21190",
    "end": "26930"
  },
  {
    "text": "graph Gale the rest of databases and nodejs a little bit about myself my name",
    "start": "26930",
    "end": "33469"
  },
  {
    "text": "is Vadim ah Novick this is my fancy logo which is basically copy paste from the S code into scheduler how it turned today",
    "start": "33469",
    "end": "39699"
  },
  {
    "text": "I'm developer advocate at the IO and also Google developer X expelled author",
    "start": "39699",
    "end": "45739"
  },
  {
    "text": "consultant and on a daily basis I work in web mobile VR AR and IOT field I",
    "start": "45739",
    "end": "52489"
  },
  {
    "text": "probably should add AI in blockchain to be on top of buzzwords but still still",
    "start": "52489",
    "end": "57530"
  },
  {
    "text": "not there you have my Twitter handle on the down left corner and my website so",
    "start": "57530",
    "end": "63589"
  },
  {
    "text": "if you want to reach out and say hi feel free to do that and today we're gonna",
    "start": "63589",
    "end": "71690"
  },
  {
    "start": "69000",
    "end": "371000"
  },
  {
    "text": "talk about lots of technologies so what all these technologies are basically",
    "start": "71690",
    "end": "77120"
  },
  {
    "text": "about and what we gonna talk about today so we're gonna talk about a poll about",
    "start": "77120",
    "end": "83630"
  },
  {
    "text": "some reactions about some world things",
    "start": "83630",
    "end": "89870"
  },
  {
    "text": "called Mobile's types of graphs elephants and node doesn't make any",
    "start": "89870",
    "end": "96590"
  },
  {
    "text": "sense right so let's start with react so how many of you have used a used react",
    "start": "96590",
    "end": "103670"
  },
  {
    "text": "in in production great so you learned about tree or at least you use real at",
    "start": "103670",
    "end": "110450"
  },
  {
    "text": "least you've heard about react so react is basically everywhere and if you've",
    "start": "110450",
    "end": "116720"
  },
  {
    "text": "seen TV show Westworld there's actually a fragment from the from the show when",
    "start": "116720",
    "end": "123950"
  },
  {
    "text": "they used react react grade class it's like all the version but yeah so",
    "start": "123950",
    "end": "130759"
  },
  {
    "text": "something Westfold is not Facebook will talk about more weeks also so Mobile's",
    "start": "130759",
    "end": "137450"
  },
  {
    "text": "is how many of you using Mobile's or have heard about more days few people so",
    "start": "137450",
    "end": "145909"
  },
  {
    "text": "Mobius is Redux how many people have heard about Redux ok more people heard",
    "start": "145909",
    "end": "151790"
  },
  {
    "text": "about Redux so Mobius is another version of state management basically state management solution that applies for",
    "start": "151790",
    "end": "158079"
  },
  {
    "text": "functional reactive programming principles and today we will talk about",
    "start": "158079",
    "end": "163150"
  },
  {
    "text": "mobile and mobile state 3 which is a different state management but based on",
    "start": "163150",
    "end": "168650"
  },
  {
    "text": "Mobius so Mobius basically gives you the",
    "start": "168650",
    "end": "174230"
  },
  {
    "text": "following flow we have similar to readers we have actions we have state we",
    "start": "174230",
    "end": "179870"
  },
  {
    "text": "have some kind of computer values but automatically trigger reactions these reactions basically trigger a rendering",
    "start": "179870",
    "end": "186560"
  },
  {
    "text": "and update of your state it looks like",
    "start": "186560",
    "end": "191750"
  },
  {
    "text": "this we have a class to-do list and instead of class we have observable",
    "start": "191750",
    "end": "198709"
  },
  {
    "text": "to do this and computed value whenever we will update these to do this array",
    "start": "198709",
    "end": "204669"
  },
  {
    "text": "basically our component will render and we will get our state our UI updated so",
    "start": "204669",
    "end": "212870"
  },
  {
    "text": "in a sense it works like magic but under the whole it uses JavaScript proxies for",
    "start": "212870",
    "end": "218680"
  },
  {
    "text": "doing all this manipulation that seems to be basically mutable you can push",
    "start": "218680",
    "end": "225079"
  },
  {
    "text": "into this array but in fact you create a new version of this array and use it on",
    "start": "225079",
    "end": "231590"
  },
  {
    "text": "the client so on the on the UI level it will looks like this it will look like",
    "start": "231590",
    "end": "237259"
  },
  {
    "text": "this we have observer which decorates to do list view and basically we map over",
    "start": "237259",
    "end": "243769"
  },
  {
    "text": "how to do this and get a 2d view item so whenever we change these to use our",
    "start": "243769",
    "end": "253609"
  },
  {
    "text": "component is rendered another concept in",
    "start": "253609",
    "end": "259549"
  },
  {
    "text": "Mobius we can use action so anything but we we wrapped with decorate with action",
    "start": "259549",
    "end": "264949"
  },
  {
    "text": "bound is basically considered as action and in a sense Mobius is different from",
    "start": "264949",
    "end": "270380"
  },
  {
    "text": "redux Redux is more strict you have to use reducers you have to call your actions",
    "start": "270380",
    "end": "277729"
  },
  {
    "text": "and everything works you know how about to debug the whole process but mobiles it's more like you",
    "start": "277729",
    "end": "284870"
  },
  {
    "text": "can do anything that you want works like magic right so that's why I prefer for",
    "start": "284870",
    "end": "291020"
  },
  {
    "text": "example to use mobile state tree so it's kind of a love child of both of them of",
    "start": "291020",
    "end": "296060"
  },
  {
    "text": "Redux and mobiles and basically it gives you more structured way to work with",
    "start": "296060",
    "end": "302900"
  },
  {
    "text": "your state management so it's a quote from official dogs I won't read it but",
    "start": "302900",
    "end": "309949"
  },
  {
    "text": "it looks like this we create our model we have model erection and views",
    "start": "309949",
    "end": "316300"
  },
  {
    "text": "whenever we trigger a trigger action we can update our model and views are the",
    "start": "316300",
    "end": "323150"
  },
  {
    "text": "ones that we consume enjoy so whenever our model is updated the",
    "start": "323150",
    "end": "330590"
  },
  {
    "text": "reaction is triggered and the whole component is rendered so it's more structured I cannot update my models without",
    "start": "330590",
    "end": "337789"
  },
  {
    "text": "triggering these actions and it's more strict it has its specific type system",
    "start": "337789",
    "end": "343270"
  },
  {
    "text": "for example here I define that my model to do has a title and done and titles of",
    "start": "343270",
    "end": "350029"
  },
  {
    "text": "type string so it's more more structured way to do that and mobile Satori is",
    "start": "350029",
    "end": "356319"
  },
  {
    "text": "actually considered one of the best practices for using would react",
    "start": "356319",
    "end": "361330"
  },
  {
    "text": "not that Redux is not considered best practice so the both of them Mobile state tree and redux are the the",
    "start": "361330",
    "end": "369020"
  },
  {
    "text": "solution for state management trying so G in Armageddon is basically graph QL",
    "start": "369020",
    "end": "376610"
  },
  {
    "text": "how many of you have heard of using using graph kill right now okay few",
    "start": "376610",
    "end": "382909"
  },
  {
    "text": "people so I will explain a little bit further about graph kill so what is Roth",
    "start": "382909",
    "end": "388189"
  },
  {
    "text": "kill and before going into graph kill let's talk about rest how many of you",
    "start": "388189",
    "end": "393409"
  },
  {
    "text": "heard about rest api is I want everyone everyone so rest api the core idea is",
    "start": "393409",
    "end": "401599"
  },
  {
    "text": "good is to have URL for every resource you theory it's it's fine it works but not",
    "start": "401599",
    "end": "408759"
  },
  {
    "text": "not at the real-world scenario we have like lots of coupling to implementation",
    "start": "408759",
    "end": "414740"
  },
  {
    "text": "we have lots of problems like overfishing like under fetching for example if you want to get some resource",
    "start": "414740",
    "end": "421400"
  },
  {
    "text": "let's say we want to get a list of posts and for every post we have a user ID and",
    "start": "421400",
    "end": "426440"
  },
  {
    "text": "want to get the avatar image of the user we want to get its name so we are talking about another quest right now",
    "start": "426440",
    "end": "432500"
  },
  {
    "text": "right so have already two requests and let's say a user has additional data so",
    "start": "432500",
    "end": "438349"
  },
  {
    "text": "we basically couple in request or we creating specific endpoint that will serve the the very specific purpose of",
    "start": "438349",
    "end": "445940"
  },
  {
    "text": "the of the web app or the mobile app right then we need to treat all this",
    "start": "445940",
    "end": "451190"
  },
  {
    "text": "versioning and it doesn't end it just continues so we end up changing our",
    "start": "451190",
    "end": "458240"
  },
  {
    "text": "request server and to get the needed data and the good example for it I won't",
    "start": "458240",
    "end": "464659"
  },
  {
    "text": "go into it right now but you can check on the free time Star Wars API is basically an API to get",
    "start": "464659",
    "end": "470900"
  },
  {
    "text": "in data from Star Wars universe and to get all films and directors and planets",
    "start": "470900",
    "end": "478220"
  },
  {
    "text": "and vehicles you need to do tons of requests you just go and consolidate everything on the client and it's a",
    "start": "478220",
    "end": "484430"
  },
  {
    "text": "tedious work right so what is graph here right and graph kill is a query language",
    "start": "484430",
    "end": "491659"
  },
  {
    "text": "of your API and it's base it will basically works like magic all right so",
    "start": "491659",
    "end": "498800"
  },
  {
    "text": "that's how it looks like it looks pretty much similar to Jason but it's not",
    "start": "498800",
    "end": "504759"
  },
  {
    "text": "notice we don't have Collins here we have some domain-specific language for",
    "start": "504759",
    "end": "510969"
  },
  {
    "text": "querying the data but you can notice here that I asked for all films films",
    "start": "510969",
    "end": "517370"
  },
  {
    "text": "and the title and for the shape of my data returned to the client is the same",
    "start": "517370",
    "end": "524180"
  },
  {
    "text": "shape I have requested so I can always know that the data that I request it",
    "start": "524180",
    "end": "530360"
  },
  {
    "text": "will be the same when it's returned to the client so this was the simple example this is more complex example so",
    "start": "530360",
    "end": "537230"
  },
  {
    "text": "here I am using fragments which are basically reusable parts of graphical queries and",
    "start": "537230",
    "end": "543070"
  },
  {
    "text": "bunch of variables and what I try to do here I want to get all planets for each",
    "start": "543070",
    "end": "551090"
  },
  {
    "text": "planet I want to get its rotation period I want to get all the residents of the planet I want to get what type of",
    "start": "551090",
    "end": "558470"
  },
  {
    "text": "species this resident is these residents are I want to get all vehicles of the",
    "start": "558470",
    "end": "564410"
  },
  {
    "text": "residents and in which films they appeared so if we do it through rest",
    "start": "564410",
    "end": "570770"
  },
  {
    "text": "calls we have around like eight I haven't counted but it's around eight",
    "start": "570770",
    "end": "575900"
  },
  {
    "text": "calls for every planet even more than that so in graph QL basically you define",
    "start": "575900",
    "end": "582410"
  },
  {
    "text": "your types on your server you define your schema how basically your types are intertwined and connected and then from",
    "start": "582410",
    "end": "590000"
  },
  {
    "text": "the client you can query your server and to get the data server work on the concepts of resolvers it resolves this",
    "start": "590000",
    "end": "597140"
  },
  {
    "text": "data from different data sources or from one data source and returns it back to the client in the exact same shape that",
    "start": "597140",
    "end": "603740"
  },
  {
    "text": "you defined so that's why it looks like like magic so how we basically so let's",
    "start": "603740",
    "end": "611600"
  },
  {
    "text": "say we have a graphical API fine it's on the server someone created the server for us it's working how we",
    "start": "611600",
    "end": "618110"
  },
  {
    "text": "actually consume graphical API in react application we are talking here about",
    "start": "618110",
    "end": "623750"
  },
  {
    "text": "react application but we can consume graphical API even from plain JavaScript",
    "start": "623750",
    "end": "629660"
  },
  {
    "text": "we can add script tag on our page we can send a post request provide its query",
    "start": "629660",
    "end": "636080"
  },
  {
    "text": "and we'll get the data it's as simple as that but it would react we have",
    "start": "636080",
    "end": "641260"
  },
  {
    "text": "additional graphical client which help us with heavy lifting so it's called a",
    "start": "641260",
    "end": "648530"
  },
  {
    "start": "646000",
    "end": "1044000"
  },
  {
    "text": "polo client and it has its own like sometimes has its own challenges like",
    "start": "648530",
    "end": "655850"
  },
  {
    "text": "not like this ones but it looks basically similar similar something like",
    "start": "655850",
    "end": "663950"
  },
  {
    "text": "this we install packages Apple client cache in memory reactor power on linkage TTP and what we",
    "start": "663950",
    "end": "670910"
  },
  {
    "text": "do here we do when a link link it's our end point that we will query here in this example I",
    "start": "670910",
    "end": "678230"
  },
  {
    "text": "will query endpoint I will do queries in mutations you can treat them as reading",
    "start": "678230",
    "end": "684500"
  },
  {
    "text": "data and insulting updating or deleting data there is another concept of",
    "start": "684500",
    "end": "689779"
  },
  {
    "text": "subscription that we'll talk a little bit later so I create this HTTP link and",
    "start": "689779",
    "end": "695120"
  },
  {
    "text": "I create a new instance of Apollo client providing it with some kind of cache so",
    "start": "695120",
    "end": "701330"
  },
  {
    "text": "I have in-memory cache and this is the additional cool stuff that Apollo clients brings us it brings us it's its",
    "start": "701330",
    "end": "709910"
  },
  {
    "text": "own caching system and caching solution you can use in-memory cache you can use",
    "start": "709910",
    "end": "715130"
  },
  {
    "text": "your Apollo cache persist and basically you can say all my data that's received",
    "start": "715130",
    "end": "721130"
  },
  {
    "text": "to the client can be persisted to local storage and I have more performant requests and responses so for using it",
    "start": "721130",
    "end": "729950"
  },
  {
    "text": "in reacts application we will wrap our up component with Apollo provider this",
    "start": "729950",
    "end": "736700"
  },
  {
    "text": "provider will basically we provide it with client and pass our new instance of",
    "start": "736700",
    "end": "742700"
  },
  {
    "text": "a client inside whenever we do that now we can use our graphical API for",
    "start": "742700",
    "end": "750410"
  },
  {
    "text": "querying mutating or subscribing to the in this case for just squaring and mutating so what we do here we have",
    "start": "750410",
    "end": "758779"
  },
  {
    "text": "graph kill target package and and react a polar package rough kill target",
    "start": "758779",
    "end": "764450"
  },
  {
    "text": "package is basically your DSL for creating your queries of mutations so",
    "start": "764450",
    "end": "770329"
  },
  {
    "text": "you it's basically target template string if if you look at this correctly so here we",
    "start": "770329",
    "end": "776899"
  },
  {
    "text": "have the same syntax the graph kill syntax that I showed you in the previously in Star Wars API and stuff",
    "start": "776899",
    "end": "784430"
  },
  {
    "text": "like that but here we have something pretty weird right so we have a query",
    "start": "784430",
    "end": "790250"
  },
  {
    "text": "component and inside we have a function as its children so in react this",
    "start": "790250",
    "end": "797089"
  },
  {
    "text": "patterns color is called render prop and basically a react Apollo supplies",
    "start": "797089",
    "end": "803700"
  },
  {
    "text": "three components query mutation subscription with this render probe so",
    "start": "803700",
    "end": "809760"
  },
  {
    "text": "inside here in this function basically we're component starts this like fetch",
    "start": "809760",
    "end": "818100"
  },
  {
    "text": "fetch post request to the server to the server and returns either data error or",
    "start": "818100",
    "end": "824700"
  },
  {
    "text": "loading so here we can treat our loading States we don't need to do like this",
    "start": "824700",
    "end": "829710"
  },
  {
    "text": "action if it's loading or like what's like to understand what's going on we",
    "start": "829710",
    "end": "834990"
  },
  {
    "text": "can just look at this loading and if it's loading we just return our loader",
    "start": "834990",
    "end": "840000"
  },
  {
    "text": "if I have an errand we will return an error well in real-world scenario we'll",
    "start": "840000",
    "end": "845640"
  },
  {
    "text": "probably present some kind of toast message something like that and if we",
    "start": "845640",
    "end": "851400"
  },
  {
    "text": "have the data we can basically return our post list so this is queries",
    "start": "851400",
    "end": "857880"
  },
  {
    "text": "mutations are not so different mutations are basically mutation component brought",
    "start": "857880",
    "end": "864960"
  },
  {
    "text": "from reactor Paulo and inside you have the mutation function and the data so",
    "start": "864960",
    "end": "872580"
  },
  {
    "text": "whenever we execute mutations in graph QL we insert update or delete data right",
    "start": "872580",
    "end": "878120"
  },
  {
    "text": "we we get data back so this is what this",
    "start": "878120",
    "end": "884370"
  },
  {
    "text": "data is stands for this function stands for the actual like calling the actual",
    "start": "884370",
    "end": "890790"
  },
  {
    "text": "mutation and you would expect a commutation for example for forms of submit so that's what is actually",
    "start": "890790",
    "end": "897180"
  },
  {
    "text": "happening here we we have this head post when we hit this add post with path",
    "start": "897180",
    "end": "903240"
  },
  {
    "text": "barrage of variables and they go inside the mutation and create this and",
    "start": "903240",
    "end": "909930"
  },
  {
    "text": "basically AIESEC admit mutation to the server I I'm going right now like pretty",
    "start": "909930",
    "end": "916260"
  },
  {
    "text": "fast through the graph QL if you want you girl like more in depth in graph QL so I recently released the free bootcamp",
    "start": "916260",
    "end": "924840"
  },
  {
    "text": "it's in YouTube it's four days 9.5 hours of studying so you can clearly check",
    "start": "924840",
    "end": "931350"
  },
  {
    "text": "that all there are a bunch of additional info on both Apollo client and Groff kill in",
    "start": "931350",
    "end": "938350"
  },
  {
    "text": "general so additional thing that I already mentioned several times so we",
    "start": "938350",
    "end": "943780"
  },
  {
    "text": "have query mutation we have subscription so what subscription is subscription remember HTTP link we've seen earlier",
    "start": "943780",
    "end": "951400"
  },
  {
    "text": "when we set up our client right so this was link HTTP link for basically our",
    "start": "951400",
    "end": "958750"
  },
  {
    "text": "posts requests with queries or mutations subscriptions work through WebSockets",
    "start": "958750",
    "end": "964240"
  },
  {
    "text": "and if you subscribe to changes then the data that is updated on the server is",
    "start": "964240",
    "end": "969910"
  },
  {
    "text": "pushed from the server to the client through the WebSocket so we can get real",
    "start": "969910",
    "end": "975190"
  },
  {
    "text": "time graph care on our on our client so",
    "start": "975190",
    "end": "980890"
  },
  {
    "text": "here for example subscription looks pretty much the Cintas looks pretty much the same as query the difference though",
    "start": "980890",
    "end": "986770"
  },
  {
    "text": "is that here instead of query we have subscription and over here we also have subscription the rest pretty much the",
    "start": "986770",
    "end": "995320"
  },
  {
    "text": "same the difference in is in how it works these ones this one is working",
    "start": "995320",
    "end": "1001350"
  },
  {
    "text": "through WebSockets and data is updated instantly whenever you query something",
    "start": "1001350",
    "end": "1007310"
  },
  {
    "text": "it's it's querying only one my component model was mounted and then it's",
    "start": "1007310",
    "end": "1014730"
  },
  {
    "text": "basically stopped querying unless you use some additional tricks like for",
    "start": "1014730",
    "end": "1021390"
  },
  {
    "text": "example in mutation you can pass this refetch queries and then it will mean",
    "start": "1021390",
    "end": "1028589"
  },
  {
    "text": "whenever you update the form tell your graphical client to run this query again",
    "start": "1028589",
    "end": "1036079"
  },
  {
    "text": "so sometimes you will use subscriptions for real-time data but sometimes you",
    "start": "1036080",
    "end": "1041370"
  },
  {
    "text": "will just refresh your data again so okay so graph kill it's is a good thing",
    "start": "1041370",
    "end": "1051150"
  },
  {
    "start": "1044000",
    "end": "1206000"
  },
  {
    "text": "right but what about mobile stay tree we've started with the state management right so a poll client actually comes",
    "start": "1051150",
    "end": "1060240"
  },
  {
    "text": "with with its own solution for state management you can treat the same as you",
    "start": "1060240",
    "end": "1066390"
  },
  {
    "text": "treat your data on the server you can trade the local data local state in a",
    "start": "1066390",
    "end": "1071710"
  },
  {
    "text": "poll client but in most real-world scenarios you have already up with state",
    "start": "1071710",
    "end": "1077470"
  },
  {
    "text": "management system that is working you have a bunch of state other in Moberg state tree or in redux and basically the",
    "start": "1077470",
    "end": "1084340"
  },
  {
    "text": "concepts will be the same for redux here how i basically integrate between these",
    "start": "1084340",
    "end": "1091480"
  },
  {
    "text": "two systems so we will start by creating a service or basically a function that",
    "start": "1091480",
    "end": "1098650"
  },
  {
    "text": "will get two properties on error on response you want to call you can call",
    "start": "1098650",
    "end": "1105310"
  },
  {
    "text": "them whatever you like and we'll have two methods inside we have will return",
    "start": "1105310",
    "end": "1111070"
  },
  {
    "text": "to matters mutate or query so if you look carefully here what's happening I",
    "start": "1111070",
    "end": "1118750"
  },
  {
    "text": "am calling client dot mutate and yes Apple applied not only exposes and react",
    "start": "1118750",
    "end": "1124930"
  },
  {
    "text": "apple not only exposed these fancy components with render probe it also gives me the actual client that I can",
    "start": "1124930",
    "end": "1131820"
  },
  {
    "text": "call the method on this client and call it to mutate to mutate my data or to",
    "start": "1131820",
    "end": "1138370"
  },
  {
    "text": "query my data so if I want to integrate my graphical client with the car with",
    "start": "1138370",
    "end": "1144280"
  },
  {
    "text": "existing state management system I will create some kind of wrapper that I will",
    "start": "1144280",
    "end": "1149650"
  },
  {
    "text": "use in my state management solution for basically coherent data so in a mo big",
    "start": "1149650",
    "end": "1157630"
  },
  {
    "text": "state for example we will have an action action of update post an ad post",
    "start": "1157630",
    "end": "1163450"
  },
  {
    "text": "so our ad post will call our graphical service and provide two proper two",
    "start": "1163450",
    "end": "1170940"
  },
  {
    "text": "properties basically on error and on response and each one of them will",
    "start": "1170940",
    "end": "1176770"
  },
  {
    "text": "update model on the store and I remind you if you update something in mobic",
    "start": "1176770",
    "end": "1182080"
  },
  {
    "text": "state tree the computed values the views differ that I define public story rerun",
    "start": "1182080",
    "end": "1190530"
  },
  {
    "text": "reactions and then your component is rendered so in a sense you can just omit",
    "start": "1190530",
    "end": "1196660"
  },
  {
    "text": "the query and mutation component and just use it inside any state management system in",
    "start": "1196660",
    "end": "1204170"
  },
  {
    "text": "this case it's a small big state tree so fine we understood hopefully how we do",
    "start": "1204170",
    "end": "1212750"
  },
  {
    "start": "1206000",
    "end": "1629000"
  },
  {
    "text": "this on the client but what about the in Armageddon and and how we what we'll do",
    "start": "1212750",
    "end": "1218630"
  },
  {
    "text": "with database with node basically what we will do about our graph Cal Beckett",
    "start": "1218630",
    "end": "1224270"
  },
  {
    "text": "and before diving into this I want to",
    "start": "1224270",
    "end": "1230260"
  },
  {
    "text": "talk a little bit about architecture and how we architect our web apps so there",
    "start": "1230260",
    "end": "1236450"
  },
  {
    "text": "is an architect or a software architecture proposal for creating",
    "start": "1236450",
    "end": "1242440"
  },
  {
    "text": "modern web applications and it consists of three factors real time graph Gale we",
    "start": "1242440",
    "end": "1249920"
  },
  {
    "text": "already understood the benefits of rough year hopefully and like how clients can",
    "start": "1249920",
    "end": "1256220"
  },
  {
    "text": "benefit from moving from REST API to something more real-time something when",
    "start": "1256220",
    "end": "1262490"
  },
  {
    "text": "we call our endpoint once and get the whole data that we need and basically",
    "start": "1262490",
    "end": "1268010"
  },
  {
    "text": "giving all the querying capabilities to the client to the front-end instead of having lots of API endpoints and",
    "start": "1268010",
    "end": "1274640"
  },
  {
    "text": "versioning them so another thing that is in there in three-factor up or tech chure is",
    "start": "1274640",
    "end": "1281030"
  },
  {
    "text": "reliable eventing and reliable eventing means that whenever we update something",
    "start": "1281030",
    "end": "1287240"
  },
  {
    "text": "in our database we want to some kind of event to be triggered to do our business",
    "start": "1287240",
    "end": "1295430"
  },
  {
    "text": "logic which brings me to the third point asking service so let's look at older",
    "start": "1295430",
    "end": "1302810"
  },
  {
    "text": "architecture we have enough we have API layer data base bunch of micro services",
    "start": "1302810",
    "end": "1308180"
  },
  {
    "text": "so our API layer writes into database uses micro services for business logic",
    "start": "1308180",
    "end": "1314840"
  },
  {
    "text": "and stuff like that so it's synchronous in a way because we want you we process",
    "start": "1314840",
    "end": "1320330"
  },
  {
    "text": "something then we write into database then we'll return the response asking",
    "start": "1320330",
    "end": "1325700"
  },
  {
    "text": "service work and in general three factor up works architecture works in the",
    "start": "1325700",
    "end": "1331790"
  },
  {
    "text": "following way we have some kind of real-time graphical API and we have our",
    "start": "1331790",
    "end": "1337010"
  },
  {
    "text": "state in database and whenever our update to database is triggered we want",
    "start": "1337010",
    "end": "1343070"
  },
  {
    "text": "some kind of event system to trigger bunch of serverless functions and right",
    "start": "1343070",
    "end": "1348740"
  },
  {
    "text": "back into database now because we are talking about real-time and because we",
    "start": "1348740",
    "end": "1353780"
  },
  {
    "text": "are talking about subscriptions whenever our data is updated changes will reflect",
    "start": "1353780",
    "end": "1360770"
  },
  {
    "text": "back to the client in me instantly so we don't need to like pull anything we will",
    "start": "1360770",
    "end": "1366890"
  },
  {
    "text": "just return everything back to the client through the WebSockets only parts of data that are the client is",
    "start": "1366890",
    "end": "1373549"
  },
  {
    "text": "subscribed to so factor first factor is",
    "start": "1373549",
    "end": "1379250"
  },
  {
    "text": "real-time graphical and they're a bunch of solutions one of them is surah up",
    "start": "1379250",
    "end": "1384260"
  },
  {
    "text": "sync you can write your own real-time graphical Sura of the graphical yoga you",
    "start": "1384260",
    "end": "1391220"
  },
  {
    "text": "can write a pole server these are like bunch of solutions that give you that in",
    "start": "1391220",
    "end": "1396799"
  },
  {
    "text": "a different ways and graphical yoga Nepal server you need to do things more like write things more manually write",
    "start": "1396799",
    "end": "1405080"
  },
  {
    "text": "your own server and shorten up saying it's sort of like automatic so second",
    "start": "1405080",
    "end": "1411110"
  },
  {
    "text": "factor is reliable eventing so there are bio three basically solutions event",
    "start": "1411110",
    "end": "1418130"
  },
  {
    "text": "sourcing you can implement your own event something on your existing database or new database and basically",
    "start": "1418130",
    "end": "1424600"
  },
  {
    "text": "whenever update or insert or delete is trigger the database you can call the",
    "start": "1424600",
    "end": "1431450"
  },
  {
    "text": "event or you can use force or event triggers and the third factor is a sync",
    "start": "1431450",
    "end": "1437870"
  },
  {
    "text": "service and for service functions you can use lambda cloud function as your",
    "start": "1437870",
    "end": "1443390"
  },
  {
    "text": "on-site open files you blaze lots of lots of solutions so the question is",
    "start": "1443390",
    "end": "1450950"
  },
  {
    "text": "what is Hazara because up sync you probably heard about graph yoga maybe",
    "start": "1450950",
    "end": "1459140"
  },
  {
    "text": "something you so a surah is basically open source it's absolutely free engine",
    "start": "1459140",
    "end": "1465200"
  },
  {
    "text": "it gives you auto generated real-time graphical API on top of new or existing Posterous database so basically",
    "start": "1465200",
    "end": "1473210"
  },
  {
    "text": "you can take your database you can take the like the whole let's say you have a",
    "start": "1473210",
    "end": "1478220"
  },
  {
    "text": "business and you have database with tons of data you can just take the engine run",
    "start": "1478220",
    "end": "1484879"
  },
  {
    "text": "it on top of the other base it will auto generate graphical API don't need to run a server and then you can consume at",
    "start": "1484879",
    "end": "1491090"
  },
  {
    "text": "lycée api so there are lots of features that gives you it can be deployed to any",
    "start": "1491090",
    "end": "1496099"
  },
  {
    "text": "cloud and run locally because it runs in docker container so whenever you can run",
    "start": "1496099",
    "end": "1501109"
  },
  {
    "text": "docker container you can run a server engine it's compatible of all the litigation solutions it I already",
    "start": "1501109",
    "end": "1507859"
  },
  {
    "text": "mentioned that it can run on top of new existing Postgres its support but not only Postgres but also its add-on like",
    "start": "1507859",
    "end": "1514909"
  },
  {
    "text": "pause gives and time scale DB i already mentioned that auto generates api and",
    "start": "1514909",
    "end": "1520549"
  },
  {
    "text": "the thing is graphical queries are compiled to basically performant SQL",
    "start": "1520549",
    "end": "1526429"
  },
  {
    "text": "statements leveraging Postgres features and we not over with the features there",
    "start": "1526429",
    "end": "1534499"
  },
  {
    "text": "is a CLI tool that gives you migrations like rails like migrations that you can run and other bunch of other tools you",
    "start": "1534499",
    "end": "1544369"
  },
  {
    "text": "can create your own sequel statements and make the engine to general let's say",
    "start": "1544369",
    "end": "1550879"
  },
  {
    "text": "you create a new sequel view or new function basically the engine will automatically generate a query or",
    "start": "1550879",
    "end": "1557840"
  },
  {
    "text": "mutation for you you can configure your access control for data really granular",
    "start": "1557840",
    "end": "1563960"
  },
  {
    "text": "you can say I want this user with this roll B to be being able to update only",
    "start": "1563960",
    "end": "1570889"
  },
  {
    "text": "this column in this specific table if conditions are met so you can go like",
    "start": "1570889",
    "end": "1575960"
  },
  {
    "text": "really deep into granularity of the of their missions you can you are not",
    "start": "1575960",
    "end": "1584869"
  },
  {
    "text": "limited in any way you can connect you can for example have your own graphical server let's say in dotnet or you can go",
    "start": "1584869",
    "end": "1592789"
  },
  {
    "text": "or whatever language you prefer and you want you basically have the crud",
    "start": "1592789",
    "end": "1598989"
  },
  {
    "text": "generated with engine but also have some custom business logic with your own graphical",
    "start": "1598989",
    "end": "1605669"
  },
  {
    "text": "server you can stitch the schemas there is some concept so called schema",
    "start": "1605669",
    "end": "1611489"
  },
  {
    "text": "stitching when you can take existing graphical server like two graphical server and servers and stitch the",
    "start": "1611489",
    "end": "1617039"
  },
  {
    "text": "schemas we will see it in in the demo in a bit it also has a venting system which",
    "start": "1617039",
    "end": "1624239"
  },
  {
    "text": "I already talked a while about that while several is function how events are triggered so the question is how",
    "start": "1624239",
    "end": "1632039"
  },
  {
    "start": "1629000",
    "end": "1907000"
  },
  {
    "text": "basically to get started to just like get the hang of it obviously like the setup that I will show you right now is",
    "start": "1632039",
    "end": "1638639"
  },
  {
    "text": "just playing around with that if you want you release things for production",
    "start": "1638639",
    "end": "1644789"
  },
  {
    "text": "you obviously setup on proper cloud provider writer iwss your Google twelve",
    "start": "1644789",
    "end": "1652019"
  },
  {
    "text": "functions Google Cloud but just for stalking you can go to IO",
    "start": "1652019",
    "end": "1659549"
  },
  {
    "text": "you just click on get started click on this button you deploy things so here",
    "start": "1659549",
    "end": "1666119"
  },
  {
    "text": "okay so when you click on that you basically have two things installed",
    "start": "1666119",
    "end": "1671460"
  },
  {
    "text": "first the engine second poster said on that's what you will be presented after",
    "start": "1671460",
    "end": "1678539"
  },
  {
    "text": "you run you up you will have some kind of console that we have graphical ID",
    "start": "1678539",
    "end": "1683759"
  },
  {
    "text": "inside and we'll have a bunch of additional tabs it will have graphical",
    "start": "1683759",
    "end": "1691679"
  },
  {
    "text": "it will have the data data will be pretty much simple pretty much similar",
    "start": "1691679",
    "end": "1697379"
  },
  {
    "text": "to PG admin and will get you access to your data on database you can create",
    "start": "1697379",
    "end": "1703349"
  },
  {
    "text": "tables you can add relations between tables you can do different things you can actually run your sequel statements",
    "start": "1703349",
    "end": "1711679"
  },
  {
    "text": "there is a top of the remote schemas that I will already mentioned you can stitch your graphical schema and the",
    "start": "1711679",
    "end": "1718349"
  },
  {
    "text": "event triggers for creating custom or service functions so graphical table",
    "start": "1718349",
    "end": "1724529"
  },
  {
    "text": "will have bunch of additions like setting endpoint headers you can execute",
    "start": "1724529",
    "end": "1731399"
  },
  {
    "text": "queries mutation subscriptions you can analyze queries basically if you",
    "start": "1731399",
    "end": "1737220"
  },
  {
    "text": "have a graphic aquarium you want to see how it's compiled to performance sequel",
    "start": "1737220",
    "end": "1742799"
  },
  {
    "text": "statement you can hit an analyze button and you will get the whole statement so",
    "start": "1742799",
    "end": "1747960"
  },
  {
    "text": "you can show it to your DBA and ask if this is performant enough if it's not you can always create a view with like",
    "start": "1747960",
    "end": "1755700"
  },
  {
    "text": "more performant and the engine will generate automatically for you",
    "start": "1755700",
    "end": "1760860"
  },
  {
    "text": "queries on this view so data tab is for managing data it's for I already",
    "start": "1760860",
    "end": "1769230"
  },
  {
    "text": "mentioned all of these it also has granular permissions control an access",
    "start": "1769230",
    "end": "1775500"
  },
  {
    "text": "control remote schemas looks like this so we can add our graphical server URL",
    "start": "1775500",
    "end": "1785490"
  },
  {
    "text": "and there we it basically the engine will stitch automatically the schema and",
    "start": "1785490",
    "end": "1791179"
  },
  {
    "text": "event triggers we can do a bunch of things so to run sort of locally you",
    "start": "1791179",
    "end": "1798419"
  },
  {
    "text": "basically just run docker container and you provide it with a database URL which",
    "start": "1798419",
    "end": "1804270"
  },
  {
    "text": "can be existing one and you provide it with the environment variable graphical",
    "start": "1804270",
    "end": "1810360"
  },
  {
    "text": "enable console so you will be able to access this development console and do",
    "start": "1810360",
    "end": "1816090"
  },
  {
    "text": "stuff with it so the question is I already mentioned a lot Postgres but",
    "start": "1816090",
    "end": "1823020"
  },
  {
    "text": "what about supported databases so is it only Postgres or it's not so first of",
    "start": "1823020",
    "end": "1830460"
  },
  {
    "text": "all it is Posterous it is Postgres intention like postgis timescale DB but",
    "start": "1830460",
    "end": "1836030"
  },
  {
    "text": "actually the first time I am sort of announcing it we are bringing my sequel",
    "start": "1836030",
    "end": "1842010"
  },
  {
    "text": "support so it's coming soon very soon you can use no sequel databases through",
    "start": "1842010",
    "end": "1850159"
  },
  {
    "text": "migration by using JSON to graphical tool so this tool basically gives you an",
    "start": "1850159",
    "end": "1856740"
  },
  {
    "text": "ability to take the database dump the JSON file convert it a bunch of",
    "start": "1856740",
    "end": "1862820"
  },
  {
    "text": "migrations to put all the data inside the Postgres database and then the in general Chan",
    "start": "1862820",
    "end": "1867990"
  },
  {
    "text": "everything for you and we even have firebase to graff kill to that help skilled migration from firebase from",
    "start": "1867990",
    "end": "1875040"
  },
  {
    "text": "existing firebase up into Postgres and yeah so the question is where is node in",
    "start": "1875040",
    "end": "1885090"
  },
  {
    "text": "all of these right so node is in the service part and basically it's not only",
    "start": "1885090",
    "end": "1893340"
  },
  {
    "text": "node it was just for fancy title to be honest but you can use your any",
    "start": "1893340",
    "end": "1899730"
  },
  {
    "text": "programming language your kraut provider supports for writing service functions",
    "start": "1899730",
    "end": "1907309"
  },
  {
    "start": "1907000",
    "end": "1954000"
  },
  {
    "text": "and this is for example one of the severest function that I will use right",
    "start": "1907309",
    "end": "1913890"
  },
  {
    "text": "now for the demo this function basically gives me filters all bad words from post",
    "start": "1913890",
    "end": "1922080"
  },
  {
    "text": "that I will submit through mutation so here is inside of my handler have a",
    "start": "1922080",
    "end": "1932040"
  },
  {
    "text": "query which basically mutation I update my post and I update verified property",
    "start": "1932040",
    "end": "1940860"
  },
  {
    "text": "on my post table and inside the handle itself I just run title and content",
    "start": "1940860",
    "end": "1948360"
  },
  {
    "text": "through filter clean which I brought from Edwards package so let's take a",
    "start": "1948360",
    "end": "1956940"
  },
  {
    "start": "1954000",
    "end": "2010000"
  },
  {
    "text": "look at the demo and how it looks like so so I click on get started I click on",
    "start": "1956940",
    "end": "1966690"
  },
  {
    "text": "deploy so this is Rocco let's call it test and",
    "start": "1966690",
    "end": "1978210"
  },
  {
    "text": "this see demo deploy an app it will be",
    "start": "1978210",
    "end": "1984399"
  },
  {
    "text": "pretty fast so what is doing it's deploying the engine and starting the",
    "start": "1984399",
    "end": "1991380"
  },
  {
    "text": "Postgres add-on for Heroku and that's it",
    "start": "1991380",
    "end": "2002909"
  },
  {
    "text": "it's already deployed so if I go to my console and I look at my queries here I",
    "start": "2002909",
    "end": "2012120"
  },
  {
    "start": "2010000",
    "end": "2099000"
  },
  {
    "text": "have nothing because I don't have any data in database but let's actually create one so we don't have any tables I",
    "start": "2012120",
    "end": "2018770"
  },
  {
    "text": "will add a table I will call it posts I will add an ID of type unique identifier",
    "start": "2018770",
    "end": "2028620"
  },
  {
    "text": "and I will create this is a helper function for generating ID automatically",
    "start": "2028620",
    "end": "2037080"
  },
  {
    "text": "and I will have title of type text and content of type text so my primary key",
    "start": "2037080",
    "end": "2045450"
  },
  {
    "text": "will be ID and I also have a user ID of type unique identifier so I created that",
    "start": "2045450",
    "end": "2054980"
  },
  {
    "text": "so this is the so I don't have any data in database but if I go to my graphical",
    "start": "2054980",
    "end": "2060929"
  },
  {
    "text": "tab go to my dogs I already have queries mutations or subscriptions and basically",
    "start": "2060929",
    "end": "2066240"
  },
  {
    "text": "all of these automatically generated for me just from the data I just created so",
    "start": "2066240",
    "end": "2072770"
  },
  {
    "text": "what we're gonna do now we will add another table we'll call it users have",
    "start": "2072770",
    "end": "2079260"
  },
  {
    "text": "ID unique identifiers again with the",
    "start": "2079260",
    "end": "2084690"
  },
  {
    "text": "auto generation and our user will have first name of type text and last name of",
    "start": "2084690",
    "end": "2094470"
  },
  {
    "text": "type text so I select that my primary key is ID and here you go we have posts",
    "start": "2094470",
    "end": "2102930"
  },
  {
    "start": "2099000",
    "end": "2267000"
  },
  {
    "text": "and users now what I would expect remember these like nested query that I did for Star",
    "start": "2102930",
    "end": "2109480"
  },
  {
    "text": "Wars let's try to do the same here so I will get my posts and I want to get an",
    "start": "2109480",
    "end": "2117910"
  },
  {
    "text": "ID I want to get a title let me just a little bit and I want to get my user so",
    "start": "2117910",
    "end": "2125830"
  },
  {
    "text": "I would expect that I because I have users and post I will get a user first name a user and last name right but if",
    "start": "2125830",
    "end": "2132850"
  },
  {
    "text": "I'll try to do that that's not the case so why is that because I need to search",
    "start": "2132850",
    "end": "2139150"
  },
  {
    "text": "relations so I can give to my post and say that my user ID is a foreign key on",
    "start": "2139150",
    "end": "2147430"
  },
  {
    "text": "users table and the reference column",
    "start": "2147430",
    "end": "2152500"
  },
  {
    "text": "will be ID so now it's suggest me to add",
    "start": "2152500",
    "end": "2157510"
  },
  {
    "text": "a relationship if I click on that I can say that here is my user now going back",
    "start": "2157510",
    "end": "2166960"
  },
  {
    "text": "to graphical I can actually let me zoom",
    "start": "2166960",
    "end": "2172420"
  },
  {
    "text": "a little bit I can actually get my first name and last name and obviously if I",
    "start": "2172420",
    "end": "2178660"
  },
  {
    "text": "run that I won't have anything but let's run a mutation",
    "start": "2178660",
    "end": "2184320"
  },
  {
    "text": "we'll add posts and we will use insult post mutation emojis for images so we",
    "start": "2184320",
    "end": "2195850"
  },
  {
    "text": "have insert post and we'll pass objects and our object will be title of hello",
    "start": "2195850",
    "end": "2208440"
  },
  {
    "text": "content of and it will return an ID so now for run",
    "start": "2208440",
    "end": "2219140"
  },
  {
    "text": "that it was it won't work because I haven't said that my user ID and every",
    "start": "2219140",
    "end": "2225230"
  },
  {
    "text": "post has to have a user I can obviously go to modify my data to have these like",
    "start": "2225230",
    "end": "2233770"
  },
  {
    "text": "[Music] non audible fields or nullable fields actually but what I want to do here is",
    "start": "2233770",
    "end": "2241780"
  },
  {
    "text": "something more interesting I want to say that I will have a user with data first",
    "start": "2241780",
    "end": "2250849"
  },
  {
    "text": "name and last name",
    "start": "2250849",
    "end": "2258430"
  },
  {
    "text": "and now since to work if I go to my",
    "start": "2263390",
    "end": "2268460"
  },
  {
    "start": "2267000",
    "end": "2372000"
  },
  {
    "text": "users my user is created and my post is created and this happened in two",
    "start": "2268460",
    "end": "2273920"
  },
  {
    "text": "different tables right so it's pretty neat feature right so we have these",
    "start": "2273920",
    "end": "2280600"
  },
  {
    "text": "queries and mutations but what about your custom server and about remote",
    "start": "2280600",
    "end": "2287480"
  },
  {
    "text": "schemas so I have here this Star Wars",
    "start": "2287480",
    "end": "2295690"
  },
  {
    "text": "API server that I want to add actually",
    "start": "2295690",
    "end": "2303530"
  },
  {
    "text": "yeah so this is the Star Wars API and has bunch of queries does have mutations",
    "start": "2303530",
    "end": "2310970"
  },
  {
    "text": "so what I want to do I want to go to my di Explorer here to remote schemas and",
    "start": "2310970",
    "end": "2317300"
  },
  {
    "text": "add my custom server let's call it Star Wars I will add a URL add remote schema",
    "start": "2317300",
    "end": "2327820"
  },
  {
    "text": "now if I go to my graphical I can",
    "start": "2327820",
    "end": "2332990"
  },
  {
    "text": "basically query all films so basically it gives me an ability to access my",
    "start": "2332990",
    "end": "2339980"
  },
  {
    "text": "other graphical server through or schema stitching so now I want to show you",
    "start": "2339980",
    "end": "2347030"
  },
  {
    "text": "because we don't have much time on like the whole thing but I want to show you",
    "start": "2347030",
    "end": "2353320"
  },
  {
    "text": "another example with bunch of bunch of",
    "start": "2353320",
    "end": "2359030"
  },
  {
    "text": "data already created here so what I want to do here and I have the same Star Wars",
    "start": "2359030",
    "end": "2366130"
  },
  {
    "text": "API schema so if I go to my posts in",
    "start": "2366130",
    "end": "2373250"
  },
  {
    "start": "2372000",
    "end": "2425000"
  },
  {
    "text": "addition to having its pretty much see a similar structure I have the author ID instead of user ID and timestamp but I",
    "start": "2373250",
    "end": "2379160"
  },
  {
    "text": "have another field called verified right and we want to run our server list function whenever we insert our new pod",
    "start": "2379160",
    "end": "2387470"
  },
  {
    "text": "book force and this will this is where our business logic will be it will be in service function right so what I gonna",
    "start": "2387470",
    "end": "2394670"
  },
  {
    "text": "do I go to my lambda console and this is my",
    "start": "2394670",
    "end": "2400010"
  },
  {
    "text": "universe lambda function here with the bad world and like although everything",
    "start": "2400010",
    "end": "2407780"
  },
  {
    "text": "you've seen in the presentation right so I will take API endpoint for this lambda",
    "start": "2407780",
    "end": "2417080"
  },
  {
    "text": "function go to my if I will find it",
    "start": "2417080",
    "end": "2423260"
  },
  {
    "text": "where was it I think here go to my server console to",
    "start": "2423260",
    "end": "2428810"
  },
  {
    "start": "2425000",
    "end": "2515000"
  },
  {
    "text": "events and I will add a new trigger I will call it post verify and will be on",
    "start": "2428810",
    "end": "2437150"
  },
  {
    "text": "table posts whenever I run insult and this will be my server function let's",
    "start": "2437150",
    "end": "2444170"
  },
  {
    "text": "add this event trigger so right now nothing happened let's insert a post so",
    "start": "2444170",
    "end": "2454400"
  },
  {
    "text": "I don't know like if it will consider freaking as a bad world but obviously",
    "start": "2454400",
    "end": "2461720"
  },
  {
    "text": "crappy will be a bad world right so let's add our post let's go into events",
    "start": "2461720",
    "end": "2469640"
  },
  {
    "text": "and we see our event execute was executed we will see the payload of this",
    "start": "2469640",
    "end": "2476450"
  },
  {
    "text": "event now hopefully it will work you",
    "start": "2476450",
    "end": "2481820"
  },
  {
    "text": "never know with live demos but let's go to our apparently crazy and freaking is",
    "start": "2481820",
    "end": "2490070"
  },
  {
    "text": "not a bad word so I have to be more so forgive me for the so let's call it",
    "start": "2490070",
    "end": "2496550"
  },
  {
    "text": "shitty post let's run that",
    "start": "2496550",
    "end": "2504190"
  },
  {
    "text": "and let's check that cool so it seems",
    "start": "2505670",
    "end": "2516440"
  },
  {
    "text": "that it's working so this is how this is",
    "start": "2516440",
    "end": "2522440"
  },
  {
    "text": "how my business logic works it's asking serverless it works by executing these",
    "start": "2522440",
    "end": "2530140"
  },
  {
    "text": "functions on several s functions on updates database updates and that's how",
    "start": "2530140",
    "end": "2537410"
  },
  {
    "text": "I can basically create my modern model apps so how much time we have left how",
    "start": "2537410",
    "end": "2550099"
  },
  {
    "text": "much time we'll have left because I probably have time for questions right now let me just open it yeah so this was",
    "start": "2550099",
    "end": "2563599"
  },
  {
    "text": "the demo and yeah thanks a lot this is my handle this is my website if you have",
    "start": "2563599",
    "end": "2570650"
  },
  {
    "text": "questions just raise your hand and like ask I'm here come on don't be shy",
    "start": "2570650",
    "end": "2577190"
  },
  {
    "text": "yeah",
    "start": "2577190",
    "end": "2580029"
  },
  {
    "text": "yeah so I will repeat the question the question is if graph Cal can support nest and nesting to like to infinity",
    "start": "2596040",
    "end": "2603970"
  },
  {
    "text": "basically like nested unlimited structures right that's the question",
    "start": "2603970",
    "end": "2609220"
  },
  {
    "text": "so in general is like best practice to do yeah because of the resolvers how",
    "start": "2609220",
    "end": "2616420"
  },
  {
    "text": "they resolve data but here like if you're used for example with a syringe and everything is compiled to sequel",
    "start": "2616420",
    "end": "2622630"
  },
  {
    "text": "queries so it depends - like how performant your sequel query is so in",
    "start": "2622630",
    "end": "2628690"
  },
  {
    "text": "the end it just it is compiled to sequel and let me actually show you how it",
    "start": "2628690",
    "end": "2637510"
  },
  {
    "text": "looks like so for example add nodes here",
    "start": "2637510",
    "end": "2643720"
  },
  {
    "text": "I'll get posts if I analyze my get post I will get a cycle query so basically if",
    "start": "2643720",
    "end": "2652420"
  },
  {
    "text": "you're infinite infinitely nested structures are infinitely nested cycle",
    "start": "2652420",
    "end": "2658300"
  },
  {
    "text": "queries it's not a very performant thing to be honest so then then probably it",
    "start": "2658300",
    "end": "2664390"
  },
  {
    "text": "won't get the desired effect the question is why don't you want to get into infinity I hope it's answers more",
    "start": "2664390",
    "end": "2676030"
  },
  {
    "text": "questions yeah so the thing yeah yeah yeah so the",
    "start": "2676030",
    "end": "2694309"
  },
  {
    "text": "question is if there is any integration with the already existing REST API this",
    "start": "2694309",
    "end": "2699710"
  },
  {
    "text": "is really a good question and this is basically the question that lots of people ask because okay in in a real",
    "start": "2699710",
    "end": "2706160"
  },
  {
    "text": "world I already have something right I already have an application running with REST API is how do I start this",
    "start": "2706160",
    "end": "2711920"
  },
  {
    "text": "migration process to graph Cal so the idea there is I will give you a github",
    "start": "2711920",
    "end": "2718130"
  },
  {
    "text": "example for example so github use used REST API and they still using REST API",
    "start": "2718130",
    "end": "2725960"
  },
  {
    "text": "as but have also graph K API so how they transfer to be both graph G on res so",
    "start": "2725960",
    "end": "2733010"
  },
  {
    "text": "what they did they started to basically",
    "start": "2733010",
    "end": "2738140"
  },
  {
    "text": "create graphical endpoints and while keeping their REST API is working",
    "start": "2738140",
    "end": "2744650"
  },
  {
    "text": "whenever they finished their graphical API they rewrote their REST API to you",
    "start": "2744650",
    "end": "2751609"
  },
  {
    "text": "use graph go under the hood it get them to more performant to be like more",
    "start": "2751609",
    "end": "2757609"
  },
  {
    "text": "performant in a sense and also it it moved there to the realm of like right",
    "start": "2757609",
    "end": "2765020"
  },
  {
    "text": "now we we have only graphical API working under the hood that we're supporting rest is just a facade for",
    "start": "2765020",
    "end": "2771349"
  },
  {
    "text": "graph Keo so this is the the one of the optimal migration above another path that",
    "start": "2771349",
    "end": "2779230"
  },
  {
    "text": "company can follow is to start releasing new features while working on graph QL",
    "start": "2779230",
    "end": "2785470"
  },
  {
    "text": "but still supporting rest but at some point it will get you the same the same",
    "start": "2785470",
    "end": "2792740"
  },
  {
    "text": "solution has get up gotcha",
    "start": "2792740",
    "end": "2797170"
  },
  {
    "text": "you mean inside of like well worth it",
    "start": "2817910",
    "end": "2822910"
  },
  {
    "text": "okay yeah so the question is if huh Sora will eventually change name convention",
    "start": "2825940",
    "end": "2833510"
  },
  {
    "text": "to something more like more common in JavaScript or dotnet world right so this",
    "start": "2833510",
    "end": "2841190"
  },
  {
    "text": "is the question [Music] unsteady now but one really really great",
    "start": "2841190",
    "end": "2850130"
  },
  {
    "text": "thing about like being free and open source it has historic as disco channel",
    "start": "2850130",
    "end": "2856850"
  },
  {
    "text": "which really open to everyone and everyone can join and suggest changes",
    "start": "2856850",
    "end": "2862940"
  },
  {
    "text": "and if these changes are suggested by lots of lots of developers these changes",
    "start": "2862940",
    "end": "2868460"
  },
  {
    "text": "will be implemented like for example my sickle support is coming because people asked ask for that it was not any",
    "start": "2868460",
    "end": "2874610"
  },
  {
    "text": "initial idea to bring my sickle support but because people came to this called",
    "start": "2874610",
    "end": "2879710"
  },
  {
    "text": "and asked a lot about like how they migrated from my sequel then I decided",
    "start": "2879710",
    "end": "2886460"
  },
  {
    "text": "to add my sickle support eventually so I think if the this question is if like",
    "start": "2886460",
    "end": "2893840"
  },
  {
    "text": "naming convention is a problem for like lots of people then it will eventually change more questions come on bring it",
    "start": "2893840",
    "end": "2905240"
  },
  {
    "text": "on no questions cool then I will show you",
    "start": "2905240",
    "end": "2914240"
  },
  {
    "text": "another thing regarding permissions that I actually forgot to show where there is",
    "start": "2914240",
    "end": "2921560"
  },
  {
    "text": "a permissions field here in the console so I can say that for example I have a",
    "start": "2921560",
    "end": "2930050"
  },
  {
    "text": "role that's called a test and I want to say that I follow test role I want to",
    "start": "2930050",
    "end": "2939140"
  },
  {
    "text": "work I want it to be only read-only so I say that my select for title and content",
    "start": "2939140",
    "end": "2948910"
  },
  {
    "text": "field are working here so let's save permissions and then if I go to",
    "start": "2949769",
    "end": "2956730"
  },
  {
    "text": "graphical and let's say here will be",
    "start": "2956730",
    "end": "2963299"
  },
  {
    "text": "test so if you can notice here that I",
    "start": "2963299",
    "end": "2969180"
  },
  {
    "text": "don't have mutations anymore I have only queries and I have only subscriptions and my queries for my",
    "start": "2969180",
    "end": "2976589"
  },
  {
    "text": "posts actually give me only content and",
    "start": "2976589",
    "end": "2982710"
  },
  {
    "text": "title because I set intermissions that this role is allowed to query only title",
    "start": "2982710",
    "end": "2988259"
  },
  {
    "text": "and content so this is for permissions and yeah and another thing like",
    "start": "2988259",
    "end": "2995460"
  },
  {
    "text": "regarding authentication so I told you about supporting different authentication solutions so you can",
    "start": "2995460",
    "end": "3000499"
  },
  {
    "text": "notice here we have Sora admin secret if",
    "start": "3000499",
    "end": "3005569"
  },
  {
    "text": "you install her Sora initially you will have this warning for securing your",
    "start": "3005569",
    "end": "3010970"
  },
  {
    "text": "endpoint and then the easiest way to secure endpoint is just adding secret",
    "start": "3010970",
    "end": "3016309"
  },
  {
    "text": "key but you obviously know that it's not the production grade security if at all",
    "start": "3016309",
    "end": "3023210"
  },
  {
    "text": "so basically when the engine starts it has authentication webhook that you can",
    "start": "3023210",
    "end": "3029809"
  },
  {
    "text": "point to any authentication solution that you want whenever these webhook is",
    "start": "3029809",
    "end": "3036710"
  },
  {
    "text": "returned back to the engine then if we go inside the same permissions tab that",
    "start": "3036710",
    "end": "3043700"
  },
  {
    "text": "we had here you can add permissions Beit based on the ideas or JWT token or",
    "start": "3043700",
    "end": "3053569"
  },
  {
    "text": "whatever is returned from your authentication solution so for example I can say that I want custom check I want",
    "start": "3053569",
    "end": "3060799"
  },
  {
    "text": "my ID to be equal so a user ID or be",
    "start": "3060799",
    "end": "3066230"
  },
  {
    "text": "equal to some other header that is returned from authentication webhook and",
    "start": "3066230",
    "end": "3071960"
  },
  {
    "text": "pass to the engine and speaking of headers I can",
    "start": "3071960",
    "end": "3077330"
  },
  {
    "text": "both paths all the headers that I want to the engine and use them here in",
    "start": "3077330",
    "end": "3082720"
  },
  {
    "text": "permissions or if for example I have another server that I want to stick",
    "start": "3082720",
    "end": "3088280"
  },
  {
    "text": "schemas I can add these headers here to",
    "start": "3088280",
    "end": "3094580"
  },
  {
    "text": "like add additional like secure world graphical servers and stuff like that so",
    "start": "3094580",
    "end": "3100520"
  },
  {
    "text": "yeah cool any more questions if not more",
    "start": "3100520",
    "end": "3106580"
  },
  {
    "text": "questions no okay thanks a lot really enjoy it hopefully get also again",
    "start": "3106580",
    "end": "3113890"
  }
]