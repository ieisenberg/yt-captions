[
  {
    "text": "all right let's get this show on the road um hey everyone",
    "start": "3199",
    "end": "8639"
  },
  {
    "text": "and by the way sorry if i clear my throat a lot bro it's been dry air air travel what can i tell you um",
    "start": "8639",
    "end": "15519"
  },
  {
    "text": "hi uh my name is jeremy wagner uh and i am currently a technical writer",
    "start": "15519",
    "end": "21199"
  },
  {
    "text": "for google on core web vitals uh thanks for coming to my talk which is",
    "start": "21199",
    "end": "26320"
  },
  {
    "text": "a little foray into what it takes to get a streaming service worker working",
    "start": "26320",
    "end": "31679"
  },
  {
    "text": "and all the performance and ux benefits that that can bring i will say that this",
    "start": "31679",
    "end": "37040"
  },
  {
    "text": "talk does assume that you know about the service worker api or workbox",
    "start": "37040",
    "end": "42399"
  },
  {
    "text": "an open source tool that abstracts it which is the primary tool that is used in this talk uh if you don't",
    "start": "42399",
    "end": "49280"
  },
  {
    "text": "don't worry um you'll get the gist of the concepts i'll present but like later on if you want to like experiment with",
    "start": "49280",
    "end": "55120"
  },
  {
    "text": "it you may have to like kind of toy with it uh the api or workbox on your own a little bit later to get like the basics",
    "start": "55120",
    "end": "61039"
  },
  {
    "text": "and then get up to speed but uh if you like service worker i think you're gonna like this talk um and it's also not like",
    "start": "61039",
    "end": "66880"
  },
  {
    "text": "a totally unique concept this this concept has been presented on before but like i'm very interested in promoting it",
    "start": "66880",
    "end": "72159"
  },
  {
    "text": "because i think it could be a really good uh alternative to the single page uh application",
    "start": "72159",
    "end": "78479"
  },
  {
    "text": "architecture uh while preserving the existing um browser's default",
    "start": "78479",
    "end": "83920"
  },
  {
    "text": "navigation scheme so first things first this is the first time i have left",
    "start": "83920",
    "end": "89200"
  },
  {
    "text": "minnesota since the pandemic began um and for those of you who are native",
    "start": "89200",
    "end": "95280"
  },
  {
    "text": "to europe or portugal minnesota is in the upper midwest in the united states and it gets really cold uh if watch the",
    "start": "95280",
    "end": "103040"
  },
  {
    "text": "movie fargo sometime uh and i gotta tell you i'm definitely a little nervous",
    "start": "103040",
    "end": "108640"
  },
  {
    "text": "slash rusty on this side of things but i'm super excited to be traveling once again and seeing new parts of the world",
    "start": "108640",
    "end": "115119"
  },
  {
    "text": "i have not been to portugal um i really miss traveling and porto is just like an incredible city uh it is a city of",
    "start": "115119",
    "end": "122159"
  },
  {
    "text": "staircases staircases and i've been getting so much exercise um and and i've been eating",
    "start": "122159",
    "end": "130160"
  },
  {
    "text": "a lot of paella and walking more than i have in a good long while",
    "start": "130160",
    "end": "135840"
  },
  {
    "text": "uh so thank you for all your hospitality and willingness to sit through this talk and paella i love paella um i'm hoping",
    "start": "135840",
    "end": "144480"
  },
  {
    "text": "i'm hoping you all get something out of it all right so let's get into it before we get into the streaming aspect of service",
    "start": "144480",
    "end": "150879"
  },
  {
    "text": "workers we need a very quick primer uh on the service worker technology itself",
    "start": "150879",
    "end": "156080"
  },
  {
    "text": "according to the 2020 http archive web almanac only about 3.22",
    "start": "156080",
    "end": "162239"
  },
  {
    "text": "of mobile websites um observed deploy a service worker and this technology's been around for a long time so it's kind",
    "start": "162239",
    "end": "168400"
  },
  {
    "text": "of like really like it's been around that long like it just hasn't quite gotten in there so this is also like hey",
    "start": "168400",
    "end": "174239"
  },
  {
    "text": "i want you to use service workers because when they work right they really add a lot",
    "start": "174239",
    "end": "180080"
  },
  {
    "text": "so given that statistic it would be unreasonable to assume that everybody has experience with this technology",
    "start": "180080",
    "end": "187519"
  },
  {
    "text": "without a service worker web browsers will request assets from web servers you know stuff like html css",
    "start": "187519",
    "end": "195040"
  },
  {
    "text": "javascript and what have you um and those servers respond with data to those",
    "start": "195040",
    "end": "200239"
  },
  {
    "text": "requests in theory it's not terribly complex though it can be in practice but that's just of it",
    "start": "200239",
    "end": "206720"
  },
  {
    "text": "service workers add a new wrinkle to this dynamic a service worker is a javascript file",
    "start": "206720",
    "end": "212480"
  },
  {
    "text": "that runs off the main thread it has its own dedicated thread which means that everything that it does",
    "start": "212480",
    "end": "218080"
  },
  {
    "text": "doesn't impact responsiveness on the main thread on the first visit to a website a",
    "start": "218080",
    "end": "223360"
  },
  {
    "text": "service worker is registered installed and activated once activated it controls",
    "start": "223360",
    "end": "228959"
  },
  {
    "text": "pages within its scope and that scope is often for an entire origin and on that origins behalf it can",
    "start": "228959",
    "end": "236560"
  },
  {
    "text": "intercept requests cache responses to requests in a special service worker cache that is distinct",
    "start": "236560",
    "end": "243040"
  },
  {
    "text": "from the from the disk cache or the http cache modify responses to suit application",
    "start": "243040",
    "end": "249200"
  },
  {
    "text": "needs allow for push notifications and background sync allow offline access",
    "start": "249200",
    "end": "254480"
  },
  {
    "text": "which is really awesome and improved performance by responding instantly to requests from the cache",
    "start": "254480",
    "end": "260400"
  },
  {
    "text": "faster than even the disk cache can do at times and as is the focus of this talk",
    "start": "260400",
    "end": "265919"
  },
  {
    "text": "use streams and streaming to instantly respond with partial markup from a service worker cache to significantly",
    "start": "265919",
    "end": "272720"
  },
  {
    "text": "improve navigation performance so that last point brings us to this thought on the web there tends to be two",
    "start": "272720",
    "end": "279680"
  },
  {
    "text": "navigation patterns at least that i've observed the synchronous navigation scheme that",
    "start": "279680",
    "end": "285280"
  },
  {
    "text": "browsers provide by default we all know what this is you request an html document the browser downloads the",
    "start": "285280",
    "end": "291199"
  },
  {
    "text": "markup parses it constructs the dom and then when that page is navigated away from it is unloaded and disposed of for",
    "start": "291199",
    "end": "297680"
  },
  {
    "text": "a new document rinse and repeat until the user is done websites that use this navigation scheme are sometimes called",
    "start": "297680",
    "end": "304720"
  },
  {
    "text": "multi-page applications or mpas i just tend to call them web sites",
    "start": "304720",
    "end": "310960"
  },
  {
    "text": "but then there's the single page application or spa scheme",
    "start": "310960",
    "end": "316400"
  },
  {
    "text": "which is a navigation scheme that uses javascript and it's often provided by user lan solutions think like um",
    "start": "316400",
    "end": "322720"
  },
  {
    "text": "you know a preacts router or reach router or any number of those things that are like that that we've been doing",
    "start": "322720",
    "end": "328160"
  },
  {
    "text": "for quite a while spas only use the default synchronous navigation scheme for the initial",
    "start": "328160",
    "end": "335039"
  },
  {
    "text": "request to get the application shell then each navigation request is a sequence of requesting data from an",
    "start": "335039",
    "end": "342240"
  },
  {
    "text": "api or html provided by some endpoint on a server and then populating the content",
    "start": "342240",
    "end": "348320"
  },
  {
    "text": "area in the application shell with a lot of client rendering in javascript and this brings us to an alternative",
    "start": "348320",
    "end": "354479"
  },
  {
    "text": "which if i'm being truthful is really just a clever extension of the browser's default navigation scheme involving",
    "start": "354479",
    "end": "360960"
  },
  {
    "text": "streams yet streams and streaming isn't a new concept when browsers download html they",
    "start": "360960",
    "end": "367919"
  },
  {
    "text": "incrementally parse html and chunks and this is so the browser's preload scanner can get a head start on discovering",
    "start": "367919",
    "end": "374080"
  },
  {
    "text": "render critical resources such as css and other potentially important resources such as images and scripts",
    "start": "374080",
    "end": "380720"
  },
  {
    "text": "this is especially important for extremely large html payloads where performance would suffer immensely if",
    "start": "380720",
    "end": "387280"
  },
  {
    "text": "the browser was blocked by the network until the entire payload arrives where are you going with this jeremy",
    "start": "387280",
    "end": "393840"
  },
  {
    "text": "that might be the question you're muttering to yourselves because if the browser already streams html from the",
    "start": "393840",
    "end": "398960"
  },
  {
    "text": "network then what difference does it make if we introduce streaming logic into our service worker",
    "start": "398960",
    "end": "404240"
  },
  {
    "text": "the answer is it's because service worker gives us a very powerful performance optimization the cash",
    "start": "404240",
    "end": "410160"
  },
  {
    "text": "storage api which we can use in combinations with the streams api specifically the readable stream",
    "start": "410160",
    "end": "416160"
  },
  {
    "text": "interface but we already have caching in the browser isn't that what the service worker cache",
    "start": "416160",
    "end": "421840"
  },
  {
    "text": "uses yes and no um and to understand why we we must look to the onion",
    "start": "421840",
    "end": "427599"
  },
  {
    "text": "for an answer browsers are browser caches are complex layered",
    "start": "427599",
    "end": "433120"
  },
  {
    "text": "mechanisms that can interact with one another kind of similar to like dns caches at different levels",
    "start": "433120",
    "end": "439759"
  },
  {
    "text": "the memory cache is often the first cache the browser will examine for resources it can reuse and it's very",
    "start": "439759",
    "end": "445360"
  },
  {
    "text": "ephemeral it's a short term cache that only persists for the current session and likely even less than that",
    "start": "445360",
    "end": "452000"
  },
  {
    "text": "it's fast because resources are stored in ram and when there's a cache hit for a resource in the memory cache it's super",
    "start": "452000",
    "end": "458240"
  },
  {
    "text": "fast but again you don't have any control over it it's just an optimization that uses browsers",
    "start": "458240",
    "end": "464160"
  },
  {
    "text": "internals and heuristics to figure out whether or not it should keep things in it then we have the disk cache also known as the http",
    "start": "464160",
    "end": "471919"
  },
  {
    "text": "cache this is the cache you control with cache control headers it's also a persistent cache and that",
    "start": "471919",
    "end": "478560"
  },
  {
    "text": "resources live in it for as long as the cache control header dictates like max age so long as resources aren't evicted from",
    "start": "478560",
    "end": "485680"
  },
  {
    "text": "the cache before that point then we have the service worker cache which",
    "start": "485680",
    "end": "491199"
  },
  {
    "text": "is controlled by the cache storage api and is layered upon the memory and disk caches and this is a programmatic cache",
    "start": "491199",
    "end": "497599"
  },
  {
    "text": "that is controlled by javascript and that's what makes it so special unlike the http cache which is just it's",
    "start": "497599",
    "end": "504639"
  },
  {
    "text": "a key value uh sort of directive you know you can't really program it beyond just",
    "start": "504639",
    "end": "510080"
  },
  {
    "text": "putting in a couple of flags like max age s max age private public things like that",
    "start": "510080",
    "end": "515518"
  },
  {
    "text": "and but the cash storage api is very flexible and that the flexibility and programmatic",
    "start": "515519",
    "end": "521919"
  },
  {
    "text": "aspect of it is what really gives it incredible capability the service worker cache is the key cog",
    "start": "521919",
    "end": "527760"
  },
  {
    "text": "here if you'll pardon the wording and the one thing that makes that can make transitions between pages in multi",
    "start": "527760",
    "end": "532959"
  },
  {
    "text": "applications feel really fast which brings us back to streams",
    "start": "532959",
    "end": "538000"
  },
  {
    "text": "again what can make those transitions fast is the streams api and javascript in",
    "start": "538000",
    "end": "543600"
  },
  {
    "text": "combination with the service worker cache and i'll show you how using workbox a framework that abstracts the",
    "start": "543600",
    "end": "549279"
  },
  {
    "text": "service worker api as well as the performance benefits that come with streaming responses to navigation",
    "start": "549279",
    "end": "554560"
  },
  {
    "text": "requests before we can stream partial responses from the network and combine them with",
    "start": "554560",
    "end": "561120"
  },
  {
    "text": "markup precache in the service worker cache we first need to look at a website's anatomy much like we do in",
    "start": "561120",
    "end": "566880"
  },
  {
    "text": "single page applications more specifically what are the common elements on every page of a website",
    "start": "566880",
    "end": "573440"
  },
  {
    "text": "the whole rigmarole is already so comp so sort of complicated so we'll want to start with a basic website just to see",
    "start": "573440",
    "end": "580000"
  },
  {
    "text": "how the concept kind of works this is the contact page for my personal website it's a simple website but it's",
    "start": "580000",
    "end": "587120"
  },
  {
    "text": "mine and i kind of like it this website like many others has a",
    "start": "587120",
    "end": "592240"
  },
  {
    "text": "predictable set of common elements the header which in this case also includes a navigation flyout which",
    "start": "592240",
    "end": "598720"
  },
  {
    "text": "consists of a fair bit of markup the content and then the footer which in this case",
    "start": "598720",
    "end": "605440"
  },
  {
    "text": "there isn't a lot of footer there of these elements there's only two things that stay the same from page to",
    "start": "605440",
    "end": "611680"
  },
  {
    "text": "page and those are the header and the footer the big thing that changes is the content all of these are what i'll refer",
    "start": "611680",
    "end": "617839"
  },
  {
    "text": "to as partials going forward as they are partial bits of markup that will assemble the final response that the",
    "start": "617839",
    "end": "623839"
  },
  {
    "text": "service worker will provide so this brings us to pre-caching which in service worker parlance is",
    "start": "623839",
    "end": "630399"
  },
  {
    "text": "something we do during the service workers install event when we pre-cache stuff we're telling the we're telling",
    "start": "630399",
    "end": "636720"
  },
  {
    "text": "the service worker hey these are some assets that are so critical to the user experience of this website that we",
    "start": "636720",
    "end": "642880"
  },
  {
    "text": "should request them and place them in the service worker cache immediately when we install it that could be any",
    "start": "642880",
    "end": "648000"
  },
  {
    "text": "crucial scripts style sheets images literally anything else or in the case",
    "start": "648000",
    "end": "653200"
  },
  {
    "text": "of a streaming service worker that we're about to build the partial header and footer markup for the page",
    "start": "653200",
    "end": "659680"
  },
  {
    "text": "so let's get started the first thing we'll need to do",
    "start": "659680",
    "end": "664800"
  },
  {
    "text": "is install the workbox packages we'll actually need workbox navigation preload which enables",
    "start": "664800",
    "end": "670320"
  },
  {
    "text": "the navigation preload functionality something we'll touch on soon workbox strategies which provides simplified",
    "start": "670320",
    "end": "676880"
  },
  {
    "text": "caching strategies for use in our service worker workbox routing which registers routes",
    "start": "676880",
    "end": "682160"
  },
  {
    "text": "using the caching strategies from workbox strategies i'll touch on this workbox precaching which handles",
    "start": "682160",
    "end": "688320"
  },
  {
    "text": "precaching which we talked about and we'll see soon enough workbox and this is the big one",
    "start": "688320",
    "end": "693600"
  },
  {
    "text": "workbox streams which helps us stitch together multiple pieces of partial markup into a",
    "start": "693600",
    "end": "699040"
  },
  {
    "text": "single one and uses the readable stream api under the hood to stream it all to the browser",
    "start": "699040",
    "end": "704640"
  },
  {
    "text": "because these are production dependencies i'm you know there'll be things we deploy to production",
    "start": "704640",
    "end": "710399"
  },
  {
    "text": "we'll want to use the save flag and not the save dev flag also just a quick note",
    "start": "710399",
    "end": "715920"
  },
  {
    "text": "the backslash the backslashes here are unnecessary it's just to make sure that the snippet is readable",
    "start": "715920",
    "end": "722480"
  },
  {
    "text": "then we'll create a file at the root of our project folders uh our projects src folder or whatever your project's source",
    "start": "723519",
    "end": "730480"
  },
  {
    "text": "directory is named swjs or serviceworker.js i prefer sw.js",
    "start": "730480",
    "end": "737279"
  },
  {
    "text": "to kick things off we'll import everything we need for the service worker to work",
    "start": "737279",
    "end": "742720"
  },
  {
    "text": "but don't sweat all this stuff we'll explain it as we go but here's a quick rundown of what we'll need",
    "start": "742720",
    "end": "748320"
  },
  {
    "text": "we need all of the workbox navigation preload module uh we need to use the",
    "start": "748320",
    "end": "753440"
  },
  {
    "text": "following strategies from workbox strategy a strategy uh to define a strategy in",
    "start": "753440",
    "end": "759600"
  },
  {
    "text": "service worker parlance just means um what is the interaction between the network and the cache and how should we",
    "start": "759600",
    "end": "767040"
  },
  {
    "text": "how should we program the interaction between those two things uh so there are three strategies we need which is the",
    "start": "767040",
    "end": "773040"
  },
  {
    "text": "cash first which means we go from the service worker we look in the service worker cash first um if",
    "start": "773040",
    "end": "779279"
  },
  {
    "text": "and if that resource doesn't exist then we fall back to the network strategy like we go to the network and this is",
    "start": "779279",
    "end": "786000"
  },
  {
    "text": "for static assets primarily like css files things that like have hash versioning in their names",
    "start": "786000",
    "end": "792320"
  },
  {
    "text": "the network first falling back to the cache strategy which is the opposite of the previous strategy for the content",
    "start": "792320",
    "end": "798839"
  },
  {
    "text": "partials that means like the partial content we're getting from the network",
    "start": "798839",
    "end": "804160"
  },
  {
    "text": "and the strategy handler needed for serving and streaming the combined partials",
    "start": "804160",
    "end": "809680"
  },
  {
    "text": "which this is what does the streaming and the stitching together which we'll get into we also need the register route",
    "start": "809680",
    "end": "815839"
  },
  {
    "text": "method and the route class necessary to establish the route handlers so that workbox or the service worker",
    "start": "815839",
    "end": "822480"
  },
  {
    "text": "knows which strategies to apply to which resources match precache method to get the",
    "start": "822480",
    "end": "829040"
  },
  {
    "text": "responses from the precache and the precache and route method which is used during install to pre-cache",
    "start": "829040",
    "end": "835279"
  },
  {
    "text": "assets and then finally there is the strategy method",
    "start": "835279",
    "end": "840399"
  },
  {
    "text": "aliased as the comp earliest as compose strategies here uh and this stitches partials together for streaming markup",
    "start": "840399",
    "end": "848639"
  },
  {
    "text": "then we need to enable navigation preload now yeah that thing um the thing",
    "start": "848639",
    "end": "854079"
  },
  {
    "text": "i said a little bit ago that i'd get into later i guess it is later now um so about navigation preload uh which",
    "start": "854079",
    "end": "862480"
  },
  {
    "text": "you can learn in far more detail in this great article by jake archibald than i have time to explain here",
    "start": "862480",
    "end": "868160"
  },
  {
    "text": "so i'll give you the the kind of the greatest hits uh navigation preload is a way of negating the delay that a service",
    "start": "868160",
    "end": "874320"
  },
  {
    "text": "worker can introduce when it boots up without navigation preload enabled this",
    "start": "874320",
    "end": "879839"
  },
  {
    "text": "is what can happen on a page controlled by a service worker the service worker boot up time can cause the navigation",
    "start": "879839",
    "end": "886560"
  },
  {
    "text": "request that is to say a request for an html document to be delayed it's not good for",
    "start": "886560",
    "end": "892560"
  },
  {
    "text": "your site's loading performance honestly sometimes it's imperceptible sometimes it's not sometimes it can actually",
    "start": "892560",
    "end": "898000"
  },
  {
    "text": "significantly delay that that that navigation request from even going out",
    "start": "898000",
    "end": "903920"
  },
  {
    "text": "however with navigation preload enabled the service worker can boot up while the navigation request is dispatched",
    "start": "903920",
    "end": "910639"
  },
  {
    "text": "ensuring that an active service worker doesn't delay page load it it's a great performance optimization but it does",
    "start": "910639",
    "end": "917519"
  },
  {
    "text": "cause an interesting uh an interesting set of circumstances to occur that you'll have to account for and i'll call",
    "start": "917519",
    "end": "924079"
  },
  {
    "text": "those out as we go through now back to the code",
    "start": "924079",
    "end": "929440"
  },
  {
    "text": "navigation preload support isn't a hundred percent across browsers so the nice thing about workbox's abstraction",
    "start": "929440",
    "end": "936480"
  },
  {
    "text": "of this service worker feature is that it will do all the feature detecting work for you regardless of",
    "start": "936480",
    "end": "941920"
  },
  {
    "text": "browser support kind of nice like you don't have to do all these like oh does this thing exist here and what do i do",
    "start": "941920",
    "end": "948079"
  },
  {
    "text": "if you know that's the great thing about tools um moving on",
    "start": "948079",
    "end": "953519"
  },
  {
    "text": "one of the things about workbox that's pretty cool is that you can establish multiple caches with ease",
    "start": "953519",
    "end": "958880"
  },
  {
    "text": "so here we're creating a couple strings for caches we'll define for later one for assets that are cached during",
    "start": "958880",
    "end": "965600"
  },
  {
    "text": "runtime runtime caching is you handle caching assets as they come in and as they're",
    "start": "965600",
    "end": "972240"
  },
  {
    "text": "requested as opposed to those that are pre-cached which are cached way ahead of time during the install event and two",
    "start": "972240",
    "end": "979360"
  },
  {
    "text": "a cache for content partials now on to precaching",
    "start": "979360",
    "end": "985360"
  },
  {
    "text": "when the service worker installs we want to make sure that we pre-cache a few things on top of some static assets",
    "start": "985360",
    "end": "991839"
  },
  {
    "text": "chief among these amongst these are three items the partial the the the partial",
    "start": "991839",
    "end": "997600"
  },
  {
    "text": "containing the header markup which in the case of my website as you saw before uh contains the markup for the header",
    "start": "997600",
    "end": "1003440"
  },
  {
    "text": "and quite a bit of markup uh for a settings fly out menu there's also the partial containing the",
    "start": "1003440",
    "end": "1010000"
  },
  {
    "text": "footer markup and then a content partial for an offline fallback which is displayed if",
    "start": "1010000",
    "end": "1017279"
  },
  {
    "text": "the last accessed version of a page isn't available in the service worker cache which could happen simply because",
    "start": "1017279",
    "end": "1024000"
  },
  {
    "text": "the user hasn't visited a specific page before because if they haven't why would it be in the service worker cache or a",
    "start": "1024000",
    "end": "1030240"
  },
  {
    "text": "page gets evicted from the cache for any number of reasons due to storage quota or workbox's own internal logic that can",
    "start": "1030240",
    "end": "1037280"
  },
  {
    "text": "prune things programmatically if they are sufficiently old or any number of heuristics",
    "start": "1037280",
    "end": "1043520"
  },
  {
    "text": "so workbox's precache and route method makes precaching much easier than if you",
    "start": "1043520",
    "end": "1048799"
  },
  {
    "text": "were to do it yourself the method accepts an array of items to precache but each item must be an object",
    "start": "1048799",
    "end": "1055039"
  },
  {
    "text": "containing the url of the item to precache as well as the revision hash as you can see here there's a placeholder",
    "start": "1055039",
    "end": "1061520"
  },
  {
    "text": "for each of the partials that were that were precaching for their for their revision hash",
    "start": "1061520",
    "end": "1066559"
  },
  {
    "text": "for items that don't have a hash in the file name think static assets like bundlers um",
    "start": "1066559",
    "end": "1072640"
  },
  {
    "text": "then the revision must be provided manually in this case we use a text replacement bundle uh plugin in a bundler uh webpack",
    "start": "1072640",
    "end": "1080160"
  },
  {
    "text": "in this case to replace placeholders for the revision stream which we generate at build time",
    "start": "1080160",
    "end": "1086160"
  },
  {
    "text": "finally we have the rest of the assets which are represented by the self.wb",
    "start": "1086160",
    "end": "1091440"
  },
  {
    "text": "manifest placeholder which the bundler will will replace with the static assets that we want to precache so in webpack",
    "start": "1091440",
    "end": "1098320"
  },
  {
    "text": "you can with the server with the workbox webpack plugin you can say you can use like a regular",
    "start": "1098320",
    "end": "1104320"
  },
  {
    "text": "expression to say these are the generated assets that i want to include or you can exclude things",
    "start": "1104320",
    "end": "1109919"
  },
  {
    "text": "and then when webpack builds that out it will replace that with that whole thing and it's an array so i use a spread",
    "start": "1109919",
    "end": "1115440"
  },
  {
    "text": "operator there but that's sort of secondary to the main idea of this talk",
    "start": "1115440",
    "end": "1121360"
  },
  {
    "text": "but if you have any questions about it specifically or really anything uh you can find me after the talk and we can",
    "start": "1121360",
    "end": "1126720"
  },
  {
    "text": "kind of we can kind of chew on it all right now strap in",
    "start": "1126720",
    "end": "1132400"
  },
  {
    "text": "this is the part that gets kind of complicated um and i hope it's visible i",
    "start": "1132400",
    "end": "1137440"
  },
  {
    "text": "can't really make it much bigger than that but i've tried to make all this stuff work",
    "start": "1137440",
    "end": "1143600"
  },
  {
    "text": "the next part involves the network first falling back to cash strategy to retrieve the content partial from the",
    "start": "1143600",
    "end": "1150559"
  },
  {
    "text": "network that will combine with the precache header and footer partials later on the way this strategy works is that if",
    "start": "1150559",
    "end": "1157039"
  },
  {
    "text": "the network is available a content partial will always be fetched from the network and placed into the service",
    "start": "1157039",
    "end": "1162960"
  },
  {
    "text": "worker cache using the cache name for the content partials that we established earlier",
    "start": "1162960",
    "end": "1168799"
  },
  {
    "text": "but if the user is offline the last access version the last accessed version of the content will be pulled from the",
    "start": "1168799",
    "end": "1175760"
  },
  {
    "text": "cache if it exists however",
    "start": "1175760",
    "end": "1180799"
  },
  {
    "text": "what we're trying to do is more complicated than what the network network first strategy can do out of the",
    "start": "1180799",
    "end": "1186640"
  },
  {
    "text": "box we have to account for a few things so that means we need to create this custom workbox plugin to handle some of",
    "start": "1186640",
    "end": "1192640"
  },
  {
    "text": "the thorny edge cases around getting this whole streaming thing to work workbox plugins are driven by a set of",
    "start": "1192640",
    "end": "1199360"
  },
  {
    "text": "callbacks that fire at different points in the request response and caching lifecycle that make up much of a service",
    "start": "1199360",
    "end": "1205760"
  },
  {
    "text": "workers behavior in this example we specify two methods in this custom plugin",
    "start": "1205760",
    "end": "1211679"
  },
  {
    "text": "the first is which you can see here request will fetch which is fired right before a fetch for the content partial",
    "start": "1211679",
    "end": "1218320"
  },
  {
    "text": "is sent to the network in that callback we have access to the original request",
    "start": "1218320",
    "end": "1224559"
  },
  {
    "text": "object in this callback we want to check if navigation preload is supported",
    "start": "1224559",
    "end": "1229679"
  },
  {
    "text": "now this is important because when navigation preload is enabled navigation requests",
    "start": "1229679",
    "end": "1234960"
  },
  {
    "text": "can't be handled by the service worker because remember they're dispatched as the service worker is booting up",
    "start": "1234960",
    "end": "1241440"
  },
  {
    "text": "but we can we can use this additional header and this header is a navigation request",
    "start": "1241440",
    "end": "1247360"
  },
  {
    "text": "when navigation preload is enabled is sent with this additional service worker navigation preload header that contains",
    "start": "1247360",
    "end": "1253840"
  },
  {
    "text": "a value of true the presence of this header is pivotal for content partials on my website",
    "start": "1253840",
    "end": "1259120"
  },
  {
    "text": "because it's read on the backend to determine if a route should return a full response for a page containing the",
    "start": "1259120",
    "end": "1264400"
  },
  {
    "text": "header and the footer which will happen if a service worker isn't installed",
    "start": "1264400",
    "end": "1269840"
  },
  {
    "text": "or just the content partial that the service worker will return with the precache header and the footer",
    "start": "1269840",
    "end": "1275039"
  },
  {
    "text": "partials that are stored on the client the reason we need to do this is because the first visit for the page won't have",
    "start": "1275039",
    "end": "1281440"
  },
  {
    "text": "a service worker controlling the page and you'll want to make sure that your website isn't broken in that case because without a header you're probably",
    "start": "1281440",
    "end": "1287760"
  },
  {
    "text": "not including style sheets and you'll just get this weird unstyled piece of partial content",
    "start": "1287760",
    "end": "1294080"
  },
  {
    "text": "but the problem is browsers that don't support navigation preload in this case we create a custom x content mode header",
    "start": "1294080",
    "end": "1301280"
  },
  {
    "text": "with about with a value of partial that we can then send to the server so even if clients that don't support navigation",
    "start": "1301280",
    "end": "1306880"
  },
  {
    "text": "preload will download a content partial rather than the full page we still have a hook to make this whole thing work",
    "start": "1306880",
    "end": "1314960"
  },
  {
    "text": "now on my website's php backend i know php",
    "start": "1315280",
    "end": "1320720"
  },
  {
    "text": "that process looks like this look it's what i learned you know you gotta start somewhere",
    "start": "1320720",
    "end": "1326080"
  },
  {
    "text": "i i require all the stuff needed to either render a full page or a content",
    "start": "1326080",
    "end": "1331440"
  },
  {
    "text": "partial and then excuse me using a helper function that checks for either the service worker navigation",
    "start": "1331440",
    "end": "1338320"
  },
  {
    "text": "preload header or the custom x content mode header i created i decide how to",
    "start": "1338320",
    "end": "1344000"
  },
  {
    "text": "send content i also use the is partial variable return from the is partial helper",
    "start": "1344000",
    "end": "1349440"
  },
  {
    "text": "function and the various functions utility functions that i use to emit partial markup because there are some as",
    "start": "1349440",
    "end": "1355360"
  },
  {
    "text": "i said weird edge cases that i have to deal with when dealing with partial content and a service worker that's",
    "start": "1355360",
    "end": "1360400"
  },
  {
    "text": "stuff we'll all kind of go over now the helper function that checks for the uh for the request headers is pretty",
    "start": "1360400",
    "end": "1367760"
  },
  {
    "text": "terse uh it just checks if the server super global array uh to see if either",
    "start": "1367760",
    "end": "1372880"
  },
  {
    "text": "if either the pertinent request header is set uh and that its value is what is what is expected",
    "start": "1372880",
    "end": "1380240"
  },
  {
    "text": "how you do this will vary vary based on your application back end if you don't have a backend such as say a statically",
    "start": "1380240",
    "end": "1387280"
  },
  {
    "text": "generated website then your logic will vary um in this case you'll have to output two versions of each page one",
    "start": "1387280",
    "end": "1393600"
  },
  {
    "text": "with the full markup and one with just the partial markup and your service worker logic would have to change too uh rather than than using",
    "start": "1393600",
    "end": "1400960"
  },
  {
    "text": "the request like the the navigation preload header or the x content mode header you would",
    "start": "1400960",
    "end": "1406720"
  },
  {
    "text": "likely just rewrite the request url to just grab the partial version um and that's something if you don't want to",
    "start": "1406720",
    "end": "1412320"
  },
  {
    "text": "muck around with headers you could you could do that anyway but this is how i came to it now",
    "start": "1412320",
    "end": "1418320"
  },
  {
    "text": "back to the service worker code now that we've finished with the request will fetch handler we need to add one",
    "start": "1418320",
    "end": "1424320"
  },
  {
    "text": "more handler if there's an error just to cover our butts a little bit remember that i said that this content",
    "start": "1424320",
    "end": "1431120"
  },
  {
    "text": "partial strategy uses the network first falling back to cache pattern where if",
    "start": "1431120",
    "end": "1436320"
  },
  {
    "text": "the network request fails for some reason uh whether you're offline principally if you're offline if you're",
    "start": "1436320",
    "end": "1441919"
  },
  {
    "text": "on what we call li-fi we retrieve the last access version of a page from the cache but this can fail",
    "start": "1441919",
    "end": "1449120"
  },
  {
    "text": "too perhaps the user hasn't visited a page at all or as i said maybe that that",
    "start": "1449120",
    "end": "1454159"
  },
  {
    "text": "content partial was already evicted from the cache so we need to have that offline fallback that we pre-cached",
    "start": "1454159",
    "end": "1461039"
  },
  {
    "text": "to do that we manually query the cache interface to see if it has the current url if it does",
    "start": "1461039",
    "end": "1467600"
  },
  {
    "text": "we're in business we can just display that the user will get something and everything's good but if it doesn't we need to check if",
    "start": "1467600",
    "end": "1474320"
  },
  {
    "text": "the response returned from the cache is undefined and if it is we grab that offline fallback from the precache and",
    "start": "1474320",
    "end": "1480720"
  },
  {
    "text": "use it instead and the the type of offline fallback you do is really up to you it can be a",
    "start": "1480720",
    "end": "1488159"
  },
  {
    "text": "simple oh no you're offline type page or it can be more involved",
    "start": "1488159",
    "end": "1494320"
  },
  {
    "text": "fun fact access to the cache interface isn't limited to the service worker scope you can actually access caches",
    "start": "1494320",
    "end": "1501440"
  },
  {
    "text": "from the window context as well so on my offline page i use a script to sift through the content partial cache to",
    "start": "1501440",
    "end": "1507919"
  },
  {
    "text": "find previously cached pages and then i use javascript to populate a list of pages that are available offline so the",
    "start": "1507919",
    "end": "1514880"
  },
  {
    "text": "user has some choices about where they can go until they get back online now",
    "start": "1514880",
    "end": "1520240"
  },
  {
    "text": "i don't have a lot of space in this talk unfortunately to cover how to access caches from the window but if you are",
    "start": "1520240",
    "end": "1526640"
  },
  {
    "text": "interested in learning more about this i wrote a guide in the workbox documentation um i",
    "start": "1526640",
    "end": "1532640"
  },
  {
    "text": "we recently by the way deployed new documentation for workbox that i worked on last year and we launched earlier",
    "start": "1532640",
    "end": "1538559"
  },
  {
    "text": "this year check it out this is one of those documents it has a glitch demo embedded",
    "start": "1538559",
    "end": "1544240"
  },
  {
    "text": "that shows you how to do this give it a look if that is the kind of thing that interests you i really like blade runner",
    "start": "1544240",
    "end": "1552240"
  },
  {
    "text": "now for the fun part assembling the the partial content with the network",
    "start": "1552320",
    "end": "1557840"
  },
  {
    "text": "with the precached header and footer markup this is where the workbox streams module",
    "start": "1557840",
    "end": "1563120"
  },
  {
    "text": "comes into play the aliased compose strategies method offered by workbox takes an array of",
    "start": "1563120",
    "end": "1568880"
  },
  {
    "text": "responses each array must return a response and merges them into one",
    "start": "1568880",
    "end": "1574000"
  },
  {
    "text": "response that uses the readable stream interface which is abstracted by workbox streams",
    "start": "1574000",
    "end": "1579520"
  },
  {
    "text": "the workbox streams module to begin streaming that content to the browser as soon as possible",
    "start": "1579520",
    "end": "1586240"
  },
  {
    "text": "now for the piece de resistance um my horrible french accent uh",
    "start": "1586240",
    "end": "1591679"
  },
  {
    "text": "wire up the wiring up the route for navigation requests this one is a terse one liner you call",
    "start": "1591679",
    "end": "1598400"
  },
  {
    "text": "the register route method and in that callback for the method's first argument you ensure that that this",
    "start": "1598400",
    "end": "1604159"
  },
  {
    "text": "route only applies to navigation requests and the way we do that is through request.mode which has a number",
    "start": "1604159",
    "end": "1610799"
  },
  {
    "text": "of things request.mode um can can i don't know them all off the top my head but one of them is navigate which",
    "start": "1610799",
    "end": "1617679"
  },
  {
    "text": "applies to navigation requests um and then assign it uh the navigation handler",
    "start": "1617679",
    "end": "1622799"
  },
  {
    "text": "that we uh that we built earlier that has like the custom plugin and all like the logic around the custom headers",
    "start": "1622799",
    "end": "1628960"
  },
  {
    "text": "as well as the content strategy handler and then to top it off",
    "start": "1628960",
    "end": "1634640"
  },
  {
    "text": "and this one's kind of an aside but i might as well go through it anyway we create a new route for just static",
    "start": "1634640",
    "end": "1639679"
  },
  {
    "text": "assets and this will cover any static assets that were not precached when the bundler generated the service worker and",
    "start": "1639679",
    "end": "1645120"
  },
  {
    "text": "this just makes sure that future visits will reuse static assets from the cash and it doesn't have much to do with the",
    "start": "1645120",
    "end": "1650880"
  },
  {
    "text": "talk itself but again i'm happy to answer any questions you may have about it if you know you're just like hey i",
    "start": "1650880",
    "end": "1657120"
  },
  {
    "text": "don't get what you're doing here um service workers pretty complicated so no",
    "start": "1657120",
    "end": "1662159"
  },
  {
    "text": "judgment like any questions at all come and find me all in all the finished workbox powered",
    "start": "1662159",
    "end": "1668320"
  },
  {
    "text": "service worker is about 75 lines it's really not a lot of javascript although the the bundle for the service worker",
    "start": "1668320",
    "end": "1675440"
  },
  {
    "text": "will probably be about 20k which for an off main thread service worker is",
    "start": "1675440",
    "end": "1681039"
  },
  {
    "text": "really like pretty small and has minimal impact on like the responsiveness of your application",
    "start": "1681039",
    "end": "1687200"
  },
  {
    "text": "and that's far less than if you tried to do this all yourself and i know how hard that is because i've done it myself and",
    "start": "1687200",
    "end": "1692640"
  },
  {
    "text": "i've done it that way and it is a mess it's it's it's not that these apis are badly designed it's that this is a very",
    "start": "1692640",
    "end": "1699360"
  },
  {
    "text": "complicated thing to do on your own i highly recommend using workbox if you just want to you know get going with",
    "start": "1699360",
    "end": "1705279"
  },
  {
    "text": "things so after all of that you might be wondering",
    "start": "1705279",
    "end": "1710399"
  },
  {
    "text": "is this even worth it in my opinion it is absolutely worth it especially from the",
    "start": "1710399",
    "end": "1718000"
  },
  {
    "text": "core web vitals perspective or the web vitals perspective which um which includes has five metrics whereas",
    "start": "1718000",
    "end": "1724880"
  },
  {
    "text": "core web vitals is three first let's look at what the lab data tells us",
    "start": "1724880",
    "end": "1730880"
  },
  {
    "text": "to obtain that we turn to our good old pal web page test now",
    "start": "1730880",
    "end": "1737279"
  },
  {
    "text": "let me be clear webpagetest is a lab tool it is not",
    "start": "1737279",
    "end": "1742320"
  },
  {
    "text": "always reflective of what actual performance is like for real users in the field but webpagetest is an",
    "start": "1742320",
    "end": "1749039"
  },
  {
    "text": "excellent lab tool for testing performance changes from a consistent baseline",
    "start": "1749039",
    "end": "1754080"
  },
  {
    "text": "these are tools that you use during development it's perfect for spot checking how say a streaming service",
    "start": "1754080",
    "end": "1759200"
  },
  {
    "text": "worker for example can impact performance so in this comparison we're going to see",
    "start": "1759200",
    "end": "1764720"
  },
  {
    "text": "how performance is affected with uh and without a streaming service worker using an emulated moto g4 phone",
    "start": "1764720",
    "end": "1771919"
  },
  {
    "text": "running chrome on a throttle 3g connection located in sao paulo which now i realize is actually a really kind",
    "start": "1771919",
    "end": "1778720"
  },
  {
    "text": "of relevant thing to portugal now let me play the first video on the",
    "start": "1778720",
    "end": "1784080"
  },
  {
    "text": "left which is the homepage of my website with no service worker installed and active",
    "start": "1784080",
    "end": "1789520"
  },
  {
    "text": "pay close attention waiting",
    "start": "1789520",
    "end": "1794880"
  },
  {
    "text": "well now that's not an unusual page load experience right and it's not even that",
    "start": "1794880",
    "end": "1801679"
  },
  {
    "text": "slow uh all things considered you know on a slower connection like that that's not unacceptable",
    "start": "1801679",
    "end": "1807039"
  },
  {
    "text": "but now let's see how that looks on the same connection with a streaming service worker",
    "start": "1807039",
    "end": "1814480"
  },
  {
    "text": "pretty fast you'll notice the header appears immediately and that's the power of",
    "start": "1816880",
    "end": "1821919"
  },
  {
    "text": "streaming partials from the precache and combining them with partial content from the network you get an immediate first",
    "start": "1821919",
    "end": "1828640"
  },
  {
    "text": "contentful paint and assurance that something is happening then when the content does appear from",
    "start": "1828640",
    "end": "1834559"
  },
  {
    "text": "the network that streams in and completes the page load we get instant feedback that something is happening and",
    "start": "1834559",
    "end": "1841200"
  },
  {
    "text": "it's pretty powerful stuff now remember again",
    "start": "1841200",
    "end": "1846320"
  },
  {
    "text": "webpagetest is a lab tool lab tools are great for iterative development where you're trying to figure out how changes",
    "start": "1846320",
    "end": "1852320"
  },
  {
    "text": "to your website affect page speed but in order to see how your actual users are experiencing things in the field you",
    "start": "1852320",
    "end": "1859200"
  },
  {
    "text": "have to do you have to grab field data or run data as it's called",
    "start": "1859200",
    "end": "1865200"
  },
  {
    "text": "on my website i collect performance metrics or rather the five web vitals three of which are",
    "start": "1865200",
    "end": "1870480"
  },
  {
    "text": "the core web vitals using the web vitals js library that is part of the google",
    "start": "1870480",
    "end": "1875600"
  },
  {
    "text": "chrome organization i highly recommend it it's an especially great and simple tool if you just have a simple or if you",
    "start": "1875600",
    "end": "1882880"
  },
  {
    "text": "have a simplified field data collection solution that you rolled yourself um but it's powerful enough that huge enterprise apps can get good field",
    "start": "1882880",
    "end": "1889360"
  },
  {
    "text": "performance insights from it as well now not all web vitals are relevant to the",
    "start": "1889360",
    "end": "1895120"
  },
  {
    "text": "streaming service worker concept um first input delay or fid is in my opinion weakly tied uh sometimes to how",
    "start": "1895120",
    "end": "1902640"
  },
  {
    "text": "the f fast the page loads although that's debatable now i think about it i could be wrong",
    "start": "1902640",
    "end": "1908480"
  },
  {
    "text": "but it is the first input and theoretically that could be at any point in the page life cycle right it may",
    "start": "1908480",
    "end": "1915200"
  },
  {
    "text": "typically be as the page loads but sometimes a user doesn't interact with",
    "start": "1915200",
    "end": "1921600"
  },
  {
    "text": "the page right away uh cumulative layout shift or cls is also not time based it's",
    "start": "1921600",
    "end": "1926640"
  },
  {
    "text": "a float based metric that changes that tracks how much page elements cause layout shifts uh it could be relevant",
    "start": "1926640",
    "end": "1932080"
  },
  {
    "text": "now that i think of it again i'm undermining myself on stage go me um",
    "start": "1932080",
    "end": "1937279"
  },
  {
    "text": "because uh when you have like things like fonts that are in the pre that are pre-cached um you know the service",
    "start": "1937279",
    "end": "1942960"
  },
  {
    "text": "worker uh with or without the streaming concept could have an effect on cls in fact it probably does so i just lied to",
    "start": "1942960",
    "end": "1949120"
  },
  {
    "text": "you i'm sorry but what we want to focus on though are are the are the other web vitals time to",
    "start": "1949120",
    "end": "1956320"
  },
  {
    "text": "first byte uh or ttfb first contentful paint or fcp and",
    "start": "1956320",
    "end": "1962159"
  },
  {
    "text": "largest contentful paint or lcp now before i begin with the stats i just",
    "start": "1962159",
    "end": "1967840"
  },
  {
    "text": "want to say a bit on the subject of averages in my capacity as a technical writer and",
    "start": "1967840",
    "end": "1973679"
  },
  {
    "text": "being involved with the core web vitals team we discourage using averages um they",
    "start": "1973679",
    "end": "1979279"
  },
  {
    "text": "seem convenient i just throw all these numbers together and i just divide by how many they are and i get a nice tidy",
    "start": "1979279",
    "end": "1984559"
  },
  {
    "text": "number but they can be skewed by outliers right like say at the long tail of things",
    "start": "1984559",
    "end": "1991919"
  },
  {
    "text": "you might have like some really poor experiences and or like you have a lot of really fast ones that can really kind",
    "start": "1991919",
    "end": "1998720"
  },
  {
    "text": "of pull that average in either direction and it's not represent and most importantly in my opinion an average is",
    "start": "1998720",
    "end": "2005200"
  },
  {
    "text": "not really representative of any one actual user experience it's an amalgamation",
    "start": "2005200",
    "end": "2010799"
  },
  {
    "text": "instead we we focus on and strongly encourage the use of percentiles and our",
    "start": "2010799",
    "end": "2016720"
  },
  {
    "text": "guidance recommends ensuring that your metrics are at the good threshold for any given metric at the 75th percentile",
    "start": "2016720",
    "end": "2024159"
  },
  {
    "text": "and the 75th percentile is fine but i like to go a little bit further and i like to focus on the 90th or",
    "start": "2024159",
    "end": "2030320"
  },
  {
    "text": "sometimes even the 95th percentile because if i can improve the 10 or 5",
    "start": "2030320",
    "end": "2035600"
  },
  {
    "text": "percent of worst user experiences i'm definitely improving the experience for",
    "start": "2035600",
    "end": "2040720"
  },
  {
    "text": "every other percentile below it and now for the stats at the 90th percentile",
    "start": "2040720",
    "end": "2047840"
  },
  {
    "text": "without a service worker my personal website's first contentful paint was about 2.7 seconds at the 90th percentile",
    "start": "2048800",
    "end": "2057358"
  },
  {
    "text": "that's not a bad lcp at that point in the distribution when you think about it it's it's not blazing fast but it's",
    "start": "2057359",
    "end": "2063760"
  },
  {
    "text": "acceptable on a slow connection that you would see at that point in the distribution",
    "start": "2063760",
    "end": "2069599"
  },
  {
    "text": "except with a streaming service worker first contentful paint is improved by nearly",
    "start": "2069599",
    "end": "2074878"
  },
  {
    "text": "80 percent to 584 milliseconds and that is a massive improvement in perceived",
    "start": "2074879",
    "end": "2081440"
  },
  {
    "text": "perceived performance users with a streaming service worker are seeing content appear much faster than without",
    "start": "2081440",
    "end": "2088158"
  },
  {
    "text": "one the gains in lcp are more modest compared to fcp but still significant",
    "start": "2088159",
    "end": "2097040"
  },
  {
    "text": "without a service worker the 90th percentile of collected lcp values was at about 2.8 seconds",
    "start": "2097359",
    "end": "2105599"
  },
  {
    "text": "however with a streaming service worker we shave 28 off of lcp and get about two seconds uh",
    "start": "2105599",
    "end": "2113119"
  },
  {
    "text": "at the 90th percentile that's not insignificant and chances are",
    "start": "2113119",
    "end": "2118480"
  },
  {
    "text": "it's well it should be noted that that lcp can vary widely based on screen size",
    "start": "2118480",
    "end": "2123520"
  },
  {
    "text": "for example a hero image on a mobile device may not be the largest paint maybe it'll be a paragraph or another",
    "start": "2123520",
    "end": "2130079"
  },
  {
    "text": "element that lcp accounts for whereas on a larger screen the opposite might be",
    "start": "2130079",
    "end": "2135119"
  },
  {
    "text": "true um in any event the streaming service worker gives us enough of an advantage that that an lcp",
    "start": "2135119",
    "end": "2142000"
  },
  {
    "text": "no matter where it is uh happens sooner because downloading partial markup as",
    "start": "2142000",
    "end": "2147200"
  },
  {
    "text": "well as the runtime caching of static assets gives us a decent boost",
    "start": "2147200",
    "end": "2152880"
  },
  {
    "text": "now ttfb is where streaming is really effective",
    "start": "2152880",
    "end": "2158960"
  },
  {
    "text": "at the 90th percentile without a service worker we have a ttfb of about 1.85 seconds it's not the greatest um it's",
    "start": "2158960",
    "end": "2166560"
  },
  {
    "text": "definitely above where we like to be i think we like to keep our ttfb like below 500 milliseconds but",
    "start": "2166560",
    "end": "2173040"
  },
  {
    "text": "networks and physics being what they are we don't always get our way um but it's workable on a slow connection that",
    "start": "2173040",
    "end": "2178880"
  },
  {
    "text": "you'll likely experience at this point in in the distribution however",
    "start": "2178880",
    "end": "2185040"
  },
  {
    "text": "with a streaming service worker we reduce ttfb by 90 to 187 milliseconds",
    "start": "2185040",
    "end": "2191040"
  },
  {
    "text": "that's incredible but it's not unusual and it's in it it's logical that it is this way the reason for such a low ttfb",
    "start": "2191040",
    "end": "2198560"
  },
  {
    "text": "is that as far as the browser is concerned the first byte streaming from the precached header partial count",
    "start": "2198560",
    "end": "2203599"
  },
  {
    "text": "towards ttfb it's it's like the service worker itself is like a little mini web",
    "start": "2203599",
    "end": "2208720"
  },
  {
    "text": "server that is just serving this content and at lower percentiles it was not uncommon to see extremely low",
    "start": "2208720",
    "end": "2216079"
  },
  {
    "text": "values i s in my distribution at the beginning and like the first like",
    "start": "2216079",
    "end": "2221200"
  },
  {
    "text": "i don't know how many it was but like at the first like 20 to 50 rows were just straight up zero like it was",
    "start": "2221200",
    "end": "2227520"
  },
  {
    "text": "instant like and when you use this thing sometimes it's just like whoa like that came up really fast",
    "start": "2227520",
    "end": "2233119"
  },
  {
    "text": "i love web performance uh now there are challenges to this type of",
    "start": "2233119",
    "end": "2239520"
  },
  {
    "text": "architecture should you choose to pursue it and i'd be remiss if i didn't just point at least a few",
    "start": "2239520",
    "end": "2245520"
  },
  {
    "text": "things out there are they're not caveats that make this approach unworkable or even unscalable it's just stuff that you need",
    "start": "2245520",
    "end": "2252880"
  },
  {
    "text": "to be aware of and in some cases stuff that you have to be aware of even for single page applications except maybe",
    "start": "2252880",
    "end": "2258079"
  },
  {
    "text": "some of those tools take care of that for you whereas in this case you kind of have to figure it out on your own otherwise some of the external",
    "start": "2258079",
    "end": "2265359"
  },
  {
    "text": "consistency around what browsers do when they navigate from page to page occur and for",
    "start": "2265359",
    "end": "2270800"
  },
  {
    "text": "what it's worth that stuff can be lost right and for what it's worth a lot of the",
    "start": "2270800",
    "end": "2276320"
  },
  {
    "text": "same caveats that single page application architectures have to account for as well",
    "start": "2276320",
    "end": "2282160"
  },
  {
    "text": "this first is understanding the first thing is understanding what happens with the title element uh it might seem a",
    "start": "2282160",
    "end": "2288720"
  },
  {
    "text": "touch weird but it is a concern uh with not just the streaming service worker pattern but with spas too",
    "start": "2288720",
    "end": "2295839"
  },
  {
    "text": "so when a navigation occurs however you define what a navigation means you need",
    "start": "2295839",
    "end": "2300880"
  },
  {
    "text": "to change the contents of the title element but this particular requirement is",
    "start": "2300880",
    "end": "2306480"
  },
  {
    "text": "tricky because when we pre-cache the header partial which contains the title element we're reusing that partial for",
    "start": "2306480",
    "end": "2313040"
  },
  {
    "text": "all pages and not every page in a website has the same content in the title element but there is a way around",
    "start": "2313040",
    "end": "2320240"
  },
  {
    "text": "this when we pre-cache the header partial we leave the title element empty if the header is not used as part of a",
    "start": "2320240",
    "end": "2327200"
  },
  {
    "text": "full response using a conditional on the back end so what that means is if no service worker is controlling the page",
    "start": "2327200",
    "end": "2333520"
  },
  {
    "text": "we populate the title as usual if there is a service worker we don't populate it because we have to populate",
    "start": "2333520",
    "end": "2339599"
  },
  {
    "text": "it on the client in the header partial's head element we use this bit of inline javascript it",
    "start": "2339599",
    "end": "2346880"
  },
  {
    "text": "needs to run in a in a dom content loaded event callback because within it we're selecting an",
    "start": "2346880",
    "end": "2352560"
  },
  {
    "text": "element that isn't part of the dom yet so we need to wait for the dom to be constructed once the callback fires it will read the",
    "start": "2352560",
    "end": "2359440"
  },
  {
    "text": "contents the text contents of a script element in the body in the content partial with",
    "start": "2359440",
    "end": "2365280"
  },
  {
    "text": "a type attribute value of application json and parse it into an object it then",
    "start": "2365280",
    "end": "2370720"
  },
  {
    "text": "uses the contents of the object's title property to update the title element",
    "start": "2370720",
    "end": "2375839"
  },
  {
    "text": "through document.title this is a minimal example of what the",
    "start": "2375839",
    "end": "2381440"
  },
  {
    "text": "inline script containing the json looks like there's more data than this for each page for for other reasons in",
    "start": "2381440",
    "end": "2387440"
  },
  {
    "text": "particular the offline fallback that generates that that list of pages you can access offline but this is the basic",
    "start": "2387440",
    "end": "2393280"
  },
  {
    "text": "idea and that idea is that each page's content partial will have this data on the page so that the script in the head",
    "start": "2393280",
    "end": "2399440"
  },
  {
    "text": "can read its value and update the title element with it",
    "start": "2399440",
    "end": "2404400"
  },
  {
    "text": "now for the other weird part of this whole thing when you're on a slow connection you get",
    "start": "2405359",
    "end": "2412240"
  },
  {
    "text": "this sort of weird effect that happens where the precached header markup arrives instantly but the content",
    "start": "2412240",
    "end": "2418000"
  },
  {
    "text": "partial of the network is taking a while to arrive in full and i had to learn this the hard way",
    "start": "2418000",
    "end": "2423200"
  },
  {
    "text": "because i did this for a client of mine that i've had for a while from wisconsin",
    "start": "2423200",
    "end": "2429200"
  },
  {
    "text": "and my wife and i last summer we went up to two harbors minnesota which",
    "start": "2429200",
    "end": "2435040"
  },
  {
    "text": "if you know the geography of minnesota i'm from the twin cities the twin cities just kind of south like toward iowa",
    "start": "2435040",
    "end": "2441680"
  },
  {
    "text": "where i'm regrettably from uh and then uh two harbors is like kind of remote it's",
    "start": "2441680",
    "end": "2447920"
  },
  {
    "text": "up by the lake uh lake superior and i was sitting in a cafe and i wanted to test this out on a slow connection because internet up there just sucks",
    "start": "2447920",
    "end": "2455119"
  },
  {
    "text": "and i was noticing that the the header was showing up very quickly but then everything below it was just like",
    "start": "2455119",
    "end": "2462160"
  },
  {
    "text": "nothing's appearing i was like oh the pre-cache is delivering that content the",
    "start": "2462160",
    "end": "2467839"
  },
  {
    "text": "header content immediately but the network is so slow that it's just taking a while for that to populate",
    "start": "2467839",
    "end": "2473920"
  },
  {
    "text": "so when that happens this is what you end up with a header that appears with no content until the",
    "start": "2473920",
    "end": "2480960"
  },
  {
    "text": "network delivers it if it delivers it now if you're on a slow connection and you return to a website with an active",
    "start": "2480960",
    "end": "2487359"
  },
  {
    "text": "service worker that uses the streaming pattern we just covered you'd think that maybe the page is broken or you'd see",
    "start": "2487359",
    "end": "2493040"
  },
  {
    "text": "the spinner icon in the browser tab and wonder if the server is responding too slowly or at all",
    "start": "2493040",
    "end": "2499680"
  },
  {
    "text": "either way you've got to give the user some indication that the page is loading in",
    "start": "2499680",
    "end": "2505040"
  },
  {
    "text": "the ui of the website after all this is something again single page applications",
    "start": "2505040",
    "end": "2510160"
  },
  {
    "text": "frequently do it's not an unusual user experience signal that something's going on",
    "start": "2510160",
    "end": "2515680"
  },
  {
    "text": "now there are a lot of ways that you could do this oh sorry the simplest uses the css empty",
    "start": "2515680",
    "end": "2523520"
  },
  {
    "text": "pseudo selector for example say your header partial ends with an open main tag well in this case an empty",
    "start": "2523520",
    "end": "2531280"
  },
  {
    "text": "pseudo selector would match until the partial content arrives meaning the content rule here would put in a loading",
    "start": "2531280",
    "end": "2537839"
  },
  {
    "text": "message and that's probably the easiest method of signaling to the user that something",
    "start": "2537839",
    "end": "2543200"
  },
  {
    "text": "is happening but there are other ways for example you could use set time set timeout in",
    "start": "2543200",
    "end": "2549520"
  },
  {
    "text": "some inline javascript to deliver a loading message if something hasn't arrived within a certain time frame but",
    "start": "2549520",
    "end": "2554960"
  },
  {
    "text": "in all honesty i prefer something of a different approach this method uses the navigator",
    "start": "2554960",
    "end": "2560240"
  },
  {
    "text": "interface's effective connection type property while this property is only supported in",
    "start": "2560240",
    "end": "2565359"
  },
  {
    "text": "chrome and browsers derived from it such as edge and opera and others those",
    "start": "2565359",
    "end": "2570400"
  },
  {
    "text": "browsers do constitute a decent share of users in this case it's like 72 percent",
    "start": "2570400",
    "end": "2576800"
  },
  {
    "text": "this inline script uses the optional chaining operator to grab the effective connection type from the navigate",
    "start": "2576800",
    "end": "2583160"
  },
  {
    "text": "navigator.connection object this avoids the sort of errors that you would get when an object property doesn't exist in",
    "start": "2583160",
    "end": "2590000"
  },
  {
    "text": "some browsers and it avoids breaking stuff and you don't have to do that stuff like connection in navigator and like have",
    "start": "2590000",
    "end": "2596560"
  },
  {
    "text": "nested conditionals and all that stuff then we check if the affected type isn't",
    "start": "2596560",
    "end": "2601760"
  },
  {
    "text": "4g which describes the fastest possible connection type described in the network information api",
    "start": "2601760",
    "end": "2608400"
  },
  {
    "text": "it's a set of enumerated values so if the value returned is either 2g 3g or 3g fast we add a class of slow to",
    "start": "2608400",
    "end": "2616720"
  },
  {
    "text": "the html element then in css i've defined an animation that creates a",
    "start": "2616720",
    "end": "2622960"
  },
  {
    "text": "little loading spinner now i did this because i didn't want to load an extra image but i'm not i'm not going to get into",
    "start": "2622960",
    "end": "2629359"
  },
  {
    "text": "the entirety of the css itself since it's kind of up to you how you want to do this but the idea is that i have this",
    "start": "2629359",
    "end": "2635599"
  },
  {
    "text": "bit of html with some markup that has a series of sort of pulsating dots right",
    "start": "2635599",
    "end": "2640720"
  },
  {
    "text": "and it looks like any number of spinners or loading icons that you might see here i take care to make sure that the",
    "start": "2640720",
    "end": "2646880"
  },
  {
    "text": "spinner is reasonably excuse me reasonably accessible so i give it an aria label with a",
    "start": "2646880",
    "end": "2652720"
  },
  {
    "text": "content of loading page uh and i remove the elements that represent the dots from the",
    "start": "2652720",
    "end": "2658640"
  },
  {
    "text": "accessibility tree with the aria hidden elements or yeah aria hidden attributes",
    "start": "2658640",
    "end": "2665040"
  },
  {
    "text": "and then with css we can conditionally render the container for the loading animation if the effective connection",
    "start": "2665040",
    "end": "2671040"
  },
  {
    "text": "type is slow or slow-ish and the result on slope connections is",
    "start": "2671040",
    "end": "2676720"
  },
  {
    "text": "this it's nothing fancy but it gets the point across that something anything",
    "start": "2676720",
    "end": "2683280"
  },
  {
    "text": "is happening and it helps to avert the assumption that the experience is broken on a slow connection",
    "start": "2683280",
    "end": "2688720"
  },
  {
    "text": "now it may not have the widest browser support so it's a good fallback to see if the network information api is supported",
    "start": "2688720",
    "end": "2696160"
  },
  {
    "text": "if not the method with the empty css pseudo class could be a potential fallback if you wanted to go that way",
    "start": "2696160",
    "end": "2701599"
  },
  {
    "text": "too and i didn't make slides for this but i i kind of just thought of this because i",
    "start": "2701599",
    "end": "2706960"
  },
  {
    "text": "ran into this problem um a lot of people use a cdn or like cloud flare right",
    "start": "2706960",
    "end": "2713920"
  },
  {
    "text": "and one of the important things that you have to do uh is you have to account for the very uh response header uh and what",
    "start": "2713920",
    "end": "2722000"
  },
  {
    "text": "the very header does is it it instructs the the cache uh both",
    "start": "2722000",
    "end": "2727280"
  },
  {
    "text": "your disk cache and any proxies or public caches like cdns",
    "start": "2727280",
    "end": "2732640"
  },
  {
    "text": "how to key cachable responses to specific headers",
    "start": "2732640",
    "end": "2739119"
  },
  {
    "text": "and this is important because i found out that if i wasn't keying against the service worker",
    "start": "2739119",
    "end": "2744319"
  },
  {
    "text": "navigation preload header or the x content mode header i was having this weird double header thing that was",
    "start": "2744319",
    "end": "2750160"
  },
  {
    "text": "happening it was a weird interaction between the service worker and the cdn where it was storing older",
    "start": "2750160",
    "end": "2756160"
  },
  {
    "text": "versions of the content that i had had before i had even deployed a service worker and was creating all these",
    "start": "2756160",
    "end": "2761359"
  },
  {
    "text": "problems and once i applied applied that very header i purged my cache and everything was",
    "start": "2761359",
    "end": "2766880"
  },
  {
    "text": "fine but believe me i was sitting like there for probably about a good couple hours like wondering why the hell",
    "start": "2766880",
    "end": "2772319"
  },
  {
    "text": "everything was broken and like i'm the worst developer in the world and why am i even doing this you know what some of us do every day",
    "start": "2772319",
    "end": "2781119"
  },
  {
    "text": "so anyway there you have it a navigation scheme for multi-page applications or web sites",
    "start": "2781119",
    "end": "2788079"
  },
  {
    "text": "as i like to call them that deliver on faster navigations by progressively enhancing the browser's default",
    "start": "2788079",
    "end": "2794480"
  },
  {
    "text": "navigation scheme without replacing it now if you're interested in further",
    "start": "2794480",
    "end": "2799920"
  },
  {
    "text": "material on this subject i have some recommendations for you the first is this fantastic article by",
    "start": "2799920",
    "end": "2805680"
  },
  {
    "text": "phil walton which is the first instance in which i discovered it phil's analysis has an almost dogged",
    "start": "2805680",
    "end": "2812000"
  },
  {
    "text": "focus on on field data which really proves just how beneficial that the pattern can be",
    "start": "2812000",
    "end": "2817920"
  },
  {
    "text": "the second is jeff posnick's take on the pattern and jeff posnick is the principal engineer for workbox",
    "start": "2817920",
    "end": "2825119"
  },
  {
    "text": "which is an impressively deep dive into some of the architectural aspects and concerns it gets into stuff like",
    "start": "2825119",
    "end": "2831040"
  },
  {
    "text": "firebase and like express like it it's just a really comprehensive great take and if service",
    "start": "2831040",
    "end": "2838319"
  },
  {
    "text": "worker is your thing it's a safe bet that anything jeff writes on the subject is worth reading and it also has a video",
    "start": "2838319",
    "end": "2843680"
  },
  {
    "text": "version of the article which is jeff's talk from google i o some years back in case you just prefer videos",
    "start": "2843680",
    "end": "2850240"
  },
  {
    "text": "and the last one is an article i wrote for a list apart about over a year ago which if you're interested shows what it",
    "start": "2850240",
    "end": "2856160"
  },
  {
    "text": "takes to achieve this pattern without the need for workbox spoiler spoiler alert while it works it",
    "start": "2856160",
    "end": "2862559"
  },
  {
    "text": "is a ton of effort it requires direct knowledge of the readable stream api and the service worker api and the cache",
    "start": "2862559",
    "end": "2868800"
  },
  {
    "text": "storage interface and unless you're just deeply and exceptionally curious about what all this looks like without an",
    "start": "2868800",
    "end": "2874800"
  },
  {
    "text": "abstraction workbox is probably a better bet now without workbox you can send really",
    "start": "2874800",
    "end": "2880960"
  },
  {
    "text": "teeny tiny service workers but again workbox works off of the main thread and",
    "start": "2880960",
    "end": "2886559"
  },
  {
    "text": "that's not really the time where i where i care too much about how much javascript is being sent as long as it's not an obscene amount of it and like",
    "start": "2886559",
    "end": "2893440"
  },
  {
    "text": "it's not workbox is a really lean abstraction",
    "start": "2893440",
    "end": "2897920"
  },
  {
    "text": "okay and with that thank you for your time curiosity",
    "start": "2898960",
    "end": "2904160"
  },
  {
    "text": "and your love for all the things webb um i don't have my slides uploaded yet um i",
    "start": "2904160",
    "end": "2909599"
  },
  {
    "text": "was kind of toying on slides until the last minute but i will have them up today and i will",
    "start": "2909599",
    "end": "2915119"
  },
  {
    "text": "uh update in the slack channel i think each slack i think each room has its own",
    "start": "2915119",
    "end": "2920319"
  },
  {
    "text": "slack channel i will find the right room and i will update it this is room six cheers and thank you",
    "start": "2920319",
    "end": "2929559"
  },
  {
    "text": "looks like we got sorry um you can leave if you just want to get going like if you're hungry or whatever",
    "start": "2933440",
    "end": "2938480"
  },
  {
    "text": "but i i do have some time left and if anybody has questions i'm i'm happy to take them on um",
    "start": "2938480",
    "end": "2946160"
  },
  {
    "text": "you just raise your hand but if everyone's like no screw that i want to eat like do do what you do",
    "start": "2946160",
    "end": "2953920"
  },
  {
    "text": "going once going twice you got one",
    "start": "2955280",
    "end": "2961480"
  },
  {
    "text": "you",
    "start": "3018480",
    "end": "3020559"
  }
]