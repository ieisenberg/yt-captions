[
  {
    "start": "0",
    "end": "101000"
  },
  {
    "text": "okay so who here is interested in making",
    "start": "12850",
    "end": "20090"
  },
  {
    "text": "things go fast all right that's terrific",
    "start": "20090",
    "end": "26380"
  },
  {
    "text": "so in this talk we're going to talk about a few things I learned while",
    "start": "26380",
    "end": "33710"
  },
  {
    "text": "during my six years of stint at Facebook I worked as a research scientist which",
    "start": "33710",
    "end": "39800"
  },
  {
    "text": "really means you're like glorified as",
    "start": "39800",
    "end": "45250"
  },
  {
    "text": "Venkat said okay you know software archaeologists working on things and",
    "start": "45250",
    "end": "52449"
  },
  {
    "text": "I've made a few small discoveries in in",
    "start": "52449",
    "end": "57710"
  },
  {
    "text": "terms of optimization that I find very interesting and I wanted to share with you one of which is what I call The",
    "start": "57710",
    "end": "65000"
  },
  {
    "text": "Forgotten parallelism so there is a lot of talk about like parallel software and",
    "start": "65000",
    "end": "70220"
  },
  {
    "text": "all these great assistance and fork/join and what-have-you work-stealing all of these great great things there is a form",
    "start": "70220",
    "end": "77270"
  },
  {
    "text": "of parallelism that doesn't require you to kind of start threads or you know",
    "start": "77270",
    "end": "83180"
  },
  {
    "text": "these few processes into these are these awesome things it actually writes you requires you to write code you know odd",
    "start": "83180",
    "end": "90910"
  },
  {
    "text": "specific way who has a guess on what that could be The Forgotten parallelism everybody",
    "start": "90910",
    "end": "99530"
  },
  {
    "text": "forgot about it apparently right so let me show you is it visible yeah quite so",
    "start": "99530",
    "end": "105530"
  },
  {
    "start": "101000",
    "end": "260000"
  },
  {
    "text": "let me show you this is the internal halo market tech chure and I don't like a point or anything and I want to favor",
    "start": "105530",
    "end": "112220"
  },
  {
    "text": "any side over the other okay there's like two more people on that side so I'm gonna be there you guys so this is like",
    "start": "112220",
    "end": "120890"
  },
  {
    "text": "the traditional representation of CPU and it's actually not the CP it's one",
    "start": "120890",
    "end": "126020"
  },
  {
    "text": "core Heena CPUs they're like eight of those right so the data flow sorry the",
    "start": "126020",
    "end": "131720"
  },
  {
    "text": "instruction flow the instructions flow top-down and there's essentially like",
    "start": "131720",
    "end": "136790"
  },
  {
    "text": "the whole pink part the color of like vomit after a night of vodka that would be the decoder decoding of instruction",
    "start": "136790",
    "end": "144890"
  },
  {
    "text": "so it transfers the complex input instructions into nice risk",
    "start": "144890",
    "end": "150950"
  },
  {
    "text": "instructions that are simple but very large so you know there's like 128 byte with here and then we have something",
    "start": "150950",
    "end": "158510"
  },
  {
    "text": "interesting because we get into like where the action goes and here's what the action goes that's called V come on",
    "start": "158510",
    "end": "168500"
  },
  {
    "text": "you guys you know you can't be that high level you got you got a level with me here hey thank you Hubert mm-hmm I love",
    "start": "168500",
    "end": "176690"
  },
  {
    "text": "Hubert's voice he has like so much but I should I should you should voice over my talk so this is the ALU arithmetic logic",
    "start": "176690",
    "end": "184130"
  },
  {
    "text": "unit and what's interesting about this ALU is there's a lot of stuff that's not vertical it's horizontal and remember I",
    "start": "184130",
    "end": "191480"
  },
  {
    "text": "said instructions flow downwards so at this point there is a fork in the road and as the thing goes you should take it",
    "start": "191480",
    "end": "198110"
  },
  {
    "text": "right so at this point we have several things potentially happening literally",
    "start": "198110",
    "end": "204940"
  },
  {
    "text": "simultaneously there's a store dialog there's a dress calculation there is a",
    "start": "204940",
    "end": "211570"
  },
  {
    "text": "integer add move whatever floating point has a movement you know I can count on things like you can have an integral",
    "start": "211570",
    "end": "218330"
  },
  {
    "text": "operation and a couple of floating-point operations happening literally simultaneously and the interesting thing",
    "start": "218330",
    "end": "224180"
  },
  {
    "text": "is you don't do anything about it anyhow so at the end of this there's this is",
    "start": "224180",
    "end": "230510"
  },
  {
    "text": "actually a programmer helper because it's an octuple associative data cache",
    "start": "230510",
    "end": "236269"
  },
  {
    "text": "whatever I'm sorry this is the program helper memory order buffer memory order",
    "start": "236269",
    "end": "241940"
  },
  {
    "text": "buffer which makes things that are happening weirdly in parallel look relatively tame to you as a programmer",
    "start": "241940",
    "end": "248540"
  },
  {
    "text": "so you don't have you you know you have the right sequence of of operations almost almost almost almost real okay so",
    "start": "248540",
    "end": "256160"
  },
  {
    "text": "um the action is parallel and the question is how to expose that",
    "start": "256160",
    "end": "261590"
  },
  {
    "start": "260000",
    "end": "431000"
  },
  {
    "text": "parallelism how do you make these good use of this little parallelism and the",
    "start": "261590",
    "end": "268430"
  },
  {
    "text": "interesting thing is people like once you lose that you never gain it back right so to kind of ever gain it back",
    "start": "268430",
    "end": "276890"
  },
  {
    "text": "you gotta buy more computers so you underused as well you see my points that there's",
    "start": "276890",
    "end": "283160"
  },
  {
    "text": "this whole you know there's this all talking about the dark silicon you know",
    "start": "283160",
    "end": "289190"
  },
  {
    "text": "dark silicon like it's here we have so much processing power so this alien has so much stuff on it so many transistors",
    "start": "289190",
    "end": "295310"
  },
  {
    "text": "that can do interesting stuff interesting to some right not everybody",
    "start": "295310",
    "end": "301100"
  },
  {
    "text": "cares but you know interesting stuff but we can't bring data fast enough into",
    "start": "301100",
    "end": "307220"
  },
  {
    "text": "those transistors to make them do the interesting stuff so then how do we you use those and it's very interesting that",
    "start": "307220",
    "end": "316030"
  },
  {
    "text": "this instruction level parallelism happens even before we think about it",
    "start": "316030",
    "end": "321920"
  },
  {
    "text": "because there's a whole cabal there's a whole conspiracy friends that is at work",
    "start": "321920",
    "end": "328100"
  },
  {
    "text": "making our code our serial code that is parallel there's all of this laundry",
    "start": "328100",
    "end": "334910"
  },
  {
    "text": "list of things and many many others they only conspired together to expose",
    "start": "334910",
    "end": "340970"
  },
  {
    "text": "publish material code and if you sit down and write serial code it's going to have any hearing parallelism and there's",
    "start": "340970",
    "end": "347480"
  },
  {
    "text": "a magical number which is like a cross a large variety of coding styles and",
    "start": "347480",
    "end": "352880"
  },
  {
    "text": "applications it's going to be actually this is the amount of errors in serial code who knows what the number is how",
    "start": "352880",
    "end": "358550"
  },
  {
    "text": "parallel do you think you're writing code today on average like you know 1.5",
    "start": "358550",
    "end": "366400"
  },
  {
    "text": "like you write code that serial but it's actually 1.5 parallels good hook is more",
    "start": "366400",
    "end": "372220"
  },
  {
    "text": "to ease your code to a parallel without yes give who gives more this is a kind",
    "start": "372220",
    "end": "378740"
  },
  {
    "text": "of a yes come on I should have that fast voice or like folks who do that kind of",
    "start": "378740",
    "end": "384380"
  },
  {
    "text": "stuff so actually it's 4.2 so the average serial code has four point three",
    "start": "384380",
    "end": "389570"
  },
  {
    "text": "here in parallelism which is discoverable and automatically paralyzed about this is the Forgotten parallelism",
    "start": "389570",
    "end": "396610"
  },
  {
    "text": "and now what I want to do is discuss ways to expose and exploit more of that",
    "start": "396610",
    "end": "407960"
  },
  {
    "text": "parallelism make it I don't four point five because it can happen without actually a sitting out you know",
    "start": "407960",
    "end": "414620"
  },
  {
    "text": "dude you got a fork girl Chris threads and gonna dull all these awesome things no it's just rewriting code in a",
    "start": "414620",
    "end": "421820"
  },
  {
    "text": "slightly different manner and it's actually not really just slightly but",
    "start": "421820",
    "end": "426890"
  },
  {
    "text": "it's rethinking your code in such a way that's gonna make it parallel so the key",
    "start": "426890",
    "end": "432950"
  },
  {
    "start": "431000",
    "end": "496000"
  },
  {
    "text": "to the kingdom is you gotta have fewer data dependencies now what is the data",
    "start": "432950",
    "end": "441440"
  },
  {
    "text": "dependencies probably it's good to know right yes all right all right so that",
    "start": "441440",
    "end": "459890"
  },
  {
    "text": "was a complicated explanation why don't you do what Venkat said make it simple what would be a simple explanation say",
    "start": "459890",
    "end": "466190"
  },
  {
    "text": "that sorry that that looks simple but it requires quite a bit more background the",
    "start": "466190",
    "end": "472220"
  },
  {
    "text": "whole hazard thing what is data dependency an operation depends on the result of a previous operation friends",
    "start": "472220",
    "end": "478460"
  },
  {
    "text": "that's it right so that was an example given all of the simple of the simple",
    "start": "478460",
    "end": "483620"
  },
  {
    "text": "notion so whenever you have something depends on something else you have serialism and you have a data",
    "start": "483620",
    "end": "488690"
  },
  {
    "text": "dependencies because you know whatever you do must wait for the previous operation to end and that's all the",
    "start": "488690",
    "end": "495680"
  },
  {
    "text": "cookie crumbles so well we want to make those you know as few as possible want",
    "start": "495680",
    "end": "501140"
  },
  {
    "start": "496000",
    "end": "503000"
  },
  {
    "text": "to minimize data dependencies and we're going to show you an example who know",
    "start": "501140",
    "end": "509150"
  },
  {
    "start": "503000",
    "end": "742000"
  },
  {
    "text": "c++ c c+ i don't care c plus was right okay who understands what this function",
    "start": "509150",
    "end": "517280"
  },
  {
    "text": "does by for example i look at the name it converts ascii to integer so it takes",
    "start": "517280",
    "end": "525200"
  },
  {
    "text": "a pointer to the beginning of a string of characters and a pointer to the end of the string characters in HDL style if",
    "start": "525200",
    "end": "533840"
  },
  {
    "text": "you wish to iterate as if you wish right and it's going to compute the the",
    "start": "533840",
    "end": "542870"
  },
  {
    "text": "conversion of that string of characters to and unsigned integer so we don't care about sign kind of simplify our life a",
    "start": "542870",
    "end": "549379"
  },
  {
    "text": "bit and it does so by successively multiplying the current result you know",
    "start": "549379",
    "end": "555110"
  },
  {
    "text": "the running result by 10 and adding the least significant digit right the",
    "start": "555110",
    "end": "561050"
  },
  {
    "text": "current digit now this function is uh is",
    "start": "561050",
    "end": "567079"
  },
  {
    "text": "called actually Horner's scheme if you crack up on any book on algorithms from",
    "start": "567079",
    "end": "572179"
  },
  {
    "text": "way back when in college or whatever or you know for me it's way back when for you it may be much more recent but if",
    "start": "572179",
    "end": "578179"
  },
  {
    "text": "you crack up on a book on algorithms gonna see this is how you do it and it's been like this for literally the past 50",
    "start": "578179",
    "end": "583970"
  },
  {
    "text": "years it's considered an algorithm that is classic and at its optimum and I'm",
    "start": "583970",
    "end": "589399"
  },
  {
    "text": "here to tell you this is not this classic but it's not at the optimum it can be improved radically the problem",
    "start": "589399",
    "end": "597410"
  },
  {
    "text": "with this algorithm being it has too many damn data dependencies and who can",
    "start": "597410",
    "end": "603829"
  },
  {
    "text": "tell us what are some of the dependencies involved yes the result",
    "start": "603829",
    "end": "612740"
  },
  {
    "text": "depends on its previous version by me and also now on the current character like star beam by means of a complex",
    "start": "612740",
    "end": "620299"
  },
  {
    "text": "pattern right well the result is result intense terminal thanks whatever plus whatever so that's a problem and I sat",
    "start": "620299",
    "end": "627949"
  },
  {
    "text": "down you know I would the funny story I was working on a database a higher high",
    "start": "627949",
    "end": "633230"
  },
  {
    "text": "performance high scale we're talking petabytes and it's called hive a Merinos hive the hive database as a used for",
    "start": "633230",
    "end": "640850"
  },
  {
    "text": "offline data at Facebook and it's a it's a awesome data is great and just because so awesome so powerful so fast they",
    "start": "640850",
    "end": "647449"
  },
  {
    "text": "decided to make communication between the database and the client computers in",
    "start": "647449",
    "end": "652579"
  },
  {
    "text": "a most brand possible text the second is too powerful actually let's make it",
    "start": "652579",
    "end": "657589"
  },
  {
    "text": "let's make the communication stupidest format there is keep it kind of in a textual format so then every client",
    "start": "657589",
    "end": "665209"
  },
  {
    "text": "whenever they need to do something they are going to do what read numbers on the database convert them to grata integers",
    "start": "665209",
    "end": "672559"
  },
  {
    "text": "and floating point numbers in one have you dates times what right and then do",
    "start": "672559",
    "end": "678169"
  },
  {
    "text": "some computation and then you convert back to text and send it to the database I am not kidding this is not a",
    "start": "678169",
    "end": "685510"
  },
  {
    "text": "joke so you know we had like these hive applications and kind of slow you know",
    "start": "685510",
    "end": "690640"
  },
  {
    "text": "what's happening here let's let's you know let's measure this thing let's see where the time goes guess what all the",
    "start": "690640",
    "end": "696640"
  },
  {
    "text": "time was goes here right because whatever I do you're gonna have to convert every damn column and every damn",
    "start": "696640",
    "end": "703720"
  },
  {
    "text": "number into from text right so that was a bummer so well who's the idiot who's",
    "start": "703720",
    "end": "710770"
  },
  {
    "text": "gonna help us improve this thing oh there's Andre right so here I was working on this I spent on this like",
    "start": "710770",
    "end": "716890"
  },
  {
    "text": "probably a couple of weeks sleepless nights what have it was you know if this",
    "start": "716890",
    "end": "722110"
  },
  {
    "text": "was a movie that would be one of those ellipses in the movies where I kind of sit here and kind of think real hard and",
    "start": "722110",
    "end": "727510"
  },
  {
    "text": "kind of scratch paper and can throw it away and kind of you know beat my wife I don't know that kind of stuff right so",
    "start": "727510",
    "end": "734380"
  },
  {
    "text": "it was one of those nice sequences in movies like you know Rocky Balboa and",
    "start": "734380",
    "end": "739990"
  },
  {
    "text": "whatever so great and I came with the",
    "start": "739990",
    "end": "745630"
  },
  {
    "start": "742000",
    "end": "931000"
  },
  {
    "text": "following great idea I said you know what am i drinking I'm gonna kind of give justice here and kind of stand on",
    "start": "745630",
    "end": "752920"
  },
  {
    "text": "this side as well so I said you know let me write this with pen and paper what is the actual computation that is",
    "start": "752920",
    "end": "759970"
  },
  {
    "text": "performed and I said okay so this is what the algorithm really does in",
    "start": "759970",
    "end": "765840"
  },
  {
    "text": "inlined math form I feel like the first",
    "start": "765840",
    "end": "770920"
  },
  {
    "text": "thing I'm doing is like an idiot are multiplying by zero that's not a good",
    "start": "770920",
    "end": "776260"
  },
  {
    "text": "sign I mean the fact that the sheer fact that you're doing some useless operation to start with it's not a good omen right",
    "start": "776260",
    "end": "783730"
  },
  {
    "text": "agreed so that you know cancels your x time okay thank you very much idiot",
    "start": "783730",
    "end": "789280"
  },
  {
    "text": "right plus five everything times ten because every depends on the previous",
    "start": "789280",
    "end": "795490"
  },
  {
    "text": "result the algorithm so then plus two everything times ten plus three",
    "start": "795490",
    "end": "801810"
  },
  {
    "text": "everything times ten plus and I can't yell any any louder because I'm going to destroy my voice but essentially I'm",
    "start": "801810",
    "end": "808180"
  },
  {
    "text": "doing something really really complicated I love Venkata not only because he along with this the",
    "start": "808180",
    "end": "815630"
  },
  {
    "text": "clicker but he made great points about simply this is not simple it doesn't look simple it looks ugly it has too",
    "start": "815630",
    "end": "822200"
  },
  {
    "text": "many parentheses and I liked Lisp also",
    "start": "822200",
    "end": "828290"
  },
  {
    "text": "has parentheses but in this process serve a different purpose they represent them you know be",
    "start": "828290",
    "end": "834500"
  },
  {
    "text": "dimensional data structure you turn in a dimensional string right so it's a different their grammar separators if",
    "start": "834500",
    "end": "841430"
  },
  {
    "text": "you wish they are punctuation in here they're not punctuation they are an",
    "start": "841430",
    "end": "847190"
  },
  {
    "text": "obstacle to efficiency because what does the process is doing math it forces the",
    "start": "847190",
    "end": "858860"
  },
  {
    "text": "order of operation to be not the natural order as whatever deity intended right",
    "start": "858860",
    "end": "865420"
  },
  {
    "text": "it says you know what you shouldn't do things as they are it shouldn't do things like the path of",
    "start": "865420",
    "end": "872150"
  },
  {
    "text": "least resistance now you should like do this first and then that right so",
    "start": "872150",
    "end": "878000"
  },
  {
    "text": "parentheses is all already a data dependency you look at the you look at the math you see has so many processes",
    "start": "878000",
    "end": "883910"
  },
  {
    "text": "there's too many data dependences so now you know how to improve this thing the question would be thoughts ideas yes",
    "start": "883910",
    "end": "894700"
  },
  {
    "text": "so we multiply by some constants and there's another yes sorry so use parts",
    "start": "900830",
    "end": "911690"
  },
  {
    "text": "of 10 use sort of the positional well I gotta admit I'm not as smart as you guys",
    "start": "911690",
    "end": "917209"
  },
  {
    "text": "I went through a went through a you know stage where I was thinking there's gotta be some divide and conquer solution to",
    "start": "917209",
    "end": "923959"
  },
  {
    "text": "this I thought maybe I divide the string in two or more pieces and then I kind of figure out this ending you know I don't",
    "start": "923959",
    "end": "929959"
  },
  {
    "text": "know me actually this is interesting because it Rizza it leads us here it gets us here to this",
    "start": "929959",
    "end": "936980"
  },
  {
    "text": "nice point in our lives whereby you know this is actually beautiful and it has no parentheses and",
    "start": "936980",
    "end": "946720"
  },
  {
    "text": "actually you know it aligns nicely so you see the number here is also on the",
    "start": "946720",
    "end": "952519"
  },
  {
    "text": "vertical and we have a triangle here so you know I think the Vinci would like that right that kind of stuff right so",
    "start": "952519",
    "end": "959420"
  },
  {
    "text": "if you like I can see this goes it's really a simple and nice and shapely if",
    "start": "959420",
    "end": "966110"
  },
  {
    "text": "you wish formula and you know lot tech loves this because you can align with lot I call this all this process and",
    "start": "966110",
    "end": "971600"
  },
  {
    "text": "stuff has special codes for that so okay oh well this is pretty awesome so let's try this thing and you know the code",
    "start": "971600",
    "end": "978950"
  },
  {
    "start": "977000",
    "end": "1241000"
  },
  {
    "text": "looks looks a bit just a bit more involved but there's nothing complicated about it because I'm really one thing I",
    "start": "978950",
    "end": "988070"
  },
  {
    "text": "really take pride in is I can write powers of 10 realize it's you know there's gonna be a triangle here right I",
    "start": "988070",
    "end": "994279"
  },
  {
    "text": "didn't write everything right so there's gonna be this nice triangle with one followed by 1907 one followed by 18",
    "start": "994279",
    "end": "1002350"
  },
  {
    "text": "zeros and so on and all of them are gonna you know nicely converge there and then we have enforced by there it's kind",
    "start": "1002350",
    "end": "1009130"
  },
  {
    "text": "of like an assert that always that's always in action so then forces like it throws an exception whatever so then I",
    "start": "1009130",
    "end": "1017050"
  },
  {
    "text": "say okay so I'm starting with the result and here I'm going to",
    "start": "1017050",
    "end": "1022350"
  },
  {
    "text": "well this guy come from 20 you should",
    "start": "1026170",
    "end": "1033339"
  },
  {
    "text": "not you should never have literals in your code right you should have only like minus 1 0 & 1 and everything else",
    "start": "1033339",
    "end": "1039699"
  },
  {
    "text": "should be a symbolic thing this comes from there and it means it's the end of",
    "start": "1039699",
    "end": "1045640"
  },
  {
    "text": "the array and it positions me starting from the end of array it goes back to whatever the most significant digit is",
    "start": "1045640",
    "end": "1053429"
  },
  {
    "text": "so it's going to position me in this table in our in our example he is going to position me on 100,000 right so it's",
    "start": "1053429",
    "end": "1062559"
  },
  {
    "text": "going to position me there so by the time I kind of doing a instead of kind of computing powers of 10 on the fly and",
    "start": "1062559",
    "end": "1070240"
  },
  {
    "text": "just gonna put them in a table just just so I save a bit of a bit of work but that's not instrumental so case I'm",
    "start": "1070240",
    "end": "1078250"
  },
  {
    "text": "starting with this I at sort of the right position of the most significant digit power of 10 now I'm gonna say okay",
    "start": "1078250",
    "end": "1085870"
  },
  {
    "text": "so let me kind of go from there and result is result plus power of 10 of I",
    "start": "1085870",
    "end": "1091840"
  },
  {
    "text": "plus plus times the current digit and that actually implements that very simple algorithm so it's just a",
    "start": "1091840",
    "end": "1100660"
  },
  {
    "text": "different thing but it has fewer data dependencies because now result still",
    "start": "1100660",
    "end": "1105669"
  },
  {
    "text": "depends on its previous value but only by me so Bob and guess what plus has an",
    "start": "1105669",
    "end": "1110950"
  },
  {
    "text": "interesting property which is called",
    "start": "1110950",
    "end": "1115200"
  },
  {
    "text": "it's cumulative and it's interesting but probably not for this case associativity",
    "start": "1116250",
    "end": "1122200"
  },
  {
    "text": "the interesting thing about plus is it's associative which means the plusses can",
    "start": "1122200",
    "end": "1129340"
  },
  {
    "text": "be done in any order including in parallel and guess what the CPU architects know that whenever I see an",
    "start": "1129340",
    "end": "1136419"
  },
  {
    "text": "repeated addition they're going to be like yes your own buddy is awesome I know what to do here whereas in a",
    "start": "1136419",
    "end": "1143380"
  },
  {
    "text": "previous algorithm it's a much more complicated patterns are gonna multiply that with 10 and kind of do this and have a coffee in that kind of stuff so",
    "start": "1143380",
    "end": "1149590"
  },
  {
    "text": "it was very different and this approach is going to be perhaps faster so what do",
    "start": "1149590",
    "end": "1157510"
  },
  {
    "text": "you do to make sure to validate the fact that it's fast or not",
    "start": "1157510",
    "end": "1165638"
  },
  {
    "text": "measure I've seen so many people too",
    "start": "1166090",
    "end": "1172010"
  },
  {
    "text": "smart to measure and you know it includes me as a flight you know while",
    "start": "1172010",
    "end": "1178730"
  },
  {
    "text": "ago like a week ago right so you know did when you measure",
    "start": "1178730",
    "end": "1184399"
  },
  {
    "text": "you actually get a leg up on experts who are too smart to measure so it's really good right so let's measure this well I",
    "start": "1184399",
    "end": "1192260"
  },
  {
    "text": "did and my question to you is like how much do you speculate we're gonna win",
    "start": "1192260",
    "end": "1197389"
  },
  {
    "text": "here gonna win 10 percent 20 percent 50 percent 80 percent thank you",
    "start": "1197389",
    "end": "1204649"
  },
  {
    "text": "who gives more 200 percent so the three times faster all right thoughts depends on the length yes so we",
    "start": "1204649",
    "end": "1213919"
  },
  {
    "text": "got a measure for all digital number lengths yes five times five percent all",
    "start": "1213919",
    "end": "1223370"
  },
  {
    "text": "right and yeah it could be slower by the way so it does happen it did happen to me to me with disquieting frequency that",
    "start": "1223370",
    "end": "1232549"
  },
  {
    "text": "I thought sound it's going to be faster it was a net pessimism right to spend time actually making things slower which",
    "start": "1232549",
    "end": "1238429"
  },
  {
    "text": "was pretty you know just not counterproductive so it's actually that",
    "start": "1238429",
    "end": "1243559"
  },
  {
    "start": "1241000",
    "end": "1528000"
  },
  {
    "text": "John was right it's three times faster and it trails down to two times faster and what I like about this this growth",
    "start": "1243559",
    "end": "1252710"
  },
  {
    "text": "so this is the relative improvement on the baseline by the ways I make this so",
    "start": "1252710",
    "end": "1258919"
  },
  {
    "text": "I just had this Plus which due to which my voice is so course right now and they",
    "start": "1258919",
    "end": "1265460"
  },
  {
    "text": "also my my accent I didn't have an accent when I came here he should know I was like has a perfect British accent",
    "start": "1265460",
    "end": "1271279"
  },
  {
    "text": "was awesome and just because I'm so tired it's just so um the nice thing",
    "start": "1271279",
    "end": "1276830"
  },
  {
    "text": "about this first of like let me let me go take a parenthesis and tell you about baseline so what's a baseline a baseline",
    "start": "1276830",
    "end": "1284710"
  },
  {
    "text": "yes in a measurement what you're measuring against I've seen too many",
    "start": "1284710",
    "end": "1290929"
  },
  {
    "text": "people who don't use baselines and it's funny because it sort of makes",
    "start": "1290929",
    "end": "1296750"
  },
  {
    "text": "a bit of a difference between an a newbie engineer if you wish and a scientist the scientists always these",
    "start": "1296750",
    "end": "1302840"
  },
  {
    "text": "baselines and also marketing people is baselines in marketing you always choose",
    "start": "1302840",
    "end": "1309140"
  },
  {
    "text": "like the worst baseline you can find right say look good so like I'm gonna choose this shitty",
    "start": "1309140",
    "end": "1314210"
  },
  {
    "text": "algorithm this crap implementation is awful product and then it we're like was",
    "start": "1314210",
    "end": "1319460"
  },
  {
    "text": "so much better than this the leading competitor and that kind of stuff right so I'm marketing people do that all the",
    "start": "1319460",
    "end": "1325760"
  },
  {
    "text": "time but as a scientist you know you want to choose the best baseline you can find because that means progress if",
    "start": "1325760",
    "end": "1330890"
  },
  {
    "text": "you're better than the best then you're you know you that it means global progress in humankind if you wish so",
    "start": "1330890",
    "end": "1337940"
  },
  {
    "text": "that that's why you should always use baseline see if I showed you here",
    "start": "1337940",
    "end": "1344110"
  },
  {
    "text": "nanoseconds and microseconds you should actually you should punch me right now",
    "start": "1344110",
    "end": "1349310"
  },
  {
    "text": "right because I you know it's it just takes like 15 nanoseconds to do this operation like you know what I have no",
    "start": "1349310",
    "end": "1356120"
  },
  {
    "text": "idea what you mean with nano see maybe at the baseline we faster made all the way would be faster by few nanoseconds",
    "start": "1356120",
    "end": "1361700"
  },
  {
    "text": "or whatever microseconds so I should show you by how much the current",
    "start": "1361700",
    "end": "1367550"
  },
  {
    "text": "proposed solution improves over the basement which means one is just the same and below one is not good and above",
    "start": "1367550",
    "end": "1376250"
  },
  {
    "text": "one is interesting that's good right so our process is closed use",
    "start": "1376250",
    "end": "1381380"
  },
  {
    "text": "basslines people like whenever it do performance like dual use baselines and measure right",
    "start": "1381380",
    "end": "1386450"
  },
  {
    "text": "I hope I'm preaching to the choir here so we are at three point four trailing",
    "start": "1386450",
    "end": "1393620"
  },
  {
    "text": "trailing down to two and that's a very nice result and actually there's one",
    "start": "1393620",
    "end": "1399080"
  },
  {
    "text": "more thing that I like about this algorithm is is that it is better for small numbers it's I mean the perform",
    "start": "1399080",
    "end": "1407360"
  },
  {
    "text": "the improvement is even so much better for little numbers and yeah there's a you know the loss of big numbers the law",
    "start": "1407360",
    "end": "1415910"
  },
  {
    "text": "of big numbers in math right they say you know those like with growth but actually in program there's a lot of",
    "start": "1415910",
    "end": "1421310"
  },
  {
    "text": "small numbers like most numbers are small like if you look at",
    "start": "1421310",
    "end": "1426870"
  },
  {
    "text": "numbers in all applications in this world right now what I like about like seven and you know no greater than forty",
    "start": "1426870",
    "end": "1436500"
  },
  {
    "text": "to add that kind of stuff right most rings are empty and those that are not tend to have like one character that",
    "start": "1436500",
    "end": "1443160"
  },
  {
    "text": "kind of stuff like most most most things are gonna be small of course it's gonna be a lot of large numbers as well but how often did you have an array that had",
    "start": "1443160",
    "end": "1450120"
  },
  {
    "text": "the size of like nineteen bits there right maybe not too often you know that",
    "start": "1450120",
    "end": "1455700"
  },
  {
    "text": "kind of stuff so I like that the improvement is so much better for small numbers because it turns out that for",
    "start": "1455700",
    "end": "1461490"
  },
  {
    "text": "small numbers you know small numbers are much more frequent however there would be exceptions like who can give us an",
    "start": "1461490",
    "end": "1468000"
  },
  {
    "text": "example of a number that is actually shouldn't never be small an integer 64",
    "start": "1468000",
    "end": "1473429"
  },
  {
    "text": "bit oh sure the hash ID like user ID or",
    "start": "1473429",
    "end": "1479220"
  },
  {
    "text": "random generator number you know anything that is supposed to have high entropy would need to occupy all the",
    "start": "1479220",
    "end": "1484380"
  },
  {
    "text": "bits in a 64-bit integer so it's if it's small that's a problem right so by the",
    "start": "1484380",
    "end": "1490920"
  },
  {
    "text": "way Facebook started with that's funny how things start right so I start like",
    "start": "1490920",
    "end": "1495929"
  },
  {
    "text": "Zack has ID like four no joke like his ID on Facebook is four and first we are",
    "start": "1495929",
    "end": "1502620"
  },
  {
    "text": "not occupied right like zero to three are not just not taken I tried but don't",
    "start": "1502620",
    "end": "1510210"
  },
  {
    "text": "you they wouldn't give it right so Zack is four and then you know I kind of grew like by one after that and it was kind",
    "start": "1510210",
    "end": "1517140"
  },
  {
    "text": "of weird and then they started generating like when they got a live like two ten thousand people like whoa we're doing it wrong dude let's let's",
    "start": "1517140",
    "end": "1524580"
  },
  {
    "text": "subscribe let's subscribe these random IDs great so associative means paralyzed able",
    "start": "1524580",
    "end": "1532760"
  },
  {
    "start": "1528000",
    "end": "1541000"
  },
  {
    "text": "there is a there's a deep truth here whenever you have an operation that's associative in good shape because you",
    "start": "1532760",
    "end": "1539670"
  },
  {
    "text": "can paralyze it in the CPU can paralyze it for you so now let's apply an optimization known as strength reduction",
    "start": "1539670",
    "end": "1549860"
  },
  {
    "start": "1541000",
    "end": "1707000"
  },
  {
    "text": "anyone who wrote the kind of knows this kind of a compiler term compiler architecture term Hubert talk to me",
    "start": "1549860",
    "end": "1559160"
  },
  {
    "text": "right so strength is a bit of a misnomer it's kind of expense reduction which makes a lot of sense economy friends",
    "start": "1560270",
    "end": "1567030"
  },
  {
    "text": "right stress reduction means you take a multiplication replace it with an addition that kind of stuff right or you",
    "start": "1567030",
    "end": "1573990"
  },
  {
    "text": "take a power and you replace with a multiplication or take an addition we replace the addition with absolutely",
    "start": "1573990",
    "end": "1580050"
  },
  {
    "text": "nothing because there's nothing cheaper than addition any additions like one cycle right so let's focus on this thing",
    "start": "1580050",
    "end": "1587370"
  },
  {
    "text": "which is m4 switch like assert like verify that the input is correct so you gotta have it make sure that the current",
    "start": "1587370",
    "end": "1595710"
  },
  {
    "text": "digit is valid between zero and nine SK right so actually if after inlining and",
    "start": "1595710",
    "end": "1602190"
  },
  {
    "text": "whatever you know it doesn't really matter it reduces to if the digit is less than zero or greater than line then",
    "start": "1602190",
    "end": "1610050"
  },
  {
    "text": "I'm going to throw something is incorrect input and then we have the core loop in the computation and the",
    "start": "1610050",
    "end": "1616860"
  },
  {
    "text": "question is you know let's improve on this a bit so let's take this operation",
    "start": "1616860",
    "end": "1624930"
  },
  {
    "text": "here and make it just a bit faster because let me let me point this out to",
    "start": "1624930",
    "end": "1630000"
  },
  {
    "text": "you you know this is like short circuit right short circuit evaluation a great",
    "start": "1630000",
    "end": "1635970"
  },
  {
    "text": "invention in the early days but now right now it's actually bad because it introduces a dependency right because in",
    "start": "1635970",
    "end": "1643350"
  },
  {
    "text": "order to evenly valuate this expression this comparison this must be finished so",
    "start": "1643350",
    "end": "1649680"
  },
  {
    "text": "what do you do as a good engineer to make sure that this is not a dependency remove the dependency for me please",
    "start": "1649680",
    "end": "1657770"
  },
  {
    "text": "sorry use and and it's the same deal it's just yeah it's or an and both are",
    "start": "1657860",
    "end": "1665850"
  },
  {
    "text": "short circuit logical or logical and",
    "start": "1665850",
    "end": "1670280"
  },
  {
    "text": "sorry okay other thoughts yes sorry",
    "start": "1671090",
    "end": "1680060"
  },
  {
    "text": "the second if split up into trips but",
    "start": "1680720",
    "end": "1685980"
  },
  {
    "text": "still have that same dependence eat cereal if this guy and then I test that guy I want I want let me clarify what I",
    "start": "1685980",
    "end": "1693270"
  },
  {
    "text": "want remember that nice ALU with things that it can do in parallel this and this can be done in parallel",
    "start": "1693270",
    "end": "1698520"
  },
  {
    "text": "I want them done in parallel yes use up be twice or you know lose one lose one",
    "start": "1698520",
    "end": "1704550"
  },
  {
    "text": "pipe here lose one pipe thank you lose one pipe and the bitwise door is going",
    "start": "1704550",
    "end": "1712470"
  },
  {
    "start": "1707000",
    "end": "1821000"
  },
  {
    "text": "to give me the same result as the the cereal or what is going to allow",
    "start": "1712470",
    "end": "1717810"
  },
  {
    "text": "parallel execution which do you think is faster so this guy or that guy which the",
    "start": "1717810",
    "end": "1728520"
  },
  {
    "text": "do you think it's measurable first of all do you think I can measure difference and if so which is going to be faster in your intuition the second",
    "start": "1728520",
    "end": "1738150"
  },
  {
    "text": "is going to be faster so I thought so I thought in my recklessness yes",
    "start": "1738150",
    "end": "1748280"
  },
  {
    "text": "now I'm testing on every possible string length random numbers so random numbers of length one sorry yes but you know",
    "start": "1753179",
    "end": "1761849"
  },
  {
    "text": "this is the thing I don't want this to be fast because by the time you throw you can tie pretty much like the",
    "start": "1761849",
    "end": "1768269"
  },
  {
    "text": "performance is down the drain I'm testing on valid input I want the cost on the normal path to be as low as",
    "start": "1768269",
    "end": "1773489"
  },
  {
    "text": "possible that's a that's a good point thank you and I'm measuring the speed of exceptions that you know of errors I I",
    "start": "1773489",
    "end": "1779489"
  },
  {
    "text": "care about the speed in the normal case so um here's the interesting part so I measured this my baseline I measured",
    "start": "1779489",
    "end": "1787320"
  },
  {
    "text": "this and they did just just as fast so I",
    "start": "1787320",
    "end": "1792570"
  },
  {
    "text": "was like oh so there's no difference here but I looked at the generated code and GCC generate the same goes for both",
    "start": "1792570",
    "end": "1800869"
  },
  {
    "text": "GCC was way ahead of me he said oh that guy thinks he's smart so I'll show him",
    "start": "1800869",
    "end": "1807899"
  },
  {
    "text": "right so the code generator is literally the same the compiler detected that what I'm",
    "start": "1807899",
    "end": "1813599"
  },
  {
    "text": "doing and figured out how to paralyze things way ahead of me thinking about it but you know I'm not going to give up",
    "start": "1813599",
    "end": "1819899"
  },
  {
    "text": "without a fight so I said how about the table lookup how",
    "start": "1819899",
    "end": "1825599"
  },
  {
    "start": "1821000",
    "end": "1903000"
  },
  {
    "text": "about the tail you know each digit looks up a table of 256 bytes and curve it goes in a table and table has bits set",
    "start": "1825599",
    "end": "1832440"
  },
  {
    "text": "and that kind of stuff so it's a table lookup is digit which the thing is faster this guy or that guy",
    "start": "1832440",
    "end": "1840109"
  },
  {
    "text": "thoughts is digit versus an operation so",
    "start": "1840109",
    "end": "1845399"
  },
  {
    "text": "tables versus computation thoughts ideas yes hypothesis you think table is slower",
    "start": "1845399",
    "end": "1853489"
  },
  {
    "text": "who else thinks different or the same",
    "start": "1853489",
    "end": "1859460"
  },
  {
    "text": "table is slower table or tables Lord actually it's just the same GCC tries",
    "start": "1859729",
    "end": "1866369"
  },
  {
    "text": "the same cool for this guy too I was shocked that GCC was smart enough",
    "start": "1866369",
    "end": "1873359"
  },
  {
    "text": "to figure out maybe it has memory maybe to figure out all my experiments is let me show this guy what an idiot he is and",
    "start": "1873359",
    "end": "1880379"
  },
  {
    "text": "is that you know in your face so am i share my compiling different code",
    "start": "1880379",
    "end": "1886380"
  },
  {
    "text": "yes so J is the same code even though ostensibly it's a table lookup and a kind of a function calling to a library",
    "start": "1886380",
    "end": "1892470"
  },
  {
    "text": "and stuff and GCC apparently knew about the semantics of his digit and said oh I know what the city is trying to do so",
    "start": "1892470",
    "end": "1898260"
  },
  {
    "text": "let me do it the fast way frame but of course I won't give up and I tried something more more principled which was",
    "start": "1898260",
    "end": "1909990"
  },
  {
    "start": "1903000",
    "end": "2406000"
  },
  {
    "text": "let me use unsigned arithmetic and mud and modulo subtraction so you know I",
    "start": "1909990",
    "end": "1918360"
  },
  {
    "text": "want was the following let me convert the digit to some to an assigned number 32 bit and then subtract the 0 and the",
    "start": "1918360",
    "end": "1926850"
  },
  {
    "text": "nice thing about unsigned numbers is they can't be negative so whenever I have this the subtraction it can be",
    "start": "1926850",
    "end": "1934280"
  },
  {
    "text": "between 0 & 9 or something larger than 9 and everything is larger than mine",
    "start": "1934280",
    "end": "1941040"
  },
  {
    "text": "should be wrong right everything in between is good whatever it would be negative in signed arithmetic would go",
    "start": "1941040",
    "end": "1948000"
  },
  {
    "text": "somewhere weird somewhere in the wrong range right so that was my my reasoning",
    "start": "1948000",
    "end": "1955530"
  },
  {
    "text": "and I had to prove myself that this is correct because the fear would be what",
    "start": "1955530",
    "end": "1963810"
  },
  {
    "text": "if what if by some you know by some",
    "start": "1963810",
    "end": "1969110"
  },
  {
    "text": "arithmetic property or whatever this subtraction of that would be negative",
    "start": "1969110",
    "end": "1974220"
  },
  {
    "text": "and whatever it goes by mistake into the right range in between 0 & 9 so who can",
    "start": "1974220",
    "end": "1981030"
  },
  {
    "text": "actually sketch a proof of what is happening here being correct it's not",
    "start": "1981030",
    "end": "1989010"
  },
  {
    "text": "quite obvious right so I'm sure like experienced engineers they kind of look at it I squint I'd be like oh yeah",
    "start": "1989010",
    "end": "1995460"
  },
  {
    "text": "that's plausible that make sense that could work let me test everything letting me test and see yeah test it it",
    "start": "1995460",
    "end": "2001790"
  },
  {
    "text": "works so it's not that's not like you know I'm saying principled approach I'm not saying like test everything approach",
    "start": "2001790",
    "end": "2007610"
  },
  {
    "text": "so the principal process is well if I had a number that you know the negative",
    "start": "2007610",
    "end": "2015020"
  },
  {
    "text": "number converting to the sort of the false positive number the false right number then I don't have to function to values",
    "start": "2015020",
    "end": "2023700"
  },
  {
    "text": "in the kind of domain of the minus operator in our sign numbers mapped to",
    "start": "2023700",
    "end": "2029100"
  },
  {
    "text": "the same number right that would have two DS this - you know the good value",
    "start": "2029100",
    "end": "2034530"
  },
  {
    "text": "and a wrong value both map to the good value so actually that can't happen because - is what they call a modular",
    "start": "2034530",
    "end": "2042450"
  },
  {
    "text": "subtraction and when you do modular subtraction it has a property which is a more arithmetic property called",
    "start": "2042450",
    "end": "2050599"
  },
  {
    "text": "it's by ejected but but you know there's one of these I'm interested in this",
    "start": "2052460",
    "end": "2060090"
  },
  {
    "text": "project it means injective and surjective subjective means it covers the whole space of the codomain an",
    "start": "2060090",
    "end": "2065629"
  },
  {
    "text": "injective which is where we're going to means an injective function an injective",
    "start": "2065630",
    "end": "2072929"
  },
  {
    "text": "function also known as an injection or a vaccine colloquially right that was a",
    "start": "2072929",
    "end": "2079020"
  },
  {
    "text": "joke I didn't really work out right so yes right exactly an injective function",
    "start": "2079020",
    "end": "2086010"
  },
  {
    "text": "has exactly the property looking for which it always Maps these things two distinct he never met two distinct",
    "start": "2086010",
    "end": "2092760"
  },
  {
    "text": "inputs to the same output so then we use the sub mathematical fact to say",
    "start": "2092760",
    "end": "2099330"
  },
  {
    "text": "actually I don't even care what happens because I know if I convert the right inputs you know the right digits in",
    "start": "2099330",
    "end": "2106230"
  },
  {
    "text": "ascii to the right digits in the range 0 9 whatever wrong digit I have they're gonna go elsewhere so with one test I'm",
    "start": "2106230",
    "end": "2114060"
  },
  {
    "text": "done and even better I reuse this subtraction here I just you know save it",
    "start": "2114060",
    "end": "2120240"
  },
  {
    "text": "in a in a verb alone I'm using it here so I I actually saved one subtraction to write so is this gonna be faster or not",
    "start": "2120240",
    "end": "2128130"
  },
  {
    "text": "is GCC going to still ruin our day is it",
    "start": "2128130",
    "end": "2134670"
  },
  {
    "text": "even okay let's say it is different so Jesus didn't do this or naturally so I had you know the culture it is different",
    "start": "2134670",
    "end": "2141360"
  },
  {
    "text": "the question is is it measurably faster is he going to make an impact on our",
    "start": "2141360",
    "end": "2146640"
  },
  {
    "text": "business it turns out faster",
    "start": "2146640",
    "end": "2152720"
  },
  {
    "text": "significantly so the this plot shows ILP",
    "start": "2153020",
    "end": "2160680"
  },
  {
    "text": "is our ILP version it's not the initial baseline so baseline is at 1 so this would be the baseline and we have the",
    "start": "2160680",
    "end": "2167220"
  },
  {
    "text": "ILP in this nice violet color and we have IP plot ensign in green so we see",
    "start": "2167220",
    "end": "2173850"
  },
  {
    "text": "that the advantage of IP plus ensign is going to get better with the number of",
    "start": "2173850",
    "end": "2179220"
  },
  {
    "text": "digits why do you think so so why does",
    "start": "2179220",
    "end": "2187350"
  },
  {
    "text": "the you know what does that why does this this gap increase with the size of",
    "start": "2187350",
    "end": "2192840"
  },
  {
    "text": "the number let's look at the code again just for a second this is the core loop",
    "start": "2192840",
    "end": "2199370"
  },
  {
    "text": "well folks so the reasoning is I'm saving a little for each pass through",
    "start": "2199370",
    "end": "2205050"
  },
  {
    "text": "the loop so the more the loop goes the more I'm saving so that that would be the the obvious explanation so we have a",
    "start": "2205050",
    "end": "2211560"
  },
  {
    "text": "nice trend here Helen sorry what is the bump yeah what is the bump",
    "start": "2211560",
    "end": "2219690"
  },
  {
    "text": "around 10 right is that what's the bump",
    "start": "2219690",
    "end": "2224820"
  },
  {
    "text": "around 10 I'll tell you I have",
    "start": "2224820",
    "end": "2230040"
  },
  {
    "text": "absolutely no freaking idea I'm not kidding so actually it's visible here",
    "start": "2230040",
    "end": "2236070"
  },
  {
    "text": "too in the in in this plot as well where I kind of replaced with a drawing and it's just a fact of of computing when",
    "start": "2236070",
    "end": "2244320"
  },
  {
    "text": "you optimize there's some sometimes there's artifacts there's absolutely no explanation can find except if a good",
    "start": "2244320",
    "end": "2250290"
  },
  {
    "text": "attendee gives them to you",
    "start": "2250290",
    "end": "2253430"
  },
  {
    "text": "uh-huh so yeah so actually um thank you so actually we can see it's a tad slower for very small numbers up to",
    "start": "2265020",
    "end": "2271780"
  },
  {
    "text": "two digits three two or three four up like two digits breaks even for one",
    "start": "2271780",
    "end": "2279430"
  },
  {
    "text": "digit numbers you're right and actually it's a good point I suppose that that",
    "start": "2279430",
    "end": "2284490"
  },
  {
    "text": "the loss in efficiency for a small number it's not gonna be it's not gonna be huge so I'm gonna keep this the green",
    "start": "2284490",
    "end": "2291310"
  },
  {
    "text": "version so just for kicks let me add a couple of more baselines so this here at",
    "start": "2291310",
    "end": "2298720"
  },
  {
    "text": "one would be a two i sorry a to you well in the c standard library this is sort",
    "start": "2298720",
    "end": "2305140"
  },
  {
    "text": "of the absolute baseline you take the library function and just look at it and",
    "start": "2305140",
    "end": "2310630"
  },
  {
    "text": "then have our in yellow we have our handwritten version which we showed in",
    "start": "2310630",
    "end": "2315640"
  },
  {
    "text": "the beginning and oh we have an awesome baseline here this is really good to beat this boost lexical cast",
    "start": "2315640",
    "end": "2324119"
  },
  {
    "text": "what does why is it so slow I know Hubert knows what does boost like",
    "start": "2325380",
    "end": "2332950"
  },
  {
    "text": "see it does the same thing but it does pretty much what Venkat said it converts everything to XML and then it and then",
    "start": "2332950",
    "end": "2340599"
  },
  {
    "text": "back so treatment quite almost literate is that what it does because what what does",
    "start": "2340599",
    "end": "2346630"
  },
  {
    "text": "this brain that function does is it writes the string to string stream and",
    "start": "2346630",
    "end": "2352680"
  },
  {
    "text": "then it reads it back as an integer that code got written and can you believe it",
    "start": "2352680",
    "end": "2360400"
  },
  {
    "text": "this is amazingly so I want to convert a number Chinese so let me do the most general thing I could be anywhere in the",
    "start": "2360400",
    "end": "2366730"
  },
  {
    "text": "world and Kaali right now right let me do the most general thing possible which",
    "start": "2366730",
    "end": "2372040"
  },
  {
    "text": "means I'm going to write this to a completely general extreme and I'm gonna read it from that complete general extreme so I got word that you know",
    "start": "2372040",
    "end": "2381940"
  },
  {
    "text": "though I give this talk a couple of times so I think the booze folks did get",
    "start": "2381940",
    "end": "2387220"
  },
  {
    "text": "the memo and I can they improve that function is that true so you know I recall somebody mentioned I didn't",
    "start": "2387220",
    "end": "2393280"
  },
  {
    "text": "verify it but somebody mentioned I actually they kind of they got the memo and they they improve that function anyhow if you're",
    "start": "2393280",
    "end": "2400750"
  },
  {
    "text": "not bad if you're marketing you should use that baseline right and you're gonna be awesome great so let's do one more",
    "start": "2400750",
    "end": "2410140"
  },
  {
    "start": "2406000",
    "end": "2544000"
  },
  {
    "text": "optimization and when I say think outside the loop an obvious optimization that's a classic comes to mind which",
    "start": "2410140",
    "end": "2415270"
  },
  {
    "text": "would be think outside the loop yes thank you unrolling so let's unroll this",
    "start": "2415270",
    "end": "2422170"
  },
  {
    "text": "beast and it gets quite quite a bit bulkier but it's going to be a bit",
    "start": "2422170",
    "end": "2427210"
  },
  {
    "text": "faster so we're gonna unroll the loop four ways why four ways and not three five or eight why do you think four is a",
    "start": "2427210",
    "end": "2435700"
  },
  {
    "text": "magical it's a good number because we are computer scientists and we like",
    "start": "2435700",
    "end": "2440770"
  },
  {
    "text": "small parts of two but that's a simpler reason I measured everything and actually the four is the sweet spot this",
    "start": "2440770",
    "end": "2447550"
  },
  {
    "text": "is like this should be the ultimate answer to you know what I measure with three five and eight and whatever and four would be simply double you know the",
    "start": "2447550",
    "end": "2455560"
  },
  {
    "text": "better performance there's nothing really interesting about this function",
    "start": "2455560",
    "end": "2460600"
  },
  {
    "text": "at this point it got from sort of the ivory tower of math it got down to the you know the greasy hands of a working",
    "start": "2460600",
    "end": "2466330"
  },
  {
    "text": "programmer right so it turns out that is better but you know you see the point",
    "start": "2466330",
    "end": "2472570"
  },
  {
    "text": "stands that it still does a bit worse for a small for small integer",
    "start": "2472570",
    "end": "2478030"
  },
  {
    "text": "integers why do you think it's not as fast for small integers with the unrolling we don't want necessary work",
    "start": "2478030",
    "end": "2487780"
  },
  {
    "text": "it's all necessary oh yeah you're right by the way this is not the whole code",
    "start": "2487780",
    "end": "2493950"
  },
  {
    "text": "you know if you look at I'm really sorry for though I mean I I hate this room it should be like the I don't know it's I'm",
    "start": "2493950",
    "end": "2502330"
  },
  {
    "text": "feeling bad about those people and when I'm feel bad about these people the grass is always greener right so this",
    "start": "2502330",
    "end": "2508300"
  },
  {
    "text": "look goes in step in four steps but it's incomplete because if you have a number",
    "start": "2508300",
    "end": "2513670"
  },
  {
    "text": "that's less than three digits you're gonna have to kind of fall back through the loop and have some fixed up code",
    "start": "2513670",
    "end": "2519010"
  },
  {
    "text": "they call that's going to do the last iterations so actually it's kind of a bit awkward for really small numbers",
    "start": "2519010",
    "end": "2525820"
  },
  {
    "text": "because you fall back to the previous algorithm with much without much improvement so that's",
    "start": "2525820",
    "end": "2531140"
  },
  {
    "text": "the reason why why small numbers are not as good what you can do actually is combine the algorithms and say if it has",
    "start": "2531140",
    "end": "2537979"
  },
  {
    "text": "less than three digits do that otherwise do that at any rate this is kind of",
    "start": "2537979",
    "end": "2543439"
  },
  {
    "text": "interesting so checkpoint depends on who you ask",
    "start": "2543439",
    "end": "2549410"
  },
  {
    "start": "2544000",
    "end": "2634000"
  },
  {
    "text": "depending on who you ask love for money makes the world go round I leave that to your philosophy",
    "start": "2549410",
    "end": "2556369"
  },
  {
    "text": "professor in algorithms it's math that make make make them go round so many",
    "start": "2556369",
    "end": "2564259"
  },
  {
    "text": "people believe optimization is this kind of weird thing whereby oh he's doing assembler the machine code he's a badass",
    "start": "2564259",
    "end": "2571749"
  },
  {
    "text": "no actually it's math you know it's high school and college level math that's not",
    "start": "2571749",
    "end": "2577189"
  },
  {
    "text": "even super complicated most of time but that motivates the transformations that you can do to reduce data dependencies",
    "start": "2577189",
    "end": "2584719"
  },
  {
    "text": "and to reduce the strength of operations used right and that's how it works",
    "start": "2584719",
    "end": "2591079"
  },
  {
    "text": "exploit instruction level parallelism by keeping those dailies busy spread work around to minimize data dependencies the",
    "start": "2591079",
    "end": "2598489"
  },
  {
    "text": "code I just showed is part of a nice face book library which is on github",
    "start": "2598489",
    "end": "2603589"
  },
  {
    "text": "too which I contributed a fair amount and it has high performance routines for",
    "start": "2603589",
    "end": "2609349"
  },
  {
    "text": "this kind of stuff so that is not however strong enough result to be",
    "start": "2609349",
    "end": "2615079"
  },
  {
    "text": "publishable which is going to segue into a future talk of mine which does feature",
    "start": "2615079",
    "end": "2621140"
  },
  {
    "text": "publishable result with this with this I'm gonna thank you very much for being here you've been great awesome thank you",
    "start": "2621140",
    "end": "2628089"
  },
  {
    "text": "thanks",
    "start": "2628089",
    "end": "2631089"
  },
  {
    "text": "[Applause]",
    "start": "2633530",
    "end": "2635849"
  }
]