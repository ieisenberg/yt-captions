[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "all right today we're going to be as crusty as we could possibly be we're going to be contrarian we're going to",
    "start": "2220",
    "end": "7680"
  },
  {
    "text": "complain about things that you're otherwise being told are the best practices in software architecture which",
    "start": "7680",
    "end": "13620"
  },
  {
    "text": "they may actually be we're not going that badly uh so today just quickly a",
    "start": "13620",
    "end": "19680"
  },
  {
    "start": "18000",
    "end": "95000"
  },
  {
    "text": "little bit uh first before we we get later into this and you're wondering who am I to question some of some of this",
    "start": "19680",
    "end": "26699"
  },
  {
    "text": "wisdom coming down from on high from the Uncle Bob's of of the past so I'm Jerry",
    "start": "26699",
    "end": "32279"
  },
  {
    "text": "Miller this is my third time third time speaking in DC uh woodwind here in 2020",
    "start": "32279",
    "end": "37380"
  },
  {
    "text": "to finally finally meet oscar but the world had other ideas in 2020 um I'm a long time open source developer",
    "start": "37380",
    "end": "45300"
  },
  {
    "text": "in inside of.net specifically I want to call out structure map not that it's an exciting project structure map was the",
    "start": "45300",
    "end": "53340"
  },
  {
    "text": "first production ready ioc container in.net so in about 30 minutes when somebody are",
    "start": "53340",
    "end": "60059"
  },
  {
    "text": "shaking your head saying this guy clearly does not understand dependency inversion I I do got me a little Slack",
    "start": "60059",
    "end": "68520"
  },
  {
    "text": "um that's going to come up a little bit just just my experience have also having to help other people through using some",
    "start": "68520",
    "end": "74640"
  },
  {
    "text": "of these tools in my daily work today for the moment I am the senior director",
    "start": "74640",
    "end": "81720"
  },
  {
    "text": "of software architecture at media analytics that's a medical analytics software company in the US and Ukraine",
    "start": "81720",
    "end": "89460"
  },
  {
    "text": "um in the next week or two I'm going to be transferring um starting my own company called Jasper FX",
    "start": "89460",
    "end": "95340"
  },
  {
    "start": "95000",
    "end": "124000"
  },
  {
    "text": "software and that is going to be all about services and product offerings on top of some other open source tools the",
    "start": "95340",
    "end": "101939"
  },
  {
    "text": "the Critter stack over in Martin this talk is not about those things but some",
    "start": "101939",
    "end": "108180"
  },
  {
    "text": "of the work we're doing with those tools is definitely informed by our experiences working with with big",
    "start": "108180",
    "end": "114060"
  },
  {
    "text": "long-running architectural long-running Enterprise systems and I want to show you some of the ideas that",
    "start": "114060",
    "end": "119939"
  },
  {
    "text": "we're trying out to kind of go off in a little bit different direction but that's later",
    "start": "119939",
    "end": "125340"
  },
  {
    "start": "124000",
    "end": "312000"
  },
  {
    "text": "all right so the last last five to ten years uh",
    "start": "125340",
    "end": "131220"
  },
  {
    "text": "through Consulting gigs working in product companies um whoever it's in working with large",
    "start": "131220",
    "end": "138900"
  },
  {
    "text": "companies smaller product shops that nevertheless built very large systems and even working with with some",
    "start": "138900",
    "end": "145620"
  },
  {
    "text": "charitable foundation work consistently seeing some Trends across",
    "start": "145620",
    "end": "150720"
  },
  {
    "text": "very large very long running systems we're talking about systems that have been in very active production for five",
    "start": "150720",
    "end": "157260"
  },
  {
    "text": "to ten years where the problems start to happen the code has been very hard to follow to",
    "start": "157260",
    "end": "164220"
  },
  {
    "text": "reason about one of the systems I'm helping with right now it's very difficult to predict that hey if we go",
    "start": "164220",
    "end": "171120"
  },
  {
    "text": "into this one place if we cut if then statements and do a little bit of conditional logic here for this one specific customer off the side does it",
    "start": "171120",
    "end": "179220"
  },
  {
    "text": "end up shattering the business Logic for a bunch of other customers down the line it's just very hard for us to know call",
    "start": "179220",
    "end": "185099"
  },
  {
    "text": "Stacks are big the consequences are not really clear that's a problem",
    "start": "185099",
    "end": "191099"
  },
  {
    "text": "some of these code bases are very high friction code becomes scattered all over closely related code becomes scattered",
    "start": "191099",
    "end": "198480"
  },
  {
    "text": "all over a very large solution the things that you care about at that very moment are not necessarily right",
    "start": "198480",
    "end": "205800"
  },
  {
    "text": "together in one nice tidy little package that's a problem upgrades upgrades are very hard",
    "start": "205800",
    "end": "213360"
  },
  {
    "text": "um just pulling something something out as an example we have a very very large system at work that uses in hibernate",
    "start": "213360",
    "end": "220580"
  },
  {
    "text": "once upon a time I think I was part of the in hibernate Mafia even though I hated that name and heavily invested",
    "start": "220580",
    "end": "228299"
  },
  {
    "text": "that as a tool but it's had its day it's it's aluminum wiring not as many people understand it today our younger",
    "start": "228299",
    "end": "235019"
  },
  {
    "text": "developers which means everybody but me now our younger developers are not familiar",
    "start": "235019",
    "end": "241200"
  },
  {
    "text": "with it EF core Dapper other tools vastly more googleable that's a quality",
    "start": "241200",
    "end": "246540"
  },
  {
    "text": "all by itself we'd kind of like to hear we'd kind of like to Mosey on from and hibernate but in our giant monolith",
    "start": "246540",
    "end": "252959"
  },
  {
    "text": "application nah too big can't do it performance is a problem",
    "start": "252959",
    "end": "259639"
  },
  {
    "text": "not necessarily because people are starting out to write slow code but when",
    "start": "259639",
    "end": "264660"
  },
  {
    "text": "these systems get big and I think it's especially around the databases it's",
    "start": "264660",
    "end": "269880"
  },
  {
    "text": "hard to understand where are we making Network hops where are we making sequential database calls where deep in",
    "start": "269880",
    "end": "277860"
  },
  {
    "text": "this call stack are we making even similar calls to the database but we can't really see it because the code is",
    "start": "277860",
    "end": "283740"
  },
  {
    "text": "too spread out performance problems creep in really badly when the code just gets big and you can't see it anymore",
    "start": "283740",
    "end": "291300"
  },
  {
    "text": "now all these systems were written by people who cared about their jobs all of these people they had a plan they",
    "start": "291300",
    "end": "299699"
  },
  {
    "text": "started out with a well-defined architecture they were they were coming to conferences like in DC they were",
    "start": "299699",
    "end": "305880"
  },
  {
    "text": "going to the workshops on clean architecture onion architecture whatever it's going to be but the problem is",
    "start": "305880",
    "end": "314220"
  },
  {
    "start": "312000",
    "end": "397000"
  },
  {
    "text": "everything works up front so That's Mike Tyson originally uh I was",
    "start": "314220",
    "end": "320699"
  },
  {
    "text": "going to do like a Elmer Fudd getting knocked out and I went for the meaner one too so Mike Tyson's quote years and years",
    "start": "320699",
    "end": "327900"
  },
  {
    "text": "ago he had some high-profile fight coming up when when people still paid",
    "start": "327900",
    "end": "333000"
  },
  {
    "text": "attention to boxing and they were asking him hey Michael Spinks says he has a",
    "start": "333000",
    "end": "338460"
  },
  {
    "text": "plan on how to beat you or maybe it was a Vander Holyfield I don't know and he says hey everybody has a plan until they",
    "start": "338460",
    "end": "344460"
  },
  {
    "text": "get punched in the face right software architecture everything works",
    "start": "344460",
    "end": "350460"
  },
  {
    "text": "at first whatever you pick is probably going to work absolutely",
    "start": "350460",
    "end": "357419"
  },
  {
    "text": "fine in the early stages of a project that's when you're paying attention to things the most so you're going to find",
    "start": "357419",
    "end": "364080"
  },
  {
    "text": "problems and alleviate problems that's when the use cases are simpler so",
    "start": "364080",
    "end": "369240"
  },
  {
    "text": "potential frictions aren't necessarily showing up yet so you got to be careful",
    "start": "369240",
    "end": "374699"
  },
  {
    "text": "this this project plan we started with is architectural idea it's great right now all of the absolute worst systems",
    "start": "374699",
    "end": "382319"
  },
  {
    "text": "I've seen in my life has been from somebody purposely consciously",
    "start": "382319",
    "end": "387440"
  },
  {
    "text": "professionally picking an architectural plan and following it but following it",
    "start": "387440",
    "end": "393660"
  },
  {
    "text": "even when it stopped working all right",
    "start": "393660",
    "end": "398880"
  },
  {
    "text": "so um any any other Generation X programmers in the room",
    "start": "398880",
    "end": "404240"
  },
  {
    "text": "okay just a few hints so I originally did a version of this this talk for my 19 year",
    "start": "404240",
    "end": "411180"
  },
  {
    "text": "old son and I was going to try to use the the Alanis Morissette isn't it ironic you know so the 10 of you now",
    "start": "411180",
    "end": "417840"
  },
  {
    "text": "have that that song just buried in your mind for the rest of the day but my son had no earthly idea what that was so",
    "start": "417840",
    "end": "424199"
  },
  {
    "text": "instead I went for the classic 90s movie right so I but ironically uh the some of the",
    "start": "424199",
    "end": "433319"
  },
  {
    "text": "elements that I think have led to these big systems being hard to work with are exactly the kind of things that we are",
    "start": "433319",
    "end": "439740"
  },
  {
    "text": "told that we maybe we believe are exactly what you use to make these systems be maintainable",
    "start": "439740",
    "end": "446360"
  },
  {
    "text": "hexagonal architectures clean architecture the onion architecture and then I",
    "start": "446360",
    "end": "452340"
  },
  {
    "text": "admittedly I have a special hatred for the onion architecture the the this is",
    "start": "452340",
    "end": "457500"
  },
  {
    "text": "somewhat personal that leads people to trying to do unusually complicated",
    "start": "457500",
    "end": "463860"
  },
  {
    "text": "things with ioc tools which means they usually end up on my doorstep asking for help",
    "start": "463860",
    "end": "470340"
  },
  {
    "text": "it's a little bit of bitterness there's an older older form another prescriptive architecture called idesign that is all",
    "start": "470340",
    "end": "477240"
  },
  {
    "text": "about how do you divide responsibilities in an architecture where do you put service boundaries it's",
    "start": "477240",
    "end": "483900"
  },
  {
    "text": "prescriptive architecture it has a lot of good stuff with it but it can lead to",
    "start": "483900",
    "end": "488940"
  },
  {
    "text": "a very over complicated system that's slow um",
    "start": "488940",
    "end": "495380"
  },
  {
    "text": "database abstractions we'll hammer on this a little bit later you know we we know we think we want to abstract the",
    "start": "495599",
    "end": "502080"
  },
  {
    "text": "database a little bit maybe for testability maybe we think we swap the database out layer later maybe that's so",
    "start": "502080",
    "end": "509819"
  },
  {
    "text": "maybe it's not but what database abstractions can do is it reduces your database technology to a least common",
    "start": "509819",
    "end": "516539"
  },
  {
    "text": "denominator approach um it also I think gives developers an incentive to",
    "start": "516539",
    "end": "523740"
  },
  {
    "text": "go down to pulling out a single entity at a time and it's going to make you",
    "start": "523740",
    "end": "529019"
  },
  {
    "text": "chatty and potentially make you very very slow we'll get into that",
    "start": "529019",
    "end": "534680"
  },
  {
    "text": "anti-corruption layers you know we know that in some cases we don't want to share our Rich domain model entities",
    "start": "534680",
    "end": "541620"
  },
  {
    "text": "over a web service so we'll put some kind of mapping layer in there specifically to not share types",
    "start": "541620",
    "end": "548519"
  },
  {
    "text": "go too far with that um that's why I design shows up go too far",
    "start": "548519",
    "end": "553860"
  },
  {
    "text": "with that and what you do is you add a lot more mental overhead to understand the system how many jumps does any data",
    "start": "553860",
    "end": "561839"
  },
  {
    "text": "element in the system go through mapping layer to service layer to mediator to a command over here everything you do for",
    "start": "561839",
    "end": "570060"
  },
  {
    "text": "the sake of loose coupling also comes with a little bit of cost of just extra junk to try to keep track of",
    "start": "570060",
    "end": "577200"
  },
  {
    "text": "and then finally we're definitely going to talk about prescriptive coding structures and here what I mean is",
    "start": "577200",
    "end": "583760"
  },
  {
    "text": "one of the early days of my current position I was asked hey Jeremy can you put together a reference architecture a",
    "start": "583760",
    "end": "590519"
  },
  {
    "text": "reference template for what microservices or services are going to be and I",
    "start": "590519",
    "end": "596519"
  },
  {
    "text": "partially out of laziness somewhat out of hey that's actually kind of dangerous",
    "start": "596519",
    "end": "601700"
  },
  {
    "text": "when you set up a detailed reference architecture we'll get into this a little more the the key risk there is",
    "start": "601700",
    "end": "608820"
  },
  {
    "text": "people will actually follow it all right so",
    "start": "608820",
    "end": "615839"
  },
  {
    "start": "612000",
    "end": "663000"
  },
  {
    "text": "I think it's probably going to come out that I'm going to bash on the clean architecture the the onion architecture",
    "start": "615839",
    "end": "622320"
  },
  {
    "text": "the what all these prescriptive architectures are the things that you've probably already gone to workshops for",
    "start": "622320",
    "end": "627779"
  },
  {
    "text": "today Ian Cooper has a great talk on clean architecture I want to be a little",
    "start": "627779",
    "end": "633899"
  },
  {
    "text": "bit more nuanced here these aren't necessarily horrible things by themselves but there's some bad that can",
    "start": "633899",
    "end": "641640"
  },
  {
    "text": "creep in with them so we'll go to this old folks thing which again my 19 year old had never heard of we don't want to",
    "start": "641640",
    "end": "648120"
  },
  {
    "text": "throw the baby out with the bathwater the elements of good design that the clean architecture gives us we want to",
    "start": "648120",
    "end": "655019"
  },
  {
    "text": "keep that the problems that it that it will incur in large systems let's try to",
    "start": "655019",
    "end": "660120"
  },
  {
    "text": "throw that out with the bathwater it's just just kind of getting a kind of",
    "start": "660120",
    "end": "666899"
  },
  {
    "start": "663000",
    "end": "747000"
  },
  {
    "text": "a general sense make sure we're all together on what we mean here by layered architecture and here I'm talking about",
    "start": "666899",
    "end": "672540"
  },
  {
    "text": "the whole category of hexagonal architectures anything any architectural",
    "start": "672540",
    "end": "677700"
  },
  {
    "text": "style clean hexagonal itself ports and adapters the onion architecture anything",
    "start": "677700",
    "end": "684420"
  },
  {
    "text": "that tries to make you think in terms of technical layers or layers of",
    "start": "684420",
    "end": "689940"
  },
  {
    "text": "responsibility that's what I mean here these architectural styles are great",
    "start": "689940",
    "end": "695700"
  },
  {
    "text": "they promote the idea of separation of concerns the idea that I want to get my",
    "start": "695700",
    "end": "701100"
  },
  {
    "text": "infrastructure out of my business logic that's going to be very important I think that's very important",
    "start": "701100",
    "end": "707399"
  },
  {
    "text": "they give you predictable rules developers don't necessarily have to spend a lot of time thinking about where",
    "start": "707399",
    "end": "713940"
  },
  {
    "text": "should this code go just follow the rules and the code goes where it goes",
    "start": "713940",
    "end": "718980"
  },
  {
    "text": "whether that's a good idea in the end is is not as black and white as the rules say",
    "start": "718980",
    "end": "726140"
  },
  {
    "text": "all right this all sounds great tons of tons of workshops people doing",
    "start": "727019",
    "end": "733320"
  },
  {
    "text": "pluralsight videos a lot of you are probably having success with this today and I don't want to take that away from",
    "start": "733320",
    "end": "738779"
  },
  {
    "text": "you I think in limited perspectives we have had success in my own work but this",
    "start": "738779",
    "end": "744839"
  },
  {
    "text": "comes with some problems when these things go off the rails",
    "start": "744839",
    "end": "751320"
  },
  {
    "start": "747000",
    "end": "906000"
  },
  {
    "text": "I'll switch the code there's a little bit of contrived except what's not contrived is it's",
    "start": "751320",
    "end": "757320"
  },
  {
    "text": "absolutely real so what you see in one of these large",
    "start": "757320",
    "end": "762600"
  },
  {
    "text": "systems yeah this is not admittedly.netcentric",
    "start": "762600",
    "end": "767700"
  },
  {
    "text": "but we end up with having a separate project a jar an",
    "start": "767700",
    "end": "773519"
  },
  {
    "text": "assembly for every technical stereotype of the system when you start out small that's no big deal you have your domain",
    "start": "773519",
    "end": "781139"
  },
  {
    "text": "you have entities in one place down to another one there's infrastructure I",
    "start": "781139",
    "end": "786540"
  },
  {
    "text": "copied this from somewhere so it's not as be",
    "start": "786540",
    "end": "791779"
  },
  {
    "text": "it's a junk drawer lots of Base types the entities what happens when there's a",
    "start": "795660",
    "end": "800940"
  },
  {
    "text": "hundred different classes in your entities holder which I've seen multiple occasions",
    "start": "800940",
    "end": "807899"
  },
  {
    "text": "you get to a point where finding the code that you want at any one time",
    "start": "807899",
    "end": "813680"
  },
  {
    "text": "hopefully you're good with your IDE shortcuts you know got to do that no matter what but closely related code",
    "start": "813680",
    "end": "820620"
  },
  {
    "text": "making changes in the system making a simple change of hey this customer has",
    "start": "820620",
    "end": "826980"
  },
  {
    "text": "this extra data element or maybe they their workflow is a little bit special our customers God love them they just",
    "start": "826980",
    "end": "834720"
  },
  {
    "text": "kill us with exception cases right um when we have to go and change one of",
    "start": "834720",
    "end": "840360"
  },
  {
    "text": "these systems built on this kind of layered architecture approach you end up doing shotgun surgery",
    "start": "840360",
    "end": "845519"
  },
  {
    "text": "write a little bit of code up here come and make a little bit of change way down here another change way down there",
    "start": "845519",
    "end": "851880"
  },
  {
    "text": "when you're writing it you get the boiling frog problem you don't notice this at first when you're just dropping a few new classes in this adds up when",
    "start": "851880",
    "end": "858959"
  },
  {
    "text": "you get really late 10 years later five to ten years later I despise this kind",
    "start": "858959",
    "end": "865200"
  },
  {
    "text": "of layered architecture if you see me on Twitter gripe about clean or onion or",
    "start": "865200",
    "end": "870600"
  },
  {
    "text": "whatever it is it's this this needs to go away",
    "start": "870600",
    "end": "876560"
  },
  {
    "text": "a couple other problems that show up we'll get into just a second later so already talking about how to ameliorate",
    "start": "878279",
    "end": "885240"
  },
  {
    "text": "this a little bit um and this talking at this point of talk I always make some kind of joke I'm",
    "start": "885240",
    "end": "891360"
  },
  {
    "text": "a real developer that's why I'm not super great with PowerPoint I'm always awkward with this stuff",
    "start": "891360",
    "end": "897680"
  },
  {
    "text": "oh I reordered it oh my goodness I'm sorry folks",
    "start": "900120",
    "end": "907320"
  },
  {
    "text": "hmm I thought I reordered it so one of the ways to really write this so those",
    "start": "907320",
    "end": "912660"
  },
  {
    "text": "layers we were off the rails when those those layers become very huge part of",
    "start": "912660",
    "end": "919680"
  },
  {
    "text": "the research I was doing to get ready for this talk make sure I did an okay job while my flight delays kept piling",
    "start": "919680",
    "end": "925860"
  },
  {
    "text": "up today um one of the things that proponents of clean architecture will talk about is",
    "start": "925860",
    "end": "931860"
  },
  {
    "text": "well you can upgrade you can easily upgrade uh your application or you can",
    "start": "931860",
    "end": "938459"
  },
  {
    "text": "switch database engines right everybody's everybody's heard that at some point and",
    "start": "938459",
    "end": "944459"
  },
  {
    "text": "if you've got a good abstraction right and you switch databases no not really in reality in reality if you have a",
    "start": "944459",
    "end": "952320"
  },
  {
    "text": "large enough horizontal layer you are not able to practice practically upgrade",
    "start": "952320",
    "end": "959220"
  },
  {
    "text": "because it's just too much regression testing no matter what even if you got the best abstraction in the world which",
    "start": "959220",
    "end": "965459"
  },
  {
    "text": "you don't because databases are actually different um we just don't have the time we can't",
    "start": "965459",
    "end": "971519"
  },
  {
    "text": "tell product owners we can we just can't take on upgrading that whole horizontal",
    "start": "971519",
    "end": "978360"
  },
  {
    "text": "stat horizontal spread all at one time it's just not practical Instead This is the mild change",
    "start": "978360",
    "end": "986420"
  },
  {
    "text": "a lot of the issues my whining with with layered architectures can be ameliorated",
    "start": "986420",
    "end": "991620"
  },
  {
    "text": "by what folks can now call vertical slice architecture just the idea that I am going to",
    "start": "991620",
    "end": "998579"
  },
  {
    "text": "organize first by cohesive features within the system a bit of functionality and I'm trying to",
    "start": "998579",
    "end": "1006139"
  },
  {
    "text": "show this here I'm showing separate databases it doesn't necessarily mean you're automatically having a giant",
    "start": "1006139",
    "end": "1013040"
  },
  {
    "text": "modular monolith that's targeting six eight totally different databases just",
    "start": "1013040",
    "end": "1018079"
  },
  {
    "text": "that if a segment of the database whether it's a schema a set of collections if at least between features",
    "start": "1018079",
    "end": "1024438"
  },
  {
    "text": "could be a little bit Loosely coupled from each other that even if you're a monolith if you could do upgrades this",
    "start": "1024439",
    "end": "1032839"
  },
  {
    "text": "at a time one feature at a time that's practical you can convince product owners of hey we can do this",
    "start": "1032839",
    "end": "1039918"
  },
  {
    "text": "upgrade in our case it's it's not necessarily an upgrade it's cheap right we kind of like to replace",
    "start": "1039919",
    "end": "1046880"
  },
  {
    "text": "SQL server with postgres and some of our big systems just purely cost savings it",
    "start": "1046880",
    "end": "1052400"
  },
  {
    "text": "would be nice if we could do that if we could tackle it more bit wise a Sprint by Sprint we could deliver in a",
    "start": "1052400",
    "end": "1058700"
  },
  {
    "text": "Sprint we could deliver switching part of the app from SQL Server to postgres but there's no way in hell within one",
    "start": "1058700",
    "end": "1065720"
  },
  {
    "text": "Sprint we could ever do the whole whole horizontal layer that's something to think about",
    "start": "1065720",
    "end": "1071840"
  },
  {
    "text": "other weakness layered architecture they talk about well you can reason about one layer at a",
    "start": "1071840",
    "end": "1078320"
  },
  {
    "text": "time you never reason about one layer at a time you reason about one use case at a time the full vertical stack hopefully",
    "start": "1078320",
    "end": "1085700"
  },
  {
    "text": "you can concentrate on only the business logic or only the data access logic but likely when you have customer problems",
    "start": "1085700",
    "end": "1092360"
  },
  {
    "text": "when you have integration tests failing you need to trace tightly related code",
    "start": "1092360",
    "end": "1097520"
  },
  {
    "text": "from entry point to controller level to data access layer to service level to",
    "start": "1097520",
    "end": "1104240"
  },
  {
    "text": "entity the tightly related code put it together keep it as close together in your code as you possibly can",
    "start": "1104240",
    "end": "1111440"
  },
  {
    "text": "that means you're going to lose out on some of that that rigor that people try to do through project references people",
    "start": "1111440",
    "end": "1119179"
  },
  {
    "text": "try to force this kind of loose coupling rule by setting all those kind of rules of you know this project can only access",
    "start": "1119179",
    "end": "1125900"
  },
  {
    "text": "that project and can only have these Tack and all that that's great",
    "start": "1125900",
    "end": "1131480"
  },
  {
    "text": "um it's extra overhead it's extra friction on you it's just better if",
    "start": "1131480",
    "end": "1137179"
  },
  {
    "text": "developers can be disciplined instead",
    "start": "1137179",
    "end": "1141880"
  },
  {
    "start": "1141000",
    "end": "1501000"
  },
  {
    "text": "okay I want to keep harping on keep harping on a little layered architecture just a",
    "start": "1143240",
    "end": "1149120"
  },
  {
    "text": "little bit so now you start talking about advice all right your reference architecture so",
    "start": "1149120",
    "end": "1156140"
  },
  {
    "text": "you'll download people have these things all over GitHub here's what a microservice would look like and I'm",
    "start": "1156140",
    "end": "1163039"
  },
  {
    "text": "going to have a controller that calls to mediator level the calls to a service layer the calls to a repository",
    "start": "1163039",
    "end": "1169820"
  },
  {
    "text": "abstraction that's hopefully persisting entities and talk to the real database",
    "start": "1169820",
    "end": "1174980"
  },
  {
    "text": "right that consistency is great except what happens in reality sometimes I just find",
    "start": "1174980",
    "end": "1181340"
  },
  {
    "text": "out it doesn't work sometimes it's unnecessary complexity you see shallow pass-throughs everybody's probably seen",
    "start": "1181340",
    "end": "1187580"
  },
  {
    "text": "this in their code right following a template you see nothing but a service layer that just immediately delegates",
    "start": "1187580",
    "end": "1193039"
  },
  {
    "text": "the next layer down that's silly I think a much bigger problem is when these",
    "start": "1193039",
    "end": "1198620"
  },
  {
    "text": "things become way too bloated so we switched it code just one quick second here",
    "start": "1198620",
    "end": "1205100"
  },
  {
    "text": "the other killer problems um I'm always kind of kind of lame",
    "start": "1205100",
    "end": "1210140"
  },
  {
    "text": "um let's say our problem problem is an invoice so a really common practice is to try to",
    "start": "1210140",
    "end": "1217940"
  },
  {
    "text": "organize these controllers and repositories and entities around really",
    "start": "1217940",
    "end": "1223039"
  },
  {
    "text": "crud-centric thinking saying that let's have a folder or let's have an invoice",
    "start": "1223039",
    "end": "1228080"
  },
  {
    "text": "controller which means we're going to have an invoice invoice service and invoice",
    "start": "1228080",
    "end": "1234039"
  },
  {
    "text": "repository so on and so forth right and this is all spread out all over the system",
    "start": "1234039",
    "end": "1239480"
  },
  {
    "text": "what happens longer term you get a lot more operations than just",
    "start": "1239480",
    "end": "1246500"
  },
  {
    "text": "crud as this grows I've seen plenty of cases where these controllers can have",
    "start": "1246500",
    "end": "1253280"
  },
  {
    "text": "10 to 15 different operations so you end up with controllers that just have massive dependency lists because you",
    "start": "1253280",
    "end": "1259820"
  },
  {
    "text": "have all these unrelated endpoints that everything that touches an invoice or an order or whatever your entity is",
    "start": "1259820",
    "end": "1267260"
  },
  {
    "text": "you're going to have one big method here that calls one big method here it calls",
    "start": "1267260",
    "end": "1272299"
  },
  {
    "text": "one big method here so on and so forth that gives developers a disincentive to",
    "start": "1272299",
    "end": "1280100"
  },
  {
    "text": "think about what else should be there as use cases grow much much larger",
    "start": "1280100",
    "end": "1285820"
  },
  {
    "text": "by having one method one calling one method one method one method one method",
    "start": "1285820",
    "end": "1290919"
  },
  {
    "text": "it's a disincentive to start extracting methods out because",
    "start": "1290919",
    "end": "1296419"
  },
  {
    "text": "you really have a junk drawer of unrelated operations that just Loosely",
    "start": "1296419",
    "end": "1301520"
  },
  {
    "text": "follow under the Aegis of an entity so developers I'm sure some of you've",
    "start": "1301520",
    "end": "1307100"
  },
  {
    "text": "seen this developers will bloat these things like crazy because that's all the template says to do",
    "start": "1307100",
    "end": "1313880"
  },
  {
    "text": "right what they need to do instead is they need to be breaking out of the template they need to realize hey in",
    "start": "1313880",
    "end": "1320059"
  },
  {
    "text": "this case that template no longer works we're going to come back to the organization by entity because I think",
    "start": "1320059",
    "end": "1325820"
  },
  {
    "text": "that's that kind of crud-centric thinking based on nouns I think that's actually a root cause of a lot of the",
    "start": "1325820",
    "end": "1332900"
  },
  {
    "text": "bloated problems in these kind of big systems but first let's contemplate",
    "start": "1332900",
    "end": "1338600"
  },
  {
    "text": "Winnie the Pooh for just a second um",
    "start": "1338600",
    "end": "1344440"
  },
  {
    "text": "well I get a drink so",
    "start": "1345280",
    "end": "1350659"
  },
  {
    "text": "out of this this whole whole talk if there's one and only one thing I want you to take away from this",
    "start": "1350659",
    "end": "1357620"
  },
  {
    "text": "um most of us here are probably technical leaders within our within our organization or are you certainly aspire",
    "start": "1357620",
    "end": "1364700"
  },
  {
    "text": "to be Fair statement folks right so you probably learned this",
    "start": "1364700",
    "end": "1369860"
  },
  {
    "text": "lesson the first time out I was a technical leader SEC first time I was a technical lead I just did all the coding",
    "start": "1369860",
    "end": "1376340"
  },
  {
    "text": "and had the other people do nothing the second time when I actually tried to be a tech lead",
    "start": "1376340",
    "end": "1382760"
  },
  {
    "text": "um I learned a horrible lesson um I tried to write out in great detail",
    "start": "1382760",
    "end": "1388340"
  },
  {
    "text": "because I was getting yelled at so much for not giving enough guidance so I wrote down this really detailed guidance",
    "start": "1388340",
    "end": "1394220"
  },
  {
    "text": "of how to do a coding task and handed it off to the developer and when I got the",
    "start": "1394220",
    "end": "1399679"
  },
  {
    "text": "code back it was horrible what was horrible about it I'd given him",
    "start": "1399679",
    "end": "1405679"
  },
  {
    "text": "the wrong advice and he had just followed what I did he didn't think it he didn't question it didn't change just",
    "start": "1405679",
    "end": "1412100"
  },
  {
    "text": "did what I told him to the the hard lesson I learned is when you're giving technical advice",
    "start": "1412100",
    "end": "1418700"
  },
  {
    "text": "technical Direction it's much more important to explain the why why are we",
    "start": "1418700",
    "end": "1424520"
  },
  {
    "text": "using this template when is it applicable and also creating a decision tree of when does this not work so that",
    "start": "1424520",
    "end": "1432440"
  },
  {
    "text": "this advice that I gave you thinking about these three use cases when you hit use case four that's something totally",
    "start": "1432440",
    "end": "1438919"
  },
  {
    "text": "different you have some tools to know of hey this is wrong this this doesn't apply I should do something different",
    "start": "1438919",
    "end": "1444860"
  },
  {
    "text": "trying to avoid that problem with bloated controllers bloated service service layers all right now there's a",
    "start": "1444860",
    "end": "1452659"
  },
  {
    "text": "balance here we do these prescriptive approaches so developers don't have to think all right just proceed and do",
    "start": "1452659",
    "end": "1459799"
  },
  {
    "text": "problem is it doesn't work it just doesn't give you good results in harder harder systems so technical lead",
    "start": "1459799",
    "end": "1467240"
  },
  {
    "text": "always got to be explaining why are we doing things understanding trying to explain the rationale and always give",
    "start": "1467240",
    "end": "1473480"
  },
  {
    "text": "the other developers space to challenge what what we're doing and always have a",
    "start": "1473480",
    "end": "1479120"
  },
  {
    "text": "little bit of room to innovate when they hit into something different or at the very least your very most Junior",
    "start": "1479120",
    "end": "1485059"
  },
  {
    "text": "developer should at least be comfortable coming back to you and saying hey this just doesn't seem to work",
    "start": "1485059",
    "end": "1491320"
  },
  {
    "text": "what do you think at least getting that kind of negative feedback of hey this reference architecture it ain't working",
    "start": "1491320",
    "end": "1497179"
  },
  {
    "text": "for me",
    "start": "1497179",
    "end": "1499658"
  },
  {
    "start": "1501000",
    "end": "1778000"
  },
  {
    "text": "so um going for more Gen X this is even a little before my time you know so",
    "start": "1503179",
    "end": "1508280"
  },
  {
    "text": "we're criticizing a lot of things we're going to criticize more database abstractions a minute but what is good Conan what is best in life right",
    "start": "1508280",
    "end": "1516320"
  },
  {
    "text": "um what I'm going to say it's not necessarily the stuffy rules who can call what project structures reference",
    "start": "1516320",
    "end": "1522740"
  },
  {
    "text": "architectures it can be helpful but that stuff's",
    "start": "1522740",
    "end": "1528039"
  },
  {
    "text": "um at all times you want to keep very closely related code together as close as you can you want to be able to work",
    "start": "1528320",
    "end": "1534620"
  },
  {
    "text": "at the speed that you can think I want to even be able to and we'll show sample",
    "start": "1534620",
    "end": "1539720"
  },
  {
    "text": "in a minute I want to be able to just put put controllers that call services that call mediators I want to put it in",
    "start": "1539720",
    "end": "1545539"
  },
  {
    "text": "the same file while I'm working on it from the beginning it's real easy that way I can just scroll up and down I can",
    "start": "1545539",
    "end": "1551419"
  },
  {
    "text": "think all the time I don't have to distract myself with remembering this goes in this folder and this one goes",
    "start": "1551419",
    "end": "1557299"
  },
  {
    "text": "there um the single biggest thing what I would say the single most guaranteed and",
    "start": "1557299",
    "end": "1564500"
  },
  {
    "text": "reliable way to get the quality in any code base it's iteration and adaptation",
    "start": "1564500",
    "end": "1569919"
  },
  {
    "text": "it's that is the only perfectly reliable way to ever get to something good so you",
    "start": "1569919",
    "end": "1576740"
  },
  {
    "text": "want to purposely choose to work in a way that makes iteration and adaptation possible and easier so having effective",
    "start": "1576740",
    "end": "1584539"
  },
  {
    "text": "test automation coverage I think is actually more important than the rules",
    "start": "1584539",
    "end": "1590299"
  },
  {
    "text": "about layering and abstractions and all that kind of thing that gives you reversibility this gives you the",
    "start": "1590299",
    "end": "1595580"
  },
  {
    "text": "ultimate ability to change make the code soft and change the code and when I say",
    "start": "1595580",
    "end": "1600860"
  },
  {
    "text": "effective here I mean it's fast you can run it locally anytime you want obviously I'm griping a little bit about",
    "start": "1600860",
    "end": "1607460"
  },
  {
    "text": "selenium Suites here it's fast it's reliable you can count on",
    "start": "1607460",
    "end": "1613039"
  },
  {
    "text": "it it's relatively comprehensive again going down that theme of iteration",
    "start": "1613039",
    "end": "1618559"
  },
  {
    "text": "I want to use lower ceremony code and what I think there is an example I'm",
    "start": "1618559",
    "end": "1625820"
  },
  {
    "text": "thinking of in our system we it's a good thing we adopted open",
    "start": "1625820",
    "end": "1631279"
  },
  {
    "text": "Telemetry very early on but we've adopted it much earlier than our",
    "start": "1631279",
    "end": "1637700"
  },
  {
    "text": "messaging bus Frameworks had it so we're manually writing open Telemetry tracing",
    "start": "1637700",
    "end": "1642860"
  },
  {
    "text": "calls in every single message Handler in some cases right that's not hard code but it's",
    "start": "1642860",
    "end": "1648919"
  },
  {
    "text": "ceremony in its bloat now we hit cases where we're finding message handlers",
    "start": "1648919",
    "end": "1654980"
  },
  {
    "text": "that really need to be broken up for various reasons actually in this case it's trying to open a connection make an",
    "start": "1654980",
    "end": "1662000"
  },
  {
    "text": "external web service call come back and finish the transaction out it's horrible on your database we want to break this",
    "start": "1662000",
    "end": "1669799"
  },
  {
    "text": "up and be doing multiple calls but to break up those message handlers we have",
    "start": "1669799",
    "end": "1674840"
  },
  {
    "text": "to recreate all that open Telemetry tracing that's extra ceremony but instead you know as we move into newer",
    "start": "1674840",
    "end": "1681500"
  },
  {
    "text": "tools or just upgrade the tools we have if you don't have to manually do those extra explicit steps it's cheaper it's",
    "start": "1681500",
    "end": "1688640"
  },
  {
    "text": "lower cost for you to change change your message handlers break them up",
    "start": "1688640",
    "end": "1695140"
  },
  {
    "text": "dropping down the bottom we've covered some of this um we're about to go into database database",
    "start": "1697400",
    "end": "1704299"
  },
  {
    "text": "right now so what I'm going to tell you is I think the absolute most important thing for",
    "start": "1704299",
    "end": "1709760"
  },
  {
    "text": "business logic is to keep infrastructure concerns out of your business logic",
    "start": "1709760",
    "end": "1714799"
  },
  {
    "text": "I didn't necessarily say abstract the database that may be the answer but the single",
    "start": "1714799",
    "end": "1720320"
  },
  {
    "text": "best thing you can is keeping all technical concerns out of business logic",
    "start": "1720320",
    "end": "1726380"
  },
  {
    "text": "or workflow logic and we'll look at some other approaches that doesn't automatically mean database abstraction",
    "start": "1726380",
    "end": "1732620"
  },
  {
    "text": "but that that's important okay um and then",
    "start": "1732620",
    "end": "1737960"
  },
  {
    "text": "something to soften this up again with these stuffy rules of you got to build up you got to build an adapter interface",
    "start": "1737960",
    "end": "1744620"
  },
  {
    "text": "so that you can swap out the database or stick an in-memory database in blah blah blah this is something something I think",
    "start": "1744620",
    "end": "1751340"
  },
  {
    "text": "has been a big change in the last five ten years is we're starting to have more and more Technologies where it's",
    "start": "1751340",
    "end": "1757220"
  },
  {
    "text": "actually relatively easy to incorporate them as integration tests um and if your technology is easier to",
    "start": "1757220",
    "end": "1763700"
  },
  {
    "text": "Easy in integration tests I'm not going to worry so much about pulling layers and adapters and",
    "start": "1763700",
    "end": "1770240"
  },
  {
    "text": "in-memory stuff I'm just going to code through the real stuff and as long as my testing is good and fast I'm happy with",
    "start": "1770240",
    "end": "1776779"
  },
  {
    "text": "it okay",
    "start": "1776779",
    "end": "1783799"
  },
  {
    "start": "1778000",
    "end": "2221000"
  },
  {
    "text": "so obstructing the database is it a good idea is it not um and it's it's it depends it's always",
    "start": "1783799",
    "end": "1791059"
  },
  {
    "text": "it depends we switched code",
    "start": "1791059",
    "end": "1797140"
  },
  {
    "text": "oh I'll make the code really big oh the font here",
    "start": "1798740",
    "end": "1803740"
  },
  {
    "text": "oh yeah hold on like I said I'm always conquered with this stuff man",
    "start": "1805399",
    "end": "1810460"
  },
  {
    "text": "you heard my bad joke of the the the people who are really good with AV it's because they don't code",
    "start": "1813260",
    "end": "1820480"
  },
  {
    "text": "it's obviously not true all right so this kind of this kind of",
    "start": "1821059",
    "end": "1828500"
  },
  {
    "text": "eye repository of tea um I don't know how common this really is anymore it was really common a decade",
    "start": "1828500",
    "end": "1836480"
  },
  {
    "text": "ago I see it pop up um I think this is really problematic in the end I think this causes more harm",
    "start": "1836480",
    "end": "1842899"
  },
  {
    "text": "than good especially with a bigger more complicated system this is a very close reflection of exactly what the",
    "start": "1842899",
    "end": "1848960"
  },
  {
    "text": "underlying technology does um it just doesn't add a lot of value it's pretty well close to a straight up",
    "start": "1848960",
    "end": "1855380"
  },
  {
    "text": "password and then y'all have",
    "start": "1855380",
    "end": "1862880"
  },
  {
    "text": "believe me and also again go back to this idea of",
    "start": "1862880",
    "end": "1869059"
  },
  {
    "text": "crud um trying to organize code around entities",
    "start": "1869059",
    "end": "1875120"
  },
  {
    "text": "it's not really how it works in the real world um it's just very common you're going to hit operations where you're Crossing",
    "start": "1875120",
    "end": "1882620"
  },
  {
    "text": "into different cred boundaries you're using different entities you know here I'm making up you're touching a",
    "start": "1882620",
    "end": "1888799"
  },
  {
    "text": "user you're touching an order you're touching an invoice at the same time and now I need to have a transaction boundary around all of these and and you",
    "start": "1888799",
    "end": "1896179"
  },
  {
    "text": "have to get those transaction boundaries right you cannot screw that up or your system is going to be really bad so now",
    "start": "1896179",
    "end": "1903320"
  },
  {
    "text": "you might start adding more unit of work abstractions so you get these these really bloated controllers where they",
    "start": "1903320",
    "end": "1910700"
  },
  {
    "text": "just pull in so many different dependencies because they need a separate repository",
    "start": "1910700",
    "end": "1916039"
  },
  {
    "text": "for whatever it is the underlying persistence Tech probably probably would",
    "start": "1916039",
    "end": "1921980"
  },
  {
    "text": "happily let you use one thing okay you just try to make the point here",
    "start": "1921980",
    "end": "1929480"
  },
  {
    "text": "so here's a version of invoice repository just to basic crud operations in this case I use Martin because I",
    "start": "1929480",
    "end": "1937520"
  },
  {
    "text": "wanted to um it's mostly just just pass through except right off the bat this is common",
    "start": "1937520",
    "end": "1944960"
  },
  {
    "text": "I'm committing transactions in here directly um so right there you're kind of losing your ability to do transaction",
    "start": "1944960",
    "end": "1950840"
  },
  {
    "text": "boundaries between multiple operations which absolutely happens",
    "start": "1950840",
    "end": "1956419"
  },
  {
    "text": "see that as easily",
    "start": "1956419",
    "end": "1959860"
  },
  {
    "text": "more problems with this kind of kind of Repository so",
    "start": "1961760",
    "end": "1967600"
  },
  {
    "text": "performance issues one of the very common causes of performance issues it's database chattiness",
    "start": "1968539",
    "end": "1974559"
  },
  {
    "text": "this kind of database abstractions like oh you can swap out Dapper for for a",
    "start": "1974559",
    "end": "1980240"
  },
  {
    "text": "hibernate or EF core it forces you into lowest common denominators you're not",
    "start": "1980240",
    "end": "1985460"
  },
  {
    "text": "using the power of a system so here I wanna jump into something real quick",
    "start": "1985460",
    "end": "1992259"
  },
  {
    "text": "which is going to require me to remember where I put it",
    "start": "1995299",
    "end": "1999340"
  },
  {
    "text": "sorry folks okay",
    "start": "2008100",
    "end": "2013740"
  },
  {
    "text": "oh and then I immediately threw it away",
    "start": "2021640",
    "end": "2025440"
  },
  {
    "text": "last conference I did they would not let you do live coding they made this big",
    "start": "2034779",
    "end": "2040179"
  },
  {
    "text": "thing of you're not allowed to do it everything you have to have like every code sample saved to a static file because we just flat out don't trust you",
    "start": "2040179",
    "end": "2048960"
  },
  {
    "text": "so this is using a little bit of Martin a little bit of Martin but let me explain",
    "start": "2049359",
    "end": "2055599"
  },
  {
    "text": "what what mark because again this isn't a modern talk um let's say that we have an operation",
    "start": "2055599",
    "end": "2061179"
  },
  {
    "text": "where uh we're this is a banking application I'll use in a little bit at",
    "start": "2061179",
    "end": "2067419"
  },
  {
    "text": "one time we need to get both a user's bank account and some customer information so we could pick off things",
    "start": "2067419",
    "end": "2073540"
  },
  {
    "text": "like email preferences whatever that is so we need two pieces of closely related data",
    "start": "2073540",
    "end": "2079000"
  },
  {
    "text": "uh with the database I'm using a little bit of of barely Advanced smart and functionality to go grab these two",
    "start": "2079000",
    "end": "2086080"
  },
  {
    "text": "related documents in one database round trip right anything you can do generally with databases to avoid database round",
    "start": "2086080",
    "end": "2092679"
  },
  {
    "text": "trips to batch up queries to grab data at one time to avoid doing sequential calls all right that's that's going to",
    "start": "2092679",
    "end": "2099700"
  },
  {
    "text": "be a performance boost or flipping that around the other way in plus one query",
    "start": "2099700",
    "end": "2105280"
  },
  {
    "text": "problems where you query a bunch of data and then you Loop through the data to go do other queries that's a pretty common",
    "start": "2105280",
    "end": "2112060"
  },
  {
    "text": "performance problem so I'm using right here just the point is I'm using some Martin functionality that's specific to",
    "start": "2112060",
    "end": "2119020"
  },
  {
    "text": "Martin that really doesn't necessarily fit inside of that that very thin",
    "start": "2119020",
    "end": "2124660"
  },
  {
    "text": "what I call prophylactic abstraction you know the ibase repository it only lets",
    "start": "2124660",
    "end": "2132040"
  },
  {
    "text": "you work on one entity at a time there's no concept of batching queries or or",
    "start": "2132040",
    "end": "2137140"
  },
  {
    "text": "getting included included things looking at other problems",
    "start": "2137140",
    "end": "2142660"
  },
  {
    "text": "again trying to use the power of your system um and and to some degree this is",
    "start": "2142660",
    "end": "2148839"
  },
  {
    "text": "this is a little bit based on me having a lot of investment in",
    "start": "2148839",
    "end": "2153880"
  },
  {
    "text": "building developer tools because it's obviously a frustration when you try to build a really good tool",
    "start": "2153880",
    "end": "2159460"
  },
  {
    "text": "and then somebody puts a bad abstraction around it that throws away most of the power look at the code that's highlighted and",
    "start": "2159460",
    "end": "2165460"
  },
  {
    "text": "this is.net Centric um let me kind of talk about this directly expose exposing I queryable",
    "start": "2165460",
    "end": "2173560"
  },
  {
    "text": "that is is the programmatic uh strong type type querying language inside",
    "start": "2173560",
    "end": "2179680"
  },
  {
    "text": "of.net various tools have very different dialects and support for for iqueryable",
    "start": "2179680",
    "end": "2186780"
  },
  {
    "text": "even if you're trying to do it within memory approach I've been burned very badly when an in-memory approach behave",
    "start": "2186780",
    "end": "2193180"
  },
  {
    "text": "very very differently from uh in that case back then it was using Raven DB where we weren't using Raven DB indexing",
    "start": "2193180",
    "end": "2200920"
  },
  {
    "text": "in an intelligent way whatsoever because it was behind a naive abstraction you",
    "start": "2200920",
    "end": "2206560"
  },
  {
    "text": "got to watch out for that that's a world of trouble trying to abstract away I queryable behind an eye Repository",
    "start": "2206560",
    "end": "2213880"
  },
  {
    "text": "but folks still do it okay",
    "start": "2213880",
    "end": "2219420"
  },
  {
    "text": "let me get it back here so just kind of review do you track the",
    "start": "2220359",
    "end": "2225820"
  },
  {
    "start": "2221000",
    "end": "2665000"
  },
  {
    "text": "database or not I don't think I would even bother the things that are simple add delete",
    "start": "2225820",
    "end": "2232900"
  },
  {
    "text": "save changes I personally wouldn't wouldn't bother it's just not that hard to do find and replace if you want to",
    "start": "2232900",
    "end": "2239440"
  },
  {
    "text": "swap your tooling but more importantly if we are breaking your system into modules where it's easier to upgrade one",
    "start": "2239440",
    "end": "2246940"
  },
  {
    "text": "module at a time I don't think we need so much of that overhead of of the database abstractions that's my thinking",
    "start": "2246940",
    "end": "2254380"
  },
  {
    "text": "about it we'll get into testing in a second too",
    "start": "2254380",
    "end": "2259260"
  },
  {
    "text": "all right um let me gosh it does talks going faster than I thought it",
    "start": "2260020",
    "end": "2266619"
  },
  {
    "text": "would all right one of my claims",
    "start": "2266619",
    "end": "2273180"
  },
  {
    "text": "one of my claims is that if you just use tools that are actually quite nice to",
    "start": "2279760",
    "end": "2284920"
  },
  {
    "text": "use in integration testing yeah not to worry about about coupling so Martin",
    "start": "2284920",
    "end": "2291280"
  },
  {
    "text": "uh Martin is a librarian that let's use postgres is a document database on top of postgres",
    "start": "2291280",
    "end": "2297220"
  },
  {
    "text": "document databases kind of Awesome there's no orm mapping",
    "start": "2297220",
    "end": "2304180"
  },
  {
    "text": "this is a Json serialized version of your data your data can be you can have Rich types it can be nested objects it",
    "start": "2304180",
    "end": "2311980"
  },
  {
    "text": "can have collections it can be all kinds of things it doesn't really matter as long as it's realizable there's very low",
    "start": "2311980",
    "end": "2318220"
  },
  {
    "text": "friction in putting it together all right so in tests",
    "start": "2318220",
    "end": "2323260"
  },
  {
    "text": "let's say uh let me look at the actual Handler here I'm going to build a message Handler",
    "start": "2323260",
    "end": "2331359"
  },
  {
    "text": "um I want to show this message Handler",
    "start": "2331359",
    "end": "2337740"
  },
  {
    "text": "okay um message Handler for withdrawing funds from a bank account",
    "start": "2339040",
    "end": "2344680"
  },
  {
    "text": "a little bit of logic you know we need to look up what's the current account is we need to we're going to execute a",
    "start": "2344680",
    "end": "2351220"
  },
  {
    "text": "command I'm going to use Martin to save data",
    "start": "2351220",
    "end": "2356859"
  },
  {
    "text": "which eventually is all it's here so a little bit of branching logic if the",
    "start": "2356859",
    "end": "2362380"
  },
  {
    "text": "balance is lower than accounts minimal threshold then we're going to raise",
    "start": "2362380",
    "end": "2368320"
  },
  {
    "text": "another low balance see Tech",
    "start": "2368320",
    "end": "2373680"
  },
  {
    "text": "you know for me having a college age College age son you know hey he's his",
    "start": "2376500",
    "end": "2382720"
  },
  {
    "text": "bank account's way too low because he's going out to eat way too much right um that kind of thing so I want to test",
    "start": "2382720",
    "end": "2389079"
  },
  {
    "text": "this this logic and certainly have that this isn't a point where it can be",
    "start": "2389079",
    "end": "2394599"
  },
  {
    "text": "unit tested we'll see just pure pure integration",
    "start": "2394599",
    "end": "2399420"
  },
  {
    "text": "so using tooling that is first integration test",
    "start": "2400060",
    "end": "2405339"
  },
  {
    "text": "friendly so",
    "start": "2405339",
    "end": "2411599"
  },
  {
    "text": "this one's a big thing um Docker for local dependencies and development development time",
    "start": "2413260",
    "end": "2419740"
  },
  {
    "text": "yeah there's quite a few hands so I think that's I think that's been like one of the best",
    "start": "2419740",
    "end": "2424900"
  },
  {
    "text": "things in the last 10 years being able to spin up databases rapid queue little things just on the Fly being able to",
    "start": "2424900",
    "end": "2432520"
  },
  {
    "text": "trash them stand them up whatever it's going to be that's very developer friendly that's integration test",
    "start": "2432520",
    "end": "2438160"
  },
  {
    "text": "friendly in the case of Martin that's all I've done here is I've just spun up a little postgres container",
    "start": "2438160",
    "end": "2444700"
  },
  {
    "text": "um without doing anything else um let's let's look jump into a quick little bit of a test harness",
    "start": "2444700",
    "end": "2451540"
  },
  {
    "text": "um the Cinemax unit mechanics X unit I think is a little awkward for integration",
    "start": "2451540",
    "end": "2457799"
  },
  {
    "text": "um this is uh this is effectively using um web host Builder this is just spinning",
    "start": "2458859",
    "end": "2465160"
  },
  {
    "text": "up the actual application spinning up an eye host using some other tools here doing a",
    "start": "2465160",
    "end": "2472480"
  },
  {
    "text": "little bit of Wolverine stuff and Martin has a feature specifically for integration testing",
    "start": "2472480",
    "end": "2479200"
  },
  {
    "text": "we're going to say if I need some reference data for testing I can just kind of establish a baseline set you",
    "start": "2479200",
    "end": "2485859"
  },
  {
    "text": "always need that kind of thing um just here just so that when we spin this",
    "start": "2485859",
    "end": "2491440"
  },
  {
    "text": "up in tests completely from scratch Martin can fill itself with Baseline reference data so you can go to go to",
    "start": "2491440",
    "end": "2497980"
  },
  {
    "text": "town start working",
    "start": "2497980",
    "end": "2500940"
  },
  {
    "text": "so a shared app fixture that's just standing up our application it's running the I host exactly the way it is it's",
    "start": "2503619",
    "end": "2510280"
  },
  {
    "text": "running our program program.main [Music]",
    "start": "2510280",
    "end": "2515349"
  },
  {
    "text": "so I personally like to do integration testing just take the normal application a little bit stand up it's got Martin in",
    "start": "2516280",
    "end": "2523000"
  },
  {
    "text": "it it's got Wolverine um stand that up in tests so you're",
    "start": "2523000",
    "end": "2528820"
  },
  {
    "text": "using the ioc container built exactly right just some little extra stuff",
    "start": "2528820",
    "end": "2536220"
  },
  {
    "text": "the test itself building the test harness",
    "start": "2536339",
    "end": "2541839"
  },
  {
    "text": "uh to have a clean database per",
    "start": "2541839",
    "end": "2546300"
  },
  {
    "text": "you know this does cut our ability to to parallelize tests but just go with it for now every test for automated tests work you",
    "start": "2547060",
    "end": "2554980"
  },
  {
    "text": "have known input so if it's in this case because it's",
    "start": "2554980",
    "end": "2561400"
  },
  {
    "text": "built into Martin if it's really easy to tear down a database say it and reset it",
    "start": "2561400",
    "end": "2566619"
  },
  {
    "text": "to exactly a known State your tests are more reliable way more reliable than depending on external scripts to set a",
    "start": "2566619",
    "end": "2573880"
  },
  {
    "text": "database up so now let's do a little",
    "start": "2573880",
    "end": "2580440"
  },
  {
    "text": "so now you can finally have a real integration test where I set up well if",
    "start": "2581200",
    "end": "2587380"
  },
  {
    "text": "I have an account and I'm going to write that to the database so it's already there",
    "start": "2587380",
    "end": "2593200"
  },
  {
    "text": "now again this is a little more helping functions around Wolverine and Martin",
    "start": "2593200",
    "end": "2598420"
  },
  {
    "text": "this is its test automation to say all right I'm gonna go invoke this message I don't know wait for all activity to be",
    "start": "2598420",
    "end": "2605380"
  },
  {
    "text": "done so if it spawns extra work wait and finish it and then finally I can go",
    "start": "2605380",
    "end": "2611260"
  },
  {
    "text": "I can go kind of check well I'm just going to load the database and see what database changes were made you know",
    "start": "2611260",
    "end": "2617200"
  },
  {
    "text": "still more work than unit testing but not a huge amount and then I can even track",
    "start": "2617200",
    "end": "2623800"
  },
  {
    "text": "um hey I rigged this up um now we could we could have checked to",
    "start": "2623800",
    "end": "2630520"
  },
  {
    "text": "see if it sent the low balance detected message as necessary",
    "start": "2630520",
    "end": "2636660"
  },
  {
    "text": "all my point there besides sneaking in a little bit of sell job on Martin Wolverine just point there whether it's",
    "start": "2637180",
    "end": "2644700"
  },
  {
    "text": "microservices or something else if we can pick technology that plays nicely an",
    "start": "2644700",
    "end": "2650500"
  },
  {
    "text": "integration test you can go with a much simpler approach you can use you can just use straight up",
    "start": "2650500",
    "end": "2656859"
  },
  {
    "text": "procedural coding as long as",
    "start": "2656859",
    "end": "2660720"
  },
  {
    "text": "so that's integration testing now we talked quite a bit about keeping",
    "start": "2664119",
    "end": "2669339"
  },
  {
    "text": "infrastructure out of the database or excuse me keeping database out of your",
    "start": "2669339",
    "end": "2675040"
  },
  {
    "text": "business logic the go-to move is to wrap wrap info wrap abstractions around the database so you",
    "start": "2675040",
    "end": "2681220"
  },
  {
    "text": "can mod it you can stub it that that is an approached and maybe what you want to do",
    "start": "2681220",
    "end": "2686920"
  },
  {
    "text": "but the biggest thing is um I like what Jim Shore describes as the A-frame architecture",
    "start": "2686920",
    "end": "2693460"
  },
  {
    "text": "uh let me just kind of kind of show an example here we're going to go to Wolf Wolverine",
    "start": "2693460",
    "end": "2700060"
  },
  {
    "text": "so this withdrawal funds Handler this is the message Handler here",
    "start": "2700060",
    "end": "2706420"
  },
  {
    "text": "um this is this is Wolverine Wolverine's trying to embrace this whole idea of A-frame when we were running this the",
    "start": "2706420",
    "end": "2714339"
  },
  {
    "text": "whole process it's actually a compound first um I'm gonna having an incoming command",
    "start": "2714339",
    "end": "2721900"
  },
  {
    "text": "I'm going to go look up the necessary data which this case maybe it's just the account data I'm going to go get the",
    "start": "2721900",
    "end": "2727780"
  },
  {
    "text": "account data and I'm going to push that into the actual message Handler",
    "start": "2727780",
    "end": "2734740"
  },
  {
    "text": "it's not exactly there but you want to put get to the point where the message Handler the place where it's business logic you want to try to make that a",
    "start": "2734740",
    "end": "2741579"
  },
  {
    "text": "pure function here's some inputs tell me what your outputs are which case is mutating the account and",
    "start": "2741579",
    "end": "2751599"
  },
  {
    "text": "then also returning hey these are the next steps I need you to do",
    "start": "2751599",
    "end": "2756880"
  },
  {
    "text": "um being able to test this the business logic by mostly it's not perfect yet",
    "start": "2756880",
    "end": "2762400"
  },
  {
    "text": "because we've still got an eye document session abstraction there but mostly being able to push hey if you have this",
    "start": "2762400",
    "end": "2768280"
  },
  {
    "text": "account and this command what are the responses that you send back out and how",
    "start": "2768280",
    "end": "2774099"
  },
  {
    "text": "do you modify the account taking this a little bit farther hopefully in a month or two there'll be",
    "start": "2774099",
    "end": "2780040"
  },
  {
    "text": "an example of this that doesn't have eye document session in there um being able to accomplish the same thing",
    "start": "2780040",
    "end": "2786700"
  },
  {
    "text": "when when Jim says A-frame what he means is there is some kind of coordinator up",
    "start": "2786700",
    "end": "2792579"
  },
  {
    "text": "top that's talking to both service providers which would be maybe your database and your business logic",
    "start": "2792579",
    "end": "2798700"
  },
  {
    "text": "the controller up top is invoking as necessary it's invoking the infrastructure getting all the data that",
    "start": "2798700",
    "end": "2805000"
  },
  {
    "text": "is necessary for the business logic and then pushing it to the business logic Gathering the results from the business",
    "start": "2805000",
    "end": "2811180"
  },
  {
    "text": "logic and then pushing it back at the infrastructure to make the changes it's just a separation of",
    "start": "2811180",
    "end": "2817420"
  },
  {
    "text": "responsibilities it doesn't automatically imply that you have to have abstractions but still keep the",
    "start": "2817420",
    "end": "2824560"
  },
  {
    "text": "business logic away from your database stuff so",
    "start": "2824560",
    "end": "2831480"
  },
  {
    "text": "the approach trying to take with with Wolverine actually let's make it more fun",
    "start": "2831940",
    "end": "2838900"
  },
  {
    "text": "there's also the ability to do this with middleware",
    "start": "2838900",
    "end": "2843420"
  },
  {
    "text": "trying to build that that whole idea of A-frame architecture completely inside",
    "start": "2844920",
    "end": "2852000"
  },
  {
    "text": "of the message handling framework itself so it's doing much more work to push",
    "start": "2852000",
    "end": "2857079"
  },
  {
    "text": "data to you it's invoking the data and then doing the push trying to drive",
    "start": "2857079",
    "end": "2863440"
  },
  {
    "text": "again to the goal of getting very low ceremony code",
    "start": "2863440",
    "end": "2869319"
  },
  {
    "text": "the theory is well this stuff is a little bit better we probably issue some",
    "start": "2869319",
    "end": "2875079"
  },
  {
    "text": "of the more complicated code format layouts I'm not going to worry about having separate projects for data access",
    "start": "2875079",
    "end": "2881859"
  },
  {
    "text": "this or that I may even embed functionality that is specific to a",
    "start": "2881859",
    "end": "2887920"
  },
  {
    "text": "command I may put the data access itself directly into the message Handler but as",
    "start": "2887920",
    "end": "2893680"
  },
  {
    "text": "a separate function that can be called separately all right this is a theory this is the part where I'm going to start losing",
    "start": "2893680",
    "end": "2899560"
  },
  {
    "text": "people um but this is this is maybe an alternative approach I am interested in",
    "start": "2899560",
    "end": "2905500"
  },
  {
    "text": "exploring over the next couple years um again it's back to the theory keep",
    "start": "2905500",
    "end": "2911740"
  },
  {
    "text": "closely related code together try to enable your developers to make changes in isolation",
    "start": "2911740",
    "end": "2918119"
  },
  {
    "text": "just think about this we're using bed bucket at work a lot of using GitHub when you're reviewing a pull request is",
    "start": "2918119",
    "end": "2925060"
  },
  {
    "text": "it easier when there's a few files changes or is it a little harder to review when you get the",
    "start": "2925060",
    "end": "2931060"
  },
  {
    "text": "shotgun surgery thing where there's a couple lines of code changing in 2030 files",
    "start": "2931060",
    "end": "2937180"
  },
  {
    "text": "maybe that's only my life but that's what I hit and folks I think",
    "start": "2937180",
    "end": "2945460"
  },
  {
    "text": "this first time I've done the talk I did a little bit yesterday um",
    "start": "2945460",
    "end": "2950740"
  },
  {
    "text": "one last thing I want to throw out since we're getting down a little early",
    "start": "2950740",
    "end": "2956920"
  },
  {
    "text": "um this so organizing your code I know one",
    "start": "2956920",
    "end": "2963339"
  },
  {
    "text": "of the first questions people are going to ask is well how do you do your folders now do you do folders by",
    "start": "2963339",
    "end": "2968560"
  },
  {
    "text": "features or whatever it's going to be I'm also going to say I'm talking about",
    "start": "2968560",
    "end": "2974020"
  },
  {
    "text": "it with my my colleagues of work the still going down the approach even doing feature folders by entities by saying",
    "start": "2974020",
    "end": "2981339"
  },
  {
    "text": "all the order operations are going to be here I think because of the way things cross",
    "start": "2981339",
    "end": "2987880"
  },
  {
    "text": "in these cross and operations",
    "start": "2987880",
    "end": "2991500"
  },
  {
    "text": "you want to organize more on operations than you do on a static data Centric",
    "start": "2993220",
    "end": "2998619"
  },
  {
    "text": "model view of your system that's more likely to get you code that's closely related together",
    "start": "2998619",
    "end": "3005359"
  },
  {
    "text": "and enable to keep you from having files to become way too boldly bloated",
    "start": "3005359",
    "end": "3012440"
  },
  {
    "text": "all right folks um on that one so I think you all been to to NDC plenty",
    "start": "3012540",
    "end": "3019200"
  },
  {
    "text": "of times you know how we do how they do the speaker evaluations so today I was purposely trying to joust at some",
    "start": "3019200",
    "end": "3026579"
  },
  {
    "text": "software architecture windmills trying to be provocative this is for the first time ever I was probably actually",
    "start": "3026579",
    "end": "3033180"
  },
  {
    "text": "purposely trying to see if I can collect some red cards at the end of this hey I'm done I'm done speaking after this",
    "start": "3033180",
    "end": "3040220"
  },
  {
    "text": "you want to come argue with me all day long or please don't please don't do Uncle Bob says but um",
    "start": "3040220",
    "end": "3048980"
  },
  {
    "text": "I I am down for it I hope even if you I didn't convince you to do anything differently I hope at least gave you a",
    "start": "3049140",
    "end": "3056819"
  },
  {
    "text": "little bit of understanding of the approaches you're already using maybe some some kind of look ahead of oh",
    "start": "3056819",
    "end": "3062880"
  },
  {
    "text": "here's some potential problems we don't have it yet but maybe we have it later so y'all you have been a great audience",
    "start": "3062880",
    "end": "3068880"
  },
  {
    "text": "thanks for being patient with me coming in a little bit late thank you so much [Applause]",
    "start": "3068880",
    "end": "3079260"
  }
]