[
  {
    "start": "0",
    "end": "250000"
  },
  {
    "text": "hey guys welcome where are we on Friday we are almost at lunchtime so we are we",
    "start": "5540",
    "end": "13820"
  },
  {
    "text": "are desperately close to this time hands up who's coming to PubCon today yes give",
    "start": "13820",
    "end": "19970"
  },
  {
    "text": "yourselves a round of applause it's a it's a fantastic fantastic event we've",
    "start": "19970",
    "end": "26060"
  },
  {
    "text": "got these cool t-shirts that you're gonna be seeing people wearing it's gonna be a lot of fun if you don't have",
    "start": "26060",
    "end": "31310"
  },
  {
    "text": "a ticket yet about one hour ago there were six tickets left so if you're still interested I can't remember which pub",
    "start": "31310",
    "end": "37879"
  },
  {
    "text": "it's at but it's somewhere nearby six tickets get on that now if you if you",
    "start": "37879",
    "end": "43190"
  },
  {
    "text": "want to be coming so we have got a lot of content to cover today so I'm just",
    "start": "43190",
    "end": "50719"
  },
  {
    "text": "gonna jump straight into things from the looks of this picture you can guess what",
    "start": "50719",
    "end": "55850"
  },
  {
    "text": "I like and that's beer my name is Ben who likes beer on Twitter and you can",
    "start": "55850",
    "end": "62030"
  },
  {
    "text": "find it everywhere else like that I run a company called pinch which is the",
    "start": "62030",
    "end": "67400"
  },
  {
    "text": "shirt I'm wearing a little startup out of Brizzy if you're interested in payments if you've heard of stripe if",
    "start": "67400",
    "end": "73010"
  },
  {
    "text": "you're heard of PayPal these kind of things hit me up because we're young we're early were hungry and we're keen to",
    "start": "73010",
    "end": "78590"
  },
  {
    "text": "solve a bunch of problems so let me know about that sir speaking of which the",
    "start": "78590",
    "end": "84230"
  },
  {
    "text": "thing we're doing today is talking about identity server and building AP is for",
    "start": "84230",
    "end": "90170"
  },
  {
    "text": "developers so that you know you're in the right room what we're going to be covering is basically some API design so",
    "start": "90170",
    "end": "97250"
  },
  {
    "text": "we're going to walk through what I consider to be a good design just so we can see what I've got going on and then",
    "start": "97250",
    "end": "102260"
  },
  {
    "text": "the second half of this is going to be adding identity server to protect everything okay and I'm going to show",
    "start": "102260",
    "end": "107900"
  },
  {
    "text": "you a fairly real-world in fact a very very real-world application here okay",
    "start": "107900",
    "end": "114200"
  },
  {
    "text": "this is my actual production code it's what's shipped right now I'm on the master branch you are looking at what is",
    "start": "114200",
    "end": "120440"
  },
  {
    "text": "in prod and therefore if you see maybe a key here are there if you see a secret",
    "start": "120440",
    "end": "127490"
  },
  {
    "text": "if you see something that's not not right be quiet",
    "start": "127490",
    "end": "132890"
  },
  {
    "text": "come tell me come tell me afterwards but basically I also want to start this talk with some",
    "start": "132890",
    "end": "139350"
  },
  {
    "text": "notable news because I don't know whose was in Barry Dorrans talk or asp net",
    "start": "139350",
    "end": "144360"
  },
  {
    "text": "core a few people most of you then you already know that identity server is",
    "start": "144360",
    "end": "151350"
  },
  {
    "text": "going to be integrated directly with asp.net core in the future with 2.2 or",
    "start": "151350",
    "end": "156900"
  },
  {
    "text": "somewhere just after that and this is incredible news because not only is it going to make everything I show you",
    "start": "156900",
    "end": "163530"
  },
  {
    "text": "today redundant almost no I'm kidding no it makes it really simple it's going to make it for the file new people who just",
    "start": "163530",
    "end": "170310"
  },
  {
    "text": "want to get a project up and running they're going to be able to make your tokens and they're going to be able to you know have proper authentication on",
    "start": "170310",
    "end": "176940"
  },
  {
    "text": "their api's right out of the box almost it's going to be a few lines of code so since we've got a lot to look at",
    "start": "176940",
    "end": "184290"
  },
  {
    "text": "today what I'm covering is what you can do right now it's what's in production",
    "start": "184290",
    "end": "189390"
  },
  {
    "text": "and it's a more complex I would say than normal implementation of an identity",
    "start": "189390",
    "end": "196680"
  },
  {
    "text": "server in asp.net core so a quick well",
    "start": "196680",
    "end": "201990"
  },
  {
    "text": "we're gonna go look at the code this whole thing semi codes I have one slide after this so a quick show of hands just",
    "start": "201990",
    "end": "208380"
  },
  {
    "text": "to gauge people's knowledge who is currently using identity server for in a real product ok it's maybe a third maybe",
    "start": "208380",
    "end": "217050"
  },
  {
    "text": "a quarter to a third of the room who has dealt with any version of identity server or a token server of some kind",
    "start": "217050",
    "end": "224720"
  },
  {
    "text": "okay we're looking at more of the room there beautiful and who doesn't know anything about this and is just keen to",
    "start": "224720",
    "end": "232170"
  },
  {
    "text": "find out what's going on ok a massive chunk of the audience as well perfect all right you're all going to get",
    "start": "232170",
    "end": "237990"
  },
  {
    "text": "something out of this talk today because again I'm going to go through some what might be pretty easy and pretty basic",
    "start": "237990",
    "end": "243690"
  },
  {
    "text": "things at the beginning and then we're gonna ramp up and add an add an add until we get to and so we get to the",
    "start": "243690",
    "end": "250380"
  },
  {
    "start": "250000",
    "end": "415000"
  },
  {
    "text": "final product so having said that let's escape out there let's jump into pinch",
    "start": "250380",
    "end": "264480"
  },
  {
    "text": "and let's just quickly is this text size with people at the back can you read",
    "start": "264480",
    "end": "270390"
  },
  {
    "text": "that you want a bit bigger yeah okay I might have to do this a few times but",
    "start": "270390",
    "end": "276749"
  },
  {
    "text": "yeah we'll do something like that yeah no worries guys just give me a yell if",
    "start": "276749",
    "end": "282309"
  },
  {
    "text": "I'm ever looking at something too small so what we're gonna do NII I do apologize but the stuff on the right",
    "start": "282309",
    "end": "288039"
  },
  {
    "text": "it's gonna be a bit small we can zoom into it when we need to so what we're",
    "start": "288039",
    "end": "293049"
  },
  {
    "text": "doing is taking a look at my applications called pinch we've got it's",
    "start": "293049",
    "end": "299469"
  },
  {
    "text": "a it's an asp.net core 2.0 at the moment version running a side entity server for",
    "start": "299469",
    "end": "306849"
  },
  {
    "text": "the on the latest stable and what we're going to look at first and I'll make",
    "start": "306849",
    "end": "314979"
  },
  {
    "text": "this a bit bigger to what we can look at first is the the portal and I just want",
    "start": "314979",
    "end": "322479"
  },
  {
    "text": "to give you an example of what we're going to do is a one request all the way through so and we'll get this up as well",
    "start": "322479",
    "end": "332069"
  },
  {
    "text": "what we're doing today and let's just pick any old thing payers and I'll try and make this a bit bigger what's our",
    "start": "333899",
    "end": "345610"
  },
  {
    "text": "response okay so what we've done is we've got a single page application",
    "start": "345610",
    "end": "353289"
  },
  {
    "text": "it's an angular app for anyone who's interested I'm not really going to dive into client-side stuff today okay this is mainly focusing on the back end in",
    "start": "353289",
    "end": "359319"
  },
  {
    "text": "the api's but if you have questions about that I'm happy to take them at the end and what we've done is we've loaded",
    "start": "359319",
    "end": "364869"
  },
  {
    "text": "up a single page app with authenticated ourselves and we've hit an API endpoint",
    "start": "364869",
    "end": "370239"
  },
  {
    "text": "and we've retrieved some data right so far so good one thing that you should note is that the API that this single",
    "start": "370239",
    "end": "377859"
  },
  {
    "text": "page application is hitting is the very same API they exposed to developers to do to build their products on and this",
    "start": "377859",
    "end": "385029"
  },
  {
    "text": "includes literally every endpoint and I'll show you how you can lock down some of them towards the end and it's it's it",
    "start": "385029",
    "end": "394209"
  },
  {
    "text": "just makes it a lot easier because I've designed at API first I built the API then I built the thing that uses the API and this is a really good way of",
    "start": "394209",
    "end": "401169"
  },
  {
    "text": "building some of your own applications if you're building green fields things at least",
    "start": "401169",
    "end": "406310"
  },
  {
    "text": "and so what we're going to do first is take a look at the API design for how",
    "start": "406310",
    "end": "411560"
  },
  {
    "text": "you know we went and fetch this data and I'm also just gonna flick between that",
    "start": "411560",
    "end": "418160"
  },
  {
    "start": "415000",
    "end": "600000"
  },
  {
    "text": "and notes so I don't miss anything but yeah basically we've just looked at",
    "start": "418160",
    "end": "426850"
  },
  {
    "text": "we've looked at one request I know you know that was just to prove that it actually does stuff but whatever where I",
    "start": "426910",
    "end": "432800"
  },
  {
    "text": "want to start as well bear with me",
    "start": "432800",
    "end": "441590"
  },
  {
    "text": "oh no I hit yes oh well is it developers",
    "start": "441590",
    "end": "448010"
  },
  {
    "text": "guys develop the place I want to the",
    "start": "448010",
    "end": "457190"
  },
  {
    "text": "place I want to start out is basically looking at the the documentation okay and I want to just going to describe how",
    "start": "457190",
    "end": "463790"
  },
  {
    "text": "I've laid out the the API and the reasons for doing so cool little tool by",
    "start": "463790",
    "end": "471920"
  },
  {
    "text": "the way this this documentation rendering things product called readme",
    "start": "471920",
    "end": "478310"
  },
  {
    "text": "i/o it can take in swagger files and it lets you add more documentation to that kind of stuff so a little quick tidbit",
    "start": "478310",
    "end": "483980"
  },
  {
    "text": "there but the way I kind of outline my API is ignoring the authentication for",
    "start": "483980",
    "end": "489770"
  },
  {
    "text": "now is kind of with an entity okay so if",
    "start": "489770",
    "end": "497630"
  },
  {
    "text": "you've been if you've seen anything restful before you'll know that you usually add an entity and then you know you'll use your get and put and post and",
    "start": "497630",
    "end": "505490"
  },
  {
    "text": "delete to go and access those things but if you take a look at my API for things where it's not necessarily straight",
    "start": "505490",
    "end": "510920"
  },
  {
    "text": "forward payers is just API slash payers we can look at the top here API dot get",
    "start": "510920",
    "end": "517789"
  },
  {
    "text": "pinch comdata you slash test so that you know you're hitting the test system slash payers and everything from test",
    "start": "517790",
    "end": "524120"
  },
  {
    "text": "before is like a base URL and then payers onwards is our entity so for getting a payer straightforward get",
    "start": "524120",
    "end": "531080"
  },
  {
    "text": "slash ID you'll get a payer you want to list all the payers it's just slash payers saving a payer",
    "start": "531080",
    "end": "536900"
  },
  {
    "text": "it's a post to slash payers deleting a payer yes there's a delete to",
    "start": "536900",
    "end": "542149"
  },
  {
    "text": "pay a slash ID now this is all very you know that's basics right where I like to get a little bit different is for",
    "start": "542149",
    "end": "550009"
  },
  {
    "text": "example with functions that you want to perform on entities so for example here",
    "start": "550009",
    "end": "555499"
  },
  {
    "text": "I've got payments that need to be executed in real time so credit card payments and so I go payments slash real",
    "start": "555499",
    "end": "562819"
  },
  {
    "text": "time and you'll make a post request to that endpoint so I'm not afraid of tacking on function names to the ends of",
    "start": "562819",
    "end": "569029"
  },
  {
    "text": "these URLs because I think it's the easiest way to to think about it when",
    "start": "569029",
    "end": "574430"
  },
  {
    "text": "you think about what you're trying to achieve so don't be so strict bit to be like okay well I'm gonna go slash",
    "start": "574430",
    "end": "580459"
  },
  {
    "text": "real-time payment slash create you know you don't have to think of it in a crud way it works well for your basics but",
    "start": "580459",
    "end": "586790"
  },
  {
    "text": "don't be afraid to put on function names as well and then for other things I",
    "start": "586790",
    "end": "591829"
  },
  {
    "text": "guess most of these are fairly straightforward just yet gets so it's all just entity based and function name",
    "start": "591829",
    "end": "598970"
  },
  {
    "text": "and what we're gonna do is we're gonna dive into saving a payer for a payment I",
    "start": "598970",
    "end": "604910"
  },
  {
    "start": "600000",
    "end": "900000"
  },
  {
    "text": "believe it was actually so let's quickly bring and let's take a look at our API",
    "start": "604910",
    "end": "613100"
  },
  {
    "text": "project okay so one thing to note here and I'll",
    "start": "613100",
    "end": "622350"
  },
  {
    "text": "go over the I'll go over the solution structure in a minute as well we're just in an asp.net core MVC project okay and",
    "start": "622350",
    "end": "630450"
  },
  {
    "text": "this is my API project what I've got here is a payments controller similar to",
    "start": "630450",
    "end": "637710"
  },
  {
    "text": "other things you'll have seen and again we're just going to start easy and walk through what's happening so what we'll",
    "start": "637710",
    "end": "643920"
  },
  {
    "text": "do is we'll look at the post or the save method here okay so controllers again",
    "start": "643920",
    "end": "654180"
  },
  {
    "text": "they should be relatively thin very you know by the way who he went to Jimmy's",
    "start": "654180",
    "end": "659760"
  },
  {
    "text": "vertical slice architecture talk okay fantastic that's a lot of the room so what you'll see here is this isn't as",
    "start": "659760",
    "end": "667970"
  },
  {
    "text": "this isn't as articulately structured as his stuff it follows it in the same vein",
    "start": "667970",
    "end": "673710"
  },
  {
    "text": "kind of accidentally but a lot of the points I'll be making it roughly the same thing and this is you know one",
    "start": "673710",
    "end": "678990"
  },
  {
    "text": "implementation of a similar architecture that you'll see and so yeah we want our controls to be relatively thin so what",
    "start": "678990",
    "end": "685680"
  },
  {
    "text": "I've got here is the post endpoint when using verbs again this is a more opinionated thing I'm going to use get",
    "start": "685680",
    "end": "692610"
  },
  {
    "text": "I'm going to use post and delete I don't like put instead what I'll do is I'll have a post and if you send me an ID",
    "start": "692610",
    "end": "698760"
  },
  {
    "text": "I'll update it and if you don't send me an ID I'll just create it but what we",
    "start": "698760",
    "end": "705570"
  },
  {
    "text": "have here is the the payment save request and this is a DT or a class that",
    "start": "705570",
    "end": "711420"
  },
  {
    "text": "outlines everything that you're expecting to receive and in similar to Jimmy's thing this is like that request",
    "start": "711420",
    "end": "717090"
  },
  {
    "text": "portion of the architecture and we can have a look at this one here and it's full of simple stuff right you've got",
    "start": "717090",
    "end": "722550"
  },
  {
    "text": "the idea of the payment if you have one you get the payer ID some amounts some dates and some other things okay very",
    "start": "722550",
    "end": "728970"
  },
  {
    "text": "simple we take that in from the body and then we pass it immediately off to this",
    "start": "728970",
    "end": "736110"
  },
  {
    "text": "line 96 here a payment save options now some of you will have used something",
    "start": "736110",
    "end": "742110"
  },
  {
    "text": "like Auto mapper or something like that to do a lot of your left writes and this project I've purposefully left",
    "start": "742110",
    "end": "747510"
  },
  {
    "text": "everything very explicit so you'll see a lot of left right code in here it's just to show off what's",
    "start": "747510",
    "end": "753630"
  },
  {
    "text": "going on and so we take in that payment saver request model and we pass it through to a payment save options model",
    "start": "753630",
    "end": "759660"
  },
  {
    "text": "and this is my kind of internal layer of DT OS okay wherever you see options this",
    "start": "759660",
    "end": "765120"
  },
  {
    "text": "is for the service layer to receive information and the reason I don't share these two models together is because you",
    "start": "765120",
    "end": "771510"
  },
  {
    "text": "can add some special information to your options layer that you really don't want from your request a couple of examples",
    "start": "771510",
    "end": "776940"
  },
  {
    "text": "of this are the user ID so who is making this request and things like IP address and stuff like that you don't want to",
    "start": "776940",
    "end": "782940"
  },
  {
    "text": "ask that from your user you just want to collect it and add it to that service layer and you'll see here I'm passing in",
    "start": "782940",
    "end": "789540"
  },
  {
    "text": "the sir the the sub Merchant ID and we'll go take a look at how that's implemented a little later on when it",
    "start": "789540",
    "end": "794760"
  },
  {
    "text": "makes more sense but you can come in and take a look at your payment save options and these are these are again very",
    "start": "794760",
    "end": "801899"
  },
  {
    "text": "straight forward it's just a sister DTO where we're adding things but then what we're also doing is we're adding fluent",
    "start": "801899",
    "end": "808649"
  },
  {
    "text": "validation and a validation layer to the service layer DT o--'s okay so what",
    "start": "808649",
    "end": "815490"
  },
  {
    "text": "happens here is that I'm just asking for some few basic things who is using or",
    "start": "815490",
    "end": "820830"
  },
  {
    "text": "has used fluent validation before I came out of the room that's good there's",
    "start": "820830",
    "end": "826740"
  },
  {
    "text": "simple things like you know not empty so it's required you can make your own of that it has a minimum payment amount and",
    "start": "826740",
    "end": "833279"
  },
  {
    "text": "I do you know some complex ones like make sure you don't give me anything that's not within the last 30 days",
    "start": "833279",
    "end": "838790"
  },
  {
    "text": "and so my validation will just jump back near to the controller my validation",
    "start": "838790",
    "end": "847740"
  },
  {
    "text": "isn't performed until the service layer so we'll get to that in a second",
    "start": "847740",
    "end": "852990"
  },
  {
    "text": "moving down still in our controller method here I check if the response from",
    "start": "852990",
    "end": "858150"
  },
  {
    "text": "the service layer was successful and if it was what we do is just double check",
    "start": "858150",
    "end": "863430"
  },
  {
    "text": "again whether or not this is a new entity or an existing one by looking to see if we were passed an ID if it is a",
    "start": "863430",
    "end": "870589"
  },
  {
    "text": "an update we'll return okay 200 if it's a creation will return created 201 using",
    "start": "870589",
    "end": "877230"
  },
  {
    "text": "the created at route and if we had a failure we just post back to the error messages that we got from the service layer",
    "start": "877230",
    "end": "884120"
  },
  {
    "text": "okay so the controller really doesn't do anything other than pass data through and then check if it worked and return",
    "start": "884120",
    "end": "889370"
  },
  {
    "text": "the correct response that's its responsibilities and so yes let's take a",
    "start": "889370",
    "end": "900319"
  },
  {
    "start": "900000",
    "end": "1200000"
  },
  {
    "text": "look at projections so you'll notice with our response I've got this thing",
    "start": "900319",
    "end": "907550"
  },
  {
    "text": "here called from entity so one thing that's really important is that you do not return your EF for your entity",
    "start": "907550",
    "end": "914509"
  },
  {
    "text": "framework models back to the client okay they're gonna serialize a bunch of properties that you do not want sent",
    "start": "914509",
    "end": "919759"
  },
  {
    "text": "back so similar to Jimmy's architecture again we have this concept of the response DTO or the response model and",
    "start": "919759",
    "end": "927139"
  },
  {
    "text": "in my case I'm using this from entity so response data is as an EF model and I'm",
    "start": "927139",
    "end": "935660"
  },
  {
    "text": "passing it to the from entity and I'm just gonna jump into this and we'll take a look we'll break it down in a second",
    "start": "935660",
    "end": "941319"
  },
  {
    "text": "so in my domain sort of project my",
    "start": "941319",
    "end": "946970"
  },
  {
    "text": "domain assembly with all my EF models and stuff like that I also keep my d tos in the domain layer as well the response",
    "start": "946970",
    "end": "953749"
  },
  {
    "text": "DT owes do a lot more transformation than the requests ones so you'll see some basic properties like ID amount and",
    "start": "953749",
    "end": "960649"
  },
  {
    "text": "description yada yada yada some things like I want dates to be returned in a specific way so I'll map the data that's",
    "start": "960649",
    "end": "968749"
  },
  {
    "text": "incoming to a private property and then I'll expose a public property which has a response body that transforms that",
    "start": "968749",
    "end": "975439"
  },
  {
    "text": "internal property there so that's how I can control how things go back to the user on a per property basis another",
    "start": "975439",
    "end": "983209"
  },
  {
    "text": "interesting one that I'm a bit opinionated about is how I deal with enums when sending enums down to the",
    "start": "983209",
    "end": "990709"
  },
  {
    "text": "client like so when you put API layer anything you give to the customer that's an enum I want it to be a human friendly",
    "start": "990709",
    "end": "998389"
  },
  {
    "text": "string okay you know snake case so it's got the dashes in it and the way I",
    "start": "998389",
    "end": "1003610"
  },
  {
    "text": "achieve this is using the display property so you can see here for an enum",
    "start": "1003610",
    "end": "1009160"
  },
  {
    "text": "we've got you know scheduled processing dishonored and this one's doesn't have any you know multi-word enums but",
    "start": "1009160",
    "end": "1014980"
  },
  {
    "text": "basically you add the thing that you want to return or you want to pause when you know you want",
    "start": "1014980",
    "end": "1020010"
  },
  {
    "text": "them to give it to you and then use a little handy thing called get display",
    "start": "1020010",
    "end": "1025199"
  },
  {
    "text": "name there's a blog post on how that works but basically that'll grab that display header for you and posit",
    "start": "1025199",
    "end": "1030839"
  },
  {
    "text": "automatically on the way in and render it automatically on the way out so we've",
    "start": "1030839",
    "end": "1035939"
  },
  {
    "text": "got some properties we're matching things here and one of the most important parts about this is the",
    "start": "1035940",
    "end": "1040949"
  },
  {
    "text": "projection stuff who here has used projections by that name I guess maybe",
    "start": "1040949",
    "end": "1046650"
  },
  {
    "text": "you've used it accidentally but whose projections before okay that's probably a quarter of the room projections are",
    "start": "1046650",
    "end": "1052800"
  },
  {
    "text": "really really cool basically what they let you do is represent what you want to transform you're just mapping one class",
    "start": "1052800",
    "end": "1058860"
  },
  {
    "text": "to a different class and if you've used Auto mapper it's it's kind of automatic actually which is fantastic but here's",
    "start": "1058860",
    "end": "1065490"
  },
  {
    "text": "the manual way of doing it we're just mapping one class to another but we're doing it in such a way that it's not it's not executed in real time",
    "start": "1065490",
    "end": "1072750"
  },
  {
    "text": "instead we're describing how we would match one thing to the other and the power of that is that you can infinitely",
    "start": "1072750",
    "end": "1079200"
  },
  {
    "text": "nest these projections so one DTO can have a different DTO that it nests and",
    "start": "1079200",
    "end": "1084480"
  },
  {
    "text": "then that one can protect a different one and you can project collections or single properties and when you pass this",
    "start": "1084480",
    "end": "1091440"
  },
  {
    "text": "all to a link statement or an EF and any framework query it's going to actually",
    "start": "1091440",
    "end": "1097110"
  },
  {
    "text": "you know figure out what you're asking for and write a select statement that has just the fields you've asked for",
    "start": "1097110",
    "end": "1102600"
  },
  {
    "text": "okay so rather than going and getting all the tables bringing it back and then projecting it it sends it and it",
    "start": "1102600",
    "end": "1108480"
  },
  {
    "text": "translates it down into sequel which is fantastic so you've got basic ones like",
    "start": "1108480",
    "end": "1113580"
  },
  {
    "text": "this you know ID and my response is equal to the display ID on my entity and",
    "start": "1113580",
    "end": "1122000"
  },
  {
    "text": "then you've got more complex ones and yeah you know it's real word code when you see stuff like this but basically",
    "start": "1122000",
    "end": "1129030"
  },
  {
    "text": "yes so you can transform this is a little bit hacky but basically you can transfer in certain properties we get a",
    "start": "1129030",
    "end": "1135000"
  },
  {
    "text": "status out and set it as the status some interesting ones here this line the",
    "start": "1135000",
    "end": "1140250"
  },
  {
    "text": "payer property is then just from entity for something else so it's using another",
    "start": "1140250",
    "end": "1145260"
  },
  {
    "text": "nested projection and the attempts is using a projection as well so for single",
    "start": "1145260",
    "end": "1151770"
  },
  {
    "text": "elements you can use from entity and for collections you can pass the projection into a select statement and it will do",
    "start": "1151770",
    "end": "1157980"
  },
  {
    "text": "it for you so yeah project projections are really",
    "start": "1157980",
    "end": "1164010"
  },
  {
    "text": "cool you should definitely I got a blog post on this on a how it like literally exactly it works you can dive into the",
    "start": "1164010",
    "end": "1169140"
  },
  {
    "text": "auto mapper code as well to see it but it's a really good idea to be using projections and yes beautiful okay so",
    "start": "1169140",
    "end": "1178490"
  },
  {
    "text": "we've kind of excuse me we've looked at the controller okay we've got our",
    "start": "1178490",
    "end": "1185970"
  },
  {
    "text": "payment endpoint we have a post method to save the payment it's it's pretty anemic all it does is pass down into the",
    "start": "1185970",
    "end": "1192240"
  },
  {
    "text": "service layer let's go dive into the service layer and take a look at what that looks like so what we have here are",
    "start": "1192240",
    "end": "1200670"
  },
  {
    "start": "1200000",
    "end": "1440000"
  },
  {
    "text": "a few interesting things the service",
    "start": "1200670",
    "end": "1207150"
  },
  {
    "text": "endpoint risk you know receives and options and options class yeah the",
    "start": "1207150",
    "end": "1216390"
  },
  {
    "text": "service endpoint receives an options class that options class then is validated and you can see that on line",
    "start": "1216390",
    "end": "1222020"
  },
  {
    "text": "178 pretty much every options DTO has",
    "start": "1222020",
    "end": "1228000"
  },
  {
    "text": "that validator inside it so we validate first and we check if the the the",
    "start": "1228000",
    "end": "1235950"
  },
  {
    "text": "service layer DTO is correct now what this lets you do is rather than checking properties on the controller",
    "start": "1235950",
    "end": "1241830"
  },
  {
    "text": "level so websites that hit you will get the feedback if you bring it down to the service layer anything that's hitting",
    "start": "1241830",
    "end": "1247590"
  },
  {
    "text": "your service layer can provide that validation feedback so if you've got an IOT device or a console app or anything",
    "start": "1247590",
    "end": "1253680"
  },
  {
    "text": "else that needs to use your service layer it gets the same validation that the api and web sites do so we check",
    "start": "1253680",
    "end": "1260970"
  },
  {
    "text": "that the validation is okay we return the error messages if it's not something really important to look at here is",
    "start": "1260970",
    "end": "1266760"
  },
  {
    "text": "probably the service response so the service response class is a predictable",
    "start": "1266760",
    "end": "1273060"
  },
  {
    "text": "way of always traversing the layers of your services and having you know",
    "start": "1273060",
    "end": "1278310"
  },
  {
    "text": "success notifications and error messages bubbled up properly okay so rather than using exception",
    "start": "1278310",
    "end": "1283559"
  },
  {
    "text": "which I don't like doing I don't mind that it's a bit slow I just find it a bit awkward to use instead I'll have a",
    "start": "1283559",
    "end": "1289950"
  },
  {
    "text": "service response and a service response of tea the service response holds things",
    "start": "1289950",
    "end": "1295289"
  },
  {
    "text": "such as a list of the error messages and I use the validation failure message",
    "start": "1295289",
    "end": "1301230"
  },
  {
    "text": "everywhere so if you're using fluent validation you can just copy the array of error messages and dump it straight in the service response if you have your",
    "start": "1301230",
    "end": "1308159"
  },
  {
    "text": "own failures you can just go new validation failure and add your own successful it's just if there's any",
    "start": "1308159",
    "end": "1314789"
  },
  {
    "text": "error messages so you don't have to keep setting successful true everywhere and then yeah if if that particular service",
    "start": "1314789",
    "end": "1321629"
  },
  {
    "text": "call you're making needs to return data you've got service responsive tea to return that data and this is a fantastic",
    "start": "1321629",
    "end": "1327330"
  },
  {
    "text": "way to infinitely nest services if you need to I wouldn't do it too far down but one service can call another can",
    "start": "1327330",
    "end": "1333779"
  },
  {
    "text": "call another and errors will be bubbled up correctly and even there's like a created service response as well so you",
    "start": "1333779",
    "end": "1340110"
  },
  {
    "text": "can include things like ID but yeah so service response you'll see every every",
    "start": "1340110",
    "end": "1345869"
  },
  {
    "text": "method in the services layer has a service response and then we'll come down and we'll we'll do a few things",
    "start": "1345869",
    "end": "1351350"
  },
  {
    "text": "something that's important and might trap people out is that you've got to validate that the who the user that's",
    "start": "1351350",
    "end": "1358110"
  },
  {
    "text": "you know calling this is the correct thing so for me it's the sub merchant that gets passed in that's the user",
    "start": "1358110",
    "end": "1364639"
  },
  {
    "text": "always validate your users and the second interesting thing you might see around the place is this concept of",
    "start": "1364639",
    "end": "1369809"
  },
  {
    "text": "display ID okay and so rather than exposing the actual primary keys of",
    "start": "1369809",
    "end": "1376139"
  },
  {
    "text": "everything around the place whenever you see a an entity or any kind of object",
    "start": "1376139",
    "end": "1383429"
  },
  {
    "text": "get pumped down to the to the user it's always going to be a string like this so it's got a little prefix at the front to",
    "start": "1383429",
    "end": "1388860"
  },
  {
    "text": "let me know what type of entity it is it's got a random string okay and all the URLs if you ever navigate anywhere",
    "start": "1388860",
    "end": "1395100"
  },
  {
    "text": "up the top here is is going to be that payer ID or without entity and that's",
    "start": "1395100",
    "end": "1400110"
  },
  {
    "text": "just it's non-sequential it's just up people just going oh I'm user - am I let's try user 3 ok it stops people",
    "start": "1400110",
    "end": "1406980"
  },
  {
    "text": "doing that especially when you need to expose some of these anonymously as well",
    "start": "1406980",
    "end": "1412259"
  },
  {
    "text": "you need to get payers to go land on the page they don't use the system but they need to use that so that helps as well so I've got the",
    "start": "1412259",
    "end": "1418539"
  },
  {
    "text": "display ID for every entity that's public and you'll see that in a minute as well I mean most of this is fairly",
    "start": "1418539",
    "end": "1423760"
  },
  {
    "text": "simple we're just updating a payer pull it out of the database it is a bit more business logic in here but I'm not going",
    "start": "1423760",
    "end": "1429700"
  },
  {
    "text": "to subject you to that we'll jump straight down to the up the create one",
    "start": "1429700",
    "end": "1437850"
  },
  {
    "text": "so creating a payment I've got a shortcode service and here's actually a really important tidbit who's using like",
    "start": "1437850",
    "end": "1444429"
  },
  {
    "start": "1440000",
    "end": "1555000"
  },
  {
    "text": "math dot random to generate random stuff in their projects okay a few of you",
    "start": "1444429",
    "end": "1450429"
  },
  {
    "text": "who's aware that it's not thread safe yeah exactly so one important tidbit",
    "start": "1450429",
    "end": "1457029"
  },
  {
    "text": "I'll just I'll share this with everyone because it's super important random is not safe to use as soon as you do any",
    "start": "1457029",
    "end": "1463120"
  },
  {
    "text": "kind of load testing you'll find out that oh all of my payers that I've just created have the same exact random",
    "start": "1463120",
    "end": "1468940"
  },
  {
    "text": "string as their ID so what you have to do then is kind of pull out random and I",
    "start": "1468940",
    "end": "1475990"
  },
  {
    "text": "just show you the random service because I think it's important I'll run this you",
    "start": "1475990",
    "end": "1482230"
  },
  {
    "text": "know you'll be a post this code later in particular actually I think it got a blog post on it but basically you need",
    "start": "1482230",
    "end": "1488380"
  },
  {
    "text": "to take care of a few collision points because the the random object uses like",
    "start": "1488380",
    "end": "1494830"
  },
  {
    "text": "the current tick the current time basically to decide it's seed but if you",
    "start": "1494830",
    "end": "1499960"
  },
  {
    "text": "have multiple threads running at the same time it will break each other if you have multiple instances happening to",
    "start": "1499960",
    "end": "1507309"
  },
  {
    "text": "be running at the same time they will collide so you need a truly unique seed for every random and one of the ways",
    "start": "1507309",
    "end": "1514870"
  },
  {
    "text": "that was suggested to me is take a look at basically the machine name or the",
    "start": "1514870",
    "end": "1520510"
  },
  {
    "text": "azure environment name tag that with the current manage thread ID tag that with the current time and then use this",
    "start": "1520510",
    "end": "1528240"
  },
  {
    "text": "thread safe interlocked increment to make sure that each seed for each",
    "start": "1528240",
    "end": "1533980"
  },
  {
    "text": "instance of the random service on the thread and the process sorry is unique",
    "start": "1533980",
    "end": "1539700"
  },
  {
    "text": "I'll post this later because it's difficult to digest at the moment but you just need to be aware that random",
    "start": "1539700",
    "end": "1546340"
  },
  {
    "text": "isn't safe and if you're generating random strings you know load test is the easiest way to find out that you've got collisions yeah",
    "start": "1546340",
    "end": "1556270"
  },
  {
    "start": "1555000",
    "end": "1612000"
  },
  {
    "text": "so I'm generating IDs generating this kind of stuff we throw it straight into EF who's using structured logging any",
    "start": "1556270",
    "end": "1563230"
  },
  {
    "text": "kind of structured logging beautiful who's using Cerie log and seek you beauty it's a truly fantastic tool I",
    "start": "1563230",
    "end": "1570400"
  },
  {
    "text": "highly suggest you go check it out if you haven't already for anything that goes wrong I mean you can just jump into your local instance of it",
    "start": "1570400",
    "end": "1577210"
  },
  {
    "text": "I can't imagine coding without this kind of stuff now I can just see what's going on and I've created some test payers and",
    "start": "1577210",
    "end": "1582760"
  },
  {
    "text": "I've got the you know the data that I pushed in I can see how long everything takes and then I can go you know what's",
    "start": "1582760",
    "end": "1589930"
  },
  {
    "text": "the is it the mean of the you know elapsed time or something like that and",
    "start": "1589930",
    "end": "1596970"
  },
  {
    "text": "do calculations like this and it obviously isn't going to work now but",
    "start": "1596970",
    "end": "1602700"
  },
  {
    "text": "structured log is fantastic and see objects that are in the in the database you can log all the things that come in and out of the service layer fantastic",
    "start": "1602700",
    "end": "1609280"
  },
  {
    "text": "bit of kit highly recommend and yeah basically so that's the service layer",
    "start": "1609280",
    "end": "1615910"
  },
  {
    "start": "1612000",
    "end": "1660000"
  },
  {
    "text": "let me just check out me missed anything validation yeah exposing error messages is important I guess as well",
    "start": "1615910",
    "end": "1622710"
  },
  {
    "text": "be wary of what gets bubbled up through the service layer so if you're if you've",
    "start": "1622710",
    "end": "1629080"
  },
  {
    "text": "got validation messages you can just plug them all the way back up but anything you put in the service response consider that it will be viewed by the",
    "start": "1629080",
    "end": "1635530"
  },
  {
    "text": "user okay don't put internal dev system bits into your validation messages because yeah",
    "start": "1635530",
    "end": "1642010"
  },
  {
    "text": "they assume they get bubbled and kind of separate them out from your system",
    "start": "1642010",
    "end": "1648610"
  },
  {
    "text": "logging use this system logging so your logger to make the private bits and then use the validation to surface what happened we've gone through random",
    "start": "1648610",
    "end": "1655780"
  },
  {
    "text": "service not throwing that kind of stuff beautiful all right so that's basically",
    "start": "1655780",
    "end": "1661300"
  },
  {
    "start": "1660000",
    "end": "1852000"
  },
  {
    "text": "the way I do ap is just at this point is there any questions about that API",
    "start": "1661300",
    "end": "1666550"
  },
  {
    "text": "structure or anything like that anything amiss it's very kind of straightforward what we're gonna do perfect what we're",
    "start": "1666550",
    "end": "1673510"
  },
  {
    "text": "going to do is jump into identity server stuff now so pretty much let me start",
    "start": "1673510",
    "end": "1679240"
  },
  {
    "text": "out by taking a look at the go away taking with",
    "start": "1679240",
    "end": "1689790"
  },
  {
    "text": "the this solution architecture so what I have at the moment is a an API layer and",
    "start": "1689790",
    "end": "1699270"
  },
  {
    "text": "a asp.net MVC core API layer I have an asp.net MVC core authentication website",
    "start": "1699270",
    "end": "1705480"
  },
  {
    "text": "and that's where I'm going to be putting identity server that's worth here I've",
    "start": "1705480",
    "end": "1710520"
  },
  {
    "text": "got a few things that we've kind of touched on data is the entity framework implementation stuff domain is where I",
    "start": "1710520",
    "end": "1717240"
  },
  {
    "text": "hold all my entities and D tos and models and classes and stuff like that there's a few other unimportant things",
    "start": "1717240",
    "end": "1723690"
  },
  {
    "text": "until we get down to web really services I've got all my services in the service layer again talking to Jimmy about this",
    "start": "1723690",
    "end": "1730620"
  },
  {
    "text": "vertical architecture stuff it's a good idea to structure your services in a way that's thinking about functionality and",
    "start": "1730620",
    "end": "1735990"
  },
  {
    "text": "not about entity but I've got a bit of a mishmash of both and then finally web",
    "start": "1735990",
    "end": "1741660"
  },
  {
    "text": "now webs interesting webs the portal we were looking at before and it is an asp.net core MVC web site but all it",
    "start": "1741660",
    "end": "1748440"
  },
  {
    "text": "does is spin up an angular website as well so it's an angular front-end and basically that angular front-end is",
    "start": "1748440",
    "end": "1754680"
  },
  {
    "text": "authenticated by the auth website and then it talks to the API and so what",
    "start": "1754680",
    "end": "1761040"
  },
  {
    "text": "we're going to do now is just jump into the auth if I don't screw myself up here",
    "start": "1761040",
    "end": "1768710"
  },
  {
    "text": "okay so the goal is we have got our API",
    "start": "1769070",
    "end": "1781290"
  },
  {
    "text": "and we've taken a look at the payment endpoint we've got a an angular website what we",
    "start": "1781290",
    "end": "1787170"
  },
  {
    "text": "want to do now is let our developers go and use our API okay and the thing we",
    "start": "1787170",
    "end": "1794490"
  },
  {
    "text": "need to start with is all right how do we validate who's who and so one thing",
    "start": "1794490",
    "end": "1800190"
  },
  {
    "text": "you'll see in a lot of products is they'll generate you a bunch of keys now I've we'll focus on the development keys",
    "start": "1800190",
    "end": "1806040"
  },
  {
    "text": "here I have generated a merchant ID for each merchant or user in my system I've",
    "start": "1806040",
    "end": "1812550"
  },
  {
    "text": "got a secret key and I've got a publishable key okay so you would use your Merchant ID and your secret key to",
    "start": "1812550",
    "end": "1818619"
  },
  {
    "text": "talk server-to-server okay that's who you that's how you prove who you are they used a publishable key",
    "start": "1818619",
    "end": "1823840"
  },
  {
    "text": "to put on is really just an identifier on to anything that's public so that publishable key you can throw onto a",
    "start": "1823840",
    "end": "1830409"
  },
  {
    "text": "script tag on your website just to pop up your little face it's embeddable it's shareable it's just",
    "start": "1830409",
    "end": "1836259"
  },
  {
    "text": "an identifier but the secret key is secret to do not share that and what",
    "start": "1836259",
    "end": "1842019"
  },
  {
    "text": "we'll do with the secret key is take a look at our authentication server so",
    "start": "1842019",
    "end": "1851919"
  },
  {
    "text": "what I want to do is kind of start off I guess one of the questions here is who's using asp.net identity just the straight",
    "start": "1851919",
    "end": "1860109"
  },
  {
    "start": "1852000",
    "end": "1887000"
  },
  {
    "text": "username password storage facility with dotnet core only a few of you okay so one of the one of the things I'll start",
    "start": "1860109",
    "end": "1866979"
  },
  {
    "text": "off then is by just taking a look at some familiar code in the startup class of our net core everyone's familiar with",
    "start": "1866979",
    "end": "1873190"
  },
  {
    "text": "dotnet core who isn't I guess is the best way to do this a couple front ok",
    "start": "1873190",
    "end": "1878979"
  },
  {
    "text": "cool we're just setting up some services at the moment so it shouldn't be",
    "start": "1878979",
    "end": "1884109"
  },
  {
    "text": "anything too strange hopefully so I'm gonna skip through a bunch of this code I'm gonna go straight to identity",
    "start": "1884109",
    "end": "1891089"
  },
  {
    "start": "1887000",
    "end": "1951000"
  },
  {
    "text": "now this is not identity server this is asp.net identity its purpose is to save",
    "start": "1891089",
    "end": "1897609"
  },
  {
    "text": "usernames and passwords basically and identify users so you've got some you can see some stuff here where we've",
    "start": "1897609",
    "end": "1903849"
  },
  {
    "text": "basically removed a lot of the password validation stuff for demos and we're",
    "start": "1903849",
    "end": "1908859"
  },
  {
    "text": "talking to entity framework so we're just connecting entity frameworks you know identity straight to energy framework so it knows what tables to",
    "start": "1908859",
    "end": "1915369"
  },
  {
    "text": "store everything in and we're adding the default token providers so it can generate some data for us we add MVC and",
    "start": "1915369",
    "end": "1922330"
  },
  {
    "text": "and then there's nothing really too too strange about this particular part here Oh actually one tidbit if you're running",
    "start": "1922330",
    "end": "1929879"
  },
  {
    "text": "localhost locally it's good idea to pull out the ssl port and pass it to NBC though this",
    "start": "1929879",
    "end": "1934960"
  },
  {
    "text": "is gonna change in 2.2 I think 2.1 where everything's https by default okay so",
    "start": "1934960",
    "end": "1944859"
  },
  {
    "text": "we've taken a look yeah yeah it's a good idea taking a look",
    "start": "1944859",
    "end": "1952000"
  },
  {
    "start": "1951000",
    "end": "2103000"
  },
  {
    "text": "at identity what I want to do just for context is also show you the user classes and how I'm storing those keys",
    "start": "1952000",
    "end": "1957490"
  },
  {
    "text": "that I showed you before so taking a look at a user for me if you've used asp.net identity the way",
    "start": "1957490",
    "end": "1965200"
  },
  {
    "text": "that it's all automatically hooked up is by inheriting from this identity user okay if as long as you're in hearing",
    "start": "1965200",
    "end": "1970690"
  },
  {
    "text": "from this the user and all its properties will be saved to the database correctly and whenever a user logs in you'll get all that information back",
    "start": "1970690",
    "end": "1977080"
  },
  {
    "text": "automatically the extra properties I've chosen to add to my user is the concept",
    "start": "1977080",
    "end": "1982690"
  },
  {
    "text": "of a merchant this is like the idea of like a company or an organization or group or something like that so each",
    "start": "1982690",
    "end": "1988950"
  },
  {
    "text": "merchant can have several users they don't at the moment but that's kind of the idea if we take a look at a merchant",
    "start": "1988950",
    "end": "1996720"
  },
  {
    "text": "we'll see some familiar some familiar properties when we get down to it we've",
    "start": "1996720",
    "end": "2005820"
  },
  {
    "text": "got our test secret key our live secret key and our test publishable keys and life publishable keys these are just",
    "start": "2005820",
    "end": "2011370"
  },
  {
    "text": "auto-generated on creation and you can rotate them if you want but these are just properties stored against the merchant okay nothing special just some",
    "start": "2011370",
    "end": "2018210"
  },
  {
    "text": "strings and basically from there yeah",
    "start": "2018210",
    "end": "2026870"
  },
  {
    "text": "we've got we've got our strings and I guess the the interesting thing here is that when it comes to standard you know",
    "start": "2026870",
    "end": "2036900"
  },
  {
    "text": "standard logins so the the the website the Embassy website case of ok I want to",
    "start": "2036900",
    "end": "2041970"
  },
  {
    "text": "identify a user we're using identity we just go and plug in a username and",
    "start": "2041970",
    "end": "2047430"
  },
  {
    "text": "password and it redirects us to the the website and we're logged in ok so that's",
    "start": "2047430",
    "end": "2054330"
  },
  {
    "text": "how we do asp.net Dental asp.net MVC websites what we're interested now is",
    "start": "2054330",
    "end": "2059850"
  },
  {
    "text": "saying right how do we prove who the user is logged in as and how do we",
    "start": "2059850",
    "end": "2065010"
  },
  {
    "text": "protect our API using bearer authentication and identity server so to",
    "start": "2065010",
    "end": "2071060"
  },
  {
    "text": "do that what we are going to do is take a look at it from thee I'll just bump up",
    "start": "2071060",
    "end": "2078030"
  },
  {
    "text": "the text size as well we're gonna take a look at this from the users perspective okay so just as",
    "start": "2078030",
    "end": "2084090"
  },
  {
    "text": "important as building the the API protection is building an easy way for",
    "start": "2084090",
    "end": "2089100"
  },
  {
    "text": "your users to connect to your API and so SDK creation could be a whole talk in",
    "start": "2089100",
    "end": "2094200"
  },
  {
    "text": "itself but what I'm going to do is just show you a couple of interesting parts about this and I'll just double check",
    "start": "2094200",
    "end": "2100080"
  },
  {
    "text": "what we want to get into yeah so let's take a look at the payment controller I",
    "start": "2100080",
    "end": "2109440"
  },
  {
    "start": "2103000",
    "end": "2141000"
  },
  {
    "text": "guess I have an SDK with like a web sample and so what we're looking at here",
    "start": "2109440",
    "end": "2114960"
  },
  {
    "text": "is an example of how a customer would use my SDK to connect to the product and",
    "start": "2114960",
    "end": "2121320"
  },
  {
    "text": "it should be as easy as this we go okay for whatever particular endpoint where",
    "start": "2121320",
    "end": "2126660"
  },
  {
    "text": "you want to hit we'll go to payment so get API and you can see what endpoints",
    "start": "2126660",
    "end": "2132060"
  },
  {
    "text": "we have when it loads up it's probably a bit small but there's the different endpoints we have we're choosing payment",
    "start": "2132060",
    "end": "2138720"
  },
  {
    "text": "we're going to go execute real time so there's a few important parts here let's dig in to get API first and this is",
    "start": "2138720",
    "end": "2145710"
  },
  {
    "start": "2141000",
    "end": "2181000"
  },
  {
    "text": "going to get a bit mind-bending but get API is just getting an instance of our SDK for you basically this is going to",
    "start": "2145710",
    "end": "2152580"
  },
  {
    "text": "handle the storage of tokens and going back and forth so what we want to do is",
    "start": "2152580",
    "end": "2158160"
  },
  {
    "text": "return a new API given our merchant ID at our secret key",
    "start": "2158160",
    "end": "2163530"
  },
  {
    "text": "that we that I showed you in the portal just before okay there's a few other interesting properties probably is live",
    "start": "2163530",
    "end": "2169470"
  },
  {
    "text": "is the only other one that's interesting is whether or not you want this to hit the test system or the production system",
    "start": "2169470",
    "end": "2174810"
  },
  {
    "text": "excuse me but if we delve into this pinch API there's a few kind of",
    "start": "2174810",
    "end": "2182040"
  },
  {
    "start": "2181000",
    "end": "2215000"
  },
  {
    "text": "interesting bits but basically the yeah there's an HTTP client factory as well",
    "start": "2182040",
    "end": "2187890"
  },
  {
    "text": "in Henoko 2.1 i think it is they've actually solved the HTTP client problems",
    "start": "2187890",
    "end": "2193050"
  },
  {
    "text": "that you that we've had recently and the way that you handle HTTP clients but",
    "start": "2193050",
    "end": "2198150"
  },
  {
    "text": "really all we're doing is is setting some properties including yeah our keys",
    "start": "2198150",
    "end": "2203490"
  },
  {
    "text": "I'm actually going to jump back out I'm going to show you where",
    "start": "2203490",
    "end": "2211280"
  },
  {
    "text": "the actual stuff happens okay so given an instance of our SDK we want to hit a",
    "start": "2211700",
    "end": "2219650"
  },
  {
    "start": "2215000",
    "end": "2259000"
  },
  {
    "text": "particular endpoint and you'll start to see a pattern as we dive down into this particular code execute real time is",
    "start": "2219650",
    "end": "2227000"
  },
  {
    "text": "basically just making a post HTTP HTTP request to payments slash real time given some data okay and the data that",
    "start": "2227000",
    "end": "2234859"
  },
  {
    "text": "we want back is payment detailed and the data that we were given is real-time payment save options if we dealt oh and",
    "start": "2234859",
    "end": "2241490"
  },
  {
    "text": "you'll see API response which is very similar to the service response in our service layer kind of same idea but lets",
    "start": "2241490",
    "end": "2246530"
  },
  {
    "text": "you bubble up errors if you dig into the post HTTP method and I'm gonna go to",
    "start": "2246530",
    "end": "2253130"
  },
  {
    "text": "this guy you'll see that this one",
    "start": "2253130",
    "end": "2261250"
  },
  {
    "start": "2259000",
    "end": "2303000"
  },
  {
    "text": "basically abstracts things for us it's accepting any URL and any object is data",
    "start": "2261250",
    "end": "2267920"
  },
  {
    "text": "and it's going and it's creating a lambda function here that is building up",
    "start": "2267920",
    "end": "2273049"
  },
  {
    "text": "our request so you can see we're going basically lambda and we're building up a",
    "start": "2273049",
    "end": "2278390"
  },
  {
    "text": "new HTTP request message in this case it's a post given the base URI and the",
    "start": "2278390",
    "end": "2284089"
  },
  {
    "text": "URL we want to hit and we're accepting some JSON body data now and you'll see",
    "start": "2284089",
    "end": "2289910"
  },
  {
    "text": "that the other posts are the same and get and stuff like that and there's stuff in there for files they all hit this send HTTP method which if we go to",
    "start": "2289910",
    "end": "2297880"
  },
  {
    "text": "this guy what this does is it actually",
    "start": "2297880",
    "end": "2307990"
  },
  {
    "text": "requests an instance of the message so line 90 it requests it executed that",
    "start": "2307990",
    "end": "2314540"
  },
  {
    "text": "function that lambda we passed it to pull out the request that we're going to make it goes a heads and it sets the",
    "start": "2314540",
    "end": "2320030"
  },
  {
    "text": "authentication header and in our case that's the bearer authentication we can",
    "start": "2320030",
    "end": "2325130"
  },
  {
    "text": "dive into that as well let's let's get deep let's get real deep the way it does this is it asks to get an access token",
    "start": "2325130",
    "end": "2332930"
  },
  {
    "text": "and this part will go look at at the end but assume that we can get a token it",
    "start": "2332930",
    "end": "2338569"
  },
  {
    "text": "adds that as a JWT or 'the header which is basically just bearer and we'll dive even deeper",
    "start": "2338569",
    "end": "2344520"
  },
  {
    "text": "which is just bearer space and then token and that's on the authorization",
    "start": "2344520",
    "end": "2349940"
  },
  {
    "text": "header and that's set there so we've got our token we've added it there we'll",
    "start": "2349940",
    "end": "2355200"
  },
  {
    "text": "jump back out it adds some other things but we've set the author header back in our send HTTP what it's going to do is",
    "start": "2355200",
    "end": "2361890"
  },
  {
    "text": "it's going to send that request it's going to check if that request was unauthorized if it was unauthorized we",
    "start": "2361890",
    "end": "2368880"
  },
  {
    "text": "have an automatic retry built in what we'll do is we'll request a new instance of that HTT message because you can't",
    "start": "2368880",
    "end": "2374670"
  },
  {
    "text": "reuse them so that's why we had the lambda there so we can keep getting as many of those as we need we'll reset the",
    "start": "2374670",
    "end": "2381060"
  },
  {
    "text": "author header this time with renew to true so it's not going to use the case token that we have in memory it's going",
    "start": "2381060",
    "end": "2386550"
  },
  {
    "text": "to go and ask for a new one and this time it will run the request and if that fails with authorize then you know we",
    "start": "2386550",
    "end": "2393090"
  },
  {
    "text": "give up we only have a one hit unauthorized test there but basically that is how it has unauthorized retry",
    "start": "2393090",
    "end": "2402000"
  },
  {
    "text": "and it's how it gets the token and puts it rather it's how it's set to the header what we're interested now is how",
    "start": "2402000",
    "end": "2407700"
  },
  {
    "text": "do we get that token so and I apologize for jumping around a bit here but",
    "start": "2407700",
    "end": "2412980"
  },
  {
    "text": "basically up in our instance of the SDK we have a method that understands how to",
    "start": "2412980",
    "end": "2418080"
  },
  {
    "text": "get the token so we'll just go down to the bottom here it's called get access",
    "start": "2418080",
    "end": "2423270"
  },
  {
    "text": "token very very descriptive so basically if we have an access token in memory",
    "start": "2423270",
    "end": "2428910"
  },
  {
    "text": "already it'll just return that if we set the renew flag to true then it's going",
    "start": "2428910",
    "end": "2434250"
  },
  {
    "text": "to automatically whether it's going to go and request and yuuri fokin an access",
    "start": "2434250",
    "end": "2439260"
  },
  {
    "text": "token there are two ways that you can get an access token I'm going to be looking at the secret key way and you'll",
    "start": "2439260",
    "end": "2446490"
  },
  {
    "text": "see here that we've got the client ID and the secret key this is our merchant ID and secret key when use these two",
    "start": "2446490",
    "end": "2452580"
  },
  {
    "text": "pieces of information to request an access token ignore the other one for now so",
    "start": "2452580",
    "end": "2462560"
  },
  {
    "text": "oops just took it from secret key there",
    "start": "2462560",
    "end": "2469710"
  },
  {
    "text": "we go okay now we're into it so what",
    "start": "2469710",
    "end": "2474990"
  },
  {
    "text": "we're doing here is spinning up a new HTTP client we're setting our author",
    "start": "2474990",
    "end": "2481740"
  },
  {
    "text": "headers for our this request to basic authentication okay and all this is doing as its setting our username as",
    "start": "2481740",
    "end": "2489420"
  },
  {
    "text": "merchant ID and it's setting our password as secret key wrapping that up into a base of dedication a basic",
    "start": "2489420",
    "end": "2495600"
  },
  {
    "text": "authentication header and sending that off to the token endpoint this is identity servers token endpoint we set a",
    "start": "2495600",
    "end": "2503609"
  },
  {
    "text": "few parameters that we just need to set this is in the documentation so don't worry about remembering it and then we",
    "start": "2503609",
    "end": "2510210"
  },
  {
    "text": "hit connect slash token we hit connect",
    "start": "2510210",
    "end": "2515790"
  },
  {
    "start": "2515000",
    "end": "2745000"
  },
  {
    "text": "such token given that information and then in the response that comes back is",
    "start": "2515790",
    "end": "2522119"
  },
  {
    "text": "our access token so basically authentication to retrieve an access token and there in that access",
    "start": "2522119",
    "end": "2527910"
  },
  {
    "text": "token we can then add that to our API calls and then that's how the bear",
    "start": "2527910",
    "end": "2534330"
  },
  {
    "text": "authentication is completed so this is kind of what it looks like from the users side okay and the good thing about",
    "start": "2534330",
    "end": "2541470"
  },
  {
    "text": "having an SDK again is if we come back to the payments controller they don't have to care they just go hey get me an",
    "start": "2541470",
    "end": "2548580"
  },
  {
    "text": "API it's got this secret key in this merchants ID okay it's really easy for the user even though it's quite complex",
    "start": "2548580",
    "end": "2554550"
  },
  {
    "text": "for you to build and then one thing you may not know is that when we hit any",
    "start": "2554550",
    "end": "2562740"
  },
  {
    "text": "endpoint well when we even load up the site you can actually get access to this",
    "start": "2562740",
    "end": "2569580"
  },
  {
    "text": "token I mean I'm publishing it so you can see it and inside it you can go to a",
    "start": "2569580",
    "end": "2579480"
  },
  {
    "text": "website called JWT io and what this will let you do is it'll let you read the",
    "start": "2579480",
    "end": "2586770"
  },
  {
    "text": "information and I'll make this bigger it'll let you read the information that's contained in the token okay so",
    "start": "2586770",
    "end": "2593880"
  },
  {
    "text": "I've got things such as and we'll just come up a little bit here and you can even hover over it and it'll",
    "start": "2593880",
    "end": "2599849"
  },
  {
    "text": "tell you what it's about so mbf is not valid before expiration date the issuer who created the token",
    "start": "2599849",
    "end": "2605729"
  },
  {
    "text": "and in that case it's my local identity server who's the audience that's the API",
    "start": "2605729",
    "end": "2611180"
  },
  {
    "text": "who's the client in this case it's my portal pinch web the sub is the username",
    "start": "2611180",
    "end": "2616769"
  },
  {
    "text": "so the logged in user and that's just the keyword from asp.net identity I've",
    "start": "2616769",
    "end": "2621869"
  },
  {
    "text": "got a couple of things in here like submerged an ID one and two that's just so I don't have to go looking it up in the database every single time it saves me database calls",
    "start": "2621869",
    "end": "2628759"
  },
  {
    "text": "we've got the merchant ID and we've got the Scopes that it's allowed to get and you'll notice here one of them is",
    "start": "2628759",
    "end": "2634589"
  },
  {
    "text": "merchants API keys just keep your eye on that one but yeah so that's kind of what",
    "start": "2634589",
    "end": "2641999"
  },
  {
    "text": "it looks like from the from the users point of view what we're going to do now is show you how to get identity server",
    "start": "2641999",
    "end": "2647640"
  },
  {
    "text": "installed into your authentication project now the first thing you want to do is take a look at the QuickStart so I",
    "start": "2647640",
    "end": "2654539"
  },
  {
    "text": "want to forgot them in my yep there are some great sample documentation for",
    "start": "2654539",
    "end": "2662460"
  },
  {
    "text": "identity server for this the one a specifically recommend you take a look at is the combined asp.net identity and",
    "start": "2662460",
    "end": "2672299"
  },
  {
    "text": "entity framework storage QuickStart this is you can clone this repository and you can take a look at how everything works",
    "start": "2672299",
    "end": "2678450"
  },
  {
    "text": "and how it's all hooked together it's a really really good place to start what I'm gonna do now is walk you through",
    "start": "2678450",
    "end": "2683549"
  },
  {
    "text": "that anyway and what I've got so let's take a look at that so what we're doing",
    "start": "2683549",
    "end": "2690329"
  },
  {
    "text": "now is we're jumping into our fourth project now as you remember it's an asp.net identity sorry asp.net MVC",
    "start": "2690329",
    "end": "2697700"
  },
  {
    "text": "website ok standard web site with added asp.net identity to save our user names",
    "start": "2697700",
    "end": "2704190"
  },
  {
    "text": "and passwords that's how we know who's who and what we're doing is now adding an identity server as a way of generating tokens based on that",
    "start": "2704190",
    "end": "2710309"
  },
  {
    "text": "information so you'll want to jump in and you'll want to add identity serve",
    "start": "2710309",
    "end": "2715829"
  },
  {
    "text": "and you get packaged this is the version I'm on right now there's a couple of helpers here you've got entity framework",
    "start": "2715829",
    "end": "2722219"
  },
  {
    "text": "and asp.net an identity this lets you connect into any of your framework and asp.net identity obviously and it's",
    "start": "2722219",
    "end": "2728249"
  },
  {
    "text": "super super handy what we're going to look at after that is SDK is the startup class so how do we",
    "start": "2728249",
    "end": "2738810"
  },
  {
    "text": "hook all this up okay so we looked",
    "start": "2738810",
    "end": "2747030"
  },
  {
    "start": "2745000",
    "end": "2864000"
  },
  {
    "text": "before at identity and how that was wired up what we're going to do now is take a look at some of the identity",
    "start": "2747030",
    "end": "2753180"
  },
  {
    "text": "service stuff I've got recapture there as well now one of the important things",
    "start": "2753180",
    "end": "2758520"
  },
  {
    "text": "you need to consider is that the the way these tokens are generated is that",
    "start": "2758520",
    "end": "2763650"
  },
  {
    "text": "they're signed by a certificate as well so if we come out into our short bio if",
    "start": "2763650",
    "end": "2772530"
  },
  {
    "text": "we change literally anything in this token the whole thing falls over okay so",
    "start": "2772530",
    "end": "2778320"
  },
  {
    "text": "the the server and the clients can you know can use the public key to confirm",
    "start": "2778320",
    "end": "2785280"
  },
  {
    "text": "that the key has not been sorry that the token has not been tampered with okay and it's all hashed and stuff like that",
    "start": "2785280",
    "end": "2790920"
  },
  {
    "text": "so you can't alter the data that sits in these tokens and the way it does that is with a certificate if you're using Azure",
    "start": "2790920",
    "end": "2797550"
  },
  {
    "text": "you need to be careful that careful the way that certificates are stored okay so",
    "start": "2797550",
    "end": "2803010"
  },
  {
    "text": "they're stored in the current users or their my store in the current user but basically all I'm doing here is finding",
    "start": "2803010",
    "end": "2810450"
  },
  {
    "text": "the certificate by its thumbprint from the registry and then passing that down into the identity server options so what",
    "start": "2810450",
    "end": "2820200"
  },
  {
    "text": "we've got here is the configuration for identity server itself I'm changing a",
    "start": "2820200",
    "end": "2825990"
  },
  {
    "text": "couple of the login and logout bits I'm adding the signing cert here you can use a developer signing cert but I would",
    "start": "2825990",
    "end": "2832920"
  },
  {
    "text": "suggest making a cert upfront it's probably better the way I'm doing the",
    "start": "2832920",
    "end": "2838200"
  },
  {
    "text": "next part is in memory so now that we've got kind of a user like we have uses in",
    "start": "2838200",
    "end": "2844500"
  },
  {
    "text": "a database we have our API we need to explain to identity server what we're protecting okay and we do that in a",
    "start": "2844500",
    "end": "2850710"
  },
  {
    "text": "couple ways we need to set up the API resources and the identity resources so",
    "start": "2850710",
    "end": "2857040"
  },
  {
    "text": "I'm actually just going to jump in here and we'll take a look at the API first",
    "start": "2857040",
    "end": "2862819"
  },
  {
    "text": "all right so API we just need to give it a name and it's just like yeah a name",
    "start": "2862970",
    "end": "2870330"
  },
  {
    "start": "2864000",
    "end": "2917000"
  },
  {
    "text": "and a scope pretty much we can say we can give it a secret so that we can prove that later on that the API is the",
    "start": "2870330",
    "end": "2877800"
  },
  {
    "text": "API that we're talking to we ask we can include some claims for that particular API will require some claims and we've",
    "start": "2877800",
    "end": "2885270"
  },
  {
    "text": "got this thing called scopes now scopes are a way of kind of segmenting up your API typically you'll just have one scope",
    "start": "2885270",
    "end": "2892590"
  },
  {
    "text": "for your API and I've just got API one my whole API is called API one the only scope it and really needs is API one but",
    "start": "2892590",
    "end": "2899760"
  },
  {
    "text": "I've also got this thing here Merchant API keys now I'm just saying that this is a particular scope that you can",
    "start": "2899760",
    "end": "2906060"
  },
  {
    "text": "request and that it exists as a concept so keep that in mind as well but what",
    "start": "2906060",
    "end": "2912270"
  },
  {
    "text": "we're really doing here is identifying that the API exists and describing it",
    "start": "2912270",
    "end": "2918320"
  },
  {
    "start": "2917000",
    "end": "3061000"
  },
  {
    "text": "the next thing we need to do is describe the identity resources so not only the",
    "start": "2918320",
    "end": "2924690"
  },
  {
    "text": "endpoints that we want to protect but also the data that we want to protect so things like the open ID the username the",
    "start": "2924690",
    "end": "2932040"
  },
  {
    "text": "profile name and address and such emails and I've also got a custom identity",
    "start": "2932040",
    "end": "2938010"
  },
  {
    "text": "resource that I want to protect and that's information about my merchants so I've got things in here such as the their IDs their keys their you know",
    "start": "2938010",
    "end": "2945360"
  },
  {
    "text": "their name and stuff like that this is information that people can request from from the API and that I can you know",
    "start": "2945360",
    "end": "2952230"
  },
  {
    "text": "allow them to read if I want to so we're just describing I've also got roles in",
    "start": "2952230",
    "end": "2957660"
  },
  {
    "text": "there but I'm just describing information I want to protect so I've described the API and the information",
    "start": "2957660",
    "end": "2963680"
  },
  {
    "text": "basically we'll just jump down here there's an operational store so if you",
    "start": "2963680",
    "end": "2969690"
  },
  {
    "text": "want his identity server with entity framework you can it's very easy when it needs to generate tokens and remember",
    "start": "2969690",
    "end": "2975000"
  },
  {
    "text": "refresh tokens and all the other stuff it needs to do it puts it in the operational store",
    "start": "2975000",
    "end": "2980220"
  },
  {
    "text": "I'm just dumping this into a sequel server this is the same code that we would normally use to set up a sequel",
    "start": "2980220",
    "end": "2985650"
  },
  {
    "text": "server context up higher with with some migrations as well and finally we have",
    "start": "2985650",
    "end": "2991560"
  },
  {
    "text": "the add asp.net identity as well and we just need to point it use a table basically just so that our identity server knows where the users",
    "start": "2991560",
    "end": "2997990"
  },
  {
    "text": "are kept right it's just triple check",
    "start": "2997990",
    "end": "3003780"
  },
  {
    "text": "we've got everything that's a good point actually with you and you'll notice when",
    "start": "3003780",
    "end": "3010020"
  },
  {
    "text": "I logged in you know there's a login screen an account registration and stuff like that the the good thing about",
    "start": "3010020",
    "end": "3016650"
  },
  {
    "text": "identity server for if you've used identity server 3 is that the views and the controller's for the authentication",
    "start": "3016650",
    "end": "3022890"
  },
  {
    "text": "like login and register and all that kind of stuff you can they're just standard embassy views and controllers you can edit them you can change them",
    "start": "3022890",
    "end": "3029010"
  },
  {
    "text": "it's all fine it's all part of the project is just a standard MVC project where is in 3 it was kind of built into",
    "start": "3029010",
    "end": "3034140"
  },
  {
    "text": "the the NuGet package and you couldn't change it very easily so that's another thing to remember but let's see you've",
    "start": "3034140",
    "end": "3041610"
  },
  {
    "text": "taken a look at that yeah client store",
    "start": "3041610",
    "end": "3046680"
  },
  {
    "text": "ok cool so we've identified what we want to protect the next thing we need to do is",
    "start": "3046680",
    "end": "3053040"
  },
  {
    "text": "identify who is allowed access to our resources and we do that with a client",
    "start": "3053040",
    "end": "3058890"
  },
  {
    "text": "store and what this does is basically",
    "start": "3058890",
    "end": "3064070"
  },
  {
    "start": "3061000",
    "end": "3079000"
  },
  {
    "text": "describe the system not necessarily the user but the system that's allowed to access our stuff so if we jump into I",
    "start": "3064070",
    "end": "3072030"
  },
  {
    "text": "guess a merchant client would be the best one to start off with look at that",
    "start": "3072030",
    "end": "3078440"
  },
  {
    "text": "okay so all at once back is a client and when you submit your merchant ID and",
    "start": "3078440",
    "end": "3084090"
  },
  {
    "start": "3079000",
    "end": "3118000"
  },
  {
    "text": "your secret key to me and I prove that you are here you are I do it using these so I get them the merchant ID comes in I",
    "start": "3084090",
    "end": "3089850"
  },
  {
    "text": "go ok great I'm gonna go look up the merch at the database and I'll give it back the company name I'll say they're",
    "start": "3089850",
    "end": "3096060"
  },
  {
    "text": "enabled here's their ID they have to use the merchant ID and secret key to access",
    "start": "3096060",
    "end": "3103110"
  },
  {
    "text": "this like to generate a token that's how they have to do it and here the Scopes they're allowed to access so a typical",
    "start": "3103110",
    "end": "3109650"
  },
  {
    "text": "third-party developer can only access these resources and you'll notice an absence of the merchants API keys bit",
    "start": "3109650",
    "end": "3115830"
  },
  {
    "text": "here it's on purpose here the claims I want to add to their token and here's",
    "start": "3115830",
    "end": "3121830"
  },
  {
    "start": "3118000",
    "end": "3199000"
  },
  {
    "text": "the token type so I want to give them and so really we're just reaching into the database and we're saying right",
    "start": "3121830",
    "end": "3128120"
  },
  {
    "text": "here's what that client looks like if we compare that to a MVC client so this is",
    "start": "3128120",
    "end": "3137670"
  },
  {
    "text": "pinch web this is when you're using my portal the client you're going to get back is hard-coded so you'll see it's an",
    "start": "3137670",
    "end": "3145020"
  },
  {
    "text": "able pinch web it has to live on this URI I don't need consent so once you've",
    "start": "3145020",
    "end": "3151170"
  },
  {
    "text": "authenticated with my portal it can do whatever it wants it doesn't have to ask some other interesting things probably",
    "start": "3151170",
    "end": "3158390"
  },
  {
    "text": "the secrets so ignore that at least you can see all of it this is how you prove",
    "start": "3158390",
    "end": "3164910"
  },
  {
    "text": "this is the port how the portal proves it is who it is you know you can only be redirected back to a specific URL and if",
    "start": "3164910",
    "end": "3172950"
  },
  {
    "text": "you have a look at the allowed scopes this is the important part it's got merchant API keys so my portal",
    "start": "3172950",
    "end": "3180360"
  },
  {
    "text": "can request this specific information",
    "start": "3180360",
    "end": "3184370"
  },
  {
    "text": "cool yeah and basically that's the kind of that's the set up that you need to do so we'll just jump back up into startup",
    "start": "3188810",
    "end": "3195890"
  },
  {
    "text": "all the way back here we go so we've now identified the users the",
    "start": "3195890",
    "end": "3203280"
  },
  {
    "text": "validator themselves we've got our own portal that's all of the configuration you need to get the basics done really",
    "start": "3203280",
    "end": "3209190"
  },
  {
    "text": "this is why the Microsoft making the integration and making it easy as such a good thing because it skips a lot of",
    "start": "3209190",
    "end": "3214950"
  },
  {
    "text": "this stuff but once you've got that all wired up down the bottom use identity",
    "start": "3214950",
    "end": "3220620"
  },
  {
    "text": "server just plunk it into your pipeline just above where you want to protect and",
    "start": "3220620",
    "end": "3226190"
  },
  {
    "text": "once you've done that we can start to look at the API or where they've got",
    "start": "3226190",
    "end": "3231810"
  },
  {
    "text": "about 6 minutes left so we've now let's",
    "start": "3231810",
    "end": "3237030"
  },
  {
    "start": "3235000",
    "end": "3295000"
  },
  {
    "text": "just quickly recap where basically we've got our users in our database we'll get our token server that knows how to look into that database knows how to identify",
    "start": "3237030",
    "end": "3243810"
  },
  {
    "text": "people it knows what it's protecting and those want information it's protecting now it can generate these tokens and",
    "start": "3243810",
    "end": "3252390"
  },
  {
    "text": "we've seen from the user side how we can use these tokens to send it to the API we're going to do now is look at how we",
    "start": "3252390",
    "end": "3257910"
  },
  {
    "text": "protect the API and this is the beauty of the whole thing because it's actually relatively simple the first thing you'll",
    "start": "3257910",
    "end": "3266220"
  },
  {
    "text": "need on your API project so we're flicking over to our API project is to",
    "start": "3266220",
    "end": "3271500"
  },
  {
    "text": "use something like identity server dot access token validation okay this is",
    "start": "3271500",
    "end": "3277140"
  },
  {
    "text": "going to build in the token validation into your into your system and if we",
    "start": "3277140",
    "end": "3285090"
  },
  {
    "text": "take a look at startup we'll just jump",
    "start": "3285090",
    "end": "3290370"
  },
  {
    "text": "straight down to add authentication so",
    "start": "3290370",
    "end": "3296490"
  },
  {
    "start": "3295000",
    "end": "3347000"
  },
  {
    "text": "there's only a few things you need to provide you need to provide the authority this is just the URL for your identity server ok where the token",
    "start": "3296490",
    "end": "3303030"
  },
  {
    "text": "server lives we require HTTP we say who we are API one we're proving who we are",
    "start": "3303030",
    "end": "3309690"
  },
  {
    "text": "by using the secret here and that's really all you need to do because once you jump over to your payment controller",
    "start": "3309690",
    "end": "3316220"
  },
  {
    "text": "and if we this is what we kind of looked at before when we're describing the API if you come up the top what I'm doing is",
    "start": "3316220",
    "end": "3322950"
  },
  {
    "text": "using authorize ok the same authorized tag you'd use in a standard MVC side and this hooks into the bearer",
    "start": "3322950",
    "end": "3329100"
  },
  {
    "text": "authentication and it'll let anyone with the valid token hit this endpoint but even better than that is if we go over",
    "start": "3329100",
    "end": "3335070"
  },
  {
    "text": "to something like the merchants controller okay so we have the same authorized thing at the top here but if",
    "start": "3335070",
    "end": "3342510"
  },
  {
    "text": "we come down to the API keys section okay we've got an authorized policy and",
    "start": "3342510",
    "end": "3349070"
  },
  {
    "start": "3347000",
    "end": "3397000"
  },
  {
    "text": "it suggests that we need merchants API keys to go and fetch the keys and the",
    "start": "3349070",
    "end": "3354570"
  },
  {
    "text": "way we set that up again it's just in startup just above our authentication code come up here and we've got add",
    "start": "3354570",
    "end": "3362340"
  },
  {
    "text": "author ization okay and this is where we can add some authorization policies if you look at the merchants API keys post",
    "start": "3362340",
    "end": "3369270"
  },
  {
    "text": "policy I've got here the only thing it needs is a scope of merchants API keys if you remember in our client store the",
    "start": "3369270",
    "end": "3376170"
  },
  {
    "text": "only scopes you're allowed to request or the only person that was allowed to request that scope was the portal and so this is how you can lock down systems",
    "start": "3376170",
    "end": "3382710"
  },
  {
    "text": "not just users into what they need to use and as a really quick really quick",
    "start": "3382710",
    "end": "3388380"
  },
  {
    "text": "heads up one of the greatest things that this lets you do in your SD code one of the greatest",
    "start": "3388380",
    "end": "3398480"
  },
  {
    "text": "things that lists lets you do is it then lets you not only authenticate you know your user accounts okay so my portal can",
    "start": "3398480",
    "end": "3406609"
  },
  {
    "text": "login pinch users and pinch users can use my portal if you then you build something so I've got the Brendan the",
    "start": "3406609",
    "end": "3412490"
  },
  {
    "text": "Brendan website the Brendan website can then also validate and use pinch users using this connect functionality and the",
    "start": "3412490",
    "end": "3419869"
  },
  {
    "text": "beauty about this is the actual API code and the SDK code isn't really any",
    "start": "3419869",
    "end": "3425000"
  },
  {
    "text": "different you're just getting a different token so when we go to payers we can see my payer information okay",
    "start": "3425000",
    "end": "3432980"
  },
  {
    "text": "this is the stuff that my developer account can see this is the developer",
    "start": "3432980",
    "end": "3438190"
  },
  {
    "text": "merchant account but if I then want my products this web sample to let other pinch users log in and use my product",
    "start": "3438190",
    "end": "3445460"
  },
  {
    "text": "with their account you can go ahead and connect a pinch and I'm actually just going to do this in a separate window",
    "start": "3445460",
    "end": "3453579"
  },
  {
    "text": "will use Ben test3",
    "start": "3454000",
    "end": "3458319"
  },
  {
    "text": "no we won't because we're running at a time basically we'll do is we'll just",
    "start": "3464110",
    "end": "3470440"
  },
  {
    "text": "use the currently logged in user application so if you've ever seen like connect to Twitter or Facebook wants to",
    "start": "3470440",
    "end": "3475480"
  },
  {
    "text": "tweet it Facebook once the post in your behalf or wants to access your birthday you can use the Kinect functionality built into identity server to allow you",
    "start": "3475480",
    "end": "3482590"
  },
  {
    "text": "to access that stuff just go yes allow and then you get the access token for the user who has just agreed to use your",
    "start": "3482590",
    "end": "3489790"
  },
  {
    "text": "system so Brendan's website can use pinch use of this and then the code is identical so you can see here where I",
    "start": "3489790",
    "end": "3496300"
  },
  {
    "text": "had payor blah blah blah before now good NDC Sydney alright I've got a different users information and that's like a",
    "start": "3496300",
    "end": "3503020"
  },
  {
    "text": "really powerful feature that identity server can give you as well so we've run",
    "start": "3503020",
    "end": "3508360"
  },
  {
    "start": "3507000",
    "end": "3562000"
  },
  {
    "text": "through like an absolutely staggering amount of code right you can see that this is what it takes to get even a rip",
    "start": "3508360",
    "end": "3514600"
  },
  {
    "text": "like it's a relatively complex setup right you can read the QuickStart documentation to get a handle of it but",
    "start": "3514600",
    "end": "3520420"
  },
  {
    "text": "the beauty of the announcement yesterday is that basically Microsoft is going to",
    "start": "3520420",
    "end": "3526330"
  },
  {
    "text": "reduce literally everything I talked about just now for one API instance and one scope to the highlighted code there",
    "start": "3526330",
    "end": "3533680"
  },
  {
    "text": "okay it's going to be absolutely fantastic is gonna be built-in it's gonna be generated for you all you need",
    "start": "3533680",
    "end": "3539170"
  },
  {
    "text": "to do is add the appropriate NuGet packages and it will figure out where to store and save everything which i think is a fantastic thing now I don't want to",
    "start": "3539170",
    "end": "3546730"
  },
  {
    "text": "eat into lunch so I'm going to go ahead and say if you've got any questions or if you need me go ahead and so you want",
    "start": "3546730",
    "end": "3551770"
  },
  {
    "text": "to know anything about your own particular implementations of this come up and ask me afterwards you can find me",
    "start": "3551770",
    "end": "3557350"
  },
  {
    "text": "online Ben who likes beer thank you very much everyone for sticking it out [Applause]",
    "start": "3557350",
    "end": "3564389"
  }
]