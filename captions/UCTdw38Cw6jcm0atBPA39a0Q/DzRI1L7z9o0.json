[
  {
    "text": "okay hello everybody today I'm presenting or languages after JavaScript's so to",
    "start": "8120",
    "end": "15860"
  },
  {
    "text": "start out I'm Jennifer Wong and this is my cat fry he's featured later in the",
    "start": "15860",
    "end": "21830"
  },
  {
    "text": "presentation as well I currently work at Eventbrite as a software engineer and",
    "start": "21830",
    "end": "27050"
  },
  {
    "text": "what you see on the screen is a huge cake with the name Eventbrite as a celebration of our 10th anniversary",
    "start": "27050",
    "end": "34070"
  },
  {
    "text": "some people know me as the creator of human wasteland also known as the poop map of San Francisco and if you don't",
    "start": "34070",
    "end": "40820"
  },
  {
    "text": "know what that is feel free to ask me afterwards or you may know me as a creator of developers developers which",
    "start": "40820",
    "end": "47899"
  },
  {
    "text": "is a dedication to mr. Steve Ballmer so way back before all of those projects I",
    "start": "47899",
    "end": "55370"
  },
  {
    "text": "actually used to work as a civil engineer and during that time the",
    "start": "55370",
    "end": "61010"
  },
  {
    "text": "languages so I actually say that my first programming language is JavaScript and that's a bit of a lie because when I",
    "start": "61010",
    "end": "67640"
  },
  {
    "text": "was a civil engineer I learned Fortran as well as MATLAB and when I was doing",
    "start": "67640",
    "end": "72980"
  },
  {
    "text": "my master's in mechanical engineering I learned G code and embedded C for CNC",
    "start": "72980",
    "end": "78460"
  },
  {
    "text": "machining as well as electro mechanical systems so I didn't like any of those",
    "start": "78460",
    "end": "86180"
  },
  {
    "text": "languages I didn't really take to any of them and that's why I like to say that JavaScript was my first language fast",
    "start": "86180",
    "end": "92840"
  },
  {
    "text": "forward a little bit to 2010 to 2012 and I was actually working in customer",
    "start": "92840",
    "end": "98719"
  },
  {
    "text": "support in the tech industry and that was quite an interesting experience and that's what led me into programming",
    "start": "98719",
    "end": "105590"
  },
  {
    "text": "today so just a bit later let's talk about some current events that were going on in 2013 the first developers",
    "start": "105590",
    "end": "115789"
  },
  {
    "text": "kit for the oculus rift was released",
    "start": "115789",
    "end": "120759"
  },
  {
    "text": "Amazon CEO Jeff Bezos announced that there would be prime air or delivery by",
    "start": "121780",
    "end": "127789"
  },
  {
    "text": "drone Google glass was first released in",
    "start": "127789",
    "end": "133930"
  },
  {
    "text": "2013 and the UK was still pretty happy about",
    "start": "133930",
    "end": "140210"
  },
  {
    "text": "being part of the EU and at that point I also learned",
    "start": "140210",
    "end": "145860"
  },
  {
    "text": "JavaScript and I was pretty excited about it it's like good news me so this",
    "start": "145860",
    "end": "152430"
  },
  {
    "text": "is a tweet from 2013 with a screenshot of me pointing out that JavaScript was",
    "start": "152430",
    "end": "159180"
  },
  {
    "text": "number seven in the new programming languages languages to learn in 2013 I",
    "start": "159180",
    "end": "165360"
  },
  {
    "text": "was like yeah it shows correctly and I started to use JavaScript so here I'm",
    "start": "165360",
    "end": "172350"
  },
  {
    "text": "tweeting yay my first JavaScript and here we can actually take a look at the first JavaScript I ever did so here's",
    "start": "172350",
    "end": "181260"
  },
  {
    "text": "what my website used to look like in 2013 and this is the first pieces of",
    "start": "181260",
    "end": "186300"
  },
  {
    "text": "JavaScript I wrote which is just this silly navigation and you can tell it's vanilla JavaScript because it's just",
    "start": "186300",
    "end": "193290"
  },
  {
    "text": "jumping around all over the page so that's a peek into my history in",
    "start": "193290",
    "end": "201230"
  },
  {
    "text": "JavaScript all right so let's fast forward a little bit to 2016 we now have",
    "start": "201230",
    "end": "209580"
  },
  {
    "text": "access to a 3d experience at $15 with Google cardboard 711 paired up with a",
    "start": "209580",
    "end": "217620"
  },
  {
    "text": "company called flirty to actually deliver 72 make 77 deliveries by drone",
    "start": "217620",
    "end": "224070"
  },
  {
    "text": "prior to Amazon and Google doing so Google glass doesn't really exist",
    "start": "224070",
    "end": "230640"
  },
  {
    "text": "anymore and the UK is not so happy about being part of the EU but I'm one to talk",
    "start": "230640",
    "end": "239420"
  },
  {
    "text": "so speaking of trash fires JavaScript's been a little bit crazy these days and",
    "start": "239420",
    "end": "246980"
  },
  {
    "text": "so I decided to learn Python while I was working at Eventbrite and I was getting",
    "start": "246980",
    "end": "253170"
  },
  {
    "text": "a little bit confused by it so here you see me tweeting that I'm concurrently",
    "start": "253170",
    "end": "259350"
  },
  {
    "text": "writing JavaScript and Python files to demonstrate the differences between the two languages to my co-workers and all",
    "start": "259350",
    "end": "265890"
  },
  {
    "text": "the weirdnesses between the two so that's kind of the beginning of this talk is I was presenting to make",
    "start": "265890",
    "end": "272850"
  },
  {
    "text": "co-workers and letting them know what parts of pipe we're confusing to me coming from the background of JavaScript so if you could",
    "start": "272850",
    "end": "280960"
  },
  {
    "text": "all think back to a day when you had first learned a program you knew one",
    "start": "280960",
    "end": "286599"
  },
  {
    "text": "language you thought that was the end-all be-all that was the one language to rule them all and it was greatest now think back",
    "start": "286599",
    "end": "293740"
  },
  {
    "text": "to when you learned your second language and for those of you who have only learned one don't worry your time will",
    "start": "293740",
    "end": "299560"
  },
  {
    "text": "come but do you remember those times when you would be writing code and you would confuse your syntax and you just",
    "start": "299560",
    "end": "305949"
  },
  {
    "text": "start typing things and things would get mixed up and you'd run your code the",
    "start": "305949",
    "end": "311650"
  },
  {
    "text": "compilation would be a little strange and you'd be like wait why is that not working and then you realize that you've written it in the other syntax so that's",
    "start": "311650",
    "end": "318819"
  },
  {
    "text": "kind of what this talk is about it's about trying to write in a new language after just working solely in one for",
    "start": "318819",
    "end": "325720"
  },
  {
    "text": "such a long time so basically I'm trading in my curly braces and",
    "start": "325720",
    "end": "332469"
  },
  {
    "text": "semicolons of JavaScript and I'm getting a bit of rules via Python and a quick",
    "start": "332469",
    "end": "340449"
  },
  {
    "text": "history on both Python and JavaScript so Python we see here is a high-level",
    "start": "340449",
    "end": "346389"
  },
  {
    "text": "dynamic interpreted programming language it emphasizes code readability and it's syntax",
    "start": "346389",
    "end": "351789"
  },
  {
    "text": "expresses concepts in fewer lines of code than originally possible in languages such as C++ and Java",
    "start": "351789",
    "end": "359819"
  },
  {
    "text": "JavaScript is again a high-level dynamic interpreted and untyped programming",
    "start": "359819",
    "end": "366729"
  },
  {
    "text": "language so actually the two if you look they sound about the same they're high-level dynamic and interpreted it's",
    "start": "366729",
    "end": "374229"
  },
  {
    "text": "just that javascript is untyped specifically so just to compare the two",
    "start": "374229",
    "end": "380199"
  },
  {
    "text": "I have this table and you'll see that both Python and JavaScript have paradigms of being functional imperative",
    "start": "380199",
    "end": "388120"
  },
  {
    "text": "and object-oriented although with JavaScript its prototype based Python",
    "start": "388120",
    "end": "394270"
  },
  {
    "text": "was created in 1991 javascript in 1995 and you'll see that they're both",
    "start": "394270",
    "end": "399639"
  },
  {
    "text": "inspired or influenced by C Java and Perl but you also see that JavaScript",
    "start": "399639",
    "end": "405820"
  },
  {
    "text": "was influenced by Python and so I was like oh does that",
    "start": "405820",
    "end": "412610"
  },
  {
    "text": "mean that they're pretty similar and they kind of are but when you're learning them for the first time they're",
    "start": "412610",
    "end": "419420"
  },
  {
    "text": "really not so let's start a little bit small some of the first things that I",
    "start": "419420",
    "end": "426140"
  },
  {
    "text": "learn in Python were comments so I can't tell you the number of times that I've",
    "start": "426140",
    "end": "431540"
  },
  {
    "text": "made mistakes with comment syntax partially because with CSS common syntax",
    "start": "431540",
    "end": "436760"
  },
  {
    "text": "is almost exactly the same as JavaScript with the multi-line slash and star",
    "start": "436760",
    "end": "443170"
  },
  {
    "text": "actually later on in this talk it's funny I just made corrections to some of my code pieces I had double slashes and",
    "start": "443170",
    "end": "449960"
  },
  {
    "text": "some of my Python code later on and so you can see I'm still getting confused even though it seems very simple and",
    "start": "449960",
    "end": "457660"
  },
  {
    "text": "really when I look at the comment syntax it kind of just looks like a face with spiky hair to me okay next is whitespace",
    "start": "457660",
    "end": "468650"
  },
  {
    "text": "so when I was learning JavaScript and I knew JavaScript whitespace didn't really matter JavaScript was like that's not a",
    "start": "468650",
    "end": "474800"
  },
  {
    "text": "big deal don't worry about it and Python is like no whitespace totally matters",
    "start": "474800",
    "end": "480170"
  },
  {
    "text": "it's really important and then that just made me like super confused so I tweet a",
    "start": "480170",
    "end": "487310"
  },
  {
    "text": "lot as you guys can tell and so you see here I'm saying I'm dude I'm doing",
    "start": "487310",
    "end": "492710"
  },
  {
    "text": "Python and I'm all like what and you'll see that I have an indentation error and Python expected an indented block so",
    "start": "492710",
    "end": "500270"
  },
  {
    "text": "even when I was first learning Python you would think that whitespace wouldn't be such a big deal but in Python it's",
    "start": "500270",
    "end": "507950"
  },
  {
    "text": "really important to have all of your blocks indented in this that specific way",
    "start": "507950",
    "end": "514870"
  },
  {
    "text": "okay next our primitives so again primitives seem pretty straightforward in",
    "start": "516950",
    "end": "522510"
  },
  {
    "text": "JavaScript and Python so first you'll see the boolean switch are true and false although in Python true and false",
    "start": "522510",
    "end": "529590"
  },
  {
    "text": "are capitalized if you want to refer to nothing in JavaScript it's null and in",
    "start": "529590",
    "end": "535230"
  },
  {
    "text": "Python it's none what was really confusing to me is I didn't know that in",
    "start": "535230",
    "end": "540960"
  },
  {
    "text": "JavaScript the idea of something being undefined or having an empty value was so special it seemed completely normal",
    "start": "540960",
    "end": "547650"
  },
  {
    "text": "to me so when I was learning Python ID I was very confused to learn that that was not something that was possible the",
    "start": "547650",
    "end": "554400"
  },
  {
    "text": "other thing is with JavaScript and Python I didn't understand that with Python there are all types of numbers",
    "start": "554400",
    "end": "560760"
  },
  {
    "text": "whereas in JavaScript there's just one type of number it's pretty straightforward and then as well with",
    "start": "560760",
    "end": "567660"
  },
  {
    "text": "sequences I didn't understand that there are different types of sequences in Python because in JavaScript there's",
    "start": "567660",
    "end": "574290"
  },
  {
    "text": "really just a raise although with the addition of es6 we now have tuples as well or tuples I'm not sure how to",
    "start": "574290",
    "end": "580800"
  },
  {
    "text": "pronounce actually and then lastly with a key value store in JavaScript we call them objects but in Python we call them",
    "start": "580800",
    "end": "588390"
  },
  {
    "text": "dictionaries which can be a little confusing as well so with primitives in",
    "start": "588390",
    "end": "593610"
  },
  {
    "text": "general I learned that capitalization really matters I can't I don't even really want to talk about the number of",
    "start": "593610",
    "end": "599520"
  },
  {
    "text": "times that I had compilation errors just because I didn't capitalize true or false in Python so when I was learning",
    "start": "599520",
    "end": "607410"
  },
  {
    "text": "about these primitives I was like what are all of these things because with JavaScript we just have a normal number",
    "start": "607410",
    "end": "613710"
  },
  {
    "text": "and then in Python we have int we have floats we have lungs and we even have complex",
    "start": "613710",
    "end": "620100"
  },
  {
    "text": "numbers with real and imaginary parts which is pretty crazy and again with",
    "start": "620100",
    "end": "626640"
  },
  {
    "text": "sequences we have lists and then we have two poles or tuples and then we have byte arrays we have buffers which are",
    "start": "626640",
    "end": "633750"
  },
  {
    "text": "now called memory views in Python 3 and then we also have X ranges so at first I",
    "start": "633750",
    "end": "640860"
  },
  {
    "text": "was really confused by why would Python have all these different types why can't we just be like Java Script and be a little bit more straightforward and just",
    "start": "640860",
    "end": "646950"
  },
  {
    "text": "have one type of number or one type of sequence and then my coworker Alice helped me",
    "start": "646950",
    "end": "653370"
  },
  {
    "text": "realize an idea which is that there are trade-offs with different languages so",
    "start": "653370",
    "end": "659610"
  },
  {
    "text": "with JavaScript you could get faster development and you may have more runtime errors but with Python and",
    "start": "659610",
    "end": "665810"
  },
  {
    "text": "specific types of primitives you may have slower development but you'll most likely have fewer runtime errors and so",
    "start": "665810",
    "end": "671760"
  },
  {
    "text": "it's kind of a take your pick regarding languages ok next step is concatenation",
    "start": "671760",
    "end": "680580"
  },
  {
    "text": "so concatenation is pretty easy with both JavaScript and with Python you",
    "start": "680580",
    "end": "685680"
  },
  {
    "text": "essentially use a plus sign and you can add some strings together one thing I",
    "start": "685680",
    "end": "690959"
  },
  {
    "text": "didn't understand about JavaScript is that type coercion is something special and it's not something you can do in",
    "start": "690959",
    "end": "697170"
  },
  {
    "text": "Python so here you'll see I have a course number and I basically by",
    "start": "697170",
    "end": "702750"
  },
  {
    "text": "concatenating it coerce it into a string in JavaScript and with Python you just can't do that it's not possible so when",
    "start": "702750",
    "end": "710010"
  },
  {
    "text": "I was presenting this to my co-workers my coworker Emre literally made this face to me like whoa what do you mean",
    "start": "710010",
    "end": "717089"
  },
  {
    "text": "you can do type coercion she was not happy about that at all ok next step is",
    "start": "717089",
    "end": "726480"
  },
  {
    "text": "functions so I'm gonna go a little bit deep on different types of functions but first I'll start with functions and",
    "start": "726480",
    "end": "732180"
  },
  {
    "text": "conditionals so here you'll see a function called dr.seuss which basically",
    "start": "732180",
    "end": "737370"
  },
  {
    "text": "tells you if things are crazy or if they're boring based on cat The Cat in the Hat thing 1 and thing 2 being there",
    "start": "737370",
    "end": "744440"
  },
  {
    "text": "so some of the first things that I noticed about Python is that it's pretty similar syntax wise you start with an if",
    "start": "744440",
    "end": "751980"
  },
  {
    "text": "and then instead of saying else if as in JavaScript you say Elif and then you say",
    "start": "751980",
    "end": "757709"
  },
  {
    "text": "else just as in JavaScript so the only thing that's different for me is curly",
    "start": "757709",
    "end": "763140"
  },
  {
    "text": "braces versus colons and I feel like if you if you look at the two just as code",
    "start": "763140",
    "end": "770579"
  },
  {
    "text": "without even really reading it pythons definitely looks a lot better and when I",
    "start": "770579",
    "end": "775980"
  },
  {
    "text": "was first learning Python I was like no Java scripts better I miss those curly braces but now I'm kind of",
    "start": "775980",
    "end": "781750"
  },
  {
    "text": "coming around to the fact that yeah Python okay it does look a lot cleaner and here's another one of the examples",
    "start": "781750",
    "end": "787690"
  },
  {
    "text": "where I actually had true as lowercase so I actually had to come back through",
    "start": "787690",
    "end": "793120"
  },
  {
    "text": "and make sure I had all capitalized truths in Python so another thing with",
    "start": "793120",
    "end": "800680"
  },
  {
    "text": "JavaScript is I didn't understand that there was a difference between functions and methods so Python helped me realize",
    "start": "800680",
    "end": "807940"
  },
  {
    "text": "that so MDM says with functions versus methods in JavaScript that the global",
    "start": "807940",
    "end": "815440"
  },
  {
    "text": "function object has no methods or properties of its own however it does inherit some methods and properties",
    "start": "815440",
    "end": "821110"
  },
  {
    "text": "through the prototype chain from function dot prototype so that means that essentially every function in",
    "start": "821110",
    "end": "827800"
  },
  {
    "text": "JavaScript that is declared is inheriting from function dot prototype and that's where methods come from so an",
    "start": "827800",
    "end": "834970"
  },
  {
    "text": "example of the methods that you would acquire via the prototype chain are apply bind call is generator to source",
    "start": "834970",
    "end": "843370"
  },
  {
    "text": "and to string so for me having learned JavaScript I thought that essentially",
    "start": "843370",
    "end": "849790"
  },
  {
    "text": "functions were declared or created and that methods were inherited or built",
    "start": "849790",
    "end": "855370"
  },
  {
    "text": "into functions or built into the language of JavaScript so it wasn't",
    "start": "855370",
    "end": "860770"
  },
  {
    "text": "until learning Python that I learned that functions and methods are actually fairly different and that in most",
    "start": "860770",
    "end": "867730"
  },
  {
    "text": "respects they're basically the same except for that a method is implicitly",
    "start": "867730",
    "end": "872920"
  },
  {
    "text": "passed the object on which it was called and that a method is also able to operate on the data that is contained",
    "start": "872920",
    "end": "878860"
  },
  {
    "text": "within the class and then I was like oh is that why I didn't understand the difference between functions and methods",
    "start": "878860",
    "end": "884830"
  },
  {
    "text": "it's probably because there are no classes in Java scripts although there are now in es6 which I'll talk about in",
    "start": "884830",
    "end": "891340"
  },
  {
    "text": "a bit so take a quick look at some silly functions and methods that I wrote in",
    "start": "891340",
    "end": "898030"
  },
  {
    "text": "Python first you'll see that I have a function called fish-and-chips which is essentially created and",
    "start": "898030",
    "end": "905050"
  },
  {
    "text": "declared outside of a class and so that's a function and then I have a class called baking",
    "start": "905050",
    "end": "911250"
  },
  {
    "text": "and inside that I actually have a method called Bakewell tart so because that is",
    "start": "911250",
    "end": "916650"
  },
  {
    "text": "actually called within baking that's what makes it a method and you'll see as",
    "start": "916650",
    "end": "922920"
  },
  {
    "text": "well that if I log or print self you'll see that I have access to the object on",
    "start": "922920",
    "end": "928080"
  },
  {
    "text": "which it was called which is baking and so I was like oh duh okay that's why I",
    "start": "928080",
    "end": "934140"
  },
  {
    "text": "didn't understand the difference between JavaScript and pythons functions and methods okay next is Turner ease so turn",
    "start": "934140",
    "end": "944670"
  },
  {
    "text": "arrays are pretty straightforward as well but for some reason nobody wants to agree on syntax here so with JavaScript",
    "start": "944670",
    "end": "951210"
  },
  {
    "text": "you have the results of the conditions at the end it which is yes/no and at first I kind of like the way that was",
    "start": "951210",
    "end": "956970"
  },
  {
    "text": "organized because you have conditions right at the end but then I noticed that",
    "start": "956970",
    "end": "962250"
  },
  {
    "text": "the way Python writes things is it's written more as a sentence so you could read it out like do I like children yes",
    "start": "962250",
    "end": "968850"
  },
  {
    "text": "if they're well-behaved otherwise No so it's kind of a another situation of take",
    "start": "968850",
    "end": "974250"
  },
  {
    "text": "your pick on which you prefer okay so let's get a little bit bigger now those",
    "start": "974250",
    "end": "980610"
  },
  {
    "text": "are all kind of like the basic underlying principles of JavaScript and Python but now we're going to talk about",
    "start": "980610",
    "end": "986550"
  },
  {
    "text": "prototypes so prototypes are a little bit crazy and generally super confusing to everyone I was going to say to",
    "start": "986550",
    "end": "995010"
  },
  {
    "text": "anybody learning object-oriented languages but really they're confusing to anyone so when I hear prototypes",
    "start": "995010",
    "end": "1001190"
  },
  {
    "text": "usually I think of basically an early sample of a product like these rings here it's like a prototype of a ring",
    "start": "1001190",
    "end": "1007070"
  },
  {
    "text": "before they're actually put in a production there's also a video game called prototype and there's also a",
    "start": "1007070",
    "end": "1014660"
  },
  {
    "text": "French indie band called prototypes so",
    "start": "1014660",
    "end": "1020390"
  },
  {
    "text": "let's talk a bit about inheritance in the prototype chain mdn says that when it comes to inheritance JavaScript only",
    "start": "1020390",
    "end": "1027260"
  },
  {
    "text": "has one construct objects each object has an internal link to another object",
    "start": "1027260",
    "end": "1032540"
  },
  {
    "text": "called its prototype that prototype object has a prototype of its own and so",
    "start": "1032540",
    "end": "1037850"
  },
  {
    "text": "on until the object is reached with null as its type and know by definition has no prototype because it's nothing and it",
    "start": "1037850",
    "end": "1045110"
  },
  {
    "text": "acts as the final link in the prototype chain so I was reading that and I was like did somebody create a band called",
    "start": "1045110",
    "end": "1051740"
  },
  {
    "text": "inheritance in the prototype chain yet so to explain that a little bit more",
    "start": "1051740",
    "end": "1057890"
  },
  {
    "text": "clearly here I have a prototype chain so I start out with an object called B",
    "start": "1057890",
    "end": "1064480"
  },
  {
    "text": "don't ask me about this chain or any of the properties it's not something that I wrote it's a little bit silly but be",
    "start": "1064480",
    "end": "1072170"
  },
  {
    "text": "essentially inherits from the beam prototype being inherits from the Lagoon prototype and legume inherits from the",
    "start": "1072170",
    "end": "1079550"
  },
  {
    "text": "object prototype which is built into JavaScript so you can see that there's this prototype chain here and that B is",
    "start": "1079550",
    "end": "1086090"
  },
  {
    "text": "an instance of being the bean prototype is an instance of legume and the legume",
    "start": "1086090",
    "end": "1092000"
  },
  {
    "text": "prototype is an instance of object so to explain that a little bit further",
    "start": "1092000",
    "end": "1098710"
  },
  {
    "text": "basically Python helped me understand because it was class based prototypes in",
    "start": "1098710",
    "end": "1104390"
  },
  {
    "text": "JavaScript so I found Java scripts prototypes extremely confusing prior to learning Python so here I have a pretty",
    "start": "1104390",
    "end": "1112100"
  },
  {
    "text": "long example so I'm going to go through it step by step but it's essentially I'm",
    "start": "1112100",
    "end": "1117800"
  },
  {
    "text": "creating a mammal I'm creating a cap and inherits from mammal and then I create a method called eat on cat and then I",
    "start": "1117800",
    "end": "1125480"
  },
  {
    "text": "instantiate a new cat called fry so to start I have essentially the Declaration",
    "start": "1125480",
    "end": "1133490"
  },
  {
    "text": "of mammal so I start out and I say that mammals all have Oh neocortex",
    "start": "1133490",
    "end": "1138940"
  },
  {
    "text": "so you'll see above I have it in JavaScript I'm creating a new function and then in Python I'm creating it as a",
    "start": "1138940",
    "end": "1146270"
  },
  {
    "text": "class that's pretty easy next I create a",
    "start": "1146270",
    "end": "1152690"
  },
  {
    "text": "cat so I create a new function cat in the top with JavaScript and I give it a",
    "start": "1152690",
    "end": "1158480"
  },
  {
    "text": "name and I also give it a number of years and then from there I create the",
    "start": "1158480",
    "end": "1164300"
  },
  {
    "text": "cat prototype and I set it as a new mammal so essentially the cat prototype is inheriting from mammal and then I set",
    "start": "1164300",
    "end": "1171800"
  },
  {
    "text": "on the a prototype a method eat and then below that you'll see me creating a class in",
    "start": "1171800",
    "end": "1178789"
  },
  {
    "text": "Python called cat and it's much more straightforward here so I can just actually feed mammal directly into cat",
    "start": "1178789",
    "end": "1185120"
  },
  {
    "text": "in order for cat to inherit from mammal and then I initiate that with a number",
    "start": "1185120",
    "end": "1190370"
  },
  {
    "text": "of a name and number of years again and then I create a method called eat and",
    "start": "1190370",
    "end": "1197980"
  },
  {
    "text": "lastly here what I do I feel like this is probably the closest between",
    "start": "1197980",
    "end": "1203270"
  },
  {
    "text": "JavaScript and Python is mostly in the function call so when I instantiate a new frie cat he become he is a new cat",
    "start": "1203270",
    "end": "1211700"
  },
  {
    "text": "and his name is fry and he has seven years old he's seven years old and then he's eating some steak so because fry",
    "start": "1211700",
    "end": "1219500"
  },
  {
    "text": "cat is inheriting from cat it grabs that method and at first I found this super confusing because with JavaScript you",
    "start": "1219500",
    "end": "1227480"
  },
  {
    "text": "have these words new you have new functions you have this new word called",
    "start": "1227480",
    "end": "1232820"
  },
  {
    "text": "prototype but once I had these maps side by side it was much easier for me to",
    "start": "1232820",
    "end": "1238159"
  },
  {
    "text": "understand JavaScript prototype and for sitting through that very long example",
    "start": "1238159",
    "end": "1243320"
  },
  {
    "text": "you guys are rewarded with a photo of my cat eating some steak okay scope so",
    "start": "1243320",
    "end": "1253340"
  },
  {
    "text": "scope seems like it would be pretty crazy between the two and nobody really likes to talk about scope but actually",
    "start": "1253340",
    "end": "1259130"
  },
  {
    "text": "with JavaScript and Python scope is pretty straightforward they're almost exactly the same they both use lexical",
    "start": "1259130",
    "end": "1265760"
  },
  {
    "text": "scope the namespace in Python is specifically functions classes and",
    "start": "1265760",
    "end": "1271490"
  },
  {
    "text": "modules whereas in JavaScript only functions will create scope although again with",
    "start": "1271490",
    "end": "1276890"
  },
  {
    "text": "es6 we actually have now classes and modules creating scope as well and then",
    "start": "1276890",
    "end": "1282650"
  },
  {
    "text": "with Python you have the new identifier zuv variables functions and classes whereas with JavaScript you have",
    "start": "1282650",
    "end": "1288980"
  },
  {
    "text": "variables and functions again because there are no classes so scopes pretty easy between Python and JavaScript and I",
    "start": "1288980",
    "end": "1296630"
  },
  {
    "text": "was like okay that's one down",
    "start": "1296630",
    "end": "1300880"
  },
  {
    "text": "okay now there's this vs. self this is a really confusing concept again in",
    "start": "1301730",
    "end": "1308429"
  },
  {
    "text": "JavaScript so this is from JavaScript",
    "start": "1308429",
    "end": "1314580"
  },
  {
    "text": "whereas self is from Python so you'll see self kind of referred to quite a bit when creating classes in Python so I was",
    "start": "1314580",
    "end": "1322259"
  },
  {
    "text": "wondering are those two things the same they seem kind of similar I was like I don't know so I had to do a little bit",
    "start": "1322259",
    "end": "1329340"
  },
  {
    "text": "of research on that so actually with JavaScript this is a special keyword and",
    "start": "1329340",
    "end": "1334649"
  },
  {
    "text": "in pythons self is not a special keyword it's actually a convention so this can",
    "start": "1334649",
    "end": "1341549"
  },
  {
    "text": "refer to the global object or the containing object depending on the execution context so this can refer to",
    "start": "1341549",
    "end": "1348570"
  },
  {
    "text": "many things depending on essentially where it's declared whereas self in Python is just a convention so it's the",
    "start": "1348570",
    "end": "1356700"
  },
  {
    "text": "explicit first argument of a function and it refers to that instance so you",
    "start": "1356700",
    "end": "1362789"
  },
  {
    "text": "could actually name self this in Python if you wanted to and even mdn can kind",
    "start": "1362789",
    "end": "1371789"
  },
  {
    "text": "of admits that this is quite confusing in JavaScript because you'll see here there's a function where they say this",
    "start": "1371789",
    "end": "1377639"
  },
  {
    "text": "dot herp is equal to derp and they also say this dot this is easy to understand",
    "start": "1377639",
    "end": "1382799"
  },
  {
    "text": "is equal to just kidding this is at an actual example on an MD ends web site",
    "start": "1382799",
    "end": "1388200"
  },
  {
    "text": "and then to top all of that off there's also window dot self which is",
    "start": "1388200",
    "end": "1393360"
  },
  {
    "text": "accessible with JavaScript so this could be self if you're in the global scope so",
    "start": "1393360",
    "end": "1400649"
  },
  {
    "text": "you'll see here I have a function checking to see of window dot self is window if window dot self is this and if",
    "start": "1400649",
    "end": "1408059"
  },
  {
    "text": "this is equal to window and all of those are true assuming that this function is",
    "start": "1408059",
    "end": "1413179"
  },
  {
    "text": "executed in the global scope so this versus self is it confusing yes very",
    "start": "1413179",
    "end": "1421110"
  },
  {
    "text": "confusing okay now we have wasting wasting is",
    "start": "1421110",
    "end": "1428720"
  },
  {
    "text": "something that I didn't understand again that was something special in JavaScript I thought it was something pretty",
    "start": "1428720",
    "end": "1434840"
  },
  {
    "text": "straightforward just a weird quirk in JavaScript but my co-workers again we're quite horrified to learn what hoisting",
    "start": "1434840",
    "end": "1441620"
  },
  {
    "text": "was so to explain hoisting I have here essentially a variable called boba and I",
    "start": "1441620",
    "end": "1450890"
  },
  {
    "text": "first assigned that to passion green tea so you'd assume that con that with log below passion green tea and then I have",
    "start": "1450890",
    "end": "1458720"
  },
  {
    "text": "a function called my order or jens order i log boba at the beginning of that",
    "start": "1458720",
    "end": "1463790"
  },
  {
    "text": "function and one would assume it would go out to the global scope and say oh that must be passion green tea so you'd",
    "start": "1463790",
    "end": "1472370"
  },
  {
    "text": "assume that it would declare that or print that and then i again assign I",
    "start": "1472370",
    "end": "1477620"
  },
  {
    "text": "create boba again inside of that function and I assign it to mango green milk tea and then I logged it again so",
    "start": "1477620",
    "end": "1484400"
  },
  {
    "text": "you'd assume that that would log mango green milk tea so actually what's super",
    "start": "1484400",
    "end": "1490640"
  },
  {
    "text": "confusing is that second console.log inside of my function logs undefined and",
    "start": "1490640",
    "end": "1497120"
  },
  {
    "text": "the reason for that is wasting and because the fact that javascript has the",
    "start": "1497120",
    "end": "1503030"
  },
  {
    "text": "idea of something being undefined so with hoisting you hoist the variable",
    "start": "1503030",
    "end": "1508130"
  },
  {
    "text": "definition or a variable declaration for both boba above that console.log so",
    "start": "1508130",
    "end": "1514970"
  },
  {
    "text": "because var boba hasn't actually been assigned anything what gets logged is undefined so that's super confusing and",
    "start": "1514970",
    "end": "1522460"
  },
  {
    "text": "again that's something that is not possible and doesn't exist in Python so",
    "start": "1522460",
    "end": "1528500"
  },
  {
    "text": "here you'll see I have a function called gens order in Python and I print boba and by doing so without declaring boba",
    "start": "1528500",
    "end": "1536660"
  },
  {
    "text": "or assigning it Python is like no that's not possible you can't do that because",
    "start": "1536660",
    "end": "1541730"
  },
  {
    "text": "there's no wasting okay next is es6 so equi script six is a",
    "start": "1541730",
    "end": "1553950"
  },
  {
    "text": "new standard which was released in 2015 by ahmed international prior to that a",
    "start": "1553950",
    "end": "1559320"
  },
  {
    "text": "full version of javascript hadn't been released since 2009 so you could say",
    "start": "1559320",
    "end": "1564360"
  },
  {
    "text": "that es6 was upgraded as is an upgrade of JavaScript or es 5 a quick note about",
    "start": "1564360",
    "end": "1572490"
  },
  {
    "text": "equi international versus a Python Software Foundation which I didn't know about",
    "start": "1572490",
    "end": "1578040"
  },
  {
    "text": "so Ekman international is the group behind the standards of Java scripts and they're actually a private nonprofit",
    "start": "1578040",
    "end": "1584160"
  },
  {
    "text": "which means that you can only join if you're a part of a huge organization and you have to pay into that private",
    "start": "1584160",
    "end": "1590850"
  },
  {
    "text": "nonprofit whereas with the pipe Python Software Foundation anybody could be a",
    "start": "1590850",
    "end": "1596160"
  },
  {
    "text": "number so you could go and join today and be a member of the Python Software Foundation which is a non-profit it's",
    "start": "1596160",
    "end": "1603480"
  },
  {
    "text": "pretty cool my core crash Sweeney is actually on the board so it just goes to show that you could really be part of",
    "start": "1603480",
    "end": "1610020"
  },
  {
    "text": "that if you wanted to very easily whereas with Ahmed International it's much harder so that being said learning",
    "start": "1610020",
    "end": "1619440"
  },
  {
    "text": "Essex was has been really interesting for me because python has helped me also",
    "start": "1619440",
    "end": "1624570"
  },
  {
    "text": "learn es6 so a lot of syntax and es6 overlaps that of python so I like to",
    "start": "1624570",
    "end": "1630240"
  },
  {
    "text": "kind of say that they go hand-in-hand so to start block scope in es6 so when I",
    "start": "1630240",
    "end": "1638880"
  },
  {
    "text": "was first learning JavaScript I thought that several things created scope in es6",
    "start": "1638880",
    "end": "1644820"
  },
  {
    "text": "or excuse me in es5 so I thought that if statements and conditionals created",
    "start": "1644820",
    "end": "1650730"
  },
  {
    "text": "scope and then I was told that that's not true but with es6 it's actually now true and",
    "start": "1650730",
    "end": "1657390"
  },
  {
    "text": "so when somebody told me that block scope exists is like what do you mean that exists in es6 so with the addition",
    "start": "1657390",
    "end": "1667110"
  },
  {
    "text": "of const and let in javascript we now have block scope and as an example i have this this function called simple",
    "start": "1667110",
    "end": "1674160"
  },
  {
    "text": "example in which i have a conditional if value I assign var value to value and then I",
    "start": "1674160",
    "end": "1682110"
  },
  {
    "text": "assign LUT value to value as well but that's using Lett and then when I",
    "start": "1682110",
    "end": "1688410"
  },
  {
    "text": "console.log both of those I get the value because they're just declared within that scope of that block however",
    "start": "1688410",
    "end": "1695910"
  },
  {
    "text": "outside of that conditional if I try to print out var value that's no problem",
    "start": "1695910",
    "end": "1701309"
  },
  {
    "text": "because that's part of es5 and there's no such thing as block scope at that point but if I try to print let value",
    "start": "1701309",
    "end": "1709350"
  },
  {
    "text": "because of block scope I actually get an uncaught reference error and so that's",
    "start": "1709350",
    "end": "1715350"
  },
  {
    "text": "something to keep in mind when you're creating scope now in es6 so now I",
    "start": "1715350",
    "end": "1723000"
  },
  {
    "text": "actually have to add on a couple of things to my table from earlier so we",
    "start": "1723000",
    "end": "1728429"
  },
  {
    "text": "actually have more things that create scope in JavaScript than in Python okay",
    "start": "1728429",
    "end": "1736740"
  },
  {
    "text": "next is template literals so template literals are string literals that allow embedded expressions and they were",
    "start": "1736740",
    "end": "1743610"
  },
  {
    "text": "originally called template strings prior to in Prior editions of es6 so template",
    "start": "1743610",
    "end": "1750299"
  },
  {
    "text": "literals are something that actually already existed in Python and something that I had ready learned so that made it",
    "start": "1750299",
    "end": "1755880"
  },
  {
    "text": "much easier for me to understand those in es6 so see here a JavaScript template",
    "start": "1755880",
    "end": "1762780"
  },
  {
    "text": "literal so I declare both and I create exclamation assign it to a string whoa",
    "start": "1762780",
    "end": "1768299"
  },
  {
    "text": "and then I also have a sentence they're really similar to Python and then when I log the template literal which basically",
    "start": "1768299",
    "end": "1775890"
  },
  {
    "text": "has some placeholders for the exclamation and the sentence what I get is a printout of template literals :",
    "start": "1775890",
    "end": "1782549"
  },
  {
    "text": "whoa they're really similar to Python and it's pretty it's pretty great because then you don't have to use the",
    "start": "1782549",
    "end": "1788750"
  },
  {
    "text": "concatenation and it's more straightforward just having it's almost like mad libs if you guys are familiar",
    "start": "1788750",
    "end": "1794520"
  },
  {
    "text": "with mad libs and then in Python you'll see it's pretty similar as well so using",
    "start": "1794520",
    "end": "1800610"
  },
  {
    "text": "dot format in Python I have a string and by using dot format those placeholders",
    "start": "1800610",
    "end": "1805940"
  },
  {
    "text": "with the curly braces will just fill in with the two strings that fed into dot format so this will print",
    "start": "1805940",
    "end": "1812770"
  },
  {
    "text": "out dot format going yep quite and then",
    "start": "1812770",
    "end": "1818170"
  },
  {
    "text": "those two side-by-side you can see they're quite similar with the curly",
    "start": "1818170",
    "end": "1824410"
  },
  {
    "text": "braces for the template literals okay next is default parameters so again",
    "start": "1824410",
    "end": "1831970"
  },
  {
    "text": "default parameters was something that already existed in Python and that made it easier for me to understand in",
    "start": "1831970",
    "end": "1837220"
  },
  {
    "text": "JavaScript so here you see a default parameter I have a function called Nam",
    "start": "1837220",
    "end": "1843250"
  },
  {
    "text": "and my default parameter food is set to icecream so if I want to call Nam",
    "start": "1843250",
    "end": "1850240"
  },
  {
    "text": "without an argument fed into that function it'll automatically just print out icecream as a default parameter so",
    "start": "1850240",
    "end": "1857559"
  },
  {
    "text": "it's time to eat icecream and then again with Python it's very",
    "start": "1857559",
    "end": "1864970"
  },
  {
    "text": "similar so you can have a default parameter again food is set equal to ice-cream and then we print out time to",
    "start": "1864970",
    "end": "1872200"
  },
  {
    "text": "eat icecream even though we've called the function without any arguments and here we go",
    "start": "1872200",
    "end": "1880000"
  },
  {
    "text": "side by side",
    "start": "1880000",
    "end": "1882660"
  },
  {
    "text": "okay next is rest parameters versus args in Python so the rest parameter syntax",
    "start": "1885670",
    "end": "1893420"
  },
  {
    "text": "allows us to represent an indefinite number of arguments as an array and that's actually something that already",
    "start": "1893420",
    "end": "1899240"
  },
  {
    "text": "existed in Python from its inception so here in JavaScript I have a function",
    "start": "1899240",
    "end": "1906050"
  },
  {
    "text": "which is a joke and I log the question and then I just go through and I print",
    "start": "1906050",
    "end": "1913400"
  },
  {
    "text": "out each of the phrases that's fed in to the rest of the function so here I have",
    "start": "1913400",
    "end": "1919880"
  },
  {
    "text": "I assigned that yes Joe yes six Joe goes why does JavaScript single out one parameter and then I call that joke with",
    "start": "1919880",
    "end": "1927620"
  },
  {
    "text": "I call the function joke with the es6 joke and then three other strings which",
    "start": "1927620",
    "end": "1932900"
  },
  {
    "text": "will get essentially smashed into an array at the end so then I'll print out why does JavaScript single out one",
    "start": "1932900",
    "end": "1940190"
  },
  {
    "text": "parameter and then it's because it doesn't like it doesn't really like the rest of them so with Python something",
    "start": "1940190",
    "end": "1951410"
  },
  {
    "text": "very similar is our args here so here I have a pirate joke and then I can take a",
    "start": "1951410",
    "end": "1956780"
  },
  {
    "text": "question and then I take a bunch of arms which are smashed into an array so I print the question and then I loop",
    "start": "1956780",
    "end": "1963620"
  },
  {
    "text": "through and print out the different arguments that are fed into the rest of the args or read fed into the rest of",
    "start": "1963620",
    "end": "1970160"
  },
  {
    "text": "the the function so with my Python joke it prints out what's a pirate's favorite",
    "start": "1970160",
    "end": "1976910"
  },
  {
    "text": "parameter args args args that's my pirate joke so it's pretty",
    "start": "1976910",
    "end": "1984020"
  },
  {
    "text": "cool very similar between Python and JavaScript okay so now we come to",
    "start": "1984020",
    "end": "1991880"
  },
  {
    "text": "classes we talked about prototypes earlier in JavaScript but now we have classes with yet six but as it turns out",
    "start": "1991880",
    "end": "1998060"
  },
  {
    "text": "they're just syntactic sugar so they're still based on the prototype idea or the prototype chain within Java scripts so I",
    "start": "1998060",
    "end": "2005620"
  },
  {
    "text": "like to say that classes are like prototype to the new video game so again",
    "start": "2005620",
    "end": "2012730"
  },
  {
    "text": "we see this example of mammal and cat then I instantiate a new fry cat so the",
    "start": "2012730",
    "end": "2019869"
  },
  {
    "text": "only difference is here now is that you'll have a constructor and you",
    "start": "2019869",
    "end": "2024909"
  },
  {
    "text": "actually declare a class mammal in es6 as well so it's pretty similar to the",
    "start": "2024909",
    "end": "2030729"
  },
  {
    "text": "way it looks in Python here a big difference which makes things much",
    "start": "2030729",
    "end": "2036519"
  },
  {
    "text": "easier is that you can inherit more easily so here cat inherits from mammal",
    "start": "2036519",
    "end": "2042190"
  },
  {
    "text": "by just saying extends mammal and that's much more similar to the way that Python inherits mammal and again we have a",
    "start": "2042190",
    "end": "2054279"
  },
  {
    "text": "constructor which is pretty similar to the init function in Python so you'll",
    "start": "2054279",
    "end": "2060700"
  },
  {
    "text": "see that the syntactic sugar kind of helps things over a lot much better or much more easily between the two",
    "start": "2060700",
    "end": "2066010"
  },
  {
    "text": "languages and so I like to say that it's like we're breaking the prototypes and",
    "start": "2066010",
    "end": "2072669"
  },
  {
    "text": "building something new that works out really well okay so in conclusion evolve",
    "start": "2072669",
    "end": "2081429"
  },
  {
    "text": "this in learning Python after learning JavaScript so what I learned is that JavaScript has a bunch of weird quirks",
    "start": "2081429",
    "end": "2088599"
  },
  {
    "text": "that I wasn't aware of I just thought it was natural and I thought you know all those things happen in all different",
    "start": "2088599",
    "end": "2093878"
  },
  {
    "text": "programming languages so I thought that job and then I learned that JavaScript is like kind of actually a free-for-all",
    "start": "2093879",
    "end": "2100349"
  },
  {
    "text": "you can do a lot of different things it's a super flexible language and I thought that that was something that I",
    "start": "2100349",
    "end": "2105910"
  },
  {
    "text": "really liked and it can be really helpful as a beginner because you can't really make mistakes in JavaScript or",
    "start": "2105910",
    "end": "2111099"
  },
  {
    "text": "it's very hard to but then I started to feel like oh maybe that's a bad thing I'm not really sure how I feel about it",
    "start": "2111099",
    "end": "2117970"
  },
  {
    "text": "anymore and I got a little bit sad because I was like JavaScript used to be my language to rule them all but Python",
    "start": "2117970",
    "end": "2124839"
  },
  {
    "text": "has actually really helped me appreciate all the things that I've learned in JavaScript and I've also learned that",
    "start": "2124839",
    "end": "2131380"
  },
  {
    "text": "some rules actually can be good and so this is how I felt after learning Python",
    "start": "2131380",
    "end": "2139260"
  },
  {
    "text": "and here's Mary very winking because why not so thanks everybody for coming I",
    "start": "2140930",
    "end": "2147440"
  },
  {
    "text": "hope you enjoyed it and if you have any questions feel free to ask",
    "start": "2147440",
    "end": "2153430"
  },
  {
    "text": "[Applause]",
    "start": "2153920",
    "end": "2156909"
  }
]