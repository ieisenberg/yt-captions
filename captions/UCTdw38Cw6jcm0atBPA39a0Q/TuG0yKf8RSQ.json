[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "hello everyone welcome to flexible authorization with asp.net core",
    "start": "3840",
    "end": "10380"
  },
  {
    "text": "I'm Jason Taylor solution architect for increment as you can see I'm a developer Mentor speaker and trainer and most",
    "start": "10380",
    "end": "17760"
  },
  {
    "text": "recently awarded Microsoft MVP in developer Technologies I've been working with net since 1.0 in",
    "start": "17760",
    "end": "24660"
  },
  {
    "text": "2002 and before that I was doing VB script and classic asp",
    "start": "24660",
    "end": "29880"
  },
  {
    "text": "today we're here to talk about flexible authorization with asp.net core and before we can dive into that very",
    "start": "29880",
    "end": "36960"
  },
  {
    "start": "30000",
    "end": "170000"
  },
  {
    "text": "interesting topic we have to cover a little bit of background so let's start with the basics",
    "start": "36960",
    "end": "43260"
  },
  {
    "text": "authentication is the process which determines a user's identity whereas authorization is the process",
    "start": "43260",
    "end": "50280"
  },
  {
    "text": "that determines which resources a user can access while authentication is independent of",
    "start": "50280",
    "end": "56219"
  },
  {
    "text": "authorization it's important to remember that authorization requires an authenticated user",
    "start": "56219",
    "end": "63300"
  },
  {
    "text": "so authorization determines access to resources but what exactly is a resource",
    "start": "63300",
    "end": "68580"
  },
  {
    "text": "well it could include many things such as access to a feature in a system files",
    "start": "68580",
    "end": "73979"
  },
  {
    "text": "on a file system or data in a database authorization also includes defining and",
    "start": "73979",
    "end": "81000"
  },
  {
    "text": "enforcing access control rules as policies which are then used by the system to Grant or reject access",
    "start": "81000",
    "end": "87720"
  },
  {
    "text": "requests to specified resources the focus of this talk will be",
    "start": "87720",
    "end": "92759"
  },
  {
    "text": "authorization with asp.net core I'll demonstrate a basic approach using",
    "start": "92759",
    "end": "98880"
  },
  {
    "text": "role-based access control and you'll see that for a sufficiently complex system that that approach will slow developer",
    "start": "98880",
    "end": "106380"
  },
  {
    "text": "productivity and decrease overall maintainability then by extending the ISP net core",
    "start": "106380",
    "end": "112500"
  },
  {
    "text": "authorization framework I will demonstrate a flexible approach to overcome those limitations",
    "start": "112500",
    "end": "118680"
  },
  {
    "text": "now in this talk I'll provide some live demonstrations using an app that was built with Blazer webassembly and hosted",
    "start": "118680",
    "end": "125159"
  },
  {
    "text": "on asp.net core and I'll share a link to the code and slides at the end of this talk",
    "start": "125159",
    "end": "131599"
  },
  {
    "text": "so with asp.net core authorization it supports simple authorization capabilities such as allowing access to",
    "start": "132840",
    "end": "140040"
  },
  {
    "text": "an authenticated user but it also includes some very sophisticated checks such as role-based",
    "start": "140040",
    "end": "146300"
  },
  {
    "text": "claims-based policy-based view-based and resource-based authorization",
    "start": "146300",
    "end": "151920"
  },
  {
    "text": "it's easy to create custom authorization policies to verify very specific",
    "start": "151920",
    "end": "157020"
  },
  {
    "text": "requirements and it's also easy to customize the authorization middleware to suit your needs so we have a very",
    "start": "157020",
    "end": "163800"
  },
  {
    "text": "powerful framework Supply in both simple and sophisticated capabilities with the ability to extend it",
    "start": "163800",
    "end": "170640"
  },
  {
    "start": "170000",
    "end": "443000"
  },
  {
    "text": "let's start with some examples in its simplest sense asp.net",
    "start": "170640",
    "end": "176060"
  },
  {
    "text": "authorization uses the authorized attribute you can apply that to a",
    "start": "176060",
    "end": "181200"
  },
  {
    "text": "controller action or razor page in this example the attributes being",
    "start": "181200",
    "end": "186420"
  },
  {
    "text": "applied to the account controller and what this means is that only authenticated users will be able to log",
    "start": "186420",
    "end": "193980"
  },
  {
    "text": "in or log out so clearly that's a problem if we move the authorize",
    "start": "193980",
    "end": "199140"
  },
  {
    "text": "attribute down Anonymous users will be able to access the login action and authenticated users",
    "start": "199140",
    "end": "207239"
  },
  {
    "text": "will be able to access the logout action we also have the allow Anonymous",
    "start": "207239",
    "end": "213000"
  },
  {
    "text": "attribute and so in this case the accounts controller is locked down to authenticated users except for the login",
    "start": "213000",
    "end": "220620"
  },
  {
    "text": "action which will allow Anonymous users asp.net core supports role-based",
    "start": "220620",
    "end": "226560"
  },
  {
    "text": "authorization again using the authorized attribute we can specify which roles are",
    "start": "226560",
    "end": "232019"
  },
  {
    "text": "required to access in this case the user must be authenticated and be a member of",
    "start": "232019",
    "end": "237360"
  },
  {
    "text": "the administrator's role in order to access the administrator controller actions",
    "start": "237360",
    "end": "243659"
  },
  {
    "text": "in this case the user must be authenticated and a member of either the",
    "start": "243659",
    "end": "248940"
  },
  {
    "text": "administrators or the accounts role doesn't have to be both one will be fine",
    "start": "248940",
    "end": "255000"
  },
  {
    "text": "and in this case the user needs to be a member of both so we specified two",
    "start": "255000",
    "end": "260340"
  },
  {
    "text": "authorized attributes and so the user must be a member of Administrators and accounts in order to gain access to the",
    "start": "260340",
    "end": "266759"
  },
  {
    "text": "accounts controller asp.net core also supports policy-based",
    "start": "266759",
    "end": "272340"
  },
  {
    "text": "authorization you can see here we've used the authorize attribute and specified the",
    "start": "272340",
    "end": "277620"
  },
  {
    "text": "employee's only policy this means that for a user to gain access to the employee's controller they must be",
    "start": "277620",
    "end": "284460"
  },
  {
    "text": "authenticated and satisfy the requirements of the employees only policy",
    "start": "284460",
    "end": "290340"
  },
  {
    "text": "this is the definition of the policy where we've specified the name as employees only and the only requirement",
    "start": "290340",
    "end": "297060"
  },
  {
    "text": "it has is that the user has a single claim the employee number Claim we're",
    "start": "297060",
    "end": "302759"
  },
  {
    "text": "not concerned with the value of the claim or what their employee number just that they have it",
    "start": "302759",
    "end": "309139"
  },
  {
    "text": "authorization and Blazer webassembly is of course very similar being that it's another asp.net core technology it",
    "start": "309139",
    "end": "316020"
  },
  {
    "text": "supports the same basic authorization capabilities such as allowing access to an authenticated user or allowing access",
    "start": "316020",
    "end": "323580"
  },
  {
    "text": "to Anonymous user it includes the same sophisticated authorization capabilities such as role",
    "start": "323580",
    "end": "329759"
  },
  {
    "text": "claims and policy based and it also includes a number of helpful authorization components such as the",
    "start": "329759",
    "end": "336660"
  },
  {
    "text": "authorized View and the authorized route View and we'll take a look at some examples",
    "start": "336660",
    "end": "342180"
  },
  {
    "text": "need to remember that with Blazer and other front-end Technologies plays a web assembly in this case the authorization",
    "start": "342180",
    "end": "348479"
  },
  {
    "text": "is only used for UI ux so it's to provide a great user experience but this",
    "start": "348479",
    "end": "353940"
  },
  {
    "text": "these checks can easily be bypassed and so the authorization that happens on the server is very important",
    "start": "353940",
    "end": "361199"
  },
  {
    "text": "let's look at some examples we can apply the authorized attribute to a routable page in this case the home page will",
    "start": "361199",
    "end": "368340"
  },
  {
    "text": "only be accessible to authenticated users next up we're using the allow Anonymous",
    "start": "368340",
    "end": "375000"
  },
  {
    "text": "attribute if we like with blazer webassembly we can lock the whole site down to authorized users if that's the",
    "start": "375000",
    "end": "381660"
  },
  {
    "text": "case this allow Anonymous attribute will allow unauthenticated users access to",
    "start": "381660",
    "end": "386819"
  },
  {
    "text": "the login page we can support role-based authorization in this case the counter page is only",
    "start": "386819",
    "end": "393660"
  },
  {
    "text": "accessible to members of the administrators or accounts role we can support policy-based authorization the user's page is only",
    "start": "393660",
    "end": "401280"
  },
  {
    "text": "accessible to users who meet the requirements of the employee's only policy",
    "start": "401280",
    "end": "407520"
  },
  {
    "text": "and we have the authorized view component which we can use to selectively display content you can see",
    "start": "407520",
    "end": "413819"
  },
  {
    "text": "for the home link it'll be available to authenticated users the counter link is",
    "start": "413819",
    "end": "419400"
  },
  {
    "text": "restricted you'll need to be a member of either the administrators or the accounts role and finally the user's",
    "start": "419400",
    "end": "425880"
  },
  {
    "text": "link is restricted you'll need to satisfy the requirements of the employees only policy",
    "start": "425880",
    "end": "431580"
  },
  {
    "text": "here we have an alternate use of the authorized view component for not authorized users this will show the",
    "start": "431580",
    "end": "438600"
  },
  {
    "text": "login page so in this case that means anyone who's not authenticated",
    "start": "438600",
    "end": "444020"
  },
  {
    "start": "443000",
    "end": "822000"
  },
  {
    "text": "let's dive into our first demo in this demo we're going to add a role to an",
    "start": "444360",
    "end": "450360"
  },
  {
    "text": "existing application now this will be the basic approach to authorization using role-based access control and the",
    "start": "450360",
    "end": "457020"
  },
  {
    "text": "scenario is that we have some Auditors coming on board and we need to create an Auditor's role which gives them the",
    "start": "457020",
    "end": "463440"
  },
  {
    "text": "necessary permissions within the system so I've built a simple application as I",
    "start": "463440",
    "end": "470099"
  },
  {
    "text": "mentioned this is Blazer web assembly hosted on asp.net core and I'll go ahead and log in",
    "start": "470099",
    "end": "476280"
  },
  {
    "text": "log in as the administrator and we can have a look at these features",
    "start": "476280",
    "end": "482160"
  },
  {
    "text": "so we have the home page the counter page that's currently restricted to administrators or the accounts team",
    "start": "482160",
    "end": "489000"
  },
  {
    "text": "because they like to count things the fetch data one that's restricted to the administrators or operations because",
    "start": "489000",
    "end": "495840"
  },
  {
    "text": "they need to check the weather we have users most roles can view this",
    "start": "495840",
    "end": "501060"
  },
  {
    "text": "page but only administrators can edit now if we go edit on the auditor you can",
    "start": "501060",
    "end": "506759"
  },
  {
    "text": "see we're able to specify which roles this user will be a member of accounts administrators or operations and of",
    "start": "506759",
    "end": "512820"
  },
  {
    "text": "course we'll need to add an Auditor's role because none of the existing roles will will meet the authorization",
    "start": "512820",
    "end": "518279"
  },
  {
    "text": "requirements we also have claims which is just there for development purposes at the moment we can see that there's an",
    "start": "518279",
    "end": "524580"
  },
  {
    "text": "interesting roles claim and it specifies what role I have as an administrator",
    "start": "524580",
    "end": "530040"
  },
  {
    "text": "so if I'd like to create a new role I'll need to do that in code I'm currently doing it in my basic auth.server project",
    "start": "530040",
    "end": "539399"
  },
  {
    "text": "and I have a DB initializer so if I expand that out",
    "start": "539399",
    "end": "544500"
  },
  {
    "text": "you can see here I've defined some roles as constants I'm going to duplicate this one",
    "start": "544500",
    "end": "550320"
  },
  {
    "text": "and re use multi-cursor and we'll uh well that's not multico so hang on",
    "start": "550320",
    "end": "557339"
  },
  {
    "text": "there we go we'll create our Auditors role you can see that the users come with the default",
    "start": "557339",
    "end": "562920"
  },
  {
    "text": "password I watched a talk on hacking on Wednesday and they said this password was very popular at the moment so I",
    "start": "562920",
    "end": "569820"
  },
  {
    "text": "chose that one so everyone it's the secure version of course right because it's got the exclamation mark",
    "start": "569820",
    "end": "576060"
  },
  {
    "text": "all right so now we need to add the role so I'll duplicate this",
    "start": "576060",
    "end": "581880"
  },
  {
    "text": "use multi-cursor again I love that feature auditors",
    "start": "581880",
    "end": "587459"
  },
  {
    "text": "and that's about all we need to do so we've created the Auditors role",
    "start": "587459",
    "end": "593220"
  },
  {
    "text": "we need it to kind of end up in the database so I'll go ahead and restart the app",
    "start": "593220",
    "end": "600120"
  },
  {
    "text": "give that a moment and then so the next thing we need to do is we need to log in as the administrator or go back as the",
    "start": "600120",
    "end": "606120"
  },
  {
    "text": "administrator assign the role to the auditor then we can log in the auditor and see see if they have access yet",
    "start": "606120",
    "end": "614100"
  },
  {
    "text": "let's see users auditor",
    "start": "614100",
    "end": "619740"
  },
  {
    "text": "Auditors save all right so the audit has been assigned the Auditors role I can log out",
    "start": "619740",
    "end": "626040"
  },
  {
    "text": "log back in change that to auditor",
    "start": "626040",
    "end": "632399"
  },
  {
    "text": "and of course it's the same password so that users don't have to remember too many passwords",
    "start": "634800",
    "end": "640320"
  },
  {
    "text": "all right now unfortunately the auditor still doesn't have access to anything right we've created the role but we're",
    "start": "640320",
    "end": "647160"
  },
  {
    "text": "using role-based access control so now we have to go and put role-based Access Control checks throughout our code we",
    "start": "647160",
    "end": "653640"
  },
  {
    "text": "want them to have access to the counter fetch data and the list of users so",
    "start": "653640",
    "end": "658740"
  },
  {
    "text": "let's do that now we'll start on the front end we've got a lot of work to do so inside of client I'll go to pages and",
    "start": "658740",
    "end": "666360"
  },
  {
    "text": "I'll start with counter that's really easy we have the authorize attribute here so I'll go ahead and add Auditors",
    "start": "666360",
    "end": "672779"
  },
  {
    "text": "as one of the roles that will be able to access the page now we'd like to do fetch data that's",
    "start": "672779",
    "end": "678180"
  },
  {
    "text": "for the weather forecasts we'll include Auditors there too",
    "start": "678180",
    "end": "683420"
  },
  {
    "text": "and we need to do users and so this is for the list of users",
    "start": "684120",
    "end": "690060"
  },
  {
    "text": "we'll give Auditors the ability to see the users now that'll give us access to the pages",
    "start": "690060",
    "end": "696720"
  },
  {
    "text": "but it doesn't open up the nav menu so let's go and adjust that too so that's inside of shared nav menu",
    "start": "696720",
    "end": "705000"
  },
  {
    "text": "here we have our home link our counter link",
    "start": "705000",
    "end": "710100"
  },
  {
    "text": "all right so open that one up to auditus fetch data",
    "start": "710100",
    "end": "716100"
  },
  {
    "text": "same and use a list same",
    "start": "716100",
    "end": "721320"
  },
  {
    "text": "okay so that should open up the front end nicely let's see if it's changed yeah Okay so we've got counter we can",
    "start": "721320",
    "end": "728519"
  },
  {
    "text": "click on that we can go to fetch data we can access it okay but we can't get the back end data because the API is still",
    "start": "728519",
    "end": "735480"
  },
  {
    "text": "locked down we haven't done the access control checks on the back end and user",
    "start": "735480",
    "end": "740640"
  },
  {
    "text": "is the same so let's move it over to the server now so we'll start with the forecast",
    "start": "740640",
    "end": "747720"
  },
  {
    "text": "controller so the weather forecast controller is currently open to administrators and",
    "start": "747720",
    "end": "753240"
  },
  {
    "text": "operations so extend that one and we'll give them access to the user's controller",
    "start": "753240",
    "end": "760639"
  },
  {
    "text": "and we'll give them access to the roles controller because they'll need to be able to see the list of roles",
    "start": "760920",
    "end": "766860"
  },
  {
    "text": "they're probably getting a little bit more access than what they need here and that's one of the issues with role-based",
    "start": "766860",
    "end": "772320"
  },
  {
    "text": "Access Control it's not fine-grained okay so we have to do a little bit more work",
    "start": "772320",
    "end": "778200"
  },
  {
    "text": "but we won't do that today so I've saved those changes it should be ticking over okay let's see yeah we can",
    "start": "778200",
    "end": "785339"
  },
  {
    "text": "see the list of users we can fetch some data if we click edit we get access denied because I didn't",
    "start": "785339",
    "end": "791940"
  },
  {
    "text": "open up the edit page so we've probably cleaned that up as well but I think we've done enough work",
    "start": "791940",
    "end": "799019"
  },
  {
    "text": "so skipping back so we added the new Auditors role to the existing access to",
    "start": "799019",
    "end": "804360"
  },
  {
    "text": "the existing application using basic authorization techniques so role-based Access Control you can see it was quite",
    "start": "804360",
    "end": "811440"
  },
  {
    "text": "a lot of work it wasn't simple to add at all and we'll we'll have to do that anytime we introduce a role we'll also",
    "start": "811440",
    "end": "818760"
  },
  {
    "text": "have to do that if authorization requirements change so with that in mind let's think about",
    "start": "818760",
    "end": "824579"
  },
  {
    "start": "822000",
    "end": "1070000"
  },
  {
    "text": "what would flexible authorization look like what would that mean well first it",
    "start": "824579",
    "end": "829740"
  },
  {
    "text": "would be easy to add new roles and to configure access control for those roles",
    "start": "829740",
    "end": "835680"
  },
  {
    "text": "it would be easy to configure access control for existing roles requirements",
    "start": "835680",
    "end": "841500"
  },
  {
    "text": "change permissions change we need to be able to do that quickly it would be good if we could remove",
    "start": "841500",
    "end": "847320"
  },
  {
    "text": "roles without impacting existing Access Control checks obviously we have no hope",
    "start": "847320",
    "end": "852660"
  },
  {
    "text": "of doing that now because we have to go and update the front end and the back end and build test deploy publish right",
    "start": "852660",
    "end": "859680"
  },
  {
    "text": "there's so much to do it'd be great if we can easily access uh",
    "start": "859680",
    "end": "864779"
  },
  {
    "text": "view the access control policies now I've got us covered there I've got a uh",
    "start": "864779",
    "end": "871139"
  },
  {
    "text": "I've got a Wiki a little bit of a markdown document that we can maintain unfortunately it's already out of date",
    "start": "871139",
    "end": "877320"
  },
  {
    "text": "but as a developer I love documentation so I'm going to get right back on that uh it'd be really great if we could",
    "start": "877320",
    "end": "885060"
  },
  {
    "text": "support all of the all of the above as standard application features okay I",
    "start": "885060",
    "end": "890880"
  },
  {
    "text": "don't want to have to maintain documentation I don't want to have to Code test and deploy these are simple",
    "start": "890880",
    "end": "896639"
  },
  {
    "text": "things so now let's do another demonstration let's do a demonstration where we",
    "start": "896639",
    "end": "901860"
  },
  {
    "text": "demonstrate what it would look like adding a new role with the flexible authorization approach",
    "start": "901860",
    "end": "908279"
  },
  {
    "text": "I'll close some of this down so it doesn't get in our way",
    "start": "908279",
    "end": "913100"
  },
  {
    "text": "and we'll head over here so this is the same application which has been upgraded",
    "start": "916500",
    "end": "922440"
  },
  {
    "text": "with flexible authorization capabilities so I've extended ASP netcore authorization to support for",
    "start": "922440",
    "end": "928860"
  },
  {
    "text": "missions-based Access Control so we want to add the New Order to roll I'm logged in as an administrator I'm",
    "start": "928860",
    "end": "935699"
  },
  {
    "text": "going to shoot over to roles that's a new feature you can see that I can edit and delete",
    "start": "935699",
    "end": "940740"
  },
  {
    "text": "roles and I'll add in auditors I'll jump over to access control we",
    "start": "940740",
    "end": "947220"
  },
  {
    "text": "don't need to maintain a Wiki document anymore we can see Access Control at any point and we can configure it now we'd",
    "start": "947220",
    "end": "953820"
  },
  {
    "text": "like Auditors to have access to view the users to count things and to check the weather you can see administrators",
    "start": "953820",
    "end": "960540"
  },
  {
    "text": "automatically get access to everything including new permissions that we Define",
    "start": "960540",
    "end": "966000"
  },
  {
    "text": "those changes are saved automatically so I can go ahead and log out and log back in as an as an auditor",
    "start": "966000",
    "end": "974120"
  },
  {
    "text": "all right so that's not working exactly as I'd hoped what have I done wrong I didn't assign",
    "start": "978720",
    "end": "985800"
  },
  {
    "text": "the role to the auditor all right let's get back out I'm glad the passwords are",
    "start": "985800",
    "end": "991139"
  },
  {
    "text": "all the same admin that's who that's who we want to be that's great",
    "start": "991139",
    "end": "997620"
  },
  {
    "text": "users auditor Auditor's role there we go",
    "start": "997620",
    "end": "1003680"
  },
  {
    "text": "logging out back in",
    "start": "1003680",
    "end": "1007839"
  },
  {
    "text": "order to there we go so they've got access to the counter they've got access to fetch data",
    "start": "1009079",
    "end": "1014959"
  },
  {
    "text": "they can see the users we got rid of the edit link we've got that little fine-grained Access Control now so",
    "start": "1014959",
    "end": "1020420"
  },
  {
    "text": "that's a much better experience so you've seen the basic approach you've",
    "start": "1020420",
    "end": "1025459"
  },
  {
    "text": "seen the flexible approach let's compare a little bit so the basic approach required us to",
    "start": "1025459",
    "end": "1031220"
  },
  {
    "text": "write code changes required us to test we didn't do that but we'll get to that build and deploy probably fix some bugs",
    "start": "1031220",
    "end": "1038660"
  },
  {
    "text": "you know that it's it's it's hard to get role-based access control right especially if there are a lot of",
    "start": "1038660",
    "end": "1045500"
  },
  {
    "text": "features and documentation which we'll definitely get to flexible approach well as developers we",
    "start": "1045500",
    "end": "1053179"
  },
  {
    "text": "weren't really required what I just did could have been completed by an administrator or an authorized end user",
    "start": "1053179",
    "end": "1059299"
  },
  {
    "text": "so we were left with free time so that means that we could have been working on a new feature or a bug fix something a",
    "start": "1059299",
    "end": "1065960"
  },
  {
    "text": "little bit more exciting delivering business value in other ways",
    "start": "1065960",
    "end": "1071059"
  },
  {
    "text": "so one more demonstration using flexible authorization let's add a new permission I'd like the orders to have the",
    "start": "1071059",
    "end": "1077660"
  },
  {
    "text": "capability to view that access control grid but not to configure it so we'll have to create a new permission for that",
    "start": "1077660",
    "end": "1086380"
  },
  {
    "text": "with this implementation I'm storing the permission in an enumeration and it's called",
    "start": "1087020",
    "end": "1093679"
  },
  {
    "text": "permissions so this is a bit Flags enum and we'll go into that a little bit",
    "start": "1093679",
    "end": "1099860"
  },
  {
    "text": "view Access Control will be the next permission that I create",
    "start": "1099860",
    "end": "1106179"
  },
  {
    "text": "all right now that that's in place I need to do",
    "start": "1107660",
    "end": "1113240"
  },
  {
    "text": "some authorization checks this time instead of role-based authorization checks we'll be doing permissions based",
    "start": "1113240",
    "end": "1119080"
  },
  {
    "text": "authorization checks so let's do the front end first again I want them to have access to access",
    "start": "1119080",
    "end": "1125660"
  },
  {
    "text": "control so we'll start with the nav menu you can see here that we're using a",
    "start": "1125660",
    "end": "1132140"
  },
  {
    "text": "flexible authorized view component now this is a component that I created to extend the out of the box authorized",
    "start": "1132140",
    "end": "1138679"
  },
  {
    "text": "view component along with allowing me to specify roles or policies I can also now",
    "start": "1138679",
    "end": "1144320"
  },
  {
    "text": "specify permissions so you can see if you want to access counter you need the counter permission",
    "start": "1144320",
    "end": "1150260"
  },
  {
    "text": "if you want to access fetch data you need the forecast permission let's have a find Access Control So",
    "start": "1150260",
    "end": "1157280"
  },
  {
    "text": "currently it's locked down to just those that can configure Access Control we'll change it over to configure or",
    "start": "1157280",
    "end": "1164360"
  },
  {
    "text": "View so that should open up the nav menu",
    "start": "1164360",
    "end": "1169460"
  },
  {
    "text": "now we need to change the page so if we go to the access control page which is",
    "start": "1169460",
    "end": "1175640"
  },
  {
    "text": "in admin and open this up you can see the whole page is locked down to configure so",
    "start": "1175640",
    "end": "1181100"
  },
  {
    "text": "we'll open it up to view as well",
    "start": "1181100",
    "end": "1184960"
  },
  {
    "text": "and scrolling down we have a little check box here and this checkbox is going to enable users to toggle that",
    "start": "1188240",
    "end": "1194780"
  },
  {
    "text": "permission now we only want to allow users with configure Access Control to",
    "start": "1194780",
    "end": "1202100"
  },
  {
    "text": "actually be able to change access control so we'll go ahead I've got some code here which is going to use the",
    "start": "1202100",
    "end": "1208640"
  },
  {
    "text": "flexible authorized view component instead of this just having a checkbox",
    "start": "1208640",
    "end": "1214400"
  },
  {
    "text": "so the flexible authorized view component has specified an access control check it requires configure",
    "start": "1214400",
    "end": "1221360"
  },
  {
    "text": "Access Control now if you're authorized it will show a checkbox which will enable editing if you're not authorized",
    "start": "1221360",
    "end": "1228620"
  },
  {
    "text": "that checkbox will be disabled and will not allow editing so that's fairly straightforward",
    "start": "1228620",
    "end": "1235640"
  },
  {
    "text": "let me think so now we need to go to the server and apply some permissions based",
    "start": "1235640",
    "end": "1240799"
  },
  {
    "text": "Access Control there so if I head on over to flexible auth server",
    "start": "1240799",
    "end": "1247039"
  },
  {
    "text": "controllers and admin access control the whole controller is locked down to configure",
    "start": "1247039",
    "end": "1253940"
  },
  {
    "text": "access control so we'll take that we've got two actions one to get the",
    "start": "1253940",
    "end": "1259760"
  },
  {
    "text": "configuration and one to update so configure access control is required to update",
    "start": "1259760",
    "end": "1266299"
  },
  {
    "text": "and view Access Control",
    "start": "1266299",
    "end": "1272660"
  },
  {
    "text": "actually both is required to get the configuration so it's a either or",
    "start": "1272660",
    "end": "1279880"
  },
  {
    "text": "I think that should do it let's find out I'll go ahead and restart just to be",
    "start": "1283400",
    "end": "1289220"
  },
  {
    "text": "sure looks like uh we'll log in as admin",
    "start": "1289220",
    "end": "1296080"
  },
  {
    "text": "it'll probably refresh that actually give it a sec I'll go for it",
    "start": "1296240",
    "end": "1303140"
  },
  {
    "text": "plugging in I don't want to log in as admin I actually I do that's lucky",
    "start": "1303140",
    "end": "1309320"
  },
  {
    "text": "it's gonna do it it's gonna fail just waiting",
    "start": "1309320",
    "end": "1316340"
  },
  {
    "text": "let me try again oh there we go okay so we're logged in as admin we can go to access control we",
    "start": "1316340",
    "end": "1323720"
  },
  {
    "text": "can see our new view Access Control permission automatically assigned to administrators we'll assign it to",
    "start": "1323720",
    "end": "1329840"
  },
  {
    "text": "Auditors as well that's saved we'll log out log back in",
    "start": "1329840",
    "end": "1335720"
  },
  {
    "text": "and change this over to auditor we can see Access Control we can click",
    "start": "1335720",
    "end": "1341600"
  },
  {
    "text": "on it and we can see how it's configured so now the Auditors have access to that",
    "start": "1341600",
    "end": "1346880"
  },
  {
    "text": "so that took a little bit of work right but that's normal we built in a new feature we implemented a new",
    "start": "1346880",
    "end": "1353000"
  },
  {
    "text": "authorization requirement so expect to do some work when the authorization requirements change",
    "start": "1353000",
    "end": "1359919"
  },
  {
    "start": "1359000",
    "end": "1554000"
  },
  {
    "text": "so now let's talk about this flexible authorization engine the internal workings of it and then we'll dive in",
    "start": "1360260",
    "end": "1366860"
  },
  {
    "text": "and have a look at the code and see how it all fits together so with this flexible authorization",
    "start": "1366860",
    "end": "1372919"
  },
  {
    "text": "approach we need to create the necessary roles and permissions we're using role-based and permissions-based access",
    "start": "1372919",
    "end": "1379280"
  },
  {
    "text": "control together we need to assign permissions to roles as required as defined by require",
    "start": "1379280",
    "end": "1385400"
  },
  {
    "text": "business requirements and we also need to add an additional claim to the",
    "start": "1385400",
    "end": "1390860"
  },
  {
    "text": "authenticated user so we'll add the permissions claim so now we'll have the role claim and the permissions claim",
    "start": "1390860",
    "end": "1396919"
  },
  {
    "text": "we'll have permissions based access control as required we've done that using the authorize attribute using the",
    "start": "1396919",
    "end": "1404240"
  },
  {
    "text": "authorized View and there's also a service in there the authorization service which can do for missions-based",
    "start": "1404240",
    "end": "1410720"
  },
  {
    "text": "Access Control checks and we will make this work by using Dynamic authorization policies",
    "start": "1410720",
    "end": "1418640"
  },
  {
    "text": "so this is policy-based authorization so we're combining three things to make this work role-based permission based",
    "start": "1418640",
    "end": "1426200"
  },
  {
    "text": "which is new we're adding that in and policy based so we'll need to manage our roles we",
    "start": "1426200",
    "end": "1432320"
  },
  {
    "text": "probably all understand that roles Define a logical group interview users sometimes it might represent an",
    "start": "1432320",
    "end": "1438440"
  },
  {
    "text": "organizational Department such as accounts or operations administrators or any authenticated",
    "start": "1438440",
    "end": "1444320"
  },
  {
    "text": "sorry any authorized user really can create a role as required administrators will assign permissions",
    "start": "1444320",
    "end": "1451220"
  },
  {
    "text": "to roles and we now need to start avoiding role-based authorization checks",
    "start": "1451220",
    "end": "1457580"
  },
  {
    "text": "okay if we're using the flexible approach then any checks in code should be permissions based they will only",
    "start": "1457580",
    "end": "1464600"
  },
  {
    "text": "change if the feature changes if we have a new feature to introduce all the authorization requirements around that",
    "start": "1464600",
    "end": "1470480"
  },
  {
    "text": "feature change role-based tend to change because of organizational changes restructures that",
    "start": "1470480",
    "end": "1477020"
  },
  {
    "text": "sort of thing permissions we'll use those we need to",
    "start": "1477020",
    "end": "1482299"
  },
  {
    "text": "manage those they define granular access to resources developers create permissions as",
    "start": "1482299",
    "end": "1488240"
  },
  {
    "text": "necessary but permissions are not assigned directly to a user okay permissions are",
    "start": "1488240",
    "end": "1494419"
  },
  {
    "text": "assigned to a role and the user will inherit the permissions of all assigned",
    "start": "1494419",
    "end": "1500000"
  },
  {
    "text": "roles so they can be assigned multiple roles and they will get all of those permissions",
    "start": "1500000",
    "end": "1505280"
  },
  {
    "text": "the authorization engine as mentioned it's built entirely using policy-based authorization so these are out of the",
    "start": "1505280",
    "end": "1512360"
  },
  {
    "text": "box features that we're using we've got a custom authorized attribute that we can specify the required",
    "start": "1512360",
    "end": "1519980"
  },
  {
    "text": "permissions that set of required permissions is actually translated into a policy name",
    "start": "1519980",
    "end": "1528020"
  },
  {
    "text": "and it's a special little name it might say permissions 7 or permissions 101 and",
    "start": "1528020",
    "end": "1533840"
  },
  {
    "text": "that number is important that represents the permissions required and that policy will then be dynamically",
    "start": "1533840",
    "end": "1540620"
  },
  {
    "text": "created using a custom policy provider and so",
    "start": "1540620",
    "end": "1546260"
  },
  {
    "text": "essentially the policy will be created on the fly to enforce the permissions that we've specified are required",
    "start": "1546260",
    "end": "1554419"
  },
  {
    "text": "so now we can have a look at the code we'll start by revisiting our",
    "start": "1554419",
    "end": "1559520"
  },
  {
    "text": "permissions but I've got a little uh interactive notebook that we can check",
    "start": "1559520",
    "end": "1564620"
  },
  {
    "start": "1564000",
    "end": "1724000"
  },
  {
    "text": "out to understand that a little bit better so as you saw before the permissions are",
    "start": "1564620",
    "end": "1570320"
  },
  {
    "text": "stored using c-sharp enums and I have a simpler example here you can see that",
    "start": "1570320",
    "end": "1575960"
  },
  {
    "text": "they're stored using powers of two and uh each little bit represents a flag",
    "start": "1575960",
    "end": "1582740"
  },
  {
    "text": "so you can see a is one whereas B is one zero and we can combine these flags in",
    "start": "1582740",
    "end": "1590299"
  },
  {
    "text": "really interesting ways so we can specify the user permissions as permission a or C and that essentially",
    "start": "1590299",
    "end": "1597260"
  },
  {
    "text": "equals one plus one zero zero or one zero one do you see how we've",
    "start": "1597260",
    "end": "1605299"
  },
  {
    "text": "brought those flags across combine them together so five distinctly represents a and C",
    "start": "1605299",
    "end": "1613880"
  },
  {
    "text": "and nothing else the required permissions we've specified as a and b or 11 those first two flags",
    "start": "1613880",
    "end": "1622520"
  },
  {
    "text": "now we can output those permissions as a string so user permissions a comma C",
    "start": "1622520",
    "end": "1628460"
  },
  {
    "text": "Straight From the enumeration required permissions A and B",
    "start": "1628460",
    "end": "1633980"
  },
  {
    "text": "we can output permissions as the integer value so you can see user permissions 5",
    "start": "1633980",
    "end": "1640960"
  },
  {
    "text": "required permissions three so a single value to represent the permissions that the user has",
    "start": "1640960",
    "end": "1646940"
  },
  {
    "text": "we can check permissions so looking at the user's permissions they've got ANC the required permissions A or B",
    "start": "1646940",
    "end": "1655279"
  },
  {
    "text": "are they authorized yes because they have permission a we can add permissions using logical or",
    "start": "1655279",
    "end": "1662480"
  },
  {
    "text": "operator so now the user has permissions a b and c we can remove permissions using the",
    "start": "1662480",
    "end": "1669020"
  },
  {
    "text": "logical exclusive or operator so now the user's back to ANC",
    "start": "1669020",
    "end": "1674360"
  },
  {
    "text": "and we can generate policy names based on the permissions so the required",
    "start": "1674360",
    "end": "1680480"
  },
  {
    "text": "permissions are A and B which is equivalent to three so the policy name will be permissions three",
    "start": "1680480",
    "end": "1687140"
  },
  {
    "text": "and so pretty soon I'll show you how asp.net core will take that policy name",
    "start": "1687140",
    "end": "1692179"
  },
  {
    "text": "and generate dynamically generate a policy to enforce those permissions",
    "start": "1692179",
    "end": "1698360"
  },
  {
    "text": "we can update required permissions and a policy name you can see we've changed it a b and c",
    "start": "1698360",
    "end": "1703520"
  },
  {
    "text": "here's another value seven and the policy name would be permission seven",
    "start": "1703520",
    "end": "1708679"
  },
  {
    "text": "we can also get the value of the permissions based on a policy name so",
    "start": "1708679",
    "end": "1714320"
  },
  {
    "text": "it's seven we extract that value we can convert that back to the permissions enumeration and we've got a B and C",
    "start": "1714320",
    "end": "1721039"
  },
  {
    "text": "again so let's have a look at the code now so we've seen",
    "start": "1721039",
    "end": "1726679"
  },
  {
    "start": "1724000",
    "end": "2029000"
  },
  {
    "text": "the permissions enumeration we'll load it up again",
    "start": "1726679",
    "end": "1732260"
  },
  {
    "text": "that's it we also have a permissions provider which is just a helper method to give me",
    "start": "1732260",
    "end": "1738919"
  },
  {
    "text": "a friendly list of permissions so I can display it on The View but the real magic starts within the",
    "start": "1738919",
    "end": "1745700"
  },
  {
    "text": "flexible authorization policy provider so this is extending the default",
    "start": "1745700",
    "end": "1750980"
  },
  {
    "text": "authorization policy provider with asp.net core you can only have one active policy provider and so it'll be",
    "start": "1750980",
    "end": "1758299"
  },
  {
    "text": "our flexible authorization one now the way that this works",
    "start": "1758299",
    "end": "1763760"
  },
  {
    "text": "is we start in this method get policy async given a policy name first thing we",
    "start": "1763760",
    "end": "1770059"
  },
  {
    "text": "do try to get the policy we don't want to generate a brand new policy if it's not",
    "start": "1770059",
    "end": "1776000"
  },
  {
    "text": "needed so we'll just try to get it if the policy doesn't exist and that particular policy",
    "start": "1776000",
    "end": "1782899"
  },
  {
    "text": "is one of our special ones you know it starts with permissions and ends with a number whoops",
    "start": "1782899",
    "end": "1788480"
  },
  {
    "text": "then we'll go ahead and create a policy to match that first thing we do is we extract the",
    "start": "1788480",
    "end": "1794659"
  },
  {
    "text": "permissions from the policy name then we build a new authorization policy",
    "start": "1794659",
    "end": "1800480"
  },
  {
    "text": "we add One requirement that the user must have these permissions",
    "start": "1800480",
    "end": "1806720"
  },
  {
    "text": "we build it and we add it and we return it and of course if the policy already exists we return it and if it's not one",
    "start": "1806720",
    "end": "1814220"
  },
  {
    "text": "of our policies that we want to generate then what gets returned is null which is the normal behavior for I believe for",
    "start": "1814220",
    "end": "1820640"
  },
  {
    "text": "this default authorization policy provider so this is building the policy let's",
    "start": "1820640",
    "end": "1825799"
  },
  {
    "text": "dive in and have a look at the requirement the permission authorization requirement",
    "start": "1825799",
    "end": "1831020"
  },
  {
    "text": "so you can see here this is implementing eye authorization requirement from asp.net core but it's just a container",
    "start": "1831020",
    "end": "1838460"
  },
  {
    "text": "for data it just contains the required permissions so what is actually going to",
    "start": "1838460",
    "end": "1843860"
  },
  {
    "text": "do the check it is the permission authorization Handler",
    "start": "1843860",
    "end": "1850940"
  },
  {
    "text": "and this is where we retrieve the user we retrieved the roles claim we build",
    "start": "1850940",
    "end": "1857720"
  },
  {
    "text": "the permissions claim uh sorry we Sorry in this one actually we just retrieved the permissions claim and then we check",
    "start": "1857720",
    "end": "1864440"
  },
  {
    "text": "against the user's permissions and the required permissions so you can see here",
    "start": "1864440",
    "end": "1869659"
  },
  {
    "text": "we retrieve the claim if it doesn't exist we bail and that means that the user is not authorized as per this",
    "start": "1869659",
    "end": "1875840"
  },
  {
    "text": "requirement if the permissions claim value is not valid we bail",
    "start": "1875840",
    "end": "1882080"
  },
  {
    "text": "otherwise we cast it into a permissions type we check to see if they have the required permissions and if they do the",
    "start": "1882080",
    "end": "1890000"
  },
  {
    "text": "requirement succeeds and we return if they don't then we bail again okay",
    "start": "1890000",
    "end": "1897260"
  },
  {
    "text": "nice and simple we're just extending asp.net core",
    "start": "1897260",
    "end": "1903020"
  },
  {
    "text": "let's have a look what else have we got here so this is the authorized attribute",
    "start": "1903020",
    "end": "1909559"
  },
  {
    "text": "we've been using that but we haven't looked at the internal workings so this particular one is just extending the",
    "start": "1909559",
    "end": "1916580"
  },
  {
    "text": "asp.net core authorization authorizer tribute and you can see",
    "start": "1916580",
    "end": "1922399"
  },
  {
    "text": "we're adding a new Constructor so we can pass in the permissions nice to have",
    "start": "1922399",
    "end": "1928039"
  },
  {
    "text": "and we have this permissions property what we're doing here we're not storing",
    "start": "1928039",
    "end": "1934220"
  },
  {
    "text": "the permissions we're generating the policy name and storing that so even at this level with",
    "start": "1934220",
    "end": "1940520"
  },
  {
    "text": "our custom authorized attribute we're just using policy-based authorization",
    "start": "1940520",
    "end": "1947020"
  },
  {
    "text": "what else do we have we've got our custom claim type but that's just for the claim name",
    "start": "1947480",
    "end": "1953720"
  },
  {
    "text": "we've got the eye authorization service extensions which is great so when you're doing authorization checks with asp.net",
    "start": "1953720",
    "end": "1960740"
  },
  {
    "text": "core sometimes it's nice to use the eye authorization server so if you have some procedural checks some code that where",
    "start": "1960740",
    "end": "1967159"
  },
  {
    "text": "you want to do certain authorization checks you can use this service so I've gone ahead and built an extension on it",
    "start": "1967159",
    "end": "1973940"
  },
  {
    "text": "so you can go ahead and do permissions-based authorization checks",
    "start": "1973940",
    "end": "1979520"
  },
  {
    "text": "should cover all of the bases let's see if we've looked at the Handler",
    "start": "1979520",
    "end": "1984740"
  },
  {
    "text": "we've looked at the requirement we've looked at permissions we didn't look at the policy name helper this one's very",
    "start": "1984740",
    "end": "1989899"
  },
  {
    "text": "straightforward it's responsible for generating a policy name given a set of permissions it's",
    "start": "1989899",
    "end": "1996019"
  },
  {
    "text": "responsible for getting the permissions from a policy name and also checking to",
    "start": "1996019",
    "end": "2001120"
  },
  {
    "text": "see if it is a valid policy name I think I need a better method name for that I think I need to say is this a",
    "start": "2001120",
    "end": "2007539"
  },
  {
    "text": "permissions policy name or is this a permissions policy something a little bit more descriptive but that's the",
    "start": "2007539",
    "end": "2013299"
  },
  {
    "text": "point of it so check if it's one of our policies that we'd like to dynamically generate",
    "start": "2013299",
    "end": "2019679"
  },
  {
    "text": "all right I think that is it",
    "start": "2020260",
    "end": "2027960"
  },
  {
    "text": "okay so today we looked at authorization with asp.net core I demonstrated a basic",
    "start": "2028899",
    "end": "2036340"
  },
  {
    "start": "2029000",
    "end": "2127000"
  },
  {
    "text": "approach to authorization using role-based access control now this is a very typical approach so I'm sure a lot",
    "start": "2036340",
    "end": "2042820"
  },
  {
    "text": "of us here have used it with this approach we saw that a simple requirement such as adding an auditor",
    "start": "2042820",
    "end": "2049540"
  },
  {
    "text": "role took a lot of effort we had to write code we had to test that code build deploy document probably fix some",
    "start": "2049540",
    "end": "2056858"
  },
  {
    "text": "bugs we then looked at the flexible authorization approach now the flexible",
    "start": "2056859",
    "end": "2062200"
  },
  {
    "text": "authorization approach was a dream if we needed to add a new role or a permission",
    "start": "2062200",
    "end": "2067599"
  },
  {
    "text": "we combined role-based authorization with permissions based authorization",
    "start": "2067599",
    "end": "2074200"
  },
  {
    "text": "which we introduced and we used policy-based authorization to dynamically generate policies to enforce",
    "start": "2074200",
    "end": "2081700"
  },
  {
    "text": "those permissions now if you have a simple application with a small user base the flexible",
    "start": "2081700",
    "end": "2089020"
  },
  {
    "text": "approach to authorization is probably Overkill you could get by with the basic approach",
    "start": "2089020",
    "end": "2094780"
  },
  {
    "text": "but for most large production applications especially in in big Enterprises the flexible approach to",
    "start": "2094780",
    "end": "2102040"
  },
  {
    "text": "authorization is essential with the flexible approach you'll be",
    "start": "2102040",
    "end": "2107619"
  },
  {
    "text": "able to isolate your code base from organizational changes it'll free up developers to focus on",
    "start": "2107619",
    "end": "2115000"
  },
  {
    "text": "delivering business value such as fixing bugs or delivering new features and it will put the power of Access",
    "start": "2115000",
    "end": "2121180"
  },
  {
    "text": "Control into the hands of Administrators and other authorized users",
    "start": "2121180",
    "end": "2127859"
  },
  {
    "start": "2127000",
    "end": "2143000"
  },
  {
    "text": "thanks for attending my talk I hope you've enjoyed it if you'd like to learn more you can check out the code and",
    "start": "2128200",
    "end": "2134560"
  },
  {
    "text": "slides on GitHub you'll find it at github.com forward slash Jason Taylor Dev forward slash flexible Dash asp.net",
    "start": "2134560",
    "end": "2141579"
  },
  {
    "text": "core Dash authorization",
    "start": "2141579",
    "end": "2145260"
  }
]