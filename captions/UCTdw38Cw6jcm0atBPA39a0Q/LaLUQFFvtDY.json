[
  {
    "start": "0",
    "end": "300000"
  },
  {
    "text": "hi everybody my name is Norman Johansson I work for Amazon web services back in",
    "start": "2159",
    "end": "7639"
  },
  {
    "text": "Seattle um and today we're going to talk about adus serverless with.net core so this talk is not going to be too much",
    "start": "7639",
    "end": "13719"
  },
  {
    "text": "about what is serverless we're just going to focus mostly on the adus implementation because I know there's already a lot of sessions at this",
    "start": "13719",
    "end": "19720"
  },
  {
    "text": "conference already on serverless so we're going to go over is",
    "start": "19720",
    "end": "25359"
  },
  {
    "text": "what are the common edus services that you will use when you're going to do a serverless application",
    "start": "25359",
    "end": "31119"
  },
  {
    "text": "then show off what the visual studio tooling to get started with net core and Lambda uh and then look at the command",
    "start": "31119",
    "end": "37760"
  },
  {
    "text": "line tooling for users who are not doing Visual Studio or want to hook up this to their CI systems and once we get an",
    "start": "37760",
    "end": "44879"
  },
  {
    "text": "understanding of the tooling how that works we're going to take a look at what a real app scenario might look",
    "start": "44879",
    "end": "51239"
  },
  {
    "text": "like so adus has like over a 100 Services um right now which is pretty",
    "start": "52960",
    "end": "59239"
  },
  {
    "text": "remarkable cuz been at ad for seven years and when I started there was 15 I believe there were so we've had that",
    "start": "59239",
    "end": "65760"
  },
  {
    "text": "much growth in that amount of time and so we're not going to cover all those Services um so I'm just going to focus",
    "start": "65760",
    "end": "71119"
  },
  {
    "text": "right now on just what are the ones that you're going to most likely work with when you start working with stus apps on",
    "start": "71119",
    "end": "77680"
  },
  {
    "text": "adbs so the first service and if you've heard anything about serverless Computing out there you've probably heard of edus lamba that is the compute",
    "start": "78680",
    "end": "85560"
  },
  {
    "text": "part of the serverless architecture this is the service that's actually going to run your",
    "start": "85560",
    "end": "90600"
  },
  {
    "text": "code it has a design of its event triggered and it's event based scaling",
    "start": "90600",
    "end": "95799"
  },
  {
    "text": "this means unlike traditional applications where you have a collection of virtual machines that are running",
    "start": "95799",
    "end": "101040"
  },
  {
    "text": "your application and you've got monitoring to see when you need to add remove stuff in this world there is no",
    "start": "101040",
    "end": "107040"
  },
  {
    "text": "compute power initially added to your servess application it's when those events come in is when a lamb lambda's",
    "start": "107040",
    "end": "113040"
  },
  {
    "text": "going to decide hey you need compute power and go allocate that up and this means your scaling is more of like it's",
    "start": "113040",
    "end": "119520"
  },
  {
    "text": "scale by events so if you suddenly get a thousand events coming in all at once then lambda's going to go make sure you",
    "start": "119520",
    "end": "125200"
  },
  {
    "text": "have that compute power available to you and then when those functions are done those that compute power would go away",
    "start": "125200",
    "end": "131319"
  },
  {
    "text": "so you would only be paying for when your functions actually run and not that idle time so Lambda supports nodejs",
    "start": "131319",
    "end": "138680"
  },
  {
    "text": "python Java and last November we added net core",
    "start": "138680",
    "end": "143920"
  },
  {
    "text": "support Amazon API Gateway this is the the front end of the adus Serv",
    "start": "144200",
    "end": "149879"
  },
  {
    "text": "architecture so this is what's going to expose your Lambda functions out to the web has like web",
    "start": "149879",
    "end": "155440"
  },
  {
    "text": "apis um and it has other features as well like managing authentication versioning monitoring and",
    "start": "155440",
    "end": "163319"
  },
  {
    "text": "more now Adis I didn't access management this isn't strictly a seress service but",
    "start": "163760",
    "end": "168840"
  },
  {
    "text": "it's one you're going to use regardless because this is the service that manages your credentials and your permissions so",
    "start": "168840",
    "end": "176239"
  },
  {
    "text": "in lambda's world it's you're going to be using ABS Iden access management or IM to basically give permissions to your",
    "start": "176239",
    "end": "183519"
  },
  {
    "text": "code to access other other adbs services and you do that by defining a role and",
    "start": "183519",
    "end": "189040"
  },
  {
    "text": "you allow Lambda to assume that role which will allow it to create credentials and on that role you can",
    "start": "189040",
    "end": "194920"
  },
  {
    "text": "have a number of policies applied to it which is what gives that Lambda permission to access S3 or whatever",
    "start": "194920",
    "end": "202200"
  },
  {
    "text": "service you want to use and so with ad C information you're",
    "start": "202200",
    "end": "209080"
  },
  {
    "text": "going to be using this you will most likely use this service as your servess application gets more sophisticated",
    "start": "209080",
    "end": "215120"
  },
  {
    "text": "because you're going to find that you're going to have other adus resources you're connecting to and you got to keep track of all those events that you're",
    "start": "215120",
    "end": "221959"
  },
  {
    "text": "want to set up so with cloud formation you can Define your whole adus architecture as a template file which is",
    "start": "221959",
    "end": "229040"
  },
  {
    "text": "usually a Json file that can be parameterized and that allows you to",
    "start": "229040",
    "end": "234159"
  },
  {
    "text": "just say hey cloud formation go create me this adbs stack and it will go and",
    "start": "234159",
    "end": "239200"
  },
  {
    "text": "create all resources and set up all those events for you as a unit and this could be like your test stack your Dev",
    "start": "239200",
    "end": "245480"
  },
  {
    "text": "stack or whatever and then when you're done with it you can just say delete this stack and it clears out all those resources so it's a good way of keeping",
    "start": "245480",
    "end": "252040"
  },
  {
    "text": "track of all those um connection points for your servus",
    "start": "252040",
    "end": "257040"
  },
  {
    "text": "application so those are the four main Services we're going to talk about today in s of recap we have Lambda for compute",
    "start": "257280",
    "end": "263199"
  },
  {
    "text": "API Gateway is our front end ad ID access management is going to be managing our permissions and cloud",
    "start": "263199",
    "end": "268800"
  },
  {
    "text": "formation so so we can automate our ads",
    "start": "268800",
    "end": "273520"
  },
  {
    "text": "architecture now the easiest way to get started writing core Lambda functions is with visual studio and our ads toet for",
    "start": "274160",
    "end": "280840"
  },
  {
    "text": "visual studio we support 2017 which you can install from the visual studio Gallery as well as Visual Studio 2015",
    "start": "280840",
    "end": "288800"
  },
  {
    "text": "for 15 you need to download that from our website it comes down as an MSI and 15 doesn't have net core support in it",
    "start": "288800",
    "end": "295720"
  },
  {
    "text": "by default so you'll need to be install the net core tooling into that",
    "start": "295720",
    "end": "301639"
  },
  {
    "start": "300000",
    "end": "615000"
  },
  {
    "text": "now I'm going to live dangerously and do some live demos um mostly to make up for my lack in PowerPoint skills so we'll",
    "start": "301680",
    "end": "307759"
  },
  {
    "text": "just go right into that so if you've never used our ad St",
    "start": "307759",
    "end": "314280"
  },
  {
    "text": "visal Studio first thing you might notice is we have this window over here we called Adis Explorer which allows you",
    "start": "314280",
    "end": "319840"
  },
  {
    "text": "to manage a lot of the common Services developers use right inside Visual Studio the ones that are managing data",
    "start": "319840",
    "end": "325960"
  },
  {
    "text": "or messaging or in Lambda in this case and you can also up at the top you can",
    "start": "325960",
    "end": "331800"
  },
  {
    "text": "register profiles this is basically you can have a number of Adis accounts that you might",
    "start": "331800",
    "end": "337720"
  },
  {
    "text": "want to have inside Visual Studio you add new ones pushing the new button and you add in your Adis credentials and",
    "start": "337720",
    "end": "344120"
  },
  {
    "text": "Adis credentials are an access key ID and a secret access key and what those",
    "start": "344120",
    "end": "349280"
  },
  {
    "text": "are used for is underneath the toolkit as well as in your own applications when you're using the AWS SDK for.net it's",
    "start": "349280",
    "end": "355400"
  },
  {
    "text": "going to use those credentials to sign the request to AWS which is how we do",
    "start": "355400",
    "end": "361199"
  },
  {
    "text": "authentication if you ever can't find this view you can just go under views and there's adus Explorer right there",
    "start": "361199",
    "end": "367520"
  },
  {
    "text": "now to get start with Lambda we need to create a project so we go to file new",
    "start": "367520",
    "end": "372919"
  },
  {
    "text": "project and under the visual C node we have adus Lambda and we basically have two",
    "start": "372919",
    "end": "378720"
  },
  {
    "text": "different project templates out there with the option of creating a test the Lambda project is basically when you",
    "start": "378720",
    "end": "384800"
  },
  {
    "text": "want to write a single function and you're going to work with the Lambda service directly you're going to set up",
    "start": "384800",
    "end": "389960"
  },
  {
    "text": "the connection end points all that for you and the seress application is when you're going to work with cloud",
    "start": "389960",
    "end": "396039"
  },
  {
    "text": "formation to deploy maybe a number of Lambda functions together as well as your other adus",
    "start": "396039",
    "end": "402120"
  },
  {
    "text": "resources so so we can get a better idea of how Lambda works so we're going to do the Lambda project right",
    "start": "402120",
    "end": "407319"
  },
  {
    "text": "now we're going to call that image tagger and we'll say",
    "start": "407319",
    "end": "413400"
  },
  {
    "text": "okay so once you do that you're going to get a choice of blueprints of basically things to help you get started if you",
    "start": "413400",
    "end": "419599"
  },
  {
    "text": "want to just go completely from scratch you can choose the empty function which has the minimum amount of boiler plate on there um these simple ones down here",
    "start": "419599",
    "end": "426879"
  },
  {
    "text": "have the extra boiler plate on there for um dealing with events coming from those services and we have a couple that are",
    "start": "426879",
    "end": "433560"
  },
  {
    "text": "more of like tutorial ones we're going to take a look at this detect image label which is what it does is it's a",
    "start": "433560",
    "end": "439840"
  },
  {
    "text": "blueprint that's going to be listing for pictures being uploaded to an S3 bucket",
    "start": "439840",
    "end": "444919"
  },
  {
    "text": "S3 is our object storage and it's going to go use our image recognition service to find out what's in that picture what",
    "start": "444919",
    "end": "450919"
  },
  {
    "text": "labels are in there and then tag our object with those labels so we'll say",
    "start": "450919",
    "end": "458360"
  },
  {
    "text": "finish and we can see created our test project and we've got our Lambda project",
    "start": "461120",
    "end": "466479"
  },
  {
    "text": "here now what a Lambda project is is it is really just a it is a just a class Library targeting",
    "start": "466479",
    "end": "474440"
  },
  {
    "text": "net core app1 we do only support net core app net Core 10 that ISR currently",
    "start": "474440",
    "end": "479919"
  },
  {
    "text": "designated as the LTS version of net core and Lambda always has a policy with all of the runtimes to support the",
    "start": "479919",
    "end": "485599"
  },
  {
    "text": "long-term supported version of that",
    "start": "485599",
    "end": "489120"
  },
  {
    "text": "runtime so if we look at our code Here regular C code here uh we got a",
    "start": "491080",
    "end": "497879"
  },
  {
    "text": "couple Constructors let's look at those so the first one is just the empty Constructor which is creating a couple",
    "start": "497879",
    "end": "505199"
  },
  {
    "text": "uh service clients from the ad SDK for.net and you notice when we create these clients we're not passing any",
    "start": "505199",
    "end": "511240"
  },
  {
    "text": "credentials information or what region we want to connect to and we can do that",
    "start": "511240",
    "end": "516360"
  },
  {
    "text": "because when we deploy this Lambda function we're going to assign an IM Ro to that Lambda function and the SDK in",
    "start": "516360",
    "end": "523599"
  },
  {
    "text": "its logic well when it's looking for credentials we'll look to see am I running in an environment that has an IM",
    "start": "523599",
    "end": "529880"
  },
  {
    "text": "role and if so grab the credentials for that role and make the request with that",
    "start": "529880",
    "end": "535040"
  },
  {
    "text": "similar with the region it will detect that I am running in EU one and we'll",
    "start": "535040",
    "end": "540320"
  },
  {
    "text": "use that there I could override all that by at the Constructor if I wanted but it's generally best just to use the",
    "start": "540320",
    "end": "545880"
  },
  {
    "text": "configuration coming from the environment the rest of the stuff is the way this blueprint is set up is when we",
    "start": "545880",
    "end": "552440"
  },
  {
    "text": "detect labels we can say we only want to accept labels with a minimum confidence of that label um I think the default in",
    "start": "552440",
    "end": "559120"
  },
  {
    "text": "here is 70% but when you deploy a Lambda function you can set environment variables and so in the environment",
    "start": "559120",
    "end": "565720"
  },
  {
    "text": "variable we could override what that confidence level is the other Constructor here is passing in",
    "start": "565720",
    "end": "572040"
  },
  {
    "text": "the clients because this is what's used by the test project since the test project is not running in a Lambda environment it's up to that test project",
    "start": "572040",
    "end": "578600"
  },
  {
    "text": "to construct those clients and so here is our actual",
    "start": "578600",
    "end": "584399"
  },
  {
    "text": "function here this is what lambda's going to going to call takes in an S3 event um the Lambda context is going to",
    "start": "584399",
    "end": "591399"
  },
  {
    "text": "give you information about the running environment and this is an async method",
    "start": "591399",
    "end": "596640"
  },
  {
    "text": "and so just like I'll C code if you're doing an async method you want to be sure to always return back a task don't",
    "start": "596640",
    "end": "601680"
  },
  {
    "text": "do async void because what land was doing is it's going to call this method and say Hey you return back a task I'll",
    "start": "601680",
    "end": "608079"
  },
  {
    "text": "wait till that test complete to know when you're done so if you just did void it would think that you were done right",
    "start": "608079",
    "end": "613600"
  },
  {
    "text": "away so we Loop through our records we're going to use this is the image",
    "start": "613600",
    "end": "618959"
  },
  {
    "text": "image recognition service where we're going to go detect some labels then we're going to go construct",
    "start": "618959",
    "end": "624360"
  },
  {
    "text": "a collection of tags S3 tags and then use the S3 cl to put put those tags on",
    "start": "624360",
    "end": "630240"
  },
  {
    "text": "there so overall it's a fairly simple code but it's an easy way just to tie these two Services",
    "start": "630240",
    "end": "636720"
  },
  {
    "text": "together now the other file we have in here is called the Abus Lambda tools defaults file so this is the file the",
    "start": "636720",
    "end": "643440"
  },
  {
    "text": "blueprint or the the blueprints put in there to help set up a lot of those initial values when you deploy the",
    "start": "643440",
    "end": "650240"
  },
  {
    "text": "function we're going to take a look at a couple of them uh function Handler is",
    "start": "650240",
    "end": "655680"
  },
  {
    "text": "probably the most important one CU this string is what identifies to Lambda what is that c function I want to call in my",
    "start": "655680",
    "end": "662959"
  },
  {
    "text": "class Library so it's identifying the assembly the type",
    "start": "662959",
    "end": "668920"
  },
  {
    "text": "name and the actual function in that class to call the other thing that I think it's",
    "start": "668920",
    "end": "675720"
  },
  {
    "text": "worth pointing out is memory size I wanted to call that out because it's it's more than just memory size the way",
    "start": "675720",
    "end": "682040"
  },
  {
    "text": "I always look at this property is more of it's a slider on the amount of compute power you want to give to your Lambda function because what Lambda does",
    "start": "682040",
    "end": "689000"
  },
  {
    "text": "is as you increase the memory that also scales how much CPU and Network Power is",
    "start": "689000",
    "end": "694200"
  },
  {
    "text": "added to your Lambda function so with those all set let's",
    "start": "694200",
    "end": "700079"
  },
  {
    "text": "take a look at how we deploy it and to do that we right click on our project and we say publish",
    "start": "700079",
    "end": "706560"
  },
  {
    "text": "DWS it's going to bring up our Wizard and you can see there's those values already set because they came from that",
    "start": "707440",
    "end": "712680"
  },
  {
    "text": "file so we just need to put in a function uh name we'll call",
    "start": "712680",
    "end": "717760"
  },
  {
    "text": "it image",
    "start": "717760",
    "end": "721240"
  },
  {
    "text": "tagger and on the second screen the most important thing we got to do is this is where we're going to set the IM roll",
    "start": "725959",
    "end": "731120"
  },
  {
    "text": "this is what's going to give permissions for our function because our function has to access our S3 bucket and it's got",
    "start": "731120",
    "end": "736639"
  },
  {
    "text": "to be able to access the image recognition service so we could Define a role with those policies now for me",
    "start": "736639",
    "end": "743040"
  },
  {
    "text": "right now I've already set up an existing role that we're going to use I could create one with some of the Preen policies that we have out there or if",
    "start": "743040",
    "end": "749440"
  },
  {
    "text": "you have some policies that you've already set up on your account I would be able to create those we're just going to select that one and here's where I",
    "start": "749440",
    "end": "756040"
  },
  {
    "text": "could set an environment variable so if I wanted to override that minimum confidence level I could pass in a value",
    "start": "756040",
    "end": "762040"
  },
  {
    "text": "there but we're not so we're just going to say",
    "start": "762040",
    "end": "766040"
  },
  {
    "text": "upload and so this is basically doing a net publish with the CLI zipping that up and telling um Lambda go do go create a",
    "start": "767240",
    "end": "775519"
  },
  {
    "text": "Lambda function and so we bring up this view of the Lambda function which is coming from adab explor you can",
    "start": "775519",
    "end": "781199"
  },
  {
    "text": "see image tagger there and we can do a few things in here we can modify the configuration of it we can also just do",
    "start": "781199",
    "end": "787959"
  },
  {
    "text": "a test invoke right from here there's some sample requests of what you might send to S3 for example here's the",
    "start": "787959",
    "end": "795639"
  },
  {
    "text": "request what here's an example what request would look like coming from S3 where it identifies the bucket that you",
    "start": "795639",
    "end": "801160"
  },
  {
    "text": "want to say there was a new object created and the object those those don't",
    "start": "801160",
    "end": "807279"
  },
  {
    "text": "exist I'm G to go aead and push that anyways this is not going to work though because those objects don't exist but you can see how right from here you",
    "start": "807279",
    "end": "814519"
  },
  {
    "text": "could modify that file to something that really does exist to test how things work on production and you can see",
    "start": "814519",
    "end": "819600"
  },
  {
    "text": "here's the error of not being able to access that object what that also allows me to do is in the logs view we can get",
    "start": "819600",
    "end": "825839"
  },
  {
    "text": "a list of the logs so we can see what really happened in here so here's some of those print",
    "start": "825839",
    "end": "833920"
  },
  {
    "text": "statements um I don't know if I showed that but all of the console rights in here",
    "start": "833920",
    "end": "839680"
  },
  {
    "text": "is will be forwarded to the cloudwatch logs that are associated with that so that's how you get your log messages there and you can see there's the STA",
    "start": "839680",
    "end": "848160"
  },
  {
    "text": "Trace so now we have our Lambda function deployed it's got permissions to access the service but now what we need to do",
    "start": "848519",
    "end": "854480"
  },
  {
    "text": "is we need to actually hook this up to our S3 bucket so we can do that in the event",
    "start": "854480",
    "end": "860560"
  },
  {
    "text": "sources tab this has some of the services that you can connect with S2 with Lambda um a lot of the other",
    "start": "860560",
    "end": "867120"
  },
  {
    "text": "services you need to go to their web console or use their sdks to do that um connection up so here we'll say add S3",
    "start": "867120",
    "end": "875399"
  },
  {
    "text": "is already picked you do need to pick a bucket that's in the same region as you so I happen to have one called",
    "start": "875399",
    "end": "882000"
  },
  {
    "text": "E1 prefix prefix and suffix you can use to sort of filter which objects you want",
    "start": "882000",
    "end": "887320"
  },
  {
    "text": "to get events for we'll say",
    "start": "887320",
    "end": "892560"
  },
  {
    "text": "okay and so now they are connected so when we add objects to that S3 bucket",
    "start": "893279",
    "end": "899199"
  },
  {
    "text": "this will cause our Lambda function to be invoked we can test that by if we go",
    "start": "899199",
    "end": "904240"
  },
  {
    "text": "over to S3 in the toolkit here's that bucket here I'll open up its view I",
    "start": "904240",
    "end": "910199"
  },
  {
    "text": "don't have any objects in there currently so let's copy some images of",
    "start": "910199",
    "end": "916040"
  },
  {
    "text": "my family in there upload",
    "start": "916040",
    "end": "922120"
  },
  {
    "text": "those so now as these are being uploaded this is going to then trigger those V to",
    "start": "924800",
    "end": "930440"
  },
  {
    "text": "from from S3 to Lambda to go do that logic we had so they're connected without actually running any servers to",
    "start": "930440",
    "end": "936440"
  },
  {
    "text": "do that so that's uploaded we should see by now and if we refresh the logs I'm",
    "start": "936440",
    "end": "944240"
  },
  {
    "text": "betting there was it doing some of its work of getting those tags we can get a better view of that if we go back over",
    "start": "945759",
    "end": "953079"
  },
  {
    "text": "here and let's see how well this service did so here is my daughter playing on",
    "start": "953079",
    "end": "958519"
  },
  {
    "text": "the beach see how what did they think of that so",
    "start": "958519",
    "end": "964079"
  },
  {
    "text": "on that we properties we go to tag and we can see that she is a human there's",
    "start": "964079",
    "end": "969720"
  },
  {
    "text": "water she's on the beach she's having a good time there uh let's try this one anybody take",
    "start": "969720",
    "end": "976839"
  },
  {
    "text": "a guess where this is a picture of anyone yes I did convinced the family to",
    "start": "976839",
    "end": "983480"
  },
  {
    "text": "go to New Zealand this year and I don't think my wife appreciated doing all the Lord of the Rings things but",
    "start": "983480",
    "end": "989880"
  },
  {
    "text": "it was fun so what did we do on the Shire there uh I said there was a chair we got",
    "start": "989880",
    "end": "996279"
  },
  {
    "text": "a pumpkin out there in the garden there's Furniture squash and vegetables it didn't pick the Hobbit holes but that",
    "start": "996279",
    "end": "1002600"
  },
  {
    "text": "is kind of a custom case so but so there you go this is how",
    "start": "1002600",
    "end": "1008120"
  },
  {
    "text": "you can easily write these Lambda functions and hook up these services to do more interesting things without even",
    "start": "1008120",
    "end": "1013720"
  },
  {
    "text": "having to run servers with it",
    "start": "1013720",
    "end": "1017800"
  },
  {
    "start": "1017000",
    "end": "1055000"
  },
  {
    "text": "so to recap get the toolkit to try things out uh 2017 get it from the gallery 15 use the get it from our",
    "start": "1019440",
    "end": "1026678"
  },
  {
    "text": "website you can use the toolkit to manage your Adis credentials um you can",
    "start": "1026679",
    "end": "1031839"
  },
  {
    "text": "also use the toolkit to get blueprints to get started um you do need to have it's a class Library Target net cor app1",
    "start": "1031839",
    "end": "1039400"
  },
  {
    "text": "and in the toket we can deploy functions and we have that default file to help us with a lot of the initial values for",
    "start": "1039400",
    "end": "1047160"
  },
  {
    "text": "deployment so now let's take a look at command line because we know with net core we can do things more than justed visual studio so let's bring up a",
    "start": "1047160",
    "end": "1055120"
  },
  {
    "start": "1055000",
    "end": "1411000"
  },
  {
    "text": "console here so the first thing we want to be able to do is we want to create a",
    "start": "1055120",
    "end": "1060600"
  },
  {
    "text": "project and in visual studio right we had all those blueprints to get started well it turns out when they GA theet",
    "start": "1060600",
    "end": "1068960"
  },
  {
    "text": "core tooling this winter they added support in that net new command to add",
    "start": "1068960",
    "end": "1074919"
  },
  {
    "text": "new templates to that and we added things to that so if we",
    "start": "1074919",
    "end": "1080120"
  },
  {
    "text": "sayet new- I for install we can say Amazon Lambda",
    "start": "1080120",
    "end": "1087400"
  },
  {
    "text": "templates colon colon star colon colon star means use the latest version that's",
    "start": "1087400",
    "end": "1092600"
  },
  {
    "text": "going to install that new get package that we have and put all those blueprints that we had in visual studio",
    "start": "1092600",
    "end": "1098159"
  },
  {
    "text": "right there on the net new command which I already have done so I'm not going to run it again so if we say net",
    "start": "1098159",
    "end": "1105039"
  },
  {
    "text": "new you can see there's all those Lambda functions right here so we can do these anywhere we are I'm going to keep this",
    "start": "1105039",
    "end": "1112039"
  },
  {
    "text": "demo simple so I'm just going to use that empty function uh blueprint we can get help on that if we",
    "start": "1112039",
    "end": "1117919"
  },
  {
    "text": "say net new Lambda empty",
    "start": "1117919",
    "end": "1124880"
  },
  {
    "text": "function help and this is telling you that you",
    "start": "1124880",
    "end": "1130320"
  },
  {
    "text": "can pass optionally in the profile that cre profile for you Visual Studio or the",
    "start": "1130320",
    "end": "1136600"
  },
  {
    "text": "region um or both and what that's going to do is it's going to inject in that default file it's going to create it's",
    "start": "1136600",
    "end": "1142159"
  },
  {
    "text": "going to set those up for you so when you do the later deployment from the command line you don't have to keep entering those in over and over again so",
    "start": "1142159",
    "end": "1148840"
  },
  {
    "text": "let's create this net new Lambda empty function I have to spell it",
    "start": "1148840",
    "end": "1155960"
  },
  {
    "text": "correctly profile use my Norm J profile region is EU",
    "start": "1155960",
    "end": "1163240"
  },
  {
    "text": "west1 and I'll name this demo funk that looks right",
    "start": "1163240",
    "end": "1170320"
  },
  {
    "text": "yeah project is created so let's go into that directory we can go use V code and",
    "start": "1170320",
    "end": "1176960"
  },
  {
    "text": "see what we got",
    "start": "1176960",
    "end": "1179600"
  },
  {
    "text": "here so here again we got our test project so we can see how we can write some integration or unit tests and we",
    "start": "1182039",
    "end": "1187640"
  },
  {
    "text": "have our code uh the empty function is very basic all it is it's just trying to",
    "start": "1187640",
    "end": "1193000"
  },
  {
    "text": "give you some code to get started with it's just doing a two uper on the string past in so you can take that and go do",
    "start": "1193000",
    "end": "1198960"
  },
  {
    "text": "whatever you want with it so what we need to do now is how do we deploy this function and what we did is if you look",
    "start": "1198960",
    "end": "1205320"
  },
  {
    "text": "in the CSR file we installed a net CA tool reference to the Amazon Lambda",
    "start": "1205320",
    "end": "1212200"
  },
  {
    "text": "tools so this is going to add commands into the net CLI so we can manage the deployment right from",
    "start": "1212200",
    "end": "1218280"
  },
  {
    "text": "there in fact it's the same code that we do in there that we do in visual studio",
    "start": "1218280",
    "end": "1224200"
  },
  {
    "text": "and so that menu item in Visual Studio to say whether to publish or not how we choose to show that is do we look to see",
    "start": "1224200",
    "end": "1230360"
  },
  {
    "text": "is this a nut core project and does it have this dependency if it has this dependency up then we assume this must",
    "start": "1230360",
    "end": "1236240"
  },
  {
    "text": "be something you want to deploy at Lambda and so we'll add that menu item",
    "start": "1236240",
    "end": "1241280"
  },
  {
    "text": "there okay so let's deploy it so let's go to our function and we need to restore",
    "start": "1241280",
    "end": "1249280"
  },
  {
    "text": "references so it's going to pull in our Tooling in there and now if we say",
    "start": "1249280",
    "end": "1255200"
  },
  {
    "text": "net Lambda help",
    "start": "1255200",
    "end": "1260400"
  },
  {
    "text": "you can see these are the commands that have now been added to the CLI this first section here is dealing",
    "start": "1260400",
    "end": "1265679"
  },
  {
    "text": "with just the Lambda projects like we saw we just did in Visual Studio the second set is for the serverless lap",
    "start": "1265679",
    "end": "1271720"
  },
  {
    "text": "when you're doing deployment with cloud formation and the bottom two are sort of utility ones for when you want to maybe",
    "start": "1271720",
    "end": "1276960"
  },
  {
    "text": "hook this up to your CI system and you want to just use this to get everything packaged up right for",
    "start": "1276960",
    "end": "1283200"
  },
  {
    "text": "Lambda all right so then to deploy that we would do net Lambda deploy",
    "start": "1283200",
    "end": "1291240"
  },
  {
    "text": "function all right well let's look to see what that takes if we say help you can see that takes a fair",
    "start": "1291240",
    "end": "1297679"
  },
  {
    "text": "amount of parameters and that's where that default file comes in really handy because most of this is already set for",
    "start": "1297679",
    "end": "1303000"
  },
  {
    "text": "us the only thing we really have to set at this point is what is the function name and what is the IM Ro that we want",
    "start": "1303000",
    "end": "1310360"
  },
  {
    "text": "to use so we'll say net Lambda deploy function and I'll call it",
    "start": "1310360",
    "end": "1318120"
  },
  {
    "text": "demo fun and I don't remember my role so if you don't enter the RO on the command line",
    "start": "1318120",
    "end": "1323559"
  },
  {
    "text": "it's going to prompt you for that as you're doing the",
    "start": "1323559",
    "end": "1327279"
  },
  {
    "text": "deployment so you can see here what role do I want to use and I'm going to say I'm going to use that same role I did in",
    "start": "1329679",
    "end": "1335240"
  },
  {
    "text": "the previous demo and there it is it's created so we could now see if we didet",
    "start": "1335240",
    "end": "1344120"
  },
  {
    "text": "Lambda list functions we can see there's our two functions the",
    "start": "1344120",
    "end": "1350080"
  },
  {
    "text": "one we did in the previous demo and the one we just did we can also do some testing of the function right here so we",
    "start": "1350080",
    "end": "1355600"
  },
  {
    "text": "know this function just does the two uppers all it does so if we say net Lambda invoke",
    "start": "1355600",
    "end": "1363480"
  },
  {
    "text": "function demo Funk and we pass in a payload we'll say hello",
    "start": "1363480",
    "end": "1371400"
  },
  {
    "text": "NDC we say return so this will run that function just like that sort of test view in the toolkit we can run it here",
    "start": "1371400",
    "end": "1377600"
  },
  {
    "text": "on the command line you can see we've got a cloud two upper function",
    "start": "1377600",
    "end": "1382960"
  },
  {
    "text": "now now you might be wondering why did it take 800 Mill seconds just to do a two upper on that the reason was this",
    "start": "1382960",
    "end": "1389559"
  },
  {
    "text": "was the first time this function was invoked so that's when Lambda had to then go and allocate the compute power",
    "start": "1389559",
    "end": "1395559"
  },
  {
    "text": "needed for this function download the function from S3 and start up the net runtime if I have to run it again with",
    "start": "1395559",
    "end": "1402760"
  },
  {
    "text": "all that stuff already warmed up you can see from Lamb's point of view it was much faster there",
    "start": "1402760",
    "end": "1409880"
  },
  {
    "text": "okay so that is the CLI so again to use the CLI you want to",
    "start": "1409880",
    "end": "1416520"
  },
  {
    "start": "1411000",
    "end": "1430000"
  },
  {
    "text": "do a net new to install the templates right there that gives you all the blueprints we have in Visual Studio then",
    "start": "1416520",
    "end": "1422039"
  },
  {
    "text": "you can just do net new to create your projects um and then you do dunet Lambda deploy function to start deploying it",
    "start": "1422039",
    "end": "1427720"
  },
  {
    "text": "right from the command line okay so my real up scenario which",
    "start": "1427720",
    "end": "1434679"
  },
  {
    "start": "1430000",
    "end": "1448000"
  },
  {
    "text": "admittedly the demo didn't get as fully completed as I had my ambitions for was was an app called pollster what this app",
    "start": "1434679",
    "end": "1441520"
  },
  {
    "text": "is is it's a website for customers to put up polls and everyone can vote on those",
    "start": "1441520",
    "end": "1447840"
  },
  {
    "text": "polls so my requirements are is I need a website that everyone can access vote on those polls every poll has a start and",
    "start": "1447840",
    "end": "1456480"
  },
  {
    "start": "1448000",
    "end": "1466000"
  },
  {
    "text": "end time so I'm going to need sort of a state machine for these polls and again I'm being serverless I want to do no",
    "start": "1456480",
    "end": "1462840"
  },
  {
    "text": "servers with this application so to do this we're going to introduce a couple more services some of",
    "start": "1462840",
    "end": "1469679"
  },
  {
    "start": "1466000",
    "end": "1508000"
  },
  {
    "text": "these you might have heard Amazon DB this is our managed no SQL uh database",
    "start": "1469679",
    "end": "1475600"
  },
  {
    "text": "service um and for us what we need to do is we need to create two tables out of that one is a table to store our",
    "start": "1475600",
    "end": "1481520"
  },
  {
    "text": "definitions for the polls and the other one um is to storing the list of the current active poles and a nice feature",
    "start": "1481520",
    "end": "1488720"
  },
  {
    "text": "D has is you can enable streams on that which sends out events of your items",
    "start": "1488720",
    "end": "1494799"
  },
  {
    "text": "being changed in your tables or new items being added and as you can guess with those events you can hook up Lambda",
    "start": "1494799",
    "end": "1501200"
  },
  {
    "text": "to then process those events and so we can use those to start our workflow on",
    "start": "1501200",
    "end": "1508039"
  },
  {
    "start": "1508000",
    "end": "1546000"
  },
  {
    "text": "that so the other new service we're going to talk is ADS step functions and",
    "start": "1508039",
    "end": "1513320"
  },
  {
    "text": "this allows us to define a state machine that basically in our case the state machine is fairly simplistic it's just a",
    "start": "1513320",
    "end": "1519880"
  },
  {
    "text": "scheduling of I want to I want to state where I want to schedule it how long do I wait till I activate it and then I got",
    "start": "1519880",
    "end": "1526840"
  },
  {
    "text": "to deactivate it after a certain amount of a time and each one of those States where there's work to do those are",
    "start": "1526840",
    "end": "1532559"
  },
  {
    "text": "called tasks we can say when you hit the state in the in the in the state machine",
    "start": "1532559",
    "end": "1538399"
  },
  {
    "text": "go call a Lambda function to do that work so again we can keep with being servess for doing all that",
    "start": "1538399",
    "end": "1545679"
  },
  {
    "start": "1546000",
    "end": "1630000"
  },
  {
    "text": "work now one of the interesting things that we've been doing lately with our net core tooling is we've been doing",
    "start": "1546320",
    "end": "1552880"
  },
  {
    "text": "work to be able to run aset core apps right on top of Lambda now I'm not saying this is the the right solution",
    "start": "1552880",
    "end": "1559200"
  },
  {
    "text": "for every net core Lambda project but if you happen to really like writing your",
    "start": "1559200",
    "end": "1564240"
  },
  {
    "text": "web apps using aset core or you're not ready to learn a new programming model you can do this this way because it",
    "start": "1564240",
    "end": "1570520"
  },
  {
    "text": "allows you to use the same programming model we already know we can just run it locally in IAS and test it all there and",
    "start": "1570520",
    "end": "1577360"
  },
  {
    "text": "then when we're happy we can just go deploy that to Lambda there are cons are because we are",
    "start": "1577360",
    "end": "1583440"
  },
  {
    "text": "bringing a larger framework there's a little bit more to be initialized during the startup so you want to be very",
    "start": "1583440",
    "end": "1588760"
  },
  {
    "text": "careful about what it is in that startup CS that you're really doing because that's going to be invoked during the",
    "start": "1588760",
    "end": "1594480"
  },
  {
    "text": "initial code start of the app of this function now it's not done for every single one of the executions basically",
    "start": "1594480",
    "end": "1600880"
  },
  {
    "text": "what happens is when Lambda starts up that first Cod the first time it's executing that function in that compute",
    "start": "1600880",
    "end": "1606640"
  },
  {
    "text": "environment is we initialize the core framework so that the next request will",
    "start": "1606640",
    "end": "1611799"
  },
  {
    "text": "be fast also razor views are not supported doing this um so we need an",
    "start": "1611799",
    "end": "1617480"
  },
  {
    "text": "alternative um framework for our client code so what I'm doing is I'm doing everything in angular um for",
    "start": "1617480",
    "end": "1624679"
  },
  {
    "text": "that that let's go into another demo here so here is",
    "start": "1624679",
    "end": "1631840"
  },
  {
    "start": "1630000",
    "end": "1679000"
  },
  {
    "text": "pollster um again this looks like a regular as core application we have controllers here",
    "start": "1631840",
    "end": "1638320"
  },
  {
    "text": "like we've seen many other places there's controllers for getting polls in the feeds and voting on those um we have",
    "start": "1638320",
    "end": "1644880"
  },
  {
    "text": "our program CS down here which is starting up",
    "start": "1644880",
    "end": "1649960"
  },
  {
    "text": "castral like with that so that way we can easily just do F5 and we can run",
    "start": "1649960",
    "end": "1655120"
  },
  {
    "text": "this application locally we can do our local development test it there and see what it looks like uh let's see how",
    "start": "1655120",
    "end": "1661240"
  },
  {
    "text": "we're doing so here it is um where should I",
    "start": "1661240",
    "end": "1668519"
  },
  {
    "text": "take the kids for vacation so far I've liked Norway I think I'll might make them go to Norway I think the kids want",
    "start": "1668519",
    "end": "1675159"
  },
  {
    "text": "to go to Disneyland we'll see how that works out for them",
    "start": "1675159",
    "end": "1680039"
  },
  {
    "start": "1679000",
    "end": "1804000"
  },
  {
    "text": "okay but now to get this to work in Lambda what I done is I added that n package I talked about earlier and I",
    "start": "1680440",
    "end": "1686919"
  },
  {
    "text": "have a new class in here called Lambda entry the name is arbitrary you can call it whatever you want but it extends from",
    "start": "1686919",
    "end": "1694760"
  },
  {
    "text": "this class API Gateway proxy function which this has one method you",
    "start": "1694760",
    "end": "1699799"
  },
  {
    "text": "need to override which is the init method which looks a lot what we saw in the program CS where you need to set up",
    "start": "1699799",
    "end": "1705919"
  },
  {
    "text": "the content Ruth say what is the startup class but instead of saying use Kestrel in is we have to say um use API Gateway",
    "start": "1705919",
    "end": "1714480"
  },
  {
    "text": "because that's going to be our web server in this case now the actual Lambda function comes from the base",
    "start": "1714480",
    "end": "1720080"
  },
  {
    "text": "class it is this function Handler a sync that's actually going to be",
    "start": "1720080",
    "end": "1725720"
  },
  {
    "text": "called that's the only code changes we actually did to this application to make it run on Lambda everything else is the",
    "start": "1725720",
    "end": "1732320"
  },
  {
    "text": "same as you do on asmic core now the other things we have in",
    "start": "1732320",
    "end": "1737679"
  },
  {
    "text": "here is under workflow this is my state machine test so these are my series of",
    "start": "1737679",
    "end": "1743720"
  },
  {
    "text": "Lambda functions that I'm going to use for those the states in my state machine",
    "start": "1743720",
    "end": "1749159"
  },
  {
    "text": "these are all fairly simple ones uh they're going to take in a pole State object um and it's going to grab that",
    "start": "1749159",
    "end": "1755519"
  },
  {
    "text": "pole ID find out how long till we should schedule it and set that seconds still",
    "start": "1755519",
    "end": "1761159"
  },
  {
    "text": "active on that and we're going to turn that back and that's what the the state",
    "start": "1761159",
    "end": "1766360"
  },
  {
    "text": "machine is going to use to figure out how long to wait and that logic is sort of similar for the activate and the deactivate so we have these other Lambda",
    "start": "1766360",
    "end": "1772600"
  },
  {
    "text": "functions in there and we also this is going to use more parts so this is why we're not just",
    "start": "1772600",
    "end": "1779039"
  },
  {
    "text": "deploying straight to Lambda we're going to use this as a serverless app deploying with a cloud formation template which is what this seress",
    "start": "1779039",
    "end": "1785279"
  },
  {
    "text": "template is here and if you look in that default file we specified template is",
    "start": "1785279",
    "end": "1790399"
  },
  {
    "text": "seress template so now when we deploy it the Wizard's going to be a little different in fact let's deploy it first",
    "start": "1790399",
    "end": "1798279"
  },
  {
    "text": "um because it takes a couple minutes for it to come online and then we'll talk about what's in that",
    "start": "1798279",
    "end": "1803720"
  },
  {
    "text": "template so you can see the wizard is simpler all we really have to do now in the Wizard is specify what is the name",
    "start": "1803720",
    "end": "1810080"
  },
  {
    "text": "of the cloud formation stack and what is the S3 bucket that we want to use to",
    "start": "1810080",
    "end": "1815360"
  },
  {
    "text": "store our applica our compiled application bits when we do this deployment if I had parameterized the",
    "start": "1815360",
    "end": "1822240"
  },
  {
    "text": "template there would be a next button in there for me to enter those parameters but for this example I didn't parameter",
    "start": "1822240",
    "end": "1829960"
  },
  {
    "text": "that so we'll just go ahead and publish that it's going to do the similar thing it's going to compile the app um zip it",
    "start": "1830519",
    "end": "1836760"
  },
  {
    "text": "all up send it up to S3 and then we're going to basically tell cloud formation",
    "start": "1836760",
    "end": "1842039"
  },
  {
    "text": "um go and create a this cloud formation stack with these",
    "start": "1842039",
    "end": "1847240"
  },
  {
    "text": "resources so that in a second is going to bring up a view I drink some",
    "start": "1847240",
    "end": "1853600"
  },
  {
    "text": "water and here is the cloud formation stack view coming from the Explorer you",
    "start": "1856399",
    "end": "1861720"
  },
  {
    "text": "can see it here and this is going to start streaming in the events of these adus resources coming online for us so",
    "start": "1861720",
    "end": "1868480"
  },
  {
    "text": "while that's going let's take a look at the serverless",
    "start": "1868480",
    "end": "1873440"
  },
  {
    "start": "1873000",
    "end": "2264000"
  },
  {
    "text": "template so a template has you can Define parameters which I didn't in this case and then you have your collection",
    "start": "1873960",
    "end": "1879799"
  },
  {
    "text": "of resources so let's look at that so I mentioned I needed two tables so here is my definitions table",
    "start": "1879799",
    "end": "1887000"
  },
  {
    "text": "that's being created in my active poles collection and down down table since it's a no SQL there's no schema all we",
    "start": "1887000",
    "end": "1894399"
  },
  {
    "text": "need to do is Define what is the key and I mentioned that we can enable",
    "start": "1894399",
    "end": "1899880"
  },
  {
    "text": "streams on this so that's where this is at so this is going to enable streams that we can hook up a Lambda function to",
    "start": "1899880",
    "end": "1906080"
  },
  {
    "text": "capture when new poles are created and start that workflow",
    "start": "1906080",
    "end": "1911760"
  },
  {
    "text": "execution and there's my active pole and then we have the aset core function so",
    "start": "1911880",
    "end": "1917600"
  },
  {
    "text": "this is is really the Lambda function that represents the whole aset core app part of this um its type is of serverless",
    "start": "1917600",
    "end": "1925480"
  },
  {
    "text": "function that's sort of a a meta resource because what it's going to do is it's going to create more than just a",
    "start": "1925480",
    "end": "1931960"
  },
  {
    "text": "Lambda function with the it's going to also set up our API Gateway as well that's this event section here so the",
    "start": "1931960",
    "end": "1939000"
  },
  {
    "text": "events is going to say hook this up to type API which means apad Gateway and normally or a lot of times",
    "start": "1939000",
    "end": "1947200"
  },
  {
    "text": "what you'll see is that when people create a serverless application they'll use API Gateway and Define all of their",
    "start": "1947200",
    "end": "1953039"
  },
  {
    "text": "endpoints in their rest application but in this case what we've done is we're just saying send all",
    "start": "1953039",
    "end": "1961519"
  },
  {
    "text": "requests to our Lambda function because since this is an aset core application we're going to rely on aset core to",
    "start": "1961519",
    "end": "1968720"
  },
  {
    "text": "write to route to the right controllers for us and for any HTP method the other",
    "start": "1968720",
    "end": "1975919"
  },
  {
    "text": "things going on here is we can pass environment variables in so we're going to pass in the names of",
    "start": "1975919",
    "end": "1981360"
  },
  {
    "text": "those D be tables that just got created as part of this template so because initially like I",
    "start": "1981360",
    "end": "1987760"
  },
  {
    "text": "just have my two tables that I was using locally but now I suspect I probably have a couple more that just got created",
    "start": "1987760",
    "end": "1995159"
  },
  {
    "text": "based off my cloud formation template here's my state machine so this",
    "start": "1995159",
    "end": "2002760"
  },
  {
    "text": "is saying use this Ro to to run the state machine I should",
    "start": "2002760",
    "end": "2008399"
  },
  {
    "text": "have mentioned also and that Lambda function is when we specified the role it used so we have two roles we're using",
    "start": "2008399",
    "end": "2014799"
  },
  {
    "text": "here's the role the state machine has so that's giving uh our state machine access to invoke our Lambda function",
    "start": "2014799",
    "end": "2021120"
  },
  {
    "text": "because by default you never have access to things in you always in ABS you always have to tell it what you're",
    "start": "2021120",
    "end": "2027600"
  },
  {
    "text": "allowing things to do nothing's going to act on your behalf unless you say it's",
    "start": "2027600",
    "end": "2033399"
  },
  {
    "text": "okay and then there's the definition string which you might be wondering why is that blank the reason that is blank",
    "start": "2033399",
    "end": "2041080"
  },
  {
    "text": "is we added a little extra Tooling in our net tooling so that in our defaults",
    "start": "2041080",
    "end": "2046720"
  },
  {
    "text": "file we can say with this substitution replace the content of that with by this",
    "start": "2046720",
    "end": "2052398"
  },
  {
    "text": "Json path with this contents of this file the",
    "start": "2052399",
    "end": "2061040"
  },
  {
    "text": "reason we did this is now I can Define that state machine in its own separate file and not have to try to Define it in",
    "start": "2061040",
    "end": "2068398"
  },
  {
    "text": "an escaped Json document inside of a string so if we look at that State",
    "start": "2068399",
    "end": "2073720"
  },
  {
    "text": "machine you can see here's all those States right we've got our schedule state which is going to call that",
    "start": "2073720",
    "end": "2080158"
  },
  {
    "text": "Lambda and that return back that property set of seconds to active so that's going to wait that long then we",
    "start": "2080159",
    "end": "2086520"
  },
  {
    "text": "go to activate wait again and so on so again this is a fairly simple one we",
    "start": "2086520",
    "end": "2091720"
  },
  {
    "text": "could do more complicated things but we didn't need to in this example so then here's collection of",
    "start": "2091720",
    "end": "2098400"
  },
  {
    "text": "defining those Lambda functions for each of one of those we're going to use inside our state machine so there's that",
    "start": "2098400",
    "end": "2103800"
  },
  {
    "text": "schedule T schedule task Lambda function active tasks activate task and",
    "start": "2103800",
    "end": "2111160"
  },
  {
    "text": "deactivate you might be wondering why are all these code blocks empty and it",
    "start": "2111160",
    "end": "2116480"
  },
  {
    "text": "was empty as well for the aset core function the reason is when I rate this file I don't know where the codee's",
    "start": "2116480",
    "end": "2122480"
  },
  {
    "text": "going to be because the code was uploaded as part of our deployment you saw that was that first step in that",
    "start": "2122480",
    "end": "2128520"
  },
  {
    "text": "deployment wizard what the wizard is doing is it first uploads everything to S3 then",
    "start": "2128520",
    "end": "2135079"
  },
  {
    "text": "reads this template file and goes and autofills in all those properties to where I just put the bits at so you're",
    "start": "2135079",
    "end": "2140760"
  },
  {
    "text": "not having to manage that and then the last resource we have",
    "start": "2140760",
    "end": "2146960"
  },
  {
    "text": "here is this is that DD processor this is the function that is going to go listen for events coming off of my D",
    "start": "2146960",
    "end": "2155119"
  },
  {
    "text": "table and so I can start those workflow executions so here I'm passing those",
    "start": "2155119",
    "end": "2160760"
  },
  {
    "text": "environment variables of again those tables that I'm using and also now the",
    "start": "2160760",
    "end": "2165839"
  },
  {
    "text": "state machine that just got created and then in the event section",
    "start": "2165839",
    "end": "2171839"
  },
  {
    "text": "I'm saying this is hooked up to DB to this stream this is the stream coming",
    "start": "2171839",
    "end": "2177520"
  },
  {
    "text": "from that pole definitions table so here I've defined now all of my resources in",
    "start": "2177520",
    "end": "2182800"
  },
  {
    "text": "this file that I can just deploy as one unit the last thing we need to talk",
    "start": "2182800",
    "end": "2188119"
  },
  {
    "text": "about is permissions right because we have to give access to these adab Services they don't have that by default",
    "start": "2188119",
    "end": "2195000"
  },
  {
    "text": "so here's that role I defined for State machine which basically says here",
    "start": "2195000",
    "end": "2201680"
  },
  {
    "text": "that adbs step functions is allowed to assume this role when it's working with our state",
    "start": "2201680",
    "end": "2208319"
  },
  {
    "text": "machine and it has access to call to call the operation invoke function so that's the only thing State machine can",
    "start": "2208319",
    "end": "2214480"
  },
  {
    "text": "do or step step functions can do on our behalf",
    "start": "2214480",
    "end": "2219519"
  },
  {
    "text": "and the other role here is the one we're going to use for all of our Lambda functions so that's why we're saying",
    "start": "2220440",
    "end": "2225839"
  },
  {
    "text": "that this can be assumed by Lambda so these are all the permissions our Lambda function can do and there are",
    "start": "2225839",
    "end": "2232839"
  },
  {
    "text": "a couple ways you can do set up policies you can use managed policies which are there's either you can create your own",
    "start": "2232839",
    "end": "2239079"
  },
  {
    "text": "policies that you can share and your account or there's policies that databas Services provide so here is a manag",
    "start": "2239079",
    "end": "2246680"
  },
  {
    "text": "policy that the land team provides which basically is going to be giving me access to WR to cloudwatch logs but now",
    "start": "2246680",
    "end": "2253800"
  },
  {
    "text": "I also want access to downb as well so this first let",
    "start": "2253800",
    "end": "2260760"
  },
  {
    "text": "me open this a little wider here first rule here saying I basically want all the crud operations for DB for only",
    "start": "2260760",
    "end": "2269079"
  },
  {
    "text": "those two tables so there's no way that my Lambda function can affect anything going in any other",
    "start": "2269079",
    "end": "2275240"
  },
  {
    "text": "tables and I need to give access to the stream be able to access the stream so we can get those",
    "start": "2275240",
    "end": "2281359"
  },
  {
    "text": "events and the last thing we need to do is we have to give permissions to start the execution um of our",
    "start": "2281359",
    "end": "2288520"
  },
  {
    "text": "workflow and that's it now I'm betting our stack is complete it really took",
    "start": "2288520",
    "end": "2294400"
  },
  {
    "text": "about I think it takes about a a little less than two minutes let's see my computer's on Seattle time here but so",
    "start": "2294400",
    "end": "2300599"
  },
  {
    "text": "it started at 911 a.m. in Seattle and finished at 9:13 so to",
    "start": "2300599",
    "end": "2307599"
  },
  {
    "text": "create that all that stack and all those resources took about 2 minutes to do now I created brand new tables for",
    "start": "2307599",
    "end": "2314560"
  },
  {
    "text": "this application so I don't currently have any polls in my application so to",
    "start": "2314560",
    "end": "2320280"
  },
  {
    "text": "help this out I did create one of my web controllers is one um just for adding sample data which is going to go read in",
    "start": "2320280",
    "end": "2327240"
  },
  {
    "text": "this Json file sample polls so let's just go ahead and run that I'll use postmen for that I'm not",
    "start": "2327240",
    "end": "2334280"
  },
  {
    "text": "going to do an update in the middle of a demo and so we'll say API sample data as a",
    "start": "2334280",
    "end": "2344760"
  },
  {
    "text": "post send that so this is going to go and add those tables to my definitions",
    "start": "2344760",
    "end": "2350119"
  },
  {
    "text": "table which is then going to trigger off events coming off the stream which that datab stream processor is going to um",
    "start": "2350119",
    "end": "2356400"
  },
  {
    "text": "find and kick off the executions of those the workflow executions which then step functions is then going to say well",
    "start": "2356400",
    "end": "2363040"
  },
  {
    "text": "let's start the flow of that and start scheduling those um tasks or",
    "start": "2363040",
    "end": "2368280"
  },
  {
    "text": "pulse uh so if I go into the web console there's step",
    "start": "2368280",
    "end": "2375640"
  },
  {
    "text": "functions uh the first one was some different practice I did earlier today but so this is the one I just created",
    "start": "2375800",
    "end": "2381640"
  },
  {
    "text": "you can see here's the executions for the three polls I just created and they're all currently in that sort of",
    "start": "2381640",
    "end": "2387520"
  },
  {
    "text": "wait to deactivate because the way I set up the sample datas I wanted them scheduled for now if you see it it took",
    "start": "2387520",
    "end": "2393440"
  },
  {
    "text": "in is it's got that poll ID um um which",
    "start": "2393440",
    "end": "2398960"
  },
  {
    "text": "there was 0 seconds the way to activate and now it's going to stay there for that many seconds 12,000 seconds or so so there's all that",
    "start": "2398960",
    "end": "2407400"
  },
  {
    "text": "hooked up so now if we go to the",
    "start": "2407400",
    "end": "2412880"
  },
  {
    "text": "website you can see we have now deployed our serverless application using all all those moving pieces together as one",
    "start": "2422720",
    "end": "2429680"
  },
  {
    "text": "cloudformation template and we can start using it so I can say I am currently using",
    "start": "2429680",
    "end": "2436040"
  },
  {
    "text": "Windows Chewbacca is the unsung hero of the Star Wars movie uh where should I go in Norway I",
    "start": "2436040",
    "end": "2442160"
  },
  {
    "text": "am not going to try to pronounce any of these names but I thought I would go to this Valley to do some hiking I don't know how to say that name",
    "start": "2442160",
    "end": "2448560"
  },
  {
    "text": "though there we go so there is our serverless application all deployed together cloudformation template um",
    "start": "2448560",
    "end": "2455400"
  },
  {
    "text": "without using any servers for this okay how am I doing on time I have a little extra time here so the one thing",
    "start": "2455400",
    "end": "2463079"
  },
  {
    "text": "that I was thinking about this last night while going through this again that's bothering me about this is we are",
    "start": "2463079",
    "end": "2469520"
  },
  {
    "text": "using Lambda functions to deliver the static content um right because this",
    "start": "2469520",
    "end": "2474800"
  },
  {
    "text": "site has CSS um has JavaScript that's bringing those angulars and using Lambda functions to bring down static content",
    "start": "2474800",
    "end": "2481480"
  },
  {
    "text": "is probably not the best use of Lambda functions that's what we have S3 for for using um bringing down static",
    "start": "2481480",
    "end": "2489079"
  },
  {
    "text": "content so like I said this guy's API Gateway definition is fairly simplistic",
    "start": "2489079",
    "end": "2495920"
  },
  {
    "text": "right it is if we look at API Gateway this is that service it's just a",
    "start": "2495920",
    "end": "2501920"
  },
  {
    "text": "proxy to send everything in there so alternative I was playing with last night which is something I've been",
    "start": "2501920",
    "end": "2507200"
  },
  {
    "text": "wanting to add more tooling with and and say how we make this easier to set up is what if we use S3 to handle all of the",
    "start": "2507200",
    "end": "2514599"
  },
  {
    "text": "JavaScript and CSS so when I like this is from my other",
    "start": "2514599",
    "end": "2520240"
  },
  {
    "text": "account here this this guy's implementation you can see what I did here is I still have that proxy to send",
    "start": "2520240",
    "end": "2526640"
  },
  {
    "text": "everything to my as core but I have for the CSS and the disc folder I have a",
    "start": "2526640",
    "end": "2532319"
  },
  {
    "text": "proxy that says send everything to my S3",
    "start": "2532319",
    "end": "2538640"
  },
  {
    "text": "bucket same with this one and so I've copied all those static content to that",
    "start": "2538640",
    "end": "2545160"
  },
  {
    "text": "one so in this case to show what I'm talking",
    "start": "2545160",
    "end": "2551079"
  },
  {
    "text": "about if we look at this this",
    "start": "2551079",
    "end": "2557960"
  },
  {
    "text": "poer here is the aset core application the as the Lambda function aset core and",
    "start": "2557960",
    "end": "2563960"
  },
  {
    "text": "the demo that we've already been doing today if we look at let's just clear these logs start it from scratch here",
    "start": "2563960",
    "end": "2573880"
  },
  {
    "text": "and if I refresh",
    "start": "2577359",
    "end": "2583440"
  },
  {
    "text": "this now we refresh this to get the latest logs you can see we got quite a few of these logs coming in through the",
    "start": "2589920",
    "end": "2596520"
  },
  {
    "text": "reason I got multiple is because there's multiple compute environments currently going on so we got parallel requests and",
    "start": "2596520",
    "end": "2603079"
  },
  {
    "text": "so if we look at this you can see see this Lambda function is being SP up just to return back this site CSS file um and",
    "start": "2603079",
    "end": "2611240"
  },
  {
    "text": "there other ones are there right so in this other let's take a look at my other implementation",
    "start": "2611240",
    "end": "2618839"
  },
  {
    "text": "here again it's the same code in that other one I just reengineered the API Gateway",
    "start": "2619240",
    "end": "2625920"
  },
  {
    "text": "layout so let's go [Music]",
    "start": "2625920",
    "end": "2632808"
  },
  {
    "text": "there uh and so here is this guy's Lambda",
    "start": "2635800",
    "end": "2641760"
  },
  {
    "text": "function I'll delete its log so we can see what just happens for",
    "start": "2642520",
    "end": "2648520"
  },
  {
    "text": "that get the URL from the stack",
    "start": "2648839",
    "end": "2654200"
  },
  {
    "text": "hopefully I left the polls in here so this guy now if we looked at its Lambda function at its",
    "start": "2668000",
    "end": "2677240"
  },
  {
    "text": "logs see in this case we just had two requests we had one for the main page",
    "start": "2679880",
    "end": "2685400"
  },
  {
    "text": "that's basically controlling the base path for angular and then just the web",
    "start": "2685400",
    "end": "2690680"
  },
  {
    "text": "API to get the poll feeds so there's a way you can use API Gateway to basically",
    "start": "2690680",
    "end": "2696240"
  },
  {
    "text": "reduce some of it for the sement core to take static content and push that back into",
    "start": "2696240",
    "end": "2702000"
  },
  {
    "text": "S3 okay so that we can see how we can run",
    "start": "2703440",
    "end": "2709760"
  },
  {
    "text": "as core apps on Lambda you do that with the Amazon Lambda aset core server Nate",
    "start": "2709760",
    "end": "2715319"
  },
  {
    "text": "package um obviously poster you might not be the EAS way to just get started but you can actually just get started in",
    "start": "2715319",
    "end": "2721240"
  },
  {
    "text": "the blueprints there is a blueprint under",
    "start": "2721240",
    "end": "2728480"
  },
  {
    "text": "project serverless there's an Asen art core blueprint that has that already set up",
    "start": "2728559",
    "end": "2735040"
  },
  {
    "text": "for you um and I did have a blog post I put",
    "start": "2735040",
    "end": "2741119"
  },
  {
    "text": "out there um that walks through how you could take an existing a minut core application and deploy it this way if",
    "start": "2741119",
    "end": "2746720"
  },
  {
    "text": "you want to try that out we also learned how we can use cloud formation to manage our whole architecture out there for us",
    "start": "2746720",
    "end": "2754119"
  },
  {
    "text": "um and we used ad step functions to Def or state machine so we could control um",
    "start": "2754119",
    "end": "2760000"
  },
  {
    "text": "when our function when our polls became active and deactivated that some final links for",
    "start": "2760000",
    "end": "2766559"
  },
  {
    "text": "everybody um the toolkit out there again 2017 you can get it from the gallery 15",
    "start": "2766559",
    "end": "2772280"
  },
  {
    "text": "from our website um all of the net core Lambda tooling the CLI stuff the",
    "start": "2772280",
    "end": "2777960"
  },
  {
    "text": "libraries I do all that work in uh Y and GitHub on 8bis l.net so if you ever have any questions",
    "start": "2777960",
    "end": "2785200"
  },
  {
    "text": "or issues on how to deal with net core on Lambda um feel free to open up an issue or question there and I'm happy to",
    "start": "2785200",
    "end": "2791079"
  },
  {
    "text": "help people out um I took a snapshot of my poster code last night and I stuck it up on this repository if you go to that",
    "start": "2791079",
    "end": "2798400"
  },
  {
    "text": "repository um there is a talks folder that has it in there and I put the slides in there as well so if anyone is",
    "start": "2798400",
    "end": "2803960"
  },
  {
    "text": "trying to take pictures you can just get it from there um and I contribute a lot to the .n net blog so I write a lot",
    "start": "2803960",
    "end": "2809960"
  },
  {
    "text": "about net 8 um lately I've been writing about a lot of Lambda and net together and that",
    "start": "2809960",
    "end": "2817280"
  },
  {
    "text": "thank you so much for",
    "start": "2817280",
    "end": "2819960"
  },
  {
    "text": "coming um I don't know if anyone any questions feel free to ask but",
    "start": "2824079",
    "end": "2829760"
  },
  {
    "text": "other that all theour want",
    "start": "2833160",
    "end": "2839359"
  },
  {
    "text": "use uh no usually sorry the question was was when was is there region constraints",
    "start": "2839640",
    "end": "2845839"
  },
  {
    "text": "when working with a WS um usually with services that have events connecting up",
    "start": "2845839",
    "end": "2851440"
  },
  {
    "text": "to each other so if it's like a Lambda connecting up to another event those need to be in the same region but I can",
    "start": "2851440",
    "end": "2857160"
  },
  {
    "text": "definitely have my Lambda function that's then going to go AIS buckets in other region but you're not going to be",
    "start": "2857160",
    "end": "2862680"
  },
  {
    "text": "able to I don't think there's any service that has events that you can send cross region",
    "start": "2862680",
    "end": "2869440"
  },
  {
    "text": "so CSS there there is I mean S3 you do have",
    "start": "2872319",
    "end": "2878200"
  },
  {
    "text": "to pay for the getting objects out um especially for small little files though it takes a lot for that to be um",
    "start": "2878200",
    "end": "2885599"
  },
  {
    "text": "significant you'd have to um the question I'm sorry of what is the cost for going to putting the static content",
    "start": "2885599",
    "end": "2891240"
  },
  {
    "text": "in S3 um it would be the cheaper option than having it being delivered by Lambda",
    "start": "2891240",
    "end": "2899040"
  },
  {
    "text": "so um",
    "start": "2899040",
    "end": "2903040"
  },
  {
    "text": "uh step functions the way I've always done it andm I've only I've just really been starting to look at step functions lately myself mostly for this demo um is",
    "start": "2909319",
    "end": "2916680"
  },
  {
    "text": "you're really just going to be writing xunit um integration tests like that there's not a way to really just run um",
    "start": "2916680",
    "end": "2922520"
  },
  {
    "text": "Step functions like in a local environment",
    "start": "2922520",
    "end": "2928599"
  },
  {
    "text": "yeah around the lamb also uh so the question is about metrics",
    "start": "2928920",
    "end": "2935920"
  },
  {
    "text": "and so there are metrics um this the metrics are shipped off to",
    "start": "2935920",
    "end": "2943760"
  },
  {
    "text": "Cloud watch I know we have lots of names to figure things out",
    "start": "2943760",
    "end": "2949798"
  },
  {
    "text": "um Cloud well actually so Cloud watch is the main place to get logs if you looked at the Lambda",
    "start": "2950000",
    "end": "2956839"
  },
  {
    "text": "console um Vick more detailed information than we have in the toket right now so like here is the function",
    "start": "2956839",
    "end": "2964400"
  },
  {
    "text": "that we just did it has monitoring tabs um you can see some of the metrics there um and then you can go to the cloudwatch",
    "start": "2964400",
    "end": "2970920"
  },
  {
    "text": "console to drive deeper into that any other",
    "start": "2970920",
    "end": "2976799"
  },
  {
    "text": "questions all right let's call it a day all right thanks everybody",
    "start": "2976799",
    "end": "2983520"
  }
]