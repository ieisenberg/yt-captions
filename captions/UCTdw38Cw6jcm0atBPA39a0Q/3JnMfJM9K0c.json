[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "okay we'll we'll get started um looks like nobody else is joining us this is a bigger",
    "start": "719",
    "end": "6560"
  },
  {
    "text": "crowd than i was expecting for such a dull topic um but thank you all for being here um so we're gonna be talking",
    "start": "6560",
    "end": "12960"
  },
  {
    "text": "about distributed tracing in dot net six i realize dot net seven is out but um dot net six was when i wrote it so that's what we're doing um",
    "start": "12960",
    "end": "19840"
  },
  {
    "text": "we're using a product called or a library called open telemetry um",
    "start": "19840",
    "end": "25439"
  },
  {
    "start": "25000",
    "end": "77000"
  },
  {
    "text": "so i'm martin thwaites a developer advocate at a company called honeycomb but i am",
    "start": "25439",
    "end": "31119"
  },
  {
    "text": "an observability evangelist first um always was um and",
    "start": "31119",
    "end": "37040"
  },
  {
    "text": "you can catch me on twitter i normally rant about this kind of stuff um on there so we're going to talk about a few",
    "start": "37040",
    "end": "43040"
  },
  {
    "text": "things i'm going to start by explaining a bit about what observability is i'm going to talk a little bit about um what open telemetry",
    "start": "43040",
    "end": "50640"
  },
  {
    "text": "is and then we're going to go through a little bit a little few bits about how to implement that in net",
    "start": "50640",
    "end": "56480"
  },
  {
    "text": "spoiler it's really easy it's like 10 lines of code um so i'm going to try and get you know at least 40 minutes out of",
    "start": "56480",
    "end": "62000"
  },
  {
    "text": "this um but it is very very simple we'll talk about a few other concepts um around things like the open temperature",
    "start": "62000",
    "end": "67840"
  },
  {
    "text": "collector and how that's useful um and some of the more interesting and scary concepts um around open telemetry um",
    "start": "67840",
    "end": "76560"
  },
  {
    "text": "so um funny story we're trying to find out uh find a picture that kind of embodies",
    "start": "76560",
    "end": "81840"
  },
  {
    "start": "77000",
    "end": "142000"
  },
  {
    "text": "what observability is because it's a wide topic and this was the best one that we could",
    "start": "81840",
    "end": "88000"
  },
  {
    "text": "come up with the the idea of observability is how well can you understand the internal",
    "start": "88000",
    "end": "94000"
  },
  {
    "text": "state of your system um by the outputs that that system gives um so the idea of a child",
    "start": "94000",
    "end": "100400"
  },
  {
    "text": "not knowing what's underneath the rock until they look under the rock and then they find more rocks and then they lift up more rocks and then you put all the",
    "start": "100400",
    "end": "106399"
  },
  {
    "text": "rocks back down put the moss back on i wasn't the last person to touch it honest um but that's the the idea of",
    "start": "106399",
    "end": "111920"
  },
  {
    "text": "observability is this idea that you can visualize what's happening inside of your system by the outputs that it gives",
    "start": "111920",
    "end": "119200"
  },
  {
    "text": "you so not reaching inside your system and grabbing things out but having your system output information that you can",
    "start": "119200",
    "end": "124560"
  },
  {
    "text": "then do it's where honeycomb was formed which is the company i work for um",
    "start": "124560",
    "end": "130720"
  },
  {
    "text": "and it was all about this idea of how do we make people rely on their production observability",
    "start": "130720",
    "end": "136239"
  },
  {
    "text": "more than they rely on their debugging how do we make debugging in production as good as debugging locally",
    "start": "136239",
    "end": "142160"
  },
  {
    "start": "142000",
    "end": "207000"
  },
  {
    "text": "so um what is observability in general so wikipedia defines it like that",
    "start": "142160",
    "end": "148160"
  },
  {
    "text": "so um it's that internal state so asked a couple more people for their ideas on",
    "start": "148160",
    "end": "153599"
  },
  {
    "text": "what exactly observability is so charity majors are um co-founder who coined the term about six-ish years ago um it's",
    "start": "153599",
    "end": "161040"
  },
  {
    "text": "about unknown unknowns and we talk a lot about these ideas of what you know and what you don't know and what you don't",
    "start": "161040",
    "end": "166319"
  },
  {
    "text": "know you don't know and observability is for those unknown unknowns the things that you don't know",
    "start": "166319",
    "end": "172560"
  },
  {
    "text": "um so paul bruce who runs the olive fest which is a a conference like this specifically",
    "start": "172560",
    "end": "178959"
  },
  {
    "text": "around observability um is it's about designing our systems to intentionally emit information so that intentionality",
    "start": "178959",
    "end": "185840"
  },
  {
    "text": "of you writing your system so that they intentionally emit information that you can use to understand that but it's also",
    "start": "185840",
    "end": "192800"
  },
  {
    "text": "about the people who operate your platform but also the people who rely on your platform so the the people who are",
    "start": "192800",
    "end": "198560"
  },
  {
    "text": "maybe your ops team um who are then running that um thing in production so you're actually intentionally emitting",
    "start": "198560",
    "end": "204560"
  },
  {
    "text": "information out of it now observability is all about asking questions of your system after it's gone",
    "start": "204560",
    "end": "210720"
  },
  {
    "start": "207000",
    "end": "288000"
  },
  {
    "text": "live now we've all done i would imagine a production system where something went wrong and you said it'd",
    "start": "210720",
    "end": "218159"
  },
  {
    "text": "be nice if we had this um so you then do another release with some more logging um inside of",
    "start": "218159",
    "end": "224959"
  },
  {
    "text": "there and then you were oh oh it doesn't happen anymore so i've now missed that opportunity the idea of using observability is that",
    "start": "224959",
    "end": "231680"
  },
  {
    "text": "you don't know what you might need to know so send all the information that you can and then when something does actually happen you've got that",
    "start": "231680",
    "end": "237760"
  },
  {
    "text": "information to be able to see so the sorts of things that you might ask of your system so um",
    "start": "237760",
    "end": "243920"
  },
  {
    "text": "is this feature being used uh might be an interesting one that you want to see so this isn't just about debugging this",
    "start": "243920",
    "end": "249200"
  },
  {
    "text": "isn't just about something went wrong it's all about how can i observe my system and know what's happening in that",
    "start": "249200",
    "end": "254480"
  },
  {
    "text": "system in production um but it also goes down to that really sort of core level performance stuff",
    "start": "254480",
    "end": "259680"
  },
  {
    "text": "like what about when things are in two regions that's something you can't see locally one's in u.s east and one's in",
    "start": "259680",
    "end": "266080"
  },
  {
    "text": "eu west ones in i don't know um somebody come up with another region um and",
    "start": "266080",
    "end": "272000"
  },
  {
    "text": "when a request is transitioning now maybe it's just one request maybe it's five requests maybe it's 100 requests but it might be very small the number of",
    "start": "272000",
    "end": "278080"
  },
  {
    "text": "requests and this is things you don't know until you go into production you don't know that you want to know so that's the the idea um around",
    "start": "278080",
    "end": "284960"
  },
  {
    "text": "observability in general um so then we go a little bit further and we start to talk about tracing or",
    "start": "284960",
    "end": "290080"
  },
  {
    "start": "288000",
    "end": "359000"
  },
  {
    "text": "more specifically distributed tracing tracing is this idea of profiling your code",
    "start": "290080",
    "end": "295360"
  },
  {
    "text": "it's the idea of using things like causality so the idea that one thing happened and then that caused this thing",
    "start": "295360",
    "end": "301840"
  },
  {
    "text": "to happen that caused this thing to happen that caused this thing to happen which is very very different to using",
    "start": "301840",
    "end": "306880"
  },
  {
    "text": "logs so if you are doing logging and doing structured logging you are um a lot of the time we get this well",
    "start": "306880",
    "end": "313360"
  },
  {
    "text": "traces are just fans are just like structured logs aren't they the idea of tracing is the idea of",
    "start": "313360",
    "end": "318400"
  },
  {
    "text": "causality that this http request that came into service one then went through these lines of code that did this those",
    "start": "318400",
    "end": "325360"
  },
  {
    "text": "three lines of code then went off to call this search service over here and then this service did this one this and this and that went to a database and",
    "start": "325360",
    "end": "331600"
  },
  {
    "text": "that went to a redis cache and it's about that causality now you can have lots of log lines that tell you all those things that causality is really",
    "start": "331600",
    "end": "338639"
  },
  {
    "text": "really important when you're talking about high load systems it's important to note as well that",
    "start": "338639",
    "end": "344080"
  },
  {
    "text": "distribute tracing is not a tool it's not something that exists that you buy it's not something that",
    "start": "344080",
    "end": "350240"
  },
  {
    "text": "you can just implement there are libraries that do tracing but tracing itself is a concept not a library",
    "start": "350240",
    "end": "358800"
  },
  {
    "text": "speaking of libraries what is open telemetry so open telemetry is um the number two project on the cncf",
    "start": "358800",
    "end": "366080"
  },
  {
    "start": "359000",
    "end": "418000"
  },
  {
    "text": "projects it's a language agnostic protocol first",
    "start": "366080",
    "end": "371520"
  },
  {
    "text": "idea of how do we look at different systems that are in different languages and provide that distributed tracing",
    "start": "371520",
    "end": "377600"
  },
  {
    "text": "over all of these different things it's built on top of the w3's tray standards w3c trade standards um so it is based in",
    "start": "377600",
    "end": "385600"
  },
  {
    "text": "an actual standard but it's a an initiative that came together from two",
    "start": "385600",
    "end": "391039"
  },
  {
    "text": "competing initiatives called open census and open tracing they came together and went well how about we work together and",
    "start": "391039",
    "end": "396160"
  },
  {
    "text": "make one thing that everybody uses it's now being adopted um",
    "start": "396160",
    "end": "401759"
  },
  {
    "text": "will it be number two in the uh the list you can imagine that it is being adopted um very very widely",
    "start": "401759",
    "end": "407440"
  },
  {
    "text": "um and i yeah i didn't remove that last term on that slide um so yeah bullets roboto",
    "start": "407440",
    "end": "415199"
  },
  {
    "text": "regular um it does that as well um so um what is the trace when we talk about open telemetry so um",
    "start": "415199",
    "end": "422800"
  },
  {
    "start": "418000",
    "end": "481000"
  },
  {
    "text": "the trace is the thing being done so if you think about http request your traces from your outside of your request",
    "start": "422800",
    "end": "429120"
  },
  {
    "text": "and everything that happens within there that conceptually is a trace it's the thing that's been done you can format a",
    "start": "429120",
    "end": "435039"
  },
  {
    "text": "trace however you want you could say that i only want traces on this system over here or i only want traces on this system here and i don't want any traces",
    "start": "435039",
    "end": "441840"
  },
  {
    "text": "for the thing above i generally don't subscribe to that methodology but a trace is conceptually the thing that's",
    "start": "441840",
    "end": "447759"
  },
  {
    "text": "being done it consists of a few things so we've got things like child spans",
    "start": "447759",
    "end": "453919"
  },
  {
    "text": "which are little spans within there so a trace in itself is just a span that doesn't have a",
    "start": "453919",
    "end": "460080"
  },
  {
    "text": "root to it you can see some bits of information on the side there can't the kind of things that it would um encompass it encumbers",
    "start": "460080",
    "end": "467039"
  },
  {
    "text": "something called baggage which we'll come to which is the foot gun that you never thought you wanted and it also has things called tags or",
    "start": "467039",
    "end": "473199"
  },
  {
    "text": "attributes which are all the different bits of information around each of those spans that's being",
    "start": "473199",
    "end": "478639"
  },
  {
    "text": "created so open telemetry.net core or asp.net core",
    "start": "478639",
    "end": "484960"
  },
  {
    "start": "481000",
    "end": "691000"
  },
  {
    "text": "we're going to focus on asp.net core um the stories around console logging and various other bits is",
    "start": "484960",
    "end": "490720"
  },
  {
    "text": "not as fully fledged as it is in asp.net core um",
    "start": "490720",
    "end": "495759"
  },
  {
    "text": "asp.net core the implementation right now is still in release candidate um i think it's 9.3",
    "start": "495759",
    "end": "501840"
  },
  {
    "text": "i think we're adopting the microsoft versioning methodology um so we'll be at rc 9.3 pre-alpha 7.7 rtm soon i'm sure",
    "start": "501840",
    "end": "511599"
  },
  {
    "text": "um it is being used in production by some very very large companies so i wouldn't let that put you off in using it",
    "start": "511599",
    "end": "518000"
  },
  {
    "text": "but it is marked as an rc at the moment um whether when we get to um full um i",
    "start": "518000",
    "end": "524159"
  },
  {
    "text": "don't know um but there is a lot of talk about that being very very soon",
    "start": "524159",
    "end": "529200"
  },
  {
    "text": "um so the first thing we're going to have to do is talk about something called activity now",
    "start": "529200",
    "end": "535920"
  },
  {
    "text": "this is one of the most annoying things around open telemetry right now",
    "start": "535920",
    "end": "541040"
  },
  {
    "text": "because open telemetry uses terminology called spans and traces and attributes and baggage and",
    "start": "541040",
    "end": "548880"
  },
  {
    "text": "various other bits microsoft in their infinite wisdom said no",
    "start": "548880",
    "end": "554399"
  },
  {
    "text": "we don't want that we didn't invent that so we're going to use something called activity which already existed",
    "start": "554399",
    "end": "560480"
  },
  {
    "text": "you know props to him for that they use something that already existed it exists in the bcl um so",
    "start": "560480",
    "end": "565680"
  },
  {
    "text": "you'll see a lot of mention when you're looking at the tracing libraries um on the the sdks that are in the different",
    "start": "565680",
    "end": "571200"
  },
  {
    "text": "languages that the terminology doesn't match with asp.net and net",
    "start": "571200",
    "end": "577200"
  },
  {
    "text": "that is an annoyance and a complication once you get your head around it",
    "start": "577200",
    "end": "582880"
  },
  {
    "text": "it is really easy to understand my recommendation is if you are writing",
    "start": "582880",
    "end": "588480"
  },
  {
    "text": "libraries if you are writing open source libraries if you are writing shared libraries to be used inside your",
    "start": "588480",
    "end": "595519"
  },
  {
    "text": "organization using the inner source method i would advise that you use activity",
    "start": "595519",
    "end": "600880"
  },
  {
    "text": "the reason is that that means that you're not bringing in an external dependency on open telemetry which brings a hard dependency on an external",
    "start": "600880",
    "end": "606880"
  },
  {
    "text": "library the idea of open telemetry gives you things like propagation so the idea that",
    "start": "606880",
    "end": "612560"
  },
  {
    "text": "you can properly propagate a context from one service to another it gives you other things around this transition",
    "start": "612560",
    "end": "619120"
  },
  {
    "text": "those are really useful when you're writing an application when you're actually writing your first party service that's going to call out to",
    "start": "619120",
    "end": "625920"
  },
  {
    "text": "other things that's really useful it's not as useful when you're writing a",
    "start": "625920",
    "end": "631120"
  },
  {
    "text": "library to abstract away your cosmos db usage it's not as useful in that context",
    "start": "631120",
    "end": "637839"
  },
  {
    "text": "now if you are writing those libraries then try to think about things like should i have is this span enabled one",
    "start": "637839",
    "end": "644320"
  },
  {
    "text": "of the other annoying things is when you try and create a spam which we'll look at in the moment you have to check whether it's null because if it's not observed then it's null um which means",
    "start": "644320",
    "end": "651519"
  },
  {
    "text": "that you get problems in your code if somebody doesn't observe the thing that you're trying to emit um which is really annoying but",
    "start": "651519",
    "end": "657920"
  },
  {
    "text": "these are all things that have been worked through um so like i say microsoft decided to use",
    "start": "657920",
    "end": "663440"
  },
  {
    "text": "activity all the demos that we're going to be talking about today are using activity um it is the",
    "start": "663440",
    "end": "668880"
  },
  {
    "text": "sort of um the concepts that's in the open telemetry docs so that's what we're going to be using",
    "start": "668880",
    "end": "674320"
  },
  {
    "text": "to go through they work the same you can use your application in your application you can use activity",
    "start": "674320",
    "end": "680720"
  },
  {
    "text": "you can use the open telemetry sdks and bring those in as well it's entirely up to you which one you want to do",
    "start": "680720",
    "end": "687519"
  },
  {
    "text": "so how easy is it i said it's very very easy about 10 lines of code um",
    "start": "687519",
    "end": "693040"
  },
  {
    "start": "691000",
    "end": "885000"
  },
  {
    "text": "three packages you can actually do it without the three packages if you really want",
    "start": "693040",
    "end": "698880"
  },
  {
    "text": "you don't need all of them but what we're doing there is we're bringing in the hosting package so the way that open telemetry works",
    "start": "698880",
    "end": "705680"
  },
  {
    "text": "we will get some traces and some spans those spans will go into it in memory buffer internally and on a regular basis",
    "start": "705680",
    "end": "713200"
  },
  {
    "text": "it will flush those out to a third party or first party if you're using something like jager",
    "start": "713200",
    "end": "719040"
  },
  {
    "text": "so that's what our hosting package does which is then going to be doing this flushing periodically of the spans that",
    "start": "719040",
    "end": "724560"
  },
  {
    "text": "have been created we've got a instrumentation for asp.net core now everything that we're doing we",
    "start": "724560",
    "end": "730720"
  },
  {
    "text": "need to instrument we need to say this is the thing that we want to monitor",
    "start": "730720",
    "end": "736160"
  },
  {
    "text": "the instrumentation libraries are these are auto instrumentation libraries they're written by microsoft the asp.net",
    "start": "736160",
    "end": "741279"
  },
  {
    "text": "one is co-authored by microsoft which says that these are the things within asp.net core",
    "start": "741279",
    "end": "746639"
  },
  {
    "text": "that i would like to emit you have some options that you can turn on and off in there but we're saying that we'd like to",
    "start": "746639",
    "end": "752000"
  },
  {
    "text": "know what the what the http request route was we'd like to know",
    "start": "752000",
    "end": "757120"
  },
  {
    "text": "what the user agent was on that request they're creating these spans for us bringing in these libraries allows us to",
    "start": "757120",
    "end": "763440"
  },
  {
    "text": "just go yes i'd like all those please send them over to my tracing provider it's fine",
    "start": "763440",
    "end": "768720"
  },
  {
    "text": "we've also got the the one for http so that's the http client allows you to do a lot of things around",
    "start": "768720",
    "end": "774800"
  },
  {
    "text": "the request handlers and things like that around http client these are all libraries that available",
    "start": "774800",
    "end": "780240"
  },
  {
    "text": "to you um there are things like the sql client so if you bring the sql client in that's going to instrument things like the um",
    "start": "780240",
    "end": "788240"
  },
  {
    "text": "the command text that you send over the parameters that you've sent in there all things that you can then",
    "start": "788240",
    "end": "795120"
  },
  {
    "text": "report on in whatever tool you use to receive these traces on the other end but there's a lot of these that are also",
    "start": "795120",
    "end": "801360"
  },
  {
    "text": "instrumented my caution would be auto instrumentation will get you so far",
    "start": "801360",
    "end": "807519"
  },
  {
    "text": "it is step one it is not step end",
    "start": "807519",
    "end": "812880"
  },
  {
    "text": "implement these libraries go home these are the first steps they will give",
    "start": "812880",
    "end": "817920"
  },
  {
    "text": "you a level of visibility um normally you'll get these things and you'll go wow",
    "start": "817920",
    "end": "823600"
  },
  {
    "text": "we call it um the mtt wtf the mean time to what the was that",
    "start": "823600",
    "end": "829440"
  },
  {
    "text": "because these auto instrumentation libraries are going to give you a level of information that you didn't think you",
    "start": "829440",
    "end": "834639"
  },
  {
    "text": "needed because they will tell you things like it's one user it's one user that's causing all of",
    "start": "834639",
    "end": "840560"
  },
  {
    "text": "these problems in my graphs on grafana wow this is really important information but that's step one",
    "start": "840560",
    "end": "847440"
  },
  {
    "text": "the next step is then going what's interesting about my application",
    "start": "847440",
    "end": "852639"
  },
  {
    "text": "why is my application interesting i've got an algorithm that i'm going to run inside of my application",
    "start": "852639",
    "end": "859279"
  },
  {
    "text": "so i want to wrap that and i want that to be a span i want the inputs into that algorithm to be output for me to be able",
    "start": "859279",
    "end": "865680"
  },
  {
    "text": "to report to say that algorithm runs slow on a tuesday when the data center",
    "start": "865680",
    "end": "870880"
  },
  {
    "text": "is 72 degrees because i've attached that as an attribute um don't do that",
    "start": "870880",
    "end": "877120"
  },
  {
    "text": "but these are the things that you now get to your next level of saying these are what's interesting about my",
    "start": "877120",
    "end": "882240"
  },
  {
    "text": "application because every application is different so then how do we then set it up",
    "start": "882240",
    "end": "889920"
  },
  {
    "start": "885000",
    "end": "1299000"
  },
  {
    "text": "i would imagine everybody here is using the at least.net core",
    "start": "889920",
    "end": "895360"
  },
  {
    "text": "possibly even minimal apis this is minimal apis if you've not seen them they are really really cool especially",
    "start": "895360",
    "end": "900800"
  },
  {
    "text": "if you're writing microservices it is simple it is add open telemetry tracing",
    "start": "900800",
    "end": "907279"
  },
  {
    "text": "tell it which one of the instrumentations you want and then tell it where you want to put that information",
    "start": "907279",
    "end": "914000"
  },
  {
    "text": "so open telemetry has this idea of the instrumentation the spans but it also has this idea of exporters and exporters",
    "start": "914000",
    "end": "920959"
  },
  {
    "text": "of where are you going to send all of these spans that you create where are you going to send them to actually visualize them",
    "start": "920959",
    "end": "927120"
  },
  {
    "text": "and we'll come on to two of those um at the end obviously i am going to talk about honeycomb but i'm also going to talk about the open source solutions in",
    "start": "927120",
    "end": "933440"
  },
  {
    "text": "jager um zipkin still exists um but jager is predominantly the one that people use so we'll talk about that one",
    "start": "933440",
    "end": "939759"
  },
  {
    "text": "as well so",
    "start": "939759",
    "end": "945199"
  },
  {
    "text": "you'll see on this next one we've just replaced that console exporter with the jager exporter",
    "start": "945199",
    "end": "951040"
  },
  {
    "text": "you can have both of them in there you can have 10 of them in there you have as many of those exporters as you want and",
    "start": "951040",
    "end": "956639"
  },
  {
    "text": "it will send all of your traces to all of those exporters that's what we normally suggest to people if they are trying out different",
    "start": "956639",
    "end": "962240"
  },
  {
    "text": "providers to send it to both of us and see what the difference is because different providers different exporters",
    "start": "962240",
    "end": "969519"
  },
  {
    "text": "provide different value some people focus on service mapping some people focus on high performance and high",
    "start": "969519",
    "end": "975519"
  },
  {
    "text": "cardinality all of them focus on different things and it's up to you what's important to you to know what to do you can add as",
    "start": "975519",
    "end": "982240"
  },
  {
    "text": "many exports as you want just bear in mind if you're batching things up the more you back things up the more active supporters you add the more memory",
    "start": "982240",
    "end": "988320"
  },
  {
    "text": "you're going to use so just bear that one in mind",
    "start": "988320",
    "end": "992959"
  },
  {
    "text": "so um charles bands so i talked about what is part of a",
    "start": "994839",
    "end": "1000399"
  },
  {
    "text": "trace um a trace is a an entity it has child",
    "start": "1000399",
    "end": "1006000"
  },
  {
    "text": "actions that are part of it so if we're talking about distributed system you've got your http request that comes in at the top you've got all the different",
    "start": "1006000",
    "end": "1012240"
  },
  {
    "text": "micro services that then end up being part of that if you're writing these sort of distributed monolith type",
    "start": "1012240",
    "end": "1018079"
  },
  {
    "text": "methodology you've got lots of http requests going everywhere if you've got messaging you've got messages going",
    "start": "1018079",
    "end": "1023360"
  },
  {
    "text": "everywhere and loads of things coming back those are all trial traces now what i want to make clear though is",
    "start": "1023360",
    "end": "1029839"
  },
  {
    "text": "distributed tracing doesn't have to be about micro services",
    "start": "1029839",
    "end": "1035438"
  },
  {
    "text": "you can wrap inside of your code like this a particular action so i talked before",
    "start": "1035439",
    "end": "1040798"
  },
  {
    "text": "about the algorithm you may have an algorithm in your code that you want to wrap around and say i'm",
    "start": "1040799",
    "end": "1045839"
  },
  {
    "text": "going to create a little child spam for that particular thing and we'll show something like that in the demo",
    "start": "1045839",
    "end": "1052240"
  },
  {
    "text": "so a child span is just creating an activity from a source so you can see on this diagram here we're creating an",
    "start": "1052240",
    "end": "1058559"
  },
  {
    "text": "activity source which in open telemetry terms would be a tracer um",
    "start": "1058559",
    "end": "1064240"
  },
  {
    "text": "and then we're going to create an activity off the back of that so we're going to create a span off the back of there",
    "start": "1064240",
    "end": "1070160"
  },
  {
    "text": "now i've not done anything with that span all i've said is that a span has a time limit so what i've done is i've wrapped it in",
    "start": "1070160",
    "end": "1075440"
  },
  {
    "text": "disposable so that delay is going to come up as 500 milliseconds nothing special on there",
    "start": "1075440",
    "end": "1082160"
  },
  {
    "text": "we can do a few more bits with that though",
    "start": "1082160",
    "end": "1085919"
  },
  {
    "text": "so that's what charles fan would look like it doesn't match 500 milliseconds but",
    "start": "1087440",
    "end": "1093200"
  },
  {
    "text": "that was probably me changing the demo um so that second delayed process that you can see there",
    "start": "1093200",
    "end": "1099039"
  },
  {
    "text": "that's a child spam that's happening inside the application and you can see that we've got causality",
    "start": "1099039",
    "end": "1105120"
  },
  {
    "text": "i talked before about the idea that tracing is about causality now you can see from that diagram",
    "start": "1105120",
    "end": "1111039"
  },
  {
    "text": "that we've got the delayed process is caused by that one above it it's not just two",
    "start": "1111039",
    "end": "1116240"
  },
  {
    "text": "log lines it's actually caused by that one thing they're part of the same thing if we had 10 to 15 of these in a",
    "start": "1116240",
    "end": "1123440"
  },
  {
    "text": "distributed hierarchy then you would be able to see what one request has caused throughout all of your systems",
    "start": "1123440",
    "end": "1130880"
  },
  {
    "text": "our system that we build has a limit of about 5 000 spans that you can have on one screen",
    "start": "1131360",
    "end": "1137919"
  },
  {
    "text": "if you get that large and you need some help come talk to me because i need to know what you're doing",
    "start": "1137919",
    "end": "1143679"
  },
  {
    "text": "so now we'll talk about attributes so attributes are these extra things",
    "start": "1144160",
    "end": "1151520"
  },
  {
    "text": "that you want to know about that spam about that trace that's coming up so you can set",
    "start": "1151520",
    "end": "1157360"
  },
  {
    "text": "arbitrary information on it you can say i know account type",
    "start": "1157360",
    "end": "1162880"
  },
  {
    "text": "is what we we might put in there oh i want to tag all my traces so i've got the vips",
    "start": "1162880",
    "end": "1168080"
  },
  {
    "text": "so i can actually monitor the vips separately to other things that might be something that's really important to you",
    "start": "1168080",
    "end": "1173360"
  },
  {
    "text": "it might be your account ids it might be the number of things inside of your algorithm that you're analyzing",
    "start": "1173360",
    "end": "1179360"
  },
  {
    "text": "each time which would allow you to know well when it's a hundred things that i'm analyzing the performance is this whereas when it's 200 things it's this",
    "start": "1179360",
    "end": "1185919"
  },
  {
    "text": "when it's 500 things it's this these are all things about when i was talking about that intentionality about you",
    "start": "1185919",
    "end": "1191840"
  },
  {
    "text": "thinking about what should i be emitting from my application this is you saying this is important to",
    "start": "1191840",
    "end": "1197120"
  },
  {
    "text": "me now what you should be doing there is putting everything that you think might",
    "start": "1197120",
    "end": "1202320"
  },
  {
    "text": "be relevant not just the things that you know about right now that you think are relevant",
    "start": "1202320",
    "end": "1207919"
  },
  {
    "text": "put everything in there and this is that idea of when i go into production i don't know what i didn't",
    "start": "1207919",
    "end": "1212960"
  },
  {
    "text": "want it might be the temperature in the data center is actually really important who",
    "start": "1212960",
    "end": "1218840"
  },
  {
    "text": "knows if somebody works out how to actually do that i want to do it in a demo so if you can like find the temperature in the data center and stick",
    "start": "1218840",
    "end": "1225120"
  },
  {
    "text": "it in a span do let me know okay so what we do there is we're",
    "start": "1225120",
    "end": "1230640"
  },
  {
    "text": "focusing then on the information that comes in now there's two elements the two",
    "start": "1230640",
    "end": "1235919"
  },
  {
    "text": "terminologies that we use it's called high cardinality and high dimensionality so dimensionality is about the number of",
    "start": "1235919",
    "end": "1241919"
  },
  {
    "text": "attributes or tags that you add to each one of your spans you should be adding as many as you as",
    "start": "1241919",
    "end": "1247679"
  },
  {
    "text": "you can on to there high cardinality is about providing in",
    "start": "1247679",
    "end": "1253280"
  },
  {
    "text": "there information that can have millions of possible values",
    "start": "1253280",
    "end": "1258320"
  },
  {
    "text": "so think about account id now if you've used something like um",
    "start": "1258320",
    "end": "1263360"
  },
  {
    "text": "prometheus and you've tried to put a count id on there to try and map things um i can see",
    "start": "1263360",
    "end": "1269280"
  },
  {
    "text": "the people smiling at the ones that saw prometheus rocking in a corner just going please don't um",
    "start": "1269280",
    "end": "1275280"
  },
  {
    "text": "that's about high cardinality metric systems really struggle with it tracing systems do not",
    "start": "1275280",
    "end": "1280320"
  },
  {
    "text": "and that's why you should be putting those things in there because in high load systems you do want to know what proportion of your users are affected is",
    "start": "1280320",
    "end": "1286720"
  },
  {
    "text": "it one user is it five users it might be user groups in there you might want to pop 50 user groups in there and",
    "start": "1286720",
    "end": "1292480"
  },
  {
    "text": "all those things are really useful to be put in okay so now i'm going to talk about um",
    "start": "1292480",
    "end": "1299520"
  },
  {
    "start": "1299000",
    "end": "1693000"
  },
  {
    "text": "the foot gun which is called um",
    "start": "1299520",
    "end": "1305440"
  },
  {
    "text": "i wrote a blog post about this because it really annoys me um",
    "start": "1305440",
    "end": "1310720"
  },
  {
    "text": "baggage can get you into a lot of trouble now baggage was a w3c standard which is",
    "start": "1310720",
    "end": "1317919"
  },
  {
    "text": "why it was implemented and it's the idea of passing context between two services which sounds simple",
    "start": "1317919",
    "end": "1323280"
  },
  {
    "text": "you know just put something on one service and then when i go into the other service i'd like to know what that thing was maybe it's the account id is only available",
    "start": "1323280",
    "end": "1329919"
  },
  {
    "text": "when i do the claims on the request at the front i want to be able to put it on my spans off the second application sounds",
    "start": "1329919",
    "end": "1337039"
  },
  {
    "text": "awesome it sounds simple um now the problem with that though",
    "start": "1337039",
    "end": "1345039"
  },
  {
    "text": "is there's this little phrase here that people forget",
    "start": "1345039",
    "end": "1350640"
  },
  {
    "text": "and it says you shouldn't put confidential information in there and the reason is because it can",
    "start": "1350640",
    "end": "1355919"
  },
  {
    "text": "transition boundaries outside of your application now we talked before about the http client implementation we've got two",
    "start": "1355919",
    "end": "1362240"
  },
  {
    "text": "services we've got our service that's our front end we've got our product service where we go and get product",
    "start": "1362240",
    "end": "1367440"
  },
  {
    "text": "information for to render on our service great on the product service we can say how many individual users have been",
    "start": "1367440",
    "end": "1374080"
  },
  {
    "text": "recommend have been getting an individual product really great information the problem is our front-end service also goes off to this currency",
    "start": "1374080",
    "end": "1382159"
  },
  {
    "text": "exchange service and gets the exchange rate and guess what information it puts on",
    "start": "1382159",
    "end": "1387200"
  },
  {
    "text": "all of those requests because it's http client all of your confidential information",
    "start": "1387200",
    "end": "1392559"
  },
  {
    "text": "goes on all of those requests because there is no whitelist it doesn't know what's an internal service what's",
    "start": "1392559",
    "end": "1398159"
  },
  {
    "text": "an external service it just puts all of that information on there",
    "start": "1398159",
    "end": "1403840"
  },
  {
    "text": "so for that reason to me it is incredibly dangerous",
    "start": "1404000",
    "end": "1409760"
  },
  {
    "text": "now it's also just some arbitrary information it's an arbitrary shrink",
    "start": "1409760",
    "end": "1414840"
  },
  {
    "text": "um i saw somebody recently serialize an object into json",
    "start": "1414840",
    "end": "1420720"
  },
  {
    "text": "base64 encode it and stick it on baggage anybody heard of viewstate before",
    "start": "1420720",
    "end": "1427760"
  },
  {
    "text": "that went so well didn't it but that's what people are doing with these things because it's just a string and they say",
    "start": "1427760",
    "end": "1433279"
  },
  {
    "text": "well i want that object in this other service how just use baggage",
    "start": "1433279",
    "end": "1438240"
  },
  {
    "text": "that's the bad side of it that is what makes it very very bad it is however really really powerful",
    "start": "1438320",
    "end": "1446000"
  },
  {
    "text": "because it allows you to in a language agnostic way describe",
    "start": "1446000",
    "end": "1451120"
  },
  {
    "text": "things that should be on other services so i talked about account id an account id is a really important",
    "start": "1451120",
    "end": "1457679"
  },
  {
    "text": "thing that you might want to use on your product service to say this particular high-value product was",
    "start": "1457679",
    "end": "1463840"
  },
  {
    "text": "coming through and we keep getting hammered on our product service is it one user that's causing that",
    "start": "1463840",
    "end": "1468880"
  },
  {
    "text": "is it some bug in our system it might be oh it's the vip users are always slow oh it's only only the normal users it's",
    "start": "1468880",
    "end": "1474640"
  },
  {
    "text": "fine we don't care about those um but this idea of being able to transfer it in a language agnostic way",
    "start": "1474640",
    "end": "1482720"
  },
  {
    "text": "which means that if your third-party service or your first party service that you're using is written in node",
    "start": "1482720",
    "end": "1488080"
  },
  {
    "text": "god forbid then yes it can extract that information from baggage",
    "start": "1488080",
    "end": "1493120"
  },
  {
    "text": "even if it's coming from a net service or a java service or a go service or a python service or a php service all of",
    "start": "1493120",
    "end": "1500080"
  },
  {
    "text": "those have sdks for open telemetry and baggage provides a language agnostic way for you to say",
    "start": "1500080",
    "end": "1506640"
  },
  {
    "text": "here it is account id you can go and get account id and you can put it on your spans",
    "start": "1506640",
    "end": "1513360"
  },
  {
    "text": "one thing to mention is baggage is not another type of attribute so we talked before about our attributes that we were",
    "start": "1513360",
    "end": "1520320"
  },
  {
    "text": "adding to it and we were putting our type of awesome thing on there just by us saying that we're going to",
    "start": "1520320",
    "end": "1526559"
  },
  {
    "text": "add baggage doesn't mean that that's an attribute that will go on to your tracing provider baggage is a different concept",
    "start": "1526559",
    "end": "1534799"
  },
  {
    "text": "so how do i add baggage it's really really really complicated you call the baggage set baggage",
    "start": "1536720",
    "end": "1544320"
  },
  {
    "text": "so you want to see that in a little bit of a wider context um i'm not expecting everybody to read that it is",
    "start": "1544320",
    "end": "1550240"
  },
  {
    "text": "it's actually quite big so what we're going to be what we're doing there is we are",
    "start": "1550240",
    "end": "1555279"
  },
  {
    "text": "setting our baggage and then we are going to call an external service and this service that",
    "start": "1555279",
    "end": "1560320"
  },
  {
    "text": "we're going to call this product info service is going to get that baggage information um over which is our account",
    "start": "1560320",
    "end": "1566960"
  },
  {
    "text": "id that it will be able to extract and you can see there we've got child activity within a child activity and you",
    "start": "1566960",
    "end": "1573679"
  },
  {
    "text": "can go as deep as you want to do so",
    "start": "1573679",
    "end": "1579600"
  },
  {
    "text": "that's the that's the baggage stuff i i like it and i think you should use it",
    "start": "1579600",
    "end": "1585200"
  },
  {
    "text": "just be really really cautious about what you do think about the external services that you're doing you can clear the request",
    "start": "1585200",
    "end": "1591520"
  },
  {
    "text": "before you do it so if you're using http client if it's going to be an external one go into your http client clear all the",
    "start": "1591520",
    "end": "1597520"
  },
  {
    "text": "headers make sure you don't pass the trace ids there is an amazing story that if you come and grab me afterwards i'll tell",
    "start": "1597520",
    "end": "1603440"
  },
  {
    "text": "you when that went wrong as a provider that receives traces um it's a very interesting and funny story",
    "start": "1603440",
    "end": "1609679"
  },
  {
    "text": "that i won't tell live but yes that is the the baggage stuff",
    "start": "1609679",
    "end": "1616400"
  },
  {
    "text": "um now i'm intentionally not going into a lot of depth here this is meant to be a everybody should be using open",
    "start": "1616400",
    "end": "1622720"
  },
  {
    "text": "telemetry go and use open telemetry there is no downside to you implementing open telemetry all of the providers all",
    "start": "1622720",
    "end": "1629760"
  },
  {
    "text": "of those external providers the data dog new relic elastic everyone all the big providers",
    "start": "1629760",
    "end": "1637200"
  },
  {
    "text": "um that do apm solutions all of them are moving towards open telemetry as being their protocol",
    "start": "1637200",
    "end": "1642640"
  },
  {
    "text": "so you should be doing that what i'm trying to do here is say how easy it is to get that basic level of",
    "start": "1642640",
    "end": "1648480"
  },
  {
    "text": "um observability but you should go further you should",
    "start": "1648480",
    "end": "1654880"
  },
  {
    "text": "start to think about all the extra bits that you can do all the manual instrumentation so",
    "start": "1654880",
    "end": "1660640"
  },
  {
    "text": "i'm going to do a bit of a demo now this i talked about before that personality",
    "start": "1660640",
    "end": "1666080"
  },
  {
    "text": "this thing here is um our products honeycomb um which shows you that we've got something here that's going to call",
    "start": "1666080",
    "end": "1672240"
  },
  {
    "text": "and get some account information it's going to call and get some product information over a second service and you can see that we're visualizing the",
    "start": "1672240",
    "end": "1678399"
  },
  {
    "text": "different service names in there so i'm going to actually show this live if it works",
    "start": "1678399",
    "end": "1684880"
  },
  {
    "text": "wish me luck um so",
    "start": "1684880",
    "end": "1689919"
  },
  {
    "text": "there we go so what i've got here is just two basic services in net they're using minimal apis um so we've got on",
    "start": "1692159",
    "end": "1699120"
  },
  {
    "text": "the left is our service one with a few different routes on it doing some different things um is that can the people at the back",
    "start": "1699120",
    "end": "1705200"
  },
  {
    "text": "can you read that all right do you want me to zoom in zoom zoom okay",
    "start": "1705200",
    "end": "1710720"
  },
  {
    "text": "and so we'll open it one by one then",
    "start": "1710720",
    "end": "1716720"
  },
  {
    "text": "all right how's that good okay so service one we're doing what we said",
    "start": "1716880",
    "end": "1722559"
  },
  {
    "text": "before we're going to add our extra source so we talked about activity source we create an activity source that allows us to separate some of our",
    "start": "1722559",
    "end": "1729120"
  },
  {
    "text": "methods now what we need to do is tell open telemetry to listen to that source",
    "start": "1729120",
    "end": "1734559"
  },
  {
    "text": "because it's emitted as part of activity an activity source we need to tell open telemetry when it runs go and listen to",
    "start": "1734559",
    "end": "1740000"
  },
  {
    "text": "that thing what we're also going to do as i said before we're going to have two exporters",
    "start": "1740000",
    "end": "1746000"
  },
  {
    "text": "we're going to add our jager exporter and we're going to add our honeycomb exporter i wonder if i've got",
    "start": "1746000",
    "end": "1751039"
  },
  {
    "text": "the console exporter um if that works as well",
    "start": "1751039",
    "end": "1757278"
  },
  {
    "text": "i don't have it but you could add more exporters in there if you wanted to so this is our front end service",
    "start": "1758240",
    "end": "1763679"
  },
  {
    "text": "we've got basic route this is on github by the way so you can take this away and use it um",
    "start": "1763679",
    "end": "1769120"
  },
  {
    "text": "entirely up to you at your own risk if it burns down your data center it was not me",
    "start": "1769120",
    "end": "1774559"
  },
  {
    "text": "um so our first thing with our first one here is our child spam we're going to add our account id as baggage onto there",
    "start": "1774559",
    "end": "1781840"
  },
  {
    "text": "the more complicated one is this one and this is our showing of baggage and i'm going to show this one as a",
    "start": "1781840",
    "end": "1787840"
  },
  {
    "text": "as an example of how we can do it because it's the more advanced one",
    "start": "1787840",
    "end": "1793200"
  },
  {
    "text": "so what we're going to do here we're going to go and get our http client which is going to set our base address",
    "start": "1793200",
    "end": "1798720"
  },
  {
    "text": "to our other service we're going to create a dummy account id because i'm going to write an account service as well um",
    "start": "1798720",
    "end": "1805679"
  },
  {
    "text": "and we're going to create a child activity now the this one here between lines 52 and 58",
    "start": "1805679",
    "end": "1811760"
  },
  {
    "text": "that would be where i would see something like an internal algorithm that you wanted to do you just want to wrap that thing you want to add some",
    "start": "1811760",
    "end": "1817840"
  },
  {
    "text": "information to it we've gone and got some account information that kind of stuff",
    "start": "1817840",
    "end": "1823200"
  },
  {
    "text": "the second one is our product and what we've got inside of here now is two different child activities",
    "start": "1823200",
    "end": "1828799"
  },
  {
    "text": "they're not causality of each other so our baggage causes an account activity",
    "start": "1828799",
    "end": "1836159"
  },
  {
    "text": "but our account activity doesn't cause a product activity that's up to you to decide what's",
    "start": "1836159",
    "end": "1841600"
  },
  {
    "text": "important to you in an application and this is where i talk about this intentionality because you know what's",
    "start": "1841600",
    "end": "1846799"
  },
  {
    "text": "important and you know what you want to see our product activity is going to set",
    "start": "1846799",
    "end": "1852159"
  },
  {
    "text": "a tag on our product activity span and it's going to call out to a product",
    "start": "1852159",
    "end": "1857919"
  },
  {
    "text": "info service which is then going to return us some information about a product",
    "start": "1857919",
    "end": "1864240"
  },
  {
    "text": "okay our second service is even simpler",
    "start": "1864240",
    "end": "1871519"
  },
  {
    "text": "so our second service we're going to do the same thing we're going to set up our jager exporter and our honeycomb",
    "start": "1871519",
    "end": "1877200"
  },
  {
    "text": "exporter you'll notice on here it doesn't have an activity source and that's because we're not creating any internal spans in this",
    "start": "1877200",
    "end": "1883840"
  },
  {
    "text": "one all we're going to use is the standard asp net spans and you can see here what we're doing is",
    "start": "1883840",
    "end": "1889760"
  },
  {
    "text": "we're using the current activity which is a thread safe way to get the current activity that is active",
    "start": "1889760",
    "end": "1895279"
  },
  {
    "text": "inside of your application and we're just going to tack some more attributes onto it because we don't care about creating another subspan",
    "start": "1895279",
    "end": "1903279"
  },
  {
    "text": "and then we're just going to return that information like i say incredibly simple",
    "start": "1903279",
    "end": "1911519"
  },
  {
    "text": "so i'm going to run that",
    "start": "1911519",
    "end": "1916240"
  },
  {
    "text": "if i get into the right directory",
    "start": "1916559",
    "end": "1920360"
  },
  {
    "text": "and you know this isn't going to work now because you know i didn't do the ritual sacrifices before",
    "start": "1925919",
    "end": "1931200"
  },
  {
    "text": "i came on the tour um okay so um we've got our baggage endpoint this",
    "start": "1931200",
    "end": "1936960"
  },
  {
    "start": "1934000",
    "end": "2409000"
  },
  {
    "text": "is our service one um that we're doing we're just gonna hit that you see it's taking a little bit of time the reason is because i put some delays in so it",
    "start": "1936960",
    "end": "1942960"
  },
  {
    "text": "makes our span look good um so we're gonna do a couple of those now",
    "start": "1942960",
    "end": "1949120"
  },
  {
    "text": "i'm going to show jaeger first so jager what i've done here i've run this up locally",
    "start": "1949120",
    "end": "1955440"
  },
  {
    "text": "in a in a container it's one line it's not hard um you should be",
    "start": "1955440",
    "end": "1961840"
  },
  {
    "text": "able to do this if you've got docker desktop i would advise that you start doing this locally just so that you can start to see it and there are some initiatives",
    "start": "1961840",
    "end": "1968799"
  },
  {
    "text": "around how do we visualize traces without external applications um so particularly putting things like",
    "start": "1968799",
    "end": "1974240"
  },
  {
    "text": "graphical analyzers on the console but at the moment the only way to visualize your traces especially in net is to have",
    "start": "1974240",
    "end": "1980159"
  },
  {
    "text": "something like jager um or some other third-party product like us um which we do have a free tip by the way that you",
    "start": "1980159",
    "end": "1985919"
  },
  {
    "text": "can all use um so that's that's my wages covered now um",
    "start": "1985919",
    "end": "1990960"
  },
  {
    "text": "so you need something else to visualize them so you can see here this is our",
    "start": "1990960",
    "end": "1996080"
  },
  {
    "text": "trace of our front-end service um let's zoom in a little bit here so you can see we've got that",
    "start": "1996080",
    "end": "2002840"
  },
  {
    "text": "causality so what we've got there is our first top level services are called to account",
    "start": "2002840",
    "end": "2008559"
  },
  {
    "text": "we've then got our second bit which is our running of getting that account information which is just our dummy um",
    "start": "2008559",
    "end": "2013600"
  },
  {
    "text": "500 millisecond rule and then we've got our um get onto that",
    "start": "2013600",
    "end": "2019200"
  },
  {
    "text": "other service so you can see front end service and product service are the two different things and if we zoom out a",
    "start": "2019200",
    "end": "2024480"
  },
  {
    "text": "little bit you can start to see our traces um our waterfall chart and these are the things that you would know if you if",
    "start": "2024480",
    "end": "2030399"
  },
  {
    "text": "you've been doing tracing if you've been doing things like continuous profiling with um apm tools you'll be used to this",
    "start": "2030399",
    "end": "2035919"
  },
  {
    "text": "kind of stuff but this is about you being intentional about what you do rather than this being",
    "start": "2035919",
    "end": "2041039"
  },
  {
    "text": "all automatic and it's also vendor agnostic so that you can switch provider whatever",
    "start": "2041039",
    "end": "2046159"
  },
  {
    "text": "you want and it's something that we advocate for because if we're not the best move on so",
    "start": "2046159",
    "end": "2052000"
  },
  {
    "text": "um but we can see there we've got our different 500 milliseconds is around that so what we're adding about nine",
    "start": "2052000",
    "end": "2057280"
  },
  {
    "text": "milliseconds on to the asp.net is what's adding on to our calls",
    "start": "2057280",
    "end": "2062398"
  },
  {
    "text": "then we can start to drill in and start to see some of the tags that have been added so those ones there those are the default ones i was talking",
    "start": "2062399",
    "end": "2068720"
  },
  {
    "text": "about so when we do asp.net core into instrumentation we say just give us everything that's the information it's",
    "start": "2068720",
    "end": "2074878"
  },
  {
    "text": "going to give us now these are standard attributes so http host http method these are",
    "start": "2074879",
    "end": "2081599"
  },
  {
    "text": "standardized in the open telemetry specs there is a semantic naming that they talk about so if you're using azure",
    "start": "2081599",
    "end": "2087839"
  },
  {
    "text": "there's a load of azure attributes that start with azure dot there's aws for aws store apparently there's some googly",
    "start": "2087839",
    "end": "2093760"
  },
  {
    "text": "thing um that has its own um but you've also got things like the open telemetry library so what library",
    "start": "2093760",
    "end": "2099680"
  },
  {
    "text": "version am i doing and these are all really interesting things that you might want to know what's the assembly version",
    "start": "2099680",
    "end": "2104880"
  },
  {
    "text": "of my libraries because it could be that you've got some old code running in your application",
    "start": "2104880",
    "end": "2110640"
  },
  {
    "text": "you've done a kubernetes deployment it's not a rolling deployment you've got one stuck pod living there so you might want to put",
    "start": "2110640",
    "end": "2116480"
  },
  {
    "text": "all those things out there and then we've got all our honeycomb attributes as well um",
    "start": "2116480",
    "end": "2122880"
  },
  {
    "text": "and now we start to get to the stuff that we've added ourselves so you can see there we've got that account type thing that i added in there",
    "start": "2122880",
    "end": "2131920"
  },
  {
    "text": "now when we're going to get down to this bottom one here which is the span for our product service",
    "start": "2131920",
    "end": "2138640"
  },
  {
    "text": "you can also see that we've got account id now the product service request didn't get account id all it got was the",
    "start": "2140880",
    "end": "2147760"
  },
  {
    "text": "account number that the product id it didn't get an account number but what we did is we passed that over in baggage",
    "start": "2147760",
    "end": "2154800"
  },
  {
    "text": "because you know we like to live life dangerously so we've put that in there and what we've done with that",
    "start": "2154800",
    "end": "2162560"
  },
  {
    "text": "if we go back to the code if you look at this line here",
    "start": "2162640",
    "end": "2169839"
  },
  {
    "text": "we go and get the baggage so we get a known parameter of account id",
    "start": "2169839",
    "end": "2175520"
  },
  {
    "text": "out of baggage and then we set that as an attribute that's the thing that catches",
    "start": "2175520",
    "end": "2182560"
  },
  {
    "text": "almost every person i speak to out they say i've added my baggage but all of my child's fans don't have",
    "start": "2182560",
    "end": "2188560"
  },
  {
    "text": "that attribute and that's because that isn't what baggage is baggage is an ability to send the",
    "start": "2188560",
    "end": "2194720"
  },
  {
    "text": "context between services it's not the ability to add it to spans there are",
    "start": "2194720",
    "end": "2200560"
  },
  {
    "text": "solutions out there that will take all of those active all of those baggage things and apply them as spam attributes",
    "start": "2200560",
    "end": "2205599"
  },
  {
    "text": "i don't advise using them some people do i do not um it is dangerous because",
    "start": "2205599",
    "end": "2211760"
  },
  {
    "text": "those things that come in those baggage things could come in from external services so if you've got a publicly available",
    "start": "2211760",
    "end": "2217920"
  },
  {
    "text": "service what if somebody sends over to you a load of baggage attributes are just",
    "start": "2217920",
    "end": "2224400"
  },
  {
    "text": "going to take all those and apply them to all of your spams is that useful probably not",
    "start": "2224400",
    "end": "2230320"
  },
  {
    "text": "ingo is the only language right now that has the ability to say i am a public endpoint ignore all of the baggage",
    "start": "2230320",
    "end": "2236960"
  },
  {
    "text": "we will get one in dot-net soon but it isn't there at the moment so that's our",
    "start": "2236960",
    "end": "2244000"
  },
  {
    "text": "jaeger exporter and you can see we've got product id that one's coming through as an integer we've got account",
    "start": "2244000",
    "end": "2249359"
  },
  {
    "text": "id it's coming through as a guide i mean this is all basic stuff",
    "start": "2249359",
    "end": "2254640"
  },
  {
    "text": "but now we can start doing some interesting stuff with that data because we've got this stuff in",
    "start": "2254640",
    "end": "2260640"
  },
  {
    "text": "our jaeger stuff we can start to do some searching on well let's just find all of the account info ones",
    "start": "2260640",
    "end": "2269040"
  },
  {
    "text": "anything that contains an account info attribute now my issue with jaeger is it's hard to scale it uses cassandra",
    "start": "2269040",
    "end": "2275359"
  },
  {
    "text": "under the hood um if you want to try and run this internally then you're going to have to start thinking about how you scale cassandra",
    "start": "2275359",
    "end": "2281839"
  },
  {
    "text": "when you start to think about thousands and thousands and millions of traces it is very very good for doing this",
    "start": "2281839",
    "end": "2288880"
  },
  {
    "text": "basic level of stuff and if you've got some small value services some small services that you run absolutely jaeger",
    "start": "2288880",
    "end": "2294800"
  },
  {
    "text": "will be providing you much better than just a logging solution just taking something throwing it",
    "start": "2294800",
    "end": "2299920"
  },
  {
    "text": "through fluentd fluent bit and then displaying some log attributes you're",
    "start": "2299920",
    "end": "2305119"
  },
  {
    "text": "going to get a lot more information by doing this because you're going to get that causality now if we look at those same things on",
    "start": "2305119",
    "end": "2312240"
  },
  {
    "text": "our service if you want to go that's fine this is the what we do",
    "start": "2312240",
    "end": "2318000"
  },
  {
    "text": "it is much better but i am ever so slightly biased",
    "start": "2318000",
    "end": "2323440"
  },
  {
    "text": "so what we've got here is a the same sort of trace that we've got on there",
    "start": "2323440",
    "end": "2329520"
  },
  {
    "text": "which you know it's exactly the same thing um that you've got other than the fact that we've now got",
    "start": "2329520",
    "end": "2335119"
  },
  {
    "text": "some more information down the side um and this is where we say that",
    "start": "2335119",
    "end": "2341520"
  },
  {
    "text": "open telemetry isn't special it doesn't it's not special your exporters they get the same",
    "start": "2341520",
    "end": "2347760"
  },
  {
    "text": "information it's all about what you do with them now for us we focus on the high",
    "start": "2347760",
    "end": "2352880"
  },
  {
    "text": "cardinality attributes so things like user ids high performance and that's our focus",
    "start": "2352880",
    "end": "2359520"
  },
  {
    "text": "so that you can start to see things like the um the heat maps",
    "start": "2359520",
    "end": "2365760"
  },
  {
    "text": "of your requests which is not going to be very big on",
    "start": "2365760",
    "end": "2371760"
  },
  {
    "text": "this one but we can start to do things like a a heat map on your duration to see where",
    "start": "2371760",
    "end": "2377280"
  },
  {
    "text": "of where are all the requests going that are quite i mean there's only two requests there so you can",
    "start": "2377280",
    "end": "2382640"
  },
  {
    "text": "can't really see much in there but you can start to see a lot more information um through these exporters",
    "start": "2382640",
    "end": "2389680"
  },
  {
    "text": "but you can send it to all of the exporters you can send it to one exporter you can start to trade off different",
    "start": "2389680",
    "end": "2395119"
  },
  {
    "text": "exporters to see which one is the the one that's going to provide you with the best information",
    "start": "2395119",
    "end": "2401359"
  },
  {
    "text": "okay so i've looked at honeycomb and we've",
    "start": "2404319",
    "end": "2410480"
  },
  {
    "start": "2409000",
    "end": "2784000"
  },
  {
    "text": "looked at jaeger as outputs as exporters um as that terminology now the other thing that you can do is",
    "start": "2410480",
    "end": "2417040"
  },
  {
    "text": "especially if you're using high volume systems if you've got 50 70 100",
    "start": "2417040",
    "end": "2423119"
  },
  {
    "text": "god forbid fifteen hundred micro services in your application managing the keys to send to different",
    "start": "2423119",
    "end": "2430240"
  },
  {
    "text": "places is going to be quite hard you've got fifty if you have a key that expires you've got fifteen hundred",
    "start": "2430240",
    "end": "2436319"
  },
  {
    "text": "deployments to go and send that change all that information to change your external stuff",
    "start": "2436319",
    "end": "2442079"
  },
  {
    "text": "now open telemetry has something called a collector a collector is an exporter",
    "start": "2442079",
    "end": "2447920"
  },
  {
    "text": "the same as jaeger the same as we are but it's more of an aggregator so it",
    "start": "2447920",
    "end": "2453280"
  },
  {
    "text": "will take all of your spam data in and allow you to do something central with it now that might just be send it all",
    "start": "2453280",
    "end": "2458880"
  },
  {
    "text": "here and we'll send it out that's really useful if you've got a constrained environment a secure",
    "start": "2458880",
    "end": "2464720"
  },
  {
    "text": "environment where what you need to do is send um all of your data out through one egress endpoint",
    "start": "2464720",
    "end": "2471040"
  },
  {
    "text": "so you've got a my services can't talk to external services so what i need to do is i need to send",
    "start": "2471040",
    "end": "2476560"
  },
  {
    "text": "them to something else that something else can talk to one endpoint and that might be your provider that you're sending now it might be to your jaeger",
    "start": "2476560",
    "end": "2482720"
  },
  {
    "text": "instance that's really useful in hyper secure environments it's also useful if you've got a third",
    "start": "2482720",
    "end": "2489200"
  },
  {
    "text": "party that has keys because you can change your keys in one or multiple locations in your collector",
    "start": "2489200",
    "end": "2496240"
  },
  {
    "text": "and only in your collector there's also some really interesting things inside the collector because it",
    "start": "2496240",
    "end": "2502000"
  },
  {
    "text": "can do post processing on your spans now if you're in an environment which um",
    "start": "2502000",
    "end": "2508319"
  },
  {
    "text": "you might be outputting personal information you might be handling some personal information it can be really useful from in one",
    "start": "2508319",
    "end": "2515119"
  },
  {
    "text": "specific location to say anytime you see something that's a 16-digit number",
    "start": "2515119",
    "end": "2520960"
  },
  {
    "text": "probably want to remove that because that's something before i send it on to my third party provider",
    "start": "2520960",
    "end": "2526400"
  },
  {
    "text": "i don't want them to get the credit cards so you can provide these redaction",
    "start": "2526400",
    "end": "2531520"
  },
  {
    "text": "filters there's a redaction processor that you can put in that says search for something that looks like this it might be a an attribute called first name",
    "start": "2531520",
    "end": "2539520"
  },
  {
    "text": "remove that we don't want it i still want you to send all this other information up but remove these bits of information from a security context it's",
    "start": "2539520",
    "end": "2546480"
  },
  {
    "text": "quite useful to be able to do that sort of stuff you can also do",
    "start": "2546480",
    "end": "2551839"
  },
  {
    "text": "in some of the languages and i said before in dot net it's not a particular problem in dot net",
    "start": "2551839",
    "end": "2557839"
  },
  {
    "text": "where we put things into a background process and then in that background process we will then send that",
    "start": "2557839",
    "end": "2563359"
  },
  {
    "text": "information over to a third party asynchronously so it doesn't actually affect your request",
    "start": "2563359",
    "end": "2569119"
  },
  {
    "text": "there are languages that don't do that there are languages where it will send out that information",
    "start": "2569119",
    "end": "2575599"
  },
  {
    "text": "synchronously so if your third party provider has a blip and it takes them 10 seconds to",
    "start": "2575599",
    "end": "2581839"
  },
  {
    "text": "receive that information your http request now takes whatever you were doing plus 10 seconds",
    "start": "2581839",
    "end": "2587599"
  },
  {
    "text": "which is not great the collector allows you to say in my application i'm just going to send my information straight to",
    "start": "2587599",
    "end": "2593040"
  },
  {
    "text": "this collector and the collector will handle all those retries all of that offline stuff now one place that's particularly",
    "start": "2593040",
    "end": "2599839"
  },
  {
    "text": "useful is in azure functions because azure functions doesn't have a background process",
    "start": "2599839",
    "end": "2605599"
  },
  {
    "text": "for you to be able to send that information into and that background process to be able to run it's a lot better in our process",
    "start": "2605599",
    "end": "2612079"
  },
  {
    "text": "functions but it is still a problem so using something like the collector you can co-host that in a location close to",
    "start": "2612079",
    "end": "2618720"
  },
  {
    "text": "your functions and be able to synchronously send all of your spans to that collector and have that push that",
    "start": "2618720",
    "end": "2624079"
  },
  {
    "text": "information out to wherever it needs to go whether it's jaeger or third-party providers",
    "start": "2624079",
    "end": "2629838"
  },
  {
    "text": "now it also provides this really interesting capability for centralized enrichment",
    "start": "2630319",
    "end": "2635680"
  },
  {
    "text": "so in a kubernetes environment you might want to say i'd like to tag everything with the",
    "start": "2635680",
    "end": "2641680"
  },
  {
    "text": "namespace all these spans that come over i want to tag it with the namespace i want to tag it with a pod id i want to tag it with",
    "start": "2641680",
    "end": "2648880"
  },
  {
    "text": "the region that these things are in now what this allows you to do because you're sending it through the collector",
    "start": "2648880",
    "end": "2654400"
  },
  {
    "text": "now you don't have to worry about that in your application so in your application you don't have to worry about the tags",
    "start": "2654400",
    "end": "2659920"
  },
  {
    "text": "that you're going to add you don't have to worry about am i hosted in kubernetes am i hosted in container apps and i",
    "start": "2659920",
    "end": "2665359"
  },
  {
    "text": "hosted in something else using a collector it can say oh you came from a container app you can t you came",
    "start": "2665359",
    "end": "2671920"
  },
  {
    "text": "from a pod in kubernetes i'm going to work out what the details of that pod are and i'm going to do that in richmond",
    "start": "2671920",
    "end": "2678960"
  },
  {
    "text": "which again is a very very interesting use case for the collector once you get to a significant size i",
    "start": "2678960",
    "end": "2685520"
  },
  {
    "text": "would always recommend you use the collector instead of going direct so if you're using something that's",
    "start": "2685520",
    "end": "2690720"
  },
  {
    "text": "incredibly high volume go through the collector if you're using something that's got more than say two or three micro services that all need",
    "start": "2690720",
    "end": "2697839"
  },
  {
    "text": "that same key to go to that same external service put a collector in it's very very lightweight it can run as",
    "start": "2697839",
    "end": "2702880"
  },
  {
    "text": "a container it can run as an application you can run it as sidecars inside of",
    "start": "2702880",
    "end": "2708560"
  },
  {
    "text": "the inside of kubernetes now the one thing i haven't got a slide on at the moment because it's only in",
    "start": "2708560",
    "end": "2714400"
  },
  {
    "text": "beta at the moment is something called the open opentelemetryagentfor.net",
    "start": "2714400",
    "end": "2719680"
  },
  {
    "text": "now i don't agree with the concept i will be open with that um because it's about",
    "start": "2719680",
    "end": "2724720"
  },
  {
    "text": "auto instrumentation rather than being intentional but this allows you in the worlds if you've been doing tracing and",
    "start": "2724720",
    "end": "2731280"
  },
  {
    "text": "doing apm tools in the past where you would install an agent on your vm put it next to your.net application and",
    "start": "2731280",
    "end": "2737359"
  },
  {
    "text": "say instrumentthis.net application and give me all of the information there is now an",
    "start": "2737359",
    "end": "2742800"
  },
  {
    "text": "opentelemetryagentfor.net that you can run as a sidecar container in kubernetes and point that to your",
    "start": "2742800",
    "end": "2748560"
  },
  {
    "text": "application and get a all of that auto instrumentation that we were talking about it will go in and find all that",
    "start": "2748560",
    "end": "2754160"
  },
  {
    "text": "information it's only in beta at the moment it might even be an alpha it is",
    "start": "2754160",
    "end": "2759280"
  },
  {
    "text": "very very new but it does allow you to say if you're somebody who doesn't have the ability to",
    "start": "2759280",
    "end": "2764480"
  },
  {
    "text": "change the code then you can apply this collector this agent and get that agent to then send those to",
    "start": "2764480",
    "end": "2770720"
  },
  {
    "text": "the collector and then the collector can then forward those up and you get a nice open source vendor agnostic solution for taking",
    "start": "2770720",
    "end": "2778000"
  },
  {
    "text": "tracing and span data and sending that elsewhere",
    "start": "2778000",
    "end": "2783119"
  },
  {
    "text": "so that's me i am happy to take some questions um i managed to get at least four well",
    "start": "2783599",
    "end": "2791119"
  },
  {
    "text": "uh what 45 minutes out of about 10 lines of code which i think is pretty impressive um but i'm more than happy to",
    "start": "2791119",
    "end": "2797680"
  },
  {
    "text": "take any questions or if you want to come and see me um come and have a chat we do honeycomb do observability office",
    "start": "2797680",
    "end": "2804480"
  },
  {
    "text": "hours um so if you go onto our website if you've got some specific questions some problems that kind of stuff by all",
    "start": "2804480",
    "end": "2809760"
  },
  {
    "text": "means come to us it doesn't have to be about what we're doing um we are what we consider to be the observability",
    "start": "2809760",
    "end": "2815119"
  },
  {
    "text": "experts because we've been doing this for the longest in terms of observability but by all means book some time with us",
    "start": "2815119",
    "end": "2822000"
  },
  {
    "text": "and we can happily go through some specific use cases with you oh two questions",
    "start": "2822000",
    "end": "2829599"
  },
  {
    "text": "do you want to shout um and i'll repeat i'll go with you",
    "start": "2829599",
    "end": "2835119"
  },
  {
    "start": "2834000",
    "end": "2979000"
  },
  {
    "text": "and first really nice",
    "start": "2843280",
    "end": "2847640"
  },
  {
    "text": "okay so the question was in open telemetry we have traces traces are a first-class citizen um we've also",
    "start": "2868240",
    "end": "2874880"
  },
  {
    "text": "metrics has just gone live so metrics is part of the open telemetry spec at the moment it's not ga inside of the net",
    "start": "2874880",
    "end": "2881359"
  },
  {
    "text": "sdks at the moment but there is also an initiative called open telemetry logs which is the idea of standardizing the",
    "start": "2881359",
    "end": "2888400"
  },
  {
    "text": "protocol of how logs get sent to vendors dot net crowd so pretty much everybody's",
    "start": "2888400",
    "end": "2895040"
  },
  {
    "text": "heard of serilog and serialog has multiple different syncs that allow you to send it to various",
    "start": "2895040",
    "end": "2900480"
  },
  {
    "text": "different locations each one of those things is specific to a vendor open telemetry logs is the idea of how",
    "start": "2900480",
    "end": "2906640"
  },
  {
    "text": "do we standardize logs we've standardized how we send traces we've standardized how we set metrics and now",
    "start": "2906640",
    "end": "2912640"
  },
  {
    "text": "we're going to standardize how we do logs logs in.net is not fully fledged at the moment i would not recommend using it",
    "start": "2912640",
    "end": "2918800"
  },
  {
    "text": "yet we're only a few months away though so keep checking the um keep checking the sites",
    "start": "2918800",
    "end": "2924559"
  },
  {
    "text": "the protocol so the idea of what the schema is when it gets sent to a vendor that stuff has all been finalized it was",
    "start": "2924559",
    "end": "2930640"
  },
  {
    "text": "finalized last month i think it was just as kubecon happened where we did the project meetings um so the protocol has",
    "start": "2930640",
    "end": "2937040"
  },
  {
    "text": "and now all of the sdks need to implement it and then the vendors need to implement the protocol as well",
    "start": "2937040",
    "end": "2942480"
  },
  {
    "text": "we're not far off i wouldn't recommend logs just yet but it's not far off",
    "start": "2942480",
    "end": "2948319"
  },
  {
    "text": "cool",
    "start": "2948319",
    "end": "2951319"
  },
  {
    "text": "so building a service map so the idea is the answer the question is within honeycomb specifically do we have the",
    "start": "2958559",
    "end": "2963920"
  },
  {
    "text": "ability to do a service map um yes it is coming it's not there yet",
    "start": "2963920",
    "end": "2969040"
  },
  {
    "text": "very very close i would love to show it but the engineering team would kill me and i do like my job",
    "start": "2969040",
    "end": "2976318"
  },
  {
    "start": "2979000",
    "end": "3189000"
  },
  {
    "text": "oh sorry",
    "start": "2980000",
    "end": "2983319"
  },
  {
    "text": "so the big difference and this is something that so the the question was um how do spans and traces relate to",
    "start": "2990400",
    "end": "2997119"
  },
  {
    "text": "logging because they seem to solve a similar space of problem the big difference between spans which",
    "start": "2997119",
    "end": "3005040"
  },
  {
    "text": "would be the equivalent of structured logs is causality so the idea of a span",
    "start": "3005040",
    "end": "3010640"
  },
  {
    "text": "is that it is descendant from something else so in a span the core three attributes",
    "start": "3010640",
    "end": "3016160"
  },
  {
    "text": "you have are the trace id the current span id so the unique id of this span",
    "start": "3016160",
    "end": "3021520"
  },
  {
    "text": "but also the parent id of that span so which one caused me to happen",
    "start": "3021520",
    "end": "3027359"
  },
  {
    "text": "and that's the big difference with tracing is the ability to say this particular entry was caused by this one but it's",
    "start": "3027359",
    "end": "3033680"
  },
  {
    "text": "part of this larger thing we've had in logging the ability to put correlation ids in for instance for a",
    "start": "3033680",
    "end": "3039040"
  },
  {
    "text": "while the causation stuff is the stuff that isn't really in the logging space at the",
    "start": "3039040",
    "end": "3044960"
  },
  {
    "text": "moment obviously you can do this in structured logs the idea of a spam is just a json blob with attributes on",
    "start": "3044960",
    "end": "3052160"
  },
  {
    "text": "it you could absolutely have created this in the past we're just saying my structured log has",
    "start": "3052160",
    "end": "3058480"
  },
  {
    "text": "this parent span id this um parent and this trace id you could absolutely have done that",
    "start": "3058480",
    "end": "3064480"
  },
  {
    "text": "but that idea of saying that this is how a spam works this standardization of a span it has to have this bit these bits",
    "start": "3064480",
    "end": "3071280"
  },
  {
    "text": "of information it has to have a context it has to have a duration all of these things are making that",
    "start": "3071280",
    "end": "3077599"
  },
  {
    "text": "a subset of structured logs if you want because it's about saying that all of these providers all of these exporters",
    "start": "3077599",
    "end": "3083920"
  },
  {
    "text": "take this in in a particular way",
    "start": "3083920",
    "end": "3087359"
  },
  {
    "text": "one thousand percent get rid of logs they can get in the bin [Laughter]",
    "start": "3092640",
    "end": "3098720"
  },
  {
    "text": "so yes i believe that we should be killing logs i don't believe logs in the context of where we're moving with",
    "start": "3098720",
    "end": "3104880"
  },
  {
    "text": "microservices where we're looking at high volume systems where the only place that you will see the the",
    "start": "3104880",
    "end": "3110880"
  },
  {
    "text": "actual usage of your application is in production logs do not give you that logs can give you a lot of stuff when",
    "start": "3110880",
    "end": "3116559"
  },
  {
    "text": "you run locally because you've got one request going through it's you doing your request and you can see those logs",
    "start": "3116559",
    "end": "3121680"
  },
  {
    "text": "when you're in a production system logs just don't give you that i'm looking at a log between 17 different",
    "start": "3121680",
    "end": "3127839"
  },
  {
    "text": "services to work out where the problem is and i'm trying to grab all of those logs and send them to one place",
    "start": "3127839",
    "end": "3133520"
  },
  {
    "text": "that not only takes time because i've got to send all of these traces to one location i've got to throw them through",
    "start": "3133520",
    "end": "3138960"
  },
  {
    "text": "an elk stack to then aggregate this information up i've got to throw them through any kind of number of processing",
    "start": "3138960",
    "end": "3144640"
  },
  {
    "text": "pipelines takes time to get those things up the idea of traces is that already exists",
    "start": "3144640",
    "end": "3150480"
  },
  {
    "text": "so to me yes you shouldn't be using logs really anymore but",
    "start": "3150480",
    "end": "3156160"
  },
  {
    "text": "they do provide some benefit we call them observability light because they will give you some of the",
    "start": "3156160",
    "end": "3161440"
  },
  {
    "text": "observability they will allow you to do some some things but they're not as good as tracing is",
    "start": "3161440",
    "end": "3168079"
  },
  {
    "text": "tracing is going to give you that causality it's going to give you the ability to look at a production system",
    "start": "3168079",
    "end": "3173119"
  },
  {
    "text": "and see that information coming out of it does that answer your question",
    "start": "3173119",
    "end": "3178960"
  },
  {
    "text": "awesome any more questions mark hello",
    "start": "3178960",
    "end": "3187640"
  },
  {
    "start": "3189000",
    "end": "3284000"
  },
  {
    "text": "you can make it do that i generally would not recommend it for that kind of stuff when you're putting a",
    "start": "3203839",
    "end": "3209599"
  },
  {
    "text": "stack trace in there so the question was if i throw an exception in my code and",
    "start": "3209599",
    "end": "3214800"
  },
  {
    "text": "it's an unhandled exception um can i have that inside of my stack trace inside of my spam you can there is an",
    "start": "3214800",
    "end": "3221920"
  },
  {
    "text": "attribute on the asp.net core instrumentation for record exception which will record all of that exception",
    "start": "3221920",
    "end": "3228000"
  },
  {
    "text": "data in there it becomes less useful when you're trying to do things like heuristics on that um that logging",
    "start": "3228000",
    "end": "3235599"
  },
  {
    "text": "information the exceptions there are better tools out there than a lot of the observability vendors for doing tracing",
    "start": "3235599",
    "end": "3242720"
  },
  {
    "text": "because when you get an exception what you want to be able to do is have a look at that stack trace and find some commonalities with other stack traces",
    "start": "3242720",
    "end": "3248880"
  },
  {
    "text": "that might have happened that stuff is beyond the capabilities of tracing at the moment also there are some providers",
    "start": "3248880",
    "end": "3255760"
  },
  {
    "text": "that do it but it is a an extra bit on top of that so yes you can",
    "start": "3255760",
    "end": "3260800"
  },
  {
    "text": "um how useful that is it's entirely up to you but this is all what i say about the",
    "start": "3260800",
    "end": "3265839"
  },
  {
    "text": "intentionality of what you're doing if you're going to put it on there you need to be actually using it you need to be thinking about this will",
    "start": "3265839",
    "end": "3272079"
  },
  {
    "text": "be useful at some point or it might be useful",
    "start": "3272079",
    "end": "3278119"
  },
  {
    "text": "any more what about in telemetry for example",
    "start": "3279440",
    "end": "3285680"
  },
  {
    "start": "3284000",
    "end": "3412000"
  },
  {
    "text": "tracing that how uh how mature is",
    "start": "3286160",
    "end": "3291240"
  },
  {
    "text": "so the question was around user telemetry um so the terminology for that is real user monitoring or rom um there",
    "start": "3292319",
    "end": "3299520"
  },
  {
    "text": "is a project ongoing in open telemetry to bring in a run project which is",
    "start": "3299520",
    "end": "3304559"
  },
  {
    "text": "apparently starting next month um so they've got a special interest group that's forming to think about how do we",
    "start": "3304559",
    "end": "3310799"
  },
  {
    "text": "standardize on rom now we've done tracing we've done metrics we've done logs",
    "start": "3310799",
    "end": "3316559"
  },
  {
    "text": "now what do we do around real user monitoring um so how do we look at the um the",
    "start": "3316559",
    "end": "3321839"
  },
  {
    "text": "tracing of front end application to work out user sessions because is a session a trace when a session",
    "start": "3321839",
    "end": "3327920"
  },
  {
    "text": "could be four hours long that's not really the same sort of thing so there's a whole committee that's forming around",
    "start": "3327920",
    "end": "3333520"
  },
  {
    "text": "that same thing it's all about telemetry how do we get to that point where we've got a standardized approach to real user",
    "start": "3333520",
    "end": "3338960"
  },
  {
    "text": "monitoring now so that the vendors can be then standardizing around that thing so at the moment there isn't really a",
    "start": "3338960",
    "end": "3344640"
  },
  {
    "text": "story for it",
    "start": "3344640",
    "end": "3348200"
  },
  {
    "text": "any more questions awesome right well thank you very much",
    "start": "3350160",
    "end": "3357040"
  },
  {
    "text": "for coming and um i hope you all got at least something out of this but main takeaway for me go and use open",
    "start": "3357040",
    "end": "3362720"
  },
  {
    "text": "telemetry and then whichever vendor you use use it through open telemetry",
    "start": "3362720",
    "end": "3367850"
  },
  {
    "text": "[Applause]",
    "start": "3367850",
    "end": "3378909"
  },
  {
    "text": "you",
    "start": "3412400",
    "end": "3414480"
  }
]