[
  {
    "start": "0",
    "end": "267000"
  },
  {
    "text": "typescript is useful so okay so I used to hate typescript I used to be a time scam hater and I admit it because I'm a",
    "start": "30",
    "end": "5790"
  },
  {
    "text": "JavaScript guy and why do I need types and then I went to work at a large organization that had many developers",
    "start": "5790",
    "end": "12389"
  },
  {
    "text": "all developing in the same codebase typescript became a little more useful",
    "start": "12389",
    "end": "18630"
  },
  {
    "text": "in that scenario so I'm not completely anti typescript now I if I'm writing",
    "start": "18630",
    "end": "23670"
  },
  {
    "text": "something myself I don't use it but if I'm writing something with a group of people it's definitely the right tool for the job okay in the room I've got",
    "start": "23670",
    "end": "32219"
  },
  {
    "text": "one minute in the room who in the room would would classify yourself as a.net",
    "start": "32219",
    "end": "39329"
  },
  {
    "text": "developer Java developers okay Ruby",
    "start": "39329",
    "end": "46289"
  },
  {
    "text": "developers ish Python PHP okay excellent",
    "start": "46289",
    "end": "53629"
  },
  {
    "text": "hi I have a hug to you after okay everybody meet lemon lemon is the only",
    "start": "53629",
    "end": "62100"
  },
  {
    "text": "person who consistently kills me at PubCon and we'll see if that continues tonight",
    "start": "62100",
    "end": "69799"
  },
  {
    "text": "now distracted I'm sorry okay so who in the room did I miss any like",
    "start": "69799",
    "end": "78560"
  },
  {
    "text": "who in the room is a would classify themselves as a JavaScript developer right and what's interesting is a lot of",
    "start": "78560",
    "end": "85770"
  },
  {
    "text": "you raise your hands for more than one of those things right so we're no longer just I'm a back-end developer or I'm",
    "start": "85770",
    "end": "92460"
  },
  {
    "text": "afraid we if you're a.net developer you kind of need to know some JavaScript and",
    "start": "92460",
    "end": "99320"
  },
  {
    "text": "and so what what this talk is gonna be is it's kind of a discussion about",
    "start": "99530",
    "end": "107270"
  },
  {
    "text": "functional JavaScript who in the room classifies themselves as a functional",
    "start": "107270",
    "end": "112439"
  },
  {
    "text": "developer okay - I'm gonna warn you now you may become angry over the course of",
    "start": "112439",
    "end": "119159"
  },
  {
    "text": "this talk and throw things at me and it's fine kinda like nothing hard or wet other",
    "start": "119159",
    "end": "126930"
  },
  {
    "text": "than that I don't care because I'm not I'm",
    "start": "126930",
    "end": "133330"
  },
  {
    "text": "a functional developer I'm a JavaScript developer and I've seen those it's different but how many of you have heard the phrase functional style JavaScript's",
    "start": "133330",
    "end": "140710"
  },
  {
    "text": "right you should be doing functional JavaScript because javascript is functional you shouldn't be doing",
    "start": "140710",
    "end": "146610"
  },
  {
    "text": "non-functional javascript because that's dumb and why would you do that and I am",
    "start": "146610",
    "end": "151930"
  },
  {
    "text": "so I'm little history so I'm a I started",
    "start": "151930",
    "end": "157120"
  },
  {
    "text": "as a job in about I actually started as a mumps developer who knows who's heard of mumps before right it's interesting",
    "start": "157120",
    "end": "163990"
  },
  {
    "text": "where I go like I was in Omaha and half the room raised because they have a large healthcare population so as months",
    "start": "163990",
    "end": "170950"
  },
  {
    "text": "developers Java developer as a.net developer I've become a JavaScript developer I've done all this stuff and",
    "start": "170950",
    "end": "176080"
  },
  {
    "text": "I've always been a procedural oo kind of developer and so I've I've brought those",
    "start": "176080",
    "end": "182730"
  },
  {
    "text": "skills into my JavaScript and so I actually have a course I'll pull aside it's like the Gang of Four design",
    "start": "182730",
    "end": "189100"
  },
  {
    "text": "patterns in JavaScript um and killing that that's where my head's at so side",
    "start": "189100",
    "end": "196450"
  },
  {
    "text": "note I'm a job low side author I do mostly JavaScript stuff some node stuff",
    "start": "196450",
    "end": "201730"
  },
  {
    "text": "some JavaScript sell if you do not have who does not have a Pluralsight subscription several people okay I have",
    "start": "201730",
    "end": "209680"
  },
  {
    "text": "trial cards like free thirty-day all access cards if you want one after the",
    "start": "209680",
    "end": "214840"
  },
  {
    "text": "talk come and let me know and I'll get you I'm okay but I have a lot of friends who also do JavaScript who are like",
    "start": "214840",
    "end": "221380"
  },
  {
    "text": "hardcore like religious zealot kind of",
    "start": "221380",
    "end": "227500"
  },
  {
    "text": "functional developers and they talk about JavaScript this way they say no no",
    "start": "227500",
    "end": "234459"
  },
  {
    "text": "JavaScript just a functional language because functions are first class",
    "start": "234459",
    "end": "240760"
  },
  {
    "text": "objects and I say well it's more of an",
    "start": "240760",
    "end": "248050"
  },
  {
    "text": "oh oh not necessarily functional language because functions are first class objects now I know for the",
    "start": "248050",
    "end": "256209"
  },
  {
    "text": "functional people in the room I know that object-oriented and functional or not opposed you could have but bear with",
    "start": "256209",
    "end": "263620"
  },
  {
    "text": "me okay so I got into enough arguments over the",
    "start": "263620",
    "end": "270900"
  },
  {
    "start": "267000",
    "end": "531000"
  },
  {
    "text": "years with people about functional programming I didn't really even know what it was so I'm going to for those of you who are not aware of what functional",
    "start": "270900",
    "end": "278010"
  },
  {
    "text": "programming is holistically because this talk is going to be about job first of all javascript is not a functional",
    "start": "278010",
    "end": "284070"
  },
  {
    "text": "language period full stop however there are aspects of functional programming",
    "start": "284070",
    "end": "291919"
  },
  {
    "text": "that will make your life a lot easier when you're writing JavaScript and so that's kind of where this talk goes just",
    "start": "291919",
    "end": "298620"
  },
  {
    "text": "so you know if you're already angry you can leave it's fine um but so what I did is I went and looked up what is",
    "start": "298620",
    "end": "307260"
  },
  {
    "text": "functional programming so I can understand really what it is and then apply it to JavaScript so where do you go when you want to know what something",
    "start": "307260",
    "end": "313949"
  },
  {
    "text": "is in America today right you go to Wikipedia because this is the source of",
    "start": "313949",
    "end": "319500"
  },
  {
    "text": "truth of all knowledge I explained to my my children I've got a 13 year old a 16",
    "start": "319500",
    "end": "326910"
  },
  {
    "text": "year old a 20 year old that when I was in school this didn't exist and I still",
    "start": "326910",
    "end": "333419"
  },
  {
    "text": "graduated so like no excuses in today's world all the answers are right there on",
    "start": "333419",
    "end": "338550"
  },
  {
    "text": "one page so here is the actual Wikipedia",
    "start": "338550",
    "end": "344580"
  },
  {
    "text": "definition of functional programming we're going to walk through this and then we're going to apply this to JavaScript okay so in computer science",
    "start": "344580",
    "end": "351389"
  },
  {
    "text": "functional programming is a programming paradigm stop I'd skip past that okay so",
    "start": "351389",
    "end": "359340"
  },
  {
    "text": "this is important we're gonna come back to this quite a bit it's a style of building the structure and the elements",
    "start": "359340",
    "end": "364349"
  },
  {
    "text": "the pieces of computer programs the",
    "start": "364349",
    "end": "369660"
  },
  {
    "text": "treats computation as the evaluation of mathematical functions right so back",
    "start": "369660",
    "end": "381570"
  },
  {
    "text": "story I was a math major in college for",
    "start": "381570",
    "end": "386729"
  },
  {
    "text": "one year we had the quarter system I took Cal one Cal two and Cal three my",
    "start": "386729",
    "end": "393659"
  },
  {
    "text": "freshman year guess what I was my sophomore year computer science major because I looked at the rest of my math",
    "start": "393659",
    "end": "400669"
  },
  {
    "text": "and said there is no way I'm continuing on with this this is ridiculous come to",
    "start": "400669",
    "end": "406009"
  },
  {
    "text": "find out Cal 3 is like the heart do I have math majors in the room like Cal 3 is the hardest and then it kind of gets",
    "start": "406009",
    "end": "411830"
  },
  {
    "text": "different and easier so I I don't know it worked out but I hate math like math is horrible and so now we're talking",
    "start": "411830",
    "end": "419330"
  },
  {
    "text": "about applying math to programming which immediately makes me sad okay so my",
    "start": "419330",
    "end": "425360"
  },
  {
    "text": "daughter was doing algebra homework a couple years ago she asked me to help",
    "start": "425360",
    "end": "430550"
  },
  {
    "text": "but I walked in and I saw this I was like oh you're doing functions I know functions it's what I do and",
    "start": "430550",
    "end": "437599"
  },
  {
    "text": "she's like yeah yeah dad I know you're a programmer this is math that's not the same thing but it is right okay so so",
    "start": "437599",
    "end": "445339"
  },
  {
    "text": "this is a mathematical function and so we say mathematical functions this is where we're talking about f of X equals",
    "start": "445339",
    "end": "450529"
  },
  {
    "text": "x plus 2 what happens if I put 3 in for X what do I get 5 always right you know",
    "start": "450529",
    "end": "458449"
  },
  {
    "text": "that that's how that works because it's a rule that says if I put 3 in there I'm gonna get 5 every time this is when they",
    "start": "458449",
    "end": "465439"
  },
  {
    "text": "say it treats computation is a series of mathematical functions this is the kind of thing we're talking about right we're",
    "start": "465439",
    "end": "470990"
  },
  {
    "text": "gonna have these little functions that just represent changes in data I'm gonna pass it in it's going to do the same",
    "start": "470990",
    "end": "476569"
  },
  {
    "text": "thing every time and go for there it's more complicated but and then we get to this gem and avoids changing state and",
    "start": "476569",
    "end": "484399"
  },
  {
    "text": "mutable data so just just so we're clear",
    "start": "484399",
    "end": "492430"
  },
  {
    "text": "you can change objects in JavaScript like the very core underlying things",
    "start": "492430",
    "end": "499249"
  },
  {
    "text": "track G is I don't know if you're familiar with chacha s if you aren't go out there they've built a whole company",
    "start": "499249",
    "end": "506709"
  },
  {
    "text": "unlike making changes to function and making changes to object so they can",
    "start": "506709",
    "end": "513050"
  },
  {
    "text": "capture things as they go nothing is immutable in JavaScript everything is always changeable you can",
    "start": "513050",
    "end": "518990"
  },
  {
    "text": "use you know object dot freeze guess what you can still change that so",
    "start": "518990",
    "end": "526920"
  },
  {
    "text": "we'll come back to this just understand that okay that is why ultimately this",
    "start": "526920",
    "end": "533530"
  },
  {
    "start": "531000",
    "end": "715000"
  },
  {
    "text": "talk is not called functional JavaScript this talk is called functional style JavaScript because we're gonna apply",
    "start": "533530",
    "end": "540400"
  },
  {
    "text": "styles but it's it's not functional for a couple of reasons here's the big one so order ski says this the programmers",
    "start": "540400",
    "end": "547240"
  },
  {
    "text": "in that segment that segment being functional programming like functional",
    "start": "547240",
    "end": "552310"
  },
  {
    "text": "programming because it makes code clearer a better structured and it prevents many classes of errors so this",
    "start": "552310",
    "end": "559060"
  },
  {
    "text": "is what we're striving for how many of you would like your JavaScript code to be clearer better structured yes please",
    "start": "559060",
    "end": "570250"
  },
  {
    "text": "like let's do that and it prevents many classes of errors that was a little",
    "start": "570250",
    "end": "578320"
  },
  {
    "text": "harder for us because in in real functional languages elm Scala those",
    "start": "578320",
    "end": "586870"
  },
  {
    "text": "types of things there's this thing called a compiler and this compiler will check all of your code to make sure",
    "start": "586870",
    "end": "593710"
  },
  {
    "text": "you're not changing things and make sure you don't have side effects and all the stuff and so the the tooling actually",
    "start": "593710",
    "end": "601690"
  },
  {
    "text": "does a lot of the work but you might hear people talking about this this is my favorite pure functions are awesome I",
    "start": "601690",
    "end": "608370"
  },
  {
    "text": "had lunch with a guy he's he's he was a hard core functional JavaScript guy he he actually said the phrase to me out",
    "start": "608370",
    "end": "615280"
  },
  {
    "text": "loud randomly at lunch when I'm writing",
    "start": "615280",
    "end": "620920"
  },
  {
    "text": "a function and I can trim it down to be like just a pure function that's like",
    "start": "620920",
    "end": "627070"
  },
  {
    "text": "the best feeling ever really it's it's kind of sad actually",
    "start": "627070",
    "end": "635340"
  },
  {
    "text": "but but why and so I post a question why and he's",
    "start": "635340",
    "end": "641620"
  },
  {
    "text": "like but there because it's pure how can a pure function be bad it's in the name it's awesome",
    "start": "641620",
    "end": "647980"
  },
  {
    "text": "pure is good not up here is bad it's just baked it side effects are evil no",
    "start": "647980",
    "end": "656230"
  },
  {
    "text": "side effects in your code please whoever like needs to write to a database are like do I owe work or you know print",
    "start": "656230",
    "end": "663069"
  },
  {
    "text": "something too with side effects are literally the only thing that matter in your code because if your code has no",
    "start": "663069",
    "end": "672100"
  },
  {
    "text": "side effects it doesn't do anything okay so we'll come come back to that but a",
    "start": "672100",
    "end": "681639"
  },
  {
    "text": "lot of times when I'm talking to the judge when I taught and I'm gonna I'm gonna clarify something when I talk to a",
    "start": "681639",
    "end": "687329"
  },
  {
    "text": "functional developer who does Scala or something like that they know the answers to all these questions usually",
    "start": "687329",
    "end": "693730"
  },
  {
    "text": "when I'm talking to a JavaScript functional person they're like it's all gsella tree and I have no idea why we do",
    "start": "693730",
    "end": "699370"
  },
  {
    "text": "this because it's fun that's why tail recursion look it up later we'll come with that",
    "start": "699370",
    "end": "706660"
  },
  {
    "text": "okay so here's here's where we're we're going to get to it the programmers in that segment prevents many classes of",
    "start": "706660",
    "end": "714009"
  },
  {
    "text": "errors I talked about this the tooling does the work in JavaScript you don't get that benefit a lot of those errors",
    "start": "714009",
    "end": "721540"
  },
  {
    "start": "715000",
    "end": "814000"
  },
  {
    "text": "still can happen and you won't know about it and so it kind of hides them so we'll talk about that a little bit okay",
    "start": "721540",
    "end": "727809"
  },
  {
    "text": "so I was I was pretty against it and then I met this guy called Nate Taylor who was so famous he has his own",
    "start": "727809",
    "end": "735689"
  },
  {
    "text": "Pluralsight icon we don't know why the hits the icon for a developer because",
    "start": "735689",
    "end": "741999"
  },
  {
    "text": "even Pluralsight thinks we all wear hoodies in our boat so he he stopped me",
    "start": "741999",
    "end": "748240"
  },
  {
    "text": "now he actually has a course functional style JavaScript that mean I was like no",
    "start": "748240",
    "end": "754600"
  },
  {
    "text": "no you're missing the point you're thinking about this completely wrong",
    "start": "754600",
    "end": "760769"
  },
  {
    "text": "because it's not about perfection right it's not about eliminating all your side",
    "start": "760769",
    "end": "767290"
  },
  {
    "text": "effects it's not about keeping everything pure cuz you can't",
    "start": "767290",
    "end": "772920"
  },
  {
    "text": "it's about oh nothing has to be immune",
    "start": "772920",
    "end": "778059"
  },
  {
    "text": "because nothing is immutable but it's it's about the small pieces and making",
    "start": "778059",
    "end": "783759"
  },
  {
    "text": "things understandable and making things easier to read and reason about so functional style programming is here's",
    "start": "783759",
    "end": "790689"
  },
  {
    "text": "the key who wants this using less brainpower and making things simpler we want to",
    "start": "790689",
    "end": "798459"
  },
  {
    "text": "make our code simple and easy to reason about and easy to understand it's about",
    "start": "798459",
    "end": "804339"
  },
  {
    "text": "small composable things I want you guys to think about it think about it this way Oh a sila building the elements okay",
    "start": "804339",
    "end": "813690"
  },
  {
    "text": "this is this is Europe at night I had America at night but there's like a big",
    "start": "813690",
    "end": "820149"
  },
  {
    "start": "814000",
    "end": "899000"
  },
  {
    "text": "gap where it's still black so I want Europe at night there's no gaps everything's lit up even the middle of",
    "start": "820149",
    "end": "826029"
  },
  {
    "text": "the ocean which is weird in between like what Norway and the UK there's lights",
    "start": "826029",
    "end": "832540"
  },
  {
    "text": "there it's not even dark in the ocean in Europe there's all of this stuff and so when I think about an application and",
    "start": "832540",
    "end": "838360"
  },
  {
    "text": "honestly when you think about your application oftentimes you think about this right so they're around you know",
    "start": "838360",
    "end": "844329"
  },
  {
    "text": "with Italy we've got the database and up there in in like the Netherlands that's our UI and and all these pieces fit",
    "start": "844329",
    "end": "850990"
  },
  {
    "text": "together and you can see how the roads go and and all the stuff fits together this is how we think about applications",
    "start": "850990",
    "end": "858399"
  },
  {
    "text": "a lot of times I'm gonna challenge you to not only think about that but spend a",
    "start": "858399",
    "end": "863769"
  },
  {
    "text": "lot of time thinking about this because honestly it's a lot of those that make",
    "start": "863769",
    "end": "871360"
  },
  {
    "text": "up this and often times we blaze through these things thinking about the big",
    "start": "871360",
    "end": "876940"
  },
  {
    "text": "picture we forget the little and so what we're talking about it with functional style is think about the small",
    "start": "876940",
    "end": "881949"
  },
  {
    "text": "composable things that you can reuse and you can adapt and go okay think about",
    "start": "881949",
    "end": "888640"
  },
  {
    "text": "the small pieces first okay so but honestly you got to focus on both right",
    "start": "888640",
    "end": "894399"
  },
  {
    "text": "you got to keep an eye on the big picture but go with the little picture as well okay so let's let's look at some",
    "start": "894399",
    "end": "900339"
  },
  {
    "start": "899000",
    "end": "1065000"
  },
  {
    "text": "code because we're you know 10 12 minutes in the talk I haven't had any code yet so like like spend the whole",
    "start": "900339",
    "end": "907329"
  },
  {
    "text": "rest of the time looking at some code okay who in the last seven days has",
    "start": "907329",
    "end": "916660"
  },
  {
    "text": "looped over an array and done something with said array right who in the last",
    "start": "916660",
    "end": "923019"
  },
  {
    "text": "seven hours has honestly looped I rewrite this really honestly and I this makes me sad to say out loud",
    "start": "923019",
    "end": "930100"
  },
  {
    "text": "but honestly a good chunk of a developer's career it's pulling data out",
    "start": "930100",
    "end": "937300"
  },
  {
    "text": "of a data source of some sorts looping over said data in an array manipulating",
    "start": "937300",
    "end": "943360"
  },
  {
    "text": "it some and then displaying that data to some sort of output that's your job",
    "start": "943360",
    "end": "948550"
  },
  {
    "text": "summed up in a really sad little write all this cool stuff we do ultimately that's that's it so I'm gonna use arrays",
    "start": "948550",
    "end": "955689"
  },
  {
    "text": "to talk about it now you may be familiar with some of the array stuff we're talking about I'm gonna use the arrays",
    "start": "955689",
    "end": "961540"
  },
  {
    "text": "as a context to discuss the overarching functional principles but let's let's look at this okay this is a for loop",
    "start": "961540",
    "end": "968399"
  },
  {
    "text": "real quick shout it out what is this for loop doing it's taking you way too long",
    "start": "968399",
    "end": "978660"
  },
  {
    "text": "right it's it's looping over one two three four five and doing what to it",
    "start": "978660",
    "end": "983759"
  },
  {
    "text": "adding one okay so what's console dot log gonna",
    "start": "983759",
    "end": "989410"
  },
  {
    "text": "print out this is not a trick question",
    "start": "989410",
    "end": "994990"
  },
  {
    "text": "but it kind of proves my point right two three four five six this is about as simple a thing as I could possibly come",
    "start": "994990",
    "end": "1002430"
  },
  {
    "text": "up with and either you're really shy or you had to think about it for a minute",
    "start": "1002430",
    "end": "1007740"
  },
  {
    "text": "it's like wait a second what's going on there there's actually quite a bit going",
    "start": "1007740",
    "end": "1012899"
  },
  {
    "text": "on in this one thing right you've got",
    "start": "1012899",
    "end": "1018439"
  },
  {
    "text": "you've got some iteration code this is the code that decides how you're gonna",
    "start": "1018439",
    "end": "1024659"
  },
  {
    "text": "iterate over it cuz I don't know if you're aware maybe you're not you don't have to do i plus plus how many of you",
    "start": "1024659",
    "end": "1031819"
  },
  {
    "text": "like ever don't do I plus one right I mean it's you could do I plus two or you",
    "start": "1031819",
    "end": "1037949"
  },
  {
    "text": "know I minus one sometimes we do minus one right but but ultimately this line",
    "start": "1037949",
    "end": "1045500"
  },
  {
    "text": "tends to be exactly the same a lot and then the important code the worker code",
    "start": "1045500",
    "end": "1052770"
  },
  {
    "text": "is down here inside the brackets now this is incredibly simplistic usually what's inside this brackets tends to be",
    "start": "1052770",
    "end": "1058830"
  },
  {
    "text": "a little bit of code but we've got worker code got interracial coding then we've got the output so we're going to simplify",
    "start": "1058830",
    "end": "1066990"
  },
  {
    "start": "1065000",
    "end": "1146000"
  },
  {
    "text": "this a little bit remember because what we're talking about is small composable things we want to break composable",
    "start": "1066990",
    "end": "1072270"
  },
  {
    "text": "things that we can reuse and we can join together and make things a little bit easier so we're gonna break this up a",
    "start": "1072270",
    "end": "1077700"
  },
  {
    "text": "little bit built-in to array in JavaScript there's",
    "start": "1077700",
    "end": "1083340"
  },
  {
    "text": "a whole suite of functional style tools or functions if you will let's take our",
    "start": "1083340",
    "end": "1092190"
  },
  {
    "text": "iteration code and you map list up map who's useless our map if your reactive",
    "start": "1092190",
    "end": "1098160"
  },
  {
    "text": "of you've done right everybody's done this and that's why I like using this example because you're all familiar with",
    "start": "1098160",
    "end": "1103350"
  },
  {
    "text": "this and so I can make a couple of points really easily without having to explain how so list up map is basically",
    "start": "1103350",
    "end": "1109670"
  },
  {
    "text": "that because remember how I said this is what you're gonna write over and over and over again so we just create this",
    "start": "1109670",
    "end": "1115920"
  },
  {
    "text": "function called map that does that for you now I don't have to worry about it right and then it takes a function now",
    "start": "1115920",
    "end": "1125250"
  },
  {
    "text": "here's where all right what were we doing do you remember where you're renting one that's all we were doing",
    "start": "1125250",
    "end": "1131700"
  },
  {
    "text": "right so we've got this worker cut and",
    "start": "1131700",
    "end": "1136890"
  },
  {
    "text": "basically what we're gonna do is we're gonna create a function that's gonna do this work or code for us it's gonna be a",
    "start": "1136890",
    "end": "1142860"
  },
  {
    "text": "little bit easier to reason about easier to understand but it has to be a pure",
    "start": "1142860",
    "end": "1148410"
  },
  {
    "start": "1146000",
    "end": "1319000"
  },
  {
    "text": "function so let me ask who's hurt so you've heard the term pure function I",
    "start": "1148410",
    "end": "1154200"
  },
  {
    "text": "know you've heard it because I've said it in this room a couple of times what what is the pure function who knows who",
    "start": "1154200",
    "end": "1160350"
  },
  {
    "text": "can just belt it out what defines a pure function no side effects excellent what",
    "start": "1160350",
    "end": "1167970"
  },
  {
    "text": "else remember when I said oh so if",
    "start": "1167970",
    "end": "1177210"
  },
  {
    "text": "you're programming a function this is Wikipedia again a function may be considered a pure function if both of",
    "start": "1177210",
    "end": "1184490"
  },
  {
    "text": "the two so we had two things listed and both of them have to be true the",
    "start": "1184490",
    "end": "1190710"
  },
  {
    "text": "function always evaluates to the same result value given the same argument so right",
    "start": "1190710",
    "end": "1196190"
  },
  {
    "text": "always if I pass in three I always get back five that's a pure function right",
    "start": "1196190",
    "end": "1204620"
  },
  {
    "text": "but a peer function Oh Brett a plus B is pure math dot random does that always",
    "start": "1204620",
    "end": "1211770"
  },
  {
    "text": "pass back the same thing no not a peer function and evaluation of",
    "start": "1211770",
    "end": "1219299"
  },
  {
    "text": "the result does not cause any semantically observable side-effects or output such as mutation immutable",
    "start": "1219299",
    "end": "1225179"
  },
  {
    "text": "objects or output to i/o devices that one's a little bit more wordy but ultimately it says no side-effects can't",
    "start": "1225179",
    "end": "1231750"
  },
  {
    "text": "change anything outside of itself right",
    "start": "1231750",
    "end": "1236990"
  },
  {
    "text": "sum equals zero sum that's not here right that function is manipulating",
    "start": "1238280",
    "end": "1243900"
  },
  {
    "text": "something outside of it now let me add let me ask why so back to my question",
    "start": "1243900",
    "end": "1249390"
  },
  {
    "text": "before if somebody was very excited when they wrote a pure function why do we care why do we care about having pure",
    "start": "1249390",
    "end": "1256710"
  },
  {
    "text": "functions easy to test that's the one I get every time always well it's easy to",
    "start": "1256710",
    "end": "1263760"
  },
  {
    "text": "test how many of you be honest write tests for every function you write",
    "start": "1263760",
    "end": "1271640"
  },
  {
    "text": "so yeah so so for the record for the kick three people in the room I'm",
    "start": "1271640",
    "end": "1278460"
  },
  {
    "text": "actually two and one of them was like kind of right so easier to test well interesting is not necessarily as",
    "start": "1278460",
    "end": "1287840"
  },
  {
    "text": "critical to the room at large why else portable and reusable remember",
    "start": "1287840",
    "end": "1295980"
  },
  {
    "text": "it's small composable things if I write a function that adds one to whatever is",
    "start": "1295980",
    "end": "1301140"
  },
  {
    "text": "passed into it I can use them anywhere and I know it's gonna work and it doesn't change other things I can reuse",
    "start": "1301140",
    "end": "1307860"
  },
  {
    "text": "it so here's the thing",
    "start": "1307860",
    "end": "1313370"
  },
  {
    "text": "remember functional style is about using less brainpower and making things simpler so pure functions less",
    "start": "1313370",
    "end": "1321900"
  },
  {
    "start": "1319000",
    "end": "1575000"
  },
  {
    "text": "complexity I know what's how I can look at a function name I can see what it's",
    "start": "1321900",
    "end": "1327990"
  },
  {
    "text": "doing if it's named approp I don't have to worry about it doing anything else it's easier for me to think about it's easier to test I did",
    "start": "1327990",
    "end": "1337170"
  },
  {
    "text": "throw that one in there even though the vast majority of the room doesn't care but you should be writing more tests than you probably are right now so this",
    "start": "1337170",
    "end": "1343830"
  },
  {
    "text": "is a good way to get started and it's easier to understand because ultimately",
    "start": "1343830",
    "end": "1350220"
  },
  {
    "text": "this is the point we want to simplify our code make things easier make things more I want to just",
    "start": "1350220",
    "end": "1357150"
  },
  {
    "text": "look at it and know what's going on so let's look at that so here I've got list",
    "start": "1357150",
    "end": "1362400"
  },
  {
    "text": "up map function item return item plus one so that's a little simpler not a lot",
    "start": "1362400",
    "end": "1368130"
  },
  {
    "text": "simpler but a little simpler I could do",
    "start": "1368130",
    "end": "1373260"
  },
  {
    "text": "that right because arrow functions are the bomb now right everything should be an arrow function even though they don't",
    "start": "1373260",
    "end": "1378900"
  },
  {
    "text": "really need to be but really this is still complicated and actually I used to",
    "start": "1378900",
    "end": "1386490"
  },
  {
    "text": "work with with Cory and Cory did code reviews and and Cory would say no it",
    "start": "1386490",
    "end": "1391860"
  },
  {
    "text": "should be that because there's a whole bunch of extra keystrokes involved here so just do this item item plus one but",
    "start": "1391860",
    "end": "1401970"
  },
  {
    "text": "really that's still not as clear as it could be right what if I named this",
    "start": "1401970",
    "end": "1410220"
  },
  {
    "text": "function I am NOT a huge fan of anonymous functions I add it now you can",
    "start": "1410220",
    "end": "1418440"
  },
  {
    "text": "go overboard and I'm saying I'll go but name your functions because I have to",
    "start": "1418440",
    "end": "1425490"
  },
  {
    "text": "look at this and I have to think to myself what is this doing even though it's one line and it's item plus one",
    "start": "1425490",
    "end": "1431100"
  },
  {
    "text": "like I get it that's easy but I have to look at this and I have to think about what it is what if I just send what it was doing in place of the thing and I",
    "start": "1431100",
    "end": "1439230"
  },
  {
    "text": "just said list out map add one if you look at that code list up map add one",
    "start": "1439230",
    "end": "1444270"
  },
  {
    "text": "you don't even need to look at what the function actually is you can read that",
    "start": "1444270",
    "end": "1450180"
  },
  {
    "text": "and say hey I know what that's going to do that's kind of easy it's simple we",
    "start": "1450180",
    "end": "1455610"
  },
  {
    "text": "went from this which is a lot to that",
    "start": "1455610",
    "end": "1460910"
  },
  {
    "text": "very simple very easy what's it gonna print out to 3406",
    "start": "1460910",
    "end": "1469070"
  },
  {
    "text": "who says yes what's it actually gonna print out those of you who know the",
    "start": "1469070",
    "end": "1474240"
  },
  {
    "text": "right answer one two three four five correct right",
    "start": "1474240",
    "end": "1480720"
  },
  {
    "text": "what do you think four five why why does it print out one two three four five",
    "start": "1480720",
    "end": "1486950"
  },
  {
    "text": "it's a pure function a doesn't mutate",
    "start": "1486950",
    "end": "1492059"
  },
  {
    "text": "State remember the another aspect of functional programming is we don't",
    "start": "1492059",
    "end": "1497160"
  },
  {
    "text": "change things now there's reasons why we don't change things we'll talk about that but it's one two three four five",
    "start": "1497160",
    "end": "1504710"
  },
  {
    "text": "because according to Wikipedia functional programming avoids changing",
    "start": "1504710",
    "end": "1509790"
  },
  {
    "text": "state and mutable data we don't want to change things behind the scenes and there's reasons for there's like",
    "start": "1509790",
    "end": "1516450"
  },
  {
    "text": "practical reasons for that there's there's dell'utri reasons for that but I'm going to talk about some practical reasons why you don't want to just",
    "start": "1516450",
    "end": "1523860"
  },
  {
    "text": "change things arbitrarily what if I want",
    "start": "1523860",
    "end": "1529230"
  },
  {
    "text": "two three four by six what do I have to do okay",
    "start": "1529230",
    "end": "1536340"
  },
  {
    "text": "new list just create a new new variable new list equals let's not map well now",
    "start": "1536340",
    "end": "1541410"
  },
  {
    "text": "I've got two things potential is painful what if I just want what what if I want",
    "start": "1541410",
    "end": "1546630"
  },
  {
    "text": "lists to change I just say list equals list not map I can do that because I'm",
    "start": "1546630",
    "end": "1552840"
  },
  {
    "text": "in JavaScript and things aren't immutable so I can I can actually just do this and I'll get two three four five",
    "start": "1552840",
    "end": "1558300"
  },
  {
    "text": "six but I don't know when I write the map function which of those two outcomes",
    "start": "1558300",
    "end": "1564450"
  },
  {
    "text": "you're looking for so I don't change anything and I leave it up to you to make that change that's one of those the",
    "start": "1564450",
    "end": "1571740"
  },
  {
    "text": "practical benefits of immutability so why are we immutable so you why I kind",
    "start": "1571740",
    "end": "1577950"
  },
  {
    "start": "1575000",
    "end": "1684000"
  },
  {
    "text": "of gave you a little bit why would we be immutable why don't why do we not want to change things under the hood anybody",
    "start": "1577950",
    "end": "1589460"
  },
  {
    "text": "right so here's one reason react so if",
    "start": "1591930",
    "end": "1598770"
  },
  {
    "text": "if an object changes if you if you make changes to an object it doesn't actually",
    "start": "1598770",
    "end": "1604440"
  },
  {
    "text": "change the object right so if you want to see if something has changed you can",
    "start": "1604440",
    "end": "1609900"
  },
  {
    "text": "do so state and react who does react state is considered to be what immutable",
    "start": "1609900",
    "end": "1619520"
  },
  {
    "text": "very important distinction state is considered to be immutable it is not",
    "start": "1619520",
    "end": "1626700"
  },
  {
    "text": "actually immutable that's important to understand because I have seen lots of code that just changes state and then I",
    "start": "1626700",
    "end": "1633840"
  },
  {
    "text": "don't know why things aren't working because that how it works right because and the reason why it doesn't work is",
    "start": "1633840",
    "end": "1639960"
  },
  {
    "text": "because what react does is it looks at old state compares it to new state this way says hey has this state changed if",
    "start": "1639960",
    "end": "1647850"
  },
  {
    "text": "it has rerender everything if it hasn't don't so if you're just changing things",
    "start": "1647850",
    "end": "1653280"
  },
  {
    "text": "under the hood it's not gonna work it enforces options this is the practical thing we were just talking about I don't",
    "start": "1653280",
    "end": "1658740"
  },
  {
    "text": "know what you want I'm gonna make you decide what you want and I'm just gonna hand you back something new and you",
    "start": "1658740",
    "end": "1665310"
  },
  {
    "text": "decide whether it apply it to the old thing or the new thing and it's easier to reason your thing I it's not changing",
    "start": "1665310",
    "end": "1671250"
  },
  {
    "text": "all this other stuff right I know nothing has changed when I call this thing and so there's comfort in that and",
    "start": "1671250",
    "end": "1678240"
  },
  {
    "text": "I can reason about it a lot more easily",
    "start": "1678240",
    "end": "1682670"
  },
  {
    "text": "we don't always just loop over right things are sometimes more complicated",
    "start": "1685760",
    "end": "1691830"
  },
  {
    "text": "remember that something I was talking about I want to sum that list there you",
    "start": "1691830",
    "end": "1699060"
  },
  {
    "text": "go let I equals 0 I plus plus is what's inside that for loop pure no and I have",
    "start": "1699060",
    "end": "1706860"
  },
  {
    "text": "to now pay attention to the fact that there's this something out there I have to understand what sum is and what it",
    "start": "1706860",
    "end": "1712560"
  },
  {
    "text": "means and how it's changed and all this stuff that's complicated but the output",
    "start": "1712560",
    "end": "1718020"
  },
  {
    "text": "is 15 array remember I said array has a whole suite of functional",
    "start": "1718020",
    "end": "1725950"
  },
  {
    "text": "tools associated with it or functions so",
    "start": "1725950",
    "end": "1731840"
  },
  {
    "text": "I can just actually do reduce you may have noticed two buzz words that were",
    "start": "1731840",
    "end": "1737660"
  },
  {
    "text": "huge a few years ago map and reduce right so you can Map Reduce and datasets",
    "start": "1737660",
    "end": "1744559"
  },
  {
    "text": "with an array because mapping is I'm going to do something to every item and reduce means I'm going to aggregate",
    "start": "1744559",
    "end": "1750679"
  },
  {
    "text": "items together and present you a new output so I've got a reduce that I'm",
    "start": "1750679",
    "end": "1755720"
  },
  {
    "text": "passing in 0 so list out reduce 0 and",
    "start": "1755720",
    "end": "1763210"
  },
  {
    "text": "it's gonna sum the list how do you know it's summing the list the function is",
    "start": "1763210",
    "end": "1771650"
  },
  {
    "text": "named some list right it's where do we start we start at 0 it's just that easy",
    "start": "1771650",
    "end": "1778669"
  },
  {
    "text": "sum equals list I'll reduce some list 0 right you can look at this right here",
    "start": "1778669",
    "end": "1784700"
  },
  {
    "text": "and say I know exactly what this is doing I know it's not changing anything else outside of it I can test my sum",
    "start": "1784700",
    "end": "1790970"
  },
  {
    "text": "function easily all of that stuff can be boiled down and I know hey I'm getting",
    "start": "1790970",
    "end": "1797799"
  },
  {
    "text": "15 when I print this out that's why we do it what does this do",
    "start": "1797799",
    "end": "1808419"
  },
  {
    "text": "hey and what there you go it filters it",
    "start": "1810900",
    "end": "1821920"
  },
  {
    "text": "but finds the even numbers filters out the odd numbers and and you didn't even",
    "start": "1821920",
    "end": "1827110"
  },
  {
    "text": "have to see anything around it right let's top filter is even give me all the stuff back from my function that's even",
    "start": "1827110",
    "end": "1835050"
  },
  {
    "text": "right this is why we should we apply these functional principles because it makes it super super easy another reason",
    "start": "1835050",
    "end": "1845770"
  },
  {
    "start": "1844000",
    "end": "2071000"
  },
  {
    "text": "why we don't change things and we return I can chain all this stuff that's kind",
    "start": "1845770",
    "end": "1853720"
  },
  {
    "text": "of fun so who did jQuery it's not the same at all but jQuery is always my fun thing to mention when we're like",
    "start": "1853720",
    "end": "1859990"
  },
  {
    "text": "chaining things because we used to like big massive chains we can change all",
    "start": "1859990",
    "end": "1865000"
  },
  {
    "text": "this stuff what if I want to add one and then some it so I've got one two three",
    "start": "1865000",
    "end": "1872920"
  },
  {
    "text": "four five I'm gonna add one to it two three four five six and then I'm gonna sum those and I'm gonna come up with some number that I'm not gonna try and",
    "start": "1872920",
    "end": "1878980"
  },
  {
    "text": "describe right now cuz I'm not gonna do the math in my head well everybody's looking at me but it will come back with",
    "start": "1878980",
    "end": "1884800"
  },
  {
    "text": "a number that would make sense right and so this is another feature that you get",
    "start": "1884800",
    "end": "1890050"
  },
  {
    "text": "by not just changing what list is I'm returning the new thing therefore I can chain and I can build all this stuff out",
    "start": "1890050",
    "end": "1897270"
  },
  {
    "text": "all right this one becomes a little bit more complicated I have a list",
    "start": "1897270",
    "end": "1903880"
  },
  {
    "text": "John Jack marry Susan Sarah I want to",
    "start": "1903880",
    "end": "1909430"
  },
  {
    "text": "find Mary so there's the list I find and",
    "start": "1909430",
    "end": "1914560"
  },
  {
    "text": "it's gonna return back the item that I have found so I pass in a function",
    "start": "1914560",
    "end": "1920530"
  },
  {
    "text": "item item equals Mary that's great but remember I don't like anonymous",
    "start": "1920530",
    "end": "1929080"
  },
  {
    "text": "functions right so we're gonna pull that out and I'm gonna have get person but",
    "start": "1929080",
    "end": "1935260"
  },
  {
    "text": "get get person now has Mary hard-coded which is not what we want to do",
    "start": "1935260",
    "end": "1943240"
  },
  {
    "text": "so I want to be able to pass in to get person the thing that I want to find I",
    "start": "1943240",
    "end": "1949510"
  },
  {
    "text": "want to do that but find takes a function right so we now have this",
    "start": "1949510",
    "end": "1960340"
  },
  {
    "text": "concept of higher-order functions now now you use higher-order functions all the time we've used them all throughout",
    "start": "1960340",
    "end": "1967690"
  },
  {
    "text": "the demo so far but a higher-order function is this okay in mathematics or",
    "start": "1967690",
    "end": "1972880"
  },
  {
    "text": "computer science a higher-order function is a function that does at least one remember in pure functions you had to do",
    "start": "1972880",
    "end": "1978520"
  },
  {
    "text": "both and higher-order functions it only has to be one it either takes one or",
    "start": "1978520",
    "end": "1984010"
  },
  {
    "text": "more functions as arguments Map Reduce all of those things they were all taking",
    "start": "1984010",
    "end": "1990820"
  },
  {
    "text": "functions as arguments they are higher-order functions the other alternative is it can return a function",
    "start": "1990820",
    "end": "1996549"
  },
  {
    "text": "as a result I can return a function when I return a function now I am also a",
    "start": "1996549",
    "end": "2003539"
  },
  {
    "text": "higher-order function so what if in this case I create this thing called get",
    "start": "2003539",
    "end": "2010529"
  },
  {
    "text": "person that's a function that returns the thing I'm searching for right so get",
    "start": "2010529",
    "end": "2017010"
  },
  {
    "text": "person marry and what get person is going to do is return the function that filters going to use or find is going to",
    "start": "2017010",
    "end": "2023700"
  },
  {
    "text": "use to find Mary this is a higher-order function this get person is a",
    "start": "2023700",
    "end": "2029549"
  },
  {
    "text": "higher-order function because it's returning a function and then I can you know trim it all down and make it all",
    "start": "2029549",
    "end": "2035100"
  },
  {
    "text": "nice and I'm list I'll find get person Mary now what's what's consoled outlaw",
    "start": "2035100",
    "end": "2040320"
  },
  {
    "text": "I'm gonna print out anybody know is that",
    "start": "2040320",
    "end": "2048810"
  },
  {
    "text": "right are you guys just shy what's gonna print out it's gonna print out Mary",
    "start": "2048810",
    "end": "2054690"
  },
  {
    "text": "which is not useful to me at all right because now in the it's a string if we",
    "start": "2054690",
    "end": "2060179"
  },
  {
    "text": "were doing object but I'd so really I want find index which will return the",
    "start": "2060179",
    "end": "2065310"
  },
  {
    "text": "index right that gives me the number two instead all right let's talk about",
    "start": "2065310",
    "end": "2072330"
  },
  {
    "start": "2071000",
    "end": "2328000"
  },
  {
    "text": "currying so we talked about higher-order functions pure functions all of those",
    "start": "2072330",
    "end": "2077649"
  },
  {
    "text": "things currying is weird okay so let's let's",
    "start": "2077650",
    "end": "2084399"
  },
  {
    "text": "look at this in mathematics and computer science it's carrying that's not a joke it's weird currying is the technique of",
    "start": "2084400",
    "end": "2091120"
  },
  {
    "text": "translating the evaluation of a function that takes multiple arguments into evaluating a sequence of functions each",
    "start": "2091120",
    "end": "2097870"
  },
  {
    "text": "with a single argument that makes total sense right here's here's currying some add a b boom that's korean we go from",
    "start": "2097870",
    "end": "2111160"
  },
  {
    "text": "that to that",
    "start": "2111160",
    "end": "2114990"
  },
  {
    "text": "welcome to functional programming ladies and gentlemen No okay so we've we've",
    "start": "2118380",
    "end": "2124300"
  },
  {
    "text": "actually already done a little bit of this in the previous example so I'm",
    "start": "2124300",
    "end": "2130300"
  },
  {
    "text": "gonna I'm going to contrive an example that that's something you all might be",
    "start": "2130300",
    "end": "2135730"
  },
  {
    "text": "familiar with that that talks about currying okay so we have a list of buttons button one two and three and",
    "start": "2135730",
    "end": "2143410"
  },
  {
    "text": "we're gonna print these buttons out on the screen and when you click a button I want to display the message associated",
    "start": "2143410",
    "end": "2149650"
  },
  {
    "text": "with that button okay so one click passes me an event and when I get the",
    "start": "2149650",
    "end": "2158740"
  },
  {
    "text": "event I have to loop over the buttons to see what the message is for the specific button that was clicked that stinks and",
    "start": "2158740",
    "end": "2167170"
  },
  {
    "text": "depending on how many buttons may take a little while what I really want is this",
    "start": "2167170",
    "end": "2172360"
  },
  {
    "text": "I want an index of the button that is being clicked and then the event that",
    "start": "2172360",
    "end": "2179290"
  },
  {
    "text": "was to know whether it was clicked or what else was happened to it and then I don't have to loop over it I can just go",
    "start": "2179290",
    "end": "2185710"
  },
  {
    "text": "straight to the index so now I have a function on click that takes index and event both I have that but what I really",
    "start": "2185710",
    "end": "2197890"
  },
  {
    "text": "want is to separate those two things out because guess what I'm not going to be able to change the browser to pass the",
    "start": "2197890",
    "end": "2203500"
  },
  {
    "text": "index in to on click like that's baked I don't get to play with that but what I",
    "start": "2203500",
    "end": "2210160"
  },
  {
    "text": "can do is split this up into a series of functions and I can say hey remember",
    "start": "2210160",
    "end": "2216579"
  },
  {
    "text": "when we did this I created a function called get person that returns the",
    "start": "2216579",
    "end": "2222609"
  },
  {
    "text": "function what if I create a function that gets the message and then returns",
    "start": "2222609",
    "end": "2227980"
  },
  {
    "text": "the event handler from there okay so here's what we got check this out on get",
    "start": "2227980",
    "end": "2233650"
  },
  {
    "text": "unclick index I'm gonna pass the index in and then I'm going to return a",
    "start": "2233650",
    "end": "2241079"
  },
  {
    "text": "function that takes event that references index how do I know what in I",
    "start": "2241079",
    "end": "2247299"
  },
  {
    "text": "keep index because of what's the term",
    "start": "2247299",
    "end": "2251849"
  },
  {
    "text": "closure excellent good job right so because the the closure in JavaScript",
    "start": "2252480",
    "end": "2259269"
  },
  {
    "text": "if you're not familiar with the term means that when this function of function event message equals buttons",
    "start": "2259269",
    "end": "2264880"
  },
  {
    "text": "when that is created I'll keep this the scope of everything that exists when",
    "start": "2264880",
    "end": "2270579"
  },
  {
    "text": "that function is created that's called the closure that's around that function so I get to keep index even though it's outside awesome and then I can just say",
    "start": "2270579",
    "end": "2280210"
  },
  {
    "text": "unclick this I get unclick index item got name done so that's that's a",
    "start": "2280210",
    "end": "2288250"
  },
  {
    "text": "practical example or a little bit of a contrived example of currying right",
    "start": "2288250",
    "end": "2293650"
  },
  {
    "text": "because here's here's the core here's ultimately when it comes down to don't think of functions the same way you",
    "start": "2293650",
    "end": "2301390"
  },
  {
    "text": "think of functions and like a.net worlds in JavaScript I have a function and that",
    "start": "2301390",
    "end": "2306940"
  },
  {
    "text": "thing can be passed around I can move it over here and I can reuse it in multiple places and and so if I need a function",
    "start": "2306940",
    "end": "2314200"
  },
  {
    "text": "that doesn't that's a little different than what I have I can create something out this is going to generate the new",
    "start": "2314200",
    "end": "2320529"
  },
  {
    "text": "function that I need and then I can pass that function so that's that's ultimately where currying comes in okay",
    "start": "2320529",
    "end": "2328740"
  },
  {
    "start": "2328000",
    "end": "2493000"
  },
  {
    "text": "well I think we're time so who's heard",
    "start": "2328740",
    "end": "2333910"
  },
  {
    "text": "of monads okay who who can who can and would be willing to come up here",
    "start": "2333910",
    "end": "2340690"
  },
  {
    "text": "take the microphone and explain monads to the group right okay",
    "start": "2340690",
    "end": "2346480"
  },
  {
    "text": "so there there's actually a thing call  birds law that basically says and",
    "start": "2346480",
    "end": "2352359"
  },
  {
    "text": "so all monads are complicated and when",
    "start": "2352359",
    "end": "2357579"
  },
  {
    "text": "you take the time to really dig in and understand and apply monads and really",
    "start": "2357579",
    "end": "2363339"
  },
  {
    "text": "figure them out by the time you've gone through that process you are no longer able to explain monads to other people",
    "start": "2363339",
    "end": "2370619"
  },
  {
    "text": "that's what Cochran says I am going to attempt to prove that to be true because",
    "start": "2370619",
    "end": "2377109"
  },
  {
    "text": "I'm going to give you at least a taste or an execs planation of what monads are",
    "start": "2377109",
    "end": "2383049"
  },
  {
    "text": "there's actually more to this law where it's like well you can explain it but it's gonna come out sounding stupid it's",
    "start": "2383049",
    "end": "2388900"
  },
  {
    "text": "gonna come out sounding like well why in the world would you ever need that well here we go so Ramona at its core on",
    "start": "2388900",
    "end": "2397299"
  },
  {
    "text": "before I even go into code I'm just gonna explain this a monad at its core think about this we we can't have",
    "start": "2397299",
    "end": "2405309"
  },
  {
    "text": "side-effects we can't change things things are immutable and so at some",
    "start": "2405309",
    "end": "2410529"
  },
  {
    "text": "point I need to make changes to things so what if I can wrap everything up in a",
    "start": "2410529",
    "end": "2415839"
  },
  {
    "text": "series of functions and protect all of my side effects and all of my MU all of",
    "start": "2415839",
    "end": "2421180"
  },
  {
    "text": "my immutability and all of that stuff I'm gonna protect it inside this case and only address it with functions",
    "start": "2421180",
    "end": "2427319"
  },
  {
    "text": "that's a sense essentially and we'll get into this essentially what a monad is",
    "start": "2427319",
    "end": "2432609"
  },
  {
    "text": "it's basically here let's let's in functional programming wikipedia a monad",
    "start": "2432609",
    "end": "2439510"
  },
  {
    "text": "is a design pattern first of all it's a pattern not a thing but a mona is a",
    "start": "2439510",
    "end": "2445210"
  },
  {
    "text": "design pattern that defines how functions actions inputs and outputs can be used together to build generic types",
    "start": "2445210",
    "end": "2452430"
  },
  {
    "text": "who does objects very simply it's think",
    "start": "2453150",
    "end": "2459069"
  },
  {
    "text": "about it similarly to like an object it's just an object it's a construct that you do it okay I'm gonna I'm gonna",
    "start": "2459069",
    "end": "2465520"
  },
  {
    "text": "show you oh define the data type and how the values of that data type are combined okay I'm gonna show you a very basic",
    "start": "2465520",
    "end": "2474160"
  },
  {
    "text": "one and we're going to create a data type and then we're going to create a function that massage is that data type",
    "start": "2474160",
    "end": "2482980"
  },
  {
    "text": "and call it a Moana because it is a Mona it's the simplest of all monads it is",
    "start": "2482980",
    "end": "2490589"
  },
  {
    "text": "ignore that because I don't care about that the identity monad I messed up down",
    "start": "2490589",
    "end": "2496150"
  },
  {
    "start": "2493000",
    "end": "2846000"
  },
  {
    "text": "here because I'm going to point at things but I'm not going to go past the tape okay so the identity monad is the",
    "start": "2496150",
    "end": "2503470"
  },
  {
    "text": "simplest of all monads and so we're gonna walk through an identity monad so that you can get an idea of what a monad",
    "start": "2503470",
    "end": "2510819"
  },
  {
    "text": "is okay so here you go function identity monad it takes a value and it assigns",
    "start": "2510819",
    "end": "2517750"
  },
  {
    "text": "that value to this so why call identity and now I have a thing for X equals new",
    "start": "2517750",
    "end": "2529809"
  },
  {
    "text": "identity 5x dot value five now I'm",
    "start": "2529809",
    "end": "2535809"
  },
  {
    "text": "already kind of breaking it because I I shouldn't add excess value directly I",
    "start": "2535809",
    "end": "2541599"
  },
  {
    "text": "know the functional guys are like giving me the stink-eye I should have a function but for the sake of this",
    "start": "2541599",
    "end": "2546789"
  },
  {
    "text": "discussion I'm just gonna keep it simple now I want to change value I can't",
    "start": "2546789",
    "end": "2555759"
  },
  {
    "text": "change value directly because then I'm changing things it's not immutable I'm",
    "start": "2555759",
    "end": "2561940"
  },
  {
    "text": "gonna create a function called sure I",
    "start": "2561940",
    "end": "2566759"
  },
  {
    "text": "hit the wrong button I'm gonna create a function there we go",
    "start": "2571380",
    "end": "2578589"
  },
  {
    "text": "that will change things for me so I'm gonna call it dot bind so don't remember",
    "start": "2578589",
    "end": "2586630"
  },
  {
    "text": "monads are like a functional thing wholistically not a JavaScript thing and so don't confuse this bind with like the",
    "start": "2586630",
    "end": "2594579"
  },
  {
    "text": "bind function that sits on one function so so I'm gonna use this identity prototype bind and that's the function",
    "start": "2594579",
    "end": "2603039"
  },
  {
    "text": "that's going to be called to change the value right so I have function transform I'm",
    "start": "2603039",
    "end": "2610180"
  },
  {
    "text": "going to return a whatever so transform",
    "start": "2610180",
    "end": "2615999"
  },
  {
    "text": "is the function that's being used to to change the value I'm going to return that function executed with whatever the",
    "start": "2615999",
    "end": "2621999"
  },
  {
    "text": "current value is okay so let's look at this in practice so I have value and",
    "start": "2621999",
    "end": "2630130"
  },
  {
    "text": "then I have a function the transform that's going to whatever functions passed in I'm going to execute that",
    "start": "2630130",
    "end": "2636099"
  },
  {
    "text": "function with values so here if I say X dot binds and I pass in a function that",
    "start": "2636099",
    "end": "2642269"
  },
  {
    "text": "creates a new monad why are we creating a new one so we don't mutate and we're",
    "start": "2642269",
    "end": "2649359"
  },
  {
    "text": "gonna add value plus two so I have created I'm passing in a function that",
    "start": "2649359",
    "end": "2655299"
  },
  {
    "text": "adds to bind execute that function so if it started as five now I have seven so",
    "start": "2655299",
    "end": "2663910"
  },
  {
    "text": "here's the here's the thing and don't take this too literally this I'm just giving in a purely functional language",
    "start": "2663910",
    "end": "2671739"
  },
  {
    "text": "you have a lot of restrictions and implications it's not quite as complicated in JavaScript so you don't",
    "start": "2671739",
    "end": "2678160"
  },
  {
    "text": "really need to get deep into monads because you you can change things and",
    "start": "2678160",
    "end": "2683619"
  },
  {
    "text": "actually you can really change things but but before I get back to this think",
    "start": "2683619",
    "end": "2689140"
  },
  {
    "text": "about think about this you have an",
    "start": "2689140",
    "end": "2695140"
  },
  {
    "text": "object that you create when you make a an asynchronous call and then you want",
    "start": "2695140",
    "end": "2704019"
  },
  {
    "text": "to get the data out of that asynchronous call think about a promise right so I've",
    "start": "2704019",
    "end": "2709539"
  },
  {
    "text": "got a promise you can't get directly to the values and a promise right you have",
    "start": "2709539",
    "end": "2715779"
  },
  {
    "text": "to pass functions in and though so it's it has two functions right it's got a",
    "start": "2715779",
    "end": "2723599"
  },
  {
    "text": "resolve and you can catch right so",
    "start": "2723599",
    "end": "2728619"
  },
  {
    "text": "promise then I pass a function in and then when a resolve happens it pulls it back promised catch I pass a function in",
    "start": "2728619",
    "end": "2737339"
  },
  {
    "text": "promise is a monad it's not the identity but promise is an",
    "start": "2737339",
    "end": "2742630"
  },
  {
    "text": "implementation of a monad so you use them all the time and they serve a",
    "start": "2742630",
    "end": "2747730"
  },
  {
    "text": "purpose because they don't want you in there mucking around with all this stuff now if you want to you can create all",
    "start": "2747730",
    "end": "2754059"
  },
  {
    "text": "kinds of havoc by actually like going in and changing things don't don't do that because we want things to become be",
    "start": "2754059",
    "end": "2760509"
  },
  {
    "text": "clear right and so what what sometimes what that promise structure does is it",
    "start": "2760509",
    "end": "2765549"
  },
  {
    "text": "makes things a little bit easier to deal with but remember holistically this comes",
    "start": "2765549",
    "end": "2771700"
  },
  {
    "text": "back to the skeptical side remember holistically for real hard core",
    "start": "2771700",
    "end": "2776980"
  },
  {
    "text": "functional programming the tooling does the work right because I I actually can do this so there at seven I can I can",
    "start": "2776980",
    "end": "2785769"
  },
  {
    "text": "actually just like change value and there is nothing I can do to prevent that from happening so it doesn't get us",
    "start": "2785769",
    "end": "2793450"
  },
  {
    "text": "all the way but it does give us some tools to simplify our code a little bit",
    "start": "2793450",
    "end": "2799029"
  },
  {
    "text": "and make things a little bit easier just don't don't pretend that state is actually immutable because it's not all",
    "start": "2799029",
    "end": "2808569"
  },
  {
    "text": "right so in JavaScript right it's the mindset and this is the mindset I want",
    "start": "2808569",
    "end": "2815289"
  },
  {
    "text": "you guys to walk away from today out of this is think about your functions a lot",
    "start": "2815289",
    "end": "2821109"
  },
  {
    "text": "has a lot bigger things then you probably treat them as right now they're",
    "start": "2821109",
    "end": "2826390"
  },
  {
    "text": "they're like things that you can you can do stuff with and you can pass them around and you can compose them right I could",
    "start": "2826390",
    "end": "2833710"
  },
  {
    "text": "take this function and this function I can compose them together I can pass one into the other one start thinking about your functions as as tools instead of",
    "start": "2833710",
    "end": "2842440"
  },
  {
    "text": "just this thing I can pass data into simplify your pieces it's okay like to",
    "start": "2842440",
    "end": "2852759"
  },
  {
    "text": "really spend some time looking at the code you wrote and think how can I",
    "start": "2852759",
    "end": "2858009"
  },
  {
    "text": "simplify this and make this easier because there is no code that is worse",
    "start": "2858009",
    "end": "2863319"
  },
  {
    "text": "than the code you wrote six months ago right how many of you have ever stepped away from code for several months to",
    "start": "2863319",
    "end": "2869650"
  },
  {
    "text": "come back and be like what was this idiot thinking and you do it get blame like oh I'm the",
    "start": "2869650",
    "end": "2876140"
  },
  {
    "text": "idiot okay the more simple you make it the more you",
    "start": "2876140",
    "end": "2881150"
  },
  {
    "text": "break these pieces apart and simplify the less you think of yourself six months from now as an idiot",
    "start": "2881150",
    "end": "2888700"
  },
  {
    "text": "keep your interactions simple because right alright so questions",
    "start": "2888700",
    "end": "2901040"
  },
  {
    "text": "well actually I tell you what if you have questions come up shot with me if you want a plural site they're circular",
    "start": "2901040",
    "end": "2909980"
  },
  {
    "text": "that's why I'm doing this a plural site code if you don't have an account come up I've got some of those otherwise",
    "start": "2909980",
    "end": "2916240"
  },
  {
    "text": "welcome to NBC Minnesota enjoy the rest of your day",
    "start": "2916240",
    "end": "2921810"
  },
  {
    "text": "[Applause]",
    "start": "2921810",
    "end": "2930409"
  },
  {
    "text": "hey there you go",
    "start": "2936450",
    "end": "2941240"
  }
]