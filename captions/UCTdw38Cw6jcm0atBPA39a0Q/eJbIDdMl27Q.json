[
  {
    "text": "perfect okay now finally hey a very warm welcome from my side I do apologize for",
    "start": "7120",
    "end": "12799"
  },
  {
    "text": "these te technical difficulties that's what you get when you don't test the",
    "start": "12799",
    "end": "18960"
  },
  {
    "text": "microphone well I hope you had a great time so far at the conference my name is Daniel Marbach I'm from Switzerland and",
    "start": "18960",
    "end": "25920"
  },
  {
    "text": "should you have any questions that I cannot answer during this talk you find my X details and my email address and my",
    "start": "25920",
    "end": "33800"
  },
  {
    "text": "LinkedIn details on the slides I will also share it again towards the end of the talk so I have a quick question uh",
    "start": "33800",
    "end": "39879"
  },
  {
    "text": "to the audience here who is new to benchmarking the audience hands",
    "start": "39879",
    "end": "44960"
  },
  {
    "text": "up quite a few who is new to Performance profiling okay who is new to",
    "start": "44960",
    "end": "51039"
  },
  {
    "text": "benchmarking and performance profiling quite of you okay then this is perfect",
    "start": "51039",
    "end": "56120"
  },
  {
    "text": "because I remember sort of the first time when I started Benchmark bench marking my code to sort of verify",
    "start": "56120",
    "end": "62039"
  },
  {
    "text": "whether my changes that I sort of envisioned are actually making things faster accelerating my code or whether",
    "start": "62039",
    "end": "68640"
  },
  {
    "text": "they're actually making things worse right because we want to measure to see and I've I've already seen quite a few",
    "start": "68640",
    "end": "74320"
  },
  {
    "text": "benchmarks like the one on the screen here written in",
    "start": "74320",
    "end": "79759"
  },
  {
    "text": "I I wrote those blog posts and I was like yeah you know it's like it's a class with a bunch of attributes I've",
    "start": "89960",
    "end": "95720"
  },
  {
    "text": "already seen and written quite a few unit test with things like X unit n unit",
    "start": "95720",
    "end": "101119"
  },
  {
    "text": "or God forbid Ms test I had to use it for some time to time and I didn't like it but I know it's has been it has been",
    "start": "101119",
    "end": "107360"
  },
  {
    "text": "improving over time um but yeah I felt quite certain when I was trying to write",
    "start": "107360",
    "end": "112399"
  },
  {
    "text": "my first Benchmark for my production code that it's just going to be as simple as a unit test right so just like",
    "start": "112399",
    "end": "120079"
  },
  {
    "text": "a bunch of attributes on a class and everything will be golden right but who I was wrong I mean this writing the",
    "start": "120079",
    "end": "127159"
  },
  {
    "text": "skeleton of The Benchmark was actually indeed very simple because it's a class with a bunch of attributes but then the",
    "start": "127159",
    "end": "133800"
  },
  {
    "text": "mindboggling part was I was trying to sort of figure out what should actually be taken into account in The Benchmark",
    "start": "133800",
    "end": "140800"
  },
  {
    "text": "and then I was also thinking well how do you isolate my production code that is",
    "start": "140800",
    "end": "145879"
  },
  {
    "text": "probably quite messy because I wrote it right how do I isolate it and then sort of uh make sure I can measure things",
    "start": "145879",
    "end": "152599"
  },
  {
    "text": "without without investing crazy amount of refactoring sort of into the code so that I can actually put it into a",
    "start": "152599",
    "end": "159400"
  },
  {
    "text": "benchmark and then I was also thinking what should I actually take into account or what should I deliberately cut away",
    "start": "159400",
    "end": "166120"
  },
  {
    "text": "from my code because it would just skew my results for the things that I was trying to see and then I was also",
    "start": "166120",
    "end": "172319"
  },
  {
    "text": "thinking well but how do I go through this cycle of sort of going through measure change and measure without",
    "start": "172319",
    "end": "178120"
  },
  {
    "text": "burning away my allotted budget that I had for these performance optimizations right because at the end of the day my",
    "start": "178120",
    "end": "185319"
  },
  {
    "text": "task as a senior software engineer a solution architect whatever you are or I",
    "start": "185319",
    "end": "190720"
  },
  {
    "text": "am right is I call myself principal chocolate lover because I got so fed up uh with chob titles these days but",
    "start": "190720",
    "end": "197480"
  },
  {
    "text": "anyway so um uh my my job is is to write business code is to write framework and",
    "start": "197480",
    "end": "203480"
  },
  {
    "text": "libraries that that make my customers successful my job is not I'm not titled as a performance engineer right anything",
    "start": "203480",
    "end": "210159"
  },
  {
    "text": "like that right so I have to carefully balance the time that I have available between shipping feature that make an",
    "start": "210159",
    "end": "216200"
  },
  {
    "text": "impact on the customers whereas is doing some types of performance optimizations and sometimes the performance",
    "start": "216200",
    "end": "222000"
  },
  {
    "text": "optimizations that I'm making I'm doing that as sort of a fun project in the evenings sitting in front of the TV to",
    "start": "222000",
    "end": "228920"
  },
  {
    "text": "just improve things a little bit and uh sort of feed my inner curiosity to sort",
    "start": "228920",
    "end": "234319"
  },
  {
    "text": "of improve the code right but then the question is also why would you even go through this hassle to even do this",
    "start": "234319",
    "end": "241200"
  },
  {
    "text": "optimizations right so for code that is executed at scale the overall throughput",
    "start": "241200",
    "end": "247200"
  },
  {
    "text": "and memory characteristics are really important because essentially C code",
    "start": "247200",
    "end": "252319"
  },
  {
    "text": "that waste unnecessary CPU cycles and memory H is going to eat away resources",
    "start": "252319",
    "end": "259040"
  },
  {
    "text": "and therefore energy in your data centers whether it's on premises or in the cloud right so we want to make sure",
    "start": "259040",
    "end": "265680"
  },
  {
    "text": "that we use the energy that we have available uh as efficiently as possible",
    "start": "265680",
    "end": "270720"
  },
  {
    "text": "to also reduce the carbon footprint these days right because we heard all about green it movement and stuff like",
    "start": "270720",
    "end": "276840"
  },
  {
    "text": "that we have scarc resources on planet Earth so we want to make sure that we use those things efficiently but even if",
    "start": "276840",
    "end": "283160"
  },
  {
    "text": "you remove sort of the green it aspect right and you're saying well we're running in the cloud well we have a",
    "start": "283160",
    "end": "288919"
  },
  {
    "text": "credit card or whatever uh associated with a subscription right and these days we have sort of these virtual sort of",
    "start": "288919",
    "end": "296240"
  },
  {
    "text": "money things that is called it's some arbitrary number where whether it's premium units messaging units or I don't",
    "start": "296240",
    "end": "302880"
  },
  {
    "text": "gigabyte per seconds whatever that sort of when we use resources in the cloud at the end of the day we're going to get",
    "start": "302880",
    "end": "309400"
  },
  {
    "text": "build on the credit card right so that means the more efficient the code is the more we can actually execute and the",
    "start": "309400",
    "end": "316400"
  },
  {
    "text": "more requests we can serve for the same amount of money right so that means we",
    "start": "316400",
    "end": "321680"
  },
  {
    "text": "have to take care of that our code is also efficient in the cloud but let me give you a more concrete example of uh a",
    "start": "321680",
    "end": "329080"
  },
  {
    "text": "quote from Microsoft so Microsoft has this blog post Series where they sort of talk about sort of the migration",
    "start": "329080",
    "end": "335840"
  },
  {
    "text": "scenarios of their internal teams and this is one uh example of the migration",
    "start": "335840",
    "end": "341319"
  },
  {
    "text": "story from the Microsoft teams infrastructure and Ash Communication Service team and they migrated from NET",
    "start": "341319",
    "end": "348319"
  },
  {
    "text": "Framework to uh net 6 and they sort of managed to have an uh we're able to see",
    "start": "348319",
    "end": "354440"
  },
  {
    "text": "as a compute cost reduction of up to 50% per month on average we observed 24 4%",
    "start": "354440",
    "end": "360240"
  },
  {
    "text": "monthly cost reduction after migrating to do next 6 the reduction in course reduced aure spend by 24% and the",
    "start": "360240",
    "end": "368680"
  },
  {
    "text": "performance Improvement were 30 to 50% improvements in performance including",
    "start": "368680",
    "end": "374360"
  },
  {
    "text": "P99 CP utilization and P99 service latency right just by migrating and I'm",
    "start": "374360",
    "end": "380720"
  },
  {
    "text": "saying just I know this is a very simple word just by migrating essentially from",
    "start": "380720",
    "end": "386080"
  },
  {
    "text": "Net Framework to net 6 and leveraging more mod programming techniques to opt",
    "start": "386080",
    "end": "391680"
  },
  {
    "text": "in into the performance Improvement that net 6 provides they were able to reduce their Ash comput spend by 24% and that's",
    "start": "391680",
    "end": "400720"
  },
  {
    "text": "amazing right if you factor that in I'm pretty sure if you go to your boss and tell your boss I was able to reduce our",
    "start": "400720",
    "end": "406759"
  },
  {
    "text": "ashes spend by 10% your boss is also already amazingly happy but if you say like 24% you will get the bonus I can I",
    "start": "406759",
    "end": "415160"
  },
  {
    "text": "can assure you but in this talk I have summarized sort of my personal lesson on how to sort of make performance",
    "start": "415160",
    "end": "421560"
  },
  {
    "text": "optimizations actionable because I like to have a practical approach that you can also use in order to sort of improve",
    "start": "421560",
    "end": "428080"
  },
  {
    "text": "things identify bottlenecks and then from there over a cycles of measure change and measure actually improving",
    "start": "428080",
    "end": "434319"
  },
  {
    "text": "your code as well but to start on this journey you have to become performance",
    "start": "434319",
    "end": "439639"
  },
  {
    "text": "aware and for me one of the key principles that I always apply to almost",
    "start": "439639",
    "end": "445039"
  },
  {
    "text": "everything that I do in software is I try to make explicit tradeoffs in the decisions that I'm making right so this",
    "start": "445039",
    "end": "452560"
  },
  {
    "text": "also applies for me to Performance and the reasonable mature team should be performance aware so like my friend",
    "start": "452560",
    "end": "460319"
  },
  {
    "text": "Martin B from Belgian he's also here at the chat Prince Bo once family said in some countries you have to be bare aware",
    "start": "460319",
    "end": "468039"
  },
  {
    "text": "for the likelihood when you're hiking for the likelihood of a bear to cross your path right so and but actually",
    "start": "468039",
    "end": "475680"
  },
  {
    "text": "that's probably the case in Canada it's probably not the case in in Switzerland but actually I did some research in",
    "start": "475680",
    "end": "481840"
  },
  {
    "text": "preparation for this talk appar apparently Bears disappeared in Switzerland for almost a 100 years but",
    "start": "481840",
    "end": "488560"
  },
  {
    "text": "in sort of uh 2005 and one single brown bear started Crossing from south from",
    "start": "488560",
    "end": "494599"
  },
  {
    "text": "north of Italy over the South Switzerland border and there is a likelihood that a bear will cross your",
    "start": "494599",
    "end": "500560"
  },
  {
    "text": "path so as long as you know how to react when a bear crosses your path and you apply all those principles in the",
    "start": "500560",
    "end": "507039"
  },
  {
    "text": "situations where you need it then your fine but I'm totally digressing here but my point is you should be doing the same",
    "start": "507039",
    "end": "514080"
  },
  {
    "text": "for for your performance right build up a performance awareness and then you know what to do in order to make the",
    "start": "514080",
    "end": "520039"
  },
  {
    "text": "explicit trade-offs in in in your projects as well but when it comes to",
    "start": "520039",
    "end": "525399"
  },
  {
    "text": "Performance uh and when you're performance aware it doesn't mean you have to go to go always all in on the",
    "start": "525399",
    "end": "532399"
  },
  {
    "text": "contrary in fact I personally I always start with the simplest solution first",
    "start": "532399",
    "end": "537800"
  },
  {
    "text": "so I take the business requirements I think about what is the simplest way to implement this thing right I do not care",
    "start": "537800",
    "end": "544399"
  },
  {
    "text": "about performance I just make sure I have reasonable test coverage in place I implement the feature I look at the code",
    "start": "544399",
    "end": "551480"
  },
  {
    "text": "and it passes the test and that's probably a point in time I could ship it or I can sort of make a step step back",
    "start": "551480",
    "end": "558720"
  },
  {
    "text": "and ask myself a bunch of questions and these questions that I usually ask myself here are the following how is",
    "start": "558720",
    "end": "565399"
  },
  {
    "text": "this code going to be executed at scale and what would be the memory current characteristics of this code B this is",
    "start": "565399",
    "end": "571399"
  },
  {
    "text": "just the gut feeling based on my over uh 15 years of being a net uh senior",
    "start": "571399",
    "end": "576720"
  },
  {
    "text": "software backend engineer right so I ask myself that question and then I start looking at the code what can I change",
    "start": "576720",
    "end": "583560"
  },
  {
    "text": "and then I ask myself are there simple lwh hanging fruits that I can apply here because I already have a code that works",
    "start": "583560",
    "end": "590839"
  },
  {
    "text": "and I have test coverage right so I can start making some changes without breaking stuff then I sort of ask myself",
    "start": "590839",
    "end": "597640"
  },
  {
    "text": "the question are there things that can move away from the hot path by simply restructuring my code a little bit right",
    "start": "597640",
    "end": "604519"
  },
  {
    "text": "because anything you do on the hot path that is costly that you can move away from the hot path like allocating a bite",
    "start": "604519",
    "end": "611040"
  },
  {
    "text": "array and reusing the bite array that's amazing because then you're not allocating a bite array anymore on the",
    "start": "611040",
    "end": "617000"
  },
  {
    "text": "hot path then the question I also ask myself what part is under my control and",
    "start": "617000",
    "end": "623240"
  },
  {
    "text": "what isn't right because some sometimes performance optimization require to talk",
    "start": "623240",
    "end": "628560"
  },
  {
    "text": "to another team maybe they have their own a agenda their pressure right so I cannot influence them or maybe I'm using",
    "start": "628560",
    "end": "635399"
  },
  {
    "text": "a third party Library maybe it's open source and I'm lucky and I can spend the time to improve the open source Library",
    "start": "635399",
    "end": "642360"
  },
  {
    "text": "maybe it's closed Source right then I have to talk to a third party wender convince them with whatever I have that",
    "start": "642360",
    "end": "649079"
  },
  {
    "text": "there is a problem in their Library so I have to make these trade-offs as well because again I'm I I have to be",
    "start": "649079",
    "end": "654959"
  },
  {
    "text": "cognizant about the time investment and then the question is also what optimiz ations can I apply and when should I",
    "start": "654959",
    "end": "661880"
  },
  {
    "text": "stop right this is a very important question because I told you I'm not a performance engineer and it's important",
    "start": "661880",
    "end": "668360"
  },
  {
    "text": "for me to deliver business value to my customers right so I need to make these trade-offs and especially I can I can",
    "start": "668360",
    "end": "675000"
  },
  {
    "text": "wholeheartedly say performance optimizations can be quite addictive right and I want to be cognizant in that",
    "start": "675000",
    "end": "681839"
  },
  {
    "text": "mode of feeding my sort of inner geek and doing performance optimizations",
    "start": "681839",
    "end": "686959"
  },
  {
    "text": "versus am I still on the right track is the sort of the effort to Value ratio still good right we have to keep that in",
    "start": "686959",
    "end": "693200"
  },
  {
    "text": "in mind so it's all about finding the right balance um if you want to know",
    "start": "693200",
    "end": "698440"
  },
  {
    "text": "more about the tradeoffs I gave a talk also at NDC called performance tricks I learned from contributing to open",
    "start": "698440",
    "end": "704000"
  },
  {
    "text": "source.net packages it's available on this QR code you can scan it and you can watch it should you be interested to go",
    "start": "704000",
    "end": "710800"
  },
  {
    "text": "more in depth into what concrete things can you do in net and C to optimize and",
    "start": "710800",
    "end": "716200"
  },
  {
    "text": "make your code more performant this is not the focus of of today's talk by the way if you don't manage to make a",
    "start": "716200",
    "end": "722120"
  },
  {
    "text": "picture I also share a link to a repository towards the end of the talk with all the",
    "start": "722120",
    "end": "727360"
  },
  {
    "text": "resources good but then once I sort of start and start into the process soort I",
    "start": "727360",
    "end": "734720"
  },
  {
    "text": "ask myself what am I actually doing when i'm doing performance optimizations and I came up with a what I would say a",
    "start": "734720",
    "end": "741320"
  },
  {
    "text": "great mechanical approach that you can also use to do performance optimizations I called it the performance Loop and the",
    "start": "741320",
    "end": "748560"
  },
  {
    "text": "performance Loop it starts very simple so first of all what I'm doing is I'm",
    "start": "748560",
    "end": "753639"
  },
  {
    "text": "writing a a sample or a a performance harness that makes it possible to",
    "start": "753639",
    "end": "759160"
  },
  {
    "text": "observe the thing that I want to see under a profiler and usually what I do",
    "start": "759160",
    "end": "764720"
  },
  {
    "text": "which is where important I take at least a memory profile and the CPU profile if",
    "start": "764720",
    "end": "770480"
  },
  {
    "text": "you have code that is also doing iob bound stuff like database operations HTTP client calls you also want to take",
    "start": "770480",
    "end": "776800"
  },
  {
    "text": "an IO profile but the io profiling is not part of my talk today I'm only going",
    "start": "776800",
    "end": "781839"
  },
  {
    "text": "in the interest of time going to show you memory and CPU profiling but I want to make sure that you keep in mind that",
    "start": "781839",
    "end": "787880"
  },
  {
    "text": "iob bound stuff is always hundreds sometimes thousands of times slower than CPU memory stuff right so you might want",
    "start": "787880",
    "end": "795199"
  },
  {
    "text": "to look into that stuff as well but again that's not the focus of of the talk because what that test harness",
    "start": "795199",
    "end": "801279"
  },
  {
    "text": "gives me with those two profiling sessions it gives me an overview of all the subsystems that play and that can",
    "start": "801279",
    "end": "807880"
  },
  {
    "text": "actually make explicit tradeoffs where to focus on right good then the next",
    "start": "807880",
    "end": "813360"
  },
  {
    "text": "thing that I start doing is I I select the hot path for example the one that is responsible for the majority of",
    "start": "813360",
    "end": "820320"
  },
  {
    "text": "allocations or for the biggest CPU slowdown or whether I I've I feel I can",
    "start": "820320",
    "end": "826680"
  },
  {
    "text": "make a good enough impact on this code here and that impact can some sometimes",
    "start": "826680",
    "end": "831959"
  },
  {
    "text": "be maybe I don't have maybe I see some allocations but I don't have the expertise the knowledge to figure out",
    "start": "831959",
    "end": "838759"
  },
  {
    "text": "something over there so I focus on the parts that I know I can I I have knowledge in because knowledge is",
    "start": "838759",
    "end": "845240"
  },
  {
    "text": "crucial to actually make this performance optimizations and I tend to not think too much about oh there is",
    "start": "845240",
    "end": "852079"
  },
  {
    "text": "like 100 megabytes of allocation over there and only 20 over there but that's where my knowledge is because at the end",
    "start": "852079",
    "end": "857800"
  },
  {
    "text": "of the day what's what I care about is I sort of apply the principle of 1%",
    "start": "857800",
    "end": "863120"
  },
  {
    "text": "improvements over time right because the net team by the way does exactly the same thing because the idea is when",
    "start": "863120",
    "end": "869240"
  },
  {
    "text": "you're making 1% improvement over the entire code base in several iterations over several major version like The NET",
    "start": "869240",
    "end": "876079"
  },
  {
    "text": "Framework the combing effect of these 1% improvements will make a huge impact",
    "start": "876079",
    "end": "881839"
  },
  {
    "text": "anyway so don't Focus too much on like oh there is the this huge allocation um",
    "start": "881839",
    "end": "887720"
  },
  {
    "text": "o over there and then when I do improvements I also add more test",
    "start": "887720",
    "end": "893320"
  },
  {
    "text": "coverage in place because at the end of the day right it's it's it's basically",
    "start": "893320",
    "end": "899079"
  },
  {
    "text": "useless if you have optimized the code but the code is broken right it doesn't",
    "start": "899079",
    "end": "904199"
  },
  {
    "text": "it doesn't help when the code is utterly fast but doesn't work right so I want to make sure that things are actually good",
    "start": "904199",
    "end": "909839"
  },
  {
    "text": "and then um the next thing that I'm doing is I start sort of um benchmarking",
    "start": "909839",
    "end": "914920"
  },
  {
    "text": "what I usually do is to save some time I extract the code into a dedicated repository as well as possible and then",
    "start": "914920",
    "end": "921800"
  },
  {
    "text": "I do a series of short runs to essentially see whether I'm heading in the right direction I'm going to talk",
    "start": "921800",
    "end": "927560"
  },
  {
    "text": "more about uh short runs what they are and once I'm reasonably happy with the outcome I do a full chop run which gives",
    "start": "927560",
    "end": "934360"
  },
  {
    "text": "me statistic statistical results that I actually care about that give me a sort of a good indication where I am and then",
    "start": "934360",
    "end": "941839"
  },
  {
    "text": "once I'm done there what I'm uh I sometimes go in Cycles what I call the inner loop of this performance Loop",
    "start": "941839",
    "end": "948160"
  },
  {
    "text": "right because sometimes I I improve I Benchmark and I see oh it's actually going in the right direction but now I",
    "start": "948160",
    "end": "953560"
  },
  {
    "text": "have more ideas so I improve it again Benchmark it again and then I say oh I'm going now in the wrong direction Maybe",
    "start": "953560",
    "end": "959160"
  },
  {
    "text": "let's go back right so I do this sort of in in iterations and then what is",
    "start": "959160",
    "end": "964720"
  },
  {
    "text": "usually forgotten by many people at the end when I'm done when I'm recently certain this is actually doing well I",
    "start": "964720",
    "end": "971000"
  },
  {
    "text": "put it back into the sample or performance harness that I wrote before to actually make sure that in the grand",
    "start": "971000",
    "end": "977839"
  },
  {
    "text": "scheme of thing the changes that I made are actually improving the memory profile and the CPU profile right and",
    "start": "977839",
    "end": "984399"
  },
  {
    "text": "then I ship the code and focus on other ant uh other things in in my code base",
    "start": "984399",
    "end": "990160"
  },
  {
    "text": "shipping the code that you just optimized it sounds so obvious but it's really important because if it's just",
    "start": "990160",
    "end": "996160"
  },
  {
    "text": "sitting somewhere on a branch and it's not in production sorry you don't know whether your changes actually make are",
    "start": "996160",
    "end": "1002680"
  },
  {
    "text": "making an impact right because sometimes the assumptions that we're making in our code when we're optimizing and writing",
    "start": "1002680",
    "end": "1008160"
  },
  {
    "text": "the code they turn out to not be true in production right so go back put it in production put on your monitoring system",
    "start": "1008160",
    "end": "1014920"
  },
  {
    "text": "and see what actually is going on but let's see how we can apply this sort of performance uh loop to a more practical",
    "start": "1014920",
    "end": "1021440"
  },
  {
    "text": "example because I work at particular software and I'm a framework and Library engineer I'm going to show you an",
    "start": "1021440",
    "end": "1028319"
  },
  {
    "text": "example out of my profession as in a framework and library but I'm 100%",
    "start": "1028319",
    "end": "1033798"
  },
  {
    "text": "certain whatever I'm showing you today with this framework of Library applies",
    "start": "1033799",
    "end": "1039038"
  },
  {
    "text": "also to your business code so please uh bear with me a little bit so answer response is basically an messaging in",
    "start": "1039039",
    "end": "1045160"
  },
  {
    "text": "library uh messaging library that sort of feeds messag from queing system like",
    "start": "1045160",
    "end": "1050280"
  },
  {
    "text": "ash service bus sqs SNS MSM q and premises SQL server pogress server and",
    "start": "1050280",
    "end": "1057039"
  },
  {
    "text": "whatnot and what it does it sort of tries to sort of execute the our",
    "start": "1057039",
    "end": "1062160"
  },
  {
    "text": "customer code and that is sort of the message pump that I have visualized there and if you want to know more about",
    "start": "1062160",
    "end": "1068559"
  },
  {
    "text": "what answer response does because I cannot cover this and it's not the focus of this talk you can go to go.",
    "start": "1068559",
    "end": "1074520"
  },
  {
    "text": "particular.net nc- -224 D quick start but let's have a look",
    "start": "1074520",
    "end": "1081400"
  },
  {
    "text": "at how uh answer response Works internally so answer response has the",
    "start": "1081400",
    "end": "1087039"
  },
  {
    "text": "most critical infrastructure piece inside answer response is called the an response pipeline so the answer response",
    "start": "1087039",
    "end": "1094400"
  },
  {
    "text": "pipeline is sort of the engine that drives all the stuff that is plugged into an respus and Os has in the",
    "start": "1094400",
    "end": "1102480"
  },
  {
    "text": "pipeline a series of behaviors and those behaviors sort of they follow and the",
    "start": "1102480",
    "end": "1107799"
  },
  {
    "text": "follows the open close principle and what we can do is there is a core thing which is called the pipeline and there",
    "start": "1107799",
    "end": "1113840"
  },
  {
    "text": "can be extensions that are pluged into that pipeline that do a bunch of stuff like for example it does transaction",
    "start": "1113840",
    "end": "1120480"
  },
  {
    "text": "management it does unit of work management it does serialization deserialization routing against multip",
    "start": "1120480",
    "end": "1127919"
  },
  {
    "text": "queing system and all that type of stuff or calling into Dynamo DB Cosmos DB SQL",
    "start": "1127919",
    "end": "1133200"
  },
  {
    "text": "Server Entity framework and hibernate right so there's lots of things going on in that Pipeline and and as such because",
    "start": "1133200",
    "end": "1140000"
  },
  {
    "text": "it invokes at the end of the day our customer code we want to make sure this pipeline is as efficiently as possible",
    "start": "1140000",
    "end": "1147080"
  },
  {
    "text": "if you're not familiar with behaviors you can conceptualize behaviors similar to as. net core middleware right so",
    "start": "1147080",
    "end": "1154919"
  },
  {
    "text": "asp.net core they have this middleware thing where you can basically have a method that is called invoke or you can",
    "start": "1154919",
    "end": "1161240"
  },
  {
    "text": "use the minimal API approach where you get a next delegate into your code and",
    "start": "1161240",
    "end": "1166440"
  },
  {
    "text": "then you can essentially execute code before the next delegate and after the next delegate so you can actually wrap",
    "start": "1166440",
    "end": "1172360"
  },
  {
    "text": "the entire as core Pipeline with a TR catch as an example or with a transaction whatever you want to do and",
    "start": "1172360",
    "end": "1179200"
  },
  {
    "text": "behaviors are pretty similar in end service bus right so we essentially inherit from Behavior we Define some",
    "start": "1179200",
    "end": "1185600"
  },
  {
    "text": "State and then we have a next and we can execute basically code before and after and we can wrap things in a tri catch",
    "start": "1185600",
    "end": "1192240"
  },
  {
    "text": "right and that's where we actually do our dazation uh calization uh uh",
    "start": "1192240",
    "end": "1198120"
  },
  {
    "text": "database transaction management and whatnot and where our customers also plug in stuff into the pipeline to sort",
    "start": "1198120",
    "end": "1205240"
  },
  {
    "text": "of follow the open close principle there right and I told you I'm showing you this example with enter bus which is a",
    "start": "1205240",
    "end": "1212120"
  },
  {
    "text": "framework on library and you might be thinking yeah but Daniel come on you're a framework and Library developer why",
    "start": "1212120",
    "end": "1217280"
  },
  {
    "text": "are you telling me all this this is not applicable to my business code all what I'm showing you today with examples of",
    "start": "1217280",
    "end": "1223559"
  },
  {
    "text": "answer response applies one to one for your business code as well so if you stick to the practical approach that I'm",
    "start": "1223559",
    "end": "1229640"
  },
  {
    "text": "showing you here with this concrete example you will be successful as well in your stuff okay let's look into",
    "start": "1229640",
    "end": "1236400"
  },
  {
    "text": "profiling the P the pipeline so we are now entering the first step of the",
    "start": "1236400",
    "end": "1241600"
  },
  {
    "text": "performance Loop right so to get an overview of the problem domain in front",
    "start": "1241600",
    "end": "1246960"
  },
  {
    "text": "of me I'm creating sort of this sample or profiling harness that sort of tests",
    "start": "1246960",
    "end": "1253280"
  },
  {
    "text": "the thing that I want to see under a specific subset specifically for what",
    "start": "1253280",
    "end": "1258760"
  },
  {
    "text": "I'm going to investigate into right so what I'm essentially doing is for",
    "start": "1258760",
    "end": "1263799"
  },
  {
    "text": "example because I want to test the pipeline invocation speed and the pipeline throughput I'm setting up a",
    "start": "1263799",
    "end": "1269480"
  },
  {
    "text": "sort of a an a profiling harness that sort of make sure I can see the relevant",
    "start": "1269480",
    "end": "1274919"
  },
  {
    "text": "pipeline stuff under that harness and then I told you already before but I'm",
    "start": "1274919",
    "end": "1280000"
  },
  {
    "text": "going to repeat it because so important what I'm doing is I'm taking a CPU profile and I'm taking a memory profile",
    "start": "1280000",
    "end": "1287600"
  },
  {
    "text": "I usually use the chat brains tools like memory and Trace because I'm a big fan of those but don't get me wrong um there",
    "start": "1287600",
    "end": "1295320"
  },
  {
    "text": "is your mileage may vary right depending on your subscription level with Visual Studio you can apply the same thing that",
    "start": "1295320",
    "end": "1302480"
  },
  {
    "text": "I'm showing you today with the chat brains tool with visual studio right or",
    "start": "1302480",
    "end": "1307520"
  },
  {
    "text": "if you're saying well I don't have access I I I don't have commercial tools available can't you show me something a",
    "start": "1307520",
    "end": "1314480"
  },
  {
    "text": "free tool there is for example if you're running on Windows there is perfu you can freely download you can use perfu",
    "start": "1314480",
    "end": "1320880"
  },
  {
    "text": "although I would say perfu is a very Advanced tool every time I open it I need to download the cheat sheet again",
    "start": "1320880",
    "end": "1326440"
  },
  {
    "text": "to remember all the very Advanced commands to actually go through perfu but I'm showing you it today with the",
    "start": "1326440",
    "end": "1332480"
  },
  {
    "text": "chat brains tools but you can apply exactly the same thing with any other tools whatever you like right and as a",
    "start": "1332480",
    "end": "1338640"
  },
  {
    "text": "matter of fact sometimes depending on the complexity of the performance investigation I even use multiple tools",
    "start": "1338640",
    "end": "1346120"
  },
  {
    "text": "to sort of it's the I see it I see it when I see I know it when I see it kind",
    "start": "1346120",
    "end": "1351480"
  },
  {
    "text": "of principle right so I need to have multip multiple views uh on on my codes",
    "start": "1351480",
    "end": "1357039"
  },
  {
    "text": "good let's have a look how a harness looks like so first of all I'm setting up end service bus um uh with a",
    "start": "1357039",
    "end": "1364240"
  },
  {
    "text": "transport and the serializer and something of my choice so this is my harness so what I'm doing is I'm making",
    "start": "1364240",
    "end": "1369919"
  },
  {
    "text": "trade-offs so for example I was running on windows so I use the msmq transport because it's available I know it's very",
    "start": "1369919",
    "end": "1376240"
  },
  {
    "text": "old school but it works I don't have to install anything it just works it's there on my machine then what I do is I",
    "start": "1376240",
    "end": "1383559"
  },
  {
    "text": "sort of configure a reasonably fast serializer I'm using the system text Chason calyer that's what I'm doing and",
    "start": "1383559",
    "end": "1390159"
  },
  {
    "text": "then the next thing is because I care about sort of measuring the raw execution speed of the pipeline and I'm",
    "start": "1390159",
    "end": "1396720"
  },
  {
    "text": "not interested in iob Bound stuff I configure answer using the inmemory persistence right because I don't want",
    "start": "1396720",
    "end": "1402840"
  },
  {
    "text": "to use Cosmos DB or SQL Server whatever right because that's not the focus of my",
    "start": "1402840",
    "end": "1408760"
  },
  {
    "text": "performance investigation then I have a bunch of console right lines and read lines in that harness that sort of tell",
    "start": "1408760",
    "end": "1414840"
  },
  {
    "text": "me now is the stuff over that you don't want to see you can now attach the profiler right take a snapshot that's",
    "start": "1414840",
    "end": "1421720"
  },
  {
    "text": "what I'm doing here and then what I'm doing is I because I want to sort of test the pipeline I know that when I do",
    "start": "1421720",
    "end": "1428480"
  },
  {
    "text": "uh endpoint instance. publish the publish pipeline is going to be executed right so I sort of publish a thousand",
    "start": "1428480",
    "end": "1435799"
  },
  {
    "text": "messages concurrently with an resp boss then the next thing that I do I'm doing",
    "start": "1435799",
    "end": "1440919"
  },
  {
    "text": "is I know there is not just the publish pipeline based on my do domain knowledge there is also the receive pipeline",
    "start": "1440919",
    "end": "1446880"
  },
  {
    "text": "because when I send messages they will come in again at some point right I will receive messages so what I do is I add a",
    "start": "1446880",
    "end": "1454159"
  },
  {
    "text": "Handler that sort of receives those messages and then what's going to happen is whenever a Handler is invoked right I",
    "start": "1454159",
    "end": "1460600"
  },
  {
    "text": "concurrently published a thousand messages and now a thousand messages come over in on the other side and we'll",
    "start": "1460600",
    "end": "1466640"
  },
  {
    "text": "execute this piece of code and that's where the receive pipeline will be executed right so now I have all the",
    "start": "1466640",
    "end": "1472760"
  },
  {
    "text": "things in place that I need to uh sort of observe things and this is the test harness how it looks like but you might",
    "start": "1472760",
    "end": "1479720"
  },
  {
    "text": "be asking yourself but I mean yes you showed me now this concrete example with answer response but what else do I need",
    "start": "1479720",
    "end": "1486840"
  },
  {
    "text": "to encount uh uh take into account for my test harnesses I have a bunch of",
    "start": "1486840",
    "end": "1492360"
  },
  {
    "text": "principles that I want to give you away so the first one is pretty obvious you're like Daniel come on seriously I",
    "start": "1492360",
    "end": "1498440"
  },
  {
    "text": "mean you have to compile it and execute it in release mode well yes it's super",
    "start": "1498440",
    "end": "1503520"
  },
  {
    "text": "obvious but I can tell you usually the default settings in your IDs is always the debugger debug state right the",
    "start": "1503520",
    "end": "1509840"
  },
  {
    "text": "amount of times I personally have forgotten to switch it to release mode it's actually staggering then it has to",
    "start": "1509840",
    "end": "1517360"
  },
  {
    "text": "run a few seconds because we want to take sort of a profile and snapshot so it has to run a few seconds it can't be",
    "start": "1517360",
    "end": "1523559"
  },
  {
    "text": "just a few milliseconds because then we probably won't see anything and it should keep the overhead of all the",
    "start": "1523559",
    "end": "1529200"
  },
  {
    "text": "things that we don't want to see pretty minimal and then usually it's also good practice depending on what what what",
    "start": "1529200",
    "end": "1535640"
  },
  {
    "text": "you're trying to measure to sort of disable the tier Chet compilation and then in order to see the",
    "start": "1535640",
    "end": "1541840"
  },
  {
    "text": "full stack phas also add debu uh type to pdb only and add the debug symbols",
    "start": "1541840",
    "end": "1548039"
  },
  {
    "text": "because when you have that you will see the full stack Trace essentially in your profiling snapshots okay now that we",
    "start": "1548039",
    "end": "1555159"
  },
  {
    "text": "have that in the harness we can actually see what's going on and I'm going to show you now a few concrete screenshot",
    "start": "1555159",
    "end": "1561840"
  },
  {
    "text": "of this example so I filter in on the sort of publish operation because I want to look at the uh sort of publish",
    "start": "1561840",
    "end": "1568480"
  },
  {
    "text": "Pipeline and then what what I see here is that I'm exploring the memory allocations and you might be asking",
    "start": "1568480",
    "end": "1574559"
  },
  {
    "text": "yourself but Daniel why memory and not CPU first right see isn't CPU way more important well the thing is what I've",
    "start": "1574559",
    "end": "1581399"
  },
  {
    "text": "learned based on my experience and also from for example David Fowler recently tweeted that one of the biggest sources",
    "start": "1581399",
    "end": "1587760"
  },
  {
    "text": "of ations and slowdowns in net applications still up to today for",
    "start": "1587760",
    "end": "1592880"
  },
  {
    "text": "example memory stream to array or bite array allocations and usually what you can do is you can get a lot of bang for",
    "start": "1592880",
    "end": "1599960"
  },
  {
    "text": "the buck when you optimize a way memory allocations that's why I'm focusing on this part first because once we go into",
    "start": "1599960",
    "end": "1606520"
  },
  {
    "text": "sort of CPU algorithmic complexity and stuff like that things are getting very very complicated and we can sort of get",
    "start": "1606520",
    "end": "1613399"
  },
  {
    "text": "get a lot of uh small wins by actually focusing on memory allocations and what I see here on this screenshot is a bunch",
    "start": "1613399",
    "end": "1619960"
  },
  {
    "text": "of bite array streamwriter message CU permission memory stream set capacity",
    "start": "1619960",
    "end": "1626000"
  },
  {
    "text": "allocations and Char array allocations and and and whatnot they are super Hefty",
    "start": "1626000",
    "end": "1632799"
  },
  {
    "text": "right and now again you say well let's get rid of those but no because I'm",
    "start": "1632799",
    "end": "1637840"
  },
  {
    "text": "focusing on the pipeline with my domain knowledge I'm basically focusing as like this is what I care about so I see here",
    "start": "1637840",
    "end": "1643960"
  },
  {
    "text": "I have 20 megabyte of memory allocations from from a thing called Behavior chain invoke and that's where the publish",
    "start": "1643960",
    "end": "1651320"
  },
  {
    "text": "pipeline is invoked but then I also have to look at the receive part right because I want to get a full overview of",
    "start": "1651320",
    "end": "1657720"
  },
  {
    "text": "what's actually going on so then what I what I do is I sort of uh zoom in in the receive part and again I have lots of",
    "start": "1657720",
    "end": "1664679"
  },
  {
    "text": "bite array XML text reader notes and message extension allocations but again I'm zooming in and I'm sort of knowing",
    "start": "1664679",
    "end": "1671640"
  },
  {
    "text": "here I have 27 to 83 megabytes of allocations that are coming from uh the",
    "start": "1671640",
    "end": "1678480"
  },
  {
    "text": "pipeline right and then again you might be asking yourself but Daniel come on",
    "start": "1678480",
    "end": "1683760"
  },
  {
    "text": "like seriously you have like 200 megabytes of bite array and message extension allocations and you're",
    "start": "1683760",
    "end": "1689840"
  },
  {
    "text": "focusing on 20 megabyte or 27 megabyte of allocations you're nuts right why are you doing that to yourself well again I",
    "start": "1689840",
    "end": "1697600"
  },
  {
    "text": "think uh ideally of course you would like to get rid of all the allocations right in our Cod base because then the",
    "start": "1697600",
    "end": "1703760"
  },
  {
    "text": "code is utterly fast right but usually the the context that you have the",
    "start": "1703760",
    "end": "1709120"
  },
  {
    "text": "knowledge that you have or I have in this specific example is really crucial to guide you through sort of that noise",
    "start": "1709120",
    "end": "1716279"
  },
  {
    "text": "that you see in those profiler sort of uh snapshots right because I can tell",
    "start": "1716279",
    "end": "1721640"
  },
  {
    "text": "you I used msmq right and what's what's there most of the allocations that you",
    "start": "1721640",
    "end": "1726720"
  },
  {
    "text": "saw on the screenshot they came from the msmq transport and msmq transport is",
    "start": "1726720",
    "end": "1732399"
  },
  {
    "text": "sort of a legacy thing that most of our customers are transitioning away of they",
    "start": "1732399",
    "end": "1738080"
  },
  {
    "text": "moving to rabid mq as service bu sqs SNS right so if I invest time into",
    "start": "1738080",
    "end": "1743559"
  },
  {
    "text": "optimizing msmq then I'm basically not doing all the other customers are favor",
    "start": "1743559",
    "end": "1748679"
  },
  {
    "text": "and I'm optimizing for a diminishing user base so that's not a good investment of my time right and another",
    "start": "1748679",
    "end": "1754679"
  },
  {
    "text": "angle can also be I might not be an msmq expert so I would have to first ramp up",
    "start": "1754679",
    "end": "1759919"
  },
  {
    "text": "my knowledge to actually understand what's going on there to actually make a meaningful impact right or the code is",
    "start": "1759919",
    "end": "1765799"
  },
  {
    "text": "in a Microsoft uh code base that will never be touched again because msmq is done right so why would I focus my",
    "start": "1765799",
    "end": "1772720"
  },
  {
    "text": "efforts there and then again I told you already this 1% improvements right by making iterative gains on the hot path I",
    "start": "1772720",
    "end": "1780039"
  },
  {
    "text": "will get overall improvements across the code base anyway so I don't have to focus on these allocations and again the",
    "start": "1780039",
    "end": "1787360"
  },
  {
    "text": "pipeline optimizations that I'm doing they benefit all the users regardless of the transport they're running on so I",
    "start": "1787360",
    "end": "1793679"
  },
  {
    "text": "want to focus on that right so what I'm telling you here is that context that",
    "start": "1793679",
    "end": "1799080"
  },
  {
    "text": "you have about your co-base is crucial to guide you through what you're doing",
    "start": "1799080",
    "end": "1804240"
  },
  {
    "text": "in the performance optimizations right and make those tradeoff explicitly with",
    "start": "1804240",
    "end": "1809279"
  },
  {
    "text": "your team colleagues and even better write them down when you're making them right do a decision log um design",
    "start": "1809279",
    "end": "1816519"
  },
  {
    "text": "decision log or let's say performance investigation decision log to write it down so that it's captured so that you",
    "start": "1816519",
    "end": "1823200"
  },
  {
    "text": "know it the next time and you can share it with others and maybe if you're a senior developer you can Al teach your",
    "start": "1823200",
    "end": "1829440"
  },
  {
    "text": "um um your newer developers to do these types of performance optimizations so let's have another look",
    "start": "1829440",
    "end": "1836200"
  },
  {
    "text": "at um when we zoom in into sort of more of the pipeline we can see that there is a bunch of function task Behavior",
    "start": "1836200",
    "end": "1842960"
  },
  {
    "text": "display class allocations that are also sort of related uh to the pipeline and",
    "start": "1842960",
    "end": "1848919"
  },
  {
    "text": "then with for example tool like um dot memory you can also filter by namespace",
    "start": "1848919",
    "end": "1854240"
  },
  {
    "text": "and visual studio can do that as well perfu can do that as well so you sort of filter in into the anse pipeline Nam",
    "start": "1854240",
    "end": "1860480"
  },
  {
    "text": "space or whatever name space you're looking at when you do this performance optimizations and then I can see all the allocations that are coming from there",
    "start": "1860480",
    "end": "1868159"
  },
  {
    "text": "so now we have a good overview of the memory characteristics so let's look now at the CPU characteristics right um so",
    "start": "1868159",
    "end": "1877519"
  },
  {
    "text": "sometimes code spends a lot of time in doing algorithmic stuff right and we want to make sure that this is efficient",
    "start": "1877519",
    "end": "1883880"
  },
  {
    "text": "because when we're burning away CPU that can significantly slow down down things on uh the hot path and one good thing",
    "start": "1883880",
    "end": "1891279"
  },
  {
    "text": "that you can do is you can leverage flame graphs to actually see uh what's going on flame graphs are really really",
    "start": "1891279",
    "end": "1898279"
  },
  {
    "text": "helpful to get a good overview of the performance characteristics and I'm going to show you here this flame graph",
    "start": "1898279",
    "end": "1904039"
  },
  {
    "text": "I know this is probably very tiny for you but I'm going to quickly walk you through it so the flame graph here on",
    "start": "1904039",
    "end": "1910240"
  },
  {
    "text": "the screen you sort of read it from top to bottom and the top entry point is",
    "start": "1910240",
    "end": "1915320"
  },
  {
    "text": "sort of the publish Pipeline and one of the good things about flame graphs even if you don't even know what's on the",
    "start": "1915320",
    "end": "1921720"
  },
  {
    "text": "screen what you can see is there are bars right and those bars they have a length and what's the good thing about",
    "start": "1921720",
    "end": "1927760"
  },
  {
    "text": "the flame graph is basically the the top one represents sort of the length or the",
    "start": "1927760",
    "end": "1933679"
  },
  {
    "text": "execution time of sort of the entire Cod that is underneath there so that means",
    "start": "1933679",
    "end": "1939840"
  },
  {
    "text": "essentially the length of the topmost sort of a bar is sort of it's the own",
    "start": "1939840",
    "end": "1944960"
  },
  {
    "text": "execution time of that function plus the execution time of all the thing that is",
    "start": "1944960",
    "end": "1950600"
  },
  {
    "text": "underneath right so the good thing is that without having a really good understanding of sort of how many",
    "start": "1950600",
    "end": "1956960"
  },
  {
    "text": "milliseconds or whatever it is I can look at the flame graph and I can see oh",
    "start": "1956960",
    "end": "1962240"
  },
  {
    "text": "there is a bunch of red stuff right that is pretty hefty and there is a bunch of orange stuff and the bunch of red stuff",
    "start": "1962240",
    "end": "1969960"
  },
  {
    "text": "what that means for me I know this is infrastructure code that executes the pipeline the orange stuff is actually",
    "start": "1969960",
    "end": "1976120"
  },
  {
    "text": "the actual business code that they that gets executed and I can already say it just by sort of looking at this flame",
    "start": "1976120",
    "end": "1982480"
  },
  {
    "text": "graph oh there is something off right the relationship between the red part and the orange part is way off so there",
    "start": "1982480",
    "end": "1989440"
  },
  {
    "text": "is probably a lot of room for improvements here and we can just by looking at the flame graph right and",
    "start": "1989440",
    "end": "1995440"
  },
  {
    "text": "when we Zoom that in we see that even better right so we essentially see is there is we have this mutate outgoing",
    "start": "1995440",
    "end": "2002320"
  },
  {
    "text": "message Behavior invoke that's the actual business code that is executed and then we have chiber chish chish",
    "start": "2002320",
    "end": "2008120"
  },
  {
    "text": "chish chish chiber chish and then we have apply uh apply reply to address",
    "start": "2008120",
    "end": "2013360"
  },
  {
    "text": "Behavior which is the other sort of business code right so in between the business code we have a bunch of",
    "start": "2013360",
    "end": "2018679"
  },
  {
    "text": "infrastructure noise that we might be able to get rid of it but if you're saying well you know flame graphs okay I",
    "start": "2018679",
    "end": "2025440"
  },
  {
    "text": "get it I get it but H it looks very complicated on the screen most of the tools they also have sort of a a CPU",
    "start": "2025440",
    "end": "2032440"
  },
  {
    "text": "over you that you can use to filter in so for example dot race has the hotspots over you and I did filter in there for",
    "start": "2032440",
    "end": "2039559"
  },
  {
    "text": "the publish operation and then you see in percentage how how much CPU has been",
    "start": "2039559",
    "end": "2045039"
  },
  {
    "text": "spent so when we zoom in we can see on the publish pipeline we have sort of 20%",
    "start": "2045039",
    "end": "2050760"
  },
  {
    "text": "is spent and uh there and 12.3% is sort of spent in the behavior",
    "start": "2050760",
    "end": "2056280"
  },
  {
    "text": "chain invocation so as a total 32.3% of the CPU is spent in executing",
    "start": "2056280",
    "end": "2063720"
  },
  {
    "text": "the mechanics of the pipeline right what we have seen already before on the the flame graph with sort of the",
    "start": "2063720",
    "end": "2069000"
  },
  {
    "text": "relationship between the red and the orange part is also clearly visible here in numbers in percentages on the hotspot",
    "start": "2069000",
    "end": "2076158"
  },
  {
    "text": "overview good then let's have a look at the receive part it's slightly less dramatic but again if you filter in on",
    "start": "2076159",
    "end": "2083200"
  },
  {
    "text": "sort of the receive part when the messages are coming in we can see that sort of the behavior chain is consuming",
    "start": "2083200",
    "end": "2090480"
  },
  {
    "text": "4.88% um and 99.2% so in total if I can do the math this morning 14% so a",
    "start": "2090480",
    "end": "2097079"
  },
  {
    "text": "seventh of the overall CPU time when sort of receiving a message is essentially spent in infrastructure",
    "start": "2097079",
    "end": "2104119"
  },
  {
    "text": "stuff that is not really necessary but now we are ready to sort of make changes to the code base um the and improve",
    "start": "2104119",
    "end": "2112160"
  },
  {
    "text": "start improving things right because now we know what's going on we have a good understanding but hold on your horses",
    "start": "2112160",
    "end": "2118440"
  },
  {
    "text": "right I told you before we sort of improve we essentially want to make sure that we have some good test coverage in",
    "start": "2118440",
    "end": "2125320"
  },
  {
    "text": "place right uh and usually what I do is I think about because by looking at The",
    "start": "2125320",
    "end": "2130920"
  },
  {
    "text": "Code by doing these performance investigations I already build up context and knowledge that helps me to",
    "start": "2130920",
    "end": "2136480"
  },
  {
    "text": "make sort of design decision trade-offs and then I have a bunch of ideas and then I look at the test and say do the",
    "start": "2136480",
    "end": "2142880"
  },
  {
    "text": "test actually make sure that when I start introducing these ideas that I'm not breaking stuff right and here uh I",
    "start": "2142880",
    "end": "2149560"
  },
  {
    "text": "already had a few acceptance tests in place but I knew that I'm going to do some fancy stuff with expression tree",
    "start": "2149560",
    "end": "2155920"
  },
  {
    "text": "compiling and whatever right and that might lead to some code that might statically cash stuff and",
    "start": "2155920",
    "end": "2162079"
  },
  {
    "text": "that's dangerous so I introduced tests that make sure that I'm never actually",
    "start": "2162079",
    "end": "2167359"
  },
  {
    "text": "caching state that should never be cached so I introduced those sort of safety nets so that I can freely make",
    "start": "2167359",
    "end": "2173720"
  },
  {
    "text": "these optimizations right good um then uh if you want to know more about the",
    "start": "2173720",
    "end": "2180119"
  },
  {
    "text": "concrete things that I did I have a few block posts I I wrote a few block posts and one is called 10 times faster",
    "start": "2180119",
    "end": "2186119"
  },
  {
    "text": "execution with compiled expression trees or how we achieve 5x faster pipeline execution by removing closure",
    "start": "2186119",
    "end": "2192720"
  },
  {
    "text": "allocations you find those on go. particular.net nc- al-2024 Pipeline but this is not sort of",
    "start": "2192720",
    "end": "2200960"
  },
  {
    "text": "um uh the the topic of of this talk I know these are very click bait titles but I think uh uh we actually we",
    "start": "2200960",
    "end": "2208680"
  },
  {
    "text": "actually made 10x Improvement and 5x improvements they not just click bait so if you're interested to to see more",
    "start": "2208680",
    "end": "2215119"
  },
  {
    "text": "concrete things how I did these performance optimizations go read those blog posts good but now um let's have a",
    "start": "2215119",
    "end": "2222400"
  },
  {
    "text": "look at how we can actually Benchmark uh the the pipeline right usually when we look at actual production code right",
    "start": "2222400",
    "end": "2229640"
  },
  {
    "text": "compared to all the blog posts we have seen about Benchmark net you always see people are just testing one method right",
    "start": "2229640",
    "end": "2236160"
  },
  {
    "text": "and they ah yeah that's easy but our code is never just usually just one static method that just does a single",
    "start": "2236160",
    "end": "2242400"
  },
  {
    "text": "thing right usually essentially when we look at the code that we have out there soft Ware is way messier than we like to",
    "start": "2242400",
    "end": "2250000"
  },
  {
    "text": "admit right or especially the code that I have written usually have you ever had",
    "start": "2250000",
    "end": "2255040"
  },
  {
    "text": "that by the way you're sort of opening some code and you look at it it's like what the hell is going on here and then",
    "start": "2255040",
    "end": "2261119"
  },
  {
    "text": "you do a g blame and you realize it was you three months before that happens to me all the time so but yeah so or as",
    "start": "2261119",
    "end": "2269440"
  },
  {
    "text": "Gordon Ramsey would say right software is a disgusting festering mess but",
    "start": "2269440",
    "end": "2275160"
  },
  {
    "text": "essentially um what's what's important right usually when we have software or codes in our production code it's not a",
    "start": "2275160",
    "end": "2282359"
  },
  {
    "text": "single method it's a bunch of components that sort of are interwined with each other right and we need to sort of make",
    "start": "2282359",
    "end": "2288520"
  },
  {
    "text": "sure that we only are sort of taking things into account that are really sort of uh important for the things that we",
    "start": "2288520",
    "end": "2295760"
  },
  {
    "text": "are trying to sort of measure right so we what I usually do is I came up with a very pragmatic approach so what I do is",
    "start": "2295760",
    "end": "2303079"
  },
  {
    "text": "I essentially copy paste the source code of the things that I and I put it into a",
    "start": "2303079",
    "end": "2309160"
  },
  {
    "text": "dedicated repository so I basically freeze the code as it is copy paste it",
    "start": "2309160",
    "end": "2314359"
  },
  {
    "text": "over and then I have a playground that can start uh playing around and um so I",
    "start": "2314359",
    "end": "2319680"
  },
  {
    "text": "take all the code and then what I do is I adjust the code that I have to the Bare Essentials to create a controllable",
    "start": "2319680",
    "end": "2327119"
  },
  {
    "text": "environment that allows me to measure the things that I want to see um I know",
    "start": "2327119",
    "end": "2332240"
  },
  {
    "text": "this sounds like well but Daniel come on now you're copy pasting code but the code will evolve right and how do you",
    "start": "2332240",
    "end": "2338520"
  },
  {
    "text": "make sure that things are not regressing I'm going to quickly talk about regression testing as well um a little",
    "start": "2338520",
    "end": "2344599"
  },
  {
    "text": "bit later but this is more or less the approach that I usually use to get started with and I was very successful",
    "start": "2344599",
    "end": "2350800"
  },
  {
    "text": "with this approach so I have here a concrete example so I took everything that is related to the pipeline",
    "start": "2350800",
    "end": "2357400"
  },
  {
    "text": "execution engine which you can see is a bunch of interfaces classes and components that interact with each other",
    "start": "2357400",
    "end": "2363119"
  },
  {
    "text": "right this is non-trivial code and I put it into this repository and then I started faking away things that I'm not",
    "start": "2363119",
    "end": "2369760"
  },
  {
    "text": "interested in so what I did in this concrete example was I basically trimmed down everything to the relevant Behavior",
    "start": "2369760",
    "end": "2376240"
  },
  {
    "text": "so I ripped out all the stuff in there that is not relevant for for my for my",
    "start": "2376240",
    "end": "2381400"
  },
  {
    "text": "Benchmark then I replaced the dependency injection container that was in place I ripped it out and I sort of just Ned up",
    "start": "2381400",
    "end": "2388680"
  },
  {
    "text": "glasses because my I'm I don't want to bench mark I don't know the Microsoft dependency injection abstraction or",
    "start": "2388680",
    "end": "2395440"
  },
  {
    "text": "structure map or artifact this is not my goal I want to measure Benchmark the raw",
    "start": "2395440",
    "end": "2400800"
  },
  {
    "text": "pipeline execution speed so I have to remove this noise then I also replaced",
    "start": "2400800",
    "end": "2405960"
  },
  {
    "text": "all the iob bound operations with a task completed task because again I'm ex I'm interested in sort of the actual raw",
    "start": "2405960",
    "end": "2412839"
  },
  {
    "text": "execution speed and not the iob bound operations and you might be saying for those that are a bit more advanced with",
    "start": "2412839",
    "end": "2418880"
  },
  {
    "text": "a in8 but Daniel I know you're cheating here because you're not actually yielding the Fret back to the worker",
    "start": "2418880",
    "end": "2425079"
  },
  {
    "text": "fret pool and whatever this is clearly not a reliable Benchmark it's like well",
    "start": "2425079",
    "end": "2430440"
  },
  {
    "text": "you're kind of right but you're also not right it really depends on the scenario here I'm not interested in sort of the",
    "start": "2430440",
    "end": "2437319"
  },
  {
    "text": "concurrent execution I'm only interested in the Raw execution speed of a pipeline invocation I um and therefore it's",
    "start": "2437319",
    "end": "2444720"
  },
  {
    "text": "totally okay to sort of return task completed plus with",
    "start": "2444720",
    "end": "2450119"
  },
  {
    "text": "benchmark.us statistical analysis and sort of that yielding would essentially in the statistical result would sort of",
    "start": "2450920",
    "end": "2457319"
  },
  {
    "text": "blend in so it doesn't matter for the scenario that I'm that I'm doing here good and I told you it's potentially a",
    "start": "2457319",
    "end": "2465960"
  },
  {
    "text": "little bit controversial right because I'm copy pasting code but I want to give you an a a good approach that you can",
    "start": "2465960",
    "end": "2472640"
  },
  {
    "text": "get started with sort of as a 80 20% rule right for code that is not changing",
    "start": "2472640",
    "end": "2478200"
  },
  {
    "text": "that often this approach of copy pasting code works really really well right because you can freeze it in your",
    "start": "2478200",
    "end": "2484920"
  },
  {
    "text": "environment you can B make a bunch of um contextual decisions to actually tweak",
    "start": "2484920",
    "end": "2490599"
  },
  {
    "text": "it to your needs and then you have an execution environment that doesn't move away um and you don't influence things",
    "start": "2490599",
    "end": "2497880"
  },
  {
    "text": "with with uh with your other teammates right because what I'm what I'm what I want to sort of give you away is this",
    "start": "2497880",
    "end": "2504400"
  },
  {
    "text": "gives you a good stepbystep approach to get started building up this performance",
    "start": "2504400",
    "end": "2509680"
  },
  {
    "text": "culture because being performance aware it sounds so easy in a talk identity right but this is going to take you",
    "start": "2509680",
    "end": "2516160"
  },
  {
    "text": "months potentially years as an organization to sort of build up right so you want to make sure that you can",
    "start": "2516160",
    "end": "2522599"
  },
  {
    "text": "get started with and that H you can teach your colleagues to essentially be successful with these types of",
    "start": "2522599",
    "end": "2528200"
  },
  {
    "text": "Investigations before you go into like building an entire performance aware culture because once you go into doing",
    "start": "2528200",
    "end": "2534319"
  },
  {
    "text": "more regression testing or cicd stuff right you have to ask yourself a bunch of questions like how do I reliably run",
    "start": "2534319",
    "end": "2541599"
  },
  {
    "text": "those tests right um how do I set up the cic to actually execute this Benchmark",
    "start": "2541599",
    "end": "2546880"
  },
  {
    "text": "can even execute those on the cicd system should I have dedicated Hardware available to execute this test to",
    "start": "2546880",
    "end": "2553680"
  },
  {
    "text": "actually have reliable results and all those types of questions you don't have to ask them yourself those questions at",
    "start": "2553680",
    "end": "2559520"
  },
  {
    "text": "the beginning of your journey right that's why I want to make sure you get started with with a uh with a gradual uh",
    "start": "2559520",
    "end": "2565920"
  },
  {
    "text": "approach and then I told you I had this very sort of basic understanding at the",
    "start": "2565920",
    "end": "2572119"
  },
  {
    "text": "beginning I sort of sort of said well a benchmark is like a unit test right because I can just slap a bunch of",
    "start": "2572119",
    "end": "2578480"
  },
  {
    "text": "attributes to it and then something gets executed but this is actually a completely wrong understanding of a",
    "start": "2578480",
    "end": "2584400"
  },
  {
    "text": "benchmark because when we write a unit test what we do ideally we want to test",
    "start": "2584400",
    "end": "2589720"
  },
  {
    "text": "all the methods and all the properties and all the edge cases right because we want to make sure that under edge cases",
    "start": "2589720",
    "end": "2595559"
  },
  {
    "text": "the stuff that we have in place also works and at the end of the day what the result is of a unit test it's either",
    "start": "2595559",
    "end": "2602000"
  },
  {
    "text": "sort of passed or failed right it's green or it's red but the bench",
    "start": "2602000",
    "end": "2607119"
  },
  {
    "text": "Benchmark is completely different because when we execute the Benchmark what we are sort of getting is we are",
    "start": "2607119",
    "end": "2612920"
  },
  {
    "text": "doing many many many thousands of iterations until we have a statistically",
    "start": "2612920",
    "end": "2618559"
  },
  {
    "text": "significant stable result so the result of a benchmark is not green or red it's",
    "start": "2618559",
    "end": "2626000"
  },
  {
    "text": "actually a bunch of numbers right like mean standard deviation error and",
    "start": "2626000",
    "end": "2631200"
  },
  {
    "text": "whatnot like I'm presenting here on the screen plus all the parameters the permutations of this of sort of the this",
    "start": "2631200",
    "end": "2637960"
  },
  {
    "text": "uh Benchmark so what that means is essentially we have to execute it until",
    "start": "2637960",
    "end": "2643559"
  },
  {
    "text": "the results are stable because we want to make sure that we have outliers removed and what whatnot so we are going",
    "start": "2643559",
    "end": "2649920"
  },
  {
    "text": "to execute this hundreds and thousands of times in iterations so that means a",
    "start": "2649920",
    "end": "2655359"
  },
  {
    "text": "benchmark by nature takes minutes up to hours depending on the use case",
    "start": "2655359",
    "end": "2660440"
  },
  {
    "text": "scenarios that you're testing right so that's why we have to make the tradeoffs",
    "start": "2660440",
    "end": "2665480"
  },
  {
    "text": "and actually say well well let's just test the most common cases that are",
    "start": "2665480",
    "end": "2670960"
  },
  {
    "text": "frequently used on the hot path right with the amount of required permutations",
    "start": "2670960",
    "end": "2677079"
  },
  {
    "text": "because if we're going all in like with a unit test this is going to take ages and we will never get the results and",
    "start": "2677079",
    "end": "2683839"
  },
  {
    "text": "they're complex to maintain whatever so we need to make this sort of tradeoffs and then what is also important I talked",
    "start": "2683839",
    "end": "2690599"
  },
  {
    "text": "about permutations so input parameters that sort of Define the per the",
    "start": "2690599",
    "end": "2696119"
  },
  {
    "text": "permutations for the The Benchmark here we should derive them from production usage scenarios right because we want to",
    "start": "2696119",
    "end": "2703079"
  },
  {
    "text": "have a realistic enough Benchmark that gives us an indication what's going on with production scenarios right so",
    "start": "2703079",
    "end": "2709720"
  },
  {
    "text": "that's what a benchmark is so get rid of that sort of conceptual understanding it's like a unit test because it looks",
    "start": "2709720",
    "end": "2716200"
  },
  {
    "text": "similar with a bunch of attributes it's not right good let me give you a concrete example of how this looks like",
    "start": "2716200",
    "end": "2723280"
  },
  {
    "text": "U with benchmark.pl execution so the first scenario is obviously I want to test the",
    "start": "2723280",
    "end": "2728559"
  },
  {
    "text": "raw pipeline execution speed so what I do here is I have the global setup",
    "start": "2728559",
    "end": "2734119"
  },
  {
    "text": "attribute and in there by the way you don't have to fully understand this code this is not really the point I know it's",
    "start": "2734119",
    "end": "2739720"
  },
  {
    "text": "a lot but essentially here what I'm doing is I'm setting up the pipeline and what I'm what I'm doing is I'm I'm sort",
    "start": "2739720",
    "end": "2747319"
  },
  {
    "text": "of initializing the pipeline and I'm doing this in a global setup to make sure because I'm not interested in how",
    "start": "2747319",
    "end": "2753040"
  },
  {
    "text": "long does it take to set up the pipeline that's not the scenario I want to see how long does it take to execute the",
    "start": "2753040",
    "end": "2758760"
  },
  {
    "text": "pipeline right so the setup is in a global setup so that will not be measured by Benchmark to net and then",
    "start": "2758760",
    "end": "2764559"
  },
  {
    "text": "what I think about is okay what are po potential permutations so here what I thought about is like okay we have a",
    "start": "2764559",
    "end": "2771119"
  },
  {
    "text": "deepness of the pipeline and I looked at uh the usage scenarios of how we extend the pipeline our customer cases that we",
    "start": "2771119",
    "end": "2778559"
  },
  {
    "text": "have in Salesforce our documentation and samples how many things do usually people plug into the pipeline right and",
    "start": "2778559",
    "end": "2785720"
  },
  {
    "text": "then I came up with a deepness of 10 20 and 40 which is a more or less accurate",
    "start": "2785720",
    "end": "2791079"
  },
  {
    "text": "representation of what people have in the production scenarios right so that's how I S sort of permutate the pipeline",
    "start": "2791079",
    "end": "2797839"
  },
  {
    "text": "execution and sort of build up uh the pipeline deepness here um and then what",
    "start": "2797839",
    "end": "2804000"
  },
  {
    "text": "I do is I add this short run attri attribute on the top what that means is to Benchmark net just do a quick run",
    "start": "2804000",
    "end": "2811079"
  },
  {
    "text": "don't go into like all statistical analysis and it's going to take minutes uh multiple minutes just do a quick run",
    "start": "2811079",
    "end": "2818319"
  },
  {
    "text": "to give me sort of an indication am I heading in the right direction right because I'm still sort of in the",
    "start": "2818319",
    "end": "2823640"
  },
  {
    "text": "improved Benchmark type of inner loop here and then I add the memory diagnoser because I am also interested to see all",
    "start": "2823640",
    "end": "2830280"
  },
  {
    "text": "the memory allocations okay and then what I do is I have the Baseline uh Benchmark which is executes the",
    "start": "2830280",
    "end": "2836760"
  },
  {
    "text": "Benchmark before sorry the pipeline before my changes and then I have the other one that executes the pipeline",
    "start": "2836760",
    "end": "2842880"
  },
  {
    "text": "after my change so that I can compare uh the two the the two things good so that",
    "start": "2842880",
    "end": "2849720"
  },
  {
    "text": "is the pipeline execution and then you might be asking yourself well but Daniel",
    "start": "2849720",
    "end": "2856520"
  },
  {
    "text": "you show me this concrete example what are actually good practices I can take away from this talk for my own bench",
    "start": "2856520",
    "end": "2863079"
  },
  {
    "text": "benchmarks what should I care about when I write my own benchmarks so I have a few so a benchmark should be following",
    "start": "2863079",
    "end": "2869520"
  },
  {
    "text": "the single responsibility principles like any other methods in your codebase so basically a benchmark should",
    "start": "2869520",
    "end": "2875400"
  },
  {
    "text": "basically measure a single a single thing so here I did pipeline execution",
    "start": "2875400",
    "end": "2880559"
  },
  {
    "text": "with permutations for the pipeline execution that's a single scenario then a benchmark should have no side effects",
    "start": "2880559",
    "end": "2887599"
  },
  {
    "text": "right so because any sort of state that you accumulate over the Benchmark iterations influences all the other",
    "start": "2887599",
    "end": "2894240"
  },
  {
    "text": "iterations and that is a side effect that you don't want to have we need to sort of avoid that then the other thing",
    "start": "2894240",
    "end": "2901160"
  },
  {
    "text": "is um it should sort of prevent that code elimination because usually when when you're not using the things that",
    "start": "2901160",
    "end": "2907880"
  },
  {
    "text": "you're sort of instantiating in your benchmark what's going to happen is the chit the justing time compiler looks at",
    "start": "2907880",
    "end": "2913599"
  },
  {
    "text": "your code and says oh this local variable is not going to be used so it optimizes it away and then you're",
    "start": "2913599",
    "end": "2919079"
  },
  {
    "text": "measuring nothing right so with Benchmark net what you can do is you can return the the stuff that you allocated",
    "start": "2919079",
    "end": "2925480"
  },
  {
    "text": "back over the method or there's a consumer class that you can use to consume whatever you're allocating to",
    "start": "2925480",
    "end": "2931400"
  },
  {
    "text": "make sure the chit doesn't remove away this code and then uh I highly recommend",
    "start": "2931400",
    "end": "2936559"
  },
  {
    "text": "you to delegate all the heavy lifting of doing the benchmarks to a framework like",
    "start": "2936559",
    "end": "2943640"
  },
  {
    "text": "benchmark.com clearly visible in this code right because otherwise the complexity is uh is uh too high and then",
    "start": "2965720",
    "end": "2973000"
  },
  {
    "text": "this might sound very obvious but um uh it's very tempting from time to time when you're sort of in a meeting right",
    "start": "2973000",
    "end": "2979760"
  },
  {
    "text": "you're on a zoom or a team call and you're like ah I just wrote this amazing Benchmark woohoo I could just um",
    "start": "2979760",
    "end": "2986280"
  },
  {
    "text": "Sidetrack a little bit during the meeting and execute the Benchmark there like no don't do that because benchmarks",
    "start": "2986280",
    "end": "2993119"
  },
  {
    "text": "require CPU and memory are quite resource intensive and teams and zoom is also quite resource intensive right that",
    "start": "2993119",
    "end": "3000240"
  },
  {
    "text": "would skew the result so make sure when you execute it sort of Hit The Benchmark run it go grab a coffee and when your",
    "start": "3000240",
    "end": "3007280"
  },
  {
    "text": "boss sees you at the coffee machine it's like Daniel you're here like the the 10th time today and drinking coffee what",
    "start": "3007280",
    "end": "3012720"
  },
  {
    "text": "are you doing it's like well boss I'm optimizing the code I'm getting the 20% performance improvements that you asked",
    "start": "3012720",
    "end": "3018960"
  },
  {
    "text": "for right so do that um explicitly when you're running the benchmarks and I told you delegate the h",
    "start": "3018960",
    "end": "3026839"
  },
  {
    "text": "lifting to a framework because essentially with Benchmark net you get a library that is Battle tested the net",
    "start": "3026839",
    "end": "3034319"
  },
  {
    "text": "performance Engineers that are doing the net runtime performance improvements they're also using Benchmark net to",
    "start": "3034319",
    "end": "3041119"
  },
  {
    "text": "measure to measure the things that they're doing and this is a great library because it's sort of",
    "start": "3041119",
    "end": "3046319"
  },
  {
    "text": "benchmarking is really really hard I can I can tell you even though I I did a lot of benchmarks I make countless mistakes",
    "start": "3046319",
    "end": "3053920"
  },
  {
    "text": "right and if you have a framework that sort of makes sure sure that the most common mistakes that you will make",
    "start": "3053920",
    "end": "3059480"
  },
  {
    "text": "you're not going to make that's pretty pretty amazing uh because it will sort of protect you from the common pitfalls",
    "start": "3059480",
    "end": "3065760"
  },
  {
    "text": "like for example it will run your benchmarks in a dedicated process so there is no static state right by",
    "start": "3065760",
    "end": "3072200"
  },
  {
    "text": "default it will also run several iterations until the result is stable it",
    "start": "3072200",
    "end": "3077480"
  },
  {
    "text": "will also in the statistic analysis it will also cut away outliers so that you have a result that you can trust that",
    "start": "3077480",
    "end": "3085160"
  },
  {
    "text": "probably what you're measuring is actually uh what you will be seeing also in your production code right I want to",
    "start": "3085160",
    "end": "3092160"
  },
  {
    "text": "give you um a sort of uh quick example uh and I'm going to fly in the interest",
    "start": "3092160",
    "end": "3097400"
  },
  {
    "text": "of time because the micing up took a little bit of a few minutes and I want to make sure that we more or less end up in time um hopefully uh I want to",
    "start": "3097400",
    "end": "3105160"
  },
  {
    "text": "quickly show you uh an example in the interest of the trade-off I told you a benchmark should not be testing",
    "start": "3105160",
    "end": "3112520"
  },
  {
    "text": "exception cases with an response and the response pipeline I actually even though",
    "start": "3112520",
    "end": "3117599"
  },
  {
    "text": "I have this guideline I made a tradeoff because with answer response when a message fails in production with a with",
    "start": "3117599",
    "end": "3124480"
  },
  {
    "text": "an exception May potentially multiple thousands of messages are are sent back",
    "start": "3124480",
    "end": "3129680"
  },
  {
    "text": "into the a que and that takes time and it has to be as efficiently as possible",
    "start": "3129680",
    "end": "3135520"
  },
  {
    "text": "so what I'm telling you here is even though we have guidelines I've given you guidelines you have your context for",
    "start": "3135520",
    "end": "3141480"
  },
  {
    "text": "your coopas to sometimes deviate from these guidin and make your own decisions and I did that as well well so I added a",
    "start": "3141480",
    "end": "3147559"
  },
  {
    "text": "benchmark for the pipeline exception cases so what I did here is I did",
    "start": "3147559",
    "end": "3152720"
  },
  {
    "text": "another sort of uh Benchmark single responsibility principle I configured the pipeline deepness and they added to",
    "start": "3152720",
    "end": "3160000"
  },
  {
    "text": "the bottom of the pipeline I added a a a behavior that froze an exception right",
    "start": "3160000",
    "end": "3166319"
  },
  {
    "text": "and then what I did is that's here I add a behavior that froze an exception and",
    "start": "3166319",
    "end": "3171480"
  },
  {
    "text": "then I wrapped the bench sort of the execution of the pipeline within a a try",
    "start": "3171480",
    "end": "3177480"
  },
  {
    "text": "a try catch and that's a benchmark that sort of verifies that also the exception cases are going well good I'm going to",
    "start": "3177480",
    "end": "3184799"
  },
  {
    "text": "skip over this in the interest of time um then once we have done that once we",
    "start": "3184799",
    "end": "3190319"
  },
  {
    "text": "have done the benchmarking the improvements we want to bring it back into the harness that we wrote at the beginning because we want to make we",
    "start": "3190319",
    "end": "3197480"
  },
  {
    "text": "want to see how the code actually look likes in the grand scheme of things and that's what I what I've done so I did",
    "start": "3197480",
    "end": "3204000"
  },
  {
    "text": "the improvements brought it back into the harness and here um I did another another snap another snapshot because",
    "start": "3204000",
    "end": "3211000"
  },
  {
    "text": "one of the good things that all these tools provide whenever you're taking a memory or a CPU snapshot you store it on",
    "start": "3211000",
    "end": "3216920"
  },
  {
    "text": "disk right so you can actually take the snapshot that you took in your first investigations and then you do another",
    "start": "3216920",
    "end": "3223400"
  },
  {
    "text": "run with your improvements take another snapshot then you compare those you can execute those side by side and what we",
    "start": "3223400",
    "end": "3229599"
  },
  {
    "text": "see here is while previously we had uh 20 megabytes of behavior chain allocations these are now gone on on the",
    "start": "3229599",
    "end": "3236640"
  },
  {
    "text": "other end so we actually clearly optimized the code and now other allocations are are now",
    "start": "3236640",
    "end": "3243280"
  },
  {
    "text": "visible then when we look at the receive side of things what we can see here is that before we had sort of 653 megabytes",
    "start": "3243280",
    "end": "3251480"
  },
  {
    "text": "of allocations now we went down to 596 uh allocations and the previous Funk",
    "start": "3251480",
    "end": "3258240"
  },
  {
    "text": "of behavior context of task allocations they're all gone and we see the effect of our performance uh uh performance",
    "start": "3258240",
    "end": "3265280"
  },
  {
    "text": "improvements then when we look at sort of the Stacked trays we saw it also on",
    "start": "3265280",
    "end": "3270480"
  },
  {
    "text": "the flame graph previously there was like lots and lots of infrastructure noise that we saw and now we got rid of",
    "start": "3270480",
    "end": "3277079"
  },
  {
    "text": "the infrastructure Parts V via our optimizations and we can see how the stack trays also shrunk down and how the",
    "start": "3277079",
    "end": "3285280"
  },
  {
    "text": "memory allocations due to those optimizations are now clearly also better in the sort of the memory",
    "start": "3285280",
    "end": "3291839"
  },
  {
    "text": "characteristics overview and then we can again we can filter in into sort of the",
    "start": "3291839",
    "end": "3297520"
  },
  {
    "text": "name space that we optimized and I did that I filtered into the endace boss pipeline name space and what we can see",
    "start": "3297520",
    "end": "3303839"
  },
  {
    "text": "here is that all the display class allocations they are also now gone and",
    "start": "3303839",
    "end": "3308880"
  },
  {
    "text": "we can sort of tap ourselves on the shoulder because we actually made good improvements and we can also do that by",
    "start": "3308880",
    "end": "3315319"
  },
  {
    "text": "looking at the flame graphs because when you look at the flame graphs previously we had this lots and lots of red stuff",
    "start": "3315319",
    "end": "3322440"
  },
  {
    "text": "uh a little bit of Orange right sort of the production code the actual business code code was not clearly visible and",
    "start": "3322440",
    "end": "3328160"
  },
  {
    "text": "when we zoom in after the optimizations we can now see that sort of um the orange part starts lightning up in sort",
    "start": "3328160",
    "end": "3335599"
  },
  {
    "text": "of the flame graphs as well and the red St stuff goes uh to the back and when we put them side by side it's even more",
    "start": "3335599",
    "end": "3343119"
  },
  {
    "text": "clearly visible just by looking at the sort of the flame graph that we actually optimized the code and so I can I can",
    "start": "3343119",
    "end": "3351520"
  },
  {
    "text": "say that I basically removed 32.3% of the publisher op CPU stuff and",
    "start": "3351520",
    "end": "3358200"
  },
  {
    "text": "over 14% of the receive operations they're all gone now by looking at uh",
    "start": "3358200",
    "end": "3363880"
  },
  {
    "text": "this this sort of uh flame graph uh profile right so again I'm using the same tools that I used at the beginning",
    "start": "3363880",
    "end": "3370880"
  },
  {
    "text": "to get an overview to actually verify once I've done those changes back in the grand scheme of thinking that we're",
    "start": "3370880",
    "end": "3376920"
  },
  {
    "text": "actually improving stuff but I told you that well what we I copy pasted the code",
    "start": "3376920",
    "end": "3383559"
  },
  {
    "text": "and you might be already seeing if you're a little bit more advanced yeah but there is trade-offs when you do that and that's totally true I talked about",
    "start": "3383559",
    "end": "3389920"
  },
  {
    "text": "those trade-off so sometimes when you want to make a step further in your sort of performance awareness in your team",
    "start": "3389920",
    "end": "3396520"
  },
  {
    "text": "you might want to take take care of what if someone changes the code that I optimized and introduces regressions how",
    "start": "3396520",
    "end": "3403319"
  },
  {
    "text": "do we prevent regressions from happening right because the best the sort of the the best ways to never have a regression",
    "start": "3403319",
    "end": "3409799"
  },
  {
    "text": "at all to already on cicd basically prevent these regressions from being there so there is a thing in the net",
    "start": "3409799",
    "end": "3417640"
  },
  {
    "text": "performance repository there is a uh is a good guidance I've linked it here on the slide you will have this resource",
    "start": "3417640",
    "end": "3423599"
  },
  {
    "text": "called preventing regressions and there is the result compare tool and what it allows you to do is you can execute A",
    "start": "3423599",
    "end": "3430640"
  },
  {
    "text": "Benchmark with",
    "start": "3430640",
    "end": "3433400"
  },
  {
    "text": "benchmark.com Ms or you basically execute the Benchmark on a gsha here and",
    "start": "3440039",
    "end": "3445640"
  },
  {
    "text": "then here is your improvements you execute the same Benchmark again against the code changes and you store the",
    "start": "3445640",
    "end": "3451839"
  },
  {
    "text": "results in the after folder right then you have both sort of artifacts of those runs and then you execute the result",
    "start": "3451839",
    "end": "3458960"
  },
  {
    "text": "compare tool and you say hey um I'm defining a threshold of a maximum of 2%",
    "start": "3458960",
    "end": "3465200"
  },
  {
    "text": "if the threshold of CPR member you can further Define that is more than 2% this",
    "start": "3465200",
    "end": "3470599"
  },
  {
    "text": "res this tool will will basically give you an exit code that sort of allows you to F to fail the the the your cicd",
    "start": "3470599",
    "end": "3479200"
  },
  {
    "text": "pipeline right so that's a good way to actually make sure the important benchmarks that you want to keep around",
    "start": "3479200",
    "end": "3485039"
  },
  {
    "text": "right there might be some benchmarks that you're just going to throw away because they they were just sort of a tool to achieve something but some of",
    "start": "3485039",
    "end": "3491559"
  },
  {
    "text": "the Benchmark that you want to keep around because it's a crucial infrastructure piece that you always want to test on cicd that it doesn't",
    "start": "3491559",
    "end": "3497680"
  },
  {
    "text": "regress you can keep them in your Source control and then you can use this result compare tool and Benchmark Net's storing",
    "start": "3497680",
    "end": "3504960"
  },
  {
    "text": "of artifacts but if you do that you have to really take care of that your cicd environment",
    "start": "3504960",
    "end": "3513240"
  },
  {
    "text": "is reliable and Andre akinin sort of wrote a good blog post about this he",
    "start": "3513240",
    "end": "3518400"
  },
  {
    "text": "tested GitHub action Runners against uh CPU and memory and disk uh performance",
    "start": "3518400",
    "end": "3524559"
  },
  {
    "text": "and because it's a shared environment there were consequences of that shared environment and this is the result CPU",
    "start": "3524559",
    "end": "3530839"
  },
  {
    "text": "bound benchmarks are much more stable than memory dis bound benchmarks but the average performance level still can be",
    "start": "3530839",
    "end": "3537079"
  },
  {
    "text": "up to three times different the cross builds so as you can see is once you go on this path on this journey of sort of",
    "start": "3537079",
    "end": "3544319"
  },
  {
    "text": "um um putting stuff into your cic system you have to think about well maybe we",
    "start": "3544319",
    "end": "3550119"
  },
  {
    "text": "cannot use our uh shared as devops Runner or our shared GitHub action Runners maybe we have to have dedicated",
    "start": "3550119",
    "end": "3557160"
  },
  {
    "text": "resources in our Cloud environments maybe even custom prepar the OS images",
    "start": "3557160",
    "end": "3562280"
  },
  {
    "text": "so that it's tweaked so that our benchmarks that we execute on cicd are",
    "start": "3562280",
    "end": "3567319"
  },
  {
    "text": "actually stable and we can trust the results right you can read this blog post in more detail in the resources so",
    "start": "3567319",
    "end": "3573760"
  },
  {
    "text": "I'm going to wrap up um here this talk so I showed you the performance Loop",
    "start": "3573760",
    "end": "3579880"
  },
  {
    "text": "today with examples with Anice bu which is a framework on library but I'm 100%",
    "start": "3579880",
    "end": "3585240"
  },
  {
    "text": "certain I've done it in several business codes as well the performance Loop gives you a very structured approach to sort",
    "start": "3585240",
    "end": "3591720"
  },
  {
    "text": "of go through this profile improve Benchmark and profile and ship the code hold cycles and the inner loop to make",
    "start": "3591720",
    "end": "3598359"
  },
  {
    "text": "sure the performance improvements that they doing actually make a measurable impact and you can combine this sort of",
    "start": "3598359",
    "end": "3606319"
  },
  {
    "text": "um approach with profiling on sort of the macro level right to sort of see",
    "start": "3606319",
    "end": "3611440"
  },
  {
    "text": "whether sort of the changes that you're making are actually uh are adding up over time to make your code faster and I",
    "start": "3611440",
    "end": "3619039"
  },
  {
    "text": "also want to give you away this I always hear this from teams like ah this is code this code is crap let's refactor",
    "start": "3619039",
    "end": "3625200"
  },
  {
    "text": "this entire code because it's not even worth investing time into it I'm going to tell you I've seen this so many times",
    "start": "3625200",
    "end": "3631640"
  },
  {
    "text": "when you invest time into improving existing codes you will significantly",
    "start": "3631640",
    "end": "3637480"
  },
  {
    "text": "increase the understanding that you have of this code base your team's understanding and that cycling through",
    "start": "3637480",
    "end": "3644640"
  },
  {
    "text": "these optimizations will give you in your decision lck architecture trade-off lck whatever you using more knowledge to",
    "start": "3644640",
    "end": "3651960"
  },
  {
    "text": "actually then once you actually decide that you need to sort of really rip out this code all the necessary knowledge to",
    "start": "3651960",
    "end": "3659000"
  },
  {
    "text": "write new code that is going to be performant because if you're just looking at code and saying ah this is way too complicated let's replace the",
    "start": "3659000",
    "end": "3666359"
  },
  {
    "text": "entire thing I can guarantee you you will make the same mistakes again and it will not be fast right so use the",
    "start": "3666359",
    "end": "3672200"
  },
  {
    "text": "knowledge from these iterative improvements to sort of improve the code base all the stuff that I talked today",
    "start": "3672200",
    "end": "3678599"
  },
  {
    "text": "about is on github.com MAR Beyond Simple benchmarks if you have",
    "start": "3678599",
    "end": "3683799"
  },
  {
    "text": "more questions I have business cards down there you can send me also an email I'm going to be at the particular",
    "start": "3683799",
    "end": "3690000"
  },
  {
    "text": "software Booth the entire day I will also be at 1:40 at the chat brain spoof should you have any questions and all",
    "start": "3690000",
    "end": "3696839"
  },
  {
    "text": "the people that reach out to me over any sort of social media email or whatever",
    "start": "3696839",
    "end": "3702039"
  },
  {
    "text": "uh up to the end of tomorrow I will raffle an entire uh dot ultimate chat brains license for one year if you give",
    "start": "3702039",
    "end": "3709359"
  },
  {
    "text": "me structured feedback about the things that you learned from this talk what you liked what you didn't like that much so",
    "start": "3709359",
    "end": "3715520"
  },
  {
    "text": "that I can improve this talk to make it even better thank you very much for listening and have a good time",
    "start": "3715520",
    "end": "3723200"
  }
]