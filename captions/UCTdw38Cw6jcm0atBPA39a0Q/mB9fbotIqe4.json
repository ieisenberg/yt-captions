[
  {
    "text": "awesome how the mic works good morning it's so wonderful to see",
    "start": "8160",
    "end": "13360"
  },
  {
    "text": "literally everybody in person it's a close call and um yeah so in this session",
    "start": "13360",
    "end": "19279"
  },
  {
    "text": "we're going to talk about building game boy emulators and well secretly the history of computing",
    "start": "19279",
    "end": "25279"
  },
  {
    "text": "and also secretly about failure and a whole bunch of other stuff it's going to be a bit of a wild ride so let me tell",
    "start": "25279",
    "end": "30800"
  },
  {
    "text": "you about myself a little bit so i'm david and i'm an independent software consultant based in london in the uk",
    "start": "30800",
    "end": "36640"
  },
  {
    "text": "now i work for myself which is wonderful i would recommend it to everybody being your own boss is the best",
    "start": "36640",
    "end": "43120"
  },
  {
    "text": "so i mostly mentor developers and i do kind of strategic work for uk.com so i've had a a wide range of really really",
    "start": "43120",
    "end": "49920"
  },
  {
    "text": "pretentious and pointless job titles head of engineering chief technical architect principal engineer blah blah",
    "start": "49920",
    "end": "56719"
  },
  {
    "text": "blah which all sounds a lot fancier than it really really is i swear um really i just love making things that's",
    "start": "56719",
    "end": "62960"
  },
  {
    "text": "the thing i really enjoy doing and i love the people that make things and i try and spend my time helping them",
    "start": "62960",
    "end": "68240"
  },
  {
    "text": "do that i've written a couple of kids books on programming in javascript sorry",
    "start": "68240",
    "end": "74080"
  },
  {
    "text": "um getcoding2 and one available in all your regional languages um and recently",
    "start": "74080",
    "end": "79680"
  },
  {
    "text": "i made a gameboy emulator so",
    "start": "79680",
    "end": "84799"
  },
  {
    "text": "before we dive into any of that i want to talk about what emulation really is",
    "start": "84799",
    "end": "91118"
  },
  {
    "text": "emulation and it's very very technical is the practice of specifically of writing software on one system so it can",
    "start": "91520",
    "end": "98880"
  },
  {
    "text": "simulate the runtime environment of another with the goal of running software for a",
    "start": "98880",
    "end": "104320"
  },
  {
    "text": "different piece of hardware or environment you've probably come across this before right and there are a couple",
    "start": "104320",
    "end": "109680"
  },
  {
    "text": "of different broad approaches to emulation now there's low level emulation",
    "start": "109680",
    "end": "114880"
  },
  {
    "text": "and what that is is where you implement the behavior of the raw hardware and then the software designed for it should",
    "start": "114880",
    "end": "120320"
  },
  {
    "text": "just kind of work and then we have high level emulation where you attempt to run software",
    "start": "120320",
    "end": "125439"
  },
  {
    "text": "natively on your target platform and you intercept the system calls of the original piece of software and re-implement them",
    "start": "125439",
    "end": "132640"
  },
  {
    "text": "in something more native now most game emulators actually are a mix and match of those two things",
    "start": "132640",
    "end": "139599"
  },
  {
    "text": "often what they do is they emulate low-level hardware architecture while re-implementing high-level things stuff",
    "start": "139599",
    "end": "145120"
  },
  {
    "text": "like 3d drawing calls are a great example of where they can shortcut and be really performant and they do that in modern apis so there",
    "start": "145120",
    "end": "151840"
  },
  {
    "text": "are loads of really famous emulators from kind of games console emulators to operating system emulators so hardware",
    "start": "151840",
    "end": "159120"
  },
  {
    "text": "emulators so if you've ever run any kind of vm you're running an emulator right",
    "start": "159120",
    "end": "164239"
  },
  {
    "text": "so when i say i built a game boy emulator what i'm really saying specifically is i built a program that",
    "start": "164239",
    "end": "170400"
  },
  {
    "text": "can run game boy software while the game boy software itself believes it's running on game boy hardware",
    "start": "170400",
    "end": "176480"
  },
  {
    "text": "which is a bit of a mouthful but it's important but precise about these things",
    "start": "176480",
    "end": "181760"
  },
  {
    "text": "so why would you ever do that um it's all a bit pointless really honestly",
    "start": "182319",
    "end": "188239"
  },
  {
    "text": "um but that's the fun of experimentation that is the point um there's lots of different answers to",
    "start": "188239",
    "end": "195360"
  },
  {
    "text": "this question but firstly i really just wanted to see if i could do it simple as that and so often",
    "start": "195360",
    "end": "202720"
  },
  {
    "text": "we are forced to live in this kind of brutalistic corporate hellscape where",
    "start": "202720",
    "end": "207840"
  },
  {
    "text": "only things that have to exist for money ever get rendered into reality right",
    "start": "207840",
    "end": "213519"
  },
  {
    "text": "so this is literally the opposite of that thing game boy emulators totally totally exist",
    "start": "213519",
    "end": "219760"
  },
  {
    "text": "like if you want to play game boy games on your computer i'm going to open up now but please don't use my emulator don't do it please",
    "start": "219760",
    "end": "226720"
  },
  {
    "text": "don't do it it's incomplete it's possibly buggy and i'm not going to help you wake the wind fish and link's",
    "start": "226720",
    "end": "231840"
  },
  {
    "text": "awakening this story is actually a little bit different and actually starts in the 70s",
    "start": "231840",
    "end": "238959"
  },
  {
    "text": "before i was born thank you um and it starts with pong and it starts with an interpreted language called chip 8.",
    "start": "238959",
    "end": "246640"
  },
  {
    "text": "so we're going to use it to understand what emulation really is before we talk about game boys and super",
    "start": "246640",
    "end": "252840"
  },
  {
    "text": "mario sounds delicious right um so i'd started toying around with",
    "start": "252840",
    "end": "258639"
  },
  {
    "text": "emulators as part of what i suppose now is this decade-long experiment and running coding dojos",
    "start": "258639",
    "end": "265199"
  },
  {
    "text": "so i do a lot of training for teams and especially web dev teams looking to upskill or pick up things",
    "start": "265199",
    "end": "271040"
  },
  {
    "text": "like tdd now while i was looking for different puzzles to set people in dojos i'd",
    "start": "271040",
    "end": "277120"
  },
  {
    "text": "plundered the archives of the old website ruby quiz and it's still online and it's still actually excellent if you're looking for kind of catches to do",
    "start": "277120",
    "end": "283440"
  },
  {
    "text": "to to to get better at random stuff so they used to run weekly programming puzzles",
    "start": "283440",
    "end": "288880"
  },
  {
    "text": "and i ended up running the chip 8 cata from there quite a few times it's ruby quiz 88 if anyone's curious",
    "start": "288880",
    "end": "295759"
  },
  {
    "text": "so the the chip a cata provides a binary program written in chip 8 which is a",
    "start": "295759",
    "end": "300960"
  },
  {
    "text": "machine language and it tasks you with writing an interpreter for it along with outlining",
    "start": "300960",
    "end": "306479"
  },
  {
    "text": "the hardware that the program runs on now chip 8 has 32 op codes in total",
    "start": "306479",
    "end": "313199"
  },
  {
    "text": "but the program supplied by the quiz only uses like a small subset of them to make it a little bit more approachable",
    "start": "313199",
    "end": "318800"
  },
  {
    "text": "if you've never thought doing emulation before i remember thinking it sounded absolutely terrifying the first time i",
    "start": "318800",
    "end": "324960"
  },
  {
    "text": "read it it's that you want me to to write a decompiler",
    "start": "324960",
    "end": "330320"
  },
  {
    "text": "what yeah so that was i think everybody's response when they see it so okay",
    "start": "330320",
    "end": "335600"
  },
  {
    "text": "firstly like opcodes machine languages what so",
    "start": "335600",
    "end": "340960"
  },
  {
    "text": "let's look at a quick example of how computers and specifically our computer processors our cpus work",
    "start": "340960",
    "end": "348000"
  },
  {
    "text": "before we go any further so when processors are manufactured and you'll have heard all these words before being",
    "start": "348000",
    "end": "353199"
  },
  {
    "text": "technical people but again understanding what they really mean is very specific especially if you don't have a computer science background",
    "start": "353199",
    "end": "360160"
  },
  {
    "text": "they're manufactured and they they implement a specific instruction set now this this instruction set is",
    "start": "360160",
    "end": "366400"
  },
  {
    "text": "literally just the list of things that a processor can do now anyone old enough to you know might",
    "start": "366400",
    "end": "371680"
  },
  {
    "text": "remember the 1990s competition between sisk and risk architectures which stood for complex instruction set",
    "start": "371680",
    "end": "378560"
  },
  {
    "text": "and reduced instruction set computing respectively now these cpu instructions were what",
    "start": "378560",
    "end": "384160"
  },
  {
    "text": "they were using when they said complex or reduced that's what they were referring to now the instructions themselves are",
    "start": "384160",
    "end": "390560"
  },
  {
    "text": "built into physical hardware and they can be programmed using machine code now every processor",
    "start": "390560",
    "end": "397919"
  },
  {
    "text": "family of processors really has its own instruction set and as a result it has its own machine code so",
    "start": "397919",
    "end": "404400"
  },
  {
    "text": "when people say things like they're programming in assembly they're normally referring to a specific kind of assembly for a specific",
    "start": "404400",
    "end": "410880"
  },
  {
    "text": "piece of architecture so machine code itself is a strictly numerical representation",
    "start": "410880",
    "end": "417199"
  },
  {
    "text": "of all the operations that a processor can perform now an opcode shortened from operation",
    "start": "417199",
    "end": "424000"
  },
  {
    "text": "code is the part of the machine code that specifies what a cpu should do",
    "start": "424000",
    "end": "429759"
  },
  {
    "text": "mouthful again so the the assembly language for a given processor can then be assembled",
    "start": "429759",
    "end": "434880"
  },
  {
    "text": "hence the name into machine code and is a low level abstraction over the instruction set of your processor",
    "start": "434880",
    "end": "441840"
  },
  {
    "text": "now when we talk about assembly languages what we really mean again is programs written for a specific cpus",
    "start": "441840",
    "end": "447599"
  },
  {
    "text": "instruction set so then the processor and hardware implements those operations",
    "start": "447599",
    "end": "453039"
  },
  {
    "text": "it implements things like adding two numbers or placing a number in memory at a specific location",
    "start": "453039",
    "end": "459280"
  },
  {
    "text": "now the op code when a cpu is running a program tells the cpu which instruction",
    "start": "459280",
    "end": "464319"
  },
  {
    "text": "to execute when it encounters it so i appreciate this all sounds really really abstract so let's look at this example",
    "start": "464319",
    "end": "470400"
  },
  {
    "text": "and we'll kind of try and understand it so on the left you can see the raw machine code of a chip 8 program that",
    "start": "470400",
    "end": "476319"
  },
  {
    "text": "we're going to come back to a few times and that same machine code then decompiled into its corresponding",
    "start": "476319",
    "end": "481360"
  },
  {
    "text": "instructions on the right now besides the op code itself",
    "start": "481360",
    "end": "488400"
  },
  {
    "text": "most instructions also specify the data they're going to process in the form of what they call operands",
    "start": "488400",
    "end": "493919"
  },
  {
    "text": "now honestly you can just think of them as the parameters that are passed to the opcode it's really really simple",
    "start": "493919",
    "end": "500160"
  },
  {
    "text": "and normally these parameters are just a memory address or a register address the register is just some memory that's on",
    "start": "500160",
    "end": "506560"
  },
  {
    "text": "the cpu itself now a memory address is just a number",
    "start": "506560",
    "end": "511840"
  },
  {
    "text": "normally expressed in hexadecimal when you see it written down and they're just a number starting at zero and counting up to however much",
    "start": "511840",
    "end": "518959"
  },
  {
    "text": "memory you have now when people talk about how many bits a cpu is what they're really referring",
    "start": "518959",
    "end": "525519"
  },
  {
    "text": "to is the largest number that the computer can hold in memory when expressed in hexadecimal so literally the more more bits",
    "start": "525519",
    "end": "533120"
  },
  {
    "text": "the larger the total amount of memory a cpu can address so we're starting to build this picture of how hardware works",
    "start": "533120",
    "end": "539040"
  },
  {
    "text": "on the lowest possible level now a cpu that only understands eight bit numbers",
    "start": "539040",
    "end": "544480"
  },
  {
    "text": "like say the game boy can only understand the numbers 0 to 255 as memory addresses",
    "start": "544480",
    "end": "551120"
  },
  {
    "text": "therefore it can address 256 memory locations subsequently a 16-bit processor can",
    "start": "551120",
    "end": "557920"
  },
  {
    "text": "understand the numbers zero to 6500 535",
    "start": "557920",
    "end": "563040"
  },
  {
    "text": "therefore it can address 65 536 um address locations",
    "start": "563040",
    "end": "568160"
  },
  {
    "text": "now literally the bigger the number the more memory you got now each memory location can then store",
    "start": "568160",
    "end": "573600"
  },
  {
    "text": "any amount of data depending on the the implementation in the case of chip8",
    "start": "573600",
    "end": "578720"
  },
  {
    "text": "each memory address stores eight bytes of data and the chip 8 hardware has 4 096 memory locations itself",
    "start": "578720",
    "end": "586560"
  },
  {
    "text": "so this is the foundation of all computing i can like give you a computer science third level third year degree",
    "start": "586560",
    "end": "592399"
  },
  {
    "text": "now i think this is basically it this is what you went to university before when when you use a higher level",
    "start": "592399",
    "end": "598000"
  },
  {
    "text": "programming language like c sharp or javascript the runtimes execute those programs have been compiled down for",
    "start": "598000",
    "end": "604079"
  },
  {
    "text": "your specific cpu architecture this means that ultimately somewhere something has been translated down to",
    "start": "604079",
    "end": "610640"
  },
  {
    "text": "machine code and is executing on your cpu and whenever you create variables in your programs somewhere something is",
    "start": "610640",
    "end": "617920"
  },
  {
    "text": "putting things in memory registers for you now it's all buried under loads and loads of abstraction",
    "start": "617920",
    "end": "623360"
  },
  {
    "text": "and most memory manipulation is done by interacting with the operating system and and the operating system decides",
    "start": "623360",
    "end": "629839"
  },
  {
    "text": "what lives where in memory and this process kind of happens transparently for every single line of code you ever",
    "start": "629839",
    "end": "635040"
  },
  {
    "text": "write so",
    "start": "635040",
    "end": "640720"
  },
  {
    "text": "after our crash course in like how computers work let's take a look at a chip 8 program",
    "start": "640720",
    "end": "645839"
  },
  {
    "text": "again how some of its op codes actually function now the program in the the top left portion",
    "start": "645839",
    "end": "652800"
  },
  {
    "text": "of this slide is the original ruby quiz chip 8 test program it's just a raw binary file",
    "start": "652800",
    "end": "658720"
  },
  {
    "text": "in the machine language of the chip 8 computer now when you open it in a hex editor that's literally a screenshot",
    "start": "658720",
    "end": "664079"
  },
  {
    "text": "what it looks like i think that was vs code so to interpret this program what you do is you loop through each of the",
    "start": "664079",
    "end": "669839"
  },
  {
    "text": "bytes and if you take a look at the snippet of c i've thrown in the slide as well there",
    "start": "669839",
    "end": "675519"
  },
  {
    "text": "we're we're just loading this file as a byte array and like printing it out on the screen so in c-sharp the bytes are",
    "start": "675519",
    "end": "681120"
  },
  {
    "text": "all represented in base 10 so as integers and um when you look really carefully you",
    "start": "681120",
    "end": "686640"
  },
  {
    "text": "notice how the first number gets printed as the number 97 which is 0x 61 in",
    "start": "686640",
    "end": "691760"
  },
  {
    "text": "hexadecimal now if you look at the first two digits of the original program at the top this",
    "start": "691760",
    "end": "697360"
  },
  {
    "text": "is the same 61 from the very start of our test program so you can see how we can chunk through these bytes",
    "start": "697360",
    "end": "703120"
  },
  {
    "text": "so our documentation shows that our chip 8 interpreter operates on two byte",
    "start": "703120",
    "end": "708240"
  },
  {
    "text": "operands so to run this program you need to loop through each pair of bytes in the binary blob in this case reading the",
    "start": "708240",
    "end": "715279"
  },
  {
    "text": "61 and the 77 together and then you process them according to whatever the",
    "start": "715279",
    "end": "720320"
  },
  {
    "text": "hardware behavior is meant to be for that op code so if we zoom really really in on that",
    "start": "720320",
    "end": "726560"
  },
  {
    "text": "first two bytes in our file we've got two hex numbers 6177 the make up the op code and then it's operand now",
    "start": "726560",
    "end": "733760"
  },
  {
    "text": "this is expressed in the documentation as six x k k now this this is explained in the quiz",
    "start": "733760",
    "end": "741279"
  },
  {
    "text": "as an op code that sets memory location x to the constant value k k",
    "start": "741279",
    "end": "747360"
  },
  {
    "text": "so 6 1 7 7. now if k k is an 8 bit constant",
    "start": "747360",
    "end": "752560"
  },
  {
    "text": "literally the hexadecimal value 77 or 119 to humans our first op code says six",
    "start": "752560",
    "end": "760480"
  },
  {
    "text": "do something a constant one the memory address one and seventy seven the decimal number 119",
    "start": "760480",
    "end": "768000"
  },
  {
    "text": "which translates to put 77 into memory location 1.",
    "start": "768000",
    "end": "773440"
  },
  {
    "text": "so if you imagine memory locations like a big array or like an excel spreadsheet or something",
    "start": "773440",
    "end": "778480"
  },
  {
    "text": "you can interpret the entire chip 8 program by implementing each one of those opcodes and writing code to perform the",
    "start": "778480",
    "end": "784880"
  },
  {
    "text": "logic with different op codes like six in this case doing different things you know it's it's a switch statement",
    "start": "784880",
    "end": "793279"
  },
  {
    "text": "now it's a really scary looking problem like really really really terrifying but",
    "start": "794000",
    "end": "800399"
  },
  {
    "text": "it's not really very complicated when you break it down into it's really really small pieces just a switch statement",
    "start": "800399",
    "end": "805839"
  },
  {
    "text": "so the cool thing about this is because it's so far out from what people normally find themselves working on",
    "start": "805839",
    "end": "811920"
  },
  {
    "text": "you know people attending these dojos always found it exciting when they made progress because when you know you take",
    "start": "811920",
    "end": "817279"
  },
  {
    "text": "someone whose job is getting a number from a database and putting on a web page that's me that's basically all the",
    "start": "817279",
    "end": "822880"
  },
  {
    "text": "work i ever do and then show them that the same skills that they have that lets them do that in",
    "start": "822880",
    "end": "828000"
  },
  {
    "text": "a nice way is the same thing they can do really really cool things with they get really excited right it's fun",
    "start": "828000",
    "end": "833600"
  },
  {
    "text": "so i ended up running this dojo a lot with plenty of different audiences and i think there's nothing more fun",
    "start": "833600",
    "end": "839360"
  },
  {
    "text": "than than doing this right showing them how showing people how capable they are with a bit of lateral thinking",
    "start": "839360",
    "end": "845760"
  },
  {
    "text": "and the programming doesn't have to be like a blunt commercial only thing that we just do to get paid",
    "start": "845760",
    "end": "852639"
  },
  {
    "text": "it can be fun enjoyable intellectually challenging the end",
    "start": "852639",
    "end": "858079"
  },
  {
    "text": "uh notes so now you know how to write an emulator end of demo right",
    "start": "858079",
    "end": "864079"
  },
  {
    "text": "now let's talk about game boys so chip hate is a useful introduction to",
    "start": "864079",
    "end": "869279"
  },
  {
    "text": "this kind of low level programming because there are only 32 op codes in total",
    "start": "869279",
    "end": "874320"
  },
  {
    "text": "and you know the ruby quiz cutter i think uses 10 of them so give it a crack like honestly it's great",
    "start": "874320",
    "end": "881440"
  },
  {
    "text": "i think it's important to remember literally anyone can do things like this",
    "start": "882079",
    "end": "887360"
  },
  {
    "text": "and i'm not a particularly incredible programmer i shouldn't say that on stage with cameras running um",
    "start": "887360",
    "end": "892800"
  },
  {
    "text": "but i can read and reason and i really wanted to know i've given a background in building these smaller",
    "start": "892800",
    "end": "898000"
  },
  {
    "text": "scale emulators that i could do something bigger and game boys",
    "start": "898000",
    "end": "903040"
  },
  {
    "text": "what's a game boy asked literally nobody ever everyone knows what the gameboy is",
    "start": "903040",
    "end": "909199"
  },
  {
    "text": "a game boy more specifically is an 8-bit handheld game console developed and manufactured by nintendo",
    "start": "909199",
    "end": "915600"
  },
  {
    "text": "the first handheld in the game boy family it was first released in japan on april 21st 1989 in north america three",
    "start": "915600",
    "end": "922720"
  },
  {
    "text": "months later and lastly in europe a year later it was designed by the same team that developed the game and watch that's",
    "start": "922720",
    "end": "928720"
  },
  {
    "text": "why it's a game boy and several nintendo entertainment system games thank you wikipedia um i mean we all know what a",
    "start": "928720",
    "end": "934800"
  },
  {
    "text": "game boy is they're like literally iconic you can set them on fire and they still work i have literally seen this",
    "start": "934800",
    "end": "940399"
  },
  {
    "text": "happen um they saw off about 50 billion competitor consoles by being simple accessible resilient and fun",
    "start": "940399",
    "end": "947920"
  },
  {
    "text": "and you know what this is this is my childhood like legitimately it's deeply personal to me is it my childhood in a little plastic mold it's where my",
    "start": "947920",
    "end": "954560"
  },
  {
    "text": "lifelong obsession with video games came from you know i literally typoed game from in my notes",
    "start": "954560",
    "end": "960079"
  },
  {
    "text": "when i was when i was writing this um game boys are awesome and personally you know i grew up in asia in the 1980s and i remember getting",
    "start": "960079",
    "end": "966880"
  },
  {
    "text": "a game boy from the temple street night market in hong kong and i was always excited because we go walking down you",
    "start": "966880",
    "end": "972720"
  },
  {
    "text": "know the night market streets and they always had these game stores with colorful boxes stacked up in the windows and it really",
    "start": "972720",
    "end": "978639"
  },
  {
    "text": "like it really stuck with me so not only is it awesome it's just as personal right",
    "start": "978639",
    "end": "985680"
  },
  {
    "text": "we don't care where you bought your game boy i can hear you all thinking what is a game boy",
    "start": "985839",
    "end": "990959"
  },
  {
    "text": "all right don't ask the same question twice it's rude a game boy has an 8-bit 4.19 megahertz",
    "start": "990959",
    "end": "998000"
  },
  {
    "text": "cpu 8 kilobytes of ram and a 160 by 144",
    "start": "998000",
    "end": "1003600"
  },
  {
    "text": "pixel display the cpu is similar to an older intel 8080 cpu and most of the assemblers for",
    "start": "1003600",
    "end": "1009440"
  },
  {
    "text": "it use z80 syntax it's a custom chip but the instructions are based on very very",
    "start": "1009440",
    "end": "1015360"
  },
  {
    "text": "well-known hardware now i read those technical specs that i",
    "start": "1015360",
    "end": "1020639"
  },
  {
    "text": "felt emboldened i'm gonna say that it's just like the z80 it's like well old",
    "start": "1020639",
    "end": "1026160"
  },
  {
    "text": "how hard can this possibly be um i had door games and i always have",
    "start": "1026160",
    "end": "1031199"
  },
  {
    "text": "and i love the 90s and 2000s emulation porting scene but a few things specifically sent me down this",
    "start": "1031199",
    "end": "1036558"
  },
  {
    "text": "particular path now i watch this great youtube video on a channel called mvg modern vintage gamer i don't know if",
    "start": "1036559",
    "end": "1042480"
  },
  {
    "text": "anyone's seen it he's a big deal on the internet and he did a time lapse of importing the game another world to the original xbox",
    "start": "1042480",
    "end": "1049760"
  },
  {
    "text": "which i thought that's pretty cool um and i spent some time the past couple of years transliterating software for",
    "start": "1049760",
    "end": "1055360"
  },
  {
    "text": "clients so i'd been porting python and java things into dotnet and.net core and ironically porting.net core and",
    "start": "1055360",
    "end": "1062160"
  },
  {
    "text": "c-sharp stuff into typescript and javascript so i felt quite confident transliterating code and i've been",
    "start": "1062160",
    "end": "1069039"
  },
  {
    "text": "working on some c and c plus plus hardware projects around building kind of displays and stuff as well",
    "start": "1069039",
    "end": "1075200"
  },
  {
    "text": "and i thought hey dead 80 processor isn't too different from chip 8 in complexity absolutely not true",
    "start": "1075200",
    "end": "1082400"
  },
  {
    "text": "um i wonder if i can write a lo-fi game boy emulator that could be used like capture frames and send it to some kind",
    "start": "1082400",
    "end": "1088240"
  },
  {
    "text": "of hardware that'd be really cool um so i fell down this black hole of",
    "start": "1088240",
    "end": "1093440"
  },
  {
    "text": "here are pdfs about reverse engineering the game boy hardware and you know those like wikipedia holes that you fall into",
    "start": "1093440",
    "end": "1099360"
  },
  {
    "text": "sometimes this is like really deep really really deep like the 90s were wild",
    "start": "1099360",
    "end": "1106320"
  },
  {
    "text": "so i spent about a day reading this thing called pens docs which is a 25-year long community effort",
    "start": "1106320",
    "end": "1112960"
  },
  {
    "text": "to catalog all the details of game boy hardware like this is like peak 1990s era deep",
    "start": "1112960",
    "end": "1119280"
  },
  {
    "text": "technical unpacking and reverse engineering of game boy hardware it's like a head full really really really is",
    "start": "1119280",
    "end": "1125600"
  },
  {
    "text": "they're wonderful documentation i would not recommend them as a casual bedtime read um no plot the characters are",
    "start": "1125600",
    "end": "1132000"
  },
  {
    "text": "boring so i skipped to what i felt was the most interesting place to start looking to",
    "start": "1132000",
    "end": "1137200"
  },
  {
    "text": "like read some information from cartridges um i opened visual studio and i started to",
    "start": "1137200",
    "end": "1143200"
  },
  {
    "text": "code so while from the frame of reference of",
    "start": "1143200",
    "end": "1148400"
  },
  {
    "text": "writing an entire emulator passing a cartridge might not seem like that much of a big deal i got it done pretty",
    "start": "1148400",
    "end": "1154799"
  },
  {
    "text": "quickly like we're talking a couple of hours so i grabbed my copy of totally legally backed up nintendo please please don't",
    "start": "1154799",
    "end": "1161760"
  },
  {
    "text": "sue me i swear um super mario land um which i happen to have on my computer",
    "start": "1161760",
    "end": "1167200"
  },
  {
    "text": "as a rom and uh actually i still actually have my copy of super mario land that i got when",
    "start": "1167200",
    "end": "1172400"
  },
  {
    "text": "i was a kid so this is probably actually the most legal thing i've ever done and i managed to pass the boot logo",
    "start": "1172400",
    "end": "1178640"
  },
  {
    "text": "the cartridge information and the metadata within a few hours of hacking around you literally pass the byte",
    "start": "1178640",
    "end": "1183840"
  },
  {
    "text": "stream from the top of the rom kind of interesting and it felt real and exciting like i had",
    "start": "1183840",
    "end": "1189120"
  },
  {
    "text": "some virtual memory i had a class called cpu and i had some op codes and it was starting to tick",
    "start": "1189120",
    "end": "1194400"
  },
  {
    "text": "super super cool and then i got stuck like really really really stuck",
    "start": "1194400",
    "end": "1200480"
  },
  {
    "text": "um i felt like i had a reasonable grasp of the gameboy hardware but i couldn't understand why some of my",
    "start": "1200480",
    "end": "1205760"
  },
  {
    "text": "op codes what they were meant to do i was reading the docs and i just i couldn't work out what they were doing and my emulator",
    "start": "1205760",
    "end": "1212000"
  },
  {
    "text": "kept on crashing in the boot sequence now to make matters even more confusing the documentation had started to use",
    "start": "1212000",
    "end": "1218559"
  },
  {
    "text": "notation that i didn't understand now i'm not sure if it's some fairly standard high school maths thing but i",
    "start": "1218559",
    "end": "1224559"
  },
  {
    "text": "am not a maths person and um it was really boiling my brain i didn't understand the notation",
    "start": "1224559",
    "end": "1230640"
  },
  {
    "text": "i was trying to implement the op codes for the gameboy cpu just like in the earlier chip 8 example as a glorified",
    "start": "1230640",
    "end": "1236159"
  },
  {
    "text": "switch statement and i just kept getting lost now not to be deterred i went hunting",
    "start": "1236159",
    "end": "1242080"
  },
  {
    "text": "for some other code bases that had been here before in an attempt to find something that could at least help me",
    "start": "1242080",
    "end": "1247120"
  },
  {
    "text": "understand the notation in the documentation now",
    "start": "1247120",
    "end": "1252559"
  },
  {
    "text": "i found a couple of emulators that worked in a couple of different languages and i stumbled across the",
    "start": "1252559",
    "end": "1258240"
  },
  {
    "text": "coffee gb project and it was a working emulator in java 1.8 you um i i just um it was wonderful",
    "start": "1258240",
    "end": "1266720"
  },
  {
    "text": "literally wonderful a cloneable repository that would build when i checked it out that i could reason about",
    "start": "1266720",
    "end": "1272320"
  },
  {
    "text": "in the language i understood like how often do you find that in open source projects all my christmases at once",
    "start": "1272320",
    "end": "1278559"
  },
  {
    "text": "um so what i figured is i could try transliterating this mit license code base",
    "start": "1278559",
    "end": "1284080"
  },
  {
    "text": "and use some of the open source test suites that were in that code base to kind of glue things together at the end",
    "start": "1284080",
    "end": "1289600"
  },
  {
    "text": "and work out what i was getting wrong so because we all like to shave the yaks i",
    "start": "1289600",
    "end": "1295360"
  },
  {
    "text": "started off by losing the entire day converting coffee gb to kotlin because i thought oh kotlin would be closer to c",
    "start": "1295360",
    "end": "1301360"
  },
  {
    "text": "sharp and it'd be easier to understand um like it worked like i do have a weird nascent port of it in kotlin but there's",
    "start": "1301360",
    "end": "1308159"
  },
  {
    "text": "no point in that thing existing um so before deciding to commit and i did a",
    "start": "1308159",
    "end": "1313919"
  },
  {
    "text": "like for like transliteration of the whole java source code across internet core 3.1 in an attempt to hopefully",
    "start": "1313919",
    "end": "1320880"
  },
  {
    "text": "understand when my own op code processing was was going wrong",
    "start": "1320880",
    "end": "1325919"
  },
  {
    "text": "yeah i keep on saying transliterate let's talk about that really really specifically um this is originally a language term",
    "start": "1325919",
    "end": "1334159"
  },
  {
    "text": "meaning very very specifically to write or print a letter or word using the closest corresponding letters",
    "start": "1334159",
    "end": "1340880"
  },
  {
    "text": "of a different alphabetical script so for a little clarification a transliteration as opposed to just a",
    "start": "1340880",
    "end": "1347280"
  },
  {
    "text": "port just a port is a line for line cosmetic only change",
    "start": "1347280",
    "end": "1352799"
  },
  {
    "text": "now you change the absolute minimum code required to get the software compiling in the target environment",
    "start": "1352799",
    "end": "1359200"
  },
  {
    "text": "and then do subsequent second and third passes to port things that are missing or don't really convert like to like for",
    "start": "1359200",
    "end": "1365679"
  },
  {
    "text": "like",
    "start": "1365679",
    "end": "1367919"
  },
  {
    "text": "so porting and transliterating software is a very very specific discipline",
    "start": "1372840",
    "end": "1379280"
  },
  {
    "text": "which is counter to how i and probably all of you would build software normally there are these three passes",
    "start": "1379280",
    "end": "1385679"
  },
  {
    "text": "so firstly you transliterate it until it compiles so you start at the entry point",
    "start": "1385679",
    "end": "1390799"
  },
  {
    "text": "and you work your way down now this normally involves starting at the main method and only migrating code",
    "start": "1390799",
    "end": "1397200"
  },
  {
    "text": "that gets called file by file and then secondly you port over any test",
    "start": "1397200",
    "end": "1403440"
  },
  {
    "text": "suite once the transliteration is done and ensure that the tests match the original",
    "start": "1403440",
    "end": "1409120"
  },
  {
    "text": "once you're in that place of safely you convert the code to be idiomatic in the target language and you have to be",
    "start": "1409120",
    "end": "1414880"
  },
  {
    "text": "really disciplined about sticking to those exact three phases to make sure you don't introduce errors",
    "start": "1414880",
    "end": "1420640"
  },
  {
    "text": "now in the above examples you can see how the java is subtly changed into c-sharp",
    "start": "1420640",
    "end": "1425760"
  },
  {
    "text": "with package declarations swapped for namespaces and attributes being removed now later much of that syntax is is",
    "start": "1425760",
    "end": "1432559"
  },
  {
    "text": "converted to c sharp eight so we're using expression bodied methods that obviously don't exist in java",
    "start": "1432559",
    "end": "1438799"
  },
  {
    "text": "and then you know this is a fairly trite and succinct example just to fit on some slides but some of the conversions are",
    "start": "1438799",
    "end": "1444880"
  },
  {
    "text": "far more dramatic in fact so you might think this is a set of obvious steps but you end up doing some",
    "start": "1444880",
    "end": "1450480"
  },
  {
    "text": "really really unnatural things to the code base that often totally go against your instincts now during the first",
    "start": "1450480",
    "end": "1457520"
  },
  {
    "text": "phase especially you often find yourself fighting your tools because you're at a disadvantage if you diverge in any way",
    "start": "1457520",
    "end": "1464400"
  },
  {
    "text": "from the original source code to prevent comparisons now this means you have to do horrible",
    "start": "1464400",
    "end": "1469440"
  },
  {
    "text": "things like keep the naming conventions and casings and odd non-idiomatic qualities of the foreign code base right",
    "start": "1469440",
    "end": "1477360"
  },
  {
    "text": "precisely as they are until you're at a point of safety now you also have to get very very",
    "start": "1477360",
    "end": "1482880"
  },
  {
    "text": "comfortable with throwing not implemented exceptions like literally everywhere so especially where a direct equivalent",
    "start": "1482880",
    "end": "1489919"
  },
  {
    "text": "is not available and you've managed to get the co until you've managed to get the code executing",
    "start": "1489919",
    "end": "1495279"
  },
  {
    "text": "now the sooner you get to a place where you can start translating the available tests the better",
    "start": "1495279",
    "end": "1500720"
  },
  {
    "text": "because you'll know early on if you're going off track right so you kind of want to get compiling you want to get tests compiling and you want them all",
    "start": "1500720",
    "end": "1506720"
  },
  {
    "text": "failing and then you can chip away and chip away so ideally to do this you need a good",
    "start": "1506720",
    "end": "1512720"
  },
  {
    "text": "reading grasp of the source language and like a relatively advanced grasp of the target language that you're porting to",
    "start": "1512720",
    "end": "1519200"
  },
  {
    "text": "in an attempt to convert some of the more subtle differences so in this particular code base for example java has really rich enums which",
    "start": "1519200",
    "end": "1527200"
  },
  {
    "text": "often have behavior loaded into them which we totally don't have in c sharp right in c sharp they're just integers",
    "start": "1527200",
    "end": "1533520"
  },
  {
    "text": "now producing similar syntactic constructs that could be used in the same way is",
    "start": "1533520",
    "end": "1539039"
  },
  {
    "text": "quite important so you kind of require a reasonable mastery of of the target language to pull that off without",
    "start": "1539039",
    "end": "1544080"
  },
  {
    "text": "getting yourself stuck with a non-compiling code base so you have to do things like when you're porting enums build extension method on",
    "start": "1544080",
    "end": "1551440"
  },
  {
    "text": "the enum values that you can call to replicate that kind of java-like behavior and apis",
    "start": "1551440",
    "end": "1558559"
  },
  {
    "text": "so once i found my groove transliterating the coffee gb code base a couple of",
    "start": "1559440",
    "end": "1564640"
  },
  {
    "text": "things became apparent so firstly the ui was just never going",
    "start": "1564640",
    "end": "1571360"
  },
  {
    "text": "to port absolutely wasn't going to port not trivially um it was a bunch of java jwt",
    "start": "1571360",
    "end": "1577039"
  },
  {
    "text": "code and i don't know if anyone else remembers the 1990s um but that's where i think the last person",
    "start": "1577039",
    "end": "1582799"
  },
  {
    "text": "that thought about jwt code still is there was no point in trying to convert that like for like i wasn't going to",
    "start": "1582799",
    "end": "1589279"
  },
  {
    "text": "port java windowing toolkit to c-sharp like there's the shaving yaks and like",
    "start": "1589279",
    "end": "1595039"
  },
  {
    "text": "importing your own herd of yaks to shave one by one",
    "start": "1595039",
    "end": "1600240"
  },
  {
    "text": "the jwt code however slightly annoyingly was responsible for both drawing the game to the screen and handling",
    "start": "1600240",
    "end": "1605840"
  },
  {
    "text": "controller inputs in the the source emulator fine write it down another thing to do",
    "start": "1605840",
    "end": "1612240"
  },
  {
    "text": "so my first target quickly became to get the headless mode in the original codebase booting a gameboy cartridge",
    "start": "1612240",
    "end": "1618720"
  },
  {
    "text": "now headless mode was designed to run the emulator without visual output controls in a console window",
    "start": "1618720",
    "end": "1624960"
  },
  {
    "text": "i figured if i could do enough to just get that running i could port the unit test to exercise some of the community",
    "start": "1624960",
    "end": "1630960"
  },
  {
    "text": "authored homebrew roms and there's a set of roms are designed to test various",
    "start": "1630960",
    "end": "1636240"
  },
  {
    "text": "aspects of the gameboy hardware to make sure your emulators are working correctly so i deleted all the jwt code",
    "start": "1636240",
    "end": "1643520"
  },
  {
    "text": "i left all the stubs of the codepets and the function calls in place just replacing their bodies with not",
    "start": "1643520",
    "end": "1648880"
  },
  {
    "text": "implemented exceptions and i implemented a few interfaces with empty implementations",
    "start": "1648880",
    "end": "1654559"
  },
  {
    "text": "and i managed to cajole headless mode into life so you can see the the code for headless",
    "start": "1654559",
    "end": "1659840"
  },
  {
    "text": "mode as it still exists today in the source code here i'm passing in null displays and null controllers and null sound and null",
    "start": "1659840",
    "end": "1666559"
  },
  {
    "text": "inputs along with amusingly the remnants of some of the jwt code left commented out for reference but in case i need to look",
    "start": "1666559",
    "end": "1672960"
  },
  {
    "text": "up what it did and you know what like",
    "start": "1672960",
    "end": "1678799"
  },
  {
    "text": "i cannot state enough how well compartmentalized the original",
    "start": "1678799",
    "end": "1683919"
  },
  {
    "text": "code base was like honestly properly kudos to the original author i",
    "start": "1683919",
    "end": "1689679"
  },
  {
    "text": "was very very lucky that when it came to writing a new display the original code",
    "start": "1689679",
    "end": "1695279"
  },
  {
    "text": "kept an array of pixel colors packed into an integer and the various graphics op codes",
    "start": "1695279",
    "end": "1700399"
  },
  {
    "text": "produced those and they actually resulted in this pixel array so all i really had to do to get stuff on screen",
    "start": "1700399",
    "end": "1706000"
  },
  {
    "text": "was convert that array of packed integers into x y coordinates and find a way to like quickly",
    "start": "1706000",
    "end": "1711360"
  },
  {
    "text": "quickly get out on the screen right so i extracted these rgb values and um",
    "start": "1711360",
    "end": "1716960"
  },
  {
    "text": "and i raised a c sharp event every time they changed and i created this new bitmap display",
    "start": "1716960",
    "end": "1722159"
  },
  {
    "text": "class and so to match the original implementation my display class runs on",
    "start": "1722159",
    "end": "1727679"
  },
  {
    "text": "its own thread refreshing distinctly from the cpu so i've kind of got my cpu ticking and emitting events and then a",
    "start": "1727679",
    "end": "1733840"
  },
  {
    "text": "bitmap display class listening to them and needing to do something right i just need something",
    "start": "1733840",
    "end": "1739679"
  },
  {
    "text": "to draw some pixels um anyone done any desktop programming",
    "start": "1739679",
    "end": "1745360"
  },
  {
    "text": "in net recently and knows how diverse the uh and possibly not well maintained the set",
    "start": "1745360",
    "end": "1751600"
  },
  {
    "text": "things up well you know what i nailed it one forms",
    "start": "1751600",
    "end": "1756799"
  },
  {
    "text": "i'm not even joking um you heard me right i ported the gameboy",
    "start": "1756799",
    "end": "1762279"
  },
  {
    "text": "emulator.net core 3.1 just to run it in a wim forms ui and i'm not sorry i'd do it again",
    "start": "1762279",
    "end": "1769600"
  },
  {
    "text": "the number of questions i got about this re my sanity uh re why i wasn't running wpf",
    "start": "1770320",
    "end": "1777200"
  },
  {
    "text": "if anyone still used wim forms if winforms random.net core was quite excellent",
    "start": "1777200",
    "end": "1784399"
  },
  {
    "text": "people forget that wim forms was designed to be easy to use for rapid application development",
    "start": "1784399",
    "end": "1789760"
  },
  {
    "text": "and it kind of lets you get stuff on the screen really really quickly and computers are fast now so it's fine",
    "start": "1789760",
    "end": "1795200"
  },
  {
    "text": "um wim forms is actually secretly kind of awesome and it does run.net core now five and six only on windows obviously",
    "start": "1795200",
    "end": "1802240"
  },
  {
    "text": "because winforms on the mac doesn't make any sense and it just works",
    "start": "1802240",
    "end": "1808720"
  },
  {
    "text": "so about 200 lines of code later i had a wim forms ui with a picture box on it",
    "start": "1808720",
    "end": "1814000"
  },
  {
    "text": "that i could update every time my game boy emulator raised an event and um if you're eagle-eyed and look",
    "start": "1814000",
    "end": "1821039"
  },
  {
    "text": "closely at the background images here you'll notice another nice thing that came free from wim forms",
    "start": "1821039",
    "end": "1826720"
  },
  {
    "text": "input handling just like the original jwt code base so i could hook an implementation of a",
    "start": "1826720",
    "end": "1832320"
  },
  {
    "text": "controller class up to the winforms window window key press events and it just worked",
    "start": "1832320",
    "end": "1838960"
  },
  {
    "text": "like i think i hacked this together in about 45 minutes and i sat there thinking that everyone",
    "start": "1838960",
    "end": "1844320"
  },
  {
    "text": "was going to judge me incredibly harshly but i was unrepentant",
    "start": "1844320",
    "end": "1849360"
  },
  {
    "text": "and and it worked like legit it worked kind of um kind of",
    "start": "1849520",
    "end": "1855200"
  },
  {
    "text": "so once i got to this point where i had the title screen of mario booting in c sharp and side by side the original java",
    "start": "1855200",
    "end": "1861279"
  },
  {
    "text": "code base booting the same game i realized that i'd made some kind of",
    "start": "1861279",
    "end": "1867279"
  },
  {
    "text": "terrible terrible error um where every time i press start the game would crash",
    "start": "1867279",
    "end": "1873840"
  },
  {
    "text": "and yeah obviously enough of my port was working like i'd got somewhere i had a",
    "start": "1873840",
    "end": "1878960"
  },
  {
    "text": "screen but um but establishing where my code had diverged from the original",
    "start": "1878960",
    "end": "1884159"
  },
  {
    "text": "definitely working code base was a terrifying prospect but luckily i am not the first person to",
    "start": "1884159",
    "end": "1891360"
  },
  {
    "text": "ever try and write a game boy emulator right so we go back to the internet in the face of our own failures",
    "start": "1891360",
    "end": "1898080"
  },
  {
    "text": "so there's a really good set of home brew test roms that exercise the game boy hardware that i mentioned earlier",
    "start": "1898080",
    "end": "1903679"
  },
  {
    "text": "now what i wanted to do is i wanted to run the test roms in both emulators side by",
    "start": "1903679",
    "end": "1909519"
  },
  {
    "text": "side and see where they diverge they're wonderfully named one of them is called blog and the other is the moon",
    "start": "1909519",
    "end": "1916320"
  },
  {
    "text": "eye test roms i think the latter is actually from a work in progress rust emulator i don't",
    "start": "1916320",
    "end": "1922000"
  },
  {
    "text": "know where people make up these names fine so i ported the test harness across to",
    "start": "1922000",
    "end": "1927120"
  },
  {
    "text": "the original code base and i got the test runs running and just as i suspected tests that were passing in the",
    "start": "1927120",
    "end": "1932480"
  },
  {
    "text": "java code base were failing in my port this was a great first step really i had failing tests and i",
    "start": "1932480",
    "end": "1940159"
  },
  {
    "text": "hope everyone understands the value of a failing test when something isn't working i just needed to find out what exactly",
    "start": "1940159",
    "end": "1946640"
  },
  {
    "text": "i've broken and you know i ported i don't know 5000 lines of code",
    "start": "1946640",
    "end": "1952960"
  },
  {
    "text": "now these are both low-level emulators at this point and it's important to",
    "start": "1953360",
    "end": "1958960"
  },
  {
    "text": "understand this so they literally implement the op codes of the hardware and they tick at the clock rate of the",
    "start": "1958960",
    "end": "1964559"
  },
  {
    "text": "cpu so 4.19 megahertz doesn't sound like a lot of megahertz",
    "start": "1964559",
    "end": "1970000"
  },
  {
    "text": "for until it's a loop like thousands and thousands and thousands of iterations of cpu ticks a",
    "start": "1970000",
    "end": "1977279"
  },
  {
    "text": "second now you can't meaningfully step through the code because the number of",
    "start": "1977279",
    "end": "1982480"
  },
  {
    "text": "operations they have to complete to see any change in memory is like a lot a lot",
    "start": "1982480",
    "end": "1988480"
  },
  {
    "text": "thousands and thousands of steps but that's okay we live in visual studio right we have",
    "start": "1988480",
    "end": "1993760"
  },
  {
    "text": "tools that are good um we have things like conditional break points",
    "start": "1993760",
    "end": "1999519"
  },
  {
    "text": "i felt emboldened i can just put a conditional breakpoint in this thing and you know when when a value changes that",
    "start": "1999519",
    "end": "2004880"
  },
  {
    "text": "i don't expect in memory cool break into a a debugger so ironically",
    "start": "2004880",
    "end": "2011200"
  },
  {
    "text": "the performance overhead of applying a conditional break point to one of my virtual cpu registers was so",
    "start": "2011200",
    "end": "2016840"
  },
  {
    "text": "severe that i couldn't even get visual studio to process a single test case as",
    "start": "2016840",
    "end": "2022320"
  },
  {
    "text": "far as the first era in like less than 10 minutes on like a ryzen 5950x",
    "start": "2022320",
    "end": "2027360"
  },
  {
    "text": "right it just it literally couldn't run fast enough with that instrumentation in place",
    "start": "2027360",
    "end": "2032880"
  },
  {
    "text": "um so i knew that i had to get both code bases into a point where i had a break",
    "start": "2032880",
    "end": "2039039"
  },
  {
    "text": "point where memory state diverged right that was the goal and i could solve the problem i was",
    "start": "2039039",
    "end": "2044559"
  },
  {
    "text": "seeing if i could do that i just wasn't really immediately sure how so you may all recognize this from your",
    "start": "2044559",
    "end": "2050560"
  },
  {
    "text": "regular jobs as your integration tests being your only tests right it's always a bad place when",
    "start": "2050560",
    "end": "2056320"
  },
  {
    "text": "your integration tests your only tests because you know something is broken just not where",
    "start": "2056320",
    "end": "2062560"
  },
  {
    "text": "so i ended up spending a morning building two tools i started by building a debugging tool",
    "start": "2062800",
    "end": "2068960"
  },
  {
    "text": "and i built a client in both java and c-sharp that keeps the ticks of the emulators in sync",
    "start": "2068960",
    "end": "2074398"
  },
  {
    "text": "breaking them both into the debugger when they their memory state diff through doing like a hash of the memory",
    "start": "2074399",
    "end": "2080638"
  },
  {
    "text": "both emulators would call a http server with a hash of their current memory state and where it differed it would make them pause right it seems like i",
    "start": "2080639",
    "end": "2087839"
  },
  {
    "text": "can see you can see where this is going right which is a great idea in theory um but i just mentioned that conditional",
    "start": "2087839",
    "end": "2093919"
  },
  {
    "text": "breakpoints were slow yeah not very smart sometimes",
    "start": "2093919",
    "end": "2099359"
  },
  {
    "text": "it worked i i didn't get there with it because it was so slow right um",
    "start": "2099359",
    "end": "2104800"
  },
  {
    "text": "there was way too much overhead like it helped me find like one bug which was cool and i fixed it and it did kind of pay off for the sake of a morning's",
    "start": "2104800",
    "end": "2111520"
  },
  {
    "text": "effort but too much overhead so i had to go low five a bit of logging function into each",
    "start": "2111520",
    "end": "2117839"
  },
  {
    "text": "emulator that i could wrap around the test cases that just dumps the memory state to a massive text file on every",
    "start": "2117839",
    "end": "2124320"
  },
  {
    "text": "cpu tick right so i i left it running for half an hour right",
    "start": "2124320",
    "end": "2129599"
  },
  {
    "text": "and i knew that when the test passed in the first emulator the one in the other one should have passed and i could stop it",
    "start": "2129599",
    "end": "2136560"
  },
  {
    "text": "old tricks of the best tricks and so so what happened is i did these lengthy diffs on like multi-gigabyte",
    "start": "2136880",
    "end": "2144240"
  },
  {
    "text": "long log files we're talking 10 20 gig long log files like 20 seconds of execution",
    "start": "2144240",
    "end": "2150400"
  },
  {
    "text": "um to find the tick number where the emulators diverged and it worked so once",
    "start": "2150400",
    "end": "2155680"
  },
  {
    "text": "i had a tick number i just added a debugger break into the code wrapped in an if statement",
    "start": "2155680",
    "end": "2161359"
  },
  {
    "text": "if tick is 29 000 whatever debugger break perfect",
    "start": "2161359",
    "end": "2166960"
  },
  {
    "text": "um and well i added at the immediate tick before so i could then step through execution and",
    "start": "2166960",
    "end": "2172720"
  },
  {
    "text": "it was important that i kept those two transliterated code bases so close because actually when the test cases",
    "start": "2172720",
    "end": "2179520"
  },
  {
    "text": "passed or failed equally i could pretty much look at the same line number of code and just step through side by side",
    "start": "2179520",
    "end": "2185839"
  },
  {
    "text": "if i diverge them by this point debugging would have been a nightmare honestly i would have probably given up",
    "start": "2185839",
    "end": "2192800"
  },
  {
    "text": "so the first bug that i fixed this way felt a little bit like magic like i felt like i'd pulled off the",
    "start": "2193040",
    "end": "2198480"
  },
  {
    "text": "heist of the century like just their sense of accomplishment like did you actually just build your own debugging",
    "start": "2198480",
    "end": "2203599"
  },
  {
    "text": "tools and it worked yes go me",
    "start": "2203599",
    "end": "2209200"
  },
  {
    "text": "it took about a day a day of doing this but i got my emulator in parity with the original coffee gb source and i could",
    "start": "2209200",
    "end": "2215280"
  },
  {
    "text": "start refactoring at that point like it was it was in a good place so what was the crashing bug",
    "start": "2215280",
    "end": "2221839"
  },
  {
    "text": "for the sake of argument so i had fallen foul of converting one",
    "start": "2221839",
    "end": "2228079"
  },
  {
    "text": "of the java data structures to c sharp now as i mentioned earlier in java enums",
    "start": "2228079",
    "end": "2233760"
  },
  {
    "text": "can have methods and i'd hastily transliterated some code that categorized enums for different",
    "start": "2233760",
    "end": "2239760"
  },
  {
    "text": "banks of memory in the game boy now you'll notice if you glance to the top right here that the enum names are used",
    "start": "2239760",
    "end": "2245839"
  },
  {
    "text": "to categorize different parts of the same type of memory so for instance and it's a little bit",
    "start": "2245839",
    "end": "2251680"
  },
  {
    "text": "fuzzy so rom underscore mbc 3 and rom underscore mbc 3 ram",
    "start": "2251680",
    "end": "2258960"
  },
  {
    "text": "are both identifying parts of the memory that make up mbc 3 so that stands for memory bank controller 3. it's part of",
    "start": "2258960",
    "end": "2266320"
  },
  {
    "text": "the game boy cartridge physically so the way that game boy cartridges work is they have memory banks to expand the",
    "start": "2266320",
    "end": "2272480"
  },
  {
    "text": "amount of memory available to games which gets switched out dynamically by some op codes",
    "start": "2272480",
    "end": "2277520"
  },
  {
    "text": "um that's why just coincidentally that in the 90s when they advertise game boy games the sizes of cartridges were used",
    "start": "2277520",
    "end": "2284480"
  },
  {
    "text": "in marketing material like oh it's a four megabyte cartridge right and it's because they use that memory basically",
    "start": "2284480",
    "end": "2290880"
  },
  {
    "text": "for graphics all the time it was just restoring sprite data so the bigger the megs the more graphics the nicer the",
    "start": "2290880",
    "end": "2296720"
  },
  {
    "text": "game tended to look and it was because they had more expensive multiple memory banks they were switching out",
    "start": "2296720",
    "end": "2302960"
  },
  {
    "text": "so the code in the emulator that implemented the opcode to switch these memory banks needed to check if the current memory bank location was part of",
    "start": "2302960",
    "end": "2310240"
  },
  {
    "text": "one of these memory banks now the original java implementation used a regular expression to check the name of",
    "start": "2310240",
    "end": "2315920"
  },
  {
    "text": "the enum member so it basically checked if it just contained the name of the memory bank it was looking for",
    "start": "2315920",
    "end": "2322480"
  },
  {
    "text": "now i had hastily replaced that regular expression with a string contains call",
    "start": "2322480",
    "end": "2328560"
  },
  {
    "text": "and the presumed that the enum member would always have an underscore followed by mbc something followed by an",
    "start": "2328560",
    "end": "2335760"
  },
  {
    "text": "underscore which works perfectly well for the string rom underscore mbc 3 underscore",
    "start": "2335760",
    "end": "2342320"
  },
  {
    "text": "ram two underscores but not so well for rom underscore nbc3",
    "start": "2342320",
    "end": "2348240"
  },
  {
    "text": "oops oops we are all fallible so while trying to switch memory banks",
    "start": "2348240",
    "end": "2354480"
  },
  {
    "text": "my code was just failing and quickly replacing that string contains method with the original regular expression",
    "start": "2354480",
    "end": "2361280"
  },
  {
    "text": "just fixed the bug right um you know i know there are way more idiomatic c-sharp ways to do this like",
    "start": "2361280",
    "end": "2366640"
  },
  {
    "text": "you can mark them up with attributes or god knows what um but it worked honestly fine like don't",
    "start": "2366640",
    "end": "2374079"
  },
  {
    "text": "don't sweat the small stuff right so one of the final entertaining",
    "start": "2374079",
    "end": "2380839"
  },
  {
    "text": "surprises was the afternoon i lost trying to find out why my emulator was slow",
    "start": "2380839",
    "end": "2386880"
  },
  {
    "text": "so on a related note you'd be surprised what a difference the release builds make",
    "start": "2386880",
    "end": "2392480"
  },
  {
    "text": "it's like a list of basic c sharp mistakes um yeah i spent what felt like an",
    "start": "2392480",
    "end": "2398320"
  },
  {
    "text": "eternity trying to profile the performance of the emulator because i just couldn't work out why it was performing so slow and so badly",
    "start": "2398320",
    "end": "2405520"
  },
  {
    "text": "and it was just because it was being observed oops so the program was just ticking so",
    "start": "2405520",
    "end": "2411119"
  },
  {
    "text": "fast that the overhead of collecting metrics and debugging instrumentation just slowed the program down so simply",
    "start": "2411119",
    "end": "2417359"
  },
  {
    "text": "compiling and running in release mode without a debugger attached totally matched the performance of the original",
    "start": "2417359",
    "end": "2422880"
  },
  {
    "text": "emulator which was also running in a release build without a debugger attached right totally fine",
    "start": "2422880",
    "end": "2430480"
  },
  {
    "text": "i've also perhaps skirted around the issue of audio in the",
    "start": "2430560",
    "end": "2435920"
  },
  {
    "text": "emulator because there is no audio um i've not written it because i don't know",
    "start": "2435920",
    "end": "2441359"
  },
  {
    "text": "how uh i've never done audio programming before and i'm looking into various audio",
    "start": "2441359",
    "end": "2446880"
  },
  {
    "text": "wrappers i know there's like n audio and i'll try and work out how to make tetra sing",
    "start": "2446880",
    "end": "2452800"
  },
  {
    "text": "it's just a slow process learning things you really don't know and",
    "start": "2452800",
    "end": "2458960"
  },
  {
    "text": "it worked you know throughout the first couple of weeks of this project and given we were all we were all in",
    "start": "2458960",
    "end": "2464240"
  },
  {
    "text": "quarantine at the time this was happening right this was a this is a peak lock down stop me going insane project um",
    "start": "2464240",
    "end": "2472240"
  },
  {
    "text": "i've been teasing the internet with screenshots of game boy games and things like that so once i got to the point where the ui wasn't crashing and the",
    "start": "2472240",
    "end": "2479359"
  },
  {
    "text": "code was suitably ported i just chucked the the emulator on github you know mostly for the fun of it",
    "start": "2479359",
    "end": "2485839"
  },
  {
    "text": "and generally people have enjoyed seeing this kind of project done in c-sharp rather than yet another business",
    "start": "2485839",
    "end": "2492000"
  },
  {
    "text": "application there's an acronym that's going around at the moment like a blobbum or something like a boring line of business application i just wanted",
    "start": "2492000",
    "end": "2498480"
  },
  {
    "text": "something that wasn't there and oh yeah i stuck a ridiculous ascii art renderer on the front of it so you",
    "start": "2498480",
    "end": "2504000"
  },
  {
    "text": "can play super mario and ascii art on the command line",
    "start": "2504000",
    "end": "2509280"
  },
  {
    "text": "everyone's bucket list item right totally um why would you not want that and and really",
    "start": "2509280",
    "end": "2515440"
  },
  {
    "text": "that was the reason for doing this at all and that's kind of the point i really want to make you know c-sharp is a language i love",
    "start": "2515440",
    "end": "2521440"
  },
  {
    "text": "and i feel very comfortable with i love the direction that.net core56 plus is going and i'm on a bit of a",
    "start": "2521440",
    "end": "2527599"
  },
  {
    "text": "journey at the moment trying to prove that we're really a place with net where it can really do anything any",
    "start": "2527599",
    "end": "2533920"
  },
  {
    "text": "other runtime or language can do at least as performantly and often plenty more beautifully in code right like i",
    "start": "2533920",
    "end": "2539760"
  },
  {
    "text": "really i truly believe that and it's wonderful to see other people like engaging with it in good faith and",
    "start": "2539760",
    "end": "2544800"
  },
  {
    "text": "you know seeing the same thing you know interestingly after i put this online um i got message from a guy who used it for",
    "start": "2544800",
    "end": "2552079"
  },
  {
    "text": "like a twitter plays pokemon thing where he used the back end for this to update his user picture and people could tweet",
    "start": "2552079",
    "end": "2558079"
  },
  {
    "text": "controls at him and they played the way through pokemon um yeah it was awesome right um though",
    "start": "2558079",
    "end": "2564400"
  },
  {
    "text": "needless to say it wasn't without its distractors so you know everyone always says never",
    "start": "2564400",
    "end": "2570000"
  },
  {
    "text": "read the comments shall we read some of the comments together it's gonna be good i always like to engage",
    "start": "2570000",
    "end": "2576000"
  },
  {
    "text": "um and there was one comment that both stuck with me and uh i thought was important enough to highlight",
    "start": "2576000",
    "end": "2582000"
  },
  {
    "text": "so let's let's make a stranger from reddit famous for a moment oh",
    "start": "2582000",
    "end": "2588079"
  },
  {
    "text": "god code quality is questionable here's how the author emits frames they create a new image",
    "start": "2588079",
    "end": "2593440"
  },
  {
    "text": "big fat allocation that be like i don't know my hip-hop name um iterate over",
    "start": "2593440",
    "end": "2598960"
  },
  {
    "text": "every pixel convert its value to a string and immediately pass it back as a source for an rgb color and fill a",
    "start": "2598960",
    "end": "2604560"
  },
  {
    "text": "single pixel with it create a memory stream without god he just kind of went big fat allocation another big fat",
    "start": "2604560",
    "end": "2610640"
  },
  {
    "text": "allocation call tour just look at this crap right some electron level resource wasting he",
    "start": "2610640",
    "end": "2618000"
  },
  {
    "text": "probably says while visual studio code and slack are open on his desktop",
    "start": "2618000",
    "end": "2623200"
  },
  {
    "text": "oh jesus christ read it as ever is a mixed bag so i had a bunch of really interesting conversations with people in the dot-net",
    "start": "2623200",
    "end": "2629760"
  },
  {
    "text": "and c-sharp subreddits the general programming subreddits on the other hand not so much",
    "start": "2629760",
    "end": "2636000"
  },
  {
    "text": "um it's easy to forget how hostile people compete absolutely nothing at all",
    "start": "2636000",
    "end": "2641200"
  },
  {
    "text": "and legitimately one of the takeaways of this process for me was this as programmers we can be short we can be",
    "start": "2641200",
    "end": "2648400"
  },
  {
    "text": "snipey we can dig through code contextless and take swipes at things just to bring each other down right",
    "start": "2648400",
    "end": "2655280"
  },
  {
    "text": "everything in that comment 100 true i could totally be better",
    "start": "2655280",
    "end": "2662079"
  },
  {
    "text": "but you know what the program consumes between 30 and 50 megabytes of ram in total i benchmarked",
    "start": "2662079",
    "end": "2669040"
  },
  {
    "text": "it and i do it all again in a heartbeat to put out something cool and interesting",
    "start": "2669040",
    "end": "2674319"
  },
  {
    "text": "in the world that people got a little bit of joy from loud and clear no gatekeepers",
    "start": "2674319",
    "end": "2680400"
  },
  {
    "text": "no perfection doesn't exist do the fun thing",
    "start": "2680400",
    "end": "2685680"
  },
  {
    "text": "enjoy yourselves share stuff otherwise balls like that win",
    "start": "2685680",
    "end": "2691200"
  },
  {
    "text": "right and absolutely i don't want to live in a world with those people like my god",
    "start": "2691200",
    "end": "2697920"
  },
  {
    "text": "luckily the boys never win in face of you doing cool stuff honestly so within a day or two of pushing out some tweets",
    "start": "2699599",
    "end": "2705920"
  },
  {
    "text": "with links to the code i had a couple of pull requests um one with the mono game ui that let the emulator run on various devices",
    "start": "2705920",
    "end": "2713200"
  },
  {
    "text": "one with an avalonia ui that let the emulator run on linux and mac as well as the existing winforms ui cross-platform",
    "start": "2713200",
    "end": "2720560"
  },
  {
    "text": "headless cli with its ascii art you know like you can reference the game boy",
    "start": "2720560",
    "end": "2726960"
  },
  {
    "text": "emulator as a library in your programs i don't know why you would ever do that or what use it would be but you could do it",
    "start": "2726960",
    "end": "2732000"
  },
  {
    "text": "if you want to and you know the the the twitch the twitter place pokemon thing you know",
    "start": "2732000",
    "end": "2737520"
  },
  {
    "text": "scott hanselman wrote a blog post about it where he was hacking some code in it like it's fun people like fun",
    "start": "2737520",
    "end": "2743200"
  },
  {
    "text": "why do people hate fun um you know i'm very happy and the",
    "start": "2743200",
    "end": "2748240"
  },
  {
    "text": "you know the lesson for me for this and the lesson i want to leave everybody with is you know don't give up when you get stuck",
    "start": "2748240",
    "end": "2754079"
  },
  {
    "text": "you know i know it sounds really really trite but everything we do in software is built on the shoulders of other talented people that build things before",
    "start": "2754079",
    "end": "2760880"
  },
  {
    "text": "us and it's easy to get stuck and it's easy to give up and it's hard to go and decide to look",
    "start": "2760880",
    "end": "2766560"
  },
  {
    "text": "around for inspiration you know i'm super super thankful for the wonderfully high quality coffee gb co-base like i",
    "start": "2766560",
    "end": "2772720"
  },
  {
    "text": "made a snide jabbed it being java 1.8 but it was a brilliant code base like legitimately brilliant code base",
    "start": "2772720",
    "end": "2780000"
  },
  {
    "text": "i had the pleasure of adapting it i had the pleasure of merging it with my own work and my own efforts",
    "start": "2780000",
    "end": "2785920"
  },
  {
    "text": "you know i'm happy i didn't actually succumb to my own hubris and decide that if i couldn't just work it out on my own",
    "start": "2785920",
    "end": "2791040"
  },
  {
    "text": "then it wasn't worth doing um you know i'm absolutely thrilled that by sacrificing that little bit of ego",
    "start": "2791040",
    "end": "2798160"
  },
  {
    "text": "there's something cool and fun that people can play with and i hope you know i hope if you get the chance have some fun with it like",
    "start": "2798160",
    "end": "2804560"
  },
  {
    "text": "trash the place it's cool i'm excited you can find me on the internet in all",
    "start": "2804560",
    "end": "2810160"
  },
  {
    "text": "these places feel free to tweet at me harass me buy my books don't reddit me",
    "start": "2810160",
    "end": "2816880"
  },
  {
    "text": "um i promise i don't bite thank you so much for coming",
    "start": "2816880",
    "end": "2821920"
  },
  {
    "text": "[Applause] really thank you there's a whole room here",
    "start": "2824220",
    "end": "2831599"
  },
  {
    "text": "any questions i probably can't answer them but",
    "start": "2831599",
    "end": "2836880"
  },
  {
    "text": "i'm happy to try no two and a half weeks",
    "start": "2836880",
    "end": "2842079"
  },
  {
    "text": "from the first idea i say that i always misrepresent the amount of time",
    "start": "2842079",
    "end": "2847359"
  },
  {
    "text": "um what it really was was a month of me sleeping on the idea and then a morning of waking up and",
    "start": "2847359",
    "end": "2852480"
  },
  {
    "text": "going ah i can probably do that let's start and you know what like we're all locked down and i i was in this this place",
    "start": "2852480",
    "end": "2859359"
  },
  {
    "text": "where i'd i i quit all my jobs all my client engagements on the 1st of february 2020",
    "start": "2859359",
    "end": "2865200"
  },
  {
    "text": "to go traveling to do some conferences i had like a wedding booked in south africa i had a",
    "start": "2865200",
    "end": "2870559"
  },
  {
    "text": "trip to new york like three conferences so that lasted like three weeks",
    "start": "2870559",
    "end": "2875680"
  },
  {
    "text": "um and i needed to fill up the rest of my year so i did like 14 weird projects in a year just to see what weird stuff i",
    "start": "2875680",
    "end": "2883200"
  },
  {
    "text": "could do because it was my own time so yeah it was about a month of stewing and then",
    "start": "2883200",
    "end": "2889200"
  },
  {
    "text": "two and a half weeks of hacking hacking hacking head down excuse me",
    "start": "2889200",
    "end": "2895760"
  },
  {
    "text": "any more for any more amazing thank you so so much and um have enjoy the rest of your day like thank",
    "start": "2895760",
    "end": "2902000"
  },
  {
    "text": "you to the organizers this has been a labor of love in the face of all adversity",
    "start": "2902000",
    "end": "2908839"
  },
  {
    "text": "[Applause]",
    "start": "2909400",
    "end": "2912779"
  },
  {
    "text": "you",
    "start": "2919920",
    "end": "2922000"
  }
]