[
  {
    "text": "hello and uh welcome um I'm really happy to see so many in uh in the audience",
    "start": "5960",
    "end": "11960"
  },
  {
    "text": "today um some quick words uh about me my name is Theodore and um I'm an architect",
    "start": "11960",
    "end": "19199"
  },
  {
    "text": "at uh TV2 I'm uh located in Bergen uh my area is uh Sports and news",
    "start": "19199",
    "end": "28480"
  },
  {
    "text": "so my day job is is to aggregate data from outside of uh Norway and inside of",
    "start": "28480",
    "end": "36040"
  },
  {
    "text": "Norway and make it available inside of TV2 so so my customers uh uh they are uh",
    "start": "36040",
    "end": "42640"
  },
  {
    "text": "other people inside of TV2 uh this could be either u a very",
    "start": "42640",
    "end": "48480"
  },
  {
    "text": "significant election happening in the United States kind of soon uh where we get data from Associated Press and stuff",
    "start": "48480",
    "end": "55520"
  },
  {
    "text": "and present that for the graphics and the News uh what I do most is uh process",
    "start": "55520",
    "end": "61879"
  },
  {
    "text": "Sports data uh different kinds of uh statistics and analytics and just uh",
    "start": "61879",
    "end": "67439"
  },
  {
    "text": "regular data uh we also uh throw it into the uh",
    "start": "67439",
    "end": "72880"
  },
  {
    "text": "Graphics um so that when we produce uh matches ourselves um we uh we get these tickers",
    "start": "72880",
    "end": "80479"
  },
  {
    "text": "for you know the uh now it's 10 and Etc it comes through our",
    "start": "80479",
    "end": "86680"
  },
  {
    "text": "pipelines um so I'll start of with um uh",
    "start": "86680",
    "end": "92759"
  },
  {
    "text": "small showing of hands how many hair has uh taken down production please join",
    "start": "92759",
    "end": "100079"
  },
  {
    "text": "me yeah I don't believe you I believe there's more of you but uh sure how many",
    "start": "100079",
    "end": "106040"
  },
  {
    "text": "have done it several times only two this will be very",
    "start": "106040",
    "end": "112079"
  },
  {
    "text": "embarrassing for me how many have taken down production from stage",
    "start": "112079",
    "end": "119600"
  },
  {
    "text": "no one okay so now I'm alone from here how many have done it uh it consistently",
    "start": "120000",
    "end": "126799"
  },
  {
    "text": "for weeks uh me yeah I'm still alone that's great",
    "start": "126799",
    "end": "134319"
  },
  {
    "text": "let's go this is how it looks like in uh our graphs so anyone want to guess what",
    "start": "134319",
    "end": "141280"
  },
  {
    "text": "this is lat yeah you could say it l it's latency",
    "start": "141280",
    "end": "150239"
  },
  {
    "text": "uh these are this is uh uh offsets and lag uh for different Kafka topics that",
    "start": "150239",
    "end": "156160"
  },
  {
    "text": "we use in our processing uh pipeline uh Kafka Kafka topics uh Kafka",
    "start": "156160",
    "end": "163400"
  },
  {
    "text": "is a technology where you messaging system or queuing system uh to send uh",
    "start": "163400",
    "end": "168680"
  },
  {
    "text": "yeah messages through micro microservices uh simply explained",
    "start": "168680",
    "end": "175959"
  },
  {
    "text": "um so top that means filtering or things to filter top right no a topic is",
    "start": "175959",
    "end": "181720"
  },
  {
    "text": "actually is it's basically just a a directory of files uh in order so you",
    "start": "181720",
    "end": "187920"
  },
  {
    "text": "you append something to the Kafka topic and uh um it's it will be available for",
    "start": "187920",
    "end": "195159"
  },
  {
    "text": "other consumers so there are producers that produce to Kafka topic uh the topic itself is distributed uh across uh",
    "start": "195159",
    "end": "202280"
  },
  {
    "text": "different Brokers and nodes uh so you get this replicated distributed uh log",
    "start": "202280",
    "end": "207640"
  },
  {
    "text": "and you have consumers that can consume so you get this nice property of uh not losing data at least that what you that",
    "start": "207640",
    "end": "215040"
  },
  {
    "text": "that's what you want um so if the back pressure gets big",
    "start": "215040",
    "end": "221239"
  },
  {
    "text": "and the back pressure is that the consumer can't uh consume as fast as the producer can produce so it's uh so you",
    "start": "221239",
    "end": "227680"
  },
  {
    "text": "get this lag um so right now we're uh way behind uh and uh it doesn't look good",
    "start": "227680",
    "end": "235480"
  },
  {
    "text": "and it's continuously increasing which also is considered a bad",
    "start": "235480",
    "end": "242079"
  },
  {
    "text": "thing um so what do you do to survive you uh",
    "start": "242079",
    "end": "248360"
  },
  {
    "text": "scale up because we're in the cloud right so we can just bump up the number of replicas and try to process things",
    "start": "248360",
    "end": "254680"
  },
  {
    "text": "faster in parallel um that kind of works as you",
    "start": "254680",
    "end": "259919"
  },
  {
    "text": "can tell from the about the same time uh as this uh starts going down uh it's at",
    "start": "259919",
    "end": "267040"
  },
  {
    "text": "about the same time is when we uh increase the uh uh requests there and um",
    "start": "267040",
    "end": "274199"
  },
  {
    "text": "we managed you know uh run through the the back pressure and",
    "start": "274199",
    "end": "279919"
  },
  {
    "text": "and keep up with the lag but it takes a long time is that a",
    "start": "279919",
    "end": "285720"
  },
  {
    "text": "problem yeah it's a problem because uh at this exact date uh this was happening",
    "start": "286199",
    "end": "293240"
  },
  {
    "text": "um I'm sure there are many sports football Hooligans in this audience",
    "start": "293240",
    "end": "300440"
  },
  {
    "text": "uh Arsenal and Liverpool uh are two very important uh uh teams people care a lot",
    "start": "300440",
    "end": "307680"
  },
  {
    "text": "and also champions league is perhaps the most important football competition in the world uh so it's kind of",
    "start": "307680",
    "end": "314560"
  },
  {
    "text": "embarrassing that we are now uh behind uh on updates so uh I don't have a",
    "start": "314560",
    "end": "320479"
  },
  {
    "text": "screenshot from when this was actually happening but uh at this point we would just uh say something like not not",
    "start": "320479",
    "end": "327280"
  },
  {
    "text": "started during the whole match which is kind of not",
    "start": "327280",
    "end": "333280"
  },
  {
    "text": "good so I was considering um renaming my talk uh to uh",
    "start": "333360",
    "end": "342120"
  },
  {
    "text": "this uh I'll try to I'll try to win back some some sort of uh confidence but uh",
    "start": "343160",
    "end": "349720"
  },
  {
    "text": "we'll see uh do you know what this is this is obviously some sort of system",
    "start": "349720",
    "end": "355520"
  },
  {
    "text": "metrics uh um but specifically this is um uh metrics from our Kafka cluster so",
    "start": "355520",
    "end": "364240"
  },
  {
    "text": "the Kafka cluster is a series of uh nodes that uh um uh communicate with",
    "start": "364240",
    "end": "370960"
  },
  {
    "text": "each other to append to the log and and push and uh yeah help the consumers and producer to uh make the data available",
    "start": "370960",
    "end": "378800"
  },
  {
    "text": "and uh one dangerous signal here is the uh red CPU so the CPU is at Max and um",
    "start": "378800",
    "end": "387599"
  },
  {
    "text": "uh which is also already prettyy bad but uh the worst uh scenario is all the",
    "start": "387599",
    "end": "396280"
  },
  {
    "text": "way up in the left corner uh the disc is full so um have you had a disc full in",
    "start": "396280",
    "end": "404680"
  },
  {
    "text": "some production equipment before yeah yeah that's very bad so now you",
    "start": "404680",
    "end": "412000"
  },
  {
    "text": "can't even you can't even communicate with with a thing and yeah it's it's really stuck so now we're in deep deep",
    "start": "412000",
    "end": "417800"
  },
  {
    "text": "uh problems you see the small uh nudge down after a couple of hours at uh 100%",
    "start": "417800",
    "end": "425479"
  },
  {
    "text": "that's uh me and some other guys actually just physically deleting things in production just to try to",
    "start": "425479",
    "end": "431680"
  },
  {
    "text": "survive uh so yeah why is he not fired yet we'll see okay so uh what's this you",
    "start": "431680",
    "end": "440759"
  },
  {
    "text": "want to take a guess yes it says on the slide or",
    "start": "440759",
    "end": "446639"
  },
  {
    "text": "screenshot yeah but more specifically this is um our old uh graphql API so uh at this",
    "start": "446639",
    "end": "456080"
  },
  {
    "text": "point this is not the same uh at the same time uh as the other incident but",
    "start": "456080",
    "end": "461879"
  },
  {
    "text": "uh this happens uh quite uh quite often happened quite often um and um what you",
    "start": "461879",
    "end": "469120"
  },
  {
    "text": "see here is uh also Autos scaling uh scaling up because uh number of requests",
    "start": "469120",
    "end": "474440"
  },
  {
    "text": "and uh uh the latency and the uh yeah request starting to fail causing causing",
    "start": "474440",
    "end": "481840"
  },
  {
    "text": "us to scale up uh so at some point here here we run at what over yeah over 40",
    "start": "481840",
    "end": "488720"
  },
  {
    "text": "CPUs and uh almost 150 GB of uh RAM",
    "start": "488720",
    "end": "494520"
  },
  {
    "text": "which is huge that's extremely much and",
    "start": "494520",
    "end": "500400"
  },
  {
    "text": "uh expensive uh and um is this a problem",
    "start": "500400",
    "end": "509840"
  },
  {
    "text": "is it maybe yeah it doesn't have to be a problem at least not considering at this",
    "start": "510120",
    "end": "515760"
  },
  {
    "text": "time every request anyway times out at 30 seconds so it doesn't really matter what happens here because you we're",
    "start": "515760",
    "end": "521560"
  },
  {
    "text": "already dead so it's considering yeah another",
    "start": "521560",
    "end": "528360"
  },
  {
    "text": "name so how do you deal with this how how do you uh get out of this uh swamp",
    "start": "530240",
    "end": "537200"
  },
  {
    "text": "of uh uh issues you you tried different ways of uh examining your systems your",
    "start": "537200",
    "end": "544120"
  },
  {
    "text": "your programs and see if you can find some some common but easy low hanging fruit you know to to alleviate the",
    "start": "544120",
    "end": "551000"
  },
  {
    "text": "stress uh there are many tools that can help you uh with this uh this is one uh",
    "start": "551000",
    "end": "558320"
  },
  {
    "text": "a screenshot shamelessly stolen from elastics homepage uh",
    "start": "558320",
    "end": "563519"
  },
  {
    "text": "APM uh I think it's uh application performance uh monitoring or something",
    "start": "563519",
    "end": "569200"
  },
  {
    "text": "uh this will give you um a trace and you can uh you can see pretty visually",
    "start": "569200",
    "end": "575560"
  },
  {
    "text": "what's going on in your system uh this can be helpful but I I've",
    "start": "575560",
    "end": "581600"
  },
  {
    "text": "yet to actually discover and fix a bug using this and the main problem for me",
    "start": "581600",
    "end": "588160"
  },
  {
    "text": "with this is that it's sampling based so um if you're lucky one of your uh",
    "start": "588160",
    "end": "594720"
  },
  {
    "text": "failing traces will uh be visible but most of the time it won't",
    "start": "594720",
    "end": "600200"
  },
  {
    "text": "uh you can of course set the uh sampling rate to 100% but then you yeah then you'll be quickly shut down by by your",
    "start": "600200",
    "end": "606680"
  },
  {
    "text": "devops team uh for overloading the systems there uh I said I took down uh",
    "start": "606680",
    "end": "614600"
  },
  {
    "text": "production from stage and how is how would that be possible uh there are several ways to do",
    "start": "614600",
    "end": "621040"
  },
  {
    "text": "it uh one is to of course share infrastructure between your environments",
    "start": "621040",
    "end": "626360"
  },
  {
    "text": "which we kind of did which isn't a really good idea but uh so if the dis is full and you you use",
    "start": "626360",
    "end": "632720"
  },
  {
    "text": "the same CF cluster for both yeah you're you're having issues uh but but what",
    "start": "632720",
    "end": "639800"
  },
  {
    "text": "what's more interesting is to actually take it down because um now you're uh using so much internet your your",
    "start": "639800",
    "end": "647000"
  },
  {
    "text": "throughput is throughput is so high that you're taking down the whole VPN for the whole organization",
    "start": "647000",
    "end": "653360"
  },
  {
    "text": "so yeah that's that's a good way to do it like um dsing ourselves",
    "start": "653360",
    "end": "661240"
  },
  {
    "text": "so sampling based uh tracing is uh or",
    "start": "661480",
    "end": "666959"
  },
  {
    "text": "performance monitoring in general is in my opinion uh useful of course but it has",
    "start": "666959",
    "end": "673399"
  },
  {
    "text": "some very important limitations um you're yeah you're at the mercy of the",
    "start": "673399",
    "end": "679279"
  },
  {
    "text": "sample so most of the many of the things that you try to uh uh to to figure out",
    "start": "679279",
    "end": "686160"
  },
  {
    "text": "are left out you can't even find them um so how do you deal with",
    "start": "686160",
    "end": "692920"
  },
  {
    "text": "this uh you probably have time to read part of this but uh this is the first mail from uh Andes point maybe uh he",
    "start": "692920",
    "end": "703600"
  },
  {
    "text": "says that the ex set tarballs have been back doored so this is the first mail",
    "start": "703600",
    "end": "708760"
  },
  {
    "text": "from him uh earlier this spring for the uh quite famous vulnerability that was",
    "start": "708760",
    "end": "713839"
  },
  {
    "text": "found in SSH uh in the next mail he says to",
    "start": "713839",
    "end": "719360"
  },
  {
    "text": "analyze I Prim primarily used perf record Intel PT UB to observe where",
    "start": "719360",
    "end": "725360"
  },
  {
    "text": "execution diverges between the back door being active and not how many here have uh heard about",
    "start": "725360",
    "end": "731320"
  },
  {
    "text": "Intel PT one two 3 nice and you'll see some",
    "start": "731320",
    "end": "738760"
  },
  {
    "text": "really nice things um let's figure out what it is we go to",
    "start": "738760",
    "end": "745639"
  },
  {
    "text": "manual chapter 33 uh um Intel PT is uh short for Intel",
    "start": "745639",
    "end": "753800"
  },
  {
    "text": "processor trace and this is a hardware feature inside every Intel processor since the broadwall uh era so around 10",
    "start": "753800",
    "end": "761720"
  },
  {
    "text": "years for the last 10 years every Intel processor has this um so what it does is that every uh",
    "start": "761720",
    "end": "770160"
  },
  {
    "text": "every instruction that passes through your processor uh will uh be uh recorded",
    "start": "770160",
    "end": "775800"
  },
  {
    "text": "by uh the CPU itself uh along with uh some I'll show you the",
    "start": "775800",
    "end": "782920"
  },
  {
    "text": "packages uh after a while but uh it will record some additional information about the process or state and and and other",
    "start": "782920",
    "end": "789519"
  },
  {
    "text": "things and you can now uh query this so you get can get a snapshot of what what happened what did your program actually",
    "start": "789519",
    "end": "796959"
  },
  {
    "text": "do so uh in contrast to sampling based tracing you now get a proper execution",
    "start": "796959",
    "end": "803560"
  },
  {
    "text": "Trace so you can uh you can attach this to uh for example a program that that's",
    "start": "803560",
    "end": "809279"
  },
  {
    "text": "seg falting and it segals uh and at the seg fault you can just snap the trace uh",
    "start": "809279",
    "end": "816760"
  },
  {
    "text": "snap show the trace and now you can see what happened in the whole operating system all the way down to the crash",
    "start": "816760",
    "end": "824440"
  },
  {
    "text": "which is an amazing superpower uh not only that it uh",
    "start": "824440",
    "end": "830720"
  },
  {
    "text": "basically reverse Engineers every app you trace which is also kind of cool uh",
    "start": "830720",
    "end": "836839"
  },
  {
    "text": "so how does it do it every uh um instruction uh listed on",
    "start": "836839",
    "end": "843360"
  },
  {
    "text": "this uh this slide here is uh emitting uh a package in inside of the CPU so you",
    "start": "843360",
    "end": "851240"
  },
  {
    "text": "get for for example the uh the jumps the call and the Rats uh we uh uh record",
    "start": "851240",
    "end": "857720"
  },
  {
    "text": "some information about this date and present it um a package could look like uh this so",
    "start": "857720",
    "end": "867160"
  },
  {
    "text": "you get the header uh which is uh signifier what kind of package this is and a payload",
    "start": "867160",
    "end": "875240"
  },
  {
    "text": "um what's really smart about this is that um you get um super dense super",
    "start": "876440",
    "end": "885519"
  },
  {
    "text": "compacted uh information uh this is a TNT package which which is a taken not",
    "start": "885519",
    "end": "891600"
  },
  {
    "text": "taken uh which shows if a if or else is taken or not and it can represent it in",
    "start": "891600",
    "end": "897279"
  },
  {
    "text": "one bit so um it can use a short format where we have the header is just um zero and you",
    "start": "897279",
    "end": "905040"
  },
  {
    "text": "can get a sequence of uh yeah six uh taken not taken and it has a long format",
    "start": "905040",
    "end": "911120"
  },
  {
    "text": "where you can get 47 or what it is uh so that's if you have a huge function or",
    "start": "911120",
    "end": "917079"
  },
  {
    "text": "something with if blah if blah if blah if blah you can just get it in one package with bits just explaining where",
    "start": "917079",
    "end": "923160"
  },
  {
    "text": "you're going um this um",
    "start": "923160",
    "end": "930839"
  },
  {
    "text": "type of tracing has some limitations um one of them is that it it produces huge",
    "start": "930839",
    "end": "936560"
  },
  {
    "text": "amounts of data because processor are fast so there are a lot of things",
    "start": "936560",
    "end": "941959"
  },
  {
    "text": "happening uh so it has a system to kind of just uh if it's overloaded if too much is happening it just throws it away",
    "start": "941959",
    "end": "949160"
  },
  {
    "text": "uh you you'll I think you'll probably see it in some examples later today you'll get this overflow package which",
    "start": "949160",
    "end": "955600"
  },
  {
    "text": "says I'm giving up I'm uh uh not doing it anymore uh but it has this uh packet",
    "start": "955600",
    "end": "962440"
  },
  {
    "text": "stream boundary packet which is uh a certain pattern all of the zeros and",
    "start": "962440",
    "end": "968399"
  },
  {
    "text": "ones and uh uh alternating in the end this is a pattern that isn't uh visible",
    "start": "968399",
    "end": "975079"
  },
  {
    "text": "any other place in uh in the uh processor Trace so this is a place where",
    "start": "975079",
    "end": "981240"
  },
  {
    "text": "um if you have a period uh where your CPU is overloaded you can synchronize again so the decoder of these things can",
    "start": "981240",
    "end": "987720"
  },
  {
    "text": "just look at this pattern and say okay now we're back on track so we can continue the art Trace after it's been",
    "start": "987720",
    "end": "993279"
  },
  {
    "text": "overloaded for a while um which is yeah a nice feature so",
    "start": "993279",
    "end": "998959"
  },
  {
    "text": "how do you use it uh it's available in perf uh today",
    "start": "998959",
    "end": "1004360"
  },
  {
    "text": "you can just run it at uh almost every executable in your system at least if",
    "start": "1004360",
    "end": "1010360"
  },
  {
    "text": "you have a debug symbols somewhere uh which will help uh so you",
    "start": "1010360",
    "end": "1016519"
  },
  {
    "text": "run perf record uh I out put it to a file and I Supply Intel PT I give it",
    "start": "1016519",
    "end": "1023199"
  },
  {
    "text": "some options uh which uh in this case will ask Intel PT to uh sample uh or um",
    "start": "1023199",
    "end": "1032038"
  },
  {
    "text": "to do a snapshot every cycle every processor cycle so as fast as you can I",
    "start": "1032039",
    "end": "1038798"
  },
  {
    "text": "run it at uh LS and uh let's see what we get ta there we go so that's it",
    "start": "1038799",
    "end": "1050840"
  },
  {
    "text": "yeah it's not perf has uh the script feature which takes uh a trace and uh uh",
    "start": "1052720",
    "end": "1059600"
  },
  {
    "text": "transforms it uh you can do uh a lot of transforms by yourself but it has some",
    "start": "1059600",
    "end": "1064919"
  },
  {
    "text": "inbuilt uh you have the instruction Trace uh dism uh which take the takes the trace",
    "start": "1064919",
    "end": "1071960"
  },
  {
    "text": "and produces uh the disassembly for for the whole uh whole Trace so um I know",
    "start": "1071960",
    "end": "1079440"
  },
  {
    "text": "it's small but it's not important the thing is that this is a loop at least it look looks like it to me a loop of uh",
    "start": "1079440",
    "end": "1085559"
  },
  {
    "text": "parsing arguments to the command line of Ls",
    "start": "1085559",
    "end": "1090880"
  },
  {
    "text": "um and you can also H get a call Trace because um in the package uh packets",
    "start": "1090880",
    "end": "1099159"
  },
  {
    "text": "from the trace they record things like uh um addresses so where are you",
    "start": "1099159",
    "end": "1105559"
  },
  {
    "text": "returning to or calling into so now your application uh is suddenly",
    "start": "1105559",
    "end": "1111720"
  },
  {
    "text": "traceable so we can see here run the DL Main and yeah it's doing things uh I",
    "start": "1111720",
    "end": "1118039"
  },
  {
    "text": "added also the uh um IPC instructions per cycle which uh shows an estimate of",
    "start": "1118039",
    "end": "1125400"
  },
  {
    "text": "uh how many instructions you've executed per cycle so you can get some really granular granular information",
    "start": "1125400",
    "end": "1132880"
  },
  {
    "text": "[Music] here yeah oh no go ahead is that",
    "start": "1132880",
    "end": "1140720"
  },
  {
    "text": "SYM debug uh it's uh easier of course if you have the debug symbols uh but on my",
    "start": "1146559",
    "end": "1152880"
  },
  {
    "text": "system um Regular IUN it was available so uh this is also the lipy start yeah",
    "start": "1152880",
    "end": "1160600"
  },
  {
    "text": "yeah this is lipy",
    "start": "1160600",
    "end": "1165799"
  },
  {
    "text": "yeah that's right um okay so I'll just give you a second",
    "start": "1166840",
    "end": "1174240"
  },
  {
    "text": "to",
    "start": "1174240",
    "end": "1177240"
  },
  {
    "text": "read so have any of you been nerd sniped ever yeah now we see some hands yeah I",
    "start": "1184520",
    "end": "1191799"
  },
  {
    "text": "was nerd sniped real hard uh couple of weeks ago really hard and uh",
    "start": "1191799",
    "end": "1199559"
  },
  {
    "text": "the thing was um this is a file and the task is uh this is a challenge called",
    "start": "1199559",
    "end": "1206480"
  },
  {
    "text": "the 1 billion Road Challenge uh which was uh going somewhere in this uh winter",
    "start": "1206480",
    "end": "1212120"
  },
  {
    "text": "I think uh have you heard about it yeah it's very fun um you get a file uh",
    "start": "1212120",
    "end": "1219960"
  },
  {
    "text": "on this format you get a city and a temperature uh the format of the temperature is pretty simple it's either",
    "start": "1219960",
    "end": "1226360"
  },
  {
    "text": "uh yeah it has one decimal and it's either positive negative uh and it's split by uh and divided by the uh the",
    "start": "1226360",
    "end": "1233000"
  },
  {
    "text": "semi so the format of this file is pretty pretty simple which also gives us an opportunity to showcase how to use",
    "start": "1233000",
    "end": "1240039"
  },
  {
    "text": "Intel PT in in in action um let's",
    "start": "1240039",
    "end": "1247158"
  },
  {
    "text": "see so I wrote a program in um in",
    "start": "1247400",
    "end": "1252919"
  },
  {
    "text": "Zig uh to solve this um I'll go through it is it too",
    "start": "1252919",
    "end": "1258000"
  },
  {
    "text": "small can you see it the people in in the back yeah just shout if I if I I should",
    "start": "1258000",
    "end": "1265159"
  },
  {
    "text": "increase the the size of the text okay uh I'll gloss over some of the details",
    "start": "1265159",
    "end": "1271960"
  },
  {
    "text": "uh they are just setup of uh threads and reading of the file and yeah uh these",
    "start": "1271960",
    "end": "1277080"
  },
  {
    "text": "things um but um the task itself is",
    "start": "1277080",
    "end": "1283240"
  },
  {
    "text": "really simple it's just uh you take a file read it by line split by the semi",
    "start": "1283240",
    "end": "1288799"
  },
  {
    "text": "and uh you get this city so you parse the string for the city and uh uh the",
    "start": "1288799",
    "end": "1294039"
  },
  {
    "text": "float and uh you aggregate all the things and you just yeah uh mix it",
    "start": "1294039",
    "end": "1299240"
  },
  {
    "text": "there's a small catch that um in the uh task you're supposed to um get the",
    "start": "1299240",
    "end": "1306360"
  },
  {
    "text": "minimum value of each City the maximum value of each City and uh the mean",
    "start": "1306360",
    "end": "1311400"
  },
  {
    "text": "temperature for each City so now we need to keep some state to uh to figure out",
    "start": "1311400",
    "end": "1317240"
  },
  {
    "text": "uh what's actually uh the correct numbers there um",
    "start": "1317240",
    "end": "1322960"
  },
  {
    "text": "so the logic is uh pretty simple so uh I won't go through it too much but um The",
    "start": "1322960",
    "end": "1331760"
  },
  {
    "text": "Challenge here is it's one billion lines so suddenly all of the simpler simpler",
    "start": "1331760",
    "end": "1339480"
  },
  {
    "text": "ways to do this is thrown out the window so the the Nave version runs in like 3",
    "start": "1339480",
    "end": "1346720"
  },
  {
    "text": "minutes or something where just uh read line split and do things it takes a lot of time because it's so many lines uh so",
    "start": "1346720",
    "end": "1354559"
  },
  {
    "text": "what do you do um I just read bite per bite and if I get the uh uh semi I slurp",
    "start": "1354559",
    "end": "1363039"
  },
  {
    "text": "the name so I just keep that in in mind and uh afterwards I uh go through",
    "start": "1363039",
    "end": "1370039"
  },
  {
    "text": "the check if the number is negative and I do some maths and when I've got it I",
    "start": "1370039",
    "end": "1376600"
  },
  {
    "text": "just insert it into a string uh hash table uh for lookup later and if it's",
    "start": "1376600",
    "end": "1383039"
  },
  {
    "text": "already existing I do the min max mean thing and uh spit it out in the end I",
    "start": "1383039",
    "end": "1389039"
  },
  {
    "text": "join up all the results and uh print it so uh let's just run it real",
    "start": "1389039",
    "end": "1396960"
  },
  {
    "text": "quick uh so this is the uh I can do it a bit bigger so this is the result for uh",
    "start": "1396960",
    "end": "1403200"
  },
  {
    "text": "this small file uh the only interesting thing here is uh Istanbul which is the",
    "start": "1403200",
    "end": "1408720"
  },
  {
    "text": "only city that occurs twice so uh we get two temperatures uh so we get the min max and the mean all",
    "start": "1408720",
    "end": "1415600"
  },
  {
    "text": "the others aren't that interesting because yeah they are only um uh yeah",
    "start": "1415600",
    "end": "1422200"
  },
  {
    "text": "occurring once so let's trace this and see what's actually happening",
    "start": "1422200",
    "end": "1427880"
  },
  {
    "text": "inside okay so that's it I've already traced it uh I run it in the Big File uh",
    "start": "1432360",
    "end": "1438520"
  },
  {
    "text": "um and you can see that perf has already taken a snapshot of 8 and a half half megabytes uh so that's quite a lot of",
    "start": "1438520",
    "end": "1445799"
  },
  {
    "text": "data and um it now has to decode all the things",
    "start": "1445799",
    "end": "1451360"
  },
  {
    "text": "so now it now we need to look up all the symbol tables and try to map all these packets and instructions to uh actual uh",
    "start": "1451360",
    "end": "1459159"
  },
  {
    "text": "useful data which takes some time and um we can now plop it into a really nice",
    "start": "1459159",
    "end": "1465480"
  },
  {
    "text": "tool which is called Magic Trace um this is a tool from the people at uh",
    "start": "1465480",
    "end": "1471640"
  },
  {
    "text": "Jane Street uh a highfrequency trading uh uh company from New York um this is",
    "start": "1471640",
    "end": "1480320"
  },
  {
    "text": "actually it is the fuchsia uh Tracer I think the Google OS",
    "start": "1480320",
    "end": "1487120"
  },
  {
    "text": "yeah uh I don't know too much about that but this is a a modified version to get even more granular tracing uh than",
    "start": "1487120",
    "end": "1496440"
  },
  {
    "text": "that so this the 8 megabytes they are now 239 megabytes so um I hope that we will",
    "start": "1496440",
    "end": "1505279"
  },
  {
    "text": "able to render this uh right now otherwise I'll have to try to take an",
    "start": "1505279",
    "end": "1511399"
  },
  {
    "text": "even smaller snapshot let's",
    "start": "1511399",
    "end": "1516000"
  },
  {
    "text": "see okay seems it work uh",
    "start": "1519960",
    "end": "1525559"
  },
  {
    "text": "yeah so what do we have here we have have um is it too small by the way the",
    "start": "1525559",
    "end": "1531360"
  },
  {
    "text": "text is going to be small here anyway so yeah just bear with me",
    "start": "1531360",
    "end": "1537720"
  },
  {
    "text": "um what we can do now is to examine this Trace so the interesting part of this",
    "start": "1537720",
    "end": "1544080"
  },
  {
    "text": "Trace is happening not in this huge block here this is just a bit of noise",
    "start": "1544080",
    "end": "1551080"
  },
  {
    "text": "but if you watch really closely down here on the",
    "start": "1551080",
    "end": "1556960"
  },
  {
    "text": "side come on on show",
    "start": "1556960",
    "end": "1562840"
  },
  {
    "text": "me yeah there you are so here we",
    "start": "1562960",
    "end": "1568240"
  },
  {
    "text": "go so we have a traced okay so now we're down",
    "start": "1568240",
    "end": "1574960"
  },
  {
    "text": "at an one iteration of a line which in this case took uh 500",
    "start": "1574960",
    "end": "1581440"
  },
  {
    "text": "NS um which is you know past the slow considering uh but what's really cool is",
    "start": "1581440",
    "end": "1587720"
  },
  {
    "text": "that now we can actually uh watch and see what happened so we did the uh slurp",
    "start": "1587720",
    "end": "1593520"
  },
  {
    "text": "name which I showed you real quick and slurp temperature which is also a thing",
    "start": "1593520",
    "end": "1599600"
  },
  {
    "text": "and uh we do the hash so we do the string context uh hash and the",
    "start": "1599600",
    "end": "1606960"
  },
  {
    "text": "equals uh and this is uh happening uh quickly in a loop uh we have two two",
    "start": "1606960",
    "end": "1612760"
  },
  {
    "text": "traces uh two instances of it here uh and one really big one which is coincides with with me just killing the",
    "start": "1612760",
    "end": "1619159"
  },
  {
    "text": "application so you get this really big uh Trace in the end which isn't too",
    "start": "1619159",
    "end": "1624919"
  },
  {
    "text": "interesting uh apart from you can see uh watch the cleanup",
    "start": "1624919",
    "end": "1631279"
  },
  {
    "text": "uh and oh yeah here we have some more traces uh during the before we die so as",
    "start": "1631279",
    "end": "1639240"
  },
  {
    "text": "you can tell you get pretty granular results here so yeah this is us",
    "start": "1639240",
    "end": "1646799"
  },
  {
    "text": "looping uh which is pretty awesome um you can if we're lucky you can see these",
    "start": "1646799",
    "end": "1653919"
  },
  {
    "text": "outliers uh what are they so this is a page fault this is my",
    "start": "1653919",
    "end": "1660679"
  },
  {
    "text": "application just having to do stuff to to fetch more data and we",
    "start": "1660679",
    "end": "1667720"
  },
  {
    "text": "have this this is uh a timer interrupt from yeah the time sharing",
    "start": "1667720",
    "end": "1675559"
  },
  {
    "text": "uh uh process scheduler in the operating system so you can actually see that this",
    "start": "1675559",
    "end": "1681240"
  },
  {
    "text": "takes quite a while uh to uh and gives us these contact switches and uh yeah",
    "start": "1681240",
    "end": "1688039"
  },
  {
    "text": "takes time so presumably if you that process to a core you wouldn't interrup",
    "start": "1688039",
    "end": "1696039"
  },
  {
    "text": "that's right yeah and uh in U traces with only one uh uh one thread you",
    "start": "1696039",
    "end": "1704080"
  },
  {
    "text": "likely won't either uh because there's no contact switching going on and you can actually see here that uh",
    "start": "1704080",
    "end": "1710919"
  },
  {
    "text": "from each page Vault to page Vault it takes around a millisecond pretty consistently every millisecond we get a",
    "start": "1710919",
    "end": "1717360"
  },
  {
    "text": "p page fault which is interesting and also every millisecond we get this uh",
    "start": "1717360",
    "end": "1722919"
  },
  {
    "text": "schedu timeout which is something I didn't know I had actually no idea that that that's",
    "start": "1722919",
    "end": "1729440"
  },
  {
    "text": "how it works in inside of Linux so um we we can see some issues",
    "start": "1729440",
    "end": "1735600"
  },
  {
    "text": "here with the code of course uh we can see that we spend the majority of",
    "start": "1735600",
    "end": "1742480"
  },
  {
    "text": "the time doing the hashing so the quickest way to optimize this would be to make a better hash or a better data",
    "start": "1742480",
    "end": "1750399"
  },
  {
    "text": "structure or something so that we don't have to spend so much time on these lookups so that's what I did um I made a",
    "start": "1750399",
    "end": "1758880"
  },
  {
    "text": "different version uh where Sig has a really nice feature where you can uh Supply this uh",
    "start": "1758880",
    "end": "1765960"
  },
  {
    "text": "other way of hashing so you can just give it a context and it'll get the hash function and the equal function um so I",
    "start": "1765960",
    "end": "1774679"
  },
  {
    "text": "invented uh terrible but uh functional uh hashing mechanism uh for this task uh",
    "start": "1774679",
    "end": "1781799"
  },
  {
    "text": "you get uh a u32 in and you just pass it through so you don't do anything and the",
    "start": "1781799",
    "end": "1787519"
  },
  {
    "text": "equals is just a comparison of two U 32s so that's also very fast um during the parsing of the file I",
    "start": "1787519",
    "end": "1797159"
  },
  {
    "text": "uh while um while I read uh the bytes I per line uh just accumulate the key so",
    "start": "1797159",
    "end": "1806200"
  },
  {
    "text": "uh I do this very safe and secure uh key",
    "start": "1806200",
    "end": "1811399"
  },
  {
    "text": "algorithm uh which cannot Collide ever uh of course it can but it doesn't",
    "start": "1811399",
    "end": "1818600"
  },
  {
    "text": "in the data set so I'm fine uh so I just multiply the key with 31 and add uh the character for a good",
    "start": "1818600",
    "end": "1826840"
  },
  {
    "text": "measure uh so now we don't have a a string map to do the um",
    "start": "1826840",
    "end": "1833200"
  },
  {
    "text": "comparisons uh so everything else is the same I do the same getter put and yeah everything so let's uh run",
    "start": "1833200",
    "end": "1841120"
  },
  {
    "text": "this and let's uh just confirm that it still works we get the estol with the uh",
    "start": "1841120",
    "end": "1847880"
  },
  {
    "text": "the mean and yeah whatnot and then we do the trace",
    "start": "1847880",
    "end": "1854760"
  },
  {
    "text": "yeah so it's still 8 megabytes hopefully we'll be fine the mag the magic Trace application",
    "start": "1858240",
    "end": "1865279"
  },
  {
    "text": "it dies when the trace is too big so um it uh expands to something like 2",
    "start": "1865279",
    "end": "1870799"
  },
  {
    "text": "gigabytes of RAM in this uh thing and it's just yeah can't handle it so",
    "start": "1870799",
    "end": "1876080"
  },
  {
    "text": "hopefully we're fine but this uh unfortunately takes a bit of time any questions while this uh",
    "start": "1876080",
    "end": "1884080"
  },
  {
    "text": "runs yeah in the back uh yeah so the question is is there",
    "start": "1884080",
    "end": "1890519"
  },
  {
    "text": "anything similar for arm uh there is and isn't um uh there is something that",
    "start": "1890519",
    "end": "1899320"
  },
  {
    "text": "looks the same I don't remember the name of it right now but uh it doesn't have",
    "start": "1899320",
    "end": "1904840"
  },
  {
    "text": "the same tooling as for now but uh hopefully uh yeah we'll we'll see it in",
    "start": "1904840",
    "end": "1911600"
  },
  {
    "text": "not to decent future um did it finish yeah so it finished uh yeah no",
    "start": "1911600",
    "end": "1919159"
  },
  {
    "text": "worries this",
    "start": "1919159",
    "end": "1922399"
  },
  {
    "text": "magicare yes it uses the it's an application written in oaml uh it uh uses the raw data from",
    "start": "1928399",
    "end": "1935639"
  },
  {
    "text": "perf and it uh uh just uh transforms it to the format that's used in the fuchsia",
    "start": "1935639",
    "end": "1942000"
  },
  {
    "text": "uh Tracer from from Google uh so uh it's it's it's quite simple simple transform",
    "start": "1942000",
    "end": "1948480"
  },
  {
    "text": "information but but yeah that's basically it so let's see if we can find",
    "start": "1948480",
    "end": "1954279"
  },
  {
    "text": "the um the trace now so here we",
    "start": "1954279",
    "end": "1961440"
  },
  {
    "text": "go okay so we see we still we still have the page faults and the uh uh timer uh",
    "start": "1961440",
    "end": "1969080"
  },
  {
    "text": "things but we haven't addressed that yet so that's not a big concern right now uh",
    "start": "1969080",
    "end": "1975200"
  },
  {
    "text": "but we can still see uh that we do the same the algor algorithm is still the same we do the uh the name and the key",
    "start": "1975200",
    "end": "1983080"
  },
  {
    "text": "uh temperature and then we do the hashing but now this is much uh less",
    "start": "1983080",
    "end": "1988320"
  },
  {
    "text": "going on here now the uh hash function itself it's this one and it",
    "start": "1988320",
    "end": "1996720"
  },
  {
    "text": "takes yeah one nond which would now uh in with a",
    "start": "1996720",
    "end": "2002519"
  },
  {
    "text": "billion lines that would this would um account for 1 second uh of the whole processing time given that you do it in",
    "start": "2002519",
    "end": "2009000"
  },
  {
    "text": "one thread uh the same thing applies for uh the",
    "start": "2009000",
    "end": "2015240"
  },
  {
    "text": "equals is one second one Nan as well so so now we're pretty good on on the time",
    "start": "2015240",
    "end": "2020519"
  },
  {
    "text": "here yeah is it actually one n or is",
    "start": "2020519",
    "end": "2025679"
  },
  {
    "text": "not yeah it's uh yeah the question was is this",
    "start": "2028039",
    "end": "2033639"
  },
  {
    "text": "actually a wall clock type of nanc did it actually take this much time the answer is yeah kind of uh the answer",
    "start": "2033639",
    "end": "2042919"
  },
  {
    "text": "is that it it did uh in general but um because the Intel PT tracing is a bit uh",
    "start": "2042919",
    "end": "2049398"
  },
  {
    "text": "inaccurate in some uh some uh manners uh it uses a combination of a wall clock",
    "start": "2049399",
    "end": "2054960"
  },
  {
    "text": "and CPU cycle um calculation so um in general I think you can just uh",
    "start": "2054960",
    "end": "2063560"
  },
  {
    "text": "consider it as a one to one in the timing but uh there are some edge cases is here that uh deeper reading into the",
    "start": "2063560",
    "end": "2070800"
  },
  {
    "text": "manual is uh uh required to to really understand uh but now we're getting",
    "start": "2070800",
    "end": "2076638"
  },
  {
    "text": "better here uh there is there are less things going on um but we have these",
    "start": "2076639",
    "end": "2083280"
  },
  {
    "text": "page faults and these uh timer uh events so we need to get rid of them and",
    "start": "2083280",
    "end": "2090358"
  },
  {
    "text": "that's actually pretty simple um what we do is we do",
    "start": "2090359",
    "end": "2098599"
  },
  {
    "text": "uh no sorry it's uh four um we do in addition to the memory",
    "start": "2098599",
    "end": "2104839"
  },
  {
    "text": "mapping of the file and mapping of uh the file that we have done already in the other examples as well we now use M",
    "start": "2104839",
    "end": "2114200"
  },
  {
    "text": "advice so now now we just tell the uh the operating system that yeah I'm going to read the whole thing just give it to",
    "start": "2114440",
    "end": "2120320"
  },
  {
    "text": "me just be prepared I will read it um in addition there's another change here",
    "start": "2120320",
    "end": "2128920"
  },
  {
    "text": "um as you can tell from the comment um we know the name start and end uh and",
    "start": "2128920",
    "end": "2137200"
  },
  {
    "text": "now we aren't using the uh name uh as the key anymore just using the int so",
    "start": "2137200",
    "end": "2143480"
  },
  {
    "text": "there's no need to calculate it for all the billion lines uh we can only uh we only need to",
    "start": "2143480",
    "end": "2149079"
  },
  {
    "text": "calculate it on the first uh insertion uh so the first time we see a new entry we have to calculate it uh so that's",
    "start": "2149079",
    "end": "2156920"
  },
  {
    "text": "what we did so that reduces the N the amount of times that we uh get this name",
    "start": "2156920",
    "end": "2163359"
  },
  {
    "text": "uh from 1 billion to 413 which is also very nice optimization it looks like you have a",
    "start": "2163359",
    "end": "2171160"
  },
  {
    "text": "question so",
    "start": "2171160",
    "end": "2174520"
  },
  {
    "text": "the N so what was it before I kind of yeah",
    "start": "2179200",
    "end": "2184680"
  },
  {
    "text": "yeah I'm sorry I didn't actually show it to you it's a around 50 uh sorry 500 nond each so you get uh",
    "start": "2184680",
    "end": "2193359"
  },
  {
    "text": "yeah a lot of it um yeah was a big Improvement yeah huge Improvement I should have shown that I can do it if I",
    "start": "2193359",
    "end": "2199640"
  },
  {
    "text": "have time afterwards uh but um uh one",
    "start": "2199640",
    "end": "2204920"
  },
  {
    "text": "thing to keep in mind is that this is running a debug build of Sig so right now we we haven't enabled all the",
    "start": "2204920",
    "end": "2211599"
  },
  {
    "text": "optimization that the SE compiler can do anyway so the timings here are a bit yeah we can do better just by uh upping",
    "start": "2211599",
    "end": "2218839"
  },
  {
    "text": "our compiler um so yeah let's um run",
    "start": "2218839",
    "end": "2223880"
  },
  {
    "text": "this uh so make run we are still good on the result which is",
    "start": "2223880",
    "end": "2229040"
  },
  {
    "text": "nice uh and now let's do the uh",
    "start": "2229040",
    "end": "2234079"
  },
  {
    "text": "Trace yes I got a smaller Trace so it'll take a bit",
    "start": "2235000",
    "end": "2241119"
  },
  {
    "text": "shorter um I can see if I can also show you the uh cleanup of the application",
    "start": "2241119",
    "end": "2247000"
  },
  {
    "text": "while this is uh doing its thing yeah so when the main thread dies",
    "start": "2247000",
    "end": "2255319"
  },
  {
    "text": "uh we also get to look at uh how uh it",
    "start": "2255319",
    "end": "2260440"
  },
  {
    "text": "cleans up the memory mapping and uh yeah so now you can really dive into what the",
    "start": "2260440",
    "end": "2266400"
  },
  {
    "text": "kernel is doing and what the application is actually doing while cleaning up which is also quite interesting so this",
    "start": "2266400",
    "end": "2272400"
  },
  {
    "text": "opens up a huge amount of uh possibilities to dig I think we can still assume yeah it's just struggling",
    "start": "2272400",
    "end": "2279480"
  },
  {
    "text": "with the size of the thing so now we're yeah so now we're really down in the N",
    "start": "2279480",
    "end": "2286200"
  },
  {
    "text": "so these are the Yeah couple of nanocs in one iteration of cleaning up uh the memory",
    "start": "2286200",
    "end": "2291680"
  },
  {
    "text": "mapping uh so this is a great place to find uh yeah page faults and uh all all",
    "start": "2291680",
    "end": "2297680"
  },
  {
    "text": "sorts of fun things that's happening in your application and uh I I think this is",
    "start": "2297680",
    "end": "2302920"
  },
  {
    "text": "amazing to just you know zoom out o now it's struggling real",
    "start": "2302920",
    "end": "2310760"
  },
  {
    "text": "hard this is probably also page fault so yeah and our how is the trace",
    "start": "2316000",
    "end": "2324280"
  },
  {
    "text": "yeah it's done so let's get the last one",
    "start": "2324280",
    "end": "2330119"
  },
  {
    "text": "okay so uh it seemed like it didn't work which is really interesting seems like",
    "start": "2338480",
    "end": "2345599"
  },
  {
    "text": "we still get the um uh page faults and uh still get the uh uh system",
    "start": "2345599",
    "end": "2355440"
  },
  {
    "text": "timers uh and we can fix that but let's just look uh at the rest of the thing",
    "start": "2355440",
    "end": "2361560"
  },
  {
    "text": "now we can see that the uh name is gone so there's nothing happening now for the",
    "start": "2361560",
    "end": "2367119"
  },
  {
    "text": "name um everything else is still the same so how do we fix these",
    "start": "2367119",
    "end": "2375000"
  },
  {
    "text": "interrupts let's do uh the uh I think it's make fast yeah uh so let's trace",
    "start": "2375000",
    "end": "2383720"
  },
  {
    "text": "the fast uh now I've just uh compiled it with uh optimization release fast",
    "start": "2383720",
    "end": "2391319"
  },
  {
    "text": "um yeah uh it's faster so now it was uh able to to to collect more stuff",
    "start": "2410720",
    "end": "2418560"
  },
  {
    "text": "yeah uh but uh I I'm not sure if you noticed but the decoding was",
    "start": "2418560",
    "end": "2423839"
  },
  {
    "text": "faster um which is um kind of strange maybe but we'll get the answer to that",
    "start": "2423839",
    "end": "2430599"
  },
  {
    "text": "pretty pretty soon so um now let's zoom out a bit and",
    "start": "2430599",
    "end": "2439680"
  },
  {
    "text": "uh just find everything",
    "start": "2439680",
    "end": "2446400"
  },
  {
    "text": "yeah come on do your",
    "start": "2446520",
    "end": "2450839"
  },
  {
    "text": "thing yeah okay so here",
    "start": "2453000",
    "end": "2458400"
  },
  {
    "text": "nope yeah now this is the code uh I I I'm not sure actually why the uh uh",
    "start": "2459800",
    "end": "2466960"
  },
  {
    "text": "interrupts and uh are still happening uh right now I'm",
    "start": "2466960",
    "end": "2472240"
  },
  {
    "text": "probably it's because I'm sharing my screen or something uh but what you can see is that the code is gone there is no",
    "start": "2472240",
    "end": "2478480"
  },
  {
    "text": "longer any code executing uh and that's because everything is optimized away so uh now",
    "start": "2478480",
    "end": "2485839"
  },
  {
    "text": "everything is inlined all the yeah all the stuff is gone so",
    "start": "2485839",
    "end": "2491000"
  },
  {
    "text": "it it isn't happening anymore none of the package is sent because there there's nothing to send the application",
    "start": "2491000",
    "end": "2497359"
  },
  {
    "text": "now is is so highly optimized that there are very few packages that we trigger we trigger no calls because everything is",
    "start": "2497359",
    "end": "2503440"
  },
  {
    "text": "inlined Trigg no returns because everything is inlined and yeah and the ifs are probably just conditionals are",
    "start": "2503440",
    "end": "2509839"
  },
  {
    "text": "optimized away and yeah so now it runs very fast so I think I have the uh yeah",
    "start": "2509839",
    "end": "2516920"
  },
  {
    "text": "run fast so uh if we're lucky this will",
    "start": "2516920",
    "end": "2523480"
  },
  {
    "text": "work yeah so it now it took two and a half seconds to run through uh the whole",
    "start": "2523480",
    "end": "2528680"
  },
  {
    "text": "billion uh line file uh which is kind of good the um from The Challenge uh one of",
    "start": "2528680",
    "end": "2536280"
  },
  {
    "text": "the best results there was at a 1 and a half second and uh it's running on a uh",
    "start": "2536280",
    "end": "2541880"
  },
  {
    "text": "Stronger computer than mine so yeah I'm not sure where where this uh will end up but it's it's pretty fast but it's fun",
    "start": "2541880",
    "end": "2548680"
  },
  {
    "text": "so uh how does this relate if at all to my introduction with us going down in",
    "start": "2548680",
    "end": "2555800"
  },
  {
    "text": "production uh it kind of doesn't but it kind of does uh when debugging these sorts of",
    "start": "2555800",
    "end": "2563440"
  },
  {
    "text": "production issues um we have faced a lot of uh problems because um a lot of it a",
    "start": "2563440",
    "end": "2570960"
  },
  {
    "text": "lot of it is isn't really visible um much of our stack uses the",
    "start": "2570960",
    "end": "2576160"
  },
  {
    "text": "technology like spring boot with Java and other Frameworks uh and uh other uh",
    "start": "2576160",
    "end": "2584319"
  },
  {
    "text": "Magic type of uh uh technology uh and they offer very little",
    "start": "2584319",
    "end": "2590079"
  },
  {
    "text": "insight really either because they are running on the jvm which is a bit hard to use this kind of tracing for because",
    "start": "2590079",
    "end": "2595920"
  },
  {
    "text": "of the uh yeah translation from bite code um but uh more so when you do tracing",
    "start": "2595920",
    "end": "2605359"
  },
  {
    "text": "even even though even if it's sampling BAS based or if it's uh uh execution",
    "start": "2605359",
    "end": "2610599"
  },
  {
    "text": "based like this in these types of application you get this enormous uh pillar in a flame",
    "start": "2610599",
    "end": "2619240"
  },
  {
    "text": "graph which is said spring framework which you know it's a meter tall and",
    "start": "2619240",
    "end": "2624720"
  },
  {
    "text": "then you see your own code is like just a tiny tiny tiny spot on the on the on",
    "start": "2624720",
    "end": "2631319"
  },
  {
    "text": "the end of it so the only logical conclusion you can make is that it's not my fault right",
    "start": "2631319",
    "end": "2637680"
  },
  {
    "text": "because the application is it's not me it's the framework is yeah it's doing",
    "start": "2637680",
    "end": "2643079"
  },
  {
    "text": "its thing and these people are definitely smarter than me right they",
    "start": "2643079",
    "end": "2648559"
  },
  {
    "text": "these are geniuses writing these uh super uh Frameworks and I'm just this little dude from Bergen so who am I to",
    "start": "2648559",
    "end": "2655920"
  },
  {
    "text": "really question what's happening uh so it leads into this uh",
    "start": "2655920",
    "end": "2661359"
  },
  {
    "text": "spiral of conclusion that that are really wrong H in my opinion and I'll",
    "start": "2661359",
    "end": "2666680"
  },
  {
    "text": "show you one thing that we did uh using magic Trace in the process",
    "start": "2666680",
    "end": "2672280"
  },
  {
    "text": "to alleviate a lot of this pain um I wrote a library in in",
    "start": "2672280",
    "end": "2679040"
  },
  {
    "text": "go um it's super simple uh so one of the tasks that we do is that we persist some",
    "start": "2679040",
    "end": "2686240"
  },
  {
    "text": "data to a database and then we want to fire that uh event uh Downstream to some",
    "start": "2686240",
    "end": "2691680"
  },
  {
    "text": "other listeners so uh uh we want to communicate some event or we want to store something and ship it for some",
    "start": "2691680",
    "end": "2697960"
  },
  {
    "text": "some reason uh we've used a technology called deum it's not really relevant to name it",
    "start": "2697960",
    "end": "2704160"
  },
  {
    "text": "but it's called deum Uh this is a a widely used uh quite",
    "start": "2704160",
    "end": "2711680"
  },
  {
    "text": "optimized uh application that uses post's uh uh write ahead log so if you",
    "start": "2711680",
    "end": "2718119"
  },
  {
    "text": "write to uh persist to the database you can get a log of what happened in a transaction so you get these nice",
    "start": "2718119",
    "end": "2723520"
  },
  {
    "text": "benefits of uh um of um uh knowing the order of uh what happened",
    "start": "2723520",
    "end": "2729760"
  },
  {
    "text": "when and all of these things so you get this guarantee um so you get to avoid the double right problem where you try",
    "start": "2729760",
    "end": "2736599"
  },
  {
    "text": "to persist to a to a database and you try to send something something to Kafka one of them fails and now you have",
    "start": "2736599",
    "end": "2742160"
  },
  {
    "text": "inconsistent State uh so you avoid that using the divisum um the problem is that it takes",
    "start": "2742160",
    "end": "2748839"
  },
  {
    "text": "almost a second per message for the visum to do its thing which is a lot uh",
    "start": "2748839",
    "end": "2756240"
  },
  {
    "text": "at least I think it is um so I just kind of made my own",
    "start": "2756240",
    "end": "2762480"
  },
  {
    "text": "deum this is using uh a different technology from postgress called listen notify um have you used it anybody no",
    "start": "2762480",
    "end": "2770760"
  },
  {
    "text": "it's uh just a very simple uh thing you uh register a function inside of uh",
    "start": "2770760",
    "end": "2776880"
  },
  {
    "text": "postgress uh and you you just say if this happens just uh shoot a notify and",
    "start": "2776880",
    "end": "2783400"
  },
  {
    "text": "uh you can have listeners so uh you can make post just fire out an event to you",
    "start": "2783400",
    "end": "2788880"
  },
  {
    "text": "and you can listen to it and uh act accordingly so what this uh application",
    "start": "2788880",
    "end": "2793960"
  },
  {
    "text": "does is that it uh starts uh um up uh a",
    "start": "2793960",
    "end": "2799920"
  },
  {
    "text": "service with some handlers that can just um uh that you configure yourself",
    "start": "2799920",
    "end": "2805160"
  },
  {
    "text": "individually per application where you use it and uh you can um uh just sit and",
    "start": "2805160",
    "end": "2810559"
  },
  {
    "text": "wait so the listen method function itself is doing this it says uh wait for",
    "start": "2810559",
    "end": "2817119"
  },
  {
    "text": "notification so you're sitting like a dog waiting for a treat with an open connection to the database and",
    "start": "2817119",
    "end": "2822400"
  },
  {
    "text": "just right and uh so when something happens you just take it and fire it back into kovka as quickly as you can um",
    "start": "2822400",
    "end": "2830400"
  },
  {
    "text": "and it's not really more to it that's what we need and that's so that's what we made this took",
    "start": "2830400",
    "end": "2836640"
  },
  {
    "text": "me uh four or five hours uh one day to write it's like 200 lines of code it's",
    "start": "2836640",
    "end": "2844319"
  },
  {
    "text": "really nothing so you don't you don't have to be smart you don't have to be",
    "start": "2844319",
    "end": "2849520"
  },
  {
    "text": "you know one of these huge framework Geniuses to make this it's just very",
    "start": "2849520",
    "end": "2855040"
  },
  {
    "text": "simple you just have an open connection and poop it out and um yeah so um I'll",
    "start": "2855040",
    "end": "2862200"
  },
  {
    "text": "show you uh how it works uh to do that we need uh a whole Kafka cluster so I'll",
    "start": "2862200",
    "end": "2869160"
  },
  {
    "text": "fire up a uh CFA cluster of uh with three three",
    "start": "2869160",
    "end": "2874240"
  },
  {
    "text": "nodes uh and um just a",
    "start": "2874240",
    "end": "2879119"
  },
  {
    "text": "second there you go um and uh we will fire up the application as well I'll",
    "start": "2879359",
    "end": "2885480"
  },
  {
    "text": "trigger two messages and we can just watch uh the",
    "start": "2885480",
    "end": "2889838"
  },
  {
    "text": "latency it'll take some seconds to do its thing creates the creates the topics",
    "start": "2899040",
    "end": "2904520"
  },
  {
    "text": "it starts up the thing so soon it'll tell us that it's listening yeah so now I start magic",
    "start": "2904520",
    "end": "2911440"
  },
  {
    "text": "Trace again uh tracing my application so now fired one event wait a couple of",
    "start": "2911440",
    "end": "2918400"
  },
  {
    "text": "seconds and fires another one uh so let's stop magic trace and uh so these",
    "start": "2918400",
    "end": "2926880"
  },
  {
    "text": "are the two events uh let's go back into emx for a second and just look at the time stamps",
    "start": "2926880",
    "end": "2934079"
  },
  {
    "text": "here so postgress reports and the first event Was Written 250 milliseconds into",
    "start": "2934079",
    "end": "2940559"
  },
  {
    "text": "this second and 5 seconds later it's at",
    "start": "2940559",
    "end": "2945119"
  },
  {
    "text": "287 that does not correspond to this the first here so that means the first event",
    "start": "2946280",
    "end": "2953200"
  },
  {
    "text": "here took 750 milliseconds for the second from",
    "start": "2953200",
    "end": "2958720"
  },
  {
    "text": "287 to 293 so that only to took uh 6 milliseconds",
    "start": "2958720",
    "end": "2964480"
  },
  {
    "text": "why um this is really interesting interesting because this shows uh what kinds of subtle bugs you can find uh",
    "start": "2964480",
    "end": "2971720"
  },
  {
    "text": "with uh Magic trace and Intel PT tracing in general so let's look at",
    "start": "2971720",
    "end": "2978558"
  },
  {
    "text": "it okay so uh the reason I did the uh example first is because we could just",
    "start": "2981760",
    "end": "2988119"
  },
  {
    "text": "run that in one thread and the code is simpler so it's uh yeah it's more easy to get a feel of what magic Trace works",
    "start": "2988119",
    "end": "2994599"
  },
  {
    "text": "like uh looks like but um now we're running in many threads and",
    "start": "2994599",
    "end": "2999760"
  },
  {
    "text": "uh yeah it's uh uh no sorry I'm just have to find the",
    "start": "2999760",
    "end": "3006160"
  },
  {
    "text": "uh correct uh Trace samples up Trace so",
    "start": "3006160",
    "end": "3013040"
  },
  {
    "text": "this is it okay so um we can now see that the first uh",
    "start": "3013040",
    "end": "3023359"
  },
  {
    "text": "producing here is doing all of this authentication",
    "start": "3023359",
    "end": "3028880"
  },
  {
    "text": "stuff sule so every time we see sule inside of uh this application it means that we are re-authenticating so we are",
    "start": "3028880",
    "end": "3035880"
  },
  {
    "text": "spending a lot of time handshaking with a CF cluster to uh establish our",
    "start": "3035880",
    "end": "3041040"
  },
  {
    "text": "connection which takes a lot of time is that a problem it might not be but it is",
    "start": "3041040",
    "end": "3047720"
  },
  {
    "text": "because this happens uh every between 5 and 10 minutes so it",
    "start": "3047720",
    "end": "3053240"
  },
  {
    "text": "means that if we have an idle uh time in our application now we're likely that we will get a",
    "start": "3053240",
    "end": "3058720"
  },
  {
    "text": "latency penalty for the first thing which is unacceptable um so how do you deal with",
    "start": "3058720",
    "end": "3065559"
  },
  {
    "text": "this uh I can try to find the uh just for uh to make a point of",
    "start": "3065559",
    "end": "3073839"
  },
  {
    "text": "it I can try no I don't want to spend time doing that the the second one we saw is really quick it's because it",
    "start": "3073839",
    "end": "3079240"
  },
  {
    "text": "doesn't do any of the sule things so we um do make uh",
    "start": "3079240",
    "end": "3088558"
  },
  {
    "text": "new just give it some",
    "start": "3090839",
    "end": "3094559"
  },
  {
    "text": "time emac is fun because it can't handle this fancy Docker compost thing so it just has to print it out as fast as it",
    "start": "3108000",
    "end": "3114559"
  },
  {
    "text": "can okay so we're building the",
    "start": "3114559",
    "end": "3121880"
  },
  {
    "text": "application and soon we're",
    "start": "3126799",
    "end": "3130640"
  },
  {
    "text": "listening there we go so first",
    "start": "3133760",
    "end": "3141720"
  },
  {
    "text": "event and second event and and I'll stop the",
    "start": "3141720",
    "end": "3147960"
  },
  {
    "text": "trace okay so let's look at the timings again the first one was",
    "start": "3147960",
    "end": "3154400"
  },
  {
    "text": "7:53 which is now uh 7 milliseconds so we we",
    "start": "3154400",
    "end": "3159680"
  },
  {
    "text": "won uh the other one 784 is now 789 so that's 5 milliseconds so we did we",
    "start": "3159680",
    "end": "3166559"
  },
  {
    "text": "managed to do both of them which is really nice um so what did it do",
    "start": "3166559",
    "end": "3171760"
  },
  {
    "text": "differently let's take a look it's so nice because you now you don't have to even",
    "start": "3171760",
    "end": "3178400"
  },
  {
    "text": "uh uh read the code anymore you can just trace it and figure out um so",
    "start": "3178400",
    "end": "3188960"
  },
  {
    "text": "um uh sorry it's a handle yeah so uh this is",
    "start": "3189119",
    "end": "3197200"
  },
  {
    "text": "it this is it yeah so it's 30 micros seconds of processing now why um now",
    "start": "3198599",
    "end": "3207160"
  },
  {
    "text": "this application firstly it's using a different uh Kafka Library which helps",
    "start": "3207160",
    "end": "3212400"
  },
  {
    "text": "uh but um more importantly uh now we're uh issuing heartbeat events to the CER",
    "start": "3212400",
    "end": "3218640"
  },
  {
    "text": "cluster so we're just ensuring that we stay stay awake so it's no no big thing",
    "start": "3218640",
    "end": "3224119"
  },
  {
    "text": "the solution isn't really wow that's super impressive it's actually very simple it's just don't do the bad thing",
    "start": "3224119",
    "end": "3230119"
  },
  {
    "text": "and do the good thing instead and uh this is very visible",
    "start": "3230119",
    "end": "3235839"
  },
  {
    "text": "using this kind kind of tracing uh in a way that I haven't seen before uh and",
    "start": "3235839",
    "end": "3241040"
  },
  {
    "text": "you can find these super subtle bugs uh well this wasn't really a bug but it was",
    "start": "3241040",
    "end": "3246599"
  },
  {
    "text": "uh a problem nonetheless uh so let me go back to",
    "start": "3246599",
    "end": "3253799"
  },
  {
    "text": "um to here yeah so we have the snipe slide and",
    "start": "3254240",
    "end": "3260920"
  },
  {
    "text": "uh yeah so um compared to the other uh",
    "start": "3260920",
    "end": "3267799"
  },
  {
    "text": "graphs I showed you in the beginning now this uh is a tracing for",
    "start": "3267799",
    "end": "3274640"
  },
  {
    "text": "uh I think it's a couple of days yeah just recently uh you can tell as you can tell we still have some outliers uh",
    "start": "3274640",
    "end": "3282760"
  },
  {
    "text": "around uh yeah a second but it's never you know 3 days anymore which is kind of",
    "start": "3282760",
    "end": "3289440"
  },
  {
    "text": "nice I can tell you but more importantly we can see that the hotpots here are all all situated",
    "start": "3289440",
    "end": "3296920"
  },
  {
    "text": "around uh 15 to 20 milliseconds which is kind of good we we're not uh high frequency Traders or anything so uh it's",
    "start": "3296920",
    "end": "3304200"
  },
  {
    "text": "not super important but more importantly what does this do to your",
    "start": "3304200",
    "end": "3310359"
  },
  {
    "text": "whole uh infrastructure um it's probably impossible to read but",
    "start": "3310359",
    "end": "3317440"
  },
  {
    "text": "uh on the top right left side hand side there uh it says uh",
    "start": "3317440",
    "end": "3323119"
  },
  {
    "text": "$800 uh so this is the cloud costs for uh our services uh combined uh and using",
    "start": "3323119",
    "end": "3334520"
  },
  {
    "text": "rewriting the things into this kind of simpler super simple architecture has reduced the cost from what around eight",
    "start": "3334520",
    "end": "3341480"
  },
  {
    "text": "over $800 a day to soon under $200 a day",
    "start": "3341480",
    "end": "3346920"
  },
  {
    "text": "which amounts to something like uh three and half million croners a year which is",
    "start": "3346920",
    "end": "3353039"
  },
  {
    "text": "kind of impressive uh at least considering that that would be a 70 80% decrease in Cloud",
    "start": "3353039",
    "end": "3360079"
  },
  {
    "text": "costs another pretty nice thing is that this application it hasn't had a bug yet",
    "start": "3360079",
    "end": "3365880"
  },
  {
    "text": "uh not one it hasn't had a production issue and it was written in just a couple of hours",
    "start": "3365880",
    "end": "3372720"
  },
  {
    "text": "and I hope that that kind of uh inventiveness uh will persist longer",
    "start": "3372720",
    "end": "3380880"
  },
  {
    "text": "than this uh addiction of using these Frameworks and libraries that we don't really understand and we can't really",
    "start": "3380880",
    "end": "3387280"
  },
  {
    "text": "inspect them and we have no idea what they're doing and we accept uh that they're there to stay and",
    "start": "3387280",
    "end": "3394559"
  },
  {
    "text": "was made by these Geniuses that are much smarter than us and uh they might be but they they are not they're not working in",
    "start": "3394559",
    "end": "3401480"
  },
  {
    "text": "my team with my things so it's uh impossible for them to actually make",
    "start": "3401480",
    "end": "3407400"
  },
  {
    "text": "something that's better than it is for us to do it and uh I said it had no bugs and that that's also not",
    "start": "3407400",
    "end": "3414400"
  },
  {
    "text": "because uh we are good or anything it's just because it's 200 lines of code so",
    "start": "3414400",
    "end": "3419839"
  },
  {
    "text": "if if there is a bug there you can fix it in 5 minutes it's not a problem it's not 15,000 lines of uh Magic uh spring",
    "start": "3419839",
    "end": "3429400"
  },
  {
    "text": "configuration Auto an annotation thing right uh which is also a huge huge",
    "start": "3429400",
    "end": "3438039"
  },
  {
    "text": "benefit so I really hope that um as a bigger message than and what said",
    "start": "3439240",
    "end": "3447520"
  },
  {
    "text": "earlier uh this Al also actually ties into the talk uh besides us I I think I",
    "start": "3447520",
    "end": "3452640"
  },
  {
    "text": "haven't heard the talk obviously but uh it's talking about Green Computing this is reducing Cloud costs to almost",
    "start": "3452640",
    "end": "3459280"
  },
  {
    "text": "nothing every single one of these applications uh that we used earlier uh",
    "start": "3459280",
    "end": "3464880"
  },
  {
    "text": "it spent around two and a half uh gigabytes of RAM and was idling on one",
    "start": "3464880",
    "end": "3470039"
  },
  {
    "text": "full CPU at a time all the time these applications are running at 5",
    "start": "3470039",
    "end": "3476480"
  },
  {
    "text": "megab of RAM and uh idling at zero seu it's it's nothing so so you know now you",
    "start": "3476480",
    "end": "3484400"
  },
  {
    "text": "can suddenly understand what you have and you don't have to pay almost anything to Jeff basis anymore which is",
    "start": "3484400",
    "end": "3489920"
  },
  {
    "text": "also a huge benefit so to me that's magic of a",
    "start": "3489920",
    "end": "3497280"
  },
  {
    "text": "trace thank you",
    "start": "3497280",
    "end": "3501480"
  },
  {
    "text": "[Applause]",
    "start": "3505240",
    "end": "3509650"
  }
]