[
  {
    "text": "and so just oh hello there hello",
    "start": "5560",
    "end": "11190"
  },
  {
    "text": "big air are you enjoying the conference more are you enjoying the conference",
    "start": "11190",
    "end": "17250"
  },
  {
    "text": "yeah let's just",
    "start": "17250",
    "end": "22600"
  },
  {
    "text": "that's better than in English crowd and it's certainly better than the guys in Norway D and checking that you're here",
    "start": "22600",
    "end": "27940"
  },
  {
    "text": "for the right talk it's obviously this is not the acing you are looking for and",
    "start": "27940",
    "end": "33129"
  },
  {
    "text": "that's what we're dealing with so this kind of came I've given a sink",
    "start": "33129",
    "end": "38920"
  },
  {
    "text": "talks before but this is a kind of I keep getting asked really similar questions in people",
    "start": "38920",
    "end": "45760"
  },
  {
    "text": "who can't be bothered going to Stack Overflow and seeing that John skeet answered it already and who sat just",
    "start": "45760",
    "end": "50769"
  },
  {
    "text": "there so if I get anything wrong he can correct me or Joe can correct me who's doing a talk on advanced async in the",
    "start": "50769",
    "end": "57519"
  },
  {
    "text": "next slot so yeah and they keep asking me questions or doing silly things and",
    "start": "57519",
    "end": "62800"
  },
  {
    "text": "taking a server action but you're by using async/await incorrectly so this is where this talk really came from",
    "start": "62800",
    "end": "69420"
  },
  {
    "text": "so Who am I to talk about this that's my Lego minifig given to me by bet",
    "start": "69420",
    "end": "75070"
  },
  {
    "text": "somewhere be from TechSmith which is quite cool I ride this thing to work Brandi it's only about three weeks old",
    "start": "75070",
    "end": "81700"
  },
  {
    "text": "it's already done 400 K so I do about 8,000 ka year to get to work which is quite nice to be able to eat cheese and",
    "start": "81700",
    "end": "89259"
  },
  {
    "text": "drink beer and eat sweets far too much and then when I'm mucking about the kids make me do I get in spoon races and",
    "start": "89259",
    "end": "95049"
  },
  {
    "text": "things like that and a Victorian village in the middle in size and so normally what you get is a",
    "start": "95049",
    "end": "104520"
  },
  {
    "text": "normal Juhi ID developer comes up and goes I think we need to do some multi-threaded programming and",
    "start": "104520",
    "end": "112828"
  },
  {
    "text": "this would be a good use case what they actually do is they actually do threaded to programming multi need that's kind of",
    "start": "113159",
    "end": "120250"
  },
  {
    "text": "what they end up coding and what they actually meant was multi-threaded programming will look good on my CV you",
    "start": "120250",
    "end": "126189"
  },
  {
    "text": "know CV driven development is always a fantastic thing in general a developer who's done",
    "start": "126189",
    "end": "134670"
  },
  {
    "text": "multi-threading especially we don't net to nought type stuff they do it once and then they tried",
    "start": "134670",
    "end": "140820"
  },
  {
    "text": "never to do it again because they got burnt I know I lost I worked on a fixed price contract for a TV company and I",
    "start": "140820",
    "end": "147870"
  },
  {
    "text": "worked for two weeks for no money in order to finish my code because I put multi-threading where it shouldn't be and had to strip it all back out I",
    "start": "147870",
    "end": "154650"
  },
  {
    "text": "thought it would be really useful but it turned out it was working fast enough as it was so why do we want to do",
    "start": "154650",
    "end": "161310"
  },
  {
    "text": "multi-threading in the old days we used to have these all the time and",
    "start": "161310",
    "end": "167480"
  },
  {
    "text": "that's a Windows 3.1 hourglass or Windows NT 3.51 a glass and and I'm not",
    "start": "167480",
    "end": "175650"
  },
  {
    "text": "saying that the hourglass came up a lot but it came up enough you could load a different theme into Windows and have",
    "start": "175650",
    "end": "183030"
  },
  {
    "text": "done animated dinosaurs is your hourglass right no mucking about and they were really cute especially on with",
    "start": "183030",
    "end": "189840"
  },
  {
    "text": "the bow and so yeah they actually disappeared with Windows 7 which no one mourn their loss",
    "start": "189840",
    "end": "195950"
  },
  {
    "text": "afraid it's really sad to see them again and",
    "start": "195950",
    "end": "201410"
  },
  {
    "text": "what we want to do in our situation we don't have the hourglass as much anymore so I'm assuming you're all",
    "start": "201410",
    "end": "208370"
  },
  {
    "text": "creating applications maybe on the server maybe in services maybe in UI but",
    "start": "208370",
    "end": "214500"
  },
  {
    "text": "you've got to analyze what your problem really is and there's two real good use cases for desiring",
    "start": "214500",
    "end": "221090"
  },
  {
    "text": "multi-threading one of them is you might be io constrained maybe and whatever it means",
    "start": "221090",
    "end": "229020"
  },
  {
    "text": "maybe your CPU constrained you're doing a lot of work and wanting to do a lot of calculation and computation so clearly",
    "start": "229020",
    "end": "235410"
  },
  {
    "text": "the prime example of this is making a cup of tea right because I'm from England I make cups of tea and",
    "start": "235410",
    "end": "242510"
  },
  {
    "text": "if your i/o bound there's an example of that boiling the kettle",
    "start": "242510",
    "end": "247820"
  },
  {
    "text": "you are just sat there waiting for the kettle to boil now you don't actually sit there waiting for the kettle to boil",
    "start": "247820",
    "end": "253320"
  },
  {
    "text": "you can go around the kitchen you can make a sandwich you can get something else ready you can talk to people you",
    "start": "253320",
    "end": "258540"
  },
  {
    "text": "can often watch TV and wait for it to go click which is kind of a callback that tells you it's finished",
    "start": "258540",
    "end": "264230"
  },
  {
    "text": "that's normally after there's a lot of steam under your cupboard that's kind of gone up the wall and things like that as",
    "start": "264230",
    "end": "269580"
  },
  {
    "text": "well once it has boiled of course if you were doing anything else you become CPU",
    "start": "269580",
    "end": "275080"
  },
  {
    "text": "banned as you've got three or four mugs to put tea bags in fill the water put the sugar in put the milk in and then",
    "start": "275080",
    "end": "280660"
  },
  {
    "text": "you're really quite busy you have enough time to chat someone who's near you but you're probably not trying to put tea",
    "start": "280660",
    "end": "286390"
  },
  {
    "text": "bags in while making a sandwich with the other hand because that'd be quite tricky and because it's one of those circular and",
    "start": "286390",
    "end": "292990"
  },
  {
    "text": "straight things that you never get right you'll just start spreading your jam like this on the sandwich so yes so key",
    "start": "292990",
    "end": "300730"
  },
  {
    "text": "point do analyze what you're trying to do first and think about what you're trying to do and think about the",
    "start": "300730",
    "end": "306640"
  },
  {
    "text": "resources you're going to need so when we're talking about IO bound",
    "start": "306640",
    "end": "312490"
  },
  {
    "text": "operations this is where async/await that came in in c-sharp v is",
    "start": "312490",
    "end": "318010"
  },
  {
    "text": "really good because this is one of its prime design goals was i/o bound type",
    "start": "318010",
    "end": "323410"
  },
  {
    "text": "operations it's when you are waiting for something to happen it might be a",
    "start": "323410",
    "end": "329440"
  },
  {
    "text": "network call you may be writing to a database you may be fiddling around with files something like that and the key",
    "start": "329440",
    "end": "335800"
  },
  {
    "text": "point is you can do something useful in the mean time right that's a really important concept we could keep our UI",
    "start": "335800",
    "end": "342640"
  },
  {
    "text": "responsive in an application we could process partial results we might have",
    "start": "342640",
    "end": "347800"
  },
  {
    "text": "put requests out for 200 files and we're going to convert them into from one format to another and we can start converting them before we've got all 100",
    "start": "347800",
    "end": "354850"
  },
  {
    "text": "on the system or we could be issuing new requests the first file comes in it needs a thumbnail we can send off a",
    "start": "354850",
    "end": "362050"
  },
  {
    "text": "message to make a thumbnail from this file because we make thumbnails for these types of files things like that so",
    "start": "362050",
    "end": "367720"
  },
  {
    "text": "it would be more productive so one of the key ones and the easiest one",
    "start": "367720",
    "end": "374140"
  },
  {
    "text": "to show was the idea of a windows forms",
    "start": "374140",
    "end": "379450"
  },
  {
    "text": "application or a WPF application and when it locks the UI up so we're going to just upload a tiniest little",
    "start": "379450",
    "end": "387210"
  },
  {
    "text": "application in the world into vst's moving up and I used to be",
    "start": "387210",
    "end": "393640"
  },
  {
    "text": "vb6 programmer and I lived my life making great forms with great buttons on time you know",
    "start": "393640",
    "end": "400230"
  },
  {
    "text": "and yeah so this is a very simple form it just counts cards",
    "start": "400230",
    "end": "406920"
  },
  {
    "text": "mm all it does is count from 1 to 50 to update a label on the form to show you",
    "start": "406920",
    "end": "414640"
  },
  {
    "text": "what count card it's on currently puts it delaying because otherwise it do it way too fast and in the meantime while",
    "start": "414640",
    "end": "421420"
  },
  {
    "text": "it's running you could also eat something or you could drink something",
    "start": "421420",
    "end": "426570"
  },
  {
    "text": "you know and we can resize the form because it's you know two windows form of course and we go and count those",
    "start": "426570",
    "end": "432790"
  },
  {
    "text": "cards and I don't see anything I can't click the buttons anymore on the form doesn't move mm oh",
    "start": "432790",
    "end": "439560"
  },
  {
    "text": "now it moved and it updated but only with the last value and we've got all the things we clicked on happening at",
    "start": "439560",
    "end": "446890"
  },
  {
    "text": "the end so it's keyed of all these requests but it was so busy it didn't do anything so if you were in the old days of VB you",
    "start": "446890",
    "end": "455320"
  },
  {
    "text": "would have shipped a do event a form repaint right in the middle of that code to force it to do it all but it's ok",
    "start": "455320",
    "end": "461770"
  },
  {
    "text": "because we now have a much better way of doing it we can actually await things happening so I'm going to",
    "start": "461770",
    "end": "469510"
  },
  {
    "text": "await the delay were updating the card count so we're saying we're going to do the same count that we did before but",
    "start": "469510",
    "end": "475480"
  },
  {
    "text": "every time we do a delay we're going to and now other things to happen while we wait for that delay to happen so imagine",
    "start": "475480",
    "end": "480550"
  },
  {
    "text": "that's a network call or a database call or something else that's not opened so now",
    "start": "480550",
    "end": "487710"
  },
  {
    "text": "when I count the cards I can still write do that and I can still make my form thing you can have shared",
    "start": "487860",
    "end": "495540"
  },
  {
    "text": "you can access variables between them which was really hard in forms to",
    "start": "495540",
    "end": "500770"
  },
  {
    "text": "marshal threads and background threads and try and get data between them because it's shared state ensured States quite a pain in multi-threading of",
    "start": "500770",
    "end": "508390"
  },
  {
    "text": "course you want to make sure in the multi-threaded world you do have to",
    "start": "508390",
    "end": "513460"
  },
  {
    "text": "think a bit about what is allowed to happen while you're doing this awaiting save you press the button repeatedly",
    "start": "513460",
    "end": "520500"
  },
  {
    "text": "like that you don't really want to do that so that's were although you get a",
    "start": "520500",
    "end": "526300"
  },
  {
    "text": "quick game you do have to think about what the consequences of ah allowing things to happen in the meantime",
    "start": "526300",
    "end": "532920"
  },
  {
    "text": "and in order to do all that all we did was put the keyword I will make that",
    "start": "532920",
    "end": "538330"
  },
  {
    "text": "bigger that's way too small is the keyword ating and to start ball method magic",
    "start": "538330",
    "end": "545350"
  },
  {
    "text": "magic fairy dust and didn't await inside and that was enough",
    "start": "545350",
    "end": "552399"
  },
  {
    "text": "for the compiler to create a state engine around my method that would remember what was happening in between",
    "start": "552399",
    "end": "557529"
  },
  {
    "text": "linked up a callback do loads of boilerplate code that you would want to write and make your life a lot easier",
    "start": "557529",
    "end": "563529"
  },
  {
    "text": "and make you look really smart as you demoing that to a product manager and everything works in a way they always",
    "start": "563529",
    "end": "569589"
  },
  {
    "text": "used to be quite a pain so that's a simple async await you do have to check if you are only I",
    "start": "569589",
    "end": "576759"
  },
  {
    "text": "over and so this is a juggling machine that they made in the Czech Republic and",
    "start": "576759",
    "end": "582660"
  },
  {
    "text": "that money just to get five balls being juggled at the same time it's quite",
    "start": "582660",
    "end": "587800"
  },
  {
    "text": "impressive probably it gets blocked at the point where it's juggling about five",
    "start": "587800",
    "end": "593130"
  },
  {
    "text": "yeah it was i/o bounded that we was waiting for the first when it was only juggling two is waiting for the balls to",
    "start": "593130",
    "end": "598569"
  },
  {
    "text": "come back and he had enough time to add a third ball they had enough time to add a fourth ball and a fifth and then it probably about five it's gonna struggle",
    "start": "598569",
    "end": "605670"
  },
  {
    "text": "because now the balls are landing at the same time it would be throwing them and it can't really juggle everything at the",
    "start": "605670",
    "end": "611079"
  },
  {
    "text": "same time anymore and this is the kind of thing you'd get in",
    "start": "611079",
    "end": "616690"
  },
  {
    "text": "real life so one of our developers was doing a migration of data so we're taking data from a database old sequel",
    "start": "616690",
    "end": "623949"
  },
  {
    "text": "server we're pushing it into a revenge stream in the event store and he tested it all out on local DB's or",
    "start": "623949",
    "end": "632170"
  },
  {
    "text": "works shoved it on the live DB in production and one of our machines fell over he basically decided to push in 100",
    "start": "632170",
    "end": "640120"
  },
  {
    "text": "tasks because he botched the job just to make sure it wasn't a complete in a single job bashed in 200 tasks and ended",
    "start": "640120",
    "end": "648189"
  },
  {
    "text": "when all on all 100 of them and the question I asked was how many CPUs",
    "start": "648189",
    "end": "655480"
  },
  {
    "text": "are in that server that you pushed that to I don't know and he goes doesn't it throttle for you",
    "start": "655480",
    "end": "663069"
  },
  {
    "text": "automatically and know how many CPUs you have and just do the sensible thing and I goes no it does what you told it which",
    "start": "663069",
    "end": "669790"
  },
  {
    "text": "was do all these hundred tasks wait for them all to finish and consume so much CPU it took every other service out on",
    "start": "669790",
    "end": "676250"
  },
  {
    "text": "that box so this is not a good thing so this is where you come to a few handy",
    "start": "676250",
    "end": "683390"
  },
  {
    "text": "patterns unbelievably this is a white paper from 2012 that's Steven hey bro you need to",
    "start": "683390",
    "end": "689660"
  },
  {
    "text": "google for a document called tap docx and I still have to keep pointing people at it and say please read this because",
    "start": "689660",
    "end": "696170"
  },
  {
    "text": "this is really good and gives you a load of patterns that you will really like and",
    "start": "696170",
    "end": "701500"
  },
  {
    "text": "so you can have redundancy this is a very simple when any type scenario where",
    "start": "701500",
    "end": "707020"
  },
  {
    "text": "you can say hey I'm going for five five share prices",
    "start": "707020",
    "end": "712090"
  },
  {
    "text": "services get me one of them as soon as I get one I'm happy and I'll just use that and forget about the rest that kind of",
    "start": "712090",
    "end": "718190"
  },
  {
    "text": "thing so that's the easy kind of one interleaving is where you can do things like I've got a long-running process and",
    "start": "718190",
    "end": "723890"
  },
  {
    "text": "once it's finished I could do a little bit of work and I'll put that in between but keep a load of jobs going in the meantime and limit what the long stuff",
    "start": "723890",
    "end": "731030"
  },
  {
    "text": "is but throttling is by far the one that I see wanting to be used most and so",
    "start": "731030",
    "end": "737120"
  },
  {
    "text": "we'll have a demo of that and these are you've got to consider again now we're",
    "start": "737120",
    "end": "743990"
  },
  {
    "text": "in the Iowa even though we've considered i/o versus CPU and tried to balance what we're trying to achieve we also need to",
    "start": "743990",
    "end": "749300"
  },
  {
    "text": "work out which pattern would be suitable for our usage in this case so as an",
    "start": "749300",
    "end": "754730"
  },
  {
    "text": "example I used to work at a start-up that encoded mp3 files regarding a core",
    "start": "754730",
    "end": "760580"
  },
  {
    "text": "processor if you encoded eight mp3 files all at the same time of ffmpeg in the",
    "start": "760580",
    "end": "767540"
  },
  {
    "text": "background and they're all on different threads and use all eight then at some point you sequel server decides to stop",
    "start": "767540",
    "end": "773870"
  },
  {
    "text": "responding and you can't actually write any success that you might have I managed to write a file out from the mp3",
    "start": "773870",
    "end": "779690"
  },
  {
    "text": "encoding so that's where we throttled it back to seven and we did that not with async away but by having services that",
    "start": "779690",
    "end": "786920"
  },
  {
    "text": "run as Windows services that could only do one thread at a time and that's rolled it back but we could have multiple windows services which gives",
    "start": "786920",
    "end": "792740"
  },
  {
    "text": "you by the way a very cheap way of doing multi-threading in the old style so",
    "start": "792740",
    "end": "797800"
  },
  {
    "text": "looking at those patterns we can go to another sample piece of",
    "start": "797800",
    "end": "804260"
  },
  {
    "text": "code",
    "start": "804260",
    "end": "806500"
  },
  {
    "text": "it's another classic piece of design I'll tell you know do you do too",
    "start": "809449",
    "end": "818269"
  },
  {
    "text": "but fortunately for you I managed to put a graphic on it so it's",
    "start": "818269",
    "end": "825449"
  },
  {
    "text": "got an image see lovely image and but it still is a grey box and stuff so this is",
    "start": "825449",
    "end": "830939"
  },
  {
    "text": "basically coming from that world of mp3 encoding so there's a band in Sheffield who have tracks on bank amps so I",
    "start": "830939",
    "end": "836999"
  },
  {
    "text": "decided what if we downloaded the OGG file the flat file the AAC the mp3 and",
    "start": "836999",
    "end": "843029"
  },
  {
    "text": "we just copied the files so I wanted something asynchronous that I could demo at a conference where I wasn't relying",
    "start": "843029",
    "end": "850350"
  },
  {
    "text": "on the network being available because that's the problem with them eating a lot of people use it with web services",
    "start": "850350",
    "end": "855689"
  },
  {
    "text": "as a demo and unfortunately not all conference Wi-Fi czar equal and not",
    "start": "855689",
    "end": "861629"
  },
  {
    "text": "every conference can allow my 3G little dongles to work so I decided on files",
    "start": "861629",
    "end": "867679"
  },
  {
    "text": "so we have a very simple interface it's got a source directory which is here",
    "start": "867679",
    "end": "876829"
  },
  {
    "text": "so it's going to take files from this folder over here and it's going to put them into a temporary folder which is",
    "start": "878540",
    "end": "884370"
  },
  {
    "text": "the default Windows temporary folder for my user so if we go and run it up I'm",
    "start": "884370",
    "end": "890009"
  },
  {
    "text": "gonna have a look in that folder just to show you what's in there so we just have",
    "start": "890009",
    "end": "895019"
  },
  {
    "text": "a load of files we've got mp3 files we've got flack clearly the reason I kind of did this",
    "start": "895019",
    "end": "903319"
  },
  {
    "text": "is because the flat files are bigger and take longer to coffee than the mp3s in",
    "start": "903319",
    "end": "909089"
  },
  {
    "text": "the AAC so you can see how the files copy much faster than one or the other",
    "start": "909089",
    "end": "914149"
  },
  {
    "text": "even when it's on an SSD it takes time to copy bits around",
    "start": "914149",
    "end": "919189"
  },
  {
    "text": "so the simple way of doing it I will copy this code sample straight in",
    "start": "919189",
    "end": "924899"
  },
  {
    "text": "and then we'll have a look at it",
    "start": "924899",
    "end": "928040"
  },
  {
    "text": "you get to the button [Music]",
    "start": "932320",
    "end": "939640"
  },
  {
    "text": "all click you can see that I do make some live coding on server-side",
    "start": "939640",
    "end": "945250"
  },
  {
    "text": "nowadays so there we are and I did do the code because I tested it to make",
    "start": "945250",
    "end": "951110"
  },
  {
    "text": "sure it worked so let's just paste it in to make sure so what we got",
    "start": "951110",
    "end": "958660"
  },
  {
    "text": "yeah it's not run it in debug mode let's show you the code first",
    "start": "960400",
    "end": "967870"
  },
  {
    "text": "on full screen beautiful screen Oh",
    "start": "968290",
    "end": "974680"
  },
  {
    "text": "shift alt enter there we are so all we're doing is getting a list of all the file names to copy so we're going to go",
    "start": "975490",
    "end": "982010"
  },
  {
    "text": "off we're going to get a list of all the files there in a folder and we're doing",
    "start": "982010",
    "end": "988430"
  },
  {
    "text": "it where we actually iterate through all the subfolders as well we're then going to do a copy file async",
    "start": "988430",
    "end": "995660"
  },
  {
    "text": "so this is quite important if you use the standard copy file we'll get no benefit of this we do have to do things",
    "start": "995660",
    "end": "1002050"
  },
  {
    "text": "like use async methods using an async method means we don't just copy a file we",
    "start": "1002050",
    "end": "1008590"
  },
  {
    "text": "actually do streams so we copy async bytes in streams so it's not quite",
    "start": "1008590",
    "end": "1014380"
  },
  {
    "text": "as easy as just file copy we have to go in process of stream but that's not a bad thing",
    "start": "1014380",
    "end": "1019590"
  },
  {
    "text": "that's kind of what you'd expect and then we just doing a weight on this",
    "start": "1019590",
    "end": "1025839"
  },
  {
    "text": "and we do the really important when all copy the",
    "start": "1025839",
    "end": "1032050"
  },
  {
    "text": "tasks and then play the first file we get now there is a temp folder here",
    "start": "1032050",
    "end": "1041370"
  },
  {
    "text": "that we can look at and we can see all these files come in",
    "start": "1043290",
    "end": "1048329"
  },
  {
    "text": "so when I do the clinic we should see these files start to come in",
    "start": "1048330",
    "end": "1054150"
  },
  {
    "text": "there we are in they come as little temp files and then they finally get their proper file names coming in you can see",
    "start": "1054150",
    "end": "1061300"
  },
  {
    "text": "how the OGG files take slightly longer and flack because there bigger files and",
    "start": "1061300",
    "end": "1066309"
  },
  {
    "text": "they eventually gets through and plays the music your mileage may vary on whether you",
    "start": "1066309",
    "end": "1072279"
  },
  {
    "text": "like an indie guitar bank in Sheffield pretty good",
    "start": "1072279",
    "end": "1078600"
  },
  {
    "text": "I'm a typical Indian kid so yeah so we have a load of files copied so that was",
    "start": "1078630",
    "end": "1084700"
  },
  {
    "text": "really nice because we just said hey here's a load of stuff to do wait till they're all finished and it went off and did them all it did them all as fast as",
    "start": "1084700",
    "end": "1091299"
  },
  {
    "text": "it could and it did it asynchronously while it was doing it I can probably move the form around a bit maybe yes so",
    "start": "1091299",
    "end": "1099580"
  },
  {
    "text": "I can still move the form around I still had a bit of responsiveness not great I didn't put much pauses in there but it",
    "start": "1099580",
    "end": "1106270"
  },
  {
    "text": "didn't go completely dead while it was doing it that's fine so we've got some of the lovely benefits",
    "start": "1106270",
    "end": "1112539"
  },
  {
    "text": "of async enos but that's the most basic thing that's the hey let's do everything in the world",
    "start": "1112539",
    "end": "1119370"
  },
  {
    "text": "which is what we can do and I talked about throttling and",
    "start": "1119370",
    "end": "1124710"
  },
  {
    "text": "this is the much more interesting one this is where I was saying to that guy",
    "start": "1124710",
    "end": "1130289"
  },
  {
    "text": "at work what you should have done was do throttling here's the white paper let's",
    "start": "1130289",
    "end": "1135520"
  },
  {
    "text": "go and write it and make sure we have that in a way we can reuse and it's relatively easy to do so anyone",
    "start": "1135520",
    "end": "1143770"
  },
  {
    "text": "who's not used to async I'm hoping some people have seen anything before because I literally ran",
    "start": "1143770",
    "end": "1150220"
  },
  {
    "text": "over what when all did really is and you get a group of tasks we can put them",
    "start": "1150220",
    "end": "1156490"
  },
  {
    "text": "into these Combinator functions when or when any when all is the process every task going",
    "start": "1156490",
    "end": "1163210"
  },
  {
    "text": "and the when any is I'm going to give you a load of work when any of them's finished come back to",
    "start": "1163210",
    "end": "1169450"
  },
  {
    "text": "me so that was when I said we could be looking for a sure price or a weather or a coordinate GPS coordinate lookup and",
    "start": "1169450",
    "end": "1176470"
  },
  {
    "text": "you don't care probably the first ones good enough you just went to multiple services just to make sure you had redundancy but the other thing we can",
    "start": "1176470",
    "end": "1183549"
  },
  {
    "text": "use when any four is when we finish doing one we can then do something else we could do a bit of processing but one",
    "start": "1183549",
    "end": "1190870"
  },
  {
    "text": "of the things we could do is we can actually throttle how much work we're doing at any one time so we can actually",
    "start": "1190870",
    "end": "1196929"
  },
  {
    "text": "say our list of copies should only ever have 4 min at any one time so",
    "start": "1196929",
    "end": "1203610"
  },
  {
    "text": "we can say hey I'm going to put 4 things into this list and I'm gonna wait for",
    "start": "1203610",
    "end": "1210070"
  },
  {
    "text": "one of them to get processed so first of all we fill our little array",
    "start": "1210070",
    "end": "1216940"
  },
  {
    "text": "with the first 4 copy files that we're going to have our list and then we're going to say if we've",
    "start": "1216940",
    "end": "1224320"
  },
  {
    "text": "still got stuff to do we're gonna go around we're gonna",
    "start": "1224320",
    "end": "1230430"
  },
  {
    "text": "if we find we're gonna wait for any of them to finish and we get back the task",
    "start": "1230430",
    "end": "1236290"
  },
  {
    "text": "that's finished we say so have you finished we can get you out",
    "start": "1236290",
    "end": "1241930"
  },
  {
    "text": "of that list of tasks that we're doing and if we've still got things to do I",
    "start": "1241930",
    "end": "1247150"
  },
  {
    "text": "can add a new one into that list so I had 4 1 finished I now have 3 I",
    "start": "1247150",
    "end": "1253960"
  },
  {
    "text": "remove it I put another one in and then I run it again and keep going until I",
    "start": "1253960",
    "end": "1259150"
  },
  {
    "text": "eventually get no tasks left they're really good beers you might say ah but",
    "start": "1259150",
    "end": "1264460"
  },
  {
    "text": "what if when any runs and all of them are finished well you just get the first one back out and if you then called it",
    "start": "1264460",
    "end": "1272470"
  },
  {
    "text": "again you get the next one out that had finished possibly in order I'm not sure how deterministic it is on it and some",
    "start": "1272470",
    "end": "1280000"
  },
  {
    "text": "back doesn't really matter because you didn't care enough because you went any anyway so who could watch what order",
    "start": "1280000",
    "end": "1285100"
  },
  {
    "text": "they finished in but you eventually drain the queue of work so this little bit of boilerplate",
    "start": "1285100",
    "end": "1292620"
  },
  {
    "text": "normally if you've got really intensive stuff you might have concurrent things being",
    "start": "1292620",
    "end": "1299440"
  },
  {
    "text": "maybe the level of your CPUs maybe it's about two times the CPU because maybe it's mostly i/o but it's using 5% of CPU",
    "start": "1299440",
    "end": "1308320"
  },
  {
    "text": "but of course 5% of CPU over that hundred tasks that my dev put in is more",
    "start": "1308320",
    "end": "1314050"
  },
  {
    "text": "than a hundred percent that's why the server didn't like it so by doing this you could easily rack it",
    "start": "1314050",
    "end": "1320620"
  },
  {
    "text": "back to 10 20 whatever it was scale it depending on the dev system a staging system a live system and if we do this",
    "start": "1320620",
    "end": "1328240"
  },
  {
    "text": "we can see it in action so if I get that little window that",
    "start": "1328240",
    "end": "1334450"
  },
  {
    "text": "shows me the files I'm copying and when we do this we get four files at a time",
    "start": "1334450",
    "end": "1339820"
  },
  {
    "text": "so it does four files as soon as there's a temp file finish disappears another temp file appears and it gradually just",
    "start": "1339820",
    "end": "1346570"
  },
  {
    "text": "keeps going through and probably my form is more responsive look",
    "start": "1346570",
    "end": "1352559"
  },
  {
    "text": "responsive enough it does that silly thing in Windows where it minimizes everything if you're doing it around and",
    "start": "1352559",
    "end": "1357789"
  },
  {
    "text": "let's see if it thank you so yeah so that's throttling and that's a really",
    "start": "1357789",
    "end": "1365380"
  },
  {
    "text": "simple pattern that's in that white paper by Stephen tab so I guarantee",
    "start": "1365380",
    "end": "1372840"
  },
  {
    "text": "they've you haven't read that white paper by Stephen town and you use async/await then you should go off and",
    "start": "1372840",
    "end": "1379990"
  },
  {
    "text": "read that white paper by Stephen time it's only about 12 pages of your life it's less time than you spent on Pokemon",
    "start": "1379990",
    "end": "1386799"
  },
  {
    "text": "yesterday and your code will be much better for it so and that's just a really quick",
    "start": "1386799",
    "end": "1394600"
  },
  {
    "text": "example of how async/await can be made much better and much more suitable for production systems I did",
    "start": "1394600",
    "end": "1403149"
  },
  {
    "text": "get asked by a developer but surely they should have just given us that in the library and I'm glad that what we have",
    "start": "1403149",
    "end": "1410169"
  },
  {
    "text": "now is a sensible framework which does not overload every method does not have every variation you may want but can",
    "start": "1410169",
    "end": "1416950"
  },
  {
    "text": "give you in these 10 lines of code you can easily get it down to quite a simple structure I'm sure if I didn't do for",
    "start": "1416950",
    "end": "1423519"
  },
  {
    "text": "reach and did lambdas and a bit fancier stuff it'd be less code on the screen and there's someone anyone do f-sharp",
    "start": "1423519",
    "end": "1431760"
  },
  {
    "text": "because they'd be going you don't even need it it's two lines it's a filter yeah and",
    "start": "1431760",
    "end": "1438990"
  },
  {
    "text": "and but you know that's just F sharp really good at doing pipelines it has to be said so what are the gotchas that I",
    "start": "1439110",
    "end": "1446460"
  },
  {
    "text": "think exists in the async/await world well one of them is please please please",
    "start": "1446460",
    "end": "1453149"
  },
  {
    "text": "always return a task of some type from your async methods right it's really",
    "start": "1453149",
    "end": "1459210"
  },
  {
    "text": "rude to not return anything and just return void and if you return void which",
    "start": "1459210",
    "end": "1466200"
  },
  {
    "text": "basically is only in there for things like UI handlers on windows forms and if they hadn't had to deal with that they'd",
    "start": "1466200",
    "end": "1471990"
  },
  {
    "text": "have never allowed it to be put in the system in the first place and what you give by returning this task is you allow",
    "start": "1471990",
    "end": "1478049"
  },
  {
    "text": "someone calling you to work out what your status to work out if you had exceptions all sorts of things that are",
    "start": "1478049",
    "end": "1484590"
  },
  {
    "text": "handy and useful can be done and if you haven't done a sink away and I kind of",
    "start": "1484590",
    "end": "1492120"
  },
  {
    "text": "assume who has done async/await in here oh good you all know what tasks T is",
    "start": "1492120",
    "end": "1497700"
  },
  {
    "text": "tasks T means that it will return whatever time you have effectively so a",
    "start": "1497700",
    "end": "1503220"
  },
  {
    "text": "method that would have returned int you would convert into a type of task int and then when you do things like when",
    "start": "1503220",
    "end": "1510149"
  },
  {
    "text": "any it can return you back one value which is int and it does all the work for you to kind of give you the generic",
    "start": "1510149",
    "end": "1516539"
  },
  {
    "text": "value and you can get the task if you want so it's really cool how they've matched and had a templated this stuff",
    "start": "1516539",
    "end": "1522659"
  },
  {
    "text": "you also get cancellation in an async await now this is something that existed in the TPL anyway",
    "start": "1522659",
    "end": "1528860"
  },
  {
    "text": "it's really cool thing you create a cancellation token you hand it to",
    "start": "1528860",
    "end": "1534389"
  },
  {
    "text": "anything that's part of what you would consider a process that exists as kind",
    "start": "1534389",
    "end": "1539940"
  },
  {
    "text": "of a bounded context or transaction and if something goes wrong one of you can go hey cancel this and immediately it'll",
    "start": "1539940",
    "end": "1547860"
  },
  {
    "text": "start canceling throughout the whole system for anyone listening to that cancellation token and handling it",
    "start": "1547860",
    "end": "1552960"
  },
  {
    "text": "properly now the interesting one was when I first showed someone cancellation they put a cancellation token into the",
    "start": "1552960",
    "end": "1558630"
  },
  {
    "text": "first async method didn't hand it to any of the calls underneath and then said it doesn't cancel anything underneath well",
    "start": "1558630",
    "end": "1566070"
  },
  {
    "text": "you haven't told it to said but it should magically know how to kill all my",
    "start": "1566070",
    "end": "1571080"
  },
  {
    "text": "work my underneath and I said does it magically know which files to remove",
    "start": "1571080",
    "end": "1576530"
  },
  {
    "text": "which database transactions to rollback all that kind of thing because the only",
    "start": "1576530",
    "end": "1581850"
  },
  {
    "text": "guy who really knows that it's the person who's coding it that's the only person who can properly guess what should be rolled back with a",
    "start": "1581850",
    "end": "1587340"
  },
  {
    "text": "cancellation so I think cancellation tokens are really good it's a really good pattern for cancelling multiple",
    "start": "1587340",
    "end": "1592620"
  },
  {
    "text": "things all over the place and use throughout the TPL and we'll see it later in data flow yeah got the",
    "start": "1592620",
    "end": "1599160"
  },
  {
    "text": "Australian pronounciation I will say data flow occasionally and so and they",
    "start": "1599160",
    "end": "1605370"
  },
  {
    "text": "are really useful you do have to handle them they do throw exceptions and we have some people don't like exceptions even though they're a useful thing to",
    "start": "1605370",
    "end": "1611790"
  },
  {
    "text": "have in their system so cancellation tokens are really cool as well you just they're not magic though",
    "start": "1611790",
    "end": "1617960"
  },
  {
    "text": "they do have to be dealt with and exceptions async method kind of don't throw",
    "start": "1617960",
    "end": "1624120"
  },
  {
    "text": "exceptions like you think they do so we'll do an example of that as well because that's a bit of a nightmare",
    "start": "1624120",
    "end": "1631430"
  },
  {
    "text": "the other thing is and someone actually tweeted me and said can you tell",
    "start": "1631430",
    "end": "1636450"
  },
  {
    "text": "developers not to use the word async at the end of their racing methods um I don't know whether he was trolling me so",
    "start": "1636450",
    "end": "1642930"
  },
  {
    "text": "usually believe you shouldn't put a sink at the end of async methods one of the things you shouldn't do is",
    "start": "1642930",
    "end": "1648390"
  },
  {
    "text": "call the method async and don't have the async modifier on it because that's a really bad idea right which is why we had a problem with",
    "start": "1648390",
    "end": "1656730"
  },
  {
    "text": "exceptions in a piece of open source code someone submitted a load of mocks and didn't put the async keyword in but",
    "start": "1656730",
    "end": "1662730"
  },
  {
    "text": "left the async at the end of a method because they were auto-generated and and that caused a bit of a nightmare in the",
    "start": "1662730",
    "end": "1668910"
  },
  {
    "text": "testing so I think first we'll look at cancellation because I think cancellation is quite cool",
    "start": "1668910",
    "end": "1676130"
  },
  {
    "text": "and there are some Star Wars sound effects randomly put through this presentation",
    "start": "1676730",
    "end": "1682880"
  },
  {
    "text": "based on the title of the presentation and that was good look you're gonna need it which quite often in the async world",
    "start": "1682880",
    "end": "1691410"
  },
  {
    "text": "is how you feel at first so we want the ability to do",
    "start": "1691410",
    "end": "1696540"
  },
  {
    "text": "cancellation no something tricky we are",
    "start": "1696540",
    "end": "1703160"
  },
  {
    "text": "so we have the ability to do cancellation",
    "start": "1703160",
    "end": "1708929"
  },
  {
    "text": "and this is in the when a first wind so the time when you want this is in that",
    "start": "1708929",
    "end": "1716610"
  },
  {
    "text": "case where I'm going to say hey I'm going to happily take whatever the first result is but if you do that and you are",
    "start": "1716610",
    "end": "1724230"
  },
  {
    "text": "going to work like that what you're then saying is",
    "start": "1724230",
    "end": "1729590"
  },
  {
    "text": "what you're saying is that when I cancel I really ought to be rolling something back as well there's no way that I",
    "start": "1733100",
    "end": "1740700"
  },
  {
    "text": "should just cancel something so I'm copying files clearly if I'm going to copy files I",
    "start": "1740700",
    "end": "1748190"
  },
  {
    "text": "really don't want to have the situation",
    "start": "1748190",
    "end": "1752480"
  },
  {
    "text": "that compiles I don't want the situation where I cancel the file copies because",
    "start": "1753649",
    "end": "1759090"
  },
  {
    "text": "I've got the first version I want but leave all the remaining partially filled files on the file system that's a bad",
    "start": "1759090",
    "end": "1764580"
  },
  {
    "text": "idea so what we need to do in that case all is",
    "start": "1764580",
    "end": "1769759"
  },
  {
    "text": "we've added an extra parameter called cancellation token into our copy files",
    "start": "1769759",
    "end": "1775289"
  },
  {
    "text": "async and one of the things it does is it",
    "start": "1775289",
    "end": "1781200"
  },
  {
    "text": "spots if it gets a operation cancelled exception and if it does it will delete",
    "start": "1781200",
    "end": "1786990"
  },
  {
    "text": "the temporary file it's been copying at the time and that's it that's the ability for us to cancel all operations",
    "start": "1786990",
    "end": "1794249"
  },
  {
    "text": "so I don't have to go around every task because this is the nightmare you've got a hundred file copies you've handed them",
    "start": "1794249",
    "end": "1799590"
  },
  {
    "text": "all over you can't put a cancel through do i generate through every file copy telling it to stop and the answer is no",
    "start": "1799590",
    "end": "1804899"
  },
  {
    "text": "you handed them all the same token and you can cancel them all like that so that's why cancellation token so much",
    "start": "1804899",
    "end": "1812309"
  },
  {
    "text": "nicer and all we're doing is sending these copy files with one single token",
    "start": "1812309",
    "end": "1817499"
  },
  {
    "text": "and all we do is create a cancellation token so the source that's going to cancel all these",
    "start": "1817499",
    "end": "1824700"
  },
  {
    "text": "and give the token in from that to all long methods so hopefully",
    "start": "1824700",
    "end": "1830149"
  },
  {
    "text": "when any first wins we should be able to see the files come",
    "start": "1830149",
    "end": "1837330"
  },
  {
    "text": "in so it copied a few",
    "start": "1837330",
    "end": "1843679"
  },
  {
    "text": "mm-hmm I think that's mean I think vobis support of my laptop whoops um",
    "start": "1848990",
    "end": "1855710"
  },
  {
    "text": "but basically it managed to copy that one file it needed and then has deleted all the temp files I'll just show you",
    "start": "1855710",
    "end": "1861960"
  },
  {
    "text": "that again because that was an error that didn't really matter that was just a audio support format not being",
    "start": "1861960",
    "end": "1867090"
  },
  {
    "text": "supported so yeah so we get that one file and we've cancelled everything down and that can be really important because",
    "start": "1867090",
    "end": "1873150"
  },
  {
    "text": "some of these things some of these things cost money so when",
    "start": "1873150",
    "end": "1881309"
  },
  {
    "text": "you're going out to services and you're asking for information and you're saying hey we need this information if you",
    "start": "1881309",
    "end": "1887460"
  },
  {
    "text": "don't cancel them down you'll be charged for that word yes",
    "start": "1887460",
    "end": "1893750"
  },
  {
    "text": "yep",
    "start": "1897350",
    "end": "1900350"
  },
  {
    "text": "interestingly if I run that enough that's exactly what happens because the mp3 format file or no the WMA and the",
    "start": "1906320",
    "end": "1914700"
  },
  {
    "text": "AAC files are so close to the same file size that about one in ten times you will get both files and there's",
    "start": "1914700",
    "end": "1921360"
  },
  {
    "text": "virtually nothing you can do about that so so a good catch that did that does",
    "start": "1921360",
    "end": "1927240"
  },
  {
    "text": "happen if I run the demo often enough but I",
    "start": "1927240",
    "end": "1932330"
  },
  {
    "text": "know I can imagine someone getting really upset about it and saying but",
    "start": "1932330",
    "end": "1938100"
  },
  {
    "text": "this is just unusable we can't possibly have this happen and you're kind of going well what you're saying is we've",
    "start": "1938100",
    "end": "1945809"
  },
  {
    "text": "copied everything bar if it had one byte less we would have been ok with it but",
    "start": "1945809",
    "end": "1951090"
  },
  {
    "text": "now it has two bytes we really get upset so and again this is like that button on",
    "start": "1951090",
    "end": "1957450"
  },
  {
    "text": "that original form which of you clicked multiple times gives you random results you have to be aware that things can",
    "start": "1957450",
    "end": "1964020"
  },
  {
    "text": "happen you can get two completed things even though you really only wanted one so probably you want to play the first",
    "start": "1964020",
    "end": "1970289"
  },
  {
    "text": "thing in that or maybe you have a cleanup if you wanted will clean up anything that seems",
    "start": "1970289",
    "end": "1975830"
  },
  {
    "text": "to be extraneous in that folder so those kind of considerations have to be done if you're going to do multiple things at",
    "start": "1975830",
    "end": "1981830"
  },
  {
    "text": "the same time you have to cope with the fact that multiple things get done at the same time it's one of those things",
    "start": "1981830",
    "end": "1987380"
  },
  {
    "text": "and it sounds obvious and so let's go",
    "start": "1987380",
    "end": "1993100"
  },
  {
    "text": "because I want it to be cool obviously I've written something in dotnet core",
    "start": "1993100",
    "end": "2001050"
  },
  {
    "text": "which is always a brave thing to do and I",
    "start": "2001050",
    "end": "2006120"
  },
  {
    "text": "did to be to the other side I battled it for about an hour before someone said you didn't do dotnet fetch of course it",
    "start": "2006120",
    "end": "2013210"
  },
  {
    "text": "wouldn't work it's a random bit of syntax that I didn't know about and so",
    "start": "2013210",
    "end": "2018220"
  },
  {
    "text": "what we've got is a very simple console.writeline so what we're going to deal with is how you get exceptions in",
    "start": "2018220",
    "end": "2023920"
  },
  {
    "text": "the async world and this is what caught someone out in the writer open source",
    "start": "2023920",
    "end": "2029860"
  },
  {
    "text": "project that you in Cooper my boss at hurdle has created and someone did a",
    "start": "2029860",
    "end": "2035950"
  },
  {
    "text": "submit and they put in a load of tests and the tests were marks so they just threw exceptions in order to say hey",
    "start": "2035950",
    "end": "2041140"
  },
  {
    "text": "we're not implemented and it never got to the unit test we really",
    "start": "2041140",
    "end": "2046450"
  },
  {
    "text": "wanted it to get - which was a when all because it couldn't get to it because all these exceptions got thrown",
    "start": "2046450",
    "end": "2051669"
  },
  {
    "text": "immediately and never made it to the loop that was going to do the when all the bit of code that was responsible for",
    "start": "2051669",
    "end": "2057070"
  },
  {
    "text": "that so we were struggling in and we'd spent about half a day trying to work out why on earth these tasks seem to get",
    "start": "2057070",
    "end": "2063520"
  },
  {
    "text": "executed ahead of time and weren't captured by the way nor and then we realized no one had put the async modifier on the method they did call the",
    "start": "2063520",
    "end": "2070510"
  },
  {
    "text": "async and there was a moment where it's you're the guys meant to know about async how come",
    "start": "2070510",
    "end": "2077080"
  },
  {
    "text": "you didn't know that I guess well if you do put the word async at the end of your method name I will assume it can be",
    "start": "2077080",
    "end": "2082240"
  },
  {
    "text": "awaited and it's async type modifier is on it so let's have a look all we're gonna do is",
    "start": "2082240",
    "end": "2088409"
  },
  {
    "text": "trivially add one number to another number unless it's do something and then",
    "start": "2088410",
    "end": "2093550"
  },
  {
    "text": "we always return 42 because that's obviously the ultimate answer that you can ever have and so it's really boring",
    "start": "2093550",
    "end": "2100630"
  },
  {
    "text": "bit of code so we'll just run it dotnet run compiles",
    "start": "2100630",
    "end": "2105980"
  },
  {
    "text": "and runs it but it was already compiled so it's okay so we'd say yeah that's a knowledge thing can we get 42 can anyone",
    "start": "2105980",
    "end": "2113720"
  },
  {
    "text": "read that or is it tiny fine okay go with that so yeah so this",
    "start": "2113720",
    "end": "2121760"
  },
  {
    "text": "has you'd expect so you can start putting exceptions in so you go right so",
    "start": "2121760",
    "end": "2127010"
  },
  {
    "text": "if I did have an exception in my console main method that's the entry method for the console app what would we expect to",
    "start": "2127010",
    "end": "2134300"
  },
  {
    "text": "happen because it's dotnet core so just so you know oops what did I do wrong I",
    "start": "2134300",
    "end": "2143270"
  },
  {
    "text": "[Music] didn't compile did it",
    "start": "2143270",
    "end": "2150369"
  },
  {
    "text": "[Music] these compile where's the rest",
    "start": "2150780",
    "end": "2159100"
  },
  {
    "text": "yeah there's me fat fingers on the keyboard bet you I didn't save it",
    "start": "2159100",
    "end": "2165740"
  },
  {
    "text": "properly either",
    "start": "2165740",
    "end": "2168250"
  },
  {
    "text": "that's better there you are so that's an exception coming out of your console which is kind of thing you expect you",
    "start": "2170830",
    "end": "2177410"
  },
  {
    "text": "know we've got an exception it's in Maine so that's fine that's exactly how I'd expect an exception to work so",
    "start": "2177410",
    "end": "2184370"
  },
  {
    "text": "that's fine so what if we threw an exception we've got",
    "start": "2184370",
    "end": "2191390"
  },
  {
    "text": "do something here that's not asynchronous so let's see what happens",
    "start": "2191390",
    "end": "2197150"
  },
  {
    "text": "there that's a simple thing and what we get to",
    "start": "2197150",
    "end": "2203300"
  },
  {
    "text": "is we're trying to do something asynchronous but yeah we got an exception will not be async for you two",
    "start": "2203300",
    "end": "2209630"
  },
  {
    "text": "didn't complete we didn't get any further either we didn't carry on doing the non eight the asynchronous functions",
    "start": "2209630",
    "end": "2214700"
  },
  {
    "text": "either because we just stopped dead and we got an exception thrown it's fine we would have handled that",
    "start": "2214700",
    "end": "2220810"
  },
  {
    "text": "so what we're gonna do is in the async method so really important this is an async method",
    "start": "2220810",
    "end": "2226960"
  },
  {
    "text": "not just because it's got a sink at the end but it has the async modifier on I cannot emphasize that too much",
    "start": "2226960",
    "end": "2233920"
  },
  {
    "text": "until you've seen a seasoned architect coder X c-sharp MVP swearing at a",
    "start": "2233920",
    "end": "2241130"
  },
  {
    "text": "machine for a day just because of this you'll realize how painful it was so this has got an exception being thrown",
    "start": "2241130",
    "end": "2246859"
  },
  {
    "text": "in a sink nothing right nothing came out right so that's the expected behavior",
    "start": "2246859",
    "end": "2254479"
  },
  {
    "text": "for an async method it should not be throwing exceptions as an exception to thank it's well it is the design",
    "start": "2254479",
    "end": "2261439"
  },
  {
    "text": "behavior so how it works let's put it that way so it says it will be async but",
    "start": "2261439",
    "end": "2267439"
  },
  {
    "text": "it never got to the point where it actually was I think now this is where",
    "start": "2267439",
    "end": "2272869"
  },
  {
    "text": "if you start doing things like well what I could do remember I said you should",
    "start": "2272869",
    "end": "2278719"
  },
  {
    "text": "return tasks from methods because I've actually returned a task I can actually",
    "start": "2278719",
    "end": "2285650"
  },
  {
    "text": "and I have it a reference to it I can actually go and see if there was an exception when I run it",
    "start": "2285650",
    "end": "2290739"
  },
  {
    "text": "so now I can go write whatever an exception when I run that",
    "start": "2290739",
    "end": "2297219"
  },
  {
    "text": "and the answer is yes I have a stack trace so I actually know you there was",
    "start": "2297759",
    "end": "2302989"
  },
  {
    "text": "an exception when I was running that piece of code and I can see it didn't throw an exception like I'd kind of",
    "start": "2302989",
    "end": "2309319"
  },
  {
    "text": "expect in the same way it was a system aggregate exception because with the TPL",
    "start": "2309319",
    "end": "2315319"
  },
  {
    "text": "you're doing multiple things at once and if you get exceptions you kind of want to roll them into a big bag and hand them back going hey there's a lot of",
    "start": "2315319",
    "end": "2321859"
  },
  {
    "text": "stuff that didn't work at this point and that's the key bit because if we",
    "start": "2321859",
    "end": "2327650"
  },
  {
    "text": "actually go back one if we don't actually",
    "start": "2327650",
    "end": "2334900"
  },
  {
    "text": "then it went all or weight all in this case so we're waiting for everything to be finished then we do get",
    "start": "2336820",
    "end": "2344440"
  },
  {
    "text": "an exception so this is word those tasks went or wait all and actually do throw",
    "start": "2344440",
    "end": "2349540"
  },
  {
    "text": "real exceptions for you to catch like you'd expect so that's how you can you",
    "start": "2349540",
    "end": "2354730"
  },
  {
    "text": "really are meant it's when you've got to a point where this I would get a exception makes sense to hand back to",
    "start": "2354730",
    "end": "2360130"
  },
  {
    "text": "you because you are at the point where you want to know all the errors that would have happened in your async methods",
    "start": "2360130",
    "end": "2366240"
  },
  {
    "text": "the interesting bit is and the final bit I will throw in is that I can actually",
    "start": "2366240",
    "end": "2372490"
  },
  {
    "text": "make my test some ideas an async method",
    "start": "2372490",
    "end": "2377880"
  },
  {
    "text": "and if I do that and do a quick run so all I did was put the async modifier on",
    "start": "2380820",
    "end": "2386680"
  },
  {
    "text": "and change the method name because we should do I've now buried that exception again it's disappeared again so you've",
    "start": "2386680",
    "end": "2394300"
  },
  {
    "text": "got to be really careful with what you're doing with exceptions if you're going to wait stuff really check the",
    "start": "2394300",
    "end": "2400000"
  },
  {
    "text": "tasks coming back and check things that are handed back and make sure that you're getting the right the thing that you expected",
    "start": "2400000",
    "end": "2406110"
  },
  {
    "text": "yes",
    "start": "2406110",
    "end": "2409110"
  },
  {
    "text": "you can yes",
    "start": "2422250",
    "end": "2425820"
  },
  {
    "text": "so for the people who you obviously won't hear that on the video helpful comment from John skeet there",
    "start": "2456690",
    "end": "2463450"
  },
  {
    "text": "and the suggestion there was you often in methods you would do pre checks on",
    "start": "2463450",
    "end": "2469000"
  },
  {
    "text": "the variables coming into the method in certain states that would cause fast failure it's what I would call it where",
    "start": "2469000",
    "end": "2474280"
  },
  {
    "text": "you know you're not going to be able to run anything so this is a tactic where you actually do have a sink a method",
    "start": "2474280",
    "end": "2480610"
  },
  {
    "text": "with async at the end which actually doesn't have an async modifier so that you immediately do a load of checks for",
    "start": "2480610",
    "end": "2487590"
  },
  {
    "text": "preconditions on parameters are correct all the state of the systems correct that he could do the work and then",
    "start": "2487590",
    "end": "2493300"
  },
  {
    "text": "underneath that it actually does the call to an async method that way you get",
    "start": "2493300",
    "end": "2498580"
  },
  {
    "text": "a very early exception fast failure instead of burying them all to the end and then you suddenly find out in an",
    "start": "2498580",
    "end": "2504160"
  },
  {
    "text": "aggregate world that you've got a failure so that's a different pattern that you can implement which is quite a",
    "start": "2504160",
    "end": "2509800"
  },
  {
    "text": "nice one but does have an async method which feels like it isn't acing",
    "start": "2509800",
    "end": "2516330"
  },
  {
    "text": "there's always one exception yeah so so we've covered io bound and I'm",
    "start": "2516330",
    "end": "2524110"
  },
  {
    "text": "probably going to run out of time to cover the full data flow but we also have CPU bound so there is a",
    "start": "2524110",
    "end": "2531490"
  },
  {
    "text": "very easy method async/await is the easy way of trying to",
    "start": "2531490",
    "end": "2536800"
  },
  {
    "text": "get IO bound asynchronous in synchronous operation that kind of multi-threaded although",
    "start": "2536800",
    "end": "2542470"
  },
  {
    "text": "it's really a single thread and it's kind of a fancy do events in my head and but it's more than that but then but yes",
    "start": "2542470",
    "end": "2549850"
  },
  {
    "text": "so how would you do true CPU multi-threading in an easy way that your life is very easy to do this well one of",
    "start": "2549850",
    "end": "2556540"
  },
  {
    "text": "the things that was out even before async/await was TPL data flow or data",
    "start": "2556540",
    "end": "2563110"
  },
  {
    "text": "flow and and it's a it was available as a NuGet package because it's available as a NuGet package no one knows about it",
    "start": "2563110",
    "end": "2569109"
  },
  {
    "text": "because it's not built into the framework and if it doesn't exist in the actual framework it's kind of hidden away in something you have to download",
    "start": "2569109",
    "end": "2575200"
  },
  {
    "text": "and I doubt in 2011 everyone was keen on new get in the same way they're really",
    "start": "2575200",
    "end": "2581170"
  },
  {
    "text": "keen on it now and you're all keen on new get aren't you you never have any problems and",
    "start": "2581170",
    "end": "2588869"
  },
  {
    "text": "so so this is now built into the dotnet core libraries I actually genuinely was",
    "start": "2588869",
    "end": "2594760"
  },
  {
    "text": "trying a dotnet core version of what we're gonna see I was trying to find the package that dataflow would be in and it",
    "start": "2594760",
    "end": "2600910"
  },
  {
    "text": "wasn't there because it's there all the time in the dotnet core library because it isn't the big thing actually so this",
    "start": "2600910",
    "end": "2607720"
  },
  {
    "text": "is kind of an actor based pattern it's an impress actor base pattern if",
    "start": "2607720",
    "end": "2613780"
  },
  {
    "text": "you have all liens or ICO you can spread it across servers but this is kind of an in explicitly in process",
    "start": "2613780",
    "end": "2621000"
  },
  {
    "text": "you can explicitly say how many threads you're meant to be processing at anyone using at any one time to do work it",
    "start": "2621000",
    "end": "2628089"
  },
  {
    "text": "builds in queueing of inputs and outputs say we can send a load of jobs out like this and it will queue them",
    "start": "2628089",
    "end": "2634029"
  },
  {
    "text": "automatically doing the throttling for you so you don't have to worry about that kind of throttling pattern types it",
    "start": "2634029",
    "end": "2639549"
  },
  {
    "text": "situation and it supports all the things like task cancellations and things like that what you should search for is ppl",
    "start": "2639549",
    "end": "2647170"
  },
  {
    "text": "dataflow GX which appears to be written by Stephen TAC again yes and that's still worth",
    "start": "2647170",
    "end": "2654220"
  },
  {
    "text": "reading to see how it works and what the initial goals of that that was and",
    "start": "2654220",
    "end": "2660150"
  },
  {
    "text": "now this the actor patent are we're going to big debt the maniac Japan but",
    "start": "2660150",
    "end": "2666029"
  },
  {
    "text": "1973 was the first white papers on the actor patent I was for at that point you",
    "start": "2666029",
    "end": "2672880"
  },
  {
    "text": "know frightening and this is created by physicists who had really big systems and wanted to work out how to use the",
    "start": "2672880",
    "end": "2679960"
  },
  {
    "text": "weather let's say they were trying to work out how the weather worked not how a nuclear bomb exploded the weather for",
    "start": "2679960",
    "end": "2685720"
  },
  {
    "text": "weather and but it Maps really well on to our multi-core architectures we have now and",
    "start": "2685720",
    "end": "2691359"
  },
  {
    "text": "they and especially distributed as well but it's boroughs multi-core in process",
    "start": "2691359",
    "end": "2696790"
  },
  {
    "text": "and one of the biggest things you're ever gonna have I mean multi-threading is shirred state you have things that",
    "start": "2696790",
    "end": "2703870"
  },
  {
    "text": "you should on thread thread storage and all sorts of nasty things to hack around",
    "start": "2703870",
    "end": "2709270"
  },
  {
    "text": "the fact that you've got multiple threads or you locking variables that you then unlock when you're finished",
    "start": "2709270",
    "end": "2714880"
  },
  {
    "text": "with them and things like that and that causes real bottlenecks so this isn't a",
    "start": "2714880",
    "end": "2720370"
  },
  {
    "text": "good thing so they came up with the idea of this active model so instead of your program",
    "start": "2720370",
    "end": "2726640"
  },
  {
    "text": "being a kind of really direct sequence of states that built on top of what was done before what was done before and",
    "start": "2726640",
    "end": "2732520"
  },
  {
    "text": "they could access everything that ever happened you send messages between little actors and actors it's like a",
    "start": "2732520",
    "end": "2738340"
  },
  {
    "text": "little black box you send some stuff to it it processes it internally doesn't access anything another little block",
    "start": "2738340",
    "end": "2745510"
  },
  {
    "text": "would access maybe it writes to a database which is kind of shirred state but you know at some point you have to",
    "start": "2745510",
    "end": "2750820"
  },
  {
    "text": "save something somewhere maybe every now and then in a database if you want to",
    "start": "2750820",
    "end": "2756370"
  },
  {
    "text": "keep it around which means don't use  and and",
    "start": "2756370",
    "end": "2761640"
  },
  {
    "text": "eventually it spits out another message into another bit that you can handle it so it's like joining little Lego blocks",
    "start": "2761640",
    "end": "2767500"
  },
  {
    "text": "together and as soon as you don't share a global stay and you don't have this whole state model you're testing is",
    "start": "2767500",
    "end": "2772990"
  },
  {
    "text": "easier unbelievably all your testing becomes much easier everything's more predictable and everything is easier to",
    "start": "2772990",
    "end": "2778660"
  },
  {
    "text": "scale so we avoid all that shared state we're",
    "start": "2778660",
    "end": "2784270"
  },
  {
    "text": "just doing inputs and outputs into these little blocks we don't have lock statements we've got a thread state and",
    "start": "2784270",
    "end": "2790210"
  },
  {
    "text": "we only transmit things by messages and you can't broadcast a message to everyone because there's no every one",
    "start": "2790210",
    "end": "2796210"
  },
  {
    "text": "because that would be shared state have a list of who everyone is so that would be a bad move as well and all this ends",
    "start": "2796210",
    "end": "2802750"
  },
  {
    "text": "up with the guys in the TPM adding to the TPL library they start to flow library so we have targets and",
    "start": "2802750",
    "end": "2810220"
  },
  {
    "text": "propagators and we can do filtering and connect blocks together so you kind of get it's almost like going back to a",
    "start": "2810220",
    "end": "2815860"
  },
  {
    "text": "software version over like little breadboard with circuits and you can join all the wires together",
    "start": "2815860",
    "end": "2821220"
  },
  {
    "text": "it's really cool so what I'm going to show you is the",
    "start": "2821220",
    "end": "2826720"
  },
  {
    "text": "basic really basic one of the action block and show how easy it could be to",
    "start": "2826720",
    "end": "2832660"
  },
  {
    "text": "add multi-threading into your VB or your amp",
    "start": "2832660",
    "end": "2838559"
  },
  {
    "text": "and into your app really easily I made some really good stuff in vb6",
    "start": "2840299",
    "end": "2848259"
  },
  {
    "text": "towards the end all these projects are available on",
    "start": "2848259",
    "end": "2853809"
  },
  {
    "text": "github and will be I'll give you the github address",
    "start": "2853809",
    "end": "2859749"
  },
  {
    "text": "at the end and also there's full one-hour videos of just TPL data flow and there's just the patterns and",
    "start": "2859749",
    "end": "2866529"
  },
  {
    "text": "practices and they're available and you know NDC's Vimeo sites so you can have a look at the presentation get my stats up",
    "start": "2866529",
    "end": "2872759"
  },
  {
    "text": "and make it look more popular than it really is yeah so yeah so all we're",
    "start": "2872759",
    "end": "2878289"
  },
  {
    "text": "gonna do here is if anyone's heard of people over here",
    "start": "2878289",
    "end": "2884559"
  },
  {
    "text": "you heard that BBC have something called iPlayer which allows you to do video on demand ABC you've got their own system",
    "start": "2884559",
    "end": "2891369"
  },
  {
    "text": "and someone did a talk on it about how they've implemented it bvz implemented it fairly simply and it's all based on",
    "start": "2891369",
    "end": "2898390"
  },
  {
    "text": "flash and they haven't we done DRM which means that if you paid your TV license",
    "start": "2898390",
    "end": "2904180"
  },
  {
    "text": "you may may feel justified in downloading a lot of series of the clangers or Doctor Who or whatever it",
    "start": "2904180",
    "end": "2909369"
  },
  {
    "text": "happens to be and they're really handy for creating an md5 checksum because it takes quite a bit of time to do an md5",
    "start": "2909369",
    "end": "2915700"
  },
  {
    "text": "checksum so we have a CPU intensive operation it's kind of my own intensive because you've got to read huge files",
    "start": "2915700",
    "end": "2921369"
  },
  {
    "text": "off the file system but the real work is the md5 calculation because you have to read every byte to get to the end just",
    "start": "2921369",
    "end": "2927369"
  },
  {
    "text": "in order to work out what the md5 is so that's what we're basing our data set on",
    "start": "2927369",
    "end": "2932440"
  },
  {
    "text": "we've gone from music files and we're now into this concept of",
    "start": "2932440",
    "end": "2939150"
  },
  {
    "text": "of video files that were going to do an md5 check on so let's do one without",
    "start": "2939749",
    "end": "2945759"
  },
  {
    "text": "data flow that would be a better one so this is a console app you'll be glad",
    "start": "2945759",
    "end": "2952269"
  },
  {
    "text": "to know that my design skills have been thrown away [Music]",
    "start": "2952269",
    "end": "2958119"
  },
  {
    "text": "and it's in process folder I know you just paste that whole lot that's it",
    "start": "2958119",
    "end": "2963130"
  },
  {
    "text": "so what we have in here is a very simple thing something that can write an md5",
    "start": "2963130",
    "end": "2968420"
  },
  {
    "text": "file to the file system that's really dull something that can calculate an md5",
    "start": "2968420",
    "end": "2974150"
  },
  {
    "text": "which is in the is it this security library's something",
    "start": "2974150",
    "end": "2980510"
  },
  {
    "text": "like some librarian dotnet can do it let me just say cryptography library so",
    "start": "2980510",
    "end": "2986839"
  },
  {
    "text": "that's the word I was looking for cryptography because nothing is better than md5 for",
    "start": "2986839",
    "end": "2994300"
  },
  {
    "text": "yes don't even start me on that these passwords just went out with md5 hashes",
    "start": "2994300",
    "end": "2999619"
  },
  {
    "text": "all over them and it's really easy to reverse them is it Disney just when screwed up one of the sites has just",
    "start": "2999619",
    "end": "3005440"
  },
  {
    "text": "done it really big-time and so all we're gonna do is process every",
    "start": "3005440",
    "end": "3011230"
  },
  {
    "text": "file in a folder and we're going to get the file path and then we're gonna print out what the md5 for that file path is",
    "start": "3011230",
    "end": "3017200"
  },
  {
    "text": "so if I run that you end up with a console app that just goes through clangers one file does it want this is",
    "start": "3017200",
    "end": "3025480"
  },
  {
    "text": "not a synchronous so there's no multi-threading in this we're just doing a simple thing of I'm gonna create the",
    "start": "3025480",
    "end": "3030520"
  },
  {
    "text": "md5 for every file in this directory so so that's you know it does its job but",
    "start": "3030520",
    "end": "3037690"
  },
  {
    "text": "clearly we could have made this multi-threaded and we really want to do it to be",
    "start": "3037690",
    "end": "3044950"
  },
  {
    "text": "multi-threaded so let's see what the TPL dataflow can give us I'm gonna just do",
    "start": "3044950",
    "end": "3050740"
  },
  {
    "text": "one thing and cut a line out so don't look close your eyes it's like a football with 40 results look away now",
    "start": "3050740",
    "end": "3058109"
  },
  {
    "text": "from this because I'm got two code snippets because I'm too lazy so what",
    "start": "3058109",
    "end": "3063250"
  },
  {
    "text": "we're gonna do is we had that piece of work that went through a folder and it",
    "start": "3063250",
    "end": "3068680"
  },
  {
    "text": "went through the files and it carried the md5 so what we've done is we've moved the bit that was in here we've",
    "start": "3068680",
    "end": "3075400"
  },
  {
    "text": "moved out to its own method display md5 from file on console we've moved it out and because of that we can now create",
    "start": "3075400",
    "end": "3084069"
  },
  {
    "text": "this new thing from the dart flow library called action block and we hand",
    "start": "3084069",
    "end": "3089740"
  },
  {
    "text": "it eight during which is the file path and it will call that method with that",
    "start": "3089740",
    "end": "3097359"
  },
  {
    "text": "file path and do exactly the same thing we did before and puts it on the console what we actually do though is we get the",
    "start": "3097359",
    "end": "3104710"
  },
  {
    "text": "files from the folder and we post them into that block so we're not iterating through every file this finishes really",
    "start": "3104710",
    "end": "3111580"
  },
  {
    "text": "fast because the only way I said these blocks have their internal queue so they can take data just stuff it in them and",
    "start": "3111580",
    "end": "3117550"
  },
  {
    "text": "will automatically queue them all up for you so you would post all this so if we want to make sure everything's got done",
    "start": "3117550",
    "end": "3123810"
  },
  {
    "text": "we say hey we've completed all our work don't accept any more messages into that",
    "start": "3123810",
    "end": "3128920"
  },
  {
    "text": "block and then I'm going to wait for it to finish so we do all that work we've added about",
    "start": "3128920",
    "end": "3135280"
  },
  {
    "text": "10 lines of code and we're still only doing kind of one at a",
    "start": "3135280",
    "end": "3141700"
  },
  {
    "text": "time it was faster you see how this was much faster that's nothing to do with data flow that's called NTFS file",
    "start": "3141700",
    "end": "3148420"
  },
  {
    "text": "caching alright just a warning that's what really made the difference at the",
    "start": "3148420",
    "end": "3154330"
  },
  {
    "text": "start there's 16 gig of ram in this machine and NTFS grabs about 3 gigabit",
    "start": "3154330",
    "end": "3160240"
  },
  {
    "text": "to cache every file it can of existence so but what we can do now we've got this",
    "start": "3160240",
    "end": "3166359"
  },
  {
    "text": "action block and this structure of doing tasks as messages we can actually configure the action",
    "start": "3166359",
    "end": "3173920"
  },
  {
    "text": "block and we can say please use for threads when you're processing these",
    "start": "3173920",
    "end": "3180340"
  },
  {
    "text": "files that's it all we had to do was say to this action block use 4 threads go",
    "start": "3180340",
    "end": "3186910"
  },
  {
    "text": "ahead use 4 threads I didn't have to think about thread pools I didn't get",
    "start": "3186910",
    "end": "3192190"
  },
  {
    "text": "new threads I didn't create them I didn't have to think about where they came from how we would reuse them all that kind of thing and bang it's an",
    "start": "3192190",
    "end": "3198940"
  },
  {
    "text": "outing form at a time so I've now got a 400% increase in my",
    "start": "3198940",
    "end": "3204490"
  },
  {
    "text": "productivity of creating md5 from BBC iplayer downloads and it's a really",
    "start": "3204490",
    "end": "3209500"
  },
  {
    "text": "quick win because there was very little refactoring to do we took that console the kind of work that was being done",
    "start": "3209500",
    "end": "3215200"
  },
  {
    "text": "into a method shove that into an action block and then told the action block go ahead make this multi-threaded",
    "start": "3215200",
    "end": "3222630"
  },
  {
    "text": "how many people are using the dataflow library how many people have never heard of it",
    "start": "3223269",
    "end": "3229769"
  },
  {
    "text": "yeah how many people wish they'd heard of it yeah you see yeah bit odd isn't it",
    "start": "3229769",
    "end": "3235959"
  },
  {
    "text": "and so this is what it is you post stuff into it it gets queued it does work and",
    "start": "3235959",
    "end": "3242789"
  },
  {
    "text": "you can put the word four on the top and it will do it in four you know that's",
    "start": "3242789",
    "end": "3248229"
  },
  {
    "text": "indicating four CPUs what are the other things you have is transform block so",
    "start": "3248229",
    "end": "3253509"
  },
  {
    "text": "I'm going to rush a bit through this because we're getting near the end and but seriously there's a great",
    "start": "3253509",
    "end": "3259559"
  },
  {
    "text": "presentation on in DC is pretty well we called it because it was done in Oslo so have a look at that and look through the",
    "start": "3259559",
    "end": "3265299"
  },
  {
    "text": "code on github but this is where you put in a file path and then the outputs of",
    "start": "3265299",
    "end": "3270640"
  },
  {
    "text": "file path and the md5 information for that file path this is where you can",
    "start": "3270640",
    "end": "3275890"
  },
  {
    "text": "isolate this bit is doing the real work and then this bit is doing a bit of UI",
    "start": "3275890",
    "end": "3281049"
  },
  {
    "text": "work so the real work that cpu-intensive we want to go across for threads the",
    "start": "3281049",
    "end": "3287380"
  },
  {
    "text": "thing that writes to a console doesn't need to be multi-threaded will will punt that into a single thread so this is",
    "start": "3287380",
    "end": "3293439"
  },
  {
    "text": "where you kind of try and work out where the bits that are bottlenecks will split those up from the bits that aren't",
    "start": "3293439",
    "end": "3298779"
  },
  {
    "text": "bottlenecks don't try and use multiple threads to do something like writing to a console because it's not required",
    "start": "3298779",
    "end": "3304799"
  },
  {
    "text": "and you can do really fancy stuff so one of the things we can do is we can",
    "start": "3304799",
    "end": "3312609"
  },
  {
    "text": "take we can have something called transform any block and that takes many things in pumps many things out",
    "start": "3312609",
    "end": "3318239"
  },
  {
    "text": "more importantly you can I could have left by the way a transform block with",
    "start": "3318239",
    "end": "3323259"
  },
  {
    "text": "four threads or you can split it out and fan-out like this if you want it to be more explicit but we can actually start",
    "start": "3323259",
    "end": "3329019"
  },
  {
    "text": "putting filters on these blocks so you can just say hey every time you get a",
    "start": "3329019",
    "end": "3334479"
  },
  {
    "text": "message run this bit of code and if this returns true then send that connect this",
    "start": "3334479",
    "end": "3340449"
  },
  {
    "text": "message to the next block so it says hey I'm getting messages I'm going to hand",
    "start": "3340449",
    "end": "3345519"
  },
  {
    "text": "them over to here and transform them and then send them on to something and we can make that that if it's a file I go",
    "start": "3345519",
    "end": "3352299"
  },
  {
    "text": "off and create md5 if it's a folder directory we go back into here and get",
    "start": "3352299",
    "end": "3359770"
  },
  {
    "text": "the files again this is recursive programming multi-threaded made easy right seriously much easier than trying",
    "start": "3359770",
    "end": "3368140"
  },
  {
    "text": "to do it by hand and then we go and link all those transformed blocks can feed",
    "start": "3368140",
    "end": "3373510"
  },
  {
    "text": "back into the action block that sends everything to a console so to give you a theory feel for what",
    "start": "3373510",
    "end": "3381700"
  },
  {
    "text": "that code looks like very quickly because I claimed it was really easy",
    "start": "3381700",
    "end": "3389340"
  },
  {
    "text": "and it's really naughty to say it's really easy and I'm not going to show you the code",
    "start": "3389340",
    "end": "3394590"
  },
  {
    "text": "bad of me by the way I find it really is quite",
    "start": "3394590",
    "end": "3400210"
  },
  {
    "text": "important if you're going to do something fancy and data foo is too broad the diagram of how everything",
    "start": "3400210",
    "end": "3405910"
  },
  {
    "text": "joins up and don't try and code it because I think that's quite a hard way to start it so we have folder contents",
    "start": "3405910",
    "end": "3413590"
  },
  {
    "text": "block this is the first thing in that diagram that was on the left and we say we're going to link the output of this",
    "start": "3413590",
    "end": "3421980"
  },
  {
    "text": "to the folder contents block every time we find it's a folder a not file",
    "start": "3421980",
    "end": "3428550"
  },
  {
    "text": "so anything else down here there if we get a folder",
    "start": "3428550",
    "end": "3434200"
  },
  {
    "text": "contents block we link that to a create md5 block if we find a file so we're",
    "start": "3434200",
    "end": "3439630"
  },
  {
    "text": "wiring them all together and that's the wiring just very simple link to where",
    "start": "3439630",
    "end": "3445869"
  },
  {
    "text": "it's going to go to and a predicate that returns true or false and that way we can have meshes and joins and send",
    "start": "3445869",
    "end": "3452650"
  },
  {
    "text": "things out really nicely and that's it that's enough to make it recursive",
    "start": "3452650",
    "end": "3459390"
  },
  {
    "text": "if you're unlucky you've managed to get one of those special folders in NTFS that links to itself and you'll never",
    "start": "3459390",
    "end": "3465670"
  },
  {
    "text": "end but you know hopefully it's not one of those and they shouldn't be they're really evil",
    "start": "3465670",
    "end": "3472359"
  },
  {
    "text": "should not be allowed but it's ok now because you won't fail quickly on that because we've now got",
    "start": "3472359",
    "end": "3478810"
  },
  {
    "text": "rid of max path so we'll just carry on forever whereas we used to crash really fast on those kind of folders and",
    "start": "3478810",
    "end": "3485460"
  },
  {
    "text": "so just as a summary of what you get with dataflow dataflow is you action",
    "start": "3485460",
    "end": "3490720"
  },
  {
    "text": "bloc word just there's something but doesn't pass the message on you get these transform blocks that take in a message just something to it changes its",
    "start": "3490720",
    "end": "3498010"
  },
  {
    "text": "shape maybe and spits it back out buffers that just butter up a load of",
    "start": "3498010",
    "end": "3503350"
  },
  {
    "text": "messages so that you can just sync them all out into one place and then fan them out we can do batches of inputs so we",
    "start": "3503350",
    "end": "3510340"
  },
  {
    "text": "know we're only ever going to start processing when we get five things so that we can actually schedule batches of",
    "start": "3510340",
    "end": "3516070"
  },
  {
    "text": "work we can broadcast to or loads of blocks at the end so that's really handy",
    "start": "3516070",
    "end": "3521290"
  },
  {
    "text": "do you say I'm gonna I finished creating this M this file I finished encoding it",
    "start": "3521290",
    "end": "3527320"
  },
  {
    "text": "I'm gonna send it to an orthogonal responsibility which is a logger that just logs that we actually encoded",
    "start": "3527320",
    "end": "3532930"
  },
  {
    "text": "something I'm going to record into sequel that we encoded it over here and I'm going to move the file on to this place which is a dispatch area where we",
    "start": "3532930",
    "end": "3540730"
  },
  {
    "text": "can actually start thinking about selling this file on a music download site so that's how you can send off multiple things at once and obviously",
    "start": "3540730",
    "end": "3547870"
  },
  {
    "text": "the orthogonal things like logging to a file are less important so that they can be on a lower priority and less threads",
    "start": "3547870",
    "end": "3555450"
  },
  {
    "text": "so so general concurrency issues which we",
    "start": "3555450",
    "end": "3560680"
  },
  {
    "text": "get is shared state that's all we have concurrent collections which is really good because you can",
    "start": "3560680",
    "end": "3567970"
  },
  {
    "text": "access them from multiple threads and I would say be careful with Singleton's there's a reason singleton is the",
    "start": "3567970",
    "end": "3574690"
  },
  {
    "text": "pattern that most people know the most and is the anti pattern that most people know the most and it's evil and it can",
    "start": "3574690",
    "end": "3581890"
  },
  {
    "text": "be nice it's really hard to distinguish the two and it's a fine line and happens quite a lot",
    "start": "3581890",
    "end": "3587070"
  },
  {
    "text": "beware of locking conditions anyone had sequel deadlocks where someone's got translated you get the same stuff in",
    "start": "3587070",
    "end": "3593740"
  },
  {
    "text": "multi-threaded code if you're not careful this is why it's really handy to have wrappers like the data flow and",
    "start": "3593740",
    "end": "3599710"
  },
  {
    "text": "async and weight data flow forces you to not lock things and sure state by doing that you avoid these kind of things",
    "start": "3599710",
    "end": "3606480"
  },
  {
    "text": "there are useful NuGet packages such as poly if anyone's used it a policy engine that's really good for doing retries and",
    "start": "3606480",
    "end": "3613030"
  },
  {
    "text": "backing off so if you do get a lock you can back off and then come back in later and compensating actions you have not got",
    "start": "3613030",
    "end": "3620920"
  },
  {
    "text": "the ability to just go rollback hopefully you don't want to use ms dtc",
    "start": "3620920",
    "end": "3626700"
  },
  {
    "text": "for distributed transactions across multiple servers please don't and it",
    "start": "3626700",
    "end": "3631920"
  },
  {
    "text": "will stop working when you go to a modern version of sequel server because if we doesn't like that for all its read-only replica stuff it hates",
    "start": "3631920",
    "end": "3638430"
  },
  {
    "text": "multiple transactions distributed transactions so you need to think about what it means for you to fail and what",
    "start": "3638430",
    "end": "3645150"
  },
  {
    "text": "you would do if you did fail and it's there anything you can compensate or do you just send a message to your DevOps",
    "start": "3645150",
    "end": "3650640"
  },
  {
    "text": "email address for that team and say I'll tell them to sort the mess out that's just happened you know which is actually",
    "start": "3650640",
    "end": "3656069"
  },
  {
    "text": "a valid thing to do is human beings are much better at resolving in consistencies than your best guess at",
    "start": "3656069",
    "end": "3662550"
  },
  {
    "text": "the time that you couldn't work out what necessarily went wrong but we've coded for it because you can't code for",
    "start": "3662550",
    "end": "3669089"
  },
  {
    "text": "everything and the other thing is it's important to understand how your code is actually running is it really",
    "start": "3669089",
    "end": "3675780"
  },
  {
    "text": "multi-threaded or is there just a load of CPU sat at the side washing this one guy",
    "start": "3675780",
    "end": "3682490"
  },
  {
    "text": "bust his backside off getting quite hot because he starts",
    "start": "3682490",
    "end": "3689040"
  },
  {
    "text": "getting quite hot because you really don't want to get to the point where your server kind of does that all right",
    "start": "3689040",
    "end": "3695599"
  },
  {
    "text": "but the mean currently is that's JavaScript well no but I couldn't",
    "start": "3695599",
    "end": "3701520"
  },
  {
    "text": "possibly say that I'm using this in there I've seen code like when people do",
    "start": "3701520",
    "end": "3706589"
  },
  {
    "text": "mocks and what they've done is mock everything out and there's nothing real ever being tested anymore the we're",
    "start": "3706589",
    "end": "3711839"
  },
  {
    "text": "using threads but actually everything's on one thread and no one's really realized it's also reasonably common so",
    "start": "3711839",
    "end": "3718349"
  },
  {
    "text": "yes if you want to find out get all the source code for the actor patterns and data flow and for the patterns and",
    "start": "3718349",
    "end": "3724470"
  },
  {
    "text": "practices that are available on github comm slash Wesley L you can also search for Vimeo ND c liam wesley and if you do",
    "start": "3724470",
    "end": "3732059"
  },
  {
    "text": "that you will find full one-hour presentations on the actor's life for me",
    "start": "3732059",
    "end": "3737250"
  },
  {
    "text": "and also a sync c-sharp 5 noir patters for real-world use I didn't load it I",
    "start": "3737250",
    "end": "3744990"
  },
  {
    "text": "didn't misspell the word patterns so whatever you do don't search for patterns because you won't find it it's",
    "start": "3744990",
    "end": "3750420"
  },
  {
    "text": "patters which does sound like an Aussie cricketer yeah pan is just window crease",
    "start": "3750420",
    "end": "3756100"
  },
  {
    "text": "and but there you are that's a terrible accent tell you know and I'm gonna have",
    "start": "3756100",
    "end": "3761560"
  },
  {
    "text": "to handle questions offline because I've really gone over by about three minutes but I'm Welton for anyone to come up",
    "start": "3761560",
    "end": "3767350"
  },
  {
    "text": "with ask questions and I hope you enjoyed that and it's useful",
    "start": "3767350",
    "end": "3772589"
  },
  {
    "text": "and Joe's going to be doing which room are you in Joe room one will be advanced",
    "start": "3776250",
    "end": "3782410"
  },
  {
    "text": "a sink topics which we well",
    "start": "3782410",
    "end": "3786270"
  }
]