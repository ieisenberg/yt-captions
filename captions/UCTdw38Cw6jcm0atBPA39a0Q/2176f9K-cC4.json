[
  {
    "text": "okay folks we will make a start thank again thank you all for coming to one of",
    "start": "7540",
    "end": "13639"
  },
  {
    "text": "the Nisha's topic and especially at a developer conference",
    "start": "13639",
    "end": "18849"
  },
  {
    "text": "it could be considered heresy to talk about databases but who is a developer",
    "start": "18849",
    "end": "26610"
  },
  {
    "text": "okie-dokie so I don't need to talk about how this works for data warehouses and",
    "start": "26610",
    "end": "33010"
  },
  {
    "text": "things okay so before I begin yes there are more normal forms than three we will",
    "start": "33010",
    "end": "41260"
  },
  {
    "text": "be exploring them more going Pastore can",
    "start": "41260",
    "end": "46510"
  },
  {
    "text": "be useful despite third normal form being your",
    "start": "46510",
    "end": "51760"
  },
  {
    "text": "goal and we will get into it but first of all I wanted to introduce myself",
    "start": "51760",
    "end": "57880"
  },
  {
    "text": "hi I'm Steph you probably guess that that's me I run a data science consultancy and I",
    "start": "57880",
    "end": "66100"
  },
  {
    "text": "also focus on data ops so how can we make analytics automated and take some",
    "start": "66100",
    "end": "73990"
  },
  {
    "text": "of the principles from DevOps and stick it in analytics because data warehouses",
    "start": "73990",
    "end": "79929"
  },
  {
    "text": "reporting and stuff it's kind of stuck in the stone age so I really love coming",
    "start": "79929",
    "end": "86139"
  },
  {
    "text": "to developer conferences so I can shamelessly steal stuff and put it into practice I'm a Microsoft MVP I write",
    "start": "86139",
    "end": "95319"
  },
  {
    "text": "books on are you can get them pretty",
    "start": "95319",
    "end": "100450"
  },
  {
    "text": "darn cheap because I self-published and you can follow me on Twitter so that's",
    "start": "100450",
    "end": "107380"
  },
  {
    "text": "me now we can carry on so we're going to cover today is what is furred normal",
    "start": "107380",
    "end": "112719"
  },
  {
    "text": "form how do you get there from some data and why it sucks to have to use for a",
    "start": "112719",
    "end": "121779"
  },
  {
    "text": "normal form as a developer will then go",
    "start": "121779",
    "end": "126999"
  },
  {
    "text": "okay so step set up the problem what is her proposed solution and the proposed",
    "start": "126999",
    "end": "134080"
  },
  {
    "text": "solution or one of the solutions is six normal form databases so I'll take you",
    "start": "134080",
    "end": "140319"
  },
  {
    "text": "through how that works anchor modeling and a lot of the benefits",
    "start": "140319",
    "end": "146050"
  },
  {
    "text": "some clear use cases for when you should consider using it so no DBA it depends",
    "start": "146050",
    "end": "153370"
  },
  {
    "text": "answer just a nice checklist so you can say yes this situation is my situation I",
    "start": "153370",
    "end": "161170"
  },
  {
    "text": "should consider anchor modeling so drilling into third normal form the",
    "start": "161170",
    "end": "168550"
  },
  {
    "text": "definition of third normal form no repeating groups per room",
    "start": "168550",
    "end": "173700"
  },
  {
    "text": "no partially dependent attributes and no dependencies except on the key of course",
    "start": "173700",
    "end": "182230"
  },
  {
    "text": "that requires a whole lot of background so instead of doing more for like complicated database modeling",
    "start": "182230",
    "end": "189700"
  },
  {
    "text": "terminology I thought we'd work through an example",
    "start": "189700",
    "end": "194460"
  },
  {
    "text": "so we have some data this exists in your",
    "start": "196320",
    "end": "202210"
  },
  {
    "text": "database somebody has a customer table it has information like names how many",
    "start": "202210",
    "end": "210700"
  },
  {
    "text": "people share the same name what my job is and cuz I'm a data scientist who data",
    "start": "210700",
    "end": "216100"
  },
  {
    "text": "scientist hang out with which is ever hipsters address details and some",
    "start": "216100",
    "end": "223209"
  },
  {
    "text": "purchases so a buy a lot of beer I haven't yet got around to buying anything else so this is your",
    "start": "223209",
    "end": "232890"
  },
  {
    "text": "unnormalized denormalized data right so",
    "start": "232890",
    "end": "239290"
  },
  {
    "text": "what's bad about that what are the problems with this data like if this was",
    "start": "239290",
    "end": "246070"
  },
  {
    "text": "in your database and you're a developer and you are having to code against this what problems are you gonna encounter",
    "start": "246070",
    "end": "255180"
  },
  {
    "text": "redundant data yep anything else",
    "start": "256739",
    "end": "263160"
  },
  {
    "text": "gigantic table size we've got purchase one and two do we really want to",
    "start": "264260",
    "end": "269910"
  },
  {
    "text": "restrict our customers to only purchasing two things from us anything else",
    "start": "269910",
    "end": "276349"
  },
  {
    "text": "yep there's a lot of ambiguity so if you had a lookup for this kind of thing that",
    "start": "285520",
    "end": "292099"
  },
  {
    "text": "would work but otherwise you could end up with some typos and things in there",
    "start": "292099",
    "end": "298060"
  },
  {
    "text": "okay so if I misspelled something in",
    "start": "298060",
    "end": "304550"
  },
  {
    "text": "that table it would be very hard for me to specifically call out a customer with",
    "start": "304550",
    "end": "313159"
  },
  {
    "text": "the surname lock and fix it I might end up fixing all the locks which would be a",
    "start": "313159",
    "end": "319099"
  },
  {
    "text": "problem there's a lot of repeating in folk there's limits on how much people can purchase there's things that are",
    "start": "319099",
    "end": "327020"
  },
  {
    "text": "dependent on other columns and the table says customers but so much of that info",
    "start": "327020",
    "end": "334520"
  },
  {
    "text": "isn't about customers it is pretty weird to have all of that together so we can",
    "start": "334520",
    "end": "342409"
  },
  {
    "text": "start tackling some of the issues so the first normal form does not contain",
    "start": "342409",
    "end": "350210"
  },
  {
    "text": "repeating groups in a room what that means is instead of purchase history",
    "start": "350210",
    "end": "356360"
  },
  {
    "text": "item 1 item 2 item 3 as columns instead",
    "start": "356360",
    "end": "361879"
  },
  {
    "text": "those should be a row for each purchase so you don't have any repeating groups",
    "start": "361879",
    "end": "369139"
  },
  {
    "text": "going across in your columns now the",
    "start": "369139",
    "end": "374449"
  },
  {
    "text": "nice thing about this is our customers can have unlimited purchases but there's",
    "start": "374449",
    "end": "380120"
  },
  {
    "text": "still a load of our problems so we got through one of our problems which is the",
    "start": "380120",
    "end": "389539"
  },
  {
    "text": "purchase limit but we still have a whole",
    "start": "389539",
    "end": "395180"
  },
  {
    "text": "bunch of issues so maybe second normal form will solve it for us second normal",
    "start": "395180",
    "end": "403159"
  },
  {
    "text": "form involves no partially dependent",
    "start": "403159",
    "end": "408830"
  },
  {
    "text": "information so if first name and surname were your ways",
    "start": "408830",
    "end": "417390"
  },
  {
    "text": "of identifying a customer that would be considered your natural key of course",
    "start": "417390",
    "end": "425010"
  },
  {
    "text": "first name and surname is a bad idea for considering somebody a unique person",
    "start": "425010",
    "end": "430560"
  },
  {
    "text": "all those John Smith's are really going to get in our way but the number of people with the same",
    "start": "430560",
    "end": "438870"
  },
  {
    "text": "first name is partially dependent on your key so part of your key first name",
    "start": "438870",
    "end": "446730"
  },
  {
    "text": "if you know that you know the answer to this piece of information so we split",
    "start": "446730",
    "end": "453690"
  },
  {
    "text": "that out so now our data is in second normal form still not particularly good",
    "start": "453690",
    "end": "462930"
  },
  {
    "text": "right so we solve a few things we're now",
    "start": "462930",
    "end": "470250"
  },
  {
    "text": "down to only three big issues and we still got all the repeating info got all",
    "start": "470250",
    "end": "476520"
  },
  {
    "text": "the info about customers so third normal form third normal form has no",
    "start": "476520",
    "end": "487010"
  },
  {
    "text": "conditional dependencies so the population of a country was not",
    "start": "487010",
    "end": "493590"
  },
  {
    "text": "dependent on the key but it was dependent on another part of the table",
    "start": "493590",
    "end": "501330"
  },
  {
    "text": "so we split that out into its own table and now technically we have third normal",
    "start": "501330",
    "end": "508860"
  },
  {
    "text": "form but there's still things wrong with",
    "start": "508860",
    "end": "514200"
  },
  {
    "text": "that right so what's still wrong with it",
    "start": "514200",
    "end": "520520"
  },
  {
    "text": "hmm yeah IDs we so can't do the update",
    "start": "523190",
    "end": "529680"
  },
  {
    "text": "based on a specific customer instance but we still have purchase history in",
    "start": "529680",
    "end": "535829"
  },
  {
    "text": "our original table third normal form says that's okay so you're probably",
    "start": "535829",
    "end": "545160"
  },
  {
    "text": "thinking wait have I been thinking about third normal form wrong and you would be",
    "start": "545160",
    "end": "552660"
  },
  {
    "text": "right actually hopefully most of you build your databases to what's called",
    "start": "552660",
    "end": "558510"
  },
  {
    "text": "Boyce Codd normal form voice Codd normal form says only information about an",
    "start": "558510",
    "end": "568040"
  },
  {
    "text": "entity in the table so purchases is a an",
    "start": "568040",
    "end": "574699"
  },
  {
    "text": "interaction that we should split out because it is about the customer entity",
    "start": "574699",
    "end": "581310"
  },
  {
    "text": "and your inventory entity and how they",
    "start": "581310",
    "end": "586410"
  },
  {
    "text": "relate so you would split out your purchases and then use a customer ID to",
    "start": "586410",
    "end": "593370"
  },
  {
    "text": "relate to them so this is probably a lot more like what you're already doing so",
    "start": "593370",
    "end": "601920"
  },
  {
    "text": "pretty nifty Lea you've just jumped to normal forms because Boyce Codd normal form is comes after fourth normal form",
    "start": "601920",
    "end": "610010"
  },
  {
    "text": "so when everybody else goes yeah you need to get your database of food normal form you go I get mine - Boyce Codd",
    "start": "610010",
    "end": "617459"
  },
  {
    "text": "normal form and sound instantly Thresher so so are there any problems with this",
    "start": "617459",
    "end": "630510"
  },
  {
    "text": "schema now that one that you're probably",
    "start": "630510",
    "end": "635639"
  },
  {
    "text": "pretty happy roughly with this schema you keep lookups and things in separate",
    "start": "635639",
    "end": "642269"
  },
  {
    "text": "tables you've got purchases in a nice easy narrow table you'd probably be",
    "start": "642269",
    "end": "650459"
  },
  {
    "text": "quite happy with this in production it looks good this is what we've been",
    "start": "650459",
    "end": "658430"
  },
  {
    "text": "told we should design to but as",
    "start": "658430",
    "end": "663730"
  },
  {
    "text": "developers when we're working with our application and our data conceptual",
    "start": "663730",
    "end": "671120"
  },
  {
    "text": "module model we still have a whole bunch of problems that don't necessarily",
    "start": "671120",
    "end": "677600"
  },
  {
    "text": "relate to the normal form but the way that the tables end up structured so",
    "start": "677600",
    "end": "685550"
  },
  {
    "text": "you've got your database what are the problems that you encounter and frustrate you about your database when",
    "start": "685550",
    "end": "693500"
  },
  {
    "text": "you're bit when you're making a change in your app what are the problems that you encounter",
    "start": "693500",
    "end": "700000"
  },
  {
    "text": "yeah it takes a lot of work to if you want to change data you have to maybe",
    "start": "709850",
    "end": "716580"
  },
  {
    "text": "set up a new table copy the data across into it and then roll over which makes",
    "start": "716580",
    "end": "722640"
  },
  {
    "text": "your deployments really complicated any of our issues who understands indexing I",
    "start": "722640",
    "end": "731510"
  },
  {
    "text": "don't indexing is hard if you have all those columns going across and you've",
    "start": "731510",
    "end": "739050"
  },
  {
    "text": "got your however you write your queries you can use indexes to improve it but",
    "start": "739050",
    "end": "745350"
  },
  {
    "text": "then you have to understand about indexes and apply them in a way that your DBA doesn't want to kill you",
    "start": "745350",
    "end": "752540"
  },
  {
    "text": "because there are raffle bunch DBAs so whatever problems",
    "start": "752540",
    "end": "759620"
  },
  {
    "text": "paedon read performance yep",
    "start": "760940",
    "end": "766640"
  },
  {
    "text": "any others okay I I think I gave the",
    "start": "766640",
    "end": "772950"
  },
  {
    "text": "problems with the DBA with third normal form for devs but maybe I over fought so change gets",
    "start": "772950",
    "end": "781980"
  },
  {
    "text": "riskier over time you've got your application with a and you've got eight",
    "start": "781980",
    "end": "788670"
  },
  {
    "text": "million customers you want to add a field to your customer table because it",
    "start": "788670",
    "end": "794610"
  },
  {
    "text": "was put on a forum by a product owner it gets kind of nail-biting going I need to",
    "start": "794610",
    "end": "803490"
  },
  {
    "text": "add a column to an eight million row table that could take the database",
    "start": "803490",
    "end": "808740"
  },
  {
    "text": "offline or the performance is going to be slow what if I screw it up what if my",
    "start": "808740",
    "end": "815459"
  },
  {
    "text": "statement doesn't work the longer you",
    "start": "815459",
    "end": "821610"
  },
  {
    "text": "use your third normal form database the scarier it gets to make changes again",
    "start": "821610",
    "end": "828540"
  },
  {
    "text": "your DBA will probably kick you for this if you write select stir in your database and then somebody else adds a",
    "start": "828540",
    "end": "836190"
  },
  {
    "text": "column then it can really break things then how do you know that your dev",
    "start": "836190",
    "end": "843360"
  },
  {
    "text": "version is the same as your Pradhan how are you managing schema change and",
    "start": "843360",
    "end": "851279"
  },
  {
    "text": "promoting that through your environments it can be pretty difficult to do that",
    "start": "851279",
    "end": "857970"
  },
  {
    "text": "then as you make changes in an established system it can take a long",
    "start": "857970",
    "end": "863620"
  },
  {
    "text": "time like what if you need to re index or change a data type because you",
    "start": "863620",
    "end": "870250"
  },
  {
    "text": "thought yeah where are we going to get 32,000 different occupations and then",
    "start": "870250",
    "end": "877750"
  },
  {
    "text": "somebody comes along with the 32,000 for one and you now need to sicker you need",
    "start": "877750",
    "end": "882910"
  },
  {
    "text": "to change the ID from medium into a big int it's difficult then when it comes to",
    "start": "882910",
    "end": "893740"
  },
  {
    "text": "version control do you keep who here has the database under version control",
    "start": "893740",
    "end": "901710"
  },
  {
    "text": "database schema yeah okay how do you do",
    "start": "901710",
    "end": "907180"
  },
  {
    "text": "how do you manage database change do you keep a like do you use something like",
    "start": "907180",
    "end": "914680"
  },
  {
    "text": "sequel server Davout database tools where you have your desired state for a",
    "start": "914680",
    "end": "920500"
  },
  {
    "text": "database or do you have the initial version that somebody made and then a",
    "start": "920500",
    "end": "926589"
  },
  {
    "text": "series of scripts that have to be executed in order to recreate your",
    "start": "926589",
    "end": "932290"
  },
  {
    "text": "database States who has a desired state database who has a migration script",
    "start": "932290",
    "end": "939670"
  },
  {
    "text": "database yeah what happens if one of those scripts gets executed out of order",
    "start": "939670",
    "end": "946750"
  },
  {
    "text": "like you move to sequel server on Linux",
    "start": "946750",
    "end": "952959"
  },
  {
    "text": "and the file system has a different natural sort order on your numbers then",
    "start": "952959",
    "end": "960339"
  },
  {
    "text": "Windows does so then things get executed out of order what happens if somebody",
    "start": "960339",
    "end": "966160"
  },
  {
    "text": "replays those scripts will it break",
    "start": "966160",
    "end": "971399"
  },
  {
    "text": "can you safely deploy your database schema again and again all right and",
    "start": "971950",
    "end": "982630"
  },
  {
    "text": "then how do you know who changed what and when it can be pretty difficult",
    "start": "982630",
    "end": "991190"
  },
  {
    "text": "right so food normal form databases pretty troublesome so you end up with",
    "start": "991190",
    "end": "1001570"
  },
  {
    "text": "availability issues indexing is hard DBA shouted us customers shouted us it's",
    "start": "1001570",
    "end": "1009820"
  },
  {
    "text": "difficult to implement changes safely if",
    "start": "1009820",
    "end": "1015280"
  },
  {
    "text": "you've got lots of optional fields then you're storing nulls everywhere right and then you have to handle nulls in",
    "start": "1015280",
    "end": "1021640"
  },
  {
    "text": "your database in your front-end code and it causes like storage bloat and again",
    "start": "1021640",
    "end": "1027370"
  },
  {
    "text": "the DBA shout at you it can be really hard looking through get logs to see what",
    "start": "1027370",
    "end": "1034900"
  },
  {
    "text": "changed and when and understanding how the schema is has evolved is difficult",
    "start": "1034900",
    "end": "1044980"
  },
  {
    "text": "or which apps are working with which version of the schema there are more",
    "start": "1044980",
    "end": "1050740"
  },
  {
    "text": "woes changing data types oh that is efforts or what if you need to correct some if",
    "start": "1050740",
    "end": "1057670"
  },
  {
    "text": "you need a new version of a calculation change tracking is heard and then this",
    "start": "1057670",
    "end": "1064930"
  },
  {
    "text": "other one who has eaten their own dog food and built reports off of the",
    "start": "1064930",
    "end": "1071410"
  },
  {
    "text": "database they've built for their applications okay I highly recommend",
    "start": "1071410",
    "end": "1078520"
  },
  {
    "text": "that you do at least one report for a business user off your database to prove",
    "start": "1078520",
    "end": "1085330"
  },
  {
    "text": "that your database is usable in other contexts than your application because it has to be and until you've written a",
    "start": "1085330",
    "end": "1094180"
  },
  {
    "text": "query to satisfy a business user you can't no and you don't feel the pain",
    "start": "1094180",
    "end": "1102059"
  },
  {
    "text": "and a lot of people really want to be certain that you can prove the values",
    "start": "1102059",
    "end": "1109229"
  },
  {
    "text": "you showed at a specific point in time and doing change tracking in a third",
    "start": "1109229",
    "end": "1116249"
  },
  {
    "text": "normal form database context is usually pretty difficult how can you easily say user Bob last",
    "start": "1116249",
    "end": "1127679"
  },
  {
    "text": "Thursday got shown this screen if you're in a regulated or a healthcare type of",
    "start": "1127679",
    "end": "1134099"
  },
  {
    "text": "environment you need to be able to say that that's really hard in a fer normal",
    "start": "1134099",
    "end": "1141029"
  },
  {
    "text": "form schema and this is why no sequels the answer right let's just do document",
    "start": "1141029",
    "end": "1148769"
  },
  {
    "text": "store and we can worry about the schema later we can make changes as we need to",
    "start": "1148769",
    "end": "1157519"
  },
  {
    "text": "that is an acceptable solution in a range of situations sick normal form is",
    "start": "1157519",
    "end": "1165149"
  },
  {
    "text": "another solution for another range of situations so what is sick normal form",
    "start": "1165149",
    "end": "1175489"
  },
  {
    "text": "this is complete normalization so if you imagine or think back to our first",
    "start": "1175489",
    "end": "1184129"
  },
  {
    "text": "denormalized data that is everything as columns in one table sick normal form",
    "start": "1184129",
    "end": "1194749"
  },
  {
    "text": "basically does this every table",
    "start": "1194749",
    "end": "1200450"
  },
  {
    "text": "principally contains the entity key it relates to so like the customer ID and",
    "start": "1200450",
    "end": "1207210"
  },
  {
    "text": "then has a column for a specific attributes so every attribute in your",
    "start": "1207210",
    "end": "1213869"
  },
  {
    "text": "third normal form caller in your third normal form table would now have its own",
    "start": "1213869",
    "end": "1219659"
  },
  {
    "text": "table so this is what it would end up look looking like if you were hand",
    "start": "1219659",
    "end": "1226080"
  },
  {
    "text": "crafting your six normal form data warehouse liner business system",
    "start": "1226080",
    "end": "1233580"
  },
  {
    "text": "that is some crazy stuff right imagine writing all those joints you're not",
    "start": "1233580",
    "end": "1240520"
  },
  {
    "text": "gonna want to do it so we want that flexibility because if we wanted to add",
    "start": "1240520",
    "end": "1247330"
  },
  {
    "text": "a new column to our data to our conceptual model that our app is going",
    "start": "1247330",
    "end": "1253240"
  },
  {
    "text": "to use that's an extra table with a foreign key constraints you don't have",
    "start": "1253240",
    "end": "1260320"
  },
  {
    "text": "to take your database offline you don't impact anything else that is using all",
    "start": "1260320",
    "end": "1266800"
  },
  {
    "text": "the existing stuff you just have to add a new table and start filling it in this",
    "start": "1266800",
    "end": "1274360"
  },
  {
    "text": "it it makes the changes additive only but nobody ever should write six normal",
    "start": "1274360",
    "end": "1284110"
  },
  {
    "text": "form sequel queries it is how so we kind",
    "start": "1284110",
    "end": "1289900"
  },
  {
    "text": "of want that flexibility of being able to add tables and stuff but give us the",
    "start": "1289900",
    "end": "1295870"
  },
  {
    "text": "third normal form that we can use in our applications so this is where anchor modeling comes",
    "start": "1295870",
    "end": "1302590"
  },
  {
    "text": "in for you guys anchor modeling has a",
    "start": "1302590",
    "end": "1309970"
  },
  {
    "text": "great website tons of video tutorials for getting into the operational how do",
    "start": "1309970",
    "end": "1316720"
  },
  {
    "text": "you do things but you build a mock",
    "start": "1316720",
    "end": "1322240"
  },
  {
    "text": "conceptual model and the anchor model system builds you an idempotent sequel",
    "start": "1322240",
    "end": "1330430"
  },
  {
    "text": "script so a script that you can run again and again and will not make",
    "start": "1330430",
    "end": "1336130"
  },
  {
    "text": "changes to your database if those changes have been previously applied and",
    "start": "1336130",
    "end": "1343440"
  },
  {
    "text": "does it from effectively a full conceptual model so let me just see if",
    "start": "1343440",
    "end": "1353770"
  },
  {
    "text": "the Wi-Fi is fine and show you",
    "start": "1353770",
    "end": "1362590"
  },
  {
    "text": "let me just extend and duplicate instead they'll be easier okay so this system",
    "start": "1374090",
    "end": "1382860"
  },
  {
    "text": "has a nice online thing and it uses like",
    "start": "1382860",
    "end": "1388799"
  },
  {
    "text": "D free and forced Iraq did JavaScript stuff pretty nifty and you can build",
    "start": "1388799",
    "end": "1396360"
  },
  {
    "text": "your model using this GUI you can also build it through the underlying",
    "start": "1396360",
    "end": "1402259"
  },
  {
    "text": "representation but this system allows",
    "start": "1402259",
    "end": "1407450"
  },
  {
    "text": "you to build a model of how all the",
    "start": "1407450",
    "end": "1413370"
  },
  {
    "text": "entities interact inside your application and you can build your model for your app the other team can be",
    "start": "1413370",
    "end": "1422429"
  },
  {
    "text": "building their conceptual model you can deploy them both to the same database and then have connections between them",
    "start": "1422429",
    "end": "1429480"
  },
  {
    "text": "for where they hook together so you can",
    "start": "1429480",
    "end": "1434700"
  },
  {
    "text": "safely use this in a team environment",
    "start": "1434700",
    "end": "1438919"
  },
  {
    "text": "so you have the idempotent schema so this is the current state and you can",
    "start": "1458240",
    "end": "1467730"
  },
  {
    "text": "run that script against any version of your database so if you have an old",
    "start": "1467730",
    "end": "1474480"
  },
  {
    "text": "version setting around in the UAT environment and you want to run the dead version against it you just execute the",
    "start": "1474480",
    "end": "1481860"
  },
  {
    "text": "sequel script you can safely run that sequel script again and again it has",
    "start": "1481860",
    "end": "1490140"
  },
  {
    "text": "some strong advantages for if you need to do some interesting stuff so it has",
    "start": "1490140",
    "end": "1496710"
  },
  {
    "text": "multiple concepts of time not only do you have the time something happened so",
    "start": "1496710",
    "end": "1505770"
  },
  {
    "text": "if a user directly edits a field you can say the change happened at that time but",
    "start": "1505770",
    "end": "1513150"
  },
  {
    "text": "you might have processes that happen after a change happens so a a person",
    "start": "1513150",
    "end": "1523530"
  },
  {
    "text": "walks into the doctor's office and gives a change of address the event happened",
    "start": "1523530",
    "end": "1529590"
  },
  {
    "text": "when they handed the slip over you might need to record that because that's when",
    "start": "1529590",
    "end": "1535530"
  },
  {
    "text": "the change should be valid from but the receptionist won't load it into your",
    "start": "1535530",
    "end": "1541740"
  },
  {
    "text": "application for over six hours until after the surgery closes the doctor",
    "start": "1541740",
    "end": "1548910"
  },
  {
    "text": "might have made decisions about where to send prescriptions or letters in the",
    "start": "1548910",
    "end": "1553980"
  },
  {
    "text": "intervening six hours to the new address but your system wouldn't know that six",
    "start": "1553980",
    "end": "1562110"
  },
  {
    "text": "hours later so you have the time and event happens the time and event was",
    "start": "1562110",
    "end": "1567630"
  },
  {
    "text": "recorded and you can also then add a further notion of time of when an event",
    "start": "1567630",
    "end": "1574620"
  },
  {
    "text": "was evaluated and when you evaluate an event you can add a reliability measure",
    "start": "1574620",
    "end": "1583020"
  },
  {
    "text": "so these are optional attributes optional capabilities of anchor model",
    "start": "1583020",
    "end": "1589050"
  },
  {
    "text": "that you can enable but if somebody goes onto your app and",
    "start": "1589050",
    "end": "1595039"
  },
  {
    "text": "says their salary is now a million pounds when all of your other customers",
    "start": "1595039",
    "end": "1602149"
  },
  {
    "text": "income is between 0 and 200 grand",
    "start": "1602149",
    "end": "1607889"
  },
  {
    "text": "you could add a low reliability marker against that so downstream you could",
    "start": "1607889",
    "end": "1616529"
  },
  {
    "text": "kick off an asynchronous process to get that data vetted and customer services",
    "start": "1616529",
    "end": "1623249"
  },
  {
    "text": "could go in update it with a real value and assign a high reliability to that",
    "start": "1623249",
    "end": "1630059"
  },
  {
    "text": "new value or they could confirm it and change the reliability to one that",
    "start": "1630059",
    "end": "1636480"
  },
  {
    "text": "you're certain that data is correct so if you need to be worried about data",
    "start": "1636480",
    "end": "1642869"
  },
  {
    "text": "quality or to add multiple people's opinions about how much something how",
    "start": "1642869",
    "end": "1650369"
  },
  {
    "text": "likely something is to happen you can enable the reliability measuring and",
    "start": "1650369",
    "end": "1656009"
  },
  {
    "text": "have this baked into your model without you having to write any specific code to",
    "start": "1656009",
    "end": "1663690"
  },
  {
    "text": "make that happen it does version control",
    "start": "1663690",
    "end": "1669269"
  },
  {
    "text": "it records every version of your data as",
    "start": "1669269",
    "end": "1674519"
  },
  {
    "text": "it changes if you want to so this makes it fantastic for being able to rewind",
    "start": "1674519",
    "end": "1682080"
  },
  {
    "text": "your application and say this is what a customer saw on a given point in time",
    "start": "1682080",
    "end": "1691070"
  },
  {
    "text": "because all the changes are additive you do not need to take your database down",
    "start": "1693710",
    "end": "1700789"
  },
  {
    "text": "because you're not impacting existing tables it is safe to add new tables that",
    "start": "1700789",
    "end": "1710490"
  },
  {
    "text": "is great that means no downtime I love no downtime especially when I",
    "start": "1710490",
    "end": "1716279"
  },
  {
    "text": "don't have to do complicated things to achieve it so the model is pretty simple we'll look",
    "start": "1716279",
    "end": "1722909"
  },
  {
    "text": "at what makes up an anchor model it's also really great for a data warehouse",
    "start": "1722909",
    "end": "1728909"
  },
  {
    "text": "for most of these reasons it worked",
    "start": "1728909",
    "end": "1734099"
  },
  {
    "text": "really well on a column store database engine and it is cross-platform so you",
    "start": "1734099",
    "end": "1740009"
  },
  {
    "text": "can get it to generate sequel server specific in a sequel server specific",
    "start": "1740009",
    "end": "1748489"
  },
  {
    "text": "database implementation or an Oracle or Postgres or my sequel and because",
    "start": "1748489",
    "end": "1758309"
  },
  {
    "text": "everything in the database is basically you can effectively think of it as two columns the thing it relates to and the",
    "start": "1758309",
    "end": "1767340"
  },
  {
    "text": "thing you're talking about it is wonderful in a massively parallel scenario so from a scale out perspective",
    "start": "1767340",
    "end": "1775139"
  },
  {
    "text": "it becomes pretty nifty so what's in a",
    "start": "1775139",
    "end": "1780389"
  },
  {
    "text": "model in an anchor model when we say",
    "start": "1780389",
    "end": "1785519"
  },
  {
    "text": "anchor we're talking about entities so your anchor will be a customer inventory",
    "start": "1785519",
    "end": "1794210"
  },
  {
    "text": "staff then you have attributes so these",
    "start": "1794210",
    "end": "1799679"
  },
  {
    "text": "are the things about entities not so you look up tables so you probably already",
    "start": "1799679",
    "end": "1807090"
  },
  {
    "text": "have a bunch of knots and then a constraint that says the values in my",
    "start": "1807090",
    "end": "1812190"
  },
  {
    "text": "database for this field must be in this existing set and then ties how your",
    "start": "1812190",
    "end": "1819809"
  },
  {
    "text": "entities interact so you have some new words but you probably already think of",
    "start": "1819809",
    "end": "1826769"
  },
  {
    "text": "this stuff when you're building UML or use case diagrams right you have your",
    "start": "1826769",
    "end": "1833909"
  },
  {
    "text": "actors how they interact things that you need to track about them and constraints",
    "start": "1833909",
    "end": "1842220"
  },
  {
    "text": "about what they can say so those are the main components and then you can set up",
    "start": "1842220",
    "end": "1849389"
  },
  {
    "text": "some different concepts of time so you can make some thing static to just have a single value",
    "start": "1849389",
    "end": "1856489"
  },
  {
    "text": "so you're not gonna worry about change tracking you can then make something",
    "start": "1856489",
    "end": "1862009"
  },
  {
    "text": "historize to track the changes so whenever a new value is whenever you update a value the",
    "start": "1862009",
    "end": "1869989"
  },
  {
    "text": "old value will be stored with a beginning and an end date and you can then use a point in time view to say",
    "start": "1869989",
    "end": "1877429"
  },
  {
    "text": "what was the value at a given time or what changes did this value undergo",
    "start": "1877429",
    "end": "1885470"
  },
  {
    "text": "between these two dates and then concurrent Reliant's temporal which is",
    "start": "1885470",
    "end": "1893299"
  },
  {
    "text": "definitely a mouthful that is where you have the reliability indicators so you",
    "start": "1893299",
    "end": "1899389"
  },
  {
    "text": "not only have the concept of when things happened when they were recorded but",
    "start": "1899389",
    "end": "1905090"
  },
  {
    "text": "also when they were evaluated for reliability so you probably not gonna",
    "start": "1905090",
    "end": "1911720"
  },
  {
    "text": "turn this one on without a lot of thinking but you can use these two in",
    "start": "1911720",
    "end": "1917479"
  },
  {
    "text": "the same model right down to the same",
    "start": "1917479",
    "end": "1923179"
  },
  {
    "text": "anchor so you can say well people don't really change the date of birth so I'm",
    "start": "1923179",
    "end": "1929450"
  },
  {
    "text": "going to keep that as static but where people live they change that fairly often so I'm gonna make a histories view",
    "start": "1929450",
    "end": "1937009"
  },
  {
    "text": "of all the fields in address so that I get the change tracking it doesn't the",
    "start": "1937009",
    "end": "1946039"
  },
  {
    "text": "really nifty thing is about this that it doesn't have to be an all-or-nothing",
    "start": "1946039",
    "end": "1951080"
  },
  {
    "text": "scenario you can do a little bit in this you can turn you can make a new version",
    "start": "1951080",
    "end": "1959029"
  },
  {
    "text": "that its history store static and revert back you keep all your old data and you",
    "start": "1959029",
    "end": "1964999"
  },
  {
    "text": "just add this new section so how we do the work you can use the GUI and I will",
    "start": "1964999",
    "end": "1973249"
  },
  {
    "text": "admit to having a lot of fun dragging things around and seeing all the layout",
    "start": "1973249",
    "end": "1979810"
  },
  {
    "text": "sort itself out it has an XML schema so",
    "start": "1979810",
    "end": "1985090"
  },
  {
    "text": "yes it's XML I know that's kind of out of vogue but because anchor modeling is",
    "start": "1985090",
    "end": "1991660"
  },
  {
    "text": "open-source you can make a version of the translation engine engine in to use",
    "start": "1991660",
    "end": "2003330"
  },
  {
    "text": "JavaScript entirely you can take your third normal form schema that you have",
    "start": "2003330",
    "end": "2009870"
  },
  {
    "text": "already apply some sequel scripts and it will generate an anchor of model",
    "start": "2009870",
    "end": "2016320"
  },
  {
    "text": "representation so these are mentioned on",
    "start": "2016320",
    "end": "2021590"
  },
  {
    "text": "one of the posts on the home page so you could go and experiments without even",
    "start": "2021590",
    "end": "2029100"
  },
  {
    "text": "having to go through a modeling exercise you can take your existing database give it a go see what it feels like",
    "start": "2029100",
    "end": "2035700"
  },
  {
    "text": "and you can bring your own it's an entirely open system github repos you",
    "start": "2035700",
    "end": "2044040"
  },
  {
    "text": "can make changes recommendations implementations so one thing your data",
    "start": "2044040",
    "end": "2051419"
  },
  {
    "text": "you start with a blank canvas here is an",
    "start": "2051420",
    "end": "2057750"
  },
  {
    "text": "anchor and I'm doing this because I couldn't guarantee internet so here's",
    "start": "2057750",
    "end": "2063330"
  },
  {
    "text": "the example model which we can build so squares are your anchors diamonds are",
    "start": "2063330",
    "end": "2069990"
  },
  {
    "text": "your relationships and circles are your attributes and everything has metadata",
    "start": "2069990",
    "end": "2080570"
  },
  {
    "text": "so you have your descriptor which is your nice pretty name for a field you",
    "start": "2080570",
    "end": "2086639"
  },
  {
    "text": "give it a shorthand TL a for attributes",
    "start": "2086640",
    "end": "2094639"
  },
  {
    "text": "you can say what schema it belongs to and you can give it a longhand",
    "start": "2094640",
    "end": "2101100"
  },
  {
    "text": "description so you can be putting information about how you expect your",
    "start": "2101100",
    "end": "2107490"
  },
  {
    "text": "model to be used or concepts that are important or like",
    "start": "2107490",
    "end": "2113290"
  },
  {
    "text": "JimBob JimBob required this attribute you can put that information in there",
    "start": "2113290",
    "end": "2119850"
  },
  {
    "text": "and then you can say whether it has a lookup or whatever you want to do change",
    "start": "2119850",
    "end": "2127720"
  },
  {
    "text": "tracking and you can do it from inside this GUI so you build your model like",
    "start": "2127720",
    "end": "2135190"
  },
  {
    "text": "this and then the next step is to get ready to do a deployment so you can use",
    "start": "2135190",
    "end": "2143140"
  },
  {
    "text": "the GUI or there is a JavaScript utility",
    "start": "2143140",
    "end": "2149410"
  },
  {
    "text": "file called sis you late which will take an XML file representation and convert",
    "start": "2149410",
    "end": "2157270"
  },
  {
    "text": "that into another form of output so yes",
    "start": "2157270",
    "end": "2167410"
  },
  {
    "text": "it does but when you create it we I'll",
    "start": "2167410",
    "end": "2175720"
  },
  {
    "text": "show you how to do that at the end just",
    "start": "2175720",
    "end": "2181300"
  },
  {
    "text": "so I maintain my timings okay so you get",
    "start": "2181300",
    "end": "2187990"
  },
  {
    "text": "the things once you have the file once you have a sequel file you can run that",
    "start": "2187990",
    "end": "2194740"
  },
  {
    "text": "against your database and because it is just a JavaScript thing that you can do",
    "start": "2194740",
    "end": "2201310"
  },
  {
    "text": "in a command-line you can then put it in your continuous integration and deployment pipeline your schema your",
    "start": "2201310",
    "end": "2209920"
  },
  {
    "text": "database gets generated from a state so",
    "start": "2209920",
    "end": "2216610"
  },
  {
    "text": "you can do a clean state build or you can do a regression test or integration",
    "start": "2216610",
    "end": "2223540"
  },
  {
    "text": "test where you apply it to an existing database and run a check to make sure",
    "start": "2223540",
    "end": "2229660"
  },
  {
    "text": "that it is okay",
    "start": "2229660",
    "end": "2233280"
  },
  {
    "text": "so it's quite nice and easy you hit sequel code it does the",
    "start": "2235880",
    "end": "2241980"
  },
  {
    "text": "situation which is also just a great word it had various options like do you",
    "start": "2241980",
    "end": "2248610"
  },
  {
    "text": "want to build partitioning in it has some extra nifty bit you can get",
    "start": "2248610",
    "end": "2255360"
  },
  {
    "text": "adjacent representation of your model the really nifty thing is it",
    "start": "2255360",
    "end": "2262440"
  },
  {
    "text": "automatically documents your database if",
    "start": "2262440",
    "end": "2268890"
  },
  {
    "text": "you've got your descriptions and stuff in it's great and you can click through",
    "start": "2268890",
    "end": "2274020"
  },
  {
    "text": "to say what does this relate to put all your data types I love it when I don't",
    "start": "2274020",
    "end": "2282240"
  },
  {
    "text": "have to document something but something is documented for me",
    "start": "2282240",
    "end": "2287300"
  },
  {
    "text": "so once you have your database deployed",
    "start": "2289160",
    "end": "2295080"
  },
  {
    "text": "you then have to start using it in your application so it provides a whole bunch",
    "start": "2295080",
    "end": "2302730"
  },
  {
    "text": "of third normal form interfaces and has",
    "start": "2302730",
    "end": "2309530"
  },
  {
    "text": "nice business names as well that you can use so common application actions create",
    "start": "2309530",
    "end": "2318660"
  },
  {
    "text": "read update delete crud so when somebody says you have a cruddy app it's not",
    "start": "2318660",
    "end": "2325350"
  },
  {
    "text": "necessarily a slight create is an insert",
    "start": "2325350",
    "end": "2332520"
  },
  {
    "text": "read is a select update is an update and",
    "start": "2332520",
    "end": "2339560"
  },
  {
    "text": "because this is all about keeping data as much as possible it is relatively",
    "start": "2340160",
    "end": "2349110"
  },
  {
    "text": "difficult to delete data you can but the",
    "start": "2349110",
    "end": "2356520"
  },
  {
    "text": "easiest way for most situations is to just put a toggle an attribute which has",
    "start": "2356520",
    "end": "2364260"
  },
  {
    "text": "a 1 or a 0 for whether a customer should be deleted so you could do the soft delete toggle",
    "start": "2364260",
    "end": "2370660"
  },
  {
    "text": "and then if we're thinking GDP our right to be forgotten you can then do a more",
    "start": "2370660",
    "end": "2376630"
  },
  {
    "text": "intensive process to cascade through your model which because it's very clean",
    "start": "2376630",
    "end": "2382990"
  },
  {
    "text": "and simple it's really easy to say these are the things impacted by this customer",
    "start": "2382990",
    "end": "2389460"
  },
  {
    "text": "to do a full delete so you might have a",
    "start": "2389460",
    "end": "2397960"
  },
  {
    "text": "select you don't necessarily have to select all of these things but they have",
    "start": "2397960",
    "end": "2403690"
  },
  {
    "text": "these metadata columns these metadata columns tell you what version of the",
    "start": "2403690",
    "end": "2410710"
  },
  {
    "text": "schema the data was inserted or updated under so if you do a schema change to",
    "start": "2410710",
    "end": "2420250"
  },
  {
    "text": "work with your app sort of like a forked version then you can say this is the",
    "start": "2420250",
    "end": "2426850"
  },
  {
    "text": "data that might approve or if you have a legacy app that is still running on an",
    "start": "2426850",
    "end": "2432190"
  },
  {
    "text": "old version when it's making changes you can tell that you also get to see when",
    "start": "2432190",
    "end": "2438400"
  },
  {
    "text": "data changed so you understand its freshness so a select statement just",
    "start": "2438400",
    "end": "2447490"
  },
  {
    "text": "kind of works as usual insert when you insert you should make sure you have",
    "start": "2447490",
    "end": "2453280"
  },
  {
    "text": "your metadata ID and you can let me just",
    "start": "2453280",
    "end": "2461400"
  },
  {
    "text": "[Music]",
    "start": "2463220",
    "end": "2466310"
  },
  {
    "text": "I've hard coded this but whenever you",
    "start": "2474039",
    "end": "2479420"
  },
  {
    "text": "make a new schema or make a new evolved version of your model",
    "start": "2479420",
    "end": "2485180"
  },
  {
    "text": "it goes into a schema table and gets a number so you can link that to your",
    "start": "2485180",
    "end": "2494509"
  },
  {
    "text": "commit through your and put it in as a",
    "start": "2494509",
    "end": "2500450"
  },
  {
    "text": "config value or something or you can hard code it to give yourself a fixed point in time that is a that",
    "start": "2500450",
    "end": "2509240"
  },
  {
    "text": "depends on how you want to work and then",
    "start": "2509240",
    "end": "2515029"
  },
  {
    "text": "we can insert values so even though it's six normal form and even though we're",
    "start": "2515029",
    "end": "2522499"
  },
  {
    "text": "inserting an actor the actor name is actually a different table to the actor",
    "start": "2522499",
    "end": "2528829"
  },
  {
    "text": "ID we're still getting our interface and",
    "start": "2528829",
    "end": "2541630"
  },
  {
    "text": "then when it comes time to do our updates let me just make sure it worked",
    "start": "2541630",
    "end": "2552220"
  },
  {
    "text": "we can change it by referencing the original anchor ID and get changes and",
    "start": "2552880",
    "end": "2565690"
  },
  {
    "text": "even though there are all these other attributes we're only writing data into",
    "start": "2565690",
    "end": "2571759"
  },
  {
    "text": "the one table this means we're only storing as much data as actually exists it reconstructs",
    "start": "2571759",
    "end": "2583460"
  },
  {
    "text": "everything to say I don't have information but you're not ever having to store an absence of data this makes",
    "start": "2583460",
    "end": "2592759"
  },
  {
    "text": "your system much much smaller relative",
    "start": "2592759",
    "end": "2598130"
  },
  {
    "text": "to a fer normal form database e no it has this sheer volume of tables",
    "start": "2598130",
    "end": "2604890"
  },
  {
    "text": "right and it has various bits of",
    "start": "2604890",
    "end": "2614760"
  },
  {
    "text": "metadata like when things changed so that we know about those what was I",
    "start": "2614760",
    "end": "2621480"
  },
  {
    "text": "gonna say but the advantage of only",
    "start": "2621480",
    "end": "2629760"
  },
  {
    "text": "having data that is filled in not only do you have a storage benefit but it",
    "start": "2629760",
    "end": "2636780"
  },
  {
    "text": "makes it much easier for your database to compute statistics about the",
    "start": "2636780",
    "end": "2642829"
  },
  {
    "text": "distribution of data in those columns which means your queries become more",
    "start": "2642829",
    "end": "2648869"
  },
  {
    "text": "efficient without you having to do much what about you having to do anything ok",
    "start": "2648869",
    "end": "2659960"
  },
  {
    "text": "so when it comes time to change a schema",
    "start": "2659960",
    "end": "2665299"
  },
  {
    "text": "you can make a change in the GUI any",
    "start": "2665299",
    "end": "2670520"
  },
  {
    "text": "prior model is a valid state all the",
    "start": "2670520",
    "end": "2677400"
  },
  {
    "text": "prior versions so let's say you need to go from a 32 into a 64 in version of",
    "start": "2677400",
    "end": "2684599"
  },
  {
    "text": "something because we have lots of growth the 32 int version for all the old data",
    "start": "2684599",
    "end": "2693869"
  },
  {
    "text": "can still live in your database but your quick your new version of the app can",
    "start": "2693869",
    "end": "2701819"
  },
  {
    "text": "point to the new 64 bit version which you populated as part of with the old",
    "start": "2701819",
    "end": "2709799"
  },
  {
    "text": "values so you can correct your data use the new point in time version in your",
    "start": "2709799",
    "end": "2718049"
  },
  {
    "text": "app but old versions or fixed things that you can change can still be using",
    "start": "2718049",
    "end": "2724740"
  },
  {
    "text": "the original table so if you have",
    "start": "2724740",
    "end": "2729990"
  },
  {
    "text": "different versions of your app in the wild they can all still use",
    "start": "2729990",
    "end": "2735810"
  },
  {
    "text": "different database states but still be working from the same database so you",
    "start": "2735810",
    "end": "2743910"
  },
  {
    "text": "can do a change in a GUI or a system I used to have this for a data warehouse",
    "start": "2743910",
    "end": "2750150"
  },
  {
    "text": "so I was able to make I was able to add new value to a to a table in my metadata",
    "start": "2750150",
    "end": "2757470"
  },
  {
    "text": "database and then every hour when my ETL would run it would bill it would detect",
    "start": "2757470",
    "end": "2764040"
  },
  {
    "text": "changes and regenerate the sequel script and deploy new data deploy my schema",
    "start": "2764040",
    "end": "2769650"
  },
  {
    "text": "change so you can have this inside a",
    "start": "2769650",
    "end": "2775490"
  },
  {
    "text": "continuous delivery operation whether you generate the XML and check it in or",
    "start": "2775490",
    "end": "2783870"
  },
  {
    "text": "whether you have something that generates the XML and the downstream",
    "start": "2783870",
    "end": "2789180"
  },
  {
    "text": "sequel for you and then it I would",
    "start": "2789180",
    "end": "2796740"
  },
  {
    "text": "recommend you increment your metadata tag so you know which version of the",
    "start": "2796740",
    "end": "2804120"
  },
  {
    "text": "schema your app is running against so we",
    "start": "2804120",
    "end": "2809160"
  },
  {
    "text": "have our existing model to make changes",
    "start": "2809160",
    "end": "2814290"
  },
  {
    "text": "to it we can use the GUI so I'm going to",
    "start": "2814290",
    "end": "2821910"
  },
  {
    "text": "add two attributes I don't like having first name and surname in one system so",
    "start": "2821910",
    "end": "2827900"
  },
  {
    "text": "I can now fill in the information to make my two new attributes this is where",
    "start": "2827900",
    "end": "2838980"
  },
  {
    "text": "you put in the date ring the data range I made the video without putting like",
    "start": "2838980",
    "end": "2845550"
  },
  {
    "text": "brackets 255 you should put that in otherwise it'll default to virtual one",
    "start": "2845550",
    "end": "2852320"
  },
  {
    "text": "and we can historize them so that we have a change track version",
    "start": "2852320",
    "end": "2860090"
  },
  {
    "text": "and you know you have to be able to type correctly what they've done to improve",
    "start": "2862710",
    "end": "2869380"
  },
  {
    "text": "search speed and value comparison is",
    "start": "2869380",
    "end": "2874540"
  },
  {
    "text": "they've implemented a checksum value comparison which makes it much more",
    "start": "2874540",
    "end": "2882910"
  },
  {
    "text": "efficient if you're change if you're storing big values of text or gooood so",
    "start": "2882910",
    "end": "2891460"
  },
  {
    "text": "various things to be able to effectively compare that does mean that you need CL",
    "start": "2891460",
    "end": "2901930"
  },
  {
    "text": "are enabled in your database so right now you can't use as your sequel as a",
    "start": "2901930",
    "end": "2910900"
  },
  {
    "text": "platform for a sixth normal form database that does the checksum comparisons and right now with the I",
    "start": "2910900",
    "end": "2921070"
  },
  {
    "text": "think the current advice with specter and meltdown it's like turn off CLR the",
    "start": "2921070",
    "end": "2929650"
  },
  {
    "text": "mightier the our into our and - integration and just like go back to",
    "start": "2929650",
    "end": "2935430"
  },
  {
    "text": "straight sequel so that is a consideration for implementing this that",
    "start": "2935430",
    "end": "2942370"
  },
  {
    "text": "you will need to think about are we allowed to effectively run c-sharp in our database",
    "start": "2942370",
    "end": "2949830"
  },
  {
    "text": "idempotent script so that deploys and then our new version of our app app ID",
    "start": "2952420",
    "end": "2961150"
  },
  {
    "text": "too can do an insert it can reference only the columns it expects and that",
    "start": "2961150",
    "end": "2974829"
  },
  {
    "text": "version of the system works so we now get a second record without actor name",
    "start": "2974829",
    "end": "2983130"
  },
  {
    "text": "but that has the first name and the last name so you can keep changes relatively",
    "start": "2983130",
    "end": "2990190"
  },
  {
    "text": "in track with your app you can do updates you can be nice and be backwards",
    "start": "2990190",
    "end": "2997059"
  },
  {
    "text": "compatible and that's still fine here is",
    "start": "2997059",
    "end": "3005039"
  },
  {
    "text": "just changing values",
    "start": "3005039",
    "end": "3008299"
  },
  {
    "text": "and you can just be mean to your legacy apps and just update your new values so",
    "start": "3011680",
    "end": "3020650"
  },
  {
    "text": "if you're dropping columns because they're no longer relevant or because a",
    "start": "3020650",
    "end": "3026140"
  },
  {
    "text": "version of the app is no longer supported you can just insert the data",
    "start": "3026140",
    "end": "3031870"
  },
  {
    "text": "you care about so you're able to account",
    "start": "3031870",
    "end": "3037120"
  },
  {
    "text": "for effectively doing feature flagging",
    "start": "3037120",
    "end": "3041940"
  },
  {
    "text": "so when to use it they did a really nice paper where they simulated different",
    "start": "3045300",
    "end": "3053470"
  },
  {
    "text": "conditions different types of scenarios to come up with some nice easy",
    "start": "3053470",
    "end": "3059710"
  },
  {
    "text": "conclusions if you're going to track version history anchor models really",
    "start": "3059710",
    "end": "3067000"
  },
  {
    "text": "good for that it will be much faster than a big database with version history",
    "start": "3067000",
    "end": "3074830"
  },
  {
    "text": "done in a sort of hand-rolled kind of way if you have lots of optional values",
    "start": "3074830",
    "end": "3082290"
  },
  {
    "text": "this is brilliant because it's only storing the data that exists if you have",
    "start": "3082290",
    "end": "3090490"
  },
  {
    "text": "a big model so this maybe doesn't apply for when you're building rep like a",
    "start": "3090490",
    "end": "3098680"
  },
  {
    "text": "relatively simple mobile app but if you're taking a big legacy app that",
    "start": "3098680",
    "end": "3104050"
  },
  {
    "text": "covers a whole sort of mortgage loan process then you might have a lot of",
    "start": "3104050",
    "end": "3110020"
  },
  {
    "text": "data a lot of entities and interactions and this can be really useful if your",
    "start": "3110020",
    "end": "3119260"
  },
  {
    "text": "models changing a lot definitely consider Ankur modeling because the",
    "start": "3119260",
    "end": "3124390"
  },
  {
    "text": "changes are additive and you don't have to write the ad you don't have to write",
    "start": "3124390",
    "end": "3129730"
  },
  {
    "text": "the deployment scripts so there's no mistakes I love but there's no mistakes",
    "start": "3129730",
    "end": "3136710"
  },
  {
    "text": "if you need audit trails it's really good because it takes care of that for",
    "start": "3136710",
    "end": "3142810"
  },
  {
    "text": "you and especially if you need reliability measures then trying to model three",
    "start": "3142810",
    "end": "3151539"
  },
  {
    "text": "concepts of time is really hard and you will spend a lot of time doing it",
    "start": "3151539",
    "end": "3157660"
  },
  {
    "text": "whereas you could just turn it on so it",
    "start": "3157660",
    "end": "3165119"
  },
  {
    "text": "isn't an all-or-nothing because it's an idempotent script that doesn't drop your",
    "start": "3165119",
    "end": "3171220"
  },
  {
    "text": "database doesn't drop tables doesn't impact anything that already exists you",
    "start": "3171220",
    "end": "3178319"
  },
  {
    "text": "can use this for a small section of your app and keep the rest inferred normal",
    "start": "3178319",
    "end": "3189690"
  },
  {
    "text": "and when you should go back or stick",
    "start": "3189690",
    "end": "3197650"
  },
  {
    "text": "with the normal form if your schema is never gonna change so discontinue its",
    "start": "3197650",
    "end": "3204730"
  },
  {
    "text": "outer support thing that's just gonna take over with those few users then",
    "start": "3204730",
    "end": "3212099"
  },
  {
    "text": "maybe collapsing it back to third normal form to simplify things if you have lots",
    "start": "3212099",
    "end": "3218619"
  },
  {
    "text": "of search conditions so the way that the select with ways works is it will use a",
    "start": "3218619",
    "end": "3231579"
  },
  {
    "text": "bunch of the database wizardry behind it to not have to join everything but if",
    "start": "3231579",
    "end": "3239680"
  },
  {
    "text": "you have lots of search conditions then it has to join all of those tables so if",
    "start": "3239680",
    "end": "3246130"
  },
  {
    "text": "you had ten conditions that will probably be a slower query in section",
    "start": "3246130",
    "end": "3252010"
  },
  {
    "text": "normal form than it would be inferred normal form if you have low data volumes",
    "start": "3252010",
    "end": "3258279"
  },
  {
    "text": "then the overhead of multiple of lots of tables will probably mean that your",
    "start": "3258279",
    "end": "3264849"
  },
  {
    "text": "database is a bit slower if you have lots of lookups so the knotted",
    "start": "3264849",
    "end": "3274299"
  },
  {
    "text": "attributes that can be a little bit difficult and even though the database can do",
    "start": "3274299",
    "end": "3283670"
  },
  {
    "text": "clever things around performance with this it may still be a little bit slower",
    "start": "3283670",
    "end": "3291529"
  },
  {
    "text": "than a third normal form version in a number of these scenarios so what you",
    "start": "3291529",
    "end": "3297980"
  },
  {
    "text": "were if you need that extra millisecond and it isn't that you can turn on the",
    "start": "3297980",
    "end": "3305989"
  },
  {
    "text": "partitioning or turn on like use a column store database then you might",
    "start": "3305989",
    "end": "3313970"
  },
  {
    "text": "want to revert to third normal form but",
    "start": "3313970",
    "end": "3318099"
  },
  {
    "text": "these are the criteria where I would suggest you give anchor modeling ago",
    "start": "3320619",
    "end": "3328269"
  },
  {
    "text": "okay I go through this nice and quickly so we'll be able to have plenty of time",
    "start": "3329619",
    "end": "3335420"
  },
  {
    "text": "for questions and playing with a model so for normal form actually most of you",
    "start": "3335420",
    "end": "3342289"
  },
  {
    "text": "have probably been doing boyce-codd normal form whoo-hoo you got an extra two it really sucks as an application",
    "start": "3342289",
    "end": "3352400"
  },
  {
    "text": "dev to have to try and work with a third normal form database there are things",
    "start": "3352400",
    "end": "3358249"
  },
  {
    "text": "that you can do to make it better but this really is one of the big driving",
    "start": "3358249",
    "end": "3363349"
  },
  {
    "text": "forces for the swing back to document databases because managing databases",
    "start": "3363349",
    "end": "3369789"
  },
  {
    "text": "proof schema change to match your application is fundamentally difficult",
    "start": "3369789",
    "end": "3377769"
  },
  {
    "text": "because of the way that databases work",
    "start": "3377769",
    "end": "3382809"
  },
  {
    "text": "anchor modeling by splitting out every attribute into its own table means that",
    "start": "3383799",
    "end": "3392630"
  },
  {
    "text": "those changes to your model to your application become additive you don't",
    "start": "3392630",
    "end": "3399829"
  },
  {
    "text": "have to run big updates you don't have to run alter tables you don't have to",
    "start": "3399829",
    "end": "3408319"
  },
  {
    "text": "have an indexing strategy you just add an extra node to an XML",
    "start": "3408319",
    "end": "3415290"
  },
  {
    "text": "diagram to an XML file or have a",
    "start": "3415290",
    "end": "3420450"
  },
  {
    "text": "business analyst use a GUI or you use a Giri because you like chucking things",
    "start": "3420450",
    "end": "3426990"
  },
  {
    "text": "around it because of the JavaScript file",
    "start": "3426990",
    "end": "3434400"
  },
  {
    "text": "it sits inside your CI CD pipeline to",
    "start": "3434400",
    "end": "3440040"
  },
  {
    "text": "help you move faster and again because",
    "start": "3440040",
    "end": "3445170"
  },
  {
    "text": "it's additive it means that you don't have to request offline database time it",
    "start": "3445170",
    "end": "3451980"
  },
  {
    "text": "puts things back in your control to save you having to do synchronized processes",
    "start": "3451980",
    "end": "3460250"
  },
  {
    "text": "with your database ting you still use",
    "start": "3460250",
    "end": "3468030"
  },
  {
    "text": "third normal form views and functions that enable you to get the latest view",
    "start": "3468030",
    "end": "3476369"
  },
  {
    "text": "the view in a point of time and a list",
    "start": "3476369",
    "end": "3482760"
  },
  {
    "text": "of changes that have happened you're able to query the schema to say what did",
    "start": "3482760",
    "end": "3489630"
  },
  {
    "text": "the schema look like at a given point in time and you're able to tie your",
    "start": "3489630",
    "end": "3498030"
  },
  {
    "text": "application to a specific or tie your database to a specific version of your",
    "start": "3498030",
    "end": "3506190"
  },
  {
    "text": "application so you're able to trace the impact of a version if something goes",
    "start": "3506190",
    "end": "3515820"
  },
  {
    "text": "wrong and you need to just like do a big undo for a given state of your",
    "start": "3515820",
    "end": "3522090"
  },
  {
    "text": "application you can actually say delete anything with a metadata ID of 99 the",
    "start": "3522090",
    "end": "3529740"
  },
  {
    "text": "release we will never speak of again and it'll wipe all the changes so you can do",
    "start": "3529740",
    "end": "3536369"
  },
  {
    "text": "that you should consider this for when your database is undergoing a lot",
    "start": "3536369",
    "end": "3544380"
  },
  {
    "text": "of change when you have lots of optional values when you need to do version",
    "start": "3544380",
    "end": "3553859"
  },
  {
    "text": "control or tract changes these are",
    "start": "3553859",
    "end": "3559829"
  },
  {
    "text": "really good cases for doing this and when you need to be able to add in",
    "start": "3559829",
    "end": "3568079"
  },
  {
    "text": "multiple concepts of time so if you have processes that might happen offline by",
    "start": "3568079",
    "end": "3576779"
  },
  {
    "text": "being able to record when an event happened but when you loaded it that can",
    "start": "3576779",
    "end": "3583680"
  },
  {
    "text": "be very useful so thank you for coming",
    "start": "3583680",
    "end": "3590039"
  },
  {
    "text": "thank you to the organizers and sponsors and stuff what I'd like to do now is go",
    "start": "3590039",
    "end": "3597869"
  },
  {
    "text": "over to QA you can drive me using anchor",
    "start": "3597869",
    "end": "3603390"
  },
  {
    "text": "modeling if you go to its alikom forward",
    "start": "3603390",
    "end": "3610079"
  },
  {
    "text": "slash talks the first entry is for this",
    "start": "3610079",
    "end": "3615089"
  },
  {
    "text": "talk you can get the slide deck you can also get a github repo which has example",
    "start": "3615089",
    "end": "3621119"
  },
  {
    "text": "code for a bunch of these things it has some glossary and some more detail and",
    "start": "3621119",
    "end": "3628589"
  },
  {
    "text": "we can drill into those but it means that you can take this away and look at",
    "start": "3628589",
    "end": "3634049"
  },
  {
    "text": "it more intensively than a Friday afternoon after three days of solid",
    "start": "3634049",
    "end": "3640230"
  },
  {
    "text": "learning so that's why I wanted to keep this keep the main theory bit kind of",
    "start": "3640230",
    "end": "3647819"
  },
  {
    "text": "short and sweet so that we can have a play and answer questions and things",
    "start": "3647819",
    "end": "3653069"
  },
  {
    "text": "that you fought off through this so questions yep",
    "start": "3653069",
    "end": "3661970"
  },
  {
    "text": "so the question is with a given version",
    "start": "3684050",
    "end": "3694550"
  },
  {
    "text": "wait did I Oh for some reason I thought I only talked for like half an hour okay",
    "start": "3695270",
    "end": "3702210"
  },
  {
    "text": "you can all leave whenever you want to I'm not gonna keep you here so let me",
    "start": "3702210",
    "end": "3707520"
  },
  {
    "text": "just duplicate this so my database here",
    "start": "3707520",
    "end": "3718160"
  },
  {
    "text": "the attributes for a given thing so if",
    "start": "3718880",
    "end": "3724590"
  },
  {
    "text": "I'm adding a new field about actors in",
    "start": "3724590",
    "end": "3730740"
  },
  {
    "text": "this case it's going to be a new table and it will drop the old version of the",
    "start": "3730740",
    "end": "3740310"
  },
  {
    "text": "view which says actor has these 10 columns and there'll be a new version of",
    "start": "3740310",
    "end": "3746190"
  },
  {
    "text": "the view which says actor has these 14 columns the old tables the old columns",
    "start": "3746190",
    "end": "3753810"
  },
  {
    "text": "don't go away the old application would",
    "start": "3753810",
    "end": "3759420"
  },
  {
    "text": "continue using its select statement that it always had and it wouldn't see any",
    "start": "3759420",
    "end": "3766140"
  },
  {
    "text": "change your new version of the application would use a new select",
    "start": "3766140",
    "end": "3771720"
  },
  {
    "text": "statements that refers to the new columns so it would see its put there",
    "start": "3771720",
    "end": "3778410"
  },
  {
    "text": "bits that are relevant to your new version your old version would see the",
    "start": "3778410",
    "end": "3785100"
  },
  {
    "text": "old columns",
    "start": "3785100",
    "end": "3787730"
  },
  {
    "text": "so in the event that you have to",
    "start": "3821070",
    "end": "3826110"
  },
  {
    "text": "synchronize data between two of the tables the inserts work through triggers",
    "start": "3826200",
    "end": "3835840"
  },
  {
    "text": "on the views and processes so you can",
    "start": "3835840",
    "end": "3841000"
  },
  {
    "text": "set up a your own independent synchronization script you can",
    "start": "3841000",
    "end": "3848110"
  },
  {
    "text": "potentially modify the trigger that does the insert so you can change your anchor",
    "start": "3848110",
    "end": "3854650"
  },
  {
    "text": "model but I would recommend an independent script that does that data",
    "start": "3854650",
    "end": "3859950"
  },
  {
    "text": "synchronization especially because that by thinking of it as application",
    "start": "3859950",
    "end": "3867520"
  },
  {
    "text": "compatibility between versions you probably are already thinking about the",
    "start": "3867520",
    "end": "3873550"
  },
  {
    "text": "lifecycle of your versions how long you are going to support them and what",
    "start": "3873550",
    "end": "3879370"
  },
  {
    "text": "changes you need to make to keep them in support so that application support",
    "start": "3879370",
    "end": "3885490"
  },
  {
    "text": "usually kind of has its own folder of stuff you're doing so you might have",
    "start": "3885490",
    "end": "3891430"
  },
  {
    "text": "like a new like a halfway house CSS sheet to make the old app kind of look",
    "start": "3891430",
    "end": "3898600"
  },
  {
    "text": "like the new app without rebuilding all the frames so that kind of process would",
    "start": "3898600",
    "end": "3905800"
  },
  {
    "text": "sit in there in your migration lifecycle planning",
    "start": "3905800",
    "end": "3912930"
  },
  {
    "text": "any more questions okay so you have the",
    "start": "3915390",
    "end": "3921580"
  },
  {
    "text": "files got the presentation make sure you grab stickers and cards and stuff if you",
    "start": "3921580",
    "end": "3930750"
  },
  {
    "text": "follow my company Twitter I give away a",
    "start": "3930750",
    "end": "3942910"
  },
  {
    "text": "book a month usually kind of data science focus but very beginner stuff if",
    "start": "3942910",
    "end": "3950460"
  },
  {
    "text": "you have any questions on this you want to play I do office hours so you can just go on",
    "start": "3950460",
    "end": "3957370"
  },
  {
    "text": "its alikom go to schedule a call and book in half an hour all my availabilities plugged in so if",
    "start": "3957370",
    "end": "3963910"
  },
  {
    "text": "you want to followup with me on this you can email me or you can schedule a call and we can have Twitter conversations",
    "start": "3963910",
    "end": "3970660"
  },
  {
    "text": "now that there's 280 characters I can talk normally thank you all for coming",
    "start": "3970660",
    "end": "3979180"
  },
  {
    "text": "today to such a niche topic and hopefully I've inspired you to give it a",
    "start": "3979180",
    "end": "3986680"
  },
  {
    "text": "go on at least a toy example for your environments thank you all very much",
    "start": "3986680",
    "end": "3994390"
  },
  {
    "text": "[Applause]",
    "start": "3994390",
    "end": "3997569"
  }
]