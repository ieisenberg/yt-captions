[
  {
    "text": "so that clock says it's time so let's go um really hope there's so many people",
    "start": "4400",
    "end": "10000"
  },
  {
    "text": "in here I wasn't expecting to fill the room uh so my name is Ronis I am a",
    "start": "10000",
    "end": "15719"
  },
  {
    "text": "consultant at Factor 10 and um so the backstory for this talk is that I've",
    "start": "15719",
    "end": "21000"
  },
  {
    "text": "helped a lot of companies migrate their pipelines from various systems and I've",
    "start": "21000",
    "end": "26119"
  },
  {
    "text": "encountered them in the wild when working with their developers and on the project so I got the idea to make a a",
    "start": "26119",
    "end": "32758"
  },
  {
    "text": "talk about things that I've encountered that is maybe isn't the best thing to do",
    "start": "32759",
    "end": "37800"
  },
  {
    "text": "and hopefully something you can do instead so this is pipeline patterns and anti-",
    "start": "37800",
    "end": "43840"
  },
  {
    "text": "patterns uh some of the things your pipeline should and should not do so I'm going to try and and work on",
    "start": "43840",
    "end": "52559"
  },
  {
    "text": "three different things try to reduce three different things here and the first of them is",
    "start": "52559",
    "end": "58320"
  },
  {
    "text": "frustration uh cuz no one likes a frustrating pipeline um how many of you have run a",
    "start": "58320",
    "end": "65199"
  },
  {
    "text": "pipeline uh maybe you you submit your code the automatic pipeline runs and it fails and the fix is to hit rerun and",
    "start": "65200",
    "end": "73320"
  },
  {
    "text": "then it works yeah does that make you feel",
    "start": "73320",
    "end": "78640"
  },
  {
    "text": "good so if we have the chance to stop that from happening we're going to do",
    "start": "78640",
    "end": "84520"
  },
  {
    "text": "that we're also going to try and work on boredom because no one wants to sit around waiting for the pipelines to f",
    "start": "84520",
    "end": "90680"
  },
  {
    "text": "finish uh how many people in here have a pipeline that runs in under 15",
    "start": "90680",
    "end": "98520"
  },
  {
    "text": "minutes yeah depends yeah that's a good answer uh how many people have a",
    "start": "98520",
    "end": "105280"
  },
  {
    "text": "pipeline runs in more than 15 minutes more than half an hour keep your",
    "start": "105280",
    "end": "110719"
  },
  {
    "text": "hands up more than an hour more than a work day yeah no one",
    "start": "110719",
    "end": "117799"
  },
  {
    "text": "I've had people who had uh pipelines running for more than 30 hours that means you have what's that's",
    "start": "117799",
    "end": "125280"
  },
  {
    "text": "like three shots a week otherwise you have to retry next",
    "start": "125280",
    "end": "131039"
  },
  {
    "text": "week so a large Focus today is going to be on reducing time because we spend our",
    "start": "131040",
    "end": "137239"
  },
  {
    "text": "way too much time waiting for our pipelines to finish and if we had the possibility or the opportunity we're also going to do something for the",
    "start": "137239",
    "end": "144040"
  },
  {
    "text": "environment because long running pipelines or running pipelines doesn't necessarily have to run uh Texas are",
    "start": "144040",
    "end": "151680"
  },
  {
    "text": "computers or servers and running servers well they impact the environment more than non-running servers or idle servers",
    "start": "151680",
    "end": "158879"
  },
  {
    "text": "so we're going to try to keep our servers idle as much as possible thereby saving their environment so uh let's get",
    "start": "158879",
    "end": "166800"
  },
  {
    "text": "started with anti pattern number one the ritual which is where you have a pipeline that does all the same steps",
    "start": "166800",
    "end": "174680"
  },
  {
    "text": "all the time regardless of when it's run where it's run under what circumstances it does the same steps steps all the",
    "start": "174680",
    "end": "180640"
  },
  {
    "text": "time so we could have um maybe this uh pull request pipeline because that's usually how pipelines start",
    "start": "180640",
    "end": "187720"
  },
  {
    "text": "right uh we need a a quality gate to make sure that whoever tries to get code",
    "start": "187720",
    "end": "194200"
  },
  {
    "text": "into our code base doesn't mess it up so we write a pull request and uh we",
    "start": "194200",
    "end": "201319"
  },
  {
    "text": "have a front end and a back end uh we do some lenting we do some setup we do tests and then on again we do",
    "start": "201319",
    "end": "207879"
  },
  {
    "text": "integration tests works fine uh but then somehow um some",
    "start": "207879",
    "end": "214840"
  },
  {
    "text": "bad changes got in right we can have code that doesn't work but it doesn't",
    "start": "214840",
    "end": "220319"
  },
  {
    "text": "result in a merge conflict if someone changes let's say someone renames a file somewhere and",
    "start": "220319",
    "end": "227080"
  },
  {
    "text": "then someone else uh has branched before that point submits their code it passes",
    "start": "227080",
    "end": "232799"
  },
  {
    "text": "on their Branch it's merged to main now doesn't compile because someone renamed the file you were using uh so we run the",
    "start": "232799",
    "end": "240200"
  },
  {
    "text": "merge after main as well if if we merge when we merge to main we're on the pipeline again to make sure that system",
    "start": "240200",
    "end": "245920"
  },
  {
    "text": "is still working as expected uh same Pips again and then there something in",
    "start": "245920",
    "end": "251599"
  },
  {
    "text": "the integration environment changed uh some external dependency changed so we need to run the integration tests we may",
    "start": "251599",
    "end": "257680"
  },
  {
    "text": "need to make sure that they don't break over time so these can break even if we",
    "start": "257680",
    "end": "263199"
  },
  {
    "text": "don't change the code so we run our pipeline nightly to make sure that we're still okay with the outside environment",
    "start": "263199",
    "end": "269039"
  },
  {
    "text": "everything still works as expected and if it doesn't we need to change to fix",
    "start": "269039",
    "end": "274560"
  },
  {
    "text": "things but then someone figures out that well our our our product managers they",
    "start": "274560",
    "end": "282320"
  },
  {
    "text": "need to run the application as well so they need a binary they need an artifact to run so we we publish an artifact as",
    "start": "282320",
    "end": "288759"
  },
  {
    "text": "the last step in our Pipeline and now we have a pipeline that publishes an artifact on pull requests after merge",
    "start": "288759",
    "end": "296080"
  },
  {
    "text": "domain and every night the same binary is published every night and this is really unnecessary there's a",
    "start": "296080",
    "end": "302479"
  },
  {
    "text": "lot of steps there that we don't need to do uh we probably don't need to publish an artifact on every pull",
    "start": "302479",
    "end": "308440"
  },
  {
    "text": "request because no one's going to look at that what you're interested in is after merge we don't really need to run",
    "start": "308440",
    "end": "316800"
  },
  {
    "text": "the linting maybe uh when we merge to Main and we definitely do not need to",
    "start": "316800",
    "end": "322199"
  },
  {
    "text": "run the linting and the unit tests on nightly because those can't change we",
    "start": "322199",
    "end": "328400"
  },
  {
    "text": "only interested in the outside environment and the outside environment shouldn't be involved in our unit",
    "start": "328400",
    "end": "333520"
  },
  {
    "text": "tests so what we should do instead is we should do pattern number one the right pipeline for the job which is we look at",
    "start": "333520",
    "end": "341120"
  },
  {
    "text": "each situation the pipeline runs and we decide what should we do under these circumstances so on a pull request we",
    "start": "341120",
    "end": "348240"
  },
  {
    "text": "don't publish the artifact we run all our tests as we should uh after the merch main we run the tests but yeah we",
    "start": "348240",
    "end": "354199"
  },
  {
    "text": "ski the linting because that hasn't changed and on nightly we only run the integration test because they all that's",
    "start": "354199",
    "end": "360960"
  },
  {
    "text": "the only thing that can actually fail on the nightly job if your unit tests fail when your code hasn't changed all that's",
    "start": "360960",
    "end": "367720"
  },
  {
    "text": "a problem and you should fix that uh but we can go one step further",
    "start": "367720",
    "end": "374160"
  },
  {
    "text": "we can make our P pipelines smart and have conditional pipeline steps so if we just focus on the on the pull",
    "start": "374160",
    "end": "380880"
  },
  {
    "text": "request uh case here on every single change we build the back end we build",
    "start": "380880",
    "end": "387319"
  },
  {
    "text": "the front end we lint the back end we lint the front end and we test the back end and we test the front end right but",
    "start": "387319",
    "end": "393440"
  },
  {
    "text": "what if I submit uh maybe I do a a pure front end change I've moved something",
    "start": "393440",
    "end": "399160"
  },
  {
    "text": "around the front end I changed some uh validation logic in a form somewhere don't really need to rerun my backend",
    "start": "399160",
    "end": "405360"
  },
  {
    "text": "test right because those are that code hasn't changed and the same if we do a pure",
    "start": "405360",
    "end": "410479"
  },
  {
    "text": "backend change maybe we add an index uh to a table in a database there's no need to rerun the front- end test because do",
    "start": "410479",
    "end": "417080"
  },
  {
    "text": "haven't changed they shouldn't be able to fail so we can add some logic in our pipeline",
    "start": "417080",
    "end": "423840"
  },
  {
    "text": "to make sure that if we only do a front- end change we don't run the backend",
    "start": "423840",
    "end": "429520"
  },
  {
    "text": "tests and if we only do a backend change we don't run the front- end tests we should still run the integration tests",
    "start": "429520",
    "end": "436039"
  },
  {
    "text": "because those can still be affected right because you changeed the back end or the front end we might impact the",
    "start": "436039",
    "end": "442080"
  },
  {
    "text": "integration test we probably will otherwise we don't have good test coverage so how do we achieve this",
    "start": "442080",
    "end": "450479"
  },
  {
    "text": "well um I want to talk about one thing first and it's about choices uh so there's a lot of CI",
    "start": "450479",
    "end": "457280"
  },
  {
    "text": "platforms out there uh I think the most common one is",
    "start": "457280",
    "end": "462680"
  },
  {
    "text": "uh GitHub I guess um GitHub is the plain coffee black coffee which most",
    "start": "462680",
    "end": "469120"
  },
  {
    "text": "people use I drink tea so I'm probably not a GitHub user um how many people in",
    "start": "469120",
    "end": "474240"
  },
  {
    "text": "here do use GitHub by the way GitHub actions for their pipelines how many are still on jenin",
    "start": "474240",
    "end": "481240"
  },
  {
    "text": "yeah how many use as your devops quite a few and gitlab yeah a few as well any uh another",
    "start": "481240",
    "end": "488759"
  },
  {
    "text": "platform I haven't mentioned yeah a few yeah there's a few around uh I'm",
    "start": "488759",
    "end": "496879"
  },
  {
    "text": "going to show some code examples all my examples of pipeline code is going to be for GitHub",
    "start": "496879",
    "end": "502840"
  },
  {
    "text": "actions uh because I think that's the most common one uh but that doesn't mean",
    "start": "502840",
    "end": "508440"
  },
  {
    "text": "that all these is limited to GitHub actions uh anything that I talk about",
    "start": "508440",
    "end": "513919"
  },
  {
    "text": "here uh you can apply to most of the platforms I've worked with when it comes to CI pipelines so just because this is",
    "start": "513919",
    "end": "521080"
  },
  {
    "text": "GitHub code it doesn't mean that this is only applicable to GitHub of course you w to look like this when you do it on",
    "start": "521080",
    "end": "526160"
  },
  {
    "text": "aure devops or circleci or gitlab or whatever you're using but the general ideas is the same and this is just an",
    "start": "526160",
    "end": "532080"
  },
  {
    "text": "example of the way we structure our pipeline uh it's very similar with a",
    "start": "532080",
    "end": "537200"
  },
  {
    "text": "different syntax on the other platforms So This Is How We Do conditional pipelines on",
    "start": "537200",
    "end": "543720"
  },
  {
    "text": "GitHub uh so what we have here is we have a action that runs as a preep we",
    "start": "543720",
    "end": "549160"
  },
  {
    "text": "run a job before our main job whose only task is to figure out what files",
    "start": "549160",
    "end": "556079"
  },
  {
    "text": "have changed and then we map them into logical modules so in this case we have defined a filter for the back end and a",
    "start": "556079",
    "end": "563160"
  },
  {
    "text": "filter for the front end so if anything changes in the backend directory we flag the backend module has changed and the",
    "start": "563160",
    "end": "569600"
  },
  {
    "text": "same for the front end and then we can export these from the step to the job so",
    "start": "569600",
    "end": "577240"
  },
  {
    "text": "it they become job outputs so we can use them and then when our main pipeline job",
    "start": "577240",
    "end": "582839"
  },
  {
    "text": "we depend on the paths filter job uh so it runs after it and we can use the outputs and then we refer the outputs so",
    "start": "582839",
    "end": "590240"
  },
  {
    "text": "we only did a linting if the back end has changed so now when you submit a",
    "start": "590240",
    "end": "596240"
  },
  {
    "text": "pure front end change it doesn't touch any files in the back end this will be false so we don't run the backend lens",
    "start": "596240",
    "end": "602800"
  },
  {
    "text": "and we do the same for all the other tasks figuring out when each task should",
    "start": "602800",
    "end": "608880"
  },
  {
    "text": "run um so that's something I think you should do it will save you time and it will save the",
    "start": "609079",
    "end": "615320"
  },
  {
    "text": "environment uh antipattern number two hoarding uh which is if you run your",
    "start": "615320",
    "end": "620920"
  },
  {
    "text": "pull request Pipeline and you produce an artifact you store those uh forever you",
    "start": "620920",
    "end": "629079"
  },
  {
    "text": "will have a lot of artifacts uh piling up but that's not only the case because",
    "start": "629079",
    "end": "636440"
  },
  {
    "text": "usually how many times have you used a four-year-old release",
    "start": "636440",
    "end": "642200"
  },
  {
    "text": "artifact probably never right you put them in a in a folder somewhere they",
    "start": "642200",
    "end": "647519"
  },
  {
    "text": "pile up you never use them because no one you can probably not even deploy a four-year-old release artifact because",
    "start": "647519",
    "end": "652959"
  },
  {
    "text": "the system has changed you've upgraded your Hardware you upgraded your your server your your operating systems",
    "start": "652959",
    "end": "658880"
  },
  {
    "text": "you've added on other servers maybe the database migration happened two years ago so the database that that release is",
    "start": "658880",
    "end": "665760"
  },
  {
    "text": "expecting doesn't even exist anymore uh so don't keep all your",
    "start": "665760",
    "end": "672200"
  },
  {
    "text": "artifacts in the extreme case this leads to a pipeline failure because the dis",
    "start": "672200",
    "end": "677639"
  },
  {
    "text": "where your story artifact is full and that means not only have you do you have to press retry you need to go ask",
    "start": "677639",
    "end": "683920"
  },
  {
    "text": "someone to clean out your artifacts before you can hit retry or buy a new disc or add more more disc to your",
    "start": "683920",
    "end": "689399"
  },
  {
    "text": "virtual server or whatever you need to do to make more space for more artifacts but it's also a problem of",
    "start": "689399",
    "end": "697000"
  },
  {
    "text": "discoverability so this is a um an open source project on GitHub they have some",
    "start": "697000",
    "end": "703279"
  },
  {
    "text": "so this was in February this year I think when I took the",
    "start": "703279",
    "end": "708320"
  },
  {
    "text": "screenshots uh so over six years they've published a bit over 7,200 Docker images",
    "start": "708320",
    "end": "716880"
  },
  {
    "text": "now no one's ever going to go in here and use this one the 1.50 9e 81c 38c no one's",
    "start": "716880",
    "end": "724800"
  },
  {
    "text": "ever going to request that again it's been published for four years it hasn't been touched since but if you're looking for a",
    "start": "724800",
    "end": "731480"
  },
  {
    "text": "specific version in here and now this might be might be a GitHub discoverability problem but they all",
    "start": "731480",
    "end": "737800"
  },
  {
    "text": "sorted like this alphabetically and you have to click through every page so there's 63 pages of uh tagget tag tagged",
    "start": "737800",
    "end": "746519"
  },
  {
    "text": "images that you need to go through if you want to find a specific tagged image in here so remove your remove your",
    "start": "746519",
    "end": "753639"
  },
  {
    "text": "artifacts on a weekly basis or something delete everything that's a more than a week old you'll never touch it again and",
    "start": "753639",
    "end": "759360"
  },
  {
    "text": "if you want to touch it again you can probably just rebuild it because you have the source code history for what",
    "start": "759360",
    "end": "764639"
  },
  {
    "text": "actually built that version uh anti pattern number three then the AET which is when we use",
    "start": "764639",
    "end": "772839"
  },
  {
    "text": "natural ordering instead of practical ordering so what I mean by that is we",
    "start": "772839",
    "end": "778920"
  },
  {
    "text": "tend to we look at our Pipeline and we tend to think that this is the natural way of running these",
    "start": "778920",
    "end": "784560"
  },
  {
    "text": "steps uh a pipeline like this for example we have we should do setup linting compiling unit tests integration",
    "start": "784560",
    "end": "791519"
  },
  {
    "text": "tests and end to-end tests where we onun the whole application we push it through",
    "start": "791519",
    "end": "796560"
  },
  {
    "text": "the user interface in API or a a web application using play right or Cypress",
    "start": "796560",
    "end": "803440"
  },
  {
    "text": "and we tend to structure things in a way like well we do the setup because we need to set up our tools right or we can",
    "start": "803440",
    "end": "808480"
  },
  {
    "text": "do anything uh and then we do the linting step because that's kind of cheap and we need to lint our code before compile it that",
    "start": "808480",
    "end": "814959"
  },
  {
    "text": "makes sense then we compile it because there's a requirement for running the code then we run the unit tests and then",
    "start": "814959",
    "end": "820760"
  },
  {
    "text": "we run the integration tests and then we run the end to end tests but if something fails and in my",
    "start": "820760",
    "end": "828199"
  },
  {
    "text": "project it tends to be the integration tests or the end to end tests that fail first because I do test driven",
    "start": "828199",
    "end": "834000"
  },
  {
    "text": "development so my unit tests uh I usually don't commit before I make sure all my unit tests pass but maybe",
    "start": "834000",
    "end": "840160"
  },
  {
    "text": "sometimes I forget to run the integration tests because that's not always part of my development",
    "start": "840160",
    "end": "847360"
  },
  {
    "text": "flow but in this case the integration tests fail that happens after 13 minutes",
    "start": "847360",
    "end": "852399"
  },
  {
    "text": "almost 14 minutes but if we look at this and we figure out that well in 70% of a pipeline failure it's",
    "start": "852399",
    "end": "861160"
  },
  {
    "text": "the integration tests it makes sense to run the integration tests as early as",
    "start": "861160",
    "end": "866279"
  },
  {
    "text": "possible so if we structure like this instead we do to setup do the compilation we need to compile before we",
    "start": "866279",
    "end": "872240"
  },
  {
    "text": "can run the integration tests and then we run the integration tests we saved 4 minutes before we figure out that our",
    "start": "872240",
    "end": "879120"
  },
  {
    "text": "pipeline has failed and when if everything passes it's still the same amount of time before we get to that",
    "start": "879120",
    "end": "884399"
  },
  {
    "text": "green check mark But if the integration tests fail or the end to end test fails",
    "start": "884399",
    "end": "890040"
  },
  {
    "text": "they fail earlier and we get that feedback earlier so we don't have to sit around waiting this might mean that we",
    "start": "890040",
    "end": "896480"
  },
  {
    "text": "don't need to context switch which saves us a lot of time in the long",
    "start": "896480",
    "end": "901519"
  },
  {
    "text": "run anti pattern number four the one pipeline one pipeline to rule them all",
    "start": "901519",
    "end": "908720"
  },
  {
    "text": "one pipeline to bind them and this is where you have just one pipeline one long pipeline that does",
    "start": "908720",
    "end": "915560"
  },
  {
    "text": "everything for you we have backend setup backend linting backend compile backend",
    "start": "915560",
    "end": "921000"
  },
  {
    "text": "tests and the same for front end and then we're on the integration tests at the end quite uh natural way of doing things",
    "start": "921000",
    "end": "930959"
  },
  {
    "text": "but if we look at some timings so this is uh timings from an actual project I",
    "start": "931560",
    "end": "936839"
  },
  {
    "text": "took the um cargo. R crates. RS so",
    "start": "936839",
    "end": "942079"
  },
  {
    "text": "that's the the dependency manager for rust where all the the public",
    "start": "942079",
    "end": "948759"
  },
  {
    "text": "dependencies dependency repository are stored so this is the source code for that I didn't take their pipelines I",
    "start": "948759",
    "end": "954440"
  },
  {
    "text": "wrote my own uh because they do some things that I didn't want to have the the timing diagram got quite quite",
    "start": "954440",
    "end": "961759"
  },
  {
    "text": "cluttered so this is setting up rust uh running the rust linter compiling in",
    "start": "961759",
    "end": "968959"
  },
  {
    "text": "Rust running the rust tests and then doing um nodejs uh initialization",
    "start": "968959",
    "end": "975360"
  },
  {
    "text": "linting with uh I think uh es lint compiling and then running the tests and",
    "start": "975360",
    "end": "981920"
  },
  {
    "text": "then running integration tests which I think are done with uh Cypress so that's",
    "start": "981920",
    "end": "987480"
  },
  {
    "text": "probably more and end to end tests but this takes almost 25 minutes to run and",
    "start": "987480",
    "end": "994440"
  },
  {
    "text": "you're definitely Conant switching here you're submitting your pull request you're waiting you can't do anything",
    "start": "994440",
    "end": "999880"
  },
  {
    "text": "before the pipeline passes right because you don't want to tell anyone hey please review my code until you know it",
    "start": "999880",
    "end": "1005160"
  },
  {
    "text": "actually completes the pipeline so you need to wait 25 minutes and then you go",
    "start": "1005160",
    "end": "1010600"
  },
  {
    "text": "on and you do something else and then you remember oh wait I had that pipeline I started at four hours ago and you",
    "start": "1010600",
    "end": "1016279"
  },
  {
    "text": "switch back so you get these con const interruptions in your flow so what we should do instead is we",
    "start": "1016279",
    "end": "1022800"
  },
  {
    "text": "should split this up into parallel pipelines in this case we have we have",
    "start": "1022800",
    "end": "1028120"
  },
  {
    "text": "one backend pipeline we have one front end Pipeline and we have one integration test pipeline because that needs both",
    "start": "1028120",
    "end": "1034438"
  },
  {
    "text": "the front end and the back end so we do back end setup linting compiling and tests in one pipeline then we do the",
    "start": "1034439",
    "end": "1041798"
  },
  {
    "text": "same for the front end in another Pipeline and in the third pipeline we just compile the front end and back end",
    "start": "1041799",
    "end": "1047000"
  },
  {
    "text": "so we can run the integration tests and this means that instead of 25",
    "start": "1047000",
    "end": "1052080"
  },
  {
    "text": "minutes we're down to slightly less than 15 minutes still a long time but maybe",
    "start": "1052080",
    "end": "1057320"
  },
  {
    "text": "not enough to force that cont context switch we saved almost 10 minutes uh on",
    "start": "1057320",
    "end": "1063960"
  },
  {
    "text": "the total time before we get the green check mark but we have since we do the compilation twice added on 8 minutes of",
    "start": "1063960",
    "end": "1071960"
  },
  {
    "text": "total runtime which means that we are actually this is worse for the environment but we can fix that",
    "start": "1071960",
    "end": "1079400"
  },
  {
    "text": "so we can make the integration tests rely on the backend and front end",
    "start": "1079400",
    "end": "1085760"
  },
  {
    "text": "pipeline so instead of just ending them we publish a temporary artifact shouldn't store these uh a pipeline",
    "start": "1085760",
    "end": "1092280"
  },
  {
    "text": "artifact and then we make the integration tests depend on the front end and back end pipelines and we use the artifact in the",
    "start": "1092280",
    "end": "1099880"
  },
  {
    "text": "integration tests to run the integration tests this means we only do the compilation once for both back end and",
    "start": "1099880",
    "end": "1105400"
  },
  {
    "text": "front end and this is as another minute to run",
    "start": "1105400",
    "end": "1113440"
  },
  {
    "text": "time uh but the total is the same as for the original uh pipeline but we can do",
    "start": "1113440",
    "end": "1120360"
  },
  {
    "text": "this even better so if we split this into five pipelines it looks like this",
    "start": "1120360",
    "end": "1127840"
  },
  {
    "text": "so we have a backend setup with compilation and then we publish the artifact and we should do the same for",
    "start": "1127840",
    "end": "1134679"
  },
  {
    "text": "frontend and then we start three new pipelines one that runs the integration tests and then one that does the linting",
    "start": "1134679",
    "end": "1140640"
  },
  {
    "text": "and testing for both front end and back end and now we're down to 12 minutes before we get that green check",
    "start": "1140640",
    "end": "1147919"
  },
  {
    "text": "mark and the total running time is the same as for the uh original single one",
    "start": "1147919",
    "end": "1155960"
  },
  {
    "text": "pipeline there might be some more uh because there's probably delays involved and you need to upload and download",
    "start": "1155960",
    "end": "1161760"
  },
  {
    "text": "artifacts but in the bigger picture doesn't really matter that much you get quicker feedback",
    "start": "1161760",
    "end": "1169440"
  },
  {
    "text": "and you don't have to sit sit around waiting it's efficient now there's a limit to how much you can do this",
    "start": "1169440",
    "end": "1174600"
  },
  {
    "text": "depending on what kind of setup you have if you're running on",
    "start": "1174600",
    "end": "1180080"
  },
  {
    "text": "premises uh you just have a limited amount of build servers in extreme cases",
    "start": "1180080",
    "end": "1185559"
  },
  {
    "text": "you only have the one build server and you're out of luck this won't work because regardless of how many parallel",
    "start": "1185559",
    "end": "1191159"
  },
  {
    "text": "pipelines you have if you only have one executor you have a Serial pipeline but if you're running on",
    "start": "1191159",
    "end": "1196600"
  },
  {
    "text": "something like a cloud uh GitHub action as should develops in the cloud gitlab uh CI in their Cloud uh you have",
    "start": "1196600",
    "end": "1204640"
  },
  {
    "text": "essentially infinite parallel ability so you can split it up as much as you want",
    "start": "1204640",
    "end": "1210039"
  },
  {
    "text": "take a look at your pipeline identify what you can run in parallel and try to optimize it use P",
    "start": "1210039",
    "end": "1216559"
  },
  {
    "text": "use artifacts intelligently But be sure to remove them when your pipeline's",
    "start": "1216559",
    "end": "1222880"
  },
  {
    "text": "done and we get to enter pattern number five which is gift wrapping where we use",
    "start": "1222880",
    "end": "1229120"
  },
  {
    "text": "uh wrapper tasks to execute our command line tools for us um I'm go into the history behind",
    "start": "1229120",
    "end": "1238080"
  },
  {
    "text": "this uh shortly but say we have something like this so this is a a",
    "start": "1238080",
    "end": "1246080"
  },
  {
    "text": "fixes action on GitHub actions that runs cargo for you it looks kind of nice",
    "start": "1246080",
    "end": "1252080"
  },
  {
    "text": "right we write some yaml we tell it what commands we need we we can tell tell it",
    "start": "1252080",
    "end": "1258360"
  },
  {
    "text": "the arguments we want to run the release Target for the whole workspace with all the features",
    "start": "1258360",
    "end": "1263720"
  },
  {
    "text": "right nice but we shouldn't do this why because maybe we want to do something",
    "start": "1263720",
    "end": "1271240"
  },
  {
    "text": "that isn't supported by this action someone wrote this action it's stored in a in a GitHub repository somewhere and",
    "start": "1271240",
    "end": "1278760"
  },
  {
    "text": "you're limited to what they support so if there's a new release maybe you can you can control the parallelization of",
    "start": "1278760",
    "end": "1285000"
  },
  {
    "text": "the compiler by adding on the jobs argument but this action doesn't support",
    "start": "1285000",
    "end": "1290159"
  },
  {
    "text": "that maybe has it has an escape PCH where you can use like this you can just",
    "start": "1290159",
    "end": "1295520"
  },
  {
    "text": "tag on uh any arguments you want to and it will add them at the end but if you're",
    "start": "1295520",
    "end": "1302080"
  },
  {
    "text": "unlucky you have to wait for someone to make a new release of the tool you're using maybe you need to make a pull request to get that in or you need to",
    "start": "1302080",
    "end": "1308480"
  },
  {
    "text": "Fork it because the maintainer got bored he only did this and then he has abandoned the the project for the past",
    "start": "1308480",
    "end": "1315320"
  },
  {
    "text": "six months so what you should do instead is you you should just call your command",
    "start": "1315320",
    "end": "1320600"
  },
  {
    "text": "line application directly with the switches and if you use uh yaml multiline formatting which is by the way",
    "start": "1320600",
    "end": "1327440"
  },
  {
    "text": "its own website because it's so complicated uh you can structure it like this and I I think it kind of",
    "start": "1327440",
    "end": "1334679"
  },
  {
    "text": "looks quite neat as well and the the bonus here is that",
    "start": "1334679",
    "end": "1340240"
  },
  {
    "text": "there's no argument that is unsupported if the order matters between arguments you have full control over that and",
    "start": "1340240",
    "end": "1347480"
  },
  {
    "text": "there's no hidden Magic so what prompted this in the in the uh in the beginning was that we used",
    "start": "1347480",
    "end": "1354880"
  },
  {
    "text": "uh I was at a client they used the net task in ashure devops and we had some",
    "start": "1354880",
    "end": "1362080"
  },
  {
    "text": "problems because we wanted to manipulate the artifacts but the tool when you used",
    "start": "1362080",
    "end": "1367480"
  },
  {
    "text": "it to publish artifacts didn't store the artifacts in the location where it was expected it did some hidden magic which",
    "start": "1367480",
    "end": "1374320"
  },
  {
    "text": "was in the task and it called it added on a few command and arguments to the",
    "start": "1374320",
    "end": "1380039"
  },
  {
    "text": "net binary uh which we didn't want there because the developers uh behind the",
    "start": "1380039",
    "end": "1386120"
  },
  {
    "text": "task they thought that this was uh something that everyone wanted but we didn't so we switched to just calling",
    "start": "1386120",
    "end": "1392799"
  },
  {
    "text": "the net binary manually and everything uh started",
    "start": "1392799",
    "end": "1398919"
  },
  {
    "text": "working so I'm not saying don't use tasks I'm just saying don't use wrapper",
    "start": "1398919",
    "end": "1404600"
  },
  {
    "text": "tasks so in this case you should definitely use things like setup tasks which installs specific versions of your",
    "start": "1404600",
    "end": "1410760"
  },
  {
    "text": "tools and in this case um this pipeline runs python it uses a setup python task",
    "start": "1410760",
    "end": "1416520"
  },
  {
    "text": "to get a specific python version and then it uses uh poetry task to get a poetry which is a build tool for Python",
    "start": "1416520",
    "end": "1423360"
  },
  {
    "text": "and then we run the build tool as a command line tool works much better so we use the",
    "start": "1423360",
    "end": "1430279"
  },
  {
    "text": "tasks for what they're good at uh we're on to anti pattern number six it's",
    "start": "1430279",
    "end": "1436600"
  },
  {
    "text": "complicated and this is where the pipeline is its own software project uh",
    "start": "1436600",
    "end": "1442960"
  },
  {
    "text": "I I was with a company I think they actually had their own bug tracker for the",
    "start": "1442960",
    "end": "1449520"
  },
  {
    "text": "pipeline and their pipeline all their pipelines in all their projects basically look like this so this is uh",
    "start": "1449520",
    "end": "1456799"
  },
  {
    "text": "Jenkins where you define you write your your pipeline it's groovy code you can",
    "start": "1456799",
    "end": "1463080"
  },
  {
    "text": "publish that as a jar file you upload it to Jenkins and you tell it that this is a version 4.3 of my pipeline library and",
    "start": "1463080",
    "end": "1471200"
  },
  {
    "text": "you can include it in your pipeline and you can just call pipeline done but how do you change this",
    "start": "1471200",
    "end": "1478000"
  },
  {
    "text": "well you need to Fork the repository you need to make some change you need to publish a new version you need to upload",
    "start": "1478000",
    "end": "1484120"
  },
  {
    "text": "it to Jenkins to spe specify the new version which is in this case maybe 4.4",
    "start": "1484120",
    "end": "1489679"
  },
  {
    "text": "but maybe I'm not ready to publish it yet so it's probably like",
    "start": "1489679",
    "end": "1494760"
  },
  {
    "text": "4.4 Alpha 1 and then I need to point that out in my Pipeline and then I can",
    "start": "1494760",
    "end": "1499880"
  },
  {
    "text": "run my changes and if they don't work I need to do all that",
    "start": "1499880",
    "end": "1505279"
  },
  {
    "text": "again and they also even had uh some configuration in their uh XML file that",
    "start": "1506960",
    "end": "1513200"
  },
  {
    "text": "controlled what this pipeline uh was actually just an application at this",
    "start": "1513200",
    "end": "1518520"
  },
  {
    "text": "point did so what should you do instead well I think you should do because I like I",
    "start": "1518520",
    "end": "1524720"
  },
  {
    "text": "like the reusability of this right they had probably like 30 project objects that had basically the same pipeline uh",
    "start": "1524720",
    "end": "1531120"
  },
  {
    "text": "but in all the cases where they differed they had a bunch of of Escape hatches or",
    "start": "1531120",
    "end": "1536520"
  },
  {
    "text": "or um control flow so there was a lot of of if statements or or whole parts that",
    "start": "1536520",
    "end": "1543159"
  },
  {
    "text": "were just different parts of this uh this huge Library so I'm a big fan of",
    "start": "1543159",
    "end": "1548799"
  },
  {
    "text": "composable pipeline libraries which is pattern number five so we're back to GitHub again so this might be a uh a",
    "start": "1548799",
    "end": "1556760"
  },
  {
    "text": "rust pipeline where we use actions oh it actually shows so we use",
    "start": "1556760",
    "end": "1564080"
  },
  {
    "text": "the GitHub action for checkout and then we have our own pipeline actions here which is reusable where we can just",
    "start": "1564080",
    "end": "1569600"
  },
  {
    "text": "compose our pipeline we have a compile rust action which does the things that we generally do when we compile our rust",
    "start": "1569600",
    "end": "1576559"
  },
  {
    "text": "applications we have a test which might run things as coverage and and prepare",
    "start": "1576559",
    "end": "1582559"
  },
  {
    "text": "reports and upload them to the correct place and we have a publish artifact which maybe publishes them to",
    "start": "1582559",
    "end": "1589039"
  },
  {
    "text": "our common artifact server and we can use arguments to to change how it works so in this case we want to point out",
    "start": "1589039",
    "end": "1595720"
  },
  {
    "text": "which specific artifact it should publish and we can go one step further we can take because this is steps right",
    "start": "1595720",
    "end": "1602480"
  },
  {
    "text": "you compose your pipeline from steps but if all of the all of the pipelines look",
    "start": "1602480",
    "end": "1607600"
  },
  {
    "text": "essentially like this you can go one step further and you can make a reusable pipeline library and this is where",
    "start": "1607600",
    "end": "1613919"
  },
  {
    "text": "essentially you just include your your pipeline you have a predefined pipeline us you say I'm going to use this",
    "start": "1613919",
    "end": "1620399"
  },
  {
    "text": "pipeline Now isn't this really the anti pattern for complicated um not really",
    "start": "1620399",
    "end": "1627760"
  },
  {
    "text": "because this is composable if you want to break this pipe if you're using this Pipeline and you want to break it up you",
    "start": "1627760",
    "end": "1633240"
  },
  {
    "text": "can go back here and you can insert your own steps in the middle so it's very easy to switch back and forth and if you",
    "start": "1633240",
    "end": "1640360"
  },
  {
    "text": "want to modify it you can just copy it and make your",
    "start": "1640360",
    "end": "1645399"
  },
  {
    "text": "changes uh you can do really you can you can do a companywide library of these",
    "start": "1645399",
    "end": "1651200"
  },
  {
    "text": "things where projects can use your standard pipeline but they can also go do go",
    "start": "1651200",
    "end": "1658320"
  },
  {
    "text": "do things that they want to do that differ from the the standard pipeline while still reusing all of these actions",
    "start": "1658320",
    "end": "1665480"
  },
  {
    "text": "so you don't have to do everything from scratch and this is very much related so",
    "start": "1665480",
    "end": "1673960"
  },
  {
    "text": "this is why it's Pat on six and a half and Tangled which",
    "start": "1673960",
    "end": "1679640"
  },
  {
    "text": "is when you entangled yourself so much into your uh pipeline code that it's",
    "start": "1679640",
    "end": "1685600"
  },
  {
    "text": "hard to get out of there the Jenkins uh project the pipeline project was around",
    "start": "1685600",
    "end": "1691760"
  },
  {
    "text": "four or 5,000 lines of code it's really hard to to Port when you might want to migrate out migrate out of Jenkins which",
    "start": "1691760",
    "end": "1699120"
  },
  {
    "text": "is what I was there to help them with uh so what you should do is you",
    "start": "1699120",
    "end": "1704399"
  },
  {
    "text": "shouldn't put all your Bild logic into whatever your build System is using try",
    "start": "1704399",
    "end": "1710679"
  },
  {
    "text": "to make use as as few features of your build system as possible and put your stuff",
    "start": "1710679",
    "end": "1717640"
  },
  {
    "text": "elsewhere um which is pattern number six when you script your pipeline so this is a python pipeline again we",
    "start": "1717640",
    "end": "1725080"
  },
  {
    "text": "use we see setup python we see setup poetry but instead of calling poetry and making complex stuff in our pipeline we",
    "start": "1725080",
    "end": "1733039"
  },
  {
    "text": "use make so make is an extremely old build tool it's generally used for uh for C",
    "start": "1733039",
    "end": "1741039"
  },
  {
    "text": "maybe even C++ projects it's been around for ages but it's essentially just it's maybe probably it's the first",
    "start": "1741039",
    "end": "1748799"
  },
  {
    "text": "build tool or one of the first build tools it you tell it to to run something",
    "start": "1748799",
    "end": "1754279"
  },
  {
    "text": "and it runs essentially it runs uh shell code so we use that uh to hide all our",
    "start": "1754279",
    "end": "1762480"
  },
  {
    "text": "complex logic from the pipeline so we then have a make file",
    "start": "1762480",
    "end": "1768200"
  },
  {
    "text": "Define all these now this is a very simple but simple pipeline but you can have things that depend on other things",
    "start": "1768200",
    "end": "1773960"
  },
  {
    "text": "here uh so you can see here the we have test type check format style check lint",
    "start": "1773960",
    "end": "1779039"
  },
  {
    "text": "and init so in it usually what we do first we initialize the project we install all the dependencies and all",
    "start": "1779039",
    "end": "1785080"
  },
  {
    "text": "that then we just run make CI and then make figures out that well CI they",
    "start": "1785080",
    "end": "1790880"
  },
  {
    "text": "require us to run style check lint type check and test so it runs those in that",
    "start": "1790880",
    "end": "1797600"
  },
  {
    "text": "order and the main benefit of this is that if",
    "start": "1797600",
    "end": "1803360"
  },
  {
    "text": "I want to do something complex and I want to debug it I can do that from my command line on my laptop I just I can",
    "start": "1803360",
    "end": "1810039"
  },
  {
    "text": "run make C on my laptop and get the same results as I do in the pipeline if I",
    "start": "1810039",
    "end": "1815720"
  },
  {
    "text": "defined all of these as jobs in the pipeline there's no way for me to run that locally there are build tools that can",
    "start": "1815720",
    "end": "1823240"
  },
  {
    "text": "do that but most of them and especially all of the popular ones can't run locally",
    "start": "1823240",
    "end": "1828720"
  },
  {
    "text": "there is a project to try and make GitHub actions run locally but I've never gotten into working gitlab had",
    "start": "1828720",
    "end": "1836080"
  },
  {
    "text": "support for running your pipelines locally uh you can run the gitlab runner locally but they have deprecated that",
    "start": "1836080",
    "end": "1842200"
  },
  {
    "text": "they're not supporting that anymore and I'm no I'm not aware of any way of running aevo pipelines locally at all so",
    "start": "1842200",
    "end": "1850640"
  },
  {
    "text": "put your complex logic into scripts uh we had a situation where we had quite a",
    "start": "1850640",
    "end": "1856240"
  },
  {
    "text": "complex setup for uh an ation test and we put that into a Powershell script and then we ran the Powershell script from",
    "start": "1856240",
    "end": "1862360"
  },
  {
    "text": "MH devops which meant that instead of iterating uh changing the pipeline",
    "start": "1862360",
    "end": "1867480"
  },
  {
    "text": "pushing the pipeline waiting for it to run we could iterate locally we can run the script see if it worked change the",
    "start": "1867480",
    "end": "1873320"
  },
  {
    "text": "script rerun the script much much quicker feedback loop and less waiting",
    "start": "1873320",
    "end": "1879360"
  },
  {
    "text": "around for for servers to start or even there might be build cues in your system so you need to wait for other people's",
    "start": "1879360",
    "end": "1885639"
  },
  {
    "text": "pipelines to run before you can test your latest changes moving on",
    "start": "1885639",
    "end": "1892840"
  },
  {
    "text": "to anti pattern number seven Groundhog Day and if you don't get a",
    "start": "1892840",
    "end": "1898679"
  },
  {
    "text": "reference uh it's a movie and you should probably watch it so ground H day is when we start from",
    "start": "1898679",
    "end": "1905600"
  },
  {
    "text": "scatch all the time uh this is very common now it",
    "start": "1905600",
    "end": "1911440"
  },
  {
    "text": "wasn't before uh back in the day when we used Jenkins some of you still do",
    "start": "1911440",
    "end": "1919039"
  },
  {
    "text": "uh we didn't start from scratch every day every time like in the beginning you",
    "start": "1919039",
    "end": "1924080"
  },
  {
    "text": "actually you Jen Jenkins checked out your source code and then when changes came it just checked out the new changes",
    "start": "1924080",
    "end": "1931760"
  },
  {
    "text": "on top of what was already there it kept all your builds uh all that in a",
    "start": "1931760",
    "end": "1936840"
  },
  {
    "text": "workspace it still does it if you don't tell it to clean before uh but you usually tell it to clean before because",
    "start": "1936840",
    "end": "1942639"
  },
  {
    "text": "keeping all these around can cause issues which is why it was introduced",
    "start": "1942639",
    "end": "1947720"
  },
  {
    "text": "but but nowadays usually we get a fresh instance uh a new uh actually often it's",
    "start": "1947720",
    "end": "1954519"
  },
  {
    "text": "a new virtual machine completely fresh we install our stuff we download our code uh and then we compile and test it",
    "start": "1954519",
    "end": "1963039"
  },
  {
    "text": "everything is done all the time from scratch right checked out clean nothing is there we download all the",
    "start": "1963039",
    "end": "1968880"
  },
  {
    "text": "dependencies the dependencies are even and cached in our local directory we need to fetch them from the internet and",
    "start": "1968880",
    "end": "1974399"
  },
  {
    "text": "down right it takes some time uh this is is just for the Rust part of the",
    "start": "1974399",
    "end": "1980679"
  },
  {
    "text": "pipeline I showed earlier uh the crates",
    "start": "1980679",
    "end": "1985840"
  },
  {
    "text": "IO uh it takes 12 minutes for the back end uh fetching linting compiling and",
    "start": "1985840",
    "end": "1991720"
  },
  {
    "text": "testing so what we do then is we cache pattern number",
    "start": "1991720",
    "end": "1997760"
  },
  {
    "text": "seven how many people in here have caching in their",
    "start": "1997760",
    "end": "2003320"
  },
  {
    "text": "all right I'll just all right okay I'll do the make",
    "start": "2024519",
    "end": "2031919"
  },
  {
    "text": "then uh all right so catching your dependencies the idea is that instead of",
    "start": "2031919",
    "end": "2037799"
  },
  {
    "text": "going out to the internet all the time fetching all our our dependencies every time we store them locally uh on a",
    "start": "2037799",
    "end": "2044120"
  },
  {
    "text": "server closer to our build servers and we fetch them from there so we do a",
    "start": "2044120",
    "end": "2049480"
  },
  {
    "text": "restore cach Fetch dependencies and then we might need to update the cach after we fetched all the",
    "start": "2049480",
    "end": "2055879"
  },
  {
    "text": "dependencies the thing with this is fetching dependencies is kind of",
    "start": "2056079",
    "end": "2062079"
  },
  {
    "text": "quick um in this case fetching them from uh creates. iio directly takes s seconds",
    "start": "2062079",
    "end": "2069158"
  },
  {
    "text": "fetching them from the cach server takes 4 seconds then we need to make sure that we have all the dependencies there and",
    "start": "2069159",
    "end": "2076040"
  },
  {
    "text": "we might need to update the cache so in total we're going from 7 Seconds to about 5",
    "start": "2076040",
    "end": "2081960"
  },
  {
    "text": "Seconds that's not really worth it uh it might be worth it for different reasons",
    "start": "2081960",
    "end": "2088599"
  },
  {
    "text": "which is that this does not rely on your internet connection if you have a flak internet connection uh in",
    "start": "2088599",
    "end": "2095240"
  },
  {
    "text": "your uh on premises this might be more efficient you definitely get less",
    "start": "2095240",
    "end": "2100760"
  },
  {
    "text": "variability in this but overall you don't save much on this so there is more",
    "start": "2100760",
    "end": "2107680"
  },
  {
    "text": "interesting stuff we can do we can catch build output and this is what we used to do",
    "start": "2107680",
    "end": "2114240"
  },
  {
    "text": "with Jenkins we kept the build output around so next time we just check out the changes and we just rebuilt whatever",
    "start": "2114240",
    "end": "2120599"
  },
  {
    "text": "has changed but now when we start from scratch the previous build output isn't there but what we can do is we can put",
    "start": "2120599",
    "end": "2126760"
  },
  {
    "text": "that in the cash instead we can put the dependence in there as well you get them for free but if we cash the build",
    "start": "2126760",
    "end": "2133240"
  },
  {
    "text": "output so we do restore cach and then we do linting compiling tests and then we",
    "start": "2133240",
    "end": "2139000"
  },
  {
    "text": "update the cache so if we look at timings uh the original starting from",
    "start": "2139000",
    "end": "2146480"
  },
  {
    "text": "scratch takes 11 minutes restoring the cat takes around 30 seconds linting goes",
    "start": "2146480",
    "end": "2152119"
  },
  {
    "text": "from 2 minutes 29 seconds to 24 seconds because it only lenss the new changes",
    "start": "2152119",
    "end": "2158160"
  },
  {
    "text": "compiling goes from 5 and a half minutes to two and a half minutes and then testing obviously takes the same amount",
    "start": "2158160",
    "end": "2164480"
  },
  {
    "text": "of time because we need to run all the tests all the time we can't cach those",
    "start": "2164480",
    "end": "2169880"
  },
  {
    "text": "and then we update the cach if necessary so we saved almost five minutes four and a",
    "start": "2169880",
    "end": "2176160"
  },
  {
    "text": "half minutes by just caching two gigabytes of data on a server somewhere this is really efficient",
    "start": "2176160",
    "end": "2182720"
  },
  {
    "text": "depending on what your build process is this might not work this only works for increment m al compiled languages such",
    "start": "2182720",
    "end": "2189800"
  },
  {
    "text": "as rust uh C C++ C I think it won't work for",
    "start": "2189800",
    "end": "2196640"
  },
  {
    "text": "typescript because typescript is compiled from scratch all the time regardless if you have something lying",
    "start": "2196640",
    "end": "2202280"
  },
  {
    "text": "around from the last time or not it won't work for um uh CSS compilation and and things",
    "start": "2202280",
    "end": "2209240"
  },
  {
    "text": "like that depends on what language you're using and some of the build tools have more more or less uh support for",
    "start": "2209240",
    "end": "2215680"
  },
  {
    "text": "this I know there's uh a lot of work in the Gradle Community for Java for example to get this working on",
    "start": "2215680",
    "end": "2223640"
  },
  {
    "text": "CI and if what once we've done this uh a lot ofarts nowadays result in a",
    "start": "2223680",
    "end": "2229760"
  },
  {
    "text": "container image so we can use sort of the same idea for container images if you've ever tried caching container",
    "start": "2229760",
    "end": "2236200"
  },
  {
    "text": "images you will notice that it takes a long time um if you do it manually if",
    "start": "2236200",
    "end": "2242560"
  },
  {
    "text": "you export an image upload it to a cach server download it and then import it it takes a lot of time but what we can do",
    "start": "2242560",
    "end": "2249200"
  },
  {
    "text": "is we can let Docker do the catching for us now Docker can't do it directly but",
    "start": "2249200",
    "end": "2255480"
  },
  {
    "text": "if you use build kit for Docker you can so what we do is we use build X",
    "start": "2255480",
    "end": "2262560"
  },
  {
    "text": "which invokes build kit and then we tell it to use a cache and uh we tell it to",
    "start": "2262560",
    "end": "2268000"
  },
  {
    "text": "Cache to and cach from and this needs to be a separate image it can't be the same image as the one we're building because",
    "start": "2268000",
    "end": "2274440"
  },
  {
    "text": "it's different information so we I I typically just t on a a suffix called",
    "start": "2274440",
    "end": "2280119"
  },
  {
    "text": "cachee and what it does now is that when it goes to build your image it checks in the cache have I done this before and if",
    "start": "2280119",
    "end": "2286760"
  },
  {
    "text": "so it downloads that step it's like building locally when you build from Docker file if you only change one row at the end it will reuse all the other",
    "start": "2286760",
    "end": "2293640"
  },
  {
    "text": "steps and then just do the thing at the end this is the same with a remote",
    "start": "2293640",
    "end": "2299160"
  },
  {
    "text": "cache so if we build an image in this case uh we install two tools with",
    "start": "2299160",
    "end": "2306000"
  },
  {
    "text": "cargo uh and you can see here it's importing the cat manifest and then when we come up here to step three it should",
    "start": "2306000",
    "end": "2314480"
  },
  {
    "text": "run cargo install and then this but you can see here it find it found this in",
    "start": "2314480",
    "end": "2320560"
  },
  {
    "text": "the cache so it only took 8 seconds now if you actually go and install lepos in",
    "start": "2320560",
    "end": "2327800"
  },
  {
    "text": "this case takes around 6 minutes so this saved us almost 6 minutes of",
    "start": "2327800",
    "end": "2334119"
  },
  {
    "text": "time and then we get to the end here which we have changed some version of cross so now it actually needs to do",
    "start": "2334119",
    "end": "2341480"
  },
  {
    "text": "that and that's takes takes six minutes but we saved six minutes from the previous",
    "start": "2341480",
    "end": "2347119"
  },
  {
    "text": "step you can see here that it's it found it in the cache and then it does",
    "start": "2347119",
    "end": "2352839"
  },
  {
    "text": "this and we can use this to do pattern number eight which is tooling",
    "start": "2352839",
    "end": "2359319"
  },
  {
    "text": "images which is instead of starting from scratch if you need to install some tools bundle them into an image so what",
    "start": "2359319",
    "end": "2366359"
  },
  {
    "text": "we do is we add a step at the at the beginning uh just as we did with the pre-check step that checked if something",
    "start": "2366359",
    "end": "2373480"
  },
  {
    "text": "has changed we do a step at the beginning which builds our tooling image and then we run the steps after that on",
    "start": "2373480",
    "end": "2379920"
  },
  {
    "text": "this tooling image so in this case we buildt image call it tooling and when we tell these",
    "start": "2379920",
    "end": "2387440"
  },
  {
    "text": "to run on that image and we only need to do this we can",
    "start": "2387440",
    "end": "2395160"
  },
  {
    "text": "combine this with the conditional logic so if we haven't changed anything in the build image we use the latest version",
    "start": "2395160",
    "end": "2400560"
  },
  {
    "text": "from our main bar for example so in this case we had an index on user birth dates",
    "start": "2400560",
    "end": "2406560"
  },
  {
    "text": "uh we haven't changed the build image so we used the one from the previous run or the latest from",
    "start": "2406560",
    "end": "2412560"
  },
  {
    "text": "Main and we run uh our our tests and our compilation on that but then a change",
    "start": "2412560",
    "end": "2419440"
  },
  {
    "text": "compound that builds the image that changes the image then we need to build the image we publish it as a new image",
    "start": "2419440",
    "end": "2425319"
  },
  {
    "text": "and we use that image to build the the uh the pipeline to build that uh change",
    "start": "2425319",
    "end": "2430680"
  },
  {
    "text": "request and once this has passed and been merged we do everything again on Main which means that we build the image",
    "start": "2430680",
    "end": "2437880"
  },
  {
    "text": "and we publish it to latest so now everything that comes around after that is using the new version of this",
    "start": "2437880",
    "end": "2445720"
  },
  {
    "text": "image if you do this uh you need to be pretty careful so you don't run into",
    "start": "2445720",
    "end": "2451920"
  },
  {
    "text": "anti pattern number eight interference which is where we collide with other Pipelines",
    "start": "2451920",
    "end": "2458400"
  },
  {
    "text": "and there is a huge opportunity to do this when you're doing build images if for example you're using a shared",
    "start": "2458400",
    "end": "2464760"
  },
  {
    "text": "repository and you always publish as latest so in this case we have built the",
    "start": "2464760",
    "end": "2471119"
  },
  {
    "text": "image we run our front end and uh back end pipelines but when while we're doing",
    "start": "2471119",
    "end": "2477040"
  },
  {
    "text": "that another pipeline comes around starts up builds image publishes it to latest which is the same image we're",
    "start": "2477040",
    "end": "2483920"
  },
  {
    "text": "using here so what happens now well when the backend and front end P steps",
    "start": "2483920",
    "end": "2490599"
  },
  {
    "text": "pass and the integration tests run they run on this image because it's been",
    "start": "2490599",
    "end": "2496200"
  },
  {
    "text": "published and then it's pulled from there so there's a high chance they fail because something has changed in the",
    "start": "2496200",
    "end": "2501960"
  },
  {
    "text": "build environment these will of course pass because they're using the image intended",
    "start": "2501960",
    "end": "2507760"
  },
  {
    "text": "for them to run on so what we should do here is we should use an identifier",
    "start": "2507760",
    "end": "2514200"
  },
  {
    "text": "That's Unique when we publish our uh our tooling image and in most of cases uh that's the",
    "start": "2514200",
    "end": "2521760"
  },
  {
    "text": "git that's the git commit Shaw because",
    "start": "2521760",
    "end": "2526960"
  },
  {
    "text": "that's pretty much guaranteed to be unique between all your PB all your",
    "start": "2527200",
    "end": "2532280"
  },
  {
    "text": "pipeline runs you ever will do uh there's also a high chance of",
    "start": "2532280",
    "end": "2537520"
  },
  {
    "text": "doing this if you're using shared resources for say let's say an a database that you run your test against",
    "start": "2537520",
    "end": "2543680"
  },
  {
    "text": "if you run all your tests against the same hardcoded database name there High chance you will get conflicts when two",
    "start": "2543680",
    "end": "2549400"
  },
  {
    "text": "test Suites run at the same time so anti Panter number nine",
    "start": "2549400",
    "end": "2557119"
  },
  {
    "text": "overloading uh which is when you run on underpowered machines please don't run your pipelines on Raspberry",
    "start": "2557119",
    "end": "2564480"
  },
  {
    "text": "Pi but I see a lot of this because for some reason people are pretty cheap with their CI",
    "start": "2564480",
    "end": "2571440"
  },
  {
    "text": "Hardware so I've made a few rules of thumb for build agent sizing so number one the build agent",
    "start": "2571440",
    "end": "2578960"
  },
  {
    "text": "should be as least as powerful as the least powerful developer machine which means that if all your",
    "start": "2578960",
    "end": "2585880"
  },
  {
    "text": "developers can run the code if you make sure that your build servers have at",
    "start": "2585880",
    "end": "2590920"
  },
  {
    "text": "least the same amount of of uh memory available and as least as many processors they should F they should",
    "start": "2590920",
    "end": "2598040"
  },
  {
    "text": "pass number two ideally the build agent should have be at least as powerful as",
    "start": "2598040",
    "end": "2603680"
  },
  {
    "text": "the most powerful development machine uh maybe this isn't practical uh because",
    "start": "2603680",
    "end": "2608839"
  },
  {
    "text": "some people buy laptops with 250 GB of RAM but if possible make sure that your",
    "start": "2608839",
    "end": "2616240"
  },
  {
    "text": "build agents have more power available than your developers because in that case hopefully the pipeline runs faster",
    "start": "2616240",
    "end": "2623200"
  },
  {
    "text": "there than on their machines and they will be happy running their pipelines because it's quicker than running them",
    "start": "2623200",
    "end": "2628760"
  },
  {
    "text": "locally and if the build fails because the lack of resources beef up the build agent it's the quickest and probably",
    "start": "2628760",
    "end": "2635079"
  },
  {
    "text": "cheapest way of fixing your pipelines if they run out of resources you instead of spending 3 days trying to reduce the",
    "start": "2635079",
    "end": "2641319"
  },
  {
    "text": "memory footprint of running SQL server in a container just give it more RAM it",
    "start": "2641319",
    "end": "2647000"
  },
  {
    "text": "will work and if the available build configurations aren't",
    "start": "2647000",
    "end": "2652160"
  },
  {
    "text": "sufficient consider at least rolling rolling your own so should you run your own build",
    "start": "2652160",
    "end": "2658960"
  },
  {
    "text": "agents well there's a few Pro and cons on this uh compared to using Cloud operated",
    "start": "2658960",
    "end": "2666240"
  },
  {
    "text": "ones from GitHub gitlab Microsoft so the first pro is you get",
    "start": "2666240",
    "end": "2671559"
  },
  {
    "text": "full control you can control what versions of operating systems you can control what Hardware there is you can",
    "start": "2671559",
    "end": "2678480"
  },
  {
    "text": "control all the specs um but you need to maintain them you need to make sure you update the the",
    "start": "2678480",
    "end": "2685480"
  },
  {
    "text": "uh version of the software running your pipelines whatever calls home to your pipeline platform you need to make sure",
    "start": "2685480",
    "end": "2693079"
  },
  {
    "text": "to upgrade your operating systems I've uh worked with build servers that were on I think they were still on red do 6",
    "start": "2693079",
    "end": "2701000"
  },
  {
    "text": "which was eight years out of updates at the time I think that's not",
    "start": "2701000",
    "end": "2707240"
  },
  {
    "text": "good uh I think last project I was on had Windows Server",
    "start": "2707240",
    "end": "2712599"
  },
  {
    "text": "2012 you get right sizing which is that if you need 6 gbt of ram you can give",
    "start": "2714319",
    "end": "2719559"
  },
  {
    "text": "them 6 GB of RAM typically when you run on uh Cloud",
    "start": "2719559",
    "end": "2724800"
  },
  {
    "text": "you either get no choices where you get choices which doubles all the time you get two four eight 16 gigabytes of RAM",
    "start": "2724800",
    "end": "2731760"
  },
  {
    "text": "if you need nine you can get nine but you need to manage scaling yourself and this can be a problem if",
    "start": "2731760",
    "end": "2738119"
  },
  {
    "text": "you want to paralyze your um your pipelines or if you have multiple teams using the same build",
    "start": "2738119",
    "end": "2743960"
  },
  {
    "text": "servers you need to make sure that you reduce the cues by having some sort of",
    "start": "2743960",
    "end": "2749599"
  },
  {
    "text": "scaling mechanic the scaling mechanic can actually be just having 20 servers which are idle because it's your Peak",
    "start": "2749599",
    "end": "2755319"
  },
  {
    "text": "but if you run in some sort of cloud you can probably use some sort of autoscaling to make sure that there is",
    "start": "2755319",
    "end": "2761920"
  },
  {
    "text": "enough servers for the workload that's happening at the moment or some prediction where you know that uh after",
    "start": "2761920",
    "end": "2769040"
  },
  {
    "text": "lunch everyone comes back and they run their pipelines so we scale up by 50% at",
    "start": "2769040",
    "end": "2775400"
  },
  {
    "text": "12:30 someone needs to manage that and cost oh can both both be a",
    "start": "2775400",
    "end": "2781839"
  },
  {
    "text": "positive and a negative right so if we compare with uh I've taken I've taken",
    "start": "2781839",
    "end": "2787640"
  },
  {
    "text": "figures for GitHub actions and gitlab so on GitHub actions you pay slightly less",
    "start": "2787640",
    "end": "2793559"
  },
  {
    "text": "than a Euro for each build hour you use on gitlab you you pay slightly more than",
    "start": "2793559",
    "end": "2799960"
  },
  {
    "text": "a Euro for each build hour you use if you rent a Cloud Server you pay around",
    "start": "2799960",
    "end": "2806160"
  },
  {
    "text": "10 cents for an hour so it's 10 times more expensive to run your stuff on GitHub",
    "start": "2806160",
    "end": "2812839"
  },
  {
    "text": "GitHub actions or gitlab CI than it is to run on your own server if you rent them in the cloud if you",
    "start": "2812839",
    "end": "2818680"
  },
  {
    "text": "have your own premises servers it gets much much cheaper but someone needs to",
    "start": "2818680",
    "end": "2824640"
  },
  {
    "text": "maintain them and maintenance costs if you already have an internal it",
    "start": "2824640",
    "end": "2830280"
  },
  {
    "text": "Department that is happy to run your service for you the added added cost probably isn't that high but if you need",
    "start": "2830280",
    "end": "2837520"
  },
  {
    "text": "to have your developers run your run and maintain your servers or you need to set up a new department for it cost is",
    "start": "2837520",
    "end": "2843880"
  },
  {
    "text": "probably very high so what's next in the in the area of CI",
    "start": "2843880",
    "end": "2852680"
  },
  {
    "text": "pipelines there is two tools that I've been watching and I want to play more",
    "start": "2852680",
    "end": "2858960"
  },
  {
    "text": "with I haven't used them in a real project yet but it's dagger and it's",
    "start": "2858960",
    "end": "2864400"
  },
  {
    "text": "Earthly so both of these are built on the same ideas as our tooling images uh",
    "start": "2864400",
    "end": "2870200"
  },
  {
    "text": "when we use the the docker cache they're built on build kit which means they use",
    "start": "2870200",
    "end": "2875280"
  },
  {
    "text": "the exact same caching mechanism as when you build Docker images so if your source code hasn't",
    "start": "2875280",
    "end": "2882000"
  },
  {
    "text": "changed the compilation step is just cached it uses the previous results from",
    "start": "2882000",
    "end": "2890359"
  },
  {
    "text": "compiling and then it continues on with the same step so if in the conditional pipeline case if your back end hasn't",
    "start": "2890359",
    "end": "2897960"
  },
  {
    "text": "changed the backend pipeline will use cached results and then you get the integration test and it will use the",
    "start": "2897960",
    "end": "2904640"
  },
  {
    "text": "results from that so you get the conditional Logic for free uh dagger uses programming",
    "start": "2904640",
    "end": "2913079"
  },
  {
    "text": "languages and I think introducing programming languages into pipelines is",
    "start": "2913079",
    "end": "2918119"
  },
  {
    "text": "a bit dangerous because when you give programmers a programming language they tend to write software and we don't want",
    "start": "2918119",
    "end": "2924640"
  },
  {
    "text": "software in our pipelines Earthly uses a blend of make files and Docker files uh",
    "start": "2924640",
    "end": "2932559"
  },
  {
    "text": "which looks kind of weird but works pretty well there's a lot less room for uh",
    "start": "2932559",
    "end": "2938960"
  },
  {
    "text": "making complex software in those files and it encourages you to call out the",
    "start": "2938960",
    "end": "2944119"
  },
  {
    "text": "scripts and and other things which I would recommend but I haven't played",
    "start": "2944119",
    "end": "2949640"
  },
  {
    "text": "around with them enough yet to know if they're actually the future so uh quick",
    "start": "2949640",
    "end": "2954980"
  },
  {
    "text": "[Music] recap don't do all the things all the",
    "start": "2954980",
    "end": "2960440"
  },
  {
    "text": "time don't hoard all your artifacts delete them regularly don't order things",
    "start": "2960440",
    "end": "2966400"
  },
  {
    "text": "in the way way that makes it look good order them in the way it makes most sense and reduces the feedback time for",
    "start": "2966400",
    "end": "2974359"
  },
  {
    "text": "you uh don't have just one pipeline make sure you parallelize when you can don't",
    "start": "2974359",
    "end": "2980359"
  },
  {
    "text": "use repper tasks make sure you know your tools and use them as they're intended don't write complex software in",
    "start": "2980359",
    "end": "2987599"
  },
  {
    "text": "your pipelines just have complex software in your",
    "start": "2987599",
    "end": "2992720"
  },
  {
    "text": "software uh don't do everything from scratch all the time don't break other",
    "start": "2992720",
    "end": "2998280"
  },
  {
    "text": "parallell run parallell running pipelines and don't re run your Builds on Raspberry pies all right that's",
    "start": "2998280",
    "end": "3006000"
  },
  {
    "text": "pipeline patterns and anti patterns thank [Applause]",
    "start": "3006000",
    "end": "3016120"
  },
  {
    "text": "you I I think we have time for some questions if I would like to say thank you for a",
    "start": "3016880",
    "end": "3023880"
  },
  {
    "text": "talk and some thank you thank you so much thank you uh the QR code up there",
    "start": "3023880",
    "end": "3031760"
  },
  {
    "text": "leads to my LinkedIn I promise it's not malware so if you want to connect with me uh scan the QR code and how do we do",
    "start": "3031760",
    "end": "3040040"
  },
  {
    "text": "questions should you just shout or should we pass the M around yeah then",
    "start": "3040040",
    "end": "3045640"
  },
  {
    "text": "you won't hear the answers on the screen",
    "start": "3045640",
    "end": "3049798"
  }
]