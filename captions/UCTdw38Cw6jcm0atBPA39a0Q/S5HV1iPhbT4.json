[
  {
    "text": "all right my timer has started running so uh it's time for me to start talking uh",
    "start": "10639",
    "end": "16880"
  },
  {
    "text": "just to make sure I can fit everything in in this one hour slot so um good morning uh welcome if if you saw my",
    "start": "16880",
    "end": "24000"
  },
  {
    "text": "previous talk welcome back I'm doing back toback talks um this one is in a bigger room um it's hopefully a more um",
    "start": "24000",
    "end": "30759"
  },
  {
    "text": "this it's a more advanced topic for sure previous one was about API security we saw some really crappy examples and how",
    "start": "30759",
    "end": "36239"
  },
  {
    "text": "to fix it now we're going to talk about something completely else uh we're still going to break stuff and fix stuff but we're going to talk about Front End",
    "start": "36239",
    "end": "42200"
  },
  {
    "text": "security Now um if there is such a thing we we'll talk about that in a second and specifically for o out um so what we're",
    "start": "42200",
    "end": "50239"
  },
  {
    "text": "going to talk about here is basically o out just a very quick recap so that everybody is on board uh without going",
    "start": "50239",
    "end": "56960"
  },
  {
    "text": "into too much details here but o and open connect um are kind of everywhere these days a lot of systems using them",
    "start": "56960",
    "end": "63680"
  },
  {
    "text": "and I always use this triangle based uh setup to explain uh the relationship so open ID connect is about user",
    "start": "63680",
    "end": "70119"
  },
  {
    "text": "authentication right it co-ops an O out flow under the hood but in essence the question with open ID connect that we're",
    "start": "70119",
    "end": "75240"
  },
  {
    "text": "answering is authenticate the user for me so we're offloading authentication not doing it in app but we're offloading",
    "start": "75240",
    "end": "80720"
  },
  {
    "text": "it to a third party an identity provider it will handle authentication and gives us information about who the US user is",
    "start": "80720",
    "end": "87200"
  },
  {
    "text": "and that's open connect o out solves complet completely different problem o is not about user authentication o is",
    "start": "87200",
    "end": "93280"
  },
  {
    "text": "about accessing resources um in in terminology of the specs is going to be a resource server but in most",
    "start": "93280",
    "end": "100439"
  },
  {
    "text": "applications that we're dealing with today it's going to be an API so I choose to use apis it makes things a",
    "start": "100439",
    "end": "105560"
  },
  {
    "text": "little bit easier to talk about instead of seeing resource server 15,000 times throughout a talk that question is O out",
    "start": "105560",
    "end": "112320"
  },
  {
    "text": "and O out um this single arrow is like 13 steps or something to complete in an actual o out flow because it can get",
    "start": "112320",
    "end": "118799"
  },
  {
    "text": "pretty complicated with a back and forth and redirect and user authentication and so on but in the end what we get is an",
    "start": "118799",
    "end": "125000"
  },
  {
    "text": "access token and the access token allows the client uh the applications on the left bottom corner to access apis and",
    "start": "125000",
    "end": "132239"
  },
  {
    "text": "that's also part of the O ecosystem the ability to access a resource server an API with an access token which can do",
    "start": "132239",
    "end": "138879"
  },
  {
    "text": "its authorization uh logic and so on and so on on the right side it's a triangle",
    "start": "138879",
    "end": "144280"
  },
  {
    "text": "so we need a third leg and the right side is the API making authorization decisions that involves the authorization server either very",
    "start": "144280",
    "end": "150560"
  },
  {
    "text": "explicitly with token introspection or implicitly with signature verification on a Json web token and so on and that",
    "start": "150560",
    "end": "157280"
  },
  {
    "text": "is essentially the ecosystem for oout all right in oout the original spec if",
    "start": "157280",
    "end": "164560"
  },
  {
    "text": "you really want to feel old the original spec is 13 years old 2012 um and it had",
    "start": "164560",
    "end": "169879"
  },
  {
    "text": "like a couple of flows to use in practice like the um authorization code flow the implicit flow uh a flow we",
    "start": "169879",
    "end": "176120"
  },
  {
    "text": "shouldn't talk about because it's like super deprecated and um a client credentials flow and these things have",
    "start": "176120",
    "end": "182800"
  },
  {
    "text": "evolved over time because as you can imagine 13 years ago there were no mobile apps there were no well maybe",
    "start": "182800",
    "end": "188599"
  },
  {
    "text": "something but not as we know today and there were no single page applications with angular and react and view running",
    "start": "188599",
    "end": "194200"
  },
  {
    "text": "in the front end all of that didn't exist we had some web interactions uh but they were somewhat limited and the",
    "start": "194200",
    "end": "199599"
  },
  {
    "text": "focus was heavily on backend applications all right so um as these things evolved we added security",
    "start": "199599",
    "end": "205560"
  },
  {
    "text": "features to the flows and so on and so on and we ended up with um with settling on a best practice for about 5 years now",
    "start": "205560",
    "end": "212439"
  },
  {
    "text": "of using the authorization code flow um for user involved scenarios so forget",
    "start": "212439",
    "end": "217760"
  },
  {
    "text": "about all the other ones if you're a you have a user involved it's going to be an authorization code flow all right and on",
    "start": "217760",
    "end": "223080"
  },
  {
    "text": "this slide I'm going to explain like the concept of an authorization code flow um I'm going to skip over a hefty amount of",
    "start": "223080",
    "end": "228560"
  },
  {
    "text": "details um by Design because otherwise I would have to keep you hostage uh till somewhere be after lunch which would",
    "start": "228560",
    "end": "235079"
  },
  {
    "text": "probably not be appreciated by you by the organizers and by the police maybe yeah so",
    "start": "235079",
    "end": "240400"
  },
  {
    "text": "let's let's talk about the the essence here so in the essence the user is signaling through the application like",
    "start": "240400",
    "end": "246640"
  },
  {
    "text": "yeah I would like to um allow you to access an API on my behalf that's the question that o is trying to solve um",
    "start": "246640",
    "end": "253680"
  },
  {
    "text": "whatever that scenario is we're going to leave that completely in the middle so um the front end the client front end",
    "start": "253680",
    "end": "258840"
  },
  {
    "text": "here is the O client o client is like yeah sure let's start an O flow uh with all the parameters in there like",
    "start": "258840",
    "end": "264040"
  },
  {
    "text": "response type and client ID and redirect URI and all of that stuff um and it basically takes the browser to the A",
    "start": "264040",
    "end": "269720"
  },
  {
    "text": "authorization server to ask for an access token right and the browser will follow that that's a navigation the browser will navigate there um and it",
    "start": "269720",
    "end": "276320"
  },
  {
    "text": "will ask the authorization server um to to basically um honor that request like hey this application should be able to",
    "start": "276320",
    "end": "282400"
  },
  {
    "text": "act on my behalf can you make that happen please and so on and so on and the authorization server will ask the",
    "start": "282400",
    "end": "287479"
  },
  {
    "text": "user like who are you please authenticate if there's of course if there's an active session user has",
    "start": "287479",
    "end": "292600"
  },
  {
    "text": "authenticated before this question will not be there but the first time the authorization server will be like who are you and I'm going to authenticate",
    "start": "292600",
    "end": "298400"
  },
  {
    "text": "with my username Philip and my password fluffy dog 17 exclamation mark That's my default slide password not my real",
    "start": "298400",
    "end": "304840"
  },
  {
    "text": "password it looks very secure uh but it really isn't so please do not try to hack my accounts with that password um",
    "start": "304840",
    "end": "311680"
  },
  {
    "text": "trust me it's not real all right so when that happens the authorization server is Happy it knows that I'm Philip it knows",
    "start": "311680",
    "end": "318160"
  },
  {
    "text": "that the client is allowed to access something on my behalf everything checks out so it will return an authorization code a temporary artifact to send",
    "start": "318160",
    "end": "326240"
  },
  {
    "text": "through the front Channel this is the front channel uh where's my highlighter here somewhere stuck on my screen there",
    "start": "326240",
    "end": "333840"
  },
  {
    "text": "we go the highlighter here this is a front channel so this is kind of untrusted so we use a temporary artifact",
    "start": "333840",
    "end": "340039"
  },
  {
    "text": "the authorization code um to handle that the authorization code ends back up at the client the front and application and",
    "start": "340039",
    "end": "346440"
  },
  {
    "text": "the front end with this temporary artifact can't do much except one thing it can go back to the authorization server and exchange that code for tokens",
    "start": "346440",
    "end": "353759"
  },
  {
    "text": "all right the authorization code is exchanged for tokens and it obtains an access token and maybe a refresh token",
    "start": "353759",
    "end": "359319"
  },
  {
    "text": "and so one and with that access token it can now access the API so we have accomplished our mission um in this",
    "start": "359319",
    "end": "365199"
  },
  {
    "text": "conceptual view sorry in this conceptual view we eliminated the 13 to n steps in reality there's going to be a lot more",
    "start": "365199",
    "end": "371400"
  },
  {
    "text": "involved you have to use something called pixie and so on so on the flow is a lot more complicated all right but for",
    "start": "371400",
    "end": "377000"
  },
  {
    "text": "our basic understanding of what we're going to talk about in this session this is enough all right in this",
    "start": "377000",
    "end": "384680"
  },
  {
    "text": "conceptualization in this implementation pattern a front end has a couple of responsibilities right our frontend",
    "start": "384680",
    "end": "390319"
  },
  {
    "text": "client or angular app or view app or react app has to do a couple of things first of all um it has to act as an O",
    "start": "390319",
    "end": "396479"
  },
  {
    "text": "out client so it runs the oout flows it has typically a client library to run that for you don't have to implement the",
    "start": "396479",
    "end": "402120"
  },
  {
    "text": "dirty details yourself the library will handle them for you and you are good to go it receives tokens so it also",
    "start": "402120",
    "end": "408680"
  },
  {
    "text": "responsible for token management right the front end is supposed to handle token management um keeping track of the",
    "start": "408680",
    "end": "413800"
  },
  {
    "text": "access token the refresh token using the refresh token when necessary and so on and then well actually have some items",
    "start": "413800",
    "end": "420080"
  },
  {
    "text": "to highlight that and then finally we have the responsibility of calling the API so whenever we make a request to the",
    "start": "420080",
    "end": "425639"
  },
  {
    "text": "API we include the access token typically in the authorization header type bear and we sent the token and that's how the API can make",
    "start": "425639",
    "end": "431759"
  },
  {
    "text": "authorization decisions and this is how o out in front ends is very often",
    "start": "431759",
    "end": "437360"
  },
  {
    "text": "implemented all right now what happens when things go",
    "start": "437360",
    "end": "442680"
  },
  {
    "text": "wrong that's a very important question what happens when malicious JavaScript",
    "start": "442680",
    "end": "448479"
  },
  {
    "text": "runs in your application that's in front end in front end World malicious JavaScript is one of the biggest threats",
    "start": "448479",
    "end": "454840"
  },
  {
    "text": "right how can that happen well if you went to Scotto earlier um if some vendor",
    "start": "454840",
    "end": "459919"
  },
  {
    "text": "gets compromised and their Javascript file is modified and You Pull It in all of a sudden you're now running untrusted",
    "start": "459919",
    "end": "465960"
  },
  {
    "text": "code that might control your application it can do crypto stuff or it can attack o out U which is also possible a second",
    "start": "465960",
    "end": "472199"
  },
  {
    "text": "way that this can happen is with cross scripting cross scripting is basically a vulnerability where data uh for the user",
    "start": "472199",
    "end": "477800"
  },
  {
    "text": "from the user ends up in the application gets executed as code it's a mistake it's a coding mistake but it basically",
    "start": "477800",
    "end": "483919"
  },
  {
    "text": "allows an attacker to provide malicious data which will eventually uh execute in the users in a victim's browser inside",
    "start": "483919",
    "end": "490360"
  },
  {
    "text": "the application the exact details are out of scope not relevant but what",
    "start": "490360",
    "end": "495479"
  },
  {
    "text": "matters is that cross at scripting results in malicious JavaScript running in the victim's browser within the application all right so what can that",
    "start": "495479",
    "end": "503159"
  },
  {
    "text": "do steal tokens right that's essentially um the component token management gets",
    "start": "503159",
    "end": "509080"
  },
  {
    "text": "attacked the malicious code is like it's an O out app awesome there's some tokens there yoink it steals the tokens it",
    "start": "509080",
    "end": "514680"
  },
  {
    "text": "ships them off and it basically attacks the application that's what here's what an attch scenario would look like the",
    "start": "514680",
    "end": "520479"
  },
  {
    "text": "application is running um restor grade it's a restaurant review application it's my go-to uh training app because I",
    "start": "520479",
    "end": "527279"
  },
  {
    "text": "like great restaurants and application security so you can put them together in a restaurant review app more importantly everybody understands how it works so I",
    "start": "527279",
    "end": "533760"
  },
  {
    "text": "don't have to spend half an hour explaining the training application to to dive into that so this is pretty",
    "start": "533760",
    "end": "539600"
  },
  {
    "text": "understandable what happens here well we have some storage areas we have some uh the application running and all of a",
    "start": "539600",
    "end": "544959"
  },
  {
    "text": "sudden we have malicious code that's the red part red is always bad here malicious code running and that malicious code can do whatever it wants",
    "start": "544959",
    "end": "552200"
  },
  {
    "text": "and of course it's going to steal the information right we read the data from local storage um and we send a request",
    "start": "552200",
    "end": "558839"
  },
  {
    "text": "to a server controlled by the attacker our server my evil domain is malicious food.com uh just to stay in the team um",
    "start": "558839",
    "end": "565399"
  },
  {
    "text": "so we send a request to malicious food.com and it will include the data from local storage there and the server",
    "start": "565399",
    "end": "571560"
  },
  {
    "text": "now has the access token or the refresh token and they can abuse that token by calling an API well the access token not",
    "start": "571560",
    "end": "577600"
  },
  {
    "text": "the refresh token they can use the refresh token they get a new access token and then I've used the API all right that's essentially what the thread",
    "start": "577600",
    "end": "586160"
  },
  {
    "text": "scenario is for o out and single page applications this is not good but also",
    "start": "586160",
    "end": "592279"
  },
  {
    "text": "not earth chattering this is not like new insights um this is pretty well",
    "start": "592279",
    "end": "597480"
  },
  {
    "text": "known this also means that there are some counter measures for this for example one of the recommended best",
    "start": "597480",
    "end": "604320"
  },
  {
    "text": "practices is to use shortlived access tokens if your access tokens are only valid for 5 minutes if somebody steals",
    "start": "604320",
    "end": "610120"
  },
  {
    "text": "them they can abuse them sure but at most for 5 minutes so that might be a good solution keep them shortlived then",
    "start": "610120",
    "end": "617440"
  },
  {
    "text": "you have the refresh token which allows the attacker to get fresh access tokens and the uh go the guidance there is like",
    "start": "617440",
    "end": "623160"
  },
  {
    "text": "yeah you can use refresh token rotation and refresh token rotation basically means I'll explain it in a second that",
    "start": "623160",
    "end": "629320"
  },
  {
    "text": "that a refresh token cannot be used by both the attacker and the application you can only use it once and if somebody",
    "start": "629320",
    "end": "636079"
  },
  {
    "text": "uses it a second time things will break and that's what um the recommendations",
    "start": "636079",
    "end": "641680"
  },
  {
    "text": "would be in this particular scenario this pattern is highly",
    "start": "641680",
    "end": "647240"
  },
  {
    "text": "common but is absolutely horribly insecure so I've wasted a lot of time",
    "start": "647240",
    "end": "653360"
  },
  {
    "text": "talking about the stuff you're not supposed to do um if you're at this point you're you're probably like experiencing some D Deja Vu if you've",
    "start": "653360",
    "end": "660440"
  },
  {
    "text": "been here two years ago I talked about the exact same issue uh back then all right this is not a glitch in The Matrix",
    "start": "660440",
    "end": "667079"
  },
  {
    "text": "this is kind of by Design um so what's going on here is this has been a problem",
    "start": "667079",
    "end": "672200"
  },
  {
    "text": "for a long time and what I discussed so far used to be the recommendations uh in the spec for o out for browser based",
    "start": "672200",
    "end": "678720"
  },
  {
    "text": "apps like there's a separate spec for this and it used to say like yeah um there's some risk of xss but you can use",
    "start": "678720",
    "end": "683839"
  },
  {
    "text": "maybe this um with short lft tokens and refresh token rotation it's kind of make things better and oh yeah there's like",
    "start": "683839",
    "end": "689519"
  },
  {
    "text": "this other pattern that you might want to use but whatever that's in a nutshell what the old version of the spec used to",
    "start": "689519",
    "end": "695480"
  },
  {
    "text": "say and as a security expert and working a lot with front ends this this always",
    "start": "695480",
    "end": "700560"
  },
  {
    "text": "triggered me a bit like this doesn't make sense like you can evade these issues right you can evade things like",
    "start": "700560",
    "end": "706839"
  },
  {
    "text": "refresh token rotation and I I wrote like a lengthy message on the mailing list the O mailing list and people were",
    "start": "706839",
    "end": "712200"
  },
  {
    "text": "like yeah and that was kind of it so I was like huh that's not very efficient",
    "start": "712200",
    "end": "717600"
  },
  {
    "text": "so um I decided like you know what what let's let's do a talk about that let's tell people that the advice in the spec",
    "start": "717600",
    "end": "722800"
  },
  {
    "text": "is really bad and that this is probably better and that's what I did um here at n security and the feedback from n Talk",
    "start": "722800",
    "end": "730320"
  },
  {
    "text": "two years ago was like overwhelming people were like holy language holy crap I was going to say something else but",
    "start": "730320",
    "end": "736240"
  },
  {
    "text": "holy crap that's like not good and and they saw the light and they were like yeah this was really insightful and this",
    "start": "736240",
    "end": "742240"
  },
  {
    "text": "was really great and yeah we we actually should think differently about security and front ends and I did the same talk",
    "start": "742240",
    "end": "748480"
  },
  {
    "text": "that year at the security workshop and that's basically where the people writing the specs are all together in like a friendly environment and I did",
    "start": "748480",
    "end": "754600"
  },
  {
    "text": "the same Demos in their face like here's how I can how you easily circumvent these things and are like oh yeah that's",
    "start": "754600",
    "end": "762000"
  },
  {
    "text": "yeah that's not good now we now we understand like seeing something is apparently a lot different than uh",
    "start": "762000",
    "end": "767760"
  },
  {
    "text": "writing it out in a mailing list because people have to make the the connection to to actually see it being done instead",
    "start": "767760",
    "end": "773399"
  },
  {
    "text": "of hearing someone like yeah yeah I can circumvent that and showing that was was actually kind of very important and what",
    "start": "773399",
    "end": "779240"
  },
  {
    "text": "the result was from that is like we we talked a lot about security and of course it's a l security workshop and",
    "start": "779240",
    "end": "784920"
  },
  {
    "text": "and some other things and in talking with the main spec author was like we probably need to rephrase the advice a",
    "start": "784920",
    "end": "791760"
  },
  {
    "text": "bit and and change this a bit and this eventually resulted in me becoming a co-author of the spec and becoming a",
    "start": "791760",
    "end": "796839"
  },
  {
    "text": "co-author is coded language for rewriting the whole thing that's eventually what happened you you'll find",
    "start": "796839",
    "end": "803160"
  },
  {
    "text": "like a major div somewhere in around number 15 I think uh rewriting the whole thing and expanding the spec a lot it",
    "start": "803160",
    "end": "810920"
  },
  {
    "text": "went from like vake discussions like yeah something like this to like a very concrete document and that's what I want",
    "start": "810920",
    "end": "817079"
  },
  {
    "text": "to talk about here today some stuff will overlap with the thing I talked about two years ago but I'm going to add a lot of new stuff of what's in the spec and",
    "start": "817079",
    "end": "823959"
  },
  {
    "text": "the main contribution here is basically a fully featured or fully detailed tread",
    "start": "823959",
    "end": "829880"
  },
  {
    "text": "model like what can the attacker do when they have cross scripting access to the application all right and then we talk",
    "start": "829880",
    "end": "837160"
  },
  {
    "text": "about implementation patterns and the old pattern that I talked about before which is really crappy is still in there",
    "start": "837160",
    "end": "843560"
  },
  {
    "text": "if it were me I would have deleted it but apparently you're not really supposed to do that be that strict in Spec so people might want to use it so",
    "start": "843560",
    "end": "850199"
  },
  {
    "text": "what we did is we added like a threat analysis to that pattern like hey you remember these threats we had here like",
    "start": "850199",
    "end": "856360"
  },
  {
    "text": "here's how this scores against all of these threats like doesn't cover this doesn't cover this so this is a problem this is a problem yeah basically doesn't",
    "start": "856360",
    "end": "863279"
  },
  {
    "text": "do anything security wise that's basically the conclusion of that pattern now of course we have the other recommended patterns like using a BFF",
    "start": "863279",
    "end": "870240"
  },
  {
    "text": "and it can cover a whole bunch of these threats and that's what I'm going to talk about here in this session all",
    "start": "870240",
    "end": "875399"
  },
  {
    "text": "right so you saw my name um on the spec the P stands for Philip which is very",
    "start": "875399",
    "end": "881079"
  },
  {
    "text": "confusing um thank you French people for that um the name is a French spelling by the way which is not very International",
    "start": "881079",
    "end": "887560"
  },
  {
    "text": "and uh whatever so who am I am a security expert I did a PhD in web security and since my PhD which is like",
    "start": "887560",
    "end": "894160"
  },
  {
    "text": "ages ago I've been helping developers understand security I do that through uh conference talks like this one through",
    "start": "894160",
    "end": "899759"
  },
  {
    "text": "trainings conference workshops I did one here on API security but also through very specialized Consulting helping them",
    "start": "899759",
    "end": "907000"
  },
  {
    "text": "understand o out understand the tradeoffs understand um what to do how to do it and so on and so on so that's",
    "start": "907000",
    "end": "912560"
  },
  {
    "text": "essentially how I spend my time I also volunteer for SE which is a nonprofit",
    "start": "912560",
    "end": "918519"
  },
  {
    "text": "organization um which runs a yearly apps course in Belgium so if you ever need a",
    "start": "918519",
    "end": "924160"
  },
  {
    "text": "reason to visit Belgium for a whole week and your employer pays for that se upde is the perfect opportunity so that's how",
    "start": "924160",
    "end": "930480"
  },
  {
    "text": "you sell it to you uh don't tell your manager that I said that of course you have to package this a bit but what we do there is we bring experts from around",
    "start": "930480",
    "end": "936759"
  },
  {
    "text": "the world to Len to Belgium uh to teach about application security for a whole week we sit together for a whole week",
    "start": "936759",
    "end": "942000"
  },
  {
    "text": "it's very immersive it's a small group it's a super fun experience and it's very very uh great to learn about",
    "start": "942000",
    "end": "948399"
  },
  {
    "text": "application security all right enough about me let's almost start talking",
    "start": "948399",
    "end": "954360"
  },
  {
    "text": "about o out again if you want to grab a copy of the slides uh that saves you uh having to take pictures all the time",
    "start": "954360",
    "end": "959880"
  },
  {
    "text": "which you can do of course um if you want me to post for a picture you can ask it as well I'll do that um but if you want to grab a PDF copy you can find",
    "start": "959880",
    "end": "965920"
  },
  {
    "text": "it here it's also on my website on my socials you can easily find that um if you get my name right then I'm very easy",
    "start": "965920",
    "end": "972480"
  },
  {
    "text": "to find uh if you forgot how to write it it might be a bit more challenging but um the O spec would be a good starting",
    "start": "972480",
    "end": "978079"
  },
  {
    "text": "point like you can go there and then you can at least get half of my name right and then take it from there",
    "start": "978079",
    "end": "984959"
  },
  {
    "text": "good let's talk about JavaScript everyone's favorite topic let's talk",
    "start": "984959",
    "end": "991319"
  },
  {
    "text": "about malicious JavaScript that's what it's really about it's malicious JavaScript running in the browser that's the problem here right we have a browser",
    "start": "991319",
    "end": "998160"
  },
  {
    "text": "based application HTML and JavaScript and all of a sudden through some mechanism which we can leave out of",
    "start": "998160",
    "end": "1003880"
  },
  {
    "text": "scope here the attacker succeeds in executing JavaScript and one of the ways that can happen is cross-side scripting",
    "start": "1003880",
    "end": "1009560"
  },
  {
    "text": "right cross-side scripting is a major vulnerability actually I found some stats from hacker one a bug Bounty",
    "start": "1009560",
    "end": "1015079"
  },
  {
    "text": "platform and xss is like the big uh bright yellow Chunk on top 23% of their",
    "start": "1015079",
    "end": "1020240"
  },
  {
    "text": "vulnerabilities are cross- scripting and if you search like a vulnerability database for xss the results just keep",
    "start": "1020240",
    "end": "1025798"
  },
  {
    "text": "coming and coming and coming it's everywhere it's very hard to prevent um cross- at scripting and when it happens",
    "start": "1025799",
    "end": "1033079"
  },
  {
    "text": "the consequences are devastating and it's been a problem for a long time it's basically been a problem since I think",
    "start": "1033079",
    "end": "1039280"
  },
  {
    "text": "the early 2000s when somebody first discovered his attack um and that's when things went down the basically",
    "start": "1039280",
    "end": "1044558"
  },
  {
    "text": "and across the scripting started popping up everywhere you may be thinking like huh but single",
    "start": "1044559",
    "end": "1051600"
  },
  {
    "text": "page applications didn't exist back then so even then when you're building like these old traditional web applications",
    "start": "1051600",
    "end": "1056720"
  },
  {
    "text": "some of you may recognize yourself in this image uh my apologies for that um you",
    "start": "1056720",
    "end": "1061880"
  },
  {
    "text": "can beat me up after the talk in the corridor that's fine um no we do not approve physical",
    "start": "1061880",
    "end": "1068039"
  },
  {
    "text": "violence old web Applications had the same problem right building serers side web applications Java server Pages PHP",
    "start": "1068039",
    "end": "1074840"
  },
  {
    "text": "stuff Pearl applic whatever you're doing they had the same problem we had a back ends and we we had a browser and we had HTML and requests and responses and we",
    "start": "1074840",
    "end": "1082120"
  },
  {
    "text": "used cookies back then right session cookies because why not and cookies are cool I like cookies um and in essence we",
    "start": "1082120",
    "end": "1090600"
  },
  {
    "text": "had cross scripting back then as well and cross scripting back then sorry cross scripting back then resulted in an",
    "start": "1090600",
    "end": "1096200"
  },
  {
    "text": "attack called session hijacking right it's malicious JavaScript executing and what would it do it would steal your",
    "start": "1096200",
    "end": "1101720"
  },
  {
    "text": "cookie ship it off to a server controlled by the attacker and the attacker can now use that cookie to present to pretend to be you as a victim",
    "start": "1101720",
    "end": "1108320"
  },
  {
    "text": "session hijacking sounds familiar token stealing cookie stealing same thing uh",
    "start": "1108320",
    "end": "1114440"
  },
  {
    "text": "different data auto power off my television is going to switch off in 55",
    "start": "1114440",
    "end": "1120600"
  },
  {
    "text": "seconds so uh we we'll have to deal with that as we go along that's a c to the people in the",
    "start": "1120600",
    "end": "1126559"
  },
  {
    "text": "back by the way um what's the solution here the solution back then was like yeah you know what um we can mark the",
    "start": "1126559",
    "end": "1134080"
  },
  {
    "text": "cookie as HTP only because that prevents the cookie from being accessed from JavaScript it",
    "start": "1134080",
    "end": "1139760"
  },
  {
    "text": "allows the use of the cookie on the network but you can't read it from JavaScript and that's essentially the",
    "start": "1139760",
    "end": "1145360"
  },
  {
    "text": "solution that was pitched back then and people believe that this would solve their cross- scripting problems and it",
    "start": "1145360",
    "end": "1150760"
  },
  {
    "text": "really doesn't there was even a misbelief at that point look at me not at him look at me there was a misbelief",
    "start": "1150760",
    "end": "1157480"
  },
  {
    "text": "back then that HTP only fixes crossy scripting you can find blog post saying like HTP only cookies are a great way to",
    "start": "1157480",
    "end": "1164080"
  },
  {
    "text": "prevent cross out scripting which is like what no it's it solves like One",
    "start": "1164080",
    "end": "1169280"
  },
  {
    "text": "symptom of the attack like one potential consequence but the attacker is still running code in the front end in your",
    "start": "1169280",
    "end": "1175760"
  },
  {
    "text": "browser the attacker can do anything that a legitimate application can do and it can basically for example send requests to the back end if you're",
    "start": "1175760",
    "end": "1182080"
  },
  {
    "text": "building like a serers side banking app what can it do it can send a request like add a new transaction to the list",
    "start": "1182080",
    "end": "1187520"
  },
  {
    "text": "it can modify the Dum to hide the transaction in your list of monthly payments or weekly payments and then when you pay it of course the",
    "start": "1187520",
    "end": "1193679"
  },
  {
    "text": "transaction will be there and the attacker will steal all your monies something like that has always been a",
    "start": "1193679",
    "end": "1199360"
  },
  {
    "text": "problem thank you by the way has always been a problem and it only also never fixed the",
    "start": "1199360",
    "end": "1205080"
  },
  {
    "text": "issue so what does this mean this means that we kind of underestimate as as a",
    "start": "1205080",
    "end": "1211200"
  },
  {
    "text": "gener general General note for the community we tend to underestimate the real power of cross at scripting because",
    "start": "1211200",
    "end": "1218000"
  },
  {
    "text": "we focus on this one super obvious attack it's like if you think about",
    "start": "1218000",
    "end": "1223840"
  },
  {
    "text": "somebody burglarizing your house you're thinking about they might steal my gold jewels while the AER is just there to",
    "start": "1223840",
    "end": "1229960"
  },
  {
    "text": "drink your booze for example and for some people the boo might be worth more than the gold jewels but that's that's again a different story but that's the",
    "start": "1229960",
    "end": "1236640"
  },
  {
    "text": "the the real story here cross- at scripting is about a lot more than just stealing data and that brings us back to",
    "start": "1236640",
    "end": "1243000"
  },
  {
    "text": "our front- end story and the front end story here is that the can do a lot more",
    "start": "1243000",
    "end": "1248720"
  },
  {
    "text": "so we had this scenario this is what I call the 12-year-old script Kitty approach like my first xss and like oh",
    "start": "1248720",
    "end": "1256000"
  },
  {
    "text": "I'm in I'm going to steal stuff and abuse stuff but the real attacker they will think what they're doing they will probably not be a script Kitty hopefully",
    "start": "1256000",
    "end": "1263520"
  },
  {
    "text": "well I'm not sure if that hopeful is correct but they will think about ways to compromise the application without",
    "start": "1263520",
    "end": "1269840"
  },
  {
    "text": "running into these things like refresh token rotation so what is refresh token rotation all about let me tell you why",
    "start": "1269840",
    "end": "1276000"
  },
  {
    "text": "it doesn't work refresh token rotation the concept is that the refresh token changes every time you use it and if you",
    "start": "1276000",
    "end": "1281919"
  },
  {
    "text": "use an old one twice everything blows up so to speak uh everything will stop",
    "start": "1281919",
    "end": "1287520"
  },
  {
    "text": "working that's a maybe a less dramatic way of seeing things so in a legitimate scenario the front end or the client you",
    "start": "1287520",
    "end": "1293880"
  },
  {
    "text": "can use it for other clients but you shouldn't but the client basically has an access token and a refresh token and",
    "start": "1293880",
    "end": "1298960"
  },
  {
    "text": "when the access token is going to expire we use a refresh token to get a new access token and a new refresh token and",
    "start": "1298960",
    "end": "1304720"
  },
  {
    "text": "then when the other the second access token expires we get a new set of tokens token set three and when three expires",
    "start": "1304720",
    "end": "1310159"
  },
  {
    "text": "we get token set four and this keeps going until the the authorization services like yeah no this this is no",
    "start": "1310159",
    "end": "1315400"
  },
  {
    "text": "longer valid it's it's enough you have reached the absolute lifetime of this chain refresh token rotation pitched as",
    "start": "1315400",
    "end": "1321360"
  },
  {
    "text": "a solution why because the idea is that the authorization server will detect reuse so at some point the attacker will",
    "start": "1321360",
    "end": "1327679"
  },
  {
    "text": "steal refresh token too remember script KY going in yoink and abuse that and the attacker is like ha I can use a refresh",
    "start": "1327679",
    "end": "1334600"
  },
  {
    "text": "token I'm so cool and we now have access token Tre and refresh token Tre and the attacker can use access token Tre to",
    "start": "1334600",
    "end": "1341039"
  },
  {
    "text": "access the API on behalf of the user and cause Mayhem however when",
    "start": "1341039",
    "end": "1346840"
  },
  {
    "text": "the application is of course unaware that this happened there's no xss in",
    "start": "1346840",
    "end": "1352320"
  },
  {
    "text": "exfiltration monitor tool it just doesn't know that this happened so at some point the applications going be like hey I'm going to use refresh token",
    "start": "1352320",
    "end": "1358360"
  },
  {
    "text": "to and as the authorization service like no no no no no no alarm Bells go off",
    "start": "1358360",
    "end": "1364360"
  },
  {
    "text": "like a uh security Alert in the logs and it basically detects the ReUse and it",
    "start": "1364360",
    "end": "1370080"
  },
  {
    "text": "assumes that this must have been because of a theft of the refresh token and it basically revokes existing tokens like",
    "start": "1370080",
    "end": "1377600"
  },
  {
    "text": "it doesn't give the application new tokens it also revokes any descendant of refresh token three so uh two so refresh",
    "start": "1377600",
    "end": "1383880"
  },
  {
    "text": "token three four 5 six whatever are now revoked and that is how refresh token",
    "start": "1383880",
    "end": "1389080"
  },
  {
    "text": "rotation is supposed to protect you and this pattern",
    "start": "1389080",
    "end": "1394240"
  },
  {
    "text": "takes or fails to take into account that the attacker can maybe be a little bit",
    "start": "1394240",
    "end": "1399360"
  },
  {
    "text": "smarter than yoink and abuse for example what if the attacker Waits until the",
    "start": "1399360",
    "end": "1404919"
  },
  {
    "text": "application goes offline before using the refresh token huh in that case this happens the red",
    "start": "1404919",
    "end": "1411760"
  },
  {
    "text": "part happens but the blue part never happens so the green part never happens",
    "start": "1411760",
    "end": "1417159"
  },
  {
    "text": "oops and that's one of the demos that I Illustrated um or used to illustrate",
    "start": "1417159",
    "end": "1422799"
  },
  {
    "text": "that refresh token rotation is not a security measure it's just annoying in a",
    "start": "1422799",
    "end": "1428120"
  },
  {
    "text": "nutshell it it's it seems secure uh if you take these very strict parameters",
    "start": "1428120",
    "end": "1433480"
  },
  {
    "text": "but in essence it doesn't really add much sure it makes it a little bit more complicated and maybe some really",
    "start": "1433480",
    "end": "1439039"
  },
  {
    "text": "simplistic scenarios no longer work but in essence a smart attacker can easily circumvent this so what does the",
    "start": "1439039",
    "end": "1444720"
  },
  {
    "text": "attacker do they steal data and they keep stealing data they don't use it they just extract data on and on and on",
    "start": "1444720",
    "end": "1450320"
  },
  {
    "text": "and on and then they detect until the application goes offline and then they abuse the refresh token and the",
    "start": "1450320",
    "end": "1455799"
  },
  {
    "text": "application will not use the latest refresh token the attacker does and they can keep that chain alive for as long as",
    "start": "1455799",
    "end": "1461120"
  },
  {
    "text": "this works all right other ways would be the attacker can steal the refresh token and then delete it from the client if",
    "start": "1461120",
    "end": "1467120"
  },
  {
    "text": "possible and then the client can also not use it anymore it will fail like oh whoops something failed but the attacker can keep going with the latest refresh",
    "start": "1467120",
    "end": "1473880"
  },
  {
    "text": "token and you can think of a thousand variations of this specific uh form of attack so the focus on token X",
    "start": "1473880",
    "end": "1481399"
  },
  {
    "text": "filtration as the original spec used to do severely underrepresents the capabilities of malicious JavaScript all",
    "start": "1481399",
    "end": "1489080"
  },
  {
    "text": "right so let's do a quick demo of s stepping refresh token rotation so you get to experience the in your face of",
    "start": "1489080",
    "end": "1496120"
  },
  {
    "text": "why this does not work very well what I have here in the demo is we have a demo",
    "start": "1496120",
    "end": "1501240"
  },
  {
    "text": "application we have um a simple application using o out um",
    "start": "1501240",
    "end": "1507200"
  },
  {
    "text": "and access tokens it doesn't do much um except for using o basically we can search for things like we can search for",
    "start": "1507200",
    "end": "1513720"
  },
  {
    "text": "test and search and then it says like we found zero results because it actually doesn't search it just says like yeah I",
    "start": "1513720",
    "end": "1518919"
  },
  {
    "text": "couldn't find something uh basically like children like have you searched I couldn't find it and then you go look it's like it's right there oh yeah look",
    "start": "1518919",
    "end": "1524320"
  },
  {
    "text": "at that so this is basically a child version of a web app um what what does this mean this means that if we search",
    "start": "1524320",
    "end": "1530039"
  },
  {
    "text": "something it ends up in the page um it also has a cross scripting problem just a tiny one uh we can search for for",
    "start": "1530039",
    "end": "1536480"
  },
  {
    "text": "example test image source is none oh this image doesn't exist so what do we do if it doesn't exist well alert one uh",
    "start": "1536480",
    "end": "1542880"
  },
  {
    "text": "would be a good idea and we search for this and boom now we have cross scripting of course cross- scripting on",
    "start": "1542880",
    "end": "1548640"
  },
  {
    "text": "your machine doesn't get you paid as a bug Bounty Hunter everybody can do that that's very easy uh you can just use",
    "start": "1548640",
    "end": "1554039"
  },
  {
    "text": "type alert one in the def tools and oh look at that the trick is if you want to get paid as a bug Bounty Hunter for xss",
    "start": "1554039",
    "end": "1559880"
  },
  {
    "text": "is me doing something on my machine that will trigger xss on your machine but if you look closely um a search feature is",
    "start": "1559880",
    "end": "1566600"
  },
  {
    "text": "like notoriously vulnerable for this the search term is also in the URL so you can link to this uh and if you send it",
    "start": "1566600",
    "end": "1571880"
  },
  {
    "text": "to your friends they can also see the results and if you would load this URL in the browser let's actually do that",
    "start": "1571880",
    "end": "1577279"
  },
  {
    "text": "let's hit enter here if you hit enter here you can see that the code also executes if I send you this link and you",
    "start": "1577279",
    "end": "1582520"
  },
  {
    "text": "open this in your browser um it will pop up the JavaScript alert the alert is the",
    "start": "1582520",
    "end": "1587919"
  },
  {
    "text": "proof of concept right if I can pop up an alert I can do anything I want just takes a little bit more effort than",
    "start": "1587919",
    "end": "1593080"
  },
  {
    "text": "typing alert one but a little bit more effort is going to pay off if I can execute that payload so how do we attack",
    "start": "1593080",
    "end": "1599440"
  },
  {
    "text": "this well first let's log in this is O out this is the whole authorization code flow it takes us to an an authorization",
    "start": "1599440",
    "end": "1606480"
  },
  {
    "text": "server where you have to log in with a username and a password very uninteresting and now we're logged in as",
    "start": "1606480",
    "end": "1611799"
  },
  {
    "text": "Philip D and we have an access token and you'll see that I've configured the application with very aggressive refresh",
    "start": "1611799",
    "end": "1616880"
  },
  {
    "text": "token rotation so it should start start re rotating refresh tokens um in a second there we go um and it keeps doing",
    "start": "1616880",
    "end": "1623240"
  },
  {
    "text": "that very often so we see this in action in reality you would not do that every 10 seconds or something but uh you kind",
    "start": "1623240",
    "end": "1628440"
  },
  {
    "text": "of get the idea all right so how are we going to attack the application well let's take a look here I have prepared a",
    "start": "1628440",
    "end": "1635640"
  },
  {
    "text": "payload this is what we'll search for we'll search for test and then let me make this a bit bigger there we go and then we include",
    "start": "1635640",
    "end": "1643159"
  },
  {
    "text": "an SVG and the SVG is hidden of course and then we have an unload like oh yeah if you load this SV image which doesn't",
    "start": "1643159",
    "end": "1649360"
  },
  {
    "text": "really do anything but whatever then we include a piece of code from malicious food.com Js attack. Js and that's how an",
    "start": "1649360",
    "end": "1655960"
  },
  {
    "text": "attacker will come after you that's all they need to launch this what does this attack. JS do it basically steals your",
    "start": "1655960",
    "end": "1663080"
  },
  {
    "text": "session storage and ships it off to a server control by the attacker it steals your tokens that's it that's all you",
    "start": "1663080",
    "end": "1668240"
  },
  {
    "text": "need you can even write this as a single line if you really want to and we do it every X seconds and then we detect um",
    "start": "1668240",
    "end": "1674880"
  },
  {
    "text": "later if the application goes offline and we abuse that so how do we do that well we go here I can now search for",
    "start": "1674880",
    "end": "1681240"
  },
  {
    "text": "this link and my server is on the left I can see that we have stolen the",
    "start": "1681240",
    "end": "1688200"
  },
  {
    "text": "refresh token all right and on the right we are refreshing",
    "start": "1688200",
    "end": "1694320"
  },
  {
    "text": "our tokens and on the left we're stealing the refresh token and everything still works and you see the heartbeat like client application is",
    "start": "1694320",
    "end": "1699760"
  },
  {
    "text": "still alive that's something that will eventually detect like H it's not there anymore and off we go so that's",
    "start": "1699760",
    "end": "1705039"
  },
  {
    "text": "essentially what's going on um we can I have to be careful with the timing here otherwise the demo breaks so let's see",
    "start": "1705039",
    "end": "1712240"
  },
  {
    "text": "the latest refresh there's the latest refresh token and then let's see when the yes the server knows about it so",
    "start": "1712240",
    "end": "1717480"
  },
  {
    "text": "let's navigate away kill the application all right the application is not",
    "start": "1717480",
    "end": "1723240"
  },
  {
    "text": "there and on the left we will detect that the application is not there getting ready to abuse tokens and there we go and we can keep the refresh token",
    "start": "1723279",
    "end": "1730080"
  },
  {
    "text": "chain alive and that's why refresh token rotation is not a security measure it's mostly an annoyance um it's a false",
    "start": "1730080",
    "end": "1736519"
  },
  {
    "text": "sense of security but it doesn't really help you because an attacker that's at least as smart as I am can write an",
    "start": "1736519",
    "end": "1741799"
  },
  {
    "text": "attack like this it's super easy super simple uh to get this done in practice all right I'm going to kill this before",
    "start": "1741799",
    "end": "1748000"
  },
  {
    "text": "the azer guys kick me off for abuse uh and we should be good all right so that's",
    "start": "1748000",
    "end": "1754360"
  },
  {
    "text": "one and this is kind of obvious and this still has the issue of people saying like yeah but what if we can fix the",
    "start": "1754360",
    "end": "1760399"
  },
  {
    "text": "refresh token maybe we can hide it in a web worker and then the refresh token isn't accessible and you wouldn't be",
    "start": "1760399",
    "end": "1765840"
  },
  {
    "text": "able to do this and ha we Sol security and of course if you think about this the attacker can do anything they want",
    "start": "1765840",
    "end": "1771559"
  },
  {
    "text": "right so what else can we attack here well what if we attack the O out client",
    "start": "1771559",
    "end": "1778519"
  },
  {
    "text": "the front end is requesting or doing an O out flow with an authorization code and exchange that code for tokens what",
    "start": "1778519",
    "end": "1784120"
  },
  {
    "text": "if we do the same as the attacker there's no limit on how many authorization codes you code flows you",
    "start": "1784120",
    "end": "1789519"
  },
  {
    "text": "can run because a front end typically modern front ends the libraries that use run a flow like this when they bootstrap",
    "start": "1789519",
    "end": "1795440"
  },
  {
    "text": "they don't store stuff permanently they just bootstrap empty run a silent flow",
    "start": "1795440",
    "end": "1800640"
  },
  {
    "text": "obtain tokens and now they're authenticated and that's exactly what we're going to do right here in the second demo we're going to run a new",
    "start": "1800640",
    "end": "1806320"
  },
  {
    "text": "flow we basically set up a Handler to receive the authorization code we're going to use a hidden eye frame to run",
    "start": "1806320",
    "end": "1811440"
  },
  {
    "text": "the flow we extract the authorization code um and we basically um exchange",
    "start": "1811440",
    "end": "1818240"
  },
  {
    "text": "that well we run a new flow where's the",
    "start": "1818240",
    "end": "1823120"
  },
  {
    "text": "highlighter great where is my thingy yes here where's the screen there at the bottom all right we basically um run",
    "start": "1824320",
    "end": "1832039"
  },
  {
    "text": "this code this code will run a silent flow using the existing session of the user with the authorization server it",
    "start": "1832039",
    "end": "1837600"
  },
  {
    "text": "returns an authorization code we extract that code and exchange that code for tokens this set of tokens will be",
    "start": "1837600",
    "end": "1842840"
  },
  {
    "text": "independent from the application so the application is working and our code is working two sets of tokens no overlap no",
    "start": "1842840",
    "end": "1849159"
  },
  {
    "text": "refresh token reuse and a massive massive problem in practice all right",
    "start": "1849159",
    "end": "1854360"
  },
  {
    "text": "let's see that one in action same application same setup except that",
    "start": "1854360",
    "end": "1860000"
  },
  {
    "text": "we need a new malicious",
    "start": "1860000",
    "end": "1863880"
  },
  {
    "text": "server there we go um what has changed well the attack code has changed so this",
    "start": "1865399",
    "end": "1872720"
  },
  {
    "text": "is my new malicious server the attack code is now a bit more elaborate um there's two two ways to execute this you",
    "start": "1872720",
    "end": "1879240"
  },
  {
    "text": "can um basically steal it using web messaging or you can steal it from the URL um both work let's run the first one",
    "start": "1879240",
    "end": "1887600"
  },
  {
    "text": "because why not and we basically wait 5 Seconds to launch this attack it will run a new flow in an if frame you can",
    "start": "1887600",
    "end": "1894039"
  },
  {
    "text": "see here we create an iframe we navigate it through the URL to launch uh the silent flow and we um then handle the",
    "start": "1894039",
    "end": "1902120"
  },
  {
    "text": "authorization code and send it off to our server all right let's take a look at our server here that's running that's",
    "start": "1902120",
    "end": "1909639"
  },
  {
    "text": "good we can go here to the app. rest.com that's good let's log out for good",
    "start": "1909639",
    "end": "1916679"
  },
  {
    "text": "measure and log in again again otherwise it uses the old refresh token it still has lying around and that",
    "start": "1916679",
    "end": "1922519"
  },
  {
    "text": "one has been revoked so it fails just so you know I'm not cheating here all right so the app is running we",
    "start": "1922519",
    "end": "1930399"
  },
  {
    "text": "have our new tokens in a second in the mean time I'm going to copy there we go the payload is the same as",
    "start": "1930399",
    "end": "1938120"
  },
  {
    "text": "before except that we now have modified attack. JS copy and let's base this one",
    "start": "1938120",
    "end": "1943799"
  },
  {
    "text": "in here boom there we go 5 seconds and on the left you should",
    "start": "1943799",
    "end": "1949639"
  },
  {
    "text": "see the authorization code coming in there was the authorization code on the top line we exchange that code for",
    "start": "1949639",
    "end": "1955200"
  },
  {
    "text": "tokens um I've screwed something up on the right uh because it doesn't work so",
    "start": "1955200",
    "end": "1961600"
  },
  {
    "text": "um the nature of live demos my",
    "start": "1961600",
    "end": "1966720"
  },
  {
    "text": "apologies all right let's see if this one is better",
    "start": "1972480",
    "end": "1977799"
  },
  {
    "text": "otherwise I'm just going to abandon the demo and you assume that it works yes now it works something with a refresh token not",
    "start": "1980080",
    "end": "1987039"
  },
  {
    "text": "sure what um but in essence um we have refresh tokens in the client and refresh tokens uh on our attacker's side and",
    "start": "1987039",
    "end": "1994519"
  },
  {
    "text": "they both work independently as we go on and this is basically a problem that we can't recover from because you can focus",
    "start": "1994519",
    "end": "2002880"
  },
  {
    "text": "all you want on protecting your tokens in the application I should kill this in protect the tokens in your application",
    "start": "2002880",
    "end": "2009080"
  },
  {
    "text": "but this shows you that there's no point in doing so because even if you manage",
    "start": "2009080",
    "end": "2014480"
  },
  {
    "text": "to fully hide the tokens in your application theer can always get fresh",
    "start": "2014480",
    "end": "2020000"
  },
  {
    "text": "ones even if you build like a fortress like the super most securest application ever where you can never exfiltrate any",
    "start": "2020000",
    "end": "2026399"
  },
  {
    "text": "token the teer just runs an if frame extracts the authorization code and runs off it doesn't give a crap about your",
    "start": "2026399",
    "end": "2031799"
  },
  {
    "text": "application it doesn't hinder the attacker in any way and that is a very very big problem and you can try",
    "start": "2031799",
    "end": "2037840"
  },
  {
    "text": "additional security measures like deep up and so on and so on it's not going to work because the attacker can do all of the same things and that's a very",
    "start": "2037840",
    "end": "2044320"
  },
  {
    "text": "important thing to remember malicious JavaScript code can do anything that you as a frontend developer can do if you're",
    "start": "2044320",
    "end": "2050118"
  },
  {
    "text": "building a front end you're like ah I can do this super smart thing the attacker can do the same thing all right",
    "start": "2050119",
    "end": "2055919"
  },
  {
    "text": "and the conclusion here is and that's a conclusion that's very unpopular with frontend developers is telling them that",
    "start": "2055919",
    "end": "2061480"
  },
  {
    "text": "they can't secure this trust me since I've became a co- aitor there's a lot of emails coming in like yeah but you can",
    "start": "2061480",
    "end": "2067040"
  },
  {
    "text": "solve it with this is like no because of this reason and there's like this whole back and forth going on about why that",
    "start": "2067040",
    "end": "2074000"
  },
  {
    "text": "magical solution is unfortunately not going to solve things and that's a very very unfortunate and unconvenient Truth",
    "start": "2074000",
    "end": "2082560"
  },
  {
    "text": "trust me I've told a lot of developers like yeah you can't do this and the first direction is like yeah but and then it takes a lot of convincing to get",
    "start": "2082560",
    "end": "2089320"
  },
  {
    "text": "to the point like oh yeah okay maybe maybe you can't so what does this mean concretely this means that there's a",
    "start": "2089320",
    "end": "2094800"
  },
  {
    "text": "couple of threats to frontend O out clients and that's new stuff from the spec first threat is stealing tokens",
    "start": "2094800",
    "end": "2102040"
  },
  {
    "text": "right single execution token theft that's the translated to the 12-year-old script Kitty like going in stealing",
    "start": "2102040",
    "end": "2107720"
  },
  {
    "text": "tokens and moving out and doing something with those tokens all right can happen with access tokens Can Happen",
    "start": "2107720",
    "end": "2112839"
  },
  {
    "text": "with refresh tokens and you you can limit the duration of the attack um a bit and so on and so on that's a very",
    "start": "2112839",
    "end": "2119640"
  },
  {
    "text": "simple threat scenario but it used to be the main one in that spec what else do you have continuous token theft or",
    "start": "2119640",
    "end": "2125400"
  },
  {
    "text": "persistent token theft basically the attacker stealing tokens and always stealing the latest version of The Tokens which is already a problem",
    "start": "2125400",
    "end": "2132880"
  },
  {
    "text": "because even if the attacker wouldn't be able to obtain a refresh token if they can always steal the latest version of",
    "start": "2132880",
    "end": "2138040"
  },
  {
    "text": "your access token you're still in trouble right which basically means that the",
    "start": "2138040",
    "end": "2143520"
  },
  {
    "text": "attacker as long as you're online can steal your latest access token and use that token that's not good third attack",
    "start": "2143520",
    "end": "2149800"
  },
  {
    "text": "Factor application acquisition and extraction of new tokens that's basically running the new",
    "start": "2149800",
    "end": "2155760"
  },
  {
    "text": "flow and obtaining those Tok tokens and using them because that's basically circumvents a lot of the security",
    "start": "2155760",
    "end": "2161920"
  },
  {
    "text": "measures that are in place or are recommended for front-end clients and and the fourth one is a nasty one proing",
    "start": "2161920",
    "end": "2168359"
  },
  {
    "text": "requests via the users browser this is basically client hijacking right the",
    "start": "2168359",
    "end": "2174000"
  },
  {
    "text": "malicious code in the front end can send any request from within the user browser",
    "start": "2174000",
    "end": "2179040"
  },
  {
    "text": "it can call the API with an exess token it can do anything we want and that one brings us back to the image with the",
    "start": "2179040",
    "end": "2186079"
  },
  {
    "text": "dinosaur is the same one we had with our old server side applications right we can hide a cookie there it actually does",
    "start": "2186079",
    "end": "2193680"
  },
  {
    "text": "work but the attacker can still send requests that will use that same cookie to the back end and go can do whatever",
    "start": "2193680",
    "end": "2200240"
  },
  {
    "text": "they want client hijacking to be honest that's the Baseline we can never solve client hijacking that's just the nature",
    "start": "2200240",
    "end": "2206359"
  },
  {
    "text": "of cross- scripting that's the nature of the Beast now this slide here if you go",
    "start": "2206359",
    "end": "2212440"
  },
  {
    "text": "look at the spec the pattern for doing o directly in the front end has all of these listed as relevant",
    "start": "2212440",
    "end": "2219599"
  },
  {
    "text": "threats what we've basically done here very dramatic image thank you chat gbt",
    "start": "2219599",
    "end": "2225000"
  },
  {
    "text": "what we have basically done here is we've made the situation worse by using o",
    "start": "2225000",
    "end": "2230400"
  },
  {
    "text": "out that's that's not good by the way we had our front end and if we would have used a session cookie with the API",
    "start": "2230400",
    "end": "2238160"
  },
  {
    "text": "things would have been okayish still a risk of cross scripting but by adding",
    "start": "2238160",
    "end": "2243319"
  },
  {
    "text": "oad into it we made it worse we turned an online attack into an offline attack",
    "start": "2243319",
    "end": "2249400"
  },
  {
    "text": "with a lot more Privileges and that's not good and that's really not good and that's the last of the",
    "start": "2249400",
    "end": "2255560"
  },
  {
    "text": "depressing stuff like we've reached the the bottom rock bottom here Rock Bottom is this light hence the the very",
    "start": "2255560",
    "end": "2262000"
  },
  {
    "text": "dramatic like oh my God why um that's Rock Bottom so let's let's move out let's I have 20 minutes I think to dig",
    "start": "2262000",
    "end": "2269119"
  },
  {
    "text": "myself out of this hole so let's let's do that all right traditional web apps are more",
    "start": "2269119",
    "end": "2276480"
  },
  {
    "text": "secure than o and front contents okay what about oout in",
    "start": "2276480",
    "end": "2282520"
  },
  {
    "text": "backends right remember when I said that the original oout spec is doing or is heavily focused on o out in backend",
    "start": "2282520",
    "end": "2289040"
  },
  {
    "text": "clients well if we look at o out in backend clients these risks are not there which",
    "start": "2289040",
    "end": "2295839"
  },
  {
    "text": "is like what well single execution token theft or persistent token theft from the",
    "start": "2295839",
    "end": "2300880"
  },
  {
    "text": "browser I'm not talking about somebody compromising the back end and stealing your stuff there that's out of scope we're talking about front end clients",
    "start": "2300880",
    "end": "2307640"
  },
  {
    "text": "from the browser there's no way to access server side store data you can't execute JavaScript in the browser and",
    "start": "2307640",
    "end": "2313400"
  },
  {
    "text": "magically get access to an access token or a refresh token stored on the backend server well if if that's possible you",
    "start": "2313400",
    "end": "2320040"
  },
  {
    "text": "have other issues you shouldn't Focus shouldn't be focused on this one but focused on solving that issue because that is a bit more important but backend",
    "start": "2320040",
    "end": "2326800"
  },
  {
    "text": "o clients they don't leak tokens to the insecure front channel to the browser there's no way to do that there's also",
    "start": "2326800",
    "end": "2333480"
  },
  {
    "text": "no way to run a new flow and impersonate the backend C client to obtain tokens",
    "start": "2333480",
    "end": "2338680"
  },
  {
    "text": "because in one of the steps the backend client is a confidential client has to authenticate at some point when the the",
    "start": "2338680",
    "end": "2345920"
  },
  {
    "text": "backend o client goes back to the authorization server like hey can you exchange this code for tokens the authorization server is like only if you",
    "start": "2345920",
    "end": "2352520"
  },
  {
    "text": "authenticate fellow what's your client ID and client secret or key based authentication and only then will the",
    "start": "2352520",
    "end": "2358920"
  },
  {
    "text": "code be exchanged so the AA can still seal the authorization code and te would still be able to steal the authorization",
    "start": "2358920",
    "end": "2365040"
  },
  {
    "text": "code but they would not be able to exchange it for tokens because they can't authenticate as the backend",
    "start": "2365040",
    "end": "2371119"
  },
  {
    "text": "client all right what about the last one well we already know the answer to that one that was the Baseline we can't fix",
    "start": "2371119",
    "end": "2377720"
  },
  {
    "text": "that one and we can't fix that one here your techer controlling pages in the browser can still send requests to the backend can still make the back and do",
    "start": "2377720",
    "end": "2384200"
  },
  {
    "text": "things in name of the browser that's client hijacking and we can't really solve that",
    "start": "2384200",
    "end": "2389440"
  },
  {
    "text": "problem all right so based on this slide we can conclude that o in front ends",
    "start": "2389440",
    "end": "2395040"
  },
  {
    "text": "increases the attack surface by moving all out into our single page application which seemed",
    "start": "2395040",
    "end": "2402280"
  },
  {
    "text": "convenient we have increased the attack service we have made the security significantly",
    "start": "2402280",
    "end": "2407800"
  },
  {
    "text": "worse that's how you sell what I'm going to talk about next to your boss by the way we made it worse by doing this well",
    "start": "2407800",
    "end": "2415280"
  },
  {
    "text": "the other guys made it worse by doing this that's how you really sell this not me no the other guys made it worse by doing this I told them not but nobody",
    "start": "2415280",
    "end": "2422160"
  },
  {
    "text": "listens to me now now you have some proof flip said so you can use that as an argument by the way I fully approve",
    "start": "2422160",
    "end": "2427640"
  },
  {
    "text": "that Philip said so that would be perfectly fine ideally your boss says like yeah let's bring him in and see if",
    "start": "2427640",
    "end": "2432760"
  },
  {
    "text": "he really says that and then we both win so that would be good so the question becomes can we have",
    "start": "2432760",
    "end": "2439480"
  },
  {
    "text": "the security of backend oout clients in our front ends yes we can that's the whole point of the talk",
    "start": "2439480",
    "end": "2446880"
  },
  {
    "text": "and the spec we can by building a back end for front end by extending our front end with a",
    "start": "2446880",
    "end": "2453119"
  },
  {
    "text": "back end this is a message that goes really well with front end developers like you need a back end no we don't yes you do no we don't and",
    "start": "2453119",
    "end": "2459680"
  },
  {
    "text": "then but yeah you need a back end so what's the the previous scenario is a front end talking directly to the",
    "start": "2459680",
    "end": "2465359"
  },
  {
    "text": "authorization server there's no client authentication here I'm going to stop doing that",
    "start": "2465359",
    "end": "2470760"
  },
  {
    "text": "there's no client authentication here um that's the whole issue because if the attacker steals an alization code they",
    "start": "2470760",
    "end": "2476040"
  },
  {
    "text": "can abuse it all right what are we going to do we're going to extend this pattern with a BFF and a BFF is a super dumb",
    "start": "2476040",
    "end": "2484359"
  },
  {
    "text": "backend component you don't think about this as a backend you just think about this as a module of",
    "start": "2484359",
    "end": "2490359"
  },
  {
    "text": "the front end that happens to run on the back end that would be a better way of looking at this it's not an API it's not",
    "start": "2490359",
    "end": "2496160"
  },
  {
    "text": "a backend system there's no logic in there except for some very generic things and that",
    "start": "2496160",
    "end": "2502079"
  },
  {
    "text": "BFF will run o out with the authorization server that's what the BFF does all right it's a confidential",
    "start": "2502079",
    "end": "2509520"
  },
  {
    "text": "client let's see if I can get my highlighter here yes here this is a confidential",
    "start": "2509520",
    "end": "2515560"
  },
  {
    "text": "client using client authentication and so on to talk with the authorization server token management is now a backend",
    "start": "2515560",
    "end": "2522119"
  },
  {
    "text": "responsibility with the front end we use cookies cookies have a very bad reputation but in this case cookies are",
    "start": "2522119",
    "end": "2528520"
  },
  {
    "text": "the perfect way to keep track of State between the browser and the API works like a charm designed to work with a web",
    "start": "2528520",
    "end": "2534960"
  },
  {
    "text": "and if you apply the right security properties which I'll talk about in a minute these are actually good and what",
    "start": "2534960",
    "end": "2540880"
  },
  {
    "text": "do we do when we call an API well the front end doesn't call apis anymore the front end calls apis on the BFF like SL",
    "start": "2540880",
    "end": "2547760"
  },
  {
    "text": "BFF reviews and the BFF is like H the reviews endpoint of course yeah I know",
    "start": "2547760",
    "end": "2553319"
  },
  {
    "text": "about that it's going to take your cookie use your cookie to fetch your tokens attach an access token to that",
    "start": "2553319",
    "end": "2558880"
  },
  {
    "text": "request and send it to the actual API handling reviews and that's how BFF",
    "start": "2558880",
    "end": "2563920"
  },
  {
    "text": "works all of these building blocks of the BFF are super generic and super",
    "start": "2563920",
    "end": "2569480"
  },
  {
    "text": "simple all right so what does that look like in the elaborate flow well the flow",
    "start": "2569480",
    "end": "2575880"
  },
  {
    "text": "still goes through the front the user wants to log in or do something and the front end will basically tell the BFF",
    "start": "2575880",
    "end": "2582599"
  },
  {
    "text": "the front end no longer starts a flow but the BFF does so we have to tell the BFF there's a login endpoint we tell the",
    "start": "2582599",
    "end": "2587880"
  },
  {
    "text": "BFF like please start an O out flow or o plus oidc whatever and the BF is like",
    "start": "2587880",
    "end": "2593559"
  },
  {
    "text": "yeah I can do that and it's going to be a redirect it's going to redirect the browser like yeah I need you to go to the authorization server please and the",
    "start": "2593559",
    "end": "2599400"
  },
  {
    "text": "browser will follow that that point the front end is no longer in the loop just the browser and the user authenticates",
    "start": "2599400",
    "end": "2605800"
  },
  {
    "text": "and all of that stuff and in the the end we get an authorization code which goes free out the browser to the BFF there's",
    "start": "2605800",
    "end": "2611079"
  },
  {
    "text": "an endpoint on the BFF redirect or call back or whatever and that's the authorization code in Step seven the BFF",
    "start": "2611079",
    "end": "2619040"
  },
  {
    "text": "extract the authorization code from the URL and we now exchange that code for tokens and it will go to the",
    "start": "2619040",
    "end": "2624440"
  },
  {
    "text": "authorization server with client authentication be like hey I got this temporary value the authorization code what does it mean and the authorization",
    "start": "2624440",
    "end": "2630880"
  },
  {
    "text": "server like oh yeah that's for Philip here an access token a refresh token and whatever you need maybe an identity token whatever",
    "start": "2630880",
    "end": "2637680"
  },
  {
    "text": "the BFF can parse the identity token there's no authentication because there's no user database there's nothing there it's",
    "start": "2637680",
    "end": "2643720"
  },
  {
    "text": "just an empty shell um so what it typically does is it stores the tokens",
    "start": "2643720",
    "end": "2648839"
  },
  {
    "text": "or Associates the tokens with a session and then it tells the front like yeah yeah everything is good and the front",
    "start": "2648839",
    "end": "2654920"
  },
  {
    "text": "end at that point will bootstrap again the front end will reload the cookie is set the front end calls the BFF like hey",
    "start": "2654920",
    "end": "2660040"
  },
  {
    "text": "do we have an active session and we like yes we do because of the cookie and it looks up the user's info and it Returns",
    "start": "2660040",
    "end": "2665960"
  },
  {
    "text": "the user info to the front end allowing the front to say welcome Philip",
    "start": "2665960",
    "end": "2673280"
  },
  {
    "text": "awesome that's what the BFF does when we call an API the front and we call an endpoint on the BFF with the cookie the",
    "start": "2674880",
    "end": "2681200"
  },
  {
    "text": "BFF will use the cookie look up like oh yeah this is for uh this user we have an access token take the access token",
    "start": "2681200",
    "end": "2686520"
  },
  {
    "text": "forward the call to the API in 14 and the API will process the request just",
    "start": "2686520",
    "end": "2691599"
  },
  {
    "text": "like before and a response goes back and everybody's happy that's what a BFF does",
    "start": "2691599",
    "end": "2697440"
  },
  {
    "text": "all right if you look at our components right what has changed here well for the",
    "start": "2697440",
    "end": "2705240"
  },
  {
    "text": "front end developer actually I I had this conversation like a couple of weeks",
    "start": "2705240",
    "end": "2710520"
  },
  {
    "text": "ago and the front developer was like yeah we implemented a BFF man my life got a lot easier he said why because you",
    "start": "2710520",
    "end": "2718400"
  },
  {
    "text": "can rip out o out from the front and like this o out Library take it throw it away no longer need it awesome next",
    "start": "2718400",
    "end": "2726200"
  },
  {
    "text": "token management there's no tokens the discussion oh where do we store the tokens do we use local storage or session storage or U maybe a web",
    "start": "2726200",
    "end": "2733480"
  },
  {
    "text": "worker go away we don't care cookies HTTP only and so on so cookies done",
    "start": "2733480",
    "end": "2738960"
  },
  {
    "text": "calling apis well that component is kind of replaced with calling the BFF so uh you still call something you don't have",
    "start": "2738960",
    "end": "2744599"
  },
  {
    "text": "to add custom headers the browser will add a cookie for you but you still still call of course API endpoints on the BFF",
    "start": "2744599",
    "end": "2750960"
  },
  {
    "text": "oart has moved to the BFF oart client we also do token Management on the BFF and session management and then we proxy",
    "start": "2750960",
    "end": "2758079"
  },
  {
    "text": "request from the front end to the actual apis all of these building blocks from the BFF are core building blocks of the",
    "start": "2758079",
    "end": "2766040"
  },
  {
    "text": "web o clients there's like 15,000 And1 libraries out there that handle that for",
    "start": "2766040",
    "end": "2771200"
  },
  {
    "text": "you just use one of them and they will handle the whole o outf flow token managements the library typically",
    "start": "2771200",
    "end": "2776480"
  },
  {
    "text": "handles it as well session managements you can find plenty of session management libraries like setting a cookie and so on perfectly available and",
    "start": "2776480",
    "end": "2782880"
  },
  {
    "text": "then proxy and calls there's middleware enough for all languages to implement some proxy type activity right you have",
    "start": "2782880",
    "end": "2789000"
  },
  {
    "text": "urp in net and you have proxy middleware in Nos and you have something in Java and something in Python and something",
    "start": "2789000",
    "end": "2794119"
  },
  {
    "text": "God knows what for God no language but it's going to be there at some point all right sounds great right for security",
    "start": "2794119",
    "end": "2802520"
  },
  {
    "text": "perspective it's like yeah BFFs but does it require a lot of changes no actually",
    "start": "2802520",
    "end": "2808000"
  },
  {
    "text": "it doesn't so in practice the API doesn't change why your",
    "start": "2808000",
    "end": "2814119"
  },
  {
    "text": "API received a call with an exess token guess what your API receives a call with an access token zero changes to the API",
    "start": "2814119",
    "end": "2819960"
  },
  {
    "text": "awesome authorization server configuration change like you transform your client from a public client with no",
    "start": "2819960",
    "end": "2826079"
  },
  {
    "text": "secret to an confidential client with a secret and that's it standard functionality supported by any",
    "start": "2826079",
    "end": "2831520"
  },
  {
    "text": "authorization server out there the front end rip out o out stuff and you're",
    "start": "2831520",
    "end": "2838240"
  },
  {
    "text": "good okay no you have to call one additional endpoint on bootstrap like check session it's a simple API call",
    "start": "2838240",
    "end": "2844960"
  },
  {
    "text": "with a response you can deal with that in 10 minutes all right you can even ask such GPT to generate that code for you",
    "start": "2844960",
    "end": "2851200"
  },
  {
    "text": "it should probably do a good job always be careful probably is the keyword here and then the BFF yes the BFF is a new",
    "start": "2851200",
    "end": "2858079"
  },
  {
    "text": "component it's something you have to deploy and configure however if you want to use a BFF and you want to build your",
    "start": "2858079",
    "end": "2863960"
  },
  {
    "text": "own because good stuff is built inh house that's a sarcastic common by the",
    "start": "2863960",
    "end": "2870000"
  },
  {
    "text": "way it can be but it doesn't have to be but if you want to build your own you can build a BFF once and everything else",
    "start": "2870000",
    "end": "2877079"
  },
  {
    "text": "is configurable you give it a client ID a client secret the issuer URI of your",
    "start": "2877079",
    "end": "2882319"
  },
  {
    "text": "authorization server and a mapping of endpoints here API endpoints here to",
    "start": "2882319",
    "end": "2888680"
  },
  {
    "text": "apis that's all you need everything else is configurable so once you build it once you've put all building blocks",
    "start": "2888680",
    "end": "2894599"
  },
  {
    "text": "together glue them together you can reuse that BFF across your entire organization for all your front ends you",
    "start": "2894599",
    "end": "2900359"
  },
  {
    "text": "can even have one BFF sering multiple front LS why not you should be careful because that's",
    "start": "2900359",
    "end": "2907319"
  },
  {
    "text": "a discussion I've had as well to understand that the BFF belongs to the front",
    "start": "2907319",
    "end": "2913480"
  },
  {
    "text": "end you cannot move the BFF towards the API by putting that in an API Gateway",
    "start": "2913480",
    "end": "2919000"
  },
  {
    "text": "because that's going to create confusion the BFF is not an API level component it's a front end level component meaning",
    "start": "2919000",
    "end": "2926079"
  },
  {
    "text": "that per front end you have a BFF if you're building like a suite of applications you have a calendar and you",
    "start": "2926079",
    "end": "2931119"
  },
  {
    "text": "have a a Notes app and you have an email app and you have a forum app and so on each of these would have a different",
    "start": "2931119",
    "end": "2937000"
  },
  {
    "text": "client ID on the authorization server so each of these would have a BFF of course you can configure one giant if you have",
    "start": "2937000",
    "end": "2944280"
  },
  {
    "text": "like the super BFF you can configure it to support four different clients with four different configurations sure but",
    "start": "2944280",
    "end": "2949839"
  },
  {
    "text": "that's how you keep that thing straight it's not per API it's per front end every front end that would have a client",
    "start": "2949839",
    "end": "2955280"
  },
  {
    "text": "ID would have a BFF configured with those client ID and secret as well all",
    "start": "2955280",
    "end": "2960319"
  },
  {
    "text": "right good the",
    "start": "2960319",
    "end": "2965720"
  },
  {
    "text": "cookie is used to keep track of the user's tokens cookies have this really bad",
    "start": "2965720",
    "end": "2971200"
  },
  {
    "text": "reputation which is used to be true for a long time ago but today cookies are actually not that bad and for all the",
    "start": "2971200",
    "end": "2977400"
  },
  {
    "text": "people thinking like yeah man I hate cookies I'm using tokens because yeah that's what we do we use tokens and an",
    "start": "2977400",
    "end": "2982839"
  },
  {
    "text": "authorization header guess what the authorization server uses with the browser to keep track of who the user is to do single sign on cookies so cookies",
    "start": "2982839",
    "end": "2990000"
  },
  {
    "text": "are always there it's the only thing that works really well on the web by the way um in this case we use a cookie to",
    "start": "2990000",
    "end": "2995079"
  },
  {
    "text": "keep track of the users session that can be a client side session or a server side session you can",
    "start": "2995079",
    "end": "3000920"
  },
  {
    "text": "keep State on a server like traditional Java sessions or PHP sessions why not or",
    "start": "3000920",
    "end": "3007240"
  },
  {
    "text": "you can choose to push all of the state to the client you can put all of the token stuff in a cookie",
    "start": "3007240",
    "end": "3014200"
  },
  {
    "text": "preferably wow they're slacking off next door like 10 minutes early like's yeah let's stop here or maybe they leave time",
    "start": "3014200",
    "end": "3021760"
  },
  {
    "text": "for questions which I don't do but uh whatever with me you just get more of me and we can talk later if you have",
    "start": "3021760",
    "end": "3027440"
  },
  {
    "text": "questions um what we're talking about here is you can put all of the data in the cookie and ship it to the browser as like one big cookie in that case it's",
    "start": "3027440",
    "end": "3035040"
  },
  {
    "text": "recommended to encrypt that cookie it's not mandatory it doesn't really improve the properties of the BFF the BFF stays",
    "start": "3035040",
    "end": "3040559"
  },
  {
    "text": "secure but it prevents um info stealing malware from going through your hard disk and stealing cookies from the",
    "start": "3040559",
    "end": "3046400"
  },
  {
    "text": "browser and shipping them off that would stop some sort of attack there U that's what I wanted to say here how do you",
    "start": "3046400",
    "end": "3052359"
  },
  {
    "text": "configure that cookie well you add a whole bunch of uh flags and attributes there you add the secure flag the HTP",
    "start": "3052359",
    "end": "3058040"
  },
  {
    "text": "only flag the same size strict flag and you add the host prefix as well all",
    "start": "3058040",
    "end": "3063240"
  },
  {
    "text": "right I'm not going to talk about what this means um they're listed in the spec if you want to read that it's a good way",
    "start": "3063240",
    "end": "3068440"
  },
  {
    "text": "to get you to the spec or you can follow one of my security workshops and I'll talk about the meaning of these things",
    "start": "3068440",
    "end": "3074119"
  },
  {
    "text": "as well all right so where do we get that BFF well you can build one it's a",
    "start": "3074119",
    "end": "3079720"
  },
  {
    "text": "it's a fun exercise until you get to the dirty details and it's like why did we",
    "start": "3079720",
    "end": "3084960"
  },
  {
    "text": "try to build this ourselves you can also use vendor supplied BFFs um or proof of Concepts here's a proof of concept in",
    "start": "3084960",
    "end": "3091119"
  },
  {
    "text": "net using yarp um it's from Manford Styer if you know him he builds um angular stuff um this is a good starting",
    "start": "3091119",
    "end": "3098599"
  },
  {
    "text": "point to get some ideas I don't think it's production ready but what the hell you can also find some other",
    "start": "3098599",
    "end": "3103799"
  },
  {
    "text": "implementation patterns like token Handler it's basically a BFF without the name bff or you can talk to the guys",
    "start": "3103799",
    "end": "3109440"
  },
  {
    "text": "outside um in the dend boot because they actually have a full featured BFF they're one of the first to do this",
    "start": "3109440",
    "end": "3115640"
  },
  {
    "text": "right because I've been talking to Dominic quite a bit about this issue as well and they've been doing this for a long time as well a lot of the customers",
    "start": "3115640",
    "end": "3122000"
  },
  {
    "text": "use BFFs I'm not associated with them so um just go talk to them and see if you can use their BFF library for your",
    "start": "3122000",
    "end": "3128640"
  },
  {
    "text": "applications as well all right you'll find BFFs out there there's it's",
    "start": "3128640",
    "end": "3133680"
  },
  {
    "text": "becoming a bit more popular I think the spec has helped uh the awareness has helped so you'll no doubt see a lot more",
    "start": "3133680",
    "end": "3139359"
  },
  {
    "text": "BFFs pop up in practice as well all right if you want to build your own I",
    "start": "3139359",
    "end": "3144799"
  },
  {
    "text": "strongly recommend to scroll through the video of previous conferences because there has been talks about how BFFs make things insecure as well because if you",
    "start": "3144799",
    "end": "3151640"
  },
  {
    "text": "do it wrong there might be um problems with bfff and open redirects and stuff like that so you definitely want to look",
    "start": "3151640",
    "end": "3157079"
  },
  {
    "text": "into those as well brings us back to the threats to front ends with the BFF and",
    "start": "3157079",
    "end": "3163680"
  },
  {
    "text": "this slide looks a lot better what we have gained here is we have made our BFF",
    "start": "3163680",
    "end": "3168839"
  },
  {
    "text": "is now a confidential backend o client meaning that the attacks go away there's",
    "start": "3168839",
    "end": "3174079"
  },
  {
    "text": "no token theft the attacker cannot read a cookie with the tokens the attacker cannot read tokens if are stored on the",
    "start": "3174079",
    "end": "3179200"
  },
  {
    "text": "server and the attacker cannot abuse them in that way that's good we can also",
    "start": "3179200",
    "end": "3185640"
  },
  {
    "text": "avoid the new flow stuff as in the attacker can maybe steal an authorization code if they control the",
    "start": "3185640",
    "end": "3191160"
  },
  {
    "text": "front end that's still possible but the attacker cannot exchange the authorization code",
    "start": "3191160",
    "end": "3197079"
  },
  {
    "text": "for tokens without the client credentials of the BFF if the attacker gets those you're screwed it's done you",
    "start": "3197079",
    "end": "3204040"
  },
  {
    "text": "messed up that's basically the conclusion all right right the bottom one client hijacking still there we",
    "start": "3204040",
    "end": "3211520"
  },
  {
    "text": "can't fix that it's been there since 2003 if I'm not mistaken when cross scripting was invented and it's still",
    "start": "3211520",
    "end": "3218319"
  },
  {
    "text": "there today because there's simply nothing we can do to stop it except get rid of malicious JavaScript which is the",
    "start": "3218319",
    "end": "3224839"
  },
  {
    "text": "ultimate goal of course like get rid of malicious JavaScript but um it's going to be a very very hard and long road and",
    "start": "3224839",
    "end": "3231200"
  },
  {
    "text": "I'm fairly confident that if we keep the same model of mixing HTML and JavaScript and data together that will still have",
    "start": "3231200",
    "end": "3237280"
  },
  {
    "text": "cross scripting in 10 years even with all our best efforts it's going to be a lot better hopefully but it's never",
    "start": "3237280",
    "end": "3242559"
  },
  {
    "text": "going to go away it's inherent to how we build web applications all",
    "start": "3242559",
    "end": "3249838"
  },
  {
    "text": "right with that said the BFF does make things",
    "start": "3250400",
    "end": "3255920"
  },
  {
    "text": "better because before the attacker had an access token and they could use that access token on every API endpoint that",
    "start": "3255920",
    "end": "3262880"
  },
  {
    "text": "would accept it now the attacker can send request true our BFF and that means",
    "start": "3262880",
    "end": "3268440"
  },
  {
    "text": "that we can kind of limit to what the the attacker can reach so even if this",
    "start": "3268440",
    "end": "3273760"
  },
  {
    "text": "API has 17 endpoints that would accept the access token but the front only needs seven that means we can hide 10",
    "start": "3273760",
    "end": "3280920"
  },
  {
    "text": "endpoints make 10 endpoints unreachable that means we can very specifically expose the end points that the front",
    "start": "3280920",
    "end": "3287000"
  },
  {
    "text": "that needs and reduce the attack surface for the attacker that's",
    "start": "3287000",
    "end": "3293119"
  },
  {
    "text": "good you don't have to do this as a BFF but you can it's a good practice additionally also",
    "start": "3293119",
    "end": "3300040"
  },
  {
    "text": "optional but Additionally the BFF sees all of the traffic from front ends the BFF could be a good place to implement",
    "start": "3300040",
    "end": "3306880"
  },
  {
    "text": "things like uh rate limiting or anomaly detection if a front end sends you like maybe uh 10 requests per minute to read",
    "start": "3306880",
    "end": "3314359"
  },
  {
    "text": "documents maybe you should block something like thousand requests per minute like yeah maybe you're not a",
    "start": "3314359",
    "end": "3319720"
  },
  {
    "text": "legitimate front then like maybe you go away and you block that or you raise alerts or so on and so on ah pressure uh",
    "start": "3319720",
    "end": "3326319"
  },
  {
    "text": "I'm almost done so no worries you're thinking like oh no the coffee line is going to be so long my",
    "start": "3326319",
    "end": "3331720"
  },
  {
    "text": "apologies for that so the BFF puts itself in a position where you can actually Implement additional security",
    "start": "3331720",
    "end": "3337119"
  },
  {
    "text": "but it's completely optional at that case your BFF becomes very front end specific very use case specific um a",
    "start": "3337119",
    "end": "3343599"
  },
  {
    "text": "normal regular BFF is as dumb as a bag of rocks if you want to call it that it's basically a very simple component",
    "start": "3343599",
    "end": "3349880"
  },
  {
    "text": "without any logic it just as the O stuff session management and proxying all right",
    "start": "3349880",
    "end": "3356520"
  },
  {
    "text": "BFFs significantly increase security to be honest it's the only valid option for",
    "start": "3356520",
    "end": "3362599"
  },
  {
    "text": "anything security sensitive I don't care if you think your code is object of",
    "start": "3362599",
    "end": "3368200"
  },
  {
    "text": "crossy scripting um it may be now maybe you did a very good job but it's not",
    "start": "3368200",
    "end": "3373280"
  },
  {
    "text": "history teaches it's not going to stay that way history shows us that at some point there's going to be a problem a",
    "start": "3373280",
    "end": "3379319"
  },
  {
    "text": "BFF eliminates a whole range of these issues it gives you security it makes",
    "start": "3379319",
    "end": "3384880"
  },
  {
    "text": "things a lot better and I strongly recommend or urge you to adopt the BFF",
    "start": "3384880",
    "end": "3390640"
  },
  {
    "text": "pattern for your applications I also invite you to read a spec I spent a lot of effort on",
    "start": "3390640",
    "end": "3398920"
  },
  {
    "text": "it not that that's a good reason but sure I think it's a really good document",
    "start": "3398920",
    "end": "3405440"
  },
  {
    "text": "other people have acknowledged that as well so it's not just my opinion all it's all here say but still",
    "start": "3405440",
    "end": "3411359"
  },
  {
    "text": "but it it gives you a clear overview of the threats if you're not convinced good",
    "start": "3411359",
    "end": "3416599"
  },
  {
    "text": "for you if you're like yeah dude what the no come on whatever I'm going to do OD in the front end be my guest I don't",
    "start": "3416599",
    "end": "3424640"
  },
  {
    "text": "recommend it but who am I to prevent you from doing that spec gives you a clear overview of the risks in doing so if you",
    "start": "3424640",
    "end": "3432000"
  },
  {
    "text": "consider these risks to be acceptable if you're like me whatever then sure why not it's just that you can now make an",
    "start": "3432000",
    "end": "3438599"
  },
  {
    "text": "informed decision instead of having to read through the lines or behind the lines and find the actual context it's",
    "start": "3438599",
    "end": "3444319"
  },
  {
    "text": "all in there um I strongly recommend you read it um it's almost finalized by the way this is like a a draft from a couple",
    "start": "3444319",
    "end": "3451160"
  },
  {
    "text": "of days ago to fix some minor issues it's in like the final last call stages um at the ITF I have no idea what that",
    "start": "3451160",
    "end": "3457119"
  },
  {
    "text": "means because it's my first time um so probably in three to four months or something we will have an actual",
    "start": "3457119",
    "end": "3462280"
  },
  {
    "text": "finalized RFC U which will be really cool to see as well all right good key",
    "start": "3462280",
    "end": "3471119"
  },
  {
    "text": "takeaways using o out directly in a browser increases the attack surface",
    "start": "3471119",
    "end": "3477280"
  },
  {
    "text": "you can find this inconvenient you can try to argue that it's not that important but it is the truth so you",
    "start": "3477280",
    "end": "3483720"
  },
  {
    "text": "have to accept it if you want to accept it and consider this to be acceptable for your specific use case then okay",
    "start": "3483720",
    "end": "3490280"
  },
  {
    "text": "good but at least you know what it entails you should use a BFF to simplify",
    "start": "3490280",
    "end": "3496440"
  },
  {
    "text": "the front end and optimize its security a BFF makes the front end actually easier to",
    "start": "3496440",
    "end": "3503680"
  },
  {
    "text": "implement and maintain no more o client libraries no more o stuff to update and so on and so on it's actually a benefit",
    "start": "3503680",
    "end": "3510319"
  },
  {
    "text": "to use a BFF apart from the fact that you have to deploy the BFF of course then a third takeaway is you",
    "start": "3510319",
    "end": "3517720"
  },
  {
    "text": "should heavily invest in Secure coding techniques to avoid crossy scripting",
    "start": "3517720",
    "end": "3523280"
  },
  {
    "text": "because the last attack Factor never goes away once cross that scripting happens yes we have not made it worse",
    "start": "3523280",
    "end": "3530480"
  },
  {
    "text": "than it was 15 years ago but it's still as bad as it was 15 years ago as well",
    "start": "3530480",
    "end": "3536559"
  },
  {
    "text": "so don't mistake these things as solutions for Crosset scripting because it's very much a dangerous problem and",
    "start": "3536559",
    "end": "3543119"
  },
  {
    "text": "you should apply secure coding practices to your front ends as well you should use defense and DEP tools like CSP and",
    "start": "3543119",
    "end": "3549119"
  },
  {
    "text": "you should use Technologies like trusted types to avoid mistakes during development and so on and so on that",
    "start": "3549119",
    "end": "3554599"
  },
  {
    "text": "remains incredibly important all right final Shameless plug I'm doing an O out",
    "start": "3554599",
    "end": "3560599"
  },
  {
    "text": "online o out course if you really want to know a lot more about o out that would be a very good place to do so um",
    "start": "3560599",
    "end": "3566359"
  },
  {
    "text": "it's two days it's four after 4 mornings but uh it's a two-day curriculum where we dive deep into all aspects of oout",
    "start": "3566359",
    "end": "3572680"
  },
  {
    "text": "including front L security BFFs API security and so on and so on so if you're interested in that take a look if",
    "start": "3572680",
    "end": "3578680"
  },
  {
    "text": "you can join there it runs in February somewhere I don't it's in my calendar that's important but I think it's 9 or",
    "start": "3578680",
    "end": "3585599"
  },
  {
    "text": "10 the 9 or the 10th that it starts but I would have to check all right with that I want to thank you for being here",
    "start": "3585599",
    "end": "3593000"
  },
  {
    "text": "I hope you enjoy the rest of the conference if you have any questions we we have exactly 10 seconds no uh you can",
    "start": "3593000",
    "end": "3598400"
  },
  {
    "text": "talk to me afterwards I'm going to be here um in the morning as well so uh just grab me and we'll talk all right",
    "start": "3598400",
    "end": "3605319"
  },
  {
    "text": "thank you very much and enjoy [Applause]",
    "start": "3605319",
    "end": "3609860"
  }
]