[
  {
    "text": "all right good morning everybody first session of the day how are we doing",
    "start": "5040",
    "end": "10559"
  },
  {
    "text": "yeah we all had enough coffee sorry that's such a such a first session thing to say um",
    "start": "10559",
    "end": "17340"
  },
  {
    "text": "anyway wake up all right this is my favorite talk to give okay I",
    "start": "17340",
    "end": "25740"
  },
  {
    "text": "I have a problem um I really like plants and we're going to talk about that but we're also going to talk about Kafka so",
    "start": "25740",
    "end": "32340"
  },
  {
    "text": "buckle up this is going to be fun um I want some interaction I want to know",
    "start": "32340",
    "end": "37559"
  },
  {
    "text": "that you're awake please okay we're all good we're good okay great thank you so much",
    "start": "37559",
    "end": "42960"
  },
  {
    "text": "um so this is a Kafka talk um and there are traditions in the Kafka sphere",
    "start": "42960",
    "end": "48960"
  },
  {
    "text": "with me this is called a streaming selfie um and if I can see everybody it will",
    "start": "48960",
    "end": "54059"
  },
  {
    "text": "turn out okay okay thank you for sitting tight all right",
    "start": "54059",
    "end": "60000"
  },
  {
    "text": "some folks coming in grab a seat all right hello everybody",
    "start": "60000",
    "end": "65580"
  },
  {
    "text": "my name is Danica fine I'm a developer Advocate at confluent and basically my",
    "start": "65580",
    "end": "72000"
  },
  {
    "text": "job is to get everybody excited about Kafka right so um showing people how to adhere to best",
    "start": "72000",
    "end": "77939"
  },
  {
    "text": "practices and also giving you an idea of cool things that you can actually build Okay so",
    "start": "77939",
    "end": "83939"
  },
  {
    "text": "in this talk we're going to be talking about my house plants all right because",
    "start": "83939",
    "end": "88979"
  },
  {
    "text": "I do have a problem this is a small subset of the plants that I have",
    "start": "88979",
    "end": "94979"
  },
  {
    "text": "um it was pretty embarrassing over the pandemic right got a lot of houseplant",
    "start": "94979",
    "end": "100020"
  },
  {
    "text": "how many of you had a house plant problem over the pandemic or at least bought one okay it's considered a",
    "start": "100020",
    "end": "105600"
  },
  {
    "text": "problem if you at least bought one right um yeah I had I had plants before",
    "start": "105600",
    "end": "110640"
  },
  {
    "text": "um but much to my partner's dismay it kind of got it kind of got out of hand in the",
    "start": "110640",
    "end": "116640"
  },
  {
    "text": "middle of it so this wasn't really a problem until we",
    "start": "116640",
    "end": "122220"
  },
  {
    "text": "started going back to real life though right I'm leaving my house okay I'm not working from home 24 7.",
    "start": "122220",
    "end": "128759"
  },
  {
    "text": "um so I would come back home and find something like this all right this is a very dramatic plant okay he's okay",
    "start": "128759",
    "end": "136379"
  },
  {
    "text": "um but this is you come home and you see this you're like I've killed it said",
    "start": "136379",
    "end": "141540"
  },
  {
    "text": "um I forgot I forgot to water it that day usually I have to do the rounds I have like 40 or 50 plants",
    "start": "141540",
    "end": "147239"
  },
  {
    "text": "yeah it's it's a lot I told you um I'm not crazy I promise",
    "start": "147239",
    "end": "154080"
  },
  {
    "text": "um but yeah I have about 40 50 plants and they don't all need to be watered at the same time right so I have to do rounds",
    "start": "154080",
    "end": "160500"
  },
  {
    "text": "like once or twice a day check in on them see if they're all right but you start going into the office right and",
    "start": "160500",
    "end": "167459"
  },
  {
    "text": "suddenly there are more important things my boss wants me to do work okay um so I forget about them right",
    "start": "167459",
    "end": "174780"
  },
  {
    "text": "so I figure all right is there a better way for me to be doing",
    "start": "174780",
    "end": "180239"
  },
  {
    "text": "this instead of running around my house checking on my plants at a you know a couple times a day right obviously there's a better way right I'm I'm an",
    "start": "180239",
    "end": "186480"
  },
  {
    "text": "engineer I've got skill sets right I can I can apply those to my problems all right",
    "start": "186480",
    "end": "193800"
  },
  {
    "text": "um and I know what you're thinking if you have plants maybe you've looked into this there are totally pre-built solutions to help you monitor or even",
    "start": "193800",
    "end": "200280"
  },
  {
    "text": "just water your plants right well that's silly I don't want to use that okay that's the wrong question is there a",
    "start": "200280",
    "end": "205620"
  },
  {
    "text": "more interesting way I'm an engineer right we don't want to just build this you know have a solution we want to",
    "start": "205620",
    "end": "210840"
  },
  {
    "text": "build a more interesting solution okay and in this case you know I've I've been using Kafka for a number of years I'm in",
    "start": "210840",
    "end": "217560"
  },
  {
    "text": "this job where I want to show people how to do cool things with Kafka and I've always wanted an excuse to build out a",
    "start": "217560",
    "end": "222900"
  },
  {
    "text": "hardware project okay this this was my chance this is my time to shine okay so",
    "start": "222900",
    "end": "228480"
  },
  {
    "text": "I figured I'd put together a practical streaming data pipeline build it with Kafka and hopefully get something out of",
    "start": "228480",
    "end": "235560"
  },
  {
    "text": "it right all right so let's talk design okay I needed",
    "start": "235560",
    "end": "241080"
  },
  {
    "text": "something to monitor my plants right that's the most basic requirement that I had in this situation",
    "start": "241080",
    "end": "246780"
  },
  {
    "text": "and so I just I just wanted to do the monitoring I know some of you are thinking okay but what about watering I",
    "start": "246780",
    "end": "252599"
  },
  {
    "text": "rent okay I can't set up a full irrigation system in my rental I could",
    "start": "252599",
    "end": "258780"
  },
  {
    "text": "um my landlords would not be happy though so we're going to take it slow I just want to know when I need to water",
    "start": "258780",
    "end": "264120"
  },
  {
    "text": "my plants okay that's going to solve a lot of my problems all right I won't neglect them as much",
    "start": "264120",
    "end": "269580"
  },
  {
    "text": "so the system I Envision was pretty simple I'm going to place soil moisture sensors in my plants all right you know",
    "start": "269580",
    "end": "275880"
  },
  {
    "text": "capture these take these readings regularly using a Raspberry Pi throw that into Kafka and I'd enriched these readings with",
    "start": "275880",
    "end": "282660"
  },
  {
    "text": "some metadata right I would need to know when these plants like they're they're comfortable moisture thresholds right",
    "start": "282660",
    "end": "288300"
  },
  {
    "text": "when do they actually need to be watered so I'd enrich those readings with that and use it to compute some outlier",
    "start": "288300",
    "end": "293580"
  },
  {
    "text": "readings right but I need to get an alert at the end right ideally on my phone okay that's",
    "start": "293580",
    "end": "301320"
  },
  {
    "text": "always looking at our phones okay yeah I want it in the most convenient way possible and so I've talked about Kaka a",
    "start": "301320",
    "end": "307020"
  },
  {
    "text": "couple times already I mentioned it I want to make sure that we're all on the same page and we understand what Kafka is how many of you have used Kafka",
    "start": "307020",
    "end": "314759"
  },
  {
    "text": "okay how many of you are using it in production that's the that's the real question all right how many of you have",
    "start": "314759",
    "end": "320460"
  },
  {
    "text": "absolutely never heard of Kafka before and you're really excited about this okay two",
    "start": "320460",
    "end": "326759"
  },
  {
    "text": "what uh okay cool you can can leave all",
    "start": "326759",
    "end": "332039"
  },
  {
    "text": "right all right well let's just let's just talk about Kafka I mean we're all",
    "start": "332039",
    "end": "337380"
  },
  {
    "text": "experts um so kosk at the most basic level this is the most refined definition I can come up with it's almost academic",
    "start": "337380",
    "end": "344100"
  },
  {
    "text": "um it's a distributed event streaming platform it's such a short description right um there is a lot to unpack here so",
    "start": "344100",
    "end": "351600"
  },
  {
    "text": "buckle up we are doing that now okay so it is a streaming platform all right this shouldn't be a new phrase to any of",
    "start": "351600",
    "end": "358320"
  },
  {
    "text": "you right because we've been undergoing a paradigm shift and how we deal with our data right how we process our data",
    "start": "358320",
    "end": "364020"
  },
  {
    "text": "we're moving away from slower more batch oriented systems and we're moving to real time right where we want to capture",
    "start": "364020",
    "end": "370199"
  },
  {
    "text": "and process information as close to when it was created as possible Right so instead of waiting minutes hours days",
    "start": "370199",
    "end": "377039"
  },
  {
    "text": "to group information and process over that batch we're building more reactive systems right that are going to produce",
    "start": "377039",
    "end": "382139"
  },
  {
    "text": "incremental results on smaller pieces of data and in real time ideally okay",
    "start": "382139",
    "end": "387840"
  },
  {
    "text": "so this move to stream processing there's a lot of benefits to it you're going to increase the accuracy of your",
    "start": "387840",
    "end": "393300"
  },
  {
    "text": "output data usually you're going to have like I said more reactive systems you're that person who wants that report is",
    "start": "393300",
    "end": "399539"
  },
  {
    "text": "going to get that information more quickly and depending on how you actually Implement a real-time system you can you",
    "start": "399539",
    "end": "406620"
  },
  {
    "text": "can actually increase the resiliency of your overall system which is which is pretty cool and Kafka is a platform that",
    "start": "406620",
    "end": "413100"
  },
  {
    "text": "can help you achieve this right it's a streaming platform not only does it help to serve you know serve as sort of a",
    "start": "413100",
    "end": "418380"
  },
  {
    "text": "messaging layer to move information quickly it also serves as a there's a persistent storage layer for you to keep",
    "start": "418380",
    "end": "424560"
  },
  {
    "text": "data for a configurable amount of time and then also as we'll see there are there's a processing layer involved",
    "start": "424560",
    "end": "430500"
  },
  {
    "text": "where you can actually do your stream processing within the Kafka ecosystem",
    "start": "430500",
    "end": "436080"
  },
  {
    "text": "right it is an event platform though okay and if you take one thing away from this",
    "start": "436080",
    "end": "441720"
  },
  {
    "text": "those of you who are learning about Kafka for the first time now is that in order to be successful with Kafka you",
    "start": "441720",
    "end": "447840"
  },
  {
    "text": "need to start thinking in events all right I know that might sound like a big ask it's uh it's eight nine ten in the",
    "start": "447840",
    "end": "454020"
  },
  {
    "text": "morning okay it's it's early but I hope this sticks with you",
    "start": "454020",
    "end": "459419"
  },
  {
    "text": "I'm going to preface this by saying that as users as humans as programmers you already think in and process in events",
    "start": "459419",
    "end": "466380"
  },
  {
    "text": "okay so this shouldn't be that big of an ask all right I'm just asking you to be a little more conscious of this fact",
    "start": "466380",
    "end": "471599"
  },
  {
    "text": "because you're interacting with forms online right you're submitting information you look at application logs if you",
    "start": "471599",
    "end": "477900"
  },
  {
    "text": "debug hopefully and then you react to notifications on your phone on your computer right all of those things are",
    "start": "477900",
    "end": "484020"
  },
  {
    "text": "events all right you already know how to interact with them right so those are examples of events but what",
    "start": "484020",
    "end": "490199"
  },
  {
    "text": "is an event really it is a piece of information that should be no surprise ideally the smallest",
    "start": "490199",
    "end": "496800"
  },
  {
    "text": "amount of information without too much excess and this piece of information is going to describe something that has happened",
    "start": "496800",
    "end": "502440"
  },
  {
    "text": "okay that's it's pretty basic we should be able to latch on to that okay but",
    "start": "502440",
    "end": "508199"
  },
  {
    "text": "we need to know when that thing happened right that's a crucial piece of information to include in that package",
    "start": "508199",
    "end": "513659"
  },
  {
    "text": "and we also need to know you know any supporting details who or what was involved right",
    "start": "513659",
    "end": "519479"
  },
  {
    "text": "so going back to turn it back to the plants all right and this this system that I'm envisioning right",
    "start": "519479",
    "end": "525540"
  },
  {
    "text": "so say that yesterday at 2 30 pm my my umbrella plant pictured here",
    "start": "525540",
    "end": "531720"
  },
  {
    "text": "had a soil moisture reading of 19 right so let's break that down we have the",
    "start": "531720",
    "end": "537839"
  },
  {
    "text": "time stamp yesterday at 2 30 PM we have the the subject the what which is my umbrella plant and the supporting detail",
    "start": "537839",
    "end": "544500"
  },
  {
    "text": "which that it had a moisture reading of 19 at that moment okay a really critical piece of you know key",
    "start": "544500",
    "end": "551700"
  },
  {
    "text": "component of events is that they're meant to be immutable okay that may hurt",
    "start": "551700",
    "end": "556740"
  },
  {
    "text": "some of you but I need to just I need you to just accept that all right this is an unfortunate fact of life right",
    "start": "556740",
    "end": "563779"
  },
  {
    "text": "events are things that have happened we don't have time machines or I don't at",
    "start": "563779",
    "end": "568980"
  },
  {
    "text": "least and so I can't really go back and change that event that reading has been made",
    "start": "568980",
    "end": "575040"
  },
  {
    "text": "that plant had a moisture level of 19 we are done at that moment right",
    "start": "575040",
    "end": "580800"
  },
  {
    "text": "as much as I'd love to have a time machine okay I I really don't so how do I change this right how do I",
    "start": "580800",
    "end": "587100"
  },
  {
    "text": "how do I actually resolve this fact I want to change that event I cannot my options are just to water the plant",
    "start": "587100",
    "end": "594120"
  },
  {
    "text": "right so in watering the plants I can raise its moisture levels say we raise it to",
    "start": "594120",
    "end": "599279"
  },
  {
    "text": "70 percent um today and so I've kind of undone that fact right the initial one that the plant had",
    "start": "599279",
    "end": "606000"
  },
  {
    "text": "a 19 moisture level right now I've created a new event that today if I took that moisture",
    "start": "606000",
    "end": "612240"
  },
  {
    "text": "reading it would be at 70 and we've kind of you know if you look at the overall all of the events that describe this",
    "start": "612240",
    "end": "618540"
  },
  {
    "text": "plant the moisture readings you can kind of build up a picture of you know how neglectful I'm being about that that",
    "start": "618540",
    "end": "624300"
  },
  {
    "text": "particular plant or how often I'm watering you can get a picture a full picture of the state of that plant over time by looking at these events by",
    "start": "624300",
    "end": "630959"
  },
  {
    "text": "looking at this timeline of moisture readings right and that's what we call a",
    "start": "630959",
    "end": "636000"
  },
  {
    "text": "stream of events all right so Kafka is an event platform all right we want to be communicating",
    "start": "636000",
    "end": "642080"
  },
  {
    "text": "these immutable facts throughout our system right and because they're immutable there's a lot of cool things",
    "start": "642080",
    "end": "648720"
  },
  {
    "text": "that happen in there first of all immutable piece of information or really easy to move around right and append to",
    "start": "648720",
    "end": "655260"
  },
  {
    "text": "data structures because we're never going to touch them again we're never going to try to alter them right so Kafka is a system that communicates in",
    "start": "655260",
    "end": "661500"
  },
  {
    "text": "those immutable facts meaning that we could be pretty efficient in how we move that information",
    "start": "661500",
    "end": "666720"
  },
  {
    "text": "and then later on any sort of Downstream systems or clients that want to tap into that information",
    "start": "666720",
    "end": "671760"
  },
  {
    "text": "we don't have to worry about the Integrity of that data degrading over time right because those facts have been",
    "start": "671760",
    "end": "676860"
  },
  {
    "text": "written they're not going to be changed they're immutable okay there's a lot of benefits involved in that I'll leave you",
    "start": "676860",
    "end": "682620"
  },
  {
    "text": "to mull them over we can talk about that later but this is a really really cool thing okay so Kafka can move information in",
    "start": "682620",
    "end": "689459"
  },
  {
    "text": "real time as a streaming system and we're communicating facts okay this is pretty powerful when you think about it",
    "start": "689459",
    "end": "695279"
  },
  {
    "text": "but to really understand that we got to think a little bit more about the architecture of Kafka and it is a",
    "start": "695279",
    "end": "701399"
  },
  {
    "text": "distributed system for better for worse all right so let's start with sort of",
    "start": "701399",
    "end": "706920"
  },
  {
    "text": "the the storage Basics how we actually interact with data in Kafka so the primary unit of storage in Kafka is",
    "start": "706920",
    "end": "712620"
  },
  {
    "text": "called a topic and these topics represent a specific entity or a data a singular data set",
    "start": "712620",
    "end": "719160"
  },
  {
    "text": "usually um consisting of events all right so to get data into Kafka we use separate",
    "start": "719160",
    "end": "725399"
  },
  {
    "text": "clients called producers and they write the events as key value pairs we can have as many producers as we want",
    "start": "725399",
    "end": "731700"
  },
  {
    "text": "writing to as many Kafka topics as we want there are no limits well there are limits okay there are totally limits on",
    "start": "731700",
    "end": "737220"
  },
  {
    "text": "how many how many topics you should have in a Kafka cluster but we don't have to get into that",
    "start": "737220",
    "end": "742620"
  },
  {
    "text": "all right from there to get data out of Kafka we use another set of clients called consumers",
    "start": "742620",
    "end": "748320"
  },
  {
    "text": "and again we can have as many consumers as we want reading from as many Kafka topics as we want within reason",
    "start": "748320",
    "end": "755100"
  },
  {
    "text": "um a couple cool things about consumers the first is that they keep track of",
    "start": "755100",
    "end": "760260"
  },
  {
    "text": "bookmark like a bookmark right as they're reading every event within the Kafka topic if the consumer were to go",
    "start": "760260",
    "end": "766500"
  },
  {
    "text": "down for some reason we would want to know where we left off right so they maintain a bookmark called an offset",
    "start": "766500",
    "end": "772500"
  },
  {
    "text": "okay that's a really important thing also with consumers they are completely",
    "start": "772500",
    "end": "777540"
  },
  {
    "text": "decoupled from The Producers they don't care about them they don't need to know about them right the producers their job",
    "start": "777540",
    "end": "783060"
  },
  {
    "text": "is just to get the data into Kafka and from there we could have as many consumers coming up and down over time uh onboard new applications",
    "start": "783060",
    "end": "790160"
  },
  {
    "text": "pivot be agile you know all those fun buzzwords right they are completely decoupled they don't",
    "start": "790160",
    "end": "796079"
  },
  {
    "text": "care all right this is really good in the context of microservices architectures so if you're interested in",
    "start": "796079",
    "end": "801180"
  },
  {
    "text": "that we can chat all right so consumers another cool thing about them is they have the",
    "start": "801180",
    "end": "806459"
  },
  {
    "text": "ability to work together in unison in something called a consumer group okay and in doing so they have the ability to",
    "start": "806459",
    "end": "813480"
  },
  {
    "text": "share the work of processing the events from an underlying topic or set of topics okay so we can parallelize the",
    "start": "813480",
    "end": "820320"
  },
  {
    "text": "processing right but on the other hand this is cool they're flexible consumers also can just",
    "start": "820320",
    "end": "827399"
  },
  {
    "text": "work completely independently and so the same set of consumer or you know a set",
    "start": "827399",
    "end": "832800"
  },
  {
    "text": "of maybe 10 consumers or so can each read from the same Kafka topics and all",
    "start": "832800",
    "end": "838200"
  },
  {
    "text": "build up the exact same state from those events okay they're all going to read the exact same events from that",
    "start": "838200",
    "end": "844800"
  },
  {
    "text": "underlying topic and that's a really important thing when you start working with Kafka for those of you who haven't",
    "start": "844800",
    "end": "851040"
  },
  {
    "text": "worked with it yet it's very easy to compare it to similar Technologies and the the closest one is usually messaging",
    "start": "851040",
    "end": "856440"
  },
  {
    "text": "cues right but in a Kafka topic when the events are consumed they do not go anywhere okay",
    "start": "856440",
    "end": "862260"
  },
  {
    "text": "they are there for a configurable amount of time remember I said Kafka can serve as a persistent storage layer so the",
    "start": "862260",
    "end": "867839"
  },
  {
    "text": "data is there immutably written for anybody to tap into so it's less of a messaging queue and a",
    "start": "867839",
    "end": "873779"
  },
  {
    "text": "Kafka topic is more like an application log all right again hopefully we've all done some debugging maybe recently maybe",
    "start": "873779",
    "end": "881040"
  },
  {
    "text": "not too recently um so what happens when you read lines from a log",
    "start": "881040",
    "end": "886980"
  },
  {
    "text": "okay you're trying to find root cause it's the only thing you have to do that day you're reading line by line trying",
    "start": "886980",
    "end": "892199"
  },
  {
    "text": "to build up in your mind a state of that application and by the way every line in a log an application log file is an",
    "start": "892199",
    "end": "899160"
  },
  {
    "text": "event okay see you are you are interacting with them all the time okay",
    "start": "899160",
    "end": "904500"
  },
  {
    "text": "all right so you read line by line you're building up the state of this application in your mind and all right",
    "start": "904500",
    "end": "910260"
  },
  {
    "text": "maybe you can't figure it out so you invite your colleague to come by and do the exact same thing it's the same with",
    "start": "910260",
    "end": "915779"
  },
  {
    "text": "the consumers all right you and your colleague are able to build up that same state based on these events in your mind",
    "start": "915779",
    "end": "922199"
  },
  {
    "text": "um because as you consume them they do not go anywhere okay so Kafka topics are the primary unit of",
    "start": "922199",
    "end": "929760"
  },
  {
    "text": "storage but they're actually broken down into slightly smaller components called partitions okay you see sort of an",
    "start": "929760",
    "end": "935279"
  },
  {
    "text": "example of them over here on the right so here we have a Kafka topic broken up into three partitions we've got 14 15",
    "start": "935279",
    "end": "943019"
  },
  {
    "text": "events spread throughout that when you write data to a Kafka topic we take it's a key value pair we do a hash of that",
    "start": "943019",
    "end": "949860"
  },
  {
    "text": "key if it exists and based on our partitioning strategy we will figure out what partition that particular event",
    "start": "949860",
    "end": "956579"
  },
  {
    "text": "should go to all right so these partitions themselves are actually the immutable append only",
    "start": "956579",
    "end": "962160"
  },
  {
    "text": "logs where the events are actually stored across the Kafka cluster okay and",
    "start": "962160",
    "end": "967260"
  },
  {
    "text": "you know we're breaking these up we're split splitting them to different areas of system because Kafka is a distributed system",
    "start": "967260",
    "end": "972720"
  },
  {
    "text": "and this is going to provide better resilience and also facilitate replication okay and this is a really",
    "start": "972720",
    "end": "978839"
  },
  {
    "text": "important thing in any distributed system we want to make sure that we have highly available data right",
    "start": "978839",
    "end": "984839"
  },
  {
    "text": "so let's take a look quickly at a Kafka cluster so the nodes of a Kaka cluster are called Brokers and we can run them",
    "start": "984839",
    "end": "991620"
  },
  {
    "text": "wherever we want they can be on bare metal VMS containers in the cloud doesn't matter run them wherever but",
    "start": "991620",
    "end": "998279"
  },
  {
    "text": "just run many of them right this is a simple cluster we have three Brokers",
    "start": "998279",
    "end": "1003620"
  },
  {
    "text": "three nodes um three topics and you know an assortment of partitions here",
    "start": "1003620",
    "end": "1009800"
  },
  {
    "text": "so the goal here is that we want our petitions per topic to be as evenly distributed as possible across the",
    "start": "1009800",
    "end": "1016160"
  },
  {
    "text": "cluster right so that in the event that one of the Brokers goes down right this seems like not a good thing",
    "start": "1016160",
    "end": "1023360"
  },
  {
    "text": "right right a broker has gone down we've lost some information right",
    "start": "1023360",
    "end": "1029600"
  },
  {
    "text": "um the good news is we've only lost a third of our data right the bad news is we've lost a third of",
    "start": "1029600",
    "end": "1036140"
  },
  {
    "text": "our data that that seems problematic right so but it's better than all of it being gone right",
    "start": "1036140",
    "end": "1042020"
  },
  {
    "text": "but we're going to take it a step further with replication right so this is a configurable parameter that defines",
    "start": "1042020",
    "end": "1047600"
  },
  {
    "text": "how many copies of a given partition should exist across the entire Kafka cluster so here we're looking at again that",
    "start": "1047600",
    "end": "1053780"
  },
  {
    "text": "three broker setup but we're just going to look at one topic for now all right so we have our main partitions look at",
    "start": "1053780",
    "end": "1059720"
  },
  {
    "text": "the uh we have the leader partitions those are the ones that we are constantly interacting with our producers are producing to those lead",
    "start": "1059720",
    "end": "1065000"
  },
  {
    "text": "partitions our consumers are in most cases consuming from those lead partitions but then we also have backups",
    "start": "1065000",
    "end": "1071600"
  },
  {
    "text": "we have two additional follower replicas across the cluster okay and ideally those roughly has exist on a different",
    "start": "1071600",
    "end": "1078919"
  },
  {
    "text": "Broker Than where the lead partition is right so broker one we have partition",
    "start": "1078919",
    "end": "1084080"
  },
  {
    "text": "zero as the lead replica and we are a follower replicas existing on Brokers two and three",
    "start": "1084080",
    "end": "1089960"
  },
  {
    "text": "so in this case what happens when a broker goes down well really quickly I just want to touch",
    "start": "1089960",
    "end": "1096320"
  },
  {
    "text": "on this um the way that we actually conduct this replication and this is this is pretty important is that when the producer is",
    "start": "1096320",
    "end": "1103039"
  },
  {
    "text": "writing to that topic so says or that partition when he's writing to partition zero we are going to synchronously",
    "start": "1103039",
    "end": "1109220"
  },
  {
    "text": "replicate that data over to the other Brokers okay so we don't that producer does not receive an acknowledgment a",
    "start": "1109220",
    "end": "1115700"
  },
  {
    "text": "success that data has been written until we have durably written it to all of the Brokers where those replicas are okay",
    "start": "1115700",
    "end": "1123679"
  },
  {
    "text": "so when a broker goes down all right this is still still problematic immediately you know we've",
    "start": "1123679",
    "end": "1129740"
  },
  {
    "text": "lost partition zero okay so whatever producers were writing to that partition and whatever consumers were reading from",
    "start": "1129740",
    "end": "1134960"
  },
  {
    "text": "that partition they're directly impacted right we've lost some backups but that's okay we didn't need them anyway that's fine",
    "start": "1134960",
    "end": "1141440"
  },
  {
    "text": "we've got some more um so what happens now we we want to be writing to partition zero or reading",
    "start": "1141440",
    "end": "1147320"
  },
  {
    "text": "from partition zero well immediately the cluster is going to realize okay after the the consumer the",
    "start": "1147320",
    "end": "1153799"
  },
  {
    "text": "producer tries to interact with that partition it's going to realize okay that one's down we need to figure out what's our backup plan so it's going to",
    "start": "1153799",
    "end": "1161840"
  },
  {
    "text": "look for one of the follower replicas it's going to find it say on broker two broker three we're going to",
    "start": "1161840",
    "end": "1167840"
  },
  {
    "text": "conduct a leader election process and figure out who to promote and then it's going to go through that",
    "start": "1167840",
    "end": "1173360"
  },
  {
    "text": "process and actually promote one of them to be the leader so in this case we're promoting partition zero on broker two",
    "start": "1173360",
    "end": "1179299"
  },
  {
    "text": "and the world will resume right our producers and consumers can continue operating at that time",
    "start": "1179299",
    "end": "1185480"
  },
  {
    "text": "all right so all of this to say that Kafka is pretty cool all right it has high",
    "start": "1185480",
    "end": "1191360"
  },
  {
    "text": "availability built in we're kind of avoiding some disaster scenarios that's wonderful it is a streaming platform",
    "start": "1191360",
    "end": "1197900"
  },
  {
    "text": "we're moving information quickly we're communicating in mutable events um pretty cool pretty powerful and this is",
    "start": "1197900",
    "end": "1204320"
  },
  {
    "text": "just this is just a teaser all right you should really check into it more if this is the first time you're hearing about it all right but let's get back to me",
    "start": "1204320",
    "end": "1210320"
  },
  {
    "text": "all right this is more important we want to build this plant platform okay so going back to to the design that we were",
    "start": "1210320",
    "end": "1217220"
  },
  {
    "text": "taking this little back of the napkin sort of diagram okay this is a very very high level view of what I wanted to",
    "start": "1217220",
    "end": "1223700"
  },
  {
    "text": "achieve right we have our Raspberry Pi grabbing these soil moisture readings um we're throwing up in the Kafka",
    "start": "1223700",
    "end": "1229400"
  },
  {
    "text": "combining it with metadata on the bottom here this is our symbol for K SQL debut for data processing doing that within",
    "start": "1229400",
    "end": "1236539"
  },
  {
    "text": "the Kafka ecosystem and we're going to throw out an alert at some point right",
    "start": "1236539",
    "end": "1242799"
  },
  {
    "text": "looking at this okay there might be there's not a lot of components but there are some components here this is",
    "start": "1243200",
    "end": "1249320"
  },
  {
    "text": "my first Hardware project I mentioned that um it will not be my last okay I'm very happy to say that this was a lot of fun",
    "start": "1249320",
    "end": "1255620"
  },
  {
    "text": "all right but it was my first Hardware project and going into it I was nervous about how much work I was going to have",
    "start": "1255620",
    "end": "1262340"
  },
  {
    "text": "to do to actually build this physical system so much so that I really wanted to focus",
    "start": "1262340",
    "end": "1268820"
  },
  {
    "text": "on that physical the physical components and what I didn't want to worry about was infrastructure right managing any of",
    "start": "1268820",
    "end": "1275780"
  },
  {
    "text": "the other infrastructure that I would need specifically the Kafka side of it right so this is where a confluent comes in so",
    "start": "1275780",
    "end": "1284020"
  },
  {
    "text": "confluent basically takes Apache Kafka and makes it simple I think so we have",
    "start": "1284020",
    "end": "1289820"
  },
  {
    "text": "fully managed cloud-based Apache Kafka so basically for my Kafka side of things",
    "start": "1289820",
    "end": "1295280"
  },
  {
    "text": "I was able to just spin up a Kafka cluster in a couple of minutes and start producing once I've built the physical",
    "start": "1295280",
    "end": "1300919"
  },
  {
    "text": "system start producing events very quickly into that cluster it's completely managed for me I don't have",
    "start": "1300919",
    "end": "1306620"
  },
  {
    "text": "to think about downtime I don't have to think about setting up a lot of the configuration options to make sure that it continues running and on top of that",
    "start": "1306620",
    "end": "1314059"
  },
  {
    "text": "there are some pretty cool tools built in we'll get into a lot of these later but we have tools for moving information",
    "start": "1314059",
    "end": "1319280"
  },
  {
    "text": "into and out of Kafka with Kafka connect tools for stream processing built into the web UI with K SQL DB and then also",
    "start": "1319280",
    "end": "1327620"
  },
  {
    "text": "schema management just to make sure everything flows through as it should but we'll get more into that later",
    "start": "1327620",
    "end": "1333799"
  },
  {
    "text": "okay so again what am I trying to achieve with this project then I want I first",
    "start": "1333799",
    "end": "1340340"
  },
  {
    "text": "need to get my metadata my plant details into Kafka okay that's the lowest bar",
    "start": "1340340",
    "end": "1345380"
  },
  {
    "text": "possible I just need to do that right from there um in between there 0.5 is you know",
    "start": "1345380",
    "end": "1352039"
  },
  {
    "text": "actually building the system and being okay with it then capturing the soil moisture readings and putting using",
    "start": "1352039",
    "end": "1359840"
  },
  {
    "text": "using the raspberry pi and writing those into Kafka right",
    "start": "1359840",
    "end": "1364960"
  },
  {
    "text": "and from there we need to use some sort of stream processing to actually do the combining of those events right joining",
    "start": "1364960",
    "end": "1370520"
  },
  {
    "text": "those two of the the metadata with the readings that we're producing um so I'd be using K SQL DV for this",
    "start": "1370520",
    "end": "1378620"
  },
  {
    "text": "and within this stage I can determine if the um if the readings that I were capturing",
    "start": "1378620",
    "end": "1385039"
  },
  {
    "text": "if they're within that allowable threshold that that plant should have right and based on that I can then",
    "start": "1385039",
    "end": "1390559"
  },
  {
    "text": "trigger an alert I can send out a message to let me know that I need to water that plant and the way I'm going",
    "start": "1390559",
    "end": "1397220"
  },
  {
    "text": "to do this is by using Kafka connect to connect my coffee cluster with my phone",
    "start": "1397220",
    "end": "1402620"
  },
  {
    "text": "using Telegram oh okay the hardware how many of you build",
    "start": "1402620",
    "end": "1408919"
  },
  {
    "text": "out Hardware projects okay I hope the rest of you are inspired although it is kind of difficult now to",
    "start": "1408919",
    "end": "1415640"
  },
  {
    "text": "get Raspberry Pi's it still is is it still difficult here okay yeah I got lucky",
    "start": "1415640",
    "end": "1421280"
  },
  {
    "text": "um but this Raspberry Pi for those of you who are familiar with Hardware um this is overkill this particular model for this situation",
    "start": "1421280",
    "end": "1428600"
  },
  {
    "text": "it was like the last one in stock I got before um you know everything disappeared",
    "start": "1428600",
    "end": "1434000"
  },
  {
    "text": "so I have my Raspberry Pi um I also ended up using a breadboard this was completely lucky on my part I",
    "start": "1434000",
    "end": "1440659"
  },
  {
    "text": "got it for free with my order um I didn't know I needed this but I did need this okay we'll get into this",
    "start": "1440659",
    "end": "1446780"
  },
  {
    "text": "um I settled on these particular soil moisture sensors I learned a lot about soil moisture sensors man this is not",
    "start": "1446780",
    "end": "1454400"
  },
  {
    "text": "this is not like a new space for anybody there are so many options out there like it was insane anyway I settled on these",
    "start": "1454400",
    "end": "1461840"
  },
  {
    "text": "ones um they had stema connectors on them so they're pretty much plug and play um well until I had to solder but up",
    "start": "1461840",
    "end": "1468679"
  },
  {
    "text": "until that point it was Plug and Play and I was using um their I squared C their capacitive",
    "start": "1468679",
    "end": "1474559"
  },
  {
    "text": "moisture sensors meaning that they're not going to degrade over time as much as the other types all right so settled",
    "start": "1474559",
    "end": "1480620"
  },
  {
    "text": "on these a lot of cables again first Hardware project so for some reason I was like",
    "start": "1480620",
    "end": "1486860"
  },
  {
    "text": "I should solder everything myself I should crimp all the wires right I wanted The Full Experience",
    "start": "1486860",
    "end": "1492980"
  },
  {
    "text": "um I don't know if that was the right choice but I learned a lot okay I learned a lot",
    "start": "1492980",
    "end": "1499100"
  },
  {
    "text": "all right so it did there was a there was a lot of like Blood Sweat and Tears involved um and I did I had a soldering iron in",
    "start": "1499100",
    "end": "1506360"
  },
  {
    "text": "my garage my my partner had one and at one point I was like you know wearing you know magnifying",
    "start": "1506360",
    "end": "1512419"
  },
  {
    "text": "glasses like trying to put these things together and he's just like well don't lick your fingers like what",
    "start": "1512419",
    "end": "1519020"
  },
  {
    "text": "do you mean oh everything's lead-based isn't that fun um anyway this is a really great process I I really I enjoyed it anyway so the",
    "start": "1519020",
    "end": "1527299"
  },
  {
    "text": "software side of things um a little outdated here on the python version but three seven is what I have",
    "start": "1527299",
    "end": "1533059"
  },
  {
    "text": "on my Raspberry Pi right now running conflict Kafka 1.7 this is the python module",
    "start": "1533059",
    "end": "1539179"
  },
  {
    "text": "um and as I said we're going to be leveraging our fully managed confluent cluster",
    "start": "1539179",
    "end": "1545120"
  },
  {
    "text": "um so that I didn't have to think about it right so we're setting up the cluster in the cloud I'm going to be leveraging",
    "start": "1545120",
    "end": "1551240"
  },
  {
    "text": "the in um in browser stream processing with kasikodb I'm going to be using",
    "start": "1551240",
    "end": "1557000"
  },
  {
    "text": "fully managed Kafka connect meaning that to get my data out of Kafka at the end I'm also not going to run Kafka connect",
    "start": "1557000",
    "end": "1563240"
  },
  {
    "text": "outside of that ecosystem I'm not going to think about it they're going to manage it for me and I will be taking advantage of schema registry as well",
    "start": "1563240",
    "end": "1570679"
  },
  {
    "text": "okay okay we can actually start now all right that was that was just the intro I was told I",
    "start": "1570679",
    "end": "1576919"
  },
  {
    "text": "had an hour for this like man this is great usually I only have like 35 minutes so really gonna touch everything",
    "start": "1576919",
    "end": "1581960"
  },
  {
    "text": "all right so when you embark on any sort of data related project that's a joke",
    "start": "1581960",
    "end": "1587000"
  },
  {
    "text": "every project data related to some degree um when you embark on any sort of project the first step know your data",
    "start": "1587000",
    "end": "1593120"
  },
  {
    "text": "please my first job was in data warehousing building and building reports and I would get so many requests",
    "start": "1593120",
    "end": "1598460"
  },
  {
    "text": "on can you do this this and this no did you look at your data do you know what data we have it's not what you think we",
    "start": "1598460",
    "end": "1604940"
  },
  {
    "text": "have right so and that all could have been avoided if we just sat down in the beginning and really thought about what",
    "start": "1604940",
    "end": "1610520"
  },
  {
    "text": "data we needed to achieve the things we want right so I wanted to avoid all of that and I really I spent probably too",
    "start": "1610520",
    "end": "1617120"
  },
  {
    "text": "much time thinking about the schemas for these these data sets um but I did I took a step back had a",
    "start": "1617120",
    "end": "1622640"
  },
  {
    "text": "had a cup of tea after after burning myself with a soldering iron and and really thought about",
    "start": "1622640",
    "end": "1628340"
  },
  {
    "text": "what information I wanted to use so I ended up creating two Avro schemas remember we're going to use schema",
    "start": "1628340",
    "end": "1633799"
  },
  {
    "text": "registry to keep track of our data and our schemas so the first was for the the",
    "start": "1633799",
    "end": "1639740"
  },
  {
    "text": "readings that we're actually capturing from the soil moisture sensors so we're generating events right",
    "start": "1639740",
    "end": "1646159"
  },
  {
    "text": "all right so I need to be able to fully capture what that event is what information do I need to describe what",
    "start": "1646159",
    "end": "1651919"
  },
  {
    "text": "is happening at each reading right so all right I need a time stamp right",
    "start": "1651919",
    "end": "1657740"
  },
  {
    "text": "there is no time stamp in here sorry that is implicitly contained in the",
    "start": "1657740",
    "end": "1662960"
  },
  {
    "text": "Kafka message right you can I can specify a timestamp I could have added one in here if I wanted but I'm just",
    "start": "1662960",
    "end": "1669980"
  },
  {
    "text": "going to use the produce time whenever my producer writes this event that is the timestamp I'm going to implicitly",
    "start": "1669980",
    "end": "1676100"
  },
  {
    "text": "use with that event okay so that's in there I promise and you know what plant was involved so",
    "start": "1676100",
    "end": "1682940"
  },
  {
    "text": "we have the plant ID we're also going to use that as the key of that key value pair that we write to Kafka and then",
    "start": "1682940",
    "end": "1690740"
  },
  {
    "text": "we're also capturing moisture level right which I translate into a percentage based on the",
    "start": "1690740",
    "end": "1696799"
  },
  {
    "text": "um the ranges of the particular soil moisture sensors that I'm using and also",
    "start": "1696799",
    "end": "1702200"
  },
  {
    "text": "I get temperature for free still thinking about how I want to use that because honestly like yes every plant",
    "start": "1702200",
    "end": "1708860"
  },
  {
    "text": "does have a temperature threshold my house is never outside of that",
    "start": "1708860",
    "end": "1714440"
  },
  {
    "text": "um it would be very worrisome if my if my house were that cold or that warm so but that's in there we'll get to that",
    "start": "1714440",
    "end": "1720080"
  },
  {
    "text": "maybe all right V2 and then also we need to know you know",
    "start": "1720080",
    "end": "1725120"
  },
  {
    "text": "what what information we need for the plants right the very basic level I need to know the the moisture threshold that",
    "start": "1725120",
    "end": "1731539"
  },
  {
    "text": "the plant was comfortable within right pretty much all house plants are",
    "start": "1731539",
    "end": "1737000"
  },
  {
    "text": "within I don't know 20 to 60 percent moisture soil moisture is is okay",
    "start": "1737000",
    "end": "1742700"
  },
  {
    "text": "um but like that first plant that I showed you in the beginning that that one's a little pickier okay so we need a",
    "start": "1742700",
    "end": "1749659"
  },
  {
    "text": "slightly different range so there was some guessing and checking and and thinking about you know",
    "start": "1749659",
    "end": "1755240"
  },
  {
    "text": "um even after the system was running like actually understanding what um threshold the plants are comfortable",
    "start": "1755240",
    "end": "1760640"
  },
  {
    "text": "within but I definitely needed that information I did the same thing for the temperature thresholds",
    "start": "1760640",
    "end": "1766460"
  },
  {
    "text": "and then also some extra information to make it a little easier for me when I'm when I'm looking at the data within the",
    "start": "1766460",
    "end": "1772340"
  },
  {
    "text": "console so obviously I need my my plant ID right so that I can join it onto the",
    "start": "1772340",
    "end": "1777559"
  },
  {
    "text": "readings that we're generating and we have the names of the plants all of my plants have names",
    "start": "1777559",
    "end": "1783620"
  },
  {
    "text": "given names okay um really it makes me feel connected to",
    "start": "1783620",
    "end": "1789799"
  },
  {
    "text": "them and then I feel like if I didn't name them I would just completely neglect them right it's something",
    "start": "1789799",
    "end": "1794899"
  },
  {
    "text": "different when you know you get an alert on your phone that says Bradley's sad right right rather than go water go",
    "start": "1794899",
    "end": "1802220"
  },
  {
    "text": "water that plant all right so you've got our scientific names the common name",
    "start": "1802220",
    "end": "1807500"
  },
  {
    "text": "um common plant name and then also our given name right okay",
    "start": "1807500",
    "end": "1814240"
  },
  {
    "text": "how many plants I've got like 50 plants and there are 50 names there are no overlaps",
    "start": "1815360",
    "end": "1823220"
  },
  {
    "text": "although every time I ask my my nieces um six years old now and I do I like to",
    "start": "1823220",
    "end": "1828799"
  },
  {
    "text": "include her when I get new plants like what should I name this one and she usually says either like John or Brenda",
    "start": "1828799",
    "end": "1834080"
  },
  {
    "text": "and I'm like no we've got those already like you gotta think of a new one so anyway",
    "start": "1834080",
    "end": "1840020"
  },
  {
    "text": "they have to be unique they wouldn't feel loved otherwise come on all right so we know what data we want to be",
    "start": "1840020",
    "end": "1845779"
  },
  {
    "text": "producing right we have a schema that we're going to adhere to how do we get our data into Kafka great",
    "start": "1845779",
    "end": "1852020"
  },
  {
    "text": "question I would love to tell you there are two main ways to do this you can either use the producer API using the",
    "start": "1852020",
    "end": "1857179"
  },
  {
    "text": "producer those clients that I talked about earlier or we can use Kafka connect a source connector okay",
    "start": "1857179",
    "end": "1863419"
  },
  {
    "text": "um I know I have verses in there like like they're pitted against each other right I'm just a confrontational person",
    "start": "1863419",
    "end": "1868460"
  },
  {
    "text": "I think this is fun um but it really isn't it it isn't a competition all right there are specific",
    "start": "1868460",
    "end": "1873620"
  },
  {
    "text": "use cases where you'd want to use the producer API over coffee connect and vice versa all right so pay attention",
    "start": "1873620",
    "end": "1879380"
  },
  {
    "text": "okay so producer API this is your low level",
    "start": "1879380",
    "end": "1884740"
  },
  {
    "text": "vanilla option for getting information into Kafka right um we're going to create producer",
    "start": "1884740",
    "end": "1890899"
  },
  {
    "text": "clients pretty much available in any language you would want at this point there are so many options so you just",
    "start": "1890899",
    "end": "1898100"
  },
  {
    "text": "pick whatever you want a colleague of mine likes to say you can choose Haskell or any lesser languages",
    "start": "1898100",
    "end": "1903159"
  },
  {
    "text": "so proceed at your own risk right you'll want to be using the producer API",
    "start": "1903159",
    "end": "1909559"
  },
  {
    "text": "when you either own or you have access to the the system or the application",
    "start": "1909559",
    "end": "1914840"
  },
  {
    "text": "that's actually generating the data right so for example if you wanted to capture you know log events from your",
    "start": "1914840",
    "end": "1921140"
  },
  {
    "text": "application right um You just add a couple lines to add a producer at",
    "start": "1921140",
    "end": "1926299"
  },
  {
    "text": "a particular point in time and then you know produce those info that those messages as those log events occur right",
    "start": "1926299",
    "end": "1932299"
  },
  {
    "text": "there are other ways to do that but if you wanted to use the producer API that's a pretty easy way to do that right the other option is using Kafka",
    "start": "1932299",
    "end": "1939320"
  },
  {
    "text": "connect all right and as the name implies cop could connect is a way to connect Kafka with other data sources",
    "start": "1939320",
    "end": "1945740"
  },
  {
    "text": "and syncs in this case a source right it's pretty cool I think it's pretty",
    "start": "1945740",
    "end": "1950779"
  },
  {
    "text": "great because it's low or no code in many cases because there are dozens of",
    "start": "1950779",
    "end": "1956299"
  },
  {
    "text": "fully managed connectors that you can just run through conflict cloud and hundreds of other connectors for you",
    "start": "1956299",
    "end": "1962600"
  },
  {
    "text": "know written specifically for different data sources and syncs right so for any",
    "start": "1962600",
    "end": "1967640"
  },
  {
    "text": "data source or Sync It's probably available right you don't have to write a new connector you can just fill out a configuration and run it right which is",
    "start": "1967640",
    "end": "1975080"
  },
  {
    "text": "pretty convenient and if you are unlucky and your data sourcesync is not one of",
    "start": "1975080",
    "end": "1980299"
  },
  {
    "text": "the pre-written ones it only takes like 2 000 lines of code it's a right one no it's not that bad um",
    "start": "1980299",
    "end": "1986419"
  },
  {
    "text": "it's actually pretty easy um all the classes are there available to you um it is jvm based sorry",
    "start": "1986419",
    "end": "1992960"
  },
  {
    "text": "um but it's pretty simple to write another Kafka connector if you'd like to in my case though since I am using",
    "start": "1992960",
    "end": "1998720"
  },
  {
    "text": "conflict cloud like I said there are dozens of fully managed ones so effectively conflict cloud is just going",
    "start": "1998720",
    "end": "2003820"
  },
  {
    "text": "to walk you through a wizard for setting up your configuration I don't even have to think about what configurations I",
    "start": "2003820",
    "end": "2009460"
  },
  {
    "text": "need to make this connector work properly it will import all of your topics so you know what uh what topics",
    "start": "2009460",
    "end": "2015519"
  },
  {
    "text": "you want to be working with and moving that data to or from and it's pretty simple",
    "start": "2015519",
    "end": "2021039"
  },
  {
    "text": "so connect is a really really great thing to use when you're trying to integrate with data that's at rest",
    "start": "2021039",
    "end": "2027039"
  },
  {
    "text": "that's kind of the term we use so if it's at the you know in a database right is the is the standard one right we have",
    "start": "2027039",
    "end": "2033279"
  },
  {
    "text": "information database we want to uh translate that those updates those inserts into events and combine them",
    "start": "2033279",
    "end": "2040600"
  },
  {
    "text": "with other events in Kafka so we're going to use Kafka connect but you can also there are there's an HTTP Source",
    "start": "2040600",
    "end": "2046659"
  },
  {
    "text": "connector so you at the other end of an API call you can capture that information at regular intervals and",
    "start": "2046659",
    "end": "2052000"
  },
  {
    "text": "produce that as events so a lot of options it's a really cool tool it makes life so much easier so what did I use in",
    "start": "2052000",
    "end": "2059618"
  },
  {
    "text": "my case only the producer API um yeah I know the metadata is kind of",
    "start": "2059619",
    "end": "2067419"
  },
  {
    "text": "something that would be at rest right that something I should",
    "start": "2067419",
    "end": "2072580"
  },
  {
    "text": "I should have put in a database but again I didn't want to manage anything I didn't want to think about that so I was just gonna from the beginning I decided",
    "start": "2072580",
    "end": "2078580"
  },
  {
    "text": "I would use the producer API and manually produce all that information into Kafka so",
    "start": "2078580",
    "end": "2083679"
  },
  {
    "text": "and at the beginning I only had four plants to monitor this is very underwhelming I know you were expecting",
    "start": "2083679",
    "end": "2089500"
  },
  {
    "text": "a system for all 50 plants that's a lot of wire okay it's going to get expensive",
    "start": "2089500",
    "end": "2095080"
  },
  {
    "text": "also um these particular soil moisture sensors",
    "start": "2095080",
    "end": "2101080"
  },
  {
    "text": "that I got this wasn't like written in bold print I bought a bunch of them but",
    "start": "2101080",
    "end": "2107260"
  },
  {
    "text": "you can only physically change so they communicate over I squared C so they need to have a unique address in order",
    "start": "2107260",
    "end": "2113740"
  },
  {
    "text": "for the Raspberry Pi to be able to pull the information from that sensor okay and on these ones okay you can change",
    "start": "2113740",
    "end": "2120700"
  },
  {
    "text": "the address but to one of four values so I could only use four sensors there are",
    "start": "2120700",
    "end": "2127240"
  },
  {
    "text": "ways to get around this I know but I had put away the soldering iron I was done I didn't want to think about it so",
    "start": "2127240",
    "end": "2133359"
  },
  {
    "text": "yes for for version one of the system we only had four sensors so I only had four",
    "start": "2133359",
    "end": "2138400"
  },
  {
    "text": "rows of plant metadata to actually put into Kafka so it's like I don't need a database for that we're just gonna store",
    "start": "2138400",
    "end": "2143920"
  },
  {
    "text": "that in a text file right and put that in there anyway so but I did write a producer script to actually you know",
    "start": "2143920",
    "end": "2150460"
  },
  {
    "text": "take that information and serialize it adhering to that schema that I wrote right we want to want to stick with our schemas and write that into into Kafka",
    "start": "2150460",
    "end": "2159838"
  },
  {
    "text": "um I also for the houseplant readings I wrote a you know script that's just",
    "start": "2159880",
    "end": "2165760"
  },
  {
    "text": "going to capture those readings initially I did it at like five second intervals right now I switched to two",
    "start": "2165760",
    "end": "2171880"
  },
  {
    "text": "thirty second intervals I don't need the information that quickly um but I still want to have a lot of information for any analysis that I do",
    "start": "2171880",
    "end": "2179140"
  },
  {
    "text": "but within that script I created a static mapping of plant ID to the sensor",
    "start": "2179140",
    "end": "2186400"
  },
  {
    "text": "ID right because I want to know what plant I'm capturing soil moisture information for right so I have that and",
    "start": "2186400",
    "end": "2192760"
  },
  {
    "text": "I'm just looping over it and capturing those those sensor readings",
    "start": "2192760",
    "end": "2198180"
  },
  {
    "text": "the data is in Kafka okay we have our metadata in I manually produce that I am capturing readings at regular intervals",
    "start": "2199000",
    "end": "2205359"
  },
  {
    "text": "now I need to actually process the information okay there are a couple different ways to do",
    "start": "2205359",
    "end": "2211540"
  },
  {
    "text": "this processing we're going to start from the most complicated and get to the easiest all right so bear with me",
    "start": "2211540",
    "end": "2218020"
  },
  {
    "text": "um the OG way is to use that producer and consumer API that I discussed okay",
    "start": "2218020",
    "end": "2223180"
  },
  {
    "text": "they're really great like I said you can use them in whatever language you want so you're free to you know to run",
    "start": "2223180",
    "end": "2228880"
  },
  {
    "text": "whatever system you want use whatever you want but to use them for stream processing right you have to set up a consumer to",
    "start": "2228880",
    "end": "2236920"
  },
  {
    "text": "regularly pull that pull that information from Kafka consume that do whatever you know processing that you",
    "start": "2236920",
    "end": "2243220"
  },
  {
    "text": "want to do if it's stateless great you're lucky if it's stateful you have to manage that state right because if",
    "start": "2243220",
    "end": "2249880"
  },
  {
    "text": "that application goes down you don't want to like reprocess I don't know in this case maybe it doesn't matter but for for real use cases right that's you",
    "start": "2249880",
    "end": "2257020"
  },
  {
    "text": "maybe you don't want to reprocess that data you don't want to have duplicates involved right so you have to manage all",
    "start": "2257020",
    "end": "2262180"
  },
  {
    "text": "of that state handle sort of failover situations in the event that one of those applications goes down how do you",
    "start": "2262180",
    "end": "2268060"
  },
  {
    "text": "recover um and then you also have to at the End Produce that information back into Kafka",
    "start": "2268060",
    "end": "2274000"
  },
  {
    "text": "so there's a lot of managing of these of these clients can you do it absolutely I",
    "start": "2274000",
    "end": "2279460"
  },
  {
    "text": "mean people were doing that for a while that's totally fine you can do it um",
    "start": "2279460",
    "end": "2284680"
  },
  {
    "text": "but there are easier ways to do it why would we do it the more complicated it's not even the more interesting way right",
    "start": "2284680",
    "end": "2289900"
  },
  {
    "text": "you know I would give you a concession if that was the more interesting way to do it but honestly I think Kafka streams",
    "start": "2289900",
    "end": "2295000"
  },
  {
    "text": "is way cooler so um if you're a sane person you're probably going to use coffee streams or are you going to look at that first",
    "start": "2295000",
    "end": "2300460"
  },
  {
    "text": "right um Kafka streams is a Java and Scholar Library specifically written for stream",
    "start": "2300460",
    "end": "2307000"
  },
  {
    "text": "processing okay so it really the major benefit is that it takes that hassle of",
    "start": "2307000",
    "end": "2313359"
  },
  {
    "text": "managing State off your hands okay so you can spin up multiple Kafka streams applications on completely different",
    "start": "2313359",
    "end": "2318820"
  },
  {
    "text": "machines they're all going to coordinate those consumers are going to be part of a consumer group they're going to share",
    "start": "2318820",
    "end": "2324640"
  },
  {
    "text": "the work of processing all the information from that input topic whatever state you're dealing with",
    "start": "2324640",
    "end": "2330640"
  },
  {
    "text": "is going to be backed also by a changelog Topic in Kafka so that the event that one of those applications",
    "start": "2330640",
    "end": "2336880"
  },
  {
    "text": "goes goes down it can first of all rebalance whatever work that particular instance",
    "start": "2336880",
    "end": "2343300"
  },
  {
    "text": "was processing it will be rebalanced and distributed to the other running instances and then also we're going to",
    "start": "2343300",
    "end": "2349720"
  },
  {
    "text": "have that transfer of State in there so that you can keep more or less seamlessly operating so",
    "start": "2349720",
    "end": "2356260"
  },
  {
    "text": "really awesome Library some of the options you have for stateful processing are there on the right you know",
    "start": "2356260",
    "end": "2361660"
  },
  {
    "text": "filtering we can do the mapping joining aggregating windowing it's all in there and it's it's way way nicer",
    "start": "2361660",
    "end": "2369400"
  },
  {
    "text": "than just using the consumer producer API so that might sound like a lot of work",
    "start": "2369400",
    "end": "2374619"
  },
  {
    "text": "though um it is jvm application so if that's not interesting to you we have K SQL DB",
    "start": "2374619",
    "end": "2381040"
  },
  {
    "text": "this is what I ended up using so K sickle DB is actually built on top of Kafka streams and it allows you to build",
    "start": "2381040",
    "end": "2389680"
  },
  {
    "text": "stream processing applications using SQL right within the browser",
    "start": "2389680",
    "end": "2395440"
  },
  {
    "text": "oh it's so great okay um so you have access to that powerful stream processing but you don't have to",
    "start": "2395440",
    "end": "2401619"
  },
  {
    "text": "think about you know writing Kafka streams applications can get pretty pretty lengthy depending on what you're",
    "start": "2401619",
    "end": "2406720"
  },
  {
    "text": "trying to do um but you can be using a k SQL DB to just write a couple SQL statements and",
    "start": "2406720",
    "end": "2412660"
  },
  {
    "text": "do some pretty complicated not only stateless processing but very you know stateful processing",
    "start": "2412660",
    "end": "2417700"
  },
  {
    "text": "um there are a lot of customers that I know of using this for like real-time fraud detection and so there's a lot of",
    "start": "2417700",
    "end": "2422920"
  },
  {
    "text": "cool things that you can do in just a couple lines of SQL all right so you see",
    "start": "2422920",
    "end": "2428320"
  },
  {
    "text": "on the right over here we have just our standard it's going to feel very familiar very SQL like um the joining the windowing grouping um",
    "start": "2428320",
    "end": "2434980"
  },
  {
    "text": "and our standard sort of aggregate aggregating functions right so this is what I chose to use because again I",
    "start": "2434980",
    "end": "2441099"
  },
  {
    "text": "don't want to run anything on my own machines we're just going to be using confluent cloud",
    "start": "2441099",
    "end": "2446260"
  },
  {
    "text": "so there are two main constructs when you're dealing with K single DB so and",
    "start": "2446260",
    "end": "2452079"
  },
  {
    "text": "vanilla SQL you're creating tables right in case SQL you have an option you're",
    "start": "2452079",
    "end": "2457540"
  },
  {
    "text": "either going to create a stream or a table okay streams represent unbounded ongoing",
    "start": "2457540",
    "end": "2464200"
  },
  {
    "text": "events Okay so okay tuck that away think about that our",
    "start": "2464200",
    "end": "2469660"
  },
  {
    "text": "tables are pretty much just the the standard SQL table that you're familiar with right they're going to show the",
    "start": "2469660",
    "end": "2475900"
  },
  {
    "text": "current state for a given key okay I'm going to end up using both of these for the readings in the metadata",
    "start": "2475900",
    "end": "2482500"
  },
  {
    "text": "respectfully okay so our data is in Kafka they're in the Kafka topics where we would expect them",
    "start": "2482500",
    "end": "2488740"
  },
  {
    "text": "to be they have a schema um so let's let's bring it into K sqldb",
    "start": "2488740",
    "end": "2494140"
  },
  {
    "text": "so the first thing you do is just create a k SQL DB application in in Conflict",
    "start": "2494140",
    "end": "2499180"
  },
  {
    "text": "Cloud just click some buttons give it a name it's fine um but there's no data in that",
    "start": "2499180",
    "end": "2504339"
  },
  {
    "text": "application to begin with right so we need to basically configure our sources what information are we pulling into",
    "start": "2504339",
    "end": "2510280"
  },
  {
    "text": "this stream processing application so the first thing I want to do is bring in that metadata",
    "start": "2510280",
    "end": "2515440"
  },
  {
    "text": "and the metadata like I said that's something that would probably exist in a database anyway right because every time",
    "start": "2515440",
    "end": "2521200"
  },
  {
    "text": "you update it for a given plant if I update plant ID 0 with new uh moisture",
    "start": "2521200",
    "end": "2526720"
  },
  {
    "text": "thresholds I don't want to use the old representation right I want to know the latest value for that so the table is",
    "start": "2526720",
    "end": "2533560"
  },
  {
    "text": "pretty much just always grouping by that key and giving you the latest value for that okay",
    "start": "2533560",
    "end": "2540420"
  },
  {
    "text": "all right so to set this up pretty simple so we just the create table syntax should seem pretty familiar",
    "start": "2540640",
    "end": "2547900"
  },
  {
    "text": "um but the the with contract construct is interesting this is where we actually connect it with the topics so we point",
    "start": "2547900",
    "end": "2553900"
  },
  {
    "text": "to the underlying topic that we want to be grabbing this information from and then we have our value format just",
    "start": "2553900",
    "end": "2559960"
  },
  {
    "text": "saying you know what how is our uh the value of this table actually formatted by specifying Avro because that's what",
    "start": "2559960",
    "end": "2566619"
  },
  {
    "text": "it is we have our schema stored in the schema registry this is really cool so there were a lot of fields in that those",
    "start": "2566619",
    "end": "2572440"
  },
  {
    "text": "particular events right but I've only had to list ID here so what's cool is that when you use avra",
    "start": "2572440",
    "end": "2578740"
  },
  {
    "text": "when you have a schema K SQL DB as a consumer can tap into the schema",
    "start": "2578740",
    "end": "2583780"
  },
  {
    "text": "registry access that schema and then use that to parse the fields and their names so I don't have to type those out I",
    "start": "2583780",
    "end": "2589900"
  },
  {
    "text": "don't have to worry about misspelling things because I misspelled things all the time all I have to do in this case is specify what field should should",
    "start": "2589900",
    "end": "2597160"
  },
  {
    "text": "serve as the key because in a table we do need to know a key okay so I just have to explicitly call that out and",
    "start": "2597160",
    "end": "2604480"
  },
  {
    "text": "from here case go DB will read those events and and group by and choose the latest value for each key",
    "start": "2604480",
    "end": "2611560"
  },
  {
    "text": "okay so to run it this is the this is the conflict Cloud a kcodb console",
    "start": "2611560",
    "end": "2617920"
  },
  {
    "text": "um pretty simple it's just an editor you can run this in here kind of guess and check see it has nice error checking in",
    "start": "2617920",
    "end": "2623680"
  },
  {
    "text": "there see what syntax works and you just run this and it will start creating those tables or streams behind the",
    "start": "2623680",
    "end": "2629560"
  },
  {
    "text": "scenes okay so creating the stream all right so we have our readings I want to bring that into Kafka as well",
    "start": "2629560",
    "end": "2636099"
  },
  {
    "text": "similar construct except that we're you know using a stream instead of a table oops",
    "start": "2636099",
    "end": "2642339"
  },
  {
    "text": "um again you'll notice we're pointing to that Kafka topic we specify the value format Avro so again it's going to",
    "start": "2642339",
    "end": "2649300"
  },
  {
    "text": "capture all of those fields and types for us I don't have to think about it I am just specifying to keep it in line",
    "start": "2649300",
    "end": "2656079"
  },
  {
    "text": "with the table and naming that key with the ID so that we can do the joining later so I",
    "start": "2656079",
    "end": "2662920"
  },
  {
    "text": "will take this I run it through the editor and then that's going to be available as input to that streaming",
    "start": "2662920",
    "end": "2668980"
  },
  {
    "text": "application okay so we have those two sources available",
    "start": "2668980",
    "end": "2674740"
  },
  {
    "text": "we have our metadata we have our readings available within that stream processing application and now we need to start combining them right enriching",
    "start": "2674740",
    "end": "2681160"
  },
  {
    "text": "the one with the other okay so this is going to help me with the the",
    "start": "2681160",
    "end": "2686200"
  },
  {
    "text": "actual and you know heavy lifting I want to be doing later okay so first thing",
    "start": "2686200",
    "end": "2691839"
  },
  {
    "text": "let's look at the actual the SQL this is going to feel very familiar this is a select statement",
    "start": "2691839",
    "end": "2697599"
  },
  {
    "text": "for a regular join right so I'm selecting all the fields that I want as output from the main readings topic and",
    "start": "2697599",
    "end": "2706599"
  },
  {
    "text": "we're going to conduct an inner join with the metadata just to make sure that I always have all of the information I need at the end I want to make sure I",
    "start": "2706599",
    "end": "2712599"
  },
  {
    "text": "have metadata for whatever readings I get in um and we're joining on those readings those ID fields",
    "start": "2712599",
    "end": "2719560"
  },
  {
    "text": "right we're creating a stream from this okay",
    "start": "2719560",
    "end": "2724780"
  },
  {
    "text": "um because I don't want I don't want a table right I want all of the values every time we conduct this join I want",
    "start": "2724780",
    "end": "2731500"
  },
  {
    "text": "that value to be output I want that row that event to be present in the output okay and since this represents since our",
    "start": "2731500",
    "end": "2739240"
  },
  {
    "text": "input topic the readings is an unbounded ongoing series of events the output",
    "start": "2739240",
    "end": "2744280"
  },
  {
    "text": "should be as well so I'm specifying here just the topic I want to populate with that data we're going to use that Avro",
    "start": "2744280",
    "end": "2750579"
  },
  {
    "text": "format again and then one other thing to notice you might may have missed it all the way at the bottom here emit changes okay",
    "start": "2750579",
    "end": "2758079"
  },
  {
    "text": "so that select statement here I could just execute that on its own in k-sql",
    "start": "2758079",
    "end": "2766260"
  },
  {
    "text": "it's not going to Output it's not going to be a persisted query that will output",
    "start": "2766260",
    "end": "2772780"
  },
  {
    "text": "all of the information as new events come in on the readings topic it'll just give me you know what's what's already",
    "start": "2772780",
    "end": "2779079"
  },
  {
    "text": "there but by adding emit changes I say every time a new event a new change is",
    "start": "2779079",
    "end": "2785920"
  },
  {
    "text": "detected on these input topics I want you to Output that result okay and we are going to append it to",
    "start": "2785920",
    "end": "2792160"
  },
  {
    "text": "that stream that we just defined okay this is contrasted with a pull query",
    "start": "2792160",
    "end": "2797740"
  },
  {
    "text": "like I said when we remove that emit changes so I can just execute this and this is just going to give me the current state of the application what",
    "start": "2797740",
    "end": "2804040"
  },
  {
    "text": "what do I currently have in these topics we're not going to persist this query just give me the output so in this case",
    "start": "2804040",
    "end": "2810880"
  },
  {
    "text": "I'm just selecting I want to know the plants whose low moisture threshold is greater than 20 and it's just going to",
    "start": "2810880",
    "end": "2817060"
  },
  {
    "text": "Output these three plants their names and it's done the queries over right",
    "start": "2817060",
    "end": "2822160"
  },
  {
    "text": "it's not persistent it's not going to wait for more changes it is done okay",
    "start": "2822160",
    "end": "2827619"
  },
  {
    "text": "so I've enriched the data oh no I'm running behind I enriched the data so now we need to",
    "start": "2827619",
    "end": "2833859"
  },
  {
    "text": "actually do the analysis how do I get that alert at the end right so",
    "start": "2833859",
    "end": "2841019"
  },
  {
    "text": "really quick let's let's talk about what I want to achieve here right whenever a plant has enough has low moisture",
    "start": "2841240",
    "end": "2847780"
  },
  {
    "text": "readings right indicating that it needs to be watered I I want an alert on my phone right",
    "start": "2847780",
    "end": "2853780"
  },
  {
    "text": "how do I determine when to ascend alert and how often should I be sending these right if every if I alert on every",
    "start": "2853780",
    "end": "2860319"
  },
  {
    "text": "reading that's coming through the system I'm going to get a lot of alerts when the plant needs to be watered right so let's reduce that",
    "start": "2860319",
    "end": "2867760"
  },
  {
    "text": "um so I figured if I'm out of the house or whatever I'm in Norway receiving an alert every you know six",
    "start": "2867760",
    "end": "2874599"
  },
  {
    "text": "hours or so is probably good enough right and I've changed this over time depending on where I'm going and what I need to be doing",
    "start": "2874599",
    "end": "2880660"
  },
  {
    "text": "um but that's good enough like that gives me time to either get home not in this case um or tell my partner to water",
    "start": "2880660",
    "end": "2885819"
  },
  {
    "text": "the plant right also the per these sensors aren't perfect I noticed that I would get false",
    "start": "2885819",
    "end": "2891760"
  },
  {
    "text": "lower false High readings within a set you know set of time but the general Trend over time is that",
    "start": "2891760",
    "end": "2897579"
  },
  {
    "text": "the plant needs to be watered right the moisture goes down so I figured that you know over a six",
    "start": "2897579",
    "end": "2903339"
  },
  {
    "text": "hour period I'm getting I think 720 readings for each plant it's probably",
    "start": "2903339",
    "end": "2908380"
  },
  {
    "text": "good enough if I receive like an hour's worth of low readings that probably means the plant needs to be watered",
    "start": "2908380",
    "end": "2913480"
  },
  {
    "text": "right it's pretty pretty good so this is what I wrote to achieve this all",
    "start": "2913480",
    "end": "2918579"
  },
  {
    "text": "right a lot to impact here first first thing okay so how do I get it over six hours",
    "start": "2918579",
    "end": "2925900"
  },
  {
    "text": "right tumbling window this is great non-overlapping tumbling tumbling tumbling Windows",
    "start": "2925900",
    "end": "2931240"
  },
  {
    "text": "um one line you can specify this so as this information comes in and it's first",
    "start": "2931240",
    "end": "2936520"
  },
  {
    "text": "going to be grouped in a window and assessed as part of that window okay six hours grace period of 10 minutes just",
    "start": "2936520",
    "end": "2943420"
  },
  {
    "text": "we're we're just going to wait 10 minutes at the end of it to see if any new events come in for that window",
    "start": "2943420",
    "end": "2948940"
  },
  {
    "text": "pretty easy and from here we're saying that okay first of all we're going to",
    "start": "2948940",
    "end": "2955480"
  },
  {
    "text": "filter for the low moisture events right whenever the moisture from the incoming reading is lower than that low moisture",
    "start": "2955480",
    "end": "2961599"
  },
  {
    "text": "threshold this is an event that I want to filter for and consider okay and we're going you can see that as part",
    "start": "2961599",
    "end": "2968200"
  },
  {
    "text": "of the select statement that we are counting those low readings right anytime an event incoming event meets",
    "start": "2968200",
    "end": "2973839"
  },
  {
    "text": "this filter we are going to count it right",
    "start": "2973839",
    "end": "2978940"
  },
  {
    "text": "but we only want to Output an event if it's more than an hour's worth of low",
    "start": "2978940",
    "end": "2986200"
  },
  {
    "text": "readings right oops okay another couple things and I",
    "start": "2986200",
    "end": "2992740"
  },
  {
    "text": "this might be kind of a tough thing to to understand I mean it took me a while to really grasp what's going on in this",
    "start": "2992740",
    "end": "3000060"
  },
  {
    "text": "and understanding so this is a stateful operation right there is an underlying State associated with each plant",
    "start": "3000060",
    "end": "3006180"
  },
  {
    "text": "per window in this query okay so as events come in we're first",
    "start": "3006180",
    "end": "3012000"
  },
  {
    "text": "assessing which window is it part of right which state does this information belong to which we look at that plant ID",
    "start": "3012000",
    "end": "3017520"
  },
  {
    "text": "we look at the the time stamp and we put it as part of that but within that window with for that plant there is",
    "start": "3017520",
    "end": "3023400"
  },
  {
    "text": "there's an underlying State represented by this low readings count okay so as events come in we're incrementing that",
    "start": "3023400",
    "end": "3030359"
  },
  {
    "text": "counter and emit final we have that at the end here where we saw emit changes",
    "start": "3030359",
    "end": "3035520"
  },
  {
    "text": "before emit final specifies that we're not going to Output changes like emit",
    "start": "3035520",
    "end": "3041099"
  },
  {
    "text": "changes right we don't want to Output every event that comes through but we're going to wait for the window to close before we output an event and",
    "start": "3041099",
    "end": "3048660"
  },
  {
    "text": "assess whether or not we should output an event so we're going to wait for my six hour window to close given an",
    "start": "3048660",
    "end": "3054300"
  },
  {
    "text": "additional 10 minutes just in case things come in and if that low reading count is above 120 we're going to Output",
    "start": "3054300",
    "end": "3061500"
  },
  {
    "text": "an event at the end of this okay that's exactly what I wanted to achieve",
    "start": "3061500",
    "end": "3066780"
  },
  {
    "text": "how cool is that okay so I have those reading those alerts in Kafka now it's",
    "start": "3066780",
    "end": "3072119"
  },
  {
    "text": "being saved in that houseplant low readings topic right so now I need to get it out of Kafka",
    "start": "3072119",
    "end": "3078599"
  },
  {
    "text": "right this is a job for Kafka connect okay I don't have to reinvent the wheel I don't have to think about it I set up",
    "start": "3078599",
    "end": "3083640"
  },
  {
    "text": "an HTTP sync connector so I said I wanted to get this information on my",
    "start": "3083640",
    "end": "3088740"
  },
  {
    "text": "phone through Telegram telegram has a really really convenient chat API so I was able to set up a bot",
    "start": "3088740",
    "end": "3094980"
  },
  {
    "text": "for my project and its sole purpose is to let me know when a plant needs to be watered right",
    "start": "3094980",
    "end": "3102420"
  },
  {
    "text": "so I get an alert on my phone I use whatever the the key the token that telegram gives me for that bot and I",
    "start": "3102420",
    "end": "3109020"
  },
  {
    "text": "have an endpoint that I can send information to for my specific conversation with that bot and so I",
    "start": "3109020",
    "end": "3114660"
  },
  {
    "text": "hooked it up with a Kafka connector and every time a new event comes in on that low readings field that Lowe's readings topic the connector is going to pick",
    "start": "3114660",
    "end": "3121380"
  },
  {
    "text": "that up and send it to my phone okay pretty convenient and so this is",
    "start": "3121380",
    "end": "3126480"
  },
  {
    "text": "what I get on my phone now um you know Bradley needs to be watered so it's pretty great uh it's very it guilts me",
    "start": "3126480",
    "end": "3134040"
  },
  {
    "text": "um but yeah it's great all right so this is what we achieve right we we're capturing our readings we're combining",
    "start": "3134040",
    "end": "3140520"
  },
  {
    "text": "with metadata doing some stream processing I get an information information on my phone this is wonderful",
    "start": "3140520",
    "end": "3147300"
  },
  {
    "text": "I can do better okay um so right now you know I'm monitoring four plants",
    "start": "3147300",
    "end": "3152880"
  },
  {
    "text": "but okay what if I figure you know those plants are fine I know I have a regular schedule on when they need to be watered",
    "start": "3152880",
    "end": "3159240"
  },
  {
    "text": "I understand what they need I want to switch some plants out or maybe I want to update the metadata I don't want to go run that script every time I want to",
    "start": "3159240",
    "end": "3166440"
  },
  {
    "text": "update plant information right so I figure okay I'm already using telegram okay I",
    "start": "3166440",
    "end": "3172079"
  },
  {
    "text": "already have my conversation with my bot what if I could produce data to Kafka from Telegram",
    "start": "3172079",
    "end": "3177720"
  },
  {
    "text": "and have my own little personal personalized interactive application to move my plant sensors around right say",
    "start": "3177720",
    "end": "3185359"
  },
  {
    "text": "and update my plant metadata as well so right",
    "start": "3185359",
    "end": "3190980"
  },
  {
    "text": "yeah we're going back to this question is there a better way right I don't want to operate I don't want to run that script every time",
    "start": "3190980",
    "end": "3196200"
  },
  {
    "text": "um and I think this is more interesting you know I've got my my customized app now to interact with my plants",
    "start": "3196200",
    "end": "3202980"
  },
  {
    "text": "okay so this is the more practical setup that I want to use right we're still",
    "start": "3202980",
    "end": "3208559"
  },
  {
    "text": "capturing those readings from the Raspberry Pi but also I want to be generating that plant metadata from my",
    "start": "3208559",
    "end": "3214440"
  },
  {
    "text": "phone using telegram throwing that into Kafka but my Raspberry Pi also needs to be aware of that information right",
    "start": "3214440",
    "end": "3221520"
  },
  {
    "text": "because as I'm moving sensors around I need to be able to update that mapping within that script",
    "start": "3221520",
    "end": "3228420"
  },
  {
    "text": "that's generating the readings so we're going to use telegram as a",
    "start": "3228420",
    "end": "3233700"
  },
  {
    "text": "producer right I said it has that very convenient chat API there's a python telegram bot module library that is a",
    "start": "3233700",
    "end": "3241559"
  },
  {
    "text": "wrapper for the API so using that you can define a full like conversation handlers to say okay okay you've",
    "start": "3241559",
    "end": "3248640"
  },
  {
    "text": "responded to this thing now respond to this and give me this information you can request every piece of information",
    "start": "3248640",
    "end": "3253880"
  },
  {
    "text": "for your particular use case and so I have these two options available to update either the plant",
    "start": "3253880",
    "end": "3260520"
  },
  {
    "text": "metadata you know maybe the low moisture threshold is actually different for that plant or I want to add a new set of",
    "start": "3260520",
    "end": "3267059"
  },
  {
    "text": "metadata for a new plant so I can do that through here but then also I need to be able to update the mappings if I'm",
    "start": "3267059",
    "end": "3273599"
  },
  {
    "text": "moving sensors around I need to be able to say that this sensor ID is mapped to this plant okay so I have this option",
    "start": "3273599",
    "end": "3280440"
  },
  {
    "text": "now and I need a new schema all right so in this case",
    "start": "3280440",
    "end": "3285839"
  },
  {
    "text": "I need to be able to communicate those the sensor plant ID mapping so I just",
    "start": "3285839",
    "end": "3291540"
  },
  {
    "text": "have a new new schema new topic destroys information in where I have that sensor mapped to that particular plant",
    "start": "3291540",
    "end": "3299180"
  },
  {
    "text": "and so this is the general General Loop that I I altered the the script that's",
    "start": "3299760",
    "end": "3305280"
  },
  {
    "text": "running on the the Raspberry Pi so we are consuming from that sensor",
    "start": "3305280",
    "end": "3310319"
  },
  {
    "text": "plant mapping topic and this topic is compact meaning that every time that we",
    "start": "3310319",
    "end": "3315960"
  },
  {
    "text": "add a new or we update a key we're only going to keep the lightest value over time",
    "start": "3315960",
    "end": "3321540"
  },
  {
    "text": "so in that Loop rather than just capturing the readings from the the soil",
    "start": "3321540",
    "end": "3326640"
  },
  {
    "text": "moisture sensors we are first going to see if there's new changes on those plant sensor mappings right",
    "start": "3326640",
    "end": "3334319"
  },
  {
    "text": "so it's going to do that um as that consumer is going to do that and then pass those plant addresses into",
    "start": "3334319",
    "end": "3339599"
  },
  {
    "text": "the producer something about the consumer is that I use these particular",
    "start": "3339599",
    "end": "3344819"
  },
  {
    "text": "configurations with it this is getting into some nitty-gritty details here basically I every time I restart this",
    "start": "3344819",
    "end": "3351900"
  },
  {
    "text": "application I want my consumer to start from zero to start from the earliest event in the topic",
    "start": "3351900",
    "end": "3357420"
  },
  {
    "text": "so I'm not going to save its bookmark I'm not going to let it commit any any offsets okay so I tell it to start from",
    "start": "3357420",
    "end": "3365339"
  },
  {
    "text": "the beginning using Auto offset reset meaning that if we don't have a bookmark start from zero and then I'm also saying",
    "start": "3365339",
    "end": "3371520"
  },
  {
    "text": "enable auto commit we're turning that off so it's not going to commit a bookmark",
    "start": "3371520",
    "end": "3377539"
  },
  {
    "text": "and then from this you know I was able to Define my conversation handlers so I",
    "start": "3378480",
    "end": "3384540"
  },
  {
    "text": "can in this case we're updating the sensor mappings it will ask me for which sensor ID I want to actually update here",
    "start": "3384540",
    "end": "3391859"
  },
  {
    "text": "I can specify the plant ID and it will tell me whether or not it",
    "start": "3391859",
    "end": "3397020"
  },
  {
    "text": "has been committed to Kafka I'm still refining this to be more user friendly but I am the only user so",
    "start": "3397020",
    "end": "3403200"
  },
  {
    "text": "good enough all right and the same thing for the plant data this is the most useful part for me um just updating the",
    "start": "3403200",
    "end": "3409559"
  },
  {
    "text": "plant ID there are some defaults in there as well so if I don't",
    "start": "3409559",
    "end": "3414660"
  },
  {
    "text": "want to deal with the temperature I can just skip that and again follow the same process of committing that to Kafka",
    "start": "3414660",
    "end": "3423059"
  },
  {
    "text": "all right so I'm happy you know the if we're",
    "start": "3423059",
    "end": "3428400"
  },
  {
    "text": "looking at the user stories for this I'm very pleased I got exactly what I wanted out of this application right",
    "start": "3428400",
    "end": "3434160"
  },
  {
    "text": "um and I hope okay I know I know this is really this is this is my thing and I",
    "start": "3434160",
    "end": "3439680"
  },
  {
    "text": "hope that you're inspired if you haven't done a hardware related project or you haven't done one with Kafka maybe you",
    "start": "3439680",
    "end": "3444960"
  },
  {
    "text": "will think about that right but the cooler thing is I know we had fun here",
    "start": "3444960",
    "end": "3450420"
  },
  {
    "text": "but I tricked you okay everything that I did all the tools that",
    "start": "3450420",
    "end": "3455579"
  },
  {
    "text": "I showed you are all components that you're going to use in every streaming data pipeline that you're going to build",
    "start": "3455579",
    "end": "3461099"
  },
  {
    "text": "using Kafka right knowing how to use Kafka connect to capture information for you know data at rest and move into",
    "start": "3461099",
    "end": "3466980"
  },
  {
    "text": "Kafka using the producer API to capture information in real time and move into",
    "start": "3466980",
    "end": "3472260"
  },
  {
    "text": "Kafka using stream processing with KC go DB and moving it out of Kafka at the end",
    "start": "3472260",
    "end": "3477660"
  },
  {
    "text": "either with connect or building some consumers these are all of the components you need to build",
    "start": "3477660",
    "end": "3483359"
  },
  {
    "text": "any streaming data pipeline it might be some extra things in there depending on your use case but you now are at least",
    "start": "3483359",
    "end": "3488880"
  },
  {
    "text": "familiar with all the tools that you need to get started and I hope that you will right so if you do end up building",
    "start": "3488880",
    "end": "3495660"
  },
  {
    "text": "something interesting or if you'd like to get started I have resources on the",
    "start": "3495660",
    "end": "3501180"
  },
  {
    "text": "right thing oh my God I don't know there's initially there's resources from conflict developer how to get started",
    "start": "3501180",
    "end": "3506940"
  },
  {
    "text": "with Kafka with confluent with the cloud-based platform and then also if",
    "start": "3506940",
    "end": "3511980"
  },
  {
    "text": "you're interested in seeing more of the you know how I actually built my particular system I don't know maybe",
    "start": "3511980",
    "end": "3517020"
  },
  {
    "text": "there's something else you want to monitor in your house all of that's available there and I encourage you to",
    "start": "3517020",
    "end": "3522299"
  },
  {
    "text": "take a look so and with that any haha questions",
    "start": "3522299",
    "end": "3528839"
  },
  {
    "text": "yes",
    "start": "3528839",
    "end": "3531319"
  },
  {
    "text": "yes",
    "start": "3535680",
    "end": "3537740"
  },
  {
    "text": "great question that would be a lot uh he's asking how that would scale if I was trying to actually use this for all",
    "start": "3548160",
    "end": "3553920"
  },
  {
    "text": "of my plants um it would not scale well there's a lot of coupling in there a lot of with",
    "start": "3553920",
    "end": "3559859"
  },
  {
    "text": "physical wires um and I would trip over all of them but so the raspberry pies it is just not",
    "start": "3559859",
    "end": "3565740"
  },
  {
    "text": "economic for me to buy that many raspberry pies to to set this up if Pi",
    "start": "3565740",
    "end": "3572400"
  },
  {
    "text": "zeros were available right now which they are just not for me and they're also like 80 in the US",
    "start": "3572400",
    "end": "3578640"
  },
  {
    "text": "um yes if those are cheaper I am looking into alternative setups not with a Raspberry Pi but there are smaller",
    "start": "3578640",
    "end": "3585540"
  },
  {
    "text": "boards that you can get that just operate off of a small battery that I could connect the sensors to so I could",
    "start": "3585540",
    "end": "3591540"
  },
  {
    "text": "potentially have a couple of those um you know hooked up to two or three sensors and capturing information in",
    "start": "3591540",
    "end": "3597960"
  },
  {
    "text": "different clusters around the house I am in the process of moving I haven't gotten to that yet but I do I am",
    "start": "3597960",
    "end": "3604680"
  },
  {
    "text": "actually looking into getting those boards and setting it up that way instead so that I can at least kind of localize and reduce the amount of wires",
    "start": "3604680",
    "end": "3611520"
  },
  {
    "text": "that I do need um yeah because right now it does not scale it",
    "start": "3611520",
    "end": "3616920"
  },
  {
    "text": "does not I could scale Kafka could handle it but it does not scale",
    "start": "3616920",
    "end": "3621980"
  },
  {
    "text": "[Laughter] yeah catch my talk next year it'll be about this this robot yeah that's true",
    "start": "3626550",
    "end": "3633720"
  },
  {
    "text": "well so to get around that that's kind of why I built the second part of this where I have the interactive app so that",
    "start": "3633720",
    "end": "3639119"
  },
  {
    "text": "I can move the sensor around uh with a you know a little easier right",
    "start": "3639119",
    "end": "3645000"
  },
  {
    "text": "um so I don't have to think about it's not just limited to those same floor plans",
    "start": "3645000",
    "end": "3650058"
  },
  {
    "text": "any other questions yes yes well yes",
    "start": "3650099",
    "end": "3657059"
  },
  {
    "text": "um free to a degree yeah so um when you're getting started with",
    "start": "3657059",
    "end": "3662700"
  },
  {
    "text": "Cloud you get free credits that are enough to use I think it within two",
    "start": "3662700",
    "end": "3669059"
  },
  {
    "text": "months or so um it's good enough to get started on one of these things but yes there are always promo codes",
    "start": "3669059",
    "end": "3677160"
  },
  {
    "text": "that we have coming out that you can you can use to your heart's desire",
    "start": "3677160",
    "end": "3682920"
  },
  {
    "text": "anyone else I think I saw some questions yep",
    "start": "3682920",
    "end": "3687260"
  },
  {
    "text": "have I learned anything about the plants that they're really dramatic they're just they're so needy like you don't",
    "start": "3697200",
    "end": "3702599"
  },
  {
    "text": "realize how often you're taking care of them until like you physically like I have an alert and I can look through the history and I'm like man like dude am I",
    "start": "3702599",
    "end": "3710700"
  },
  {
    "text": "awful like you know um but it is really nice that like I for the plants that I",
    "start": "3710700",
    "end": "3716339"
  },
  {
    "text": "do have hooked up to this I fully rely on this application now so it's like if it fails they might die like I don't",
    "start": "3716339",
    "end": "3722819"
  },
  {
    "text": "water until I get an alert uh which is pretty cool but I am learning more about like the fine tuning of of the of the",
    "start": "3722819",
    "end": "3730079"
  },
  {
    "text": "metadata like understanding um and now like I'm I'm definitely better at just like",
    "start": "3730079",
    "end": "3736859"
  },
  {
    "text": "looking at the soil and I'm like okay well I I know that this isn't like below 20 moisture level now because I haven't",
    "start": "3736859",
    "end": "3743099"
  },
  {
    "text": "got an alert so it's like it's cool that yeah I'm learning a little bit more",
    "start": "3743099",
    "end": "3748520"
  },
  {
    "text": "anyone else yes",
    "start": "3748799",
    "end": "3752780"
  },
  {
    "text": "um well I work for confluent that's the first and I have all of these tools at my",
    "start": "3761099",
    "end": "3767520"
  },
  {
    "text": "disposal um but also it was just easier so I can",
    "start": "3767520",
    "end": "3773460"
  },
  {
    "text": "tap into this information a little more easily when I want to build more applications off of it over the summer I",
    "start": "3773460",
    "end": "3779400"
  },
  {
    "text": "had an intern that wanted to do a little bit more analysis on the plants combine it with other data sets and so I was",
    "start": "3779400",
    "end": "3786059"
  },
  {
    "text": "able to just give him access to that particular topic and he could just you know start doing stream processing so if",
    "start": "3786059",
    "end": "3792900"
  },
  {
    "text": "you know I wasn't looking at Kafka as like the the end goal of where to put this information but it's really just",
    "start": "3792900",
    "end": "3798660"
  },
  {
    "text": "that middle layer so that other other clients other applications can tap into it when they need to",
    "start": "3798660",
    "end": "3804540"
  },
  {
    "text": "um but I did look into I mean there's other Arguments for maybe using like mqtt very common in iot",
    "start": "3804540",
    "end": "3810480"
  },
  {
    "text": "um which really I can point you to some resources that you know talking about how mqtt goes really well with Kafka so",
    "start": "3810480",
    "end": "3819059"
  },
  {
    "text": "you know even if I had gone that route I probably still would have had the information in Kafka eventually um just",
    "start": "3819059",
    "end": "3824940"
  },
  {
    "text": "to have that persisted uh information and all you know allow other people to tap into it",
    "start": "3824940",
    "end": "3831319"
  },
  {
    "text": "good question anyone else",
    "start": "3832020",
    "end": "3837359"
  },
  {
    "text": "yes oh my God list all of the plant names",
    "start": "3837359",
    "end": "3845240"
  },
  {
    "text": "absolutely not um so at the beginning of the pandemic though",
    "start": "3845400",
    "end": "3850920"
  },
  {
    "text": "um my neighbor I was living in a small apartment my neighbors probably hated me because my my craft my hobby to keep me",
    "start": "3850920",
    "end": "3857160"
  },
  {
    "text": "busy while I had all those plants was to create name tags for them",
    "start": "3857160",
    "end": "3862799"
  },
  {
    "text": "um so I got a bunch of little copper tags and a tiny set of letters like pins with letters at the end so I could",
    "start": "3862799",
    "end": "3868680"
  },
  {
    "text": "Hammer them into it um that took me about a week that kept me",
    "start": "3868680",
    "end": "3874260"
  },
  {
    "text": "busy I was like man this is going to take months it's great and like five days later I was done my neighbors were like are you are you leaving anytime",
    "start": "3874260",
    "end": "3881940"
  },
  {
    "text": "soon can you leave um but that was very helpful in uh sort of keeping track of the names so I don't",
    "start": "3881940",
    "end": "3889260"
  },
  {
    "text": "just forget who's who um and knowing the scientific names that's the thing that I really wanted to",
    "start": "3889260",
    "end": "3894359"
  },
  {
    "text": "know is like be able to look at a plant and know what it's called um it's just kind of fun gotta store",
    "start": "3894359",
    "end": "3899880"
  },
  {
    "text": "that information somewhere anyone else",
    "start": "3899880",
    "end": "3906559"
  },
  {
    "text": "okay well with that I mean you can find me later I'll be walking around um I hope you enjoyed this and and I",
    "start": "3906839",
    "end": "3913859"
  },
  {
    "text": "hope you're inspired if you do end up building something definitely reach out to me either LinkedIn on Twitter I'd like to see what you make right thank",
    "start": "3913859",
    "end": "3920400"
  },
  {
    "text": "you",
    "start": "3920400",
    "end": "3922578"
  }
]