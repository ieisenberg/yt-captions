[
  {
    "text": "okay let's get started so hopefully you are all here for a talk on doing open",
    "start": "7000",
    "end": "13320"
  },
  {
    "text": "Telemetry and more practical stuff rather than Theory um around",
    "start": "13320",
    "end": "19000"
  },
  {
    "text": "that if not now's your chance lock the doors everyone okay who am I my name is Martin",
    "start": "19000",
    "end": "27439"
  },
  {
    "text": "th I am an observability Evangel first and foremost I've been talking",
    "start": "27439",
    "end": "33200"
  },
  {
    "text": "about trying to get the the right visibility in your systems understanding what's going on in production for many",
    "start": "33200",
    "end": "40079"
  },
  {
    "text": "many many years um I am also a developer advocate for a company called honeycomb",
    "start": "40079",
    "end": "45120"
  },
  {
    "text": "they pay for me to be here please go to the website have a look we have a free to woohooo Right Moving on um you can",
    "start": "45120",
    "end": "50559"
  },
  {
    "text": "find me on Twitter um I will not call it the other word it is called Twitter um",
    "start": "50559",
    "end": "56000"
  },
  {
    "text": "or masteron I'm around follow me for a bit of British schark with some observability thrown in you've been",
    "start": "56000",
    "end": "62039"
  },
  {
    "text": "warned no complaints okay I'm going to start by talking a little bit about why so why is",
    "start": "62039",
    "end": "68040"
  },
  {
    "text": "it that we care about things like observability but what is it this is a definition from R CTO um",
    "start": "68040",
    "end": "76960"
  },
  {
    "text": "who coined the term in the context of software around six seven years ago um it comes from something called control",
    "start": "76960",
    "end": "82880"
  },
  {
    "text": "theory in science it's not something that's new it's something that we've repurposed but observability is about",
    "start": "82880",
    "end": "90159"
  },
  {
    "text": "understanding and debugging the unknown unknowns so the things we didn't know that we needed to know when we wrote the",
    "start": "90159",
    "end": "96200"
  },
  {
    "text": "code and the ability to understand the inner System state so what's going on inside of our",
    "start": "96200",
    "end": "103560"
  },
  {
    "text": "application just by what the application gives us as an output the outputs are what we call",
    "start": "103560",
    "end": "110799"
  },
  {
    "text": "Telemetry we call them Telemetry signals but that's what observability is now you notice there that definition",
    "start": "110799",
    "end": "117960"
  },
  {
    "text": "does not include logs it does not include metrics doesn't include traces or profiles or exceptions or events or",
    "start": "117960",
    "end": "125680"
  },
  {
    "text": "any of the other signal data that forms part of open Telemetry or what you may",
    "start": "125680",
    "end": "132520"
  },
  {
    "text": "have used for monitoring in the past because that's not what observability about is about it's this part it's",
    "start": "132520",
    "end": "140000"
  },
  {
    "text": "understanding the inner System state how you do that isn't",
    "start": "140000",
    "end": "146480"
  },
  {
    "text": "important it's about how do you understand that inner system State can you understand that inner System",
    "start": "146480",
    "end": "153400"
  },
  {
    "text": "state at its heart it's about asking questions that's what observability is",
    "start": "153400",
    "end": "158800"
  },
  {
    "text": "what was the impact of the change that I've just made is that code that I've wrote just",
    "start": "158800",
    "end": "164440"
  },
  {
    "text": "being used is that feature that we've just deployed being used the times of each endpoint have",
    "start": "164440",
    "end": "171519"
  },
  {
    "text": "those changed those third parties the exchange rate service that you're calling out to",
    "start": "171519",
    "end": "177920"
  },
  {
    "text": "is that is that performance changing over time everybody's cross region or cross availability zone",
    "start": "177920",
    "end": "184440"
  },
  {
    "text": "now is it specific requests that are going over specific regions for specific end points that are our",
    "start": "184440",
    "end": "190840"
  },
  {
    "text": "problem that is what observability is it's about can we answer these",
    "start": "190840",
    "end": "198799"
  },
  {
    "text": "questions why does it matter well we we've been doing APM and monitoring and all of those kind of things for decades",
    "start": "198799",
    "end": "206680"
  },
  {
    "text": "I was going to say centuries but you know it just feels that way",
    "start": "206680",
    "end": "211760"
  },
  {
    "text": "ums um yeah I mean nobody's been doing this since net Aspire came out right nobody nobody did anything before that",
    "start": "212480",
    "end": "218000"
  },
  {
    "text": "came out so why does it matter why does it matter now well um I've been have I've had this slide in my presentation",
    "start": "218000",
    "end": "224480"
  },
  {
    "text": "for about two years now nobody's ever disagreed with that statement because what we're asking",
    "start": "224480",
    "end": "230879"
  },
  {
    "text": "people to do now is different to what we used to ask them to do we're we're asking them to ship more often it's like",
    "start": "230879",
    "end": "236560"
  },
  {
    "text": "can you ship with every commit can you ship every day every hour it's not the six-month release cycle",
    "start": "236560",
    "end": "242680"
  },
  {
    "text": "where you go home on a Friday throw it over to the QA team come back three weeks later and they go here's all the",
    "start": "242680",
    "end": "247959"
  },
  {
    "text": "bugs right go and fix all the bugs and then in six months you go and release it that's no longer where we are customer",
    "start": "247959",
    "end": "253560"
  },
  {
    "text": "expectations have changed but while we're asking them to ship more often we're also saying yeah can you can you",
    "start": "253560",
    "end": "259160"
  },
  {
    "text": "make the code better as well can you spend more time less time fixing bugs and more time doing",
    "start": "259160",
    "end": "264479"
  },
  {
    "text": "features but also can we have less downtime as well the expectations of stakeholders",
    "start": "264479",
    "end": "270840"
  },
  {
    "text": "and customers are no longer where they were we're now at a point where minutes",
    "start": "270840",
    "end": "276440"
  },
  {
    "text": "of downtime will lose you",
    "start": "276440",
    "end": "281360"
  },
  {
    "text": "millions that isn't where things used to be if a website went down 15 years ago",
    "start": "281639",
    "end": "287039"
  },
  {
    "text": "people would say I'll come back tomorrow there are still websites that don't work on a",
    "start": "287039",
    "end": "293520"
  },
  {
    "text": "Sunday seriously there is a website that says we don't work on a Sunday um",
    "start": "293520",
    "end": "300400"
  },
  {
    "text": "but generally if something goes down for 30 seconds goes down for a minute you'll",
    "start": "300400",
    "end": "305639"
  },
  {
    "text": "go to another website and buy it from there customer expectations stakeholder",
    "start": "305639",
    "end": "311360"
  },
  {
    "text": "expectations have changed and we're asking Engineers to do more if we don't give them more tools if we don't give",
    "start": "311360",
    "end": "316520"
  },
  {
    "text": "them better ways to do these things then why weren't they doing them",
    "start": "316520",
    "end": "322039"
  },
  {
    "text": "10 years ago 15 years ago systems are changed working in a",
    "start": "322039",
    "end": "327639"
  },
  {
    "text": "production environment is challenging with move to a mode where you build it you run it devop",
    "start": "327639",
    "end": "333479"
  },
  {
    "text": "methodology but there's way more that we need to know as an engineer now we've got microservices we've got event Ren",
    "start": "333479",
    "end": "339240"
  },
  {
    "text": "architectures we've got 15 to 20 different services that are interacting to serve an individual user request we",
    "start": "339240",
    "end": "346240"
  },
  {
    "text": "need to know about all those things and we're afraid to break things because if we do push something out",
    "start": "346240",
    "end": "352520"
  },
  {
    "text": "it'll be in production in the next hour and then it's broken production so we're scared of deploying some",
    "start": "352520",
    "end": "358639"
  },
  {
    "text": "things now I don't know about you but my memory does not move to like two weeks I",
    "start": "358639",
    "end": "364560"
  },
  {
    "text": "forgot what we deployed what we wrote two weeks ago when we deploy it at the end of a",
    "start": "364560",
    "end": "370919"
  },
  {
    "text": "Sprint and ultimately we can't figure out why it went wrong in order to fix it",
    "start": "370919",
    "end": "376479"
  },
  {
    "text": "all of that leads into people lacking psychological safety when it comes to working in",
    "start": "376479",
    "end": "382680"
  },
  {
    "text": "production where we're at is production is scary the big rack with the Blinky",
    "start": "382680",
    "end": "387720"
  },
  {
    "text": "lights I Don't Go Near that that's somebody else's job cuz it's scary it's got wires coming out of it and",
    "start": "387720",
    "end": "394319"
  },
  {
    "text": "everything and what we need to do and that's where observability comes in is how do we move from an a culture where",
    "start": "394319",
    "end": "400479"
  },
  {
    "text": "production is a scary thing that only a few people should be able to touch it because it can go wrong how do we move",
    "start": "400479",
    "end": "407919"
  },
  {
    "text": "to a mode where production is just another member of our team if you think about how you deliver value to customers",
    "start": "407919",
    "end": "413800"
  },
  {
    "text": "can you deliver value to customers without production you can't production is just a part of your",
    "start": "413800",
    "end": "420720"
  },
  {
    "text": "team that helps you deliver value to your customers and that's where observability",
    "start": "420720",
    "end": "425840"
  },
  {
    "text": "comes in that brings us on to open Telemetry so open Telemetry is a",
    "start": "425840",
    "end": "432440"
  },
  {
    "text": "protocol at its heart it is the methodology or the format of how we transfer data from our application our",
    "start": "432440",
    "end": "439840"
  },
  {
    "text": "signal data logs metrics events traces profiles all of that kind of stuff how",
    "start": "439840",
    "end": "445160"
  },
  {
    "text": "do we transfer in a standard compliance way to a backend end where we can",
    "start": "445160",
    "end": "450400"
  },
  {
    "text": "visualize that data we can ask those questions that is what makes open Telemetry so",
    "start": "450400",
    "end": "457400"
  },
  {
    "text": "powerful because it's not an individual vendor it's opinionated in its transfer",
    "start": "457400",
    "end": "464080"
  },
  {
    "text": "protocol there are certain other opinionated aspects but the reason why we had so many people in the open",
    "start": "464080",
    "end": "470120"
  },
  {
    "text": "Telemetry Community from vendors coming and committing back to the repositories it's because we don't",
    "start": "470120",
    "end": "476520"
  },
  {
    "text": "mandate how the data is stored analyzed and processed we only say this is how",
    "start": "476520",
    "end": "482199"
  },
  {
    "text": "you need to transfer it they also produce sdks for I believe",
    "start": "482199",
    "end": "487280"
  },
  {
    "text": "12 different languages now which means that you can move between languages and use the same Concepts so you can use the",
    "start": "487280",
    "end": "493560"
  },
  {
    "text": "term span span link span events traces logs resource attributes all these",
    "start": "493560",
    "end": "500440"
  },
  {
    "text": "terminologies translate across different languages it standardizes the way that we transfer context How We Do",
    "start": "500440",
    "end": "507960"
  },
  {
    "text": "correlation between multiple different languages Frameworks all of that kind of",
    "start": "507960",
    "end": "513599"
  },
  {
    "text": "stuff I've worked in organizations where we've created our own correlation",
    "start": "513599",
    "end": "521120"
  },
  {
    "text": "mechanisms where you've had to serialize things into multiple headers and then hope that you deserialize them at the",
    "start": "521120",
    "end": "527360"
  },
  {
    "text": "right point in another application and then somebody comes up and say we're going to use go and you're like I don't know how to read headers in go and I",
    "start": "527360",
    "end": "534399"
  },
  {
    "text": "need to be able to and then you end up building this whole ecosystem this whole cottage industry",
    "start": "534399",
    "end": "540079"
  },
  {
    "text": "open Telemetry fixes all that currently there are three core",
    "start": "540079",
    "end": "546680"
  },
  {
    "text": "signals I want to focus on a word there it's called signals it's not spelled",
    "start": "546680",
    "end": "552279"
  },
  {
    "text": "pillar there are three signals in open Telemetry not three",
    "start": "552279",
    "end": "558279"
  },
  {
    "text": "pillars the traces signal has been the most mature it was the first one that we built metrics came next which is why",
    "start": "558279",
    "end": "566079"
  },
  {
    "text": "that's stable across most of the languages now logs the protocol of how we transfer things is stable and there's",
    "start": "566079",
    "end": "573519"
  },
  {
    "text": "three languages in what net included that are stable at the SDK level that you can use that won't",
    "start": "573519",
    "end": "581760"
  },
  {
    "text": "change so let's talk a little bit about the signals what is a",
    "start": "582680",
    "end": "587760"
  },
  {
    "text": "trace it's hard to describe but it's a thing that's being done we don't create",
    "start": "587760",
    "end": "592959"
  },
  {
    "text": "a trace we don't say VAR Trace equals new Trace what we do is we create spans with",
    "start": "592959",
    "end": "601240"
  },
  {
    "text": "the same Trace ID so we create an ID and then when we everever whenever we",
    "start": "601240",
    "end": "608560"
  },
  {
    "text": "create a span we use the same Trace ID so a trace signifies a context a path",
    "start": "608560",
    "end": "616480"
  },
  {
    "text": "through your system for an individual context like a HTTP request or a an",
    "start": "616480",
    "end": "621839"
  },
  {
    "text": "event trigger uh maybe someone's put something in Blob storage and you want to be able to trigger that out all these",
    "start": "621839",
    "end": "627959"
  },
  {
    "text": "things are a thing that's being done and we use the same ID they all consist of spans so what is a span well at its",
    "start": "627959",
    "end": "636519"
  },
  {
    "text": "heart it's a structured blob of data that's all it is but it has some mandatory properties it has a unique ID",
    "start": "636519",
    "end": "643720"
  },
  {
    "text": "that signifies that particular span we call that a span ID it has a correlation",
    "start": "643720",
    "end": "650079"
  },
  {
    "text": "ID everybody's done correlation at some point they've had an XC correlation ID header or X request ID",
    "start": "650079",
    "end": "656440"
  },
  {
    "text": "header we call those Trace IDs it has a duration which is actually a",
    "start": "656440",
    "end": "663680"
  },
  {
    "text": "start and end date for this thing so it has a time stamp that allows us to calculate",
    "start": "663680",
    "end": "671000"
  },
  {
    "text": "duration and it has more importantly something called a causality",
    "start": "671040",
    "end": "676399"
  },
  {
    "text": "ID which was the action that was happening before this particular span was",
    "start": "676399",
    "end": "682880"
  },
  {
    "text": "created now if I take out that last item there's not much",
    "start": "683240",
    "end": "690160"
  },
  {
    "text": "different than a structured log that you may have had the amount of people who will add a",
    "start": "690160",
    "end": "696760"
  },
  {
    "text": "stopwatch in their code and then add the Tim stamp to the structured log so what they've got is a log entry with an ID",
    "start": "696760",
    "end": "703560"
  },
  {
    "text": "it's got the tra the correlation ID on it it's got a Time on it that it's started and it's got a",
    "start": "703560",
    "end": "709320"
  },
  {
    "text": "duration if you add that you've got a trace and that allows you to do things",
    "start": "709320",
    "end": "716160"
  },
  {
    "text": "like that causality graph or Trace waterfall that you see on the right hand side there and that's how we debug our",
    "start": "716160",
    "end": "722279"
  },
  {
    "text": "systems in production really logs are just fancy",
    "start": "722279",
    "end": "728480"
  },
  {
    "text": "traces sorry all the way around traces are just fancy",
    "start": "728480",
    "end": "734360"
  },
  {
    "text": "logs and why would you just do boring logs when you can do fancy traces there",
    "start": "734360",
    "end": "739560"
  },
  {
    "text": "are these are all stickers by the way you can come and get them at the end so what is a log then so logs",
    "start": "739560",
    "end": "745920"
  },
  {
    "text": "inherently designed for humans that's where they came from they were designed for humans printf logging the most",
    "start": "745920",
    "end": "751279"
  },
  {
    "text": "rudimentary form of logging they were designed for humans we took those human designed logs and threw in them in",
    "start": "751279",
    "end": "757639"
  },
  {
    "text": "adjacent format to make them structured logs which means that they're they're",
    "start": "757639",
    "end": "763839"
  },
  {
    "text": "really good if you want to use something locally but they're also good logs for",
    "start": "763839",
    "end": "769279"
  },
  {
    "text": "things like access logs they're good for audit logs they're also really good for",
    "start": "769279",
    "end": "774560"
  },
  {
    "text": "debugging whether your tracing is working or not I have an entire blog post on that",
    "start": "774560",
    "end": "781120"
  },
  {
    "text": "now there are some people who say you're doing logging wrong and I agree you are doing logging wrong you don't have to",
    "start": "782839",
    "end": "788760"
  },
  {
    "text": "believe me you can listen to this guy anybody in Nick's talk yesterday y",
    "start": "788760",
    "end": "797639"
  },
  {
    "text": "um I I do have to point out this is all reciprocal we are not we are not saying anything bad about each other we know",
    "start": "797639",
    "end": "803839"
  },
  {
    "text": "what we're saying Nick is a great educator a lot of the stuff that he said in that talk yesterday around unboxing",
    "start": "803839",
    "end": "810040"
  },
  {
    "text": "around how we dispose of objects at the right P times all correlate to tracing",
    "start": "810040",
    "end": "815240"
  },
  {
    "text": "as well and metrics so they're not completely different",
    "start": "815240",
    "end": "820399"
  },
  {
    "text": "concerns as far as I'm concerned everything that you do in a log can replace be replaced by a span or a span",
    "start": "820399",
    "end": "828880"
  },
  {
    "text": "event but if you can't you've got Legacy systems you've got a senior developer",
    "start": "828880",
    "end": "835160"
  },
  {
    "text": "that's been there for 20 years and won't move then yeah you might need to do",
    "start": "835160",
    "end": "841399"
  },
  {
    "text": "logging I mean logs are fine",
    "start": "841639",
    "end": "845680"
  },
  {
    "text": "mostly so how do we set these things up now the first thing we're going to talk about is auto instrumentation now Auto instrumentation",
    "start": "847199",
    "end": "854199"
  },
  {
    "text": "is probably something that you are familiar with from what you've been doing for years Auto instrumentation is",
    "start": "854199",
    "end": "860519"
  },
  {
    "text": "the idea that you don't do any code which if you tell a developer",
    "start": "860519",
    "end": "866279"
  },
  {
    "text": "you're not going to write any code they get a little bit angry Auto instrumentation is the idea that",
    "start": "866279",
    "end": "872000"
  },
  {
    "text": "you kind of use environment variables and you kind of side load a an agent",
    "start": "872000",
    "end": "877880"
  },
  {
    "text": "that does some kind of iil weaving into the your run time when it starts up to",
    "start": "877880",
    "end": "882920"
  },
  {
    "text": "inject things it'll wrap methods it'll um wrap your exception",
    "start": "882920",
    "end": "888440"
  },
  {
    "text": "data and that's not bad it's a good way to get started if you don't have",
    "start": "888440",
    "end": "894160"
  },
  {
    "text": "anything adding in a um open Telemetry agent on the side of your doet",
    "start": "894160",
    "end": "899399"
  },
  {
    "text": "application it's pretty nice you can get tracing you can get metrics you can get logs you can get all the standard",
    "start": "899399",
    "end": "906000"
  },
  {
    "text": "stuff but it lacks your context and it can be incredibly Vios because what",
    "start": "906000",
    "end": "911279"
  },
  {
    "text": "they're doing is adding every single action that happens they're adding a span around that thing and that data",
    "start": "911279",
    "end": "917920"
  },
  {
    "text": "gets really really large and that's not really where we're",
    "start": "917920",
    "end": "923120"
  },
  {
    "text": "moving to when we talk about observability we're talking about being intentional when we talk about observability",
    "start": "923120",
    "end": "930079"
  },
  {
    "text": "it's really easy you can use Powershell that's it it's not hard there",
    "start": "930079",
    "end": "935360"
  },
  {
    "text": "are some Powershell modules that you can bring in um and run it like that you can do that if you're running in",
    "start": "935360",
    "end": "942279"
  },
  {
    "text": "containers throw that um as a St script and um put that into your Docker file",
    "start": "942279",
    "end": "949240"
  },
  {
    "text": "and you will get Auto instrumentation you can then configure it with environment variables as to where to",
    "start": "949240",
    "end": "954600"
  },
  {
    "text": "send it what things to add to it like I said this is something that",
    "start": "954600",
    "end": "959720"
  },
  {
    "text": "can get you started very very quickly but ultimately where you should",
    "start": "959720",
    "end": "965399"
  },
  {
    "text": "be heading is then into coded instrumentation because this is where we get",
    "start": "965399",
    "end": "971279"
  },
  {
    "text": "intentional you add some code to your application startup you target the sort of libraries",
    "start": "971279",
    "end": "978279"
  },
  {
    "text": "that you think are important to your context maybe you're using mediator in",
    "start": "978279",
    "end": "984160"
  },
  {
    "text": "which case go home and think about your life is Jimmy here",
    "start": "984160",
    "end": "989720"
  },
  {
    "text": "here um but you may be using things like SQL Server do you want a span for each SQL",
    "start": "989720",
    "end": "997120"
  },
  {
    "text": "Server call if you've got 50,000 SQL Server calls in one ASP net recall uh",
    "start": "997120",
    "end": "1003120"
  },
  {
    "text": "call maybe you don't want the SQL Server instrumentation but this is an iterative",
    "start": "1003120",
    "end": "1008360"
  },
  {
    "text": "process that you can add them remove them and find out where your balance is it gives you full control over what",
    "start": "1008360",
    "end": "1017279"
  },
  {
    "text": "you're instrumenting how you're instrumenting it but also gives you the control of adding your own context to",
    "start": "1017279",
    "end": "1024240"
  },
  {
    "text": "each of these bits of data which means that we're ending up in this intentional idea that we're adding our",
    "start": "1024240",
    "end": "1030319"
  },
  {
    "text": "context we're not doing what we used to do with apms and letting somebody else govern our",
    "start": "1030319",
    "end": "1036520"
  },
  {
    "text": "context where they come up and say Here's a web dashboard about everything that's happened in the web and your",
    "start": "1036520",
    "end": "1042038"
  },
  {
    "text": "application and you go but I'm a console app running on a desktop in somebody's office it's like yeah but here's your",
    "start": "1042039",
    "end": "1048438"
  },
  {
    "text": "web Das board that's not what this is about it's really easy these are the",
    "start": "1048439",
    "end": "1053799"
  },
  {
    "text": "boring slides it's like add two packages add some code like literally",
    "start": "1053799",
    "end": "1060000"
  },
  {
    "text": "it's those three lines of code in the middle and that will add an otel ey logger Factory implementation that will",
    "start": "1060000",
    "end": "1067400"
  },
  {
    "text": "generate ey loggers and send all the data via OTP onto a back end that's it",
    "start": "1067400",
    "end": "1074120"
  },
  {
    "text": "you want to do metrics same thing want to do traces it's the same thing it's",
    "start": "1074120",
    "end": "1080760"
  },
  {
    "text": "not hard which is why I don't get why people use Auto instrumentation because it's that",
    "start": "1080760",
    "end": "1085799"
  },
  {
    "text": "easy now first thing we need to talk about from a practical perspective is something called resource attributes now",
    "start": "1085799",
    "end": "1091919"
  },
  {
    "text": "in open Telemetry terms everything that gets sent through to a back end over that OTL format is separated into two",
    "start": "1091919",
    "end": "1100159"
  },
  {
    "text": "segments resource attributes are set up at the start of your application they don't",
    "start": "1100159",
    "end": "1106120"
  },
  {
    "text": "change every single signal that gets sent will get those specific resource",
    "start": "1106120",
    "end": "1112919"
  },
  {
    "text": "attributes which means it's good for um things like your data center",
    "start": "1112919",
    "end": "1118760"
  },
  {
    "text": "region it might be you're running kubernetes so it's your pod name your pod IP address the start time of your",
    "start": "1118760",
    "end": "1125640"
  },
  {
    "text": "pod you're running an app service it's the name of your app service don't use the slot though",
    "start": "1125640",
    "end": "1132640"
  },
  {
    "text": "because unfortunately when you switch slots in the app service it doesn't restart your application so if you're",
    "start": "1132640",
    "end": "1139520"
  },
  {
    "text": "not careful you'll be running in production and say running you're running in a staging slot so just be careful about that because it doesn't",
    "start": "1139520",
    "end": "1145840"
  },
  {
    "text": "change until you restart your application it's the most efficient way",
    "start": "1145840",
    "end": "1151720"
  },
  {
    "text": "to transfer data because it's sent once per batch you might send over a hundred",
    "start": "1151720",
    "end": "1157919"
  },
  {
    "text": "spans but you'll send over your resource attributes once it's pretty easy to do just add",
    "start": "1157919",
    "end": "1164960"
  },
  {
    "text": "attributes it's not hard then we get on to instrumentation",
    "start": "1164960",
    "end": "1170120"
  },
  {
    "text": "libraries now I talked about coded instrumentation if we run those three those bits of code we don't get anything",
    "start": "1170120",
    "end": "1176760"
  },
  {
    "text": "all we've done is set up a pipeline in our code we need to then generate some span",
    "start": "1176760",
    "end": "1182679"
  },
  {
    "text": "data and that's where instrumentation come instrumentation libraries come in they're language and SDK specific so",
    "start": "1182679",
    "end": "1188159"
  },
  {
    "text": "they're built for net so in net world you might have",
    "start": "1188159",
    "end": "1193200"
  },
  {
    "text": "something for SQL client HTTP client grpc outbound HTTP calls inbound h CTP",
    "start": "1193200",
    "end": "1199200"
  },
  {
    "text": "calls you might have npgsql mediator rabbit identity server all of these",
    "start": "1199200",
    "end": "1206400"
  },
  {
    "text": "things will have instrumentation libraries that allow you to say just show me all the spans from this",
    "start": "1206400",
    "end": "1212200"
  },
  {
    "text": "particular library and it will add them in and they will become part of your waterfall that is step one or getting",
    "start": "1212200",
    "end": "1219679"
  },
  {
    "text": "started in the coded world now we've got a load of default spans default metrics",
    "start": "1219679",
    "end": "1226000"
  },
  {
    "text": "and default logs so if you're using aspet core HTTP",
    "start": "1226000",
    "end": "1231919"
  },
  {
    "text": "client SQL client you can add them as simple as that now you'll notice there",
    "start": "1231919",
    "end": "1237280"
  },
  {
    "text": "is a pre-release flag on the end of these that should not discourage you",
    "start": "1237280",
    "end": "1243520"
  },
  {
    "text": "they are pre-release only because the names of attributes hasn't been ratified",
    "start": "1243520",
    "end": "1248919"
  },
  {
    "text": "across the entire world because naming things is",
    "start": "1248919",
    "end": "1254200"
  },
  {
    "text": "hard and if you put 50 people in a room and ask them to decide on naming",
    "start": "1254200",
    "end": "1260000"
  },
  {
    "text": "it is not a pleasant experience and we are working on it but",
    "start": "1260000",
    "end": "1265760"
  },
  {
    "text": "until we've ratified those names we can't move out of pre-release the libraries are used at scale I know one",
    "start": "1265760",
    "end": "1273480"
  },
  {
    "text": "particular net client that's um outputting a 100,000 spans a second from each one of their services using these",
    "start": "1273480",
    "end": "1279679"
  },
  {
    "text": "libraries it's not that they're not stable it's that the names might",
    "start": "1279679",
    "end": "1286120"
  },
  {
    "text": "change now in at eight the runtime team have added some",
    "start": "1286840",
    "end": "1292320"
  },
  {
    "text": "specific metrics that you can add using those two meters we'll come on to adding meters in a",
    "start": "1292320",
    "end": "1299080"
  },
  {
    "text": "minute now those ones can make you build pretty dashboards pretty dashboards are great",
    "start": "1299080",
    "end": "1305080"
  },
  {
    "text": "they let management know that you're doing things they're not actually useful but management think they are it's",
    "start": "1305080",
    "end": "1311840"
  },
  {
    "text": "great but you can build pretty dashboards with pretty colors this is grafana um grafana is a visualization",
    "start": "1311840",
    "end": "1318760"
  },
  {
    "text": "tool that you can run on top of multiple backends they offer a free um version of",
    "start": "1318760",
    "end": "1323919"
  },
  {
    "text": "their um dashboard that you can use but you still need somewhere to put",
    "start": "1323919",
    "end": "1330960"
  },
  {
    "text": "it and if you need somewhere I know I know a guy who knows a guy you can help you",
    "start": "1330960",
    "end": "1336240"
  },
  {
    "text": "out if you're using something like Entity framework again you can do the same",
    "start": "1336240",
    "end": "1342240"
  },
  {
    "text": "thing add in npgsql add in Entity framework and you'll get spans for each of these things reddis is slightly",
    "start": "1342240",
    "end": "1349760"
  },
  {
    "text": "different because with reddis we need access to the connection multiplexer so there is a slightly different startup",
    "start": "1349760",
    "end": "1355440"
  },
  {
    "text": "all of this is documented in the otel docs I don't want you to sort of take",
    "start": "1355440",
    "end": "1361440"
  },
  {
    "text": "pictures of this and say oh I need to type that back down just go on the docs copy the code it's",
    "start": "1361440",
    "end": "1367240"
  },
  {
    "text": "fine so now we get on to the more your context instrumentation",
    "start": "1367240",
    "end": "1376120"
  },
  {
    "text": "metrics now there is some debate about whether this should be a",
    "start": "1376919",
    "end": "1383039"
  },
  {
    "text": "static class or whether this should be a Singleton class injected via di I don't see any benefit of adding",
    "start": "1383039",
    "end": "1390360"
  },
  {
    "text": "this as a single turn in di because the way that activity source and meter works in.net it works on the",
    "start": "1390360",
    "end": "1398520"
  },
  {
    "text": "name you can't inject an interface that you can then test which would be pointless anyway I",
    "start": "1398520",
    "end": "1405880"
  },
  {
    "text": "have an entire talk dedicated to don't write interfaces but in this particular example we're",
    "start": "1405880",
    "end": "1412720"
  },
  {
    "text": "using a static class it works absolutely fine you would create one meter per",
    "start": "1412720",
    "end": "1418880"
  },
  {
    "text": "assembly or two meters if you really want to and the reason why you would create two is",
    "start": "1418880",
    "end": "1425200"
  },
  {
    "text": "because that's the filter level in activity sources you can say listen to this activity Source but not",
    "start": "1425200",
    "end": "1431559"
  },
  {
    "text": "this activity source so two activity sources you can kind of see it a bit like log levels you might want a show me",
    "start": "1431559",
    "end": "1439000"
  },
  {
    "text": "everything kind of activity source that throws some stuff in there and you might want just a high level activity Source",
    "start": "1439000",
    "end": "1445000"
  },
  {
    "text": "or meter now we create a meter which is what you see on line two line four there",
    "start": "1445000",
    "end": "1451520"
  },
  {
    "text": "and then we create different instruments so we create a histogram and a counter there's an up down counter",
    "start": "1451520",
    "end": "1458200"
  },
  {
    "text": "there's various different meters that you can create and instruments and then we register them by",
    "start": "1458200",
    "end": "1465480"
  },
  {
    "text": "using ad meter at the bottom there we register it by name you'll notice",
    "start": "1465480",
    "end": "1471760"
  },
  {
    "text": "that I've not passed in the meter I've not said listen to this instance of that",
    "start": "1471760",
    "end": "1478480"
  },
  {
    "text": "meter I've said listen to this name of this meter and that's",
    "start": "1478480",
    "end": "1485320"
  },
  {
    "text": "explicit because under the hood everything is running just off the",
    "start": "1485320",
    "end": "1491120"
  },
  {
    "text": "name and when we want to record metrics that's how simple it is if You'",
    "start": "1491120",
    "end": "1496320"
  },
  {
    "text": "got a histogram you hit record and you give it some labels when you're adding labels they",
    "start": "1496320",
    "end": "1503159"
  },
  {
    "text": "should be what's called Low cardinality metric systems do not like",
    "start": "1503159",
    "end": "1508440"
  },
  {
    "text": "values or labels that have hundreds or millions of possible values if you've ever sent that kind of",
    "start": "1508440",
    "end": "1515640"
  },
  {
    "text": "data into Prometheus you'll have seen it rocking in a corner saying please stop because that's not how time series",
    "start": "1515640",
    "end": "1521720"
  },
  {
    "text": "databases are built time series databases are for low cardinality data and the way that this",
    "start": "1521720",
    "end": "1528960"
  },
  {
    "text": "works that makes it even worse is that every unique combination of labels is a different data series if you send in",
    "start": "1528960",
    "end": "1536760"
  },
  {
    "text": "five different HTTP routs and then you say each one of those can have 10 different HTTP methods you've now got 50",
    "start": "1536760",
    "end": "1543480"
  },
  {
    "text": "data series if you then say oh and I'm also going to add in these this other",
    "start": "1543480",
    "end": "1548520"
  },
  {
    "text": "attribute that has another 10 values you don't have 60 data series you have 500 data",
    "start": "1548520",
    "end": "1553840"
  },
  {
    "text": "series and then we'll add in this other thing like an IP address which has a billion possible",
    "start": "1553840",
    "end": "1559000"
  },
  {
    "text": "values and then things die in Corners these are low cardinality bits",
    "start": "1559000",
    "end": "1564799"
  },
  {
    "text": "of data they're high level coarse signals that can tell",
    "start": "1564799",
    "end": "1570679"
  },
  {
    "text": "you that something is going wrong they can't tell you why it's going wrong",
    "start": "1570679",
    "end": "1575720"
  },
  {
    "text": "can't tell you what they can say a particular route for a particular method is going slow or",
    "start": "1575720",
    "end": "1582000"
  },
  {
    "text": "erroring they won't tell you that granular level of information that something like tracing or logs can give",
    "start": "1582000",
    "end": "1587880"
  },
  {
    "text": "you so be careful when you're adding",
    "start": "1587880",
    "end": "1593039"
  },
  {
    "text": "labels tracing so spans and",
    "start": "1595480",
    "end": "1600679"
  },
  {
    "text": "activities I said a span has those attributes on it a span is basically a Time bound piece of analysis now I use",
    "start": "1600679",
    "end": "1608360"
  },
  {
    "text": "span and activity interchangeably when we say span we do not mean the span type",
    "start": "1608360",
    "end": "1613760"
  },
  {
    "text": "in net a span is an open Telemetry concept activity existed before open Telemetry",
    "start": "1613760",
    "end": "1621720"
  },
  {
    "text": "which is why activity exists it's like about the same time that um things were",
    "start": "1621720",
    "end": "1626760"
  },
  {
    "text": "ratified but obviously it has existed for quite a while um in net so we use",
    "start": "1626760",
    "end": "1632039"
  },
  {
    "text": "activity in net if you're in a polyglot world where you've got five different",
    "start": "1632039",
    "end": "1637960"
  },
  {
    "text": "languages you may want to use the open Telemetry shim which basically just turns the name activity into span",
    "start": "1637960",
    "end": "1645799"
  },
  {
    "text": "doesn't do anything more magical than that so just use activity but it's a Time bound bit of",
    "start": "1645799",
    "end": "1651919"
  },
  {
    "text": "analysis I want to wrap this particular bit of code and I want to know how long it took when did it start and I want to",
    "start": "1651919",
    "end": "1657760"
  },
  {
    "text": "know additional context about it so you're scoping your activity around a particular piece of work the ones that",
    "start": "1657760",
    "end": "1664600"
  },
  {
    "text": "you get out of the box might be a scope around a HTTP call to a third party it might be a SQL call to a database it may",
    "start": "1664600",
    "end": "1671720"
  },
  {
    "text": "be the HTTP request that came in but you're scoping it around something that you want to know the time of",
    "start": "1671720",
    "end": "1679559"
  },
  {
    "text": "crucially though it gives you causality if you're in a particular um HTTP request and then you call a database",
    "start": "1679559",
    "end": "1686720"
  },
  {
    "text": "that database was in the context of the HTTP request and that gives you that",
    "start": "1686720",
    "end": "1692679"
  },
  {
    "text": "causality so you can see a nice Trace waterfall and debug all of that through I'm not going to go through",
    "start": "1692679",
    "end": "1698640"
  },
  {
    "text": "visualizations because that means talking about individual tools I'm not here to promote",
    "start": "1698640",
    "end": "1704559"
  },
  {
    "text": "honeycomb was that five seven honeycom I've got three more Honeycombs I need to say before I've my wage um two more now",
    "start": "1704559",
    "end": "1713000"
  },
  {
    "text": "yes um cool correlation um comes by default",
    "start": "1713000",
    "end": "1718679"
  },
  {
    "text": "because we're saying that this is our parent and the parent has the correlation now it's useful for",
    "start": "1718679",
    "end": "1725080"
  },
  {
    "text": "measuring complex code everybody's got that little bit in their code that algorithm that they think is their crown jewels they're really proud of it it's",
    "start": "1725080",
    "end": "1731279"
  },
  {
    "text": "got 4,000 unit sest around it it never changes until it changes it's useful for measuring the",
    "start": "1731279",
    "end": "1737399"
  },
  {
    "text": "context of the and basically it's got everything a log has but a few bits",
    "start": "1737399",
    "end": "1745679"
  },
  {
    "text": "more now I said that there's two ways of doing this if you run it as a static",
    "start": "1746279",
    "end": "1751440"
  },
  {
    "text": "then you can just reference it directly no need to do injection or anything like that just reference it like that we do",
    "start": "1751440",
    "end": "1758399"
  },
  {
    "text": "start activity which starts a new span and takes over the current act the",
    "start": "1758399",
    "end": "1764480"
  },
  {
    "text": "current active span so now after that line is in there we've now got a new active",
    "start": "1764480",
    "end": "1770679"
  },
  {
    "text": "spam now you can do this via di do not inject activity Source",
    "start": "1770679",
    "end": "1778360"
  },
  {
    "text": "directly do not register activity source as a Singleton inside of your um di",
    "start": "1778360",
    "end": "1784240"
  },
  {
    "text": "container don't do it as a scop that's not the way to do it create a wrapper class something like Diagnostics or",
    "start": "1784240",
    "end": "1790640"
  },
  {
    "text": "Telemetry whatever you want to call it put an activity Source in there and",
    "start": "1790640",
    "end": "1795840"
  },
  {
    "text": "inject that that means that you can inject multiple different activity sources and",
    "start": "1795840",
    "end": "1802320"
  },
  {
    "text": "if you've got libraries that require an activity Source passed in you don't end up overriding things use a specific",
    "start": "1802320",
    "end": "1809320"
  },
  {
    "text": "class for it",
    "start": "1809320",
    "end": "1815760"
  },
  {
    "text": "now that look like it's gone over this for an OB um whatever an OB is um that",
    "start": "1816039",
    "end": "1822519"
  },
  {
    "text": "should say object sorry um now if we've got something that we want to enhance our um activity with now what we're",
    "start": "1822519",
    "end": "1829360"
  },
  {
    "text": "doing here is we're adding additional context to an activity because we've got a person that's been tried to be got",
    "start": "1829360",
    "end": "1836399"
  },
  {
    "text": "we're saying find me the person with the first name and surname of this I mean don't do this because don't do a get",
    "start": "1836399",
    "end": "1843120"
  },
  {
    "text": "request with pii in it but you get the context and we're then adding those attributes to our current",
    "start": "1843120",
    "end": "1850320"
  },
  {
    "text": "span now that is in my opinion dirty code it doesn't really look nice and if",
    "start": "1850320",
    "end": "1856799"
  },
  {
    "text": "you've got 15 property is that's not going to look nice at all now what we do instead is build your",
    "start": "1856799",
    "end": "1863399"
  },
  {
    "text": "self- extension methods give them context so you can do things like activity. current enrich with person and",
    "start": "1863399",
    "end": "1870399"
  },
  {
    "text": "pass in your person object that makes your code a lot nicer",
    "start": "1870399",
    "end": "1876080"
  },
  {
    "text": "it also means that you've got standards that you can apply now we will create manual spans",
    "start": "1876080",
    "end": "1884159"
  },
  {
    "text": "this is I believe how all markup Works in retail they just add a random number to it",
    "start": "1884159",
    "end": "1890399"
  },
  {
    "text": "whenever they want so if we've got this little bit of code obviously the performance of that",
    "start": "1890399",
    "end": "1897559"
  },
  {
    "text": "is going to change by the difference in the category ID so it's important that we know if we've got a slow call it was",
    "start": "1897559",
    "end": "1903000"
  },
  {
    "text": "slow because the category ID was 10,000 little bit of code that changes performance we might want to be able to",
    "start": "1903000",
    "end": "1908880"
  },
  {
    "text": "know what's why it's changing performance now we can do something like this we'll create an",
    "start": "1908880",
    "end": "1914840"
  },
  {
    "text": "activity that wraps the bit of code that we think's going to change in performance We'll add attributes to",
    "start": "1914840",
    "end": "1922159"
  },
  {
    "text": "it and then we'll add attributes at the end afterwards as well because we want to know well what was the input",
    "start": "1922159",
    "end": "1927760"
  },
  {
    "text": "parameters to this thing and what were the output parameters to this thing they might be interesting later this is where it comes into",
    "start": "1927760",
    "end": "1934639"
  },
  {
    "text": "unknown unknowns I don't know whether that's going to be useful but I'd like to have that",
    "start": "1934639",
    "end": "1940240"
  },
  {
    "text": "data tracing signals are something that you keep for a short amount of time not",
    "start": "1940240",
    "end": "1946000"
  },
  {
    "text": "forever keep metrics for as long as you want they're cheap keep traces for a short amount of time and put more data",
    "start": "1946000",
    "end": "1952480"
  },
  {
    "text": "on them now that bit of code there I don't",
    "start": "1952480",
    "end": "1959320"
  },
  {
    "text": "know about you I hate magic strings loads of strings all over the code base I like the the IDS color them because it",
    "start": "1959320",
    "end": "1965240"
  },
  {
    "text": "mean they normally color them in kind of like an orangey red color red being bad",
    "start": "1965240",
    "end": "1971360"
  },
  {
    "text": "so what I normally recommend to people is that they create some constants in",
    "start": "1971360",
    "end": "1976840"
  },
  {
    "text": "their code somewhere that Define the concepts that are unique to them so if you've got a category ID",
    "start": "1976840",
    "end": "1983679"
  },
  {
    "text": "add yourself a category ID constant so that everybody else will be using the same names if you've ever done any",
    "start": "1983679",
    "end": "1991200"
  },
  {
    "text": "production analysis and you've tried to do some kind of let's Group by this log",
    "start": "1991200",
    "end": "1996960"
  },
  {
    "text": "entry was this in pre-prod PR staging everybody calls things different",
    "start": "1996960",
    "end": "2003559"
  },
  {
    "text": "names everything everybody uses different values you want standards if you talk any data engineer about the",
    "start": "2003559",
    "end": "2008960"
  },
  {
    "text": "worst part of their job it's data cleansing this allows you to not have that problem and it also gives you a glossery",
    "start": "2008960",
    "end": "2016360"
  },
  {
    "text": "in your code of what the attributes mean you can add onto these things some documentation when should you use this",
    "start": "2016360",
    "end": "2023039"
  },
  {
    "text": "thing why should you use this thing voila no magic",
    "start": "2023039",
    "end": "2029519"
  },
  {
    "text": "strings that code is now more strongly typed you can navigate to things in your",
    "start": "2029519",
    "end": "2035000"
  },
  {
    "text": "IDE see where these things are used",
    "start": "2035000",
    "end": "2039720"
  },
  {
    "text": "so use extension methods use don't use rappers don't",
    "start": "2042000",
    "end": "2048000"
  },
  {
    "text": "create yourself my company activity Source or my company activity or my",
    "start": "2048000",
    "end": "2053280"
  },
  {
    "text": "company span reveal the underlying activity but",
    "start": "2053280",
    "end": "2059320"
  },
  {
    "text": "provide nice ways that you can have consistency that's what extension methods give",
    "start": "2059320",
    "end": "2065599"
  },
  {
    "text": "you wherever you can when you start a",
    "start": "2065599",
    "end": "2070839"
  },
  {
    "text": "span provide the attributes that are available in the constru in the method",
    "start": "2070839",
    "end": "2076200"
  },
  {
    "text": "call to start an activity don't add them afterwards so performance",
    "start": "2076200",
    "end": "2084200"
  },
  {
    "text": "optimization that is really",
    "start": "2084399",
    "end": "2087878"
  },
  {
    "text": "useful now there are two ways that you can reference activity so if I was to use start",
    "start": "2089599",
    "end": "2095919"
  },
  {
    "text": "activity it would return me an activity it will not return me an",
    "start": "2095919",
    "end": "2102480"
  },
  {
    "text": "activity if I have not done add source for that particular activity",
    "start": "2102480",
    "end": "2107720"
  },
  {
    "text": "source so the activity Source in that first line there if I haven't added that to open",
    "start": "2107720",
    "end": "2113720"
  },
  {
    "text": "Telemetry the response from that will be null and that's really important when we",
    "start": "2113720",
    "end": "2120280"
  },
  {
    "text": "talk about the difference between activity. current and the activity that's",
    "start": "2120280",
    "end": "2125720"
  },
  {
    "text": "returned because you might not want to add the product category ID to whatever span is running you might",
    "start": "2125720",
    "end": "2134079"
  },
  {
    "text": "only want the product category ID if this activity is created it might not be relevant when",
    "start": "2134079",
    "end": "2140400"
  },
  {
    "text": "it's added to a SQL span or it's added to your ASP net core span or your mediator span but it is when it's added to our",
    "start": "2140400",
    "end": "2148880"
  },
  {
    "text": "calculate product markup span now if we do this particular",
    "start": "2148880",
    "end": "2155160"
  },
  {
    "text": "methodology then we'll only get those things added added if our activity is",
    "start": "2155160",
    "end": "2160280"
  },
  {
    "text": "being created by contrast though if we run the same code at the top but reference",
    "start": "2160280",
    "end": "2167319"
  },
  {
    "text": "activity. current even if that activity Source has not been listened",
    "start": "2167319",
    "end": "2174359"
  },
  {
    "text": "to we will still get those attributes added I'm not saying one way of these is",
    "start": "2174359",
    "end": "2180160"
  },
  {
    "text": "better than the other I'm saying know what each of them is doing so that you",
    "start": "2180160",
    "end": "2185280"
  },
  {
    "text": "can choose the right one I've had so many people come to me and",
    "start": "2185280",
    "end": "2191000"
  },
  {
    "text": "say I've added this attribute and I can't find it and it's because they're not listening to the spam or they're using",
    "start": "2191000",
    "end": "2196640"
  },
  {
    "text": "activity. current when they shouldn't be now the other thing is in",
    "start": "2196640",
    "end": "2203960"
  },
  {
    "text": "tracing we say go wide not deep add more context to existing spans",
    "start": "2203960",
    "end": "2212040"
  },
  {
    "text": "over adding new spans make your context wide",
    "start": "2212040",
    "end": "2218359"
  },
  {
    "text": "that makes querying and debugging easier add as much context as you",
    "start": "2218359",
    "end": "2225280"
  },
  {
    "text": "possibly can because we're not storing these for three years we're storing these for",
    "start": "2225280",
    "end": "2230599"
  },
  {
    "text": "months because if you're debugging a production issue a year after it happened I'd really like to talk about",
    "start": "2230599",
    "end": "2236119"
  },
  {
    "text": "your root cause analysis process so the more context you add the",
    "start": "2236119",
    "end": "2242319"
  },
  {
    "text": "easier that is but have lower retentions and we use that by by using",
    "start": "2242319",
    "end": "2247839"
  },
  {
    "text": "activity. current so in this particular method here I'm taking the parameter",
    "start": "2247839",
    "end": "2253119"
  },
  {
    "text": "from my get request and I'm adding it to the ASP net core span that would have happened obviously if you put these",
    "start": "2253119",
    "end": "2260000"
  },
  {
    "text": "things put a new span inside the middleware somewhere it would be adding it to the middleware there are methods in um aspet",
    "start": "2260000",
    "end": "2267520"
  },
  {
    "text": "core to use the request services to grab a feature that will give you the ASP",
    "start": "2267520",
    "end": "2272880"
  },
  {
    "text": "next course span all the time I don't go through that here I don't have",
    "start": "2272880",
    "end": "2279920"
  },
  {
    "text": "time apparently I do have time because it's there so you can use this particular",
    "start": "2280480",
    "end": "2287720"
  },
  {
    "text": "method um which is the features on the HTTP context to grab the HTTP activity",
    "start": "2287720",
    "end": "2293359"
  },
  {
    "text": "that will always be the activity that was created as part of ASP net",
    "start": "2293359",
    "end": "2298599"
  },
  {
    "text": "core now when we do these sort of things that reason why that's important is",
    "start": "2302680",
    "end": "2309720"
  },
  {
    "text": "because if you're four levels deep inside of a mediator call that's gone",
    "start": "2309720",
    "end": "2315319"
  },
  {
    "text": "through um some other things you might be in a service class like this you're going to go and get your person service",
    "start": "2315319",
    "end": "2322240"
  },
  {
    "text": "you can use the HTTP context accessor to go and grab the htttp context that will allow you to get all the way back up to",
    "start": "2322240",
    "end": "2328760"
  },
  {
    "text": "the top activity maybe you want the top activity maybe you don't all this is to say know which",
    "start": "2328760",
    "end": "2335599"
  },
  {
    "text": "activity you're adding your thing to because that's what makes it easier to debug",
    "start": "2335599",
    "end": "2341480"
  },
  {
    "text": "later okay that's spans now we have span",
    "start": "2341480",
    "end": "2347079"
  },
  {
    "text": "events in net we call them activity events a span event is a point in time",
    "start": "2349760",
    "end": "2356200"
  },
  {
    "text": "action it's something that happened at a particular point of time it doesn't have a duration it says this thing happened it",
    "start": "2356200",
    "end": "2363119"
  },
  {
    "text": "has additional context tags that you can add to it But ultimately it's attached",
    "start": "2363119",
    "end": "2368920"
  },
  {
    "text": "to a span the main place this is used is exceptions you asked this",
    "start": "2368920",
    "end": "2376319"
  },
  {
    "text": "question um main places is used for exceptions because an exception happens during a spam you might say the spam is",
    "start": "2376319",
    "end": "2383440"
  },
  {
    "text": "failed but you might also get five exceptions during that spam and each one of those would be an event on that",
    "start": "2383440",
    "end": "2391440"
  },
  {
    "text": "spam really is the same as a structured log a structured log that has the span",
    "start": "2392240",
    "end": "2398440"
  },
  {
    "text": "ID and the trace ID on it the reason why this is different and in my opinion",
    "start": "2398440",
    "end": "2404880"
  },
  {
    "text": "better is when we get on to sampling because the way that we reduce",
    "start": "2404880",
    "end": "2409960"
  },
  {
    "text": "cost in tracing is using adaptive Dynamic sampling and if your span events are",
    "start": "2409960",
    "end": "2416359"
  },
  {
    "text": "attached to a span and sent over when the span is sent over if you sample that data you're also sampling the span",
    "start": "2416359",
    "end": "2422640"
  },
  {
    "text": "events if you send logs they're not sampled it's very hard to sample logs",
    "start": "2422640",
    "end": "2428119"
  },
  {
    "text": "in a way that doesn't mess up your production analysis so you have a span ID you have",
    "start": "2428119",
    "end": "2433920"
  },
  {
    "text": "a trace ID you have a span event ID you have some attributes and a timestamp that's",
    "start": "2433920",
    "end": "2440599"
  },
  {
    "text": "it we create span events by using the ad event method on top of an",
    "start": "2440599",
    "end": "2446319"
  },
  {
    "text": "activity we give it a name we give it some attributes that's it nothing more",
    "start": "2446319",
    "end": "2452280"
  },
  {
    "text": "than that in open Telemetry we'll provide you",
    "start": "2452280",
    "end": "2459200"
  },
  {
    "text": "with a nice little helper method so if you've got the open Telemetry libraries inside of your code we provide you with a helper method that allows you to just",
    "start": "2459200",
    "end": "2465440"
  },
  {
    "text": "do record exception which essentially just does code like that just makes it a nice little um",
    "start": "2465440",
    "end": "2472040"
  },
  {
    "text": "helper that everybody's using the same names so we're using the same attribute names etc etc but you'll notice there that you",
    "start": "2472040",
    "end": "2478240"
  },
  {
    "text": "still need to set the status why do we set the status if we're going to record an",
    "start": "2478240",
    "end": "2485359"
  },
  {
    "text": "exception well just because we have an exception doesn't mean the ASP net call request",
    "start": "2485359",
    "end": "2491720"
  },
  {
    "text": "failed we might have passed but we did a retrying we got three",
    "start": "2491720",
    "end": "2497160"
  },
  {
    "text": "exceptions that's why those two are separate span",
    "start": "2497160",
    "end": "2503240"
  },
  {
    "text": "links I talked a lot about inheritance and propagation the idea that when we",
    "start": "2503240",
    "end": "2508319"
  },
  {
    "text": "say create a new span it inherits the context of the previous span and we get this nice little Trace",
    "start": "2508319",
    "end": "2514119"
  },
  {
    "text": "waterfall that's not always the most useful way to rep present",
    "start": "2514119",
    "end": "2519560"
  },
  {
    "text": "data this is a casual link between two spans instead of a causal link doesn't",
    "start": "2520000",
    "end": "2526520"
  },
  {
    "text": "say that this thing was happening before it but it does say that this thing is casually linked to this other",
    "start": "2526520",
    "end": "2533480"
  },
  {
    "text": "thing so it might be that when you're debugging systems you might want to be able to get",
    "start": "2533480",
    "end": "2538680"
  },
  {
    "text": "back to another span the biggest use case I've had for this is batch processing if you batch process a 100",
    "start": "2538680",
    "end": "2545000"
  },
  {
    "text": "service bus messages the actual batch might have a Spam how long did it take my as your",
    "start": "2545000",
    "end": "2552119"
  },
  {
    "text": "function to execute when it had this 100 things in it but every single one of",
    "start": "2552119",
    "end": "2557480"
  },
  {
    "text": "those messages needs to inherit the context of where we was sent",
    "start": "2557480",
    "end": "2562520"
  },
  {
    "text": "from think about an email you've got a checkout process I send something",
    "start": "2562520",
    "end": "2568240"
  },
  {
    "text": "through service bus to send them an email and when the email server picks it up and says here's 100",
    "start": "2568240",
    "end": "2573480"
  },
  {
    "text": "messages I want each one of those emails to appear in the original in the original Trace but I might want to be",
    "start": "2573480",
    "end": "2579960"
  },
  {
    "text": "able to see which batch it was part of and see the batch span so they not a dependency you're not",
    "start": "2579960",
    "end": "2587160"
  },
  {
    "text": "going to see them in this big tree but it does get that Trace context",
    "start": "2587160",
    "end": "2593720"
  },
  {
    "text": "in there so that you can see it and it's this alternative to a parent and child",
    "start": "2593720",
    "end": "2598960"
  },
  {
    "text": "some people use it when they've got a event driven system and some of the actions might happen hours",
    "start": "2598960",
    "end": "2604599"
  },
  {
    "text": "later you don't want a trace waterfall that is hours long but you might want to see that your",
    "start": "2604599",
    "end": "2612040"
  },
  {
    "text": "particular Trace here was caused by a trace another Trace in a different",
    "start": "2612040",
    "end": "2617240"
  },
  {
    "text": "process we create span links when we create an activity we can pass in a",
    "start": "2617240",
    "end": "2622720"
  },
  {
    "text": "different activity context to use we can say use an empty activity context as the",
    "start": "2622720",
    "end": "2627960"
  },
  {
    "text": "parent and then we can pass in a link and we can pass in as many links as we can but it can only happen when you",
    "start": "2627960",
    "end": "2634280"
  },
  {
    "text": "create a new activity currently that is a change that might go through",
    "start": "2634280",
    "end": "2639440"
  },
  {
    "text": "in the spec probably next year",
    "start": "2639440",
    "end": "2642720"
  },
  {
    "text": "though okay who's heard of aspire where have the rest of you",
    "start": "2652720",
    "end": "2660760"
  },
  {
    "text": "been soet espire is a uh A system that",
    "start": "2660839",
    "end": "2665960"
  },
  {
    "text": "Microsoft have created to help make Cloud nating make um making Cloud native",
    "start": "2665960",
    "end": "2671400"
  },
  {
    "text": "applications a little bit easier I've been very vocal about I",
    "start": "2671400",
    "end": "2677800"
  },
  {
    "text": "don't particularly like a lot of the things in Aspire but the dashboard is amazing now all the stuff that we've",
    "start": "2677800",
    "end": "2684200"
  },
  {
    "text": "talked about there a lot of the push back I get about using traces and using metrics over using logs is well it's",
    "start": "2684200",
    "end": "2690599"
  },
  {
    "text": "harder to see what's going on because I can just see what's going on in my output Microsoft created the net spire",
    "start": "2690599",
    "end": "2697040"
  },
  {
    "text": "by a dashboard which has there is a log view but I'm not looking at that",
    "start": "2697040",
    "end": "2703279"
  },
  {
    "text": "one um they created this dashboard that allows you to be able to see your traces and log uh traces and metrics and",
    "start": "2703400",
    "end": "2710200"
  },
  {
    "text": "structured logs across multiple different systems originally it was part of the Aspire workload so you had to",
    "start": "2710200",
    "end": "2717000"
  },
  {
    "text": "actually create an Aspire application which was kind of like a a big distributed monolith type thing all the One Mono repo they've since evolved that",
    "start": "2717000",
    "end": "2724680"
  },
  {
    "text": "and the dspire dashboard as of a few weeks ago is now available as a separate",
    "start": "2724680",
    "end": "2729880"
  },
  {
    "text": "tool so you can run this separately and it's an OTP native",
    "start": "2729880",
    "end": "2735079"
  },
  {
    "text": "protocol it's not specific to Microsoft it uses open telemetries protocol to",
    "start": "2735079",
    "end": "2740359"
  },
  {
    "text": "transfer that data from your applications it's a separate application",
    "start": "2740359",
    "end": "2746000"
  },
  {
    "text": "to your normal um applications if you've got five or six different uh microservices that you're running",
    "start": "2746000",
    "end": "2751640"
  },
  {
    "text": "locally you can send them all to this one particular application and you can run it up with a net install",
    "start": "2751640",
    "end": "2758640"
  },
  {
    "text": "it'll soon be available as a container so you can do a dock and compose with it as",
    "start": "2758640",
    "end": "2764280"
  },
  {
    "text": "well it's really useful for local debugging I see a lot of people saying can I deploy this in my AKs",
    "start": "2764280",
    "end": "2770800"
  },
  {
    "text": "cluster and I just weep a little it's like there there are tools that are available for production scale",
    "start": "2770800",
    "end": "2777920"
  },
  {
    "text": "applications this is not one of them it uses inmemory stores it has a circular",
    "start": "2777920",
    "end": "2783760"
  },
  {
    "text": "buffer so it's only going to store a little bit of data but it's really really useful for local",
    "start": "2783760",
    "end": "2789880"
  },
  {
    "text": "debugging so if you want to start investigating how to use these tools I've been talking about this is the way to do it have that running in the",
    "start": "2789880",
    "end": "2796920"
  },
  {
    "text": "background and just have everything sending over to Local Host literally the examples that I've given you where I",
    "start": "2796920",
    "end": "2803280"
  },
  {
    "text": "don't provide any parameters into the exporter we'll send it straight to your local instance of the asire",
    "start": "2803280",
    "end": "2810599"
  },
  {
    "text": "dashboard it does support all three of the current signals of open Telemetry so logs traces and metrics",
    "start": "2810599",
    "end": "2817520"
  },
  {
    "text": "so give it a go it will hopefully help you to be able to see what you can have that's better when you go to production",
    "start": "2817520",
    "end": "2824200"
  },
  {
    "text": "that's when you look at vendors that's when you look at where to send stuff to it's when you look at sending it to",
    "start": "2824200",
    "end": "2829720"
  },
  {
    "text": "application insights or honeycomb one",
    "start": "2829720",
    "end": "2836359"
  },
  {
    "text": "left um so processors processors allow us to augment the Telemetry outside of",
    "start": "2837119",
    "end": "2842720"
  },
  {
    "text": "our code so they run on the creation and dispos of every activity in our",
    "start": "2842720",
    "end": "2848280"
  },
  {
    "text": "application and allow us to be able to grab things from the current context the current async local that's",
    "start": "2848280",
    "end": "2853720"
  },
  {
    "text": "happening we can add things that are available from HTTP context accessors or anything that we can pull in um from a",
    "start": "2853720",
    "end": "2860720"
  },
  {
    "text": "HTTP context it's essentially middleware like everybody's used to middleware in as at core imagine it like middleware",
    "start": "2860720",
    "end": "2868079"
  },
  {
    "text": "but for traces so available for logs it's not available for metrics",
    "start": "2868079",
    "end": "2875480"
  },
  {
    "text": "yet be aware though that this has a performance impact it blocks the thread on a start",
    "start": "2875480",
    "end": "2882160"
  },
  {
    "text": "and a dispose of every activity until it's done its work so you can really mess with",
    "start": "2882160",
    "end": "2888200"
  },
  {
    "text": "people's applications doing this just add a processor that does thread dots sleep and just watch everything grind to",
    "start": "2888200",
    "end": "2893400"
  },
  {
    "text": "a hole don't do that um they're pretty easy this one",
    "start": "2893400",
    "end": "2899440"
  },
  {
    "text": "here is a um a tenant ID so grabbing a tenant ID from every um on every",
    "start": "2899440",
    "end": "2905400"
  },
  {
    "text": "activity go back to the um HTTP context grab the tenant ID out of a header and",
    "start": "2905400",
    "end": "2910839"
  },
  {
    "text": "add it to every single span that's been created inside of that context means that you don't have to add",
    "start": "2910839",
    "end": "2917040"
  },
  {
    "text": "a tag for the um tenant ID on every single span as it goes through this is",
    "start": "2917040",
    "end": "2922400"
  },
  {
    "text": "how you get multipan attributes inside of yournet",
    "start": "2922400",
    "end": "2928119"
  },
  {
    "text": "code they do support dependency injection so you can inject things like HTTP context accessors there's examples",
    "start": "2928280",
    "end": "2935240"
  },
  {
    "text": "of these on my GitHub you can go have a look at baggage my favorite",
    "start": "2935240",
    "end": "2941520"
  },
  {
    "text": "subject baggage is the foot gun you never wanted it is dangerous but it allows us",
    "start": "2941520",
    "end": "2948119"
  },
  {
    "text": "to add additional context between Services it is not multipan attributes like everybody thinks it is it can be",
    "start": "2948119",
    "end": "2954480"
  },
  {
    "text": "used to do that but that's not what it is baggage is part of the w3c trace",
    "start": "2954480",
    "end": "2960599"
  },
  {
    "text": "context spec V2 so Trace context how we transmit tracing between different applications",
    "start": "2960599",
    "end": "2967040"
  },
  {
    "text": "How We Do propagation between different applications is part of w3c it is not part of open",
    "start": "2967040",
    "end": "2976920"
  },
  {
    "text": "Telemetry but it is dangerous because all it is is you",
    "start": "2978000",
    "end": "2983280"
  },
  {
    "text": "going add baggage baggage. set baggage and you can set a string can be",
    "start": "2983280",
    "end": "2989559"
  },
  {
    "text": "any string but that means that you could",
    "start": "2989559",
    "end": "2994760"
  },
  {
    "text": "serialize an object into Json and then deserialize it on the other end does anybody remember view",
    "start": "2994760",
    "end": "3003160"
  },
  {
    "text": "State you can see the people with trauma yes um so you could say I want the",
    "start": "3003160",
    "end": "3009720"
  },
  {
    "text": "person to be available the person object to be available in my other system so I'm going to serialize the person object",
    "start": "3009720",
    "end": "3014880"
  },
  {
    "text": "into my headers into my baggage which means it then gets translated into the context of every single request that it",
    "start": "3014880",
    "end": "3021359"
  },
  {
    "text": "leaves my application and then somebody complains that the network bandwidth is now 7 Meg",
    "start": "3021359",
    "end": "3026440"
  },
  {
    "text": "per request why well I've got a recursive object called person that has company and has the whole hierarchy of",
    "start": "3026440",
    "end": "3032520"
  },
  {
    "text": "the entire organization attached to it I haven't seen it that bad but I have",
    "start": "3032520",
    "end": "3038799"
  },
  {
    "text": "seen people passing information and using baggage or say using abusing baggage in those kind of",
    "start": "3038799",
    "end": "3045760"
  },
  {
    "text": "ways the other thing you need to know is it goes everywhere that there is a HTP",
    "start": "3045760",
    "end": "3051920"
  },
  {
    "text": "request if you add the user's name the users National Insurance number Social",
    "start": "3051920",
    "end": "3058160"
  },
  {
    "text": "Security number into baggage and you call out into Facebook's apis you've now just now leaked all of",
    "start": "3058160",
    "end": "3065599"
  },
  {
    "text": "your customer data into Facebook because it goes wherever HTTP client",
    "start": "3065599",
    "end": "3072200"
  },
  {
    "text": "goes be careful with it know what it's doing but you can get it like that this",
    "start": "3072200",
    "end": "3077400"
  },
  {
    "text": "is code I want all of you to add into your application whenever you see my name just add a tag that says",
    "start": "3077400",
    "end": "3084480"
  },
  {
    "text": "VIP now you'll notice there I've not just taken the attribute from baggage and added it as an",
    "start": "3084480",
    "end": "3090200"
  },
  {
    "text": "attribute I've used the attribute from baggage to influence the Telemetry that I've added that was the original reason",
    "start": "3090200",
    "end": "3097440"
  },
  {
    "text": "why baggage existed to influence whether I'm going to do something whether I'm not going to do something it's to",
    "start": "3097440",
    "end": "3102720"
  },
  {
    "text": "influence Telemetry you can use a processor to do",
    "start": "3102720",
    "end": "3108359"
  },
  {
    "text": "something like this so every single time something comes through just grab everything from baggage and add its",
    "start": "3108359",
    "end": "3113680"
  },
  {
    "text": "attributes don't do it everybody does everybody can be wrong just to be",
    "start": "3113680",
    "end": "3120480"
  },
  {
    "text": "clear except you except me yes I thought that was implied um if you are doing",
    "start": "3120480",
    "end": "3127440"
  },
  {
    "text": "this what I would what I would hope you do is add in a prefix and only take",
    "start": "3127440",
    "end": "3133680"
  },
  {
    "text": "things with that prefix because if somebody sends into your application a load of",
    "start": "3133680",
    "end": "3140200"
  },
  {
    "text": "baggage what you're going to do is you're going to take everything from the baggage so say a third party is hitting",
    "start": "3140200",
    "end": "3145599"
  },
  {
    "text": "your website and they send a load through load of baggage headers",
    "start": "3145599",
    "end": "3151119"
  },
  {
    "text": "through with that bit of code you're going to add all of it blindly into all of your",
    "start": "3151119",
    "end": "3157119"
  },
  {
    "text": "Telemetry if you do something like that you're being a little bit more intentional and saying it has to have these attributes it's not Fel",
    "start": "3157160",
    "end": "3163960"
  },
  {
    "text": "prooof but it's a little bit better now final thing is to talk about",
    "start": "3163960",
    "end": "3170599"
  },
  {
    "text": "sampling um I did a workshop last couple of days um and we do Ling at the end of",
    "start": "3170599",
    "end": "3177599"
  },
  {
    "text": "the workshop just as everybody's head is completely missed after two days and then we start talking about logarithms",
    "start": "3177599",
    "end": "3183119"
  },
  {
    "text": "and maths sampling is hard but it is incredibly",
    "start": "3183119",
    "end": "3191400"
  },
  {
    "text": "powerful there are two types of sampling that we do and we do this in tracing context we have head sampling which",
    "start": "3191400",
    "end": "3198799"
  },
  {
    "text": "happens inside of our applications and we have tail samplings tail sampling",
    "start": "3198799",
    "end": "3204079"
  },
  {
    "text": "that happens outside of our application normally in something like an open Telemetry collector or a vendor",
    "start": "3204079",
    "end": "3211160"
  },
  {
    "text": "agent it's how we retain the context so we keep the whole trace or",
    "start": "3211160",
    "end": "3219160"
  },
  {
    "text": "none of the trace we don't reduce the attributes that are stored we either keep all of it or none of it but we also",
    "start": "3219160",
    "end": "3227280"
  },
  {
    "text": "keep how many this represents if we take one in 10 of these",
    "start": "3227280",
    "end": "3232680"
  },
  {
    "text": "things the one that we send through we say this represents 10 if you if you've used application insights this is",
    "start": "3232680",
    "end": "3238119"
  },
  {
    "text": "implicit in application insights they have a property called item count and if you're trying to add things",
    "start": "3238119",
    "end": "3244720"
  },
  {
    "text": "up you don't count the number of items you sum the number of item count instead",
    "start": "3244720",
    "end": "3250880"
  },
  {
    "text": "which allows you to extrapolate to what it looked like in the end we do this primarily primarily to",
    "start": "3250880",
    "end": "3257359"
  },
  {
    "text": "reduce the storage costs and our Ingress or egress bandwidth of how transferring all this",
    "start": "3257359",
    "end": "3265359"
  },
  {
    "text": "data but if you think about the fact that we're going to have less data it also affects the performance of how we",
    "start": "3265359",
    "end": "3271200"
  },
  {
    "text": "query this data because if we've only got 10% of the data to query then it's going to be",
    "start": "3271200",
    "end": "3276559"
  },
  {
    "text": "quicker head sampling happens at the start of a request so it's before we create our",
    "start": "3276559",
    "end": "3282599"
  },
  {
    "text": "first activity it's the best kind of sampling because it removes the performance uh",
    "start": "3282599",
    "end": "3289040"
  },
  {
    "text": "the performance aspects of generating Telemetry because if we know that we're not going to keep this span this whole",
    "start": "3289040",
    "end": "3295319"
  },
  {
    "text": "Trace we don't need to add any data we don't need to store anything reduces the memory overhead",
    "start": "3295319",
    "end": "3302040"
  },
  {
    "text": "reduces the logic that we have to do because we don't need it anymore but the problem is it has",
    "start": "3302040",
    "end": "3308599"
  },
  {
    "text": "limited access to what's going on in your application it doesn't know if this",
    "start": "3308599",
    "end": "3313760"
  },
  {
    "text": "request is going to be slow it doesn't know if this request is going to",
    "start": "3313760",
    "end": "3319480"
  },
  {
    "text": "error because if at the start of the request that you knew this was going to error you'd have probably fixed",
    "start": "3319480",
    "end": "3325319"
  },
  {
    "text": "it which makes it limited use because if you say I'm going to take",
    "start": "3325319",
    "end": "3331920"
  },
  {
    "text": "one in 10 requests and your failure rate is one in",
    "start": "3331920",
    "end": "3338160"
  },
  {
    "text": "1,000 the chances are you're not going to see those traces that had the error on",
    "start": "3338160",
    "end": "3343559"
  },
  {
    "text": "them that's where we do something called tail sampling so tail sampling runs on a",
    "start": "3343559",
    "end": "3348960"
  },
  {
    "text": "delay After we receive the root span so we wait 5 seconds once we've got",
    "start": "3348960",
    "end": "3354319"
  },
  {
    "text": "the root span and then we can make a decision based on all of the span data",
    "start": "3354319",
    "end": "3360880"
  },
  {
    "text": "across all of the spans in a trace we can say how long did this thing take oh it took 300 milliseconds well it",
    "start": "3360880",
    "end": "3368520"
  },
  {
    "text": "should normally take 200 I'm going to keep that one because I want to analyze that later oh there was an error on this one",
    "start": "3368520",
    "end": "3375520"
  },
  {
    "text": "keep all of my errors one of the problems is it delays",
    "start": "3375520",
    "end": "3381200"
  },
  {
    "text": "sending the data to the back end and if you've ever been in an outage",
    "start": "3381200",
    "end": "3386839"
  },
  {
    "text": "and you've waited 5 minutes for your Telemetry systems to tell you whether you fixed the thing that was down you'll",
    "start": "3386839",
    "end": "3392599"
  },
  {
    "text": "know that being able to get your Telemetry data and view it is really really important so delaying it is not always",
    "start": "3392599",
    "end": "3399680"
  },
  {
    "text": "the best idea it's all about trade-offs but the other thing is it",
    "start": "3399680",
    "end": "3405440"
  },
  {
    "text": "requires your application to send all of the spans all the",
    "start": "3405440",
    "end": "3410880"
  },
  {
    "text": "time which means that if you've got say five petabytes of data going from your applic out to your vendor you're still",
    "start": "3410880",
    "end": "3418359"
  },
  {
    "text": "going to have five petabytes of data going to an internal service inside of your",
    "start": "3418359",
    "end": "3423440"
  },
  {
    "text": "infrastructure it's all about tradeoffs head sampling is pretty easy",
    "start": "3423440",
    "end": "3430079"
  },
  {
    "text": "this particular example allows us to do a percentage and it will randomly choose a percentage it's called probabilistic",
    "start": "3430079",
    "end": "3437119"
  },
  {
    "text": "sampling we run a random number if it's lower than this number then we keep it otherwise we get rid of it and then we",
    "start": "3437119",
    "end": "3443920"
  },
  {
    "text": "can add that number to the ones that are kep",
    "start": "3443920",
    "end": "3448160"
  },
  {
    "text": "that's all the stuff around that but what's coming because we're not",
    "start": "3449599",
    "end": "3455200"
  },
  {
    "text": "done open Telemetry is part of the cncf it's the number two project from the cncf right now um I think it's actually",
    "start": "3455200",
    "end": "3462400"
  },
  {
    "text": "more or less number one now I think we're competing with this um container thing Cuba Cuba something I don't",
    "start": "3462400",
    "end": "3469680"
  },
  {
    "text": "know so we're not done we're doing more things and Net's doing more things as",
    "start": "3469680",
    "end": "3474720"
  },
  {
    "text": "well the biggest thing we're working on at the moment is the semantic conventions the names of the attributes",
    "start": "3474720",
    "end": "3480319"
  },
  {
    "text": "so that everybody uses the right names which makes backends easy to work with you'll see more of those coming over",
    "start": "3480319",
    "end": "3486400"
  },
  {
    "text": "this year messaging database Cloud platforms are all going to be ratified",
    "start": "3486400",
    "end": "3491760"
  },
  {
    "text": "so the libraries won't have pre-release in them anymore and security you won't be able to complain Azure functions if anybody's",
    "start": "3491760",
    "end": "3498880"
  },
  {
    "text": "tried using Azure functions with open Telemetry at the moment you'll understand that it's not easy we are",
    "start": "3498880",
    "end": "3505599"
  },
  {
    "text": "actively working on how we make that work the Azure functions team is working on something as well um but within open",
    "start": "3505599",
    "end": "3512400"
  },
  {
    "text": "Telemetry um we're working on something as well so aure functions team can do some stuff natively but we're working on",
    "start": "3512400",
    "end": "3518599"
  },
  {
    "text": "something interim that we can get out quicker so watch this space follow me on Twitter I'll be announcing",
    "start": "3518599",
    "end": "3524319"
  },
  {
    "text": "it more libraries there are more and more libraries in the open source.net world that are adding In First Class",
    "start": "3524319",
    "end": "3530520"
  },
  {
    "text": "instrumentation support rabbit just added some stuff in the last few weeks identity service just added some",
    "start": "3530520",
    "end": "3536799"
  },
  {
    "text": "um there's a few more Fusion cache has just added some as well um if you are doing an open source library and you'd",
    "start": "3536799",
    "end": "3542760"
  },
  {
    "text": "like some help getting some native instrumentation in there do hit me up and that's what I've been doing for the last couple of months is helping open",
    "start": "3542760",
    "end": "3549000"
  },
  {
    "text": "source authors get some really decent Telemetry data in there and that's my main goal is better",
    "start": "3549000",
    "end": "3555880"
  },
  {
    "text": "documentation because the documentation isn't great and that is where I work in the open Telemetry Community is building",
    "start": "3555880",
    "end": "3562359"
  },
  {
    "text": "the documentation there are there are way smarter people who are writing the code um I just do the documentation and",
    "start": "3562359",
    "end": "3568359"
  },
  {
    "text": "make it easy for you but the other thing is what do you want what do you think's missing what do",
    "start": "3568359",
    "end": "3575240"
  },
  {
    "text": "you want us to focus on come and talk to me hit me up on Twitter tell me what it",
    "start": "3575240",
    "end": "3580599"
  },
  {
    "text": "is that's missing tell me what it is that's going to make this better what it's going to make it awesome that's me some useful links I",
    "start": "3580599",
    "end": "3588680"
  },
  {
    "text": "had one left honeycomb um come and see us we have a",
    "start": "3588680",
    "end": "3594079"
  },
  {
    "text": "free tier you can send us 20 million events per month every month for free um without any credit card at all we also",
    "start": "3594079",
    "end": "3600520"
  },
  {
    "text": "literally wrote the book on observability engineering um our Founders um wrote that it's a free download off our website go and have a",
    "start": "3600520",
    "end": "3606839"
  },
  {
    "text": "look it's mentions honeycomb I think three times throughout the whole book it's really about what core observability engineering his about and",
    "start": "3606839",
    "end": "3613079"
  },
  {
    "text": "he's a really good primer if you're really starting to look about how you want to do your systems um there's",
    "start": "3613079",
    "end": "3618119"
  },
  {
    "text": "questions there are stickers at the front come and get you stickers um I will be around for the next couple of days as well um but come and talk to me",
    "start": "3618119",
    "end": "3625520"
  },
  {
    "text": "thank you very much for [Applause]",
    "start": "3625520",
    "end": "3635789"
  },
  {
    "text": "coming",
    "start": "3639480",
    "end": "3642480"
  }
]