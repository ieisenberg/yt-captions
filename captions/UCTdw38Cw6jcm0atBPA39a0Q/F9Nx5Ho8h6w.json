[
  {
    "start": "0",
    "end": "39000"
  },
  {
    "text": "hello everyone welcome to my session uh at ndc sydney",
    "start": "8480",
    "end": "14880"
  },
  {
    "text": "good afternoon to uh audience from australia and good day from if you are watching it from elsewhere around the",
    "start": "14880",
    "end": "21520"
  },
  {
    "text": "world today i'm going to talk about how we can build",
    "start": "21520",
    "end": "26640"
  },
  {
    "text": "enterprise microservices using autoload and azure",
    "start": "26640",
    "end": "32640"
  },
  {
    "text": "apparently the oslo here has got a set of azure eyes",
    "start": "32640",
    "end": "38800"
  },
  {
    "text": "my name is patrick zhao i'm currently working as a senior software architect at ssw melbourne office",
    "start": "38800",
    "end": "46320"
  },
  {
    "start": "39000",
    "end": "39000"
  },
  {
    "text": "i'm a full stack engineer and speaker here's my twitter handle",
    "start": "46320",
    "end": "53600"
  },
  {
    "text": "if you want to be a little bit more formal there's a link to my linkedin",
    "start": "53600",
    "end": "59359"
  },
  {
    "text": "and at ssw each consultant has his own profile page you can easily find me by",
    "start": "59359",
    "end": "65439"
  },
  {
    "text": "googling patrick at ssw in my spare time i like to follow some",
    "start": "65439",
    "end": "71760"
  },
  {
    "text": "great open source projects over github and also contribute to some of them my recent interest being a",
    "start": "71760",
    "end": "78799"
  },
  {
    "text": "conversational ai chatbot that can serve as a virtual receptionist",
    "start": "78799",
    "end": "85119"
  },
  {
    "text": "so if an organization wants to set up a virtual receptionist that can help its",
    "start": "85119",
    "end": "90720"
  },
  {
    "text": "guests to find its employees with certain skill sets and availability",
    "start": "90720",
    "end": "95920"
  },
  {
    "text": "and you can feel free to download and spin it up in your own environment",
    "start": "95920",
    "end": "101200"
  },
  {
    "text": "come have a look um i also have a personal blog i see it's a great place for me to uh",
    "start": "101200",
    "end": "107759"
  },
  {
    "text": "every now and then retrospectively uh summarize the lessons i've learned from my recent projects",
    "start": "107759",
    "end": "113600"
  },
  {
    "text": "the my understanding for some new technology so since i graduated from",
    "start": "113600",
    "end": "120399"
  },
  {
    "text": "melbourne uni i have been in the art industry for over seven years during which i have successfully led",
    "start": "120399",
    "end": "125840"
  },
  {
    "text": "architected and delivered a great number of solutions for my clients across",
    "start": "125840",
    "end": "131680"
  },
  {
    "text": "different industries with a special focus in fintech industry",
    "start": "131680",
    "end": "137520"
  },
  {
    "text": "and my expertise and interest in includes big data machine learning ai",
    "start": "137520",
    "end": "143120"
  },
  {
    "text": "and most importantly azure i've been recently helping i client to",
    "start": "143120",
    "end": "148239"
  },
  {
    "text": "migrate i joined applications from a classic but a bit old school monolith",
    "start": "148239",
    "end": "155200"
  },
  {
    "text": "architecture to modern microservice architecture and that's why today i'm happy to share some of the",
    "start": "155200",
    "end": "161920"
  },
  {
    "text": "knowledge and lessons and challenges that i learned and or got from that project",
    "start": "161920",
    "end": "167599"
  },
  {
    "text": "so here's tonight's agenda first of all when we talk about our monolith",
    "start": "167599",
    "end": "175040"
  },
  {
    "start": "173000",
    "end": "173000"
  },
  {
    "text": "does it mean it's bad or it's a mess or when we talk about uh microservice",
    "start": "175040",
    "end": "180400"
  },
  {
    "text": "although it's more modern and more up to light doesn't mean that it's perfect",
    "start": "180400",
    "end": "186159"
  },
  {
    "text": "let's do some uh comparison so that we have in some overview overarching understanding of monolith",
    "start": "186159",
    "end": "192959"
  },
  {
    "text": "versus microservice then i'll i'll spend some more time to",
    "start": "192959",
    "end": "199040"
  },
  {
    "text": "uh have a deep dive into the micro services and with a a focus on what kind of um",
    "start": "199040",
    "end": "207280"
  },
  {
    "text": "pattern that we should advocate when we are trying to implement microservice and what are the key elements a microservice",
    "start": "207280",
    "end": "213680"
  },
  {
    "text": "solution is composed of and then ob now will narrow down and be",
    "start": "213680",
    "end": "219360"
  },
  {
    "text": "more specific to azure what type of services we can leverage to build our microservice architecture",
    "start": "219360",
    "end": "226000"
  },
  {
    "text": "and as the way that i usually usually delivered a",
    "start": "226000",
    "end": "231120"
  },
  {
    "text": "presentation i prepared the demo which is a quick plc of the",
    "start": "231120",
    "end": "236720"
  },
  {
    "text": "simplified version of microservices architecture that we can use",
    "start": "236720",
    "end": "241840"
  },
  {
    "text": "that we can build on azure okay so monolith so what is the monolith doesn't",
    "start": "241840",
    "end": "249280"
  },
  {
    "text": "mean that we have a bunch of lego bricks which which are completely unorganized and a",
    "start": "249280",
    "end": "255439"
  },
  {
    "text": "mess no it's not monolith is a unified architecture",
    "start": "255439",
    "end": "262240"
  },
  {
    "text": "where i see it as a very clean and clear architecture so what it means is",
    "start": "262240",
    "end": "269759"
  },
  {
    "text": "that you have your user interface that you the user uh interact with and all",
    "start": "269759",
    "end": "275120"
  },
  {
    "text": "the way down it follows a transaction scripts pattern that the up layer for instance here the user",
    "start": "275120",
    "end": "281520"
  },
  {
    "text": "interface interacts with the downstream layer the business logic and business logic interacts with your data",
    "start": "281520",
    "end": "287120"
  },
  {
    "text": "access layer and data access layer runs quad operations with the data store",
    "start": "287120",
    "end": "292720"
  },
  {
    "text": "and it returns the data all the way up so the modernist architecture is quite",
    "start": "292720",
    "end": "298639"
  },
  {
    "text": "actually quite clean so it's not a bad thing it's not able to use moderate architecture but it",
    "start": "298639",
    "end": "305680"
  },
  {
    "text": "has its own problem so next let's look at what are the pros and cons a monolith",
    "start": "305680",
    "end": "312080"
  },
  {
    "start": "308000",
    "end": "308000"
  },
  {
    "text": "architecture has so the biggest advantage when we use modernist architecture is that it's",
    "start": "312080",
    "end": "317680"
  },
  {
    "text": "self-contained it can have a lot of features functionalities within a within the box",
    "start": "317680",
    "end": "325680"
  },
  {
    "text": "but once it's done it's self-contained once we've done the devops once we've",
    "start": "325680",
    "end": "330800"
  },
  {
    "text": "done the uh pipeline to release it once we've configured the hosting environment it's done it's all self-contained so we",
    "start": "330800",
    "end": "337680"
  },
  {
    "text": "only need to look after one suite of um",
    "start": "337680",
    "end": "342720"
  },
  {
    "text": "environments or artifacts so that way we can",
    "start": "342720",
    "end": "348400"
  },
  {
    "text": "narrow down our eyesight to look after a particular thing",
    "start": "348400",
    "end": "353440"
  },
  {
    "text": "although it can be very complex inside and since",
    "start": "353440",
    "end": "358639"
  },
  {
    "text": "it's self-confined so it's easy to test and debug and mind you here by testing",
    "start": "358639",
    "end": "363759"
  },
  {
    "text": "and debugging i mean treats the monolith application as a",
    "start": "363759",
    "end": "368960"
  },
  {
    "text": "black box so this is more from like the integration test perspective if we don't",
    "start": "368960",
    "end": "374160"
  },
  {
    "text": "need to break it down and dive very deep into the into the solution itself but we rather",
    "start": "374160",
    "end": "381280"
  },
  {
    "text": "um throw some inputs to it and assert on the output then it's easier to test",
    "start": "381280",
    "end": "387919"
  },
  {
    "text": "and there's less overhead in cross module communication usually so if you take doughnuts as the programming",
    "start": "387919",
    "end": "394479"
  },
  {
    "text": "language usually the cross module communication is done via dll if you build your application in node.js it's",
    "start": "394479",
    "end": "400639"
  },
  {
    "text": "uh you are the cross module communication is done by referencing npm package",
    "start": "400639",
    "end": "406000"
  },
  {
    "text": "so there is no network traffic no grpc call no rest no graph api call nothing like",
    "start": "406000",
    "end": "412240"
  },
  {
    "text": "that so the overhead is is minimum",
    "start": "412240",
    "end": "416880"
  },
  {
    "text": "with with all that although over time when your business logic grows",
    "start": "418319",
    "end": "423840"
  },
  {
    "text": "more complex uh more or less architecture has problem but to begin with if you are not sure about",
    "start": "423840",
    "end": "431039"
  },
  {
    "text": "the potential scope that your application is going to grow in three years say",
    "start": "431039",
    "end": "436720"
  },
  {
    "text": "it's easier for you to just start with a a modernist architecture for your greenfield project",
    "start": "436720",
    "end": "443520"
  },
  {
    "text": "so we've looked at the um all the advantages now let's look at some of these advantages or the potential",
    "start": "443520",
    "end": "449840"
  },
  {
    "text": "problems so so i would ask the risk on this first",
    "start": "449840",
    "end": "454960"
  },
  {
    "text": "one just to remind you that um when we say that a monolith",
    "start": "454960",
    "end": "461440"
  },
  {
    "text": "architecture can be easily coupled but only if it's done wrong so what i mean",
    "start": "461440",
    "end": "467280"
  },
  {
    "text": "is that even with modernist architecture if we",
    "start": "467280",
    "end": "473440"
  },
  {
    "text": "follow clean architecture and we incorporate it with some good patterns such as cqrs command query uh",
    "start": "473440",
    "end": "481199"
  },
  {
    "text": "responsibility segregation or event sourcing um these are our",
    "start": "481199",
    "end": "487360"
  },
  {
    "text": "our expand on those architecture later because those architecture can also be used in microservices architecture",
    "start": "487360",
    "end": "493199"
  },
  {
    "text": "um if we incorporate these clean architecture and",
    "start": "493199",
    "end": "499759"
  },
  {
    "text": "good cloud patterns into our modernist application the modernist would become a modular monolith so it's this",
    "start": "499759",
    "end": "507199"
  },
  {
    "text": "a cost can be flipped to props if we've done it properly but it's very hard because of some other issues that are so",
    "start": "507199",
    "end": "514959"
  },
  {
    "text": "shortly um the second one is to it's hard to update individual feature again this",
    "start": "514959",
    "end": "522640"
  },
  {
    "text": "downside can be flipped to our upside if we've done it properly we've have a modular approach",
    "start": "522640",
    "end": "528560"
  },
  {
    "text": "then each individual feature can be updated individually um",
    "start": "528560",
    "end": "535200"
  },
  {
    "text": "but this hard block with monoliths application being it has a massive copies in a single repository",
    "start": "535200",
    "end": "543040"
  },
  {
    "text": "what this means is that since our model is is self-contained so we have to have everything in your in your",
    "start": "543040",
    "end": "549760"
  },
  {
    "text": "repository including your database migration scripts your application code your conf",
    "start": "549760",
    "end": "554880"
  },
  {
    "text": "most of your configurations um what is resulting is that when a",
    "start": "554880",
    "end": "561040"
  },
  {
    "text": "developer tries to pick up some product background item they need to have at least a minimum understanding of at a",
    "start": "561040",
    "end": "566880"
  },
  {
    "text": "holistic level so without an understanding of the overall application you won't be able to",
    "start": "566880",
    "end": "572080"
  },
  {
    "text": "even start working uh the other hard roadblock is the",
    "start": "572080",
    "end": "577360"
  },
  {
    "text": "scaling the scaling is also holistic you either have to scale the entire application because itself contains",
    "start": "577360",
    "end": "583200"
  },
  {
    "text": "deployed in one single housing environment but it will increase unnecessary cost",
    "start": "583200",
    "end": "590160"
  },
  {
    "text": "i'll also expand on that in a bit so",
    "start": "590160",
    "end": "595760"
  },
  {
    "start": "595000",
    "end": "595000"
  },
  {
    "text": "with all the downsides modernist application has some",
    "start": "595760",
    "end": "601680"
  },
  {
    "text": "organizations are thinking about moving from monoliths to microservice",
    "start": "601680",
    "end": "608880"
  },
  {
    "text": "and this happens when there is a brand legacy system",
    "start": "608880",
    "end": "614160"
  },
  {
    "text": "which could be smoothly running or getting some patches but and some minor you know fixes over the last two",
    "start": "614160",
    "end": "621440"
  },
  {
    "text": "decades but when we are trying to migrate this type of application for whatever reason maybe some technology is",
    "start": "621440",
    "end": "628399"
  },
  {
    "text": "um is end of its general uh is gi supports",
    "start": "628399",
    "end": "634000"
  },
  {
    "text": "we need to migrate then when we try to migrate this big giant system",
    "start": "634000",
    "end": "640320"
  },
  {
    "text": "it's very difficult and risky to migrate them all in one go so what we tend to do is we call a",
    "start": "640320",
    "end": "646720"
  },
  {
    "text": "strangler feed pattern that we want to migrate the application bits by bits",
    "start": "646720",
    "end": "653519"
  },
  {
    "text": "and this way there are less risks and it's easier to manage the overall project we can cut it",
    "start": "653519",
    "end": "660560"
  },
  {
    "text": "to smaller milestones and the the deliverable of each",
    "start": "660560",
    "end": "667200"
  },
  {
    "text": "milestone are easier to manage and easier to sculpt",
    "start": "667200",
    "end": "673519"
  },
  {
    "text": "secondly we've mentioned that in the previous slide that the scalability for a",
    "start": "673839",
    "end": "679360"
  },
  {
    "text": "monolith application could be a problem because you have to scale at a holistic level so",
    "start": "679360",
    "end": "686000"
  },
  {
    "text": "if you if only a certain part of the system need to be scaled up and done in or out um microservice is the way to go",
    "start": "686000",
    "end": "695040"
  },
  {
    "text": "and lastly the microservices tend to increase your development team's productivity because",
    "start": "695040",
    "end": "702480"
  },
  {
    "text": "by embracing microsoft architecture your engineers uh tend to",
    "start": "702480",
    "end": "709760"
  },
  {
    "text": "tend to only require smaller amounts of knowledge from the business domains",
    "start": "709760",
    "end": "715839"
  },
  {
    "text": "because they only look after a certain part of the system so um they don't need to",
    "start": "715839",
    "end": "721120"
  },
  {
    "text": "have a you know overarching understanding of the entire business so they can spend more time in delivering",
    "start": "721120",
    "end": "730200"
  },
  {
    "text": "so here's a good analogy um that i found on google",
    "start": "730240",
    "end": "735920"
  },
  {
    "text": "so for instance we have a a lego pyramid and if something goes wrong for instance",
    "start": "735920",
    "end": "742800"
  },
  {
    "text": "we want to replace this this green brick so if it's a monolith's pyramid what we",
    "start": "742800",
    "end": "748720"
  },
  {
    "text": "have to do is that we have to put down at least the top three layers and in order to replace this small brick",
    "start": "748720",
    "end": "754959"
  },
  {
    "text": "whereas if uh virus violent reconstruction once we've migrated to a modern",
    "start": "754959",
    "end": "761279"
  },
  {
    "text": "microservices architecture if we're trying to replace a a small",
    "start": "761279",
    "end": "766320"
  },
  {
    "text": "break if it's been corrupted or whatever reason we need to replace it we only need to",
    "start": "766320",
    "end": "772240"
  },
  {
    "text": "put down this small module and reassemble it once we",
    "start": "772240",
    "end": "777519"
  },
  {
    "text": "fix this small brick so as we can see",
    "start": "777519",
    "end": "784160"
  },
  {
    "text": "the uh cost of managing microservices like patching or",
    "start": "784160",
    "end": "790240"
  },
  {
    "text": "bug fixes can be reduced if we've done microservices properly",
    "start": "790240",
    "end": "796079"
  },
  {
    "start": "796000",
    "end": "796000"
  },
  {
    "text": "so now we've had an overview of modernist versus uh",
    "start": "796320",
    "end": "802560"
  },
  {
    "text": "microservice then let's move on to a more in-depth uh discussion of microsoft",
    "start": "802560",
    "end": "808000"
  },
  {
    "text": "let's start with the key components first of all usually we want um to have",
    "start": "808000",
    "end": "814880"
  },
  {
    "text": "an api guidewire that serves as a single point of entry um",
    "start": "814880",
    "end": "820079"
  },
  {
    "text": "and that api gateway can sit in front of your subsequent microservices and serve",
    "start": "820079",
    "end": "825120"
  },
  {
    "text": "as either proxy or handle more complex scenarios",
    "start": "825120",
    "end": "830240"
  },
  {
    "text": "and we want to support different types of front-end it could be web desktop mobile",
    "start": "830240",
    "end": "836720"
  },
  {
    "text": "and we also want to be able to deploy our subsequent services in a flexible way",
    "start": "837040",
    "end": "845360"
  },
  {
    "text": "and each microservice needs to have its own data store here the keyword is data",
    "start": "845920",
    "end": "851279"
  },
  {
    "text": "store rather than database so multiple microservices can potentially share the",
    "start": "851279",
    "end": "856880"
  },
  {
    "text": "same database but if they share the same dollars they need to have they need to own its",
    "start": "856880",
    "end": "863199"
  },
  {
    "text": "its own schema what it means is that we should prevent cross-service data access and this is",
    "start": "863199",
    "end": "869199"
  },
  {
    "text": "the key principle and the pattern that we should follow when we are building microservice",
    "start": "869199",
    "end": "877600"
  },
  {
    "text": "and we want so from the coding pattern perspective we want to advocate the event driven pattern",
    "start": "877600",
    "end": "883600"
  },
  {
    "text": "and personally i like to integrate my my microsoft especially",
    "start": "883600",
    "end": "888880"
  },
  {
    "text": "whatever sitting behind the api gateway to be protected by v-net so that way we",
    "start": "888880",
    "end": "893920"
  },
  {
    "text": "can um has we can have less worries about the um security um and compliance practices",
    "start": "893920",
    "end": "904079"
  },
  {
    "text": "and we want to leverage messaging system because each database sorry each microservice has its own data store but",
    "start": "904079",
    "end": "910959"
  },
  {
    "text": "sometimes we want to interact with other",
    "start": "910959",
    "end": "916320"
  },
  {
    "text": "other data store or external data then usually we need some messaging system i'll explain all these components in",
    "start": "916320",
    "end": "923120"
  },
  {
    "text": "details in a bit so here's a great example that microsoft",
    "start": "923120",
    "end": "929600"
  },
  {
    "text": "has posted on their document repository it's an e-commerce site and they use",
    "start": "929600",
    "end": "934720"
  },
  {
    "text": "this to illustrate the microservice architecture and they've been actively updating it",
    "start": "934720",
    "end": "940399"
  },
  {
    "text": "for instance um in like a year or two ago when i uh so when i",
    "start": "940399",
    "end": "946320"
  },
  {
    "text": "saw and referenced this um example they advocate um oswald but now they used",
    "start": "946320",
    "end": "952000"
  },
  {
    "text": "invoice instead so that means that as technology involves evolves the microsoft has been um looking after",
    "start": "952000",
    "end": "958399"
  },
  {
    "text": "their documents um examples actively as well so it's a great resource so as we can see",
    "start": "958399",
    "end": "966160"
  },
  {
    "text": "we have an api gateway which has different variations we have an api gateway that serves as a facade to your",
    "start": "966160",
    "end": "972639"
  },
  {
    "text": "apis or we can have a back-end for front-end if you want support different type of front-end applications",
    "start": "972639",
    "end": "979199"
  },
  {
    "text": "um in this example uh the hosting environment that they host the",
    "start": "979199",
    "end": "984560"
  },
  {
    "text": "applications as docker containers um but there are other deployment options which we'll touch on in a bit um the most",
    "start": "984560",
    "end": "991920"
  },
  {
    "text": "important um insight we can get on this example is that each micro service has its own data",
    "start": "991920",
    "end": "999279"
  },
  {
    "text": "store the dollar store can be a secret database or can even be a radius cache if we want to",
    "start": "999279",
    "end": "1006399"
  },
  {
    "text": "uh interact between services we do that via a messaging system on azure we have",
    "start": "1006399",
    "end": "1013120"
  },
  {
    "text": "android service bus or you can use your rapid mq on it",
    "start": "1013120",
    "end": "1018320"
  },
  {
    "text": "okay so let's move on so i just mentioned that there are",
    "start": "1018320",
    "end": "1024240"
  },
  {
    "start": "1022000",
    "end": "1022000"
  },
  {
    "text": "different deployment options rather than docker so let's have a look so first of",
    "start": "1024240",
    "end": "1029280"
  },
  {
    "text": "all we can leverage past services on public cloud providers on azure data a lot of options",
    "start": "1029280",
    "end": "1036480"
  },
  {
    "text": "or we can choose to have containerized applications uh on azure these other",
    "start": "1036480",
    "end": "1041600"
  },
  {
    "text": "container instances and recently azure has rolled out other container apps which",
    "start": "1041600",
    "end": "1048640"
  },
  {
    "text": "i personally didn't have much knowledge about because it's new uh but i like to explore",
    "start": "1048640",
    "end": "1054880"
  },
  {
    "text": "because they advertise this as a service containerized environment and it has a",
    "start": "1054880",
    "end": "1061039"
  },
  {
    "text": "smooth integration with dapper dynamic application runtime and kita so it's great i like to explore on",
    "start": "1061039",
    "end": "1068240"
  },
  {
    "text": "that as well or we can always use kubernetes if we want",
    "start": "1068240",
    "end": "1073360"
  },
  {
    "text": "to manage the cluster ourselves and we have the expertise and experience in managing that i'll measure this iks and",
    "start": "1073360",
    "end": "1079840"
  },
  {
    "text": "this great deployment option",
    "start": "1079840",
    "end": "1083200"
  },
  {
    "text": "so uh we've looked enough on the tangent side and on the development team's perspective",
    "start": "1089840",
    "end": "1095600"
  },
  {
    "start": "1090000",
    "end": "1090000"
  },
  {
    "text": "um if we start embracing microservice architecture",
    "start": "1095600",
    "end": "1100640"
  },
  {
    "text": "it's not just about a software or solution architecture but also about a",
    "start": "1100640",
    "end": "1106080"
  },
  {
    "text": "methodology and also a development team management so we can onboard our new developer in a fast pace and more",
    "start": "1106080",
    "end": "1113440"
  },
  {
    "text": "effectively and because we can onboard the developers um quickly so developers",
    "start": "1113440",
    "end": "1120559"
  },
  {
    "text": "become pluggable you can join a microservice team and do some work and finish off and join",
    "start": "1120559",
    "end": "1127600"
  },
  {
    "text": "another thing if there's need so we can adapt to business requirement change quickly as well so there's a nice",
    "start": "1127600",
    "end": "1135360"
  },
  {
    "text": "trend here so a monolith um application because it's so simple to start with so the",
    "start": "1135360",
    "end": "1140880"
  },
  {
    "text": "development speed could be very uh quick uh at the beginning but as time",
    "start": "1140880",
    "end": "1147600"
  },
  {
    "text": "goes on over time the productivity is going to drop whereas in comparison the microservices",
    "start": "1147600",
    "end": "1155039"
  },
  {
    "text": "to begin with you have a lot of cross-cutting concerns to worry about and you have a lot of things to set up",
    "start": "1155039",
    "end": "1160960"
  },
  {
    "text": "so at the beginning when you're setting up the foundation it could be slow but um",
    "start": "1160960",
    "end": "1167120"
  },
  {
    "text": "over time the productivity is going to grow because you don't need to have a a",
    "start": "1167120",
    "end": "1173760"
  },
  {
    "text": "overarching understanding of everything of the entire solution but you can rather just focus on a small piece",
    "start": "1173760",
    "end": "1180880"
  },
  {
    "text": "okay so from development to release we have a devops",
    "start": "1180880",
    "end": "1187679"
  },
  {
    "start": "1181000",
    "end": "1181000"
  },
  {
    "text": "exercise in in advocating microservice we can adopt the",
    "start": "1187679",
    "end": "1194400"
  },
  {
    "text": "real agile we can adapt to the changes and have a have a faster iteration",
    "start": "1194400",
    "end": "1200480"
  },
  {
    "text": "and the most important thing i like to highlight is that compared to the traditional modernist",
    "start": "1200480",
    "end": "1206080"
  },
  {
    "text": "application the concepts of deployment and release should be separated so what",
    "start": "1206080",
    "end": "1211200"
  },
  {
    "text": "that means is that we want to have a progressive release strategy in which we can",
    "start": "1211200",
    "end": "1217360"
  },
  {
    "text": "um use dark launch or we can toggle features on and off",
    "start": "1217360",
    "end": "1223919"
  },
  {
    "text": "so what that means is that for instance we have a feature and that's handled by a",
    "start": "1223919",
    "end": "1230799"
  },
  {
    "text": "a single micro service it's easier for us to turn it on and off",
    "start": "1230799",
    "end": "1236080"
  },
  {
    "text": "so we can release these features to the markets",
    "start": "1236080",
    "end": "1241679"
  },
  {
    "text": "without a formal notification to the user so we can collect some",
    "start": "1241679",
    "end": "1247200"
  },
  {
    "text": "use telemetry and get the feedback to improve our application this can be done with",
    "start": "1247200",
    "end": "1254559"
  },
  {
    "text": "smaller lens if we do models properly but with microservices is much",
    "start": "1254559",
    "end": "1260840"
  },
  {
    "text": "easier so we've looked at all the goods and benefits and all the",
    "start": "1260840",
    "end": "1267679"
  },
  {
    "start": "1262000",
    "end": "1262000"
  },
  {
    "text": "upside of microservices let's look at some potential challenges and the traps",
    "start": "1267679",
    "end": "1273440"
  },
  {
    "text": "the biggest challenge is that in microservice architecture",
    "start": "1273440",
    "end": "1278640"
  },
  {
    "text": "we can potentially get into a um circumstance get into a a place that we",
    "start": "1278640",
    "end": "1285280"
  },
  {
    "text": "call micro monoliths what this means is that um if we've done microservices properly",
    "start": "1285280",
    "end": "1291679"
  },
  {
    "text": "we don't have a cross service reference uh each service has its own data store that will offer event driven pattern but",
    "start": "1291679",
    "end": "1300240"
  },
  {
    "text": "for instance there is a method that's sitting in a module that need to be",
    "start": "1300240",
    "end": "1305280"
  },
  {
    "text": "referenced by five different services and and if we make some change on that",
    "start": "1305280",
    "end": "1311919"
  },
  {
    "text": "module all the five different services need to uh will be impacted which means that we have to wrong test we run a lot",
    "start": "1311919",
    "end": "1318000"
  },
  {
    "text": "of tests to make sure that our change on that so it doesn't break in that module doesn't break those five services if we",
    "start": "1318000",
    "end": "1324480"
  },
  {
    "text": "have a lot of modules like that we get into a",
    "start": "1324480",
    "end": "1330000"
  },
  {
    "text": "situation that's although we our services does not reference each other but they all",
    "start": "1330000",
    "end": "1335600"
  },
  {
    "text": "reference the same thing so this is a micro monolith we should avoid that",
    "start": "1335600",
    "end": "1341280"
  },
  {
    "text": "and the way to avoid that is that to try to package your module",
    "start": "1341280",
    "end": "1347039"
  },
  {
    "text": "and publish them as as programming packages so in dotnet we have new get in those players there's",
    "start": "1347039",
    "end": "1352880"
  },
  {
    "text": "npm package and by properly packaging them and shipping them to the new gets we can have a proper",
    "start": "1352880",
    "end": "1360400"
  },
  {
    "text": "versioning so the services can choose to upgrade if they want to",
    "start": "1360400",
    "end": "1365760"
  },
  {
    "text": "reference some updates in the package also the other services can stay with the older version",
    "start": "1365760",
    "end": "1373520"
  },
  {
    "text": "of the package if they don't want to change so this way we can make sure the impact is minimal if we",
    "start": "1373520",
    "end": "1379360"
  },
  {
    "text": "might change in the shared library the other thing is from the data",
    "start": "1379360",
    "end": "1386480"
  },
  {
    "text": "perspective um we don't want to we don't want uh cross uh service uh data referencing but",
    "start": "1386480",
    "end": "1393919"
  },
  {
    "text": "sometimes we have to for instance we want to i in in a",
    "start": "1393919",
    "end": "1400000"
  },
  {
    "text": "typical e-commerce application when we are checking out we",
    "start": "1400000",
    "end": "1405360"
  },
  {
    "text": "want to reference a customer's information such as the address with the transactions which the payments have",
    "start": "1405360",
    "end": "1411520"
  },
  {
    "text": "settled and the transactions are posted so that way the payment",
    "start": "1411520",
    "end": "1416799"
  },
  {
    "text": "service or the order service need to reference the the customer service and",
    "start": "1416799",
    "end": "1422480"
  },
  {
    "text": "there are two ways we can achieve it the first one is to reference",
    "start": "1422480",
    "end": "1428400"
  },
  {
    "text": "external service what this means is that a your customer your checkout service can",
    "start": "1428400",
    "end": "1436960"
  },
  {
    "text": "emit an event or can call your customer service directory but regardless of",
    "start": "1436960",
    "end": "1442159"
  },
  {
    "text": "which way we by following the this approach we create a default",
    "start": "1442159",
    "end": "1448640"
  },
  {
    "text": "dependency between the primary service and the independent service",
    "start": "1448640",
    "end": "1453840"
  },
  {
    "text": "and if your external service goes down you need to work out a while to mitigate",
    "start": "1453840",
    "end": "1460320"
  },
  {
    "text": "the the problem and what we do we either retry or we we we've been held up",
    "start": "1460320",
    "end": "1466799"
  },
  {
    "text": "as an alternative solution we can duplicate some of the data in",
    "start": "1466799",
    "end": "1472400"
  },
  {
    "text": "the microservices data store so as we know storage is is very trip",
    "start": "1472400",
    "end": "1478480"
  },
  {
    "text": "dislikes so duplicating data would incur an additional storage is not",
    "start": "1478480",
    "end": "1485840"
  },
  {
    "text": "a big issue however because we're duplicating data we need to be careful about the consistency",
    "start": "1485840",
    "end": "1492960"
  },
  {
    "text": "level of the data for instance if our customer service is going to",
    "start": "1492960",
    "end": "1499120"
  },
  {
    "text": "provide the the referencing data for a like user and we need to synchronize that data across to your checkout",
    "start": "1499120",
    "end": "1506159"
  },
  {
    "text": "service then we need to guarantee that when the user is actually checking out we get the the latest in the correct the light is",
    "start": "1506159",
    "end": "1512720"
  },
  {
    "text": "you know address the home address of the customer that we're checking out so the the data synchronization process",
    "start": "1512720",
    "end": "1519760"
  },
  {
    "text": "need to uh bear in mind the data it synchronizes need to have a good",
    "start": "1519760",
    "end": "1525440"
  },
  {
    "text": "consistency level that's acceptable by the primary service of course eventually the data is going",
    "start": "1525440",
    "end": "1531679"
  },
  {
    "text": "to come through but the data might be still at that time so this consideration that we need to",
    "start": "1531679",
    "end": "1538240"
  },
  {
    "text": "take into account and the and that's um can at a higher level",
    "start": "1538240",
    "end": "1544799"
  },
  {
    "text": "can be summarized as a reliability for individual services because there could be potentially be uh dependencies",
    "start": "1544799",
    "end": "1550559"
  },
  {
    "text": "between the different services if we are not doing this correctly there could be some issue that when a service goes",
    "start": "1550559",
    "end": "1557760"
  },
  {
    "text": "down it affects other parts of the system and the last one is the the most",
    "start": "1557760",
    "end": "1564000"
  },
  {
    "text": "difficult one that i i personally don't even have a good solution for it is the domain boundary so what that means is",
    "start": "1564000",
    "end": "1570400"
  },
  {
    "text": "that when we are cutting different um pieces of your business into different",
    "start": "1570400",
    "end": "1576799"
  },
  {
    "text": "problem domains so that each program domain by design should have a microservice to look after",
    "start": "1576799",
    "end": "1583120"
  },
  {
    "text": "if we are not setting the boundary between the problem domains properly what it would",
    "start": "1583120",
    "end": "1588559"
  },
  {
    "text": "potentially end up is that we can have some microservice that acts as monoliths which handles a lot whilst other",
    "start": "1588559",
    "end": "1594880"
  },
  {
    "text": "services handles a little this is what we should avoid and from my understanding the the real way to",
    "start": "1594880",
    "end": "1602320"
  },
  {
    "text": "there's no quick way to tackle this but it all depends on your knowledge and experience with the business domain",
    "start": "1602320",
    "end": "1611039"
  },
  {
    "text": "so next let's look at individual uh parts of a micro service architecture first of",
    "start": "1611679",
    "end": "1618159"
  },
  {
    "text": "all is api gateway it's a single entry point",
    "start": "1618159",
    "end": "1623440"
  },
  {
    "text": "and api gateway is nothing but a bunch of middlewares",
    "start": "1623440",
    "end": "1629279"
  },
  {
    "text": "so that the uh cross-cutting concern of a uh let's take http request an example",
    "start": "1629279",
    "end": "1634960"
  },
  {
    "text": "the cross-cutting concern of an http pipeline can be obstructed out put to",
    "start": "1634960",
    "end": "1640240"
  },
  {
    "text": "its own layer that's it in front of your um micro services so microservices can",
    "start": "1640240",
    "end": "1648000"
  },
  {
    "text": "be uh can be doing its own thing rather than worrying about",
    "start": "1648000",
    "end": "1653200"
  },
  {
    "text": "you know your cookie affinity your uh jwt token validation so and so forth",
    "start": "1653200",
    "end": "1660480"
  },
  {
    "text": "so uh there are several tasks and api gateway should perform the first one is",
    "start": "1660480",
    "end": "1665600"
  },
  {
    "text": "the simplest scenario where a api gateway is just a proxy it proxy the upstream incoming",
    "start": "1665600",
    "end": "1672159"
  },
  {
    "text": "traffic and route them to the subsequent service sometimes",
    "start": "1672159",
    "end": "1677440"
  },
  {
    "text": "it is more complex that you need to fan out when the apec advice emits some browser",
    "start": "1677440",
    "end": "1682880"
  },
  {
    "text": "message multiple services need to react um and thirdly there's an even more",
    "start": "1682880",
    "end": "1689520"
  },
  {
    "text": "complex scenario where the api might need to orchestrate all aggregates when the front-end asks for the data",
    "start": "1689520",
    "end": "1697360"
  },
  {
    "text": "that's spread across multiple services um your api gateway need to fetch data and",
    "start": "1697360",
    "end": "1703440"
  },
  {
    "text": "orchestrate them before it gives response to front",
    "start": "1703440",
    "end": "1708640"
  },
  {
    "text": "end and as we showed on the microsoft uh microsoft example uh there is a back-end",
    "start": "1708840",
    "end": "1714960"
  },
  {
    "text": "for front-end requirement for you for some of the api gateways so",
    "start": "1714960",
    "end": "1720640"
  },
  {
    "text": "let's look at our slot so oslots is a great library that can",
    "start": "1720640",
    "end": "1727039"
  },
  {
    "text": "help us to build a api gateway quickly it's a bunch of middlewares that's been",
    "start": "1727039",
    "end": "1734240"
  },
  {
    "text": "executed in a specific order so you can see that oslot has a a",
    "start": "1734240",
    "end": "1740080"
  },
  {
    "text": "a big middleware in your entire solution at solution level rather than your",
    "start": "1740080",
    "end": "1745440"
  },
  {
    "text": "dotnet web api or mvc level and also those status to support",
    "start": "1745440",
    "end": "1751440"
  },
  {
    "text": "websocket which it didn't use to support so it's great so",
    "start": "1751440",
    "end": "1757039"
  },
  {
    "start": "1755000",
    "end": "1755000"
  },
  {
    "text": "there are other options for api apart from our slot oscillator is not the only choice",
    "start": "1757039",
    "end": "1763520"
  },
  {
    "text": "for instance there's envoy so michael's microsoft's example started to use invoice",
    "start": "1763520",
    "end": "1770159"
  },
  {
    "text": "so it's a great alternative and there are past offerings",
    "start": "1770159",
    "end": "1775360"
  },
  {
    "text": "on cloud providers let's take android as an example we can have we can use api management or",
    "start": "1775360",
    "end": "1782000"
  },
  {
    "text": "application gateway uh they are different but i'm not gonna spend too much time in comparing these options um",
    "start": "1782000",
    "end": "1788240"
  },
  {
    "text": "there's just one thing i like to highlight is that when your api gateway grows to a certain",
    "start": "1788240",
    "end": "1795279"
  },
  {
    "text": "complexity or you want to monetize it it's the at that moment you should start",
    "start": "1795279",
    "end": "1801600"
  },
  {
    "text": "thinking about using a past service rather than manage it yourself",
    "start": "1801600",
    "end": "1808240"
  },
  {
    "text": "and and then and of course we can do uh we can build up api gateway in your kubernetes cluster",
    "start": "1808240",
    "end": "1817600"
  },
  {
    "text": "um for instance we can have we can leverage nginx as your ingress controller",
    "start": "1817600",
    "end": "1824799"
  },
  {
    "text": "and i'd like to integrate my microservice architecture with v-net",
    "start": "1824799",
    "end": "1831200"
  },
  {
    "text": "so that we can use it to protect the subsequent microservices we only need to expose the api gateway",
    "start": "1831200",
    "end": "1839760"
  },
  {
    "text": "to the public so this is why we can ensure that the traffic uh between the microservices are",
    "start": "1839760",
    "end": "1846640"
  },
  {
    "text": "on the backbone network that's offered by the cloud provider or",
    "start": "1846640",
    "end": "1853760"
  },
  {
    "text": "android for instance instead of going um via the public internet so this is why the",
    "start": "1853760",
    "end": "1861360"
  },
  {
    "text": "compliances and security can be guaranteed next let's talk about cross service",
    "start": "1861360",
    "end": "1868000"
  },
  {
    "start": "1865000",
    "end": "1865000"
  },
  {
    "text": "communication the first pattern i like to highlight is the saga pattern",
    "start": "1868000",
    "end": "1874799"
  },
  {
    "text": "it has two variations the first one is the choreography what this means is that",
    "start": "1877360",
    "end": "1882559"
  },
  {
    "text": "let's take e-commerce as an example you have you might have an order service then when a certain event happens for",
    "start": "1882559",
    "end": "1889120"
  },
  {
    "text": "instance your order has been created the other service is going to emit some events and",
    "start": "1889120",
    "end": "1894640"
  },
  {
    "text": "some other service for in this case your customer service may need to react to the event that's emitted by the other",
    "start": "1894640",
    "end": "1901760"
  },
  {
    "text": "saga and once it's sorted out its",
    "start": "1901760",
    "end": "1906880"
  },
  {
    "text": "own business logic and uh changed the sites of a transaction for instance from",
    "start": "1906880",
    "end": "1912000"
  },
  {
    "text": "the credits reserved to credits exceeded or accredited credit limit",
    "start": "1912000",
    "end": "1918640"
  },
  {
    "text": "exceeded or the payment sorted whatever event uh once it's done its own operation it's",
    "start": "1918640",
    "end": "1924640"
  },
  {
    "text": "gonna meet another event so other success can react on it so this way the um",
    "start": "1924640",
    "end": "1931279"
  },
  {
    "text": "the events are trained up and they've been flying through different uh micro",
    "start": "1931279",
    "end": "1937279"
  },
  {
    "text": "services uh smoothly there's an alternative to this choreography pattern that is called",
    "start": "1937279",
    "end": "1944000"
  },
  {
    "text": "orchestration pattern that you have a single price that's",
    "start": "1944000",
    "end": "1950880"
  },
  {
    "text": "act as an orchestrator that's when the events",
    "start": "1950880",
    "end": "1956960"
  },
  {
    "text": "need to be emitted it's sent through a message broker and when the other saga reacts on it you",
    "start": "1956960",
    "end": "1965200"
  },
  {
    "text": "get the message back and then you file off another event from your orchestrator so",
    "start": "1965200",
    "end": "1970640"
  },
  {
    "text": "either of these pattern works but they are all event driven pattern that which is",
    "start": "1970640",
    "end": "1976880"
  },
  {
    "text": "good for micro services architecture",
    "start": "1976880",
    "end": "1981600"
  },
  {
    "text": "so as i mentioned um we want to have event sourcing when the states often act",
    "start": "1982640",
    "end": "1988080"
  },
  {
    "text": "when the states of something changed so within the cycle pattern when a",
    "start": "1988080",
    "end": "1993440"
  },
  {
    "text": "particular transaction state has been changed we want to be able to trace the state's change and sometimes if we want",
    "start": "1993440",
    "end": "1998640"
  },
  {
    "text": "to rewind or reply so the event sourcing pattern is a great choice for that for that requirement",
    "start": "1998640",
    "end": "2006559"
  },
  {
    "text": "and by uh in implementing all the soccer pattern or usb panel we need some pops",
    "start": "2008559",
    "end": "2013760"
  },
  {
    "text": "up messaging service and at last i'd like to mention but i",
    "start": "2013760",
    "end": "2020159"
  },
  {
    "text": "also uh want to remind everyone that we need to be careful with cajon so for",
    "start": "2020159",
    "end": "2025679"
  },
  {
    "text": "instance if uh your external dependence dependence service uh is going is going",
    "start": "2025679",
    "end": "2031679"
  },
  {
    "text": "down then you need to have some type of question to make sure that you still can get that data",
    "start": "2031679",
    "end": "2037840"
  },
  {
    "text": "but you need to be careful that um you don't get the scale data so we need",
    "start": "2037840",
    "end": "2043360"
  },
  {
    "text": "to introduce something called a circuit breaker pattern not the real circuit breaker but it",
    "start": "2043360",
    "end": "2048638"
  },
  {
    "text": "works in a similar way that uh whenever there's some abnormal",
    "start": "2048639",
    "end": "2053839"
  },
  {
    "text": "currents going through your circuits we need to um open it so whenever there's an abnormal events like the external",
    "start": "2053839",
    "end": "2060158"
  },
  {
    "text": "service goes down you want to make sure that the service does not uh for does not constantly ping and constantly",
    "start": "2060159",
    "end": "2066800"
  },
  {
    "text": "getting narrow but it will stop pinning it and when the external setting goes back we want to re-establish the",
    "start": "2066800",
    "end": "2072240"
  },
  {
    "text": "connection but only allow a certain attempts or free trials and we want to make sure that the states",
    "start": "2072240",
    "end": "2078960"
  },
  {
    "text": "are remembered properly so there needs to be a slight machine to handle that so",
    "start": "2078960",
    "end": "2085200"
  },
  {
    "text": "we need to be careful when we want to when we want to use kitchen and",
    "start": "2085200",
    "end": "2090800"
  },
  {
    "start": "2090000",
    "end": "2090000"
  },
  {
    "text": "so we've gone through the elements and the pattern that we can use to build microservice let's see what are the",
    "start": "2090800",
    "end": "2097760"
  },
  {
    "text": "services available azure can help us uh first of all it's um we now unnatural",
    "start": "2097760",
    "end": "2104320"
  },
  {
    "text": "uh and keyboard um we can um store our secrets and the credentials uh",
    "start": "2104320",
    "end": "2111040"
  },
  {
    "text": "on keyboard that multiple services can reference using a managed identity",
    "start": "2111040",
    "end": "2116480"
  },
  {
    "text": "so that's why uh we don't need to store uh store the uh you know secrets across",
    "start": "2116480",
    "end": "2121760"
  },
  {
    "text": "different microservices and what are the messages you can use to implement the pops up",
    "start": "2121760",
    "end": "2128640"
  },
  {
    "text": "pattern and uh sorry the event sourcing pattern we have under service parts which supports uh queue or",
    "start": "2128640",
    "end": "2134960"
  },
  {
    "text": "topic subscription model and there's a there's a simplified uh",
    "start": "2134960",
    "end": "2140079"
  },
  {
    "text": "version of uh qr on azure storage accounts and there's also event hub",
    "start": "2140079",
    "end": "2146880"
  },
  {
    "text": "and event grid so there are a lot of options uh if you want to implement event sourcing pattern um you can you should",
    "start": "2146880",
    "end": "2154079"
  },
  {
    "text": "have a look on this managed service rather than building the messaging system yourself",
    "start": "2154079",
    "end": "2160480"
  },
  {
    "text": "so here's a simplified um architecture diagram um that's",
    "start": "2160480",
    "end": "2166320"
  },
  {
    "text": "i think it's it's easy when we build a poc so as we can see",
    "start": "2166320",
    "end": "2173078"
  },
  {
    "text": "we have ipad here if the api gateway supports web socket then um we don't need this uh signalr whereas if our api",
    "start": "2173119",
    "end": "2180960"
  },
  {
    "text": "doesn't support web socket um azure has a great managed service called signal service that can help us to",
    "start": "2180960",
    "end": "2188079"
  },
  {
    "text": "manage our broadcasting service so uh i i like to place arena to protect",
    "start": "2188079",
    "end": "2194560"
  },
  {
    "text": "our microservices so the communications uh within the v-net are",
    "start": "2194560",
    "end": "2199920"
  },
  {
    "text": "guaranteed to be secure and on azure sli and we have our service bus",
    "start": "2199920",
    "end": "2207520"
  },
  {
    "text": "which we can use as our pops up pattern and as we can see each service has its",
    "start": "2207520",
    "end": "2214800"
  },
  {
    "text": "own data store it can be either cosmos nosql or sql or cache or data like",
    "start": "2214800",
    "end": "2221119"
  },
  {
    "text": "whatever data store and uh as a cross cutting uh cons is",
    "start": "2221119",
    "end": "2226400"
  },
  {
    "text": "concerned we can use um azure keyboard to store our keys and secrets we can use",
    "start": "2226400",
    "end": "2232000"
  },
  {
    "text": "application such monitor our applications we can use manage identities and",
    "start": "2232000",
    "end": "2237200"
  },
  {
    "text": "we can support different types of finance and whether it's desktop that you've done with different technologies",
    "start": "2237200",
    "end": "2242800"
  },
  {
    "text": "like electron or so it's a web format now so",
    "start": "2242800",
    "end": "2248800"
  },
  {
    "text": "uh we've done enough discussion um let's get on to a demo so",
    "start": "2248800",
    "end": "2253920"
  },
  {
    "text": "in my demo i'd like to show you how i use oslo to build an api gateway and it",
    "start": "2253920",
    "end": "2259119"
  },
  {
    "text": "communicates offloads traffic to subsequent service um",
    "start": "2259119",
    "end": "2264240"
  },
  {
    "text": "we start with adding the oslo package and uh loading the configuration files",
    "start": "2264240",
    "end": "2271200"
  },
  {
    "text": "uh similar to how we load um our app settings we can load uh different uh",
    "start": "2271200",
    "end": "2276400"
  },
  {
    "text": "loads the uh configuration files for different environments and then we need to do some",
    "start": "2276400",
    "end": "2282079"
  },
  {
    "start": "2280000",
    "end": "2280000"
  },
  {
    "text": "configuration in our startup.cs class",
    "start": "2282079",
    "end": "2286560"
  },
  {
    "text": "we register service and then we use the service there's nothing special",
    "start": "2288160",
    "end": "2293280"
  },
  {
    "text": "compared to other libraries now sometimes we want to use swagger so it's",
    "start": "2293280",
    "end": "2298800"
  },
  {
    "start": "2295000",
    "end": "2295000"
  },
  {
    "text": "easier for us to play with our apis the way we add the oslo swagger is by",
    "start": "2298800",
    "end": "2305280"
  },
  {
    "text": "bringing some additional packages and we add swagger for our slot and then we also add the ui",
    "start": "2305280",
    "end": "2313800"
  },
  {
    "text": "next if you want to add some authentication schema for instance jwt or cookie schema we can do so",
    "start": "2319839",
    "end": "2329520"
  },
  {
    "start": "2320000",
    "end": "2320000"
  },
  {
    "text": "by adding our schema uh in our api gateway the same one as where the",
    "start": "2329520",
    "end": "2335440"
  },
  {
    "text": "osboard is hosted and here's an example of an auto.json",
    "start": "2335440",
    "end": "2340560"
  },
  {
    "start": "2338000",
    "end": "2338000"
  },
  {
    "text": "configuration as we can see",
    "start": "2340560",
    "end": "2346079"
  },
  {
    "text": "there's an upstream uh pattern that we define so what it does is that whenever it gets some",
    "start": "2346480",
    "end": "2353119"
  },
  {
    "text": "request from a upstream pattern it will be mapped to a downstream pattern to our downstream",
    "start": "2353119",
    "end": "2358560"
  },
  {
    "text": "service apparently is that local um i'll show you the configuration file",
    "start": "2358560",
    "end": "2364240"
  },
  {
    "text": "in a bit but it's going to route the traffic to downstream service and if there's any",
    "start": "2364240",
    "end": "2369839"
  },
  {
    "text": "authentication schema we need to register it here by referencing the provider key",
    "start": "2369839",
    "end": "2377920"
  },
  {
    "text": "and also note support a lot of features one of the the greatest features i like",
    "start": "2378720",
    "end": "2384079"
  },
  {
    "text": "is the header transform what it means is that it can extract out a certain information in your authentication token",
    "start": "2384079",
    "end": "2391599"
  },
  {
    "text": "for instance in jw token we can extract other claims and then transform it to headers to the",
    "start": "2391599",
    "end": "2397040"
  },
  {
    "text": "subsequent service so that your subsequent service can reference the",
    "start": "2397040",
    "end": "2402800"
  },
  {
    "text": "header directory rather than passing and validating the jwt token again",
    "start": "2402800",
    "end": "2409880"
  },
  {
    "start": "2410000",
    "end": "2410000"
  },
  {
    "text": "and if if you want to use swagger to interact with subsequent service uh what",
    "start": "2411119",
    "end": "2416800"
  },
  {
    "text": "we have to do is to add a a this uh swagger swagger gen",
    "start": "2416800",
    "end": "2423359"
  },
  {
    "text": "definition in the subsequent services so that's on the striker ui we're able to call subsequent services",
    "start": "2423359",
    "end": "2431599"
  },
  {
    "text": "all right so next let's get to the code so first of all uh let me quickly show",
    "start": "2434880",
    "end": "2441920"
  },
  {
    "text": "you the um the coding structure",
    "start": "2441920",
    "end": "2447119"
  },
  {
    "text": "so in the uh demo that i've prepared we have an infrastructure folder as well",
    "start": "2447119",
    "end": "2453440"
  },
  {
    "text": "as the source code so i prepared the ipad gateway and two subsequent services so first of all let me show you the",
    "start": "2453440",
    "end": "2458960"
  },
  {
    "text": "infrastructure i have a bunch of bicep files i'm pretty sure that you know what bicep is from williams awesome talk",
    "start": "2458960",
    "end": "2465200"
  },
  {
    "text": "which happened on i think the other check just now so i'm not going to uh expand too much",
    "start": "2465200",
    "end": "2471040"
  },
  {
    "text": "in explain what bicep is and how things are booted up but there's a nice feature i like about",
    "start": "2471040",
    "end": "2476640"
  },
  {
    "text": "bicep is that we have a visualizer on vs code and as we can see that we have let me",
    "start": "2476640",
    "end": "2482720"
  },
  {
    "text": "zoom in a bit we have multiple services we have api gateway we have web app web",
    "start": "2482720",
    "end": "2488079"
  },
  {
    "text": "service one web service two which i host them on app service plan which sit here the linux app service plan server forms",
    "start": "2488079",
    "end": "2495599"
  },
  {
    "text": "and uh yeah we can move this to make it easier for us to read",
    "start": "2495599",
    "end": "2500640"
  },
  {
    "text": "um what they do is that they all reference the sign up inside or reference the same keywords so that um",
    "start": "2500640",
    "end": "2507200"
  },
  {
    "text": "we don't need to store the um any security any sorry any uh credentials",
    "start": "2507200",
    "end": "2512800"
  },
  {
    "text": "across different uh micro services that's nice and cool and uh different",
    "start": "2512800",
    "end": "2518400"
  },
  {
    "text": "service cases on data store uh you don't see that structure that clear here because they reference the keywords and",
    "start": "2518400",
    "end": "2524880"
  },
  {
    "text": "to have access to the database um and i'll also show you how we can place",
    "start": "2524880",
    "end": "2530640"
  },
  {
    "text": "v-net uh i i'm i don't have v-net in this uh bicep files because for the sake",
    "start": "2530640",
    "end": "2536240"
  },
  {
    "text": "of simplicity but i'll show you in our android portal in a bit",
    "start": "2536240",
    "end": "2541599"
  },
  {
    "text": "so let's go over to the code first of all let's have a quick look on how",
    "start": "2541599",
    "end": "2549040"
  },
  {
    "text": "we scaffold the um api gateway it's it's nothing different from a normal web api",
    "start": "2549040",
    "end": "2555359"
  },
  {
    "text": "project as i showed before",
    "start": "2555359",
    "end": "2561119"
  },
  {
    "text": "get bigger as i showed before uh we can load the autoloads file and a different",
    "start": "2561119",
    "end": "2566480"
  },
  {
    "text": "environment um if you look at the osmo uh file which we can run it locally it has a",
    "start": "2566480",
    "end": "2574800"
  },
  {
    "text": "uh it's a json file and it has an object called routes and another one is",
    "start": "2574800",
    "end": "2580480"
  },
  {
    "text": "the swagger which we use to configure swagger and also a global configuration so",
    "start": "2580480",
    "end": "2586560"
  },
  {
    "text": "we can have different upstream patterns mapping to different downstream patterns over different",
    "start": "2586560",
    "end": "2591680"
  },
  {
    "text": "protocol and certainly different ports and i i i",
    "start": "2591680",
    "end": "2598079"
  },
  {
    "text": "wouldn't demo the devops process but in your devops process you need to somehow",
    "start": "2598079",
    "end": "2603760"
  },
  {
    "text": "do some json file transformation or you can generate these production or slots",
    "start": "2603760",
    "end": "2610000"
  },
  {
    "text": "yourself programmatically so for instance on azure the services all use port id so we need",
    "start": "2610000",
    "end": "2616640"
  },
  {
    "text": "to have port id here and then the downstream service can be different urls or your own dns",
    "start": "2616640",
    "end": "2623760"
  },
  {
    "text": "then managed by your dns provider or azure dns zone or dns global",
    "start": "2623760",
    "end": "2630640"
  },
  {
    "text": "now as we can as we saw before we have swag",
    "start": "2630640",
    "end": "2635680"
  },
  {
    "text": "the swagger key that maps to the swagger definition for subsequent service",
    "start": "2635680",
    "end": "2640880"
  },
  {
    "text": "and also the authentication schema that we want these gateway to transform",
    "start": "2640880",
    "end": "2647680"
  },
  {
    "text": "and also we need to substitute the base url to be where your api gateway sits",
    "start": "2647680",
    "end": "2654480"
  },
  {
    "text": "so this is the api gateway and i've also prepared two subsequent services",
    "start": "2654480",
    "end": "2660720"
  },
  {
    "text": "so we have service one which does nothing but just returns on data",
    "start": "2660720",
    "end": "2665920"
  },
  {
    "text": "showing that we it's actually written data from a subsequent service and uh prepared a login endpoint um",
    "start": "2665920",
    "end": "2673839"
  },
  {
    "text": "usually we want to wrap this to a service but i just added controller for the sake of simplicity",
    "start": "2673839",
    "end": "2680160"
  },
  {
    "text": "um we can generate some jwd token and we want that token to be validated by api",
    "start": "2680160",
    "end": "2685280"
  },
  {
    "text": "gateway rather than subsequent services as you can see i haven't had any jw token schema here apart from the swagger",
    "start": "2685280",
    "end": "2692480"
  },
  {
    "text": "definition which help us to use swagger um",
    "start": "2692480",
    "end": "2698480"
  },
  {
    "text": "the on the other service that i also prepared is that",
    "start": "2698880",
    "end": "2704960"
  },
  {
    "text": "we can try the header transformation we expect to see the uh",
    "start": "2704960",
    "end": "2711280"
  },
  {
    "text": "client that we transformed by uh api gateway rather than we providing it on",
    "start": "2711280",
    "end": "2717680"
  },
  {
    "text": "the api call so let me just go back",
    "start": "2717680",
    "end": "2723359"
  },
  {
    "text": "a step so on service one what i've prepared is sorry this one in the login process",
    "start": "2723359",
    "end": "2729839"
  },
  {
    "text": "we've added a client called the special client just for testing purpose and we want to see that these current",
    "start": "2729839",
    "end": "2736000"
  },
  {
    "text": "can be extracted out by our api gateway and",
    "start": "2736000",
    "end": "2741280"
  },
  {
    "text": "attach it to the subsequent call to service b so that service b can",
    "start": "2741280",
    "end": "2746960"
  },
  {
    "text": "recognize it okay so enough um",
    "start": "2746960",
    "end": "2752720"
  },
  {
    "text": "enough talk about the code bytes let's look at the demo in action",
    "start": "2752720",
    "end": "2758079"
  },
  {
    "text": "so what i have is uh i have a gateway to making sure that i'm on the ipad gateway",
    "start": "2758079",
    "end": "2763520"
  },
  {
    "text": "since we've configured swagger well we can see that from api gateway's perspective",
    "start": "2763520",
    "end": "2769280"
  },
  {
    "text": "we can see the definition for service i and also service b so just do a quick test",
    "start": "2769280",
    "end": "2775280"
  },
  {
    "text": "make sure that it works so it says hello from service to controller um",
    "start": "2775280",
    "end": "2781200"
  },
  {
    "text": "i use ib and one two you know interchangeably and um",
    "start": "2781200",
    "end": "2788079"
  },
  {
    "text": "if we call service one then we can see that it says hello",
    "start": "2788079",
    "end": "2793680"
  },
  {
    "text": "now um if we are trying to access the endpoint that requires um",
    "start": "2793680",
    "end": "2799200"
  },
  {
    "text": "authentication we defined in our oslo file",
    "start": "2799200",
    "end": "2805520"
  },
  {
    "text": "what we potentially get is 401 unauthorized",
    "start": "2805520",
    "end": "2810560"
  },
  {
    "text": "this is the sign with the endpoint on service b",
    "start": "2810560",
    "end": "2815640"
  },
  {
    "text": "remember that we uh want to see the header that's been transformed here so but for now we can't access it we get",
    "start": "2816160",
    "end": "2823839"
  },
  {
    "text": "401 okay let's get back to service i and let's login",
    "start": "2823839",
    "end": "2829599"
  },
  {
    "text": "so let's put in some username it's like patrick i haven't validated it so it's a proper email but",
    "start": "2829599",
    "end": "2835680"
  },
  {
    "text": "let me just put in something all right",
    "start": "2835680",
    "end": "2840960"
  },
  {
    "text": "something random now it generates a jw token and let's quickly observe what",
    "start": "2840960",
    "end": "2846240"
  },
  {
    "text": "this straightwater can look like",
    "start": "2846240",
    "end": "2849599"
  },
  {
    "text": "so as we can see that's it contains the name id and the email well this is not an email i",
    "start": "2856880",
    "end": "2862319"
  },
  {
    "text": "didn't validate it sorry uh but what we should uh highlight on is this special client we",
    "start": "2862319",
    "end": "2869359"
  },
  {
    "text": "want to see this being passed from the uh by being extracted from the client that passed to api",
    "start": "2869359",
    "end": "2876079"
  },
  {
    "text": "gateway but also been recognized by subsequent service all right so let's go back",
    "start": "2876079",
    "end": "2882319"
  },
  {
    "text": "and grab a copy of it so the cool thing about",
    "start": "2882319",
    "end": "2889200"
  },
  {
    "text": "swagger for ocelot is that you can authorize it here you only need to authorize it once and all the subsequent",
    "start": "2889200",
    "end": "2894319"
  },
  {
    "text": "services can leverage it so the first thing let's test this endpoint that requires authentication",
    "start": "2894319",
    "end": "2901839"
  },
  {
    "text": "when we hit execute remember we used to get 401 but now we get 200",
    "start": "2902720",
    "end": "2908079"
  },
  {
    "text": "and now let's switch to service b and here we let's try the see if we can get a header so if",
    "start": "2908079",
    "end": "2915040"
  },
  {
    "text": "we click execute we see we get the header out so we'll uh",
    "start": "2915040",
    "end": "2920319"
  },
  {
    "text": "review our code a bit just make sure that we understand how it works service 2 with us",
    "start": "2920319",
    "end": "2926000"
  },
  {
    "text": "simply just get the header and return this in the uh in the 200 response so now",
    "start": "2926000",
    "end": "2932720"
  },
  {
    "text": "what let's test if we try to pass it with different header will it get this header or the header is",
    "start": "2932720",
    "end": "2938480"
  },
  {
    "text": "transformed if we click execute we see",
    "start": "2938480",
    "end": "2943920"
  },
  {
    "text": "it's not taking the header that will pass to it but it transforms from the uh",
    "start": "2943920",
    "end": "2949280"
  },
  {
    "text": "api gateway so this way your api giveaway is the actual entry point and it could ignite the traffic and",
    "start": "2949280",
    "end": "2956400"
  },
  {
    "text": "attach the information you need to attach to subsequent services this is great",
    "start": "2956400",
    "end": "2962160"
  },
  {
    "text": "um so um i've deployed it on azure if we jump onto azure",
    "start": "2962160",
    "end": "2967440"
  },
  {
    "text": "what we can see is let me return a step back uh we have a bunch of",
    "start": "2967440",
    "end": "2974319"
  },
  {
    "text": "maybe we need to make a bit smaller we have a bunch of services uh with provision on azure",
    "start": "2974319",
    "end": "2980480"
  },
  {
    "text": "um and there's nothing special um apart from the v-neck configuration so",
    "start": "2980480",
    "end": "2987760"
  },
  {
    "text": "as i mentioned before we want to have a v-net to protect our service",
    "start": "2987760",
    "end": "2992960"
  },
  {
    "text": "so what that means is that we can access the endpoint api gateway but not the",
    "start": "2992960",
    "end": "2998559"
  },
  {
    "text": "services themselves so let me quickly show you what i mean",
    "start": "2998559",
    "end": "3004318"
  },
  {
    "text": "if we click on one of the microservice and we click on the url",
    "start": "3006000",
    "end": "3012359"
  },
  {
    "text": "we can see it because i haven't put the vena access policy in price but if we go",
    "start": "3012559",
    "end": "3017839"
  },
  {
    "text": "to another service that i remember i have put in the asset policy already in place",
    "start": "3017839",
    "end": "3026160"
  },
  {
    "text": "we'll get 403 and the reason why we would get 403 is that we have the network uh networking configuration in",
    "start": "3026160",
    "end": "3033119"
  },
  {
    "text": "place uh by that what i mean is if we scroll down and move on to the",
    "start": "3033119",
    "end": "3040319"
  },
  {
    "text": "networking session it was me not working there we go it's over here",
    "start": "3040319",
    "end": "3048000"
  },
  {
    "text": "we can see that we have an access restrictions on",
    "start": "3048400",
    "end": "3053760"
  },
  {
    "text": "what it access restriction is is that it only allows the traffic uh that's been",
    "start": "3053760",
    "end": "3060000"
  },
  {
    "text": "that's been sent to us within the v-net",
    "start": "3060000",
    "end": "3064480"
  },
  {
    "text": "and it denied all the other traffic so how come the",
    "start": "3067520",
    "end": "3073280"
  },
  {
    "text": "then how come the api gateway can offload traffic to it it's because we've",
    "start": "3073280",
    "end": "3078640"
  },
  {
    "text": "configured it to do so by adding the api gateway to the v-net",
    "start": "3078640",
    "end": "3085520"
  },
  {
    "text": "and that's down in the networking session over here so as we can see we have a v-net",
    "start": "3085520",
    "end": "3091280"
  },
  {
    "text": "integration on for the api gateway so what this means is that the",
    "start": "3091280",
    "end": "3096400"
  },
  {
    "text": "outbound traffic that's been routed from the api gateway is going to uh to go",
    "start": "3096400",
    "end": "3101839"
  },
  {
    "text": "through the backbone network on azure uh under this v-net and subnet",
    "start": "3101839",
    "end": "3108559"
  },
  {
    "text": "so whenever you impose an asset policy on the subsequent market services um only",
    "start": "3108559",
    "end": "3114240"
  },
  {
    "text": "the traffic that you configure to allow will be allowed um all the other traffic",
    "start": "3114240",
    "end": "3119520"
  },
  {
    "text": "from the um other you know public uh public um",
    "start": "3119520",
    "end": "3124559"
  },
  {
    "text": "uh requests will be denied so",
    "start": "3124559",
    "end": "3129599"
  },
  {
    "text": "um just as a quick uh proof if we uh try if",
    "start": "3129599",
    "end": "3135040"
  },
  {
    "text": "we take the access policy off",
    "start": "3135040",
    "end": "3140319"
  },
  {
    "text": "from the service that we had the access policy on what's going to happen",
    "start": "3140319",
    "end": "3145440"
  },
  {
    "text": "let's see i can't find the networking again all",
    "start": "3145440",
    "end": "3150559"
  },
  {
    "text": "right so here this one so if we take this off",
    "start": "3150559",
    "end": "3156800"
  },
  {
    "text": "remove so now we don't have any deny policy so",
    "start": "3156960",
    "end": "3163760"
  },
  {
    "text": "by default it allows all the traffic so after that if you try to access um",
    "start": "3163760",
    "end": "3172160"
  },
  {
    "text": "service one again we'll see that well able to access service one",
    "start": "3172160",
    "end": "3177839"
  },
  {
    "text": "from its own url so by leveraging v-net it's easier for us",
    "start": "3177839",
    "end": "3184960"
  },
  {
    "text": "to protect our microservices and offload the security and compliance is",
    "start": "3184960",
    "end": "3192079"
  },
  {
    "text": "concerned on azure si so that is that is great",
    "start": "3192079",
    "end": "3197200"
  },
  {
    "text": "we can have less concern so that we can have a more uh have a better",
    "start": "3197200",
    "end": "3202559"
  },
  {
    "text": "productivity on delivering the business value in the mining application okay with that uh i've demoed um how we",
    "start": "3202559",
    "end": "3210960"
  },
  {
    "text": "use um autoload to build an api gateway and deploy api gateway as um app service",
    "start": "3210960",
    "end": "3216240"
  },
  {
    "text": "on android let's go back to my presentation and see a quick",
    "start": "3216240",
    "end": "3222480"
  },
  {
    "text": "summary today um",
    "start": "3222480",
    "end": "3228000"
  },
  {
    "text": "first of all uh we've compared monoliths and the microservices",
    "start": "3228000",
    "end": "3233599"
  },
  {
    "text": "on the overview level and we understood that monolith is not completely wrong while",
    "start": "3233599",
    "end": "3239680"
  },
  {
    "text": "microservice has its own challenge challenges although i believe that down the track when the",
    "start": "3239680",
    "end": "3246559"
  },
  {
    "text": "business has become more and more complex in the world uh you know in the modern world um",
    "start": "3246559",
    "end": "3254000"
  },
  {
    "text": "microservices tend to be the uh architecture of preference for most big",
    "start": "3254000",
    "end": "3259280"
  },
  {
    "text": "organizations and we also had a deep dive into different key elements of a microservice",
    "start": "3259280",
    "end": "3266800"
  },
  {
    "text": "and the cloud patterns that we want to advocate when implementing microservice",
    "start": "3266800",
    "end": "3273040"
  },
  {
    "text": "we also spent a lot of time looking at the services azure offers to help us",
    "start": "3273040",
    "end": "3278079"
  },
  {
    "text": "implement those uh clean architecture and those good cloud patterns",
    "start": "3278079",
    "end": "3283200"
  },
  {
    "text": "and i will also see a demo um of how i build a quick plc of",
    "start": "3283200",
    "end": "3290319"
  },
  {
    "text": "using ocelot lot as api gateway and you know the the other subsequent",
    "start": "3290319",
    "end": "3295359"
  },
  {
    "text": "services in microservices architecture so with all that that's the end of my",
    "start": "3295359",
    "end": "3302079"
  },
  {
    "text": "presentation there are references um um i have uploaded the code that i showed you to my personal um",
    "start": "3302079",
    "end": "3310000"
  },
  {
    "text": "github account i'll be i'll be keep updating it to add more stuff to it so hopefully we can use",
    "start": "3310000",
    "end": "3316160"
  },
  {
    "text": "it as a good template to start with micro service architecture and i also reference to this",
    "start": "3316160",
    "end": "3322480"
  },
  {
    "text": "microsoft.io as a great resource for different cloud patterns",
    "start": "3322480",
    "end": "3328000"
  },
  {
    "text": "all right with all that thank you very much um still have five minutes to go so if",
    "start": "3328000",
    "end": "3334240"
  },
  {
    "text": "there are any questions you're welcome to drop down or if you want to discuss offline um you know my um maybe let me",
    "start": "3334240",
    "end": "3340400"
  },
  {
    "text": "just move on to this slide you're welcome to post them on the",
    "start": "3340400",
    "end": "3346240"
  },
  {
    "text": "social media links",
    "start": "3346240",
    "end": "3349839"
  }
]