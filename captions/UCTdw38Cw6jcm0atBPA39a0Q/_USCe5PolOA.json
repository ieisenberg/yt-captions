[
  {
    "text": "you know that spot where you're in line maybe you're at an amusement park or at the zoo you know how you stand in line",
    "start": "3879",
    "end": "10719"
  },
  {
    "text": "for a good long time and and eventually you make your way through all the cues",
    "start": "10719",
    "end": "16080"
  },
  {
    "text": "and and all the extra rooms of things and and you get to the front of the line",
    "start": "16080",
    "end": "21199"
  },
  {
    "text": "you know how cool it is to be next isn't that really exciting to be",
    "start": "21199",
    "end": "28759"
  },
  {
    "text": "next you you know what's really cool we're next we get to do this isn't that",
    "start": "28759",
    "end": "35640"
  },
  {
    "text": "really cool we get to do unit testing with.net and what's really fun is um",
    "start": "35640",
    "end": "41879"
  },
  {
    "text": "that's my slide here's the part where I tell you that I I'm definitely going to post the",
    "start": "41879",
    "end": "47680"
  },
  {
    "text": "slides on my site tonight but in this talk there are no slides we're going to live code",
    "start": "47680",
    "end": "52840"
  },
  {
    "text": "everything the code repository of what we're going to look at is already online though and so you can head off to Rob",
    "start": "52840",
    "end": "59079"
  },
  {
    "text": "rich.org and you can find this GitHub repository now this GitHub repository",
    "start": "59079",
    "end": "65360"
  },
  {
    "text": "github.com whole bunch of stuff but let's head to Rob rich.org and this is a much easier",
    "start": "65360",
    "end": "73119"
  },
  {
    "text": "way to get there so from Rob rich.org we click on presentations here's net",
    "start": "73119",
    "end": "78200"
  },
  {
    "text": "testing best practices and you can head to the code straight there so the code",
    "start": "78200",
    "end": "83240"
  },
  {
    "text": "is online right now achievements unlocked wo while we're here on robd",
    "start": "83240",
    "end": "90040"
  },
  {
    "text": ".org let's click on about me and we'll see some of the things that I've done recently uh both Microsoft and Docker",
    "start": "90040",
    "end": "95600"
  },
  {
    "text": "have given me some awards that's really fun I'm a friend of Redgate a give Camp is really fun a give Camp brings",
    "start": "95600",
    "end": "102159"
  },
  {
    "text": "volunteer developers together with Charities to build free software we start building software Friday after",
    "start": "102159",
    "end": "108119"
  },
  {
    "text": "work Sunday afternoon we deliver that completed software to Charities sleep is optional caffeine provided if you're in",
    "start": "108119",
    "end": "115040"
  },
  {
    "text": "Phoenix Arizona in the states come join us for the next a give Camp fre You' let or if you'd like give Camp here in",
    "start": "115040",
    "end": "120600"
  },
  {
    "text": "Sydney or wherever you traveled from find me here at the conference or on any",
    "start": "120600",
    "end": "125759"
  },
  {
    "text": "of the socials and let's get a give camp in your neighborhood too some of the other things that I've done I got to",
    "start": "125759",
    "end": "131599"
  },
  {
    "text": "write a few books I I run some user groups but one of the things I'm particularly proud of I replied to a net",
    "start": "131599",
    "end": "137319"
  },
  {
    "text": "rocks podcast episode they read my comment on the air and they sent me a",
    "start": "137319",
    "end": "142959"
  },
  {
    "text": "mug and if you'd like a net Rock no I'm just kidding they actually don't send any net Rock mugs anymore so I have one",
    "start": "142959",
    "end": "150040"
  },
  {
    "text": "of the rare finds it's pretty cool so here's our source code and what I like",
    "start": "150040",
    "end": "155599"
  },
  {
    "text": "about this is that we have a start folder and a done folder so you can",
    "start": "155599",
    "end": "160920"
  },
  {
    "text": "clone this repository or download it and you can grab exactly the content that we",
    "start": "160920",
    "end": "166959"
  },
  {
    "text": "started with and build up to exactly where we're going to end up or maybe we'll start a little bit after that and",
    "start": "166959",
    "end": "173200"
  },
  {
    "text": "we'll end before their time constraints being a thing but you can definitely begin where we begin and and and at that",
    "start": "173200",
    "end": "180959"
  },
  {
    "text": "point compare Your solution with mine and let's see if I made any mistakes so here's our repository I'll",
    "start": "180959",
    "end": "188760"
  },
  {
    "text": "open it up in visual studio and we've got this light Switcher app it's a class",
    "start": "188760",
    "end": "195040"
  },
  {
    "text": "inside this fictitious iot project and our job is to test it so we have a light",
    "start": "195040",
    "end": "200319"
  },
  {
    "text": "switcher it's not a stateful light switcher we might turn it on when it's already on or turn it off when it's",
    "start": "200319",
    "end": "205720"
  },
  {
    "text": "already off but we have this light switcher thing we have a motion sensor",
    "start": "205720",
    "end": "211080"
  },
  {
    "text": "that's going to detect motion and here's the light actuator the code that we're going to use we pass in motion detected",
    "start": "211080",
    "end": "219239"
  },
  {
    "text": "and our job is to test this method right here if motion is detected and it's",
    "start": "219239",
    "end": "225879"
  },
  {
    "text": "evening or night then we should turn it on or if it's light noon or morning we",
    "start": "225879",
    "end": "231760"
  },
  {
    "text": "should turn it off or if it's been long enough and it's dark then we should also turn it off and so this is the class",
    "start": "231760",
    "end": "238959"
  },
  {
    "text": "that we need to take now I have created a sample implementation just so that we can see",
    "start": "238959",
    "end": "244840"
  },
  {
    "text": "it here's our light switcher that's going to instantiate all the things and then loop on it and in my motion sensor",
    "start": "244840",
    "end": "253519"
  },
  {
    "text": "I'm just going to flip the motion back and forth just so that you know we have some movement here but ultimately this",
    "start": "253519",
    "end": "259280"
  },
  {
    "text": "is just kind of getting that con the everything set up so that we have a user",
    "start": "259280",
    "end": "265520"
  },
  {
    "text": "of this application code okay so our next step is to start building tests now",
    "start": "265520",
    "end": "271160"
  },
  {
    "text": "we need a test project so I would come in here and I would say add new",
    "start": "271160",
    "end": "277919"
  },
  {
    "text": "project and uh we could choose Ms test or nunit in this case I chose",
    "start": "277919",
    "end": "284360"
  },
  {
    "text": "xunit and here's my xunit test",
    "start": "284360",
    "end": "291080"
  },
  {
    "text": "project and we'll create a new test project now I've already done that here's our test project I added a few",
    "start": "291080",
    "end": "297600"
  },
  {
    "text": "dependencies as well we'll see some of those dependencies come into place but uh for the most part I just added umq M",
    "start": "297600",
    "end": "307479"
  },
  {
    "text": "and fluent assertions okay so now that we've got a test project let's create a",
    "start": "307479",
    "end": "314759"
  },
  {
    "text": "test now this will be kind of a simple hello world test but let's say",
    "start": "314759",
    "end": "322280"
  },
  {
    "text": "assert true cool we've got a passing test well",
    "start": "323160",
    "end": "331960"
  },
  {
    "text": "let's actually try to run this test I'll come in here into um the test window and",
    "start": "331960",
    "end": "338400"
  },
  {
    "text": "let's open up the test Explorer and here I've got the test Explorer and so now",
    "start": "338400",
    "end": "344360"
  },
  {
    "text": "with my test Explorer once I've built the code I can see that I have my one test and so let's run the test and yep",
    "start": "344360",
    "end": "353919"
  },
  {
    "text": "we've got a green test excellent now we could definitely run",
    "start": "353919",
    "end": "358960"
  },
  {
    "text": "this test oh it's discovering tests it's finding the tests it's running the tests now",
    "start": "358960",
    "end": "366199"
  },
  {
    "text": "we've got a green test great ship it all of our tests pass we could run the test",
    "start": "366199",
    "end": "372240"
  },
  {
    "text": "from the CLI as well we're here in the same folder as the solution and we could say net test and net test and it will",
    "start": "372240",
    "end": "383080"
  },
  {
    "text": "run all of those tests and validate that we've got a passing thing cool so it",
    "start": "383080",
    "end": "389680"
  },
  {
    "text": "discovered our one test and it ran that test and everything passed one passing",
    "start": "389680",
    "end": "396639"
  },
  {
    "text": "test nice okay now that we've got a test we can run it from the CLI and from the UI",
    "start": "396639",
    "end": "404080"
  },
  {
    "text": "let's build this out a little bit more so I'm going to talk about the arrange act assert pattern let's say",
    "start": "404080",
    "end": "411080"
  },
  {
    "text": "arrange act assert now the cool part here is I",
    "start": "411080",
    "end": "416440"
  },
  {
    "text": "like to start with act so let's say VAR actual equals X",
    "start": "416440",
    "end": "425280"
  },
  {
    "text": "Plus y now that's our add function we'd probably call off into another thing so",
    "start": "425280",
    "end": "431319"
  },
  {
    "text": "now that we've got X and Y what do we want to assert assert do true actual",
    "start": "431319",
    "end": "439360"
  },
  {
    "text": "equals expected or I can say say assert do",
    "start": "439360",
    "end": "445840"
  },
  {
    "text": "equal actual comma expected let's do that now now that we've got the actual",
    "start": "445840",
    "end": "452199"
  },
  {
    "text": "and the uh the Act and the assert we can come back to the arrange and we've kind",
    "start": "452199",
    "end": "457680"
  },
  {
    "text": "of test driven our test that's pretty cool so now we need int uh xal 2 int Y =",
    "start": "457680",
    "end": "467080"
  },
  {
    "text": "2 um int expected equal 4 and we can run",
    "start": "467080",
    "end": "472960"
  },
  {
    "text": "our test and we can see that that test passes now we got to see the arrange act",
    "start": "472960",
    "end": "478440"
  },
  {
    "text": "assert pattern where we kind of set up the behavior that we want to do and then we do something and then we validate",
    "start": "478440",
    "end": "485639"
  },
  {
    "text": "that we get the result that we want but unfortunately this test isn't great and",
    "start": "485639",
    "end": "491479"
  },
  {
    "text": "it isn't great because well the sample data that we have could lead to unexpected results what if my",
    "start": "491479",
    "end": "498039"
  },
  {
    "text": "implementation changed to multiply well uh my test still passes so I'm not",
    "start": "498039",
    "end": "505039"
  },
  {
    "text": "really validating my behavior very well the test data didn't really help me with that",
    "start": "505039",
    "end": "510560"
  },
  {
    "text": "okay so let's change this from x 2 and Y3 to X2 and from X from Y2 to Y3 now I",
    "start": "510560",
    "end": "522518"
  },
  {
    "text": "have an implementation that can help me and so let's run this test and we can say that nope my test P my test failed",
    "start": "522519",
    "end": "530800"
  },
  {
    "text": "now my test failed because now I have more of realistic data that will help me validate that condition and show me that",
    "start": "530800",
    "end": "537399"
  },
  {
    "text": "my implementation is incorrect so back to the test explor now that we've got a failing test let's fix our",
    "start": "537399",
    "end": "544120"
  },
  {
    "text": "implementation rerun it and we can see our test passes cool so we've kind of got a",
    "start": "544120",
    "end": "550279"
  },
  {
    "text": "little bit of how that testing framework is going to get set up we've built a sample test now let's come back here to",
    "start": "550279",
    "end": "557160"
  },
  {
    "text": "our application code and get a feel for the test that we want to write here now",
    "start": "557160",
    "end": "562600"
  },
  {
    "text": "u in this implementation we can see that we pass in the motion detected and based",
    "start": "562600",
    "end": "569160"
  },
  {
    "text": "on motion detected we're going to change last motion time okay that sounds like a good test Suite to build let's create a",
    "start": "569160",
    "end": "576800"
  },
  {
    "text": "new item and we'll call this light",
    "start": "576800",
    "end": "581959"
  },
  {
    "text": "actuator underscore actuate lights",
    "start": "581959",
    "end": "589399"
  },
  {
    "text": "tests now this I've very specifically named it my class name underscore My Method",
    "start": "589720",
    "end": "596560"
  },
  {
    "text": "name test so I have a very clear path to what this thing is going to do um I love",
    "start": "596560",
    "end": "602760"
  },
  {
    "text": "file scope name spaces like let's make this public and implicit usings are",
    "start": "602760",
    "end": "609160"
  },
  {
    "text": "amazing okay so we saw that we need a method public void",
    "start": "609160",
    "end": "616440"
  },
  {
    "text": "um motion detected change last motion",
    "start": "616440",
    "end": "623640"
  },
  {
    "text": "time okay now in U nunit and Ms test we might",
    "start": "623640",
    "end": "630399"
  },
  {
    "text": "choose to call this test in xunit we call it fact why did I choose xunit well",
    "start": "630399",
    "end": "636880"
  },
  {
    "text": "the.net team use xunit to test.net I think that's a pretty good",
    "start": "636880",
    "end": "643000"
  },
  {
    "text": "recommendation so I'll go with that cool so now if I just left it here and kept looking for my test and I ran it it",
    "start": "643000",
    "end": "650680"
  },
  {
    "text": "would succeed so I'm going to very specifically say Throw new not",
    "start": "650680",
    "end": "656959"
  },
  {
    "text": "implemented exception because I haven't written this I want it to fail before we walk away okay so",
    "start": "656959",
    "end": "664639"
  },
  {
    "text": "we've got this one change last motion time okay well if motion is not detected",
    "start": "664639",
    "end": "672040"
  },
  {
    "text": "then I don't want to change last motion time so we've got another test there motion not",
    "start": "672040",
    "end": "679600"
  },
  {
    "text": "detected um un Change last motion time or I'm gonna say",
    "start": "679600",
    "end": "687800"
  },
  {
    "text": "last motion time not",
    "start": "687800",
    "end": "691240"
  },
  {
    "text": "changed cool we've got those tests next we want to get the time",
    "start": "694560",
    "end": "700000"
  },
  {
    "text": "period And if it's evening or night we want to turn the light on so we could",
    "start": "700000",
    "end": "706480"
  },
  {
    "text": "build a whole bunch of tests that say",
    "start": "706480",
    "end": "712639"
  },
  {
    "text": "evening turn on and then we could build another one that was nice",
    "start": "712639",
    "end": "720839"
  },
  {
    "text": "turn on and you can see where this is going we're starting to well duplicate our code in our tests now dry inside of",
    "start": "720839",
    "end": "728440"
  },
  {
    "text": "tests is going to be a little bit problematic because we want our test to be super clear but in this case we can",
    "start": "728440",
    "end": "734880"
  },
  {
    "text": "just say um dark turn on and let's pass",
    "start": "734880",
    "end": "740440"
  },
  {
    "text": "in some parameters so I'm going to change this from fact to Theory and let's do some inline",
    "start": "740440",
    "end": "747440"
  },
  {
    "text": "data now I'm going to pass in evening and I want it to turn on the light and",
    "start": "747440",
    "end": "754920"
  },
  {
    "text": "I'll pass in night and I want it to turn on the light so I'll pass in time of",
    "start": "754920",
    "end": "764199"
  },
  {
    "text": "day and bu expected there we go now we don't need",
    "start": "765480",
    "end": "772560"
  },
  {
    "text": "this whole test and to that end as we're looking at this we can say or if it's",
    "start": "772560",
    "end": "777720"
  },
  {
    "text": "not evening or night then I want to turn it off then I don't want to turn it on so let's add those as well I'm going to",
    "start": "777720",
    "end": "784560"
  },
  {
    "text": "say morning and [Music] afternoon I don't want to turn it on",
    "start": "784560",
    "end": "793079"
  },
  {
    "text": "false false cool so that'll help us test this",
    "start": "793079",
    "end": "798600"
  },
  {
    "text": "part of the code we can also take a look at this we want to say if it's dark then",
    "start": "798600",
    "end": "805720"
  },
  {
    "text": "let's turn it off so let's say um oh if",
    "start": "805720",
    "end": "810880"
  },
  {
    "text": "it's light turn it",
    "start": "810880",
    "end": "813760"
  },
  {
    "text": "off and in this case we'll just flip our signs false",
    "start": "816480",
    "end": "823680"
  },
  {
    "text": "false true true and I see one more use case here we",
    "start": "823680",
    "end": "830839"
  },
  {
    "text": "want to say has it been long enough and so we'll want some test there we probably won't have time to build this",
    "start": "830839",
    "end": "837440"
  },
  {
    "text": "so if it it's been long enough turn it off we'll need some tests",
    "start": "837440",
    "end": "844839"
  },
  {
    "text": "there too cool so we took a look at our code and we analyzed kind of all of the",
    "start": "844839",
    "end": "850639"
  },
  {
    "text": "flows through the code all of the scenarios and we were able to build a",
    "start": "850639",
    "end": "855720"
  },
  {
    "text": "test then for each one of those now we haven't implemented the test so towards red green refractor I'm pretty sure",
    "start": "855720",
    "end": "862120"
  },
  {
    "text": "we're going to hit a whole bunch of Reds let's run all of our tests and take a",
    "start": "862120",
    "end": "867199"
  },
  {
    "text": "look at it and oh yeah we've got a bunch of failing tests that's awesome now that",
    "start": "867199",
    "end": "873720"
  },
  {
    "text": "we've hit red let's go for green okay first up motion detected last",
    "start": "873720",
    "end": "880360"
  },
  {
    "text": "motion time so we saw our arrange act assert pattern",
    "start": "880360",
    "end": "885560"
  },
  {
    "text": "arrange act assert so how do I want to act well",
    "start": "885560",
    "end": "892560"
  },
  {
    "text": "first thing is I need one of these light actuator doohickeys so let's create a",
    "start": "892560",
    "end": "898519"
  },
  {
    "text": "light actuator and let's call light actuator",
    "start": "898519",
    "end": "903880"
  },
  {
    "text": "do actuate lights and motion was detected so I'll pass in true here well",
    "start": "903880",
    "end": "911800"
  },
  {
    "text": "what is true I don't know I'm G to forget the",
    "start": "911800",
    "end": "918440"
  },
  {
    "text": "moment that I walk away from this test so I'm actually G to say let's say bull",
    "start": "918440",
    "end": "924000"
  },
  {
    "text": "motion detected equals true and I'll pass in motion detected here cool now I",
    "start": "924000",
    "end": "931639"
  },
  {
    "text": "know what that means that's a great best practice to be able to label the parameters going into my thing the next",
    "start": "931639",
    "end": "938240"
  },
  {
    "text": "thing that I want to do is I want to say assert dot",
    "start": "938240",
    "end": "944639"
  },
  {
    "text": "equal oh nope not equal actual",
    "start": "944639",
    "end": "951600"
  },
  {
    "text": "expected okay well expected",
    "start": "951600",
    "end": "957519"
  },
  {
    "text": "well actually what I'm after is did it change so let's say start time is new",
    "start": "959480",
    "end": "967160"
  },
  {
    "text": "date time 200011 and I'll document this as uh",
    "start": "967160",
    "end": "975519"
  },
  {
    "text": "value not important just not",
    "start": "975519",
    "end": "981160"
  },
  {
    "text": "now if I look at that it's like well is that value important",
    "start": "981160",
    "end": "989880"
  },
  {
    "text": "and so documenting that here is another great best practice as well so what I want to say is start uh actual",
    "start": "989880",
    "end": "998079"
  },
  {
    "text": "time and start time okay so let's go grab date time actual time equals light",
    "start": "998079",
    "end": "1009040"
  },
  {
    "text": "actuator dot last motion time cool",
    "start": "1009040",
    "end": "1017360"
  },
  {
    "text": "build H last motion time isn't public so I",
    "start": "1023079",
    "end": "1030240"
  },
  {
    "text": "can't reach into it to go grab it for my test now for my calling code it's important that it's not public I don't",
    "start": "1030240",
    "end": "1036558"
  },
  {
    "text": "want my caller to fuss with it but in this case I do need to be able to test it so I'm going to change this to public",
    "start": "1036559",
    "end": "1044240"
  },
  {
    "text": "and say public to be testable not part",
    "start": "1044240",
    "end": "1049320"
  },
  {
    "text": "of interface I've created this note so that people coming behind me won't say oh let",
    "start": "1049320",
    "end": "1055960"
  },
  {
    "text": "me actually add it to the interface I need nope I just I need to be able to get and set that so back here in my test",
    "start": "1055960",
    "end": "1063840"
  },
  {
    "text": "I'm going to set light actuator do last motion time equals start time and now",
    "start": "1063840",
    "end": "1072320"
  },
  {
    "text": "I've got my test cool now I spent a really good long time debugging a test",
    "start": "1072320",
    "end": "1078000"
  },
  {
    "text": "once the test test said got seven expected five okay so I debugged my test and I'm",
    "start": "1078000",
    "end": "1085640"
  },
  {
    "text": "like but I got five I didn't get seven so so my code is working right no I reran The Continuous",
    "start": "1085640",
    "end": "1094159"
  },
  {
    "text": "integration process and it said um expected seven got five and I'm like",
    "start": "1094159",
    "end": "1099400"
  },
  {
    "text": "well turns out I had actually flipped my uh actual and expected or was it",
    "start": "1099400",
    "end": "1106840"
  },
  {
    "text": "supposed to be that way um and thus I'm going to introduce fluent assertions fluent assertions is a really",
    "start": "1106840",
    "end": "1113320"
  },
  {
    "text": "good methodology for being able to kind of write sentences here I'm going to say actual time do should and should came",
    "start": "1113320",
    "end": "1120640"
  },
  {
    "text": "from fluent assertions not be start",
    "start": "1120640",
    "end": "1125760"
  },
  {
    "text": "time now it is really clear which one is the expected and which one is the actual",
    "start": "1125760",
    "end": "1133280"
  },
  {
    "text": "I have never made that mistake again fluent assertions is amazing cool so we've got this code",
    "start": "1133280",
    "end": "1140000"
  },
  {
    "text": "let's run this test now we could run all of the tests but this is the only one that I'm really worried about so I'll",
    "start": "1140000",
    "end": "1145280"
  },
  {
    "text": "just right click here and run it and we can see that it's now green excellent",
    "start": "1145280",
    "end": "1150600"
  },
  {
    "text": "we've got a green test so we've been able to validate that we uh if motion is",
    "start": "1150600",
    "end": "1157039"
  },
  {
    "text": "detected that it will change that last motion time now doing the next test copy",
    "start": "1157039",
    "end": "1164720"
  },
  {
    "text": "pasta let's put that in here and we'll say false and it should be start time and now I",
    "start": "1164720",
    "end": "1174159"
  },
  {
    "text": "can run this test well yeah there's an argument to be made about parameterizing this test as well maybe we we want to",
    "start": "1174159",
    "end": "1181600"
  },
  {
    "text": "kind of lean on the dry principle and and yeah we're going to do that coming up but",
    "start": "1181600",
    "end": "1187440"
  },
  {
    "text": "um maybe we don't want our test to be dry maybe we want our test to be",
    "start": "1187440",
    "end": "1194400"
  },
  {
    "text": "descriptive instead if this is really clear and this is a great way to explain this then",
    "start": "1194400",
    "end": "1202039"
  },
  {
    "text": "trying to create an abstraction where both of these things call it in in different ways and past mutating",
    "start": "1202039",
    "end": "1208480"
  },
  {
    "text": "parameters and there's layers of indirection and yes it's it's dry now we haven't repeated ourselves but the tests",
    "start": "1208480",
    "end": "1215280"
  },
  {
    "text": "are now really unclear and that's really unhelpful so in this case I'm going to",
    "start": "1215280",
    "end": "1222120"
  },
  {
    "text": "choose to duplicate my code on purpose so we have a t a passing test oh",
    "start": "1222120",
    "end": "1227960"
  },
  {
    "text": "wait we don't we have a failing test let's come back in here and take a look at this and I love how it explains all",
    "start": "1227960",
    "end": "1234559"
  },
  {
    "text": "of the things about this and explains exactly what happened here in this case",
    "start": "1234559",
    "end": "1239960"
  },
  {
    "text": "it says light switch are not initialized",
    "start": "1239960",
    "end": "1246159"
  },
  {
    "text": "okay uh light switch are not initialized",
    "start": "1246159",
    "end": "1251640"
  },
  {
    "text": "where's that in my code well it turns out that it's right",
    "start": "1251640",
    "end": "1257200"
  },
  {
    "text": "here in my initializer I have this Singleton pattern and the Singleton",
    "start": "1257200",
    "end": "1263960"
  },
  {
    "text": "patterns means that I'm only going to ever get one instance of the light switcher and that's",
    "start": "1263960",
    "end": "1270200"
  },
  {
    "text": "great but that also means in my tests I need to have a very specific one how do",
    "start": "1270200",
    "end": "1276320"
  },
  {
    "text": "I reset it if I do interesting things in my test so let's get rid of this",
    "start": "1276320",
    "end": "1281880"
  },
  {
    "text": "Singleton pattern in fact I'm just going to rip out this interface and",
    "start": "1281880",
    "end": "1288640"
  },
  {
    "text": "delete this Singleton pattern completely now I'll come in here and",
    "start": "1288640",
    "end": "1294320"
  },
  {
    "text": "where previously I was using that Singleton pattern I'm instead going to pass in that dependency I light",
    "start": "1294320",
    "end": "1302679"
  },
  {
    "text": "switcher this is C 12 and that is cool that is a default Constructor and that",
    "start": "1302679",
    "end": "1308799"
  },
  {
    "text": "allows us to pass in parameters of Constructor parameters in really elegant",
    "start": "1308799",
    "end": "1313840"
  },
  {
    "text": "ways instead of having to do the public Constructor and this Stu",
    "start": "1313840",
    "end": "1319240"
  },
  {
    "text": "yeah that is amazing okay so now I'm going to use my light switcher instance",
    "start": "1319240",
    "end": "1326039"
  },
  {
    "text": "that got passed into my class that's really nice and now I come back to my",
    "start": "1326039",
    "end": "1333279"
  },
  {
    "text": "code and of course everything um fails because now instead of doing this I need",
    "start": "1333279",
    "end": "1339960"
  },
  {
    "text": "to say um we're going to create an I light",
    "start": "1339960",
    "end": "1348000"
  },
  {
    "text": "Switcher here and we'll pass that into our light switcher there and now we did",
    "start": "1348000",
    "end": "1353760"
  },
  {
    "text": "need to um oh it can't depend from the interface",
    "start": "1353760",
    "end": "1359880"
  },
  {
    "text": "anymore and now our uh production code works again we're able to refactor it a",
    "start": "1359880",
    "end": "1365760"
  },
  {
    "text": "little to be able to pass in that dependency instead and so we come back to our tests",
    "start": "1365760",
    "end": "1371640"
  },
  {
    "text": "and now our test should oh we get a compile time error now we get a compile",
    "start": "1371640",
    "end": "1376840"
  },
  {
    "text": "time error because we need to pass in this dependency okay so I need to pass in a",
    "start": "1376840",
    "end": "1382200"
  },
  {
    "text": "light switcher so let's say public class fake light",
    "start": "1382200",
    "end": "1387320"
  },
  {
    "text": "switcher implements I light switcher and we could build that and pass in this new",
    "start": "1387320",
    "end": "1394559"
  },
  {
    "text": "fake light switcher that's kind of a lot of work to build up this fake class so let's",
    "start": "1394559",
    "end": "1402520"
  },
  {
    "text": "leverage instead a mocking library now in this case I'm going to useq could",
    "start": "1402520",
    "end": "1408720"
  },
  {
    "text": "definitely use and substitute as well but here I'll just create this new mock",
    "start": "1408720",
    "end": "1414559"
  },
  {
    "text": "thing andq will then just go implement the interface passing in whatever I need",
    "start": "1414559",
    "end": "1421000"
  },
  {
    "text": "and returning default objects so let's go do that so I'm going to say I've got this",
    "start": "1421000",
    "end": "1429320"
  },
  {
    "text": "mock of I light switcher light switcher equals new Mock",
    "start": "1429320",
    "end": "1438120"
  },
  {
    "text": "and I will pass that in in the case of n substitute I just pass in the object in",
    "start": "1438120",
    "end": "1444240"
  },
  {
    "text": "the case of mq I actually pass in doob the actual implementation so that my um",
    "start": "1444240",
    "end": "1450400"
  },
  {
    "text": "interface is clean and it doesn't have all those extra methods on it okay so I've created that mock and I'll do the",
    "start": "1450400",
    "end": "1458679"
  },
  {
    "text": "same thing here and thank you GitHub",
    "start": "1458679",
    "end": "1464559"
  },
  {
    "text": "co-pilot and now let's build build and run all of our",
    "start": "1464559",
    "end": "1471480"
  },
  {
    "text": "tests and we can see that now those two tests go green cool so now we've been able to",
    "start": "1471480",
    "end": "1479840"
  },
  {
    "text": "validate in our code that if we pass in uh light was detected we will change the",
    "start": "1479840",
    "end": "1486720"
  },
  {
    "text": "last motion time and if we don't pass in the light detected then we won't update our last motion",
    "start": "1486720",
    "end": "1492919"
  },
  {
    "text": "time cool any thoughts or concerns any questions so far on the test that we've",
    "start": "1492919",
    "end": "1498760"
  },
  {
    "text": "built or the testing methodology",
    "start": "1498760",
    "end": "1506279"
  },
  {
    "text": "yes o it it requires that I notice the the details of the implementation in",
    "start": "1517039",
    "end": "1522080"
  },
  {
    "text": "this case yes and so maybe it makes more sense to kind of take a step back and do",
    "start": "1522080",
    "end": "1527120"
  },
  {
    "text": "more holistic tests rather than actually flexing the implementation but in this",
    "start": "1527120",
    "end": "1532559"
  },
  {
    "text": "case we're less focused on that scale of you know are we testing the right thing and more focused on you know how do we",
    "start": "1532559",
    "end": "1538799"
  },
  {
    "text": "test it in this case we're not testing the light detector machine that's you",
    "start": "1538799",
    "end": "1544200"
  },
  {
    "text": "know maybe we've got that solved that isn't very risky we're not testing the turn on and turn off thing we're testing",
    "start": "1544200",
    "end": "1550679"
  },
  {
    "text": "that Core Business logic which is that you know if it's dark turn it on if it's light turn it off thing so we have",
    "start": "1550679",
    "end": "1557120"
  },
  {
    "text": "scoped ourselves down into to the most riskiest place but yes we do need to understand the implementation we're",
    "start": "1557120",
    "end": "1562559"
  },
  {
    "text": "building very specific tests against that implementation if the implementation changes yes our tests",
    "start": "1562559",
    "end": "1568679"
  },
  {
    "text": "will need to change good call",
    "start": "1568679",
    "end": "1574200"
  },
  {
    "text": "yes yeah good call when we change this application code to make it",
    "start": "1585279",
    "end": "1591360"
  },
  {
    "text": "testable is that the best way to do it might we find another way to do it if we need to change our implementation",
    "start": "1591360",
    "end": "1597799"
  },
  {
    "text": "doesn't that say that you know maybe our testing methodology is flawed yeah we could have left it as",
    "start": "1597799",
    "end": "1604480"
  },
  {
    "text": "private we could have marked our assembly as friends visible to we could have used reflection to reach into it",
    "start": "1604480",
    "end": "1610720"
  },
  {
    "text": "but in this case our implementation was a little broken and so making it public",
    "start": "1610720",
    "end": "1616520"
  },
  {
    "text": "but not part of the interface was the the easiest way for us to get that property is that the",
    "start": "1616520",
    "end": "1622960"
  },
  {
    "text": "best maybe it's the simplest good call though if we need to",
    "start": "1622960",
    "end": "1629440"
  },
  {
    "text": "refactor our production code before we have a good Suite of tests then it's that's a code smell but usually to be",
    "start": "1629440",
    "end": "1637039"
  },
  {
    "text": "able to get good tests we need to change something to make it more testable",
    "start": "1637039",
    "end": "1643000"
  },
  {
    "text": "especially in this case where testing wasn't involved in the design",
    "start": "1643000",
    "end": "1649799"
  },
  {
    "text": "yeah as we get better code coverage around this as we get better scenario coverage we'll be able to refactor this",
    "start": "1649799",
    "end": "1656520"
  },
  {
    "text": "more easily without breaking it so maybe we need some integration tests that validate that we haven't broken stuff as",
    "start": "1656520",
    "end": "1662880"
  },
  {
    "text": "we change stuff to unit test it good call cool any other questions right here",
    "start": "1662880",
    "end": "1670360"
  },
  {
    "text": "yes",
    "start": "1670360",
    "end": "1673360"
  },
  {
    "text": "I didn't hear you very well can you say it again yes time is going to do really",
    "start": "1678360",
    "end": "1686279"
  },
  {
    "text": "strange things and we're not there yet but I agree like",
    "start": "1686279",
    "end": "1691679"
  },
  {
    "text": "um that dependency just looks really scary how are we going to mock",
    "start": "1691679",
    "end": "1697640"
  },
  {
    "text": "now yeah the time provider could be really great there we're going to skip that in this case but I agree date time.",
    "start": "1697640",
    "end": "1704600"
  },
  {
    "text": "now is is frightening okay so let's jump in here to our next",
    "start": "1704600",
    "end": "1711000"
  },
  {
    "text": "test now we want to validate that if we turn it on uh if it's dark we'll turn it on if it's light will turn it off so I'm",
    "start": "1711000",
    "end": "1718200"
  },
  {
    "text": "going to start by just grabbing this and set",
    "start": "1718200",
    "end": "1724840"
  },
  {
    "text": "it there um I'm not so worried about the start time right now motion detected is",
    "start": "1724840",
    "end": "1734720"
  },
  {
    "text": "true um",
    "start": "1734720",
    "end": "1738720"
  },
  {
    "text": "but really what I'm after oh if motion is detected and that's why I need to set it true um then I'll go after the start",
    "start": "1740080",
    "end": "1748919"
  },
  {
    "text": "time so I want to then take a look at this and let's",
    "start": "1748919",
    "end": "1754919"
  },
  {
    "text": "say actual turn on dot should be",
    "start": "1754919",
    "end": "1763240"
  },
  {
    "text": "expected cool now we still got some problems that we need to fix but we're moving in the right direction here",
    "start": "1763240",
    "end": "1770720"
  },
  {
    "text": "really what I want to do is I want to take control over this get time period method that's the time period that I",
    "start": "1770720",
    "end": "1777320"
  },
  {
    "text": "want to inject now unfortunately this get time period is a private method inside this class so I really want to be",
    "start": "1777320",
    "end": "1785039"
  },
  {
    "text": "able to pass in whatever I want and have it return this specific thing this time",
    "start": "1785039",
    "end": "1792279"
  },
  {
    "text": "of day coming out of that so let's break this in half let's say public class CL",
    "start": "1792279",
    "end": "1798840"
  },
  {
    "text": "time period helper which is likely the worst name but now we'll make this",
    "start": "1798840",
    "end": "1804760"
  },
  {
    "text": "public and we'll create an interface around",
    "start": "1804760",
    "end": "1810200"
  },
  {
    "text": "that public interface I time period",
    "start": "1810360",
    "end": "1817240"
  },
  {
    "text": "Helper and yep that looks",
    "start": "1817240",
    "end": "1822679"
  },
  {
    "text": "great and now we'll pass this oh get time period string there we",
    "start": "1823440",
    "end": "1831200"
  },
  {
    "text": "go we'll pass this I time period helper into here as",
    "start": "1831200",
    "end": "1838240"
  },
  {
    "text": "well now that I've got a time period helper I'm not calling this",
    "start": "1838720",
    "end": "1844679"
  },
  {
    "text": "directly and now I can start to test that now I did change our production",
    "start": "1844679",
    "end": "1850120"
  },
  {
    "text": "code again so okay that's a little weird now in our",
    "start": "1850120",
    "end": "1855200"
  },
  {
    "text": "program.cs we do need a I time period Helper",
    "start": "1855200",
    "end": "1863120"
  },
  {
    "text": "and Helper and let's pass that",
    "start": "1868720",
    "end": "1874000"
  },
  {
    "text": "in I forgot the equals thank you well that kind of got old I'm kind of tired",
    "start": "1874559",
    "end": "1880799"
  },
  {
    "text": "of like passing in dependencies and stuff don't we have like a a a doohickey",
    "start": "1880799",
    "end": "1886039"
  },
  {
    "text": "a dependency injector kind of thing well in this case I have a",
    "start": "1886039",
    "end": "1892880"
  },
  {
    "text": "um console app that I just built but if I go grab microsoft. extensions. dependency injection I can create a new",
    "start": "1892880",
    "end": "1900200"
  },
  {
    "text": "service collection I can add my things to that service collection and I can use that service provider to do this stuff",
    "start": "1900200",
    "end": "1907440"
  },
  {
    "text": "now this dependency injection is really good if I create a new project I can",
    "start": "1907440",
    "end": "1914760"
  },
  {
    "text": "um I can pull all that in um or all that will be pulled in automatically already",
    "start": "1914760",
    "end": "1922200"
  },
  {
    "text": "but in this case I'm going to wire it up that way so",
    "start": "1922200",
    "end": "1928320"
  },
  {
    "text": "let's go grab the services and we'll create an ioc container from",
    "start": "1928720",
    "end": "1938480"
  },
  {
    "text": "the services and then we'll reach into that ioc container",
    "start": "1938480",
    "end": "1944159"
  },
  {
    "text": "farlight controller equals services. get",
    "start": "1944159",
    "end": "1950279"
  },
  {
    "text": "required service of type um I light nope light",
    "start": "1950279",
    "end": "1960639"
  },
  {
    "text": "controller and now we've done the ioc thing oh this is",
    "start": "1960639",
    "end": "1967200"
  },
  {
    "text": "ioc cool so we do need to register our things uh register",
    "start": "1970039",
    "end": "1976679"
  },
  {
    "text": "services and and U in asp.net this is called an app but I'll leave it as ioc",
    "start": "1976679",
    "end": "1983279"
  },
  {
    "text": "for now and let's register some services so I've",
    "start": "1983279",
    "end": "1989240"
  },
  {
    "text": "got all the services that I've got here's a bunch of",
    "start": "1989240",
    "end": "1994279"
  },
  {
    "text": "Singletons and now I've just refactored this so I",
    "start": "1994279",
    "end": "1999399"
  },
  {
    "text": "won't need to worry about the dependencies and my production app if I go change my application again so yeah I",
    "start": "1999399",
    "end": "2007120"
  },
  {
    "text": "passed into dependencies to be able to separate this thing and now I can U use",
    "start": "2007120",
    "end": "2013200"
  },
  {
    "text": "dependency injection here so let's come build our test again H now I need to go",
    "start": "2013200",
    "end": "2020200"
  },
  {
    "text": "change all the tests again because I have a new dependency can we use dependency injection here in our tests",
    "start": "2020200",
    "end": "2027200"
  },
  {
    "text": "well we can here's a project called Auto marer and the cool thing with auto marer",
    "start": "2027200",
    "end": "2033120"
  },
  {
    "text": "is that we can create an ioc container for our tests now the cool thing here is",
    "start": "2033120",
    "end": "2038480"
  },
  {
    "text": "that it will go invent dependencies for us in the same way it'll go invent",
    "start": "2038480",
    "end": "2044200"
  },
  {
    "text": "implementations for us we can just say hey I want one of these and go fill in all the dependencies that I don't use",
    "start": "2044200",
    "end": "2051079"
  },
  {
    "text": "okay let's do that so I'm G to come in here and I'm GNA say please go build me",
    "start": "2051079",
    "end": "2059358"
  },
  {
    "text": "a auto marer and I will then say to the auto",
    "start": "2059359",
    "end": "2067398"
  },
  {
    "text": "marer",
    "start": "2067399",
    "end": "2069720"
  },
  {
    "text": "get uh I will say to the auto marer what do I",
    "start": "2075919",
    "end": "2081799"
  },
  {
    "text": "say ISC dot create instance there it is brain",
    "start": "2084800",
    "end": "2091480"
  },
  {
    "text": "fart go create me a light actuator and just go figure out the dependencies oh",
    "start": "2091480",
    "end": "2099280"
  },
  {
    "text": "heyy I can um get rid of that mock that I didn't have to worry about now that's",
    "start": "2099280",
    "end": "2106160"
  },
  {
    "text": "cool so let's do that in this test and let's do that in this test and let's do",
    "start": "2106160",
    "end": "2113320"
  },
  {
    "text": "that in this test and now I didn't need to set up any of those mocks myself",
    "start": "2113320",
    "end": "2119680"
  },
  {
    "text": "because this test didn't need to worry about it and if I get more dependencies later that test won't need to worry",
    "start": "2119680",
    "end": "2125440"
  },
  {
    "text": "about it either",
    "start": "2125440",
    "end": "2128880"
  },
  {
    "text": "so now that I've got",
    "start": "2133760",
    "end": "2137079"
  },
  {
    "text": "this now let's come back to here and I need to be able to inject in the time of",
    "start": "2142160",
    "end": "2147400"
  },
  {
    "text": "day so in this case I do need a mock time period helper well an i time period",
    "start": "2147400",
    "end": "2156240"
  },
  {
    "text": "Helper and yes let's go reach into the",
    "start": "2156240",
    "end": "2163440"
  },
  {
    "text": "ioc create mock nope get mock I time period",
    "start": "2163440",
    "end": "2171800"
  },
  {
    "text": "Helper and the cool part is it will now construct a mock or get me the last one that I found I could also create a new",
    "start": "2171800",
    "end": "2178760"
  },
  {
    "text": "Mock and pass it in but in this case I just said hey go get me this um time",
    "start": "2178760",
    "end": "2184480"
  },
  {
    "text": "period Helper and by the way pass it into light actuator when you get there now here in",
    "start": "2184480",
    "end": "2191560"
  },
  {
    "text": "the time period helper I want to say time period helper dot",
    "start": "2191560",
    "end": "2197240"
  },
  {
    "text": "setup if you call get time period Then I",
    "start": "2197240",
    "end": "2202760"
  },
  {
    "text": "want you to return the time of",
    "start": "2202760",
    "end": "2209839"
  },
  {
    "text": "day cool now I need to pass in a string here I don't know what or I need to pass",
    "start": "2209839",
    "end": "2215079"
  },
  {
    "text": "in a date here I don't know what date it's going to pick because it's you know whatever date it's set to so I'm going",
    "start": "2215079",
    "end": "2220599"
  },
  {
    "text": "to say it do is any date time and now no",
    "start": "2220599",
    "end": "2226640"
  },
  {
    "text": "matter what it passes in there it will get this injected time of day that I",
    "start": "2226640",
    "end": "2232760"
  },
  {
    "text": "wanted and so now here in my application code here I get the time period that I",
    "start": "2232760",
    "end": "2239680"
  },
  {
    "text": "wanted and now I can start to make some assertions on it cool so I need to know",
    "start": "2239680",
    "end": "2245520"
  },
  {
    "text": "if the light switcher was turned on so I do need a",
    "start": "2245520",
    "end": "2251280"
  },
  {
    "text": "mock um I light switcher",
    "start": "2251280",
    "end": "2258079"
  },
  {
    "text": "and let's go look at that get mock of I light",
    "start": "2258079",
    "end": "2265040"
  },
  {
    "text": "switcher and here we're going to we wire it up a little bit differently set up M",
    "start": "2265040",
    "end": "2270920"
  },
  {
    "text": "such that m dot turn on and instead of returning",
    "start": "2270920",
    "end": "2279000"
  },
  {
    "text": "something I want to know when it's called so let's say call back and I'm going to say when this gets called I",
    "start": "2279000",
    "end": "2288280"
  },
  {
    "text": "want to say actual turn on is",
    "start": "2288280",
    "end": "2293760"
  },
  {
    "text": "true okay let's go create an actual turn on Co actual turn on equals",
    "start": "2293760",
    "end": "2302960"
  },
  {
    "text": "false there we go oh actually I'll move this a little bit closer there we",
    "start": "2305880",
    "end": "2312200"
  },
  {
    "text": "go so now we've got this set up where we're going to run through let's",
    "start": "2312200",
    "end": "2317560"
  },
  {
    "text": "actually debug this because this will be really fun I'll set the break point right there and let's debug this test",
    "start": "2317560",
    "end": "2325240"
  },
  {
    "text": "debug test I love that we can debug the test just like it was any class and uh",
    "start": "2325240",
    "end": "2331800"
  },
  {
    "text": "start up our application and do what we need to do so there we go MO I detected",
    "start": "2331800",
    "end": "2338599"
  },
  {
    "text": "is true let's instantiate our things",
    "start": "2338599",
    "end": "2344040"
  },
  {
    "text": "and then we'll get our light actuator that looks great let's come in here to",
    "start": "2344040",
    "end": "2349720"
  },
  {
    "text": "our actuate lights was motion detected it was what is our time period Well it's",
    "start": "2349720",
    "end": "2356160"
  },
  {
    "text": "the time period that we got injected into ourselves so in this case the time",
    "start": "2356160",
    "end": "2361240"
  },
  {
    "text": "period is KN excellent okay so if it's",
    "start": "2361240",
    "end": "2367480"
  },
  {
    "text": "evening or night then we will turn on and now we're going to step into our",
    "start": "2367480",
    "end": "2374079"
  },
  {
    "text": "fake our mock the call back actual turn on is now set to true we're back in our",
    "start": "2374079",
    "end": "2380400"
  },
  {
    "text": "method and we exit out and now actual turn on is true and expected is true and",
    "start": "2380400",
    "end": "2386880"
  },
  {
    "text": "we have a passing test that's cool so we were able to create these",
    "start": "2386880",
    "end": "2393599"
  },
  {
    "text": "mocks these fakes these stubs these we can argue about terminology later we're able to create these fake classes that",
    "start": "2393599",
    "end": "2400240"
  },
  {
    "text": "implement this behavior that we needed to control but when we didn't need to control it we could just let the ioc",
    "start": "2400240",
    "end": "2406680"
  },
  {
    "text": "container for our tests figure it out so let's run all of these tests we'll run",
    "start": "2406680",
    "end": "2412800"
  },
  {
    "text": "these four tests and let's see if we can now validate if our turn on works as",
    "start": "2412800",
    "end": "2419640"
  },
  {
    "text": "expected and we'll see that turn on all four of those tests now go green",
    "start": "2419640",
    "end": "2427680"
  },
  {
    "text": "that was cool any questions on the mock so far",
    "start": "2427680",
    "end": "2435160"
  },
  {
    "text": "yeah some more clarity on do callback yes in this case we said I would like",
    "start": "2436359",
    "end": "2445079"
  },
  {
    "text": "to declare an implementation for this method so when we call get time period",
    "start": "2445079",
    "end": "2450920"
  },
  {
    "text": "it returns this specific thing in this case turn on doesn't return anything so",
    "start": "2450920",
    "end": "2457319"
  },
  {
    "text": "we can't get a returns method but we do want to know when it's called so let's create a call back here so when you call",
    "start": "2457319",
    "end": "2464400"
  },
  {
    "text": "that method instead of doing nothing call My Method instead just to tell me that it was called now I could instead",
    "start": "2464400",
    "end": "2472200"
  },
  {
    "text": "come down here and say light switcher dot",
    "start": "2472200",
    "end": "2479079"
  },
  {
    "text": "um verify called something like that and that",
    "start": "2479079",
    "end": "2485480"
  },
  {
    "text": "would do kind of similar things but I really like rigging it up here because debugging it just looks so cool and so I",
    "start": "2485480",
    "end": "2493319"
  },
  {
    "text": "can say go take the value you know if there was a value passed in here then it",
    "start": "2493319",
    "end": "2498440"
  },
  {
    "text": "would be made available there and I could use that to um take action or do",
    "start": "2498440",
    "end": "2503720"
  },
  {
    "text": "any other thing there so yeah call back when this fake class gets called when",
    "start": "2503720",
    "end": "2510520"
  },
  {
    "text": "this fake method gets called then do some other logic too great question thank you any other",
    "start": "2510520",
    "end": "2518000"
  },
  {
    "text": "questions here on",
    "start": "2518000",
    "end": "2520640"
  },
  {
    "text": "MOX cool so we got to see MOX we also got to see ioc and what's really cool",
    "start": "2524720",
    "end": "2530520"
  },
  {
    "text": "about dependency injection in version of control is we can use it not only for our code but we can use it for our tests",
    "start": "2530520",
    "end": "2538880"
  },
  {
    "text": "too okay so let's rig up this mechanism",
    "start": "2538880",
    "end": "2543920"
  },
  {
    "text": "here the turn off method now here in the turn off method motion detected ands so",
    "start": "2543920",
    "end": "2550960"
  },
  {
    "text": "we'll need motion detected to be false that's okay let's say motion detected is",
    "start": "2550960",
    "end": "2557960"
  },
  {
    "text": "false and now we're not rigging up the turn on we're rigging up the turn off",
    "start": "2557960",
    "end": "2563720"
  },
  {
    "text": "and actual turn on let's rename this to be",
    "start": "2563720",
    "end": "2570119"
  },
  {
    "text": "actual actual turn off and that looks pretty good now we",
    "start": "2570599",
    "end": "2578400"
  },
  {
    "text": "just changed maybe one or two or three things in this method we we just kind of copy and paste it and it's like",
    "start": "2578400",
    "end": "2585960"
  },
  {
    "text": "well I know that don't repeat yourself is a really big thing so maybe I can",
    "start": "2586559",
    "end": "2592319"
  },
  {
    "text": "create I don't know this Universal thing where I can kind of pass in all the that would make my test really",
    "start": "2592319",
    "end": "2599599"
  },
  {
    "text": "complicated so instead I'm going to very specifically choose to repeat myself to",
    "start": "2599599",
    "end": "2605599"
  },
  {
    "text": "make my test really clear now ultimately tests can be a great use case for",
    "start": "2605599",
    "end": "2611640"
  },
  {
    "text": "documentation they can be great for explaining the behaviors of the system and in this case that is more valuable",
    "start": "2611640",
    "end": "2618280"
  },
  {
    "text": "to me than repeating myself in my test so I'm very specifically going to choose",
    "start": "2618280",
    "end": "2623680"
  },
  {
    "text": "not to dry up my code and instead document that I did that for clarity",
    "start": "2623680",
    "end": "2630680"
  },
  {
    "text": "cool so let's run these tests and now we can see that we have four more passing",
    "start": "2630680",
    "end": "2639040"
  },
  {
    "text": "test maybe oh looks like we have some tests",
    "start": "2639480",
    "end": "2647880"
  },
  {
    "text": "that didn't quite work as expected now I love that we can debug",
    "start": "2647880",
    "end": "2653559"
  },
  {
    "text": "that let's set our debugger right there and let's take a look at these tests and",
    "start": "2653559",
    "end": "2659319"
  },
  {
    "text": "see what we can find we'll debug this test and much like we would step through",
    "start": "2659319",
    "end": "2665400"
  },
  {
    "text": "any code inet isn't it cool that we can step through our test okay so our time",
    "start": "2665400",
    "end": "2671040"
  },
  {
    "text": "of day in this case is morning and we expect it to be true was morning one of",
    "start": "2671040",
    "end": "2677240"
  },
  {
    "text": "the tests that failed I don't think so but let's take a look at it motion",
    "start": "2677240",
    "end": "2682760"
  },
  {
    "text": "detected motion was not detected is it long enough yes it is long enough",
    "start": "2682760",
    "end": "2690160"
  },
  {
    "text": "because the last motion time is so far away hm I think we missed a dependency",
    "start": "2690160",
    "end": "2695839"
  },
  {
    "text": "here now in this one we do need to say uh nope date time last motion time",
    "start": "2695839",
    "end": "2705119"
  },
  {
    "text": "equals date time. now and we're going to say not uh not more than a",
    "start": "2705119",
    "end": "2713480"
  },
  {
    "text": "minute ago cool so let's set our um light actuator Dot",
    "start": "2713480",
    "end": "2725240"
  },
  {
    "text": "last motion time and I'm very carefully documenting",
    "start": "2728520",
    "end": "2734119"
  },
  {
    "text": "that the value is not important because someday I'm going to come back in here and go well should I have made that UTC",
    "start": "2734119",
    "end": "2741640"
  },
  {
    "text": "now should I made it a specific date why is this one setting it to date and not",
    "start": "2741640",
    "end": "2748240"
  },
  {
    "text": "datetime.now so yeah to your point this is where a",
    "start": "2748240",
    "end": "2753480"
  },
  {
    "text": "time period helper would be really nice I'm going to jump over that now but let's debug",
    "start": "2753480",
    "end": "2760160"
  },
  {
    "text": "this let's run our tests and see if we now have more passing",
    "start": "2760160",
    "end": "2766160"
  },
  {
    "text": "tests our test Explorer tells us o yes one of those uh four tests passed we",
    "start": "2766160",
    "end": "2772640"
  },
  {
    "text": "still have one failure okay let's debug that one it's afternoon debug",
    "start": "2772640",
    "end": "2781359"
  },
  {
    "text": "tests and so our time of day is morning that's not the test that we want to look at time of day is evening that's also",
    "start": "2781680",
    "end": "2788960"
  },
  {
    "text": "not the one we want time of day is evening time of day",
    "start": "2788960",
    "end": "2794640"
  },
  {
    "text": "is afternoon that's our failing test okay so let's go debug",
    "start": "2794640",
    "end": "2801400"
  },
  {
    "text": "this so our time period here is afternoon that looks great and we'll",
    "start": "2801400",
    "end": "2807720"
  },
  {
    "text": "come in here and we'll say is time period morning or is time",
    "start": "2807720",
    "end": "2812800"
  },
  {
    "text": "period O noon",
    "start": "2812800",
    "end": "2818680"
  },
  {
    "text": "hm I think we've got a bug in our code I think our tests help us discover a typo",
    "start": "2818720",
    "end": "2825200"
  },
  {
    "text": "that's pretty cool now we could definitely take a look at this and just go well you",
    "start": "2825200",
    "end": "2831079"
  },
  {
    "text": "know it's good I'll just go afternoon and then everything's fine right well",
    "start": "2831079",
    "end": "2837760"
  },
  {
    "text": "what caused this failure well what caused this failure actually",
    "start": "2837760",
    "end": "2844079"
  },
  {
    "text": "was a magic string so let's instead take a look at this",
    "start": "2844079",
    "end": "2850319"
  },
  {
    "text": "magic string and see if we can build an implementation that doesn't use magic",
    "start": "2850319",
    "end": "2857839"
  },
  {
    "text": "strings what if we created an Ane that was the time",
    "start": "2857839",
    "end": "2864319"
  },
  {
    "text": "period And so here we'll have Knight I almost magic stringed itself",
    "start": "2865319",
    "end": "2874359"
  },
  {
    "text": "morning afternoon evening and now instead of returning a",
    "start": "2874839",
    "end": "2882079"
  },
  {
    "text": "string we'll return this time period and here will return this time",
    "start": "2882079",
    "end": "2889160"
  },
  {
    "text": "period and here will return this time period and here we'll return this time",
    "start": "2889160",
    "end": "2895200"
  },
  {
    "text": "period now remember this was a private method inside of our class",
    "start": "2895200",
    "end": "2902160"
  },
  {
    "text": "previously so I'm actually going to put this bug back so that we can see it",
    "start": "2902160",
    "end": "2907720"
  },
  {
    "text": "and so we only really need to change these two places we don't need to change",
    "start": "2907720",
    "end": "2913359"
  },
  {
    "text": "any of our production code at all we don't need to change any of our tests except for the tests around this so",
    "start": "2913359",
    "end": "2920440"
  },
  {
    "text": "let's do time period. evening and time period. night and time period.",
    "start": "2920440",
    "end": "2928839"
  },
  {
    "text": "morning and time period. noon and we see",
    "start": "2928839",
    "end": "2933960"
  },
  {
    "text": "very carefully now we get a compile time error because that code was not correct cool",
    "start": "2933960",
    "end": "2941160"
  },
  {
    "text": "so not only did we solve our problem but we were able to refactor our code such that that condition couldn't exist",
    "start": "2941160",
    "end": "2949839"
  },
  {
    "text": "again nice I love how we were able to use our tests to be able to discover our",
    "start": "2949839",
    "end": "2955760"
  },
  {
    "text": "code in the same way we could use our test to repair our code so let's change these to time",
    "start": "2955760",
    "end": "2963640"
  },
  {
    "text": "period Dot evening night afternoon",
    "start": "2963640",
    "end": "2971079"
  },
  {
    "text": "morning and we'll do the same thing here it's usually about here when get",
    "start": "2971079",
    "end": "2976520"
  },
  {
    "text": "co-pilot kicks in and goes can I help you with that and I was like yes please and of course I'm on stage so it's not",
    "start": "2976520",
    "end": "2982920"
  },
  {
    "text": "so that's weird cool now that I've got the time",
    "start": "2982920",
    "end": "2989280"
  },
  {
    "text": "period here rather than the time uh rather than a magic string and a n then",
    "start": "2989280",
    "end": "2995799"
  },
  {
    "text": "let's go run our tests we'll run all of our",
    "start": "2995799",
    "end": "3003400"
  },
  {
    "text": "tests and",
    "start": "3006040",
    "end": "3009359"
  },
  {
    "text": "now we have 11 passing tests woohoo we",
    "start": "3015240",
    "end": "3020480"
  },
  {
    "text": "win the build went Green Oh build let's do a build that would be really cool",
    "start": "3020480",
    "end": "3027079"
  },
  {
    "text": "let's create a build associated with this that can run all of these tests in",
    "start": "3027079",
    "end": "3032839"
  },
  {
    "text": "depend in um our automated build system too what was cool though if we look at",
    "start": "3032839",
    "end": "3040079"
  },
  {
    "text": "this code we've now been able to validate this code and we've been able to validate this code and we've been",
    "start": "3040079",
    "end": "3047720"
  },
  {
    "text": "able to validate this code and I will leave it to you to validate this code",
    "start": "3047720",
    "end": "3053760"
  },
  {
    "text": "because yeah playing with um datetime.now is fun and so um that'll",
    "start": "3053760",
    "end": "3061720"
  },
  {
    "text": "be an interesting thing for you to discover how you can make datetime.now work the way you expect but let's go",
    "start": "3061720",
    "end": "3069119"
  },
  {
    "text": "build an automated build so I'm going to come here into",
    "start": "3069119",
    "end": "3075079"
  },
  {
    "text": "this project and I'll come here into actions",
    "start": "3075079",
    "end": "3083040"
  },
  {
    "text": "and I can say um new workflow and now here in the workflow I have lots",
    "start": "3083040",
    "end": "3089880"
  },
  {
    "text": "of different options of what type of workflow I want to build now in this",
    "start": "3089880",
    "end": "3095000"
  },
  {
    "text": "case I have a net project so I could just pick net um it actually found that for me which is pretty cool but there's",
    "start": "3095000",
    "end": "3101799"
  },
  {
    "text": "also lots of deployment strategies lots of security tools lots of integration tools and you know ultimately I'm going",
    "start": "3101799",
    "end": "3108640"
  },
  {
    "text": "to use GitHub actions here but we could use bit bucket or we could use code build or we could use",
    "start": "3108640",
    "end": "3115160"
  },
  {
    "text": "um any the mechanisms so I want",
    "start": "3115160",
    "end": "3121318"
  },
  {
    "text": "to do a build. net build so I'm going to run",
    "start": "3121680",
    "end": "3128040"
  },
  {
    "text": "this on the main branch and I'll do some pull",
    "start": "3128040",
    "end": "3134280"
  },
  {
    "text": "requests on any branch I'm not deploying it yet um maybe",
    "start": "3134280",
    "end": "3141400"
  },
  {
    "text": "we might want to separate pull requests and and Branch builds later I'm also",
    "start": "3141400",
    "end": "3146559"
  },
  {
    "text": "going to add um workflow dispatch and workflow dispatch is that",
    "start": "3146559",
    "end": "3153520"
  },
  {
    "text": "build button right here you ever um committed a blank line just to kick off",
    "start": "3153520",
    "end": "3159119"
  },
  {
    "text": "the build and then deleted it to kick off the build again and then added it again to kick off the build",
    "start": "3159119",
    "end": "3165720"
  },
  {
    "text": "again this creates a build it now button okay so I'm not going to do a",
    "start": "3165720",
    "end": "3173720"
  },
  {
    "text": "strategy I'll just do it on release uh I'll remove those as well runs on ubun",
    "start": "3173720",
    "end": "3181680"
  },
  {
    "text": "to latest I'm in net core and so what are the steps well I'll",
    "start": "3181680",
    "end": "3187480"
  },
  {
    "text": "check out that sounds great with fetch dep zero I don't think I need that one",
    "start": "3187480",
    "end": "3193480"
  },
  {
    "text": "install. net core I think I've already got it so I'm I'm good there uh I don't want to set up Ms build I'm just going",
    "start": "3193480",
    "end": "3200559"
  },
  {
    "text": "to execute some steps um net build and",
    "start": "3200559",
    "end": "3208720"
  },
  {
    "text": "publish and so I will run this",
    "start": "3208720",
    "end": "3214280"
  },
  {
    "text": "script uh I'll go delete all the rest of",
    "start": "3214760",
    "end": "3220559"
  },
  {
    "text": "this oh wow it just keeps going I picked the wrong template Okay cool so now what",
    "start": "3224000",
    "end": "3231119"
  },
  {
    "text": "are the things that we would do from the command line well we would go like this we would say",
    "start": "3231119",
    "end": "3236960"
  },
  {
    "text": "net restore and then we'd say net build we'll build in release",
    "start": "3236960",
    "end": "3243720"
  },
  {
    "text": "mode. net test we'll also do this in release mode so we don't end up with one",
    "start": "3243720",
    "end": "3249079"
  },
  {
    "text": "release build and one debug build net",
    "start": "3249079",
    "end": "3254200"
  },
  {
    "text": "publish to the disc directory or wherever we wanted to do it and those are the four commands that we would run",
    "start": "3254200",
    "end": "3261400"
  },
  {
    "text": "so let's run them here in our devops pipeline I'm going to say net",
    "start": "3261400",
    "end": "3267680"
  },
  {
    "text": "restore net build in release mode net test in release mode as well net",
    "start": "3267680",
    "end": "3277799"
  },
  {
    "text": "publish in release mode to the disc folder and now I can",
    "start": "3277839",
    "end": "3285920"
  },
  {
    "text": "do publish now in this case you know I probably need to publish to I don't know",
    "start": "3286599",
    "end": "3292200"
  },
  {
    "text": "my Raspberry Pi or cool so I've got a devops pipeline and this",
    "start": "3292200",
    "end": "3298359"
  },
  {
    "text": "works out great but now how do I harvest the test results here well I'm going to",
    "start": "3298359",
    "end": "3305920"
  },
  {
    "text": "take a look at this I can say net test and I can pass in a logger in this case I'm going to use the junit logger now",
    "start": "3305920",
    "end": "3312880"
  },
  {
    "text": "typically we use junit to test Java code but junit is just a data format so I'll",
    "start": "3312880",
    "end": "3319960"
  },
  {
    "text": "grab that instead so I'll net add package junit test logger and I will pass in this logger results into all the",
    "start": "3319960",
    "end": "3329599"
  },
  {
    "text": "things the other thing I want to do is I want to harvest those results into a dashboard so I'll come here into the",
    "start": "3329599",
    "end": "3337160"
  },
  {
    "text": "marketplace and I'll take a look at test",
    "start": "3337160",
    "end": "3342400"
  },
  {
    "text": "reporter and there's test reporter and I can take a look at test reporter and how",
    "start": "3342520",
    "end": "3348440"
  },
  {
    "text": "that might work I can do cool things passing in the test results so I'm going",
    "start": "3348440",
    "end": "3355000"
  },
  {
    "text": "to go grab that that and set that here",
    "start": "3355000",
    "end": "3360559"
  },
  {
    "text": "now one of the things that's important that we do in the test report is to run",
    "start": "3360559",
    "end": "3366799"
  },
  {
    "text": "always I don't want to have a failed test not publish the test result that",
    "start": "3366799",
    "end": "3374640"
  },
  {
    "text": "would really defeat things um and so I'm going to say where is my path to the",
    "start": "3374640",
    "end": "3380559"
  },
  {
    "text": "tests and my report is u junit",
    "start": "3380559",
    "end": "3386640"
  },
  {
    "text": "so let's actually switch over to the final uh workflow that we've got and",
    "start": "3386640",
    "end": "3393559"
  },
  {
    "text": "take a look at how that works so we have workflow dispatch that's excellent we",
    "start": "3393559",
    "end": "3399400"
  },
  {
    "text": "have uh restore build test there's that logger we'll go grab the um results and",
    "start": "3399400",
    "end": "3408319"
  },
  {
    "text": "we'll publish those to the dashboard so let's go kick off this build now this build is specifically",
    "start": "3408319",
    "end": "3414200"
  },
  {
    "text": "running against the done folder but if you start with the start folder then you can do interesting things there so let's",
    "start": "3414200",
    "end": "3421079"
  },
  {
    "text": "come in here and we'll kick off the build",
    "start": "3421079",
    "end": "3426079"
  },
  {
    "text": "um run workflow and now we get to see our",
    "start": "3426319",
    "end": "3431559"
  },
  {
    "text": "dependency injection process U no our build process",
    "start": "3431559",
    "end": "3437440"
  },
  {
    "text": "cool so here's our build pipeline it's going to go uh restore all",
    "start": "3437440",
    "end": "3444400"
  },
  {
    "text": "of our dependencies in all of our projects it will run our build determining projects to restore",
    "start": "3444400",
    "end": "3453039"
  },
  {
    "text": "excellent we've restored our dependencies now let's run the build did",
    "start": "3453039",
    "end": "3460200"
  },
  {
    "text": "I typo something did I forget a semicolon somewhere is that pull request",
    "start": "3460200",
    "end": "3465599"
  },
  {
    "text": "just truncating a line in an odd way nope it looks like my build succeeded",
    "start": "3465599",
    "end": "3471440"
  },
  {
    "text": "and then I ran my test o I have 18 past tests that's excellent we'll do our test",
    "start": "3471440",
    "end": "3477400"
  },
  {
    "text": "report and now if I come back into this",
    "start": "3477400",
    "end": "3482640"
  },
  {
    "text": "build I will see that not only do I have oh and of course the reporter is going",
    "start": "3482640",
    "end": "3488720"
  },
  {
    "text": "to fail me not only do I have the build I also have the test results and so here I can",
    "start": "3488720",
    "end": "3495039"
  },
  {
    "text": "see 18 passing tests and here's each of the tests validating that they succeeded",
    "start": "3495039",
    "end": "3501039"
  },
  {
    "text": "as expected so that's really cool we were able to not only build our tests we",
    "start": "3501039",
    "end": "3507960"
  },
  {
    "text": "were also able to integrate them into our devops pipeline so that those tests will run on every build now we did use a",
    "start": "3507960",
    "end": "3515039"
  },
  {
    "text": "bunch of best practices here we talked about the arrange act assert pattern that gave us the ability to separate the",
    "start": "3515039",
    "end": "3522960"
  },
  {
    "text": "pieces of our tests and maybe make our tests a little bit more legible we used our test to be able to validate our code",
    "start": "3522960",
    "end": "3529920"
  },
  {
    "text": "to validate that it works as expected we were able to use our test to even fake",
    "start": "3529920",
    "end": "3535280"
  },
  {
    "text": "out things refactor it to be more testable and in particular we were able to use our tests to be able to find bugs",
    "start": "3535280",
    "end": "3544160"
  },
  {
    "text": "within our code do you like debugging I don't like debugging at all",
    "start": "3544160",
    "end": "3552640"
  },
  {
    "text": "you know what's really cool about unit tests we can debug our",
    "start": "3552640",
    "end": "3558000"
  },
  {
    "text": "code by writing code writing code is really fun I I like to write code I I",
    "start": "3558000",
    "end": "3564400"
  },
  {
    "text": "don't want to debug my code so so I'm going to step into the unit test thing and I'll get to write some more",
    "start": "3564400",
    "end": "3570720"
  },
  {
    "text": "code that debugs my code now it's fun now I'm really productive I would invite",
    "start": "3570720",
    "end": "3577359"
  },
  {
    "text": "you to jump into testing because I think it is really cool the code for this uh",
    "start": "3577359",
    "end": "3583720"
  },
  {
    "text": "test this talk both the start and the done is up on GitHub right now and you",
    "start": "3583720",
    "end": "3589079"
  },
  {
    "text": "can get to it from Rober rich.org thanks for coming [Applause]",
    "start": "3589079",
    "end": "3599760"
  },
  {
    "text": "any questions before we leave",
    "start": "3599760",
    "end": "3605440"
  },
  {
    "text": "yeah fails if the build fails in the pipeline it's always going to still try",
    "start": "3606400",
    "end": "3612480"
  },
  {
    "text": "to publish the results of the test though what will happen then oh you are",
    "start": "3612480",
    "end": "3617520"
  },
  {
    "text": "correct I skipped over a piece here in my workflow when I was building it myself I actually put theet publish line",
    "start": "3617520",
    "end": "3626960"
  },
  {
    "text": "right here right after the test line instead of separating it into another",
    "start": "3626960",
    "end": "3632520"
  },
  {
    "text": "piece that would happen later now that publish is only to get it from my thing into a local folder I haven't published",
    "start": "3632520",
    "end": "3639319"
  },
  {
    "text": "that artifact somewhere but you're right I probably should have done that. net publish after I did the the test publish",
    "start": "3639319",
    "end": "3645920"
  },
  {
    "text": "good call how do you uh run test in",
    "start": "3645920",
    "end": "3652200"
  },
  {
    "text": "Dockers how would I run test in a Docker container",
    "start": "3652200",
    "end": "3657680"
  },
  {
    "text": "o how would I run a test in a Docker container um I'm GNA open this with VSS",
    "start": "3662079",
    "end": "3668240"
  },
  {
    "text": "code just so I can pop it open and I'm going to build a light speed Docker container Docker file so I",
    "start": "3668240",
    "end": "3677000"
  },
  {
    "text": "would say here from from MCR doab bunch of stuff.",
    "start": "3677000",
    "end": "3685359"
  },
  {
    "text": "net SDK 88.0 and I'm going to use Alpine copy in",
    "start": "3685359",
    "end": "3693559"
  },
  {
    "text": "everything and then what are the commands that we ran in our thing we said net",
    "start": "3693559",
    "end": "3699599"
  },
  {
    "text": "restore net build net",
    "start": "3699599",
    "end": "3707359"
  },
  {
    "text": "testnet publish and to your point we should",
    "start": "3708559",
    "end": "3714200"
  },
  {
    "text": "publish our uh test results right",
    "start": "3714200",
    "end": "3720319"
  },
  {
    "text": "here so how do we turn those into Docker commands well I need to run this one and",
    "start": "3720359",
    "end": "3727279"
  },
  {
    "text": "I need to run this one and I need to run this",
    "start": "3727279",
    "end": "3732359"
  },
  {
    "text": "one and now I have run my unit test inside of",
    "start": "3732359",
    "end": "3738960"
  },
  {
    "text": "Docker yeah this is straightforward uh but how would you export it to the",
    "start": "3739079",
    "end": "3745160"
  },
  {
    "text": "exporter like you know yeah how do I publish my test results right now the test results are",
    "start": "3745160",
    "end": "3752640"
  },
  {
    "text": "in my container and so two ways of publishing test",
    "start": "3752640",
    "end": "3759119"
  },
  {
    "text": "results I could choose to map a volume into my container I could choose inside",
    "start": "3759119",
    "end": "3767359"
  },
  {
    "text": "my um gith Hub build to Docker copy that",
    "start": "3767359",
    "end": "3772480"
  },
  {
    "text": "out of the container or I could in here here make an API",
    "start": "3772480",
    "end": "3777720"
  },
  {
    "text": "call um some publisher",
    "start": "3777720",
    "end": "3783880"
  },
  {
    "text": "dot come my test results.xml I could publish those off to",
    "start": "3783880",
    "end": "3792039"
  },
  {
    "text": "a service that accepts them whichever way I need to getting those uh I find typically it's easiest to just map a",
    "start": "3792039",
    "end": "3798400"
  },
  {
    "text": "volume into uh Docker copy the results out of that um container and at that",
    "start": "3798400",
    "end": "3804960"
  },
  {
    "text": "point uh secondary I'll map a volume but at that point then I have the test results on the runner and now I can",
    "start": "3804960",
    "end": "3811760"
  },
  {
    "text": "publish them in the way that I typically would yeah as the last resort this works",
    "start": "3811760",
    "end": "3817720"
  },
  {
    "text": "out really well great question thank",
    "start": "3817720",
    "end": "3822559"
  },
  {
    "text": "you",
    "start": "3825359",
    "end": "3828359"
  },
  {
    "text": "yeah was I trying to what with the equals",
    "start": "3830720",
    "end": "3837640"
  },
  {
    "text": "I got the expected in the actual wrong on the very first test yes yeah the hello",
    "start": "3843279",
    "end": "3851559"
  },
  {
    "text": "world yep and that's why I use flent fluent assertions because I get it wrong",
    "start": "3851640",
    "end": "3857000"
  },
  {
    "text": "all of the time I agree it's burning my eyes too and I'm like yeah it was a",
    "start": "3857000",
    "end": "3863039"
  },
  {
    "text": "setup for fluent assertions",
    "start": "3863039",
    "end": "3866720"
  },
  {
    "text": "yeah thanks for coming",
    "start": "3871520",
    "end": "3875319"
  }
]