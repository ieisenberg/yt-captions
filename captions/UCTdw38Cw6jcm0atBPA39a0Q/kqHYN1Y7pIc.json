[
  {
    "text": "welcome everybody thanks so much for joining me today my name is Brandon Minnick and in this session we'll be",
    "start": "359",
    "end": "7020"
  },
  {
    "text": "talking about an introduction to serverless with AWS Lambda in C sharp",
    "start": "7020",
    "end": "12179"
  },
  {
    "text": "now I'm really excited to be here talking about this with you today because",
    "start": "12179",
    "end": "17640"
  },
  {
    "text": "I love serverless it's a topic that's really near and dear to my heart so hopefully you'll catch the bug that I",
    "start": "17640",
    "end": "24840"
  },
  {
    "text": "caught and love it too but I'm actually a mobile app developer I make IOS and Android apps in c-sharp",
    "start": "24840",
    "end": "32220"
  },
  {
    "text": "using xamarin and now.net Maui and I've been publishing apps to the app store",
    "start": "32220",
    "end": "38040"
  },
  {
    "text": "for about the last seven years and when I make my apps it's it's just me I'm",
    "start": "38040",
    "end": "44340"
  },
  {
    "text": "just the one guy I make these on nights and weekends I do it for fun and if you",
    "start": "44340",
    "end": "49559"
  },
  {
    "text": "find my apps in the app store they're totally free I don't charge any money for them there's no in-app purchases",
    "start": "49559",
    "end": "56280"
  },
  {
    "text": "um and so when I needed a solution for my back end because let's be honest",
    "start": "56280",
    "end": "61559"
  },
  {
    "text": "every every app needs a back end um I needed something that would be easy",
    "start": "61559",
    "end": "67140"
  },
  {
    "text": "for me to maintain easy for me to implement kind of something that set it and forget it but also something",
    "start": "67140",
    "end": "73740"
  },
  {
    "text": "it's kind of cheap because I don't have a lot of money off the zero dollar profits that I'm making off these apps",
    "start": "73740",
    "end": "79979"
  },
  {
    "text": "and so that's when I found serverless so we'll get into all the the goodies of",
    "start": "79979",
    "end": "85619"
  },
  {
    "text": "serverless and how it we can be an individual developer like myself still",
    "start": "85619",
    "end": "91320"
  },
  {
    "text": "have a whole back end running in the cloud and still be maintaining and building and Publishing our apps all",
    "start": "91320",
    "end": "96780"
  },
  {
    "text": "thanks to serverless with AWS Lambda now before we get going I want to point out two links that you'll see at the bottom",
    "start": "96780",
    "end": "103020"
  },
  {
    "text": "of just about every slide today make sure to take out your phone and grab a picture of these Links at some point",
    "start": "103020",
    "end": "109560"
  },
  {
    "text": "because down here on the bottom right this is a web page that I've made just",
    "start": "109560",
    "end": "114960"
  },
  {
    "text": "for this session today this contains everything that we're about to cover so you don't have to worry about memorizing",
    "start": "114960",
    "end": "121619"
  },
  {
    "text": "anything because if you go to that webpage this is where you can find the slides this is where you can find all",
    "start": "121619",
    "end": "127200"
  },
  {
    "text": "the code I have a end-to-end open source sample that we're going to show off in just a little bit and I've also included",
    "start": "127200",
    "end": "133379"
  },
  {
    "text": "a bunch of links to helpful resources that I used when I was first learning about server lists and Lambda and",
    "start": "133379",
    "end": "139260"
  },
  {
    "text": "c-sharp and all that fun stuff that should be helpful for you too as well plus these sessions are recorded So once",
    "start": "139260",
    "end": "146760"
  },
  {
    "text": "NDC posts the video on YouTube I'll make sure to add the link there as well so you can share it with your friends your",
    "start": "146760",
    "end": "152340"
  },
  {
    "text": "colleagues anybody else who couldn't make it today but maybe is excited about serverless as well",
    "start": "152340",
    "end": "158040"
  },
  {
    "text": "and then on the bottom left that is my Twitter handle this is the best way to get in contact with me so if you have",
    "start": "158040",
    "end": "163860"
  },
  {
    "text": "any questions we don't get a chance to chat later on at the conference or if you just ever want to chat about c-sharp",
    "start": "163860",
    "end": "170340"
  },
  {
    "text": "xamarin Maui serverless AWS whatever feel free to come join in the",
    "start": "170340",
    "end": "175800"
  },
  {
    "text": "conversation now this is Introduction to serverless so",
    "start": "175800",
    "end": "181860"
  },
  {
    "text": "what what is serverless um you know lately serverless has kind of become this this",
    "start": "181860",
    "end": "187440"
  },
  {
    "text": "buzzword we probably hear it all the time like serverless micro Services",
    "start": "187440",
    "end": "192959"
  },
  {
    "text": "um and if I'm being honest it's it's kind of a weird term because serverless implies that there's no",
    "start": "192959",
    "end": "200519"
  },
  {
    "text": "servers involved and that can't be true you know the laws of physics state that",
    "start": "200519",
    "end": "206220"
  },
  {
    "text": "if we're going to run code that code's got to run on a server right that code's got to have a CPU it's got to have",
    "start": "206220",
    "end": "212159"
  },
  {
    "text": "memory and so nothing's actually truly server less because then we wouldn't",
    "start": "212159",
    "end": "218760"
  },
  {
    "text": "have any code running so I found that a better way to think of serverless is actually",
    "start": "218760",
    "end": "225060"
  },
  {
    "text": "less server because yes your code will still be running in the cloud on a",
    "start": "225060",
    "end": "230159"
  },
  {
    "text": "server but with serverless it means that our our code isn't running 24 7. we",
    "start": "230159",
    "end": "236640"
  },
  {
    "text": "don't have a dedicated server given to us by AWS that they're charging us every second forward because we said you know",
    "start": "236640",
    "end": "243480"
  },
  {
    "text": "we need a certain amount of CPU cores and this much memory and so if we had",
    "start": "243480",
    "end": "249000"
  },
  {
    "text": "that that wouldn't be serverless serverless we basically are able to publish our code to the cloud",
    "start": "249000",
    "end": "254400"
  },
  {
    "text": "and then whenever it's needed it spins up that server and it runs so with serverless we just have less server to",
    "start": "254400",
    "end": "262440"
  },
  {
    "text": "worry about less server to pay for our monthly bills would be a little bit cheaper less server to maintain so we",
    "start": "262440",
    "end": "268500"
  },
  {
    "text": "don't need a team of Engineers to make sure that our server is up and running all the time that our servers scaling",
    "start": "268500",
    "end": "274979"
  },
  {
    "text": "properly serverless takes away all of those worries from us so that we can just write our code",
    "start": "274979",
    "end": "280860"
  },
  {
    "text": "and run it in the cloud now to really understand Services server",
    "start": "280860",
    "end": "286199"
  },
  {
    "text": "less let's go all the way back let's go back to the days of on-premises now",
    "start": "286199",
    "end": "292979"
  },
  {
    "text": "I don't I don't think I've been around that long I've been uh in the industry for about 15 years but when I started",
    "start": "292979",
    "end": "299820"
  },
  {
    "text": "this was all we had there was there was no Cloud when I started working my first engineering job out of college uh the",
    "start": "299820",
    "end": "307080"
  },
  {
    "text": "company I worked at we just had a giant data center you know the size of a football pitch with just rows and rows",
    "start": "307080",
    "end": "313620"
  },
  {
    "text": "and rows and racks and every rack would be filled with servers it'd be freezing cold in there because servers generate a",
    "start": "313620",
    "end": "319860"
  },
  {
    "text": "lot of heat so you got to keep it really cold it's really loud from all the servers that are running and doing all",
    "start": "319860",
    "end": "325020"
  },
  {
    "text": "their computations and I remember if I ever needed to do",
    "start": "325020",
    "end": "330360"
  },
  {
    "text": "something like let's say we were building a new app well the first thing I would have to do I would have to get a",
    "start": "330360",
    "end": "335820"
  },
  {
    "text": "server so back in the day with on-premise I would first have to go to procurement and say I need a new server",
    "start": "335820",
    "end": "343020"
  },
  {
    "text": "I needed to be this many CPUs this much RAM and they go great the lead time is",
    "start": "343020",
    "end": "348360"
  },
  {
    "text": "six to eight weeks so about two months later I would have a server appear on my",
    "start": "348360",
    "end": "353759"
  },
  {
    "text": "desk that once it would show up I'd grab that server I'd walk it down to the data center I'd find an open slot in a rack",
    "start": "353759",
    "end": "359940"
  },
  {
    "text": "rack and stack it bolt it in Connect up all the cables and then once I could finally turn it on well then I got to",
    "start": "359940",
    "end": "366720"
  },
  {
    "text": "install the operating system so we're using Linux a lot at the time so install the latest version of Linux make sure to",
    "start": "366720",
    "end": "371759"
  },
  {
    "text": "get all the security patches installed from the it admins uh worked with the networking team to make sure that we",
    "start": "371759",
    "end": "377820"
  },
  {
    "text": "have our firewalls in place and then I can communicate with it and then finally",
    "start": "377820",
    "end": "383100"
  },
  {
    "text": "I could actually publish my code to the server and we could run it so with with on-premises it has a lot of",
    "start": "383100",
    "end": "391979"
  },
  {
    "text": "a lot of well I don't say problems but it's definitely a lot of questions a lot of concerns you also need a real big team",
    "start": "391979",
    "end": "399660"
  },
  {
    "text": "of Engineers to maintain this stuff because you know you need the engineers like us who are going to be writing our",
    "start": "399660",
    "end": "405419"
  },
  {
    "text": "c-sharp code but you also need the team of Engineers to maintain these servers you need we need it admins to keep the",
    "start": "405419",
    "end": "412680"
  },
  {
    "text": "operating system up to date we need our security administrators to make sure that we're patching any vulnerabilities",
    "start": "412680",
    "end": "418560"
  },
  {
    "text": "we need our Network administrators to make sure that our firewall is in place and we're not going to get ddosed and",
    "start": "418560",
    "end": "423840"
  },
  {
    "text": "then on top of that we need physical security that building had big barbed wire fences all around it so nobody",
    "start": "423840",
    "end": "429780"
  },
  {
    "text": "could break in and damage the servers or Worse steal our data and so big big",
    "start": "429780",
    "end": "436259"
  },
  {
    "text": "costs lots of stuff going on and we have to have this huge team to manage all of this just so I could build my app and on",
    "start": "436259",
    "end": "444900"
  },
  {
    "text": "top of that our workflows our timelines we had to plan months years in advance",
    "start": "444900",
    "end": "450479"
  },
  {
    "text": "if we just wanted to publish a new app because we had to plan for that two-month lead time for the server to",
    "start": "450479",
    "end": "456660"
  },
  {
    "text": "come in we had to plan for about a week or two to get that server just up and running we had to do security Audits and",
    "start": "456660",
    "end": "463259"
  },
  {
    "text": "so it wasn't simple and anywhere along the line any part of that chain could",
    "start": "463259",
    "end": "468840"
  },
  {
    "text": "break and then all of a sudden we're slipping our deadline for publishing our new app for weeks if not months if not",
    "start": "468840",
    "end": "474900"
  },
  {
    "text": "years so thankfully a little while later AWS came with came",
    "start": "474900",
    "end": "481620"
  },
  {
    "text": "up with this great idea called ayaz information her infrastructure as a service where they said you know what",
    "start": "481620",
    "end": "488759"
  },
  {
    "text": "you don't need a data center just tell us how much horsepower you need how many",
    "start": "488759",
    "end": "493800"
  },
  {
    "text": "CPUs how much RAM do you need and we'll spin up a virtual machine for you in the cloud and this is great because now we",
    "start": "493800",
    "end": "501360"
  },
  {
    "text": "went from all those problems where we had to have the physical Data Center and we had to order in stuff and we had to",
    "start": "501360",
    "end": "506639"
  },
  {
    "text": "worry about supply chain issues and we had to have physical security to now I with a couple clicks of the mouse I",
    "start": "506639",
    "end": "513360"
  },
  {
    "text": "can just spin up a virtual machine in the cloud so great we don't have to worry about as much stuff anymore but",
    "start": "513360",
    "end": "519719"
  },
  {
    "text": "really we still need a big team of Engineers right because we still it's still just a virtual machine it's still",
    "start": "519719",
    "end": "525839"
  },
  {
    "text": "our responsibility we still have to install the operating system we still have to keep it up to date with security patches we still have to do the",
    "start": "525839",
    "end": "531720"
  },
  {
    "text": "networking the routing the firewalls all that fun stuff and so we still have the",
    "start": "531720",
    "end": "537720"
  },
  {
    "text": "same core engineering team but instead of just monitoring a server here in our data center they're monitoring that same",
    "start": "537720",
    "end": "543959"
  },
  {
    "text": "server in the cloud so so is a good step in the right direction it still works really well today but then",
    "start": "543959",
    "end": "551399"
  },
  {
    "text": "the concept of platform as a service came about",
    "start": "551399",
    "end": "556740"
  },
  {
    "text": "um platform as a service or if you're using AWS it's called elastic Beanstalk is is really cool because now this takes",
    "start": "556740",
    "end": "564600"
  },
  {
    "text": "away the whole worry about the operating system so now I don't have to worry about what operating system am I running",
    "start": "564600",
    "end": "570120"
  },
  {
    "text": "on what version of it what are my security patches what's my networking what ports do I have open what ports do",
    "start": "570120",
    "end": "575459"
  },
  {
    "text": "I have closed uh with Paz I just tell it that hey I want to create a web app or",
    "start": "575459",
    "end": "580860"
  },
  {
    "text": "maybe a web API or a website here's my code publish it to you AWS and then you run",
    "start": "580860",
    "end": "588420"
  },
  {
    "text": "it in elastic beadstock and you take care of all that for me and the only thing I have to do is",
    "start": "588420",
    "end": "595380"
  },
  {
    "text": "keep an eye on it because I'll tell it that you know I want six CPU cores I'll tell it that I want 32 gigs of RAM but",
    "start": "595380",
    "end": "602279"
  },
  {
    "text": "you know if at one point I get a whole flood of users and all of a sudden my server is hitting 100 I want to make",
    "start": "602279",
    "end": "608220"
  },
  {
    "text": "sure that scales up and then I want to make sure that we don't use too many resources and we're overpaying so so",
    "start": "608220",
    "end": "614459"
  },
  {
    "text": "pass is great because now again we don't have to worry about the operating system stuff anymore we have to worry about the",
    "start": "614459",
    "end": "619980"
  },
  {
    "text": "networking stuff all of that is abstracted away from us so again we can focus more on our code",
    "start": "619980",
    "end": "626279"
  },
  {
    "text": "but we do still have to monitor This Server we have to make sure it stays stays up and running we have to make",
    "start": "626279",
    "end": "631680"
  },
  {
    "text": "sure it scales to our users demand and also make sure we balance that with whatever our costs and whatever our",
    "start": "631680",
    "end": "637320"
  },
  {
    "text": "budgets are but now finally we get into",
    "start": "637320",
    "end": "644040"
  },
  {
    "text": "serverless so serverless takes that one step further it takes the idea of paths the",
    "start": "644040",
    "end": "649320"
  },
  {
    "text": "idea of that elastic Beanstalk had and goes one step further and says what if you didn't even have to worry about how",
    "start": "649320",
    "end": "656100"
  },
  {
    "text": "many CPU cores you needed what if you didn't have to worry about how much RAM you needed what if you just gave me your",
    "start": "656100",
    "end": "661860"
  },
  {
    "text": "code and we run it in the cloud for you that's basically what serverless is so",
    "start": "661860",
    "end": "667860"
  },
  {
    "text": "with serverless all I have to do I write my code in Visual Studio I'll just right click",
    "start": "667860",
    "end": "674279"
  },
  {
    "text": "it and I'll publish it up to AWS and then it's running it's there it's ready",
    "start": "674279",
    "end": "679320"
  },
  {
    "text": "uh it'll scale up as my user demands so if I have a bunch of users I'll hit hit",
    "start": "679320",
    "end": "685380"
  },
  {
    "text": "the back end at the same time it'll scale up appropriately and then if there's no demand it'll actually scale",
    "start": "685380",
    "end": "691140"
  },
  {
    "text": "all the way down to zero and that's really where we can see a lot of the cost savings come in because if nobody's",
    "start": "691140",
    "end": "696600"
  },
  {
    "text": "using our app well our code's not running in the cloud and if our code's not doing anything in the cloud then we",
    "start": "696600",
    "end": "702240"
  },
  {
    "text": "don't have to pay for anything in the cloud and so this is where I really found that sweet spot for my back end",
    "start": "702240",
    "end": "708120"
  },
  {
    "text": "for my mobile apps because like I said like I I don't make any money on these apps so I don't have a lot of budget and",
    "start": "708120",
    "end": "715140"
  },
  {
    "text": "I also don't want to worry about anything I don't want to have to be managing servers all the time I just want to make apps so with serverless we",
    "start": "715140",
    "end": "722880"
  },
  {
    "text": "can do that it abstracts away all of those problems we can just upload our code to the cloud and basically set it",
    "start": "722880",
    "end": "729360"
  },
  {
    "text": "and forget it now let's dive a little bit deeper into into those topics so so why why would we",
    "start": "729360",
    "end": "737579"
  },
  {
    "text": "want to do serverless well we're abstracting away the servers we don't we don't have to worry about CPU cores we",
    "start": "737579",
    "end": "743820"
  },
  {
    "text": "have to worry about memory all that's taken care of for us we don't have to worry about the operating system version",
    "start": "743820",
    "end": "749100"
  },
  {
    "text": "like maybe Windows just pushed out a new security patch that's okay because AWS",
    "start": "749100",
    "end": "754800"
  },
  {
    "text": "is going to take care of that for us we don't have to worry about any of that same with networking routing DNS none of",
    "start": "754800",
    "end": "760200"
  },
  {
    "text": "that is our concern anymore scaling so like I mentioned serverless",
    "start": "760200",
    "end": "767279"
  },
  {
    "text": "will scale to meet whatever your users demand so if we all of a sudden get an influx of demand because maybe some",
    "start": "767279",
    "end": "774360"
  },
  {
    "text": "influencer starts tweeting about our app and we get a million downloads well serverless can handle that as they start",
    "start": "774360",
    "end": "780000"
  },
  {
    "text": "hitting the back end ews Lambda will automatically figure that out it'll scale up appropriately",
    "start": "780000",
    "end": "785519"
  },
  {
    "text": "and then if all of our users go to bed and nobody's using it at night time it'll scale all the way back down to",
    "start": "785519",
    "end": "792060"
  },
  {
    "text": "zero which means we don't have to pay any money because we're not using any resources in the cloud anymore love that",
    "start": "792060",
    "end": "799200"
  },
  {
    "text": "now there is a catch because it scales all the way down to",
    "start": "799200",
    "end": "804839"
  },
  {
    "text": "zero we introduce this concept called a cold start and a cold start happens when we have",
    "start": "804839",
    "end": "812160"
  },
  {
    "text": "zero instances running because our back end's been idle but then the first user",
    "start": "812160",
    "end": "817680"
  },
  {
    "text": "hits our back end and what's happening behind the scenes is you know our code our dll file that we publish to the",
    "start": "817680",
    "end": "824279"
  },
  {
    "text": "cloud it's it's sitting there a user opens our app and AWS goes oh I gotta",
    "start": "824279",
    "end": "830100"
  },
  {
    "text": "quickly spin up a serverless instance and so it launches the code and quickly spins it up and that does take some time",
    "start": "830100",
    "end": "837899"
  },
  {
    "text": "so here's here's the latest metrics so on.net6 on arms on an armed CPU specifically",
    "start": "837899",
    "end": "845940"
  },
  {
    "text": "it'll take about a second for your serverless instance to initialize if it's been idle so the first user that",
    "start": "845940",
    "end": "852540"
  },
  {
    "text": "hits your app after it's been scaled down to zero and it's been a little idle we'll have about a second of cold start",
    "start": "852540",
    "end": "859500"
  },
  {
    "text": "time now maybe that's a lot maybe that's a big deal maybe it's not maybe it's not",
    "start": "859500",
    "end": "864600"
  },
  {
    "text": "a big deal uh that kind of is the balance we have to take into account when we're building our apps because",
    "start": "864600",
    "end": "870899"
  },
  {
    "text": "this this is really critical to serverless if if your app always needs to have instant",
    "start": "870899",
    "end": "877380"
  },
  {
    "text": "response time maybe you're doing something real time like a game or you're dealing with monetary transactions like stock market data and",
    "start": "877380",
    "end": "884220"
  },
  {
    "text": "if we wait to execute we're going to lose money well maybe serverless isn't the right choice maybe that's where you",
    "start": "884220",
    "end": "890160"
  },
  {
    "text": "you know pay a little extra for elastic bean stock it's always up and running it'll be responding instantly no",
    "start": "890160",
    "end": "895680"
  },
  {
    "text": "problems but for me as a mobile app developer especially an Indian mobile app developer who doesn't get paid to",
    "start": "895680",
    "end": "902760"
  },
  {
    "text": "make mobile apps I was cool with this and so what I did um if you download some of my apps from",
    "start": "902760",
    "end": "909959"
  },
  {
    "text": "the store when you launch them you'll see this animated splash screen so when the app launches I display a nice little",
    "start": "909959",
    "end": "915839"
  },
  {
    "text": "animation to kind of distract the user a little bit so the user's not sitting there going jeez why is this taking",
    "start": "915839",
    "end": "921240"
  },
  {
    "text": "forever to load they're just seeing this fun little animation player and they're oh now the app's launching and",
    "start": "921240",
    "end": "927300"
  },
  {
    "text": "the good side is there's also warm start so all the way here on the right a warm",
    "start": "927300",
    "end": "932519"
  },
  {
    "text": "start is let's say I've just launched the app I got the hit for the cold start time but then you open the app when you",
    "start": "932519",
    "end": "940260"
  },
  {
    "text": "hit the back end you're going to hit a warm start because that serverless instance is already up and running so",
    "start": "940260",
    "end": "945899"
  },
  {
    "text": "warm start basically negligible 10 milliseconds I mean I don't I don't care about 10 milliseconds maybe that's a big",
    "start": "945899",
    "end": "953579"
  },
  {
    "text": "deal to you but with warm start times we don't really have to worry about it too much but again with cold starts something we want to take into account",
    "start": "953579",
    "end": "960240"
  },
  {
    "text": "can we work around this as that one second penalty going to be detrimental",
    "start": "960240",
    "end": "965279"
  },
  {
    "text": "to our users our users even going to notice maybe maybe not but the good news is",
    "start": "965279",
    "end": "971160"
  },
  {
    "text": "every year with every iteration of.net this cold start time gets lower or lower",
    "start": "971160",
    "end": "976199"
  },
  {
    "text": "so we have some numbers here from the latest version.net.net seven",
    "start": "976199",
    "end": "981899"
  },
  {
    "text": "um dot Net 7 was the first one to really introduce this concept of native aot",
    "start": "981899",
    "end": "987839"
  },
  {
    "text": "which stands for ahead of time compilation long story short c-sharp apps have mostly been just in",
    "start": "987839",
    "end": "995160"
  },
  {
    "text": "time compiled meaning the compiler is actually running while the code's running so that means it takes your app",
    "start": "995160",
    "end": "1000500"
  },
  {
    "text": "a little bit longer to start up because it's got to do a little compiling but with ahead of time Compilation All",
    "start": "1000500",
    "end": "1008000"
  },
  {
    "text": "that's done at build time so when you publish this app all that compilation is already done and that allows the app to",
    "start": "1008000",
    "end": "1014420"
  },
  {
    "text": "load even faster so with Net 7 with aot now we're seeing times getting down to 200 milliseconds and I expect this to",
    "start": "1014420",
    "end": "1022759"
  },
  {
    "text": "just continue getting lower as.net continues to improve as aot continues to improve as we continue to build uh",
    "start": "1022759",
    "end": "1029900"
  },
  {
    "text": "better with AWS Lambda and integratewith.net and aot so so keep an",
    "start": "1029900",
    "end": "1035660"
  },
  {
    "text": "eye on these because back in the day when when serverless was New these times used to be up in the",
    "start": "1035660",
    "end": "1040880"
  },
  {
    "text": "seconds like multiple seconds and yeah that was painful but nowadays one second",
    "start": "1040880",
    "end": "1045918"
  },
  {
    "text": "if you're still using uh net six not too bad and then done at seven with aot",
    "start": "1045919",
    "end": "1051559"
  },
  {
    "text": "getting down into 200 300 milliseconds now we're really getting into the point where it's like well",
    "start": "1051559",
    "end": "1056900"
  },
  {
    "text": "maybe serverless is always applicable maybe maybe it basically is real time we don't have to worry about cold starts as",
    "start": "1056900",
    "end": "1062960"
  },
  {
    "text": "much now the benefit to all of that is this what",
    "start": "1062960",
    "end": "1068299"
  },
  {
    "text": "we call micro building because when you use stuff in the cloud as if you've ever if you've ever used",
    "start": "1068299",
    "end": "1075679"
  },
  {
    "text": "any cloud service adbs Lambda gcp they bill you for what you use so if you",
    "start": "1075679",
    "end": "1081740"
  },
  {
    "text": "tell them you want to reserve a virtual machine well they're going to give that to you but you're going to be paying for",
    "start": "1081740",
    "end": "1087919"
  },
  {
    "text": "that virtual machine 24 7 whether you're using it or not because they have to carve it out and dedicate that to you",
    "start": "1087919",
    "end": "1093640"
  },
  {
    "text": "but with serverless because it scales all the way down to zero when you're not using it well that",
    "start": "1093640",
    "end": "1100880"
  },
  {
    "text": "means we're not getting build for anything and so the back end costs end up being really really cheap so these",
    "start": "1100880",
    "end": "1108500"
  },
  {
    "text": "are these are my two apps that I have in the App Store you know Shameless plug download them try them out give them five stars if you like them I have an",
    "start": "1108500",
    "end": "1115520"
  },
  {
    "text": "app called get trends that helps you monitor your GitHub repos I selfishly",
    "start": "1115520",
    "end": "1120620"
  },
  {
    "text": "made it for myself because I got a couple hundred GitHub repos and with get Trends I wanted a place where I could",
    "start": "1120620",
    "end": "1126559"
  },
  {
    "text": "monitor All My Views clones Stars Force issues in one place and it'll even send",
    "start": "1126559",
    "end": "1131960"
  },
  {
    "text": "you a push notification if you get a spike in traffic in one of your repos which is really cool so I've had that happen a couple times where somebody",
    "start": "1131960",
    "end": "1137840"
  },
  {
    "text": "tweets out some code that I wrote and all of a sudden a thousand people are looking at it and with good Trends I can",
    "start": "1137840",
    "end": "1143660"
  },
  {
    "text": "go and see how much traffic is coming in and also where that traffic is coming from so I can go back to that Blog owner",
    "start": "1143660",
    "end": "1149539"
  },
  {
    "text": "and shoot him a thank you for uh for referencing my code uh punde this is this is a fun game so",
    "start": "1149539",
    "end": "1156980"
  },
  {
    "text": "if you're into puns I teamed up with a guy who created a website called mondaypunday.com",
    "start": "1156980",
    "end": "1162080"
  },
  {
    "text": "and he makes these these drawings he makes these drawings by hand and each drawing is a pun and so for example you",
    "start": "1162080",
    "end": "1169520"
  },
  {
    "text": "might see a drawing of say a bear kind of hunched over a pottery wheel and the pun there is",
    "start": "1169520",
    "end": "1175640"
  },
  {
    "text": "Harry Potter so if you're a deputants check out pundai if you want to monitor your",
    "start": "1175640",
    "end": "1180740"
  },
  {
    "text": "GitHub repos check out get trends like I said totally free to use and here",
    "start": "1180740",
    "end": "1187160"
  },
  {
    "text": "is my serverless costs this is legit I just pulled these numbers last night for my last billing cycle I've got you know",
    "start": "1187160",
    "end": "1193940"
  },
  {
    "text": "they're not huge apps couple hundred monthly active users but 14 cents a month 14 U.S pennies",
    "start": "1193940",
    "end": "1201500"
  },
  {
    "text": "for running a back end for get trends and then only 19 cents for pundai",
    "start": "1201500",
    "end": "1207559"
  },
  {
    "text": "that's not too bad right like I can afford that on my my zero dollar a month income from those apps",
    "start": "1207559",
    "end": "1213620"
  },
  {
    "text": "now one of the coolest things and this is one of the things I love the most about",
    "start": "1213620",
    "end": "1219620"
  },
  {
    "text": "serverless is they're all event driven so we've probably been talking and thinking",
    "start": "1219620",
    "end": "1226160"
  },
  {
    "text": "about mostly in terms of apis like our app has a git API well yeah we can make",
    "start": "1226160",
    "end": "1231740"
  },
  {
    "text": "a serverless git API and that's what we call an HTTP trigger under the hood it's using uh aws's API Gateway but all these",
    "start": "1231740",
    "end": "1239539"
  },
  {
    "text": "other AWS Services also can trigger and launch your serverless applications so",
    "start": "1239539",
    "end": "1245539"
  },
  {
    "text": "you can write a serverless function that triggers anytime you add a file to S3 if",
    "start": "1245539",
    "end": "1251720"
  },
  {
    "text": "you haven't heard of S3 it's just a big storage bucket I like to think of it as like if you have a folder on your",
    "start": "1251720",
    "end": "1257120"
  },
  {
    "text": "desktop you can drop a text file in that folder you can drop pictures from your recent vacation that folder S3 is",
    "start": "1257120",
    "end": "1263660"
  },
  {
    "text": "basically just a folder in the cloud so you can put files in it and you can have a serverless function that triggers",
    "start": "1263660",
    "end": "1270260"
  },
  {
    "text": "anytime a new file is added so let's say somebody's added a text file you can",
    "start": "1270260",
    "end": "1275360"
  },
  {
    "text": "immediately have your code trigger to say parse and analyze that text file maybe you're doing some machine learning",
    "start": "1275360",
    "end": "1281539"
  },
  {
    "text": "on it or something like that likewise like database triggers so let's say you have an app where when you add a new",
    "start": "1281539",
    "end": "1288500"
  },
  {
    "text": "user we add a new row to the user database and we can have dynamodb trigger right away",
    "start": "1288500",
    "end": "1294760"
  },
  {
    "text": "to do a couple things in the background because you know what's what's the worst thing in the world right like when",
    "start": "1294760",
    "end": "1300380"
  },
  {
    "text": "you're a new user to the app you already have to make your accounts you got to use your email address create a new",
    "start": "1300380",
    "end": "1305720"
  },
  {
    "text": "password great and then once you're done with that like you just want to use the app you don't want to sit there and wait for everything to get verified so what",
    "start": "1305720",
    "end": "1312020"
  },
  {
    "text": "we can do is application developers is we could use something like a dynamodb trigger a database trigger to fire off",
    "start": "1312020",
    "end": "1319400"
  },
  {
    "text": "this stuff in the background so we can verify their information while they're in the app and using it and then we can",
    "start": "1319400",
    "end": "1326120"
  },
  {
    "text": "just send them a welcome email and they don't have to sit around and you know feel like the app's taking forever to",
    "start": "1326120",
    "end": "1331880"
  },
  {
    "text": "get onboarded so you get all these different types of triggers there's even more than this so highly highly",
    "start": "1331880",
    "end": "1337640"
  },
  {
    "text": "recommend checking these out because this is where we start getting into the concept of microservices so with micro",
    "start": "1337640",
    "end": "1345440"
  },
  {
    "text": "Services you can start to see how you could have multiple serverless functions and keep in mind a serverless function",
    "start": "1345440",
    "end": "1351740"
  },
  {
    "text": "is based basically just a method it's just one thing it's just one uh just a",
    "start": "1351740",
    "end": "1358580"
  },
  {
    "text": "couple lines of code it should only take a couple seconds to execute a couple minutes to execute it the most in fact",
    "start": "1358580",
    "end": "1364220"
  },
  {
    "text": "if it takes too long to execute Lambda will actually kick you out it'll actually turn off your serverless",
    "start": "1364220",
    "end": "1370280"
  },
  {
    "text": "instance and scale it back down to zero because if you need 15 minutes to do something well",
    "start": "1370280",
    "end": "1375860"
  },
  {
    "text": "you you probably shouldn't be using microservices but we can have all these event driven microservices that all fire",
    "start": "1375860",
    "end": "1382419"
  },
  {
    "text": "asynchronously asynchronously they all scale up and down as needed it's really really good stuff and this is what I",
    "start": "1382419",
    "end": "1389600"
  },
  {
    "text": "want to get into to show you guys today so I I brought a an end-to-end demo that",
    "start": "1389600",
    "end": "1398419"
  },
  {
    "text": "we're gonna show off and dig into the code see how all this works and",
    "start": "1398419",
    "end": "1404059"
  },
  {
    "text": "this is what we're doing now you may or may not know it but a really common scenario in mobile applications",
    "start": "1404059",
    "end": "1410360"
  },
  {
    "text": "is anytime you upload an image what they're doing they take that image and they down scale it because",
    "start": "1410360",
    "end": "1418580"
  },
  {
    "text": "phones are super powerful nowadays so like the new iPhone 14 I think it takes 48 megapixel photos so if you upload a",
    "start": "1418580",
    "end": "1425900"
  },
  {
    "text": "48 megapixel photo to say Instagram if Instagram then serves that same 48 megapixel photo to all of us that means",
    "start": "1425900",
    "end": "1433100"
  },
  {
    "text": "anytime you go look at my profile it would take forever to load because you'd see one picture load after a couple seconds and then the next 48 megapixel",
    "start": "1433100",
    "end": "1440720"
  },
  {
    "text": "photo would load after a couple seconds so what companies do like Instagram they immediately take that photo and scale it",
    "start": "1440720",
    "end": "1447860"
  },
  {
    "text": "so they'll they'll scale it down to a point where it still looks good on certain devices like they'll scale it specifically from mobile they'll scale",
    "start": "1447860",
    "end": "1454100"
  },
  {
    "text": "it specifically for web for desktop and that's what we see when we launch",
    "start": "1454100",
    "end": "1460340"
  },
  {
    "text": "our app so what I've made here is basically that workflow I've created a",
    "start": "1460340",
    "end": "1465679"
  },
  {
    "text": "mobile app using.net Maui and c-sharp that takes our picture then we upload",
    "start": "1465679",
    "end": "1470900"
  },
  {
    "text": "that picture to a HTTP trigger a post API that post API is going to ingest the",
    "start": "1470900",
    "end": "1477980"
  },
  {
    "text": "photo that I upload stored in our S3 storage bucket and then once that happens we'll have an S3 trigger kick",
    "start": "1477980",
    "end": "1485659"
  },
  {
    "text": "off automatically and that S3 trigger is called generate thumbnail because it takes that photo",
    "start": "1485659",
    "end": "1491720"
  },
  {
    "text": "that we uploaded and I scale it way down to just 200 by 200 pixels put that back in the bucket and then",
    "start": "1491720",
    "end": "1498679"
  },
  {
    "text": "we've also added in a get API down here called get thumbnail which is also an HTTP picker HTTP trigger so so let's",
    "start": "1498679",
    "end": "1506780"
  },
  {
    "text": "check this out so I've got um I've got the app running here behind me behind the slides and it's it's made in",
    "start": "1506780",
    "end": "1516080"
  },
  {
    "text": "down at Maui with if you haven't heard it down to Maui before it allows you to make mobile apps for IOS and Android and",
    "start": "1516080",
    "end": "1521179"
  },
  {
    "text": "c-sharp but you can also make desktop apps as well so Mac OS and windows so here I have my Android emulator I'm",
    "start": "1521179",
    "end": "1528320"
  },
  {
    "text": "going to click upload photo",
    "start": "1528320",
    "end": "1531340"
  },
  {
    "text": "we should see me come up in just a second oh",
    "start": "1533539",
    "end": "1538360"
  },
  {
    "text": "maybe maybe not well I'll tell you what let's click the take picture button",
    "start": "1538880",
    "end": "1544580"
  },
  {
    "text": "oh well there's me dry around here before I came here [Laughter]",
    "start": "1544580",
    "end": "1551050"
  },
  {
    "text": "I'll tell you what let's uh pull it up on Mac",
    "start": "1551179",
    "end": "1557000"
  },
  {
    "text": "looks like this Android emulators going through some problems here",
    "start": "1557000",
    "end": "1562279"
  },
  {
    "text": "all right so let's launch it here on the Mac because we can do that since dotnet Maui allows us to make Mac OS apps as well",
    "start": "1562279",
    "end": "1568520"
  },
  {
    "text": "and c-sharp there we go all right so we'll take",
    "start": "1568520",
    "end": "1575179"
  },
  {
    "text": "take a picture",
    "start": "1575179",
    "end": "1578019"
  },
  {
    "text": "Maybe ah what happened I wonder if my",
    "start": "1580520",
    "end": "1586880"
  },
  {
    "text": "I wonder if the screen sharing is getting away the camera",
    "start": "1586880",
    "end": "1590799"
  },
  {
    "text": "oh okay looks like we might have a picture here on Android",
    "start": "1592159",
    "end": "1597580"
  },
  {
    "text": "come on let's see upload something okay cool so if we uploaded this weird picture",
    "start": "1598220",
    "end": "1603799"
  },
  {
    "text": "that must have been saved in the cache somewhere and so right now it's uploading that picture so it's",
    "start": "1603799",
    "end": "1611539"
  },
  {
    "text": "uh no do we lose internet access to uh we're falling apart here guys uh let's see",
    "start": "1611539",
    "end": "1617779"
  },
  {
    "text": "are we",
    "start": "1617779",
    "end": "1620740"
  },
  {
    "text": "see let's try restarting the emulator real quick let's make sure we can",
    "start": "1623000",
    "end": "1629000"
  },
  {
    "text": "ping out to Google that's working",
    "start": "1629000",
    "end": "1632679"
  },
  {
    "text": "give it one more shot if not you can just take my word I swear",
    "start": "1640159",
    "end": "1645799"
  },
  {
    "text": "it works yeah all but something with the AV",
    "start": "1645799",
    "end": "1651799"
  },
  {
    "text": "systems uh get in the way but",
    "start": "1651799",
    "end": "1656019"
  },
  {
    "text": "shoot well oh wow look at that",
    "start": "1656900",
    "end": "1662179"
  },
  {
    "text": "so it should be using my Mac OS camera to look at me right now but I tell you what well I'll leave this running",
    "start": "1662179",
    "end": "1669519"
  },
  {
    "text": "foreign probably would have dressed up if I knew these pictures would show up",
    "start": "1671240",
    "end": "1676400"
  },
  {
    "text": "but uh but let's let's take a look at the code so so what's going on here we've got",
    "start": "1676400",
    "end": "1683179"
  },
  {
    "text": "we've got our mobile app and the first thing it's going to do is upload that image uh to a post API that we've made",
    "start": "1683179",
    "end": "1691039"
  },
  {
    "text": "using AWS Lambda and so let's look at",
    "start": "1691039",
    "end": "1698179"
  },
  {
    "text": "that post API oh maybe we'll keep poking the Android emulator",
    "start": "1698179",
    "end": "1703940"
  },
  {
    "text": "maybe that'll work but uh where are we so here we go so we have our",
    "start": "1703940",
    "end": "1710179"
  },
  {
    "text": "our upload image across our fingers well that's well",
    "start": "1710179",
    "end": "1715700"
  },
  {
    "text": "that's spinning his wheels um all right so here is the first serverless function that we're going to",
    "start": "1715700",
    "end": "1721880"
  },
  {
    "text": "look at today so this one is called upload image and it's a post API hey oh",
    "start": "1721880",
    "end": "1727220"
  },
  {
    "text": "look at that so for whatever reason this was me taking",
    "start": "1727220",
    "end": "1732679"
  },
  {
    "text": "pictures like 12 hours ago but you can see so Android's actually stretching out",
    "start": "1732679",
    "end": "1737720"
  },
  {
    "text": "the picture if I zoom in here you know if you look along maybe my hairline here you can see a little bit more detail",
    "start": "1737720",
    "end": "1743120"
  },
  {
    "text": "than over here where everything gets really blurry because now this is only 200 by 200 pixels so again what just",
    "start": "1743120",
    "end": "1750740"
  },
  {
    "text": "happened was we uploaded that photo and it was immediately dropped into the",
    "start": "1750740",
    "end": "1756679"
  },
  {
    "text": "storage bucket this S3 trigger kicked off automatically created our thumbnail for us put it back in the bucket and now",
    "start": "1756679",
    "end": "1763399"
  },
  {
    "text": "the phone's able to request the new thumbnail picture from our get thumbnail API",
    "start": "1763399",
    "end": "1769220"
  },
  {
    "text": "so looking at the code here this is our upload image API and you'll",
    "start": "1769220",
    "end": "1776600"
  },
  {
    "text": "notice you'll notice a trend as we kind of go through all these the first thing we have up here is I'm initializing an",
    "start": "1776600",
    "end": "1783500"
  },
  {
    "text": "Amazon S3 client this is really cool because this S3 client well hey it's",
    "start": "1783500",
    "end": "1789260"
  },
  {
    "text": "it's free this is just included in the in the s3.net SDK in the nuget package but when I say new Amazon S3 client when",
    "start": "1789260",
    "end": "1798200"
  },
  {
    "text": "this code is running in the cloud because it my functions running in the cloud and",
    "start": "1798200",
    "end": "1805279"
  },
  {
    "text": "I'm already inside and it knows who I am this S3 client also has all my credentials as",
    "start": "1805279",
    "end": "1811940"
  },
  {
    "text": "well so with that S3 storage bucket it is completely locked down if I gave you",
    "start": "1811940",
    "end": "1817279"
  },
  {
    "text": "the direct URL to the image that we just created you wouldn't be able to access it very very secure completely locked down",
    "start": "1817279",
    "end": "1824299"
  },
  {
    "text": "but since we're already in the cloud and and abs Lambda knows all my credentials",
    "start": "1824299",
    "end": "1829640"
  },
  {
    "text": "and they know what resources I can access when I just say new s new Amazon S3 client",
    "start": "1829640",
    "end": "1835580"
  },
  {
    "text": "that gets included as well so I don't have to worry about managing security keys or credentials I don't have to use",
    "start": "1835580",
    "end": "1841399"
  },
  {
    "text": "any environment variables I don't have to store any secrets to worry about accidentally committing them in GitHub because",
    "start": "1841399",
    "end": "1847880"
  },
  {
    "text": "new Amazon S3 client takes care of that for me now the serverless function is really right",
    "start": "1847880",
    "end": "1854000"
  },
  {
    "text": "here it's this one method called function Handler and this method accepts a API Gateway HTTP API V2 proxy proxy",
    "start": "1854000",
    "end": "1864080"
  },
  {
    "text": "request that's a lot of words just to say this is the HTTP request that just",
    "start": "1864080",
    "end": "1869419"
  },
  {
    "text": "came in um it is using aws's API gateways so that's why they add in some of that and",
    "start": "1869419",
    "end": "1875480"
  },
  {
    "text": "it is using HTTP 2 so that's why I get HTTP API view too but for all intents",
    "start": "1875480",
    "end": "1880940"
  },
  {
    "text": "and purposes this is just the HTTP request so this is where we can check you know the the query parameters that come in this is where we can uh it's a",
    "start": "1880940",
    "end": "1887960"
  },
  {
    "text": "post API so we can get the data from the body so what I've done here is kind of like",
    "start": "1887960",
    "end": "1893000"
  },
  {
    "text": "how we would design any API right I first checked the query parameters because the way I've designed it I have",
    "start": "1893000",
    "end": "1898220"
  },
  {
    "text": "the mobile app include the file name as the query a query string so if that",
    "start": "1898220",
    "end": "1903980"
  },
  {
    "text": "query string isn't missing I don't know what the file name is so I immediately tell you sorry bad request you're",
    "start": "1903980",
    "end": "1909679"
  },
  {
    "text": "missing my query parameters but if it's a good request then we can start parsing that image so",
    "start": "1909679",
    "end": "1916880"
  },
  {
    "text": "we we parse the data I get the image and then I have this method that I created",
    "start": "1916880",
    "end": "1922580"
  },
  {
    "text": "called upload content to S3 and if we dig into this",
    "start": "1922580",
    "end": "1929320"
  },
  {
    "text": "so this uses that same S3 client that we're just talking about which is again logged in it's got all my credentials",
    "start": "1929360",
    "end": "1935240"
  },
  {
    "text": "just baked into that SDK by default and so the other parameters this takes is a",
    "start": "1935240",
    "end": "1941539"
  },
  {
    "text": "string for the name of the bucket so your S3 bucket has a name and the string",
    "start": "1941539",
    "end": "1947539"
  },
  {
    "text": "called key well that's just the file name so the what you're going to name the file where you put in the bucket and",
    "start": "1947539",
    "end": "1952940"
  },
  {
    "text": "then I made a generic so it can accept any type of content and then also you know we want to have our Lambda logger",
    "start": "1952940",
    "end": "1959240"
  },
  {
    "text": "in here so we can write to the logs just in case so what I do I first look to see is that",
    "start": "1959240",
    "end": "1964880"
  },
  {
    "text": "content a stream which in this case it is we're uploading our image as as a memory stream and if that's the case",
    "start": "1964880",
    "end": "1971600"
  },
  {
    "text": "what we're doing we're creating a put object request this put object request",
    "start": "1971600",
    "end": "1977000"
  },
  {
    "text": "also is given to us for free thanks to the AWS S3 SDK and so if we have a",
    "start": "1977000",
    "end": "1983419"
  },
  {
    "text": "stream we add that content as an input stream but if it's anything else we can",
    "start": "1983419",
    "end": "1988760"
  },
  {
    "text": "just serialize that and put it in the content body of our object request and then really all we",
    "start": "1988760",
    "end": "1996019"
  },
  {
    "text": "have to do is say s3client dot put object async so once we do that we get a",
    "start": "1996019",
    "end": "2002620"
  },
  {
    "text": "response back that lets us know hopefully that everything worked out everything worked out okay",
    "start": "2002620",
    "end": "2008380"
  },
  {
    "text": "and the upload succeeded now the only thing I do this is which is a little bit",
    "start": "2008380",
    "end": "2013659"
  },
  {
    "text": "extra is remember how I said our S3 buckets are just completely locked down like if I was if I was on AWS right now",
    "start": "2013659",
    "end": "2021640"
  },
  {
    "text": "and I could pull up the URL for that file and give it to everybody in this room nobody would be asked be able to",
    "start": "2021640",
    "end": "2028000"
  },
  {
    "text": "access it because you don't have the credentials and including me I would have to give myself credentials uh to",
    "start": "2028000",
    "end": "2033340"
  },
  {
    "text": "use that URL but what we can do we can generate a pre-signed URL where I tell",
    "start": "2033340",
    "end": "2038620"
  },
  {
    "text": "it create a URL for this specific bucket the specific key which is again the file name and that'll last for in this case",
    "start": "2038620",
    "end": "2046360"
  },
  {
    "text": "one minute and then that URL is what I can send back to my mobile user and now I give",
    "start": "2046360",
    "end": "2054398"
  },
  {
    "text": "them a little bit of access into the S3 bucket but only for a minute but that's plenty of time for them to receive the",
    "start": "2054399",
    "end": "2059740"
  },
  {
    "text": "URL and display the image on their device this is also very similar",
    "start": "2059740",
    "end": "2066460"
  },
  {
    "text": "um I don't know exactly how uh or uh how Instagram does it but they also have uh",
    "start": "2066460",
    "end": "2073960"
  },
  {
    "text": "they generate pre-signed URLs as well so if you ever try to look at an image on Instagram and then a",
    "start": "2073960",
    "end": "2081280"
  },
  {
    "text": "couple days later go back to the same URL it won't work because it has to be a",
    "start": "2081280",
    "end": "2086679"
  },
  {
    "text": "pre-signed URL to give you access so sorry so we've uploaded that content to",
    "start": "2086679",
    "end": "2091720"
  },
  {
    "text": "S3 here in our upload image function and then we've got the photo Ur URI and in",
    "start": "2091720",
    "end": "2098380"
  },
  {
    "text": "that case we can just return a response back to our user so this is a API",
    "start": "2098380",
    "end": "2103960"
  },
  {
    "text": "Gateway HTTP 2 API VC proxy response uh wherever you tell it that the status code is okay and then what I do I just",
    "start": "2103960",
    "end": "2110980"
  },
  {
    "text": "serialize that photo URI and send it back to the mobile app so they can display that image on the device",
    "start": "2110980",
    "end": "2116800"
  },
  {
    "text": "cool so we've successfully uploaded the photo",
    "start": "2116800",
    "end": "2122320"
  },
  {
    "text": "that function is added it to our S3 bucket and now what's going to happen is our S3 trigger is going to automatically",
    "start": "2122320",
    "end": "2129700"
  },
  {
    "text": "kick off so if we look at our code again I've got a",
    "start": "2129700",
    "end": "2136359"
  },
  {
    "text": "a function here called generate thumbnail and looks kind of similar right like I mean",
    "start": "2136359",
    "end": "2142420"
  },
  {
    "text": "it's called generate thumbnail but we're still creating a new S3 client and we still have this method called function",
    "start": "2142420",
    "end": "2148420"
  },
  {
    "text": "Handler but the difference here is we don't have that API Gateway V2 request",
    "start": "2148420",
    "end": "2153880"
  },
  {
    "text": "we have an S3 event because S3 is triggering this serverless function",
    "start": "2153880",
    "end": "2160060"
  },
  {
    "text": "so what this code does we make sure that the the file exists that you know",
    "start": "2160060",
    "end": "2167079"
  },
  {
    "text": "nothing weird happened it's not null and then I do a double check here to make sure that the file name doesn't end with",
    "start": "2167079",
    "end": "2174280"
  },
  {
    "text": "thumbnail because when I generate the thumbnail I take the same file name and then I just append",
    "start": "2174280",
    "end": "2181000"
  },
  {
    "text": "underscore thumbnail.png so after I create that thumbnail I have to",
    "start": "2181000",
    "end": "2187240"
  },
  {
    "text": "put it back in the bucket but then that would trigger this S3 bucket again so this is how I can just make sure like",
    "start": "2187240",
    "end": "2192520"
  },
  {
    "text": "okay if you're already a thumbnail or we're just going to return we're not going to do anything with you and then down here",
    "start": "2192520",
    "end": "2198820"
  },
  {
    "text": "pretty similar we're going to tell our S3 client to get us that object so we",
    "start": "2198820",
    "end": "2204520"
  },
  {
    "text": "pass in all the info that we just got from our S3 event up here and it gives us our bucket name it gives",
    "start": "2204520",
    "end": "2211060"
  },
  {
    "text": "us the name of the file the key that was added so we get that response back of course",
    "start": "2211060",
    "end": "2216160"
  },
  {
    "text": "we've got to make sure it's good otherwise we can't move forward but once we have it then we can copy that",
    "start": "2216160",
    "end": "2223960"
  },
  {
    "text": "response stream into an image and we can start manipulating it so down here I",
    "start": "2223960",
    "end": "2229119"
  },
  {
    "text": "have a method called get PNG thumbnail where I'm using a cool Library called image sharp that does all this image",
    "start": "2229119",
    "end": "2236619"
  },
  {
    "text": "resizing options for me which is great because I had no idea how to do it I basically just copy pasted this code",
    "start": "2236619",
    "end": "2242500"
  },
  {
    "text": "from the image sharp library and Happy Days look at that I can just tell it to resize to a 200 by 200 pixel image tell",
    "start": "2242500",
    "end": "2249940"
  },
  {
    "text": "that image to mutate specifically to resize it then we save that PNG to our new memory",
    "start": "2249940",
    "end": "2255820"
  },
  {
    "text": "stream and then we can return that back above to use it elsewhere now the only other",
    "start": "2255820",
    "end": "2262839"
  },
  {
    "text": "thing I need to do is generate that new thumbnail name and like I mentioned I just use that same file name that the",
    "start": "2262839",
    "end": "2268720"
  },
  {
    "text": "mobile app gives me and I just remove the extension and add in that suffix that we saw",
    "start": "2268720",
    "end": "2275140"
  },
  {
    "text": "earlier that underscore thumbnail.png so now I know this is the same file but",
    "start": "2275140",
    "end": "2280300"
  },
  {
    "text": "it's my thumbnail version of it and now that I have my image here my",
    "start": "2280300",
    "end": "2287500"
  },
  {
    "text": "thumbnail I had named it well now I can upload that content to S3 so I wrote",
    "start": "2287500",
    "end": "2293680"
  },
  {
    "text": "this this method that",
    "start": "2293680",
    "end": "2297420"
  },
  {
    "text": "we just saw earlier right this is uh the same same method so we're just passing in that content we're putting it in here",
    "start": "2299440",
    "end": "2306400"
  },
  {
    "text": "as a stream or or serializing it to the content body Happy Days generate that pre-signed URL",
    "start": "2306400",
    "end": "2312280"
  },
  {
    "text": "and we're good to go so so this kicked off automatically once we added that first image to the",
    "start": "2312280",
    "end": "2319720"
  },
  {
    "text": "bucket it generated our thumbnail and then we uploaded that image back or the",
    "start": "2319720",
    "end": "2325060"
  },
  {
    "text": "New Image the new thumbnail back into S3 storage all right",
    "start": "2325060",
    "end": "2331240"
  },
  {
    "text": "so the only one we haven't looked at yet is this get thumbnail",
    "start": "2331240",
    "end": "2336060"
  },
  {
    "text": "and this is a get API so pretty similar to The Post API that we",
    "start": "2337480",
    "end": "2344680"
  },
  {
    "text": "looked at it's it's still just a function Handler we're still taking in an API Gateway HTTP 2",
    "start": "2344680",
    "end": "2351040"
  },
  {
    "text": "API V2 for actually request um and the only difference this time is",
    "start": "2351040",
    "end": "2357099"
  },
  {
    "text": "we're not ingesting a photo we're just going to give you the thumbnail for the image you're looking for because you",
    "start": "2357099",
    "end": "2363640"
  },
  {
    "text": "know the mobile device only knows the file name that it gave us so it maybe uploaded the file called brandon.png and",
    "start": "2363640",
    "end": "2371260"
  },
  {
    "text": "so when it goes to load that file it's going to say hey give me the thumbnail for Brandon it doesn't know that I",
    "start": "2371260",
    "end": "2376359"
  },
  {
    "text": "renamed that file and I've done a bunch of processing to it so so again it gives me that file name as a query parameter",
    "start": "2376359",
    "end": "2382960"
  },
  {
    "text": "assuming that's there then we can move on if not we'll tell it's a bad request but what I do is I say okay well what is",
    "start": "2382960",
    "end": "2390280"
  },
  {
    "text": "the file name you gave me and I'll run that same code to generate the thumbnail file name from that",
    "start": "2390280",
    "end": "2395740"
  },
  {
    "text": "and then I'll call this s3service.get file URI method here where",
    "start": "2395740",
    "end": "2404040"
  },
  {
    "text": "what we do is if you don't give me an expiration date I'll automatically make sure that this URL expires in a minute",
    "start": "2405700",
    "end": "2411900"
  },
  {
    "text": "but yeah basically we're just making sure the file exists and then we're generating that pre-signed URL like we",
    "start": "2411900",
    "end": "2418000"
  },
  {
    "text": "talked about earlier and returning that URL back here",
    "start": "2418000",
    "end": "2424260"
  },
  {
    "text": "there we go as our thumbnail URL and that's it and then this git API is basically done it's got the thumbnail",
    "start": "2424720",
    "end": "2430660"
  },
  {
    "text": "URL it makes sure it's not null because if it is null then we're going to say Hey you told me to look for this file",
    "start": "2430660",
    "end": "2436359"
  },
  {
    "text": "and I couldn't find it so 404 not found but if we can then we'll serialize that",
    "start": "2436359",
    "end": "2442960"
  },
  {
    "text": "thumbnail URL send it back to the device so now it can display that image to the user on the screen",
    "start": "2442960",
    "end": "2450660"
  },
  {
    "text": "foreign all right so some pretty cool stuff again super powerful because all",
    "start": "2451980",
    "end": "2457900"
  },
  {
    "text": "of this will scale independently so if all of a sudden we have users uploading photos like crazy well",
    "start": "2457900",
    "end": "2465400"
  },
  {
    "text": "Lambda will scale up accordingly and if all of a sudden we have S3 storage is just an undulated with new new files",
    "start": "2465400",
    "end": "2471700"
  },
  {
    "text": "then our our S3 trigger over there we'll scale up accordingly and it's all running asynchronously so users don't",
    "start": "2471700",
    "end": "2478300"
  },
  {
    "text": "have to wait they have to worry about process times they don't have to just see a spinning wheel on their mobile",
    "start": "2478300",
    "end": "2483400"
  },
  {
    "text": "device because there's nothing worse than just staring at a device that just",
    "start": "2483400",
    "end": "2488920"
  },
  {
    "text": "says loading loading loading so okay so that's how or that's an example",
    "start": "2488920",
    "end": "2494680"
  },
  {
    "text": "of how we can build a a serverless architecture for our back end but this is an intro intro class right like how",
    "start": "2494680",
    "end": "2501820"
  },
  {
    "text": "do we even create these like where did I even come up with this code how do I know about uh that API Gateway V2 proxy",
    "start": "2501820",
    "end": "2509800"
  },
  {
    "text": "response well what I highly highly recommend",
    "start": "2509800",
    "end": "2515740"
  },
  {
    "text": "is when you're starting out you're going to want to install this AWS toolkit so there's a extension for",
    "start": "2515740",
    "end": "2523180"
  },
  {
    "text": "visual studio there's extension for visual studio code as well called AWS toolkit and that'll come with all the",
    "start": "2523180",
    "end": "2529540"
  },
  {
    "text": "templates that you need for creating I'll say just about anything in AWS we'll just be focusing on serverless",
    "start": "2529540",
    "end": "2536500"
  },
  {
    "text": "stuff today but then it also adds in a bunch of hooks into visual studio so that when you're done with your code you",
    "start": "2536500",
    "end": "2542560"
  },
  {
    "text": "can basically just right click on your code and say yeah publish this to AWS done so",
    "start": "2542560",
    "end": "2548440"
  },
  {
    "text": "highly recommend the AWS toolkit if you're more of a command line developer they do have a net command line",
    "start": "2548440",
    "end": "2554320"
  },
  {
    "text": "extension that you can install so if you prefer to say net new uh AWS Lambda",
    "start": "2554320",
    "end": "2560140"
  },
  {
    "text": "something something you can do that as well but to keep it nice and simple and also",
    "start": "2560140",
    "end": "2565300"
  },
  {
    "text": "because I like this because I'm lazy we're going to stay in Visual Studio here and check out this AWS toolkit so",
    "start": "2565300",
    "end": "2572260"
  },
  {
    "text": "so after you've installed the the toolkit the next time you go to spin up a new project",
    "start": "2572260",
    "end": "2579059"
  },
  {
    "text": "we can just filter for Lambda and we can tell we want to create a",
    "start": "2580540",
    "end": "2587099"
  },
  {
    "text": "new AWS Lambda sure AWS Lambda 6. why not and then once we've done that",
    "start": "2587619",
    "end": "2593800"
  },
  {
    "text": "we get all these options so these are all the templates so things like you know we saw our S3 function just a",
    "start": "2593800",
    "end": "2599740"
  },
  {
    "text": "minute ago or if you want to do something with Kinesis which uses streaming data maybe you want to ingest",
    "start": "2599740",
    "end": "2605500"
  },
  {
    "text": "video streams and you can do all sorts of crazy things so let's just tell we",
    "start": "2605500",
    "end": "2610720"
  },
  {
    "text": "want a an S3 function and let's see if I can",
    "start": "2610720",
    "end": "2616300"
  },
  {
    "text": "find the OK button it's hidden down here",
    "start": "2616300",
    "end": "2621339"
  },
  {
    "text": "or maybe let's see if we can just change the",
    "start": "2621339",
    "end": "2626680"
  },
  {
    "text": "display a little bit need more pixels there we go let's do one a little bit better",
    "start": "2626680",
    "end": "2635220"
  },
  {
    "text": "go ah much nicer so there's our finish button okay so this will create a an S3",
    "start": "2638319",
    "end": "2645220"
  },
  {
    "text": "function for us and when I open this up it's probably",
    "start": "2645220",
    "end": "2650740"
  },
  {
    "text": "going to look and feel pretty similar let's see",
    "start": "2650740",
    "end": "2657460"
  },
  {
    "text": "zoomed out a little too far maybe a little bit more how about",
    "start": "2657460",
    "end": "2662759"
  },
  {
    "text": "125 why not so so pretty similar to the code we already looked at this gives us",
    "start": "2662859",
    "end": "2668020"
  },
  {
    "text": "a a class it gives us a method here called function Handler",
    "start": "2668020",
    "end": "2674560"
  },
  {
    "text": "that takes in the S3 event just like we had for our S3 trigger that generated the thumbnail and that's that's it",
    "start": "2674560",
    "end": "2681520"
  },
  {
    "text": "because again remember serverless functions should basically just be a method think",
    "start": "2681520",
    "end": "2687880"
  },
  {
    "text": "of it as well it is it's called a function right so it's just one function it's going to",
    "start": "2687880",
    "end": "2693099"
  },
  {
    "text": "do something real quick it's going to get in get out so so here is that function Handler in the",
    "start": "2693099",
    "end": "2699040"
  },
  {
    "text": "template we see that it takes in an S3 event and now we can start writing our code and",
    "start": "2699040",
    "end": "2704920"
  },
  {
    "text": "then whenever we're done back in our solution Explorer we can just right click here",
    "start": "2704920",
    "end": "2710740"
  },
  {
    "text": "and now we have this option that says publish to Lambda so super super easy you just say I want to",
    "start": "2710740",
    "end": "2718000"
  },
  {
    "text": "publish this to AWS Lambda we give it a name like NDC S3 demo and I think",
    "start": "2718000",
    "end": "2726339"
  },
  {
    "text": "there's one more thing I have to give it like user permissions there we go it's yeah well yeah given an",
    "start": "2726339",
    "end": "2733720"
  },
  {
    "text": "IAM role and then once we click upload our functions now up and running in the cloud so",
    "start": "2733720",
    "end": "2739960"
  },
  {
    "text": "highly highly recommend that AWS toolkit because it just makes stuff like this super super easy now there's one more thing I want to",
    "start": "2739960",
    "end": "2746920"
  },
  {
    "text": "show you because I'll bet a lot of us in here have existing apis already",
    "start": "2746920",
    "end": "2752800"
  },
  {
    "text": "well there's something really cool that we can do with with Lambda so let's uh",
    "start": "2752800",
    "end": "2759339"
  },
  {
    "text": "let's spin up a new project so let's say we want a web API",
    "start": "2759339",
    "end": "2764740"
  },
  {
    "text": "in your case you would just use your existing web API but I need to slap one into this project to show this off",
    "start": "2764740",
    "end": "2772359"
  },
  {
    "text": "so we've got our standard asp.net core web API you know if you ever build one",
    "start": "2772359",
    "end": "2778839"
  },
  {
    "text": "you're probably familiar with this template with a weather forecast controller it's got this get method here",
    "start": "2778839",
    "end": "2784900"
  },
  {
    "text": "so we're not changing any of this code but what we are going to do",
    "start": "2784900",
    "end": "2791619"
  },
  {
    "text": "we want to publish this to a serverless function so I'm going to add a nuget package",
    "start": "2791619",
    "end": "2798359"
  },
  {
    "text": "and I'm going to add in",
    "start": "2798640",
    "end": "2801900"
  },
  {
    "text": "amazon.lamda.aspnet.hosting or actually asp.net core server.hosting and pop that into our existing web API",
    "start": "2805380",
    "end": "2815280"
  },
  {
    "text": "and then all we have to do to get this existing web API to run on Lambda",
    "start": "2816760",
    "end": "2823619"
  },
  {
    "text": "Builder services at AWS and we'll tell it it's a HTTP API",
    "start": "2823900",
    "end": "2832420"
  },
  {
    "text": "that's it and so now we could publish this uh web API that we've had for years",
    "start": "2832420",
    "end": "2838420"
  },
  {
    "text": "and it'll just run on Lambda uh super super cool super super simple and the",
    "start": "2838420",
    "end": "2843700"
  },
  {
    "text": "best part is this line of code when you run it locally does nothing so you can still debug",
    "start": "2843700",
    "end": "2849819"
  },
  {
    "text": "locally you can still use it like you would unit test it put break points in this doesn't change anything it'll still",
    "start": "2849819",
    "end": "2856240"
  },
  {
    "text": "run on Kestrel nothing changes it's only only ever used if it detects your",
    "start": "2856240",
    "end": "2862480"
  },
  {
    "text": "applications actually running on AWS Lambda now there is one gotcha here so",
    "start": "2862480",
    "end": "2868780"
  },
  {
    "text": "yes yes just one line of code but if we go back to our solution Explorer",
    "start": "2868780",
    "end": "2874240"
  },
  {
    "text": "here and I right click on this web API you'll notice I don't have a published",
    "start": "2874240",
    "end": "2880240"
  },
  {
    "text": "to Lambda option here I've published the AWS which is this is a little different so let's see what's going on here well",
    "start": "2880240",
    "end": "2888280"
  },
  {
    "text": "if we look at this it thinks that I want to publish to elastic beadstock which is great nothing nothing against elastic",
    "start": "2888280",
    "end": "2895180"
  },
  {
    "text": "Beanstalk if you want to use it go for it but we're talking about serverless here and there's no option here for serverless so what we have to do is we",
    "start": "2895180",
    "end": "2902500"
  },
  {
    "text": "have to help out the AWS toolkit just a little bit so if we if we go back into our Lambda c-sharp project there's a",
    "start": "2902500",
    "end": "2909940"
  },
  {
    "text": "line in here that says AWS project type so if we just grab this line of code",
    "start": "2909940",
    "end": "2916780"
  },
  {
    "text": "here bring that into our CS project file for",
    "start": "2916780",
    "end": "2923740"
  },
  {
    "text": "our existing web API now the AWS toolkit goes uh okay you",
    "start": "2923740",
    "end": "2930760"
  },
  {
    "text": "don't want elastic Beanstalk you want Lambda and now when I right click there we go now we can publish it back",
    "start": "2930760",
    "end": "2938260"
  },
  {
    "text": "up to AWS just like we wanted to cool",
    "start": "2938260",
    "end": "2943480"
  },
  {
    "text": "so so lots and lots of really cool things highly recommend jumping into the",
    "start": "2943480",
    "end": "2949300"
  },
  {
    "text": "toolkit playing around with it uh and I want to give you a one more chance",
    "start": "2949300",
    "end": "2955060"
  },
  {
    "text": "here if you haven't already make sure to take out your phones grab a picture of this link because this is where you can",
    "start": "2955060",
    "end": "2960280"
  },
  {
    "text": "find information about everything we talked about today so the slides are here available for you we have I'll",
    "start": "2960280",
    "end": "2966880"
  },
  {
    "text": "include the video to this presentation once it gets posted up to YouTube I've got links to the AWS toolkit for visual",
    "start": "2966880",
    "end": "2973119"
  },
  {
    "text": "studio Visual Studio code and so everything you need to get started you can find here at codetraveler.io NDC",
    "start": "2973119",
    "end": "2980500"
  },
  {
    "text": "Dash Lambda Dash intro",
    "start": "2980500",
    "end": "2984720"
  },
  {
    "text": "thank you [Applause]",
    "start": "2987700",
    "end": "2993000"
  },
  {
    "text": "thank you so looks like we have a little bit time",
    "start": "2993000",
    "end": "2999280"
  },
  {
    "text": "left oh no you can go that's fine I was just gonna say if anybody wants to come up and ask any questions",
    "start": "2999280",
    "end": "3004619"
  },
  {
    "text": "um I mean it looks like we have a microphone so yeah I want we start a queue I'll uh I'll give you the caveat",
    "start": "3004619",
    "end": "3011760"
  },
  {
    "text": "that I'm pretty new to AWS Lambda myself so don't ask me do anything too difficult but maybe we can all figure it",
    "start": "3011760",
    "end": "3017700"
  },
  {
    "text": "out together uh do you want to come up first or or shout it out I can repeat it",
    "start": "3017700",
    "end": "3023960"
  },
  {
    "text": "Ah that's a good question so yeah it's like what if what if our web API is huge right um so it would all exist under the same",
    "start": "3039780",
    "end": "3047839"
  },
  {
    "text": "Lambda instance and so if it's too big we probably would want to break it up",
    "start": "3047839",
    "end": "3052920"
  },
  {
    "text": "because let's say let's say you got 20 apis and two of",
    "start": "3052920",
    "end": "3059220"
  },
  {
    "text": "them get used all the time and the other 18 don't well every time your app launches it's gonna have to spin up all",
    "start": "3059220",
    "end": "3065700"
  },
  {
    "text": "that code so what would probably be better is yeah break those up individually",
    "start": "3065700",
    "end": "3071040"
  },
  {
    "text": "and then you can have those certain Lambda functions that get called all the time",
    "start": "3071040",
    "end": "3076319"
  },
  {
    "text": "and then you don't have to necessarily worry about it's like unnecessary charges and using",
    "start": "3076319",
    "end": "3082440"
  },
  {
    "text": "too much because uh yeah I could see with the scaling if folks start hitting all the different apis that it could",
    "start": "3082440",
    "end": "3089280"
  },
  {
    "text": "start kind of going a little walking to the scaling so yeah I would probably chop that up a little bit which",
    "start": "3089280",
    "end": "3094440"
  },
  {
    "text": "hopefully isn't too difficult for you but yeah good question go yes please",
    "start": "3094440",
    "end": "3101420"
  },
  {
    "text": "has its own application proxy in front of it in front of the Lambda Lambda running",
    "start": "3110579",
    "end": "3116220"
  },
  {
    "text": "right I'm not getting it wrong probably but it's AWS Lambda runs application proxy",
    "start": "3116220",
    "end": "3124859"
  },
  {
    "text": "in front of it um so the security you have set up will will still be the same so like if you",
    "start": "3124859",
    "end": "3130920"
  },
  {
    "text": "need authentication cookies and headers that'll that'll still be the same is that what you're asking",
    "start": "3130920",
    "end": "3137420"
  },
  {
    "text": "um or will there be a set of configurations that we do need to be yeah I'll tell you this I I",
    "start": "3145260",
    "end": "3151800"
  },
  {
    "text": "don't know but yeah I assume you'd have to do some extra configuration to get um especially if if it's external",
    "start": "3151800",
    "end": "3158280"
  },
  {
    "text": "authentication to get that set up because because yeah when when you push the stuff to the cloud they kind of lock",
    "start": "3158280",
    "end": "3163920"
  },
  {
    "text": "everything down by default so I'd assume you'd have to give access to anything external coming in but",
    "start": "3163920",
    "end": "3171260"
  },
  {
    "text": "this is",
    "start": "3173400",
    "end": "3175460"
  },
  {
    "text": "um I'm not sure I haven't gotten that deep into it but good question does anybody know um",
    "start": "3180180",
    "end": "3187279"
  },
  {
    "text": "right on thank you [Laughter] yes",
    "start": "3197640",
    "end": "3204558"
  },
  {
    "text": "yes",
    "start": "3210240",
    "end": "3212300"
  },
  {
    "text": "right absolutely um so yeah I was super lazy when I created this uh S3 trigger I just said",
    "start": "3216960",
    "end": "3224040"
  },
  {
    "text": "fire on any any new file and yeah I I knew for my demo would be fine but yeah",
    "start": "3224040",
    "end": "3229740"
  },
  {
    "text": "what you can do you can file or you can filter on um file type folder so you can have",
    "start": "3229740",
    "end": "3236099"
  },
  {
    "text": "multiple folders in your S3 bucket and only fire this if it's uh triggered by a file added this specific folder or only",
    "start": "3236099",
    "end": "3242760"
  },
  {
    "text": "fire if it's a PNG file so yeah you would and you would definitely want to do that that's a really good point",
    "start": "3242760",
    "end": "3248880"
  },
  {
    "text": "because yeah otherwise you're waking up this serverless instance to just do nothing and go back to sleep",
    "start": "3248880",
    "end": "3256079"
  },
  {
    "text": "good good point",
    "start": "3256079",
    "end": "3258980"
  },
  {
    "text": "um I've only done it in the S3 console um does anyone know if you could do that config and code",
    "start": "3266339",
    "end": "3273440"
  },
  {
    "text": "there we go any other questions that you can help me solve",
    "start": "3283619",
    "end": "3289099"
  },
  {
    "text": "thank you by the way sure having a normal web API after and",
    "start": "3289099",
    "end": "3295740"
  },
  {
    "text": "you know make a modification and publish it to a Lambda but that's something that seems a bit strange to me that doesn't seem to be",
    "start": "3295740",
    "end": "3301500"
  },
  {
    "text": "something that I'm aware that Azure can do so how somehow Amazon a better hosting Microsoft products now than",
    "start": "3301500",
    "end": "3307559"
  },
  {
    "text": "Microsoft I haven't missed something um no comment",
    "start": "3307559",
    "end": "3313220"
  },
  {
    "text": "uh yeah I'm also not aware that Azure can do that as either can they yeah cool",
    "start": "3313260",
    "end": "3322740"
  },
  {
    "text": "can you run containers uh yep absolutely um I probably didn't scroll down far enough yeah in that template when you",
    "start": "3326940",
    "end": "3333240"
  },
  {
    "text": "say file new project you can put you can specify like a Net 7 container",
    "start": "3333240",
    "end": "3338480"
  },
  {
    "text": "containerized app so yeah totally uh I I personally stay away from containers",
    "start": "3338480",
    "end": "3343559"
  },
  {
    "text": "because I'm just a mobile app developer those those scare me",
    "start": "3343559",
    "end": "3348318"
  },
  {
    "text": "awesome well thanks everyone",
    "start": "3349260",
    "end": "3352400"
  },
  {
    "text": "right but it was almost double without yep",
    "start": "3355460",
    "end": "3361339"
  },
  {
    "text": "is it just because that's now abandoned you just lost it like that and so Microsoft don't care anymore or no",
    "start": "3361579",
    "end": "3368760"
  },
  {
    "text": "um so so a T's got aots got its pros and cons so um in order to uh compile everything",
    "start": "3368760",
    "end": "3375960"
  },
  {
    "text": "ahead of time obviously your compiler is going to take a little bit longer but your file size is going to be bigger too",
    "start": "3375960",
    "end": "3381300"
  },
  {
    "text": "because what's going to happen is it has to compile down all those Base Class libraries that we're using so your your",
    "start": "3381300",
    "end": "3390359"
  },
  {
    "text": "file size gets a little bit bigger and then there's a little bit of a concern and kind of why Microsoft's not pushing",
    "start": "3390359",
    "end": "3396300"
  },
  {
    "text": "aot too hard right now is they they do something called a it's called tree shaking where they they",
    "start": "3396300",
    "end": "3403740"
  },
  {
    "text": "try not to bring in the entire.net library and compile it they try to just figure out what you're doing but if",
    "start": "3403740",
    "end": "3408960"
  },
  {
    "text": "you're using generics like um I'm doing a little bit in the app uh a generic could be anything right so it",
    "start": "3408960",
    "end": "3415619"
  },
  {
    "text": "kind of has to bring in olive.net so so your file size is going to be a",
    "start": "3415619",
    "end": "3421140"
  },
  {
    "text": "little bit bigger with aot obviously the compiler is going to take a little bit longer but yeah that's not a big deal",
    "start": "3421140",
    "end": "3426319"
  },
  {
    "text": "the only concern I would have right now with aot is you know test it test it test it because maybe it removed a file",
    "start": "3426319",
    "end": "3434040"
  },
  {
    "text": "or didn't compile file that you need um the but yeah basically what it's",
    "start": "3434040",
    "end": "3439380"
  },
  {
    "text": "doing is just essentially everything the server would do when it launches your file like just",
    "start": "3439380",
    "end": "3444839"
  },
  {
    "text": "in general not even you know ignoring Lambda ignoring serverless aots basically just doing what a server would",
    "start": "3444839",
    "end": "3451140"
  },
  {
    "text": "do when you say run ahead of time so yeah and apparently you get much much",
    "start": "3451140",
    "end": "3456900"
  },
  {
    "text": "faster time so that's something I'm really excited about but I'll probably wait till like.net 8 until I really",
    "start": "3456900",
    "end": "3463260"
  },
  {
    "text": "really trust it but yeah it's a really cool technology",
    "start": "3463260",
    "end": "3468260"
  },
  {
    "text": "all right great well thanks everybody thanks so much for coming",
    "start": "3468900",
    "end": "3473240"
  }
]