[
  {
    "start": "0",
    "end": "122000"
  },
  {
    "text": "all right you hear me now brilliant awesome thanks for coming I",
    "start": "9380",
    "end": "15150"
  },
  {
    "text": "know there is a like tough competition with so many great talks in parallel so I really appreciate the time you've",
    "start": "15150",
    "end": "22380"
  },
  {
    "text": "given me hopefully I'm not gonna disappoint you if I do you what's that",
    "start": "22380",
    "end": "28680"
  },
  {
    "text": "oh if I do just let me know I'll give you a free AWS credits you know you have",
    "start": "28680",
    "end": "37620"
  },
  {
    "text": "to trade for everything today we're going to talk a little bit about Kaos engineering before I'm starting the talk",
    "start": "37620",
    "end": "43860"
  },
  {
    "text": "how many of you practice Kaos engineering and I'm not talking chaos because that's pretty much everyone",
    "start": "43860",
    "end": "50610"
  },
  {
    "text": "well how many of you practice chaos engineering that's very good question",
    "start": "50610",
    "end": "56250"
  },
  {
    "text": "yeah on purpose right not as as a consequences alright",
    "start": "56250",
    "end": "61470"
  },
  {
    "text": "some pretty much no one I saw half a hand right so someone was kind of shy to",
    "start": "61470",
    "end": "67650"
  },
  {
    "text": "say that but yeah we all practice chaos that's for sure the calcium Janee ring",
    "start": "67650",
    "end": "73230"
  },
  {
    "text": "is some something a little bit different is really trying to break things on purpose to make more things more",
    "start": "73230",
    "end": "78870"
  },
  {
    "text": "resilient I'm Adrian Holmes me I'm part of the Technical Evangelist team for a de Bresse I've been actually lucky",
    "start": "78870",
    "end": "85320"
  },
  {
    "text": "enough to have been working with AWS technology for about 12 years first as a",
    "start": "85320",
    "end": "91560"
  },
  {
    "text": "as a user and customer and a lot of that talk a lot of these kind of things I",
    "start": "91560",
    "end": "97890"
  },
  {
    "text": "want to talk of result from all the failures that I've I've had all the mistakes I've done so usually that's how",
    "start": "97890",
    "end": "104970"
  },
  {
    "text": "you you can share knowledge you never share good stuff you always share about",
    "start": "104970",
    "end": "110340"
  },
  {
    "text": "things I guess that's the natural things so that presentation is actually a kind of a baby of that so hopefully you can",
    "start": "110340",
    "end": "118860"
  },
  {
    "text": "get some some some goods and Bad's out of that first we want to start with this",
    "start": "118860",
    "end": "125390"
  },
  {
    "start": "122000",
    "end": "189000"
  },
  {
    "text": "how many of you are firefighters in the room this one is brilliant so there's",
    "start": "125390",
    "end": "132269"
  },
  {
    "text": "something very peculiar with firefighters first they are like heroes they're very amazing but they do insane",
    "start": "132269",
    "end": "140040"
  },
  {
    "text": "amount of trainings actually before going on the spot and in stunning",
    "start": "140040",
    "end": "145799"
  },
  {
    "text": "firefighting there's about 600 hours training just before doing the first job",
    "start": "145799",
    "end": "152730"
  },
  {
    "text": "and then after that they almost spent 80% of their time training training",
    "start": "152730",
    "end": "158189"
  },
  {
    "text": "fighting fires and you know why they do that you're not allowed to answer I it's",
    "start": "158189",
    "end": "164459"
  },
  {
    "text": "very simple they want to build intuition into being able to fight fire because when they go on the spot there's no time",
    "start": "164459",
    "end": "170370"
  },
  {
    "text": "to think they have to know exactly what's gonna happen you think you basically come you know",
    "start": "170370",
    "end": "177780"
  },
  {
    "text": "really do it fast enough and basically you're out so they don't want to build this intuition about how to behave with",
    "start": "177780",
    "end": "185010"
  },
  {
    "text": "fire and I like to think chaos engineering is very similar and actually",
    "start": "185010",
    "end": "190200"
  },
  {
    "start": "189000",
    "end": "306000"
  },
  {
    "text": "this idea of fighting fire is kind of long got all the idea in mid-2000",
    "start": "190200",
    "end": "197310"
  },
  {
    "text": "actually in the early 2000 amazon.com went through a massive growth actually we where first the big monolith",
    "start": "197310",
    "end": "203840"
  },
  {
    "text": "application we split that into micro services and our user base grew and grew",
    "start": "203840",
    "end": "209940"
  },
  {
    "text": "and grew and we started to have outages right because our blast radius started to increase and it was very natural for",
    "start": "209940",
    "end": "217199"
  },
  {
    "text": "the platform to experience big big outages so we hired a guy called Jesse",
    "start": "217199",
    "end": "222959"
  },
  {
    "text": "Robbins really Jesse Robbins were the first amazing software engineer but he was a firefighter and he brought that",
    "start": "222959",
    "end": "230340"
  },
  {
    "text": "idea of training for fire to Amazon basically what he wanted to do is call",
    "start": "230340",
    "end": "236940"
  },
  {
    "text": "game days he brought something called game days we still call those games days",
    "start": "236940",
    "end": "241949"
  },
  {
    "text": "today and the game day is basically he was going around the data center in unplugging things literally in",
    "start": "241949",
    "end": "248699"
  },
  {
    "text": "production employed in power units cables cutting cables inside the data",
    "start": "248699",
    "end": "256380"
  },
  {
    "text": "center and you know simply to test brilliance of the services and the",
    "start": "256380",
    "end": "261750"
  },
  {
    "text": "platform but also to give practice for the new engineers into how to deal with",
    "start": "261750",
    "end": "268110"
  },
  {
    "text": "outage and to do this in a kind of semi controlled environment it went",
    "start": "268110",
    "end": "275610"
  },
  {
    "text": "up till that they actually could hold the whole data center to test in production the result was kind of big",
    "start": "275610",
    "end": "283699"
  },
  {
    "text": "bigger than expected so they stopped doing that but they learned a lot and basically we still do chaos today every",
    "start": "283699",
    "end": "290819"
  },
  {
    "text": "time we launch a new AWS regions we do chaos for a few few weeks before the",
    "start": "290819",
    "end": "296310"
  },
  {
    "text": "service open to customers where we try breaking things on purpose we didn't call that chaos like that we really call",
    "start": "296310",
    "end": "302340"
  },
  {
    "text": "that game days and basically was stuff we did what was very very necessary for",
    "start": "302340",
    "end": "309659"
  },
  {
    "start": "306000",
    "end": "373000"
  },
  {
    "text": "us is basically these micro services and this is kind of the dependency map of micro services at Amazon and you see a",
    "start": "309659",
    "end": "316590"
  },
  {
    "text": "strong dependence on the bottom it's actually the retail webpage but any",
    "start": "316590",
    "end": "323490"
  },
  {
    "text": "architect can't make sense of any of that it used to be quite normal where you have maybe four or five services",
    "start": "323490",
    "end": "330360"
  },
  {
    "text": "working together where you could kind of make sense of what was interacting with one another now in the distributed",
    "start": "330360",
    "end": "335610"
  },
  {
    "text": "systems like that it's impossible to figure out what's happening is actually",
    "start": "335610",
    "end": "341009"
  },
  {
    "text": "impossible also to have all of that working and being operational hundred",
    "start": "341009",
    "end": "346500"
  },
  {
    "text": "percent all the time statistically at any given time there's always something failing right and this",
    "start": "346500",
    "end": "352919"
  },
  {
    "text": "is kind of reflected in the way we build things actually and you will hear very nerve or go city of Amazon saying all",
    "start": "352919",
    "end": "358620"
  },
  {
    "text": "the time that failure is inevitable and will happen everything will fail so",
    "start": "358620",
    "end": "363750"
  },
  {
    "text": "basically that's one of the things we we really did a lot trying to break things",
    "start": "363750",
    "end": "370529"
  },
  {
    "text": "and kind of experience with that but actually the big turning point for chaos",
    "start": "370529",
    "end": "376469"
  },
  {
    "start": "373000",
    "end": "532000"
  },
  {
    "text": "in January in my opinion was Netflix in the end of 2014 Netflix was already migrated to AWS and",
    "start": "376469",
    "end": "383310"
  },
  {
    "text": "it were in the u.s. East region and the data plane for the load balancer",
    "start": "383310",
    "end": "389150"
  },
  {
    "text": "experienced an outage and Netflix went down for few hours and they basically",
    "start": "389150",
    "end": "396029"
  },
  {
    "text": "started to think about how to build clear out native extremely resilient",
    "start": "396029",
    "end": "401909"
  },
  {
    "text": "architectures and then they to help them build that architecture and actually test it they went into creating tools",
    "start": "401909",
    "end": "408120"
  },
  {
    "text": "the first of those tools where was the chaos monkey actually I'm sure many of you",
    "start": "408120",
    "end": "413220"
  },
  {
    "text": "have heard about chaos monkeys the first little guy here in the middle is chaos monkey and this one was a script which",
    "start": "413220",
    "end": "421560"
  },
  {
    "text": "was like scheduled to run few times per",
    "start": "421560",
    "end": "426569"
  },
  {
    "text": "day and randomly killed servers in production and that was done so that actually everything that was deployed",
    "start": "426569",
    "end": "432780"
  },
  {
    "text": "was made sure that it could be resilient and what's the best way to test resiliency by just unplugging things and",
    "start": "432780",
    "end": "439919"
  },
  {
    "text": "breaking him so that it forced people to actually really think about resiliency as a first class of how you build your",
    "start": "439919",
    "end": "447509"
  },
  {
    "text": "application and then it quickly followed by what they call the simian army which was a bunch of tools to test a lot of",
    "start": "447509",
    "end": "456060"
  },
  {
    "text": "other things within the architecture and then the big gory lie there is actually",
    "start": "456060",
    "end": "461759"
  },
  {
    "text": "a monkey that randomly takes a full region out of Netflix in production so",
    "start": "461759",
    "end": "469229"
  },
  {
    "text": "Netflix runs in four different AWS regions two in US when Europe in one measure and that that crazy gorilla",
    "start": "469229",
    "end": "477889"
  },
  {
    "text": "literally takes region out while people watch Netflix in production legend says",
    "start": "477889",
    "end": "484770"
  },
  {
    "text": "that they do that once a month while people watching production while you watch Netflix and so that's kind of the",
    "start": "484770",
    "end": "492000"
  },
  {
    "text": "Holy Grail I would say of K was engineering and that's actually also a problem because a lot of people heard",
    "start": "492000",
    "end": "498960"
  },
  {
    "text": "about Netflix and the way they do chaos engineering and has started to think",
    "start": "498960",
    "end": "504090"
  },
  {
    "text": "that a engineering needs to be in production and if you say that to your manager trust me the first thing is",
    "start": "504090",
    "end": "511500"
  },
  {
    "text": "gonna say you are nuts we're never gonna do that we're never gonna break things in production but if you call that",
    "start": "511500",
    "end": "516930"
  },
  {
    "text": "safety engineering or resiliency engineering all of sudden you have someone to talk to so it's very fun on",
    "start": "516930",
    "end": "524190"
  },
  {
    "text": "TV and it's very fun to talk about chaos engineering but if you want to talk inside your company never ever mentioned",
    "start": "524190",
    "end": "529800"
  },
  {
    "text": "the word chaos talk about resilience that's gonna be my first advice but today when you do resiliency engineering",
    "start": "529800",
    "end": "536910"
  },
  {
    "start": "532000",
    "end": "654000"
  },
  {
    "text": "or chaos engineering there's a whole cycle of things to do but actually the centerpiece of it is",
    "start": "536910",
    "end": "542560"
  },
  {
    "text": "Injection so what we will do is we create an experiment and I'll talk a little bit about that later",
    "start": "542560",
    "end": "548260"
  },
  {
    "text": "and then we inject failure and of course failure has to go through the entire stack when I meet customers and I do I",
    "start": "548260",
    "end": "556180"
  },
  {
    "text": "set up the chaos engineering practices the first thing I do is actually not an application infrastructure attack is a",
    "start": "556180",
    "end": "562300"
  },
  {
    "text": "people attack and that doesn't mean a break next to people in production I never killed anyone while doing chaos",
    "start": "562300",
    "end": "569080"
  },
  {
    "text": "engineering but what I do I identify team leaders or people in teams that",
    "start": "569080",
    "end": "574720"
  },
  {
    "text": "actually are the exceptional type of people I had to in my life twice they",
    "start": "574720",
    "end": "581529"
  },
  {
    "text": "were called Paul so I usually call that the Paul attack those guys are you know",
    "start": "581529",
    "end": "586839"
  },
  {
    "text": "you give them anything they fix it while looking at you making a joke drinking coffee and you never really know what",
    "start": "586839",
    "end": "592330"
  },
  {
    "text": "happens we all have that guy right in our companies what happens if Paul gets hit by a bus well that's actually the",
    "start": "592330",
    "end": "600310"
  },
  {
    "text": "first thing to test actually so that's why people people are and I don't heat",
    "start": "600310",
    "end": "607270"
  },
  {
    "text": "them by a bus with the bus I literally I go there and I take the laptop and I say Paul today you can go home and the last",
    "start": "607270",
    "end": "613720"
  },
  {
    "text": "customer I've done that three weeks ago and six hours they were able to live without Paul and we had to bring back",
    "start": "613720",
    "end": "619780"
  },
  {
    "text": "Paul very very fast and you know you can think about very complicated things but",
    "start": "619780",
    "end": "625660"
  },
  {
    "text": "that's the first thing actually that you have to do when you want to build resilience it's actually business",
    "start": "625660",
    "end": "630790"
  },
  {
    "text": "resiliency right and then you can go down and you can say okay is my infrastructure resilient",
    "start": "630790",
    "end": "636220"
  },
  {
    "text": "it's my application resilient and all that kind of things and there's a lot of things and I'm gonna show you and demo",
    "start": "636220",
    "end": "641800"
  },
  {
    "text": "some of the tools today with you but remember people attack because I think",
    "start": "641800",
    "end": "647650"
  },
  {
    "text": "we don't talk about that enough and don't quote me that I say you should hit Paul by with a bus thank you",
    "start": "647650",
    "end": "654730"
  },
  {
    "start": "654000",
    "end": "760000"
  },
  {
    "text": "so what do we do that as I said we want to avoid things to break in production",
    "start": "654730",
    "end": "660820"
  },
  {
    "text": "and we actually through chaos engineering experiment we want to break",
    "start": "660820",
    "end": "666160"
  },
  {
    "text": "things not necessarily in production but we're gonna break things first to understand if they're resilient but we",
    "start": "666160",
    "end": "671410"
  },
  {
    "text": "want to break things when everyone is in the company how many of you have I've stayed out night or Christmas or",
    "start": "671410",
    "end": "679990"
  },
  {
    "text": "holidays fixing things because you were on pager and you had to just go there and it's never during the day right it's",
    "start": "679990",
    "end": "687160"
  },
  {
    "text": "always in the evening at night's wedding I had to Christmas things like this",
    "start": "687160",
    "end": "694390"
  },
  {
    "text": "because that's when outages happen so instead of waiting for that we actually",
    "start": "694390",
    "end": "701400"
  },
  {
    "text": "create a semi outage through an experiment when all the engineers are in the room and everyone is wide awake",
    "start": "701400",
    "end": "708240"
  },
  {
    "text": "usually that's a 10:00 in the morning right if you do that in the afternoon",
    "start": "708240",
    "end": "713770"
  },
  {
    "text": "usually people are waiting to go home or then they're like eating ten is the",
    "start": "713770",
    "end": "719320"
  },
  {
    "text": "optimal time I've found that is great if you start at 9:00 is like no I need coffee they make mistake really 10 is brilliant",
    "start": "719320",
    "end": "726900"
  },
  {
    "text": "so that's a one thing to do it what it's not it's just randomly break things I",
    "start": "726900",
    "end": "734950"
  },
  {
    "text": "think that's a very bad image but chaos engineering has is the word chaos first",
    "start": "734950",
    "end": "740080"
  },
  {
    "text": "is is terrible makes people think that we just don't control anything actually",
    "start": "740080",
    "end": "745810"
  },
  {
    "text": "it's really controlled and I'll explain how we we do things and we really break with the purpose is to validate an",
    "start": "745810",
    "end": "752560"
  },
  {
    "text": "hypothesis is this part of the architecture of resilient or not and then we go in verify it so what are the",
    "start": "752560",
    "end": "762520"
  },
  {
    "start": "760000",
    "end": "771000"
  },
  {
    "text": "prerequisites for chaos engineering and sure you just start tomorrow go and say Adrian talked about breaking things on",
    "start": "762520",
    "end": "768310"
  },
  {
    "text": "purpose so let's take the database down well obviously know there's tons of",
    "start": "768310",
    "end": "773890"
  },
  {
    "start": "771000",
    "end": "968000"
  },
  {
    "text": "stuff and I just called the whole residency stack and you have to go and",
    "start": "773890",
    "end": "779890"
  },
  {
    "text": "make sure your I've done already a lot of work into your application is your",
    "start": "779890",
    "end": "785890"
  },
  {
    "text": "application resilient I think the most funny outages are thing is certificate",
    "start": "785890",
    "end": "792730"
  },
  {
    "text": "being expired how many of you have seen these ones right and it's stupid right",
    "start": "792730",
    "end": "798930"
  },
  {
    "text": "so how can we avoid that you know make sure that you don't do this make sure",
    "start": "798930",
    "end": "805570"
  },
  {
    "text": "you have redundancy right in your application if you know the mathematic behind the systems in parallel if you",
    "start": "805570",
    "end": "812350"
  },
  {
    "text": "have a system a part of the component that is 99% available that's three days",
    "start": "812350",
    "end": "818410"
  },
  {
    "text": "and sixteen hours of downtime a year if you put it in parallel we don't do",
    "start": "818410",
    "end": "823450"
  },
  {
    "text": "anything else on the system you just put it in parallel you jump to four nines availability that's 52 minutes if you",
    "start": "823450",
    "end": "830530"
  },
  {
    "text": "that three times it's six nines of availability 52 seconds a year of",
    "start": "830530",
    "end": "835930"
  },
  {
    "text": "downtown so that's simple math and I think a lot of you already probably do that you know scale Horizonte kind of things",
    "start": "835930",
    "end": "844990"
  },
  {
    "text": "or I have duplications of component and of course monitoring I think if you",
    "start": "844990",
    "end": "851110"
  },
  {
    "text": "gonna inject failure but you don't monitor well good luck and things like",
    "start": "851110",
    "end": "858250"
  },
  {
    "text": "these also have an alert system that actually works a very interesting case engineering experiment that I have had",
    "start": "858250",
    "end": "864820"
  },
  {
    "text": "done actually showed that the alerting system failed and then we didn't get the",
    "start": "864820",
    "end": "870520"
  },
  {
    "text": "alarms on time so that's also something you have to be sure right and think about and of course on the application",
    "start": "870520",
    "end": "877360"
  },
  {
    "text": "level there's tons of stuff how many of you are listing all the time outs of all",
    "start": "877360",
    "end": "883870"
  },
  {
    "text": "the dependencies you have in your systems like the default timeouts do you",
    "start": "883870",
    "end": "890170"
  },
  {
    "text": "have a sheet of all the dependents in your system so that default timer for the driver calling the database is",
    "start": "890170",
    "end": "896590"
  },
  {
    "text": "actually 15 seconds now that's something you probably should actually most of the systems have default timeouts which",
    "start": "896590",
    "end": "903700"
  },
  {
    "text": "either are infinite or 30-minute hundred minutes and things like this 100 seconds",
    "start": "903700",
    "end": "911350"
  },
  {
    "text": "as well for core for dotnet core the HTTP request library so it's like in",
    "start": "911350",
    "end": "917890"
  },
  {
    "text": "distributed systems or in the system in general you don't want to have those so the first thing first is look at all",
    "start": "917890",
    "end": "923110"
  },
  {
    "text": "your timeouts and make sure that they actually makes sense then you have retries and things like I know I don't",
    "start": "923110",
    "end": "929020"
  },
  {
    "text": "want to talk too much about that I've written a bunch of blog post I'm happy to to talk about this but today I want",
    "start": "929020",
    "end": "934570"
  },
  {
    "text": "to make sure that before going to case engineering there are some work that you have to do of course you can do cows",
    "start": "934570",
    "end": "941350"
  },
  {
    "text": "engineering then in a test environment and in your laptop to help you build",
    "start": "941350",
    "end": "946810"
  },
  {
    "text": "this one's right and that's definitely something you should do so the phase of chaos engine earrings are the following",
    "start": "946810",
    "end": "952870"
  },
  {
    "text": "it starts with on the upright a steady state eventually your application is",
    "start": "952870",
    "end": "958420"
  },
  {
    "text": "deployed in production or somewhere and you have a steady state a steady state is a kind of a figure of is my",
    "start": "958420",
    "end": "965529"
  },
  {
    "text": "application in normal operation something like this right and usually",
    "start": "965529",
    "end": "970839"
  },
  {
    "start": "968000",
    "end": "1017000"
  },
  {
    "text": "people use CPU memory I always say that's definitely not enough I'll give you an example at Amazon and the scale",
    "start": "970839",
    "end": "979180"
  },
  {
    "text": "of Amazon the CPU or a memory as absolutely no meaning what we use is the orders the number of orders per minute",
    "start": "979180",
    "end": "986290"
  },
  {
    "text": "and we can have very very accurate predictions of those Netflix use the",
    "start": "986290",
    "end": "991420"
  },
  {
    "text": "pulse of Netflix which is the number of time people around the globe click on play button and that's a very very good",
    "start": "991420",
    "end": "999430"
  },
  {
    "text": "metrics because it's a direct correlation between user experience clicking a lot is not fun and then a",
    "start": "999430",
    "end": "1005970"
  },
  {
    "text": "service being operational being able to deliver on that plane so they're able to detect regional faults simply on by",
    "start": "1005970",
    "end": "1012829"
  },
  {
    "text": "understanding the number of time people click on the play button so these things",
    "start": "1012829",
    "end": "1018300"
  },
  {
    "start": "1017000",
    "end": "1030000"
  },
  {
    "text": "like this what is the normal behavior of your system usually it's a combination of business in ops metrics ok then you",
    "start": "1018300",
    "end": "1026250"
  },
  {
    "text": "have to go into the output assist and this is the interesting thing is all right you bring everyone in the room and",
    "start": "1026250",
    "end": "1032449"
  },
  {
    "start": "1030000",
    "end": "1207000"
  },
  {
    "text": "you start to ask the question what if actually this is wrong it should be what",
    "start": "1032449",
    "end": "1038308"
  },
  {
    "text": "when because everything will fail eventually so what is gonna happen when",
    "start": "1038309",
    "end": "1044579"
  },
  {
    "text": "a data business is going down well the",
    "start": "1044579",
    "end": "1050130"
  },
  {
    "text": "most important here and I said that is to bring everyone in the room and I'll tell you why because when you bring the",
    "start": "1050130",
    "end": "1055770"
  },
  {
    "text": "product manager the designer the you the database is the backend the front-end",
    "start": "1055770",
    "end": "1061620"
  },
  {
    "text": "everyone in the room will have a different answer to start with if you",
    "start": "1061620",
    "end": "1066659"
  },
  {
    "text": "ask these are UI designer what happened to my application if I lose the database",
    "start": "1066659",
    "end": "1072510"
  },
  {
    "text": "I will say 99% of the time I've done that they have never thought about it for",
    "start": "1072510",
    "end": "1077549"
  },
  {
    "text": "and they actually didn't necessarily care about this and for good reason",
    "start": "1077549",
    "end": "1083429"
  },
  {
    "text": "most of the teens actually have separations of of concerns right so",
    "start": "1083429",
    "end": "1089070"
  },
  {
    "text": "chaos engineering kind of enforced people to actually think in a global view about this kind of stuff and",
    "start": "1089070",
    "end": "1095299"
  },
  {
    "text": "resiliency starts in the UI if you have a component a recommendation engine that",
    "start": "1095299",
    "end": "1100470"
  },
  {
    "text": "fails well you just don't want to return the four four and cross the entire application you just want to degrade or",
    "start": "1100470",
    "end": "1106710"
  },
  {
    "text": "just mask that and say you know rebuild your UI so that I have a component that",
    "start": "1106710",
    "end": "1112470"
  },
  {
    "text": "fell but hey we can be in a degraded State in kind of a partial error mode",
    "start": "1112470",
    "end": "1117690"
  },
  {
    "text": "type of things so bring everyone in the room what I usually do is I ask them to write things on paper if you ask them to",
    "start": "1117690",
    "end": "1124859"
  },
  {
    "text": "talk usually everyone eventually ends up",
    "start": "1124859",
    "end": "1129899"
  },
  {
    "text": "saying the same thing simply because they're talking and then bouncing ideas if you write on papers you hundred",
    "start": "1129899",
    "end": "1135929"
  },
  {
    "text": "percent have different answers and that's actually a moment to stop and say oh why do we all have different answers",
    "start": "1135929",
    "end": "1141809"
  },
  {
    "text": "then you can go back in you know and rebuild your product product design and",
    "start": "1141809",
    "end": "1149159"
  },
  {
    "text": "make sure that some of the result from those discussions actually in the design",
    "start": "1149159",
    "end": "1155279"
  },
  {
    "text": "of the product right what is a decorated state for UI a prime video is very",
    "start": "1155279",
    "end": "1161070"
  },
  {
    "text": "simple if we have a database falling down we go into read-only mode where we",
    "start": "1161070",
    "end": "1166409"
  },
  {
    "text": "serve stuff from cache of course we lose",
    "start": "1166409",
    "end": "1171509"
  },
  {
    "text": "a lot of customer interaction a lot of data that could be written but we say eh it's our fault we lost the database our",
    "start": "1171509",
    "end": "1178169"
  },
  {
    "text": "customers should never experience any problem because of our fault so we fall",
    "start": "1178169",
    "end": "1183779"
  },
  {
    "text": "into a read-only mode and then serve the content anyway and of course it's a",
    "start": "1183779",
    "end": "1189210"
  },
  {
    "text": "decorated experience so very important do that you don't always have to start with breaking the database actually",
    "start": "1189210",
    "end": "1195119"
  },
  {
    "text": "always start small what happened if my load balancer is latency latency usually",
    "start": "1195119",
    "end": "1202440"
  },
  {
    "text": "is a dead dead listen it will break stuff so",
    "start": "1202440",
    "end": "1208080"
  },
  {
    "start": "1207000",
    "end": "1226000"
  },
  {
    "text": "things I will discuss more about that once you have picked up one I positive rights just say hey what happened if my",
    "start": "1208080",
    "end": "1215430"
  },
  {
    "text": "database my master database go down and every one a scan is the same see now you",
    "start": "1215430",
    "end": "1220440"
  },
  {
    "text": "mean it's Eadie then you go into the running the experiment and that's where you you know wonder I don't identify",
    "start": "1220440",
    "end": "1226430"
  },
  {
    "start": "1226000",
    "end": "1342000"
  },
  {
    "text": "kind of what are you gonna test never ever test on pain kissed customers first",
    "start": "1226430",
    "end": "1233910"
  },
  {
    "text": "you can always start with customers that are maybe internal or synthetic or",
    "start": "1233910",
    "end": "1239250"
  },
  {
    "text": "things like this you know really you should protect your customers of course",
    "start": "1239250",
    "end": "1246590"
  },
  {
    "text": "so make sure eventually you might do it when you become really good at it but at the beginning when you want to start",
    "start": "1246590",
    "end": "1252060"
  },
  {
    "text": "always starts very small say I'm just gonna do a cannery deployment on the new with a new infrastructure and there's",
    "start": "1252060",
    "end": "1259110"
  },
  {
    "text": "send one percent of the traffic there and then see if I can run my experiment there that's usually a good way because",
    "start": "1259110",
    "end": "1265260"
  },
  {
    "text": "then you can have this stop emergency stop button that is very important say",
    "start": "1265260",
    "end": "1270630"
  },
  {
    "text": "if your experiment starts to go into an outage then you can stop it and roll",
    "start": "1270630",
    "end": "1277290"
  },
  {
    "text": "back and move back the traffic to the known affected environment which is very important always keep in mind the idea",
    "start": "1277290",
    "end": "1286290"
  },
  {
    "text": "of blast radius blast reduces the amount of customers because your customers are basically you the whole the gold here",
    "start": "1286290",
    "end": "1293490"
  },
  {
    "text": "how many customers will be affected right this is something super important",
    "start": "1293490",
    "end": "1299220"
  },
  {
    "text": "when you run an experiment make sure there is no way to have a cascading failure which would affect entire set of",
    "start": "1299220",
    "end": "1306540"
  },
  {
    "text": "customers and then the emergency stop button is also a fallacy in some chase",
    "start": "1306540",
    "end": "1313650"
  },
  {
    "text": "chaos engineering experiment will actually write data into a database and or will mutate data and sometimes it's",
    "start": "1313650",
    "end": "1322290"
  },
  {
    "text": "very hard to rollback right so figure out maybe before running the experiment if there's a chance that your data might",
    "start": "1322290",
    "end": "1329970"
  },
  {
    "text": "be corrupted and then have a scenario to to recover from that of course these are extreme cases but it's something you",
    "start": "1329970",
    "end": "1336240"
  },
  {
    "text": "have to think of if your experiment ends up writing something in the database",
    "start": "1336240",
    "end": "1342430"
  },
  {
    "start": "1342000",
    "end": "1410000"
  },
  {
    "text": "once you've done that most important is actually to verify right so you take all",
    "start": "1342430",
    "end": "1348170"
  },
  {
    "text": "the papers that people have written and then you verify is that actually what",
    "start": "1348170",
    "end": "1355070"
  },
  {
    "text": "happened that's why you need to have a lot of measurement about what happened at what time and figuring out yeah",
    "start": "1355070",
    "end": "1360410"
  },
  {
    "text": "actually the the architect predicted that the failover would take roughly a",
    "start": "1360410",
    "end": "1367550"
  },
  {
    "text": "minute in 30 seconds these are the result of the experiment we can verify this if it's not correlating is then you",
    "start": "1367550",
    "end": "1376280"
  },
  {
    "text": "can deep dive on the problem and why do we have a different understanding so oh yeah DNS caching oh I forgot about that",
    "start": "1376280",
    "end": "1383390"
  },
  {
    "text": "oh my TTL is actually 300 seconds and therefore I can't have 1 minute 30",
    "start": "1383390",
    "end": "1390680"
  },
  {
    "text": "seconds failover happen to do an experiment we did with customer or I did with customer a few",
    "start": "1390680",
    "end": "1397160"
  },
  {
    "text": "weeks ago as well so these are very interesting to see right figuring out if you can actually prove your hypothesis",
    "start": "1397160",
    "end": "1404960"
  },
  {
    "text": "through the measurement and this is why it's super super important to have measures of everything once you do that",
    "start": "1404960",
    "end": "1410540"
  },
  {
    "start": "1410000",
    "end": "1482000"
  },
  {
    "text": "of course you have to verify your experiment verify fix your experiment",
    "start": "1410540",
    "end": "1420400"
  },
  {
    "text": "but before before that actually is something that is super important that I forgot to mention in previous slide the",
    "start": "1420400",
    "end": "1427520"
  },
  {
    "text": "most important thing in my opinion to detect to to quantify as well when you verify your experiment is the time to",
    "start": "1427520",
    "end": "1433910"
  },
  {
    "text": "detect right and this is super important because when you do an experiment you don't necessarily want everyone to know",
    "start": "1433910",
    "end": "1440390"
  },
  {
    "text": "exactly at what time you're gonna run the experiment so you can test the real reactions of people and the real",
    "start": "1440390",
    "end": "1446360"
  },
  {
    "text": "escalation path I'd say one of the big outage I've experienced was because our",
    "start": "1446360",
    "end": "1451780"
  },
  {
    "text": "escalation path in the paging system failed so no one got paged and we got",
    "start": "1451780",
    "end": "1457280"
  },
  {
    "text": "customers to tell us our system was down this was pre AWS before I join AWS and",
    "start": "1457280",
    "end": "1464030"
  },
  {
    "text": "this is a situation where you don't want to now to be absolutely not so always",
    "start": "1464030",
    "end": "1469220"
  },
  {
    "text": "always make sure that you through an experiment you also test the detection",
    "start": "1469220",
    "end": "1475520"
  },
  {
    "text": "the alerting system so it's like a reinsurance that in case of a real problem actually this will work then",
    "start": "1475520",
    "end": "1484420"
  },
  {
    "start": "1482000",
    "end": "1592000"
  },
  {
    "text": "what we do at a AWS loss is what we call post mortems",
    "start": "1484420",
    "end": "1489850"
  },
  {
    "text": "we write what we call Corrections of errors where we take a team of engineers to understand what really went wrong why",
    "start": "1489850",
    "end": "1498070"
  },
  {
    "text": "why our experiment failed or why it was",
    "start": "1498070",
    "end": "1503840"
  },
  {
    "text": "successful and we we use a system called the five why's it's been criticized a",
    "start": "1503840",
    "end": "1510260"
  },
  {
    "text": "lot but we do many five whys and we ask a lot of other question me this is just to start the process of deep diving on",
    "start": "1510260",
    "end": "1518420"
  },
  {
    "text": "the root Coast and we start from the altitude say why did we have an outage because my database run out of",
    "start": "1518420",
    "end": "1525170"
  },
  {
    "text": "connections why did we run out of Corrections well because the timer was Infinite and my client at the time out",
    "start": "1525170",
    "end": "1532160"
  },
  {
    "text": "of sent ten seconds so every time the client retried it lost the connection why did the retry I had different so you",
    "start": "1532160",
    "end": "1541430"
  },
  {
    "text": "can deep dive and then figure out yeah my library I imported at the library and okay why did we import the library and",
    "start": "1541430",
    "end": "1548000"
  },
  {
    "text": "not check the time out because we don't have the tools for that and that's okay that's a big problem alright so let's build to to introspect",
    "start": "1548000",
    "end": "1554720"
  },
  {
    "text": "code and figure out all our default timeout and make sure to allow it everyone if a timeout is not set so this",
    "start": "1554720",
    "end": "1561500"
  },
  {
    "text": "is kind of root causes and analysis and of course from this I could have given",
    "start": "1561500",
    "end": "1568280"
  },
  {
    "text": "you five or six different sonars and you should definitely do it the big",
    "start": "1568280",
    "end": "1573410"
  },
  {
    "text": "thing in outages is never one reason it's always a collections of small reason usually happening at the same",
    "start": "1573410",
    "end": "1580130"
  },
  {
    "text": "time that creates this kind of cascading failures so make sure that you deep dive",
    "start": "1580130",
    "end": "1585470"
  },
  {
    "text": "into into into the errors and make sure you actually fix those and this is very",
    "start": "1585470",
    "end": "1593180"
  },
  {
    "start": "1592000",
    "end": "1708000"
  },
  {
    "text": "important never happens so that's why I'm saying have different analysis on",
    "start": "1593180",
    "end": "1598520"
  },
  {
    "text": "that and then comes to improve all the fix right and there there's no secret sauce here unfortunately but I'll give",
    "start": "1598520",
    "end": "1605300"
  },
  {
    "text": "you I'll tell you that I had a customer in three months ago where we did a casing spare and we came out of the experiment with a",
    "start": "1605300",
    "end": "1613330"
  },
  {
    "text": "list of things which were critical and then really really important to fix the",
    "start": "1613330",
    "end": "1620049"
  },
  {
    "text": "problem is they continued developing the features and two weeks after they",
    "start": "1620049",
    "end": "1625330"
  },
  {
    "text": "actually experienced the outage that could have been solved if they would have fixed stuff that we uncovered",
    "start": "1625330",
    "end": "1632409"
  },
  {
    "text": "during the chaos experiment and this is usually a tension that happens in teams are you uncover problems is should you",
    "start": "1632409",
    "end": "1639730"
  },
  {
    "text": "stop developing features and then really fix or should you wait how do you always say fix stuff fast that customers",
    "start": "1639730",
    "end": "1647440"
  },
  {
    "text": "actually add the 16-hour downtime for something they knew was a problem so",
    "start": "1647440",
    "end": "1655119"
  },
  {
    "text": "very important don't let don't let things like this happen there's plethora",
    "start": "1655119",
    "end": "1660940"
  },
  {
    "text": "of evidence that if you know something will bite you it will bite you right and",
    "start": "1660940",
    "end": "1667629"
  },
  {
    "text": "that's the same with with failures so improve what we do I'm alone again once",
    "start": "1667629",
    "end": "1674559"
  },
  {
    "text": "we have a correction of error we have a list of things to fix we stop all the roadmap we actually freeze roadmap with",
    "start": "1674559",
    "end": "1680970"
  },
  {
    "text": "freeze feature branches feature development and we fix stuff that's our",
    "start": "1680970",
    "end": "1686379"
  },
  {
    "text": "priority number one and we don't even have to go to our sea-levels teams that",
    "start": "1686379",
    "end": "1691869"
  },
  {
    "text": "deployed service can actually take this responsibility themselves and say we don't we don't do anything anymore we",
    "start": "1691869",
    "end": "1699190"
  },
  {
    "text": "just fix that stuff and this is something that I think is great it's empowering teams to fix things before",
    "start": "1699190",
    "end": "1706090"
  },
  {
    "text": "problems happen now I want to show I want to give you some kind of tools and",
    "start": "1706090",
    "end": "1712570"
  },
  {
    "start": "1708000",
    "end": "1723000"
  },
  {
    "text": "and things that are important but that you can start playing with in production",
    "start": "1712570",
    "end": "1718149"
  },
  {
    "text": "or in your test environment and I'm gonna demo quite a few of those so the bananas for monkeys I always say start",
    "start": "1718149",
    "end": "1725080"
  },
  {
    "start": "1723000",
    "end": "1785000"
  },
  {
    "text": "very simple start local I'll give you a story of what I used to do with the team",
    "start": "1725080",
    "end": "1730179"
  },
  {
    "text": "of engineers that work with before joining NWS I was leading a team about 20 people and we were hiring very",
    "start": "1730179",
    "end": "1737350"
  },
  {
    "text": "regularly new new members and the first thing we were doing with them",
    "start": "1737350",
    "end": "1742390"
  },
  {
    "text": "on the first week one was a write a small tool with three different api's",
    "start": "1742390",
    "end": "1748800"
  },
  {
    "text": "right to product let's say a product API that you can store a product you can get",
    "start": "1748800",
    "end": "1755110"
  },
  {
    "text": "the product you have like maybe a synchronous API and a synchronous API",
    "start": "1755110",
    "end": "1761800"
  },
  {
    "text": "and things like this and then we were asking them to make it as resilient as",
    "start": "1761800",
    "end": "1767290"
  },
  {
    "text": "possible and that's it and then we were letting the person kind of figuring out what it really is and you'll be very",
    "start": "1767290",
    "end": "1775330"
  },
  {
    "text": "surprised but the results of that and how simple things can actually like a",
    "start": "1775330",
    "end": "1781690"
  },
  {
    "text": "docker stop comment can actually help you improve a lot and I'll show you actually I still have a lot of the code",
    "start": "1781690",
    "end": "1788350"
  },
  {
    "start": "1785000",
    "end": "1865000"
  },
  {
    "text": "and actually I put this code on github so if you're interested and I call that code le owner I just love the name a",
    "start": "1788350",
    "end": "1794530"
  },
  {
    "text": "learner it's the name I want to call my daughter if I ever have one so I called my code Eleanor it's pathetic but that's",
    "start": "1794530",
    "end": "1805420"
  },
  {
    "text": "the way it is sorry and there's a bunch of different API is here there's an echo",
    "start": "1805420",
    "end": "1812590"
  },
  {
    "text": "a product API and then you can you know store things and post so in action it",
    "start": "1812590",
    "end": "1818080"
  },
  {
    "text": "looks like this this is actually sorry I'm gonna show you the docker compose because that's something I often use to",
    "start": "1818080",
    "end": "1825580"
  },
  {
    "text": "play locally there's an API front-end here there's a task running celery so",
    "start": "1825580",
    "end": "1834280"
  },
  {
    "text": "this is developing Python and there's a load balancer in front and nginx and then there's a master database a slave",
    "start": "1834280",
    "end": "1840760"
  },
  {
    "text": "database then a couple of radius containers to do cache and then also",
    "start": "1840760",
    "end": "1846790"
  },
  {
    "text": "queue I'm very often I would ask then people to make this as resilient as",
    "start": "1846790",
    "end": "1853840"
  },
  {
    "text": "possible right and then you can think about well the first thing is actually",
    "start": "1853840",
    "end": "1859480"
  },
  {
    "text": "test with docker stop I think it did this is very no-brainer so you know like",
    "start": "1859480",
    "end": "1865860"
  },
  {
    "start": "1865000",
    "end": "1919000"
  },
  {
    "text": "if you have for example here a health check you see I have my master database running I have a slave I've radius",
    "start": "1865860",
    "end": "1873940"
  },
  {
    "text": "checked so there so what I can do is actually a docker PS and then check for master I can take for",
    "start": "1873940",
    "end": "1882010"
  },
  {
    "text": "example that darker and say darker stuff oh maybe I should put the docker ID and",
    "start": "1882010",
    "end": "1889510"
  },
  {
    "text": "you see here this dies gracefully I always love the die gracefully like if",
    "start": "1889510",
    "end": "1896289"
  },
  {
    "text": "ever things can die gracefully but then then just lets desktop you see I have my",
    "start": "1896289",
    "end": "1903940"
  },
  {
    "text": "health check here that tells me that there's no operational errors indeed my",
    "start": "1903940",
    "end": "1909700"
  },
  {
    "text": "master database is not working but can I still get for example a product so let's",
    "start": "1909700",
    "end": "1917380"
  },
  {
    "text": "say can I get a product ID yeah a sealed so this is a very good way to say oh I",
    "start": "1917380",
    "end": "1923919"
  },
  {
    "start": "1919000",
    "end": "1957000"
  },
  {
    "text": "can build actually read only mode and if you would never break the database if you would never test locally actually",
    "start": "1923919",
    "end": "1930460"
  },
  {
    "text": "he's very often you would never think about hey my business it's not to write to database if I've data how can I serve",
    "start": "1930460",
    "end": "1936309"
  },
  {
    "text": "that I can do a failover into into the slave instead you see here there was a",
    "start": "1936309",
    "end": "1943510"
  },
  {
    "text": "there was no master detected and force a connection to the slave and that's the",
    "start": "1943510",
    "end": "1949210"
  },
  {
    "text": "kind of stuff I think that are definitely definitely interesting to do",
    "start": "1949210",
    "end": "1955299"
  },
  {
    "text": "so the first simple stuff to do case experiment is actually docker compose",
    "start": "1955299",
    "end": "1961630"
  },
  {
    "start": "1957000",
    "end": "2224000"
  },
  {
    "text": "and docker and then just break your docker containers and see what happens very often it will surprise you things",
    "start": "1961630",
    "end": "1969190"
  },
  {
    "text": "never fail gracefully like it was written but it helps you to figure out",
    "start": "1969190",
    "end": "1974200"
  },
  {
    "text": "okay what can I do if I lose the database what can I do if I lose cash is",
    "start": "1974200",
    "end": "1979630"
  },
  {
    "text": "my system able to handle a change of of behavior if I lose cash but I still have",
    "start": "1979630",
    "end": "1985000"
  },
  {
    "text": "data is how do you handle them and even if some of those are very hard questions",
    "start": "1985000",
    "end": "1991240"
  },
  {
    "text": "you actually enforce you to think about it and I think for us at least in the company when we set this kind of up it",
    "start": "1991240",
    "end": "1998950"
  },
  {
    "text": "totally changed the culture of how people design system because then naturally they were thinking about",
    "start": "1998950",
    "end": "2005039"
  },
  {
    "text": "resiliency every time they built a new component in your API and then and started to build map of API path and",
    "start": "2005039",
    "end": "2012930"
  },
  {
    "text": "figuring out the critical services and naturally enforce an understanding of what happened if we lose some of those",
    "start": "2012930",
    "end": "2019290"
  },
  {
    "text": "critical services so something like this start very simple definitely it's very",
    "start": "2019290",
    "end": "2025890"
  },
  {
    "text": "important another very very nice way to test resiliency is to DDoS yourself I'll",
    "start": "2025890",
    "end": "2033510"
  },
  {
    "text": "I'll show you that again I'm gonna I'm gonna use this one this is actually so",
    "start": "2033510",
    "end": "2046010"
  },
  {
    "text": "here the WR k command actually will start at I think 12 threads with 400",
    "start": "2046010",
    "end": "2053730"
  },
  {
    "text": "concurrent connections for 20 seconds and simply will attack the health API",
    "start": "2053730",
    "end": "2059129"
  },
  {
    "text": "that I was just there and actually before doing anything here do you",
    "start": "2059130",
    "end": "2064320"
  },
  {
    "text": "realize the huge problem there is here massive issue here how many of you have",
    "start": "2064320",
    "end": "2073620"
  },
  {
    "text": "experienced an outage based on there's no space left on your instance it's",
    "start": "2073620",
    "end": "2081149"
  },
  {
    "text": "actually an outage happens super often and the very important thing here resiliency wise would have say there's",
    "start": "2081150",
    "end": "2087990"
  },
  {
    "text": "way too much logging let's drop the logging right because that's absolutely",
    "start": "2087990",
    "end": "2093600"
  },
  {
    "text": "an easy way to DDoS someone is force them to have too much logging that will",
    "start": "2093600",
    "end": "2099240"
  },
  {
    "text": "take the instance down that's a typical way attacker is do a DDoS attack it's",
    "start": "2099240",
    "end": "2105270"
  },
  {
    "text": "not by taking your concurrent connections out is simply to force the system to lock too much and then you run",
    "start": "2105270",
    "end": "2112530"
  },
  {
    "text": "out of space on your instance if your instance to run out of space you can't open connections because an i/o",
    "start": "2112530",
    "end": "2119490"
  },
  {
    "text": "operation needs space on your on your drive so here a big problem before doing",
    "start": "2119490",
    "end": "2125490"
  },
  {
    "text": "anything is actually yeah in a production system I would easily run out of space so I need to figure out how to",
    "start": "2125490",
    "end": "2132300"
  },
  {
    "text": "drop that logging experience but let's do it again because I want to show you another way so here my health API",
    "start": "2132300",
    "end": "2139640"
  },
  {
    "text": "alright let's run that again you see the time it takes now so imagine",
    "start": "2139640",
    "end": "2146770"
  },
  {
    "text": "what it takes actually a long time what",
    "start": "2146770",
    "end": "2151780"
  },
  {
    "text": "is wrong with that well there's a massive problem with actually this this",
    "start": "2151780",
    "end": "2159970"
  },
  {
    "text": "behavior is that if I am in an auto scaling group and my load balancer is looking for health check in the instance",
    "start": "2159970",
    "end": "2166750"
  },
  {
    "text": "and can't enter and the instance don't doesn't prioritize health check well",
    "start": "2166750",
    "end": "2172030"
  },
  {
    "text": "guess what the load balancer is doing taking you out so it's unhealthy not",
    "start": "2172030",
    "end": "2177700"
  },
  {
    "text": "gonna send traffic and then test others and you're removing instance for a note from a load balancer so other instance",
    "start": "2177700",
    "end": "2184330"
  },
  {
    "text": "will get more connections and won't be able to answer else and that's the cascading failures that has happened to",
    "start": "2184330",
    "end": "2191320"
  },
  {
    "text": "me several times alright so in a situation like this very good way we say",
    "start": "2191320",
    "end": "2196570"
  },
  {
    "text": "how can I prioritize my health check and say oh the other API is is bombarding it",
    "start": "2196570",
    "end": "2203740"
  },
  {
    "text": "so well a very easy way to do that is rate-limiting right so let's do a rate",
    "start": "2203740",
    "end": "2210340"
  },
  {
    "text": "limit and we take 10 purse per minute right so let's see that we do",
    "start": "2210340",
    "end": "2219340"
  },
  {
    "text": "that and then obviously then I'm rate limiting so though there's another",
    "start": "2219340",
    "end": "2225910"
  },
  {
    "start": "2224000",
    "end": "2277000"
  },
  {
    "text": "problem you say of course I'm rate limiting the same client that I'm",
    "start": "2225910",
    "end": "2231070"
  },
  {
    "text": "playing with right but in theory if I have a different client then my rate",
    "start": "2231070",
    "end": "2237070"
  },
  {
    "text": "limiting should work but you see now my rate limit actually should be a bit smarter and say I actually came from a",
    "start": "2237070",
    "end": "2242590"
  },
  {
    "text": "different client I should probably take the xip or the client different ash to",
    "start": "2242590",
    "end": "2249280"
  },
  {
    "text": "figure out the rate limits so it's actually a lot of different questions that you can start questioning yourself",
    "start": "2249280",
    "end": "2255640"
  },
  {
    "text": "and say oh how can I even locally make this more resilient and I think that's",
    "start": "2255640",
    "end": "2261930"
  },
  {
    "text": "already a lot that you can do just starting from that so yeah make sure you",
    "start": "2261930",
    "end": "2269890"
  },
  {
    "text": "actually play by first trying to DDoS yourself before someone else does because you will learn a lot",
    "start": "2269890",
    "end": "2276310"
  },
  {
    "text": "the application another very cool cool comment that I really like is the TC on",
    "start": "2276310",
    "end": "2282880"
  },
  {
    "start": "2277000",
    "end": "2395000"
  },
  {
    "text": "Linux that will simply add a 200 millisecond latency on your et0 eth0",
    "start": "2282880",
    "end": "2289450"
  },
  {
    "text": "interface right so do you know Latin see",
    "start": "2289450",
    "end": "2294880"
  },
  {
    "text": "the problems of latency how many people have you play fortnight is the same",
    "start": "2294880",
    "end": "2301240"
  },
  {
    "text": "every time I use these questions everyone laughs no one raised their hand it's the same like I mean your view on",
    "start": "2301240",
    "end": "2306820"
  },
  {
    "text": "tinder it's no one everyone plays that fortnight I get killed in 10 seconds on",
    "start": "2306820",
    "end": "2313690"
  },
  {
    "text": "for tonight because of latency because the kid is usually much faster than me at answering and actually my response is",
    "start": "2313690",
    "end": "2322630"
  },
  {
    "text": "usually five-minute 500 milliseconds 600 milliseconds the kids I play with are usually able to kill in 300 and 400",
    "start": "2322630",
    "end": "2329530"
  },
  {
    "text": "milliseconds because they've been trained training a lot and that's usually the effect of latency if you",
    "start": "2329530",
    "end": "2336040"
  },
  {
    "text": "want a tangible effect of latency on the retail amazon.com page we make a be",
    "start": "2336040",
    "end": "2341260"
  },
  {
    "text": "experiment of adding 100 percent latency on the webpage and that's an effect of reducing the product orders by 1% every",
    "start": "2341260",
    "end": "2351070"
  },
  {
    "text": "hundred milliseconds it's something the human brain doesn't even realize it just means that people that experience a bit",
    "start": "2351070",
    "end": "2358150"
  },
  {
    "text": "more latency won't spend much time on your page and the more you increase this actually it's going exponential past a",
    "start": "2358150",
    "end": "2366190"
  },
  {
    "text": "moment they will just never go back and that you lose this so we use a system of latency bucket for our page we say our",
    "start": "2366190",
    "end": "2373540"
  },
  {
    "text": "page needs to be loaded in let's say maximum 3 seconds from all the services and then we cut and degrade if it if",
    "start": "2373540",
    "end": "2382090"
  },
  {
    "text": "it's not at 3 at 3 seconds for example depends on which page of course right",
    "start": "2382090",
    "end": "2387760"
  },
  {
    "text": "but you get the idea so that's very a very good thing to do and figuring out",
    "start": "2387760",
    "end": "2393040"
  },
  {
    "text": "the effect of latin-themed one that I love is actually I don't know if I'm any",
    "start": "2393040",
    "end": "2398500"
  },
  {
    "start": "2395000",
    "end": "2478000"
  },
  {
    "text": "of you knew the stress stress product so small tool on Linux there's an updated",
    "start": "2398500",
    "end": "2406690"
  },
  {
    "text": "version of it called stress mg now also helps you to randomly kill stuff",
    "start": "2406690",
    "end": "2412539"
  },
  {
    "text": "I'll add CPU burn on your environment so",
    "start": "2412539",
    "end": "2417719"
  },
  {
    "text": "something like this oops I mean the",
    "start": "2417719",
    "end": "2426909"
  },
  {
    "text": "wrong sorry up I mean the wrong shell I need to quit okay",
    "start": "2426909",
    "end": "2445419"
  },
  {
    "text": "I lost my my shell clean okay I lost",
    "start": "2445419",
    "end": "2457569"
  },
  {
    "text": "that one so let's I want demo this one but that's a good way also to add stress",
    "start": "2457569",
    "end": "2466029"
  },
  {
    "text": "in your system I'll show you some other way that's actually something that you should definitely add in your in your",
    "start": "2466029",
    "end": "2471359"
  },
  {
    "text": "tools if you want to randomly add the CPU burns to your application another",
    "start": "2471359",
    "end": "2479409"
  },
  {
    "start": "2478000",
    "end": "2513000"
  },
  {
    "text": "very interesting thing to do is play with IP IP tables and one of the easiest",
    "start": "2479409",
    "end": "2486489"
  },
  {
    "text": "way to break your application is remove access to DNS resolvers so basically cut",
    "start": "2486489",
    "end": "2492039"
  },
  {
    "text": "TCP and UDP port 253 or you drop that traffic from the IP table and see if",
    "start": "2492039",
    "end": "2497769"
  },
  {
    "text": "your application depends on DNS activity or if you can cache locally if you can",
    "start": "2497769",
    "end": "2503939"
  },
  {
    "text": "use that that's a very good way of testing I think local local local",
    "start": "2503939",
    "end": "2511380"
  },
  {
    "text": "applications as well other fun things to do using most of the Linux tools already",
    "start": "2511380",
    "end": "2520209"
  },
  {
    "start": "2513000",
    "end": "2615000"
  },
  {
    "text": "is as fill up the disk you can write a massive massive file to fill up that",
    "start": "2520209",
    "end": "2528279"
  },
  {
    "text": "this can see what is gonna happening what's gonna happen you can do traffic shaping to increase packet loss and your",
    "start": "2528279",
    "end": "2536229"
  },
  {
    "text": "in your interface you can detach all the volumes and say oh what happened",
    "start": "2536229",
    "end": "2544289"
  },
  {
    "text": "you don't have discs anymore - right - what do you do how do you behave do you",
    "start": "2544289",
    "end": "2550440"
  },
  {
    "text": "gracefully degrade what do you do or mess with the et cos it's always a very",
    "start": "2550440",
    "end": "2556630"
  },
  {
    "text": "good way do you have a discovery service that you can rely on if you detect a",
    "start": "2556630",
    "end": "2562960"
  },
  {
    "text": "change of the host can you recover from that that's it repairing a lot of things to",
    "start": "2562960",
    "end": "2569319"
  },
  {
    "text": "do if you want to have an integrated suite of chaos tools there's a very good",
    "start": "2569319",
    "end": "2576999"
  },
  {
    "text": "one of course from Netflix the seaman army the only downside of this is is",
    "start": "2576999",
    "end": "2582489"
  },
  {
    "text": "really integrating heavily with spinnaker which is a deployment deployment pipeline tool and that's what",
    "start": "2582489",
    "end": "2590109"
  },
  {
    "text": "Netflix uses luckily everything is open source so you can still take the take",
    "start": "2590109",
    "end": "2595180"
  },
  {
    "text": "the code out of of all that and play with with the the army but I found it",
    "start": "2595180",
    "end": "2601720"
  },
  {
    "text": "quite complicated actually and there's much more easy way to do it but it's definitely brilliant to look at",
    "start": "2601720",
    "end": "2609219"
  },
  {
    "text": "the code and get a lot of ideas of what you can start breaking my favorite is",
    "start": "2609219",
    "end": "2617019"
  },
  {
    "start": "2615000",
    "end": "2895000"
  },
  {
    "text": "one one of my favorite is the chaos toolkit that's a toolkit that is API",
    "start": "2617019",
    "end": "2622359"
  },
  {
    "text": "base so it's open source you can write",
    "start": "2622359",
    "end": "2627719"
  },
  {
    "text": "code to test an experiment and I'll show",
    "start": "2627719",
    "end": "2633969"
  },
  {
    "text": "you how to do that so sorry this is how you how you would write an",
    "start": "2633969",
    "end": "2642430"
  },
  {
    "text": "experiment here from the beginning you start with the steady state hypothesis",
    "start": "2642430",
    "end": "2647670"
  },
  {
    "text": "so is how is your application responding in in the normal mode this is just to",
    "start": "2647670",
    "end": "2654910"
  },
  {
    "text": "show you how the framework with this is working with my docker compose",
    "start": "2654910",
    "end": "2660579"
  },
  {
    "text": "experiment here you won't make sure that the answer is 200 on the health check",
    "start": "2660579",
    "end": "2667479"
  },
  {
    "text": "and then you have methods to actually do the experiment and there you see I just",
    "start": "2667479",
    "end": "2673989"
  },
  {
    "text": "do a docker and I checked the PID of the master then I stopped",
    "start": "2673989",
    "end": "2681450"
  },
  {
    "text": "that basically I just do through code what I did with docker stop and then the",
    "start": "2681450",
    "end": "2689280"
  },
  {
    "text": "good thing with that is actually you can integrate into a CI CD pipeline right so here after that after breaking database",
    "start": "2689280",
    "end": "2697320"
  },
  {
    "text": "I do a probe on echo I can pause after let's say I'll do I'll",
    "start": "2697320",
    "end": "2705090"
  },
  {
    "text": "do a ten seconds here then I really get my health and then I'll restart my",
    "start": "2705090",
    "end": "2714120"
  },
  {
    "text": "database and eventually everything should go back to normal so I'll show",
    "start": "2714120",
    "end": "2719550"
  },
  {
    "text": "you in practice how this works right because actually that's the cool thing",
    "start": "2719550",
    "end": "2724730"
  },
  {
    "text": "so if I do into chaos do you all see the",
    "start": "2724730",
    "end": "2736110"
  },
  {
    "text": "screen it's good yeah okay and then you can run start your experiment so",
    "start": "2736110",
    "end": "2743640"
  },
  {
    "text": "experiment DB down and what it will do here it will start running my experiment",
    "start": "2743640",
    "end": "2749100"
  },
  {
    "text": "and you can see of course that here is",
    "start": "2749100",
    "end": "2754410"
  },
  {
    "text": "degrading the database shutting nose so it's very nice way to start writing what",
    "start": "2754410",
    "end": "2760800"
  },
  {
    "text": "I you know some kind of test Suites I think or experiments and that you can then run regularly while you deploy",
    "start": "2760800",
    "end": "2768450"
  },
  {
    "text": "software because very often between versions deployment you want to be able",
    "start": "2768450",
    "end": "2774000"
  },
  {
    "text": "to automate and maybe find problems right so I think that's a beautiful way to do it and it's very simple to to use",
    "start": "2774000",
    "end": "2781500"
  },
  {
    "text": "it there's a lot of plugins for different cloud providers that you can",
    "start": "2781500",
    "end": "2786810"
  },
  {
    "text": "out-of-the-box start breaking things and you see here my experiment kind of add",
    "start": "2786810",
    "end": "2799230"
  },
  {
    "text": "an error right so you can say all right in this deployment actually in my experiment failed so then you can deep",
    "start": "2799230",
    "end": "2804450"
  },
  {
    "text": "dive and say oh what happened and I think it's a very good way to make sure you don't have",
    "start": "2804450",
    "end": "2810460"
  },
  {
    "text": "between deployments or between versions you don't have drift and you don't have",
    "start": "2810460",
    "end": "2817599"
  },
  {
    "text": "lights a loss of resiliency as well so",
    "start": "2817599",
    "end": "2823180"
  },
  {
    "text": "something definitely to to look at this chaos toolkit actually I want to I can",
    "start": "2823180",
    "end": "2832240"
  },
  {
    "text": "show you quickly how one looks if you want to integrate for ec2 this is simply",
    "start": "2832240",
    "end": "2840160"
  },
  {
    "text": "terminating randomly stuff into into an every ability zone so you see I have the",
    "start": "2840160",
    "end": "2845680"
  },
  {
    "text": "chaos AWS and then I call ec2 and the probes and then I can count instances",
    "start": "2845680",
    "end": "2852400"
  },
  {
    "text": "and say here my steady state hypothesis ask to start with there's some healthy",
    "start": "2852400",
    "end": "2858099"
  },
  {
    "text": "instances regardless of what they do and then I just start breaking randomly",
    "start": "2858099",
    "end": "2863410"
  },
  {
    "text": "those instances on so I stopped instances in that every ability zone",
    "start": "2863410",
    "end": "2868930"
  },
  {
    "text": "with instances that have this tag chaos ready but you don't want to necessarily",
    "start": "2868930",
    "end": "2874990"
  },
  {
    "text": "break all the other instances you want to make sure that you target the instances that already so that's",
    "start": "2874990",
    "end": "2880720"
  },
  {
    "text": "actually quite flexible framework and I highly suggest that you you look at it",
    "start": "2880720",
    "end": "2887049"
  },
  {
    "text": "especially if you are interested in continuous deployment and pipeline for your chaos experiments then is grimian",
    "start": "2887049",
    "end": "2897510"
  },
  {
    "start": "2895000",
    "end": "2981000"
  },
  {
    "text": "grimian is a kind of destruction as a service so to say it's a company that",
    "start": "2897510",
    "end": "2906940"
  },
  {
    "text": "was founded by 2x Amazonians that were part of the resiliency team at amazon so",
    "start": "2906940",
    "end": "2913000"
  },
  {
    "text": "they have a lot of experience actually we use similar tools internally at amazon to to do chaos experiment and",
    "start": "2913000",
    "end": "2919390"
  },
  {
    "text": "test our services they've done a kind of a customer version of it now I want to",
    "start": "2919390",
    "end": "2926170"
  },
  {
    "text": "demo that to you before demoing this is you see here I'm running I'm running an",
    "start": "2926170",
    "end": "2932710"
  },
  {
    "text": "architecture which is sorry which is",
    "start": "2932710",
    "end": "2938130"
  },
  {
    "text": "multi AC so I have two servers to WordPress instances deployed",
    "start": "2938130",
    "end": "2944350"
  },
  {
    "text": "across to every bleaches owns and that's basically what it is it's my wordpress stuff I can write things if I know how",
    "start": "2944350",
    "end": "2956680"
  },
  {
    "text": "to use this one post here I can modify that so you get the idea right I can",
    "start": "2956680",
    "end": "2963310"
  },
  {
    "text": "start that so basically my application",
    "start": "2963310",
    "end": "2971140"
  },
  {
    "text": "is working across multiple AZ's it's resilient if I break one of this instance it will recover right so let's",
    "start": "2971140",
    "end": "2979930"
  },
  {
    "text": "test that so to do that gremlin is actually very nice",
    "start": "2979930",
    "end": "2986220"
  },
  {
    "start": "2981000",
    "end": "3207000"
  },
  {
    "text": "what gremlin works on you have to install an agent in the in the backend so in the instance I have installed an",
    "start": "2986220",
    "end": "2993850"
  },
  {
    "text": "agent that communicates with the service and that offers me basically this is my",
    "start": "2993850",
    "end": "2999100"
  },
  {
    "text": "agent you see I have two two of them I can select those again I can start playing experiments this is the kind of",
    "start": "2999100",
    "end": "3007520"
  },
  {
    "text": "attacks they have so first kind of attacks they have resource attacks so",
    "start": "3007520",
    "end": "3013440"
  },
  {
    "text": "you can consume CPU you can consume dicks this space you can consume target",
    "start": "3013440",
    "end": "3019890"
  },
  {
    "text": "IO so all the stuff we've talked about you can take my memory down consume it and say how many how many how much",
    "start": "3019890",
    "end": "3028020"
  },
  {
    "text": "memory you want to take out what's the percentage of memory you want to take out from your instance that's a very",
    "start": "3028020",
    "end": "3034290"
  },
  {
    "text": "easy way to break your GBM by the way so make sure that if you do that you are",
    "start": "3034290",
    "end": "3041690"
  },
  {
    "text": "you're resonant on the state level you can kill processes you can simply shut",
    "start": "3041690",
    "end": "3047010"
  },
  {
    "text": "down or my favorite one time travel yep",
    "start": "3047010",
    "end": "3052490"
  },
  {
    "text": "change the time of your instance and see how it behaves I've never ever seen an",
    "start": "3052490",
    "end": "3058140"
  },
  {
    "text": "experiment that ended well it's a sure thing to break it",
    "start": "3058140",
    "end": "3064170"
  },
  {
    "text": "especially in distributed systems if you have data okay it's a mess on the",
    "start": "3064170",
    "end": "3070170"
  },
  {
    "text": "network level you can create black holes so I mean there's Network never go through you drop all the traffic you can",
    "start": "3070170",
    "end": "3076710"
  },
  {
    "text": "block DNS the same same thing that I mentioned earlier so why I really like with gremlin is in in",
    "start": "3076710",
    "end": "3083519"
  },
  {
    "text": "kind of nice UI it integrates all these kind of things we talked about the downside is you have to install an agent",
    "start": "3083519",
    "end": "3090150"
  },
  {
    "text": "and that agent kind of discussed with a third party service so well you have to",
    "start": "3090150",
    "end": "3096960"
  },
  {
    "text": "make sure that you can trust that it's also got interesting it's not the on",
    "start": "3096960",
    "end": "3102779"
  },
  {
    "text": "demand the license so you have to have sales discussion I've had the discussion",
    "start": "3102779",
    "end": "3108059"
  },
  {
    "text": "with cells and back in force trying to figure out what kind of license I could have and how much I need to pay my",
    "start": "3108059",
    "end": "3116220"
  },
  {
    "text": "consumption is which i think is it is kind of outdated at the cloud age but",
    "start": "3116220",
    "end": "3122970"
  },
  {
    "text": "anyway I think the product is pretty amazing so let's see CDC in action so we",
    "start": "3122970",
    "end": "3129569"
  },
  {
    "text": "selected our two targets here and we're gonna do a CPU attack for 60 seconds and",
    "start": "3129569",
    "end": "3137849"
  },
  {
    "text": "let's unleash those ones and I've connected to my instances you see they're here and you see the CPU attacks",
    "start": "3137849",
    "end": "3144599"
  },
  {
    "text": "are gonna happen so the first one here and then the gremlin is actually here attacking the",
    "start": "3144599",
    "end": "3152880"
  },
  {
    "text": "instance and then I can start playing with with the WordPress how is WordPress",
    "start": "3152880",
    "end": "3158789"
  },
  {
    "text": "reacting to that so it's not too bad I want to write a post I want to store",
    "start": "3158789",
    "end": "3165269"
  },
  {
    "text": "some stuff you know I say is they've done quite a okay job it's not really a",
    "start": "3165269",
    "end": "3172769"
  },
  {
    "text": "CPU demanding maybe they'll all just load a lot of stuff on the on the UI so",
    "start": "3172769",
    "end": "3177869"
  },
  {
    "text": "that's running what the interesting thing here is if you detect a problem",
    "start": "3177869",
    "end": "3183150"
  },
  {
    "text": "you can just out everything immediately and within second the experiment will",
    "start": "3183150",
    "end": "3189989"
  },
  {
    "text": "stop right so you see now my attack will stop so they bring all that out of the",
    "start": "3189989",
    "end": "3194999"
  },
  {
    "text": "box and I was told that they will improve their license and sell stuff",
    "start": "3194999",
    "end": "3203190"
  },
  {
    "text": "because I complained to them so anyway",
    "start": "3203190",
    "end": "3208499"
  },
  {
    "text": "definitely have a look at agreeing they have a free a free tier a free offer that you can",
    "start": "3208499",
    "end": "3214120"
  },
  {
    "text": "just start playing with and install it if they support docker so you can install that on docker as well they do",
    "start": "3214120",
    "end": "3221290"
  },
  {
    "text": "that on kubernetes as well it supports a lot of stuff is actually also integrates with the previous chaos toolkit I showed",
    "start": "3221290",
    "end": "3228370"
  },
  {
    "text": "through ap is so you can run grimming through the kale to get CI CD experiment",
    "start": "3228370",
    "end": "3233380"
  },
  {
    "text": "which is brilliant in my opinion so definitely have a look at it now a",
    "start": "3233380",
    "end": "3238900"
  },
  {
    "start": "3235000",
    "end": "3600000"
  },
  {
    "text": "rather new one but actually something I really really love is toxic proxy is",
    "start": "3238900",
    "end": "3244060"
  },
  {
    "text": "proxy that was is open source by Shopify and it allows you to create kind of",
    "start": "3244060",
    "end": "3252430"
  },
  {
    "text": "proxy obviously between your client and your dependencies so whether it's a want",
    "start": "3252430",
    "end": "3258760"
  },
  {
    "text": "to talk to database ready or to your containers and you can inject toxics so",
    "start": "3258760",
    "end": "3266560"
  },
  {
    "text": "let's I want to demo that to you quickly so here I've have Redis installed on my",
    "start": "3266560",
    "end": "3276880"
  },
  {
    "text": "laptop I can connect Redis so if I if I do radius you know I can get foo",
    "start": "3276880",
    "end": "3282940"
  },
  {
    "text": "and yes it's bar you can set set bar who",
    "start": "3282940",
    "end": "3288850"
  },
  {
    "text": "okay it's fine so it works so but that's connecting directly to to Redis what we",
    "start": "3288850",
    "end": "3294640"
  },
  {
    "text": "don't want that so what we want is connect through through the toxic proxy so you see here I connected a proxy for",
    "start": "3294640",
    "end": "3300850"
  },
  {
    "text": "Redis on port 20,000 that will then communicate with that so then I can I",
    "start": "3300850",
    "end": "3307810"
  },
  {
    "text": "can then do something like this 20,000",
    "start": "3307810",
    "end": "3313840"
  },
  {
    "text": "and you see I can still get my food but",
    "start": "3313840",
    "end": "3319510"
  },
  {
    "text": "there there is no toxic here right so let's create a toxic so what we can do",
    "start": "3319510",
    "end": "3324820"
  },
  {
    "text": "is toxic we can add a toxic for Redis",
    "start": "3324820",
    "end": "3331810"
  },
  {
    "text": "and latency based toxic that will add 1000 milliseconds latency so basically a",
    "start": "3331810",
    "end": "3338260"
  },
  {
    "text": "second of latency and now if you test that you see up and if you get full",
    "start": "3338260",
    "end": "3345890"
  },
  {
    "text": "it's added this one second licensing so it's very easy to add in your system if",
    "start": "3345890",
    "end": "3351600"
  },
  {
    "text": "you have a if you want to proxy requests to your sequel database and see the effect of latency super easy to deploy",
    "start": "3351600",
    "end": "3359600"
  },
  {
    "text": "Shopify does recommend you don't run this in production they do say they've hardened harden it",
    "start": "3359600",
    "end": "3367260"
  },
  {
    "text": "three years and they they've run it three years in their architecture they use it very heavily so it's ready for",
    "start": "3367260",
    "end": "3373860"
  },
  {
    "text": "prime time but they still say maybe don't do it in production extremely large scale but I think it's a brilliant",
    "start": "3373860",
    "end": "3381690"
  },
  {
    "text": "way to start experimenting both locally here with how your system react and how",
    "start": "3381690",
    "end": "3388080"
  },
  {
    "text": "your containers might react to licensee and I think it's a brilliant way to to",
    "start": "3388080",
    "end": "3393510"
  },
  {
    "text": "interface with with the tools if you are into kubernetes there is a brilliant one",
    "start": "3393510",
    "end": "3400110"
  },
  {
    "text": "that is called cube monkey's I won't have the time to demo that unfortunately maybe next time the cube monkey is",
    "start": "3400110",
    "end": "3407280"
  },
  {
    "text": "actually very nice because it's a most a port of the simian army or the chaos",
    "start": "3407280",
    "end": "3412620"
  },
  {
    "text": "monkey of Netflix - kubernetes so you can randomly kill kill kill pods and",
    "start": "3412620",
    "end": "3418860"
  },
  {
    "text": "that's also something that you definitely wanna test before pushing",
    "start": "3418860",
    "end": "3424260"
  },
  {
    "text": "your cube unities cluster in production another very good tool especially if",
    "start": "3424260",
    "end": "3431400"
  },
  {
    "text": "you're in using docker is Pumbaa so all the stuff doctor stop docker start",
    "start": "3431400",
    "end": "3436740"
  },
  {
    "text": "things like this I get the PID is actually obstructed by Pumbaa Pumbaa",
    "start": "3436740",
    "end": "3441810"
  },
  {
    "text": "hello it helps you to that to do that way more easily definitely have a look",
    "start": "3441810",
    "end": "3446940"
  },
  {
    "text": "at this is brilliant product integrates with a lot of stool and then if you are into adding also latency tundra which",
    "start": "3446940",
    "end": "3457470"
  },
  {
    "text": "has a product for most mostly to monitor and things like this also",
    "start": "3457470",
    "end": "3463710"
  },
  {
    "text": "have some possibility to do chaos chaos test especially lambda functions and you",
    "start": "3463710",
    "end": "3471030"
  },
  {
    "text": "if you're using databases on AWS we support this kind of testing file overs",
    "start": "3471030",
    "end": "3479470"
  },
  {
    "text": "and also we support query injection fault injection directly on the database that's for Aurora is our sequel database",
    "start": "3479470",
    "end": "3488590"
  },
  {
    "text": "that is Postgres and my sequel compatible and you can simply run comments like this this view of them you",
    "start": "3488590",
    "end": "3495850"
  },
  {
    "text": "can run and there's a list here this is the comment to add a percentage of dis",
    "start": "3495850",
    "end": "3501609"
  },
  {
    "text": "failures in your in your database and see how your application is going to behave finally if you are into a lambda",
    "start": "3501609",
    "end": "3509440"
  },
  {
    "text": "and server less I wrote a chaos library using lambda layers so that you can",
    "start": "3509440",
    "end": "3516640"
  },
  {
    "text": "inject licensee in either in the lambda function itself or through methods and",
    "start": "3516640",
    "end": "3521770"
  },
  {
    "text": "decorators in Python that you can put on top of your function and add latency so that you can see how your code behaves",
    "start": "3521770",
    "end": "3528340"
  },
  {
    "text": "at scale and there's a whole blog post written on that it's also a table",
    "start": "3528340",
    "end": "3533680"
  },
  {
    "text": "account together with all the code and the stuff I deploy today so you can see how bad I write code and how much work",
    "start": "3533680",
    "end": "3541900"
  },
  {
    "text": "it is to do on resiliency I want to finish on some of the challenges with chaos engineering because if you start",
    "start": "3541900",
    "end": "3547330"
  },
  {
    "text": "the practice of chaos engineering you will have challenges as I say a loner is my baby",
    "start": "3547330",
    "end": "3552490"
  },
  {
    "text": "well most code developers will behave like that that means that if you",
    "start": "3552490",
    "end": "3557920"
  },
  {
    "text": "criticize or find faults in their codes they will usually take it very personally which is stupid because the",
    "start": "3557920",
    "end": "3564700"
  },
  {
    "text": "whole point of writing code is actually to improve it and make it resilient and there's no one way of doing it usually",
    "start": "3564700",
    "end": "3571300"
  },
  {
    "text": "is great but naturally people that write code including myself always have this fear of being criticized so in the early",
    "start": "3571300",
    "end": "3580420"
  },
  {
    "text": "days of chaos engineering practices make sure that you kind of take a soft",
    "start": "3580420",
    "end": "3587109"
  },
  {
    "text": "approach to to pointing out problems never ever blame anyone blame less",
    "start": "3587109",
    "end": "3593830"
  },
  {
    "text": "cultures are very very important and you know it also is not going to replace",
    "start": "3593830",
    "end": "3600100"
  },
  {
    "text": "normal testing this is super important to point out a lot I've seen folks mmm",
    "start": "3600100",
    "end": "3606010"
  },
  {
    "text": "focusing on caves engineering and then they'd honestly support functional",
    "start": "3606010",
    "end": "3611350"
  },
  {
    "text": "testing all this kind of stuff it doesn't mean you have to have 100% coverage you know this hundred percent",
    "start": "3611350",
    "end": "3616810"
  },
  {
    "text": "but I think it's tools and things that definitely test and try different things",
    "start": "3616810",
    "end": "3622470"
  },
  {
    "text": "a new system will actually continue failing because that's just what it is",
    "start": "3622470",
    "end": "3629079"
  },
  {
    "text": "so the problem is a mostly cultural as I say it will often highlight a choice of",
    "start": "3629079",
    "end": "3634540"
  },
  {
    "text": "the bad framework or Pythian versus Ruby or C++ versus c-sharp or a Java versus",
    "start": "3634540",
    "end": "3641859"
  },
  {
    "text": "the rest of the world it's often like that but at the end of the day if you if you",
    "start": "3641859",
    "end": "3649060"
  },
  {
    "text": "are patient and if you work through culture is actually make sure that you don't blame people and that's what I",
    "start": "3649060",
    "end": "3656890"
  },
  {
    "text": "want to finish on I wouldn't be here myself if I wouldn't have a blameless",
    "start": "3656890",
    "end": "3662410"
  },
  {
    "text": "culture before joining AWS actually I clean database in production once a few times and cleaning means deleting and my",
    "start": "3662410",
    "end": "3672790"
  },
  {
    "text": "manager never ever blamed me you must say how this this happen that we could",
    "start": "3672790",
    "end": "3678970"
  },
  {
    "text": "run comments for deleting database in production and what kind of how can we prevent that and then we went into",
    "start": "3678970",
    "end": "3685119"
  },
  {
    "text": "building sets of tools to actually prevent doing these kind of things and this is how I started with chaos",
    "start": "3685119",
    "end": "3691359"
  },
  {
    "text": "engineering and building tools things around preventing problems versus",
    "start": "3691359",
    "end": "3697690"
  },
  {
    "text": "blaming the people doing those stuff because one day or another you look gonna do the mistake anyway so don't do",
    "start": "3697690",
    "end": "3704980"
  },
  {
    "text": "it thank you so much for your time hopefully inspire you to start or look a",
    "start": "3704980",
    "end": "3710859"
  },
  {
    "text": "bit further with with case engineering you can directly download these presentations with all the the links on",
    "start": "3710859",
    "end": "3718210"
  },
  {
    "text": "that one it's already uploaded there I should definitely have done a QR code but then your phone would have been",
    "start": "3718210",
    "end": "3724150"
  },
  {
    "text": "overloaded with the presentation and I'll push that on my Twitter account as well at the horn that link so that you",
    "start": "3724150",
    "end": "3730630"
  },
  {
    "text": "can also use the on Twitter and don't hesitate to contact me I'm happy to discuss about chaos resiliency and all",
    "start": "3730630",
    "end": "3736930"
  },
  {
    "text": "that stuff that's what I do for a living so thank you again",
    "start": "3736930",
    "end": "3742630"
  },
  {
    "text": "you",
    "start": "3742630",
    "end": "3744690"
  }
]