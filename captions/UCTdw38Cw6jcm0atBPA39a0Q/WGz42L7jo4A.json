[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "all right you're all very quiet and serious it's a",
    "start": "7319",
    "end": "14280"
  },
  {
    "text": "awesome welcome to the talk on o security I'm not sure if you're here for the topic or for the air conditioning",
    "start": "14280",
    "end": "20359"
  },
  {
    "text": "but uh I'm I'm going to take both so not now that you're here I'm going to teach you something about o security and uh if",
    "start": "20359",
    "end": "26160"
  },
  {
    "text": "you came for the air conditioning then well maybe you'll walk away with some interesting knowledge and for of course",
    "start": "26160",
    "end": "31279"
  },
  {
    "text": "people that chose to be here um you know what you're going to get and I'm going to do my best to deliver or meet your",
    "start": "31279",
    "end": "36800"
  },
  {
    "text": "expectations all right so um we have an hour uh I need the full hour so uh if",
    "start": "36800",
    "end": "43480"
  },
  {
    "start": "38000",
    "end": "142000"
  },
  {
    "text": "you're hoping to be out of here in 30 minutes um well you can but that's not kind of the way this is supposed to work",
    "start": "43480",
    "end": "49160"
  },
  {
    "text": "um we have a lot of ground to cover and we're going to talk about o security topics so uh I'm kind of guessing that",
    "start": "49160",
    "end": "54199"
  },
  {
    "text": "most of you are familiar with O2 um which has been around for like 12ish longer well officially around for 12",
    "start": "54199",
    "end": "60199"
  },
  {
    "text": "years uh and of course a bit longer when the spec was being developed um if you're doing o today you're following",
    "start": "60199",
    "end": "66560"
  },
  {
    "text": "best practices for O2 you're using things like pixie and the authorization code flow and of course you're aware of",
    "start": "66560",
    "end": "72920"
  },
  {
    "text": "um the changes that are there for front end clients and all of that stuff I'm not going to talk about any of those",
    "start": "72920",
    "end": "78200"
  },
  {
    "text": "best practices here today um the ti the talk is titled supercharging o security not just um meeting the Baseline",
    "start": "78200",
    "end": "84880"
  },
  {
    "text": "expectations for all security so we're going to talk about uh new stuff uh the people come coming in there's some seats",
    "start": "84880",
    "end": "90759"
  },
  {
    "text": "left so don't worry just uh run through the room and find your preferred place um we're going to talk about some",
    "start": "90759",
    "end": "97200"
  },
  {
    "text": "recently added things in O we're going to talk about things like resource indicators which is an older one we're",
    "start": "97200",
    "end": "102680"
  },
  {
    "text": "going to talk about uh jar uh not the Java thing but um a jot secured authorization request we're going to",
    "start": "102680",
    "end": "108680"
  },
  {
    "text": "talk about par and uh proof of possession tokens like fairly Advanced security features um some of which will",
    "start": "108680",
    "end": "115759"
  },
  {
    "text": "become the Baseline within the next months or years uh for sure others will",
    "start": "115759",
    "end": "120799"
  },
  {
    "text": "remain a bit more out there like if you really need a high security deployment these are things you might want to look",
    "start": "120799",
    "end": "126320"
  },
  {
    "text": "into no worries I'm going to explain everything as we go along before we do that I want to set like a a very brief",
    "start": "126320",
    "end": "132120"
  },
  {
    "text": "Baseline just in case you're not you're familiar with oad but maybe not exactly the dirty details because libraries",
    "start": "132120",
    "end": "138200"
  },
  {
    "text": "today handle a whole lot of that for you which is absolutely awesome so what I want to do before we dive in is set a",
    "start": "138200",
    "end": "144200"
  },
  {
    "start": "142000",
    "end": "389000"
  },
  {
    "text": "quick Baseline of the authorization code flow I'm going to start with a very high level overview um of what happens so",
    "start": "144200",
    "end": "150000"
  },
  {
    "text": "what basically happens is we have our o client in this case it's a backend application running on a server",
    "start": "150000",
    "end": "155400"
  },
  {
    "text": "somewhere uh we have an API that we would like to access with an access token and we have our authorization server or security token service sitting",
    "start": "155400",
    "end": "162760"
  },
  {
    "text": "right there in the middle as well so what's going to happen on a very high level um the back end the client oat client is going to run an oat flow one",
    "start": "162760",
    "end": "169560"
  },
  {
    "text": "way or another and is going to obtain an authorization code that's essentially step number one step number two is we're",
    "start": "169560",
    "end": "175239"
  },
  {
    "text": "going to exchange that authorization code for tokens and step three is we're going to use that token to access that",
    "start": "175239",
    "end": "180360"
  },
  {
    "text": "access token to access an API all right so if you've been doing o you know that this is the worst oversimplification you",
    "start": "180360",
    "end": "187480"
  },
  {
    "text": "can ever come up with as in this these three steps in reality they're like if",
    "start": "187480",
    "end": "193000"
  },
  {
    "text": "if I would split it out fully in a slide which I do in my more in-depth courses we would have like 15 different steps to",
    "start": "193000",
    "end": "199120"
  },
  {
    "text": "get that done and the bulk of the the meat is in step one here um that's where we have all of the interactions through",
    "start": "199120",
    "end": "205519"
  },
  {
    "text": "the front Channel and the redirects in the browser and so on and so on we're going to talk about these",
    "start": "205519",
    "end": "211920"
  },
  {
    "text": "details quite a bit today so what I do want to do here is I want to split it out just a little bit I show you a little bit more detail um while skipping",
    "start": "211920",
    "end": "219599"
  },
  {
    "text": "over certain aspects so for example I'm going to skip over pixie proof key for code exchange it's a best practice it's",
    "start": "219599",
    "end": "224720"
  },
  {
    "text": "something you should be doing um but seriously I would need at least 5 to 10 minutes to fully explain how to do this",
    "start": "224720",
    "end": "230920"
  },
  {
    "text": "correctly and it will create more confusion than it does good so I'm just going to omit it for brevity reasons not",
    "start": "230920",
    "end": "236000"
  },
  {
    "text": "for uh you shouldn't do this reasons so what's going to happen is at some point and we'll see that in one of the demos",
    "start": "236000",
    "end": "241760"
  },
  {
    "text": "the there's going to be a a start of the flow so the user typically is going to signal that they want something to happen they want to connect two accounts",
    "start": "241760",
    "end": "247799"
  },
  {
    "text": "or they want to uh maybe log in if you're doing oidc and OA together or whatever and that's basically going to",
    "start": "247799",
    "end": "253400"
  },
  {
    "text": "be the signal to start come in there's seats left so if you don't mind crawling up the stairs um we have fresh air",
    "start": "253400",
    "end": "259959"
  },
  {
    "text": "upstairs as well so that's awesome um so the user is going to initialize something and then we going to start a",
    "start": "259959",
    "end": "265639"
  },
  {
    "text": "flow so the O client is going to initialize the flow with the authorization request that's basically",
    "start": "265639",
    "end": "270720"
  },
  {
    "text": "step number two which is your traditional uh redirecting the browser to your security token service to your",
    "start": "270720",
    "end": "276120"
  },
  {
    "text": "authorization server uh to follow that request uh that's the request with all the flow configuration parameters and so",
    "start": "276120",
    "end": "281639"
  },
  {
    "text": "on and so on and that security token service if there's no active session going on doesn't know who you are it's",
    "start": "281639",
    "end": "286759"
  },
  {
    "text": "going to be like dude I I need some authentication who are you please can you log in so you get a login screen and",
    "start": "286759",
    "end": "292000"
  },
  {
    "text": "you log in with a username Philip and password uh the name of your dog for example that would be that's not my real",
    "start": "292000",
    "end": "297479"
  },
  {
    "text": "password by the way so don't try this on my account it's just an example my random number is always 17 by",
    "start": "297479",
    "end": "305160"
  },
  {
    "text": "the way so when I'm teaching with random numbers it's always 17 that's the user's IDE anyway the user authenticates the",
    "start": "305160",
    "end": "311400"
  },
  {
    "text": "authorization server is pretty happy it's like oh yeah we know Philip and yeah all of this makes sense and it's going to issue an authorization code",
    "start": "311400",
    "end": "316639"
  },
  {
    "text": "that's the redirect back calling the redirect URI on the client the browser is going to follow that which delivers",
    "start": "316639",
    "end": "322360"
  },
  {
    "text": "that redirect um that's authorization code to the client application all right Next Step the client is going to",
    "start": "322360",
    "end": "328039"
  },
  {
    "text": "exchange that code for tokens that's a back Channel request it's a fairly simple post call to the uh authorization",
    "start": "328039",
    "end": "333919"
  },
  {
    "text": "server uh with the authorization code and some other parameters including client authentication and the response",
    "start": "333919",
    "end": "339840"
  },
  {
    "text": "is going to be tokens uh typically an access token a refresh token maybe an identity token depends on what exactly",
    "start": "339840",
    "end": "346319"
  },
  {
    "text": "you running but in our case here today we're mainly interested in the access token for whatever use cases we're going",
    "start": "346319",
    "end": "352639"
  },
  {
    "text": "to talk about and with that access token we can access the API all right so that's essentially what this looks like",
    "start": "352639",
    "end": "358600"
  },
  {
    "text": "if you um if you want to make this a bit more nerdy I have some monospace fonts as well so this is the actual request",
    "start": "358600",
    "end": "364880"
  },
  {
    "text": "being sent in step two and three the authorization request which is kind of important because we'll talk about that",
    "start": "364880",
    "end": "370560"
  },
  {
    "text": "uh for the majority of the topics here today and you'll see that there's all of the different parameters there line to",
    "start": "370560",
    "end": "376000"
  },
  {
    "text": "response type code meaning we're running an authorization code flow we have a scope in there client ID redirect URI",
    "start": "376000",
    "end": "381440"
  },
  {
    "text": "and some pixie parameters as you can see right here all right that's essentially",
    "start": "381440",
    "end": "386479"
  },
  {
    "text": "uh what the authorization code flow looks like terminology wise if you're like yeah this is not really spec",
    "start": "386479",
    "end": "392479"
  },
  {
    "start": "389000",
    "end": "419000"
  },
  {
    "text": "compliant terminology you're absolutely correct good for you for reading the specification uh the real problem is I",
    "start": "392479",
    "end": "398160"
  },
  {
    "text": "do a lot of these presentations a lot of these talks and trainings and what I'm often struggling with is when you are",
    "start": "398160",
    "end": "403840"
  },
  {
    "text": "talking about o or open ID the terminology would change based on the spec and it's like a big mess so I've settled on this common set of",
    "start": "403840",
    "end": "410039"
  },
  {
    "text": "terminology which covers most use cases we see today uh but if you want to translate whatever I'm talking about back to the spec uh this slide will",
    "start": "410039",
    "end": "417319"
  },
  {
    "text": "provide you with that mapping all right so before we dive into the dirty details",
    "start": "417319",
    "end": "422360"
  },
  {
    "start": "419000",
    "end": "533000"
  },
  {
    "text": "small word about myself I'm Philip D I'm kind of a regular at NDC events um but my first time here in at the developer",
    "start": "422360",
    "end": "428919"
  },
  {
    "text": "Festival in Copenhagen so that's uh really awesome looks like a beautiful event here as well um and I hope you're",
    "start": "428919",
    "end": "434240"
  },
  {
    "text": "having a good time I'm a security expert from Belgium I did a PhD in web security",
    "start": "434240",
    "end": "439520"
  },
  {
    "text": "um like a long time ago uh really deep into crossy request forgery and such and today I run my own company called",
    "start": "439520",
    "end": "445759"
  },
  {
    "text": "pragmatic web security and that's a very deliberately chosen name I help companies f figure out security make",
    "start": "445759",
    "end": "450840"
  },
  {
    "text": "tradeoffs identify not the ultimate super best practice but the best",
    "start": "450840",
    "end": "456280"
  },
  {
    "text": "practice that works for their use case in their scenario and how they can make things work that's essentially how I",
    "start": "456280",
    "end": "461520"
  },
  {
    "text": "spent my time um I help developers with training like I did a conference Workshop here two days uh some of you",
    "start": "461520",
    "end": "467000"
  },
  {
    "text": "were at the workshop so they were not tired of hearing me speak so that's good good to see um I also do a lot of",
    "start": "467000",
    "end": "472960"
  },
  {
    "text": "In-House training online courses and so on and also expert Consulting so uh if you need help with o oidc",
    "start": "472960",
    "end": "480120"
  },
  {
    "text": "um especially figuring out how to do things in more complex scenarios you often end up with me so if that makes",
    "start": "480120",
    "end": "486039"
  },
  {
    "text": "sense um keep that in mind I'm a Google developer expert side note U this is an",
    "start": "486039",
    "end": "491120"
  },
  {
    "text": "outreach program from Google to recognize the work I've been doing in the community like talks and uh sheat sheets and articles uh so I don't work",
    "start": "491120",
    "end": "497720"
  },
  {
    "text": "for Google they just send me free swag every now and then and I mention them and that's kind of a symbiotic",
    "start": "497720",
    "end": "502919"
  },
  {
    "text": "relationship so I'm not complaining and then finally I organized SE upde which is a weekl long appsc course in Belgium",
    "start": "502919",
    "end": "510159"
  },
  {
    "text": "um so if you ever need a good reason to visit Belgium uh preferably on the dime of your EMP employer that's seup Dev so",
    "start": "510159",
    "end": "517360"
  },
  {
    "text": "uh runs in June next year so I take a look in like half a year at the program and see if you want to join Belgium in",
    "start": "517360",
    "end": "523560"
  },
  {
    "text": "June I can't promise good weather it's probably the same as here it's like either very bad or very good and we",
    "start": "523560",
    "end": "529080"
  },
  {
    "text": "don't really do in between in Belgium so uh very unpredictable as well if you want to grab a copy of the slides now or",
    "start": "529080",
    "end": "535519"
  },
  {
    "start": "533000",
    "end": "585000"
  },
  {
    "text": "later you can find that on my website it's not that hard to find the QR code is a direct link so I'm going to give",
    "start": "535519",
    "end": "541120"
  },
  {
    "text": "you a second to scan that uh while I'll prepare myself to dive into the dirty details of O security and of course if",
    "start": "541120",
    "end": "547279"
  },
  {
    "text": "you want to connect on LinkedIn later uh always high recommend it highly recommend it so you can stay up to date",
    "start": "547279",
    "end": "552320"
  },
  {
    "text": "with whatever I'm",
    "start": "552320",
    "end": "555360"
  },
  {
    "text": "doing all right always a good idea to just blindly scan QR codes in a security talk",
    "start": "559600",
    "end": "565480"
  },
  {
    "text": "so or on a restaurant table or whatever it's uh so we're throwing all these best practices you're like always be careful",
    "start": "565480",
    "end": "572200"
  },
  {
    "text": "with your whatever scan it and let's go but uh trust me it's fine no",
    "start": "572200",
    "end": "578320"
  },
  {
    "text": "worries all right enough laughing let's get a lot",
    "start": "578320",
    "end": "583560"
  },
  {
    "text": "more serious and let's talk about o Security First topic I have three main topics first topic is reducing the power",
    "start": "583560",
    "end": "589880"
  },
  {
    "start": "585000",
    "end": "962000"
  },
  {
    "text": "of access tokens and one of the challenges that we see there is very often when you start out with o out and",
    "start": "589880",
    "end": "595720"
  },
  {
    "text": "it's like a textbook example you have one client and one API and you're very it's like very logical and everything",
    "start": "595720",
    "end": "600920"
  },
  {
    "text": "works and then you deploy this in like a real world application or scenario and you start to have like a lot of clients",
    "start": "600920",
    "end": "606680"
  },
  {
    "text": "and a lot of apis and very often one client needs access to multiple apis that's a very common scenario what does",
    "start": "606680",
    "end": "612600"
  },
  {
    "text": "that mean concretely that means concretely that you probably have an access token with a lot of authority",
    "start": "612600",
    "end": "618000"
  },
  {
    "text": "like one access token that you've obtained from your STDs and it gives you access to like the reviews API if you",
    "start": "618000",
    "end": "623120"
  },
  {
    "text": "talk about restaurant reviews the restaurants API and maybe the admin API if you're an admin and like you have a",
    "start": "623120",
    "end": "628240"
  },
  {
    "text": "very very powerful access ACC token by itself maybe not the biggest problem except what happens when the",
    "start": "628240",
    "end": "635000"
  },
  {
    "text": "access token is compromised what happens if somebody gets a hold of that it's like oo this is valid on all these locations that might be a bit of a",
    "start": "635000",
    "end": "641560"
  },
  {
    "text": "problem especially in a high security deployment financial apis eal apps uh stuff like that that's probably not",
    "start": "641560",
    "end": "647800"
  },
  {
    "text": "something you want happening so what you often see in tokens depends a bit on the implementation some uh sdss they use",
    "start": "647800",
    "end": "653720"
  },
  {
    "text": "audiences specifically in their token so you have a list of audiences advertising basically where this token might be",
    "start": "653720",
    "end": "659560"
  },
  {
    "text": "valid it's like oh yeah you can use this for this and this and this interesting and if you don't have the audiences um",
    "start": "659560",
    "end": "664839"
  },
  {
    "text": "this is not necessarily spec compliant even though some implementations do it you also have the Scopes and Scopes very",
    "start": "664839",
    "end": "670800"
  },
  {
    "text": "often identify an API specifically and then a sub permission on the API so that scope list would also identify where you",
    "start": "670800",
    "end": "677639"
  },
  {
    "text": "can apply this access or use this access token what the authority is of this access token and then finally um in more",
    "start": "677639",
    "end": "683800"
  },
  {
    "text": "advanced use cases you might want to encrypt your access token so that nobody in the middle can even identify what's in there um and the API can decrypt that",
    "start": "683800",
    "end": "691920"
  },
  {
    "text": "but uh decryption works with a private key and doing that with three different apis for the same access token that",
    "start": "691920",
    "end": "697800"
  },
  {
    "text": "wouldn't really work well because the private key is supposed to be a secret and if you share a secret with three different applications it's not really a",
    "start": "697800",
    "end": "704000"
  },
  {
    "text": "secret it's like a shared variable but not a secret anymore so all of these um",
    "start": "704000",
    "end": "709279"
  },
  {
    "text": "challenges have led to the Inception of a new spec well new is relative like",
    "start": "709279",
    "end": "714440"
  },
  {
    "text": "four years ago it became a spec but fairly new spec um and that spec is called resource indicators and resource",
    "start": "714440",
    "end": "721160"
  },
  {
    "text": "indicators is a way for the client to make things better by requesting",
    "start": "721160",
    "end": "727920"
  },
  {
    "text": "individual access tokens per API so basically if you want to access two or three apis you're going to do some magic",
    "start": "727920",
    "end": "734120"
  },
  {
    "text": "in the O out flow which I'll talk about in a slide no worries do some magic and that allows you to say like now I want",
    "start": "734120",
    "end": "739880"
  },
  {
    "text": "an access token for API 1 and now I want one for API 2 and you get like two or three access tokens each with one",
    "start": "739880",
    "end": "745560"
  },
  {
    "text": "audience and that allows you to have minimum access Tok with minimal Authority also prevents abuse if one is",
    "start": "745560",
    "end": "752480"
  },
  {
    "text": "stolen prevents one API from using an access token and using it on a second API and so on so it makes things a lot",
    "start": "752480",
    "end": "758199"
  },
  {
    "text": "better in general all right so how does that work well um behind it's actually fairly straightforward behind the scenes",
    "start": "758199",
    "end": "764839"
  },
  {
    "text": "there's two major changes major change number one is when you initialize your request when you do the authorization",
    "start": "764839",
    "end": "770560"
  },
  {
    "text": "initialize your flow the authorization request you have to signal to the SS which resources you would like to access",
    "start": "770560",
    "end": "776480"
  },
  {
    "text": "which apis you would like to access and you do that by including resource parameters as you can see on line five",
    "start": "776480",
    "end": "782079"
  },
  {
    "text": "and six so you're basically saying like hey I'm this client and I would like to ask permission to access API with",
    "start": "782079",
    "end": "788360"
  },
  {
    "text": "reviews and API with restaurants in my restaurant review example and this allows the SDS to evaluate that request",
    "start": "788360",
    "end": "795160"
  },
  {
    "text": "for one it if there's user consent involved it allows them to pop up the consent dialogue saying like hey this",
    "start": "795160",
    "end": "800320"
  },
  {
    "text": "application would like to access reviews and restaurants on your behalf do you want that and so on and so on all right",
    "start": "800320",
    "end": "805839"
  },
  {
    "text": "that's major change number one second change this is not defining which access Tok we",
    "start": "805839",
    "end": "813320"
  },
  {
    "text": "will get this is just listing which author which what Authority we would like to request and now we have to ask",
    "start": "813320",
    "end": "819000"
  },
  {
    "text": "for a specific access token and that happens in this diagram on step uh eight like the the exchange of the",
    "start": "819000",
    "end": "825079"
  },
  {
    "text": "authorization code for tokens that's where the the client now signals like before I asked about some apis now I",
    "start": "825079",
    "end": "831240"
  },
  {
    "text": "would like to receive an access token for this specific API this particular one and again that's a resource",
    "start": "831240",
    "end": "836480"
  },
  {
    "text": "parameter that's a new one with resource indicators uh in line number seven we ask for this specific API all right and",
    "start": "836480",
    "end": "844040"
  },
  {
    "text": "that's essentially um tells the STS like it's going to issue an access token and it's going to use only this single",
    "start": "844040",
    "end": "850160"
  },
  {
    "text": "audience as the audience of that access token so if you look at the actual access token um you will now see in the",
    "start": "850160",
    "end": "857040"
  },
  {
    "text": "access token there's some claims uh I've not listed them all but you will find that there's now an audience claim which",
    "start": "857040",
    "end": "862240"
  },
  {
    "text": "used before was like custom implementation of spec now there's a spec that defines the audience claim and",
    "start": "862240",
    "end": "867639"
  },
  {
    "text": "it has a single value specific target audience which reduces the authority of",
    "start": "867639",
    "end": "873079"
  },
  {
    "text": "the access token and also ensures that if you want to encrypt it you encrypt it so that only the review API would now be",
    "start": "873079",
    "end": "879360"
  },
  {
    "text": "able to decrypt it and you include the subject in there as well and the Scopes are there as well just like in any",
    "start": "879360",
    "end": "885079"
  },
  {
    "text": "regular o flow except that the SDS has now applied down scoping as in if you it",
    "start": "885079",
    "end": "890480"
  },
  {
    "text": "wouldn't make sense to include scopes for different apis because Scopes are linked to an audience typically in the configuration so now it only includes",
    "start": "890480",
    "end": "897360"
  },
  {
    "text": "the relevant scopes for this particular API AP all right problem we asked in the beginning",
    "start": "897360",
    "end": "905759"
  },
  {
    "text": "for two apis and we only have an access token for one API we can't exchange the authorization code again because that's",
    "start": "905759",
    "end": "911519"
  },
  {
    "text": "not how things are supposed to work you're only supposed to do that once but the next token can be requested with a",
    "start": "911519",
    "end": "917600"
  },
  {
    "text": "refresh token so if you also get a refresh token well you should also get a refresh token in this case and now you",
    "start": "917600",
    "end": "922720"
  },
  {
    "text": "can run a refresh token flow and in that refresh token flow you can include another resource parameter and saying",
    "start": "922720",
    "end": "928040"
  },
  {
    "text": "like I would now like to request an access token for the other API and the SDS will evaluate that request issue a",
    "start": "928040",
    "end": "933519"
  },
  {
    "text": "new access token with again a specific target audience and so on and so on and",
    "start": "933519",
    "end": "938600"
  },
  {
    "text": "that is in a nutshell what resource indicators uh brings to the table I know",
    "start": "938600",
    "end": "943959"
  },
  {
    "text": "I'm not going well I'm trying to give you as much detail as possible all of this is from the perspective of a",
    "start": "943959",
    "end": "949800"
  },
  {
    "text": "developer by the way because those are the people that need to use this so um we can talk about the implementation",
    "start": "949800",
    "end": "956040"
  },
  {
    "text": "details on the SCS side but that would be for after the talk uh during one of the breaks because we can't go into that",
    "start": "956040",
    "end": "961360"
  },
  {
    "text": "much detail good so resource indicators um really useful spec especially if you have uh an architecture where clients",
    "start": "961360",
    "end": "968639"
  },
  {
    "start": "962000",
    "end": "1007000"
  },
  {
    "text": "need to access multiple apis um it probably makes if you look at the security of that system it probably makes you a little bit uneasy that you",
    "start": "968639",
    "end": "975000"
  },
  {
    "text": "have like these super powerful access tokens and this is something that can definitely help in reducing the",
    "start": "975000",
    "end": "980040"
  },
  {
    "text": "authority of those access tokens all right proof of possession is even better but we'll talk about that towards the",
    "start": "980040",
    "end": "986560"
  },
  {
    "text": "end of this session good one topic down that's uh awesome we",
    "start": "986560",
    "end": "992360"
  },
  {
    "text": "have two more to go but it's going to get like credly more complex uh so hopefully you'll bear with me uh as we",
    "start": "992360",
    "end": "999440"
  },
  {
    "text": "go",
    "start": "999440",
    "end": "1001600"
  },
  {
    "text": "along topic number two securing the authorization request all right that",
    "start": "1006639",
    "end": "1012399"
  },
  {
    "start": "1007000",
    "end": "1514000"
  },
  {
    "text": "request with all the parameters there's some issues with that so if you look at the O outlow in general here's here's",
    "start": "1012399",
    "end": "1018519"
  },
  {
    "text": "that again but if you look at an o outflow in general and you look at the evolution that has um happened in the",
    "start": "1018519",
    "end": "1025120"
  },
  {
    "text": "last like 8 to 10 years and you'll see that it has evolved quite a bit like we",
    "start": "1025120",
    "end": "1030400"
  },
  {
    "text": "have deprecated um some flows like the implicit flow like yeah stuff going through the front Channel we don't",
    "start": "1030400",
    "end": "1036120"
  },
  {
    "text": "really trust it so just use the authorization code instead that's a lot better uh and cleaner and we have added",
    "start": "1036120",
    "end": "1042798"
  },
  {
    "text": "pixie to the flow to ensure we can protect the flow Integrity like pixie helps to ensure that uh the flow can't",
    "start": "1042799",
    "end": "1048640"
  },
  {
    "text": "be interrupted and continued somewhere else and so on then we have the authorization code has always been well protected like one time use only short",
    "start": "1048640",
    "end": "1055039"
  },
  {
    "text": "lift and so on and so on and in all that story and all that whole story we kind of ignored well ignored is a big word",
    "start": "1055039",
    "end": "1061320"
  },
  {
    "text": "but um I'm not sure if it's fair to say it that way but security of the",
    "start": "1061320",
    "end": "1066960"
  },
  {
    "text": "authorization request has been neglected let's put it like that um it's always been something that has been there that",
    "start": "1066960",
    "end": "1072120"
  },
  {
    "text": "we never really liked but it is what it is and um it never really got to the point of being more secure so what that",
    "start": "1072120",
    "end": "1079559"
  },
  {
    "text": "basically means is this app two and three where we initialize the flow in all of these parameters um we have cases",
    "start": "1079559",
    "end": "1084880"
  },
  {
    "text": "where the attacker can temperate those imagine that you're a malicious user and I'm building the app and I'm sending",
    "start": "1084880",
    "end": "1090880"
  },
  {
    "text": "that authorization request through your browser Nothing Stops you from saying like hold on I'm not going to follow",
    "start": "1090880",
    "end": "1096000"
  },
  {
    "text": "that redirect to like burp makes this super easy I'm going to stop that redirect in my browser I'm going to look",
    "start": "1096000",
    "end": "1101720"
  },
  {
    "text": "at that and maybe I'll change some parameters maybe I'll ask for more Scopes maybe I'll change the redirect your ey maybe I'll remove pixie and see",
    "start": "1101720",
    "end": "1108919"
  },
  {
    "text": "what happens and this basically allows an attacker a malicious user to violate",
    "start": "1108919",
    "end": "1114039"
  },
  {
    "text": "the Integrity of the flow this is not earth shocking news this is not like a new revelation of an",
    "start": "1114039",
    "end": "1120440"
  },
  {
    "text": "attack against o this is something that has been on the agenda for like uh four five years uh definitely um where the",
    "start": "1120440",
    "end": "1127799"
  },
  {
    "text": "oart security best practices which um is almost an RFC if I'm not mistaken um",
    "start": "1127799",
    "end": "1134000"
  },
  {
    "text": "already highlights some of the dangers here so we see specific guidance in that documents saying uh things like yeah",
    "start": "1134000",
    "end": "1141400"
  },
  {
    "text": "attackers can abuse the redirect your ey you should only do exact matching because if you have like patterns with wild card somebody can give you a",
    "start": "1141400",
    "end": "1147679"
  },
  {
    "text": "malicious URI and then the authorization code goes to the wrong place and so on and so on um that's something what an",
    "start": "1147679",
    "end": "1153679"
  },
  {
    "text": "attacker can manipulate when they see traffic in the browser when they intercept the URI and so on and so on",
    "start": "1153679",
    "end": "1159120"
  },
  {
    "text": "also you'll find things like a pixie downgrade attack listed there um which is basically where the attacker tries to",
    "start": "1159120",
    "end": "1165640"
  },
  {
    "text": "not use pixie even though the client wants to and that would allow them to launch other very complicated attacks",
    "start": "1165640",
    "end": "1170919"
  },
  {
    "text": "and so on now these things are like security considerations so roughly",
    "start": "1170919",
    "end": "1177320"
  },
  {
    "text": "speaking that means somebody was sitting behind the computer and thinking like what can go wrong and they wrote something out in the spec and so on and",
    "start": "1177320",
    "end": "1182520"
  },
  {
    "text": "so on but you also see these in in practice like these are based on real world attack scenarios and you see",
    "start": "1182520",
    "end": "1188159"
  },
  {
    "text": "vulnerabilities in products like keycloak not a dig at keycloak in any way just a simple example of how they",
    "start": "1188159",
    "end": "1194240"
  },
  {
    "text": "had that redirect uh validation vulnerability in their product all right",
    "start": "1194240",
    "end": "1199640"
  },
  {
    "text": "so this is definitely something we have to worry about if you want a seat if you want to stand up that's very healthy so",
    "start": "1199640",
    "end": "1206760"
  },
  {
    "text": "by all means do that if you want a seat we have some seats available as well so don't don't worry about disturbing just come in and enjoy the rest of the talk",
    "start": "1206760",
    "end": "1214400"
  },
  {
    "text": "all right so the authorization request what can we do to secure this two options jar and Par and this",
    "start": "1214400",
    "end": "1222200"
  },
  {
    "text": "sounds like a Star Wars thing but it trust me it's going to be about o all of these re abbreviations jar is about jot",
    "start": "1222200",
    "end": "1229400"
  },
  {
    "text": "secured authorization request all right which is a very very complicated term but if you translate",
    "start": "1229400",
    "end": "1236240"
  },
  {
    "text": "that it's like instead of putting all of these parameters in the URI what if we put them in a",
    "start": "1236240",
    "end": "1241960"
  },
  {
    "text": "jot which may trigger the reactions like seriously another jot like do we really need that but one of the benefits of a",
    "start": "1241960",
    "end": "1248760"
  },
  {
    "text": "jot is that it's signed the client can sign the jot and if the client signs the jot nobody else can change one of the",
    "start": "1248760",
    "end": "1255280"
  },
  {
    "text": "parameters because then the signature becomes invalid and now now we can protect our parameters prevent tempering",
    "start": "1255280",
    "end": "1261760"
  },
  {
    "text": "especially from someone in the front Channel Once the URI leaves the back end and is transfer to the the STS the",
    "start": "1261760",
    "end": "1268360"
  },
  {
    "text": "authorization server somebody can temper with that but not if it's a jot how does that work well it's",
    "start": "1268360",
    "end": "1275440"
  },
  {
    "text": "actually not that hard here's the updated flow the things in green have been modified so it's only",
    "start": "1275440",
    "end": "1282760"
  },
  {
    "text": "three modifications fairly straightforward uh step one uh or modification one step two is the client",
    "start": "1282760",
    "end": "1289880"
  },
  {
    "text": "now generates a Json web token with all the flow parameters that's essentially what's going on the client is basically",
    "start": "1289880",
    "end": "1295840"
  },
  {
    "text": "going to be like you know what I'm going to generate a jot and put all of my flow parameters in there and I'm going to",
    "start": "1295840",
    "end": "1301159"
  },
  {
    "text": "sign that and the client is going to send that jot in the URI to the SDS so the URI is now changed instead of all",
    "start": "1301159",
    "end": "1307679"
  },
  {
    "text": "the parameters it contains two parameters a client ID and a jot and it goes to the SDS and the SDS will verify",
    "start": "1307679",
    "end": "1314480"
  },
  {
    "text": "that signature um of that job and then looks up the claims and it's like oh or you want to run that flow that's",
    "start": "1314480",
    "end": "1320120"
  },
  {
    "text": "basically what happens in practice and this is um a very very good way to",
    "start": "1320120",
    "end": "1326000"
  },
  {
    "text": "address these issues so what does it look like in practice here's a step uh the the authorization uh request",
    "start": "1326000",
    "end": "1332360"
  },
  {
    "text": "basically and you see that we now have a client ID in there which is kind of mandatory in O flow so that's why it's",
    "start": "1332360",
    "end": "1338600"
  },
  {
    "text": "there otherwise we could even skip that but it has to be there and we have a request there and the request is the jot",
    "start": "1338600",
    "end": "1344760"
  },
  {
    "text": "it's a configuration of the flow encoded as a Json web token signed by the client of course to make this happen uh you",
    "start": "1344760",
    "end": "1351440"
  },
  {
    "text": "also need to set up key configurations so the client needs to have a private key which you register with a security",
    "start": "1351440",
    "end": "1356960"
  },
  {
    "text": "token service so somewhere in the configuration you have to say like here's the client's public key it's a",
    "start": "1356960",
    "end": "1362120"
  },
  {
    "text": "bit messier than a client secret it's also a lot more secure because you can now also use key based client",
    "start": "1362120",
    "end": "1367320"
  },
  {
    "text": "authentication which is kind of a recommended best practice uh anyway that we're not going to talk about here today so if you already have key based client",
    "start": "1367320",
    "end": "1374200"
  },
  {
    "text": "authentication then setting up this is super straightforward all right",
    "start": "1374200",
    "end": "1380159"
  },
  {
    "text": "awesome benefit here the job is signed and prevents tampering",
    "start": "1380159",
    "end": "1389159"
  },
  {
    "text": "with parameters very very important all right so what's in the chot um that might be very interesting as well um the",
    "start": "1389159",
    "end": "1396360"
  },
  {
    "text": "way you can recognize a jot by the way a jot has three parts with dots in between so if you look closely you'll find some dots in here and it's basically foreign",
    "start": "1396360",
    "end": "1403600"
  },
  {
    "text": "coded each part and just a small trick if you want to recognize Basics foreign coding look for the EJ whenever you see",
    "start": "1403600",
    "end": "1409640"
  },
  {
    "text": "e y and then capital J in a string that's the E b64 encoding for the curly brackets with a new line it's like ahuh",
    "start": "1409640",
    "end": "1415799"
  },
  {
    "text": "bam uh so whatever you find with EJ throw it in a base 64 decoder and Magic happens and you find something like this",
    "start": "1415799",
    "end": "1422799"
  },
  {
    "text": "so the jot is well defined in the spec um it has a header with some claims and",
    "start": "1422799",
    "end": "1428039"
  },
  {
    "text": "it has a payload with very familiar claims because the the claims of the",
    "start": "1428039",
    "end": "1433120"
  },
  {
    "text": "payload are basically our flow configuration parameters that we previously put in the URL like literally",
    "start": "1433120",
    "end": "1438200"
  },
  {
    "text": "all all of them take it from the URL drop it in as jot claims and off you go so very concretely what we have there is",
    "start": "1438200",
    "end": "1444919"
  },
  {
    "text": "we have an issuer and an audience these are jot specific claims that were not in the URL um it's basically a good way to",
    "start": "1444919",
    "end": "1451440"
  },
  {
    "text": "prevent somebody from misusing this jot in other places so it basically says the issuer is the client that's a client ID",
    "start": "1451440",
    "end": "1458000"
  },
  {
    "text": "and the audience is our authorization server SDS all right next up we have our",
    "start": "1458000",
    "end": "1463360"
  },
  {
    "text": "client ID is in the jot as well must match the client ID that we put in the URL for obvious Reas reasons but it's a",
    "start": "1463360",
    "end": "1469399"
  },
  {
    "text": "very important check to do and then we have all of the other parameters that we used in the request url url um including",
    "start": "1469399",
    "end": "1475720"
  },
  {
    "text": "potentially resource parameters if you're using resource indicators as well anything you would have put in url you now put in this object the header very",
    "start": "1475720",
    "end": "1483799"
  },
  {
    "text": "specific as well follows job best practices like a specific type for the header uh which is O out outs Rec plus",
    "start": "1483799",
    "end": "1489919"
  },
  {
    "text": "JWT it's registered so it's not something I made up it's something that the spec defines and has registered as a",
    "start": "1489919",
    "end": "1495720"
  },
  {
    "text": "known type and then we provide a key in case the client has multiple Keys uh the SDS can use this key ID to find the",
    "start": "1495720",
    "end": "1502440"
  },
  {
    "text": "right key to verify the signature uh on this specific object all right awesome",
    "start": "1502440",
    "end": "1509880"
  },
  {
    "text": "right well I I think this is pretty cool things are going well so um time to",
    "start": "1509880",
    "end": "1517279"
  },
  {
    "start": "1514000",
    "end": "1794000"
  },
  {
    "text": "challenge this and try to do a live demo U this is always where things blow up so um if they blow up my apologies um this",
    "start": "1517279",
    "end": "1524360"
  },
  {
    "text": "is not intentional I do my best to not have that happen but guess what sometimes it's happens so um let's stem",
    "start": "1524360",
    "end": "1529960"
  },
  {
    "text": "the demo gods and see if we can look at jar in action before we do that small thing",
    "start": "1529960",
    "end": "1537840"
  },
  {
    "text": "about expectation management this is not going to be the world's most exciting demo just just so you know we're going",
    "start": "1537840",
    "end": "1544240"
  },
  {
    "text": "to be running an O out flow it's going to be very very non interesting um but I'm going to try and show you jar in",
    "start": "1544240",
    "end": "1550200"
  },
  {
    "text": "action and also show you um how you might Implement that in your application so what we have here is we have a very",
    "start": "1550200",
    "end": "1557520"
  },
  {
    "text": "simple demo uh with a noj has back end and what we're going to do is we're going to Louch an O outflow like I showed you on the slides right and if I",
    "start": "1557520",
    "end": "1564559"
  },
  {
    "text": "click on this um it will take me to the login page I'm going to use identity server as an example because um you can",
    "start": "1564559",
    "end": "1571039"
  },
  {
    "text": "use it for free for testing it's pretty good it has all of these features um and it runs locally so it checks all the",
    "start": "1571039",
    "end": "1576919"
  },
  {
    "text": "boxes for demos so it takes us here we can log in as Bob um with a very secure",
    "start": "1576919",
    "end": "1582360"
  },
  {
    "text": "password I'm going to let you guess what that one is um and then we can go uh we come back to the application and nothing",
    "start": "1582360",
    "end": "1588799"
  },
  {
    "text": "happens basically all right um by Design I must add so behind the",
    "start": "1588799",
    "end": "1596080"
  },
  {
    "text": "scenes here's the the terminal um of what's going on it you see some a little bit more output we're nerds at all so",
    "start": "1596080",
    "end": "1602360"
  },
  {
    "text": "this is good enough s UI uh you see the redirect going on here this is a traditional authorization code flow",
    "start": "1602360",
    "end": "1608440"
  },
  {
    "text": "right this is just an authorization request with all the parameters in the URL um we well we run this one we have",
    "start": "1608440",
    "end": "1615200"
  },
  {
    "text": "received and validated tokens um and you can see there's an ID token access token whatever is going on all",
    "start": "1615200",
    "end": "1620840"
  },
  {
    "text": "right we can also see this in the browser um somewhere let me see if we",
    "start": "1620840",
    "end": "1626600"
  },
  {
    "text": "can find that right here is the authorization request and you can see that this is basically our traditional",
    "start": "1626600",
    "end": "1633000"
  },
  {
    "text": "authorization code for let's change that um by implementing jar um I'm not crazy",
    "start": "1633000",
    "end": "1639440"
  },
  {
    "text": "so I'm going to do Live Well I'm going to do some live coding so bear with me I'm going to comment this and uncomment",
    "start": "1639440",
    "end": "1645679"
  },
  {
    "text": "that so that that's as far as I go with live coding so authorization code flow with jar um I've",
    "start": "1645679",
    "end": "1651279"
  },
  {
    "text": "done all the work uh up front so what we're basically going to do is we are going to use a library I'm going to use",
    "start": "1651279",
    "end": "1657080"
  },
  {
    "text": "uh open ID client for um nodejs which is actually quite good um it has some",
    "start": "1657080",
    "end": "1663640"
  },
  {
    "text": "quirks I don't like necessarily but it implements jar and Par for that matter and it's actually quite a decent Library",
    "start": "1663640",
    "end": "1669919"
  },
  {
    "text": "so what are we doing here well with jar we are creating a request object that's",
    "start": "1669919",
    "end": "1675440"
  },
  {
    "text": "the the bulk of it we're putting all of our parameters in that request object just like we previously would have U",
    "start": "1675440",
    "end": "1680679"
  },
  {
    "text": "done for our URI so we include some Scopes the redirect URI the code pixie",
    "start": "1680679",
    "end": "1685919"
  },
  {
    "text": "stuff and so on and so on and then um we're going to use the create the authorization URL I'm going to do some",
    "start": "1685919",
    "end": "1691840"
  },
  {
    "text": "line wrapping here authorization URL this is a manual operation the library can do it for you but um it also keeps",
    "start": "1691840",
    "end": "1698519"
  },
  {
    "text": "all the other parameters in the flow and I I don't think it's clean I don't think it's pretty uh so I prefer to only have",
    "start": "1698519",
    "end": "1703880"
  },
  {
    "text": "the two parameters that we need the client ID and the request object so you can see here we add add the client ID",
    "start": "1703880",
    "end": "1709559"
  },
  {
    "text": "right here and we add the request object right here that's it so let me save this and let's run the example",
    "start": "1709559",
    "end": "1717039"
  },
  {
    "text": "again clear of course we're not going to have to log in here because we we are still",
    "start": "1717039",
    "end": "1722640"
  },
  {
    "text": "Bob um but you can now see that our request URL is changed now we have a",
    "start": "1722640",
    "end": "1727960"
  },
  {
    "text": "client ID parameter and we have a request parameter and this is the jot right here so let's see if we can",
    "start": "1727960",
    "end": "1733200"
  },
  {
    "text": "actually grab this and decode this no",
    "start": "1733200",
    "end": "1739600"
  },
  {
    "text": "that's why I don't do live demos I mean who here uses this",
    "start": "1739600",
    "end": "1745600"
  },
  {
    "text": "website yeah they're reworking it they're going to change it um there's",
    "start": "1745600",
    "end": "1751080"
  },
  {
    "text": "like this warning I saw this uh last week I was like what um so I hope that they know what they're doing and not",
    "start": "1751080",
    "end": "1756200"
  },
  {
    "text": "killing their Golden Goose but we'll see how that goes but yeah this this website",
    "start": "1756200",
    "end": "1761519"
  },
  {
    "text": "must see insane traffic by the way uh here's the the details you can see that this is now um the type is right there",
    "start": "1761519",
    "end": "1767440"
  },
  {
    "text": "the the type and then all the parameters are there in the jot and this is basically how jar works the um the SDS",
    "start": "1767440",
    "end": "1774440"
  },
  {
    "text": "the identity server instance is configured with a public key of the client so it can verify this jot and so on and so on and that's basically how",
    "start": "1774440",
    "end": "1780760"
  },
  {
    "text": "you use jar as you can see it's not a very heavy lift um it only changes something in the client where you start",
    "start": "1780760",
    "end": "1786240"
  },
  {
    "text": "a flow and that's it all right",
    "start": "1786240",
    "end": "1793519"
  },
  {
    "text": "good brings us to a takeaway using char jar is actually really good um it solves",
    "start": "1793760",
    "end": "1801120"
  },
  {
    "start": "1794000",
    "end": "1826000"
  },
  {
    "text": "a very specific problem that is bit of a silly problem to have as in we've done so much to secure o out flows than",
    "start": "1801120",
    "end": "1808679"
  },
  {
    "text": "having this unprotected these unprotected parameters just there for tempering in high sensitive applications",
    "start": "1808679",
    "end": "1814799"
  },
  {
    "text": "doesn't really make much sense and that's why jar has been added to eliminate this insecurity all right now",
    "start": "1814799",
    "end": "1822159"
  },
  {
    "text": "that I've explained jar and that you have captured everything I'm going to talk about bar which kind of makes are",
    "start": "1822159",
    "end": "1828240"
  },
  {
    "start": "1826000",
    "end": "1979000"
  },
  {
    "text": "irrelevant so sorry for wasting 15 minutes of your time um no that's not true um no it is",
    "start": "1828240",
    "end": "1836760"
  },
  {
    "text": "true but jar has its its uses and jar is very useful but I would say if you can you",
    "start": "1836760",
    "end": "1844120"
  },
  {
    "text": "probably want to use par instead because par is even better like if you think that jar is awesome you're going to be like whoa par is even better awesome so",
    "start": "1844120",
    "end": "1851760"
  },
  {
    "text": "uh what is barar really about pushed authorization request barar has",
    "start": "1851760",
    "end": "1858360"
  },
  {
    "text": "a lot more impact on the flow so much that I have to redo the entire flow with par enabled um again I'm going to skip",
    "start": "1858360",
    "end": "1864440"
  },
  {
    "text": "pixie but I'm going to try and explain how par Works in par we're going to not send anything in the front Channel or",
    "start": "1864440",
    "end": "1871559"
  },
  {
    "text": "almost not anything like not even a signed object just nothing except an ID",
    "start": "1871559",
    "end": "1877320"
  },
  {
    "text": "we're going to tell the SS like we're going to run the flow with ID 17 please and SS is like okay of course we do and",
    "start": "1877320",
    "end": "1883399"
  },
  {
    "text": "that's how it works how do we do that well we do that by pushing our a authorization request like our",
    "start": "1883399",
    "end": "1889039"
  },
  {
    "text": "configuration of the flow to the STS before we start so the user is like hey I would run an O flow and O client is",
    "start": "1889039",
    "end": "1895399"
  },
  {
    "text": "like yeah that's good for me I'm going to tell the SCS what I want to do so this is a new type of request a power",
    "start": "1895399",
    "end": "1902320"
  },
  {
    "text": "request and we're basically pushing our entire configuration to the SS saying like hey in about two seconds I'm going",
    "start": "1902320",
    "end": "1908000"
  },
  {
    "text": "to be running an O flow with this configuration and so on and so on by the way I'm this client um what do you think",
    "start": "1908000",
    "end": "1913120"
  },
  {
    "text": "about that and SDS will evaluate that and make sure everything makes sense and checks out and so on and on and if",
    "start": "1913120",
    "end": "1918760"
  },
  {
    "text": "everything checks out it gives us a identifier a par ID come in there's some",
    "start": "1918760",
    "end": "1925039"
  },
  {
    "text": "seats at the top so just use your elbows to find some place and uh you should be should be all good so um what we have",
    "start": "1925039",
    "end": "1932360"
  },
  {
    "text": "here is we have a par ID given to the client and that par ID is what we will include in the authorization request so",
    "start": "1932360",
    "end": "1940880"
  },
  {
    "text": "basically what we're doing is we're telling the STS like Hey we're going to run a flow and we're going to use this ID of the configuration that we gave you",
    "start": "1940880",
    "end": "1947200"
  },
  {
    "text": "earlier and the Brower is going to follow that redirect the STS will look up what this ID is like oh yeah this",
    "start": "1947200",
    "end": "1953320"
  },
  {
    "text": "flow configuration and runs the flow as normal like who are you please authenticate yeah my username is Bob Bob",
    "start": "1953320",
    "end": "1959120"
  },
  {
    "text": "uh password Bob and off we go and then we get an authorization code and now everything runs as normal just an",
    "start": "1959120",
    "end": "1964440"
  },
  {
    "text": "authorization code we exchange the code for tokens and we handle the tokens however we see fit for whatever we're",
    "start": "1964440",
    "end": "1969880"
  },
  {
    "text": "trying to do that's bar the green ones are the modifications in this flow what",
    "start": "1969880",
    "end": "1976559"
  },
  {
    "text": "does this look like well we have a new request we have a par request now and that goes to a new endpoint the par",
    "start": "1976559",
    "end": "1982760"
  },
  {
    "start": "1979000",
    "end": "2178000"
  },
  {
    "text": "endpoint so an STS that supports this will have a par endpoint it's going to be listed in the discovery file so if",
    "start": "1982760",
    "end": "1988480"
  },
  {
    "text": "you load a discovery there going to be like par endpoint and Par support and so on and so on and now you push you send a",
    "start": "1988480",
    "end": "1994480"
  },
  {
    "text": "post request there back Channel communication with your flow configuration all right just like",
    "start": "1994480",
    "end": "1999880"
  },
  {
    "text": "everything that you would send before you now send to that par endpoint including a client secret or a",
    "start": "1999880",
    "end": "2007320"
  },
  {
    "text": "sign the Inson or however your client authenticates this is an authenticated endpoint which basically means that the",
    "start": "2007320",
    "end": "2013200"
  },
  {
    "text": "SDS can up front verify who the client is verify if everything here is valid",
    "start": "2013200",
    "end": "2018480"
  },
  {
    "text": "and if the client is like asking by the way I'm going to try to access the admin API as is like the hell you are then it",
    "start": "2018480",
    "end": "2024399"
  },
  {
    "text": "can at this point can already say like go away no no par ID for you bad client 400 uh something something and U the",
    "start": "2024399",
    "end": "2031200"
  },
  {
    "text": "client goes away doesn't get a par ID and can't launch a flow that's basically how par Works what's the response resp",
    "start": "2031200",
    "end": "2038559"
  },
  {
    "text": "if everything checks out and you do get a par ID you get a simple response it's ajacent response with a request URI",
    "start": "2038559",
    "end": "2045679"
  },
  {
    "text": "which is a very complicated way of sending an ID it's a UR blah blah blah with a specific ID so the first part is",
    "start": "2045679",
    "end": "2051960"
  },
  {
    "text": "like static junk uh because of rfc's and then the last part is the actual ID",
    "start": "2051960",
    "end": "2057118"
  },
  {
    "text": "generated by the SDS there's an expiration time which is 60 seconds which should be enough for any client to",
    "start": "2057119",
    "end": "2064040"
  },
  {
    "text": "figure out how to start an actual o outflow and follow the redirect of course if you're dealing with like super slow clients you can make this a bit",
    "start": "2064040",
    "end": "2071000"
  },
  {
    "text": "longer but there's really no reason to do that and that's essentially um how the first interaction works the power",
    "start": "2071000",
    "end": "2077158"
  },
  {
    "text": "request and Par response Next Step run the actual flow there's two parameters",
    "start": "2077159",
    "end": "2082240"
  },
  {
    "text": "I'm going to let you guess there's theid client ID yes well it's there",
    "start": "2082240",
    "end": "2088679"
  },
  {
    "text": "already and the request duri all right good I wasn't actually expecting a",
    "start": "2088679",
    "end": "2093878"
  },
  {
    "text": "response because we're like in scan close to Scandinavia and people do not interact in Scandinavia so the higher",
    "start": "2093879",
    "end": "2099640"
  },
  {
    "text": "Nord you go the quieter the room gets and teaching a workshop is always very interesting because it's like what do",
    "start": "2099640",
    "end": "2105359"
  },
  {
    "text": "you think about this everybody's like if you pull hard enough uh it works",
    "start": "2105359",
    "end": "2110599"
  },
  {
    "text": "so thank you for playing along absolutely appreciate it so the client ID is there because it has to be there",
    "start": "2110599",
    "end": "2116280"
  },
  {
    "text": "or about specific reasons and then the request U containing that par ID is there as well and that's essentially how",
    "start": "2116280",
    "end": "2121560"
  },
  {
    "text": "we launch the flow and that's how things have changed and this is a change for",
    "start": "2121560",
    "end": "2127359"
  },
  {
    "text": "the best by the way this removes any sensitive information going through the front Channel even in a signed version",
    "start": "2127359",
    "end": "2133599"
  },
  {
    "text": "nothing there's no attack Factor left the only thing the attacker can do is maybe inject a different par ID but even",
    "start": "2133599",
    "end": "2140480"
  },
  {
    "text": "that is not really going to work well in practice and with a shortness of these bar IDs um it's there's not much viable",
    "start": "2140480",
    "end": "2147760"
  },
  {
    "text": "attack factors left so this is really good and I'm going to give you a",
    "start": "2147760",
    "end": "2153920"
  },
  {
    "text": "demo crap now I have enabled the interactive mode so and",
    "start": "2153920",
    "end": "2159640"
  },
  {
    "text": "um I I wasn't going to discourage you maybe maybe I was no uh let's do questions at the end all right I'll",
    "start": "2161839",
    "end": "2168200"
  },
  {
    "text": "promise to try and finish five minutes before the end and then we'll do questions as much as you",
    "start": "2168200",
    "end": "2173520"
  },
  {
    "text": "want all right bar demo hold on because this is going to be",
    "start": "2173520",
    "end": "2179839"
  },
  {
    "start": "2178000",
    "end": "2399000"
  },
  {
    "text": "super awesome um we're going to comment our jar line and uncomment our par line and of",
    "start": "2179839",
    "end": "2187760"
  },
  {
    "text": "go so what do we do in the par function um the library handles most of this for",
    "start": "2187760",
    "end": "2193640"
  },
  {
    "text": "us this is actually really awesome I didn't even have to send a request to push the authorization authorization configuration I was like whatever the",
    "start": "2193640",
    "end": "2199760"
  },
  {
    "text": "library handles bar so we do client pushed authorization request provide some parameters uh the client sends the",
    "start": "2199760",
    "end": "2205359"
  },
  {
    "text": "request gives us a response tells us what the response is and now we can include the client uh the request URI",
    "start": "2205359",
    "end": "2212200"
  },
  {
    "text": "right here in the URL along with the client ID again you can ask the URL from the library it does include all the",
    "start": "2212200",
    "end": "2218599"
  },
  {
    "text": "other parameters still in the URL um I don't think it's very pretty um I told",
    "start": "2218599",
    "end": "2223760"
  },
  {
    "text": "the author and he was like yeah I know but for practical reasons it's there it doesn't matter I was like yeah I don't like it and that's where the discussion",
    "start": "2223760",
    "end": "2231520"
  },
  {
    "text": "ended which is this total right by the way uh it it probably doesn't have a negative security impact it's just it",
    "start": "2231520",
    "end": "2238240"
  },
  {
    "text": "doesn't have to be there so um that's why I mentioned this in the code all right so let's see if we can see this in",
    "start": "2238240",
    "end": "2244800"
  },
  {
    "text": "action right um it's running so we go here we clear this and we launch our o",
    "start": "2244800",
    "end": "2253480"
  },
  {
    "text": "outflow again and there we go what do we see here well we see the client ID in",
    "start": "2253480",
    "end": "2259760"
  },
  {
    "text": "the URL um and the request URI this is the par ID that has been generated by our security token service and that's",
    "start": "2259760",
    "end": "2266200"
  },
  {
    "text": "the one that we have to send when we start a flow um as you can see here you see nothing else by the way why because",
    "start": "2266200",
    "end": "2272520"
  },
  {
    "text": "this is a back Channel request it's no GS to the SS the browser isn't in a mix so you can't see that in the browser St",
    "start": "2272520",
    "end": "2277680"
  },
  {
    "text": "tools that's why I have some very useful output here somewhere um you can see I'm a really good",
    "start": "2277680",
    "end": "2284000"
  },
  {
    "text": "developer as well by the way my apologies for that I'm going to",
    "start": "2284000",
    "end": "2289680"
  },
  {
    "text": "make a note to fix that um so we received a par response as you can see there's like a lot of useful information",
    "start": "2289680",
    "end": "2295280"
  },
  {
    "text": "in that bar response um and that good thing that this is recorded so that's",
    "start": "2295280",
    "end": "2300800"
  },
  {
    "text": "awesome um seriously do not hire me for your development purposes um",
    "start": "2300800",
    "end": "2307920"
  },
  {
    "text": "and that's the the URL that we have used and you can see that we again receive tokens there as well so um very simple",
    "start": "2307920",
    "end": "2314119"
  },
  {
    "text": "very straightforward changes needed on the SS of course but also only on the",
    "start": "2314119",
    "end": "2319480"
  },
  {
    "text": "client and only during the initialization of the flow so modifying your clients to start using par should",
    "start": "2319480",
    "end": "2325319"
  },
  {
    "text": "be fairly simple and fairly straightforward all right very localized changes and there's Library support for",
    "start": "2325319",
    "end": "2330800"
  },
  {
    "text": "this um and somebody told me like Anders told me that net is supporting this as well and will'll make this the default",
    "start": "2330800",
    "end": "2336400"
  },
  {
    "text": "for o outflows um which is really awesome as well",
    "start": "2336400",
    "end": "2342880"
  },
  {
    "text": "yes I'm not at aset guy so I have no idea what that means but uh version nine",
    "start": "2342880",
    "end": "2348119"
  },
  {
    "text": "so uh all",
    "start": "2348119",
    "end": "2354838"
  },
  {
    "text": "right good",
    "start": "2357920",
    "end": "2361280"
  },
  {
    "text": "good exclamation mark this is an important note noce if you want to use bar for certain",
    "start": "2364440",
    "end": "2371599"
  },
  {
    "text": "clients you can configure them you should configure them to only use bar because otherwise um if you enable boat",
    "start": "2371599",
    "end": "2377720"
  },
  {
    "text": "modes then the client could still use the old one and it can create confusion or maybe there's uh certain scenarios",
    "start": "2377720",
    "end": "2383480"
  },
  {
    "text": "where somebody does the wrong thing so you can configure your STDs to only allow par and then it if the client",
    "start": "2383480",
    "end": "2389240"
  },
  {
    "text": "tries to run a normal flow it's going to be like uhuh use par instead and this would be better so that's a a",
    "start": "2389240",
    "end": "2394520"
  },
  {
    "text": "configuration step that you should not forget when handl L Bar all right brings us to a takeaway pushed authorization",
    "start": "2394520",
    "end": "2401560"
  },
  {
    "start": "2399000",
    "end": "2626000"
  },
  {
    "text": "requests eliminate the need to send all of these parameters over the front Channel we do it with a back Channel",
    "start": "2401560",
    "end": "2407040"
  },
  {
    "text": "request instead really really big step forward I'm a big fan of par um and in",
    "start": "2407040",
    "end": "2412960"
  },
  {
    "text": "general it is a good thing I Envision that par becomes a",
    "start": "2412960",
    "end": "2419880"
  },
  {
    "text": "recommended best practice really fast by the way so the recommended best practice for authorization code flows is like",
    "start": "2419880",
    "end": "2426319"
  },
  {
    "text": "pixie with all the param and I can imagine that there's going to be like a consensus like yeah let's just use bar",
    "start": "2426319",
    "end": "2431839"
  },
  {
    "text": "for everything and the net news as Anders said like right before my talk is evidence that this is going definitely",
    "start": "2431839",
    "end": "2438640"
  },
  {
    "text": "that direction so that's really awesome to see if you really want to you can",
    "start": "2438640",
    "end": "2443720"
  },
  {
    "text": "combine par and jar right so you could generate a jar with all your parameters",
    "start": "2443720",
    "end": "2450920"
  },
  {
    "text": "sign it and then send that with part to the SDS um in most cases I would say",
    "start": "2450920",
    "end": "2456400"
  },
  {
    "text": "that's pretty Overkill as in you're signing something which is going to be sent over a direct server to server htps",
    "start": "2456400",
    "end": "2462400"
  },
  {
    "text": "connection probably that's not going to be necessary but there might be cases maybe there's um proxies in the middle",
    "start": "2462400",
    "end": "2469280"
  },
  {
    "text": "maybe stuff you don't trust in that case you might want to opt for using vat together but that would be the the OD",
    "start": "2469280",
    "end": "2476000"
  },
  {
    "text": "case not the default use case for this all right",
    "start": "2476000",
    "end": "2482400"
  },
  {
    "text": "good one more topic Center constraint",
    "start": "2484520",
    "end": "2490040"
  },
  {
    "text": "tokens who here is using bare tokens yes everyone",
    "start": "2490839",
    "end": "2497480"
  },
  {
    "text": "awesome normal response by the way it's the default it's what everybody's using",
    "start": "2497480",
    "end": "2502720"
  },
  {
    "text": "and quite frankly it's surprising that we haven't fixed this because we can fix",
    "start": "2502720",
    "end": "2508920"
  },
  {
    "text": "this it's actually quite possible to fix it it just takes a bit of well not a lot",
    "start": "2508920",
    "end": "2513960"
  },
  {
    "text": "of effort to do that but the security benefits are massive so so what's the problem with bear tokens the meaning of",
    "start": "2513960",
    "end": "2519880"
  },
  {
    "text": "a bear token comes from like the bearer the holder of the token has the authority to use it it's like bare bonds",
    "start": "2519880",
    "end": "2526560"
  },
  {
    "text": "like if you have the the papers of whatever money thing you have then you're the owner of that so if somebody steals it they can use it it's like",
    "start": "2526560",
    "end": "2532720"
  },
  {
    "text": "their money now and the same thing holds for these tokens if somebody steals your beer token it's their token now they can do whatever they want with it and they",
    "start": "2532720",
    "end": "2539240"
  },
  {
    "text": "can abuse that how does that happen well somebody can get it from your client maybe somebody breaks into your client",
    "start": "2539240",
    "end": "2545079"
  },
  {
    "text": "steals an access token if you send it to an API the API has it maybe the API is",
    "start": "2545079",
    "end": "2550680"
  },
  {
    "text": "compromised maybe it deliberately becomes malicious it now gets an access token from you and give be like oh yeah awesome turn around and use it somewhere",
    "start": "2550680",
    "end": "2557319"
  },
  {
    "text": "else as well and there's various other cases how access tokens can um find",
    "start": "2557319",
    "end": "2562760"
  },
  {
    "text": "their way into the Free World and be abused basically the solution for this is to move towards what we call sender",
    "start": "2562760",
    "end": "2569359"
  },
  {
    "text": "constraint tokens which um what we're going to talk here are proof of possession tokens basically tokens that",
    "start": "2569359",
    "end": "2575559"
  },
  {
    "text": "are no longer bare tokens but a token where you need to prove possession of a secret to use it this means if I have",
    "start": "2575559",
    "end": "2582960"
  },
  {
    "text": "your pro of possession token and I'll send it to an API the API is going to be like uh-uh you have to prove possession",
    "start": "2582960",
    "end": "2588079"
  },
  {
    "text": "of a secret which means I would also have to steal a secret from you which is a lot harder typically it should be embedded in like a key Vault and so on",
    "start": "2588079",
    "end": "2594599"
  },
  {
    "text": "and so on so it's a private key and unless the attacker also has the private key they will never be able to use an",
    "start": "2594599",
    "end": "2600880"
  },
  {
    "text": "access token that is linked to that private key that's essentially the concept of proof of possession",
    "start": "2600880",
    "end": "2606319"
  },
  {
    "text": "mechanisms and there's two ways to implement that there's the old way and",
    "start": "2606319",
    "end": "2611680"
  },
  {
    "text": "there's the new way awesome the old way everybody's going to",
    "start": "2611680",
    "end": "2617400"
  },
  {
    "text": "go even though it's super awesome it's super simple it works really well and you have to implement virtually nothing",
    "start": "2617400",
    "end": "2623559"
  },
  {
    "text": "for that people still don't like it the old way is mtls so mutual TLS where you",
    "start": "2623559",
    "end": "2628599"
  },
  {
    "start": "2626000",
    "end": "2775000"
  },
  {
    "text": "use like TLS certificates on both ends I see some people shaking their head",
    "start": "2628599",
    "end": "2633920"
  },
  {
    "text": "like it's basically where you use like certificates on the client certificates on the server set up a TLS connection",
    "start": "2633920",
    "end": "2639240"
  },
  {
    "text": "which is mutually authenticated and your token is going to be linked to that certificate and that certificate alone",
    "start": "2639240",
    "end": "2645079"
  },
  {
    "text": "meaning if you don't use that certificate to set up the connection with of course the corresponding private key the API is going to be like uh-uh",
    "start": "2645079",
    "end": "2651160"
  },
  {
    "text": "not good enough go away and that's one way of doing that why is this super easy because mtls is implemented in every",
    "start": "2651160",
    "end": "2657520"
  },
  {
    "text": "single networking Library you can find all it takes is like two lines of configuration like here's my search use",
    "start": "2657520",
    "end": "2664040"
  },
  {
    "text": "it and you're done basically that's how simple it can be of course you have to",
    "start": "2664040",
    "end": "2669359"
  },
  {
    "text": "generate certificates and manage them and so on and so on which is a bit less pretty but implementation wise it is",
    "start": "2669359",
    "end": "2675240"
  },
  {
    "text": "really really straightforward how does that work well um of course we have the normal server TLS SE we don't care about",
    "start": "2675240",
    "end": "2681520"
  },
  {
    "text": "that for this specific um the specific slide but the client has their key pairs",
    "start": "2681520",
    "end": "2686760"
  },
  {
    "text": "where's my highlighter here the client has a public and private key and a certificate and the server uh the STDs",
    "start": "2686760",
    "end": "2692680"
  },
  {
    "text": "here also has that certificate and of course the public key which is kind of embedded in the certificate so what's",
    "start": "2692680",
    "end": "2698400"
  },
  {
    "text": "going to happen is we're going to set up a mtls connection between the client and the STS and we're going to exchange the",
    "start": "2698400",
    "end": "2704319"
  },
  {
    "text": "authorization code over that connection um which will give us tokens and when we do that the STS is going to generate the",
    "start": "2704319",
    "end": "2711160"
  },
  {
    "text": "access token and it's going to put a fingerprint of the certificate inside the access token so now we have a access",
    "start": "2711160",
    "end": "2717520"
  },
  {
    "text": "token that is Center constraints for a specific TLS certificate and you can only use that certificate if you also",
    "start": "2717520",
    "end": "2724559"
  },
  {
    "text": "have the private key which nobody else has but you so whenever the client now accesses the API they use the same mtls",
    "start": "2724559",
    "end": "2731400"
  },
  {
    "text": "certificate to set up the connection same private key the access token goes to the API and the API will verify that",
    "start": "2731400",
    "end": "2737040"
  },
  {
    "text": "the API will be configured to look in the access token there's like a CNF claim now with the fingerprint and the",
    "start": "2737040",
    "end": "2742680"
  },
  {
    "text": "API is like oo it's going to take the fingerprint of the CT that fingerprint compare them if they're the same good if",
    "start": "2742680",
    "end": "2748920"
  },
  {
    "text": "they're not the same go away and that would be a 4 or3 um or whatever you're",
    "start": "2748920",
    "end": "2754280"
  },
  {
    "text": "doing there 500 also works really well for error messages that's basically",
    "start": "2754280",
    "end": "2760040"
  },
  {
    "text": "proof of possession through mtls super simple super straightforward and your networking Library does the heavy lifting so if you can I'm going to",
    "start": "2760040",
    "end": "2767280"
  },
  {
    "text": "recommend to use this because it works really well and it has zero effort",
    "start": "2767280",
    "end": "2773880"
  },
  {
    "text": "implementation wise what does the token look like there's going to be extra claims in the access token there's going to be the CNF claim confirmation with an",
    "start": "2773880",
    "end": "2781240"
  },
  {
    "start": "2775000",
    "end": "2806000"
  },
  {
    "text": "x5d X5 thumbprint in the Sha 256 hash format whatever uh fingerprint print is",
    "start": "2781240",
    "end": "2787280"
  },
  {
    "text": "there the API has to check that of course it's up to the API to mandate that if this uh claim is present to",
    "start": "2787280",
    "end": "2793520"
  },
  {
    "text": "ensure that they check it otherwise there's not no point in having that there in the token all",
    "start": "2793520",
    "end": "2800599"
  },
  {
    "text": "right awesome that's the old way so",
    "start": "2800599",
    "end": "2805839"
  },
  {
    "text": "whatever why is there a new way because mtls doesn't always work all right mtls",
    "start": "2805839",
    "end": "2811480"
  },
  {
    "text": "maybe you don't want to implement that maybe you can't Implement that maybe managing certificates is too hard",
    "start": "2811480",
    "end": "2817359"
  },
  {
    "text": "um maybe the infrastructure is too complicated maybe your API is like 18 hubs behind some gateways and reverse",
    "start": "2817359",
    "end": "2822880"
  },
  {
    "text": "proxies and it's just a big mess to forward all of that information and so on and so on if that is your case or if",
    "start": "2822880",
    "end": "2829000"
  },
  {
    "text": "you simply don't like mtls um that's also a valid reason then you might want to learn about deop and deop is a new",
    "start": "2829000",
    "end": "2836559"
  },
  {
    "text": "mechanism called demonstration of proof of possession and it's basically the",
    "start": "2836559",
    "end": "2841720"
  },
  {
    "text": "same mechanism but on the application layer",
    "start": "2841720",
    "end": "2846880"
  },
  {
    "text": "it's the same mechanism but now you have get to get the joy of generating Json web tokens and signing them and",
    "start": "2846880",
    "end": "2853400"
  },
  {
    "text": "exchanging them and including them on requests and so on to prove that you possess a private key so it's basically",
    "start": "2853400",
    "end": "2859760"
  },
  {
    "text": "like mtls with a lot more work well no it's not true it's uh more flexible because it's application layer it gives",
    "start": "2859760",
    "end": "2866200"
  },
  {
    "text": "you more flexibility you can do it um in various use cases where mtls wouldn't work well but it's a lot more work to",
    "start": "2866200",
    "end": "2872160"
  },
  {
    "text": "get this done there's a spec for that uh fairly recent uh from last year that was",
    "start": "2872160",
    "end": "2877319"
  },
  {
    "text": "finalized and uh I'm going to walk you through deop and it's going to take me like um 15 slides to do that uh because",
    "start": "2877319",
    "end": "2884800"
  },
  {
    "text": "there's a lot of dirty details that you have to uh take into account this is going to be a super wild R so stick with",
    "start": "2884800",
    "end": "2890359"
  },
  {
    "text": "me um I'm going to be as brief as I can to try and explain this it's not that complicated it's just that there's a lot",
    "start": "2890359",
    "end": "2896359"
  },
  {
    "text": "of tiny things that you have to match together and handle all right so what is a setup we have a public private key",
    "start": "2896359",
    "end": "2902839"
  },
  {
    "text": "pair on the client you can generate these on the Fly you don't have to distribute them a front you don't have to register them a front you can do this",
    "start": "2902839",
    "end": "2909119"
  },
  {
    "text": "on the Fly which is actually kind of awesome um compared to mtls one of the benefits when we want to exchange our",
    "start": "2909119",
    "end": "2916720"
  },
  {
    "text": "authorization code we have to generate a depop proof first so we're going to prove to the STS that we possess the",
    "start": "2916720",
    "end": "2922079"
  },
  {
    "text": "private key so they can use our public key to link the access token to that all right so we generate a deot proof we",
    "start": "2922079",
    "end": "2928520"
  },
  {
    "text": "send that to the STDs along with our authorization code and our public key the SS will verify all of that of course",
    "start": "2928520",
    "end": "2935400"
  },
  {
    "text": "and then it will generate our tokens it will generate the access token maybe the refresh token as well it binds them to",
    "start": "2935400",
    "end": "2940920"
  },
  {
    "text": "the public key that we just provided and it sends us the access token refresh",
    "start": "2940920",
    "end": "2946720"
  },
  {
    "text": "token and so on now we want to use that access token on an API not so fast first",
    "start": "2946720",
    "end": "2952280"
  },
  {
    "text": "we have to generate a Depot proof for the request you're going to send deot proof specifically linked to this",
    "start": "2952280",
    "end": "2957480"
  },
  {
    "text": "request that proof will be included along with the request and the access token and the API will have to verify",
    "start": "2957480",
    "end": "2964079"
  },
  {
    "text": "these steps the API will verify the de proof uh verify that it's linked to the access token that it matches the request",
    "start": "2964079",
    "end": "2970119"
  },
  {
    "text": "and so on and so on more details will follow in the next slides don't worry about that uh this was only one slide of",
    "start": "2970119",
    "end": "2975680"
  },
  {
    "text": "the 15 um and that's how depop is going to work in practice all right like I",
    "start": "2975680",
    "end": "2982079"
  },
  {
    "text": "said a bit more work um but it gives you proof of possession semantics uh for",
    "start": "2982079",
    "end": "2988119"
  },
  {
    "text": "scenarios where mtls would not be feasible all right let's look at the",
    "start": "2988119",
    "end": "2995760"
  },
  {
    "text": "dirty details what's going going on the first deot proof that's basically to",
    "start": "2995760",
    "end": "3001319"
  },
  {
    "start": "2997000",
    "end": "3050000"
  },
  {
    "text": "exchange the authorization code it looks like this it's a Json web token so you're going to be generating a whole bunch of Json web tokens there's a",
    "start": "3001319",
    "end": "3008160"
  },
  {
    "text": "header and a payload and you can see the specific values and there's a type depop plus JWT again registered um we include",
    "start": "3008160",
    "end": "3015760"
  },
  {
    "text": "the public key inside the header that's the key of the client that was generated on the Fly um we include a unique",
    "start": "3015760",
    "end": "3022160"
  },
  {
    "text": "identifier to prevent replay attacks we include the type of request going to send a post request to a specific URI",
    "start": "3022160",
    "end": "3029480"
  },
  {
    "text": "the token endpoint and that's basically the relevant part and all of that is",
    "start": "3029480",
    "end": "3034880"
  },
  {
    "text": "signed by the client's private key all right that's a Depot proof this can only only be used for this particular request",
    "start": "3034880",
    "end": "3041480"
  },
  {
    "text": "there's an issued at time stem so the SS can reject things that are too old that it doesn't like like maybe things that",
    "start": "3041480",
    "end": "3046559"
  },
  {
    "text": "are older than 5 Seconds go away we don't need that and that's the proof that's going to be sent along with step",
    "start": "3046559",
    "end": "3052240"
  },
  {
    "start": "3050000",
    "end": "3082000"
  },
  {
    "text": "number three um as follows so that request looks like this it's a author and authorization code exchange so it's",
    "start": "3052240",
    "end": "3059000"
  },
  {
    "text": "a post to the Token endpoint um we include well actually I have some uh text here so just use the text it's a",
    "start": "3059000",
    "end": "3065640"
  },
  {
    "text": "traditional request but now we have a depop header and that depop header is a new request header it includes the proof",
    "start": "3065640",
    "end": "3072000"
  },
  {
    "text": "that we generated just before all right the rest of the flow are just standard o",
    "start": "3072000",
    "end": "3077760"
  },
  {
    "text": "parameters code code verifier and so on and so on good number four no details there that's",
    "start": "3077760",
    "end": "3085119"
  },
  {
    "text": "something that the SS has to do you have to verify the signature on the depot proof make sure it corresponds to the request and that embedded public key",
    "start": "3085119",
    "end": "3092040"
  },
  {
    "text": "makes sense and so on and so on so a lot of checks have to be done correctly now we generate the tokens we're going to",
    "start": "3092040",
    "end": "3098119"
  },
  {
    "text": "include a CNF claim confirmation just like before but no longer an x509 certificate Thum print but a jkt a Json",
    "start": "3098119",
    "end": "3106240"
  },
  {
    "text": "web key Thum print um now this is the the fingerprint of the public key that has been included in the Tok in the deot",
    "start": "3106240",
    "end": "3113240"
  },
  {
    "text": "proof earlier all right as stated here on the slides good the",
    "start": "3113240",
    "end": "3121119"
  },
  {
    "start": "3119000",
    "end": "3208000"
  },
  {
    "text": "response to the client is a normal response traditional tokens uh being sent in the Json response there nothing",
    "start": "3121119",
    "end": "3128119"
  },
  {
    "text": "special going on now we want to call the API what do we do we generate another deot proof you can kind of see where",
    "start": "3128119",
    "end": "3133839"
  },
  {
    "text": "this is going right the Deepa proof what it will contain it will contain the same parameters as before like the the type",
    "start": "3133839",
    "end": "3139240"
  },
  {
    "text": "and the the key from the client but also the specifics about what we're calling on the API so you can see on the bottom",
    "start": "3139240",
    "end": "3146359"
  },
  {
    "text": "here here that we have again a unique identifier we have the HTTP method is included a get request to a specific API",
    "start": "3146359",
    "end": "3152520"
  },
  {
    "text": "endpoint this links that proof to that one request otherwise if the AA would Capture One proof and it's valid for all",
    "start": "3152520",
    "end": "3158599"
  },
  {
    "text": "API calls then they can just call whatever they want so this wouldn't make any sense so again there's an issued at time stamp but there's also a linkage of",
    "start": "3158599",
    "end": "3166079"
  },
  {
    "text": "this proof to a specific API endpoint with a specific HTTP method all right",
    "start": "3166079",
    "end": "3171920"
  },
  {
    "text": "and then the unique identifiers the GTI are in there to prevent play attack so",
    "start": "3171920",
    "end": "3177440"
  },
  {
    "text": "the attacker would be able to replay the exact same request but because of that unique ID in the GTI claim the API",
    "start": "3177440",
    "end": "3183079"
  },
  {
    "text": "should be able to reject it should be it's a very big uh big importance Nuance",
    "start": "3183079",
    "end": "3189160"
  },
  {
    "text": "here because of course it depends on how the API handles this but this is what should happen in practice all right",
    "start": "3189160",
    "end": "3195720"
  },
  {
    "text": "Additionally the access token itself is linked to this proof so you can't keep use it with different access tokens",
    "start": "3195720",
    "end": "3201040"
  },
  {
    "text": "either it has to be used with this particular access token all right and of",
    "start": "3201040",
    "end": "3206200"
  },
  {
    "text": "course it's again signed by the client's private key request goes out what does that request look",
    "start": "3206200",
    "end": "3212599"
  },
  {
    "start": "3208000",
    "end": "3249000"
  },
  {
    "text": "like final monospace slide so enjoy it uh this is basically a a request to the",
    "start": "3212599",
    "end": "3218520"
  },
  {
    "text": "review's endpoint on API it's a get request like in the proof there's a deop header with a proof and there's an",
    "start": "3218520",
    "end": "3225079"
  },
  {
    "text": "authorization header with our token and type of the authorization header is no longer bare but it's now",
    "start": "3225079",
    "end": "3231640"
  },
  {
    "text": "depop that's a big change telling the API this is a deop token must must follow all of the deop verification",
    "start": "3231640",
    "end": "3239000"
  },
  {
    "text": "steps that's essentially um how this works in practice and what you can find",
    "start": "3239000",
    "end": "3244799"
  },
  {
    "text": "there in case you're looking at a PDF instead of an audio-based version of this presentation all right verifying",
    "start": "3244799",
    "end": "3250400"
  },
  {
    "start": "3249000",
    "end": "3319000"
  },
  {
    "text": "the deot proof on the API side this is uh fairly complex um I'm not going to go into details here there's a whole bunch",
    "start": "3250400",
    "end": "3255839"
  },
  {
    "text": "of steps you have to follow like check the signature on the jot check the payload that it corresponds with the API",
    "start": "3255839",
    "end": "3260960"
  },
  {
    "text": "call make sure that the access token used matches the hash in the deot proof and so on as you can imagine this is",
    "start": "3260960",
    "end": "3266160"
  },
  {
    "text": "something something that you have to implement with a lot of care or use libraries that support this all right",
    "start": "3266160",
    "end": "3271760"
  },
  {
    "text": "and that is basically how we can use cender constraint tokens this is something this is a recommendation",
    "start": "3271760",
    "end": "3279799"
  },
  {
    "text": "something that you actually should be doing for a a whole bunch of O applications not like the simple public",
    "start": "3279799",
    "end": "3286920"
  },
  {
    "text": "stuff that nobody really cares about but any sensitive business application should really could really benefit from Center constraint tokens but it is a bit",
    "start": "3286920",
    "end": "3294040"
  },
  {
    "text": "more of a heavy lift than tweaking some uh parameters in authorization request it requires key management and proof",
    "start": "3294040",
    "end": "3299960"
  },
  {
    "text": "generation or mtls and so on so it is a lot more effort but if you're building something sensitive strongly consider",
    "start": "3299960",
    "end": "3306559"
  },
  {
    "text": "proof of possession mechanisms for your tokens let's get rid of bare tokens which is kind of a slogan that uh has",
    "start": "3306559",
    "end": "3312599"
  },
  {
    "text": "been circulating in the community for like 12ish years so let's get rid of Paar tokens and here we are all right",
    "start": "3312599",
    "end": "3319079"
  },
  {
    "start": "3319000",
    "end": "3572000"
  },
  {
    "text": "that was kind of a wild ride um hope you enjoyed that hope this was useful I'm going to narrow it down to three key",
    "start": "3319079",
    "end": "3325400"
  },
  {
    "text": "takeaways about the three topics we talked about not surprisingly um use resource indicators to reduce the",
    "start": "3325400",
    "end": "3330960"
  },
  {
    "text": "authority of your access tokens if you um are dealing with access tokens from multiple apis use par um",
    "start": "3330960",
    "end": "3338920"
  },
  {
    "text": "absolutely recommended big significant Security benefits also makes your deployments uh easier and so on and so",
    "start": "3338920",
    "end": "3345880"
  },
  {
    "text": "on definitely consider using par if your SDS supports that and use Center constraint tokens over bare tokens it",
    "start": "3345880",
    "end": "3352799"
  },
  {
    "text": "significantly increases security and it can really help you lock things down all",
    "start": "3352799",
    "end": "3358039"
  },
  {
    "text": "right thank you very much um I hope you enjoyed it and now I have time for questions if you have",
    "start": "3358039",
    "end": "3365240"
  },
  {
    "text": "them all right that's the best kind of question one that has already been answered awesome there's",
    "start": "3373280",
    "end": "3379680"
  },
  {
    "text": "more indicators in of different",
    "start": "3379680",
    "end": "3386559"
  },
  {
    "text": "mhm that the the benefit is that you don't have to run multiple flows you can run one flow uh with all the resource",
    "start": "3388480",
    "end": "3395359"
  },
  {
    "text": "parameters up front um the user will be prompted once for consent if consent plays a role and then afterwards you can",
    "start": "3395359",
    "end": "3401440"
  },
  {
    "text": "just in the background request what you need token wise um so yeah exactly that",
    "start": "3401440",
    "end": "3406599"
  },
  {
    "text": "might also be useful for offline scenarios where the user is present once you run the flow you ask permission to",
    "start": "3406599",
    "end": "3412400"
  },
  {
    "text": "access five apis and then with a refresh token later on like two days later you can get an access token explicitly for",
    "start": "3412400",
    "end": "3417960"
  },
  {
    "text": "that API which otherwise would be hard um unless you have to run all the flows sequentially up front and so on so",
    "start": "3417960",
    "end": "3425799"
  },
  {
    "text": "yeah anything else no no no I I don't do net so no no",
    "start": "3426880",
    "end": "3435359"
  },
  {
    "text": "go ahead go ahead this is not AET question but if you use and res",
    "start": "3435359",
    "end": "3442440"
  },
  {
    "text": "indicators should with the refresh token",
    "start": "3442440",
    "end": "3448160"
  },
  {
    "text": "re um it depends I think so you can use",
    "start": "3448400",
    "end": "3453920"
  },
  {
    "text": "deop for refresh tokens as well so in that case the refresh token would be bound to a specific key held by the",
    "start": "3453920",
    "end": "3459400"
  },
  {
    "text": "client um I don't have a concrete answer for you right now because I would have to look into that because using a",
    "start": "3459400",
    "end": "3466039"
  },
  {
    "text": "refresh token already requires client authentication so it's a form of a center constraint token not proof of possession but uh client authentication",
    "start": "3466039",
    "end": "3473160"
  },
  {
    "text": "based um so I'm not sure if in this case there would be a lot of",
    "start": "3473160",
    "end": "3478359"
  },
  {
    "text": "benefits for that",
    "start": "3478359",
    "end": "3481240"
  },
  {
    "text": "but refh token yeah no no no no uh there there's",
    "start": "3484599",
    "end": "3492839"
  },
  {
    "text": "an O spec um detailing how to do oat in browser based applications and it basically says don't do",
    "start": "3492839",
    "end": "3499640"
  },
  {
    "text": "it I know because I wrote that part in there um no so if you're doing o in browser based apps um I did talk about",
    "start": "3499640",
    "end": "3506599"
  },
  {
    "text": "that a year and a half ago at NDC security so check that one out um it's on YouTube if you want to you should use",
    "start": "3506599",
    "end": "3511920"
  },
  {
    "text": "a BFF and it's a backend client at that point so um with all due respect but I'm",
    "start": "3511920",
    "end": "3517359"
  },
  {
    "text": "going to talk about refresh tokens and browsers because it's a bad idea so U even with deop deop doesn't really help",
    "start": "3517359",
    "end": "3523440"
  },
  {
    "text": "there at all so uh yeah it makes it more complicated but it doesn't add Security in that",
    "start": "3523440",
    "end": "3530319"
  },
  {
    "text": "case other questions all right in that case feel",
    "start": "3530319",
    "end": "3536400"
  },
  {
    "text": "free to stay and enjoy the air conditioning and um enjoy the rest of the conference",
    "start": "3536400",
    "end": "3544119"
  }
]