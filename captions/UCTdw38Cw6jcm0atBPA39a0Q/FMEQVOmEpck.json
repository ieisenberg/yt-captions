[
  {
    "start": "0",
    "end": "190000"
  },
  {
    "text": "good morning everyone good afternoon good evening wherever you're collecting from in this wonderful time of uh not being able to",
    "start": "6319",
    "end": "11679"
  },
  {
    "text": "travel anywhere there's a folk attending these conferences from all around the world which is a lot of fun uh me myself i'm up in the uh the north",
    "start": "11679",
    "end": "18640"
  },
  {
    "text": "of england in a little town called ilkley it's set in this uh beautiful surroundings of warfdale",
    "start": "18640",
    "end": "24080"
  },
  {
    "text": "and it's lovely and there's lots of countryside and this little town nestled away it's got a few",
    "start": "24080",
    "end": "30400"
  },
  {
    "text": "facilities it's got a few schools a few shops but for kind of like bigger shops and things like that we have to head to our",
    "start": "30400",
    "end": "36079"
  },
  {
    "text": "nearest town our nearest city which is a place called bradford so it's being a london conference i guess it's a",
    "start": "36079",
    "end": "41840"
  },
  {
    "text": "few phone calls at least no rough geography of where i'm talking about so sometimes i go into bradford and",
    "start": "41840",
    "end": "48079"
  },
  {
    "text": "sometimes i'll drive there and we drive into bradford and you'll need somewhere to park your car",
    "start": "48079",
    "end": "53600"
  },
  {
    "text": "so up here in west yorkshire we'll look for a car park elsewhere in the country they'll probably say car park",
    "start": "53600",
    "end": "58640"
  },
  {
    "text": "but we look for a car park are we wondering things like well where is my nearest car park that's got somewhere for me to park in",
    "start": "58640",
    "end": "64960"
  },
  {
    "text": "or there's a particular car park that i've got in mind i wonder how many spaces are available all the car packs",
    "start": "64960",
    "end": "71119"
  },
  {
    "text": "seem to be completely full up which is kind of pretty unlikely at the moment but maybe it'd be useful to find out getting",
    "start": "71119",
    "end": "76240"
  },
  {
    "text": "alerts when there is a car pack that becomes available and being a bit of a data geek",
    "start": "76240",
    "end": "81520"
  },
  {
    "text": "it's always interesting to kind of analyze these things and look at how occupancy varies over time",
    "start": "81520",
    "end": "86640"
  },
  {
    "text": "so my name is robert muffett i'm a developer advocate at confluence and confluence are one of the companies that",
    "start": "86640",
    "end": "92479"
  },
  {
    "text": "contribute towards the open source apache kafka project and we have our own managed uh apache",
    "start": "92479",
    "end": "97600"
  },
  {
    "text": "kafka in the cloud called confront cloud so today i want to go through an example of some of the",
    "start": "97600",
    "end": "103600"
  },
  {
    "text": "things that you can build using kafka and thing called key sql db but building around this idea of car",
    "start": "103600",
    "end": "110640"
  },
  {
    "text": "parks and can i do building a useful app around that set of data now there's an open api for this uh this",
    "start": "110640",
    "end": "117280"
  },
  {
    "text": "source of data now as the demo of gods would have it that api seems to be a bit stuck at the moment so it's reporting",
    "start": "117280",
    "end": "123439"
  },
  {
    "text": "all data but i've actually find another one that we're going to add in there also but my primary source of data is this",
    "start": "123439",
    "end": "128640"
  },
  {
    "text": "one from bradford bradford city council and they publish this open data which is great and you can actually pull that data in",
    "start": "128640",
    "end": "135120"
  },
  {
    "text": "and you can find that information in near-ish real-time about the state of the car parks",
    "start": "135120",
    "end": "140319"
  },
  {
    "text": "how many car parks are occupied what we're going to do is we're going to hook up to a tool called telegram",
    "start": "140319",
    "end": "147040"
  },
  {
    "text": "so telegram if you're familiar with it you'll know what it is already if you're not it's kind of like whatsapp",
    "start": "147040",
    "end": "152160"
  },
  {
    "text": "or facebook messenger it's just like one of these messaging tools that's become rather popular in recent years and it's got a",
    "start": "152160",
    "end": "158239"
  },
  {
    "text": "rather good api for being able to write bots against it so you can automate interactions within it so it's a useful",
    "start": "158239",
    "end": "164400"
  },
  {
    "text": "little front end someone to write a custom app from scratch to interact with users we're just going to hook into this",
    "start": "164400",
    "end": "171280"
  },
  {
    "text": "all sounds very fancy i want to show you in action first what we've built and then we're",
    "start": "171280",
    "end": "176560"
  },
  {
    "text": "going to walk through how we've built it some of the interesting design patterns that we've implemented using it",
    "start": "176560",
    "end": "182480"
  },
  {
    "text": "and talk a little bit about kafka and why that kind of fits into the picture here so let's actually go and have a look at",
    "start": "182480",
    "end": "189040"
  },
  {
    "text": "that what is my telegram bot over here and",
    "start": "189040",
    "end": "194159"
  },
  {
    "start": "190000",
    "end": "597000"
  },
  {
    "text": "on the left hand side we've got the kind of the bot itself that's running in the back end so i'm going to start the bot so on the",
    "start": "194159",
    "end": "199680"
  },
  {
    "text": "right hand side you click on start so i'm using telegram from my computer if i'm driving along in my car i guess",
    "start": "199680",
    "end": "204959"
  },
  {
    "text": "my passenger will open up my phone and use telegram from there it's got lots of different devices it can use from",
    "start": "204959",
    "end": "210879"
  },
  {
    "text": "on the right hand side we've uh sent a start command to the bot and we can see in the back end in the bot it's received this message here",
    "start": "210879",
    "end": "217599"
  },
  {
    "text": "it's received it from a user and it says start so then the bot itself is sent over this",
    "start": "217599",
    "end": "223680"
  },
  {
    "text": "message telling me how to go and use that boss so we could do things like i would like to go and look up",
    "start": "223680",
    "end": "228879"
  },
  {
    "text": "how many spaces are available in a particular car park so i'm going to say let's go and have a look at a place called westgate",
    "start": "228879",
    "end": "235280"
  },
  {
    "text": "and it's going to say okay in this particular car park there's this many spaces available now as i said this api at the",
    "start": "235280",
    "end": "241920"
  },
  {
    "text": "moment looks to be jammed so i was trying this out earlier i was like oh no i've done something wrong my thing's broken but it turns out the api itself",
    "start": "241920",
    "end": "248159"
  },
  {
    "text": "is it's got some stale data so it's a half plus two this morning something went bang in someone else's system not mine fortunately",
    "start": "248159",
    "end": "255120"
  },
  {
    "text": "so we've got some sale data so i've got another car pack that i'm going to look up and it's called uh it's called this one here",
    "start": "255120",
    "end": "261519"
  },
  {
    "text": "wellington i'm going to take that and we're going to stick that in there instead the names",
    "start": "261519",
    "end": "266880"
  },
  {
    "text": "a little doesn't really trip off the tongue this one this is more of this kind of a system based name but this is to do with car parks based",
    "start": "266880",
    "end": "272000"
  },
  {
    "text": "in leeds so we've got data from car parks in bradford and then leeds another west yorkshire city",
    "start": "272000",
    "end": "278080"
  },
  {
    "text": "and you can see this one here tent is a 10 20 55 seconds that's basically as of now it will take a few minutes so",
    "start": "278080",
    "end": "285360"
  },
  {
    "text": "this car pack here it's 73 full we've got this many spaces available",
    "start": "285360",
    "end": "290400"
  },
  {
    "text": "so that's quite useful we've got a little front end on our app and we're making requests against the back end and",
    "start": "290400",
    "end": "295440"
  },
  {
    "text": "we'll look at that back end in a moment saying what's the current state how many spaces are currently",
    "start": "295440",
    "end": "301280"
  },
  {
    "text": "available we could also do things like this we could say well here's where i am at the moment so i'm",
    "start": "301280",
    "end": "306479"
  },
  {
    "text": "going to send this location over and it's going to find out which is my nearest car pack that has got some",
    "start": "306479",
    "end": "311680"
  },
  {
    "text": "spaces at the back end here you can see it's actually sending over a sql query",
    "start": "311680",
    "end": "316960"
  },
  {
    "text": "and it's doing like latitude and longitude and it's taking my location information and saying well we know about all the",
    "start": "316960",
    "end": "322800"
  },
  {
    "text": "different car parks and we're going to look up and find out which one is closest like as the crew flies to this person",
    "start": "322800",
    "end": "329680"
  },
  {
    "text": "so it's come back with all of these different car parks here it's worked out which one's closest this is well the nearest one is west",
    "start": "329680",
    "end": "334880"
  },
  {
    "text": "gates here which is the one in bradford and it's 14.4 kilometers away so that's",
    "start": "334880",
    "end": "340160"
  },
  {
    "text": "also pretty useful the other thing we could do is say well let's imagine that we weren't in the",
    "start": "340160",
    "end": "345440"
  },
  {
    "text": "midst of a pandemic let's imagine the car parks are really full because people are actually going places",
    "start": "345440",
    "end": "351039"
  },
  {
    "text": "and so i've tried to go to a car park all the car parks are full so i'm going to set an alert tell me when a car park becomes",
    "start": "351039",
    "end": "356960"
  },
  {
    "text": "available that's actually got some spaces now because this is live data and because all car parks have got lots of",
    "start": "356960",
    "end": "363759"
  },
  {
    "text": "space at the moment i'm gonna cheat a little bit imagine that it's me and 999 friends so actually",
    "start": "363759",
    "end": "369600"
  },
  {
    "text": "we need a thousand spaces free if i put like one space then all the car parks are gonna come back and get like",
    "start": "369600",
    "end": "375440"
  },
  {
    "text": "a bunch of different cuts so let's say tell me when a car pack becomes available with more than a thousand spaces in so",
    "start": "375440",
    "end": "382240"
  },
  {
    "text": "now it's going to tell me when a car park becomes available with more than a thousand spaces so now",
    "start": "382240",
    "end": "387520"
  },
  {
    "text": "we get the event driven alert side of things so it's a trigger with set of thresholds",
    "start": "387520",
    "end": "392560"
  },
  {
    "text": "and when it receives a notification like it just did then that like this car packs recorded in its data",
    "start": "392560",
    "end": "397680"
  },
  {
    "text": "it's okay this car pack here it's gone over that threshold it's got more than a thousand available",
    "start": "397680",
    "end": "402800"
  },
  {
    "text": "so it tells the user about it and you can see this in the back end here it's actually written",
    "start": "402800",
    "end": "407840"
  },
  {
    "text": "using sql statements to express it so that's the kind of thing that we've built in terms of the telegram bot",
    "start": "407840",
    "end": "414479"
  },
  {
    "text": "now i'm going to go and cancel the kill the bot at the back end here otherwise we'll keep on getting notifications during this talk which will be",
    "start": "414479",
    "end": "420160"
  },
  {
    "text": "kind of distracting the thing i've built out using this same stream of",
    "start": "420160",
    "end": "425599"
  },
  {
    "text": "data as i say we're going to look at the back end in a moment is building some analytics around us so",
    "start": "425599",
    "end": "431520"
  },
  {
    "text": "for this i've taken that data and instead of kind of manifesting it out through telegram",
    "start": "431520",
    "end": "436560"
  },
  {
    "text": "itself instead we're streaming that same data into a back-end store i'm using elasticsearch here with cabana",
    "start": "436560",
    "end": "442960"
  },
  {
    "text": "on top to build ourselves a nice little real-time dashboard so we can see here we're looking at data for last like nine",
    "start": "442960",
    "end": "449199"
  },
  {
    "text": "hours or so you can see here at two o'clock this morning we had data from lots of different car parks",
    "start": "449199",
    "end": "454800"
  },
  {
    "text": "and then that bradford car park feed kind of went offline and so now we've just got data coming in from the leeds",
    "start": "454800",
    "end": "460080"
  },
  {
    "text": "car parks and you can see it's about six o'clock this morning people start driving into bradford city centre because obviously",
    "start": "460080",
    "end": "465840"
  },
  {
    "text": "some people are still out and about working like frontline workers so you can see the car park occupancy starts to",
    "start": "465840",
    "end": "471680"
  },
  {
    "text": "increase and it goes up here people start to go and park their cars i'll try to take a few cars out",
    "start": "471680",
    "end": "477120"
  },
  {
    "text": "and over here the number of spaces available goes down as more people more and more people going to park",
    "start": "477120",
    "end": "483680"
  },
  {
    "text": "we can plot it on a map so we've got the geolocation information here so if we zoom out we can see we've got car parks and bradford",
    "start": "483680",
    "end": "489280"
  },
  {
    "text": "your car parks and leads so for those of you who cannot have a very southern view of the the country here's",
    "start": "489280",
    "end": "495599"
  },
  {
    "text": "london down here and here's leeds and the west yorkshire up here now we can zoom back into that and we",
    "start": "495599",
    "end": "501680"
  },
  {
    "text": "can also do useful things with the data we can say like i'm just interested in a particular area",
    "start": "501680",
    "end": "507280"
  },
  {
    "text": "so you can actually draw a shape to say like just turn me back within this bit of leads here so i'm",
    "start": "507280",
    "end": "514320"
  },
  {
    "text": "going to click on that and hopefully that's going to build ourselves a little vertex around that so now we're filtering the data now we",
    "start": "514320",
    "end": "520880"
  },
  {
    "text": "can zoom in on that a little bit it says well here are the car packs just within the leads area so now we can look at those we've got a",
    "start": "520880",
    "end": "527040"
  },
  {
    "text": "little hotspot a little um heat map uh showing which car parks you've got the most spaces available and",
    "start": "527040",
    "end": "534000"
  },
  {
    "text": "so on so a bit of fun that you can do with the data it's actually quite interesting to analyze this if you zoom all the way out it's like",
    "start": "534000",
    "end": "540480"
  },
  {
    "text": "let's let's just do that because it is actually pretty interesting so let's get rid of that filter we can actually look",
    "start": "540480",
    "end": "545839"
  },
  {
    "text": "at the data historically so let's say let's look at the data for the last about two years of the data",
    "start": "545839",
    "end": "551680"
  },
  {
    "text": "and apply that and you can see what happens back here so this is the",
    "start": "551680",
    "end": "556880"
  },
  {
    "text": "number of empty spaces so the lower the number the more spaces are occupied and you can see this is what it looked like",
    "start": "556880",
    "end": "562720"
  },
  {
    "text": "in before times and then we go along here and we got this time a year ago and then we got the uk lockdown in march",
    "start": "562720",
    "end": "569519"
  },
  {
    "text": "last year and then since then just like loads and loads of parking spaces because people weren't going anywhere",
    "start": "569519",
    "end": "575120"
  },
  {
    "text": "and you can see it eased off a bit in the summer and then we locked down again and suddenly no one was parking anywhere",
    "start": "575120",
    "end": "580640"
  },
  {
    "text": "so the data we've got here is pretty interesting i find it interesting anyway you can use it for doing analytics and",
    "start": "580640",
    "end": "586640"
  },
  {
    "text": "build out with dashboards like this you can also use it for driving applications so let's close that down and let's",
    "start": "586640",
    "end": "593200"
  },
  {
    "text": "actually go and have a look at what we've built here so the oops not on that one actually",
    "start": "593200",
    "end": "599120"
  },
  {
    "start": "597000",
    "end": "761000"
  },
  {
    "text": "gonna have a look at the uh the things itself let's take a step back from kind of like the demo",
    "start": "599120",
    "end": "605200"
  },
  {
    "text": "itself and the graphs and stuff like that let's go and have a look at the telegram piece to start with so i'm going to show",
    "start": "605200",
    "end": "610240"
  },
  {
    "text": "you the telegram box um it's written in go so go was a project of mine to learn last year it's like i was going to say",
    "start": "610240",
    "end": "616640"
  },
  {
    "text": "it was locked down we had loads of time i've got two kids i don't have loads of time and i didn't get to go and watch all the box sets on netflix but i did get to go",
    "start": "616640",
    "end": "623839"
  },
  {
    "text": "and teach myself go and if we're gonna have a look at the code for the telegram box we can have a little look through how it",
    "start": "623839",
    "end": "630320"
  },
  {
    "text": "was done now as i say i've just taught myself go so there are probably a bunch of errors in this",
    "start": "630320",
    "end": "635600"
  },
  {
    "text": "but hey it works which is just about good enough for me so within the go routine we can see we",
    "start": "635600",
    "end": "642240"
  },
  {
    "text": "pull in the telegram apis nice third-party library that someone's written wrapping around the telegram api",
    "start": "642240",
    "end": "648880"
  },
  {
    "text": "and then we authorize ourselves to the telegram service so when you want to write a telegram bot you go to something called the bot",
    "start": "648880",
    "end": "655120"
  },
  {
    "text": "father it's called godfather style icon and you say i'd like to create a bot and it gives you an api token",
    "start": "655120",
    "end": "661360"
  },
  {
    "text": "so we put our api token in there and there's a bit of vlog information they've authorized on that account",
    "start": "661360",
    "end": "666880"
  },
  {
    "text": "and then we say to telegram i would like to subscribe to a channel of updates so anytime someone sends a message to my",
    "start": "666880",
    "end": "673120"
  },
  {
    "text": "boss i'd like to receive that update and then we just loop we say let's find let's kind of",
    "start": "673120",
    "end": "678320"
  },
  {
    "text": "sit here until we get an update updates come through in different forms so you get the the",
    "start": "678320",
    "end": "683839"
  },
  {
    "text": "message text and you get the chat id and then you get different types so you know we've got a switch statement",
    "start": "683839",
    "end": "689440"
  },
  {
    "text": "here which goes through the different types of rescues you can get you can get a command so like slash",
    "start": "689440",
    "end": "694480"
  },
  {
    "text": "start is a command slash alert like we saw in the car park say like when there's more than a thousand spaces that's also",
    "start": "694480",
    "end": "700800"
  },
  {
    "text": "a command so you can say well based on the type of command we're going to send a different thing so if we send start or help send them a",
    "start": "700800",
    "end": "707120"
  },
  {
    "text": "sarcastic message they say alert like this is just like a boilerplate thing that i put together before we put all the actual car pack",
    "start": "707120",
    "end": "714079"
  },
  {
    "text": "stuff into it so testing out the different types of commands you can also say well if you send through a location so the",
    "start": "714079",
    "end": "721440"
  },
  {
    "text": "location bit looks like this so the uh the type of location it comes through and it's not null",
    "start": "721440",
    "end": "726480"
  },
  {
    "text": "just say okay we've got more location and we can do some processing based around that and if they've not",
    "start": "726480",
    "end": "731839"
  },
  {
    "text": "sent us a location or a command in our case we're going to say right we'll just default to this",
    "start": "731839",
    "end": "737279"
  },
  {
    "text": "but you can also do things like handle files and i think it can also do some other paper things but we're just going to say if it's not",
    "start": "737279",
    "end": "743040"
  },
  {
    "text": "command if it's not a location then we'll just echo it back to them and send them",
    "start": "743040",
    "end": "748160"
  },
  {
    "text": "a copy of what they sent us so this actually can have the shell for building the telegram bot and then",
    "start": "748160",
    "end": "754720"
  },
  {
    "text": "around that we just write some more code which hooks out into that back end so let's have a look at that back end",
    "start": "754720",
    "end": "760880"
  },
  {
    "text": "now the back end is built around the data coming in from this public api so the",
    "start": "760880",
    "end": "767440"
  },
  {
    "start": "761000",
    "end": "1091000"
  },
  {
    "text": "public api is this here and as i say it's broken at the moment unless it's going to pick up again",
    "start": "767440",
    "end": "773200"
  },
  {
    "text": "during this demo so it's from this particular endpoint here there's no authorization needed it's a public endpoint it's uh open government license",
    "start": "773200",
    "end": "780720"
  },
  {
    "text": "and you can see here we get a csv dumpback you got a header on there and then you got to a date you got a",
    "start": "780720",
    "end": "787200"
  },
  {
    "text": "time so 2 29 this morning is when it kind of went bang and then you got the different car packs the capacity the empty places",
    "start": "787200",
    "end": "794480"
  },
  {
    "text": "the latitude and longitude so just useful information about car parks it's not particularly complex api but it is a useful one",
    "start": "794480",
    "end": "802800"
  },
  {
    "text": "what we're going to do with this since it's a series of events we're going to stream this data into",
    "start": "802800",
    "end": "808160"
  },
  {
    "text": "kafka and kafka is going to become our store of these events that we're going to be able to use",
    "start": "808160",
    "end": "813519"
  },
  {
    "text": "to process and drive alerting to build state from that we can query and also to pass on",
    "start": "813519",
    "end": "819920"
  },
  {
    "text": "downstream to build out analytics but kafka becomes a platform which around which we build these things and",
    "start": "819920",
    "end": "825839"
  },
  {
    "text": "i'll talk a little bit later on about why i've made that choice so to get that data in",
    "start": "825839",
    "end": "831360"
  },
  {
    "text": "to get that csv dump into kafka i'm actually going to use a little bit of a kind of a shortcut",
    "start": "831360",
    "end": "836720"
  },
  {
    "text": "method i'm going to say we're going to take that output from the api i'm going to strip off the",
    "start": "836720",
    "end": "841760"
  },
  {
    "text": "header to start with because that header isn't so that in kafka a message is an event so this particular here this",
    "start": "841760",
    "end": "849440"
  },
  {
    "text": "car park is reporting at a certain time that's an event whereas a header line like that that's",
    "start": "849440",
    "end": "856000"
  },
  {
    "text": "not an event that's metadata that we need separately but we do need it separately i'll talk about how we use it but we don't want to",
    "start": "856000",
    "end": "862160"
  },
  {
    "text": "put that on to the topic so instead we're going to do this we're going to say take the uh the curl statement take the",
    "start": "862160",
    "end": "870160"
  },
  {
    "text": "api output and pipe it through tail and tail is simply going to strip off",
    "start": "870160",
    "end": "875199"
  },
  {
    "text": "the header so it says start from the second row of data and now we just have the actual data",
    "start": "875199",
    "end": "880480"
  },
  {
    "text": "messages themselves and then we pipe that through kafka cat",
    "start": "880480",
    "end": "886560"
  },
  {
    "text": "and if you know kafka already then you may be familiar with kafka cat if you're not then go and check it out it's amazing",
    "start": "886560",
    "end": "892320"
  },
  {
    "text": "if you're not familiar with kafka then kafka cat is a useful tool to get to know once you get to know kafka it lets you",
    "start": "892320",
    "end": "897920"
  },
  {
    "text": "pipe data in unless you pipe data out so here we're going to say",
    "start": "897920",
    "end": "903440"
  },
  {
    "text": "take the data from the api strip off the header and then pipe that into this tool called",
    "start": "903440",
    "end": "909360"
  },
  {
    "text": "kafkacap which is going to produce it into my kafka broker on this particular topic dash t makes it",
    "start": "909360",
    "end": "916160"
  },
  {
    "text": "behave like a linux t command so it sends it to that thing but it also echoes it to stand it out",
    "start": "916160",
    "end": "921680"
  },
  {
    "text": "so we get to see this is what it's just sent over that kafka topic",
    "start": "921680",
    "end": "927120"
  },
  {
    "text": "so now we've got a kafka topic with this data flowing into it so let's now head over to a tool called",
    "start": "927120",
    "end": "934399"
  },
  {
    "text": "key sequel db here sql db is community licensed it's developed in europe and it's part of",
    "start": "934399",
    "end": "940800"
  },
  {
    "text": "confluent platform and it lets you write stream processing against your data in kafka so here",
    "start": "940800",
    "end": "948079"
  },
  {
    "text": "you've got the little tagline it says an event streaming database purpose built for stream processing applications and it lets you do two",
    "start": "948079",
    "end": "954079"
  },
  {
    "text": "key things it lets you do streaming etl and say i've got streams of data arriving i would like to manipulate them",
    "start": "954079",
    "end": "960720"
  },
  {
    "text": "and transform them and write them back onto enriched after topics it also lets you build state stars",
    "start": "960720",
    "end": "968480"
  },
  {
    "text": "against your data your streams of data you can then query directly i'm going to do both of those",
    "start": "968480",
    "end": "973920"
  },
  {
    "text": "here i'll just flag up what it doesn't do is ad hoc analytics it's not designed",
    "start": "973920",
    "end": "980160"
  },
  {
    "text": "just because it says sequel in the name of it it's not designed for like here's all my big data in kafka over like many many",
    "start": "980160",
    "end": "986320"
  },
  {
    "text": "years i'm gonna start doing ad hoc like data warehousing type queries it's not designed for that that's why you stream the data onwards",
    "start": "986320",
    "end": "993120"
  },
  {
    "text": "and do that somewhere else it's not designed for that but for doing real-time stream processing for building",
    "start": "993120",
    "end": "998480"
  },
  {
    "text": "state stores that you can query within it then it's perfect for that so let's what we're going to do is we're",
    "start": "998480",
    "end": "1005440"
  },
  {
    "text": "going to say let's create ourselves within kc called an object that describes that data in",
    "start": "1005440",
    "end": "1012720"
  },
  {
    "text": "kafka so the data in kafka looks like this say show topics we've got a topic called car",
    "start": "1012720",
    "end": "1017920"
  },
  {
    "text": "packs we can print that's a topic and it will say let's uh i'll tell you what we're going",
    "start": "1017920",
    "end": "1022959"
  },
  {
    "text": "to do we're going to head over i'm going to take that curl output and we're going to stick it into a little loop",
    "start": "1022959",
    "end": "1029280"
  },
  {
    "text": "which says every 30 seconds it's just going to dump data into the topic to get that kind of data flowing",
    "start": "1029280",
    "end": "1035678"
  },
  {
    "text": "through the api only refreshes every three minutes so if i'll do it every 30 seconds or 10 seconds we're just going",
    "start": "1035679",
    "end": "1040880"
  },
  {
    "text": "to get duplicate messages but for the purpose of this this is kind of fun",
    "start": "1040880",
    "end": "1046319"
  },
  {
    "text": "so we're in kc 4db we're looking at the data in the topic and we said print data in the topic and it's coming",
    "start": "1046319",
    "end": "1052799"
  },
  {
    "text": "through now so we've got our data in the topic and it's just raw data traffic messages are just bytes",
    "start": "1052799",
    "end": "1059360"
  },
  {
    "text": "kafka doesn't care how you serialize that data so that's our first task at hand",
    "start": "1059360",
    "end": "1064400"
  },
  {
    "text": "is to say well we've just got a bunch of like comma separated values which are actually not the easiest",
    "start": "1064400",
    "end": "1069600"
  },
  {
    "text": "things to work with because like commas here and commas there like that comma there within the latitude longitude or within",
    "start": "1069600",
    "end": "1075360"
  },
  {
    "text": "the url that's actually a bit fiddly because that's a comma but it's not a separator",
    "start": "1075360",
    "end": "1080640"
  },
  {
    "text": "so let's get that data out of just like a big long string of kind of separated let's apply a schema",
    "start": "1080640",
    "end": "1086640"
  },
  {
    "text": "to it because we're going to use sql in a moment and sql needs a schema so this is what",
    "start": "1086640",
    "end": "1092400"
  },
  {
    "text": "we're going to do we're going to say let's create a stream called car park source and here is our",
    "start": "1092400",
    "end": "1099840"
  },
  {
    "text": "schema here is that metadata from that header row in that csv that we got through",
    "start": "1099840",
    "end": "1106320"
  },
  {
    "text": "previously so we stripped that header out to ingest and we sent it into the topic and i said well we need that data that",
    "start": "1106320",
    "end": "1112640"
  },
  {
    "text": "metadata and we're going to use it later here's where we're going to use it here is the definition of that data in",
    "start": "1112640",
    "end": "1118799"
  },
  {
    "text": "that source it's got a date it's got a time it's a varchar it's an int it's a double or whatever",
    "start": "1118799",
    "end": "1124160"
  },
  {
    "text": "it comes from this particular topic and it's delimited you could change the delimiter if it was tab or semicolon separated but by",
    "start": "1124160",
    "end": "1130960"
  },
  {
    "text": "default it's comma separated so now we've defined a stream",
    "start": "1130960",
    "end": "1136320"
  },
  {
    "text": "on top of that data we're not duplicating the data or doing anything like that we're simply saying",
    "start": "1136320",
    "end": "1141520"
  },
  {
    "text": "here is this kafka topic i would like to read it in this way apply this schema to that topic and what it means is we",
    "start": "1141520",
    "end": "1148080"
  },
  {
    "text": "can then query it we can say let's go back to the beginning of the topic so set offsets reset to earliest means go",
    "start": "1148080",
    "end": "1155440"
  },
  {
    "text": "back to the beginning of the topic kafka stores data when we write data into kafka it's stored it's kept for us",
    "start": "1155440",
    "end": "1163760"
  },
  {
    "text": "so we can say go back to the beginning of that topic and then query the data we're just going",
    "start": "1163760",
    "end": "1168880"
  },
  {
    "text": "to select the first five rows of data but now instead of saying which was print topic just like dump all the",
    "start": "1168880",
    "end": "1174960"
  },
  {
    "text": "messages we can say now apply a projection to that data so we say select this field and that",
    "start": "1174960",
    "end": "1181520"
  },
  {
    "text": "field and that field from this stream the stream is just defined on top of",
    "start": "1181520",
    "end": "1186720"
  },
  {
    "text": "that topic it says okay here are the first five rows from that particular topic you can see",
    "start": "1186720",
    "end": "1192559"
  },
  {
    "text": "here this particular date in this particular time it was for this car pack and this is how many empty places there were",
    "start": "1192559",
    "end": "1199360"
  },
  {
    "text": "so we're querying after topics and we're doing so by having defined that schema",
    "start": "1199360",
    "end": "1204480"
  },
  {
    "text": "on top of them but we need to do a bit more than this with the data so for example if we look at that data",
    "start": "1204480",
    "end": "1211280"
  },
  {
    "text": "we've got a couple of string fields here one's called date one's called time now you and i will eyeball that and say",
    "start": "1211280",
    "end": "1217600"
  },
  {
    "text": "oh that's a date time field kind of like i guess that we can use that for doing date time um arithmetic",
    "start": "1217600",
    "end": "1222799"
  },
  {
    "text": "and drawing time series graphs and so on but to a computer that's just like strings",
    "start": "1222799",
    "end": "1228080"
  },
  {
    "text": "we need to explain to it here's how you model it here's how you manipulate that data to make an actual time stamp field",
    "start": "1228080",
    "end": "1235039"
  },
  {
    "text": "what's the time zone on it and so on we also want to do a few other things we want to take the latitude and",
    "start": "1235039",
    "end": "1241360"
  },
  {
    "text": "longitude and create that into an object so that can be used properly downstream so this is where we do our streaming",
    "start": "1241360",
    "end": "1247840"
  },
  {
    "text": "transformations so that looks like this copy the thing in and then we're going to walk through",
    "start": "1247840",
    "end": "1253120"
  },
  {
    "text": "it all of this code by the way i will share afterwards it's up on github you can go and check it out um so you can actually build this out",
    "start": "1253120",
    "end": "1259200"
  },
  {
    "text": "it's an open api so you can build it out and run it for yourself if you'd like to so",
    "start": "1259200",
    "end": "1264400"
  },
  {
    "text": "again we're going to say set the offsets to the earliest process all of the data in the topic and now",
    "start": "1264400",
    "end": "1270080"
  },
  {
    "text": "we're going to do a create stream again before we make the create stream we declared a stream on top of a topic",
    "start": "1270080",
    "end": "1278640"
  },
  {
    "text": "now creating a stream and we're going to populate a new topic with the results of",
    "start": "1278640",
    "end": "1286159"
  },
  {
    "text": "this select statement in the database world for many many years we've said",
    "start": "1286159",
    "end": "1291200"
  },
  {
    "text": "create table i'll select create a new table with the results of this select against some others create one static",
    "start": "1291200",
    "end": "1298799"
  },
  {
    "text": "copy of the data based on another copy of the static data from over there in the streaming world we can say create",
    "start": "1298799",
    "end": "1306000"
  },
  {
    "text": "a new stream based on the continual output of a query against another stream",
    "start": "1306000",
    "end": "1311919"
  },
  {
    "text": "so we've got our carpark events arrived in our raw csv form we're applying a schema to them we're",
    "start": "1311919",
    "end": "1317440"
  },
  {
    "text": "going to apply some manipulations in a moment which i'll walk through and as those events arrive from the",
    "start": "1317440",
    "end": "1322799"
  },
  {
    "text": "source they pass through that flow and get written out to a new kafka topic so that's what we're doing here so let's",
    "start": "1322799",
    "end": "1330320"
  },
  {
    "text": "see the kind of things that we're doing to it we're taking that csv data that moves raw strings of comma separated",
    "start": "1330320",
    "end": "1336880"
  },
  {
    "text": "data and we say well we've declared the schema we declared the schema up here when we said",
    "start": "1336880",
    "end": "1341919"
  },
  {
    "text": "create stream and here is my schema so we've declared that schema now let's persist it we're",
    "start": "1341919",
    "end": "1348720"
  },
  {
    "text": "going to say write the new data out to a new topic and serialize it using protobuf",
    "start": "1348720",
    "end": "1354559"
  },
  {
    "text": "i could have i could use json schema but we're going to write that data to the target topic and the schema",
    "start": "1354559",
    "end": "1361919"
  },
  {
    "text": "is going to get stored up in the schema registry so when someone else comes to use that",
    "start": "1361919",
    "end": "1366960"
  },
  {
    "text": "data the schema is available to them they don't have to go and eyeball it and can like type the fields in again and do",
    "start": "1366960",
    "end": "1372240"
  },
  {
    "text": "sorts of stuff like that we've got a schema to the data we persist that schema that makes our applications much more resilient and",
    "start": "1372240",
    "end": "1378960"
  },
  {
    "text": "easier to evolve and develop across different distributed teams we're saying let's take that date and",
    "start": "1378960",
    "end": "1384880"
  },
  {
    "text": "time let's get into a suitable format let's apply a time zone to it and we'll actually turn it into a time stamp",
    "start": "1384880",
    "end": "1391120"
  },
  {
    "text": "object so in pc db it stores it as a as a big int the number of milliseconds",
    "start": "1391120",
    "end": "1396720"
  },
  {
    "text": "since the unix epoch but it's now a timestamp object we pull in all of these to see fields",
    "start": "1396720",
    "end": "1403440"
  },
  {
    "text": "and then we also create an object to hold the location so creating a nested",
    "start": "1403440",
    "end": "1408720"
  },
  {
    "text": "struct here so with a latitude and long longitude values we're doing a calculation we say well as",
    "start": "1408720",
    "end": "1414400"
  },
  {
    "text": "this data passes through let's work out the percentage full of that data so take this from fast and cast it as a",
    "start": "1414400",
    "end": "1420880"
  },
  {
    "text": "double and make it a percentage so we can also create those derivations on the data as it arrives",
    "start": "1420880",
    "end": "1426400"
  },
  {
    "text": "in the system and then we're adding some lineage information we're saying well this is the api from which the data came",
    "start": "1426400",
    "end": "1432799"
  },
  {
    "text": "i mentioned briefly earlier this data is coming from a bradford council api there are other car park apis available",
    "start": "1432799",
    "end": "1438880"
  },
  {
    "text": "and it's a fairly standard entity definition it's a car park it's got a name how many spaces",
    "start": "1438880",
    "end": "1444720"
  },
  {
    "text": "has it got how many are occupied so you can actually get that same data from other apis",
    "start": "1444720",
    "end": "1450240"
  },
  {
    "text": "and because this is a logical entity we'll put it on the same logical stream and if time allows later",
    "start": "1450240",
    "end": "1455520"
  },
  {
    "text": "on i'll show you how to do that if not you can go and check out the full code online so we're creating this stream",
    "start": "1455520",
    "end": "1462240"
  },
  {
    "text": "it's going to go and query this source stream that we created that we've declared on top of that topic",
    "start": "1462240",
    "end": "1468240"
  },
  {
    "text": "and we're now going to populate a brand new kafka topic continually with all of the existing data that we've",
    "start": "1468240",
    "end": "1474080"
  },
  {
    "text": "got in that topic plus any new messages that arrive so that's going to go create that and we",
    "start": "1474080",
    "end": "1481679"
  },
  {
    "text": "can say just show streams and it says here are the streams we've",
    "start": "1481679",
    "end": "1486799"
  },
  {
    "text": "got one called car pack sort which is the original one on top of that car parks topic it's the limited format and here's the",
    "start": "1486799",
    "end": "1494159"
  },
  {
    "text": "new one we've created by default the kafka topic is of the same name we could override the top name",
    "start": "1494159",
    "end": "1499679"
  },
  {
    "text": "if we wanted to the key formats just in kafka it's just a string the value format we serialize the value as",
    "start": "1499679",
    "end": "1506720"
  },
  {
    "text": "protobuf i could say it should fix and you've got a topic here called car park events",
    "start": "1506720",
    "end": "1512000"
  },
  {
    "text": "that's the one that we want to created we could have overwritten the partition counts the replica accounts as well if we wanted to it just",
    "start": "1512000",
    "end": "1517840"
  },
  {
    "text": "sticks with some defaults otherwise so if we say describe carpark events you can see here",
    "start": "1517840",
    "end": "1525840"
  },
  {
    "text": "the schema for it you've got all those different values you've got the existing data that came through plus the new fields that we've created",
    "start": "1525840",
    "end": "1532159"
  },
  {
    "text": "like location and percentage full i could say select from that stream",
    "start": "1532159",
    "end": "1538960"
  },
  {
    "text": "i'll say changes and now you can see that data as it's arriving so unfortunately because the",
    "start": "1538960",
    "end": "1546000"
  },
  {
    "text": "api is bust you can't actually see the changes in the data like that time is just going",
    "start": "1546000",
    "end": "1551520"
  },
  {
    "text": "to stick at 229 until it kind of unbreaks itself but take my word for it it does actually",
    "start": "1551520",
    "end": "1557760"
  },
  {
    "text": "work you can see it in the charts that i showed you you can see it from a different api if we get onto that later on as new",
    "start": "1557760",
    "end": "1563200"
  },
  {
    "text": "messages arrive from the source they pass through this enrichment pipeline and onto the new",
    "start": "1563200",
    "end": "1568840"
  },
  {
    "text": "topic we can use that topic for doing lots of different things that",
    "start": "1568840",
    "end": "1573919"
  },
  {
    "start": "1571000",
    "end": "1636000"
  },
  {
    "text": "topic as it stands now is kind of like it's a cleansed set of data and a rich set of data",
    "start": "1573919",
    "end": "1579279"
  },
  {
    "text": "we can stream that on down to elasticsearch i'll show you that in a moment but first",
    "start": "1579279",
    "end": "1584799"
  },
  {
    "text": "off let me show you how we can use that data to actually build state within it",
    "start": "1584799",
    "end": "1589840"
  },
  {
    "text": "because if you think of those stream of events within that stream of events you've got a key which is the car park name",
    "start": "1589840",
    "end": "1596480"
  },
  {
    "text": "and you've got a bunch of events relating to that key so you could say well for that particular key what's the",
    "start": "1596480",
    "end": "1602240"
  },
  {
    "text": "latest value for it for that particular car park called westgate what's the latest value for a",
    "start": "1602240",
    "end": "1607919"
  },
  {
    "text": "number of spaces available do you get a bunch of different updates but what's the latest value what's the state if we put this in a",
    "start": "1607919",
    "end": "1614000"
  },
  {
    "text": "relational database and queried like select spaces from car pack where t",
    "start": "1614000",
    "end": "1619440"
  },
  {
    "text": "where uh name equals westgate you would say well here is the state that's what we store in relational databases we store",
    "start": "1619440",
    "end": "1624880"
  },
  {
    "text": "state and from streams of events we can do stream processing we can do event driven",
    "start": "1624880",
    "end": "1630880"
  },
  {
    "text": "alerting but we can also build state so let me show you that",
    "start": "1630880",
    "end": "1635919"
  },
  {
    "text": "if i query that stream of events and say for this particular car park again we're using westgate as the example",
    "start": "1635919",
    "end": "1642720"
  },
  {
    "text": "show me the events query that stream says well for this particular car park here we've got the different events they're all the",
    "start": "1642720",
    "end": "1648720"
  },
  {
    "text": "same because the api is not changing but you've got different events so imagine the api is working so you would",
    "start": "1648720",
    "end": "1654080"
  },
  {
    "text": "have it 229 it was this at 231 it was 113 it's",
    "start": "1654080",
    "end": "1659120"
  },
  {
    "text": "233 it was 110 or whatever but events varying for that particular car park but we can",
    "start": "1659120",
    "end": "1665919"
  },
  {
    "text": "say well let's create ourselves a table so in case you call d3",
    "start": "1665919",
    "end": "1671039"
  },
  {
    "text": "you have two different types of objects you have a stream which is an unbounded series of events",
    "start": "1671039",
    "end": "1676080"
  },
  {
    "text": "basically like a kafka topic but with a schema you all have a table which is",
    "start": "1676080",
    "end": "1681120"
  },
  {
    "text": "actually a kafka topic with a schema but the current state so let's go and create that we're",
    "start": "1681120",
    "end": "1688399"
  },
  {
    "text": "going to say well let's process all of the data so go back to the earliest point create a table we're going to use name",
    "start": "1688399",
    "end": "1694720"
  },
  {
    "text": "as our key we do a group by name and then we say let's take the latest value by offset so within the log",
    "start": "1694720",
    "end": "1701760"
  },
  {
    "text": "they've got an offset take the latest value for that capacity we can do an average as well so our",
    "start": "1701760",
    "end": "1706880"
  },
  {
    "text": "aggregations here we could do min we could do maps whichever aggregation you want to use so",
    "start": "1706880",
    "end": "1712720"
  },
  {
    "text": "that's now building a table within case equal db you can say show tables and it says",
    "start": "1712720",
    "end": "1718720"
  },
  {
    "text": "you've got a table called car pack the table is backed by a kafka topic",
    "start": "1718720",
    "end": "1724559"
  },
  {
    "text": "so our kafka topic is also called car park but we've now got a table that holds state but it's built from",
    "start": "1724559",
    "end": "1732159"
  },
  {
    "text": "a stream of events we finished off i was about to launch into",
    "start": "1732159",
    "end": "1737279"
  },
  {
    "text": "a little excited about streams and table duality it's really important but i'll mention it later i don't want to get distracted from this",
    "start": "1737279",
    "end": "1743520"
  },
  {
    "text": "but what we can do now is we can say select the latest timestamp the number",
    "start": "1743520",
    "end": "1750320"
  },
  {
    "start": "1746000",
    "end": "2191000"
  },
  {
    "text": "of empty places currently the average empty places from car park from our table where the",
    "start": "1750320",
    "end": "1755520"
  },
  {
    "text": "name is westgate that says well this is the current state for that if the api was working we could",
    "start": "1755520",
    "end": "1761200"
  },
  {
    "text": "refresh the data and they'd say well actually the state has now changed but the point is we're doing a select against the table and it says this is",
    "start": "1761200",
    "end": "1768000"
  },
  {
    "text": "the current state notice it says query terminated the other queries that i ran before i",
    "start": "1768000",
    "end": "1774960"
  },
  {
    "text": "said emit changes basically i'd like to subscribe to the changes as they happen within that",
    "start": "1774960",
    "end": "1780320"
  },
  {
    "text": "stream or within that angle if i say emit changes it's going to say well here is the state that table when the state changes i will",
    "start": "1780320",
    "end": "1787440"
  },
  {
    "text": "tell you about it but it says down here press ctrl c to interrupt subscribing to a stream of changing in",
    "start": "1787440",
    "end": "1794720"
  },
  {
    "text": "this way which is also useful but not necessarily what we want sometimes we want to look up the state",
    "start": "1794720",
    "end": "1800799"
  },
  {
    "text": "for a given key what's the current value that's what we can do here against that table also so from a basic",
    "start": "1800799",
    "end": "1808240"
  },
  {
    "text": "stream of events you can actually query state we can query it from within k sql db",
    "start": "1808240",
    "end": "1814960"
  },
  {
    "text": "we can also query it from outside kc or db so let me show you that i'm going to",
    "start": "1814960",
    "end": "1820640"
  },
  {
    "text": "take the same query that we ran before let's move that up to the top of the screen i'm just going to use curl here you",
    "start": "1820640",
    "end": "1826480"
  },
  {
    "text": "could use postman or whatever or however you want to call your rest apis but here we're going to the key sql db",
    "start": "1826480",
    "end": "1832480"
  },
  {
    "text": "server so this is i've not got any other infrastructure here other than kafka and kc db and scheme registry but it's",
    "start": "1832480",
    "end": "1840399"
  },
  {
    "text": "all built around that there's no other external data stores so this is potentially the magic moments",
    "start": "1840399",
    "end": "1846880"
  },
  {
    "text": "for some people when they see this because they assume well you're querying state so you're doing your stream processing and then i guess you're",
    "start": "1846880",
    "end": "1852480"
  },
  {
    "text": "sticking it in like a sql store or a relational database for the application to query",
    "start": "1852480",
    "end": "1858240"
  },
  {
    "text": "actually what we're doing is we're saying as these events arrive we're going to manipulate them and we can build and persist that state",
    "start": "1858240",
    "end": "1864880"
  },
  {
    "text": "within case equal db in case equal db is distributed and scalable and fault tolerance",
    "start": "1864880",
    "end": "1870799"
  },
  {
    "text": "so that then becomes your point from which your applications can query the state so we're going",
    "start": "1870799",
    "end": "1877360"
  },
  {
    "text": "against kc equal db we're running our sql query so select the latest timestamp empty places and so",
    "start": "1877360",
    "end": "1882559"
  },
  {
    "text": "on from car pack we'll open it through the gqueue just kind of make it a bit more readable",
    "start": "1882559",
    "end": "1888159"
  },
  {
    "text": "um let's just do that make the window a little bit bigger so you can see our latest timestamp is a",
    "start": "1888159",
    "end": "1893200"
  },
  {
    "text": "string empty places integer and here are our particular values there's 229 i'm going to get 16 229 but",
    "start": "1893200",
    "end": "1900320"
  },
  {
    "text": "we'll stop with it but we can query from an external application what we do in the telegram bot the",
    "start": "1900320",
    "end": "1906480"
  },
  {
    "text": "telegram box is a community library for go that hooks up to k sql db",
    "start": "1906480",
    "end": "1912240"
  },
  {
    "text": "and lets you run queries against the state held within k sql db we can also do",
    "start": "1912240",
    "end": "1920320"
  },
  {
    "text": "event driven alerts so as well as looking up the state we can say i'd like to subscribe to a",
    "start": "1920320",
    "end": "1926159"
  },
  {
    "text": "stream of changes so in this example here we can say we're going to select from",
    "start": "1926159",
    "end": "1933519"
  },
  {
    "text": "the car park events where for a particular car park it has some available spaces",
    "start": "1933519",
    "end": "1939279"
  },
  {
    "text": "now we all know this is definitely going to come back with something because all the car parks have got available spaces but what we're doing here is",
    "start": "1939279",
    "end": "1946320"
  },
  {
    "text": "let's move this down a little bit we're going to say set the offset to the latest which means go to the end",
    "start": "1946320",
    "end": "1952399"
  },
  {
    "text": "of the topic and tell me when anything changes subsequently if we go back to the beginning of the topic we would find out",
    "start": "1952399",
    "end": "1958640"
  },
  {
    "text": "over time when this car park had available spaces instead we're saying as of now tell me",
    "start": "1958640",
    "end": "1965360"
  },
  {
    "text": "when it does have spaces available so we run that and next time we get data in from the api",
    "start": "1965360",
    "end": "1971679"
  },
  {
    "text": "we'll get a message over here so i'm just going to trigger the api to refresh just as uh keep things moving along to get data",
    "start": "1971679",
    "end": "1978559"
  },
  {
    "text": "flowing into the system it gets enriched it gets passed through onto that target topic and we should see",
    "start": "1978559",
    "end": "1984240"
  },
  {
    "text": "any moment now data appearing onto the results of that query so you can see the data has come",
    "start": "1984240",
    "end": "1989360"
  },
  {
    "text": "through there's got all 2 29 in the morning it holds 611 cars i've got 610",
    "start": "1989360",
    "end": "1995360"
  },
  {
    "text": "empty spaces so we can run that query from within kc db and here's our emit change as we",
    "start": "1995360",
    "end": "2001519"
  },
  {
    "text": "say i don't like i would like to subscribe to that stream of changes we've specified our predicate",
    "start": "2001519",
    "end": "2007600"
  },
  {
    "text": "select our values or did fields from this stream of data where our predicate is true and it",
    "start": "2007600",
    "end": "2014480"
  },
  {
    "text": "changes every time that predicate is matched based on an incoming message so like we",
    "start": "2014480",
    "end": "2019760"
  },
  {
    "text": "could be filtering a stream of um system generated events and we've got an sla for a particular error threshold",
    "start": "2019760",
    "end": "2026080"
  },
  {
    "text": "when the number of errors is greater than this then send that particular message and we can",
    "start": "2026080",
    "end": "2031840"
  },
  {
    "text": "also use the rest api to query that same stream so again we're going to do this",
    "start": "2031840",
    "end": "2038320"
  },
  {
    "text": "down here in bash we're going to use curl to call that same rest api this is equal db rest",
    "start": "2038320",
    "end": "2044799"
  },
  {
    "text": "api with our select statement again it make changes",
    "start": "2044799",
    "end": "2050240"
  },
  {
    "text": "and if we try to refresh that subscribing to those changes the data comes in the data passes into",
    "start": "2050560",
    "end": "2056800"
  },
  {
    "text": "the kafka topic the kafka topic runs through the case equal db transformation and enrichments and then from kc db it emits out to the",
    "start": "2056800",
    "end": "2064878"
  },
  {
    "text": "calling client which here is our bash query but it could be your own application it could be the telegram boss using the",
    "start": "2064879",
    "end": "2070720"
  },
  {
    "text": "google library this is okay this particular event has matched our predicate and it emits it out",
    "start": "2070720",
    "end": "2075760"
  },
  {
    "text": "into that uh red query output",
    "start": "2075760",
    "end": "2081040"
  },
  {
    "text": "that'll come through any moment now it'll behave the same as it does up here live demo so maybe it won't the other",
    "start": "2082079",
    "end": "2088878"
  },
  {
    "text": "thing that we're going to do is we're going to stream that data out it looks like the network's gone offline",
    "start": "2088879",
    "end": "2095440"
  },
  {
    "text": "so that's not going to work okay so let's uh",
    "start": "2095440",
    "end": "2101280"
  },
  {
    "text": "let's see what we could also do here in term",
    "start": "2101280",
    "end": "2108240"
  },
  {
    "text": "can someone just know if my audio is working because my computer is telling me that my computer's gone offline",
    "start": "2111200",
    "end": "2131838"
  },
  {
    "text": "i think we have a problem with the connection so one sec",
    "start": "2148960",
    "end": "2159839"
  },
  {
    "text": "man try again to share your screen okay i think we lost you didn't we i are",
    "start": "2182480",
    "end": "2188400"
  },
  {
    "text": "you you lost me yeah here we go something weird captain so",
    "start": "2188400",
    "end": "2194320"
  },
  {
    "text": "all right my computer started flashing up soon i had no connection [Music] all um it looks like we're back can you",
    "start": "2194320",
    "end": "2201040"
  },
  {
    "text": "all see and hit me okay i can let me just check the",
    "start": "2201040",
    "end": "2207760"
  },
  {
    "text": "let's just check the chat real quick yeah everybody everybody can hear you that",
    "start": "2207760",
    "end": "2213520"
  },
  {
    "text": "was a bit weird to try to check if it was on our end so ready sorry i don't know i think so when i woke up this morning my",
    "start": "2213520",
    "end": "2219440"
  },
  {
    "text": "internet was not flying so i think it's just uh i don't know if you can hear the building work happening next door apologies for all the noise but it's uh",
    "start": "2219440",
    "end": "2224880"
  },
  {
    "text": "the joys are presenting from home right let's uh a quick recap because i think i lost you",
    "start": "2224880",
    "end": "2230000"
  },
  {
    "text": "just about here so i've showed you how you can do what are called pull queries where you can query",
    "start": "2230000",
    "end": "2235440"
  },
  {
    "text": "externally against the state held within a sequel db i'm sure doing that using the rest",
    "start": "2235440",
    "end": "2241040"
  },
  {
    "text": "api this is what are called push queries so i didn't use that word a minute ago but push queries where we're subscribing",
    "start": "2241040",
    "end": "2247920"
  },
  {
    "text": "to the stream of changes so a push query looks like this where we're saying from this particular stream",
    "start": "2247920",
    "end": "2253680"
  },
  {
    "text": "of data match this particular predicate and then send the changes",
    "start": "2253680",
    "end": "2258720"
  },
  {
    "text": "to the user and we can run that from within the k sql db interface we can also run it",
    "start": "2258720",
    "end": "2264880"
  },
  {
    "text": "using the k sql db rest api over here and the clients will receive that stream of changes",
    "start": "2264880",
    "end": "2270720"
  },
  {
    "text": "as the data varies so now the last thing to show you is actually how we can take that data",
    "start": "2270720",
    "end": "2277440"
  },
  {
    "text": "from within kafka and stream it over into elasticsearch so we can stream it to any",
    "start": "2277440",
    "end": "2284079"
  },
  {
    "text": "number of places i'm just using elasticsearch as an example and this is actually one of the great things about using kafka",
    "start": "2284079",
    "end": "2289599"
  },
  {
    "start": "2286000",
    "end": "2391000"
  },
  {
    "text": "because you can use the same data to satisfy multiple different requirements we've taken that csv data",
    "start": "2289599",
    "end": "2296720"
  },
  {
    "text": "and we've set the time stamp and we've serialized it in a sensible way to store the schema and we've built an object out of the",
    "start": "2296720",
    "end": "2302480"
  },
  {
    "text": "latitude longitude we've done a bunch of common transformations to that data which now multiple people could benefit",
    "start": "2302480",
    "end": "2309280"
  },
  {
    "text": "from so the application that we came along to build with a telegram bot showing when things have changed and so on",
    "start": "2309280",
    "end": "2315040"
  },
  {
    "text": "that is satisfied by this data that we've created but other teams may well also want that",
    "start": "2315040",
    "end": "2321040"
  },
  {
    "text": "data so other teams might want to build analytics against it or do data science queries against it wherever",
    "start": "2321040",
    "end": "2328079"
  },
  {
    "text": "they want the data we can provide it from kafka and because kafka stores data",
    "start": "2328079",
    "end": "2333920"
  },
  {
    "text": "that same data can be made available to multiple different targets completely independently we",
    "start": "2333920",
    "end": "2340560"
  },
  {
    "text": "don't start building tight couplings together saying well for this project here we built a one-to-one connection and now if you",
    "start": "2340560",
    "end": "2346160"
  },
  {
    "text": "want that data you will have to hook into that place that we put it so we're going to put it into a database",
    "start": "2346160",
    "end": "2351599"
  },
  {
    "text": "because that's what our application needs you can now query our database and then someone else can query you and then",
    "start": "2351599",
    "end": "2356960"
  },
  {
    "text": "someone else can query yeah we'll build a camera a nice little spaghetti big ball of mud instead we say",
    "start": "2356960",
    "end": "2362079"
  },
  {
    "text": "well an event happens so we stream it into kafka and from kafka we can build multiple",
    "start": "2362079",
    "end": "2367440"
  },
  {
    "text": "loosely coupled systems that can each evolve at their own rate so here's an example of how we can take",
    "start": "2367440",
    "end": "2372880"
  },
  {
    "text": "the data from kafka and stream it down to elasticsearch i'm going to use kafka connect so we're",
    "start": "2372880",
    "end": "2378720"
  },
  {
    "text": "going to say we're going to take the data from this particular topic i'm going to stream it down to",
    "start": "2378720",
    "end": "2384240"
  },
  {
    "text": "elasticsearch so k sequel db actors of wrapper around kafka connect you can use kafka",
    "start": "2384240",
    "end": "2389839"
  },
  {
    "text": "connect directory as well if you want to so we go and create that we can say show connectors",
    "start": "2389839",
    "end": "2395520"
  },
  {
    "start": "2391000",
    "end": "2496000"
  },
  {
    "text": "it says we created a connector and it's running which means if we then go and open up a cabana and say here's uh cabana on my",
    "start": "2395520",
    "end": "2403680"
  },
  {
    "text": "local machine we can also kind of like cheat and go and open up the kibana so i've got another version of this",
    "start": "2403680",
    "end": "2409440"
  },
  {
    "text": "parallel version of this that's running up in the cloud um on my local machine it's all on docker compose i can say let's kind of",
    "start": "2409440",
    "end": "2415920"
  },
  {
    "text": "take that data i've gone out of that old cadet and say we're going to filter it based on",
    "start": "2415920",
    "end": "2421680"
  },
  {
    "text": "time stamp i can go and start and analyze it",
    "start": "2421680",
    "end": "2428000"
  },
  {
    "text": "you can see here in the last uh 24 hours so it's all based around 229 obviously so you",
    "start": "2428560",
    "end": "2434160"
  },
  {
    "text": "can see here 229 got lots and lots of data that have come in from that source so",
    "start": "2434160",
    "end": "2439280"
  },
  {
    "text": "there's our name there's our latitude longitude but also down here so yeah let's zoom in",
    "start": "2439280",
    "end": "2444720"
  },
  {
    "text": "on that down here is our location object that will be built as a result of that transformation so the point of",
    "start": "2444720",
    "end": "2452319"
  },
  {
    "text": "using kafka is it can be as much or as little as you would like it to be it can be a simple message broker",
    "start": "2452319",
    "end": "2458240"
  },
  {
    "text": "between applications just like the data comes in the data goes out like pub sub not nothing much much rather than that",
    "start": "2458240",
    "end": "2464400"
  },
  {
    "text": "it stores the data so you can reuse it but we can also apply those transformations we can do simple",
    "start": "2464400",
    "end": "2469839"
  },
  {
    "text": "lightweight stuff like say as the data comes through build these two fields into an object write it out a",
    "start": "2469839",
    "end": "2474960"
  },
  {
    "text": "new topic and then on it goes focus how to do much more complicated stuff and filtering and aggregating",
    "start": "2474960",
    "end": "2480640"
  },
  {
    "text": "and all sorts of things like that so we've got the data in elasticsearch and we can also build that out into a",
    "start": "2480640",
    "end": "2486720"
  },
  {
    "text": "more functioning dashboard we can use that latitude longitude information to start to build maps",
    "start": "2486720",
    "end": "2491839"
  },
  {
    "text": "against it we can chart at least over time",
    "start": "2491839",
    "end": "2497040"
  },
  {
    "start": "2496000",
    "end": "2964000"
  },
  {
    "text": "let me talk a little bit more about how and why we've built it this way and i could do i",
    "start": "2497040",
    "end": "2502640"
  },
  {
    "text": "like doing live demos um but i'm aware of time and it's also interesting and appropriate to",
    "start": "2502640",
    "end": "2507920"
  },
  {
    "text": "understand what's actually happening underneath the covers here and like why are we even doing it like that",
    "start": "2507920",
    "end": "2513520"
  },
  {
    "text": "so my cursor works you can see here so this is kind of what we've built up this is what we've built",
    "start": "2513520",
    "end": "2519920"
  },
  {
    "text": "out we've said we've got a source of data coming in from an external api so the northern data hub is where this data",
    "start": "2519920",
    "end": "2526400"
  },
  {
    "text": "comes from we're going to pull it in to kafka now we set up a little shell script to ingest it but we could",
    "start": "2526400",
    "end": "2531839"
  },
  {
    "text": "use a connector to pull it in we could write an application to bulletin but as something happens in our world",
    "start": "2531839",
    "end": "2538160"
  },
  {
    "text": "that event we produce it into kafka from there we took that car park information",
    "start": "2538160",
    "end": "2544000"
  },
  {
    "text": "and we used it to drive a bot in telegram with a go back end we also took that same data and",
    "start": "2544000",
    "end": "2550160"
  },
  {
    "text": "streamed it over into elasticsearch some of the key patterns here that i want to kind of",
    "start": "2550160",
    "end": "2555839"
  },
  {
    "text": "flag up and kind of draw your attention to is being able to do event driven alerts so instead of an application having to",
    "start": "2555839",
    "end": "2562400"
  },
  {
    "text": "pull a back end and say like something changed do i need to send an alert yet we can say well as something happens",
    "start": "2562400",
    "end": "2568319"
  },
  {
    "text": "we look at it we evaluate it through predicate and if it matches that predator then we can send an alarm",
    "start": "2568319",
    "end": "2573520"
  },
  {
    "text": "so we can say as a car park tells us that it's got this many spaces available is that space is available greater than",
    "start": "2573520",
    "end": "2580079"
  },
  {
    "text": "the threshold that would set if it is then that message passes through the pipeline and on into the alerting",
    "start": "2580079",
    "end": "2585920"
  },
  {
    "text": "application we can build state we can build key value lookups through basically a",
    "start": "2585920",
    "end": "2592160"
  },
  {
    "text": "materialized view based on these streams of events now if you think about the data that we work",
    "start": "2592160",
    "end": "2598400"
  },
  {
    "text": "with almost all data starts life as an event it's just a lot of the time it quickly gets shoved into a database",
    "start": "2598400",
    "end": "2603760"
  },
  {
    "text": "or a nosql store but data starts life as in events and the closer we can keep what we're",
    "start": "2603760",
    "end": "2610319"
  },
  {
    "text": "doing with the data to events a lot of the time the easier that life becomes kind of like the the",
    "start": "2610319",
    "end": "2615760"
  },
  {
    "text": "friction is lower the um the impedance mismatch is lower so we've got a stream of events we can say",
    "start": "2615760",
    "end": "2621599"
  },
  {
    "text": "well as those events arrive we're going to define an aggregation against them and we're going to persist",
    "start": "2621599",
    "end": "2627040"
  },
  {
    "text": "that aggregation within k sql db so k sql db is driven by the data in kafka",
    "start": "2627040",
    "end": "2632880"
  },
  {
    "text": "reads data from kafka writes data to kafka it also persists internally in its",
    "start": "2632880",
    "end": "2637920"
  },
  {
    "text": "own data store the aggregates that we define so we define this aggregation against",
    "start": "2637920",
    "end": "2643440"
  },
  {
    "text": "the data this materialized view and then that materialized view can be used to satisfy these queries",
    "start": "2643440",
    "end": "2648960"
  },
  {
    "text": "from external applications so our user says to our application how many spaces are there",
    "start": "2648960",
    "end": "2654240"
  },
  {
    "text": "the application can actually run a query against that data within k sql db to find out that information it's just a",
    "start": "2654240",
    "end": "2660960"
  },
  {
    "text": "pull query it's a static query it says what's the current state it pulls that out of the um the",
    "start": "2660960",
    "end": "2667119"
  },
  {
    "text": "materialized view and it passes that back to the application and passes it back to the user",
    "start": "2667119",
    "end": "2673520"
  },
  {
    "text": "another really important thing that we did was we thought about schedulers but if you work with kafka i implore you",
    "start": "2673520",
    "end": "2681119"
  },
  {
    "text": "give a lot of careful thought about to how you serialize your data into how you deal with schemas because",
    "start": "2681119",
    "end": "2688400"
  },
  {
    "text": "this is one of those things that people sometimes opt for like the easy path like the least friction path",
    "start": "2688400",
    "end": "2694560"
  },
  {
    "text": "and there are seemingly no dangers except six months down the line it turns out there's lots kind of like goblins",
    "start": "2694560",
    "end": "2699680"
  },
  {
    "text": "and gremlins and wait to jump out on that supposedly easy path because if you don't have an explicit schema for",
    "start": "2699680",
    "end": "2707280"
  },
  {
    "text": "your data that's enforced when the data is written that's available to consumers to read without even having",
    "start": "2707280",
    "end": "2713200"
  },
  {
    "text": "to phone you up or send you a message on slack to find out what it is if you don't have that things get messy",
    "start": "2713200",
    "end": "2719920"
  },
  {
    "text": "so the data that we worked with to start off with came in as a lump of csv just a bunch of strings",
    "start": "2719920",
    "end": "2726079"
  },
  {
    "text": "with a lot of commas separated and so our consuming application looks at that and says well okay i guess i'm gonna have to start",
    "start": "2726079",
    "end": "2732560"
  },
  {
    "text": "passing that i guess i'm gonna have to go back to whoever wrote that data and find out the spec for it and how many fields should there be and what",
    "start": "2732560",
    "end": "2739280"
  },
  {
    "text": "are the data type i'm gonna have to handle those date time things and concatenate those and each consumer",
    "start": "2739280",
    "end": "2745280"
  },
  {
    "text": "has to start from scratch with that data and if you say okay well we're producing that data and we're not using csv we're going to",
    "start": "2745280",
    "end": "2751839"
  },
  {
    "text": "use something else you're now coupling you and that consuming application together and it might seem obvious but",
    "start": "2751839",
    "end": "2758319"
  },
  {
    "text": "our systems evolve and grow it becomes less obvious and then you go on holiday and someone else makes an",
    "start": "2758319",
    "end": "2763599"
  },
  {
    "text": "incorrect assumption about that data and things get brittle so instead we say we're going to take that data and we're",
    "start": "2763599",
    "end": "2770319"
  },
  {
    "text": "going to serialize it ex explicitly with the schema we're going to start with avro as protobuf as",
    "start": "2770319",
    "end": "2776880"
  },
  {
    "text": "json schema as an appropriate serialization format that our consumers can read",
    "start": "2776880",
    "end": "2782400"
  },
  {
    "text": "and get the schema directly so now our consumers can go and read that data and work with it",
    "start": "2782400",
    "end": "2787680"
  },
  {
    "text": "without even having to go back to the team who wrote that data and say like are their fields missing is there a",
    "start": "2787680",
    "end": "2793200"
  },
  {
    "text": "default like what's this thing here they know that already so you can now build things in much more loosely coupled and agile fashion",
    "start": "2793200",
    "end": "2800800"
  },
  {
    "text": "we use k sql db to apply that schema to the data because at some point you've got to you've actually got to go through that hard work of applying the schema",
    "start": "2800800",
    "end": "2807440"
  },
  {
    "text": "but the point of doing it this way is we do it once and then all of our other applications can make use of it if it's just one",
    "start": "2807440",
    "end": "2813599"
  },
  {
    "text": "application that's fine but now as other ones come along you benefit from that transform once",
    "start": "2813599",
    "end": "2819839"
  },
  {
    "text": "use many times idea so we say well the data comes in and we declare that schema we use that",
    "start": "2819839",
    "end": "2825440"
  },
  {
    "text": "header information that came in the csv file we go back to the catalog the data design documents",
    "start": "2825440",
    "end": "2830800"
  },
  {
    "text": "and say what is the schema for this data and we declare it explicitly within our k sql db statement create a stream",
    "start": "2830800",
    "end": "2837839"
  },
  {
    "text": "on top of this topic with a schema and then we re-serialize that data onto a new kafka",
    "start": "2837839",
    "end": "2844000"
  },
  {
    "text": "topic you say create a new topic on kafka or we could just say select everything from this inbound stream but serialize",
    "start": "2844000",
    "end": "2851359"
  },
  {
    "text": "it as protobuf serialize it as avro in the demo i showed you we kind of like",
    "start": "2851359",
    "end": "2857200"
  },
  {
    "text": "we did two things together we serialized it in a different format and we applied translations but you",
    "start": "2857200",
    "end": "2862400"
  },
  {
    "text": "don't have to when it comes back to the points i was talking before you can use key sql db in stream",
    "start": "2862400",
    "end": "2867599"
  },
  {
    "text": "processing for as much or as little as you would like it doesn't have to be like we're going to do like big fancy",
    "start": "2867599",
    "end": "2873599"
  },
  {
    "text": "all singing things it could simply be we've got this data coming in we want to apply a schema",
    "start": "2873599",
    "end": "2878720"
  },
  {
    "text": "we've got this data coming in we're going to concatenate a couple of fields stream processing is exactly what that's",
    "start": "2878720",
    "end": "2884839"
  },
  {
    "text": "for the last thing that we saw was building out integration saying we've got data",
    "start": "2884839",
    "end": "2890160"
  },
  {
    "text": "coming in we've got data going out so to get the data in we actually wrote a little hacky shell",
    "start": "2890160",
    "end": "2895680"
  },
  {
    "text": "script but probably best it would have been to kind of find an appropriate connector reading the data in our application",
    "start": "2895680",
    "end": "2901920"
  },
  {
    "text": "we use the consumer api for that and our application consumes it directly but pushing that data from",
    "start": "2901920",
    "end": "2907760"
  },
  {
    "text": "kafka down to a target system we use something called kafka connect we",
    "start": "2907760",
    "end": "2912880"
  },
  {
    "text": "could write an application to go and use the consumer api and read from kafka and push it down to the target system but",
    "start": "2912880",
    "end": "2919520"
  },
  {
    "text": "that'd be a bit silly because there exists an integration api within apache kafka",
    "start": "2919520",
    "end": "2924800"
  },
  {
    "text": "already and it's called kafka connect so with kafka connect you say well i've got data coming in from a bunch of",
    "start": "2924800",
    "end": "2930800"
  },
  {
    "text": "places or going out to a bunch of places and you plug and play whichever connector you want to use",
    "start": "2930800",
    "end": "2936480"
  },
  {
    "text": "to get that data into kafka or get the data out to kafka and it's just configuration based so we",
    "start": "2936480",
    "end": "2942480"
  },
  {
    "text": "saw within kc db you can call it even using a sql statement if you don't use kc called db",
    "start": "2942480",
    "end": "2948319"
  },
  {
    "text": "you can use a um just a rest api against kafka connect other web interfaces",
    "start": "2948319",
    "end": "2953599"
  },
  {
    "text": "to specify your configuration a lump of json get the data from here and go and put it in there so that we",
    "start": "2953599",
    "end": "2960079"
  },
  {
    "text": "can build out our analytics on top of it and it's all good",
    "start": "2960079",
    "end": "2965520"
  },
  {
    "start": "2964000",
    "end": "2994000"
  },
  {
    "text": "so again why are we actually doing it this way and these are some interesting design patterns that i've talked about",
    "start": "2965520",
    "end": "2971200"
  },
  {
    "text": "some really useful things to take away and apply but do we even need to use kafka in the first place why don't i just like shove it all into",
    "start": "2971200",
    "end": "2977280"
  },
  {
    "text": "photographs and you could you could totally do that and for something that's kind of like low volume i've got a few",
    "start": "2977280",
    "end": "2983520"
  },
  {
    "text": "api updates per minute that's probably fine it's a little project i'm building on my laptop like why not",
    "start": "2983520",
    "end": "2989440"
  },
  {
    "text": "the point of all this is to think about the type of data that we're working with the type of data",
    "start": "2989440",
    "end": "2994800"
  },
  {
    "start": "2994000",
    "end": "3074000"
  },
  {
    "text": "we're working with is events or rather streams of events",
    "start": "2994800",
    "end": "2999839"
  },
  {
    "text": "so we've got streams of events as a raw source of data so let's think about how can we work with that in a way which is going to",
    "start": "2999839",
    "end": "3005920"
  },
  {
    "text": "mesh with it in the best possible fashion what are the characteristics of what we want to build against those streams",
    "start": "3005920",
    "end": "3012240"
  },
  {
    "text": "of events why do we even care about it we want to react to a few things as they happen",
    "start": "3012240",
    "end": "3017920"
  },
  {
    "text": "we don't like find out last week what happened in the kind of the car parks the week before we want to find out as",
    "start": "3017920",
    "end": "3024480"
  },
  {
    "text": "something happens once we react to that thing we've got people driving around the city they want to know as and when a space becomes available",
    "start": "3024480",
    "end": "3032480"
  },
  {
    "text": "but we've also got people driving around the city wanting to be able to say how many spaces are currently available what's the state",
    "start": "3032480",
    "end": "3038720"
  },
  {
    "text": "what's the current state and that state is manifested from a stream of events",
    "start": "3038720",
    "end": "3044400"
  },
  {
    "text": "a stream of events is what we can materialize up interstate and we can query that directly we also",
    "start": "3044400",
    "end": "3050720"
  },
  {
    "text": "have the latest data to drive our analytics and with analytics sometimes people say well who",
    "start": "3050720",
    "end": "3056480"
  },
  {
    "text": "cares if it's a little bit out of date but if you've got a live source of data why not use it to give",
    "start": "3056480",
    "end": "3061680"
  },
  {
    "text": "people the latest view of the analytics if they only want to look at it once a day that's absolutely fine but you find more",
    "start": "3061680",
    "end": "3067040"
  },
  {
    "text": "and more people are saying well i want to know like the state of the business as of now that's where the events come in so",
    "start": "3067040",
    "end": "3074800"
  },
  {
    "start": "3074000",
    "end": "3244000"
  },
  {
    "text": "let's have a quick in fact i'm going to skip through this because i want to do some questions if people have them i was going to do a quick run through of",
    "start": "3074800",
    "end": "3080000"
  },
  {
    "text": "kafka i'll share a link on the slack channel afterwards with like some a few videos like primers into kafka and but let's skip through",
    "start": "3080000",
    "end": "3086800"
  },
  {
    "text": "that now if i can find my slide navigator and",
    "start": "3086800",
    "end": "3092079"
  },
  {
    "text": "quick talk briefly about key sql db because i've talked about that it's something that people may be less familiar with",
    "start": "3092079",
    "end": "3098000"
  },
  {
    "text": "with kc called eb we're consuming data from kafka it's basically a consumer for data from",
    "start": "3098000",
    "end": "3103599"
  },
  {
    "text": "kafka and it writes data back in to kafka also so we consume data we write data back into kafka",
    "start": "3103599",
    "end": "3110079"
  },
  {
    "text": "and we process it whether that's joining columns or serializing the data or filtering it",
    "start": "3110079",
    "end": "3116160"
  },
  {
    "text": "or aggregating it we process the data we write it back on to a new kafka topic we can reconsume that data",
    "start": "3116160",
    "end": "3123359"
  },
  {
    "text": "we can daisy chain our transformations this it might be we want to apply one transformation which is going to apply",
    "start": "3123359",
    "end": "3128960"
  },
  {
    "text": "to any user of the data all right there's known bad entities within the data let's just filter those",
    "start": "3128960",
    "end": "3134480"
  },
  {
    "text": "out but no one wants to know about rooms whereas other transformations may be much more specific to a particular",
    "start": "3134480",
    "end": "3139920"
  },
  {
    "text": "process so to apply that up front would be erroneous you want to make sure that you apply it at the appropriate point so you can",
    "start": "3139920",
    "end": "3146800"
  },
  {
    "text": "daisy chain your transformations that data we can push down to other platforms for analytics",
    "start": "3146800",
    "end": "3152480"
  },
  {
    "text": "we can stream it to s3 streaming to elasticsearch to a database using kafka connect but those same kafka",
    "start": "3152480",
    "end": "3159599"
  },
  {
    "text": "topics we can use to drive our applications our micro services this can subscribe to these streams of",
    "start": "3159599",
    "end": "3166000"
  },
  {
    "text": "changes these kafka topics to drive what they're doing to kind of do things like alerting",
    "start": "3166000",
    "end": "3171520"
  },
  {
    "text": "but we also saw our casey db consist state it can build a",
    "start": "3171520",
    "end": "3177119"
  },
  {
    "text": "materialized view so you can say like uh for a bunch of bank account transactions",
    "start": "3177119",
    "end": "3182240"
  },
  {
    "text": "sum it up by account id so that was the current value for a particular bank account and then our external microservice our",
    "start": "3182240",
    "end": "3189200"
  },
  {
    "text": "external application can say 2k sql db using a rest call into it directly",
    "start": "3189200",
    "end": "3194400"
  },
  {
    "text": "what's the current value for like account id 42 he says well the current value is well the current balance is 94. so",
    "start": "3194400",
    "end": "3201200"
  },
  {
    "text": "that could be with the rest api there's also a java client natively within k sql db there's a dual client in the community",
    "start": "3201200",
    "end": "3207200"
  },
  {
    "text": "python clients so however you're writing your applications you can actually integrate into key sequel db",
    "start": "3207200",
    "end": "3212559"
  },
  {
    "text": "directly kc db itself runs separately from the cathode cluster so you've got your",
    "start": "3212559",
    "end": "3218240"
  },
  {
    "text": "kafka cluster of brokers k sequel db runs separately it runs within the jvm",
    "start": "3218240",
    "end": "3223839"
  },
  {
    "text": "it's actually built on top of kafka streams so you don't have to use k sql db everything that i've shown you here with",
    "start": "3223839",
    "end": "3229920"
  },
  {
    "text": "pc db can also be done with kafka streams kafka streams is part of apache kafka it's a java library",
    "start": "3229920",
    "end": "3237119"
  },
  {
    "text": "so if you would rather use your stream processing that way and interactive query and things like that that way you can do so you can run k sql db",
    "start": "3237119",
    "end": "3245839"
  },
  {
    "start": "3244000",
    "end": "3264000"
  },
  {
    "text": "anywhere it's just a jvm process you can have it in confluent cloud and it's provided as a managed service",
    "start": "3245839",
    "end": "3252160"
  },
  {
    "text": "there you can also run it yourself like so docker process or kubernetes or bare metal or",
    "start": "3252160",
    "end": "3257599"
  },
  {
    "text": "however you want to go and do it it's just a jvm process so quick thought again about like why",
    "start": "3257599",
    "end": "3265280"
  },
  {
    "start": "3264000",
    "end": "3309000"
  },
  {
    "text": "are we even using kafka we're using it because we have streams of events",
    "start": "3265280",
    "end": "3270319"
  },
  {
    "text": "that we want to work with and data begins life as an event so we're going to handle it",
    "start": "3270319",
    "end": "3275599"
  },
  {
    "text": "as an event we're not going to kind of thrust it up into state before it's ready to be that because we want a stream",
    "start": "3275599",
    "end": "3281040"
  },
  {
    "text": "of events because we want to process that data we want to filter it we want to enrich it we want to transform it",
    "start": "3281040",
    "end": "3287200"
  },
  {
    "text": "we want to store that data and build our state that could be queried also to integrate",
    "start": "3287200",
    "end": "3292880"
  },
  {
    "text": "that data out into different systems so using kafka we can do event driven alerting",
    "start": "3292880",
    "end": "3298799"
  },
  {
    "text": "from our applications we can do key value lookups from our applications we can also build out streaming etl",
    "start": "3298799",
    "end": "3305040"
  },
  {
    "text": "processes using casey clb using kafka streams so hopefully this",
    "start": "3305040",
    "end": "3310799"
  },
  {
    "start": "3309000",
    "end": "3374000"
  },
  {
    "text": "has been interesting apologies for the the building work noise next door apologies for the internet glitch that's the fun of uh remote conferences",
    "start": "3310799",
    "end": "3318079"
  },
  {
    "text": "these days hopefully you would like to learn a little bit more about this go and try it out for yourself i'll share all of these links on slack",
    "start": "3318079",
    "end": "3324640"
  },
  {
    "text": "i'll share them all on twitter and so you can go and try it out and say the api is an open api it usually works",
    "start": "3324640",
    "end": "3330880"
  },
  {
    "text": "it's the first time i've seen it fail so you can actually go and start pulling that api and see what you can do with that data",
    "start": "3330880",
    "end": "3336400"
  },
  {
    "text": "all of the code for the telegram bot is on there also um all you would need for that is your api key and off you go you can go and",
    "start": "3336400",
    "end": "3343280"
  },
  {
    "text": "try out confluent cloud there's a bunch of codes and stuff like that that gets you money off your cloud bill for the first few months",
    "start": "3343280",
    "end": "3348640"
  },
  {
    "text": "so go and give that a try that gives you a managed kafka service it gives you managed key sql db and also managed connect there's a great",
    "start": "3348640",
    "end": "3356720"
  },
  {
    "text": "place to go and get more resources for learning more about kafka so developer.com",
    "start": "3356720",
    "end": "3362720"
  },
  {
    "text": "gives you the ability to kind of go and look at podcasts and um tutorials and blogs and all sorts of",
    "start": "3362720",
    "end": "3369040"
  },
  {
    "text": "useful stuff like that for learning more about kafka and confluent platform so with that thank you very much uh for",
    "start": "3369040",
    "end": "3375359"
  },
  {
    "start": "3374000",
    "end": "3559000"
  },
  {
    "text": "coming along and i'll head over onto slack i'll close down my screen head to slack now and see if there's any questions and if",
    "start": "3375359",
    "end": "3381280"
  },
  {
    "text": "you want to mute yourself and ask that way that's also fine",
    "start": "3381280",
    "end": "3391838"
  },
  {
    "text": "okay no questions you want anyone to ask in real time or unmute themselves that's uh awesome in fact robin can ask a quick",
    "start": "3395280",
    "end": "3401680"
  },
  {
    "text": "question uh great talk enjoyed that very much thank you and uh the question was",
    "start": "3401680",
    "end": "3407520"
  },
  {
    "text": "ke k sqldb is that when the materialized views and stuff going on there uh is that storing states kind of inside",
    "start": "3407520",
    "end": "3415520"
  },
  {
    "text": "k sqldb like kind of caching the view and stuff as well as on top of the kafka scopes kind of as",
    "start": "3415520",
    "end": "3421040"
  },
  {
    "text": "well as kafka itself yes no total sense so let me",
    "start": "3421040",
    "end": "3427040"
  },
  {
    "text": "just show you here so within kc called ebay so there's a couple of talks so if you",
    "start": "3427040",
    "end": "3432160"
  },
  {
    "text": "go to talks to aloft.net there's one about casey called eb which goes into a little bit more info and",
    "start": "3432160",
    "end": "3437440"
  },
  {
    "text": "then the confluent blog also um but basically it's it's that kind of",
    "start": "3437440",
    "end": "3442720"
  },
  {
    "text": "thing so kc db has got rocks db within it so it uses rocks db for that state store",
    "start": "3442720",
    "end": "3449440"
  },
  {
    "text": "but exactly as you see it also uses kafka topics for persistence it uses kafka topics as a change rod for",
    "start": "3449440",
    "end": "3455839"
  },
  {
    "text": "changes made into rocks db so it's entirely fault tolerant and resilient so if you lose",
    "start": "3455839",
    "end": "3461280"
  },
  {
    "text": "one node of case equal db it can actually build that state elsewhere awesome thank you",
    "start": "3461280",
    "end": "3468880"
  },
  {
    "text": "great have you tried kc db and i haven't um i know some of my",
    "start": "3468880",
    "end": "3476160"
  },
  {
    "text": "colleagues have played with kafka a little bit so i'm we haven't i haven't personally used it and i'm now inspired to go find some other",
    "start": "3476160",
    "end": "3482960"
  },
  {
    "text": "um uh open api uh that unfortunately my local council doesn't have carpark data available so i'm going to go find",
    "start": "3482960",
    "end": "3488880"
  },
  {
    "text": "something else and and do a similar thing so there's i did a talk as uh shameless self-promotion let me",
    "start": "3488880",
    "end": "3495599"
  },
  {
    "text": "show you on it it's talking a kafka meetup earlier this week um so talks.net so there's a couple of",
    "start": "3495599",
    "end": "3503119"
  },
  {
    "text": "examples so this was using uh network rail data um so you can go and check this out um and",
    "start": "3503119",
    "end": "3509920"
  },
  {
    "text": "this goes into using the network rail api to kind of do a bunch of movements around the train",
    "start": "3509920",
    "end": "3515119"
  },
  {
    "text": "network um again similar kind of thing it's like data coming in from in this case it's active mq",
    "start": "3515119",
    "end": "3520160"
  },
  {
    "text": "um but it lets you build out again you can tell like elasticsearch but a useful front end for that and you can",
    "start": "3520160",
    "end": "3526160"
  },
  {
    "text": "do like a lighting and so on but that's got tons of kafka in case you for db and also again with an open api",
    "start": "3526160",
    "end": "3532400"
  },
  {
    "text": "cool any other questions got two minutes post",
    "start": "3532400",
    "end": "3538319"
  },
  {
    "text": "all of the slides and a bunch of other links and stuff like that onto the slack channel um but more than",
    "start": "3538319",
    "end": "3544000"
  },
  {
    "text": "happy to to answer any questions now also if anyone has them otherwise enjoy the rest of ndc and thanks for coming to my talk",
    "start": "3544000",
    "end": "3559119"
  },
  {
    "text": "you",
    "start": "3559119",
    "end": "3561200"
  }
]