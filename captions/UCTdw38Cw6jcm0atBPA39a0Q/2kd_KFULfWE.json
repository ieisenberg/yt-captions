[
  {
    "text": "let's do this and I'm just going to make sure oh the mic still works all the way back here pretty good great I'm not",
    "start": "6000",
    "end": "11599"
  },
  {
    "text": "going to do the recording in uh good morning thanks everyone for being with me here at 9:00 LOL um so this is a talk",
    "start": "11599",
    "end": "21080"
  },
  {
    "text": "about coping with the existential dread you get when everything kind of sucks right that's that's the opening",
    "start": "21080",
    "end": "28080"
  },
  {
    "text": "Gambit we're going to go on a an emot roller coaster about how you feel when everything kind of sucks because we've",
    "start": "28080",
    "end": "34680"
  },
  {
    "text": "all been there and we've all opened up a code base and you know that like horrible sigh of like oh my God what is",
    "start": "34680",
    "end": "42920"
  },
  {
    "text": "this that washes over you when you open something that maybe hasn't been touched in years by someone who didn't care who",
    "start": "42920",
    "end": "50360"
  },
  {
    "text": "did something very very quickly under very very tight time constraints and you're left trying to pick up the",
    "start": "50360",
    "end": "55920"
  },
  {
    "text": "pieces um so yeah this is about kind of finding",
    "start": "55920",
    "end": "63559"
  },
  {
    "text": "hopeful nihilism and optimism in a place where things can often be painful and",
    "start": "63559",
    "end": "69960"
  },
  {
    "text": "uncomfortable sounds like we're going to start a concert so my name's David and I spend",
    "start": "69960",
    "end": "76040"
  },
  {
    "text": "way too much time thinking about software design this is basically my toxic character trait so I'm the head of",
    "start": "76040",
    "end": "81799"
  },
  {
    "text": "architecture for a company in London called New Day we're a credit card company not a life coaching company despite the name um we're hiring what",
    "start": "81799",
    "end": "89880"
  },
  {
    "text": "ever but really um I'm here to talk to you about what why design is important and everything you do and why literally",
    "start": "89880",
    "end": "96560"
  },
  {
    "text": "everything in the world matters right so the you know the truth is I'm a programmer and you will pry my keyboard",
    "start": "96560",
    "end": "102920"
  },
  {
    "text": "out my cold dead hands that said there's not a lot of code in this talk so if you think you're going to see demos you're",
    "start": "102920",
    "end": "108799"
  },
  {
    "text": "going to be a bit disappointed what we're going to do is talk about how software makes us feel and how we can",
    "start": "108799",
    "end": "114799"
  },
  {
    "text": "take those feelings we have about software design and turn them into kind of actionable things that we can do to make our code bases",
    "start": "114799",
    "end": "121399"
  },
  {
    "text": "better so I did this small kind of viral tweet at the end of last year when I was",
    "start": "121399",
    "end": "127079"
  },
  {
    "text": "trying to fix up this like objectively terrible codebase and I looked at this thing and I had that sinking horrible",
    "start": "127079",
    "end": "134480"
  },
  {
    "text": "feeling of dread that I was describing a moment ago and I did what I always do when I see something awful I open",
    "start": "134480",
    "end": "140680"
  },
  {
    "text": "Twitter and I rage tweet into the void right so I remember just thinking this is a damning indictment on the state of",
    "start": "140680",
    "end": "147560"
  },
  {
    "text": "software design in like 2022 2023 where people can do this and think that this",
    "start": "147560",
    "end": "155080"
  },
  {
    "text": "is design right it's it's horrendous and mostly Twitter agreed and it was it was",
    "start": "155080",
    "end": "160440"
  },
  {
    "text": "good and I got to feel Vindicated in being angry at a thing um basically because organizing your code by",
    "start": "160440",
    "end": "166480"
  },
  {
    "text": "architectural feature is like basically a hate crime it's a hate crime that you",
    "start": "166480",
    "end": "171680"
  },
  {
    "text": "can commit against your software and my inner monologue was just sitting there screaming why is this like this what does this even do it doesn't make any",
    "start": "171680",
    "end": "178599"
  },
  {
    "text": "sense so I'm hopefully going to try and explain why it is like this and how we",
    "start": "178599",
    "end": "184000"
  },
  {
    "text": "can make it make sense because the truth is that organizational pattern is like taking your classic car collection",
    "start": "184000",
    "end": "189680"
  },
  {
    "text": "getting your hammer out and smashing it up and organizing it by Wheels steering wheels seats windshields Bonnets and",
    "start": "189680",
    "end": "197400"
  },
  {
    "text": "Boots doesn't make any sense you remove all context from a thing when you break it up into small",
    "start": "197400",
    "end": "204440"
  },
  {
    "text": "parts now so much of the talk that you'll hear about design in in software",
    "start": "204440",
    "end": "210879"
  },
  {
    "text": "always ends up getting dragged all the way back to work on in the 1990s about design pans and this isn't a talk about",
    "start": "210879",
    "end": "218239"
  },
  {
    "text": "design patterns so don't worry you don't have to get up and walk out um but I want to pay them a little bit of lip",
    "start": "218239",
    "end": "223840"
  },
  {
    "text": "service so we actually understand what design patterns are before we talk about the thing that isn't design patterns because it might be easy to misinterpret",
    "start": "223840",
    "end": "230560"
  },
  {
    "text": "this talk of some kind of tyde against design patterns and it's really not it's",
    "start": "230560",
    "end": "235760"
  },
  {
    "text": "not a rallying cry against standards or anything like that so most people actually where design patterns come from",
    "start": "235760",
    "end": "241040"
  },
  {
    "text": "it's a little bit of an interesting story so design patterns originated in the works of a man called Christopher Alexandra who was like a real life",
    "start": "241040",
    "end": "247760"
  },
  {
    "text": "architect he built buildings right none of the fake architecture job titles like I have um and he wrote this amazing book",
    "start": "247760",
    "end": "255879"
  },
  {
    "text": "in the 1970s 1960s called it's brilliant notes on the",
    "start": "255879",
    "end": "262320"
  },
  {
    "text": "synthesis of form which is definitely like my progressive metal album title I think at this point and um and basically",
    "start": "262320",
    "end": "269280"
  },
  {
    "text": "a bunch of computer scientists in the 70s and ' 80s wrote uh read notes on the synthesis of form and they started",
    "start": "269280",
    "end": "274840"
  },
  {
    "text": "metabolizing the ideas and it led to the design patterns movement and they started writing books around how design",
    "start": "274840",
    "end": "280759"
  },
  {
    "text": "patterns from architecture could be applied to computer programming languages so the gang of four book here",
    "start": "280759",
    "end": "287360"
  },
  {
    "text": "which came out in 1994 is proberly kind of the foundational text around design patterns",
    "start": "287360",
    "end": "293479"
  },
  {
    "text": "and what it did is it attempted to lay out a series of structural creational and behavioral patterns um that were",
    "start": "293479",
    "end": "299759"
  },
  {
    "text": "common in software of the time there are a bunch of other noteworthy books that followed around this kind of patent language thing from people like Kent",
    "start": "299759",
    "end": "306400"
  },
  {
    "text": "Beck who wrote Small Talk best practices Martin Fowler who wrote the very very famous and very very wordy patterns of",
    "start": "306400",
    "end": "312639"
  },
  {
    "text": "Enterprise architecture blood blood blur some subtitle very very good book um but ultimately the intention of all these",
    "start": "312639",
    "end": "319240"
  },
  {
    "text": "books was good and it targeted only one thing and this is the thing that people often misinterpret to provide concrete",
    "start": "319240",
    "end": "325800"
  },
  {
    "text": "guidance around descriptions of common solutions to Common problems that they",
    "start": "325800",
    "end": "330960"
  },
  {
    "text": "had seen in software at the time right hey we looked around all the work we did",
    "start": "330960",
    "end": "336280"
  },
  {
    "text": "and this is the thing that was happening over and over again it wasn't hey we sat in a room and we designed this pattern",
    "start": "336280",
    "end": "342000"
  },
  {
    "text": "and we think you should fit this to all of your software right very very different intent so what design patterns",
    "start": "342000",
    "end": "348080"
  },
  {
    "text": "really are is giving names to model answers to model questions right and you",
    "start": "348080",
    "end": "353240"
  },
  {
    "text": "know the really really powerful thing about language and actually Eli's keynote yesterday really touched on this",
    "start": "353240",
    "end": "358400"
  },
  {
    "text": "is you give Concepts names then we can talk about them so design patterns were really really important in leveling up",
    "start": "358400",
    "end": "364080"
  },
  {
    "text": "the way we spoke about the things that we observed in software now this isn't a talk about any",
    "start": "364080",
    "end": "370560"
  },
  {
    "text": "of that because patterns try and make sense of categories of things that are all the same and actually I want to talk",
    "start": "370560",
    "end": "376639"
  },
  {
    "text": "about all the things that are different in your software now I suppose I kind of just",
    "start": "376639",
    "end": "382240"
  },
  {
    "text": "lament that all of the talk of design patterns and software really devolves down into this kind of talk of design",
    "start": "382240",
    "end": "388400"
  },
  {
    "text": "patterns because they're the least interesting part like if there's a model answer you don't have to think about it",
    "start": "388400",
    "end": "393840"
  },
  {
    "text": "right that's that's not very interesting they're about all the parts of your system that are familiar so with the",
    "start": "393840",
    "end": "399280"
  },
  {
    "text": "acceptance of that what we actually did over the years since kind of the 70s and ' 80s we is we pushed our programming",
    "start": "399280",
    "end": "404520"
  },
  {
    "text": "languages to innovate to make a lot of those patterns obsolete over time and that's quite interesting because once we",
    "start": "404520",
    "end": "411759"
  },
  {
    "text": "did that it kind of feels like we forgot to talk about anything that didn't fit into these welln notated patterns and",
    "start": "411759",
    "end": "418479"
  },
  {
    "text": "you know the truth is that where real design starts where where the talk of patterns end and you're just trying to",
    "start": "418479",
    "end": "424400"
  },
  {
    "text": "find form for all of the other stuff in your system and that's kind of the root",
    "start": "424400",
    "end": "429440"
  },
  {
    "text": "of why people always use the joke that naming is hard because you're trying to find form and structure for all the",
    "start": "429440",
    "end": "435240"
  },
  {
    "text": "other stuff that doesn't fit into any of the neat boxes now on the other end of the spectrum we have kind of large scale",
    "start": "435240",
    "end": "441400"
  },
  {
    "text": "organizational patterns things like you end tier hexagonal architectures 12 Factor apps and all of those movements",
    "start": "441400",
    "end": "447280"
  },
  {
    "text": "are all about trying to De describe characteristics and prescriptive form for an application arrange your things",
    "start": "447280",
    "end": "453759"
  },
  {
    "text": "like this and it will make sense have these characteristics in your application and it will make sense but I",
    "start": "453759",
    "end": "459840"
  },
  {
    "text": "think software design kind of has more axes than just functional patterns and large scale architectures right one or",
    "start": "459840",
    "end": "465120"
  },
  {
    "text": "the other and I think the most interesting stuff is the stuff that falls in the cracks in between because",
    "start": "465120",
    "end": "470199"
  },
  {
    "text": "that's the moment to moment Line to Line way that most programmers interact with their",
    "start": "470199",
    "end": "475919"
  },
  {
    "text": "code so here's a here's a horrible deep confession and it might not be a surprise to anyone from the look at me",
    "start": "475919",
    "end": "481919"
  },
  {
    "text": "that back in time I was a pure Arts student Way Way Back In Time right like and I literally studied literature and",
    "start": "481919",
    "end": "488120"
  },
  {
    "text": "philosophy and politics and history and then the computer science degree why would you do that I always",
    "start": "488120",
    "end": "494120"
  },
  {
    "text": "wanted to be a programmer that's the truth I always wanted to be a programmer I thought there was this kind of um",
    "start": "494120",
    "end": "499400"
  },
  {
    "text": "ineffable magic about what we do about making things that's so cool",
    "start": "499400",
    "end": "505479"
  },
  {
    "text": "right and I never never lost that addiction from the first time I saw something that I did change on the screen but for the first half of my",
    "start": "505479",
    "end": "512479"
  },
  {
    "text": "career I really really struggled to reconcile the aesthetic sensibilities of design you know I started programming in",
    "start": "512479",
    "end": "518800"
  },
  {
    "text": "the mid 1990s there were no websites there were just a few books um and these books",
    "start": "518800",
    "end": "525360"
  },
  {
    "text": "right these really scientific textbook style formal language design paty books",
    "start": "525360",
    "end": "531160"
  },
  {
    "text": "these two things just didn't match in my head because I got into programming because I wanted to make games like",
    "start": "531160",
    "end": "537160"
  },
  {
    "text": "every 10-year-old does right that's the truth so I kind of I went to University and I",
    "start": "537160",
    "end": "543200"
  },
  {
    "text": "was I was feeling a little bit disillusioned in my first year and I stumbled across you know Donald nth",
    "start": "543200",
    "end": "548920"
  },
  {
    "text": "right anyone else done a computer science degree in here no computer science degrees one person anyone heard",
    "start": "548920",
    "end": "554640"
  },
  {
    "text": "of the art of computer programming the book right so the interesting thing so Donald Donald nth wrote this book called",
    "start": "554640",
    "end": "561519"
  },
  {
    "text": "um literate programming way back in 1984 um which is literally the year I",
    "start": "561519",
    "end": "566959"
  },
  {
    "text": "was born so there are no new ideas so nth had this idea of programming being",
    "start": "566959",
    "end": "572839"
  },
  {
    "text": "um a thing that should be formed of a documentation language and a programming language and you're like what okay so I",
    "start": "572839",
    "end": "580160"
  },
  {
    "text": "continued reading and he was really focused on the idea of comprehensible code and you know he he he really he",
    "start": "580160",
    "end": "587680"
  },
  {
    "text": "wrote this this whole book called literate programming and this is really consistent with Donald nth so Donald nth",
    "start": "587680",
    "end": "593560"
  },
  {
    "text": "is the man that's been working on the art of computer programming since the 70s I think maybe 60s who took 10 years",
    "start": "593560",
    "end": "599680"
  },
  {
    "text": "out to build text the formatting language so he could write the book",
    "start": "599680",
    "end": "605279"
  },
  {
    "text": "about computer programming for which he made up a fake microprocessor architecture and a fake programming",
    "start": "605279",
    "end": "610399"
  },
  {
    "text": "language so he could teach what computer programming was meant to be from the purest possible philosophical position",
    "start": "610399",
    "end": "616959"
  },
  {
    "text": "it's like cool cool I mean I I respect the hustle it's just a bit of a slow",
    "start": "616959",
    "end": "623200"
  },
  {
    "text": "Hustle but like this this book that he wrote about literate programming I thought was really really awesome and it",
    "start": "623200",
    "end": "629079"
  },
  {
    "text": "just it stuck with me because it was really really focused on this idea that programming languages and documentation",
    "start": "629079",
    "end": "635240"
  },
  {
    "text": "languages were this symbiotic thing that gave context a code now if you think about it when he",
    "start": "635240",
    "end": "641160"
  },
  {
    "text": "started writing this book in the 70s all the programming languages at the time were far lower level than languages we",
    "start": "641160",
    "end": "648399"
  },
  {
    "text": "use today I was going to say sucked but they didn't really suck they were just very primitive they were very close to the",
    "start": "648399",
    "end": "653680"
  },
  {
    "text": "metal and actually modern programming languages over time have dragged themselves both to high order",
    "start": "653680",
    "end": "659720"
  },
  {
    "text": "abstractions and to be more like the written word year by year by year and we",
    "start": "659720",
    "end": "664839"
  },
  {
    "text": "we keep on going right and actually I was reading this and thinking Donald nth was right in that programming languages",
    "start": "664839",
    "end": "670240"
  },
  {
    "text": "are kind of now this amalgam of documentation and implementation",
    "start": "670240",
    "end": "675279"
  },
  {
    "text": "language that we smush together like most programing languages didn't support the concept of comments in the 70s as a",
    "start": "675279",
    "end": "681680"
  },
  {
    "text": "as an example so programming languages have kind of trended towards being more literate over time but this idea that",
    "start": "681680",
    "end": "688600"
  },
  {
    "text": "software should looked at through the lens of literature really really really stuck with me because it is the same and",
    "start": "688600",
    "end": "695800"
  },
  {
    "text": "it was kind of a little bit of a revelation like a light bulb moment for baby programmer art student David who",
    "start": "695800",
    "end": "700959"
  },
  {
    "text": "had spent time studying English literature like oh God this is a text of course it is you know it changed",
    "start": "700959",
    "end": "708160"
  },
  {
    "text": "the way I started writing code but just like literature software only becomes good if you focus on its form as well as",
    "start": "708160",
    "end": "714279"
  },
  {
    "text": "its function light bulb moment so over the years I've come to this really precise",
    "start": "714279",
    "end": "720600"
  },
  {
    "text": "definition of what I believe software really is I believe software is a constrained form of communication",
    "start": "720600",
    "end": "726560"
  },
  {
    "text": "between programmer and programmer that describes Concepts and problems that just so happens to be executed by",
    "start": "726560",
    "end": "732519"
  },
  {
    "text": "machines by accident it's almost like a happy side effect that we managed to do this what we're really doing is we're",
    "start": "732519",
    "end": "737839"
  },
  {
    "text": "describing a problem space in a constrained language that's really like good writing and the more you think",
    "start": "737839",
    "end": "744920"
  },
  {
    "text": "about it the more it starts to click you spend so much longer of a larger portion",
    "start": "744920",
    "end": "750360"
  },
  {
    "text": "of your working day reading code than you do write it your code exists in a context it has subtext it has authorial",
    "start": "750360",
    "end": "757519"
  },
  {
    "text": "intent sometimes it has unreliable narrators when the intent of the author isn't manifested and you end up with",
    "start": "757519",
    "end": "763399"
  },
  {
    "text": "bugs all these idioms we used for literature can be applied to software your code your code has form it has flow",
    "start": "763399",
    "end": "770720"
  },
  {
    "text": "it has a rhythm just like any other writing but most importantly your code has reason it has intent it has a",
    "start": "770720",
    "end": "776519"
  },
  {
    "text": "purpose for being so this",
    "start": "776519",
    "end": "783320"
  },
  {
    "text": "um everyone talks about clean code but like this has nothing to do with clean code really you know the the problem",
    "start": "783320",
    "end": "791240"
  },
  {
    "text": "with that book is the first three chapters are just the sentence name variables well over about 5,000 words um",
    "start": "791240",
    "end": "800959"
  },
  {
    "text": "it's a really God awful obviously terrible book that's cast this horrible long Shadow over software and reduced",
    "start": "800959",
    "end": "808560"
  },
  {
    "text": "all disc discussions of design to like oh have you got your variables named right have you split things up into small functions it's just it's really",
    "start": "808560",
    "end": "816360"
  },
  {
    "text": "dogmatic it doesn't actually help anybody and the the back half of it is all complete garbage and was from the",
    "start": "816360",
    "end": "822440"
  },
  {
    "text": "day it was published about dead Java Frameworks I just burn it honestly now I",
    "start": "822440",
    "end": "830519"
  },
  {
    "text": "always say this and everyone you know everyone's like oh my God heresy how can you say that about clean code that was",
    "start": "830519",
    "end": "836199"
  },
  {
    "text": "the most important book at me too right me too and and actually at one point in my career I thought rules about basic",
    "start": "836199",
    "end": "843600"
  },
  {
    "text": "hygiene were the same as design but they're not right I I've come to Value",
    "start": "843600",
    "end": "849639"
  },
  {
    "text": "this idea of intentionality over any concept of kind of cleanliness and",
    "start": "849639",
    "end": "855639"
  },
  {
    "text": "syntactic conciseness I guess um you know I someone asked me a question when",
    "start": "855639",
    "end": "862079"
  },
  {
    "text": "I've done this talk previously like oh but you know clean code has its place in time and I think that's true you know I think 15 years ago when that book came",
    "start": "862079",
    "end": "868639"
  },
  {
    "text": "out there was very very little in the space that even tried to approach some of these topics and there's a little bit",
    "start": "868639",
    "end": "874480"
  },
  {
    "text": "of of gratitude we have for someone kind of introducing these Concepts into that conversation but I just think it's aged",
    "start": "874480",
    "end": "880480"
  },
  {
    "text": "very very badly so when I talk about intentionality let me let me tell you what I really mean um it means every",
    "start": "880480",
    "end": "886800"
  },
  {
    "text": "Character Matters literally every single thing you type you have to type for a reason and everything matters just like",
    "start": "886800",
    "end": "893920"
  },
  {
    "text": "in writing and when I when I think about software I want to approach the work as if it matters the Whit space matters the",
    "start": "893920",
    "end": "901360"
  },
  {
    "text": "Rhythm in the code matters the form the naming the function they're all important right code written with that",
    "start": "901360",
    "end": "908519"
  },
  {
    "text": "kind of thoughtfulness and intentionality and respect for the reader is what matters to me I think",
    "start": "908519",
    "end": "915079"
  },
  {
    "text": "that's what makes software good and we're going to go into detail don't worry not just in the abstract so the interesting thing is",
    "start": "915079",
    "end": "922240"
  },
  {
    "text": "when you stop thinking of your coders literature you start valuing different ways of communicating in code than you",
    "start": "922240",
    "end": "928240"
  },
  {
    "text": "did before now we can communicate on the macro scale with kind of large scale organizational patterns so the the the",
    "start": "928240",
    "end": "935319"
  },
  {
    "text": "classic example that lots of people have used before is NBC anyone made an NBC application before right everybody were",
    "start": "935319",
    "end": "942880"
  },
  {
    "text": "they all websites yeah yeah every single one of them so the interesting thing about MBC",
    "start": "942880",
    "end": "948199"
  },
  {
    "text": "is it's an organizational pattern that obscures the intent of your code completely if I open a code base that is",
    "start": "948199",
    "end": "953920"
  },
  {
    "text": "an MVC website all I see is cool you built a website there's nothing about the structure or the form or the flow of",
    "start": "953920",
    "end": "960199"
  },
  {
    "text": "that codebase actually tells you what the website does or what it's about there's nothing present in that organizational pattern but it so neatly",
    "start": "960199",
    "end": "968000"
  },
  {
    "text": "maps to the idiom of web development that actually it's kind of okay right like it it works well in that context",
    "start": "968000",
    "end": "975560"
  },
  {
    "text": "but it's constrained it's compromised um so I actually find the micro scale again",
    "start": "975560",
    "end": "982079"
  },
  {
    "text": "more interesting where the the way that you form specific pieces of code on a function to function module by module",
    "start": "982079",
    "end": "988319"
  },
  {
    "text": "way telegraph's intent because form and flow are the tools we",
    "start": "988319",
    "end": "993639"
  },
  {
    "text": "have to increase cohesion in a code base let me use an example here to illustrate",
    "start": "993639",
    "end": "1000480"
  },
  {
    "text": "this so when I say use form and flow and cohesion I want you to take a look at this screenshot first and we're going to",
    "start": "1000480",
    "end": "1006519"
  },
  {
    "text": "look at a second one now you don't need to understand every line of code here it's basically a nonsense it's a nothing",
    "start": "1006519",
    "end": "1011880"
  },
  {
    "text": "right there's some HTTP stuff and some error response no checking right whatever but it's difficult to read",
    "start": "1011880",
    "end": "1019360"
  },
  {
    "text": "because there is no form and there is no flow and there is no organization in that function at all what it does is it",
    "start": "1019360",
    "end": "1026038"
  },
  {
    "text": "forces you as the programmer to comprehend every line statement by statement and build up a mental model in",
    "start": "1026039",
    "end": "1031720"
  },
  {
    "text": "your head where your head Computing what's happening so we use paragraphs in the",
    "start": "1031720",
    "end": "1037839"
  },
  {
    "text": "English language to group related Concepts so code is the same this is",
    "start": "1037839",
    "end": "1043720"
  },
  {
    "text": "using form and flow in a piece of code lines mean something they carry me",
    "start": "1043720",
    "end": "1048919"
  },
  {
    "text": "meaning if you use them everywhere or nowhere you're removing like an entire category of expression weird so this",
    "start": "1048919",
    "end": "1056720"
  },
  {
    "text": "incred this is like a really really incredibly small scale example to illustrate the difference and you know",
    "start": "1056720",
    "end": "1062360"
  },
  {
    "text": "it makes me think that you know good form in good code like it reads like it's a rhythm it's like poetry you're",
    "start": "1062360",
    "end": "1067640"
  },
  {
    "text": "telling a reader I do this and this and this and I breathe and I pause and now I do this and I breathe and I pause and I",
    "start": "1067640",
    "end": "1073720"
  },
  {
    "text": "do this and I breathe and I pause it's diction um so it's it's what happens",
    "start": "1073720",
    "end": "1079720"
  },
  {
    "text": "when an aesthetic sensibility matches the intent of the content of the work and all I really did was delete a few",
    "start": "1079720",
    "end": "1086280"
  },
  {
    "text": "lines of code like I deleted a few empty lines to make it easier to comprehend",
    "start": "1086280",
    "end": "1091880"
  },
  {
    "text": "and you know form and flow then becomes something you use to communicate intent you're directing the",
    "start": "1091880",
    "end": "1097280"
  },
  {
    "text": "reader and you know the truth is things like this are often lost in the morass of kind of linters and things like that",
    "start": "1097280",
    "end": "1104559"
  },
  {
    "text": "like languages that rely on linters over static analysis hello JavaScript often butcher a category of expression in the",
    "start": "1104559",
    "end": "1111760"
  },
  {
    "text": "code because they're dictatorial about form the same goes if if we got any go programmers in the room no thing about",
    "start": "1111760",
    "end": "1119039"
  },
  {
    "text": "go as a as a language is it's got very very strict rules around form so every go program you look at looks the same",
    "start": "1119039",
    "end": "1124360"
  },
  {
    "text": "same with closure every closure program looks like a a lot of brackets and nesting and you have to really really",
    "start": "1124360",
    "end": "1129480"
  },
  {
    "text": "read and comprehend everything in your head to grab the intent of piece so form is important because it's",
    "start": "1129480",
    "end": "1136600"
  },
  {
    "text": "design now the more you st thinking about software through this lens of kind of form and flow and literature and more",
    "start": "1136600",
    "end": "1143200"
  },
  {
    "text": "importantly design it became apparent that I was really trying to I was I was reacting to the inherent complexity in a",
    "start": "1143200",
    "end": "1150240"
  },
  {
    "text": "lot of modern software development really and and that is actually a design problem more than anything",
    "start": "1150240",
    "end": "1157600"
  },
  {
    "text": "so I've been working on a sentence recently that's what I do now I don't write software write",
    "start": "1157600",
    "end": "1165880"
  },
  {
    "text": "sentences this is the real thing that makes me mad in all of software in the world I believe so the complexity of",
    "start": "1165919",
    "end": "1173559"
  },
  {
    "text": "your application should be at most as complex as the problem space it inhabits",
    "start": "1173559",
    "end": "1178840"
  },
  {
    "text": "and no greater and the amount of software that fails that sniff test",
    "start": "1178840",
    "end": "1184720"
  },
  {
    "text": "is remarkable right they they they lose themselves under infrastructure and 300",
    "start": "1184720",
    "end": "1190640"
  },
  {
    "text": "Bill pipelines and guilt uh and get subm modules and like a thousand different categories of test Suites and it's just",
    "start": "1190640",
    "end": "1196760"
  },
  {
    "text": "like where the is the software in the middle of all of this absolute",
    "start": "1196760",
    "end": "1202080"
  },
  {
    "text": "chaff like it feels sometimes like trying to find a needle in the Hast stack right and it's a shame right like",
    "start": "1202080",
    "end": "1209360"
  },
  {
    "text": "and because all those things are these kind of grand designs about an eventual destination and quality and focus and",
    "start": "1209360",
    "end": "1216320"
  },
  {
    "text": "they're all people try to do good things but losing the message on the way and",
    "start": "1216320",
    "end": "1222640"
  },
  {
    "text": "actually focusing on the correct form to express the problem space they have now and the scale of the problems they have",
    "start": "1222640",
    "end": "1228280"
  },
  {
    "text": "now much more valuable to that piece of software than all the stuff around it",
    "start": "1228280",
    "end": "1233320"
  },
  {
    "text": "like it makes working in systems like that kind of like swimming through treal it's almost like since the",
    "start": "1233320",
    "end": "1239400"
  },
  {
    "text": "popularization of microservice architectures we forgot how to build nice small things you know and nice",
    "start": "1239400",
    "end": "1246360"
  },
  {
    "text": "small things are beautiful I think the best software we have is kind of the antithesis of that statement it's software that is smaller more beautiful",
    "start": "1246360",
    "end": "1253480"
  },
  {
    "text": "and concise that contains a larger problem space than you think it could possibly manage right that's that's",
    "start": "1253480",
    "end": "1259440"
  },
  {
    "text": "beautiful design now the interesting thing about kind of software design is that even the",
    "start": "1259440",
    "end": "1265840"
  },
  {
    "text": "use of the word design here is probably contentious because I I appreciate that a lot of programmers don't perceive",
    "start": "1265840",
    "end": "1271679"
  },
  {
    "text": "themselves to be visual people right it's a it's a Trope it's not true but it's a Trope so",
    "start": "1271679",
    "end": "1278000"
  },
  {
    "text": "designs as a exists specifically to solve problems and communicate intent",
    "start": "1278000",
    "end": "1283520"
  },
  {
    "text": "using Form and Function that's what design is people often confuse design with art art is the thing we use to",
    "start": "1283520",
    "end": "1291400"
  },
  {
    "text": "express ourselves to cope with The Human Condition there are commonalities between those two things but they are",
    "start": "1291400",
    "end": "1297240"
  },
  {
    "text": "not the same right so let's we we're not thinking about art we're not thinking about making things pretty we're thinking about design and",
    "start": "1297240",
    "end": "1304520"
  },
  {
    "text": "communication so the interesting thing about design is it's really temporal in nature well those are really blown out",
    "start": "1304520",
    "end": "1310880"
  },
  {
    "text": "color petts on those slides so these are two really really iconic pieces and I do",
    "start": "1310880",
    "end": "1315960"
  },
  {
    "text": "not believe I'm about to say this of period design",
    "start": "1315960",
    "end": "1320520"
  },
  {
    "text": "we're all old um and the interesting thing about this is they're both nonsense now but those designs don't",
    "start": "1321600",
    "end": "1328400"
  },
  {
    "text": "mean anything to people that were not there at the time and didn't use them precisely because designs are temporal",
    "start": "1328400",
    "end": "1335120"
  },
  {
    "text": "and exist in a context right and and same with software",
    "start": "1335120",
    "end": "1340400"
  },
  {
    "text": "right so there's there this really interesting observation actually these two iconic designs weren't really the L",
    "start": "1340400",
    "end": "1346240"
  },
  {
    "text": "of their lines at all and people look at them and think they're obsolute delete things but actually they both evolved and",
    "start": "1346240",
    "end": "1351400"
  },
  {
    "text": "changed now that's because fundamental to the concept of design is the concept of",
    "start": "1351400",
    "end": "1356960"
  },
  {
    "text": "iteration phones didn't cease to exist Walkman didn't cease to exist they both",
    "start": "1356960",
    "end": "1362360"
  },
  {
    "text": "were iterated out to touch phones and mobile phones and dism and iPods and the",
    "start": "1362360",
    "end": "1367559"
  },
  {
    "text": "really like irony irony maybe fascinating artifact of these two designs is they converged two completely",
    "start": "1367559",
    "end": "1373559"
  },
  {
    "text": "disperate things converged because we realized the real problem we were trying to solve was the trans of audio and not",
    "start": "1373559",
    "end": "1380760"
  },
  {
    "text": "making phone calls or listening to you know banging lead Zeppelin albums or something like there were different things and they converged and I think",
    "start": "1380760",
    "end": "1388760"
  },
  {
    "text": "this is really inherent this evolutionary process that underpins great design and and the nice thing about that is it really exactly is the",
    "start": "1388760",
    "end": "1395919"
  },
  {
    "text": "same reason that some of the disciplines we have in software development that are fundamentally of software like tdd",
    "start": "1395919",
    "end": "1402360"
  },
  {
    "text": "getting Caster's design totally makes sense right the the reason tddd makes",
    "start": "1402360",
    "end": "1407799"
  },
  {
    "text": "sense as design is it's fundamentally an iterative process that involves you building context over time super super",
    "start": "1407799",
    "end": "1415200"
  },
  {
    "text": "fascinating right and you know I know there's a trend at the moment of people to kind of criticize tdd and its utility",
    "start": "1415200",
    "end": "1420600"
  },
  {
    "text": "on the internet but I can tell you one thing for certain any of the people that post big screeds about tdd being wrong",
    "start": "1420600",
    "end": "1426520"
  },
  {
    "text": "have never used it for iterative design I'll tell you exactly what they did they wrote A test they made it past and they",
    "start": "1426520",
    "end": "1431840"
  },
  {
    "text": "moved on cool first two steps of a three-step process gold star right most",
    "start": "1431840",
    "end": "1438640"
  },
  {
    "text": "of the people that criticize tdd haven't really used it to realize design right",
    "start": "1438640",
    "end": "1444760"
  },
  {
    "text": "they just they never really did it they didn't do the refact they didn't do the cycle and it also kind of highlights",
    "start": "1444760",
    "end": "1450360"
  },
  {
    "text": "this other magical quality of design as a discipline that aot this kind of thinking about the form of things lead you to which is like there are entire",
    "start": "1450360",
    "end": "1457840"
  },
  {
    "text": "categories of problems that exist in the world that are completely invisible to you until you can observe them visually",
    "start": "1457840",
    "end": "1464400"
  },
  {
    "text": "it's like a it's a funny Quirk and again this trips up a lot of people that don't think that themselves as visual people",
    "start": "1464400",
    "end": "1469799"
  },
  {
    "text": "but we've all had the experience of opening up a software library and kind of you know C your you're intell sensing",
    "start": "1469799",
    "end": "1475960"
  },
  {
    "text": "your way through life and he just like why are the apis structured like this this is like this is horrible right",
    "start": "1475960",
    "end": "1482279"
  },
  {
    "text": "that's you having a vicious response to the design of their API and that's precisely what a pattern like tdd in its",
    "start": "1482279",
    "end": "1488960"
  },
  {
    "text": "red green refactor red green refactor is meant to put front and center in the in the code editor of the author as they're",
    "start": "1488960",
    "end": "1495080"
  },
  {
    "text": "writing it right there's this really great um anecdote about when they were first filming Star Wars and it was one",
    "start": "1495080",
    "end": "1501559"
  },
  {
    "text": "of the Star Wars sequels and you know how like all the Star Wars films after the'80s sucked and it's because the",
    "start": "1501559",
    "end": "1507880"
  },
  {
    "text": "scripts were very bad right funny story George Lucas was married to a very very famous script editor in the 70s and 80s",
    "start": "1507880",
    "end": "1514640"
  },
  {
    "text": "and they got divorced between then and the the ones with the bad scripts and there's a story about um I think they",
    "start": "1514640",
    "end": "1520679"
  },
  {
    "text": "were filming the final of the original films and Harrison Ford is doing retakes and it's because George Lucas is such a",
    "start": "1520679",
    "end": "1526240"
  },
  {
    "text": "bad script writer after about 30 texts he's like George you can write this but you can't say it and he storms",
    "start": "1526240",
    "end": "1531640"
  },
  {
    "text": "offset and that's exactly the same thing that happens when people have a design in their head but don't express it",
    "start": "1531640",
    "end": "1537120"
  },
  {
    "text": "visually and allow them themselves the kind of the space and time to take it in and respond to how it feels to use right",
    "start": "1537120",
    "end": "1544159"
  },
  {
    "text": "that's kind of the software equivalent um so I don't think it's you know categorically impossible to to come up",
    "start": "1544159",
    "end": "1550799"
  },
  {
    "text": "with some good apis without like iterating them and seeing them but the the odds are completely stacked against you and all you're really doing is",
    "start": "1550799",
    "end": "1557360"
  },
  {
    "text": "cutting yourself off for an entire set of feedback so I guess with this kind of",
    "start": "1557360",
    "end": "1562799"
  },
  {
    "text": "stuff in mind and looking at this framing device as software design as just regular design it's probably worth",
    "start": "1562799",
    "end": "1569279"
  },
  {
    "text": "us thinking about the context that some of our software is built in today versus the context of the software that was",
    "start": "1569279",
    "end": "1575080"
  },
  {
    "text": "built at the time kind of the gang of four books were written right it it challenges some of the more classical",
    "start": "1575080",
    "end": "1581480"
  },
  {
    "text": "works of the genre we're not building desktop software anymore we programming languages have made categories of",
    "start": "1581480",
    "end": "1587279"
  },
  {
    "text": "problems obsolete most languages have kind of functions as data um a lot of",
    "start": "1587279",
    "end": "1592440"
  },
  {
    "text": "those kinds of patterns are now gone and we don't need them anymore because we evolved much like the dis and the and",
    "start": "1592440",
    "end": "1599559"
  },
  {
    "text": "the telephone evolved into modern smartphones and that's beautiful actually now now I guess the thing is",
    "start": "1599559",
    "end": "1606399"
  },
  {
    "text": "when when I start to say things like this all the 10th Generation clean architecture folks just like really really hate it right they they most of",
    "start": "1606399",
    "end": "1613520"
  },
  {
    "text": "the things that and I'm I'm sorry in advents most",
    "start": "1613520",
    "end": "1618679"
  },
  {
    "text": "all of the things that you think are best practice are just things that fit your aesthetic sensibility one time",
    "start": "1618679",
    "end": "1624320"
  },
  {
    "text": "they're things you saw work once they're just basically overblown structural design patterns most of the time and",
    "start": "1624320",
    "end": "1631240"
  },
  {
    "text": "they kind of look as stupid as the organization by technical concept",
    "start": "1631240",
    "end": "1636360"
  },
  {
    "text": "example from the start when you zoom out it's it's a bit of a I don't know it's a weird bummer like lots of system design",
    "start": "1636360",
    "end": "1644039"
  },
  {
    "text": "these days gets gets caught up into this kind of decomposition clean AR architecture Everything is Everything is",
    "start": "1644039",
    "end": "1650000"
  },
  {
    "text": "ports and adapters kind of pattern and you know most systems have been atomized",
    "start": "1650000",
    "end": "1655320"
  },
  {
    "text": "into these big micr Services who am I kidding they're all distributed monoliths you do know that right if I",
    "start": "1655320",
    "end": "1660360"
  },
  {
    "text": "kick one over and the system goes down it's not the thing um iest but people",
    "start": "1660360",
    "end": "1665679"
  },
  {
    "text": "describe all that stuff as best practice right as best practice without saying on",
    "start": "1665679",
    "end": "1670760"
  },
  {
    "text": "what axis in what context for what use for what people right like there's no such thing best practice is a lie it",
    "start": "1670760",
    "end": "1677360"
  },
  {
    "text": "doesn't exist so I want to show you another example",
    "start": "1677360",
    "end": "1683159"
  },
  {
    "text": "where the overall picture looks fine when zoomed out but when you zoom into the detail we we're living in The Divine",
    "start": "1683159",
    "end": "1690600"
  },
  {
    "text": "Comedy um so this is an application that I was helping people fix recently again",
    "start": "1690600",
    "end": "1696600"
  },
  {
    "text": "you do not have to read the words just look at the number of boxes right it this is like a classic",
    "start": "1696600",
    "end": "1702480"
  },
  {
    "text": "prescriptive clean architecture like handcuffing conundrum but all I I actually see here",
    "start": "1702480",
    "end": "1708880"
  },
  {
    "text": "is like the telltale signs of complete thoughtlessness right so what this is is",
    "start": "1708880",
    "end": "1715720"
  },
  {
    "text": "a system which we were trying to fix up because it had build times of like 20",
    "start": "1715720",
    "end": "1721240"
  },
  {
    "text": "minutes and it was like it was an API the whole thing was just an API but there were like 13 C projects with then",
    "start": "1721240",
    "end": "1729880"
  },
  {
    "text": "13 common uh direct dependency libraries underneath it for their Core Business logic BL yeah and then a common Library",
    "start": "1729880",
    "end": "1738760"
  },
  {
    "text": "between them and then a library like a core library that the common library and the applications depended on I'm just like what is all this and then I look at",
    "start": "1738760",
    "end": "1745799"
  },
  {
    "text": "the 13 Bill pipelines right one for each application times three",
    "start": "1745799",
    "end": "1751840"
  },
  {
    "text": "environments test Solutions each distinct for each of the things so it was basically like 64 66 C projects and",
    "start": "1751840",
    "end": "1759519"
  },
  {
    "text": "one solution and the grand grand irony was all of those like 13 * 3 whatever",
    "start": "1759519",
    "end": "1767760"
  },
  {
    "text": "that number is 929 Bill pipelines we're all taking these applications putting",
    "start": "1767760",
    "end": "1772880"
  },
  {
    "text": "them onto the same physical machine with the same lad balancer in front of them so they were served as one app and I",
    "start": "1772880",
    "end": "1779279"
  },
  {
    "text": "walked in and I basically table flipped she like why are you hurting yourselves this whole thing was maintained by one",
    "start": "1779279",
    "end": "1784840"
  },
  {
    "text": "team of four people and I'm just like who is who is this four like is this performance art is",
    "start": "1784840",
    "end": "1792080"
  },
  {
    "text": "this like who why are you harming yourselves you're sitting here and they came to me because oh David the build times are long",
    "start": "1792080",
    "end": "1799200"
  },
  {
    "text": "that's your problem cool cool that's what you think the problem is",
    "start": "1799200",
    "end": "1804880"
  },
  {
    "text": "so the total cognitive load of understanding this and all of those",
    "start": "1804880",
    "end": "1810279"
  },
  {
    "text": "moving Parts which honestly I think were well intentioned people did what they thought",
    "start": "1810279",
    "end": "1816720"
  },
  {
    "text": "was right and what they were meant to do because they were given a right answer was all done by this single team",
    "start": "1816720",
    "end": "1824279"
  },
  {
    "text": "and the irony is I opened up some of the code files and we went through a cleaning proc process later on",
    "start": "1824279",
    "end": "1830039"
  },
  {
    "text": "everything started looking like the thing on the left became something that looked like the thing on the right they totally neglected the actual internal",
    "start": "1830039",
    "end": "1837000"
  },
  {
    "text": "hygiene of the code base in their craving for these large scale organizational patterns everything",
    "start": "1837000",
    "end": "1843120"
  },
  {
    "text": "looked good from 20,000 ft gold star but like what this really is in my eyes is",
    "start": "1843120",
    "end": "1849480"
  },
  {
    "text": "people focusing on macro design rather than the moment to moment form and flow of code and it's horrible and you know",
    "start": "1849480",
    "end": "1855679"
  },
  {
    "text": "the truth is I I'm I'm over izing this these were good people doing well-intentioned work who I like very",
    "start": "1855679",
    "end": "1861880"
  },
  {
    "text": "much but I see stuff like this all the time yeah I worked for 15 years as an independent consultant and like so much",
    "start": "1861880",
    "end": "1868200"
  },
  {
    "text": "software looks like this so how did we spot and fix this",
    "start": "1868200",
    "end": "1873240"
  },
  {
    "text": "right what we did is we first rounded did a like a trim of complexity so we collapsed all the families of modules",
    "start": "1873240",
    "end": "1880080"
  },
  {
    "text": "rolling them together so each web app had one direct dependency we just mushed those together we literally cut and pasted the code into the same assembly",
    "start": "1880080",
    "end": "1886840"
  },
  {
    "text": "cool instantly half the footprint of the system we then merge the test assemblies half the footprint of the the test code",
    "start": "1886840",
    "end": "1893320"
  },
  {
    "text": "base and then all I did is I copied all of the files into one app and deployed",
    "start": "1893320",
    "end": "1898840"
  },
  {
    "text": "it 13 times and just left all the firewall rules to map as if it was",
    "start": "1898840",
    "end": "1904200"
  },
  {
    "text": "different apps and then once we knew that work we deleted everything else and then we had one app and that was it and",
    "start": "1904200",
    "end": "1910200"
  },
  {
    "text": "it took us 10 days really chainsaws out to",
    "start": "1910200",
    "end": "1915760"
  },
  {
    "text": "fix 17c build time because all that was really happening was they were dying on the",
    "start": "1915760",
    "end": "1921639"
  },
  {
    "text": "font of IO right like discs spin at a certain speed you you can't copy megabytes and",
    "start": "1921639",
    "end": "1928200"
  },
  {
    "text": "megabytes of binaries and dependencies 64 times without it costing you something and and I think it was all",
    "start": "1928200",
    "end": "1933440"
  },
  {
    "text": "this kind of well-intentioned high order thinking that just I don't know they forgot how software worked in the mix",
    "start": "1933440",
    "end": "1939519"
  },
  {
    "text": "and the team were really grateful and they were like oh God this is really obvious now and then then I left it with them and they could use their",
    "start": "1939519",
    "end": "1944720"
  },
  {
    "text": "refactoring tools to quickly clean up the code base and they could go through and it was it was good and everything",
    "start": "1944720",
    "end": "1950360"
  },
  {
    "text": "was collocated because what they had at the start was obviously one system right and",
    "start": "1950360",
    "end": "1956320"
  },
  {
    "text": "I think all of this talk of kind of decomposition and clean architecture has dragged us to this place where we are",
    "start": "1956320",
    "end": "1962760"
  },
  {
    "text": "motivated to pull everything apart without thinking that like you know scalability comes at specific costs",
    "start": "1962760",
    "end": "1969639"
  },
  {
    "text": "right you separate things and you buy a cost every time so if you just do it for fun you're getting",
    "start": "1969639",
    "end": "1976519"
  },
  {
    "text": "nothing so so yeah that was what it looked like at the end which is objectively objectively very funny build",
    "start": "1976519",
    "end": "1984039"
  },
  {
    "text": "smaller things so let's talk about the opposite let's negate my argument there are of",
    "start": "1984039",
    "end": "1990600"
  },
  {
    "text": "course certain problem spaces where there are well-known good structural design patterns so the most glaringly",
    "start": "1990600",
    "end": "1997880"
  },
  {
    "text": "obvious example is kind of RPC style systems like HTTP apis that often map",
    "start": "1997880",
    "end": "2003639"
  },
  {
    "text": "quite neatly to things like command query patterns right they're they're good right they're fine but the truth is",
    "start": "2003639",
    "end": "2009360"
  },
  {
    "text": "in those systems using wellknown good patterns actually makes the form and the",
    "start": "2009360",
    "end": "2014919"
  },
  {
    "text": "flow and the organization of your components even more important because in any design where you make lots and",
    "start": "2014919",
    "end": "2020200"
  },
  {
    "text": "lots of things look the same getting the bits that are different to be obvious is your challenge right I",
    "start": "2020200",
    "end": "2026880"
  },
  {
    "text": "suppose what I'm reaching for is it's not just what you say but it's also how you say it and it matters because when",
    "start": "2026880",
    "end": "2033039"
  },
  {
    "text": "your ma macro level design is comfortable people skim read right just like would skim read in text if people",
    "start": "2033039",
    "end": "2039240"
  },
  {
    "text": "were were waffling in written word you just skim past the content and you missed the",
    "start": "2039240",
    "end": "2044760"
  },
  {
    "text": "detail and I think this is really the the central problem with well-known good designs is that like it's really easy to",
    "start": "2044760",
    "end": "2050440"
  },
  {
    "text": "learn a design pattern or two and then and we've all been there and I'll tell you why in a minute and everything in",
    "start": "2050440",
    "end": "2056520"
  },
  {
    "text": "the world looks like that thing you know all of a sudden so let me tell you about mistakes I have made in my career we we",
    "start": "2056520",
    "end": "2062839"
  },
  {
    "text": "we could feel like we're all in the same boat together so I learned about MVC and I thought everything was a controll",
    "start": "2062839",
    "end": "2069320"
  },
  {
    "text": "uh I learned about aspect oriented programming and I thought everything was chains of interceptors um I learned about",
    "start": "2069320",
    "end": "2075440"
  },
  {
    "text": "pipelines and thought everything was a pipeline with you know the middleware patterns um I had a tech lead tell me",
    "start": "2075440",
    "end": "2083000"
  },
  {
    "text": "that oh controllers only ever talk HTTP no business logic so then I thought everything was an application",
    "start": "2083000",
    "end": "2089440"
  },
  {
    "text": "service and then obviously when microservice design first got popular I thought everything was a",
    "start": "2089440",
    "end": "2095079"
  },
  {
    "text": "microservice I have made many of those mistakes Mes in my career all of them",
    "start": "2095079",
    "end": "2100839"
  },
  {
    "text": "repeatedly and it takes time to learn that uniformity is actually the opposite",
    "start": "2100839",
    "end": "2106040"
  },
  {
    "text": "of expressiveness and it's important that when different parts of your software do something different their form reflects",
    "start": "2106040",
    "end": "2113520"
  },
  {
    "text": "their difference they look different that they cause you to stop and jolt and change your approach visual variation",
    "start": "2113520",
    "end": "2120280"
  },
  {
    "text": "leads the eye it encourages reading instead of skim reading now intentionality is really the",
    "start": "2120280",
    "end": "2128119"
  },
  {
    "text": "opposite of complexity in in my mind it's the stop doing things just because",
    "start": "2128119",
    "end": "2133839"
  },
  {
    "text": "stop cargo culting um I guess the thing I try and Coach my teams when when I'm doing like a a pairing code review is",
    "start": "2133839",
    "end": "2141240"
  },
  {
    "text": "like if you don't understand why you've made a spe a particular choice don't make it right don't make it until you",
    "start": "2141240",
    "end": "2148160"
  },
  {
    "text": "can justify that library or that particular API or that approach if you're just doing it because it's there",
    "start": "2148160",
    "end": "2154119"
  },
  {
    "text": "you you're probably wrong or you'll be wrong later um I guess the reason that people",
    "start": "2154119",
    "end": "2160319"
  },
  {
    "text": "make these quick choices is because so much of software is context sensitive that there are so many times where",
    "start": "2160319",
    "end": "2166200"
  },
  {
    "text": "blindly applying a design pattern makes software more difficult to reason about and our job when we're designing",
    "start": "2166200",
    "end": "2173079"
  },
  {
    "text": "software is fundamentally this war of complexity so one of the things that strikes me",
    "start": "2173079",
    "end": "2178920"
  },
  {
    "text": "when we talk about complexity is I'm a little bit shocked at what things people think are complex versus what things people don't think are complex problems",
    "start": "2178920",
    "end": "2186480"
  },
  {
    "text": "so I read this really really great book a year or two ago um so the book is",
    "start": "2186480",
    "end": "2191560"
  },
  {
    "text": "called a philosophy of software design by a man called John ker how who is a",
    "start": "2191560",
    "end": "2196680"
  },
  {
    "text": "university lecturer who runs programming courses as if they are literature courses where he has people come in with",
    "start": "2196680",
    "end": "2202680"
  },
  {
    "text": "their code and he'll do a critique and a marking and they'll come back and they'll revise them like drafts and he",
    "start": "2202680",
    "end": "2208440"
  },
  {
    "text": "has this great chapter I think it's chapter three in this book which really gets to the heart of why complexity is a",
    "start": "2208440",
    "end": "2214160"
  },
  {
    "text": "problem in software now complexity is anything related to the structure of a software",
    "start": "2214160",
    "end": "2219640"
  },
  {
    "text": "system that makes it hard to understand or modify the system sounds simple and obvious but it's correct and it's the",
    "start": "2219640",
    "end": "2226520"
  },
  {
    "text": "central theme of this chapter that complexity isn't caused by like a single catastrophic error in your design",
    "start": "2226520",
    "end": "2232680"
  },
  {
    "text": "generally it's the tiny paper cuts that accumulate over time it's kind of like depression and happiness depression will",
    "start": "2232680",
    "end": "2239040"
  },
  {
    "text": "get you like a little bit but you'll forget the happy bits right because they're not quite as as moving in the",
    "start": "2239040",
    "end": "2244160"
  },
  {
    "text": "moment it's it it comes in from this collection of depend Tendencies obscurities and idiosyncrasies at work",
    "start": "2244160",
    "end": "2251040"
  },
  {
    "text": "is what he says so he describes complexity as the thing that leads to what the this this thing called change",
    "start": "2251040",
    "end": "2257160"
  },
  {
    "text": "amplification High cognitive load and unknown unknowns leading to an explosion of work and effort so that the number of",
    "start": "2257160",
    "end": "2264280"
  },
  {
    "text": "modifications it takes to build a piece of software exponentially increases with each added feature that's how you know",
    "start": "2264280",
    "end": "2270119"
  },
  {
    "text": "what complexity is and actually when you build on that definition you think about it there's lots of categories of things",
    "start": "2270119",
    "end": "2275200"
  },
  {
    "text": "that are complexity that you don't realize um I think thoughtful design is kind of the Salve for",
    "start": "2275200",
    "end": "2281839"
  },
  {
    "text": "this but there's this distressing realization when you start thinking in this way you know design patterns",
    "start": "2281839",
    "end": "2288119"
  },
  {
    "text": "precisely got so popular because it gives people a way to reach towards something that they feel as good it's",
    "start": "2288119",
    "end": "2295400"
  },
  {
    "text": "like it's that um that teachers pet High School thing where you've got a good known reference answer you know nobody",
    "start": "2295400",
    "end": "2300920"
  },
  {
    "text": "ever got fired for buying IBM I used the right design pattern technical leader I",
    "start": "2300920",
    "end": "2306040"
  },
  {
    "text": "did a good job please appreciate my work but software doesn't really have many",
    "start": "2306040",
    "end": "2312040"
  },
  {
    "text": "definite conclusions in in it really and and once you've seen enough code bases",
    "start": "2312040",
    "end": "2317640"
  },
  {
    "text": "in enough languages you you start to realize that what most of the arbitrary stylistic qualities of code that people",
    "start": "2317640",
    "end": "2323960"
  },
  {
    "text": "fixate on tabs versus spaces brace style mostly irrelevant right actually",
    "start": "2323960",
    "end": "2330839"
  },
  {
    "text": "mostly irrelevant they're all um taste really but instead you I I've ended up",
    "start": "2330839",
    "end": "2336560"
  },
  {
    "text": "focusing on these non-negotiable qualities that I look for in code bases that I think are far less regimented",
    "start": "2336560",
    "end": "2342599"
  },
  {
    "text": "than a style guide right I think good code is code that's easy for someone with minimal domain context to read",
    "start": "2342599",
    "end": "2350400"
  },
  {
    "text": "right code that your average developer can understand is good code by definition it's a communication form",
    "start": "2350400",
    "end": "2356560"
  },
  {
    "text": "code that focuses on developer experience productivity debug ability and usability code that you cannot debug",
    "start": "2356560",
    "end": "2363200"
  },
  {
    "text": "and you cannot change is bad code doesn't matter how smart it is under the hood",
    "start": "2363200",
    "end": "2368280"
  },
  {
    "text": "code where the intent takes up more of the visual space than the language",
    "start": "2368280",
    "end": "2373319"
  },
  {
    "text": "constructs and syntax is good code so code where you see all of the flow",
    "start": "2373319",
    "end": "2379800"
  },
  {
    "text": "control and none of the logic is code that's hard to maintain so where you",
    "start": "2379800",
    "end": "2385280"
  },
  {
    "text": "bury your functionality under language features and ceremony and the truth is regardless of",
    "start": "2385280",
    "end": "2390800"
  },
  {
    "text": "kind of language style in or intent all programmers interact with codebases the",
    "start": "2390800",
    "end": "2396240"
  },
  {
    "text": "same way right we open it up and we glance at it and then we deep dive and we read through it that's the workflow",
    "start": "2396240",
    "end": "2402160"
  },
  {
    "text": "that you always have to optimize with to actually write good code and good code by any met by those metrics makes that",
    "start": "2402160",
    "end": "2408200"
  },
  {
    "text": "job easy so at this meta level all code is",
    "start": "2408200",
    "end": "2415640"
  },
  {
    "text": "constructed from abstractions and encapsulation the two things that we have and regardless of programming or",
    "start": "2415640",
    "end": "2421680"
  },
  {
    "text": "ERA this has always been true so the programming languages and run times and Frameworks and operating systems that",
    "start": "2421680",
    "end": "2427440"
  },
  {
    "text": "you write higher level cod in today goes through an enormous amount of compilation and translation and like",
    "start": "2427440",
    "end": "2434079"
  },
  {
    "text": "there's there there's a million bits of everything between your user land code and the metal that you run on at the",
    "start": "2434079",
    "end": "2440000"
  },
  {
    "text": "bottom and you know programming languages themselves are common abstractions over operating system apis",
    "start": "2440000",
    "end": "2447800"
  },
  {
    "text": "which are which offer abstractions over assembly languages of microarchitectures and Hardware drivers and you know this",
    "start": "2447800",
    "end": "2454079"
  },
  {
    "text": "this trend continues upwards into the functions that you write and the types you define right so for",
    "start": "2454079",
    "end": "2459760"
  },
  {
    "text": "the most part we are blissfully unaware that all this stuff is happening underneath us but I want to use an",
    "start": "2459760",
    "end": "2465000"
  },
  {
    "text": "example for you that that illustrates what makes a good piece of design right",
    "start": "2465000",
    "end": "2470160"
  },
  {
    "text": "so you never have to worry about what happens when you call file open and if you ever you know it's a bit of a like",
    "start": "2470160",
    "end": "2476680"
  },
  {
    "text": "I'm 14 and high and this is deep if you ever thought about what happens when you do file open like there's so much stuff",
    "start": "2476680",
    "end": "2483560"
  },
  {
    "text": "that happens underneath that call in every programming language right you have operating Pro programming",
    "start": "2483560",
    "end": "2490960"
  },
  {
    "text": "language apis operating system apis device drivers so multiple different categories of storage be they spinning",
    "start": "2490960",
    "end": "2496760"
  },
  {
    "text": "discs solid state drives memory SSD trimming commands file systems different",
    "start": "2496760",
    "end": "2502480"
  },
  {
    "text": "kinds of file systems petitioning all that stuff exists in the file open API",
    "start": "2502480",
    "end": "2508119"
  },
  {
    "text": "but you never have to comprehend it because that API reduces the cognitive load on the",
    "start": "2508119",
    "end": "2513480"
  },
  {
    "text": "user right so when we when we dig deep into this you can apply that same logic to any any",
    "start": "2513480",
    "end": "2520720"
  },
  {
    "text": "module right and Ander how calls this concept the the idea of a deep or a",
    "start": "2520720",
    "end": "2525760"
  },
  {
    "text": "shallow module when he deals with complexity he says that the modules of any kind be they packages or apis things",
    "start": "2525760",
    "end": "2532599"
  },
  {
    "text": "that reduce complexity are deep modules and things that amplify complexity are",
    "start": "2532599",
    "end": "2538200"
  },
  {
    "text": "shallow modules right so deep modules are modules that offer a huge amount of",
    "start": "2538200",
    "end": "2543400"
  },
  {
    "text": "benefit for a very very narrow API file open is exactly a perfect example of a",
    "start": "2543400",
    "end": "2549040"
  },
  {
    "text": "deep module the inverse is then also true libraries and modules offer minimal",
    "start": "2549040",
    "end": "2555720"
  },
  {
    "text": "benefit with very very expensive apis expose your application to an explosion",
    "start": "2555720",
    "end": "2560760"
  },
  {
    "text": "of complexity not because you're using it all but you could be therefore the the job on you to comprehend what's",
    "start": "2560760",
    "end": "2567040"
  },
  {
    "text": "happening when you interact with that module so much greater right",
    "start": "2567040",
    "end": "2573079"
  },
  {
    "text": "so as much a factor of avoiding the wrong abstract is finding kind of the",
    "start": "2573079",
    "end": "2578400"
  },
  {
    "text": "right ones so generally any module of code you find should contain a problem",
    "start": "2578400",
    "end": "2584400"
  },
  {
    "text": "space in its entirety that's what you're aiming to do contain an entire domain",
    "start": "2584400",
    "end": "2589480"
  },
  {
    "text": "and you're not meant to leak any details of the implementation of that domain upwards right so it means abstractions",
    "start": "2589480",
    "end": "2597200"
  },
  {
    "text": "that include things like pass through methods pass through methods have become one of my like biggest massive red flags",
    "start": "2597200",
    "end": "2602559"
  },
  {
    "text": "in code bases because by those definitions of deep and shallow modules you're expose the 100% of the surface",
    "start": "2602559",
    "end": "2609559"
  },
  {
    "text": "area of the abstraction underneath you and you don't give it a language or",
    "start": "2609559",
    "end": "2614720"
  },
  {
    "text": "provide any um Creature Comforts or syntactic sugar to reduce that complexity so you're literally just",
    "start": "2614720",
    "end": "2620520"
  },
  {
    "text": "amplifying the noise from the thing above and adding just junk on top of it so delete all of those rapper classes",
    "start": "2620520",
    "end": "2626599"
  },
  {
    "text": "right unless you're doing something meaningful um the other tell is that",
    "start": "2626599",
    "end": "2632359"
  },
  {
    "text": "good deep modules never expose types that they actually use in their",
    "start": "2632359",
    "end": "2638079"
  },
  {
    "text": "implementation because the types that they use in their implementation should be a lower order than the way that they",
    "start": "2638079",
    "end": "2643720"
  },
  {
    "text": "describe the output of that thing to contain the complexity so all of a sudden like I I read this chapter and I",
    "start": "2643720",
    "end": "2649280"
  },
  {
    "text": "sat and I I properly thought about it for about a week I was like ah actually all these categories of things that I",
    "start": "2649280",
    "end": "2654319"
  },
  {
    "text": "see in the software the things that give me the ick that's what it is that's the reason why I don't like these functions",
    "start": "2654319",
    "end": "2660680"
  },
  {
    "text": "that's the reason why these things are easy to use super super useful and I you know I think our software is kind of",
    "start": "2660680",
    "end": "2666680"
  },
  {
    "text": "riddled with thoughtless abstraction and poor encapsulation and every time a design",
    "start": "2666680",
    "end": "2672079"
  },
  {
    "text": "decision like that is made it decreases the reason a module exists right um so",
    "start": "2672079",
    "end": "2677640"
  },
  {
    "text": "anything that adds large amount of boiler plate to your system bad code and you all already knew that but that's",
    "start": "2677640",
    "end": "2684960"
  },
  {
    "text": "why now I guess you get to a certain point",
    "start": "2684960",
    "end": "2690280"
  },
  {
    "text": "where you realize that all talk about design dissolves into discussion of dogma and absolutism right because I",
    "start": "2690280",
    "end": "2697119"
  },
  {
    "text": "tell you the one true thing I know about software design and I'll do this my job title is distinguished engineer head of",
    "start": "2697119",
    "end": "2702839"
  },
  {
    "text": "architecture let me tell you what I think about software architecture there's no good design there is no one",
    "start": "2702839",
    "end": "2707960"
  },
  {
    "text": "design there isn't one doesn't exist not true doesn't depend it doesn't",
    "start": "2707960",
    "end": "2713599"
  },
  {
    "text": "exist and any design when you stretch it to its logical absolute extreme becomes",
    "start": "2713599",
    "end": "2720240"
  },
  {
    "text": "absurd right so the one true thing I can tell you is if someone says they have",
    "start": "2720240",
    "end": "2725520"
  },
  {
    "text": "the right design for everything the only thing I can tell you for a fact is that they are wrong doesn't exist so",
    "start": "2725520",
    "end": "2732200"
  },
  {
    "text": "designing software with intention software that survives is an exercise in compromise it's always an exercise in",
    "start": "2732200",
    "end": "2738720"
  },
  {
    "text": "context it's always an exercise in tradeoff and it's why everyone with any experience in software design basically",
    "start": "2738720",
    "end": "2745480"
  },
  {
    "text": "just says it depends right it depends how should I well it depends on what well how many users what context what",
    "start": "2745480",
    "end": "2751599"
  },
  {
    "text": "cost how many people when are you going to change it what does it do there's about 30 different lenses you have to",
    "start": "2751599",
    "end": "2757119"
  },
  {
    "text": "look through your software out to understand what it depends on to find that good design and you know a lot of the poor",
    "start": "2757119",
    "end": "2763000"
  },
  {
    "text": "trade-offs you will see in software uh really involve people actively not understanding the sources of complexity",
    "start": "2763000",
    "end": "2769200"
  },
  {
    "text": "in their own systems and that leads to weird design doing things like taking",
    "start": "2769200",
    "end": "2774280"
  },
  {
    "text": "additional dependencies packages or services for like single simple use cases you know there's a lot to be said",
    "start": "2774280",
    "end": "2780720"
  },
  {
    "text": "about maintaining 30 lines of code that you own rather than a package you have to deal with versioning and security",
    "start": "2780720",
    "end": "2786920"
  },
  {
    "text": "compliance and God knows what else to solve one thing and you know all",
    "start": "2786920",
    "end": "2792520"
  },
  {
    "text": "dependencies have surface areas so if you take a package all of a sudden you've exposed your application to all that dependency's",
    "start": "2792520",
    "end": "2798720"
  },
  {
    "text": "complexity now it's interesting because that that sentiment oh just write it yourself is directly at odds with the",
    "start": "2798720",
    "end": "2804800"
  },
  {
    "text": "other well-known and common correct sentiment of well the best amount of code you can write is no code right the",
    "start": "2804800",
    "end": "2810599"
  },
  {
    "text": "less you can write the better because the less you have to maintain but the truth is you know every line of code you",
    "start": "2810599",
    "end": "2817280"
  },
  {
    "text": "adopt is also code you own and I think that's where it gets lost like cool depend on a package but that's your",
    "start": "2817280",
    "end": "2823200"
  },
  {
    "text": "responsibility right you know so something more constrained with a smaller surface area pushes less",
    "start": "2823200",
    "end": "2829200"
  },
  {
    "text": "complexity into your applications sometimes and that's kind of really the thing you know the available potential",
    "start": "2829200",
    "end": "2835000"
  },
  {
    "text": "surface area of code that you are exposed to is where complexity flows from so I'll give you a really practical",
    "start": "2835000",
    "end": "2841640"
  },
  {
    "text": "example um I recently spent 4 hours trying to evaluate every stat site",
    "start": "2841640",
    "end": "2847280"
  },
  {
    "text": "generator to make a fullpage website and gave up and wrote a 30 line program instead right because each one of them",
    "start": "2847280",
    "end": "2854200"
  },
  {
    "text": "was flagged as experimental or used a weird view engine or like God knows what dependency hell mpm chaos and I just",
    "start": "2854200",
    "end": "2862200"
  },
  {
    "text": "thought you know what I can write a program that does everything I need to do and I will never have to update it",
    "start": "2862200",
    "end": "2867280"
  },
  {
    "text": "and it's fine because I'm building a full-page website right I just needed it to read some markdown files I could",
    "start": "2867280",
    "end": "2873240"
  },
  {
    "text": "write that simpler",
    "start": "2873240",
    "end": "2878839"
  },
  {
    "text": "so this is all about kind of the idea of having your designs continually being part of a tradeoff and what what you end",
    "start": "2879000",
    "end": "2885960"
  },
  {
    "text": "up with is instead of hard rules and good designs you end up with tests like psychological tests that you apply to",
    "start": "2885960",
    "end": "2892480"
  },
  {
    "text": "design to find out whether something is good or bad um and I want to take you through a few tests that I use to",
    "start": "2892480",
    "end": "2898480"
  },
  {
    "text": "evaluate designs um to help people find the right answer for them so this is my",
    "start": "2898480",
    "end": "2903960"
  },
  {
    "text": "favorite one could you do the thing doing with less moving Parts less moving Parts generally better",
    "start": "2903960",
    "end": "2911119"
  },
  {
    "text": "because less things can go wrong when there are less moving parts and that again feels like a a contradiction of",
    "start": "2911119",
    "end": "2916960"
  },
  {
    "text": "like split your software up into small pieces but it isn't moving parts are process boundaries microservices",
    "start": "2916960",
    "end": "2922760"
  },
  {
    "text": "failable Parts it's actually kind of better to have a system that fails as a unit than fails as lots of individual",
    "start": "2922760",
    "end": "2928400"
  },
  {
    "text": "components if it's the same people that have to diagnose the whole thing right because you can you can diagnose that",
    "start": "2928400",
    "end": "2934480"
  },
  {
    "text": "locally if it's a single unit um there are many places in our ecosystem where ballooning complexity makes working with",
    "start": "2934480",
    "end": "2940720"
  },
  {
    "text": "our software just harder so we should never extract things from our application to somewhere else just",
    "start": "2940720",
    "end": "2946000"
  },
  {
    "text": "because like it comes with a cost you're making a repository you're making Bill pipelines you have release Cycles you",
    "start": "2946000",
    "end": "2952440"
  },
  {
    "text": "have patches and support you have people that have to be on call as soon as you snap a thing out that's a whole category",
    "start": "2952440",
    "end": "2958240"
  },
  {
    "text": "of problems you just created sometimes it's the right answer but do it meaningfully make a choice that's",
    "start": "2958240",
    "end": "2964640"
  },
  {
    "text": "informed is it operable in a produ production environment like so many times I've seen",
    "start": "2964640",
    "end": "2969799"
  },
  {
    "text": "systems that have really asinine weird esoteric requirements of their operating and runtime this is getting better over",
    "start": "2969799",
    "end": "2976079"
  },
  {
    "text": "time mostly because Cloud vendors are forcing people into very very narrow boxes which is on average a good thing",
    "start": "2976079",
    "end": "2983000"
  },
  {
    "text": "um software systems are hard to observe deploy and manage are basically dead they're bad software right things should",
    "start": "2983000",
    "end": "2990200"
  },
  {
    "text": "be built to reduce operational burden always is it easy to change",
    "start": "2990200",
    "end": "2997599"
  },
  {
    "text": "here's a truism for you the only thing I can tell you that you will definitely do with your software is change it at some point right so software is hard that is",
    "start": "2997599",
    "end": "3004839"
  },
  {
    "text": "hard to change as bad software um and what that means is you should really avoid overdesign up front it's a little",
    "start": "3004839",
    "end": "3011240"
  },
  {
    "text": "bit of like the the classic yagy you ain't going to need it right design what you need for now because you know we",
    "start": "3011240",
    "end": "3018040"
  },
  {
    "text": "require designs that are easier to modify rather than the premature optimization of extensible Frameworks and libraries and as programmers we",
    "start": "3018040",
    "end": "3025280"
  },
  {
    "text": "always get dragged towards building a framework or a library because it feels like the thing you should do the vast",
    "start": "3025280",
    "end": "3030400"
  },
  {
    "text": "majority of those extension points as someone that has done this time and time again in his career and never used build",
    "start": "3030400",
    "end": "3036680"
  },
  {
    "text": "with them in mind but don't Implement them at the start and I guess what I'm really",
    "start": "3036680",
    "end": "3042359"
  },
  {
    "text": "advocating for here I suppose when I plead for intentionality is for you to write software with care and",
    "start": "3042359",
    "end": "3049960"
  },
  {
    "text": "purpose um you know there was a I had an exchange with someone that I that I",
    "start": "3049960",
    "end": "3056359"
  },
  {
    "text": "worked with with recently about some error messages i' I'd built and like my my school of error message writing which",
    "start": "3056359",
    "end": "3062920"
  },
  {
    "text": "I learned from does anyone remember ninj the really good di container now Nate Kahari who wrote ninject wrote the best",
    "start": "3062920",
    "end": "3069799"
  },
  {
    "text": "error messages I have ever seen in my entire career because you do something wrong with ninject it's like cool I failed to do this here are the three",
    "start": "3069799",
    "end": "3076319"
  },
  {
    "text": "different things I tried here's the stack traces from each one of them I think you should probably try this to resolve it and here's a link to the",
    "start": "3076319",
    "end": "3082520"
  },
  {
    "text": "documentation where we talk about this concept and this error and I'm like cool m class in error writing because it's",
    "start": "3082520",
    "end": "3088040"
  },
  {
    "text": "you know it's not just teaching someone a fish it's throwing them a box of fish at the same time um and I try and write",
    "start": "3088040",
    "end": "3093839"
  },
  {
    "text": "error messages like that it's like hi you're here because you're missing some environment variables here are the environment variables you're missing you",
    "start": "3093839",
    "end": "3100000"
  },
  {
    "text": "probably need to make a file here or you need to put them in this setting here if you're on Linux do this instead that you",
    "start": "3100000",
    "end": "3105359"
  },
  {
    "text": "give them all the information in the software it's the right place for it to be and I think that kind of care and",
    "start": "3105359",
    "end": "3110760"
  },
  {
    "text": "purpose I I jokingly describe it as like write write error messages like you're in love with the person that's going to read them and you don't want to ruin",
    "start": "3110760",
    "end": "3117119"
  },
  {
    "text": "their day right like it's a gentle human thing and I want you to think about that kind of design of your software and I",
    "start": "3117119",
    "end": "3123720"
  },
  {
    "text": "want you to think about the reader I want you to think about what form and flow do to your application and I want",
    "start": "3123720",
    "end": "3129000"
  },
  {
    "text": "you to realize that sometimes that reader you're thinking about is you right it's fine and I want you to use",
    "start": "3129000",
    "end": "3134599"
  },
  {
    "text": "all of the forms of expression you have available in your codebase to communicate meaning and intent in in",
    "start": "3134599",
    "end": "3140760"
  },
  {
    "text": "different you know problem spaces and different solutions we require different aesthetic viewpoints and different",
    "start": "3140760",
    "end": "3146160"
  },
  {
    "text": "designs signs and that's okay that's a good thing otherwise we're damning",
    "start": "3146160",
    "end": "3151359"
  },
  {
    "text": "ourselves to the rest of our careers just being either an MVC app or",
    "start": "3151359",
    "end": "3156400"
  },
  {
    "text": "everything is a big bunch of HTTP calls or I suppose the third magic category of like everything is just some react",
    "start": "3156400",
    "end": "3162280"
  },
  {
    "text": "components right the three designs um but it doesn't have to be that way it doesn't because I believe",
    "start": "3162280",
    "end": "3170040"
  },
  {
    "text": "that when you put the thought into your code base the care shows right so I was on a podcast a couple of years ago and",
    "start": "3170040",
    "end": "3176520"
  },
  {
    "text": "you know the end of podcast they always ask you that like that one kind of gotta question to try and try and elicit a",
    "start": "3176520",
    "end": "3181599"
  },
  {
    "text": "response and they just did the classic oh what would you s to yourself 25 years ago when you were getting started what",
    "start": "3181599",
    "end": "3187200"
  },
  {
    "text": "what advice would you give to yourself and I think I know the answer now I think I do take more",
    "start": "3187200",
    "end": "3194480"
  },
  {
    "text": "time take more time over everything and I think the best software that I have ever wrote where the care that I put",
    "start": "3194480",
    "end": "3200680"
  },
  {
    "text": "into it shows is where I finish and I put a CD on and I pull myself put CD on",
    "start": "3200680",
    "end": "3206640"
  },
  {
    "text": "Spotify on um pour myself a drink and I sit and I read it and I read it",
    "start": "3206640",
    "end": "3212440"
  },
  {
    "text": "obsessively and I read every line and I think why did I do that why did I make that choice why did I make that decision why",
    "start": "3212440",
    "end": "3219240"
  },
  {
    "text": "that API why that form why that organizational pattern and if I can't explain it to myself I know I will not",
    "start": "3219240",
    "end": "3225760"
  },
  {
    "text": "be able to explain it to somebody else and I change it and sometimes I change",
    "start": "3225760",
    "end": "3230880"
  },
  {
    "text": "it and I don't like what I see and we go back to where I was because I think that's the better compromise and that's",
    "start": "3230880",
    "end": "3236079"
  },
  {
    "text": "okay but giving myself that 20% extra time at the end of everything to really",
    "start": "3236079",
    "end": "3241720"
  },
  {
    "text": "take it in and you know I think in this kind of world that we live in where people are are dragged into endless bike",
    "start": "3241720",
    "end": "3247880"
  },
  {
    "text": "shedding pool request kind of machine gun fights with each other actually it's a little bit of a kindness to yourself",
    "start": "3247880",
    "end": "3254240"
  },
  {
    "text": "because like at that point no one's got anything on you in a pull request right like you've you you've had that fight",
    "start": "3254240",
    "end": "3259599"
  },
  {
    "text": "with yourself 100 times so you know why you're there um and I think all software that's built with that degree of kind of",
    "start": "3259599",
    "end": "3267000"
  },
  {
    "text": "care and love for the work means that we just never stop asking",
    "start": "3267000",
    "end": "3272880"
  },
  {
    "text": "why I love it like and I think if I drag us all the way back to the start where I",
    "start": "3272880",
    "end": "3278040"
  },
  {
    "text": "said like I was an art student like as far as I'm concerned the software we build although it kind of dra gets",
    "start": "3278040",
    "end": "3283119"
  },
  {
    "text": "dragged into these kind of Bleak commercial settings for money and survival it's our work it's the thing we",
    "start": "3283119",
    "end": "3290400"
  },
  {
    "text": "have when all this is done If I Were A Painter I would have paintings when I finish this I have software so it better",
    "start": "3290400",
    "end": "3296119"
  },
  {
    "text": "be what something I am proud of that's kind of how I feel about it like deeply",
    "start": "3296119",
    "end": "3301839"
  },
  {
    "text": "so I want to leave you with a few reading recommendations this is the the slide to actually take photos of um",
    "start": "3301839",
    "end": "3307799"
  },
  {
    "text": "partially because I don't think there are many books talking about this kind of design but there are a couple I have loved here um so the first this the",
    "start": "3307799",
    "end": "3316079"
  },
  {
    "text": "philosophy of software design it it is a truly truly brilliant book and I think the best work in this area code that",
    "start": "3316079",
    "end": "3322079"
  },
  {
    "text": "fits in your head by Mark Seaman very very new I think it's three months old talks about a lot of really really",
    "start": "3322079",
    "end": "3327240"
  },
  {
    "text": "practical applicable tips for your software and and deals with a lot of these kind of existential crises you",
    "start": "3327240",
    "end": "3332599"
  },
  {
    "text": "find on a momentto moment basis and then your code as a crime scene um by Adam",
    "start": "3332599",
    "end": "3338000"
  },
  {
    "text": "torill um really really foundational work of a former forensic psychologist who talks about understanding the",
    "start": "3338000",
    "end": "3344119"
  },
  {
    "text": "knowledge flow of your software through like doing analysis of commits and how knowledge flows between people and",
    "start": "3344119",
    "end": "3349440"
  },
  {
    "text": "check-ins super super interesting um brilliant books support authors that do interesting work please and that has",
    "start": "3349440",
    "end": "3356720"
  },
  {
    "text": "been me that has been me this is the talk it it depends I guess",
    "start": "3356720",
    "end": "3361760"
  },
  {
    "text": "basically that should have been the title um thank you appreciate",
    "start": "3361760",
    "end": "3368280"
  },
  {
    "text": "it oh that's a lot sorry I know it's a lot it's a lot and then there's not much code but please green green in the Box",
    "start": "3377240",
    "end": "3384440"
  },
  {
    "text": "makes makes them make me come back and get rained on next year it's wonderful",
    "start": "3384440",
    "end": "3392359"
  }
]