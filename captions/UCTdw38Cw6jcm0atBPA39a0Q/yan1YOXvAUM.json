[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "hello hello all right I think it's about time to start",
    "start": "4759",
    "end": "12380"
  },
  {
    "text": "okay so I think I'll just jump on in and",
    "start": "12780",
    "end": "19500"
  },
  {
    "text": "that's that's what we'll do so all right this is domain modeling in object oriented and functional programming",
    "start": "19500",
    "end": "27420"
  },
  {
    "text": "and obviously when I saw the slides today in the morning I realized well",
    "start": "27420",
    "end": "32880"
  },
  {
    "text": "that's a pretty long title right so probably a little too much so I'll just",
    "start": "32880",
    "end": "38760"
  },
  {
    "start": "36000",
    "end": "55000"
  },
  {
    "text": "shorten it ever so slightly domain modeling in oop and FP based on C sharp",
    "start": "38760",
    "end": "45300"
  },
  {
    "text": "and F sharp this is going to be a slight comparison this is going to be quite a",
    "start": "45300",
    "end": "50340"
  },
  {
    "text": "lot of code and yeah let's see if you like it but first of all well hello NDC",
    "start": "50340",
    "end": "57719"
  },
  {
    "start": "55000",
    "end": "70000"
  },
  {
    "text": "Oslo it's it's an absolute hey it's an absolute pleasure to be here and I'm",
    "start": "57719",
    "end": "63780"
  },
  {
    "text": "really really stoked and just happy so yeah let's move on",
    "start": "63780",
    "end": "69900"
  },
  {
    "text": "but first the Shameless black like Martin Kern",
    "start": "69900",
    "end": "75060"
  },
  {
    "start": "70000",
    "end": "166000"
  },
  {
    "text": "um did you hear the name probably not who the heck uh who the heck am I like who are we talking about right",
    "start": "75060",
    "end": "82020"
  },
  {
    "text": "so I in my professional experience I do about 10 years of commercial.net",
    "start": "82020",
    "end": "87240"
  },
  {
    "text": "development and I went through a lot of different projects like CRM in Poland",
    "start": "87240",
    "end": "92939"
  },
  {
    "text": "through DNA in Poland and Germany that's actually quite an interesting experience",
    "start": "92939",
    "end": "99960"
  },
  {
    "text": "I've gotta say and I'm moving towards hearing aid in Denmark so somewhere",
    "start": "99960",
    "end": "106200"
  },
  {
    "text": "close or nearby should I say I did different kinds of apps like even",
    "start": "106200",
    "end": "111780"
  },
  {
    "text": "started from a desktop app with with DB beside it right and did some web",
    "start": "111780",
    "end": "117000"
  },
  {
    "text": "development with react or embedded development also with react which is",
    "start": "117000",
    "end": "122280"
  },
  {
    "text": "kind of weird and I've been using using Azure or Azure or however you want to",
    "start": "122280",
    "end": "129179"
  },
  {
    "text": "call it extensively I'm also a fan of tdd fan of agile",
    "start": "129179",
    "end": "134959"
  },
  {
    "text": "but probably not too religious about both of those so yeah that's it in my private life I",
    "start": "134959",
    "end": "143099"
  },
  {
    "text": "do have a two-year-old son who's absolutely amazing I've got even more",
    "start": "143099",
    "end": "149280"
  },
  {
    "text": "amazing wife and I do have some Hobbies like we all do so some PC gaming digital",
    "start": "149280",
    "end": "156300"
  },
  {
    "text": "painting and when I'm just too damn curious new programming languages and",
    "start": "156300",
    "end": "161580"
  },
  {
    "text": "probably that's where this whole talk is coming from so yeah that's cool fine but let's get",
    "start": "161580",
    "end": "169200"
  },
  {
    "start": "166000",
    "end": "193000"
  },
  {
    "text": "back to the topic that's that's why we're here okay domain model so what I want to talk to you guys about",
    "start": "169200",
    "end": "177480"
  },
  {
    "text": "is the why and how of DDD obviously we won't cover the entirety of DDD that's",
    "start": "177480",
    "end": "185580"
  },
  {
    "text": "impossible in an hour simple as that so let's first tackle why are we talking",
    "start": "185580",
    "end": "191700"
  },
  {
    "text": "about it in the first place and I've got an example there's a lot of",
    "start": "191700",
    "end": "197819"
  },
  {
    "start": "193000",
    "end": "394000"
  },
  {
    "text": "examples ahead but imagine an application where you are selling a",
    "start": "197819",
    "end": "203459"
  },
  {
    "text": "policy for vehicles right so you're kind of an",
    "start": "203459",
    "end": "208980"
  },
  {
    "text": "insurance insurance company you're selling policies um what's interesting there is pretty",
    "start": "208980",
    "end": "216000"
  },
  {
    "text": "much the vehicles are divided in two categories the private vehicles and the fleet vehicles they obviously are the",
    "start": "216000",
    "end": "223200"
  },
  {
    "text": "same vehicle like underneath like the model of the car and so on but in terms",
    "start": "223200",
    "end": "229019"
  },
  {
    "text": "of domain language it's actually a vast difference what else do we have we have in each",
    "start": "229019",
    "end": "234840"
  },
  {
    "text": "vehicle we actually have a black box and if you don't know what that is you",
    "start": "234840",
    "end": "240239"
  },
  {
    "text": "should be thinking about the black box in an airplane right so that's kind of",
    "start": "240239",
    "end": "245879"
  },
  {
    "text": "this device that is mounted into the car by a professional mechanic and the",
    "start": "245879",
    "end": "252540"
  },
  {
    "text": "device will track pretty much the speed of the car the possibility of or rather whenever the crash happened what",
    "start": "252540",
    "end": "259979"
  },
  {
    "text": "happened during that time where the brakes um stepped on and so on okay and this is",
    "start": "259979",
    "end": "267300"
  },
  {
    "text": "this is what uh what is being done in UK actually the black boxes are not optional but they are just required",
    "start": "267300",
    "end": "274020"
  },
  {
    "text": "there in terms of drivers we've got similar story we've got Fleet drivers and",
    "start": "274020",
    "end": "279360"
  },
  {
    "text": "private drivers but the main difference here is that the policy in general can",
    "start": "279360",
    "end": "284820"
  },
  {
    "text": "be sold for the whole Fleet or for a particular driver and when we are",
    "start": "284820",
    "end": "290340"
  },
  {
    "text": "talking about particular driver we are talk we are talking about particular vehicle right so the policy is sold for",
    "start": "290340",
    "end": "298500"
  },
  {
    "text": "that exact vehicle so how do we model this in a classical",
    "start": "298500",
    "end": "303600"
  },
  {
    "text": "approach I would call it well my idea is quite simple we do have",
    "start": "303600",
    "end": "310020"
  },
  {
    "text": "a vehicle that has some types and since there's always this one-to-one",
    "start": "310020",
    "end": "316259"
  },
  {
    "text": "relation between vehicle and black box we can actually treat the black box as",
    "start": "316259",
    "end": "321419"
  },
  {
    "text": "part of the vehicle so we can go that way so Black Box parameters are also a",
    "start": "321419",
    "end": "328020"
  },
  {
    "text": "part of vehicle here we've got driver once again with two types we've got policies with the",
    "start": "328020",
    "end": "335460"
  },
  {
    "text": "parameter of either the driver or the fleet and here is something a little bit more complicated",
    "start": "335460",
    "end": "342240"
  },
  {
    "text": "because we do have an optional parameter because if the policy is sold to a",
    "start": "342240",
    "end": "348120"
  },
  {
    "text": "driver you've got an optional parameter of vehicle because as I mentioned that's that's the relation here right",
    "start": "348120",
    "end": "356039"
  },
  {
    "text": "and this is all fine and dandy so now let's make a change",
    "start": "356039",
    "end": "361800"
  },
  {
    "text": "and the change is let's add a new type of vehicle a short-term rental vehicle",
    "start": "361800",
    "end": "367639"
  },
  {
    "text": "and also what is probably most more important a new type of black box and",
    "start": "367639",
    "end": "373560"
  },
  {
    "text": "this black box is actually movable because this little this little black",
    "start": "373560",
    "end": "379380"
  },
  {
    "text": "box is now handled through putting it into cigarette",
    "start": "379380",
    "end": "385440"
  },
  {
    "text": "um cigarette space right so that's how you can move the black box",
    "start": "385440",
    "end": "391919"
  },
  {
    "text": "from car to car so what changed in the domain language",
    "start": "391919",
    "end": "397380"
  },
  {
    "start": "394000",
    "end": "482000"
  },
  {
    "text": "itself well we have a new vehicle then we have new type of Black Box",
    "start": "397380",
    "end": "402900"
  },
  {
    "text": "because now the Black Box can be either sold per vehicle this permanent black",
    "start": "402900",
    "end": "408479"
  },
  {
    "text": "box or per driver this one that is movable right so the whole idea is that",
    "start": "408479",
    "end": "414240"
  },
  {
    "text": "the driver can switch between cars uh what else changed changed nothing",
    "start": "414240",
    "end": "420300"
  },
  {
    "text": "much here apart from the fact that private driver now can have the policy",
    "start": "420300",
    "end": "425400"
  },
  {
    "text": "bought for the vehicle or for the black box that is movable so that's the change",
    "start": "425400",
    "end": "432300"
  },
  {
    "text": "and in our output or in our classical way what we have is those are the",
    "start": "432300",
    "end": "438720"
  },
  {
    "text": "changes in yellow right so we do have first of all the new type of the vehicle",
    "start": "438720",
    "end": "443759"
  },
  {
    "text": "and now we have to extract the Black Box obviously we could have done that from",
    "start": "443759",
    "end": "449460"
  },
  {
    "text": "the start but either way that's a change now the Black Box have types and other",
    "start": "449460",
    "end": "454919"
  },
  {
    "text": "parameters and so on what happened next is the driver has now",
    "start": "454919",
    "end": "460740"
  },
  {
    "text": "the optional parameter of Black Box because once again the driver can have the Black Box attached to it right",
    "start": "460740",
    "end": "468419"
  },
  {
    "text": "and the policy can be sold either for the vehicle or for the black box or for",
    "start": "468419",
    "end": "473580"
  },
  {
    "text": "the whole freaking Fleet so it's nothing wrong with this approach",
    "start": "473580",
    "end": "480180"
  },
  {
    "text": "but imagine we do a few more changes and",
    "start": "480180",
    "end": "485759"
  },
  {
    "start": "482000",
    "end": "517000"
  },
  {
    "text": "those are the projects that I've been working on like some Legacy code usually",
    "start": "485759",
    "end": "491460"
  },
  {
    "text": "and there's a few more changes happening and after a while you no longer",
    "start": "491460",
    "end": "496680"
  },
  {
    "text": "understand what's going on and first of all well you have to play the human compiler if you are talking about",
    "start": "496680",
    "end": "503280"
  },
  {
    "text": "somebody from the domain language you have to just be the compiler and you have to explain what does it mean for",
    "start": "503280",
    "end": "510840"
  },
  {
    "text": "him or rather understand what does it mean for him and how it translates to your code right",
    "start": "510840",
    "end": "516719"
  },
  {
    "text": "and well after a few more changes like on top of those changes the new person",
    "start": "516719",
    "end": "522719"
  },
  {
    "start": "517000",
    "end": "544000"
  },
  {
    "text": "joining the team probably won't be able to go from the code to domain language",
    "start": "522719",
    "end": "528240"
  },
  {
    "text": "it's actually opposite for you guys sorry so this way around and it's a hard thing to do it's a hard",
    "start": "528240",
    "end": "535920"
  },
  {
    "text": "thing to describe obviously we can solve it by documentation but well who wants to do that",
    "start": "535920",
    "end": "542040"
  },
  {
    "text": "so what's the other alternative the other alternative is modeling The Domain",
    "start": "542040",
    "end": "549060"
  },
  {
    "start": "544000",
    "end": "586000"
  },
  {
    "text": "in the code so whatever you have on the left side you put on the right side the",
    "start": "549060",
    "end": "555779"
  },
  {
    "text": "code and the domain is pretty much the same",
    "start": "555779",
    "end": "561360"
  },
  {
    "text": "interesting trivia here the DB model since it doesn't translate so easily it",
    "start": "561360",
    "end": "568140"
  },
  {
    "text": "can still behold in a classical way it just needs to be abstracted a bit right",
    "start": "568140",
    "end": "574860"
  },
  {
    "text": "so this is exactly what I want to focus on why because for the future pretty",
    "start": "574860",
    "end": "582060"
  },
  {
    "text": "much for the future is our answer to why I do domain modeling so the first point",
    "start": "582060",
    "end": "588420"
  },
  {
    "start": "586000",
    "end": "622000"
  },
  {
    "text": "of how to do the domain modeling is domain language and code should be the",
    "start": "588420",
    "end": "594420"
  },
  {
    "text": "same thing and that I don't know about you but this",
    "start": "594420",
    "end": "600300"
  },
  {
    "text": "is exactly what was promised to me by oop in in my like study years right this",
    "start": "600300",
    "end": "607860"
  },
  {
    "text": "is exactly what they meant like whatever you have in real life you just translate that into code and that all works",
    "start": "607860",
    "end": "615720"
  },
  {
    "text": "um unfortunately at least in the code I've seen that's not really the case",
    "start": "615720",
    "end": "621899"
  },
  {
    "text": "okay second rule of domain modeling let's move on um so what I have in here another",
    "start": "621899",
    "end": "627060"
  },
  {
    "start": "622000",
    "end": "734000"
  },
  {
    "text": "example imagine a class or an object that has those fields email initials ID",
    "start": "627060",
    "end": "634500"
  },
  {
    "text": "distance in kilometers like I seriously don't know what that object is it's an",
    "start": "634500",
    "end": "640080"
  },
  {
    "text": "example but the question is what do you do with validation of that right do you",
    "start": "640080",
    "end": "646440"
  },
  {
    "text": "have a separate validator class do you have a method that is called validate do you have got forbid Boolean value",
    "start": "646440",
    "end": "653940"
  },
  {
    "text": "validated but please don't do that never please",
    "start": "653940",
    "end": "659579"
  },
  {
    "text": "but the questions arise right also what about the operations",
    "start": "659579",
    "end": "665220"
  },
  {
    "text": "nobody in their right mind would add email and initials it doesn't make any",
    "start": "665220",
    "end": "670800"
  },
  {
    "text": "sense but you can do that in the code",
    "start": "670800",
    "end": "675800"
  },
  {
    "text": "problem for the long run in my opinion obviously the same thing you can do with ID and",
    "start": "676140",
    "end": "682680"
  },
  {
    "text": "distance it's kinda not what we want so what do we want we",
    "start": "682680",
    "end": "688019"
  },
  {
    "text": "pretty much want to well replace all the basic Styles or the basic types sorry",
    "start": "688019",
    "end": "694880"
  },
  {
    "text": "so we can have control over those validation in Constructor obviously",
    "start": "694880",
    "end": "702360"
  },
  {
    "text": "excluding the validation that is really expensive if we have expensive validation we do it completely",
    "start": "702360",
    "end": "707760"
  },
  {
    "text": "differently but for the simple types validation in Constructor",
    "start": "707760",
    "end": "712860"
  },
  {
    "text": "and operations are getting really simple because email plus initials that's a",
    "start": "712860",
    "end": "718260"
  },
  {
    "text": "compiler error you you won't be able to run that code and that's exactly what I want",
    "start": "718260",
    "end": "724800"
  },
  {
    "text": "so the rule is disallow incorrect state to be represented in your code in the",
    "start": "724800",
    "end": "731579"
  },
  {
    "text": "first place so to sum up two rules that I will focus",
    "start": "731579",
    "end": "738300"
  },
  {
    "start": "734000",
    "end": "749000"
  },
  {
    "text": "on today in terms of domain modeling is domain language equals code and second",
    "start": "738300",
    "end": "743760"
  },
  {
    "text": "one is disallow incorrect state to be represented in the code",
    "start": "743760",
    "end": "749820"
  },
  {
    "text": "and let's go to some meaty midi code there so all right let's Model A vehicle",
    "start": "749820",
    "end": "755700"
  },
  {
    "text": "in object oriented programming as I mentioned we replace the basic types so we replace all of it the",
    "start": "755700",
    "end": "763620"
  },
  {
    "text": "vehicle has those five fields and as you can clearly see those are only Getters",
    "start": "763620",
    "end": "769579"
  },
  {
    "text": "so pretty much once we create those we're all set and done we're happy we",
    "start": "769579",
    "end": "775740"
  },
  {
    "text": "have to have a completely separate Setter if we want one",
    "start": "775740",
    "end": "781459"
  },
  {
    "text": "the whole vehicle then looks like this like the the Constructor",
    "start": "782880",
    "end": "787920"
  },
  {
    "text": "of the vehicle looks like this um it's quite simple oh it's not showing here sorry",
    "start": "787920",
    "end": "795360"
  },
  {
    "text": "oh here we go okay um so the Constructor for the vehicle is",
    "start": "795360",
    "end": "800459"
  },
  {
    "text": "simple we get those parameters we just check if they are nulls because they are",
    "start": "800459",
    "end": "805820"
  },
  {
    "text": "validated in their own Constructors so we just check nulls and we're happy we",
    "start": "805820",
    "end": "811860"
  },
  {
    "text": "go we go over make vehicle make is a special example here because that's just a nanum so we it's not a null right",
    "start": "811860",
    "end": "820920"
  },
  {
    "text": "and I'll show you one of the constructors of those types just as an example once again registration number",
    "start": "820920",
    "end": "827660"
  },
  {
    "text": "it all in all after all it does have the string inside because",
    "start": "827660",
    "end": "833940"
  },
  {
    "text": "we need to represent that somehow and encode registration number is a string and we do have some validation rules",
    "start": "833940",
    "end": "841019"
  },
  {
    "text": "they're quite simple we do take a look at the length we do take a look at disallowed characters and so on",
    "start": "841019",
    "end": "850279"
  },
  {
    "text": "and as always we have to care about the null here",
    "start": "850680",
    "end": "856320"
  },
  {
    "text": "all right so what do we get by that how do we use that vehicle then well usage",
    "start": "856320",
    "end": "863399"
  },
  {
    "text": "is as you can see in the line four pretty much you create a vehicle you create all of those",
    "start": "863399",
    "end": "870060"
  },
  {
    "text": "um registration numbers and parameters and everything and then in line 11 you",
    "start": "870060",
    "end": "876600"
  },
  {
    "text": "no longer can replace registration number with null which is exactly what",
    "start": "876600",
    "end": "881940"
  },
  {
    "text": "we want okay what else do we get we cannot add registration number and the",
    "start": "881940",
    "end": "887399"
  },
  {
    "text": "model this is once again what we want so good good job us",
    "start": "887399",
    "end": "893100"
  },
  {
    "text": "and one last thing and it's still not showing okay I've got a look here sorry",
    "start": "893100",
    "end": "898860"
  },
  {
    "text": "um the last thing is when we run registration number with a little too",
    "start": "898860",
    "end": "904680"
  },
  {
    "text": "long text since I created it that way it just",
    "start": "904680",
    "end": "909720"
  },
  {
    "text": "throws an exception okay if that's a good practice or not that's",
    "start": "909720",
    "end": "914760"
  },
  {
    "text": "a whole different discussion so let's not go there now",
    "start": "914760",
    "end": "920040"
  },
  {
    "start": "919000",
    "end": "944000"
  },
  {
    "text": "and one more thing about object oriented programming if you replace all those types with new types it kinda gets",
    "start": "920040",
    "end": "927000"
  },
  {
    "text": "unwieldy I mean seriously it's only a vehicle and we have already seven files",
    "start": "927000",
    "end": "932060"
  },
  {
    "text": "it's a little too much for me but then again you don't want them all in one",
    "start": "932060",
    "end": "937740"
  },
  {
    "text": "file because that's not the convention yeah it it can get messy",
    "start": "937740",
    "end": "943980"
  },
  {
    "text": "all right so let's go functional finally right",
    "start": "943980",
    "end": "949880"
  },
  {
    "text": "but stop stop for a moment because",
    "start": "950360",
    "end": "955740"
  },
  {
    "text": "yeah let me just cover some very basic F-sharp um things so you can understand the",
    "start": "955740",
    "end": "962639"
  },
  {
    "text": "examples and probably most of you guys know this but it's only three slides I",
    "start": "962639",
    "end": "967980"
  },
  {
    "text": "promise it's gonna be quick so what I want to show you guys is for the F-sharp we don't have classes we",
    "start": "967980",
    "end": "974220"
  },
  {
    "text": "don't have objects so what do we have um similarly it's still a dotnet language so we have the similar",
    "start": "974220",
    "end": "980160"
  },
  {
    "text": "classical simple types like integer floats booleans strings that's all there",
    "start": "980160",
    "end": "985800"
  },
  {
    "text": "right but for the complex types we do have two different things so we have",
    "start": "985800",
    "end": "992040"
  },
  {
    "text": "discriminated unions and think about atoms but on steroids they are they are",
    "start": "992040",
    "end": "999600"
  },
  {
    "text": "actually better than enums and I'll I will try to explain why",
    "start": "999600",
    "end": "1005120"
  },
  {
    "text": "um second thing is records and if you're thinking about records from c-sharp that's exactly what it is because it's",
    "start": "1005120",
    "end": "1011660"
  },
  {
    "text": "just a class that cannot be changed and is compared by the value rather than",
    "start": "1011660",
    "end": "1019579"
  },
  {
    "text": "reference uh one important or interesting part",
    "start": "1019579",
    "end": "1024860"
  },
  {
    "text": "still is type inference but that's much more easier to explain in the example",
    "start": "1024860",
    "end": "1032000"
  },
  {
    "text": "simple types as I mentioned nothing special treat the treat the let",
    "start": "1032000",
    "end": "1039860"
  },
  {
    "text": "exactly like VAR in C sharp so it's just let's test integer equals one that's an",
    "start": "1039860",
    "end": "1046760"
  },
  {
    "text": "integer and actually that the fact that we didn't get the type or set the type",
    "start": "1046760",
    "end": "1051980"
  },
  {
    "text": "in any way is called type inference but it goes a little farther than a",
    "start": "1051980",
    "end": "1058460"
  },
  {
    "text": "simple VAR in C sharp once again I will show you that",
    "start": "1058460",
    "end": "1063799"
  },
  {
    "text": "all right so now the complex types those are the more interesting so let's go by",
    "start": "1063799",
    "end": "1069799"
  },
  {
    "start": "1064000",
    "end": "1328000"
  },
  {
    "text": "those points that I mentioned here so the first point gender this is actually",
    "start": "1069799",
    "end": "1075620"
  },
  {
    "text": "the discriminated Union so an num that I mentioned right and when you see the two",
    "start": "1075620",
    "end": "1081500"
  },
  {
    "text": "number two um that's that's what's interesting about discriminated unions because you",
    "start": "1081500",
    "end": "1087380"
  },
  {
    "text": "can have the normal male female but you can also have the other gender which is",
    "start": "1087380",
    "end": "1093679"
  },
  {
    "text": "actually a string underneath so when you create a gender that is other you have to explain what that really is what",
    "start": "1093679",
    "end": "1101600"
  },
  {
    "text": "exactly it is okay um once again for male and female we",
    "start": "1101600",
    "end": "1107480"
  },
  {
    "text": "don't need strings we just need it for for that third option and that's actually kind of",
    "start": "1107480",
    "end": "1114020"
  },
  {
    "text": "interesting okay third point and this is how we create records as I mentioned",
    "start": "1114020",
    "end": "1120080"
  },
  {
    "text": "those are very much similar to to classes and objects so",
    "start": "1120080",
    "end": "1125299"
  },
  {
    "text": "there's nothing really special in here um the the special part is number four",
    "start": "1125299",
    "end": "1131679"
  },
  {
    "text": "which is different than C sharp because in C sharp we say list of the type and",
    "start": "1131679",
    "end": "1138860"
  },
  {
    "text": "here it's it's reverse right it's the type list okay let's go now let's go functional as",
    "start": "1138860",
    "end": "1146299"
  },
  {
    "text": "I promised so model the vehicle in functional programming",
    "start": "1146299",
    "end": "1152600"
  },
  {
    "text": "so once again replacing those basic types um and I usually do replace those basic",
    "start": "1152600",
    "end": "1160400"
  },
  {
    "text": "tiles by a single discriminated Union value you don't have to care too much about it",
    "start": "1160400",
    "end": "1166700"
  },
  {
    "text": "but the gist of it is it's string underneath it's it's like a wrapper for a string",
    "start": "1166700",
    "end": "1173360"
  },
  {
    "text": "exactly but since it's a wrapper we cannot we cannot add them together like",
    "start": "1173360",
    "end": "1179480"
  },
  {
    "text": "two different types we cannot cannot just interchange them all right and in terms of vehicle itself number",
    "start": "1179480",
    "end": "1187100"
  },
  {
    "text": "nine or line number nine uh that's a mouthful by the way",
    "start": "1187100",
    "end": "1192559"
  },
  {
    "text": "it's uh it's once again a record which pretty much is just like a like an",
    "start": "1192559",
    "end": "1198620"
  },
  {
    "text": "object in C sharp right I'm not sure why it's not showing up",
    "start": "1198620",
    "end": "1205580"
  },
  {
    "text": "sometimes but let's move on so very similar I'll show you registration number once again and I'll show you",
    "start": "1205580",
    "end": "1212720"
  },
  {
    "text": "something that it's not really a Constructor but you can think about it the same way and it's something that",
    "start": "1212720",
    "end": "1220160"
  },
  {
    "text": "allows us to construct the registration number um because it was actually marked as",
    "start": "1220160",
    "end": "1225860"
  },
  {
    "text": "private and why do I do this obviously because I want to have the same validation",
    "start": "1225860",
    "end": "1232400"
  },
  {
    "text": "so the same validation because I'm checking out two things here in line 23",
    "start": "1232400",
    "end": "1238160"
  },
  {
    "text": "where we have the match this is pretty much the same thing as switch from c-sharp so we are matching for the",
    "start": "1238160",
    "end": "1245000"
  },
  {
    "text": "length of the number and remember the number is a string and we're also",
    "start": "1245000",
    "end": "1250039"
  },
  {
    "text": "checking if there are some disallowed character presents",
    "start": "1250039",
    "end": "1255260"
  },
  {
    "text": "um and yeah we're just checking the length first line then we're checking that",
    "start": "1255260",
    "end": "1260960"
  },
  {
    "text": "um these allowed characters are present nothing too surprising here the same",
    "start": "1260960",
    "end": "1266360"
  },
  {
    "text": "logic as we had previously but",
    "start": "1266360",
    "end": "1270740"
  },
  {
    "text": "they're very like fun part is there is no null check needed because well it's",
    "start": "1271400",
    "end": "1277580"
  },
  {
    "text": "it's functional uh you you cannot use no",
    "start": "1277580",
    "end": "1282640"
  },
  {
    "text": "All Right Moving On how do we use that vehicle then",
    "start": "1282860",
    "end": "1287960"
  },
  {
    "text": "um once again we're just creating the vehicle um very similar thing",
    "start": "1287960",
    "end": "1294140"
  },
  {
    "text": "um you just have a little bit less brackets here on the F-sharp side so",
    "start": "1294140",
    "end": "1300080"
  },
  {
    "text": "this is how you create it and this is",
    "start": "1300080",
    "end": "1305360"
  },
  {
    "text": "um one more thing that we really needed so we wanted not to be able or disallow",
    "start": "1305360",
    "end": "1311440"
  },
  {
    "text": "uh adding up registration number and color model right we have that here",
    "start": "1311440",
    "end": "1317240"
  },
  {
    "text": "success here we go we also cannot change registration number after creating the car because",
    "start": "1317240",
    "end": "1324500"
  },
  {
    "text": "it's functional so that part we get for free what else do we have in here this is",
    "start": "1324500",
    "end": "1331059"
  },
  {
    "start": "1328000",
    "end": "1372000"
  },
  {
    "text": "strictly like um not really related to to the example uh",
    "start": "1331059",
    "end": "1337039"
  },
  {
    "text": "this is something I wanted to throw in because usually we don't throw exceptions in the constructors that's",
    "start": "1337039",
    "end": "1343460"
  },
  {
    "text": "probably not the greatest of ideas what you could do is return something",
    "start": "1343460",
    "end": "1349780"
  },
  {
    "text": "return a type that once again is a discriminated Union of either okay of",
    "start": "1349780",
    "end": "1357200"
  },
  {
    "text": "this record or error with some explanations or probably a string",
    "start": "1357200",
    "end": "1363799"
  },
  {
    "text": "and this is a little bit more common practice so just just wanted to put it out in here",
    "start": "1363799",
    "end": "1371440"
  },
  {
    "text": "now let's introduce to our vehicle one more change in the domain space because",
    "start": "1373460",
    "end": "1381320"
  },
  {
    "text": "the vehicle now can have a engine that is either gasoline based or electric",
    "start": "1381320",
    "end": "1388460"
  },
  {
    "text": "based or actually a hybrid one and hybrid one",
    "start": "1388460",
    "end": "1394580"
  },
  {
    "text": "is just those two engines combined it's usually not combined in a way that it's",
    "start": "1394580",
    "end": "1400340"
  },
  {
    "text": "one engine but rather a car have two engines that are different from each other one is gasoline one is electric",
    "start": "1400340",
    "end": "1407780"
  },
  {
    "text": "so how do we model that all right let's start with object",
    "start": "1407780",
    "end": "1413480"
  },
  {
    "start": "1410000",
    "end": "1537000"
  },
  {
    "text": "oriented once again so how do we do that how do we approach it what I thought to do first of all is",
    "start": "1413480",
    "end": "1421760"
  },
  {
    "text": "add line 25 list of engines because once again it can be one engine gasoline or",
    "start": "1421760",
    "end": "1428900"
  },
  {
    "text": "electric or it can be both of those right and it's kind of",
    "start": "1428900",
    "end": "1435620"
  },
  {
    "text": "very easy to to to follow along that you will create an engine class and then",
    "start": "1435620",
    "end": "1441380"
  },
  {
    "text": "gasoline engine will inherit from that electric engine will inherit for that",
    "start": "1441380",
    "end": "1446900"
  },
  {
    "text": "and the list of engines then makes sense right and obviously you just assign it",
    "start": "1446900",
    "end": "1453320"
  },
  {
    "text": "in a Constructor so let's see some things in here",
    "start": "1453320",
    "end": "1458720"
  },
  {
    "text": "since this is a list once again number one we have to check if it's a null number two we have to check still the",
    "start": "1458720",
    "end": "1466940"
  },
  {
    "text": "count like the length of that list because as I mean as I mentioned it can be only one or two it cannot be empty it",
    "start": "1466940",
    "end": "1474260"
  },
  {
    "text": "cannot be three and number three if the count is exactly",
    "start": "1474260",
    "end": "1480679"
  },
  {
    "text": "two we have to make sure those are not two Electric engines so we have to",
    "start": "1480679",
    "end": "1486260"
  },
  {
    "text": "compare the types of those somehow all right so this is",
    "start": "1486260",
    "end": "1493280"
  },
  {
    "text": "this is how I would use it then so we create the first engine that is gasoline engine the second engine that is it",
    "start": "1493280",
    "end": "1499700"
  },
  {
    "text": "electric engine and then we pass along in the line 18 list of those two engines",
    "start": "1499700",
    "end": "1505340"
  },
  {
    "text": "right once again we are just really growing in",
    "start": "1505340",
    "end": "1513860"
  },
  {
    "text": "terms of classes here so just want to mention that up and we're done right",
    "start": "1513860",
    "end": "1521140"
  },
  {
    "text": "well not really because well you can quite easily add an",
    "start": "1521140",
    "end": "1527600"
  },
  {
    "text": "engine afterwards so this approach completely doesn't work right it's yeah",
    "start": "1527600",
    "end": "1533000"
  },
  {
    "text": "this is a little bit messed up so what I thought to myself well let's",
    "start": "1533000",
    "end": "1538580"
  },
  {
    "start": "1537000",
    "end": "1578000"
  },
  {
    "text": "just exchange a list to an array the array is a set number of items so if we",
    "start": "1538580",
    "end": "1544760"
  },
  {
    "text": "set one item we're good if we set two we're good all good right sorry",
    "start": "1544760",
    "end": "1551960"
  },
  {
    "text": "but then again our eyes can also be modified by set values so we still can",
    "start": "1551960",
    "end": "1557480"
  },
  {
    "text": "have two Electric engines so once again that's not the right approach we",
    "start": "1557480",
    "end": "1562520"
  },
  {
    "text": "probably would have to create a new class that is overarching the list of engines and just",
    "start": "1562520",
    "end": "1569840"
  },
  {
    "text": "just have it in there right",
    "start": "1569840",
    "end": "1573880"
  },
  {
    "text": "let's go functional then how do we do it functionally",
    "start": "1575539",
    "end": "1580700"
  },
  {
    "text": "so the idea is once again we create gasoline engine and electric engine",
    "start": "1580700",
    "end": "1586640"
  },
  {
    "text": "and those two are actually a bit different obviously",
    "start": "1586640",
    "end": "1591980"
  },
  {
    "text": "um one interesting fact that I found out which I was not aware of I'm not a car guy the coolant is actually completely",
    "start": "1591980",
    "end": "1600440"
  },
  {
    "text": "different in those two engines so you really should not use the same class of",
    "start": "1600440",
    "end": "1606580"
  },
  {
    "text": "coolant volume in liters for both because it's a completely different Beast so you probably should create",
    "start": "1606580",
    "end": "1613220"
  },
  {
    "text": "gasoline engine coolant and electric engine coolant",
    "start": "1613220",
    "end": "1619120"
  },
  {
    "text": "and what else is here interesting well we do have some repetition actually",
    "start": "1619279",
    "end": "1625279"
  },
  {
    "start": "1621000",
    "end": "1642000"
  },
  {
    "text": "right because we do have the horsepower here and there this is obviously",
    "start": "1625279",
    "end": "1630380"
  },
  {
    "text": "something that would land in a base class usually in object-oriented programming and in functional I would",
    "start": "1630380",
    "end": "1637340"
  },
  {
    "text": "accept that repetition but that might be just my taste",
    "start": "1637340",
    "end": "1643480"
  },
  {
    "text": "let's move on how to how to use it and this is something that I really really",
    "start": "1643580",
    "end": "1649100"
  },
  {
    "text": "like so once again what I wanted to do is either gasoline or electric",
    "start": "1649100",
    "end": "1654740"
  },
  {
    "text": "or both right but never to Electrics you",
    "start": "1654740",
    "end": "1659779"
  },
  {
    "text": "can actually represent that as a one Union type you have the gasoline electric or hybrid and hybrid has a",
    "start": "1659779",
    "end": "1667940"
  },
  {
    "text": "subtype of those two gasoline and Electric so it's actually like described word for",
    "start": "1667940",
    "end": "1674720"
  },
  {
    "text": "word really how do we use it we just into the",
    "start": "1674720",
    "end": "1682340"
  },
  {
    "text": "vehicle we just input that exact type that type of our discriminated Union",
    "start": "1682340",
    "end": "1690158"
  },
  {
    "start": "1689000",
    "end": "1750000"
  },
  {
    "text": "all right now how does it look in practice we create first engine second engine and",
    "start": "1690559",
    "end": "1697460"
  },
  {
    "text": "then for the car at the very last line of this this code we've got engine or",
    "start": "1697460",
    "end": "1704179"
  },
  {
    "text": "hybrid um which is well we do hybrid and then we just pass along those two engines",
    "start": "1704179",
    "end": "1713120"
  },
  {
    "text": "that's exactly what is happening in here",
    "start": "1713120",
    "end": "1718539"
  },
  {
    "text": "interesting trivia I mentioned that type inference mechanism right so look at",
    "start": "1718820",
    "end": "1724880"
  },
  {
    "text": "number one I never said it's actually a gasoline engine never never ever have I",
    "start": "1724880",
    "end": "1730820"
  },
  {
    "text": "said that it's once again inferred from the type itself so as I mentioned it's",
    "start": "1730820",
    "end": "1738260"
  },
  {
    "text": "it's like VAR but it's a little bit stronger probably in general F-sharp is a little stronger",
    "start": "1738260",
    "end": "1744679"
  },
  {
    "text": "stronger types um going for it",
    "start": "1744679",
    "end": "1751000"
  },
  {
    "start": "1750000",
    "end": "1774000"
  },
  {
    "text": "and once again in terms of file structure this is all I've been",
    "start": "1751820",
    "end": "1757760"
  },
  {
    "text": "doing right because those types those simple types are so simple there are",
    "start": "1757760",
    "end": "1763220"
  },
  {
    "text": "one-liners I can easily keep them in one file there's nothing wrong with that so for",
    "start": "1763220",
    "end": "1770480"
  },
  {
    "text": "the engine I do have some other types in there and a bonus point because at this stage",
    "start": "1770480",
    "end": "1779600"
  },
  {
    "start": "1774000",
    "end": "1805000"
  },
  {
    "text": "of our functional functional writing or functional modeling we already can model",
    "start": "1779600",
    "end": "1787940"
  },
  {
    "text": "Behavior so um let's check it out",
    "start": "1787940",
    "end": "1793039"
  },
  {
    "text": "um I'm not showing here oop because I assume you guys know exactly how to write an interface for a method so I",
    "start": "1793039",
    "end": "1801620"
  },
  {
    "text": "just wanted to show you the other side of the coin right so without writing much implementation",
    "start": "1801620",
    "end": "1808760"
  },
  {
    "start": "1805000",
    "end": "1970000"
  },
  {
    "text": "we can create a type of the method that will describe the behavior right",
    "start": "1808760",
    "end": "1814520"
  },
  {
    "text": "and let me just explain to you how to read that so the type of the method is",
    "start": "1814520",
    "end": "1822200"
  },
  {
    "text": "the method accepts two parameters vehicle and distance in kilometers",
    "start": "1822200",
    "end": "1828260"
  },
  {
    "text": "and it spits out another vehicle so that one last thing after the arrow that's",
    "start": "1828260",
    "end": "1835159"
  },
  {
    "text": "actually an output from the function okay you get in vehicle you get in distance you speed out a new vehicle",
    "start": "1835159",
    "end": "1842360"
  },
  {
    "text": "can you guess what that is I hope that wasn't too complicated it was something of a",
    "start": "1842360",
    "end": "1850039"
  },
  {
    "text": "line of at a distance or at travel distance and so on right",
    "start": "1850039",
    "end": "1855140"
  },
  {
    "text": "um if you are curious how it would look like if you wanted to use it actually",
    "start": "1855140",
    "end": "1860320"
  },
  {
    "text": "that's line 59 for you so you create an",
    "start": "1860320",
    "end": "1865340"
  },
  {
    "text": "at distance traveled function which is of the type of at the distance",
    "start": "1865340",
    "end": "1871720"
  },
  {
    "text": "and then you go on to create your own function",
    "start": "1871720",
    "end": "1877840"
  },
  {
    "text": "and once again line 61 this is just telling you that you are creating a new",
    "start": "1877840",
    "end": "1885380"
  },
  {
    "text": "vehicle based on that previous one you just changing the distance traveled so this",
    "start": "1885380",
    "end": "1892159"
  },
  {
    "text": "is a previous vehicle with distance traveled obviously once again it's functional programming so it's actually",
    "start": "1892159",
    "end": "1897679"
  },
  {
    "text": "a new record at the end so just wanted to point that out and stress that out",
    "start": "1897679",
    "end": "1906340"
  },
  {
    "text": "all right and here comes the F-sharp selling point for me personally",
    "start": "1909080",
    "end": "1916279"
  },
  {
    "text": "um let me just show it to you what we have in here",
    "start": "1916279",
    "end": "1922279"
  },
  {
    "text": "is the whole um type structure of the vehicle right",
    "start": "1922279",
    "end": "1930140"
  },
  {
    "text": "and even included the behavior of the vehicle obviously it's only one example but you do have the behavior in here",
    "start": "1930140",
    "end": "1937640"
  },
  {
    "text": "and I would argue that once you explain those arrows you easily can show it to your subject",
    "start": "1937640",
    "end": "1944899"
  },
  {
    "text": "matter expert this slide you can show it to him and you can discuss it with him because he might mention all right cool",
    "start": "1944899",
    "end": "1952340"
  },
  {
    "text": "but we probably don't measure distance in kilometers we do it a little bit differently and so on and so on",
    "start": "1952340",
    "end": "1959059"
  },
  {
    "text": "already something that you can talk to with a person that doesn't code",
    "start": "1959059",
    "end": "1964880"
  },
  {
    "text": "and I really think that's absolutely Bonkers beautiful",
    "start": "1964880",
    "end": "1970760"
  },
  {
    "start": "1970000",
    "end": "2058000"
  },
  {
    "text": "all right if I have sparked your imagination and if I've managed to well get you curious",
    "start": "1970760",
    "end": "1980000"
  },
  {
    "text": "about F sharp I do have one beautiful recommendation and that recommendation",
    "start": "1980000",
    "end": "1986480"
  },
  {
    "text": "is the name actually the person Scott",
    "start": "1986480",
    "end": "1991700"
  },
  {
    "text": "version um he's amazing he's he's a legend in",
    "start": "1991700",
    "end": "1997279"
  },
  {
    "text": "F-sharp Community he's he's really really great at explaining things he he",
    "start": "1997279",
    "end": "2002980"
  },
  {
    "text": "does that so well it's it's I'm completely jealous and what he created is a website that is called f sharp for",
    "start": "2002980",
    "end": "2011140"
  },
  {
    "text": "Fun and Profit uh it's a whole website where you've got pretty much everything F sharp explained",
    "start": "2011140",
    "end": "2018940"
  },
  {
    "text": "from the like very start to to Advanced uh techniques so that is an easy",
    "start": "2018940",
    "end": "2025480"
  },
  {
    "text": "recommendation um just a note for some time I don't know why but the first link just didn't",
    "start": "2025480",
    "end": "2031360"
  },
  {
    "text": "work so it's also published by in git books if you want to check it out it's",
    "start": "2031360",
    "end": "2037059"
  },
  {
    "text": "fully free um you should be I encourage you to check it out if you",
    "start": "2037059",
    "end": "2043720"
  },
  {
    "text": "want he also published a pretty cool book called I think it was functional",
    "start": "2043720",
    "end": "2050638"
  },
  {
    "text": "domain modeling made functional it's really awesome read I'd recommend that quite heavily",
    "start": "2050639",
    "end": "2058679"
  },
  {
    "start": "2058000",
    "end": "2182000"
  },
  {
    "text": "if you want to stay in touch with me I'm more than happy to do so so if I usually",
    "start": "2059500",
    "end": "2065800"
  },
  {
    "text": "use LinkedIn the most so if you want to jump in and just pick my brain and talk",
    "start": "2065800",
    "end": "2071080"
  },
  {
    "text": "about stuff here and there don't hesitate to add me if you can just",
    "start": "2071080",
    "end": "2076300"
  },
  {
    "text": "mention NDC to me so I so I know where you're coming from so that would be that",
    "start": "2076300",
    "end": "2082658"
  },
  {
    "text": "would be absolutely lovely but I'm still here I'm staying for the for the today and tomorrow the whole day so if you",
    "start": "2082659",
    "end": "2090520"
  },
  {
    "text": "want to approach me and just grab a couple cup of coffee and just talk I'm",
    "start": "2090520",
    "end": "2095800"
  },
  {
    "text": "more than happy to do so um Instagram if you are interested I'm",
    "start": "2095800",
    "end": "2100839"
  },
  {
    "text": "using it a little not so much probably LinkedIn is a better bet",
    "start": "2100839",
    "end": "2106560"
  },
  {
    "text": "and actually I think that's about it from me so",
    "start": "2106560",
    "end": "2111880"
  },
  {
    "text": "do I see any questions guys is there anything oh yeah okay now I can",
    "start": "2111880",
    "end": "2118599"
  },
  {
    "text": "see uh is there any questions you guys might have",
    "start": "2118599",
    "end": "2123359"
  },
  {
    "text": "shoot",
    "start": "2124180",
    "end": "2126599"
  },
  {
    "text": "cool question thank you so the question is about type inference right is there a",
    "start": "2134200",
    "end": "2139960"
  },
  {
    "text": "possibility that the type inference will get it wrong yeah absolutely absolutely",
    "start": "2139960",
    "end": "2146020"
  },
  {
    "text": "it is and the easy thing is you can always specify the type so",
    "start": "2146020",
    "end": "2152560"
  },
  {
    "text": "um if you have the same type or rather the type that is pretty much looking the same as the other one you can always",
    "start": "2152560",
    "end": "2159640"
  },
  {
    "text": "specify that here in this variable you want to use that second type right so",
    "start": "2159640",
    "end": "2165760"
  },
  {
    "text": "that's that's actually quite simple and quite quite nice thank",
    "start": "2165760",
    "end": "2170859"
  },
  {
    "text": "you anything else guys",
    "start": "2170859",
    "end": "2175319"
  },
  {
    "text": "all right then uh once again I'm here thank you very much guys for",
    "start": "2178180",
    "end": "2185320"
  },
  {
    "start": "2182000",
    "end": "2194000"
  },
  {
    "text": "attending and as always we can do better as a pack thank you [Applause]",
    "start": "2185320",
    "end": "2194059"
  }
]