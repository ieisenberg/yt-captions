[
  {
    "text": "my name is stephanie and i'm a product manager on the microsoft edge developer experiences team",
    "start": "3280",
    "end": "9360"
  },
  {
    "text": "and today i'm going to be talking about some exciting new web technology for building layouts for the web",
    "start": "9360",
    "end": "15440"
  },
  {
    "text": "for dual screen devices so i've been involved with this work stream at microsoft for about a year and a half",
    "start": "15440",
    "end": "22720"
  },
  {
    "text": "and i've gotten to watch these apis evolve from their initial state to the state that they're in now",
    "start": "22720",
    "end": "30000"
  },
  {
    "text": "and they've become these very ergonomic and easy to use apis",
    "start": "30000",
    "end": "35200"
  },
  {
    "text": "that leverage existing concepts on the web instead of completely new apis so",
    "start": "35200",
    "end": "40800"
  },
  {
    "text": "learning about them and using them are much more in my opinion seamless than in their",
    "start": "40800",
    "end": "46719"
  },
  {
    "text": "initial state and i think that's what i'm most excited about sharing with you today is how",
    "start": "46719",
    "end": "52239"
  },
  {
    "text": "seamless these things are to start integrating into your code to progressively enhance",
    "start": "52239",
    "end": "58480"
  },
  {
    "text": "your website or your progressive web app for a dual screen device and deliver an",
    "start": "58480",
    "end": "63520"
  },
  {
    "text": "experience that delights users on those devices",
    "start": "63520",
    "end": "68640"
  },
  {
    "text": "so today we're going to go over some multi-screen device history the evolution of responsive web design",
    "start": "69119",
    "end": "75439"
  },
  {
    "text": "we'll look at the new css media features some new css environment variables for layout",
    "start": "75439",
    "end": "83040"
  },
  {
    "text": "we'll look at the javascript api which is the visual viewport api a couple examples some best practices and then",
    "start": "83040",
    "end": "89600"
  },
  {
    "text": "how you can test and build dual screen layouts even if you don't have",
    "start": "89600",
    "end": "95759"
  },
  {
    "text": "a physical device so the concept of foldable devices",
    "start": "95759",
    "end": "103119"
  },
  {
    "text": "has been around since about 2004 from what i could find on the internet so this is a few years before single screen",
    "start": "103119",
    "end": "109600"
  },
  {
    "text": "smartphones took hold and in 2004 we saw the first dual screen",
    "start": "109600",
    "end": "115439"
  },
  {
    "text": "device it was a touch screen concept from a firm called v12 and it was a dual screen touchscreen",
    "start": "115439",
    "end": "121840"
  },
  {
    "text": "laptop and then in 2006 we saw our first",
    "start": "121840",
    "end": "126960"
  },
  {
    "text": "foldable that rolled up it was called a readiest it was a concept that was a little bit more out there and it like",
    "start": "126960",
    "end": "133520"
  },
  {
    "text": "literally folded rolled up and then by 2008 nokia was even showing",
    "start": "133520",
    "end": "141440"
  },
  {
    "text": "a trifold flexible device that was multifunctional so it could be a large screen device",
    "start": "141440",
    "end": "148160"
  },
  {
    "text": "when it was completely unfolded and then when you folded it down it would become phone sized and then",
    "start": "148160",
    "end": "154959"
  },
  {
    "text": "eventually it could become a smart wristband so a concept that was really multi-functional",
    "start": "154959",
    "end": "163040"
  },
  {
    "text": "but and after these devices it came actually many more concepts and",
    "start": "163760",
    "end": "168840"
  },
  {
    "text": "prototypes so if we look at the timeline here we had prototypes and concepts for dual",
    "start": "168840",
    "end": "174959"
  },
  {
    "text": "screens and foldables being shown up until 2018",
    "start": "174959",
    "end": "180159"
  },
  {
    "text": "when devices were actually announced and started hitting the market for consumers",
    "start": "180159",
    "end": "185840"
  },
  {
    "text": "so the concept of foldable and multi-screen devices isn't necessarily new it's been in development for well",
    "start": "185840",
    "end": "192640"
  },
  {
    "text": "over a decade and the current market for foldables is",
    "start": "192640",
    "end": "198159"
  },
  {
    "text": "still growing so in 2021 there was a total there were total shipments of uh",
    "start": "198159",
    "end": "204319"
  },
  {
    "text": "foldable devices uh up to 7.1 million devices up from 1.9",
    "start": "204319",
    "end": "210319"
  },
  {
    "text": "million in 2020 and as of right now that's currently projected to reach 27.6 million units in",
    "start": "210319",
    "end": "217360"
  },
  {
    "text": "2025. now in the grand scheme of things like that's not a huge share of the phone",
    "start": "217360",
    "end": "224080"
  },
  {
    "text": "market but it's still millions of devices that are out there",
    "start": "224080",
    "end": "229200"
  },
  {
    "text": "and companies are now into their second and third generation of devices",
    "start": "229200",
    "end": "234720"
  },
  {
    "text": "uh building these devices so they're they're not going anywhere based on this data",
    "start": "234720",
    "end": "242720"
  },
  {
    "text": "so we should really start thinking about or at least be aware of the technology that's available to design for these",
    "start": "242959",
    "end": "249760"
  },
  {
    "text": "devices as their numbers start to increase out in the market",
    "start": "249760",
    "end": "255840"
  },
  {
    "text": "and i want to go back to 2002 for a moment because we really can't talk about designing for dual screen devices",
    "start": "256639",
    "end": "263840"
  },
  {
    "text": "without talking about responsive design and this concept has been around for a",
    "start": "263840",
    "end": "269440"
  },
  {
    "text": "lot longer than i think folks may realize so in 2022 or sorry 20 2002",
    "start": "269440",
    "end": "278080"
  },
  {
    "text": "a team at razor fish in germany was working on a redesign of the audi website and the team had used javascript",
    "start": "278080",
    "end": "285040"
  },
  {
    "text": "to identify a user's viewport and it would serve up one of the one of three",
    "start": "285040",
    "end": "290080"
  },
  {
    "text": "sizes dynamically depending on whatever viewport size was in front of the user and though this",
    "start": "290080",
    "end": "296720"
  },
  {
    "text": "isn't perhaps like quite the same as what we call a responsive website today like the fundamental idea of a site",
    "start": "296720",
    "end": "302800"
  },
  {
    "text": "layout adapting to fit what the user had is still there",
    "start": "302800",
    "end": "308080"
  },
  {
    "text": "now jim callback who's one of the project members and he talks about building this site in a brief post on",
    "start": "308560",
    "end": "314560"
  },
  {
    "text": "his website and he mentions the idea of flexible layouts for the web and how he",
    "start": "314560",
    "end": "319600"
  },
  {
    "text": "was already thinking about different screen size possibilities at the time because there were things like e-readers",
    "start": "319600",
    "end": "325680"
  },
  {
    "text": "and something called web tv he was already thinking about how we could scale and so this was",
    "start": "325680",
    "end": "332800"
  },
  {
    "text": "2002 it was five years before the iphone but he was already like thinking about new",
    "start": "332800",
    "end": "339440"
  },
  {
    "text": "possible devices and how to adapt and then in 2010",
    "start": "339440",
    "end": "346000"
  },
  {
    "text": "three years after the first iphone was released the concept of responsive",
    "start": "346000",
    "end": "351520"
  },
  {
    "text": "design as we know it today was formalized by ethan marcotte in a list apart",
    "start": "351520",
    "end": "358960"
  },
  {
    "text": "and ethan said now more than ever we're designing work meant to be viewed along a gradient of different experiences",
    "start": "359520",
    "end": "366160"
  },
  {
    "text": "responsive web design offers us a way forward finally allowing us to design for the ebb and flow of things",
    "start": "366160",
    "end": "373039"
  },
  {
    "text": "and in rereading his article today like i still found so much of it still applicable to building and designing for",
    "start": "373039",
    "end": "380000"
  },
  {
    "text": "the web ethan formalized this concept of design",
    "start": "380000",
    "end": "385520"
  },
  {
    "text": "being fluid not designing for specific devices and the dual screen",
    "start": "385520",
    "end": "391440"
  },
  {
    "text": "platform primitives that i'm going to talk about today really embrace that spirit of not designing for a specific",
    "start": "391440",
    "end": "397759"
  },
  {
    "text": "device even though we have this entirely new device class",
    "start": "397759",
    "end": "403199"
  },
  {
    "text": "and if you look at what you can do today with webtech across so many different devices and platforms it's quite frankly",
    "start": "403199",
    "end": "409759"
  },
  {
    "text": "amazing like you can build a single app and it can run on multiple platforms and it will respond to different screen",
    "start": "409759",
    "end": "415520"
  },
  {
    "text": "sizes resolution orientation like you can even allow it you can even target",
    "start": "415520",
    "end": "420639"
  },
  {
    "text": "old and new technology so that users get the best experience they can for their device",
    "start": "420639",
    "end": "426240"
  },
  {
    "text": "and so we're already doing these things for so many different devices already",
    "start": "426240",
    "end": "432479"
  },
  {
    "text": "and today i would really want you to come away from this talk with the idea that dual screens",
    "start": "432720",
    "end": "438240"
  },
  {
    "text": "um they're just the next evolution in responsive design and progressive enhancement they're not this massive new",
    "start": "438240",
    "end": "444639"
  },
  {
    "text": "obstacle to start thinking about like i don't want you to fear the hinge or the fold and i want you to embrace it",
    "start": "444639",
    "end": "452479"
  },
  {
    "text": "and i want you to be excited to utilize this web technology and start experimenting with it and using this new",
    "start": "452479",
    "end": "459199"
  },
  {
    "text": "code because there's devices on the market today and it's quite frankly amazing what you can do",
    "start": "459199",
    "end": "464319"
  },
  {
    "text": "with with this code and so on the microsoft edge team",
    "start": "464319",
    "end": "470080"
  },
  {
    "text": "we really wanted to make sure we could empower developers to do just that and take advantage of dual screen devices",
    "start": "470080",
    "end": "477199"
  },
  {
    "text": "and enable them to deliver those enhanced experiences",
    "start": "477199",
    "end": "482159"
  },
  {
    "text": "so our web platform team worked incredibly hard and in conjunction with community groups to deliver two new apis",
    "start": "482400",
    "end": "489919"
  },
  {
    "text": "initially for web layout and these were nearly impossible when microsoft announced its surface duo and",
    "start": "489919",
    "end": "497120"
  },
  {
    "text": "when the samsung galaxy fold hit the market so the team had designed proposed and implemented a css screen spanning media",
    "start": "497120",
    "end": "505039"
  },
  {
    "text": "feature and an entirely new javascript api called windows segment enumeration",
    "start": "505039",
    "end": "512159"
  },
  {
    "text": "and this was to make those dual screen enhanced layouts possible now we initially put these apis into",
    "start": "512159",
    "end": "519518"
  },
  {
    "text": "origin trials for developers to use and test before they were shipped in the browser because we wanted to make sure we got",
    "start": "519519",
    "end": "526240"
  },
  {
    "text": "this right and developers would be happy to use these things and if you don't know what an origin",
    "start": "526240",
    "end": "531839"
  },
  {
    "text": "trial is we asked for feedback sort of in exchange for trying out experimental",
    "start": "531839",
    "end": "538320"
  },
  {
    "text": "features and we actually ended up modifying the design of both apis",
    "start": "538320",
    "end": "543760"
  },
  {
    "text": "and we merged them with an already existing concept in standards bodies",
    "start": "543760",
    "end": "549519"
  },
  {
    "text": "which is the viewport so the new proposals are a viewport segments media feature and for the",
    "start": "549519",
    "end": "556560"
  },
  {
    "text": "javascript api we're now just a segments property that hangs off the visual viewport api",
    "start": "556560",
    "end": "564320"
  },
  {
    "text": "and then we even ended up making some changes to our css environment variables that were initially proposed based on",
    "start": "564320",
    "end": "571200"
  },
  {
    "text": "that feedback again from the web development community and so the team really wanted these new",
    "start": "571200",
    "end": "578480"
  },
  {
    "text": "capabilities to be easy to work with so when they were designing these apis they",
    "start": "578480",
    "end": "583839"
  },
  {
    "text": "focused on simplicity and ergonomics like we want you to spend more time thinking outside the box",
    "start": "583839",
    "end": "590800"
  },
  {
    "text": "and coding your dual screen device instead of trying to learn an entirely new concept and figuring out how these",
    "start": "590800",
    "end": "597200"
  },
  {
    "text": "new apis like fit into your existing architecture so let's dive into",
    "start": "597200",
    "end": "603360"
  },
  {
    "text": "the css viewport segments media feature which i'm a css girl so this is what i'm",
    "start": "603360",
    "end": "609920"
  },
  {
    "text": "personally most excited about so dual screens again are just the next",
    "start": "609920",
    "end": "617519"
  },
  {
    "text": "step in responsive design so it's another responsive design target so just as you use your media queries",
    "start": "617519",
    "end": "624880"
  },
  {
    "text": "and features in your css today to detect and serve up styles that are specific to",
    "start": "624880",
    "end": "630480"
  },
  {
    "text": "your phones or your tablets or your desktops you can use a media feature to detect",
    "start": "630480",
    "end": "635600"
  },
  {
    "text": "this new class of device using these viewport segments media",
    "start": "635600",
    "end": "640800"
  },
  {
    "text": "features and now the viewport segments media feature it can have two values one is",
    "start": "640800",
    "end": "647839"
  },
  {
    "text": "the horizontal viewport segment and then you provide an integer",
    "start": "647839",
    "end": "653200"
  },
  {
    "text": "and this represents the state of the device when the device hinge is vertical and the viewports are split by",
    "start": "653200",
    "end": "661600"
  },
  {
    "text": "this hinge or they fold into two columns so like a book",
    "start": "661600",
    "end": "666800"
  },
  {
    "text": "and then the second one is oops the second one is vertical viewport",
    "start": "667120",
    "end": "672160"
  },
  {
    "text": "segments and this is the state of the device where the fold is horizontal and the two viewports are stacked on top of",
    "start": "672160",
    "end": "678640"
  },
  {
    "text": "each other and split into rows so we'll look at a very basic example",
    "start": "678640",
    "end": "685760"
  },
  {
    "text": "here and then i'll show a more in-depth one in a little bit when i go through some design examples",
    "start": "685760",
    "end": "691680"
  },
  {
    "text": "but in this example here we're combining our horizontal viewport segments media feature with another media query",
    "start": "691680",
    "end": "699760"
  },
  {
    "text": "min width so we're saying if the device has two viewport segments that are side",
    "start": "699760",
    "end": "704959"
  },
  {
    "text": "by side and the viewport has a minimum width of 540 pixels make the background of the",
    "start": "704959",
    "end": "712000"
  },
  {
    "text": "body element yellow so if we run that on three different devices this will only target the dual",
    "start": "712000",
    "end": "718399"
  },
  {
    "text": "screen device now some of our customers also wanted to",
    "start": "718399",
    "end": "725040"
  },
  {
    "text": "be able to snap their content to the fold of the device which makes sense",
    "start": "725040",
    "end": "730800"
  },
  {
    "text": "because on some of the devices we do have this physical hinge that actually obscures",
    "start": "730800",
    "end": "736959"
  },
  {
    "text": "the content in the browser if you're spanning across both viewports",
    "start": "736959",
    "end": "742079"
  },
  {
    "text": "and so obviously folks wanted to avoid that hinge like you want to place content",
    "start": "742079",
    "end": "748079"
  },
  {
    "text": "within the display region boundaries um so with our current media feature",
    "start": "748079",
    "end": "753600"
  },
  {
    "text": "solution that we just looked at we we can detect if the browser is spanning across two displays",
    "start": "753600",
    "end": "760399"
  },
  {
    "text": "on a dual screen but that's not enough to achieve this at the moment you could probably",
    "start": "760399",
    "end": "766560"
  },
  {
    "text": "go on to assume that both screens are the same size but that doesn't really necessarily scale",
    "start": "766560",
    "end": "772800"
  },
  {
    "text": "um on on new foldables and so we don't want to assume that both screens are",
    "start": "772800",
    "end": "778000"
  },
  {
    "text": "equal size so let's look at the proposed solution for identifying those different",
    "start": "778000",
    "end": "784839"
  },
  {
    "text": "viewports so on top of the media features the team also introduced a set of environment variables that help with",
    "start": "784839",
    "end": "791920"
  },
  {
    "text": "identifying the sizing of the viewport segments and they also help with positioning and",
    "start": "791920",
    "end": "797680"
  },
  {
    "text": "placement of elements within the viewport and so we have six new variables to help",
    "start": "797680",
    "end": "803200"
  },
  {
    "text": "with this the viewport segment environment variables have two dimensions which",
    "start": "803200",
    "end": "808320"
  },
  {
    "text": "represent the x and y position respectively in the two-dimensional grid that's created by the hardware",
    "start": "808320",
    "end": "815120"
  },
  {
    "text": "features that are separating the segments and so segments along the left edge have an x position of zero",
    "start": "815120",
    "end": "822560"
  },
  {
    "text": "and then those in the next column or viewport to the right have an x position of one",
    "start": "822560",
    "end": "827760"
  },
  {
    "text": "and then segments along the top edge have a y position of zero etc",
    "start": "827760",
    "end": "834160"
  },
  {
    "text": "so essentially there is a rectangle for each segment which is represented by these six values",
    "start": "834160",
    "end": "840320"
  },
  {
    "text": "we have so we have top right bottom left width and height",
    "start": "840320",
    "end": "845760"
  },
  {
    "text": "now viewport segment width and height those are basically convenience properties because you could calculate",
    "start": "845760",
    "end": "852639"
  },
  {
    "text": "the display width or height with viewport segment right and viewport segment left",
    "start": "852639",
    "end": "858560"
  },
  {
    "text": "but that becomes very verbose when you're trying to calculate that",
    "start": "858560",
    "end": "864240"
  },
  {
    "text": "and so we'll look at some very simple examples of how to use these variables with just a couple boxes",
    "start": "865040",
    "end": "872800"
  },
  {
    "text": "so for our example here we have four boxes and they are wrapped in a flex container with a",
    "start": "872800",
    "end": "878959"
  },
  {
    "text": "flex direction of row and so for box one we have our width and our height set to 100 pixels and we're",
    "start": "878959",
    "end": "885920"
  },
  {
    "text": "going to set our position to absolute and then we're going to position with the left property and we're going to use",
    "start": "885920",
    "end": "892320"
  },
  {
    "text": "the calc function to subtract 100 pixels from the right viewport segment of the",
    "start": "892320",
    "end": "898160"
  },
  {
    "text": "left display to get that aligned along the fold",
    "start": "898160",
    "end": "903759"
  },
  {
    "text": "and then for block 2 again set our height and we're going to use the viewport",
    "start": "904880",
    "end": "911199"
  },
  {
    "text": "segment width variable with indices 1 0 to define our width of that box so we want",
    "start": "911199",
    "end": "918880"
  },
  {
    "text": "it to take up the entire right hand viewport and then we're going to set our",
    "start": "918880",
    "end": "924399"
  },
  {
    "text": "positioning to absolute thing we want it to start at the edge of the left segment of this display",
    "start": "924399",
    "end": "931360"
  },
  {
    "text": "and we want it pinned to the top so the top is then set to zero",
    "start": "931360",
    "end": "937440"
  },
  {
    "text": "and then box three again set our height and then again we're going to use that viewport segment with variable with",
    "start": "937920",
    "end": "943680"
  },
  {
    "text": "indices 0 0 to set our box our boxes width to take up again that whole first",
    "start": "943680",
    "end": "950320"
  },
  {
    "text": "viewport and for this example we're also going to include another value there or we're",
    "start": "950320",
    "end": "955839"
  },
  {
    "text": "going to say a hundred percent as a fallback if for some reason our environment variable indices don't",
    "start": "955839",
    "end": "962399"
  },
  {
    "text": "work so you can include a fallback with that is optional",
    "start": "962399",
    "end": "967680"
  },
  {
    "text": "and then we don't need any variables for our left or",
    "start": "967680",
    "end": "972720"
  },
  {
    "text": "top positioning just 0 for the bottom and then finally box 4",
    "start": "972720",
    "end": "979199"
  },
  {
    "text": "again that our height set our width position absolute and then we want to pin to the left segment of the right",
    "start": "979199",
    "end": "986560"
  },
  {
    "text": "display so we're going to use viewport segment left indices 1 0",
    "start": "986560",
    "end": "992079"
  },
  {
    "text": "and the bottom that 2 0. so hopefully that gives like a general",
    "start": "992079",
    "end": "997519"
  },
  {
    "text": "idea of how you use those environment variables and we'll look at a real app example",
    "start": "997519",
    "end": "1004240"
  },
  {
    "text": "in a little bit with some more code but let's talk about our second",
    "start": "1004240",
    "end": "1009519"
  },
  {
    "text": "web feature which is the javascript api that we ended up folding into the visual",
    "start": "1009519",
    "end": "1014639"
  },
  {
    "text": "viewport api now the concept of the viewport is already something developers are",
    "start": "1014639",
    "end": "1020959"
  },
  {
    "text": "familiar with and again in the interest of making these new concepts easy to integrate with your existing",
    "start": "1020959",
    "end": "1027199"
  },
  {
    "text": "architecture the team thought it made more sense to add this into the existing visual",
    "start": "1027199",
    "end": "1032720"
  },
  {
    "text": "viewport api specification now today when you are on a desktop",
    "start": "1032720",
    "end": "1038480"
  },
  {
    "text": "computer and you query visual viewport dot segments this will return null if",
    "start": "1038480",
    "end": "1044319"
  },
  {
    "text": "there is only one viewport segment",
    "start": "1044319",
    "end": "1048319"
  },
  {
    "text": "and then on a dual screen device however you will get two dom wrecks that represent the two viewports",
    "start": "1050799",
    "end": "1058160"
  },
  {
    "text": "that are available when the browser window is spanning across bold",
    "start": "1058160",
    "end": "1064640"
  },
  {
    "text": "now the value that we have stored in the segments constant is an immutable snapshot of the device state",
    "start": "1065520",
    "end": "1072480"
  },
  {
    "text": "at the time the attribute was queried which means once you resize the browser window or you rotate the device the",
    "start": "1072480",
    "end": "1079520"
  },
  {
    "text": "viewport segments that were previously retrieved are no longer valid so you need to query",
    "start": "1079520",
    "end": "1084960"
  },
  {
    "text": "this attribute again in either a resize event or an orientation change event",
    "start": "1084960",
    "end": "1091280"
  },
  {
    "text": "and so you can see when we change the viewport from spanning across two display regions to only one display",
    "start": "1091280",
    "end": "1096799"
  },
  {
    "text": "region we'll re we'll fire that resize event for you and if you rotate the device that will fire",
    "start": "1096799",
    "end": "1103600"
  },
  {
    "text": "both the resize and orientation change event and you can use these events to query",
    "start": "1103600",
    "end": "1108960"
  },
  {
    "text": "that attribute again and see what the current state of the browser is and what the display regions geometry is at that",
    "start": "1108960",
    "end": "1115760"
  },
  {
    "text": "moment one question we often get is when should",
    "start": "1115760",
    "end": "1121919"
  },
  {
    "text": "i use the css apis or the javascript apis",
    "start": "1121919",
    "end": "1127280"
  },
  {
    "text": "now in some cases there is no css which can happen when you're working with shapes and objects in canvas 2d and",
    "start": "1127280",
    "end": "1134840"
  },
  {
    "text": "webgl so if you're building a game that could leverage both screens on a dual screen device or if build out like",
    "start": "1134840",
    "end": "1142160"
  },
  {
    "text": "a sketching app you'll want to use the javascript api to get the geometry of those display",
    "start": "1142160",
    "end": "1147840"
  },
  {
    "text": "regions another use case would be creating dom elements at application runtime and",
    "start": "1147840",
    "end": "1154480"
  },
  {
    "text": "appending them to the dom and inserting some styles inline in this case those would probably",
    "start": "1154480",
    "end": "1160320"
  },
  {
    "text": "only be applicable for dual screen",
    "start": "1160320",
    "end": "1165240"
  },
  {
    "text": "and so let's look at some examples of some enhanced design on on dual screen devices",
    "start": "1166400",
    "end": "1174000"
  },
  {
    "text": "now our first example is a mail application and in the example on the left we see",
    "start": "1174000",
    "end": "1180160"
  },
  {
    "text": "that our layout is just slightly off and due to the nature of the fold on this device",
    "start": "1180160",
    "end": "1186080"
  },
  {
    "text": "there is some content being obscured by the hinge so we want to target the design on the",
    "start": "1186080",
    "end": "1193120"
  },
  {
    "text": "right like that's our end goal so how do we get there",
    "start": "1193120",
    "end": "1198880"
  },
  {
    "text": "so our first media query here is blank because this is where you're going to put your rules that are specific to",
    "start": "1199679",
    "end": "1204720"
  },
  {
    "text": "screens that are wider than a tablet and then our second media feature",
    "start": "1204720",
    "end": "1211200"
  },
  {
    "text": "is for our dual screen device so we're targeting devices that have a minimum",
    "start": "1211200",
    "end": "1216480"
  },
  {
    "text": "width of 799 pixels and are in the vertical fold posture so",
    "start": "1216480",
    "end": "1222080"
  },
  {
    "text": "they have those two logical segments of the viewport in the horizontal direction so they're",
    "start": "1222080",
    "end": "1227440"
  },
  {
    "text": "side by side now our main element here is wrapping the three columns of our email app",
    "start": "1227440",
    "end": "1234960"
  },
  {
    "text": "so we have the navigation we have the inbox and then we have our our email content",
    "start": "1234960",
    "end": "1241760"
  },
  {
    "text": "now for our navigation in this email app our design specification says that the desired width",
    "start": "1241760",
    "end": "1247840"
  },
  {
    "text": "for this is 60 pixels and since we're using flex direction row here black spaces acts like that flex items width",
    "start": "1247840",
    "end": "1256559"
  },
  {
    "text": "and then for our inbox we want this to consume the entire width",
    "start": "1256559",
    "end": "1261600"
  },
  {
    "text": "of the first display region so we want to take our take up our first viewport minus our navigation width so we'd have",
    "start": "1261600",
    "end": "1268880"
  },
  {
    "text": "our css calculate our width with the viewport segment with environment variable to indicate the",
    "start": "1268880",
    "end": "1275840"
  },
  {
    "text": "entire width of the left display um subtract 60 pixels",
    "start": "1275840",
    "end": "1282000"
  },
  {
    "text": "and then on some devices we have that mask or fold that's covered by part of the device hardware so",
    "start": "1282000",
    "end": "1288480"
  },
  {
    "text": "sometimes we'll need to add a margin after the column and we could use margin",
    "start": "1288480",
    "end": "1293520"
  },
  {
    "text": "inline end here and we'll use the calc function to calculate the area that's obscured by",
    "start": "1293520",
    "end": "1299600"
  },
  {
    "text": "the fold and that identifies that gap so we'd subtract the right",
    "start": "1299600",
    "end": "1305600"
  },
  {
    "text": "segment of the left display from the left segment of the right display",
    "start": "1305600",
    "end": "1313360"
  },
  {
    "text": "and then finally for our email content this should just grow to fill up the",
    "start": "1313600",
    "end": "1319120"
  },
  {
    "text": "rest of the space so we want that to take up the entirety of our second viewport and",
    "start": "1319120",
    "end": "1324880"
  },
  {
    "text": "again we'd use viewport segment width but with our one and zero",
    "start": "1324880",
    "end": "1330840"
  },
  {
    "text": "indices so if we look at that example again that is how we would achieve the layout",
    "start": "1330840",
    "end": "1336720"
  },
  {
    "text": "on the right hand side with that code and just some flexbox",
    "start": "1336720",
    "end": "1342399"
  },
  {
    "text": "a couple other examples of how to utilize dual screen devices this is one i commonly see",
    "start": "1343280",
    "end": "1348799"
  },
  {
    "text": "we have a map application so you'd have your map on one side and then if you're searching for something you'd have your",
    "start": "1348799",
    "end": "1355039"
  },
  {
    "text": "display results take up the entire site of the other viewport",
    "start": "1355039",
    "end": "1361400"
  },
  {
    "text": "and then this one this is one of the things that i immediately thought of when i was making up ideas for dual screen devices",
    "start": "1361679",
    "end": "1369440"
  },
  {
    "text": "you have a recipe website with your ingredients on one side and then your",
    "start": "1369440",
    "end": "1374480"
  },
  {
    "text": "actual instructions on the other um and i actually got around to",
    "start": "1374480",
    "end": "1380240"
  },
  {
    "text": "building this demo so if you want to go play with it um you can go to aka dot ms",
    "start": "1380240",
    "end": "1386000"
  },
  {
    "text": "whack dual dash screen demo in a chromium browser",
    "start": "1386000",
    "end": "1391520"
  },
  {
    "text": "and open the device emulator in the developer tools and select surface duo from the drop down",
    "start": "1391520",
    "end": "1398000"
  },
  {
    "text": "to play with that and it will appear it'll adapt to the dual screen emulator",
    "start": "1398000",
    "end": "1404159"
  },
  {
    "text": "and you'll have that layout and i'm not going to talk through all",
    "start": "1404159",
    "end": "1409360"
  },
  {
    "text": "the code for that demo but i do just want to highlight the grid",
    "start": "1409360",
    "end": "1415600"
  },
  {
    "text": "structure here for the for the main container of the page and the use of the environment variables here",
    "start": "1415600",
    "end": "1421840"
  },
  {
    "text": "because when i define my grid i'm able to use the environment variable",
    "start": "1421840",
    "end": "1427440"
  },
  {
    "text": "as the value for my first column of my css grid structure on a dual screen device so this line of code is telling",
    "start": "1427440",
    "end": "1434640"
  },
  {
    "text": "the browser when my device is in that vertical fold position i want my first column of my",
    "start": "1434640",
    "end": "1440559"
  },
  {
    "text": "css grid to take up the entirety of the first viewport",
    "start": "1440559",
    "end": "1445760"
  },
  {
    "text": "and then for i'll add two other columns with the that are equal width in",
    "start": "1445760",
    "end": "1452240"
  },
  {
    "text": "the remaining space so that'll take up two columns in the second viewport",
    "start": "1452240",
    "end": "1458159"
  },
  {
    "text": "for design flexibility but i love how i can use my css environment variable to define",
    "start": "1458159",
    "end": "1467039"
  },
  {
    "text": "where my con like that first grid that first grid column",
    "start": "1467039",
    "end": "1473840"
  },
  {
    "text": "and then if for example i wanted to create a two column structure in css grid and just",
    "start": "1475120",
    "end": "1480880"
  },
  {
    "text": "have those two columns take up both viewports i could use the viewport segment with variables twice",
    "start": "1480880",
    "end": "1488159"
  },
  {
    "text": "uh changing their indices to indicate that one column should pick up the left viewport and one column should take up",
    "start": "1488159",
    "end": "1494799"
  },
  {
    "text": "the right viewport of the device and so these environment variables like",
    "start": "1494799",
    "end": "1500400"
  },
  {
    "text": "really reduce the friction when it comes to building a layout for dual screen devices and because of the",
    "start": "1500400",
    "end": "1506400"
  },
  {
    "text": "nature of these variables as foldables and dual screens like start to evolve and we get different",
    "start": "1506400",
    "end": "1513279"
  },
  {
    "text": "sized screens as long as the browsers on those devices support these platform features the",
    "start": "1513279",
    "end": "1519919"
  },
  {
    "text": "layout will adapt and calculate your viewport size and so you don't need to target like multiple",
    "start": "1519919",
    "end": "1527120"
  },
  {
    "text": "sizes like the user agent is going to calculate that for you and sort of adapt your",
    "start": "1527120",
    "end": "1532799"
  },
  {
    "text": "your design based on that and that's why i love those environment variables",
    "start": "1532799",
    "end": "1540679"
  },
  {
    "text": "so let's look at a couple different design pattern do's and don'ts if you're looking to design something",
    "start": "1542480",
    "end": "1549039"
  },
  {
    "text": "for dual screen we'll look at two design patterns we'll look at a two page an extended canvas there are quite a few",
    "start": "1549039",
    "end": "1556080"
  },
  {
    "text": "more in some documentation that i'll link to at the end of this talk",
    "start": "1556080",
    "end": "1562320"
  },
  {
    "text": "so dual screens can provide like a book-like paging experience which will allow you to show",
    "start": "1562799",
    "end": "1569679"
  },
  {
    "text": "multiple pages or related groups of information that are side by side",
    "start": "1569679",
    "end": "1575760"
  },
  {
    "text": "and so you want to use those two screens to have two completely separate page views",
    "start": "1575760",
    "end": "1581679"
  },
  {
    "text": "don't display the page across two screens having that content pass under the hinge",
    "start": "1581679",
    "end": "1589120"
  },
  {
    "text": "and then especially if you have actionable items again split up that content so that each",
    "start": "1590159",
    "end": "1595440"
  },
  {
    "text": "item is on its own display and once again like avoiding that hinge",
    "start": "1595440",
    "end": "1602240"
  },
  {
    "text": "and here you can use like a illustration or a visual indicator on the second screen if your content only",
    "start": "1604400",
    "end": "1611679"
  },
  {
    "text": "needs one screen but again just avoid having that content span",
    "start": "1611679",
    "end": "1618080"
  },
  {
    "text": "those two screens just for the sake of filling up space",
    "start": "1618080",
    "end": "1623600"
  },
  {
    "text": "now the extended canvas pattern is probably the simplest dual screen pattern",
    "start": "1625039",
    "end": "1630880"
  },
  {
    "text": "and this should be used if your app needs a bigger canvas than just that one viewport so i mentioned a drawing or",
    "start": "1630880",
    "end": "1638320"
  },
  {
    "text": "sketching app earlier the extended canvas would be beneficial",
    "start": "1638320",
    "end": "1643679"
  },
  {
    "text": "to your users in that in that instance and so if you're using this pattern",
    "start": "1643679",
    "end": "1650480"
  },
  {
    "text": "you want to display any dialogues in the left or right screen just don't don't center it to the entire device",
    "start": "1650480",
    "end": "1657200"
  },
  {
    "text": "otherwise it'll fall under that hinge",
    "start": "1657200",
    "end": "1661600"
  },
  {
    "text": "and then if you have some additional ui that displays information don't span it across the whole device",
    "start": "1662399",
    "end": "1668720"
  },
  {
    "text": "like keep it constrained to one side and then maybe you can page through content or have that scroll down on on the one",
    "start": "1668720",
    "end": "1676159"
  },
  {
    "text": "viewport and the same with with navigation",
    "start": "1676159",
    "end": "1682559"
  },
  {
    "text": "don't span it across even if it's unobscured just keep it to one side i",
    "start": "1682559",
    "end": "1687600"
  },
  {
    "text": "think the principle of the design principle of proximity probably comes into play here too a little bit if we",
    "start": "1687600",
    "end": "1693520"
  },
  {
    "text": "want to keep items related items grouped together so there's some potential here to confuse",
    "start": "1693520",
    "end": "1699200"
  },
  {
    "text": "users if you opt for the design on the right",
    "start": "1699200",
    "end": "1704559"
  },
  {
    "text": "and again here even though we're in a different device orientation just avoid any toolbars",
    "start": "1706080",
    "end": "1712480"
  },
  {
    "text": "from creeping under that hinge and again that's it for the design patterns but",
    "start": "1712480",
    "end": "1719200"
  },
  {
    "text": "there are a couple more that you can go check out on the microsoft",
    "start": "1719200",
    "end": "1725120"
  },
  {
    "text": "doc site so i hope you're feeling a little bit inspired",
    "start": "1725120",
    "end": "1731200"
  },
  {
    "text": "about what you can do with with dual screens and how you can adapt your layouts so let's talk about how you can use",
    "start": "1731200",
    "end": "1737919"
  },
  {
    "text": "these today so both of these apis are available in edge",
    "start": "1737919",
    "end": "1746399"
  },
  {
    "text": "by default as a version 97 and they are on by",
    "start": "1746399",
    "end": "1751600"
  },
  {
    "text": "default in chrome and other chromium-based browsers um but if you're playing with a",
    "start": "1751600",
    "end": "1757679"
  },
  {
    "text": "demo and it's not working you can go to chrome flags and enable experimental platform",
    "start": "1757679",
    "end": "1765279"
  },
  {
    "text": "features and then these these are available in edge and chrome on desktop so you can",
    "start": "1765279",
    "end": "1772799"
  },
  {
    "text": "play with those in the dual screen emulator and the developer tools",
    "start": "1772799",
    "end": "1779080"
  },
  {
    "text": "so again if you if you don't have an actual device you can use the devtools emulator in edge and chrome",
    "start": "1780159",
    "end": "1786480"
  },
  {
    "text": "um that works on windows or your mac um and it'll emulate this device and",
    "start": "1786480",
    "end": "1792960"
  },
  {
    "text": "you can tweak your just use the dev tools like you normally would to tweak your your layout around",
    "start": "1792960",
    "end": "1800960"
  },
  {
    "text": "if you don't see a surface duo from the device emulator drop down",
    "start": "1800960",
    "end": "1806240"
  },
  {
    "text": "go to your dev tools settings and there should be a spot for enabling",
    "start": "1806240",
    "end": "1812000"
  },
  {
    "text": "dual screen support in your device emulator",
    "start": "1812000",
    "end": "1817279"
  },
  {
    "text": "so if you need to see how that works just go to your",
    "start": "1818240",
    "end": "1824559"
  },
  {
    "text": "inspect find your device emulator",
    "start": "1824559",
    "end": "1830000"
  },
  {
    "text": "click your surface duo and you can change you can toggle you can toggle the dual screen format on",
    "start": "1831840",
    "end": "1838080"
  },
  {
    "text": "and off change orientation so it's all there and i actually have a surface duo",
    "start": "1838080",
    "end": "1843919"
  },
  {
    "text": "that i play with and i've compared my design to what comes up in the emulator and it's",
    "start": "1843919",
    "end": "1851200"
  },
  {
    "text": "spot on so it does work as a fantastic substitute if you don't have a physical",
    "start": "1851200",
    "end": "1857200"
  },
  {
    "text": "device to check out our documentation for",
    "start": "1857200",
    "end": "1864159"
  },
  {
    "text": "building dual screen there's some more information on things like how to build with react and xamarin to enhance your apps for",
    "start": "1864159",
    "end": "1870960"
  },
  {
    "text": "dual screens as well and then if you are a designer we also",
    "start": "1870960",
    "end": "1876240"
  },
  {
    "text": "have design kits available in figma for the surface duo and again you can also find",
    "start": "1876240",
    "end": "1882320"
  },
  {
    "text": "some more of those design patterns under that",
    "start": "1882320",
    "end": "1887600"
  },
  {
    "text": "user experience page for surface duo",
    "start": "1887600",
    "end": "1893480"
  },
  {
    "text": "so i hope you're as excited as i am about these new web features and if there's anything getting in the",
    "start": "1893519",
    "end": "1899760"
  },
  {
    "text": "way of you starting to experiment with dual screens dual screens",
    "start": "1899760",
    "end": "1905039"
  },
  {
    "text": "please let us know you can find us on twitter at ms edge dev or surface duo dev we're very responsive and answering",
    "start": "1905039",
    "end": "1912640"
  },
  {
    "text": "your questions or getting you any help you need or you can always drop me a line if you",
    "start": "1912640",
    "end": "1918320"
  },
  {
    "text": "have any questions i'm sea otta on twitter or you could reach out to my email",
    "start": "1918320",
    "end": "1924159"
  },
  {
    "text": "and i hope you are excited about the future of web layout and thank you so much for your time",
    "start": "1924159",
    "end": "1931960"
  },
  {
    "text": "you",
    "start": "1953279",
    "end": "1955360"
  }
]