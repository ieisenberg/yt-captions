[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "good morning everybody my name is Beth I am a developer I work",
    "start": "6029",
    "end": "11559"
  },
  {
    "text": "at dears a consulting company based in Melbourne and Sydney and I'm here today",
    "start": "11559",
    "end": "17890"
  },
  {
    "text": "to talk to you about pact which is a testing tool that can transform your testing process and it's based on some",
    "start": "17890",
    "end": "25419"
  },
  {
    "text": "experiences that my colleagues and I had at at real estate real estate condo a year or RA is it's also known where I",
    "start": "25419",
    "end": "34210"
  },
  {
    "text": "was working for about 18 months JB Rheinsberg gives a talk which opens",
    "start": "34210",
    "end": "43000"
  },
  {
    "start": "38000",
    "end": "65000"
  },
  {
    "text": "with the following provocative statement that I love integrated tests they're a scam a",
    "start": "43000",
    "end": "50820"
  },
  {
    "text": "self-replicating virus that threatens the very health of your code base your",
    "start": "50820",
    "end": "56140"
  },
  {
    "text": "sanity and I'm not exaggerating when I say your life so why are integrated tests so hated",
    "start": "56140",
    "end": "65430"
  },
  {
    "start": "65000",
    "end": "231000"
  },
  {
    "text": "well they're slow meaning we run them less often and that means we don't get",
    "start": "65430",
    "end": "71439"
  },
  {
    "text": "as good feedback on our design and you end up with this many-to-many",
    "start": "71439",
    "end": "77939"
  },
  {
    "text": "relationship between your code and your tests and that means when an integrated",
    "start": "77939",
    "end": "83890"
  },
  {
    "text": "test fails it's not immediately obvious which line of code has caused that failure and because of that many to many",
    "start": "83890",
    "end": "91060"
  },
  {
    "text": "relationship when one test fails it's likely that twenty other tests are going to fail along with it and",
    "start": "91060",
    "end": "98130"
  },
  {
    "text": "the real killer is that if you use integrated tests to check the basic",
    "start": "98130",
    "end": "104770"
  },
  {
    "text": "correctness of your code the number of tests that you need actually scales combinatorially so for example if you",
    "start": "104770",
    "end": "113079"
  },
  {
    "text": "had three classes with four code paths inch you'd actually need 64 tests to",
    "start": "113079",
    "end": "119859"
  },
  {
    "text": "cover each line of your code and nobody wants to write 64 tests everybody has",
    "start": "119859",
    "end": "124990"
  },
  {
    "text": "that amount of time so we've all had that day where we've been",
    "start": "124990",
    "end": "130410"
  },
  {
    "text": "trawling through our code trying to work out what's made all our integration",
    "start": "130410",
    "end": "136150"
  },
  {
    "text": "tests suddenly seem to fail at once for no apparent reason so why do we still use these integrated tests well it's",
    "start": "136150",
    "end": "144340"
  },
  {
    "text": "because we've also all had that day where we had over new feature to our",
    "start": "144340",
    "end": "149379"
  },
  {
    "text": "tester and we're feeling pretty smug because we've used TDD and we know we've got a hundred percent unit test coverage",
    "start": "149379",
    "end": "156300"
  },
  {
    "text": "and the tester brings up this new page and they get a big fat 500 error and",
    "start": "156300",
    "end": "162510"
  },
  {
    "text": "you look at the tester as if to say well that's not my problem on my tester Green it's your problem but yeah humor them",
    "start": "162510",
    "end": "170950"
  },
  {
    "text": "anyway because it's your job and then you look through the logs and you discover there's a record not found exception and you think oh that's",
    "start": "170950",
    "end": "177489"
  },
  {
    "text": "strange because I know I wrote the test for when the record was not found and it should behave nicely but then you dig",
    "start": "177489",
    "end": "183370"
  },
  {
    "text": "deeper and you realize that you did write that test but you wrote it and you",
    "start": "183370",
    "end": "188530"
  },
  {
    "text": "stubbed the code where the record has not found to return nil and in actual life it actually throws an exception so",
    "start": "188530",
    "end": "196239"
  },
  {
    "text": "you think to yourself if I'd if I'd written an integrated test I would have caught that bug",
    "start": "196239",
    "end": "202440"
  },
  {
    "text": "so now you have a dilemma if you don't use integrated tests you",
    "start": "202440",
    "end": "208389"
  },
  {
    "text": "can miss these sort of bugs perhaps even let them go through to production but if",
    "start": "208389",
    "end": "214209"
  },
  {
    "text": "you do use integrated tests you mentioned introduced this slow complex",
    "start": "214209",
    "end": "219730"
  },
  {
    "text": "burnin some load into your code base so the question now is is there another way",
    "start": "219730",
    "end": "226480"
  },
  {
    "text": "to find these errors and the answer luckily enough is yes and it's called",
    "start": "226480",
    "end": "231910"
  },
  {
    "start": "231000",
    "end": "324000"
  },
  {
    "text": "achieving test symmetry the test symmetry is a way of",
    "start": "231910",
    "end": "237299"
  },
  {
    "text": "checking that the assumptions that we make when we're studying our code are actually correct and it works like this",
    "start": "237299",
    "end": "244980"
  },
  {
    "text": "we have two classes a and B and in our test for a we use a mock B and",
    "start": "244980",
    "end": "252700"
  },
  {
    "text": "why do we use a mock using mock because it helps us avoid the combinatorial explosion that I mentioned before",
    "start": "252700",
    "end": "260700"
  },
  {
    "text": "in our test but a we check that a makes the right calls to B and that it can",
    "start": "260700",
    "end": "267909"
  },
  {
    "text": "handle the responses we expect back from being this is not life-changing this is what we do all the time this is what we call",
    "start": "267909",
    "end": "275410"
  },
  {
    "text": "the collaboration test what we miss though is the other part of",
    "start": "275410",
    "end": "281830"
  },
  {
    "text": "this diagram you can see this diagram is not symmetrical what we miss are called",
    "start": "281830",
    "end": "287140"
  },
  {
    "text": "the contract tests there's the test that make sure that B actually responds to",
    "start": "287140",
    "end": "293080"
  },
  {
    "text": "the colds we think it should and most importantly returns the thing that we think it should",
    "start": "293080",
    "end": "300150"
  },
  {
    "text": "now if we could ensure this test symmetry was",
    "start": "300150",
    "end": "305580"
  },
  {
    "text": "was correct we wouldn't have any problems but the problem with mocks is",
    "start": "305580",
    "end": "312130"
  },
  {
    "text": "that they're based on our assumptions and sometimes our assumptions are wrong",
    "start": "312130",
    "end": "317170"
  },
  {
    "text": "or sometimes they start right and they become wrong and we don't know about it sometimes until it's too late",
    "start": "317170",
    "end": "324600"
  },
  {
    "start": "324000",
    "end": "332000"
  },
  {
    "text": "if we could just ensure this this test symmetry we wouldn't need these messy",
    "start": "324600",
    "end": "330610"
  },
  {
    "text": "integrated tests and we'd live in this beautiful symmetrical world of rainbows and unicorns and Happiness so",
    "start": "330610",
    "end": "338610"
  },
  {
    "start": "332000",
    "end": "345000"
  },
  {
    "text": "why why aren't we already living in this world of rainbows and happiness and",
    "start": "338610",
    "end": "344140"
  },
  {
    "text": "unicorns that's because achieving test symmetry is hard because there's no",
    "start": "344140",
    "end": "349840"
  },
  {
    "start": "345000",
    "end": "387000"
  },
  {
    "text": "automated tools to do it for us it relies on the eternal vigilance of the",
    "start": "349840",
    "end": "356980"
  },
  {
    "text": "developer which just like rails does not scale oh that's good Drake has never worked in",
    "start": "356980",
    "end": "364150"
  },
  {
    "text": "Sydney before it's a Melbourne specific joke so even the type system doesn't",
    "start": "364150",
    "end": "369700"
  },
  {
    "text": "always help us and and there's just there's nothing that will look through",
    "start": "369700",
    "end": "375370"
  },
  {
    "text": "your code and say well I can see you've you've stubbed be over here to return this thing and you've actually you know",
    "start": "375370",
    "end": "382200"
  },
  {
    "text": "mismatch that over here if you've missed that test so I post this question to my",
    "start": "382200",
    "end": "387640"
  },
  {
    "text": "colleagues at dears and said does anybody else know of any tools that can help us achieve this and there was a",
    "start": "387640",
    "end": "394480"
  },
  {
    "text": "whole lot of silence and then my work mate Ron he was working on a real estate bill condon au at that time",
    "start": "394480",
    "end": "402030"
  },
  {
    "text": "said that actually where he was working they were trying a new tool that did",
    "start": "402030",
    "end": "408360"
  },
  {
    "text": "something very similar to this just as a bit of background real estate",
    "start": "408360",
    "end": "414090"
  },
  {
    "text": "comdata you has a website that hundreds of thousands of people use every day and",
    "start": "414090",
    "end": "420030"
  },
  {
    "text": "they've grown really quickly to meet that demand so it's not surprising that I have their fair share of monolithic",
    "start": "420030",
    "end": "427800"
  },
  {
    "text": "software which we just used to call software but now we have a name for it now that's not to say that all",
    "start": "427800",
    "end": "434090"
  },
  {
    "text": "monolithic software is bad but this was the the bad type of monolithic software",
    "start": "434090",
    "end": "439140"
  },
  {
    "text": "that was really tightly coupled to all the other pivotal systems in the",
    "start": "439140",
    "end": "444630"
  },
  {
    "text": "company and you're afraid to touch something over here because of the effect that it might have in some",
    "start": "444630",
    "end": "450840"
  },
  {
    "text": "completely unrelated system all the way over here so in an effort to get away from this",
    "start": "450840",
    "end": "458400"
  },
  {
    "text": "anti-pattern REO started writing small single purpose services that we now call",
    "start": "458400",
    "end": "464700"
  },
  {
    "text": "micro services now micro services are really good because they help take your",
    "start": "464700",
    "end": "470310"
  },
  {
    "text": "code and break it down into small manageable chunks that are easy to understand and maintain",
    "start": "470310",
    "end": "476870"
  },
  {
    "text": "change and even throw out but the downside of micro services is",
    "start": "476870",
    "end": "483420"
  },
  {
    "text": "that you're increasing the number of integration points and when you increase the number of integration points you",
    "start": "483420",
    "end": "489390"
  },
  {
    "text": "increase the number of integration tests and if integration testing within a code",
    "start": "489390",
    "end": "495120"
  },
  {
    "text": "base is painful then integration testing between services is even more painful",
    "start": "495120",
    "end": "501350"
  },
  {
    "start": "500000",
    "end": "542000"
  },
  {
    "text": "those tests are slower and brittle and lengthy they can take hours sometimes",
    "start": "501350",
    "end": "508200"
  },
  {
    "text": "and they're causing a lot of pain so let me",
    "start": "508200",
    "end": "514800"
  },
  {
    "text": "walk you through a couple of solutions that they tried that didn't work so well so they started with having one",
    "start": "514800",
    "end": "521930"
  },
  {
    "text": "integration test environment and that was the gateway to production so they had copies of all the the monoliths and",
    "start": "521930",
    "end": "529710"
  },
  {
    "text": "then copies of all these services and now try and deploy everything in",
    "start": "529710",
    "end": "535440"
  },
  {
    "text": "witches and test everything together before they release everything and",
    "start": "535440",
    "end": "541310"
  },
  {
    "text": "the problem with having one environment it's a gateway to production as when you",
    "start": "541340",
    "end": "546540"
  },
  {
    "start": "542000",
    "end": "560000"
  },
  {
    "text": "have a whole heap of services and changes trying to get through that gateway it becomes a bottleneck and",
    "start": "546540",
    "end": "552950"
  },
  {
    "text": "when you have really tight coupling between your services and you're",
    "start": "552950",
    "end": "558150"
  },
  {
    "text": "uncertain of the effects of changes it makes you very overprotective and you",
    "start": "558150",
    "end": "564180"
  },
  {
    "text": "try and test everything to the enth degree before releasing and that makes you release cycles slow and then if you",
    "start": "564180",
    "end": "570900"
  },
  {
    "text": "do find a bug it's slow to fix it so that really wasn't working so well",
    "start": "570900",
    "end": "576270"
  },
  {
    "text": "for them around about the time that micro services started becoming a thing and",
    "start": "576270",
    "end": "582870"
  },
  {
    "text": "kind of connected to it REO started using AWS so the logic went that if having one",
    "start": "582870",
    "end": "592130"
  },
  {
    "text": "gateway test environment was not working let's try giving each service its own test environment and",
    "start": "592130",
    "end": "599280"
  },
  {
    "text": "running integration tests across each of those environments that kind of worked ok for the new",
    "start": "599280",
    "end": "607830"
  },
  {
    "text": "services which all had automated deploy scripts but they still needed those",
    "start": "607830",
    "end": "613770"
  },
  {
    "text": "copies of those old monoliths and those weren't automated the deploys weren't automated the maintenance wasn't",
    "start": "613770",
    "end": "619560"
  },
  {
    "text": "automated so had to be hand maintained so this approach was tried for about",
    "start": "619560",
    "end": "625020"
  },
  {
    "start": "623000",
    "end": "664000"
  },
  {
    "text": "three months and there there was a lot of failures there are a lot of false",
    "start": "625020",
    "end": "630870"
  },
  {
    "text": "positives and only one proper bug was actually detected so",
    "start": "630870",
    "end": "637970"
  },
  {
    "text": "generally speaking system integration tests are fraught with problems they",
    "start": "637970",
    "end": "643320"
  },
  {
    "text": "scale really badly there's lots of setup you might need expensive infrastructure there's a lot of false negatives the",
    "start": "643320",
    "end": "651330"
  },
  {
    "text": "bugs are hard to fix because it's hard to work out exactly what part of your system has failed and they're really",
    "start": "651330",
    "end": "659250"
  },
  {
    "text": "slow let's come back to this tool that Ron was talking about there were trialing",
    "start": "659250",
    "end": "665220"
  },
  {
    "start": "664000",
    "end": "746000"
  },
  {
    "text": "[Music] so this is why I'm a developer because",
    "start": "665220",
    "end": "671110"
  },
  {
    "text": "this is the extent of my graphic skills now packed packed is the tool that he",
    "start": "671110",
    "end": "678310"
  },
  {
    "text": "was talking about and it was written by some pretty smart people at REI and there's now an open-source library and",
    "start": "678310",
    "end": "685300"
  },
  {
    "text": "is based on the concept of consumer-driven contracts now when we're designing a consumer and",
    "start": "685300",
    "end": "693519"
  },
  {
    "text": "provider pair of services we often start with a provider or maybe some data in a",
    "start": "693519",
    "end": "699730"
  },
  {
    "text": "database we go well what's the easiest way I can get that data out of that",
    "start": "699730",
    "end": "705670"
  },
  {
    "text": "database and into a HTTP response and often we just end up expressing a",
    "start": "705670",
    "end": "711130"
  },
  {
    "text": "database model which is not the best way to do it so consumer driven contracts turns that",
    "start": "711130",
    "end": "718000"
  },
  {
    "text": "around and starts by asking me the consumer how do I want to consume",
    "start": "718000",
    "end": "725709"
  },
  {
    "text": "this data what format makes sense what requests make sense to me and then we go",
    "start": "725709",
    "end": "731890"
  },
  {
    "text": "over and make sure the provider conforms to our wishes so packed users consumer driven",
    "start": "731890",
    "end": "738550"
  },
  {
    "text": "contracts to automatically enforce test symmetry between the two services and",
    "start": "738550",
    "end": "744579"
  },
  {
    "text": "this is how it works we have service and service B this diagram probably looks familiar",
    "start": "744579",
    "end": "751860"
  },
  {
    "text": "but in the consumer-driven contract well we call this the consumer and the provider and",
    "start": "751860",
    "end": "757230"
  },
  {
    "text": "the we write test for the consumer using a mock provider that the packed library",
    "start": "757230",
    "end": "764770"
  },
  {
    "text": "provides and then we check that a consumer makes the request that we think",
    "start": "764770",
    "end": "770199"
  },
  {
    "text": "it should to the provider and we check that it can handle all the responses we",
    "start": "770199",
    "end": "775930"
  },
  {
    "text": "get back from the provider now at this stage this is where packed",
    "start": "775930",
    "end": "782290"
  },
  {
    "text": "is different from just normal HTTP mock software because while we're running those tests in the consumer it's taking",
    "start": "782290",
    "end": "790089"
  },
  {
    "text": "those requests and our expected responses and it's writing them to a",
    "start": "790089",
    "end": "795790"
  },
  {
    "text": "contract file this is what we called the Pat and the second step of this process is",
    "start": "795790",
    "end": "803060"
  },
  {
    "text": "we take that packed file over to the provider and we replay the requests",
    "start": "803060",
    "end": "810750"
  },
  {
    "text": "against the provider and we look at the responses that come back and we compare them to our expected responses and if",
    "start": "810750",
    "end": "818730"
  },
  {
    "text": "they match then we know that our real provider is behaving the same way that our mock provider did and then we can be",
    "start": "818730",
    "end": "826320"
  },
  {
    "text": "pretty confident that in real life and our consumer in a provider are actually",
    "start": "826320",
    "end": "831390"
  },
  {
    "text": "going to talk together correctly",
    "start": "831390",
    "end": "834740"
  },
  {
    "text": "so unlike those integration tests that we talked about earlier contracts are",
    "start": "836960",
    "end": "842220"
  },
  {
    "start": "837000",
    "end": "899000"
  },
  {
    "text": "fast they're more stable the easier to debug and the more reliable if you write",
    "start": "842220",
    "end": "849390"
  },
  {
    "text": "them currently they'll scale linearly not combinatorially and there's a much lower set up and you don't actually need",
    "start": "849390",
    "end": "855990"
  },
  {
    "text": "any extra expensive infrastructure because you can run these tests on your local machine or on your CI build",
    "start": "855990",
    "end": "863660"
  },
  {
    "text": "contracts allow you to develop with agility and avoid traditional versioning",
    "start": "863660",
    "end": "868830"
  },
  {
    "text": "systems and you're able to do this because the provider knows it's consumers and it knows that the all the",
    "start": "868830",
    "end": "875880"
  },
  {
    "text": "expectations that the consumers have of it so you will know before you commit",
    "start": "875880",
    "end": "881190"
  },
  {
    "text": "changes to your provider or consumer whether or not you're going to work correctly with the other service in your",
    "start": "881190",
    "end": "888330"
  },
  {
    "text": "pair this means that you don't have to wait for a lengthy build cycle to",
    "start": "888330",
    "end": "893790"
  },
  {
    "text": "discover bugs you know before you commit so you're not even checking in bugs and",
    "start": "893790",
    "end": "900350"
  },
  {
    "start": "899000",
    "end": "945000"
  },
  {
    "text": "because you're designing with consumer driven contracts you're writing a better",
    "start": "900350",
    "end": "906180"
  },
  {
    "text": "API because you're starting with a real-world example",
    "start": "906180",
    "end": "911600"
  },
  {
    "text": "now if you're anything like me you don't really get the concept until you've seen a great example this stage you have to",
    "start": "911600",
    "end": "917820"
  },
  {
    "text": "make a bit of an apology because I'm from Melbourne and we love our Ruby in Melbourne and I didn't realize until I",
    "start": "917820",
    "end": "924420"
  },
  {
    "text": "saw the agenda for NDC Sydney but there's a lot of Microsoft people here a",
    "start": "924420",
    "end": "929760"
  },
  {
    "text": "lot of JavaScript people but not so many Rubi people it would seem but I'm the",
    "start": "929760",
    "end": "935550"
  },
  {
    "text": "first person to admit that ruby has 99 problems but lack of readability is not one so I'm pretty sure you're gonna be",
    "start": "935550",
    "end": "942389"
  },
  {
    "text": "out of follow along with me here all right",
    "start": "942389",
    "end": "948139"
  },
  {
    "start": "945000",
    "end": "980000"
  },
  {
    "text": "every good test has three parts a range act in assert so this is the",
    "start": "948139",
    "end": "956610"
  },
  {
    "text": "part we arranged we're setting up our world so we're going to declare that we have a",
    "start": "956610",
    "end": "963120"
  },
  {
    "text": "service consumer and it's going to be called the zoo app and we're going to write a pact with an animal service and",
    "start": "963120",
    "end": "972350"
  },
  {
    "text": "we're going to run a mock service on port one two three four",
    "start": "972350",
    "end": "978499"
  },
  {
    "start": "980000",
    "end": "1026000"
  },
  {
    "text": "next we need to set up our expectations on that mock service so that it will",
    "start": "981499",
    "end": "987629"
  },
  {
    "text": "behave like we think the real service is going to behave so",
    "start": "987629",
    "end": "992930"
  },
  {
    "text": "we're saying here the animal service given that there is an alligator named",
    "start": "992930",
    "end": "998370"
  },
  {
    "text": "Mary now this is what we call a provider state and I'll explain why we need this later",
    "start": "998370",
    "end": "1005079"
  },
  {
    "text": "the animal service upon receiving a request for an alligator with a get request to path alligators Mary will",
    "start": "1005680",
    "end": "1013939"
  },
  {
    "text": "respond with and we expect a JSON document with our alligator Mary and we",
    "start": "1013939",
    "end": "1019129"
  },
  {
    "text": "expected to be a 200 response",
    "start": "1019129",
    "end": "1022839"
  },
  {
    "text": "next we need to do the act and assert parts of our test so when we run our",
    "start": "1025600",
    "end": "1032259"
  },
  {
    "start": "1026000",
    "end": "1058000"
  },
  {
    "text": "animal service client this is the class that we're writing to interact with that animal service we expect find alligator",
    "start": "1032259",
    "end": "1039610"
  },
  {
    "text": "by name Mary to return us a an alligator object with the name Mary",
    "start": "1039610",
    "end": "1047638"
  },
  {
    "text": "then while we're running that test our mock server is writing our packed file",
    "start": "1048899",
    "end": "1056889"
  },
  {
    "text": "for us so it's just basic Jason you can see we've got our provider and consumer",
    "start": "1056889",
    "end": "1062769"
  },
  {
    "text": "names there and we've got a list of our interactions so you can see that um code",
    "start": "1062769",
    "end": "1070090"
  },
  {
    "text": "that we have now been turned into Jason we've got our description of our request a provider state and our actual request",
    "start": "1070090",
    "end": "1078909"
  },
  {
    "text": "and the response we expect so that's the first half that's the",
    "start": "1078909",
    "end": "1085950"
  },
  {
    "text": "collaboration test now we need to run the contract tests",
    "start": "1085950",
    "end": "1090990"
  },
  {
    "text": "so we pop into the provider project and we do the reverse of that",
    "start": "1090990",
    "end": "1096820"
  },
  {
    "start": "1091000",
    "end": "1115000"
  },
  {
    "text": "configuration that we did at the start we say the service provider the animal",
    "start": "1096820",
    "end": "1102220"
  },
  {
    "text": "service will honor a pact with the zoo app and we give it a URL where it can",
    "start": "1102220",
    "end": "1110110"
  },
  {
    "text": "access that pact file",
    "start": "1110110",
    "end": "1113309"
  },
  {
    "start": "1115000",
    "end": "1143000"
  },
  {
    "text": "next we need to set up the test data now this is a really important step",
    "start": "1116190",
    "end": "1122039"
  },
  {
    "text": "remember I said we had a thing called a provider state that I will explain later",
    "start": "1122039",
    "end": "1127299"
  },
  {
    "text": "now this is where we use that provider state back in a consumer project we",
    "start": "1127299",
    "end": "1132370"
  },
  {
    "text": "assumed that there would be an animal service sorry an alligator named Mary",
    "start": "1132370",
    "end": "1138750"
  },
  {
    "text": "now this stage we need to write a bit of code that when it sees that there is an",
    "start": "1138750",
    "end": "1145090"
  },
  {
    "start": "1143000",
    "end": "1175000"
  },
  {
    "text": "alligator named Mary will insert an alligator named Mary into our database and our provider because if we just",
    "start": "1145090",
    "end": "1150610"
  },
  {
    "text": "replayed a request for an alligator named Mary without setting up any data we'd get a 404 and under 200",
    "start": "1150610",
    "end": "1159299"
  },
  {
    "text": "so we declare our provider state there's an alligator named Mary and we insert a",
    "start": "1159600",
    "end": "1164860"
  },
  {
    "text": "alligator into our database and then we run our replay all our",
    "start": "1164860",
    "end": "1173400"
  },
  {
    "text": "requests and look at the responses cut that come back and of course because we're doing TDD or test verse we and we",
    "start": "1173400",
    "end": "1180340"
  },
  {
    "start": "1175000",
    "end": "1185000"
  },
  {
    "text": "get some failures but then we red green refactor and until we get to",
    "start": "1180340",
    "end": "1185970"
  },
  {
    "start": "1185000",
    "end": "1230000"
  },
  {
    "text": "this nice beautiful green state where we're running our verification tests and",
    "start": "1185970",
    "end": "1191530"
  },
  {
    "text": "they're all green and that the text that we use when we're",
    "start": "1191530",
    "end": "1196570"
  },
  {
    "text": "setting up the test in our consumer is used to create this really nice output in our provider verifications so you can",
    "start": "1196570",
    "end": "1204789"
  },
  {
    "text": "see it reads quite nicely given there is an alligator named Mary a request for an alligator returns a response which has a",
    "start": "1204789",
    "end": "1210970"
  },
  {
    "text": "200 matching buddy Bubba so this test here when it is green tells",
    "start": "1210970",
    "end": "1217000"
  },
  {
    "text": "us that our real provider behaves the same way that our mock provider did so it stops that drifting mock problem",
    "start": "1217000",
    "end": "1226179"
  },
  {
    "text": "that we talked about early now let me talk about sharing contract",
    "start": "1226179",
    "end": "1234809"
  },
  {
    "start": "1230000",
    "end": "1275000"
  },
  {
    "text": "so consuming our provider because we're writing micro-services are in different",
    "start": "1236639",
    "end": "1242429"
  },
  {
    "text": "projects different code bases different repos we need to get the contract somehow from",
    "start": "1242429",
    "end": "1248889"
  },
  {
    "text": "the consumer to the provider there's a few different ways we could do this we",
    "start": "1248889",
    "end": "1254320"
  },
  {
    "text": "could push the contract from the consumer",
    "start": "1254320",
    "end": "1260019"
  },
  {
    "text": "build straight into the repo of the provider and we could use build",
    "start": "1260019",
    "end": "1266200"
  },
  {
    "text": "artifacts there's actually another tool that's been written specifically to solve this problem and it comes along",
    "start": "1266200",
    "end": "1272409"
  },
  {
    "text": "with some extra benefits now this tool is called the pact broker",
    "start": "1272409",
    "end": "1277570"
  },
  {
    "start": "1275000",
    "end": "1336000"
  },
  {
    "text": "and it's a central point for sharing pacts now the benefits of using the pact",
    "start": "1277570",
    "end": "1282789"
  },
  {
    "text": "broker when you use the same pact broker for all the services in a given context is that you",
    "start": "1282789",
    "end": "1290049"
  },
  {
    "text": "can start to mind the data that is in those contracts in the pact",
    "start": "1290049",
    "end": "1296350"
  },
  {
    "text": "broker to provide some really useful information because one of the the dirty secrets of",
    "start": "1296350",
    "end": "1302470"
  },
  {
    "text": "microservices is that you can't really kill complexity",
    "start": "1302470",
    "end": "1309570"
  },
  {
    "text": "when you're writing micro services yes you're breaking your your code down into",
    "start": "1309570",
    "end": "1315700"
  },
  {
    "text": "small and manageable chunks but then you're actually increasing the complexity of the interactions between them and unless you have automated tools",
    "start": "1315700",
    "end": "1323200"
  },
  {
    "text": "to help you manage that complexity writing more and more services is actually going to be more of a burden than a solution",
    "start": "1323200",
    "end": "1330809"
  },
  {
    "text": "so let me show you an example of some of the information",
    "start": "1332730",
    "end": "1339340"
  },
  {
    "text": "get out of the pack breaker so this is a network graph of a heap of services that",
    "start": "1339340",
    "end": "1345759"
  },
  {
    "text": "were in a context at real estate comm and there's a fair number of services",
    "start": "1345759",
    "end": "1351340"
  },
  {
    "text": "that are all quite chatting you can actually see that service true it depends on about six other services at",
    "start": "1351340",
    "end": "1358090"
  },
  {
    "text": "that point you might start to go something not quite right happening there",
    "start": "1358090",
    "end": "1364410"
  },
  {
    "text": "you might you get useful stuff out of this that shows you where your",
    "start": "1364410",
    "end": "1369520"
  },
  {
    "text": "dependencies are and what your most-used services are and the other really useful things is",
    "start": "1369520",
    "end": "1377170"
  },
  {
    "start": "1375000",
    "end": "1429000"
  },
  {
    "text": "this auto-generated documentation so when you have you know 510",
    "start": "1377170",
    "end": "1383170"
  },
  {
    "text": "micro-services the developer team can kind of keep track in the heads of what each service does but if you like I'm RA",
    "start": "1383170",
    "end": "1391360"
  },
  {
    "text": "who are now probably about three years down the track they're micro services",
    "start": "1391360",
    "end": "1396670"
  },
  {
    "text": "that they'll have hundreds of these micro services and no one person can",
    "start": "1396670",
    "end": "1401710"
  },
  {
    "text": "know exactly what everything does so having this auto-generated",
    "start": "1401710",
    "end": "1406990"
  },
  {
    "text": "documentation makes it much easier to work out what each services does with really clear examples and",
    "start": "1406990",
    "end": "1416190"
  },
  {
    "text": "increases your ability to reuse a surface because you can see what they",
    "start": "1416190",
    "end": "1421240"
  },
  {
    "text": "all do and go oh there's no service that already does what I want let me have a look through these examples",
    "start": "1421240",
    "end": "1428760"
  },
  {
    "start": "1429000",
    "end": "1526000"
  },
  {
    "text": "the other benefit that the PAC broker gives you is that it allows you to",
    "start": "1429390",
    "end": "1434830"
  },
  {
    "text": "decouple your releases one of the aims that people want to",
    "start": "1434830",
    "end": "1441280"
  },
  {
    "text": "achieve when using micro services is they want to decouple their releases so that they can deploy their consumer or",
    "start": "1441280",
    "end": "1447670"
  },
  {
    "text": "deploy their providers separately without having to do this lockstep thing we have to deploy that five different",
    "start": "1447670",
    "end": "1453130"
  },
  {
    "text": "services all at once now when you're running your standard",
    "start": "1453130",
    "end": "1458290"
  },
  {
    "text": "packed test you'll be testing your head consumer",
    "start": "1458290",
    "end": "1464260"
  },
  {
    "text": "against your head provider but when you deploy a new version of your consumer to",
    "start": "1464260",
    "end": "1470110"
  },
  {
    "text": "production you actually want to know whether is compatible with the production version of the provider and",
    "start": "1470110",
    "end": "1477060"
  },
  {
    "text": "then if you deploy a new version of your provider you actually want to know whether it's compatible with the",
    "start": "1477060",
    "end": "1482830"
  },
  {
    "text": "production version of the consumer so having the PAC broker and having",
    "start": "1482830",
    "end": "1488470"
  },
  {
    "text": "these armed version pacts allows us to",
    "start": "1488470",
    "end": "1493920"
  },
  {
    "text": "do what I call testing the pact matrix to make sure that if you deploy one",
    "start": "1493920",
    "end": "1499049"
  },
  {
    "text": "thing it's compatible with all the other things as the pack Berkshire has this ability to tag a pact you can say well",
    "start": "1499049",
    "end": "1505230"
  },
  {
    "text": "this is the production pact or this is the the test pact and when you're doing",
    "start": "1505230",
    "end": "1511890"
  },
  {
    "text": "your verification in your provider you can say well I want to test myself against the head pact but I also want to",
    "start": "1511890",
    "end": "1518280"
  },
  {
    "text": "test myself against the production pact or the test pact",
    "start": "1518280",
    "end": "1523760"
  },
  {
    "start": "1526000",
    "end": "1583000"
  },
  {
    "text": "now not all services communicate via HTTP events driven services are quite popular",
    "start": "1526549",
    "end": "1534270"
  },
  {
    "text": "and in fact you can actually do rest without HTTP which is what we did an another project that I worked on an RA",
    "start": "1534270",
    "end": "1540870"
  },
  {
    "text": "so we did read an architecture where we're",
    "start": "1540870",
    "end": "1546270"
  },
  {
    "text": "actually using batch processes to generate hypermedia JSON documents that got",
    "start": "1546270",
    "end": "1552690"
  },
  {
    "text": "written to s3 and the consumers of those JSON",
    "start": "1552690",
    "end": "1557940"
  },
  {
    "text": "documents needed to be sure of what the contents of those JSON documents were in just the same way that HTTP consumer",
    "start": "1557940",
    "end": "1565590"
  },
  {
    "text": "would need to be sure of what comes back in a response this this process we called hipster",
    "start": "1565590",
    "end": "1572250"
  },
  {
    "text": "batch and it worked out really quite well for much larger data sets than you",
    "start": "1572250",
    "end": "1579000"
  },
  {
    "text": "would want to use in an HTTP request so we used",
    "start": "1579000",
    "end": "1585140"
  },
  {
    "start": "1583000",
    "end": "1643000"
  },
  {
    "text": "we use packed but not in quite the same way when you're using HTTP you get this",
    "start": "1585140",
    "end": "1591900"
  },
  {
    "text": "really neat injection point where you can put your your test and your your verification",
    "start": "1591900",
    "end": "1598460"
  },
  {
    "text": "but when you're using not a non HTTP based services you need to find that",
    "start": "1598460",
    "end": "1603480"
  },
  {
    "text": "injection point yourself but underlying principles are really the same",
    "start": "1603480",
    "end": "1609020"
  },
  {
    "text": "so you're a consumer you need a test to show that it can correctly handle a",
    "start": "1609020",
    "end": "1614100"
  },
  {
    "text": "given message and the provider you need to test to show that it actually creates",
    "start": "1614100",
    "end": "1619770"
  },
  {
    "text": "the message that you think it will so we used the Jason matching portion of",
    "start": "1619770",
    "end": "1628470"
  },
  {
    "text": "pack to do the matching and the tests but we wrote the and then the path broker to exchange the contracts but",
    "start": "1628470",
    "end": "1634950"
  },
  {
    "text": "then we wrote those little bits around the the verification and the set up ourselves and it worked really quite",
    "start": "1634950",
    "end": "1641070"
  },
  {
    "text": "well so you might be wondering now do I still",
    "start": "1641070",
    "end": "1646679"
  },
  {
    "start": "1643000",
    "end": "1662000"
  },
  {
    "text": "need these big integration tests now I've got these fancy contract tests",
    "start": "1646679",
    "end": "1651770"
  },
  {
    "text": "the answer is it kind of depends on the organization's risk profile",
    "start": "1651770",
    "end": "1660110"
  },
  {
    "text": "so when we're deploying when it comes to releasing software there's this tension",
    "start": "1660110",
    "end": "1666149"
  },
  {
    "start": "1662000",
    "end": "1688000"
  },
  {
    "text": "between confidence and responsiveness",
    "start": "1666149",
    "end": "1671690"
  },
  {
    "text": "narrowing the scope of a test increases our responsiveness but it can decrease",
    "start": "1671690",
    "end": "1676919"
  },
  {
    "text": "our confidence and whether or not that works for your",
    "start": "1676919",
    "end": "1683549"
  },
  {
    "text": "organization is something that only your team can answer but I'll walk you",
    "start": "1683549",
    "end": "1689190"
  },
  {
    "start": "1688000",
    "end": "1764000"
  },
  {
    "text": "through what we did at routines at real estate comm so we did ditch our",
    "start": "1689190",
    "end": "1695250"
  },
  {
    "text": "integration test and I was wonderful so then we took that time that we would",
    "start": "1695250",
    "end": "1701490"
  },
  {
    "text": "have spent investing in those integration tests and we put it into",
    "start": "1701490",
    "end": "1707120"
  },
  {
    "text": "writing much more meaningful business monitoring so we were able to know when",
    "start": "1707120",
    "end": "1712799"
  },
  {
    "text": "underlying business processes were broken this worked because the developers were",
    "start": "1712799",
    "end": "1719220"
  },
  {
    "text": "the people doing the releases we had what we used to call accidental DevOps which was actually because we ran out of",
    "start": "1719220",
    "end": "1726270"
  },
  {
    "text": "ops people because it was cool is because it just happened to be ten but there weren't some really good",
    "start": "1726270",
    "end": "1732990"
  },
  {
    "text": "benefits to this it means that when a developer is worried about being woken up at four",
    "start": "1732990",
    "end": "1740340"
  },
  {
    "text": "o'clock in the afternoon they write really good monitoring a really good test",
    "start": "1740340",
    "end": "1745880"
  },
  {
    "text": "so contract tests work on their best within a DevOps system because",
    "start": "1745880",
    "end": "1753289"
  },
  {
    "text": "releasing bugs into production becomes much less risky when you know that you",
    "start": "1753289",
    "end": "1758639"
  },
  {
    "text": "can find those bugs and you can fix those bugs really quickly",
    "start": "1758639",
    "end": "1763460"
  },
  {
    "start": "1764000",
    "end": "1787000"
  },
  {
    "text": "so like every tool there are problems that are suited to that tool and there",
    "start": "1764269",
    "end": "1769980"
  },
  {
    "text": "are problems that are not suited to that tool Packt is a tool for consumer-driven",
    "start": "1769980",
    "end": "1776220"
  },
  {
    "text": "contracts and if your consumer can't derive the requirements of your provider",
    "start": "1776220",
    "end": "1782159"
  },
  {
    "text": "then another tool is probably going to be better for you Packt is really good for use with",
    "start": "1782159",
    "end": "1789990"
  },
  {
    "text": "internal api's and it's best when you have control over both the consumer and provider so not",
    "start": "1789990",
    "end": "1797580"
  },
  {
    "text": "necessarily that you are writing both but you are talking to the provider team you have good interactions you have good",
    "start": "1797580",
    "end": "1804480"
  },
  {
    "text": "communication happening between those two teams so when should you not use pact",
    "start": "1804480",
    "end": "1812299"
  },
  {
    "start": "1812000",
    "end": "1888000"
  },
  {
    "text": "should not use pact for public api's because a public API is not consumer",
    "start": "1812299",
    "end": "1818700"
  },
  {
    "text": "driven in the same way anyway contracts are lined about quickly and avoid traditional versioning to achieve",
    "start": "1818700",
    "end": "1827399"
  },
  {
    "text": "rapid change but this can be done because the provider knows its consumers and it knows the expectations they have",
    "start": "1827399",
    "end": "1833190"
  },
  {
    "text": "of it and the public API is do not know their consumers",
    "start": "1833190",
    "end": "1838340"
  },
  {
    "text": "stability is the key rather than release responsiveness and from a technical point of view when",
    "start": "1838340",
    "end": "1845669"
  },
  {
    "text": "you run the verification you can't actually test the API you can't set up data in it without actually using the",
    "start": "1845669",
    "end": "1853259"
  },
  {
    "text": "API that you are testing and then you get into the situation where",
    "start": "1853259",
    "end": "1860659"
  },
  {
    "text": "your you can have test data leaking over from previous tests that contaminate",
    "start": "1860659",
    "end": "1866999"
  },
  {
    "text": "your tests and one of the main features of pact is that you have complete isolation between your verifications so",
    "start": "1866999",
    "end": "1874259"
  },
  {
    "text": "never in the situation where a the success of one test relies on the",
    "start": "1874259",
    "end": "1880139"
  },
  {
    "text": "success of a previous test because that ends us up in the integration test tile that we were trying to get out of",
    "start": "1880139",
    "end": "1888080"
  },
  {
    "start": "1888000",
    "end": "1952000"
  },
  {
    "text": "so because the pack file itself is Jason its language independence so you can",
    "start": "1889130",
    "end": "1895650"
  },
  {
    "text": "write a packed library in any language and we're working on it so we the ruby",
    "start": "1895650",
    "end": "1901980"
  },
  {
    "text": "one was the first one to be written and is pretty stable and and",
    "start": "1901980",
    "end": "1907310"
  },
  {
    "text": "quiet feature complete the JVM and the Scala is the same the",
    "start": "1907310",
    "end": "1915360"
  },
  {
    "text": "dotnet is pretty early days the JavaScript one is gaining popularity",
    "start": "1915360",
    "end": "1922680"
  },
  {
    "text": "and the the newbies on the scene are swift go and rust and they're all being",
    "start": "1922680",
    "end": "1929280"
  },
  {
    "text": "kept together by this pack specification which means that if you generate a",
    "start": "1929280",
    "end": "1935210"
  },
  {
    "text": "packed file in a consumer then the matching logic will run the same on any",
    "start": "1935210",
    "end": "1941810"
  },
  {
    "text": "provider in any other language so this gives you the confidence that even with",
    "start": "1941810",
    "end": "1947550"
  },
  {
    "text": "services in different languages they're all going to work correctly together",
    "start": "1947550",
    "end": "1952820"
  },
  {
    "start": "1952000",
    "end": "1974000"
  },
  {
    "text": "so in that summary the traditional integration test covers",
    "start": "1953330",
    "end": "1959310"
  },
  {
    "text": "many layers of our system increasing the opportunity for failure and by breaking",
    "start": "1959310",
    "end": "1964650"
  },
  {
    "text": "our tests up into small manageable chunks and enforcing this test symmetry",
    "start": "1964650",
    "end": "1970260"
  },
  {
    "text": "we achieve more reliable and faster running tests so packed allows you to combine the",
    "start": "1970260",
    "end": "1977700"
  },
  {
    "text": "advantages of integrated tests and test symmetry while mitigating the",
    "start": "1977700",
    "end": "1983430"
  },
  {
    "text": "shortcomings of each it allows you to modify components with agility and give",
    "start": "1983430",
    "end": "1988710"
  },
  {
    "text": "you quick feedback on potential breakages because you know before you commit whether you've created about not",
    "start": "1988710",
    "end": "1994920"
  },
  {
    "text": "after a commit and a 30 minute build cycle ensures you always have up-to-date",
    "start": "1994920",
    "end": "2000910"
  },
  {
    "text": "documentation without any overhead and if you're lucky you can even throw away your integration tests",
    "start": "2000910",
    "end": "2007120"
  },
  {
    "start": "2007000",
    "end": "2343000"
  },
  {
    "text": "so pact makes you microservices play nicely together and if you would like to",
    "start": "2007120",
    "end": "2012980"
  },
  {
    "text": "know more about pact you can hit up the I'm Paige up at dot IO and and there'll",
    "start": "2012980",
    "end": "2020190"
  },
  {
    "text": "be links to all the implementations the mailing list you can ping me on Twitter but don't",
    "start": "2020190",
    "end": "2027360"
  },
  {
    "text": "actually email me on that email address because I'm actually on maternity leave at the moment with six month old twins",
    "start": "2027360",
    "end": "2032850"
  },
  {
    "text": "and I do not check my working mail very often and but you might be my Clara",
    "start": "2032850",
    "end": "2037980"
  },
  {
    "text": "grabbed me on Twitter my name is Beth scary and I would like",
    "start": "2037980",
    "end": "2043049"
  },
  {
    "text": "to answer any questions you might have now",
    "start": "2043049",
    "end": "2046730"
  },
  {
    "text": "yeah that's a really good question and my answer is it depends",
    "start": "2062990",
    "end": "2068838"
  },
  {
    "text": "it depends really which I that was a really great sentence that I read and",
    "start": "2069020",
    "end": "2075510"
  },
  {
    "text": "one of Sandi Metz presentations which said follow these rules but break them",
    "start": "2075510",
    "end": "2081060"
  },
  {
    "text": "if doing so will save money and time so",
    "start": "2081060",
    "end": "2087050"
  },
  {
    "text": "we were writing small enough services that it was just much easier to use the",
    "start": "2087050",
    "end": "2093300"
  },
  {
    "text": "real database and I've had I've had intense",
    "start": "2093300",
    "end": "2098339"
  },
  {
    "text": "conversations about whether we should be mocking that that that",
    "start": "2098339",
    "end": "2103880"
  },
  {
    "text": "just the Aged the bit behind the HTTP",
    "start": "2103880",
    "end": "2109380"
  },
  {
    "text": "interface but then you're going to need to do another test set of tests to make",
    "start": "2109380",
    "end": "2114630"
  },
  {
    "text": "sure that that mocking matches up with the and you see where I'm going so so our services were small enough that",
    "start": "2114630",
    "end": "2122460"
  },
  {
    "text": "we felt that it was just easier to insert real data into the database rather than mocking stuff however when",
    "start": "2122460",
    "end": "2128970"
  },
  {
    "text": "one of our services did make have to make calls out to another service at that stage we thought yeah we really",
    "start": "2128970",
    "end": "2135930"
  },
  {
    "text": "should be mocking that and then we would have another set of contract tests",
    "start": "2135930",
    "end": "2141119"
  },
  {
    "text": "between this service and that downstream service so they're all kind of linked in",
    "start": "2141119",
    "end": "2147119"
  },
  {
    "text": "together by a chain I bet I've got two questions the first is",
    "start": "2147119",
    "end": "2155700"
  },
  {
    "text": "what's your recommendation on maintaining the pact files because you mentioned about the pact broker so what",
    "start": "2155700",
    "end": "2163320"
  },
  {
    "text": "would be a like architectural model of having a pact broker in terms of a separate service or we can just run them",
    "start": "2163320",
    "end": "2172370"
  },
  {
    "text": "locally on each pipeline um I think it's",
    "start": "2172370",
    "end": "2177660"
  },
  {
    "text": "easier to have one oh I think it's more valuable to have one pact broke up",
    "start": "2177660",
    "end": "2184310"
  },
  {
    "text": "deployment context sorry this is another discussion we had at our",
    "start": "2184310",
    "end": "2190170"
  },
  {
    "text": "ei which is should we have one pact broker for the whole of RA or should we have one per line of business and it you",
    "start": "2190170",
    "end": "2198870"
  },
  {
    "text": "can't you have to find that sweet spot based on your organizational setup and",
    "start": "2198870",
    "end": "2204750"
  },
  {
    "text": "we ended up having a PAC broker per kind of largest group so we actually didn't",
    "start": "2204750",
    "end": "2211410"
  },
  {
    "text": "want we actually didn't want too much chatter between the services and",
    "start": "2211410",
    "end": "2216720"
  },
  {
    "text": "different organizations in different parts of the organization what is it to be chatty within the little ones that",
    "start": "2216720",
    "end": "2223740"
  },
  {
    "text": "are close to each other and then the slower conversations between the the",
    "start": "2223740",
    "end": "2229890"
  },
  {
    "text": "wider area ones so we kind of had a pact breaker per",
    "start": "2229890",
    "end": "2235280"
  },
  {
    "text": "context and that that's better than having like a pact breaker pair of",
    "start": "2235280",
    "end": "2242310"
  },
  {
    "text": "services because you want to be able to get that the network diagram are there to work out what's talking to other",
    "start": "2242310",
    "end": "2248670"
  },
  {
    "text": "things also the overhead and one thing I should mention about the pact broker is that",
    "start": "2248670",
    "end": "2254730"
  },
  {
    "text": "you can get a docker container for the PAC broker and so their setups pretty",
    "start": "2254730",
    "end": "2260700"
  },
  {
    "text": "easy now with AWS and my second questions how do we are scheduled",
    "start": "2260700",
    "end": "2266930"
  },
  {
    "text": "tests on the consumer and provider side what two years pact",
    "start": "2266930",
    "end": "2274190"
  },
  {
    "text": "yep so there's web hooks on the pact broker as well so that if you can",
    "start": "2274220",
    "end": "2280050"
  },
  {
    "text": "trigger a build on your provider from webhook then you can set that up when",
    "start": "2280050",
    "end": "2285700"
  },
  {
    "text": "the consumer publishes a pact to the pact broker it can kick the build off in the provider",
    "start": "2285700",
    "end": "2291570"
  },
  {
    "text": "otherwise depending on your radio development we just found scheduled builds on the provider worked as well we",
    "start": "2291570",
    "end": "2299260"
  },
  {
    "text": "often found that we were writing more often than not we were actually writing both sides",
    "start": "2299260",
    "end": "2305640"
  },
  {
    "text": "so the builds were both going regularly enough but if you're not doing that then",
    "start": "2305640",
    "end": "2311650"
  },
  {
    "text": "yeah you need to work out a strategy with your provider team thank you",
    "start": "2311650",
    "end": "2319140"
  },
  {
    "text": "Paul if you do have any questions ask them now because have to run off to feed those pesky babies",
    "start": "2321270",
    "end": "2328440"
  },
  {
    "text": "yeah sorry there's lots of help available online if you want to find out if pacts a good solution for you thank",
    "start": "2330120",
    "end": "2337270"
  },
  {
    "text": "you very much guys [Applause]",
    "start": "2337270",
    "end": "2345000"
  }
]