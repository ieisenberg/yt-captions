[
  {
    "text": "realized it was huge scope and we have affected a quite considerable scope retreat",
    "start": "3520",
    "end": "8880"
  },
  {
    "text": "and the proposal now is simply to introduce matrix class into the standard library i just wanted to make that clear",
    "start": "8880",
    "end": "15759"
  },
  {
    "text": "but i'd like to take a moment to talk about this first um the biggest problem that we have in the c plus plus community",
    "start": "15759",
    "end": "21680"
  },
  {
    "text": "is that there are more problems to solve than engineers to solve them",
    "start": "21680",
    "end": "26800"
  },
  {
    "text": "and especially at this time we need problem solvers to solve the hard problems",
    "start": "26800",
    "end": "32160"
  },
  {
    "text": "historically software engineering has been a very inclusive environment i usually",
    "start": "32160",
    "end": "37920"
  },
  {
    "text": "give the example of margaret hamilton she was the director of the software engineering division of the",
    "start": "37920",
    "end": "43120"
  },
  {
    "text": "massachusetts institute of technology instrumentation laboratory they developed the onboard flight",
    "start": "43120",
    "end": "49280"
  },
  {
    "text": "software for nasa's apollo program and she is one of the people credited with coining the terms software engineering",
    "start": "49280",
    "end": "55440"
  },
  {
    "text": "but now however we appear to be heavily biased towards white men",
    "start": "55440",
    "end": "61198"
  },
  {
    "text": "we all know this and we have very low gender and ethnicity diversity and we as a species need to fix this we need to",
    "start": "61600",
    "end": "67119"
  },
  {
    "text": "recruit more people so if you're interested in helping please visit the website we have a",
    "start": "67119",
    "end": "72400"
  },
  {
    "text": "discord server as well please join that it would be great to see you thank you so here's what to expect",
    "start": "72400",
    "end": "79280"
  },
  {
    "text": "we'll start with a speedy refresher on what linear algebra actually is and then talk about the nature of a linear algebra library and then",
    "start": "79280",
    "end": "86080"
  },
  {
    "text": "we'll look at the library being proposed and how to customize it for your own use",
    "start": "86080",
    "end": "91520"
  },
  {
    "text": "now if we have time we'll look at applications to color space management",
    "start": "91520",
    "end": "97680"
  },
  {
    "text": "um and if we have lots of time we have a simple application for geometry um",
    "start": "97680",
    "end": "104000"
  },
  {
    "text": "i've run through this talk several times and each time it takes a wildly different amount of time so you can talk to me about those last two",
    "start": "104000",
    "end": "110399"
  },
  {
    "text": "topics if we don't reach them afterwards what is linear algebra it's the branch",
    "start": "110399",
    "end": "115759"
  },
  {
    "text": "of mathematics concerning linear equations and linear functions and their representation through matrices and",
    "start": "115759",
    "end": "123119"
  },
  {
    "text": "vector spaces so a linear equation looks like this it's the sum of some products of",
    "start": "123119",
    "end": "129759"
  },
  {
    "text": "coefficients and unknowns and it has application to geometry for modeling the cartesian representation of space",
    "start": "129759",
    "end": "138000"
  },
  {
    "text": "color is typically represented as a triple of values you're probably all aware of rgb",
    "start": "138000",
    "end": "143680"
  },
  {
    "text": "some of you might be aware of hls and there are useful things you can do when manipulating color spaces an awful",
    "start": "143680",
    "end": "149840"
  },
  {
    "text": "lot of errors are made here solving simultaneous equations is probably the first piece of linear",
    "start": "149840",
    "end": "155680"
  },
  {
    "text": "algebra that any of you did via row reduction in fact linear algebra underpins most of",
    "start": "155680",
    "end": "161840"
  },
  {
    "text": "modern mathematics it has applications in machine learning machine learning is just number",
    "start": "161840",
    "end": "167599"
  },
  {
    "text": "crunching really linear algebra features heavily in it most textbooks will start",
    "start": "167599",
    "end": "173280"
  },
  {
    "text": "with the vector or even the scalar but we're going to start at the matrix and work backwards for reasons which will",
    "start": "173280",
    "end": "180000"
  },
  {
    "text": "become apparent so a matrix is an m by n rectangular array of scalar elements",
    "start": "180000",
    "end": "188720"
  },
  {
    "text": "and that's a word that word array is troublesome obviously and it's not the last time that we'll have issues",
    "start": "188720",
    "end": "194800"
  },
  {
    "text": "with glossary and repetition of words with slightly different definitions",
    "start": "194800",
    "end": "200000"
  },
  {
    "text": "and just as with the real number field there are operations that you can carry out on matrices that match the scalar",
    "start": "200000",
    "end": "206159"
  },
  {
    "text": "operations so you can perform matrix scalar multiplication this",
    "start": "206159",
    "end": "211920"
  },
  {
    "text": "involves multiplying each element by the same scalar value like that",
    "start": "211920",
    "end": "218720"
  },
  {
    "text": "you can perform matrix addition this is somewhat constrained because you can only add matrices which have the same",
    "start": "222159",
    "end": "229200"
  },
  {
    "text": "size and that use of the work well in fact the same dimension and that use of the word dimension is also",
    "start": "229200",
    "end": "234959"
  },
  {
    "text": "problematic because the dimension of a matrix is the number of rows and columns that it contains",
    "start": "234959",
    "end": "240879"
  },
  {
    "text": "it's nothing to do with geometry a three by three matrix is not necessarily representative of",
    "start": "240879",
    "end": "246799"
  },
  {
    "text": "three-dimensional space there's no such thing as a three-dimensional matrix",
    "start": "246799",
    "end": "251920"
  },
  {
    "text": "all matrices have two dimensions m by n this continues to confuse people no",
    "start": "251920",
    "end": "258400"
  },
  {
    "text": "matter how many times i give this talk addition takes place member wise",
    "start": "258400",
    "end": "265120"
  },
  {
    "text": "which is why the operation is so constrained the matrices have to have the same dimension",
    "start": "265120",
    "end": "270560"
  },
  {
    "text": "as well as scalar multiplication there's the big one matrix multiplication and this is constrained",
    "start": "270560",
    "end": "276320"
  },
  {
    "text": "by requiring the number of columns in the left off round match the number of rows in the right",
    "start": "276320",
    "end": "282240"
  },
  {
    "text": "operand i'm hoping none of this is unusual or peculiar to you i just want to make sure we're all on the same page",
    "start": "282240",
    "end": "288639"
  },
  {
    "text": "now this constraint is due to the mechanism of multiplication it's performed by calculating the dot",
    "start": "288639",
    "end": "294720"
  },
  {
    "text": "product of every row and column combination then retrieving the row from the left",
    "start": "294720",
    "end": "301120"
  },
  {
    "text": "hand operand and the column from the right hand over and the dot product is itself a sort of",
    "start": "301120",
    "end": "307360"
  },
  {
    "text": "linear equation it's the sum of the member-wise products of the elements",
    "start": "307360",
    "end": "312880"
  },
  {
    "text": "and you can see in the example that the top left element in the result matrix is formed from the dot product of the",
    "start": "312880",
    "end": "319120"
  },
  {
    "text": "first row and column no one is looking blank this is a good",
    "start": "319120",
    "end": "324400"
  },
  {
    "text": "sign and since we're taking rows from one operand and columns from the other",
    "start": "324400",
    "end": "330960"
  },
  {
    "text": "matrix multiplication is not commutative or not necessarily commutative",
    "start": "330960",
    "end": "336320"
  },
  {
    "text": "there's a special kind of matrix called a square matrix this has the same number of rows and",
    "start": "336320",
    "end": "342000"
  },
  {
    "text": "columns there's a special kind of square matrix",
    "start": "342000",
    "end": "347919"
  },
  {
    "text": "called the identity matrix so the leading diagonal that is all the elements whose row and",
    "start": "347919",
    "end": "354800"
  },
  {
    "text": "column index are the same is populated with one and all other other",
    "start": "354800",
    "end": "360319"
  },
  {
    "text": "all other elements are zero and multiplying any matrix by the",
    "start": "360319",
    "end": "365600"
  },
  {
    "text": "identity matrix or vice versa leaves the matrix unchanged so there we have an example of commutativity",
    "start": "365600",
    "end": "373680"
  },
  {
    "text": "now there's an interesting property of a square matrix called the determinant which is a single value it's like a",
    "start": "374000",
    "end": "379360"
  },
  {
    "text": "modulus i suppose it captures information about the matrix like a median or a mode",
    "start": "379360",
    "end": "385520"
  },
  {
    "text": "or a mean captures information about a set of numbers its calculation is the subject of",
    "start": "385520",
    "end": "390880"
  },
  {
    "text": "considerable research effort considerable research effort since it's",
    "start": "390880",
    "end": "395919"
  },
  {
    "text": "used in several ways a matrix can also have an inverse",
    "start": "395919",
    "end": "401120"
  },
  {
    "text": "and the product of a matrix and its inverse is the identity matrix",
    "start": "401120",
    "end": "406639"
  },
  {
    "text": "so we see that there are some analogs to the built-in types they there are well-defined meanings to",
    "start": "407199",
    "end": "413360"
  },
  {
    "text": "the arithmetic operators although post-increment and ordering don't really have any kind of meaning",
    "start": "413360",
    "end": "419840"
  },
  {
    "text": "one might choose to order by determinant but that's an unusual activity i've yet to find a use for that",
    "start": "419840",
    "end": "426800"
  },
  {
    "text": "a vector is a special kind of matrix",
    "start": "426800",
    "end": "432160"
  },
  {
    "text": "bear with me it has only one row or only one column",
    "start": "432319",
    "end": "438960"
  },
  {
    "text": "a single row matrix may be called a row vector and a single column matrix maybe called",
    "start": "438960",
    "end": "444160"
  },
  {
    "text": "a column vector and the multiplication has two different forms each with their own name",
    "start": "444160",
    "end": "451120"
  },
  {
    "text": "so the inner product is the name that's given to the multiplication of a matrix with a single",
    "start": "451120",
    "end": "457199"
  },
  {
    "text": "row by a matrix with a single column this is achieved by performing a simple",
    "start": "457199",
    "end": "463680"
  },
  {
    "text": "dot product like that and that will yield a scalar value",
    "start": "463680",
    "end": "469599"
  },
  {
    "text": "the outer product is the name given to the multiplication of a matrix with a single column",
    "start": "470879",
    "end": "476639"
  },
  {
    "text": "by a matrix with a single row and this would of course yield a matrix",
    "start": "476639",
    "end": "483759"
  },
  {
    "text": "inner and outer product so we have something of an abstraction problem here in that matrix product",
    "start": "484879",
    "end": "491360"
  },
  {
    "text": "matrix products take several forms and we also have a naming problem",
    "start": "491360",
    "end": "497280"
  },
  {
    "text": "vector vector is already in use being the name of the most commonly used",
    "start": "497280",
    "end": "503520"
  },
  {
    "text": "container in c plus now you could implement a linear algebra vector in terms of a stud vector",
    "start": "503520",
    "end": "510639"
  },
  {
    "text": "and a matrix in terms of a stud vector of stood vectors but that would be at the very least",
    "start": "510639",
    "end": "516880"
  },
  {
    "text": "sub-optimal for all uses it would not even pass a code review if you were to show it to me",
    "start": "516880",
    "end": "524800"
  },
  {
    "text": "right what's the linear algebra library now",
    "start": "524800",
    "end": "530320"
  },
  {
    "text": "i've written quite a lot of linear algebra libraries in earlier talks i said i've written four but i found a fifth so i wrote a",
    "start": "530720",
    "end": "537120"
  },
  {
    "text": "library during my linear algebra course at university i studied a mathematics degree",
    "start": "537120",
    "end": "542320"
  },
  {
    "text": "i had an atari st anybody else remember atari st's one",
    "start": "542320",
    "end": "548399"
  },
  {
    "text": "two three oh hello do come in yeah the atari sd great piece of kit now",
    "start": "548399",
    "end": "554720"
  },
  {
    "text": "before this point i was just doing geometry um i was using fixed point arithmetic and i probably did write a",
    "start": "554720",
    "end": "560800"
  },
  {
    "text": "linear algebra library without really knowing it it was before i went to university and i was just doing stuff to transform pixels on screens",
    "start": "560800",
    "end": "568959"
  },
  {
    "text": "it supported geometry and translation by addition scaling by scalar multiplication transformation by matrix",
    "start": "568959",
    "end": "575680"
  },
  {
    "text": "multiplication um angle computation by dot product",
    "start": "575680",
    "end": "581040"
  },
  {
    "text": "and normal computations you know computation of normals to planes by cross product",
    "start": "581040",
    "end": "587120"
  },
  {
    "text": "that's not actually linear algebra that's completely separate that just happens to use matrices and a particular",
    "start": "587120",
    "end": "592880"
  },
  {
    "text": "product and this is the problem that we'll come up against time and again so when i got my first pc",
    "start": "592880",
    "end": "600560"
  },
  {
    "text": "um i had an 80286 and i built a linear algebra library with fixed point",
    "start": "600560",
    "end": "606079"
  },
  {
    "text": "mathematics and i was using c and a bit of c plus i was using visual c plus plus with microsoft foundation classes",
    "start": "606079",
    "end": "612640"
  },
  {
    "text": "but it was the same set of operations and the same set of problems to solve my next machine came with a floating",
    "start": "612640",
    "end": "618880"
  },
  {
    "text": "point co-processor i was delighted suddenly i it was a fantastic thing to discover",
    "start": "618880",
    "end": "624480"
  },
  {
    "text": "um and people take for granted floating fluid calculations on contemporary cpus but there was a time when it was a very",
    "start": "624480",
    "end": "630320"
  },
  {
    "text": "expensive piece of extra silicon now i moved away from relying on c entirely and embraced c plus",
    "start": "630320",
    "end": "637680"
  },
  {
    "text": "fully and then i joined the games industry that was great and when the mmx",
    "start": "637680",
    "end": "644240"
  },
  {
    "text": "instruction set came along i didn't have to i didn't like having to share floating point with vector instructions",
    "start": "644240",
    "end": "651360"
  },
  {
    "text": "so the mmx registers were shared between the floating point operations which meant if i wanted a floating point a",
    "start": "651360",
    "end": "657040"
  },
  {
    "text": "matrix of floating point values i couldn't use mmx instruction sets",
    "start": "657040",
    "end": "662240"
  },
  {
    "text": "to do my operations and i had a hideous time mucking about with all of this but i got another machine and another",
    "start": "662240",
    "end": "668640"
  },
  {
    "text": "processor and i got cmd by sse2 as the pentium four and this was lovely",
    "start": "668640",
    "end": "674560"
  },
  {
    "text": "big jump in performance still the same set of operations still a linear algebra library doing the same",
    "start": "674560",
    "end": "679680"
  },
  {
    "text": "sorts of things then i've got an avx processor registers got wider",
    "start": "679680",
    "end": "685040"
  },
  {
    "text": "other parts of the team are buffing the linear algebra now at work at my studio creative assembly",
    "start": "685040",
    "end": "690240"
  },
  {
    "text": "there are people working on the linear algebra keeping it optimal",
    "start": "690240",
    "end": "695600"
  },
  {
    "text": "now i said five there is of course a sixth linear algebra library out there which is mine and bob stegall's this is",
    "start": "695680",
    "end": "702880"
  },
  {
    "text": "p1385 um it's a proposal to add linear algebra",
    "start": "702880",
    "end": "708000"
  },
  {
    "text": "support to the c standard library at least that was its original name it's now a matrix class for the standard library",
    "start": "708000",
    "end": "714880"
  },
  {
    "text": "now the lion's share of this work is actually by my co-author bob stegall um we agreed on the superiority of his",
    "start": "714880",
    "end": "720399"
  },
  {
    "text": "approach we both looked at our respectively inaudible libraries this was better so",
    "start": "720399",
    "end": "725519"
  },
  {
    "text": "that's the one that we're implementing now i have several optimizations available to me",
    "start": "725519",
    "end": "733279"
  },
  {
    "text": "first of all i know how big all my matrices are going to be i'm just doing geometry",
    "start": "733839",
    "end": "740240"
  },
  {
    "text": "so i'm not going to be with 10 by 10 matrices the largest matrix i have is four by four",
    "start": "740240",
    "end": "746480"
  },
  {
    "text": "i also know the scalab type is always going to be a 32-bit floating point type",
    "start": "746480",
    "end": "752160"
  },
  {
    "text": "and i know about my target processor so i can use intrinsics and cmd instructions and i can make use of cache",
    "start": "752399",
    "end": "759120"
  },
  {
    "text": "behavior and i also know that everything's going to be dense there are going to be no",
    "start": "759120",
    "end": "765760"
  },
  {
    "text": "empty elements this is a densely packed matrix my library is optimized for this",
    "start": "765760",
    "end": "771440"
  },
  {
    "text": "particular usage of fixed size dense matrices and there are many ways to optimize for",
    "start": "771440",
    "end": "777279"
  },
  {
    "text": "other situations such as sparse matrices of variable sizes it's like string classes",
    "start": "777279",
    "end": "783680"
  },
  {
    "text": "as right who here has written a string class come on be honest before now you've all written the string",
    "start": "783680",
    "end": "790639"
  },
  {
    "text": "class it's what you do you write a string class because you don't like stood string it's the same with linear algebra",
    "start": "790639",
    "end": "796480"
  },
  {
    "text": "everyone writes their only neutral library it's perfect in every way it's your special little snowflake nothing",
    "start": "796480",
    "end": "801600"
  },
  {
    "text": "will touch it but fundamentally though the linear",
    "start": "801600",
    "end": "806639"
  },
  {
    "text": "algebra library consists of a matrix class it probably consists of a vector class",
    "start": "806639",
    "end": "813440"
  },
  {
    "text": "and even that is questionable if you treat a vector as a special kind of matrix",
    "start": "813440",
    "end": "819279"
  },
  {
    "text": "and of course infix operator overloads to operate between them there are other libraries which don't",
    "start": "820160",
    "end": "826480"
  },
  {
    "text": "use infix operators which all which offer a simple function api",
    "start": "826480",
    "end": "832480"
  },
  {
    "text": "something like mul vector one vector two or mole matrix one matrix two",
    "start": "832480",
    "end": "838560"
  },
  {
    "text": "there are uncontroversial operators like addition subtraction and scalar multiplication but in the course of the development of this library",
    "start": "838959",
    "end": "845519"
  },
  {
    "text": "the asterisk operator has proven controversial i say asterisk because",
    "start": "845519",
    "end": "851839"
  },
  {
    "text": "that's what it is it's an asterisk you know the array operator is actually the square bracket operator",
    "start": "853040",
    "end": "859680"
  },
  {
    "text": "or more precisely the bracket operator the round ones are called parentheses and that's the parenthesis operator i'm",
    "start": "859680",
    "end": "866480"
  },
  {
    "text": "really quite particular about naming which is what has caused so many of the problems",
    "start": "866480",
    "end": "871760"
  },
  {
    "text": "that beset this proposal",
    "start": "871760",
    "end": "875360"
  },
  {
    "text": "so what you call this operator for example is it the bit shift operator",
    "start": "877120",
    "end": "883440"
  },
  {
    "text": "is it the streaming operator is it the chevron operator it's called a",
    "start": "883440",
    "end": "889120"
  },
  {
    "text": "chevron and i think it's better to name the operators after the character rather than the most common usage",
    "start": "889120",
    "end": "895920"
  },
  {
    "text": "operator is meant to be overloaded given different users according to the context",
    "start": "895920",
    "end": "902079"
  },
  {
    "text": "so this is the square operator square bracket operator and in this font it looks rather unusual but that is",
    "start": "902320",
    "end": "908160"
  },
  {
    "text": "actually the open and close square brackets at the moment i have to deploy",
    "start": "908160",
    "end": "914160"
  },
  {
    "text": "this syntax in parentheses using uh to access elements of a matrix",
    "start": "914160",
    "end": "921199"
  },
  {
    "text": "but what i'm used to seeing in textbooks is this particular spelling have brackets and comma",
    "start": "921199",
    "end": "928560"
  },
  {
    "text": "and this is complicated by the comma operator in this context now there was a proposal which was passed for c plus",
    "start": "928560",
    "end": "934000"
  },
  {
    "text": "plus 20 p1161 which deprecates uses the comma operator in subscripting expressions",
    "start": "934000",
    "end": "941360"
  },
  {
    "text": "it's in nxd of the standard if you really want to find it but believe me it's there it's lovely",
    "start": "941360",
    "end": "946639"
  },
  {
    "text": "and building on this is p2128 which seeks to enable multi-dimensional subscripting and that was passed last",
    "start": "946639",
    "end": "953519"
  },
  {
    "text": "tuesday at the last uh plenary of the wg21 super",
    "start": "953519",
    "end": "958560"
  },
  {
    "text": "standards committee i know i'm i am i am delighted i really am",
    "start": "958560",
    "end": "966480"
  },
  {
    "text": "um so we're freed from syntaxes like this with pairs of",
    "start": "966480",
    "end": "973199"
  },
  {
    "text": "square brackets to access arrays of arrays anyway operator asterisk",
    "start": "973199",
    "end": "980560"
  },
  {
    "text": "this isn't what you see in textbooks what you see is this it's an x",
    "start": "980560",
    "end": "986880"
  },
  {
    "text": "or multiply sign it probably does have a proper name but i haven't been able to find a good one",
    "start": "986880",
    "end": "991920"
  },
  {
    "text": "not one that everyone agrees in it's not described in the unicode the unicode descriptors",
    "start": "991920",
    "end": "999600"
  },
  {
    "text": "we can't have an operator x that would be silly it's the most commonly used variable",
    "start": "999600",
    "end": "1005680"
  },
  {
    "text": "name for one thing so we can't just have it as a special operator what will become of us all if suddenly we decided right operator x",
    "start": "1005680",
    "end": "1011839"
  },
  {
    "text": "means this all our 50 years of code has been swept aside now because x means",
    "start": "1011839",
    "end": "1016959"
  },
  {
    "text": "something different if we were allowed unicode we could have operator and this is called modifier letter small x",
    "start": "1016959",
    "end": "1024798"
  },
  {
    "text": "which it does actually sit in the basic multilingual plane so it's quite accessible but i suspect that's an abuse of a",
    "start": "1024799",
    "end": "1030959"
  },
  {
    "text": "modifying character but we've been using the asterisk operator for so long it would be unusual",
    "start": "1030959",
    "end": "1038079"
  },
  {
    "text": "to revert to something more correct so what does it mean to multiply two",
    "start": "1038079",
    "end": "1043600"
  },
  {
    "text": "vectors to form a product so while taking this proposal around the",
    "start": "1043600",
    "end": "1049360"
  },
  {
    "text": "committee i found out that there is a field of pursuit which makes use of something called the hadamard product",
    "start": "1049360",
    "end": "1054799"
  },
  {
    "text": "anybody here use the hadmod product no",
    "start": "1054799",
    "end": "1060080"
  },
  {
    "text": "that doesn't remotely surprise me and i am delighted to see that oh you do okay great thank you i'm sorry",
    "start": "1060080",
    "end": "1066559"
  },
  {
    "text": "you're in a minority it helps my case that you are in a minority that's that's good um the hadamard product is simply a",
    "start": "1066559",
    "end": "1073600"
  },
  {
    "text": "member-wise multiplication and if you know anything about the new algebra that destroys all the transforms embedded within your",
    "start": "1073600",
    "end": "1080480"
  },
  {
    "text": "matrix and it can be applied some it's it can be applied to matrices as well as vectors um and it makes me slightly queasy",
    "start": "1080480",
    "end": "1087600"
  },
  {
    "text": "um because the main application of this has nothing to do with linear algebra is that correct yeah",
    "start": "1087600",
    "end": "1095840"
  },
  {
    "text": "good excellent you make my case stronger with every statement that you make thank you",
    "start": "1096240",
    "end": "1102640"
  },
  {
    "text": "it's simply multiplying an array of numbers by another array of numbers in situ",
    "start": "1103520",
    "end": "1110400"
  },
  {
    "text": "and this array of numbers is called a vector or a matrix because it looks",
    "start": "1110400",
    "end": "1115440"
  },
  {
    "text": "like a vector or a matrix and is accessed with multi-dimensional subscripting",
    "start": "1115440",
    "end": "1121600"
  },
  {
    "text": "that's that's it's not quite right it's wrong",
    "start": "1121600",
    "end": "1126159"
  },
  {
    "text": "it's so disappointing it really is um there are quite a few libraries out there already you know this isn't the",
    "start": "1126880",
    "end": "1132960"
  },
  {
    "text": "first one um just a simple wikipedia query yielded plenty more than i knew about so let's",
    "start": "1132960",
    "end": "1138080"
  },
  {
    "text": "take a look at some of them the first of which is blast who's heard of blas yes good yes this is the granddaddy of",
    "start": "1138080",
    "end": "1144080"
  },
  {
    "text": "them all it was first released in 1979 there's a fortran library and it",
    "start": "1144080",
    "end": "1150559"
  },
  {
    "text": "prescribes a set of low level routines for common linear algebra operations there are c bindings that's helpful for",
    "start": "1150559",
    "end": "1156480"
  },
  {
    "text": "us and there are many implementations optimized for speed on a particular",
    "start": "1156480",
    "end": "1162080"
  },
  {
    "text": "machine you can buy the blast for your processor buy download i think it's downloadable",
    "start": "1162080",
    "end": "1169120"
  },
  {
    "text": "do you buy glass or is it just free for anyone special anyway i'll come back to that when i found out right there is a c plus",
    "start": "1169120",
    "end": "1176400"
  },
  {
    "text": "api for glass of course called blast plus which implements much of the functionality for all your linear",
    "start": "1176400",
    "end": "1182000"
  },
  {
    "text": "algebra needs there's your interface um blast supports single and double float",
    "start": "1182000",
    "end": "1188240"
  },
  {
    "text": "precision and single and double precision complex numbers",
    "start": "1188240",
    "end": "1193760"
  },
  {
    "text": "um there's also of course boost.ublas but the last significant change to that",
    "start": "1193760",
    "end": "1200080"
  },
  {
    "text": "as far as i can see was in 2009 which predates c plus plus 11 by the",
    "start": "1200080",
    "end": "1205679"
  },
  {
    "text": "application of simple arithmetic um so there's no const express there's no no except there's no concepts",
    "start": "1205679",
    "end": "1212159"
  },
  {
    "text": "there's nothing like that there are three levels to the blas api",
    "start": "1212159",
    "end": "1217440"
  },
  {
    "text": "level one consists of all the vector operations these names are very short",
    "start": "1217440",
    "end": "1222880"
  },
  {
    "text": "it dates back to a time when only six characters were significant",
    "start": "1222880",
    "end": "1227360"
  },
  {
    "text": "it makes it very hard to provide meaningful names when you're only allowed six characters",
    "start": "1230159",
    "end": "1235840"
  },
  {
    "text": "generate modified givens plane rotation ratmg",
    "start": "1236880",
    "end": "1242880"
  },
  {
    "text": "level two contains the matrix spectral operations and level three contains the matrix matrix operations and this gives",
    "start": "1245200",
    "end": "1251360"
  },
  {
    "text": "us a good starting point for the kind of api we might want for a matrix class you can see a fair amount of repetition",
    "start": "1251360",
    "end": "1257760"
  },
  {
    "text": "varying on matrix types we've got hermitian symmetric and triangular matrices",
    "start": "1257760",
    "end": "1263840"
  },
  {
    "text": "and for various operands matrix vector matrix matrix and we have a set of operations that's",
    "start": "1264320",
    "end": "1270080"
  },
  {
    "text": "different for vectors from matrices it was standardized by the blast",
    "start": "1270080",
    "end": "1275280"
  },
  {
    "text": "technical forum known as blast because why not if you're going to call the blast technical forum of course",
    "start": "1275280",
    "end": "1281280"
  },
  {
    "text": "you're going to call it blast it's fun it's a good word and there's a companion paper to mine which seeks to",
    "start": "1281280",
    "end": "1287120"
  },
  {
    "text": "introduce a blast interface to the standard library so you simply have your have",
    "start": "1287120",
    "end": "1292960"
  },
  {
    "text": "glass in the c plus plus standard i welcome this paper and it would provide a good default implementation",
    "start": "1292960",
    "end": "1299360"
  },
  {
    "text": "for this syntax proposal these two proposals the blas implementation and mine are",
    "start": "1299360",
    "end": "1305280"
  },
  {
    "text": "complementary and they actually get known as the syntax proposal this is the syntax proposal",
    "start": "1305280",
    "end": "1310720"
  },
  {
    "text": "and the blast proposal next we have eigen",
    "start": "1310720",
    "end": "1315760"
  },
  {
    "text": "so this is a c plus plus library with matrix and vector templates",
    "start": "1315760",
    "end": "1320880"
  },
  {
    "text": "dimensions can be declared statically or calculated at runtime",
    "start": "1323039",
    "end": "1328399"
  },
  {
    "text": "there's a span object for viewing unowned data and the api consists of member functions",
    "start": "1329200",
    "end": "1336240"
  },
  {
    "text": "and this is another thing that makes me a bit queasy i don't like member functions very much i've used string there are a lot of",
    "start": "1336240",
    "end": "1342720"
  },
  {
    "text": "member functions instant string um it's the poster child for this",
    "start": "1342720",
    "end": "1347840"
  },
  {
    "text": "i think there's over 50 member functions it's a huge huge number i should remark that although i've",
    "start": "1347840",
    "end": "1353679"
  },
  {
    "text": "mentioned inverses and determinants these won't feature in the proposal",
    "start": "1353679",
    "end": "1359600"
  },
  {
    "text": "we're purely defining the matrix type and the infix operators people can layer additional proposals on",
    "start": "1359600",
    "end": "1365840"
  },
  {
    "text": "top of this the scope for linear algebra as i said at the outset is huge and we had to",
    "start": "1365840",
    "end": "1371360"
  },
  {
    "text": "affect a great scope retreat so it's just the matrix class and the infix operators",
    "start": "1371360",
    "end": "1377200"
  },
  {
    "text": "here's some sample code this is eigen sample code",
    "start": "1377200",
    "end": "1382400"
  },
  {
    "text": "i particularly like the initialization of vector at the bottom using the chevron operator",
    "start": "1382400",
    "end": "1388720"
  },
  {
    "text": "and commas right dealer anyone use dlib",
    "start": "1388720",
    "end": "1394159"
  },
  {
    "text": "it's a good library it's a vast vast library of useful things um the matrix classes use expression",
    "start": "1394159",
    "end": "1400480"
  },
  {
    "text": "templates for optimizations like loop fusion anyone written expression templates",
    "start": "1400480",
    "end": "1405919"
  },
  {
    "text": "before cool did you do you find that they're completely illegible",
    "start": "1405919",
    "end": "1412240"
  },
  {
    "text": "no i need to talk to you about expression templates then i've never come up with legible expression templates particularly in the debugger",
    "start": "1412240",
    "end": "1419840"
  },
  {
    "text": "i'll talk to you later thank you um i've described expression templates in",
    "start": "1419840",
    "end": "1425200"
  },
  {
    "text": "other talks if you want to take a good look wikipedia actually has an entire page on expression templates",
    "start": "1425200",
    "end": "1431760"
  },
  {
    "text": "which makes illuminating reading his class here or did he leave",
    "start": "1431760",
    "end": "1438640"
  },
  {
    "text": "class eagleburger wrote this library blaze and he's a strong supporter of the linear algebra proposal um it's a modern",
    "start": "1438640",
    "end": "1446000"
  },
  {
    "text": "library or his is a modern library which is tuned and customized for many different hardware environments rather like blas",
    "start": "1446000",
    "end": "1453360"
  },
  {
    "text": "it's got static and dynamic sized vectors and our proposal lives at this address",
    "start": "1453360",
    "end": "1460720"
  },
  {
    "text": "g21 dot link slash p1385 do note that down or take a photo take a",
    "start": "1460720",
    "end": "1466480"
  },
  {
    "text": "photograph as i said it's known as the syntax proposal to separate it from the blast proposal and the purpose of the proposal",
    "start": "1466480",
    "end": "1472640"
  },
  {
    "text": "is actually just to reserve the identifiers because one of the problems we have with",
    "start": "1472640",
    "end": "1477760"
  },
  {
    "text": "eigen and blaze and all of the others is they have different names for what's essentially the same thing",
    "start": "1477760",
    "end": "1483360"
  },
  {
    "text": "and this makes interoperation very difficult it's very difficult to write higher level stuff",
    "start": "1483360",
    "end": "1489120"
  },
  {
    "text": "that will work for everyone if you want to write a high level linear algebra set a set of linear",
    "start": "1489120",
    "end": "1494480"
  },
  {
    "text": "algebra functions you have to decide am i going to support eigen or blaze or blast or all of them",
    "start": "1494480",
    "end": "1499919"
  },
  {
    "text": "because i want to write three versions of the same thing it's rather like developing a library for the standard at the moment",
    "start": "1499919",
    "end": "1505760"
  },
  {
    "text": "i have three compilers to support actually i have lots but i'm just gonna support clang gcc and msvc at the start",
    "start": "1505760",
    "end": "1515440"
  },
  {
    "text": "there is another library in boost called qvm which is short for quaternions vectors",
    "start": "1515440",
    "end": "1521840"
  },
  {
    "text": "and matrices i don't like quaternions everyone should look up rotors and stop using",
    "start": "1521840",
    "end": "1527279"
  },
  {
    "text": "quaternions roses r-o-t-o-r-s much clearer than quaternions if you're",
    "start": "1527279",
    "end": "1532799"
  },
  {
    "text": "in involved in any kind of three-dimensional physics or space or anything like that",
    "start": "1532799",
    "end": "1538320"
  },
  {
    "text": "look up rotors you'll thank me personally you will come and find me you will bring me cake i can assure you",
    "start": "1538320",
    "end": "1546720"
  },
  {
    "text": "but anyway the qbm defines adapted traits for converting between different libraries",
    "start": "1546720",
    "end": "1552080"
  },
  {
    "text": "um and this is something that could be added to the standard library afterwards so that you could interrupt more easily",
    "start": "1552080",
    "end": "1558480"
  },
  {
    "text": "and effectively between standard linear algebra and blade or if you're stuck in one of those libraries",
    "start": "1558480",
    "end": "1564240"
  },
  {
    "text": "and you can't and you can't move for that great expense or great modification of your code base",
    "start": "1564240",
    "end": "1570159"
  },
  {
    "text": "this proposal is very small in scope i'm going to keep saying that it's a small proposal it's as small as we could",
    "start": "1570159",
    "end": "1575840"
  },
  {
    "text": "feasibly manage and we expect others to build on top of this right any questions so far",
    "start": "1575840",
    "end": "1585240"
  },
  {
    "text": "great nothing controversial that's good thank you right so let's look at the proposed library and consider what customizations",
    "start": "1587600",
    "end": "1595200"
  },
  {
    "text": "we will need when we declare a matrix the obvious thing we want to be able to",
    "start": "1595200",
    "end": "1601039"
  },
  {
    "text": "do is specify the type and also the arrangement of the elements",
    "start": "1601039",
    "end": "1609120"
  },
  {
    "text": "so here's an example of a trivial matrix stood math matrix float 3 3",
    "start": "1609600",
    "end": "1617760"
  },
  {
    "text": "so looking at that you may be able to guess that it's a matrix of floats arranged in three rows of three columns",
    "start": "1617760",
    "end": "1626320"
  },
  {
    "text": "unfortunately we need to accommodate matrices whose size is not known at compile time",
    "start": "1626320",
    "end": "1632159"
  },
  {
    "text": "stood math matrix float and this represents two different storage strategies so in the paper we",
    "start": "1632159",
    "end": "1638080"
  },
  {
    "text": "call these storage engines if you know the size of something at compile time you can probably store it statically if",
    "start": "1638080",
    "end": "1644240"
  },
  {
    "text": "you don't you're going to have to store it dynamically so let's talk about designing the",
    "start": "1644240",
    "end": "1650000"
  },
  {
    "text": "storage engines because with compile-time storage we're very fortunate we know how many objects we want to store and we know how big they",
    "start": "1650000",
    "end": "1656080"
  },
  {
    "text": "are and this gives us an object that looks like this",
    "start": "1656080",
    "end": "1661440"
  },
  {
    "text": "so that's trc elements rows columns with runtime storage we need to know about the type and how we're going to",
    "start": "1663679",
    "end": "1670080"
  },
  {
    "text": "allocate we can't parameterize the roman column count because we don't know what they are",
    "start": "1670080",
    "end": "1675279"
  },
  {
    "text": "so we need an object that looks like this",
    "start": "1675279",
    "end": "1679640"
  },
  {
    "text": "type a for allocation which leads to a typical usage that looks like this",
    "start": "1682720",
    "end": "1689679"
  },
  {
    "text": "starting to get a bit large this syntax as you can see",
    "start": "1689760",
    "end": "1694759"
  },
  {
    "text": "it's a bit of a mouthful we could use aliases to help but we still have something of an additional teaching burden",
    "start": "1696240",
    "end": "1701600"
  },
  {
    "text": "we have two types of storage engine to talk about",
    "start": "1701600",
    "end": "1706679"
  },
  {
    "text": "there are some aliases so we can say geometry uses automatic storage",
    "start": "1711039",
    "end": "1716480"
  },
  {
    "text": "of floats three by three which would give a stood math matrix",
    "start": "1716480",
    "end": "1721520"
  },
  {
    "text": "geometry m1 but this problem has already been solved",
    "start": "1721520",
    "end": "1727679"
  },
  {
    "text": "as it turns out a rather elderly proposal p 0 0 0",
    "start": "1727679",
    "end": "1733760"
  },
  {
    "text": "9 that's old it's from september 2015 when we started using p vapors in the committee",
    "start": "1733760",
    "end": "1740640"
  },
  {
    "text": "it counted it encountered just this problem in fact it's older than this it started life as paper n 4355 back about 2013.",
    "start": "1740640",
    "end": "1750720"
  },
  {
    "text": "i'm going to do what you should never do and read the slide and the next two bear with me it's important",
    "start": "1750720",
    "end": "1757760"
  },
  {
    "text": "so from the first revision multi-dimensional arrays are a foundational data structure for science",
    "start": "1757760",
    "end": "1764159"
  },
  {
    "text": "and engineering codes as demonstrated by the extensive use in fortran for five",
    "start": "1764159",
    "end": "1769760"
  },
  {
    "text": "decades a multi-dimensional array is a view to a memory extent through a",
    "start": "1769760",
    "end": "1775279"
  },
  {
    "text": "layout mapping from a multi-index space domain to that extent",
    "start": "1775279",
    "end": "1780480"
  },
  {
    "text": "range traditional layout mappings have been specified as part of the language for example fortran specifies column major",
    "start": "1780480",
    "end": "1788399"
  },
  {
    "text": "layout and c specifies row major layout such a language imposed specification",
    "start": "1788399",
    "end": "1795520"
  },
  {
    "text": "requires significant code refactoring to change an array's layout and requires significant code complexity",
    "start": "1795520",
    "end": "1802000"
  },
  {
    "text": "to implement non-traditional layouts such as tiling a modern linear algebra or structured grid application domains",
    "start": "1802000",
    "end": "1810240"
  },
  {
    "text": "last one a multi-dimensional array view abstraction with polymorphic layout",
    "start": "1810240",
    "end": "1816720"
  },
  {
    "text": "is required to enable changing array layout without extensive code refactoring and maintenance of",
    "start": "1816720",
    "end": "1822640"
  },
  {
    "text": "functionally redundant code layout polymorphism is a critical capability however it is not the only",
    "start": "1822640",
    "end": "1828880"
  },
  {
    "text": "beneficial form of polymorphism so the proposal the md span proposal specifies a new",
    "start": "1828880",
    "end": "1835520"
  },
  {
    "text": "class called extents which is an n-dimensional descriptor for",
    "start": "1835520",
    "end": "1840640"
  },
  {
    "text": "describing the size of an array it also defines a constant",
    "start": "1840640",
    "end": "1847360"
  },
  {
    "text": "called dynamic extents to represent extents not known at compile time",
    "start": "1847360",
    "end": "1853200"
  },
  {
    "text": "in fact during the development of the proposal we were encouraged to take a lead from md spam in interface design",
    "start": "1853200",
    "end": "1858799"
  },
  {
    "text": "and we're now in the position where mdspan can be used to implement part of our matrix class",
    "start": "1858799",
    "end": "1865919"
  },
  {
    "text": "but back to matrix storage engines our class is starting to firm up",
    "start": "1865919",
    "end": "1871440"
  },
  {
    "text": "we can now specify a static or dynamic storage engine with this prototype",
    "start": "1872240",
    "end": "1879240"
  },
  {
    "text": "like this",
    "start": "1880480",
    "end": "1882960"
  },
  {
    "text": "and this is preferable since we've isolated the dynamic versus static choice to a single parameter within the",
    "start": "1886480",
    "end": "1892960"
  },
  {
    "text": "template and we have one more thing to pay attention to and that is the layout row major versus column major",
    "start": "1892960",
    "end": "1901278"
  },
  {
    "text": "now you will recall the discussion in the original abstract p009 about array of struts versus structural arrays if",
    "start": "1902399",
    "end": "1908960"
  },
  {
    "text": "you've read the paper everyone should read the paper it's a great paper beside the issue of c versus fortran",
    "start": "1908960",
    "end": "1915039"
  },
  {
    "text": "specifying different layouts some hardware benefits from particular orientations",
    "start": "1915039",
    "end": "1921519"
  },
  {
    "text": "some hardware refer you to go breadth first somewhat prefer to go column first",
    "start": "1921519",
    "end": "1928120"
  },
  {
    "text": "p0009 comes to the rescue again with the matrix layouts type row major",
    "start": "1928120",
    "end": "1934399"
  },
  {
    "text": "and column major so it's getting bigger",
    "start": "1934399",
    "end": "1940480"
  },
  {
    "text": "onto the next problem by customizing the library this is a simple enough piece of code",
    "start": "1940480",
    "end": "1948960"
  },
  {
    "text": "what would you expect to see on the standard output",
    "start": "1948960",
    "end": "1952799"
  },
  {
    "text": "oh you've all been burned by the quiz haven't you all right",
    "start": "1954080",
    "end": "1961960"
  },
  {
    "text": "who gets 3.5 did anybody guess 3.5 yay",
    "start": "1964399",
    "end": "1969760"
  },
  {
    "text": "you're all professionals brilliant there's a very convenient aspect of c plus which is implicit conversion",
    "start": "1969760",
    "end": "1976320"
  },
  {
    "text": "okay the left hand off round is a type int the right hand operand is of type double there is no operator plus",
    "start": "1976320",
    "end": "1983279"
  },
  {
    "text": "int double mixed type arithmetic is not directly supported",
    "start": "1983279",
    "end": "1989440"
  },
  {
    "text": "but the compiler is allowed to perform an implicit conversion on the operands",
    "start": "1989440",
    "end": "1994960"
  },
  {
    "text": "to find a suitable overload and there are precedence rules you can",
    "start": "1994960",
    "end": "2001279"
  },
  {
    "text": "find on cppreference.com when it comes to overloading they are surprisingly detailed i alluded to them",
    "start": "2001279",
    "end": "2007440"
  },
  {
    "text": "yesterday has anybody gone and read them in their spare time excellent did you find them",
    "start": "2007440",
    "end": "2013200"
  },
  {
    "text": "detailed yes yes you did the preferred conversion is from insta",
    "start": "2013200",
    "end": "2019600"
  },
  {
    "text": "double and this may be troublesome if the int cannot be represented as a double because many ins can't be represented as",
    "start": "2019600",
    "end": "2026480"
  },
  {
    "text": "doubles people do forget this a lot of them but that's what we have",
    "start": "2026480",
    "end": "2032640"
  },
  {
    "text": "let's look at another example",
    "start": "2032640",
    "end": "2035760"
  },
  {
    "text": "right we're putting a complex number to standard output anyone know what this will print does anyone here use stood",
    "start": "2039760",
    "end": "2045120"
  },
  {
    "text": "complex yeah one two three four yeah okay five excellent",
    "start": "2045120",
    "end": "2053839"
  },
  {
    "text": "anyone know what it'll print it wouldn't surprise me if none of you know because it's remarkably it well it",
    "start": "2053839",
    "end": "2061520"
  },
  {
    "text": "prints in parentheses three comma three now i haven't specified any formatting",
    "start": "2061520",
    "end": "2066720"
  },
  {
    "text": "to include decimal places or leading or trailing zeros what about this",
    "start": "2066720",
    "end": "2074679"
  },
  {
    "text": "so this is stood complex int three dot comma three dot",
    "start": "2075440",
    "end": "2082000"
  },
  {
    "text": "it still prints three three because the complex number is templated over int",
    "start": "2082800",
    "end": "2088560"
  },
  {
    "text": "so the constructor is looking for a pair of hints and the compiler converts the doubles",
    "start": "2088560",
    "end": "2095200"
  },
  {
    "text": "to ins like that so what about this",
    "start": "2095200",
    "end": "2101000"
  },
  {
    "text": "3.7 3.2 this is going to be a joke about rounding isn't it you can feel it coming",
    "start": "2104320",
    "end": "2109680"
  },
  {
    "text": "i can tell it's still prince3 the compiler converts the doubles to",
    "start": "2109680",
    "end": "2115119"
  },
  {
    "text": "wins only by truncation so 2.9999 will be two",
    "start": "2115119",
    "end": "2122240"
  },
  {
    "text": "which is most probably not what you want what about this",
    "start": "2122240",
    "end": "2127599"
  },
  {
    "text": "adding two complex numbers",
    "start": "2127680",
    "end": "2131838"
  },
  {
    "text": "well now it prints seven comma seven this surprises some people why hasn't it",
    "start": "2134079",
    "end": "2139680"
  },
  {
    "text": "converted to stood complex float now complex double",
    "start": "2139680",
    "end": "2145440"
  },
  {
    "text": "and printed 7.77.2",
    "start": "2145440",
    "end": "2149160"
  },
  {
    "text": "and what about this",
    "start": "2150640",
    "end": "2153440"
  },
  {
    "text": "well now it prints 7.7 7.2 i initialized a complex of float with a",
    "start": "2157680",
    "end": "2164000"
  },
  {
    "text": "pair of doubles the conversion takes place at construction time and then the addition takes place",
    "start": "2164000",
    "end": "2171880"
  },
  {
    "text": "what about this",
    "start": "2173359",
    "end": "2175920"
  },
  {
    "text": "it still prints 7.77.2 the compiler converts the doubles to floats by narrowing rather than truncating and the",
    "start": "2179280",
    "end": "2185280"
  },
  {
    "text": "interconverter floats again the conversion will happen at compile time here since these are literals",
    "start": "2185280",
    "end": "2191040"
  },
  {
    "text": "what about this one you're being so reticent and wisely so",
    "start": "2191040",
    "end": "2198960"
  },
  {
    "text": "because it doesn't compile that will not compile",
    "start": "2199200",
    "end": "2205838"
  },
  {
    "text": "what's going on well simply put the operators aren't defined",
    "start": "2207520",
    "end": "2214560"
  },
  {
    "text": "there's no operator defined for adding two complex numbers templated over",
    "start": "2214560",
    "end": "2219599"
  },
  {
    "text": "different types how could you how could you do that there's so many types that you might possibly want to instantiate complex",
    "start": "2219599",
    "end": "2225680"
  },
  {
    "text": "over the only ones that defined are in uh float um double and long double",
    "start": "2225680",
    "end": "2232079"
  },
  {
    "text": "the rest is kind of it's ub but even then we still don't have them",
    "start": "2232079",
    "end": "2237599"
  },
  {
    "text": "the built-in types that are part of the language are fully defined as are their operations and their",
    "start": "2237599",
    "end": "2242800"
  },
  {
    "text": "conversions but stood complex is not a part of the language it's part of the library",
    "start": "2242800",
    "end": "2249359"
  },
  {
    "text": "now defining operators for a few possible specializations of stood complex might seem wrong but my",
    "start": "2249359",
    "end": "2255200"
  },
  {
    "text": "co-author and i disagree and we think this is an oversight and there's an even more fundamental",
    "start": "2255200",
    "end": "2261760"
  },
  {
    "text": "problem to solve in our case because here are two storage engines",
    "start": "2261760",
    "end": "2267599"
  },
  {
    "text": "with different elements types",
    "start": "2269040",
    "end": "2272560"
  },
  {
    "text": "and here are two matrices with different storage engines",
    "start": "2275040",
    "end": "2281520"
  },
  {
    "text": "so what should the type of m3 be you're adding two three by three",
    "start": "2282000",
    "end": "2288320"
  },
  {
    "text": "matrices should work",
    "start": "2288320",
    "end": "2293359"
  },
  {
    "text": "we think it should be legal if you can add two different arithmetic types together then you can add an array of them together",
    "start": "2293359",
    "end": "2299599"
  },
  {
    "text": "that's what we think and if you can add an array of them together then you can add a matrix of them together and if you can add them",
    "start": "2299599",
    "end": "2305520"
  },
  {
    "text": "you can multiply them the matrix should behave like the built-in types and to achieve this we need to work out",
    "start": "2305520",
    "end": "2312079"
  },
  {
    "text": "a way of managing the promotion to do this we must at compile time examine the template parameters and for",
    "start": "2312079",
    "end": "2318560"
  },
  {
    "text": "each difference work out a common type so for example if we have an operand",
    "start": "2318560",
    "end": "2323839"
  },
  {
    "text": "storage engine with a double element type",
    "start": "2323839",
    "end": "2328640"
  },
  {
    "text": "and the other operand storage engine has a float element type and the result of any arithmetic",
    "start": "2331599",
    "end": "2337040"
  },
  {
    "text": "operation is going to be a storage engine with an element parameter of type double",
    "start": "2337040",
    "end": "2342880"
  },
  {
    "text": "i appreciate this is a wall of code it calms down a little while and this is an exercise in template mess",
    "start": "2342880",
    "end": "2349359"
  },
  {
    "text": "programming which i hate and there's a whole talk possible on how we achieve this but there is a slight",
    "start": "2349359",
    "end": "2354720"
  },
  {
    "text": "problem because when it comes to allocation if either off around storage engine has",
    "start": "2354720",
    "end": "2359920"
  },
  {
    "text": "an exotic user defined allocator then there's no way for the compiler to infer a common type",
    "start": "2359920",
    "end": "2366000"
  },
  {
    "text": "so we therefore have to expose another parameter to the matrix definition which is the matrix operation traits",
    "start": "2366000",
    "end": "2374240"
  },
  {
    "text": "so for each of the four operations we have three traits element promotion engine promotion and",
    "start": "2374240",
    "end": "2379680"
  },
  {
    "text": "an arithmetic trait which i'll come on to in a moment so during compilation the traits class",
    "start": "2379680",
    "end": "2386079"
  },
  {
    "text": "is used to form the resulting type of the operations in the usual case it's to be hoped that",
    "start": "2386079",
    "end": "2392000"
  },
  {
    "text": "classes t1 and t2 would be the same making the entire process quite trivial",
    "start": "2392000",
    "end": "2398079"
  },
  {
    "text": "but where they are not the appropriate trait is selected to infer the correct promotion",
    "start": "2398079",
    "end": "2405280"
  },
  {
    "text": "so we update our basic matrix class to accommodate the operation traits parameter it's getting bigger and bigger",
    "start": "2409599",
    "end": "2415440"
  },
  {
    "text": "and bigger so there are now two parameters the first is the matrix storage engine",
    "start": "2415440",
    "end": "2421119"
  },
  {
    "text": "templated over type extents allocation and layout and the second is the operation traits",
    "start": "2421119",
    "end": "2426800"
  },
  {
    "text": "describing element storage engine and arithmetic promotion traits but why would you want to customize the",
    "start": "2426800",
    "end": "2433040"
  },
  {
    "text": "arithmetic traits surely arithmetic is just arithmetic",
    "start": "2433040",
    "end": "2438560"
  },
  {
    "text": "let's take a look at multiplication at worst to multiply two n square matrices",
    "start": "2438560",
    "end": "2444319"
  },
  {
    "text": "requires n cubed multiplications of scalars",
    "start": "2444319",
    "end": "2449359"
  },
  {
    "text": "and n squared minus n additions that is a lot of work this means the complexity is o n cubed",
    "start": "2449359",
    "end": "2456000"
  },
  {
    "text": "although there are cash considerations to bear in mind that aren't a part of complexity calculation but it's a it's a",
    "start": "2456000",
    "end": "2461119"
  },
  {
    "text": "big old job the ubiquity of matrix modification and there is a",
    "start": "2461119",
    "end": "2466400"
  },
  {
    "text": "lot of it about really mature application right now who's got who's got a phone does there's anybody here have a phone",
    "start": "2466400",
    "end": "2473280"
  },
  {
    "text": "yeah yeah there's matrix multiplication happening right now on your phones whilst i'm",
    "start": "2473280",
    "end": "2478319"
  },
  {
    "text": "giving this talk so the ubiquity of matrix multiplication",
    "start": "2478319",
    "end": "2483920"
  },
  {
    "text": "has inspired a lot of research into superior algorithms",
    "start": "2483920",
    "end": "2489920"
  },
  {
    "text": "does anybody know about strassen's algorithm oh this is nerd sniping great okay",
    "start": "2489920",
    "end": "2497040"
  },
  {
    "text": "um so that has complexity o ends the power 2.807 i have no idea how",
    "start": "2497040",
    "end": "2503520"
  },
  {
    "text": "that figure is calculated there's something about complexity calculation which i i i'll leave to i'll leave to",
    "start": "2503520",
    "end": "2509040"
  },
  {
    "text": "the experts i'm i am just reading a number out here i i recognize this i don't i don't know how you calculate",
    "start": "2509040",
    "end": "2515359"
  },
  {
    "text": "fractional complexities i remember when i was at university i studied um my closing thesis was on fractals",
    "start": "2515359",
    "end": "2521760"
  },
  {
    "text": "because it was 1990 and fractals were cool and i came and i heard about the hausdorff metric which says what is the",
    "start": "2521760",
    "end": "2527839"
  },
  {
    "text": "dimensionality of this set of points on a plane um if i said two my my master actually",
    "start": "2527839",
    "end": "2533920"
  },
  {
    "text": "just laugh at me it's not too anyway so fractional fractional complexity i do know that there has been",
    "start": "2533920",
    "end": "2539760"
  },
  {
    "text": "a race to minimize this number over the years if you do better than 2.807 on",
    "start": "2539760",
    "end": "2545440"
  },
  {
    "text": "a few trillion calculations a day that's a great thing as of 2014 that complexity number has",
    "start": "2545440",
    "end": "2552800"
  },
  {
    "text": "reached that that's the best result um",
    "start": "2552800",
    "end": "2558960"
  },
  {
    "text": "there's been research not just into multiplication but also gaussian elimination matrix inversion determinant",
    "start": "2558960",
    "end": "2564079"
  },
  {
    "text": "calculation all for the same reason because there is so much of it about leading to all",
    "start": "2564079",
    "end": "2569200"
  },
  {
    "text": "manner of handy algorithms for particular circumstances so we cannot therefore require clients",
    "start": "2569200",
    "end": "2575599"
  },
  {
    "text": "of this class to use a particular algorithm to use the default naive algorithm and this gives",
    "start": "2575599",
    "end": "2582000"
  },
  {
    "text": "us our third customization point the set of algorithms that you want to use for operations on matrices",
    "start": "2582000",
    "end": "2588960"
  },
  {
    "text": "now you may decide on an expression templates implementation of your algorithms or you may decide that the compilation",
    "start": "2588960",
    "end": "2595280"
  },
  {
    "text": "burden is too great and decide on just something more naive whilst you're prototyping",
    "start": "2595280",
    "end": "2601839"
  },
  {
    "text": "in fact we have a context for implementation of matrix multiplication which filled me with glee",
    "start": "2601839",
    "end": "2608480"
  },
  {
    "text": "so your custom operation traits may only specialize one particular aspect so we have to provide a set of defaults",
    "start": "2608480",
    "end": "2615760"
  },
  {
    "text": "um here we've imported the addition element promotion and storage promotion traits",
    "start": "2615760",
    "end": "2620880"
  },
  {
    "text": "and supplied our own addition algorithm traits",
    "start": "2620880",
    "end": "2625920"
  },
  {
    "text": "so to summarize your customization options you declare a basic matrix you choose a matrix storage engine",
    "start": "2633520",
    "end": "2641200"
  },
  {
    "text": "you choose an element type an extent using a single row or column for a vector or dynamic extents for",
    "start": "2641200",
    "end": "2648319"
  },
  {
    "text": "runtime decision making you can choose an allocator if you want the objects to have dynamic storage",
    "start": "2648319",
    "end": "2654240"
  },
  {
    "text": "duration and you can choose a layout and then finally you choose your",
    "start": "2654240",
    "end": "2660079"
  },
  {
    "text": "operation traits interestingly this solves the complex number problem",
    "start": "2660079",
    "end": "2666640"
  },
  {
    "text": "in a roundabout way because by declaring two matrices of dimension one by one",
    "start": "2666640",
    "end": "2672480"
  },
  {
    "text": "you can use that machinery to do all of the appropriate promotion now i'm defaulting to row major storage",
    "start": "2672480",
    "end": "2678400"
  },
  {
    "text": "here the type of sil c3 will be complex scalar double",
    "start": "2678400",
    "end": "2684720"
  },
  {
    "text": "i've left a lot out here i'll pause for any further questions",
    "start": "2686480",
    "end": "2691838"
  },
  {
    "text": "you are all stunned into silence okay let's crack on",
    "start": "2692319",
    "end": "2699119"
  },
  {
    "text": "right 15 minutes for applications in color i might have to race through this right",
    "start": "2699119",
    "end": "2705119"
  },
  {
    "text": "what color is that oh come on it's a color what color is",
    "start": "2705119",
    "end": "2710720"
  },
  {
    "text": "that red good thank you wow you're terrified of questions aren't you",
    "start": "2710720",
    "end": "2716400"
  },
  {
    "text": "ah it's not red no no no it's purple no it's red what about that one",
    "start": "2716400",
    "end": "2722480"
  },
  {
    "text": "no [Laughter] do you know what according to powerpoint",
    "start": "2722480",
    "end": "2728000"
  },
  {
    "text": "that's orange i didn't make it up powerpoint says",
    "start": "2728000",
    "end": "2733680"
  },
  {
    "text": "that's orange i don't think so and it sounds like you don't think so either",
    "start": "2733680",
    "end": "2738960"
  },
  {
    "text": "um the problem we have is one of subjectivity and context and that's the root of all ambiguity frankly the first",
    "start": "2738960",
    "end": "2744560"
  },
  {
    "text": "thing we need to observe is that perception is logarithmic we've been ram rated by another talk by the way um",
    "start": "2744560",
    "end": "2750560"
  },
  {
    "text": "perception is logarithmic differences at low levels um are more significant than differences at high levels and this is",
    "start": "2750560",
    "end": "2757760"
  },
  {
    "text": "fundamental to human behavior actually it's evolutionarily advantageous to just small things rather than the big things",
    "start": "2757760",
    "end": "2764319"
  },
  {
    "text": "if you're being trapped by a predator hearing a footstep in this silence is is",
    "start": "2764319",
    "end": "2769520"
  },
  {
    "text": "valuable if you're being chased by 30 predators hearing a 31st predator chasing you",
    "start": "2769520",
    "end": "2776319"
  },
  {
    "text": "isn't valuable information there's little differences the same is true of sight if you perceive the amount of light cast by a single bulb",
    "start": "2776319",
    "end": "2784720"
  },
  {
    "text": "and then suddenly another bulb lights up the effect is noticeable it will consume your attention",
    "start": "2784720",
    "end": "2790000"
  },
  {
    "text": "on the other hand if you perceive the amount of light cast by eight bulbs adding another one isn't going to make",
    "start": "2790000",
    "end": "2795119"
  },
  {
    "text": "much difference to you and this is about the difference between contrast and brightness contrast is more useful than",
    "start": "2795119",
    "end": "2801040"
  },
  {
    "text": "absolute brightness mechanical vision is linear",
    "start": "2801040",
    "end": "2806800"
  },
  {
    "text": "it's i say linear it's not really vision um it's photons hitting a ccd this is a",
    "start": "2806800",
    "end": "2812480"
  },
  {
    "text": "diagram of a ccd chip inside your phones um vision is about apprehension",
    "start": "2812480",
    "end": "2818480"
  },
  {
    "text": "understanding parsing contextualizing um and that's why it's logarithmic",
    "start": "2818480",
    "end": "2824079"
  },
  {
    "text": "because that's what is most useful machines just count photons using natural numbers um well actually they don't count",
    "start": "2824079",
    "end": "2830880"
  },
  {
    "text": "photons they take a sample rather than counting the entire number of photons to hitting a particular area",
    "start": "2830880",
    "end": "2836720"
  },
  {
    "text": "and the interesting information is at the dark end okay contrast not brightness",
    "start": "2836720",
    "end": "2843040"
  },
  {
    "text": "and to improve sampling at that end we store the square root rather than the value",
    "start": "2843040",
    "end": "2848800"
  },
  {
    "text": "and this gives us more values at the bottom in exchange for fewer values at the top and",
    "start": "2848800",
    "end": "2854559"
  },
  {
    "text": "it's not actually the square root i'm over generalizing it's something that it's it's somewhere between the power of x",
    "start": "2854559",
    "end": "2861520"
  },
  {
    "text": "x to the power of somewhere between one upon one point eight and one point one upon two point two",
    "start": "2861520",
    "end": "2866640"
  },
  {
    "text": "um this number is called the gamma value you may have heard of gamma people are nodding great the gamma value um more on",
    "start": "2866640",
    "end": "2873440"
  },
  {
    "text": "this in a moment but a low gamma sum a low gamma that we have at the um top",
    "start": "2873440",
    "end": "2879440"
  },
  {
    "text": "samples more evenly across the spectrum than high gamma low gamma is good for bright pictures high gamma is good for",
    "start": "2879440",
    "end": "2885599"
  },
  {
    "text": "darker pictures and you store the gamma correction out of band in your data so that you can",
    "start": "2885599",
    "end": "2892319"
  },
  {
    "text": "decode it properly so that's metadata effectively what about color though now there are",
    "start": "2892319",
    "end": "2898000"
  },
  {
    "text": "two kinds of light sensitive cells in the eyes rods and cones rods apprehend lower intensities while",
    "start": "2898000",
    "end": "2904880"
  },
  {
    "text": "cones apprehend brighter signals but they also specialize over particular electromagnetic frequency ranges",
    "start": "2904880",
    "end": "2911760"
  },
  {
    "text": "and there are three types of cone specializing in different ranges they're labeled s m and l",
    "start": "2911760",
    "end": "2917680"
  },
  {
    "text": "for short medium and long wavelength it's very anglo-centric as you can see from the picture the s",
    "start": "2917680",
    "end": "2923760"
  },
  {
    "text": "cones respond to shorter wavelengths peaking at about 420 nanometers and",
    "start": "2923760",
    "end": "2929359"
  },
  {
    "text": "there are fewest of them they make up about two percent of the cones in the human eye um the m cones make up about a third",
    "start": "2929359",
    "end": "2936319"
  },
  {
    "text": "peaking at 530 nanometers and the alkones make up the majority they peak at the longer wavelength of 580",
    "start": "2936319",
    "end": "2942640"
  },
  {
    "text": "nanometers you can see that red green and blue are the primary colors here",
    "start": "2942640",
    "end": "2948960"
  },
  {
    "text": "um three types of cone makes humans trichromats although originally we were",
    "start": "2948960",
    "end": "2954839"
  },
  {
    "text": "tetrachromats four types until genetic mutation got in the way and cut one out we're left with three",
    "start": "2954839",
    "end": "2960640"
  },
  {
    "text": "um i've heard it suggested van gogh was probably a tetrachromat um",
    "start": "2960640",
    "end": "2966240"
  },
  {
    "text": "and women are more likely to be tetrachromats than men but they are non-functional tetrachromats they will have a fourth",
    "start": "2966240",
    "end": "2972640"
  },
  {
    "text": "type but it it's not working there's been one document example of a functional tetrachromat she was",
    "start": "2972640",
    "end": "2978880"
  },
  {
    "text": "found in 2016. so it's really rare but with three cones being the general case we only need a vector of three",
    "start": "2978880",
    "end": "2985839"
  },
  {
    "text": "values to represent all of human all of human vision and what we need is a way of transforming those",
    "start": "2985839",
    "end": "2991839"
  },
  {
    "text": "electromagnetic emissions into perceived color so what you do is you take a standard human you put them in a standard",
    "start": "2991839",
    "end": "2998640"
  },
  {
    "text": "environment and then you measure how they perceive electromagnetic magnetic waves via",
    "start": "2998640",
    "end": "3003760"
  },
  {
    "text": "matching the colours of lights and when you build a function that maps wavelengths to perception giving three",
    "start": "3003760",
    "end": "3008880"
  },
  {
    "text": "values x y z you uh constrain this function so that all",
    "start": "3008880",
    "end": "3014960"
  },
  {
    "text": "values are positive and luminance ranges from naught to 100 and this was first attempted in the late",
    "start": "3014960",
    "end": "3020079"
  },
  {
    "text": "1920s 90 years ago um these results were combined by the commission international de la claraege which in english is the",
    "start": "3020079",
    "end": "3027359"
  },
  {
    "text": "international commission on illumination and they created the cie rgb color space",
    "start": "3027359",
    "end": "3034720"
  },
  {
    "text": "from which the cie xyz color space was derived now not all values are possible because",
    "start": "3034720",
    "end": "3040640"
  },
  {
    "text": "the ranges overlap for example s and l cannot both be zero",
    "start": "3040640",
    "end": "3046000"
  },
  {
    "text": "so engineering is messy and engineering is real life the vector space defined by this color",
    "start": "3046000",
    "end": "3051440"
  },
  {
    "text": "space contains impossible values now we apprehend brightness separate",
    "start": "3051440",
    "end": "3056480"
  },
  {
    "text": "from color so let's create a color space to reflect that so we can normalize the value so",
    "start": "3056480",
    "end": "3061839"
  },
  {
    "text": "that we have two values representing color and a third value for relative luminance in form you know brightness",
    "start": "3061839",
    "end": "3068319"
  },
  {
    "text": "and it's important to emphasize that y here is the relative luminance and that's by deliberate choice i'll go into",
    "start": "3068319",
    "end": "3073760"
  },
  {
    "text": "that in a moment we have a two-dimensional color space that we can vary by brightness",
    "start": "3073760",
    "end": "3080240"
  },
  {
    "text": "it looks like this this is the x y y color space um the figures in blue around the edges",
    "start": "3080240",
    "end": "3085760"
  },
  {
    "text": "the wavelengths the x and y vary between zero and one",
    "start": "3085760",
    "end": "3091040"
  },
  {
    "text": "and this diagram displays the maximally saturated bright colors that can be produced by a monitor",
    "start": "3091040",
    "end": "3098319"
  },
  {
    "text": "the area is called the gamut of human vision some interesting properties emerge all",
    "start": "3098319",
    "end": "3103680"
  },
  {
    "text": "visible chromaticities corresponds to non-negative values of x y and z everything you can see is in there if",
    "start": "3103680",
    "end": "3109200"
  },
  {
    "text": "you choose any two points of color on the diagram then all the colors that lie in a straight line between the two",
    "start": "3109200",
    "end": "3115119"
  },
  {
    "text": "points can be formed by mixing these two colors an equal mixture of two equally bright",
    "start": "3115119",
    "end": "3120880"
  },
  {
    "text": "colors will not generally lie on the midpoint of that line segment",
    "start": "3120880",
    "end": "3126000"
  },
  {
    "text": "in more general terms a distance on that diagram does not correspond to a degree of difference between two colors",
    "start": "3126000",
    "end": "3132400"
  },
  {
    "text": "if you want to go between two colors it's a little bit more complicated if you choose three sources you'll get a large range of colors but you won't get",
    "start": "3132400",
    "end": "3138559"
  },
  {
    "text": "the full range of colors visible to humans because that shape is not a triangle kind of triangular but it's not actually",
    "start": "3138559",
    "end": "3145119"
  },
  {
    "text": "a triangle i got all this from wikipedia it's absolutely full of stuff some of which",
    "start": "3145119",
    "end": "3150720"
  },
  {
    "text": "seems to be contradictory it takes quite a bit of tricky research i want to call back to the early",
    "start": "3150720",
    "end": "3156400"
  },
  {
    "text": "discussion how we perceive brightness because perceptual uniformity is an important property where a small",
    "start": "3156400",
    "end": "3161440"
  },
  {
    "text": "change in a value has the same effect in perceived color regardless of what the value is",
    "start": "3161440",
    "end": "3167520"
  },
  {
    "text": "and values in the color space are not very perceptually uniform this makes it inefficient",
    "start": "3167520",
    "end": "3174319"
  },
  {
    "text": "so there were three further attempts to achieve this uniformity but they still demonstrate some distortion now in 1996",
    "start": "3174319",
    "end": "3181520"
  },
  {
    "text": "microsoft and hewlett packard created the s rgb standard who's heard of srgb",
    "start": "3181520",
    "end": "3187359"
  },
  {
    "text": "great good it's a standard uh the international electric technical commission the iec",
    "start": "3187359",
    "end": "3194559"
  },
  {
    "text": "formally identified this in 1999 and it's often the default color space for images that contain no color space",
    "start": "3194559",
    "end": "3200880"
  },
  {
    "text": "information remember how we're saying that it's stored as metadata if you just supply somebody with a bitmap",
    "start": "3200880",
    "end": "3206559"
  },
  {
    "text": "we don't know what unless we know what the what the standard is that's being used we can't really tell",
    "start": "3206559",
    "end": "3213119"
  },
  {
    "text": "what that image is um now this color space has eight integers per color channel it's designed for monitors printers and the world wide",
    "start": "3213119",
    "end": "3219839"
  },
  {
    "text": "web and as you can imagine it's the most widely used color space",
    "start": "3219839",
    "end": "3225440"
  },
  {
    "text": "it defines the chromaticities of red green and blue and the colors where one of the three channels is non-zero and the others are all zero",
    "start": "3226400",
    "end": "3233599"
  },
  {
    "text": "which are your primary points they're based on the colors of the phosphors in cathode ray tube tv sets",
    "start": "3233599",
    "end": "3240559"
  },
  {
    "text": "who remembers cathode is anybody here who never had a cathode ray tube tv set",
    "start": "3240559",
    "end": "3246240"
  },
  {
    "text": "oh you're all quite old last time i gave this talk there were a whole bunch of people who looked at me and said what's a cathode ray tube",
    "start": "3246240",
    "end": "3253280"
  },
  {
    "text": "but we've had flat screen telly's now for 20 years it's quite possible um",
    "start": "3253280",
    "end": "3259119"
  },
  {
    "text": "you might wonder if it's still relevant now the crt devices are all but extinct but you can make a try",
    "start": "3259599",
    "end": "3265200"
  },
  {
    "text": "stimulus display that's what they're called when you have three a tri-stimulus display that conforms to",
    "start": "3265200",
    "end": "3270640"
  },
  {
    "text": "srgb it doesn't have to use phosphorus that's just where the basis is um you can use leds with the same color",
    "start": "3270640",
    "end": "3276880"
  },
  {
    "text": "frankly um in fact you can use any color any materials you like as long as the primaries match",
    "start": "3276880",
    "end": "3282160"
  },
  {
    "text": "so the gamut looks like this the triangle in the middle is the srgb gamut shown within the 1931 gamut it's all the",
    "start": "3282160",
    "end": "3289520"
  },
  {
    "text": "colors you can see on srgb monitor each corner of the triangle is a primary defined in x y",
    "start": "3289520",
    "end": "3295680"
  },
  {
    "text": "um you might be thinking yourself hang on what about the colors outside the triangle i can see those",
    "start": "3295680",
    "end": "3301920"
  },
  {
    "text": "that's because i'm lying those colors are wrong they're an interpolation of representation or you",
    "start": "3301920",
    "end": "3307280"
  },
  {
    "text": "can actually see on a monitor there's the things inside you can't get the full range of human vision",
    "start": "3307280",
    "end": "3313200"
  },
  {
    "text": "inside an srgb on an srgb monitor",
    "start": "3313200",
    "end": "3317599"
  },
  {
    "text": "it also defines a transfer function here's where we get into the linear algebra at last between the intensity of these primaries",
    "start": "3319520",
    "end": "3325920"
  },
  {
    "text": "and the actual numbers stored the function is non-linear and that word non-linear is really important the",
    "start": "3325920",
    "end": "3331680"
  },
  {
    "text": "x-axis contains the stored value from 0 to 1. so if you store the value as 8 bit integers it can be from 0 to 255.",
    "start": "3331680",
    "end": "3339040"
  },
  {
    "text": "on the right-hand y-axis also ranging from 0.1 you have the intensity so the red plot is the srgb intensities versus the srgb",
    "start": "3339040",
    "end": "3347680"
  },
  {
    "text": "numerical values nice slope there behind that red curve is a dashed black curve",
    "start": "3347680",
    "end": "3354000"
  },
  {
    "text": "showing an exact gamma of 2.2 and as you can see there is more detail",
    "start": "3354000",
    "end": "3360000"
  },
  {
    "text": "at lower values the upper half of the intensity spread is represented with only about a third",
    "start": "3360000",
    "end": "3365920"
  },
  {
    "text": "of the stored values so on the left hand y axis you have the effective local gamma so the blue plot",
    "start": "3365920",
    "end": "3372880"
  },
  {
    "text": "is the function slope in log log space which is the effective gamma at each point you'll notice that there's a",
    "start": "3372880",
    "end": "3379280"
  },
  {
    "text": "little sort of straight line at the end um and the reason for that is so that we",
    "start": "3379280",
    "end": "3384880"
  },
  {
    "text": "don't end up with it asymptoting off to zero that would make all the maths very hard",
    "start": "3384880",
    "end": "3391839"
  },
  {
    "text": "right so how do we transfer from rgb",
    "start": "3394319",
    "end": "3400079"
  },
  {
    "text": "back to xy to xyz and back again so the first light so what we have here",
    "start": "3400079",
    "end": "3406880"
  },
  {
    "text": "is a simple linear transformation by the power of matrices basically",
    "start": "3408400",
    "end": "3413680"
  },
  {
    "text": "and that's kind of the really important thing with color is that we get color wrong all the time",
    "start": "3416640",
    "end": "3422880"
  },
  {
    "text": "when people interpolate color because it's not linear they get it wrong they need to transform into a linear color",
    "start": "3422880",
    "end": "3429040"
  },
  {
    "text": "space which is where srgb is and then perform the interpolation and transform",
    "start": "3429040",
    "end": "3434720"
  },
  {
    "text": "back to where they started it's quite a problem um",
    "start": "3434720",
    "end": "3440559"
  },
  {
    "text": "it's quite computation expensive as well um for small intensities you simply need to multiply by 12.92 to do the gamma",
    "start": "3440559",
    "end": "3447200"
  },
  {
    "text": "correction but for larger intensities you can see the rather unpleasant activity of taking the fifth power and",
    "start": "3447200",
    "end": "3452720"
  },
  {
    "text": "then the 12th root that's three times per pixel the third and fourth line of the reverse",
    "start": "3452720",
    "end": "3459200"
  },
  {
    "text": "operations which go from rgb back to xyz it is really computationally expensive",
    "start": "3459200",
    "end": "3466160"
  },
  {
    "text": "so in summary in summary brightness perception is logarithmic xyz defines absolute perceptual colors",
    "start": "3466160",
    "end": "3473200"
  },
  {
    "text": "y y color space is linear and linear interpolation is valid only on linear color spaces",
    "start": "3473200",
    "end": "3480640"
  },
  {
    "text": "srgb is defined relative to x y y but the transfer function is not a linear function",
    "start": "3480640",
    "end": "3486880"
  },
  {
    "text": "and it's really expensive srgb is non-linear which means that linear",
    "start": "3486880",
    "end": "3492960"
  },
  {
    "text": "interpolation is invalid on srgb we need to be able to transfer form between color spaces",
    "start": "3492960",
    "end": "3498960"
  },
  {
    "text": "using matrices okay um we're an hour in",
    "start": "3498960",
    "end": "3505440"
  },
  {
    "text": "so i'll call it a day there does anybody have any questions",
    "start": "3505440",
    "end": "3510798"
  },
  {
    "text": "thank you very much [Applause]",
    "start": "3512559",
    "end": "3521280"
  },
  {
    "text": "there's another version of this talk um if you if you just search for me and linear algebra there's a 90-minute",
    "start": "3521280",
    "end": "3526319"
  },
  {
    "text": "version of this talk where i go into a lot more detail about color they're also i've given whole talks on color and",
    "start": "3526319",
    "end": "3532240"
  },
  {
    "text": "whole talks on the geometric applications of linear algebra so do do hunt around if you're truly interested",
    "start": "3532240",
    "end": "3540200"
  },
  {
    "text": "you",
    "start": "3557839",
    "end": "3559920"
  },
  {
    "text": "you",
    "start": "3586319",
    "end": "3588400"
  }
]