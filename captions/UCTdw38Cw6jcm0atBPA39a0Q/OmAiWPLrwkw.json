[
  {
    "text": "good morning thanks so much for joining me my name is Simon Brown this session is about se4 models as code which is really",
    "start": "2960",
    "end": "9679"
  },
  {
    "text": "of course about architecture diagrams and documentation so architecture diagrams",
    "start": "9679",
    "end": "15240"
  },
  {
    "text": "have traditionally been horrible lots of random boxes and arrows that look like",
    "start": "15240",
    "end": "20880"
  },
  {
    "text": "this and I'm sure we've all seen whiteboards where we've got diagrams exactly like this uh this isn't a",
    "start": "20880",
    "end": "26119"
  },
  {
    "text": "tooling issue one of the one of the things I do is I I get to fly around run workshops for teams and I kind of force",
    "start": "26119",
    "end": "32200"
  },
  {
    "text": "them to use pen and paper or whiteboard and people ask me if you let people use a tool do you get better pictures and",
    "start": "32200",
    "end": "37760"
  },
  {
    "text": "the answer is not really and you can find tons of these diagrams on something like a quick Google",
    "start": "37760",
    "end": "44480"
  },
  {
    "text": "search uml used to be something that we all used to use for diagrams and",
    "start": "44480",
    "end": "49800"
  },
  {
    "text": "documentation certainly those of us who have a little more gray their hair than others uh but this all faded out in the",
    "start": "49800",
    "end": "56600"
  },
  {
    "text": "early to mid uh 2000s predominately I think because of the agile Manifesto but also because the",
    "start": "56600",
    "end": "62280"
  },
  {
    "text": "uml specification became too complicated do blow to for most people uml fixes a",
    "start": "62280",
    "end": "68080"
  },
  {
    "text": "lot of the issues we typically see with bad architecture diagrams but nobody wants to use uml these days why here are",
    "start": "68080",
    "end": "73520"
  },
  {
    "text": "all the reasons I've literally had people say these things to my face if you use uml here you'll be seen as old",
    "start": "73520",
    "end": "79680"
  },
  {
    "text": "and oldfashioned which is a bit strange people think uml is not expected in agile ways of working they think it's a",
    "start": "79680",
    "end": "86280"
  },
  {
    "text": "waste of time it's too detailed etc etc there is some truth in some of these reasons but most of them are actually",
    "start": "86280",
    "end": "92720"
  },
  {
    "text": "just myths so I created something called the C4 model which you can find documented",
    "start": "92720",
    "end": "98240"
  },
  {
    "text": "at C4 model.com who's quick show of hands who's using C4 here so that's a",
    "start": "98240",
    "end": "103399"
  },
  {
    "text": "small number so this should be a nice instruction for those of you who are not using C4 yet so what I wanted to do was",
    "start": "103399",
    "end": "108799"
  },
  {
    "text": "I wanted to create a way to allow teams to draw aror diagrams in a lightweight",
    "start": "108799",
    "end": "115960"
  },
  {
    "text": "but structured manner that's essentially what C4 is and this is the underlying",
    "start": "115960",
    "end": "121000"
  },
  {
    "text": "principle if you don't want to use uml or archimate or cisl or those other",
    "start": "121000",
    "end": "126960"
  },
  {
    "text": "formalized notations for drawing architecture diagrams and you want to stick to boxes and arrows that's fine",
    "start": "126960",
    "end": "132200"
  },
  {
    "text": "but try to do so in a structured way and make sure your notation is",
    "start": "132200",
    "end": "137920"
  },
  {
    "text": "self-describing so I'm trying to solve a bunch of different problems here that I commonly see with architecture",
    "start": "137920",
    "end": "143720"
  },
  {
    "text": "diagrams the thing that sits behind C4 is a set of hierarchical abstractions",
    "start": "143720",
    "end": "150519"
  },
  {
    "text": "the biggest of these abstractions is what I call a software system a software system is something like a service that",
    "start": "150519",
    "end": "157840"
  },
  {
    "text": "single team is building or it's you know it's typically something that a single team is building responsible for they",
    "start": "157840",
    "end": "163959"
  },
  {
    "text": "can see the internal implementation details of so that's something uh that's",
    "start": "163959",
    "end": "169640"
  },
  {
    "text": "the thing I'm calling a software system it's something typically owned by a single team if we look inside these things I'm calling uh software systems",
    "start": "169640",
    "end": "175920"
  },
  {
    "text": "I'm going to say they are made up of one or more containers I don't mean docker this has nothing to do with Docker",
    "start": "175920",
    "end": "181400"
  },
  {
    "text": "there's an unfortunate Clash of naming uh I got the name first but Docker became way more popular so that's a bit",
    "start": "181400",
    "end": "187840"
  },
  {
    "text": "awkward by container I basically mean an application or a data store so the",
    "start": "187840",
    "end": "193200"
  },
  {
    "text": "services and the software systems we build are made up of applications and data stores so this is your front-end",
    "start": "193200",
    "end": "200040"
  },
  {
    "text": "app running in a web browser react angular Etc it's your server side apps",
    "start": "200040",
    "end": "205080"
  },
  {
    "text": "running on a server so uh asp.net NVC spring boot uh Ruby and rails etc etc it",
    "start": "205080",
    "end": "211280"
  },
  {
    "text": "could be a c console app or Windows service it could be a C++ console app",
    "start": "211280",
    "end": "216480"
  },
  {
    "text": "command line app that type of thing and from a data perspective it's a database schema uh something in Blob storage an",
    "start": "216480",
    "end": "223799"
  },
  {
    "text": "Amazon S3 bucket a folder on a far share etc etc so the systems we build are made",
    "start": "223799",
    "end": "229280"
  },
  {
    "text": "up of applications and data stores collectively I'm calling these things",
    "start": "229280",
    "end": "234519"
  },
  {
    "text": "containers if we zoom in and look inside the application containers the things",
    "start": "234519",
    "end": "239840"
  },
  {
    "text": "that are ultimately built from codee I'm going to say they are made up of one or more components so by component I I mean",
    "start": "239840",
    "end": "246879"
  },
  {
    "text": "this a grouping of related functionality hopefully behind a nice clean simple well defined interface running inside a",
    "start": "246879",
    "end": "254640"
  },
  {
    "text": "container so in this set of abstractions components are not individually",
    "start": "254640",
    "end": "260519"
  },
  {
    "text": "Deployable units it's the container it's the application that's the Deployable runnable",
    "start": "260519",
    "end": "266600"
  },
  {
    "text": "unit and if you zoom into an individual component I'm going to say they are made up of code level elements so imagine you",
    "start": "266600",
    "end": "272400"
  },
  {
    "text": "are building a component in C when you zoom into that component it's made up of classes enums interfaces the same in",
    "start": "272400",
    "end": "280160"
  },
  {
    "text": "Java same in C++ in JavaScript this is now objects and functions in F and",
    "start": "280160",
    "end": "287039"
  },
  {
    "text": "hascal its functions so that bottom level represents the code level",
    "start": "287039",
    "end": "292479"
  },
  {
    "text": "construct we have in the languages that we're using so that's it it's a set of simple uh hierarchical abstractions",
    "start": "292479",
    "end": "300280"
  },
  {
    "text": "C4 actually gets its name from the diagrams the diagram types uh and in this case the static structure diagram",
    "start": "300280",
    "end": "306919"
  },
  {
    "text": "types so C4 stands for contexts containers components and code so it's",
    "start": "306919",
    "end": "312400"
  },
  {
    "text": "four levels of diagrams that map onto the four levels of abstraction and what we're doing is we're starting with a",
    "start": "312400",
    "end": "318240"
  },
  {
    "text": "bunch of high level boxes we're zooming into a box to show the internals of that box we're then choosing another box to",
    "start": "318240",
    "end": "324280"
  },
  {
    "text": "show the internals of that box and so on and so forth right down to the code level if you want to although C4 has the",
    "start": "324280",
    "end": "331000"
  },
  {
    "text": "number four in the name I don't recommend using all four levels the four levels are therefore",
    "start": "331000",
    "end": "337800"
  },
  {
    "text": "completeness most teams only use the top two levels the context and the container",
    "start": "337800",
    "end": "344000"
  },
  {
    "text": "diagram and the concept here is diagrams as Maps so I live in Jersey in the Channel Islands if you open up Google",
    "start": "344000",
    "end": "350560"
  },
  {
    "text": "Maps on your phone and you do a search for Jersey you probably going to get that picture there so this is great if",
    "start": "350560",
    "end": "358840"
  },
  {
    "text": "you want to know where the airport is in Jersey and where the nice beaches are and where the roads are if you've never",
    "start": "358840",
    "end": "364759"
  },
  {
    "text": "heard of Jersey before it's too much detail too quickly how do you fix this problem with",
    "start": "364759",
    "end": "370639"
  },
  {
    "text": "Google Maps you pinch to zoom out to get some more context if you zoom in further and zoom",
    "start": "370639",
    "end": "378560"
  },
  {
    "text": "in and zoom in eventually you drop down to Google Street View which is a oneto one mapping with the real world when the",
    "start": "378560",
    "end": "384280"
  },
  {
    "text": "photos were taken I want to do the same thing with architecture diagrams I want us to have a collection of of",
    "start": "384280",
    "end": "390840"
  },
  {
    "text": "hierarchical architecture diagrams that allow us to tell different levels of detail different stories to different",
    "start": "390840",
    "end": "397479"
  },
  {
    "text": "audiences think about the last time you joined an existing project and they had like half a million lines of code and",
    "start": "397479",
    "end": "403960"
  },
  {
    "text": "they just dump you in the code base and say hey add this feature please that's too much detail too quickly you need to",
    "start": "403960",
    "end": "409960"
  },
  {
    "text": "zoom out to try and figure out what it is we're building here where it sits in the rest of the environment so yeah diagrams as Maps is a nice analogy",
    "start": "409960",
    "end": "417360"
  },
  {
    "text": "here I'm going to focus on the top two levels of diagrams before we get into the tooling side of this talk because it",
    "start": "417360",
    "end": "422599"
  },
  {
    "text": "just it kind of helps set the scene for what we're going to discuss later so the top level diagram of C4 is a system",
    "start": "422599",
    "end": "428599"
  },
  {
    "text": "context diagram in order to draw a system context diagram you need to answer these basic questions so what is",
    "start": "428599",
    "end": "437199"
  },
  {
    "text": "the thing we're building what is the scope of the thing we're building what features sit inside the thing we're",
    "start": "437199",
    "end": "442400"
  },
  {
    "text": "building and what features sit outside the thing we're building who is using the thing we are building the system or",
    "start": "442400",
    "end": "448720"
  },
  {
    "text": "the service and how does it fit into the world around it in other words what are the system integration points the",
    "start": "448720",
    "end": "454120"
  },
  {
    "text": "service to service integration points answer those questions and you can draw something like a system context diagram",
    "start": "454120",
    "end": "460639"
  },
  {
    "text": "so this is a real example diagram from one of the workshops I ran uh the group here have correctly identified this red",
    "start": "460639",
    "end": "467360"
  },
  {
    "text": "box is the Financial Risk system that the group were designing so this was an upfront design exercise they have",
    "start": "467360",
    "end": "473599"
  },
  {
    "text": "correctly identified two types of users and they have correctly identified the",
    "start": "473599",
    "end": "478639"
  },
  {
    "text": "external system systems in the organization that we need to have an integration point with so that's an",
    "start": "478639",
    "end": "484599"
  },
  {
    "text": "example of a system context diagram it's showing you the system we're building or describing or documenting or designing",
    "start": "484599",
    "end": "491080"
  },
  {
    "text": "and things around it but of course as developers and Architects we want more detail so how do",
    "start": "491080",
    "end": "496680"
  },
  {
    "text": "we do that we can drop down to level two and we can draw a container diagram to",
    "start": "496680",
    "end": "502520"
  },
  {
    "text": "draw a container diagram it's a different set of questions because now we're looking at a different level of detail so what are the major Tech",
    "start": "502520",
    "end": "509280"
  },
  {
    "text": "Technology Building Blocks what are the applications and the data stores that make up this system what are their",
    "start": "509280",
    "end": "515599"
  },
  {
    "text": "responsibilities and how do they communicate answer those questions and you can come with a diagram like this so",
    "start": "515599",
    "end": "522680"
  },
  {
    "text": "you'll notice the red box is now a lot lot bigger so now we we zoomed into the inside of that Financial Risk system red",
    "start": "522680",
    "end": "529040"
  },
  {
    "text": "box and we're showing the applications and the data stores that make up that system so here we have a couple of uh",
    "start": "529040",
    "end": "536880"
  },
  {
    "text": "Java spring service side things there's a couple of react uh frontend web apps",
    "start": "536880",
    "end": "542360"
  },
  {
    "text": "some data stores etc etc one thing I want you to notice because we're going to we're going to",
    "start": "542360",
    "end": "547839"
  },
  {
    "text": "talk about this later if I go back a seconds this is the context diagram you'll notice there are two users and",
    "start": "547839",
    "end": "555839"
  },
  {
    "text": "five software systems when we zoom into the Container diagram we should hopefully see two",
    "start": "555839",
    "end": "562440"
  },
  {
    "text": "users and five software systems there's one missing here but never mind which",
    "start": "562440",
    "end": "568120"
  },
  {
    "text": "one's missing the monitoring system as usual probably so we're repeating elements across our",
    "start": "568120",
    "end": "574760"
  },
  {
    "text": "diagrams and that's something that is going to be important to uh focus on later C4 is notation dependent a lot of",
    "start": "574760",
    "end": "582320"
  },
  {
    "text": "people on the Internet seem to think that C4 is blue and gray boxes that's not the case uh so you can use any shapes any colors that's entirely up to",
    "start": "582320",
    "end": "588800"
  },
  {
    "text": "you and you could also use uml if you want to so C4 is just a set of abstractions and a set of diagram types",
    "start": "588800",
    "end": "595959"
  },
  {
    "text": "whatever notation you want to use is entirely up to you and that's all fine by me so",
    "start": "595959",
    "end": "602760"
  },
  {
    "text": "tooling when it comes to tooling I've tried to assemble a list of all of the tools that provide some degree of",
    "start": "603000",
    "end": "609120"
  },
  {
    "text": "specific support for C4 on the C4 model.com website so click the link it takes you down some of these are",
    "start": "609120",
    "end": "615880"
  },
  {
    "text": "diagramming tools some are modeling tools some are commercials some are open source and there's a bunch of tick boox filters that you can use to try and find",
    "start": "615880",
    "end": "621720"
  },
  {
    "text": "some tools you might want to evaluate most teams generally use these",
    "start": "621720",
    "end": "628200"
  },
  {
    "text": "types of tools who's using these types of tools for drawing diagrams architecture diagrams yeah this is going to be a big number of people so this is",
    "start": "628200",
    "end": "634680"
  },
  {
    "text": "your Vio Lucid chart draw.io diagrams. net confluency glyphy style tools these",
    "start": "634680",
    "end": "640639"
  },
  {
    "text": "are general purpose diagramming tools you open a blank canvas a blank document and you start adding boxes and",
    "start": "640639",
    "end": "646880"
  },
  {
    "text": "arrows these are Fantastic Tools they're very sophisticated tools and I love them",
    "start": "646880",
    "end": "652360"
  },
  {
    "text": "but I do not recommend them for drawing software architecture diagrams especially if you're going to use C4",
    "start": "652360",
    "end": "660240"
  },
  {
    "text": "why am I saying this number one a general purpose diagramming tool can't",
    "start": "660240",
    "end": "665480"
  },
  {
    "text": "help you so you open up a blank diagram and",
    "start": "665480",
    "end": "671079"
  },
  {
    "text": "you're going to draw a system context diagram so you add a couple of boxes and then you decide to add a component to",
    "start": "671079",
    "end": "678279"
  },
  {
    "text": "your system context diagram there are not many rules in C4 but one of the rules is don't have components on a",
    "start": "678279",
    "end": "684440"
  },
  {
    "text": "system context diagram a system context diagram should really only include people and software systems so we've",
    "start": "684440",
    "end": "690680"
  },
  {
    "text": "broken one of the rules of C4 here and the diagramming tool can't tell you that you've done that because it doesn't know",
    "start": "690680",
    "end": "696279"
  },
  {
    "text": "what you're doing all it sees is boxes and arrows of different colors so there's no rules there's no guidance",
    "start": "696279",
    "end": "701440"
  },
  {
    "text": "there's no semantics number two there's no consistency the",
    "start": "701440",
    "end": "708800"
  },
  {
    "text": "responsibility is on your shoulders to provide consistency across all of your diagrams so you sketch up your context",
    "start": "708800",
    "end": "716240"
  },
  {
    "text": "diagram on the left and then you open up a new new tab a new diagram a new canvas",
    "start": "716240",
    "end": "721760"
  },
  {
    "text": "and you start to sketch out your container diagram and then you decide you want to rename something so here",
    "start": "721760",
    "end": "727639"
  },
  {
    "text": "you'll notice the names don't match remember when I showed you the",
    "start": "727639",
    "end": "732800"
  },
  {
    "text": "example drawings we repeated the users and the software systems you have to do that with",
    "start": "732800",
    "end": "738199"
  },
  {
    "text": "C4 which one of these two names is correct see now we've got an inconsistency we have to go back and",
    "start": "738199",
    "end": "744440"
  },
  {
    "text": "make sure everything matches this is fine if you only have two diagrams if you now have 20 diagrams this gets much",
    "start": "744440",
    "end": "750000"
  },
  {
    "text": "more complicated much more quickly we like using git and source",
    "start": "750000",
    "end": "756600"
  },
  {
    "text": "code control tools we like putting these diagrams in source code control so we can have easy access to them and Version",
    "start": "756600",
    "end": "763040"
  },
  {
    "text": "Control them and pull request them etc etc if you try and dump out many of these diagramming tools to text based",
    "start": "763040",
    "end": "768880"
  },
  {
    "text": "formats you often get a horrible big bass 64 encoded string or an XML",
    "start": "768880",
    "end": "774000"
  },
  {
    "text": "file these things tend to mix up the content and the presentation so if you",
    "start": "774000",
    "end": "779320"
  },
  {
    "text": "have an architecture diagram and you change the color of one box you'll get a completely different file which is kind",
    "start": "779320",
    "end": "784600"
  },
  {
    "text": "of annoying it makes your diff absolutely gigantic if you can diff it of course so",
    "start": "784600",
    "end": "791240"
  },
  {
    "text": "this mixing of content and presentation makes diffs really hard to do you can't",
    "start": "791240",
    "end": "796519"
  },
  {
    "text": "automate many of these tools imagine you have an AWS or an Azure environment it's",
    "start": "796519",
    "end": "802480"
  },
  {
    "text": "very hard to point some tooling at these environments to reverse engineer a diagram and create that automatically in",
    "start": "802480",
    "end": "808639"
  },
  {
    "text": "a tool like Vis there are ways to do it but it's not particularly straightforward these tools are very hard to integrate into cicd and build",
    "start": "808639",
    "end": "817160"
  },
  {
    "text": "pipelines and these tools are a pain in the ass right this is my biggest problem",
    "start": "817160",
    "end": "822600"
  },
  {
    "text": "with these tools you spend far too long lining boxes up you'll notice that Arrow",
    "start": "822600",
    "end": "828279"
  },
  {
    "text": "looks straight it's not it's one pixel out and we've all been there and we've all done it you have to start nudging",
    "start": "828279",
    "end": "833920"
  },
  {
    "text": "elements around the canvas and then you get the text in the top box which just fits but maybe we should take the make",
    "start": "833920",
    "end": "841160"
  },
  {
    "text": "the text smaller but now should we make the text smaller in all boxes or just that one box right we shouldn't have to",
    "start": "841160",
    "end": "847160"
  },
  {
    "text": "be dealing with these sorts of silly issues so back in uh October",
    "start": "847160",
    "end": "853519"
  },
  {
    "text": "2020 that time that some of us would maybe rather forget uh the thoughtworks tech radar blipped diagrams as code as a",
    "start": "853519",
    "end": "860680"
  },
  {
    "text": "thing uh they recommend the trial diagrams as code is basically instead of using a UI to draw some pictures you",
    "start": "860680",
    "end": "866839"
  },
  {
    "text": "write some texts some DSL some code and the tooling creates diagrams for you the",
    "start": "866839",
    "end": "872160"
  },
  {
    "text": "most popular and frequently seen tools are plant uml and",
    "start": "872160",
    "end": "878240"
  },
  {
    "text": "merid diagrams this code is great because as developers we like text we have tons of tooling to support text IDs",
    "start": "878240",
    "end": "884959"
  },
  {
    "text": "vs code etc etc uh it's easy to author we can automate these things because",
    "start": "884959",
    "end": "890320"
  },
  {
    "text": "many of these tools are command line driven the text files are text so they fit in source code control nicely",
    "start": "890320",
    "end": "895800"
  },
  {
    "text": "they're easy to diff there's lots of good automation opportunities with these types of",
    "start": "895800",
    "end": "902079"
  },
  {
    "text": "tools there's something called C4 plant uml so plant uml is a generic kind of",
    "start": "902079",
    "end": "908320"
  },
  {
    "text": "uml based tool for drawing uml style diagrams uh C4 plant uml is essentially",
    "start": "908320",
    "end": "914360"
  },
  {
    "text": "a set a macros that sits on top of plant Emil and allows you to describe C4",
    "start": "914360",
    "end": "919600"
  },
  {
    "text": "Concepts using terms like person and Software System so it kind of elevates",
    "start": "919600",
    "end": "924800"
  },
  {
    "text": "you uh into a much more C4 style domain specific language so that's quite nice that's what a lot",
    "start": "924800",
    "end": "931519"
  },
  {
    "text": "of people start with when they want to draw C4 diagrams with the diagrams as Cod",
    "start": "931519",
    "end": "936560"
  },
  {
    "text": "tool the problem with these tools is that they are still diagramming",
    "start": "936560",
    "end": "942440"
  },
  {
    "text": "tools if you want to create two diagrams you have to create two text files if you",
    "start": "942440",
    "end": "949040"
  },
  {
    "text": "want to rename an element you have to rename it in both text files there are",
    "start": "949040",
    "end": "955160"
  },
  {
    "text": "ways you can do include so you can include a common set of elements in multiple text files and as developers we",
    "start": "955160",
    "end": "961279"
  },
  {
    "text": "do have vs code and we can use Global search to replace so some of these problems are solvable but fundamentally",
    "start": "961279",
    "end": "968160"
  },
  {
    "text": "if you want two diagrams you have to create two text files we're using plant uml and mermaid as an input format",
    "start": "968160",
    "end": "977319"
  },
  {
    "text": "here I want to change how we do this as an industry and I want us to move away",
    "start": "977319",
    "end": "983639"
  },
  {
    "text": "from diagramming and back to modeling now when I say modeling lot of old",
    "start": "983639",
    "end": "989040"
  },
  {
    "text": "people in the room get scared because we've all seen this you know back in the early 2000s late '90s rashal Rose who's",
    "start": "989040",
    "end": "995360"
  },
  {
    "text": "who used rashal Rose here anybody Yellow Boxes with a purple or",
    "start": "995360",
    "end": "1000639"
  },
  {
    "text": "pink border that looks absolutely horrible so rashal Rose was a very big very expensive very bloated tool we used",
    "start": "1000639",
    "end": "1006880"
  },
  {
    "text": "to spend months and months and months plowing all of the information to these tools to get some wonderful looking diagrams and then the project gets",
    "start": "1006880",
    "end": "1013279"
  },
  {
    "text": "cancelled there's lots of bad associations around modeling and modeling tools and that's why many teams",
    "start": "1013279",
    "end": "1020720"
  },
  {
    "text": "have thrown all of this modeling stuff away and they've really gone back to drawing sketches on a whiteboard that's",
    "start": "1020720",
    "end": "1026760"
  },
  {
    "text": "led us to the problem we have today where those sketches are completely incomprehensible so I'm a big fan of",
    "start": "1026760",
    "end": "1033319"
  },
  {
    "text": "modeling but I don't necessarily want to take us back to rashal Rose I want to do something a little bit different so",
    "start": "1033319",
    "end": "1039280"
  },
  {
    "text": "during the pandemic uh so the way I earn most of my living is I fly around the world and teach people how to do",
    "start": "1039280",
    "end": "1044520"
  },
  {
    "text": "software architecture diagrams it turns out you can't do that when you're not allowed to leave your Island live on so",
    "start": "1044520",
    "end": "1049840"
  },
  {
    "text": "I had not much to do and I built some tooling called the structurized DSL uh everything I'm going to show you is all",
    "start": "1049840",
    "end": "1055799"
  },
  {
    "text": "open source it's all available in GitHub the structurized DSL is an open source text based domain specific language that",
    "start": "1055799",
    "end": "1062679"
  },
  {
    "text": "I designed specifically for crafting up C4 architecture",
    "start": "1062679",
    "end": "1068280"
  },
  {
    "text": "diagrams I like to call this diagrams this code two so if you want to create two",
    "start": "1068280",
    "end": "1074280"
  },
  {
    "text": "diagrams what you do is you create a single file and have the tooling spit out and create and automatically",
    "start": "1074280",
    "end": "1079760"
  },
  {
    "text": "generate multiple diagrams this is the concept of modeling the concept of of a",
    "start": "1079760",
    "end": "1084919"
  },
  {
    "text": "model is fairly straightforward you create yourself a single dictionary of all of your elements and relationships",
    "start": "1084919",
    "end": "1090400"
  },
  {
    "text": "and then you reuse them across your diagrams if you want to rename an element you rename it in your model in",
    "start": "1090400",
    "end": "1095880"
  },
  {
    "text": "your dictionary have your tooling regenerate your pictures and everything is now completely in sync That's The",
    "start": "1095880",
    "end": "1101440"
  },
  {
    "text": "Power of model why is this useful many people",
    "start": "1101440",
    "end": "1107559"
  },
  {
    "text": "start out with c for plant uml they create a bunch of text files in plant uml format and that works for small",
    "start": "1107559",
    "end": "1113360"
  },
  {
    "text": "projects or small code bases and then over time they add more they want to model more systems in their environment",
    "start": "1113360",
    "end": "1119720"
  },
  {
    "text": "in their group in their department and they start to get inconsistencies between all these different diagrams and",
    "start": "1119720",
    "end": "1125200"
  },
  {
    "text": "I've seen this I've seen many teams move from tools like plant uml and mermaid to the structurized DSL because it fixes",
    "start": "1125200",
    "end": "1132000"
  },
  {
    "text": "the inconsistency problems which means you can now start to do things like enterprise-wide modeling of all of your",
    "start": "1132000",
    "end": "1137960"
  },
  {
    "text": "software systems for example so really this is models as code as opposed to diagrams as code and I",
    "start": "1137960",
    "end": "1145039"
  },
  {
    "text": "guess more accurately this is really just focusing on C4 models as code there's one concept I'm going to talk to",
    "start": "1145039",
    "end": "1151520"
  },
  {
    "text": "you about before we dive into a tooling demo and that's called a workspace a workspace is nothing more than a wrapper",
    "start": "1151520",
    "end": "1156720"
  },
  {
    "text": "for a model which is a set of elements and relationships a set of views the",
    "start": "1156720",
    "end": "1162919"
  },
  {
    "text": "views get rendered to diagrams and some supplementary documentation if you want it so",
    "start": "1162919",
    "end": "1169080"
  },
  {
    "text": "enough of the slides let's jump into demo I have Docker running here and in",
    "start": "1169080",
    "end": "1174440"
  },
  {
    "text": "addition to the structurized DSL I built some tooling called structurize light structurize light is a Java spring boot",
    "start": "1174440",
    "end": "1181400"
  },
  {
    "text": "application uh half server side half client side in JavaScript and essentially it's a rendering engine for",
    "start": "1181400",
    "end": "1187120"
  },
  {
    "text": "these diagrams so what I'm going to do here's my desktop which is currently empty I'm going to start up",
    "start": "1187120",
    "end": "1193600"
  },
  {
    "text": "structurizing light uh let me show you the script first this is just booting up a a docket image doing a port map and",
    "start": "1193600",
    "end": "1200360"
  },
  {
    "text": "doing a volume Mount so I'm going to start up structurize the light against a folder on my desktop which doesn't yet",
    "start": "1200360",
    "end": "1207000"
  },
  {
    "text": "exist called NDC so I'm going to start that up here you go structurize the light",
    "start": "1207000",
    "end": "1215159"
  },
  {
    "text": "this is available on Docker Hub it's also available as a spring boot War file if you want to run it that way so now",
    "start": "1215159",
    "end": "1220360"
  },
  {
    "text": "structurized light is running we can go to Chrome go to Lost",
    "start": "1220360",
    "end": "1225440"
  },
  {
    "text": "880 and we have a diagram so where did this diagram come from so",
    "start": "1225440",
    "end": "1232159"
  },
  {
    "text": "what we have here on our desktop is now the NDC folder and inside the NDC folder is a file called",
    "start": "1232159",
    "end": "1239200"
  },
  {
    "text": "workspace.com assigning that to an identifier called Software System just to be confusing and we're creating a",
    "start": "1257120",
    "end": "1262559"
  },
  {
    "text": "link a relationship between the user and the software system with a description of users we're defining system context",
    "start": "1262559",
    "end": "1268440"
  },
  {
    "text": "View for the Software System that's just a diagram identifier and we're saying",
    "start": "1268440",
    "end": "1273480"
  },
  {
    "text": "include star what include star does here is it says include that software system",
    "start": "1273480",
    "end": "1279559"
  },
  {
    "text": "and include anything pointing to it or pointing from it so this little bit of",
    "start": "1279559",
    "end": "1284919"
  },
  {
    "text": "text gives us this diagram here",
    "start": "1284919",
    "end": "1290039"
  },
  {
    "text": "one thing you'll notice with many of the plant uml mermaid star tools is they are all automatic",
    "start": "1290279",
    "end": "1296360"
  },
  {
    "text": "layout automatic layout I think works okay for small diagrams I don't like it",
    "start": "1296360",
    "end": "1302960"
  },
  {
    "text": "I don't like automatic layout because when I'm drawing a software architecture diagram I want to put boxes in a",
    "start": "1302960",
    "end": "1308400"
  },
  {
    "text": "specific place I want a a nice flow from left to right or top to bottom I want my",
    "start": "1308400",
    "end": "1314360"
  },
  {
    "text": "web apps at the top and my databases at the bottom and sometimes automatic lout doesn't NE neily do that in the way I want it to so this structurer light",
    "start": "1314360",
    "end": "1321440"
  },
  {
    "text": "tooling by default is a manual layout tool so what we can do now is we can start moving boxes around we can change",
    "start": "1321440",
    "end": "1328559"
  },
  {
    "text": "the canvas size we can introduce line brakes we can change the rooting of things this will",
    "start": "1328559",
    "end": "1336000"
  },
  {
    "text": "save we can go back to the DSL we can now change the name of something so let's call that business user save it go",
    "start": "1336000",
    "end": "1343279"
  },
  {
    "text": "back refresh and there's a merging algorithm built into this tool L that tries to figure out what you just changed and replaces it on the diagram",
    "start": "1343279",
    "end": "1351640"
  },
  {
    "text": "accordingly now some of you might be thinking well where are these box coordinates stored because it's not in",
    "start": "1351640",
    "end": "1358039"
  },
  {
    "text": "the DSL file and you're absolutely correct there's a Json file here and the",
    "start": "1358039",
    "end": "1363159"
  },
  {
    "text": "Json file contains um the full kind of breakdown of that workspace definition",
    "start": "1363159",
    "end": "1370200"
  },
  {
    "text": "so here we have our model and our people and here's our business user bunch more",
    "start": "1370200",
    "end": "1375720"
  },
  {
    "text": "stuff here's our Software System and here's the view with all of the XY",
    "start": "1375720",
    "end": "1380760"
  },
  {
    "text": "coordinates so what you can now do is you can take this folder check these two files in source code control and now",
    "start": "1380760",
    "end": "1387480"
  },
  {
    "text": "anybody on on your team can boot up the structurize a light Docker container with that folder and see exactly the",
    "start": "1387480",
    "end": "1393760"
  },
  {
    "text": "same diagrams so that's generally how I prefer to use this tooling it's a it's a manual layout based",
    "start": "1393760",
    "end": "1400240"
  },
  {
    "text": "tooling for the purposes of the rest of this demo I'm going to switch to automatic layout because it makes it a",
    "start": "1400240",
    "end": "1405559"
  },
  {
    "text": "little bit quicker uh you can do that by saying automatic layout uh left right we'll",
    "start": "1405559",
    "end": "1413000"
  },
  {
    "text": "go so here we have an automatic layout version of that same diagram so let's imagine now that we",
    "start": "1413000",
    "end": "1419440"
  },
  {
    "text": "have crafted our context diagram and we're happy with this and we want to now",
    "start": "1419440",
    "end": "1424880"
  },
  {
    "text": "draw a container diagram for this same Software System how do we do that we go",
    "start": "1424880",
    "end": "1429960"
  },
  {
    "text": "into here we add a set of curly braces and now we start defining the containers",
    "start": "1429960",
    "end": "1435080"
  },
  {
    "text": "that sit inside that Software System",
    "start": "1435080",
    "end": "1439880"
  },
  {
    "text": "we'll wait for that to go past so let's define a um a web",
    "start": "1442799",
    "end": "1448640"
  },
  {
    "text": "application and that's going to be a C4 model container uh we'll just call it web",
    "start": "1448640",
    "end": "1455120"
  },
  {
    "text": "application uh let's define a database I give that a name database and",
    "start": "1455120",
    "end": "1462320"
  },
  {
    "text": "let's say that the user has a link to the web application with a description",
    "start": "1462320",
    "end": "1467440"
  },
  {
    "text": "of us users and the web app has a link to the database with the description of reads from and writes to so if I save",
    "start": "1467440",
    "end": "1476600"
  },
  {
    "text": "this and go back here and refresh what's going to happen any",
    "start": "1476600",
    "end": "1482360"
  },
  {
    "text": "ideas nothing so I've added elements into my",
    "start": "1482440",
    "end": "1488399"
  },
  {
    "text": "model but I've not created A View to uh visualize those elements so what we need",
    "start": "1488399",
    "end": "1494279"
  },
  {
    "text": "to do is we need to create a C4 container diagram how do we do that that what we do is copy paste this",
    "start": "1494279",
    "end": "1502399"
  },
  {
    "text": "block we change this so we want a container View for the Software System",
    "start": "1502399",
    "end": "1508440"
  },
  {
    "text": "we'll need to change this diagram identify include start is now going to do something different include start is",
    "start": "1508440",
    "end": "1514600"
  },
  {
    "text": "going to say include all of the containers inside that software system and everything linked to it and I'm",
    "start": "1514600",
    "end": "1520760"
  },
  {
    "text": "going to apply automatically out once again so if I save that go back here refresh you'll notice there's a little",
    "start": "1520760",
    "end": "1528200"
  },
  {
    "text": "magnifying glass here now we can double click and we drop down to level two and we see the container diagram for that",
    "start": "1528200",
    "end": "1534159"
  },
  {
    "text": "software system so we have the user using the web application which is reading from and writing to the",
    "start": "1534159",
    "end": "1541320"
  },
  {
    "text": "database we can start to now add uh more description onto this diagram if we want",
    "start": "1541320",
    "end": "1546440"
  },
  {
    "text": "to so we can say um",
    "start": "1546440",
    "end": "1551480"
  },
  {
    "text": "description stores interesting data and that will show up on the diagram there",
    "start": "1551480",
    "end": "1558440"
  },
  {
    "text": "there and we can start our technology choices and things like that as well so we can",
    "start": "1558440",
    "end": "1563960"
  },
  {
    "text": "say technology my",
    "start": "1563960",
    "end": "1569000"
  },
  {
    "text": "SQL and that has appeared just there as",
    "start": "1569039",
    "end": "1574360"
  },
  {
    "text": "well so something I want to point out with all of this because we we're really talking about the concept of modeling",
    "start": "1576240",
    "end": "1581679"
  },
  {
    "text": "here one of the concepts we always talk about in software development in coding is do not repeat yourself",
    "start": "1581679",
    "end": "1588720"
  },
  {
    "text": "dry but I've done exactly that so I have a link user to the software system with a",
    "start": "1588720",
    "end": "1596000"
  },
  {
    "text": "description of users and pretty much the same relationship between the user and the web application so I've had to",
    "start": "1596000",
    "end": "1602840"
  },
  {
    "text": "repeat myself and I don't want to do that because I want to make this simpler",
    "start": "1602840",
    "end": "1609080"
  },
  {
    "text": "for me to change the names of these descriptions in the future if I want to how do I fix this problem the answer",
    "start": "1609080",
    "end": "1616200"
  },
  {
    "text": "is delete that one so now in this text file we're deling we are defining two relationships",
    "start": "1616200",
    "end": "1623640"
  },
  {
    "text": "user to the web app web app to the database so if I save this go back to my container diagram refresh these are the",
    "start": "1623640",
    "end": "1631399"
  },
  {
    "text": "two arrows we've just defined in the text file if I go back to my context diagram this arrow is still here so this",
    "start": "1631399",
    "end": "1639840"
  },
  {
    "text": "is a feature of this tooling called implied relationships because there is a relationship between the user and the",
    "start": "1639840",
    "end": "1645679"
  },
  {
    "text": "web application and the web application sits inside the Software System there is",
    "start": "1645679",
    "end": "1650919"
  },
  {
    "text": "an implicit or an implied link between the user and the Software System itself and the tooling kind of works it out and",
    "start": "1650919",
    "end": "1656960"
  },
  {
    "text": "adds it for you you can customize this you can add your own strategies for doing this your own algorithms or you",
    "start": "1656960",
    "end": "1662640"
  },
  {
    "text": "can disable it entirely so there's a whole bunch of ways you can do this just as a point to note the the tooling that",
    "start": "1662640",
    "end": "1668279"
  },
  {
    "text": "sits underneath this DSL is basically an open source Java library and there are ways to go from the DSL into that open",
    "start": "1668279",
    "end": "1676000"
  },
  {
    "text": "source Java Library so you have complet complete control over everything that sits underneath this as well so that's a",
    "start": "1676000",
    "end": "1682480"
  },
  {
    "text": "kind of quick demo on the concept of modeling creating context diagram adding some containers etc",
    "start": "1682480",
    "end": "1688640"
  },
  {
    "text": "etc we need to make this diagram look pretty like a a bunch of gray boxes is",
    "start": "1688640",
    "end": "1694279"
  },
  {
    "text": "not exciting at all and most people do not want to put diagrams like this in their documentation so how do we change",
    "start": "1694279",
    "end": "1700200"
  },
  {
    "text": "the color and stars of these things if any any of you have done front end development so you you draft up a",
    "start": "1700200",
    "end": "1707240"
  },
  {
    "text": "bunch of of HTML elements and you add CSS tags and you you apply Styles via tags um sorry CSS classes this is the",
    "start": "1707240",
    "end": "1715080"
  },
  {
    "text": "same type of thing so I can enable tool tips here and if I hover the mouse over",
    "start": "1715080",
    "end": "1721159"
  },
  {
    "text": "you'll see that this business user this person element has an element tag and a",
    "start": "1721159",
    "end": "1726240"
  },
  {
    "text": "person tag the software system has an element tag and a software system",
    "start": "1726240",
    "end": "1731480"
  },
  {
    "text": "tag and containers have an element tag and a container tag so there are a predefined set of tags that get",
    "start": "1731480",
    "end": "1737440"
  },
  {
    "text": "associated with these elements and what we want to do is we want to basically add styles for these tags to change the",
    "start": "1737440",
    "end": "1743640"
  },
  {
    "text": "look and feel of these diagrams we're essentially separating content from",
    "start": "1743640",
    "end": "1749200"
  },
  {
    "text": "presentation so what we can do now is we can go down here and we can add a Styles",
    "start": "1749200",
    "end": "1754440"
  },
  {
    "text": "block and we can say add and element style for the element tag the background",
    "start": "1754440",
    "end": "1760320"
  },
  {
    "text": "is going to be let's go orange so this changes all of the",
    "start": "1760320",
    "end": "1765960"
  },
  {
    "text": "elements to Orange so we've we've applied uh that style to the element tag which kind of hits",
    "start": "1765960",
    "end": "1772320"
  },
  {
    "text": "everything if we want only want to change the shape of the person we can essentially do the same",
    "start": "1772320",
    "end": "1778360"
  },
  {
    "text": "thing we can create an element style for the person tag background orange red I think is a",
    "start": "1778360",
    "end": "1785600"
  },
  {
    "text": "color and shape person so now we've basically Chang the",
    "start": "1785600",
    "end": "1792320"
  },
  {
    "text": "color of all people so if you have a nice kind of corporate color scheme you can just write yourself a bunch of styles and have this applied to all of",
    "start": "1792320",
    "end": "1798399"
  },
  {
    "text": "your diagrams super simply or you can or you can disable it and override it of course so that we've got our context",
    "start": "1798399",
    "end": "1805720"
  },
  {
    "text": "diagram we can double click in here I want to change this database shape to a",
    "start": "1805720",
    "end": "1811799"
  },
  {
    "text": "cylinder if I look at the tags element and container element and container what",
    "start": "1811799",
    "end": "1817640"
  },
  {
    "text": "I need to do is I need to add a tag for the database element and then add a an element star for that database tag so",
    "start": "1817640",
    "end": "1824640"
  },
  {
    "text": "let's do that here we go back to about database definition",
    "start": "1824640",
    "end": "1830240"
  },
  {
    "text": "tags database save refresh tool tips so",
    "start": "1830240",
    "end": "1835840"
  },
  {
    "text": "now we have a database tag sitting on that element and now what we can do is we can go element style for the database",
    "start": "1835840",
    "end": "1843840"
  },
  {
    "text": "tag shape cylinder so now we have a database",
    "start": "1843840",
    "end": "1849360"
  },
  {
    "text": "shape one of the things I said during the little presentation part is if you're going to use boxes and arrows make sure you do um so with structural",
    "start": "1849360",
    "end": "1857360"
  },
  {
    "text": "in mind so the C4 model gives you structure but what about the self-describing notation part I've got a",
    "start": "1857360",
    "end": "1862720"
  },
  {
    "text": "bunch of orange boxes well it turns out that this diagramming rendering engine generates you a diagram key",
    "start": "1862720",
    "end": "1869679"
  },
  {
    "text": "automatically so it looks at what the elements tags are and the Styles and kind of pulls all this information",
    "start": "1869679",
    "end": "1875200"
  },
  {
    "text": "together and generates you a diagram key automatically so this is another thing that this kind of tooling uh takes away",
    "start": "1875200",
    "end": "1881360"
  },
  {
    "text": "from your hands which is quite nice um what else can we do with this we",
    "start": "1881360",
    "end": "1886960"
  },
  {
    "text": "can add things like icons if we want to so uh I have an icon here for spring",
    "start": "1886960",
    "end": "1892120"
  },
  {
    "text": "boot let's copy that into this folder let's go to the web",
    "start": "1892120",
    "end": "1900159"
  },
  {
    "text": "application and say uh tags spring",
    "start": "1900159",
    "end": "1905760"
  },
  {
    "text": "boot we can go down here create an element style for the spring boot tag",
    "start": "1905760",
    "end": "1913039"
  },
  {
    "text": "icon spring boot dobot boot do",
    "start": "1913039",
    "end": "1919158"
  },
  {
    "text": "PNG now we have a rather horrible green logo on an orange background so that might not look very nice uh but that's",
    "start": "1919840",
    "end": "1925880"
  },
  {
    "text": "also included in the diagram key now so every time you apply that spring boots tag you get that exact same",
    "start": "1925880",
    "end": "1933960"
  },
  {
    "text": "styling so that's the basics of the structurize uh",
    "start": "1933960",
    "end": "1939480"
  },
  {
    "text": "renderer something I want to point out is that this is one rendering tool the",
    "start": "1939480",
    "end": "1946000"
  },
  {
    "text": "structurer DSL this thing here is rendering tool independent so you can actually render",
    "start": "1946000",
    "end": "1953200"
  },
  {
    "text": "this same diagram with many many tools so what I'm going to do here is I'm going to uh take out",
    "start": "1953200",
    "end": "1960399"
  },
  {
    "text": "the icon for a reason I'll explain in a second I'm going to copy this file into",
    "start": "1960399",
    "end": "1967320"
  },
  {
    "text": "my clipboard I'm going to go to so at structu ris.com DSL there is a",
    "start": "1967320",
    "end": "1974440"
  },
  {
    "text": "demo page I've set up it has a text editor on the left hand side and a diagram on the right hand side I'm going",
    "start": "1974440",
    "end": "1980840"
  },
  {
    "text": "to paste in this example here go render so this is going to give us the same example we just had locally with",
    "start": "1980840",
    "end": "1986919"
  },
  {
    "text": "structurized light so this is a nice way to try this tooling out if you want to try it out without installing anything",
    "start": "1986919",
    "end": "1992720"
  },
  {
    "text": "so this is the structu light renderer essentially now hosted on the",
    "start": "1992720",
    "end": "1998120"
  },
  {
    "text": "structurize export Library this is a bunch of java code that basically takes those uh view definitions from the DSL",
    "start": "2001559",
    "end": "2007919"
  },
  {
    "text": "file and converts them to something like plant uml and I've embedded those",
    "start": "2007919",
    "end": "2013559"
  },
  {
    "text": "exporters the export Library into this demo page on the website so if we uh get rid of",
    "start": "2013559",
    "end": "2019320"
  },
  {
    "text": "that so here is the plant uml definition of the container diagram which I can",
    "start": "2019320",
    "end": "2024399"
  },
  {
    "text": "render in browser and there's the diagram key so here you have an alternative",
    "start": "2024399",
    "end": "2030279"
  },
  {
    "text": "visualization of that exact same diagram Now using the plant gml tooling and the",
    "start": "2030279",
    "end": "2035480"
  },
  {
    "text": "context diagram will be similar something you'll notice is",
    "start": "2035480",
    "end": "2043360"
  },
  {
    "text": "different tools look and feel different so what I've done is I've tried to",
    "start": "2043360",
    "end": "2048440"
  },
  {
    "text": "replicate the look and feel of the structurize rendering engine in some of these other diagrams as code tools it",
    "start": "2048440",
    "end": "2055079"
  },
  {
    "text": "gets close but not always um exactly the same so there's an export to plant uml",
    "start": "2055079",
    "end": "2060679"
  },
  {
    "text": "uh there's an export to C4 plant uml C4 plant uml comes with its own uh blue and",
    "start": "2060679",
    "end": "2067118"
  },
  {
    "text": "gray styling um so that's what you'll get by default but it is possible to override",
    "start": "2067119",
    "end": "2073720"
  },
  {
    "text": "that um so if I go here I can say properties C4 plant uml do tags",
    "start": "2073720",
    "end": "2085079"
  },
  {
    "text": "true go render and this should look orange",
    "start": "2085079",
    "end": "2090240"
  },
  {
    "text": "now yeah so this is now a C4 PL gml export with those styles from the",
    "start": "2090240",
    "end": "2096358"
  },
  {
    "text": "workspace so when you're crafting up plant uml and mermaid diagrams by hand you're using",
    "start": "2096359",
    "end": "2103480"
  },
  {
    "text": "plant uml and mermaid as an input format this tooling is using it as an output",
    "start": "2103480",
    "end": "2109280"
  },
  {
    "text": "format so that's one of the reasons this is rendering tool independent uh there's an export for",
    "start": "2109280",
    "end": "2115400"
  },
  {
    "text": "mermaid so mermaid is picking up in popularity because it's Now supported on",
    "start": "2115400",
    "end": "2120640"
  },
  {
    "text": "GB you can uh render these things natively in readme.md files for example so that's the container diagram",
    "start": "2120640",
    "end": "2127480"
  },
  {
    "text": "this is the context diagram there's an export for the dot format for use with tools like graphers and if you have",
    "start": "2127480",
    "end": "2135200"
  },
  {
    "text": "Dynamic diagrams you can export those to web sequence diagrams format as well so there's a bunch of stuff you can do here",
    "start": "2135200",
    "end": "2141760"
  },
  {
    "text": "and this is all open sources or Java you can write your own exporters to export to other diagrams as code Type formats",
    "start": "2141760",
    "end": "2148119"
  },
  {
    "text": "if you want to if you really want to you could potentially export the DSL to",
    "start": "2148119",
    "end": "2153839"
  },
  {
    "text": "something like viso now I'm not suggesting you do that but it is something that you could do if you really wanted to so that's a quick demo",
    "start": "2153839",
    "end": "2161520"
  },
  {
    "text": "of the the kind of basics of the structurize rendering engine crafting up a model and um exporting it to different",
    "start": "2161520",
    "end": "2169319"
  },
  {
    "text": "formats on that note if you want to export these formats from something like a cicd build process and we shut down",
    "start": "2169319",
    "end": "2176839"
  },
  {
    "text": "structu light uh there's something called the structurize CLI uh just like a command line interface tool for this",
    "start": "2176839",
    "end": "2182640"
  },
  {
    "text": "uh this stuff which I have installed here and you can say export",
    "start": "2182640",
    "end": "2187800"
  },
  {
    "text": "the workspace is um user Simon desktop",
    "start": "2187800",
    "end": "2192920"
  },
  {
    "text": "NDC workspace dodsl format plant uml so",
    "start": "2192920",
    "end": "2198440"
  },
  {
    "text": "that will generate me a bunch of plant uml files in that folder so again you",
    "start": "2198440",
    "end": "2203640"
  },
  {
    "text": "can have people check this DSL file in and then your cic bu process can generate you a bunch of plant uml files",
    "start": "2203640",
    "end": "2210040"
  },
  {
    "text": "which you then stick in Source Cod control or do whatever you want with in terms of the DSL itself um once",
    "start": "2210040",
    "end": "2216920"
  },
  {
    "text": "you start getting larger DSL files you might think how do I split this up there's a way to include fragments so",
    "start": "2216920",
    "end": "2223359"
  },
  {
    "text": "you can you can draft up a bunch of uh components or containers in a separate file and include it into your main file",
    "start": "2223359",
    "end": "2228960"
  },
  {
    "text": "and there's also a workspace extension feature so what you can do with the workspace extension feature is you can",
    "start": "2228960",
    "end": "2234119"
  },
  {
    "text": "have a single workspace that defines all of your software systems and then you can have every",
    "start": "2234119",
    "end": "2239560"
  },
  {
    "text": "individual team extend that workspace and add their C4 model drill down",
    "start": "2239560",
    "end": "2244920"
  },
  {
    "text": "diagrams for this their specific system if any of if anyone here is using tools",
    "start": "2244920",
    "end": "2250280"
  },
  {
    "text": "like backstage um a spotify's backstage tool or like a service catalog it's the same type of approach you define your",
    "start": "2250280",
    "end": "2256560"
  },
  {
    "text": "service catalog your system catalog and then you have individual workspaces extending that service catalog to fill",
    "start": "2256560",
    "end": "2262680"
  },
  {
    "text": "in the implementation details so something I see a lot of teams doing is that is they want an Enterprise wide view of the of their software systems",
    "start": "2262680",
    "end": "2269720"
  },
  {
    "text": "but they want teams to own the individual documentation for those software systems so that use case is",
    "start": "2269720",
    "end": "2275480"
  },
  {
    "text": "also supported by the this tooling there's also some other nice things you can do with this tooling um",
    "start": "2275480",
    "end": "2281319"
  },
  {
    "text": "let me boot up structurize the light",
    "start": "2281319",
    "end": "2284839"
  },
  {
    "text": "again if I go back to this",
    "start": "2289920",
    "end": "2293880"
  },
  {
    "text": "diagram so you'll notice on this diagram we've lost the spring boot icon",
    "start": "2296040",
    "end": "2301480"
  },
  {
    "text": "we'll bring that back in a second but this container doesn't have any technology choices like my SQL does so",
    "start": "2301480",
    "end": "2306599"
  },
  {
    "text": "let's add a technology description here of spring",
    "start": "2306599",
    "end": "2311359"
  },
  {
    "text": "boot if I can type properly so that's going to now add",
    "start": "2313400",
    "end": "2318720"
  },
  {
    "text": "spring boot into my diagram and if I bring back that element",
    "start": "2318720",
    "end": "2324680"
  },
  {
    "text": "star for the spring boots tag uh let's go",
    "start": "2324680",
    "end": "2331920"
  },
  {
    "text": "background green again",
    "start": "2331920",
    "end": "2339240"
  },
  {
    "text": "duplication so I've mentioned spring boots twice here which is kind of annoying it would be really nice if we",
    "start": "2339960",
    "end": "2346960"
  },
  {
    "text": "could just set the technology to Spring Boot and have a tag kind of automatically associated with that",
    "start": "2346960",
    "end": "2352800"
  },
  {
    "text": "technology choice and that's something you can do so what I'll do now is I'll delete that tag so I'll go back here and",
    "start": "2352800",
    "end": "2358480"
  },
  {
    "text": "refresh so now we've lost the spring boots tag we're just back to element and",
    "start": "2358480",
    "end": "2364720"
  },
  {
    "text": "container the DSL actually supports uh a bunch of scripting languages that are supported by the underlying",
    "start": "2364720",
    "end": "2371280"
  },
  {
    "text": "jvm if you want to go to the documentation for all of this stuff you can go to docs. structurer",
    "start": "2371280",
    "end": "2377640"
  },
  {
    "text": "docomo source as well if you see any errors please raise a poll request uh if",
    "start": "2377640",
    "end": "2382680"
  },
  {
    "text": "we go to the DSL there's a cookbook and the cookbook has a bunch of like recipes for doing common things and one of those",
    "start": "2382680",
    "end": "2389720"
  },
  {
    "text": "common things you can do is scripting so scripting is supported with languages like groovy cotlin or J Ruby and I can",
    "start": "2389720",
    "end": "2397240"
  },
  {
    "text": "write a short script that basically converts the technology to tags so what",
    "start": "2397240",
    "end": "2403400"
  },
  {
    "text": "I do I'll copy that to my clipboard I'll put this underneath here",
    "start": "2403400",
    "end": "2408520"
  },
  {
    "text": "so what the script is doing is it's getting the model from the workspace",
    "start": "2408520",
    "end": "2414160"
  },
  {
    "text": "looping through all of the elements it's finding the elements that are an instance of the C4 model container and",
    "start": "2414160",
    "end": "2420640"
  },
  {
    "text": "it's basically saying add a tag with the value of the Technology field so now if we save that",
    "start": "2420640",
    "end": "2427119"
  },
  {
    "text": "oops and go back here and refresh we should go green again there we go so now",
    "start": "2427119",
    "end": "2434119"
  },
  {
    "text": "this thing has a spring boots tag that we've only defined once in the technology property of that element so",
    "start": "2434119",
    "end": "2441040"
  },
  {
    "text": "that there's a whole bunch of stuff you can do uh once you get under the covers of the DSL to the underlying Java Library um you can add remove",
    "start": "2441040",
    "end": "2447920"
  },
  {
    "text": "relationships and do all sorts of fancy stuff uh so that's again basic",
    "start": "2447920",
    "end": "2455319"
  },
  {
    "text": "example let's shut down structurize light if you go to the C4 model.com",
    "start": "2455319",
    "end": "2461280"
  },
  {
    "text": "website you'll notice there are a bunch of example diagrams for uh an internet banking system and don't want that this",
    "start": "2461280",
    "end": "2469960"
  },
  {
    "text": "one so I'm going to boot up structurer light against that set of diagrams that",
    "start": "2469960",
    "end": "2475480"
  },
  {
    "text": "workspace open up the",
    "start": "2475480",
    "end": "2479200"
  },
  {
    "text": "tab yep so here are the example diagrams so we have our system land Cape diagram",
    "start": "2481680",
    "end": "2487839"
  },
  {
    "text": "double click get to the system context diagram double click get to The Container diagram these are the same examples you'll see on SE model.com",
    "start": "2487839",
    "end": "2494319"
  },
  {
    "text": "double click get to a component diagram double click we have an an image of a class diagram here so level four the",
    "start": "2494319",
    "end": "2500720"
  },
  {
    "text": "code level is not supported natively by the structurized DSL tooling but you can add in an image file or app PL uml",
    "start": "2500720",
    "end": "2506720"
  },
  {
    "text": "definition or mer definition uh we also have a dynamic diagram here so this is",
    "start": "2506720",
    "end": "2512440"
  },
  {
    "text": "interactive it's showing you how the signin feature Works in this particular example you can export this to web",
    "start": "2512440",
    "end": "2517960"
  },
  {
    "text": "sequence diagrams if you want to and things like deployment diagrams are also supported so this is showing a",
    "start": "2517960",
    "end": "2523400"
  },
  {
    "text": "development devel deployment environment and this is showing a live development a live deployment environment so those are",
    "start": "2523400",
    "end": "2530280"
  },
  {
    "text": "the diagrams rendered in the structurize light tooling the reason I've shown you this is because there's another",
    "start": "2530280",
    "end": "2536720"
  },
  {
    "text": "Tool uh called the structurized site generator which is uh again open source nothing to do with me but it takes that",
    "start": "2536720",
    "end": "2543680"
  },
  {
    "text": "same workspace definition it's uh in this case it's just another Docker image I'm booting",
    "start": "2543680",
    "end": "2548920"
  },
  {
    "text": "up and it gives you an alternative way to visualize the data that's stored in that workspace so this is the",
    "start": "2548920",
    "end": "2554839"
  },
  {
    "text": "structurize site generator we can go software systems we can click on internet banking system and what it's",
    "start": "2554839",
    "end": "2560920"
  },
  {
    "text": "doing is it's basically built us a little static website here which gives us a view onto that model and we can",
    "start": "2560920",
    "end": "2566800"
  },
  {
    "text": "start clicking around so here's a context View for the internet banking system this is using the plant uml",
    "start": "2566800",
    "end": "2573839"
  },
  {
    "text": "exports in this case the C4 plant exporters and what the people behind this tool have done is they've",
    "start": "2573839",
    "end": "2580359"
  },
  {
    "text": "hyperlink the diagrams together so you have here a set of hierarchical but na",
    "start": "2580359",
    "end": "2586040"
  },
  {
    "text": "uh navigatable diagrams based upon plant uml in your web browser and it shows you",
    "start": "2586040",
    "end": "2591079"
  },
  {
    "text": "deployment views and you can click dependencies and start kind of hunting around uh the model to to to kind of see",
    "start": "2591079",
    "end": "2597480"
  },
  {
    "text": "different relationships and what's going on so that's another interesting tool it's another interesting way to visualize essentially the same",
    "start": "2597480",
    "end": "2603640"
  },
  {
    "text": "information so that structurize a site generator uh you'll find a link to that from the structurized",
    "start": "2603640",
    "end": "2610079"
  },
  {
    "text": "documentation one of the big questions I always get with all this tooling is well hang on a second all of your example diagrams have been like four five six",
    "start": "2610079",
    "end": "2617400"
  },
  {
    "text": "seven eight boxes and they all look quite neat how do we make this work for bigger systems so what I'm going to do",
    "start": "2617400",
    "end": "2622960"
  },
  {
    "text": "now is I'm going to boot up structurize a light against a kind of service a microservice based",
    "start": "2622960",
    "end": "2630240"
  },
  {
    "text": "example so imagine we have some sort of a",
    "start": "2635079",
    "end": "2640760"
  },
  {
    "text": "service-based architecture so we have a web application that has a connection to service one where service one in this",
    "start": "2640760",
    "end": "2647240"
  },
  {
    "text": "case is an API talking to some sort of a database schema and then maybe that has a link to this thing over here which is",
    "start": "2647240",
    "end": "2653640"
  },
  {
    "text": "service 2 some sort of API and a database so we have some sort of a service based architecture and every",
    "start": "2653640",
    "end": "2659559"
  },
  {
    "text": "service is an API and an individual owned data store and I've Associated",
    "start": "2659559",
    "end": "2665400"
  },
  {
    "text": "different colors with every different servers this example looks okay we've only got like 16 17 boxes on here but as",
    "start": "2665400",
    "end": "2671640"
  },
  {
    "text": "you add new services this diagram would start to get much more complicated wouldn't it so how do we fix that",
    "start": "2671640",
    "end": "2678559"
  },
  {
    "text": "problem this diagram is showing you all of the services it's one diagram showing you all of the services what you can do",
    "start": "2678559",
    "end": "2685160"
  },
  {
    "text": "instead is draw one diagram per service so here we have a container diagram",
    "start": "2685160",
    "end": "2690559"
  },
  {
    "text": "that's just focused on the service one thing things coming into service one and",
    "start": "2690559",
    "end": "2695599"
  },
  {
    "text": "things leaving service one here's service two same thing",
    "start": "2695599",
    "end": "2702680"
  },
  {
    "text": "inbound relationships outbound relationships and here's service three so we have different views of",
    "start": "2702680",
    "end": "2709640"
  },
  {
    "text": "essentially the same data the same model here how do we do that we go to here I",
    "start": "2709640",
    "end": "2715440"
  },
  {
    "text": "can show you the source code for this thing services so this is the same thing we're",
    "start": "2715440",
    "end": "2720559"
  },
  {
    "text": "creating a workspace with a model here's our Software System this is the definition of service one so service one",
    "start": "2720559",
    "end": "2727520"
  },
  {
    "text": "is a group of an an API container and a database",
    "start": "2727520",
    "end": "2733960"
  },
  {
    "text": "container service two is the same thing service three is the same thing etc etc",
    "start": "2733960",
    "end": "2739280"
  },
  {
    "text": "bunch of Errors between them someone's stuck in",
    "start": "2739280",
    "end": "2746359"
  },
  {
    "text": "traffic uh this is this is the all containers version so this is saying include all containers for that software",
    "start": "2746359",
    "end": "2753000"
  },
  {
    "text": "system this is the service one version so what we're saying here is include software system. service one include",
    "start": "2753000",
    "end": "2761119"
  },
  {
    "text": "things coming into that thing and things coming out of that thing so the inbound",
    "start": "2761119",
    "end": "2767480"
  },
  {
    "text": "and outbound relationships the afferent and efferent couplings if you want to use that terminology and apply automatic",
    "start": "2767480",
    "end": "2772800"
  },
  {
    "text": "layout same with service two same with service three so this is a way to basically give you a bunch of different",
    "start": "2772800",
    "end": "2778720"
  },
  {
    "text": "views onto that same underlying model which is really nice because of course in tools at viio what you do is you",
    "start": "2778720",
    "end": "2785440"
  },
  {
    "text": "craft up your big diagram and then you have to start copy pasting elements across multiple different work worksheets and things and you start to",
    "start": "2785440",
    "end": "2791559"
  },
  {
    "text": "get that inconsistency problem so this is another approach uh there's a bunch of Expressions that are built into the",
    "start": "2791559",
    "end": "2797400"
  },
  {
    "text": "structurize of tooling uh that allow you to slice and dice your model in in various different",
    "start": "2797400",
    "end": "2803880"
  },
  {
    "text": "ways so I've mostly been using include star but you can include things by a name include things by reference include",
    "start": "2803880",
    "end": "2810599"
  },
  {
    "text": "things by tag you can use this sort of expression which says include the thing and M relationships etc etc so there's a",
    "start": "2810599",
    "end": "2818119"
  },
  {
    "text": "whole uh kind of complicated expression language that's built into this tooling as well so that's option one I like giving",
    "start": "2818119",
    "end": "2826839"
  },
  {
    "text": "people options this is option one for dealing with large and complicated software systems we have a diagram with",
    "start": "2826839",
    "end": "2832839"
  },
  {
    "text": "everything and we have multiple diagrams showing one service option two is instructor a light",
    "start": "2832839",
    "end": "2839760"
  },
  {
    "text": "which is all free it's all open source you click this explore button and you get",
    "start": "2839760",
    "end": "2847359"
  },
  {
    "text": "this so this is a d3js force directed graph it's showing you exactly the same",
    "start": "2847359",
    "end": "2853079"
  },
  {
    "text": "information this is showing you all of the containers inside that software system and the links between them but",
    "start": "2853079",
    "end": "2858440"
  },
  {
    "text": "it's showing you in a much more succinct concise data um in in a much more",
    "start": "2858440",
    "end": "2864280"
  },
  {
    "text": "concise visualization format it's interactive there are tool tips we can hover over relationships and things we",
    "start": "2864280",
    "end": "2869920"
  },
  {
    "text": "can start clicking things to show nearest neighbors and there's a quick find feature so this is another really",
    "start": "2869920",
    "end": "2875280"
  },
  {
    "text": "nice way to kind of explore and visualize larger models especially useful for portfolios",
    "start": "2875280",
    "end": "2882880"
  },
  {
    "text": "of systems across the Enterprise or maybe if you have a complicated distributed architecture or maybe have a",
    "start": "2882880",
    "end": "2888880"
  },
  {
    "text": "large uh number of components inside a monolithic application this type of visual visualization suits larger data",
    "start": "2888880",
    "end": "2896599"
  },
  {
    "text": "sets so that's option two I'm going to give you another option there is",
    "start": "2896599",
    "end": "2903440"
  },
  {
    "text": "a another export format let me shut this one down uh that the the structurer CLI",
    "start": "2903440",
    "end": "2910480"
  },
  {
    "text": "supports and it's called igraph or igraph so I'm going to export the workspace we just looked",
    "start": "2910480",
    "end": "2919680"
  },
  {
    "text": "at and the format's going to be elog graph IO graph that's going to create me",
    "start": "2919920",
    "end": "2925800"
  },
  {
    "text": "what have I done I know what I've done that's going to create me this file",
    "start": "2925800",
    "end": "2933000"
  },
  {
    "text": "a do IDL file",
    "start": "2933000",
    "end": "2937599"
  },
  {
    "text": "so this is the igraph format which is yaml I don't know how you feel about",
    "start": "2938079",
    "end": "2944160"
  },
  {
    "text": "yaml I'm not a big fan so I wouldn't necessarily recommend crafting this by hand but what I'm going to do is I'm",
    "start": "2944160",
    "end": "2949240"
  },
  {
    "text": "going to copy this into my clipboard I'm going to go here and open up app. graph.",
    "start": "2949240",
    "end": "2955480"
  },
  {
    "text": "comom which is this one click new diagram I'm going to take out their example paste mine in minim",
    "start": "2955480",
    "end": "2962880"
  },
  {
    "text": "see it's horrible isn't it we'll get rid of that get rid of that and we'll click static",
    "start": "2962880",
    "end": "2968240"
  },
  {
    "text": "structure so this is another alternative visualization of that exact same data we",
    "start": "2968240",
    "end": "2974319"
  },
  {
    "text": "have our web application calling the services calling services and database Etc and you'll see as I I mov the mouse",
    "start": "2974319",
    "end": "2979559"
  },
  {
    "text": "around things hover we can also click on Zoom so it's a nice interactive uh",
    "start": "2979559",
    "end": "2985400"
  },
  {
    "text": "visualization so this is another great tool for exploring kind of larger um data sets hierarchical data",
    "start": "2985400",
    "end": "2992119"
  },
  {
    "text": "sets and of course the C4 model is essentially a full directed graph of hierarchal elements and the",
    "start": "2992119",
    "end": "2998680"
  },
  {
    "text": "relationships between them so that's uh something else that you can do here um and that's really all I wanted to show",
    "start": "2998680",
    "end": "3005359"
  },
  {
    "text": "you with regards to the structurizing is there's tons of more stuff you can do it supports uh documentation and",
    "start": "3005359",
    "end": "3010599"
  },
  {
    "text": "architecture decision records and there's an on- premises version which is free and open source and you can embed in Confluence and tons of stuff like",
    "start": "3010599",
    "end": "3017200"
  },
  {
    "text": "that but that's kind of the basics of the structurized DSL tooling and some of the different rendering uh engines and",
    "start": "3017200",
    "end": "3024440"
  },
  {
    "text": "possibilities just to finish up a couple of slides the concept we've been looking at",
    "start": "3024440",
    "end": "3029720"
  },
  {
    "text": "here is the workspace the workspace is the wrapper for the models and Views there's actually a number of ways you can author those workspaces I've shown",
    "start": "3029720",
    "end": "3035960"
  },
  {
    "text": "you the structurized DSL there are also a bunch of code based libraries there's a structurize for Java there's a",
    "start": "3035960",
    "end": "3042240"
  },
  {
    "text": "structurize for.net that allow you to craft up some code and basically get to that same workspace format and then you",
    "start": "3042240",
    "end": "3048799"
  },
  {
    "text": "can render those workspaces with a number of tools as I've been showing you throughout the demos so that's my",
    "start": "3048799",
    "end": "3054079"
  },
  {
    "text": "structurer tooling and the kind of ecosystem around the structure of tooling again everything I've shown you",
    "start": "3054079",
    "end": "3059240"
  },
  {
    "text": "is all completely free completely open source to make this a balanced discussion I do want to throw out some",
    "start": "3059240",
    "end": "3065200"
  },
  {
    "text": "other options out there because over the past couple of years specifically uh some people on GitHub have been creating",
    "start": "3065200",
    "end": "3070760"
  },
  {
    "text": "similar types of tooling um that gives you uh similar types of capabilities so there's something called",
    "start": "3070760",
    "end": "3077040"
  },
  {
    "text": "over Arch or overarch uh which allows you to do the same type of thing it allows you to define a hierarchical C4",
    "start": "3077040",
    "end": "3083240"
  },
  {
    "text": "model and get a bunch of views off that of that model uh but this is using something called the extensible or",
    "start": "3083240",
    "end": "3090200"
  },
  {
    "text": "extensive data notation edn so this is a slightly different way to craft up those",
    "start": "3090200",
    "end": "3095280"
  },
  {
    "text": "diagrams I think this tool uses uh plant uml as a rendering engine so automatic",
    "start": "3095280",
    "end": "3100920"
  },
  {
    "text": "layout only but that's another tool you might want to look at uh there's something called rdb modeling which is a",
    "start": "3100920",
    "end": "3107920"
  },
  {
    "text": "yaml file and an editor so you kind of type in some yam on one side and you get",
    "start": "3107920",
    "end": "3112960"
  },
  {
    "text": "a diagram on the other side and again allows you to create a model and surface different views of that same model so",
    "start": "3112960",
    "end": "3119240"
  },
  {
    "text": "that's something you can look at too uh if you like plant youl somebody has tried to create a way to build a",
    "start": "3119240",
    "end": "3129200"
  },
  {
    "text": "modelbased approach to using plant uml it's a bit complicated I'm not sure I",
    "start": "3129200",
    "end": "3135559"
  },
  {
    "text": "really understand what they're doing with the um with the underlying kind of tech here but if you if you're into",
    "start": "3135559",
    "end": "3141079"
  },
  {
    "text": "plant JL now and specifically C4 plant JL this allows you to start exposing",
    "start": "3141079",
    "end": "3146359"
  },
  {
    "text": "some of those things as elements you can reuse in other definitions so that might",
    "start": "3146359",
    "end": "3151520"
  },
  {
    "text": "be something to look at some uh somebody created something called like C4 recently which I thought",
    "start": "3151520",
    "end": "3157599"
  },
  {
    "text": "was quite funny what they've done is they've taken my structurized DSL and kind of copied it but the big difference",
    "start": "3157599",
    "end": "3163799"
  },
  {
    "text": "between like C4 and my structurer tooling is that in like C4 you can have",
    "start": "3163799",
    "end": "3168920"
  },
  {
    "text": "any number of hierarchical abstractions so in C4 there are four software systems",
    "start": "3168920",
    "end": "3174559"
  },
  {
    "text": "containers comp components and code one of the criticisms I hear of C4",
    "start": "3174559",
    "end": "3180480"
  },
  {
    "text": "is we don't want to be pigeonholed into only those four levels of abstraction it",
    "start": "3180480",
    "end": "3185520"
  },
  {
    "text": "would be nice if we could Define more levels of abstraction like a group or service or library or a module something",
    "start": "3185520",
    "end": "3191920"
  },
  {
    "text": "like that there are a number of reasons I don't recommend doing that I I have another talk you can find a alliance",
    "start": "3191920",
    "end": "3197359"
  },
  {
    "text": "called the myths of the C4 model if you do want to do that uh like C4 allows you to Define additional levels of",
    "start": "3197359",
    "end": "3204319"
  },
  {
    "text": "hierarchical ab raction so it kind of takes the structurized DSL and removes",
    "start": "3204319",
    "end": "3210319"
  },
  {
    "text": "some of the restrictions around the levels of hierarchy so again something uh to look at if you're",
    "start": "3210319",
    "end": "3216680"
  },
  {
    "text": "interested igraph ilph I've talked about already the input format for this tool",
    "start": "3216680",
    "end": "3221920"
  },
  {
    "text": "is a rather long yaml syntax if you do use this tool that the editor thing does",
    "start": "3221920",
    "end": "3228520"
  },
  {
    "text": "do autocom complete so that does help you to some degree but again I built an exporter that takes the structurize of",
    "start": "3228520",
    "end": "3234040"
  },
  {
    "text": "DSL and convert Ed to that yaml format so maybe that's a better approach and that's it so I hope you",
    "start": "3234040",
    "end": "3241240"
  },
  {
    "text": "found it useful uh if you do want to get started just go to structures.com DSL you get that demo page and this is a",
    "start": "3241240",
    "end": "3246839"
  },
  {
    "text": "nice lightweight way to get started without installing any tooling thank you very much and enjoy your",
    "start": "3246839",
    "end": "3253050"
  },
  {
    "text": "[Applause]",
    "start": "3253050",
    "end": "3256699"
  },
  {
    "text": "lunch",
    "start": "3264079",
    "end": "3267079"
  }
]