[
  {
    "text": "we'll kick I'm John Mills on the bottom of all my",
    "start": "7549",
    "end": "12559"
  },
  {
    "text": "slides they'll be my twitter handle hashtag next-gen async just so you if you want",
    "start": "12559",
    "end": "19580"
  },
  {
    "text": "to tweet something positive if you want to be something negative then go ahead",
    "start": "19580",
    "end": "27590"
  },
  {
    "text": "and put my outside it's fine I don't care okay next-gen async patterns and JavaScript is what we're going to talk",
    "start": "27590",
    "end": "33470"
  },
  {
    "text": "about it should I didn't want to put in JavaScript at the bottom because it got",
    "start": "33470",
    "end": "39500"
  },
  {
    "text": "too long and too wordy so but this is gonna JavaScript and kind of like I said",
    "start": "39500",
    "end": "45950"
  },
  {
    "text": "before we're I'm gonna kind of take a stroll through I'm and tie them all",
    "start": "45950",
    "end": "51680"
  },
  {
    "text": "together but we'll start with callbacks alright callbacks is how many of you",
    "start": "51680",
    "end": "57140"
  },
  {
    "text": "write callbacks today okay some of you are lying how how many of you are",
    "start": "57140",
    "end": "65300"
  },
  {
    "text": "morally opposed to hand raising okay right so just so I know right now the",
    "start": "65300",
    "end": "70759"
  },
  {
    "text": "who's not gonna raise their hand right so javascript is isn't a synchronous",
    "start": "70759",
    "end": "76909"
  },
  {
    "text": "language there's a lot of stuff that it does they it'll call you back later which is where callbacks come from",
    "start": "76909",
    "end": "82580"
  },
  {
    "text": "right so we end up writing a lot of code that looks like this and this code is gross and I don't know because it's you",
    "start": "82580",
    "end": "90290"
  },
  {
    "text": "know we we call it Christmas tree code have you heard that phrase before because it gets you get in there",
    "start": "90290",
    "end": "95869"
  },
  {
    "text": "and there's there's a lot of issues with this and I'm not gonna go into all of them because this is old generation",
    "start": "95869",
    "end": "102229"
  },
  {
    "text": "right we're gonna talk about next generation so this is the problem we're trying to solve and how many of you have",
    "start": "102229",
    "end": "110030"
  },
  {
    "text": "ever had undefined is not a function as an error right javascript has errors",
    "start": "110030",
    "end": "115880"
  },
  {
    "text": "where you get thrown errors especially if you're in strict mode you will get errors all over the place and callbacks",
    "start": "115880",
    "end": "122270"
  },
  {
    "text": "are very very bad at error handling right and there's unfortunately there's",
    "start": "122270",
    "end": "127939"
  },
  {
    "text": "like three or four different ways that that people handle errors different",
    "start": "127939",
    "end": "134150"
  },
  {
    "text": "patterns I'm a big fan of the nude style because I'm a node developer where so up",
    "start": "134150",
    "end": "140870"
  },
  {
    "text": "here I've got function air and then the returned right and then you",
    "start": "140870",
    "end": "145970"
  },
  {
    "text": "have to inside your function you've got a tests to see if there's an error and then you can go on and do stuff and it",
    "start": "145970",
    "end": "152120"
  },
  {
    "text": "just took that one function that kind of was gross and it makes it even grosser and if I J so we want to fix this this",
    "start": "152120",
    "end": "158510"
  },
  {
    "text": "is not what we want to do the async way this works is kind of gross - this is",
    "start": "158510",
    "end": "164599"
  },
  {
    "text": " so this is from the node side but you can imagine this being on the rest side - this is gross and it's very",
    "start": "164599",
    "end": "171620"
  },
  {
    "text": "difficult to see what's going on and if errors occur you've got to test them",
    "start": "171620",
    "end": "176930"
  },
  {
    "text": "inside everything it's gross and here's here's the problem and this is the problem we're ultimately trying to solve",
    "start": "176930",
    "end": "183109"
  },
  {
    "text": "by the end of this talk we start there we don't write this all at once we start",
    "start": "183109",
    "end": "188510"
  },
  {
    "text": "like this right I've got a manga client connect I'm opening a collection and then I close it I'm gonna try it and",
    "start": "188510",
    "end": "195680"
  },
  {
    "text": "it's gonna work and it's great then I'm gonna add the next line of code I'm gonna do a find one I'm gonna go for a",
    "start": "195680",
    "end": "201170"
  },
  {
    "text": "look for a book and then I'm gonna do something with the results I now have a problem this my DB closed down at the",
    "start": "201170",
    "end": "209720"
  },
  {
    "text": "bottom now I'm getting Irish thrown but I'm not catching any errors right if I'm not",
    "start": "209720",
    "end": "216049"
  },
  {
    "text": "Testament here so the problem we have is that as we start to write code we don't",
    "start": "216049",
    "end": "221540"
  },
  {
    "text": "get to have it work in a sequential way all right some of you who are from the",
    "start": "221540",
    "end": "227150"
  },
  {
    "text": "dotnet background most of you raise your hand that you are dotnet developers you're used to like this sequential way",
    "start": "227150",
    "end": "233209"
  },
  {
    "text": "of writing code and you could stick things in the middle and everything still works and JavaScript doesn't",
    "start": "233209",
    "end": "238220"
  },
  {
    "text": "necessarily work that way so that's the problem we're trying to solve as we kind of get through this whole thing all",
    "start": "238220",
    "end": "245750"
  },
  {
    "text": "right promises our step where I spend just a couple minutes on promises promises have been around for a little while the",
    "start": "245750",
    "end": "252349"
  },
  {
    "text": "different promise frameworks how many of you have used a promise framework in the past okay so this almost all of you so",
    "start": "252349",
    "end": "260840"
  },
  {
    "text": "this would be kind of an old hat but we'll click through it because it leads to where we're going",
    "start": "260840",
    "end": "267490"
  },
  {
    "text": "promises ultimately serve two purposes the first purpose they serve is in a",
    "start": "267490",
    "end": "273710"
  },
  {
    "text": "callback situation you have incoming and out showing things inside the same function",
    "start": "273710",
    "end": "279680"
  },
  {
    "text": "call right I'm calling a function and I'm sending in and I'm sending in something that's going to come out and that's weird right so what a promise",
    "start": "279680",
    "end": "287180"
  },
  {
    "text": "does is just separate your incoming from your hunger that's like half of what promises serve that's so there you go",
    "start": "287180",
    "end": "294940"
  },
  {
    "text": "because then we add the dot done in between and so what a promise looks like I just have a request that basically you",
    "start": "294940",
    "end": "301460"
  },
  {
    "text": "see a call back there and it called my call back with my error and I return a value well that's cool a promise",
    "start": "301460",
    "end": "308949"
  },
  {
    "text": "basically looks like this so a promise is an object so think of a promise as a",
    "start": "308949",
    "end": "314539"
  },
  {
    "text": "thing and and so I'm gonna return any promise notice call back doesn't exist",
    "start": "314539",
    "end": "320360"
  },
  {
    "text": "anymore right I'm not passing in the callback we now have this thing called a resolve which essentially is the",
    "start": "320360",
    "end": "327440"
  },
  {
    "text": "callback right I mean that's what it is just separate it up no so right I'm",
    "start": "327440",
    "end": "332479"
  },
  {
    "text": "gonna call resolve and then return the value so this is promise face which if",
    "start": "332479",
    "end": "341180"
  },
  {
    "text": "you remember this looks so much better than the last one did right because the last one looked like this the promised",
    "start": "341180",
    "end": "347389"
  },
  {
    "text": "place one that looks like this it really doesn't look that much better does it right but at least it's separated right",
    "start": "347389",
    "end": "354680"
  },
  {
    "text": "so I've got my person URL and then we do something else don't worry I'm not gonna",
    "start": "354680",
    "end": "359840"
  },
  {
    "text": "end there like we'll we'll make it look right but but this is I walk into client",
    "start": "359840",
    "end": "365900"
  },
  {
    "text": "sites and I pull up their code and they're using promises and they're using promises like this you might as well",
    "start": "365900",
    "end": "372440"
  },
  {
    "text": "just be doing callbacks okay so then right now one of our errors because the",
    "start": "372440",
    "end": "380300"
  },
  {
    "text": "dot then only handles kind of thing this is the other thing that promises will do for you the other thing promises are",
    "start": "380300",
    "end": "387320"
  },
  {
    "text": "going to do for you is separate errors from success right right now we've got",
    "start": "387320",
    "end": "392389"
  },
  {
    "text": "function error and then person that was the callback the nude style callback way",
    "start": "392389",
    "end": "397460"
  },
  {
    "text": "what we're going to do is actually separate our errors from our successes so in the native ESX promises you",
    "start": "397460",
    "end": "406669"
  },
  {
    "text": "actually have kept two functions right you can have the resolved and you can have the reject which is great because of now I can just call",
    "start": "406669",
    "end": "415249"
  },
  {
    "text": "reject instead of resolve so in our new promise we've added this reject keyword here and I've got resolved and then when",
    "start": "415249",
    "end": "422810"
  },
  {
    "text": "something bad happens I can just reject it and then I'm gonna call the reject",
    "start": "422810",
    "end": "428180"
  },
  {
    "text": "and so what that looks like now here I've got my if err else I'm gonna do",
    "start": "428180",
    "end": "434810"
  },
  {
    "text": "something now in the cool new promised way boom function error I just now have",
    "start": "434810",
    "end": "440960"
  },
  {
    "text": "two functions right I don't have to have my if errors anymore it's kind of do it like this all right that's cool",
    "start": "440960",
    "end": "448819"
  },
  {
    "text": "ish but then you can get into named",
    "start": "448819",
    "end": "454159"
  },
  {
    "text": "functions which is where you should be by the way regardless of anything else you do everything should be named functions no anonymous functions because",
    "start": "454159",
    "end": "461120"
  },
  {
    "text": "does this code look better than the code I had up there before much right I just it's the same thing I'm just calling",
    "start": "461120",
    "end": "467270"
  },
  {
    "text": "name functions okay so then so I had two functions you can",
    "start": "467270",
    "end": "474589"
  },
  {
    "text": "also do dot catch so promises introduced this thing called catch so I have then",
    "start": "474589",
    "end": "480979"
  },
  {
    "text": "or not catch and now I fully separated everything from get greeting to handle",
    "start": "480979",
    "end": "488210"
  },
  {
    "text": "error everything's all split out and this this actually looks like halfway",
    "start": "488210",
    "end": "493849"
  },
  {
    "text": "decent code would you agree this is much better than what we had before the other",
    "start": "493849",
    "end": "502009"
  },
  {
    "text": "thing to remember promises are things remember it earlier I said promise is essentially an object from right I mean",
    "start": "502009",
    "end": "507830"
  },
  {
    "text": "it's an object that you hand around that just buries your callback underneath for you so what you can do here might get",
    "start": "507830",
    "end": "514760"
  },
  {
    "text": "greeting function calls the requests and then does the dot done well this dot n",
    "start": "514760",
    "end": "521529"
  },
  {
    "text": "can actually I can just return my request and then called dot n so now I",
    "start": "521529",
    "end": "526640"
  },
  {
    "text": "have this request personally URL then get greeting then send greeting boom change it's beautiful it's nice it's",
    "start": "526640",
    "end": "534350"
  },
  {
    "text": "simple great this is not necessarily new i included a",
    "start": "534350",
    "end": "541100"
  },
  {
    "text": "new because es6 promises are now a thing",
    "start": "541100",
    "end": "547100"
  },
  {
    "text": "but if you are you doing angular using dollar cue or I mean there's promise frameworks that have been out there for a while so promises may not be super",
    "start": "547100",
    "end": "553730"
  },
  {
    "text": "exciting but we have to at least talk about them because we're now gonna talk",
    "start": "553730",
    "end": "559100"
  },
  {
    "text": "about generators how many of you use generators today that is the right yeah",
    "start": "559100",
    "end": "566330"
  },
  {
    "text": "I like your answer that was very naughty I don't know maybe okay this is the right answer cuz",
    "start": "566330",
    "end": "572210"
  },
  {
    "text": "hopefully this conversation might be a little mind-blowing for you so check this out this is a generator function",
    "start": "572210",
    "end": "580960"
  },
  {
    "text": "generator functions are available in es6 in my opinion generators are the most",
    "start": "580960",
    "end": "587120"
  },
  {
    "text": "powerful es6 feature available how many of you have been to an es6 talk I have",
    "start": "587120",
    "end": "594260"
  },
  {
    "text": "not heard generators mentioned at all like most of you because the most es6",
    "start": "594260",
    "end": "599960"
  },
  {
    "text": "talks don't talk about generators I'll explain over the course of this conversation I'll explain to you why I find them to be very powerful okay so",
    "start": "599960",
    "end": "607400"
  },
  {
    "text": "this is a generator function the star doesn't matter where you put it as long as it's one of those two spots this is",
    "start": "607400",
    "end": "613940"
  },
  {
    "text": "correct and by correct I mean somebody has said this is the way they like it",
    "start": "613940",
    "end": "620510"
  },
  {
    "text": "and everybody just kind of went along with it this star goes by the function",
    "start": "620510",
    "end": "627940"
  },
  {
    "text": "generators break the concept of a when you call a function the function runs",
    "start": "627940",
    "end": "633500"
  },
  {
    "text": "through the completion and then hands back a results right you either return or you terminate or something",
    "start": "633500",
    "end": "640010"
  },
  {
    "text": "generators yield a value back so I call the function yields a value then it",
    "start": "640010",
    "end": "647570"
  },
  {
    "text": "waits until it is reassured not you know",
    "start": "647570",
    "end": "652580"
  },
  {
    "text": "like pokes right hey give me the next value right so I'm gonna we're gonna",
    "start": "652580",
    "end": "658220"
  },
  {
    "text": "spend a couple minutes I'm just gonna talk through generators and then we'll get to why we're talking about them in",
    "start": "658220",
    "end": "663860"
  },
  {
    "text": "an async talk all right you execute a generator kind of the same way you",
    "start": "663860",
    "end": "669470"
  },
  {
    "text": "execute a function right so I've got my a generator function VAR caller equals Jenny so let's kind of",
    "start": "669470",
    "end": "677430"
  },
  {
    "text": "talk through a generator function function generator console dot log I'm working yield message down here at the",
    "start": "677430",
    "end": "684120"
  },
  {
    "text": "bottom of our caller equals Jen I have not yet done this console dot log so",
    "start": "684120",
    "end": "690209"
  },
  {
    "text": "this when this is executed console that log has not run yet just so this is I do",
    "start": "690209",
    "end": "698130"
  },
  {
    "text": "this thing called Jen next give me the next thing and then all of a sudden all",
    "start": "698130",
    "end": "703500"
  },
  {
    "text": "this stuff starts happening so message is returned back so console dot log at",
    "start": "703500",
    "end": "710700"
  },
  {
    "text": "this point is going to print message and then do stuff it doesn't do stuff yet",
    "start": "710700",
    "end": "716940"
  },
  {
    "text": "right it stops right there at the yield and that's not really true when I say",
    "start": "716940",
    "end": "722550"
  },
  {
    "text": "message is returned and actually is it gonna return something that looks like this it's gonna return an object has a",
    "start": "722550",
    "end": "728610"
  },
  {
    "text": "value and whether or not it's complete right so value is message done boss what",
    "start": "728610",
    "end": "736950"
  },
  {
    "text": "I call Jen dot next again now I'm gonna get next message see where that comes from I yield next message is the next",
    "start": "736950",
    "end": "743640"
  },
  {
    "text": "thing so and then done is still false there's no more yields done is still",
    "start": "743640",
    "end": "748650"
  },
  {
    "text": "false okay I call Jen dot next one more time and now I get a value of undefined",
    "start": "748650",
    "end": "756120"
  },
  {
    "text": "and done it's true this is a generator right so we're gonna talk about",
    "start": "756120",
    "end": "761190"
  },
  {
    "text": "generators in async this is a generator this is essentially what it is and you can kind of start to get an inkling of",
    "start": "761190",
    "end": "767670"
  },
  {
    "text": "how this works because it stops and it waits for results come back so that gives you a kind of a clue of what's",
    "start": "767670",
    "end": "773070"
  },
  {
    "text": "going on but before I do there let me talk about generators in one other context and then it'll all start to make",
    "start": "773070",
    "end": "779070"
  },
  {
    "text": "sense so let's build a pie inter-rater so ultimately generators are our",
    "start": "779070",
    "end": "785010"
  },
  {
    "text": "iterators right would you soon dot next dot max dot next so we're gonna build a pie in a rater and I don't mean this",
    "start": "785010",
    "end": "790529"
  },
  {
    "text": "kind of pie we're gonna do like the number pie but I don't know if you know this they're the same just mirrored that's kind of weird I just discovered",
    "start": "790529",
    "end": "798180"
  },
  {
    "text": "this so but we're gonna build a pie etta rater so you can kind of see what's",
    "start": "798180",
    "end": "803400"
  },
  {
    "text": "going on all right now I lie for the purposes of a fitting code on a slide I'm just",
    "start": "803400",
    "end": "810150"
  },
  {
    "text": "hard-coding 3.1415 right there are a few more numbers and PI after that but I'm",
    "start": "810150",
    "end": "816180"
  },
  {
    "text": "going to stop at 5 because nobody cares you want that okay this is your picture",
    "start": "816180",
    "end": "822900"
  },
  {
    "text": "opportunity for this slide just so that",
    "start": "822900",
    "end": "828330"
  },
  {
    "text": "you can prove later that this actually does what now everybody's taking a picture okay okay okay okay so now now",
    "start": "828330",
    "end": "840270"
  },
  {
    "text": "really the cool thing about a generator is it's just a function and I could put all kinds of stuff in here that would",
    "start": "840270",
    "end": "845280"
  },
  {
    "text": "manage memory and because when I get to like the 7 billionth digit in PI I don't",
    "start": "845280",
    "end": "851880"
  },
  {
    "text": "want to have to have remembered the other thing so I can build me I can do all kinds of cool stuff in here but it's",
    "start": "851880",
    "end": "857700"
  },
  {
    "text": "not the purpose of this talk so we're moving on so then ultimately I can just",
    "start": "857700",
    "end": "863490"
  },
  {
    "text": "do next X X X next and I get this 3.1415 and then value undefined done is true that's a little gross right we don't",
    "start": "863490",
    "end": "872010"
  },
  {
    "text": "really like that and the reason why value undefined is there is because the function terminates there and it sends",
    "start": "872010",
    "end": "878040"
  },
  {
    "text": "back undefined question how else do you end a function nobody knows I return I",
    "start": "878040",
    "end": "884880"
  },
  {
    "text": "have to see it wasn't a trick question it's very straightforward right so I'm going to return 9 what do",
    "start": "884880",
    "end": "890460"
  },
  {
    "text": "you think is gonna print out it's not a trick question don't worry yeah yeah yeah so I'm gonna",
    "start": "890460",
    "end": "896370"
  },
  {
    "text": "get value 9 done is true that's great this is significantly less gross so dun",
    "start": "896370",
    "end": "901950"
  },
  {
    "text": "dun dun dun dun right so this is how kind of that iterator idea works",
    "start": "901950",
    "end": "909950"
  },
  {
    "text": "this is gross all right we don't like that that's kind of ugly",
    "start": "912080",
    "end": "919699"
  },
  {
    "text": "so es6 also has this other very cool feature called the for of loop how many",
    "start": "920480",
    "end": "925860"
  },
  {
    "text": "of you have used the four of loop before yeah four of is awesome did you know four of",
    "start": "925860",
    "end": "931320"
  },
  {
    "text": "will automatically iterate over a generator that makes it kind of cool so",
    "start": "931320",
    "end": "936450"
  },
  {
    "text": "I can just do this for let I of Pi taught so long guy and they will",
    "start": "936450",
    "end": "941940"
  },
  {
    "text": "automatically loop over your generator that's kind of neat and they'll print",
    "start": "941940",
    "end": "950630"
  },
  {
    "text": "3.1415 is that what you would have guessed it would have printed no you're",
    "start": "950630",
    "end": "957600"
  },
  {
    "text": "honest what happened to the nine right so I introduced this whole concept of",
    "start": "957600",
    "end": "964080"
  },
  {
    "text": "return and then I just like made it go away right because ultimately the LAT is",
    "start": "964080",
    "end": "970200"
  },
  {
    "text": "well next I've done does not equal true Donnan equals true so I introduced",
    "start": "970200",
    "end": "975360"
  },
  {
    "text": "return and then I took it back away from you I'm just mean like that right okay so right but ultimately that's that's",
    "start": "975360",
    "end": "984300"
  },
  {
    "text": "most of the generator where generators start to become interesting for what we're talking about is it introduces",
    "start": "984300",
    "end": "989880"
  },
  {
    "text": "this level of conversation back and forth between the generator function and",
    "start": "989880",
    "end": "995340"
  },
  {
    "text": "the caller function so I have a generator function called let's talk it's going to yield back a question what",
    "start": "995340",
    "end": "1001970"
  },
  {
    "text": "is your name it's going to accept a result of that and stick it in a",
    "start": "1001970",
    "end": "1008600"
  },
  {
    "text": "variable and then it's gonna yield back a greeting and here's how you would call",
    "start": "1008600",
    "end": "1013910"
  },
  {
    "text": "that right so converse equals let's talk converse not next dot value is going to",
    "start": "1013910",
    "end": "1021530"
  },
  {
    "text": "be this what is your name right then when I do converse that next again I am",
    "start": "1021530",
    "end": "1028189"
  },
  {
    "text": "going to send in a value I'm gonna send in John and then it's gonna spit out a",
    "start": "1028190",
    "end": "1035030"
  },
  {
    "text": "value of hello jump right so I can send values into generators I can pull values",
    "start": "1035030",
    "end": "1040699"
  },
  {
    "text": "out of generators that's all very cool the other very cool thing about this",
    "start": "1040700",
    "end": "1047300"
  },
  {
    "text": "that makes this very compelling for first synchronous code or for asynchronous code is how he handles errors because this is",
    "start": "1047300",
    "end": "1058139"
  },
  {
    "text": "all synchronous there's no callbacks here right have you seen a single callback since we started talking about generators no no callbacks which means",
    "start": "1058139",
    "end": "1067080"
  },
  {
    "text": "nothing is running after so if I throw",
    "start": "1067080",
    "end": "1072120"
  },
  {
    "text": "because notice right I had a number and a number number number and then I had this character it's not a character it's",
    "start": "1072120",
    "end": "1078269"
  },
  {
    "text": "actually a string because that's the way JavaScript is but if I throw I can just",
    "start": "1078269",
    "end": "1086250"
  },
  {
    "text": "wrap the whole thing in a try-catch block I don't see very many try-catch",
    "start": "1086250",
    "end": "1091289"
  },
  {
    "text": "blocks a lot of times in JavaScript because everything's asynchronous and they don't do you any good right but I",
    "start": "1091289",
    "end": "1096809"
  },
  {
    "text": "can wrap everything on a try-catch block and when it gets thrown I can catch it",
    "start": "1096809",
    "end": "1102149"
  },
  {
    "text": "and it's great imagine if you could wrap a try-catch",
    "start": "1102149",
    "end": "1107370"
  },
  {
    "text": "block around all of your Ajax calls and like catch errors that's like craziness",
    "start": "1107370",
    "end": "1114450"
  },
  {
    "text": "okay so that's great for an iterator oh",
    "start": "1114450",
    "end": "1120320"
  },
  {
    "text": "one more thing to my ears okay so I can catch but the other thing I can do is I can throw errors in so remember my my",
    "start": "1120320",
    "end": "1127110"
  },
  {
    "text": "poly iterator what remember I've got memory management I've got all this stuff going on in the iterator if",
    "start": "1127110",
    "end": "1132600"
  },
  {
    "text": "something happens outside I want to be able to do some clean up inside my",
    "start": "1132600",
    "end": "1138450"
  },
  {
    "text": "iterator right and so I can actually do it err a tour dot throw and it'll catch",
    "start": "1138450",
    "end": "1144059"
  },
  {
    "text": "so like say I'm right here I'm waiting right here it'll get a throw and I'll pop down into the catch and that's cool",
    "start": "1144059",
    "end": "1150590"
  },
  {
    "text": "so then my iterator can clean itself up it's just kind of neat or in this case",
    "start": "1150590",
    "end": "1156659"
  },
  {
    "text": "when we get there it can do some other things okay so that's cool too a errors",
    "start": "1156659",
    "end": "1162049"
  },
  {
    "text": "all right up until now we have the",
    "start": "1162049",
    "end": "1167220"
  },
  {
    "text": "generator is the iterator and the calling function is doing the work a",
    "start": "1167220",
    "end": "1173519"
  },
  {
    "text": "sync happens when we flip it over what",
    "start": "1173519",
    "end": "1179340"
  },
  {
    "text": "if the main function is a generator that yields out two things",
    "start": "1179340",
    "end": "1184850"
  },
  {
    "text": "and then weights that's where this becomes very interesting so let's let's look at an example of this all right so",
    "start": "1184850",
    "end": "1193610"
  },
  {
    "text": "I've got a whole bunch of code here and I'm not really gonna talk through all of it but essentially what happens is I'm calling a person service I'm getting a",
    "start": "1193610",
    "end": "1201559"
  },
  {
    "text": "name that I'm calling the greeting service with the name and then I which",
    "start": "1201559",
    "end": "1208279"
  },
  {
    "text": "gives me my greeting back okay notice one thing right here look look at how this I'm making two different calls to",
    "start": "1208279",
    "end": "1214880"
  },
  {
    "text": "two different services and notice there's no indentation whatsoever like",
    "start": "1214880",
    "end": "1220549"
  },
  {
    "text": "that's this is where we're going but I'm gonna try it I'm gonna bend your brain for just a second and then I'll make it",
    "start": "1220549",
    "end": "1227299"
  },
  {
    "text": "a little calmer okay when this thing works we start with me",
    "start": "1227299",
    "end": "1232600"
  },
  {
    "text": "notice main is a generator function I",
    "start": "1232600",
    "end": "1237370"
  },
  {
    "text": "create an instance of my main and then I call next when I call next what happens",
    "start": "1238960",
    "end": "1247100"
  },
  {
    "text": "is that it executes this make request make requests calls my HTTP call which",
    "start": "1247100",
    "end": "1257840"
  },
  {
    "text": "does this head timeout okay now what happens when I execute the set timeout",
    "start": "1257840",
    "end": "1262990"
  },
  {
    "text": "everything else falls through right so where's my main one that set timeout is",
    "start": "1262990",
    "end": "1268159"
  },
  {
    "text": "called my set timeout my main is gonna stop right there halt all function this can wait and then",
    "start": "1268159",
    "end": "1276789"
  },
  {
    "text": "it's gonna go out it's gonna come back it's going to return my my greeting and",
    "start": "1276789",
    "end": "1285950"
  },
  {
    "text": "all of that if I don't call my set if I don't have a set timeout there like if I'm just playing around with it I don't",
    "start": "1285950",
    "end": "1291500"
  },
  {
    "text": "stick the set timer this is why I'm calling it out is the it dot next happens before the yield and everything",
    "start": "1291500",
    "end": "1297799"
  },
  {
    "text": "breaks right so you've got to have this set timeout to make this work okay so I've got my yield back",
    "start": "1297799",
    "end": "1303820"
  },
  {
    "text": "then when the work hall comes back my issues but it calls not next and when",
    "start": "1306309",
    "end": "1314240"
  },
  {
    "text": "I've got next is called with the response now result 1 equals whatever came back",
    "start": "1314240",
    "end": "1322190"
  },
  {
    "text": "in that response it parses the name out then it calls the greeting service this",
    "start": "1322190",
    "end": "1329000"
  },
  {
    "text": "is a sequential series of calls even",
    "start": "1329000",
    "end": "1334040"
  },
  {
    "text": "though I'm calling out to other things this is like fundamentally different than how we have done asynchronous up",
    "start": "1334040",
    "end": "1339380"
  },
  {
    "text": "till now just make sense okay kinda all",
    "start": "1339380",
    "end": "1348830"
  },
  {
    "text": "right so this like let's try to make this just a little bit easier there is a",
    "start": "1348830",
    "end": "1360070"
  },
  {
    "text": "thing a package called Co who's used Co before okay nobody that's awesome that's",
    "start": "1360070",
    "end": "1368960"
  },
  {
    "text": "because you're in the right place so Co is a package that's designed to be used",
    "start": "1368960",
    "end": "1378650"
  },
  {
    "text": "with generators which is great and I love it because it's going to take all",
    "start": "1378650",
    "end": "1386360"
  },
  {
    "text": "of this gross --mess everybody follow this anybody not follow this cuz now is",
    "start": "1386360",
    "end": "1392900"
  },
  {
    "text": "the time to ask a question oh you did follow it I've got time we can talk",
    "start": "1392900",
    "end": "1400070"
  },
  {
    "text": "about it okay Wow okay so hold on let me back up for just a second and kind of",
    "start": "1400070",
    "end": "1405800"
  },
  {
    "text": "touch on this again not too much but just again because next is what iterates",
    "start": "1405800",
    "end": "1415430"
  },
  {
    "text": "right the next is the thing that makes this thing happen so next kicks the",
    "start": "1415430",
    "end": "1421460"
  },
  {
    "text": "whole thing off but because it is available in the public scope or not the public zone but it's in the you know",
    "start": "1421460",
    "end": "1427100"
  },
  {
    "text": "it's available to everything when my callback comes back it is available in",
    "start": "1427100",
    "end": "1434900"
  },
  {
    "text": "down inside the function and so because it is available down inside the function",
    "start": "1434900",
    "end": "1440180"
  },
  {
    "text": "I can call next from way up here I don't have to call it next it next it next",
    "start": "1440180",
    "end": "1445880"
  },
  {
    "text": "right there I mean it's it's just a func it's just an object right it's just a thing can coliform anywhere so because it's",
    "start": "1445880",
    "end": "1453960"
  },
  {
    "text": "available I can embed it in this callback here because of closures and",
    "start": "1453960",
    "end": "1459390"
  },
  {
    "text": "blah blah blah and all that stuff and then kind of iterate through a little bit does that make sense okay hold on",
    "start": "1459390",
    "end": "1469130"
  },
  {
    "text": "all right so that's kind of how that goes",
    "start": "1469130",
    "end": "1474860"
  },
  {
    "text": "so what Coe is gonna do for us is make",
    "start": "1477780",
    "end": "1483660"
  },
  {
    "text": "this easier so Coe is promise based and so this is",
    "start": "1483660",
    "end": "1491310"
  },
  {
    "text": "why we talked about promises for just a little bit so what happens is I've got this what we've had up so now I've got",
    "start": "1491310",
    "end": "1497700"
  },
  {
    "text": "make requests and then I've got my my HTTP call which basically is just a set",
    "start": "1497700",
    "end": "1502770"
  },
  {
    "text": "timeout blah blah blah I can rewrite all this stuff as a promise and the way that",
    "start": "1502770",
    "end": "1508920"
  },
  {
    "text": "works is this so I'm gonna pull go in and you can pull go in however you pull you know this is a node example so it's",
    "start": "1508920",
    "end": "1515190"
  },
  {
    "text": "there but you know if you make ko available by a script tag in your",
    "start": "1515190",
    "end": "1520410"
  },
  {
    "text": "browser or what I doesn't matter however you I do it or modules you know import ko then I take my HTTP call that did",
    "start": "1520410",
    "end": "1529200"
  },
  {
    "text": "look like this and I just wrap everything in a promise so a new promise set timeout and then I resolve my",
    "start": "1529200",
    "end": "1537450"
  },
  {
    "text": "promise with this so stay in a promise",
    "start": "1537450",
    "end": "1542640"
  },
  {
    "text": "no surprise nothing's new nothing's different here that's all then I wrap ko",
    "start": "1542640",
    "end": "1549740"
  },
  {
    "text": "ko' wraps around my generator and it",
    "start": "1549740",
    "end": "1554880"
  },
  {
    "text": "will unpack all my promises for me which is super awesome because so function",
    "start": "1554880",
    "end": "1564000"
  },
  {
    "text": "main requests this this request call right here is actually so I didn't",
    "start": "1564000",
    "end": "1570180"
  },
  {
    "text": "change the name of it but I just call HTTP call directly it's going to return a promise it's gonna resolve this thing",
    "start": "1570180",
    "end": "1576060"
  },
  {
    "text": "and KO will actually unpack that for me pull out the values and then drop it",
    "start": "1576060",
    "end": "1582330"
  },
  {
    "text": "into my result one which is great and then",
    "start": "1582330",
    "end": "1590140"
  },
  {
    "text": "move on to the next thing and move on to the next thing you move on to the next thing and now I have very sequential",
    "start": "1590140",
    "end": "1596870"
  },
  {
    "text": "code what about errors right so how many of",
    "start": "1596870",
    "end": "1604730"
  },
  {
    "text": "you have had to nest breast calls before right you got one call you've got",
    "start": "1604730",
    "end": "1610850"
  },
  {
    "text": "another call even right so a lot of you what happens with when one errors right",
    "start": "1610850",
    "end": "1616370"
  },
  {
    "text": "then you've got to write code to clean that up and you've got one code to clean that up and one code to clean that up",
    "start": "1616370",
    "end": "1621550"
  },
  {
    "text": "in Co or we're using generators I can",
    "start": "1621550",
    "end": "1627050"
  },
  {
    "text": "just try catch done I can wrap the whole",
    "start": "1627050",
    "end": "1632240"
  },
  {
    "text": "big thing in a try-catch block and be done because what's going to happen is",
    "start": "1632240",
    "end": "1637340"
  },
  {
    "text": "if I throw an error we're up in the request can we throw an error here then",
    "start": "1637340",
    "end": "1647080"
  },
  {
    "text": "it drops down to my catch if if there are an air here drops down in my catch because I'm waiting it's all just a sink",
    "start": "1647080",
    "end": "1652370"
  },
  {
    "text": "okay it's all not you think it's all just synchronous stuff so generators",
    "start": "1652370",
    "end": "1658360"
  },
  {
    "text": "take this idea of asynchronous code and shuffle you back into just plain",
    "start": "1658360",
    "end": "1665440"
  },
  {
    "text": "synchronous up and down how many like the way this looks better some of you",
    "start": "1665440",
    "end": "1672350"
  },
  {
    "text": "some of you aren't sure okay now is your opportunity because I built in a lot of",
    "start": "1672350",
    "end": "1679100"
  },
  {
    "text": "time to like have conversations but now is your opportunity to say wait a second timeout I have questions and if I will",
    "start": "1679100",
    "end": "1687320"
  },
  {
    "text": "tell you this if you have a question like seven other people in the room have",
    "start": "1687320",
    "end": "1693470"
  },
  {
    "text": "a question too right so don't be afraid to like spit it out so what of this isn't quite clicking nothing everybody's",
    "start": "1693470",
    "end": "1704480"
  },
  {
    "text": "clear all right yes do up if I take this piece of code",
    "start": "1704480",
    "end": "1720610"
  },
  {
    "text": "can I make a promise out of it as well",
    "start": "1720610",
    "end": "1725230"
  },
  {
    "text": "say that water does Co return a promise",
    "start": "1727360",
    "end": "1736330"
  },
  {
    "text": "yes and which is awesome and I don't have the the closing parenthesis so that",
    "start": "1736670",
    "end": "1745730"
  },
  {
    "text": "probably doesn't help this is what I get for copying and pasting my code code does return a promise and so you can put",
    "start": "1745730",
    "end": "1752720"
  },
  {
    "text": "a dot catch on the end that'll even kind of bubble up even further if you have any errors and that all of that kind of",
    "start": "1752720",
    "end": "1759440"
  },
  {
    "text": "stuff happens so generators are available in almost everything so Chrome",
    "start": "1759440",
    "end": "1770180"
  },
  {
    "text": "has them Firefox has them node has them it's all there right now and so you can",
    "start": "1770180",
    "end": "1776840"
  },
  {
    "text": "go ahead and use you can use this right now what we kind of sometimes want to do",
    "start": "1776840",
    "end": "1784840"
  },
  {
    "text": "is now move out - ASA Kuwait we're talking about a",
    "start": "1784840",
    "end": "1793700"
  },
  {
    "text": "single way for just a couple of minutes yep the generator function okay so so",
    "start": "1793700",
    "end": "1802130"
  },
  {
    "text": "this is because the answer is yes okay so the question is our generators",
    "start": "1802130",
    "end": "1808490"
  },
  {
    "text": "available in the browsers right and the answer is yes the problem with that is",
    "start": "1808490",
    "end": "1813590"
  },
  {
    "text": "that it's available in the latest",
    "start": "1813590",
    "end": "1820280"
  },
  {
    "text": "browsers how many of you familiar with kanga acts Oh sweet I'm gonna show you something I",
    "start": "1820280",
    "end": "1827020"
  },
  {
    "text": "don't have this up already",
    "start": "1827020",
    "end": "1831400"
  },
  {
    "text": "oh where is it",
    "start": "1832090",
    "end": "1840850"
  },
  {
    "text": "hold on but this is a good opportunity to teach you guys can Dex except I don't",
    "start": "1840850",
    "end": "1851440"
  },
  {
    "text": "have Wi-Fi on which is super less than awesome and so I'm not gonna teach you",
    "start": "1851440",
    "end": "1858909"
  },
  {
    "text": "King of X because my wife I won't even like try to connect that's less than",
    "start": "1858909",
    "end": "1867039"
  },
  {
    "text": "cool ok so there's there's a website you can google it call here let me come down",
    "start": "1867039",
    "end": "1879730"
  },
  {
    "text": "here put it out of slide real quick so",
    "start": "1879730",
    "end": "1887159"
  },
  {
    "text": "go to Kenya X dot github I yes see I",
    "start": "1887159",
    "end": "1900760"
  },
  {
    "text": "couldn't join Wi-Fi um Kenya exile github do and what Kenya X",
    "start": "1900760",
    "end": "1908440"
  },
  {
    "text": "dot github I owe is is the compatibility table for all of es6 and es7 and yes",
    "start": "1908440",
    "end": "1915429"
  },
  {
    "text": "next and all of the features that are available to you and what Kenya X will",
    "start": "1915429",
    "end": "1921940"
  },
  {
    "text": "do for you that is the weirdest thing",
    "start": "1921940",
    "end": "1928230"
  },
  {
    "text": "like okay I'm not even going to joke no I know I can't connect so so generators",
    "start": "1928230",
    "end": "1939039"
  },
  {
    "text": "are available right now in all the latest browsers the problem with that is how many of you have to support like IE 10 or IE 9 right so they're not",
    "start": "1939039",
    "end": "1946990"
  },
  {
    "text": "available there but babel who uses babel",
    "start": "1946990",
    "end": "1952029"
  },
  {
    "text": "oh yes so some of you babble is what's",
    "start": "1952029",
    "end": "1957700"
  },
  {
    "text": "the best way to describe babble babble I like to call babble a compiler because babble calls itself a compiler but it",
    "start": "1957700",
    "end": "1963490"
  },
  {
    "text": "just so I can fit in with the cool javascript crowd it's a transpiler that",
    "start": "1963490",
    "end": "1968610"
  },
  {
    "text": "will take all your es6 code although generators and all the stuff and will convert it down to es 5 and generators",
    "start": "1968610",
    "end": "1977070"
  },
  {
    "text": "ultimately a promise based underneath if you look at what the code anyway so go",
    "start": "1977070",
    "end": "1984780"
  },
  {
    "text": "out here get all that stuff does that answer your question in a very long-winded way okay",
    "start": "1984780",
    "end": "1991350"
  },
  {
    "text": "other questions we hit play again I wish",
    "start": "1991350",
    "end": "1996540"
  },
  {
    "text": "I had internet to show you that other",
    "start": "1996540",
    "end": "2001700"
  },
  {
    "text": "questions not generators before I move because this is can be fairly mind-bending stuff but hopefully this",
    "start": "2001700",
    "end": "2007610"
  },
  {
    "text": "looks yes",
    "start": "2007610",
    "end": "2010540"
  },
  {
    "text": "so right because it because ultimately",
    "start": "2019800",
    "end": "2026370"
  },
  {
    "text": "in es5 generators don't exist right and so when you transpile down to es5 the",
    "start": "2026370",
    "end": "2034040"
  },
  {
    "text": "underpinnings with the code that it's writing is all promise base and it makes",
    "start": "2034040",
    "end": "2039330"
  },
  {
    "text": "it kind of gross and ugly which is but but ultimately yeah but generators are",
    "start": "2039330",
    "end": "2046200"
  },
  {
    "text": "promise based in general right especially this because that requests this request right here is a price to",
    "start": "2046200",
    "end": "2053398"
  },
  {
    "text": "return a promise if it doesn't return a promise it doesn't work right that it",
    "start": "2053399",
    "end": "2059639"
  },
  {
    "text": "has to return a promise and that promise gets unpacked by KO in this case and it",
    "start": "2059640",
    "end": "2066240"
  },
  {
    "text": "pulls out the value and just drops the value in to yield right so if this if",
    "start": "2066240",
    "end": "2073679"
  },
  {
    "text": "this is what's happening it was something work it has to be this I promise I don't refer to work does that",
    "start": "2073679",
    "end": "2081780"
  },
  {
    "text": "make sense oh yeah other generator questions you're starting to get warm up a little bit any",
    "start": "2081780",
    "end": "2088500"
  },
  {
    "text": "other generator questions no okay so",
    "start": "2088500",
    "end": "2093990"
  },
  {
    "text": "let's talk wrap everything in a try-catch block that's all cool okay",
    "start": "2093990",
    "end": "2101130"
  },
  {
    "text": "async here's here's the struggle with async how many of you have heard of async await okay how many of you are",
    "start": "2101130",
    "end": "2108120"
  },
  {
    "text": "using async await a couple and okay that's a great question in JavaScript",
    "start": "2108120",
    "end": "2117140"
  },
  {
    "text": "how many of you are using async await in JavaScript okay this is just a couple",
    "start": "2117140",
    "end": "2122910"
  },
  {
    "text": "anything away that's very cool the problem with a single wait for me right now is that it is not yet",
    "start": "2122910",
    "end": "2129300"
  },
  {
    "text": "available it's like true it's okay because you said you use a single way and what capacity or how are you using",
    "start": "2129300",
    "end": "2135540"
  },
  {
    "text": "it so types scripts so it's available in typescript and then it compiles down the",
    "start": "2135540",
    "end": "2141450"
  },
  {
    "text": "polyfill for a single a it is is generators under underneath it and I'll",
    "start": "2141450",
    "end": "2147990"
  },
  {
    "text": "show you aa here in just a second bye and I would have to validate a single",
    "start": "2147990",
    "end": "2155040"
  },
  {
    "text": "way is only even partially available in Babel it's not fully baked and Babel and",
    "start": "2155040",
    "end": "2161460"
  },
  {
    "text": "so this is kind of one of those things I'm gonna show you and then you can kind of see it but the reality is it's only",
    "start": "2161460",
    "end": "2169770"
  },
  {
    "text": "kind of available alright so we had this Co function right function main result",
    "start": "2169770",
    "end": "2179160"
  },
  {
    "text": "one result to all of this kind of stuff a single weight is essentially the same",
    "start": "2179160",
    "end": "2185520"
  },
  {
    "text": "thing as this which is why I spent a lot of time kind of on generators because we kind of talked through that now we have",
    "start": "2185520",
    "end": "2194360"
  },
  {
    "text": "we're gonna convert this code to a single weight code are you ready okay",
    "start": "2194360",
    "end": "2199640"
  },
  {
    "text": "this is code generators that's a single weight there's really not much",
    "start": "2199640",
    "end": "2208380"
  },
  {
    "text": "difference right that's the difference so basically the only difference between",
    "start": "2208380",
    "end": "2215190"
  },
  {
    "text": "the the generator based thing that I'm showing you with is you drop go out and",
    "start": "2215190",
    "end": "2220760"
  },
  {
    "text": "up here instead of code now you have a sink and it's not a generator function",
    "start": "2220760",
    "end": "2226110"
  },
  {
    "text": "in March there's an async function still do all your tries still do all your",
    "start": "2226110",
    "end": "2231540"
  },
  {
    "text": "caches all of that stuff still kind of works but now you've got a week instead",
    "start": "2231540",
    "end": "2238080"
  },
  {
    "text": "of yield right other than that it works",
    "start": "2238080",
    "end": "2243870"
  },
  {
    "text": "exact the same way so if you write your code now using code using generators if",
    "start": "2243870",
    "end": "2251100"
  },
  {
    "text": "you ever want to convert everything over to async await you want now understand",
    "start": "2251100",
    "end": "2256290"
  },
  {
    "text": "how it all works right I mean that's kind of how it works and then we kind of go through that that's a now anything is",
    "start": "2256290",
    "end": "2266490"
  },
  {
    "text": "he is next and I can't get to kanga so I can't show you kind of where it's at and",
    "start": "2266490",
    "end": "2272930"
  },
  {
    "text": "it's a little ways off it'll be what would be your best guess if I had to ask",
    "start": "2272930",
    "end": "2278880"
  },
  {
    "text": "your thoughts when when do you think I think away it would be generally available in the white",
    "start": "2278880",
    "end": "2284640"
  },
  {
    "text": "I probably say six months ish before you",
    "start": "2284640",
    "end": "2290130"
  },
  {
    "text": "can really yep yep bye for now",
    "start": "2290130",
    "end": "2300269"
  },
  {
    "text": "start writing everything with Co with generators and then it all just works",
    "start": "2300269",
    "end": "2305670"
  },
  {
    "text": "because that stuff is available now unless you have to support ie ten but if you're if you're you know the the late",
    "start": "2305670",
    "end": "2312450"
  },
  {
    "text": "stage II's go ahead and use it use Babel to trans file and you'll be in really",
    "start": "2312450",
    "end": "2320849"
  },
  {
    "text": "good shape okay you guys were very light on the questions and so I'm kind of",
    "start": "2320849",
    "end": "2327480"
  },
  {
    "text": "through a little early but we can go back so so here's what I want to do I",
    "start": "2327480",
    "end": "2336260"
  },
  {
    "text": "can go back and we can kind of talk through some flow of generators if you",
    "start": "2336260",
    "end": "2341819"
  },
  {
    "text": "would like to if you have questions we can talk through some other stuff if you do not have questions I am not offended",
    "start": "2341819",
    "end": "2347990"
  },
  {
    "text": "you are freedom to go out this way but if you do have questions let's talk",
    "start": "2347990",
    "end": "2354029"
  },
  {
    "text": "through some stuff because I want to make sure you guys are clear this is weird this looks not weird this was",
    "start": "2354029",
    "end": "2365670"
  },
  {
    "text": "weird right so I want to kind of give you guys the opportunity to really talk through this",
    "start": "2365670",
    "end": "2371960"
  },
  {
    "text": "okay so this is a great question so in a single way it's kind of kind of be the same thing as Co how am i how am i",
    "start": "2379960",
    "end": "2391030"
  },
  {
    "text": "executing this right where does this sit inside of our application that's a great question because ultimately well let's",
    "start": "2391030",
    "end": "2400280"
  },
  {
    "text": "go to the async/await one so I have this function right and I've got main where",
    "start": "2400280",
    "end": "2407720"
  },
  {
    "text": "does main sit and main would sit so I would wrap my my service layer is all",
    "start": "2407720",
    "end": "2415400"
  },
  {
    "text": "async/await so when I call my service I'm calling an async function and then",
    "start": "2415400",
    "end": "2422360"
  },
  {
    "text": "it's going to run through all of this stuff and then it's going to come back or it's not gonna come back so in that",
    "start": "2422360",
    "end": "2430280"
  },
  {
    "text": "situation if I there's a couple different ways to do this and who asks for about promises right so ultimately",
    "start": "2430280",
    "end": "2437780"
  },
  {
    "text": "in this situation I might have my service return a promise I step through all my async stuff and then when my",
    "start": "2437780",
    "end": "2444650"
  },
  {
    "text": "acing stuff is all done and resolve the promise does that make sense if if I",
    "start": "2444650",
    "end": "2450710"
  },
  {
    "text": "didn't want to do that sometimes you're just handing stuff off I just call it and I don't care I'm not worried about",
    "start": "2450710",
    "end": "2455900"
  },
  {
    "text": "it you're gonna throw an error if something's broken otherwise we're going to go back that way so that makes sense",
    "start": "2455900",
    "end": "2463210"
  },
  {
    "text": "all right what else what other stuff is kind of percolating that doesn't say yep",
    "start": "2463210",
    "end": "2471010"
  },
  {
    "text": "Soko is actually a function of execution so in and of itself so I execute co and",
    "start": "2477440",
    "end": "2485550"
  },
  {
    "text": "I pass in my generator and it just runs it so this would be kind of the same",
    "start": "2485550",
    "end": "2490860"
  },
  {
    "text": "thing that we were just talking about if I have my service layer I I do you know",
    "start": "2490860",
    "end": "2496280"
  },
  {
    "text": "book service or this case greeting service dots send greeting and then that",
    "start": "2496280",
    "end": "2504060"
  },
  {
    "text": "send greeting function is just a coke all in it it goes in a desert yeah so",
    "start": "2504060",
    "end": "2513750"
  },
  {
    "text": "there would be a function around this oh",
    "start": "2513750",
    "end": "2518450"
  },
  {
    "text": "you mean this yeah I always put one",
    "start": "2522170",
    "end": "2528960"
  },
  {
    "text": "there I haven't done it without it because I always did my functions when I",
    "start": "2528960",
    "end": "2536220"
  },
  {
    "text": "have yeah I think so but now that's actually a great thing I'm gonna will",
    "start": "2536220",
    "end": "2542700"
  },
  {
    "text": "try here here in just a couple of minutes what",
    "start": "2542700",
    "end": "2550280"
  },
  {
    "text": "okay yep yep so you can just put a star okay awesome",
    "start": "2552890",
    "end": "2558480"
  },
  {
    "text": "all right what else what other questions what else do I need yeah",
    "start": "2558480",
    "end": "2563570"
  },
  {
    "text": "that's an awesome question it's completely unrelated to this",
    "start": "2568310",
    "end": "2573630"
  },
  {
    "text": "conversation but that's fine and we'll talk about it so so if we are debugging",
    "start": "2573630",
    "end": "2580700"
  },
  {
    "text": "our JavaScript code it depends on if your where are you debugging it's sort",
    "start": "2580700",
    "end": "2590010"
  },
  {
    "text": "of debugging like chrome tools it depends on if you're transplanting it depends on where you write your my brain",
    "start": "2590010",
    "end": "2597990"
  },
  {
    "text": "just went blank what's the thing",
    "start": "2597990",
    "end": "2603260"
  },
  {
    "text": "you know what I chance filed down what",
    "start": "2606500",
    "end": "2611770"
  },
  {
    "text": "yes thank you my map files because it'll it'll pull it back up and you can",
    "start": "2611770",
    "end": "2618230"
  },
  {
    "text": "actually debug through this if you're writing yeah if you're writing about",
    "start": "2618230",
    "end": "2623540"
  },
  {
    "text": "files outside and then your UI can actually pull I can even debug through",
    "start": "2623540",
    "end": "2628730"
  },
  {
    "text": "my TS files up at that level if I want to and so this will little work just the same way yeah so how many of you do not",
    "start": "2628730",
    "end": "2636290"
  },
  {
    "text": "debug in Chrome or something Oh Chrome",
    "start": "2636290",
    "end": "2642620"
  },
  {
    "text": "oh I said how many do not and nobody raised their hand does that mean everybody does I double my I double",
    "start": "2642620",
    "end": "2647870"
  },
  {
    "text": "negated myself yeah okay so great you guys are all on the right path",
    "start": "2647870",
    "end": "2653500"
  },
  {
    "text": "definitely definitely debugging Chrome right your map files get it up there and",
    "start": "2653500",
    "end": "2660530"
  },
  {
    "text": "it all begin okay any any other questions okay I'm gonna let you guys go",
    "start": "2660530",
    "end": "2667250"
  },
  {
    "text": "just a little bit early I am gonna I will stand here and if you were not",
    "start": "2667250",
    "end": "2673160"
  },
  {
    "text": "wanting to ask questions in front of the large group of people that's totally cool",
    "start": "2673160",
    "end": "2678770"
  },
  {
    "text": "come and ask me privately if you would like to and then I will loudly answer the question for the 17 other people who",
    "start": "2678770",
    "end": "2685460"
  },
  {
    "text": "were afraid to ask the same question as we go okay so you guys can go but like I",
    "start": "2685460",
    "end": "2691160"
  },
  {
    "text": "said come up here and let's talk through questions if you have them thank you guys",
    "start": "2691160",
    "end": "2697170"
  },
  {
    "text": "[Applause]",
    "start": "2697170",
    "end": "2700139"
  }
]