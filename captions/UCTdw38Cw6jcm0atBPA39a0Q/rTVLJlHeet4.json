[
  {
    "text": "hi and welcome to techniques and practices testing angular2 i'm adam stephenson i'm",
    "start": "7820",
    "end": "14799"
  },
  {
    "text": "a solution architect and the general manager of SSW in queensland out in australia i'm my primary responsibility",
    "start": "14799",
    "end": "23529"
  },
  {
    "text": "is i'm in charge of making sure that we shipped large enterprise web applications and I'm also a mentor at",
    "start": "23529",
    "end": "29080"
  },
  {
    "text": "five boot camp which is where we do a whole lot of angular2 training through SSW my name is Duncan I work with Adam",
    "start": "29080",
    "end": "35589"
  },
  {
    "text": "in Brisbane Australia I'm a Software Architect at SSW and I've been really lucky just to do pretty much only angular for the last couple of years",
    "start": "35589",
    "end": "41650"
  },
  {
    "text": "angular 1 & 2 all in typescript been involved in about a dozen projects and we get we've been lucky enough to train",
    "start": "41650",
    "end": "48100"
  },
  {
    "text": "and do lots of code reviews over the last probably year and a half while angular's being kind of moving through alpha and beta into being released in",
    "start": "48100",
    "end": "54729"
  },
  {
    "text": "angular 2 and now we're finding a lot of people because it's angular 2 is released or actually at the point where",
    "start": "54729",
    "end": "60280"
  },
  {
    "text": "they're writing their applications and they're cut and the first thing they do when they actually kind of start is going to test this so we've found a lot",
    "start": "60280",
    "end": "66909"
  },
  {
    "text": "of people have been very interested in talking about testing with angular 2 now that everyone's actually kind of getting into production with it so hopefully we",
    "start": "66909",
    "end": "73330"
  },
  {
    "text": "can share some of the tips and tricks along the way we've learned in a lot of that teaching awesome",
    "start": "73330",
    "end": "79440"
  },
  {
    "text": "so also you'll hear us saying Euler to a whole bunch but we probably shouldn't",
    "start": "79440",
    "end": "85420"
  },
  {
    "text": "because angular has decided to drop the version numbering from their name they're not going to be angularjs",
    "start": "85420",
    "end": "91330"
  },
  {
    "text": "they're not going to be angular 2 they're just going to be angular and they're gonna pick up semantic versioning so they're gonna be truck",
    "start": "91330",
    "end": "97390"
  },
  {
    "text": "they're going to be iterating much more quickly so there'll be a lot less relevant hopefully we'll get a lot less breaking changes and it'll be a bit more",
    "start": "97390",
    "end": "103810"
  },
  {
    "text": "evergreen so we'll say angular 2 a whole bunch just because we're transitioning that moving forward in the whole world",
    "start": "103810",
    "end": "109540"
  },
  {
    "text": "hopefully it's is going to be angular so so who has tested angular 1 who's",
    "start": "109540",
    "end": "117340"
  },
  {
    "text": "written angular 1 tests only a couple of people so who's written angular 2 tests",
    "start": "117340",
    "end": "123520"
  },
  {
    "text": "so far awesome where you guys are in the right room just for the record that was",
    "start": "123520",
    "end": "130030"
  },
  {
    "text": "at any hands went up just then there was two on angular 1 but any Frank Euler - okay cool great we're in the right spot",
    "start": "130030",
    "end": "136989"
  },
  {
    "text": "definitely so just before we start a bit of history so it was 1979 when",
    "start": "136989",
    "end": "144200"
  },
  {
    "text": "testing the first time the testing was actually differentiated as a different practice from debugging so we've been",
    "start": "144200",
    "end": "149510"
  },
  {
    "text": "doing this a while now in 1996 Kent Beck released XP or wrote",
    "start": "149510",
    "end": "155209"
  },
  {
    "text": "about extreme programming which had a real focus on testing and in 19 1988 he",
    "start": "155209",
    "end": "161000"
  },
  {
    "text": "released s unit which was the first of the xunit frameworks which a lot of the current frameworks are still based upon",
    "start": "161000",
    "end": "167230"
  },
  {
    "text": "in 2001 pivotal labs did a javascript",
    "start": "167230",
    "end": "172340"
  },
  {
    "text": "port of s unit for jeaious unit and keep an eye out on pivotal labs in 2003 TDD",
    "start": "172340",
    "end": "179569"
  },
  {
    "text": "test-driven development started gaining a lot of popularity in 2006 den North",
    "start": "179569",
    "end": "186430"
  },
  {
    "text": "wrote about a new way of writing tests so it was an evolution of TDD with more",
    "start": "186430",
    "end": "191840"
  },
  {
    "text": "human readable tests for behavior driven development and Dan's actually at the conference if you see him make sure you",
    "start": "191840",
    "end": "196970"
  },
  {
    "text": "buy him and be up and then in 2006 we got selenium for running our end-to-end",
    "start": "196970",
    "end": "203599"
  },
  {
    "text": "tests in 2010 we got Jasmine which was by pivotal labs again and that was the",
    "start": "203599",
    "end": "209090"
  },
  {
    "text": "updated version of Java jeaious unit in 2010 angular 1 came out and this was",
    "start": "209090",
    "end": "214940"
  },
  {
    "text": "really cool I was really excited about this for the first time file new project was test-driven so angular 1 from the",
    "start": "214940",
    "end": "222049"
  },
  {
    "text": "very first version had a real focus on testing between 2011 karma came out from",
    "start": "222049",
    "end": "228290"
  },
  {
    "text": "the Google team and I actually much preferred its original name which was testacular which is pretty cool",
    "start": "228290",
    "end": "234620"
  },
  {
    "text": "in 2013 we got protractor 4 which is how we now run our end-to-end tests and it's",
    "start": "234620",
    "end": "240709"
  },
  {
    "text": "using selenium under the covers and 2016 we got angular 2 now what's really interesting about this history is that",
    "start": "240709",
    "end": "248060"
  },
  {
    "text": "you know we're still doing TDD we're still Jasmin actually uses BDD we're",
    "start": "248060",
    "end": "254060"
  },
  {
    "text": "still using so protractor weezing protractor and it uses selenium under the covers we're gonna be writing",
    "start": "254060",
    "end": "259340"
  },
  {
    "text": "jasmine so a lot of the practices we're following in the tools were using in 2016 they're not new they've actually",
    "start": "259340",
    "end": "266840"
  },
  {
    "text": "been around for a really long time so why are people writing tests well tests aren't necessarily easy to",
    "start": "266840",
    "end": "274099"
  },
  {
    "text": "write it's not always easy to write code and one of the things we're really going to come around and one of the focuses that",
    "start": "274099",
    "end": "280069"
  },
  {
    "text": "we want to focus on today is showing you're the cool new utilities that the angular team have put into angular 2",
    "start": "280069",
    "end": "285769"
  },
  {
    "text": "that are going to make testing easier and hopefully that will enable more people to write tests so our agenda for",
    "start": "285769",
    "end": "292669"
  },
  {
    "text": "today we're gonna have a look at the tools that you use to write unit tests we're gonna have a look at Jasmin we're",
    "start": "292669",
    "end": "297709"
  },
  {
    "text": "gonna talk about then the three biggest challenging areas around testing which",
    "start": "297709",
    "end": "302779"
  },
  {
    "text": "is faking dependencies and about the testbed API which is a new API that the",
    "start": "302779",
    "end": "309079"
  },
  {
    "text": "team's included an angular 2 which is really going to help you with your tests and the real challenges around you know",
    "start": "309079",
    "end": "315979"
  },
  {
    "text": "programming and how do you test asynchronous code and then we're gonna have a look at some into n tests",
    "start": "315979",
    "end": "323139"
  },
  {
    "text": "cool so we're gonna jump in and have a look at some of the tools that are most",
    "start": "323139",
    "end": "328669"
  },
  {
    "text": "popular for angular 2 and I think it's good to reiterate what Adam said that you know testings not an afterthought",
    "start": "328669",
    "end": "335389"
  },
  {
    "text": "for angular 2 it's kind of it was one of the most notable things about angular 1 is when it first came out it was all",
    "start": "335389",
    "end": "341360"
  },
  {
    "text": "about being testable and if you go look at the docs for angular 2 at angular dot IO for testing you try and print them",
    "start": "341360",
    "end": "347360"
  },
  {
    "text": "out it's about 99 pages long it's just one long document on the web so there's a lot to it and it's it's there's a lot",
    "start": "347360",
    "end": "354649"
  },
  {
    "text": "of great new things so we'll show you some of those today so when we're talking about what we're going to test today we're going to be doing some unit",
    "start": "354649",
    "end": "360439"
  },
  {
    "text": "tests and we're gonna do some end-to-end tests of course the enter the unit tests are just testing specific functionality",
    "start": "360439",
    "end": "366679"
  },
  {
    "text": "or specific functions and the end-to-end tests is actually you know running up a browser and you know running tests",
    "start": "366679",
    "end": "373669"
  },
  {
    "text": "against that browser and looking at way an actual user would work with that browser or the application running in",
    "start": "373669",
    "end": "379189"
  },
  {
    "text": "the browser so these are kind of the default tools that everyone's using for angular to ever know you've got options",
    "start": "379189",
    "end": "384589"
  },
  {
    "text": "so for your unit tests you'd be using karma as your test Runner you'd get jasmine as your testing framework and",
    "start": "384589",
    "end": "390229"
  },
  {
    "text": "for your syntax and then I've got angular here because angular is actually part of the deal there's a whole bunch of testing utilities that you use when",
    "start": "390229",
    "end": "396379"
  },
  {
    "text": "you're testing angular to when you're running your end-to-end tests protractors the default for kind of an",
    "start": "396379",
    "end": "402769"
  },
  {
    "text": "angular wrapper over the selenium webdriver and you'll also use Jasmine in that case so you can use mocker and",
    "start": "402769",
    "end": "408619"
  },
  {
    "text": "sign-on if you're used to using those but most people are using this",
    "start": "408619",
    "end": "414209"
  },
  {
    "text": "combination of things and it's what a lot of the default tooling that comes out of the box is using so what's",
    "start": "414209",
    "end": "420330"
  },
  {
    "text": "Jasmine looked like well Jasmine gives us this BDD style kind of syntax this is an individual test it's an it block you",
    "start": "420330",
    "end": "427259"
  },
  {
    "text": "could also call it a spec and it takes a string it's got this video d english kind of written sentence in it so should",
    "start": "427259",
    "end": "433740"
  },
  {
    "text": "add one plus one and then it takes an anonymous function and then you do your testing inside that block there and then",
    "start": "433740",
    "end": "439319"
  },
  {
    "text": "here we're using one of the Jasmine matches which is dot two equal but there's lots of match matches in Jasmine",
    "start": "439319",
    "end": "444959"
  },
  {
    "text": "so we could have an individual test like this you would always wrap them in a describe block so you'll have multiple",
    "start": "444959",
    "end": "450240"
  },
  {
    "text": "tests inside of this described block and there's a lot of flexibility in the way of using Jasmine you could have nested",
    "start": "450240",
    "end": "457439"
  },
  {
    "text": "describe blocks in each of those nested describe blocks have more eight blocks in them so you got more individual tests",
    "start": "457439",
    "end": "462749"
  },
  {
    "text": "and it can go on and on as much as dynamically as you want to do it so you could have this nested structure of",
    "start": "462749",
    "end": "468300"
  },
  {
    "text": "describes in its statements but this is kind of the general flow that you'll see commas the test runner runs in whatever",
    "start": "468300",
    "end": "477059"
  },
  {
    "text": "browser you want to choose out of the main browsers and you can run it on your build server and when you run it you get",
    "start": "477059",
    "end": "483029"
  },
  {
    "text": "an output in the terminal similar to this this all these tests are passing in this scenario but just to point out the",
    "start": "483029",
    "end": "488849"
  },
  {
    "text": "fact that commas your test Runner protractor looks really similar in the terminal when it gives you the output but of course it's fundamentally",
    "start": "488849",
    "end": "494879"
  },
  {
    "text": "completely different because it's actually running your whole application in the browns they're not just part of your application like you would in a",
    "start": "494879",
    "end": "500519"
  },
  {
    "text": "unit test so we can see here again you'll get this output of tests and we're going to be doing a few small code",
    "start": "500519",
    "end": "506819"
  },
  {
    "text": "demos over the day so you'll see both protractor and karma working now there's another tool that I really love family",
    "start": "506819",
    "end": "514939"
  },
  {
    "text": "we've only got now up Duncans a massive fit Duncan's actually a massive fan of wallaby he's actually got the first",
    "start": "515630",
    "end": "521939"
  },
  {
    "text": "wallaby stick in the world yep Luke he actually sent this to me so he actually gave me a whole bunch I'll go",
    "start": "521939",
    "end": "527910"
  },
  {
    "text": "to my bag so if you want to comp it in you can get a wall of your sneaker or a magnet so what is wallaby who's heard of wallaby jeaious okay a couple of people",
    "start": "527910",
    "end": "535199"
  },
  {
    "text": "so well a bj is just another test runner but it's designed to be running tests in your IDE so what you get is real-time",
    "start": "535199",
    "end": "541380"
  },
  {
    "text": "feedback so imagine you had those similar tests that I had up before on the left here you can see that the first test is passing and the second",
    "start": "541380",
    "end": "547440"
  },
  {
    "text": "test is failing and you get this red dot on it and you also get this great what you would normally get in the terminal",
    "start": "547440",
    "end": "553800"
  },
  {
    "text": "saying what your error is in karma in line there so there's a there's a lot more benefits to this you can do code",
    "start": "553800",
    "end": "559529"
  },
  {
    "text": "coverage and other stuff but it's great because it gives you you know this fast feedback so where you'll see us use both of these today it does cost about a",
    "start": "559529",
    "end": "566610"
  },
  {
    "text": "hundred bucks us so you got to take that into account but if you're writing lots of tests then it can be very useful I",
    "start": "566610",
    "end": "573000"
  },
  {
    "text": "actually ran had to run a little while for a couple of days without it and I actually noticed how much of a how much",
    "start": "573000",
    "end": "579389"
  },
  {
    "text": "of a Productivity drop I had having to constantly jump back out of the terminal yeah so angular CLI",
    "start": "579389",
    "end": "586319"
  },
  {
    "text": "is not a testing tool but the angular CLI is something that from the community",
    "start": "586319",
    "end": "591389"
  },
  {
    "text": "and the Google team that allow you to be able to spin up a new application really quick and when you new up an application",
    "start": "591389",
    "end": "596639"
  },
  {
    "text": "an angular 2 application it comes with all the testing out-of-the-box so I mention it here just because we're using it today and it's an awesome way to",
    "start": "596639",
    "end": "603209"
  },
  {
    "text": "learn testing and start even a proper application with the angular CLI it comes with all your end-to-end test and",
    "start": "603209",
    "end": "609029"
  },
  {
    "text": "unit tests ready to go so you just go farm your project and then start writing tests so if you want to learn to write",
    "start": "609029",
    "end": "614279"
  },
  {
    "text": "tests it's a great way to do it so in summary out of the tools you want to use the angular CLI if you want to",
    "start": "614279",
    "end": "619980"
  },
  {
    "text": "get up and running really quickly karma protractor and Jasmine or the default but there are options but almost",
    "start": "619980",
    "end": "625649"
  },
  {
    "text": "everybody at this stage in the early stages of testing angular 2 in the community and all the information that's out there everyone's using these ones",
    "start": "625649",
    "end": "632000"
  },
  {
    "text": "and you should check out wallaby jeaious it's a pretty handy tool so we're going",
    "start": "632000",
    "end": "637769"
  },
  {
    "text": "to jump on to talking about Jasmine because what we're going to write today and all that the it's kind of the",
    "start": "637769",
    "end": "644519"
  },
  {
    "text": "testing framework of choice and I call it a framework even though we talk about syntax because there's a lot more to it than just the syntax so we're going to",
    "start": "644519",
    "end": "651990"
  },
  {
    "text": "be testing some Chuck Norris jokes today and the reason we've got this very simple little application that basically",
    "start": "651990",
    "end": "658529"
  },
  {
    "text": "allows you to click the button and get another Chuck Norris joke is because it",
    "start": "658529",
    "end": "664259"
  },
  {
    "text": "kind of represents the common things you need to do you'll have a service you serve angular service will course in a few people chuckling we'll call the call",
    "start": "664259",
    "end": "671839"
  },
  {
    "text": "HTTP requests to get the next joke and then you've got to communicate between your angular service and your component",
    "start": "671839",
    "end": "677459"
  },
  {
    "text": "you can pone has to bind that data and then you've got some Dom events that you want to listen to and detect changes in your",
    "start": "677459",
    "end": "682500"
  },
  {
    "text": "tests so kind of it's a nice simple easily understand application to think about all those common pieces that",
    "start": "682500",
    "end": "688410"
  },
  {
    "text": "you'll want to test so let's jump into Visual Studio code and we're going to have a look at writing some very simple",
    "start": "688410",
    "end": "694440"
  },
  {
    "text": "tests so if we come over and have a look",
    "start": "694440",
    "end": "702240"
  },
  {
    "text": "in the directory over here we've got an angular CLI application and it's just very default version of it and we've",
    "start": "702240",
    "end": "709080"
  },
  {
    "text": "gone and written a joke feature that you saw on the page there and we have this joke component spec file so obviously",
    "start": "709080",
    "end": "716880"
  },
  {
    "text": "all of the unit tests if you're going to go down the road of using the inbuilt tools anything with a dot spec inside of",
    "start": "716880",
    "end": "722760"
  },
  {
    "text": "this app folder is going to get run as a test by karma the test Runner so I'm",
    "start": "722760",
    "end": "728220"
  },
  {
    "text": "just going to come in here and I can do a describe block in Jasmine and I'm going to be describing a certain",
    "start": "728220",
    "end": "734700"
  },
  {
    "text": "component here and that component is going to be our joke component and then",
    "start": "734700",
    "end": "740700"
  },
  {
    "text": "inside of here I can do a Jasmine Jasmine it and here I can say something",
    "start": "740700",
    "end": "747780"
  },
  {
    "text": "very simple like should add one plus one so in this case I just need to do an",
    "start": "747780",
    "end": "753030"
  },
  {
    "text": "expectation with jasmine and say one plus one is going to equal 3 and of",
    "start": "753030",
    "end": "759900"
  },
  {
    "text": "course this is going to fail because we know that's not correct but you start to get a look at what the syntax is like",
    "start": "759900",
    "end": "766200"
  },
  {
    "text": "I'm going to open up a terminal here and I'm just going to clear it out and I've",
    "start": "766200",
    "end": "772110"
  },
  {
    "text": "already got the application running in another terminal but I'm just going to run ng test here so ng is the way you get a hold of the angular CLI and then",
    "start": "772110",
    "end": "779310"
  },
  {
    "text": "you can ask it to run your test so I'm going to ask it to run the tests it's going to kick off Karma all of this",
    "start": "779310",
    "end": "784320"
  },
  {
    "text": "comes out of the box in a you know once you've installed that it's very quick to do so it's going to run that and it's",
    "start": "784320",
    "end": "790050"
  },
  {
    "text": "going to say that it fails because we we know one plus one equals two not three so I could just obviously change that",
    "start": "790050",
    "end": "795420"
  },
  {
    "text": "back comas watching that file that was saved and then I'll rerun the test and now we can see that the test is passing",
    "start": "795420",
    "end": "801660"
  },
  {
    "text": "down here and we have a successful test but I'm going to turn this off and I'm",
    "start": "801660",
    "end": "807390"
  },
  {
    "text": "just going to run wallaby instead which will do a similar thing but it's going to give us the output of our tests",
    "start": "807390",
    "end": "813900"
  },
  {
    "text": "in line here so why love you'll kick off it will show us you can see it's just starting up down here in the bottom right and as it starts up all then show",
    "start": "813900",
    "end": "821370"
  },
  {
    "text": "us the green dots so it's just another way of doing the test runner so I could say it's three and then it's going to fail and it's going to show us the",
    "start": "821370",
    "end": "827460"
  },
  {
    "text": "output so it's quite a nice testing experience to do it like that so enough talking about jasmine in that",
    "start": "827460",
    "end": "832560"
  },
  {
    "text": "sense let's move on and talk about how would we actually do a really simple test to test angular so in that case I",
    "start": "832560",
    "end": "837810"
  },
  {
    "text": "could make another eight block or another test and I'm going to say it should have a title of title here on our",
    "start": "837810",
    "end": "846570"
  },
  {
    "text": "application which is Chuck Norris jokes so I'm going to jump back over and say",
    "start": "846570",
    "end": "855450"
  },
  {
    "text": "that it should have a title of this so I'm just going to new up a component here so I'm just going to say Const",
    "start": "855450",
    "end": "863330"
  },
  {
    "text": "component equals a new joke component now this is the start of our challenges",
    "start": "863330",
    "end": "869700"
  },
  {
    "text": "with if you're jumping into testing angular 2 is a joke component if I look at it here it's giving me is telling me",
    "start": "869700",
    "end": "876720"
  },
  {
    "text": "if I want to new it up I'm going to need a joke service I'm going to have I've got a dependency on this joke service and we're going to come back and talk",
    "start": "876720",
    "end": "882720"
  },
  {
    "text": "about faking dependencies but for now I'm just going to pass in null here because I'm not actually going to test",
    "start": "882720",
    "end": "887850"
  },
  {
    "text": "anything with the joke service and I now have the component that I can test so I can do an expectation and say that my",
    "start": "887850",
    "end": "895230"
  },
  {
    "text": "component title and this is kind of cool if you're used to testing with JavaScript your pup might not",
    "start": "895230",
    "end": "901410"
  },
  {
    "text": "necessarily be used to testing with typescript so because we're testing with typescript together all the same",
    "start": "901410",
    "end": "906780"
  },
  {
    "text": "intellisense and code completion and so forth so I can just go yep I want to look at the components title it's",
    "start": "906780",
    "end": "912840"
  },
  {
    "text": "already telling me in line there that had expected the the string that we have and then now the test is passing so this",
    "start": "912840",
    "end": "921120"
  },
  {
    "text": "is just a very like quick look at how you can do a test and we're going to",
    "start": "921120",
    "end": "926640"
  },
  {
    "text": "jump deeper into how you would do some other tests in a second so we had a",
    "start": "926640",
    "end": "932100"
  },
  {
    "text": "quick look at adding one plus one and then we had second test and we looked at doing it up so in summary with jasmine",
    "start": "932100",
    "end": "938610"
  },
  {
    "text": "it is the default kind of testing framework tool for the angular community or the there's other ones you could use and",
    "start": "938610",
    "end": "945720"
  },
  {
    "text": "it's a lot more than syntax we're just using the syntax there but there's a lot of testing helpers and you'll see Adam",
    "start": "945720",
    "end": "951090"
  },
  {
    "text": "show you a couple of those now cool thanks Duncan so what I'm going to talk",
    "start": "951090",
    "end": "956310"
  },
  {
    "text": "about is faking dependencies and faking and the set up of dependencies is still one of the hardest parts of testing",
    "start": "956310",
    "end": "962370"
  },
  {
    "text": "doesn't matter what language you've been using when you're trying to test a particular piece of code and that code",
    "start": "962370",
    "end": "967980"
  },
  {
    "text": "has a whole lot of dependent is dependent on other modules it's very",
    "start": "967980",
    "end": "973140"
  },
  {
    "text": "hard to isolate to just test that coat that dumb that this particular structure under test so this is what Duncan showed",
    "start": "973140",
    "end": "981090"
  },
  {
    "text": "so we've got this situation where we've got our component that component has a",
    "start": "981090",
    "end": "986730"
  },
  {
    "text": "dependency on a service so at the moment we're just passing null what we want to",
    "start": "986730",
    "end": "991770"
  },
  {
    "text": "be able to do is our joke component depends on HTTP service that's actually",
    "start": "991770",
    "end": "996990"
  },
  {
    "text": "going out to the web to you know a really useful API that returns Chuck Norris jokes when we write our unit",
    "start": "996990",
    "end": "1002870"
  },
  {
    "text": "tests we don't want those tests to be going and calling that service so what",
    "start": "1002870",
    "end": "1008240"
  },
  {
    "text": "we can do is we can go and create a fake so we can create a fake object here we",
    "start": "1008240",
    "end": "1013910"
  },
  {
    "text": "can assign some behavior and say return a particular string and then we can pass that fake into a joke component that's",
    "start": "1013910",
    "end": "1020750"
  },
  {
    "text": "one way of managing dependencies now Jasmine gives us some helpers so an",
    "start": "1020750",
    "end": "1026870"
  },
  {
    "text": "alternative method is that we can actually create Jasmine spies so you can see here I'm using the Jasmine create",
    "start": "1026870",
    "end": "1032780"
  },
  {
    "text": "spy object method I pass in the name of the object that I want to make and I",
    "start": "1032780",
    "end": "1038660"
  },
  {
    "text": "pass in an array that has the functions on that object and it's actually then going to return me a fake what I can",
    "start": "1038660",
    "end": "1045680"
  },
  {
    "text": "then do is go and say on the joke servers get joke method I can then specify the behavior that I expect and",
    "start": "1045680",
    "end": "1052730"
  },
  {
    "text": "then I can pass that into the class that I want to test so there are two",
    "start": "1052730",
    "end": "1057980"
  },
  {
    "text": "different ways of of managing the dependencies in our application so one",
    "start": "1057980",
    "end": "1064010"
  },
  {
    "text": "of the bits so the benefits of spies is that spies let you intercept any function call and they also let you",
    "start": "1064010",
    "end": "1070220"
  },
  {
    "text": "override the behavior of the function",
    "start": "1070220",
    "end": "1073720"
  },
  {
    "text": "one of the other benefits of spies is that they let us check what's actually happening on those dependencies so I'm",
    "start": "1075799",
    "end": "1082950"
  },
  {
    "text": "able to verify that the get joke method has actually been called I'm also able to verify how many times it was called",
    "start": "1082950",
    "end": "1089249"
  },
  {
    "text": "and I can also verify what parameters were passed to that particular method",
    "start": "1089249",
    "end": "1095809"
  },
  {
    "text": "let's go and have a look at what that might look like in code",
    "start": "1096080",
    "end": "1100849"
  },
  {
    "text": "so what I'm going to do is I'm going to come down here and I'm going to create a new test okay and what am I going to do",
    "start": "1105040",
    "end": "1112690"
  },
  {
    "text": "for my test what I'm going to say is I'm gonna say that my test should set the",
    "start": "1112690",
    "end": "1117700"
  },
  {
    "text": "joke property on the component now let's have",
    "start": "1117700",
    "end": "1122890"
  },
  {
    "text": "a little bit of a look at what I mean by that I'm gonna jump into my component and have a look and now in here you can",
    "start": "1122890",
    "end": "1128470"
  },
  {
    "text": "see when the components initialized it calls the get joke method they get joke",
    "start": "1128470",
    "end": "1133810"
  },
  {
    "text": "method goes off to my API and then when it returns a value it assigns it to the",
    "start": "1133810",
    "end": "1140020"
  },
  {
    "text": "joke property on this class okay so what I'm gonna do is I could new up",
    "start": "1140020",
    "end": "1147220"
  },
  {
    "text": "the component here and then go and call the ng on init method and then go and",
    "start": "1147220",
    "end": "1152950"
  },
  {
    "text": "check that the property is correct but before I do that rather than declaring a",
    "start": "1152950",
    "end": "1158200"
  },
  {
    "text": "new component inside every test I'm gonna jump up to the top of my my my",
    "start": "1158200",
    "end": "1164710"
  },
  {
    "text": "describe LOC and I'm gonna use the before each Jasmine function and I'm",
    "start": "1164710",
    "end": "1171460"
  },
  {
    "text": "gonna say before each test what I want to do is I want to execute the following",
    "start": "1171460",
    "end": "1182460"
  },
  {
    "text": "what I want to do is I want to come in here and I want to say I'm going to come up and I'm going to declare my component",
    "start": "1182460",
    "end": "1189400"
  },
  {
    "text": "up the top and I'm going to say that that is a joke component and then in my",
    "start": "1189400",
    "end": "1199750"
  },
  {
    "text": "before each now I can set the component component equal to a new joke component",
    "start": "1199750",
    "end": "1208290"
  },
  {
    "text": "know okay so I've just done a little bit of refactoring so that I don't have to",
    "start": "1208290",
    "end": "1215610"
  },
  {
    "text": "creating your component in every test cool so now for my test what I want to",
    "start": "1215610",
    "end": "1222940"
  },
  {
    "text": "do is I want to come down here and I want to say on my component I want to",
    "start": "1222940",
    "end": "1230380"
  },
  {
    "text": "call that mg on init method that's the one that goes out calls the service and then assigns it to the property once",
    "start": "1230380",
    "end": "1237640"
  },
  {
    "text": "I've done that what I'm going to do is do an expectation and I'm gonna expect that",
    "start": "1237640",
    "end": "1243310"
  },
  {
    "text": "the components joke property is equal to something that I know okay",
    "start": "1243310",
    "end": "1250210"
  },
  {
    "text": "now this isn't going to work because we don't have a service ng on inner is going to call the service that was",
    "start": "1250210",
    "end": "1256480"
  },
  {
    "text": "passed into the component when it was instantiated but we're not passing in a component yet so let's see what it looks",
    "start": "1256480",
    "end": "1262120"
  },
  {
    "text": "like if I come along and what I'm going to do is I'm going to come up and I'm going to create a fake joke service and",
    "start": "1262120",
    "end": "1275110"
  },
  {
    "text": "what I'm going to do is I'm going to say in my the for each I'm in a crap I'm gonna set my fake joke service to be",
    "start": "1275110",
    "end": "1282250"
  },
  {
    "text": "equal to an object and on that object I'm gonna add my get joke method and I'm",
    "start": "1282250",
    "end": "1290920"
  },
  {
    "text": "gonna say that it returns an observable",
    "start": "1290920",
    "end": "1296340"
  },
  {
    "text": "of fake joke now for that to work I'm",
    "start": "1296340",
    "end": "1304570"
  },
  {
    "text": "gonna have to come up here and import the rxjs kitchen sink so I can get the",
    "start": "1304570",
    "end": "1310860"
  },
  {
    "text": "extraneous X that just lets me get the of the of function okay so you can see",
    "start": "1310860",
    "end": "1321430"
  },
  {
    "text": "what I've done there is now in mind before each I'm creating this fake object I'm putting a get joke method on",
    "start": "1321430",
    "end": "1326770"
  },
  {
    "text": "it that get joke method is going to return an observable of fake joke I can now pass that fake joke service into my",
    "start": "1326770",
    "end": "1335170"
  },
  {
    "text": "joke component when we scroll down here we can see that what I'm calling my own",
    "start": "1335170",
    "end": "1342070"
  },
  {
    "text": "in it on the component and it now knows hey that joke property should it already",
    "start": "1342070",
    "end": "1347260"
  },
  {
    "text": "is telling me that it should be equal to fake joke and that's exactly what I would expect cool and now as soon as I",
    "start": "1347260",
    "end": "1355210"
  },
  {
    "text": "finish that my test is gonna pass so that's doing it using and using a fake",
    "start": "1355210",
    "end": "1362290"
  },
  {
    "text": "what I can do is I can I'm also going to show you how to do it using a Jasmine spy so using a Jasmine spy I'd come up",
    "start": "1362290",
    "end": "1369970"
  },
  {
    "text": "here and I'd go fake joke service equals and I'm going",
    "start": "1369970",
    "end": "1375679"
  },
  {
    "text": "to go Jasmine doc creates create spy",
    "start": "1375679",
    "end": "1382100"
  },
  {
    "text": "object then I'm gonna supply the name I'm a fake joke service and then when",
    "start": "1382100",
    "end": "1389179"
  },
  {
    "text": "you create a spy object you pass in an array that contains the methods on that",
    "start": "1389179",
    "end": "1395059"
  },
  {
    "text": "object get joke okay so now I've gone and I've created the fake joke object",
    "start": "1395059",
    "end": "1400340"
  },
  {
    "text": "and now what I need to do is just go and assign some behavior to that get joke",
    "start": "1400340",
    "end": "1405350"
  },
  {
    "text": "method so I'm gonna go a fake joke service get joke and I'm gonna say and",
    "start": "1405350",
    "end": "1412490"
  },
  {
    "text": "what value is an observable fake joke",
    "start": "1412490",
    "end": "1430570"
  },
  {
    "text": "and if I haven't missed anything I don't think I have my test should still be",
    "start": "1431140",
    "end": "1436400"
  },
  {
    "text": "passing okay so that's very quickly showing you the two different ways of doing that of",
    "start": "1436400",
    "end": "1442210"
  },
  {
    "text": "creating a fake away so what we just had a look at is we've had a look at how to",
    "start": "1442210",
    "end": "1450320"
  },
  {
    "text": "create a fake joke service and pass that in and to be able to override a dependency and then how to create a fake",
    "start": "1450320",
    "end": "1457280"
  },
  {
    "text": "using a Jasmine spy and the Jasmine spy then lets us override the the the",
    "start": "1457280",
    "end": "1463100"
  },
  {
    "text": "functionality of the method and we could also go and check to see when you know the behavior of those methods so the",
    "start": "1463100",
    "end": "1469789"
  },
  {
    "text": "benefit of faking is that it's isolated you're actually creating a whole separate object for your service or for",
    "start": "1469789",
    "end": "1475190"
  },
  {
    "text": "your dependency and you're passing that into the component under test okay the",
    "start": "1475190",
    "end": "1480710"
  },
  {
    "text": "downside is you often end up with lots of duplicated code and you can end up in the situation where when you go and",
    "start": "1480710",
    "end": "1486830"
  },
  {
    "text": "change the real implementation of the service and you don't update the fake implementation you might have tests that",
    "start": "1486830",
    "end": "1493100"
  },
  {
    "text": "are passing when they really shouldn't be the benefits of spying is that spon",
    "start": "1493100",
    "end": "1498679"
  },
  {
    "text": "spying has additional functionality so you can go in assert you know didn't",
    "start": "1498679",
    "end": "1504049"
  },
  {
    "text": "find out information about how that dependency is behaving and you end up with cleaner code so in",
    "start": "1504049",
    "end": "1510860"
  },
  {
    "text": "summary you need to know how to use both fakes and spice and faking in the setup",
    "start": "1510860",
    "end": "1516350"
  },
  {
    "text": "of dependencies is still probably the hardest part of testing but we've we've",
    "start": "1516350",
    "end": "1522889"
  },
  {
    "text": "got the testbed to help you out yep so we're going to move on to talking about the testbed which is the biggest newest",
    "start": "1522889",
    "end": "1529010"
  },
  {
    "text": "and shiniest part of the angular 2 testing and Before we jump in talking",
    "start": "1529010",
    "end": "1536809"
  },
  {
    "text": "about that we want to talk about why would we want to use the testbed and that's because we want to do a certain type of test now in the angular community people are talking about three",
    "start": "1536809",
    "end": "1543200"
  },
  {
    "text": "different types of tests at the moment the first type is talking about isolated tests so an isolated test is when you",
    "start": "1543200",
    "end": "1548960"
  },
  {
    "text": "just consider you're just looking at testing the components class so in our case that's all we've been doing so far",
    "start": "1548960",
    "end": "1554779"
  },
  {
    "text": "as newing up the component we have no HTML template yet that we're interacting with and that's where a shallow test",
    "start": "1554779",
    "end": "1560059"
  },
  {
    "text": "comes in when you do a shallow test you're actually going to be looking at the component HTML template querying it",
    "start": "1560059",
    "end": "1565730"
  },
  {
    "text": "running detect changes on it to see as you run your tests did things change and update and actually query the Dom and",
    "start": "1565730",
    "end": "1571880"
  },
  {
    "text": "select some of the elements on it and normally when you do a shallow test you're only really talking about looking at one component the last one is an",
    "start": "1571880",
    "end": "1579230"
  },
  {
    "text": "integrated test where you would actually not just test the little pieces that you need to test for a unit test but",
    "start": "1579230",
    "end": "1586279"
  },
  {
    "text": "actually passing the entire app into kind of setup for your tests and then testing against that we're going to look",
    "start": "1586279",
    "end": "1592100"
  },
  {
    "text": "mostly at shallow tests and isolated tests today so let's jump into talking about this testbed and how we can use it",
    "start": "1592100",
    "end": "1599240"
  },
  {
    "text": "to do a shallow test so the test beds got this configure testing module method",
    "start": "1599240",
    "end": "1605899"
  },
  {
    "text": "on it and what it allows you to do is to make an angular module so in angular 2 right at the end of their journey when",
    "start": "1605899",
    "end": "1611029"
  },
  {
    "text": "they went to our TM they came out with their own idea of modules and they've got angular modules and basically just",
    "start": "1611029",
    "end": "1616970"
  },
  {
    "text": "specifies a section of code or a section for this section of code these here",
    "start": "1616970",
    "end": "1622940"
  },
  {
    "text": "dependencies so this is great for a test because you can say ok I'm going to run this test I only have these dependencies",
    "start": "1622940",
    "end": "1628460"
  },
  {
    "text": "for this little section of code so it's going to become a default way of writing tests so you go test bed configure",
    "start": "1628460",
    "end": "1633799"
  },
  {
    "text": "testing module and you'll have a set of things that you set up so imports all of your other libraries that you",
    "start": "1633799",
    "end": "1641050"
  },
  {
    "text": "import like the HTTP module our test has a dependency on that for the service to be able to make HTTP requests",
    "start": "1641050",
    "end": "1648210"
  },
  {
    "text": "declarations are your components or or your directive so we've got a joke component and that's all we're testing",
    "start": "1648210",
    "end": "1654190"
  },
  {
    "text": "so when this test beds made it's just going to give us these things not all the other components in the app and your",
    "start": "1654190",
    "end": "1659530"
  },
  {
    "text": "providers your services so we only have one it's just the joke service this is a pretty simple example but this is what",
    "start": "1659530",
    "end": "1665200"
  },
  {
    "text": "our testbed wound up looking like so this testbed does lots of things for us but what we want to get from it is the",
    "start": "1665200",
    "end": "1671410"
  },
  {
    "text": "ability to grab the Dom so once we have this testbed we can use it or once we've set it up and the big thing we want to",
    "start": "1671410",
    "end": "1677200"
  },
  {
    "text": "do is get a fixture and this is that the specific terminology so you want to get a fixture and the fixture gives you the",
    "start": "1677200",
    "end": "1683950"
  },
  {
    "text": "ability to get an instance of this component so you'd go testbed create component and pass it the joke component",
    "start": "1683950",
    "end": "1689920"
  },
  {
    "text": "and then you've got a fixture on it then we can start to access the HTML so we can also get the component and all of",
    "start": "1689920",
    "end": "1696460"
  },
  {
    "text": "its methods and properties on it but then we can get this debugger element and this debug elements while we're",
    "start": "1696460",
    "end": "1701680"
  },
  {
    "text": "going to all this extent here because then we can use that to be able to do some queries against the Dom but also",
    "start": "1701680",
    "end": "1707140"
  },
  {
    "text": "there's a whole lot on this test bed it's a really big API so we can detect changes we can actually get it to do",
    "start": "1707140",
    "end": "1713020"
  },
  {
    "text": "some dependency injection but for now we're just focused on getting this fixture so we can get a hold of the Dom",
    "start": "1713020",
    "end": "1718510"
  },
  {
    "text": "so this is what it would look like if you wanted to do that so we could say we want to make a joke text property and we",
    "start": "1718510",
    "end": "1724000"
  },
  {
    "text": "want to set it to the result of what we get from this P tag so it's a debug",
    "start": "1724000",
    "end": "1729550"
  },
  {
    "text": "element query would query by CSS and we'll get a hold of the P tag which if we remembered that's there's only one on",
    "start": "1729550",
    "end": "1736000"
  },
  {
    "text": "our page it's a joke so whatever the joke comes back as but we can also go",
    "start": "1736000",
    "end": "1741100"
  },
  {
    "text": "dot native element on the back and that's really important if we were to add that on the back because now we can query this joke text as if we would a",
    "start": "1741100",
    "end": "1748060"
  },
  {
    "text": "normal Dom API so all of the doc click and so forth that you used to doing with the Dom API you can do so test that's",
    "start": "1748060",
    "end": "1755620"
  },
  {
    "text": "really good it allows us to create this testing module and then we can query the",
    "start": "1755620",
    "end": "1760960"
  },
  {
    "text": "HTML templates or under tech changes and a lot more so let's jump into having a look at a code demo of what this looks",
    "start": "1760960",
    "end": "1767500"
  },
  {
    "text": "like if we were to refactor the code that we have here so I'm going to come in and I'm gonna",
    "start": "1767500",
    "end": "1773220"
  },
  {
    "text": "delete all of Adams hard work he does that a lot and that's going to break a",
    "start": "1773220",
    "end": "1779650"
  },
  {
    "text": "few different things here and I'm going to just make us a testbed so it'll be testbed dot create component no that's",
    "start": "1779650",
    "end": "1787720"
  },
  {
    "text": "not what we wanted we want to configure a testing module so it's very similar to",
    "start": "1787720",
    "end": "1793570"
  },
  {
    "text": "testing angular or creating an angular module itself which is kind of what",
    "start": "1793570",
    "end": "1799510"
  },
  {
    "text": "exactly what this is so we're going to have some imports and the imports are going to be the HTTP module and then",
    "start": "1799510",
    "end": "1808330"
  },
  {
    "text": "we're going to have some declarations which is the components themselves and we just want the joke component here and",
    "start": "1808330",
    "end": "1815110"
  },
  {
    "text": "the it's interesting here to point out we're actually passing in the real service now so I'm gonna list that in",
    "start": "1815110",
    "end": "1823870"
  },
  {
    "text": "the providers array where I'd list all the services that this testing module would need and I'm going to pass in the",
    "start": "1823870",
    "end": "1829240"
  },
  {
    "text": "joke service so I'm actually going to pass in the real joke service and we're gonna spy on that so this is kind of a",
    "start": "1829240",
    "end": "1835300"
  },
  {
    "text": "different approach or reduce the amount of code you're writing normally it takes a little longer to do what mock out the",
    "start": "1835300",
    "end": "1840610"
  },
  {
    "text": "HTTP part of it so that we don't accidentally slip through and call the real service but in this case we're",
    "start": "1840610",
    "end": "1846670"
  },
  {
    "text": "going to keep it simple so now that I have this testbed module I'm going to need to set up a few different things up",
    "start": "1846670",
    "end": "1853240"
  },
  {
    "text": "at the top here some properties to initialize so we're gonna have a joke service and most importantly we're going",
    "start": "1853240",
    "end": "1859960"
  },
  {
    "text": "to get a hold of a fixture and this fixture is going to be of type component",
    "start": "1859960",
    "end": "1866910"
  },
  {
    "text": "fixture and it will be of type joke component so once we have this fixture",
    "start": "1866910",
    "end": "1874210"
  },
  {
    "text": "we can also get ahold of the debug elements I'm going to do one more for that which will be debug element and",
    "start": "1874210",
    "end": "1880090"
  },
  {
    "text": "it's going to be of type debug element so we need to go and initialize these now but we can do that with the testbed",
    "start": "1880090",
    "end": "1887080"
  },
  {
    "text": "so I'm going to come down into our before each and with with that setup done then we could say okay so this",
    "start": "1887080",
    "end": "1893080"
  },
  {
    "text": "fixture is going to be testbed dot",
    "start": "1893080",
    "end": "1900210"
  },
  {
    "text": "create component and then we pass it the joke component so it might look like a lot of kind of a",
    "start": "1900210",
    "end": "1907359"
  },
  {
    "text": "lot of code here to be writing just to get to this point but I guess this is kind of still the state of affairs for",
    "start": "1907359",
    "end": "1913029"
  },
  {
    "text": "testing front-end application you know the challenge is all the setup at the start of your test and once you've done",
    "start": "1913029",
    "end": "1919029"
  },
  {
    "text": "this once it gets very easy to do it again and again I actually find it a bit easier to configure than the previous",
    "start": "1919029",
    "end": "1924129"
  },
  {
    "text": "way we would have done it using the testbed so once we have the fixture then we can also get a hold of the creator",
    "start": "1924129",
    "end": "1930969"
  },
  {
    "text": "component so then we would get that from the fixture and we would say component",
    "start": "1930969",
    "end": "1936099"
  },
  {
    "text": "instance and then we can get this debug",
    "start": "1936099",
    "end": "1941320"
  },
  {
    "text": "element so the debug element is going to be fixture debug element and that's the big thing that we want to get but the",
    "start": "1941320",
    "end": "1949389"
  },
  {
    "text": "one last thing I can do is we can see another aspect of the testbed is being able to get some help to manage our",
    "start": "1949389",
    "end": "1954570"
  },
  {
    "text": "dependencies like this service so I can actually use it to do some dependency injection so I'm going to take this joke",
    "start": "1954570",
    "end": "1960159"
  },
  {
    "text": "service I'm going to say that it equals the testbed and I can just say get this",
    "start": "1960159",
    "end": "1965409"
  },
  {
    "text": "is a very short way of doing this I like kind of the simplicity of it so I can just say testbed can you go get me a",
    "start": "1965409",
    "end": "1971529"
  },
  {
    "text": "joke service and it will go and manage the dependency injection and set it to",
    "start": "1971529",
    "end": "1977349"
  },
  {
    "text": "this joke service here so with this all done we've now got our test bed and a",
    "start": "1977349",
    "end": "1982779"
  },
  {
    "text": "fixture but I've kind of broken some of those steve-o's work down here because we're no longer we're no longer spying",
    "start": "1982779",
    "end": "1988330"
  },
  {
    "text": "on anything so we're not saying what we're returning back so I'm just going to very quickly come into the tests that",
    "start": "1988330",
    "end": "1993509"
  },
  {
    "text": "Adam wrote here and at the top I'm going to show you another way of creating a spy because we already actually have the",
    "start": "1993509",
    "end": "1999609"
  },
  {
    "text": "joke service and that would be to say spy on and I'm going to spy on joke",
    "start": "1999609",
    "end": "2005669"
  },
  {
    "text": "service that we've set up and in particular I'm going to spy on the get joke method and then do the return value",
    "start": "2005669",
    "end": "2013169"
  },
  {
    "text": "thing that we saw before so that would be and return value and the return value",
    "start": "2013169",
    "end": "2019229"
  },
  {
    "text": "will be this observable dot of and fake",
    "start": "2019229",
    "end": "2027210"
  },
  {
    "text": "joke so with that set up all our tests should go green again unless I've missed",
    "start": "2027210",
    "end": "2032789"
  },
  {
    "text": "something and then you start to go okay so testing is kind of one of those quirky things and you",
    "start": "2032789",
    "end": "2038080"
  },
  {
    "text": "to practice it and I know that right now all I need to actually do is just restart wallaby you can see I just hit",
    "start": "2038080",
    "end": "2043809"
  },
  {
    "text": "the keyboard shortcut and it's spinning away at the bottom here and I just need it to restart again and pick up the",
    "start": "2043809",
    "end": "2049540"
  },
  {
    "text": "changes that I've done because we've kind of changed quite a lot so that's working for us and we're kind of back to",
    "start": "2049540",
    "end": "2055480"
  },
  {
    "text": "where we were before except now we have the ability to get this debug element I can query the Dom and actually check",
    "start": "2055480",
    "end": "2060849"
  },
  {
    "text": "that it's setting the joke properly so I can come underneath here and make another test and say that it should have",
    "start": "2060849",
    "end": "2069750"
  },
  {
    "text": "bound a joke to DOM and then in here",
    "start": "2069750",
    "end": "2077618"
  },
  {
    "text": "what I can do is I can kind of copy this Spion up from above because I'm going to",
    "start": "2077619",
    "end": "2083440"
  },
  {
    "text": "spy on that again so I'm going to spy on the joke service and expect it to return of fake joke for me but what I'm",
    "start": "2083440",
    "end": "2091148"
  },
  {
    "text": "actually going to do is run fixture dot detects changes now so I can actually trigger change detection by using this",
    "start": "2091149",
    "end": "2099880"
  },
  {
    "text": "fixture that we have so now that's going to trigger change detection which we'll call orange ng on a net which we'll call",
    "start": "2099880",
    "end": "2106089"
  },
  {
    "text": "our service it'll hit our spy which will bring us back the fake joke so things are kind of set up for us here so once I",
    "start": "2106089",
    "end": "2113050"
  },
  {
    "text": "have that what I went through all this rigmarole to do is to be able to get ahold of to set an element here to the",
    "start": "2113050",
    "end": "2121119"
  },
  {
    "text": "text of the joke so I'm actually going to call it joke so I'm going to get a constant okay and that's going to be",
    "start": "2121119",
    "end": "2127500"
  },
  {
    "text": "accessible through this debug element we've set up so I can say debug dot query and then I'm going to query by and",
    "start": "2127500",
    "end": "2134830"
  },
  {
    "text": "this is a specific symbol from the angular project CSS so I'm going to need",
    "start": "2134830",
    "end": "2141820"
  },
  {
    "text": "to bring it in so I'll just use the auto importer to bring it in there and that would have added that to the top of the",
    "start": "2141820",
    "end": "2148300"
  },
  {
    "text": "page for me so once I've got this I can say okay I want a query by CSS and I",
    "start": "2148300",
    "end": "2154869"
  },
  {
    "text": "really just want a query for the P tag and I want to interact with this how I'm",
    "start": "2154869",
    "end": "2160119"
  },
  {
    "text": "used to interacting with the Dom API so I'm going to say native element to get access it in that sense so once I've got",
    "start": "2160119",
    "end": "2167050"
  },
  {
    "text": "it I can do an expectation against it so I'm going to say that I expect my joke text content is going to be",
    "start": "2167050",
    "end": "2177489"
  },
  {
    "text": "equal to fake joke and this has already jumped ahead and told me that you know",
    "start": "2177489",
    "end": "2182529"
  },
  {
    "text": "it doesn't equal an empty string it equals fake joke so I can come in and",
    "start": "2182529",
    "end": "2187589"
  },
  {
    "text": "just pop that in there for us so this is it seems like a lot of boilerplate but",
    "start": "2187589",
    "end": "2193630"
  },
  {
    "text": "you get very used to it there's a lot of cutting and pasting that goes on but there's a lot of very handy things the testbed allows you to do which we're",
    "start": "2193630",
    "end": "2200200"
  },
  {
    "text": "going to cover in a second as well so now we're at this point we're actually literally querying our HTML template and",
    "start": "2200200",
    "end": "2205569"
  },
  {
    "text": "using a testbed to only have this isolated amount of code that's running versus running the whole angular module",
    "start": "2205569",
    "end": "2213838"
  },
  {
    "text": "so we had a look then about how we set up the testbed it looks exactly like an angular module would and it gave us the",
    "start": "2214049",
    "end": "2221289"
  },
  {
    "text": "ability to get this querying functionality so it's a bigger API it",
    "start": "2221289",
    "end": "2226479"
  },
  {
    "text": "takes time to learn it's kind of the cornerstone of angular 2 testing now and it basically makes us an energy module",
    "start": "2226479",
    "end": "2233349"
  },
  {
    "text": "and runs everything in a zone so if you're anything like me the first time you thought about this you're like",
    "start": "2233349",
    "end": "2239049"
  },
  {
    "text": "what's a zone but zone is basically something Adams going to talk more about",
    "start": "2239049",
    "end": "2244059"
  },
  {
    "text": "now so I'm going to pass you over to him awesome thanks so we're gonna talk about",
    "start": "2244059",
    "end": "2249130"
  },
  {
    "text": "two functions for helping you test asynchronous code and because asynchrony",
    "start": "2249130",
    "end": "2255609"
  },
  {
    "text": "adds complexity to writing JavaScript unit tests you know you click a button that calls a HTTP request and you've",
    "start": "2255609",
    "end": "2261789"
  },
  {
    "text": "gotta wait for that to return before you can really check on you know what what is the result so asynchronous code is",
    "start": "2261789",
    "end": "2268749"
  },
  {
    "text": "often hard to test so what we've done previously and you're still able to do",
    "start": "2268749",
    "end": "2273940"
  },
  {
    "text": "was use jasmine done callbacks so with this you use a promise and then when you",
    "start": "2273940",
    "end": "2279009"
  },
  {
    "text": "are done you actually call the done method the downside of jasmine done callbacks is they require chaining",
    "start": "2279009",
    "end": "2284589"
  },
  {
    "text": "promises handling errors and then specifically calling done they're not",
    "start": "2284589",
    "end": "2290140"
  },
  {
    "text": "recommended with angular 2 but you still need them for some edge cases what we",
    "start": "2290140",
    "end": "2295900"
  },
  {
    "text": "prefer to do is use the new async and fake async helpers and the key to those",
    "start": "2295900",
    "end": "2301239"
  },
  {
    "text": "are zones now what is a zone who does anyone want to tell me what - no it's taped so I'm going to try and",
    "start": "2301239",
    "end": "2310060"
  },
  {
    "text": "give you the easiest explanation zones defined an execution context face synchronous operations so they're very",
    "start": "2310060",
    "end": "2317710"
  },
  {
    "text": "cool essentially in angular 2 anytime you do an asynchronous operation it's",
    "start": "2317710",
    "end": "2322720"
  },
  {
    "text": "happening inside a zone and what happens is it says there's an asynchronous operation happening I'm gonna put a",
    "start": "2322720",
    "end": "2329200"
  },
  {
    "text": "micro task on a queue and when that's finished I'll remove it from the queue so angular 2 is always aware of what",
    "start": "2329200",
    "end": "2336780"
  },
  {
    "text": "asynchronous operations are outstanding okay which is very very powerful because",
    "start": "2336780",
    "end": "2344110"
  },
  {
    "text": "now we have these two new keywords and when you go and you wrap your test",
    "start": "2344110",
    "end": "2349450"
  },
  {
    "text": "methods in either a sync or fake async what it does is it says I'm not going to use the normal zone I'm going to use a",
    "start": "2349450",
    "end": "2355360"
  },
  {
    "text": "special test zone so now anytime I do something like call a button click inside my test because it's in a test",
    "start": "2355360",
    "end": "2363280"
  },
  {
    "text": "zone I've called an async operation and it's putting a micro task on the queue",
    "start": "2363280",
    "end": "2368640"
  },
  {
    "text": "so it knows I can come down and I can do something like call fixtured when stable",
    "start": "2368640",
    "end": "2374770"
  },
  {
    "text": "and what that does is it resolves when that queue gets back down to zero so now",
    "start": "2374770",
    "end": "2380740"
  },
  {
    "text": "we're able to say tell me when all of the asynchronous tasks and the tests are done because then I can go and do things",
    "start": "2380740",
    "end": "2387160"
  },
  {
    "text": "like the tech changes and then check my expected result is as I would want it to be faced it makes managing asynchrony",
    "start": "2387160",
    "end": "2394750"
  },
  {
    "text": "much easier in your tests fake async",
    "start": "2394750",
    "end": "2399760"
  },
  {
    "text": "work similarly the benefit of fake async instead of needing when stable and",
    "start": "2399760",
    "end": "2404950"
  },
  {
    "text": "returning a promise it gives you a very linear test so with fake async what we're doing is we're calling button",
    "start": "2404950",
    "end": "2410680"
  },
  {
    "text": "click it's going and putting a micro task on the queue in our testers own and then you can call the tick method and",
    "start": "2410680",
    "end": "2417430"
  },
  {
    "text": "the tick method controls time so you can go ah pretend that all the mock those",
    "start": "2417430",
    "end": "2422710"
  },
  {
    "text": "are done and then you can call detect changes trigger change detection and then go and do your assertions so tick",
    "start": "2422710",
    "end": "2429250"
  },
  {
    "text": "simulates the passage of time until all of the pending async requests are done but it also lets you do like in the",
    "start": "2429250",
    "end": "2435100"
  },
  {
    "text": "example pass in 3 3,000 milliseconds simulate 3 thousand milliseconds passing before you",
    "start": "2435100",
    "end": "2442810"
  },
  {
    "text": "go and detect changes and do your expectation let's have a look at what that might look like in a code demo so",
    "start": "2442810",
    "end": "2456130"
  },
  {
    "text": "what I'm going to do is I'm going to come in here and Duncan took pleasure in deleting my code I'm actually more of a",
    "start": "2456130",
    "end": "2462820"
  },
  {
    "text": "steal his code kind of a guy so for this test I'm gonna start off and I'm going",
    "start": "2462820",
    "end": "2469120"
  },
  {
    "text": "to say that what this tests what I'm gonna do is it should I'm gonna say",
    "start": "2469120",
    "end": "2474520"
  },
  {
    "text": "should get next quote on button click so",
    "start": "2474520",
    "end": "2482470"
  },
  {
    "text": "the test I'm gonna write is I'm going to do exactly what Duncan was doing I'm gonna say when the page first loads",
    "start": "2482470",
    "end": "2488640"
  },
  {
    "text": "we're going to call ng on in it and it's going to set a joke my tests are better than here so I can test when you click a",
    "start": "2488640",
    "end": "2495700"
  },
  {
    "text": "button it's actually gonna go and call the get joke method get another joke and then set the this and I'm gonna test the",
    "start": "2495700",
    "end": "2502570"
  },
  {
    "text": "second jokes property yeah but because I'm handling this button click I want to",
    "start": "2502570",
    "end": "2507610"
  },
  {
    "text": "be able to manage the asynchrony so what I'm going to do is wrap this test in the",
    "start": "2507610",
    "end": "2513460"
  },
  {
    "text": "fake async keyword I'm gonna wrap this in the fake async method it's gonna jump",
    "start": "2513460",
    "end": "2519100"
  },
  {
    "text": "down there so I'm gonna wrap that and I just need to import fake async so I have",
    "start": "2519100",
    "end": "2526630"
  },
  {
    "text": "access to it say now I'm doing I'm gonna do all the same code that Duncan was",
    "start": "2526630",
    "end": "2532900"
  },
  {
    "text": "doing I'm setting up the spy but you know what instead of returning one value I Maritain multiple values so the first",
    "start": "2532900",
    "end": "2541360"
  },
  {
    "text": "time that I call get joke I'm going to return an observable of fake joke the",
    "start": "2541360",
    "end": "2546910"
  },
  {
    "text": "second time I'm going to return an observable of fake joke too and just to",
    "start": "2546910",
    "end": "2554560"
  },
  {
    "text": "make it a bit more fun I'm gonna wait for two seconds before I return fake",
    "start": "2554560",
    "end": "2561250"
  },
  {
    "text": "joke too so the first one will return immediately the second one is going to return a different value and is going to",
    "start": "2561250",
    "end": "2567550"
  },
  {
    "text": "mess with me by waiting two seconds before I do it so how do I make that happen well",
    "start": "2567550",
    "end": "2572849"
  },
  {
    "text": "I'm gonna once again I'm gonna take his code and copy it what I'm gonna do so",
    "start": "2572849",
    "end": "2579479"
  },
  {
    "text": "he's doing his first desertion then I'm gonna go and get a reference to the button okay so once I've got the button",
    "start": "2579479",
    "end": "2588329"
  },
  {
    "text": "I can call button click to call the click event and then what I should be",
    "start": "2588329",
    "end": "2595739"
  },
  {
    "text": "able to do then is go and check after I call the click event you know i'm",
    "start": "2595739",
    "end": "2601019"
  },
  {
    "text": "expecting fake joe to to come back but my test is failing why is my test failing because it's",
    "start": "2601019",
    "end": "2607829"
  },
  {
    "text": "rolling through before the two seconds is passed and i've gotten my new my new",
    "start": "2607829",
    "end": "2615029"
  },
  {
    "text": "fake joke so what i can come in here is I can go tick tell it to wait three",
    "start": "2615029",
    "end": "2620519"
  },
  {
    "text": "seconds well and I should import it",
    "start": "2620519",
    "end": "2625859"
  },
  {
    "text": "because that helps",
    "start": "2625859",
    "end": "2628670"
  },
  {
    "text": "what have I done wrong I got my changes I didn't call the tech changes so after I called tick I need to run a cycle of",
    "start": "2633220",
    "end": "2641240"
  },
  {
    "text": "change detection and now my test passes",
    "start": "2641240",
    "end": "2649780"
  },
  {
    "text": "pretty cool now a fake ASIC lets me manage time it does have some",
    "start": "2649780",
    "end": "2656060"
  },
  {
    "text": "limitations like you can't do s xhr requests using it so what I'm going to do is I'm just going to show you what",
    "start": "2656060",
    "end": "2661760"
  },
  {
    "text": "this exact same test would look like if I just used async so if I use async if I",
    "start": "2661760",
    "end": "2671300"
  },
  {
    "text": "use async I can't specify the time out because it can't control time to the same extent",
    "start": "2671300",
    "end": "2677680"
  },
  {
    "text": "but remember went down here instead of doing tick what I did was is I said",
    "start": "2677680",
    "end": "2684160"
  },
  {
    "text": "fixtured dot when stable okay and now",
    "start": "2684160",
    "end": "2689990"
  },
  {
    "text": "once I've got fixed your dot when stable then it returns a promise I'm gonna say then and I'm going to then fashion okay",
    "start": "2689990",
    "end": "2702800"
  },
  {
    "text": "so what I'm going to do is I'm going to say when the fixtures stable then do my",
    "start": "2702800",
    "end": "2710030"
  },
  {
    "text": "detect changes in my expectation okay so",
    "start": "2710030",
    "end": "2719720"
  },
  {
    "text": "I've moved my expectation might detect changes and my expectation into my when stable because I can't use tick in an",
    "start": "2719720",
    "end": "2727790"
  },
  {
    "text": "async method and now that's how you do it the exact same test but using async",
    "start": "2727790",
    "end": "2734720"
  },
  {
    "text": "instead of fake async so there's angular 2 it makes testing asynchronous code so",
    "start": "2734720",
    "end": "2742520"
  },
  {
    "text": "much easier Thanks don't perfect um so",
    "start": "2742520",
    "end": "2748430"
  },
  {
    "text": "we saw how click and when stable is used when writing async tests but we're going",
    "start": "2748430",
    "end": "2753890"
  },
  {
    "text": "click tick and then doing our sessions when we're using fake async so the",
    "start": "2753890",
    "end": "2760160"
  },
  {
    "text": "benefit of async is that it simplifies coding our asynchronous tests the benefit of fake async over a sink is",
    "start": "2760160",
    "end": "2767640"
  },
  {
    "text": "that the tests are all in a straight line they appear to be synchronous there are downsides though like you can't call",
    "start": "2767640",
    "end": "2774119"
  },
  {
    "text": "xhr requests so in summary async code is edgy to get",
    "start": "2774119",
    "end": "2780329"
  },
  {
    "text": "right but the new tools are really going to help you write your tests a lot easier cool thanks Adam so let's move on",
    "start": "2780329",
    "end": "2788160"
  },
  {
    "text": "talk about end-to-end tests for a second anyone catch scott allen's javascript",
    "start": "2788160",
    "end": "2793289"
  },
  {
    "text": "patterns talk this week a couple of people so it was really interesting you made this just this offline comment at",
    "start": "2793289",
    "end": "2799500"
  },
  {
    "text": "the end of it where he said our less unit tests more integration tests and i thought that was really interesting and",
    "start": "2799500",
    "end": "2805410"
  },
  {
    "text": "he also said that he actually tests his real services rather than mocking as much but the real interesting thing",
    "start": "2805410",
    "end": "2810450"
  },
  {
    "text": "there was that he's kind of saying you know more integrations there's more into n tests versus unit tests for his front",
    "start": "2810450",
    "end": "2815819"
  },
  {
    "text": "end and we're definitely seeing a trend towards that in people where people are going are just you know all this mocking",
    "start": "2815819",
    "end": "2821460"
  },
  {
    "text": "all this work on the front end i prefer to just do a like an automated smoke test for my end-to-end test so i thought",
    "start": "2821460",
    "end": "2827250"
  },
  {
    "text": "that's really interesting and it's kind of a trend that we're definitely seeing as well that end-to-end tests are getting more popularity and people are",
    "start": "2827250",
    "end": "2832799"
  },
  {
    "text": "kind of wanting to have more of these even though they can be quite brittle so",
    "start": "2832799",
    "end": "2837869"
  },
  {
    "text": "end-to-end tests ensure that your integrated components function as expected and when I say components on talking about angular components I guess",
    "start": "2837869",
    "end": "2843720"
  },
  {
    "text": "I'm just talking about all the bits of your application cuz you actually run the entire application has to be running and then you interact with it in the Dom",
    "start": "2843720",
    "end": "2849779"
  },
  {
    "text": "so we're going to write some of these tests now and we're going to see some of the new language features with async await around typescript and so I'm just",
    "start": "2849779",
    "end": "2857190"
  },
  {
    "text": "going to jump in and do these ones that our last demo of the day and we're gonna do some inter end tests so I'm actually",
    "start": "2857190",
    "end": "2863009"
  },
  {
    "text": "just going to come back and bring up localhost again which show it has our",
    "start": "2863009",
    "end": "2869460"
  },
  {
    "text": "application running so we want to come in here and we want to run a test against this and we want to be able to",
    "start": "2869460",
    "end": "2875730"
  },
  {
    "text": "grab the title so I can come back over into code and I'm just going to close",
    "start": "2875730",
    "end": "2882210"
  },
  {
    "text": "everything down here and open back up the directory and what we've got is e to",
    "start": "2882210",
    "end": "2888509"
  },
  {
    "text": "e folder so this is what angular CLI sets up by default for you they don't really give you too much in there all",
    "start": "2888509",
    "end": "2894390"
  },
  {
    "text": "they basically do is do all the plumbing to get protractor working and give you some default so I'm just going to hijack that default",
    "start": "2894390",
    "end": "2900780"
  },
  {
    "text": "test I've already deleted all the content that's in there and I'm going to write a simple end-to-end test now",
    "start": "2900780",
    "end": "2906900"
  },
  {
    "text": "there's this idea of page objects which is like a style of doing things which I'm not going to do today just because",
    "start": "2906900",
    "end": "2913800"
  },
  {
    "text": "would have lots of pages open and I just want to show you how the protractor stuff works so what I need to do first",
    "start": "2913800",
    "end": "2920369"
  },
  {
    "text": "of all is get some helpers from protractor so I'm going to import from",
    "start": "2920369",
    "end": "2925940"
  },
  {
    "text": "protractor a couple of helpers here and they're going to be the browser which",
    "start": "2925940",
    "end": "2933270"
  },
  {
    "text": "will allow us to navigate to the right page and elements and by for being able",
    "start": "2933270",
    "end": "2938609"
  },
  {
    "text": "to do some Dom selection so once I have that this is going to look really familiar to the Jasmine you saw before I'm going to have a describe block but",
    "start": "2938609",
    "end": "2945089"
  },
  {
    "text": "now I'm not describing a component I'm describing like a web page so it's a different kind of context so I'm going",
    "start": "2945089",
    "end": "2950430"
  },
  {
    "text": "to actually call this a page and then I'm gonna say it's the joke page and usually you're kind of thinking about",
    "start": "2950430",
    "end": "2956060"
  },
  {
    "text": "testing a user story so it might be multiple pages that might be like login go to the email start an email send an",
    "start": "2956060",
    "end": "2963300"
  },
  {
    "text": "email and make sure everything works so it's more kind of cross-cutting but in our case we've only got this one page and we just want to check the title so",
    "start": "2963300",
    "end": "2970020"
  },
  {
    "text": "to start off I'm going to say browser get and just navigate to the root of our application which is the only page that",
    "start": "2970020",
    "end": "2977280"
  },
  {
    "text": "we have is this sum this single page is straight on the root and what we want to",
    "start": "2977280",
    "end": "2983550"
  },
  {
    "text": "do is check that this title is correct so once I've done that it's going to boot up the real application in the",
    "start": "2983550",
    "end": "2989880"
  },
  {
    "text": "browser navigate to this page and then I want to actually set a property of title",
    "start": "2989880",
    "end": "2996990"
  },
  {
    "text": "here and the way I'm going to get that is to go element by CSS and this time",
    "start": "2996990",
    "end": "3007130"
  },
  {
    "text": "I'm going to be querying the h1 element which is the title and it's a different a different API occurs using protractor",
    "start": "3007130",
    "end": "3013430"
  },
  {
    "text": "here and it's get text to get the text content so once I have that then I can do an expectation again and say that I",
    "start": "3013430",
    "end": "3019670"
  },
  {
    "text": "expect the title is going to equal this string of Chuck Norris jokes now I",
    "start": "3019670",
    "end": "3025579"
  },
  {
    "text": "haven't got any amazing tooling here that's going to just show me green lights because obviously I've got a fire up the browser that's",
    "start": "3025579",
    "end": "3031620"
  },
  {
    "text": "all the sort of thing you do at the end of kind of completing a piece of work to do this integration piece and that",
    "start": "3031620",
    "end": "3037110"
  },
  {
    "text": "obviously it's not meant to be there so once this is working I can I need to",
    "start": "3037110",
    "end": "3043470"
  },
  {
    "text": "make sure I'm just going to clear out our terminal here I need to make sure the applications running which we know",
    "start": "3043470",
    "end": "3049200"
  },
  {
    "text": "it is and then I can go ng to get a hold of the angular CLI again but rather than",
    "start": "3049200",
    "end": "3054330"
  },
  {
    "text": "going tests like we did before for karma you go E to e and this will just trigger",
    "start": "3054330",
    "end": "3059430"
  },
  {
    "text": "off all the end-to-end tests with the protractor now that's pretty fast so I'm actually going to push this over to the",
    "start": "3059430",
    "end": "3065310"
  },
  {
    "text": "side of the page here and I'm just going to hide this when I run this it's going",
    "start": "3065310",
    "end": "3070500"
  },
  {
    "text": "to flash up on to the other side of the page and very quickly load up navigate to that page select the h1 element read",
    "start": "3070500",
    "end": "3077070"
  },
  {
    "text": "its text and then run the test so you have to watch pretty closely here on the spare space over on to the side here",
    "start": "3077070",
    "end": "3083030"
  },
  {
    "text": "boots it up tests it and says that it fails so let's see why that it's failing",
    "start": "3083030",
    "end": "3089250"
  },
  {
    "text": "here and it's gonna say it expects error",
    "start": "3089250",
    "end": "3094800"
  },
  {
    "text": "expects was used so what I've done which my wingman didn't pick up I know exactly",
    "start": "3094800",
    "end": "3102240"
  },
  {
    "text": "what I've done I'm just making funny so if we clear this all out I've actually",
    "start": "3102240",
    "end": "3108120"
  },
  {
    "text": "just gone and written everything straight into the describe block which is obviously incorrect I need to nest",
    "start": "3108120",
    "end": "3113430"
  },
  {
    "text": "that into a spec so in here I should say should have the title of Chuck Chuck",
    "start": "3113430",
    "end": "3123930"
  },
  {
    "text": "Norris jokes like so and then in here is",
    "start": "3123930",
    "end": "3128970"
  },
  {
    "text": "where we do the work that we said before so in here I just paste back in what we had so it's in here that I'd do the",
    "start": "3128970",
    "end": "3134370"
  },
  {
    "text": "browser navigation and everything else so what we're going to do now is run that same test so I'll move this to the",
    "start": "3134370",
    "end": "3140100"
  },
  {
    "text": "side open this up just clear this out so we've got a bit of space and then I've run the same ng e to e and this time it",
    "start": "3140100",
    "end": "3147450"
  },
  {
    "text": "should do the same thing booted up select it and then run the test so if we pop back over here and have a look you",
    "start": "3147450",
    "end": "3152910"
  },
  {
    "text": "can see that it ran should have the title of Chuck Norris and it's screen and it's successful so that's kind of",
    "start": "3152910",
    "end": "3158490"
  },
  {
    "text": "the like a really simple test but let's jump in and write one more test here and",
    "start": "3158490",
    "end": "3164460"
  },
  {
    "text": "actually have a look some of the new async/await language features in javascript or in typescript",
    "start": "3164460",
    "end": "3170069"
  },
  {
    "text": "so I'm gonna do another test but this time what I want to do is actually want to click the button and check that the",
    "start": "3170069",
    "end": "3175200"
  },
  {
    "text": "second joke is different than the first joke so I'm going to come in and say should have a different second joke and",
    "start": "3175200",
    "end": "3185450"
  },
  {
    "text": "I need to navigate again at the start of every tests a browser get and we're just",
    "start": "3185450",
    "end": "3191460"
  },
  {
    "text": "going to go straight to the home page and then in here I want to do a Const of joke one and then that's going to be",
    "start": "3191460",
    "end": "3198660"
  },
  {
    "text": "equal to the element by CSS again and this time we're looking at the P tag",
    "start": "3198660",
    "end": "3205019"
  },
  {
    "text": "which has the joke and we're going to call get text on it we're gonna want two",
    "start": "3205019",
    "end": "3211619"
  },
  {
    "text": "of these one for the first joke and one for the second joke after we've clicked the button so here I'm going to go",
    "start": "3211619",
    "end": "3217230"
  },
  {
    "text": "element again and it'll be by dot CSS",
    "start": "3217230",
    "end": "3222359"
  },
  {
    "text": "but this time I'm going to select the button so I'll just passing button here",
    "start": "3222359",
    "end": "3227460"
  },
  {
    "text": "and rather than calling dot text I can just call click on it and I'm going to execute a click so this will go to the",
    "start": "3227460",
    "end": "3234180"
  },
  {
    "text": "page get the first joke set it to the variable click the button and then we've",
    "start": "3234180",
    "end": "3239279"
  },
  {
    "text": "got the second joke there hopefully but then it we kind of introduce some issues here and doing this because potentially",
    "start": "3239279",
    "end": "3244650"
  },
  {
    "text": "the second joke might not be there when I run this expectation to say that I expect the first joke is not equal is",
    "start": "3244650",
    "end": "3254730"
  },
  {
    "text": "not going to be equal to joke two so if",
    "start": "3254730",
    "end": "3260250"
  },
  {
    "text": "we have a look at this this get text function here returns a promise so what",
    "start": "3260250",
    "end": "3265799"
  },
  {
    "text": "I'm actually going to do I could just do dot then and deal with the promise in there and put my expectation in there but what I'm actually going to do is",
    "start": "3265799",
    "end": "3271319"
  },
  {
    "text": "just block on this line and use some of the new async/await stuff with typescript so I can say that this is an",
    "start": "3271319",
    "end": "3277559"
  },
  {
    "text": "async function totally different than the async that you saw Adam used to do with the angular testing utility and I'm",
    "start": "3277559",
    "end": "3284250"
  },
  {
    "text": "gonna get an error here saying you can't use this when you're transpiling typescript down to JavaScript 2015 only 2016 but we're in luck because I don't",
    "start": "3284250",
    "end": "3292140"
  },
  {
    "text": "actually need to run this in the browser I'm running this a node that can handle JavaScript 2016 because these this",
    "start": "3292140",
    "end": "3298850"
  },
  {
    "text": "execution environment is in there so I can come back over to the config file for the type scripts for this throwing",
    "start": "3298850",
    "end": "3304880"
  },
  {
    "text": "into end tests say don't target es5 target air six for me and now I can use",
    "start": "3304880",
    "end": "3311330"
  },
  {
    "text": "some of the new language features so then if I come back to our test we've",
    "start": "3311330",
    "end": "3317930"
  },
  {
    "text": "got this async I actually need to just reload the page so that the typescript",
    "start": "3317930",
    "end": "3324350"
  },
  {
    "text": "compiler can see that I've changed that settings so now it's not complaining about this async keyword and I can come",
    "start": "3324350",
    "end": "3330320"
  },
  {
    "text": "down here and just say a wait in front of this element I really like this I find using async await with normal Java",
    "start": "3330320",
    "end": "3337580"
  },
  {
    "text": "scripts because you've got to always catch your errors not as sweet as when I use it with here because if this fails it's just going to timeout which is fine",
    "start": "3337580",
    "end": "3344150"
  },
  {
    "text": "so it's really nice just say a wait and block on this line for me and wait for it to be able to get that text and then",
    "start": "3344150",
    "end": "3350930"
  },
  {
    "text": "run this joke but in the in the meantime I've killed our server so I'm just gonna say ng serve again to start up the",
    "start": "3350930",
    "end": "3358310"
  },
  {
    "text": "application cuz remember it has to actually run the browser so in another terminal I can come in and run ng e to e",
    "start": "3358310",
    "end": "3365720"
  },
  {
    "text": "again so I'm gonna push this over to the side like we did last time and run this it should fire up the browser navigate",
    "start": "3365720",
    "end": "3372170"
  },
  {
    "text": "to the page run the first test again next page check that the first joke",
    "start": "3372170",
    "end": "3378170"
  },
  {
    "text": "click the button check the second joke if you've got eyes like Superman you can follow this but it'll be pretty quick so",
    "start": "3378170",
    "end": "3385400"
  },
  {
    "text": "it boots it up second one and then runs it again so I could put some stuff in here to slow it down but I think you",
    "start": "3385400",
    "end": "3391760"
  },
  {
    "text": "guys get the point of what's happening here and how this is running and now it's running these two tests for us so",
    "start": "3391760",
    "end": "3397760"
  },
  {
    "text": "that's just a quick look into running end-to-end tests it's a lot of fun using the angular CLI to be able to jump in",
    "start": "3397760",
    "end": "3404930"
  },
  {
    "text": "and do this stuff really quick rather than spending half a day configuring all your testing harness and so what we just",
    "start": "3404930",
    "end": "3411230"
  },
  {
    "text": "had a look at was we went and looked at just selecting the title and then we did",
    "start": "3411230",
    "end": "3419060"
  },
  {
    "text": "another one where we actually were clicking around on some buttons so in summary for end-to-end tests they're not",
    "start": "3419060",
    "end": "3425390"
  },
  {
    "text": "a unit test they run in the browser and usually testing using user stories versus like a function so this example",
    "start": "3425390",
    "end": "3431090"
  },
  {
    "text": "is not perfect normally you'd be like I'll log in check the joke or do some work and then check what a",
    "start": "3431090",
    "end": "3436490"
  },
  {
    "text": "normal user would do through that user story but it helps save manual testers and I'll love it if we had less manual",
    "start": "3436490",
    "end": "3442790"
  },
  {
    "text": "testers because I think we could have a nicer world in that time and save some people's days so so there's just a",
    "start": "3442790",
    "end": "3452870"
  },
  {
    "text": "really important point that I think we need to call out and is that testing is something that you just can't do sporadically it's something that the",
    "start": "3452870",
    "end": "3458720"
  },
  {
    "text": "whole team needs to practice and they need to practice regularly it really isn't something that you can just go and",
    "start": "3458720",
    "end": "3464720"
  },
  {
    "text": "start doing straightaway it's something that does require practice but it's definitely worth it so this what you're",
    "start": "3464720",
    "end": "3471680"
  },
  {
    "text": "looking at here is my attempt to finish this Wiles on the road this is our new documentation for our angular because we",
    "start": "3471680",
    "end": "3476690"
  },
  {
    "text": "do a lot of courses and two-day workshops this is our testing Docs it's basically a much longer version of what",
    "start": "3476690",
    "end": "3482900"
  },
  {
    "text": "we did today with everything so there's like seven or eight lessons in here and each lesson has all these different",
    "start": "3482900",
    "end": "3488330"
  },
  {
    "text": "tasks that you can complete so we just rewrote it an angular and polymer but",
    "start": "3488330",
    "end": "3493430"
  },
  {
    "text": "unfortunately it's not complete except for this section I have to do the authentication still but if anyone wants to directly message me I'm happy to give",
    "start": "3493430",
    "end": "3498920"
  },
  {
    "text": "it to them for free so on Twitter I've got an open DM if you hit me up on Twitter you can i'll give you access to",
    "start": "3498920",
    "end": "3505640"
  },
  {
    "text": "it so it's basically just the module we did today but you can go and follow it and step through everything we've done",
    "start": "3505640",
    "end": "3511210"
  },
  {
    "text": "next one also just calling out we're doing a 2-day angular 2 workshop in",
    "start": "3511210",
    "end": "3516650"
  },
  {
    "text": "Copenhagen in February so I'd love to see some of you there but in summary",
    "start": "3516650",
    "end": "3523070"
  },
  {
    "text": "what we've had a look at today's we've had a look at some tools for testing angular 2 we had a look through how to",
    "start": "3523070",
    "end": "3528290"
  },
  {
    "text": "use Jasmine around the complexity and some solutions for managing dependencies in your tests we look at how the testbed",
    "start": "3528290",
    "end": "3535250"
  },
  {
    "text": "API can save you a lot of work and we looked at how async and fake async are",
    "start": "3535250",
    "end": "3540380"
  },
  {
    "text": "making a lot easier to test asynchronous code in the in your angular 2 and then",
    "start": "3540380",
    "end": "3546380"
  },
  {
    "text": "we ran some end-to-end tests look everyone thank you very much for coming along follow us on Twitter and we hope",
    "start": "3546380",
    "end": "3551600"
  },
  {
    "text": "to see you around the conference Thanks",
    "start": "3551600",
    "end": "3556390"
  }
]