[
  {
    "text": "okay so raise your hand if you have a Twitter account okay tech people with Twitter accounts",
    "start": "719",
    "end": "8160"
  },
  {
    "text": "that's not surprising so about a year ago Elon tweeted if",
    "start": "8160",
    "end": "13799"
  },
  {
    "text": "Twitter acquisition completes company will be super focused on Hardcore software engineering design info second",
    "start": "13799",
    "end": "20880"
  },
  {
    "text": "server Hardware who remembers this tweet okay so what's the line that got the most low back",
    "start": "20880",
    "end": "26880"
  },
  {
    "text": "it's the hardcore software engineering part right where many people tweeted back and asked what does hardcore",
    "start": "26880",
    "end": "32880"
  },
  {
    "text": "software engineering even mean right tweeted back quotes we did asked him and what not many people know is the",
    "start": "32880",
    "end": "39360"
  },
  {
    "text": "fictional tale that happened ever since that evening in May 6 2022 up until",
    "start": "39360",
    "end": "45540"
  },
  {
    "text": "today so what actually happened this is an actual fictional story",
    "start": "45540",
    "end": "51780"
  },
  {
    "text": "so he was sitting at home and he was thinking stuff what does hardcore software engineering even mean I always tweet without thinking twice",
    "start": "51780",
    "end": "58260"
  },
  {
    "text": "so he was thinking and thinking and for the past year he just couldn't find the answer and then about five",
    "start": "58260",
    "end": "64680"
  },
  {
    "text": "minutes ago talking about 11 35 then he finally came up with the idea he",
    "start": "64680",
    "end": "69720"
  },
  {
    "text": "understood what it's all about and that's when he decided I gotta tweet this out so we tweeted NDC come to room",
    "start": "69720",
    "end": "76380"
  },
  {
    "text": "number eight as soon as possible and of course that's why we're all gathered here today right to hear elon's genius",
    "start": "76380",
    "end": "82320"
  },
  {
    "text": "idea for what a hardcore software engineering really is all about and here it is right so",
    "start": "82320",
    "end": "89159"
  },
  {
    "text": "rebuilding Twitter following clean architecture and domain driven design I I it didn't have the motorcycle and I",
    "start": "89159",
    "end": "95340"
  },
  {
    "text": "was like nah it's not complete without a motorcycle okay so a bit about me so my name is I'm",
    "start": "95340",
    "end": "101820"
  },
  {
    "text": "a software engineer at Microsoft I'm from Israel I have some nougat packages uh era or and throw if you've",
    "start": "101820",
    "end": "108299"
  },
  {
    "text": "heard of them I also have some figma community files and within Microsoft I",
    "start": "108299",
    "end": "113579"
  },
  {
    "text": "author and teach some courses on cleaner architecture and domain driven design I also have a YouTube channel that I",
    "start": "113579",
    "end": "120299"
  },
  {
    "text": "opened about a year ago so if you enjoy the talk today then you can check it out maybe you'll like that as well but",
    "start": "120299",
    "end": "126420"
  },
  {
    "text": "enough about me let's talk about what we're going to be covering today so my motivation for this talk",
    "start": "126420",
    "end": "133440"
  },
  {
    "text": "was first of all to take a non-ambitious goal my motivation for this talk was let's",
    "start": "133440",
    "end": "139440"
  },
  {
    "text": "take an example first approach to cover many of the topics of domain driven",
    "start": "139440",
    "end": "144840"
  },
  {
    "text": "design and clean architecture where instead of it being Theory heavy it's going to be example heavy so we'll cover",
    "start": "144840",
    "end": "150239"
  },
  {
    "text": "a lot of the ground that has to do with the various topics but it's all going to be anchored two examples and things that",
    "start": "150239",
    "end": "157500"
  },
  {
    "text": "you can imagine okay now you can see the story like line on the top for engagement reasons and",
    "start": "157500",
    "end": "164700"
  },
  {
    "text": "you can see in which part we're at based on the section that we're in so the first part is about strategic design so",
    "start": "164700",
    "end": "171000"
  },
  {
    "text": "if you're not familiar with DDD then domain driven design is split into two",
    "start": "171000",
    "end": "176220"
  },
  {
    "text": "main categories the first one is strategic design and the second one is tactical design strategic design is",
    "start": "176220",
    "end": "182220"
  },
  {
    "text": "about taking a big complex domain like Twitter for example and breaking it up",
    "start": "182220",
    "end": "187379"
  },
  {
    "text": "into smaller subdomains okay so that's the main goal of the Strategic design",
    "start": "187379",
    "end": "192480"
  },
  {
    "text": "part then we have tactical design where we zoom in on each one of those subdomains we break it up even further",
    "start": "192480",
    "end": "199260"
  },
  {
    "text": "further into domain models so if this doesn't mean anything yes then don't worry we'll dive in deeper as we go",
    "start": "199260",
    "end": "205080"
  },
  {
    "text": "along and finally clean architecture so we have all these various domains but how do we package it in a way that's",
    "start": "205080",
    "end": "211260"
  },
  {
    "text": "testable swappable we can swap around components and have the various subdomains talk to one another okay and",
    "start": "211260",
    "end": "218159"
  },
  {
    "text": "then we also look at a project structure example so how the code base can",
    "start": "218159",
    "end": "223980"
  },
  {
    "text": "actually look like from a folder and fire file perspective and I hope that will give you the overall picture of how",
    "start": "223980",
    "end": "230040"
  },
  {
    "text": "you can take something like Twitter which is pretty abstract at first and break it up all the way up until you can",
    "start": "230040",
    "end": "236760"
  },
  {
    "text": "imagine the actual code that wasn't behind it great so here we are right Elon",
    "start": "236760",
    "end": "242760"
  },
  {
    "text": "commanded we arrived we're sitting over here I should have changed the right",
    "start": "242760",
    "end": "248040"
  },
  {
    "text": "this room that doesn't like this it's like this so so we arrived over here and tweet and Elon is okay let's rebuild",
    "start": "248040",
    "end": "255659"
  },
  {
    "text": "Twitter right now we need to ask ourselves what is Twitter what is Twitter is it the",
    "start": "255659",
    "end": "261720"
  },
  {
    "text": "timeline that we're scrolling and that's Twitter is it the DMS is it the lists or",
    "start": "261720",
    "end": "267479"
  },
  {
    "text": "topics or there's so many features that have to do with Twitter that Twitter isn't a small to-do list or a shopping",
    "start": "267479",
    "end": "275160"
  },
  {
    "text": "cart where it's very easy to model it and we don't need to really split it up into various subdomains but we're",
    "start": "275160",
    "end": "280440"
  },
  {
    "text": "talking about a complex domain that we need to approach it in a different",
    "start": "280440",
    "end": "286020"
  },
  {
    "text": "way right luckily Elon is here to save us so he",
    "start": "286020",
    "end": "291120"
  },
  {
    "text": "heard we're designing a complex system and this is a great use case for domain driven design okay so what we want to do",
    "start": "291120",
    "end": "298320"
  },
  {
    "text": "in the wind driven design is or what domain driven design is is an approach for Designing systems in a way that you",
    "start": "298320",
    "end": "305699"
  },
  {
    "text": "can break it up into smaller components have well-defined interactions between them and let's look at an example",
    "start": "305699",
    "end": "312060"
  },
  {
    "text": "so thanks Elon he's giving us the first step for hardcore domain driven design",
    "start": "312060",
    "end": "317820"
  },
  {
    "text": "so step number one is strategic design like we said this is where we want to take a big domain and break it up into",
    "start": "317820",
    "end": "324240"
  },
  {
    "text": "smaller subdomains with well-defined interactions between them so over here",
    "start": "324240",
    "end": "329280"
  },
  {
    "text": "we can see that we have integration the lines represent integration between these two components",
    "start": "329280",
    "end": "335759"
  },
  {
    "text": "so if sub domains or whatever it doesn't mean anything to you yet then you can simply imagine it as sub-components okay",
    "start": "335759",
    "end": "341460"
  },
  {
    "text": "like logical sub-components so we have the a search and the tweets",
    "start": "341460",
    "end": "348139"
  },
  {
    "text": "subdomains that have an interaction between them and we see that there's some relationship where the tweets is",
    "start": "348139",
    "end": "353880"
  },
  {
    "text": "the upstream and the search is a downstream and we have the social graph in the search which doesn't have any",
    "start": "353880",
    "end": "360060"
  },
  {
    "text": "definition for the interaction between them right now this is just an example doesn't mean anything what we want to do as part of strategic design is to go",
    "start": "360060",
    "end": "366840"
  },
  {
    "text": "from the left to the right yeah it's the point of the entire first section",
    "start": "366840",
    "end": "374180"
  },
  {
    "text": "how do we do it right so I want you I want to encourage you to actually imagine that we're here Elon came in we're all",
    "start": "374280",
    "end": "380820"
  },
  {
    "text": "in Tech we want to break it down where do we start right what's the first step so for",
    "start": "380820",
    "end": "387120"
  },
  {
    "text": "this what we can use is event storming event storming was invented by Alberto",
    "start": "387120",
    "end": "392759"
  },
  {
    "text": "and there are three main types of event storing so the first one is Big Picture event storming this is where we want to",
    "start": "392759",
    "end": "398759"
  },
  {
    "text": "take a big or a problem space in general and break it down have a shared they've",
    "start": "398759",
    "end": "404759"
  },
  {
    "text": "shared boundaries within the problem space that we're trying to model and to have the priorities what's more",
    "start": "404759",
    "end": "410460"
  },
  {
    "text": "important where we want to put most of our effort have the various experts from various Fields all aligning on a shared",
    "start": "410460",
    "end": "417000"
  },
  {
    "text": "understanding so that's a big picture then there's process modeling where the scope is smaller so we choose a specific",
    "start": "417000",
    "end": "422940"
  },
  {
    "text": "frame and we'll look into it in a few minutes but we choose a specific frame in which it's the process that we want",
    "start": "422940",
    "end": "429180"
  },
  {
    "text": "to model and it's how we go from point A to point B in a more detailed way and",
    "start": "429180",
    "end": "434400"
  },
  {
    "text": "finally software design so the output this is for modeling what the software will actually look like so we won't go",
    "start": "434400",
    "end": "440400"
  },
  {
    "text": "too deep into that but that's another the last one okay so big picture event storming",
    "start": "440400",
    "end": "447240"
  },
  {
    "text": "who do we want in the room like we said we're exploring the problem in space so we want all the relevant experts in the",
    "start": "447240",
    "end": "455280"
  },
  {
    "text": "various fields of the problem that we're trying to solve so because we're rebuilding Twitter following clean",
    "start": "455280",
    "end": "462180"
  },
  {
    "text": "architecture and domain driven design then of course the person we want in the room is the CEO right we want the very",
    "start": "462180",
    "end": "467720"
  },
  {
    "text": "decision makers from the various fields that are in the problem space so",
    "start": "467720",
    "end": "474479"
  },
  {
    "text": "of course we want the CEO but we also want the CTO right the CTO should also probably be there to give us a",
    "start": "474479",
    "end": "480000"
  },
  {
    "text": "technology point of view and sales right perhaps now we're changing the features so we want the customers to know about",
    "start": "480000",
    "end": "486660"
  },
  {
    "text": "the new features that exist legal right gdpr whatever things that",
    "start": "486660",
    "end": "492120"
  },
  {
    "text": "may not be okay from a legal standpoint that we need to make sure public relations maybe we want to re to",
    "start": "492120",
    "end": "498000"
  },
  {
    "text": "announce on a podcast and social media about the redesign of Twitter right great press Engineers perhaps the head",
    "start": "498000",
    "end": "504780"
  },
  {
    "text": "engineer of the advertisement I don't know subgroup that could give us",
    "start": "504780",
    "end": "510720"
  },
  {
    "text": "insight about specific things that have to do with that and stakeholders basically what we want",
    "start": "510720",
    "end": "516539"
  },
  {
    "text": "is all the decision makers in the problem space that we're solving so I work at Microsoft not if I do a big",
    "start": "516539",
    "end": "523380"
  },
  {
    "text": "picture event storming session satyo probably won't arrive okay so it depends on the problem space",
    "start": "523380",
    "end": "529140"
  },
  {
    "text": "that you're trying to solve so we start with sticky notes who's familiar with event storming",
    "start": "529140",
    "end": "535920"
  },
  {
    "text": "we're somewhat familiar with event storming okay great so about half I'd say so it's all about sticky notes",
    "start": "535920",
    "end": "542519"
  },
  {
    "text": "for a big picture event storming session there are five types that's not what I",
    "start": "542519",
    "end": "549560"
  },
  {
    "text": "so in Big Picture event storming there are five types of sticky notes and what",
    "start": "549959",
    "end": "555240"
  },
  {
    "text": "it wants to do we're not going to dive too deep into this for time constraints you will have in the end a QR code that",
    "start": "555240",
    "end": "560940"
  },
  {
    "text": "you can scan and you'll have the presentation so you'll be able to zoom in and look at this in detail I will",
    "start": "560940",
    "end": "566100"
  },
  {
    "text": "zoom in on specific Parts in a minute but what I do want to show you is how you can use event",
    "start": "566100",
    "end": "573839"
  },
  {
    "text": "storming or big picture event storming to find the various boundaries that we have within our system okay so we did",
    "start": "573839",
    "end": "580560"
  },
  {
    "text": "we're this is the final artifact there's steps to how you get over here which I'm not going to cover as part of this talk",
    "start": "580560",
    "end": "585899"
  },
  {
    "text": "but what I do want you to notice right off the bat is that it's in chronological order right so from left to right and you there are vertical",
    "start": "585899",
    "end": "594540"
  },
  {
    "text": "lines across the board or the the modeling surface these represent these",
    "start": "594540",
    "end": "600060"
  },
  {
    "text": "are called temporal Milestones so these are specific points in time that we say this is the six month Mark now it makes",
    "start": "600060",
    "end": "605940"
  },
  {
    "text": "sense that this helps us align between all the various decision makers in the room we know by six months this",
    "start": "605940",
    "end": "612779"
  },
  {
    "text": "is what we want to accomplish right we want to announce the redesign on on social media for example and then we",
    "start": "612779",
    "end": "618300"
  },
  {
    "text": "could work our way back right it gives us a shared understanding of what's Happening next I want you to notice so go slide",
    "start": "618300",
    "end": "624660"
  },
  {
    "text": "back you can see the little lines that are splitting the board horizontally",
    "start": "624660",
    "end": "631560"
  },
  {
    "text": "these are what's called Swim Lanes so as we work on our modeling service then we",
    "start": "631560",
    "end": "636720"
  },
  {
    "text": "start saying okay okay wait wait these two things are happening in parallel right so while we're announcing the redesign on social media in the same",
    "start": "636720",
    "end": "643320"
  },
  {
    "text": "time we also the engineers are starting the initial testing of the apis right and maybe the content team is starting",
    "start": "643320",
    "end": "650700"
  },
  {
    "text": "to update the documentation towards the final release right makes sense so this",
    "start": "650700",
    "end": "656700"
  },
  {
    "text": "is to split the the space horizontally and you can also imagine how it starts",
    "start": "656700",
    "end": "662399"
  },
  {
    "text": "putting clear boundaries where we say Okay advertisement has nothing to do with whatever a different subdomain",
    "start": "662399",
    "end": "668160"
  },
  {
    "text": "these can be separate right so we can start seeing the relationships that we have between the various components",
    "start": "668160",
    "end": "675860"
  },
  {
    "text": "so we'll just I wanted to show you that like some of the the sticky notes",
    "start": "675959",
    "end": "681000"
  },
  {
    "text": "because it will be relevant for later so in Orange we have domain events or",
    "start": "681000",
    "end": "686160"
  },
  {
    "text": "events these are interesting things that happened from a business point of view within our system they're defined in",
    "start": "686160",
    "end": "693600"
  },
  {
    "text": "past tense and each domain event has an actor who initiated the domain inventor",
    "start": "693600",
    "end": "700800"
  },
  {
    "text": "that eventually made that event to happen so it could be a person right it could",
    "start": "700800",
    "end": "706140"
  },
  {
    "text": "be a user and we'll look at some other examples then I want you to notice that in pink we have systems so the system doesn't",
    "start": "706140",
    "end": "713399"
  },
  {
    "text": "have to be a microservice but it could be also a logical component within our system so within our service or",
    "start": "713399",
    "end": "719880"
  },
  {
    "text": "application it doesn't have to be necessarily separate applications then we can have things happening in",
    "start": "719880",
    "end": "726360"
  },
  {
    "text": "parallel right so like we said while we're really and while we're announcing the redesign then we're also starting",
    "start": "726360",
    "end": "733320"
  },
  {
    "text": "the initial testing and the content team is working on whatever then until finally the the website is launched we",
    "start": "733320",
    "end": "741959"
  },
  {
    "text": "have a clear understanding of what's Happening step by step up until the launch where we have the engineers the",
    "start": "741959",
    "end": "747839"
  },
  {
    "text": "everyone is there to share their opinion and you can imagine if you try to do this over email how this would go or",
    "start": "747839",
    "end": "753779"
  },
  {
    "text": "create a one-pager or a hundred pager how you would get everyone to agree and be on the same page now you can also see",
    "start": "753779",
    "end": "760680"
  },
  {
    "text": "that some events are pivotal events or these are events that are a bit more interesting they probably have",
    "start": "760680",
    "end": "766320"
  },
  {
    "text": "other events that are coming right after and that the actor doesn't necessarily",
    "start": "766320",
    "end": "773579"
  },
  {
    "text": "have to be a person but it could be time right so we said we're doing this in the after 12 months at 12 p.m great that's",
    "start": "773579",
    "end": "779940"
  },
  {
    "text": "the actor that's initiated then we don't need to go into detail but",
    "start": "779940",
    "end": "785820"
  },
  {
    "text": "what I do want you to notice is how we can get a shared understanding of specific key flows within our system so",
    "start": "785820",
    "end": "792480"
  },
  {
    "text": "from the search query was entered up until the search results were displayed",
    "start": "792480",
    "end": "798060"
  },
  {
    "text": "and in the background we have some what we call it search engine system that's Computing search Trends and notifying",
    "start": "798060",
    "end": "805139"
  },
  {
    "text": "the recommendations algorithm whatever right we can do we can represent many things over here in an abstract yet",
    "start": "805139",
    "end": "813060"
  },
  {
    "text": "pretty it's easy to understand right in a few minutes we can explain the theory behind it",
    "start": "813060",
    "end": "818519"
  },
  {
    "text": "and also we can say this is not that important as something else right we can",
    "start": "818519",
    "end": "823620"
  },
  {
    "text": "look and say some things are more important than others and finally we there's the red and green",
    "start": "823620",
    "end": "831180"
  },
  {
    "text": "sticky notes so red sticky notes are for a hot spot so if these are branches that",
    "start": "831180",
    "end": "836579"
  },
  {
    "text": "we don't want to explore we have a misunderstanding or we have we don't want to go too deep into it we have a",
    "start": "836579",
    "end": "842100"
  },
  {
    "text": "conflict on what we think it means but we don't have the time to break it down then we put a hot spot we say let's get",
    "start": "842100",
    "end": "848100"
  },
  {
    "text": "back to that then there are green sticky notes for opportunities so tweet views is a new feature in Twitter for from a",
    "start": "848100",
    "end": "854399"
  },
  {
    "text": "few months ago it's easy to see how once you have these events laid out then you can say whoops this is a great feature",
    "start": "854399",
    "end": "860220"
  },
  {
    "text": "that perhaps can be premium right like tweet pinned and tweet unpinned let's make that for paying customers only",
    "start": "860220",
    "end": "866820"
  },
  {
    "text": "right why not so this gives us the initial boundaries",
    "start": "866820",
    "end": "872579"
  },
  {
    "text": "that we want within our system so we're looking we're saying oh I see we have these swim Lanes perhaps we can break it",
    "start": "872579",
    "end": "878040"
  },
  {
    "text": "up something like the following okay now of course this isn't final and it'll probably change as we go along but we",
    "start": "878040",
    "end": "883560"
  },
  {
    "text": "can start seeing these relationships now in domain driven design there are",
    "start": "883560",
    "end": "889019"
  },
  {
    "text": "three main types of or the three types of subdomains the first type is the course of domain okay so this is the",
    "start": "889019",
    "end": "895079"
  },
  {
    "text": "money maker this is what makes our business unique and is what we want to spend most of our",
    "start": "895079",
    "end": "901320"
  },
  {
    "text": "time Energy Engineering time on because it's what makes our business make money right so social graph this is obviously",
    "start": "901320",
    "end": "909540"
  },
  {
    "text": "core subdomain so if we're thinking about why nestadon and blue sky and whatever other apps aren't easily taking",
    "start": "909540",
    "end": "915779"
  },
  {
    "text": "over Twitter it's because they don't have a social graph they don't have all the connections between the various users who you muted who you like who you",
    "start": "915779",
    "end": "921839"
  },
  {
    "text": "follow right all this data that Twitter has stored over the years some social",
    "start": "921839",
    "end": "927420"
  },
  {
    "text": "graph is a course of domain but you don't necessarily have only one so also the Tweet subdomain can be",
    "start": "927420",
    "end": "933000"
  },
  {
    "text": "it's probably a core subdomain as well the timeline right",
    "start": "933000",
    "end": "938519"
  },
  {
    "text": "next we have a support install domain so this isn't the core sub domain this isn't the money maker but it's important",
    "start": "938519",
    "end": "943920"
  },
  {
    "text": "for our business right we want to spend some energy or effort on building it",
    "start": "943920",
    "end": "950160"
  },
  {
    "text": "and finally a generic sub domain so these refer to as solves problems so if we're thinking about messaging there are",
    "start": "950160",
    "end": "956279"
  },
  {
    "text": "many third parties that we can use for messaging we can use something off the shelf so for example we fired the entire",
    "start": "956279",
    "end": "963240"
  },
  {
    "text": "company then we can just delegate messaging to a different company right",
    "start": "963240",
    "end": "968459"
  },
  {
    "text": "but it's even if we Define it as a generic sub domain now we can in the",
    "start": "968459",
    "end": "973860"
  },
  {
    "text": "future say whoa maybe let's send encrypted Dodge Bitcoin over DMS and",
    "start": "973860",
    "end": "979680"
  },
  {
    "text": "this will slowly becoming more important subdomain within our system and I'll",
    "start": "979680",
    "end": "985019"
  },
  {
    "text": "move to a supporting perhaps even a core subdomain as its value changes",
    "start": "985019",
    "end": "991019"
  },
  {
    "text": "cool okay so we have the very sub domains we understand more or less how we can say okay this is more important this is less important based on the big",
    "start": "991019",
    "end": "997680"
  },
  {
    "text": "picture of end storming session uh the next thing I want to talk about is context map so like we said there are",
    "start": "997680",
    "end": "1003459"
  },
  {
    "text": "relationships between the various subdomains so in domain driven design there's something called a context map",
    "start": "1003459",
    "end": "1008600"
  },
  {
    "text": "this is for visually representing relationships between various sub",
    "start": "1008600",
    "end": "1015079"
  },
  {
    "text": "domains so over here we can see write the integration between the two and there are various terms that compose the",
    "start": "1015079",
    "end": "1021440"
  },
  {
    "text": "legend of the context of a context map so over here we can see let's imagine",
    "start": "1021440",
    "end": "1026720"
  },
  {
    "text": "we're talking about the flow let's say the recommendation subdomain is responsible for giving you recommended",
    "start": "1026720",
    "end": "1034160"
  },
  {
    "text": "people to follow so in Twitter when you go to someone's profile and you follow them sometimes we have a list of a few other suggestions of people you may want",
    "start": "1034160",
    "end": "1040459"
  },
  {
    "text": "to follow so let's say that's the responsibility of the recommendation subdomain the",
    "start": "1040459",
    "end": "1045500"
  },
  {
    "text": "social graph affects the recommendations of the main so in this relationship or in this",
    "start": "1045500",
    "end": "1052640"
  },
  {
    "text": "scenario that we're talking about the social graph is the upstream and the recommendations is the downstream and",
    "start": "1052640",
    "end": "1057740"
  },
  {
    "text": "other various other terms so let's imagine that because the social graph is such a crucial part of our",
    "start": "1057740",
    "end": "1064340"
  },
  {
    "text": "system then instead of it having a a coupled relationship with various other",
    "start": "1064340",
    "end": "1069799"
  },
  {
    "text": "subdomains instead it has a well-defined API that each one of the clients can fetch data",
    "start": "1069799",
    "end": "1078500"
  },
  {
    "text": "about the relationship of users with other users and it's well defined this is the a open host service that they",
    "start": "1078500",
    "end": "1084140"
  },
  {
    "text": "expose you can imagine it's a second a well-defined API and the recommendation subdomain",
    "start": "1084140",
    "end": "1089660"
  },
  {
    "text": "uses the social graph to understand the relationships and because it doesn't",
    "start": "1089660",
    "end": "1096020"
  },
  {
    "text": "want the internal models to be the same as the data as the same way it comes off",
    "start": "1096020",
    "end": "1101840"
  },
  {
    "text": "the wire then it introduces some anti-corruption layer where it takes the data from the form that it came over the",
    "start": "1101840",
    "end": "1107480"
  },
  {
    "text": "wire and converts it to the internal language that it speaks internally within the system okay that's an",
    "start": "1107480",
    "end": "1113179"
  },
  {
    "text": "anti-corruption layer how do we do this right so we have the various relationships but how can we we",
    "start": "1113179",
    "end": "1119539"
  },
  {
    "text": "have the various subdomains for example or we the initial understanding of what the various supplements need to be",
    "start": "1119539",
    "end": "1125120"
  },
  {
    "text": "and how do we find all the various relationships process modeling event stormy so process",
    "start": "1125120",
    "end": "1130820"
  },
  {
    "text": "modeling event storming is funner in my opinion in process modeling event stormy you can",
    "start": "1130820",
    "end": "1136460"
  },
  {
    "text": "see that we have three new types of sticky notes so a command a policy and a read model",
    "start": "1136460",
    "end": "1142940"
  },
  {
    "text": "and like we said over here we want to choose a specific frame 2 model",
    "start": "1142940",
    "end": "1149360"
  },
  {
    "text": "so let's look at an example so over here this is the the frame that we're working with the line on the",
    "start": "1149360",
    "end": "1156860"
  },
  {
    "text": "left it's the same the same sign the line on the left is has a command this",
    "start": "1156860",
    "end": "1162740"
  },
  {
    "text": "is the command that starts the process that we want to model so we can imagine this like create tweet right something",
    "start": "1162740",
    "end": "1169460"
  },
  {
    "text": "in past tense that is invoked by some actor so we have to create tweet and let's say",
    "start": "1169460",
    "end": "1176000"
  },
  {
    "text": "and and that's on the left side on the right side we have domain events these are the final events that happen and we",
    "start": "1176000",
    "end": "1183200"
  },
  {
    "text": "want to somehow connect these two two sides so let's imagine that we're talking",
    "start": "1183200",
    "end": "1189440"
  },
  {
    "text": "about the flow where we create a tweet and this tweet is talking about cars for",
    "start": "1189440",
    "end": "1195919"
  },
  {
    "text": "example and you as a Twitter user than when you signed up you said I'm very interested in cars right you can choose cars technology you can choose these",
    "start": "1195919",
    "end": "1202280"
  },
  {
    "text": "various topics that you want to follow and you choose cars how do we have the",
    "start": "1202280",
    "end": "1207320"
  },
  {
    "text": "this tweet somehow that doesn't have hashtag cars in it but it is talking about something",
    "start": "1207320",
    "end": "1213320"
  },
  {
    "text": "that's relevant for this topic how do we have the subscribers of that topic notified about this tweet guys how can",
    "start": "1213320",
    "end": "1219620"
  },
  {
    "text": "we model that flow now what makes this interesting and it's a game where I see it as a game",
    "start": "1219620",
    "end": "1225500"
  },
  {
    "text": "is there are specific rules for the order of the sticky notes here it is so we have on the left most",
    "start": "1225500",
    "end": "1233600"
  },
  {
    "text": "we have the read model the read model is okay we want to create a tweet right so",
    "start": "1233600",
    "end": "1238760"
  },
  {
    "text": "the read model over here is the data that's needed to handle the command so you can imagine it if you want from a UI",
    "start": "1238760",
    "end": "1245059"
  },
  {
    "text": "point of view it's the create tweet UI and you click Send whatever but what it",
    "start": "1245059",
    "end": "1250340"
  },
  {
    "text": "actually contains is the data so it's the text of the Tweet it's the media",
    "start": "1250340",
    "end": "1255500"
  },
  {
    "text": "perhaps if you attach any media it's the metadata right so it was sent from Earth",
    "start": "1255500",
    "end": "1260840"
  },
  {
    "text": "or whatever other metadata that is passed with a request now the actor the user right so",
    "start": "1260840",
    "end": "1267980"
  },
  {
    "text": "they observe the whatever UI and they decide to invoke a command the command",
    "start": "1267980",
    "end": "1273620"
  },
  {
    "text": "is great to it and a command is always invoked on a system the system let's say is the Tweet system right which",
    "start": "1273620",
    "end": "1279320"
  },
  {
    "text": "corresponds to the Tweet subdomain but it doesn't necessarily have to like we said the system is a logical",
    "start": "1279320",
    "end": "1284960"
  },
  {
    "text": "component not a not a application so we decided to invoke the create with",
    "start": "1284960",
    "end": "1290240"
  },
  {
    "text": "command is invoked on the Tweet system and then after that we have either",
    "start": "1290240",
    "end": "1295520"
  },
  {
    "text": "either an end like or end so the read model that returns back to the user",
    "start": "1295520",
    "end": "1300740"
  },
  {
    "text": "these are the details displayed back so once you send a tweet then you see the Tweet back on your feed right you could",
    "start": "1300740",
    "end": "1306200"
  },
  {
    "text": "also have it implemented so that the person who sent the Tweet also gets an email that says this is a Twitter you",
    "start": "1306200",
    "end": "1312140"
  },
  {
    "text": "just 10 right so multiple read models or a policy the definition of a policy",
    "start": "1312140",
    "end": "1318020"
  },
  {
    "text": "is loose so it's what we do when this happens right what's how the policy inside our system when this happens what",
    "start": "1318020",
    "end": "1325640"
  },
  {
    "text": "do we do so let's say we have a policy that every time a new tweet is created we have a",
    "start": "1325640",
    "end": "1330679"
  },
  {
    "text": "policy that we want to scan the text and see if there are various topics tagged inside right so",
    "start": "1330679",
    "end": "1337520"
  },
  {
    "text": "let's say it talks about cars we now can tag this tweet with some internal metadata that says this talks about cars",
    "start": "1337520",
    "end": "1343640"
  },
  {
    "text": "now what's nice about this is that we arrived here at the blue after blue",
    "start": "1343640",
    "end": "1348679"
  },
  {
    "text": "we're back over here we need to have a system right and from the read model so now this can",
    "start": "1348679",
    "end": "1354500"
  },
  {
    "text": "be observed by a actor by an actor and we go through the same process right so we need to follow these rules",
    "start": "1354500",
    "end": "1360860"
  },
  {
    "text": "so here's just a simple example so it's what we gave we have some events on the left for context they use a register the",
    "start": "1360860",
    "end": "1366860"
  },
  {
    "text": "user logged in then we have the user observing that read model and creating",
    "start": "1366860",
    "end": "1372440"
  },
  {
    "text": "the Tweet so what it actually contains again is the data that's needed to handle this command so we do we we",
    "start": "1372440",
    "end": "1379179"
  },
  {
    "text": "invoke the create tweet command and walk down the Tweet system like we said this",
    "start": "1379179",
    "end": "1384559"
  },
  {
    "text": "creates the Tweet create a domain event then we have the Tweet credit policy",
    "start": "1384559",
    "end": "1389600"
  },
  {
    "text": "that scans the tweet for topics okay now a command is always invoked on a system",
    "start": "1389600",
    "end": "1394880"
  },
  {
    "text": "so let's say this is happening in some machine learning system and then because this is a scenario that we want to model",
    "start": "1394880",
    "end": "1402140"
  },
  {
    "text": "of course we can have multiple events where it's different branches but this is the specific scenario that we want to",
    "start": "1402140",
    "end": "1407720"
  },
  {
    "text": "cover and also just for Simplicity reasons for this talk so the Tweet tag topics right when I say tweet Tech",
    "start": "1407720",
    "end": "1414020"
  },
  {
    "text": "topics we're saying in past tense that yes this tweet is talking about specific",
    "start": "1414020",
    "end": "1419179"
  },
  {
    "text": "topics so we Tech topics and we have a policy",
    "start": "1419179",
    "end": "1425539"
  },
  {
    "text": "that every time that the topic that a tweet contains topics then we want to update the topic okay let's say this is",
    "start": "1425539",
    "end": "1431000"
  },
  {
    "text": "managed by the recommendations system it makes sense the recommendations are responsible for when",
    "start": "1431000",
    "end": "1436280"
  },
  {
    "text": "you want to follow technology and cars whatever so it knows how to say oops this tweet is actually talks about cars",
    "start": "1436280",
    "end": "1441980"
  },
  {
    "text": "and it's getting a lot of heat great let's let's surface it right so this is handled by the recommendation",
    "start": "1441980",
    "end": "1448940"
  },
  {
    "text": "system and then every time a topic is updated right so we update it then we have another policy that updates the",
    "start": "1448940",
    "end": "1455780"
  },
  {
    "text": "subscribers right fair enough we could be modeled differently of course but this is what I",
    "start": "1455780",
    "end": "1461600"
  },
  {
    "text": "chose and let's say it's it's the subscribers are notified via email so here we have the email system and",
    "start": "1461600",
    "end": "1467780"
  },
  {
    "text": "finally there's they they're notified now you can see how we modeled it from the left to the right it follows only",
    "start": "1467780",
    "end": "1473960"
  },
  {
    "text": "the rules that we talked about and we're sitting here in the room 20 minutes into the talk and we understand",
    "start": "1473960",
    "end": "1479059"
  },
  {
    "text": "what what we're talking about right a it it's not a very complex example but it's",
    "start": "1479059",
    "end": "1485419"
  },
  {
    "text": "also not very simple right how would we talk about it otherwise it would be a bit more a little bit",
    "start": "1485419",
    "end": "1490760"
  },
  {
    "text": "harder also over here we can say well this is a good opportunity let's put a green sticky note over here let's make",
    "start": "1490760",
    "end": "1495799"
  },
  {
    "text": "some money somehow um also once you're familiar with process modeling then you could look at",
    "start": "1495799",
    "end": "1501919"
  },
  {
    "text": "any process that was modeled using process modeling and because we're already familiar with",
    "start": "1501919",
    "end": "1506960"
  },
  {
    "text": "the sticky notes great this is what's happening over there it's easy to understand what's going on yeah",
    "start": "1506960",
    "end": "1512720"
  },
  {
    "text": "so we're sitting we're looking at the process modeling that we did for key scenarios in our system and we can start",
    "start": "1512720",
    "end": "1518000"
  },
  {
    "text": "noticing relationships so we can say okay wait the Tweet the Tweet system has a",
    "start": "1518000",
    "end": "1524240"
  },
  {
    "text": "relationship with the machine Learning System right it's the machine learning system has a a",
    "start": "1524240",
    "end": "1530360"
  },
  {
    "text": "relationship with the recommendation system now like we said a system isn't a application or a microservice",
    "start": "1530360",
    "end": "1536480"
  },
  {
    "text": "we can have the machine learning system in the recommendation system sit inside the same",
    "start": "1536480",
    "end": "1542779"
  },
  {
    "text": "sub domain so for example let's say the machine Learning System is part of the recommendation subdomain it's just a",
    "start": "1542779",
    "end": "1548299"
  },
  {
    "text": "logical component so now we see we have between the tweet and the recommendations subdomains we have a",
    "start": "1548299",
    "end": "1554120"
  },
  {
    "text": "specific relationship okay we did that we should be able and I wanted to imagine whatever other",
    "start": "1554120",
    "end": "1559820"
  },
  {
    "text": "application that you're building or you want to build in the future and we can see how we can take the big problem do",
    "start": "1559820",
    "end": "1565400"
  },
  {
    "text": "big picture event storming find the boundaries then do process modeling find the relationships that we have between them of course",
    "start": "1565400",
    "end": "1571580"
  },
  {
    "text": "I'm talking about it like it's super simple but every domain has its specific difficulties",
    "start": "1571580",
    "end": "1578000"
  },
  {
    "text": "and as you go along then you change it you say no that doesn't make sense I don't know what I was thinking yesterday let's",
    "start": "1578000",
    "end": "1583279"
  },
  {
    "text": "change it let's do something else okay we have this now we can see okay these are the relationships that we have",
    "start": "1583279",
    "end": "1588919"
  },
  {
    "text": "between the very sub domains I put here a legend with all various terms that exist in a context map but you won't",
    "start": "1588919",
    "end": "1595520"
  },
  {
    "text": "actually create one God context map to rule them all because just imagine we're",
    "start": "1595520",
    "end": "1601520"
  },
  {
    "text": "adding another subdomain right who what would happen or this is hard to maintain also it's inaccurate so in specific",
    "start": "1601520",
    "end": "1607360"
  },
  {
    "text": "scenarios you might have two supplements where this is the Upstream this is the downstream another",
    "start": "1607360",
    "end": "1612380"
  },
  {
    "text": "scenario could be flipped right so you wouldn't actually create such a big context map",
    "start": "1612380",
    "end": "1618559"
  },
  {
    "text": "what you would do is you would create a specific context map for a specific case that you",
    "start": "1618559",
    "end": "1624919"
  },
  {
    "text": "want to model so let's say we're looking at the flow in which",
    "start": "1624919",
    "end": "1630679"
  },
  {
    "text": "I have my home timeline in Twitter and I just muted someone because I had enough so I muted them now it should affect my",
    "start": "1630679",
    "end": "1639140"
  },
  {
    "text": "home timeline right but how so here's just a simple example right so the",
    "start": "1639140",
    "end": "1644960"
  },
  {
    "text": "social graph affects the timeline the recommendations also need to know the",
    "start": "1644960",
    "end": "1650659"
  },
  {
    "text": "recommendations subdomain needs to know to update the recommendations based on the the person that I just needed",
    "start": "1650659",
    "end": "1659120"
  },
  {
    "text": "and then the timeline is also affected by this as well just a",
    "start": "1659120",
    "end": "1664340"
  },
  {
    "text": "small example now as you can see we're starting to create a shared language before the",
    "start": "1664340",
    "end": "1669380"
  },
  {
    "text": "various terms right so we're talking about the home timeline I don't know connections that we have between users",
    "start": "1669380",
    "end": "1675020"
  },
  {
    "text": "right we're starting to to create a shared language and this is a very important Concept in domain-driven",
    "start": "1675020",
    "end": "1680059"
  },
  {
    "text": "design where we want to use the same terms among everyone so when I see terms",
    "start": "1680059",
    "end": "1686960"
  },
  {
    "text": "when I'm talking about the code base I'm talking about the domain models the actual objects that we have in our code base and when I say terms in the context",
    "start": "1686960",
    "end": "1694220"
  },
  {
    "text": "of product managers then we want it to be the same thing so how does domain-driven design",
    "start": "1694220",
    "end": "1701299"
  },
  {
    "text": "deal with the following problem in the recommendations subdomain we can",
    "start": "1701299",
    "end": "1707659"
  },
  {
    "text": "imagine that we have a recommended user right someone that like is that we want to recommend",
    "start": "1707659",
    "end": "1713419"
  },
  {
    "text": "a user for you to follow so it could be called recommended user recommended profile whatever we choose but let's",
    "start": "1713419",
    "end": "1719240"
  },
  {
    "text": "imagine we just decided to call it recommended user then in the timeline we have the user so this is the user that",
    "start": "1719240",
    "end": "1725720"
  },
  {
    "text": "let's say is making the request and in a social graph it's all about users right so we have their a user",
    "start": "1725720",
    "end": "1733460"
  },
  {
    "text": "how how does domain driven design deal with having the same term in multiple",
    "start": "1733460",
    "end": "1739179"
  },
  {
    "text": "subdomains right we can imagine that in many of the cell domains we'll have a user how can we stay consistent when",
    "start": "1739179",
    "end": "1745880"
  },
  {
    "text": "each one of the subdomains has the exact same term so",
    "start": "1745880",
    "end": "1751840"
  },
  {
    "text": "who thinks they know how domain driven design deals with this raise your hands",
    "start": "1752659",
    "end": "1759140"
  },
  {
    "text": "or who thinks they they can guess what it is okay so I'll choose one",
    "start": "1759140",
    "end": "1765620"
  },
  {
    "text": "Elon I was just about to someone from the crowd to give the answer",
    "start": "1765620",
    "end": "1770720"
  },
  {
    "text": "if you want to go I wants to tweet about it so wait let's see what he says",
    "start": "1770720",
    "end": "1776120"
  },
  {
    "text": "bounded context so that's the correct answer thank you Elon thank you very much",
    "start": "1776120",
    "end": "1781520"
  },
  {
    "text": "so bounded context is the correct answer that's how domain driven design deals with this problem so",
    "start": "1781520",
    "end": "1788179"
  },
  {
    "text": "a bounded context is a logical boundary in which the terms are consistent so",
    "start": "1788179",
    "end": "1794600"
  },
  {
    "text": "it's not a problem that the user term or domain model",
    "start": "1794600",
    "end": "1799640"
  },
  {
    "text": "exists in various subdomains because we just map each one of the",
    "start": "1799640",
    "end": "1805159"
  },
  {
    "text": "subdomains to a different download context okay so ideally each one of the subdomains is its own download context",
    "start": "1805159",
    "end": "1810440"
  },
  {
    "text": "if we imagine it from a microservice point of view then we might have the recommendations microservice and it has",
    "start": "1810440",
    "end": "1817220"
  },
  {
    "text": "a team that's working on that they have their specific language that they use internally perfect right",
    "start": "1817220",
    "end": "1824299"
  },
  {
    "text": "and when they say user they know exactly what user means right and same thing for the social graph and the timeline okay",
    "start": "1824299",
    "end": "1831440"
  },
  {
    "text": "bye Elon um so that's that's how domain driven as",
    "start": "1831440",
    "end": "1836539"
  },
  {
    "text": "I design deals with it now I think he has another one",
    "start": "1836539",
    "end": "1842960"
  },
  {
    "text": "ubiquitous language I almost forgot so thanks Elon so ubiquitous language the language used within a sub within a",
    "start": "1842960",
    "end": "1849260"
  },
  {
    "text": "bounded context is referred to as its ubiquitous language this is one of the core principles in domain driven design because we want to make sure that",
    "start": "1849260",
    "end": "1856399"
  },
  {
    "text": "everyone's aligned on the terms that we're using so like we said we want the models in the code to be the same as",
    "start": "1856399",
    "end": "1861980"
  },
  {
    "text": "what the sales are talking about when they're talking to customers so you can imagine how many problems this solves",
    "start": "1861980",
    "end": "1868220"
  },
  {
    "text": "when everyone's speaking the same language okay so the language used in a bounded context is the ubiquitous",
    "start": "1868220",
    "end": "1873380"
  },
  {
    "text": "language okay so that was strategic design again we want to take a big domain break it up",
    "start": "1873380",
    "end": "1879140"
  },
  {
    "text": "into smaller cell domates now the question is how do we take these",
    "start": "1879140",
    "end": "1884179"
  },
  {
    "text": "subdomains and we break break them up further",
    "start": "1884179",
    "end": "1889279"
  },
  {
    "text": "okay so the second stage is tactical design now we want to zoom in on each one of the subdomains and break it up in",
    "start": "1889279",
    "end": "1897080"
  },
  {
    "text": "a way that we can say okay this is The Logical representation I can I can take that and turn it into",
    "start": "1897080",
    "end": "1904760"
  },
  {
    "text": "working code right I can take that and I know what code I want to write so that's tactical bloom",
    "start": "1904760",
    "end": "1911419"
  },
  {
    "text": "luckily we have this fake thread I forgot to say all the tweets are fake right I just want to admit",
    "start": "1911419",
    "end": "1918679"
  },
  {
    "text": "a disclaimer that I forgot about all the tweets other than the first tweet are fake so this is a fake thread by Eric Evans",
    "start": "1918679",
    "end": "1925039"
  },
  {
    "text": "and here we have a list it's just for engagement reasons I don't know I thought it would be nicer to watch it to",
    "start": "1925039",
    "end": "1931039"
  },
  {
    "text": "see it this way so we have Erica Vons with a fake Thread about the very tactical patterns that exists so tactical patterns are the",
    "start": "1931039",
    "end": "1938539"
  },
  {
    "text": "building blocks in which we can break up the subdomain and when we have the in",
    "start": "1938539",
    "end": "1943760"
  },
  {
    "text": "the process of breaking up the subdomain into smaller components that we can",
    "start": "1943760",
    "end": "1950120"
  },
  {
    "text": "afterwards convert to working code that is the process of tactical design okay so tactical patterns the building block",
    "start": "1950120",
    "end": "1956600"
  },
  {
    "text": "build building blocks tactical design the process",
    "start": "1956600",
    "end": "1962240"
  },
  {
    "text": "the first one is entities and value objects raise your hand if you're familiar with entities and value objects",
    "start": "1962240",
    "end": "1967279"
  },
  {
    "text": "in domain driven design okay great so I'll just tell everyone's up to speed so this is when my wife",
    "start": "1967279",
    "end": "1973640"
  },
  {
    "text": "walked in to the room and saw me doing this and I was working on the animation of the neon and she told me you're going",
    "start": "1973640",
    "end": "1980480"
  },
  {
    "text": "overboard I was like you know how weird it would look if he wasn't holding two neon lights in his hands",
    "start": "1980480",
    "end": "1987320"
  },
  {
    "text": "okay so we have entities in value objects okay these are the two so if if we look at any domain that's built",
    "start": "1987320",
    "end": "1993140"
  },
  {
    "text": "following domain driven design so before I said domain I was talking about the entire Twitter domain when I said sub",
    "start": "1993140",
    "end": "1998299"
  },
  {
    "text": "domains I was talking about each one of the of the sub domains now when I say domain I'm just talking about each one",
    "start": "1998299",
    "end": "2003760"
  },
  {
    "text": "of the subdomains okay so if you look at any domain that's built following domain driven design any object you look at any",
    "start": "2003760",
    "end": "2010899"
  },
  {
    "text": "domain model that you look at falls into the bucket of either being an entity or a value object",
    "start": "2010899",
    "end": "2017559"
  },
  {
    "text": "now this is pretty simple so an entity all it is is an object that has an ID so",
    "start": "2017559",
    "end": "2022840"
  },
  {
    "text": "over here we have two people both have the same ID one two three four",
    "start": "2022840",
    "end": "2028539"
  },
  {
    "text": "and the what's interesting about entities is that they're considered the same even if the value the values are",
    "start": "2028539",
    "end": "2035140"
  },
  {
    "text": "completely different so if I change my favorite color from blue to green",
    "start": "2035140",
    "end": "2040840"
  },
  {
    "text": "I'm still the same person right so this is something that we probably want to model as an entity right so we can change properties inside",
    "start": "2040840",
    "end": "2047019"
  },
  {
    "text": "stays the same person on the other hand if we would model it as a value object",
    "start": "2047019",
    "end": "2052898"
  },
  {
    "text": "then these would be considered different domain models because value objects as",
    "start": "2052899",
    "end": "2059020"
  },
  {
    "text": "the name suggests is all about the values a value object doesn't have an ID it can have a property that's called ID",
    "start": "2059020",
    "end": "2064599"
  },
  {
    "text": "with some value but it's it's just another property within the so even if",
    "start": "2064599",
    "end": "2070540"
  },
  {
    "text": "we did have here the ID property on the person this would still be the exact same object and this would still be",
    "start": "2070540",
    "end": "2075878"
  },
  {
    "text": "different objects so let's focus specifically on the timeline subdomain I think it's the most",
    "start": "2075879",
    "end": "2083020"
  },
  {
    "text": "interesting plus it has some good examples so lastly the responsibility of the timeline subdomain so now we're",
    "start": "2083020",
    "end": "2088658"
  },
  {
    "text": "going to do tactical design for the timeline subdomain so let's imagine the responsibility of",
    "start": "2088659",
    "end": "2095200"
  },
  {
    "text": "the timeline subdomain is for is three things one the profile timeline so this",
    "start": "2095200",
    "end": "2100599"
  },
  {
    "text": "is just when you go to someone's profile you see their Tweets in Reverse chronological order the second responsibility is the home",
    "start": "2100599",
    "end": "2107200"
  },
  {
    "text": "timeline so this is where you see a mix of tweets from people you follow and random recommendations from the",
    "start": "2107200",
    "end": "2114040"
  },
  {
    "text": "recommendation algorithm and lastly the list timeline so who's familiar with the feature of lists in in",
    "start": "2114040",
    "end": "2121420"
  },
  {
    "text": "Twitter yes so the feature of lists and Twitter",
    "start": "2121420",
    "end": "2126460"
  },
  {
    "text": "allows you to create a list of multiple members and it works like this this is the focus for the next subsection so",
    "start": "2126460",
    "end": "2133960"
  },
  {
    "text": "let's say I create a list of Highly influential individuals where it contains two members so we have Barack",
    "start": "2133960",
    "end": "2139420"
  },
  {
    "text": "Obama and myself it's a good subset of of individuals",
    "start": "2139420",
    "end": "2145900"
  },
  {
    "text": "and every time one of us tweets then it will appear over here in Reverse chronological order so it's like merging",
    "start": "2145900",
    "end": "2152380"
  },
  {
    "text": "the profile timeline of multiple people all right so he tweeted about something it's added then I tweets about something",
    "start": "2152380",
    "end": "2158440"
  },
  {
    "text": "it's added great we can also add new members to the to the list right so we",
    "start": "2158440",
    "end": "2163720"
  },
  {
    "text": "can say now we want to also add Elon Musk of course very influential so rip added some one of his tweets was between",
    "start": "2163720",
    "end": "2170680"
  },
  {
    "text": "hours so it goes somewhere in the middle and of course we can add followers Etc",
    "start": "2170680",
    "end": "2176800"
  },
  {
    "text": "so so we have a shared view capillary let's call the entire thing a list timeline we'll call the tweets and",
    "start": "2176800",
    "end": "2183160"
  },
  {
    "text": "reverse chronological order the timeline we'll call each one of the entries inside a timeline entry and inside we'll",
    "start": "2183160",
    "end": "2189040"
  },
  {
    "text": "have a tweet let's say we have this wrapper because we also want to add put tweet ads or whatever right so we can",
    "start": "2189040",
    "end": "2194740"
  },
  {
    "text": "we can differentiate between the various types so",
    "start": "2194740",
    "end": "2200859"
  },
  {
    "text": "Let's uh let's see if you were listening welcome to the game show entity or value",
    "start": "2200859",
    "end": "2206619"
  },
  {
    "text": "object so the Tweet now we're modeling our domain",
    "start": "2206619",
    "end": "2213280"
  },
  {
    "text": "so the end should the Tweet be modeled as an entity",
    "start": "2213280",
    "end": "2220119"
  },
  {
    "text": "or a value object who thinks entity raise your hand",
    "start": "2220119",
    "end": "2225599"
  },
  {
    "text": "okay who thinks the value object raise your hand okay so we should probably model the",
    "start": "2226540",
    "end": "2232839"
  },
  {
    "text": "Tweet as an entity why because if we have the exact same tweet",
    "start": "2232839",
    "end": "2238180"
  },
  {
    "text": "we still want to treat it as we want to treat it as different tweets and not the",
    "start": "2238180",
    "end": "2243520"
  },
  {
    "text": "same tweet right so same values doesn't mean same tweet another example we have the entire list",
    "start": "2243520",
    "end": "2248740"
  },
  {
    "text": "timeline should this be modeled as an entity or a value object who thinks entity",
    "start": "2248740",
    "end": "2255900"
  },
  {
    "text": "who thinks value object this should also be modeled as an entity",
    "start": "2256720",
    "end": "2263680"
  },
  {
    "text": "why because this is a list that as we can all expect is going to blow up once",
    "start": "2263680",
    "end": "2268780"
  },
  {
    "text": "after this talk I'm sure it's going to go to the hundreds of thousands of followers so if we have two list timelines and",
    "start": "2268780",
    "end": "2276760"
  },
  {
    "text": "it's with the same ID but because of some race condition one has zero followers the other one has one if we're",
    "start": "2276760",
    "end": "2282460"
  },
  {
    "text": "looking at them in memory we're still talking about the exact same list right it's not different lists just because one of the values inside is different",
    "start": "2282460",
    "end": "2287619"
  },
  {
    "text": "okay of course we can also add members the tweets one can contain a new tweet so this should probably also be modeled",
    "start": "2287619",
    "end": "2292839"
  },
  {
    "text": "as an entity all right this brings us to Aggregates",
    "start": "2292839",
    "end": "2298000"
  },
  {
    "text": "so entities and value objects great those are the two most basic building blocks in tactical design the next thing",
    "start": "2298000",
    "end": "2305619"
  },
  {
    "text": "is Aggregates so for this let's understand the problem so we have again the list timeline and in",
    "start": "2305619",
    "end": "2313060"
  },
  {
    "text": "some point in time Eric Ivan's the one who coined the term domain driven design comes to us and said this is what the",
    "start": "2313060",
    "end": "2320500"
  },
  {
    "text": "list looks like so we have three members me Barack Obama and Elon Musk",
    "start": "2320500",
    "end": "2327040"
  },
  {
    "text": "we want to add Elon Musk again should we allow it no right because he's already part of",
    "start": "2327040",
    "end": "2332980"
  },
  {
    "text": "the list so we probably shouldn't allow it again but that's just one example we'll probably have many permutations",
    "start": "2332980",
    "end": "2338260"
  },
  {
    "text": "especially in such a highly requested list of of subset of people so we'll",
    "start": "2338260",
    "end": "2345099"
  },
  {
    "text": "have many permutations in many different points in time another question is how do we make sure",
    "start": "2345099",
    "end": "2350859"
  },
  {
    "text": "that it's always in a consistent state so the definition of an aggregate is one",
    "start": "2350859",
    "end": "2356079"
  },
  {
    "text": "or more domain models that always need to stay consistent as a whole so we have",
    "start": "2356079",
    "end": "2361180"
  },
  {
    "text": "for example the list timeline aggregate it's the responsibility of the list timeline Aggregates to make sure that",
    "start": "2361180",
    "end": "2367300"
  },
  {
    "text": "the list timeline is always in a valid State not adding the same member twice not adding the same follower twice not having the same tweet twice inside right",
    "start": "2367300",
    "end": "2374740"
  },
  {
    "text": "all these various constraints and variants that we want to enforce",
    "start": "2374740",
    "end": "2381280"
  },
  {
    "text": "um what's important to say about aggregate is that in the database",
    "start": "2381280",
    "end": "2388300"
  },
  {
    "text": "so it's also consistency boundary it's like we said it needs to stay consistent",
    "start": "2388300",
    "end": "2393700"
  },
  {
    "text": "as a whole but it's also a consistent and a transactional boundary meaning that when we write it to the database we",
    "start": "2393700",
    "end": "2399880"
  },
  {
    "text": "want to write the entire aggregate as a whole so if we imagine the data sitting somewhere in the database right let's say a relationship relational database",
    "start": "2399880",
    "end": "2406000"
  },
  {
    "text": "then we write the database we replaced everything that was there before and we also when we read it",
    "start": "2406000",
    "end": "2412780"
  },
  {
    "text": "if we read it in order to change it and write it back then we read the entire thing make changes write it back as a",
    "start": "2412780",
    "end": "2418060"
  },
  {
    "text": "whole and what's important is that within the database we won't have any foreign keys or any relationships",
    "start": "2418060",
    "end": "2424000"
  },
  {
    "text": "between this aggregate to other records or or rows or columns in the database",
    "start": "2424000",
    "end": "2429400"
  },
  {
    "text": "because we don't want another aggregate to have changes and that will certainly",
    "start": "2429400",
    "end": "2434920"
  },
  {
    "text": "affect our database behind the scenes right because we affected our lines okay so that's something very important",
    "start": "2434920",
    "end": "2441040"
  },
  {
    "text": "to notice and sometimes is overlooked and this makes sense right so now we have this Atomic unit that we know is",
    "start": "2441040",
    "end": "2447400"
  },
  {
    "text": "always in a valid State because we read it to the database no one's touching it other than us we read it as a whole we make changes whatever right so great",
    "start": "2447400",
    "end": "2456180"
  },
  {
    "text": "The Entity that is the root of the ad group so each each one",
    "start": "2457660",
    "end": "2464200"
  },
  {
    "text": "each one of the Aggregates is has an entity root right which is the root of the entire entity so it's called the",
    "start": "2464200",
    "end": "2470320"
  },
  {
    "text": "aggregate route so the in this case the list timeline aggregate or entity is not",
    "start": "2470320",
    "end": "2477400"
  },
  {
    "text": "just an entity but it's also the accurate root and the aggregate is that entity with everything contained inside recursively",
    "start": "2477400",
    "end": "2484920"
  },
  {
    "text": "then there are a few other technical patterns like services for common logic repositories for",
    "start": "2485200",
    "end": "2490660"
  },
  {
    "text": "fetching Aggregates from the database factories for creating complex objects and modules which isn't shown over here",
    "start": "2490660",
    "end": "2496839"
  },
  {
    "text": "but we'll see when we talk about the folder structure where this comes into play so we have the timeline subdomain and we",
    "start": "2496839",
    "end": "2505060"
  },
  {
    "text": "did process modeling for key processes in our system and we came up with all these various entities right so we have",
    "start": "2505060",
    "end": "2510579"
  },
  {
    "text": "the timeline the list timeline and many many others right we can imagine Also let's say we have the advertisement and",
    "start": "2510579",
    "end": "2517000"
  },
  {
    "text": "other things that aren't shown over here we have many now the question is",
    "start": "2517000",
    "end": "2522579"
  },
  {
    "text": "how do we break it up following into the various tactical patterns",
    "start": "2522579",
    "end": "2528040"
  },
  {
    "text": "in a way that makes sense so like we said how do we decide which one is an algorithm which entities over here are",
    "start": "2528040",
    "end": "2534700"
  },
  {
    "text": "contained within Aggregates how do we build this in a way where we have Atomic units that make sense with one another",
    "start": "2534700",
    "end": "2541720"
  },
  {
    "text": "give me the answer let's look at an example this is another game show it's called yay or nay",
    "start": "2541720",
    "end": "2548740"
  },
  {
    "text": "so because it's really hard for me to see then we'll change the format instead of just saying raising your hand you can",
    "start": "2548740",
    "end": "2555339"
  },
  {
    "text": "raise your hand and say yay raise your hand say nay okay so let's go over this example",
    "start": "2555339",
    "end": "2561220"
  },
  {
    "text": "and in the end we'll ask ourselves yay or nay so here's the just the data visualizing",
    "start": "2561220",
    "end": "2567280"
  },
  {
    "text": "Json okay so it's a language agnostic but you can imagine the object behind the scenes in whatever language that",
    "start": "2567280",
    "end": "2572680"
  },
  {
    "text": "you're programming so what we have is the following so we have the name then we have the author of the list and the details so the ID this",
    "start": "2572680",
    "end": "2580119"
  },
  {
    "text": "over here is a entity that's contained inside the aggregate and we have the name the photo the handle whatever",
    "start": "2580119",
    "end": "2585940"
  },
  {
    "text": "next we have the list of the members so over here this contains the member entity inside right the list timeline",
    "start": "2585940",
    "end": "2593200"
  },
  {
    "text": "aggregate contains the member entity inside or a list of member entities and we have them underneath we see we have",
    "start": "2593200",
    "end": "2598240"
  },
  {
    "text": "followers so if we had a thousand followers then they would sit 100 underneath each other",
    "start": "2598240",
    "end": "2604359"
  },
  {
    "text": "and for the timelines we have the timeline then the entries and then each one of the entries so we have over here the timeline entry entity that has the",
    "start": "2604359",
    "end": "2612460"
  },
  {
    "text": "idea of one the type is tweet and then it has the Tweet entity",
    "start": "2612460",
    "end": "2617619"
  },
  {
    "text": "contained inside that entity where it has them ID then it has the author of the Tweet the content the media the",
    "start": "2617619",
    "end": "2623619"
  },
  {
    "text": "interactions the tags that we talked about before perhaps is also part of that right",
    "start": "2623619",
    "end": "2629560"
  },
  {
    "text": "great and the same thing for the other one yay or nay",
    "start": "2629560",
    "end": "2636579"
  },
  {
    "text": "who thinks yay raise your hand say hey okay",
    "start": "2636579",
    "end": "2643119"
  },
  {
    "text": "who thinks nay raise your hand say nay net great okay so most of you said nay",
    "start": "2643119",
    "end": "2648700"
  },
  {
    "text": "and nay is the correct answer and of course this is something we want to avoid okay so this is like a one God",
    "start": "2648700",
    "end": "2653859"
  },
  {
    "text": "aggregate to rule them all and this is something we want to avoid why because you can imagine",
    "start": "2653859",
    "end": "2661599"
  },
  {
    "text": "the latency that we'll have when we need to pass all this data over the wire every time we want to make a change",
    "start": "2661599",
    "end": "2666880"
  },
  {
    "text": "right we don't want to do that we don't want the bird to sweat also the throughput right will cost us more and",
    "start": "2666880",
    "end": "2673240"
  },
  {
    "text": "it raises a chance that we'll have race conditions so we have two followers",
    "start": "2673240",
    "end": "2679599"
  },
  {
    "text": "following at the exact same time like we said many people are going to follow this specific subset of individuals",
    "start": "2679599",
    "end": "2685720"
  },
  {
    "text": "we have two followers coming in the same time now we read the entire thing we made that change",
    "start": "2685720",
    "end": "2691000"
  },
  {
    "text": "now we have a race condition we'll need to fail one of the requests right problematic we don't want that and also",
    "start": "2691000",
    "end": "2696339"
  },
  {
    "text": "when someone follows this list we don't want to have to load from the database old",
    "start": "2696339",
    "end": "2702700"
  },
  {
    "text": "tweets I mean who cares right it's not part of it so that's not good what we actually want",
    "start": "2702700",
    "end": "2708400"
  },
  {
    "text": "to do is we want as smaller algorithm as possible right this makes sense we want smaller atomic units that have no effect",
    "start": "2708400",
    "end": "2716140"
  },
  {
    "text": "on one another when we make changes to them then it doesn't change anything else and we know we're safe",
    "start": "2716140",
    "end": "2722319"
  },
  {
    "text": "let's do another round of yay your name so here we have each one of the Aggregates defined as small as possible",
    "start": "2722319",
    "end": "2728140"
  },
  {
    "text": "so here we have the list timeline defined as an algorithm here it has all",
    "start": "2728140",
    "end": "2733359"
  },
  {
    "text": "the the minimum amount of data that it needs so the name then the ID of the author and the author itself is also an",
    "start": "2733359",
    "end": "2739480"
  },
  {
    "text": "aggregate root now so before it was an entity now it's not only an entity but it's an aggregate root",
    "start": "2739480",
    "end": "2745000"
  },
  {
    "text": "and we're holding only the ID of that entity within the list timeline accurate",
    "start": "2745000",
    "end": "2750819"
  },
  {
    "text": "and same goes for the rest so for the entry IDs for example I put here what it would look like so we have the entry",
    "start": "2750819",
    "end": "2756099"
  },
  {
    "text": "aggregate that also has an ID it's now the aggregate root right and inside it contains the list ID that",
    "start": "2756099",
    "end": "2765760"
  },
  {
    "text": "it belongs to right because we still need some correlation between them it has the Tweet ID which is also in",
    "start": "2765760",
    "end": "2771460"
  },
  {
    "text": "aggregate and that's it who thinks yay raise your hand say yay",
    "start": "2771460",
    "end": "2778359"
  },
  {
    "text": "okay I hear some more years who thinks nay raise your hand and say yeah",
    "start": "2778359",
    "end": "2784380"
  },
  {
    "text": "so the correct answer is who thinks they know the answer and",
    "start": "2784660",
    "end": "2789700"
  },
  {
    "text": "wants to yes Elon he's gonna tweet about it I'll add him",
    "start": "2789700",
    "end": "2795280"
  },
  {
    "text": "to the members let's see what he says in variance I guess the only variance is the correct answer like we said we want",
    "start": "2795280",
    "end": "2801520"
  },
  {
    "text": "to make sure that the list timeline aggregate is always in a valid state",
    "start": "2801520",
    "end": "2807760"
  },
  {
    "text": "we can't enforce that if if we're looking at the entry IDs for",
    "start": "2807760",
    "end": "2812800"
  },
  {
    "text": "example so we can enforce for example the same member doesn't come isn't isn't twice in the list because we could just check the",
    "start": "2812800",
    "end": "2818920"
  },
  {
    "text": "ID right the ID for each user is the unique great the idea is down in the list perfect but if we have two",
    "start": "2818920",
    "end": "2824500"
  },
  {
    "text": "completely different lists where Elon Musk is a member in both of them then",
    "start": "2824500",
    "end": "2829540"
  },
  {
    "text": "we'll have two separate and entries with two different IDs that both contain the",
    "start": "2829540",
    "end": "2835540"
  },
  {
    "text": "underlying same tweet ID the list timeline aggregate can't enforce the invariance of having the",
    "start": "2835540",
    "end": "2841900"
  },
  {
    "text": "same entry ID twice they can't make sure that that doesn't happen because it doesn't have enough data over here right",
    "start": "2841900",
    "end": "2848020"
  },
  {
    "text": "so this isn't good what we would actually want to do is we would want to merge the timeline entry into the",
    "start": "2848020",
    "end": "2854319"
  },
  {
    "text": "timeline aggregate so it's contained inside like so okay so now it no longer needs the list timeline ID because it",
    "start": "2854319",
    "end": "2862420"
  },
  {
    "text": "it's already part of it so it doesn't need that for correlation and now we can enforce right it has a tweet ID it's here twice the same tweet",
    "start": "2862420",
    "end": "2869500"
  },
  {
    "text": "you can make sure that this never happens so modeling a domain layer is a",
    "start": "2869500",
    "end": "2876040"
  },
  {
    "text": "not an easy problem and I always go back and forth with many different like combinations or",
    "start": "2876040",
    "end": "2883180"
  },
  {
    "text": "permutations but here's my opinionated step by step because there it really",
    "start": "2883180",
    "end": "2890020"
  },
  {
    "text": "isn't a step by step today so the first stage is like we said process modeling we have all the various",
    "start": "2890020",
    "end": "2895300"
  },
  {
    "text": "entities the the value objects we know what we're facing then we want to see the relationships that they have with",
    "start": "2895300",
    "end": "2901359"
  },
  {
    "text": "one another so we have a one-to-man relationship between the list timeline and the lift entry right because we know",
    "start": "2901359",
    "end": "2909220"
  },
  {
    "text": "we have many list timeline entries within one list timeline so we have all this mapped out now what we want is we",
    "start": "2909220",
    "end": "2916119"
  },
  {
    "text": "want to Define each one of the entities as an aggregate okay so value object is",
    "start": "2916119",
    "end": "2921760"
  },
  {
    "text": "always part of some entity so first thing we want to do is let's say let's have each one of them as the smallest",
    "start": "2921760",
    "end": "2927460"
  },
  {
    "text": "atomic units possible yeah we did that but",
    "start": "2927460",
    "end": "2932680"
  },
  {
    "text": "it's not it doesn't always work like we saw before so the next step is to merge Aggregates when there are constraints",
    "start": "2932680",
    "end": "2940060"
  },
  {
    "text": "so one of the constraints that we already looked at is that we need to enforce the invariance right so the",
    "start": "2940060",
    "end": "2945339"
  },
  {
    "text": "first one is invariance we need to enforce something it doesn't make sense without it so if we have a dinner and reservations it makes sense that the",
    "start": "2945339",
    "end": "2951520"
  },
  {
    "text": "reservations can be in aggregate we need to fold it into the dinner aggregate so",
    "start": "2951520",
    "end": "2957940"
  },
  {
    "text": "it can make sure that there isn't more guests than the maximum allowance",
    "start": "2957940",
    "end": "2963099"
  },
  {
    "text": "and the next type is eventual consistency so like we said these are",
    "start": "2963099",
    "end": "2969099"
  },
  {
    "text": "Atomic units in the database in our system changes won't be changes across",
    "start": "2969099",
    "end": "2976720"
  },
  {
    "text": "Aggregates are only eventual consistent so if we add a new member to the list so",
    "start": "2976720",
    "end": "2981760"
  },
  {
    "text": "over here we have a member that isn't part of the list right so we'll have we'll create the member then we'll have",
    "start": "2981760",
    "end": "2987460"
  },
  {
    "text": "some member created domain event right we looked at the Domain events before this is already going back to the",
    "start": "2987460",
    "end": "2993640"
  },
  {
    "text": "process modeling so once you're familiar with this during process modeling you can already imagine what the code the underlying code will look like so we",
    "start": "2993640",
    "end": "3000300"
  },
  {
    "text": "have the member creative domain event then there'll be some Handler listening to this event we'll fetch the Aggregates from the database add the member to the",
    "start": "3000300",
    "end": "3007680"
  },
  {
    "text": "list and of course less chance of race condition because everything is much smaller everything is faster",
    "start": "3007680",
    "end": "3013260"
  },
  {
    "text": "and worst case we just we have a race condition great we'll handle that request again and then we can add them",
    "start": "3013260",
    "end": "3019440"
  },
  {
    "text": "right but it's only a dental consistent so sometimes we can't tolerate the eventual consistency so we don't",
    "start": "3019440",
    "end": "3026460"
  },
  {
    "text": "have a choice but to follow them inside so if we can't tolerate the eventual consistency that's",
    "start": "3026460",
    "end": "3033240"
  },
  {
    "text": "another constraint and we merge them together so what we did in tactical design is",
    "start": "3033240",
    "end": "3042119"
  },
  {
    "text": "taking the domain each one of the domains breaking them up into aggregates",
    "start": "3042119",
    "end": "3048660"
  },
  {
    "text": "which internally are entities and value objects and we didn't talk about Services repositories and factories much",
    "start": "3048660",
    "end": "3054540"
  },
  {
    "text": "but we will see in the folder structure in a minute where it comes into play",
    "start": "3054540",
    "end": "3060000"
  },
  {
    "text": "okay so we did strategic design like we said this breaks it up into smaller subdomains then we did tactical design",
    "start": "3060000",
    "end": "3065579"
  },
  {
    "text": "where we broke up each one of the subdomains we looked specifically at the Timeline subdomain but",
    "start": "3065579",
    "end": "3072540"
  },
  {
    "text": "as you can imagine each one of the other subdomains will have its own entities its own terminology and terms whatever",
    "start": "3072540",
    "end": "3077579"
  },
  {
    "text": "so in the advertising sub domain we can imagine that we'll have terms or domain",
    "start": "3077579",
    "end": "3082680"
  },
  {
    "text": "models such as campaign sponsor Trends things like that so even though we didn't go into each",
    "start": "3082680",
    "end": "3089160"
  },
  {
    "text": "one of that I do want you to have the tools to imagine what this would look like if you would go down the road of",
    "start": "3089160",
    "end": "3094800"
  },
  {
    "text": "implementing what we talked about today okay Queen architecture on time so",
    "start": "3094800",
    "end": "3102180"
  },
  {
    "text": "clean architecture we have each one of our domains right these are web services let's say and",
    "start": "3102180",
    "end": "3109800"
  },
  {
    "text": "they need to have interaction interactions with one another how do we actually implement this in a way where",
    "start": "3109800",
    "end": "3116640"
  },
  {
    "text": "it's both testable we want to create a system that will thrive in the long run right I mean Elon asked he's expecting",
    "start": "3116640",
    "end": "3124020"
  },
  {
    "text": "from us so we want to do that so the domain layer",
    "start": "3124020",
    "end": "3129780"
  },
  {
    "text": "all we talked about the Aggregates up until now we can imagine we modeled them we have the domain models the basic",
    "start": "3129780",
    "end": "3135480"
  },
  {
    "text": "c-sharp Java typescript whatever objects that you have they sit in the domain layer so in the domain layer we have the",
    "start": "3135480",
    "end": "3143460"
  },
  {
    "text": "Aggregates this doesn't have to be a project it can also be like a folder whatever it's a logical",
    "start": "3143460",
    "end": "3150240"
  },
  {
    "text": "boundary it should in the end I'll talk about maybe okay so we have the address inside",
    "start": "3150240",
    "end": "3155819"
  },
  {
    "text": "the domain layer then we have that presentation layer the presentation layer is how we speak with",
    "start": "3155819",
    "end": "3162119"
  },
  {
    "text": "the outside world so in our case because we're building a web service let's imagine that we're",
    "start": "3162119",
    "end": "3168480"
  },
  {
    "text": "using asp.net or rest in Json so that's where we'll have the controllers for interacting with the outer world like we",
    "start": "3168480",
    "end": "3175079"
  },
  {
    "text": "talked about before with the anti-corruption layer so the responsibility of the presentation is to",
    "start": "3175079",
    "end": "3181020"
  },
  {
    "text": "take the request as it comes off the wire and convert it to the internal language that we speak within our system",
    "start": "3181020",
    "end": "3186900"
  },
  {
    "text": "okay now the motivation behind this is that currently we're using",
    "start": "3186900",
    "end": "3192920"
  },
  {
    "text": "but we were in a great talk this morning about grpc and we want to replace it with grpc so we should have the",
    "start": "3193460",
    "end": "3200400"
  },
  {
    "text": "flexibility to change the underlying technology or framework that we're using so that all we need to change is the",
    "start": "3200400",
    "end": "3206900"
  },
  {
    "text": "conversion from whatever however the data comes off the wire to",
    "start": "3206900",
    "end": "3212220"
  },
  {
    "text": "the internal language of our application okay now this is just because we're building services but this could also be the UI",
    "start": "3212220",
    "end": "3218700"
  },
  {
    "text": "right the presentation layer is the door to the outside world now after we converted the the data of",
    "start": "3218700",
    "end": "3227460"
  },
  {
    "text": "the wire to our internal the language then we call something in the application layer the application layer",
    "start": "3227460",
    "end": "3234000"
  },
  {
    "text": "is where we have our use cases and uh the application layer is basically",
    "start": "3234000",
    "end": "3242099"
  },
  {
    "text": "responsible for orchestrating the Aggregates so we have the various Aggregates someone needs to call if",
    "start": "3242099",
    "end": "3248040"
  },
  {
    "text": "we're adding a timeline entry to the timeline list algorithm someone needs to call the ad method right application",
    "start": "3248040",
    "end": "3254880"
  },
  {
    "text": "layer now the beauty about clean architecture is that the inner layers Define",
    "start": "3254880",
    "end": "3261119"
  },
  {
    "text": "interfaces so the application layer can define various interfaces and outer layers have",
    "start": "3261119",
    "end": "3266460"
  },
  {
    "text": "the implementation for the for those interfaces so in the infrastructure layer we would have all the various",
    "start": "3266460",
    "end": "3272099"
  },
  {
    "text": "infrastructure concerns like the database the authentication logic",
    "start": "3272099",
    "end": "3277380"
  },
  {
    "text": "perhaps we're talking to various other services so the web clients since the",
    "start": "3277380",
    "end": "3283980"
  },
  {
    "text": "interface definition sits in the inner layers in the application in the domain layers",
    "start": "3283980",
    "end": "3289319"
  },
  {
    "text": "we're able to switch the concrete implementation without carrying",
    "start": "3289319",
    "end": "3295800"
  },
  {
    "text": "about it from the inner layers so let's look in actual example like we said we want to see how we can convert this to",
    "start": "3295800",
    "end": "3302099"
  },
  {
    "text": "working called what the folders and files will look like so in the presentation layer again let's imagine",
    "start": "3302099",
    "end": "3307980"
  },
  {
    "text": "we're using rest in Json so we have the actual lift timeline",
    "start": "3307980",
    "end": "3313020"
  },
  {
    "text": "controller we're looking at the flow of fetching a rift timeline right so now",
    "start": "3313020",
    "end": "3318420"
  },
  {
    "text": "we're going to a list on Twitter we want to see the list timeline so this is the",
    "start": "3318420",
    "end": "3324300"
  },
  {
    "text": "how the folder structure for that can look or what I'm presenting so we have the list timer",
    "start": "3324300",
    "end": "3330660"
  },
  {
    "text": "controller that has the get endpoint whatever then we took all the various",
    "start": "3330660",
    "end": "3336260"
  },
  {
    "text": "API definition we put it in a contract folder because we want to be able to publish it as a nougat package or npm",
    "start": "3336260",
    "end": "3343440"
  },
  {
    "text": "package whatever have other clients consume it like we said the services are talking to one another so it makes sense that we want to have it defined in one",
    "start": "3343440",
    "end": "3350099"
  },
  {
    "text": "place version so clients can consume it instead of having to rewrite the models",
    "start": "3350099",
    "end": "3356040"
  },
  {
    "text": "again and the list timeline controller invokes the appropriate logic in the",
    "start": "3356040",
    "end": "3363359"
  },
  {
    "text": "application layer so here it's split following cqrs but if you're not familiar with stickers then you can",
    "start": "3363359",
    "end": "3368819"
  },
  {
    "text": "imagine like a get get list timeline method in a timeline service or whatever something like that",
    "start": "3368819",
    "end": "3375300"
  },
  {
    "text": "it's just the actual piece of logic then to fetch it from the database then the Handler over here what it does is it",
    "start": "3375300",
    "end": "3382319"
  },
  {
    "text": "uses some interface this is just a plane interface that has some get method",
    "start": "3382319",
    "end": "3388800"
  },
  {
    "text": "right that whatever the implementation is knows how to fetch it from the database so from the application point",
    "start": "3388800",
    "end": "3394200"
  },
  {
    "text": "of view it's simply using this interface the concrete instance can change it doesn't care from its point of view",
    "start": "3394200",
    "end": "3403079"
  },
  {
    "text": "then in the infrastructure layer we have the actual implementation of the",
    "start": "3403079",
    "end": "3408740"
  },
  {
    "text": "repository so here we have we see the DB context so we know okay it's EF core but",
    "start": "3408740",
    "end": "3413940"
  },
  {
    "text": "it can do whatever we want right and if we want to market for unit testing then we can if we want to put a a in-memory",
    "start": "3413940",
    "end": "3420599"
  },
  {
    "text": "DB whatever we can do whatever we want because it's just a plain old interface that's great for testing",
    "start": "3420599",
    "end": "3427859"
  },
  {
    "text": "and we can change also in the infrastructure layer so we want to switch to whatever the different database happens every day right so we",
    "start": "3427859",
    "end": "3435540"
  },
  {
    "text": "have the flexibility to do that of course some changes will have to leak",
    "start": "3435540",
    "end": "3440700"
  },
  {
    "text": "into the application layer so we'll have to change the interface in the application layer but it still gives us the loose coupling between them",
    "start": "3440700",
    "end": "3448200"
  },
  {
    "text": "finally the domain layer so here we have the actual aggregate in the way I'm presenting it then or and I would",
    "start": "3448200",
    "end": "3454859"
  },
  {
    "text": "suggest as well each one of the list timelines or each one of the Aggregates",
    "start": "3454859",
    "end": "3460619"
  },
  {
    "text": "gets its own folder and inside it has the entities and value objects that are",
    "start": "3460619",
    "end": "3466020"
  },
  {
    "text": "part of this aggregate so the list timeline is also an entity it's just a special entity it's also the the",
    "start": "3466020",
    "end": "3471660"
  },
  {
    "text": "aggregate route and I want you to notice the events folder so over there we have all the events",
    "start": "3471660",
    "end": "3477300"
  },
  {
    "text": "that occur like we said something happens in our system we raise some event handlers listen to this event and",
    "start": "3477300",
    "end": "3483900"
  },
  {
    "text": "make changes to other Aggregates appropriately okay so we talked about strategic design",
    "start": "3483900",
    "end": "3491460"
  },
  {
    "text": "big picture context map write sub-domains Etc tactical design breaking it up further",
    "start": "3491460",
    "end": "3497760"
  },
  {
    "text": "and finally clean architecture with the various layers I put over here Three",
    "start": "3497760",
    "end": "3503220"
  },
  {
    "text": "Links so one of them is for this presentation so if you want to zoom in on the various details then you can zoom",
    "start": "3503220",
    "end": "3509760"
  },
  {
    "text": "in advanced storing so everything we saw in this session about event storming was created in a free online tool that I",
    "start": "3509760",
    "end": "3515700"
  },
  {
    "text": "created for event storming I think it's the best tool available for online event",
    "start": "3515700",
    "end": "3520740"
  },
  {
    "text": "forming but of course I'm very objective and it's free it's private it's a figma community file so it's very",
    "start": "3520740",
    "end": "3525780"
  },
  {
    "text": "collaborative you can have hundreds of people working the same time and finally if you enjoyed this and you want to see more of this then there's the",
    "start": "3525780",
    "end": "3533660"
  },
  {
    "text": "rightmost QR code so that's it thank you",
    "start": "3533660",
    "end": "3539720"
  },
  {
    "text": "thanks",
    "start": "3541319",
    "end": "3543920"
  }
]