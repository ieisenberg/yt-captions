[
  {
    "text": "welcome everyone it's a little early here in porto today",
    "start": "3919",
    "end": "9920"
  },
  {
    "text": "but it is such a gorgeous day i have so much fun looking out across the bay it's such a gorgeous city",
    "start": "9920",
    "end": "17920"
  },
  {
    "text": "welcome to minimal apis with asp.net 6 we're going to live code everything upgrading a project from net5 to.net 6",
    "start": "19840",
    "end": "27760"
  },
  {
    "text": "and get to see a lot of c 10 features in addition to minimal apis here's the part where i tell you i am",
    "start": "27760",
    "end": "33760"
  },
  {
    "text": "definitely going to post the slides on my site tonight but in this talk there are no slides that's it",
    "start": "33760",
    "end": "40079"
  },
  {
    "text": "notepad but what's really cool is the code that we're going to build today is up online",
    "start": "40079",
    "end": "45600"
  },
  {
    "text": "on github right now so you can go to github.com robrich minimal apis asp.net 6.",
    "start": "45600",
    "end": "53120"
  },
  {
    "text": "um let's head to robrich.org and you can click on presentations here at the top",
    "start": "53120",
    "end": "58719"
  },
  {
    "text": "and here's minimal apis and so you can get to the code a lot easier robrich.org will get you straight there",
    "start": "58719",
    "end": "65280"
  },
  {
    "text": "while we're here on robrich.org let's click on about me and see some of the things that i've done recently i'm a",
    "start": "65280",
    "end": "70560"
  },
  {
    "text": "jetpack developer advocate if you're struggling to deploy your microservices to kubernetes i would love to learn from",
    "start": "70560",
    "end": "76000"
  },
  {
    "text": "you some of the other things that i've done i'm a microsoft mvp mct docker captain friend of redgate",
    "start": "76000",
    "end": "82159"
  },
  {
    "text": "azgive camp is really fun az give camp brings volunteer developers together with charities to build free software we",
    "start": "82159",
    "end": "88640"
  },
  {
    "text": "start building software friday after work sunday afternoon we deliver the completed software to charities sleep is",
    "start": "88640",
    "end": "94159"
  },
  {
    "text": "optional caffeine provided if you're in phoenix come join us for the next a-z gift camp or if you'd like",
    "start": "94159",
    "end": "99280"
  },
  {
    "text": "a gift camp here in porto or wherever you traveled from hit me up on email or twitter or see me here at the conference",
    "start": "99280",
    "end": "104880"
  },
  {
    "text": "and let's get a gift camp in your neighborhood too some of the other things that i've done pro microservices with net6 that was fun",
    "start": "104880",
    "end": "111759"
  },
  {
    "text": "i got to work with matt and sean on that book and so you can grab that and one of",
    "start": "111759",
    "end": "117040"
  },
  {
    "text": "the things i'm particularly proud of i replied to a.net rocks podcast episode they read my comments on the air and",
    "start": "117040",
    "end": "122479"
  },
  {
    "text": "they sent me a mug so there's my claim to fame my coveted.net rocksmug",
    "start": "122479",
    "end": "128879"
  },
  {
    "text": "so let's take a look through this project each of these folders are one of the steps that we'll go to today let's",
    "start": "128879",
    "end": "136239"
  },
  {
    "text": "start with this bare minimum project so i'm going to come in here i have one file",
    "start": "136239",
    "end": "142800"
  },
  {
    "text": "just a cs proj file let's open that up in vs code",
    "start": "142800",
    "end": "148319"
  },
  {
    "text": "and here's the cs proj file not that much to it you know it basically says",
    "start": "148720",
    "end": "153840"
  },
  {
    "text": "we're in.net 6. i'm going to create a new file i'll call this program.cs",
    "start": "153840",
    "end": "160640"
  },
  {
    "text": "and let's create a csharp10asp.net6 project",
    "start": "160640",
    "end": "166959"
  },
  {
    "text": "var builder equals web application",
    "start": "166959",
    "end": "173040"
  },
  {
    "text": "builder is it builder here's the part where i go reach into my",
    "start": "173760",
    "end": "178800"
  },
  {
    "text": "notes webapplication.createbuilder oh yes let's create that dot vs code folder web",
    "start": "178800",
    "end": "184959"
  },
  {
    "text": "application dot create builder and then i i'll say builder or var app",
    "start": "184959",
    "end": "193680"
  },
  {
    "text": "equals builder dot build app.run",
    "start": "193680",
    "end": "200159"
  },
  {
    "text": "and let's also say app.map get i will map the home page to this",
    "start": "200159",
    "end": "207519"
  },
  {
    "text": "function which will return a new object let's say message",
    "start": "207519",
    "end": "213680"
  },
  {
    "text": "equals hello world but hello world is a little",
    "start": "213680",
    "end": "218959"
  },
  {
    "text": "boring so let's also say",
    "start": "218959",
    "end": "224080"
  },
  {
    "text": "let's take in a string name and we'll make that optional",
    "start": "224720",
    "end": "231280"
  },
  {
    "text": "and we'll use that here so let's say",
    "start": "231280",
    "end": "236799"
  },
  {
    "text": "name or if you don't give me one world",
    "start": "236799",
    "end": "243519"
  },
  {
    "text": "okay four lines that's pretty cool let's come in here and let's say dot net",
    "start": "244879",
    "end": "251200"
  },
  {
    "text": "run and fire up our web server",
    "start": "251200",
    "end": "256400"
  },
  {
    "text": "now this will take just a minute to compile because of course my machine just woke up this morning um but now we've got a website let's go",
    "start": "256639",
    "end": "264400"
  },
  {
    "text": "to that website and we have our content",
    "start": "264400",
    "end": "270800"
  },
  {
    "text": "hello world now the cool part about this is that we can also do things like",
    "start": "270800",
    "end": "277040"
  },
  {
    "text": "let's say name equals ndc bordeaux",
    "start": "277040",
    "end": "283199"
  },
  {
    "text": "and now we say hello ndc porto if we fire up the chrome developer tools and take a look at the network let's refresh",
    "start": "283199",
    "end": "291120"
  },
  {
    "text": "this page we can see that we have the correct http status code is 200",
    "start": "291120",
    "end": "297520"
  },
  {
    "text": "we have application json we grabbed query strings we rendered content we",
    "start": "297520",
    "end": "303360"
  },
  {
    "text": "just built a entire asp.net website in",
    "start": "303360",
    "end": "308720"
  },
  {
    "text": "four lines of code that's pretty cool",
    "start": "309520",
    "end": "316560"
  },
  {
    "text": "but that's kind of a lot you know remember the visual fred thing where we're like but but that doesn't look",
    "start": "316560",
    "end": "322400"
  },
  {
    "text": "like the code that i write so that's definitely possible but let's",
    "start": "322400",
    "end": "328560"
  },
  {
    "text": "step back and take a look at the content that we've got now i'm going to start",
    "start": "328560",
    "end": "333759"
  },
  {
    "text": "with an asp.net 5 project here this asp.net 5 project let's fire it up",
    "start": "333759",
    "end": "341520"
  },
  {
    "text": "this uses c-sharp 9 asp.net 5 so this is",
    "start": "341520",
    "end": "346560"
  },
  {
    "text": "oh i do need to refresh my certificate that's cool",
    "start": "346560",
    "end": "353840"
  },
  {
    "text": "okay so now we've got let's close this",
    "start": "356000",
    "end": "363440"
  },
  {
    "text": "start that back up there we go so now we have this that's",
    "start": "364880",
    "end": "370319"
  },
  {
    "text": "oh i need to stop the other website when trying to run the other website",
    "start": "370319",
    "end": "376479"
  },
  {
    "text": "yes of course that port is already in use let's try that again",
    "start": "376479",
    "end": "381840"
  },
  {
    "text": "there we go so here's a website that we just built",
    "start": "384639",
    "end": "390800"
  },
  {
    "text": "now this is an asp.net 5 website but this uses some interesting things we have a home page or privacy page both of",
    "start": "390800",
    "end": "397919"
  },
  {
    "text": "these use mvc we also have razor pages here's an about page running razer pages",
    "start": "397919",
    "end": "403280"
  },
  {
    "text": "we also have a web api so here's some weather forecast details and of course",
    "start": "403280",
    "end": "408319"
  },
  {
    "text": "because we have a web api we have swagger in here open api so let's fire",
    "start": "408319",
    "end": "413759"
  },
  {
    "text": "that up and we can execute it and we get some weather information now that's pretty cool we have this",
    "start": "413759",
    "end": "420240"
  },
  {
    "text": "website that has all of these technologies running together how did we do that",
    "start": "420240",
    "end": "425520"
  },
  {
    "text": "well let's hit stop here and let's wander through it we have these controllers here's our mvc",
    "start": "425520",
    "end": "432720"
  },
  {
    "text": "controller and it's going to return a view and to rig that up here in startup.cs we said we want to add",
    "start": "432720",
    "end": "440319"
  },
  {
    "text": "controllers with views and down here we said we wanted to",
    "start": "440319",
    "end": "446479"
  },
  {
    "text": "map controller route given our default route but we also have razor pages here",
    "start": "446479",
    "end": "452240"
  },
  {
    "text": "here's our about page that's a razor page it's just a page how did we do that",
    "start": "452240",
    "end": "457360"
  },
  {
    "text": "here in startup.cs we said i want to add razer pages",
    "start": "457360",
    "end": "463680"
  },
  {
    "text": "they aren't mutually exclusive it's just the templates don't put them both in place",
    "start": "463680",
    "end": "468720"
  },
  {
    "text": "and so we have our razor pages here's our razor page master layout which is pretty cool our main layout",
    "start": "468720",
    "end": "475520"
  },
  {
    "text": "and we also have web api which in this case it's a controller so",
    "start": "475520",
    "end": "480560"
  },
  {
    "text": "we have our standard one that will go grab us five random weather pieces and",
    "start": "480560",
    "end": "485680"
  },
  {
    "text": "we did that because of course we uh not program in startup",
    "start": "485680",
    "end": "490960"
  },
  {
    "text": "we said add controllers now we did rig up swagger so here's the add swagger gen piece and the",
    "start": "490960",
    "end": "498560"
  },
  {
    "text": "use swagger and swagger ui so we have of the three paradigms inside of asp.net we",
    "start": "498560",
    "end": "504560"
  },
  {
    "text": "have mvc we have web api and we have razer pages they can all run simultaneously inside the same site if",
    "start": "504560",
    "end": "511919"
  },
  {
    "text": "we rig up those pieces inside of our request pipeline so now that we've got our net 5 app",
    "start": "511919",
    "end": "519760"
  },
  {
    "text": "let's move this to net 6. now i could definitely come in here to this and say properties but i'm just",
    "start": "519760",
    "end": "526640"
  },
  {
    "text": "going to dig into the file itself and let's change this from net5 to.net",
    "start": "526640",
    "end": "532839"
  },
  {
    "text": "6. we just upgraded our project asp.net six thanks for coming no i'm just kidding",
    "start": "532839",
    "end": "539760"
  },
  {
    "text": "so we just did that let's see if we have any new get package updates",
    "start": "539760",
    "end": "545360"
  },
  {
    "text": "yep it looks like we can update swashbuckles let's update that one",
    "start": "545360",
    "end": "550720"
  },
  {
    "text": "let's presume wi-fi works as expected",
    "start": "550720",
    "end": "554800"
  },
  {
    "text": "looks like that's gonna work yes so now we can fire our website up",
    "start": "555839",
    "end": "561519"
  },
  {
    "text": "and now we're running in asp.net 6. all we did was change the version from 5 to 6 and we'll probably see significant",
    "start": "561519",
    "end": "569040"
  },
  {
    "text": "performance improvements just because dotnet 6 is faster they did a lot of work with span of t",
    "start": "569040",
    "end": "576320"
  },
  {
    "text": "they did a lot of work with making this site optimized just to make the run time",
    "start": "576320",
    "end": "581680"
  },
  {
    "text": "faster so we've got our site now in asp.net 6. here's our mvc home and",
    "start": "581680",
    "end": "587519"
  },
  {
    "text": "privacy pages here's our razer pages about page here's our weather forecast",
    "start": "587519",
    "end": "592800"
  },
  {
    "text": "controller we've got some values so we just moved from net5 to.net 6.",
    "start": "592800",
    "end": "598640"
  },
  {
    "text": "and if that's the only part that you want to do you're going to see performance improvements and that's all",
    "start": "598640",
    "end": "604640"
  },
  {
    "text": "you need to do that's really cool but of course we want to go a little bit",
    "start": "604640",
    "end": "610399"
  },
  {
    "text": "farther so we just upgraded from",
    "start": "610399",
    "end": "615519"
  },
  {
    "text": "net5 to.net 6. now let's take a look at namespaces",
    "start": "616000",
    "end": "621519"
  },
  {
    "text": "new in c sharp 10 we can use file scoped namespaces now the old",
    "start": "621519",
    "end": "628000"
  },
  {
    "text": "syntax still works so if i have more than one namespace in a particular file i can do it this way",
    "start": "628000",
    "end": "635680"
  },
  {
    "text": "but i've indented four spaces for my class i've indented four spaces four",
    "start": "635680",
    "end": "640880"
  },
  {
    "text": "more spaces for my method i've indented four more spaces to start my method i'm at 12 spaces in and i haven't even done",
    "start": "640880",
    "end": "647600"
  },
  {
    "text": "anything can we remove some of the ceremony",
    "start": "647600",
    "end": "652800"
  },
  {
    "text": "let's do that now i love that refactoring in visual studio where it automatically does all",
    "start": "652800",
    "end": "658959"
  },
  {
    "text": "the things this is a file scoped namespace",
    "start": "658959",
    "end": "664320"
  },
  {
    "text": "now the cool part about this is this namespace now applies to the entire file now if i do have two pieces in my",
    "start": "664320",
    "end": "671120"
  },
  {
    "text": "website or in my um class file hey that was cool if i do have two",
    "start": "671120",
    "end": "676959"
  },
  {
    "text": "pieces inside my class file that need different name spaces then uh oh i'm",
    "start": "676959",
    "end": "682240"
  },
  {
    "text": "actually gonna throw that because it's gonna fall down again if i do have two different sections in",
    "start": "682240",
    "end": "687760"
  },
  {
    "text": "my file that need different name spaces i can use the old syntax because this applies to the entire file but in this",
    "start": "687760",
    "end": "694560"
  },
  {
    "text": "case the entire file is one namespace so let's do that",
    "start": "694560",
    "end": "700160"
  },
  {
    "text": "let's come in here as well and update this one and we'll come in here there's a c sharp",
    "start": "700160",
    "end": "706720"
  },
  {
    "text": "file there and let's come in here we've got some models",
    "start": "706720",
    "end": "712079"
  },
  {
    "text": "let's do that as well insideprogram.cs let's do that",
    "start": "712079",
    "end": "719560"
  },
  {
    "text": "startup.cs let's do that one weather forecast let's do that one",
    "start": "719560",
    "end": "726240"
  },
  {
    "text": "save all those let's go find namespace",
    "start": "726240",
    "end": "732639"
  },
  {
    "text": "and it looks like we did it we moved all of those things to the namespaces",
    "start": "732639",
    "end": "739440"
  },
  {
    "text": "any questions so far on moving from.net5.net six or um file scope name spaces",
    "start": "739440",
    "end": "746720"
  },
  {
    "text": "excellent now we can build this and if we just build then it's gonna",
    "start": "751040",
    "end": "757120"
  },
  {
    "text": "do just fine and now we have only eight indents into our method",
    "start": "757120",
    "end": "763440"
  },
  {
    "text": "so you know here's our methods and eight spaces that's pretty cool",
    "start": "763440",
    "end": "769120"
  },
  {
    "text": "nice improvement there so we were able to use global usings and",
    "start": "769120",
    "end": "776240"
  },
  {
    "text": "that's this section right here let's take a look next at implicit usings",
    "start": "776240",
    "end": "782399"
  },
  {
    "text": "so i'm going to come in here to my site and i'm going to say",
    "start": "782399",
    "end": "787440"
  },
  {
    "text": "implicit usings enable and i will indent that two spaces there",
    "start": "787440",
    "end": "794320"
  },
  {
    "text": "we go so we've now said there's a bunch of namespaces that",
    "start": "794320",
    "end": "799760"
  },
  {
    "text": "probably get pro added to every project now we have here for example a system",
    "start": "799760",
    "end": "808720"
  },
  {
    "text": "in here we have link and threading tasks and a bunch of other",
    "start": "808720",
    "end": "815360"
  },
  {
    "text": "namespaces that will probably include in every file in an asp.net project",
    "start": "815360",
    "end": "823440"
  },
  {
    "text": "so what we get with implicit usings is because we're looking at",
    "start": "823440",
    "end": "828560"
  },
  {
    "text": "this particular sdk then we can probably make some assumptions",
    "start": "828560",
    "end": "833600"
  },
  {
    "text": "like you probably want system.link system threading task in all",
    "start": "833600",
    "end": "838639"
  },
  {
    "text": "of the places let's build this again and then go wander into our project let's go",
    "start": "838639",
    "end": "844480"
  },
  {
    "text": "look at the obj folder into debug into.net 6 and here we have",
    "start": "844480",
    "end": "852720"
  },
  {
    "text": "site.globalusings.js because i turned on global usings all of",
    "start": "853920",
    "end": "862000"
  },
  {
    "text": "these usings got added automatically oh i jumped ahead of step",
    "start": "862000",
    "end": "869519"
  },
  {
    "text": "let's centralize our usings and then we'll come back to global usings so i'm going to take that out for",
    "start": "869519",
    "end": "876560"
  },
  {
    "text": "a second i'm going to come in here to program.cs and we have using system we probably put",
    "start": "876560",
    "end": "883519"
  },
  {
    "text": "that at the top of every file let's say i want to do that once for my entire",
    "start": "883519",
    "end": "889360"
  },
  {
    "text": "project i can say global using system",
    "start": "889360",
    "end": "894720"
  },
  {
    "text": "now the cool part is because i've said global here it's going to apply to every",
    "start": "894720",
    "end": "899920"
  },
  {
    "text": "file in my project so i no longer need this using system statement at the top",
    "start": "899920",
    "end": "905680"
  },
  {
    "text": "of this file and it will still compile correctly",
    "start": "905680",
    "end": "910959"
  },
  {
    "text": "this global using says that we can",
    "start": "910959",
    "end": "916399"
  },
  {
    "text": "centralize our usings in one place so there is no official convention for",
    "start": "916399",
    "end": "921440"
  },
  {
    "text": "this but i'm going to add a new file and i'm going to call this",
    "start": "921440",
    "end": "928480"
  },
  {
    "text": "global dot cs it's a class",
    "start": "928959",
    "end": "935759"
  },
  {
    "text": "now here in global cs i'm just going to take all of my usings",
    "start": "935759",
    "end": "941120"
  },
  {
    "text": "and move them into one place so let's go grab all these usings and we'll put them",
    "start": "941120",
    "end": "947199"
  },
  {
    "text": "here and i'll go grab all these usings and i'll put them here",
    "start": "947199",
    "end": "954880"
  },
  {
    "text": "and i'll go grab all these usings and these usings",
    "start": "954880",
    "end": "961680"
  },
  {
    "text": "and i already got those ones let's go grab",
    "start": "961680",
    "end": "968240"
  },
  {
    "text": "these usings and we'll go grab these usings",
    "start": "968240",
    "end": "975440"
  },
  {
    "text": "and i'm going to remove this one global thing and let's do a regular expression",
    "start": "975440",
    "end": "981519"
  },
  {
    "text": "i'm going to search for the beginning of the line and replace that with",
    "start": "981519",
    "end": "986399"
  },
  {
    "text": "global so now we've moved all of our using",
    "start": "987519",
    "end": "992800"
  },
  {
    "text": "statements into this one file now we do have some duplicates i love the green squiggles here inside visual",
    "start": "992800",
    "end": "999040"
  },
  {
    "text": "studio that allow me to say hey let's remove all of those duplicates",
    "start": "999040",
    "end": "1004720"
  },
  {
    "text": "here's some more duplicates right there here's some duplicates there",
    "start": "1004720",
    "end": "1012000"
  },
  {
    "text": "there's some more duplicates okay so now we have all of our using statements in",
    "start": "1012000",
    "end": "1017199"
  },
  {
    "text": "one spot let's go find using and make sure i got them all",
    "start": "1017199",
    "end": "1024240"
  },
  {
    "text": "yes okay so now because we have all of our using statements here in one file then",
    "start": "1024240",
    "end": "1031760"
  },
  {
    "text": "at the top of say startup.cs i don't need to fight over",
    "start": "1031760",
    "end": "1037038"
  },
  {
    "text": "adding the using or removing it should you you know all the merge conflicts that we",
    "start": "1037039",
    "end": "1042240"
  },
  {
    "text": "get trying to get the top of the file to exactly match all of that is gone we moved that to one",
    "start": "1042240",
    "end": "1048079"
  },
  {
    "text": "file now the cool part here is if we needed to",
    "start": "1048079",
    "end": "1053200"
  },
  {
    "text": "specify a specific using that may only apply to one file we can definitely use",
    "start": "1053200",
    "end": "1058880"
  },
  {
    "text": "the other syntax without the global in front of it and that might be helpful if we need to disambiguate something that",
    "start": "1058880",
    "end": "1065039"
  },
  {
    "text": "you know maybe we have two classes that have the same name and different name spaces we can do that inside of a",
    "start": "1065039",
    "end": "1071919"
  },
  {
    "text": "particular file but i love that i've kind of centralized these usings into one spot here",
    "start": "1071919",
    "end": "1079440"
  },
  {
    "text": "but there are some redundancies here like you know system system link system threading task",
    "start": "1079440",
    "end": "1086160"
  },
  {
    "text": "we might have those in every project everywhere so returning back to our",
    "start": "1086160",
    "end": "1093039"
  },
  {
    "text": "thing we can say let's come into site.cs proj and let's enable implicit usings",
    "start": "1093039",
    "end": "1101679"
  },
  {
    "text": "and if we rebuild this project and wander in there here's global",
    "start": "1101679",
    "end": "1106720"
  },
  {
    "text": "globalusings.g.c.s now this file is automatically generated",
    "start": "1106720",
    "end": "1112960"
  },
  {
    "text": "for us based on our sdk choice and it lists all of the using statements",
    "start": "1112960",
    "end": "1118480"
  },
  {
    "text": "that we just get by default which is excellent so i'm going to take all of these global",
    "start": "1118480",
    "end": "1125440"
  },
  {
    "text": "usings and i will temporarily put them at the top of this file",
    "start": "1125440",
    "end": "1130880"
  },
  {
    "text": "just so i get those green squiggles to tell me which ones are duplicated and now i can remove all of these",
    "start": "1130880",
    "end": "1138240"
  },
  {
    "text": "and i can remove all of these and now i'll pull this back out",
    "start": "1138240",
    "end": "1145200"
  },
  {
    "text": "and now we've simplified it down to just the using statements",
    "start": "1145200",
    "end": "1150640"
  },
  {
    "text": "that we need and our build still succeeds that's really cool all of the noise of",
    "start": "1150640",
    "end": "1156799"
  },
  {
    "text": "all those using statements just kind of faded away now if ever we have a need to add more",
    "start": "1156799",
    "end": "1163360"
  },
  {
    "text": "usings we can put them inside a file like this global.cs and now they're all there in one place",
    "start": "1163360",
    "end": "1169840"
  },
  {
    "text": "now we could definitely put this inside of a regular code file we don't need to centralize it global.cs isn't any magic",
    "start": "1169840",
    "end": "1176000"
  },
  {
    "text": "word it's just i chose to put it there any questions so far about using",
    "start": "1176000",
    "end": "1181039"
  },
  {
    "text": "statements and global usings cool well let's dive in um so we did",
    "start": "1181039",
    "end": "1189039"
  },
  {
    "text": "that one global usings implicit global use of things now let's take advantage of the",
    "start": "1189039",
    "end": "1195360"
  },
  {
    "text": "new builder so here in program.cs we have a create",
    "start": "1195360",
    "end": "1201520"
  },
  {
    "text": "host builder which is over here and then we have a dot a dot run",
    "start": "1201520",
    "end": "1206640"
  },
  {
    "text": "we have this startup file there's kind of a lot of layers of indirection if we're just",
    "start": "1206640",
    "end": "1213200"
  },
  {
    "text": "getting started with net and we want to pull in a new project we have a lot of",
    "start": "1213200",
    "end": "1220000"
  },
  {
    "text": "files so let's instead use this new builder",
    "start": "1220000",
    "end": "1225440"
  },
  {
    "text": "and so let's say var builder equals uh web application dot create builder",
    "start": "1225440",
    "end": "1235280"
  },
  {
    "text": "and then we can say builder dot build and that's var",
    "start": "1235280",
    "end": "1241440"
  },
  {
    "text": "app and we can say app.run now we haven't rigged up our request",
    "start": "1241440",
    "end": "1247360"
  },
  {
    "text": "pipeline yet all of that is inside startup.cs so let's go say",
    "start": "1247360",
    "end": "1254000"
  },
  {
    "text": "var startup equals new startup",
    "start": "1254000",
    "end": "1259280"
  },
  {
    "text": "and startup takes in this eye configuration so let's pass in a",
    "start": "1259360",
    "end": "1265280"
  },
  {
    "text": "builder dot configuration now we need to kick off our dependency",
    "start": "1265280",
    "end": "1271679"
  },
  {
    "text": "injection thing so let's say startup dot configure services",
    "start": "1271679",
    "end": "1277600"
  },
  {
    "text": "and that takes in a iservice collection",
    "start": "1277600",
    "end": "1282640"
  },
  {
    "text": "so let's say builder.services",
    "start": "1282640",
    "end": "1289240"
  },
  {
    "text": "now we still need to that's our setup",
    "start": "1289520",
    "end": "1294720"
  },
  {
    "text": "ioc now we need to still set up our request pipeline",
    "start": "1294720",
    "end": "1300960"
  },
  {
    "text": "so let's say uh startup.configure and that takes in our app good thing",
    "start": "1302799",
    "end": "1310240"
  },
  {
    "text": "we've got that right there an app.environment to pass in our environment and now we've got a website",
    "start": "1310240",
    "end": "1316400"
  },
  {
    "text": "ready to go now in this case we still have our content off in that startup.cs file we",
    "start": "1316400",
    "end": "1322720"
  },
  {
    "text": "could definitely do that but we can also take advantage of an interesting thing here for our",
    "start": "1322720",
    "end": "1329760"
  },
  {
    "text": "startup file only our program.cs where we don't have a",
    "start": "1329760",
    "end": "1336480"
  },
  {
    "text": "namespace we don't have a class we don't have a method all of that is kind of generated behind the scenes",
    "start": "1336559",
    "end": "1343440"
  },
  {
    "text": "now we do need a using statement here it looks like using site",
    "start": "1343440",
    "end": "1349360"
  },
  {
    "text": "so let's go back to our global.cs and say global using site",
    "start": "1349360",
    "end": "1355520"
  },
  {
    "text": "and now that will take care of this as well so if we like the startup.cs separation",
    "start": "1355520",
    "end": "1363360"
  },
  {
    "text": "we can definitely continue using that but i kind of want to flatten this out so i don't have this other section so",
    "start": "1363360",
    "end": "1370720"
  },
  {
    "text": "i'm going to take this and let's move that into place right here",
    "start": "1370720",
    "end": "1376320"
  },
  {
    "text": "now we have this services so let's swap that out with",
    "start": "1376320",
    "end": "1382640"
  },
  {
    "text": "builder.services grab that here and here and here there's",
    "start": "1382640",
    "end": "1388960"
  },
  {
    "text": "a way to separate to shrink this i think it's like that but i've gotten it wrong before so i'll just leave that",
    "start": "1388960",
    "end": "1395840"
  },
  {
    "text": "let's go back into startup and let's go grab the request pipeline details",
    "start": "1395840",
    "end": "1401440"
  },
  {
    "text": "and we can move that into place let's grab that",
    "start": "1401440",
    "end": "1407840"
  },
  {
    "text": "and set it right here and now because we're passing because",
    "start": "1407840",
    "end": "1415280"
  },
  {
    "text": "we're using this we can't use end we could definitely say something like var",
    "start": "1415280",
    "end": "1422559"
  },
  {
    "text": "var end equals app.environment and that would get that variable into",
    "start": "1423120",
    "end": "1429120"
  },
  {
    "text": "place but i'll just use it directly so we'll say app.environment and we can also simplify this a little",
    "start": "1429120",
    "end": "1436159"
  },
  {
    "text": "bit instead of using endpoints we can just use our app and get that content into place",
    "start": "1436159",
    "end": "1445320"
  },
  {
    "text": "now that looks so weird it's cool but it's like",
    "start": "1448640",
    "end": "1454000"
  },
  {
    "text": "where's my static void main where's my program.cs",
    "start": "1454000",
    "end": "1460039"
  },
  {
    "text": "for only this class c 10 will just go",
    "start": "1460159",
    "end": "1466320"
  },
  {
    "text": "i think i can figure this out for you and so it'll wrap it in a program.cs",
    "start": "1466320",
    "end": "1471679"
  },
  {
    "text": "it'll wrap it in a public static void main and we'll get that content into place so if we build this we could run",
    "start": "1471679",
    "end": "1479200"
  },
  {
    "text": "it and we can see our site is still running now in this case we'll just say build succeeded and we're ready to go",
    "start": "1479200",
    "end": "1487080"
  },
  {
    "text": "so we don't need our startup.cs anymore let's just delete this file completely",
    "start": "1487840",
    "end": "1494480"
  },
  {
    "text": "and now we're able to use that new builder that's pretty cool now our builder still",
    "start": "1494480",
    "end": "1500400"
  },
  {
    "text": "does the same thing so we still have this section where we rig up dependency injection and we still have this section",
    "start": "1500400",
    "end": "1506720"
  },
  {
    "text": "where we rig up our request pipeline so that's this one now let's dig into",
    "start": "1506720",
    "end": "1513840"
  },
  {
    "text": "minimal apis this is fun so right now we have asp.net mvc we have",
    "start": "1513840",
    "end": "1520559"
  },
  {
    "text": "web api and we have razer pages razer pages is good for i like the term",
    "start": "1520559",
    "end": "1525600"
  },
  {
    "text": "brochure where a static website where we just need to be able to host some stuff but we may",
    "start": "1525600",
    "end": "1531279"
  },
  {
    "text": "not have a whole lot of business logic behind it nvc is great when we need to upgrade to have more content layers of indirection",
    "start": "1531279",
    "end": "1538240"
  },
  {
    "text": "we now have controllers that we can separate views we can render a different view based on",
    "start": "1538240",
    "end": "1545120"
  },
  {
    "text": "details within our application and we can use a web api where we just spit out",
    "start": "1545120",
    "end": "1551440"
  },
  {
    "text": "json or xml instead of views razor views",
    "start": "1551440",
    "end": "1557360"
  },
  {
    "text": "and now we have a fourth paradigm here that is minimal apis so let's say",
    "start": "1557360",
    "end": "1563159"
  },
  {
    "text": "app.map get now i want to map api",
    "start": "1563159",
    "end": "1568320"
  },
  {
    "text": "minimal and i want to do something with that so here's my method and i'll return a new",
    "start": "1568320",
    "end": "1576159"
  },
  {
    "text": "object and here inside my object i will say message equals hello world and",
    "start": "1576159",
    "end": "1585039"
  },
  {
    "text": "id equals three now i'll do this a little bit more dynamically because that was pretty cool",
    "start": "1585039",
    "end": "1591039"
  },
  {
    "text": "last time let's say we'll grab a particular name not name of",
    "start": "1591039",
    "end": "1596799"
  },
  {
    "text": "name and if you don't pass one i'll pass in world so let's take in a string",
    "start": "1596799",
    "end": "1602880"
  },
  {
    "text": "name i'll make that optional and if we want to we can optionally say",
    "start": "1602880",
    "end": "1608559"
  },
  {
    "text": "from query i could also say from body or from headers or you know i can attribute it",
    "start": "1608559",
    "end": "1615760"
  },
  {
    "text": "with its source so that i'm very specific about where it came from now that's really cool we just grabbed a",
    "start": "1615760",
    "end": "1623279"
  },
  {
    "text": "query string parameter this name and we rendered this new object and all of that",
    "start": "1623279",
    "end": "1628880"
  },
  {
    "text": "is kind of inline if you've ever used node and express this feels right at home i just give it a url i give it a",
    "start": "1628880",
    "end": "1636720"
  },
  {
    "text": "method to do stuff and away it goes that's cool",
    "start": "1636720",
    "end": "1642240"
  },
  {
    "text": "now we did this with map get let's also do an app.map post now in this case i want to grab some",
    "start": "1642240",
    "end": "1648799"
  },
  {
    "text": "query parameters so let's say our url parameters let's say api minimal slash",
    "start": "1648799",
    "end": "1655200"
  },
  {
    "text": "one and two and now with those i will have my method",
    "start": "1655200",
    "end": "1663519"
  },
  {
    "text": "and now i'm going to take in a string one and an int two and it will",
    "start": "1665039",
    "end": "1670399"
  },
  {
    "text": "automatically map those route values into my parameters inside of our method",
    "start": "1670399",
    "end": "1677039"
  },
  {
    "text": "so let's do a similar thing where we just returned that new message but in this case instead of hello world i will",
    "start": "1677039",
    "end": "1683919"
  },
  {
    "text": "say this is 1 and my id is 2.",
    "start": "1683919",
    "end": "1690559"
  },
  {
    "text": "cool now we just did a map post now let's do a similar thing if we",
    "start": "1691200",
    "end": "1696480"
  },
  {
    "text": "wanted to do a little bit more logic let's say app map put so",
    "start": "1696480",
    "end": "1701520"
  },
  {
    "text": "i'm going to say api minimal and maybe i'm saving a new one so in my",
    "start": "1701520",
    "end": "1706960"
  },
  {
    "text": "parameters i want to say let's take in a",
    "start": "1706960",
    "end": "1712720"
  },
  {
    "text": "int id or actually we're creating new ones so let's say obj object uh data",
    "start": "1712720",
    "end": "1720640"
  },
  {
    "text": "and i want to return a new thing so let's say the message is",
    "start": "1720640",
    "end": "1726559"
  },
  {
    "text": "created and the id is three and the",
    "start": "1726559",
    "end": "1733600"
  },
  {
    "text": "data is the data that we passed it now",
    "start": "1733600",
    "end": "1739120"
  },
  {
    "text": "that just kind of inlined that but maybe i want to do a little bit more logic so let's open this curly brace and let's",
    "start": "1739120",
    "end": "1746880"
  },
  {
    "text": "close this curly brace and let's say return now maybe i want to",
    "start": "1746880",
    "end": "1753039"
  },
  {
    "text": "say if it exists in the if the saving worked so let's say it worked",
    "start": "1753039",
    "end": "1759279"
  },
  {
    "text": "then or maybe let's say invalid if it's invalid then i want to return",
    "start": "1759279",
    "end": "1767240"
  },
  {
    "text": "i want to return a 404 400 so in",
    "start": "1768559",
    "end": "1774240"
  },
  {
    "text": "mvc or in web api we would say this dot json or this dot",
    "start": "1774240",
    "end": "1781520"
  },
  {
    "text": "not found and this",
    "start": "1781520",
    "end": "1786158"
  },
  {
    "text": "is not a base controller anymore it's",
    "start": "1786559",
    "end": "1790960"
  },
  {
    "text": "this method so how do we return particular things we",
    "start": "1791600",
    "end": "1796640"
  },
  {
    "text": "have this class called results and so i can say",
    "start": "1796640",
    "end": "1802760"
  },
  {
    "text": "results.bad request and that returns the uh 400",
    "start": "1802760",
    "end": "1810159"
  },
  {
    "text": "so oh this one is returning a results and this one is not so let's say return",
    "start": "1810159",
    "end": "1816480"
  },
  {
    "text": "results results dot okay and we'll pass in this",
    "start": "1816480",
    "end": "1822159"
  },
  {
    "text": "as our body and now we're returning a consistent type there we go so now we've got it returning a 400 or",
    "start": "1822159",
    "end": "1829760"
  },
  {
    "text": "we've got it returning a 200 with this content i could say not found for a 404",
    "start": "1829760",
    "end": "1836640"
  },
  {
    "text": "or i could even say status code and say 500 or",
    "start": "1836640",
    "end": "1842240"
  },
  {
    "text": "301 or my favorite 418.",
    "start": "1842240",
    "end": "1846720"
  },
  {
    "text": "http status code 418 is actually really fun it's i am a teapot",
    "start": "1847440",
    "end": "1852960"
  },
  {
    "text": "but in this case i'll just say bad request",
    "start": "1853279",
    "end": "1858398"
  },
  {
    "text": "cool so if we need this kind of simpler user experience we can just map the methods",
    "start": "1859200",
    "end": "1866000"
  },
  {
    "text": "into place and do what we need to do if we get to a certain level where we kind of need more structure maybe we",
    "start": "1866000",
    "end": "1872480"
  },
  {
    "text": "have 20 of these 30 of these or we want to have an entity",
    "start": "1872480",
    "end": "1879200"
  },
  {
    "text": "maybe we have a rich entity diagram so we have eight or ten classes and we want",
    "start": "1879200",
    "end": "1884240"
  },
  {
    "text": "crud methods for each of them then this may get pretty big you know we have 50 lines here in this one file",
    "start": "1884240",
    "end": "1891279"
  },
  {
    "text": "and we know the rule of thumb is you shouldn't have a code file bigger than your head so",
    "start": "1891279",
    "end": "1896559"
  },
  {
    "text": "let's see if we can add a little bit more structure to this so i'm going to grab all of this code",
    "start": "1896559",
    "end": "1903440"
  },
  {
    "text": "and let's create a new folder i'm going to make a new folder and i'll just call",
    "start": "1903440",
    "end": "1908720"
  },
  {
    "text": "this apis and i'll add a new file in this called",
    "start": "1908720",
    "end": "1914880"
  },
  {
    "text": "minimal and here inside public class minimal i",
    "start": "1914880",
    "end": "1921279"
  },
  {
    "text": "will have some methods so let's create a method here and we will call this",
    "start": "1921279",
    "end": "1928480"
  },
  {
    "text": "our get method uh public",
    "start": "1931279",
    "end": "1937279"
  },
  {
    "text": "object get and so get will do that",
    "start": "1937279",
    "end": "1944880"
  },
  {
    "text": "and now let's have a post method so let's grab this out and we'll say",
    "start": "1944880",
    "end": "1952399"
  },
  {
    "text": "public object post there's our post method",
    "start": "1952399",
    "end": "1959120"
  },
  {
    "text": "maybe we need a oh yep that was post here's a put method",
    "start": "1959919",
    "end": "1966399"
  },
  {
    "text": "so let's go grab this one and say public object put",
    "start": "1966399",
    "end": "1973360"
  },
  {
    "text": "and now because we're building a real method let's do that i yanked out a",
    "start": "1973360",
    "end": "1978480"
  },
  {
    "text": "curly brace there now it's a little bit happier so now we probably have a more consistent thing so let's create a new",
    "start": "1978480",
    "end": "1985760"
  },
  {
    "text": "model here inside our models add new class let's call this a minimal",
    "start": "1985760",
    "end": "1993360"
  },
  {
    "text": "model and this has a public int id",
    "start": "1993360",
    "end": "1999519"
  },
  {
    "text": "get set will equal three just to give it a default value we'll have a message",
    "start": "1999519",
    "end": "2005919"
  },
  {
    "text": "and that is set to a blank string because we're using",
    "start": "2005919",
    "end": "2011600"
  },
  {
    "text": "nullable reference types public minimal",
    "start": "2011600",
    "end": "2017039"
  },
  {
    "text": "model data and that one we will allow that to be nullable and now we have this minimal",
    "start": "2017039",
    "end": "2024159"
  },
  {
    "text": "model so let's go back into our minimal class and so now let's return this new minimal",
    "start": "2024159",
    "end": "2030640"
  },
  {
    "text": "model message will now need to be capitalized id will be capitalized let's",
    "start": "2030640",
    "end": "2038000"
  },
  {
    "text": "return that minimal model there we'll return minimal model there so let's create this new",
    "start": "2038000",
    "end": "2045039"
  },
  {
    "text": "minimal model that has a message and an id here we will return",
    "start": "2045039",
    "end": "2051520"
  },
  {
    "text": "an i result",
    "start": "2051520",
    "end": "2055119"
  },
  {
    "text": "and ideally i would like to say an i result of minimal model but i don't think that's a thing",
    "start": "2056879",
    "end": "2063919"
  },
  {
    "text": "but here we will say a new minimal model and we'll give it the message and the id",
    "start": "2063919",
    "end": "2069839"
  },
  {
    "text": "and the data and so now i'll invent this thing let's say public void init",
    "start": "2069839",
    "end": "2076638"
  },
  {
    "text": "and we'll take in a web application an app and let's do some initialization",
    "start": "2076639",
    "end": "2084079"
  },
  {
    "text": "so not that one that one so i'm gonna say i want to map get to my",
    "start": "2084079",
    "end": "2092878"
  },
  {
    "text": "get method and map post to my post method and map put to my put method and",
    "start": "2092879",
    "end": "2099520"
  },
  {
    "text": "now i have this initialization okay i'm trying to gain more structure",
    "start": "2099520",
    "end": "2104880"
  },
  {
    "text": "here looks like i have a syntax error here data equals data there we go",
    "start": "2104880",
    "end": "2112559"
  },
  {
    "text": "oh and that's a minimal model not just an object okay so we've got our minimal model here",
    "start": "2112960",
    "end": "2119680"
  },
  {
    "text": "here inside program.cs we need to say var minimal equals hey we've got a dependency",
    "start": "2119680",
    "end": "2126240"
  },
  {
    "text": "injection container let's say get app.getrequest dot",
    "start": "2126240",
    "end": "2131920"
  },
  {
    "text": "services dot get required service of type minimal",
    "start": "2131920",
    "end": "2137440"
  },
  {
    "text": "and now that we have that we can say minimal dot init and app and i just invented all of oh we",
    "start": "2137440",
    "end": "2144480"
  },
  {
    "text": "need another using excellent global using here site dot apis there we",
    "start": "2144480",
    "end": "2151520"
  },
  {
    "text": "go now i just invented this minimal thing",
    "start": "2151520",
    "end": "2157359"
  },
  {
    "text": "but we kind of have a little bit more structure now so we've kind of separated some of the pieces maybe our startup.cs",
    "start": "2157359",
    "end": "2162960"
  },
  {
    "text": "is a little smaller but if we look at this real close it kind of looks like",
    "start": "2162960",
    "end": "2169359"
  },
  {
    "text": "a controller we've reached the point where the complexity in our application probably",
    "start": "2170640",
    "end": "2176720"
  },
  {
    "text": "doesn't fit minimal apis it probably fits controllers so i would argue that this was not a",
    "start": "2176720",
    "end": "2183280"
  },
  {
    "text": "great idea that we should have just flipped over to web api and with web api we have controllers and",
    "start": "2183280",
    "end": "2188800"
  },
  {
    "text": "we can automatically discover them and everything is just fine but that was interesting we did add a",
    "start": "2188800",
    "end": "2194720"
  },
  {
    "text": "little bit more structure to it so now let's take a look at uh actually",
    "start": "2194720",
    "end": "2200800"
  },
  {
    "text": "any questions so far on minimal apis anything that i did here that was a little weird or that uh feels a little",
    "start": "2200800",
    "end": "2207760"
  },
  {
    "text": "squishy yep",
    "start": "2207760",
    "end": "2214040"
  },
  {
    "text": "inside my boot method i have a typo on",
    "start": "2218480",
    "end": "2223280"
  },
  {
    "text": "mini ammo right there yeah that would be very bad",
    "start": "2226880",
    "end": "2232480"
  },
  {
    "text": "yeah good catch",
    "start": "2233520",
    "end": "2236560"
  },
  {
    "text": "thanks that typo would have really bitten me because we're about to hit testing and that would have caught it",
    "start": "2240839",
    "end": "2246079"
  },
  {
    "text": "good catch so let's take a look at testing how might we test this application now i",
    "start": "2246079",
    "end": "2252240"
  },
  {
    "text": "could definitely say let's go add another project and we could go reach into our projects and do that but we've",
    "start": "2252240",
    "end": "2258480"
  },
  {
    "text": "got the code right here so let's open up the nine folder here we've just been working out of this two folder the whole",
    "start": "2258480",
    "end": "2265040"
  },
  {
    "text": "time and that's been really fun but let's flip over to the nine folder close",
    "start": "2265040",
    "end": "2270160"
  },
  {
    "text": "solution and let's open a project let's come here to nine testing",
    "start": "2270160",
    "end": "2279440"
  },
  {
    "text": "now this is cool let's build this we've got our project we did that",
    "start": "2281760",
    "end": "2289119"
  },
  {
    "text": "minimal abomination thing that probably should be a controller apparently i spelled it correctly this time",
    "start": "2289119",
    "end": "2294880"
  },
  {
    "text": "we've got our controllers we've got razor pages we've got all of the content here that",
    "start": "2294880",
    "end": "2301839"
  },
  {
    "text": "we had before and then we also have this site.test project",
    "start": "2301839",
    "end": "2309040"
  },
  {
    "text": "so here's site.tests and that allows us to write some unit tests around these",
    "start": "2309359",
    "end": "2315200"
  },
  {
    "text": "particular things so for example i have this weather forecast controller and i want to write",
    "start": "2315200",
    "end": "2322320"
  },
  {
    "text": "a test around this weather forecast controller now it's going to grab random data so i can't validate that it's going",
    "start": "2322320",
    "end": "2329200"
  },
  {
    "text": "to render a particular temperature but i know that it's going to render five of them",
    "start": "2329200",
    "end": "2335359"
  },
  {
    "text": "so let's create a unit test now we're going to use the same arrange act assert",
    "start": "2335359",
    "end": "2340560"
  },
  {
    "text": "pattern that we see in lots of different frameworks and i'm just going to create",
    "start": "2340560",
    "end": "2346079"
  },
  {
    "text": "a new instance of this weather forecast controller passing in this",
    "start": "2346079",
    "end": "2351280"
  },
  {
    "text": "logger now i did this logger with moq with mock you that just allows me to",
    "start": "2351280",
    "end": "2357040"
  },
  {
    "text": "make a mock i logger of whatever i could also notice here that um",
    "start": "2357040",
    "end": "2363839"
  },
  {
    "text": "i'm not using it so i could probably just delete that dependency as well and make this test a",
    "start": "2363839",
    "end": "2369760"
  },
  {
    "text": "little bit simpler but okay so i mocked this i created an instance of this and i'm just going to call the get method",
    "start": "2369760",
    "end": "2376560"
  },
  {
    "text": "now this is a really straightforward unit test we're just calling into that method and validating that we get this",
    "start": "2376560",
    "end": "2381760"
  },
  {
    "text": "the results i love this assertion scope inside of fluent assertions that allows us to be",
    "start": "2381760",
    "end": "2388320"
  },
  {
    "text": "able to run all of these assertions if ever you've had a unit test where it's like the first one failed but i didn't",
    "start": "2388320",
    "end": "2394800"
  },
  {
    "text": "run the other ones so i fixed the first one and i run the test again and now the second one fails i like this because",
    "start": "2394800",
    "end": "2400800"
  },
  {
    "text": "it'll run all of the assertions and then fail the test",
    "start": "2400800",
    "end": "2406319"
  },
  {
    "text": "so i want to validate that my results are not null and that i have five results in that result count pretty",
    "start": "2406319",
    "end": "2412319"
  },
  {
    "text": "steep straightforward unit test now on the upside i'm able to validate my",
    "start": "2412319",
    "end": "2418160"
  },
  {
    "text": "minimal ap or not my minimal api my web api",
    "start": "2418160",
    "end": "2425599"
  },
  {
    "text": "action i call the action and i do all the things but i haven't flexed the request pipeline i don't have all the",
    "start": "2425599",
    "end": "2433200"
  },
  {
    "text": "details of authentication and middlewares and all of the other pieces",
    "start": "2433200",
    "end": "2438640"
  },
  {
    "text": "that might make this happen so let's write an integration test into web api",
    "start": "2438640",
    "end": "2444960"
  },
  {
    "text": "now in the past this was really painful but here in asp.net 6 it is so nice",
    "start": "2444960",
    "end": "2451599"
  },
  {
    "text": "now we have this program.cs that we built over here and we're just going to descend from",
    "start": "2451599",
    "end": "2457280"
  },
  {
    "text": "that we might pass in additional things here i'm passing in that builder and i could",
    "start": "2457280",
    "end": "2462640"
  },
  {
    "text": "override services maybe i don't want to hit the real database i want to hit an in-memory database or fake out",
    "start": "2462640",
    "end": "2468560"
  },
  {
    "text": "particular repositories but now i've just built up this",
    "start": "2468560",
    "end": "2475280"
  },
  {
    "text": "fake app now it's going to run all of my pipelines all of my middleware but it",
    "start": "2475280",
    "end": "2481200"
  },
  {
    "text": "doesn't need to find an available port it doesn't need to pick a random port it doesn't need to do things over http it",
    "start": "2481200",
    "end": "2488319"
  },
  {
    "text": "does it over memory instead which is excellent now in my test let's come back here we",
    "start": "2488319",
    "end": "2495760"
  },
  {
    "text": "just instantiate that object now we could pass in a particular environment but i'm good with",
    "start": "2495760",
    "end": "2501680"
  },
  {
    "text": "development isn't that cool this using statement that doesn't have curly braces",
    "start": "2501680",
    "end": "2508640"
  },
  {
    "text": "this using statement will just apply for the rest of the file so i don't need to indent more so i go",
    "start": "2508640",
    "end": "2515440"
  },
  {
    "text": "grab an instance of this application then i create client which will create an http client of this",
    "start": "2515440",
    "end": "2522800"
  },
  {
    "text": "object of this project and then i can just fire requests at it like i would fire requests that anything with http",
    "start": "2522800",
    "end": "2529520"
  },
  {
    "text": "client so i'm going to get async the api weather forecast i'm going to read that as a string i'll deserialize that into a",
    "start": "2529520",
    "end": "2536480"
  },
  {
    "text": "list of weather forecasts making it nullable just in case and then i'll go do those assertions now the",
    "start": "2536480",
    "end": "2543040"
  },
  {
    "text": "difference between this and the unit test is that we're flexing the entire request pipeline so middlewares",
    "start": "2543040",
    "end": "2549520"
  },
  {
    "text": "authorization authentication anything that we need to do will happen in this mechanism",
    "start": "2549520",
    "end": "2555920"
  },
  {
    "text": "now the one piece that i glossed over right here is program",
    "start": "2555920",
    "end": "2561040"
  },
  {
    "text": "now now by default we have this auto magically generated thing right here",
    "start": "2561040",
    "end": "2567839"
  },
  {
    "text": "that will just kind of wrap it in a class called program and give it a static void main that does all the",
    "start": "2567839",
    "end": "2574400"
  },
  {
    "text": "things but it's private and so how do we instantiate it over",
    "start": "2574400",
    "end": "2580560"
  },
  {
    "text": "here there's this trick now we can specify the other half of",
    "start": "2580560",
    "end": "2586079"
  },
  {
    "text": "this auto-generated partial class and so let's create this other half of the",
    "start": "2586079",
    "end": "2591680"
  },
  {
    "text": "auto-generated partial class and in this case we will call it public",
    "start": "2591680",
    "end": "2598079"
  },
  {
    "text": "it feels so dirty to do that but it still works i'm reaching into that program.cs that is",
    "start": "2598240",
    "end": "2605359"
  },
  {
    "text": "automatically generated and making it public so that then i can create this fixture with it and therefore i can",
    "start": "2605359",
    "end": "2612400"
  },
  {
    "text": "create this unit test around it that is so much easier to do integration",
    "start": "2612400",
    "end": "2619280"
  },
  {
    "text": "tests in asp.net 6. that is so cool so now let's take this minimal api out",
    "start": "2619280",
    "end": "2625520"
  },
  {
    "text": "for a test we want to be able to hit the get request and do this get method we",
    "start": "2625520",
    "end": "2630880"
  },
  {
    "text": "want to post into these things so let's do an integration test into this minimal",
    "start": "2630880",
    "end": "2635920"
  },
  {
    "text": "api now we could have done this just with regular minimal apis you know the whole abomination of refactoring it into a",
    "start": "2635920",
    "end": "2642560"
  },
  {
    "text": "class was kind of interesting but not necessary so i'm going to create a new site",
    "start": "2642560",
    "end": "2648960"
  },
  {
    "text": "create my http client from that site and then fire a request at it giving it a name of test so i would expect the",
    "start": "2648960",
    "end": "2656079"
  },
  {
    "text": "message to come back to say hello test so let's deserialize that into the",
    "start": "2656079",
    "end": "2662400"
  },
  {
    "text": "minimal model that we built here and then let's go check to see it's not",
    "start": "2662400",
    "end": "2667920"
  },
  {
    "text": "null and then the id should be three because remember i had coded that to be three",
    "start": "2667920",
    "end": "2673760"
  },
  {
    "text": "back then and then the message should be hello test",
    "start": "2673760",
    "end": "2679280"
  },
  {
    "text": "well what if message was null would i get a null reference exception here",
    "start": "2679280",
    "end": "2685280"
  },
  {
    "text": "that's the beauty of minimal apis is not minimal apis but rather fluent assertions it uses extension",
    "start": "2685280",
    "end": "2692160"
  },
  {
    "text": "methods and so this extension method uh oh i can't download the source there",
    "start": "2692160",
    "end": "2698000"
  },
  {
    "text": "this extension method will there we go it takes in this string so",
    "start": "2698000",
    "end": "2705200"
  },
  {
    "text": "if this string happens to be null that's fine i don't get a no reference exception",
    "start": "2705200",
    "end": "2712480"
  },
  {
    "text": "here i just passed this null thing into should and i just love how easily that",
    "start": "2712480",
    "end": "2718319"
  },
  {
    "text": "renders how easily it is to parse it the model message should be hello test",
    "start": "2718319",
    "end": "2725040"
  },
  {
    "text": "that's that's really legible that's really clean okay so we have this get method that",
    "start": "2725040",
    "end": "2730880"
  },
  {
    "text": "validates that if we pass in this query string will get as expected let's run a unit test about post",
    "start": "2730880",
    "end": "2737359"
  },
  {
    "text": "so here's our post where we're going to take some content we'll pass in id5",
    "start": "2737359",
    "end": "2743440"
  },
  {
    "text": "some posted content and let's run minimal api foo five and validate that the result",
    "start": "2743440",
    "end": "2750880"
  },
  {
    "text": "that we get back is hello foo and five and so uh looks like i built that method",
    "start": "2750880",
    "end": "2757280"
  },
  {
    "text": "a little bit differently this time one and two is now saying one and two without an id",
    "start": "2757280",
    "end": "2765040"
  },
  {
    "text": "set that's fine so i have this now integration test of",
    "start": "2765040",
    "end": "2770640"
  },
  {
    "text": "the post method and if we wanted to fill that out we could definitely do a test of the put",
    "start": "2770640",
    "end": "2776720"
  },
  {
    "text": "method as well but let's flip over to the test explorer i can come here into",
    "start": "2776720",
    "end": "2782240"
  },
  {
    "text": "the test menu and go to windows and uh pop open the test",
    "start": "2782240",
    "end": "2788960"
  },
  {
    "text": "explorer and i'll get this this window so let's just go discover all of the",
    "start": "2788960",
    "end": "2795359"
  },
  {
    "text": "tests in our project and now let's run all of our tests",
    "start": "2795359",
    "end": "2804400"
  },
  {
    "text": "this is cool oh all the test red green excellent we know our minimal api works",
    "start": "2806079",
    "end": "2812240"
  },
  {
    "text": "and we're able to validate it using these really elegant integration tests now it didn't need to",
    "start": "2812240",
    "end": "2818960"
  },
  {
    "text": "spin up a web server it doesn't need to find an open port all of this is in memory but it's still flexing my entire",
    "start": "2818960",
    "end": "2826079"
  },
  {
    "text": "request pipeline that is cool",
    "start": "2826079",
    "end": "2831200"
  },
  {
    "text": "so testing in asp.net um six is just so nice",
    "start": "2831200",
    "end": "2839280"
  },
  {
    "text": "so when we were looking at this minimal api we kind of said that's probably not the right size that website was too big",
    "start": "2839280",
    "end": "2846800"
  },
  {
    "text": "let's look at a minimal api that is probably a good fit for this now minimal",
    "start": "2846800",
    "end": "2852160"
  },
  {
    "text": "apis nicely sit in between azure functions on one side and web api",
    "start": "2852160",
    "end": "2859119"
  },
  {
    "text": "on the other side if i have a lot of content i want to move towards",
    "start": "2859119",
    "end": "2865599"
  },
  {
    "text": "web api because now i've got controllers and i can have lots of",
    "start": "2865680",
    "end": "2872319"
  },
  {
    "text": "things that auto discover each other and and i don't need to have this big section in my program.cs that i'm",
    "start": "2872319",
    "end": "2878079"
  },
  {
    "text": "merging all the time so if i have a lot of stuff web api is perfect if i just",
    "start": "2878079",
    "end": "2883119"
  },
  {
    "text": "have one thing azure functions is perfect because azure functions is just",
    "start": "2883119",
    "end": "2888559"
  },
  {
    "text": "that one little function what if i need a handful of things so for example",
    "start": "2888559",
    "end": "2895040"
  },
  {
    "text": "i have this project where i just need to get this interesting config file online",
    "start": "2895040",
    "end": "2902079"
  },
  {
    "text": "thank you to randomuser.me for this data this is an actual this isn't an actual user but i have this json file and i",
    "start": "2902079",
    "end": "2909520"
  },
  {
    "text": "just need to serve this from an endpoint",
    "start": "2909520",
    "end": "2914559"
  },
  {
    "text": "oh well i'll just go reach into node and do well now we can do this in dot net as well",
    "start": "2914559",
    "end": "2920000"
  },
  {
    "text": "so that's a really cool use case so i do my builder equals web",
    "start": "2920000",
    "end": "2926160"
  },
  {
    "text": "application builder dot create builder i'm going to add swagger i'll go read my text now i chose to put",
    "start": "2926160",
    "end": "2933200"
  },
  {
    "text": "this inside of curly braces just so i couldn't cheat and go grab this text file later but i'm actually",
    "start": "2933200",
    "end": "2939040"
  },
  {
    "text": "deserializing this into a strongly typed class here in this",
    "start": "2939040",
    "end": "2944640"
  },
  {
    "text": "record right here so here's a record class that defines all of the properties in there all in one line which is really",
    "start": "2944640",
    "end": "2951760"
  },
  {
    "text": "elegant so i've deserialized that into a strongly typed object i'm going to",
    "start": "2951760",
    "end": "2958160"
  },
  {
    "text": "stick it inside of dependency injection and now i have this json file that i can",
    "start": "2958160",
    "end": "2964640"
  },
  {
    "text": "pull in from ioc so let's flip over to our request",
    "start": "2964640",
    "end": "2970079"
  },
  {
    "text": "pipeline in development we'll show the exception page we'll use swagger and swagger ui",
    "start": "2970079",
    "end": "2975440"
  },
  {
    "text": "in production we'll grab our exception handler and we'll use certificate pinning",
    "start": "2975440",
    "end": "2980880"
  },
  {
    "text": "and then we'll map get and we'll inject this configuration file",
    "start": "2980880",
    "end": "2986480"
  },
  {
    "text": "into our method from our ioc container now that's really cool we could pull in",
    "start": "2986480",
    "end": "2992319"
  },
  {
    "text": "an entity framework data context or we could pull in a",
    "start": "2992319",
    "end": "2998079"
  },
  {
    "text": "repository or another service anything we need to inject we can just inject it into the method and it'll magically show",
    "start": "2998079",
    "end": "3004400"
  },
  {
    "text": "up so i'm going to return that as my result and that will put that configuration online down at the bottom",
    "start": "3004400",
    "end": "3010960"
  },
  {
    "text": "i say app.run and away it goes so let's fire up this website",
    "start": "3010960",
    "end": "3017760"
  },
  {
    "text": "and take a look at how this works so we have this website and we just want",
    "start": "3017760",
    "end": "3023119"
  },
  {
    "text": "to be able to serve this interesting configuration file we have swagger here which is really nice so let's execute",
    "start": "3023119",
    "end": "3029839"
  },
  {
    "text": "that method and there's our json file served up from this web api or from this",
    "start": "3029839",
    "end": "3035760"
  },
  {
    "text": "minimal api now with a",
    "start": "3035760",
    "end": "3041838"
  },
  {
    "text": "website even a microservice like this we probably want things like error handling",
    "start": "3042319",
    "end": "3048000"
  },
  {
    "text": "so if we threw an exception in production it would land on our error page so yep we've got error handling",
    "start": "3048000",
    "end": "3054319"
  },
  {
    "text": "here in our application we probably also want to do not found things let's go to not a page",
    "start": "3054319",
    "end": "3062000"
  },
  {
    "text": "here and we have a 404 handle there which is really elegant",
    "start": "3062000",
    "end": "3067440"
  },
  {
    "text": "and we probably also want to do health checks so our application is now healthy",
    "start": "3067440",
    "end": "3073920"
  },
  {
    "text": "now how did we rig all of those pieces well minimal apis are",
    "start": "3073920",
    "end": "3079040"
  },
  {
    "text": "really elegant at being able to map things so here in our error handler we",
    "start": "3079040",
    "end": "3084319"
  },
  {
    "text": "said redirect uncaught exceptions to slash error",
    "start": "3084319",
    "end": "3089359"
  },
  {
    "text": "so i'm just going to listen to slash error and give you that results problem",
    "start": "3089359",
    "end": "3097200"
  },
  {
    "text": "cool at the end of this i'm also going to map the bulk thing of anything we didn't",
    "start": "3097200",
    "end": "3103119"
  },
  {
    "text": "handle so far and return to a results.not found now the first time i did this i actually",
    "start": "3103119",
    "end": "3109599"
  },
  {
    "text": "had my method look like this which yeah that's a little bit cleaner but my page just kept saying empty page in browser",
    "start": "3109599",
    "end": "3116880"
  },
  {
    "text": "and i was like is that a dns thing is my server not running and so i actually gave it a json",
    "start": "3116880",
    "end": "3123119"
  },
  {
    "text": "object inside of my 404 page just so that i could help myself see it",
    "start": "3123119",
    "end": "3128400"
  },
  {
    "text": "similarly we wanted to grab health checks so we just add health checks here",
    "start": "3128400",
    "end": "3133599"
  },
  {
    "text": "and then we map health checks to a particular url",
    "start": "3133599",
    "end": "3138640"
  },
  {
    "text": "and now our micro service serves a json file",
    "start": "3138640",
    "end": "3144160"
  },
  {
    "text": "it handles exceptions nicely it handles 404 pages nicely",
    "start": "3144160",
    "end": "3150240"
  },
  {
    "text": "it has a health check built into it and it is the only file in our solution the only c",
    "start": "3150240",
    "end": "3158000"
  },
  {
    "text": "sharp file in our solution and it's only 46 lines",
    "start": "3158000",
    "end": "3166000"
  },
  {
    "text": "this is the right size for minimal apis smaller than what we need for web api",
    "start": "3166000",
    "end": "3171839"
  },
  {
    "text": "but bigger than an azure function and we have all of the things that we need to be able to build a really elegant and",
    "start": "3171839",
    "end": "3177839"
  },
  {
    "text": "robust microservice this is probably that right size for a web api or for a",
    "start": "3177839",
    "end": "3184079"
  },
  {
    "text": "mic minimal api so that's in their right size folder and",
    "start": "3184079",
    "end": "3189599"
  },
  {
    "text": "i give it to you as a challenge to the reader add these unit tests in the same way that we built unit tests previously",
    "start": "3189599",
    "end": "3196559"
  },
  {
    "text": "you can reference the unit test that we built in the chapter right before in chapter 9 here and all of this code is",
    "start": "3196559",
    "end": "3203359"
  },
  {
    "text": "now online at robrich.org presentations or straight on github",
    "start": "3203359",
    "end": "3210480"
  },
  {
    "text": "this is a lot of fun getting to show you minimal apis any questions on minimal apis",
    "start": "3210480",
    "end": "3217480"
  },
  {
    "text": "excellent thank you for coming",
    "start": "3222559",
    "end": "3226520"
  }
]