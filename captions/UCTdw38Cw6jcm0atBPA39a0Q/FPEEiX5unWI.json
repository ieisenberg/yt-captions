[
  {
    "text": "so um so um while you're finding your seats uh i'll i think i'll just you know it's gonna start here so thanks thanks",
    "start": "320",
    "end": "7040"
  },
  {
    "text": "everyone for coming my name is mark seaman and uh if you want to know more about me there's information on block.dk",
    "start": "7040",
    "end": "13920"
  },
  {
    "text": "um and this talk is about software development productivity so um",
    "start": "13920",
    "end": "21600"
  },
  {
    "text": "i think a lot of us have this experience that development productivity is not as as good as it it ought to be and even if",
    "start": "21600",
    "end": "28160"
  },
  {
    "text": "we ourselves as programmers are very you know impressed with ourselves it often tends to be the case that our",
    "start": "28160",
    "end": "34079"
  },
  {
    "text": "stakeholders really aren't um so we're not delivering as fast as or as",
    "start": "34079",
    "end": "39680"
  },
  {
    "text": "efficiently as a lot of you know other stakeholders would actually like us to and you know if we introspect i think",
    "start": "39680",
    "end": "45360"
  },
  {
    "text": "it's probably we can we sort of understand that as well we would like things to work better than they actually do",
    "start": "45360",
    "end": "51199"
  },
  {
    "text": "so this talk is about that and i'm not saying that i have the silver bullet i don't have the one solution to that",
    "start": "51199",
    "end": "56960"
  },
  {
    "text": "problem i just have some thoughts about that problem so i think it's a multifaceted problem there's more than",
    "start": "56960",
    "end": "63120"
  },
  {
    "text": "one reason why software development productivity is not as we'd like it to be but i think one of them one of the main",
    "start": "63120",
    "end": "69760"
  },
  {
    "text": "reasons one of the fundamental reasons is basically that that code is difficult to read we spend",
    "start": "69760",
    "end": "75520"
  },
  {
    "text": "a lot of time reading code so robert c martin in one of his books says the ratio of time spent reading versus",
    "start": "75520",
    "end": "81360"
  },
  {
    "text": "writing is well over ten to one i'm always a little bit surprised with the numbers that robertson martin comes",
    "start": "81360",
    "end": "86720"
  },
  {
    "text": "up with i think he sort of pulls him out of the hat um but let's just go with that you know it's it's i don't think he's completely far off here so let's",
    "start": "86720",
    "end": "93840"
  },
  {
    "text": "just use that as an as an argument um so if we if we want to try to illustrate this with a figure we might",
    "start": "93840",
    "end": "100560"
  },
  {
    "text": "draw a figure like this one where we say we have you know 10 orange boxes here and that represents the time that we are",
    "start": "100560",
    "end": "106399"
  },
  {
    "text": "you know using uh to read existing code and then we have that one green box that that represents the",
    "start": "106399",
    "end": "112399"
  },
  {
    "text": "time we actually spend writing new code so that represents a 10 to one ratio and",
    "start": "112399",
    "end": "118000"
  },
  {
    "text": "often when we are talking about software development productivity we tend to have a focus on writing new",
    "start": "118000",
    "end": "124240"
  },
  {
    "text": "code so so if a software development vendor you know an ide vendor will tell you about",
    "start": "124240",
    "end": "129679"
  },
  {
    "text": "productivity they'll often try to sell you a new version of their ide and they'll demonstrate how you can write",
    "start": "129679",
    "end": "135680"
  },
  {
    "text": "code faster the same thing goes with language design or libraries you know library developers will come and tell",
    "start": "135680",
    "end": "141599"
  },
  {
    "text": "you use my library instead of the other library and you'll be able to produce code faster",
    "start": "141599",
    "end": "146640"
  },
  {
    "text": "and that's all good i don't i don't have any problem with that but let's just for the sake of argument make a hypothetical",
    "start": "146640",
    "end": "153040"
  },
  {
    "text": "assumption that some revolutionary technology comes by that enables you to write code in half the time as before so",
    "start": "153040",
    "end": "159680"
  },
  {
    "text": "that looks like a 50 reduction in the time you actually spend in a writing code",
    "start": "159680",
    "end": "165599"
  },
  {
    "text": "that's probably not realistic you know improvements in productivity in terms of",
    "start": "165599",
    "end": "170800"
  },
  {
    "text": "writing code tend to be on a much smaller scale and it's not that i have anything against those things i'd like",
    "start": "170800",
    "end": "176319"
  },
  {
    "text": "to have the new ide and the new libraries and so on so that i can feel that i'm more productive",
    "start": "176319",
    "end": "181360"
  },
  {
    "text": "so that's fine i'll take everything that i can get i just think that we have to realize that this is not really where",
    "start": "181360",
    "end": "187200"
  },
  {
    "text": "you know productivity gains a lie you know this completely unrealistic example of reducing development or development",
    "start": "187200",
    "end": "193760"
  },
  {
    "text": "production time code production time with 50 that's more like a 4.5 you know percent reduction in the time",
    "start": "193760",
    "end": "200239"
  },
  {
    "text": "you actually spend with the code if you don't do anything about readability so",
    "start": "200239",
    "end": "206080"
  },
  {
    "text": "fine i'll take the product productivity improvements that that you know that i can get with the writing new code but if",
    "start": "206080",
    "end": "212400"
  },
  {
    "text": "we want to really do something about software development productivity we probably should do something about readability because that's where we",
    "start": "212400",
    "end": "219120"
  },
  {
    "text": "spend most of our time so so that's that's sort of like the idea here so um so the question is you know when",
    "start": "219120",
    "end": "226720"
  },
  {
    "text": "is code readable now if you look at code like this is this readable or not",
    "start": "226720",
    "end": "231840"
  },
  {
    "text": "and you know you may have all sorts of opinions on whether that's the case or not so if you're used to reading c sharp",
    "start": "231840",
    "end": "237120"
  },
  {
    "text": "code you'd probably say that looks readable to me you know not you know without actually trying to understand it",
    "start": "237120",
    "end": "242159"
  },
  {
    "text": "but just it looks readable it probably is um but if you are a java developer you think it's completely unreadable",
    "start": "242159",
    "end": "248400"
  },
  {
    "text": "because it put the curly braces in the wrong places so yeah",
    "start": "248400",
    "end": "254080"
  },
  {
    "text": "um but anyway so we can't really have these you know we can't have these subjective discussions about what",
    "start": "254080",
    "end": "259680"
  },
  {
    "text": "whether or not something is readable you know that's sort of like you know i'm standing over here in this corner and say my code is readable and then someone",
    "start": "259680",
    "end": "266160"
  },
  {
    "text": "comes by and says no it's not and i'll go back here yes it is and then the other guys say no it's not and it's like",
    "start": "266160",
    "end": "272960"
  },
  {
    "text": "like you know kindergarten argument a level of things here so that doesn't really work so we need to have something",
    "start": "272960",
    "end": "278240"
  },
  {
    "text": "that's a little bit more you know objective and i'm not i'm not going to give you any sort of scientific truth",
    "start": "278240",
    "end": "283840"
  },
  {
    "text": "here i'm just going to give you some tools that will enable you to pull the discussion in the direction of being a",
    "start": "283840",
    "end": "288960"
  },
  {
    "text": "little bit more objective about discussing those things um so we probably need to understand what",
    "start": "288960",
    "end": "294720"
  },
  {
    "text": "actually happens when we read source codes so researchers who have been looking into that problem",
    "start": "294720",
    "end": "300160"
  },
  {
    "text": "they've defined a couple of terminology for that so so one of the things that they they call it when we read code they",
    "start": "300160",
    "end": "305759"
  },
  {
    "text": "call it tracing another term for that is called cognitive compilation so it's it's almost like we're we're sort of",
    "start": "305759",
    "end": "312160"
  },
  {
    "text": "trying to compile the code in our heads and we're running a little emulator in order to try to understand what's what's",
    "start": "312160",
    "end": "317840"
  },
  {
    "text": "actually going on um so i'm gonna walk you through a little bit of what the brain might do",
    "start": "317840",
    "end": "323199"
  },
  {
    "text": "when it looks at code like this so that means i'm going to spend some time with this particular code example",
    "start": "323199",
    "end": "328479"
  },
  {
    "text": "and the point of spending time with this code example is not to walk you through what the code actually",
    "start": "328479",
    "end": "334000"
  },
  {
    "text": "does it's not really that important the code is from my notebook code that",
    "start": "334000",
    "end": "339120"
  },
  {
    "text": "fits in your head um all the code that you're going to see in this session is from that book",
    "start": "339120",
    "end": "345039"
  },
  {
    "text": "and it's uh it's the same example or the same scenario all the way through it's an online restaurant reservation system",
    "start": "345039",
    "end": "352000"
  },
  {
    "text": "but it's not that important really so what happens in our brains when we're",
    "start": "352000",
    "end": "357280"
  },
  {
    "text": "trying to read code like this now we're trying to sort of make sense of it trying to compile it in our brains and",
    "start": "357280",
    "end": "362960"
  },
  {
    "text": "we also sort of try to run it or interpret it in our brain and that means just like the the actual you know",
    "start": "362960",
    "end": "369759"
  },
  {
    "text": "computer when it executes codes your brain will need to keep track of state",
    "start": "369759",
    "end": "375280"
  },
  {
    "text": "and maintain state so one of the things we might notice is that there's this object here called allocation and it's a",
    "start": "375280",
    "end": "381440"
  },
  {
    "text": "list of tables and you know if if you're not a sharp developer you may not know",
    "start": "381440",
    "end": "386479"
  },
  {
    "text": "that particular class but this is a collection of things that you can you know modify in various different ways",
    "start": "386479",
    "end": "392160"
  },
  {
    "text": "you can add things to it you can remove things from it you can reorder it and do things like that so this is a thing that",
    "start": "392160",
    "end": "398400"
  },
  {
    "text": "might potentially change state so when you're trying to understand what the code does you you know if you haven't",
    "start": "398400",
    "end": "403440"
  },
  {
    "text": "read all the way through already you say oh this might actually change state and the state might actually impact what the",
    "start": "403440",
    "end": "409599"
  },
  {
    "text": "code does it doesn't but it might um so that's something that i need to keep track of in my brain so it's sort of",
    "start": "409599",
    "end": "415919"
  },
  {
    "text": "like one thing that i need to keep track of and and then you go on and read some",
    "start": "415919",
    "end": "421919"
  },
  {
    "text": "more and you notice there's a for each loop and you know that you know if you're for itching over something but that something is empty you're basically",
    "start": "421919",
    "end": "428720"
  },
  {
    "text": "just gonna fall all the way through and nothing's gonna happen you're just gonna return the allocation uh on the other",
    "start": "428720",
    "end": "434080"
  },
  {
    "text": "hand you know if there's at least one item you're going to start looping over those things and then there's this thing",
    "start": "434080",
    "end": "439759"
  },
  {
    "text": "where we are trying to find in in the allocation we're trying to find a table um",
    "start": "439759",
    "end": "444800"
  },
  {
    "text": "it's a restaurant table we're trying to find a table that fits a reservation request and that find method will return the",
    "start": "444800",
    "end": "451520"
  },
  {
    "text": "table if it finds something but it might also return null so um this funny thing where it says if",
    "start": "451520",
    "end": "458160"
  },
  {
    "text": "table is curly brackets that's sort of like a a c pun it basically means if table is",
    "start": "458160",
    "end": "464080"
  },
  {
    "text": "something it's just a more brief way of saying if table is not null so table",
    "start": "464080",
    "end": "469440"
  },
  {
    "text": "maybe null in in that case we're still gonna fall through and not gonna we're not gonna execute what happens inside of",
    "start": "469440",
    "end": "474560"
  },
  {
    "text": "that indented code but if we find a table we're gonna you know start mutating and changing the state of that",
    "start": "474560",
    "end": "479680"
  },
  {
    "text": "allocation so in this case it's fairly it's fairly easy to keep track of what's gonna happen because we remove a table",
    "start": "479680",
    "end": "485840"
  },
  {
    "text": "but then we sort of add it back together with some different you know states inside of it so the number of tables at",
    "start": "485840",
    "end": "491440"
  },
  {
    "text": "least actually stays the same so this is fairly straightforward to keep track of um",
    "start": "491440",
    "end": "497039"
  },
  {
    "text": "so i'm not trying to tell you that this is hard to read i think actually this is readable code not because it's written",
    "start": "497039",
    "end": "502240"
  },
  {
    "text": "in a particular way but because there's not too much stuff going on you know you basically have to keep track of one",
    "start": "502240",
    "end": "508240"
  },
  {
    "text": "piece of mutable state and it doesn't really change that much and these three you know alternative pathways through",
    "start": "508240",
    "end": "514719"
  },
  {
    "text": "the system some of you probably know this already this is called you know this is a measurement called cyclomatic",
    "start": "514719",
    "end": "519760"
  },
  {
    "text": "complexity and we can see that as a as a measurement of you know how many different alternative pathways do we",
    "start": "519760",
    "end": "525440"
  },
  {
    "text": "have in a system but in a method like this one you know since it can have three different pathways to the",
    "start": "525440",
    "end": "531839"
  },
  {
    "text": "system it also means that unless we can sort of find some sort of you know abstraction that captures all that it",
    "start": "531839",
    "end": "537279"
  },
  {
    "text": "does it's almost like it's three alternative universes that are sort of super imposed on top of each other so",
    "start": "537279",
    "end": "544240"
  },
  {
    "text": "unless we can find some sort of you know common abstraction that describes what's happening here it's all like we have to keep",
    "start": "544240",
    "end": "550320"
  },
  {
    "text": "track of or think of this of this method as being three three things uh in one in",
    "start": "550320",
    "end": "555519"
  },
  {
    "text": "one go so um so there's a little bit of stuff uh to keep track of in one you know when one",
    "start": "555519",
    "end": "561360"
  },
  {
    "text": "way of thinking about it there's one new piece of mutable state and another way to think about it that's sort of like",
    "start": "561360",
    "end": "566640"
  },
  {
    "text": "three different pathways so how you know how good is our brain at dealing with complexity like that and it",
    "start": "566640",
    "end": "574000"
  },
  {
    "text": "turns out that it's it's it's it's okay we can deal with that but there's this paper from 1956 by george miller called",
    "start": "574000",
    "end": "580240"
  },
  {
    "text": "the magical number seven plus minus two um that basically says um in our",
    "start": "580240",
    "end": "585440"
  },
  {
    "text": "short-term memory we can keep track of about seven things you know give and take and it's a fairly robust result",
    "start": "585440",
    "end": "592080"
  },
  {
    "text": "from experimental psychology it's basically been standing for more than 50 years um other researchers have tried to",
    "start": "592080",
    "end": "599680"
  },
  {
    "text": "reproduce that result and they arrive at you know at least the same order of magnitude maybe",
    "start": "599680",
    "end": "605680"
  },
  {
    "text": "a little bit less actually it tends to be you know the newer results may actually pull that number not down but",
    "start": "605680",
    "end": "610720"
  },
  {
    "text": "i'm just gonna stick with seven um so um so that's really not a lot you",
    "start": "610720",
    "end": "616000"
  },
  {
    "text": "know our short-term memory is one byte okay and it's a seven-bit byte",
    "start": "616000",
    "end": "621920"
  },
  {
    "text": "those things actually existed if you go far far enough back in time you know in 1960s there were there was this thing",
    "start": "621920",
    "end": "627279"
  },
  {
    "text": "called a seven-bit byte um so that's not a lot so um",
    "start": "627279",
    "end": "633279"
  },
  {
    "text": "the what what miller did what that was that he asked people to remember you know one of the ea exercises he asked",
    "start": "633279",
    "end": "639600"
  },
  {
    "text": "his um his research subjects to do was to re remember random numbers but he",
    "start": "639600",
    "end": "645120"
  },
  {
    "text": "also you know asked them to remember remember other things so in general he he talked about those things as being",
    "start": "645120",
    "end": "650959"
  },
  {
    "text": "chunks of information and um i'm just going to switch over here and start a little a little animation uh i",
    "start": "650959",
    "end": "658399"
  },
  {
    "text": "need to do something because otherwise this is never going to finish uh hang on i'm going to set that to 120 i'm going",
    "start": "658399",
    "end": "665839"
  },
  {
    "text": "to scroll up oh jeez all right there we go all right",
    "start": "665839",
    "end": "672079"
  },
  {
    "text": "so now we have these chunks and um i'll talk to you in a moment why this",
    "start": "672079",
    "end": "677440"
  },
  {
    "text": "animation is now running um but the point is you know when if you have a completely new code base and that code",
    "start": "677440",
    "end": "683519"
  },
  {
    "text": "base is just hello world there's basically just one thing that goes on and that that fits in your",
    "start": "683519",
    "end": "688959"
  },
  {
    "text": "short-term memory you know if you can keep track of about seven things in your short-term memory you can understand",
    "start": "688959",
    "end": "694320"
  },
  {
    "text": "hello world um but you know when you start to add more code to a code base let's just kind",
    "start": "694320",
    "end": "699360"
  },
  {
    "text": "of you know be more and more things that you sort of need to keep track of so um",
    "start": "699360",
    "end": "704959"
  },
  {
    "text": "very soon there's going to be more than seven things that you that that's happening in the code base so real codebase will probably have 7000 things",
    "start": "704959",
    "end": "711600"
  },
  {
    "text": "going on seven million things going on and that doesn't fit into into your short-term memory",
    "start": "711600",
    "end": "717519"
  },
  {
    "text": "so so what do you do if if you know real code bases have a lot of stuff going on and and it doesn't",
    "start": "717519",
    "end": "724079"
  },
  {
    "text": "fit in your short-term memory now the computer doesn't care you know as martin fowler wrote you know any fool can write",
    "start": "724079",
    "end": "729519"
  },
  {
    "text": "code that a computer can understand you know good programmers like code that humans can understand so the computer doesn't",
    "start": "729519",
    "end": "736160"
  },
  {
    "text": "care that there are 7 000 things going on or 7 million things going on it's just going to store those things in memory and access them you know all the",
    "start": "736160",
    "end": "743760"
  },
  {
    "text": "information as as it needs you know to to make decisions upon those things and it doesn't really care the computer will",
    "start": "743760",
    "end": "750639"
  },
  {
    "text": "deal with this problem you know without problems we'll deal with that without having any problems with it",
    "start": "750639",
    "end": "757839"
  },
  {
    "text": "so what do we do as programmers when we are faced with this problem that in a real code base there's a lot of stuff",
    "start": "757839",
    "end": "763440"
  },
  {
    "text": "that goes on and it doesn't fit in our short-term memory and we have this other memory system called long-term memory",
    "start": "763440",
    "end": "768959"
  },
  {
    "text": "it's very um it's very um uh creative you know short term and then long term",
    "start": "768959",
    "end": "774079"
  },
  {
    "text": "sort of like makes sense anyways um so i remember a couple of years ago i had this opportunity to talk to an",
    "start": "774079",
    "end": "780079"
  },
  {
    "text": "organization that had a lot of legacy code so they asked me to come and see if i could help them with that",
    "start": "780079",
    "end": "785360"
  },
  {
    "text": "and i had a chance to interview some of the people who work with that code base and they one of the programmers was the latest",
    "start": "785360",
    "end": "792000"
  },
  {
    "text": "addition to the team he had been in the team for two years and i i asked him so um so you can still have you know fresh",
    "start": "792000",
    "end": "799040"
  },
  {
    "text": "in memory you know what it was like to start in this code base that already existed when you were hired um",
    "start": "799040",
    "end": "804639"
  },
  {
    "text": "how long would you say it took you before you were able to work on your own in that code base",
    "start": "804639",
    "end": "810880"
  },
  {
    "text": "three months he you know he didn't even think about it he just said it took three months before i was able to work",
    "start": "810880",
    "end": "816240"
  },
  {
    "text": "on my own in this code base so i think what happens in those situations is that",
    "start": "816240",
    "end": "822079"
  },
  {
    "text": "we can't use our short-term memory in order to work with code bases like that so we have to rely on our long-term",
    "start": "822079",
    "end": "828320"
  },
  {
    "text": "memory as well you know instead but the long-term memory works in a completely",
    "start": "828320",
    "end": "833519"
  },
  {
    "text": "different way it takes it tends to take a long time to actually commit information to long-term memory and you",
    "start": "833519",
    "end": "839920"
  },
  {
    "text": "sort of have to reinforce the what you learned in order for the memory to actually stick in order to make it",
    "start": "839920",
    "end": "845920"
  },
  {
    "text": "accessible to you later on so he probably this program he probably spent a lot of time",
    "start": "845920",
    "end": "852079"
  },
  {
    "text": "trying to you know look through the code base and make experimentations within in order to sort of build up a model of the",
    "start": "852079",
    "end": "858560"
  },
  {
    "text": "code in his long-term memory and after having done that for three months he felt that he had a good",
    "start": "858560",
    "end": "864959"
  },
  {
    "text": "enough understanding of that code base that he could actually um work with um",
    "start": "864959",
    "end": "870240"
  },
  {
    "text": "with that code base for himself so it's not that we it's not that we can't write code if",
    "start": "870240",
    "end": "876240"
  },
  {
    "text": "code doesn't fit in our short-term memory it's just very inefficient this explains why we're spending a lot of",
    "start": "876240",
    "end": "881519"
  },
  {
    "text": "time reading existing code because if we're relying on long-term memory we sort of have to spend all of that time",
    "start": "881519",
    "end": "887199"
  },
  {
    "text": "to sort of you know commit things to long-term memory so you'll probably notice that while i've been talking this animation runs",
    "start": "887199",
    "end": "894480"
  },
  {
    "text": "and you know at the beginning we just had some chunks of information but they're sort of you know we keep on adding more",
    "start": "894480",
    "end": "900240"
  },
  {
    "text": "and more of those chunks of information and they try to re you know self-organize so you sort of see this",
    "start": "900240",
    "end": "905519"
  },
  {
    "text": "you know hexagonal grid this honeycomb pattern emerge um so that's sort of like a view of you",
    "start": "905519",
    "end": "912639"
  },
  {
    "text": "know a lot of information that sort of compacted together uh as as compactly as you can do that",
    "start": "912639",
    "end": "919839"
  },
  {
    "text": "so if we want to do something about the readability problem maybe we should start to to try to leverage our long",
    "start": "919839",
    "end": "928079"
  },
  {
    "text": "short-term memory more and rely less on our long-term memory because our short-term memory is quite fast it's",
    "start": "928079",
    "end": "934320"
  },
  {
    "text": "very um ephemeral so you can you can easily you know sort of load some",
    "start": "934320",
    "end": "939519"
  },
  {
    "text": "information into your short term memory but you also know that you can also easily forget those things as well and",
    "start": "939519",
    "end": "944560"
  },
  {
    "text": "that's both a blessing or a curse but if we if we could leverage our short-term",
    "start": "944560",
    "end": "950160"
  },
  {
    "text": "memory more for programming that means we can sort of deal with things in a",
    "start": "950160",
    "end": "955279"
  },
  {
    "text": "much faster way because it doesn't take a you know that long time to commit things to short-term memory you don't really commit it you just sort of get an",
    "start": "955279",
    "end": "962240"
  },
  {
    "text": "idea about how things are you have it in short-term memory we work with it a little bit and then you forget about it again so",
    "start": "962240",
    "end": "968720"
  },
  {
    "text": "even though we have thousands of things going on in a codebase we need to figure out a way to isolate at most seven of",
    "start": "968720",
    "end": "974880"
  },
  {
    "text": "those things and look at you know being able to look at that in isolation so if we take you know seven of those you know",
    "start": "974880",
    "end": "982160"
  },
  {
    "text": "cells out of this hexagonal grid we might arrive at a figure that looks like this one",
    "start": "982160",
    "end": "987600"
  },
  {
    "text": "so this is seven hexagonals you know picked out of a regular grid of hexagons",
    "start": "987600",
    "end": "993440"
  },
  {
    "text": "so i call this a hex flower because i think it looks a little bit like a flower you know with six petals and then",
    "start": "993440",
    "end": "999600"
  },
  {
    "text": "the center of the flower i don't know what that's called but that's that's uh this just sort of like looks looks a little bit like a stylized flower and we",
    "start": "999600",
    "end": "1006399"
  },
  {
    "text": "can think of this figure as a symbol of our short-term memory and again you know",
    "start": "1006399",
    "end": "1011600"
  },
  {
    "text": "i want to remind you that it's not you know it's not that short-term memories it's exactly seven this is just sort of",
    "start": "1011600",
    "end": "1017279"
  },
  {
    "text": "like a symbol it's sort of like a logo for short-term memory if you will um",
    "start": "1017279",
    "end": "1022959"
  },
  {
    "text": "so um if we want to respect the cognitive constraints of our short-term memory we",
    "start": "1022959",
    "end": "1029360"
  },
  {
    "text": "should organize code so that whenever we look at a piece of code there should be at most seven things",
    "start": "1029360",
    "end": "1034798"
  },
  {
    "text": "going on and that that probably means a lot of abstraction so at a certain level of",
    "start": "1034799",
    "end": "1040880"
  },
  {
    "text": "abstraction there should be at most seven things going on but we also know that you know we may have an object that",
    "start": "1040880",
    "end": "1046240"
  },
  {
    "text": "sort of counts as one thing but then if we want to know how that object actually works that's you know when we zoom into one of",
    "start": "1046240",
    "end": "1052480"
  },
  {
    "text": "those things it turns out that that has you know some complexity in itself but if we go and look at that code again",
    "start": "1052480",
    "end": "1058720"
  },
  {
    "text": "we should have organized the code in such a way that there's the most seven things going on because then we can work",
    "start": "1058720",
    "end": "1064559"
  },
  {
    "text": "with our short-term memory instead of working with our long-term memory so so",
    "start": "1064559",
    "end": "1071280"
  },
  {
    "text": "we need this to happen on multiple levels of abstractions in our code base and you can imagine you keep on zooming",
    "start": "1071280",
    "end": "1077840"
  },
  {
    "text": "into more and more details if you will so maybe you arrive at a piece of code like this one",
    "start": "1077840",
    "end": "1083760"
  },
  {
    "text": "and this is a piece of code that sits on a repository class and the responsibility",
    "start": "1083760",
    "end": "1090000"
  },
  {
    "text": "of this one is called create the responsibility of this one is to create a row in the database a relational database and the reason why i wanted to",
    "start": "1090000",
    "end": "1096720"
  },
  {
    "text": "start with this one is that it represents sort of like the most granular level of abstraction",
    "start": "1096720",
    "end": "1103360"
  },
  {
    "text": "in the sense that there's no more user code hiding behind this piece of code",
    "start": "1103360",
    "end": "1109520"
  },
  {
    "text": "we have some objects that are being instantiated here but the objects sql connection sql command those are",
    "start": "1109520",
    "end": "1115120"
  },
  {
    "text": "framework code these come from the dot net framework they're not our own code so unless we want to go and read the",
    "start": "1115120",
    "end": "1121600"
  },
  {
    "text": "source code for the.net framework there's really nothing more we can do from here we can't zoom in and and go",
    "start": "1121600",
    "end": "1127760"
  },
  {
    "text": "and look at the definition of you know how does sql command actually work because we don't have you know easy",
    "start": "1127760",
    "end": "1133360"
  },
  {
    "text": "access to that source code so so that's sort of like the the lowest level of abstraction",
    "start": "1133360",
    "end": "1139919"
  },
  {
    "text": "so we can ask ourselves you know the question is this code readable and again instead of having the kindergarten",
    "start": "1139919",
    "end": "1146080"
  },
  {
    "text": "argument where you know you're relying entirely on such subjectivity we can try to use you know some quantification or",
    "start": "1146080",
    "end": "1153039"
  },
  {
    "text": "some measures to to quantify these things and say if there's more than seven things going on it probably",
    "start": "1153039",
    "end": "1158160"
  },
  {
    "text": "doesn't fit in our short-term memory so that makes it less readable so so one of the",
    "start": "1158160",
    "end": "1163280"
  },
  {
    "text": "types of analysis we can try to do is what i just talked about before cyclomatic complexity we can sort of try",
    "start": "1163280",
    "end": "1168720"
  },
  {
    "text": "to measure how many different pathways do we have through this particular you know method and there's only two because",
    "start": "1168720",
    "end": "1174960"
  },
  {
    "text": "you know either reservation is null and we throw an exception straight away or we run",
    "start": "1174960",
    "end": "1180080"
  },
  {
    "text": "through the rest of the code and so so that's that's pretty pretty pretty good if we're thinking about",
    "start": "1180080",
    "end": "1185679"
  },
  {
    "text": "cyclomatic complexity as this thing where we represent two alternate realities that are superimposed on top",
    "start": "1185679",
    "end": "1190880"
  },
  {
    "text": "of each other that's two things that we sort of have to keep track of at the same time in our brain but if we can",
    "start": "1190880",
    "end": "1196480"
  },
  {
    "text": "keep a track of seven that's fine that's well within capacity so according to that measurement this code",
    "start": "1196480",
    "end": "1202159"
  },
  {
    "text": "should fit in our head now we can also try to figure out if there's some state that we need to keep",
    "start": "1202159",
    "end": "1207360"
  },
  {
    "text": "track of so just as a course measurement you know unsophisticated way of",
    "start": "1207360",
    "end": "1212640"
  },
  {
    "text": "measuring this thing we can just try to count every object that's actually being involved here so we have a restaurant id",
    "start": "1212640",
    "end": "1218799"
  },
  {
    "text": "that's one method argument we have this thing called reservation that's two we have something called the connection",
    "start": "1218799",
    "end": "1223919"
  },
  {
    "text": "string you can't really see where that comes from but that's a read-only property and if there are people here who are not sharp developers a property",
    "start": "1223919",
    "end": "1230960"
  },
  {
    "text": "is just a glorified class field basically so this is a reader in the class field it's a string it just contains the information about how do we",
    "start": "1230960",
    "end": "1237520"
  },
  {
    "text": "connect to the database so we use that to create a connection object i'm just going to keep on counting here",
    "start": "1237520",
    "end": "1244960"
  },
  {
    "text": "i use that connection object together with something called create reservation sql that's another string it's not a",
    "start": "1244960",
    "end": "1250640"
  },
  {
    "text": "it's not a class field it's just a constant string that just contains all the the actual you know t sql code that",
    "start": "1250640",
    "end": "1256400"
  },
  {
    "text": "will be executed against this the sql server and then we use those you know that one",
    "start": "1256400",
    "end": "1261840"
  },
  {
    "text": "and the connection to you know create a command object so that's six things and then there's actually no more things",
    "start": "1261840",
    "end": "1267760"
  },
  {
    "text": "being created here so that's that's six things so if all of those things were mutable",
    "start": "1267760",
    "end": "1273039"
  },
  {
    "text": "objects that had that would potentially keep you know change state we might still be able to follow along",
    "start": "1273039",
    "end": "1280159"
  },
  {
    "text": "here because we can keep track of about seven things and there are six things going on here so yeah we're sort of",
    "start": "1280159",
    "end": "1286480"
  },
  {
    "text": "we're probably good you know seven plus minus two maybe six is a little bit too much but we're probably good and i think",
    "start": "1286480",
    "end": "1291840"
  },
  {
    "text": "we're we're better off than that because it turns out that you know the things that actually do do change state is con",
    "start": "1291840",
    "end": "1298159"
  },
  {
    "text": "and command you'll notice command changes state six times just after it's been created because we add parameters",
    "start": "1298159",
    "end": "1304640"
  },
  {
    "text": "to it and then towards the end we change the state of the connection because we open the connection to the database and",
    "start": "1304640",
    "end": "1309840"
  },
  {
    "text": "then we execute a query against it but all the other things actually don't change state",
    "start": "1309840",
    "end": "1315679"
  },
  {
    "text": "and there's a natural explanation for that because if you're thinking about the first one restaurant id for example",
    "start": "1315679",
    "end": "1320720"
  },
  {
    "text": "you say oh but that's an int and ins are immutable they're not going to change state and that that means it's",
    "start": "1320720",
    "end": "1327200"
  },
  {
    "text": "not going to tax our memory quite as much because it's not really you know i'm not saying that the value is not",
    "start": "1327200",
    "end": "1332480"
  },
  {
    "text": "important you know this integer when i'm not branching on this particular integer but i might branch on an integer i might",
    "start": "1332480",
    "end": "1338400"
  },
  {
    "text": "say you know i might have some other code that says well if the integers is less than zero i'm going to do one thing and if smaller than zero i'm gonna do",
    "start": "1338400",
    "end": "1344400"
  },
  {
    "text": "something else but at least it's not gonna change state even in in a case like that",
    "start": "1344400",
    "end": "1350159"
  },
  {
    "text": "um so things that don't change state are a little bit easier on our you know memory",
    "start": "1350159",
    "end": "1355200"
  },
  {
    "text": "we can we can think we don't have to sort of think about them that much so that also goes for strings so you",
    "start": "1355200",
    "end": "1361840"
  },
  {
    "text": "know the the two values labeled three and five those are strings though they are immutable as well so they're not",
    "start": "1361840",
    "end": "1367200"
  },
  {
    "text": "going to change so it means that basically you know con and command and maybe reservation are",
    "start": "1367200",
    "end": "1372799"
  },
  {
    "text": "going to change now it turns out that i've written reservation in the way that it's an immutable class",
    "start": "1372799",
    "end": "1379520"
  },
  {
    "text": "and i've done it you know for various different reasons but one of the reasons is exactly this you know immutable things are just easier on the brain",
    "start": "1379520",
    "end": "1386159"
  },
  {
    "text": "because they're not you're going to kind of change state so i basically designed most of my domain code in this code base as it",
    "start": "1386159",
    "end": "1393039"
  },
  {
    "text": "being immutable classes because that's just easier to think about less taxing on the brain",
    "start": "1393039",
    "end": "1400158"
  },
  {
    "text": "so this is also you know what in domain design is called a value object not a value type but a value object",
    "start": "1400240",
    "end": "1407200"
  },
  {
    "text": "so so we can be more sophisticated with this kind of analysis but even if we're just being unsophisticated and just",
    "start": "1407200",
    "end": "1412240"
  },
  {
    "text": "count all the variables it's sort of like yeah we are within the capacity of of six we can try to enumerate them or",
    "start": "1412240",
    "end": "1418320"
  },
  {
    "text": "just for the sake of illustration we can you know try to associate each of those things that we have to keep track of in",
    "start": "1418320",
    "end": "1423760"
  },
  {
    "text": "us in in our brain with one of those cells in our short-term memory so again i remind you this hex flower is just",
    "start": "1423760",
    "end": "1430400"
  },
  {
    "text": "sort of like the logo for um for for our short-term memory",
    "start": "1430400",
    "end": "1436400"
  },
  {
    "text": "so um so that's sort of like the idea that as long as you can sort of fit things inside that structure",
    "start": "1436400",
    "end": "1444080"
  },
  {
    "text": "it fits your short-term memory right okay so so you might say okay so",
    "start": "1444080",
    "end": "1450480"
  },
  {
    "text": "we started by the first example that i showed you here the create method that's the lowest level of abstraction this is where",
    "start": "1450480",
    "end": "1456960"
  },
  {
    "text": "there's no more user code hidden behind behind that method because you're just calling into framework code you're",
    "start": "1456960",
    "end": "1462400"
  },
  {
    "text": "calling into sql connection and sql command but we're probably going to have some",
    "start": "1462400",
    "end": "1467679"
  },
  {
    "text": "other user code you know in my code base i'm going to have code that calls that create method",
    "start": "1467679",
    "end": "1473520"
  },
  {
    "text": "so you might say well but there's six things going on inside of that create method and so if",
    "start": "1473520",
    "end": "1479840"
  },
  {
    "text": "if i need to think about those six things and then on the next level of abstraction when i'm looking at code",
    "start": "1479840",
    "end": "1485279"
  },
  {
    "text": "that calls that you know if that if those numbers compound that's not gonna work because then i'm",
    "start": "1485279",
    "end": "1491840"
  },
  {
    "text": "gonna exceed my threshold of seven very quickly so it's it's really important to make sure that when we're looking at you",
    "start": "1491840",
    "end": "1498720"
  },
  {
    "text": "know things from the next level up you know whatever complexity this in an object or in a method that should",
    "start": "1498720",
    "end": "1504799"
  },
  {
    "text": "collapse into just being one thing one chunk of information because otherwise our brains cannot keep track of it so if",
    "start": "1504799",
    "end": "1511760"
  },
  {
    "text": "we want to be able to zoom out and say okay on other levels of abstraction you know whatever was inside of you know",
    "start": "1511760",
    "end": "1518640"
  },
  {
    "text": "each of those things is just going to collapse and and we should be able to think about that as being one chunk",
    "start": "1518640",
    "end": "1524799"
  },
  {
    "text": "because we if we can't we can't fit the code in our short-term memory and then we have to rely on long-term memory",
    "start": "1524799",
    "end": "1530640"
  },
  {
    "text": "which is much more inefficient all right so this this applies all the way to the",
    "start": "1530640",
    "end": "1537600"
  },
  {
    "text": "entry point of the application so the entry point of the application looks like this this should also fit in",
    "start": "1537600",
    "end": "1543200"
  },
  {
    "text": "your head and i don't want to make this i don't want to turn this into a an asp.net",
    "start": "1543200",
    "end": "1549440"
  },
  {
    "text": "you know tutorial but that's the that's the code that i used so this was basically created by",
    "start": "1549440",
    "end": "1554720"
  },
  {
    "text": "wizard i didn't write this code this is the visual studio i said okay i'm going to create a new asp.net",
    "start": "1554720",
    "end": "1559840"
  },
  {
    "text": "application okay here's your entry point um so if you've ever seen things like that you know all the interesting stuff",
    "start": "1559840",
    "end": "1565760"
  },
  {
    "text": "happens inside a class called startup but at least we could we can still you know try to count things and say okay so",
    "start": "1565760",
    "end": "1571360"
  },
  {
    "text": "what's the cyclomatic complexity here it's just one there's really no branching going on you know how many",
    "start": "1571360",
    "end": "1576559"
  },
  {
    "text": "things are involved it's just those two things are involved so that's fine i don't have any problem with that um so i",
    "start": "1576559",
    "end": "1583200"
  },
  {
    "text": "can move on and look at the startup class which is where all the interesting things are happening but the point is",
    "start": "1583200",
    "end": "1588799"
  },
  {
    "text": "whenever we want to you know look at another level of detail you know all the surrounding stuff that that exists at",
    "start": "1588799",
    "end": "1594720"
  },
  {
    "text": "one level of abstraction should now you know go out of scope so if i want to look at startup",
    "start": "1594720",
    "end": "1600320"
  },
  {
    "text": "i i need to be able to understand startup without understanding that there's a thing called arcs or there's a",
    "start": "1600320",
    "end": "1605840"
  },
  {
    "text": "thing called web builder and fortunately that turns out to be the case so here we just have the public api of the startup",
    "start": "1605840",
    "end": "1613200"
  },
  {
    "text": "class and if you've ever seen one of those things before you'll note that by convention it has these two configure methods and again this is not an asp.net",
    "start": "1613200",
    "end": "1621039"
  },
  {
    "text": "tutorial so it's not really that important it's also a constructor that takes a configuration object as input and that",
    "start": "1621039",
    "end": "1627679"
  },
  {
    "text": "configuration object is then later on available as um as a property or you",
    "start": "1627679",
    "end": "1632799"
  },
  {
    "text": "know qualified class fields um so so i sort of count those as as one thing",
    "start": "1632799",
    "end": "1639120"
  },
  {
    "text": "so basically at that level of abstraction there's not a lot of stuff going on so it fits in our brain it's",
    "start": "1639120",
    "end": "1644480"
  },
  {
    "text": "easy it's easy enough to sort of just look at that with our short-term memory even if you haven't seen this before",
    "start": "1644480",
    "end": "1650159"
  },
  {
    "text": "that's the entire point you can say okay i understand it at that level of abstraction there's there's not a lot of",
    "start": "1650159",
    "end": "1656159"
  },
  {
    "text": "there's no detail here but you know at least i'm not confused at this level",
    "start": "1656159",
    "end": "1661440"
  },
  {
    "text": "so now you can say well i want to look at what happens inside some of those things and if you've seen asp.net code",
    "start": "1661440",
    "end": "1666960"
  },
  {
    "text": "before you know that most of the interesting things happen in configure services and again if you if you go and",
    "start": "1666960",
    "end": "1672320"
  },
  {
    "text": "look at configure services you should be able to look at configure services without understanding what's happening",
    "start": "1672320",
    "end": "1677600"
  },
  {
    "text": "over in configure because if you also have to understand what happens in configure you know that's going to",
    "start": "1677600",
    "end": "1682640"
  },
  {
    "text": "overload your brain so each of these things sort of have to have you know a scope where your brain can work inside of that",
    "start": "1682640",
    "end": "1689600"
  },
  {
    "text": "scope and understand what's going on so if we look at this code again we can",
    "start": "1689600",
    "end": "1694720"
  },
  {
    "text": "try to ask ourselves the question you know is this readable and and again i don't want to rely on subjective",
    "start": "1694720",
    "end": "1700559"
  },
  {
    "text": "judgment so i can say let's try to quantify it and again i want to reiterate that this these sorts of",
    "start": "1700559",
    "end": "1705919"
  },
  {
    "text": "quantifications like looking at cyclomatic complexity you're just counting the objects that are activated",
    "start": "1705919",
    "end": "1712559"
  },
  {
    "text": "it's it's not that it's not a rigid measurement it's and it's not something where you can where you should sort of",
    "start": "1712559",
    "end": "1718480"
  },
  {
    "text": "set a target goal as such but it gives you an opportunity to have a discussion about you know when things become too",
    "start": "1718480",
    "end": "1725520"
  },
  {
    "text": "complex so um so if we're trying to ask the question or answer the question of this",
    "start": "1725520",
    "end": "1730799"
  },
  {
    "text": "this readable or not we can say what's the cyclomatic complexity here because that might be one one dimension we might",
    "start": "1730799",
    "end": "1735840"
  },
  {
    "text": "want to consider and it says it's it's one there's just a straight line through this code there's no branching there's",
    "start": "1735840",
    "end": "1741120"
  },
  {
    "text": "no looping going on so it's pretty straightforward what about object activation how many objects are involved here and it turns",
    "start": "1741120",
    "end": "1748159"
  },
  {
    "text": "out that there are six optics involved now these ones most of these ones are actually mutable objects so it's they're",
    "start": "1748159",
    "end": "1754720"
  },
  {
    "text": "a little bit more taxing on our brain if we want to actually go through and look at that because these things can change",
    "start": "1754720",
    "end": "1761600"
  },
  {
    "text": "state and they do so this is probably more on the edge of what's actually you know fitting in our",
    "start": "1761600",
    "end": "1768159"
  },
  {
    "text": "short-term memory than the other examples that i showed you but i don't want to go into a detailed",
    "start": "1768159",
    "end": "1773440"
  },
  {
    "text": "analysis of this so let's just leave it at that so you'll notice that i have a little bit of you know the code",
    "start": "1773440",
    "end": "1778960"
  },
  {
    "text": "continues below this the screen here but there's really nothing i did it's not a trick i didn't hide anything important",
    "start": "1778960",
    "end": "1785039"
  },
  {
    "text": "for for from you but the point is again you know at this level of abstraction the code fits in",
    "start": "1785039",
    "end": "1791120"
  },
  {
    "text": "our in our short-term memory and it's not that you're getting all the answers to to all the questions that you might",
    "start": "1791120",
    "end": "1797600"
  },
  {
    "text": "have if you're trying to understand what's going on in this code base you're still you're still you know getting some",
    "start": "1797600",
    "end": "1802640"
  },
  {
    "text": "high level information and maybe you are at least getting enough information that it's it's sort of easy",
    "start": "1802640",
    "end": "1809919"
  },
  {
    "text": "to figure out what to do next so if you want to know something about for example you know how what's the security model",
    "start": "1809919",
    "end": "1815840"
  },
  {
    "text": "of this system uh do i require you know some sort of log on maybe you can see oh they have this",
    "start": "1815840",
    "end": "1822320"
  },
  {
    "text": "thing called configure authorization maybe i should go and have a look there if if that's what i'm interested in and",
    "start": "1822320",
    "end": "1828559"
  },
  {
    "text": "if i go and look at that method again it should be organized in the same way so it should be organized so that at most",
    "start": "1828559",
    "end": "1834799"
  },
  {
    "text": "seven things are going on and and again if i go and and navigate to that method",
    "start": "1834799",
    "end": "1839919"
  },
  {
    "text": "in order to understand the code there i shouldn't have to remember what",
    "start": "1839919",
    "end": "1844960"
  },
  {
    "text": "happened at this level of abstraction so all the stuff that we're looking at at the moment should now become irrelevant",
    "start": "1844960",
    "end": "1850240"
  },
  {
    "text": "in order for me to understand what happens inside of configure authorization and the same thing goes you know if you're more interested in",
    "start": "1850240",
    "end": "1856480"
  },
  {
    "text": "looking at what happens with the persistent storage in this system you might say oh repository that sounds",
    "start": "1856480",
    "end": "1862799"
  },
  {
    "text": "promising maybe i can learn about the storage system uh if i go and look at that and again if you navigate to that",
    "start": "1862799",
    "end": "1869279"
  },
  {
    "text": "method you should be able to learn something about you know how the you know the storage system is working you",
    "start": "1869279",
    "end": "1874320"
  },
  {
    "text": "know how sql server is configured but what happened inside of configure authorization or what's later gonna",
    "start": "1874320",
    "end": "1880960"
  },
  {
    "text": "happen inside of you know configure restaurant or configure clock should not be important in order to understand what",
    "start": "1880960",
    "end": "1886720"
  },
  {
    "text": "happens inside of configure repositories so you know each level of abstraction should come with its own scope of",
    "start": "1886720",
    "end": "1893200"
  },
  {
    "text": "understanding and you have to be quite deliberate about designing you know what's in scope and what's outside of",
    "start": "1893200",
    "end": "1898880"
  },
  {
    "text": "scope you know one of the things that really kills our understanding of things is we if we have global variables and i think",
    "start": "1898880",
    "end": "1905200"
  },
  {
    "text": "most of us know that global variables are really evil but the problem with global variables is exactly is that",
    "start": "1905200",
    "end": "1910240"
  },
  {
    "text": "they're not visible they're not in scope but they might still affect how the code actually executes and again you know the",
    "start": "1910240",
    "end": "1916399"
  },
  {
    "text": "computer doesn't care there was this famous incident a famous problem with toyota they had this thing",
    "start": "1916399",
    "end": "1922000"
  },
  {
    "text": "called the unintended acceleration um bug i think they call it um they probably didn't call it a bug but but",
    "start": "1922000",
    "end": "1928399"
  },
  {
    "text": "there was this thing that actually killed people because sometimes the the toyota computer would decide to accelerate instead of break and",
    "start": "1928399",
    "end": "1936000"
  },
  {
    "text": "they had a um they had a consultant look through the code and he counted you know",
    "start": "1936000",
    "end": "1942000"
  },
  {
    "text": "he said they had about 10 000 global variables in their code and again you know the computer doesn't",
    "start": "1942000",
    "end": "1948000"
  },
  {
    "text": "care it's just gonna say okay i put all those 10 10 000 global variables in ram and i can",
    "start": "1948000",
    "end": "1954000"
  },
  {
    "text": "access ram you know as i'd like to do by the way have you ever wondered about why is it called random access memory it",
    "start": "1954000",
    "end": "1959919"
  },
  {
    "text": "ought to be called arbitrary hack you know access memory aam",
    "start": "1959919",
    "end": "1966240"
  },
  {
    "text": "it's not random it's very deterministic you know i want that address you're not saying i give me some random data from",
    "start": "1966240",
    "end": "1972480"
  },
  {
    "text": "your from your memory okay okay anyways okay that's that's completely besides the point",
    "start": "1972480",
    "end": "1978559"
  },
  {
    "text": "um but anyways so um so the point is you know so this is a little bit of an ad hoc enumeration",
    "start": "1978559",
    "end": "1984799"
  },
  {
    "text": "but basically organize code so that there's not too much stuff going on and it's going to be easier just to work",
    "start": "1984799",
    "end": "1991919"
  },
  {
    "text": "with your short-term memory you go and look at the code and you say yeah okay i think i get it you know at this level of",
    "start": "1991919",
    "end": "1997919"
  },
  {
    "text": "abstraction i sort of understand what's going on and and then you sort of find the place where you need to work with the code and",
    "start": "1997919",
    "end": "2004399"
  },
  {
    "text": "you see and you work with the code and you again you you sort of work with your short-term memory and say yeah i get it",
    "start": "2004399",
    "end": "2009440"
  },
  {
    "text": "i sort of understand what's going on and then once you're done working with the code you commit the changes and maybe",
    "start": "2009440",
    "end": "2015279"
  },
  {
    "text": "you push them to a pull request or push them to master whatever it is and you walk away from the code and you completely forget about it because short",
    "start": "2015279",
    "end": "2021440"
  },
  {
    "text": "term memory as soon as you're not working with the stuff anymore you've forgotten it but it's not a problem",
    "start": "2021440",
    "end": "2026559"
  },
  {
    "text": "because if you want to come back to it it takes you not a lot of time to actually sort of come back into you know what's going on",
    "start": "2026559",
    "end": "2032960"
  },
  {
    "text": "there it doesn't require a lot of painstaking you know okay you can't you can't disturb me for the next three",
    "start": "2032960",
    "end": "2039039"
  },
  {
    "text": "hours because i need to work with this code you know it's basically just yeah i'm just gonna use a couple of minutes to sort of look this through and say",
    "start": "2039039",
    "end": "2044480"
  },
  {
    "text": "yeah okay i sort of sort of get it there's still still going to be a lot of searching you know finding the right place and so on but it's just law that",
    "start": "2044480",
    "end": "2050800"
  },
  {
    "text": "you don't have to rely so much on your long-term memory so one thing that i am i promise to get",
    "start": "2050800",
    "end": "2057839"
  },
  {
    "text": "back to is the question of um you know if we are looking at things from a higher level of abstraction how do we",
    "start": "2057839",
    "end": "2065118"
  },
  {
    "text": "know that um how do we know that we are",
    "start": "2065119",
    "end": "2070560"
  },
  {
    "text": "that we're not leaking details uh let's see if i want to look at this one",
    "start": "2070720",
    "end": "2076878"
  },
  {
    "text": "actually i want to go back and i can't go back because of all my animations so i'm going to do this and then i'm",
    "start": "2076879",
    "end": "2083839"
  },
  {
    "text": "going to restart it again no not that this this also advances you know automatically let's see okay we'll go",
    "start": "2083839",
    "end": "2089919"
  },
  {
    "text": "here okay right now okay so so uh so what i wanted to do here was to",
    "start": "2089919",
    "end": "2095839"
  },
  {
    "text": "talk about okay how do we ensure that you know all the complexity that might be",
    "start": "2095839",
    "end": "2101680"
  },
  {
    "text": "contained at a certain level of abstraction that that complexity doesn't escape to the next level because if you",
    "start": "2101680",
    "end": "2107839"
  },
  {
    "text": "have stuff going on at one level of abstraction you know at the next level of abstraction you want that thing to be",
    "start": "2107839",
    "end": "2113359"
  },
  {
    "text": "just one thing this is basically you know what bertrand maya talked about when he talked about object-oriented",
    "start": "2113359",
    "end": "2118880"
  },
  {
    "text": "design back in the 1980s you know he was the guy who invented this language called eiffel wrote a quite uh important",
    "start": "2118880",
    "end": "2125839"
  },
  {
    "text": "book about object-oriented design called object-oriented software construction and um and he talked about this the idea",
    "start": "2125839",
    "end": "2132560"
  },
  {
    "text": "of an object is basically to have something that he calls you know an abstract data type so it's sort of like",
    "start": "2132560",
    "end": "2138240"
  },
  {
    "text": "it's a data type that it contains data but you don't really know how it's implemented you just know how to",
    "start": "2138240",
    "end": "2143440"
  },
  {
    "text": "interact with the objects so you can think of an object you know of arbitrary complexity as being just one thing",
    "start": "2143440",
    "end": "2150240"
  },
  {
    "text": "and in in the science of experimental psychology that one thing instead of calling it an object we call it a chunk",
    "start": "2150240",
    "end": "2157040"
  },
  {
    "text": "so that's sort of the thing we want to to be able to do we want to to be able to look at at",
    "start": "2157040",
    "end": "2164000"
  },
  {
    "text": "a module or think you know a collection of code from the outside and think of it as as being one thing that",
    "start": "2164000",
    "end": "2171200"
  },
  {
    "text": "is the point of encapsulation so in general encapsulation it turns out to be a",
    "start": "2171200",
    "end": "2176640"
  },
  {
    "text": "really important thing um and there's a you know there are multiple books about you know how to",
    "start": "2176640",
    "end": "2181920"
  },
  {
    "text": "write code with with good encapsulation well you can read um but um",
    "start": "2181920",
    "end": "2188000"
  },
  {
    "text": "but there's a there's a there's an easier shortcut that you can sometimes you actually quite often use and and i",
    "start": "2188000",
    "end": "2193839"
  },
  {
    "text": "want to talk specifically about that one so in general there's a lot of art and a lot of you know learned knowledge about",
    "start": "2193839",
    "end": "2200079"
  },
  {
    "text": "you know how do you write code with good encapsulation and there are lots of rules of thumb um but but if you can do it in a",
    "start": "2200079",
    "end": "2206400"
  },
  {
    "text": "specific way it actually becomes fairly easy so that's why i wanted to talk about this allocate method that i you know",
    "start": "2206400",
    "end": "2212800"
  },
  {
    "text": "accidentally zoomed in on a little bit too early so this is the allocate method that you've looked at already",
    "start": "2212800",
    "end": "2219280"
  },
  {
    "text": "and this one you know has a little bit of complexity because i already talked about this sort of the psychomatic",
    "start": "2219280",
    "end": "2225280"
  },
  {
    "text": "complexity of three and you know if we allow that complexity to escape you know if it leaks out into",
    "start": "2225280",
    "end": "2232800"
  },
  {
    "text": "the next layer of abstraction if if i have to think about those three pathways",
    "start": "2232800",
    "end": "2237920"
  },
  {
    "text": "through that code whenever i'm thinking about the allocate method that's looking at from the outside then i've used",
    "start": "2237920",
    "end": "2243599"
  },
  {
    "text": "almost half my budget if my budget is seven so that's not going to work also if we are trying to be just core",
    "start": "2243599",
    "end": "2249440"
  },
  {
    "text": "screened and count all the variables that are involved here there's actually six things going on here so you might",
    "start": "2249440",
    "end": "2255119"
  },
  {
    "text": "wonder why it's always six and the reason for that is i i tried to take my own medicine when i um when i",
    "start": "2255119",
    "end": "2261599"
  },
  {
    "text": "wrote this all the code for the book so i was i would actually go and look at those measurements and whenever i would reach",
    "start": "2261599",
    "end": "2268240"
  },
  {
    "text": "you know seven i would say okay that's kind of good that's becoming a little bit too much so i'm going to refactor the code but you know i left a lot of",
    "start": "2268240",
    "end": "2274320"
  },
  {
    "text": "things in in the code where the number was still six because i thought okay that's just one below uh the the limit i",
    "start": "2274320",
    "end": "2281760"
  },
  {
    "text": "can get by i can live with that so that's that you'll find that you know throughout the code base",
    "start": "2281760",
    "end": "2287200"
  },
  {
    "text": "um so anyways also you know that kind of complexity cannot be allowed we can't",
    "start": "2287200",
    "end": "2292640"
  },
  {
    "text": "allow that to escape uh to the you know to the outside to the caller of the",
    "start": "2292640",
    "end": "2297839"
  },
  {
    "text": "allocate method because then we've used the entire budget of our short-term memory so we can't you know we can't",
    "start": "2297839",
    "end": "2303760"
  },
  {
    "text": "require that the caller understands all of this stuff this has to collapse to just being you know one chunk",
    "start": "2303760",
    "end": "2311599"
  },
  {
    "text": "and i would claim that that is also the case the this allocate method does not",
    "start": "2311599",
    "end": "2317599"
  },
  {
    "text": "leak implementation details and there's a very specific reason for that now first of all this code this particular",
    "start": "2317599",
    "end": "2324160"
  },
  {
    "text": "code has no side effects okay so side effects are things that you know change the observable state of the system so",
    "start": "2324160",
    "end": "2329760"
  },
  {
    "text": "that might be uh you know sending an email and you can look at this and this and you can say does it look like it's",
    "start": "2329760",
    "end": "2334880"
  },
  {
    "text": "sending email it doesn't really look like that um it might be you know writing to a file on disk and you can",
    "start": "2334880",
    "end": "2341280"
  },
  {
    "text": "look at this and say does it look like it's writing two files on disk now it doesn't really look like that and you can sort of think through various",
    "start": "2341280",
    "end": "2347760"
  },
  {
    "text": "different things that might mutate state and you can say it doesn't really look like it's mutating state it actually is it it's mutating the",
    "start": "2347760",
    "end": "2354960"
  },
  {
    "text": "allocation but that you know mutation never escapes the scope um so um you",
    "start": "2354960",
    "end": "2360160"
  },
  {
    "text": "know as seen from the outside it doesn't change observable state",
    "start": "2360160",
    "end": "2365520"
  },
  {
    "text": "so um so there's no side effects that's interesting uh it turns out that this allocate method also has another good",
    "start": "2365520",
    "end": "2372480"
  },
  {
    "text": "quality and it is that you know the same input will always return the same output so again let's have a look at this you",
    "start": "2372480",
    "end": "2378960"
  },
  {
    "text": "know if the reservations is always you know contains the same values and we also have this thing called tables which",
    "start": "2378960",
    "end": "2385599"
  },
  {
    "text": "is a read-only property you know like a glorified class field you know if that always contains the same data",
    "start": "2385599",
    "end": "2392560"
  },
  {
    "text": "then this method will always you know run through the same you know sequence of of",
    "start": "2392560",
    "end": "2398480"
  },
  {
    "text": "things and return the same output it's deterministic so those two things together you know",
    "start": "2398480",
    "end": "2405119"
  },
  {
    "text": "deterministic behavior and no side effect it has a name this is called a pure function",
    "start": "2405119",
    "end": "2411119"
  },
  {
    "text": "and the nice thing about pure functions in this context is that they're what we call referentially transparent and it's",
    "start": "2411119",
    "end": "2417599"
  },
  {
    "text": "it's one of those things again where let's come up with a good name that sounds really scary so that people don't",
    "start": "2417599",
    "end": "2422720"
  },
  {
    "text": "understand what we are talking about and really what it means is that you know",
    "start": "2422720",
    "end": "2428079"
  },
  {
    "text": "when things are referentially transparent it means that the function call and the result that it produces are",
    "start": "2428079",
    "end": "2434640"
  },
  {
    "text": "equal to each other you don't actually need to put to run the execution in order to get the results if you already",
    "start": "2434640",
    "end": "2440640"
  },
  {
    "text": "know what the result is you don't have to call the method um so um so sometimes for example to you know illustrate this",
    "start": "2440640",
    "end": "2447200"
  },
  {
    "text": "point what you could do is you could say um if you have any if you have a",
    "start": "2447200",
    "end": "2452319"
  },
  {
    "text": "calculation that takes a long time to run for example you might say okay so if i've you know made the calculation once",
    "start": "2452319",
    "end": "2458480"
  },
  {
    "text": "i could create a little dictionary where i key the dictionary by the input and then i can just save the output in the",
    "start": "2458480",
    "end": "2464400"
  },
  {
    "text": "dictionary and so next time someone comes by we can just look it up in the dictionary we don't have to actually call the function this is a technique",
    "start": "2464400",
    "end": "2471040"
  },
  {
    "text": "called minimization it's it's pretty much like caching it's just in with the difference that things never",
    "start": "2471040",
    "end": "2477200"
  },
  {
    "text": "become stale because you know once you know the the the output once one time you always know the",
    "start": "2477200",
    "end": "2484160"
  },
  {
    "text": "output so this is interesting because it means that all the stuff that's happening inside of allocator okay it's not a lot",
    "start": "2484160",
    "end": "2490480"
  },
  {
    "text": "but still there's a little bit of stuff going on it's it's equal to the output the output",
    "start": "2490480",
    "end": "2495920"
  },
  {
    "text": "is an innumerable of table that's basically just a collection of tables and you know a collection of tables or",
    "start": "2495920",
    "end": "2501920"
  },
  {
    "text": "an allocation that's actually what we're returning here that sounds like one thing you know we can think of that",
    "start": "2501920",
    "end": "2508319"
  },
  {
    "text": "as one thing and we don't really care exactly about you know how we arrived at that allocation of tables we just now",
    "start": "2508319",
    "end": "2513839"
  },
  {
    "text": "you know on the next level out we just need to know that here is the thing that represents an allocation of tables so",
    "start": "2513839",
    "end": "2521040"
  },
  {
    "text": "because it's referentially transparent this code is equal to whatever it is that it outputs and that means it just",
    "start": "2521040",
    "end": "2527280"
  },
  {
    "text": "collapses into being equal to its its output it's one thing and",
    "start": "2527280",
    "end": "2532960"
  },
  {
    "text": "how it arrives at that decision does not leak out into the next level of abstraction so referential transparency",
    "start": "2532960",
    "end": "2539920"
  },
  {
    "text": "is a really important way of making sure that things don't leak there are other ways you can do it there's other ways to",
    "start": "2539920",
    "end": "2545680"
  },
  {
    "text": "to to think about encapsulation but i find this one to be the easiest",
    "start": "2545680",
    "end": "2550880"
  },
  {
    "text": "one because there's actually you know fairly rigid rules for you know what constitutes a pure function",
    "start": "2550880",
    "end": "2557119"
  },
  {
    "text": "so so that's at least a nice way of doing that so to to reiterate um",
    "start": "2557119",
    "end": "2562560"
  },
  {
    "text": "we need to be able to look at code at various different levels of abstractions we need to be able to zoom in we need to",
    "start": "2562560",
    "end": "2568400"
  },
  {
    "text": "be able to zoom out of the code and we always need to respect our",
    "start": "2568400",
    "end": "2573680"
  },
  {
    "text": "you know the constraint of our short term memory that's going to make our code much easier to work with so at the",
    "start": "2573680",
    "end": "2579280"
  },
  {
    "text": "entry point of the application it might look like this and we want to be able to zoom in on things and also go and say",
    "start": "2579280",
    "end": "2585040"
  },
  {
    "text": "okay what's what's happening inside of of each of those levels of abstraction so you know if we if we think about an",
    "start": "2585040",
    "end": "2591520"
  },
  {
    "text": "arbitrary level of abstraction you can say well there's at most seven things going on but we also do understand that even",
    "start": "2591520",
    "end": "2597920"
  },
  {
    "text": "though we don't have to think about it and each of those cells might you know have another seven things going on and",
    "start": "2597920",
    "end": "2605599"
  },
  {
    "text": "then you know now we have 49 things and we can't you know keep track of that in our head but we understand that that's the reality of things and then we also",
    "start": "2605599",
    "end": "2612480"
  },
  {
    "text": "understand that each of those 49 things you know if we organize our code in this way each of those 49 things may contain",
    "start": "2612480",
    "end": "2618640"
  },
  {
    "text": "you know another seven things and these might contain another seven things and so on",
    "start": "2618640",
    "end": "2624800"
  },
  {
    "text": "ah that's funny that that it looks like this okay let's okay so this is really",
    "start": "2624800",
    "end": "2630000"
  },
  {
    "text": "looking funny let's see uh anyways okay so i don't know why it's doing that",
    "start": "2630000",
    "end": "2639119"
  },
  {
    "text": "let's let's give it one more shot yeah it's i've never seen it do this before but",
    "start": "2639680",
    "end": "2645920"
  },
  {
    "text": "basically the idea is that you should have this more lace-like pattern here maybe we can look at it later on but",
    "start": "2645920",
    "end": "2651920"
  },
  {
    "text": "this is a fractal that's that's basically the point i was trying to make um and if you if you were hoping to see",
    "start": "2651920",
    "end": "2657520"
  },
  {
    "text": "mental broad sets or something like that you know say that's not a fractal well it would be a fractal if it would",
    "start": "2657520",
    "end": "2662800"
  },
  {
    "text": "actually render correctly i don't know why it does that but there's another famous fractal",
    "start": "2662800",
    "end": "2668400"
  },
  {
    "text": "called a snowflake and this basically just goes you start with something very simple and then you just",
    "start": "2668400",
    "end": "2673839"
  },
  {
    "text": "keep on subdividing straight lines into those triangles and you get this snowflake thing uh here and this is a",
    "start": "2673839",
    "end": "2680319"
  },
  {
    "text": "you know well-known mathematical fractal this is definitely considered to be a fractal you can keep on zooming in on",
    "start": "2680319",
    "end": "2685359"
  },
  {
    "text": "the edge and you can keep on subdividing things you know at you know in infinity and the same thing goes with that i'll",
    "start": "2685359",
    "end": "2691440"
  },
  {
    "text": "say that looks not much nicer that's actually what i was hoping the other one was going to look like and i don't know why it didn't do that um so um so you",
    "start": "2691440",
    "end": "2698880"
  },
  {
    "text": "have to stop you know in reality you have to stop you know iterating after a number of iterations because otherwise",
    "start": "2698880",
    "end": "2705119"
  },
  {
    "text": "it's just going to be you can't really see the the detail anymore so this one is four levels deep",
    "start": "2705119",
    "end": "2711359"
  },
  {
    "text": "because i if i add a fifth layer it just becomes one green blob basically because it becomes so fine grained um but that's",
    "start": "2711359",
    "end": "2717920"
  },
  {
    "text": "a that's a fractal hex flower and that's why i call this idea fractal architecture let's see i have some a",
    "start": "2717920",
    "end": "2723920"
  },
  {
    "text": "little bit of time so but that's basically the idea so this hex flower we can just think about that as sort of",
    "start": "2723920",
    "end": "2729280"
  },
  {
    "text": "like the logo for short-term memory and we do understand in reality it may not be exactly seven it might be you know",
    "start": "2729280",
    "end": "2735359"
  },
  {
    "text": "five or you know newer research says that maybe it's even as low as two um that sounds almost impractical but um",
    "start": "2735359",
    "end": "2742240"
  },
  {
    "text": "but that's sort of like the idea but but anyways the the the point is to try to shift our thinking about code and",
    "start": "2742240",
    "end": "2749839"
  },
  {
    "text": "and being very deliberate about how we organize code so that we can leverage short-term memory much better instead of",
    "start": "2749839",
    "end": "2756560"
  },
  {
    "text": "long-term memory because short-term memory is much faster and it doesn't require as much energy",
    "start": "2756560",
    "end": "2762400"
  },
  {
    "text": "actually uses less energy you know fewer calories so that's sort of the idea behind code that fits in your head which is is my",
    "start": "2762400",
    "end": "2769359"
  },
  {
    "text": "new book and i brought a couple of copies here because i'm basically done with the talk i am",
    "start": "2769359",
    "end": "2775280"
  },
  {
    "text": "done with the talk i have some time so if you have questions i'll be happy to to take questions and the first people",
    "start": "2775280",
    "end": "2782000"
  },
  {
    "text": "the first two people who ask a good question i will have a copy of that so um so if you ask me you know mark",
    "start": "2782000",
    "end": "2788720"
  },
  {
    "text": "what's your favorite color that's not that doesn't count as a good question um but so um",
    "start": "2788720",
    "end": "2794000"
  },
  {
    "text": "so um so let's see do we have do we have any questions you had a question already",
    "start": "2794000",
    "end": "2799440"
  },
  {
    "text": "what is a good question that becomes so so you are asking about",
    "start": "2799440",
    "end": "2804960"
  },
  {
    "text": "recursion what's recursion c recursion okay yes in the back there",
    "start": "2804960",
    "end": "2810400"
  },
  {
    "text": "yeah",
    "start": "2810400",
    "end": "2813400"
  },
  {
    "text": "um do i think it's a good practice to actually count variables in my code or is it more for illustration illustrative",
    "start": "2817599",
    "end": "2823119"
  },
  {
    "text": "purposes does that you know capture the essence of your question yes um",
    "start": "2823119",
    "end": "2828480"
  },
  {
    "text": "it's not that it's not something that i do deliberately all the time the reason why i started doing that was because",
    "start": "2828480",
    "end": "2833599"
  },
  {
    "text": "people would ask me more about api design they would say you know how many arguments can you add to a",
    "start": "2833599",
    "end": "2840400"
  },
  {
    "text": "method before it becomes too many arguments and and i started to talk to think about",
    "start": "2840400",
    "end": "2845520"
  },
  {
    "text": "that and i you know for a long time i would just say four because that sort of felt like that",
    "start": "2845520",
    "end": "2850720"
  },
  {
    "text": "feels like you know i can sort of i can sort of live with four arguments to a method but sort of like you if you",
    "start": "2850720",
    "end": "2856640"
  },
  {
    "text": "try to add a fifth one i get this icky feeling and then i you know but then i started to think about okay so why is it",
    "start": "2856640",
    "end": "2863760"
  },
  {
    "text": "um that that i can often live with four but then i don't really like five and then i started to think about this sort",
    "start": "2863760",
    "end": "2870240"
  },
  {
    "text": "of thing where i thought well really it depends on how much stuff that's actually going on inside the method",
    "start": "2870240",
    "end": "2875599"
  },
  {
    "text": "because the more arguments that i pass through a method you know as method arguments the more it's going to tax my",
    "start": "2875599",
    "end": "2881599"
  },
  {
    "text": "brain in order to try to understand all the things that these four um you know parameters kind of represent",
    "start": "2881599",
    "end": "2888319"
  },
  {
    "text": "so um so you could say if if you have nothing else than just inputs seven would",
    "start": "2888319",
    "end": "2893760"
  },
  {
    "text": "actually be a good you know maximum number because if you don't create any you know intermediate values or anything",
    "start": "2893760",
    "end": "2899520"
  },
  {
    "text": "else that's probably still going to fit in your short-term memory um but that's why i started to think about these things",
    "start": "2899520",
    "end": "2905920"
  },
  {
    "text": "it's because people would keep asking me that question you know how many input arguments are too many",
    "start": "2905920",
    "end": "2911680"
  },
  {
    "text": "so that's how i arrived at this technique so sometimes i use it when i when i discuss with other people where",
    "start": "2911680",
    "end": "2917599"
  },
  {
    "text": "where um you know particularly if i feel that they you know they want to add another in you know input parameter to a",
    "start": "2917599",
    "end": "2923920"
  },
  {
    "text": "method and i say all right okay that's actually a lot of stuff going on here let's just try to count how much stuff is actually going on that's probably",
    "start": "2923920",
    "end": "2930079"
  },
  {
    "text": "going to cut tax our short-term memory so so it's an argument that i use mostly in in a context like that so it's not",
    "start": "2930079",
    "end": "2936960"
  },
  {
    "text": "that i actually you know do it you know every time i'm writing code so i hope that answers your question um let's see",
    "start": "2936960",
    "end": "2943520"
  },
  {
    "text": "can you pass the book down here to um to the young lady",
    "start": "2943520",
    "end": "2948800"
  },
  {
    "text": "all right and i i don't want to vaporize people who are all you know all in the front here so this gentleman up here",
    "start": "2948800",
    "end": "2957040"
  },
  {
    "text": "um",
    "start": "2957040",
    "end": "2960040"
  },
  {
    "text": "so you're asking if i get you right you're asking whether there's any sort of recommended structure so are you",
    "start": "2979040",
    "end": "2984400"
  },
  {
    "text": "thinking about you know like file structure for example um",
    "start": "2984400",
    "end": "2989599"
  },
  {
    "text": "okay so whether we're talking about file structure or microservices or things like that so you're basically asking about whether whether there's an",
    "start": "2995680",
    "end": "3001680"
  },
  {
    "text": "architecture that goes with this uh is is that the right way of interpreting your question",
    "start": "3001680",
    "end": "3009720"
  },
  {
    "text": "oh so how do you actually if you haven't seen the source code before how do you navigate it that's that's the question",
    "start": "3017040",
    "end": "3022800"
  },
  {
    "text": "oh okay fair enough um so i think um what i tried to do and that was probably",
    "start": "3022800",
    "end": "3027920"
  },
  {
    "text": "a little bit of an implicit way of demonstrating that but the reason why i walked you through you know starting at",
    "start": "3027920",
    "end": "3033599"
  },
  {
    "text": "the entry point uh is that that's you know if you um if you've never seen the code base",
    "start": "3033599",
    "end": "3038880"
  },
  {
    "text": "before and if you don't have a particular goal in mind you'd probably",
    "start": "3038880",
    "end": "3045200"
  },
  {
    "text": "start by looking at the entry point of the application because you know where else would you actually want to start",
    "start": "3045200",
    "end": "3050400"
  },
  {
    "text": "and then you could sort of try to navigate so what i've tried to illustrate with the you know walking",
    "start": "3050400",
    "end": "3055440"
  },
  {
    "text": "through the code is that that you know you start at a very high level of abstraction and then you prob they're probably things that sort of catch your",
    "start": "3055440",
    "end": "3061680"
  },
  {
    "text": "fancy and then you can navigate to those and you try to understand those because that's my that might be what you're most interested in it",
    "start": "3061680",
    "end": "3068160"
  },
  {
    "text": "so so this is if you're not having a goal in terms of reading through this the source code",
    "start": "3068160",
    "end": "3074880"
  },
  {
    "text": "so definitely you know we should enable that sort of reading and that's what i've tried to do here by keeping all the",
    "start": "3074880",
    "end": "3081760"
  },
  {
    "text": "hype the very high level stuff you know still very abstract so it almost reads like a table table of contents",
    "start": "3081760",
    "end": "3087760"
  },
  {
    "text": "but we should also remember there are other ways there are other entry ways into a code base you haven't seen before maybe you start as a new developer on a",
    "start": "3087760",
    "end": "3094319"
  },
  {
    "text": "team and one of the first assignments you get is that you have to fix a bug and this box come this bug comes with a",
    "start": "3094319",
    "end": "3100640"
  },
  {
    "text": "stack trace so if you get a stack trace maybe you can jump directly into the place where there's an exception and",
    "start": "3100640",
    "end": "3107200"
  },
  {
    "text": "then you can sort of look at the code at that level but that code should also be organized so that it respects the",
    "start": "3107200",
    "end": "3113119"
  },
  {
    "text": "limitations of your short-term memory so so even if you haven't started with the entry point but just you know basically",
    "start": "3113119",
    "end": "3119119"
  },
  {
    "text": "gets thrown into the middle of it it should still be you know encapsulated",
    "start": "3119119",
    "end": "3124160"
  },
  {
    "text": "and and you know shielded from the rest of the world that you can hopefully get an understanding of you",
    "start": "3124160",
    "end": "3130319"
  },
  {
    "text": "know what happens in inside that small piece of code and and by the way my experience is that if",
    "start": "3130319",
    "end": "3135920"
  },
  {
    "text": "you're writing pure functions i've done a lot of functional programming over the last you know a couple of decades",
    "start": "3135920",
    "end": "3142400"
  },
  {
    "text": "if you're writing pure functions that is actually not unrealistic if you if you're getting a stack trace and you're",
    "start": "3142400",
    "end": "3147599"
  },
  {
    "text": "saying this is where the problem is and you can see that's a pure function you can basically start to reason about okay",
    "start": "3147599",
    "end": "3153760"
  },
  {
    "text": "some some of the inputs into this function must have caused this problem to arise and you don't really need to",
    "start": "3153760",
    "end": "3159520"
  },
  {
    "text": "understand a lot of the um of the surrounding stuff so i hope that answers your question all right um",
    "start": "3159520",
    "end": "3166319"
  },
  {
    "text": "congratulations for the book let's see if i can do this without doing feedback",
    "start": "3166319",
    "end": "3171440"
  },
  {
    "text": "oh really good sound system here all right um so i'm out of books to give away and i think i",
    "start": "3171440",
    "end": "3179040"
  },
  {
    "text": "have a couple of minutes left still so uh we'll we'll still do still do more uh questions so yes",
    "start": "3179040",
    "end": "3186240"
  },
  {
    "text": "so would i apply the same rule of thumb to the abstraction level of an application so what do you mean by the",
    "start": "3191040",
    "end": "3196160"
  },
  {
    "text": "abstraction level i mean if we're looking at the architecture",
    "start": "3196160",
    "end": "3202000"
  },
  {
    "text": "okay right okay so if i if i'm a paraphrase phrase what you said in in you know um to keep people in the bag",
    "start": "3215920",
    "end": "3223440"
  },
  {
    "text": "also enable to follow the discussion so you're saying um what if you have abstraction a layer of abstraction on",
    "start": "3223440",
    "end": "3229599"
  },
  {
    "text": "top of a layer of abstraction on top of layer of abstraction you sort of get this you use the term abstraction hill which i actually think is i'm gonna",
    "start": "3229599",
    "end": "3236319"
  },
  {
    "text": "adopt that now i really like that um i'm gonna pretend that i made it up myself no i'm not gonna do that um",
    "start": "3236319",
    "end": "3244640"
  },
  {
    "text": "yeah so so that might that might you know put you in a position where you feel that you are you know it's it's um",
    "start": "3244640",
    "end": "3250480"
  },
  {
    "text": "it's difficult to actually understand what's going on that's sort of like your your question isn't it yeah",
    "start": "3250480",
    "end": "3256558"
  },
  {
    "text": "i i would definitely i would definitely apply the same rules of some but i think you know abstraction is a little bit of",
    "start": "3256800",
    "end": "3262079"
  },
  {
    "text": "a misunderstood concept because many people tend to equate the idea of",
    "start": "3262079",
    "end": "3268319"
  },
  {
    "text": "abstraction to you know interfaces or maybe abstract based classes and and you can definitely",
    "start": "3268319",
    "end": "3275440"
  },
  {
    "text": "have interface let's just stick with interfaces you can definitely have interfaces that someone meant that interface to be an abstraction but it",
    "start": "3275440",
    "end": "3282400"
  },
  {
    "text": "turns out that it's not really helping you robert c martin has this great definition of abstraction he says an",
    "start": "3282400",
    "end": "3288400"
  },
  {
    "text": "attraction is something that amplifies the essentials and eliminates all the relevant stuff",
    "start": "3288400",
    "end": "3293839"
  },
  {
    "text": "and if you're using an interface in most languages there's no guarantee that",
    "start": "3293839",
    "end": "3298880"
  },
  {
    "text": "you're actually doing that i've seen plenty of examples where the opposite you know actually happens you know you",
    "start": "3298880",
    "end": "3303920"
  },
  {
    "text": "are hiding away something essential and you're amplifying something irrelevant um so if that happens it's it's really",
    "start": "3303920",
    "end": "3311200"
  },
  {
    "text": "um messing with your ability to fit things in your short-term memory um so",
    "start": "3311200",
    "end": "3316240"
  },
  {
    "text": "so the question is i understand why you're asking the question but i think the answer is that",
    "start": "3316240",
    "end": "3322079"
  },
  {
    "text": "the answer lies in having good abstractions you know designing abstractions so that they're actually proper abstraction is really important",
    "start": "3322079",
    "end": "3330559"
  },
  {
    "text": "and that's not easy to do but you know starting by thinking about this thing does it you know does it amplify",
    "start": "3330559",
    "end": "3336319"
  },
  {
    "text": "something essential does it hide you know all the irrelevant things uh that's you know that's basically also",
    "start": "3336319",
    "end": "3342559"
  },
  {
    "text": "the goal of encapsulation anyway so that's sort of like uh that's a good start of it anyway but i think you know",
    "start": "3342559",
    "end": "3350160"
  },
  {
    "text": "if you're looking at an interface if you feel that in order to understand what the interface does you have to navigate",
    "start": "3350160",
    "end": "3355680"
  },
  {
    "text": "to the implementation that you know is being implemented by that interface that's a pretty good sign that you know",
    "start": "3355680",
    "end": "3361839"
  },
  {
    "text": "encapsulation is actually broken uh and that's where you arrive in this sort of you know you know abstraction hill interface hill",
    "start": "3361839",
    "end": "3369040"
  },
  {
    "text": "um and i think the question here is to come up with or not come up with but be very deliberate about designing",
    "start": "3369040",
    "end": "3375200"
  },
  {
    "text": "abstractions that are that are better because otherwise you're going to run into this",
    "start": "3375200",
    "end": "3380319"
  },
  {
    "text": "problem all right i think i can do what i hope that was sufficient um i think i can do",
    "start": "3380319",
    "end": "3385680"
  },
  {
    "text": "one more and then we are out of time yes well i was just sir about the diplomatic",
    "start": "3385680",
    "end": "3391359"
  },
  {
    "text": "complexity because you barely named it and could you first explain it shortly and",
    "start": "3391359",
    "end": "3397200"
  },
  {
    "text": "then give your advice about what is what would be the limit",
    "start": "3397200",
    "end": "3404400"
  },
  {
    "text": "right okay so so you're asking about cyclomatic complexity and whether i could just re repeat very briefly what",
    "start": "3404400",
    "end": "3410400"
  },
  {
    "text": "it is you know sort of give an intuitive description of what it is and then and then what what do i think is a good",
    "start": "3410400",
    "end": "3416000"
  },
  {
    "text": "limit okay um so first of all i think it's it's worth you know noting that this idea of cyclomatic complexity is is",
    "start": "3416000",
    "end": "3422480"
  },
  {
    "text": "again one of those you know concepts that has a horrible name because it you know cyclomatic complexity sounds really",
    "start": "3422480",
    "end": "3428480"
  },
  {
    "text": "scientific and difficult to understand but it's really just the number of alternative pathways you can take",
    "start": "3428480",
    "end": "3435280"
  },
  {
    "text": "through a code base um so i think you know it helps to just think about it as that instead",
    "start": "3435280",
    "end": "3441920"
  },
  {
    "text": "and um what should the limit be and in in traditional literature if you will",
    "start": "3441920",
    "end": "3448240"
  },
  {
    "text": "you will often see recommendations like you know 20 or 40 uh is still considered to be a",
    "start": "3448240",
    "end": "3455040"
  },
  {
    "text": "good uh you know a good factored solution i've actually tried to stick with the",
    "start": "3455040",
    "end": "3460720"
  },
  {
    "text": "limit of seven and again seven is is sort of like an arbitrary because i'm just you know writing this magical",
    "start": "3460720",
    "end": "3466240"
  },
  {
    "text": "number seven um but uh so if you if you don't like the number seven but if you maybe wanna pick a number like ten i",
    "start": "3466240",
    "end": "3472319"
  },
  {
    "text": "think that's probably going to be pretty decent as well my experience anyway is that you can",
    "start": "3472319",
    "end": "3478480"
  },
  {
    "text": "absolutely write comp you know complex code that has a lot of sophisticated features and still design it such a way",
    "start": "3478480",
    "end": "3484319"
  },
  {
    "text": "that you do not exceed the the cyclomatic complexity of seven that's what i've tried to do with the code base",
    "start": "3484319",
    "end": "3489520"
  },
  {
    "text": "that's what i generally tend to do um i can typically stay well within that",
    "start": "3489520",
    "end": "3495520"
  },
  {
    "text": "and and stick with three or four uh but it it really depends on on your level of abstraction as well because you know for",
    "start": "3495520",
    "end": "3501680"
  },
  {
    "text": "example if you have if you're doing a lot of looping you know actually for each looping that counts as a branch but on",
    "start": "3501680",
    "end": "3507839"
  },
  {
    "text": "the other hand if you if you if you then go and use you know a technique like from functional programming where you do",
    "start": "3507839",
    "end": "3513359"
  },
  {
    "text": "you know projections you know selects and filters and stuff like that that does not count as branching so you know",
    "start": "3513359",
    "end": "3519760"
  },
  {
    "text": "there's things you can do to keep cyclomatic complexity down and that's what i typically tend to do but i think",
    "start": "3519760",
    "end": "3525040"
  },
  {
    "text": "the point is to have thresholds that are quite aggressive because if you have aggressive thresholds like for example",
    "start": "3525040",
    "end": "3530240"
  },
  {
    "text": "seven or let's say 10 what happens is that if you actually stick with those",
    "start": "3530240",
    "end": "3535920"
  },
  {
    "text": "thresholds the code will never become super complicated and and that means maybe you're staying a little bit to the",
    "start": "3535920",
    "end": "3542240"
  },
  {
    "text": "safe side but it's better to be safe than to be sorry right um so i have good",
    "start": "3542240",
    "end": "3547280"
  },
  {
    "text": "i have good experience with sticking below you know seven or ten that sort of order of magnitude so hope that answers",
    "start": "3547280",
    "end": "3553520"
  },
  {
    "text": "your question so i'm out of time so um and i'm actually i have to rush to room two to give another talk so i'm",
    "start": "3553520",
    "end": "3560000"
  },
  {
    "text": "basically just going to pack down and you know go over to the next one so if you want to see that you can come but otherwise you can go and see some of the",
    "start": "3560000",
    "end": "3566160"
  },
  {
    "text": "other fantastic talks that are here at the conference but thanks for coming [Applause]",
    "start": "3566160",
    "end": "3576079"
  },
  {
    "text": "you",
    "start": "3581440",
    "end": "3583520"
  }
]