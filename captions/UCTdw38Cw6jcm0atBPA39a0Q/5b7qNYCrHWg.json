[
  {
    "start": "0",
    "end": "79000"
  },
  {
    "text": "good evening London it's amazing past 4 p.m. and I have a roomful I am",
    "start": "10059",
    "end": "16420"
  },
  {
    "text": "already honored thank you so much so what we're gonna do is we're gonna pretend that we're happy because we",
    "start": "16420",
    "end": "23140"
  },
  {
    "text": "don't know what happens after the talk but at least right now we're happy you want to take a picture all right Wow",
    "start": "23140",
    "end": "28840"
  },
  {
    "text": "I'll probably have to do a panorama that's a lot of people standing room that looks even better",
    "start": "28840",
    "end": "34149"
  },
  {
    "text": "let's get them before they sit down perfect awesome so that's my email and",
    "start": "34149",
    "end": "40629"
  },
  {
    "text": "that's my Twitter if you love the talk tweet about it if you do not email me here's some information about me these",
    "start": "40629",
    "end": "47980"
  },
  {
    "text": "are things never you never want to do these things if you want to be a billionaire do not do any of this right",
    "start": "47980",
    "end": "54550"
  },
  {
    "text": "all you need to do is go to school and then drop out because every billionaire does that drop out in the last semester",
    "start": "54550",
    "end": "60879"
  },
  {
    "text": "and you're definitely gonna be a billionaire do you not follow me I do work we just acquired another",
    "start": "60879",
    "end": "66580"
  },
  {
    "text": "company cashed in and if you were tired of working with non-technical recruiters give us a call on the CT or they're also",
    "start": "66580",
    "end": "73060"
  },
  {
    "text": "on Chandra Dahl Inc it's not a one-person company just so you know it's",
    "start": "73060",
    "end": "79119"
  },
  {
    "start": "79000",
    "end": "79000"
  },
  {
    "text": "been challenging to prepare this training because this is one hour and we usually do a two day training on this",
    "start": "79119",
    "end": "85090"
  },
  {
    "text": "subject so bear with me hopefully I don't get a lot of red cards I'll buy you dinner if you want to give me a",
    "start": "85090",
    "end": "90610"
  },
  {
    "text": "green card Steve Souders one of the most phenomenal people out there a lot of",
    "start": "90610",
    "end": "96130"
  },
  {
    "text": "good work on web performance say is one really good thing great developers know why things work so we're really gonna",
    "start": "96130",
    "end": "102789"
  },
  {
    "text": "focus on the whys because it's really easy to understand the house how is in",
    "start": "102789",
    "end": "107859"
  },
  {
    "text": "fact you can Google Stack Overflow and everything is there but the why is important today's agenda we're going to",
    "start": "107859",
    "end": "115689"
  },
  {
    "text": "try to do we're going to try to understand web performance and then identify bottlenecks and then go back",
    "start": "115689",
    "end": "121869"
  },
  {
    "text": "and try to see if we can make it faster as long as we have time and then you have - - time and the while loop",
    "start": "121869",
    "end": "128920"
  },
  {
    "text": "continues so before we get into the tips let's see some code",
    "start": "128920",
    "end": "135420"
  },
  {
    "text": "here's an example of a Fibonacci sequence and is that is that good enough",
    "start": "143099",
    "end": "149370"
  },
  {
    "text": "is the font size good working perfect",
    "start": "149370",
    "end": "155159"
  },
  {
    "text": "just kidding making sure you're not sleeping yet you know you will sleep by the end of the talk but at least not yet right so",
    "start": "155159",
    "end": "162790"
  },
  {
    "text": "here's a Fibonacci sequence of 40 and all I'm doing here is getting the start time and then the end time and if you",
    "start": "162790",
    "end": "170140"
  },
  {
    "text": "run this",
    "start": "170140",
    "end": "172530"
  },
  {
    "text": "I actually have it open right there so you see the time taken in milliseconds",
    "start": "180040",
    "end": "185620"
  },
  {
    "text": "it's about 1407 and the count is pretty big it's a really big number I'll show",
    "start": "185620",
    "end": "192700"
  },
  {
    "text": "you the code in a second before that we're going to change this to the fast algorithm run this again and you see the",
    "start": "192700",
    "end": "201609"
  },
  {
    "text": "time taken in milliseconds is two and the count is only 39 so let's look into the code so this is a very simple",
    "start": "201609",
    "end": "214060"
  },
  {
    "text": "Fibonacci sequence you've got you know 0 1 2 and that's how it continues so what",
    "start": "214060",
    "end": "219159"
  },
  {
    "text": "you have to do is kind of see this as a recursion and that's how it works now this is not just JavaScript it's gonna",
    "start": "219159",
    "end": "224379"
  },
  {
    "text": "work the same way in any other language but we're doing a wrong thing here we're doing recursion and recursions adding a",
    "start": "224379",
    "end": "231189"
  },
  {
    "text": "lot of overhead in our code so there's a technique called memoization I'm not",
    "start": "231189",
    "end": "236409"
  },
  {
    "text": "gonna get into a lot of detail there but all you're doing is if you already know the Fibonacci sequence or if you know",
    "start": "236409",
    "end": "242079"
  },
  {
    "text": "the value of it you're adding that in your memorizer right here and that's",
    "start": "242079",
    "end": "247269"
  },
  {
    "text": "your array and you start adding those values so all you need is for 40 this executes only 39 times whereas in the",
    "start": "247269",
    "end": "255129"
  },
  {
    "text": "previous case we saw it took a while so whereas it was like 2 milliseconds the other one was more than a second and",
    "start": "255129",
    "end": "261310"
  },
  {
    "text": "that's a huge difference it is just a small change in your algorithm we're not",
    "start": "261310",
    "end": "266800"
  },
  {
    "text": "gonna get into a lot of details in algorithms because you know how to figure that out that's easy but it just",
    "start": "266800",
    "end": "271870"
  },
  {
    "text": "tells you that in JavaScript this is an expensive operation let's take another",
    "start": "271870",
    "end": "277419"
  },
  {
    "text": "example a lot of times I see this in code everywhere I go it's good to use",
    "start": "277419",
    "end": "284949"
  },
  {
    "text": "underscore because underscores faster but if you use underscore in the wrong way you can get in trouble so one code",
    "start": "284949",
    "end": "291430"
  },
  {
    "text": "that I see all the time is this here's an A for each which is more like an underscore each underscore is just a",
    "start": "291430",
    "end": "298030"
  },
  {
    "text": "library that does certain things better and faster this is more like a for each and it says if value is 5 then say",
    "start": "298030",
    "end": "304599"
  },
  {
    "text": "exists is true and then console dot log that particular value now if you were to",
    "start": "304599",
    "end": "311289"
  },
  {
    "text": "see the result of this thing you can see that the value found was five even though I have a return",
    "start": "311289",
    "end": "317440"
  },
  {
    "text": "statement I still go six seven eight nine ten now imagine a list of catalogues on a big",
    "start": "317440",
    "end": "323350"
  },
  {
    "text": "fortune 500 company imagine your product list imagine any other list list of your users would you",
    "start": "323350",
    "end": "329950"
  },
  {
    "text": "really want to go all the way if you already found your user let's say you have ten thousand users in the list and you found the third user which is",
    "start": "329950",
    "end": "337660"
  },
  {
    "text": "exactly what you wanted do you still want to loop through the entire loop and this is a common mistake in a lot of",
    "start": "337660",
    "end": "344950"
  },
  {
    "text": "JavaScript code that's out there a lot of big corporations a lot of other people have code like this a good",
    "start": "344950",
    "end": "352120"
  },
  {
    "text": "solution is using something like this which is dot every which is also part of",
    "start": "352120",
    "end": "357940"
  },
  {
    "text": "underscore and you can use this and say return not equals to five and I'm gonna go ahead and comment this I'm going a",
    "start": "357940",
    "end": "366100"
  },
  {
    "text": "little fast on this because this is stuff you know because there's a lot of good stuff coming run this thing again",
    "start": "366100",
    "end": "372190"
  },
  {
    "text": "and you see it's got one two three four five a lot of times when you go from",
    "start": "372190",
    "end": "378160"
  },
  {
    "text": "Donette or java to javascript you assume it's gonna work the same way as your other languages would but javascript was",
    "start": "378160",
    "end": "385030"
  },
  {
    "text": "a language that was created to make good and smart people feel like they're not smart anymore and they did it right they",
    "start": "385030",
    "end": "393520"
  },
  {
    "text": "got it right they did a good job at it",
    "start": "393520",
    "end": "397530"
  },
  {
    "text": "here's another thing which is important is a lot of times we make this mistake of having dynamic scope without",
    "start": "399419",
    "end": "406630"
  },
  {
    "text": "realizing it's dynamic so for example in this case we have a function execute which is getting some kind of dynamic",
    "start": "406630",
    "end": "412960"
  },
  {
    "text": "code that eval is going to execute now this looks pretty good and for the most",
    "start": "412960",
    "end": "418510"
  },
  {
    "text": "part we'll always get back the window object except something like this where",
    "start": "418510",
    "end": "424539"
  },
  {
    "text": "someone might send in code that already overrides the window object so in case",
    "start": "424539",
    "end": "429910"
  },
  {
    "text": "number two window is just a string and now I won't see that right so this is dynamic code and the problem with",
    "start": "429910",
    "end": "436539"
  },
  {
    "text": "dynamic code is it's more expensive so if you used to use with statements you're gonna see that if you do try",
    "start": "436539",
    "end": "442390"
  },
  {
    "text": "catch the moment you get to catch e X or air whatever is part of cat is also a",
    "start": "442390",
    "end": "449169"
  },
  {
    "text": "dynamic so that's another problem evils are good only in couple of cases everywhere else you'll see that they are",
    "start": "449169",
    "end": "456550"
  },
  {
    "text": "a problem dynamic code in general is a problem all right back to PowerPoint",
    "start": "456550",
    "end": "464050"
  },
  {
    "text": "because that's what we love arguing for code or PowerPoint we're gonna do both",
    "start": "464050",
    "end": "469780"
  },
  {
    "start": "468000",
    "end": "468000"
  },
  {
    "text": "don't worry so some JavaScript tips usually you're better off with accessing",
    "start": "469780",
    "end": "476199"
  },
  {
    "text": "a local variable or member over something that's part of an array or a bigger object because that's gonna be",
    "start": "476199",
    "end": "482169"
  },
  {
    "text": "faster and then you also have location on href it's actually gonna be faster to",
    "start": "482169",
    "end": "487389"
  },
  {
    "text": "use this over this even though there are the same things because you're adding a global scope and then you're going all",
    "start": "487389",
    "end": "493690"
  },
  {
    "text": "the way up and then getting to that value now a lot of this does not make much difference nowadays because you",
    "start": "493690",
    "end": "500889"
  },
  {
    "text": "have browsers that have their own engines and they're optimizing this for you so a lot of times when people go I",
    "start": "500889",
    "end": "507400"
  },
  {
    "text": "want to make sure that my performance is great do not spend that 80% of the time without already knowing that this is",
    "start": "507400",
    "end": "514750"
  },
  {
    "text": "already supported in a browser so if you run this thing thousand times and you're only getting one millisecond benefit",
    "start": "514750",
    "end": "521050"
  },
  {
    "text": "it's probably not worth it why do you want to avoid a with the same thing we talked about every single function is",
    "start": "521050",
    "end": "528190"
  },
  {
    "text": "more like an object in memory and that object has a scope chain associated with",
    "start": "528190",
    "end": "533740"
  },
  {
    "text": "it when you use with what happens you actually create another set of you know",
    "start": "533740",
    "end": "541440"
  },
  {
    "text": "variables in memory and now you make it part of the first scope chain which actually talks to the second scope chain",
    "start": "541440",
    "end": "548350"
  },
  {
    "text": "so it becomes slower again the dynamic part of it so anytime you use with you",
    "start": "548350",
    "end": "554020"
  },
  {
    "text": "know that you're slowing down just a little bit this is important amazon says",
    "start": "554020",
    "end": "561040"
  },
  {
    "text": "that an extra hundred milli second of delay on the response time can cost them",
    "start": "561040",
    "end": "568149"
  },
  {
    "text": "1% in sales and google says 500 millisecond increase in latency and",
    "start": "568149",
    "end": "573310"
  },
  {
    "text": "that's just latency which you can't easily change that much causes the",
    "start": "573310",
    "end": "578440"
  },
  {
    "text": "traffic to drop by 1/5 that's billions of dollars if you look",
    "start": "578440",
    "end": "584050"
  },
  {
    "text": "at it that way and that's a huge huge huge problem so what are we optimizing at if I were to ask you what do you want",
    "start": "584050",
    "end": "591310"
  },
  {
    "text": "to do what's the response time that you're looking at a lot of our clients try to achieve something like 250",
    "start": "591310",
    "end": "599050"
  },
  {
    "text": "milliseconds and there's a lot of things to be done to get there and it's not just JavaScript code there's a lot more",
    "start": "599050",
    "end": "605710"
  },
  {
    "text": "other things associated with it here's a study from FD comm it's a very recent",
    "start": "605710",
    "end": "611650"
  },
  {
    "start": "609000",
    "end": "609000"
  },
  {
    "text": "study they did it last year Financial Times what they did is they intentionally slowed their website and",
    "start": "611650",
    "end": "619480"
  },
  {
    "text": "what they found out was that the pages per session kept dropping so the same",
    "start": "619480",
    "end": "626770"
  },
  {
    "text": "users were now reading less articles if you were to see more detail page load",
    "start": "626770",
    "end": "632740"
  },
  {
    "text": "time here's a 7-day impact and that's a 20 day impact 28 day impact and it's",
    "start": "632740",
    "end": "637780"
  },
  {
    "text": "about 7.9 percent that's huge loss in viewership later and that's gonna",
    "start": "637780",
    "end": "643540"
  },
  {
    "text": "actually lose they're gonna lose customers later and if you want to see what happened in case of mobile tablet",
    "start": "643540",
    "end": "650680"
  },
  {
    "text": "and desktop the studies online you know you should read about it very good insight into how a user interacts and",
    "start": "650680",
    "end": "657220"
  },
  {
    "text": "the difference is not really much you would think oh it was just one second but in one second",
    "start": "657220",
    "end": "662920"
  },
  {
    "text": "you are losing your customers let's take an example where we talk about",
    "start": "662920",
    "end": "668800"
  },
  {
    "text": "performance versus perception a lot of times I've seen developers they only go",
    "start": "668800",
    "end": "673810"
  },
  {
    "text": "for performance however at the end of the day it's perception that matters more let's take an example this is first",
    "start": "673810",
    "end": "680380"
  },
  {
    "text": "scenario this is scenario number two let's say you've got this you barely have anything on the page and then you",
    "start": "680380",
    "end": "686410"
  },
  {
    "text": "have just one header pop-up and then you have the entire page in three seconds fully loaded and the second scenario is",
    "start": "686410",
    "end": "693790"
  },
  {
    "text": "where you have this one page you have a little bit rendering with a you know header here which is a little bit more",
    "start": "693790",
    "end": "700060"
  },
  {
    "text": "than that one and then you have half of this but then it takes you four seconds to get the entire page in this scenario",
    "start": "700060",
    "end": "707800"
  },
  {
    "text": "you're probably better off picking this because there's a big difference of one second and we just saw this one set",
    "start": "707800",
    "end": "714010"
  },
  {
    "text": "it's very very very important let's take example number two very similar in",
    "start": "714010",
    "end": "721630"
  },
  {
    "text": "rendering very very similar and then in number three you've got the entire page",
    "start": "721630",
    "end": "726850"
  },
  {
    "text": "and I'm really talking about the page where it's I'm not talking about scrolling down you still may not have it",
    "start": "726850",
    "end": "732250"
  },
  {
    "text": "but at least this page that a user can see and relate with and this is half a",
    "start": "732250",
    "end": "737290"
  },
  {
    "text": "page and then you have this full page right very easy we're still gonna pick",
    "start": "737290",
    "end": "742540"
  },
  {
    "text": "that one this is just a mobile view of the same example we just saw another",
    "start": "742540",
    "end": "749200"
  },
  {
    "text": "scenario where we have one second we've got nothing going on in both of these frames and then we have a header just a",
    "start": "749200",
    "end": "756460"
  },
  {
    "text": "little bit barely anything here and then we have these full pages which one are you gonna pick perfect top one",
    "start": "756460",
    "end": "766180"
  },
  {
    "text": "everyone's gonna do that right now rendering partial rendering is very very important another scenario where we have",
    "start": "766180",
    "end": "774180"
  },
  {
    "text": "same amount of rendering here we got some rendering going on here and then we have some rendering here and it's 3.2",
    "start": "774180",
    "end": "781330"
  },
  {
    "text": "seconds keep in mind this is completely empty right here and then you have the entire page which one are you gonna pick",
    "start": "781330",
    "end": "787000"
  },
  {
    "text": "how many of you are gonna pick the first one very good what about how many of",
    "start": "787000",
    "end": "792340"
  },
  {
    "text": "you're gonna pick the second one completely outnumbered so everyone as I can see 99% of people in this room",
    "start": "792340",
    "end": "799150"
  },
  {
    "text": "wanted to pick the first one so that's where perception becomes more important than performance and it's really the",
    "start": "799150",
    "end": "806170"
  },
  {
    "text": "difference it's just 0.2 milliseconds oh sorry 0.2 seconds in this case so we'll pick number one so fourteen rules",
    "start": "806170",
    "end": "813670"
  },
  {
    "start": "812000",
    "end": "812000"
  },
  {
    "text": "of web performance these are easy this book was written I think about seven eight years by Steve Souders you should",
    "start": "813670",
    "end": "819490"
  },
  {
    "text": "grab a copy read about it we're not gonna get into a lot of details about all this because this is simple stuff",
    "start": "819490",
    "end": "825280"
  },
  {
    "text": "we're going to talk about the improvements on this stuff which have been there lately keep in mind those",
    "start": "825280",
    "end": "833350"
  },
  {
    "text": "recommendations were written for HTTP 1.1 how many of you are already on HTTP 2 so this actually might apply we'll",
    "start": "833350",
    "end": "841390"
  },
  {
    "text": "talk about HTTP 1 - don't worry so one of the most important things to understand is that",
    "start": "841390",
    "end": "847080"
  },
  {
    "text": "latency and bandwidth a lot of times we go well I have really good bandwidth all my customers are above 10 megabits per",
    "start": "847080",
    "end": "853560"
  },
  {
    "text": "second I don't really need to worry about anything right if you actually notice after five megabits per second",
    "start": "853560",
    "end": "860820"
  },
  {
    "text": "the bandwidth doesn't make much difference the increase that you get in your performance is barely any so",
    "start": "860820",
    "end": "867870"
  },
  {
    "text": "latency happens to be actually more important and I'll explain that to you in a second time to reach the congestion",
    "start": "867870",
    "end": "874829"
  },
  {
    "text": "size of size n is uses this particular formula so let's talk about this",
    "start": "874829",
    "end": "881870"
  },
  {
    "text": "receiving window 128 kilobytes congestion window or receiving window",
    "start": "881870",
    "end": "888720"
  },
  {
    "text": "means if a sender has to send a message to someone it says look I'm gonna send you something with 128 kilobytes it's",
    "start": "888720",
    "end": "895170"
  },
  {
    "text": "gonna send an S Y n or synchronized to the receiver and now the receiver says",
    "start": "895170",
    "end": "900600"
  },
  {
    "text": "ok either I can take it or I'm not gonna take it depends on how much congestion",
    "start": "900600",
    "end": "905670"
  },
  {
    "text": "the receiver has right and that's how DCP works we're gonna see that in a second then you have a round-trip time from San",
    "start": "905670",
    "end": "912660"
  },
  {
    "text": "Francisco to New York you have 42 milliseconds from San Francisco sorry",
    "start": "912660",
    "end": "918270"
  },
  {
    "text": "New York to London we have about 28 milliseconds right the round-trip time",
    "start": "918270",
    "end": "923670"
  },
  {
    "text": "is going to be double of that it's about 56 milliseconds so latency is 21 milliseconds round-trip time is 42 in",
    "start": "923670",
    "end": "930899"
  },
  {
    "text": "this case and then we have segments one segment has 414 hundred 60 bytes it's a",
    "start": "930899",
    "end": "937980"
  },
  {
    "text": "lot of detail here do not worry about it divide that and then you get 90 segments",
    "start": "937980",
    "end": "943200"
  },
  {
    "text": "all we need is 90 segments to transmit this data over maybe if I get you the log of this thing it's about 3.1 now",
    "start": "943200",
    "end": "950730"
  },
  {
    "text": "this particular thing is more like a roundup so it's not gonna be 3.1 - it's",
    "start": "950730",
    "end": "956850"
  },
  {
    "text": "gonna be 4 and right so in this case it ends up being 4 so we multiply this by 42 and it's hundred and 60 milliseconds",
    "start": "956850",
    "end": "963300"
  },
  {
    "text": "for what just 128 kilobyte of data first",
    "start": "963300",
    "end": "969420"
  },
  {
    "text": "time when you connect even though we just have 128 kilobytes that's really barely anything just because of the way",
    "start": "969420",
    "end": "976980"
  },
  {
    "text": "TCP works even with something that small as in a round-trip time of just 42",
    "start": "976980",
    "end": "982830"
  },
  {
    "text": "milliseconds we still took hundred and sixty milliseconds so that's one thing",
    "start": "982830",
    "end": "988050"
  },
  {
    "text": "that we have to consider now this is how you can see a three-way handshake how",
    "start": "988050",
    "end": "993330"
  },
  {
    "text": "does it work you have a syn or synchronized and goes all the way to the sender so this is our you know so it",
    "start": "993330",
    "end": "1000230"
  },
  {
    "text": "doesn't really matter it could be either ways because it's TCP anything could be a sender or anything could be a receiver",
    "start": "1000230",
    "end": "1005750"
  },
  {
    "text": "so in this case you get 21 milliseconds and then you get the AK the Act gets back to you at 42 milliseconds and then",
    "start": "1005750",
    "end": "1012560"
  },
  {
    "text": "you actually make the real request assuming it takes about 50 milliseconds on the server to process now you've got",
    "start": "1012560",
    "end": "1019760"
  },
  {
    "text": "your bytes and the bytes are about you know what we talked about so in this",
    "start": "1019760",
    "end": "1025010"
  },
  {
    "text": "case first thing what's gonna happen is 14 600 bytes they go all the way here that's about 10x now previously TCP used",
    "start": "1025010",
    "end": "1032329"
  },
  {
    "text": "to have four segments now we have about 10 segments that's why 14 60 into 10",
    "start": "1032329",
    "end": "1037490"
  },
  {
    "text": "bytes can go all the way here next time it increases it doubles so now it's",
    "start": "1037490",
    "end": "1043699"
  },
  {
    "text": "gonna be 29,000 and then it doubles again it's gonna be 58,000 bytes right",
    "start": "1043699",
    "end": "1048740"
  },
  {
    "text": "and then it doubles again but we don't need that so the double of that number is 1 1 6 8 0 0 but all we need is 29 200",
    "start": "1048740",
    "end": "1056090"
  },
  {
    "text": "bytes so we're gonna be able to deliver all this back in about 240 milliseconds",
    "start": "1056090",
    "end": "1061720"
  },
  {
    "text": "so you see that bandwidth would not really help you as much it's really your",
    "start": "1061720",
    "end": "1067520"
  },
  {
    "text": "latency so if you are very close to your you know client you would have gotten",
    "start": "1067520",
    "end": "1073730"
  },
  {
    "text": "there way faster even with 100 megabits a second versus 10 megabits a second",
    "start": "1073730",
    "end": "1079010"
  },
  {
    "text": "you're better off if your servers are actually closer to your user because otherwise you're still gonna do",
    "start": "1079010",
    "end": "1085070"
  },
  {
    "text": "what TCP does and it takes a lot of time so and a lot of people come to me and say look I'm having a big issue with my",
    "start": "1085070",
    "end": "1091580"
  },
  {
    "text": "mobile and I'm like what's going on well we're having three second three second is our average request time I'm like is",
    "start": "1091580",
    "end": "1098270"
  },
  {
    "text": "it on the first load they're like yeah I'm like are you using 3G they're like yeah well 3G control plan could take up",
    "start": "1098270",
    "end": "1103820"
  },
  {
    "text": "to two point five milliseconds it might not actually be your code you might be better off taking them over to 4G or LTE",
    "start": "1103820",
    "end": "1110330"
  },
  {
    "text": "in certain cases you have clients willing to pay for these people to upgrade which makes",
    "start": "1110330",
    "end": "1116390"
  },
  {
    "text": "sense a lot of times you have clients that are actually on Windows XP do you have those we have those in states and",
    "start": "1116390",
    "end": "1122470"
  },
  {
    "text": "they're making you millions of dollars you might actually just get them a better laptop or pay for their internet",
    "start": "1122470",
    "end": "1129650"
  },
  {
    "text": "connection all right just kidding so optimizing TCP now how do you optimize TCP first thing",
    "start": "1129650",
    "end": "1136190"
  },
  {
    "start": "1132000",
    "end": "1132000"
  },
  {
    "text": "upgrade your servers because the last update was made in about 2013 and a lot of people did not really upgrade their",
    "start": "1136190",
    "end": "1141680"
  },
  {
    "text": "servers one thing you might want to do is go to ten segments rather than the for the previous one so that's one thing",
    "start": "1141680",
    "end": "1147890"
  },
  {
    "text": "you must do upgrade to the latest version increase your initial window size so congestion window size which is",
    "start": "1147890",
    "end": "1154820"
  },
  {
    "text": "your receiving window size on the sender side you should increase it make it as",
    "start": "1154820",
    "end": "1159920"
  },
  {
    "text": "much as you want you can also enable your window scaling it used to be 65,000",
    "start": "1159920",
    "end": "1165620"
  },
  {
    "text": "bytes and it's currently one gigabyte that's one thing you should definitely do now what slow start after idle so",
    "start": "1165620",
    "end": "1173660"
  },
  {
    "text": "here's what happens if you are idle for a while then TCP goes back into an idle",
    "start": "1173660",
    "end": "1178760"
  },
  {
    "text": "mode and then starts slow start again what that really means is it's still gonna go from smaller chunks of data and",
    "start": "1178760",
    "end": "1187340"
  },
  {
    "text": "then it's gonna double it and it's gonna double it so if you disable it then you're good because your next connection",
    "start": "1187340",
    "end": "1193100"
  },
  {
    "text": "would already be taking a much bigger chunk of data that's what you want to do so disable this makes perfect sense you",
    "start": "1193100",
    "end": "1200210"
  },
  {
    "text": "can also do TCP fast open which is a better way of doing it so now you can",
    "start": "1200210",
    "end": "1205340"
  },
  {
    "text": "have more data back and forth of course these two are important things if you",
    "start": "1205340",
    "end": "1210800"
  },
  {
    "text": "can eliminate a redundant data transfers that's where your code comes in you can also compress your transfer data again",
    "start": "1210800",
    "end": "1217970"
  },
  {
    "text": "you can gzip it or something like that keep in mind most of this is actually related to network code is really a very",
    "start": "1217970",
    "end": "1225110"
  },
  {
    "text": "small part of it at this point of time at least and then you want to reduce your round-trip times again that's",
    "start": "1225110",
    "end": "1230720"
  },
  {
    "text": "something you could do in your code be smart about how you're doing this and then you reuse your TCP connections",
    "start": "1230720",
    "end": "1236390"
  },
  {
    "text": "wherever possible so fetching data using 3G versus 4G there's not much difference",
    "start": "1236390",
    "end": "1242690"
  },
  {
    "start": "1239000",
    "end": "1239000"
  },
  {
    "text": "in fact three DS are getting better too so HSPA network is getting much better so when you",
    "start": "1242690",
    "end": "1248180"
  },
  {
    "text": "like 4G and you're like or we're stuck with HSPA Network don't worry because it's also getting better but the control",
    "start": "1248180",
    "end": "1254690"
  },
  {
    "text": "pay plane says it might take up to 2.5 seconds that doesn't mean it's always",
    "start": "1254690",
    "end": "1260150"
  },
  {
    "text": "going to take 2.5 seconds you can also have 3G connections with less than 200 milliseconds totally depends on how",
    "start": "1260150",
    "end": "1266060"
  },
  {
    "text": "congested an entire thing is so more tips reduce DNS lookups this is really",
    "start": "1266060",
    "end": "1273950"
  },
  {
    "text": "bad a lot of websites I go to they have for example.com and it's going to m dot example.com you've already lost 300",
    "start": "1273950",
    "end": "1280610"
  },
  {
    "text": "milliseconds right there so you don't want to do that you can always have a mobile version of it on the same domain",
    "start": "1280610",
    "end": "1288140"
  },
  {
    "text": "and then try to make fewer HTTP requests gzipping is important if you were to",
    "start": "1288140",
    "end": "1294500"
  },
  {
    "text": "take one thing from the talk do it go back home do it and you'll see how much faster your entire website gets of",
    "start": "1294500",
    "end": "1301370"
  },
  {
    "text": "course use a CDN you want proximity and CD ends are great for that you don't want your own servers a lot of times use",
    "start": "1301370",
    "end": "1307940"
  },
  {
    "text": "them they're public pretty awesome and then optimize it optimize your images per device a lot of",
    "start": "1307940",
    "end": "1314270"
  },
  {
    "text": "times I've noticed to go to you know companies and what they have is they've got everything going on so for example",
    "start": "1314270",
    "end": "1319730"
  },
  {
    "text": "here is this big large chunk of image which works on a desktop and what do they do they're gonna use the same image",
    "start": "1319730",
    "end": "1326060"
  },
  {
    "text": "compress it for the mobile of you that's not a very good idea you want to you want to do it you want to have separate",
    "start": "1326060",
    "end": "1331520"
  },
  {
    "text": "images for separate devices because Mobile's phones are not just it's not just about space right it's about their",
    "start": "1331520",
    "end": "1337550"
  },
  {
    "text": "memory it's also about their battery and you don't want to use their resources to do anything with your data have your",
    "start": "1337550",
    "end": "1344480"
  },
  {
    "text": "mobile phone do the least amount of work and you're gonna have a happy life adding etags so that you don't fetch",
    "start": "1344480",
    "end": "1352640"
  },
  {
    "text": "multiple data you don't want to do that you want to create versioning that's where you use e tags and then test on",
    "start": "1352640",
    "end": "1358400"
  },
  {
    "text": "actual mobile devices a lot of times people test on emulators and emulators are running on a desktop and a lot of",
    "start": "1358400",
    "end": "1365030"
  },
  {
    "text": "times you're not going to understand what's going on especially when you don't want to know what's the effect on battery there's a study from Pandora the",
    "start": "1365030",
    "end": "1372200"
  },
  {
    "text": "data ever they were sending to like a song or you know dislike a song was just",
    "start": "1372200",
    "end": "1377270"
  },
  {
    "text": "0.2 percent the data was pretty small but it was sending beacons and the beacons were being sent he was",
    "start": "1377270",
    "end": "1383330"
  },
  {
    "text": "taking 48% of the battery so they decided to not do it at that time because on a mobile phone the second",
    "start": "1383330",
    "end": "1390110"
  },
  {
    "text": "most important resource is a radio the first one of course you know the most intensive of all is your screen because",
    "start": "1390110",
    "end": "1396860"
  },
  {
    "text": "your screen is taking the most battery but what's the number two resources really radio so what you want to do is",
    "start": "1396860",
    "end": "1402770"
  },
  {
    "text": "not use the radio as much so you've got the screen you've got the radio and in",
    "start": "1402770",
    "end": "1409010"
  },
  {
    "start": "1408000",
    "end": "1408000"
  },
  {
    "text": "order to say a battery you want to prefetch data what you don't want to do is something like this you've got a list",
    "start": "1409010",
    "end": "1414770"
  },
  {
    "text": "and then you go okay well let's number one here's a preview click and the preview shows up and you make another",
    "start": "1414770",
    "end": "1419930"
  },
  {
    "text": "call to the server now you're talking to the radio again and it's slowing your user experience down if the preview is",
    "start": "1419930",
    "end": "1426530"
  },
  {
    "text": "small and you have let's say 10 items bring all of that data that's called prefetching data a lot of people will be",
    "start": "1426530",
    "end": "1432320"
  },
  {
    "text": "like lazy loading is the best thing or not in that particular case now now if you have a lot of data that needs to be",
    "start": "1432320",
    "end": "1438860"
  },
  {
    "text": "pulled well that better be a next page in general because it's a mobile phone anyways and that's perfectly OK in that",
    "start": "1438860",
    "end": "1446690"
  },
  {
    "text": "case so minimize your data request and then HTTP - you don't even know you're",
    "start": "1446690",
    "end": "1453500"
  },
  {
    "start": "1450000",
    "end": "1450000"
  },
  {
    "text": "using HTTP - if you are not right so for example Google Gmail Gmail has been",
    "start": "1453500",
    "end": "1459410"
  },
  {
    "text": "running on speedy for a while and that's really the precursor to HTTP - and it doesn't really take a lot of",
    "start": "1459410",
    "end": "1465740"
  },
  {
    "text": "effort but HTTP 1 had a lot of issues for example it wasn't the best protocol",
    "start": "1465740",
    "end": "1471440"
  },
  {
    "text": "to download multiple things because TCP would only have one connection and now",
    "start": "1471440",
    "end": "1477440"
  },
  {
    "text": "you can't just have multiple downloads could you do things like have a request and response happening with the same",
    "start": "1477440",
    "end": "1484040"
  },
  {
    "text": "connection you just couldn't do that a lot of those things are already fixed for you in HTTP - and it's also",
    "start": "1484040",
    "end": "1490390"
  },
  {
    "text": "compatible its backward compatible so moving here is not hard at all so this",
    "start": "1490390",
    "end": "1496670"
  },
  {
    "text": "is really good because they've got binary framing which actually is faster it can compress your data I mean it's",
    "start": "1496670",
    "end": "1501860"
  },
  {
    "text": "smaller and it's faster at the same time you're gonna have requests and response with the same session then you also can",
    "start": "1501860",
    "end": "1508550"
  },
  {
    "text": "do parallel requests now previously there was a limit I still there is a limit I think it was - for multiple",
    "start": "1508550",
    "end": "1514250"
  },
  {
    "text": "downloads and we different browsers at 6:00 and 8:00 and things like that well with http/2 you can have a lot of",
    "start": "1514250",
    "end": "1520700"
  },
  {
    "text": "multiple downloads at the same time which is pretty smart and then it does head our compression server push is",
    "start": "1520700",
    "end": "1527420"
  },
  {
    "text": "another really good thing so for example you have a client and the server wants to push a lot of data we don't allow that right now just because we don't",
    "start": "1527420",
    "end": "1534020"
  },
  {
    "text": "want to overload the client with HTTP - you can do that but the client has a",
    "start": "1534020",
    "end": "1539570"
  },
  {
    "text": "right to say no I don't want this data so if the server already know is that these are the 54 different files that I",
    "start": "1539570",
    "end": "1545750"
  },
  {
    "text": "want to send to the client and the client is willing to accept it HTTP - allows that with HTTP 1.1 there's not a",
    "start": "1545750",
    "end": "1552380"
  },
  {
    "text": "really good way of doing it and then the last thing is stream prioritization just",
    "start": "1552380",
    "end": "1557570"
  },
  {
    "text": "because you're sending multiple resources at the same time you have to understand that you need to be able to",
    "start": "1557570",
    "end": "1563990"
  },
  {
    "text": "do weight and dependency so we know on the other side what order these",
    "start": "1563990",
    "end": "1569420"
  },
  {
    "text": "resources were supposed to come to us as in the client right am I too fast I'm",
    "start": "1569420",
    "end": "1575540"
  },
  {
    "text": "trying to cover a lot of things today we can also slow down and cover 50% of it",
    "start": "1575540",
    "end": "1581060"
  },
  {
    "text": "or you want me to go fast and cover most of it fast looks like everyone wants me to be fast",
    "start": "1581060",
    "end": "1587300"
  },
  {
    "text": "perfect can't believe you guys are awesome this is almost 5:00 p.m. you should be sleeping right now all right",
    "start": "1587300",
    "end": "1594200"
  },
  {
    "start": "1589000",
    "end": "1589000"
  },
  {
    "text": "it's a critical rendering pot and this is very important because it's really the time taken to get to the first",
    "start": "1594200",
    "end": "1600800"
  },
  {
    "text": "render of the page I'm not talking about the first byte time taken to get to the first byte as we saw is way faster but",
    "start": "1600800",
    "end": "1607880"
  },
  {
    "text": "sometimes the first render could even be five seconds later so how does it work behind the scenes we just talked about",
    "start": "1607880",
    "end": "1614930"
  },
  {
    "text": "the network so if you are going to actually be - you will not have to deal with a lot of problems with HTTP 1.1",
    "start": "1614930",
    "end": "1621100"
  },
  {
    "text": "assuming we've got that fixed we've got HTML and then we have CSS and",
    "start": "1621100",
    "end": "1626240"
  },
  {
    "text": "we have JavaScript with HTML we create a Dom which we all know and then with CSS",
    "start": "1626240",
    "end": "1632300"
  },
  {
    "text": "we create a CSS object model and - we take these two things and create a",
    "start": "1632300",
    "end": "1637310"
  },
  {
    "text": "render tree if we have any JavaScript that's also part of the render tree but what's really important is not the Dom",
    "start": "1637310",
    "end": "1643820"
  },
  {
    "text": "tree what's really important is the render tree because there are two different things and then we have the layer",
    "start": "1643820",
    "end": "1649010"
  },
  {
    "text": "and then it gets painted to whatever device you're part of and if you have to understand performance all you need to",
    "start": "1649010",
    "end": "1654890"
  },
  {
    "text": "do is understand this particular diagram and you're good to go let's take an",
    "start": "1654890",
    "end": "1660080"
  },
  {
    "text": "example so HTML you can do progressive rendering so the way it works it gets",
    "start": "1660080",
    "end": "1665960"
  },
  {
    "text": "downloaded and by the time it's got till here we're already creating our Dom right and",
    "start": "1665960",
    "end": "1672050"
  },
  {
    "text": "this is going on it might not have even got to the link element yet so you can see I don't have the right-hand side of",
    "start": "1672050",
    "end": "1677720"
  },
  {
    "text": "the equation this is how this is gonna look at this point of time the title will show up actually and then let's go",
    "start": "1677720",
    "end": "1685100"
  },
  {
    "text": "a little further and assume that we got everything else in this case what happens is we get our CSS which is here",
    "start": "1685100",
    "end": "1692510"
  },
  {
    "text": "so we got the div and that says hello world and we have a paragraph which says",
    "start": "1692510",
    "end": "1697730"
  },
  {
    "text": "hidden and it's really a display:none so if I were to go back it has a display:none property so this is part of",
    "start": "1697730",
    "end": "1705650"
  },
  {
    "text": "my Dom but this will not be part of my render tree right because that's exactly",
    "start": "1705650",
    "end": "1710930"
  },
  {
    "text": "what we're trying to paint so if I were to go a little further and go look at",
    "start": "1710930",
    "end": "1716390"
  },
  {
    "text": "this diagram now we have the render tree and the render tree is going to be just this guy he won't have this part is that",
    "start": "1716390",
    "end": "1725000"
  },
  {
    "text": "clear so now render tree is really creating the layout which gets painted",
    "start": "1725000",
    "end": "1730340"
  },
  {
    "text": "to whatever device were part of so that's what's happening here so we don't see hidden but we see hello world",
    "start": "1730340",
    "end": "1737440"
  },
  {
    "text": "so tips stream HTML because it's progressive so what you want to do is",
    "start": "1737440",
    "end": "1743180"
  },
  {
    "text": "let it come down as it is and it's going to start progressively rendering itself right when you're doing progressive",
    "start": "1743180",
    "end": "1749240"
  },
  {
    "text": "rendering you also want to make sure that you want to do server-side render HTML because what you don't want to do is have the client-side render your",
    "start": "1749240",
    "end": "1756230"
  },
  {
    "text": "first HTML page because it's gonna take a little longer right so the first page",
    "start": "1756230",
    "end": "1761780"
  },
  {
    "text": "at least has to be server-side render after that you can choose what you want to do then you have critical CSS why do",
    "start": "1761780",
    "end": "1769460"
  },
  {
    "text": "you want it inline if you read Steve Souders book he actually says that what you want to do is you want to package",
    "start": "1769460",
    "end": "1774740"
  },
  {
    "text": "all your CSS and bring it back together which is a great idea for HTTP 1.1 but",
    "start": "1774740",
    "end": "1779990"
  },
  {
    "text": "you still want your critical CSS in because what you don't want to do is wait forever before your render tree",
    "start": "1779990",
    "end": "1788270"
  },
  {
    "text": "gets populated critical CSS is the minimum CSS you need on your home page",
    "start": "1788270",
    "end": "1793910"
  },
  {
    "text": "right and that needs to come in inline it's going to increase the size of our HTML a little bit and that's perfectly",
    "start": "1793910",
    "end": "1800510"
  },
  {
    "text": "okay but we're only talking about the critical CSS now keep in mind CSS also",
    "start": "1800510",
    "end": "1805940"
  },
  {
    "text": "blocks you so if you got 20 different CSS files together in one CSS file it's",
    "start": "1805940",
    "end": "1812300"
  },
  {
    "text": "gonna wait for the entire file to load and then it's gonna create the CSS object model because it's not you know",
    "start": "1812300",
    "end": "1819320"
  },
  {
    "text": "because it has to take in account that there could be another file that has some Styles that have to be part of the",
    "start": "1819320",
    "end": "1825050"
  },
  {
    "text": "renderer page so that's another tip you might want to make sure that if you have",
    "start": "1825050",
    "end": "1830120"
  },
  {
    "text": "any critical CSS and that said it's a couple of files you might want to just coalesce those two files and leave the",
    "start": "1830120",
    "end": "1835610"
  },
  {
    "text": "18 away to come in later right so that's one thing because we need progressive",
    "start": "1835610",
    "end": "1841490"
  },
  {
    "text": "rendering now javascript is important and this is very blocking the reason is",
    "start": "1841490",
    "end": "1847490"
  },
  {
    "text": "simple that this can also change the DOM and it can also change the CSS object",
    "start": "1847490",
    "end": "1853220"
  },
  {
    "text": "model so by default it must be blocking so let's focus on this part now",
    "start": "1853220",
    "end": "1861110"
  },
  {
    "text": "javascript if you want to make sure that you have something third-party like analytics you want to make it a Singh",
    "start": "1861110",
    "end": "1867950"
  },
  {
    "text": "why do you want to make it a sync because you don't want it to block anything now this will block so a lot of",
    "start": "1867950",
    "end": "1875180"
  },
  {
    "text": "times you'll see that people will tell you that hey take your scripts and put it at the bottom right here right so",
    "start": "1875180",
    "end": "1881330"
  },
  {
    "text": "right before the end of the body tag which i think is a very good idea for the most part but what if you have a single page app your angularjs code it's",
    "start": "1881330",
    "end": "1888950"
  },
  {
    "text": "not gonna lie in here right it might have to be somewhere here so that's again part of your critical java script",
    "start": "1888950",
    "end": "1895070"
  },
  {
    "text": "and it's okay to put it up there but remember it's gonna block a lot of things now what happens with the asing",
    "start": "1895070",
    "end": "1902930"
  },
  {
    "text": "file it will also execute when it's ready so that execution will take time",
    "start": "1902930",
    "end": "1908420"
  },
  {
    "text": "so let's say this is about 120 kilobytes and you're not going to use it on home",
    "start": "1908420",
    "end": "1914510"
  },
  {
    "text": "page but you might use it on different page in a single page application scenario",
    "start": "1914510",
    "end": "1919669"
  },
  {
    "text": "what you're doing is you're also paying for that execution right so that's one",
    "start": "1919669",
    "end": "1925519"
  },
  {
    "text": "thing to keep in mind in this case we're already paying for blocking parsing and executing it's gonna happen and",
    "start": "1925519",
    "end": "1931519"
  },
  {
    "text": "nothing's gonna happen before that right so we're making it wait now this is a",
    "start": "1931519",
    "end": "1936590"
  },
  {
    "text": "design question for you guys and you you can take your decision in your own way in the older browsers if this is the",
    "start": "1936590",
    "end": "1943460"
  },
  {
    "start": "1940000",
    "end": "1940000"
  },
  {
    "text": "timeline this is what happened external script one came down and then you had parsing and execution which is taking",
    "start": "1943460",
    "end": "1949970"
  },
  {
    "text": "another let's say 500 milliseconds and then you have another let's say you know 500 milliseconds of download another 500",
    "start": "1949970",
    "end": "1957289"
  },
  {
    "text": "milliseconds of execution and parsing and then you can get these so what's",
    "start": "1957289",
    "end": "1962389"
  },
  {
    "text": "interesting is they did not even allow you to download anything because it's all blocking and they're also not doing",
    "start": "1962389",
    "end": "1968690"
  },
  {
    "text": "anything multiple downloads in this case this is older browser well then one fine morning",
    "start": "1968690",
    "end": "1973940"
  },
  {
    "text": "they realized it was not the best thing to do so what they did was all right we're gonna get all these but we're",
    "start": "1973940",
    "end": "1981169"
  },
  {
    "text": "gonna wait and then we're gonna execute them even though we can get all of them in parallel we're gonna still execute",
    "start": "1981169",
    "end": "1987110"
  },
  {
    "text": "them in a certain order which kind of makes sense so you parse them and execute them and then you have the other",
    "start": "1987110",
    "end": "1993710"
  },
  {
    "text": "things coming down now if you want to play with this there's a really good resource gazillion created by Steve",
    "start": "1993710",
    "end": "2002169"
  },
  {
    "text": "Souders so you go to kazillion com you can say here here's an external script and then I'm gonna put an inline script",
    "start": "2002169",
    "end": "2008470"
  },
  {
    "text": "external stylesheet and image sorry",
    "start": "2008470",
    "end": "2016258"
  },
  {
    "text": "oh you can see it something like this and then say create and before that I",
    "start": "2026000",
    "end": "2033170"
  },
  {
    "text": "just pull up my network tab wow that",
    "start": "2033170",
    "end": "2041450"
  },
  {
    "text": "takes forever that's our Wi-Fi and you can check the",
    "start": "2041450",
    "end": "2048200"
  },
  {
    "text": "timeline you can see a lot of these things so if you did not have a script then you could have had CSS and you could have add the image downloading in",
    "start": "2048200",
    "end": "2054980"
  },
  {
    "text": "parallel which is perfectly okay right so look at this because it'll give you a good idea we're not gonna get into a lot",
    "start": "2054980",
    "end": "2060320"
  },
  {
    "text": "of detail here back to our PowerPoint so we can cover a lot of these Wow okay",
    "start": "2060320",
    "end": "2067580"
  },
  {
    "text": "technical issues it's not as fast as our website yet PowerPoint is not fast as",
    "start": "2067580",
    "end": "2073370"
  },
  {
    "text": "fast as our websites right we pee it faster websites than the PowerPoint just kidding was a joke next time I have a",
    "start": "2073370",
    "end": "2079580"
  },
  {
    "start": "2078000",
    "end": "2078000"
  },
  {
    "text": "joke I'm gonna raise my hand so you know it's okay all right so gmail Mobile did",
    "start": "2079580",
    "end": "2085700"
  },
  {
    "text": "it a very good technique there they realize that there could be script for example you go on gmail mobile and you",
    "start": "2085700",
    "end": "2091070"
  },
  {
    "text": "say okay compose and you may not just use it you might just be checking your emails and on that page you might never",
    "start": "2091070",
    "end": "2096590"
  },
  {
    "text": "use compose so what's the point of getting that additional 100 kilobyte of code and then executing it so this is",
    "start": "2096590",
    "end": "2103340"
  },
  {
    "text": "what they did a very smart hack so they went inside their script tag and you",
    "start": "2103340",
    "end": "2109250"
  },
  {
    "text": "know commented their code and anytime you wanted to use it all that it is get the script tag element from the Dom and",
    "start": "2109250",
    "end": "2116420"
  },
  {
    "text": "remove the comments and then eval their own code now evil is not good for",
    "start": "2116420",
    "end": "2123140"
  },
  {
    "text": "security reasons but evil is completely okay for your own code so that's not a",
    "start": "2123140",
    "end": "2129050"
  },
  {
    "text": "bad hack but it's interesting because now they're saving time on execution which is a very smart idea there's",
    "start": "2129050",
    "end": "2135590"
  },
  {
    "text": "another way to do this too you could also do script type equals to you know source equals let's say your JavaScript",
    "start": "2135590",
    "end": "2142730"
  },
  {
    "text": "file dot XYZ now you change the extension because the browser is not gonna execute it you can get that an",
    "start": "2142730",
    "end": "2149660"
  },
  {
    "text": "async download and you change that extension and then you can change the extension back to Jas and execute it",
    "start": "2149660",
    "end": "2154850"
  },
  {
    "text": "when you want to execute it especially something that complicated like a gmail on a phone you want to create you know keep your",
    "start": "2154850",
    "end": "2161780"
  },
  {
    "text": "resources so there's something called control jazz you can look at it Steve Souders created it very good library that's very similar",
    "start": "2161780",
    "end": "2168680"
  },
  {
    "text": "stuff now javascript can block CSS it can block the Dom so you want to use",
    "start": "2168680",
    "end": "2174020"
  },
  {
    "text": "async but you want to avoid document out right in the middle of the page you document all right it's gonna block",
    "start": "2174020",
    "end": "2179810"
  },
  {
    "text": "everything else so if you have to force something right that's when is to be blocked that's when",
    "start": "2179810",
    "end": "2186860"
  },
  {
    "text": "you use document all right so if document all right has a picture as part of it well then you're blocking the",
    "start": "2186860",
    "end": "2193490"
  },
  {
    "text": "execution and if you want to do that only then use it so you can defer everything except the critical script",
    "start": "2193490",
    "end": "2200590"
  },
  {
    "text": "everything else can go back to the body tag which is a good idea again all four HTTP one so critical rendering path",
    "start": "2200590",
    "end": "2208340"
  },
  {
    "text": "let's talk about layout and paint so",
    "start": "2208340",
    "end": "2214190"
  },
  {
    "start": "2212000",
    "end": "2212000"
  },
  {
    "text": "this is where you have 60 frames equals to 1000 milliseconds what that really",
    "start": "2214190",
    "end": "2219290"
  },
  {
    "text": "means is one frame should be rendered in just 16 milliseconds now how does that",
    "start": "2219290",
    "end": "2224690"
  },
  {
    "text": "work in order to get a frame rendered really what you have is your code and",
    "start": "2224690",
    "end": "2230630"
  },
  {
    "text": "then you have garbage collection and you have layout and your paint not necessarily in that order but you really",
    "start": "2230630",
    "end": "2237230"
  },
  {
    "text": "have about ten eleven milliseconds because rest of the time is going to be used by the browser what happens if it",
    "start": "2237230",
    "end": "2242900"
  },
  {
    "text": "is beyond 16 milliseconds your frame gets dropped and that's not a good thing",
    "start": "2242900",
    "end": "2248750"
  },
  {
    "text": "so you need to make sure that you're always checking this so do you want to",
    "start": "2248750",
    "end": "2255290"
  },
  {
    "text": "see an example of this so here's an example from cnn.com and the way you",
    "start": "2255290",
    "end": "2263210"
  },
  {
    "text": "check this is you know you go to your performance tab and look for these red signals they recently change this so I'm",
    "start": "2263210",
    "end": "2272150"
  },
  {
    "text": "gonna try this all right so if I were to pick any of these red bars I could come in here and how about",
    "start": "2272150",
    "end": "2277220"
  },
  {
    "text": "and you see it's 5 frames a second that's really bad right now you can come in here and go here and you can just try",
    "start": "2277220",
    "end": "2283940"
  },
  {
    "text": "this and it will be like 1 frames a second here there's really nothing going on there 1 frames a second I mean and",
    "start": "2283940",
    "end": "2291440"
  },
  {
    "text": "this is how you can check your entire code",
    "start": "2291440",
    "end": "2295240"
  },
  {
    "text": "actually it just happens to be that particular segment that we're not even getting anything that's good so that's",
    "start": "2297040",
    "end": "2306170"
  },
  {
    "text": "an example here's where you can find out your frames and then get more details about it and you can also dig deep into",
    "start": "2306170",
    "end": "2311810"
  },
  {
    "text": "it where exactly you're having that issue right here and work with it but",
    "start": "2311810",
    "end": "2319520"
  },
  {
    "text": "this is one thing I would do maybe part of your testing now speed is a feature for us a lot of times speed it just",
    "start": "2319520",
    "end": "2325580"
  },
  {
    "text": "happens to be one of the things right performance has to be a feature it has to be part of your agile you know chart",
    "start": "2325580",
    "end": "2334100"
  },
  {
    "text": "basically like okay well here's the story on performance and that's where you might want to take care of a lot of",
    "start": "2334100",
    "end": "2339620"
  },
  {
    "text": "these things so how does it layout work so when you're resizing you know you're",
    "start": "2339620",
    "end": "2344630"
  },
  {
    "text": "adding or removing nodes you're changing styles at that point of time you're also changing the layout so let's look into",
    "start": "2344630",
    "end": "2351410"
  },
  {
    "start": "2350000",
    "end": "2350000"
  },
  {
    "text": "this that was a simplified view of a frame but let's take an example like",
    "start": "2351410",
    "end": "2356450"
  },
  {
    "text": "this so for example you have elements and you're going through elements and you say all right element art style dot left equals",
    "start": "2356450",
    "end": "2363710"
  },
  {
    "text": "element offset left plus one what do we do we're making changes here first where",
    "start": "2363710",
    "end": "2369440"
  },
  {
    "text": "we're actually querying this value then second were updating this when we update",
    "start": "2369440",
    "end": "2374450"
  },
  {
    "text": "this it's forced to actually paint so this layout is now forced so what's",
    "start": "2374450",
    "end": "2380270"
  },
  {
    "text": "happening if you look at the color green that's the layout right so got my code",
    "start": "2380270",
    "end": "2385550"
  },
  {
    "text": "and then I've got my layout then I got my code then I got my layout imagine this happening let's say hundred times",
    "start": "2385550",
    "end": "2392030"
  },
  {
    "text": "now I'm doing that here right and it's a very expensive operation",
    "start": "2392030",
    "end": "2397400"
  },
  {
    "text": "and then finally paints going to happen so this is not a very good thing so when",
    "start": "2397400",
    "end": "2404900"
  },
  {
    "start": "2402000",
    "end": "2402000"
  },
  {
    "text": "you're applying your visual styles really you create the bitmap and then you pixelate the screen and that's",
    "start": "2404900",
    "end": "2410900"
  },
  {
    "text": "really paint right so the previous one was layout this is the paint process so",
    "start": "2410900",
    "end": "2416840"
  },
  {
    "text": "what do you want to do you want to update the minimum area that's needed and then make sure that some styles that",
    "start": "2416840",
    "end": "2423110"
  },
  {
    "text": "are more expensive we take care of them in a different way we'll look into some examples so something like this is a very bad",
    "start": "2423110",
    "end": "2430219"
  },
  {
    "text": "idea because it's actually doing reflow which we'll talk about in a second so",
    "start": "2430219",
    "end": "2435259"
  },
  {
    "text": "we're doing that one two and three so we're doing it three times now this is expensive because we are forcing a",
    "start": "2435259",
    "end": "2440929"
  },
  {
    "text": "layout we're forcing a paint a better way to do the same thing would we take",
    "start": "2440929",
    "end": "2446689"
  },
  {
    "text": "something like this you have a style and then you have a CSS text or even you can",
    "start": "2446689",
    "end": "2452269"
  },
  {
    "text": "even have a class name here and say well add it to the particular class and then you can add a colon semicolon here and",
    "start": "2452269",
    "end": "2459109"
  },
  {
    "text": "then add the style to the class or you can override a class where you do something else but now we have",
    "start": "2459109",
    "end": "2464479"
  },
  {
    "text": "everything in one line and this is gonna be one operation to paint the same exact",
    "start": "2464479",
    "end": "2469909"
  },
  {
    "text": "thing write a lot of code like this is everywhere I mean you just go to almost",
    "start": "2469909",
    "end": "2475219"
  },
  {
    "text": "every website out there right click on the view source and you'll get a lot of code like this but it's an expensive",
    "start": "2475219",
    "end": "2480829"
  },
  {
    "text": "operation the best thing with html5 is that we have the same spec across all",
    "start": "2480829",
    "end": "2486109"
  },
  {
    "text": "browsers so previously there was a lot of difference but now most of them will handle it in the same exact way I'm",
    "start": "2486109",
    "end": "2491659"
  },
  {
    "text": "talking about the primary browsers so it's very predictable here's another example this is inefficient because",
    "start": "2491659",
    "end": "2498199"
  },
  {
    "text": "here's what I'm doing I'm getting an offset left adding pixels to it and then I update that value right here so I'm",
    "start": "2498199",
    "end": "2504619"
  },
  {
    "text": "also looking for that value and then similarly updated and then I do the same thing here and then if I'm checking for",
    "start": "2504619",
    "end": "2512119"
  },
  {
    "text": "this particular value which I've already used here so what should I really do I should cache that value because why",
    "start": "2512119",
    "end": "2518929"
  },
  {
    "text": "would I want to look this value up every single time I'm using it that's a really good pattern in JavaScript in general",
    "start": "2518929",
    "end": "2524089"
  },
  {
    "text": "anytime you're doing this for example document dot you know get elements by",
    "start": "2524089",
    "end": "2529150"
  },
  {
    "text": "tag name and you have a bunch of elements what you don't want to do is take that and then look for element",
    "start": "2529150",
    "end": "2536689"
  },
  {
    "text": "number 9 every single time you do that what you want to do is take that value put it to a local variable because",
    "start": "2536689",
    "end": "2542839"
  },
  {
    "text": "that's now cached so this needs to go in a local variable that's the first thing",
    "start": "2542839",
    "end": "2547909"
  },
  {
    "text": "so we take this out we create a local variable so now we're now doing a lot of lookups and then we can say left is this",
    "start": "2547909",
    "end": "2555499"
  },
  {
    "text": "and then top is that and now we're checking for this not this and that's",
    "start": "2555499",
    "end": "2560989"
  },
  {
    "text": "how your performance here right and then if it is greater than 500 do something with it",
    "start": "2560989",
    "end": "2567910"
  },
  {
    "text": "the most expensive part of the entire process here is paint so what do you",
    "start": "2567910",
    "end": "2573829"
  },
  {
    "text": "want to do you want to make sure that you use it the least amount of times right anytime you change the property",
    "start": "2573829",
    "end": "2580190"
  },
  {
    "text": "it's gonna trigger a paint now keep in mind layout automatically triggers paint",
    "start": "2580190",
    "end": "2586400"
  },
  {
    "text": "so anything we did right in case of layout needs to stay with us because if",
    "start": "2586400",
    "end": "2591529"
  },
  {
    "text": "we change the layout paint anyway it's gonna happen now it can also trigger paint without layout",
    "start": "2591529",
    "end": "2598009"
  },
  {
    "text": "if you change the background you change the text colors you change shadows so there are a little bit more expensive so",
    "start": "2598009",
    "end": "2604190"
  },
  {
    "text": "shadow is a little bit more expensive than a regular style for that particular reason so reduce the paint area one good",
    "start": "2604190",
    "end": "2611630"
  },
  {
    "text": "way to look at how to reduce the paint area is now that takes forever all right",
    "start": "2611630",
    "end": "2618380"
  },
  {
    "text": "so we go back here let's say you have again right this is where you can see it so you go to these tools go to more",
    "start": "2618380",
    "end": "2624710"
  },
  {
    "text": "tools and then go to rendering and this thing pops up and then you click paint flashing so you can see if I remove this",
    "start": "2624710",
    "end": "2631460"
  },
  {
    "text": "the green color is gonna go away so what's happening in this game is that the entire block is getting rendered in",
    "start": "2631460",
    "end": "2638180"
  },
  {
    "text": "fact the entire page is getting re rendered which is not a very good idea so let's just go to something else let's",
    "start": "2638180",
    "end": "2643910"
  },
  {
    "text": "say google.com actually let's just do it right here so",
    "start": "2643910",
    "end": "2652999"
  },
  {
    "text": "in case of google.com you can see that the green layer is just over there so that's the only thing that's gonna",
    "start": "2652999",
    "end": "2658609"
  },
  {
    "text": "change so that's the only segment that changes whereas in the previous one you have the entire page re-rendered every",
    "start": "2658609",
    "end": "2665390"
  },
  {
    "text": "single time and not a very good idea right so those blocks you can identify those blocks in your code and then work",
    "start": "2665390",
    "end": "2671480"
  },
  {
    "text": "on fixing those one by one",
    "start": "2671480",
    "end": "2675609"
  },
  {
    "text": "so reflow let's talk about reflow whenever you resize a window this is",
    "start": "2690580",
    "end": "2696370"
  },
  {
    "text": "gonna happen right so when you're resizing a window let's say you have one tree one render tree and you resize the",
    "start": "2696370",
    "end": "2703420"
  },
  {
    "text": "window let's say you go from a tablet view to a mobile view this is gonna happen right when you change a font this",
    "start": "2703420",
    "end": "2709990"
  },
  {
    "text": "is gonna happen when you change certain classes like hover change the class attribute you can also calculate offset",
    "start": "2709990",
    "end": "2717880"
  },
  {
    "text": "width height and this is still gonna happen and reflow is very expensive when reflow happens what happens next",
    "start": "2717880",
    "end": "2724810"
  },
  {
    "text": "first of all if reflow changed in element it's gonna change all the child",
    "start": "2724810",
    "end": "2730630"
  },
  {
    "text": "nodes it's a really bad thing second it's also gonna talk to everything that's following it and it's",
    "start": "2730630",
    "end": "2737770"
  },
  {
    "text": "gonna reflow the entire thing so it's repainting that entire thing it's not a very good idea effectively the entire",
    "start": "2737770",
    "end": "2743950"
  },
  {
    "text": "page is read rendered after that element so there are certain ways you can prevent that now we remember that one",
    "start": "2743950",
    "end": "2750970"
  },
  {
    "text": "thing we talked about was that if you don't if you have something as display:none or it's hidden it's not",
    "start": "2750970",
    "end": "2757330"
  },
  {
    "text": "part of the render tree and anytime you work on something that's not part of the",
    "start": "2757330",
    "end": "2762490"
  },
  {
    "text": "render tree reflow won't be triggered so what you could do is change the",
    "start": "2762490",
    "end": "2767830"
  },
  {
    "text": "visibility to hidden work on it and then replace it back and say visibility block",
    "start": "2767830",
    "end": "2775260"
  },
  {
    "text": "very smart technique but you've saved a lot of your overhead your performance is",
    "start": "2775260",
    "end": "2780730"
  },
  {
    "text": "going to increase drastically so let's take an example for reflow so you can also use a fragment so you go to",
    "start": "2780730",
    "end": "2786880"
  },
  {
    "text": "document create a document fragment you take that fragment and say okay here's my element which is P and I have",
    "start": "2786880",
    "end": "2794080"
  },
  {
    "text": "contents of that element I've got all of that in my fragment go append that",
    "start": "2794080",
    "end": "2799180"
  },
  {
    "text": "particular Dom element now and then append that fragment to the Dom this way",
    "start": "2799180",
    "end": "2806800"
  },
  {
    "text": "we didn't many people ate the Dom and we did not cause reflow to happen which was",
    "start": "2806800",
    "end": "2813460"
  },
  {
    "text": "actually the more expensive operation so this is another way of doing the same exact thing",
    "start": "2813460",
    "end": "2819420"
  },
  {
    "start": "2819000",
    "end": "2819000"
  },
  {
    "text": "you can also clone that particular element so for example you have container and then you clone the",
    "start": "2822309",
    "end": "2829369"
  },
  {
    "text": "original element work on it once that's completely done replace it back right",
    "start": "2829369",
    "end": "2836269"
  },
  {
    "text": "here and you could do the same exact thing keep in mind it it only is a problem if you're working with something",
    "start": "2836269",
    "end": "2842299"
  },
  {
    "text": "in the Dom if you're working with something in memory it's not a problem but these are very simple things you",
    "start": "2842299",
    "end": "2849559"
  },
  {
    "text": "know a lot of times you look at this code you can oversee it because your junior developer might not know what he",
    "start": "2849559",
    "end": "2854900"
  },
  {
    "text": "was doing but these are certain things that you want to talk to everyone in your company in a brown max session and say look we have a policy we're only",
    "start": "2854900",
    "end": "2861890"
  },
  {
    "text": "gonna do this and you can show how expensive it is by just showing one of the chrome developer tools or any other",
    "start": "2861890",
    "end": "2867529"
  },
  {
    "text": "browser you use so here's another one that I talked about where the display",
    "start": "2867529",
    "end": "2873019"
  },
  {
    "text": "was none we make some changes and you can do any amount of changes by the way here you can actually go and do another",
    "start": "2873019",
    "end": "2878959"
  },
  {
    "text": "10 15 lines it's not gonna make any difference remember previously we had three styles and I said we don't want to",
    "start": "2878959",
    "end": "2885079"
  },
  {
    "text": "do it three times so let's get into a class in this case what I'm saying is it doesn't matter it could be any amount of",
    "start": "2885079",
    "end": "2891319"
  },
  {
    "text": "changes at this point of time you can have 10 15 20 doesn't really matter once",
    "start": "2891319",
    "end": "2896509"
  },
  {
    "text": "you've done all of them all you're saying is display block so you can choose any of the three techniques right",
    "start": "2896509",
    "end": "2902299"
  },
  {
    "text": "one thing you have to remember about the document fragment is if you have a form you can get into issues with it because",
    "start": "2902299",
    "end": "2909319"
  },
  {
    "text": "there's a lot of things going on in an actual forum so be careful with that approach thought leaders to follow",
    "start": "2909319",
    "end": "2916339"
  },
  {
    "start": "2914000",
    "end": "2914000"
  },
  {
    "text": "they're really good people they've got a lot of free content out there I think more important than any books that you",
    "start": "2916339",
    "end": "2922069"
  },
  {
    "text": "want to read because most of them are actually outdated these are the right people to follow maybe take a picture of",
    "start": "2922069",
    "end": "2927140"
  },
  {
    "text": "this and you can take my picture if you want ok and yeah I mean there's got a",
    "start": "2927140",
    "end": "2933619"
  },
  {
    "text": "lot of good stuff and then books you've got computer networks by Tenenbaum I highly recommend it I read it during my",
    "start": "2933619",
    "end": "2940279"
  },
  {
    "text": "Master's it's very very good there's a lot of good stuff that you still don't find anywhere else it's got the fifth",
    "start": "2940279",
    "end": "2945499"
  },
  {
    "text": "edition now you know and it's updating you yeah Gregorek has written a very good book I think there's a little bit",
    "start": "2945499",
    "end": "2952429"
  },
  {
    "text": "overlap there but this book is still treating a lot of good stuff especially about networks as a developer you might",
    "start": "2952429",
    "end": "2958610"
  },
  {
    "text": "not have ever gotten it your networks as much especially if you're not done computer networks as part of your",
    "start": "2958610",
    "end": "2963830"
  },
  {
    "text": "courses a good refresher and he's updated the content quite a bit it's also I think this one is available",
    "start": "2963830",
    "end": "2969710"
  },
  {
    "text": "online for free high-performance JavaScript a lot of what he talks about is great for when you wrote the book I",
    "start": "2969710",
    "end": "2976970"
  },
  {
    "text": "would highly recommend testing a lot of things because at this point of times browsers have got better so a lot of",
    "start": "2976970",
    "end": "2983480"
  },
  {
    "text": "times you'll see is like he'll give you ideas which I think are good ideas but at the same time those things have been",
    "start": "2983480",
    "end": "2989660"
  },
  {
    "text": "fixed in most of the browsers so when you read this book I would also do my own testing and then high-performance",
    "start": "2989660",
    "end": "2996950"
  },
  {
    "text": "websites and I think he's got a second book - so this was 2008 I think or nine and then later he comes up with another",
    "start": "2996950",
    "end": "3003670"
  },
  {
    "text": "book which I think is another really good book where he has a lot of updates whatever you see here is great but then",
    "start": "3003670",
    "end": "3010690"
  },
  {
    "text": "he's added a lot to it later and we touched upon a lot of those concepts -",
    "start": "3010690",
    "end": "3015960"
  },
  {
    "text": "all right so let's talk about some code because we have some time I believe how much time do we have we have 10 minutes",
    "start": "3015960",
    "end": "3025380"
  },
  {
    "text": "perfect all right so let's take an example here I've got something called an car object it has images lamp a lot",
    "start": "3025380",
    "end": "3033430"
  },
  {
    "text": "of times you'll see this in your loops and keep in mind loops are not always 10 I've seen loops that are sometimes ten",
    "start": "3033430",
    "end": "3039610"
  },
  {
    "text": "thousand which unfortunately exists in a lot of actual code so what you want to do is do something like this where you",
    "start": "3039610",
    "end": "3047530"
  },
  {
    "text": "know you get the images now you have card or images because imagine in this",
    "start": "3047530",
    "end": "3053350"
  },
  {
    "text": "case you're always making that call even though you're part of the same loop the the values shouldn't change but you are",
    "start": "3053350",
    "end": "3060490"
  },
  {
    "text": "assuming that they might and that's why you're looping through it so once you cash that object everything else becomes",
    "start": "3060490",
    "end": "3066970"
  },
  {
    "text": "easy so that's a typo it should be images dot length and sometimes you're even better off cashing the length you",
    "start": "3066970",
    "end": "3074380"
  },
  {
    "text": "can just take the lent out why do you want that lens to be you know calculated over and over again so really what you",
    "start": "3074380",
    "end": "3080650"
  },
  {
    "text": "do is more images equals called or images and then you can do images of length equals two images of length I is",
    "start": "3080650",
    "end": "3086560"
  },
  {
    "text": "less than land I've Plus and then do whatever you want to do here so that's a little bit more efficient another one oh we actually I",
    "start": "3086560",
    "end": "3096320"
  },
  {
    "text": "just talked about that so second example is just building on the first example where now I'm catching the length and",
    "start": "3096320",
    "end": "3101960"
  },
  {
    "text": "now it's left and land Len equals 2x tall and you could do it part of the loop you could do it outside the loop",
    "start": "3101960",
    "end": "3109480"
  },
  {
    "start": "3109000",
    "end": "3109000"
  },
  {
    "text": "inspection time so for example here you have elements and you're trying to get",
    "start": "3109960",
    "end": "3115910"
  },
  {
    "text": "all the elements this is not a very good thing because it's a star and assuming you're dumb is big this is a disaster so",
    "start": "3115910",
    "end": "3123230"
  },
  {
    "text": "here you have all elements and then you're gonna loop through all the elements all dot length and then if that",
    "start": "3123230",
    "end": "3129050"
  },
  {
    "text": "particular guy has that particular attribute then do something with it right so in this case what you could do",
    "start": "3129050",
    "end": "3136400"
  },
  {
    "text": "is document dot get element by ID and go for that particular ID and then get",
    "start": "3136400",
    "end": "3142010"
  },
  {
    "text": "elements by tag name now I still I'm not a big fan of stars anyways because if",
    "start": "3142010",
    "end": "3147290"
  },
  {
    "text": "you really have a way to locate what you're looking for you can also say well maybe it's a div but if you know it's a",
    "start": "3147290",
    "end": "3153680"
  },
  {
    "text": "div only or it's multiple things you're better off doing that rather than a star but the point here is that you're trying",
    "start": "3153680",
    "end": "3160190"
  },
  {
    "text": "to zero in and reduce your overhead by making a smart decision up front about",
    "start": "3160190",
    "end": "3166730"
  },
  {
    "text": "what exactly that element could be is it if I already have the ID and then I know",
    "start": "3166730",
    "end": "3172280"
  },
  {
    "text": "the tag name which is a div or something then I have a much more specific search and it's gonna be having less overhead",
    "start": "3172280",
    "end": "3178660"
  },
  {
    "text": "so far I equals zero eyes less in length I mean it's same exact code and it works",
    "start": "3178660",
    "end": "3184310"
  },
  {
    "text": "perfect XPath now XPath is actually faster than going through the Dom so if",
    "start": "3184310",
    "end": "3190700"
  },
  {
    "text": "it's supported you're better off using that sometimes it could be twice as fast right so that's another thing that I",
    "start": "3190700",
    "end": "3196640"
  },
  {
    "text": "would I would look for not all the time you need it because you know you could actually cache the Dom and do some use",
    "start": "3196640",
    "end": "3203630"
  },
  {
    "text": "some of the techniques that we use previously but it's also available there there's more detail here that was the",
    "start": "3203630",
    "end": "3209360"
  },
  {
    "text": "source and then avoid keeping a live",
    "start": "3209360",
    "end": "3214970"
  },
  {
    "start": "3210000",
    "end": "3210000"
  },
  {
    "text": "references this is very important thing a lot of times in JavaScript we keep things alive that we shouldn't",
    "start": "3214970",
    "end": "3221359"
  },
  {
    "text": "and that's very important so for example you have an iframe or you have something else right now that's a remote document",
    "start": "3221359",
    "end": "3227930"
  },
  {
    "text": "and you also have now a reference to that particular remote document and then",
    "start": "3227930",
    "end": "3234349"
  },
  {
    "text": "you did something with air you got the element by D you got the content and you have the remote container and then you",
    "start": "3234349",
    "end": "3239599"
  },
  {
    "text": "know you clear the element and then you appended the child and then you clear your text node and you add that content",
    "start": "3239599",
    "end": "3244880"
  },
  {
    "text": "and now you're really done with it you've got to make sure that you do this at this particular point of time right",
    "start": "3244880",
    "end": "3251630"
  },
  {
    "text": "making it now now a lot of times people also use delete keyword to delete these",
    "start": "3251630",
    "end": "3257900"
  },
  {
    "text": "and sometimes they do knows so I'll tell you only one point are there if you actually go on your regular you know",
    "start": "3257900",
    "end": "3265519"
  },
  {
    "text": "global scope I'll just show you that example in code so let's say you're here",
    "start": "3265519",
    "end": "3277039"
  },
  {
    "text": "and you've got some kind of script going on and you are in the global scope and if you do water x equals 10 just s equals 10 and VAR y",
    "start": "3277039",
    "end": "3285380"
  },
  {
    "text": "equals to 20 can anyone tell me what's the difference oh sorry",
    "start": "3285380",
    "end": "3295809"
  },
  {
    "text": "can only tell me what's the difference now I was like huh it's an S and a why",
    "start": "3295809",
    "end": "3302539"
  },
  {
    "text": "is that what you're looking for so",
    "start": "3302539",
    "end": "3307819"
  },
  {
    "text": "London is amazing and for the last three days I've been sleeping around 4 p.m. and today I was supposed to talk",
    "start": "3307819",
    "end": "3314839"
  },
  {
    "text": "that's called jet-lagged anyone difference Y they're both global that",
    "start": "3314839",
    "end": "3322160"
  },
  {
    "text": "that's actually a trick because a lot of times you'll think that one is global right they're actually both global because they're part of window object",
    "start": "3322160",
    "end": "3328609"
  },
  {
    "text": "right now if they were in a function then it would be a different story but currently they're both global is there",
    "start": "3328609",
    "end": "3334940"
  },
  {
    "text": "part of script anything else wild",
    "start": "3334940",
    "end": "3341299"
  },
  {
    "text": "guesses it's not an easy one so I'll show you this so we're gonna do",
    "start": "3341299",
    "end": "3350410"
  },
  {
    "text": "s and then we got y",
    "start": "3350410",
    "end": "3354539"
  },
  {
    "text": "Thanks can anyone tell me what's the answer",
    "start": "3367530",
    "end": "3372750"
  },
  {
    "text": "we're gonna print four things what do you think are the values all right let's",
    "start": "3372750",
    "end": "3384070"
  },
  {
    "text": "try this you see that Y is not defined",
    "start": "3384070",
    "end": "3390330"
  },
  {
    "text": "but I was able to print s second time even after deleting it so what's amazing",
    "start": "3390330",
    "end": "3395680"
  },
  {
    "text": "is that I've asked this question in more than 25 different cities in five different continents of the world no one",
    "start": "3395680",
    "end": "3401050"
  },
  {
    "text": "gets it right that tells you something about JavaScript it is not you trust me",
    "start": "3401050",
    "end": "3406080"
  },
  {
    "text": "this should not be this way put it that way so here's what happens if you",
    "start": "3406080",
    "end": "3411160"
  },
  {
    "text": "actually use a VAR and in this case you had you swore with s and it said Y is",
    "start": "3411160",
    "end": "3418270"
  },
  {
    "text": "not defined because Y got deleted but s didn't get the leader because used a var if you use a var in the global scope you",
    "start": "3418270",
    "end": "3425830"
  },
  {
    "text": "can't delete that particular object it's interesting so that's why I use the",
    "start": "3425830",
    "end": "3432610"
  },
  {
    "text": "approach in that case to say S equals null in the last light I do not say delete s because that's I'm not gonna",
    "start": "3432610",
    "end": "3440680"
  },
  {
    "text": "call it bug because this is the specification of Xmas tree right so but this is one thing you need to know now",
    "start": "3440680",
    "end": "3446500"
  },
  {
    "text": "imagine you had a really big Dom element like an object with let's say 35 different tables that's not possible",
    "start": "3446500",
    "end": "3452890"
  },
  {
    "text": "only 32 right anyways some things have big you can't delete it and that's good",
    "start": "3452890",
    "end": "3459220"
  },
  {
    "text": "to know right so what you could do is either make a null or even make an empty string whatever I prefer no that's what",
    "start": "3459220",
    "end": "3464740"
  },
  {
    "text": "I would do",
    "start": "3464740",
    "end": "3467100"
  },
  {
    "text": "cool that's here any questions yes",
    "start": "3469830",
    "end": "3476010"
  },
  {
    "text": "right so the problem with reflow is it's an expensive operation and it's gonna rent read under everything every single",
    "start": "3505999",
    "end": "3512939"
  },
  {
    "text": "time so reflow anytime that's being called it's a better technique to do something else now cloning I know it's a",
    "start": "3512939",
    "end": "3519660"
  },
  {
    "text": "it's a big thing in that case right so that particular example is not the best example what you could do in that case",
    "start": "3519660",
    "end": "3525180"
  },
  {
    "text": "is just hide it and then convert it back to block simple it totally depends on",
    "start": "3525180",
    "end": "3538410"
  },
  {
    "text": "where your object is placed let's say you are the last thing on the page then you're perfectly okay but if you're",
    "start": "3538410",
    "end": "3544499"
  },
  {
    "text": "somewhere in between then your rear end during the entire page pretty much right so even that one reflow is really bad so",
    "start": "3544499",
    "end": "3550499"
  },
  {
    "text": "I would not do to because it will happen very quickly twice oh yeah every single",
    "start": "3550499",
    "end": "3559439"
  },
  {
    "text": "time but if you clone it the way I explain it it's only gonna happen one time",
    "start": "3559439",
    "end": "3566180"
  },
  {
    "text": "okay so for one property that might make sense but for two it may not it's a question does everyone know what the",
    "start": "3575450",
    "end": "3580910"
  },
  {
    "text": "question is so the question is that do we do it whenever the reflow happens you",
    "start": "3580910",
    "end": "3587030"
  },
  {
    "text": "know it happens just because we did something as in we change the style element or whatever and what is that",
    "start": "3587030",
    "end": "3592970"
  },
  {
    "text": "trust hold you know so basically like do we wait if we have three different",
    "start": "3592970",
    "end": "3598520"
  },
  {
    "text": "changes to be made and we do it that way or we just do it every single time right so I would still go with the same",
    "start": "3598520",
    "end": "3605660"
  },
  {
    "text": "approach that if you have style changes then do the first thing that I showed which was don't worry about anything",
    "start": "3605660",
    "end": "3611150"
  },
  {
    "text": "just one time create a class and add all those Styles in a line and then push it",
    "start": "3611150",
    "end": "3616190"
  },
  {
    "text": "over that'll be my first approach because that doesn't require you to do hidden or any other thing that I showed",
    "start": "3616190",
    "end": "3621500"
  },
  {
    "text": "because there are three other ways you could do it right so for anything small like that do something like this which",
    "start": "3621500",
    "end": "3627079"
  },
  {
    "text": "is very simple you don't need to do hidden you don't need to do fragmentation or anything else right now",
    "start": "3627079",
    "end": "3632569"
  },
  {
    "text": "what's the second approach well you really want to deep clone the object because there's a lot of changes you're",
    "start": "3632569",
    "end": "3637579"
  },
  {
    "text": "needing right in that case and that's perfectly okay so that's my take on it",
    "start": "3637579",
    "end": "3643430"
  },
  {
    "text": "I would not overdo it right but remember every single time you have that line",
    "start": "3643430",
    "end": "3648619"
  },
  {
    "text": "it's reflooring the entire thing which is a very expensive operation and if you have that pattern in your code you want",
    "start": "3648619",
    "end": "3655160"
  },
  {
    "text": "to kill it and let everyone else know what that do not do it because you might start with one but someone else might",
    "start": "3655160",
    "end": "3660559"
  },
  {
    "text": "pick it up and add few things and now we have another problem because you can't always look at the entire code right I",
    "start": "3660559",
    "end": "3666260"
  },
  {
    "text": "mean it's two to five million lines of JavaScript code average in newer applications now so I can't personally",
    "start": "3666260",
    "end": "3673760"
  },
  {
    "text": "check the code my team is doing with 200 other people any other questions I'll",
    "start": "3673760",
    "end": "3680569"
  },
  {
    "text": "stick around but you are a very amazing audience thank you so much have a good day [Applause]",
    "start": "3680569",
    "end": "3686739"
  }
]