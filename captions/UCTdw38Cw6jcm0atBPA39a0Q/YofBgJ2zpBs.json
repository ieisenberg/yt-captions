[
  {
    "text": "uh so this is uh I given two uh two-day workshop and I gave a talk this morning",
    "start": "1839",
    "end": "8200"
  },
  {
    "text": "and so this is I think I'm into my 17th or 18th hour of talks but after this I",
    "start": "8200",
    "end": "14519"
  },
  {
    "text": "control my own schedule so I could just show up wherever I like whenever I like um so uh the way this talk came",
    "start": "14519",
    "end": "23840"
  },
  {
    "text": "about is not long ago uh well so so there's been um uh",
    "start": "23840",
    "end": "30840"
  },
  {
    "text": "I'd say primarily the US government but also uh other governments probably the",
    "start": "30840",
    "end": "36600"
  },
  {
    "text": "five eyes if you if you we know who that includes the we having trouble with the",
    "start": "36600",
    "end": "42320"
  },
  {
    "text": "audio it's good um you know Australia the UK us all",
    "start": "42320",
    "end": "48800"
  },
  {
    "text": "part of the five eyes and um so all these governments started uh having sort of memory safe uh",
    "start": "48800",
    "end": "57320"
  },
  {
    "text": "language initiatives and and and sort of of uh raising concerns about C and C++",
    "start": "57320",
    "end": "62960"
  },
  {
    "text": "as being memory on safe languages um I I kind of T touched on that in my talk last year now that I come to think of it",
    "start": "62960",
    "end": "70320"
  },
  {
    "text": "uh so um herb Sutter um got invited to",
    "start": "70320",
    "end": "75759"
  },
  {
    "text": "speak to this uh panel it's in it's in What's called the enduring security framework and they have a memory safe",
    "start": "75759",
    "end": "82159"
  },
  {
    "text": "languages panel and uh what this group is getting ready to do is you know on CNC CN C++ some more uh and so so um",
    "start": "82159",
    "end": "91920"
  },
  {
    "text": "uh herb gave them a a talk and he suggested that I give them a talk so uh",
    "start": "91920",
    "end": "98079"
  },
  {
    "text": "uh they they reached out to me I started developing a talk but as I um was",
    "start": "98079",
    "end": "104200"
  },
  {
    "text": "talking to them I sort of I sort of came to the conclusion that",
    "start": "104200",
    "end": "109600"
  },
  {
    "text": "um you know me trying to tell them things and then have that work their way",
    "start": "109600",
    "end": "115640"
  },
  {
    "text": "through their brains to their hands to change a document was uh going to be",
    "start": "115640",
    "end": "120960"
  },
  {
    "text": "difficult uh because they had very sort of uh set opinions already so I I",
    "start": "120960",
    "end": "127960"
  },
  {
    "text": "actually just suggested that I join the group and for some reason they invited me and now I'm just changing the",
    "start": "127960",
    "end": "134440"
  },
  {
    "text": "document directly and uh and it seems to be working so",
    "start": "134440",
    "end": "141160"
  },
  {
    "text": "far so we'll we'll see how that goes so um so this is this is the talk I gave",
    "start": "141160",
    "end": "146920"
  },
  {
    "text": "them and it's it's not you know so so I I",
    "start": "146920",
    "end": "152480"
  },
  {
    "text": "uh you know yeah I probably do have a little bit of a bias I mean I'm convenor of the SE standards committee uh I sort",
    "start": "152480",
    "end": "158959"
  },
  {
    "text": "of feel that part of my job is to you know sort of defend the the the",
    "start": "158959",
    "end": "164599"
  },
  {
    "text": "faith um but but I I I it's I don't dislike rust and and and and wolven has",
    "start": "164599",
    "end": "171360"
  },
  {
    "text": "an interest in Rust so so really what I'm trying to do and I'm trying to uh",
    "start": "171360",
    "end": "176560"
  },
  {
    "text": "get this panel to do is just be kind of fair about it um but um yeah so this",
    "start": "176560",
    "end": "183280"
  },
  {
    "text": "this talk is a little bit more uh you know uh on the direction of why uh you know why C isn't as bad as as they're",
    "start": "183280",
    "end": "190640"
  },
  {
    "text": "saying it is uh so I so a lot of this talk I defend C uh but I don't want to",
    "start": "190640",
    "end": "196959"
  },
  {
    "text": "say anything wrong you know so but I'm not a I'm not a rust expert you know I read the Rust book I've uh looked for",
    "start": "196959",
    "end": "204080"
  },
  {
    "text": "you know sort of reviewed code for rust defects but I've never written any uh you know actual deployed rust codes so",
    "start": "204080",
    "end": "210640"
  },
  {
    "text": "I'm not really even a beginner at rust so so you know if you if you if I say something wrong or you've got um you",
    "start": "210640",
    "end": "217480"
  },
  {
    "text": "want to step into the role of uh defender of rust uh please please go ahead you actually you know don't even",
    "start": "217480",
    "end": "223360"
  },
  {
    "text": "wait till the end um just bring those points up as we go along okay so that was a pretty long",
    "start": "223360",
    "end": "230040"
  },
  {
    "text": "intro um so I I I'm going to start with just sort of some definitions because",
    "start": "230040",
    "end": "236879"
  },
  {
    "text": "one of the things I saw when I joined this group was that um they were using terms very inconsistently um uh and",
    "start": "236879",
    "end": "244439"
  },
  {
    "text": "introducing some weird words like they they they created a concept of um",
    "start": "244439",
    "end": "249480"
  },
  {
    "text": "highlevel msls versus low-level msls the difference in their minds being whether",
    "start": "249480",
    "end": "254680"
  },
  {
    "text": "or not the language is garbage collection so I I think they were yeah so a problem they have is that they're",
    "start": "254680",
    "end": "261519"
  },
  {
    "text": "trying to say you know C and C++ shouldn't exist on this on this planet",
    "start": "261519",
    "end": "266840"
  },
  {
    "text": "right and all new code should be deop in memory safe languages and all existing code should be ported to uh memory safe",
    "start": "266840",
    "end": "273919"
  },
  {
    "text": "languages and um so uh so part of that",
    "start": "273919",
    "end": "278960"
  },
  {
    "text": "problem is it could be interpreted you know so they have a list of memory safe languages and the short list is rust",
    "start": "278960",
    "end": "286240"
  },
  {
    "text": "Java C python right and so you could interpret that statement as all C code",
    "start": "286240",
    "end": "292759"
  },
  {
    "text": "should be ported to Java right and that's not actually what they mean right they mean all they mean all C code",
    "start": "292759",
    "end": "298039"
  },
  {
    "text": "should be ported to rust but the can't quite say that because they're trying to you know use this term memory safe",
    "start": "298039",
    "end": "304560"
  },
  {
    "text": "languages um so they invented this idea of low level memory safe languages to",
    "start": "304560",
    "end": "309840"
  },
  {
    "text": "which basically was a set that only included rust uh that didn't do garbage collection and then jav and c and these",
    "start": "309840",
    "end": "316000"
  },
  {
    "text": "other languages which did so anyway um people use this word safety a lot um",
    "start": "316000",
    "end": "323240"
  },
  {
    "text": "it's got different kinds of meanings uh it's sort of a low level there's there's",
    "start": "323240",
    "end": "329039"
  },
  {
    "text": "type safy you know type safety is that you know objects can't take on values outside of",
    "start": "329039",
    "end": "335440"
  },
  {
    "text": "the the type of the object and also the idea of um",
    "start": "335440",
    "end": "340639"
  },
  {
    "text": "um is a word that begins with a p I'm going to say continuation the the idea that uh you know the the processing of",
    "start": "340639",
    "end": "347960"
  },
  {
    "text": "objects of this type uh continue and don't sort of get stuck um memory safety",
    "start": "347960",
    "end": "355960"
  },
  {
    "text": "uh which is what this group is focused on on thread safety uh so so these these are all kinds of safety and and this",
    "start": "355960",
    "end": "362280"
  },
  {
    "text": "definition of safety uh means something um different than say what functional",
    "start": "362280",
    "end": "369240"
  },
  {
    "text": "safety means uh so software security um I I've defined you know I've",
    "start": "369240",
    "end": "377039"
  },
  {
    "text": "written books on software security so I've created my own definitions uh for for purposes here I just lifted the",
    "start": "377039",
    "end": "383759"
  },
  {
    "text": "definitions from the i e computer Society because it's always a little more legit if if it's stolen then",
    "start": "383759",
    "end": "390960"
  },
  {
    "text": "then um so uh so here software security refers to the degree to which software",
    "start": "390960",
    "end": "398400"
  },
  {
    "text": "products uh protect information and system resources providing access only to authorized users as intend it it",
    "start": "398400",
    "end": "405599"
  },
  {
    "text": "encompasses things like threat modeling secure coding secure testing vulnerability management applied through",
    "start": "405599",
    "end": "410800"
  },
  {
    "text": "the software development life cycle the goal is to prevent detect recover from attacks unintended weaknesses that could",
    "start": "410800",
    "end": "416879"
  },
  {
    "text": "compromise CIA confidentiality and Tech availability of software systems and data software security seeks to build in",
    "start": "416879",
    "end": "424759"
  },
  {
    "text": "protections proactively rather than re react to threats so so I'm I'm very happy with all those that definition",
    "start": "424759",
    "end": "431240"
  },
  {
    "text": "it's quite usable so functional safety um I I I had",
    "start": "431240",
    "end": "437039"
  },
  {
    "text": "this same slide in my earlier talk so sorry if you're hearing it twice uh but it's not you know it's not the sort of",
    "start": "437039",
    "end": "445680"
  },
  {
    "text": "definition of safety that I understood before um working in the automotive industry uh I I used to I used to think",
    "start": "445680",
    "end": "454560"
  },
  {
    "text": "of Safety and Security as being uh much kind of closer to each other but but in functional safety um it's actually a",
    "start": "454560",
    "end": "461879"
  },
  {
    "text": "systematic process used to ensure that failures don't occur and so you you have the idea you know of of um faults and",
    "start": "461879",
    "end": "470280"
  },
  {
    "text": "you have the idea of errors and and those are are tolerated and really you",
    "start": "470280",
    "end": "475319"
  },
  {
    "text": "know planned for uh but the key is to prevent the to not have a system fail",
    "start": "475319",
    "end": "481120"
  },
  {
    "text": "because of an error right so if you have a a braking system on a on a vehicle uh",
    "start": "481120",
    "end": "486560"
  },
  {
    "text": "if an error occurs um you still want that um that component to to function",
    "start": "486560",
    "end": "494639"
  },
  {
    "text": "you don't want it to fail right so the car still needs to break in some some Manner and and and maybe it's not the",
    "start": "494639",
    "end": "501960"
  },
  {
    "text": "full functionality right maybe it's uh you know maybe it just goes full break",
    "start": "501960",
    "end": "507199"
  },
  {
    "text": "right uh but you know you bring the vehicle to to a stop somehow right cuz",
    "start": "507199",
    "end": "512320"
  },
  {
    "text": "otherwise uh if that system were to fail that could be catastrophic for uh loss",
    "start": "512320",
    "end": "517719"
  },
  {
    "text": "of life or loss of uh loss of property so if you put these things together and",
    "start": "517719",
    "end": "525120"
  },
  {
    "text": "um uh I I know that not everyone would would create this diagram",
    "start": "525120",
    "end": "532360"
  },
  {
    "text": "like this um but um you know security",
    "start": "532360",
    "end": "537600"
  },
  {
    "text": "depends upon type safety memory safety and thread safety right um so it's not",
    "start": "537600",
    "end": "543360"
  },
  {
    "text": "all you need to be secure but you can't have security without these things and and the reason is um you know say you",
    "start": "543360",
    "end": "551560"
  },
  {
    "text": "have undefined behavior in your code right that means the code can do anything and how can you build an",
    "start": "551560",
    "end": "557480"
  },
  {
    "text": "assurance case about code that can do anything right you can't so just to begin the process uh you have to be able",
    "start": "557480",
    "end": "565440"
  },
  {
    "text": "to be able to say what the what the code does right to begin the process of",
    "start": "565440",
    "end": "571200"
  },
  {
    "text": "analyzing it so so security depends upon these things then of course adds other things and then functional safety uh",
    "start": "571200",
    "end": "578160"
  },
  {
    "text": "depends upon security right so uh an example here is um you know and this is",
    "start": "578160",
    "end": "585120"
  },
  {
    "text": "this is kind of a real world example that's been been demonstrated um by",
    "start": "585120",
    "end": "590480"
  },
  {
    "text": "those couple guys from Pittsburgh actually but um uh you know where where",
    "start": "590480",
    "end": "596120"
  },
  {
    "text": "they were remotely controlling um you know the the Cyber physical components",
    "start": "596120",
    "end": "602240"
  },
  {
    "text": "of a vehicle including things like steering and braking and stuff like that right so if someone else is controlling",
    "start": "602240",
    "end": "607519"
  },
  {
    "text": "the the steering and the braking of the vehicle I'm driving right there's no way I'm going to consider that vehicle safe",
    "start": "607519",
    "end": "614160"
  },
  {
    "text": "right uh so so so functional safety does rely on security now you know this these",
    "start": "614160",
    "end": "621640"
  },
  {
    "text": "relationships are sort of rough in that um say there's an information leak in",
    "start": "621640",
    "end": "626959"
  },
  {
    "text": "your vehicle you've given it your credit card information information so you can purchase things and you know music or",
    "start": "626959",
    "end": "633000"
  },
  {
    "text": "who knows what from your car and say that credit card information leaks so that's a security issue it's not really",
    "start": "633000",
    "end": "638639"
  },
  {
    "text": "a safety issue right because it's is not a hazard it's not affecting so so this is a imperfect kind of diagram but it",
    "start": "638639",
    "end": "645720"
  },
  {
    "text": "just kind of roughly blocks out how how at least I think it works and and uh my",
    "start": "645720",
    "end": "651600"
  },
  {
    "text": "boss thinks it works um",
    "start": "651600",
    "end": "657040"
  },
  {
    "text": "so uh so so functional safety uh so this is kind of like a really interesting",
    "start": "657040",
    "end": "663480"
  },
  {
    "text": "point but um you know systems that have to be safe are written in CN C++ right",
    "start": "663480",
    "end": "672680"
  },
  {
    "text": "they they're not written in Rust they are definitely not written in Java um",
    "start": "672680",
    "end": "678200"
  },
  {
    "text": "and you know one of the things people say about C is is that it's it is the",
    "start": "678200",
    "end": "684320"
  },
  {
    "text": "the lowlevel nature of it that in fact allows you to produce Safe Systems right",
    "start": "684320",
    "end": "689760"
  },
  {
    "text": "so if you if you have uh you know an airplane uh you're you're coming into",
    "start": "689760",
    "end": "695079"
  },
  {
    "text": "landing but uh you need to free up some memory so it it launches the garbage collector uh the garbage collector uh",
    "start": "695079",
    "end": "703200"
  },
  {
    "text": "takes some time to process it responds you know tenth of a second too late uh",
    "start": "703200",
    "end": "708440"
  },
  {
    "text": "to a command uh and that causes a chain reaction where you know a hydraulic line",
    "start": "708440",
    "end": "714000"
  },
  {
    "text": "burst and you lose control of the ruers um you know you you've compromised safety because you you you lack you lack",
    "start": "714000",
    "end": "722399"
  },
  {
    "text": "the uh you lack the detailed control right and and and so an advantage of",
    "start": "722399",
    "end": "728240"
  },
  {
    "text": "languages like C and and C++ to a slightly lesser extent is that it does",
    "start": "728240",
    "end": "735360"
  },
  {
    "text": "what the program tells it to do and nothing more and nothing less right it there's a very close correlation between",
    "start": "735360",
    "end": "743360"
  },
  {
    "text": "the the program and you know the mechanism that that that executes that",
    "start": "743360",
    "end": "750959"
  },
  {
    "text": "program um so in uh in C uh you know we",
    "start": "750959",
    "end": "756920"
  },
  {
    "text": "have the idea that uh the features and the concepts behind them need to be explainable in a clear and concise",
    "start": "756920",
    "end": "763800"
  },
  {
    "text": "manner um issues should be resolved using minimal Machinery that's kind of",
    "start": "763800",
    "end": "769000"
  },
  {
    "text": "the example I was giving um there should be ideally one way to do something which",
    "start": "769000",
    "end": "775079"
  },
  {
    "text": "we call conservation mechanism now this is not really a principle C++ right C++",
    "start": "775079",
    "end": "781000"
  },
  {
    "text": "is a is a multi-paradigm language and and and and I was at the and I I I mean",
    "start": "781000",
    "end": "786920"
  },
  {
    "text": "it's not a horrible thing but it's it is different um and you know I was at the tools uh tooling talk this morning right",
    "start": "786920",
    "end": "794240"
  },
  {
    "text": "and uh Anastasia was talking about uh you know how having all these different",
    "start": "794240",
    "end": "799519"
  },
  {
    "text": "ways of doing the same thing I think she called it sameness uh made it difficult",
    "start": "799519",
    "end": "804880"
  },
  {
    "text": "to do things like uh refactor code because uh there were so many kind of varieties of the the same",
    "start": "804880",
    "end": "811320"
  },
  {
    "text": "thing so uh so the Simplicity of of C uh enables programmers and tools to reason",
    "start": "811320",
    "end": "817920"
  },
  {
    "text": "about the code uh allow for diverse implementations uh keep compilation time",
    "start": "817920",
    "end": "823760"
  },
  {
    "text": "short uh and and and Achieve other properties like like the Safety and Security it it along these lines that",
    "start": "823760",
    "end": "830920"
  },
  {
    "text": "you know you know you know what you're doing right you write some code and you know what's going to happen you you",
    "start": "830920",
    "end": "836639"
  },
  {
    "text": "don't you don't become surprised quite as much uh so for c23 we we retooled the",
    "start": "836639",
    "end": "845880"
  },
  {
    "text": "charter and um you know one of the the new uh one of the the things we have in",
    "start": "845880",
    "end": "852040"
  },
  {
    "text": "the the C20 or the C Charter now is to enable secure programming um and you know we have the",
    "start": "852040",
    "end": "859160"
  },
  {
    "text": "following kind of bullet points programmers must be able to check their work uh while not guaranteeing program",
    "start": "859160",
    "end": "865600"
  },
  {
    "text": "correctness property such as portability unambiguity memory safety type safety thread safety are prerequisite to",
    "start": "865600",
    "end": "872480"
  },
  {
    "text": "reasoning about security reliability so that that matches what I was just you know saying is is is the truth I mean so",
    "start": "872480",
    "end": "879360"
  },
  {
    "text": "we've uh we've put that in the charter and um you know",
    "start": "879360",
    "end": "885639"
  },
  {
    "text": "um doesn't mean we uh we'll follow the charter but but we put it in the charter",
    "start": "885639",
    "end": "892320"
  },
  {
    "text": "so so so so when uh you know the way this works is when um some things uh in",
    "start": "892320",
    "end": "899759"
  },
  {
    "text": "the charter that backs your argument you refer to it and when something's in the charter that you know uh goes against",
    "start": "899759",
    "end": "907199"
  },
  {
    "text": "your argument you you you sort of say Ah that's not",
    "start": "907199",
    "end": "912240"
  },
  {
    "text": "relevant you discard it lightly um so uh also we say software",
    "start": "912240",
    "end": "918480"
  },
  {
    "text": "interfaces should be analyzable and verifiable uh and programmers must be",
    "start": "918480",
    "end": "923600"
  },
  {
    "text": "able to write concise understandable and readable code to sort of keep it simple principle so so I guess last a lasty",
    "start": "923600",
    "end": "930000"
  },
  {
    "text": "audience here um does rust have a charter does rust say anything about enabling secure",
    "start": "930000",
    "end": "937759"
  },
  {
    "text": "programming by Design By Design secure by",
    "start": "937759",
    "end": "943040"
  },
  {
    "text": "Design um so the next uh element in the C",
    "start": "943040",
    "end": "948360"
  },
  {
    "text": "Charter and again i' I've just kind of cut and paste these these bullet points from the charter uh C is frequently used",
    "start": "948360",
    "end": "954839"
  },
  {
    "text": "in development of safety critical systems uh functional safety",
    "start": "954839",
    "end": "959920"
  },
  {
    "text": "uh again is a systematic process used to analyze a default does not prevent a program from performing its required",
    "start": "959920",
    "end": "965319"
  },
  {
    "text": "function that's the same definition I shared with you earlier uh an analyzable subset of the language is used to create",
    "start": "965319",
    "end": "971600"
  },
  {
    "text": "a safety argument and that this subset should be enlarged and that um unbounded undefined",
    "start": "971600",
    "end": "980040"
  },
  {
    "text": "behaviors that represent a single point of failure should be eliminate it right because again if you have UB in your",
    "start": "980040",
    "end": "986279"
  },
  {
    "text": "code you can't you can't build Assurance case about it it and that that precludes Safety and",
    "start": "986279",
    "end": "991360"
  },
  {
    "text": "Security uh so so we we've kind of built into the charter of the language that",
    "start": "991360",
    "end": "997920"
  },
  {
    "text": "Safety and Security are things that that we want to you know we want to achieve",
    "start": "997920",
    "end": "1003480"
  },
  {
    "text": "so these are ideals and um you know we all know we can fall short of our ideals",
    "start": "1003480",
    "end": "1009560"
  },
  {
    "text": "but if you don't have ideals then uh you're certainly not going to achieve",
    "start": "1009560",
    "end": "1015639"
  },
  {
    "text": "any um so when it comes to memory safety uh again this is discussed as something",
    "start": "1015639",
    "end": "1021920"
  },
  {
    "text": "that's that's lacking from CN C++ uh but you know even this this um",
    "start": "1021920",
    "end": "1027798"
  },
  {
    "text": "memory safe language panel that I'm I'm now on um they they kind of recognize",
    "start": "1027799",
    "end": "1033360"
  },
  {
    "text": "this argument that hey you know the the most important in safety critical software is developed in CN C++ and and",
    "start": "1033360",
    "end": "1039839"
  },
  {
    "text": "so they they had to sort of acknowledge that it it's not really it's not really the inability to",
    "start": "1039839",
    "end": "1047480"
  },
  {
    "text": "make CNC plus program memory safe that's the issue the issue is much more narrowly defined as being uh the",
    "start": "1047480",
    "end": "1055559"
  },
  {
    "text": "enforcement of memory safety by the compiler right so so basically their",
    "start": "1055559",
    "end": "1060600"
  },
  {
    "text": "argument is if you have to achieve memory safety by using uh",
    "start": "1060600",
    "end": "1067200"
  },
  {
    "text": "tools uh after the code compiles that's not as good right because um uh you now",
    "start": "1067200",
    "end": "1074679"
  },
  {
    "text": "you have to count on developers to be a little more disciplined and use these tools and so forth uh so it's a very",
    "start": "1074679",
    "end": "1082600"
  },
  {
    "text": "narrow argument uh you know and based on that narrow argument the conclusion is you",
    "start": "1082600",
    "end": "1089039"
  },
  {
    "text": "know CN C++ has to be be you know uh exercised from the earth and you know",
    "start": "1089039",
    "end": "1096080"
  },
  {
    "text": "all code going forward has to be done in Rust so to me that's that's you know",
    "start": "1096080",
    "end": "1102480"
  },
  {
    "text": "that's weak but I'll continue because there's more to the argument than that so um so there",
    "start": "1102480",
    "end": "1109799"
  },
  {
    "text": "are kind of academic definitions about memory safety but uh I I have a picture",
    "start": "1109799",
    "end": "1115240"
  },
  {
    "text": "here which you can probably make out the title and the authors uh and and be able",
    "start": "1115240",
    "end": "1120679"
  },
  {
    "text": "to Google this um paper but it's a paper which defines um instead of defining",
    "start": "1120679",
    "end": "1128159"
  },
  {
    "text": "what memory safe programs lack it it sort of tries to characterize memory safety as as what sort of properties it",
    "start": "1128159",
    "end": "1134600"
  },
  {
    "text": "provides and that's that's how they teach you to write definitions right they they tell you to write definitions",
    "start": "1134600",
    "end": "1140919"
  },
  {
    "text": "in a in a positive sense right what is this thing you don't in instead of trying",
    "start": "1140919",
    "end": "1146280"
  },
  {
    "text": "to uh specify all the things that's not and by exclusion uh you know the the",
    "start": "1146280",
    "end": "1153360"
  },
  {
    "text": "absent the negative space becomes the definition um so in a practical sense um",
    "start": "1153360",
    "end": "1161760"
  },
  {
    "text": "it kind of boils down to three things for me so one is uninitialized reads the",
    "start": "1161760",
    "end": "1167240"
  },
  {
    "text": "other's use after free and the third is uh out of bounds access so uh so if you can eliminate",
    "start": "1167240",
    "end": "1175559"
  },
  {
    "text": "these things in C C++ you you you you basically achieve memory safety I mean",
    "start": "1175559",
    "end": "1181120"
  },
  {
    "text": "is anyone think of something I'm missing there",
    "start": "1181120",
    "end": "1186520"
  },
  {
    "text": "yeah uh yeah I",
    "start": "1186520",
    "end": "1193440"
  },
  {
    "text": "mean yeah so we certainly said you can't reason about software with UB",
    "start": "1193440",
    "end": "1199919"
  },
  {
    "text": "um so so UB is a so prerequisites of Safety and Security but it feels like",
    "start": "1199919",
    "end": "1206480"
  },
  {
    "text": "the broad category of UB is is outside you know beyond the the subset of memory",
    "start": "1206480",
    "end": "1214759"
  },
  {
    "text": "safety right um",
    "start": "1216480",
    "end": "1221799"
  },
  {
    "text": "so so let's look at Russ versus CN C++ in automotive industry which I'm in and",
    "start": "1221799",
    "end": "1226919"
  },
  {
    "text": "so I I know a little bit of um so so the first thing and this was uh",
    "start": "1226919",
    "end": "1233080"
  },
  {
    "text": "a lot of you probably know JF so this was J JFS idea to include the slide uh just kind of a history of computing and",
    "start": "1233080",
    "end": "1240200"
  },
  {
    "text": "so you know back here uh when I was a a we young uh you know c c came out early",
    "start": "1240200",
    "end": "1248360"
  },
  {
    "text": "you know 72 is when it uh development on that started uh I think there was a",
    "start": "1248360",
    "end": "1254280"
  },
  {
    "text": "69 uh 1969 conference in software engineering where the term software engineering was first",
    "start": "1254280",
    "end": "1260480"
  },
  {
    "text": "coined um and then I I like this they have here in 1985 the SEI CMU being",
    "start": "1260480",
    "end": "1267520"
  },
  {
    "text": "formed uh I I joined the SEI in 1987 so I I kind of feel like I'm on this slide",
    "start": "1267520",
    "end": "1272960"
  },
  {
    "text": "like oh that's me right there really tiny I I was there um you know C++ came along",
    "start": "1272960",
    "end": "1282360"
  },
  {
    "text": "uh I remember C++ coming along in ' 87 or 88 Maybe you guys have a better",
    "start": "1282360",
    "end": "1289360"
  },
  {
    "text": "recollection of that um and then you know you you'll see down here uh there's",
    "start": "1289360",
    "end": "1295799"
  },
  {
    "text": "a lot of work on standardization so misra uh you know C and C++ uh",
    "start": "1295799",
    "end": "1302600"
  },
  {
    "text": "iec61508 which is functional safety uh Auto are aice ISO 26262 which is sort of",
    "start": "1302600",
    "end": "1310799"
  },
  {
    "text": "the the standard for uh uh uh functional safety and Automotive system so this",
    "start": "1310799",
    "end": "1317840"
  },
  {
    "text": "this is this is my Bible this is the Bible of the automotive industry uh and various other um you",
    "start": "1317840",
    "end": "1325200"
  },
  {
    "text": "know standards uh tooling uh you know mechanisms have all come about and then",
    "start": "1325200",
    "end": "1331200"
  },
  {
    "text": "over here you have kind of the beginning of rust and and so the purpose of this slide is is to kind of",
    "start": "1331200",
    "end": "1338679"
  },
  {
    "text": "highlight how long we've been trying to solve these problems right so we've been working on these problems for 50 years",
    "start": "1338679",
    "end": "1345760"
  },
  {
    "text": "and and in those 50 years we've accomplished a lot right and rust is you",
    "start": "1345760",
    "end": "1350840"
  },
  {
    "text": "know it's over here in diapers still right I mean it hasn't had the time to",
    "start": "1350840",
    "end": "1356840"
  },
  {
    "text": "develop these standards these you know and um when you when you when you",
    "start": "1356840",
    "end": "1363400"
  },
  {
    "text": "develop Automotive software right if you if if I went to Toyota and said you know",
    "start": "1363400",
    "end": "1369279"
  },
  {
    "text": "we should build this in Rust they view that and I'm not making this up they view that as the riskier",
    "start": "1369279",
    "end": "1376400"
  },
  {
    "text": "option right because they've built safety critical systems in C they have the standards they've got the mechanisms",
    "start": "1376400",
    "end": "1383360"
  },
  {
    "text": "in place right they are comfortable with that right they are not comfortable with rust that's that's that's a you know may",
    "start": "1383360",
    "end": "1391799"
  },
  {
    "text": "they'll probably get there eventually but is going to be baby steps right so",
    "start": "1391799",
    "end": "1397880"
  },
  {
    "text": "um so this basically just tosses out the argument that c and C+ plus need to be",
    "start": "1397880",
    "end": "1403360"
  },
  {
    "text": "discarded everything has to be R going forward because uh as of today you know no one",
    "start": "1403360",
    "end": "1410480"
  },
  {
    "text": "builds safety safety critical systems in Rust you know we don't I mean we we we we put",
    "start": "1410480",
    "end": "1418400"
  },
  {
    "text": "rust on automobiles but we don't put it into safety critical",
    "start": "1418400",
    "end": "1424360"
  },
  {
    "text": "components um okay so there is a safety",
    "start": "1424360",
    "end": "1429640"
  },
  {
    "text": "critical rust Consortium and you know uh woven is a member and uh you know so I'm",
    "start": "1429640",
    "end": "1437159"
  },
  {
    "text": "pointing that out just to to point out that I'm not a rust hater you know I",
    "start": "1437159",
    "end": "1442240"
  },
  {
    "text": "mean uh I I like the language I I think it's some good ideas but I'm I'm trying to to be realistic you know and um you",
    "start": "1442240",
    "end": "1452840"
  },
  {
    "text": "know there there may be a time you know when rust makes sense um it's not quite",
    "start": "1452840",
    "end": "1459799"
  },
  {
    "text": "yet uh and the idea that you know C and C++ are going to go away somehow is",
    "start": "1459799",
    "end": "1465840"
  },
  {
    "text": "ridiculous right I mean um I had a I had a cartoon on my door in the 1980s that",
    "start": "1465840",
    "end": "1471880"
  },
  {
    "text": "talked about the demise of cobalt you know it only went up to about 1990 but here we are in 2024 and it's still quite",
    "start": "1471880",
    "end": "1479240"
  },
  {
    "text": "alive right I mean so the idea that it's going to cease to be uh is just silly",
    "start": "1479240",
    "end": "1484679"
  },
  {
    "text": "and so you know if today you want it to uh improve security and safety by",
    "start": "1484679",
    "end": "1492000"
  },
  {
    "text": "improving memory safety you it would go a lot further to improve memory safety",
    "start": "1492000",
    "end": "1497480"
  },
  {
    "text": "in CN C++ that would do a lot more to safeguard the industry than um you know",
    "start": "1497480",
    "end": "1504880"
  },
  {
    "text": "making an improvement in Russ is just just doesn't have the impact right now so uh so good start there's this uh",
    "start": "1504880",
    "end": "1513159"
  },
  {
    "text": "organization called ferine and they've released a um open source qualified rust",
    "start": "1513159",
    "end": "1519399"
  },
  {
    "text": "compiler tool chain for safety Mission critical and so what they say is that um",
    "start": "1519399",
    "end": "1526480"
  },
  {
    "text": "I'm going to point out something silly here too just for for the fundament that they have uh ISO 26262 asold D um and so",
    "start": "1526480",
    "end": "1535440"
  },
  {
    "text": "this is again uh the standard for functional safety in road vehicles this is R Bible and Automotive um the silly",
    "start": "1535440",
    "end": "1543159"
  },
  {
    "text": "thing I was going to point out is for some reason everyone in automotive industry doesn't put a space between ISO",
    "start": "1543159",
    "end": "1549200"
  },
  {
    "text": "and the number of the standard and so this is one of those tiny little battles that I'm fighting to convince people",
    "start": "1549200",
    "end": "1555080"
  },
  {
    "text": "there should be a space there and uh so far I'm just losing hard cuz it's not just my company it's like",
    "start": "1555080",
    "end": "1560480"
  },
  {
    "text": "every company they think that that the things should run together um so this",
    "start": "1560480",
    "end": "1566039"
  },
  {
    "text": "ASL D dictates the highest Integrity requirements on the product um so this",
    "start": "1566039",
    "end": "1572559"
  },
  {
    "text": "is you know this is topof the line um uh safety certified",
    "start": "1572559",
    "end": "1579760"
  },
  {
    "text": "uh and it's also um i e 61508 this is the the base functional",
    "start": "1579760",
    "end": "1586640"
  },
  {
    "text": "safety standard this applicable to all Industries so ISO 26262 sort of a",
    "start": "1586640",
    "end": "1591760"
  },
  {
    "text": "specialization of u i 61508 for the automotive industry and so it's",
    "start": "1591760",
    "end": "1598200"
  },
  {
    "text": "certified here also for Sil 4 safety Integrity level four which is the highest safety Integrity level uh but",
    "start": "1598200",
    "end": "1604799"
  },
  {
    "text": "then the next bit of this like it's all small print here right available for x86",
    "start": "1604799",
    "end": "1610320"
  },
  {
    "text": "and arm platforms right so it's only certified for these architectures so if you have a different architecture no",
    "start": "1610320",
    "end": "1615720"
  },
  {
    "text": "it's not certified for that right so this is a Again part of the advantage of",
    "start": "1615720",
    "end": "1620919"
  },
  {
    "text": "CN C++ ecosystem being around for so long right these tools are available and",
    "start": "1620919",
    "end": "1625960"
  },
  {
    "text": "they've been certified for a variety of platforms and there's a variety of you know companies around that deal in these",
    "start": "1625960",
    "end": "1632919"
  },
  {
    "text": "things yeah that not only it's United in the",
    "start": "1632919",
    "end": "1639080"
  },
  {
    "text": "platforms but also the compiler version because R is missing formal specifications and when they certify",
    "start": "1639080",
    "end": "1646039"
  },
  {
    "text": "certify SN yeah how how did they do that because",
    "start": "1646039",
    "end": "1652240"
  },
  {
    "text": "I've been I'm confused about that because I I people will keep saying you can't certify a compiler without specification",
    "start": "1652240",
    "end": "1658880"
  },
  {
    "text": "and then they'll tell me Russ doesn't have a specification so they're working on formalizing a specification but",
    "start": "1658880",
    "end": "1663960"
  },
  {
    "text": "there's none yeah but then how did they do this with they they wrote one they",
    "start": "1663960",
    "end": "1670000"
  },
  {
    "text": "wrote aspec they wrot asec that documents what the current compil",
    "start": "1670000",
    "end": "1675320"
  },
  {
    "text": "implementation does okay but that's that's spec is is not broadly",
    "start": "1675320",
    "end": "1680840"
  },
  {
    "text": "accepted okay it's not a it's not a reference compiler for the for the",
    "start": "1680840",
    "end": "1686320"
  },
  {
    "text": "specification it's the other way around the specification documenting the code okay that's interesting thanks and",
    "start": "1686320",
    "end": "1693279"
  },
  {
    "text": "there's um yeah there's a further problem it's not my next slide though so I'll get to it in in a minute but um so",
    "start": "1693279",
    "end": "1701120"
  },
  {
    "text": "so given that you know you've got this um you know uh open source qualified",
    "start": "1701120",
    "end": "1706919"
  },
  {
    "text": "rust compiler this qualified for the the highest level of safety why why aren't",
    "start": "1706919",
    "end": "1712640"
  },
  {
    "text": "people using it right and and so I asked this question so so the the first and",
    "start": "1712640",
    "end": "1718559"
  },
  {
    "text": "most common answer is the maturity of the ecosystem right and I kind of pointed to this with the timeline again",
    "start": "1718559",
    "end": "1725600"
  },
  {
    "text": "of CN C++ uh so the the the safety of the the ecosystem built around CN C++ the",
    "start": "1725600",
    "end": "1732519"
  },
  {
    "text": "Frameworks of Standards the processes uh versus rust so there's support for safety certif products and C C++ is",
    "start": "1732519",
    "end": "1740159"
  },
  {
    "text": "quite broad there's a lot of tooling there's a lot of accessors you know uh",
    "start": "1740159",
    "end": "1745480"
  },
  {
    "text": "lots of companies to cover liability lots of Standards there just a there's just a big ecosystem around this that's",
    "start": "1745480",
    "end": "1751880"
  },
  {
    "text": "been uh you know that's been used for years and for which",
    "start": "1751880",
    "end": "1756960"
  },
  {
    "text": "people have developed a comfort level that that they can do this and not go to",
    "start": "1756960",
    "end": "1763919"
  },
  {
    "text": "jail right cuz uh you know that kind of thing happen that there was a you know",
    "start": "1763919",
    "end": "1769679"
  },
  {
    "text": "problem with trains in Germany not too long ago and um you know some Engineers",
    "start": "1769679",
    "end": "1775399"
  },
  {
    "text": "got put on trial um and managed to uh be",
    "start": "1775399",
    "end": "1780880"
  },
  {
    "text": "found not guilty but you know that's that's a bit",
    "start": "1780880",
    "end": "1787039"
  },
  {
    "text": "scary um and it you know makes it hard to recruit people for your industry if",
    "start": "1787039",
    "end": "1792720"
  },
  {
    "text": "if if people are going to jail for you know making math errors",
    "start": "1792720",
    "end": "1798640"
  },
  {
    "text": "um so uh so yeah so there's a lack of tooling for rust uh one example that was",
    "start": "1798640",
    "end": "1805320"
  },
  {
    "text": "given was you know we we we will we'll use math works for example and MathWorks doesn't offer rust code",
    "start": "1805320",
    "end": "1811320"
  },
  {
    "text": "generation uh so we can't use it we can't use uh math",
    "start": "1811320",
    "end": "1816840"
  },
  {
    "text": "work so so the tooling again isn't there um another argument is uh the hardware",
    "start": "1816840",
    "end": "1823799"
  },
  {
    "text": "support so most Hardware provides C Style apis an example is this am Global",
    "start": "1823799",
    "end": "1829960"
  },
  {
    "text": "platform trust Zone API is a c style API so even if your execution environment",
    "start": "1829960",
    "end": "1835559"
  },
  {
    "text": "supports rust you have to have this interoperability with a Capi which is",
    "start": "1835559",
    "end": "1840720"
  },
  {
    "text": "often buggy so uh the the safer thing you know the argument is it's safer to",
    "start": "1840720",
    "end": "1847279"
  },
  {
    "text": "to write the code in C uh and and the the second argument you",
    "start": "1847279",
    "end": "1852640"
  },
  {
    "text": "know this this mature ecosystem I say is a top argument but I say I say actually the second most common argument is the",
    "start": "1852640",
    "end": "1859240"
  },
  {
    "text": "engineering skill set right so i' I've often made the point I used to use this",
    "start": "1859240",
    "end": "1864799"
  },
  {
    "text": "point with Java because people say Java is safer um and that's before I I wrote",
    "start": "1864799",
    "end": "1869960"
  },
  {
    "text": "a thousand pages on how to try to write secure Java code and I realized maybe Java isn't actually more secure than C I",
    "start": "1869960",
    "end": "1877600"
  },
  {
    "text": "mean it eliminates memory safety problems but it has an incredible attack",
    "start": "1877600",
    "end": "1883080"
  },
  {
    "text": "surface where basically anything that uses serialization including RMI and all",
    "start": "1883080",
    "end": "1888960"
  },
  {
    "text": "these mechanisms built on top uh will allow a attacker to send b codes to the",
    "start": "1888960",
    "end": "1894120"
  },
  {
    "text": "jvm which are then executed right so you don't have to violate memory safety you",
    "start": "1894120",
    "end": "1899639"
  },
  {
    "text": "just give it the the program you want to run and it runs it for you it's so much easier",
    "start": "1899639",
    "end": "1905080"
  },
  {
    "text": "yeah one little comment said why not just",
    "start": "1905080",
    "end": "1910360"
  },
  {
    "text": "do and like I think the r philosophy has never been about like uh replacing",
    "start": "1910360",
    "end": "1917080"
  },
  {
    "text": "entirely it's more of the limiting the amounts where you interrupt with C so",
    "start": "1917080",
    "end": "1922559"
  },
  {
    "text": "that the application that builds on top can you know benefit from all of the",
    "start": "1922559",
    "end": "1928600"
  },
  {
    "text": "protection that the compiler gives you so that you minimize the surface where you have to operate what they call",
    "start": "1928600",
    "end": "1935600"
  },
  {
    "text": "unsafe code where you interrupt through a c like foreign function interface yeah",
    "start": "1935600",
    "end": "1941360"
  },
  {
    "text": "yeah so uh two comments so first is that is probably the rust philosophy this",
    "start": "1941360",
    "end": "1948720"
  },
  {
    "text": "memory safe languages group really has gone further right they they just think C and C++ need to be uh eliminated",
    "start": "1948720",
    "end": "1956559"
  },
  {
    "text": "completely uh but but here the argument is you know above the hardware there's a",
    "start": "1956559",
    "end": "1962840"
  },
  {
    "text": "Capi right and if you're going to you're going to have to write the code uh to",
    "start": "1962840",
    "end": "1969039"
  },
  {
    "text": "interface with that and if you wrri it in Russ now you've got this problem of",
    "start": "1969039",
    "end": "1975000"
  },
  {
    "text": "of going from Russ to C and so instead of using rust because they're you're on",
    "start": "1975000",
    "end": "1980159"
  },
  {
    "text": "top of a c API why not just write C so it's it's C all the way and you don't",
    "start": "1980159",
    "end": "1985679"
  },
  {
    "text": "have that that boundary right so so so one of the things I've done is I've",
    "start": "1985679",
    "end": "1991240"
  },
  {
    "text": "written jni code right Java native interface and that is tricky right I",
    "start": "1991240",
    "end": "1997159"
  },
  {
    "text": "mean the starter is C has unsigned types and Java does not right so you have a",
    "start": "1997159",
    "end": "2004240"
  },
  {
    "text": "32-bit unsigned int okay you so you make it a 64-bit um signed in in Java now you have",
    "start": "2004240",
    "end": "2012000"
  },
  {
    "text": "a 64-bit unsigned in and see what do you do right it's problematic uh and and so",
    "start": "2012000",
    "end": "2022559"
  },
  {
    "text": "there's I wound up having a whole different set of rules to try to",
    "start": "2022559",
    "end": "2027840"
  },
  {
    "text": "interface uh Java to C because of the mismatches in in the types okay so I'm",
    "start": "2027840",
    "end": "2033760"
  },
  {
    "text": "using Java because I I know Java I don't I'm not an expert R programmer so I I",
    "start": "2033760",
    "end": "2039840"
  },
  {
    "text": "don't but I feel like those same sort of issues are are",
    "start": "2039840",
    "end": "2044600"
  },
  {
    "text": "similar well I I I think I think their problems they're fixed size okay no",
    "start": "2046840",
    "end": "2056398"
  },
  {
    "text": "no CIS where like you can just use the CI and it's",
    "start": "2061000",
    "end": "2067520"
  },
  {
    "text": "fine it's not good but it's fine and then if you want write AER around do that but I",
    "start": "2067520",
    "end": "2075839"
  },
  {
    "text": "would definitely argue that R is more similar to C plus want a nice rapper but",
    "start": "2075839",
    "end": "2081760"
  },
  {
    "text": "it's not a necessity what what is what is the problem with rust to see apis is",
    "start": "2081760",
    "end": "2088960"
  },
  {
    "text": "there any there isn't no like like it is I mean you have to have",
    "start": "2088960",
    "end": "2095679"
  },
  {
    "text": "to some sort of like",
    "start": "2095679",
    "end": "2099640"
  },
  {
    "text": "ex yeah I mean I'm gonna go on a quick limb right let's say you have a c",
    "start": "2109400",
    "end": "2114920"
  },
  {
    "text": "implementation that uses a floating Point uh representation that's not I",
    "start": "2114920",
    "end": "2121000"
  },
  {
    "text": "e754 right is that going to work",
    "start": "2121000",
    "end": "2126720"
  },
  {
    "text": "work around that it's just the same you just have to then use you create your",
    "start": "2128359",
    "end": "2134839"
  },
  {
    "text": "own type around it like they call it new types that sort of wraps that float and",
    "start": "2134839",
    "end": "2140800"
  },
  {
    "text": "you define your own Logic for adding subtracting multiplying whatever you want to do with that thing and you can",
    "start": "2140800",
    "end": "2146680"
  },
  {
    "text": "encode all of that in in Rust if you want to so it's it's",
    "start": "2146680",
    "end": "2153640"
  },
  {
    "text": "fully possible there might be more work to do it in Rust uh than it is in C but you will be",
    "start": "2153640",
    "end": "2160280"
  },
  {
    "text": "guaranteed that if you are if you write a function that expects a float of this specific type your non sfire for like",
    "start": "2160280",
    "end": "2168040"
  },
  {
    "text": "floating type you can never pass a regular float to it so your Mars Orbiter will never",
    "start": "2168040",
    "end": "2174560"
  },
  {
    "text": "crash into the surface and also even though you're not dealing with thetive",
    "start": "2174560",
    "end": "2180880"
  },
  {
    "text": "type you can Implement trait to make it look like",
    "start": "2180880",
    "end": "2188200"
  },
  {
    "text": "no extra space there's no additional stuff on top it's all like like the language guarantees buil on top okay did",
    "start": "2188319",
    "end": "2195400"
  },
  {
    "text": "you still have a comment",
    "start": "2195400",
    "end": "2203359"
  },
  {
    "text": "vartic yeah the AI is the same ass",
    "start": "2211359",
    "end": "2218680"
  },
  {
    "text": "okay so let me go on with this last point which which is I I think probably the second most sided issue with Russ",
    "start": "2218680",
    "end": "2225119"
  },
  {
    "text": "which is availability of Russ programmers um so you know there are a",
    "start": "2225119",
    "end": "2230480"
  },
  {
    "text": "lot of people um who know CN C++ who are you know working in the automotive space",
    "start": "2230480",
    "end": "2235599"
  },
  {
    "text": "that you can find but um the availability of rust programmers especially in the space is extremely",
    "start": "2235599",
    "end": "2242560"
  },
  {
    "text": "limited uh so someone was telling me you know I mean if you have a large company that's producing a lot of c and C++ and",
    "start": "2242560",
    "end": "2249040"
  },
  {
    "text": "you take this guidance to say all this code now has to be developed in Rust you would basically need to hire all the",
    "start": "2249040",
    "end": "2255880"
  },
  {
    "text": "rust programs on the planet just that one company to order to you know move all that development to",
    "start": "2255880",
    "end": "2262680"
  },
  {
    "text": "rust so so this is you know this is a solvable problem but um you know among",
    "start": "2262680",
    "end": "2270079"
  },
  {
    "text": "the various problems this is this is not necessarily a problem you can just throw money at and solve right this is going",
    "start": "2270079",
    "end": "2276599"
  },
  {
    "text": "to take you know first of all you have to get uh universities to put rust into the",
    "start": "2276599",
    "end": "2282640"
  },
  {
    "text": "curriculum uh I was at Carnegie Mill University for 23 years and it is really",
    "start": "2282640",
    "end": "2289040"
  },
  {
    "text": "hard to change the curriculum that's like the most uh you know kind of sacred I don't",
    "start": "2289040",
    "end": "2297160"
  },
  {
    "text": "know what the word is but but sticky sticky is a good word yeah there's a bunch of people with tenure who control",
    "start": "2297160",
    "end": "2304560"
  },
  {
    "text": "that and they don't give a about your opinions you could be the dean of the school they still don't give a about your opinions they've got",
    "start": "2304560",
    "end": "2311119"
  },
  {
    "text": "tenure so you know those are the people who have to be convinced and and often",
    "start": "2311119",
    "end": "2318200"
  },
  {
    "text": "the only way they get convinced is that they die and someone else takes their place",
    "start": "2318200",
    "end": "2324680"
  },
  {
    "text": "so yeah yeah so it's it's a it's a it's a it's it's a tough it's a tough problem",
    "start": "2324680",
    "end": "2331839"
  },
  {
    "text": "and um you know uh once the curriculum's in place now you still still need",
    "start": "2331839",
    "end": "2337839"
  },
  {
    "text": "students to get through the program and then you know four L four years later right when they get through the program",
    "start": "2337839",
    "end": "2343880"
  },
  {
    "text": "there's still entry level programmers right so you need them to develop expertise so you know that that that",
    "start": "2343880",
    "end": "2351359"
  },
  {
    "text": "timeline thing again comes into play right there's a there's a long you know there's a long tail to technology",
    "start": "2351359",
    "end": "2357720"
  },
  {
    "text": "transition um it's not it's not overnight it's not you know it's not",
    "start": "2357720",
    "end": "2363839"
  },
  {
    "text": "let's disregard CN C++ today and and move forward with only rust for for",
    "start": "2363839",
    "end": "2369760"
  },
  {
    "text": "everything the other problem the training is is it's it's hard to even",
    "start": "2369760",
    "end": "2374800"
  },
  {
    "text": "solve by throwing money at it um okay so again looking at the",
    "start": "2374800",
    "end": "2381560"
  },
  {
    "text": "choice between rust and C C CN C++ in these industries um CNC Plus+ are currently",
    "start": "2381560",
    "end": "2388920"
  },
  {
    "text": "considered the safe Choice uh I mean if you're building aircraft You're",
    "start": "2388920",
    "end": "2394359"
  },
  {
    "text": "Building there's a word for this flight flight related software it might be",
    "start": "2394359",
    "end": "2400880"
  },
  {
    "text": "called flight adjacent software right there's there's a lot of regulations and basically those regulations say you need",
    "start": "2400880",
    "end": "2408560"
  },
  {
    "text": "to implement this in CN C++ right so so so here you've got kind of one area of the government which is contradicting",
    "start": "2408560",
    "end": "2415160"
  },
  {
    "text": "other areas of the government so so there's just huge areas of code uh which",
    "start": "2415160",
    "end": "2420800"
  },
  {
    "text": "it's just not really a viable choice to move to uh rust yet uh qualifying tools",
    "start": "2420800",
    "end": "2426319"
  },
  {
    "text": "takes a long time is a lot of work and investment it is super annoying um you",
    "start": "2426319",
    "end": "2432319"
  },
  {
    "text": "know if we if I write a tool say say I've got a 10,000 lines of C++ code it's",
    "start": "2432319",
    "end": "2438480"
  },
  {
    "text": "got four four character indentation I want to change it to two character",
    "start": "2438480",
    "end": "2443880"
  },
  {
    "text": "indentations I write a tool to change all that code okay I've changed the source code",
    "start": "2443880",
    "end": "2449480"
  },
  {
    "text": "with this tool I have to have that tool safety certified right",
    "start": "2449480",
    "end": "2455480"
  },
  {
    "text": "because we have to prove that we didn't",
    "start": "2455480",
    "end": "2461160"
  },
  {
    "text": "damage the code we didn't break the code in doing this transformation right and so when you get faced like a situation",
    "start": "2461160",
    "end": "2467560"
  },
  {
    "text": "like that frequently you'll you'll do the change by hand because then there's",
    "start": "2467560",
    "end": "2473400"
  },
  {
    "text": "no tool that has to go through a certification process which could take a year you know so uh it leads to some it",
    "start": "2473400",
    "end": "2481599"
  },
  {
    "text": "leads to some sort of you know nonsensical",
    "start": "2481599",
    "end": "2486839"
  },
  {
    "text": "Behavior perhaps but uh you know PE people achieve this this safety by you",
    "start": "2486839",
    "end": "2495560"
  },
  {
    "text": "know stringently working within a process right so you have to do these",
    "start": "2495560",
    "end": "2500960"
  },
  {
    "text": "things um so this this ferene compiler is a good first step but standard",
    "start": "2500960",
    "end": "2506720"
  },
  {
    "text": "Library popular cras new compiler versions as we were talking about uh are separate matters and require more",
    "start": "2506720",
    "end": "2513520"
  },
  {
    "text": "qualification work and Analysis um it really really really does",
    "start": "2513520",
    "end": "2520520"
  },
  {
    "text": "not make sense to rewrite critical infrastructure uh critical sections of code that have already been battle",
    "start": "2520520",
    "end": "2526640"
  },
  {
    "text": "tested in production uh but for new features you know Russ might eventually",
    "start": "2526640",
    "end": "2532000"
  },
  {
    "text": "be the right choice the other thing I'll say is you know I'm I'm you know really",
    "start": "2532000",
    "end": "2537880"
  },
  {
    "text": "old which you can just tell but uh",
    "start": "2537880",
    "end": "2542960"
  },
  {
    "text": "um there have not been many occasions in my career where management has said oh",
    "start": "2542960",
    "end": "2551119"
  },
  {
    "text": "yeah let's spend some millions of dollars to change this code from this language of this environment to that one",
    "start": "2551119",
    "end": "2557520"
  },
  {
    "text": "without improving the features right they do not like to invest money in that",
    "start": "2557520",
    "end": "2563319"
  },
  {
    "text": "way right it's like yeah we're going to we're going to lose three years and",
    "start": "2563319",
    "end": "2568720"
  },
  {
    "text": "millions of dollars and we've got nothing new to sell to our clients right",
    "start": "2568720",
    "end": "2573800"
  },
  {
    "text": "that's a tough tough case to make and I can't think how many times it's been",
    "start": "2573800",
    "end": "2579800"
  },
  {
    "text": "made um I I've even seen a lot of systems like that become kind of Frankenstein systems like they were",
    "start": "2579800",
    "end": "2585440"
  },
  {
    "text": "written in Fortran and then C came along and they rewrote some of it in C and then C++ came along and so now some of",
    "start": "2585440",
    "end": "2592640"
  },
  {
    "text": "it's in C++ except that ++ has its own string types right and then you got the",
    "start": "2592640",
    "end": "2598920"
  },
  {
    "text": "STL so now you've got basic string and then you know now now it's going to be partially in Rush right so now you've",
    "start": "2598920",
    "end": "2604880"
  },
  {
    "text": "got nine languages over million lines of code and um you you know uh it's it's",
    "start": "2604880",
    "end": "2612760"
  },
  {
    "text": "not good um so again the the point that government regulations for safety",
    "start": "2612760",
    "end": "2619720"
  },
  {
    "text": "effectively mandate CN C++ just because you know at this time is the well trodden path but um you know there there",
    "start": "2619720",
    "end": "2628760"
  },
  {
    "text": "are investments that can be made the there there these are some problems that could be solved by by by just",
    "start": "2628760",
    "end": "2635559"
  },
  {
    "text": "money okay so language security um herb had uh you know he had put up",
    "start": "2635559",
    "end": "2644480"
  },
  {
    "text": "the list of the cwe top 25 vulnerabilities now I've participated in",
    "start": "2644480",
    "end": "2649960"
  },
  {
    "text": "coming up with the top 25 C.W in the past and the way that is determined is",
    "start": "2649960",
    "end": "2656000"
  },
  {
    "text": "by who can yell the loudest in the meeting right so it it it's really a",
    "start": "2656000",
    "end": "2662280"
  },
  {
    "text": "question of you know um you know right the the B y person who screams and yells",
    "start": "2662280",
    "end": "2669119"
  },
  {
    "text": "and and and forces his will upon other people so there's no there's no scientific basis for the tops 25 cwes",
    "start": "2669119",
    "end": "2677760"
  },
  {
    "text": "and you know you always have to ask yourself about 26 right like how by how much did that miss the cut off right um",
    "start": "2677760",
    "end": "2685040"
  },
  {
    "text": "so you know we we you know when I was in the security industry we tolerate that",
    "start": "2685040",
    "end": "2690760"
  },
  {
    "text": "because it's it's a good marketing tool is really what it it turns out to be so",
    "start": "2690760",
    "end": "2696280"
  },
  {
    "text": "um really really classification I wrote a I wrote a paper with Alan householder",
    "start": "2696280",
    "end": "2701720"
  },
  {
    "text": "20 years ago 15 years ago about vulnerability classification and and what we said is it doesn't make any",
    "start": "2701720",
    "end": "2707760"
  },
  {
    "text": "sense right because what frequently happens is you have a vulnerability and you look at the code and what you",
    "start": "2707760",
    "end": "2714040"
  },
  {
    "text": "determine is okay we could fix it by changing this we could fix it by",
    "start": "2714040",
    "end": "2719920"
  },
  {
    "text": "changing this or we could fix it by changing this right any one of three conditions if different would prevent",
    "start": "2719920",
    "end": "2725520"
  },
  {
    "text": "the vulnerability and so um depending on which thing you focus in on right that would be the",
    "start": "2725520",
    "end": "2731960"
  },
  {
    "text": "classification of the vulnerability right I mean very simple example is you have unsigned into to wrap around that",
    "start": "2731960",
    "end": "2738920"
  },
  {
    "text": "allocates to little memory then you have a out of bounds error right so what type of vulnerability is that integer",
    "start": "2738920",
    "end": "2744760"
  },
  {
    "text": "wraparound or buff overlow right it's both uh so it's it so",
    "start": "2744760",
    "end": "2750280"
  },
  {
    "text": "classifications are poorly done right so so whenever you talk about classes of",
    "start": "2750280",
    "end": "2755359"
  },
  {
    "text": "vulnerabilities the data that you have is not great data you know so so that's",
    "start": "2755359",
    "end": "2761839"
  },
  {
    "text": "just something to think about but um you know merer classifies their",
    "start": "2761839",
    "end": "2767599"
  },
  {
    "text": "vulnerabilities by by type and uh what you'll see is uh especially if we kind",
    "start": "2767599",
    "end": "2774720"
  },
  {
    "text": "of key in on the newer data right 2024 data um the biggest type here is cross",
    "start": "2774720",
    "end": "2781280"
  },
  {
    "text": "site scripting right so so what you actually have here is a lot of like cross-site scripting",
    "start": "2781280",
    "end": "2788920"
  },
  {
    "text": "csrf XX e ssrf open redirect these are all web",
    "start": "2789280",
    "end": "2797359"
  },
  {
    "text": "only uh a lot of these are like directory traversal and SQL injection",
    "start": "2797359",
    "end": "2803319"
  },
  {
    "text": "are probably more webbased than not webbased but you you might have those in",
    "start": "2803319",
    "end": "2808599"
  },
  {
    "text": "other type of systems as well so so the type of vulnerabilities vary based on",
    "start": "2808599",
    "end": "2814000"
  },
  {
    "text": "the type of applications and you know this this group this um memory safe",
    "start": "2814000",
    "end": "2819800"
  },
  {
    "text": "languages group they're concerned about critical infrastructure right and",
    "start": "2819800",
    "end": "2825839"
  },
  {
    "text": "so I don't exactly know what critical infrastructure is I feel like like during covid if people attacked Amazon",
    "start": "2825839",
    "end": "2833760"
  },
  {
    "text": "and took it down you know Bezos would call the White House and goddamn Amazon",
    "start": "2833760",
    "end": "2839880"
  },
  {
    "text": "would be critical infrastructure you know so uh so it's a",
    "start": "2839880",
    "end": "2846000"
  },
  {
    "text": "little hard to tell like uh are there web-based systems that are considered",
    "start": "2846000",
    "end": "2851200"
  },
  {
    "text": "critical infrastructure probably there probably are I mean there's probably websites the government gets information out to the populace in and they'll",
    "start": "2851200",
    "end": "2858319"
  },
  {
    "text": "consider that um so so what what vulnerabilities are we concerned",
    "start": "2858319",
    "end": "2863880"
  },
  {
    "text": "about you know if we're trying to drive down the overall vulnerabilities but if you just if you just look here at say",
    "start": "2863880",
    "end": "2870559"
  },
  {
    "text": "memory corruption right uh in 2024 this was 1881 and uh that's out of",
    "start": "2870559",
    "end": "2879520"
  },
  {
    "text": "uh we don't have a total this way but we have uh in the same year",
    "start": "2879520",
    "end": "2886280"
  },
  {
    "text": "4,600 cross-site scripting alone which is four times as many as the memory corruption uh we have input",
    "start": "2886280",
    "end": "2893520"
  },
  {
    "text": "validation uh you know so so the point here",
    "start": "2893520",
    "end": "2899079"
  },
  {
    "text": "being let's say you eliminated all uh memory safety problems in your code",
    "start": "2899079",
    "end": "2906359"
  },
  {
    "text": "right um that doesn't make your code secure okay so this extreme cost of rewriting",
    "start": "2906359",
    "end": "2913440"
  },
  {
    "text": "all C and C++ code in Rust doesn't get you secure code right IT addresses memory safety and and maybe",
    "start": "2913440",
    "end": "2921280"
  },
  {
    "text": "some other things right um it doesn't address input validation right I don't",
    "start": "2921280",
    "end": "2926839"
  },
  {
    "text": "know of a programming languages that solve input validation and on some level all security vulnerabilities are input",
    "start": "2926839",
    "end": "2933040"
  },
  {
    "text": "validation problems um you know uh cross it scripting definitely is um you know",
    "start": "2933040",
    "end": "2940000"
  },
  {
    "text": "it doesn't solve you know integer problems it doesn't solve um you know a",
    "start": "2940000",
    "end": "2946440"
  },
  {
    "text": "you know probably uh I don't know what the numbers are memory corruption",
    "start": "2946440",
    "end": "2951599"
  },
  {
    "text": "maybe if you restrict yourself to CN C++ programs um memory corruption might be",
    "start": "2951599",
    "end": "2958119"
  },
  {
    "text": "25 or 30% of of the vulnerabilities um so so so you have to",
    "start": "2958119",
    "end": "2964640"
  },
  {
    "text": "consider like a broader picture right you for this cost you're not getting",
    "start": "2964640",
    "end": "2971079"
  },
  {
    "text": "security you're you're you're improving security by some amount um okay so you look again at the",
    "start": "2971079",
    "end": "2979839"
  },
  {
    "text": "three things I listed as uh memory safety type issues how are we doing on",
    "start": "2979839",
    "end": "2985359"
  },
  {
    "text": "time when do I have to end 10",
    "start": "2985359",
    "end": "2990720"
  },
  {
    "text": "minutes okay wow I didn't have a lot of slides and then when you don't have a lot of slides you like like take longer",
    "start": "2990720",
    "end": "2997359"
  },
  {
    "text": "on all of them and then you then all of a sudden you realize oh I'm not going to finish in time um so there are class of",
    "start": "2997359",
    "end": "3005280"
  },
  {
    "text": "vulnerabilities that we can address pervasively um GCC and clang have this trivial Auto VAR in nit to a pattern and",
    "start": "3005280",
    "end": "3013559"
  },
  {
    "text": "Microsoft Visual Studio has the rtc1 which uh eliminates 10% of vulnerabilities by removing um attack or",
    "start": "3013559",
    "end": "3021839"
  },
  {
    "text": "read write or stack values right so this is this is an easy solution to memory",
    "start": "3021839",
    "end": "3027440"
  },
  {
    "text": "initialization but it it doesn't meet the narrow rust criteria of compiler",
    "start": "3027440",
    "end": "3033160"
  },
  {
    "text": "enforced right because the user the programmer has to go through the extreme step of specifying an option to the",
    "start": "3033160",
    "end": "3042079"
  },
  {
    "text": "compiler but the the they also have the the ability not to specify the option",
    "start": "3042079",
    "end": "3047559"
  },
  {
    "text": "right and and I'll make a side point here but I I feel to a large extent",
    "start": "3047559",
    "end": "3054160"
  },
  {
    "text": "people are comparing rust from 2024 with c and C++ from the 80s you know it's",
    "start": "3054160",
    "end": "3061599"
  },
  {
    "text": "it's not like a fair comparison they're not comparing against 2024",
    "start": "3061599",
    "end": "3067119"
  },
  {
    "text": "C++ um so two chain support this uh herb",
    "start": "3067119",
    "end": "3072440"
  },
  {
    "text": "to me the C+ plus 26 will support this uh other class of memory safety are",
    "start": "3072440",
    "end": "3078240"
  },
  {
    "text": "difficult but not in insurmountable and you know people are becoming more uh",
    "start": "3078240",
    "end": "3084599"
  },
  {
    "text": "sensitive to these problems more will to respond uh CN C++ uh can be secured",
    "start": "3084599",
    "end": "3091680"
  },
  {
    "text": "through Tooling in which these ecosystems Excel um you know one of the",
    "start": "3091680",
    "end": "3097000"
  },
  {
    "text": "main reasons I went to the plenary today was because uh there was an argument being made to the opposite right that",
    "start": "3097000",
    "end": "3103000"
  },
  {
    "text": "that C C C and C or C++ tooling is inadequate um somehow I feel like this",
    "start": "3103000",
    "end": "3111160"
  },
  {
    "text": "is a Sher cat thing and and you know C++ tooling both sells and is inadequate I",
    "start": "3111160",
    "end": "3118280"
  },
  {
    "text": "think both those things are true at the same time um so safety critical systems",
    "start": "3118280",
    "end": "3124359"
  },
  {
    "text": "uh development scenes so we do build safety critical systems on par with msls",
    "start": "3124359",
    "end": "3130520"
  },
  {
    "text": "and I I I I can almost say you know better than",
    "start": "3130520",
    "end": "3135599"
  },
  {
    "text": "msls um you know we have the misra insert uh coding standards um you know",
    "start": "3135599",
    "end": "3142640"
  },
  {
    "text": "the latter of these du to me so so you're welcome",
    "start": "3142640",
    "end": "3148520"
  },
  {
    "text": "um you know these standards are enforced by Static analysis and uh you know they",
    "start": "3148720",
    "end": "3154720"
  },
  {
    "text": "can be safety certified to appropriate ASO levels so so we have existing tooling that does this it's working",
    "start": "3154720",
    "end": "3160680"
  },
  {
    "text": "right now and it's getting better right I mean we talked about all the things Russ",
    "start": "3160680",
    "end": "3166799"
  },
  {
    "text": "needs to improve at but C and C++ are not standing still right those ecosystems are improving uh as",
    "start": "3166799",
    "end": "3174720"
  },
  {
    "text": "well um so industrial strength tools for CN C++",
    "start": "3174720",
    "end": "3180559"
  },
  {
    "text": "sort of equalize the situation with memory safe languages uh we have all these uh tools uh like asan m sand UB",
    "start": "3180559",
    "end": "3189400"
  },
  {
    "text": "sand to identify undefined behaviors at runtime we have uh Flags like bound",
    "start": "3189400",
    "end": "3196160"
  },
  {
    "text": "safety in clang uh that give eliminates uh memory errors at",
    "start": "3196160",
    "end": "3201680"
  },
  {
    "text": "production uh we've got tools to find undefined Behavior at compile time",
    "start": "3201680",
    "end": "3207520"
  },
  {
    "text": "uh and then uh have a slide here that talks about address sanitizer address",
    "start": "3207520",
    "end": "3212559"
  },
  {
    "text": "sanitizer uh sort of an interesting case a very nice tool it um you know it has",
    "start": "3212559",
    "end": "3218599"
  },
  {
    "text": "about a 2X overhead uh and it it has a it has an issue that if you deploy it uh",
    "start": "3218599",
    "end": "3227319"
  },
  {
    "text": "it introduces vulnerabilities into your code so this tool very specifically is only meant for development Yeah question",
    "start": "3227319",
    "end": "3236520"
  },
  {
    "text": "sorry I just want to say that please never ever ever ever ever use as production because we do right",
    "start": "3236520",
    "end": "3245480"
  },
  {
    "text": "exes never want to haveu",
    "start": "3245480",
    "end": "3251160"
  },
  {
    "text": "add you're welcome yeah like like another kind of",
    "start": "3251160",
    "end": "3257319"
  },
  {
    "text": "dumb thing I saw I did I did an audit of um uh zcash which was based on bitcoin",
    "start": "3257319",
    "end": "3264599"
  },
  {
    "text": "and at the beginning of the process I said what do I do with the the bows and I just report them you're not going to find any problems in Bitcoin and you",
    "start": "3264599",
    "end": "3271319"
  },
  {
    "text": "know little do they know uh uh but one of one of the really dumb things in Bitcoin was they",
    "start": "3271319",
    "end": "3278200"
  },
  {
    "text": "leave and debug they leave aerts on at runtime uh so it's part of their design",
    "start": "3278200",
    "end": "3285280"
  },
  {
    "text": "and that triggered vulnerabilities because some of the libraries they were using you know follow the more standard",
    "start": "3285280",
    "end": "3292599"
  },
  {
    "text": "Convention of turning that off weren't you know had me didn't account for the",
    "start": "3292599",
    "end": "3298040"
  },
  {
    "text": "possibility that someone would leave uh you know n debug on it at runtime and that turned into uh some",
    "start": "3298040",
    "end": "3306079"
  },
  {
    "text": "vulnerabilities um so Panic versus proof uh we have tools that create proofs for",
    "start": "3306079",
    "end": "3311839"
  },
  {
    "text": "example some static analysis or even doing cross transation unit uh such as code ql uh we have a trust and sof as a",
    "start": "3311839",
    "end": "3320079"
  },
  {
    "text": "tool that can prove the absence of undefined Behavior Uh and when used for Safety Systems uh prove extensive",
    "start": "3320079",
    "end": "3326760"
  },
  {
    "text": "properties of code uh by default rust panics right which is which is adequate",
    "start": "3326760",
    "end": "3332319"
  },
  {
    "text": "for testing sort of like asan uh but not necessarily for deployment so uh for",
    "start": "3332319",
    "end": "3337920"
  },
  {
    "text": "safety related systems uh Panic is not necessarily what you want uh you need to",
    "start": "3337920",
    "end": "3343319"
  },
  {
    "text": "be able to sort of analyze and recover from uh failures and",
    "start": "3343319",
    "end": "3348359"
  },
  {
    "text": "errors um herb wanted me to mention that C++ cons exper statically rejects UB c23",
    "start": "3348359",
    "end": "3355920"
  },
  {
    "text": "um we stuck our foot in the door and we've introduced const expert for uh",
    "start": "3355920",
    "end": "3361400"
  },
  {
    "text": "objects only so probably for c2y you know a bunch of people will you know the",
    "start": "3361400",
    "end": "3368039"
  },
  {
    "text": "guy in front's got his foot through the door a bunch of people behind are now going to push him through uh through the",
    "start": "3368039",
    "end": "3373280"
  },
  {
    "text": "framework and uh we'll get the whole whole shebang into",
    "start": "3373280",
    "end": "3379039"
  },
  {
    "text": "c2y um another tool is fuzzing um you know software testing technique that",
    "start": "3379039",
    "end": "3384920"
  },
  {
    "text": "provides invalid unex expected random data input um we use this extensively at",
    "start": "3384920",
    "end": "3390880"
  },
  {
    "text": "at woven uh so we do kind of local fuzzing we do fuzzing in the um cicd P",
    "start": "3390880",
    "end": "3398160"
  },
  {
    "text": "pipeline uh and um you know it's an effective Tool uh you know combined with uh the",
    "start": "3398160",
    "end": "3405119"
  },
  {
    "text": "other uh sort of testing that we do",
    "start": "3405119",
    "end": "3411280"
  },
  {
    "text": "so you know so we do have these tools but there's still security issues",
    "start": "3411280",
    "end": "3417319"
  },
  {
    "text": "um you know the problem is uh in CN C++ just kind of lack of discipline you know",
    "start": "3417319",
    "end": "3424839"
  },
  {
    "text": "not every commercial C++ software house has the level of discipline as you know",
    "start": "3424839",
    "end": "3431400"
  },
  {
    "text": "people producing uh Mission critical or safety critical systems has um but you know",
    "start": "3431400",
    "end": "3439559"
  },
  {
    "text": "using rust won't change developer discipline right so the things that",
    "start": "3439559",
    "end": "3445000"
  },
  {
    "text": "developers need to do that they can avoid doing uh you still need the discipline to have them do those things",
    "start": "3445000",
    "end": "3453480"
  },
  {
    "text": "uh so you know an example is crowd strike um you know that that wasn't a",
    "start": "3453480",
    "end": "3458799"
  },
  {
    "text": "memory safety error that was that was basically a logic error and so um if",
    "start": "3458799",
    "end": "3464400"
  },
  {
    "text": "that system had been implemented in Rust that wouldn't have that wouldn't have",
    "start": "3464400",
    "end": "3469480"
  },
  {
    "text": "saved crowd strike from you know bringing down third of the systems on the planet",
    "start": "3469480",
    "end": "3476160"
  },
  {
    "text": "I don't know how many they got in the end I I was in Japan hoping I I could fly",
    "start": "3476160",
    "end": "3482880"
  },
  {
    "text": "home um yeah okay so uh just in terms of",
    "start": "3482880",
    "end": "3489640"
  },
  {
    "text": "progress in languages uh I think I've got three minutes left um c23 is introduced",
    "start": "3489640",
    "end": "3496480"
  },
  {
    "text": "checked integer operations uh these are very nice it's very uh lowlevel built on",
    "start": "3496480",
    "end": "3502559"
  },
  {
    "text": "top of sort of built-in mechanisms in GCC and clanging other languages where",
    "start": "3502559",
    "end": "3507720"
  },
  {
    "text": "you calculate a result using um infinite Precision uh um uh",
    "start": "3507720",
    "end": "3514440"
  },
  {
    "text": "integers and then return a Boolean to indicate whether the result you have is",
    "start": "3514440",
    "end": "3519920"
  },
  {
    "text": "the same as the mathematical result or not uh so you can determine uh if you",
    "start": "3519920",
    "end": "3525680"
  },
  {
    "text": "want to use that value it's used for addition subtraction and multiplication it's not available for division",
    "start": "3525680",
    "end": "3531440"
  },
  {
    "text": "remainder those type of operations um and uh we we introduced",
    "start": "3531440",
    "end": "3536920"
  },
  {
    "text": "some other things for security I I I kind of uh simplified them so so this is",
    "start": "3536920",
    "end": "3542559"
  },
  {
    "text": "this is you know this was my summary quote for this uh MSL panel um which I",
    "start": "3542559",
    "end": "3550280"
  },
  {
    "text": "thought really summed up to me the flaw and what they were doing which is uh so this is from James fenmore Cooper who",
    "start": "3550280",
    "end": "3556720"
  },
  {
    "text": "said the Affairs of Life Embrace a multitude of interest and he who reasons",
    "start": "3556720",
    "end": "3561760"
  },
  {
    "text": "in any one of them without consulting the rest is a visionary unsuited to",
    "start": "3561760",
    "end": "3566960"
  },
  {
    "text": "control the business of the world so yes I did tell them this and uh and and and",
    "start": "3566960",
    "end": "3572680"
  },
  {
    "text": "and you know what I'm getting at here is you know they're basically saying you",
    "start": "3572680",
    "end": "3580039"
  },
  {
    "text": "know hey we have memory safe languages that enforce memory safety at compile",
    "start": "3580039",
    "end": "3585160"
  },
  {
    "text": "time instead of requiring tools but we're only addressing this one narrow",
    "start": "3585160",
    "end": "3590720"
  },
  {
    "text": "area of problems we're not considering all the other issues other vulnerability classes we're not considering you know",
    "start": "3590720",
    "end": "3599240"
  },
  {
    "text": "how you build safety critical systems and and based on this one narrow thing we're looking at we've reached this",
    "start": "3599240",
    "end": "3606720"
  },
  {
    "text": "broad sweeping conclusion that CN C++ have to not exist anymore and all code",
    "start": "3606720",
    "end": "3612240"
  },
  {
    "text": "going for it has to be written in Rust and and that's a that's basically a ludicrous conclusion which rightly",
    "start": "3612240",
    "end": "3619000"
  },
  {
    "text": "deserves to be ridiculed um and so you know I I I think",
    "start": "3619000",
    "end": "3624480"
  },
  {
    "text": "I think this panel can produce you know uh some some Publications that",
    "start": "3624480",
    "end": "3630359"
  },
  {
    "text": "are you know that are that are fair and honest and don't omit things right and",
    "start": "3630359",
    "end": "3636760"
  },
  {
    "text": "uh I'm all in favor of that but uh we'll see what happens going forward it's okay",
    "start": "3636760",
    "end": "3643520"
  },
  {
    "text": "uh I've got negative one minutes for questions right hey thank you everyone",
    "start": "3643520",
    "end": "3651440"
  }
]