[
  {
    "text": "so good morning ladies and gentlemen welcome to a hands-on demonstration",
    "start": "5430",
    "end": "13500"
  },
  {
    "text": "rather different to my previous talk and I'm going to show you some stuff I'm",
    "start": "13500",
    "end": "19689"
  },
  {
    "text": "going to show you the result of what I did with a small application for a",
    "start": "19689",
    "end": "25539"
  },
  {
    "text": "client and some optimization and tools for doing optimization this is going to",
    "start": "25539",
    "end": "31419"
  },
  {
    "text": "be Linux and C++ so I'm gonna give you a little bit of background about that one",
    "start": "31419",
    "end": "36820"
  },
  {
    "text": "actually gonna see will real code and 6/7 possibly more variations on this one",
    "start": "36820",
    "end": "42730"
  },
  {
    "text": "as I went through so this was a real application that I wrote for client I want to show you different versions and",
    "start": "42730",
    "end": "49540"
  },
  {
    "text": "how I optimized it and how I use the tools to guide that optimization so I'm going to be using",
    "start": "49540",
    "end": "55000"
  },
  {
    "text": "valgrind and cache grinned I'm going to be using the perf record reverb and",
    "start": "55000",
    "end": "60700"
  },
  {
    "text": "report perf stat it's a bit of S trace a few other things and some compiler",
    "start": "60700",
    "end": "66670"
  },
  {
    "text": "Explorer to have a look inside what's going on and to help me guide this one and some basic things like bash timing",
    "start": "66670",
    "end": "73829"
  },
  {
    "text": "so that's how to interpret that one and some things about library so here is the",
    "start": "73829",
    "end": "81069"
  },
  {
    "text": "client problem so this particular client is got IBM mainframe and for those of",
    "start": "81069",
    "end": "86590"
  },
  {
    "text": "you who are less than about 150 years old you may not realize that there are machines in the world that don't use",
    "start": "86590",
    "end": "91719"
  },
  {
    "text": "ASCII so IBM mainframes use an absurd ik",
    "start": "91719",
    "end": "97979"
  },
  {
    "text": "character set extended binary coded decimal indicator code or information",
    "start": "97979",
    "end": "104979"
  },
  {
    "text": "code so remember that BCD thing because we'll come back to it and what they got",
    "start": "104979",
    "end": "111759"
  },
  {
    "text": "is that they've got COBOL files lots of them and big ones and they want to take",
    "start": "111759",
    "end": "117189"
  },
  {
    "text": "these ones here they're in binary formats and they wanted to translate them into CSV files so they can put them",
    "start": "117189",
    "end": "122770"
  },
  {
    "text": "into their data warehouse and they were looking at a disaster recovery situation so what do we do if the mainframes not",
    "start": "122770",
    "end": "129910"
  },
  {
    "text": "there and so they got a an issue here where speed is important because you're",
    "start": "129910",
    "end": "136600"
  },
  {
    "text": "in disaster every situation your business is basically stopped you want to get running as fast as you can and you've",
    "start": "136600",
    "end": "143110"
  },
  {
    "text": "got hundreds of gigabytes of data to process what are you gonna do well if",
    "start": "143110",
    "end": "148180"
  },
  {
    "text": "you wanted to go fast so they went help help right so I quickly hacked up",
    "start": "148180",
    "end": "154660"
  },
  {
    "text": "something II went oh no and actually me to be configurable because you know the three versions we gave you it we need more than that we've got about 100 or so",
    "start": "154660",
    "end": "161290"
  },
  {
    "text": "different formats we need something configurable okay they had found on the",
    "start": "161290",
    "end": "167500"
  },
  {
    "text": "internet and open source C sharp tool and they got this one and downloaded it and tried running this one it took about",
    "start": "167500",
    "end": "173500"
  },
  {
    "text": "11 hours to run on a two gigabyte file and I mean I don't think that's very good I'm amazed at how slow people can",
    "start": "173500",
    "end": "180460"
  },
  {
    "text": "do that one here so I thought right okay let's get some c++ out here even though they're not a c++ house let's do this",
    "start": "180460",
    "end": "186850"
  },
  {
    "text": "one they wanted to run this on Windows rather than Linux but portability is is",
    "start": "186850",
    "end": "191980"
  },
  {
    "text": "very good between these things apart from one part which always catches me which one you mentioned later on so",
    "start": "191980",
    "end": "199150"
  },
  {
    "text": "standing back from that performance what is the right approach to doing performance you can kind of get in there",
    "start": "199150",
    "end": "205150"
  },
  {
    "text": "and go like just play with things well you basically kind of need to understand the story of how performance happens and",
    "start": "205150",
    "end": "212170"
  },
  {
    "text": "you go well okay well I start the top here and it's too slow so I start profiling it you're looking this and",
    "start": "212170",
    "end": "217390"
  },
  {
    "text": "then you stop doing the silly things stop doing your necessary stuff stop",
    "start": "217390",
    "end": "223510"
  },
  {
    "text": "doing things like I oh you don't need to do that one or lots of little iOS and see if you can make bigger iOS see if",
    "start": "223510",
    "end": "230380"
  },
  {
    "text": "you can get rid of network system calls all those other kind of things because they're the big heavy slow things get",
    "start": "230380",
    "end": "235630"
  },
  {
    "text": "rid of exceptions get rid of other parts like that once you've got rid of that the things that cause orders of",
    "start": "235630",
    "end": "242590"
  },
  {
    "text": "magnitude slowed down and then you can start saying right okay now what you'll probably find on your profile is that",
    "start": "242590",
    "end": "248050"
  },
  {
    "text": "what comes up at the top is now memory allocation mem copy and memory comparison and strings stuff it's",
    "start": "248050",
    "end": "255010"
  },
  {
    "text": "usually what happens at this point you go okay we get stuck into into strings temporaries all those are the kind of",
    "start": "255010",
    "end": "261190"
  },
  {
    "text": "things get in your way right okay so we can deal with move semantics and other things in this particular case move",
    "start": "261190",
    "end": "267220"
  },
  {
    "text": "semantics isn't uh isn't an issue this one is quite well focused it's not like other applications I've",
    "start": "267220",
    "end": "273260"
  },
  {
    "text": "looked at but it's it's a real application I want you to show you real stuff rather than just made-up stuff so",
    "start": "273260",
    "end": "279290"
  },
  {
    "text": "once you've got rid of that and basically got your memory allocation under control you don't go right now we can do different algorithms now we can",
    "start": "279290",
    "end": "285230"
  },
  {
    "text": "start working about data structures and lookups and other things and order login and order an order one and hash tables",
    "start": "285230",
    "end": "291890"
  },
  {
    "text": "and things and working out what actually needs to be fast because you need to make certain things fast and other",
    "start": "291890",
    "end": "297320"
  },
  {
    "text": "things probably well they're not going slow because of it and then and only at that point is it really worth starting",
    "start": "297320",
    "end": "303110"
  },
  {
    "text": "to worry about memory bandwidth because you're now dealing about daily layout and cache awareness and all those other",
    "start": "303110",
    "end": "308960"
  },
  {
    "text": "kind of things so we are sort of kind of gonna go through this story because you always have to go in this order there's",
    "start": "308960",
    "end": "314120"
  },
  {
    "text": "no point in trying to mess around with compiler settings and cache aware programming if you're doing lots of disk",
    "start": "314120",
    "end": "321230"
  },
  {
    "text": "i/o so it has to go in that order here is a nice little chart here from Sergey",
    "start": "321230",
    "end": "327830"
  },
  {
    "text": "even chenko I borrowed this one because it was just pretty rather than rewriting it and this is about the different types",
    "start": "327830",
    "end": "336740"
  },
  {
    "text": "of operations and their relative speed now the horizontal axis it is",
    "start": "336740",
    "end": "344300"
  },
  {
    "text": "logarithmic its orders of magnitude right at the top you can go register",
    "start": "344300",
    "end": "350180"
  },
  {
    "text": "register add is less than one cycle it's really fast we got lots of nice fast stuff up the top there memory rights etc",
    "start": "350180",
    "end": "357350"
  },
  {
    "text": "are quite fast that because of the store buffer we've then got all the things about branch predictions taken and not",
    "start": "357350",
    "end": "363680"
  },
  {
    "text": "predicted and taken an l1 cache versus l2 cache the surprising thing when you look at this actually is it you find out",
    "start": "363680",
    "end": "369890"
  },
  {
    "text": "that square root is faster than division in certain cases you've got all the",
    "start": "369890",
    "end": "376760"
  },
  {
    "text": "stuff about vectorization and function calls everything else basically the thing is down the bottom here is the",
    "start": "376760",
    "end": "382340"
  },
  {
    "text": "really slow stuff this is orders of magnitude nice and slow this is thread context switching C++ exceptions or",
    "start": "382340",
    "end": "389660"
  },
  {
    "text": "throwing and catching of those ones context which kernel calls memory allocations get rid of those those will",
    "start": "389660",
    "end": "397730"
  },
  {
    "text": "all slow you down horribly so I thought I'm not going to bother with threaded",
    "start": "397730",
    "end": "403070"
  },
  {
    "text": "code I'm not going to bother with exceptions and I've got a void all my system calls where possible so that's just to give",
    "start": "403070",
    "end": "410020"
  },
  {
    "text": "you an idea about this one by the way notice this is orders of magnitude",
    "start": "410020",
    "end": "415360"
  },
  {
    "text": "if you throw multi-threading in here and you get perfect scalability big if you",
    "start": "415360",
    "end": "422559"
  },
  {
    "text": "probably can move yourself one order of magnitude to the left eight course one order of magnitude left get it wrong and",
    "start": "422559",
    "end": "428409"
  },
  {
    "text": "you'll go two orders of magnitude to the right yeah so notice that",
    "start": "428409",
    "end": "434169"
  },
  {
    "text": "multi-threading is not going to save you here it's not going to make the difference between the bottom right and",
    "start": "434169",
    "end": "439839"
  },
  {
    "text": "the top left you need to get your single threaded programming going fast first",
    "start": "439839",
    "end": "445360"
  },
  {
    "text": "before you then get some linear scale up with the other ones because you can get three four or just magnitude a",
    "start": "445360",
    "end": "451360"
  },
  {
    "text": "difference just by programming correctly okay let's look at some tools what tools",
    "start": "451360",
    "end": "457689"
  },
  {
    "text": "might we have well you can run tools on unmodified applications so there's the",
    "start": "457689",
    "end": "463209"
  },
  {
    "text": "whole perf set of tools that you can use on the Linux there's older ones like Oh profile top you just will tell you that",
    "start": "463209",
    "end": "471459"
  },
  {
    "text": "it's burning CPU doesn't actually tell you that much but it can tell you whether your CPU bound or not are you",
    "start": "471459",
    "end": "476889"
  },
  {
    "text": "back are you waiting for i/o you've got IO top which will tell you where which",
    "start": "476889",
    "end": "482769"
  },
  {
    "text": "processes are doing input outputs vmstat IO stat or are fairly gross and bash",
    "start": "482769",
    "end": "489009"
  },
  {
    "text": "time - time is actually in this case I'm going to use that quite a bit because I just want to know what the run time is",
    "start": "489009",
    "end": "494169"
  },
  {
    "text": "I'll need other tools to tell me what why and what to do but it just runs fast",
    "start": "494169",
    "end": "499809"
  },
  {
    "text": "or it doesn't these ones are full speed tools you can run the thing at full speed not a",
    "start": "499809",
    "end": "505419"
  },
  {
    "text": "problem but they may based on sampling so you may get sort of kind of plus or minus some stuff so it's an indication a",
    "start": "505419",
    "end": "512529"
  },
  {
    "text": "lot of these things aren't going to say here is the big problem you have to learn to interpret the output of some of",
    "start": "512529",
    "end": "518229"
  },
  {
    "text": "those tools they're commercial ones from Intel as well you can modify your application so you can use G prof. G",
    "start": "518229",
    "end": "525339"
  },
  {
    "text": "cough things like that to try and do that one you can put in timing using stud chrono boost has a CPU time at",
    "start": "525339",
    "end": "532930"
  },
  {
    "text": "cetera so you can write your own instrumentation you can also use simulators and",
    "start": "532930",
    "end": "538150"
  },
  {
    "text": "use that at some point I'm going to use cash Grint they're slow but you give you very good insight how do you use these",
    "start": "538150",
    "end": "545590"
  },
  {
    "text": "ones here so here's some stuff about how to do that one here my favorite sort of compilation options are usually - oh",
    "start": "545590",
    "end": "551440"
  },
  {
    "text": "three and March native so oh three most people's go use oh three it breaks my",
    "start": "551440",
    "end": "557020"
  },
  {
    "text": "code and I said well your code was broken it just told you that it was broken so oh three should not break valid code and a March equals native",
    "start": "557020",
    "end": "565810"
  },
  {
    "text": "this says for the compiled for the architecture of this machine if you don't do that it will then compile for",
    "start": "565810",
    "end": "573010"
  },
  {
    "text": "and I 686 from about all fifteen years ago it takes the lowest possible all compiled that anything that can work on",
    "start": "573010",
    "end": "579880"
  },
  {
    "text": "any chip you usually don't want that you usually want to say I've got this chip can I use it please we could use",
    "start": "579880",
    "end": "586540"
  },
  {
    "text": "valgrind directly for memory allocations in this case we're not doing many so I'm not chasing a lot of memory allocation",
    "start": "586540",
    "end": "592000"
  },
  {
    "text": "stuff but I will be using cache grinned there's cache Brendan Cole grinned they're similar but not quite the same",
    "start": "592000",
    "end": "600690"
  },
  {
    "text": "both of them will do branch simulation and cache simulation cache grinned is a",
    "start": "600690",
    "end": "606820"
  },
  {
    "text": "little bit faster and a cool grained has got some extra stuff that will actually tell you about how much memory you've",
    "start": "606820",
    "end": "612640"
  },
  {
    "text": "used when you've loaded it and how much of a cache line there's some annoying differences in the command line options",
    "start": "612640",
    "end": "619390"
  },
  {
    "text": "as to whether it takes an absolute pathname variety of path name go and look it up or ask me about it afterwards",
    "start": "619390",
    "end": "624760"
  },
  {
    "text": "and the strange grep at the bottom is because the annotation one starts printing out horrible things when I do",
    "start": "624760",
    "end": "630550"
  },
  {
    "text": "this one who the thing about cache screen that you run your program under this one you'll get some summary",
    "start": "630550",
    "end": "636700"
  },
  {
    "text": "information and it's produced an output file in this case the output file I called CH G dot out and that contains a",
    "start": "636700",
    "end": "644500"
  },
  {
    "text": "lot of information you then use a tool to interpret CG annotate and this will then give you line by line information",
    "start": "644500",
    "end": "650530"
  },
  {
    "text": "about your program so we're going to see that let's go and actually have a look",
    "start": "650530",
    "end": "659770"
  },
  {
    "text": "at this piece of code well first of all let me describe what",
    "start": "659770",
    "end": "667779"
  },
  {
    "text": "I've got here so I've got so this is",
    "start": "667779",
    "end": "682770"
  },
  {
    "text": "this is the problem space I was given a COBOL copied book so this is what I was",
    "start": "682770",
    "end": "689350"
  },
  {
    "text": "given this is actually some COBOL don't worry I know it's all uppercase and got dots and things like that this is a",
    "start": "689350",
    "end": "695050"
  },
  {
    "text": "COBOL data structure and it tells you things like its strict it's basically a structure definition like your T and C",
    "start": "695050",
    "end": "701320"
  },
  {
    "text": "your C++ but with some odd things like so all these pick things at the end tell us nine it's four bytes long its",
    "start": "701320",
    "end": "708640"
  },
  {
    "text": "computational value it's X 10 or X 0 2 basically says its strings so I've got",
    "start": "708640",
    "end": "714250"
  },
  {
    "text": "three types of things here I've got strings which need to be trimmed because these are all fixed widths I need to",
    "start": "714250",
    "end": "719410"
  },
  {
    "text": "have output I'll show the output at the moment I've got some integers which are stored in the opposite way round to two",
    "start": "719410",
    "end": "726880"
  },
  {
    "text": "Intel chips so they're big endian not little endian so I have to reverse those and I've got binary coded decimal as",
    "start": "726880",
    "end": "732880"
  },
  {
    "text": "well when you've split this one off you actually get this this is the this is",
    "start": "732880",
    "end": "739570"
  },
  {
    "text": "what's the structure of the output looks like so I'll show you the output look fire looks like in a moment so that is",
    "start": "739570",
    "end": "746410"
  },
  {
    "text": "essentially I want priests a CSV or in this case pipe separated file that looks like this so I take the binary file and",
    "start": "746410",
    "end": "755200"
  },
  {
    "text": "I get here I've got a header row it's got pipes rather than Commerce and then lots and lots of these bits of data",
    "start": "755200",
    "end": "761110"
  },
  {
    "text": "after it and all the strings will be trimmed so that's the that's the the",
    "start": "761110",
    "end": "767709"
  },
  {
    "text": "problem space there what does the input",
    "start": "767709",
    "end": "773589"
  },
  {
    "text": "data look like well the input data looks like this so here's the first 400 bytes",
    "start": "773589",
    "end": "778860"
  },
  {
    "text": "what does what's that look like okay so that's a whole bunch of binary let me know I'm just the most I've forgotten to",
    "start": "778860",
    "end": "787170"
  },
  {
    "text": "episode it so here we go here's an IBM specification that says right here is",
    "start": "791509",
    "end": "797940"
  },
  {
    "text": "how characters are represented in episodic this is not gonna be a lecture on this one is just to do this one here",
    "start": "797940",
    "end": "803850"
  },
  {
    "text": "notice you've got the all the caps they've got some weird characters and 0 to 9 are all over there but one of the",
    "start": "803850",
    "end": "810540"
  },
  {
    "text": "odd things about this is if you're used to ASCII you will not you'll go like huh why do they do that one is that ABCD ba",
    "start": "810540",
    "end": "817079"
  },
  {
    "text": "ba bla goes down to I and then it's a bunch of characters then it starts again at J as they're all sort of kind of 10",
    "start": "817079",
    "end": "823290"
  },
  {
    "text": "apart so they do sort of ten letters at a time with gaps in between they don't",
    "start": "823290",
    "end": "828540"
  },
  {
    "text": "have a to Zed as contiguous characters okay fine well that's what I've got I",
    "start": "828540",
    "end": "836009"
  },
  {
    "text": "need to sort that one out so I hope that you're sitting there thinking like alright so how would I do this how would",
    "start": "836009",
    "end": "842040"
  },
  {
    "text": "I do this how am I going to do this in an efficient way I can't because I've got all these sort of kind of disjoint",
    "start": "842040",
    "end": "847649"
  },
  {
    "text": "characters I need to translate and then I gotta have to have some of this BCD stuff where it's got two characters",
    "start": "847649",
    "end": "853800"
  },
  {
    "text": "inside one thing it's a bit horrible really well so you look at that as a heck as a hex dump you think what's",
    "start": "853800",
    "end": "860220"
  },
  {
    "text": "going on and then halfway through the project when you've tried to decode that by hand you actually find out there is a",
    "start": "860220",
    "end": "866819"
  },
  {
    "text": "magic option that says please did use that Zeb City can you go off thanks for that at last I can read this damn",
    "start": "866819",
    "end": "872790"
  },
  {
    "text": "gravity oh look yeah I can see that one I just need to pull that out right okay I can see one two three four AGC I can I",
    "start": "872790",
    "end": "879480"
  },
  {
    "text": "can see how that is so once I found that life was a lot easier okay so that was",
    "start": "879480",
    "end": "885420"
  },
  {
    "text": "that was that right how do I deal with this one well I let's have a look at what I created was some so I created a",
    "start": "885420",
    "end": "897720"
  },
  {
    "text": "JSON file that had these things in it here I said right okay I want to have it",
    "start": "897720",
    "end": "903269"
  },
  {
    "text": "was the field here's the offset in the file this is how many bytes it is and here's its type string okay yes they did",
    "start": "903269",
    "end": "912139"
  },
  {
    "text": "some of these ones had got commas in the names which threw me and I thought I got an off by one error no it actually was",
    "start": "912139",
    "end": "918720"
  },
  {
    "text": "the one that they gave me really did who do this one that's really annoying lost some time",
    "start": "918720",
    "end": "923730"
  },
  {
    "text": "spacing of that one anyway so that was five long as was seven etc so I've got all this one here and basically describes the input right okay so let's",
    "start": "923730",
    "end": "932550"
  },
  {
    "text": "say that's that's what that is now let's have a look at my first version of the",
    "start": "932550",
    "end": "939210"
  },
  {
    "text": "code so the way I decided I was going to",
    "start": "939210",
    "end": "944760"
  },
  {
    "text": "do this one does that actually fit on the screen all of that you're not truncated or anything you can see that doesn't need to be bigger okay",
    "start": "944760",
    "end": "953370"
  },
  {
    "text": "the way I decided to do this one here was actually end up single file I was going to use a jsonparser from the and",
    "start": "953370",
    "end": "960390"
  },
  {
    "text": "lo man Jason powers a header only because this was I was giving this to a bunch of",
    "start": "960390",
    "end": "965970"
  },
  {
    "text": "people who were not sepal of us programmers I didn't want to install anything I said right okay he's a source file here's a HPP file and just run to",
    "start": "965970",
    "end": "972930"
  },
  {
    "text": "stick this in Visual Studio and say compile I decided my way was to use a",
    "start": "972930",
    "end": "979380"
  },
  {
    "text": "translation table from M siddik to ASCII so that's what I got a translation table there leads the configuration in let's",
    "start": "979380",
    "end": "987270"
  },
  {
    "text": "go to the bottom of the program what does it do it's very straightforward look at the arguments I just provides I",
    "start": "987270",
    "end": "994500"
  },
  {
    "text": "want the the input so I want the configuration file first first argument",
    "start": "994500",
    "end": "1000710"
  },
  {
    "text": "after the program name and an input file in this case I'm just checking to standard output this should be",
    "start": "1000710",
    "end": "1006380"
  },
  {
    "text": "relatively straightforward when the entire program is only hundred fifty-five lines long I'm not going to do all of it so reading configuration is",
    "start": "1006380",
    "end": "1014600"
  },
  {
    "text": "just going through this is really nice and go just read just read the Jason please do that one",
    "start": "1014600",
    "end": "1020690"
  },
  {
    "text": "here and then just pull out the fields nice very straightforward printing header rows yeah well that was that one",
    "start": "1020690",
    "end": "1026750"
  },
  {
    "text": "here and this is where we start actually to meet the the real the real world of",
    "start": "1026750",
    "end": "1031970"
  },
  {
    "text": "stuff process I've got an input stream what am i doing well they're all fixed",
    "start": "1031970",
    "end": "1036980"
  },
  {
    "text": "bar length records so that's fine and I just go and read from the import a fixed",
    "start": "1036980",
    "end": "1043069"
  },
  {
    "text": "length record into a buffer like this and then I just got to go through all the fields I'm going around all the",
    "start": "1043069",
    "end": "1048079"
  },
  {
    "text": "fields that we're in that JSON file go and pick out the the right thing if it was a string then call string and write",
    "start": "1048079",
    "end": "1055250"
  },
  {
    "text": "that out if it was an instrument and right then pars the int past the decimal do",
    "start": "1055250",
    "end": "1060500"
  },
  {
    "text": "the strain go round nothing too exciting you probably would have come up with something very similar yourselves let's",
    "start": "1060500",
    "end": "1066590"
  },
  {
    "text": "see what that turns into this is the unoptimized my first go at this application right okay so I need to do",
    "start": "1066590",
    "end": "1073190"
  },
  {
    "text": "this here the forties are Spacey's I should probably think I broke this in a",
    "start": "1073190",
    "end": "1078560"
  },
  {
    "text": "hurry I could go and refactoring you will see some refactoring as I go anyway so well I'm not this is saying right I",
    "start": "1078560",
    "end": "1084860"
  },
  {
    "text": "want to get my string like this how long is it supposed to be work backwards and trim the string that way so I'm trimming",
    "start": "1084860",
    "end": "1091070"
  },
  {
    "text": "the string and then translating it through the table if it was an integer I",
    "start": "1091070",
    "end": "1096740"
  },
  {
    "text": "have to reverse the bytes because there and then the wrong format for Intel the",
    "start": "1096740",
    "end": "1101900"
  },
  {
    "text": "decimal one gets to be more exciting because I go the decimal is packed decimal so what you'll see is I'm not",
    "start": "1101900",
    "end": "1110780"
  },
  {
    "text": "sure if I've got a decimal in here but what you will see is 0 1 0 2 would actually be 12 so it's actually a byte",
    "start": "1110780",
    "end": "1118760"
  },
  {
    "text": "at a time and then the last one there",
    "start": "1118760",
    "end": "1124220"
  },
  {
    "text": "will be a the last nibble so the last four bits will be C or D C if it's",
    "start": "1124220",
    "end": "1129860"
  },
  {
    "text": "positive David's negative for any of you who will work that one out you go ok these guys do accounting that's credit",
    "start": "1129860",
    "end": "1135650"
  },
  {
    "text": "and debit that's yeah that's actually hardwired into the way the IBM",
    "start": "1135650",
    "end": "1140830"
  },
  {
    "text": "arithmetic is hooks ok and that explains why I've got I'm doing some bit shifting",
    "start": "1140830",
    "end": "1146120"
  },
  {
    "text": "here to take top 4 bits and bottom 4 bits and multiply the top ones by a hundred and other things like that I'm",
    "start": "1146120",
    "end": "1152390"
  },
  {
    "text": "doing it a bunch of the time because I need to take the top 4 there do some",
    "start": "1152390",
    "end": "1157970"
  },
  {
    "text": "shifting and then I do some printf so I just print out the floating-point number",
    "start": "1157970",
    "end": "1163070"
  },
  {
    "text": "right ok that's that let's so let's",
    "start": "1163070",
    "end": "1169430"
  },
  {
    "text": "compile it is that going to be off the bottom the screen if I do that maybe it's not better because a lot of you all",
    "start": "1169430",
    "end": "1176570"
  },
  {
    "text": "I think you'll just probably just be going like wow I don't see anything right okay so now let's let's time this",
    "start": "1176570",
    "end": "1182900"
  },
  {
    "text": "guy so I'm gonna up some",
    "start": "1182900",
    "end": "1186460"
  },
  {
    "text": "you know okay let's sum I've got some very big files and some very and some",
    "start": "1189930",
    "end": "1196180"
  },
  {
    "text": "small files and Gilles Wow let's well let's try the M so this one here is",
    "start": "1196180",
    "end": "1204300"
  },
  {
    "text": "that's time that one it'll take about 10 or 11 seconds tis my first go of this",
    "start": "1205320",
    "end": "1211120"
  },
  {
    "text": "one here notice it's piping out okay let's see what what that actually looks",
    "start": "1211120",
    "end": "1216309"
  },
  {
    "text": "like for those ten seconds okay right which if you look at this one LS - out",
    "start": "1216309",
    "end": "1223480"
  },
  {
    "text": "of the actual file itself so here's the",
    "start": "1223480",
    "end": "1228520"
  },
  {
    "text": "input file you'll see that's really",
    "start": "1228520",
    "end": "1235390"
  },
  {
    "text": "quite large so if you want that in thing is 191 megabytes so some 191 megabytes",
    "start": "1235390",
    "end": "1242950"
  },
  {
    "text": "in just over 10 seconds it's on my laptop which is a core i5 well we're not",
    "start": "1242950",
    "end": "1249850"
  },
  {
    "text": "doing too badly so what what other things could we look at well let's find out what it's doing so courtesy of Michael Karis key in the front here I'm",
    "start": "1249850",
    "end": "1256929"
  },
  {
    "text": "doing an S trace see on this one to count all the system calls pick that one up this morning's worth going to other",
    "start": "1256929",
    "end": "1261940"
  },
  {
    "text": "people's talks isn't it find out what the hell is thing is doing how is this talking to the operating system remember I said let's see what",
    "start": "1261940",
    "end": "1268540"
  },
  {
    "text": "system calls do cuz they'll really slow you down forget that one wrong and this gives you a lovely printout like this that says AHA look 70% of the system",
    "start": "1268540",
    "end": "1277690"
  },
  {
    "text": "calls there this one here are calls to write which is not very surprising it's",
    "start": "1277690",
    "end": "1282700"
  },
  {
    "text": "writing a lot of stuff it's reading a lot of stuff and then it's got some sort of kind of open and close things said",
    "start": "1282700",
    "end": "1288700"
  },
  {
    "text": "sure it's basically doing reading writing so I'm not doing anything really silly none other than okay I've got 200",
    "start": "1288700",
    "end": "1295929"
  },
  {
    "text": "megabytes and 24,000 ok so there's there's something in there right so",
    "start": "1295929",
    "end": "1301480"
  },
  {
    "text": "that's that's one look let's have a look at silly that's what perf stat would tell us perf",
    "start": "1301480",
    "end": "1307809"
  },
  {
    "text": "stat run that on here the same thing we do go first on this one this just happens to be the slowest one and that's",
    "start": "1307809",
    "end": "1315880"
  },
  {
    "text": "now going to give us so perfect at is looking at some of the Intel before it's counters and says well okay it",
    "start": "1315880",
    "end": "1322149"
  },
  {
    "text": "gives us some interesting information it says right okay you're running at about 2.2 gigahertz which is so this is",
    "start": "1322149",
    "end": "1330099"
  },
  {
    "text": "interesting ly enough as we go and later that number goes down it tells you some things about stalled cycles which is how",
    "start": "1330099",
    "end": "1336249"
  },
  {
    "text": "much is it waiting for stuff I'm already at two instructions per cycle which is",
    "start": "1336249",
    "end": "1342419"
  },
  {
    "text": "really very high how many instructions is this thing executing every clock",
    "start": "1342419",
    "end": "1349830"
  },
  {
    "text": "Jason McGinnis was saying he reckons point seven point eight is probably about what most applications are and",
    "start": "1349830",
    "end": "1356469"
  },
  {
    "text": "they struggle to get beyond that one so I'm already in really good territory here about that one here the other one",
    "start": "1356469",
    "end": "1362049"
  },
  {
    "text": "is this stall cycles per instruction it's most of the time in applications",
    "start": "1362049",
    "end": "1369099"
  },
  {
    "text": "you're waiting for the memory this is saying I'm really not waiting for memory that much I'm hitting the CPU quite hard",
    "start": "1369099",
    "end": "1374799"
  },
  {
    "text": "here and the branch prediction is not bad okay fine right so that's per state",
    "start": "1374799",
    "end": "1380080"
  },
  {
    "text": "I could also then say well let's have a look at let's actually do whoops - see",
    "start": "1380080",
    "end": "1388570"
  },
  {
    "text": "let me do that so let's this is then a",
    "start": "1388570",
    "end": "1393969"
  },
  {
    "text": "sort of standard profile that's an external one you can just look at stuff it's nice and free and then we'll show",
    "start": "1393969",
    "end": "1399099"
  },
  {
    "text": "you where it's spending its time and so perfe port will now give us something",
    "start": "1399099",
    "end": "1405429"
  },
  {
    "text": "like this and this shows us inside now where where are we spending our time here well okay so the first thing is",
    "start": "1405429",
    "end": "1412029"
  },
  {
    "text": "Ostrom insert oh okay i seem to be doing i/o this is then my process and then",
    "start": "1412029",
    "end": "1419919"
  },
  {
    "text": "i've got writing and printing and div ram oh that's going to be all that a sprint and then % whatever that's",
    "start": "1419919",
    "end": "1426070"
  },
  {
    "text": "probably not so very good here a lot of excess put in so that's output some string staffs and printf sentry here by",
    "start": "1426070",
    "end": "1433749"
  },
  {
    "text": "the way these are the items which are created by iostream mem come that's",
    "start": "1433749",
    "end": "1440139"
  },
  {
    "text": "always ends up you end up with a memory allocation in comparison somewhere so this is memory comparison this is doing",
    "start": "1440139",
    "end": "1445599"
  },
  {
    "text": "string comparison string length and aligned mem comp this is not untypical",
    "start": "1445599",
    "end": "1451029"
  },
  {
    "text": "for a kind of first pass application you look and you go I've got quite a lot of things that it's spending its time I'm",
    "start": "1451029",
    "end": "1457940"
  },
  {
    "text": "spending too much time in too many different places and none of them are really helpful okay right so that tells",
    "start": "1457940",
    "end": "1463820"
  },
  {
    "text": "me I need to sort of kind of look in some of those areas I probably need some finer grain stuff right okay let's have a look at Tam so here we go I'm not",
    "start": "1463820",
    "end": "1472190"
  },
  {
    "text": "going to run it on the full-size thing because that will kill it that will kill it because it's much slower so I'm gonna",
    "start": "1472190",
    "end": "1480919"
  },
  {
    "text": "use something that's a lot smaller so I have they did give me some test files so",
    "start": "1480919",
    "end": "1487309"
  },
  {
    "text": "that which is nice so I could actually run this against this particular version",
    "start": "1487309",
    "end": "1497269"
  },
  {
    "text": "is using directed output okay so while this one valgrind and I'm using the cache greened tool",
    "start": "1497269",
    "end": "1503389"
  },
  {
    "text": "here and I'm going to simulate branches so do the branch detectors branch",
    "start": "1503389",
    "end": "1508850"
  },
  {
    "text": "simulation and cache simulation but area does a two layer l1 and last cache",
    "start": "1508850",
    "end": "1514850"
  },
  {
    "text": "preseason output file runs what I've got there and they are yes okay fine so this",
    "start": "1514850",
    "end": "1522590"
  },
  {
    "text": "is so that's cache green I'm running on a much smaller file on something that's that's less than a megabyte or so and",
    "start": "1522590",
    "end": "1529010"
  },
  {
    "text": "this is what you'll get start off with and so here's some staff instruction",
    "start": "1529010",
    "end": "1534139"
  },
  {
    "text": "cache misses zero great that's good you don't want to have those because absolutely mean but data references here",
    "start": "1534139",
    "end": "1541700"
  },
  {
    "text": "these numbers are sort of kind of worth looking at but they're not as much fun ass annotate CG annotate CG dot out so",
    "start": "1541700",
    "end": "1550909"
  },
  {
    "text": "give me that file I just had there and I can say annotate the particular file or Kai I can just say Otto because yes so",
    "start": "1550909",
    "end": "1558620"
  },
  {
    "text": "it's go on automatically annotate any file that looks like it's worth dealing with right this is what you then get out",
    "start": "1558620",
    "end": "1564950"
  },
  {
    "text": "of cache Grint so there's some important tasks to interpreting this one it says yeah I've",
    "start": "1564950",
    "end": "1571340"
  },
  {
    "text": "simulated a 32 kilobyte cache it's using a 3 megabyte",
    "start": "1571340",
    "end": "1576880"
  },
  {
    "text": "alcott l3 cache because that's what's in my laptop here it's saying it was a command line here all the events that",
    "start": "1576880",
    "end": "1583700"
  },
  {
    "text": "it's doing which will go through in a moment and the and threshold you can cut off some noise at the bottom the important things to",
    "start": "1583700",
    "end": "1589370"
  },
  {
    "text": "look at this one here is I'd probably first look at this line it's let's see if we can interpret this so I've got",
    "start": "1589370",
    "end": "1595159"
  },
  {
    "text": "some stuff about instructions and it goes a team in the instructions mm misses that I'm not not worried by",
    "start": "1595159",
    "end": "1601460"
  },
  {
    "text": "that that's fine if you got instruction cast Macy's sort that out first because that will absolutely kill your machine",
    "start": "1601460",
    "end": "1607250"
  },
  {
    "text": "if machine doesn't know what to do bad performance here next one data cache 24 million data",
    "start": "1607250",
    "end": "1614990"
  },
  {
    "text": "reads and dr d 1m r is data cache one",
    "start": "1614990",
    "end": "1620919"
  },
  {
    "text": "misses for read 1616 thousand and eight",
    "start": "1620919",
    "end": "1626779"
  },
  {
    "text": "thousand of those then went out and then missed the last level cache as well so this thing is pretty cache friendly",
    "start": "1626779",
    "end": "1632929"
  },
  {
    "text": "actually out of which is what the numbers we saw with that that first one more so 16,000 out of 24 million it's",
    "start": "1632929",
    "end": "1639950"
  },
  {
    "text": "really cache friendly which is why I can get that high throughput saying for writes here it's actually not doing much",
    "start": "1639950",
    "end": "1646820"
  },
  {
    "text": "and writes not doing much in the way of right missus writes have to do a read before right here is the branch",
    "start": "1646820",
    "end": "1653809"
  },
  {
    "text": "simulator 11 million branches point three million miss predictions so this",
    "start": "1653809",
    "end": "1660080"
  },
  {
    "text": "is using a simple branch predictor if you remember back to that being that big thing of fast and slow branch prediction",
    "start": "1660080",
    "end": "1666620"
  },
  {
    "text": "misses a 10 times slower than correctly predicted one so this is branch predictions are good here so that's what",
    "start": "1666620",
    "end": "1673909"
  },
  {
    "text": "branch conditional is also branch indirect and this is then called the who",
    "start": "1673909",
    "end": "1679460"
  },
  {
    "text": "basically virtual functions or call through a function pointer so call square brackets and it's simulated that",
    "start": "1679460",
    "end": "1685370"
  },
  {
    "text": "and again that's that's fine so that was this basically tells me this is pretty good I'm home got instruction cache",
    "start": "1685370",
    "end": "1691010"
  },
  {
    "text": "misses and my data cache is working right okay let's have a look at the the rest of this and this then gives me a",
    "start": "1691010",
    "end": "1696679"
  },
  {
    "text": "similar break down to the profiling but this is now inside I can see there's a lot of F right and strings at search",
    "start": "1696679",
    "end": "1702710"
  },
  {
    "text": "okay what's really nice about this one it says okay here you go I'm going to show you on a per line basis where this",
    "start": "1702710",
    "end": "1708679"
  },
  {
    "text": "is happening so if I've got things around the I'm talking tens of millions we can see what's happening on thing",
    "start": "1708679",
    "end": "1715940"
  },
  {
    "text": "this is all the library I said just tell me anything this actually showing me in the STL where all my time is going not much not much not much okay",
    "start": "1715940",
    "end": "1725130"
  },
  {
    "text": "some stuff going on here about string construction okay let's find and see what we get that some more string stuff",
    "start": "1725130",
    "end": "1735150"
  },
  {
    "text": "let's move down here because if I go out of that and just say look let's have it",
    "start": "1735150",
    "end": "1742890"
  },
  {
    "text": "was a v1 wasn't it so if I do this and",
    "start": "1742890",
    "end": "1750990"
  },
  {
    "text": "I'm gonna say look okay just show me my program so I can insight traces on the",
    "start": "1750990",
    "end": "1757050"
  },
  {
    "text": "individual program basis and it gives me line per line basis and it goes okay right here we go",
    "start": "1757050",
    "end": "1762510"
  },
  {
    "text": "so we can see your hundreds of thousands around this loop which is not surprising given the number of things I've got here",
    "start": "1762510",
    "end": "1770340"
  },
  {
    "text": "all like here we going is where all the fun is so we found our sort of kind of hot loop here which is this translation",
    "start": "1770340",
    "end": "1776730"
  },
  {
    "text": "loop and also there's this loop here doing that one okay so um there's a lot",
    "start": "1776730",
    "end": "1781830"
  },
  {
    "text": "of stuff going on there that is this is showing me hot in the middle of my program so it's all strings so it turned",
    "start": "1781830",
    "end": "1790650"
  },
  {
    "text": "out that I'm actually processing strings not many integers or decimals at all in fact there were no int in that file",
    "start": "1790650",
    "end": "1796560"
  },
  {
    "text": "whatsoever but there were some decimal ones but I didn't have many of them so it's surprising I had all that if div",
    "start": "1796560",
    "end": "1803090"
  },
  {
    "text": "etc right okay so having done that one I",
    "start": "1803090",
    "end": "1809100"
  },
  {
    "text": "mean okay we've got we've got too much fun with with that let's go and see what",
    "start": "1809100",
    "end": "1814770"
  },
  {
    "text": "the change is where remember there's a lot of i/o going on so let's have a look and see where what the changes are made",
    "start": "1814770",
    "end": "1819930"
  },
  {
    "text": "for the next version was same kind of stuff I went well okay I was doing some",
    "start": "1819930",
    "end": "1826170"
  },
  {
    "text": "stuff round here so what have I done here I've decided actually look there was a lot of string comparison going on",
    "start": "1826170",
    "end": "1832170"
  },
  {
    "text": "there's that mem comp that's string comparison it was doing mem compressor c4 I'm going okay there's something in string comparisons and I",
    "start": "1832170",
    "end": "1838710"
  },
  {
    "text": "went yeah you know what look every time I was going round here I was doing an if string equals E string you've caused",
    "start": "1838710",
    "end": "1845220"
  },
  {
    "text": "that then going hold on why am i doing string comparisons here what I need really is to be comparing against an",
    "start": "1845220",
    "end": "1851370"
  },
  {
    "text": "enum or an integer why am i doing string comparisons of something this big I have to go all the way down when actually",
    "start": "1851370",
    "end": "1857660"
  },
  {
    "text": "there's only three choices here well okay that's quite an enum so I've got an enum of those ones here I've got some",
    "start": "1857660",
    "end": "1863420"
  },
  {
    "text": "way of converting that take those if statements convert them into the enum here and I then do a get feel type on it",
    "start": "1863420",
    "end": "1870380"
  },
  {
    "text": "here when I'm reading it in so instead of storing string for this one I'm saying I'm storing it an enum which",
    "start": "1870380",
    "end": "1876440"
  },
  {
    "text": "makes this now I get tests against integers much faster okay notice that",
    "start": "1876440",
    "end": "1884480"
  },
  {
    "text": "we're doing a lot of i/o so the first thing I mean look I'm I'm doing IO or C out on every string and every separator",
    "start": "1884480",
    "end": "1894020"
  },
  {
    "text": "and I'm gonna she's kind of that's why I'm doing a lot of this there's a lot of this stuff on IO and there on on the ice",
    "start": "1894020",
    "end": "1901220"
  },
  {
    "text": "cream so what I did instead is right okay let's create string let's reserve the",
    "start": "1901220",
    "end": "1906950"
  },
  {
    "text": "size of that string and then just do an output on that do plus equals so get this get these things here instead of",
    "start": "1906950",
    "end": "1915280"
  },
  {
    "text": "returning a string by value like that I'm gonna get it to build it up and then",
    "start": "1915280",
    "end": "1920540"
  },
  {
    "text": "return it as one so we this is still doing string and string addition but",
    "start": "1920540",
    "end": "1927080"
  },
  {
    "text": "here's so it's fairly similar but instead of doing I'll start at the end of the string go backwards and then",
    "start": "1927080",
    "end": "1933500"
  },
  {
    "text": "translate these ones and do that one here I said I decided I was gonna be clever because I'm always deciding him",
    "start": "1933500",
    "end": "1939650"
  },
  {
    "text": "be clever like that and I will work out as I go through the string what the last non string character was so I'll do",
    "start": "1939650",
    "end": "1945200"
  },
  {
    "text": "single pass because that's going to help isn't it and that was most of the other ones so that was my first attempt at",
    "start": "1945200",
    "end": "1951440"
  },
  {
    "text": "changing that one here and you can see a storing field type run the string let's see the difference so plus plus so let's",
    "start": "1951440",
    "end": "1963710"
  },
  {
    "text": "go to v2",
    "start": "1963710",
    "end": "1966970"
  },
  {
    "text": "and let's run that instead and that now takes instead of 10 points something",
    "start": "1973909",
    "end": "1980270"
  },
  {
    "text": "it's now five point something so it's twice as fast yay let's try let's see where it's",
    "start": "1980270",
    "end": "1991460"
  },
  {
    "text": "spending its time now I would use perfect call for this one because then I",
    "start": "1991460",
    "end": "1997070"
  },
  {
    "text": "can use this full-size file and not because it's 20 times slower if I use",
    "start": "1997070",
    "end": "2002500"
  },
  {
    "text": "valgrind cache screen but it tells me exactly what's going on inside that's what's really nice about it",
    "start": "2002500",
    "end": "2007929"
  },
  {
    "text": "app thank you and hey now the top of the",
    "start": "2007929",
    "end": "2015850"
  },
  {
    "text": "line here guess what I've actually got my program at the top I'm not wasting time in the library I'm actually in my",
    "start": "2015850",
    "end": "2022029"
  },
  {
    "text": "one here it's still only 22% and I've still got a lot of printf and divs and okay so and still know the string stuff",
    "start": "2022029",
    "end": "2028419"
  },
  {
    "text": "going on but I've got rid of part of that one okay so these are the main",
    "start": "2028419",
    "end": "2034750"
  },
  {
    "text": "things here so obviously the printing and the and the comparison there is something you have to do with right okay",
    "start": "2034750",
    "end": "2040149"
  },
  {
    "text": "so what's my next trick then that was version 2 hmm so where did I go after",
    "start": "2040149",
    "end": "2049089"
  },
  {
    "text": "that well let's have a look so having done that one I'm an R right okay",
    "start": "2049089",
    "end": "2056190"
  },
  {
    "text": "conversion of decimals having gone through this one I did it actually go through into a cache greened and found",
    "start": "2056190",
    "end": "2061419"
  },
  {
    "text": "out that there's quite a bit decimal stuff going on that big file it takes minutes to run but I'm not gonna inflict",
    "start": "2061419",
    "end": "2068408"
  },
  {
    "text": "that on you so what do I do here well I mean ok so um I did some stuff and I went look this string stuff why am i",
    "start": "2068409",
    "end": "2075490"
  },
  {
    "text": "doing strings here I should be strings are sort of doing all this business about you know",
    "start": "2075490",
    "end": "2081580"
  },
  {
    "text": "creating things and small string optimization it's a string buff it's a buffer yeah ok so I went back down to",
    "start": "2081580",
    "end": "2087250"
  },
  {
    "text": "the good old fashioned straight array here so back down to C style processing in good old star pointer plus plus yeah",
    "start": "2087250",
    "end": "2095730"
  },
  {
    "text": "guess well that's what the Machine supports so that's going to be fast so having measured that I've got down here",
    "start": "2095730",
    "end": "2101589"
  },
  {
    "text": "I've now changed this one so I'm now returning the new pointer passing in where it needs to go",
    "start": "2101589",
    "end": "2106840"
  },
  {
    "text": "and you'll see here I'm actually writing out into I'm doing the spaces here and trimming here and I'm not returning and",
    "start": "2106840",
    "end": "2114910"
  },
  {
    "text": "string anymore I'm doing the right inside here and just saying how many I've got so I can bump the output",
    "start": "2114910",
    "end": "2120130"
  },
  {
    "text": "pointer so replaced the output with strings and just gone straight to that",
    "start": "2120130",
    "end": "2126760"
  },
  {
    "text": "one here okay right so same for integer here saying this is just writing it out and I'm just doing an S printf having",
    "start": "2126760",
    "end": "2133360"
  },
  {
    "text": "reversed it the decimal one I went well actually I've seem to be spending quite a bit of time here so having gone into",
    "start": "2133360",
    "end": "2139570"
  },
  {
    "text": "this one owner sort of kind of looked at and when most of these decimals actually don't have decimals they don't have any",
    "start": "2139570",
    "end": "2145420"
  },
  {
    "text": "dot zero zero some of them an hour price is you know thirty to ninety nine but a",
    "start": "2145420",
    "end": "2150880"
  },
  {
    "text": "lot of them are actually just whole numbers so actually I worked out that it was going to be faster to say look I'll",
    "start": "2150880",
    "end": "2156850"
  },
  {
    "text": "just print it out like that without these decimal places so I did a bit of timing measurement and that's where I",
    "start": "2156850",
    "end": "2162070"
  },
  {
    "text": "ended up with that I also said well okay this business of output on the shell so",
    "start": "2162070",
    "end": "2168040"
  },
  {
    "text": "I was chasing down why how can I get rid of some of my io speed so I went for a",
    "start": "2168040",
    "end": "2175210"
  },
  {
    "text": "four argument not a three argument version also I was having lots of fun",
    "start": "2175210",
    "end": "2181990"
  },
  {
    "text": "with this one and Windows carefully decides that control Zed inside a file",
    "start": "2181990",
    "end": "2187960"
  },
  {
    "text": "is end of file which is really helpful because it assumes it's text mode so I",
    "start": "2187960",
    "end": "2194200"
  },
  {
    "text": "had to put binary mode in there to stop in doing that one and notice I've redirected the output using every",
    "start": "2194200",
    "end": "2200890"
  },
  {
    "text": "opening no tab look at we go here it",
    "start": "2200890",
    "end": "2208990"
  },
  {
    "text": "just becomes a relentless thing you get kind of addictive how much faster can I make it go it's it's fun so well we'll",
    "start": "2208990",
    "end": "2217240"
  },
  {
    "text": "get we'll get some of the way down here so that one now needs to have that",
    "start": "2217240",
    "end": "2223210"
  },
  {
    "text": "removed and it's now hey I'm speeding up by factor two again",
    "start": "2223210",
    "end": "2230380"
  },
  {
    "text": "yeah okay weird we're cooking on gas now we're having some fun that's of strange expression don't worry about it",
    "start": "2230380",
    "end": "2238560"
  },
  {
    "text": "so let's see where that one might go ah",
    "start": "2239020",
    "end": "2243990"
  },
  {
    "text": "right so 32% inside my thing here we can actually see if you go into this one and",
    "start": "2247110",
    "end": "2252340"
  },
  {
    "text": "annotate it goes okay here we are you can cycle through all of the fasting the",
    "start": "2252340",
    "end": "2257590"
  },
  {
    "text": "instructions where it's spending its time and it appears to be spending most of its time in this Translate loop and",
    "start": "2257590",
    "end": "2263560"
  },
  {
    "text": "there's also doing some if out here okay interesting see there's a conditional",
    "start": "2263560",
    "end": "2268720"
  },
  {
    "text": "move instruction so it's actually avoiding a branch by doing conditional move so the compiler is quite good at",
    "start": "2268720",
    "end": "2275020"
  },
  {
    "text": "this but it seems to be spending most of its time in this loop okay right so and",
    "start": "2275020",
    "end": "2280210"
  },
  {
    "text": "there's another one here which she's doing if field count separator Oh actually I seem to be doing a lot of",
    "start": "2280210",
    "end": "2285760"
  },
  {
    "text": "stuff on this really okay so I go around that one and that's it's but it tells me",
    "start": "2285760",
    "end": "2291340"
  },
  {
    "text": "that's where I'm spending my time so okay I better do some of that hmm so",
    "start": "2291340",
    "end": "2299860"
  },
  {
    "text": "where do I go after that I will as I said I could go into all of the the line by line cache green stuff but what do I",
    "start": "2299860",
    "end": "2307900"
  },
  {
    "text": "do after this I decided okay so what was my next trick so my next trick was to",
    "start": "2307900",
    "end": "2313660"
  },
  {
    "text": "say right seems like spending time in here I've seem to be spending time in the decimals so I spent a little while",
    "start": "2313660",
    "end": "2320290"
  },
  {
    "text": "going well maybe I can get rid of this kind of printf because I'd sort of kind of done something a little stupid does",
    "start": "2320290",
    "end": "2326920"
  },
  {
    "text": "anybody recognize what I done is being stupid and it was one of those you idiot",
    "start": "2326920",
    "end": "2332200"
  },
  {
    "text": "moments what I done for the decimal is I",
    "start": "2332200",
    "end": "2337420"
  },
  {
    "text": "gone right okay picked up this decimal I've reconstructed into this thing here and then I printed out so I taken what",
    "start": "2337420",
    "end": "2343690"
  },
  {
    "text": "was already split up into digits turned it into an integer or floating-point number and then used the",
    "start": "2343690",
    "end": "2349690"
  },
  {
    "text": "float and then use printf to turn it back into the same stroke why did I do that that was just a silly thing it's",
    "start": "2349690",
    "end": "2356920"
  },
  {
    "text": "already in a zero one zero two why have I taken those ones undo all this multiplication just to undo it that was",
    "start": "2356920",
    "end": "2363550"
  },
  {
    "text": "silly wasn't it so instead of doing that one why don't just say roll okay look that was pick that nibble up and take",
    "start": "2363550",
    "end": "2370150"
  },
  {
    "text": "this byte if his either one zero two shift like that zero one and add on the zero for the ASCII and then do the bottom one",
    "start": "2370150",
    "end": "2377019"
  },
  {
    "text": "here so that basically is what I need to do in order to print it it's like I just spent a whole pile of time converting",
    "start": "2377019",
    "end": "2383859"
  },
  {
    "text": "between BCD into decimal back axis into visible BCD I got to do some stuff here",
    "start": "2383859",
    "end": "2390519"
  },
  {
    "text": "to get the last ones and the points in the right place but yeah okay fine I had",
    "start": "2390519",
    "end": "2395680"
  },
  {
    "text": "I had been silly so it was one of those you idiot moments it does happen",
    "start": "2395680",
    "end": "2403890"
  },
  {
    "text": "Evan it does so well so what are we getting now when we do that so that's V",
    "start": "2404819",
    "end": "2413109"
  },
  {
    "text": "full one point nine two we're getting somewhere here okay so so you can see",
    "start": "2413109",
    "end": "2419680"
  },
  {
    "text": "little by little you just sort of chipping away and you're taking off in some cases a factor of two in other cases a little bit less than that right",
    "start": "2419680",
    "end": "2427839"
  },
  {
    "text": "okay 54% in my process here and not in",
    "start": "2427839",
    "end": "2433960"
  },
  {
    "text": "the libraries I have an interesting question as to where what this part is is this this one here which appears to",
    "start": "2433960",
    "end": "2439960"
  },
  {
    "text": "be Saints as unknown doesn't know where it is it's labeled as K think it looks like some part of kernel stuff and the",
    "start": "2439960",
    "end": "2444969"
  },
  {
    "text": "IND and this 0xffff it's way up there it looks like it's part of a library or",
    "start": "2444969",
    "end": "2450759"
  },
  {
    "text": "something similar this is in kernel space I would be very interested if somebody could tell me what that one is but notice you know I've still got some",
    "start": "2450759",
    "end": "2459009"
  },
  {
    "text": "stray copy and some mem charm M moves and some string stuff going on so do I leave this and put s and string I can",
    "start": "2459009",
    "end": "2465190"
  },
  {
    "text": "probably get rid of some of this as well but if I go into here where am I I'm still in my thing here of spending a",
    "start": "2465190",
    "end": "2472539"
  },
  {
    "text": "lot of time in this translation loop okay what do I do about that translation yeah that's most of the time is there",
    "start": "2472539",
    "end": "2479190"
  },
  {
    "text": "some chart rates etc so it just gives you a very good idea where things are you can just without him to do a lot of",
    "start": "2479190",
    "end": "2487180"
  },
  {
    "text": "work to find out what's happening okay what was what was next after that having",
    "start": "2487180",
    "end": "2495969"
  },
  {
    "text": "realized the error of my ways I thought well maybe I can do this with some I had",
    "start": "2495969",
    "end": "2502989"
  },
  {
    "text": "got rid of this BCD to binary decimal thing he and now I'm going okay separators",
    "start": "2502989",
    "end": "2510030"
  },
  {
    "text": "stringfield's what I do here this particular one is right okay",
    "start": "2510030",
    "end": "2515740"
  },
  {
    "text": "I'd got some other way of doing the decimal stuff here which was a slightly",
    "start": "2515740",
    "end": "2522880"
  },
  {
    "text": "better way of doing this so I was fiddling around on the decimal part",
    "start": "2522880",
    "end": "2529050"
  },
  {
    "text": "let's see if that how much difference that makes I'll probably skip over that one when you got a few minutes left cool",
    "start": "2530910",
    "end": "2538859"
  },
  {
    "text": "okay sorry that wall yes yeah that I'm sorry I'm correct sorry I moved that one",
    "start": "2540960",
    "end": "2547270"
  },
  {
    "text": "there so we could look at the cash grant output I didn't revert it thank you and what's",
    "start": "2547270",
    "end": "2555880"
  },
  {
    "text": "that going to give us from in terms of spot a yeah okay right so we've now down to one point two five we're doing quite well so let's let's see what the next",
    "start": "2555880",
    "end": "2563530"
  },
  {
    "text": "one after that might be says I'd like to get into the last few of these ones here",
    "start": "2563530",
    "end": "2568800"
  },
  {
    "text": "so what I do at that point you can see we can go through and have a",
    "start": "2568800",
    "end": "2575470"
  },
  {
    "text": "look but we're running out of time so instead of this if feel counter blah blah blah and do the separator with the",
    "start": "2575470",
    "end": "2581770"
  },
  {
    "text": "if statement and then print it out I go I'll print it out every time and then just do plus one at the end just I'm",
    "start": "2581770",
    "end": "2587770"
  },
  {
    "text": "putting separator field separator field and they're just not printing the first separator because they get rid of that",
    "start": "2587770",
    "end": "2592810"
  },
  {
    "text": "if statement I'm now down to the point where it starts to make a difference for the if statements inside loops which is",
    "start": "2592810",
    "end": "2598990"
  },
  {
    "text": "why I went went from here to here let's very quickly take something like this and go to compiler explorer there so",
    "start": "2598990",
    "end": "2610630"
  },
  {
    "text": "compiler Explorer for those of you who've probably you've seen most of this before but so here is what compiler",
    "start": "2610630",
    "end": "2621430"
  },
  {
    "text": "Explorer makes of makes of that particular piece of code there it's not particularly good you can see that the",
    "start": "2621430",
    "end": "2627910"
  },
  {
    "text": "loop here is got a few extra instructions in this compare move if I take that instead go to here",
    "start": "2627910",
    "end": "2636630"
  },
  {
    "text": "and put that as get spring - we can compare that in a loop there which is",
    "start": "2637529",
    "end": "2644920"
  },
  {
    "text": "one two three four five six seven eight instructions with an inner loop here",
    "start": "2644920",
    "end": "2649960"
  },
  {
    "text": "which is small number of instructions that which is one two three four five",
    "start": "2649960",
    "end": "2657069"
  },
  {
    "text": "six instructions so I've gone from eight instructions in the inner loop to six instructions in the you loop",
    "start": "2657069",
    "end": "2662680"
  },
  {
    "text": "yes we're down at that level to seven",
    "start": "2662680",
    "end": "2676420"
  },
  {
    "text": "message and we're getting there right",
    "start": "2676420",
    "end": "2685749"
  },
  {
    "text": "okay so if I start doing this kind of thing here / - oops there damn still got",
    "start": "2685749",
    "end": "2702640"
  },
  {
    "text": "a lot of stuff going on here unlined and string length etc and I went well okay looking this I've got some system time",
    "start": "2702640",
    "end": "2708849"
  },
  {
    "text": "here maybe I can deal with that so let's have a look at some",
    "start": "2708849",
    "end": "2714119"
  },
  {
    "text": "and this is where Michael you've got to watch this room like here we go cuz then I say well look input why am i doing",
    "start": "2719200",
    "end": "2725180"
  },
  {
    "text": "always read some input I got a memory map the input so I'm now using boost memory mapped i/o for the input instead",
    "start": "2725180",
    "end": "2732260"
  },
  {
    "text": "of this one here so this there's right instead of having to do reads from things I just map the file like this",
    "start": "2732260",
    "end": "2738470"
  },
  {
    "text": "into memory and pass the data around says it's this much data it's here it's basically says it's a big array and then",
    "start": "2738470",
    "end": "2744860"
  },
  {
    "text": "you just go oops I can now do all that stuff with input and output here that's just I don't actually need to do",
    "start": "2744860",
    "end": "2752240"
  },
  {
    "text": "anything here other than right okay here's your input is your output just take bytes from their pick them up",
    "start": "2752240",
    "end": "2758180"
  },
  {
    "text": "process them send them out again that's what I got for this guy",
    "start": "2758180",
    "end": "2763510"
  },
  {
    "text": "let's get that at the final and of this one here for some a minute over ah no",
    "start": "2767350",
    "end": "2775790"
  },
  {
    "text": "yes I have to do - L I'm now using a boost library so I have to link with that",
    "start": "2775790",
    "end": "2782710"
  },
  {
    "text": "bang we're getting now we're cooking on gas yeah we're down from we're down from where are we 1.09 down to 0.8 a 5 so I",
    "start": "2791030",
    "end": "2800810"
  },
  {
    "text": "can go further than this one but the next one is if you actually look at what those things are you going at this point",
    "start": "2800810",
    "end": "2806390"
  },
  {
    "text": "it is now worth doing F unroll loops so that's my final thing since I'm spending",
    "start": "2806390",
    "end": "2812090"
  },
  {
    "text": "most of my time in there if you do the profile you'll find look it's all here let's unroll loops",
    "start": "2812090",
    "end": "2819130"
  },
  {
    "text": "yeah so we're now down to the point where that we are hitting this one really quite hard if you look at perf",
    "start": "2825750",
    "end": "2833430"
  },
  {
    "text": "stat you'll see this thing is now doing two point six seven instructions per cycle it's doing it's got almost all of",
    "start": "2833430",
    "end": "2843090"
  },
  {
    "text": "its branches correctly predicted is doing that one here and so the total time that one is I'm now processing at",
    "start": "2843090",
    "end": "2850140"
  },
  {
    "text": "about 220 megabytes a second single threaded on this laptop okay so that's",
    "start": "2850140",
    "end": "2856260"
  },
  {
    "text": "pretty much it the fine so just to say we've had some tools there seen",
    "start": "2856260",
    "end": "2862380"
  },
  {
    "text": "optimization start with a simple clear application avoid gross inefficiencies",
    "start": "2862380",
    "end": "2868500"
  },
  {
    "text": "like lots of i/o lots of relentless measuring lots of tools learn to",
    "start": "2868500",
    "end": "2874760"
  },
  {
    "text": "interpret the output of the tools and keep your code simple thank you very",
    "start": "2874760",
    "end": "2879990"
  },
  {
    "text": "much",
    "start": "2879990",
    "end": "2882170"
  },
  {
    "text": "are there any questions",
    "start": "2886440",
    "end": "2889880"
  }
]