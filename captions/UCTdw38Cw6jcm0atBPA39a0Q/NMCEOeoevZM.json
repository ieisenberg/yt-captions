[
  {
    "text": "hi thanks everybody um I'm sure want of people are still filtering in so I I'll",
    "start": "5960",
    "end": "11360"
  },
  {
    "text": "get into the housekeeping and then as you're all settling down you can ignore the boring bits uh my name is Ian Cooper",
    "start": "11360",
    "end": "18880"
  },
  {
    "text": "hopefully you're here to learn about how we do cfar in C if you're not the still",
    "start": "18880",
    "end": "24320"
  },
  {
    "text": "time to run for the exits and uh uh get a different talk instead those are my uh",
    "start": "24320",
    "end": "30599"
  },
  {
    "text": "socials it's I Cooper on hacky or Twitter actually I weirdly in a current world post text after LinkedIn who' have",
    "start": "30599",
    "end": "37960"
  },
  {
    "text": "thought that um this is me it just says I'm old I've",
    "start": "37960",
    "end": "43600"
  },
  {
    "text": "been doing messaging for quite a while um we actively use CFA at my current",
    "start": "43600",
    "end": "48640"
  },
  {
    "text": "work place employment which you call manual log um for anyone anyone I guess you're",
    "start": "48640",
    "end": "56320"
  },
  {
    "text": "all net developers otherwise probably you're lost and confused and in the wrong room uh but uh I work on a",
    "start": "56320",
    "end": "63079"
  },
  {
    "text": "messaging framework for net called brighter other people um uh and we are",
    "start": "63079",
    "end": "69280"
  },
  {
    "text": "an alternative to things like mass transit and then service bus and we support CFA we do that natively not it's",
    "start": "69280",
    "end": "75040"
  },
  {
    "text": "not kind of addition to our platform like it is in mass transit uh for this",
    "start": "75040",
    "end": "81240"
  },
  {
    "text": "talk uh if you're you can get the sample code on uh GitHub uh you can get",
    "start": "81240",
    "end": "88759"
  },
  {
    "text": "brighter on GitHub uh this presentation when actually a slightly earlier form of this is in my GitHub as well it's in a",
    "start": "88759",
    "end": "95079"
  },
  {
    "text": "PDF I will upload this current version later on today it's in a PDF rather than PowerPoint because it's too big with the",
    "start": "95079",
    "end": "101280"
  },
  {
    "text": "graphics so GitHub won't accept the actual PowerPoint file all right what we going to talk",
    "start": "101280",
    "end": "107040"
  },
  {
    "text": "about so we'll talk about CFA we'll just introduce you to what it is where it comes from how it works um we'll talk a",
    "start": "107040",
    "end": "114200"
  },
  {
    "text": "tiny bit about some how you manage a Kafka that you have running and then we'll get into Kafka and C and we'll",
    "start": "114200",
    "end": "120719"
  },
  {
    "text": "show you an example of consuming and producing a message uh using cafka then",
    "start": "120719",
    "end": "125799"
  },
  {
    "text": "we'll dig a Little Deeper talk a little bit about how Kafka Works under the hood that may help you um and then we'll talk",
    "start": "125799",
    "end": "130879"
  },
  {
    "text": "a little bit about making our producers reliable and our consumers reliable and we'll finish we're going to be tight for",
    "start": "130879",
    "end": "137440"
  },
  {
    "text": "time but we'll try and finish with a conversation about how we do sterilizers and der sterilizers in the schema",
    "start": "137440",
    "end": "143160"
  },
  {
    "text": "registry right that should give you everything you'll need to kind of begin to grow up to do catherine. net right",
    "start": "143160",
    "end": "150440"
  },
  {
    "text": "you have to probably go away afterwards and dig deeper into some of the topics all right what is",
    "start": "150440",
    "end": "156400"
  },
  {
    "text": "catha so kathka was built in about uh 2011 uh J creps uh Nea Nardi and Jun Ray",
    "start": "156400",
    "end": "163920"
  },
  {
    "text": "they all worked at LinkedIn um and they worked in the data engineering team at LinkedIn and they",
    "start": "163920",
    "end": "170360"
  },
  {
    "text": "found themselves in a situation where they had a lot of sources of data that they wanted to collate together",
    "start": "170360",
    "end": "176720"
  },
  {
    "text": "effectively in a data warehouse and they had a lot of disperate ways of doing that at LinkedIn and they felt hey there",
    "start": "176720",
    "end": "182879"
  },
  {
    "text": "must be a way we can kind of standardize this process and the result of that was CFA so looking at that diagram behind",
    "start": "182879",
    "end": "189799"
  },
  {
    "text": "you you can behind me rather you can see you have a producer and the producer is",
    "start": "189799",
    "end": "195519"
  },
  {
    "text": "effectively writing a record when it writes that record it writes it to an",
    "start": "195519",
    "end": "201120"
  },
  {
    "text": "appendonly log what we mean by that is essentially there's a file which I can",
    "start": "201120",
    "end": "206599"
  },
  {
    "text": "only I only have a right can only write at the end a penu items they can't overwrite things at some section in the",
    "start": "206599",
    "end": "213519"
  },
  {
    "text": "law makes it very fast writers read from the other end a log effectively until",
    "start": "213519",
    "end": "219200"
  },
  {
    "text": "they have caught up essentially with the uh with with the writer so the readers read from one up here up to about 15 and",
    "start": "219200",
    "end": "226159"
  },
  {
    "text": "producers writing at 15 16 17 because we have this log we create an",
    "start": "226159",
    "end": "232159"
  },
  {
    "text": "asynchronous conversation by that we mean both parties don't need to be present at the same time the producer",
    "start": "232159",
    "end": "239799"
  },
  {
    "text": "can be writing records and information to the log the consumer can be being rebooted down for maintenance releasing",
    "start": "239799",
    "end": "247319"
  },
  {
    "text": "a new version and when it spins up it just goes in effectively starts reading the log from the last place that it read",
    "start": "247319",
    "end": "253599"
  },
  {
    "text": "to and because both parties don't need to be present we call it an asynchronous conversation or more normally",
    "start": "253599",
    "end": "261120"
  },
  {
    "text": "messaging right so this is a word of doing messaging it differs from keybase",
    "start": "261120",
    "end": "266240"
  },
  {
    "text": "systems like rabbit mq sqs Etc which are Q not a stream has some different",
    "start": "266240",
    "end": "273120"
  },
  {
    "text": "characteristics okay so my producer writes a record and a record has a value",
    "start": "273120",
    "end": "281240"
  },
  {
    "text": "and a key right so the value is whatever you wanted to be a key is also pretty",
    "start": "281240",
    "end": "288080"
  },
  {
    "text": "much whatever you wanted to be but you're essentially tending to approach the key on whatever is you're observing",
    "start": "288080",
    "end": "294199"
  },
  {
    "text": "so the thing Upstream a restaurant a customer what's the key value for that",
    "start": "294199",
    "end": "299800"
  },
  {
    "text": "that so it uses TCP IP it connects to the broker and it writes it to what we call a topic so topic is just a name for",
    "start": "299800",
    "end": "307360"
  },
  {
    "text": "one of these pendon logs it's a way of us addressing it by a by a name rather",
    "start": "307360",
    "end": "313199"
  },
  {
    "text": "than some more technical you know URI Etc so we can both refer to the name so this name could be um restaurants",
    "start": "313199",
    "end": "321000"
  },
  {
    "text": "customers anything we wanted to both observe so the topic is this pend",
    "start": "321000",
    "end": "328319"
  },
  {
    "text": "log what a consumer then does is it reads from the same topic and as it reads an item it is",
    "start": "328319",
    "end": "336919"
  },
  {
    "text": "non-destructive so unlike a Q based system like rabbit mq or sqs where when you read an item you eff delete it we",
    "start": "336919",
    "end": "345319"
  },
  {
    "text": "don't we leave it in that log anybody else can come along and read that log now as well so how do we know how far",
    "start": "345319",
    "end": "352319"
  },
  {
    "text": "we've read what we do is we maintain an index saying well what items have we",
    "start": "352319",
    "end": "357919"
  },
  {
    "text": "read in that log and we store that in what's in a topic that's called consumer",
    "start": "357919",
    "end": "363720"
  },
  {
    "text": "offsets so offset just means what is our index into that particular log right the",
    "start": "363720",
    "end": "369639"
  },
  {
    "text": "offset from the beginning of the log how far have we read up to",
    "start": "369639",
    "end": "375280"
  },
  {
    "text": "now if we get another consumer that consumer will essentially track its own",
    "start": "375280",
    "end": "381400"
  },
  {
    "text": "set of offsets in the log another consumer new serve offsets in the log",
    "start": "381400",
    "end": "387280"
  },
  {
    "text": "that means unlike say a queing system you might have used in the past adding new consumers doesn't make us go",
    "start": "387280",
    "end": "395319"
  },
  {
    "text": "faster right they're all just start reading at the beginning and reading their way through the log record by",
    "start": "395319",
    "end": "401720"
  },
  {
    "text": "record through the log so what happens if we are getting people arriving work",
    "start": "401720",
    "end": "406919"
  },
  {
    "text": "arriving in that log faster than we can read it with a single consumer so Kafka has the notion of",
    "start": "406919",
    "end": "414479"
  },
  {
    "text": "partitions which you can see on this side on the right hand side of the screen right so the idea is we slice up",
    "start": "414479",
    "end": "421360"
  },
  {
    "text": "our topic into a number of partitions each partition is essentially its own",
    "start": "421360",
    "end": "427639"
  },
  {
    "text": "little mini append Only log the producer when he gets one of these records on the",
    "start": "427639",
    "end": "433360"
  },
  {
    "text": "left hand side what it's going to say to itself is okay I'm going to take that",
    "start": "433360",
    "end": "438840"
  },
  {
    "text": "key and I'm going to use that key to determine which partition to write to",
    "start": "438840",
    "end": "445280"
  },
  {
    "text": "and you could be random if you're random it's probably not what you probably not don't have a great use case for cafka um",
    "start": "445280",
    "end": "452319"
  },
  {
    "text": "but even more normally for any given observable you want to see records for",
    "start": "452319",
    "end": "458199"
  },
  {
    "text": "in sequence or in the order they were produced so you want to go to the same",
    "start": "458199",
    "end": "464159"
  },
  {
    "text": "partition so you want one two key one two3 to go to partition zero key1 124 to",
    "start": "464159",
    "end": "469840"
  },
  {
    "text": "go to partition one maybe key1 125 goes to partition Zer May key 126 goes to",
    "start": "469840",
    "end": "475240"
  },
  {
    "text": "partition two and every single time something with that key goes to the same partition and that idea is what called",
    "start": "475240",
    "end": "481720"
  },
  {
    "text": "consistent hashing so we hash the key value and make sure it always appears on the same",
    "start": "481720",
    "end": "490479"
  },
  {
    "text": "partition my consumers read not just actually a topic",
    "start": "490479",
    "end": "497319"
  },
  {
    "text": "but a partition on the topic so my consumer is going to walk",
    "start": "497319",
    "end": "502400"
  },
  {
    "text": "through that given partition recording its offsets on the",
    "start": "502400",
    "end": "507520"
  },
  {
    "text": "partition so if I have in this situation two consumers and three partitions what",
    "start": "507520",
    "end": "514200"
  },
  {
    "text": "would happen is CFA would say okay one of you is going to have one partition maybe the top one right you have one",
    "start": "514200",
    "end": "521320"
  },
  {
    "text": "partition partition zero it starts at offset zero one two three Works its way",
    "start": "521320",
    "end": "526720"
  },
  {
    "text": "through the other consumer is going to get partition one and two and it works its way reading through those marking",
    "start": "526720",
    "end": "533760"
  },
  {
    "text": "the offsets it's reaching in each partition so we just what offset 0 1 2 3 and partition one 0123 and partition two",
    "start": "533760",
    "end": "542240"
  },
  {
    "text": "we could have three consumers here one for each partition we could have four consumers",
    "start": "542240",
    "end": "549160"
  },
  {
    "text": "but one of those consumers would be doing nothing because essentially it hasn't you could only have a maximum of",
    "start": "549160",
    "end": "555600"
  },
  {
    "text": "one consumer reading a partition at a time that ensures the items will be read",
    "start": "555600",
    "end": "561160"
  },
  {
    "text": "in sequence okay so we will preserve the sequencing for a given key value by",
    "start": "561160",
    "end": "568519"
  },
  {
    "text": "writing things that to that partition so I can't have multiple consumers on the same partition so we got a spare one",
    "start": "568519",
    "end": "574839"
  },
  {
    "text": "does nothing why might I have a spare one generally for redundancy one of my consumers crashes that one will",
    "start": "574839",
    "end": "580360"
  },
  {
    "text": "immediately be reallocated one of the partitions that now that now was",
    "start": "580360",
    "end": "585880"
  },
  {
    "text": "missing now if I have multiple applications what I don't want them what",
    "start": "587640",
    "end": "594040"
  },
  {
    "text": "I want to be able to do is say okay you have a group of readers which are all essentially going to agree that that you",
    "start": "594040",
    "end": "601320"
  },
  {
    "text": "are reading through the partitions on a topic and you are moving your offsets along in sequence but this other app may",
    "start": "601320",
    "end": "608160"
  },
  {
    "text": "want to start from zero and reading its own set of partitions so what we do is we give our",
    "start": "608160",
    "end": "613640"
  },
  {
    "text": "groups of consumers a group ID and any consumer in that group ID will use the",
    "start": "613640",
    "end": "622040"
  },
  {
    "text": "offsets for the partitions we have written for that group ID new group ID",
    "start": "622040",
    "end": "627120"
  },
  {
    "text": "new set of offsets into that of for those partitions right all right so let's try and recap",
    "start": "627120",
    "end": "634360"
  },
  {
    "text": "all of that because it's quite a lot to take in early on in the talk over on the left hand side I have a",
    "start": "634360",
    "end": "641200"
  },
  {
    "text": "producer I want to write records record is really a CFA name for a message",
    "start": "641200",
    "end": "646279"
  },
  {
    "text": "you'll see message used as well cfa's documentation changes over time people use the ter interchangeably so I want to",
    "start": "646279",
    "end": "652480"
  },
  {
    "text": "write a record or I want to send a message so that message consists of a value and a key the value is the data I",
    "start": "652480",
    "end": "659040"
  },
  {
    "text": "want to exchange with you a key as a way identifying the observable it's coming from right and typically I want to write",
    "start": "659040",
    "end": "666240"
  },
  {
    "text": "them so that all of the changes to a given observable 1 2 3 1 124 125 are in",
    "start": "666240",
    "end": "672680"
  },
  {
    "text": "sequence so I talked to my cafka broker and I say I want to write to this topic",
    "start": "672680",
    "end": "677720"
  },
  {
    "text": "and essentially what I do is use an algorithm usually consistent hashing to figure out which partition I'm writing",
    "start": "677720",
    "end": "683600"
  },
  {
    "text": "to so one 23 goes to zero one 124 goes to one and let's say s 125 goes two",
    "start": "683600",
    "end": "691079"
  },
  {
    "text": "right the consumers for a given group parcel out those partitions",
    "start": "691079",
    "end": "697639"
  },
  {
    "text": "amongst themselves so group Alpha here has got partition one of the consumers has got partition zero other one's got",
    "start": "697639",
    "end": "704839"
  },
  {
    "text": "one and two and they will read through them in sequence and as they read records from the basically that topic",
    "start": "704839",
    "end": "711399"
  },
  {
    "text": "they will write the offsets for the records they have written to a special cafka topic so that if they crash",
    "start": "711399",
    "end": "719760"
  },
  {
    "text": "then essentially the thing that comes up can say where were we and resume reading from that point okay or if I need to",
    "start": "719760",
    "end": "727519"
  },
  {
    "text": "scale out the number of consumers because maybe I only had one reading because we were a quiet period and now",
    "start": "727519",
    "end": "733880"
  },
  {
    "text": "i' got I want to go up to three because we're in a busy period what happens is partitioners can get reallocated and so",
    "start": "733880",
    "end": "740440"
  },
  {
    "text": "the new consumer coming in saying I can do some work now need to know the last point we reach so it will read read it",
    "start": "740440",
    "end": "746880"
  },
  {
    "text": "from that consumer offsets table okay and I can have multiple groups all",
    "start": "746880",
    "end": "754279"
  },
  {
    "text": "of which maintain their own offsets for each partition and that is how CFA works",
    "start": "754279",
    "end": "761000"
  },
  {
    "text": "right that's the bit you need to Gro um and yeah it's very different to a Q",
    "start": "761000",
    "end": "766720"
  },
  {
    "text": "based system which is when you read is destructive and takes takes items off the que so nobody else can read them it",
    "start": "766720",
    "end": "773360"
  },
  {
    "text": "is very good particularly for Pub sub style scenarios where essentially you",
    "start": "773360",
    "end": "778800"
  },
  {
    "text": "want to say I want to broadcast this and I want lots of people to read it because",
    "start": "778800",
    "end": "784440"
  },
  {
    "text": "it tends to basically only have the one copy and it's very fast right it's less",
    "start": "784440",
    "end": "790160"
  },
  {
    "text": "good for I want to hand you a task and no one else should do",
    "start": "790160",
    "end": "794839"
  },
  {
    "text": "it all right we're done no okay um right what about managing",
    "start": "795720",
    "end": "800959"
  },
  {
    "text": "kfka um generally you can use both CLI tools and uis to investigate stuff",
    "start": "800959",
    "end": "807079"
  },
  {
    "text": "normally when you're effectively got a production system you you'll be using CLI tools a lot so CFA comes with a set",
    "start": "807079",
    "end": "814320"
  },
  {
    "text": "of CLI tools uh you can see that on the left hand side it's basically in a bin file wherever you install Kafka there's",
    "start": "814320",
    "end": "820680"
  },
  {
    "text": "a whole range of little utilities like create or delete topics um you get little tools to actually create on the",
    "start": "820680",
    "end": "827440"
  },
  {
    "text": "Fly producers and consumers the manage offsets and many more right if you",
    "start": "827440",
    "end": "833440"
  },
  {
    "text": "prefer to work with the command line to just investigate CFA or you want to do some very simple local kind of like",
    "start": "833440",
    "end": "840320"
  },
  {
    "text": "tools to look around what's in that topic kind of get stuff out there's a great tool called Kat uh so Kat essentially used to be",
    "start": "840320",
    "end": "848279"
  },
  {
    "text": "called cfat um is a described as a generic non- jvm producer and consumer",
    "start": "848279",
    "end": "853720"
  },
  {
    "text": "what that lets you do is read and write from given topics from the command line",
    "start": "853720",
    "end": "858800"
  },
  {
    "text": "very useful particular if you use it alongside tools like JQ if you have kind of Json payloads to kind of like play",
    "start": "858800",
    "end": "865079"
  },
  {
    "text": "with what's actually happening in your environment uh cfar also has a range of uis this one",
    "start": "865079",
    "end": "871600"
  },
  {
    "text": "up here is cfy UI you'll see CFA UI in a few demos later um but there's AKQ CFA",
    "start": "871600",
    "end": "878399"
  },
  {
    "text": "drop lenses and CMAC are all basically open source ones and there are paid ones from confluent uh and conductor so a",
    "start": "878399",
    "end": "885720"
  },
  {
    "text": "whole range of uis and they'll let you see topics investigate messages so if you rather work with a UI you're still",
    "start": "885720",
    "end": "893560"
  },
  {
    "text": "supported all right let's get into the me bit you probably care about is if I'm a cell developer what way",
    "start": "893560",
    "end": "900040"
  },
  {
    "text": "do um so we're going to look at this um uh we're going to build an app and we're",
    "start": "900040",
    "end": "905199"
  },
  {
    "text": "going to use an app to do some transmogrification anyone in the room know who calv and Hobs",
    "start": "905199",
    "end": "911199"
  },
  {
    "text": "are Vanishing in smaller numbers and numbers of people I I I feel old whenever I ask Calvin Hobs is an old um",
    "start": "911199",
    "end": "918560"
  },
  {
    "text": "newspaper comic strip cartoon very I I used to like it um and Calvin who's a",
    "start": "918560",
    "end": "924000"
  },
  {
    "text": "small child and his cuddly tiger Hobs who is kind of like a figur in imagination have lots of Adventures one",
    "start": "924000",
    "end": "931279"
  },
  {
    "text": "of them is C Kelvin has a cardboard box which is WR has trans mography written on it with a little dial and Calvin can",
    "start": "931279",
    "end": "938120"
  },
  {
    "text": "transmogrify himself into things like eels worms baboons and tigers so rather",
    "start": "938120",
    "end": "944079"
  },
  {
    "text": "than hello world we're going to build a transmogrifier we're going to essentially have a producer application",
    "start": "944079",
    "end": "949600"
  },
  {
    "text": "that says hey what do you want to be transformed into get some settings of us sends it by cfus the transmogrifier",
    "start": "949600",
    "end": "956560"
  },
  {
    "text": "which will transform Calvin uh and changement or something else right I got",
    "start": "956560",
    "end": "962000"
  },
  {
    "text": "bored with Hello World all right so how do we produce a message in CFA so this dispatch application we'll",
    "start": "962000",
    "end": "969639"
  },
  {
    "text": "see all the code later I just want to walk through bits of the code in the slides you can see here essentially",
    "start": "969639",
    "end": "975160"
  },
  {
    "text": "we've got a private readon producer we get that from the so but",
    "start": "975160",
    "end": "980360"
  },
  {
    "text": "generally the most of the libraries from net here are Confluence uh net libraries we got a producer Builder and we say to",
    "start": "980360",
    "end": "987199"
  },
  {
    "text": "it build us a producer so the producer is the thing we're going to use to send the record and we pass it some config",
    "start": "987199",
    "end": "995680"
  },
  {
    "text": "okay and the confy that we want to send what it has to tell it tell basically",
    "start": "995680",
    "end": "1001279"
  },
  {
    "text": "the producer is where do I find CFA right so typically kfra is on it's",
    "start": "1001279",
    "end": "1007480"
  },
  {
    "text": "Port 9092 here it's on Local Host it's called a bootstrap server because generally you have you're talking to a",
    "start": "1007480",
    "end": "1013639"
  },
  {
    "text": "Kafka cluster that cluster will consist of multiple Brokers or nodes if you prefer right so you need to pick one of",
    "start": "1013639",
    "end": "1020720"
  },
  {
    "text": "them and say go and talk to this one it will then get loads of metadata back the SDK will handle all that for you and",
    "start": "1020720",
    "end": "1026959"
  },
  {
    "text": "better to set up a producer okay so the producer has a type you can",
    "start": "1026959",
    "end": "1032438"
  },
  {
    "text": "see here it says string string that is the key and the value there's a wide",
    "start": "1032439",
    "end": "1037678"
  },
  {
    "text": "range of options you can choose here right generally It's A Primitive type basically for the key and then it can be",
    "start": "1037679",
    "end": "1043798"
  },
  {
    "text": "a more complex type even at your own class for basically the actual value type that you want to set",
    "start": "1043799",
    "end": "1049960"
  },
  {
    "text": "um interesting enough brighter under the hood which I work we actually use a bite array so it can be generic and ship",
    "start": "1049960",
    "end": "1056080"
  },
  {
    "text": "anything you want but you can if you like if you're writing your own code choose to use your actual Class Type we'll see that at the end with the with",
    "start": "1056080",
    "end": "1062320"
  },
  {
    "text": "the schema generation so having built a producer",
    "start": "1062320",
    "end": "1067440"
  },
  {
    "text": "saying the key and value string string I can then send a message right a record",
    "start": "1067440",
    "end": "1073160"
  },
  {
    "text": "and this message is basically sent to a topic you can see the string there that's the name of basically the uh",
    "start": "1073160",
    "end": "1079360"
  },
  {
    "text": "where we're effectively going to Pender our record and you can see here same it's the same generic type string string",
    "start": "1079360",
    "end": "1086280"
  },
  {
    "text": "and we set a key and we set a value out of our transmogrification settings okay",
    "start": "1086280",
    "end": "1091600"
  },
  {
    "text": "and at the end we want to flush so the producer that confluent gives you is",
    "start": "1091600",
    "end": "1098080"
  },
  {
    "text": "essentially asynchronous and it doesn't say asyn I know it hasn't got a weight on it so you might be a bit confused so",
    "start": "1098080",
    "end": "1104400"
  },
  {
    "text": "what happens is when I call Produce it's placed on an internal buffer and a thread reads from that buffer and",
    "start": "1104400",
    "end": "1111320"
  },
  {
    "text": "writes records to CFA so the flash statement is important",
    "start": "1111320",
    "end": "1117000"
  },
  {
    "text": "because it says you might still have items in the buffer please can you essentially flush",
    "start": "1117000",
    "end": "1123320"
  },
  {
    "text": "all those out before I shut down now that flush method will actually return an integer to you so you can actually",
    "start": "1123320",
    "end": "1129320"
  },
  {
    "text": "spin in the loop until it gets to zero and make sure everything is flushed I'm not doing that in this case because I'm",
    "start": "1129320",
    "end": "1134360"
  },
  {
    "text": "only going to be sending one item at a time right and at the end like all resources we dispose of our producer",
    "start": "1134360",
    "end": "1141080"
  },
  {
    "text": "right what about consuming a message so a little bit of a dot dot dot in the code here just so I can break it up to",
    "start": "1141080",
    "end": "1147000"
  },
  {
    "text": "se to you easily but you can see similarly we have a consumer Builder that basically we're going to write to",
    "start": "1147000",
    "end": "1153559"
  },
  {
    "text": "consume from a topic so there's a topic here there basically again the bootstrap",
    "start": "1153559",
    "end": "1158960"
  },
  {
    "text": "servers where is Kafka we also have our group ID remember we are a consumer so",
    "start": "1158960",
    "end": "1165440"
  },
  {
    "text": "we want to live in a consumer group right so we're just going to pass it an ID and say that is our group it's",
    "start": "1165440",
    "end": "1171480"
  },
  {
    "text": "all it is it's a stream right um when you're working with CF one of the things is if I want to reset and start reading",
    "start": "1171480",
    "end": "1177520"
  },
  {
    "text": "again there are various tools that let you do that most to just basically add three or four or five to our group",
    "start": "1177520",
    "end": "1182799"
  },
  {
    "text": "number and reset everything we cheat right um because we're lazy and and calling the command line scripts to",
    "start": "1182799",
    "end": "1188919"
  },
  {
    "text": "reset the topic count it's a pain we create consumer again it's a consumer Builder pass it to config again it's a",
    "start": "1188919",
    "end": "1195559"
  },
  {
    "text": "matching type of string string right so they you be matching on both sides because I'm saying why I expect to get",
    "start": "1195559",
    "end": "1201440"
  },
  {
    "text": "off that CER topic as a string key and a string value okay then in our method what we're",
    "start": "1201440",
    "end": "1207880"
  },
  {
    "text": "going to do is we want to be a bit bit generic run run method for the consumer and it's going to say I need to have a way of transforming the message reading",
    "start": "1207880",
    "end": "1215480"
  },
  {
    "text": "this string content and doing something useful with it I understand and I want to have a an action that I perform a",
    "start": "1215480",
    "end": "1221480"
  },
  {
    "text": "Handler right what's that going to look like all right so in a big tril loop",
    "start": "1221480",
    "end": "1226880"
  },
  {
    "text": "we're going to say subscribe to the topic right and then we're going to say consumer result so CFA the conf library",
    "start": "1226880",
    "end": "1234960"
  },
  {
    "text": "under the hood will buffer reads for you but we just want to get one at a time in a loop we're going to do a big while",
    "start": "1234960",
    "end": "1241679"
  },
  {
    "text": "loop we just going to go spin around until we decide to effectively um cancel so that cancellation token will help us",
    "start": "1241679",
    "end": "1248159"
  },
  {
    "text": "cancel our way out of that wild we'll throw an exception basically uh so if we eof what we're",
    "start": "1248159",
    "end": "1254720"
  },
  {
    "text": "saying is have we reached the point where the appending is happening we've run out of Records to read if we",
    "start": "1254720",
    "end": "1263039"
  },
  {
    "text": "haven't then essentially we can do the translation we can say run the translator function and then the hand",
    "start": "1263039",
    "end": "1269919"
  },
  {
    "text": "function if we have run out things to read we'll just delay and keep spinning for a while and again we close the",
    "start": "1269919",
    "end": "1275799"
  },
  {
    "text": "consumer at the end all right topic pump it an endless loop read next result",
    "start": "1275799",
    "end": "1282039"
  },
  {
    "text": "translate the message handle the message tidy up when we're done right overall",
    "start": "1282039",
    "end": "1287720"
  },
  {
    "text": "those two bits slot together so it's a bit harder to read but just we just seeing the code that TR Loop is part of",
    "start": "1287720",
    "end": "1293000"
  },
  {
    "text": "the big dispatch method all right and to use our consumer effectively as I say we're going to pass",
    "start": "1293000",
    "end": "1299320"
  },
  {
    "text": "in our config essentially and our topic right but the main bit of code you",
    "start": "1299320",
    "end": "1305799"
  },
  {
    "text": "want to see is this so we create an instance of our message pump and essentially we pass in a method that's",
    "start": "1305799",
    "end": "1311039"
  },
  {
    "text": "going to effectively uh translate into a type well we know our message when we've",
    "start": "1311039",
    "end": "1316120"
  },
  {
    "text": "written it we put the key which effectively the name of the kind of transformation we're performing um and",
    "start": "1316120",
    "end": "1322279"
  },
  {
    "text": "then the settings what transformation we want basically into our class and",
    "start": "1322279",
    "end": "1327320"
  },
  {
    "text": "effectively our handle method will'll get past that particular object the transmogrification and we'll split some",
    "start": "1327320",
    "end": "1334080"
  },
  {
    "text": "stuff out to the um command line we're using Spectre do console which is a nice",
    "start": "1334080",
    "end": "1339320"
  },
  {
    "text": "little command line with Library if you've not already seen it this talk is not about Spector do console but it it",
    "start": "1339320",
    "end": "1344440"
  },
  {
    "text": "makes pretty output all right that's all that code can I run together all right let's do a demo of that so you can see",
    "start": "1344440",
    "end": "1350760"
  },
  {
    "text": "actually happening all right which everything",
    "start": "1350760",
    "end": "1357360"
  },
  {
    "text": "right just so you can see make sure you believe or",
    "start": "1357360",
    "end": "1363559"
  },
  {
    "text": "no things up my sleeve I will increase the size in a",
    "start": "1363559",
    "end": "1368720"
  },
  {
    "text": "second where is the producer and the dispatcher that big enough at the",
    "start": "1368720",
    "end": "1375720"
  },
  {
    "text": "back cool yep there is effectively our code saying build the producer do the",
    "start": "1375720",
    "end": "1381000"
  },
  {
    "text": "producer the message and here is our code over here which essentially",
    "start": "1381000",
    "end": "1387159"
  },
  {
    "text": "says here is our message pump right run it subscribe consume there",
    "start": "1387159",
    "end": "1393720"
  },
  {
    "text": "are various that's our program code saying hey create a message pump and then basically translate it and then",
    "start": "1393720",
    "end": "1400679"
  },
  {
    "text": "actually go in and basically do some work with it right all this stuff you can go look at the code later is all",
    "start": "1400679",
    "end": "1406320"
  },
  {
    "text": "just Spectre do consult stuff to make it look pry uh here we go let's try and find",
    "start": "1406320",
    "end": "1413279"
  },
  {
    "text": "demo two rather than that one all",
    "start": "1413279",
    "end": "1419158"
  },
  {
    "text": "right so um just show you it's asnc",
    "start": "1420240",
    "end": "1425760"
  },
  {
    "text": "partially we'll just run the producer so I will be",
    "start": "1426000",
    "end": "1431679"
  },
  {
    "text": "Calvin and I Calvin wants to be an eel right and it's saying Calvin",
    "start": "1431679",
    "end": "1438039"
  },
  {
    "text": "basically enter the trans mography and you'll come out as an eel we have this is basically the UI for Apache Kafka you",
    "start": "1438039",
    "end": "1445200"
  },
  {
    "text": "can see it's telling me I've got a broker with only one node because I'm running it in Docker compos in the",
    "start": "1445200",
    "end": "1450480"
  },
  {
    "text": "background um and you can see effectively I have this trans modication I've got nine messages because I needed",
    "start": "1450480",
    "end": "1456320"
  },
  {
    "text": "to check the demo outside afterwards and I worried that if I reset everything to zero I I Doom my own demo so imagine the",
    "start": "1456320",
    "end": "1464320"
  },
  {
    "text": "count starts from nine up right um",
    "start": "1464320",
    "end": "1469760"
  },
  {
    "text": "you interesting enough you'll be able to see that we will we will start consuming from that offset right you can see",
    "start": "1469760",
    "end": "1475039"
  },
  {
    "text": "messages on The Wire right my previous ones were Ian this one's going to be Calvin and it's saying Calvin wants to",
    "start": "1475039",
    "end": "1481240"
  },
  {
    "text": "be transformed into an e ones I did for my test so you could see the test ones but not me and it's saying effectively",
    "start": "1481240",
    "end": "1487640"
  },
  {
    "text": "oh I've got a consumer but yeah to cool all right so what we'll do then is we",
    "start": "1487640",
    "end": "1493600"
  },
  {
    "text": "will consume that so you can see it's an asynchronous conversation because I'm taking my own sweet time about actually",
    "start": "1493600",
    "end": "1499880"
  },
  {
    "text": "running the next bet so in other words it's just sitting happily in that",
    "start": "1499880",
    "end": "1505640"
  },
  {
    "text": "log and I will say begin my transformation right and Calvin has been",
    "start": "1505640",
    "end": "1510799"
  },
  {
    "text": "transformed successfully into an eel go",
    "start": "1510799",
    "end": "1516760"
  },
  {
    "text": "Calin um okay that is",
    "start": "1518600",
    "end": "1525559"
  },
  {
    "text": "the basics of sending or producing a m message what does calul like under the",
    "start": "1525559",
    "end": "1531200"
  },
  {
    "text": "hood then um so essentially you tend to deploy clfa in a a cluster with a number",
    "start": "1531200",
    "end": "1537120"
  },
  {
    "text": "of nodes because one of anything is bad and we don't want it to fail and lose everything typically it's an odd number",
    "start": "1537120",
    "end": "1543559"
  },
  {
    "text": "and we'll come back to that the reason is that why but like three five and what happens is your partition for a given",
    "start": "1543559",
    "end": "1551600"
  },
  {
    "text": "topic it writes to one of the nodes which is the leader and then from the leader it is",
    "start": "1551600",
    "end": "1558559"
  },
  {
    "text": "copied to to to the other nodes in the cluster so if I lose one of my nodes",
    "start": "1558559",
    "end": "1565559"
  },
  {
    "text": "hopefully one of my fer nodes will have all of the work that I needed to write",
    "start": "1565559",
    "end": "1572000"
  },
  {
    "text": "okay so we only ever right to the leader before about cafka 2.3 you only ever",
    "start": "1572000",
    "end": "1579679"
  },
  {
    "text": "read from the leader as well the follows are just there um to let you essentially have a",
    "start": "1579679",
    "end": "1586240"
  },
  {
    "text": "resilience in event of failure but from 2.3 on we can read from",
    "start": "1586240",
    "end": "1593640"
  },
  {
    "text": "followers one of them is one of these servers is the bootstrap server which is effectively where I read metadata from",
    "start": "1595960",
    "end": "1602919"
  },
  {
    "text": "we saw that earlier so I connect to one of the servers and what my underlying SDK code you don't have to deal with",
    "start": "1602919",
    "end": "1608399"
  },
  {
    "text": "says is which one of these servers is the leader on when I want to do a write",
    "start": "1608399",
    "end": "1614200"
  },
  {
    "text": "or which servers can I read from when I want to do a read right and that",
    "start": "1614200",
    "end": "1619279"
  },
  {
    "text": "information comes back from Kafka so it would tell that you don't have to see it or deal with it it's happening under the",
    "start": "1619279",
    "end": "1626600"
  },
  {
    "text": "hood so uh who decides which uh node in our cluster",
    "start": "1627120",
    "end": "1634320"
  },
  {
    "text": "which broker effectively has the leader so one of",
    "start": "1634320",
    "end": "1640200"
  },
  {
    "text": "our uh brokers in a cluster is a called a controller and the controller's job is",
    "start": "1640200",
    "end": "1646880"
  },
  {
    "text": "to say oh I've got a new topic you're going to be the leader oh the leader",
    "start": "1646880",
    "end": "1652080"
  },
  {
    "text": "crashed you're going to be the leader and it chooses to decide who is the",
    "start": "1652080",
    "end": "1657200"
  },
  {
    "text": "leader right so who elects one particular node in your",
    "start": "1657200",
    "end": "1664600"
  },
  {
    "text": "cluster as being the leader so this is this kind of problem",
    "start": "1664600",
    "end": "1669720"
  },
  {
    "text": "is why zookeeper appears quite often in Kafka so you may it may not be aware",
    "start": "1669720",
    "end": "1675000"
  },
  {
    "text": "quite often Kafka clusters also have a zookeeper cluster which makes life a little more complicated so zookeeper",
    "start": "1675000",
    "end": "1681320"
  },
  {
    "text": "effectively provides distributed kind of Primitives including locks so what",
    "start": "1681320",
    "end": "1687120"
  },
  {
    "text": "happens is when your cfao CFA cluster starts up the individual broker in the",
    "start": "1687120",
    "end": "1693679"
  },
  {
    "text": "cluster try and essentially write an ephemeral Zed node in Zookeeper what the",
    "start": "1693679",
    "end": "1699880"
  },
  {
    "text": "hell does that mean what it means effectively is they say Okay so the way that the nodes work in isuku is a bit",
    "start": "1699880",
    "end": "1706200"
  },
  {
    "text": "like a a file system directory with slashes in between one of them says I want to be root so that thing basically says I want",
    "start": "1706200",
    "end": "1712919"
  },
  {
    "text": "to be every thing says I want to be root and it's called an ephemeral node because one of you winds becomes becomes",
    "start": "1712919",
    "end": "1719679"
  },
  {
    "text": "a root as long as you are connected if you disconnect from The",
    "start": "1719679",
    "end": "1724799"
  },
  {
    "text": "Zookeeper cluster the Assumption being you've crashed or gone down and essentially the ephemeral node you",
    "start": "1724799",
    "end": "1730640"
  },
  {
    "text": "created disappears one of the others that's constantly trying to create the Epal node wins and now it's got the root",
    "start": "1730640",
    "end": "1738159"
  },
  {
    "text": "and therefore it becomes the controller of the cluster so essentially the way we do",
    "start": "1738159",
    "end": "1744360"
  },
  {
    "text": "leader election is to effectively win at creating the root node in a zookeeper",
    "start": "1744360",
    "end": "1751279"
  },
  {
    "text": "Ensemble that's all a little complicated so from about version 3.3 I",
    "start": "1751279",
    "end": "1757159"
  },
  {
    "text": "think Kafka basically now runs without zookeeper and to do that essentially it",
    "start": "1757159",
    "end": "1763799"
  },
  {
    "text": "has an implementation of the consensus algorithm called raft gft or craft for short software",
    "start": "1763799",
    "end": "1771559"
  },
  {
    "text": "Engineers aren't we great um and crafts it basically the the the brokers in the",
    "start": "1771559",
    "end": "1777720"
  },
  {
    "text": "cluster decide amongst themselves who is going to be essentially the",
    "start": "1777720",
    "end": "1783880"
  },
  {
    "text": "controller now or effectively the the leader now what happens is you can",
    "start": "1783880",
    "end": "1791799"
  },
  {
    "text": "declare for any one of your uh nodes in the cluster what kind of roles it can",
    "start": "1791799",
    "end": "1799000"
  },
  {
    "text": "fulfill uh it can be a controller which means it can essentially participate in this election to be the thing that",
    "start": "1799000",
    "end": "1805240"
  },
  {
    "text": "becomes the leader and decides what partitions get allocated and where it can be a broker which means it stores",
    "start": "1805240",
    "end": "1811760"
  },
  {
    "text": "data or it can do both and the advantages are mainly around performance",
    "start": "1811760",
    "end": "1817080"
  },
  {
    "text": "particularly in larger clusters so when a producer",
    "start": "1817080",
    "end": "1823919"
  },
  {
    "text": "wres it has to decide how long is it going to wait for",
    "start": "1823919",
    "end": "1830760"
  },
  {
    "text": "Kafka to do the work of replicating from the leader partition to",
    "start": "1830760",
    "end": "1836919"
  },
  {
    "text": "the followers now I can choose to be very fast by setting x equals zero and that",
    "start": "1836919",
    "end": "1845000"
  },
  {
    "text": "means I'm not even going to guarantee to you that they actually successfully wrote to the",
    "start": "1845000",
    "end": "1850720"
  },
  {
    "text": "leader uh I got the message maybe I'll succeed at writing to the leader x",
    "start": "1850720",
    "end": "1856320"
  },
  {
    "text": "equals 0 says acknowledgements equal zero says I don't really care about",
    "start": "1856320",
    "end": "1862440"
  },
  {
    "text": "safety I just care about speed right foot on the floor black windows let's go",
    "start": "1862440",
    "end": "1869279"
  },
  {
    "text": "for it all right generally it means you'll get message loss but that may be okay right so we do things like track",
    "start": "1869279",
    "end": "1876799"
  },
  {
    "text": "couriers where we can afford to lose some messages right ax equals 1 says only write it to",
    "start": "1876799",
    "end": "1885080"
  },
  {
    "text": "the leader I'm not you're going to propagate it for",
    "start": "1885080",
    "end": "1890320"
  },
  {
    "text": "me I'm not going to wait for that that's a lot it's a lot better",
    "start": "1890320",
    "end": "1895799"
  },
  {
    "text": "because at least I know it's written to one of the nodes in the cluster and my expectation is hey probably the others",
    "start": "1895799",
    "end": "1902200"
  },
  {
    "text": "will get it so it's pretty fast the danger is my leader crashes and a",
    "start": "1902200",
    "end": "1908399"
  },
  {
    "text": "follower gets elected as the leader and it hasn't yet received all of the update all of the",
    "start": "1908399",
    "end": "1914840"
  },
  {
    "text": "updates from the leader so it's behind which results in what we call message",
    "start": "1914840",
    "end": "1919880"
  },
  {
    "text": "loss you won't now have those records that went missing in the time in",
    "start": "1919880",
    "end": "1925360"
  },
  {
    "text": "between it's a compromise between speed and",
    "start": "1925360",
    "end": "1930919"
  },
  {
    "text": "safety x equals all is what you do if you can't accept message loss right the",
    "start": "1930919",
    "end": "1937880"
  },
  {
    "text": "producer says I'm going to write to the leader and I'm going to wait till it's",
    "start": "1937880",
    "end": "1942919"
  },
  {
    "text": "been copied to all of the nodes in the cluster and then I will treat it as",
    "start": "1942919",
    "end": "1950080"
  },
  {
    "text": "acknowledged sometimes a broker stops being able to be reached in",
    "start": "1953200",
    "end": "1959200"
  },
  {
    "text": "a decent enough time frame way the Kafka measures this is says how long did it",
    "start": "1959200",
    "end": "1964679"
  },
  {
    "text": "take you to catch up with the leader if that gets too slow it may just",
    "start": "1964679",
    "end": "1972080"
  },
  {
    "text": "be it's stopped right but if it gets too slow or it just stopped it becomes what",
    "start": "1972080",
    "end": "1977639"
  },
  {
    "text": "we call call an out of sync replica CFA says that one's broken when we do producer equals all we",
    "start": "1977639",
    "end": "1985799"
  },
  {
    "text": "won't include that one and no one should read from it either I'll alert basically",
    "start": "1985799",
    "end": "1991279"
  },
  {
    "text": "you know an operator someone needs to fix that that particular node in the cluster and bring it back online let it",
    "start": "1991279",
    "end": "1996760"
  },
  {
    "text": "catch up all right so how do we how do we take",
    "start": "1996760",
    "end": "2003120"
  },
  {
    "text": "advantage of this information when we are writing our producers in C okay so the first thing is when we",
    "start": "2003120",
    "end": "2009840"
  },
  {
    "text": "configure cfus so that producer.com food that we only had bootstrap in you can see that little box in the middle we",
    "start": "2009840",
    "end": "2016039"
  },
  {
    "text": "there's some other things we can write so we can tell the number of acts so here you can see we're saying act equal",
    "start": "2016039",
    "end": "2021120"
  },
  {
    "text": "to all to be safe we can also don't forget that basically caar is going to",
    "start": "2021120",
    "end": "2026240"
  },
  {
    "text": "use a buffer with a little uh with a thread reading from that buffer to actually write for us we can say hey in",
    "start": "2026240",
    "end": "2032760"
  },
  {
    "text": "the event that essentially you ask for ACT equals all but the response you get",
    "start": "2032760",
    "end": "2038440"
  },
  {
    "text": "back says we didn't write that or you don't get a response at all retry so it will retry under the hood",
    "start": "2038440",
    "end": "2044600"
  },
  {
    "text": "for you you can tell it how many times to retry and you can tell it how to back off between retries so what kind of Gap",
    "start": "2044600",
    "end": "2051200"
  },
  {
    "text": "are you going to give to event overwhelming the server you can also tell it how many",
    "start": "2051200",
    "end": "2056599"
  },
  {
    "text": "inflight requests can I have now inflight requests are how many threads",
    "start": "2056599",
    "end": "2063878"
  },
  {
    "text": "can be reading that buffer at one time if you set it to anything other than",
    "start": "2063879",
    "end": "2071320"
  },
  {
    "text": "one you will risk losing the sequence because things may get written",
    "start": "2071320",
    "end": "2077599"
  },
  {
    "text": "from the buffer out of order so if you require ordering you set that to",
    "start": "2077599",
    "end": "2084599"
  },
  {
    "text": "one there's a there's a work around for that but I'm going to tell you that in a second all",
    "start": "2084599",
    "end": "2089919"
  },
  {
    "text": "right so this code here reliably produces a message in C you can see a",
    "start": "2089919",
    "end": "2096839"
  },
  {
    "text": "couple of things that doing here the first is essentially I'm setting up some",
    "start": "2096839",
    "end": "2102119"
  },
  {
    "text": "uh error handling and some log handling so I can kind of be informed but the next thing I'm doing is setting the",
    "start": "2102119",
    "end": "2108000"
  },
  {
    "text": "producer. config with some more elements so I'm saying I actually should",
    "start": "2108000",
    "end": "2113680"
  },
  {
    "text": "say a equals all but you can actually worth you seeing x equals leader there right so I can tell the number of a I",
    "start": "2113680",
    "end": "2119760"
  },
  {
    "text": "want x equals leader is this a equals one ax equals all would be truly safe uh",
    "start": "2119760",
    "end": "2125280"
  },
  {
    "text": "message send Max retries saying I want to retry three times I'm second only have one in Flight right you'll see Ena",
    "start": "2125280",
    "end": "2131800"
  },
  {
    "text": "item potencies commented out there we'll come back to that in a second",
    "start": "2131800",
    "end": "2137040"
  },
  {
    "text": "um turn on enable delivery reports equals true so remember I told you that",
    "start": "2137040",
    "end": "2142720"
  },
  {
    "text": "produces a SN right from a buffer so how do we know",
    "start": "2142720",
    "end": "2148480"
  },
  {
    "text": "if we just call Produce and our code moves on whether we successfully sent something to cafka so delivery reports",
    "start": "2148480",
    "end": "2156440"
  },
  {
    "text": "will tell us and we'll see how that works in just a second okay so you can",
    "start": "2156440",
    "end": "2161920"
  },
  {
    "text": "see here what we're going to do when we produce we're going to pass a Handler in",
    "start": "2161920",
    "end": "2167400"
  },
  {
    "text": "that third parameter for our delivery report and you can see that's up above",
    "start": "2167400",
    "end": "2172720"
  },
  {
    "text": "the action delivery report so it's a call back where we will say we will",
    "start": "2172720",
    "end": "2178000"
  },
  {
    "text": "basically receive the response from you telling us whether or not you wrote that",
    "start": "2178000",
    "end": "2184160"
  },
  {
    "text": "record what are you going to do with that right so we're going to fake what you probably need to do a little bit but",
    "start": "2184160",
    "end": "2190599"
  },
  {
    "text": "here we got a kind of fake in memory outbox generally need a persistent one right I need a sweeper for it well we're",
    "start": "2190599",
    "end": "2196520"
  },
  {
    "text": "going to say okay when we receive the delivery report we'll mark the status of this item is sent what we do bit further",
    "start": "2196520",
    "end": "2203839"
  },
  {
    "text": "down on line 19 as we say before we when we have a message we'll put it in the outbox the outbox says this is something",
    "start": "2203839",
    "end": "2210880"
  },
  {
    "text": "we've intended to send and when only Market a sent when the delivery report comes back from afka",
    "start": "2210880",
    "end": "2218040"
  },
  {
    "text": "saying hey this was done typically in Frameworks that support outboxes a background worker",
    "start": "2218040",
    "end": "2226040"
  },
  {
    "text": "thread then basically spins saying hey are there any messages that were inserted in quite a while ago and I",
    "start": "2226040",
    "end": "2233160"
  },
  {
    "text": "haven't seen a delivery report for then I will resend it all right but you're",
    "start": "2233160",
    "end": "2239240"
  },
  {
    "text": "going to have to figure out what am I going to do on the failure to Sender a delivery report and some kind of outbox is typically the strategy will end up",
    "start": "2239240",
    "end": "2245760"
  },
  {
    "text": "using all right and this is reliably producing",
    "start": "2245760",
    "end": "2252240"
  },
  {
    "text": "message that's just basically a summation of all that code so you can see it's all in one Big Blob all",
    "start": "2252240",
    "end": "2258839"
  },
  {
    "text": "right there is an async uh version of produce prod it's",
    "start": "2258839",
    "end": "2265560"
  },
  {
    "text": "basically producer produce async and you can await it so rather than writing effectively a",
    "start": "2265560",
    "end": "2271760"
  },
  {
    "text": "callback you can essentially say okay just give me the report as a actually",
    "start": "2271760",
    "end": "2277880"
  },
  {
    "text": "the return value from calling a weight produced async you might think to yourself this is going to be better um",
    "start": "2277880",
    "end": "2284960"
  },
  {
    "text": "because I don't have the right callbacks I'm using a syn out weight that's all good it is slower than the other method",
    "start": "2284960",
    "end": "2292640"
  },
  {
    "text": "right because what happens is you create all this asynchron weight infrastructure around something that was asynchronous",
    "start": "2292640",
    "end": "2297800"
  },
  {
    "text": "anyway and was actually working just by a separate thread so generally your throughput will go down if you use an",
    "start": "2297800",
    "end": "2305160"
  },
  {
    "text": "asyn a weight approach towards CFA uh clients right so bearing in mind because",
    "start": "2305160",
    "end": "2311640"
  },
  {
    "text": "it's a bit counterintuitive um uh you may end up with here because you end up with some",
    "start": "2311640",
    "end": "2316960"
  },
  {
    "text": "kind of model that says um oh I need to use async because uh I'm in an async",
    "start": "2316960",
    "end": "2322440"
  },
  {
    "text": "flow but I would avoid it all right so let's have a look at how that all",
    "start": "2322440",
    "end": "2329000"
  },
  {
    "text": "works so uh close these down so we don't get",
    "start": "2331200",
    "end": "2336520"
  },
  {
    "text": "confused for so last time just again to make sure you basically believe that I am showing you real",
    "start": "2336520",
    "end": "2344160"
  },
  {
    "text": "things all right um this is the message pump again that we saw earlier right and",
    "start": "2344160",
    "end": "2350599"
  },
  {
    "text": "in here effectively uh you should see that's storing offsets in the consumer we don't",
    "start": "2350599",
    "end": "2357000"
  },
  {
    "text": "want to see that yet um the next bit of the demo where am I",
    "start": "2357000",
    "end": "2363440"
  },
  {
    "text": "dispatcher there we go right you can see we've got the outbox we're marking the status in the event when something comes",
    "start": "2363440",
    "end": "2369200"
  },
  {
    "text": "back right we T we're saying when it happened what happens is we create the",
    "start": "2369200",
    "end": "2374640"
  },
  {
    "text": "message add it to the outbox produce the message Handler gets called when it's done its report we Mark the status there",
    "start": "2374640",
    "end": "2381200"
  },
  {
    "text": "and show basically it happening all right uh the outbox in this demo is just",
    "start": "2381200",
    "end": "2386599"
  },
  {
    "text": "in memory that's not a real outbox please don't build your your your your production systems on Ian's in memory",
    "start": "2386599",
    "end": "2392640"
  },
  {
    "text": "outbox in his demo code uh you use brighter if you need to understand how to use that boxes and async dispatcher",
    "start": "2392640",
    "end": "2399720"
  },
  {
    "text": "is just there for reference for you which shows you how that one works instead but we're not actually running that one we're running the normal",
    "start": "2399720",
    "end": "2404960"
  },
  {
    "text": "dispatcher right okay and what we will do I think I the",
    "start": "2404960",
    "end": "2412079"
  },
  {
    "text": "demo demo",
    "start": "2412079",
    "end": "2415000"
  },
  {
    "text": "three I think you'll get a little hint of what the next one does as well spoilers in the consumer",
    "start": "2417440",
    "end": "2425359"
  },
  {
    "text": "but there you go so Calvin and I want to be transformed into",
    "start": "2425359",
    "end": "2432400"
  },
  {
    "text": "a tiger right so Calver has been",
    "start": "2432400",
    "end": "2437440"
  },
  {
    "text": "sent right do you see now what we get below is a little box which effectively is looking at the contents of the outbox",
    "start": "2437440",
    "end": "2444720"
  },
  {
    "text": "and it's saying to us yeah that message for Calvin was sent this is when it was sent Etc uh in terms of timing right and",
    "start": "2444720",
    "end": "2453640"
  },
  {
    "text": "we should see that if we grab that",
    "start": "2453640",
    "end": "2458839"
  },
  {
    "text": "out we'll see Calvin being transformed into a tiger all",
    "start": "2458839",
    "end": "2466280"
  },
  {
    "text": "right we can use something called transactional",
    "start": "2472880",
    "end": "2478920"
  },
  {
    "text": "reliability in catha don't worry too much if you you don't grasp this section",
    "start": "2478920",
    "end": "2484599"
  },
  {
    "text": "you don't need it so much um so with transactional reliability we say I want",
    "start": "2484599",
    "end": "2490119"
  },
  {
    "text": "to make sure that when you do these retries and this underlying buffer acyn",
    "start": "2490119",
    "end": "2495440"
  },
  {
    "text": "operation you're actually only going to send this thing to once right and so effectively you can",
    "start": "2495440",
    "end": "2503520"
  },
  {
    "text": "create a transaction that says um please only send this once what you do is you",
    "start": "2503520",
    "end": "2510040"
  },
  {
    "text": "you can that allows you to set maximum in Flight request per connection higher because it was serialized stuff um and",
    "start": "2510040",
    "end": "2516800"
  },
  {
    "text": "effectively you can set enable item potent then to say once",
    "start": "2516800",
    "end": "2522520"
  },
  {
    "text": "only you also have to set a tri transaction ID which says who am I for",
    "start": "2523440",
    "end": "2529200"
  },
  {
    "text": "the point of uniqueness of transactions and what you do you can see here effectively oh yeah you need to do",
    "start": "2529200",
    "end": "2536400"
  },
  {
    "text": "ax all and that automatically sets uh uh item pots basically rather sets ax all",
    "start": "2536400",
    "end": "2543640"
  },
  {
    "text": "uh Maxim flight to five and maxent retry so maxent retry basically means retry forever right uh and it adds up to five",
    "start": "2543640",
    "end": "2551839"
  },
  {
    "text": "at at once and what you'll see is we do a begin transaction a commit transaction or an abort",
    "start": "2551839",
    "end": "2558319"
  },
  {
    "text": "transaction typically there's a very specific scenario where you want to use this and that is essentially when you",
    "start": "2558319",
    "end": "2564400"
  },
  {
    "text": "are reading a stream and writing to another stream so you're reading off one topic and wri to another topic and what",
    "start": "2564400",
    "end": "2571240"
  },
  {
    "text": "you don't want to do is signal that you have essentially read from the first topic until you written to the second",
    "start": "2571240",
    "end": "2578480"
  },
  {
    "text": "topic that is mainly why transactions are required right so if you have that",
    "start": "2578480",
    "end": "2584440"
  },
  {
    "text": "scenario where you're putting one or the other and you want to make sure effectively for every record you read there's a matching one on the output you",
    "start": "2584440",
    "end": "2590040"
  },
  {
    "text": "may want to use transactions to help you do that okay now what it's actually doing",
    "start": "2590040",
    "end": "2596040"
  },
  {
    "text": "in terms of basically saying read and the output is it's basically making sure that you don't do don't increment the",
    "start": "2596040",
    "end": "2601559"
  },
  {
    "text": "offset on the consumer until essentially you have don't say it's r a read from",
    "start": "2601559",
    "end": "2607520"
  },
  {
    "text": "the producer to leave increment of the offset on the consumer to say it's written so offsets before we didn't see",
    "start": "2607520",
    "end": "2614720"
  },
  {
    "text": "any code managing offsets we're just reading from the consumer and we're assuming effectively that it was increment in the offset that is true",
    "start": "2614720",
    "end": "2622319"
  },
  {
    "text": "right so what happens here in this code is we are effectively autoc committing",
    "start": "2622319",
    "end": "2628200"
  },
  {
    "text": "and auto storing offsets now we don't have to set this as we're doing here that is the default has",
    "start": "2628200",
    "end": "2634720"
  },
  {
    "text": "to be explicit that's what we're doing here what does that mean okay so the",
    "start": "2634720",
    "end": "2639880"
  },
  {
    "text": "offset commit when it's Auto says as soon as I read something from the",
    "start": "2639880",
    "end": "2648119"
  },
  {
    "text": "stream treat that as red and commit that",
    "start": "2648240",
    "end": "2654559"
  },
  {
    "text": "offset Auto offset story Auto offset truth offset store rather um says as",
    "start": "2654680",
    "end": "2662400"
  },
  {
    "text": "soon as I run it off store the offset value to say essentially read that one",
    "start": "2662400",
    "end": "2667839"
  },
  {
    "text": "and aut offset commit rather says every 5 Seconds go to the offset store which",
    "start": "2667839",
    "end": "2675280"
  },
  {
    "text": "it's man it provides for you in memory and and right any commits to the",
    "start": "2675280",
    "end": "2681000"
  },
  {
    "text": "cafka server okay and that is the out of the-box",
    "start": "2681000",
    "end": "2686720"
  },
  {
    "text": "behavior the problem with that is this right if in this code at the point where",
    "start": "2687319",
    "end": "2693760"
  },
  {
    "text": "I consume I am storing the offset which is then in the background",
    "start": "2693760",
    "end": "2700200"
  },
  {
    "text": "going to get written if I fail in the translator or",
    "start": "2700200",
    "end": "2705800"
  },
  {
    "text": "Handler step that offset's already been written and I can't retry that work or more",
    "start": "2705800",
    "end": "2713720"
  },
  {
    "text": "particularly if I crash right but after I've read but before I essentially have done the work",
    "start": "2713720",
    "end": "2721160"
  },
  {
    "text": "that I intended to do so I don't really want",
    "start": "2721160",
    "end": "2727599"
  },
  {
    "text": "to commit an offset until I've done the work that I want to do as a result of reading right I want to trans mography",
    "start": "2727599",
    "end": "2735720"
  },
  {
    "text": "Calvin before I manage the offset right so what do I do to do that so",
    "start": "2735720",
    "end": "2744160"
  },
  {
    "text": "actually the easiest option in C and it does vary by Library so C is one of a",
    "start": "2744160",
    "end": "2750480"
  },
  {
    "text": "class of libraries along with go python bu thing called Libra deafer so it gets most of its options from that um is to",
    "start": "2750480",
    "end": "2757800"
  },
  {
    "text": "essentially say manually store the offsets but autoc commit what does that",
    "start": "2757800",
    "end": "2763280"
  },
  {
    "text": "mean it means that I will store the offset by by triggering a store by",
    "start": "2763280",
    "end": "2769480"
  },
  {
    "text": "calling store offset when the work is done so you can",
    "start": "2769480",
    "end": "2775359"
  },
  {
    "text": "see here in the in this W loot what I'm doing is saying read from Kafka if I have translate it and handle it if I've",
    "start": "2775359",
    "end": "2781160"
  },
  {
    "text": "successfully translated and handled it then store that offset I've got a will",
    "start": "2781160",
    "end": "2787119"
  },
  {
    "text": "autoc commit so in the background every 5 Seconds CF will be",
    "start": "2787119",
    "end": "2793000"
  },
  {
    "text": "effectively committing my work to the to the topic consumer offsets now you may",
    "start": "2793000",
    "end": "2798440"
  },
  {
    "text": "decide 5 seconds is too high a risk right but if I crash before I've written that I'll get get the work again and you",
    "start": "2798440",
    "end": "2804240"
  },
  {
    "text": "can you can you can play with that particular interval okay that's the default that you get out the",
    "start": "2804240",
    "end": "2811920"
  },
  {
    "text": "box the other alternative is to say yeah I just want to commit",
    "start": "2813880",
    "end": "2821520"
  },
  {
    "text": "when I am done I don't want to basically store and then commit in the background so essentially I'll turn both",
    "start": "2821520",
    "end": "2828440"
  },
  {
    "text": "autoc commit and auto offset St to false and I will just commit manually",
    "start": "2828440",
    "end": "2834559"
  },
  {
    "text": "when I'm when the work is done this is more chatty right so I'm making more calls to",
    "start": "2834559",
    "end": "2841240"
  },
  {
    "text": "the server so it can have a performance impact so your tradeoff is the speed of the consumer",
    "start": "2841240",
    "end": "2847480"
  },
  {
    "text": "versus the risk of some message loss because I've taken",
    "start": "2847480",
    "end": "2855280"
  },
  {
    "text": "control of how we how we basically put put get those offsets into Kafka either",
    "start": "2855280",
    "end": "2861079"
  },
  {
    "text": "I'm writing them to the store letting it commit in the background or I'm committing manually I now have to",
    "start": "2861079",
    "end": "2867960"
  },
  {
    "text": "basically also tell Kafka what to do if I as a",
    "start": "2867960",
    "end": "2873559"
  },
  {
    "text": "consumer lose a given partition because it's been allocated to somebody else so maybe I had two partitions we were in",
    "start": "2873559",
    "end": "2879160"
  },
  {
    "text": "very quiet period we ramp up to Peak load suddenly there's a whole load more consumers one one per partition two or",
    "start": "2879160",
    "end": "2886200"
  },
  {
    "text": "three partitions get taken away from me I have to essentially make sure everybody else knows how far I got so I",
    "start": "2886200",
    "end": "2893880"
  },
  {
    "text": "either have to essentially store the offset or commit the offset depending whatever my strategy was that I was",
    "start": "2893880",
    "end": "2899520"
  },
  {
    "text": "using within my Handler so when I crect my uh consumer I've got to make sure",
    "start": "2899520",
    "end": "2904599"
  },
  {
    "text": "that's matching right all right so let's do a quick demo of",
    "start": "2904599",
    "end": "2912240"
  },
  {
    "text": "that I think I can do it from demo four let's just see there are a few",
    "start": "2913599",
    "end": "2920200"
  },
  {
    "text": "extra demos um it's for time that they don't all get done they are in there you can go and have a look at them",
    "start": "2920200",
    "end": "2925680"
  },
  {
    "text": "yourselves later and go oh that's an exciting little change so this one here",
    "start": "2925680",
    "end": "2930839"
  },
  {
    "text": "you can see just that while loop we're going to basically you can store the offset and then what we're going to do",
    "start": "2930839",
    "end": "2936599"
  },
  {
    "text": "is is basically to the console we just write out the information that we we stored the offset right and then",
    "start": "2936599",
    "end": "2942720"
  },
  {
    "text": "essentially in the background uh CF will commit that it's a little bit hard to",
    "start": "2942720",
    "end": "2949760"
  },
  {
    "text": "show you all of how it works but hopefully you'll get the impression from",
    "start": "2949760",
    "end": "2955640"
  },
  {
    "text": "this so we're just going to produce a new",
    "start": "2955640",
    "end": "2961680"
  },
  {
    "text": "message Calvin what would you like Calvin to transform into",
    "start": "2963599",
    "end": "2968720"
  },
  {
    "text": "again bab a baboon yeah the one I struggle to type right every time because I can't spell baboon uh someone",
    "start": "2968880",
    "end": "2976400"
  },
  {
    "text": "had to pick baboon all right Calvin's going to turn to baboon all right so we've sent that",
    "start": "2976400",
    "end": "2984200"
  },
  {
    "text": "message and begin transformation of Calvin into baboon right Calvin is now baboon you can see we stored the",
    "start": "2986400",
    "end": "2992640"
  },
  {
    "text": "offset uh partition zero offset 10 right you can go and look at the the the the",
    "start": "2992640",
    "end": "3000440"
  },
  {
    "text": "the consumer offsets topic uh it it wouldn't be meaningful we'd look at the UI together be scrolling through and",
    "start": "3000440",
    "end": "3007000"
  },
  {
    "text": "nothing would would actually happen of any value for any of us but if you want to go and check stuff you can right just",
    "start": "3007000",
    "end": "3012240"
  },
  {
    "text": "let you know that that is a viable thing to do",
    "start": "3012240",
    "end": "3017839"
  },
  {
    "text": "okay all",
    "start": "3017839",
    "end": "3021040"
  },
  {
    "text": "right I time nine minutes all right we should manage",
    "start": "3024119",
    "end": "3030640"
  },
  {
    "text": "that uh resetting the offset um so as I mentioned sometimes you may find particular if you're developing locally",
    "start": "3031200",
    "end": "3037280"
  },
  {
    "text": "and you're playing around with stuff going oh I've got all these offsets uh you know my consumer now offset 94",
    "start": "3037280",
    "end": "3043960"
  },
  {
    "text": "whatever and I want to start again and replay everything and fix my bugs Etc uh or even sometimes in production",
    "start": "3043960",
    "end": "3050000"
  },
  {
    "text": "scenarios we get it so the trick is just essentially rename your group ID there are tools which you can get in the CFA",
    "start": "3050000",
    "end": "3057240"
  },
  {
    "text": "Ben Library which will you pass in and you say hey for this particular partition and this group ID reset all",
    "start": "3057240",
    "end": "3063960"
  },
  {
    "text": "the offsets to zero um and that work can work locally but if effectively you've",
    "start": "3063960",
    "end": "3069119"
  },
  {
    "text": "got a production system managed by another team etc etc you have to issue a j ticket request to get them to do that",
    "start": "3069119",
    "end": "3075599"
  },
  {
    "text": "just sometimes just increment the number of your group honestly makes it a lot easier all",
    "start": "3075599",
    "end": "3081680"
  },
  {
    "text": "right serializes deserializers in the schema registry Okay so we haven't",
    "start": "3081680",
    "end": "3087400"
  },
  {
    "text": "actually used a schem registry up to now so it's not compulsory in CFA but the",
    "start": "3087400",
    "end": "3093440"
  },
  {
    "text": "CFA ecosystem things like connect ksql um tools that we haven't got a lot",
    "start": "3093440",
    "end": "3100640"
  },
  {
    "text": "of time to get into but effectively help you essentially do data engineering pipelines um tend to depend on schema",
    "start": "3100640",
    "end": "3107440"
  },
  {
    "text": "plus schema is actually quite useful to make sure that you are obeying the rules",
    "start": "3107440",
    "end": "3113520"
  },
  {
    "text": "when you send about the schema that effectively you've defined lives on that",
    "start": "3113520",
    "end": "3119000"
  },
  {
    "text": "topic right it's a bit lessy for when you consume it's possible as law we should be tolerant when we consume but",
    "start": "3119000",
    "end": "3125559"
  },
  {
    "text": "strict when we send so we want to kind of say hey is the message we're sending match the schema you can also get a",
    "start": "3125559",
    "end": "3133200"
  },
  {
    "text": "schem registry to tell you will I break anybody so the rules of backwards and",
    "start": "3133200",
    "end": "3138359"
  },
  {
    "text": "forwards compatibility so how does it work so CFA can choose to ser iiz not",
    "start": "3138359",
    "end": "3148119"
  },
  {
    "text": "just as a string your key and your value by Avro Jason schema or Proto bath Jason",
    "start": "3148119",
    "end": "3155799"
  },
  {
    "text": "schemer effectively is obviously one most of us know the adjacent thing Avo can actually be based adjacent or binary",
    "start": "3155799",
    "end": "3162680"
  },
  {
    "text": "it's just a different schema format um and protuff is the Google format I haven't got time today to get into the",
    "start": "3162680",
    "end": "3168280"
  },
  {
    "text": "depths of what those individual schemas have how they look like so you have to do research depending on what you want",
    "start": "3168280",
    "end": "3174000"
  },
  {
    "text": "Avro is essentially the sort of native CF one and some tools work better with Aro and work with Jason",
    "start": "3174000",
    "end": "3181838"
  },
  {
    "text": "schema so what I want to do is Def find a schema for my message right I want i' want a schema for",
    "start": "3183480",
    "end": "3190520"
  },
  {
    "text": "transmogrifications um and then effectively I set the schema that I want for a given topic now there's some",
    "start": "3190520",
    "end": "3196240"
  },
  {
    "text": "complexity here um normally we recommend I would recommend having a single schema",
    "start": "3196240",
    "end": "3203280"
  },
  {
    "text": "for a given topic um some folks like to send different types of message on their",
    "start": "3203280",
    "end": "3209079"
  },
  {
    "text": "uh cfus schema because they want to have what we call domain events that are much more granular ordered in sequence they",
    "start": "3209079",
    "end": "3216000"
  },
  {
    "text": "have to have multi-topic schemas and that gets a bit harder right there's a relationship called the subject which",
    "start": "3216000",
    "end": "3221960"
  },
  {
    "text": "that basically determines by the scheme registry what topics is it what scheme",
    "start": "3221960",
    "end": "3227000"
  },
  {
    "text": "is it got for a topic this hideous table don't worry",
    "start": "3227000",
    "end": "3232079"
  },
  {
    "text": "about reading it um you can look at it on the slides if you're really worried um tells you about",
    "start": "3232079",
    "end": "3237440"
  },
  {
    "text": "compatibility between uh various changes you might want to make the order in",
    "start": "3237440",
    "end": "3243119"
  },
  {
    "text": "which you want to start consumers and producers depending on the changes that you're making you can pretty much",
    "start": "3243119",
    "end": "3249079"
  },
  {
    "text": "summarize this right uh so effectively if you want",
    "start": "3249079",
    "end": "3255079"
  },
  {
    "text": "backwards compatibility it says consumers using the new version can read messages with the last",
    "start": "3255079",
    "end": "3260920"
  },
  {
    "text": "version in other words My Consumer is now in version 14 but I can read messages that come in vers question 13",
    "start": "3260920",
    "end": "3267680"
  },
  {
    "text": "transitive which is a little option below just says actually 13 all the way down I can read any message but sent in",
    "start": "3267680",
    "end": "3272839"
  },
  {
    "text": "the past forward says a producer using the",
    "start": "3272839",
    "end": "3277880"
  },
  {
    "text": "new version can send a message to a consumer who has the last version so I can send a",
    "start": "3277880",
    "end": "3285119"
  },
  {
    "text": "message that has version 14 but consumers don't understand version 13 will still work and transitive means",
    "start": "3285119",
    "end": "3291720"
  },
  {
    "text": "consumers with all the versions all the way down right and full basically means",
    "start": "3291720",
    "end": "3297760"
  },
  {
    "text": "producers and consumers effectively may be on the one prior version so if 14's",
    "start": "3297760",
    "end": "3303920"
  },
  {
    "text": "current either either could be on 13 e the producer or the consumer we could still communicate and transitive",
    "start": "3303920",
    "end": "3310200"
  },
  {
    "text": "basically means producers and consumers aren't breaking each other at all right and you to figure out what you need to",
    "start": "3310200",
    "end": "3317200"
  },
  {
    "text": "set and essentially a little bit it determines the order of upgrades Etc so",
    "start": "3317200",
    "end": "3322680"
  },
  {
    "text": "how does schemy work so schemy Works my producer when effectively I'm producing",
    "start": "3322680",
    "end": "3328359"
  },
  {
    "text": "a message so I've registered a scheme in my scheme registry if not it will actually register one for me",
    "start": "3328359",
    "end": "3333559"
  },
  {
    "text": "usually um writes basically uh the uh it says to the schry hey I'm going to write",
    "start": "3333559",
    "end": "3339400"
  },
  {
    "text": "a message if you've got a scheme in it will check against it uh it would then effectively apply effec the schemer ID",
    "start": "3339400",
    "end": "3347039"
  },
  {
    "text": "or you need to apply your schemer ID to your cafka message come back to that second the consumer can if it wishes",
    "start": "3347039",
    "end": "3352599"
  },
  {
    "text": "then read the schemer as well from the scheme registry and check the message generally we tend to check on the outgoing on the",
    "start": "3352599",
    "end": "3358240"
  },
  {
    "text": "producer so the producer going to send a message look in the registry get the schema compare against the schema ask",
    "start": "3358240",
    "end": "3364440"
  },
  {
    "text": "what rules you've got forwards backwards or full does it obey those rules if so send it consumer can check and say hey",
    "start": "3364440",
    "end": "3372240"
  },
  {
    "text": "is it match the schema should I process it but we don't tend to the nasty bit is that that CFA didn't",
    "start": "3372240",
    "end": "3378799"
  },
  {
    "text": "support headers until I don't know version 0.11 or something and part of",
    "start": "3378799",
    "end": "3384480"
  },
  {
    "text": "the problem with that is how do you then know what the schema idea of the message is so because it needed to do this quite",
    "start": "3384480",
    "end": "3391440"
  },
  {
    "text": "early on CTIC decided I'll mangle the value so we'll basically insert Five",
    "start": "3391440",
    "end": "3398720"
  },
  {
    "text": "magic btes at the beginning of the value the F the zero bite is essentially which",
    "start": "3398720",
    "end": "3404960"
  },
  {
    "text": "version of confluent schema registry magic bites am I on it's pretty much been uh version zero s eternity and the",
    "start": "3404960",
    "end": "3413200"
  },
  {
    "text": "next four bytes are the schema ID so the identif for the schema in the",
    "start": "3413200",
    "end": "3419760"
  },
  {
    "text": "registry this tends to mean you need to use Confluence C's family of sterilizers",
    "start": "3419760",
    "end": "3426559"
  },
  {
    "text": "to actually the sterilization the only slight pain in the ass of that is that the the Json one is still on newtonsoft",
    "start": "3426559",
    "end": "3434480"
  },
  {
    "text": "Json with njs schema and it's an older version of njs schema and you end up",
    "start": "3434480",
    "end": "3439520"
  },
  {
    "text": "marking up your code for Newton soft Json with n Json schema as well as system. text Json right it's a little",
    "start": "3439520",
    "end": "3446680"
  },
  {
    "text": "bit behind on the confer Library what you do is essentially when I'm producing with the schema registry I",
    "start": "3446680",
    "end": "3454280"
  },
  {
    "text": "I effect you need to get hold of a scheme registry we just it's a fact you runs as part of your clust normally so",
    "start": "3454280",
    "end": "3459880"
  },
  {
    "text": "here we're just creating a reference to the schema registry we're caching it so",
    "start": "3459880",
    "end": "3465599"
  },
  {
    "text": "that effectively we don't have to repeatedly um ask for schemas we'll store them locally on our actual app so",
    "start": "3465599",
    "end": "3472799"
  },
  {
    "text": "that it will look up locally first for store ones that only make the call to the actual external scheme registry if",
    "start": "3472799",
    "end": "3478520"
  },
  {
    "text": "it needs to the advantage of that is the scheme registry is down more than likely your app has already got the scheme as locally it can check against it doesn't",
    "start": "3478520",
    "end": "3485599"
  },
  {
    "text": "have to keep calling back to the actual um uh scheme registry and then we have to use the Confluence Ser C sterilizer",
    "start": "3485599",
    "end": "3492799"
  },
  {
    "text": "to do the work all right in the interest of being on time I won't show you all the code that",
    "start": "3492799",
    "end": "3499599"
  },
  {
    "text": "does that because you just saw it you have to trust me that it really exists and we will do the demo instead dead",
    "start": "3499599",
    "end": "3508400"
  },
  {
    "text": "okay uh let's clear that clear",
    "start": "3508400",
    "end": "3514880"
  },
  {
    "text": "this so transmogrification I'll be cin just so",
    "start": "3517119",
    "end": "3522400"
  },
  {
    "text": "we can distinguish them uh the transformation I'm going to be a bug because it's short to type and can you",
    "start": "3522400",
    "end": "3529319"
  },
  {
    "text": "see around the very bottom we'll do yes makes sense there is now basically what",
    "start": "3529319",
    "end": "3534480"
  },
  {
    "text": "what I'm outputting is there is schema that the schema registry has",
    "start": "3534480",
    "end": "3539839"
  },
  {
    "text": "created to support that particular message so effectively it's the trans",
    "start": "3539839",
    "end": "3545359"
  },
  {
    "text": "mographic setting schema type object is essentially its Jason schema and it's",
    "start": "3545359",
    "end": "3551079"
  },
  {
    "text": "effectively got properties of a name in other words who's being transformed in",
    "start": "3551079",
    "end": "3556240"
  },
  {
    "text": "the actual transformation and effectively if I tried to send something that didn't",
    "start": "3556240",
    "end": "3562039"
  },
  {
    "text": "match that schema if I changed essentially it from saying name to",
    "start": "3562039",
    "end": "3568640"
  },
  {
    "text": "identifier it would break and say that's not a compatible change here all",
    "start": "3568640",
    "end": "3575559"
  },
  {
    "text": "right cool all right we're almost at the",
    "start": "3575559",
    "end": "3582520"
  },
  {
    "text": "end um okay just some links so again we saw this at the beginning uh all this",
    "start": "3583280",
    "end": "3589000"
  },
  {
    "text": "sample code there are a few demos we didn't actually get to uh you may find helpful this presentation I will upload",
    "start": "3589000",
    "end": "3595799"
  },
  {
    "text": "a proper pdf version of this one uh to get the PDF into GitHub there's an",
    "start": "3595799",
    "end": "3601000"
  },
  {
    "text": "earlier version it's similar content uh and brighter if you want to come and look at us we um do support things like",
    "start": "3601000",
    "end": "3608079"
  },
  {
    "text": "calf can at the Box um uh and we preserve ordering for you so we have a",
    "start": "3608079",
    "end": "3613440"
  },
  {
    "text": "single threaded reactor model which may mean nothing to you but effectively means we preserve The Ordering of the stream other topics Kafka connect and",
    "start": "3613440",
    "end": "3621640"
  },
  {
    "text": "ksql so Kafka lives in an ecosystem of tooling C connect lets you read things",
    "start": "3621640",
    "end": "3627599"
  },
  {
    "text": "out of databases or other stream other messaging systems and effectively import",
    "start": "3627599",
    "end": "3634119"
  },
  {
    "text": "them into a CFA stream uh and then essentially also write things from a CFA",
    "start": "3634119",
    "end": "3639520"
  },
  {
    "text": "stream to either a database or another messaging platform uh connect you have",
    "start": "3639520",
    "end": "3644680"
  },
  {
    "text": "to run as a cluster it's all Java effectively you just need to run the cluster it's okay um we find that the",
    "start": "3644680",
    "end": "3653559"
  },
  {
    "text": "adapters are not great um we actually prefer on the bottom",
    "start": "3653559",
    "end": "3658720"
  },
  {
    "text": "there are two Alternatives there to connect Flink so I know that confluent have gone quite big on Flink recently",
    "start": "3658720",
    "end": "3665799"
  },
  {
    "text": "they brought up a Flink consultancy um Flink is a data engineering tool which is probably better than C connect",
    "start": "3665799",
    "end": "3671079"
  },
  {
    "text": "they're doing this we really like a little go tour called benthos um benthos dodev is basically",
    "start": "3671079",
    "end": "3677559"
  },
  {
    "text": "the website uh which effectively does for us what connect was supposed to do which is it's a data engineering tool",
    "start": "3677559",
    "end": "3684319"
  },
  {
    "text": "pipeline that connects uh databases and streams all",
    "start": "3684319",
    "end": "3689440"
  },
  {
    "text": "right there are streams applications it's more common in Java there is a net port and that essentially lets you is",
    "start": "3689440",
    "end": "3697240"
  },
  {
    "text": "mainly used when you are moving between one stream or another doing some transformation processing in between and",
    "start": "3697240",
    "end": "3703079"
  },
  {
    "text": "that ladies and gentlemen is that thank you very much um I hope that was helpful",
    "start": "3703079",
    "end": "3708920"
  },
  {
    "text": "and you now know how CFA can be used by net developers if so a green ticket in the box thank you very much",
    "start": "3708920",
    "end": "3717318"
  },
  {
    "text": "[Applause]",
    "start": "3717460",
    "end": "3720760"
  },
  {
    "text": "you can ask me questions while I'm packing up if you got anything you need to ask so",
    "start": "3722599",
    "end": "3728839"
  }
]