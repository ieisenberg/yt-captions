[
  {
    "text": "um okay hi everyone um my name is nahin i'm with you from toronto canada i hope",
    "start": "3919",
    "end": "10320"
  },
  {
    "text": "you had a fun time so far in the conference and enjoyed the talks um today i want to talk about",
    "start": "10320",
    "end": "17279"
  },
  {
    "text": "how to develop to be compliant with our 2.1 out of the gate uh ola 2.1 is an in",
    "start": "17279",
    "end": "24240"
  },
  {
    "text": "progress effort to consolidate and simplify the most commonly used features of ola 2.0",
    "start": "24240",
    "end": "31439"
  },
  {
    "text": "oof community has patched and added to the oauth spec over the years and if you want to implement a secure",
    "start": "31439",
    "end": "38719"
  },
  {
    "text": "oauth solution today it requires reading so many rfcs and best current practices or bcbs",
    "start": "38719",
    "end": "46719"
  },
  {
    "text": "and everyone is now expecting a lot 2.1 to be out and simplify everything today",
    "start": "46719",
    "end": "53280"
  },
  {
    "text": "i want to discuss the details of oauth 2.1 and development approach for the current",
    "start": "53280",
    "end": "58719"
  },
  {
    "text": "project to be compliant with uh olat 2.1",
    "start": "58719",
    "end": "64080"
  },
  {
    "text": "in the next 16 minutes i want to go over the specs uh for to talk about law 2.0",
    "start": "64080",
    "end": "71600"
  },
  {
    "text": "and then the future which is open or 2.1 and then a quick demo using identity server 4",
    "start": "71600",
    "end": "78640"
  },
  {
    "text": "which is an open source library 402 and",
    "start": "78640",
    "end": "83680"
  },
  {
    "text": "open id connect and then following we're gonna have um i mean i hope that i can leave some",
    "start": "83680",
    "end": "90079"
  },
  {
    "text": "time for questions and but but please feel free to reach out on a slack to chat or for questioning",
    "start": "90079",
    "end": "98560"
  },
  {
    "text": "okay let's go back for a second and talk about problems before jumping to the solution",
    "start": "98560",
    "end": "104159"
  },
  {
    "text": "authentication auto and authorization are two of main problems on modern web application security",
    "start": "104159",
    "end": "110880"
  },
  {
    "text": "authentication is needed when an application needs to know the identity of the current user",
    "start": "110880",
    "end": "117200"
  },
  {
    "text": "typically these applications manage data on behalf of the users",
    "start": "117200",
    "end": "122399"
  },
  {
    "text": "and authentication screen i think you're expecting us to see your",
    "start": "122399",
    "end": "127840"
  },
  {
    "text": "screen right yep we cannot see anything sorry",
    "start": "127840",
    "end": "133520"
  },
  {
    "text": "oh okay",
    "start": "133520",
    "end": "137280"
  },
  {
    "text": "i'm so sorry",
    "start": "138560",
    "end": "143840"
  },
  {
    "text": "nope one sucks",
    "start": "144400",
    "end": "156640"
  },
  {
    "text": "okay can you see my screen now yes okay cool cool sorry sorry about",
    "start": "156640",
    "end": "164959"
  },
  {
    "text": "that okay um",
    "start": "164959",
    "end": "172000"
  },
  {
    "text": "yeah actually this is the first slide that i wanted you to see in my screen um so okay um",
    "start": "172000",
    "end": "179519"
  },
  {
    "text": "as i was saying so authentication and authorization are two of the main",
    "start": "179519",
    "end": "184800"
  },
  {
    "text": "problems and so when it comes to authentication we want to know the application want to know who the",
    "start": "184800",
    "end": "191040"
  },
  {
    "text": "user is is that is to verify that the user is who they say they",
    "start": "191040",
    "end": "196080"
  },
  {
    "text": "are and like the solution provided for authentication is open id connector or",
    "start": "196080",
    "end": "201840"
  },
  {
    "text": "idc and also like these applications that i'm talking about uh like which are managing data on",
    "start": "201840",
    "end": "208959"
  },
  {
    "text": "behalf of the user needs to make sure user can only access the data for which they are allowed to",
    "start": "208959",
    "end": "214799"
  },
  {
    "text": "right here comes authorization to deal with granting or denying rights to access",
    "start": "214799",
    "end": "220000"
  },
  {
    "text": "resources here is a big picture of how modern application modern web",
    "start": "220000",
    "end": "227200"
  },
  {
    "text": "applications may look like and and each and every one of these components or these applications which",
    "start": "227200",
    "end": "234239"
  },
  {
    "text": "are on the screen are to protect resources and that's why they need to implement authentication and authorization so i",
    "start": "234239",
    "end": "241599"
  },
  {
    "text": "have this big picture i'm putting the solutions in place in them and if you see like in this picture like for",
    "start": "241599",
    "end": "247920"
  },
  {
    "text": "example browsers communicate with the web applications and like if browser-based communicate",
    "start": "247920",
    "end": "254480"
  },
  {
    "text": "with web apis and apis connect and like communicate with each other or work or with web applications but",
    "start": "254480",
    "end": "262160"
  },
  {
    "text": "like um they can connect on behalf of the user or just as themselves",
    "start": "262160",
    "end": "267280"
  },
  {
    "text": "and if you see in this solution like in this big picture including the solution i",
    "start": "267280",
    "end": "273120"
  },
  {
    "text": "included the authorization server as well which is needed for olaf and open id connect so",
    "start": "273120",
    "end": "278960"
  },
  {
    "text": "this is just a big picture uh let's let's go to more details",
    "start": "278960",
    "end": "284000"
  },
  {
    "text": "right so let's see what is over 2 so oh 2 is the indus industry standard",
    "start": "284000",
    "end": "290240"
  },
  {
    "text": "protocol for authorization and it is in fact an open standard it means open the standard means that",
    "start": "290240",
    "end": "296639"
  },
  {
    "text": "there is no implementation for it there is some standard that it is suggested to how to",
    "start": "296639",
    "end": "301840"
  },
  {
    "text": "implement so oauth is a delegation protocol which means someone who controls",
    "start": "301840",
    "end": "308880"
  },
  {
    "text": "resource and allow a software application to access that resource on their behalf without impersonating",
    "start": "308880",
    "end": "316400"
  },
  {
    "text": "them means the user is leading an application and to access the resources on their behalf",
    "start": "316400",
    "end": "323360"
  },
  {
    "text": "and this application requests authorization from the owner of this resource which",
    "start": "323360",
    "end": "328479"
  },
  {
    "text": "is the user and receive a token and to be able to access those those resources olaf is a token based",
    "start": "328479",
    "end": "336720"
  },
  {
    "text": "protocol and all what is working over https and um as i said it used token",
    "start": "336720",
    "end": "344160"
  },
  {
    "text": "rather than credentials oh it is being developed by a ietf oauth working group which",
    "start": "344160",
    "end": "352080"
  },
  {
    "text": "is ietf stand for internet engineering task force so",
    "start": "352080",
    "end": "358400"
  },
  {
    "text": "to draw actually a better picture of olaf and it's necessary to know that its",
    "start": "358400",
    "end": "363680"
  },
  {
    "text": "terminology first right and um so in like i have um",
    "start": "363680",
    "end": "369199"
  },
  {
    "text": "the list of items in oauth terminology on the screen on the left what you see are the main",
    "start": "369199",
    "end": "374880"
  },
  {
    "text": "and then on the right is just um like details of each one first one comes the rules in olaf so we",
    "start": "374880",
    "end": "382639"
  },
  {
    "text": "have different roles in oauth and like including resource owner which is the entity that can grant access to",
    "start": "382639",
    "end": "389759"
  },
  {
    "text": "the protected resources and typically it is the end user",
    "start": "389759",
    "end": "394880"
  },
  {
    "text": "the client which is the application it's the one which is requesting for those protected resources on behalf of the",
    "start": "394880",
    "end": "401039"
  },
  {
    "text": "resource owner and um then the user agent user agent is what user is",
    "start": "401039",
    "end": "408240"
  },
  {
    "text": "using to interact with the client for example a browser or a native application like a",
    "start": "408240",
    "end": "414479"
  },
  {
    "text": "native mobile app and the resource server resource server are those protected resources that we",
    "start": "414479",
    "end": "420960"
  },
  {
    "text": "are talking about like apis and the authorization server which is actually the main component as",
    "start": "420960",
    "end": "427520"
  },
  {
    "text": "it's the server that authenticates that user and issue the access token and to be",
    "start": "427520",
    "end": "433680"
  },
  {
    "text": "able to access actually to their protected resources",
    "start": "433680",
    "end": "438800"
  },
  {
    "text": "so the net like we talked about the client which is that application who needs to access right",
    "start": "438800",
    "end": "445520"
  },
  {
    "text": "this client has some credentials uh which is registered to the authorization server authorization",
    "start": "445520",
    "end": "452240"
  },
  {
    "text": "server knows what is the what is this client these credentials contains of client id",
    "start": "452240",
    "end": "458319"
  },
  {
    "text": "and client secret the id is uh as a name show it's a public identifier and secret is something that",
    "start": "458319",
    "end": "465840"
  },
  {
    "text": "just the client and the authorization server are aware of so like clients have two types a",
    "start": "465840",
    "end": "473360"
  },
  {
    "text": "confidential and also public confidentials are those who can keep that secret safe right they",
    "start": "473360",
    "end": "479199"
  },
  {
    "text": "can do they can authenticate to authorization server securely because they have a safe secret",
    "start": "479199",
    "end": "485919"
  },
  {
    "text": "and the public ones are the ones like mobile apps they cannot keep their secrets safe",
    "start": "485919",
    "end": "493520"
  },
  {
    "text": "they may run in a browser there by public ones uh so and then scopes and the consent",
    "start": "493520",
    "end": "500800"
  },
  {
    "text": "scope is used to express uh what the application can do on behalf of the user right and it is always a",
    "start": "500800",
    "end": "508639"
  },
  {
    "text": "subset of what user can do um it is used for handling of that",
    "start": "508639",
    "end": "513760"
  },
  {
    "text": "delegation that we said olaf is uh doing and the consent is like",
    "start": "513760",
    "end": "518959"
  },
  {
    "text": "when the application requests for some scope this information is shown to the user in",
    "start": "518959",
    "end": "524640"
  },
  {
    "text": "the consent form and user actually can grant or deny so then the application will receive a",
    "start": "524640",
    "end": "530480"
  },
  {
    "text": "token with just the granted the scopes",
    "start": "530480",
    "end": "536399"
  },
  {
    "text": "and the access token access token is the things that this application uses to",
    "start": "536480",
    "end": "541760"
  },
  {
    "text": "access those protected resources to call the api",
    "start": "541760",
    "end": "546959"
  },
  {
    "text": "right and for access token is necessary to say that there is no defined structure",
    "start": "546959",
    "end": "552160"
  },
  {
    "text": "in this spec for that but the most common use is barotokens which are",
    "start": "552160",
    "end": "557360"
  },
  {
    "text": "mostly jwt or job the grand types grand types for oauth is",
    "start": "557360",
    "end": "564800"
  },
  {
    "text": "the different um use cases it's just um the use cases are which are implemented",
    "start": "564800",
    "end": "570959"
  },
  {
    "text": "in oauth are uh provided as a grantor so um",
    "start": "570959",
    "end": "576160"
  },
  {
    "text": "some of them are in the in the um bcps or best current practices some are suggests",
    "start": "576160",
    "end": "581920"
  },
  {
    "text": "that to not be used and um like but but ola 2.1 is actually making",
    "start": "581920",
    "end": "590080"
  },
  {
    "text": "uh like more concrete suggestions about this so here comes client credentials and",
    "start": "590080",
    "end": "597040"
  },
  {
    "text": "authorization code and proof keep for code exchange or pixie and the password then implicit so",
    "start": "597040",
    "end": "603680"
  },
  {
    "text": "between this the client credential and pixie are the ones which are now",
    "start": "603680",
    "end": "608880"
  },
  {
    "text": "suggested to be used on oauth as well but some rest of them are still compliant with oauth2",
    "start": "608880",
    "end": "616240"
  },
  {
    "text": "and the endpoints which is um um like the authorization endpoint and",
    "start": "616240",
    "end": "621680"
  },
  {
    "text": "token endpoint and first is to just interact with the resource owner and then get the grant and the token is",
    "start": "621680",
    "end": "628800"
  },
  {
    "text": "actually to receive the access token and the last is refresh token which is",
    "start": "628800",
    "end": "634240"
  },
  {
    "text": "allowing the application to obtain a new access token without prompting the user so here was",
    "start": "634240",
    "end": "641360"
  },
  {
    "text": "the terminology so it is necessary to know to understand what the flow is and then",
    "start": "641360",
    "end": "647839"
  },
  {
    "text": "later we're going to talk about now what is the next step which is oh what 2.1 but",
    "start": "647839",
    "end": "653440"
  },
  {
    "text": "without this is like we need this knowledge to go to future",
    "start": "653440",
    "end": "658800"
  },
  {
    "text": "so here is the abstract protocol flow right um and all the components",
    "start": "658800",
    "end": "664880"
  },
  {
    "text": "i i show like we talked about in terminology you can see them here this is abstract obviously there is no grant",
    "start": "664880",
    "end": "671279"
  },
  {
    "text": "or use case here so as you see we have the resource owner and we have the client authorization server",
    "start": "671279",
    "end": "678160"
  },
  {
    "text": "and resource server and it's just showing in abstract abstract way that how they interact with each other as",
    "start": "678160",
    "end": "684480"
  },
  {
    "text": "we talk and now what is over 2.1 now that we know",
    "start": "684480",
    "end": "691519"
  },
  {
    "text": "like the concept of or2 and the terminology and now we are ready to go like what is ola 2.1",
    "start": "691519",
    "end": "699440"
  },
  {
    "text": "it is an in progress effort um now which means that it's not out and if",
    "start": "699440",
    "end": "706399"
  },
  {
    "text": "it's approved so it's gonna obsolete some certain part of the over 2.0 including some of those",
    "start": "706399",
    "end": "714160"
  },
  {
    "text": "brands and mandate additional security best practices it is and the rest is gonna stay the same",
    "start": "714160",
    "end": "721200"
  },
  {
    "text": "so it is here it's gonna be here just to simplify and provide",
    "start": "721200",
    "end": "727519"
  },
  {
    "text": "a better more concrete way for developers to simplify their life and here is the big picture",
    "start": "727519",
    "end": "735120"
  },
  {
    "text": "that i showed you once of 2.1 is out like it's going to be like this means that",
    "start": "735120",
    "end": "741680"
  },
  {
    "text": "wherever that we have a over 2.0 gonna be replaced with or 2.1",
    "start": "741680",
    "end": "748959"
  },
  {
    "text": "so nothing is expected to change as far as we know about this",
    "start": "748959",
    "end": "754959"
  },
  {
    "text": "okay now what are these changes that are suggested in the oh a 2.1 the first one comes",
    "start": "754959",
    "end": "762480"
  },
  {
    "text": "with pixi so it's a pixie is required for all of clients using the authorization",
    "start": "762480",
    "end": "768720"
  },
  {
    "text": "code flow so like in in uh us there was some bcps and some rfcs which was saying that",
    "start": "768720",
    "end": "776560"
  },
  {
    "text": "just use pc for um like config like a public client",
    "start": "776560",
    "end": "781920"
  },
  {
    "text": "but in or 2.1 it is actually required for all like all the clients using",
    "start": "781920",
    "end": "788399"
  },
  {
    "text": "authorization code flow so let's see first what is authorization code flow and what is wrong with it that",
    "start": "788399",
    "end": "794959"
  },
  {
    "text": "pixi is suggested to be used here i have authorization code grant",
    "start": "794959",
    "end": "801200"
  },
  {
    "text": "um on this screen on the screen so it was originally suggested",
    "start": "801200",
    "end": "808079"
  },
  {
    "text": "for mobile application but um and now it is actually used by confidential and public",
    "start": "808079",
    "end": "814800"
  },
  {
    "text": "clients so the the base of this grant is to exchange the authorization code",
    "start": "814800",
    "end": "820560"
  },
  {
    "text": "for an access token what does it mean so this uh flow has two steps so first one",
    "start": "820560",
    "end": "827680"
  },
  {
    "text": "is in front channel which is the latin which is less secure and um like um it is real like for",
    "start": "827680",
    "end": "834399"
  },
  {
    "text": "example browser so which like uh in this step uh like um there is a call for um",
    "start": "834399",
    "end": "842639"
  },
  {
    "text": "like um the authorization server and it results in authorization code",
    "start": "842639",
    "end": "848079"
  },
  {
    "text": "which represents um the outcome of this uh front and",
    "start": "848079",
    "end": "854000"
  },
  {
    "text": "front channel operation right so here you see on the screen on the screen on on the right so the",
    "start": "854000",
    "end": "861040"
  },
  {
    "text": "first call which is happening after that the user returned to the client via the redirect url right which",
    "start": "861040",
    "end": "868000"
  },
  {
    "text": "was passed in the first call and then application gonna get the authorization code from the url",
    "start": "868000",
    "end": "873920"
  },
  {
    "text": "and use it actually to request an access token so the second call is a back channel",
    "start": "873920",
    "end": "880240"
  },
  {
    "text": "which is highly secure one and from in this step there would be a exchange",
    "start": "880240",
    "end": "887440"
  },
  {
    "text": "of this code which received in the first system with the access token um so on the",
    "start": "887440",
    "end": "893360"
  },
  {
    "text": "second step and the confidential clients need to send their secret but for public ones as we said they don't keep",
    "start": "893360",
    "end": "900320"
  },
  {
    "text": "the secrets safe so they won't send the secret right uh so like um",
    "start": "900320",
    "end": "907680"
  },
  {
    "text": "and but what is wrong with this right so why it is suggested to use pixi on the top of that",
    "start": "908720",
    "end": "915120"
  },
  {
    "text": "because it it looks to be like something good right good enough but like do we sell",
    "start": "915120",
    "end": "921680"
  },
  {
    "text": "some some common attacks on the authorization code flow the first attack that i wanted that i'm showing",
    "start": "921680",
    "end": "928000"
  },
  {
    "text": "you is about stolen authorization code which is for public clients which is",
    "start": "928000",
    "end": "933360"
  },
  {
    "text": "very common for public clients what you see on a screen is an example of an authorization code",
    "start": "933360",
    "end": "939440"
  },
  {
    "text": "interception attack which is happening on the smartphones right so",
    "start": "939440",
    "end": "944560"
  },
  {
    "text": "in because uh public public clients which don't have a secret it seems if a",
    "start": "944560",
    "end": "950880"
  },
  {
    "text": "malicious app is still the code it can exchange it with the access token and abuse the protected",
    "start": "950880",
    "end": "956639"
  },
  {
    "text": "resource right as you see on the screen in this smartphone it is possible to register a malicious app",
    "start": "956639",
    "end": "963440"
  },
  {
    "text": "alongside with the uh with the honest app and just receive",
    "start": "963440",
    "end": "969360"
  },
  {
    "text": "the access code and then try to exchange it with the access token because there is no secret",
    "start": "969360",
    "end": "974480"
  },
  {
    "text": "involved as well um in this case so this is for public",
    "start": "974480",
    "end": "979839"
  },
  {
    "text": "clients so next attack i'm gonna talk um with you about is",
    "start": "979839",
    "end": "984959"
  },
  {
    "text": "authorization code injection attack this is an attack which is not so common but it is",
    "start": "984959",
    "end": "992000"
  },
  {
    "text": "happening and it is a common i mean it is happening for the confidential client",
    "start": "992000",
    "end": "999600"
  },
  {
    "text": "and this is this attack is actually very hard to visualize and draw a picture so i'm gonna try to",
    "start": "999600",
    "end": "1005920"
  },
  {
    "text": "explain it that's how it works so in this attack as um like the attacker obtained the",
    "start": "1005920",
    "end": "1012240"
  },
  {
    "text": "authorization code actually by intercepting it so just imagine in",
    "start": "1012240",
    "end": "1017279"
  },
  {
    "text": "in this attack the attacker and also the honest app they are actually using the actual",
    "start": "1017279",
    "end": "1024079"
  },
  {
    "text": "client means that the attacker have a machine with the actual client on it",
    "start": "1024079",
    "end": "1029520"
  },
  {
    "text": "but then the attacker obtained the authorization code by intercepting like for example just imagine",
    "start": "1029520",
    "end": "1034720"
  },
  {
    "text": "having a blush like malicious browser extension installed and like installed",
    "start": "1034720",
    "end": "1039918"
  },
  {
    "text": "on the honest um client so then the attacker perform a regular",
    "start": "1039919",
    "end": "1045438"
  },
  {
    "text": "uh oauth authorization process with the legitimate client on their device and then that",
    "start": "1045439",
    "end": "1052080"
  },
  {
    "text": "attacker injects a stolen authorization code which was from the honest client",
    "start": "1052080",
    "end": "1057440"
  },
  {
    "text": "in the response of the authorization server um to the legitimate client right so the",
    "start": "1057440",
    "end": "1064000"
  },
  {
    "text": "client sends the code to the authorization server's token endpoint along with the client id",
    "start": "1064000",
    "end": "1070080"
  },
  {
    "text": "client secret uh and actual redirect qri right the authorization server",
    "start": "1070080",
    "end": "1076000"
  },
  {
    "text": "here what does it check it checks the client secret it checks whether the code was issued to the",
    "start": "1076000",
    "end": "1082640"
  },
  {
    "text": "particular client and whether the actual radar requiring match and all of them actually matching here",
    "start": "1082640",
    "end": "1089280"
  },
  {
    "text": "so if all succeed which does the authorization server issues access and",
    "start": "1089280",
    "end": "1094640"
  },
  {
    "text": "other tokens to the client right and now the attacker is able to impersonate the legitimate user",
    "start": "1094640",
    "end": "1101919"
  },
  {
    "text": "so and this is the attack for confidential clients",
    "start": "1101919",
    "end": "1106960"
  },
  {
    "text": "so and now we prove that like we try to prove that authorization code flow is",
    "start": "1106960",
    "end": "1112480"
  },
  {
    "text": "not safe for public and also confidential client uh here comes pixie pixie or perfect for",
    "start": "1112480",
    "end": "1119360"
  },
  {
    "text": "code exchange was actually was suggested originally for public client but",
    "start": "1119360",
    "end": "1125120"
  },
  {
    "text": "as we discussed now it is suggested or it is actually mandated but by oauth 2.1",
    "start": "1125120",
    "end": "1130960"
  },
  {
    "text": "to be used for a public and also confidential client right so what does it do so",
    "start": "1130960",
    "end": "1138480"
  },
  {
    "text": "pixi in simple word it just introduced a random secret created by the",
    "start": "1138480",
    "end": "1143600"
  },
  {
    "text": "calling application that can be verified by authorization server this secret is called code verifier",
    "start": "1143600",
    "end": "1151360"
  },
  {
    "text": "and um additionally so the the calling gap",
    "start": "1151360",
    "end": "1157440"
  },
  {
    "text": "creates a transform value of the code verifier called code challenge",
    "start": "1157440",
    "end": "1162559"
  },
  {
    "text": "and send it over https tour street and to uh receive the authorization code you",
    "start": "1162559",
    "end": "1168720"
  },
  {
    "text": "see on this on the screen on the right where i am showing the calls that the code challenge that we talked",
    "start": "1168720",
    "end": "1175440"
  },
  {
    "text": "about is sent actually to get the code right and uh so and um later when",
    "start": "1175440",
    "end": "1182960"
  },
  {
    "text": "it is asking for exchanging that code read the access token it's going to send",
    "start": "1182960",
    "end": "1188240"
  },
  {
    "text": "the verifier the plain one to the server so then with pixi with this uh",
    "start": "1188240",
    "end": "1194240"
  },
  {
    "text": "like maintenance happened on the authorization and code flow so the code challenge",
    "start": "1194240",
    "end": "1200880"
  },
  {
    "text": "and code now are tied together right so it means that if if they don't match",
    "start": "1200880",
    "end": "1207520"
  },
  {
    "text": "the server would not return the the access token um so pxe",
    "start": "1207520",
    "end": "1214960"
  },
  {
    "text": "actually protect against um csrf or and cross site request forgery as well",
    "start": "1214960",
    "end": "1221760"
  },
  {
    "text": "and with the same mechanism that it used so it's like and just imagine that as a like every",
    "start": "1221760",
    "end": "1228080"
  },
  {
    "text": "time it's like a one-time secret and every time the client is authenticated",
    "start": "1228080",
    "end": "1235440"
  },
  {
    "text": "and so far it is actually protecting against attacks that i explained so on the pixi so",
    "start": "1235440",
    "end": "1242720"
  },
  {
    "text": "you see the on the screen you see on the first call redirect uri right so like the next suggestion is about",
    "start": "1242720",
    "end": "1250400"
  },
  {
    "text": "that redirect url it's a redirect uri must be compared using exact",
    "start": "1250400",
    "end": "1255600"
  },
  {
    "text": "string matching so uh this means that the authorization server",
    "start": "1255600",
    "end": "1260640"
  },
  {
    "text": "must utilize exact matching of the client redirect url and uri against the pre-registered uri",
    "start": "1260640",
    "end": "1267679"
  },
  {
    "text": "right so um the wildcard was compliant with is actually compliant with oauth 2.0 but",
    "start": "1267679",
    "end": "1274799"
  },
  {
    "text": "now with uh over 2.1 it wouldn't be compliant and um so",
    "start": "1274799",
    "end": "1282480"
  },
  {
    "text": "here i have um actually a couple of um i mean i have these urls showing you",
    "start": "1283520",
    "end": "1289520"
  },
  {
    "text": "that for example if the registered one is a wildcard one so the valid",
    "start": "1289520",
    "end": "1294960"
  },
  {
    "text": "and also the attacker both gonna work right um it's like having um um",
    "start": "1294960",
    "end": "1302080"
  },
  {
    "text": "exact um rhetoric you're right going to help to detect the mixed up attack as",
    "start": "1302080",
    "end": "1307200"
  },
  {
    "text": "well mix-up attacks is actually a very complex attack but it it comes in a picture when a client",
    "start": "1307200",
    "end": "1314000"
  },
  {
    "text": "needs to deal with different authorization servers right um",
    "start": "1314000",
    "end": "1320240"
  },
  {
    "text": "the next um change such as that is about implicit grant so it say that the implicit grant is",
    "start": "1321520",
    "end": "1328240"
  },
  {
    "text": "emitted from the specification so what is this implicit grant so it was",
    "start": "1328240",
    "end": "1334080"
  },
  {
    "text": "previously recommended for interactive clients uh without a secret like a js client like a",
    "start": "1334080",
    "end": "1341760"
  },
  {
    "text": "javascript client right so the primary reason that implicit grants and came to picture was because",
    "start": "1341760",
    "end": "1348400"
  },
  {
    "text": "of a limitation in browsers right they couldn't make a cross-site ajax call and then",
    "start": "1348400",
    "end": "1354799"
  },
  {
    "text": "normally the um like authorization server is hosted on another domain and they couldn't do that",
    "start": "1354799",
    "end": "1361520"
  },
  {
    "text": "initial post which was required for authorization code flow right",
    "start": "1361520",
    "end": "1366640"
  },
  {
    "text": "but there is no more issue anymore because um now nowadays and it's fixed with course and they can",
    "start": "1366640",
    "end": "1373520"
  },
  {
    "text": "do actually cross-site ajax calls right so but let's see what is implicit grant and",
    "start": "1373520",
    "end": "1380400"
  },
  {
    "text": "then why it is uh not to be used so if you see here on the screen so i have the calls",
    "start": "1380400",
    "end": "1387679"
  },
  {
    "text": "happening on the implicit grant in implicit to just simplify to remove that post",
    "start": "1387679",
    "end": "1393120"
  },
  {
    "text": "that we talked about on authorization code it's just um there is a call simply to the authorization server",
    "start": "1393120",
    "end": "1399840"
  },
  {
    "text": "asking for the token and just return the token the access token in the url",
    "start": "1399840",
    "end": "1405280"
  },
  {
    "text": "back to the client right so if like this way there is couple of",
    "start": "1405280",
    "end": "1411120"
  },
  {
    "text": "actually damages may happen first of all the token can leak because the token is returned",
    "start": "1411120",
    "end": "1417360"
  },
  {
    "text": "in the url right it can leak on blog files browser history before headers and proxies and wherever",
    "start": "1417360",
    "end": "1424960"
  },
  {
    "text": "that like whoever can access this url like any other javascript um which is on the browser",
    "start": "1424960",
    "end": "1432320"
  },
  {
    "text": "they can access this token right and so it also can cause um access token",
    "start": "1432320",
    "end": "1438320"
  },
  {
    "text": "injection so this is about injecting a stolen access token into a legitimate client",
    "start": "1438320",
    "end": "1444559"
  },
  {
    "text": "on a device under the attacker control right and in this attack actually the",
    "start": "1444559",
    "end": "1451039"
  },
  {
    "text": "attacker wants to impersonate a victim and cannot use um their own",
    "start": "1451039",
    "end": "1456240"
  },
  {
    "text": "client because um they want to access certain functions on this particular client right",
    "start": "1456240",
    "end": "1463200"
  },
  {
    "text": "so and um because this aspect actually was not",
    "start": "1463200",
    "end": "1468880"
  },
  {
    "text": "originally safe so the the aspect provides no mechanism",
    "start": "1468880",
    "end": "1473919"
  },
  {
    "text": "to return like a refresh token and it's suggested to just have the a very very short uh like uh",
    "start": "1473919",
    "end": "1481600"
  },
  {
    "text": "life lifetime and also limited scope and implicit and that's why now it's",
    "start": "1481600",
    "end": "1488240"
  },
  {
    "text": "um an over 2.1 it would be gone for good the next thing which is omitted",
    "start": "1488240",
    "end": "1495200"
  },
  {
    "text": "from spec is actually the resource owner password grant or like",
    "start": "1495200",
    "end": "1502640"
  },
  {
    "text": "um some may know it as a password grant so this actually this grant is",
    "start": "1502640",
    "end": "1508880"
  },
  {
    "text": "in securely exposes the credentials of the resource owner and also it just brings this bad habit",
    "start": "1508880",
    "end": "1514880"
  },
  {
    "text": "that user insert their password all over the place and not just in one",
    "start": "1514880",
    "end": "1520000"
  },
  {
    "text": "um unique place which is the authorization server right so here is a password grant i'm i try to",
    "start": "1520000",
    "end": "1528559"
  },
  {
    "text": "show you that um how simply just the username password of the research owner is actually sent",
    "start": "1528559",
    "end": "1535600"
  },
  {
    "text": "over the authorization server so it is actually against the main",
    "start": "1535600",
    "end": "1542159"
  },
  {
    "text": "it was there for migration purpose originally and it's against one of the main concerns of oas which",
    "start": "1542159",
    "end": "1549600"
  },
  {
    "text": "was password like avoiding password anti-pattern",
    "start": "1549600",
    "end": "1555519"
  },
  {
    "text": "uh the next change is actually about the bearer tokens so uh bird tokens as we said are the",
    "start": "1555840",
    "end": "1562080"
  },
  {
    "text": "most commonly used um access token types so it say that bird tokens um",
    "start": "1562080",
    "end": "1569039"
  },
  {
    "text": "like um shouldn't be used on query string of uri as as we see uh as we saw on the implicit",
    "start": "1569039",
    "end": "1575760"
  },
  {
    "text": "that's exactly what was happening that was that's that's the implicit gonna have problem with",
    "start": "1575760",
    "end": "1581360"
  },
  {
    "text": "this fact as well right so very tokens as we said they are known",
    "start": "1581360",
    "end": "1586559"
  },
  {
    "text": "um also known as um access tokens they actually led us to",
    "start": "1586559",
    "end": "1592559"
  },
  {
    "text": "access their protected resources right so most tokens are arch or",
    "start": "1592559",
    "end": "1598400"
  },
  {
    "text": "jaw and but originally when the oh what came out they paralleled to be on the",
    "start": "1598400",
    "end": "1604080"
  },
  {
    "text": "header on the post bodies and also on query strings but now it is",
    "start": "1604080",
    "end": "1611120"
  },
  {
    "text": "uh it is actually um it is prohibits and the spec",
    "start": "1611120",
    "end": "1617360"
  },
  {
    "text": "prohibits the bearer tokens from being sent in the query string and um like as we said um at the curvy",
    "start": "1617360",
    "end": "1624799"
  },
  {
    "text": "string and more generally any data in the url is never private and any",
    "start": "1624799",
    "end": "1630400"
  },
  {
    "text": "javascript executing on the page can actually access that it's um it can actually leak into log",
    "start": "1630400",
    "end": "1639200"
  },
  {
    "text": "files as we said in the cache in the browser history and in general if you want to pass",
    "start": "1639200",
    "end": "1644720"
  },
  {
    "text": "information privately over the internet use tls first which is the key and also put the",
    "start": "1644720",
    "end": "1652080"
  },
  {
    "text": "sensitive information in the post body or http header and not in the url",
    "start": "1652080",
    "end": "1659520"
  },
  {
    "text": "so here comes like the grand types um limited for oat 2.1 so",
    "start": "1660240",
    "end": "1667120"
  },
  {
    "text": "which are limited now to client credentials and pixi",
    "start": "1667120",
    "end": "1672960"
  },
  {
    "text": "the last point is about refresh tokens refresh tokens um allow a client to retrieve new access",
    "start": "1673520",
    "end": "1680320"
  },
  {
    "text": "token readout re-authentication right so the the award 2.1 it say that",
    "start": "1680320",
    "end": "1686080"
  },
  {
    "text": "refresh tokens for public clients might either might must either be sender constraint",
    "start": "1686080",
    "end": "1692799"
  },
  {
    "text": "or one-time use what does this mean so let's first see what is refresh token",
    "start": "1692799",
    "end": "1699440"
  },
  {
    "text": "how does it work right so here is actually an abstract picture showing how refresh tokens works right",
    "start": "1699440",
    "end": "1706240"
  },
  {
    "text": "so um like like when we get a token there would be a reference token",
    "start": "1706240",
    "end": "1711919"
  },
  {
    "text": "um in the in the access token response and we can exchange that in the first",
    "start": "1711919",
    "end": "1717760"
  },
  {
    "text": "call on the right as you see so the client can exchange that for a token",
    "start": "1717760",
    "end": "1723279"
  },
  {
    "text": "right there on the bottom and under the call you see the response right and in",
    "start": "1723279",
    "end": "1729520"
  },
  {
    "text": "the picture it shows that as long and as long as reference token is available to client client can",
    "start": "1729520",
    "end": "1736159"
  },
  {
    "text": "actually get another refresh token and this cycle can go forever so then if the refresh token leak so it",
    "start": "1736159",
    "end": "1743760"
  },
  {
    "text": "would it may bring a very huge damages to the system right for for confidentials the secret is",
    "start": "1743760",
    "end": "1751039"
  },
  {
    "text": "required that's why oat 2.1 just mentioned it for the public clients right but um for public clients it say",
    "start": "1751039",
    "end": "1759360"
  },
  {
    "text": "um there is do two things one time password and one time refresh talk and use what",
    "start": "1759360",
    "end": "1765840"
  },
  {
    "text": "does this mean means that like uh like um after it like after",
    "start": "1765840",
    "end": "1771200"
  },
  {
    "text": "refresh token is used to retrieve the access token it becomes invalid means that if there was a leakage it",
    "start": "1771200",
    "end": "1777919"
  },
  {
    "text": "would be abused just once and there is a hope that client went because like just imagine an",
    "start": "1777919",
    "end": "1784880"
  },
  {
    "text": "attacker um intercept their refresh token and then they try to use it",
    "start": "1784880",
    "end": "1790080"
  },
  {
    "text": "and then after that the um honest um client trying and they get error and",
    "start": "1790080",
    "end": "1796480"
  },
  {
    "text": "like they're gonna get notified that something wrong is happening right and the the",
    "start": "1796480",
    "end": "1801520"
  },
  {
    "text": "second thing was about um being a sender constraint right",
    "start": "1801520",
    "end": "1806559"
  },
  {
    "text": "it means that ensure um the oh like it's same for the authorization server and to",
    "start": "1806559",
    "end": "1813200"
  },
  {
    "text": "ensure and that um the refresh token and client i are",
    "start": "1813200",
    "end": "1819440"
  },
  {
    "text": "binds together cryptographically so means that each client can ask for a",
    "start": "1819440",
    "end": "1826240"
  },
  {
    "text": "reference token and the same client can use that right so and it ensured that",
    "start": "1826240",
    "end": "1832240"
  },
  {
    "text": "the request came from the client to which the reference token was issued so there is um like a multiple",
    "start": "1832240",
    "end": "1840559"
  },
  {
    "text": "suggested implementation for this including like using or what token binding or",
    "start": "1840559",
    "end": "1845840"
  },
  {
    "text": "mutual uh tls authentication i am i'm gonna actually i'm i want to",
    "start": "1845840",
    "end": "1852399"
  },
  {
    "text": "try to explain the token binding for uh refresh tokens and it's um",
    "start": "1852399",
    "end": "1857440"
  },
  {
    "text": "interesting for me so like um for for token bindings enter like uh from left to right there is two",
    "start": "1857440",
    "end": "1865279"
  },
  {
    "text": "calls involved right if you see on the left so you see um like a normal post",
    "start": "1865279",
    "end": "1872240"
  },
  {
    "text": "to get token to exchange code for token in uh pixie right so um",
    "start": "1872240",
    "end": "1878880"
  },
  {
    "text": "here like um but there is in the token binding actually in the spec introduced a new",
    "start": "1878880",
    "end": "1886000"
  },
  {
    "text": "http header named security token bindings you see in the picture that",
    "start": "1886000",
    "end": "1891279"
  },
  {
    "text": "once um once client is acting asking for the access token it actually",
    "start": "1891279",
    "end": "1897200"
  },
  {
    "text": "set that header right so it is um it it is carrying a base",
    "start": "1897200",
    "end": "1902480"
  },
  {
    "text": "a 64 url encoded value for that token binding message which just client is",
    "start": "1902480",
    "end": "1908480"
  },
  {
    "text": "aware of right and then it gets the refresh token and the next time when um when the client wants to actually",
    "start": "1908480",
    "end": "1915440"
  },
  {
    "text": "exchange this reference token um with an actual token",
    "start": "1915440",
    "end": "1920640"
  },
  {
    "text": "it sets the same value in the header right so this means that um like",
    "start": "1920640",
    "end": "1926960"
  },
  {
    "text": "in the first call the authorization server um has bound this refresh token to the provided",
    "start": "1926960",
    "end": "1933440"
  },
  {
    "text": "token binding id from that encoded message in the header right so and then",
    "start": "1933440",
    "end": "1940000"
  },
  {
    "text": "like when we do this enhancement like um the response may look like um the one on the right on the",
    "start": "1940000",
    "end": "1947440"
  },
  {
    "text": "bottom and you'd like because um and just having access token because now reference tokens can be long lived",
    "start": "1947440",
    "end": "1954320"
  },
  {
    "text": "right because they are safe and they are bound to the client",
    "start": "1954320",
    "end": "1962159"
  },
  {
    "text": "uh so we we are um we actually went through everything about oh what 2.1",
    "start": "1962159",
    "end": "1968159"
  },
  {
    "text": "now like i want to actually talk about the openid connect and how",
    "start": "1968159",
    "end": "1973200"
  },
  {
    "text": "what's what's going to happen to openid connect so open id connect just um to just give you a better",
    "start": "1973200",
    "end": "1980880"
  },
  {
    "text": "like picture is the open standard for authentication right um it it actually came in the",
    "start": "1980880",
    "end": "1987600"
  },
  {
    "text": "picture as a simple identity layer on the top of a watt and is extending over 2.0",
    "start": "1987600",
    "end": "1995519"
  },
  {
    "text": "for authentication scenarios and it is it is developed by openid working group",
    "start": "1995519",
    "end": "2002000"
  },
  {
    "text": "the openid connect and i tried to show in the picture that open id connect actually stand on the top of",
    "start": "2002000",
    "end": "2007919"
  },
  {
    "text": "oauth 2.0 so on open id connect there is some new",
    "start": "2007919",
    "end": "2013840"
  },
  {
    "text": "concepts like id token which is a jwt as well contains uh like um scopes",
    "start": "2013840",
    "end": "2022159"
  },
  {
    "text": "about the user the current logged in user and also and the user info endpoint and um",
    "start": "2022159",
    "end": "2028399"
  },
  {
    "text": "which returned and the data about user there is some standards for scope and also there is",
    "start": "2028399",
    "end": "2034159"
  },
  {
    "text": "some standard for implementation as well which suggests how to implement open id",
    "start": "2034159",
    "end": "2039440"
  },
  {
    "text": "connect and here is like a big picture of how it works",
    "start": "2039440",
    "end": "2044559"
  },
  {
    "text": "and um like um just to show like him it is um on the top of actually",
    "start": "2044559",
    "end": "2051118"
  },
  {
    "text": "a lot so i'm not gonna dig into open eye deconic i just wanted to show you that as far as we are concerned in the",
    "start": "2051119",
    "end": "2058320"
  },
  {
    "text": "scope of this session so it's just it um the future of open8d connect is that it",
    "start": "2058320",
    "end": "2064638"
  },
  {
    "text": "would be um like the same thing but on the top of all what 2.1",
    "start": "2064639",
    "end": "2071839"
  },
  {
    "text": "okay so i am um done with my slides i'm gonna actually show you a quick demo",
    "start": "2073119",
    "end": "2079839"
  },
  {
    "text": "um i'm i want to show you a quick demo of using m identity server for which",
    "start": "2079839",
    "end": "2086960"
  },
  {
    "text": "is an open open source library for oauth2 and open id connect",
    "start": "2086960",
    "end": "2092240"
  },
  {
    "text": "um just bear with me for a second to be able to actually",
    "start": "2092240",
    "end": "2099839"
  },
  {
    "text": "share my screen with you",
    "start": "2099839",
    "end": "2103839"
  },
  {
    "text": "okay",
    "start": "2122240",
    "end": "2124640"
  },
  {
    "text": "please let me know if you have any issues in my screen",
    "start": "2128480",
    "end": "2134320"
  },
  {
    "text": "okay here i have um on my demo i wanna actually",
    "start": "2135359",
    "end": "2142960"
  },
  {
    "text": "show you a couple of these um grants that's um like i showed you on a what",
    "start": "2142960",
    "end": "2150200"
  },
  {
    "text": "2.0 and then as far as we are concerned like the implementation has no change",
    "start": "2150200",
    "end": "2156800"
  },
  {
    "text": "just there is some enhancement uh which we need to do so here on my demo i have uh i have",
    "start": "2156800",
    "end": "2164480"
  },
  {
    "text": "like a demo ready for you so it contains of identity server which is actually the",
    "start": "2164480",
    "end": "2170880"
  },
  {
    "text": "authorization server i have couple of clients ready and i have an api",
    "start": "2170880",
    "end": "2176560"
  },
  {
    "text": "uh which is our resource right and for the clients i have some public",
    "start": "2176560",
    "end": "2183520"
  },
  {
    "text": "clients which is a razer client and a javascript client and also a",
    "start": "2183520",
    "end": "2188720"
  },
  {
    "text": "confidential which is envy cyclone so i want to show you simply how simple is um",
    "start": "2188720",
    "end": "2193839"
  },
  {
    "text": "to actually log in using the yeah a lot",
    "start": "2193839",
    "end": "2200560"
  },
  {
    "text": "right so here i have my api running and um [Music]",
    "start": "2200560",
    "end": "2208079"
  },
  {
    "text": "here is my javascript client right so i'm gonna actually show you that network as well",
    "start": "2208079",
    "end": "2216400"
  },
  {
    "text": "so on my election i i i'm not intending to show you i have to do a good ui or something like",
    "start": "2216400",
    "end": "2222480"
  },
  {
    "text": "this this is just a very simple demo just to show you like pixie so here on my javascript",
    "start": "2222480",
    "end": "2230240"
  },
  {
    "text": "client what i have done is very simple i came and and then i i registered my client",
    "start": "2230240",
    "end": "2238320"
  },
  {
    "text": "right if you see my here i have my javascript client which is simply register so i mentioned",
    "start": "2238320",
    "end": "2245599"
  },
  {
    "text": "that the the grant type that i'm going to use is the code authorization code but also i said with",
    "start": "2245599",
    "end": "2252880"
  },
  {
    "text": "enhanced pixy right and i am saying that i need a consent",
    "start": "2252880",
    "end": "2258000"
  },
  {
    "text": "and um also i say that this is a public client means that there is no need for",
    "start": "2258000",
    "end": "2263920"
  },
  {
    "text": "a secret and the redirect uri i registered the exact uri means that",
    "start": "2263920",
    "end": "2270000"
  },
  {
    "text": "there is no wild card and if like um it wouldn't work with any other url",
    "start": "2270000",
    "end": "2277119"
  },
  {
    "text": "right so here i come here i say okay do a login and then when it comes to",
    "start": "2277119",
    "end": "2284160"
  },
  {
    "text": "logging it actually redirects me to first",
    "start": "2284160",
    "end": "2289760"
  },
  {
    "text": "okay so i say okay just um do a login first so when i'm when i'm",
    "start": "2291839",
    "end": "2298160"
  },
  {
    "text": "drawing like as you see i am redirected to the authorization server this is what we want to see a unified",
    "start": "2298160",
    "end": "2306000"
  },
  {
    "text": "login string on the authorization server and i will try to log in",
    "start": "2306000",
    "end": "2313599"
  },
  {
    "text": "and once i logged in i see the consent right so and then",
    "start": "2313599",
    "end": "2320400"
  },
  {
    "text": "i am allowing here and then it is a logged in a state and then now if i try to actually",
    "start": "2320400",
    "end": "2328560"
  },
  {
    "text": "call an api it is called here in the screen i want it actually to show you",
    "start": "2328560",
    "end": "2335119"
  },
  {
    "text": "something so like if you see like in in case of security so",
    "start": "2335119",
    "end": "2343760"
  },
  {
    "text": "like i want to show you the token right",
    "start": "2345680",
    "end": "2351280"
  },
  {
    "text": "here is the token call as i mentioned it is um it is done on back channel and it is",
    "start": "2352079",
    "end": "2358720"
  },
  {
    "text": "secure there was a post and there would be no leakage of like i mean nobody can see that what is",
    "start": "2358720",
    "end": "2366400"
  },
  {
    "text": "happening right so but this was a public client and i have actually a private",
    "start": "2366400",
    "end": "2372320"
  },
  {
    "text": "a confidential client here available as well",
    "start": "2372320",
    "end": "2377359"
  },
  {
    "text": "so for this one it's your logged in because the identity server obviously is logged in",
    "start": "2379200",
    "end": "2384640"
  },
  {
    "text": "and okay now because i actually forced that",
    "start": "2384640",
    "end": "2391599"
  },
  {
    "text": "it asked me for login",
    "start": "2391599",
    "end": "2396880"
  },
  {
    "text": "and again so here i am logged in and i can call the api sending the",
    "start": "2396880",
    "end": "2404000"
  },
  {
    "text": "token so um like i want to actually show you the",
    "start": "2404000",
    "end": "2410079"
  },
  {
    "text": "difference between the that confidential client",
    "start": "2410079",
    "end": "2415599"
  },
  {
    "text": "and so here is my confidential client as you see my confidential client is",
    "start": "2415599",
    "end": "2422720"
  },
  {
    "text": "exactly same registration but what is happening is that first i have client secret registered",
    "start": "2422720",
    "end": "2429359"
  },
  {
    "text": "and also like i'm using pixie but i didn't say no need for",
    "start": "2429359",
    "end": "2434720"
  },
  {
    "text": "like a secret and also the return urls right",
    "start": "2434720",
    "end": "2440880"
  },
  {
    "text": "so to to show you like a tiny bit of like uh like a",
    "start": "2441520",
    "end": "2447920"
  },
  {
    "text": "tiny bit of how to go from inclusive to the code with pixie i actually made two clients ready for",
    "start": "2447920",
    "end": "2456400"
  },
  {
    "text": "you so first is the implicit and the second one is using code flow using pixi",
    "start": "2456400",
    "end": "2462560"
  },
  {
    "text": "so if you see here i just i'm showing you simply the registration that how easy i could go from implicit",
    "start": "2462560",
    "end": "2469280"
  },
  {
    "text": "i'm going to show you the clients as well so from implicit to the code flow with the",
    "start": "2469280",
    "end": "2476160"
  },
  {
    "text": "pixi right um so this one is implicit and it doesn't mention the",
    "start": "2476160",
    "end": "2482720"
  },
  {
    "text": "required pc and also it doesn't need to say that require secret is false but here all i did was",
    "start": "2482720",
    "end": "2490319"
  },
  {
    "text": "to change the flow to code and also saying the pixel now i'm going to show you actually the",
    "start": "2490319",
    "end": "2497040"
  },
  {
    "text": "actual client code",
    "start": "2497040",
    "end": "2508079"
  },
  {
    "text": "the visual studio is unhappy exactly work",
    "start": "2508079",
    "end": "2514160"
  },
  {
    "text": "and i stop it okay so here is my actually here is my razor",
    "start": "2515280",
    "end": "2522560"
  },
  {
    "text": "client um there is a client that i have using implicit all it does is that okay",
    "start": "2522560",
    "end": "2528960"
  },
  {
    "text": "now i want to use the i want to use identity server like i'm i'm logging",
    "start": "2528960",
    "end": "2535119"
  },
  {
    "text": "using open id connect it's just saying that okay i wanna i wanna my authority is that",
    "start": "2535119",
    "end": "2541040"
  },
  {
    "text": "authorization server i showed you and this is my client id and that's all",
    "start": "2541040",
    "end": "2546400"
  },
  {
    "text": "right but then like when i did that client with pixie so what i did the",
    "start": "2546400",
    "end": "2553359"
  },
  {
    "text": "enhancement i did which wasn't very hard was to just say okay",
    "start": "2553359",
    "end": "2558400"
  },
  {
    "text": "now like the response type now is code that's all everything else is managed by",
    "start": "2558400",
    "end": "2564240"
  },
  {
    "text": "the library so the main purpose of me showing you this demo is to show if you pick",
    "start": "2564240",
    "end": "2570880"
  },
  {
    "text": "a proper library if you pick the proper service provider how easy would be to",
    "start": "2570880",
    "end": "2576400"
  },
  {
    "text": "implement this and like developers that are developing the applications or the apis are not the",
    "start": "2576400",
    "end": "2583520"
  },
  {
    "text": "ones dealing with all the specs right so they are the ones to just make sure",
    "start": "2583520",
    "end": "2589359"
  },
  {
    "text": "that the library or the service that they are using is actually providing all the required and suggested things in",
    "start": "2589359",
    "end": "2597119"
  },
  {
    "text": "this spec",
    "start": "2597119",
    "end": "2599680"
  },
  {
    "text": "the other thing i wanted to actually show you is their refresh token and just show that",
    "start": "2603920",
    "end": "2610000"
  },
  {
    "text": "sam how like to have a refreshed i mean how to retrieve refresh token and how to",
    "start": "2610000",
    "end": "2617520"
  },
  {
    "text": "and use it or how to use the bear token to call api here i've got my api and my",
    "start": "2617520",
    "end": "2624720"
  },
  {
    "text": "mvc app which is logged in so here i am in my",
    "start": "2624720",
    "end": "2631280"
  },
  {
    "text": "controller if you see i can like in name using.5 it's so easy like now i have the refresh token available",
    "start": "2631280",
    "end": "2638480"
  },
  {
    "text": "which i could actually use it i have my id token as reset for i didn't like open id connect and i have",
    "start": "2638480",
    "end": "2645920"
  },
  {
    "text": "my access token right here simply what i'm using is to just put that access token in a barrier",
    "start": "2645920",
    "end": "2652240"
  },
  {
    "text": "and call an api",
    "start": "2652240",
    "end": "2655680"
  },
  {
    "text": "i put it in the header and i just call the api and this is there",
    "start": "2658880",
    "end": "2664880"
  },
  {
    "text": "so the other thing that i wanted to show you was about the concept so when i log out",
    "start": "2665839",
    "end": "2673200"
  },
  {
    "text": "and then when i log in again so what i'm going to do is that in the",
    "start": "2673200",
    "end": "2679920"
  },
  {
    "text": "consent for example i say i don't want the user to have this access right so here i go here and then now",
    "start": "2679920",
    "end": "2687680"
  },
  {
    "text": "if i try to call an api i can't because i don't have the access but this user in",
    "start": "2687680",
    "end": "2692800"
  },
  {
    "text": "fact it originally had the access because if i just provide it to them so what is",
    "start": "2692800",
    "end": "2699599"
  },
  {
    "text": "happening is that is that if i call this delete api it's",
    "start": "2699599",
    "end": "2707040"
  },
  {
    "text": "going to work means that it's just to demonstrate how to remove like simply remove scope or an",
    "start": "2707040",
    "end": "2713440"
  },
  {
    "text": "access from user using the consent form um as far as i am concerned i'm",
    "start": "2713440",
    "end": "2720480"
  },
  {
    "text": "um done with demo but like i want to leave some time for questions if there",
    "start": "2720480",
    "end": "2726319"
  },
  {
    "text": "is any and please unmute yourself if you want to ask any question or if",
    "start": "2726319",
    "end": "2733040"
  },
  {
    "text": "you want me to show you anything in the code i know the code part is more interesting part",
    "start": "2733040",
    "end": "2738079"
  },
  {
    "text": "but like uh feel free to just show me if i mean tell me if you want me to show anything in the code",
    "start": "2738079",
    "end": "2747838"
  },
  {
    "text": "okay [Music]",
    "start": "2753520",
    "end": "2758219"
  },
  {
    "text": "thank you so much hi hi there hi mike",
    "start": "2759040",
    "end": "2766560"
  },
  {
    "text": "i have to keep my hand on the space once it keeps picking up um i was just going to ask with regard",
    "start": "2766560",
    "end": "2772160"
  },
  {
    "text": "to um the clients um do you think in",
    "start": "2772160",
    "end": "2777359"
  },
  {
    "text": "uh author 2.1 i'm just trying to work out whether i kind of asked a single question in one of the earlier sessions",
    "start": "2777359",
    "end": "2783680"
  },
  {
    "text": "it was about um blazer and oauth 2. and what i'm trying to figure",
    "start": "2783680",
    "end": "2789680"
  },
  {
    "text": "out is whether you think that in the future um is it kind of appropriate that public clients should",
    "start": "2789680",
    "end": "2796160"
  },
  {
    "text": "hold um you know like id tokens and access tokens themselves or do you think you will go",
    "start": "2796160",
    "end": "2801359"
  },
  {
    "text": "in a direction where public clients will be forced to have a private back end and session management will be between those",
    "start": "2801359",
    "end": "2808560"
  },
  {
    "text": "two and you know all the id tokens and the access tokens will stop in the you know the private part of",
    "start": "2808560",
    "end": "2814560"
  },
  {
    "text": "the application oh you you said that you you um like",
    "start": "2814560",
    "end": "2819839"
  },
  {
    "text": "like blazers right blazer applications and for the future is that what you said",
    "start": "2819839",
    "end": "2825599"
  },
  {
    "text": "yeah exactly like this so i like him i don't think that the",
    "start": "2825599",
    "end": "2832800"
  },
  {
    "text": "future going to be to have actually like a like a server in between like mvc so",
    "start": "2832800",
    "end": "2841200"
  },
  {
    "text": "i believe the public clients and like browser-based ones they are intending to stay browser-based",
    "start": "2841200",
    "end": "2848559"
  },
  {
    "text": "and uh like um to be more secure not saving things on the client",
    "start": "2848559",
    "end": "2855359"
  },
  {
    "text": "like the access token and reference token you me right yeah yeah yeah yeah yeah so to be safer",
    "start": "2855359",
    "end": "2862160"
  },
  {
    "text": "like i don't i don't like i don't believe that the direction gonna be to save them actually i mean to",
    "start": "2862160",
    "end": "2867599"
  },
  {
    "text": "have like something in between as an intermediate like a server-side thing to save the stuff like it would be",
    "start": "2867599",
    "end": "2874800"
  },
  {
    "text": "more to not saving anything on the client and just buying more overhead but but this is",
    "start": "2874800",
    "end": "2880960"
  },
  {
    "text": "actually a very very subjective thing right it depends to your client and like for example for",
    "start": "2880960",
    "end": "2886800"
  },
  {
    "text": "for the ones that you want more security maybe you just buy that overhead and you say okay i",
    "start": "2886800",
    "end": "2892640"
  },
  {
    "text": "want slower why not saving and just going through server to retrieve an access",
    "start": "2892640",
    "end": "2898160"
  },
  {
    "text": "token every time and rather than for the ones that um like the security is not",
    "start": "2898160",
    "end": "2904240"
  },
  {
    "text": "that big of issue and you say okay i want to just save it and just deal with the like",
    "start": "2904240",
    "end": "2911200"
  },
  {
    "text": "damage it may but in the public client if you didn't save anything on the",
    "start": "2911200",
    "end": "2916640"
  },
  {
    "text": "public client how would you would you keep having to go back to the identity provider to get the id token",
    "start": "2916640",
    "end": "2922079"
  },
  {
    "text": "every time you wanted to initiate requests for an authorization [Music]",
    "start": "2922079",
    "end": "2927760"
  },
  {
    "text": "for the id token for the access token right i i guess were you saying that you",
    "start": "2927760",
    "end": "2933520"
  },
  {
    "text": "thought that the client the public client shouldn't persist either the id token or the access token",
    "start": "2933520",
    "end": "2938800"
  },
  {
    "text": "obviously you know what i'm trying to say is that um it would be it would be dependent to the client if",
    "start": "2938800",
    "end": "2945359"
  },
  {
    "text": "they want very very secure things yeah they may develop to just go to the server every time",
    "start": "2945359",
    "end": "2951760"
  },
  {
    "text": "but this is yeah as i said this is totally depends to the business and to the client but as far as um um like",
    "start": "2951760",
    "end": "2959200"
  },
  {
    "text": "i know the direction is um to just keep keep that in the client and i mean",
    "start": "2959200",
    "end": "2964319"
  },
  {
    "text": "keep the client in the browser and not having something on the server okay",
    "start": "2964319",
    "end": "2970400"
  },
  {
    "text": "okay thank you okay i i guess that's it thank you so much",
    "start": "2970400",
    "end": "2985838"
  },
  {
    "text": "you",
    "start": "2986640",
    "end": "2988720"
  }
]