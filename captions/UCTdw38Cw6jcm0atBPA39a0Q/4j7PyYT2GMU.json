[
  {
    "start": "0",
    "end": "51000"
  },
  {
    "text": "welcome and this talk is about adventures the",
    "start": "8160",
    "end": "14799"
  },
  {
    "text": "set of libraries i've built to support dota developers who wants to build event source",
    "start": "14799",
    "end": "20320"
  },
  {
    "text": "applications um my name is alexey i work at a box of",
    "start": "20320",
    "end": "25680"
  },
  {
    "text": "chief architect here in norway and part time as developer advocate for event store",
    "start": "25680",
    "end": "32078"
  },
  {
    "text": "i some time ago wrote the book hands-on drum major redesign with net core which",
    "start": "32079",
    "end": "37200"
  },
  {
    "text": "is a bit dated now and in fact that's an event sourcing book in disguise the",
    "start": "37200",
    "end": "43280"
  },
  {
    "text": "publisher just didn't allow me to put this in the title so but that's how it goes",
    "start": "43280",
    "end": "49680"
  },
  {
    "text": "um why i decided to build",
    "start": "50399",
    "end": "55760"
  },
  {
    "text": "yet another thing that supports event sourcing because what i observed over well i",
    "start": "55760",
    "end": "61520"
  },
  {
    "text": "started to build event storage systems for production use back in 2015 or something",
    "start": "61520",
    "end": "67520"
  },
  {
    "text": "and the time passes by and i see that uh we made mistakes back then",
    "start": "67520",
    "end": "73920"
  },
  {
    "text": "and people who are trying to build event source systems today they kind of stumble upon the same",
    "start": "73920",
    "end": "79920"
  },
  {
    "text": "mistakes the same issues and they try to overcome it and you know",
    "start": "79920",
    "end": "85119"
  },
  {
    "text": "what happens when we try a new pattern and",
    "start": "85119",
    "end": "90080"
  },
  {
    "text": "we kind of fail it doesn't work as expected we get production issues or we never get to",
    "start": "90240",
    "end": "95439"
  },
  {
    "text": "production as such well some people just complain to themselves",
    "start": "95439",
    "end": "100479"
  },
  {
    "text": "to the colleagues and abandon the whole thing some other people do the same but they also write a blog article medium and",
    "start": "100479",
    "end": "107040"
  },
  {
    "text": "share it on twitter and get a lot of likes from people that did the same like from",
    "start": "107040",
    "end": "112079"
  },
  {
    "text": "the first category right and that's kind of disappointing because in my opinion advanced sourcing is quite",
    "start": "112079",
    "end": "118640"
  },
  {
    "text": "a good pattern i think it's brilliant it's just when i apply them correctly it might do more",
    "start": "118640",
    "end": "124880"
  },
  {
    "text": "harm than then benefit you see these things these are those",
    "start": "124880",
    "end": "131599"
  },
  {
    "text": "medium articles that i mentioned stopover selling event sourcing is a silver bullet why don't",
    "start": "131599",
    "end": "137599"
  },
  {
    "text": "what they don't tell you about event sourcing don't let internet do you even sourcing is hard",
    "start": "137599",
    "end": "143760"
  },
  {
    "text": "well it can't be and why even sourcing is microservices communication at a pattern well it is",
    "start": "143760",
    "end": "149280"
  },
  {
    "text": "actually true so",
    "start": "149280",
    "end": "155200"
  },
  {
    "start": "153000",
    "end": "291000"
  },
  {
    "text": "it's for some reason there is a bit missing bit of text",
    "start": "155360",
    "end": "160560"
  },
  {
    "text": "missing here 100 that's correct if you do it wrong uh of course we can say what's right",
    "start": "160560",
    "end": "166879"
  },
  {
    "text": "what's wrong who says what's right and who says what's wrong so",
    "start": "166879",
    "end": "172480"
  },
  {
    "text": "well then we start to search for information in the internet and then we stumble upon these",
    "start": "172480",
    "end": "179280"
  },
  {
    "text": "diagrams right this is a popular blog and i copy paste it you can see the link here",
    "start": "179280",
    "end": "186000"
  },
  {
    "text": "it's not that i want to blame some people for posting these diagrams it's just that",
    "start": "186000",
    "end": "191040"
  },
  {
    "text": "i want to say this is real they do use qrs with a broker",
    "start": "191040",
    "end": "199239"
  },
  {
    "text": "well not the best idea in the world this is the variation the previous thing",
    "start": "200159",
    "end": "207760"
  },
  {
    "text": "this is something that i don't understand because it has so many different things that don't really look",
    "start": "207760",
    "end": "213040"
  },
  {
    "text": "like event sourcing or whatsoever because it just has event store on the side it's like a bucket and but the in the middle of",
    "start": "213040",
    "end": "219440"
  },
  {
    "text": "things there is an event bus and um this i don't know what it is",
    "start": "219440",
    "end": "225840"
  },
  {
    "text": "um the article says white papers latest modern application development on aws",
    "start": "225840",
    "end": "231360"
  },
  {
    "text": "with event sourcing um these guys integrate using domain events",
    "start": "231360",
    "end": "238319"
  },
  {
    "text": "which is on the pattern on its own this is like why microsoft is bad for microsoft why event sourcing is bad for",
    "start": "238319",
    "end": "245439"
  },
  {
    "text": "microservice integration and this is just everything the the kind",
    "start": "245439",
    "end": "251599"
  },
  {
    "text": "of collection of other parts is only one place and it can hence from colors that's somehow close to aws world",
    "start": "251599",
    "end": "259440"
  },
  {
    "text": "and as part of my job in dev advocacy and event stories talk to people",
    "start": "259840",
    "end": "266479"
  },
  {
    "text": "that do this in production because they use event store to be our product and uh we see all kind of variations of",
    "start": "266479",
    "end": "274720"
  },
  {
    "text": "things sometimes it's bad sometimes it's kind of okay",
    "start": "274720",
    "end": "280720"
  },
  {
    "text": "sometimes it's pretty good but it's never like they've done it and everything worked as we expected it almost never",
    "start": "280720",
    "end": "288000"
  },
  {
    "text": "happens and",
    "start": "288000",
    "end": "293040"
  },
  {
    "text": "i see two problems here so remember those of you who learned about event",
    "start": "293040",
    "end": "299120"
  },
  {
    "text": "sourcing the pattern was originally created by",
    "start": "299120",
    "end": "304240"
  },
  {
    "text": "greg as the distributed domain of design that's why a lot of people speaking about event sourcing have ddd in mind",
    "start": "304240",
    "end": "312240"
  },
  {
    "text": "right because in my opinion uh one of the most powerful things in event sourcing that's the first pattern",
    "start": "312240",
    "end": "318080"
  },
  {
    "text": "that exists that allows you to persist behavior rather than persist state",
    "start": "318080",
    "end": "323520"
  },
  {
    "text": "and that's extremely useful however you can do it in many different ways like for example you can create",
    "start": "323680",
    "end": "330639"
  },
  {
    "text": "an event log of sorts and shovel events over there that's what event store on the side is a bucket",
    "start": "330639",
    "end": "336840"
  },
  {
    "text": "um implements and use it and say i have all my events so i persisted the behavior but then",
    "start": "336840",
    "end": "343039"
  },
  {
    "text": "it's not used for anything right it's not used for decision making it's",
    "start": "343039",
    "end": "348160"
  },
  {
    "text": "not used as a sort of truth because everything that's published also goes to some sort event bus",
    "start": "348160",
    "end": "355520"
  },
  {
    "text": "then i think event store as a company was complacent for some time because we kind of",
    "start": "356240",
    "end": "361840"
  },
  {
    "text": "we have a database that implements event sourcing from ground up because it was built with event sourcing in mind",
    "start": "361840",
    "end": "367840"
  },
  {
    "text": "and then confluent came and they brought a kafka kafka was designed originally as a",
    "start": "367840",
    "end": "373280"
  },
  {
    "text": "centralized logging in gesture right and then it was promoted to be broker",
    "start": "373280",
    "end": "379440"
  },
  {
    "text": "and somehow a few years back and there were big companies starting to use kafka and say we are doing event",
    "start": "379440",
    "end": "385360"
  },
  {
    "text": "sourcing without knowing what event sourcing actually is because what they do they publish events to kafka",
    "start": "385360",
    "end": "391840"
  },
  {
    "text": "and then a few moments later this these events get projected or what they call much",
    "start": "391840",
    "end": "397120"
  },
  {
    "text": "realized views materialized store materialized state",
    "start": "397120",
    "end": "402400"
  },
  {
    "text": "and that state is used for making decisions but there is a lag in time between the event is published to kafka",
    "start": "402400",
    "end": "408240"
  },
  {
    "text": "and this materialized view is updated and you have a risk of making decisions",
    "start": "408240",
    "end": "413360"
  },
  {
    "text": "based on stale state and that's this problem is real and like 50 of articles saying invest sourcing is not good",
    "start": "413360",
    "end": "419919"
  },
  {
    "text": "meaning that as well i say this pattern has a name i just",
    "start": "419919",
    "end": "426960"
  },
  {
    "text": "don't remember what it is it's like read your own things but it's not event sourcing and such",
    "start": "426960",
    "end": "432240"
  },
  {
    "text": "so it's just a misuse of the term um",
    "start": "432240",
    "end": "437440"
  },
  {
    "start": "435000",
    "end": "573000"
  },
  {
    "text": "that's why uh like when i started adventures i wrote a bunch of things in the documentation website",
    "start": "437440",
    "end": "443199"
  },
  {
    "text": "but it's not just the doc like api reference and go through and say this is the class that does this",
    "start": "443199",
    "end": "448840"
  },
  {
    "text": "um i have very strong opinions how it should be done because i built several with my colleagues who probably here as",
    "start": "448840",
    "end": "455919"
  },
  {
    "text": "well airbags and i've seen systems and they see they're suffering",
    "start": "455919",
    "end": "461440"
  },
  {
    "text": "and we've done it and it works right so i have this um",
    "start": "461440",
    "end": "467360"
  },
  {
    "text": "kind of courtesy to say that there is a right way",
    "start": "467360",
    "end": "472800"
  },
  {
    "text": "and that's what i try to describe in the docs maybe i wanted it to be just a documentation website with some examples",
    "start": "472800",
    "end": "478160"
  },
  {
    "text": "but eventually i started adventures and it just rolled and rolled and rolled and dropped",
    "start": "478160",
    "end": "483360"
  },
  {
    "text": "that the right way article is actually there in the dogs",
    "start": "483360",
    "end": "488400"
  },
  {
    "text": "but i don't want to keep it just as the docs i want to explain things how",
    "start": "488479",
    "end": "494639"
  },
  {
    "text": "i believe it should be done but it's not just an explanation that's what you find in blogs",
    "start": "494639",
    "end": "501280"
  },
  {
    "text": "explain how things should be done and give couple of examples and then you can make a hello world application",
    "start": "501280",
    "end": "507840"
  },
  {
    "text": "that's not what i want i'm fed up with hello world examples because i want to do a bit more but there is nothing it's",
    "start": "507840",
    "end": "514000"
  },
  {
    "text": "like a wasteland everything stops right there i've written one event i projected one",
    "start": "514000",
    "end": "519680"
  },
  {
    "text": "event it's not only about event sourcing it's like about everything but in particular here",
    "start": "519680",
    "end": "525440"
  },
  {
    "text": "um so eventually is opinionated and you can",
    "start": "525440",
    "end": "530640"
  },
  {
    "text": "see opinionated persons certain about their beliefs express their ideas strongly and often that's what i do here",
    "start": "530640",
    "end": "538079"
  },
  {
    "text": "which means that it's built in a certain way and it's built in certain way not because",
    "start": "539920",
    "end": "545680"
  },
  {
    "text": "i want to expose some or impose some sort of dictatorship of how you build your systems with this libraries if you",
    "start": "545680",
    "end": "551519"
  },
  {
    "text": "decide to do so but because certain things in my opinion need to be done in certain ways so you",
    "start": "551519",
    "end": "557680"
  },
  {
    "text": "don't shoot yourself in the foot because i've done with my colleagues these mistakes in the past and i've seen",
    "start": "557680",
    "end": "563440"
  },
  {
    "text": "other people making the same mistakes all over again and i don't want you to make those mistakes too",
    "start": "563440",
    "end": "570640"
  },
  {
    "text": "and it can save you hell a lot of time so there comes another problem when like",
    "start": "570640",
    "end": "577920"
  },
  {
    "start": "573000",
    "end": "649000"
  },
  {
    "text": "trying to do things yourself because greg was and is famous for saying it's so easy you can do everything yourself",
    "start": "577920",
    "end": "584160"
  },
  {
    "text": "it just takes a day or two or a couple weeks or maybe half a year or maybe you're never done",
    "start": "584160",
    "end": "591120"
  },
  {
    "text": "in two days you can build a quick prototype you can build a very premature set of",
    "start": "591120",
    "end": "598160"
  },
  {
    "text": "base primitives that you can use across in one application for example that's what i did in the book if you go to",
    "start": "598160",
    "end": "604959"
  },
  {
    "text": "book example repository if you even if you've never read the book you can see that there are there is a small library",
    "start": "604959",
    "end": "611360"
  },
  {
    "text": "that has like 15 20 classes that implement the basic things",
    "start": "611360",
    "end": "617279"
  },
  {
    "text": "but that's not production ready you need to do something more to make it production ready and then you",
    "start": "617279",
    "end": "624160"
  },
  {
    "text": "need to main it maintain it and that's the problem so when you stumble upon an issue you start to like okay let me fix",
    "start": "624160",
    "end": "630160"
  },
  {
    "text": "it this is the way i want to do it and then there is another issue there is another issue and of course you start",
    "start": "630160",
    "end": "635839"
  },
  {
    "text": "maintaining this thing along with maintaining your own system so you spend time instead of building your business",
    "start": "635839",
    "end": "641120"
  },
  {
    "text": "applications you start build where you start to maintain your own thing",
    "start": "641120",
    "end": "646480"
  },
  {
    "text": "and that's not let's see if i yeah we're going to make a framework",
    "start": "646480",
    "end": "652560"
  },
  {
    "start": "649000",
    "end": "743000"
  },
  {
    "text": "that's what the companies do every single company that i talk to and i work for and who implement an",
    "start": "652560",
    "end": "658240"
  },
  {
    "text": "adventure system have their own set of libraries because there is just nothing there and some people use event flow",
    "start": "658240",
    "end": "663600"
  },
  {
    "text": "which is decent chris cronin from event store created reactive domain which is also pretty decent",
    "start": "663600",
    "end": "669760"
  },
  {
    "text": "but some of them are dated some of them like we are dotnet six like dotn5 is",
    "start": "669760",
    "end": "675200"
  },
  {
    "text": "legacy and nobody wants to write code and see shop nine and stuff like that so like how to move this forward and",
    "start": "675200",
    "end": "681920"
  },
  {
    "text": "sometimes people who don't do this for living they drop their own creations like open source frameworks sometimes",
    "start": "681920",
    "end": "688079"
  },
  {
    "text": "people build frameworks inside the company they leave it and the framework stops getting being maintained",
    "start": "688079",
    "end": "695360"
  },
  {
    "text": "so it's actually i'm sorry glenn you're here but i have to show this",
    "start": "695360",
    "end": "700640"
  },
  {
    "text": "but you also we we are proud that we've done it in a box this is the abax framework that contains started as an",
    "start": "700640",
    "end": "707200"
  },
  {
    "text": "event sourcing framework and we see how cool we are as a company we have git lab you know",
    "start": "707200",
    "end": "712959"
  },
  {
    "text": "an event store and kafka and everything you see this is how it goes these are",
    "start": "712959",
    "end": "718000"
  },
  {
    "text": "just projects so there are thousands of lines of code",
    "start": "718000",
    "end": "723440"
  },
  {
    "text": "that support different aspects of production ready event sourced application and it's still by far not",
    "start": "723440",
    "end": "729040"
  },
  {
    "text": "complete so it's easy in theory but if you want to",
    "start": "729040",
    "end": "734399"
  },
  {
    "text": "build the production system with it you need to do something else you well not something else you need to do something",
    "start": "734399",
    "end": "739920"
  },
  {
    "text": "in addition right so that's boilerplate",
    "start": "739920",
    "end": "747120"
  },
  {
    "start": "743000",
    "end": "773000"
  },
  {
    "text": "essentially instead of start like you go and say i want to build system with event sourcing where do i start with",
    "start": "747120",
    "end": "752320"
  },
  {
    "text": "like nothing there so let me build something and then you start to write something and then initially it's probably within your app",
    "start": "752320",
    "end": "759600"
  },
  {
    "text": "and then someone else says oh it seems to work fine or maybe you need to spin up another service with the same thing",
    "start": "759600",
    "end": "764800"
  },
  {
    "text": "in the same bonded context say let me share it you put it in the nougat package or stuff like that but",
    "start": "764800",
    "end": "770639"
  },
  {
    "text": "you have a lot of border play code so",
    "start": "770639",
    "end": "776240"
  },
  {
    "start": "773000",
    "end": "923000"
  },
  {
    "text": "event sourcing is easy when you have all the things so you need to have some sort of set of domain model primitives like",
    "start": "776240",
    "end": "782240"
  },
  {
    "text": "supporting entities aggregates if you go with ddd route",
    "start": "782240",
    "end": "787760"
  },
  {
    "text": "you need to have the collect collective changes from from your domain objects you need to support optimistic",
    "start": "787760",
    "end": "794000"
  },
  {
    "text": "concurrency you need to handle different sort of exceptions",
    "start": "794000",
    "end": "799680"
  },
  {
    "text": "you need to have type agnostic sterilization because you cannot just use like when you store events when you",
    "start": "799680",
    "end": "805120"
  },
  {
    "text": "store the type so you need to know how to visualize them right",
    "start": "805120",
    "end": "809839"
  },
  {
    "text": "you don't want to couple yourself to your clr type name because it stops you from refactoring your apps because",
    "start": "810320",
    "end": "815839"
  },
  {
    "text": "messages are persisted forever and stuff like that and you need to be able to read them forever",
    "start": "815839",
    "end": "821680"
  },
  {
    "text": "you need to have a proper events to a support so you can actually persist your events and read them back very fast",
    "start": "821680",
    "end": "829440"
  },
  {
    "text": "for supporting read model queries you need to have real-time subscription to those to the event store that can catch",
    "start": "829440",
    "end": "835680"
  },
  {
    "text": "up and read from the beginning of time projecting to some sort of read model and bring your materialized viewer live",
    "start": "835680",
    "end": "841120"
  },
  {
    "text": "but also we need to continue real time and fetch these events very quickly and project them as well",
    "start": "841120",
    "end": "846320"
  },
  {
    "text": "so you have a very small delay of stale not that stale kind of read models",
    "start": "846320",
    "end": "852880"
  },
  {
    "text": "because they're still used in the user interface but not for making decisions you need to have some sort of",
    "start": "852880",
    "end": "858399"
  },
  {
    "text": "application layer thing that would talk that would sit between the api layer because it's just a transport you want",
    "start": "858399",
    "end": "863600"
  },
  {
    "text": "to implement portion adapters you want to isolate yourself from the transport so application talk to the domain right",
    "start": "863600",
    "end": "869519"
  },
  {
    "text": "and transport talk to the application and you need to handle all sort of scenarios for command handling in the",
    "start": "869519",
    "end": "874720"
  },
  {
    "text": "application layer like failures retries whatever else you need decent",
    "start": "874720",
    "end": "880480"
  },
  {
    "text": "infrastructure support for all these things these are just sort of foundation like the set of obstructions",
    "start": "880480",
    "end": "887120"
  },
  {
    "text": "but you need to connect it to the infrastructure let's say i want to project mongodb how i do that",
    "start": "887120",
    "end": "892880"
  },
  {
    "text": "um i want to use advanced 3db as my investor how i do that",
    "start": "892880",
    "end": "898240"
  },
  {
    "text": "and you need to support of course before you go to production i",
    "start": "898240",
    "end": "904000"
  },
  {
    "text": "hope you agree if you don't reconsider please you need to have high level of observability and",
    "start": "904000",
    "end": "910240"
  },
  {
    "text": "monitoring your applications in order to run it in production because otherwise it's just irresponsible",
    "start": "910240",
    "end": "916720"
  },
  {
    "text": "easy right yeah that actually seems quite a lot",
    "start": "916959",
    "end": "923680"
  },
  {
    "start": "923000",
    "end": "1062000"
  },
  {
    "text": "so i like defined for myself because when i started to write it i have several ways",
    "start": "924399",
    "end": "930320"
  },
  {
    "text": "because i've done it so many times and every time it's a little bit different but okay this is public one this is not",
    "start": "930320",
    "end": "936000"
  },
  {
    "text": "something used by one company or another company or two companies it can be used by many different companies",
    "start": "936000",
    "end": "942639"
  },
  {
    "text": "and people with different level of experience so first thing i would like to do is",
    "start": "942639",
    "end": "948000"
  },
  {
    "text": "that when a developer starts to use adventures there is very little boilerplate you need to introduce in",
    "start": "948000",
    "end": "954880"
  },
  {
    "text": "order to make things work and by doing so i load the entrance barrier to the beautiful world of event",
    "start": "954880",
    "end": "961839"
  },
  {
    "text": "sourcing instead of creating it like you do everything yourself and stuff like that",
    "start": "961839",
    "end": "966959"
  },
  {
    "text": "you actually don't have to do it another thing that well i was",
    "start": "966959",
    "end": "972320"
  },
  {
    "text": "in my book i was trying to implement some functional patterns like um certain things became like business",
    "start": "972320",
    "end": "977920"
  },
  {
    "text": "logic and uh changing the state like this fold function became pure functions but i i i",
    "start": "977920",
    "end": "983920"
  },
  {
    "text": "understood sometime that i am fighting the language c sharp is still object-oriented language",
    "start": "983920",
    "end": "989279"
  },
  {
    "text": "okay let's do it like this because most of the people we talk we love fsharp some of us and we",
    "start": "989279",
    "end": "995040"
  },
  {
    "text": "love functional programming but still do and earn money on writing object-oriented systems",
    "start": "995040",
    "end": "1001120"
  },
  {
    "text": "and object-oriented code it might change in time but so far we see sharp 10 is still the case",
    "start": "1001120",
    "end": "1007040"
  },
  {
    "text": "and i want the thing play nicely with net means that not net 6 introduces minimal api",
    "start": "1007040",
    "end": "1013440"
  },
  {
    "text": "configuration sort of web api and um like",
    "start": "1013440",
    "end": "1018560"
  },
  {
    "text": "last week i built support for that reducing borrow plate even more i'll show you how it's done so with these",
    "start": "1018560",
    "end": "1024079"
  },
  {
    "text": "things in mind i want to show you and how it actually works so i don't have",
    "start": "1024079",
    "end": "1029120"
  },
  {
    "text": "slice left i have one more but we are not done yet",
    "start": "1029120",
    "end": "1035360"
  },
  {
    "text": "so now i'm an old man i need glasses",
    "start": "1035520",
    "end": "1040159"
  },
  {
    "text": "let's see this is the website right it's",
    "start": "1040799",
    "end": "1047438"
  },
  {
    "text": "adventures.dev the thing is that dogs here are heavily obsolete because it talks about",
    "start": "1047439",
    "end": "1053679"
  },
  {
    "text": "legacy version which is from august see",
    "start": "1053679",
    "end": "1058640"
  },
  {
    "start": "1062000",
    "end": "1325000"
  },
  {
    "text": "this is how it looks like this is kind of what i consider a minimum set of things that you need",
    "start": "1063520",
    "end": "1069039"
  },
  {
    "text": "but of course it has certain level of infrastructure support in particular it has google cloud support mongodb",
    "start": "1069039",
    "end": "1075120"
  },
  {
    "text": "rabbitmq which you might not need right the core stuff is here",
    "start": "1075120",
    "end": "1081760"
  },
  {
    "text": "but it's still quite a lot if you look here the quite a lot of stuff and like if you",
    "start": "1081760",
    "end": "1087039"
  },
  {
    "text": "don't use it i'll bet you money start doing it yourself you will end up with this or more",
    "start": "1087039",
    "end": "1094400"
  },
  {
    "text": "so we have serialization metadata handling exception handling diagnostics the application layer how to handle the",
    "start": "1094400",
    "end": "1101120"
  },
  {
    "text": "store some other tools and domain level primitives",
    "start": "1101120",
    "end": "1106400"
  },
  {
    "text": "i introduced messaging in the in the library because or there's a separate library for uh that's called",
    "start": "1106400",
    "end": "1112880"
  },
  {
    "text": "producers because event sourcing is kind of messaging by by default right you",
    "start": "1112880",
    "end": "1119760"
  },
  {
    "text": "produce events you store them but there are these are messages that are important they have an id they have all",
    "start": "1119760",
    "end": "1124799"
  },
  {
    "text": "the tributes of messages that's why it's so easy to use kafka with them because you can just shovel them over",
    "start": "1124799",
    "end": "1131840"
  },
  {
    "text": "so sometimes even in like event source systems often communicate",
    "start": "1132160",
    "end": "1137440"
  },
  {
    "text": "with asynchronous messaging that's kind of that's very easy to build that's why i built this producers when i started to",
    "start": "1137440",
    "end": "1143360"
  },
  {
    "text": "build producers naturally like i say i couldn't really use event store db as a transport so i need something else so i",
    "start": "1143360",
    "end": "1150480"
  },
  {
    "text": "built support for google pub sub because that's what we use in a box but it's pretty easy to build one for",
    "start": "1150480",
    "end": "1156320"
  },
  {
    "text": "i'm confronting myself of course i'm saying that's easy there is an abstraction there is an example how to",
    "start": "1156320",
    "end": "1161679"
  },
  {
    "text": "build the thing for example for to support event hub in azure maybe i can build it myself or maybe i",
    "start": "1161679",
    "end": "1167679"
  },
  {
    "text": "will uh subscriptions the real-time subscriptions that support all sort of",
    "start": "1167679",
    "end": "1173039"
  },
  {
    "text": "things like reaction to domain events like conversion private events to public",
    "start": "1173039",
    "end": "1178320"
  },
  {
    "text": "events and shoveling them over to the broker uh for integration",
    "start": "1178320",
    "end": "1183679"
  },
  {
    "text": "and then um projections with subscriptions the real-time ones to for for materialized",
    "start": "1183679",
    "end": "1189760"
  },
  {
    "text": "views or read models as we call them all the things became actually pretty",
    "start": "1189760",
    "end": "1195679"
  },
  {
    "text": "hardcore because that thing is not easy at all as i found out i knew that before",
    "start": "1195679",
    "end": "1201760"
  },
  {
    "text": "but when i started doing this it became a bit more obvious that you need a bit",
    "start": "1201760",
    "end": "1208640"
  },
  {
    "text": "more than you usually do so um and it goes down to things like",
    "start": "1208640",
    "end": "1214080"
  },
  {
    "text": "registering your thing with the eye container two lines of code instead of 25 stuff let up",
    "start": "1214080",
    "end": "1219360"
  },
  {
    "text": "so but let's see how that actually works i have this sample app that i used in my",
    "start": "1219360",
    "end": "1225360"
  },
  {
    "text": "workshop i had two days workshop about ddd and the event sourcing and yesterday we were only going through",
    "start": "1225360",
    "end": "1231600"
  },
  {
    "text": "event sourcing so this is the app let me run it let's look at the domain model how it's implemented",
    "start": "1231600",
    "end": "1238640"
  },
  {
    "text": "so you can see that this library has no other dependencies that the core",
    "start": "1238640",
    "end": "1244559"
  },
  {
    "text": "part of the adventures which has no dependence except of this serializer on its own and another time because i use",
    "start": "1244559",
    "end": "1250480"
  },
  {
    "text": "it for days and that's how the domain object looks like so basically i separate the state",
    "start": "1250480",
    "end": "1256880"
  },
  {
    "text": "from the aggregate itself so there is logic piece of logic and piece of state and they are kind of they're not",
    "start": "1256880",
    "end": "1261919"
  },
  {
    "text": "independent but they are in different places so in this case i want to book a room",
    "start": "1261919",
    "end": "1269200"
  },
  {
    "text": "i want to ensure that this booking doesn't exist yet i want to call external service to check",
    "start": "1269200",
    "end": "1274960"
  },
  {
    "text": "if the room is available because i don't know it i can see how much money is still",
    "start": "1274960",
    "end": "1280080"
  },
  {
    "text": "outstanding because there is a price of the booking in the results on the prepaid amount and i meet a new event",
    "start": "1280080",
    "end": "1286320"
  },
  {
    "text": "which is the room booked and then i mark this",
    "start": "1286320",
    "end": "1291360"
  },
  {
    "text": "page if necessary and this is another function that checks if the outstanding amount is zero and if so it emits the",
    "start": "1291360",
    "end": "1297280"
  },
  {
    "text": "event called booking fully paid so that is not hard you can see it in",
    "start": "1297280",
    "end": "1302400"
  },
  {
    "text": "all the examples but all this stuff behind it it's already working right so",
    "start": "1302400",
    "end": "1307600"
  },
  {
    "text": "how this works let's run it",
    "start": "1307600",
    "end": "1313120"
  },
  {
    "text": "so i have this device api i put one two three",
    "start": "1316320",
    "end": "1323200"
  },
  {
    "text": "alexa yesterday i was putting 31st of november",
    "start": "1323200",
    "end": "1329520"
  },
  {
    "start": "1325000",
    "end": "1456000"
  },
  {
    "text": "here and i was getting now and we spent like 15 minutes to find out",
    "start": "1329520",
    "end": "1334880"
  },
  {
    "text": "what's wrong and someone said you know i changed logan level from information from",
    "start": "1334880",
    "end": "1340080"
  },
  {
    "text": "warning to information started to work another person came and said i moved that line one this line one and up and",
    "start": "1340080",
    "end": "1347600"
  },
  {
    "text": "started to work and we had all kind of combinations i did all the things because it was like magic nothing worked",
    "start": "1347600",
    "end": "1352799"
  },
  {
    "text": "for some reason i don't know what's happening we found out that 31st of november is not something that exists",
    "start": "1352799",
    "end": "1360799"
  },
  {
    "text": "um [Music] so 100 euros",
    "start": "1360799",
    "end": "1366960"
  },
  {
    "text": "so this is the command right i sent commands through from from my browser to the api api calls the app service an app",
    "start": "1366960",
    "end": "1374240"
  },
  {
    "text": "service called my domain layer and the domain layer says i'm fine it emits an event and the",
    "start": "1374240",
    "end": "1380799"
  },
  {
    "text": "event gets persisted to the store so let's check the store",
    "start": "1380799",
    "end": "1385679"
  },
  {
    "text": "there we go this is the stream of events that's created and there is one event called book room booked and you can see",
    "start": "1386559",
    "end": "1392000"
  },
  {
    "text": "all the stuff in here everything is fine and it's calculated outstanding amount so let's do something else",
    "start": "1392000",
    "end": "1400440"
  },
  {
    "text": "let's supply the discount",
    "start": "1402960",
    "end": "1406399"
  },
  {
    "text": "and that's enough let's go here let's go to the stream and see discount",
    "start": "1411760",
    "end": "1418720"
  },
  {
    "text": "applied and we apply discount there is some domain logic that calculates how much money is still outstanding right",
    "start": "1418720",
    "end": "1424960"
  },
  {
    "text": "there is logic there to call on the discount service to find out how much you need to discount and it says if the",
    "start": "1424960",
    "end": "1431039"
  },
  {
    "text": "discount cost 2021 it will give you health price otherwise it will give you 10 euros",
    "start": "1431039",
    "end": "1437120"
  },
  {
    "text": "unconditionally which is nice that's something you wouldn't do in production systems so",
    "start": "1437120",
    "end": "1445120"
  },
  {
    "text": "it all works fine right just like how how does it get how does it get",
    "start": "1445120",
    "end": "1451039"
  },
  {
    "text": "wired up let's stop this for a moment",
    "start": "1451039",
    "end": "1455600"
  },
  {
    "start": "1456000",
    "end": "1580000"
  },
  {
    "text": "well it's not that hard actually so if you look here these things are almost empty",
    "start": "1457520",
    "end": "1464000"
  },
  {
    "text": "well almost right so we have a application service which does all the things behind the scenes",
    "start": "1464000",
    "end": "1470480"
  },
  {
    "text": "for you you just need to register it's not a registration status it's a sell application service when you can when",
    "start": "1470480",
    "end": "1476559"
  },
  {
    "text": "you construct it these are my command handlers for example the command hundred book room looks like this",
    "start": "1476559",
    "end": "1483600"
  },
  {
    "text": "it just calls booking book room and the booking would be in this case an empty entity because it's new",
    "start": "1483600",
    "end": "1490559"
  },
  {
    "text": "if we say apply discount it operates an existing entity so i need to know how to fetch it so i give it",
    "start": "1490559",
    "end": "1497279"
  },
  {
    "text": "i give the handler the function that will retrieve an id from the command and then i will execute the operation so",
    "start": "1497279",
    "end": "1502880"
  },
  {
    "text": "it's actually pretty easy to understand in my opinion at least i might be biased though",
    "start": "1502880",
    "end": "1508640"
  },
  {
    "text": "so hardest lands in the api well then the api becomes really dumb",
    "start": "1508640",
    "end": "1515200"
  },
  {
    "text": "because it has nothing to do it just needs to it's a transport right so we isolated ourselves",
    "start": "1515200",
    "end": "1521360"
  },
  {
    "text": "we created the port for the application which is the application server and we attached the",
    "start": "1521360",
    "end": "1528000"
  },
  {
    "text": "use the http adapter to call the application service using http api",
    "start": "1528000",
    "end": "1534000"
  },
  {
    "text": "so you see that it's pretty easy you just say this is my method this is my route i get",
    "start": "1534000",
    "end": "1541679"
  },
  {
    "text": "the payload from the body and i call the handle method there is one trick here because this is",
    "start": "1541679",
    "end": "1546880"
  },
  {
    "text": "not the controller base it could be but it's something that basically takes the result of",
    "start": "1546880",
    "end": "1552320"
  },
  {
    "text": "application service handling the command and converses to this one",
    "start": "1552320",
    "end": "1558240"
  },
  {
    "text": "action result because of course you don't want your application server to return the action result",
    "start": "1558240",
    "end": "1563440"
  },
  {
    "text": "and what this thing is action result that's actually pretty interesting because that's also kind of not everyone",
    "start": "1563440",
    "end": "1571679"
  },
  {
    "text": "does this and i think it's extremely useful so remember i executed this thing the first command book room",
    "start": "1571679",
    "end": "1578480"
  },
  {
    "text": "and that's what i got back first of all i got a whole new state of",
    "start": "1578480",
    "end": "1583760"
  },
  {
    "start": "1580000",
    "end": "1663000"
  },
  {
    "text": "my domain object back to the ui so i can show it straight away i don't really needs to query it again because that's",
    "start": "1583760",
    "end": "1589919"
  },
  {
    "text": "what people do this is the state right it gives you the success indication and",
    "start": "1589919",
    "end": "1596400"
  },
  {
    "text": "it gives you the list of changes so let's say you have a vue.js with vrx or you have react application with redux on",
    "start": "1596400",
    "end": "1603200"
  },
  {
    "text": "your front end so instead of clearing the new states that would lead you to the stale",
    "start": "1603200",
    "end": "1609360"
  },
  {
    "text": "materialized view because you do it within the milliseconds or microseconds you can return them the",
    "start": "1609360",
    "end": "1615440"
  },
  {
    "text": "list of events that they know how to apply in their redux mutate or what is called reducers",
    "start": "1615440",
    "end": "1621679"
  },
  {
    "text": "and they update the frontend state instead because the command has been executed they know that it worked",
    "start": "1621679",
    "end": "1628159"
  },
  {
    "text": "so it eliminates so many issues that people usually stumble upon and say this is eventually consistent so what i do is",
    "start": "1628159",
    "end": "1634159"
  },
  {
    "text": "whole crisis right you don't have to do queries when you just done the operation",
    "start": "1634159",
    "end": "1641279"
  },
  {
    "text": "the uh the api can return you the result that tells you what happened right for example if i execute this",
    "start": "1641279",
    "end": "1647840"
  },
  {
    "text": "action again like let me run this",
    "start": "1647840",
    "end": "1652520"
  },
  {
    "text": "okay fine if i execute it again what happens is",
    "start": "1654880",
    "end": "1660480"
  },
  {
    "text": "that i get a result back let's say it's four or nine conflict and there is a",
    "start": "1660480",
    "end": "1666559"
  },
  {
    "start": "1663000",
    "end": "1783000"
  },
  {
    "text": "message saying that update booking with blah blah blah because it already exists you cannot create the same booking twice",
    "start": "1666559",
    "end": "1673600"
  },
  {
    "text": "and there is no new state coming and there are no changes which means that you can also properly render it on the",
    "start": "1673600",
    "end": "1679039"
  },
  {
    "text": "ui without querying anything in my opinion that's pretty cool because",
    "start": "1679039",
    "end": "1684159"
  },
  {
    "text": "i've i rarely seen things like that applied people usually prefer to re-query",
    "start": "1684159",
    "end": "1691120"
  },
  {
    "text": "and the reason for this class to exist the base class is basically to translate the internal",
    "start": "1691120",
    "end": "1697600"
  },
  {
    "text": "result from the application service to this to http code four nine two hundred",
    "start": "1697600",
    "end": "1703120"
  },
  {
    "text": "four four and so on um so it's kind of mediator between the",
    "start": "1703120",
    "end": "1708799"
  },
  {
    "text": "transport in the application and how does it gets",
    "start": "1708799",
    "end": "1715200"
  },
  {
    "text": "like all wired up well this dot net 6 minimal thing api whatever",
    "start": "1715200",
    "end": "1720799"
  },
  {
    "text": "i just configure json i do swagger things like everywhere",
    "start": "1720799",
    "end": "1725919"
  },
  {
    "text": "ignore open telemetry for now we'll get back to it and then i say adventures so that's not",
    "start": "1725919",
    "end": "1731120"
  },
  {
    "text": "something in adventures that's my call here i configure the serializer to work with",
    "start": "1731120",
    "end": "1737279"
  },
  {
    "text": "another time nicely i say i want to have my event store db client i want to aggregate store i want application",
    "start": "1737279",
    "end": "1743120"
  },
  {
    "text": "service i add some services and this is it that",
    "start": "1743120",
    "end": "1748159"
  },
  {
    "text": "and that it start from there it starts to work there is nothing more to do on that on the command side right",
    "start": "1748159",
    "end": "1754240"
  },
  {
    "text": "everything gets executed properly and so on so now i need projections i need to",
    "start": "1754240",
    "end": "1759919"
  },
  {
    "text": "materialize my changes in a query model so i can query it effectively and show efficiently and show it in ui in a",
    "start": "1759919",
    "end": "1765520"
  },
  {
    "text": "different way right have these things let me comment it out",
    "start": "1765520",
    "end": "1771200"
  },
  {
    "text": "and run it",
    "start": "1773760",
    "end": "1777240"
  },
  {
    "text": "and it's so good these things that i just that done on",
    "start": "1781200",
    "end": "1786399"
  },
  {
    "start": "1783000",
    "end": "1853000"
  },
  {
    "text": "the um on like executing those commands they need to reflect in the application or in the database",
    "start": "1786399",
    "end": "1793200"
  },
  {
    "text": "so i have two collections here bookings and my bookings and my book is this the power of event sourcing by turning your",
    "start": "1793200",
    "end": "1800000"
  },
  {
    "text": "database like 90 degrees back and forth because my bookings have a booking id as a",
    "start": "1800000",
    "end": "1806640"
  },
  {
    "text": "primary key of sorts and you can see here is this booking id123 right and all the details",
    "start": "1806640",
    "end": "1812640"
  },
  {
    "text": "but this one allows me to turn it upside down and say the guest would be my booking id or the idea of the document",
    "start": "1812640",
    "end": "1818640"
  },
  {
    "text": "now and if i need to have like booking home things saying show me all my bookings",
    "start": "1818640",
    "end": "1824799"
  },
  {
    "text": "you will see it in one single document i need to run queries for it so i have two projections here",
    "start": "1824799",
    "end": "1830720"
  },
  {
    "text": "let me just make one more booking for myself one two four",
    "start": "1830720",
    "end": "1837760"
  },
  {
    "text": "at the same time on the same date in the same room let's see what happened",
    "start": "1837760",
    "end": "1843760"
  },
  {
    "text": "uh dtt no",
    "start": "1843760",
    "end": "1849640"
  },
  {
    "text": "there we go both of them so i mean i i want i don't want to go to",
    "start": "1851520",
    "end": "1856559"
  },
  {
    "start": "1853000",
    "end": "1942000"
  },
  {
    "text": "details uh about event sourcing but this is a very nice thing of event sourcing that can actually project by the use case",
    "start": "1856559",
    "end": "1863760"
  },
  {
    "text": "right you can create different representations of your data in any database you want just to show it",
    "start": "1863760",
    "end": "1869679"
  },
  {
    "text": "nicely like here is  serves a purpose you can project the sql and project elastic",
    "start": "1869679",
    "end": "1875919"
  },
  {
    "text": "so how is this how is it done",
    "start": "1875919",
    "end": "1880158"
  },
  {
    "text": "well here we go aquarius let's look at my bookings projection",
    "start": "1882880",
    "end": "1890320"
  },
  {
    "text": "that's it i mean of course if you make more things you need to write more code but basically what you write",
    "start": "1891120",
    "end": "1898399"
  },
  {
    "text": "is how the document in gets updated or sql server get updated but you don't really write everything else",
    "start": "1898399",
    "end": "1905200"
  },
  {
    "text": "like how subscription gets wired up how it connects to your event store how it means the checkpoint the offset and the",
    "start": "1905200",
    "end": "1911039"
  },
  {
    "text": "stream and stuff like that serialization digitalization all these things are being handled",
    "start": "1911039",
    "end": "1918159"
  },
  {
    "text": "we also have like we know these are events how we keep them serialized and digital as well civilization is easy you",
    "start": "1918159",
    "end": "1924559"
  },
  {
    "text": "can serialize almost everything um but if i look at event store you can see",
    "start": "1924559",
    "end": "1931360"
  },
  {
    "text": "here this is the event type this kind of like how do i know that i need to visualize to that particular clr type",
    "start": "1931360",
    "end": "1937600"
  },
  {
    "text": "to this one this can't apply it well it's not handled in projection nevertheless",
    "start": "1937600",
    "end": "1942960"
  },
  {
    "text": "well we have this kind of we play the route with different things and people saying okay i need to register",
    "start": "1942960",
    "end": "1949360"
  },
  {
    "text": "my string like the type name in the some sort of map for adventures to know how to",
    "start": "1949360",
    "end": "1955200"
  },
  {
    "text": "deserialize it and i keep forgetting to do this you add more events and if you go it doesn't",
    "start": "1955200",
    "end": "1961039"
  },
  {
    "text": "work and you find it in run time so what you've done is you can annotate your events using this attribute and we will",
    "start": "1961039",
    "end": "1967440"
  },
  {
    "text": "scan assemblies there are your application assemblies find all of them in the register and type map so you don't need to do anything at all",
    "start": "1967440",
    "end": "1974000"
  },
  {
    "text": "which is you can say magic but it's not it's actually like 10 lines of code you can",
    "start": "1974000",
    "end": "1979360"
  },
  {
    "text": "look it up it all works so um let's see where we are",
    "start": "1979360",
    "end": "1985919"
  },
  {
    "text": "another thing is about this needs for um like if you have two different band",
    "start": "1988480",
    "end": "1994640"
  },
  {
    "text": "contacts maybe sometimes within band context you have two different services or applications and they need to talk to",
    "start": "1994640",
    "end": "2000240"
  },
  {
    "text": "each other there is the thing i showed on the slides that there was the publishing domain events to the broker for the",
    "start": "2000240",
    "end": "2007200"
  },
  {
    "text": "other service to consume is clear anti-pattern because they don't share the same language and by doing so so you",
    "start": "2007200",
    "end": "2013360"
  },
  {
    "text": "couple your domain model and the main events are part of your domain model to the public contract",
    "start": "2013360",
    "end": "2019360"
  },
  {
    "text": "because you publish it to the outside it automatically becomes a public contract you can't refactor your domain model",
    "start": "2019360",
    "end": "2024640"
  },
  {
    "text": "anymore because every change in your event schema will lead to like great consumers right so you don't want to do",
    "start": "2024640",
    "end": "2031519"
  },
  {
    "text": "that therefore you need you're usually introduced at some point not like greenfield day two or day three like but",
    "start": "2031519",
    "end": "2038559"
  },
  {
    "text": "maybe months to when you're ready to go to production then you say i want to have a stable messaging api",
    "start": "2038559",
    "end": "2045039"
  },
  {
    "text": "for my events go to integration events and publish them somewhere else so",
    "start": "2045039",
    "end": "2051358"
  },
  {
    "text": "then you need some kind of transformation you might even enrich your events that's going out you might split them into or stuff like that and",
    "start": "2051359",
    "end": "2058158"
  },
  {
    "text": "you may support different api versions for public contracts so that's that's basically where",
    "start": "2058159",
    "end": "2063839"
  },
  {
    "text": "producers came from because integration concern is a bit different from event sourcing as such",
    "start": "2063839",
    "end": "2069919"
  },
  {
    "text": "so if we look here in payments we have the thing that's called",
    "start": "2069919",
    "end": "2077599"
  },
  {
    "text": "what i use i created this thing called shovel so you literally take a shovel",
    "start": "2077599",
    "end": "2082960"
  },
  {
    "text": "and you receive events from event store and you shovel it to some kind of broker",
    "start": "2082960",
    "end": "2089280"
  },
  {
    "text": "and you can do transformation in between so shovelworks extreme it's on the",
    "start": "2089280",
    "end": "2094720"
  },
  {
    "text": "surface it's secretly simple inside is pretty complex but what you need to do as a developer using this library is",
    "start": "2094720",
    "end": "2101680"
  },
  {
    "text": "basically say i'm going to subscribe using this subscription and use that producer it could pop sub",
    "start": "2101680",
    "end": "2108000"
  },
  {
    "text": "producer rabbitmq producer whatever you support and i need to run this transformation in",
    "start": "2108000",
    "end": "2113280"
  },
  {
    "text": "between and transformation function looks like this so basically he says oh this is this is like custom code totally",
    "start": "2113280",
    "end": "2120240"
  },
  {
    "text": "custom you need to find out what message you got from the store",
    "start": "2120240",
    "end": "2125359"
  },
  {
    "text": "and you create a new message in this case i have an integration event and you need to",
    "start": "2125359",
    "end": "2130720"
  },
  {
    "text": "tell the shovel where to put it in which stream or topic whatever",
    "start": "2130720",
    "end": "2135920"
  },
  {
    "text": "so here i convert from one contract to another let's see how that works",
    "start": "2135920",
    "end": "2141760"
  },
  {
    "text": "so my booking is running i just do the payment thing",
    "start": "2141760",
    "end": "2145838"
  },
  {
    "text": "okay now i have this let's say payment one and then booking",
    "start": "2150000",
    "end": "2157119"
  },
  {
    "text": "id one two three and there was 90 euros outstanding as far as i remember",
    "start": "2157119",
    "end": "2162320"
  },
  {
    "text": "i have specified euros mom let's see what happens",
    "start": "2162320",
    "end": "2170000"
  },
  {
    "text": "so first we see that in the payment context there was an event produced in the",
    "start": "2170839",
    "end": "2175920"
  },
  {
    "text": "payment stream so payments recorded in a different service i just run it in a single store because",
    "start": "2175920",
    "end": "2181200"
  },
  {
    "text": "for convenience so i don't need to switch between infrastructure but ideally they should be used in different stores they don't know about each other",
    "start": "2181200",
    "end": "2187280"
  },
  {
    "text": "that much except the public contract which is produced so this is the main event right payments recorded fine so it",
    "start": "2187280",
    "end": "2194160"
  },
  {
    "text": "comes from stripe or whatever and then my shovel using that function which i just showed you this small one",
    "start": "2194160",
    "end": "2201440"
  },
  {
    "text": "it produced a new one in the integration stream or topic in pub sub or rapturemq",
    "start": "2201440",
    "end": "2206560"
  },
  {
    "text": "exchange conveying this information to the outside and when this is",
    "start": "2206560",
    "end": "2212800"
  },
  {
    "text": "handled in the booking context what happens is that it receives it there was it here",
    "start": "2212800",
    "end": "2220240"
  },
  {
    "text": "and then it says i recorded the payment inside my booking and because the amount dropped to zero i",
    "start": "2220400",
    "end": "2226480"
  },
  {
    "text": "marked this booking as fully paid so this is pure integration and you can see is in the booking itself",
    "start": "2226480",
    "end": "2234000"
  },
  {
    "text": "uh here this is john",
    "start": "2234000",
    "end": "2239200"
  },
  {
    "text": "it is done by using the integration subscription so this is how it works",
    "start": "2239200",
    "end": "2244480"
  },
  {
    "text": "and what is the event handler well it's this one so i need to take the dependency on the app service that's why",
    "start": "2244480",
    "end": "2250800"
  },
  {
    "text": "you want this service to exist you don't want to call aggregate store from the api controller",
    "start": "2250800",
    "end": "2256400"
  },
  {
    "text": "and stuff like that you have messaging api you have http api grpc api want to",
    "start": "2256400",
    "end": "2261680"
  },
  {
    "text": "isolate yourself from transport here we use a different transport but the same command service",
    "start": "2261680",
    "end": "2267359"
  },
  {
    "text": "and then what we do well we just call the command service to",
    "start": "2267359",
    "end": "2272880"
  },
  {
    "text": "handle a command we convert the event we received integration event we convert to command and called app service",
    "start": "2272880",
    "end": "2279280"
  },
  {
    "text": "so the same loop going on and on like if you ever seen this",
    "start": "2279280",
    "end": "2284720"
  },
  {
    "text": "thing from alberto brandolini i think we have it in chat",
    "start": "2284720",
    "end": "2290640"
  },
  {
    "text": "the picture that explains almost everything right",
    "start": "2292800",
    "end": "2297960"
  },
  {
    "text": "so it's a bit small but basically the user somehow sends the commands to to your",
    "start": "2300480",
    "end": "2307040"
  },
  {
    "text": "system the system engages the aggregate or whatever it produces an event the event",
    "start": "2307040",
    "end": "2312960"
  },
  {
    "text": "can go to the to another system this lilac sticky note which we observed in payments and then",
    "start": "2312960",
    "end": "2319760"
  },
  {
    "text": "it issues a command so we had this record payment payment recorded it goes",
    "start": "2319760",
    "end": "2324880"
  },
  {
    "text": "to the integration shovel produce the command record payment in booking and",
    "start": "2324880",
    "end": "2330240"
  },
  {
    "text": "another site this the same event gets stored and it projects to the read model and my bookings and a booking state so",
    "start": "2330240",
    "end": "2337200"
  },
  {
    "text": "and it goes on and on the old systems work like this not in all systems events i expressed",
    "start": "2337200",
    "end": "2342560"
  },
  {
    "text": "explicitly so",
    "start": "2342560",
    "end": "2347200"
  },
  {
    "text": "i hope that seems kind of okay-ish",
    "start": "2347680",
    "end": "2353040"
  },
  {
    "text": "what is what what i mean is that this thing is is not hard like the code that you write is mostly business code there",
    "start": "2353040",
    "end": "2359599"
  },
  {
    "text": "is no border plate as such um there is one interesting thing that i",
    "start": "2359599",
    "end": "2364720"
  },
  {
    "text": "built in terms of this new minimal api stuff if you look here in integration no no no",
    "start": "2364720",
    "end": "2372000"
  },
  {
    "text": "no wait a second this is a payment command service you've seen this viagra api right here",
    "start": "2372000",
    "end": "2378720"
  },
  {
    "text": "it produced a normal endpoint but the contract was saying i returned to 100 i returned",
    "start": "2378720",
    "end": "2387599"
  },
  {
    "text": "400 404 and 49. so all i needed to do to make this whole",
    "start": "2387599",
    "end": "2394400"
  },
  {
    "text": "thing work is to so this these are booking commands",
    "start": "2394400",
    "end": "2400240"
  },
  {
    "text": "just let me show you the difference just plain records right",
    "start": "2400240",
    "end": "2407200"
  },
  {
    "text": "and then i need a controller this is the payment command and i tell you there is no controller in this",
    "start": "2407200",
    "end": "2413760"
  },
  {
    "text": "payment application because i say these static class payment commands inside are all commands about",
    "start": "2413760",
    "end": "2420880"
  },
  {
    "text": "my payment aggregate and this is the http command i will create an endpoint for you with verb",
    "start": "2420880",
    "end": "2426160"
  },
  {
    "text": "post and the route will match the record payment record name of course you would argue that you can",
    "start": "2426160",
    "end": "2433440"
  },
  {
    "text": "you will break the refactoring i contradict myself so i change the name of this record and the api goes to hell",
    "start": "2433440",
    "end": "2439119"
  },
  {
    "text": "while there is a parameter for http commands attribute that we can specify the route",
    "start": "2439119",
    "end": "2445040"
  },
  {
    "text": "explicitly so so basically another piece of boilerplates",
    "start": "2445040",
    "end": "2450400"
  },
  {
    "text": "the controller that needs to talk to app service gets removed and taken care by sort of it's not a convention really but",
    "start": "2450400",
    "end": "2456800"
  },
  {
    "text": "you annotate your thing i say i want to expose it to http api somewhat you can see it closer to like protobuf",
    "start": "2456800",
    "end": "2463359"
  },
  {
    "text": "definitions where you can annotate it i want for this product contract http api as well and it will create it for you",
    "start": "2463359",
    "end": "2469760"
  },
  {
    "text": "stuff like that but there is no code generation here it just uses a normal.net code you can find it in the",
    "start": "2469760",
    "end": "2475920"
  },
  {
    "text": "ventures repository it's just like 20 lines of code",
    "start": "2475920",
    "end": "2482240"
  },
  {
    "text": "but the last bit remember i talked that you cannot really put persistent production unless you properly observe",
    "start": "2483040",
    "end": "2488640"
  },
  {
    "text": "it adventurous is observed on",
    "start": "2488640",
    "end": "2494560"
  },
  {
    "text": "like all the levels so let me just run this again so i can show you some metrics oh it's already no",
    "start": "2494560",
    "end": "2500480"
  },
  {
    "text": "it's not running",
    "start": "2500480",
    "end": "2503119"
  },
  {
    "text": "it executes so",
    "start": "2506480",
    "end": "2511599"
  },
  {
    "text": "this is zipkin you know what zipkin is you know what upper tracing is open",
    "start": "2511599",
    "end": "2517839"
  },
  {
    "text": "telemetry zipkin is this lightweight of jager so if you ever worked with collected traces",
    "start": "2517839",
    "end": "2524240"
  },
  {
    "start": "2519000",
    "end": "2685000"
  },
  {
    "text": "with jager you zipkin runs without any persistence right now in memory and just collects",
    "start": "2524240",
    "end": "2530400"
  },
  {
    "text": "traces and allows me to visualize it's very lightweight so",
    "start": "2530400",
    "end": "2536000"
  },
  {
    "text": "what do i have well look at this this is this the payment thing that i've",
    "start": "2536000",
    "end": "2541920"
  },
  {
    "text": "done so how does it look like from the global perspective",
    "start": "2541920",
    "end": "2548560"
  },
  {
    "text": "like we remember we're running two distinct services that are not connected to each other other than through the broker the fact they are in the same",
    "start": "2548560",
    "end": "2555200"
  },
  {
    "text": "solution doesn't mean that they they are two different different applications right they don't know about each other",
    "start": "2555200",
    "end": "2561040"
  },
  {
    "text": "so what we've got the payment received record payment http this is",
    "start": "2561040",
    "end": "2567520"
  },
  {
    "text": "traced by um instrumented by the opencylinder instrumentation which is out of the box available i will show how",
    "start": "2567520",
    "end": "2573920"
  },
  {
    "text": "it's done but i'm doing openslam should talk later today last slot of the day so",
    "start": "2573920",
    "end": "2579040"
  },
  {
    "text": "if you're interested more to know more you can come over and then it calls my command service",
    "start": "2579040",
    "end": "2586480"
  },
  {
    "text": "and my command service calls event store append because it's new payment it",
    "start": "2586480",
    "end": "2592400"
  },
  {
    "text": "doesn't read anything and then it calls event stores through grpc",
    "start": "2592400",
    "end": "2599520"
  },
  {
    "text": "this in the same service in the payment service there is this shovel thing right it consumes an event it handles and",
    "start": "2599839",
    "end": "2605599"
  },
  {
    "text": "produces one which is a new one it puts it in the payment integration",
    "start": "2605599",
    "end": "2610960"
  },
  {
    "text": "and it's now called booking payment recorders the one we saw in integration stream",
    "start": "2610960",
    "end": "2616560"
  },
  {
    "text": "and bookings get it say look because they start to handle this event",
    "start": "2616560",
    "end": "2623200"
  },
  {
    "text": "they need to retrieve the booking with id one two three of course they call event store again",
    "start": "2623200",
    "end": "2629760"
  },
  {
    "text": "and then they append a new event actually too it's a payment recorded in",
    "start": "2629760",
    "end": "2635520"
  },
  {
    "text": "the booking and booking fully paid these events go forwards",
    "start": "2635520",
    "end": "2641040"
  },
  {
    "text": "and get consumed by my projections so you can see that it's booking projections and this one is",
    "start": "2641040",
    "end": "2646800"
  },
  {
    "text": "so where is it this book in state projection and this one is",
    "start": "2646800",
    "end": "2652560"
  },
  {
    "text": "both of them are like that and this one we can state and this one",
    "start": "2652560",
    "end": "2658720"
  },
  {
    "text": "we can state and this one",
    "start": "2658720",
    "end": "2663160"
  },
  {
    "text": "oh wait a second",
    "start": "2664880",
    "end": "2667920"
  },
  {
    "text": "reset route yeah fine so here in the phone consumer you can",
    "start": "2670079",
    "end": "2676560"
  },
  {
    "text": "state state state oh that was record payment payment",
    "start": "2676560",
    "end": "2682160"
  },
  {
    "text": "decision handler there was somewhere here in this list of",
    "start": "2682160",
    "end": "2687920"
  },
  {
    "text": "spams there is a spam that actually shows my bookings but nevertheless the point is that you see that the whole",
    "start": "2687920",
    "end": "2694160"
  },
  {
    "text": "trace goes over the service boundaries and it like even",
    "start": "2694160",
    "end": "2700160"
  },
  {
    "text": "when my subscriptions are pretty tricky in terms of like pretty clever so when they read from event store like receive",
    "start": "2700160",
    "end": "2705920"
  },
  {
    "text": "events from event store one of the things with subscriptions that you read one event you process it",
    "start": "2705920",
    "end": "2712640"
  },
  {
    "text": "and then you read the next event so you can you get a combined latency of reads and writes as your total agency of event",
    "start": "2712640",
    "end": "2719359"
  },
  {
    "text": "handling in projections if you parallelize this you say i read read read and write write write in",
    "start": "2719359",
    "end": "2725280"
  },
  {
    "text": "another thread it goes faster so that's what it does it actually separates the reads from writes in subscriptions",
    "start": "2725280",
    "end": "2733839"
  },
  {
    "text": "um there was another cool thing in in in subscriptions and adventures you can actually partition your subscription in",
    "start": "2734079",
    "end": "2741200"
  },
  {
    "text": "memory using a given partition key and i have a test",
    "start": "2741200",
    "end": "2746880"
  },
  {
    "text": "that runs the same set of events that random events 10 000 of them and it projects them sequentially or",
    "start": "2746880",
    "end": "2753280"
  },
  {
    "text": "partitioned with 10 consumers 10 10 hundreds in parallel like",
    "start": "2753280",
    "end": "2758720"
  },
  {
    "text": "so you increase the concurrency level to 10",
    "start": "2758720",
    "end": "2764160"
  },
  {
    "text": "and i got eight times speed improvement and they were having delay like five",
    "start": "2764160",
    "end": "2769359"
  },
  {
    "text": "milliseconds simulating database call so one of the things people say my",
    "start": "2769359",
    "end": "2774720"
  },
  {
    "text": "projections are slow and i get stale data because i receive like thousands of them per second my",
    "start": "2774720",
    "end": "2780880"
  },
  {
    "text": "linear thing cannot cope with that and say can you parallelize your calls to the database you say yeah my mongodb",
    "start": "2780880",
    "end": "2786480"
  },
  {
    "text": "cluster or atlas supports 50 000 connections i can call it in parallel i'll use this and then we'll have eight",
    "start": "2786480",
    "end": "2792160"
  },
  {
    "text": "times eight times faster projection and it solves a lot of issues",
    "start": "2792160",
    "end": "2797280"
  },
  {
    "text": "nevertheless get back to observability you can see that this operation goes over a lot of",
    "start": "2797280",
    "end": "2803359"
  },
  {
    "text": "different places and you can see them all right and it was one more operation",
    "start": "2803359",
    "end": "2809040"
  },
  {
    "text": "in here so yeah that i need to reset the route",
    "start": "2809040",
    "end": "2815839"
  },
  {
    "text": "basically when i was trying to i think it's gone now when i was trying to read the stream you will see that there is an",
    "start": "2815839",
    "end": "2821520"
  },
  {
    "text": "error you can see this the the where it actually occurred i think i can do it still here book",
    "start": "2821520",
    "end": "2828560"
  },
  {
    "text": "again right so query",
    "start": "2828560",
    "end": "2834400"
  },
  {
    "text": "a few seconds ago here yeah this is an error spam",
    "start": "2835680",
    "end": "2841440"
  },
  {
    "text": "right and sometimes you observe your thing to go slow but you don't know what it is",
    "start": "2841440",
    "end": "2848160"
  },
  {
    "start": "2842000",
    "end": "2970000"
  },
  {
    "text": "and you have just instrumented your api which is by default right that's easy thing to do you just drop in the thing",
    "start": "2848160",
    "end": "2854400"
  },
  {
    "text": "and you already have your api instrumented but then without the other parts of the application instrument that",
    "start": "2854400",
    "end": "2860240"
  },
  {
    "text": "you don't know where it becomes slow and here you can see that appending in events to like sending it",
    "start": "2860240",
    "end": "2867119"
  },
  {
    "text": "through the rpc to events through db is not that slow everything else is a bit slow maybe",
    "start": "2867119",
    "end": "2873280"
  },
  {
    "text": "there is some gi thing that is lazy instantiate whatever the point is that or maybe this is how",
    "start": "2873280",
    "end": "2879119"
  },
  {
    "text": "exceptions are working in net i don't know but it tells me that some stuff can be",
    "start": "2879119",
    "end": "2884839"
  },
  {
    "text": "optimized one thing to watch in events or systems like i told you about slow subscriptions",
    "start": "2884839",
    "end": "2890800"
  },
  {
    "text": "and stuff like that and it could lead for your system to be lagging behind so",
    "start": "2890800",
    "end": "2895839"
  },
  {
    "text": "like your system has the main operations going on and producing let's say",
    "start": "2895839",
    "end": "2901599"
  },
  {
    "text": "100 events per second and you have your read models in sql server and the sql",
    "start": "2901599",
    "end": "2908240"
  },
  {
    "text": "server is slow because it's like someone decided to remove half of the indices and stuff like that or whatever",
    "start": "2908240",
    "end": "2913599"
  },
  {
    "text": "all now the other way around they decided to create southern indices and transactions become slow",
    "start": "2913599",
    "end": "2918960"
  },
  {
    "text": "and uh what you need to see that's basically it's okay to have some staleness there",
    "start": "2918960",
    "end": "2924640"
  },
  {
    "text": "so we can overcome stillness with the result that the ventures returns to the eye for example but at some point you",
    "start": "2924640",
    "end": "2929680"
  },
  {
    "text": "need to go to the list and see your data right so what's the problem with that if you",
    "start": "2929680",
    "end": "2935280"
  },
  {
    "text": "don't monitor how far your tail of your detail of your subscription",
    "start": "2935280",
    "end": "2941520"
  },
  {
    "text": "how far it is from the tale of your stream right you don't know how stale your",
    "start": "2941520",
    "end": "2947040"
  },
  {
    "text": "projections are you read models and then like how hard how how good your read models",
    "start": "2947040",
    "end": "2953680"
  },
  {
    "text": "representing the reality so we provide a couple of ways to do it in",
    "start": "2953680",
    "end": "2960480"
  },
  {
    "text": "particular it's localhost five thousand",
    "start": "2960480",
    "end": "2966920"
  },
  {
    "start": "2970000",
    "end": "3200000"
  },
  {
    "text": "um eventus collects a lot of metrics which are abstraction",
    "start": "2970000",
    "end": "2975280"
  },
  {
    "text": "or using abstraction from latest package from dot net six which is also available",
    "start": "2975280",
    "end": "2980800"
  },
  {
    "text": "in five and applying open telemetry just saying out",
    "start": "2980800",
    "end": "2987359"
  },
  {
    "text": "adventurous monitoring and other ventures traces when you configure open telemetry will instrument the whole",
    "start": "2987359",
    "end": "2994240"
  },
  {
    "text": "thing out of the box and these metrics are like just see this bit um where is it here",
    "start": "2994240",
    "end": "3003440"
  },
  {
    "text": "this bit here is the uh this is the same histogram it just has a cardinality by",
    "start": "3003440",
    "end": "3009920"
  },
  {
    "text": "status code this is four or nine and this is 200. it's the same histogram it splits things to buckets you can observe",
    "start": "3009920",
    "end": "3016319"
  },
  {
    "text": "this is default uh part of the openglimetry.net you just drop a package and it works right this",
    "start": "3016319",
    "end": "3022319"
  },
  {
    "text": "is hp what do we have here we have event store",
    "start": "3022319",
    "end": "3027839"
  },
  {
    "text": "histogram that does the same but for internals of adventures how fast you read events and how often",
    "start": "3027920",
    "end": "3035119"
  },
  {
    "text": "and how fast and often you append events it gives you the sum of uh of the like",
    "start": "3035119",
    "end": "3041520"
  },
  {
    "text": "how long all the operations executed the number of those operations and so on is force but this one",
    "start": "3041520",
    "end": "3047760"
  },
  {
    "text": "what is this this is the application service how fast and slower it processes commands",
    "start": "3047760",
    "end": "3053200"
  },
  {
    "text": "this is the subscription metrics quite a lot of them because they have cardinality by subscription type id and",
    "start": "3053200",
    "end": "3059359"
  },
  {
    "text": "event type so you can put different graphs on top of it but these two are most important ones",
    "start": "3059359",
    "end": "3066559"
  },
  {
    "text": "this is the gap in count and this is gap in seconds and right now i have some small issue",
    "start": "3066559",
    "end": "3072000"
  },
  {
    "text": "but i promise i will fix it because my system is not under stress it's not receiving any events so the gap is",
    "start": "3072000",
    "end": "3077599"
  },
  {
    "text": "growing i say the last event i processed was 803 seconds ago because i don't",
    "start": "3077599",
    "end": "3082960"
  },
  {
    "text": "receive anything new but here is the count",
    "start": "3082960",
    "end": "3088000"
  },
  {
    "text": "discount is strange because event store db has this weird thing with commit position on the old stream but just",
    "start": "3088000",
    "end": "3094880"
  },
  {
    "text": "ignore it for now it's negative so it's good but this supposed to be like this zero everything is processed and if you can",
    "start": "3094880",
    "end": "3102240"
  },
  {
    "text": "have one two ten maybe even thousands and you can have a time of ten milliseconds or one",
    "start": "3102240",
    "end": "3108839"
  },
  {
    "text": "minute but it needs to be within the sla that you establish how fast my read",
    "start": "3108839",
    "end": "3113920"
  },
  {
    "text": "models need to update how big the lag of subscriptions i can tolerate within my system of certain parts of the system",
    "start": "3113920",
    "end": "3122079"
  },
  {
    "text": "so by measuring this and setting alerts to all the things you can understand how your system behaves and when you need to",
    "start": "3122079",
    "end": "3128240"
  },
  {
    "text": "intervene and this part is missing badly in many many systems i've seen because people",
    "start": "3128240",
    "end": "3135040"
  },
  {
    "text": "run event source quite complex system in production don't know how stale the data",
    "start": "3135040",
    "end": "3140240"
  },
  {
    "text": "the data is and how the system actually behaves because the spans give you idea how",
    "start": "3140240",
    "end": "3145359"
  },
  {
    "text": "where do your message go basically you publish a message and go somewhere and you don't even know where",
    "start": "3145359",
    "end": "3150400"
  },
  {
    "text": "and someone comes to you and say you know i'm calling you from hong kong i consume a message my application crash what's going on i'm not even aware that",
    "start": "3150400",
    "end": "3156960"
  },
  {
    "text": "you're consuming it with traces if you use distributed traces collected to some decent api",
    "start": "3156960",
    "end": "3162480"
  },
  {
    "text": "provider you will have everything in one place and everyone supports it like datadog new relic",
    "start": "3162480",
    "end": "3167599"
  },
  {
    "text": "elastic apm azure whatever up insides x-ray in aws and stackdriver and google",
    "start": "3167599",
    "end": "3176880"
  },
  {
    "text": "so where we just what are we supposed to end it's like six minutes left or we're",
    "start": "3177520",
    "end": "3182720"
  },
  {
    "text": "ready now i want to get back to",
    "start": "3182720",
    "end": "3189599"
  },
  {
    "text": "this thing which is called the slide deck",
    "start": "3189599",
    "end": "3195558"
  },
  {
    "text": "and see what else i have future plans",
    "start": "3196559",
    "end": "3202720"
  },
  {
    "start": "3200000",
    "end": "3425000"
  },
  {
    "text": "um right now this is like there are a bunch of people using it but what i'm aware of",
    "start": "3203280",
    "end": "3208880"
  },
  {
    "text": "and what i'm working with is currently uh in airbox we're building gigantic systems that's going to replace another",
    "start": "3208880",
    "end": "3214480"
  },
  {
    "text": "gigantic it's going to replace the gigantic system part of the mallet and take over the like quarter business",
    "start": "3214480",
    "end": "3220640"
  },
  {
    "text": "events not even trip processing and make it event source now it's all sql based",
    "start": "3220640",
    "end": "3227839"
  },
  {
    "text": "because we want to scale and this allows us to scale more because we do have like",
    "start": "3227839",
    "end": "3234480"
  },
  {
    "text": "we don't have different parts of the system okay i don't want to go to details there is a bug stand over here talk to the",
    "start": "3234480",
    "end": "3240400"
  },
  {
    "text": "guys they know about it but the point is that it's this system will be processing one half no about 10 million events per",
    "start": "3240400",
    "end": "3247920"
  },
  {
    "text": "day and relatively soon and we already testing it on on these volumes right now in safety",
    "start": "3247920",
    "end": "3253760"
  },
  {
    "text": "environments so it works really well but still",
    "start": "3253760",
    "end": "3260480"
  },
  {
    "text": "i'm preparing the release 0.6.0 and has a lot of stuff including the the observability",
    "start": "3260480",
    "end": "3266960"
  },
  {
    "text": "pluralized subscriptions some decent level of concurrency handling and bunch of other things",
    "start": "3266960",
    "end": "3273680"
  },
  {
    "text": "and of course most of the things are not documented they are documented in the api though",
    "start": "3273680",
    "end": "3279280"
  },
  {
    "text": "using xml comments i'm going to document them properly this month and the interesting thing i want to do",
    "start": "3279280",
    "end": "3285599"
  },
  {
    "text": "because developers sometimes suffer like i need to go to my event store which doesn't always have a ui like advanced or db i want to read the stream of a",
    "start": "3285599",
    "end": "3292160"
  },
  {
    "text": "single aggregate and i want to see what aggregate state is without making a projection for it",
    "start": "3292160",
    "end": "3297920"
  },
  {
    "text": "i already started to make a tool that make it happen that it would be very much like the react devtools and you can",
    "start": "3297920",
    "end": "3303760"
  },
  {
    "text": "even have a time machine go back and forth but only in like in memory you don't persist anything but you can",
    "start": "3303760",
    "end": "3309359"
  },
  {
    "text": "actually see how it changed your state changes and it's surprisingly easy to do",
    "start": "3309359",
    "end": "3314720"
  },
  {
    "text": "and the reason pr to do the kafka producer and we want to wrap it up and have a producer and subscription because that's something we use in about so one",
    "start": "3314720",
    "end": "3321119"
  },
  {
    "text": "of the things we do with adventures like we use the tool we bring it in and i'm very very excited about bringing",
    "start": "3321119",
    "end": "3328160"
  },
  {
    "text": "things to serverless world but there is a big obstacle there like how do you create real-time subscription",
    "start": "3328160",
    "end": "3335200"
  },
  {
    "text": "that needs to run continuously and call the serverless functions the lambdas and stuff like that sequentially in order",
    "start": "3335200",
    "end": "3342880"
  },
  {
    "text": "that is an interesting challenge and i want to do it and i think i will be able to do it like either before the end of december",
    "start": "3342880",
    "end": "3349599"
  },
  {
    "text": "or in january and i'm looking like if you want to use something else because we only support",
    "start": "3349599",
    "end": "3354720"
  },
  {
    "text": "event store db you can implement the interface i event store and it will work so you can use something like martin was",
    "start": "3354720",
    "end": "3361119"
  },
  {
    "text": "postgres cosmos db i heard people do it and stuff like that uh if you need any help i can",
    "start": "3361119",
    "end": "3369119"
  },
  {
    "text": "kind of advise you what characteristics of event store needs to be supported but remember it needs subscriptions",
    "start": "3369119",
    "end": "3377200"
  },
  {
    "text": "these are the links but it's easy to find if you can pronounce the word you can google it and",
    "start": "3377200",
    "end": "3382640"
  },
  {
    "text": "you will find it and if there are are there any",
    "start": "3382640",
    "end": "3388839"
  },
  {
    "text": "questions i can't see you so if you just shout out if you want to have any questions",
    "start": "3388839",
    "end": "3395520"
  },
  {
    "text": "no questions i'm here for the rest of the conference so just come over if you want to",
    "start": "3395839",
    "end": "3402720"
  },
  {
    "text": "learn more about opentelemetryin.net and new apis activity source and stuff like that i will be talking about this later today",
    "start": "3402720",
    "end": "3410640"
  },
  {
    "text": "thank you very much",
    "start": "3410640",
    "end": "3414119"
  },
  {
    "text": "you",
    "start": "3425599",
    "end": "3427680"
  }
]