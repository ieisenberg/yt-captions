[
  {
    "text": "okay then I think we can start thank you for coming I am known for having lots of",
    "start": "6589",
    "end": "16830"
  },
  {
    "text": "pictures in my presentations it's so it's a lot firmer for me as well for remembering what I want to say because I",
    "start": "16830",
    "end": "22320"
  },
  {
    "text": "kind of think it through while I choose the pictures and everything but this one is kind of fun in many different ways",
    "start": "22320",
    "end": "29570"
  },
  {
    "text": "because when I found it I was looking for something I have something would like with containers and still had some graffiti art on it but as you will see",
    "start": "29570",
    "end": "37950"
  },
  {
    "text": "throughout the presentation is that a chromium based browser like Vivaldi or Chrome or opera or brain is actually",
    "start": "37950",
    "end": "46230"
  },
  {
    "text": "consists of many different processes and you've probably seen that if you looked on your computer there's lots of processes running but all together they",
    "start": "46230",
    "end": "53340"
  },
  {
    "text": "try to make one single picture so usually I have like a plan behind my",
    "start": "53340",
    "end": "59309"
  },
  {
    "text": "pictures I just don't tell anybody but this one I I told you okay",
    "start": "59309",
    "end": "65128"
  },
  {
    "text": "so we're going to talk about Linux security mostly but we're going to you",
    "start": "65129",
    "end": "71310"
  },
  {
    "text": "to do it by talking about the chromium sandbox and whom I I'm Patricia OS",
    "start": "71310",
    "end": "78180"
  },
  {
    "text": "currently I'm a consultant for my own company called turtleseg I started my",
    "start": "78180",
    "end": "83820"
  },
  {
    "text": "career working for opera software I'm working on the original opera browser then I was a consultant for a couple of",
    "start": "83820",
    "end": "91590"
  },
  {
    "text": "years as a Java consultant and then I went back to C++ which was my main language at opera to Cisco where I",
    "start": "91590",
    "end": "99150"
  },
  {
    "text": "worked on embed embedded software for telepresence systems and then I went",
    "start": "99150",
    "end": "106110"
  },
  {
    "text": "back to making a browser again and worked for Vivaldi and I did that until",
    "start": "106110",
    "end": "111180"
  },
  {
    "text": "last summer when I started off on my own oh and and okay in norway i'm also known",
    "start": "111180",
    "end": "119460"
  },
  {
    "text": "for making lots of fuss about elections but you know i don't put that up there because i find it embarrassing",
    "start": "119460",
    "end": "126710"
  },
  {
    "text": "okay so basically remote code execution is what browsers do and that is",
    "start": "126710",
    "end": "132180"
  },
  {
    "text": "something that we kind of have to think about when you think about how how browsers are designed today we browsers are basically",
    "start": "132180",
    "end": "140129"
  },
  {
    "text": "an application that downloads random code from the internet and executes them on your machine that is that is the",
    "start": "140129",
    "end": "147000"
  },
  {
    "text": "whole concept and and when you when you get to that point you realize that how browsers approach security is in many",
    "start": "147000",
    "end": "155849"
  },
  {
    "text": "ways quite different from what normal native applications do okay so we're",
    "start": "155849",
    "end": "163290"
  },
  {
    "text": "gonna talk a little bit about slam boxing but it kind of breaks down into two types of threats the one that is the",
    "start": "163290",
    "end": "170910"
  },
  {
    "text": "most common and the most focused on in browser security is an external threat",
    "start": "170910",
    "end": "177420"
  },
  {
    "text": "so it's basically this code that you download from the internet how are you going to protect the user's computer",
    "start": "177420",
    "end": "184190"
  },
  {
    "text": "from anything malicious that might be on a site they visit or something",
    "start": "184190",
    "end": "189959"
  },
  {
    "text": "and of course you also have system internal threats because what your browser contains a lot of your personal",
    "start": "189959",
    "end": "196049"
  },
  {
    "text": "information so mining files memory anything system calls related to your",
    "start": "196049",
    "end": "202200"
  },
  {
    "text": "browser is something that could yield a lot of a lot of valuable information",
    "start": "202200",
    "end": "207500"
  },
  {
    "text": "from any kind of malware running on your machine but we're not going to talk that much about that but there is a little",
    "start": "207500",
    "end": "213630"
  },
  {
    "text": "bit so the outline of the talk is that we're going to quickly describe the",
    "start": "213630",
    "end": "218849"
  },
  {
    "text": "process architecture of a chromium based browser and that's very important because we'll see how how that",
    "start": "218849",
    "end": "224819"
  },
  {
    "text": "architecture yields how the browser sandbox is built then we're going to",
    "start": "224819",
    "end": "230250"
  },
  {
    "text": "look at the different kinds of Linux security api's that are present and used while constructing the sandbox then",
    "start": "230250",
    "end": "239010"
  },
  {
    "text": "we'll see how how that is the the construction is done in the initial sandbox and then later when it is shrunk",
    "start": "239010",
    "end": "245639"
  },
  {
    "text": "even further so first you have the process architecture of a chromium based",
    "start": "245639",
    "end": "251699"
  },
  {
    "text": "browser now if you my in my examples here I'm going to use Vivaldi as an",
    "start": "251699",
    "end": "258690"
  },
  {
    "text": "example but basically any kind of chromium based browser will have the same or similar structure because this",
    "start": "258690",
    "end": "265500"
  },
  {
    "text": "is from the chromium project so even if you look crow may will have a similar similar",
    "start": "265500",
    "end": "270660"
  },
  {
    "text": "structure so we are on the linux machine so let's go and look for four executable",
    "start": "270660",
    "end": "275670"
  },
  {
    "text": "files so you'll find their installation of your browser and you look for executable files there and you will find",
    "start": "275670",
    "end": "281880"
  },
  {
    "text": "one that is generally named what your browser's name so leave all the Opera chrome whatever often this is a bash",
    "start": "281880",
    "end": "289410"
  },
  {
    "text": "script is not actually a binary I think at in Opera currently they got rid of",
    "start": "289410",
    "end": "295350"
  },
  {
    "text": "the bash script but this but very often this is a bash script and it launches",
    "start": "295350",
    "end": "302490"
  },
  {
    "text": "the Vivaldi bin which is the actual browser binary and this is something that's very important that we're going",
    "start": "302490",
    "end": "307950"
  },
  {
    "text": "to think about is that you end up with lots of different processes on your computer but you actually actually have",
    "start": "307950",
    "end": "315240"
  },
  {
    "text": "only one real binary so all of these different processes are executed from",
    "start": "315240",
    "end": "320730"
  },
  {
    "text": "the same binary there's often another binary as well which is called in vivo",
    "start": "320730",
    "end": "328020"
  },
  {
    "text": "discovery of all these sandbox this is a set UID brown binary and we're not going",
    "start": "328020",
    "end": "333570"
  },
  {
    "text": "to talk much about that today but set UID is like a whole other topic for our security but currently if you're using a",
    "start": "333570",
    "end": "341940"
  },
  {
    "text": "modern distribution especially like Ubuntu then this binary is not in use",
    "start": "341940",
    "end": "347810"
  },
  {
    "text": "ok so let's see how this kind of develops so you start off by starting",
    "start": "347810",
    "end": "353940"
  },
  {
    "text": "your initial browser um binary and this is going to be what what we will talk",
    "start": "353940",
    "end": "360690"
  },
  {
    "text": "about as the browser process and the",
    "start": "360690",
    "end": "366210"
  },
  {
    "text": "browser process will have make two child processes one which I call this I got in",
    "start": "366210",
    "end": "372600"
  },
  {
    "text": "it and this I got in it will make another process called that is called",
    "start": "372600",
    "end": "378540"
  },
  {
    "text": "Sai got both of these will be called Sai got so if you look at mobile I'll show",
    "start": "378540",
    "end": "384120"
  },
  {
    "text": "you in a bit and the site got itself will make all of the renderer so you'll",
    "start": "384120",
    "end": "389940"
  },
  {
    "text": "have many renders a render will be roughly equivocal to a tab but this this",
    "start": "389940",
    "end": "396690"
  },
  {
    "text": "is a rough estimation and it's become more and more fine-grained but that's how you can think of it the",
    "start": "396690",
    "end": "405360"
  },
  {
    "text": "browser process will also yield another process called the GPU process and the GPU process will often have a GPU broker",
    "start": "405360",
    "end": "412169"
  },
  {
    "text": "process so what you'll see is that you have many different processes but but each one there will be only one of",
    "start": "412169",
    "end": "418979"
  },
  {
    "text": "except for the renders where you will have many now there are other processes like for plugins and things like that",
    "start": "418979",
    "end": "425660"
  },
  {
    "text": "I'm not going to talk about that but the general a general idea holds for that but it just becomes more complicated but",
    "start": "425660",
    "end": "433169"
  },
  {
    "text": "basically you have a bunch of processes and so when you look at it in top for",
    "start": "433169",
    "end": "440970"
  },
  {
    "text": "example or in PS you will see that there is they generally have lots of arguments but I'm going to look at one specific",
    "start": "440970",
    "end": "447090"
  },
  {
    "text": "one is which is the - - type and that's how you know which process this is so",
    "start": "447090",
    "end": "454289"
  },
  {
    "text": "the cycle parent process has types I got and the child also types I got so the",
    "start": "454289",
    "end": "459840"
  },
  {
    "text": "way you know which one is the parent or the child is in PS you will see that one is the child of the element and then you",
    "start": "459840",
    "end": "466800"
  },
  {
    "text": "will have many vendors and they will have - - type render the GPU parent will have GPU process and the child should",
    "start": "466800",
    "end": "473849"
  },
  {
    "text": "have GPU broker but there's been a bug for a while that the broker word is not",
    "start": "473849",
    "end": "479010"
  },
  {
    "text": "is missing so it's called deep GPU - for some reason anyway this matter going",
    "start": "479010",
    "end": "486150"
  },
  {
    "text": "back so we're going to look at the Linux security api's now these api's are",
    "start": "486150",
    "end": "491849"
  },
  {
    "text": "interesting in many different ways we're studying them and kind of like every leash thing where we're talking about",
    "start": "491849",
    "end": "498090"
  },
  {
    "text": "the browser sandbox but the Linux security api's are more famous for for making containers so if you're thinking",
    "start": "498090",
    "end": "505320"
  },
  {
    "text": "what is the technology behind things like docker then then that is the same",
    "start": "505320",
    "end": "510990"
  },
  {
    "text": "kind of things that we're going to be looking at today so let's see if you go",
    "start": "510990",
    "end": "518940"
  },
  {
    "text": "to your browser and you type your browser name colon slash slash sandbox or in this case Chrome then you will get",
    "start": "518940",
    "end": "525230"
  },
  {
    "text": "this box now the box has like one red thing which kind of makes it a little",
    "start": "525230",
    "end": "531360"
  },
  {
    "text": "bit scary but the rest of one is green so it's probably good but the red one just says that we're not",
    "start": "531360",
    "end": "537010"
  },
  {
    "text": "using the set UID sandbox that's fine so the other one says what kind of",
    "start": "537010",
    "end": "542470"
  },
  {
    "text": "characteristics I'm use to make our sandbox and today I'm going to go",
    "start": "542470",
    "end": "547720"
  },
  {
    "text": "through each of these concepts so that by the end hopefully you'll know what these things mean so you have what they",
    "start": "547720",
    "end": "554560"
  },
  {
    "text": "call a namespace sandbox which is basically use their namespace sandbox um then you have a pit sandbox network",
    "start": "554560",
    "end": "562600"
  },
  {
    "text": "namespaces a kid namespace network name space second PPF sandbox and a second",
    "start": "562600",
    "end": "569200"
  },
  {
    "text": "PPF sandbox supports tea sink which is it should have done because it basically",
    "start": "569200",
    "end": "574720"
  },
  {
    "text": "means well we'll look at while we'll look at that in detail later and then a Yama Ellis I'm enforcing okay so first",
    "start": "574720",
    "end": "582820"
  },
  {
    "text": "we're going to look a little bit on how these things interact so this little web thing here is a web page so it's inside",
    "start": "582820",
    "end": "589240"
  },
  {
    "text": "of your render so you have something that you you're rendering from the internet so the first thing that you can",
    "start": "589240",
    "end": "596620"
  },
  {
    "text": "see here is I will surround it in what is called a network name space network namespace in the context of this is",
    "start": "596620",
    "end": "603490"
  },
  {
    "text": "something that will isolate this process with regards to to networking in in the",
    "start": "603490",
    "end": "610660"
  },
  {
    "text": "case of chromium that's basically no access to the internet at all which is",
    "start": "610660",
    "end": "616360"
  },
  {
    "text": "kind of interesting because you're rendering a webpage right and then to facilitate that you actually have piping",
    "start": "616360",
    "end": "622630"
  },
  {
    "text": "of networking information from other processes to this process so this process in itself cannot connect to the",
    "start": "622630",
    "end": "628630"
  },
  {
    "text": "internet when you're looking at this more in a container structure you will",
    "start": "628630",
    "end": "633820"
  },
  {
    "text": "generally have ways of manipulating your network name namespace in different ways",
    "start": "633820",
    "end": "639850"
  },
  {
    "text": "so you might have one container and be able to talk to another container but not be able to do other things but in",
    "start": "639850",
    "end": "645820"
  },
  {
    "text": "this case it's basically you're cutting off access to the network then we surround that again with a pin name",
    "start": "645820",
    "end": "652510"
  },
  {
    "text": "space now app it is a process ID on Linux and when a process is inside of a",
    "start": "652510",
    "end": "658089"
  },
  {
    "text": "pin namespace it cannot see other processes on the computer and this is",
    "start": "658089",
    "end": "664839"
  },
  {
    "text": "again you kind of might recognize this from being inside of a container it looks like you have the machine to",
    "start": "664839",
    "end": "671000"
  },
  {
    "text": "yourself but this is a virtual world and this virtual world is made in part by",
    "start": "671000",
    "end": "677030"
  },
  {
    "text": "these namespaces so from the processes perspective it it is the only process",
    "start": "677030",
    "end": "684230"
  },
  {
    "text": "here and it has pin 1 so the first process that enters a pignite is the",
    "start": "684230",
    "end": "690680"
  },
  {
    "text": "namespace things it has pit 1 and it is all by itself in reality outside of the",
    "start": "690680",
    "end": "697310"
  },
  {
    "text": "namespace it has a real pin that is not one but but from inside that's that's",
    "start": "697310",
    "end": "703730"
  },
  {
    "text": "that's the view it gets of the world and both of these are inside of a username",
    "start": "703730",
    "end": "709430"
  },
  {
    "text": "space now if you are enter a username space inside of that main space you will think that you are root this is kind of",
    "start": "709430",
    "end": "717110"
  },
  {
    "text": "cool and and one of the things that is leveraged actually to make these are the namespaces is that idea because many of",
    "start": "717110",
    "end": "725110"
  },
  {
    "text": "these capabilities you have to be root to do yeah but you are not root you're",
    "start": "725110",
    "end": "731120"
  },
  {
    "text": "not running as root so how can you do things that require you to be root and and one of the things that that happened",
    "start": "731120",
    "end": "738140"
  },
  {
    "text": "in modern modern Linux distributions is that you can create a user name space",
    "start": "738140",
    "end": "744020"
  },
  {
    "text": "without privilege so you don't have to be rude to create a user name space but",
    "start": "744020",
    "end": "749180"
  },
  {
    "text": "once you are inside of a user name space inside of that little world you are root and that suddenly opens up the",
    "start": "749180",
    "end": "757610"
  },
  {
    "text": "possibility of making network namespaces and pit namespaces and things like that usually require privilege then you have",
    "start": "757610",
    "end": "766040"
  },
  {
    "text": "set our limit to to limit some access to resources like memory and things like",
    "start": "766040",
    "end": "771260"
  },
  {
    "text": "that we're not going to talk too much about that then chroot is used to cut",
    "start": "771260",
    "end": "777830"
  },
  {
    "text": "off access to the file system and I'll show you a little bit about how that's done and then you have a set comp and",
    "start": "777830",
    "end": "784760"
  },
  {
    "text": "cap set which are used to cut up cut off access to the system calls so this is",
    "start": "784760",
    "end": "790850"
  },
  {
    "text": "sort of what we're going to go through today on how this actually looks in code so if you have the initial sound box or",
    "start": "790850",
    "end": "798770"
  },
  {
    "text": "if we go back now here so this is the structure of the",
    "start": "798770",
    "end": "804699"
  },
  {
    "text": "applications these are or the the running processes and their parent-child relationships so since there's only one",
    "start": "804699",
    "end": "812800"
  },
  {
    "text": "binary you need some way to create these processes because you have one binary and you have to re execute it in some",
    "start": "812800",
    "end": "820300"
  },
  {
    "text": "way several times to create all these different processes and that's gen in two different ways so you can do it with",
    "start": "820300",
    "end": "828459"
  },
  {
    "text": "a clone and we'll talk more about what a clone looks like it's it's a even for people who program a lot of platform",
    "start": "828459",
    "end": "836260"
  },
  {
    "text": "stuff on Linux they're not often not used to talking about clone but it is a quite of cool concepts of a look at how",
    "start": "836260",
    "end": "842829"
  },
  {
    "text": "that looks like but the more normal thing you do is you fork a child process",
    "start": "842829",
    "end": "848500"
  },
  {
    "text": "and that is also done here so so sometimes clone is you know sometimes fork is used and is generally based on",
    "start": "848500",
    "end": "854980"
  },
  {
    "text": "whether or not you need the clone because it provides more control over how this child process what the child",
    "start": "854980",
    "end": "862690"
  },
  {
    "text": "process will have access to and how it will behave and how it will relate to you okay so the initial sandbox I call",
    "start": "862690",
    "end": "870639"
  },
  {
    "text": "is when the browser sets up these two child processes and so we'll look at how",
    "start": "870639",
    "end": "876699"
  },
  {
    "text": "that is done so fork x''k is the normal or the common",
    "start": "876699",
    "end": "882550"
  },
  {
    "text": "way of starting a new application on linux basically in a fork if you call",
    "start": "882550",
    "end": "888790"
  },
  {
    "text": "fork with in an application fork is very simple function it just has it takes no parameters and returns an int so it's",
    "start": "888790",
    "end": "895750"
  },
  {
    "text": "very simple so if you call it then you will make a duplicate of this process so",
    "start": "895750",
    "end": "901360"
  },
  {
    "text": "it'd be exactly the same memory will be the same everything will be the same the only difference is that in the two",
    "start": "901360",
    "end": "907839"
  },
  {
    "text": "processes you will both be returning from this call you'll both be returning from fork and how you distinguish if",
    "start": "907839",
    "end": "915699"
  },
  {
    "text": "you're the parent or the child process is the return value of fork so if you",
    "start": "915699",
    "end": "921430"
  },
  {
    "text": "are the parent you will get the pit of your child yeah one other things that",
    "start": "921430",
    "end": "928149"
  },
  {
    "text": "you could do after you've done a fork is that you'll say okay I've made a copy of",
    "start": "928149",
    "end": "933339"
  },
  {
    "text": "the process but that's not exactly what I want I wanted to run this other program this binary on disk in this process instead",
    "start": "933339",
    "end": "941460"
  },
  {
    "text": "and then you generally say okay I want to exact this this binary and then",
    "start": "941460",
    "end": "948850"
  },
  {
    "text": "you'll do the exit which will replace everything in the process now you're replacing all the memory all the stack",
    "start": "948850",
    "end": "954220"
  },
  {
    "text": "everything and you're just starting from main like a regular application and this",
    "start": "954220",
    "end": "959380"
  },
  {
    "text": "is this idiom is usually called the fork x ik yeah clone is is similar to fork",
    "start": "959380",
    "end": "969370"
  },
  {
    "text": "and actually a very often clone is how fork is implemented but it takes a lot",
    "start": "969370",
    "end": "977410"
  },
  {
    "text": "of arguments and it behaves in a little bit of an interesting way it gives you a very high high degree of control over",
    "start": "977410",
    "end": "984610"
  },
  {
    "text": "this new thing that you create and actually clonise is so powerful this",
    "start": "984610",
    "end": "989860"
  },
  {
    "text": "it's done it's used for many different things so for example if you want to make a thread on Linux it actually uses",
    "start": "989860",
    "end": "996940"
  },
  {
    "text": "clone passes some kind of different kinds of Flags to clone which says I want this new",
    "start": "996940",
    "end": "1003510"
  },
  {
    "text": "thing to share my address space for example and suddenly now you have two",
    "start": "1003510",
    "end": "1009690"
  },
  {
    "text": "different processes threads tasks whatever you want to call them let's share the same address space and there's",
    "start": "1009690",
    "end": "1017700"
  },
  {
    "text": "a bunch of different flags that are used when you want to create a thread and we're gonna look a little bit at that",
    "start": "1017700",
    "end": "1023970"
  },
  {
    "text": "later okay so the sandbox in itself is constructed in stages and to do that you",
    "start": "1023970",
    "end": "1031438"
  },
  {
    "text": "have to find opportunities from when you can actually introduce these barriers",
    "start": "1031439",
    "end": "1037560"
  },
  {
    "text": "because you want to especially let's say that you're doing it for the render process you want to make sure all of the",
    "start": "1037560",
    "end": "1043319"
  },
  {
    "text": "barriers are in place before you start executing some kind of random code from the internet so this is generally done",
    "start": "1043319",
    "end": "1049290"
  },
  {
    "text": "at startup as the process starts up and as it creates these child processes so",
    "start": "1049290",
    "end": "1055830"
  },
  {
    "text": "if you're using fork you basically have two opportunities to do something as before you call fork or after you call",
    "start": "1055830",
    "end": "1063480"
  },
  {
    "text": "fork it doesn't really give you a lot of opportunities to do something but if you",
    "start": "1063480",
    "end": "1068610"
  },
  {
    "text": "have some that applies for both the child and the parent you can do it before the fork because when the child gets it automatically if you want something that",
    "start": "1068610",
    "end": "1075539"
  },
  {
    "text": "only applies to the parent or the child then you do it after but if you combine",
    "start": "1075539",
    "end": "1082139"
  },
  {
    "text": "it with an X X then you have a little bit more right so you have before the clone in the X like like before then you",
    "start": "1082139",
    "end": "1087929"
  },
  {
    "text": "have add clone if you use clone then you can pass a bunch of flags to clone which will we'll give you some of these",
    "start": "1087929",
    "end": "1093330"
  },
  {
    "text": "policies and then you have this little period of time like after you've created",
    "start": "1093330",
    "end": "1098340"
  },
  {
    "text": "the process you're still copies of each other but before you do the actual execute of and and that's a good time to",
    "start": "1098340",
    "end": "1106679"
  },
  {
    "text": "do many things that you because a lot of things are inherited by your child in",
    "start": "1106679",
    "end": "1113279"
  },
  {
    "text": "like if you do a fork it's basically everything right but even if you do an execuse like getting file descriptors",
    "start": "1113279",
    "end": "1120419"
  },
  {
    "text": "and things like that that you might not want the child process to have so this is your time to like close whatever you",
    "start": "1120419",
    "end": "1126929"
  },
  {
    "text": "don't want especially like if you look at this often the child wants to",
    "start": "1126929",
    "end": "1132629"
  },
  {
    "text": "communicate with the parent and so the parent will open pipes so that they are",
    "start": "1132629",
    "end": "1140159"
  },
  {
    "text": "available for the child but and when the child gets it if the child wants to close the end they're not using and the",
    "start": "1140159",
    "end": "1146549"
  },
  {
    "text": "parent wants to close the end that they're not using and so they end up with one end each stuff like that and",
    "start": "1146549",
    "end": "1152720"
  },
  {
    "text": "then you have an actual startup then you have ways of communicating with this new process because now you're basically",
    "start": "1152720",
    "end": "1158340"
  },
  {
    "text": "loading a new binary end and you want to communicate with it but it's a little bit limited what you can do but you do",
    "start": "1158340",
    "end": "1164009"
  },
  {
    "text": "have the environment where you can add stuff and then you have arguments so",
    "start": "1164009",
    "end": "1170149"
  },
  {
    "text": "we'll look at the first part first right so I talked about namespaces and I said",
    "start": "1170149",
    "end": "1175289"
  },
  {
    "text": "that they limit what you see and and how do you create the namespace you do it a clone",
    "start": "1175289",
    "end": "1180419"
  },
  {
    "text": "all right there's another system called Cloud unshare which you can also use but",
    "start": "1180419",
    "end": "1185789"
  },
  {
    "text": "unshare is different than clone because it basically moves the this process that calls unshare to a different namespace",
    "start": "1185789",
    "end": "1192980"
  },
  {
    "text": "so in the sandbox you have basically three types of namespaces in use you",
    "start": "1192980",
    "end": "1198779"
  },
  {
    "text": "have the user name space now if you look at up the clone underscore new user that is",
    "start": "1198779",
    "end": "1205300"
  },
  {
    "text": "the name of the flag past a clone so they have this clone underscore something so you have the user name",
    "start": "1205300",
    "end": "1214180"
  },
  {
    "text": "space then you have the pit name space and then you have the network namespace",
    "start": "1214180",
    "end": "1219540"
  },
  {
    "text": "and yeah so you pass these flags to",
    "start": "1219540",
    "end": "1225310"
  },
  {
    "text": "clone and that will define the namespaces that the new process will be inside so inside of of chromium you will",
    "start": "1225310",
    "end": "1234310"
  },
  {
    "text": "have lots of test code now this is one thing that's kind of interesting about something that has to be highly portable",
    "start": "1234310",
    "end": "1239440"
  },
  {
    "text": "like like a browser you basically cannot make assumptions about what kind of distribution how old how new what is",
    "start": "1239440",
    "end": "1246100"
  },
  {
    "text": "available what kind of Flags the Linux kernel was built with all sorts of things that you don't know so so there's",
    "start": "1246100",
    "end": "1252760"
  },
  {
    "text": "a lot of code in in chromium which which deals with testing and seeing what is available and also testing and seeing if",
    "start": "1252760",
    "end": "1260080"
  },
  {
    "text": "something is broken and also then if something is buggy or as a known bad version to bypass them and this is kind",
    "start": "1260080",
    "end": "1268300"
  },
  {
    "text": "of interesting because let's say that you are and one thing that often happens on a Windows machine for example you've",
    "start": "1268300",
    "end": "1273430"
  },
  {
    "text": "had problems playing a video or it's it's Yankee and it's just not a good",
    "start": "1273430",
    "end": "1278620"
  },
  {
    "text": "experience and then somebody will say you should update your driver and you go",
    "start": "1278620",
    "end": "1283630"
  },
  {
    "text": "like okay well I'm updating my driver my graphics driver and that's going to help my my my video performance but actually",
    "start": "1283630",
    "end": "1291700"
  },
  {
    "text": "probably inside with Chrome the Chrome has just noticed that your driver is known to be buggy it has bypassed it and",
    "start": "1291700",
    "end": "1297730"
  },
  {
    "text": "is now doing software decoding on your machine so you update your browser with your driver chrome will notice that you",
    "start": "1297730",
    "end": "1304360"
  },
  {
    "text": "now have a good driver and it will go to hardware decoding of your of your video and there is so much of that throughout",
    "start": "1304360",
    "end": "1311830"
  },
  {
    "text": "the codebase checking and seeing so with regards to creating namespaces it",
    "start": "1311830",
    "end": "1316990"
  },
  {
    "text": "basically gives it a shot it creates small namespaces just to see if it works",
    "start": "1316990",
    "end": "1324000"
  },
  {
    "text": "and then it will take as many as I can and create the sandbox but this also",
    "start": "1324140",
    "end": "1329540"
  },
  {
    "text": "means that that the sandbox and how solid it is will depend on your machine",
    "start": "1329540",
    "end": "1335030"
  },
  {
    "text": "and what is available there so if you have an older machine then you might not be as protected as you have or",
    "start": "1335030",
    "end": "1341000"
  },
  {
    "text": "if you are an older distribution you might not be as protected as you would be with a newer distribution so it's",
    "start": "1341000",
    "end": "1347960"
  },
  {
    "text": "basically using what is available and if if things are not available it's not in use",
    "start": "1347960",
    "end": "1353380"
  },
  {
    "text": "um the interesting thing about clone and it has like a weird interface inside of",
    "start": "1353380",
    "end": "1360470"
  },
  {
    "text": "chromium they've actually made a wrapper around clone which emulates the",
    "start": "1360470",
    "end": "1366230"
  },
  {
    "text": "interface of fork it's probably because clone is not well known for programmers and so it's easier to have something",
    "start": "1366230",
    "end": "1372950"
  },
  {
    "text": "that behaves in a way the programs are used to yeah so this is the code that",
    "start": "1372950",
    "end": "1380419"
  },
  {
    "text": "emulates the fork so here you can see that you have generally you'll see when",
    "start": "1380419",
    "end": "1385880"
  },
  {
    "text": "I put code on slides it's basically exactly the code as it is inside of chromium except I've removed all",
    "start": "1385880",
    "end": "1392330"
  },
  {
    "text": "comments and all error checking because I have to fit it on a slide so here you",
    "start": "1392330",
    "end": "1399260"
  },
  {
    "text": "will see that you make this flag where your oaring these different kinds of names places that you want and it's",
    "start": "1399260",
    "end": "1405260"
  },
  {
    "text": "using a sort of esoteric thing that people don't use much anymore which is",
    "start": "1405260",
    "end": "1410330"
  },
  {
    "text": "is set jump it's going to do a long jump does anyone have anyone familiar with a",
    "start": "1410330",
    "end": "1417410"
  },
  {
    "text": "long jump and see no okay so a long jump is kind of weird it's it's basically",
    "start": "1417410",
    "end": "1424419"
  },
  {
    "text": "okay how many are used to go to we heard of go to okay awesome okay as a long",
    "start": "1424419",
    "end": "1431299"
  },
  {
    "text": "jump is like a go to like on steroids as so in a go to you can basically jump to",
    "start": "1431299",
    "end": "1436400"
  },
  {
    "text": "a different place in the same function with the long jump do you can jump anywhere you want so you can jump way",
    "start": "1436400",
    "end": "1443000"
  },
  {
    "text": "down the stack and and so it's not much in use because you know there's there's",
    "start": "1443000",
    "end": "1448070"
  },
  {
    "text": "issues with this you basically might you're skipping returning properly and that might skip releasing resources in a",
    "start": "1448070",
    "end": "1455419"
  },
  {
    "text": "proper way and things like that so nobody actually you is it normally but but this is how it's",
    "start": "1455419",
    "end": "1460520"
  },
  {
    "text": "done so you create this jump buffer and",
    "start": "1460520",
    "end": "1466640"
  },
  {
    "text": "here is the jump over em and it's allocated on the stack and it will store all sorts of like interesting",
    "start": "1466640",
    "end": "1472670"
  },
  {
    "text": "information about where you are on the stack and the this information is later going to be used to try to jump back",
    "start": "1472670",
    "end": "1479030"
  },
  {
    "text": "where you were now and then you do set jump here this is your basically",
    "start": "1479030",
    "end": "1484790"
  },
  {
    "text": "bookmarking this location this is where I want to go back to so later when I call long jump with this buffer I want",
    "start": "1484790",
    "end": "1492440"
  },
  {
    "text": "to come back here and then it calls clone clone and long jump in child and",
    "start": "1492440",
    "end": "1500650"
  },
  {
    "text": "this is very indicative of how the chromium source code is they like like names that look like sentences right um",
    "start": "1500650",
    "end": "1508419"
  },
  {
    "text": "but you're passing this jump over into this function and also passing the flags",
    "start": "1508419",
    "end": "1516280"
  },
  {
    "text": "so when you come in there this is where we're actually going to do the call to clone and one of the things that you",
    "start": "1516280",
    "end": "1522559"
  },
  {
    "text": "might notice here which is kind of weird is this the stuff in turquoise it's",
    "start": "1522559",
    "end": "1529250"
  },
  {
    "text": "creating a stack because clone doesn't it doesn't will not make you a stack",
    "start": "1529250",
    "end": "1535280"
  },
  {
    "text": "it's kind of weird but that's how it is and so you kind of have to easily have to make a stack yourself and then you",
    "start": "1535280",
    "end": "1542780"
  },
  {
    "text": "pass and then you pass in a pointer to that stack to clone and clone will set",
    "start": "1542780",
    "end": "1547850"
  },
  {
    "text": "up the new new process to use this stack you're also passing in the flags and",
    "start": "1547850",
    "end": "1554240"
  },
  {
    "text": "you're passing in this environment buffer one of the other things that",
    "start": "1554240",
    "end": "1559549"
  },
  {
    "text": "you're passing in is this clone helper clone helpers of function and this is",
    "start": "1559549",
    "end": "1565220"
  },
  {
    "text": "the reason why people often don't use clone I think without like taking the",
    "start": "1565220",
    "end": "1572030"
  },
  {
    "text": "stack thing is weird but it is also the fact that as I said before if you call",
    "start": "1572030",
    "end": "1577370"
  },
  {
    "text": "fork it's simple it has an int return value takes no parameters both processes",
    "start": "1577370",
    "end": "1584600"
  },
  {
    "text": "return at the same point is it's very in like understandable",
    "start": "1584600",
    "end": "1590090"
  },
  {
    "text": "with clone that's not the case the child process will not return from clone the",
    "start": "1590090",
    "end": "1597690"
  },
  {
    "text": "child process will call this clone helper function so the parent process",
    "start": "1597690",
    "end": "1602790"
  },
  {
    "text": "will return from clone but the child will call this function instead and so",
    "start": "1602790",
    "end": "1608250"
  },
  {
    "text": "this is what we're going to use long jump for is to simulate it so that the child also returns from clone because if",
    "start": "1608250",
    "end": "1614850"
  },
  {
    "text": "you look back here we set the bookmark the asset jump we set it there so what",
    "start": "1614850",
    "end": "1619980"
  },
  {
    "text": "we want is the child to jump back there afterwards okay so let's look at clone",
    "start": "1619980",
    "end": "1625380"
  },
  {
    "text": "helper clone helper is very simple so it takes this void star argument",
    "start": "1625380",
    "end": "1631950"
  },
  {
    "text": "which is our jump buffer because we passed it let's see I'll go back so we",
    "start": "1631950",
    "end": "1637050"
  },
  {
    "text": "passed it in as the fourth argument clone and that's going to be passed in as an argument to clone helper so we get",
    "start": "1637050",
    "end": "1644190"
  },
  {
    "text": "our jump up for in there and then we basically do just a long jump to it we",
    "start": "1644190",
    "end": "1649440"
  },
  {
    "text": "don't do anything else we just want to jump back so that we look like we've returned as well and then there's an",
    "start": "1649440",
    "end": "1656160"
  },
  {
    "text": "assert Falls and return one but that is unreachable code okay so that's that's a",
    "start": "1656160",
    "end": "1663330"
  },
  {
    "text": "neat little trick on how to do a clone without actually having to bother all",
    "start": "1663330",
    "end": "1668610"
  },
  {
    "text": "your colleagues with your weird clone and you got a cool look at using long jump for something which nobody does",
    "start": "1668610",
    "end": "1675590"
  },
  {
    "text": "anyway so then you have unshare which is used once in the chromium source and",
    "start": "1675590",
    "end": "1683250"
  },
  {
    "text": "that moves like I said the current process into namespace and it is used in",
    "start": "1683250",
    "end": "1690420"
  },
  {
    "text": "one places adds basically a test can create process and new namespace so it's basically again like like chromium has a",
    "start": "1690420",
    "end": "1696450"
  },
  {
    "text": "lot of these like try to do something see if it fails if it fails then we're going to try something else okay so then",
    "start": "1696450",
    "end": "1703710"
  },
  {
    "text": "we're going to look at before exit cannot start up and this is there's a lot of stuff and especially in chromium",
    "start": "1703710",
    "end": "1711300"
  },
  {
    "text": "which is very complicated there's since you have all these different processes you have like gazillion pipes you have lots of inter",
    "start": "1711300",
    "end": "1718920"
  },
  {
    "text": "process communication it is insanely complicated and because of this there becomes a lot",
    "start": "1718920",
    "end": "1726030"
  },
  {
    "text": "of cleanup that has to be done so I'm going to list them up but it's probably",
    "start": "1726030",
    "end": "1732299"
  },
  {
    "text": "for a normal application not very interesting so you fix the environment you might take stuff away or alter",
    "start": "1732299",
    "end": "1738210"
  },
  {
    "text": "something that so that you make an environment that is the way that the child should see it you fix your file",
    "start": "1738210",
    "end": "1745200"
  },
  {
    "text": "descriptors maybe close them fix your single handling cuz what happens if you",
    "start": "1745200",
    "end": "1750990"
  },
  {
    "text": "have a signal occur in the child process how should that propagate you can set up",
    "start": "1750990",
    "end": "1758309"
  },
  {
    "text": "process groups maximize resource limits then you have this PR set no new prims",
    "start": "1758309",
    "end": "1765150"
  },
  {
    "text": "and we're gonna get back to that later because that's kind of important then you might change your current directory",
    "start": "1765150",
    "end": "1770309"
  },
  {
    "text": "and then select the executable path so lots of stuff and then the Commandant so",
    "start": "1770309",
    "end": "1776150"
  },
  {
    "text": "basically lots of things that you can do after you created the process but before",
    "start": "1776150",
    "end": "1781470"
  },
  {
    "text": "you do the exact okay so we've created these two child",
    "start": "1781470",
    "end": "1787260"
  },
  {
    "text": "processes the so I got in it and this is a GPU process using fork xx or clone x",
    "start": "1787260",
    "end": "1792870"
  },
  {
    "text": "ik and what you'll see is that the Saigon in it is created with clone and",
    "start": "1792870",
    "end": "1799260"
  },
  {
    "text": "is added into a user pit in that namespace but the GPU process is not the GP",
    "start": "1799260",
    "end": "1805650"
  },
  {
    "text": "process is just forked and the reason for that is that the GPU process is",
    "start": "1805650",
    "end": "1810950"
  },
  {
    "text": "inside of chromium the only process that is allowed to communicate with the GPU and that means that any kind of driver",
    "start": "1810950",
    "end": "1818880"
  },
  {
    "text": "libraries and things will be loaded into this process and GPU libraries are",
    "start": "1818880",
    "end": "1825200"
  },
  {
    "text": "generally extremely needy they need a lot of access to your machine so the GPU",
    "start": "1825200",
    "end": "1831809"
  },
  {
    "text": "process doesn't have a lot of protection in in that area but as you can see in",
    "start": "1831809",
    "end": "1837750"
  },
  {
    "text": "the box it says sicom so we're going to look a little bit at a second which is used to do some sandboxing of the gpo",
    "start": "1837750",
    "end": "1845429"
  },
  {
    "text": "processes but thus I got in it is inside of a user pit in net name space which",
    "start": "1845429",
    "end": "1852690"
  },
  {
    "text": "means that their child process that it's child processes will also be that and later we will make that even more",
    "start": "1852690",
    "end": "1859270"
  },
  {
    "text": "restrictive so I said that we look at the PR said no new prints and that is",
    "start": "1859270",
    "end": "1865360"
  },
  {
    "text": "basically because if you wanted to call second today that which we'll look at in",
    "start": "1865360",
    "end": "1870850"
  },
  {
    "text": "a little bit you have to set it and this",
    "start": "1870850",
    "end": "1875890"
  },
  {
    "text": "one does a little bit of a cool thing is to protect against many types of",
    "start": "1875890",
    "end": "1881050"
  },
  {
    "text": "security vulnerabilities which has to do with escalation in escalating privilege so in this case you're basically saying",
    "start": "1881050",
    "end": "1888430"
  },
  {
    "text": "that you can't get new privileges by for example executing a child process so any",
    "start": "1888430",
    "end": "1895090"
  },
  {
    "text": "kind of thing that would normally give you more privileged than you have will fail or not grant them and so this is",
    "start": "1895090",
    "end": "1903310"
  },
  {
    "text": "something that once you've said it you can take it back ok so then we're going",
    "start": "1903310",
    "end": "1909730"
  },
  {
    "text": "to look at second the set up is really cool second is filtering of system calls and",
    "start": "1909730",
    "end": "1919650"
  },
  {
    "text": "it is extremely extremely powerful so if you can set it when you set up a second",
    "start": "1919650",
    "end": "1926110"
  },
  {
    "text": "filter you basically can whitelist or blacklist however you want all of the",
    "start": "1926110",
    "end": "1932800"
  },
  {
    "text": "system calls that this process makes from now on and this can this is actually a repurposing of a part of the",
    "start": "1932800",
    "end": "1940210"
  },
  {
    "text": "Linux kernel which is kind of interesting and second BPF the BPF part",
    "start": "1940210",
    "end": "1946450"
  },
  {
    "text": "is called berkeley packet filter it was actually made a long time ago",
    "start": "1946450",
    "end": "1952600"
  },
  {
    "text": "to filter TCP packets so this is a language where you basically write a",
    "start": "1952600",
    "end": "1958690"
  },
  {
    "text": "program and you install this program in the kernel and the kernel has this like",
    "start": "1958690",
    "end": "1963700"
  },
  {
    "text": "tiny little virtual machine running this program and whenever an Indian in the",
    "start": "1963700",
    "end": "1970000"
  },
  {
    "text": "original version for packet filtering the kernel will say okay I have a TCP packet it should I pass it to this",
    "start": "1970000",
    "end": "1976420"
  },
  {
    "text": "application and it will run the little program say yes or no if it is say yes",
    "start": "1976420",
    "end": "1982690"
  },
  {
    "text": "it will pass it up to the user to use your space but this passing through the user space kernel space boundary is a",
    "start": "1982690",
    "end": "1988450"
  },
  {
    "text": "very expensive operation see only wanted to do it if it if the application really cared but what you",
    "start": "1988450",
    "end": "1996190"
  },
  {
    "text": "ended up with with this kind of functionality is you had a tiny little VM inside of the kernel that can run",
    "start": "1996190",
    "end": "2003990"
  },
  {
    "text": "programs for you so this is as something that recently has been more and more",
    "start": "2003990",
    "end": "2009090"
  },
  {
    "text": "repurposed to do different things and in second that is what it does you make this filter program you install it in",
    "start": "2009090",
    "end": "2016440"
  },
  {
    "text": "the kernel and whenever this application does a system call then this program",
    "start": "2016440",
    "end": "2022800"
  },
  {
    "text": "will be exercised to say how should how should we handle this system call and you have many different things that you",
    "start": "2022800",
    "end": "2029250"
  },
  {
    "text": "can do you can deny it you can fail you can say exactly how you want to fail you",
    "start": "2029250",
    "end": "2034980"
  },
  {
    "text": "can also inspect arguments so you can say okay I it should succeed if the third argument is null but if it's not",
    "start": "2034980",
    "end": "2041520"
  },
  {
    "text": "then you know and you can do this for all of the system pause so you can also default so it's more like a switch so",
    "start": "2041520",
    "end": "2049200"
  },
  {
    "text": "it's like if you pass through and none of it hits you can say what is the default you should do like should you default allow something or just default",
    "start": "2049200",
    "end": "2055470"
  },
  {
    "text": "deny very often it's used as a default deny so this becomes a whitelist so",
    "start": "2055470",
    "end": "2061139"
  },
  {
    "text": "anything mentioned is is possible it could pass through but if you don't find",
    "start": "2061140",
    "end": "2066210"
  },
  {
    "text": "it you're going to deny it so it is not",
    "start": "2066210",
    "end": "2072659"
  },
  {
    "text": "very user friendly okay if you look at this on Mac Mac they have this like",
    "start": "2072660",
    "end": "2078090"
  },
  {
    "text": "fabulous language it's like a text file you will go like it's readable it's",
    "start": "2078090",
    "end": "2084270"
  },
  {
    "text": "understandable it's and it has the same kind of function this is not this is a byte in a buffer with a void star",
    "start": "2084270",
    "end": "2092520"
  },
  {
    "text": "pointer you're passing to the kernel it's it's not very user friendly the the",
    "start": "2092520",
    "end": "2098640"
  },
  {
    "text": "user friendly interfaces went to macro state names so what often happens that",
    "start": "2098640",
    "end": "2103920"
  },
  {
    "text": "people who build something more user friendly on top of it an inside of chromium that is basically",
    "start": "2103920",
    "end": "2110250"
  },
  {
    "text": "some classes I wrapped this yeah",
    "start": "2110250",
    "end": "2115800"
  },
  {
    "text": "now when we saw the the chrome sandbox thing there was one that said the second",
    "start": "2115800",
    "end": "2122320"
  },
  {
    "text": "PPF with teasing and teasing basically only says that that any second program installed in this process applies to all",
    "start": "2122320",
    "end": "2129220"
  },
  {
    "text": "of the threads not just the thread that called second but all of the threads",
    "start": "2129220",
    "end": "2134400"
  },
  {
    "text": "okay so inside of chromium as I said this is more it's abstracted a little",
    "start": "2134400",
    "end": "2141310"
  },
  {
    "text": "bit so basically they have what they call a policy which is a class so you",
    "start": "2141310",
    "end": "2147610"
  },
  {
    "text": "make an instance of this class and you have different types of classes defined in different kinds of policies and these",
    "start": "2147610",
    "end": "2153100"
  },
  {
    "text": "classes basically have a switch well okay when I say basically they have a switch so they have a function which is",
    "start": "2153100",
    "end": "2159040"
  },
  {
    "text": "basically a switch where each case is a different kind of system call and you",
    "start": "2159040",
    "end": "2165820"
  },
  {
    "text": "can handle them in different ways and if you fall through the entire switch is denied and the fact that it is a",
    "start": "2165820",
    "end": "2176590"
  },
  {
    "text": "whitelist is is kind of relevant because if you have an extended policy if you",
    "start": "2176590",
    "end": "2182500"
  },
  {
    "text": "take this class in your subclass it then you are adding stuff that is loud so you",
    "start": "2182500",
    "end": "2189520"
  },
  {
    "text": "are extending the policy you're making more things allowed so so the further down you go the more permissive it is so",
    "start": "2189520",
    "end": "2197440"
  },
  {
    "text": "you have the baseline policy it has a child class called GPU processing that",
    "start": "2197440",
    "end": "2203710"
  },
  {
    "text": "one has a GPU broker process policy so what you'll see is that okay so the GPU process is is more restrictive than the",
    "start": "2203710",
    "end": "2211570"
  },
  {
    "text": "GPU broker process and then you have the rendering process policy which is separate ok so what does this look like",
    "start": "2211570",
    "end": "2219550"
  },
  {
    "text": "in real life if you want to look at the code I I have the actual files",
    "start": "2219550",
    "end": "2224680"
  },
  {
    "text": "underneath so you can go and look inside them chromium um but this is basically",
    "start": "2224680",
    "end": "2229870"
  },
  {
    "text": "what it looks like so you have start sandbox with policy where you passing in",
    "start": "2229870",
    "end": "2235450"
  },
  {
    "text": "this pointer to a policy object then you create this sandbox BPF passing the",
    "start": "2235450",
    "end": "2243460"
  },
  {
    "text": "policy as the argument and then you call this function start sandbox start sandbox there's nothing really",
    "start": "2243460",
    "end": "2248530"
  },
  {
    "text": "interesting except install filter and when we come to install filter the whole like high-level",
    "start": "2248530",
    "end": "2255490"
  },
  {
    "text": "C++ e stuff kind of breaks down and it looks like this so it it does this program assemble",
    "start": "2255490",
    "end": "2264130"
  },
  {
    "text": "filter which will then try to to take the switch and make this binary",
    "start": "2264130",
    "end": "2270930"
  },
  {
    "text": "representation and then you're copying this binary representation into this",
    "start": "2270930",
    "end": "2276910"
  },
  {
    "text": "structure the sock filter on the stack and then you're just passing mmm copying",
    "start": "2276910",
    "end": "2284440"
  },
  {
    "text": "your program in there and and passing it to second so second is there you see the",
    "start": "2284440",
    "end": "2291720"
  },
  {
    "text": "PR CTL set no new proofs they do it a lot of times but it's basically nothing",
    "start": "2291720",
    "end": "2296920"
  },
  {
    "text": "to do that many times but I guess they're just afraid they'll forget so",
    "start": "2296920",
    "end": "2302800"
  },
  {
    "text": "but it but here it's it's very important to do that before second because if not you can't do a sec compound privileged",
    "start": "2302800",
    "end": "2310200"
  },
  {
    "text": "yeah so then it passes some arguments to to second amongst others tea sink and",
    "start": "2310200",
    "end": "2317130"
  },
  {
    "text": "this is also one of those cases where if you have an older version of Linux then it doesn't might not have the second",
    "start": "2317130",
    "end": "2322980"
  },
  {
    "text": "call and so then I'll use an older version which might not support all of",
    "start": "2322980",
    "end": "2328240"
  },
  {
    "text": "the same things so again it has to do with how updated is your kernel okay so",
    "start": "2328240",
    "end": "2336280"
  },
  {
    "text": "then we're going to look at CH 3 CH root is probably the most like famous of all",
    "start": "2336280",
    "end": "2343089"
  },
  {
    "text": "of these api's and mostly because it became famous for like jailbreak things on Mac especially um but it's used in a",
    "start": "2343089",
    "end": "2351490"
  },
  {
    "text": "kind of cool way to make the chromium sandbox so basically a CH root has to do",
    "start": "2351490",
    "end": "2359170"
  },
  {
    "text": "with what can you see of the filesystem that's basically what it is set what is",
    "start": "2359170",
    "end": "2367420"
  },
  {
    "text": "the root directory for this process so you can set it to any kind of arbitrary",
    "start": "2367420",
    "end": "2372640"
  },
  {
    "text": "folder and then if that does CD / it will end up in that folder even though",
    "start": "2372640",
    "end": "2378099"
  },
  {
    "text": "that folder is not / if you can see like a pattern throughout all of this it's a lot about lying",
    "start": "2378099",
    "end": "2383390"
  },
  {
    "text": "to the running process right it's like saying yeah yeah yeah your route yeah yeah yeah you pick one yeah yeah yeah",
    "start": "2383390",
    "end": "2389240"
  },
  {
    "text": "this is the the root folder right but it has basically to do with the idea of a",
    "start": "2389240",
    "end": "2395720"
  },
  {
    "text": "browser sandbox today is basically that yeah we're going to do all of these",
    "start": "2395720",
    "end": "2401030"
  },
  {
    "text": "security things inside of this process but if you manage to break out of our",
    "start": "2401030",
    "end": "2406070"
  },
  {
    "text": "process in some way if you manage to break out of the JavaScript script virtual machine and you break out of the",
    "start": "2406070",
    "end": "2413930"
  },
  {
    "text": "process and you get access to the system underneath the world that you see is very uninteresting so this has to do",
    "start": "2413930",
    "end": "2422330"
  },
  {
    "text": "with the layered security right and and this has become much more common in all",
    "start": "2422330",
    "end": "2427910"
  },
  {
    "text": "sorts of other applications today is that you have previously you thought",
    "start": "2427910",
    "end": "2433040"
  },
  {
    "text": "okay I have perimeter security right I have my firewalls and everything and inside of that I'm safe I don't have to",
    "start": "2433040",
    "end": "2439250"
  },
  {
    "text": "worry about security um but we're moving beyond that yeah I'm gonna keep my perimeter security yeah sure but I'm",
    "start": "2439250",
    "end": "2446300"
  },
  {
    "text": "still going to be looking inside I'm going to try to isolate things even inside of my own network because if",
    "start": "2446300",
    "end": "2453890"
  },
  {
    "text": "somebody gets inside I want to be able to control what they can access okay so",
    "start": "2453890",
    "end": "2460520"
  },
  {
    "text": "the way that you see it root is really neat and they use the clone again so",
    "start": "2460520",
    "end": "2466640"
  },
  {
    "text": "let's see so the idea here is that we want to drop all access to the",
    "start": "2466640",
    "end": "2472460"
  },
  {
    "text": "filesystem and we're going to do that by calling clone again but with this flag",
    "start": "2472460",
    "end": "2478610"
  },
  {
    "text": "called the clone underscore FS and then",
    "start": "2478610",
    "end": "2483880"
  },
  {
    "text": "clone underscore FS is kind of interesting because it it shares filesystem attributes with the child and",
    "start": "2483880",
    "end": "2491170"
  },
  {
    "text": "in this case it shares two interesting properties I will make a child process",
    "start": "2491170",
    "end": "2497030"
  },
  {
    "text": "and it will share my current directory and we will share what is our root",
    "start": "2497030",
    "end": "2503780"
  },
  {
    "text": "directory so both of those things are chaired so if one changes let's say that the child changes directories and the",
    "start": "2503780",
    "end": "2510440"
  },
  {
    "text": "parent will also change this directory or as the parent changes its directory than the child will check so they will",
    "start": "2510440",
    "end": "2515870"
  },
  {
    "text": "move together and that is used specifically here because the child will chroot",
    "start": "2515870",
    "end": "2524450"
  },
  {
    "text": "to a process specific directory then immediately after it will change",
    "start": "2524450",
    "end": "2531920"
  },
  {
    "text": "directory to slash to its root which is now the process specific directory it",
    "start": "2531920",
    "end": "2538900"
  },
  {
    "text": "called chroot with and after that it will just exit this is very interesting",
    "start": "2538900",
    "end": "2545570"
  },
  {
    "text": "because if what you see is that ok so you have a parent process creating a child process and then inside of the",
    "start": "2545570",
    "end": "2552860"
  },
  {
    "text": "child process it will chroot to a process specific directory there's a",
    "start": "2552860",
    "end": "2558200"
  },
  {
    "text": "directory that is specific to this process to the child process and right",
    "start": "2558200",
    "end": "2565400"
  },
  {
    "text": "after it will do CD slash so now both the parent and the child their current",
    "start": "2565400",
    "end": "2572330"
  },
  {
    "text": "working directory is this child specific directory which is this /proc slash SEP",
    "start": "2572330",
    "end": "2578630"
  },
  {
    "text": "self / FD info but then immediately after that the child will exit this",
    "start": "2578630",
    "end": "2586610"
  },
  {
    "text": "means that now the parent process has been CH routed to a directory that no",
    "start": "2586610",
    "end": "2592790"
  },
  {
    "text": "longer exists and suddenly you have a process that no longer can access the",
    "start": "2592790",
    "end": "2600080"
  },
  {
    "text": "file system looks like this um same the",
    "start": "2600080",
    "end": "2608330"
  },
  {
    "text": "same thing as before you have to make your stack in this case you're passing clone FS and then this SIG child as",
    "start": "2608330",
    "end": "2614560"
  },
  {
    "text": "flanks you have again this function that your that the child is going to call and",
    "start": "2614560",
    "end": "2621610"
  },
  {
    "text": "and then the parent is going to wait for the child so when the child runs it will",
    "start": "2621610",
    "end": "2629840"
  },
  {
    "text": "do the CH route to this process specific directory it will change directory to slash moving both the parent and the",
    "start": "2629840",
    "end": "2636590"
  },
  {
    "text": "child to this directory and then it will exit it's very neat trick but basically",
    "start": "2636590",
    "end": "2645020"
  },
  {
    "text": "like I said in the beginning you have you have the namespaces of will it will limit what you can see from the",
    "start": "2645020",
    "end": "2651140"
  },
  {
    "text": "system but in this case with with the chroot it will also limit the access you",
    "start": "2651140",
    "end": "2656720"
  },
  {
    "text": "have to the file system so in so this process will no longer be able to access the file system it won't access the the",
    "start": "2656720",
    "end": "2663829"
  },
  {
    "text": "network it will think it spit one and it will think it's route or something similar you might want to change it okay",
    "start": "2663829",
    "end": "2671480"
  },
  {
    "text": "then we could talk about capabilities capabilities it used to be very",
    "start": "2671480",
    "end": "2677780"
  },
  {
    "text": "important the problem is that Linux capabilities kind of it became too much",
    "start": "2677780",
    "end": "2685339"
  },
  {
    "text": "very for capabilities basically says how privileged you tried to to to split up",
    "start": "2685339",
    "end": "2694640"
  },
  {
    "text": "the idea of you have something that is route and you have some that's not route by saying ok you have something that's",
    "start": "2694640",
    "end": "2699890"
  },
  {
    "text": "route but I'm going to give it some extra privileges some extra kind of roles if you want the problem is that",
    "start": "2699890",
    "end": "2706280"
  },
  {
    "text": "you ended up with this massive role which is called cap sysadmin which is basically anything interesting you need",
    "start": "2706280",
    "end": "2712790"
  },
  {
    "text": "a cap sysadmin which was basically route and so it became like it doesn't really",
    "start": "2712790",
    "end": "2719089"
  },
  {
    "text": "work really well in my opinion but one of those things that you see is that you",
    "start": "2719089",
    "end": "2726770"
  },
  {
    "text": "can drop all of the capabilities you currently have so that's one of the things you might want to do as you move",
    "start": "2726770",
    "end": "2732530"
  },
  {
    "text": "through this process of trying to make this thing the sandbox smaller and smaller is like ok any kind of",
    "start": "2732530",
    "end": "2737930"
  },
  {
    "text": "capabilities I currently have I want to lose them I want to become totally without any capabilities and that's done",
    "start": "2737930",
    "end": "2746329"
  },
  {
    "text": "in this credentials drop all capabilities another thing that you can",
    "start": "2746329",
    "end": "2752569"
  },
  {
    "text": "do which is also done is that as said resource limits now this is also kind of like an old API so set our limit",
    "start": "2752569",
    "end": "2761510"
  },
  {
    "text": "basically in this case is used to see I don't want this process to have more than this much virtual and memory things",
    "start": "2761510",
    "end": "2768980"
  },
  {
    "text": "like that today what is more used and let's say in containers is things that are called",
    "start": "2768980",
    "end": "2774319"
  },
  {
    "text": "cgroups we're not going to talk so much of our severs because in our normal desktop browser see groups aren't used that much",
    "start": "2774319",
    "end": "2781430"
  },
  {
    "text": "or not you in chrome or chromium but if you run chromium on a Chromebook like I have",
    "start": "2781430",
    "end": "2789370"
  },
  {
    "text": "here they do use C grips and C groups then is used for kind of cool things",
    "start": "2789370",
    "end": "2794470"
  },
  {
    "text": "because Chromebooks are a very low spec devices or now you have like high spec",
    "start": "2794470",
    "end": "2800890"
  },
  {
    "text": "Chromebooks but in the original ones low spec basically you have like a self cell phone chip inside or something that",
    "start": "2800890",
    "end": "2806920"
  },
  {
    "text": "pretends to be a laptop right and and so the resources it consume it has very",
    "start": "2806920",
    "end": "2812860"
  },
  {
    "text": "limited resources and how can you use that because what you know from desktop",
    "start": "2812860",
    "end": "2818350"
  },
  {
    "text": "is you running Chrome and it basically takes all of your RAM it's like you thought 16 was good chrome will leave",
    "start": "2818350",
    "end": "2825040"
  },
  {
    "text": "you - and so so so what they did running",
    "start": "2825040",
    "end": "2832540"
  },
  {
    "text": "chromium on on Chromebooks is that they basically said that each tab is a C",
    "start": "2832540",
    "end": "2838750"
  },
  {
    "text": "group and what you can do is you might have seen with with containers is that",
    "start": "2838750",
    "end": "2843850"
  },
  {
    "text": "you can do things like you can freeze a container move it to a different server",
    "start": "2843850",
    "end": "2849040"
  },
  {
    "text": "and then thaw it and it will start running exactly where it was ok so now",
    "start": "2849040",
    "end": "2854800"
  },
  {
    "text": "you can think of ok so I can freeze all of the background tabs so they no longer consume any resources but if you switch",
    "start": "2854800",
    "end": "2862180"
  },
  {
    "text": "tabs then I will follow them again and this is a way to to very finely grain",
    "start": "2862180",
    "end": "2867730"
  },
  {
    "text": "control your resource consumption but this is something that is very close to the metal it's very difficult to control",
    "start": "2867730",
    "end": "2874420"
  },
  {
    "text": "if you don't have control over the exact hardware and in kernel version and",
    "start": "2874420",
    "end": "2879820"
  },
  {
    "text": "things like that and so it's not very portable but of course Google makes these",
    "start": "2879820",
    "end": "2885400"
  },
  {
    "text": "Chromebooks or cooperates with people make Chromebook so they can do these testing and make sure that it works but",
    "start": "2885400",
    "end": "2890470"
  },
  {
    "text": "there is quote for this inside of chromium so it might be interesting if you want to run chromium on an embedded",
    "start": "2890470",
    "end": "2895690"
  },
  {
    "text": "device for example yeah so so set our",
    "start": "2895690",
    "end": "2901660"
  },
  {
    "text": "limit it's like the poor man's version of this you could do some things you can set the maximum size of the data segment",
    "start": "2901660",
    "end": "2908680"
  },
  {
    "text": "and maximum size of the virtual memory",
    "start": "2908680",
    "end": "2912990"
  },
  {
    "text": "so this box here with the side got in at the side got in the render is it has now",
    "start": "2914210",
    "end": "2921140"
  },
  {
    "text": "been shrunk even further so it was already in these namespaces but now and has no access to the file system and",
    "start": "2921140",
    "end": "2926990"
  },
  {
    "text": "you've done dropped all capabilities and yeah and then you said resource limits",
    "start": "2926990",
    "end": "2934400"
  },
  {
    "text": "so basically you're just trying to shrink and shrink and shrink because what you are trying to protect the most",
    "start": "2934400",
    "end": "2939500"
  },
  {
    "text": "is the render process most of these other processes are fine because they're",
    "start": "2939500",
    "end": "2944690"
  },
  {
    "text": "your own code you're running your own code you're not running anybody else's code you're fairly safe but still",
    "start": "2944690",
    "end": "2949880"
  },
  {
    "text": "they're sandbox right but the render process that's where you're going to be interpreting your JavaScript that's",
    "start": "2949880",
    "end": "2955880"
  },
  {
    "text": "where you're going to be decoding your media if you're doing a software decoding and so you just stuff that into",
    "start": "2955880",
    "end": "2962870"
  },
  {
    "text": "the smallest smallest sandbox possible so then we can go and look at this",
    "start": "2962870",
    "end": "2970280"
  },
  {
    "text": "picture again and so when it says namespace sandbox up there then that is",
    "start": "2970280",
    "end": "2976370"
  },
  {
    "text": "a user name space basically what I don't think this line is very good in this box",
    "start": "2976370",
    "end": "2982520"
  },
  {
    "text": "but basically it says on this system I can create a user name space",
    "start": "2982520",
    "end": "2987920"
  },
  {
    "text": "unprivileged I remember what I said is that if you can create a user name space",
    "start": "2987920",
    "end": "2993470"
  },
  {
    "text": "unprivileged inside of that namespace you are route and then suddenly you can",
    "start": "2993470",
    "end": "2998540"
  },
  {
    "text": "create stuff that you need privilege to create like a pin namespace in a network namespace so if you try this out like",
    "start": "2998540",
    "end": "3007480"
  },
  {
    "text": "sit down and want to do some C then that's something to be aware of like if you pass only a pig and a network",
    "start": "3007480",
    "end": "3014760"
  },
  {
    "text": "namespace flag to clone it will fail you need to be able to create the user",
    "start": "3014760",
    "end": "3020260"
  },
  {
    "text": "namespace so it basically says that's possible and it also said did succeed in",
    "start": "3020260",
    "end": "3026110"
  },
  {
    "text": "creating a pit namespace to succeed in making an upright namespace it succeeded in making a second BPF sandbox and also",
    "start": "3026110",
    "end": "3032650"
  },
  {
    "text": "to do that with T Sync then it also says that Yama LS M enforcing is on now I'm",
    "start": "3032650",
    "end": "3039160"
  },
  {
    "text": "going to not going to talk so much about that but that becomes that's more interesting with regards to more of this",
    "start": "3039160",
    "end": "3044880"
  },
  {
    "text": "internal threat so one of the things that you will see both",
    "start": "3044880",
    "end": "3051759"
  },
  {
    "text": "on windows on the NEX and many other different operating systems is that processes need to be debuggable right so",
    "start": "3051759",
    "end": "3058569"
  },
  {
    "text": "you need some way to attach your debugger to inspect the memory to be able to set breakpoints and do all of",
    "start": "3058569",
    "end": "3063970"
  },
  {
    "text": "these things these to be able to debug a process requires very powerful system",
    "start": "3063970",
    "end": "3069999"
  },
  {
    "text": "api's because you're basically outside of this process but you are allowed to go and inspect the memory of this",
    "start": "3069999",
    "end": "3076059"
  },
  {
    "text": "process you're allowed to manipulate its execution this is very powerful api's",
    "start": "3076059",
    "end": "3081480"
  },
  {
    "text": "and that's good for debugging but it is pretty bad for keeping secrets because",
    "start": "3081480",
    "end": "3089380"
  },
  {
    "text": "now if you have some kind of malware on your system then it can use the same api's to go and and and fish secrets out",
    "start": "3089380",
    "end": "3098440"
  },
  {
    "text": "of your memory right and and so linux",
    "start": "3098440",
    "end": "3103930"
  },
  {
    "text": "has been used spending a lot of time making these LSMs linux security modules to try to enforce more of those kinds of",
    "start": "3103930",
    "end": "3111640"
  },
  {
    "text": "security policies and they're very much based on on these internal threats so",
    "start": "3111640",
    "end": "3117160"
  },
  {
    "text": "something already running a new machine if you want to take more into this I",
    "start": "3117160",
    "end": "3122700"
  },
  {
    "text": "spent a lot of time reading chromium and kernel source code Linux man pages is",
    "start": "3122700",
    "end": "3128349"
  },
  {
    "text": "awesome lwn net also michael cask is an",
    "start": "3128349",
    "end": "3134019"
  },
  {
    "text": "awesome trainer and author he wrote the lynx programming it interface of me he",
    "start": "3134019",
    "end": "3139359"
  },
  {
    "text": "often does training in Norway so if you want to do to learn more about low-level Linux programming he's uh he's awesome",
    "start": "3139359",
    "end": "3146589"
  },
  {
    "text": "in the book is awesome he also has a course that goes specifically into Linux security and isolation api's and there",
    "start": "3146589",
    "end": "3153910"
  },
  {
    "text": "he also goes more into seed groups so if that's something that you find interesting that's definitely something",
    "start": "3153910",
    "end": "3159789"
  },
  {
    "text": "to look at and that's my talk so thank",
    "start": "3159789",
    "end": "3165069"
  },
  {
    "text": "you very much ok so any questions if not",
    "start": "3165069",
    "end": "3174519"
  },
  {
    "text": "you can come out down here after yes",
    "start": "3174519",
    "end": "3178170"
  },
  {
    "text": "i-i say more or less everything but do you able to have different kind of api's like what you will see oh sorry I should",
    "start": "3188100",
    "end": "3194140"
  },
  {
    "text": "repeat your questions do you have equivalent security mechanisms in used in chromium for Windows and I think the",
    "start": "3194140",
    "end": "3203590"
  },
  {
    "text": "high level goals of the sandbox is the same no matter what platform you're on but it also depends on what is available",
    "start": "3203590",
    "end": "3210000"
  },
  {
    "text": "on your platform what is is used to actually construct the sandbox and so so",
    "start": "3210000",
    "end": "3217690"
  },
  {
    "text": "and the process architecture is the same and the security concerns are the same",
    "start": "3217690",
    "end": "3222720"
  },
  {
    "text": "so so a lot of the problem domain it Maps but what you see generally in",
    "start": "3222720",
    "end": "3230080"
  },
  {
    "text": "chromium so most of the code is cross-platform and runs on all platforms and this is kind of interesting because",
    "start": "3230080",
    "end": "3235150"
  },
  {
    "text": "you will have things that normally you would only use on Linux but they decide",
    "start": "3235150",
    "end": "3240510"
  },
  {
    "text": "oftentimes they'll pull in the library only on Linux and after a while they'll decide we're going to have this",
    "start": "3240510",
    "end": "3245950"
  },
  {
    "text": "everywhere because it's easier and so you'll end up with like okay so we're going to do the font handling using this",
    "start": "3245950",
    "end": "3252070"
  },
  {
    "text": "open source library and we're going to be using it across all of the platforms and very often that is what you see",
    "start": "3252070",
    "end": "3258280"
  },
  {
    "text": "inside of chromium but when it comes to this part it's almost all of it is",
    "start": "3258280",
    "end": "3264910"
  },
  {
    "text": "platform specific so it's very very little that is is common because it's",
    "start": "3264910",
    "end": "3271630"
  },
  {
    "text": "using native functionality I'm not sure that answered your question yeah okay good",
    "start": "3271630",
    "end": "3276700"
  },
  {
    "text": "any more questions okay thank you",
    "start": "3276700",
    "end": "3282020"
  },
  {
    "text": "[Applause]",
    "start": "3282020",
    "end": "3286139"
  }
]