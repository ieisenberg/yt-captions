[
  {
    "text": "welcome everybody uh thanks so much for joining me today my name is brandon minnick and in this",
    "start": "8000",
    "end": "14320"
  },
  {
    "text": "session we'll be talking about building graphql apis in c sharp",
    "start": "14320",
    "end": "20240"
  },
  {
    "text": "i'm so excited to be with you here today because",
    "start": "20240",
    "end": "26160"
  },
  {
    "text": "i first learned about graphql just a couple years ago and i remember the first time i got to sit in a session",
    "start": "26160",
    "end": "33040"
  },
  {
    "text": "just like this and learn about it my my mind was blown i was so impressed by how amazing graphql is and just can't",
    "start": "33040",
    "end": "41280"
  },
  {
    "text": "wait to share that with you today graphql is a",
    "start": "41280",
    "end": "46480"
  },
  {
    "text": "really amazing technology that i truly believe this is the future of building",
    "start": "46480",
    "end": "52079"
  },
  {
    "text": "apis so kind of like how today everything or most things are built in",
    "start": "52079",
    "end": "57199"
  },
  {
    "text": "rest and you know if uh if a fellow developer came to you and said hey can you help me build this api",
    "start": "57199",
    "end": "63440"
  },
  {
    "text": "i'm trying to build it and so using xml you'd be like soap why why are you building a soap api",
    "start": "63440",
    "end": "70479"
  },
  {
    "text": "i truly believe in a couple years from now we'll be saying the same thing about rest versus graphql so in say five to",
    "start": "70479",
    "end": "77119"
  },
  {
    "text": "ten years somebody will come to you on your team and say hey can you help me out i'm working on this rest api",
    "start": "77119",
    "end": "82560"
  },
  {
    "text": "endpoint like rest why why are you doing it in rest let's do it in graphql",
    "start": "82560",
    "end": "88240"
  },
  {
    "text": "um because it is an insanely powerful technology and what's interesting is",
    "start": "88240",
    "end": "94960"
  },
  {
    "text": "it's already being used by millions of developers around the world big companies like netflix uh uber airbnb",
    "start": "94960",
    "end": "102960"
  },
  {
    "text": "github are all already using graphql but they're doing it all in in",
    "start": "102960",
    "end": "109200"
  },
  {
    "text": "javascript um graphql still hasn't really taken a foothold in the c-sharp world",
    "start": "109200",
    "end": "114880"
  },
  {
    "text": "yet uh so just by joining me today and hanging out in this session we are literally at the",
    "start": "114880",
    "end": "122079"
  },
  {
    "text": "forefront of this graphql movement in csharpen.net and truly will be the",
    "start": "122079",
    "end": "127600"
  },
  {
    "text": "leaders on our teams and our communities helping to get these started um",
    "start": "127600",
    "end": "133360"
  },
  {
    "text": "because like i said the.net community hasn't really embraced graphql",
    "start": "133360",
    "end": "139280"
  },
  {
    "text": "yet but we will so before we get started today i want to point out two links that you'll",
    "start": "139280",
    "end": "145040"
  },
  {
    "text": "see on the bottom of just about every slide today on the bottom left this is my twitter",
    "start": "145040",
    "end": "150720"
  },
  {
    "text": "handle this is the best way to reach me you can find me on twitter at the code traveler so if you have any questions if",
    "start": "150720",
    "end": "156720"
  },
  {
    "text": "you want to chat about c sharp stuff graphql stuff my messages are always open",
    "start": "156720",
    "end": "162640"
  },
  {
    "text": "i'm actually a mobile developer by trade i build ios and android apps in c sharp using xamarin.net maui",
    "start": "162640",
    "end": "169680"
  },
  {
    "text": "and we'll explain more why i love graphql so much as a client-side developer in just a bit",
    "start": "169680",
    "end": "175200"
  },
  {
    "text": "and then here on the bottom right this is my my website and i built a web page just just for us just for today's",
    "start": "175200",
    "end": "181920"
  },
  {
    "text": "session so this is where you can find everything don't so don't worry about memorizing anything today uh just make sure you",
    "start": "181920",
    "end": "188000"
  },
  {
    "text": "grab this link at some point so grab it take a picture of your phone bookmark it you can share it with your",
    "start": "188000",
    "end": "193519"
  },
  {
    "text": "friends your colleagues because this is where you can find everything from today's session so",
    "start": "193519",
    "end": "198879"
  },
  {
    "text": "everything from the slides i'll be posting a link to the recording once we've got it up on youtube uh the code",
    "start": "198879",
    "end": "206239"
  },
  {
    "text": "we're gonna be doing today i have that already done in and saved in github so",
    "start": "206239",
    "end": "211280"
  },
  {
    "text": "i've got links to that as well as graphql workshops and also more resources on graphql that you can use to",
    "start": "211280",
    "end": "218319"
  },
  {
    "text": "help you get started on your journey so",
    "start": "218319",
    "end": "224640"
  },
  {
    "text": "what is graphql um well in its most basic sense it's a graph",
    "start": "225599",
    "end": "232879"
  },
  {
    "text": "query language uh that's quite literally what graphql stands for uh but",
    "start": "232879",
    "end": "238480"
  },
  {
    "text": "really what it is is it essentially inverts how we think of our apis",
    "start": "238480",
    "end": "246080"
  },
  {
    "text": "um so today for example as as a mobile developer",
    "start": "246080",
    "end": "251200"
  },
  {
    "text": "i rely on rest apis to give me data and also for me to update things on the",
    "start": "251200",
    "end": "257600"
  },
  {
    "text": "server and so the the back end teams they've built out a bunch of rest apis",
    "start": "257600",
    "end": "263680"
  },
  {
    "text": "that i could use to say retrieve it retrieve data about a user so i could call my user api",
    "start": "263680",
    "end": "270639"
  },
  {
    "text": "and that will always give me back the same dto that same c-sharp model the same properties and fields",
    "start": "270639",
    "end": "278080"
  },
  {
    "text": "but depending on the user i ask for maybe i input a different user's id i'll get",
    "start": "278080",
    "end": "283600"
  },
  {
    "text": "different information back but that model is always going to be the same from that same rest api endpoint",
    "start": "283600",
    "end": "289759"
  },
  {
    "text": "likewise if i want to change anything server side there's a specific api for that so with",
    "start": "289759",
    "end": "296400"
  },
  {
    "text": "rest i make a post request or an update request or whatever it might be to update something server side",
    "start": "296400",
    "end": "304080"
  },
  {
    "text": "and that cert or that rest api only does that one thing so if i want to update a user's email address i'll have",
    "start": "304080",
    "end": "310960"
  },
  {
    "text": "to send a post request to the api that can do that and if i want to do anything else",
    "start": "310960",
    "end": "316800"
  },
  {
    "text": "we got to build a whole nother rest api and usually that's not too bad",
    "start": "316800",
    "end": "321840"
  },
  {
    "text": "especially if i'm working by myself i've i've got a couple apps in the app store that i've built both the mobile side and",
    "start": "321840",
    "end": "328080"
  },
  {
    "text": "the back end side for so it's really easy for me to do that but in reality uh we work on teams and building a new rest",
    "start": "328080",
    "end": "335680"
  },
  {
    "text": "api endpoint for something we need in our mobile apps means that well we've got to open up a ticket with our back",
    "start": "335680",
    "end": "341520"
  },
  {
    "text": "end team they add it to their backlog eventually they get around to creating that new api",
    "start": "341520",
    "end": "347280"
  },
  {
    "text": "endpoint in a couple weeks it'll make its way to qa and then prod and then finally",
    "start": "347280",
    "end": "353600"
  },
  {
    "text": "i can consume that api and leverage it in my mobile app um with graphql",
    "start": "353600",
    "end": "359360"
  },
  {
    "text": "we're flipping that model all the way around the way graphql works is from the client",
    "start": "359360",
    "end": "365440"
  },
  {
    "text": "side i can request anything i want i basically tell",
    "start": "365440",
    "end": "370800"
  },
  {
    "text": "the graphql endpoint exactly what i want what i need and it sends it back to me",
    "start": "370800",
    "end": "376319"
  },
  {
    "text": "and so with graphql there's no wasted data there's",
    "start": "376319",
    "end": "381520"
  },
  {
    "text": "no wasted round trips back and forth to the server it's a lot more efficient and",
    "start": "381520",
    "end": "387120"
  },
  {
    "text": "in terms of just velocity developer velocity right now now everything's there it's just waiting",
    "start": "387120",
    "end": "393600"
  },
  {
    "text": "for me to ask for it and i don't have to wait on my back end team to build out new apis and test them and get them to",
    "start": "393600",
    "end": "399680"
  },
  {
    "text": "the production servers before we can finally add these features to our mobile app so",
    "start": "399680",
    "end": "405680"
  },
  {
    "text": "let's go back because to really understand graphql it's helpful to know",
    "start": "405680",
    "end": "411520"
  },
  {
    "text": "where it came from so let's go back to the year 2012. it's",
    "start": "411520",
    "end": "417759"
  },
  {
    "text": "crazy to think that was almost a decade ago but in 2012 was when facebook",
    "start": "417759",
    "end": "423919"
  },
  {
    "text": "launched their first native mobile app uh facebook always had a web app before",
    "start": "423919",
    "end": "429759"
  },
  {
    "text": "then but in around the 2012 time frame they said you know what i think this ios and",
    "start": "429759",
    "end": "436080"
  },
  {
    "text": "android thing is is here to stay we should probably make an app for it and they did and facebook launched the app",
    "start": "436080",
    "end": "442080"
  },
  {
    "text": "to the app store and it just got slammed in reviews tons of one star reviews two star",
    "start": "442080",
    "end": "448400"
  },
  {
    "text": "reviews if anybody here was on facebook using the mobile app at that time you probably remember",
    "start": "448400",
    "end": "454000"
  },
  {
    "text": "the facebook app was really slow it took forever to load it would burn through your mobile data",
    "start": "454000",
    "end": "460400"
  },
  {
    "text": "plan because it was just pulling in so much data and then at the same time your",
    "start": "460400",
    "end": "465599"
  },
  {
    "text": "cpu is running full throttle so your phone's overheating your batteries draining and that was all the reviews in",
    "start": "465599",
    "end": "472080"
  },
  {
    "text": "the app store because the facebook app has a lot of data i mean what what is facebook without data",
    "start": "472080",
    "end": "479039"
  },
  {
    "text": "right so they kind of needed to do that and you can look at these screenshots",
    "start": "479039",
    "end": "484479"
  },
  {
    "text": "that i've posted here these are screenshots from from my facebook page and just thinking about all this data",
    "start": "484479",
    "end": "490319"
  },
  {
    "text": "that loads just when i launch the app just when i tap that button on the home screen i get information about uh let's",
    "start": "490319",
    "end": "496960"
  },
  {
    "text": "see this is the news feed here on the on the left so i get uh my news feed updates from my friends",
    "start": "496960",
    "end": "504400"
  },
  {
    "text": "about there's my friend taking his son to get donuts in the morning and so there's the picture there's a date",
    "start": "504400",
    "end": "510160"
  },
  {
    "text": "timestamp there's his name his profile picture uh above that are the facebook",
    "start": "510160",
    "end": "515279"
  },
  {
    "text": "stories so again with their profile pictures and their usernames and the videos embedded there",
    "start": "515279",
    "end": "520800"
  },
  {
    "text": "and what also loads when you launch the app is the notifications page so even more",
    "start": "520800",
    "end": "526320"
  },
  {
    "text": "data comes in on this notifications page so information about my buddy jeff getting married and um",
    "start": "526320",
    "end": "533920"
  },
  {
    "text": "i've got an event coming up called taco week and there's even friends",
    "start": "533920",
    "end": "539600"
  },
  {
    "text": "that i might know facebook you know wants to keep you on the platform so they want to connect you with more people and so here's people i don't even",
    "start": "539600",
    "end": "546320"
  },
  {
    "text": "know that they're saying you might know this person and here's how many mutual friends you have in common and all this",
    "start": "546320",
    "end": "551360"
  },
  {
    "text": "data is being downloaded as soon as you launch the app on your phone and so it's really no surprise that when",
    "start": "551360",
    "end": "557920"
  },
  {
    "text": "facebook first pushed this mobile app to the stores the app stores that it started burning through people's",
    "start": "557920",
    "end": "564080"
  },
  {
    "text": "cellular data plans it started uh really burning through people's batteries because the cpus got a process and",
    "start": "564080",
    "end": "570080"
  },
  {
    "text": "display all this information and when you think about it",
    "start": "570080",
    "end": "575440"
  },
  {
    "text": "from the lens of rest it makes a lot of sense so what's what's going to happen when i launch the",
    "start": "575440",
    "end": "581279"
  },
  {
    "text": "app right the the facebook app's going to first hit one rest api user slash id",
    "start": "581279",
    "end": "586880"
  },
  {
    "text": "so it's going to pull down information about me and then once it has that information then it can go to the next api and pull",
    "start": "586880",
    "end": "593680"
  },
  {
    "text": "down information about my upcoming events and it can go to another api and pull information about",
    "start": "593680",
    "end": "599839"
  },
  {
    "text": "my friends and then once it has the data back from those apis it can make another api call so for each friend",
    "start": "599839",
    "end": "606640"
  },
  {
    "text": "request it's got to then make a user request for that person and get their profile information and their uh and uh",
    "start": "606640",
    "end": "613120"
  },
  {
    "text": "how many friends we have in common and so what we get with rest apis is this cascading",
    "start": "613120",
    "end": "619519"
  },
  {
    "text": "api request so you start with one or two but then you have other api requests that depend on the data that comes back",
    "start": "619519",
    "end": "626320"
  },
  {
    "text": "and then you might have another api request to make that depends on the data that comes back from that so you kind of get this pyramid shape of api requests",
    "start": "626320",
    "end": "634320"
  },
  {
    "text": "and this is is really why the facebook app struggled because each api request means",
    "start": "634320",
    "end": "641200"
  },
  {
    "text": "it's going from my phone to the server back to my phone that round trip even if it only takes 10 30 milliseconds",
    "start": "641200",
    "end": "650640"
  },
  {
    "text": "if we have dozens if not hundreds of api requests that are launching and depending on each other when the app",
    "start": "650640",
    "end": "656399"
  },
  {
    "text": "opens well those really start to add up and so the the developers at facebook",
    "start": "656399",
    "end": "661600"
  },
  {
    "text": "were thinking about this and they're like there's you know there's got to be a better way and that's when they came up with the",
    "start": "661600",
    "end": "668480"
  },
  {
    "text": "idea for graphql so quick aside yes i did just say uh",
    "start": "668480",
    "end": "675040"
  },
  {
    "text": "facebook invented graphql um that was back in 2012 but today",
    "start": "675040",
    "end": "681279"
  },
  {
    "text": "graphql is owned by what's known as the graphql foundation so a lot of us here for c-sharp developers might be familiar",
    "start": "681279",
    "end": "687920"
  },
  {
    "text": "with the.netfoundation.net foundation is a not-for-profit that helps to",
    "start": "687920",
    "end": "693839"
  },
  {
    "text": "curate sponsor open-source c-sharp projects specifically you know popular nuget",
    "start": "693839",
    "end": "699519"
  },
  {
    "text": "packages that we might all use in our apps that if the developer decided to stop working on them one day then we'd",
    "start": "699519",
    "end": "705040"
  },
  {
    "text": "all be kind of hosed the.net foundation supports all those projects",
    "start": "705040",
    "end": "710720"
  },
  {
    "text": "likewise with the graphql foundation so the graphql foundation again not for profit um it controls and iterates on",
    "start": "710720",
    "end": "717839"
  },
  {
    "text": "the graphql spec so graphql is constantly improving and they're also the ones that kind of",
    "start": "717839",
    "end": "725200"
  },
  {
    "text": "shepherd and help sustain the graphql libraries like for all sorts of",
    "start": "725200",
    "end": "730560"
  },
  {
    "text": "different programming languages from react to c sharp so if you don't like facebook don't worry",
    "start": "730560",
    "end": "735920"
  },
  {
    "text": "you don't have to rely on them for your graphql technology anymore because it's all in the hands of the graphql",
    "start": "735920",
    "end": "741440"
  },
  {
    "text": "foundation but right so so the engineers at facebook looked at",
    "start": "741440",
    "end": "746720"
  },
  {
    "text": "that problem they had with making all these cascading rest api calls pulling in all this data some of it some of",
    "start": "746720",
    "end": "752240"
  },
  {
    "text": "which they're using some of which they're throwing away and they said there's got to be a better way so they consolidated everything down to",
    "start": "752240",
    "end": "759600"
  },
  {
    "text": "one graphql api endpoint now you might be thinking",
    "start": "759600",
    "end": "765680"
  },
  {
    "text": "wait a minute this api endpoint has to then return all the data facebook has an insane amount",
    "start": "765680",
    "end": "773519"
  },
  {
    "text": "of data they probably have petabytes of data if not more um so how how do you get all",
    "start": "773519",
    "end": "779440"
  },
  {
    "text": "that data back from one api call and and even if it's just scoped to the user you know i've been on facebook for over a",
    "start": "779440",
    "end": "785839"
  },
  {
    "text": "decade that would still be probably gig's worth of data coming back from this one api call even it was just",
    "start": "785839",
    "end": "792560"
  },
  {
    "text": "scoped to me well the way graphql works",
    "start": "792560",
    "end": "798079"
  },
  {
    "text": "is we reach out to or when we make that request to the graphql api",
    "start": "798079",
    "end": "803839"
  },
  {
    "text": "we specify exactly what we want so take a look at this example query and",
    "start": "803839",
    "end": "809440"
  },
  {
    "text": "response on the left i tell the facebook api exactly what i want so",
    "start": "809440",
    "end": "815440"
  },
  {
    "text": "i say that i want to get information about a user so i pass in that user's id",
    "start": "815440",
    "end": "820560"
  },
  {
    "text": "and then i say i want to know that user's name and the upcoming events count",
    "start": "820560",
    "end": "825600"
  },
  {
    "text": "and also for that user show me their show me some friend suggestions uh in this case just give me one give me the",
    "start": "825600",
    "end": "831279"
  },
  {
    "text": "first one and for that friend let me know that person's name and how many mutual friends we have in",
    "start": "831279",
    "end": "837600"
  },
  {
    "text": "common and so i send that to the graphql api endpoint and what comes back is this",
    "start": "837600",
    "end": "843440"
  },
  {
    "text": "json response now this is the same json that we know and love it's the same json that we use",
    "start": "843440",
    "end": "849600"
  },
  {
    "text": "in in rest so if you know how to consume a json payload deserialize it using",
    "start": "849600",
    "end": "856480"
  },
  {
    "text": "either system.tx.json or newtonsoft.json into c sharp then you already know how",
    "start": "856480",
    "end": "861839"
  },
  {
    "text": "to handle the graphql response which is just really nice so the learning curve handling these responses super low",
    "start": "861839",
    "end": "868480"
  },
  {
    "text": "because it's the same thing that we would get back from a rest api but look at the data that came back",
    "start": "868480",
    "end": "875680"
  },
  {
    "text": "it's exactly the data that i asked for there's there's no more data in there there's no less data",
    "start": "875680",
    "end": "881199"
  },
  {
    "text": "if we look at it it gives me the user name which is me brandon minik it shows",
    "start": "881199",
    "end": "886240"
  },
  {
    "text": "me that i have four upcoming events count or four upcoming events and then for the one front suggestion it",
    "start": "886240",
    "end": "893199"
  },
  {
    "text": "lets me know that hey there's another guy on facebook his name's seth juarez and you have 18 mutual friends maybe you",
    "start": "893199",
    "end": "899120"
  },
  {
    "text": "should reach out so what we get here is",
    "start": "899120",
    "end": "904720"
  },
  {
    "text": "one round trip so i don't have to make multiple api calls to the server i don't",
    "start": "904720",
    "end": "910399"
  },
  {
    "text": "have to like we had to in rest first hit this one api endpoint to get information",
    "start": "910399",
    "end": "915680"
  },
  {
    "text": "about me the user and then hit another api endpoint to get information about the mutual friends and so we can do this",
    "start": "915680",
    "end": "922720"
  },
  {
    "text": "all in one round trip one payload and we're not throwing away any data um with",
    "start": "922720",
    "end": "929839"
  },
  {
    "text": "with rest there's a lot of times we get the responses back and there might be",
    "start": "929839",
    "end": "935680"
  },
  {
    "text": "10 properties in that dto and we only really want two of them so what do we do well we just throw the other eight away",
    "start": "935680",
    "end": "942160"
  },
  {
    "text": "but with mobile apps that's painful because i just burned through your data plan",
    "start": "942160",
    "end": "948480"
  },
  {
    "text": "because i have an inefficient rest api endpoint so with graphql i don't have to worry about that anymore i get exactly",
    "start": "948480",
    "end": "954160"
  },
  {
    "text": "what i want back from the server and if i want to",
    "start": "954160",
    "end": "959600"
  },
  {
    "text": "change the data i get back i can just modify the query so again i don't have to wait on",
    "start": "959600",
    "end": "965519"
  },
  {
    "text": "a new api from my back end team i can just literally change the shape of the response to handle whatever new feature",
    "start": "965519",
    "end": "973040"
  },
  {
    "text": "i'm working on in my mobile app now yes this is",
    "start": "973040",
    "end": "979279"
  },
  {
    "text": "a json response but if you look closely this query is not json",
    "start": "979279",
    "end": "985920"
  },
  {
    "text": "it it looks kind of like json um but if you look a little closer you'll see",
    "start": "985920",
    "end": "991199"
  },
  {
    "text": "there's there's no double quotes we don't have the field name colon value",
    "start": "991199",
    "end": "997199"
  },
  {
    "text": "um this this is our query language so this is this is where the ql in graphql comes in",
    "start": "997199",
    "end": "1004160"
  },
  {
    "text": "and i know what you're thinking like oh great here he's been telling me how amazing graphql is but now i gotta learn",
    "start": "1004160",
    "end": "1010639"
  },
  {
    "text": "a new language for it i don't have time for that well don't worry about that it's",
    "start": "1010639",
    "end": "1016000"
  },
  {
    "text": "actually really easy um and to be honest i've been using graphql for years and i haven't memorized the query language so",
    "start": "1016000",
    "end": "1022639"
  },
  {
    "text": "let me show you what that looks like we can pull up the github's graphql api",
    "start": "1022639",
    "end": "1028798"
  },
  {
    "text": "so what i've done in my browser i've navigated to boop",
    "start": "1028799",
    "end": "1034079"
  },
  {
    "text": "this is github's graphql api so if you when you navigate to here",
    "start": "1034079",
    "end": "1039360"
  },
  {
    "text": "in your browser you're create you're greeted with this page called or this",
    "start": "1039360",
    "end": "1044558"
  },
  {
    "text": "tool rather called graphical uh it's a clever play on words because you know it's it's a graphical user interface for",
    "start": "1044559",
    "end": "1052080"
  },
  {
    "text": "graphql so graphical and you just you get this for free when",
    "start": "1052080",
    "end": "1057840"
  },
  {
    "text": "you build your graphql endpoint your graphql libraries will have this graphical user interface",
    "start": "1057840",
    "end": "1064720"
  },
  {
    "text": "in it there's a couple of them out there this one's graphical there's another one called graphql playground there's",
    "start": "1064720",
    "end": "1071120"
  },
  {
    "text": "another one called banana cake pop but you don't you don't have to worry about building this because it kind of comes",
    "start": "1071120",
    "end": "1077360"
  },
  {
    "text": "with the package so um the first thing i want to show off in graphical because this is one of my",
    "start": "1077360",
    "end": "1083520"
  },
  {
    "text": "favorite things about graphql is this docs tab here so when i tap on",
    "start": "1083520",
    "end": "1089679"
  },
  {
    "text": "the docs tab we'll see it opens up this documentation explorer",
    "start": "1089679",
    "end": "1095200"
  },
  {
    "text": "and this is really cool because graphql apis are self-documenting",
    "start": "1095200",
    "end": "1100640"
  },
  {
    "text": "so the way graphql has to work or does work is it already knows",
    "start": "1100640",
    "end": "1106640"
  },
  {
    "text": "all of the all of the objects classes fields that it can respond to back to",
    "start": "1106640",
    "end": "1112160"
  },
  {
    "text": "the client and so these tools like graphical like graphql playground um",
    "start": "1112160",
    "end": "1118400"
  },
  {
    "text": "all they do they just walk through that tree and they can provide us with all the documentation for our api so the github",
    "start": "1118400",
    "end": "1126240"
  },
  {
    "text": "team didn't have to write any docs for this they don't have i mean they do they're still you know good developers i",
    "start": "1126240",
    "end": "1132480"
  },
  {
    "text": "guess but it's all here in this tool for me now",
    "start": "1132480",
    "end": "1138640"
  },
  {
    "text": "the first thing we see here in this documentation explorer and i'm going to zoom in on it here",
    "start": "1138640",
    "end": "1143840"
  },
  {
    "text": "is there's two root types these are the same two root types that you'll see in every graphql backend",
    "start": "1143840",
    "end": "1152160"
  },
  {
    "text": "the first one being query and the second one being mutation now a query is essentially a",
    "start": "1152160",
    "end": "1159440"
  },
  {
    "text": "a read-only request from the server it means i want to get data from the server",
    "start": "1159440",
    "end": "1165200"
  },
  {
    "text": "but i don't want to change any data on the server so a query you can kind of think of like a get request right we're",
    "start": "1165200",
    "end": "1171360"
  },
  {
    "text": "not we're not changing anything on the backend we're just requesting data back we're making a query",
    "start": "1171360",
    "end": "1177600"
  },
  {
    "text": "a mutation does change something server side so that would be the equivalent to our our",
    "start": "1177600",
    "end": "1183039"
  },
  {
    "text": "puts our updates our deletes and rest and so",
    "start": "1183039",
    "end": "1189440"
  },
  {
    "text": "because i am i am logged into github right now this is this is live on my",
    "start": "1189440",
    "end": "1194799"
  },
  {
    "text": "github account we're going to stick to queries today because i don't want to risk changing anything and breaking any of my projects",
    "start": "1194799",
    "end": "1200880"
  },
  {
    "text": "and so what i'm going to start doing here is building out the graphql query here on",
    "start": "1200880",
    "end": "1206640"
  },
  {
    "text": "the left and to do it like i said you don't have to memorize anything because it tells us what to type so i'm going to",
    "start": "1206640",
    "end": "1213760"
  },
  {
    "text": "type in this query with a lowercase q and right away as i start typing it",
    "start": "1213760",
    "end": "1219280"
  },
  {
    "text": "you'll see intellisense pops up so that's pretty cool you don't even really have to know how to spell it i mean i",
    "start": "1219280",
    "end": "1224799"
  },
  {
    "text": "guess you could copy paste it too but yeah i'm gonna i'm gonna type in query and then what this tells me",
    "start": "1224799",
    "end": "1231520"
  },
  {
    "text": "is anytime i make a query to the graphql api it's going to return back",
    "start": "1231520",
    "end": "1238080"
  },
  {
    "text": "this query type or this query object and so if i click on this query object",
    "start": "1238080",
    "end": "1244080"
  },
  {
    "text": "now i can see all of the different requests that i can make so these are all the fields that we can get back from the github api and if",
    "start": "1244080",
    "end": "1251440"
  },
  {
    "text": "you're familiar with github a lot of these will probably look familiar like i can get information about a github organization i can get information about",
    "start": "1251440",
    "end": "1259039"
  },
  {
    "text": "a github repository i can get information about github user so let's do that let's do",
    "start": "1259039",
    "end": "1266159"
  },
  {
    "text": "let's query for a user and again i'm just going to type in whoops let's go",
    "start": "1266159",
    "end": "1271880"
  },
  {
    "text": "[Music] back accidental click there so i'm going to do is type in what's",
    "start": "1271880",
    "end": "1278559"
  },
  {
    "text": "here on the left again and so here my query i'm going to type in user",
    "start": "1278559",
    "end": "1283760"
  },
  {
    "text": "intellisense great looks like i'm typing everything right and then it also tells me i have to specify a login now in in the graphql",
    "start": "1283760",
    "end": "1291520"
  },
  {
    "text": "spec i mean there's there's a couple base types and you're probably already familiar with",
    "start": "1291520",
    "end": "1298159"
  },
  {
    "text": "things like date time string int bool those are all the base types",
    "start": "1298159",
    "end": "1304080"
  },
  {
    "text": "and graphql and everything builds off of that but what might look a little funny is this exclamation point",
    "start": "1304080",
    "end": "1310159"
  },
  {
    "text": "the the exclamation point means that it is not nullable so what what this is telling me here is",
    "start": "1310159",
    "end": "1317280"
  },
  {
    "text": "that if for my user login i have to pass in a string i can't just ignore that and",
    "start": "1317280",
    "end": "1323200"
  },
  {
    "text": "put in null so for let's bring up that oh intellisense even finished typing it for",
    "start": "1323200",
    "end": "1329360"
  },
  {
    "text": "me so for the login i'm going to put brminic this is my github username um",
    "start": "1329360",
    "end": "1335679"
  },
  {
    "text": "github calls well get them call some logins because it is your login but it's also just my public",
    "start": "1335679",
    "end": "1341200"
  },
  {
    "text": "github username login makes it sound like it's something secret i shouldn't be sharing",
    "start": "1341200",
    "end": "1346400"
  },
  {
    "text": "but um but right so now what i've said i want a query about this user br minik me brandon",
    "start": "1346400",
    "end": "1353360"
  },
  {
    "text": "minik and you'll see i'm still not done yet there's a there's a little red squiggle here saying that there's a syntax error",
    "start": "1353360",
    "end": "1360640"
  },
  {
    "text": "because because it expects more data i can't just say give me everything you got on this user because",
    "start": "1360640",
    "end": "1367120"
  },
  {
    "text": "remember graphql only returns back what we ask for so",
    "start": "1367120",
    "end": "1373120"
  },
  {
    "text": "if i click on the user object this is what's going to return from my user query we can go a layer deeper and see",
    "start": "1373120",
    "end": "1379440"
  },
  {
    "text": "what fields can i get back about a user and again if you've used github before",
    "start": "1379440",
    "end": "1386320"
  },
  {
    "text": "this is probably pretty intuitive that i can get information about like a user's bio i mean you can format an html if",
    "start": "1386320",
    "end": "1393120"
  },
  {
    "text": "maybe you're working on a website that makes it easier um you can see company",
    "start": "1393120",
    "end": "1398320"
  },
  {
    "text": "what else do we have created at i guess that's the time date time i created my github account",
    "start": "1398320",
    "end": "1405520"
  },
  {
    "text": "there's things like followers so we can tell it exactly what we want",
    "start": "1405520",
    "end": "1413600"
  },
  {
    "text": "there we go and then when i click the execute button",
    "start": "1414159",
    "end": "1419520"
  },
  {
    "text": "there we go there's our json response so just like we were talking about earlier",
    "start": "1419520",
    "end": "1425039"
  },
  {
    "text": "we provide a query saying here's exactly what i want i want to know more about",
    "start": "1425039",
    "end": "1430640"
  },
  {
    "text": "this user br minic i want to know their bio what company",
    "start": "1430640",
    "end": "1435679"
  },
  {
    "text": "they work at uh what else i request the date it was created at looks like i created my github account in 2015 and",
    "start": "1435679",
    "end": "1442559"
  },
  {
    "text": "the total followers account or total followers count that they have on github",
    "start": "1442559",
    "end": "1447679"
  },
  {
    "text": "and that's exactly what we got back and again this is just json and the response so it's the same json we know and love",
    "start": "1447679",
    "end": "1452880"
  },
  {
    "text": "we would then deserialize this consume it in in c sharp and likewise",
    "start": "1452880",
    "end": "1458480"
  },
  {
    "text": "let's say i uh i didn't i didn't care what what date and time",
    "start": "1458480",
    "end": "1464000"
  },
  {
    "text": "we created my github account we just delete that we re-execute this query and",
    "start": "1464000",
    "end": "1469200"
  },
  {
    "text": "it's magically gone so we get exactly the data back that we asked for",
    "start": "1469200",
    "end": "1475278"
  },
  {
    "text": "now so again just take a moment to think about how powerful this is so from the client",
    "start": "1475760",
    "end": "1482000"
  },
  {
    "text": "side i can request anything i want as long as the graphql server",
    "start": "1482000",
    "end": "1487600"
  },
  {
    "text": "exposes it as long as it will send it back to me i can request that data in any shape i",
    "start": "1487600",
    "end": "1493600"
  },
  {
    "text": "want i can add more queries here um so we could add another query here about a",
    "start": "1493600",
    "end": "1499679"
  },
  {
    "text": "repository and we can get all this information in one round trip even though some of the information like",
    "start": "1499679",
    "end": "1506640"
  },
  {
    "text": "the followers count that's nested data with rest that would take us two round trips because i would",
    "start": "1506640",
    "end": "1512240"
  },
  {
    "text": "have to get information about the user and then i could ask for information about followers but",
    "start": "1512240",
    "end": "1517679"
  },
  {
    "text": "with craftql one round trip and it puts the power in the hands of the client so",
    "start": "1517679",
    "end": "1523919"
  },
  {
    "text": "the api team doesn't have to constantly create more and more rest apis that only do one thing because now we have a",
    "start": "1523919",
    "end": "1529360"
  },
  {
    "text": "graphql endpoint that does everything okay so this is cool but",
    "start": "1529360",
    "end": "1537200"
  },
  {
    "text": "how does this really work right because we're just in the browser we're literally on github servers so ah like",
    "start": "1537200",
    "end": "1543919"
  },
  {
    "text": "is this really how we use graphql in our apps no like we're gonna be we're gonna be sending http requests and",
    "start": "1543919",
    "end": "1551760"
  },
  {
    "text": "making uh creating payloads so how do we do that so to show that off i'm going to open up",
    "start": "1551760",
    "end": "1559440"
  },
  {
    "text": "a tool called postman now if you've never heard of it postman is just a great tool that's one of my",
    "start": "1559440",
    "end": "1565679"
  },
  {
    "text": "favorites that helps us explore and test out apis so anytime i am building out a",
    "start": "1565679",
    "end": "1571919"
  },
  {
    "text": "back end i'll use postman to make those get requests to it post requests to make",
    "start": "1571919",
    "end": "1577760"
  },
  {
    "text": "sure my api's working like i think it should before i start writing code because then at least i know the api is",
    "start": "1577760",
    "end": "1583200"
  },
  {
    "text": "working and it's my code that's broken so here in postman we're going to make a call to github's graphql api so i've",
    "start": "1583200",
    "end": "1589760"
  },
  {
    "text": "already punched in the url for github it's api.github.com graphql",
    "start": "1589760",
    "end": "1596320"
  },
  {
    "text": "and the first thing i'm going to do i'm going to set this to be a post request",
    "start": "1596320",
    "end": "1602080"
  },
  {
    "text": "now you might be thinking wait a minute post that's that's a rest thing we're talking",
    "start": "1602080",
    "end": "1607919"
  },
  {
    "text": "graphql well it turns out every graphql request is just a post request",
    "start": "1607919",
    "end": "1614400"
  },
  {
    "text": "so if you already know how to make a post request in c sharp you already know",
    "start": "1614400",
    "end": "1619440"
  },
  {
    "text": "how to communicate with a graphql api endpoint so the same way you would",
    "start": "1619440",
    "end": "1625360"
  },
  {
    "text": "create a new http client send a post request to your rest api it's the same post that we're using for",
    "start": "1625360",
    "end": "1632720"
  },
  {
    "text": "graphql this is this is also something i find funny that",
    "start": "1632720",
    "end": "1638480"
  },
  {
    "text": "if you just google rest versus graphql you'll see all these wars going back and forth and",
    "start": "1638480",
    "end": "1644080"
  },
  {
    "text": "blog posts like uh rest is dead long live graphql and i'm like i don't know if you guys know what",
    "start": "1644080",
    "end": "1649919"
  },
  {
    "text": "you're talking about because graphql literally uses rest it's it's built on top of the rest protocol so rest isn't",
    "start": "1649919",
    "end": "1656559"
  },
  {
    "text": "going anywhere but yeah i also agree that graphql is the future but anyway so we set this to be a",
    "start": "1656559",
    "end": "1662559"
  },
  {
    "text": "post request and then in our body we're going to add one field",
    "start": "1662559",
    "end": "1669279"
  },
  {
    "text": "so the way graphql works we have one field called query and the value of that field",
    "start": "1669279",
    "end": "1676720"
  },
  {
    "text": "is literally what we just figured out here so this is this is literally what i do for my apps i",
    "start": "1676720",
    "end": "1682559"
  },
  {
    "text": "i jump into the the gui on the server so graphical in this case i play around with it until",
    "start": "1682559",
    "end": "1689039"
  },
  {
    "text": "i get my query shaped the way i want it to and then i just copy paste this so i'm going to copy this query",
    "start": "1689039",
    "end": "1695039"
  },
  {
    "text": "and i'm going to paste it in here and let's see i'm going to just get rid of",
    "start": "1695039",
    "end": "1701279"
  },
  {
    "text": "some of this white space so it stops yelling at me get it all on one line",
    "start": "1701279",
    "end": "1707200"
  },
  {
    "text": "one more there and then we also want to keep those quotes there we go so no more red squiggles",
    "start": "1707200",
    "end": "1714240"
  },
  {
    "text": "and so and so that's it uh just one field called query i paste in the value of the",
    "start": "1714240",
    "end": "1720720"
  },
  {
    "text": "graphql query that i just figured out using graphical and then when i send this post request",
    "start": "1720720",
    "end": "1726720"
  },
  {
    "text": "to the graphql api at github we get back again exactly the data i asked for so",
    "start": "1726720",
    "end": "1734159"
  },
  {
    "text": "again if you already know how to make a post request you can already access graphql api",
    "start": "1734159",
    "end": "1740000"
  },
  {
    "text": "endpoints because it it quite literally is the same thing",
    "start": "1740000",
    "end": "1745759"
  },
  {
    "text": "okay so i know i've i've been throwing a lot of stuff at you so let's do a quick review",
    "start": "1749760",
    "end": "1755360"
  },
  {
    "text": "graphql apis have one endpoint so unlike rest where you have multiple endpoints",
    "start": "1755360",
    "end": "1760720"
  },
  {
    "text": "that each just do one specific thing with graphql there's just one endpoint that does everything",
    "start": "1760720",
    "end": "1768559"
  },
  {
    "text": "graphql apis are self-documenting so because when we create our graphql endpoint you'll see that in just a",
    "start": "1769440",
    "end": "1775360"
  },
  {
    "text": "minute when we jump into the code to create our our own graphql api uh we we have to define everything when we",
    "start": "1775360",
    "end": "1782960"
  },
  {
    "text": "create our graphql server and so these tools like graph graphical that we were just playing around with",
    "start": "1782960",
    "end": "1789360"
  },
  {
    "text": "that documentation explorer just walks through the tree and sees all the queries that i've created",
    "start": "1789360",
    "end": "1794880"
  },
  {
    "text": "and then just exposes that to you as the documentation so you don't have to worry about necessarily keeping your docs up",
    "start": "1794880",
    "end": "1800080"
  },
  {
    "text": "to date with the api because the docs are the api",
    "start": "1800080",
    "end": "1806398"
  },
  {
    "text": "graphql requests are just post requests so they leverage rest's post http method so again if you already know how to make",
    "start": "1806480",
    "end": "1812480"
  },
  {
    "text": "a post request you know how to make a graphql request that graphql request",
    "start": "1812480",
    "end": "1817600"
  },
  {
    "text": "is it contains json in the request body and that json just contains one field query",
    "start": "1817600",
    "end": "1823440"
  },
  {
    "text": "and to which we just copy paste our graphql query and then that graphql response is json",
    "start": "1823440",
    "end": "1830720"
  },
  {
    "text": "so just like rest apis graphql apis also return the same json that we know and",
    "start": "1830720",
    "end": "1836720"
  },
  {
    "text": "love okay so let's get ready for some code",
    "start": "1836720",
    "end": "1842559"
  },
  {
    "text": "now i do want to highlight the two most popular graphql libraries for us in.net",
    "start": "1842559",
    "end": "1849840"
  },
  {
    "text": "in c-sharp um the first one it's i gave it the crown because it's",
    "start": "1849840",
    "end": "1854880"
  },
  {
    "text": "currently the king um it has the most nougat downloads it has the most open",
    "start": "1854880",
    "end": "1860240"
  },
  {
    "text": "source contributors um yep it's open source on github it's called graphql",
    "start": "1860240",
    "end": "1866480"
  },
  {
    "text": "dash there we go.net now this this was also the first um so there's a",
    "start": "1866640",
    "end": "1874960"
  },
  {
    "text": "pretty easy explanation to why it has the most downloads because it's well it's been around the longest um it works",
    "start": "1874960",
    "end": "1880480"
  },
  {
    "text": "really well i i've used it in a couple of my apps but there's a rising star here and it's called hot chocolate",
    "start": "1880480",
    "end": "1887919"
  },
  {
    "text": "there's a there's a company based out of switzerland called chili cream that makes hot chocolate they've got a lot of",
    "start": "1887919",
    "end": "1894399"
  },
  {
    "text": "fun names and you'll see a couple more later hot chocolate is incredible this is this",
    "start": "1894399",
    "end": "1900960"
  },
  {
    "text": "is what we're going to use today for our demos like i said it's it still doesn't have as many nougat downloads",
    "start": "1900960",
    "end": "1907760"
  },
  {
    "text": "but it's just because uh graphql.net came first so highly recommend hot chocolate to you",
    "start": "1907760",
    "end": "1914640"
  },
  {
    "text": "this is gonna be the one we we punch into our app today so let's do it let's jump into some code",
    "start": "1914640",
    "end": "1920240"
  },
  {
    "text": "here i've got visual studio for mac opened up",
    "start": "1920240",
    "end": "1925519"
  },
  {
    "text": "and again don't worry about memorizing anything because this demo is already done it's",
    "start": "1925519",
    "end": "1931440"
  },
  {
    "text": "already up on github and i'll make sure to share the link with you before we before we end so sit back and relax",
    "start": "1931440",
    "end": "1937679"
  },
  {
    "text": "we're just going to make a an empty asp.net core app",
    "start": "1937679",
    "end": "1942880"
  },
  {
    "text": "and yeah let's do it in dot net six that sounds good we'll call it our graphql demo",
    "start": "1942880",
    "end": "1950639"
  },
  {
    "text": "no thank you okay so the first thing we're going to do we're going to add in that hot chocolate nougat package",
    "start": "1953679",
    "end": "1959840"
  },
  {
    "text": "so let's search for hot chocolate and specifically there's an asp.net core",
    "start": "1959840",
    "end": "1966640"
  },
  {
    "text": "version or implementation so let's see did i pass it hot chocolate dot",
    "start": "1966640",
    "end": "1973360"
  },
  {
    "text": "asp.net core that's authentication hot chocolate let's just try and type in",
    "start": "1973360",
    "end": "1978640"
  },
  {
    "text": "asp net core there we go that's the one we want so we'll just add in the hot chocolate dot",
    "start": "1978640",
    "end": "1985360"
  },
  {
    "text": "asp.net core nougat package uh we'll give this a second to just to download",
    "start": "1985360",
    "end": "1991440"
  },
  {
    "text": "and add it in um i've noticed this this is a pretty substantial nougat",
    "start": "1991440",
    "end": "1997679"
  },
  {
    "text": "package um it's got a lot of dependencies in it so sometimes it takes a minute",
    "start": "1997679",
    "end": "2002720"
  },
  {
    "text": "so tell it while this is working on it uh what questions do we have so far about graphql",
    "start": "2002720",
    "end": "2009279"
  },
  {
    "text": "yes right here in the front access control um so",
    "start": "2009279",
    "end": "2015760"
  },
  {
    "text": "similar rules apply for rest um so like for example the github api they use",
    "start": "2015760",
    "end": "2021360"
  },
  {
    "text": "bearer tokens um so i just include that in the header and i already i did that before the demo",
    "start": "2021360",
    "end": "2027600"
  },
  {
    "text": "because i didn't want to share with you guys my actual bearer token but uh yeah that way it authentic authenticates it",
    "start": "2027600",
    "end": "2033600"
  },
  {
    "text": "knows it's me and so yeah all that same security that we know with rest is is still there",
    "start": "2033600",
    "end": "2039600"
  },
  {
    "text": "we're still downloading i think i saw a hand right here yes sir",
    "start": "2039600",
    "end": "2044000"
  },
  {
    "text": "which um a lot of teams working on different domains within your application or application area so how",
    "start": "2045279",
    "end": "2052000"
  },
  {
    "text": "would you consolidate different teams working on different parts of the graph",
    "start": "2052000",
    "end": "2058240"
  },
  {
    "text": "good question so yeah just to repeat it uh for everybody at home the question was what if you have hey there we go",
    "start": "2058240",
    "end": "2064158"
  },
  {
    "text": "accept those terms because i don't have a choice um what if we have multiple teams at our company and we all work on",
    "start": "2064159",
    "end": "2070480"
  },
  {
    "text": "different parts of the api so it sounds like maybe you have different sub domains um one has each has its own rest",
    "start": "2070480",
    "end": "2077280"
  },
  {
    "text": "api or set of rest apis so you got a couple choices because you can still do that with graphql you don't",
    "start": "2077280",
    "end": "2083839"
  },
  {
    "text": "only have to have one api endpoint it's easy for me to consume as a user of",
    "start": "2083839",
    "end": "2089440"
  },
  {
    "text": "say github because i just have to point to the one but internally does github have maybe a couple or their own",
    "start": "2089440",
    "end": "2097040"
  },
  {
    "text": "internal apis also built on graphql graphql probably",
    "start": "2097040",
    "end": "2102240"
  },
  {
    "text": "so you can split it up like that you could have your teams each have their own different subdomain",
    "start": "2102240",
    "end": "2108000"
  },
  {
    "text": "and actually we'll see in the demo now that we've got this installed how it might get a little messy but you",
    "start": "2108000",
    "end": "2114720"
  },
  {
    "text": "could still use version control and merge it all into the same place you'd probably just have to be well disciplined in your devops so let's",
    "start": "2114720",
    "end": "2122079"
  },
  {
    "text": "uh yeah let's keep running with this demo because maybe that'll answer your question",
    "start": "2122079",
    "end": "2127839"
  },
  {
    "text": "so uh first things first has anybody here played with net six and these minimal apis yet",
    "start": "2127839",
    "end": "2134320"
  },
  {
    "text": "okay just a couple hands uh so this might look a little weird um it was definitely weird to me when i first",
    "start": "2134320",
    "end": "2139920"
  },
  {
    "text": "created this template when i was getting ready for this demo i was like whoa where's where's my startup where's my configure services method um",
    "start": "2139920",
    "end": "2147520"
  },
  {
    "text": "but after playing around with this for a couple minutes i love it uh because this this is it this is what this is an",
    "start": "2147520",
    "end": "2153680"
  },
  {
    "text": "asp.net core app with where they've the template at least here has mapped a",
    "start": "2153680",
    "end": "2159599"
  },
  {
    "text": "get api onto the index that if we ran this right now just bring up a web page",
    "start": "2159599",
    "end": "2164960"
  },
  {
    "text": "that says hello world so we're going to keep running with this because i think",
    "start": "2164960",
    "end": "2170480"
  },
  {
    "text": "as we go you'll pick up kind of where this might go in the old asp.net core templates so the first thing we're going",
    "start": "2170480",
    "end": "2176640"
  },
  {
    "text": "to do we're going to add graphql to our services so i just come in here and i say add",
    "start": "2176640",
    "end": "2182560"
  },
  {
    "text": "graphql server and then i'm going to chain a method to it that says add",
    "start": "2182560",
    "end": "2188880"
  },
  {
    "text": "query type and i haven't we haven't created a query yet",
    "start": "2188880",
    "end": "2194320"
  },
  {
    "text": "so i'm going to actually leave this empty it'll give me a red squiggle but hopefully that'll be a good reminder to",
    "start": "2194320",
    "end": "2199440"
  },
  {
    "text": "come back to it and then the next thing we want to do is",
    "start": "2199440",
    "end": "2204720"
  },
  {
    "text": "we want to add in our graphql endpoint so to do that we'll say app.use routing",
    "start": "2204720",
    "end": "2212880"
  },
  {
    "text": "and then we'll say use endpoints",
    "start": "2212880",
    "end": "2217839"
  },
  {
    "text": "and the hot chocolate library gives us this handy dandy map graphql method",
    "start": "2218560",
    "end": "2224880"
  },
  {
    "text": "so again with what i just do technically two lines of code but",
    "start": "2224880",
    "end": "2230400"
  },
  {
    "text": "they're on three different lines that's that's basically it we've set up our graphql server um this graph this map",
    "start": "2230400",
    "end": "2237760"
  },
  {
    "text": "graphql method if we uh cheat a little bit and zoom in on intellisense we can get a sense of what",
    "start": "2237760",
    "end": "2245280"
  },
  {
    "text": "it's doing it's just giving us the slash graphql endpoint so once we keep",
    "start": "2245280",
    "end": "2251119"
  },
  {
    "text": "building our our models and build out this api and launch it in the browser i just go to slash graphql and that's my",
    "start": "2251119",
    "end": "2258400"
  },
  {
    "text": "graphql api endpoint okay so what do we want to build today well um",
    "start": "2258400",
    "end": "2263839"
  },
  {
    "text": "the kind of canonical hello world demo in graphql is kind of a building a library so so let's create some books so",
    "start": "2263839",
    "end": "2271599"
  },
  {
    "text": "i'm going to use i'm going to use records keep this code nice and concise so i'm",
    "start": "2271599",
    "end": "2277520"
  },
  {
    "text": "going to say public record book and each book has a string title",
    "start": "2277520",
    "end": "2284079"
  },
  {
    "text": "and we'll say public record author and each author will have a name",
    "start": "2284079",
    "end": "2290880"
  },
  {
    "text": "and also each book is going to have an author as well",
    "start": "2290880",
    "end": "2297040"
  },
  {
    "text": "so these are going to be my two data types that we're going to be playing around with and",
    "start": "2297040",
    "end": "2302720"
  },
  {
    "text": "now we can build out that query that belongs up here where the red squiggles are",
    "start": "2302720",
    "end": "2307920"
  },
  {
    "text": "so i'm going to create a class called query and",
    "start": "2307920",
    "end": "2313838"
  },
  {
    "text": "normally if we were building this ourselves for our real apps we'd be pointing to production data right we've",
    "start": "2313920",
    "end": "2320240"
  },
  {
    "text": "got a database somewhere that we can point to to pull the data out but i don't have that i mean i guess we",
    "start": "2320240",
    "end": "2326320"
  },
  {
    "text": "could i could have set that up ahead of time but why don't we just make some uh some dummy data here so we'll just make",
    "start": "2326320",
    "end": "2331680"
  },
  {
    "text": "a list of books and let's make up some books here so let's",
    "start": "2331680",
    "end": "2338000"
  },
  {
    "text": "create a book called um how about i love graphql",
    "start": "2338000",
    "end": "2345200"
  },
  {
    "text": "and authored by me",
    "start": "2345200",
    "end": "2350800"
  },
  {
    "text": "brandon minnick because i love graphql uh we can create another book",
    "start": "2350800",
    "end": "2356160"
  },
  {
    "text": "uh we'll say graphql is the future and",
    "start": "2356160",
    "end": "2362240"
  },
  {
    "text": "i also said that so let's attribute that one to me and then let's create one more book",
    "start": "2362240",
    "end": "2369040"
  },
  {
    "text": "and let's say let's call this one like i love soap",
    "start": "2369040",
    "end": "2376160"
  },
  {
    "text": "and xml by this other author",
    "start": "2376160",
    "end": "2381280"
  },
  {
    "text": "um let's say his name is probably john i hate",
    "start": "2381280",
    "end": "2388320"
  },
  {
    "text": "new technology",
    "start": "2388400",
    "end": "2393520"
  },
  {
    "text": "there we go what do we miss oh i see it",
    "start": "2393520",
    "end": "2400640"
  },
  {
    "text": "comma parentheses no more red squiggles all right okay so that's just gonna be our dummy",
    "start": "2400800",
    "end": "2406720"
  },
  {
    "text": "data like i said if if we're building this for real we'll be pointing our graphql queries to our actual production",
    "start": "2406720",
    "end": "2412720"
  },
  {
    "text": "data but speaking of those queries what do they look like well i'm going to say",
    "start": "2412720",
    "end": "2418800"
  },
  {
    "text": "i'm going to build one called books so this one will just return a list of books and i'm going to call it get books",
    "start": "2418800",
    "end": "2425839"
  },
  {
    "text": "and not surprisingly we're just going to point to our books data so this again normally point to maybe our",
    "start": "2425839",
    "end": "2432960"
  },
  {
    "text": "entity framework or actually what's really cool is let's say you have",
    "start": "2432960",
    "end": "2439040"
  },
  {
    "text": "oh this is also a great answer for your question let's say you already have a lot of",
    "start": "2439040",
    "end": "2444079"
  },
  {
    "text": "existing rest apis well a lot of companies nowadays are doing because let's be honest we put a lot of",
    "start": "2444079",
    "end": "2450160"
  },
  {
    "text": "investment into our existing backends right we don't want to just throw them out and redo them so what you can do you",
    "start": "2450160",
    "end": "2455839"
  },
  {
    "text": "can actually build a graphql endpoint that points to the rest apis so",
    "start": "2455839",
    "end": "2461119"
  },
  {
    "text": "essentially you can put graphql in front get all the graphql goodies so you know",
    "start": "2461119",
    "end": "2466480"
  },
  {
    "text": "fewer round trips being able to query whatever data you want and you can just point it to maybe you already have a get",
    "start": "2466480",
    "end": "2472720"
  },
  {
    "text": "books rest api so we could just point to there and then graphql will use that to consume the data which is which is",
    "start": "2472720",
    "end": "2478720"
  },
  {
    "text": "really cool um okay let's just start with this one query for now called get books",
    "start": "2478720",
    "end": "2484640"
  },
  {
    "text": "and i named this class query so let's put that in here get rid of those red squiggles",
    "start": "2484640",
    "end": "2490000"
  },
  {
    "text": "and let's run and see what happens so if i did everything right",
    "start": "2490000",
    "end": "2495839"
  },
  {
    "text": "we'll launch the browser we'll see edge pop up here in a second",
    "start": "2495839",
    "end": "2500880"
  },
  {
    "text": "great so there's the hello world that came with the template but what i'm going to do is go to slash",
    "start": "2500880",
    "end": "2506880"
  },
  {
    "text": "graphql to access our graphql endpoint",
    "start": "2506880",
    "end": "2512319"
  },
  {
    "text": "and so just like how we were in graphical earlier i mentioned that there's a couple of these graphql gui's",
    "start": "2512319",
    "end": "2519200"
  },
  {
    "text": "banana cake pop is the one that comes with hot chocolate so when you start playing around with uh",
    "start": "2519200",
    "end": "2525680"
  },
  {
    "text": "the these tools from the company called chili cream they've got a lot of fun names like hot chocolate is the graphql",
    "start": "2525680",
    "end": "2532160"
  },
  {
    "text": "server strawberry shake is the name of their client side graphql implementation and",
    "start": "2532160",
    "end": "2538000"
  },
  {
    "text": "then we've got banana cake pop here for the graphical user interface",
    "start": "2538000",
    "end": "2544000"
  },
  {
    "text": "and it'll take a second to spin up because it's actually trying to communicate back to a server it because",
    "start": "2544000",
    "end": "2549119"
  },
  {
    "text": "what you can do with banana banana cake pop is you can log into it",
    "start": "2549119",
    "end": "2554319"
  },
  {
    "text": "meaning basically you can create a profile save your queries and so let's give this a second to",
    "start": "2554319",
    "end": "2560560"
  },
  {
    "text": "keep spinning it'll it'll show up in a second and then once it's loaded it's loaded we won't have to do that again",
    "start": "2560560",
    "end": "2566000"
  },
  {
    "text": "but come on conference wi-fi",
    "start": "2566000",
    "end": "2570720"
  },
  {
    "text": "i'll tell you what i know i saw another hand i think around here when we were asking questions earlier",
    "start": "2571920",
    "end": "2578319"
  },
  {
    "text": "we can do another question while we're waiting for banana cake pop",
    "start": "2578319",
    "end": "2582640"
  },
  {
    "text": "maybe not all right can i show the code again oh yeah of course",
    "start": "2586560",
    "end": "2593838"
  },
  {
    "text": "so so again that that graphql server configuration",
    "start": "2594079",
    "end": "2599200"
  },
  {
    "text": "we're just adding we're saying add graphql server to our service collection",
    "start": "2599200",
    "end": "2605599"
  },
  {
    "text": "we're adding that query type and you know what like i named it query it doesn't have to be named query like i",
    "start": "2605599",
    "end": "2611920"
  },
  {
    "text": "could have named this library query um the name kind of just",
    "start": "2611920",
    "end": "2617760"
  },
  {
    "text": "means nothing it's just the name of our class that um hot chocolate's going to use to consume",
    "start": "2617760",
    "end": "2624079"
  },
  {
    "text": "and looks like it's taking a while let's see if i can if i go in private if that'll clear some",
    "start": "2624079",
    "end": "2630160"
  },
  {
    "text": "cash maybe i'll leave it both up and we'll have we'll have a little race here",
    "start": "2630160",
    "end": "2638319"
  },
  {
    "text": "maybe we'll try it in safari i love it",
    "start": "2638720",
    "end": "2644720"
  },
  {
    "text": "oh there it is okay in private look at that nice and quick okay",
    "start": "2644720",
    "end": "2650560"
  },
  {
    "text": "so we can get rid of safari no thank you all right so once this loads we just connect it to this graphql endpoint",
    "start": "2650560",
    "end": "2656960"
  },
  {
    "text": "hopefully that'll turn green it does this is one of my favorite things with banana cake pop and it's so silly but i",
    "start": "2656960",
    "end": "2663920"
  },
  {
    "text": "love it if you hover your mouse over the chili cream logo",
    "start": "2663920",
    "end": "2668560"
  },
  {
    "text": "he says hello so anyways back to the graphql goodness so",
    "start": "2669520",
    "end": "2674720"
  },
  {
    "text": "right in the code we created a library query and we've only had we've only created",
    "start": "2674720",
    "end": "2680000"
  },
  {
    "text": "one query so far so this is one that's going to return our books so if i start typing in query we get that intellisense",
    "start": "2680000",
    "end": "2686000"
  },
  {
    "text": "just like we expect and look at that there's our books query",
    "start": "2686000",
    "end": "2692240"
  },
  {
    "text": "and let's see okay great there it is if we zoom in here",
    "start": "2692240",
    "end": "2697359"
  },
  {
    "text": "this tells us that the book's query returns a list of books so the way this graphql",
    "start": "2697359",
    "end": "2705440"
  },
  {
    "text": "nomenclature works is the the square brackets tell us that it's a list so it's a list of type book",
    "start": "2705440",
    "end": "2713040"
  },
  {
    "text": "and then again the exclamation point means it's not nullable so this is there's two exclamation points here one",
    "start": "2713040",
    "end": "2719920"
  },
  {
    "text": "on the outside of the list says the list will never be nullable so at worst i'll get an empty list back",
    "start": "2719920",
    "end": "2726480"
  },
  {
    "text": "and then inside of that list will be books that are also not nullable so i'll",
    "start": "2726480",
    "end": "2731839"
  },
  {
    "text": "never get a null book back and so just like you just like you probably guess we can query for books",
    "start": "2731839",
    "end": "2738800"
  },
  {
    "text": "and inside the books there's our our title that we created so the title is a string which is also not nullable",
    "start": "2738800",
    "end": "2745920"
  },
  {
    "text": "and also we can get the author and get the author's name and just like you expect when we click",
    "start": "2745920",
    "end": "2750960"
  },
  {
    "text": "run we get our json response back so",
    "start": "2750960",
    "end": "2756079"
  },
  {
    "text": "in just a couple lines of code we've stood up a graphql server and if we again if we already have",
    "start": "2756079",
    "end": "2762400"
  },
  {
    "text": "existing data points or rest apis we could just point our graphql uh graphql queries to those rest apis",
    "start": "2762400",
    "end": "2770480"
  },
  {
    "text": "and really quickly we can have a graphql endpoint that we can use",
    "start": "2770480",
    "end": "2776079"
  },
  {
    "text": "because again the cool thing with graphql is like ah maybe i don't care about the title of the books i just want to know the authors",
    "start": "2776079",
    "end": "2781839"
  },
  {
    "text": "we can get that back now one of the cool things i like about uh",
    "start": "2781839",
    "end": "2787280"
  },
  {
    "text": "hot chocolate is the reason it knows that nothing was nullable",
    "start": "2787280",
    "end": "2792640"
  },
  {
    "text": "is because it uses c-sharp nullability uh so if you remember in c-sharp",
    "start": "2792640",
    "end": "2799280"
  },
  {
    "text": "eight c sharp nine what are we on now this is ten so recently in c sharp uh they came out",
    "start": "2799280",
    "end": "2805119"
  },
  {
    "text": "with nullable where we could say book might be null so if i if i update my",
    "start": "2805119",
    "end": "2811040"
  },
  {
    "text": "data set here to say book is now nullable that gives me the opportunity to pass in",
    "start": "2811040",
    "end": "2817119"
  },
  {
    "text": "a null value and if i were to rebuild this and run it again",
    "start": "2817119",
    "end": "2823599"
  },
  {
    "text": "and so here i just need to reconnect to the graphql api and if i type in my",
    "start": "2825839",
    "end": "2831200"
  },
  {
    "text": "query now if i zoom in on book",
    "start": "2831200",
    "end": "2836319"
  },
  {
    "text": "book no longer has the exclamation point because a book could be null so the list",
    "start": "2836319",
    "end": "2842079"
  },
  {
    "text": "still can't be null because i didn't make the list nullable but just by using nulla nullable in c sharp",
    "start": "2842079",
    "end": "2848800"
  },
  {
    "text": "hot chocolate automatically translates that to us so if we ask for the list of books again",
    "start": "2848800",
    "end": "2855520"
  },
  {
    "text": "author name there we go we should see one at the end no so pretty cool",
    "start": "2856960",
    "end": "2862480"
  },
  {
    "text": "now what we can do we can we can expand on this a little bit we've got some time so",
    "start": "2862480",
    "end": "2868400"
  },
  {
    "text": "what if we wanted to just get back one book so let's say we want to get",
    "start": "2868400",
    "end": "2873760"
  },
  {
    "text": "one book back we'll call that get book and to do that that means",
    "start": "2873760",
    "end": "2880400"
  },
  {
    "text": "somebody's got to give us something so let's let's filter by the title so to get a title from our books",
    "start": "2880400",
    "end": "2886480"
  },
  {
    "text": "back we'll say books dot we'll say first or default since maybe",
    "start": "2886480",
    "end": "2891680"
  },
  {
    "text": "they give us a title that doesn't exist and we'll just compare the books",
    "start": "2891680",
    "end": "2897280"
  },
  {
    "text": "title to the title they gave us and we'll bring that down",
    "start": "2897280",
    "end": "2903599"
  },
  {
    "text": "so we can all see it there we go and so again rerun this",
    "start": "2903599",
    "end": "2909680"
  },
  {
    "text": "and once that's running just reconnect to my graphql server",
    "start": "2909680",
    "end": "2917520"
  },
  {
    "text": "come back up create a new query look at our intellisense and there it is so now we have a book type so we can",
    "start": "2918000",
    "end": "2925680"
  },
  {
    "text": "just we can call that book query and just like we expect that book requires a",
    "start": "2925680",
    "end": "2930800"
  },
  {
    "text": "title so in here i would say title i love graphql",
    "start": "2930800",
    "end": "2938000"
  },
  {
    "text": "and then again we can't just get all the data back from the book because graphql wants us to specify the fields that we",
    "start": "2938000",
    "end": "2943839"
  },
  {
    "text": "want so i'll say yep i want to know even though i gave the title you can tell me the title again",
    "start": "2943839",
    "end": "2949760"
  },
  {
    "text": "and then we'll run it and we get our book back so um",
    "start": "2949760",
    "end": "2955520"
  },
  {
    "text": "let's see why don't we do one more",
    "start": "2955520",
    "end": "2961359"
  },
  {
    "text": "just for fun because we can also do something on the authors now even though we don't have",
    "start": "2961359",
    "end": "2969720"
  },
  {
    "text": "and we'll say an author's database we have a books database we're just using c sharp right so we can",
    "start": "2970559",
    "end": "2975920"
  },
  {
    "text": "just take advantage of the fact that this is this is link so we can get",
    "start": "2975920",
    "end": "2981200"
  },
  {
    "text": "books and let's see yeah that author should probably be null just in case they give us one back",
    "start": "2981200",
    "end": "2987359"
  },
  {
    "text": "and we'll we'll filter out that so wherever the books whoops the books author",
    "start": "2987359",
    "end": "2993839"
  },
  {
    "text": "whoop we want to know they got to give us the author's name though um so the author name equals name",
    "start": "2993839",
    "end": "3002720"
  },
  {
    "text": "bring that on one line again and then we'll say if it exists give me the first one if",
    "start": "3003119",
    "end": "3009280"
  },
  {
    "text": "not that's okay and what that's nullable",
    "start": "3009280",
    "end": "3014880"
  },
  {
    "text": "getting red squiggles book to author oh because i got to select",
    "start": "3014880",
    "end": "3020078"
  },
  {
    "text": "author now so get a nice nasty beautiful link query that's yellow because that's nullable",
    "start": "3020319",
    "end": "3026720"
  },
  {
    "text": "too we'll rerun that and",
    "start": "3026720",
    "end": "3032240"
  },
  {
    "text": "there we go reconnect to the graphql api",
    "start": "3033440",
    "end": "3037760"
  },
  {
    "text": "maybe maybe maybe not",
    "start": "3039440",
    "end": "3045760"
  },
  {
    "text": "oh it crashed on me huh what did i do wrong get author",
    "start": "3045760",
    "end": "3051280"
  },
  {
    "text": "do do do do wonder if my cert expired",
    "start": "3051599",
    "end": "3057359"
  },
  {
    "text": "fatal error debugging needs to be terminated i'll just build the same code again",
    "start": "3057359",
    "end": "3063200"
  },
  {
    "text": "that's a that's the best way to do it right",
    "start": "3063200",
    "end": "3068040"
  },
  {
    "text": "oh there it is it's already in use it's in use because you crashed on me",
    "start": "3068240",
    "end": "3073520"
  },
  {
    "text": "now anyways um so let's see actually let's see if it is",
    "start": "3073520",
    "end": "3080800"
  },
  {
    "text": "if it's actually in use because we could actually open up postman uh just like we were doing earlier with",
    "start": "3080800",
    "end": "3085920"
  },
  {
    "text": "the github api make a post request in that body put in",
    "start": "3085920",
    "end": "3092880"
  },
  {
    "text": "some json boop and say query",
    "start": "3092880",
    "end": "3098640"
  },
  {
    "text": "query let's say books title",
    "start": "3098640",
    "end": "3104160"
  },
  {
    "text": "let's see if this works no it really did crash on me well dang",
    "start": "3104160",
    "end": "3110960"
  },
  {
    "text": "um so i did want to end with uh one more little cool trick here in postman um",
    "start": "3110960",
    "end": "3117280"
  },
  {
    "text": "let's see since our our server crashed on us let's jump back to",
    "start": "3117280",
    "end": "3122800"
  },
  {
    "text": "the this github example we were looking at earlier because there's something cool that postman's also added uh this was not",
    "start": "3122800",
    "end": "3130400"
  },
  {
    "text": "around when i first learned how to use graphql but there's actually this graphql button here",
    "start": "3130400",
    "end": "3136640"
  },
  {
    "text": "and so instead of putting in our raw json and having to remember like uh",
    "start": "3136640",
    "end": "3142400"
  },
  {
    "text": "what was that syntax again that field's called query and then i paste the query but do i still that include query um",
    "start": "3142400",
    "end": "3149040"
  },
  {
    "text": "what you can do you can click this graphql option here in postman and",
    "start": "3149040",
    "end": "3154319"
  },
  {
    "text": "i'm just going to cheat i'm going to go back to the github explorer and copy paste",
    "start": "3154319",
    "end": "3159440"
  },
  {
    "text": "and so i can just copy in that raw graphql query into postman",
    "start": "3159440",
    "end": "3165520"
  },
  {
    "text": "click send and there we go we get that same data back",
    "start": "3165520",
    "end": "3171040"
  },
  {
    "text": "so",
    "start": "3171040",
    "end": "3173280"
  },
  {
    "text": "if you haven't gotten a chance yet uh this is where you can find everything that we covered today so make sure to",
    "start": "3178240",
    "end": "3185200"
  },
  {
    "text": "grab a picture of this with your phone bookmark it you can share it with your colleague share with your friends that couldn't be here today",
    "start": "3185200",
    "end": "3192000"
  },
  {
    "text": "help them to get up to speed on graphql because this is where you can find the slides i'll be posting a link to the",
    "start": "3192000",
    "end": "3197839"
  },
  {
    "text": "recording once ndc's got it up the the open source demo that we just did i've already got that saved in github",
    "start": "3197839",
    "end": "3204400"
  },
  {
    "text": "and linked on the website here for you as well along with let's see uh chili cream has a hot chocolate",
    "start": "3204400",
    "end": "3210960"
  },
  {
    "text": "workshop i've got a link to that there as well as links to the chili cream docs links to more about rest versus graphql",
    "start": "3210960",
    "end": "3218240"
  },
  {
    "text": "and just a lot of helpful resources that were really good and helpful to me when i was learning graphql so",
    "start": "3218240",
    "end": "3224720"
  },
  {
    "text": "hopefully they'll be helpful for you as well thank you",
    "start": "3224720",
    "end": "3231720"
  },
  {
    "text": "okay so we do have about five minutes left um happy to answer questions you're also",
    "start": "3239040",
    "end": "3244960"
  },
  {
    "text": "welcome to hit the road if you want but i'll be here also be floating around the conference for the rest of the day too if anyone if anybody wants to chat so uh",
    "start": "3244960",
    "end": "3252800"
  },
  {
    "text": "yeah what questions do you have about what we chat about here in graphql",
    "start": "3252800",
    "end": "3258558"
  },
  {
    "text": "yes the database you own yourself in your",
    "start": "3260079",
    "end": "3265920"
  },
  {
    "text": "own database or also data which you fetch from web services",
    "start": "3265920",
    "end": "3272000"
  },
  {
    "text": "oh good question so the question was does it make sense to use graphql for your database or if you're fetching data",
    "start": "3273119",
    "end": "3279920"
  },
  {
    "text": "from other web providers does that also make sense i'll say",
    "start": "3279920",
    "end": "3285680"
  },
  {
    "text": "yes mostly assuming those other web providers don't have latency concerns or uh rate",
    "start": "3285680",
    "end": "3293760"
  },
  {
    "text": "limiting throttling concerns uh especially if you own them so kind of like we were talking about earlier a lot",
    "start": "3293760",
    "end": "3299280"
  },
  {
    "text": "of companies that they'll just keep their existing rest apis and then they'll just build graphql on top of that and graphql will",
    "start": "3299280",
    "end": "3306720"
  },
  {
    "text": "just so for their books they probably already had a book api for the library and so they're just pointing to that",
    "start": "3306720",
    "end": "3313119"
  },
  {
    "text": "and then that already knows how to get the books um so yeah you can absolutely use it for web services but yeah just",
    "start": "3313119",
    "end": "3319359"
  },
  {
    "text": "keep in mind it's it's not gonna be a magic wand so if those web services have like throttling rate limiting or they go down",
    "start": "3319359",
    "end": "3326799"
  },
  {
    "text": "all the time then that's just gonna trickle back up through your graphql endpoint uh good question though uh what",
    "start": "3326799",
    "end": "3334559"
  },
  {
    "text": "other questions yes uh are there a way to know which fields from the database are actually prepared",
    "start": "3334559",
    "end": "3341599"
  },
  {
    "text": "from the graph great question so",
    "start": "3341599",
    "end": "3347200"
  },
  {
    "text": "the question was how or is there a way that we can specify",
    "start": "3347200",
    "end": "3352720"
  },
  {
    "text": "which fields are exposed from the database because yeah we don't want to be exposing passwords or any sensitive",
    "start": "3352720",
    "end": "3360880"
  },
  {
    "text": "user information so oh i'm sorry if i'm to query a database or let's say",
    "start": "3360880",
    "end": "3368480"
  },
  {
    "text": "10 fields but the model data model has 100 is there a way to limit what's actually",
    "start": "3368480",
    "end": "3375040"
  },
  {
    "text": "retreat from the database based on the query if you ask for books name only",
    "start": "3375040",
    "end": "3380640"
  },
  {
    "text": "it doesn't make sense to load all the other fields from the database right um so good question i'm not sure",
    "start": "3380640",
    "end": "3387440"
  },
  {
    "text": "if hot chocolate has any of that optimization built into it and again",
    "start": "3387440",
    "end": "3392480"
  },
  {
    "text": "just to repeat that question i was like what if i only want to know the name or the title of the book but in the",
    "start": "3392480",
    "end": "3398559"
  },
  {
    "text": "database we've got everything about you know the author the year was written the copyright information but we don't care",
    "start": "3398559",
    "end": "3404240"
  },
  {
    "text": "about all that so could we just make it so the database query itself only returns back the title um",
    "start": "3404240",
    "end": "3412000"
  },
  {
    "text": "i know there's a way to do it i'm not sure if we manually have to specify that like if maybe we do a link query that is",
    "start": "3412000",
    "end": "3421280"
  },
  {
    "text": "more unique to that or if there's a generic way of doing it but i know it is doable because i know",
    "start": "3421280",
    "end": "3428160"
  },
  {
    "text": "that's also one of the big benefits of graphql so uh a common question i'll get is",
    "start": "3428160",
    "end": "3434720"
  },
  {
    "text": "well we're already using odata so why should i switch to graphql because oh",
    "start": "3434720",
    "end": "3440079"
  },
  {
    "text": "data filters the data right um and it's like yeah i mean kinda like that's one",
    "start": "3440079",
    "end": "3446480"
  },
  {
    "text": "feature of graphql that odata is similar with but um but yeah with odata",
    "start": "3446480",
    "end": "3451839"
  },
  {
    "text": "it's still gonna make that full database query it just filters the data that leaves and",
    "start": "3451839",
    "end": "3457280"
  },
  {
    "text": "comes back so you don't get the performance gains and i know with graphql you can",
    "start": "3457280",
    "end": "3463200"
  },
  {
    "text": "but do i know how to do it off top of my head i don't so good question but definitely something",
    "start": "3463200",
    "end": "3468640"
  },
  {
    "text": "to look into and yeah i'm actually interested maybe hot chocolate has a way to do that built in because like i said",
    "start": "3468640",
    "end": "3475520"
  },
  {
    "text": "it is it is the best i mean hot chocolate by the way is also part of the graphql foundation so just",
    "start": "3475520",
    "end": "3482799"
  },
  {
    "text": "like we were talking about earlier with his foundations and not-for-profits and",
    "start": "3482799",
    "end": "3487920"
  },
  {
    "text": "making sure these libraries stick around because they're a member of the graphql or because they're a member of the.net",
    "start": "3487920",
    "end": "3494000"
  },
  {
    "text": "foundation you can feel safe and secure knowing that if you use hot chocolate for your apis that",
    "start": "3494000",
    "end": "3500000"
  },
  {
    "text": "it's not going anywhere um they're not pulling the plug on anytime soon um",
    "start": "3500000",
    "end": "3507119"
  },
  {
    "text": "is that one minute left okay cool yeah we do have one minute left i think i saw one more hand",
    "start": "3507200",
    "end": "3512240"
  },
  {
    "text": "we could also chat afterwards that works too all right well thanks again everybody and hopefully i'll see",
    "start": "3512240",
    "end": "3517359"
  },
  {
    "text": "you around the rest of the day [Applause]",
    "start": "3517359",
    "end": "3525199"
  },
  {
    "text": "you",
    "start": "3532240",
    "end": "3534319"
  }
]