[
  {
    "start": "0",
    "end": "58000"
  },
  {
    "text": "um thank you everyone for coming there's a lot more people here than I expected so I kind of want to run away but I also",
    "start": "840",
    "end": "6420"
  },
  {
    "text": "realized that I'm the last thing standing between you and a nice dinner so I'm extra grateful that you've come",
    "start": "6420",
    "end": "12900"
  },
  {
    "text": "here uh the title of today's session is lost and found in Translation and we're",
    "start": "12900",
    "end": "18960"
  },
  {
    "text": "going to be talking a bit about a journey into building the compilers",
    "start": "18960",
    "end": "24060"
  },
  {
    "text": "using machine learning if you don't know what a decompiler is don't worry because I don't either when I was researching",
    "start": "24060",
    "end": "29939"
  },
  {
    "text": "this talk I tried to dive into the gitra code base but I was very quickly",
    "start": "29939",
    "end": "35280"
  },
  {
    "text": "um overwhelmed but it's okay we will discuss this later but um",
    "start": "35280",
    "end": "40379"
  },
  {
    "text": "more than just kind of building decompilers I also want to talk a bit about",
    "start": "40379",
    "end": "45960"
  },
  {
    "text": "a journey into how ml models are built and what that kind of means for security",
    "start": "45960",
    "end": "52200"
  },
  {
    "text": "and maybe for us as technologists also in a kind of broader sense",
    "start": "52200",
    "end": "58440"
  },
  {
    "start": "58000",
    "end": "103000"
  },
  {
    "text": "so who am I I'm Camilla and I currently work at storytell the audio books app",
    "start": "58440",
    "end": "64559"
  },
  {
    "text": "building ml systems and before that I spent a few years at elastic in the",
    "start": "64559",
    "end": "70260"
  },
  {
    "text": "machine learning group where I was researching how we can apply machine learning methods to create various",
    "start": "70260",
    "end": "77420"
  },
  {
    "text": "solutions for security problems such as detecting malicious activity in DNS",
    "start": "77420",
    "end": "82740"
  },
  {
    "text": "traffic so I learned lots of lessons there about what works and and what",
    "start": "82740",
    "end": "87780"
  },
  {
    "text": "doesn't and kind of where the hype is and and where it isn't and also this is uh this is what stable diffusion thinks",
    "start": "87780",
    "end": "94979"
  },
  {
    "text": "I look like and I think it's pretty accurate before my first coffee and when I'm trying to install something it",
    "start": "94979",
    "end": "100380"
  },
  {
    "text": "doesn't work um okay so the kind of agenda for today it's",
    "start": "100380",
    "end": "105659"
  },
  {
    "start": "103000",
    "end": "140000"
  },
  {
    "text": "going to be a bit of a mix so I don't know don't expect like miracles to rain",
    "start": "105659",
    "end": "110880"
  },
  {
    "text": "from the sky but um I thought that we would start with a kind of thousand feet overview of what's",
    "start": "110880",
    "end": "117360"
  },
  {
    "text": "happening in the machine learning world today and more and more it's kind of starting to spill into the world of",
    "start": "117360",
    "end": "124680"
  },
  {
    "text": "everyday people as well and and if you like me have been on Twitter and you've",
    "start": "124680",
    "end": "130619"
  },
  {
    "text": "probably seen all the hot takes about how chat gbt is gonna like cook your",
    "start": "130619",
    "end": "135660"
  },
  {
    "text": "breakfast for you and do everything else so like we're going to start by talking about that but then",
    "start": "135660",
    "end": "140879"
  },
  {
    "text": "after that I want to kind of Deep dive into the details and just show you",
    "start": "140879",
    "end": "147300"
  },
  {
    "text": "how in general you would start applying machine learning to solve your security problems what kind of things you should",
    "start": "147300",
    "end": "153959"
  },
  {
    "text": "think about and kind of how the mechanics works but kind of on a very high level so you get an intuition but",
    "start": "153959",
    "end": "160260"
  },
  {
    "text": "don't get bogged down in the details and then finally we're going to get into the meat of the presentation which is",
    "start": "160260",
    "end": "166920"
  },
  {
    "text": "trying to build a decompiler using machine learning and we're going to ask questions such as can we do it should we",
    "start": "166920",
    "end": "173580"
  },
  {
    "text": "do it why should we maybe not do it and we're going to take a look at some attempts to see what people have done",
    "start": "173580",
    "end": "180239"
  },
  {
    "text": "and kind of see what works and what doesn't work um okay but let's start with the fact",
    "start": "180239",
    "end": "186420"
  },
  {
    "text": "that probably all of you and I as well have had to already go into our Twitter settings and just freaking mute the word",
    "start": "186420",
    "end": "193140"
  },
  {
    "text": "chat GPT because you can't take it anymore when people ever are every day telling you how Chad GPD is going to",
    "start": "193140",
    "end": "199080"
  },
  {
    "text": "replace Google and how it wrote this great Haiku and it told you what to have for breakfast and what to read to your",
    "start": "199080",
    "end": "204959"
  },
  {
    "text": "kid and like don't get me wrong it is really impressive what they have achieved but it also kind of highlights",
    "start": "204959",
    "end": "211560"
  },
  {
    "text": "um maybe a broader problem in my field of Technology machine learning which is",
    "start": "211560",
    "end": "216780"
  },
  {
    "text": "that more and more technologists are looking at the clouds and kind of seeing",
    "start": "216780",
    "end": "222000"
  },
  {
    "text": "faces there so seeing patterns and maybe human-like Behavior where there really",
    "start": "222000",
    "end": "227220"
  },
  {
    "text": "is none and more concretely what I'm kind of talking about is is an incidents that",
    "start": "227220",
    "end": "233940"
  },
  {
    "start": "228000",
    "end": "296000"
  },
  {
    "text": "happen in the summer and you've maybe heard of it as well it was a Google whistleblower a software engineer",
    "start": "233940",
    "end": "240420"
  },
  {
    "text": "engineer working in the machine learning team who kind of uh acclaimed that the AI",
    "start": "240420",
    "end": "246420"
  },
  {
    "text": "chat brought that he was interacting with had the Consciousness and the capacity of I think it was an",
    "start": "246420",
    "end": "252060"
  },
  {
    "text": "eight-year-old or a six-year-old child and he was kind of trying to hire a lawyer to assert personhood for for this",
    "start": "252060",
    "end": "259260"
  },
  {
    "text": "chatbot and this kind of made big news all over the world because he was fired very quickly and and it kind of sparked",
    "start": "259260",
    "end": "265919"
  },
  {
    "text": "a conversation about like first of all what is a person who gets to decide what is a person that's like a talk for for",
    "start": "265919",
    "end": "273120"
  },
  {
    "text": "another time for sure but also that um are we as technologists kind of looking",
    "start": "273120",
    "end": "278940"
  },
  {
    "text": "at these systems and we're just so impressed that we can't really see the the forest for the trees and we're just",
    "start": "278940",
    "end": "285660"
  },
  {
    "text": "kind of imagining things that are there when it's really just a very sophisticated statistical mechanism but",
    "start": "285660",
    "end": "292740"
  },
  {
    "text": "yeah as I said that's kind of that's a that's a topic for for another time but more more closer to security",
    "start": "292740",
    "end": "298680"
  },
  {
    "start": "296000",
    "end": "356000"
  },
  {
    "text": "I think we can take a look at this use case so at least this as long as I've been coding just a bit of less than a",
    "start": "298680",
    "end": "305280"
  },
  {
    "text": "decade um there has been this phenomenon of copy pasting from stack Overflow I'm",
    "start": "305280",
    "end": "312060"
  },
  {
    "text": "sure everyone here has probably gone it once or twice I know I have um but now we kind of have that but",
    "start": "312060",
    "end": "318900"
  },
  {
    "text": "taken to another level which is co-pilot github's um new code generation program",
    "start": "318900",
    "end": "324259"
  },
  {
    "text": "I don't know how many of you here write code every day but at least in the software developer circles GitHub",
    "start": "324259",
    "end": "330600"
  },
  {
    "text": "co-pilot is like a new extension that you add to your favorite editor such as",
    "start": "330600",
    "end": "335880"
  },
  {
    "text": "visual code and then it helps you write code and sometimes you can like write a comment and it will just auto complete",
    "start": "335880",
    "end": "343080"
  },
  {
    "text": "the whole function for you and this technology is built by openai and it's kind of based on the huge public data",
    "start": "343080",
    "end": "351000"
  },
  {
    "text": "sets that are hosted on GitHub but there isn't much information about how it actually works now of course in my field",
    "start": "351000",
    "end": "358860"
  },
  {
    "start": "356000",
    "end": "776000"
  },
  {
    "text": "there is this age-old wisdom that if you put garbage into something then you will also get garbage out so if you're",
    "start": "358860",
    "end": "365759"
  },
  {
    "text": "thinking about the impact of large language models on security and we're thinking about the case of copilot you",
    "start": "365759",
    "end": "371880"
  },
  {
    "text": "know we might ask okay there's probably a lot of vulnerabilities in this free code that's hosted on GitHub no one has",
    "start": "371880",
    "end": "378720"
  },
  {
    "text": "been taking a look at that so is it reasonable to assume that well we put vulnerabilities into this model so it's",
    "start": "378720",
    "end": "386759"
  },
  {
    "text": "probably quite likely that when people are using this to generate code for their own projects that they would write",
    "start": "386759",
    "end": "392220"
  },
  {
    "text": "code that's kind of weak or susceptible to attack so this is probably definitely the case",
    "start": "392220",
    "end": "398039"
  },
  {
    "text": "and the kind of sad part about my field in a way is that when you're building a machine learning Model A Lot",
    "start": "398039",
    "end": "405120"
  },
  {
    "text": "depends on the training data and the quality of the training data sometimes even more than like the construction or",
    "start": "405120",
    "end": "412259"
  },
  {
    "text": "the architecture of your model but this is also like the data cleanup and understanding is also the like least",
    "start": "412259",
    "end": "420120"
  },
  {
    "text": "desired part of of my job as an ml engineer and as a data scientist in that",
    "start": "420120",
    "end": "425400"
  },
  {
    "text": "no one wants to kind of invest time into cleaning data and curating data and assessing the data because it's not very",
    "start": "425400",
    "end": "432419"
  },
  {
    "text": "exciting and usually the tooling is not there so as I said these large machine",
    "start": "432419",
    "end": "438720"
  },
  {
    "text": "learning models like copilot are trained on a lot of public code and probably no one has kind of taken the time to really",
    "start": "438720",
    "end": "445740"
  },
  {
    "text": "take a look at it so there is definitely a danger that we are putting vulnerabilities into these",
    "start": "445740",
    "end": "451500"
  },
  {
    "text": "large language models and then we're kind of automating stack Overflow copy paste but on a much larger level but",
    "start": "451500",
    "end": "458819"
  },
  {
    "text": "what makes this really kind of dangerous is that a lot of these answers look very convincing",
    "start": "458819",
    "end": "465060"
  },
  {
    "text": "and sometimes we even kind of develop a blindness we say okay well computer says",
    "start": "465060",
    "end": "470220"
  },
  {
    "text": "so so I trust the computer more than I trust myself and in fact this kind of led to the",
    "start": "470220",
    "end": "475919"
  },
  {
    "text": "incident I think this happened a few weeks ago right as soon as chat GPT became live in that stack Overflow",
    "start": "475919",
    "end": "483020"
  },
  {
    "text": "temporarily banned answers from chat GPT I'm not exactly sure how they were detecting it but they banned them",
    "start": "483020",
    "end": "490440"
  },
  {
    "text": "because a lot of the answers were almost correct but then not exactly and the the",
    "start": "490440",
    "end": "495479"
  },
  {
    "text": "deceptive part was that because they're written in a very fluent language then it's kind of hard to tell that that",
    "start": "495479",
    "end": "502259"
  },
  {
    "text": "they're not correct unless you're the main expert in that particular question there's also been a lot of interest from",
    "start": "502259",
    "end": "509759"
  },
  {
    "text": "the academic security research side about quantifying exactly how many",
    "start": "509759",
    "end": "515520"
  },
  {
    "text": "vulnerabilities large models like co-pilot are introducing into code bases and this is a quote from from a paper",
    "start": "515520",
    "end": "522180"
  },
  {
    "text": "that was recently published that says that you know for sure given the vast quantity of unvetted code that has been",
    "start": "522180",
    "end": "529080"
  },
  {
    "text": "put into copilot that there will be a high probability that the language model will have learned from exploitable buggy",
    "start": "529080",
    "end": "535200"
  },
  {
    "text": "code and then this paper that was published by Hammond peers and collaborators kind",
    "start": "535200",
    "end": "540959"
  },
  {
    "text": "of goes on to really quantify how often does co-pilot generate code that's for",
    "start": "540959",
    "end": "546899"
  },
  {
    "text": "example susceptible to some kind of memory bugs or other kinds",
    "start": "546899",
    "end": "552600"
  },
  {
    "text": "of things and what they do is they take 25 risky scenarios as defined by Mitra",
    "start": "552600",
    "end": "559320"
  },
  {
    "text": "and they kind of craft prompts for co-pilot around those scenarios and then they generate they let co-pilot generate",
    "start": "559320",
    "end": "566279"
  },
  {
    "text": "various kinds of code Snippets for those scenarios and assess how many of the completions are weak or vulnerable to a",
    "start": "566279",
    "end": "573300"
  },
  {
    "text": "certain kind of attack and in some cases it's as high as as 40 so",
    "start": "573300",
    "end": "579480"
  },
  {
    "text": "it certainly will be kind of an issue in the future for those of you who are working in say teaching developers how",
    "start": "579480",
    "end": "586980"
  },
  {
    "text": "to assess whether their code is secure or how to write secure code you will",
    "start": "586980",
    "end": "592019"
  },
  {
    "text": "probably have to deal with output that has been generated by copilot in in some form or another",
    "start": "592019",
    "end": "598800"
  },
  {
    "text": "but then for us on the working on the other side on the red team side you know",
    "start": "598800",
    "end": "604140"
  },
  {
    "text": "you might ask okay well we have this massive Machinery that has ingested tons of text and it's unintentionally",
    "start": "604140",
    "end": "610700"
  },
  {
    "text": "automating vulnerability generation so what if we could like take advantage of",
    "start": "610700",
    "end": "616080"
  },
  {
    "text": "that in a evil or not so evil sense and there have been a lot of a lot of proofs",
    "start": "616080",
    "end": "623519"
  },
  {
    "text": "of concept sort of posted on on Twitter where people are trying to either get",
    "start": "623519",
    "end": "629459"
  },
  {
    "text": "chat GPT to generate an exploit snippet or explain how to exploit some piece of",
    "start": "629459",
    "end": "634560"
  },
  {
    "text": "code this of course is kind of a very simple example it's just a cross-site scripting vulnerability but I've also",
    "start": "634560",
    "end": "641040"
  },
  {
    "text": "seen a few other ones that are more advanced so there's also kind of this fun gem that's that's coming for those",
    "start": "641040",
    "end": "647700"
  },
  {
    "text": "on the defensive side is that now we can kind of automate vulnerability creation",
    "start": "647700",
    "end": "653220"
  },
  {
    "text": "on a much larger scale than than before all right so that was kind of a 10-foot",
    "start": "653220",
    "end": "661320"
  },
  {
    "text": "overview of what's happening with larger language models and we'll touch upon how",
    "start": "661320",
    "end": "667079"
  },
  {
    "text": "they're constructed in the last part of the talk where we're trying to build the decompiler but for now I kind of want to",
    "start": "667079",
    "end": "674220"
  },
  {
    "text": "take us on another Journey which is to show you how you take a problem whether",
    "start": "674220",
    "end": "679440"
  },
  {
    "text": "in security or somewhere else and how you start to think about applying machine learning to solve it and this is",
    "start": "679440",
    "end": "685980"
  },
  {
    "text": "going to be a very conceptual level so how do we harness machine learning",
    "start": "685980",
    "end": "691019"
  },
  {
    "text": "for good and Evo what does the process look like for designing a machine learning solution and more importantly",
    "start": "691019",
    "end": "696360"
  },
  {
    "text": "it's kind of important to realize that not every problem is a good candidate for a machine learning solution and",
    "start": "696360",
    "end": "702600"
  },
  {
    "text": "sometimes it's really hard to separate the kind of hype from the real gems and",
    "start": "702600",
    "end": "708120"
  },
  {
    "text": "I for example know that in the security domain there are lots of companies that are trying to make AI Solutions there",
    "start": "708120",
    "end": "714899"
  },
  {
    "text": "are lots of Open Source solutions that like use ml for for automating various defensive or offensive security pro",
    "start": "714899",
    "end": "723000"
  },
  {
    "text": "solutions to security problems but you know sometimes like we just do ml is",
    "start": "723000",
    "end": "728279"
  },
  {
    "text": "like is not a good Hammer to hit the snail with and I think it's it's important for yourself to develop some",
    "start": "728279",
    "end": "734100"
  },
  {
    "text": "kind of intuition about when a machine learning model would be a good solution and when it simply is not",
    "start": "734100",
    "end": "740339"
  },
  {
    "text": "okay but uh in order for us to develop an intuition about how to solve security",
    "start": "740339",
    "end": "746880"
  },
  {
    "text": "problems with machine learning we first have to take a brief look at the three different families of machine learning",
    "start": "746880",
    "end": "752700"
  },
  {
    "text": "models that are kind of currently being actively researched so the first family supervised learning models and these are",
    "start": "752700",
    "end": "759899"
  },
  {
    "text": "models that you train with labeled training data so you can for example think of an anti-malware or an antivirus",
    "start": "759899",
    "end": "766980"
  },
  {
    "text": "device that's being trained on lots of labeled examples of malicious and benign binaries and then it's kind of producing",
    "start": "766980",
    "end": "773880"
  },
  {
    "text": "a model that can detect future samples the other family is unsupervised",
    "start": "773880",
    "end": "779220"
  },
  {
    "start": "776000",
    "end": "795000"
  },
  {
    "text": "learning this is for cases where you want to discover patterns in data but",
    "start": "779220",
    "end": "784920"
  },
  {
    "text": "you don't have for example any label training data sets you just say want to Cluster cluster some data points to",
    "start": "784920",
    "end": "792240"
  },
  {
    "text": "detect outliers for example or things like that and then finally we have reinforcement learning which is mostly",
    "start": "792240",
    "end": "798540"
  },
  {
    "start": "795000",
    "end": "844000"
  },
  {
    "text": "used in gaming say to develop autonomous agents in games Robotics and also",
    "start": "798540",
    "end": "805079"
  },
  {
    "text": "increasingly in combination with supervised learning reinforcement learning is used to generate a large",
    "start": "805079",
    "end": "811620"
  },
  {
    "text": "language models so for example chat GPT has actually been built on a kind of",
    "start": "811620",
    "end": "816779"
  },
  {
    "text": "combination of supervised learning and reinforcement learning where it is able to learn from from the instances when it",
    "start": "816779",
    "end": "822959"
  },
  {
    "text": "doesn't produce a good answer and it's kind of able to improve over and over okay so those were the kind of three",
    "start": "822959",
    "end": "829079"
  },
  {
    "text": "broad families of machine learning models that you can use for your uh to",
    "start": "829079",
    "end": "834420"
  },
  {
    "text": "solve your problems but the kind of most simple one to understand I think in a conceptual level and",
    "start": "834420",
    "end": "840300"
  },
  {
    "text": "um applicable to this setting is supervised learning so we're gonna go with that for now so let's say we want to build a toy",
    "start": "840300",
    "end": "847560"
  },
  {
    "text": "malware classifier this is a classic example of a supervised machine learning problem so we have a training data set",
    "start": "847560",
    "end": "854519"
  },
  {
    "text": "say we've gotten some some goodies from virustotal and we've maybe eraded some",
    "start": "854519",
    "end": "860100"
  },
  {
    "text": "windows binaries so we have a two class training data set of our malicious",
    "start": "860100",
    "end": "865800"
  },
  {
    "text": "binaries from virustoto and then we have some benign binaries that we know are benign at least hopefully so what's our",
    "start": "865800",
    "end": "873180"
  },
  {
    "text": "goal here so our goal can be broken down into three steps so first we collect our",
    "start": "873180",
    "end": "878519"
  },
  {
    "text": "data set okay we have that and then we build a model and we're going to take a",
    "start": "878519",
    "end": "883920"
  },
  {
    "text": "look in a moment at like what exactly do we mean by a model because I know that's kind of an abstract concept and people",
    "start": "883920",
    "end": "890220"
  },
  {
    "text": "are throwing around all these terms like this is a 100 million trillion parameter",
    "start": "890220",
    "end": "895440"
  },
  {
    "text": "model and this is a two billion parameter model and like it's kind of hard to really grasp like what's going",
    "start": "895440",
    "end": "901260"
  },
  {
    "text": "on and then finally we're going to use that model to predict if a new binary that",
    "start": "901260",
    "end": "907260"
  },
  {
    "text": "let's say has just been come up on our radar as an alert whether that's malicious or not",
    "start": "907260",
    "end": "914399"
  },
  {
    "start": "914000",
    "end": "1008000"
  },
  {
    "text": "okay so as promised I was going to tell you a little bit about how to start",
    "start": "914399",
    "end": "919620"
  },
  {
    "text": "thinking whether a problem is a good Target for a machine learning solution and",
    "start": "919620",
    "end": "924839"
  },
  {
    "text": "I think there are kind of like two rules of thumb that you can keep in mind so",
    "start": "924839",
    "end": "931260"
  },
  {
    "text": "first of all um a problem is a good Target for a machine learning solution if the data",
    "start": "931260",
    "end": "937079"
  },
  {
    "text": "involved kind of evolves quickly and I think if you think about malware detection or malware classification you",
    "start": "937079",
    "end": "943740"
  },
  {
    "text": "can kind of figure out that it is really true like there are hundreds of millions probably of new malware variants that",
    "start": "943740",
    "end": "950160"
  },
  {
    "text": "are coming out each year so it'll be really hard for a rule-based approach to keep up with this especially if someone",
    "start": "950160",
    "end": "956399"
  },
  {
    "text": "is handcrafting the rules and then the second rule of thumb is that the problem",
    "start": "956399",
    "end": "961500"
  },
  {
    "text": "involves large amounts of data or samples that have to be analyzed on a daily basis so that it would pretty much",
    "start": "961500",
    "end": "967740"
  },
  {
    "text": "be intractable for a human to ever go through all of that and like detecting",
    "start": "967740",
    "end": "974160"
  },
  {
    "text": "malicious traffic in DNS logs for example is a classic example of this in any large or mid-sized organization",
    "start": "974160",
    "end": "981240"
  },
  {
    "text": "there will be so many DNS queries per day that would pretty much be impossible for anyone to kind of sift through that",
    "start": "981240",
    "end": "987480"
  },
  {
    "text": "to see if there is any like DJ activity going on there or anything else and I think the same applies to malware",
    "start": "987480",
    "end": "994079"
  },
  {
    "text": "as well there's lots of new variants coming up every day it's hard to keep up with rule-based approaches and it would",
    "start": "994079",
    "end": "1000019"
  },
  {
    "text": "be hard for for analysts to kind of scale their workflows so that they would deal with the large amount of malware",
    "start": "1000019",
    "end": "1006440"
  },
  {
    "text": "samples that they would have to analyze daily so how would this then actually work in",
    "start": "1006440",
    "end": "1011480"
  },
  {
    "start": "1008000",
    "end": "1033000"
  },
  {
    "text": "practice so unfortunately machine learning models can't understand binaries in the same way like a",
    "start": "1011480",
    "end": "1017600"
  },
  {
    "text": "disassembler or a decompiler would so they're they're basically sequences of",
    "start": "1017600",
    "end": "1022820"
  },
  {
    "text": "mathematical operations and matrix multiplication so they can only operate on numbers or vectors so that is why the",
    "start": "1022820",
    "end": "1030500"
  },
  {
    "text": "first step in any machine learning project is feature engineering so what this means is we take our malware binary",
    "start": "1030500",
    "end": "1037938"
  },
  {
    "start": "1033000",
    "end": "1725000"
  },
  {
    "text": "or benign binary and we try to figure out what would be the interesting features that could be calculated from",
    "start": "1037939",
    "end": "1044120"
  },
  {
    "text": "it so that we could pass them on into our model and this is where kind of the the",
    "start": "1044120",
    "end": "1050960"
  },
  {
    "text": "science in machine learning becomes more of an art because it's not always immediately obvious which features you",
    "start": "1050960",
    "end": "1058280"
  },
  {
    "text": "should compute for which problems and there is no like Universal set of features that would be good would be a",
    "start": "1058280",
    "end": "1065660"
  },
  {
    "text": "good solution to any problem so some examples that you would potentially compute if you were trying to build a",
    "start": "1065660",
    "end": "1071120"
  },
  {
    "text": "model to detect malware would be like the average length of strings in the malware the presence of certain keywords",
    "start": "1071120",
    "end": "1077299"
  },
  {
    "text": "that are known to be associated with malicious activity its length and bytes some libraries that it Imports and so",
    "start": "1077299",
    "end": "1084380"
  },
  {
    "text": "forth and at the end of this feature engineering procedure which you have is a sequence of numbers for each of these",
    "start": "1084380",
    "end": "1091340"
  },
  {
    "text": "and they kind of become what we call a feature vector so you repeat this procedure for your",
    "start": "1091340",
    "end": "1098360"
  },
  {
    "text": "benign examples these blue ones and then your malicious examples these red ones",
    "start": "1098360",
    "end": "1103580"
  },
  {
    "text": "you process them both in the same way and you get these numerical vectors out of them and what that essentially means",
    "start": "1103580",
    "end": "1110419"
  },
  {
    "text": "is that now you've kind of Taken these binaries and you've projected them into",
    "start": "1110419",
    "end": "1115580"
  },
  {
    "text": "a multi-dimensional mathematical space so for Simplicity I've just put two",
    "start": "1115580",
    "end": "1120740"
  },
  {
    "text": "Dimensions here but you can imagine that these vectors can have hundreds of dimensions and so basically now your",
    "start": "1120740",
    "end": "1127160"
  },
  {
    "text": "malware and your benign binaries are kind of blobs in this multi-dimensional space and now we kind of get to the",
    "start": "1127160",
    "end": "1133100"
  },
  {
    "text": "exciting thing which is how do we take this space and how do we create a model",
    "start": "1133100",
    "end": "1138679"
  },
  {
    "text": "out of it so we come to the question of like what really is a model like when",
    "start": "1138679",
    "end": "1143720"
  },
  {
    "text": "we're when we've transformed the problem of malware classification into this kind",
    "start": "1143720",
    "end": "1149539"
  },
  {
    "text": "of mathematical space what does it mean to create a model when we're talking about it in these terms and it's as",
    "start": "1149539",
    "end": "1155480"
  },
  {
    "text": "simple as like slapping a line or a plane into the space so that it's somehow separates these two classes so",
    "start": "1155480",
    "end": "1163280"
  },
  {
    "text": "that's what we call a decision battery and like this is the world's worst classifier because I just literally",
    "start": "1163280",
    "end": "1169580"
  },
  {
    "text": "slapped it on there it's the world's worst model but this this could be a random model",
    "start": "1169580",
    "end": "1175520"
  },
  {
    "text": "so what this model tells us that everything that falls on the versus",
    "start": "1175520",
    "end": "1181760"
  },
  {
    "text": "right side of the space is malicious and everything that falls on the other side of the line is benign so there you go",
    "start": "1181760",
    "end": "1188900"
  },
  {
    "text": "we've successfully created our first very poor machine learning model there",
    "start": "1188900",
    "end": "1194299"
  },
  {
    "text": "it is um now of course we want to be able to use",
    "start": "1194299",
    "end": "1199340"
  },
  {
    "text": "this model to classify when we get a new binary whether it's you know a malware",
    "start": "1199340",
    "end": "1204620"
  },
  {
    "text": "or not because we might want to do something about it if it's malicious so how do we do that well we take this new",
    "start": "1204620",
    "end": "1210380"
  },
  {
    "text": "incoming binary sample we put it through our feature engineering pipeline because as you remember you have to somehow",
    "start": "1210380",
    "end": "1217460"
  },
  {
    "text": "transform the binary into numerical Vector before the model can understand how to deal with it and then you see on",
    "start": "1217460",
    "end": "1224960"
  },
  {
    "text": "which side of the boundary does it fall and in this case it would fall on on",
    "start": "1224960",
    "end": "1230419"
  },
  {
    "text": "this Lower Side of the boundary so the model says that it is malicious now of course this model is really poor because",
    "start": "1230419",
    "end": "1236900"
  },
  {
    "text": "as we already see just on the training data that where we know the ground truth",
    "start": "1236900",
    "end": "1242000"
  },
  {
    "text": "so we know which of these is which of these are malware and which of these are benign we can already see that because",
    "start": "1242000",
    "end": "1248419"
  },
  {
    "text": "the model the line bisects the space on this side some of the malicious examples",
    "start": "1248419",
    "end": "1253460"
  },
  {
    "text": "actually fall on the side of the benign class so it's not a very good model at all but this is basically a model",
    "start": "1253460",
    "end": "1261559"
  },
  {
    "text": "now how do we actually improve on this very important choice of decision",
    "start": "1261559",
    "end": "1266720"
  },
  {
    "text": "boundary and and make it fit our data better well the Crux of this is to make",
    "start": "1266720",
    "end": "1272120"
  },
  {
    "text": "the the line be more flexible so that it can actually model the patterns in our",
    "start": "1272120",
    "end": "1277160"
  },
  {
    "text": "data and with that hopefully be able to give us more accurate predictions in the",
    "start": "1277160",
    "end": "1282919"
  },
  {
    "text": "future so our goal is to start with something simple and kind of make the model more",
    "start": "1282919",
    "end": "1289159"
  },
  {
    "text": "flexible make the line more squiggly so that it better captures the patterns in our training data and this is kind of",
    "start": "1289159",
    "end": "1295940"
  },
  {
    "text": "all there is to it in a very very simple nutshell now of course I'm glossing over over a ton of details about what happens",
    "start": "1295940",
    "end": "1303500"
  },
  {
    "text": "but basically there we have it so how does how does it actually look like when we're at the machine learning",
    "start": "1303500",
    "end": "1310460"
  },
  {
    "text": "model gym and the model is training to to see what weights it should assign so",
    "start": "1310460",
    "end": "1315679"
  },
  {
    "text": "that it can model the data better well we kind of have these training loops and at each iteration of the loop we",
    "start": "1315679",
    "end": "1322820"
  },
  {
    "text": "evaluate how the model is doing currently on the training data so at",
    "start": "1322820",
    "end": "1327980"
  },
  {
    "text": "stage zero here we have our poorly chosen line we can kind of see that a",
    "start": "1327980",
    "end": "1333440"
  },
  {
    "text": "lot of these malicious samples fall on the wrong line of the decision battery meaning that they're misclassified as a",
    "start": "1333440",
    "end": "1340760"
  },
  {
    "text": "benign when they shouldn't be so we can kind of quantify how many of our training data points the model gets",
    "start": "1340760",
    "end": "1347960"
  },
  {
    "text": "wrong and then we can adjust the model during the next iteration slightly by",
    "start": "1347960",
    "end": "1353600"
  },
  {
    "text": "you know moving the line up and down and then recalculating to see if it improves or not and we do this process many many",
    "start": "1353600",
    "end": "1360860"
  },
  {
    "text": "times until we get to a stage where we say okay this is this is kind of an",
    "start": "1360860",
    "end": "1366500"
  },
  {
    "text": "acceptable model it only gets one data point in the training data wrong so you",
    "start": "1366500",
    "end": "1371960"
  },
  {
    "text": "know I can kind of probably live with this but then you can also ask like okay in",
    "start": "1371960",
    "end": "1378260"
  },
  {
    "text": "this case we decided that our motto would be a straight line but what if that's a bit too rigid like it can't",
    "start": "1378260",
    "end": "1385039"
  },
  {
    "text": "really wiggle around the data points in this mathematical space and capture",
    "start": "1385039",
    "end": "1390740"
  },
  {
    "text": "um patterns in the data so this is where we come to the other kind of art not a",
    "start": "1390740",
    "end": "1396140"
  },
  {
    "text": "science part of machine learning is being able to select the model correctly",
    "start": "1396140",
    "end": "1401720"
  },
  {
    "text": "so maybe that line model that we used was too rigid maybe we need some kind of squiggly line when we train it you know",
    "start": "1401720",
    "end": "1409039"
  },
  {
    "text": "it gradually learns to model the patterns of the data in such a way that it's a little bit better or maybe not or",
    "start": "1409039",
    "end": "1415940"
  },
  {
    "text": "maybe the straight line was kind of good enough for our use case so how do we go about choosing a model",
    "start": "1415940",
    "end": "1422480"
  },
  {
    "text": "and the kind of scary answer is that there is this concept of no free lunch",
    "start": "1422480",
    "end": "1427760"
  },
  {
    "text": "in in the machine learning world and that means that there isn't a single model that we know out of the box will",
    "start": "1427760",
    "end": "1435440"
  },
  {
    "text": "be the best solution for every single machine learning problem so this is kind",
    "start": "1435440",
    "end": "1441200"
  },
  {
    "text": "of where the art part comes in and the experimentation is that you simply have to you develop an intuition but you also",
    "start": "1441200",
    "end": "1447440"
  },
  {
    "text": "have to try a bunch of different solutions before you come to one that fits your your data and your problem",
    "start": "1447440",
    "end": "1455120"
  },
  {
    "text": "and just to illustrate this is from a very famous machine learning package",
    "start": "1455120",
    "end": "1460220"
  },
  {
    "text": "called scikit-learn they've done this illustration to show you what are the different kinds of decision boundaries",
    "start": "1460220",
    "end": "1466520"
  },
  {
    "text": "that various models learn and um here on this side we have the",
    "start": "1466520",
    "end": "1472340"
  },
  {
    "text": "data set so you can imagine that for our classification case these red points could be the malicious malware binaries",
    "start": "1472340",
    "end": "1479059"
  },
  {
    "text": "and these Blue Points could be the benign ones and that's how the data set looks like when we project it into the",
    "start": "1479059",
    "end": "1485240"
  },
  {
    "text": "mathematical space after after extracting our features and as you can see there are some classifiers that",
    "start": "1485240",
    "end": "1491120"
  },
  {
    "text": "learn very rigid decision boundaries so that even a small change in the",
    "start": "1491120",
    "end": "1496400"
  },
  {
    "text": "parameters would immediately kind of cause the class label to go from malicious to benign or vice versa and",
    "start": "1496400",
    "end": "1503059"
  },
  {
    "text": "there are other classifiers that learn kind of very smooth very rounded decision boundaries so",
    "start": "1503059",
    "end": "1510200"
  },
  {
    "text": "there isn't there is kind of like a lot of choice and it's not always very clear",
    "start": "1510200",
    "end": "1515419"
  },
  {
    "text": "about it's not always very clear at the start of the project what is the thing that you should kind",
    "start": "1515419",
    "end": "1522200"
  },
  {
    "text": "of use so that was the that was a brief tour of how you might take a problem in security",
    "start": "1522200",
    "end": "1530539"
  },
  {
    "text": "say malware classification and how you could start thinking about it in terms",
    "start": "1530539",
    "end": "1536000"
  },
  {
    "text": "of machine learning and also building a model out of it but getting back to what we're here for",
    "start": "1536000",
    "end": "1542659"
  },
  {
    "text": "which is to try and kind of take the knowledge that we've just built upon in the first part of presentation and",
    "start": "1542659",
    "end": "1549500"
  },
  {
    "text": "seeing if it's possible to build a decompiler using some kind of machine learning model so can we do it should we",
    "start": "1549500",
    "end": "1556460"
  },
  {
    "text": "do it why is this a bad idea okay so what is the compilation so",
    "start": "1556460",
    "end": "1563059"
  },
  {
    "text": "decompilation if you've if you've sometimes if you've ever reverse engineered a malware sample",
    "start": "1563059",
    "end": "1569779"
  },
  {
    "text": "or a binary you probably know that the output that you get from the disassembler is a bunch of assembly code",
    "start": "1569779",
    "end": "1576080"
  },
  {
    "text": "and it is possible to definitely read and understand what's going on there but it usually takes some expertise to be",
    "start": "1576080",
    "end": "1583640"
  },
  {
    "text": "able to to learn assembly and to kind of understand what's happening on a higher",
    "start": "1583640",
    "end": "1588679"
  },
  {
    "text": "level from the simple CPU instructions that you get so decompilation is kind of",
    "start": "1588679",
    "end": "1594140"
  },
  {
    "text": "One Step Up from disassembly which means that you take a program that's in a low-level representation like assembly",
    "start": "1594140",
    "end": "1600679"
  },
  {
    "text": "and you attempt to translate it backwards into a higher level programming language like C for example",
    "start": "1600679",
    "end": "1607520"
  },
  {
    "text": "now I'll show you a concrete example so here is a bunch of assembly code and",
    "start": "1607520",
    "end": "1613760"
  },
  {
    "text": "this is something that we would get from a disassembler for example if we were analyzing a binary and the goal of the",
    "start": "1613760",
    "end": "1620720"
  },
  {
    "text": "the compiler would be to take this and to give you something like this so that if you're a malware analyst or a",
    "start": "1620720",
    "end": "1627260"
  },
  {
    "text": "researcher you could actually see kind of what the code was trying to do without having to go instruction by",
    "start": "1627260",
    "end": "1633740"
  },
  {
    "text": "instruction so that is the goal here is to start with assembly and try to recover",
    "start": "1633740",
    "end": "1638779"
  },
  {
    "text": "something that looks like C or go or whatever your other favorite programming",
    "start": "1638779",
    "end": "1644539"
  },
  {
    "text": "language um okay but you might say like why do we need to stick machine learning into into",
    "start": "1644539",
    "end": "1650960"
  },
  {
    "text": "this pot of soup as well because we already have hex rays which is a plug-in for Ida a kind of toolkit for reverse",
    "start": "1650960",
    "end": "1658520"
  },
  {
    "text": "engineering and we also have gidra which is an open source and I guess this is",
    "start": "1658520",
    "end": "1664340"
  },
  {
    "text": "Handler and decompiler put together that's developed by the NSA and they already kind of provide these kinds of",
    "start": "1664340",
    "end": "1669919"
  },
  {
    "text": "capabilities so like surely we don't we don't need another crappy machine learning project like messing things up",
    "start": "1669919",
    "end": "1677600"
  },
  {
    "text": "um so yeah why are some reasons why we might still want to kind of at least attempt well both hex rays and guidra",
    "start": "1677600",
    "end": "1685700"
  },
  {
    "text": "are kind of engineered using rule-based approaches so they look at the low level disassembled code and they find certain",
    "start": "1685700",
    "end": "1692960"
  },
  {
    "text": "patterns of instructions that then are known to map to say a certain higher",
    "start": "1692960",
    "end": "1698720"
  },
  {
    "text": "level source code functions and that's kind of part of the way that they help to decompile this code is that there are",
    "start": "1698720",
    "end": "1705320"
  },
  {
    "text": "handcrafted rules that have taken probably years to develop which assist in this process so these rule-based",
    "start": "1705320",
    "end": "1712460"
  },
  {
    "text": "approaches are quite costly to build and maintain and I think the last time I checked like hex Rays has been under",
    "start": "1712460",
    "end": "1719059"
  },
  {
    "text": "development for almost 18 years so that's a lot of developer time that has been invested in trying to craft these",
    "start": "1719059",
    "end": "1725659"
  },
  {
    "text": "rules so the second time the second reason why we might want to consider adding machine",
    "start": "1725659",
    "end": "1732440"
  },
  {
    "text": "learning to the mix is that it takes a lot of developer time to create a new decompiler so I think gidra and both",
    "start": "1732440",
    "end": "1739100"
  },
  {
    "text": "gidra and hex Rays decompiled to C but say malware authors decide tomorrow that",
    "start": "1739100",
    "end": "1744919"
  },
  {
    "text": "the rust is the language of the day and like every malware we now see is in Rust",
    "start": "1744919",
    "end": "1750500"
  },
  {
    "text": "so it would take a lot of developer effort to create a new decompiler that would be able to decompile to another",
    "start": "1750500",
    "end": "1756380"
  },
  {
    "text": "programming language and finally the output of the compilers like gitra and and hex Rays is not",
    "start": "1756380",
    "end": "1764000"
  },
  {
    "text": "really as high level source code as you would write yourselves it's more like pseudocode and what do I mean by that",
    "start": "1764000",
    "end": "1771260"
  },
  {
    "start": "1770000",
    "end": "1824000"
  },
  {
    "text": "well here we have an example from a an academic paper that was also studying",
    "start": "1771260",
    "end": "1777620"
  },
  {
    "text": "this problem and they say okay let's take this function in C and let's compile it to assembly and then",
    "start": "1777620",
    "end": "1784640"
  },
  {
    "text": "decompile it back with hex Rays to see the difference between the two implementations so this is what someone",
    "start": "1784640",
    "end": "1790399"
  },
  {
    "text": "with a human developer wrote and then they compiled it using a compiler into assembly and then they let hex Rays",
    "start": "1790399",
    "end": "1797000"
  },
  {
    "text": "disassemble it so if you're an expert you could probably just like eyeball these two and they",
    "start": "1797000",
    "end": "1803480"
  },
  {
    "text": "would look the same to you but to me like it would definitely take some time to really understand that what's going",
    "start": "1803480",
    "end": "1809899"
  },
  {
    "text": "on in this piece of code is the same as what's going on in this piece of code so",
    "start": "1809899",
    "end": "1815480"
  },
  {
    "text": "that's what we mean is that the output of the compilers is kind of more like pseudo code but it's not really close to",
    "start": "1815480",
    "end": "1823220"
  },
  {
    "text": "human with a human developer would write and also there's this other thing like when you work in in machine learning and",
    "start": "1823220",
    "end": "1830360"
  },
  {
    "start": "1824000",
    "end": "2143000"
  },
  {
    "text": "all you do every day is you produce machine learning models or hammers for a living then like everything starts to",
    "start": "1830360",
    "end": "1836659"
  },
  {
    "text": "look like a nail to you and so here I am sitting and thinking like well we know for many years that machine learning",
    "start": "1836659",
    "end": "1843260"
  },
  {
    "text": "models have been able to do natural language translation really reliably and",
    "start": "1843260",
    "end": "1848419"
  },
  {
    "text": "here is an example from from Google translate that I'm sure you all have used many times so I'm thinking like",
    "start": "1848419",
    "end": "1854240"
  },
  {
    "text": "okay if we know that machine learning models can do this why can't they just do that why can't there be a Google",
    "start": "1854240",
    "end": "1860779"
  },
  {
    "text": "translate that you put some assembly it's not really English Google you have to be a bit",
    "start": "1860779",
    "end": "1866419"
  },
  {
    "text": "better but yeah why can't we why can't we have a Google translate that kind of just Maps them",
    "start": "1866419",
    "end": "1872360"
  },
  {
    "text": "one to the other like that um so that's kind of how I got interested in this problem and and",
    "start": "1872360",
    "end": "1878960"
  },
  {
    "text": "trying to understand if this is even possible and I'm actually not the first one to ask this question has been",
    "start": "1878960",
    "end": "1885380"
  },
  {
    "text": "floating around the internet or if you consider Reddit internet for at least seven years and the idea of being able",
    "start": "1885380",
    "end": "1892820"
  },
  {
    "text": "to automatically generate the compilers goes way back to to the 90s at least",
    "start": "1892820",
    "end": "1897980"
  },
  {
    "text": "that's where some of the early research papers that were trying to do this they weren't using a neural machine",
    "start": "1897980",
    "end": "1903440"
  },
  {
    "text": "translation techniques or machine learning at all they were just trying to see if it would be somehow possible to",
    "start": "1903440",
    "end": "1908779"
  },
  {
    "text": "take a compiler and then make a reverse software out of it but without using",
    "start": "1908779",
    "end": "1914480"
  },
  {
    "text": "machine learning anyway this is not a new idea by any means it's been floating around various places for a while",
    "start": "1914480",
    "end": "1920779"
  },
  {
    "text": "however we have to acknowledge one thing that when we say okay why can't we have",
    "start": "1920779",
    "end": "1925940"
  },
  {
    "text": "a Google translate that we know works perfectly for Finnish Swedish Finnish to",
    "start": "1925940",
    "end": "1931100"
  },
  {
    "text": "Norwegian Norwegian to Finnish Swedish to English why can't we have that for assembly and see well one of the one of",
    "start": "1931100",
    "end": "1938419"
  },
  {
    "text": "the like glaring things that should be staring at you at this point is that code is not natural language and how can",
    "start": "1938419",
    "end": "1946580"
  },
  {
    "text": "we kind of quantify the extent to which code that humans write is different to",
    "start": "1946580",
    "end": "1951799"
  },
  {
    "text": "the language that humans speak and one of the ways is just taking a look at the",
    "start": "1951799",
    "end": "1957320"
  },
  {
    "text": "number of words that are in the original sentence and the translated sentence so here I have one sentence that is in",
    "start": "1957320",
    "end": "1964220"
  },
  {
    "text": "Swedish and it's direct translation in English and we can see that when we count the number of words they're almost",
    "start": "1964220",
    "end": "1969740"
  },
  {
    "text": "the same so when if we would divide it the ratio would almost be one there's three words in the Swedish one and four",
    "start": "1969740",
    "end": "1976399"
  },
  {
    "text": "words in the English one however the same is not true when you compare source code Snippets and their",
    "start": "1976399",
    "end": "1983539"
  },
  {
    "text": "corresponding assembly pairs and actually there is a research paper that I'm going to circle back to a bit",
    "start": "1983539",
    "end": "1989899"
  },
  {
    "text": "later that really Quantified this like how different are natural language pair translations versus code to assembly",
    "start": "1989899",
    "end": "1997100"
  },
  {
    "text": "translations and here you can see that when we compare translated sentences between English and",
    "start": "1997100",
    "end": "2004779"
  },
  {
    "text": "German we see that their word ratios are almost one so a word in an English",
    "start": "2004779",
    "end": "2011880"
  },
  {
    "text": "sentence in English has almost the exact same length as its corresponding translation in German but when we look",
    "start": "2011880",
    "end": "2018519"
  },
  {
    "text": "at various Assembly Language and high-level source code language pairs we see that this is not the case at all for",
    "start": "2018519",
    "end": "2025360"
  },
  {
    "text": "example when we compare as code Snippets written in go and their corresponding assembly Snippets we can",
    "start": "2025360",
    "end": "2032140"
  },
  {
    "text": "see that the assembly Snippets are on average 15 times longer than the than",
    "start": "2032140",
    "end": "2037360"
  },
  {
    "text": "the go Snippets so there's like there is uh there isn't it the same kind of information symmetry",
    "start": "2037360",
    "end": "2044500"
  },
  {
    "text": "that you would have in human languages so that's like warning flag number one that this approach will probably be",
    "start": "2044500",
    "end": "2051040"
  },
  {
    "text": "difficult to work the second approach is that when we translate human language",
    "start": "2051040",
    "end": "2056679"
  },
  {
    "text": "when we go from Swedish to Finnish or Swedish to Norwegian there is no compiler in between so the information",
    "start": "2056679",
    "end": "2063520"
  },
  {
    "text": "that we Express in a Swedish sentence we usually try to preserve it almost",
    "start": "2063520",
    "end": "2069638"
  },
  {
    "text": "equally in the sentence that we're going to write in Norwegian type but in code",
    "start": "2069639",
    "end": "2075099"
  },
  {
    "text": "this is definitely not the case because in between a source code and assembly what we have is the compiler and the",
    "start": "2075099",
    "end": "2081520"
  },
  {
    "text": "compiler can do all kinds of things that we as developers probably have little control over and more than that have",
    "start": "2081520",
    "end": "2087580"
  },
  {
    "text": "little knowledge of at least I personally don't don't know any compiler internal so I have no idea what's",
    "start": "2087580",
    "end": "2093820"
  },
  {
    "text": "actually happening in this translation step but for example the compiler can rearrange the code add runtime text that",
    "start": "2093820",
    "end": "2100420"
  },
  {
    "text": "were not in the source code strip a lot of information add optimizations remove code branches that are not going to be",
    "start": "2100420",
    "end": "2107320"
  },
  {
    "text": "reachable during the execution so there's a lot going on here that is causing that is kind of causing this",
    "start": "2107320",
    "end": "2115260"
  },
  {
    "text": "analogy between natural language translation and code to assembly translation to break down so that should",
    "start": "2115260",
    "end": "2121960"
  },
  {
    "text": "kind of maybe give us a warning sign this will not be as easy to make work as as we think but let's not give up anyway",
    "start": "2121960",
    "end": "2130119"
  },
  {
    "text": "let's take a little bit of a look about how a neural machine translation works",
    "start": "2130119",
    "end": "2135400"
  },
  {
    "text": "for natural language and then let's see how those similar techniques have been applied to try to build the compilers",
    "start": "2135400",
    "end": "2143640"
  },
  {
    "start": "2143000",
    "end": "2304000"
  },
  {
    "text": "and this is kind of where we're going to to also touch a little bit upon what",
    "start": "2143859",
    "end": "2149680"
  },
  {
    "text": "makes large language models like chat GPT work and what was the revolution that happened in the machine learning",
    "start": "2149680",
    "end": "2156040"
  },
  {
    "text": "World in 2017 that enabled all of this to be possible",
    "start": "2156040",
    "end": "2161320"
  },
  {
    "text": "but back to what I was saying how does neural machine translation work well it works in a very similar way to how we",
    "start": "2161320",
    "end": "2168520"
  },
  {
    "text": "trained our little toy malware classifier a few slides back you start with a data set in this case it's pairs",
    "start": "2168520",
    "end": "2176500"
  },
  {
    "text": "of sentences or examples in language a and their corresponding translations to",
    "start": "2176500",
    "end": "2181599"
  },
  {
    "text": "language B so you can already see that there is a little bit of a data collection problem if you're doing this for a natural",
    "start": "2181599",
    "end": "2188800"
  },
  {
    "text": "language because you actually have to have humans translate this text but that same problem doesn't exist if you're",
    "start": "2188800",
    "end": "2194980"
  },
  {
    "text": "going to train a decompiler because you can simply automatically generate a lot",
    "start": "2194980",
    "end": "2200800"
  },
  {
    "text": "of training data for yourself all right well but once we have our data however we choose to to generate that we",
    "start": "2200800",
    "end": "2207940"
  },
  {
    "text": "do some feature engineering so we translate these we take these sentences and we",
    "start": "2207940",
    "end": "2214420"
  },
  {
    "text": "break them up into words or maybe smaller tokens so that we get a vector representation a little bit in the same",
    "start": "2214420",
    "end": "2220720"
  },
  {
    "text": "way that we did for our malware binaries because as I said these models are",
    "start": "2220720",
    "end": "2225760"
  },
  {
    "text": "essentially doing a mathematical mathematical calculations and large scale matrix multiplication so they",
    "start": "2225760",
    "end": "2231940"
  },
  {
    "text": "can't really deal with words they have to deal with numerical vectors and then finally we train a model that",
    "start": "2231940",
    "end": "2238900"
  },
  {
    "text": "is somehow able to learn that the word for train is this in language a and the",
    "start": "2238900",
    "end": "2244359"
  },
  {
    "text": "word for train is that a language B and then kind of make it work so it seems very simple on the surface",
    "start": "2244359",
    "end": "2250540"
  },
  {
    "text": "however there is this like little curveball here is that when you have this kind of a sentence in Swedish I'm",
    "start": "2250540",
    "end": "2257859"
  },
  {
    "text": "traveling I travel from Stockholm to Oslo you can't simply break it apart and",
    "start": "2257859",
    "end": "2264099"
  },
  {
    "text": "project it into this mathematical space in the same way that we did with our malicious and binary malware examples",
    "start": "2264099",
    "end": "2270640"
  },
  {
    "text": "because there is a kind of dependency um in in the way the words are ordered",
    "start": "2270640",
    "end": "2276460"
  },
  {
    "text": "of the sentence in the sentence so if you take Stockholm out of the context then it doesn't really like mean",
    "start": "2276460",
    "end": "2282640"
  },
  {
    "text": "anything in this case you have to have it in that position in the sentence so that's a little bit of a curveball here",
    "start": "2282640",
    "end": "2288940"
  },
  {
    "text": "when it comes to building language models is that language is a sequential kind of data structure and you really",
    "start": "2288940",
    "end": "2295960"
  },
  {
    "text": "have to have the context you can't just kind of examine words on their own and",
    "start": "2295960",
    "end": "2301180"
  },
  {
    "text": "try to model that you have to examine the sequence as a whole and so in order to do that we have to",
    "start": "2301180",
    "end": "2308140"
  },
  {
    "start": "2304000",
    "end": "2345000"
  },
  {
    "text": "develop a new type of model it's not just enough to project these sentences",
    "start": "2308140",
    "end": "2313780"
  },
  {
    "text": "into some mathematical space and then slap on a decision boundary or a line",
    "start": "2313780",
    "end": "2319000"
  },
  {
    "text": "there we have to develop a new class of solutions and these are known as sequence to sequence models so as the",
    "start": "2319000",
    "end": "2326500"
  },
  {
    "text": "name implies they take a sequence of text as an input they store somehow the",
    "start": "2326500",
    "end": "2332680"
  },
  {
    "text": "context of what the text is saying where the words appear they store that in a",
    "start": "2332680",
    "end": "2338140"
  },
  {
    "text": "memory or an internal State and then they output another sequence which is",
    "start": "2338140",
    "end": "2343359"
  },
  {
    "text": "the same sentence but in another language so this is what's known as an encoder",
    "start": "2343359",
    "end": "2348820"
  },
  {
    "start": "2345000",
    "end": "2407000"
  },
  {
    "text": "decoder architecture for neural machine translation and this is the basis of the state of the art that is currently used",
    "start": "2348820",
    "end": "2355020"
  },
  {
    "text": "uh in a very advanced form by Google translate and also by various other",
    "start": "2355020",
    "end": "2361240"
  },
  {
    "text": "large language models so in this case we actually kind of have two models so we have the first model",
    "start": "2361240",
    "end": "2367780"
  },
  {
    "text": "which is the encoder you can think of it as like this model is the expert in in Swedish so it takes this sequence of",
    "start": "2367780",
    "end": "2374800"
  },
  {
    "text": "Swedish words and it analyzes them one by one while remembering the context",
    "start": "2374800",
    "end": "2381160"
  },
  {
    "text": "and then it outputs it collects all of the information that it got from every word and it outputs what's known as a",
    "start": "2381160",
    "end": "2387940"
  },
  {
    "text": "context Vector this Vector is then sent to the second part of this model which",
    "start": "2387940",
    "end": "2393880"
  },
  {
    "text": "is like the expert in English you might think so the expert in English takes this context Vector that it got from the",
    "start": "2393880",
    "end": "2400180"
  },
  {
    "text": "Swedish expert and then it's able to from that Vector to generate the correct sequence of words in English",
    "start": "2400180",
    "end": "2408099"
  },
  {
    "start": "2407000",
    "end": "2460000"
  },
  {
    "text": "so if you look at this a little bit closer what actually happens inside of this encoder and also the decoder to a",
    "start": "2408099",
    "end": "2414640"
  },
  {
    "text": "large extent well at least until 2017 the state of the art for analyzing",
    "start": "2414640",
    "end": "2420339"
  },
  {
    "text": "sequential data were known were what we call recurrent neural networks so these",
    "start": "2420339",
    "end": "2425500"
  },
  {
    "text": "are models that are able to keep a certain memory of what tokens or words they have seen before and then use that",
    "start": "2425500",
    "end": "2432640"
  },
  {
    "text": "to kind of construct a context and understand if you will what a sentence",
    "start": "2432640",
    "end": "2437980"
  },
  {
    "text": "is saying so what happens here well we take this sentence and we break it up into tokens you can think of it as words",
    "start": "2437980",
    "end": "2444700"
  },
  {
    "text": "but there are other ways to to break up a sentence as well it's just a little bit beyond the scope of this",
    "start": "2444700",
    "end": "2450400"
  },
  {
    "text": "presentation so we take the first word which is I in Swedish and then we pass it it goes",
    "start": "2450400",
    "end": "2457359"
  },
  {
    "text": "into the encoder and inside the encoder is this recurrent neural network so we pass the word into that it analyzes the",
    "start": "2457359",
    "end": "2464859"
  },
  {
    "start": "2460000",
    "end": "2541000"
  },
  {
    "text": "word and then it outputs what's known as a hidden state so this is the kind of memory of what words the recurrent",
    "start": "2464859",
    "end": "2471040"
  },
  {
    "text": "neural network has seen then we take the second word the second token and we pass it into the encoder and the recurrent",
    "start": "2471040",
    "end": "2478599"
  },
  {
    "text": "neural network accepts the new word and also the hidden state from the previous step and that's how it kind of remembers",
    "start": "2478599",
    "end": "2484720"
  },
  {
    "text": "that the word travel is usually usually comes after the word I so that's how in",
    "start": "2484720",
    "end": "2491560"
  },
  {
    "text": "a very simple nutshell that is how it builds an understanding if you will of what words usually follow each other in",
    "start": "2491560",
    "end": "2499240"
  },
  {
    "text": "a sentence and if you can imagine that it does this over and over again millions of times for like hundreds of",
    "start": "2499240",
    "end": "2506560"
  },
  {
    "text": "gigabytes of text at some point it would develop a pretty accurate probabilistic model of like how it should Place words",
    "start": "2506560",
    "end": "2513700"
  },
  {
    "text": "in a sentence so that it actually looks like a human wrote that so then when it's done processing the",
    "start": "2513700",
    "end": "2520359"
  },
  {
    "text": "first sentence it collates all of the Hidden States into a context vector and",
    "start": "2520359",
    "end": "2525880"
  },
  {
    "text": "this context is then passed to the decoder which kind of goes through the same process but but in Reverse so",
    "start": "2525880",
    "end": "2531880"
  },
  {
    "text": "instead of consuming the word tokens it's taking the the hidden State and then emitting the most likely tokens",
    "start": "2531880",
    "end": "2538599"
  },
  {
    "text": "based on the information that it got from there Okay so until 2017 this way of",
    "start": "2538599",
    "end": "2545800"
  },
  {
    "start": "2541000",
    "end": "2606000"
  },
  {
    "text": "architecting language models and of architecting translation models um was very inefficient because if you",
    "start": "2545800",
    "end": "2553240"
  },
  {
    "text": "think back to our process we have to take each word in the sentence and then kind of process it one by one so you",
    "start": "2553240",
    "end": "2560500"
  },
  {
    "text": "can't really parallel parallelize this very effectively which means that training these models can be very slow",
    "start": "2560500",
    "end": "2567160"
  },
  {
    "text": "but then in 2017 a group of researchers published this paper that is now like",
    "start": "2567160",
    "end": "2572680"
  },
  {
    "text": "probably the most well-known machine learning paper in this language models field and it was called attention is all",
    "start": "2572680",
    "end": "2578980"
  },
  {
    "text": "you need and it proposed that instead of using a recurrent neural network type of",
    "start": "2578980",
    "end": "2585339"
  },
  {
    "text": "approach they proposed using a new type of algorithm called attention and what",
    "start": "2585339",
    "end": "2590800"
  },
  {
    "text": "the Revolutionary part of this algorithm was is that you didn't have to process each word in the sentence in sequence",
    "start": "2590800",
    "end": "2597400"
  },
  {
    "text": "instead you could do it all in parallel and this just like blew the door open to",
    "start": "2597400",
    "end": "2602440"
  },
  {
    "text": "training these models on gigabytes and gigabytes of text and so that's how we got the first like",
    "start": "2602440",
    "end": "2610000"
  },
  {
    "start": "2606000",
    "end": "2693000"
  },
  {
    "text": "the the forefather of or for grandmother of of GPT or chat GPT which is Bert",
    "start": "2610000",
    "end": "2617760"
  },
  {
    "text": "it's a mouthful to to say the actual name it's bi-directional encoder representations of Transformers uh I'm",
    "start": "2617760",
    "end": "2625480"
  },
  {
    "text": "not sure how they how they chose this maybe because birth is such a cute name but um anyway so this was the the first",
    "start": "2625480",
    "end": "2633700"
  },
  {
    "text": "model that was trained using this new attention mechanism and this new Transformer architecture and it",
    "start": "2633700",
    "end": "2640180"
  },
  {
    "text": "immediately like blew all of the state previous state of the art models like",
    "start": "2640180",
    "end": "2645819"
  },
  {
    "text": "out of the water it was much better on on certain tasks that are used to Benchmark this and the other kind of uh",
    "start": "2645819",
    "end": "2652900"
  },
  {
    "text": "clever trick that was discovered here was that uh we didn't need to actually provide a",
    "start": "2652900",
    "end": "2659619"
  },
  {
    "text": "lot of label training data for Bert instead what researchers did is they said okay you know the internet is full",
    "start": "2659619",
    "end": "2665800"
  },
  {
    "text": "of text right so let me just download scrape all of that and then let me",
    "start": "2665800",
    "end": "2670839"
  },
  {
    "text": "create a training data set by simply randomly taking out words from the text",
    "start": "2670839",
    "end": "2676420"
  },
  {
    "text": "and training the model by asking it to predict what the next word could be and",
    "start": "2676420",
    "end": "2681819"
  },
  {
    "text": "repeating this over and over again until we get to a model that is really writing",
    "start": "2681819",
    "end": "2687940"
  },
  {
    "text": "like almost believably good good human-like text if you will",
    "start": "2687940",
    "end": "2694000"
  },
  {
    "start": "2693000",
    "end": "2787000"
  },
  {
    "text": "so what this led to is that now we have a lot more language models than I could ever fit on the slide but broadly",
    "start": "2694000",
    "end": "2701260"
  },
  {
    "text": "speaking they can be divided into three different families so there are encoder",
    "start": "2701260",
    "end": "2706359"
  },
  {
    "text": "only models these models only have the first part of the encoder decoder",
    "start": "2706359",
    "end": "2711819"
  },
  {
    "text": "architecture so they take a sequence of text like the sentence I'm traveling to Oslo and then they project that into",
    "start": "2711819",
    "end": "2718839"
  },
  {
    "text": "some mathematical space and this is useful for example if you just want to take a piece of text and you say want to",
    "start": "2718839",
    "end": "2725319"
  },
  {
    "text": "classify what is the sentiment that's expressed in this text or what is the topic that is being talked about",
    "start": "2725319",
    "end": "2731740"
  },
  {
    "text": "the other family and probably more famous One is the family of decoder only models so these are the models that led",
    "start": "2731740",
    "end": "2738280"
  },
  {
    "text": "to chat GPT and these are the models where you kind of give it a prompt and then it just continues generating the",
    "start": "2738280",
    "end": "2745180"
  },
  {
    "text": "most likely sequence of text that would come after that prompt so that's that's",
    "start": "2745180",
    "end": "2750640"
  },
  {
    "text": "um that's basically what GPT is stands for generative pre-trained Transformer and that's kind of the basis of most",
    "start": "2750640",
    "end": "2757960"
  },
  {
    "text": "state-of-the-art text generation models today and then there are of course the models that are both encoder and decoder",
    "start": "2757960",
    "end": "2765040"
  },
  {
    "text": "and these are mostly used for sequence to sequence tasks which brings us back",
    "start": "2765040",
    "end": "2770079"
  },
  {
    "text": "to our original question that we were trying to answer here before we went on this detour is whether we can use this",
    "start": "2770079",
    "end": "2776700"
  },
  {
    "text": "encoder decoder architecture to not only translate between Pairs of natural",
    "start": "2776700",
    "end": "2782079"
  },
  {
    "text": "languages but to also translate between source code and assembly",
    "start": "2782079",
    "end": "2787900"
  },
  {
    "text": "so I've did a deep dive into the academic literature to try and see if anyone had actually done like a a worthy",
    "start": "2787900",
    "end": "2796660"
  },
  {
    "text": "approach to this and I found a few papers not going very far back because this Transformer technology is not very",
    "start": "2796660",
    "end": "2803619"
  },
  {
    "text": "old so we can't really expect to kind of find papers from the 90s but there were",
    "start": "2803619",
    "end": "2808780"
  },
  {
    "text": "a few papers that made attempts at using neural networks to decompile assembly",
    "start": "2808780",
    "end": "2813880"
  },
  {
    "text": "code to C um the thing that was a little bit problematic about all of these papers",
    "start": "2813880",
    "end": "2819160"
  },
  {
    "start": "2817000",
    "end": "2882000"
  },
  {
    "text": "was that a lot of the solutions proposed required a lot of pre-processing of the",
    "start": "2819160",
    "end": "2824740"
  },
  {
    "text": "source code data so if you remember if we want to try and construct a decompiler what we really need is a",
    "start": "2824740",
    "end": "2830800"
  },
  {
    "text": "collection of a lot of source code function Snippets and their corresponding assembly Snippets and",
    "start": "2830800",
    "end": "2836619"
  },
  {
    "text": "ideally you wouldn't have to do a lot of pre-processing but most of these papers kind of achieved good results by",
    "start": "2836619",
    "end": "2843040"
  },
  {
    "text": "pre-processing the source code data for example by generating abstract syntax trees by doing other pre-processing",
    "start": "2843040",
    "end": "2849280"
  },
  {
    "text": "steps and to me this kind of slightly defeated the point of trying to build a machine",
    "start": "2849280",
    "end": "2855700"
  },
  {
    "text": "learning based decompiler because what we've done just now is we've taken the",
    "start": "2855700",
    "end": "2861040"
  },
  {
    "text": "problem of kind of handcrafting rules or handcrafting different kinds of pattern mappings from traditional decompilers",
    "start": "2861040",
    "end": "2868119"
  },
  {
    "text": "like gidra and ML and we've like we've just reintroduced the same problem back into the machine learning approach so",
    "start": "2868119",
    "end": "2874000"
  },
  {
    "text": "hopefully there could be something that wouldn't require so much hand crafting that could be more automated or maybe",
    "start": "2874000",
    "end": "2880900"
  },
  {
    "text": "this is utopian thinking but a recent paper that was actually just published in",
    "start": "2880900",
    "end": "2887680"
  },
  {
    "text": "at the end of last year does exactly this so it takes the question of what if",
    "start": "2887680",
    "end": "2894520"
  },
  {
    "text": "we don't do any pre-processing what if we just say you know what assembly is just some special form of text and",
    "start": "2894520",
    "end": "2900940"
  },
  {
    "text": "source code is another form of text and they're just text and if we treat them as that and we just use whatever off the",
    "start": "2900940",
    "end": "2908260"
  },
  {
    "text": "shelf language model architectures are already that already exist how far can",
    "start": "2908260",
    "end": "2913660"
  },
  {
    "text": "we get like what is how far can we get in trying to actually create a model that takes assembly code and then spits",
    "start": "2913660",
    "end": "2921040"
  },
  {
    "text": "out High Level C code so they did a really interesting experiment where they basically tried to",
    "start": "2921040",
    "end": "2927579"
  },
  {
    "text": "learn a neural machine translation model to decompile assembly code to C assembly",
    "start": "2927579",
    "end": "2934839"
  },
  {
    "text": "code to Fortran assembly code to ocamel and assembly code to go this is kind of a very I guess new development because I",
    "start": "2934839",
    "end": "2942160"
  },
  {
    "text": "haven't seen the compilers for for Fortran for example or go before",
    "start": "2942160",
    "end": "2947740"
  },
  {
    "start": "2947000",
    "end": "3124000"
  },
  {
    "text": "so how did they do this so as mentioned before they kind of Applied the three-step procedure for for generating",
    "start": "2947740",
    "end": "2955119"
  },
  {
    "text": "a machine learning model so first they constructed the data set right so they needed a lot of code Snippets that they",
    "start": "2955119",
    "end": "2961060"
  },
  {
    "text": "could decompile that they could compile into assembly and those would kind of be used as language a and language B in",
    "start": "2961060",
    "end": "2967839"
  },
  {
    "text": "this neural machine translation model if you will so they basically scraped a bunch of competitive programming",
    "start": "2967839",
    "end": "2973920"
  },
  {
    "text": "repositories that are public such as project Euler those code Snippets there are usually fairly self-contained and",
    "start": "2973920",
    "end": "2980560"
  },
  {
    "text": "don't have a lot of external Library calls which kind of makes them ideal to study this kind of problem so that's how",
    "start": "2980560",
    "end": "2987460"
  },
  {
    "text": "they they acquired the data then they took a very basic encoder decoder model",
    "start": "2987460",
    "end": "2993400"
  },
  {
    "text": "very similar to the one I kind of showed on a high level for translating between",
    "start": "2993400",
    "end": "2998680"
  },
  {
    "text": "Swedish and English and they trained it on this data just treating both the",
    "start": "2998680",
    "end": "3004200"
  },
  {
    "text": "source code and the assembly code AS text so no special Transformations were done and then they evaluated the result",
    "start": "3004200",
    "end": "3011819"
  },
  {
    "text": "by setting aside a set of source code and",
    "start": "3011819",
    "end": "3017640"
  },
  {
    "text": "assembly code Snippets that the model hadn't seen before then asking the model to take the assembly code decompile it",
    "start": "3017640",
    "end": "3024420"
  },
  {
    "text": "and then compare the model's output with what they knew was the correct output and they measured the edit distance",
    "start": "3024420",
    "end": "3030540"
  },
  {
    "text": "between the prediction and the true source to figure out how many mistakes the model made",
    "start": "3030540",
    "end": "3036420"
  },
  {
    "text": "so what was the result so this is a this is an example of",
    "start": "3036420",
    "end": "3041640"
  },
  {
    "text": "of what the ground truth is here on the left so this is the original C function",
    "start": "3041640",
    "end": "3047280"
  },
  {
    "text": "that someone wrote and then this is what the model predicted from the assembly code that we get when we compile this",
    "start": "3047280",
    "end": "3054000"
  },
  {
    "text": "function on the left so yeah it's definitely not like perfect and there's",
    "start": "3054000",
    "end": "3059280"
  },
  {
    "text": "uh there is like the edit distance is quite big so they what they discovered",
    "start": "3059280",
    "end": "3064800"
  },
  {
    "text": "is that on average almost every other token has to be corrected in some way but um they also wrote that there were",
    "start": "3064800",
    "end": "3073319"
  },
  {
    "text": "some Snippets of code where the translation was almost perfect and then other ones where it wasn't so for future",
    "start": "3073319",
    "end": "3079920"
  },
  {
    "text": "work it would be interesting to see um what are the Snippets of code where the decompilation using neural machine",
    "start": "3079920",
    "end": "3086520"
  },
  {
    "text": "translation is almost perfect and maybe while we're not there yet where we could have",
    "start": "3086520",
    "end": "3093180"
  },
  {
    "text": "a fully featured commercial machine learning based decompiler perhaps we could have like a machine learning based",
    "start": "3093180",
    "end": "3099900"
  },
  {
    "text": "decompiler assistant that could maybe suggest to you what a potential decompilation is and then a human who is",
    "start": "3099900",
    "end": "3106740"
  },
  {
    "text": "analyzing this code could then kind of correct it or or suggest Corrections",
    "start": "3106740",
    "end": "3112440"
  },
  {
    "text": "so basically that's where we are in in building a machine learning based decompiler so we're not there yet but I",
    "start": "3112440",
    "end": "3119940"
  },
  {
    "text": "think very soon we might have some sort of human in the loop solution and yeah okay you made it to the end",
    "start": "3119940",
    "end": "3127440"
  },
  {
    "start": "3124000",
    "end": "3176000"
  },
  {
    "text": "it's uh half past six so congratulations you are still most of you are still",
    "start": "3127440",
    "end": "3132540"
  },
  {
    "text": "awake um what did we cover during this presentation we looked at chat GPT why",
    "start": "3132540",
    "end": "3138780"
  },
  {
    "text": "you should be maybe a bit suspicious of things like co-pilot how your job is maybe going to be affected by co-pilot",
    "start": "3138780",
    "end": "3145079"
  },
  {
    "text": "we took a bit of a look at how to build machine learning models like on a very uh very high level toy example and then",
    "start": "3145079",
    "end": "3154079"
  },
  {
    "text": "finally we looked at whether it's possible to even try and attempt to build a decompiler using machine",
    "start": "3154079",
    "end": "3160260"
  },
  {
    "text": "learning methods and you know kind of why it might work and it might not work and as we've seen from some research it",
    "start": "3160260",
    "end": "3167099"
  },
  {
    "text": "kind of does work though not perfectly which is maybe what you like want your decompiler to do you you don't want to",
    "start": "3167099",
    "end": "3174000"
  },
  {
    "text": "spend your whole time correcting its output so this is thank you for me any questions comments or suggestions you",
    "start": "3174000",
    "end": "3181200"
  },
  {
    "start": "3176000",
    "end": "3256000"
  },
  {
    "text": "can either ask now or yeah you can reach me on Twitter or LinkedIn",
    "start": "3181200",
    "end": "3187980"
  },
  {
    "text": "but yes",
    "start": "3187980",
    "end": "3191180"
  },
  {
    "text": "so the question is is there any work on translating from one language to another",
    "start": "3200760",
    "end": "3206220"
  },
  {
    "text": "directly okay so the question is if there's any machine learning work on transpiling",
    "start": "3206220",
    "end": "3211559"
  },
  {
    "text": "from one high level source code language to another and yes there is there was a recent Facebook paper that I don't",
    "start": "3211559",
    "end": "3219300"
  },
  {
    "text": "remember which language pairs they used but in those cases I think the performance is much better than in the",
    "start": "3219300",
    "end": "3225119"
  },
  {
    "text": "case of decompiling so yeah that work does exist I'm not sure if it's like commercially viable yet but the research",
    "start": "3225119",
    "end": "3231480"
  },
  {
    "text": "is there okay",
    "start": "3231480",
    "end": "3237119"
  },
  {
    "text": "I think we can call it a day no also sorry someone else have a",
    "start": "3237119",
    "end": "3243900"
  },
  {
    "text": "question no okay",
    "start": "3243900",
    "end": "3249319"
  },
  {
    "text": "[Applause]",
    "start": "3249810",
    "end": "3257480"
  }
]