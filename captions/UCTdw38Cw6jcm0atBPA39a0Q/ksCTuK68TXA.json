[
  {
    "text": "hello everyone thank you for coming my name is arancarva today i will show you",
    "start": "6240",
    "end": "13840"
  },
  {
    "text": "some code that helps manage multi-tenant databases when",
    "start": "14160",
    "end": "19279"
  },
  {
    "text": "you're writing uh applications that use entity framework",
    "start": "19279",
    "end": "24400"
  },
  {
    "text": "the trouble with the multi-tenant databases is that today most applications tend to",
    "start": "24400",
    "end": "32238"
  },
  {
    "text": "implement multi-tenancy in a single database because that simplifies management deployment and many other",
    "start": "32239",
    "end": "39040"
  },
  {
    "text": "things but unfortunately that opens up a lot of space a lot of surface",
    "start": "39040",
    "end": "46000"
  },
  {
    "text": "for attacks and incidents unintended features of the application when one",
    "start": "46000",
    "end": "52559"
  },
  {
    "text": "tenant accidentally can see or even modify somebody else's",
    "start": "52559",
    "end": "57760"
  },
  {
    "text": "and that that that is a tragic for multi-tenant applications",
    "start": "57760",
    "end": "64878"
  },
  {
    "text": "so we will talk about how we can protect how can we can secure",
    "start": "64879",
    "end": "74960"
  },
  {
    "text": "database infrastructure layer in three ways one will be manual so to say",
    "start": "75200",
    "end": "83200"
  },
  {
    "text": "when you are trying to write code which is secure the other way will be using uh global",
    "start": "83200",
    "end": "89360"
  },
  {
    "text": "query filters from entity framework and the third and most complex",
    "start": "89360",
    "end": "95200"
  },
  {
    "text": "method will apply a custom wrapper around entity framework classes db",
    "start": "95200",
    "end": "101759"
  },
  {
    "text": "context which will enforce security models",
    "start": "101759",
    "end": "108720"
  },
  {
    "text": "and you will see the idea is to in the end turn security models into declarative",
    "start": "108720",
    "end": "116799"
  },
  {
    "text": "coding styles so that you merely say which kind of security a certain",
    "start": "116799",
    "end": "124079"
  },
  {
    "text": "page or or certain class requires and that will be injected for you",
    "start": "124079",
    "end": "130560"
  },
  {
    "text": "there will be plenty of code and you can",
    "start": "130560",
    "end": "135440"
  },
  {
    "text": "you can download code from github",
    "start": "135599",
    "end": "140560"
  },
  {
    "text": "there are four stages four separate solutions there and you will be able to track how",
    "start": "140959",
    "end": "147840"
  },
  {
    "text": "each of the uh security models security implementations uh copes with",
    "start": "147840",
    "end": "154959"
  },
  {
    "text": "the problems in this application so the application",
    "start": "154959",
    "end": "162080"
  },
  {
    "text": "the rest of the of the presentation will be in visual studio those were all the slides i prepared for",
    "start": "167120",
    "end": "172800"
  },
  {
    "text": "you there will be some products",
    "start": "172800",
    "end": "178080"
  },
  {
    "text": "in this model these products will be the item we are",
    "start": "178080",
    "end": "185440"
  },
  {
    "text": "concerned about and there will be many attacks and backs related to securing access to",
    "start": "185440",
    "end": "191120"
  },
  {
    "text": "products that's the only the only model there is in this application and that",
    "start": "191120",
    "end": "197760"
  },
  {
    "text": "will be sufficient to show you now all the aspects i wanted to talk about when talking about security",
    "start": "197760",
    "end": "204640"
  },
  {
    "text": "every product is owned by somebody there is no auto increment id foreign",
    "start": "204640",
    "end": "210879"
  },
  {
    "text": "key to to the user who owns the product for several reasons one of",
    "start": "210879",
    "end": "218799"
  },
  {
    "text": "the reasons being that we don't know where that user is stored if you look at",
    "start": "218799",
    "end": "228319"
  },
  {
    "text": "code you will see that authentication contains user and content namespace contains",
    "start": "229360",
    "end": "236319"
  },
  {
    "text": "product i did it on purpose because i want to show you that",
    "start": "236319",
    "end": "242080"
  },
  {
    "text": "users might be stored in a different system in a different uh database schema which might or might",
    "start": "242080",
    "end": "248640"
  },
  {
    "text": "not even be in this database so i'm referencing users by some unique key which is assigned to",
    "start": "248640",
    "end": "255840"
  },
  {
    "text": "every user on registration and i'm passing that string to",
    "start": "255840",
    "end": "262240"
  },
  {
    "text": "all all those who are concerned products of course are constant but as i am in parallel to",
    "start": "262240",
    "end": "272479"
  },
  {
    "text": "to designing databases i'm also an object-oriented programmer i don't like to send strings around i have",
    "start": "272479",
    "end": "279280"
  },
  {
    "text": "introduced some class named user ref that is the object with which uniquely identifies a user in this",
    "start": "279280",
    "end": "286880"
  },
  {
    "text": "object model uh this string about is required by entity framework to to store",
    "start": "286880",
    "end": "294880"
  },
  {
    "text": "products and this is the user class",
    "start": "294880",
    "end": "300000"
  },
  {
    "text": "it also exposes the key which is string to for for the",
    "start": "300000",
    "end": "306960"
  },
  {
    "text": "reason of storing users in the database in entity framework but again it is initialized with with a strongly typed user reference and",
    "start": "306960",
    "end": "315440"
  },
  {
    "text": "this is that user reference class which only wraps around the string so i have set up",
    "start": "315440",
    "end": "324479"
  },
  {
    "text": "the stage and i'll run the application",
    "start": "324479",
    "end": "332400"
  },
  {
    "text": "okay here it is so that you can see what it what it's doing if i log in as me",
    "start": "334160",
    "end": "342880"
  },
  {
    "text": "and i click products i will see the table containing products i'll be able to see",
    "start": "342880",
    "end": "349840"
  },
  {
    "text": "any of them or to delete them i can also insert new ones the problem at this stage it there is no",
    "start": "349840",
    "end": "358319"
  },
  {
    "text": "there is no multi-tenancy implemented at all these three items really belong to me",
    "start": "358319",
    "end": "365120"
  },
  {
    "text": "and the other three items belong to my neighbor another user so i don't have a",
    "start": "365120",
    "end": "373199"
  },
  {
    "text": "labor i don't have multitask implemented at all you see both of them can see the entire",
    "start": "373199",
    "end": "378720"
  },
  {
    "text": "database that that's not what we normally want so now from this point on i will",
    "start": "378720",
    "end": "384160"
  },
  {
    "text": "uh first try to implement any kind of",
    "start": "384160",
    "end": "391680"
  },
  {
    "text": "of uh access control so that i can manage to show to display only those",
    "start": "391680",
    "end": "399919"
  },
  {
    "text": "items to the login user which that user possesses",
    "start": "399919",
    "end": "405360"
  },
  {
    "text": "before that i will add some more html so that you can see what's",
    "start": "406800",
    "end": "411919"
  },
  {
    "text": "happening in the database when this application is executing i will run it again and look when i",
    "start": "411919",
    "end": "420560"
  },
  {
    "text": "log in we will track queries made to made by entity framework",
    "start": "420560",
    "end": "428960"
  },
  {
    "text": "here you will see excerpts of the log this is the query generated to",
    "start": "428960",
    "end": "435120"
  },
  {
    "text": "authenticate me i'm not using passwords here because it's not a point to show you how you can",
    "start": "435120",
    "end": "440880"
  },
  {
    "text": "authenticate this application is using only uh cookie authentication but again that's not",
    "start": "440880",
    "end": "446800"
  },
  {
    "text": "relevant this this presentation is not about authentication as i presume that authentication was done",
    "start": "446800",
    "end": "454319"
  },
  {
    "text": "and that requests were made to the infrastructure layer that is where my problems begin",
    "start": "454319",
    "end": "459680"
  },
  {
    "text": "in this in this presentation so here is the login uh then content context re remember",
    "start": "459680",
    "end": "466879"
  },
  {
    "text": "content is that name space where products are don't mix content and contexts context",
    "start": "466879",
    "end": "474720"
  },
  {
    "text": "i'm not happy with choice of names i made here but that's how it is content is what we are",
    "start": "474720",
    "end": "481360"
  },
  {
    "text": "protecting securing so the context will be model will be",
    "start": "481360",
    "end": "487599"
  },
  {
    "text": "created and then comes the select query which lacks where clause and technically when you",
    "start": "487599",
    "end": "494720"
  },
  {
    "text": "are securing data you are securing them by supplying a where clause which is",
    "start": "494720",
    "end": "502639"
  },
  {
    "text": "narrowing down the query so that you can only access those",
    "start": "502639",
    "end": "508720"
  },
  {
    "text": "things that you are allowed and what what you are allowed that is what where clause will tell",
    "start": "508720",
    "end": "515440"
  },
  {
    "text": "but that's not all there is one tragic circumstance here",
    "start": "515440",
    "end": "523120"
  },
  {
    "text": "if i go to details of one product there is there is a query where id equals the",
    "start": "523120",
    "end": "530720"
  },
  {
    "text": "parameter technically id is taken from the url i have done the worst possible thing",
    "start": "530720",
    "end": "537279"
  },
  {
    "text": "here by uh using auto increment id in url don't do that",
    "start": "537279",
    "end": "545440"
  },
  {
    "text": "that is uh naive on several levels one of only one of them being security",
    "start": "545440",
    "end": "551200"
  },
  {
    "text": "if you make okay ids you will always have to put some",
    "start": "551200",
    "end": "557839"
  },
  {
    "text": "reference here or otherwise you won't be able to find the object for which you need to show the details",
    "start": "557839",
    "end": "563279"
  },
  {
    "text": "that is that makes sense and since that is publicly visible",
    "start": "563279",
    "end": "569519"
  },
  {
    "text": "we cannot tell that id or reference is a secret it's not a secret",
    "start": "569519",
    "end": "577519"
  },
  {
    "text": "it is semi-public you don't have to walk around and tell others what",
    "start": "577519",
    "end": "582800"
  },
  {
    "text": "what your ideas are but as a programmer you cannot assume that nobody will be able to guess",
    "start": "582800",
    "end": "590640"
  },
  {
    "text": "ideas of somebody else they will they will find the pattern and they will apply it",
    "start": "590640",
    "end": "595760"
  },
  {
    "text": "hackers attackers will apply patterns to poke into your website by guessing",
    "start": "595760",
    "end": "602079"
  },
  {
    "text": "ideas among other techniques and while you cannot defend from that",
    "start": "602079",
    "end": "609920"
  },
  {
    "text": "you should not make their job trivial by using auto increment in ids and urls that's",
    "start": "609920",
    "end": "618160"
  },
  {
    "text": "simply not not the best idea there is one funny story that i wanted",
    "start": "618160",
    "end": "624640"
  },
  {
    "text": "to share with you many many years ago i was on a on a project where we",
    "start": "624640",
    "end": "630079"
  },
  {
    "text": "faced the need to put some some references in url",
    "start": "630079",
    "end": "637760"
  },
  {
    "text": "and we immediately dismissed auto increment id on on the grounds of industrial",
    "start": "637760",
    "end": "644839"
  },
  {
    "text": "espionage we figured first that our competition",
    "start": "644839",
    "end": "650880"
  },
  {
    "text": "will know precisely how large our business is if we put auto increment ids in urls",
    "start": "650880",
    "end": "659040"
  },
  {
    "text": "it's very simple the competition can register in regularly in regular intervals",
    "start": "659040",
    "end": "665279"
  },
  {
    "text": "register new users like once a week and simply count how many ids you consumed",
    "start": "665279",
    "end": "672480"
  },
  {
    "text": "for users and therefore they will know immediately how many new users you are acquiring every week",
    "start": "672480",
    "end": "678320"
  },
  {
    "text": "and they could make one single purchase every week and see the auto increment id of the",
    "start": "678320",
    "end": "684399"
  },
  {
    "text": "receipt and see how many receipts you're issuing every week and even by looking into details",
    "start": "684399",
    "end": "691600"
  },
  {
    "text": "and finding out uh ids of the legs inside the receipt they",
    "start": "691600",
    "end": "697279"
  },
  {
    "text": "could even see how many items you have sold so those are the",
    "start": "697279",
    "end": "703040"
  },
  {
    "text": "those are parts of the security theory which you should also keep in",
    "start": "703040",
    "end": "709920"
  },
  {
    "text": "mind but again it's not about securing ids because sooner or later attackers",
    "start": "709920",
    "end": "716959"
  },
  {
    "text": "will know them it is about securing the system here",
    "start": "716959",
    "end": "722079"
  },
  {
    "text": "in the where clause and forgetting to do that you will",
    "start": "722079",
    "end": "729040"
  },
  {
    "text": "you will open up your database to people who are not who should never see",
    "start": "729040",
    "end": "734639"
  },
  {
    "text": "this object if you allowed if your infrastructure",
    "start": "734639",
    "end": "739680"
  },
  {
    "text": "layer allowed where clause by id with no and plus some other restriction",
    "start": "739680",
    "end": "749600"
  },
  {
    "text": "and you will see that happen in a second because here is that page which is",
    "start": "750240",
    "end": "757680"
  },
  {
    "text": "listing products and this is how i'm getting to products",
    "start": "757680",
    "end": "763680"
  },
  {
    "text": "i'm doing nothing i'm just taking the db context which was injected and asking for products so there's",
    "start": "763680",
    "end": "770320"
  },
  {
    "text": "obviously no where clause here and",
    "start": "770320",
    "end": "775519"
  },
  {
    "text": "what many programmers first",
    "start": "775519",
    "end": "780560"
  },
  {
    "text": "attempt is to add the where clause so are we safe now",
    "start": "780720",
    "end": "786880"
  },
  {
    "text": "i'm asking i'm only listing products where product owner key equals authenticated user",
    "start": "786880",
    "end": "794959"
  },
  {
    "text": "and the value picked from that object this get authenticated user is just a",
    "start": "794959",
    "end": "802399"
  },
  {
    "text": "an extension method nothing special i made this extension method to operate",
    "start": "802399",
    "end": "809360"
  },
  {
    "text": "on http context which is very useful in pages",
    "start": "809360",
    "end": "815600"
  },
  {
    "text": "and it simply looks for the name identifier claim",
    "start": "815600",
    "end": "822079"
  },
  {
    "text": "and if it finds it it will wrap it in so inside my strongly typed user ref otherwise it",
    "start": "822240",
    "end": "828000"
  },
  {
    "text": "will go with the an empty user ref which will when used inside a",
    "start": "828000",
    "end": "833760"
  },
  {
    "text": "where clause cause that no product will show up if nobody's for some reason",
    "start": "833760",
    "end": "840560"
  },
  {
    "text": "logged in which reminds me to tell you",
    "start": "840560",
    "end": "846560"
  },
  {
    "text": "when is this method going this extension method going to be invoked",
    "start": "847199",
    "end": "852320"
  },
  {
    "text": "well obviously from pages that have access to http context so why this where this branch why am i",
    "start": "852320",
    "end": "860800"
  },
  {
    "text": "plugging the else branch when there is no claim such as this",
    "start": "860800",
    "end": "866880"
  },
  {
    "text": "because while my entire application is built to never allow access to pages",
    "start": "867120",
    "end": "875279"
  },
  {
    "text": "where authentication was not performed to the end you can never trust yourself as",
    "start": "875279",
    "end": "881040"
  },
  {
    "text": "programmer sometimes you will forget to mark some pages",
    "start": "881040",
    "end": "886399"
  },
  {
    "text": "as requesting authentication and you will get to this call from an",
    "start": "886399",
    "end": "893519"
  },
  {
    "text": "unguarded place you can throw there or you can",
    "start": "893519",
    "end": "901519"
  },
  {
    "text": "you can do many things what i did was to ensure that no",
    "start": "901519",
    "end": "908079"
  },
  {
    "text": "product will ever be found in this where clause if there is no",
    "start": "908079",
    "end": "914480"
  },
  {
    "text": "name identifier claim and by doing that at least i have prevented tons of data",
    "start": "914480",
    "end": "922560"
  },
  {
    "text": "pouring into the ui unprotected do these",
    "start": "922560",
    "end": "927760"
  },
  {
    "text": "small things these small protections everywhere in your code that idea is",
    "start": "927760",
    "end": "934399"
  },
  {
    "text": "called a defense defense in depth the point is that you never know who called you",
    "start": "934399",
    "end": "942160"
  },
  {
    "text": "even if that is your own code because when this get is executed",
    "start": "942160",
    "end": "949440"
  },
  {
    "text": "you cannot tell that everything that was intended to happen has happened",
    "start": "949440",
    "end": "955279"
  },
  {
    "text": "indeed before this call maybe you held a bug upstream and you got into this uh",
    "start": "955279",
    "end": "962800"
  },
  {
    "text": "only get action accidentally so the defense in depth is trying to",
    "start": "962800",
    "end": "970079"
  },
  {
    "text": "prevent any bridge on any level on any layer you will protect yourself everywhere and",
    "start": "970079",
    "end": "977279"
  },
  {
    "text": "so i did that with this where clause and i think i might be able to",
    "start": "977279",
    "end": "984079"
  },
  {
    "text": "start this application again and enjoy uh enjoyed being secure this time",
    "start": "984079",
    "end": "990880"
  },
  {
    "text": "can i oh yes there are only three items here those are my items and",
    "start": "990880",
    "end": "998720"
  },
  {
    "text": "that is what this where clause is telling their owner key is the the parameter and that parameter",
    "start": "998720",
    "end": "1006720"
  },
  {
    "text": "will be taken from http context and that will be me",
    "start": "1006720",
    "end": "1011920"
  },
  {
    "text": "however the problem remains that i am still selecting details by",
    "start": "1012720",
    "end": "1020240"
  },
  {
    "text": "id someone might say that the problem is in the ui why would",
    "start": "1020240",
    "end": "1026160"
  },
  {
    "text": "the ui show a url to something that doesn't build to some id that doesn't belong to",
    "start": "1026160",
    "end": "1031678"
  },
  {
    "text": "me but the problem is more uh is larger because it's not only what i'm",
    "start": "1031679",
    "end": "1040558"
  },
  {
    "text": "showing in the ui there will be people who will forge",
    "start": "1040559",
    "end": "1045678"
  },
  {
    "text": "requests here is this uh row with one",
    "start": "1045679",
    "end": "1051280"
  },
  {
    "text": "i'll call it hacked now i can forge the request and and say why not delete something okay if",
    "start": "1051280",
    "end": "1057919"
  },
  {
    "text": "there is uh id one maybe there is id six and i can even check it with uh url to",
    "start": "1057919",
    "end": "1064480"
  },
  {
    "text": "see the details can i see the details of id6",
    "start": "1064480",
    "end": "1069760"
  },
  {
    "text": "let's see yes i can because my application was only selected by id",
    "start": "1069760",
    "end": "1075760"
  },
  {
    "text": "and that id did exist and i forgot uh to add another where clause to this",
    "start": "1075760",
    "end": "1084559"
  },
  {
    "text": "query i simply forgot and that will have a tragic",
    "start": "1084559",
    "end": "1090960"
  },
  {
    "text": "result when i click that bin here is what will happen",
    "start": "1090960",
    "end": "1098799"
  },
  {
    "text": "the application will select by id because it was told so and since it will find that object it",
    "start": "1099120",
    "end": "1106880"
  },
  {
    "text": "will delete it again by id both queries are both",
    "start": "1106880",
    "end": "1115039"
  },
  {
    "text": "statements are making the same mistake they are only accessing database by id which is",
    "start": "1115039",
    "end": "1120640"
  },
  {
    "text": "totally unsecure and then it will happily show me my products but the the problem has already appeared",
    "start": "1120640",
    "end": "1129360"
  },
  {
    "text": "the verb and neighbor comes back there's the third item is missing so i",
    "start": "1129360",
    "end": "1135679"
  },
  {
    "text": "have successfully deleted somebody else's data and that shows us",
    "start": "1135679",
    "end": "1142559"
  },
  {
    "text": "that this approach where you add their clauses everywhere in your",
    "start": "1142559",
    "end": "1148480"
  },
  {
    "text": "application is not such a bright idea for a very simple like",
    "start": "1148480",
    "end": "1154080"
  },
  {
    "text": "for a very simple reason because you will forget to do it in",
    "start": "1154080",
    "end": "1159679"
  },
  {
    "text": "every single place in an application which has thousands and thousands of such methods",
    "start": "1159679",
    "end": "1164880"
  },
  {
    "text": "a couple of them will remain unprotected and guess what somebody will find them",
    "start": "1164880",
    "end": "1170400"
  },
  {
    "text": "so i will advise against doing this",
    "start": "1170400",
    "end": "1175919"
  },
  {
    "text": "don't protect your data like this",
    "start": "1176000",
    "end": "1180400"
  },
  {
    "text": "but apply something smarter something that will come with a guarantee that it",
    "start": "1181039",
    "end": "1188960"
  },
  {
    "text": "will happen no matter what you did",
    "start": "1188960",
    "end": "1193840"
  },
  {
    "text": "entity framework is coming with a with an implementation of so-called",
    "start": "1195280",
    "end": "1200799"
  },
  {
    "text": "global query filters what was the where clause i put here",
    "start": "1200799",
    "end": "1206320"
  },
  {
    "text": "you can put that where clause right in the middle of your db context so that the db",
    "start": "1206320",
    "end": "1212720"
  },
  {
    "text": "context is forbidden to access any data",
    "start": "1212720",
    "end": "1218480"
  },
  {
    "text": "that do not belong to you effectively it will contain that where clause so let me show you how",
    "start": "1218480",
    "end": "1224640"
  },
  {
    "text": "that can be done to make to to separate concerns",
    "start": "1224640",
    "end": "1232080"
  },
  {
    "text": "in this application i have prepared a small class called tenancy provider which is wrapping",
    "start": "1232080",
    "end": "1239120"
  },
  {
    "text": "con http context accessor and simply calling that extension method on it",
    "start": "1239120",
    "end": "1246240"
  },
  {
    "text": "so basically if you injected this class you could depend on this class instead of",
    "start": "1246240",
    "end": "1253200"
  },
  {
    "text": "http context accessor and still you would be able to get grasp of the user ref",
    "start": "1253200",
    "end": "1258400"
  },
  {
    "text": "which represents currently authenticated user and then you get to the db context here",
    "start": "1258400",
    "end": "1265600"
  },
  {
    "text": "is the db context which is exposing products in this db context i can inject currency",
    "start": "1265600",
    "end": "1273280"
  },
  {
    "text": "provider but listen there is a subtle game going",
    "start": "1273280",
    "end": "1279919"
  },
  {
    "text": "on about the lifetimes of objects tenancy provider",
    "start": "1279919",
    "end": "1285600"
  },
  {
    "text": "is injected as a singleton because it is stateless i i",
    "start": "1285600",
    "end": "1291679"
  },
  {
    "text": "had no reason to make it to let the the system",
    "start": "1291679",
    "end": "1297360"
  },
  {
    "text": "instantiate it multiple times however when working with multitalent",
    "start": "1297360",
    "end": "1303360"
  },
  {
    "text": "databases whenever you receive a request over the web there might be a different tenant",
    "start": "1303360",
    "end": "1311600"
  },
  {
    "text": "authenticated right now so you need a new tenant every db context is instantiated",
    "start": "1311600",
    "end": "1321360"
  },
  {
    "text": "but there is a terrible",
    "start": "1321360",
    "end": "1326559"
  },
  {
    "text": "issue there on model creating that is the place where we will add that",
    "start": "1327679",
    "end": "1334480"
  },
  {
    "text": "where clause on model creating is executed once per application",
    "start": "1334480",
    "end": "1341280"
  },
  {
    "text": "and that is because of performance this this method is heavy can be heavy it's complicated and",
    "start": "1342240",
    "end": "1349679"
  },
  {
    "text": "and therefore the model it creates will be cached and reused and that will affect",
    "start": "1349679",
    "end": "1355280"
  },
  {
    "text": "the where clause which will also be cached if you want to inject dynamic where",
    "start": "1355280",
    "end": "1361120"
  },
  {
    "text": "clause you need to create a property on the db context",
    "start": "1361120",
    "end": "1366880"
  },
  {
    "text": "which might change every time the db context is instantiated",
    "start": "1366880",
    "end": "1372080"
  },
  {
    "text": "and you do the easy way to manage that uh property",
    "start": "1372080",
    "end": "1379200"
  },
  {
    "text": "is to set it in the constructor and you would normally make db context short living object you",
    "start": "1379200",
    "end": "1385600"
  },
  {
    "text": "would create new db context with every web request and you can use tenancy provider to tell",
    "start": "1385600",
    "end": "1392640"
  },
  {
    "text": "you who is authenticated right now and when db context is instantiated this property",
    "start": "1392640",
    "end": "1400240"
  },
  {
    "text": "authenticated user key will be will have the value of the key to the user",
    "start": "1400240",
    "end": "1407919"
  },
  {
    "text": "who is authenticated right now and it might be different with every request and so",
    "start": "1407919",
    "end": "1415520"
  },
  {
    "text": "we get to the on model creating and we add global query filter it is",
    "start": "1415520",
    "end": "1422480"
  },
  {
    "text": "done by using this uh hash query query filter on entity",
    "start": "1422480",
    "end": "1428840"
  },
  {
    "text": "descriptor and giving it an expression so",
    "start": "1428840",
    "end": "1435039"
  },
  {
    "text": "we want a product its owner key property to be equal or field in the database",
    "start": "1435039",
    "end": "1441520"
  },
  {
    "text": "to be equal to what this db context thinks right now",
    "start": "1441520",
    "end": "1448320"
  },
  {
    "text": "and that is all let's run the application",
    "start": "1448320",
    "end": "1458480"
  },
  {
    "text": "if i log in as me i see products there will be only three",
    "start": "1458480",
    "end": "1464640"
  },
  {
    "text": "of them even though",
    "start": "1464640",
    "end": "1468158"
  },
  {
    "text": "the page not this one the page did nothing to select them",
    "start": "1470799",
    "end": "1477679"
  },
  {
    "text": "where is the page okay page did nothing to filter them",
    "start": "1477679",
    "end": "1483120"
  },
  {
    "text": "it was",
    "start": "1483120",
    "end": "1487840"
  },
  {
    "text": "it was the entity framework who did it for us here logging in okay",
    "start": "1488480",
    "end": "1494799"
  },
  {
    "text": "checking my username and then happens on model creating the first and the only",
    "start": "1494799",
    "end": "1499840"
  },
  {
    "text": "time for this db context and when it executes it will include the",
    "start": "1499840",
    "end": "1505679"
  },
  {
    "text": "where clause which i never made in in consuming code it will be",
    "start": "1505679",
    "end": "1510720"
  },
  {
    "text": "set to a parameter here you can see it's telling us the name of the parameter it is the authenticated user",
    "start": "1510720",
    "end": "1518080"
  },
  {
    "text": "key from db context plus if i tried just one second remember on",
    "start": "1518080",
    "end": "1525919"
  },
  {
    "text": "model creating was performed if i click again products there will be no",
    "start": "1525919",
    "end": "1531360"
  },
  {
    "text": "on model creating again so it is executed once",
    "start": "1531360",
    "end": "1537120"
  },
  {
    "text": "if i tried to access okay i can i can access my own",
    "start": "1537279",
    "end": "1544080"
  },
  {
    "text": "uh my own products by id but look at the where clause it also contains where owner key",
    "start": "1544080",
    "end": "1551760"
  },
  {
    "text": "is my key and id equals id and that is secure there's no way for me",
    "start": "1551760",
    "end": "1560400"
  },
  {
    "text": "to see somebody else's data and if i tried to hack the application again to forge the request",
    "start": "1560400",
    "end": "1568000"
  },
  {
    "text": "let's do it let's try it ha",
    "start": "1568000",
    "end": "1575600"
  },
  {
    "text": "i know that that the guy had the id number five and here so i'm",
    "start": "1578240",
    "end": "1586960"
  },
  {
    "text": "changing the requests here there's nothing i couldn't see the product even though",
    "start": "1587039",
    "end": "1592720"
  },
  {
    "text": "the page didn't explode that was my conscious decision not to explode but there's there are no data nothing",
    "start": "1592720",
    "end": "1599279"
  },
  {
    "text": "came out from the database because where clause once again contained where owner",
    "start": "1599279",
    "end": "1604480"
  },
  {
    "text": "equals me and id and since i'm not the owner of this id5",
    "start": "1604480",
    "end": "1611360"
  },
  {
    "text": "i couldn't see anything nothing came back from the database and what is more important this delete",
    "start": "1611360",
    "end": "1619760"
  },
  {
    "text": "is for somebody else's data look what happens here where is again",
    "start": "1619760",
    "end": "1628400"
  },
  {
    "text": "composed of two elements and that returned no object and therefore in between these",
    "start": "1628400",
    "end": "1635039"
  },
  {
    "text": "two statements there is no delete statement because there was nothing to delete",
    "start": "1635039",
    "end": "1641520"
  },
  {
    "text": "again it was my conscious decision not to do anything but i could scream i could explode i could write just to",
    "start": "1641520",
    "end": "1648080"
  },
  {
    "text": "log that somebody tried to delete something that is not accessible you can do anything you want in your",
    "start": "1648080",
    "end": "1653120"
  },
  {
    "text": "application what is the point here is that the infrastructure layer didn't",
    "start": "1653120",
    "end": "1659679"
  },
  {
    "text": "hand me over the object which i'm not owning",
    "start": "1659679",
    "end": "1666320"
  },
  {
    "text": "and this is the regular where clause to show everything i have",
    "start": "1667039",
    "end": "1674240"
  },
  {
    "text": "so that is",
    "start": "1674880",
    "end": "1678559"
  },
  {
    "text": "how global query filters work",
    "start": "1680840",
    "end": "1686720"
  },
  {
    "text": "they are great they have one wonderful feature",
    "start": "1686720",
    "end": "1693520"
  },
  {
    "text": "and that is that they consist of a single line of code and that single line of code affects",
    "start": "1693520",
    "end": "1703039"
  },
  {
    "text": "every query executed through this db context on this model",
    "start": "1703039",
    "end": "1711279"
  },
  {
    "text": "this scale is very good you might have dozens of pages that are showing",
    "start": "1711279",
    "end": "1717520"
  },
  {
    "text": "products in different ways and there will be only one query filter for that",
    "start": "1717520",
    "end": "1723200"
  },
  {
    "text": "so that is great that is one single line of codes to fix it and that is also the doom of this whole",
    "start": "1723200",
    "end": "1730880"
  },
  {
    "text": "idea because this one line of code is placed where it should not be placed it doesn't belong here",
    "start": "1730880",
    "end": "1738880"
  },
  {
    "text": "and you will see that when i tell you the rest of the story",
    "start": "1738880",
    "end": "1744320"
  },
  {
    "text": "products are not the only table i have i have another table called friend connections my customer wanted to",
    "start": "1744320",
    "end": "1752080"
  },
  {
    "text": "let users tick other users as their friends and when i am a friend of somebody else",
    "start": "1752080",
    "end": "1759279"
  },
  {
    "text": "then i can see the products of that somebody else but",
    "start": "1759279",
    "end": "1764480"
  },
  {
    "text": "there is a comma after that saying but i'm not allowed to delete them",
    "start": "1764480",
    "end": "1771919"
  },
  {
    "text": "and you will see that that cannot be done with global query filters so i will add db sept",
    "start": "1771919",
    "end": "1780960"
  },
  {
    "text": "so that it can be used for this content context but i'm i'm not going to",
    "start": "1780960",
    "end": "1786960"
  },
  {
    "text": "use it really i'm only going to query this is the friend connection model",
    "start": "1786960",
    "end": "1792159"
  },
  {
    "text": "it only has two fields in the database owner and his friend or her friend so",
    "start": "1792159",
    "end": "1799279"
  },
  {
    "text": "what happens to the global query filter with these enlarged",
    "start": "1799279",
    "end": "1806840"
  },
  {
    "text": "requirements for one thing we cannot filter by owner anymore because owner is not the only one",
    "start": "1806840",
    "end": "1812960"
  },
  {
    "text": "whose products i might see there is the whole new expression here",
    "start": "1812960",
    "end": "1820720"
  },
  {
    "text": "which will list all user keys whose products are accessible to me so",
    "start": "1820720",
    "end": "1827360"
  },
  {
    "text": "it is obviously me plus friends where",
    "start": "1827360",
    "end": "1832399"
  },
  {
    "text": "where i am the friend i will call this reverse friends in the rest of the",
    "start": "1832399",
    "end": "1837919"
  },
  {
    "text": "demonstration so people whose friend i am and then i will",
    "start": "1837919",
    "end": "1843760"
  },
  {
    "text": "pick their key so that i can see their data and when it comes to",
    "start": "1843760",
    "end": "1850960"
  },
  {
    "text": "the filter it will look a bit differently",
    "start": "1850960",
    "end": "1855440"
  },
  {
    "text": "the owner key of the product must belong to the list of owners whose products i'm allowed to",
    "start": "1857840",
    "end": "1864799"
  },
  {
    "text": "see that is as per requirements shall this work",
    "start": "1864799",
    "end": "1871919"
  },
  {
    "text": "products here i can see my and my neighbor's products because",
    "start": "1873760",
    "end": "1882240"
  },
  {
    "text": "this will first execute the query on friends to find whose friend i am",
    "start": "1884240",
    "end": "1892720"
  },
  {
    "text": "and then construct the list of keys whose products i'm allowed to see",
    "start": "1892720",
    "end": "1900960"
  },
  {
    "text": "i'm allowed to see my friends product obviously because",
    "start": "1901200",
    "end": "1910640"
  },
  {
    "text": "that query by id now consists of checking whether the the owner belongs",
    "start": "1910640",
    "end": "1917279"
  },
  {
    "text": "to the list and id equals what i asked for",
    "start": "1917279",
    "end": "1922559"
  },
  {
    "text": "what is the problem here is that i am completely free to delete my friends",
    "start": "1922559",
    "end": "1929840"
  },
  {
    "text": "product which i shouldn't have been allowed to here it is also selected",
    "start": "1929840",
    "end": "1936799"
  },
  {
    "text": "to belong to the list of owners and id and this where clause is satisfied and",
    "start": "1936799",
    "end": "1943279"
  },
  {
    "text": "subsequent delete statement and source this delete statement works by",
    "start": "1943279",
    "end": "1950640"
  },
  {
    "text": "selecting by by finding by id that is how entity framework works but if you remember you need to give",
    "start": "1950640",
    "end": "1958480"
  },
  {
    "text": "dbcontext an object an entity and ask it to remove",
    "start": "1958480",
    "end": "1964000"
  },
  {
    "text": "that so the security of that operation is executed in this",
    "start": "1964000",
    "end": "1969760"
  },
  {
    "text": "way the select query for the entity which you want to remove must not return that entity if you're",
    "start": "1969760",
    "end": "1976320"
  },
  {
    "text": "not allowed to delete it and then you will have nothing to pass to the remove method that's how you secure that which failed",
    "start": "1976320",
    "end": "1983919"
  },
  {
    "text": "me here this doesn't work",
    "start": "1983919",
    "end": "1990000"
  },
  {
    "text": "someone might argue again that the problem is that my ui is showing the delete action but that's",
    "start": "1990000",
    "end": "1996720"
  },
  {
    "text": "not the point because i can always forge the request if only i knew the id and now i know it",
    "start": "1996720",
    "end": "2003760"
  },
  {
    "text": "because the ui is telling me id so this is the doom of",
    "start": "2003760",
    "end": "2012399"
  },
  {
    "text": "this is the doom of global query filters there is only one global query filter",
    "start": "2012399",
    "end": "2020720"
  },
  {
    "text": "per db context per entity",
    "start": "2020720",
    "end": "2025919"
  },
  {
    "text": "and if you have multiple security models for that entity",
    "start": "2025919",
    "end": "2033279"
  },
  {
    "text": "you cannot do that here you might choose to create two db contacts",
    "start": "2033279",
    "end": "2039840"
  },
  {
    "text": "accessing the same data but i wouldn't walk that part as i said the problem with this line of",
    "start": "2039840",
    "end": "2047360"
  },
  {
    "text": "code is that it is located where it does not belong",
    "start": "2047360",
    "end": "2052560"
  },
  {
    "text": "instead what we engineers normally do when we face",
    "start": "2052560",
    "end": "2059520"
  },
  {
    "text": "situation like this we over engineer it the point is that we need to pull this",
    "start": "2059520",
    "end": "2066079"
  },
  {
    "text": "swear clause out and wrap the db context into a wrapper which",
    "start": "2066079",
    "end": "2072800"
  },
  {
    "text": "contains the where clause so that we can create two wrappers if there are two possible where clauses",
    "start": "2072800",
    "end": "2079599"
  },
  {
    "text": "and that is what i will do precisely so there will be no",
    "start": "2079599",
    "end": "2085200"
  },
  {
    "text": "global query filter here which i'm sad really this really really scales very well",
    "start": "2085200",
    "end": "2093280"
  },
  {
    "text": "that again doesn't support multiple security models so i have removed dependency on",
    "start": "2093280",
    "end": "2100320"
  },
  {
    "text": "that tenancy provider and i will remove both of these",
    "start": "2100320",
    "end": "2105599"
  },
  {
    "text": "properties i have my naked db context which has no logic regarding",
    "start": "2105599",
    "end": "2112240"
  },
  {
    "text": "security implemented nothing so it is no it should not be allowed",
    "start": "2112240",
    "end": "2120079"
  },
  {
    "text": "for any consumer to consume this directly",
    "start": "2120079",
    "end": "2125760"
  },
  {
    "text": "instead i want to wrap this dippy context into something that",
    "start": "2126160",
    "end": "2132720"
  },
  {
    "text": "will add security layer on top of it and we normally do that by introducing",
    "start": "2132720",
    "end": "2138800"
  },
  {
    "text": "interfaces because interfaces are only defining uh signatures of methods and we can make",
    "start": "2138800",
    "end": "2147200"
  },
  {
    "text": "that dbcontext implement interface and some other wrapper implement interface and apply that wrapper around",
    "start": "2147200",
    "end": "2153680"
  },
  {
    "text": "that context so this is the db context that allows",
    "start": "2153680",
    "end": "2160079"
  },
  {
    "text": "reading what does it do it can query and it can find by key that's what",
    "start": "2160079",
    "end": "2166960"
  },
  {
    "text": "entity frameworks db contexts normally do and i might define the writingdb context",
    "start": "2166960",
    "end": "2173359"
  },
  {
    "text": "it will be more rigid it will allow you to add some entity so",
    "start": "2173359",
    "end": "2181200"
  },
  {
    "text": "there will be a variety db context per entity but that doesn't mean that you you're not",
    "start": "2181200",
    "end": "2187920"
  },
  {
    "text": "allowed to implement this interface multiple times for different entities so",
    "start": "2187920",
    "end": "2193119"
  },
  {
    "text": "you can still have multiple entities exposed through the same db",
    "start": "2193119",
    "end": "2198720"
  },
  {
    "text": "context by specifying this write interface several times for",
    "start": "2198720",
    "end": "2203839"
  },
  {
    "text": "several generic arguments at the same time you can read anything",
    "start": "2203839",
    "end": "2210240"
  },
  {
    "text": "you like and here we see the limitation of c sharp programming language because it's not",
    "start": "2210240",
    "end": "2218560"
  },
  {
    "text": "possible to do this or to to move to move this",
    "start": "2218560",
    "end": "2226880"
  },
  {
    "text": "over here it's not possible because then you might not be able to support",
    "start": "2226880",
    "end": "2233280"
  },
  {
    "text": "multiple entities per db context because this method would only differ in return type which",
    "start": "2233280",
    "end": "2239680"
  },
  {
    "text": "is not allowed in sharp language that's how it is and the same stands for",
    "start": "2239680",
    "end": "2246240"
  },
  {
    "text": "find you can find any kind of entity by using any kind of",
    "start": "2246240",
    "end": "2252000"
  },
  {
    "text": "keys any number and types of them and that will produce something uh",
    "start": "2252000",
    "end": "2259520"
  },
  {
    "text": "db context in entity framework works the same way and they solved the same problem in this way",
    "start": "2259520",
    "end": "2266800"
  },
  {
    "text": "all right writing db context i can add i can remove and i can save changes that",
    "start": "2266800",
    "end": "2272960"
  },
  {
    "text": "is what db contacts from entity framework are doing notice that by",
    "start": "2272960",
    "end": "2279440"
  },
  {
    "text": "implementing these preparing to implement wrappers i'm not hiding away the fact",
    "start": "2279440",
    "end": "2285280"
  },
  {
    "text": "that i'm working with entity framework this interface depends on entity framework this type is defined there",
    "start": "2285280",
    "end": "2292079"
  },
  {
    "text": "it it is mimicking the process of entity frame of how db contexts work in entity",
    "start": "2292079",
    "end": "2298560"
  },
  {
    "text": "framework save changes returns integer here find this is the signature of the",
    "start": "2298560",
    "end": "2305839"
  },
  {
    "text": "of the find method in db context and so we can start implementing this",
    "start": "2305839",
    "end": "2313359"
  },
  {
    "text": "we can be kind to ourselves to also implement an interface declare",
    "start": "2313359",
    "end": "2320240"
  },
  {
    "text": "an interface which is both reading and writing context so that content content",
    "start": "2320240",
    "end": "2325760"
  },
  {
    "text": "context would be this one this this is probably the point where",
    "start": "2325760",
    "end": "2331920"
  },
  {
    "text": "you have started losing the thread of this talk because there are many uh",
    "start": "2331920",
    "end": "2339599"
  },
  {
    "text": "uh brackets many uh types and and parameters here already",
    "start": "2339599",
    "end": "2345760"
  },
  {
    "text": "download code read this it's very simple in the end if you just get a grasp of what",
    "start": "2345760",
    "end": "2352160"
  },
  {
    "text": "types and i'm using here and i might go even one step further and say",
    "start": "2352160",
    "end": "2358640"
  },
  {
    "text": "that content part of my database why not declaring i",
    "start": "2358640",
    "end": "2366320"
  },
  {
    "text": "in an interface with even with with the default uh getter implementations",
    "start": "2366320",
    "end": "2373680"
  },
  {
    "text": "so that nobody has to deal with this these cryptic methods",
    "start": "2373680",
    "end": "2381760"
  },
  {
    "text": "you can be as good to yourself as as much as you want but the essence",
    "start": "2381760",
    "end": "2390720"
  },
  {
    "text": "is that now that we have all these interfaces we can force the db context",
    "start": "2390720",
    "end": "2396720"
  },
  {
    "text": "to implement them and by doing that it will immediately become",
    "start": "2396720",
    "end": "2402000"
  },
  {
    "text": "subject to future decoration you will be able to implement",
    "start": "2402000",
    "end": "2408960"
  },
  {
    "text": "thin decorators around any db context and add security to it",
    "start": "2408960",
    "end": "2416400"
  },
  {
    "text": "what does it mean okay i have to to turn this into iqueryable that's the only change what does it mean",
    "start": "2416640",
    "end": "2422960"
  },
  {
    "text": "to implement these these uh methods i need to",
    "start": "2422960",
    "end": "2428160"
  },
  {
    "text": "express to expose this query all for any any uh entity type",
    "start": "2428160",
    "end": "2436160"
  },
  {
    "text": "i don't have to implement find because base db context from an entity framework",
    "start": "2436240",
    "end": "2441599"
  },
  {
    "text": "has precisely that find the method i asked for i can add and remove",
    "start": "2441599",
    "end": "2447440"
  },
  {
    "text": "products i can add and remove friend connections",
    "start": "2447440",
    "end": "2454160"
  },
  {
    "text": "i don't have to implement where are you i don't have to implement save changes because again it is",
    "start": "2454160",
    "end": "2460640"
  },
  {
    "text": "declared they are in the defined in the base db context here so",
    "start": "2460640",
    "end": "2466800"
  },
  {
    "text": "i have satisfied interfaces and when i have interfaces i can play with",
    "start": "2466800",
    "end": "2472319"
  },
  {
    "text": "them i can make consumers of db context more narrow",
    "start": "2472319",
    "end": "2480400"
  },
  {
    "text": "they can start expressing their desires more specifically",
    "start": "2480400",
    "end": "2485440"
  },
  {
    "text": "this is the index page which is listing all products what does it need",
    "start": "2485440",
    "end": "2491760"
  },
  {
    "text": "it needs to read and nothing else so it can depend on content",
    "start": "2493040",
    "end": "2499680"
  },
  {
    "text": "read context everything below compiles the same remember there's no",
    "start": "2499680",
    "end": "2507599"
  },
  {
    "text": "where clause here nor will anyone put it here right now because i'm still",
    "start": "2507599",
    "end": "2514240"
  },
  {
    "text": "injecting that content context but you see that the climate is changing i can express",
    "start": "2514240",
    "end": "2522960"
  },
  {
    "text": "desires more specifically and in only five minutes from now that will",
    "start": "2522960",
    "end": "2528640"
  },
  {
    "text": "let me inject specific security model",
    "start": "2528640",
    "end": "2534560"
  },
  {
    "text": "not just database model but security model all right details page same thing",
    "start": "2534560",
    "end": "2542880"
  },
  {
    "text": "just allow it to read what about the deletion page which",
    "start": "2542880",
    "end": "2548160"
  },
  {
    "text": "deletes will require the entire db context because",
    "start": "2548160",
    "end": "2553599"
  },
  {
    "text": "it wants to read first it needs to find by id and then to remove and then to",
    "start": "2553599",
    "end": "2560400"
  },
  {
    "text": "save therefore it needs both reading and writing capabilities but for instance insert model page which",
    "start": "2560400",
    "end": "2567760"
  },
  {
    "text": "is inserting new items only needs to write it reads nothing",
    "start": "2567760",
    "end": "2573680"
  },
  {
    "text": "in this application of course this this part of the application pages",
    "start": "2573680",
    "end": "2580800"
  },
  {
    "text": "is 100 custom that is where i'm implementing",
    "start": "2580800",
    "end": "2586319"
  },
  {
    "text": "application requirements that side of the application where i defined these interfaces",
    "start": "2586319",
    "end": "2593760"
  },
  {
    "text": "is semi-general this is quite a general because it is",
    "start": "2593760",
    "end": "2600000"
  },
  {
    "text": "generic and i have that specialization for the for the content",
    "start": "2600000",
    "end": "2606079"
  },
  {
    "text": "db context and in depth in in",
    "start": "2606079",
    "end": "2612640"
  },
  {
    "text": "into the infrastructure layer things are becoming more and more specific to specific",
    "start": "2612640",
    "end": "2619520"
  },
  {
    "text": "schemas in the database parts of the schemas they're returning they're operating on",
    "start": "2619520",
    "end": "2624640"
  },
  {
    "text": "specific entities using their own",
    "start": "2624640",
    "end": "2629839"
  },
  {
    "text": "intricacies like products having owner not every record in my database has",
    "start": "2630400",
    "end": "2636960"
  },
  {
    "text": "the owner so uh you will see a complete separation of concerns",
    "start": "2636960",
    "end": "2644079"
  },
  {
    "text": "where is the application logic in pages and and and models that are uh located there",
    "start": "2644079",
    "end": "2651680"
  },
  {
    "text": "where is the infrastructure security in the infrastructure layer nobody will have to think about that",
    "start": "2651680",
    "end": "2658720"
  },
  {
    "text": "except to express intention what what security model they require",
    "start": "2658720",
    "end": "2666640"
  },
  {
    "text": "and i will show you uh where classes are located in the end and you will see this separation and",
    "start": "2666640",
    "end": "2673200"
  },
  {
    "text": "right here i already have that separation starting to emerge but that is not",
    "start": "2673200",
    "end": "2679440"
  },
  {
    "text": "enough there are nowhere clauses here i start the application",
    "start": "2679440",
    "end": "2686480"
  },
  {
    "text": "there is no mounting tenancy implemented at all here there's nowhere clause i can see",
    "start": "2686480",
    "end": "2693119"
  },
  {
    "text": "the entire database so this is the moment when we start",
    "start": "2693119",
    "end": "2698400"
  },
  {
    "text": "installing where clauses our own query filters which are not global",
    "start": "2698400",
    "end": "2704800"
  },
  {
    "text": "anymore but per object",
    "start": "2704800",
    "end": "2708960"
  },
  {
    "text": "this is the moment when you read requirements and you ask your customer what do you want regarding security and",
    "start": "2710400",
    "end": "2718319"
  },
  {
    "text": "you figure that there are two security models in this application in the requirements for this application",
    "start": "2718319",
    "end": "2724240"
  },
  {
    "text": "one i have called assigned content reading context",
    "start": "2724240",
    "end": "2733200"
  },
  {
    "text": "this word assigned and content that's the the crux of it",
    "start": "2733200",
    "end": "2741440"
  },
  {
    "text": "customer says some content will be assigned to a user and user can do what",
    "start": "2741440",
    "end": "2748800"
  },
  {
    "text": "read that not right and there's another model",
    "start": "2748800",
    "end": "2755359"
  },
  {
    "text": "full ownership that is suppose that that is how customer called it",
    "start": "2755359",
    "end": "2762160"
  },
  {
    "text": "full ownership means that",
    "start": "2762160",
    "end": "2768079"
  },
  {
    "text": "i'm allowed to do anything with the item which i own which comes out from this",
    "start": "2769680",
    "end": "2776400"
  },
  {
    "text": "this context so the point is that i have simply named specific wrappers",
    "start": "2776400",
    "end": "2784800"
  },
  {
    "text": "by the requirements and i expect each of these to implement what is required explicitly",
    "start": "2784800",
    "end": "2793920"
  },
  {
    "text": "and i did develop these two classes and as you may guess 90 of code was",
    "start": "2793920",
    "end": "2800720"
  },
  {
    "text": "duplicated so i pulled that code into a base class and now in this demonstration i will effectively",
    "start": "2800720",
    "end": "2808880"
  },
  {
    "text": "implement base class first to to make it explaining it shortly",
    "start": "2808880",
    "end": "2816560"
  },
  {
    "text": "i called it tenancy content context to indicate that this is the the base class",
    "start": "2816560",
    "end": "2821760"
  },
  {
    "text": "for all classes that are implementing tenancy concerns on the content",
    "start": "2821760",
    "end": "2830319"
  },
  {
    "text": "look at this i still haven't implemented any of the interfaces that will come in in due time this",
    "start": "2830319",
    "end": "2839280"
  },
  {
    "text": "base class will wrap around content context and keep information about the",
    "start": "2839280",
    "end": "2847280"
  },
  {
    "text": "authenticated user in the in that same way in which i did it before with global query filters",
    "start": "2847280",
    "end": "2853520"
  },
  {
    "text": "so it will ask the tenancy provider whenever it is instantiated and it is instantiated once per",
    "start": "2853520",
    "end": "2859839"
  },
  {
    "text": "web request to tell currently authenticated user and then comes the match what is this",
    "start": "2859839",
    "end": "2867839"
  },
  {
    "text": "class going to do it's going to narrow down what products",
    "start": "2867839",
    "end": "2876720"
  },
  {
    "text": "can be seen and i will make an abstract",
    "start": "2876720",
    "end": "2884240"
  },
  {
    "text": "member which every derived wrapper will have to implement i need an expression which turns product",
    "start": "2884240",
    "end": "2892400"
  },
  {
    "text": "into volume given the authenticated user that's how it",
    "start": "2892400",
    "end": "2899760"
  },
  {
    "text": "becomes dynamic and it is expression because i plan to use it in i queryable",
    "start": "2899760",
    "end": "2907359"
  },
  {
    "text": "i will use it in iqueryable possibly multiple times so i will turn",
    "start": "2907440",
    "end": "2914480"
  },
  {
    "text": "i will i will materialize this expression by effectively calling",
    "start": "2914480",
    "end": "2921839"
  },
  {
    "text": "calling that abstract method above for a really authenticated user",
    "start": "2921839",
    "end": "2928400"
  },
  {
    "text": "and i will make that lazy because i might use it multiple times",
    "start": "2928400",
    "end": "2933440"
  },
  {
    "text": "through the lifetime of this of this uh db context wrapper and therefore this",
    "start": "2933440",
    "end": "2940079"
  },
  {
    "text": "method will only execute once it will construct an expression for me which i can freely dump you know into",
    "start": "2940079",
    "end": "2947760"
  },
  {
    "text": "any and every query i make",
    "start": "2947760",
    "end": "2952240"
  },
  {
    "text": "but i will do more than global filters query filters could do i",
    "start": "2952800",
    "end": "2958800"
  },
  {
    "text": "will also check for inserts and deletes",
    "start": "2958800",
    "end": "2964160"
  },
  {
    "text": "that's what the global query filter cannot do it can only add where close to queries",
    "start": "2964160",
    "end": "2972160"
  },
  {
    "text": "i will also compile",
    "start": "2972160",
    "end": "2977920"
  },
  {
    "text": "this expression into a func delegate and now i have two natures in this in this wrapper one nature",
    "start": "2978079",
    "end": "2986160"
  },
  {
    "text": "is the expression which can become part of i variables so that entity framework can",
    "start": "2986160",
    "end": "2992480"
  },
  {
    "text": "construct optimal queries for the database on the other hand i will have a funky delegate a predicate",
    "start": "2992480",
    "end": "2999520"
  },
  {
    "text": "which turns product into boolean where i can perform that same question",
    "start": "2999520",
    "end": "3005839"
  },
  {
    "text": "in memory whenever i see an object",
    "start": "3005839",
    "end": "3010000"
  },
  {
    "text": "and then how do we get products for example",
    "start": "3011119",
    "end": "3018079"
  },
  {
    "text": "by querying all products and appending where clause as",
    "start": "3018079",
    "end": "3025599"
  },
  {
    "text": "specified by the derived class this is how we make global query filters",
    "start": "3025599",
    "end": "3034559"
  },
  {
    "text": "flexible they will be specified per object not by per db context",
    "start": "3035280",
    "end": "3044000"
  },
  {
    "text": "what else i can get friends but since i didn't have any specific",
    "start": "3044480",
    "end": "3050160"
  },
  {
    "text": "requirements about friends i didn't have to repeat the this",
    "start": "3050160",
    "end": "3055520"
  },
  {
    "text": "this this here okay i didn't have to add three more members for france i i",
    "start": "3055520",
    "end": "3061040"
  },
  {
    "text": "don't have any request about that because there is a fixed a fixed",
    "start": "3061040",
    "end": "3066559"
  },
  {
    "text": "query for who are my friends those are where owner is the",
    "start": "3066559",
    "end": "3072880"
  },
  {
    "text": "authenticated user and there are those reverse friends whose friend name i",
    "start": "3072880",
    "end": "3078000"
  },
  {
    "text": "where friend key equals authenticating use",
    "start": "3078000",
    "end": "3083200"
  },
  {
    "text": "in this way in this way whoever called",
    "start": "3083200",
    "end": "3089280"
  },
  {
    "text": "the all these methods are protected now any derived class can call",
    "start": "3089280",
    "end": "3096880"
  },
  {
    "text": "can get friends or get products and only receive the result of the query",
    "start": "3096880",
    "end": "3103920"
  },
  {
    "text": "which includes where clause as per requirements that is",
    "start": "3103920",
    "end": "3109520"
  },
  {
    "text": "the most important part but what else can i do",
    "start": "3109520",
    "end": "3114880"
  },
  {
    "text": "i can get entities remember this this strange cryptic method exists in",
    "start": "3115119",
    "end": "3122160"
  },
  {
    "text": "those interfaces i can get entities by checking the precise type and using",
    "start": "3122160",
    "end": "3130160"
  },
  {
    "text": "a precise method to get products or friends and in that way",
    "start": "3130160",
    "end": "3136559"
  },
  {
    "text": "enforce this general method to include where clause in every",
    "start": "3136559",
    "end": "3143920"
  },
  {
    "text": "query and find goes the same way",
    "start": "3143920",
    "end": "3150559"
  },
  {
    "text": "it will use these secure methods what else adding a product now",
    "start": "3150559",
    "end": "3158319"
  },
  {
    "text": "the things will become more interesting how do we add a product",
    "start": "3158319",
    "end": "3167200"
  },
  {
    "text": "i will apply that predicate which is equal which is a compiled expression",
    "start": "3167200",
    "end": "3172960"
  },
  {
    "text": "which is used to to query the database and only if it returns true will i add it to the",
    "start": "3172960",
    "end": "3180800"
  },
  {
    "text": "db context that is security but what",
    "start": "3180800",
    "end": "3186400"
  },
  {
    "text": "else there's a trick here there's the ass",
    "start": "3186400",
    "end": "3192160"
  },
  {
    "text": "branch that is something that global query filters don't have",
    "start": "3192160",
    "end": "3197599"
  },
  {
    "text": "else take the biggest red letters you have",
    "start": "3198480",
    "end": "3205119"
  },
  {
    "text": "and write into the security log not just into any log but into the log where only authorized",
    "start": "3205119",
    "end": "3212559"
  },
  {
    "text": "authorized personnel can can see what what went wrong and right that somebody has got the",
    "start": "3212559",
    "end": "3219359"
  },
  {
    "text": "product that doesn't belong to him or her",
    "start": "3219359",
    "end": "3225119"
  },
  {
    "text": "all right so this is custom security applied to products the way customers our",
    "start": "3225119",
    "end": "3232000"
  },
  {
    "text": "customers have have requested don't let anybody add product that belongs to somebody else",
    "start": "3232000",
    "end": "3240480"
  },
  {
    "text": "i can do the same thing in removal also if i'm authorized to remove the the",
    "start": "3241839",
    "end": "3249839"
  },
  {
    "text": "object i will do that otherwise this is the security breach this means that there is a bug somewhere",
    "start": "3249839",
    "end": "3256880"
  },
  {
    "text": "in the whoever called whatever layer was called there was a",
    "start": "3256880",
    "end": "3263359"
  },
  {
    "text": "bug there that that call shouldn't have happened",
    "start": "3263359",
    "end": "3268720"
  },
  {
    "text": "and this is the place where i stop propagation of such a box i can also do the same thing for friend",
    "start": "3268720",
    "end": "3277119"
  },
  {
    "text": "this is what uh insertion deletion uh these four methods obviously have",
    "start": "3277119",
    "end": "3283040"
  },
  {
    "text": "quite a lot of duplication i could have dealt with that but i was too lazy to do that and in the end",
    "start": "3283040",
    "end": "3290079"
  },
  {
    "text": "there is the internal save changes method which only uh pass is called to save changes on the",
    "start": "3290079",
    "end": "3295760"
  },
  {
    "text": "wrapped db context uh i was careful to not",
    "start": "3295760",
    "end": "3301839"
  },
  {
    "text": "reuse method names for any of those interfaces",
    "start": "3301839",
    "end": "3307839"
  },
  {
    "text": "because i want to implement them here assigned content reading context will",
    "start": "3307920",
    "end": "3315440"
  },
  {
    "text": "derive from tenancy content context and repeat that you remember that query from for",
    "start": "3315440",
    "end": "3322079"
  },
  {
    "text": "reverse friends and here is the the where clause this is that same where clause when i'm",
    "start": "3322079",
    "end": "3330000"
  },
  {
    "text": "allowed to see anything that belongs to me or to people",
    "start": "3330000",
    "end": "3335280"
  },
  {
    "text": "who declared me me as friend and what will this",
    "start": "3335280",
    "end": "3340319"
  },
  {
    "text": "what interfaces will this interfere this this class implement only the reading interfaces that is what",
    "start": "3340319",
    "end": "3346720"
  },
  {
    "text": "what customers requirements are i can only query and find and",
    "start": "3346720",
    "end": "3353599"
  },
  {
    "text": "look at the full ownership it will also derive from tennessee content context",
    "start": "3353599",
    "end": "3360720"
  },
  {
    "text": "but here is the the where clause that is that other where clause i had",
    "start": "3360720",
    "end": "3366480"
  },
  {
    "text": "full ownership means that i can only see products and change that i own",
    "start": "3366480",
    "end": "3374240"
  },
  {
    "text": "it will implement all the interfaces i can read and write so busy query and find everything is all right",
    "start": "3374240",
    "end": "3381839"
  },
  {
    "text": "this is add remove product add remove friend connection save changes everything can be done but",
    "start": "3381839",
    "end": "3389920"
  },
  {
    "text": "with a different different where clause and how does this",
    "start": "3389920",
    "end": "3395280"
  },
  {
    "text": "work when we get to pages pages",
    "start": "3395280",
    "end": "3402160"
  },
  {
    "text": "will now request a specific security model index page",
    "start": "3402640",
    "end": "3410079"
  },
  {
    "text": "only reads and it applies the assigned content content security mode fine",
    "start": "3410079",
    "end": "3417280"
  },
  {
    "text": "details the same but delete requires full ownership",
    "start": "3417280",
    "end": "3427599"
  },
  {
    "text": "insert requires for longer and this is the last thing in this code where i have turned security",
    "start": "3427599",
    "end": "3436079"
  },
  {
    "text": "decremented these are the pages pages contain absolutely nothing",
    "start": "3436079",
    "end": "3445680"
  },
  {
    "text": "constructors and interfaces they depend on",
    "start": "3445680",
    "end": "3451359"
  },
  {
    "text": "everything is implemented here in the infrastructure where if interfaces are pretty general except",
    "start": "3451839",
    "end": "3458480"
  },
  {
    "text": "this one which is specific so i could push these specific interfaces into some",
    "start": "3458480",
    "end": "3464799"
  },
  {
    "text": "sub name space and and turn them into the api of the infrastructure",
    "start": "3464799",
    "end": "3470240"
  },
  {
    "text": "and these specific interfaces where aside and where is full and where is i content reader this is",
    "start": "3470240",
    "end": "3476960"
  },
  {
    "text": "the api of the content part of the database and",
    "start": "3476960",
    "end": "3482559"
  },
  {
    "text": "technically others would only depend on that api they would never ever touch content",
    "start": "3482559",
    "end": "3490000"
  },
  {
    "text": "context and by doing that you will secure the database let me show you",
    "start": "3490000",
    "end": "3497440"
  },
  {
    "text": "how the application works now this is me there is the where claus",
    "start": "3497440",
    "end": "3505200"
  },
  {
    "text": "it works the same as with the with the global query filters it selects friends",
    "start": "3505200",
    "end": "3513280"
  },
  {
    "text": "builds the list and adds it to the where clause if i try to see my neighbors",
    "start": "3513280",
    "end": "3521760"
  },
  {
    "text": "product here it is i have the right to see it",
    "start": "3522960",
    "end": "3528240"
  },
  {
    "text": "but when i accidentally click delete you will notice that there will be one",
    "start": "3528240",
    "end": "3534240"
  },
  {
    "text": "where clause to find it for deletion and that will not return the object",
    "start": "3534240",
    "end": "3540400"
  },
  {
    "text": "there will be no object it will be there will be no delete statement here",
    "start": "3540400",
    "end": "3546640"
  },
  {
    "text": "but when i want to repopulate the list i will be back to the second their clause",
    "start": "3546640",
    "end": "3552880"
  },
  {
    "text": "let this image be the last thing i will show here this is how you can implement multiple",
    "start": "3552880",
    "end": "3559119"
  },
  {
    "text": "where clauses unfortunately i have eaten all your questions",
    "start": "3559119",
    "end": "3565680"
  },
  {
    "text": "time please go to slack and write questions there and tag me so that i can see it is there a",
    "start": "3565680",
    "end": "3572160"
  },
  {
    "text": "way to pass a israeli the access token to uh azure secret enforcer that's",
    "start": "3572160",
    "end": "3578400"
  },
  {
    "text": "the [Music] ashit that that is",
    "start": "3578400",
    "end": "3585359"
  },
  {
    "text": "the question for authentication part of the application so keep that separate from",
    "start": "3585359",
    "end": "3592400"
  },
  {
    "text": "infrastructure and and you will succeed",
    "start": "3592400",
    "end": "3597200"
  },
  {
    "text": "the time is up i'm sorry that i left you uh without questions but but write them",
    "start": "3598000",
    "end": "3604240"
  },
  {
    "text": "inside and i will answer them thank you everyone",
    "start": "3604240",
    "end": "3615839"
  },
  {
    "text": "you",
    "start": "3619760",
    "end": "3621839"
  }
]