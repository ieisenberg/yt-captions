[
  {
    "text": "alright then let's start this thing well hello hello NDC London people it's",
    "start": "6300",
    "end": "12850"
  },
  {
    "text": "really nice to see you all firstly well done for coming to this session good choice",
    "start": "12850",
    "end": "17950"
  },
  {
    "text": "I'm really pleased to see you are clearly people of good taste so I'm quite happy to be spending the next hour",
    "start": "17950",
    "end": "23830"
  },
  {
    "text": "with you so my name is Steve and I'm very much looking forward to showing you this thing blazer I'm sure some of you",
    "start": "23830",
    "end": "29560"
  },
  {
    "text": "have seen it before but let's find out can you do your hands in the air thing if you've seen blazer or razor components something like that before",
    "start": "29560",
    "end": "35680"
  },
  {
    "text": "all of us like 3/4 of you at least that's great and just out of interest how many of you went to Dan Roth's talk",
    "start": "35680",
    "end": "42400"
  },
  {
    "text": "about razor components this morning that's like about third of the room as well ok good so you are going to see",
    "start": "42400",
    "end": "49390"
  },
  {
    "text": "some overlap with this talk but not too much ok there's gonna be a lot of cool new stuff as well ok so what is this",
    "start": "49390",
    "end": "56470"
  },
  {
    "text": "thing why we bothering to look at it you know for those of you have not heard about this before blazer is an",
    "start": "56470",
    "end": "62739"
  },
  {
    "text": "experimental single page application framework from the asp net core team where we're building on the ability to",
    "start": "62739",
    "end": "68380"
  },
  {
    "text": "run dotnet code inside a browser in webassembly to give you the ability to be more productive and happy than ever",
    "start": "68380",
    "end": "75160"
  },
  {
    "text": "before that's the idea ok so in this talk I'm going to be showing you quite a",
    "start": "75160",
    "end": "81310"
  },
  {
    "text": "bit about how how it works you know how you can build stuff with it what the process of actually creating UI with",
    "start": "81310",
    "end": "87880"
  },
  {
    "text": "this thing is but there's also going to be quite a big part of like why are we doing this anyway what is the point of",
    "start": "87880",
    "end": "93520"
  },
  {
    "text": "this why should you care what is changing in our industry that is creating this new possibility anyway so",
    "start": "93520",
    "end": "99490"
  },
  {
    "text": "to set that context let's think a little bit about how web development works today ok so web development today you're",
    "start": "99490",
    "end": "107890"
  },
  {
    "text": "going to have some code that runs on a server somewhere might be a server in the cloud might be just some dusty box",
    "start": "107890",
    "end": "112960"
  },
  {
    "text": "that's under your desk or something like that but it's going to run some code and that code might be in dotnet my bein Java might be node might be go it might",
    "start": "112960",
    "end": "119530"
  },
  {
    "text": "be something else but it's some code running in a server but you don't just want to write something in a server you",
    "start": "119530",
    "end": "125020"
  },
  {
    "text": "want to make some UI appear in someone's web browser and how are you going to do that well you're probably today going to",
    "start": "125020",
    "end": "131950"
  },
  {
    "text": "use one of these single page application frameworks it's the most mainstream way of building an entree",
    "start": "131950",
    "end": "137250"
  },
  {
    "text": "will you I and whether its angular react view something else it's gonna be running on the JavaScript runtime now",
    "start": "137250",
    "end": "143910"
  },
  {
    "text": "maybe you write your code in typescript or flow or something else that compiles to JavaScript but basically it's running",
    "start": "143910",
    "end": "149400"
  },
  {
    "text": "on the JavaScript runtime so it's gonna look and feel like JavaScript which is a little bit of a shame isn't it because",
    "start": "149400",
    "end": "154860"
  },
  {
    "text": "this means you've got these two different worlds to try and make talk to each other and not only that it's just",
    "start": "154860",
    "end": "160620"
  },
  {
    "text": "sad on a principle level because if as an industry we've built all these amazing languages and platforms why",
    "start": "160620",
    "end": "167490"
  },
  {
    "text": "can't we use them wherever we want why are we limited to this one little cluster of languages around javascript",
    "start": "167490",
    "end": "173310"
  },
  {
    "text": "in the browser wouldn't be better if we could use anything we want anywhere we want and that's the idea behind web",
    "start": "173310",
    "end": "178800"
  },
  {
    "text": "assembly web assembly is a way of running any code you want inside a browser doesn't have to be JavaScript",
    "start": "178800",
    "end": "184709"
  },
  {
    "text": "we'll talk about how this works internally later in the talk but just for now let's say this is a great way of",
    "start": "184709",
    "end": "191100"
  },
  {
    "text": "running whatever code you want and it's supported in basically all browsers including mobile browsers at least as of",
    "start": "191100",
    "end": "197370"
  },
  {
    "text": "about 18 months ago so we're in good state with web assembly so if we can run",
    "start": "197370",
    "end": "202410"
  },
  {
    "text": "whatever code we want inside the browser on web assembly that naturally leads us to think well could we run net inside",
    "start": "202410",
    "end": "209310"
  },
  {
    "text": "the browser on web assembly and when we found out that we can do that that brings us very happily to Blaser",
    "start": "209310",
    "end": "215040"
  },
  {
    "text": "which is a UI platform built on top of this stack so this is for you to build",
    "start": "215040",
    "end": "220110"
  },
  {
    "text": "your sophisticated UI's on top of dotnet running inside a browser okay so would",
    "start": "220110",
    "end": "226440"
  },
  {
    "text": "anyone want to do that well would there be any benefits what who should want to do that why would we care so there are",
    "start": "226440",
    "end": "233010"
  },
  {
    "text": "potentially quite a number of advantages to doing this versus traditional approaches to building your web UIs and",
    "start": "233010",
    "end": "238920"
  },
  {
    "text": "I'm going to go through some of them but you don't want to just hear me keep talking about this you want to actually see it for yourself presumably so I'm",
    "start": "238920",
    "end": "245880"
  },
  {
    "text": "going to show you some examples of each of these things just now let's start with the advantages of using the c-sharp",
    "start": "245880",
    "end": "252510"
  },
  {
    "text": "language inside a browser okay so I'm going to switch over to a demo application now and I've got this blazer",
    "start": "252510",
    "end": "258570"
  },
  {
    "text": "application here that I can start up and run inside my browser okay so it's a",
    "start": "258570",
    "end": "264390"
  },
  {
    "text": "pretty traditional typical looking web application it's got a couple of different pages in there we've got",
    "start": "264390",
    "end": "270210"
  },
  {
    "text": "to do list we've got this thing where we can fetch some weather forecasts from the server and we can do some forward",
    "start": "270210",
    "end": "276509"
  },
  {
    "text": "backward client-side navigation and it's all interactive so let's have Meg Blaser",
    "start": "276509",
    "end": "284720"
  },
  {
    "text": "profit okay so that's my to do us and it's all working fine and it's",
    "start": "284810",
    "end": "289860"
  },
  {
    "text": "interactive inside the browser sort of think you would normally use a JavaScript framework to build but we're",
    "start": "289860",
    "end": "295770"
  },
  {
    "text": "not using javascript here at all so if we have a look at what's inside our solution here you'll see what we've got",
    "start": "295770",
    "end": "302610"
  },
  {
    "text": "is a bunch of CS HTML files which is razor talked about that in a second and",
    "start": "302610",
    "end": "307919"
  },
  {
    "text": "besides that we've got CSS we've got HTML and we've got traditional c-sharp files but no JavaScript because we don't",
    "start": "307919",
    "end": "315449"
  },
  {
    "text": "need it because we've compiled dotnet and we've we've run it in such a way that it can run inside the browser okay",
    "start": "315449",
    "end": "321389"
  },
  {
    "text": "so what are these CS HTML files well if you've done any OS p-nut development in the last few years you'll be familiar",
    "start": "321389",
    "end": "326909"
  },
  {
    "text": "with CS HTML being RAZR files now razor is a syntax for combining c-sharp and",
    "start": "326909",
    "end": "334220"
  },
  {
    "text": "HTML in one file in a way that they can work together really nicely so let me give you a couple of examples",
    "start": "334220",
    "end": "339630"
  },
  {
    "text": "of that ok so firstly how does this very simple thing on the home screen work it's just some static content so how do",
    "start": "339630",
    "end": "346650"
  },
  {
    "text": "we make some static content show up in our blazer application well we make a component Emblaze are all parts of your",
    "start": "346650",
    "end": "353130"
  },
  {
    "text": "UI our components the whole application is a component pages are components layouts of components groups of UI",
    "start": "353130",
    "end": "359039"
  },
  {
    "text": "elements they're all components its components all the way down so that's what each one of these CS HTML files is",
    "start": "359039",
    "end": "364409"
  },
  {
    "text": "and the simplest component is very simple indeed it's just some markup just static markup but what's this okay so up",
    "start": "364409",
    "end": "372300"
  },
  {
    "text": "at the top we've got this one special thing which is ID Eric a directive and the page directive says this is the",
    "start": "372300",
    "end": "378870"
  },
  {
    "text": "component that we want to use if the user is on the home page and we're going to display this static markup so that's",
    "start": "378870",
    "end": "384240"
  },
  {
    "text": "pretty simple okay what about the slightly more interesting thing of this to-do list okay where we can actually",
    "start": "384240",
    "end": "389880"
  },
  {
    "text": "enter some stuff and the UI up days well let's look at the code for to-do list there's quite a bit more in here but I",
    "start": "389880",
    "end": "396000"
  },
  {
    "text": "think we can understand this quite easily let's go through it so firstly we've got the page directive up at the",
    "start": "396000",
    "end": "401430"
  },
  {
    "text": "top again to control which URL we respond to and ignore this stuff from Annette down here we've got a functions",
    "start": "401430",
    "end": "407539"
  },
  {
    "text": "block and inside the functions block we can put some code and since this is net and we want to write this in c-sharp we",
    "start": "407539",
    "end": "413719"
  },
  {
    "text": "are writing some c-sharp curve right here inside our component so how does it work well we've got this text box here",
    "start": "413719",
    "end": "420110"
  },
  {
    "text": "which says whatever value enter we're going to put this in this field called new item text which is defined down here",
    "start": "420110",
    "end": "426879"
  },
  {
    "text": "okay and then this form says when you submit it we're going to call this method add item which is a c-sharp",
    "start": "426879",
    "end": "433159"
  },
  {
    "text": "method defined down here and we'll take the item that you've just typed in and we add it to our list of items which is",
    "start": "433159",
    "end": "439669"
  },
  {
    "text": "a list of string and then we want the box to get cleared out so we'll set a new item text back to null okay and then",
    "start": "439669",
    "end": "446659"
  },
  {
    "text": "all that's left to do is iterate over all the items in our items list and for",
    "start": "446659",
    "end": "452300"
  },
  {
    "text": "each one we'll just display it on the screen so I hope you will agree that this is a",
    "start": "452300",
    "end": "457339"
  },
  {
    "text": "pretty simple way of writing interactive UI okay very simple familiar components",
    "start": "457339",
    "end": "463669"
  },
  {
    "text": "based programming but with dotnet combined with HTML alright so last one",
    "start": "463669",
    "end": "469490"
  },
  {
    "text": "that I want to show you as an example is this one where we're fetching the list of weather forecasts now this is to",
    "start": "469490",
    "end": "476210"
  },
  {
    "text": "demonstrate how we can interact with some external services to get data and if we look at the code in there you'll",
    "start": "476210",
    "end": "482930"
  },
  {
    "text": "see again we use this page directive but we're also now using inject inject lets",
    "start": "482930",
    "end": "489289"
  },
  {
    "text": "us interact with s pinettes dependency injection system so that we can get services that are defined within our",
    "start": "489289",
    "end": "495770"
  },
  {
    "text": "application and in this case we're getting an HTTP client so that we can make some calls to fetch some data okay",
    "start": "495770",
    "end": "502580"
  },
  {
    "text": "now we'll ignore all this stuff for a minute and let's look down here and we can see that when this component is",
    "start": "502580",
    "end": "507830"
  },
  {
    "text": "first initialized it's going to asynchronously do an HTTP GET request to",
    "start": "507830",
    "end": "513260"
  },
  {
    "text": "some endpoint to fetch some data now as it happens it's just a static file that I've gotten disk but it could be",
    "start": "513260",
    "end": "520459"
  },
  {
    "text": "anything it could be some dynamic code that runs on the server and when the response comes back we're going to",
    "start": "520459",
    "end": "525529"
  },
  {
    "text": "deserialize it as an array of weather forecasts and I've defined the weather forecast type right there so then we",
    "start": "525529",
    "end": "532910"
  },
  {
    "text": "want to display that on the screen and if we wanted to we could do it in a similar way two other to-do list works we could have",
    "start": "532910",
    "end": "539010"
  },
  {
    "text": "a for each loop and we could say for each item I want to make an HTML table row and I'll display the contents in",
    "start": "539010",
    "end": "544620"
  },
  {
    "text": "that and that would work perfectly fine but I wanted to make this a little more interesting so I've got this component",
    "start": "544620",
    "end": "550740"
  },
  {
    "text": "called MDC list one earth is that well you won't see that my application has this attractive kind of purple theme and",
    "start": "550740",
    "end": "557400"
  },
  {
    "text": "this pretty list here well this is all coming from the material design library",
    "start": "557400",
    "end": "562530"
  },
  {
    "text": "okay so this is to show you that in blazer we can pull in component libraries that have got ready-made",
    "start": "562530",
    "end": "567660"
  },
  {
    "text": "components for us so I've got this material design components list and I can pass my forecasts to it and I can",
    "start": "567660",
    "end": "573660"
  },
  {
    "text": "pass all these other little template parameters that control how stuff get displayed in the list there all right so",
    "start": "573660",
    "end": "580110"
  },
  {
    "text": "that shows us how we can use c-sharp in a remarkably simple way to build interactive UI but what's this next",
    "start": "580110",
    "end": "587490"
  },
  {
    "text": "thing then the net dotnet ecosystem how can we make use of the dotnet ecosystem inside a blazer application well",
    "start": "587490",
    "end": "594330"
  },
  {
    "text": "consider the following scenario okay it's Monday morning you've been working",
    "start": "594330",
    "end": "599340"
  },
  {
    "text": "all weekend and you've made this weather forecast thing and you excitedly show it to your boss or some kind of business",
    "start": "599340",
    "end": "604890"
  },
  {
    "text": "analyst in your company and they go well done code monkey you've done a good job but there's one little thing that I need",
    "start": "604890",
    "end": "612750"
  },
  {
    "text": "from you I need to be able to export this to excel so that I can do some business analytics on it and your thing",
    "start": "612750",
    "end": "618600"
  },
  {
    "text": "are great at export to excel okay fine I'm gonna make you a CSV file",
    "start": "618600",
    "end": "623760"
  },
  {
    "text": "I can I can output a comma separated text file that's going to be good and the business analysts will say no I",
    "start": "623760",
    "end": "629640"
  },
  {
    "text": "don't want a CSV file I want a proper spreadsheet I want colors I want conditional formatting",
    "start": "629640",
    "end": "634860"
  },
  {
    "text": "I want charts this is my life don't take it from me okay I want a real spreadsheet and you'll say Oh gray right",
    "start": "634860",
    "end": "641910"
  },
  {
    "text": "how we're gonna make real spreadsheet and the answer to that is really easily okay because you're a darknet developer",
    "start": "641910",
    "end": "648300"
  },
  {
    "text": "and you've got access to the whole dotnet ecosystem and doing things like making spreadsheets is super easy so how",
    "start": "648300",
    "end": "654000"
  },
  {
    "text": "are we going to do it right we're gonna go and we're going to add a reference to an external third-party package okay so",
    "start": "654000",
    "end": "660870"
  },
  {
    "text": "let's go to new get dog and we're going to search for excel all right and what's going to come back from there a bunch of",
    "start": "660870",
    "end": "666390"
  },
  {
    "text": "things that help us to work with excel and if we look closely the one that's got by far the largest number of",
    "start": "666390",
    "end": "671900"
  },
  {
    "text": "downloads five point eight six million of them is this thing called EP plus so you say okay it's got a lot of downloads",
    "start": "671900",
    "end": "678740"
  },
  {
    "text": "therefore it must be the right thing for me to use so I'm going to install that into my application right now and it",
    "start": "678740",
    "end": "684050"
  },
  {
    "text": "says okay accept some terms yep great I don't want your readme thank you and now I've got the power to make Excel",
    "start": "684050",
    "end": "691340"
  },
  {
    "text": "spreadsheets so what do I want to do first I want to make a button that appears the",
    "start": "691340",
    "end": "697850"
  },
  {
    "text": "bottom of the screen here for downloading this as a spreadsheet so I could use a traditional HTML button if I",
    "start": "697850",
    "end": "703760"
  },
  {
    "text": "wanted to but hey since I've got this material design thing I'll use an MDC button so that it looks good and then",
    "start": "703760",
    "end": "709820"
  },
  {
    "text": "Visual Studio says hang on you want me to invoke this download a spreadsheet well sorry but there is no",
    "start": "709820",
    "end": "715910"
  },
  {
    "text": "such thing and that's going to be a problem so you'll say okay fine right I'm going to create this download a spreadsheet method that we're going to",
    "start": "715910",
    "end": "721580"
  },
  {
    "text": "invoke when they click the button okay what am I going to do in there well I better put some logic in it so you'll go",
    "start": "721580",
    "end": "727190"
  },
  {
    "text": "and you'll read the documentation for EP plus and it will tell you that what you need to do is new up an Excel package",
    "start": "727190",
    "end": "733970"
  },
  {
    "text": "and then you can do stuff like you can add a forecasts tab into the list of worksheets in this spreadsheet and then",
    "start": "733970",
    "end": "741350"
  },
  {
    "text": "we're going to say all right browser I want you to download this thing as a file called forecasts dot xlsx and the",
    "start": "741350",
    "end": "747920"
  },
  {
    "text": "contents will be the bikes from that spreadsheet that we've just created on the client in our application",
    "start": "747920",
    "end": "753890"
  },
  {
    "text": "so let's load that now let's see if when I press this download button does it download a real spreadsheet ok says ok",
    "start": "753890",
    "end": "760610"
  },
  {
    "text": "you're opening forecasts do you want to open that in Excel is of course so I choose yes and Excel starts doing all",
    "start": "760610",
    "end": "766730"
  },
  {
    "text": "its stuff and when that comes up hopefully we'll get a forecast now it's empty right there's nothing in our",
    "start": "766730",
    "end": "772970"
  },
  {
    "text": "spreadsheet because I didn't put any data in it but we have got this forecasts tab down here which starts to",
    "start": "772970",
    "end": "778520"
  },
  {
    "text": "show that we're on the right track so what do we want to put inside our spreadsheet so again you go back to the",
    "start": "778520",
    "end": "784490"
  },
  {
    "text": "EP plus Docs and you read how to go about inserting data in search and we'll decide that what we want to do is we",
    "start": "784490",
    "end": "791360"
  },
  {
    "text": "want to start this cell b2 b2 and then we can use c-sharp link query to fetch",
    "start": "791360",
    "end": "797450"
  },
  {
    "text": "whatever data we want for our in memory weather forecasts array and we can use link expressions like where",
    "start": "797450",
    "end": "803860"
  },
  {
    "text": "f dot temperature is greater than hundred a that one and okay so we've",
    "start": "803860",
    "end": "810280"
  },
  {
    "text": "fetched our data and we have put it inside our spreadsheet okay but we can do some more cool stuff than that let's",
    "start": "810280",
    "end": "815890"
  },
  {
    "text": "make this a little bit more interesting so first let's add a computed column here in our spreadsheet where we're",
    "start": "815890",
    "end": "821830"
  },
  {
    "text": "using this formula to calculate temperature E and F based on temperature C very good and let's also dump in loads",
    "start": "821830",
    "end": "828940"
  },
  {
    "text": "of code that you won't have time to read that's going to set horizontal alignment background color and bold fonts and",
    "start": "828940",
    "end": "834250"
  },
  {
    "text": "other things like that all right and then finally just to really show off let's put in a chart okay just because",
    "start": "834250",
    "end": "841180"
  },
  {
    "text": "that's what our business analysts really want it so let's go back and try that now so if I hit the download button then",
    "start": "841180",
    "end": "848620"
  },
  {
    "text": "again it's going to say you're opening this forecasts spreadsheet and when that comes up this time instead of being",
    "start": "848620",
    "end": "854710"
  },
  {
    "text": "empty we've now actually got our data and it's got colors and it's got formulas it's even got this completely",
    "start": "854710",
    "end": "861280"
  },
  {
    "text": "insane pie chart that shows but how much of the temperature happens on each day of the week whatever that means okay so",
    "start": "861280",
    "end": "869620"
  },
  {
    "text": "there we go we've done a super job there of pulling in a thing just an arbitrary third party",
    "start": "869620",
    "end": "875290"
  },
  {
    "text": "thing from the dotnet ecosystem and we were able to use it inside our application all right last benefit full-stack what",
    "start": "875290",
    "end": "883120"
  },
  {
    "text": "on earth do we mean by that why is that a relevant term in this context okay so the application I've shown you so far is",
    "start": "883120",
    "end": "889870"
  },
  {
    "text": "a true client-side web application it does not have any dependency on there",
    "start": "889870",
    "end": "895000"
  },
  {
    "text": "being net on the server at all you could host this on a PHP site if you wanted you could more realistically host it on",
    "start": "895000",
    "end": "900760"
  },
  {
    "text": "node or or some other kind of modern framework or if you wanted to you could export it all and you could deploy it to",
    "start": "900760",
    "end": "907210"
  },
  {
    "text": "github pages or to Azure blob storage or to some other static file store there's no requirement for there to be done out",
    "start": "907210",
    "end": "913270"
  },
  {
    "text": "on the server but what if you do have done it on the server are there",
    "start": "913270",
    "end": "918640"
  },
  {
    "text": "potentially some advantages that you can use to tie your front end and your back ends together in a useful and",
    "start": "918640",
    "end": "924610"
  },
  {
    "text": "interesting way so let me show you I'm going to close this project right now and I'm going to switch over to a",
    "start": "924610",
    "end": "931570"
  },
  {
    "text": "different version of it that's almost the same except this one is going to",
    "start": "931570",
    "end": "936830"
  },
  {
    "text": "be based on an a spinet core server so let me just run it first so we can see that this works and that's not in any",
    "start": "936830",
    "end": "943070"
  },
  {
    "text": "way what I wanted to run let's set this thing as the start of project and we can",
    "start": "943070",
    "end": "948470"
  },
  {
    "text": "close all our windows there we go alright so let's start this up now when",
    "start": "948470",
    "end": "954470"
  },
  {
    "text": "that comes up you'll see that it's basically the same thing that we had before it's got the same set of",
    "start": "954470",
    "end": "959990"
  },
  {
    "text": "components in it the same pagers the same basic behavior so we've got all this stuff but if we look at our source",
    "start": "959990",
    "end": "966830"
  },
  {
    "text": "code there's now three projects instead of one we've got the client project which is basically the same thing that",
    "start": "966830",
    "end": "972800"
  },
  {
    "text": "we had before so this is another blazer client-side web assembly application it's got the same set of pages and",
    "start": "972800",
    "end": "978350"
  },
  {
    "text": "components and stuff it behaves the same as before but we've also now got a server project and that is an asp net",
    "start": "978350",
    "end": "984740"
  },
  {
    "text": "core server and we can use that as a place to put things like our back-end data services that we want to invoke or",
    "start": "984740",
    "end": "991400"
  },
  {
    "text": "any other things that we need a server for like authorization or you know database access that sort of thing okay",
    "start": "991400",
    "end": "996800"
  },
  {
    "text": "and then finally and perhaps most interestingly we've got the shared project and this is a really basic thing",
    "start": "996800",
    "end": "1002560"
  },
  {
    "text": "it's just a dotnet standard to our class library which you can just put any code in that you want to share between your",
    "start": "1002560",
    "end": "1008950"
  },
  {
    "text": "server and your client because I've set up references from the client project and the server project both to the",
    "start": "1008950",
    "end": "1015130"
  },
  {
    "text": "shared so they both get whatever code is in there and as an example I've put the weather forecast type in there so now if",
    "start": "1015130",
    "end": "1022150"
  },
  {
    "text": "I go and look at the forecasts on the client here you'll see that before I had the forecast defined as an inline class",
    "start": "1022150",
    "end": "1029110"
  },
  {
    "text": "here so the client was defining its own weather forecast type but now it doesn't it just gets that from the shared",
    "start": "1029110",
    "end": "1034329"
  },
  {
    "text": "project and similarly on the server the endpoint that we're calling this sample",
    "start": "1034330",
    "end": "1039939"
  },
  {
    "text": "data controller weather forecasts thing which is going to return the data well it doesn't define weather forecasts",
    "start": "1039940",
    "end": "1045819"
  },
  {
    "text": "either it gets that from the shared project so the point is whatever stuff we want to share between server and",
    "start": "1045820",
    "end": "1050950"
  },
  {
    "text": "client we just stick it in here and it's there and it's not just for data you can also use that for bits of logic as well",
    "start": "1050950",
    "end": "1056800"
  },
  {
    "text": "here I've got some logic that computes temperature Fahrenheit based on the sea and I could also put in things like",
    "start": "1056800",
    "end": "1063250"
  },
  {
    "text": "validation rules or other business logic that we want to share between client and server in an incredibly straightforward",
    "start": "1063250",
    "end": "1069160"
  },
  {
    "text": "Manor okay so those are three ways in which it can be really nice to build",
    "start": "1069160",
    "end": "1075850"
  },
  {
    "text": "this kind of application but there are various other benefits that we could talk about as well you know performance dotnet core on the server is just about",
    "start": "1075850",
    "end": "1082960"
  },
  {
    "text": "the fastest mainstream web platform that there is if you can check the independent tech and power benchmarks if",
    "start": "1082960",
    "end": "1090220"
  },
  {
    "text": "you want to verify that sort of thing yourself it's extremely fast we've got we've always had the best-in-class",
    "start": "1090220",
    "end": "1095950"
  },
  {
    "text": "tooling pretty much Microsoft has been well known for for having really outstanding industry-leading tools in",
    "start": "1095950",
    "end": "1101200"
  },
  {
    "text": "Visual Studio with the intellisense and debugging and all that kind of stuff so you know all that stuff comes with that and then finally in terms of stability",
    "start": "1101200",
    "end": "1107920"
  },
  {
    "text": "well in dotnet world the culture is basically we assume that your projects",
    "start": "1107920",
    "end": "1113950"
  },
  {
    "text": "are going to be around for like five years or ten years or something like that so we try really hard to keep",
    "start": "1113950",
    "end": "1119080"
  },
  {
    "text": "things stable over that kind of period and we're not just completely changing what set of libraries you're supposed to use every three months",
    "start": "1119080",
    "end": "1124690"
  },
  {
    "text": "now stuff does change sometimes but generally it's a more stable world that you might see in say JavaScript land",
    "start": "1124690",
    "end": "1131340"
  },
  {
    "text": "okay so that gives you some ideas about what this stuff is all about but I",
    "start": "1131340",
    "end": "1138100"
  },
  {
    "text": "haven't really shown you much about how it works on the inside yet so the way this stuff",
    "start": "1138100",
    "end": "1143470"
  },
  {
    "text": "works is that we've got three technologies stacked up on top of each other making this sort of technology",
    "start": "1143470",
    "end": "1149620"
  },
  {
    "text": "cupcake that we're able to enjoy and feel delighted by okay so at the bottom of our technology cake we're building",
    "start": "1149620",
    "end": "1156610"
  },
  {
    "text": "this stuff on web assembly and I've said to you already that web assembly is a way of running whatever kind of code you",
    "start": "1156610",
    "end": "1162730"
  },
  {
    "text": "want inside a browser but how does that work okay well web assembly is a bytecode format that's what the spec is",
    "start": "1162730",
    "end": "1168220"
  },
  {
    "text": "it says that here's a way of describing some programs in a low-level bytecode and browsers are supposed to implement",
    "start": "1168220",
    "end": "1174760"
  },
  {
    "text": "support for executing yet and the good news is they have implemented support for doing that all the mainstream ones including mobile ones have done that but",
    "start": "1174760",
    "end": "1182560"
  },
  {
    "text": "what does this bytecode look like you may well never have actually seen the bytecode itself or maybe you seen it but",
    "start": "1182560",
    "end": "1189070"
  },
  {
    "text": "you wouldn't really know how to create it yourself so let's have a go I'm gonna create a small web assembly application",
    "start": "1189070",
    "end": "1195040"
  },
  {
    "text": "right now well call it an application might be a stretch because it's going to be very very simple okay and this has got nothing to",
    "start": "1195040",
    "end": "1201430"
  },
  {
    "text": "do with dotnet too use blazer this is just going to be pure webassembly on its own so that you can",
    "start": "1201430",
    "end": "1206590"
  },
  {
    "text": "understand that right so why I've got here in this directory is a few files including Fibonacci C I expect you can",
    "start": "1206590",
    "end": "1214210"
  },
  {
    "text": "probably guess what that does but let me show you it's a simple C program that is going to compute the Fibonacci sequence",
    "start": "1214210",
    "end": "1220090"
  },
  {
    "text": "which is just a series of numbers that are defined mathematically it goes 1 2 3 5 8 and so on after that I can add but",
    "start": "1220090",
    "end": "1229990"
  },
  {
    "text": "that's how it works and my primitive nachi function is simply going to take the number of terms",
    "start": "1229990",
    "end": "1235270"
  },
  {
    "text": "that we want to print and it's going to say ok as long as you've got some more stuff to do then I'm going to print out",
    "start": "1235270",
    "end": "1240280"
  },
  {
    "text": "the current term I'll compute the next one and I'll print it I'll compute the next one I'll print it and so on until we run out of things to do so that's",
    "start": "1240280",
    "end": "1247330"
  },
  {
    "text": "written in C and as you know C doesn't normally run inside web browsers but thanks to web assembly we can compile C",
    "start": "1247330",
    "end": "1253570"
  },
  {
    "text": "to web assembly and then run it so let's have a go at that so I'm going to show you these are the files that we've got",
    "start": "1253570",
    "end": "1259090"
  },
  {
    "text": "right now but I'm going to compile Fibonacci see using the M script and C",
    "start": "1259090",
    "end": "1264370"
  },
  {
    "text": "compiler to produce something that can run inside a JavaScript runtime okay so",
    "start": "1264370",
    "end": "1269560"
  },
  {
    "text": "that compiles it takes a few seconds and when that's done you'll see we've now got these two new files Fibonacci j s",
    "start": "1269560",
    "end": "1276040"
  },
  {
    "text": "and Fibonacci dot wasum wasum webassembly is the actual binary bytecode format so we can't read that",
    "start": "1276040",
    "end": "1282460"
  },
  {
    "text": "directly it's just binary stuff but I'll show you what's in there in a second and the J s1 is a wrapper file that is",
    "start": "1282460",
    "end": "1288790"
  },
  {
    "text": "enable that intends to help you load it and run it inside the browser now that's",
    "start": "1288790",
    "end": "1294130"
  },
  {
    "text": "what I want to do I want to run it in my browser so I've got this index.html pipe file that I can load in my browser and",
    "start": "1294130",
    "end": "1299680"
  },
  {
    "text": "show you what's in there well it's extremely minimal not really even valid technically but it's going to work and",
    "start": "1299680",
    "end": "1304840"
  },
  {
    "text": "it's going to load this Fibonacci J s file and then run it so let's set up a little static HTTP server that I can use",
    "start": "1304840",
    "end": "1312520"
  },
  {
    "text": "to execute that stuff and then I'll go back to my browser and I'll go to localhost port 8080 and we'll have a",
    "start": "1312520",
    "end": "1320530"
  },
  {
    "text": "look in the browser console and we should see that indeed it is actually printing out those first 10 terms of the",
    "start": "1320530",
    "end": "1327400"
  },
  {
    "text": "Fibonacci series so we're running C inside the browser but how does it work what's going on really so we'll have a",
    "start": "1327400",
    "end": "1333430"
  },
  {
    "text": "look in the the debugger and actually in order to make this easier to understand I'm going to recompile this",
    "start": "1333430",
    "end": "1339179"
  },
  {
    "text": "with additional debugging support so I am compiling in debug mode and I'm going",
    "start": "1339179",
    "end": "1345510"
  },
  {
    "text": "to admit source maps as well and once I've done that and I go back into my browser and reload you'll see now we see",
    "start": "1345510",
    "end": "1352169"
  },
  {
    "text": "Fibonacci see shows up in the dev tools and if we click on that we can see our C source code here which is it which is",
    "start": "1352169",
    "end": "1359039"
  },
  {
    "text": "the stuff that we're running and I can even do things like set a breakpoint on there so if I hit reload we'll now hit",
    "start": "1359039",
    "end": "1365070"
  },
  {
    "text": "the breakpoint and it appears that we're stepping through C code that's executing inside the browser which is pretty cool",
    "start": "1365070",
    "end": "1371130"
  },
  {
    "text": "but we're not really actually executing C at all what we're really executing is the web assembly bytecode and it's just",
    "start": "1371130",
    "end": "1377940"
  },
  {
    "text": "been mapped to this source code by the source Maps so let's have a look at the actual byte code we can see that in here",
    "start": "1377940",
    "end": "1383970"
  },
  {
    "text": "now normally the Wesen file on disk is a binary file that you can't possibly read but Firefox is kind enough to represent",
    "start": "1383970",
    "end": "1391440"
  },
  {
    "text": "it to us in this kind of human readable format well I appreciate that you have",
    "start": "1391440",
    "end": "1397740"
  },
  {
    "text": "to be the right kind of human to read this but I think that we are the right humans to read this we can do this all",
    "start": "1397740",
    "end": "1403500"
  },
  {
    "text": "right so what is inside this crazy-looking thing well we can see it's got all these function imports and exports but I don't",
    "start": "1403500",
    "end": "1410190"
  },
  {
    "text": "really know what that most of that stuff is let's just search for print Fibonacci",
    "start": "1410190",
    "end": "1415470"
  },
  {
    "text": "okay so we can see here's our code this is the thing that we were writing and what does it do well all these",
    "start": "1415470",
    "end": "1421650"
  },
  {
    "text": "instructions what are they if you would look closely you might see that that's kind of similar to the dotnet",
    "start": "1421650",
    "end": "1428690"
  },
  {
    "text": "instruction language MS IL is so just like MS IL it's a stack based virtual",
    "start": "1428690",
    "end": "1434880"
  },
  {
    "text": "machine that operates on a fixed set of primitive types and so we can compile",
    "start": "1434880",
    "end": "1440130"
  },
  {
    "text": "whatever code we want to to this format as long as you've got the right kind of compiler for it and the sort of thing it",
    "start": "1440130",
    "end": "1445230"
  },
  {
    "text": "can do is it can do things like define functions it can have locals it can do loops it can do these numeric operations",
    "start": "1445230",
    "end": "1452010"
  },
  {
    "text": "like subtracting one and it can call out to system functions like here is where",
    "start": "1452010",
    "end": "1457559"
  },
  {
    "text": "it's calling the print thing okay so given that we can even set breakpoints",
    "start": "1457559",
    "end": "1463080"
  },
  {
    "text": "inside web assembly as well so let's do a reload on there and we should see that we've hit some",
    "start": "1463080",
    "end": "1468540"
  },
  {
    "text": "break points and we can start stepping through the actual web assembly code as well all right so I hope that somewhat",
    "start": "1468540",
    "end": "1475140"
  },
  {
    "text": "makes sense to you that that's what's at the bottom of the stack here we're able to compile stuff to this bytecode format",
    "start": "1475140",
    "end": "1481950"
  },
  {
    "text": "it then runs inside the browser and web assembly is really fast one of the key",
    "start": "1481950",
    "end": "1487200"
  },
  {
    "text": "design goals for web assembly from the beginning has been performance and generally speaking code that's compared",
    "start": "1487200",
    "end": "1493050"
  },
  {
    "text": "to web assembly runs within a factor of two of executing just natively if you compile it to native x64 machine code or",
    "start": "1493050",
    "end": "1500340"
  },
  {
    "text": "whatever else that you're normally target okay so that's the idea with web assembly and given all that we might",
    "start": "1500340",
    "end": "1507030"
  },
  {
    "text": "think well right let's run some dotnet on that how are we going to run down on it well the obvious way to run not on",
    "start": "1507030",
    "end": "1514590"
  },
  {
    "text": "web assembly would be to somehow compile the dotnet machine code the msi l2 web",
    "start": "1514590",
    "end": "1521430"
  },
  {
    "text": "assembly by code okay if we could somehow do that then we could just run it inside the browser so that would be cool but that's not actually what we've",
    "start": "1521430",
    "end": "1528300"
  },
  {
    "text": "done what we've done instead is we've taken a dotnet runtime and we've compiled that to web assembly so we're",
    "start": "1528300",
    "end": "1535260"
  },
  {
    "text": "not compiling your code to webassembly we've already compiled the runtime to webassembly and the runtime that we've",
    "start": "1535260",
    "end": "1541110"
  },
  {
    "text": "compiled is in fact mono and you might think why mono why did you why mono the",
    "start": "1541110",
    "end": "1547020"
  },
  {
    "text": "answer to that is that Microsoft has got three net runtimes that we share right now we've got the Donaire framework",
    "start": "1547020",
    "end": "1553040"
  },
  {
    "text": "which is the CLR we've got a dotnet core core CLR and then we've got mono",
    "start": "1553040",
    "end": "1559200"
  },
  {
    "text": "and these all have different places and different purposes the idea is that for you as a developer you don't have to",
    "start": "1559200",
    "end": "1564450"
  },
  {
    "text": "care which of these things your code is running on you code against dotnet standard and your code is going to run on any of them just the same but why did",
    "start": "1564450",
    "end": "1571860"
  },
  {
    "text": "we pick mono for this then well it's because mono is our preferred net runtime for portable client scenarios",
    "start": "1571860",
    "end": "1578340"
  },
  {
    "text": "Mona is a really portable code base and so it was the by far the most practical one for us to compile to web assembly so",
    "start": "1578340",
    "end": "1585480"
  },
  {
    "text": "that's what we've done and that is something that the dotnet team so that the mono team is committed to shipping",
    "start": "1585480",
    "end": "1590910"
  },
  {
    "text": "as a fully supported production runtime so that you can run your dotnet code",
    "start": "1590910",
    "end": "1596400"
  },
  {
    "text": "inside the browser on web assembly ok but how do work right I've just told you that this",
    "start": "1596400",
    "end": "1601520"
  },
  {
    "text": "thing exists but I've not really shown it to you so let me show you a little bit of mono running in on top of",
    "start": "1601520",
    "end": "1606770"
  },
  {
    "text": "webassembly and I can show you that inside the application that we've been building already what are we actually sending to the browser how does the",
    "start": "1606770",
    "end": "1613790"
  },
  {
    "text": "browser know to load mono and to execute our dotnet code inside it let's have a look at the HTML source code",
    "start": "1613790",
    "end": "1619790"
  },
  {
    "text": "alright so our HTML that we're sending to the browser is just normal HTML it's got a bunch of CSS and body tags and",
    "start": "1619790",
    "end": "1627440"
  },
  {
    "text": "things like that we've got this loading animated progress bar which is just static HTML that I've put in there but",
    "start": "1627440",
    "end": "1633950"
  },
  {
    "text": "nothing really interesting happens until we get to the bottom here where we load this javascript file components web",
    "start": "1633950",
    "end": "1639800"
  },
  {
    "text": "assembly is and that is something that's built into blazer so when you create",
    "start": "1639800",
    "end": "1645380"
  },
  {
    "text": "your new project with blazer that thing is already there you don't have to see it we just know how to serve that and",
    "start": "1645380",
    "end": "1650510"
  },
  {
    "text": "that file is what knows how to start up mono and load your application into it so let's see what the browser is really",
    "start": "1650510",
    "end": "1656600"
  },
  {
    "text": "doing if we open up the network tab here and I'm going to hit reload and then",
    "start": "1656600",
    "end": "1662060"
  },
  {
    "text": "we'll look closely at what stuff this thing has actually sent down to the browser so we send that initial HTML",
    "start": "1662060",
    "end": "1667430"
  },
  {
    "text": "that I just showed you and that contains instructions to load various things like CSS and then it loads components",
    "start": "1667430",
    "end": "1674090"
  },
  {
    "text": "webassembly j/s and that tells it to do a few more things to start up your application and importantly it loads",
    "start": "1674090",
    "end": "1680840"
  },
  {
    "text": "mono wasum and that's what I told you we've done with mono we've compiled it to a web assembly binary using M",
    "start": "1680840",
    "end": "1687530"
  },
  {
    "text": "scripting the same way that I compiled Fibonacci dot C to awesome the same thing has happened with the mono",
    "start": "1687530",
    "end": "1692630"
  },
  {
    "text": "codebase to make this file ok and then once that's been loaded we can load your",
    "start": "1692630",
    "end": "1697670"
  },
  {
    "text": "regular dotnet assemblies into it so we're not compiling these two web assembly they're just normal net dll's",
    "start": "1697670",
    "end": "1703670"
  },
  {
    "text": "that have been built by the normal c-sharp compiler and we could load them and run them inside the mono runtime",
    "start": "1703670",
    "end": "1709130"
  },
  {
    "text": "which itself is running on web assembly right so you may be thinking hang on",
    "start": "1709130",
    "end": "1715580"
  },
  {
    "text": "you're loading an entire dotnet runtime into the browser this is going to like hundreds of megabytes or something how",
    "start": "1715580",
    "end": "1721130"
  },
  {
    "text": "big is this thing and the answer to that is currently it's about two megabytes so for a dotnet",
    "start": "1721130",
    "end": "1727070"
  },
  {
    "text": "runtime he's small and we quite pleased with that but at the same time we're not pleased with that because two megabytes",
    "start": "1727070",
    "end": "1732639"
  },
  {
    "text": "is big for a webpage and there are a lot of scenarios where you want your application to be quite a bit smaller than two megabytes maybe you are",
    "start": "1732639",
    "end": "1739659"
  },
  {
    "text": "building some kind of internal line of business app and it doesn't matter to you at all we hear a lot of customers say like I don't care if it's 10 Meg's",
    "start": "1739659",
    "end": "1745539"
  },
  {
    "text": "that's fine with me but if you're trying to do some public facing thing you probably want it to be smaller so we're working quite hard and the mono team is",
    "start": "1745539",
    "end": "1752019"
  },
  {
    "text": "working hard on finding ways of cutting that size down but you know 2 Meg's is where we've got to at the moment of",
    "start": "1752019",
    "end": "1757149"
  },
  {
    "text": "course this is all cached so if the user comes back later they're not going to fetch any of that stuff a second time I only downloaded 227 kilobytes this time",
    "start": "1757149",
    "end": "1765820"
  },
  {
    "text": "and that's because I'm not even caching various things to do with bootstrap and other stuff you can make the size down",
    "start": "1765820",
    "end": "1771669"
  },
  {
    "text": "to kind of nearly zero when it's cached but it's 2 megabytes if it's not cached ok so that's how we're running mono on",
    "start": "1771669",
    "end": "1778869"
  },
  {
    "text": "top of web assembly final thing the topmost and most delicious most layer of",
    "start": "1778869",
    "end": "1784779"
  },
  {
    "text": "our technology stack is blazer and that is the UI framework that we've been using so that is the thing that is",
    "start": "1784779",
    "end": "1790720"
  },
  {
    "text": "defining not only how our application starts up but what all our components are and how they're able to interact",
    "start": "1790720",
    "end": "1797049"
  },
  {
    "text": "with each other right so I've shown you a bunch of components already but I've",
    "start": "1797049",
    "end": "1802749"
  },
  {
    "text": "only shown you some fairly simple ones you're an advanced and ambitious kind of group of people I think so wouldn't you",
    "start": "1802749",
    "end": "1808690"
  },
  {
    "text": "like to see some advanced components I think you would so let's go through two",
    "start": "1808690",
    "end": "1815110"
  },
  {
    "text": "scenarios where we can build some more interesting things with components ok we're gonna start with something that",
    "start": "1815110",
    "end": "1821230"
  },
  {
    "text": "sounds very smart indeed templates and generics how can we make some generic template or two components well what I",
    "start": "1821230",
    "end": "1829119"
  },
  {
    "text": "want to show you is let's look at this thing here I mentioned earlier that i'm",
    "start": "1829119",
    "end": "1834429"
  },
  {
    "text": "using this MVC list okay now what is that and how could we make our own",
    "start": "1834429",
    "end": "1839919"
  },
  {
    "text": "special list components ourselves doesn't remember what it looks like it's displaying this attractively formatted",
    "start": "1839919",
    "end": "1846820"
  },
  {
    "text": "list with icons and subtitles and things like that and that's all coming from this external component library but what",
    "start": "1846820",
    "end": "1852940"
  },
  {
    "text": "if we wanted to do this ourselves what if we didn't have MDC list let's get rid of it and implement it ourselves shall",
    "start": "1852940",
    "end": "1858970"
  },
  {
    "text": "we so and to show you what the equivalent inline code would be it's kind of scary",
    "start": "1858970",
    "end": "1864590"
  },
  {
    "text": "you're not gonna like the way it looks but this is how it is if we wanted to make this material design list just by",
    "start": "1864590",
    "end": "1871220"
  },
  {
    "text": "ourselves we'd create an unordered list and we'd put this massive pile of unpleasant-looking CSS classes on it and",
    "start": "1871220",
    "end": "1876950"
  },
  {
    "text": "then we'd say okay for each of the weather forecasts will iterate through it and then we'll make more and more markup during which will display the",
    "start": "1876950",
    "end": "1883880"
  },
  {
    "text": "icon and the date and the temperature and other things like that so let's see if our homemade material design list",
    "start": "1883880",
    "end": "1891890"
  },
  {
    "text": "works just the same as the the predefined one so let's come back and reload and it should render more or less the same",
    "start": "1891890",
    "end": "1898880"
  },
  {
    "text": "thing it's slightly different it's not displaying the temperature in Fahrenheit anymore but you know it's basically the same thing I just didn't make it exactly",
    "start": "1898880",
    "end": "1905060"
  },
  {
    "text": "the same okay so we can do this ourselves but once we've done this we don't want to keep reinventing this",
    "start": "1905060",
    "end": "1911630"
  },
  {
    "text": "every time we want some way of reusing this component over and over again the general idea of a material design list",
    "start": "1911630",
    "end": "1918110"
  },
  {
    "text": "so how can we make our own list component I'm gonna do that right now I'm going to add a new item and I'm",
    "start": "1918110",
    "end": "1924860"
  },
  {
    "text": "gonna choose where as a view and I'm going to call it super list all right so",
    "start": "1924860",
    "end": "1931550"
  },
  {
    "text": "what can I put in my super list well the first thing is let's think about what data our list is going to need we want",
    "start": "1931550",
    "end": "1938000"
  },
  {
    "text": "to be able to pass in the list of things to be rendered okay so I'm going to define a parameter on my list here a",
    "start": "1938000",
    "end": "1944930"
  },
  {
    "text": "parameter is just a property that's got this special parameter attribute and I can pass in an enumerable of weather",
    "start": "1944930",
    "end": "1951350"
  },
  {
    "text": "forecasts that we want to render and then I'm going to put some initial markup in outside this component and",
    "start": "1951350",
    "end": "1956720"
  },
  {
    "text": "it's going to be the same thing that we saw before so it's going to have all these CSS classes and it's going to say for each one of the things I'm going to",
    "start": "1956720",
    "end": "1962750"
  },
  {
    "text": "display something and initially I'm just going to display the date all right so let's keep it simple to get started with",
    "start": "1962750",
    "end": "1967970"
  },
  {
    "text": "and then over here on the consumer side let's get rid of all that markup and I should see in intellisense if my",
    "start": "1967970",
    "end": "1975350"
  },
  {
    "text": "intellisense was alive it's there yeah so I've got my super list here and I can",
    "start": "1975350",
    "end": "1981200"
  },
  {
    "text": "start making use of that okay but I want to pass in the list of forecasts to it",
    "start": "1981200",
    "end": "1986960"
  },
  {
    "text": "so that's what I'm going to do let's save that I'm going to rebuild and then we'll check that we are actually using",
    "start": "1986960",
    "end": "1992690"
  },
  {
    "text": "our super list component now remember sue palace only displays the dates and it does so in a very basic",
    "start": "1992690",
    "end": "1998179"
  },
  {
    "text": "and rubbish fashion so we've got some more work to do firstly I do not want to display the dates in this format I want",
    "start": "1998179",
    "end": "2004389"
  },
  {
    "text": "to be able to customize the format so what can I do here well I could have a parameter where you pass in a format",
    "start": "2004389",
    "end": "2010929"
  },
  {
    "text": "string or something like that but I want to be even more advanced than that I want to be able to pass in some arbitrary markup that describes the way",
    "start": "2010929",
    "end": "2018309"
  },
  {
    "text": "that the title is going to be rendered to this primary text so I'm going to define another parameter here and it's",
    "start": "2018309",
    "end": "2025570"
  },
  {
    "text": "going to be called title and the typing of it might be a little bit unfamiliar so it's going to be of type render",
    "start": "2025570",
    "end": "2032230"
  },
  {
    "text": "fragment that's a special type that components know about and that represents an arbitrary piece of user",
    "start": "2032230",
    "end": "2038080"
  },
  {
    "text": "interface so the person using the component can pass in whatever markup they want which can contain logic or",
    "start": "2038080",
    "end": "2043960"
  },
  {
    "text": "other components and we're able to render it from here so now instead of just rendering item date I'm going to",
    "start": "2043960",
    "end": "2051429"
  },
  {
    "text": "invoke title and I'm going to pass the item into it it's a generically typed render fragment",
    "start": "2051429",
    "end": "2057878"
  },
  {
    "text": "which operates on a weather forecast so I'm going to call it and so will render whatever markup has been passed in for",
    "start": "2057879",
    "end": "2064299"
  },
  {
    "text": "each item and now if I go back onto the consuming side here I should be able to",
    "start": "2064299",
    "end": "2070510"
  },
  {
    "text": "specify a title okay and I can put in here whatever I want to using this magic",
    "start": "2070510",
    "end": "2076628"
  },
  {
    "text": "keyword context okay and if I type that correctly like let's make sure I've got",
    "start": "2076629",
    "end": "2083408"
  },
  {
    "text": "the type correct and I try to type context then intellisense should say",
    "start": "2083409",
    "end": "2091000"
  },
  {
    "text": "okay I know what that is that is going to be a weather forecast so I'll prompt you with what all the properties that",
    "start": "2091000",
    "end": "2096398"
  },
  {
    "text": "are on weather forecasts okay so I want to display the date and I want to be able to display it in a particular",
    "start": "2096399",
    "end": "2102190"
  },
  {
    "text": "format so I'm going to pass a format string here to control that it gets",
    "start": "2102190",
    "end": "2107440"
  },
  {
    "text": "rendered like this right let's try this out let's see if we now rendering our dates in a more attractive format so we",
    "start": "2107440",
    "end": "2115839"
  },
  {
    "text": "reload and indeed we are now displaying it in the way that we wanted okay but I",
    "start": "2115839",
    "end": "2121690"
  },
  {
    "text": "don't just want to display the date I want to display things like an icon and summary text and other things like that",
    "start": "2121690",
    "end": "2127390"
  },
  {
    "text": "so I'm going to go back to my super list and I'm going to say you can pass in as many different templates as there are",
    "start": "2127390",
    "end": "2133329"
  },
  {
    "text": "things to do useful stuff with so I'm gonna say we're gonna have an item icon template a subtitle and actions and",
    "start": "2133329",
    "end": "2140260"
  },
  {
    "text": "we're going to make use of all those in the rendered output so let's get rid of this and I'm going to just paste in a",
    "start": "2140260",
    "end": "2145690"
  },
  {
    "text": "big chunk of stuff that displays the icon and the title and the subtitle and all that stuff okay and then back over",
    "start": "2145690",
    "end": "2152589"
  },
  {
    "text": "here on the caller side I can now pass not just a title but I can pass all the",
    "start": "2152589",
    "end": "2158140"
  },
  {
    "text": "other stuff the icon the summary I'm displaying the temperature in this particular format that I'm controlling",
    "start": "2158140",
    "end": "2163599"
  },
  {
    "text": "over here when I use my super list okay let's try this one more time",
    "start": "2163599",
    "end": "2168940"
  },
  {
    "text": "reload and now we should see okay great it's looking good we're displaying the icons we've got these things over here",
    "start": "2168940",
    "end": "2175180"
  },
  {
    "text": "on the right we've got pretty much only usable list but it's not completely reusable yet because at the moment is",
    "start": "2175180",
    "end": "2183220"
  },
  {
    "text": "completely hard-coded to work with weather forecasts what about if we want to rather render other things that are",
    "start": "2183220",
    "end": "2188289"
  },
  {
    "text": "not weather forecasts and this is where generics come into it so generic components are very very cool you can do",
    "start": "2188289",
    "end": "2195670"
  },
  {
    "text": "this I can say I want to declare a type parameter and that's just like a generic",
    "start": "2195670",
    "end": "2202990"
  },
  {
    "text": "parameter on a c-sharp class and so now instead of using weather forecast I'll say okay give me an enumerable of T",
    "start": "2202990",
    "end": "2210220"
  },
  {
    "text": "items and also a bunch of templates that in a strongly typed way operate on T",
    "start": "2210220",
    "end": "2215980"
  },
  {
    "text": "item okay and now I can render anything I want so then I can go back over here to where I use it and I can specify what",
    "start": "2215980",
    "end": "2222940"
  },
  {
    "text": "I want T item to be so let's say I want T item to be a weather forecast all right so now I can pass this list of",
    "start": "2222940",
    "end": "2229180"
  },
  {
    "text": "weather forecasts in and v/s knows that each one of these things is going to be",
    "start": "2229180",
    "end": "2234279"
  },
  {
    "text": "a weather forecast so we get the right intellisense okay but what's cool is still then that is what if we don't",
    "start": "2234279",
    "end": "2241059"
  },
  {
    "text": "specify what the type it is well that's great too because we've got generic type inference we don't have to specify what",
    "start": "2241059",
    "end": "2247299"
  },
  {
    "text": "it is the fact that the parameters we've passed give us enough information to know what the generic type is means that",
    "start": "2247299",
    "end": "2253450"
  },
  {
    "text": "it's just going to work anyway so we still have all the correct intellisense showing up",
    "start": "2253450",
    "end": "2258670"
  },
  {
    "text": "we are very happy people okay last thing we might want to do is it's a bit strange that we've got this word context",
    "start": "2258670",
    "end": "2264339"
  },
  {
    "text": "here but what is that why is that the right word so let's say we want to change that for something else let's say I want the variable to be called",
    "start": "2264339",
    "end": "2270730"
  },
  {
    "text": "forecast instead and now vs is going to say to us what is this context thing you're speaking of I don't know what",
    "start": "2270730",
    "end": "2276789"
  },
  {
    "text": "that is but I do know what forecast is because forecast is now the name for",
    "start": "2276789",
    "end": "2282279"
  },
  {
    "text": "each item here so I can change all these contexts to forecast and the code starts to make a lot more sense so we've pretty",
    "start": "2282279",
    "end": "2289119"
  },
  {
    "text": "much completely recreated everything that we had in the MDC list component",
    "start": "2289119",
    "end": "2294339"
  },
  {
    "text": "and we've made our own reuse of a list it's not limited to working with weather",
    "start": "2294339",
    "end": "2299710"
  },
  {
    "text": "forecasts it can work with anything all right so that's one type of advanced component let me give you another one",
    "start": "2299710",
    "end": "2305440"
  },
  {
    "text": "what about this cascading stay what is that it also sounds pretty advanced",
    "start": "2305440",
    "end": "2310539"
  },
  {
    "text": "right so all the components I've shown you so far they contain their own state they just",
    "start": "2310539",
    "end": "2317079"
  },
  {
    "text": "deal with their own little world and they don't have to interact with other components in any way but what if you need to have a way of coordinating stay",
    "start": "2317079",
    "end": "2324190"
  },
  {
    "text": "across all the different components in your application well there are many ways you can do that because this is",
    "start": "2324190",
    "end": "2329650"
  },
  {
    "text": "just a dotter application you can use whatever patterns you want with c-sharp and events and statics or dependency",
    "start": "2329650",
    "end": "2335079"
  },
  {
    "text": "injection whatever it is that you want to do but Blazer or components the",
    "start": "2335079",
    "end": "2340150"
  },
  {
    "text": "underlying UI technology have got a good feature for this that help you to coordinate stay across your application",
    "start": "2340150",
    "end": "2346029"
  },
  {
    "text": "so as an example of that let's imagine that I want to make my application fee",
    "start": "2346029",
    "end": "2351220"
  },
  {
    "text": "mobile I've got this purple button here but what if I want it to be different colors at certain times and I don't want",
    "start": "2351220",
    "end": "2357309"
  },
  {
    "text": "all my components to embed information about themes I want to just define that in a central place so I'm going to add a",
    "start": "2357309",
    "end": "2364480"
  },
  {
    "text": "new class and I'm gonna call it theme info and I can put whatever properties on here I want to represent stuff that I",
    "start": "2364480",
    "end": "2372430"
  },
  {
    "text": "can theme and what I'm going to put in is just this one thing call button class",
    "start": "2372430",
    "end": "2377980"
  },
  {
    "text": "I could put more stuff in if I wanted to but that'll do for now all right and now I want to be able to pass an instance of",
    "start": "2377980",
    "end": "2383529"
  },
  {
    "text": "this to all the components in my application so I could do this wherever I want but I'm going to go to my main",
    "start": "2383529",
    "end": "2388990"
  },
  {
    "text": "layout and I'm going to say okay I'm going to use this built-in thing called cascading value and that can provide a value to",
    "start": "2388990",
    "end": "2396850"
  },
  {
    "text": "all the parts of my UI that are inside this element and v/s is saying what do you want me to pass you haven't said so",
    "start": "2396850",
    "end": "2403720"
  },
  {
    "text": "I'm going to say what I want to pass is not that what I want to pass is this I",
    "start": "2403720",
    "end": "2414880"
  },
  {
    "text": "want to pass a new theme info okay so I'm creating a theme info and I'm saying the initial button class is this button",
    "start": "2414880",
    "end": "2421420"
  },
  {
    "text": "warning thing and I'm passing that to all the other parts of my application and so then I can receive a theme info",
    "start": "2421420",
    "end": "2428050"
  },
  {
    "text": "wherever I want to I'm going to go over to my to-do list which we saw earlier and I'm going to make a parameter where",
    "start": "2428050",
    "end": "2434590"
  },
  {
    "text": "I can get that current theme now as you know normally we use parameter to get parameters but this is not a normal",
    "start": "2434590",
    "end": "2440740"
  },
  {
    "text": "parameter this doesn't just come from my parent this comes from anywhere in the hierarchy above me so I'm going to have",
    "start": "2440740",
    "end": "2447070"
  },
  {
    "text": "a cascading parameter and so we can get the current theme cascading down through the UI and then up here on my button",
    "start": "2447070",
    "end": "2454180"
  },
  {
    "text": "instead of using button normal I'm going to use current theme button class so whatever it is that's on my theme so",
    "start": "2454180",
    "end": "2461710"
  },
  {
    "text": "let's build that now okay I'm going to come over and hit reload and so now",
    "start": "2461710",
    "end": "2466750"
  },
  {
    "text": "instead of that purple button you can see we've got a different colored button because that's coming from the theme which we've been sharing so that is how",
    "start": "2466750",
    "end": "2474310"
  },
  {
    "text": "we can supply static content but cascading value is cool because it's not just static stuff we can pass but also",
    "start": "2474310",
    "end": "2481120"
  },
  {
    "text": "stuff that changes so let's say I want to make this button class change I'm defining it as a field with an initial",
    "start": "2481120",
    "end": "2487600"
  },
  {
    "text": "value of button normal and I'm going to use that and then so that the user can edit it I'm going to put in a drop-down",
    "start": "2487600",
    "end": "2494650"
  },
  {
    "text": "list and it's going to be wired up to that button class so whatever you choose from here that's going to be the value",
    "start": "2494650",
    "end": "2500080"
  },
  {
    "text": "for this field and there's a few different options that we can use okay so now if I start my application again",
    "start": "2500080",
    "end": "2506830"
  },
  {
    "text": "the button is going to go back to being purple because that was our default theme but if I change it here I can have",
    "start": "2506830",
    "end": "2511990"
  },
  {
    "text": "orange or I can have blue and that theme information just automatically gets distributed through my application I",
    "start": "2511990",
    "end": "2518500"
  },
  {
    "text": "don't have to think about subscribing for changes or anything like that the is able to flow correctly throughout my",
    "start": "2518500",
    "end": "2524920"
  },
  {
    "text": "tree of components great so there we go there's two advanced scenarios for",
    "start": "2524920",
    "end": "2531400"
  },
  {
    "text": "components now that's all very well but this is stuff that we've already shipped if you've been using Blazer for the last",
    "start": "2531400",
    "end": "2537760"
  },
  {
    "text": "few months you've probably already seen that stuff and what you maybe you would like to see is stuff that we have not shipped yet what's coming soon what are",
    "start": "2537760",
    "end": "2544960"
  },
  {
    "text": "we working on all right so I'm gonna show you a few things now so let's start",
    "start": "2544960",
    "end": "2550390"
  },
  {
    "text": "with debugging now we've already got some debugging support we can already do some debugging in a browser if you're in",
    "start": "2550390",
    "end": "2556210"
  },
  {
    "text": "dance talk early this morning you will have seen that I'm gonna do a very quick recap of what we've already got just for",
    "start": "2556210",
    "end": "2562029"
  },
  {
    "text": "anyone who hasn't seen them so I'm gonna switch over to Chrome because that's the browser we're supporting debugging in",
    "start": "2562029",
    "end": "2567490"
  },
  {
    "text": "right now and I'm just going to make sure that I've cleaned my application and I'm gonna rebuild it everything to",
    "start": "2567490",
    "end": "2574180"
  },
  {
    "text": "give me the best chance of success here and then I'm going to start my application up when it's rebuilt and",
    "start": "2574180",
    "end": "2581250"
  },
  {
    "text": "then hopefully I'm going to show you how we can do some debugging inside the browser so I'm going to go over to",
    "start": "2581250",
    "end": "2587079"
  },
  {
    "text": "Chrome and I'm going to start my application up and I think all right how am I going to do this debugging then",
    "start": "2587079",
    "end": "2592630"
  },
  {
    "text": "because I can't really use vs because vs doesn't know about chrome you know in web application up webassembly",
    "start": "2592630",
    "end": "2599079"
  },
  {
    "text": "applications and I can't really use the browser dev tools because they only show me things to do with CSS and JavaScript",
    "start": "2599079",
    "end": "2605529"
  },
  {
    "text": "and things like that so how can I do bug dotnet code well we've set up a debugging server that",
    "start": "2605529",
    "end": "2610960"
  },
  {
    "text": "runs with your application that the browser can connect to in order to get information about what your application",
    "start": "2610960",
    "end": "2616299"
  },
  {
    "text": "is doing and if we look here it tells us use this debugging hotkey shift alt D",
    "start": "2616299",
    "end": "2621309"
  },
  {
    "text": "alright so let's try it as su happens if I press shift D well it opens a new window and it says ah it's not going to",
    "start": "2621309",
    "end": "2628660"
  },
  {
    "text": "work because the debugging server can't connect to your browser just yet because you're not listening for debug",
    "start": "2628660",
    "end": "2634509"
  },
  {
    "text": "connections in this browser so what you do is you copy this thing that it tells you about and close your browser start",
    "start": "2634509",
    "end": "2640750"
  },
  {
    "text": "it up using the instructions and then this time hopefully the debug server will be listening so if I press this tab",
    "start": "2640750",
    "end": "2647619"
  },
  {
    "text": "here and then I start it up then hopefully I can actually see not just",
    "start": "2647619",
    "end": "2653079"
  },
  {
    "text": "the usual stuff that I see not just the assess on the HTML but also the files from my project the sea shark files like",
    "start": "2653079",
    "end": "2661089"
  },
  {
    "text": "here and even the CS HTML files like here okay and what's more I can set",
    "start": "2661089",
    "end": "2667660"
  },
  {
    "text": "breakpoints so let's say I put a breakpoint here when we try to add an item to our to-do list and just so we",
    "start": "2667660",
    "end": "2673240"
  },
  {
    "text": "can see let's split the windows and then I'll try to add an item here and when I do it hits the breakpoint inside the",
    "start": "2673240",
    "end": "2679690"
  },
  {
    "text": "browser so that's pretty cool right we're able to do some net debugging inside the browser very good but this is",
    "start": "2679690",
    "end": "2686319"
  },
  {
    "text": "old news this shipped months ago wouldn't it be nice if there was a way",
    "start": "2686319",
    "end": "2691420"
  },
  {
    "text": "of doing the same debugging but not inside the browser but where your surf code actually is inside Visual Studio",
    "start": "2691420",
    "end": "2698049"
  },
  {
    "text": "that's not been a thing that we've had support for but would be nice wouldn't it so let's see if we can make it work",
    "start": "2698049",
    "end": "2703299"
  },
  {
    "text": "shall we I want to make Visual Studio connect to this browser so I'm going to copy the URL and I'm gonna do attach to",
    "start": "2703299",
    "end": "2710799"
  },
  {
    "text": "process and I'm gonna choose the chrome dev tools protocol and I'll put in the URL of my application and v/s will go",
    "start": "2710799",
    "end": "2718569"
  },
  {
    "text": "and look and I'll say oh yes I've seen that you've got a blazer application running side the browser there so let's",
    "start": "2718569",
    "end": "2724089"
  },
  {
    "text": "do that shall we so I'll double click on this thing and v/s will say what kind of code would you like to debug and you'll",
    "start": "2724089",
    "end": "2729849"
  },
  {
    "text": "say well I'll choose the only thing that you'll give them the option to so I don't know why asking me and then I'll choose ok and now es is connected to",
    "start": "2729849",
    "end": "2738069"
  },
  {
    "text": "with the browser and so now I'm going to try putting a breakpoint on my c-sharp code here inside the IDE and then I'll",
    "start": "2738069",
    "end": "2745000"
  },
  {
    "text": "type something in blue and then I'll click my button and we've paused Brewed bizarrely it says Visual Studio",
    "start": "2745000",
    "end": "2750700"
  },
  {
    "text": "code but if I switch over here is actually hit the breakpoint inside my IDE so we've now got the IDE connected",
    "start": "2750700",
    "end": "2757119"
  },
  {
    "text": "to the dotnet runtime running on web assembly inside the browser and we can actually debug ok so there's some things",
    "start": "2757119",
    "end": "2764619"
  },
  {
    "text": "about debugging work right now but most of them don't as an example of something that does work we've got this very cool",
    "start": "2764619",
    "end": "2770680"
  },
  {
    "text": "thing where we can show you the call stack that goes across different language types so if we look at the",
    "start": "2770680",
    "end": "2776500"
  },
  {
    "text": "bottom you can see that when I click that button it's started by hitting it a javascript event inside component",
    "start": "2776500",
    "end": "2782440"
  },
  {
    "text": "webassembly j/s that's how we know that the event happened it goes through various layers inside javascript it then",
    "start": "2782440",
    "end": "2788660"
  },
  {
    "text": "goes through various layers inside webassembly before it finally lands on my c-sharp code so you can debug calls",
    "start": "2788660",
    "end": "2795710"
  },
  {
    "text": "that go from c-sharp into JavaScript or from JavaScript back into c-sharp and you can step through the the chains of",
    "start": "2795710",
    "end": "2803869"
  },
  {
    "text": "calls that go across languages like that so that works really nicely but most other things don't work we're working on",
    "start": "2803869",
    "end": "2809270"
  },
  {
    "text": "it and we will get some nice debugging as we go forwards okay so that's where",
    "start": "2809270",
    "end": "2815510"
  },
  {
    "text": "we're going next with debugging right can we make our applications start up",
    "start": "2815510",
    "end": "2820549"
  },
  {
    "text": "any faster well isn't it fast enough for you already let's have a look okay let's go to my home page here and let's see",
    "start": "2820549",
    "end": "2827390"
  },
  {
    "text": "how long it takes for my application to start so when I hit this button we can see that it does that sort of progress bar thing which is a bit weird but it is",
    "start": "2827390",
    "end": "2834530"
  },
  {
    "text": "doing it and the reason why it takes about one second for it to start up is because this is the time where we're",
    "start": "2834530",
    "end": "2840380"
  },
  {
    "text": "fetching mono and we're starting it up and we start on your application up and so we have to show a progress bar while",
    "start": "2840380",
    "end": "2845390"
  },
  {
    "text": "that's happening but you may think you know what would be way cooler than a progress bar what the user would like to",
    "start": "2845390",
    "end": "2851329"
  },
  {
    "text": "see instead of a progress bar the actual application if you don't mind that would be way cooler so how could we do that",
    "start": "2851329",
    "end": "2858410"
  },
  {
    "text": "then well we've got these components right and they run on web assembly they run inside a browser and they don't out",
    "start": "2858410",
    "end": "2864410"
  },
  {
    "text": "components and we've got a dotnet server so if you think about it couldn't we run these components on the server as well",
    "start": "2864410",
    "end": "2870349"
  },
  {
    "text": "and then we could render the application on the server get its initial rendered HTML send that to the browser and then",
    "start": "2870349",
    "end": "2876470"
  },
  {
    "text": "while the web assembly stuff is starting up the users already seeing the application UI that would be a lot",
    "start": "2876470",
    "end": "2881480"
  },
  {
    "text": "better than a progress bar let's see if we can do that then so I'm gonna go over to the thing that defines my HTML okay",
    "start": "2881480",
    "end": "2888079"
  },
  {
    "text": "you saw this in the browser earlier you saw this is where we've got this static HTML progress bar I do not want to see",
    "start": "2888079",
    "end": "2894349"
  },
  {
    "text": "this progress bar anymore what I want to see instead of that is my actual application getting rendered so I can",
    "start": "2894349",
    "end": "2900650"
  },
  {
    "text": "say all right then we're going to render a component asynchronously and the component I'm rendering is my entire",
    "start": "2900650",
    "end": "2906410"
  },
  {
    "text": "application because remember components are everything your whole application is a component the pages of components",
    "start": "2906410",
    "end": "2912140"
  },
  {
    "text": "layers governor's everything's a component and I've got a component called app which is the whole thing and that's what I want to render for",
    "start": "2912140",
    "end": "2917420"
  },
  {
    "text": "whichever page you're currently on ok so let's see if this does its job correctly",
    "start": "2917420",
    "end": "2922700"
  },
  {
    "text": "so now I'm going to press reload and let's see if we see a progress bar this time we do not see a progress bar that's",
    "start": "2922700",
    "end": "2929060"
  },
  {
    "text": "a little better how fast is this thing starting up let's go to a new browser tab I'll put in the",
    "start": "2929060",
    "end": "2934610"
  },
  {
    "text": "URL I'll hit go and boom my UI pause strangely there but let's try that one more time and then boom it's really",
    "start": "2934610",
    "end": "2940790"
  },
  {
    "text": "quick okay no progress bar the application just comes up it's still an interactive application because we've",
    "start": "2940790",
    "end": "2947060"
  },
  {
    "text": "loaded the web assembly stuff in the background okay and if you want to quantify how fast this stuff is really",
    "start": "2947060",
    "end": "2952400"
  },
  {
    "text": "getting rendered on the server let's have a look inside the browser Network tab here and I'm going to hit reload",
    "start": "2952400",
    "end": "2958160"
  },
  {
    "text": "again okay right then let's have a look you'll see that we are rendering that",
    "start": "2958160",
    "end": "2964190"
  },
  {
    "text": "initial HTML there in 26 milliseconds so that is pretty fast that is a lot faster",
    "start": "2964190",
    "end": "2970310"
  },
  {
    "text": "than that 1 or 2 seconds that we were waiting before and the actual overhead of rendering your razor components is",
    "start": "2970310",
    "end": "2976450"
  },
  {
    "text": "really close to zero if you return a page that just returns HelloWorld is basically the same so the performance is",
    "start": "2976450",
    "end": "2983870"
  },
  {
    "text": "really something I'm extremely happy with so that is doing server-side pre-rendering to make your application",
    "start": "2983870",
    "end": "2990770"
  },
  {
    "text": "start up near instantly even while the web assembler stuff is loading in the background and one of the",
    "start": "2990770",
    "end": "2996560"
  },
  {
    "text": "cool thing that you can do with that although I don't know maybe you'll think this is not cool but I kind of think it's cool in a sort of retro old-school",
    "start": "2996560",
    "end": "3002230"
  },
  {
    "text": "way is what if we wanted to make a traditional server rendered application now we didn't want any of this web",
    "start": "3002230",
    "end": "3007780"
  },
  {
    "text": "assembly stuff let's just delete that script tag completely what's going to happen now okay let's find out so I'm",
    "start": "3007780",
    "end": "3015550"
  },
  {
    "text": "going to go to this weather forecast page here which is was already running when I hit reload it's not going to load",
    "start": "3015550",
    "end": "3021160"
  },
  {
    "text": "any web assembly stuff at all now this is a pure server rendered application like a traditional MVC server-side",
    "start": "3021160",
    "end": "3028330"
  },
  {
    "text": "application that just returns HTML to the browser if I look here it looks kind of disgusting so we haven't sorted out",
    "start": "3028330",
    "end": "3033790"
  },
  {
    "text": "all the formatting yet but if you look closely this is the HTML markup that all the components are generating so it's a",
    "start": "3033790",
    "end": "3040660"
  },
  {
    "text": "pure server rendered HTML application now and some parts of it still work for",
    "start": "3040660",
    "end": "3046090"
  },
  {
    "text": "example any links HTML links still work so I can navigate backwards and forwards",
    "start": "3046090",
    "end": "3051160"
  },
  {
    "text": "through this list but other things will not work for example my navigation menu will not work because that is built with",
    "start": "3051160",
    "end": "3057880"
  },
  {
    "text": "an interactive component so if you wanted to you can use components for pure server-side rendering if you want",
    "start": "3057880",
    "end": "3064180"
  },
  {
    "text": "but honestly that's not the best thing to do best thing is to make them be interactive as well okay right then last",
    "start": "3064180",
    "end": "3071920"
  },
  {
    "text": "thing can we make our code run faster well is it not fast already how fast is",
    "start": "3071920",
    "end": "3078999"
  },
  {
    "text": "it should we try and have a way of quantifying how fast our code is actually executing well that's why I've",
    "start": "3078999",
    "end": "3085150"
  },
  {
    "text": "got this thing here called primes alright and we are going to be able to compute prime numbers all right let's",
    "start": "3085150",
    "end": "3091359"
  },
  {
    "text": "get the tenth prime number that's twenty nine let's get the thousandth prime number okay that's have the ten",
    "start": "3091359",
    "end": "3096400"
  },
  {
    "text": "thousandth prime number it's like a hundred thousand something and it's taken as three hundred and sixty",
    "start": "3096400",
    "end": "3101499"
  },
  {
    "text": "milliseconds to compute that okay why did it take that long well let's have a look at the code for this I'm going to",
    "start": "3101499",
    "end": "3107380"
  },
  {
    "text": "look at this component called Prime's and it's got this text field while you type in which prime you want it's got a",
    "start": "3107380",
    "end": "3113499"
  },
  {
    "text": "button that's going to submit to this calculate method here and calculate is",
    "start": "3113499",
    "end": "3118690"
  },
  {
    "text": "going to call a method on a library that I've written called super maths and that is maths not math for the Americans dot",
    "start": "3118690",
    "end": "3125349"
  },
  {
    "text": "Prime's compute n Prime okay and if we look at the code inside that it's a very",
    "start": "3125349",
    "end": "3131380"
  },
  {
    "text": "very brain-dead simple algorithm it's just going to do absolute brute force it's going to consider for all the",
    "start": "3131380",
    "end": "3137499"
  },
  {
    "text": "numbers is it prime by checking all the possible divisors and then you know we're just going to keep doing that until we get to whichever one that you",
    "start": "3137499",
    "end": "3143589"
  },
  {
    "text": "asked for very very simple and quite computationally expensive and we see that it takes about 350 milliseconds",
    "start": "3143589",
    "end": "3151390"
  },
  {
    "text": "here now if we compare that in running",
    "start": "3151390",
    "end": "3157630"
  },
  {
    "text": "it natively how fast is it going to be so to find out I've created a normal console app here called normal console",
    "start": "3157630",
    "end": "3164799"
  },
  {
    "text": "app and if we look in the program main of that you'll see it calls the same thing it calls the same compute and the",
    "start": "3164799",
    "end": "3170469"
  },
  {
    "text": "prime thing so let's set that as I start a project and run it and see how fast this stuff really should be okay",
    "start": "3170469",
    "end": "3176529"
  },
  {
    "text": "it should be able to do this in like 12 or 13 milliseconds if it's running under JIT compiled native code and so it's not",
    "start": "3176529",
    "end": "3184719"
  },
  {
    "text": "super honestly that it's taking 360 milliseconds we've got this slight factor of 20 or 30 slow down going on there and in",
    "start": "3184719",
    "end": "3192430"
  },
  {
    "text": "fact it's significantly worse still if we go over into chrome let's see what it's like here in chrome world okay",
    "start": "3192430",
    "end": "3198520"
  },
  {
    "text": "let's make sure I've got my application started up give me the ten thousandth prime please go and waiting oh okay so",
    "start": "3198520",
    "end": "3206650"
  },
  {
    "text": "it's done it but it's taken a rather terrifying almost two seconds to do that why is it so slow then the reason this",
    "start": "3206650",
    "end": "3213430"
  },
  {
    "text": "is so much slower is because when we're running your dotnet code on the mono web assembly runtime",
    "start": "3213430",
    "end": "3218440"
  },
  {
    "text": "we're actually interpreting yet we're not yet compiling it because this is something that is extremely difficult to",
    "start": "3218440",
    "end": "3223960"
  },
  {
    "text": "do under web assembly maybe we'll get there that's not what we're doing yet all right so this might seem kind of",
    "start": "3223960",
    "end": "3229300"
  },
  {
    "text": "terrifying that we've got such a massive slowdown now as for how much of a problem this is it depends what kind of",
    "start": "3229300",
    "end": "3234849"
  },
  {
    "text": "app you're building we've designed blazer to be able to produce really rich and sophisticated you is that up day",
    "start": "3234849",
    "end": "3241809"
  },
  {
    "text": "faster than humans can perceive it even when you get to very complex you eyes so",
    "start": "3241809",
    "end": "3247500"
  },
  {
    "text": "I'm reasonably confident that you can build something big and complex and your users are just going to regard it as",
    "start": "3247500",
    "end": "3253059"
  },
  {
    "text": "being updating instantly because we've got this very optimized UI code path but",
    "start": "3253059",
    "end": "3258490"
  },
  {
    "text": "if you want to do something CPU intensive obviously it's not such a rosy scenario but there are ways that we can",
    "start": "3258490",
    "end": "3265720"
  },
  {
    "text": "make this better so what if instead of running on an interpreter we were able",
    "start": "3265720",
    "end": "3271119"
  },
  {
    "text": "to compile your dotnet code to bare metal web assembly ahead of time and then execute that in the browser instead",
    "start": "3271119",
    "end": "3277720"
  },
  {
    "text": "of running it through an interpreter and that is something that the mono team has been hard worker for quite a while and",
    "start": "3277720",
    "end": "3283210"
  },
  {
    "text": "they're pretty close to being ready with this so I'm going to show you a little example right now this is just a proof",
    "start": "3283210",
    "end": "3288849"
  },
  {
    "text": "of concept that's separate from what the mono team has done just to give you an idea of what the developer experience might be like so I'm going to look at my",
    "start": "3288849",
    "end": "3296049"
  },
  {
    "text": "project file here for my app document that's the blazer application here and you can see that this is where we're",
    "start": "3296049",
    "end": "3301329"
  },
  {
    "text": "referencing super maths and I'm going to put a little bit of extra instructions here to say when we reference that I",
    "start": "3301329",
    "end": "3307960"
  },
  {
    "text": "don't want to load it as a dotnet diello I want to ahead of time compile it okay and then just because this is a hacky",
    "start": "3307960",
    "end": "3314619"
  },
  {
    "text": "prototype I've put together I'm going to have to go to my index CS HTML and put",
    "start": "3314619",
    "end": "3319780"
  },
  {
    "text": "in a reference for this other thing the a RT loader that that I've made all",
    "start": "3319780",
    "end": "3324820"
  },
  {
    "text": "right so now when we compile this the application is going to be a little different because some of it is going to",
    "start": "3324820",
    "end": "3330130"
  },
  {
    "text": "be ahead of time compiled so let's reload here inside the browser and I'm going to look inside the browser dev",
    "start": "3330130",
    "end": "3337000"
  },
  {
    "text": "tools here because what I want you to see is that if we look in this framework directory with all the web assembly",
    "start": "3337000",
    "end": "3342790"
  },
  {
    "text": "stuff we've not just got mono des awesome we've now also got super maths awesome",
    "start": "3342790",
    "end": "3347800"
  },
  {
    "text": "where we've compiled the dotnet assembly to native bytecode and if I look at that okay so I have to refresh to see it but",
    "start": "3347800",
    "end": "3354640"
  },
  {
    "text": "if i refresh then we look in there you can see this is the web assembly translation of our dotnet code and we've",
    "start": "3354640",
    "end": "3361270"
  },
  {
    "text": "exported this function and compute F Prime and the implementation of it in just native web assembly has been",
    "start": "3361270",
    "end": "3366790"
  },
  {
    "text": "generated right there okay but is it actually any faster shall we find out so let's say if I want the 10th prime well",
    "start": "3366790",
    "end": "3373090"
  },
  {
    "text": "that's text in no time at all by the time we've got it running if we've that want the 10,000th Prime is it still",
    "start": "3373090",
    "end": "3378310"
  },
  {
    "text": "going to take 300 milliseconds it now takes 1819 milliseconds so we've had a",
    "start": "3378310",
    "end": "3383740"
  },
  {
    "text": "fantastic speed increase very very close to the 1314 milliseconds that we're",
    "start": "3383740",
    "end": "3389410"
  },
  {
    "text": "getting running natively and in fact it's even better if we go over into Chrome and we try to get that one there",
    "start": "3389410",
    "end": "3396010"
  },
  {
    "text": "so give me the ten thousands Prime and it's going to come back in ten milliseconds so it's actually faster",
    "start": "3396010",
    "end": "3401920"
  },
  {
    "text": "than running natively now well not really okay that's this hugely misleading the most biggest way in which",
    "start": "3401920",
    "end": "3407860"
  },
  {
    "text": "this is misleading is I'm running in debug mode here if I ran with release optimizations the native one would be a",
    "start": "3407860",
    "end": "3413290"
  },
  {
    "text": "bit faster but not much faster so my point with this is not to say which one is faster out of web assembly or native",
    "start": "3413290",
    "end": "3419230"
  },
  {
    "text": "the point is just to say that with a RT compilation it's completely reasonable for your dotnet code to run",
    "start": "3419230",
    "end": "3425710"
  },
  {
    "text": "approximately the same speed or within the ballpark of the same speed of running natively so you can do super CPU",
    "start": "3425710",
    "end": "3432970"
  },
  {
    "text": "intensive stuff if you want to though hopefully you don't even need to if you're just doing UI stuff ok so there",
    "start": "3432970",
    "end": "3439660"
  },
  {
    "text": "is some stuff that is coming soon that we have not shipped yet okay so we're getting close to running out of time now",
    "start": "3439660",
    "end": "3446710"
  },
  {
    "text": "I'm just going to give you a quick overview if you weren't down to talk this morning you saw this before these components that we're building their",
    "start": "3446710",
    "end": "3452950"
  },
  {
    "text": "designs work in multiple environments so I've shown you these components running inside the browser on web assembly",
    "start": "3452950",
    "end": "3458780"
  },
  {
    "text": "updating the Dom directly we've got a feature that's going to a spinet core 300 which is a you know a committed",
    "start": "3458780",
    "end": "3465500"
  },
  {
    "text": "shipping production thing where you can run the same components that work under web assembly and you can execute them on",
    "start": "3465500",
    "end": "3471350"
  },
  {
    "text": "the server in an interactive mode where all of the execution lives on the server and the browser doesn't see any web",
    "start": "3471350",
    "end": "3477350"
  },
  {
    "text": "assembly at all and all the updates take place over a real-time WebSocket connection which is super if you want to",
    "start": "3477350",
    "end": "3484100"
  },
  {
    "text": "make a very thin client so you've got low end devices that you want to run your components well you run them on the",
    "start": "3484100",
    "end": "3489200"
  },
  {
    "text": "server and you just to push the UI updates over the channel it gives you access to the full dotnet runtime and could simplify your code in various ways",
    "start": "3489200",
    "end": "3495560"
  },
  {
    "text": "it also has some drawbacks like you can't do this offline the client-side applications can work truly offline if",
    "start": "3495560",
    "end": "3501200"
  },
  {
    "text": "you want them to but the ones that run on the server they can't because you know it's using the server to actually update the UI if you've also got the",
    "start": "3501200",
    "end": "3507710"
  },
  {
    "text": "latency between the you know the browser and the server and you're using up your server resources but pros and cons and",
    "start": "3507710",
    "end": "3513470"
  },
  {
    "text": "they're good for different scenarios the final thing the final case where you can run these components that's not client",
    "start": "3513470",
    "end": "3520610"
  },
  {
    "text": "side or server side you might be thinking what hang on client side and server side that's the whole universe isn't it there's not there's no other",
    "start": "3520610",
    "end": "3526430"
  },
  {
    "text": "side to this but there is another side to it which is what if you want to write a native desktop application with",
    "start": "3526430",
    "end": "3531890"
  },
  {
    "text": "something like electron well you can run the same components there as well and we can update the applicant the UI directly",
    "start": "3531890",
    "end": "3539120"
  },
  {
    "text": "inside electron it give you a very rapid example of that we did a little work",
    "start": "3539120",
    "end": "3545060"
  },
  {
    "text": "exercise to try porting the Azure storage Explorer application to run inside blazer on electron so this is the",
    "start": "3545060",
    "end": "3553880"
  },
  {
    "text": "Asha storage blacks pleura and it is a blazer the set of blazer components",
    "start": "3553880",
    "end": "3558920"
  },
  {
    "text": "running inside electron so we've used the same web technologies that you see me use and we can make something that",
    "start": "3558920",
    "end": "3564350"
  },
  {
    "text": "say you know looks and feels just like a native application we've got this grid with a hundred thousand rows in air",
    "start": "3564350",
    "end": "3569930"
  },
  {
    "text": "we've got tabs we've got native right-click menus we can do network access we can interact with things like",
    "start": "3569930",
    "end": "3577360"
  },
  {
    "text": "operating system services so for example let's see what Andrew nurse has been put",
    "start": "3577360",
    "end": "3583160"
  },
  {
    "text": "into these blob stores open this item here and that's going to show up as a you know inside the native",
    "start": "3583160",
    "end": "3589580"
  },
  {
    "text": "windows image editor so we can interact with the operating system properly from electron so point I've shown you all",
    "start": "3589580",
    "end": "3596540"
  },
  {
    "text": "that is this component model that we're giving you now is designed to be incredibly flexible it can run under web",
    "start": "3596540",
    "end": "3601880"
  },
  {
    "text": "assembly it can run on the server it can run on electron and your same UI components can work in all of those",
    "start": "3601880",
    "end": "3607880"
  },
  {
    "text": "places so that is all I'm gonna have time to show you if you want to try out blazer I'd recommend you do surf there's",
    "start": "3607880",
    "end": "3614540"
  },
  {
    "text": "a lot to learn we've got some documentation site there's lots of good community projects that are springing up around blazer and",
    "start": "3614540",
    "end": "3620810"
  },
  {
    "text": "the whole a spinet core components system so you should go and try them out to do that you should go to blazer",
    "start": "3620810",
    "end": "3626330"
  },
  {
    "text": "dotnet and that give you all the instructions about how to set things up and you can try that out and you know",
    "start": "3626330",
    "end": "3631760"
  },
  {
    "text": "make yourself a happier and more productive person so that's all hope you enjoy the rest of the conference",
    "start": "3631760",
    "end": "3637010"
  },
  {
    "text": "remember to evaluate this session [Applause]",
    "start": "3637010",
    "end": "3646550"
  }
]