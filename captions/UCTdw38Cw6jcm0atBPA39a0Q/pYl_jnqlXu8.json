[
  {
    "text": "okay that should be it hello everybody I'm making this video",
    "start": "0",
    "end": "5160"
  },
  {
    "text": "not today later today at 12 30. today we're here for the second day of NDC",
    "start": "5160",
    "end": "11160"
  },
  {
    "text": "hope you had the first fantastic day we had to talk about controllers and",
    "start": "11160",
    "end": "16379"
  },
  {
    "text": "minimal apis and this talk is as much about controllers as much as it is about",
    "start": "16379",
    "end": "22380"
  },
  {
    "text": "minimal apis and also what they mean for the future of.net in general",
    "start": "22380",
    "end": "27840"
  },
  {
    "text": "so just a quick intro I'm Nick Heim I'm a bunch of stuff if you know me you",
    "start": "27840",
    "end": "33719"
  },
  {
    "text": "probably know me from YouTube actually how many of you know me from YouTube that's a good amount there okay for the",
    "start": "33719",
    "end": "39719"
  },
  {
    "text": "rest of you you have to go and subscribe that's a requirement for this talk um I'm also turning 30 in April so I",
    "start": "39719",
    "end": "45899"
  },
  {
    "text": "thought it's a great idea to start my own podcast which seems to be also a legal requirement so if you want to see",
    "start": "45899",
    "end": "50940"
  },
  {
    "text": "some interesting podcasts with some amazing talks um or discussions with people like Damien Edwards mods for the future",
    "start": "50940",
    "end": "57000"
  },
  {
    "text": "of.net and C sharp I highly recommend you go ahead and check that out um and also just a quick plug if you",
    "start": "57000",
    "end": "63899"
  },
  {
    "text": "like topics like minimal apis testing or dependency injection or other things that can really take your skills to the",
    "start": "63899",
    "end": "70020"
  },
  {
    "text": "next level then I have my own courses at nickjazza.com I highly recommend you check that out now there's a show of",
    "start": "70020",
    "end": "76680"
  },
  {
    "text": "hands has any of you seen this talk already from NBC London last year the hell are you doing here",
    "start": "76680",
    "end": "84060"
  },
  {
    "text": "like I mean it hasn't really changed that much but um thank you for being",
    "start": "84060",
    "end": "89880"
  },
  {
    "text": "here now how many of you know what minimal apis are you see",
    "start": "89880",
    "end": "97079"
  },
  {
    "text": "okay that's a good number that's way better than last time and how many of you have them in production",
    "start": "97079",
    "end": "104759"
  },
  {
    "text": "that's really good and if the remaining people who actually",
    "start": "104759",
    "end": "110579"
  },
  {
    "text": "know who they are who who do you think or just raise your hand how many of you would never use them in production or",
    "start": "110579",
    "end": "117119"
  },
  {
    "text": "think will never use them in production don't be afraid this is a safe space",
    "start": "117119",
    "end": "122520"
  },
  {
    "text": "I saw you okay so fun fact minimal apis are actually the most loved feature of the",
    "start": "122520",
    "end": "129060"
  },
  {
    "text": "dotnet6 release by far I mean when they came out everybody just instantly loved",
    "start": "129060",
    "end": "134520"
  },
  {
    "text": "them it was amazing to see the community just come together on Twitter and really Embrace and hug this awesome feature",
    "start": "134520",
    "end": "141720"
  },
  {
    "text": "that really removes that barrier to entry of making a new API with tons of controllers and the startup.cs and",
    "start": "141720",
    "end": "148319"
  },
  {
    "text": "program.cs and making it extremely easy obviously this is a very long-winded joke people hated it",
    "start": "148319",
    "end": "154920"
  },
  {
    "text": "um and some of them really still do they think it is not for them and they think that the asp.net core team is actually",
    "start": "154920",
    "end": "160319"
  },
  {
    "text": "wasting their time doing all this now let's see if that is true by the end",
    "start": "160319",
    "end": "165780"
  },
  {
    "text": "of this talk but you might be for those of you who did not raise your hands what are minimal apis Nick well I could have a",
    "start": "165780",
    "end": "173220"
  },
  {
    "text": "very fancy quote and just explain what it is but really there is nothing that describes the minimal apis are better",
    "start": "173220",
    "end": "179640"
  },
  {
    "text": "than this this is fundamentally what minimal apis are these four lines of code are a valid",
    "start": "179640",
    "end": "186780"
  },
  {
    "text": "API you can take right now and run ingot.net six and Beyond code base and it will",
    "start": "186780",
    "end": "194280"
  },
  {
    "text": "work there's a bit of a lie on this quote there's actually a CS prods required for this to run because you",
    "start": "194280",
    "end": "200099"
  },
  {
    "text": "need to specify that this is a.net project but as long as you have that there you can do dotted run and we run",
    "start": "200099",
    "end": "205440"
  },
  {
    "text": "you're going to have a single hello world endpoint now for those of you who haven't touched",
    "start": "205440",
    "end": "210959"
  },
  {
    "text": "C sharp in a long time you might be like okay how is that even possible we're gonna see that but before we see that I",
    "start": "210959",
    "end": "217319"
  },
  {
    "text": "want to talk about the five fundamental points you have in here so the first",
    "start": "217319",
    "end": "222840"
  },
  {
    "text": "thing we have is this Builder the Builder is responsible for configuration logging Service registration for Di and",
    "start": "222840",
    "end": "229980"
  },
  {
    "text": "all that then between the Builder and the next line is where you would have your log",
    "start": "229980",
    "end": "235319"
  },
  {
    "text": "providers being added Your Service registration all that goes there and then you materialize that configuration",
    "start": "235319",
    "end": "241680"
  },
  {
    "text": "or that definition into a web application which is this new abstraction of what is a web app in.net",
    "start": "241680",
    "end": "248159"
  },
  {
    "text": "the gaming.net6 and then it's your time to shine it is your time to add your end points no more",
    "start": "248159",
    "end": "255239"
  },
  {
    "text": "controllers no nothing you just say map get map post map whatever and then you can return a delegate you can return an",
    "start": "255239",
    "end": "261840"
  },
  {
    "text": "object enter whatever you want and that will be serialized and return to your browser the last thing is just running",
    "start": "261840",
    "end": "268020"
  },
  {
    "text": "the application that is it but many of you who have worked with other Technologies and other languages",
    "start": "268020",
    "end": "273780"
  },
  {
    "text": "as well might be thinking wait damn minute that thing over here",
    "start": "273780",
    "end": "279060"
  },
  {
    "text": "that looks a whole lot like that thing over there now I don't know if you can",
    "start": "279060",
    "end": "285180"
  },
  {
    "text": "see it but those are not both C sharp the bottom thing is express.js from the JavaScript world so Microsoft was that's",
    "start": "285180",
    "end": "292740"
  },
  {
    "text": "blatantly ripped up sorry my my lawyer they get inspired by express.js heavily",
    "start": "292740",
    "end": "299639"
  },
  {
    "text": "to go ahead and make the same thing and there's a reason express.js has seen more use in web applications than",
    "start": "299639",
    "end": "307139"
  },
  {
    "text": "anything MVC or ASP network has done in the past 10 years don't quote me on that by the way",
    "start": "307139",
    "end": "313080"
  },
  {
    "text": "but clearly there was a need for that because why is Jas so popular if it's",
    "start": "313080",
    "end": "319080"
  },
  {
    "text": "such a bad language but it is so widely used well it is because the barrier to entry is just so so low",
    "start": "319080",
    "end": "326460"
  },
  {
    "text": "so what if or sorry this is not actually A",
    "start": "326460",
    "end": "333780"
  },
  {
    "text": "New Concept at all python for example with fast API it's the same idea all you do is you import fast API you create",
    "start": "333780",
    "end": "340680"
  },
  {
    "text": "your app which you can imagine as the same web application Factory and then you define that endpoint you define what",
    "start": "340680",
    "end": "346500"
  },
  {
    "text": "you return and that is serialized as a Json object simple as that go with more cool",
    "start": "346500",
    "end": "352860"
  },
  {
    "text": "language and modern language does the exact same thing with a project called gen",
    "start": "352860",
    "end": "358320"
  },
  {
    "text": "so Jin has this idea of a gene.default which is the same thing as well application Factory then you can do Jane",
    "start": "358320",
    "end": "364380"
  },
  {
    "text": "dot get and you can Define your delegate you have your gen context which is the same as a HTTP context and then you",
    "start": "364380",
    "end": "370259"
  },
  {
    "text": "write a string you write Json you write whatever you want back then you run it even Nancy effects we have this in C",
    "start": "370259",
    "end": "376380"
  },
  {
    "text": "sharp how many of you remember Nancy FX yeah that was good old days so Nancy",
    "start": "376380",
    "end": "381900"
  },
  {
    "text": "effects was this thing in asp.net where you could just have a module and in that",
    "start": "381900",
    "end": "387419"
  },
  {
    "text": "module you can define an array of get post put whatever you want and then your endpoints and then have this delegate",
    "start": "387419",
    "end": "393780"
  },
  {
    "text": "that returns hello world and in this case that would just return that which at the time it was unheard of now again",
    "start": "393780",
    "end": "400740"
  },
  {
    "text": "it wasn't new because Nancy in itself was actually copying Sinatra which was a",
    "start": "400740",
    "end": "406979"
  },
  {
    "text": "Ruby on Rails framework that was very very popular and even here you can see that exact same Simplicity requests",
    "start": "406979",
    "end": "412860"
  },
  {
    "text": "inatra get them the route do and then end and that is it",
    "start": "412860",
    "end": "419220"
  },
  {
    "text": "now when I go back to what we saw before with c-sharp because if you stop writing C sharp in.net framework or C sharp",
    "start": "419220",
    "end": "427319"
  },
  {
    "text": "seven points two or whichever one is the last version and you're probably like how is that even possible well I made a",
    "start": "427319",
    "end": "433319"
  },
  {
    "text": "bit of an animation to show you how it's possible and it took me three hours to make so I appreciate it so all of these",
    "start": "433319",
    "end": "439380"
  },
  {
    "text": "features are flying and coming together all of this were added in C sharp 9 10",
    "start": "439380",
    "end": "444419"
  },
  {
    "text": "and Dot net six and that's how we get it and just because I spent so much time for just",
    "start": "444419",
    "end": "451139"
  },
  {
    "text": "well five ten seconds we're gonna see it again just appreciate it",
    "start": "451139",
    "end": "456419"
  },
  {
    "text": "it's good it's you can tell how it has a watermark like I don't want people to steal it",
    "start": "456419",
    "end": "462780"
  },
  {
    "text": "like that guy made it anyway so let's talk about each one of those",
    "start": "462780",
    "end": "469259"
  },
  {
    "text": "features individually so we have top level statements now top level segments are actually a C",
    "start": "469259",
    "end": "475500"
  },
  {
    "text": "sharp nine feature not even a C sharp 10 which is the one that was paired with a.net 6 release",
    "start": "475500",
    "end": "480960"
  },
  {
    "text": "and basically what happened is a.net team took a step back and said you know what",
    "start": "480960",
    "end": "487080"
  },
  {
    "text": "that looks stupid because it's the same every single time you always have well",
    "start": "487080",
    "end": "492840"
  },
  {
    "text": "the name space is optional but you always have a program class you always have a static void or static int",
    "start": "492840",
    "end": "498180"
  },
  {
    "text": "mainstream array args I know it sounds stupid there's more stupid to write it every time and we have three levels of",
    "start": "498180",
    "end": "504479"
  },
  {
    "text": "nesting just to get started which is just obnoxious so what happened in C sharp 9 is top level statements were",
    "start": "504479",
    "end": "511199"
  },
  {
    "text": "introduced where now you just have the using statement and then you say console.writeline and you have the text",
    "start": "511199",
    "end": "517200"
  },
  {
    "text": "that you want the rest of it is implied it is still there the code that you eventually compile is that same",
    "start": "517200",
    "end": "524060"
  },
  {
    "text": "program.cs but you don't have to have it there because it's supposed to be there by default and it's what causes tons of",
    "start": "524060",
    "end": "530760"
  },
  {
    "text": "confusion in my comment section when people who don't do C sharp see me write something like this and like what is",
    "start": "530760",
    "end": "536220"
  },
  {
    "text": "this scripting it's like no it's C sharp it's good Okay C sharp has changed I'm gonna give it a go",
    "start": "536220",
    "end": "542279"
  },
  {
    "text": "which is fundamental to this whole effort for Simplicity now some of you might say hey Nick you",
    "start": "542279",
    "end": "549480"
  },
  {
    "text": "could make it even simpler by just removing the using and saying system.console.writeline I'm just",
    "start": "549480",
    "end": "554760"
  },
  {
    "text": "matching it into one line and be like we're cool you can have a right um you can have a Hello World with just one",
    "start": "554760",
    "end": "560100"
  },
  {
    "text": "line of code however that would sort of kill this awesome Segway to the next feature",
    "start": "560100",
    "end": "566100"
  },
  {
    "text": "implicit using statements which is this idea that hey there's like eight using",
    "start": "566100",
    "end": "571260"
  },
  {
    "text": "statements eight in spaces that we're adding in every single one of our files or most of the files and those are",
    "start": "571260",
    "end": "578100"
  },
  {
    "text": "things like link system.task system itself is many of them",
    "start": "578100",
    "end": "583740"
  },
  {
    "text": "so now what you can do in C sharp 10 is you can specify the implicit usings as",
    "start": "583740",
    "end": "589200"
  },
  {
    "text": "enable which is now is the default actually and this will remove the need for the using system to be there and a",
    "start": "589200",
    "end": "595560"
  },
  {
    "text": "bunch of others because behind the scenes.net will do that for you and how will it do it well with a new feature",
    "start": "595560",
    "end": "602820"
  },
  {
    "text": "called Global using statements so Global using statements is this thing where you can have a single CS project CS file and",
    "start": "602820",
    "end": "610260"
  },
  {
    "text": "drop a global using Global and something and this will be globally added in every single one of your files and really what",
    "start": "610260",
    "end": "616860"
  },
  {
    "text": "happens when you do enable on implicit usings is a source generator kicks in and says oh you don't have one of these",
    "start": "616860",
    "end": "623580"
  },
  {
    "text": "I'm going to go ahead and drop it and if you say disabled you've just deletes it if it's there and now all of these is",
    "start": "623580",
    "end": "629220"
  },
  {
    "text": "just implicitly added in every one of your files removing the need for you to have this using system in the case of",
    "start": "629220",
    "end": "636120"
  },
  {
    "text": "minimal apis now another small feature that made this possible is called inferred Lambda types",
    "start": "636120",
    "end": "642899"
  },
  {
    "text": "so previously in C sharp 9 even though the compiler has all the information it needs to know that this is a delegate",
    "start": "642899",
    "end": "649440"
  },
  {
    "text": "function that accepts a string and returns a string if you went ahead and",
    "start": "649440",
    "end": "654540"
  },
  {
    "text": "you said VAR on the funk then it would not compile it says I have no idea what",
    "start": "654540",
    "end": "660180"
  },
  {
    "text": "you're talking about I don't know what this is so what C sharp 10 did is made",
    "start": "660180",
    "end": "665640"
  },
  {
    "text": "that possible and actually it was very hard to do apparently I don't know why but it was",
    "start": "665640",
    "end": "671640"
  },
  {
    "text": "and now the last small thing was actually attributes on lambdas so you",
    "start": "671640",
    "end": "676980"
  },
  {
    "text": "could not have something like this before.net6 to say like obsolete on the Lambda function but because that.net",
    "start": "676980",
    "end": "684480"
  },
  {
    "text": "um asp.net core sorry team needed it then now that is possible and this is",
    "start": "684480",
    "end": "690959"
  },
  {
    "text": "very indicative of the effort that went on during the net six release and the C sharp 10 release because the interesting",
    "start": "690959",
    "end": "697860"
  },
  {
    "text": "thing about it is that the c-sharp team pushed the dotnet team and the dotnet team pushed the c-sharp team because the",
    "start": "697860",
    "end": "704579"
  },
  {
    "text": "C sharp team had to make those changes but net to do this the minimal API is to",
    "start": "704579",
    "end": "709680"
  },
  {
    "text": "exist and this will actually continue with future releases and it's still happening now at this point",
    "start": "709680",
    "end": "716760"
  },
  {
    "text": "I want to go and take a look on a live demo and I'm not using Azure so don't worry this will work",
    "start": "716760",
    "end": "722700"
  },
  {
    "text": "and I'm gonna show you how minimal apis really look like so let me know",
    "start": "722700",
    "end": "729720"
  },
  {
    "text": "if you can see this all the way to the back",
    "start": "729720",
    "end": "735180"
  },
  {
    "text": "good good so I'm going to show you how to create a minimal API from scratch and",
    "start": "735180",
    "end": "740940"
  },
  {
    "text": "I'm not going to cheat by using a template I'm just going to make a console application so I'm going to go",
    "start": "740940",
    "end": "746519"
  },
  {
    "text": "here in the getting started and say in.net 7 in this case and say minimal API",
    "start": "746519",
    "end": "753079"
  },
  {
    "text": "dot demo and console I'm gonna go ahead and",
    "start": "753079",
    "end": "758160"
  },
  {
    "text": "create that I'm going to delete all of that and the only thing you need to do to",
    "start": "758160",
    "end": "764700"
  },
  {
    "text": "actually turn this into a web project is actually go to the Cs project over here",
    "start": "764700",
    "end": "770160"
  },
  {
    "text": "and specifying the project SDK that this is a microsoft.net DOT SDK dot many dot",
    "start": "770160",
    "end": "777240"
  },
  {
    "text": "web that is it the moment I save you can see something is happening in the background it is just installing a bunch of",
    "start": "777240",
    "end": "783720"
  },
  {
    "text": "packages implicitly that you can't really see here in the dependencies so now I can go ahead and say VAR",
    "start": "783720",
    "end": "791839"
  },
  {
    "text": "Builder which is my first component so web application",
    "start": "791839",
    "end": "796939"
  },
  {
    "text": "Dot createbuilder and at this point I can actually pass down the arguments of",
    "start": "796980",
    "end": "802260"
  },
  {
    "text": "this project because they still technically exist because it is wrapped within that main method like we",
    "start": "802260",
    "end": "807839"
  },
  {
    "text": "mentioned before then I'm going to create the app which is Builder Dot",
    "start": "807839",
    "end": "813300"
  },
  {
    "text": "build and then I'm going to run it",
    "start": "813300",
    "end": "818639"
  },
  {
    "text": "and this is it now if you're coming from dotted 5 you're probably thinking wait a second there was supposed to be a startup.cs and I can configure services",
    "start": "818639",
    "end": "825660"
  },
  {
    "text": "and now I can so no you can you can imagine that this is the configure",
    "start": "825660",
    "end": "831480"
  },
  {
    "text": "Services area so anything between here you can register and anything between the app and the app",
    "start": "831480",
    "end": "838079"
  },
  {
    "text": "run is actually your configure method from the startup.cs the one where you configure the middleware anything",
    "start": "838079",
    "end": "843720"
  },
  {
    "text": "between this doesn't really need to be ordered unless you materialize your dependencies",
    "start": "843720",
    "end": "849660"
  },
  {
    "text": "because they will be materialized on app creation anything here however needs to",
    "start": "849660",
    "end": "855000"
  },
  {
    "text": "be ordered so if you use something like Swagger and you want to have it outside of authentication then you need to",
    "start": "855000",
    "end": "860399"
  },
  {
    "text": "register it before your app.ad.netication call and so on everything is in sequence here",
    "start": "860399",
    "end": "866339"
  },
  {
    "text": "and one of the big problems this can cause if you're not careful is that you can create as many apps as you want out",
    "start": "866339",
    "end": "873839"
  },
  {
    "text": "of that Builder because that Builder is just instructions on how to make web app so this would start to Applications so",
    "start": "873839",
    "end": "880500"
  },
  {
    "text": "be careful also if you try to retroactively add the service",
    "start": "880500",
    "end": "886980"
  },
  {
    "text": "let's say a Singleton after you created your app then this app won't be",
    "start": "886980",
    "end": "892440"
  },
  {
    "text": "retroactively updated with the service the moment you create it it's there you don't touch it",
    "start": "892440",
    "end": "898980"
  },
  {
    "text": "so let's go ahead and create our first endpoint and I'm going to go with a very simple app dot map get",
    "start": "898980",
    "end": "906180"
  },
  {
    "text": "for hello world so hello and I'm just going to say hello NDC",
    "start": "906180",
    "end": "914779"
  },
  {
    "text": "so let's go ahead and just run this",
    "start": "914880",
    "end": "919279"
  },
  {
    "text": "and I'm going to use this at dot HTTP and file which has some predefined HTTP",
    "start": "921000",
    "end": "927060"
  },
  {
    "text": "requests and I'm going to say run hello so simple as that I have something that",
    "start": "927060",
    "end": "932940"
  },
  {
    "text": "returns effectively hello world hello NDC now let's make it a bit more complicated",
    "start": "932940",
    "end": "939180"
  },
  {
    "text": "because just returning raw text isn't really fancy so what we can say is hello object",
    "start": "939180",
    "end": "948660"
  },
  {
    "text": "and I can just simply return an anonymous object here and by default it will be serialized so",
    "start": "948660",
    "end": "955500"
  },
  {
    "text": "hello equals NDC just",
    "start": "955500",
    "end": "960779"
  },
  {
    "text": "run this real quick and by default the Json generalizer is used",
    "start": "960779",
    "end": "967680"
  },
  {
    "text": "you get a response back now we can take this a bit further because how often do you just work with Anonymous objects you",
    "start": "967680",
    "end": "974519"
  },
  {
    "text": "don't really so I'm going to create a record not that here we go a user",
    "start": "974519",
    "end": "981360"
  },
  {
    "text": "and I'm going to have a full name so string full name",
    "start": "981360",
    "end": "987000"
  },
  {
    "text": "and I can very easily scroll down say app.map get",
    "start": "987000",
    "end": "995339"
  },
  {
    "text": "user and by just returning the object we have",
    "start": "995339",
    "end": "1001459"
  },
  {
    "text": "full serialization let's do this make chapsis",
    "start": "1001459",
    "end": "1007399"
  },
  {
    "text": "yeah you know what ciao us fine so let's rerun this",
    "start": "1007399",
    "end": "1013519"
  },
  {
    "text": "unfortunately hot reload doesn't work for this because you can't retract reload",
    "start": "1013519",
    "end": "1018860"
  },
  {
    "text": "register endpoints so I have to stop and start every time but again full serialization you get it",
    "start": "1018860",
    "end": "1025938"
  },
  {
    "text": "but Nobody Does this nobody just has endpoints without parameters now the",
    "start": "1025939",
    "end": "1033079"
  },
  {
    "text": "good thing is dotnet or minimal apis support some special parameters to be",
    "start": "1033079",
    "end": "1038540"
  },
  {
    "text": "injected in the Lambda by default so I can say map get special",
    "start": "1038540",
    "end": "1045199"
  },
  {
    "text": "and I'm going to start with I don't know the most basic one which is the HTTP context so if you just say",
    "start": "1045199",
    "end": "1051140"
  },
  {
    "text": "context here by default or not not my Nemesis parenthesis",
    "start": "1051140",
    "end": "1059440"
  },
  {
    "text": "here we go then I can just say context dot response dot write a as Json",
    "start": "1060500",
    "end": "1068600"
  },
  {
    "text": "is saying and I can have the same user copied over and then I have more control",
    "start": "1068600",
    "end": "1074660"
  },
  {
    "text": "over what I'm writing so if I also want to specify things like the status code the Response Code I can do that now for",
    "start": "1074660",
    "end": "1081200"
  },
  {
    "text": "this to work I have to turn this into an async function so this is a sync and this is awaited",
    "start": "1081200",
    "end": "1087860"
  },
  {
    "text": "one of the biggest problems this causes is that you can technically return at any point or you can technically not",
    "start": "1087860",
    "end": "1094580"
  },
  {
    "text": "have anything here and nothing will start stop compiling but this will not",
    "start": "1094580",
    "end": "1100220"
  },
  {
    "text": "you know it will fail only when you call it it's very very dodgy the way this is implemented which is why right as Json",
    "start": "1100220",
    "end": "1106580"
  },
  {
    "text": "async is not really used that much in normal applications but in the same way if you wanted to access things like the",
    "start": "1106580",
    "end": "1114020"
  },
  {
    "text": "request query string parameters you have everything here you have full access but maybe you don't want that maybe you",
    "start": "1114020",
    "end": "1120200"
  },
  {
    "text": "want to narrow it down to some other special parameters like HTTP request",
    "start": "1120200",
    "end": "1125660"
  },
  {
    "text": "or HTTP response you can do that you can have HTTP",
    "start": "1125660",
    "end": "1131179"
  },
  {
    "text": "response here and only write that you can also let's go back here",
    "start": "1131179",
    "end": "1137480"
  },
  {
    "text": "you can also have a cancellation token so if you want to cancel your request after some time you do that",
    "start": "1137480",
    "end": "1144380"
  },
  {
    "text": "and then you can pass that into your async methods so you're not missing out on anything by going down this route you",
    "start": "1144380",
    "end": "1150799"
  },
  {
    "text": "still have all the goodies of controllers here or controlling actions",
    "start": "1150799",
    "end": "1155960"
  },
  {
    "text": "now I want to show you how extra this can get and I'm going to start with a get",
    "start": "1155960",
    "end": "1161240"
  },
  {
    "text": "request I'm going to say Extravaganza here and I'm going to show you how we can inject",
    "start": "1161240",
    "end": "1167960"
  },
  {
    "text": "different parameters because minimal apis and this sort of model structure",
    "start": "1167960",
    "end": "1173179"
  },
  {
    "text": "depends on a lot of implica and implied or assumptions sorry",
    "start": "1173179",
    "end": "1179179"
  },
  {
    "text": "so if for example I say int age where would this be coming from I didn't",
    "start": "1179179",
    "end": "1184760"
  },
  {
    "text": "specify where but if I say return new age then this has to come from somewhere so",
    "start": "1184760",
    "end": "1191840"
  },
  {
    "text": "if I just quickly run this it show you",
    "start": "1191840",
    "end": "1195580"
  },
  {
    "text": "it is going to be the query string parameter by default",
    "start": "1198200",
    "end": "1204980"
  },
  {
    "text": "19. so you don't have to specify from query by default any parameter on a get",
    "start": "1204980",
    "end": "1212000"
  },
  {
    "text": "request that is a primitive like this will be mapped from the route you can",
    "start": "1212000",
    "end": "1217100"
  },
  {
    "text": "also be explicit about it so if you want sorry from the query string if you want it to be from the route then you can say",
    "start": "1217100",
    "end": "1222620"
  },
  {
    "text": "age and you can even have constraints like end so if you do that then this",
    "start": "1222620",
    "end": "1227660"
  },
  {
    "text": "will come from the route you can also go down a different path so if I say here here",
    "start": "1227660",
    "end": "1234799"
  },
  {
    "text": "and then end year here then age is query string year",
    "start": "1234799",
    "end": "1240679"
  },
  {
    "text": "is route this can get very confusing because you have all this cognitive load to keep in",
    "start": "1240679",
    "end": "1245840"
  },
  {
    "text": "mind you know this is coming from this this is coming from this and it only gets worse so",
    "start": "1245840",
    "end": "1253700"
  },
  {
    "text": "let's say that age actually comes from from query string nope comes from query",
    "start": "1253700",
    "end": "1259700"
  },
  {
    "text": "string but it has a different name you want it to be a in your query string we",
    "start": "1259700",
    "end": "1265580"
  },
  {
    "text": "can say from query and then name equals",
    "start": "1265580",
    "end": "1270980"
  },
  {
    "text": "a it turns out two equals doesn't work",
    "start": "1270980",
    "end": "1276500"
  },
  {
    "text": "here we go so if you do that then you can map something like this where the equation parameter is just an a you can",
    "start": "1276500",
    "end": "1283460"
  },
  {
    "text": "still call it whatever you want internally do you want the header from header do you want to inject a",
    "start": "1283460",
    "end": "1290659"
  },
  {
    "text": "service from your di container you can say from service however",
    "start": "1290659",
    "end": "1295880"
  },
  {
    "text": "this is another thing if I just quickly grab this date time provider",
    "start": "1295880",
    "end": "1300980"
  },
  {
    "text": "and I put it here this isn't something magical by the way it just is a way to test your daytime",
    "start": "1300980",
    "end": "1307640"
  },
  {
    "text": "while you're using it into your code you just inject the interface and then you can mock it if you need to",
    "start": "1307640",
    "end": "1313640"
  },
  {
    "text": "so if I just go here and I register this",
    "start": "1313640",
    "end": "1319360"
  },
  {
    "text": "here we go then I can just simply say I date time provider",
    "start": "1323360",
    "end": "1331400"
  },
  {
    "text": "and I can use it",
    "start": "1332240",
    "end": "1335140"
  },
  {
    "text": "there we go and even if I don't specify where they should be coming from on Startup minimal",
    "start": "1338539",
    "end": "1345200"
  },
  {
    "text": "apis will actually detect that and say oh this is coming from query this I can",
    "start": "1345200",
    "end": "1350480"
  },
  {
    "text": "map to Route this I don't know but it's not a body because this is a",
    "start": "1350480",
    "end": "1355940"
  },
  {
    "text": "get I don't have a converter for it it exists in dependency injection in a container that's what it is and if you",
    "start": "1355940",
    "end": "1362480"
  },
  {
    "text": "do that then you can see everything here",
    "start": "1362480",
    "end": "1368059"
  },
  {
    "text": "automatically mapped you still have control to be explicit and it goes even further if this was",
    "start": "1368059",
    "end": "1373820"
  },
  {
    "text": "actually a map post then you can even have a user",
    "start": "1373820",
    "end": "1380419"
  },
  {
    "text": "coming from the body and you don't have to specify anything so you can say something like this",
    "start": "1380419",
    "end": "1385880"
  },
  {
    "text": "it can get too much and that's why in dotnet 7",
    "start": "1385880",
    "end": "1391280"
  },
  {
    "text": "there was actually a new feature added where you can say something like um presentation request",
    "start": "1391280",
    "end": "1399440"
  },
  {
    "text": "and you can wrap all of that into a record",
    "start": "1399440",
    "end": "1405679"
  },
  {
    "text": "so I can have everything here I'm not going to rename anything just do not waste any time but you can do this and",
    "start": "1405679",
    "end": "1411919"
  },
  {
    "text": "you can say as parameters here",
    "start": "1411919",
    "end": "1417520"
  },
  {
    "text": "and you can pass down your object so presentation request",
    "start": "1418159",
    "end": "1423399"
  },
  {
    "text": "request and then you can use it here so if you want to access the age",
    "start": "1423620",
    "end": "1429260"
  },
  {
    "text": "you want to have everything in a single contract you can which is a pretty neat thing to do the problem is if I go down",
    "start": "1429260",
    "end": "1436340"
  },
  {
    "text": "that route I would be explicit about where things are coming from just to show you how this will fail if I don't",
    "start": "1436340",
    "end": "1443000"
  },
  {
    "text": "have the service in my di container but I actually try to resolve it then let's see what happens",
    "start": "1443000",
    "end": "1450940"
  },
  {
    "text": "so nothing fails on Startup the application just started which you know depending on who you ask isn't",
    "start": "1452900",
    "end": "1459140"
  },
  {
    "text": "really great because I'd like something like this to be detected and startup but if I do run it response body is empty because in the",
    "start": "1459140",
    "end": "1466460"
  },
  {
    "text": "Run you can see I got this error saying hey age is coming from an attribute route",
    "start": "1466460",
    "end": "1472039"
  },
  {
    "text": "and body inferred request is as parameter but the user is unknown and there's a bit of a clash",
    "start": "1472039",
    "end": "1478280"
  },
  {
    "text": "with a provider here so it assumed that the provider came from the body and the user came from nowhere",
    "start": "1478280",
    "end": "1484940"
  },
  {
    "text": "so I'd be explicit you're gonna you're gonna write safer code by doing this but fundamentally",
    "start": "1484940",
    "end": "1490700"
  },
  {
    "text": "this is what it is about now there's more features that we're adding.7 and we're going to talk about them but",
    "start": "1490700",
    "end": "1497240"
  },
  {
    "text": "here we are so let's continue from here",
    "start": "1497240",
    "end": "1504340"
  },
  {
    "text": "so there are actually a few unsupported features or at least upon release there are quite a few first there was no",
    "start": "1507140",
    "end": "1514700"
  },
  {
    "text": "support for MVC filters so if you have any iasync action filters or result",
    "start": "1514700",
    "end": "1520159"
  },
  {
    "text": "filters or exception filters there was none of that when it launched and you still technically can't use those",
    "start": "1520159",
    "end": "1527120"
  },
  {
    "text": "there was no API version now not the concept of API versioning you can still if you want have V1 V2 V3 folders and",
    "start": "1527120",
    "end": "1534980"
  },
  {
    "text": "you can use route versioning or whatever you choose to do maybe header but there was a nuget package that Microsoft has",
    "start": "1534980",
    "end": "1541520"
  },
  {
    "text": "in the dot net organization that at the time did not support minimal apis also",
    "start": "1541520",
    "end": "1546799"
  },
  {
    "text": "there was and there still isn't no built-in support for validation so if you want to validate an incoming object",
    "start": "1546799",
    "end": "1553039"
  },
  {
    "text": "you actually have to write your own validator which in my case that is fine because what I always did is I wrote my",
    "start": "1553039",
    "end": "1559580"
  },
  {
    "text": "own fluent validation sort of class and I passed that through a custom middleware so",
    "start": "1559580",
    "end": "1565279"
  },
  {
    "text": "I could still work my way around the problem is there wasn't any filters there so I had to do it every single",
    "start": "1565279",
    "end": "1572059"
  },
  {
    "text": "time for every endpoint if I want to be fast and there's also no support for all data",
    "start": "1572059",
    "end": "1578120"
  },
  {
    "text": "how many of you use old data how many of you like it",
    "start": "1578120",
    "end": "1583760"
  },
  {
    "text": "yeah I thought so there's no support for that but there it",
    "start": "1583760",
    "end": "1589220"
  },
  {
    "text": "might be coming mainly because Microsoft themselves use our data and that might",
    "start": "1589220",
    "end": "1594620"
  },
  {
    "text": "be added in the future but it's not here now in dotnet 7 we actually did get filters in a new implementation it is",
    "start": "1594620",
    "end": "1600740"
  },
  {
    "text": "not the same type of filters but they're very nice and they can be endpoint specific very very nice clean",
    "start": "1600740",
    "end": "1607220"
  },
  {
    "text": "implementation and also the API version you get package now supports that so if you want to go and plug that in you can",
    "start": "1607220",
    "end": "1614600"
  },
  {
    "text": "do that and I do have a video on my YouTube channel on how to do that now validation still does not exist",
    "start": "1614600",
    "end": "1620179"
  },
  {
    "text": "built in however Microsoft is thinking of ways to add it the problem is it",
    "start": "1620179",
    "end": "1626179"
  },
  {
    "text": "needs to be very unopinionated and generic and also very very fast so they're thinking Source generators and",
    "start": "1626179",
    "end": "1633740"
  },
  {
    "text": "from what I hear from David Fowler he said it is so hacky you're gonna love it so I don't know what that means let's",
    "start": "1633740",
    "end": "1640580"
  },
  {
    "text": "say and the last thing is you know for the old data you might get it eventually it's not here but to be honest consider",
    "start": "1640580",
    "end": "1646580"
  },
  {
    "text": "using a graphql with hot chocolate I think it's a better experience if you can",
    "start": "1646580",
    "end": "1652279"
  },
  {
    "text": "now I want to go to a very interesting phenomenon called program.cs hell",
    "start": "1652279",
    "end": "1659900"
  },
  {
    "text": "so this was very much a common sentiment when the minimal API has launched which is this idea of oh donus 6 is out I'm",
    "start": "1659900",
    "end": "1666380"
  },
  {
    "text": "going to give it a go I'm going to try to run a minimal API build one and then they end up with six app.map get methods",
    "start": "1666380",
    "end": "1673580"
  },
  {
    "text": "and six classes in one program.cs they hate themselves they think just you know web API is better we're going backwards",
    "start": "1673580",
    "end": "1681080"
  },
  {
    "text": "and that is a very interesting observation to me because often do you make a controller when you",
    "start": "1681080",
    "end": "1687440"
  },
  {
    "text": "make a web API and then in that controller you add let's say the domain you're working with is a customer you",
    "start": "1687440",
    "end": "1693740"
  },
  {
    "text": "want your customer service your customer contracts your customer repositories your customer mediator handlers",
    "start": "1693740",
    "end": "1698900"
  },
  {
    "text": "validation you don't add all that in a single controllers class you split it",
    "start": "1698900",
    "end": "1703940"
  },
  {
    "text": "nothing changes here minimal apis are not one file apis all they are is a",
    "start": "1703940",
    "end": "1712039"
  },
  {
    "text": "strip down version of everything you could do before and broken down to its bare minimum",
    "start": "1712039",
    "end": "1717980"
  },
  {
    "text": "so let's talk about what minimal apis are not explicitly so like we said not",
    "start": "1717980",
    "end": "1723380"
  },
  {
    "text": "one file API is just forget about it when someone says that just correct them minimal is about minimizing first the",
    "start": "1723380",
    "end": "1732020"
  },
  {
    "text": "cognitive load in getting started and the entry level enabling anti-level",
    "start": "1732020",
    "end": "1738200"
  },
  {
    "text": "developers to build basically any API they want also that they're not just for demos as",
    "start": "1738200",
    "end": "1744260"
  },
  {
    "text": "you just saw however they're fantastic for demos because I can very easily just have everything in a single page scroll",
    "start": "1744260",
    "end": "1750860"
  },
  {
    "text": "up and down and you don't have to worry about oh this is in this file and this in this file and this in this file and",
    "start": "1750860",
    "end": "1756980"
  },
  {
    "text": "you know everything is there everything is easy to do the problem with this is that Microsoft also heavily use them for",
    "start": "1756980",
    "end": "1763580"
  },
  {
    "text": "demos and Microsoft demos are like 2000 lines of code and people say that and think that's how you build an API it is",
    "start": "1763580",
    "end": "1770360"
  },
  {
    "text": "not how you build an API so don't do that and in the same way that they're not",
    "start": "1770360",
    "end": "1775640"
  },
  {
    "text": "just for demos they're not just for beginners they are great for beginners but in the hands of someone who really",
    "start": "1775640",
    "end": "1782360"
  },
  {
    "text": "can't structure a project they can get really creative so I think maybe the middle level is who it is really not for",
    "start": "1782360",
    "end": "1789679"
  },
  {
    "text": "or maybe not for but beginners and experts Prime candidates for this",
    "start": "1789679",
    "end": "1795260"
  },
  {
    "text": "and then the last thing is because I hear this quite a bit actually then I'm going to kill controllers the reason why",
    "start": "1795260",
    "end": "1800840"
  },
  {
    "text": "this came about quite a few times is because Microsoft has been very vocal about saying we expect 40 to 80 percent",
    "start": "1800840",
    "end": "1807080"
  },
  {
    "text": "of all new use cases to use minimal apis which is a bit optimistic in my opinion",
    "start": "1807080",
    "end": "1812840"
  },
  {
    "text": "like it's not really gonna happen um but certainly for some use cases it's",
    "start": "1812840",
    "end": "1818299"
  },
  {
    "text": "going to be very very good very very viable as well but at this point I actually want to",
    "start": "1818299",
    "end": "1824600"
  },
  {
    "text": "take a second to just address the elephant in the room because",
    "start": "1824600",
    "end": "1829840"
  },
  {
    "text": "I do believe that controllers are building apis are a really weird concept",
    "start": "1830240",
    "end": "1835399"
  },
  {
    "text": "and I I did not get it so I went back to see why we're using controllers for for",
    "start": "1835399",
    "end": "1840679"
  },
  {
    "text": "building apis you know how do you think they came about do you think that the 10 smartest people in Microsoft sat down",
    "start": "1840679",
    "end": "1847100"
  },
  {
    "text": "and said okay let's put it down performance engineering architecture structure",
    "start": "1847100",
    "end": "1853700"
  },
  {
    "text": "what's the best way to build an API and they said oh yeah control this is the way to do it",
    "start": "1853700",
    "end": "1858919"
  },
  {
    "text": "no what happened is they needed to ride the whole rest API web API to wave",
    "start": "1858919",
    "end": "1866720"
  },
  {
    "text": "and they had this thing called MVC so what if we take the controller aspect",
    "start": "1866720",
    "end": "1873260"
  },
  {
    "text": "which has validation model binding and Json XML and HTML response and just keep",
    "start": "1873260",
    "end": "1880340"
  },
  {
    "text": "the C because really what is the last time you used a view in your apis you",
    "start": "1880340",
    "end": "1887120"
  },
  {
    "text": "haven't so what are using controllers which is an MVC construct in your apis",
    "start": "1887120",
    "end": "1893120"
  },
  {
    "text": "well it's just rebranded MVC also models in NBC they're not really",
    "start": "1893120",
    "end": "1900559"
  },
  {
    "text": "API contracts and the way you we use them because in API contracts and apis in general you have an input and an",
    "start": "1900559",
    "end": "1907580"
  },
  {
    "text": "output object and they're separate they're not the same thing so it's not quite models so we're using",
    "start": "1907580",
    "end": "1915080"
  },
  {
    "text": "just the C from MVC and the truth is it was just the easiest way to get it out of the door and have",
    "start": "1915080",
    "end": "1921799"
  },
  {
    "text": "it in the hands of consumers in a reliable way because MVC did work and it still works people still use it with",
    "start": "1921799",
    "end": "1928100"
  },
  {
    "text": "success there's nothing wrong with NPC however I have an issue with that",
    "start": "1928100",
    "end": "1934760"
  },
  {
    "text": "structure because they have all these methods these actions within that controller that they never call each",
    "start": "1934760",
    "end": "1940340"
  },
  {
    "text": "other and the only thing that really calls them is the router so you have a bunch of public methods in a public",
    "start": "1940340",
    "end": "1946159"
  },
  {
    "text": "class that nothing explicitly calls it doesn't really make sense why they",
    "start": "1946159",
    "end": "1951559"
  },
  {
    "text": "should be together and this becomes more obvious if you think that really they're",
    "start": "1951559",
    "end": "1956840"
  },
  {
    "text": "actually violating the Open Class principle because what you do to add the new",
    "start": "1956840",
    "end": "1962120"
  },
  {
    "text": "endpoint into your API you open that controllers class and you edit it what do you do to remove one you",
    "start": "1962120",
    "end": "1969320"
  },
  {
    "text": "open that one the controls class and you delete the method so why are we doing that what's the",
    "start": "1969320",
    "end": "1975080"
  },
  {
    "text": "separation of concerns what are the same responsibility oh my responsibilities is a controller well why didn't you go more",
    "start": "1975080",
    "end": "1981799"
  },
  {
    "text": "now and have full control into that responsibility because it is not uncommon to have",
    "start": "1981799",
    "end": "1987620"
  },
  {
    "text": "Services injected on the controller level that are only used on a single action",
    "start": "1987620",
    "end": "1993200"
  },
  {
    "text": "but because those Services could be transient or scoped Independence injection those objects are being",
    "start": "1993200",
    "end": "1999260"
  },
  {
    "text": "instantiated every single time and you're wasting memory for things that will never be used by that service or by",
    "start": "1999260",
    "end": "2006640"
  },
  {
    "text": "that action so why are they sharing real estate I really do not understand this",
    "start": "2006640",
    "end": "2013240"
  },
  {
    "text": "another thing is that they never share State between actions because controllers are actually scoped per",
    "start": "2013240",
    "end": "2020860"
  },
  {
    "text": "request so you don't have something that will be reused by all the methods so why are they all together just sounds very",
    "start": "2020860",
    "end": "2028659"
  },
  {
    "text": "dumb in isolation it sounds smart in the context of MVC because you have a direct",
    "start": "2028659",
    "end": "2034000"
  },
  {
    "text": "correlation between your view calling the controller but between the API calling the controller there is no",
    "start": "2034000",
    "end": "2040059"
  },
  {
    "text": "correlation and also when you have private methods because you thought I'm gonna just",
    "start": "2040059",
    "end": "2045519"
  },
  {
    "text": "extract this private method I'm gonna because it's getting too big and I'm going to give it a nice name and use it they usually used just by a single",
    "start": "2045519",
    "end": "2052358"
  },
  {
    "text": "action so you have a private method in a class that's only used by a single action okay then should it be a local function",
    "start": "2052359",
    "end": "2058839"
  },
  {
    "text": "oh that looks too big in a single method and then maybe you don't even need that well why don't you just split that",
    "start": "2058839",
    "end": "2065020"
  },
  {
    "text": "then they do invoke middleware and filters that you might not need implicitly all that validation all that",
    "start": "2065020",
    "end": "2070898"
  },
  {
    "text": "model binding there's tons of things behind the scenes that's happening that your actions don't need but you're",
    "start": "2070899",
    "end": "2077679"
  },
  {
    "text": "paying the price of those objects being instantiated and that memory needing to be Gap is collected every single time",
    "start": "2077679",
    "end": "2083440"
  },
  {
    "text": "they have tried to make it efficient but there's so much you can rip out of a system like MVC that has been running",
    "start": "2083440",
    "end": "2088960"
  },
  {
    "text": "for years now they can also grow to that thing called fat controllers I don't know how",
    "start": "2088960",
    "end": "2094599"
  },
  {
    "text": "many of you have heard of this term but they can grow to quite a lot a big size",
    "start": "2094599",
    "end": "2099940"
  },
  {
    "text": "and very commonly the the way the way people solve this problem is they",
    "start": "2099940",
    "end": "2104980"
  },
  {
    "text": "actually introduce mediator and then they move all the logic into a Handler so they brag that okay my controlum",
    "start": "2104980",
    "end": "2111579"
  },
  {
    "text": "actions is actually just request mapping mediator send and response mapping well",
    "start": "2111579",
    "end": "2117820"
  },
  {
    "text": "that sounds something like you can put somewhere else and not have the controller in the first place like why",
    "start": "2117820",
    "end": "2123220"
  },
  {
    "text": "do you need this if it's so simple um and the truth is that the reason why",
    "start": "2123220",
    "end": "2128920"
  },
  {
    "text": "we have just accepted it and use it is because the only viable option for building apis in.net or they were the",
    "start": "2128920",
    "end": "2135220"
  },
  {
    "text": "only viable option if you really want to be a nice rest API yes Nancy effects was a thing but at the time people were not",
    "start": "2135220",
    "end": "2142780"
  },
  {
    "text": "really happy to base their whole livelihood on the whole company on an open source project that might die and",
    "start": "2142780",
    "end": "2148660"
  },
  {
    "text": "in fact it did eventually die now it is sort of reincarnated with a different project called Carter but I still",
    "start": "2148660",
    "end": "2155260"
  },
  {
    "text": "wouldn't use that because it's competing with minimal apis and you're just playing catch up so let's talk about what this talk is",
    "start": "2155260",
    "end": "2163119"
  },
  {
    "text": "yeah let's talk about what this talk is about really",
    "start": "2163119",
    "end": "2167280"
  },
  {
    "text": "and like with everything in life this talk is about Lego it is always about Lego and I promise you this metaphor",
    "start": "2168940",
    "end": "2175240"
  },
  {
    "text": "will make sense so what do you see here just think in your mind yes it is a Lego",
    "start": "2175240",
    "end": "2181359"
  },
  {
    "text": "Castle but just try to think outside of the box",
    "start": "2181359",
    "end": "2186599"
  },
  {
    "text": "so what you have here is I have started or have finished castle and I can see a",
    "start": "2186940",
    "end": "2192099"
  },
  {
    "text": "door I can see Foundation I can see Windows there's a structure there is another one over there and the great",
    "start": "2192099",
    "end": "2198820"
  },
  {
    "text": "thing about a half started or finished structured is that if I go to my nephew who is five and obviously five-year-old",
    "start": "2198820",
    "end": "2206859"
  },
  {
    "text": "not the smartest and I say build the castle well here's watch Harry Potter",
    "start": "2206859",
    "end": "2212140"
  },
  {
    "text": "so he's gonna build something like this without any experience just because there is enough structure in something",
    "start": "2212140",
    "end": "2219280"
  },
  {
    "text": "like this to eventually lead to that now it might not look that great because like I said he's five but",
    "start": "2219280",
    "end": "2226720"
  },
  {
    "text": "it is good enough but the good thing about this is that if you give it to me who has never really",
    "start": "2226720",
    "end": "2232859"
  },
  {
    "text": "built any fancy customers but I do have the imagination to use Lego",
    "start": "2232859",
    "end": "2239020"
  },
  {
    "text": "then I'm also sort of set in a path of success because there's enough here for",
    "start": "2239020",
    "end": "2245200"
  },
  {
    "text": "me to get inspired and finish what someone else has started",
    "start": "2245200",
    "end": "2250780"
  },
  {
    "text": "now here's what's very interesting to me let's say that you take all of that away",
    "start": "2250780",
    "end": "2255880"
  },
  {
    "text": "and you give to the same five-year-old ground and a bucket of infinite amount of Lego",
    "start": "2255880",
    "end": "2263200"
  },
  {
    "text": "bricks with any color and any size and I say hey build a castle",
    "start": "2263200",
    "end": "2268839"
  },
  {
    "text": "what he's probably gonna build will look something like this now is this a castle",
    "start": "2268839",
    "end": "2275140"
  },
  {
    "text": "it depends on who you asked to me it looks really bad to him it does look like a castle that's",
    "start": "2275140",
    "end": "2282460"
  },
  {
    "text": "what he wanted to build it serves the purpose he got a cracker that he used",
    "start": "2282460",
    "end": "2287500"
  },
  {
    "text": "his imagination and he built it but then if I go to his mum who's actually an architectural major medieval",
    "start": "2287500",
    "end": "2296500"
  },
  {
    "text": "architecture and Gothic architecture and say hey can you build a castle with those same ingredients",
    "start": "2296500",
    "end": "2302560"
  },
  {
    "text": "then what she's going to end up with is potentially a masterpiece",
    "start": "2302560",
    "end": "2308260"
  },
  {
    "text": "do you get it this is what controllers look like to me there is enough structure you start from",
    "start": "2308260",
    "end": "2315220"
  },
  {
    "text": "this controller class from this from this action that there is no room for",
    "start": "2315220",
    "end": "2320320"
  },
  {
    "text": "experimentation in order for experiment no room for experimentation means very",
    "start": "2320320",
    "end": "2325900"
  },
  {
    "text": "low likelihood of failure you're gonna end up with something that on something",
    "start": "2325900",
    "end": "2331300"
  },
  {
    "text": "that is quite good not perfect but good and that's why we have things like clean",
    "start": "2331300",
    "end": "2337420"
  },
  {
    "text": "architecture be so big because experimentation actually starts past the",
    "start": "2337420",
    "end": "2343180"
  },
  {
    "text": "controller we sort of agree that controller is a problem we need to solve and then we add 15 layers of",
    "start": "2343180",
    "end": "2348400"
  },
  {
    "text": "abstractions because we're obsessed with it just to complicate life and say oh if in the future I need to change my",
    "start": "2348400",
    "end": "2353740"
  },
  {
    "text": "database layer how many of you have changed your database service in your project ever just show me how many of",
    "start": "2353740",
    "end": "2361300"
  },
  {
    "text": "you during that process didn't have to change the interface that you abstracted",
    "start": "2361300",
    "end": "2366820"
  },
  {
    "text": "your thing around yeah exactly one person like if you go from something like an",
    "start": "2366820",
    "end": "2373420"
  },
  {
    "text": "rdbms to a nosql database your access buttons will change you won't be able to do the same things",
    "start": "2373420",
    "end": "2378520"
  },
  {
    "text": "that you did before so This Promise of in case I change it is",
    "start": "2378520",
    "end": "2384520"
  },
  {
    "text": "a bad healthy diet in my opinion but the good thing is Junior developers",
    "start": "2384520",
    "end": "2390820"
  },
  {
    "text": "meet developers and Senior developers will end up with something that is pretty good",
    "start": "2390820",
    "end": "2396160"
  },
  {
    "text": "but in the same way that a junior developer will be the very bad API at",
    "start": "2396160",
    "end": "2402339"
  },
  {
    "text": "least the barrier of Entry was pretty low you don't have to even worry about",
    "start": "2402339",
    "end": "2407800"
  },
  {
    "text": "something like this okay where do I put the brick I have to find the right brick to put the thing and then it's like even",
    "start": "2407800",
    "end": "2413800"
  },
  {
    "text": "that makes things complicated but such an approach to a junior developer with no experience makes it",
    "start": "2413800",
    "end": "2419740"
  },
  {
    "text": "very easy to get your foot through the door and say you know what this thing Returns what I need this thing can work",
    "start": "2419740",
    "end": "2426099"
  },
  {
    "text": "and here's the good thing about this yes they built something bad but next",
    "start": "2426099",
    "end": "2431320"
  },
  {
    "text": "time they do it they're going to try to do it better and better and better and better and as the time goes on they're",
    "start": "2431320",
    "end": "2437920"
  },
  {
    "text": "going to improve and also the way to get started was very easy there was nothing",
    "start": "2437920",
    "end": "2443440"
  },
  {
    "text": "you need to know about go crazy but take a staff engineer a principal engineer or",
    "start": "2443440",
    "end": "2449260"
  },
  {
    "text": "a senior engineer too whatever we call them these days and we say Okay create a properly very",
    "start": "2449260",
    "end": "2456640"
  },
  {
    "text": "nicely architected API with all the tools you can ever need then they will certainly build something like this",
    "start": "2456640",
    "end": "2462400"
  },
  {
    "text": "because now they have the freedom to do that and the freedom to control their Foundation you cannot build something",
    "start": "2462400",
    "end": "2468280"
  },
  {
    "text": "like this on this Foundation it's just impossible you're going to build basically a castle",
    "start": "2468280",
    "end": "2473380"
  },
  {
    "text": "on top of a toothpick which is in my opinion what clean",
    "start": "2473380",
    "end": "2479200"
  },
  {
    "text": "architecture is so what are minimal apis really well",
    "start": "2479200",
    "end": "2484660"
  },
  {
    "text": "again in my opinion I think they're in an opinion the way with high performance apis inductment",
    "start": "2484660",
    "end": "2490480"
  },
  {
    "text": "with minimal amount of implicitly added features and the flexibility to opt in the features and the structure that you",
    "start": "2490480",
    "end": "2497140"
  },
  {
    "text": "need is about you is about choice so now with all that said let's take a",
    "start": "2497140",
    "end": "2503020"
  },
  {
    "text": "look at what is possible with minimal apis",
    "start": "2503020",
    "end": "2507960"
  },
  {
    "text": "when I go back to this project over here I'm going to show you this abstraction API now this is on GitHub so if you",
    "start": "2509260",
    "end": "2515500"
  },
  {
    "text": "wanna use it and do something with it just says Nick shops is GitHub you're",
    "start": "2515500",
    "end": "2521200"
  },
  {
    "text": "going to find it under a minimal API so what do I have here this is an API",
    "start": "2521200",
    "end": "2527440"
  },
  {
    "text": "built on minimal API technology you wouldn't know just by looking at it",
    "start": "2527440",
    "end": "2532660"
  },
  {
    "text": "because it has folders it has settings it has validation it has structure well",
    "start": "2532660",
    "end": "2538660"
  },
  {
    "text": "this is only possible because we now have minimal API technology backing it up there are no controllers in here I'm",
    "start": "2538660",
    "end": "2545020"
  },
  {
    "text": "gonna start this and show you how it works so your regular apis here",
    "start": "2545020",
    "end": "2553480"
  },
  {
    "text": "and then I'm going to go to the structure.http and call some endpoints so what I can do this is a",
    "start": "2553480",
    "end": "2560440"
  },
  {
    "text": "rest API with customers being the object you're dealing with and I'm gonna go and try to get all the",
    "start": "2560440",
    "end": "2566140"
  },
  {
    "text": "customers in the system now there is no customers so I'm going to get an empty response what I can do is I can create a customer",
    "start": "2566140",
    "end": "2573640"
  },
  {
    "text": "so I'm going to go here and just say create that customer and the customer was created I used update to do that",
    "start": "2573640",
    "end": "2581260"
  },
  {
    "text": "or did I no I just create that's good so you have 201 created the right status code you",
    "start": "2581260",
    "end": "2589359"
  },
  {
    "text": "have the location header over here this is exactly how rest API would be I can go ahead and edit that user using the ID",
    "start": "2589359",
    "end": "2596920"
  },
  {
    "text": "and delete that user excuse me and you can also retrieve that user so this works and behaves as a rest",
    "start": "2596920",
    "end": "2604119"
  },
  {
    "text": "API um it also if I go in the console",
    "start": "2604119",
    "end": "2611280"
  },
  {
    "text": "has full Swagger support so all my documentation about this API is",
    "start": "2614680",
    "end": "2620619"
  },
  {
    "text": "here customers endpoint the object is here that accepts is here everything is",
    "start": "2620619",
    "end": "2626319"
  },
  {
    "text": "here very very nicely the request did not pass validation checks customer was created successfully this is all the",
    "start": "2626319",
    "end": "2632560"
  },
  {
    "text": "documentation you need in your minimal API how is that even possible",
    "start": "2632560",
    "end": "2639280"
  },
  {
    "text": "let's take a look how it is my entry point for this structure is actually these endpoints folder so I have all of",
    "start": "2639280",
    "end": "2647440"
  },
  {
    "text": "my endpoints for my customer in here so if I want to create a customer all I do is I say httpost customer and then in",
    "start": "2647440",
    "end": "2655960"
  },
  {
    "text": "this case I say allow Anonymous I have no Authentication and then I create a class that extends the class endpoint and then",
    "start": "2655960",
    "end": "2663520"
  },
  {
    "text": "I specify my input and my output my request contract and my response contract",
    "start": "2663520",
    "end": "2668680"
  },
  {
    "text": "and that is it I don't have to explicitly make it be referenced anywhere because",
    "start": "2668680",
    "end": "2674200"
  },
  {
    "text": "in program.cs it will be automatically grabbed so all I need to do is actually create a class extend endpoint and that",
    "start": "2674200",
    "end": "2682300"
  },
  {
    "text": "is it I have an endpoint and now in here I have everything that is just",
    "start": "2682300",
    "end": "2687339"
  },
  {
    "text": "explicitly required by this endpoint and nothing else customer service that is it",
    "start": "2687339",
    "end": "2692800"
  },
  {
    "text": "do I need a logger it's only injected here do I need something specific to create like publish a message for",
    "start": "2692800",
    "end": "2699099"
  },
  {
    "text": "customer creation only here I don't need to inject for that anywhere else like they get which is what you would do in",
    "start": "2699099",
    "end": "2705520"
  },
  {
    "text": "controllers and then I have this handle async method where I'm getting the request I do have",
    "start": "2705520",
    "end": "2710680"
  },
  {
    "text": "the cancellation token I'm converting it to a customer and then create map return",
    "start": "2710680",
    "end": "2716859"
  },
  {
    "text": "and that is it that's all create does I can go to other things like get all same",
    "start": "2716859",
    "end": "2722140"
  },
  {
    "text": "story in this case endpoint without request because get all doesn't have an object that you need to get it's just a",
    "start": "2722140",
    "end": "2728740"
  },
  {
    "text": "customer's call same thing you return it and please buy do not think that this is the way you",
    "start": "2728740",
    "end": "2735760"
  },
  {
    "text": "should be building an API this is just one of the ways you can build them just because now it is truly possible yes",
    "start": "2735760",
    "end": "2741760"
  },
  {
    "text": "technically you can say Nick you could do that by having single action controllers you didn't need this but",
    "start": "2741760",
    "end": "2748180"
  },
  {
    "text": "this is actually way faster because minimal apis are faster and now you control the full pipeline which you do",
    "start": "2748180",
    "end": "2754359"
  },
  {
    "text": "not do in Old School MVC another thing is that now if I want to",
    "start": "2754359",
    "end": "2760240"
  },
  {
    "text": "have a validator the only thing I need to do is just create the validator class using fluent validation",
    "start": "2760240",
    "end": "2766599"
  },
  {
    "text": "and then specify the request object and that is it nor do I need to say this",
    "start": "2766599",
    "end": "2772000"
  },
  {
    "text": "validates this it is implied based on what the abstract validator is created",
    "start": "2772000",
    "end": "2778060"
  },
  {
    "text": "for so if it's not empty it's gonna fail or if it is empty it's gonna fail same with everything else the other",
    "start": "2778060",
    "end": "2784839"
  },
  {
    "text": "thing is the summaries if I want to document an endpoint the only thing I need to say is create a summary class",
    "start": "2784839",
    "end": "2791079"
  },
  {
    "text": "that extends summary and wraps that endpoint so summary for that endpoint and all of my documentation for that",
    "start": "2791079",
    "end": "2797319"
  },
  {
    "text": "endpoint is here you could of course use XML commands as well on the 10 point class that's totally fine but you can",
    "start": "2797319",
    "end": "2804520"
  },
  {
    "text": "also have it in a single class with which I personally prefer and then you have other stuff like your",
    "start": "2804520",
    "end": "2811599"
  },
  {
    "text": "mapping if you want to have any of that and the startup.cs which is where all the magic is happening so that's what my",
    "start": "2811599",
    "end": "2817480"
  },
  {
    "text": "startup.cs is my project.cs looks like sorry program",
    "start": "2817480",
    "end": "2822700"
  },
  {
    "text": "and the only thing I have here is this add fast end points call now fasting points is a third part library that is",
    "start": "2822700",
    "end": "2829000"
  },
  {
    "text": "using minimal ABS to make that possible I was actually working on something that is effectively What fast and points and",
    "start": "2829000",
    "end": "2835839"
  },
  {
    "text": "end up being and because the developer was way faster than me I actually just reused that so fast and points is what",
    "start": "2835839",
    "end": "2842859"
  },
  {
    "text": "provides all this logic and then we have a middleware to catch",
    "start": "2842859",
    "end": "2848200"
  },
  {
    "text": "everything like I said sequence does matter and then I'm not cheating here the only thing I'm hiding from you is",
    "start": "2848200",
    "end": "2853839"
  },
  {
    "text": "this error response building so if we catch a failure we wrap it into a",
    "start": "2853839",
    "end": "2859000"
  },
  {
    "text": "specific object and then we'll just retire it but really that is it",
    "start": "2859000",
    "end": "2865480"
  },
  {
    "text": "so maybe it is not for you but it is definitely for me and what I",
    "start": "2865480",
    "end": "2871960"
  },
  {
    "text": "needed and this is again what is this is about it's about you it's about choice now let's talk about the phenomenon now",
    "start": "2871960",
    "end": "2878079"
  },
  {
    "text": "I like to call minimal Valley just to sort of describe what's the minimal API viability per project and even though",
    "start": "2878079",
    "end": "2885700"
  },
  {
    "text": "the horizontal line is supposed to show time um it's really type of project because",
    "start": "2885700",
    "end": "2891339"
  },
  {
    "text": "the life cycle of a product usually these days looks like this so I think that minimal API is extremely",
    "start": "2891339",
    "end": "2898540"
  },
  {
    "text": "viable for beginner projects demos like we already saw proof of Concepts and",
    "start": "2898540",
    "end": "2904359"
  },
  {
    "text": "will actually approve Concepts so for those things you can just very",
    "start": "2904359",
    "end": "2909700"
  },
  {
    "text": "really get started you can very quickly have a demo very quickly have a proof of concept and the amazing thing about the last one is that you can take your POC",
    "start": "2909700",
    "end": "2916839"
  },
  {
    "text": "exactly as it is and turn it into aerial application without too much effort because you have a blazing fast",
    "start": "2916839",
    "end": "2924280"
  },
  {
    "text": "structure with minimal apis you can just reuse that you don't need to migrate or graduate into controllers which is the",
    "start": "2924280",
    "end": "2931359"
  },
  {
    "text": "Assumption of many people but I don't think that it's really viable for this chunky Enterprise",
    "start": "2931359",
    "end": "2937480"
  },
  {
    "text": "applications now chunky Enterprise applications doesn't really mean you know monoliths Beyond saving it can",
    "start": "2937480",
    "end": "2943839"
  },
  {
    "text": "still be a very well architected and modular monolith but I don't think that the type of",
    "start": "2943839",
    "end": "2950200"
  },
  {
    "text": "project company and developer really will benefit from moving away because if your API or your app is slow you're not",
    "start": "2950200",
    "end": "2957640"
  },
  {
    "text": "gonna you're not going to get anything from the benefits of using window apis",
    "start": "2957640",
    "end": "2962800"
  },
  {
    "text": "however I do think that the best case scenario for minimal EPS in the best use case is actually microservices minimal",
    "start": "2962800",
    "end": "2970780"
  },
  {
    "text": "API micro Services both of them are supposed to be small I've never written",
    "start": "2970780",
    "end": "2976540"
  },
  {
    "text": "one that's more than 1.5 000 lines of code the complexities on the architecture so",
    "start": "2976540",
    "end": "2982839"
  },
  {
    "text": "why don't we keep the code very very simple and easy to work with so that's how I feel about this now",
    "start": "2982839",
    "end": "2989680"
  },
  {
    "text": "I want to wrap this talk by talking about the importance of minimal apis about.net in general and about you",
    "start": "2989680",
    "end": "2997000"
  },
  {
    "text": "let's talk about how people get into a programming language so there's many ways and this is not an",
    "start": "2997000",
    "end": "3002220"
  },
  {
    "text": "exhaustive list but they probably have an idea they want to build that's how many of you maybe got started",
    "start": "3002220",
    "end": "3010440"
  },
  {
    "text": "um my cousin wanted to get started with programming because he wanted to build Tetris from scratch how do you do that",
    "start": "3010440",
    "end": "3015599"
  },
  {
    "text": "well I have an idea I'm gonna just do it University School College I'm sure many",
    "start": "3015599",
    "end": "3021180"
  },
  {
    "text": "of you have also started program because of that curiosity as a beginner how do you do",
    "start": "3021180",
    "end": "3028200"
  },
  {
    "text": "that or that person on YouTube said they can make I don't know 150 000 dollars a",
    "start": "3028200",
    "end": "3034260"
  },
  {
    "text": "year by just taking a bootcamp I want to do that as well that's a lie by the way it's never going to happen",
    "start": "3034260",
    "end": "3039359"
  },
  {
    "text": "well you know they're selling the dream also curiosity is an experienced programmer this is another one I personally really like to get into other",
    "start": "3039359",
    "end": "3046740"
  },
  {
    "text": "programming languages to see where c-sharp is actually getting inspired from because it's just all of these",
    "start": "3046740",
    "end": "3052859"
  },
  {
    "text": "features being added they're not features you've never seen anywhere else they're all coming from somewhere usually a shop",
    "start": "3052859",
    "end": "3060059"
  },
  {
    "text": "and the last thing is because the company is using it that's how I got started with C sharp I desperately in",
    "start": "3060059",
    "end": "3065940"
  },
  {
    "text": "the job the first person who said yes um just happened to use C sharp in the",
    "start": "3065940",
    "end": "3071160"
  },
  {
    "text": "company and I just got into it but here's the thing these are the only ones that really are",
    "start": "3071160",
    "end": "3079319"
  },
  {
    "text": "relevant for c-sharp now you can say Nick the unity game engine actually gets",
    "start": "3079319",
    "end": "3084480"
  },
  {
    "text": "a ton of people into c-sharp but the truth is for any of you who have seen Unity code",
    "start": "3084480",
    "end": "3090500"
  },
  {
    "text": "it's a whole different story it's the wild west over there there's no rules in",
    "start": "3090500",
    "end": "3096540"
  },
  {
    "text": "the way you can write C sharp in unity so it's not the type of developer that would really graduate into an aspen core",
    "start": "3096540",
    "end": "3102540"
  },
  {
    "text": "developer and maybe it's not developer you really want to hire so let's focus on these three",
    "start": "3102540",
    "end": "3109140"
  },
  {
    "text": "so here's the thing about this only this one is one that we can sort of",
    "start": "3109140",
    "end": "3114300"
  },
  {
    "text": "control with c-sharp because universities change what they teach schools or colleges and companies",
    "start": "3114300",
    "end": "3121680"
  },
  {
    "text": "migrate from java to node to ABC shop to rust eventually to whatever they want",
    "start": "3121680",
    "end": "3128880"
  },
  {
    "text": "so let's take that keep that in mind and take that and talk about cranes and you know how the Lego thing actually worked",
    "start": "3128880",
    "end": "3135059"
  },
  {
    "text": "this one won't this is just completely random it's not gonna happen so how do trainers work so you get on",
    "start": "3135059",
    "end": "3142319"
  },
  {
    "text": "the train you stay on the train you get off the train and the trainer will keep doing this journey as long as there's",
    "start": "3142319",
    "end": "3148380"
  },
  {
    "text": "passengers and this very much applies to many things in life as well as in programming languages",
    "start": "3148380",
    "end": "3154020"
  },
  {
    "text": "so let's talk about the programming language Express people pick up a language people use a language people stop using",
    "start": "3154020",
    "end": "3160920"
  },
  {
    "text": "a language and the language is dying when a plus B minus C is decreasing over",
    "start": "3160920",
    "end": "3166319"
  },
  {
    "text": "time so effectively the more people the less people you have using a language over",
    "start": "3166319",
    "end": "3172380"
  },
  {
    "text": "time that's when your language is dying but there's also a catch-22 with this situation because the more people use",
    "start": "3172380",
    "end": "3179220"
  },
  {
    "text": "the language the more people are likely to use a language and the more people stop using a language then more people",
    "start": "3179220",
    "end": "3184260"
  },
  {
    "text": "will stop using a language because it's not popular anymore so if you get into that downhill Trend",
    "start": "3184260",
    "end": "3189660"
  },
  {
    "text": "it's very hard to recover c-sharp is good at B and C at people using the language they love it I",
    "start": "3189660",
    "end": "3196380"
  },
  {
    "text": "absolutely love it and I've written many languages since I got started with C sharp and always something is missing",
    "start": "3196380",
    "end": "3202619"
  },
  {
    "text": "and also people stop using C sharp because it's been around for 20 years maybe you picked it up at your 40s",
    "start": "3202619",
    "end": "3208800"
  },
  {
    "text": "you're retired now you don't need to use it anymore so with constant amount of people you know retiring or stop using",
    "start": "3208800",
    "end": "3216599"
  },
  {
    "text": "it we also need an equal amount of people picking it up if we want the people the language to to survive",
    "start": "3216599",
    "end": "3223740"
  },
  {
    "text": "so ultimately minimal apis are a step towards increasing a it is a step towards getting it to the hands of new",
    "start": "3223740",
    "end": "3230880"
  },
  {
    "text": "Developers that are the developers that will eventually be the future of.net",
    "start": "3230880",
    "end": "3236460"
  },
  {
    "text": "so when you hear people say things or you say things like they've done the thing",
    "start": "3236460",
    "end": "3241740"
  },
  {
    "text": "should not be working on things like this this is not something that they should be wasting the time with this is",
    "start": "3241740",
    "end": "3247020"
  },
  {
    "text": "not for me well the truth is that if you want to be in a situation where you can hire the next generation of C sharp and",
    "start": "3247020",
    "end": "3253859"
  },
  {
    "text": "Doctor Developers then it is for you even if it's not for you thank you very much and keep coding",
    "start": "3253859",
    "end": "3260700"
  },
  {
    "text": "foreign",
    "start": "3260700",
    "end": "3263700"
  }
]