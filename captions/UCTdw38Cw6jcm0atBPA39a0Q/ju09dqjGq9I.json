[
  {
    "text": "all right I think I'm going to start here I have a lot of content to",
    "start": "6919",
    "end": "12440"
  },
  {
    "text": "cover thank you for coming to my session and it's pleasure to be here that's my",
    "start": "13679",
    "end": "19199"
  },
  {
    "text": "first time in Copenhagen it's a nice city uh so here's our agenda I'm going",
    "start": "19199",
    "end": "24599"
  },
  {
    "text": "to talk about the Cosmos TV and how to make it more you know scalable hopefully more affordable",
    "start": "24599",
    "end": "30640"
  },
  {
    "text": "uh with this you know uh uh presentation so our agenda is kind of looks like there's not that much out there but",
    "start": "30640",
    "end": "36600"
  },
  {
    "text": "actually there's a lot of slides here so before I start I guess let me talk about myself my name is Assan saan and I am",
    "start": "36600",
    "end": "45120"
  },
  {
    "text": "from Cleveland Ohio uh I'm a cosmos dbme you might be see me on the I don't know",
    "start": "45120",
    "end": "51800"
  },
  {
    "text": "YouTube or any other events usually I talk about the cosmos CV SQL Server I'm a data platform",
    "start": "51800",
    "end": "57600"
  },
  {
    "text": "mvp2 so I'm uh really happy to be part of the program uh I developed the cosmos",
    "start": "57600",
    "end": "63120"
  },
  {
    "text": "CB SQL Studio you can actually download that from that barcode or you can download directly from the vs code if",
    "start": "63120",
    "end": "69439"
  },
  {
    "text": "you like and if you will have any questions after this session please uh follow me from the LinkedIn or the",
    "start": "69439",
    "end": "76119"
  },
  {
    "text": "Twitter I be more than happy to you know help you from there and answering all your",
    "start": "76119",
    "end": "81759"
  },
  {
    "text": "questions now uh let's talk about the cosmos TB first I guess we should talk about the physical partition of Cosmos",
    "start": "81759",
    "end": "88799"
  },
  {
    "text": "TB because that's usually where the biggest problems are uh in the physical",
    "start": "88799",
    "end": "93920"
  },
  {
    "text": "partition when you actually create let's say one web application Cosmos CB gives",
    "start": "93920",
    "end": "99079"
  },
  {
    "text": "you one database server and well we call that physical partition so this server",
    "start": "99079",
    "end": "104719"
  },
  {
    "text": "has actually limits there are two numbers here uh one of them is the storage limit 50 gig storage and the",
    "start": "104719",
    "end": "111000"
  },
  {
    "text": "other one is the 10,000 request unit per second that's really the horsepower that it can give you the maximum so as your",
    "start": "111000",
    "end": "118759"
  },
  {
    "text": "data is going to get larg ler and your application is going to get busier one of those numbers you know the number is",
    "start": "118759",
    "end": "124320"
  },
  {
    "text": "going to get close to I don't know storage is going to be 40 45 and as soon as it's going to get hit to that number",
    "start": "124320",
    "end": "130440"
  },
  {
    "text": "Cosmos DB is going to actually give you more database uh servers depending on your needs so this is the horizontal",
    "start": "130440",
    "end": "138519"
  },
  {
    "text": "scaling that means that you know okay if you get the close to 50 gig we are not going to try to make this database",
    "start": "138519",
    "end": "144680"
  },
  {
    "text": "bigger we are going to give you another database that you can use so you you",
    "start": "144680",
    "end": "150000"
  },
  {
    "text": "might guess like okay how big we can get with this I was actually uh watching",
    "start": "150000",
    "end": "155640"
  },
  {
    "text": "that video from the cosmos DB and they share this information I don't know if you know or",
    "start": "155640",
    "end": "160920"
  },
  {
    "text": "not but chat GPT is actually using the cosmos TB in the back end so these are the numbers that actually uh they",
    "start": "160920",
    "end": "167519"
  },
  {
    "text": "deliver in that video so as you can see the first one is giving you the number",
    "start": "167519",
    "end": "172760"
  },
  {
    "text": "of the transactions those are the billions so in March 2023 we are looking",
    "start": "172760",
    "end": "178640"
  },
  {
    "text": "like 2.3 billion of transactions Cosmos DB was handling and as soon as they",
    "start": "178640",
    "end": "183959"
  },
  {
    "text": "actually put some more uh modles and features you can see that that number kind of go crazy from there in November",
    "start": "183959",
    "end": "191120"
  },
  {
    "text": "we have like 10.6 billion uh transactions and also if you look at the",
    "start": "191120",
    "end": "197000"
  },
  {
    "text": "physical partitions those are actually respecting those numbers they are going high with the",
    "start": "197000",
    "end": "203159"
  },
  {
    "text": "transactions so in November 2023 we have 25,000 uh partitions which is database",
    "start": "203159",
    "end": "211280"
  },
  {
    "text": "servers uh just for the chat GPD and looks like the partition key is the user ID which makes sense uh whenever you do",
    "start": "211280",
    "end": "219280"
  },
  {
    "text": "something with the chat GPT you have the user ID so you know which partition has the uh you know the data so everything",
    "start": "219280",
    "end": "225959"
  },
  {
    "text": "kind of scalable very easily if you pick the wrong partition key you are really in deep trouble here because we have",
    "start": "225959",
    "end": "231400"
  },
  {
    "text": "like 25,000 you know partitions here to deal with and also by just looking those",
    "start": "231400",
    "end": "236760"
  },
  {
    "text": "numbers I said that you know okay we have like 50 gig that's the of a per partition and also we have 10,000 so by",
    "start": "236760",
    "end": "243480"
  },
  {
    "text": "just looking at the you know the physical partition you can easily figure out how many actually transactions are",
    "start": "243480",
    "end": "249920"
  },
  {
    "text": "getting handled by one physical partition and that's going to give you the last one which is the right now",
    "start": "249920",
    "end": "256239"
  },
  {
    "text": "424,000 uh Handle by one physical partition also my other guess here is in",
    "start": "256239",
    "end": "264000"
  },
  {
    "text": "the right corner here so if each physical partition is Health full that",
    "start": "264000",
    "end": "269520"
  },
  {
    "text": "makes 625 terabyte of data uh is getting you know processed in November 2023 so",
    "start": "269520",
    "end": "276720"
  },
  {
    "text": "I'm not sure what is the latest but probably is much higher than that right now so Cosmos TV is easily you know very",
    "start": "276720",
    "end": "283280"
  },
  {
    "text": "scalable and it can handle Global application like that very easily uh and",
    "start": "283280",
    "end": "288320"
  },
  {
    "text": "also you know they didn't have to kind of go change those things in the outer scale actually let's get outter scale up",
    "start": "288320",
    "end": "293840"
  },
  {
    "text": "so Cosmos TB is actually controlling the scaling uh the traffic and the partitions",
    "start": "293840",
    "end": "300560"
  },
  {
    "text": "now not everybody has chat GPT right so we our applications are usually uh smaller than that so let's say we have a",
    "start": "300560",
    "end": "308479"
  },
  {
    "text": "simple application and we are just keeping orders in one container we pick",
    "start": "308479",
    "end": "313840"
  },
  {
    "text": "the customer ID and looks like we have 202 gig of data uh by just two numbers",
    "start": "313840",
    "end": "320639"
  },
  {
    "text": "that I just talk about the 50 gig and 10,000 you can easily read this diagram",
    "start": "320639",
    "end": "325840"
  },
  {
    "text": "and make decisions on it for example we have one physical partition looks like",
    "start": "325840",
    "end": "330919"
  },
  {
    "text": "it's 44 gig that is going to get split soon and you know that this is going to",
    "start": "330919",
    "end": "337000"
  },
  {
    "text": "split and we are going to have another database uh server and health 22 gig is going to stay here and we are going to",
    "start": "337000",
    "end": "342919"
  },
  {
    "text": "have another one with 22 gig that is important because right now it looks like we have 10,000 request units uh per",
    "start": "342919",
    "end": "350319"
  },
  {
    "text": "second right 10,000 request units per second actually can deliver all these",
    "start": "350319",
    "end": "355720"
  },
  {
    "text": "operations per second so that's really not like a small it can handle all those",
    "start": "355720",
    "end": "361680"
  },
  {
    "text": "uh you know in per second if you are going to have uh one more uh database server though that",
    "start": "361680",
    "end": "368120"
  },
  {
    "text": "numbers are might change for example as it is right now each physical partition",
    "start": "368120",
    "end": "373639"
  },
  {
    "text": "has 2,000 request units your total is 10,000 so it's divided by the number of physical partition if you are going to",
    "start": "373639",
    "end": "380240"
  },
  {
    "text": "have one more then that means each of them is going to have like a lower number so that's why it's important to",
    "start": "380240",
    "end": "386080"
  },
  {
    "text": "kind of watch which physical partition is going to get split so you can kind of be you know uh on top of you know if",
    "start": "386080",
    "end": "392639"
  },
  {
    "text": "something goes wrong you will be you will know it also looks like frequ",
    "start": "392639",
    "end": "398039"
  },
  {
    "text": "queries out there has the partition Kingdom so that is really great well",
    "start": "398039",
    "end": "404919"
  },
  {
    "text": "meet my friend John John feels good because well everything is working great here he created a good you know",
    "start": "404919",
    "end": "411639"
  },
  {
    "text": "architecture here and as long as you know customer ID is out there this is going to scale well and it's balanced",
    "start": "411639",
    "end": "419639"
  },
  {
    "text": "so maybe John's manager see that well Cosmos TB is you know looking promising",
    "start": "419639",
    "end": "425319"
  },
  {
    "text": "so maybe he's going to give another project to another developer so other developer the project was well we don't",
    "start": "425319",
    "end": "432319"
  },
  {
    "text": "have the customer ID anymore but maybe the other developer is not really familiar with the cosmos DB that much so",
    "start": "432319",
    "end": "440199"
  },
  {
    "text": "if we are going to use the same structure that actually John created well we have a problem here because well",
    "start": "440199",
    "end": "446440"
  },
  {
    "text": "we don't have the partition key available in this case and if we are going to actually not catch this and go",
    "start": "446440",
    "end": "452919"
  },
  {
    "text": "production with it you probably break the other one which is actually working because this select statement is going",
    "start": "452919",
    "end": "460240"
  },
  {
    "text": "to go in every partition you have and well you're going to be in trouble because you're going to start to use the",
    "start": "460240",
    "end": "466759"
  },
  {
    "text": "memory and the CPU of each server and it's going to build you for that then that means you potentially broke the",
    "start": "466759",
    "end": "473199"
  },
  {
    "text": "other one because this one is going to need more resources and also this one is going to use resources that you really",
    "start": "473199",
    "end": "479000"
  },
  {
    "text": "uh don't have to well my friend Joe here is really",
    "start": "479000",
    "end": "484319"
  },
  {
    "text": "confused because when this happened you're going to have like a huge bill coming up and your manager is not going",
    "start": "484319",
    "end": "490280"
  },
  {
    "text": "to be happy with this now I see this a lot and when this",
    "start": "490280",
    "end": "495960"
  },
  {
    "text": "happens there are a couple of things you can do uh the first thing you can do is probably the change feed function in",
    "start": "495960",
    "end": "503120"
  },
  {
    "text": "change feed function all you are really doing is you are duplicating the data to another container with a different",
    "start": "503120",
    "end": "509080"
  },
  {
    "text": "partition key so in our case we have orders container and our partition key",
    "start": "509080",
    "end": "514599"
  },
  {
    "text": "is customer ID the first step we are going to do here is we are going to create another",
    "start": "514599",
    "end": "520440"
  },
  {
    "text": "container and let's call that on orders under product with a different partition",
    "start": "520440",
    "end": "525720"
  },
  {
    "text": "key that actually we have so product ID is the one that we were trying to use",
    "start": "525720",
    "end": "532360"
  },
  {
    "text": "then we are going to actually move that data from orders to the orders product table so they kind of uh get sync we",
    "start": "532360",
    "end": "539600"
  },
  {
    "text": "have the same data duplicating the data here now we are going to use a change feed function change feed function is",
    "start": "539600",
    "end": "545440"
  },
  {
    "text": "available in the nosql cassendra and gron apis uh when change Fe function happens",
    "start": "545440",
    "end": "552640"
  },
  {
    "text": "we prefer to use the Azure function and Azure function is going to get trigger every time there's a data change in our",
    "start": "552640",
    "end": "560079"
  },
  {
    "text": "orders container so from here you can really do anything with the Azure function but in this case we are just",
    "start": "560079",
    "end": "566399"
  },
  {
    "text": "going to take this data and sync it to the order product so that's how we are",
    "start": "566399",
    "end": "571600"
  },
  {
    "text": "going to sync keep the syn between two containers you are going to get another insert charge here which is fine because",
    "start": "571600",
    "end": "579160"
  },
  {
    "text": "you are really going to you know save in long term because in this case the query is going to be different uh one of them",
    "start": "579160",
    "end": "585800"
  },
  {
    "text": "if you are looking if you have the order ID you are going to look at the orders container if you have the product ID",
    "start": "585800",
    "end": "591200"
  },
  {
    "text": "you're going to look at the new container so by duplicating the data in no SQL databases is the cheapest way to",
    "start": "591200",
    "end": "597839"
  },
  {
    "text": "kind of handle situation like that rather than you try to repartition or try to find a perfect partition key uh",
    "start": "597839",
    "end": "604480"
  },
  {
    "text": "in nor equal databases included Cosmos DB uh another option that might actually",
    "start": "604480",
    "end": "611880"
  },
  {
    "text": "save you a lot is point read function uh Point read function is available and it",
    "start": "611880",
    "end": "618079"
  },
  {
    "text": "can uh retrieve only one document it will not be like a query and it was the",
    "start": "618079",
    "end": "623360"
  },
  {
    "text": "fastest and cheapest way to actually get a document from Cosmos DB so as you you",
    "start": "623360",
    "end": "629480"
  },
  {
    "text": "can see there are some uh requirements here uh first one is the partition key it is required and also the document ID",
    "start": "629480",
    "end": "636240"
  },
  {
    "text": "is required to actually execute a point read uh feature or operation uh if you",
    "start": "636240",
    "end": "642639"
  },
  {
    "text": "compare that to the query in query if you need more than one then you must need to use the query uh and as you can",
    "start": "642639",
    "end": "649320"
  },
  {
    "text": "see request charge let's say our JSM data model is maybe 1 kilobyte data that",
    "start": "649320",
    "end": "655000"
  },
  {
    "text": "is going to cost you if you use the point read one request units in the is going to cost you at least 2.3 or higher",
    "start": "655000",
    "end": "663279"
  },
  {
    "text": "uh and the main reason for that is uh for quy to run you need to run the execution plan which point read doesn't",
    "start": "663279",
    "end": "669360"
  },
  {
    "text": "even need that so that's the one of the main reasons uh Point read is much",
    "start": "669360",
    "end": "674760"
  },
  {
    "text": "cheaper so here is for example what uh query looks like and what point read",
    "start": "674760",
    "end": "681480"
  },
  {
    "text": "looks like they pull the exactly the same document but one of them is uh cheaper than the other one which is the",
    "start": "681480",
    "end": "687680"
  },
  {
    "text": "point read and you can do the point Point only from the SDK so you cannot run that from the as a",
    "start": "687680",
    "end": "694880"
  },
  {
    "text": "query next one is connecting the Cosmos TV so Cosmos TV is a cloud database so",
    "start": "694880",
    "end": "701639"
  },
  {
    "text": "sometimes depending on your you know uh I guess the it structure firewall settings it can be kind of um sometimes",
    "start": "701639",
    "end": "708839"
  },
  {
    "text": "challenge to connect the Cosmos TV so we have the first option Gateway mode",
    "start": "708839",
    "end": "714000"
  },
  {
    "text": "Gateway mode is really we just put one server between your application and the cosmos TB and your application actually",
    "start": "714000",
    "end": "721240"
  },
  {
    "text": "connects the to the server first and server is the one which actually retrieves or inserts the data for you",
    "start": "721240",
    "end": "727720"
  },
  {
    "text": "and you almost like create this network up between the cosmos TB and your",
    "start": "727720",
    "end": "733040"
  },
  {
    "text": "application so I guess the first thing to know when you use this you are",
    "start": "733040",
    "end": "738199"
  },
  {
    "text": "actually using the uh https and the single DNS Point uh many companies use",
    "start": "738199",
    "end": "744360"
  },
  {
    "text": "this because it might not be easy to change your firewall settings or opening new ports so this is the really the",
    "start": "744360",
    "end": "750480"
  },
  {
    "text": "easiest way to reach to Cosmos TV without kind of going to it and try to I",
    "start": "750480",
    "end": "755680"
  },
  {
    "text": "guess involve the security and all kind of stuff that can get long I guess from there but as you can see this server is",
    "start": "755680",
    "end": "762519"
  },
  {
    "text": "actually getting share by other Cosmos DB customers so that is really not your",
    "start": "762519",
    "end": "767639"
  },
  {
    "text": "server but but that's is why it's free I guess uh and the other thing to know we",
    "start": "767639",
    "end": "773040"
  },
  {
    "text": "have an inactivity limit here so if you are not going to use that connection 2 minutes that's going to get disconnected",
    "start": "773040",
    "end": "778959"
  },
  {
    "text": "and DK will reenable that but we will see in a little bit actually opening ports or opening connections can be",
    "start": "778959",
    "end": "785240"
  },
  {
    "text": "costly in Cosmos DB uh and also since this is an https just like any other you",
    "start": "785240",
    "end": "791560"
  },
  {
    "text": "know browser when you kind of try to connect to the applications you have a limited number of connections which is",
    "start": "791560",
    "end": "796920"
  },
  {
    "text": "usually 50 uh if you want to change that you can easily do that by changing the",
    "start": "796920",
    "end": "802320"
  },
  {
    "text": "documents. client connection policy and Max connection limit that number can go",
    "start": "802320",
    "end": "807440"
  },
  {
    "text": "from 100 to 1,000 and you can actually you know make that connection uh much larger if you need",
    "start": "807440",
    "end": "814440"
  },
  {
    "text": "to next one is the direct connection direct connection is the default way",
    "start": "814440",
    "end": "820600"
  },
  {
    "text": "that uh from the SDK uh using the cosmos DB using the uh drag Point drag point so",
    "start": "820600",
    "end": "827720"
  },
  {
    "text": "that's a long live connection that means that you don't have a two-minute limit anymore and it's using the TCP using TLS",
    "start": "827720",
    "end": "835480"
  },
  {
    "text": "so it's pretty secure but because of that you might need uh a firewall change",
    "start": "835480",
    "end": "841720"
  },
  {
    "text": "or you might need to kind of go and open New Ports to make this available and in here as you can see we don't have a",
    "start": "841720",
    "end": "847880"
  },
  {
    "text": "network hop anymore we don't have a server in the between your application and the uh database which makes things",
    "start": "847880",
    "end": "854560"
  },
  {
    "text": "much faster and quicker uh this is available only in net SDK and Java SDK",
    "start": "854560",
    "end": "861839"
  },
  {
    "text": "if you are using the uh the version 2 sdk2 you can actually",
    "start": "861839",
    "end": "867480"
  },
  {
    "text": "overwrite that as you can see here I'm doing it for the cosmos client uh you can easily do that to direct because",
    "start": "867480",
    "end": "873680"
  },
  {
    "text": "sdk2 is default way to Gateway uh rather than direct next one is dedicated Gateway",
    "start": "873680",
    "end": "882279"
  },
  {
    "text": "mode this is the same idea with the Gateway mode but as the name suggest",
    "start": "882279",
    "end": "887680"
  },
  {
    "text": "this is your server uh and well since it's your server you have to buy it right it's not free anymore so to",
    "start": "887680",
    "end": "894680"
  },
  {
    "text": "actually be able to use that first you have to go to Dedicated mod and buy a size of a server just pick it wisely",
    "start": "894680",
    "end": "902399"
  },
  {
    "text": "because you cannot change the size later uh as as soon as you have that uh",
    "start": "902399",
    "end": "908079"
  },
  {
    "text": "available the connection string will be available under the keys and just use that connection string to be able to use",
    "start": "908079",
    "end": "914880"
  },
  {
    "text": "the dedicated mode and really uh you might ask now why do I need to do that",
    "start": "914880",
    "end": "920440"
  },
  {
    "text": "the other Gateway is free why do I want to pay that well first of all this is yours so you are not really sharing with",
    "start": "920440",
    "end": "926959"
  },
  {
    "text": "anyone but also in dedicated Gateway mode it gives you a little bit more features like caching data if you have",
    "start": "926959",
    "end": "934839"
  },
  {
    "text": "an application and you are always using the same data again and again well caching might be really a good point for",
    "start": "934839",
    "end": "942319"
  },
  {
    "text": "you to actually save some uh you know bills with the cosmos DB as you can see",
    "start": "942319",
    "end": "948040"
  },
  {
    "text": "uh in here the first one our application is trying to read or query the data uh",
    "start": "948040",
    "end": "953160"
  },
  {
    "text": "it goes our dat dedicated Gateway uh server server is the one which is getting the data and pulling it back",
    "start": "953160",
    "end": "960519"
  },
  {
    "text": "when we do the same request next time then you know that's going to cost us zero request units because well we",
    "start": "960519",
    "end": "966279"
  },
  {
    "text": "already cach that data and if your data is not changing in your application and if you are trying to read the same data",
    "start": "966279",
    "end": "971440"
  },
  {
    "text": "again and again this will save you a lot of request units the only I guess the",
    "start": "971440",
    "end": "976880"
  },
  {
    "text": "thing that you really need to watch is the consensus level your consensus level",
    "start": "976880",
    "end": "982079"
  },
  {
    "text": "must be session or eventual for this thing to work if it's something else you",
    "start": "982079",
    "end": "988319"
  },
  {
    "text": "know it might not work but what you can do is I'm not really saying go and change your databases consistency level",
    "start": "988319",
    "end": "993480"
  },
  {
    "text": "you can easily change your query's consistency level uh and make this run if you really you know need",
    "start": "993480",
    "end": "1000639"
  },
  {
    "text": "them so how do we make this work uh first of all you need the SDK",
    "start": "1000639",
    "end": "1006480"
  },
  {
    "text": "3.2.1 or later uh then as I said before we have the dedicated Gateway uh right",
    "start": "1006480",
    "end": "1014079"
  },
  {
    "text": "here first you have to go here and pick your server size it's not as it becomes",
    "start": "1014079",
    "end": "1019519"
  },
  {
    "text": "available it will be under the keys you just take your connection string from there and put it in your uh web config",
    "start": "1019519",
    "end": "1026760"
  },
  {
    "text": "or wherever you are keeping your you know like keys and you are ready to go so from here first of all as I say",
    "start": "1026760",
    "end": "1033438"
  },
  {
    "text": "before the direct mode is the default mode of stk3 which is the last one right now so that means that you have to go",
    "start": "1033439",
    "end": "1039918"
  },
  {
    "text": "and overwrite your connection mode by using the connection string here",
    "start": "1039919",
    "end": "1046240"
  },
  {
    "text": "uh so as you can see I'm picking the connection mode Gateway I'm forcing that uh for this connection then looks like",
    "start": "1046240",
    "end": "1053039"
  },
  {
    "text": "this is the query I'm running so to make the caching work I have this request options here first of all I want to be",
    "start": "1053039",
    "end": "1060200"
  },
  {
    "text": "sure that consant a level is a session or eventual and here I just keep it eventual if your databas is cons level",
    "start": "1060200",
    "end": "1067840"
  },
  {
    "text": "session eventual already you don't really need this one then you kind of need to tell Cosmos TB how long you want",
    "start": "1067840",
    "end": "1073960"
  },
  {
    "text": "to cach this data so it looks like I am caching this for 30 minutes and",
    "start": "1073960",
    "end": "1079360"
  },
  {
    "text": "this new one here I just commented out that one is actually a new one it's still in I believe private mode right",
    "start": "1079360",
    "end": "1085600"
  },
  {
    "text": "now and if you for whatever reason if that function you don't want to get the data from the integrated cache you can",
    "start": "1085600",
    "end": "1092440"
  },
  {
    "text": "easily control that with that function you can make it true or false and or maybe only one function will always come",
    "start": "1092440",
    "end": "1098280"
  },
  {
    "text": "from database even the is the data is available in Cache so you can Contra that with the bypass integrated cache",
    "start": "1098280",
    "end": "1106440"
  },
  {
    "text": "parameter so as you can see here uh the first time when we run it it returns 592",
    "start": "1106440",
    "end": "1112520"
  },
  {
    "text": "documents cost me 32.25 request units when I send the same request in next 30",
    "start": "1112520",
    "end": "1119799"
  },
  {
    "text": "minutes it's always going to cost me zero request units so yes you're going to pay for the server but if you are",
    "start": "1119799",
    "end": "1125640"
  },
  {
    "text": "reading the same data again and again this can actually save you uh a lot of request UNS uh and it will be",
    "start": "1125640",
    "end": "1133960"
  },
  {
    "text": "useful next one uh let's talk about the cosmos dbsd case Cosmos DB stks do",
    "start": "1134000",
    "end": "1139840"
  },
  {
    "text": "actually much more than other stks of databases especially like if you think about the SQL Server uh really in the",
    "start": "1139840",
    "end": "1146799"
  },
  {
    "text": "other uh SQL Server usually like all the aggregation all the you know the group bu sort by all are done by the database",
    "start": "1146799",
    "end": "1154679"
  },
  {
    "text": "engine Cosmos TV doesn't work like that well I guess it cannot work like that because it has many physical partition",
    "start": "1154679",
    "end": "1160960"
  },
  {
    "text": "the data is not centralized place so for example we have 10 servers here right",
    "start": "1160960",
    "end": "1166440"
  },
  {
    "text": "looks like we have all the orders and I want to get get top 10 orders and I want order by The View count property well if",
    "start": "1166440",
    "end": "1173960"
  },
  {
    "text": "you really think about it well I don't have the partition key here too so that means that I am going to send this query",
    "start": "1173960",
    "end": "1179960"
  },
  {
    "text": "to every physical partition I have which means the data is going to come from all of these places and the database cannot",
    "start": "1179960",
    "end": "1186919"
  },
  {
    "text": "do the top 10 or the order by because it doesn't know what other physical partition data it has so it needs to",
    "start": "1186919",
    "end": "1193280"
  },
  {
    "text": "come to the cosmos DV SDK and SDK is the one which is going to actually eliminate n",
    "start": "1193280",
    "end": "1199280"
  },
  {
    "text": "of the properties is going to give me the top 10 and also it's going to order by The View count so all the",
    "start": "1199280",
    "end": "1204400"
  },
  {
    "text": "aggregations actually happens in the STK which means probably there's all kind of",
    "start": "1204400",
    "end": "1209960"
  },
  {
    "text": "Loops happening out there all kind of resources is going to need so you want to be sure that your SDK wherever it",
    "start": "1209960",
    "end": "1215320"
  },
  {
    "text": "runs it has you know good amount of like resources because it's pretty busy it's doing a lot of stuff there so if you",
    "start": "1215320",
    "end": "1221960"
  },
  {
    "text": "actually see this is the JavaScript SDK and if I try to run the same one here as",
    "start": "1221960",
    "end": "1227120"
  },
  {
    "text": "you can see in the left it we have that query info object and which actually senses what kind of aggregation you",
    "start": "1227120",
    "end": "1234440"
  },
  {
    "text": "might have and it kind of finds for example it finds the order by here and also it kind finds the top 10 out there",
    "start": "1234440",
    "end": "1241720"
  },
  {
    "text": "as long as there is something out there it actually rewrites your query so my query end up with the the one in the",
    "start": "1241720",
    "end": "1247200"
  },
  {
    "text": "right side you see on the top so that kind of helps uh to you know the SDK",
    "start": "1247200",
    "end": "1252240"
  },
  {
    "text": "when the data comes back it can easily order by or do the aggregation uh for",
    "start": "1252240",
    "end": "1257440"
  },
  {
    "text": "the SDK but that's what happens in the back end uh next one if you are using theet",
    "start": "1257440",
    "end": "1264000"
  },
  {
    "text": "SDK there are a couple of things that you should know the first one is you want to be sure that your project is in",
    "start": "1264000",
    "end": "1270720"
  },
  {
    "text": "64-bit not any CPU or 32-bit but 64-bit main reason for that is 64-bit is the",
    "start": "1270720",
    "end": "1278120"
  },
  {
    "text": "only one which has a service interrupt that DL file this file can create the",
    "start": "1278120",
    "end": "1283840"
  },
  {
    "text": "query plans locally that means you don't have to make a request Cosmos TB for a quy plan",
    "start": "1283840",
    "end": "1291080"
  },
  {
    "text": "so you save one request by just making your application 64-bit uh with this uh",
    "start": "1291080",
    "end": "1297640"
  },
  {
    "text": "next one for the garbage collection you want to be sure that you are using the server mode rather than workstation mode",
    "start": "1297640",
    "end": "1304120"
  },
  {
    "text": "and you want to disable the default Trace listener sometimes it can be bottleneck for the CPU and iio in",
    "start": "1304120",
    "end": "1310600"
  },
  {
    "text": "production and if you are testing your application and your application is like 40 or 50,000 request units or more one",
    "start": "1310600",
    "end": "1319200"
  },
  {
    "text": "uh machine is not going to able to actually handle that because that's pretty high request units you might want to test your application with you know",
    "start": "1319200",
    "end": "1325279"
  },
  {
    "text": "multiple uh applic multiple servers because if you're going to do that with",
    "start": "1325279",
    "end": "1330320"
  },
  {
    "text": "the 40 or 50,000 since the application or the server is not going to able to you know handle that you might end up",
    "start": "1330320",
    "end": "1336880"
  },
  {
    "text": "with 429s and you know all kind of weird problems which there's really no problem but your server is the one which is",
    "start": "1336880",
    "end": "1343919"
  },
  {
    "text": "cannot handle all the requests and responses so you want to be sure that you have multiple uh testers I guess",
    "start": "1343919",
    "end": "1349320"
  },
  {
    "text": "test workstations next one is stream API uh",
    "start": "1349320",
    "end": "1356000"
  },
  {
    "text": "this is available in SDK 3 and if you are uh try to use it uh to make actually",
    "start": "1356000",
    "end": "1362720"
  },
  {
    "text": "more uh scalable and smoother because as you can see in sdk2 usually what we do",
    "start": "1362720",
    "end": "1368000"
  },
  {
    "text": "is we Ser serialize the data then deserialize the data when we actually give it back to the application so",
    "start": "1368000",
    "end": "1374240"
  },
  {
    "text": "that's like two kind of uh I guess the ways so in SDK is much smoother just",
    "start": "1374240",
    "end": "1379799"
  },
  {
    "text": "almost like the drag mode and the gate weight mode really we don't have that hop in the in the middle here so for",
    "start": "1379799",
    "end": "1386240"
  },
  {
    "text": "example let's look at the old one which with the sdk2 this is the most common one so as you can see we have a list of",
    "start": "1386240",
    "end": "1394400"
  },
  {
    "text": "sales so every time we are actually creating a sale here we are doing the serialization when you are actually done",
    "start": "1394400",
    "end": "1401200"
  },
  {
    "text": "with that and try to give back to the application usually you convert this to",
    "start": "1401200",
    "end": "1406799"
  },
  {
    "text": "Json object so that's going to be the distalization this so you are doing like two steps here you can easily make this",
    "start": "1406799",
    "end": "1413320"
  },
  {
    "text": "more simple by using the stream API so in stream API as you can see we are really creating like a Json text reader",
    "start": "1413320",
    "end": "1420000"
  },
  {
    "text": "here and we get the data as Json and we return it as a Json so rather than having like two uh I guess the steps",
    "start": "1420000",
    "end": "1427760"
  },
  {
    "text": "this is just one step uh the I guess the only catch up here is you must need the",
    "start": "1427760",
    "end": "1433480"
  },
  {
    "text": "partition key for this thing to work without partition key it's not going to uh work so that's the only I guess",
    "start": "1433480",
    "end": "1439440"
  },
  {
    "text": "requirement for stream API next one is the document client",
    "start": "1439440",
    "end": "1446000"
  },
  {
    "text": "document client is how you actually access the cosmos DB uh my suggestion is",
    "start": "1446000",
    "end": "1451880"
  },
  {
    "text": "you want to be use the Singleton when you do the document client because the last thing you want to do is create a",
    "start": "1451880",
    "end": "1458640"
  },
  {
    "text": "new document client for every request you want to create one document client and use for all other you know like",
    "start": "1458640",
    "end": "1464960"
  },
  {
    "text": "calls to the cosmos DB uh main reason for that is actually let's see what",
    "start": "1464960",
    "end": "1470000"
  },
  {
    "text": "happens when you declare or or initialize the document client the first thing Cosmos DB is going to do it's",
    "start": "1470000",
    "end": "1477000"
  },
  {
    "text": "going to request your account information after that it's going to get all the container information that's",
    "start": "1477000",
    "end": "1482320"
  },
  {
    "text": "another request then it's going to get all the partition and routing information so we are talking like three",
    "start": "1482320",
    "end": "1488080"
  },
  {
    "text": "requests here we didn't even make we haven't even make any kind of request for any kind of query yet so if you're",
    "start": "1488080",
    "end": "1493640"
  },
  {
    "text": "going to do this then that means you're actually calling Cosmos CB four times to you know run a query so you want to",
    "start": "1493640",
    "end": "1500840"
  },
  {
    "text": "execute this once and use with the Singleton and use the same uh document client for all the",
    "start": "1500840",
    "end": "1508720"
  },
  {
    "text": "requests here we can talk about actually the Conant in the mode which uh you know",
    "start": "1508720",
    "end": "1513919"
  },
  {
    "text": "I just want to touch it because that's a big big topic but the cons the mod is going to actually help you or the help",
    "start": "1513919",
    "end": "1520799"
  },
  {
    "text": "application to get to figure out where this data is going to come from so as you know in the cosmos DV we have uh",
    "start": "1520799",
    "end": "1527440"
  },
  {
    "text": "let's say in one physic physical the physical server we have actually Four servers in it we have one",
    "start": "1527440",
    "end": "1534399"
  },
  {
    "text": "leader and three followers so it's a not set so conso System Mod is going to actually figure out where this data is",
    "start": "1534399",
    "end": "1540600"
  },
  {
    "text": "going to come up because if you really think about it you have four places to pull the data from so depending on the",
    "start": "1540600",
    "end": "1545720"
  },
  {
    "text": "cons system mode document client is going to pick that data from a leader or from the leader and uh follower or just",
    "start": "1545720",
    "end": "1552399"
  },
  {
    "text": "the follower so that's where the cons mode is going to actually happen so from here it just psts the data and well uh",
    "start": "1552399",
    "end": "1559679"
  },
  {
    "text": "you get the data after that next one is metadata requests so",
    "start": "1559679",
    "end": "1566559"
  },
  {
    "text": "depending what kind of application you have you might be creating dynamically containers databases maybe you want to",
    "start": "1566559",
    "end": "1573399"
  },
  {
    "text": "list all the containers in a drop- down so all of those are actually metadata requests and you know you don't really",
    "start": "1573399",
    "end": "1580600"
  },
  {
    "text": "use your uh threshold you pick for the request units so let's say if you have 1,000 request units when you try to get",
    "start": "1580600",
    "end": "1587200"
  },
  {
    "text": "the list of database you don't really use those request units there is a system reserve request units only for",
    "start": "1587200",
    "end": "1593200"
  },
  {
    "text": "the metadata requests and which is 240 request units and there are some limits as you can see out there is like maximum",
    "start": "1593200",
    "end": "1601159"
  },
  {
    "text": "uh collection create is 100 per minute so you cannot create more than that even you want it you cannot do it so if you",
    "start": "1601159",
    "end": "1607720"
  },
  {
    "text": "are doing things like that you want to be sure that you cach this information as much as you can because that 240",
    "start": "1607720",
    "end": "1613799"
  },
  {
    "text": "request unit you have out there you cannot change it so I guess just be careful with with that uh and",
    "start": "1613799",
    "end": "1622320"
  },
  {
    "text": "yeah next one is optimizing the bandet so in here many times when you try to",
    "start": "1622320",
    "end": "1629760"
  },
  {
    "text": "insert data for example I'm not sure how big your data model is going to be let's say you have like 10 KOB data model you",
    "start": "1629760",
    "end": "1636080"
  },
  {
    "text": "insert it it's you send it to Cosmos DB and when Cosmos DB actually give you a response usually what you need is okay",
    "start": "1636080",
    "end": "1642559"
  },
  {
    "text": "this is success or not usually what's what that's what you care but when Cosmos CB actually give you the response",
    "start": "1642559",
    "end": "1648799"
  },
  {
    "text": "it actually attaches your data model your insert request to the response which makes the you know the packages",
    "start": "1648799",
    "end": "1656360"
  },
  {
    "text": "much bigger so you can easily control that by using the enable content",
    "start": "1656360",
    "end": "1662919"
  },
  {
    "text": "response on right parameter if you make this false that means that object will",
    "start": "1662919",
    "end": "1668399"
  },
  {
    "text": "not be attached to the response and the packages will be much uh smaller and actually that will help you uh",
    "start": "1668399",
    "end": "1674640"
  },
  {
    "text": "especially if you are doing any with the bulk mode uh things so this will actually help",
    "start": "1674640",
    "end": "1681080"
  },
  {
    "text": "you next one is partial document update this one is a newer function and you can",
    "start": "1681080",
    "end": "1688039"
  },
  {
    "text": "do all kind of things with this uh if you don't use this one and if you let's say you have a property and you have a",
    "start": "1688039",
    "end": "1694320"
  },
  {
    "text": "flag you're going to change it from True to false uh if you don't use that you have to change you send the whole data",
    "start": "1694320",
    "end": "1700240"
  },
  {
    "text": "model to the cosmos DB and Cosmos to figure out what is change and change only that one in here you can easily say",
    "start": "1700240",
    "end": "1707320"
  },
  {
    "text": "that I want to change this property to the this value so really as I said",
    "start": "1707320",
    "end": "1712360"
  },
  {
    "text": "before the with the packages your request is going to be much smaller and it's going to be much faster this is not",
    "start": "1712360",
    "end": "1719559"
  },
  {
    "text": "going to cost I guess this is not going to cost less request units it's going to really cost you the same because if you",
    "start": "1719559",
    "end": "1725000"
  },
  {
    "text": "really think about it Cosmos DB is still going to open that and change it and save it back but it's going to make I",
    "start": "1725000",
    "end": "1730880"
  },
  {
    "text": "guess developer uh site is much easier and also you can actually combine",
    "start": "1730880",
    "end": "1736120"
  },
  {
    "text": "operations here so it doesn't have to be one property you can have two or three uh this one supports the transactional",
    "start": "1736120",
    "end": "1742559"
  },
  {
    "text": "batch so you can actually keep that with the transactional batch and also conflict resolution support is there too",
    "start": "1742559",
    "end": "1748760"
  },
  {
    "text": "so those are the operations we have ADD set replace remove and increment and move uh we have the increment here but",
    "start": "1748760",
    "end": "1755360"
  },
  {
    "text": "if you actually pass a minus number you can decrease a number easily so if you have for example uh number of orders and",
    "start": "1755360",
    "end": "1763039"
  },
  {
    "text": "you want to increase it or decrease it you can say one or minus one and it can do it easily like that",
    "start": "1763039",
    "end": "1769399"
  },
  {
    "text": "so let's look at an example here uh the first one here it looks like I am",
    "start": "1769399",
    "end": "1774519"
  },
  {
    "text": "creating a list of patch operations the first thing I'm doing is I'm adding a totally new property named sale date and",
    "start": "1774519",
    "end": "1782120"
  },
  {
    "text": "I'm just passing today's date and I am removing the original sale date so when",
    "start": "1782120",
    "end": "1788000"
  },
  {
    "text": "I run that as you can see I am going to need the document ID and the partition",
    "start": "1788000",
    "end": "1794159"
  },
  {
    "text": "key for this need to work and pass my patch operation so that's how it works that's the basic",
    "start": "1794159",
    "end": "1800840"
  },
  {
    "text": "one another interesting option this one has is actually a filter so in here as",
    "start": "1800840",
    "end": "1806600"
  },
  {
    "text": "you can see in the options I am actually have a passing a filter predicate and it says that I want this update to go",
    "start": "1806600",
    "end": "1814120"
  },
  {
    "text": "through as long as this is true so if the number of items properly is larger",
    "start": "1814120",
    "end": "1819840"
  },
  {
    "text": "than five this update is going to go through if not Cosmos DB is not going to update it so it looks like what we are",
    "start": "1819840",
    "end": "1825799"
  },
  {
    "text": "doing here is I am adding a new proper name audit and I make it true as long as",
    "start": "1825799",
    "end": "1831519"
  },
  {
    "text": "the number of items is larger than five so with one operations I can actually do both together here with the partial",
    "start": "1831519",
    "end": "1841279"
  },
  {
    "text": "update all right next one is indexing indexing is important uh in any",
    "start": "1841399",
    "end": "1847120"
  },
  {
    "text": "databases is important so when you actually create a new container in Cosmos DB well Cosmos DB uh indexes",
    "start": "1847120",
    "end": "1855799"
  },
  {
    "text": "everything so you don't need to worry about what I show index so many people like it but you they figure out that",
    "start": "1855799",
    "end": "1863080"
  },
  {
    "text": "maybe that is really not a good option when your data is going to get larger especially you have like a a data file",
    "start": "1863080",
    "end": "1869679"
  },
  {
    "text": "which you keep all the data and you have a index file only one index file so if",
    "start": "1869679",
    "end": "1875240"
  },
  {
    "text": "you are going to actually index everything that means your index file might be get larger than your data file",
    "start": "1875240",
    "end": "1881840"
  },
  {
    "text": "and if you are for example let's say you have a property name description that you is never going to be in your web CLA",
    "start": "1881840",
    "end": "1888600"
  },
  {
    "text": "but you are still indexing that so you should kind of exclude properties like that uh later when you figure out what",
    "start": "1888600",
    "end": "1895000"
  },
  {
    "text": "you are filtering by so we have three indexing modes uh in Cosmos DB it",
    "start": "1895000",
    "end": "1900880"
  },
  {
    "text": "default is the consistant uh that's really the I guess the consistency with",
    "start": "1900880",
    "end": "1906600"
  },
  {
    "text": "between the data file and index file when you say consistent that means that your data an index file always matches",
    "start": "1906600",
    "end": "1913559"
  },
  {
    "text": "perfectly all the time as long as data changes index changes immediately if you",
    "start": "1913559",
    "end": "1918600"
  },
  {
    "text": "make this lazy which is really dangerous one which means that you the data file",
    "start": "1918600",
    "end": "1925120"
  },
  {
    "text": "actually no the actually index file eventually match the data file which means if your data is actually coming",
    "start": "1925120",
    "end": "1931399"
  },
  {
    "text": "from the index file potentially you might return wrong data so you don't",
    "start": "1931399",
    "end": "1936600"
  },
  {
    "text": "really want to use the lazy uh lazy is actually a little bit cheaper that's many people use it that for but it's",
    "start": "1936600",
    "end": "1942799"
  },
  {
    "text": "really not worth it so if you're using lazy just go back to the consant because it's worth it",
    "start": "1942799",
    "end": "1948600"
  },
  {
    "text": "and also none that means you don't really need indexes usually you do that",
    "start": "1948600",
    "end": "1953639"
  },
  {
    "text": "when you bulk a lot any kind of you know maybe that's the first time you are pushing the data you don't need indexes",
    "start": "1953639",
    "end": "1959000"
  },
  {
    "text": "because that's going to make things you know slower you just put the data in database first then figure out what",
    "start": "1959000",
    "end": "1964360"
  },
  {
    "text": "needs to get index later so that will be a faster way to actually push the data first time to Cosmos",
    "start": "1964360",
    "end": "1970880"
  },
  {
    "text": "DP so uh there are a couple of index types in Cosmos TB and the first one is",
    "start": "1970880",
    "end": "1976799"
  },
  {
    "text": "the range indexes so the range indexes is really covering most of the filters",
    "start": "1976799",
    "end": "1982840"
  },
  {
    "text": "equal not equal range any kind of order by join everything is uh handled by the",
    "start": "1982840",
    "end": "1988399"
  },
  {
    "text": "range indexes we have Composite Index which can be sometimes confusing because it has a lot of rules out there you need",
    "start": "1988399",
    "end": "1994519"
  },
  {
    "text": "to follow but they are very useful if you have a lot of filters in your work cloud or if you need to order by by the",
    "start": "1994519",
    "end": "2002679"
  },
  {
    "text": "multiple properties actually you must have the composite index if you have multiple uh properties in your order by",
    "start": "2002679",
    "end": "2009200"
  },
  {
    "text": "we have the geospatial indexes those are available only for geospatial data so as",
    "start": "2009200",
    "end": "2015360"
  },
  {
    "text": "I say before everything is index but if you have a geospatial data index that will not be uh created automatically so",
    "start": "2015360",
    "end": "2021799"
  },
  {
    "text": "you have to actually create those geospatial indexes yourself and the new ones we have is the",
    "start": "2021799",
    "end": "2027240"
  },
  {
    "text": "vector indexes uh SQL API actually supports the vectors now and you can easily kind of index and this index will",
    "start": "2027240",
    "end": "2034279"
  },
  {
    "text": "get used by the vector dist distance system function so this is still in preview right now uh but it's available",
    "start": "2034279",
    "end": "2040720"
  },
  {
    "text": "uh you can control the dimensions and the types easily with that index so as I said before the composite",
    "start": "2040720",
    "end": "2047200"
  },
  {
    "text": "indexes can be challenging because as you can see out there uh you want to be",
    "start": "2047200",
    "end": "2053240"
  },
  {
    "text": "sure that everything is in the composite index when you create it it has to be in the same order when you are actually",
    "start": "2053240",
    "end": "2059158"
  },
  {
    "text": "putting them in the work clous so for example let's look at some of the composite indexes I create here the",
    "start": "2059159",
    "end": "2065520"
  },
  {
    "text": "first one you see here my Composite Index index I create an index on name and AG properties together and if you",
    "start": "2065520",
    "end": "2073079"
  },
  {
    "text": "look at my query I am using them in the same order the name NH so Composite",
    "start": "2073079",
    "end": "2078280"
  },
  {
    "text": "Index works just great with this one next one I am using the same uh",
    "start": "2078280",
    "end": "2084440"
  },
  {
    "text": "Composite Index because this time the AG is not equal anymore it's larger than 18",
    "start": "2084440",
    "end": "2090760"
  },
  {
    "text": "which is a range filter but in composite indexes all the range filters must be the last one last decay in the composite",
    "start": "2090760",
    "end": "2098280"
  },
  {
    "text": "index because of that it works so if my Composite Index was H comma name this",
    "start": "2098280",
    "end": "2104640"
  },
  {
    "text": "actually will not work uh next one I have here another",
    "start": "2104640",
    "end": "2109920"
  },
  {
    "text": "kind of aggregation I have that one just works with the name and age Composite Index uh also I have the name and age as",
    "start": "2109920",
    "end": "2118720"
  },
  {
    "text": "you can see everything works here until we have this select all from C where C",
    "start": "2118720",
    "end": "2124560"
  },
  {
    "text": "name is not equal to John that doesn't work because well it's not equal anymore",
    "start": "2124560",
    "end": "2130200"
  },
  {
    "text": "so it's almost like the range so I have two kind of range filters here and you cannot use the composite index for this",
    "start": "2130200",
    "end": "2137560"
  },
  {
    "text": "one uh if you want you can create multiple uh composite indexes for",
    "start": "2137560",
    "end": "2143920"
  },
  {
    "text": "example if you look at the select all from C name is John and I'm passing the time stamp here but the first one is not",
    "start": "2143920",
    "end": "2151880"
  },
  {
    "text": "working because the range index in the middle not in the bottom but in the",
    "start": "2151880",
    "end": "2157000"
  },
  {
    "text": "other one it works works because I actually have two composite indexes here so that actually handles both of them",
    "start": "2157000",
    "end": "2162720"
  },
  {
    "text": "together so composite indexes can be tricky uh I guess test it in QA and be sure it's working uh then you know push",
    "start": "2162720",
    "end": "2169920"
  },
  {
    "text": "the production because well when you push the production reindexing can take long time because you have many physical",
    "start": "2169920",
    "end": "2177119"
  },
  {
    "text": "partitions out there in this get your index so you want to be sure whatever you are pushing you are making the right",
    "start": "2177119",
    "end": "2182560"
  },
  {
    "text": "uh you know choices with the indexes so as I say before you to",
    "start": "2182560",
    "end": "2187880"
  },
  {
    "text": "exclude if you are not filtering by any properties because that's can actually",
    "start": "2187880",
    "end": "2193760"
  },
  {
    "text": "improve the right performance because well Cosmos CB doesn't have to make the changes to the uh index file it's going",
    "start": "2193760",
    "end": "2201680"
  },
  {
    "text": "to reduce the request units charges for the inserts and it's going to reduce the index storage so in Cosmos CB you pay",
    "start": "2201680",
    "end": "2208560"
  },
  {
    "text": "for request unit and you pay for the storage so if you are not going to index things that means Less storage that",
    "start": "2208560",
    "end": "2214440"
  },
  {
    "text": "means cheaper which is good and you want to do all the indexes change together so",
    "start": "2214440",
    "end": "2221640"
  },
  {
    "text": "if you for example compare the SQL Server you do this index first that index later you know maybe third one",
    "start": "2221640",
    "end": "2228040"
  },
  {
    "text": "later so if you need to make three index changes in Cosmos DB you want to actually make that policy change",
    "start": "2228040",
    "end": "2234119"
  },
  {
    "text": "together because for example we see that chat GPT has 25,000 partitions well when",
    "start": "2234119",
    "end": "2241400"
  },
  {
    "text": "you push a you know index change like that you are actually you know doing 25,000 reindex",
    "start": "2241400",
    "end": "2248280"
  },
  {
    "text": "so that can take time that can take resources so that's why you want to make those changes together in Cosmos",
    "start": "2248280",
    "end": "2254880"
  },
  {
    "text": "CV next one this one is actually new one brand new one competed properties so you",
    "start": "2254880",
    "end": "2261280"
  },
  {
    "text": "know in this is an aqqle database and you know sometimes you have to use the lower function because the well the the",
    "start": "2261280",
    "end": "2270640"
  },
  {
    "text": "I guess the post type here can must be you know uh answer anything like this so",
    "start": "2270640",
    "end": "2275880"
  },
  {
    "text": "when you actually run that this is a function this function is going to be uh costly for you and the system function",
    "start": "2275880",
    "end": "2282400"
  },
  {
    "text": "is going to be costly in this case it is like 23.25 request units you can easily",
    "start": "2282400",
    "end": "2288160"
  },
  {
    "text": "create a computed property and they are under here the computed properties uh",
    "start": "2288160",
    "end": "2293880"
  },
  {
    "text": "tab here in here it looks like I have two computed properties one I'm going to demo is the second one here the C post",
    "start": "2293880",
    "end": "2300560"
  },
  {
    "text": "type as you can see I am running the lower for that one so that is going to actually create a new property a virtual",
    "start": "2300560",
    "end": "2307119"
  },
  {
    "text": "property uh cpor post type and if I'm going to use that cpor post type rather than",
    "start": "2307119",
    "end": "2314560"
  },
  {
    "text": "running the function like that in the first one this is going to actually drop uh well almost the halfway with the",
    "start": "2314560",
    "end": "2321040"
  },
  {
    "text": "13.75 request un so you can actually use the computed columns if you are using any kind of system functions uh in your",
    "start": "2321040",
    "end": "2327960"
  },
  {
    "text": "work class and if you create a computed properties with that you can easily save some request UN in the Cosmos TV the",
    "start": "2327960",
    "end": "2335119"
  },
  {
    "text": "first one here as you can see I have I'm using the daytime different so if you have anything like that you can easily",
    "start": "2335119",
    "end": "2340680"
  },
  {
    "text": "use that too next one is true put so the default",
    "start": "2340680",
    "end": "2347359"
  },
  {
    "text": "one with this one is the provision I guess when it comes to the trut I try to explain that to you let's say we are",
    "start": "2347359",
    "end": "2353240"
  },
  {
    "text": "actually uh throwing a pizza party right and you don't know how many people you're going to come to your pizza party",
    "start": "2353240",
    "end": "2359079"
  },
  {
    "text": "or maybe you know you know exactly how many people are going to show up if you know how many people are going to show up then you're going to go with the",
    "start": "2359079",
    "end": "2364839"
  },
  {
    "text": "provision and order just right amount of pizza for everybody to use so that's",
    "start": "2364839",
    "end": "2371040"
  },
  {
    "text": "just a provision works so you know you're a web application or any kind of servers you know how many people are",
    "start": "2371040",
    "end": "2377280"
  },
  {
    "text": "going to come to your application you know exactly request un unit Autos scale is great I try to use it as much as I",
    "start": "2377280",
    "end": "2384000"
  },
  {
    "text": "can and that that scales your application uh up and down easily in",
    "start": "2384000",
    "end": "2389119"
  },
  {
    "text": "this one you are actually giving a cosmos DB a number that you want to go",
    "start": "2389119",
    "end": "2394720"
  },
  {
    "text": "up to for example maybe normally your appc works with 1,000 request units but tomorrow is a big sale day and you know",
    "start": "2394720",
    "end": "2402599"
  },
  {
    "text": "you maybe it's going to go 5,000 6,000 you don't know so you said okay I'm going to put a 10,000 here so it can go",
    "start": "2402599",
    "end": "2408000"
  },
  {
    "text": "up to 10,000 as long as people start you know like coming to the application so it can easily do that for you if you",
    "start": "2408000",
    "end": "2414319"
  },
  {
    "text": "pick the auto scale you pick a large number and application scales up as long",
    "start": "2414319",
    "end": "2419680"
  },
  {
    "text": "as it needs and as long as it reaches that number uh the only thing you want to be careful with the scale just pick",
    "start": "2419680",
    "end": "2426160"
  },
  {
    "text": "something that you can actually AFF for just don't pick something like 100,000 request units and because what can",
    "start": "2426160",
    "end": "2431960"
  },
  {
    "text": "happen is somebody can attack your application right if that happens then that means you might actually hit that number and you might end up with a",
    "start": "2431960",
    "end": "2437880"
  },
  {
    "text": "surprise Bill next month so you want to be sure that you know whatever you pick here is you know uh something you can",
    "start": "2437880",
    "end": "2443680"
  },
  {
    "text": "afford and the serverless is the one right now uh actually there's an update",
    "start": "2443680",
    "end": "2449839"
  },
  {
    "text": "for that one right now which you can create a serverless if this is the first time you are creating the application",
    "start": "2449839",
    "end": "2455240"
  },
  {
    "text": "you don't really need I guess request in this per second you maybe pick 1 million request units and each time you use the",
    "start": "2455240",
    "end": "2462960"
  },
  {
    "text": "uh Cosmos CB it will subtract that from 1 million so you can easily start your application with that and now actually",
    "start": "2462960",
    "end": "2469480"
  },
  {
    "text": "there's a new function you can actually convert your server list to the provision if you like so if this is a",
    "start": "2469480",
    "end": "2474720"
  },
  {
    "text": "new application you can just start as a serverless when you are ready to go to production you can maybe convert to",
    "start": "2474720",
    "end": "2480520"
  },
  {
    "text": "provision uh this works with the great with the Azure functions too maybe you are running that Azure functions couple",
    "start": "2480520",
    "end": "2486079"
  },
  {
    "text": "of times a day it doesn't has to be provision so you don't have to you know pay per second you can go with the",
    "start": "2486079",
    "end": "2492079"
  },
  {
    "text": "serverless and that will actually uh you know save you uh some uh money with the",
    "start": "2492079",
    "end": "2497480"
  },
  {
    "text": "cosmos DP also I know that you know you come here you try to you know save money and",
    "start": "2497480",
    "end": "2503000"
  },
  {
    "text": "try to make the you know Cosmos DB bills cheaper with knowing learning some tips",
    "start": "2503000",
    "end": "2508280"
  },
  {
    "text": "and tricks but there's one actually option here that you don't have to change anything and it will actually save you money which is the reserve",
    "start": "2508280",
    "end": "2515920"
  },
  {
    "text": "capacity if you know you going to use the Azure Cosmos DB in next one year or three years then you can easily pick the",
    "start": "2515920",
    "end": "2522560"
  },
  {
    "text": "reserve capacity and that will give you 20% to 30% depending the number of years",
    "start": "2522560",
    "end": "2528319"
  },
  {
    "text": "a discount so you don't have to change anything you can just use that uh this number here is between 100 to 1 million",
    "start": "2528319",
    "end": "2535720"
  },
  {
    "text": "request units if it's higher than that believe me that number actually even goes higher than that so it can go up to",
    "start": "2535720",
    "end": "2541240"
  },
  {
    "text": "50 60% if you are you know application using more than 1 million uh request unit that becomes a variable so that's",
    "start": "2541240",
    "end": "2548000"
  },
  {
    "text": "the easiest way to save you know money with the cosmos DB without changing any code uh if you are if you are sure you",
    "start": "2548000",
    "end": "2554599"
  },
  {
    "text": "are using the cosmos be long term that's the way to go uh next one is this one is in preview",
    "start": "2554599",
    "end": "2561400"
  },
  {
    "text": "too so you might be dealing with uh some you know 429 since the cosmos div is a rate limited sometimes you might be",
    "start": "2561400",
    "end": "2568160"
  },
  {
    "text": "hitting that rate limit and let's say maybe you have 20 transactions going on and you want to be sure that maybe 18 of",
    "start": "2568160",
    "end": "2574480"
  },
  {
    "text": "them is really high that two if that fails you don't care so you can now actually control which uh",
    "start": "2574480",
    "end": "2581119"
  },
  {
    "text": "should be the high and which should be the low by using the priority base execution so by default everything is",
    "start": "2581119",
    "end": "2587800"
  },
  {
    "text": "high so you can try to keep the which one is low or you can keep the high and make the you know the lws uh I guess",
    "start": "2587800",
    "end": "2595200"
  },
  {
    "text": "notable so in here that's an example here so it looks like I am trying to create this uh well transaction looks",
    "start": "2595200",
    "end": "2603559"
  },
  {
    "text": "like I'm creating a TR stack Overflow post and just making this priority level",
    "start": "2603559",
    "end": "2608720"
  },
  {
    "text": "high this will be prioritized with the cosmos TB so if I'm close to that 429",
    "start": "2608720",
    "end": "2614440"
  },
  {
    "text": "this will actually execute first then other low priority items so you can kind",
    "start": "2614440",
    "end": "2620280"
  },
  {
    "text": "of control if you are hitting that 429 rate limit so this is still in private",
    "start": "2620280",
    "end": "2625359"
  },
  {
    "text": "preview but it will be available hopefully soon now let's see how many minutes we",
    "start": "2625359",
    "end": "2632319"
  },
  {
    "text": "have maybe five more minutes so if you have any questions I can kind of help now or I can actually show you something",
    "start": "2632319",
    "end": "2639079"
  },
  {
    "text": "else here I'm not sure if you know anything about the vs code extension I have I can maybe demo some items for you",
    "start": "2639079",
    "end": "2647720"
  },
  {
    "text": "let me see this is going to",
    "start": "2647720",
    "end": "2650920"
  },
  {
    "text": "be let's see if I can share this",
    "start": "2653040",
    "end": "2658359"
  },
  {
    "text": "sure you can use a service in production uh I mean as long as you you know you",
    "start": "2659880",
    "end": "2665400"
  },
  {
    "text": "have the right correct request as because it can get usually in production things can get busy so you know you",
    "start": "2665400",
    "end": "2671800"
  },
  {
    "text": "might need more resources for that but yeah you can use it but most most of the time people kind of goes back to",
    "start": "2671800",
    "end": "2677800"
  },
  {
    "text": "provision or other scale so you don't need to worry about keeping up to rec how many TR unit you",
    "start": "2677800",
    "end": "2683160"
  },
  {
    "text": "need yeah so let's see",
    "start": "2683160",
    "end": "2688839"
  },
  {
    "text": "here how we can do this one minute",
    "start": "2690119",
    "end": "2695279"
  },
  {
    "text": "all",
    "start": "2703160",
    "end": "2705440"
  },
  {
    "text": "right all right this is going to be tricky but I'm going to make it work so I cannot see on my screen but I",
    "start": "2709720",
    "end": "2717240"
  },
  {
    "text": "can see it on here so in here as you can see this is a vs Cod extension is free I",
    "start": "2717240",
    "end": "2723040"
  },
  {
    "text": "create for the you know Cosmos DB Community you can download it free uh you can use it rather than the browser",
    "start": "2723040",
    "end": "2729079"
  },
  {
    "text": "you can actually uh pick your database here it's going to go and give you all the containers it has and from here you",
    "start": "2729079",
    "end": "2736559"
  },
  {
    "text": "can easily for example pick here this will actually give you how many physical partitions this container has so you can",
    "start": "2736559",
    "end": "2743760"
  },
  {
    "text": "easily see the structure without kind of you know worry about which tab or button you click in aure Portal it can be",
    "start": "2743760",
    "end": "2750319"
  },
  {
    "text": "sometimes challenging in Azure portal and this one is going to give you like for example if I go with the top 10",
    "start": "2750319",
    "end": "2756559"
  },
  {
    "text": "let's say run this one here I click execute and it's going to give you how much request that thing needs or run for",
    "start": "2756559",
    "end": "2764960"
  },
  {
    "text": "and it return me 10 items well as I said before SDK actually is the one which is",
    "start": "2764960",
    "end": "2770240"
  },
  {
    "text": "handling that because we know that we have five or six partitions here so actually I pull much more than that by",
    "start": "2770240",
    "end": "2776200"
  },
  {
    "text": "clicking execution uh Matrix here you can see that we made five requests here",
    "start": "2776200",
    "end": "2782520"
  },
  {
    "text": "and we got 50 items not 10 so you can easily click on this link here and see",
    "start": "2782520",
    "end": "2789040"
  },
  {
    "text": "we actually got 10 from each physical partition because we did not Define a partition key here so SDK is the one",
    "start": "2789040",
    "end": "2797079"
  },
  {
    "text": "which is actually eliminate 40 of them and display the 10 so that's why the SDK",
    "start": "2797079",
    "end": "2802680"
  },
  {
    "text": "is going to need some you know resources because it does all kind of stuff out there especially if you group buy order",
    "start": "2802680",
    "end": "2807880"
  },
  {
    "text": "buy all those are going to actually happen by the SDK and this one is the last one actually I show you this is for",
    "start": "2807880",
    "end": "2813720"
  },
  {
    "text": "example in real time you can see we are using the lower C post type let's actually execute this one",
    "start": "2813720",
    "end": "2820319"
  },
  {
    "text": "here uh none of them is actually my partition key so it's going to take some time it looks like it cost me 3234",
    "start": "2820319",
    "end": "2827400"
  },
  {
    "text": "request units if I'm going to actually use the uh the computed",
    "start": "2827400",
    "end": "2834040"
  },
  {
    "text": "property and run it again the same query should go much cheaper so it was 32.3 24",
    "start": "2834040",
    "end": "2841359"
  },
  {
    "text": "now is 26 so that number can be you know variable depending how much data you have uh and if you're using the",
    "start": "2841359",
    "end": "2847520"
  },
  {
    "text": "partition Q or not but that actually helps uh the other thing I can probably",
    "start": "2847520",
    "end": "2852720"
  },
  {
    "text": "share with you if you go under the options here you can click the indexing metrix here so this is actually",
    "start": "2852720",
    "end": "2858559"
  },
  {
    "text": "suggesting you indexes so in here if I'm going to go back and execute this one",
    "start": "2858559",
    "end": "2863640"
  },
  {
    "text": "more time let's see what it's going to say as you can see I have a new tab here",
    "start": "2863640",
    "end": "2868800"
  },
  {
    "text": "indexing metrix and after testing runs you can see it says that you are using",
    "start": "2868800",
    "end": "2873880"
  },
  {
    "text": "the owner user ID that's utilized so don't touch it uh but you know it looks like CP post",
    "start": "2873880",
    "end": "2879640"
  },
  {
    "text": "type is not index so if I put an index on it probably that number is going to go even uh lower than that so this is",
    "start": "2879640",
    "end": "2886359"
  },
  {
    "text": "kind of useful uh easily you can see the actually here let me see indexing policy",
    "start": "2886359",
    "end": "2892119"
  },
  {
    "text": "this kind of tells you what is indexed and what is excluded for example score is excluded if I'm going to put the",
    "start": "2892119",
    "end": "2899079"
  },
  {
    "text": "score here probably that's going to cost much more and it's going to tell me potential index is is a",
    "start": "2899079",
    "end": "2905400"
  },
  {
    "text": "score uh other than that it has all kind of options features uh I'm always kind",
    "start": "2905400",
    "end": "2910480"
  },
  {
    "text": "of working on this I'm hoping to actually make it open source so everybody can kind of help because now",
    "start": "2910480",
    "end": "2916960"
  },
  {
    "text": "believe it or not I have like 11 or 12,000 downloads on it already and people are kind saying all kind of stuff to me but I don't really have that much",
    "start": "2916960",
    "end": "2923359"
  },
  {
    "text": "time so I'm going to hopefully make it that open source uh this whole and it's",
    "start": "2923359",
    "end": "2929240"
  },
  {
    "text": "in JavaScript since it's a vs code so if you I guess up to it I would like to you",
    "start": "2929240",
    "end": "2935640"
  },
  {
    "text": "know get help from it from you so but that's all I have for you today I hope everybody learned something new and",
    "start": "2935640",
    "end": "2941799"
  },
  {
    "text": "thanks again for coming to my session uh yeah I enjoy it thank you very [Applause]",
    "start": "2941799",
    "end": "2953219"
  },
  {
    "text": "much I can answer any questions you have because since this is the last session we done",
    "start": "2953640",
    "end": "2960520"
  },
  {
    "text": "sure sure",
    "start": "2961720",
    "end": "2965720"
  },
  {
    "text": "can you say question one more",
    "start": "2974839",
    "end": "2978119"
  },
  {
    "text": "time",
    "start": "2984119",
    "end": "2987119"
  },
  {
    "text": "okay so that really depends first depends on how big your database is so if your database is pretty large it will",
    "start": "2990040",
    "end": "2996960"
  },
  {
    "text": "help you dramatically because you know when you actually when you make that call then that means it's going to find",
    "start": "2996960",
    "end": "3003359"
  },
  {
    "text": "that index in one call rather than three times it's going to be like when I cover the range indexes that means that you",
    "start": "3003359",
    "end": "3009440"
  },
  {
    "text": "have that index available in three places so but when you make that Composite Index it's going to find it",
    "start": "3009440",
    "end": "3014880"
  },
  {
    "text": "with one call it's going to be much faster but to see that dramatic change you need to have a lot of data too",
    "start": "3014880",
    "end": "3020960"
  },
  {
    "text": "because that's going to actually make a big difference yeah",
    "start": "3020960",
    "end": "3027319"
  },
  {
    "text": "I I really find very useful to around price when",
    "start": "3027319",
    "end": "3034119"
  },
  {
    "text": "I correct corre",
    "start": "3044359",
    "end": "3052079"
  },
  {
    "text": "so that also sure yeah that that's a that's a",
    "start": "3056880",
    "end": "3063319"
  },
  {
    "text": "good feedback and also you know whenever it kind of gives you a good number but in the meantime when you select try not",
    "start": "3063319",
    "end": "3069720"
  },
  {
    "text": "to select everything either you know what I mean because the number is going to give you if you like 20 many properties for example and if you only",
    "start": "3069720",
    "end": "3075359"
  },
  {
    "text": "care about the three properties you can easily just say select three properties that's going to make the request unit",
    "start": "3075359",
    "end": "3081440"
  },
  {
    "text": "much smaller too so that calculator is great but you know it calculates for",
    "start": "3081440",
    "end": "3086559"
  },
  {
    "text": "ever properties you have so whenever you try to query the data I guess try not to say select all because that will",
    "start": "3086559",
    "end": "3091880"
  },
  {
    "text": "actually help you with the request that's one of the I guess good tips too",
    "start": "3091880",
    "end": "3097839"
  },
  {
    "text": "yeah yeah no thank you thank you for coming all right thank you everyone",
    "start": "3097839",
    "end": "3107880"
  }
]