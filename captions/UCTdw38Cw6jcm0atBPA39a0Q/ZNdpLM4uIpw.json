[
  {
    "text": "okay hi everybody Welcome um just want to say that it's my first time in NC Oslo and I'm so excited to be here uh it",
    "start": "3000",
    "end": "10480"
  },
  {
    "text": "really is an amazing uh an amazing event um so as I said my name is Dena and I'm",
    "start": "10480",
    "end": "16198"
  },
  {
    "text": "going to talk to you today today about etw and all of the cool things that you can do with it so etw is a monitoring",
    "start": "16199",
    "end": "23680"
  },
  {
    "text": "framework so the first thing that we're going to do is that we're going to talk a little bit about the challenges that",
    "start": "23680",
    "end": "30160"
  },
  {
    "text": "face when we try to use traditional uh performance and profiling tools and then we're going to introduce",
    "start": "30160",
    "end": "38640"
  },
  {
    "text": "edw uh and see what you can do with it and how it addresses all of these challenges that we have using",
    "start": "38640",
    "end": "45200"
  },
  {
    "text": "traditional tools um and then what we're going to do is that we're going to embark on a very long demo or rather",
    "start": "45200",
    "end": "52399"
  },
  {
    "text": "multiple short demos through which I will try to show you some and definitely not all of the things that you can do",
    "start": "52399",
    "end": "59079"
  },
  {
    "text": "with etw and which tools are are available to you for this purpose so let's begin as I said the",
    "start": "59079",
    "end": "67600"
  },
  {
    "text": "first thing that I want to do is talk about the challenges there are many uh profiling tools out there but I think",
    "start": "67600",
    "end": "75680"
  },
  {
    "text": "that one of the most um problematic uh issue with",
    "start": "75680",
    "end": "82280"
  },
  {
    "text": "these tools is that they're usually very invasive uh a lot of them actually",
    "start": "82280",
    "end": "87759"
  },
  {
    "text": "inject their code into your application you know so that they can profile",
    "start": "87759",
    "end": "92799"
  },
  {
    "text": "whatever it is that you're doing um and so that means that you have to recompile your code or at the very least most of",
    "start": "92799",
    "end": "100720"
  },
  {
    "text": "the times you will need to restart your application and these two together cause",
    "start": "100720",
    "end": "106360"
  },
  {
    "text": "quite a large overhead uh for example if you're familiar with the Intel parallel",
    "start": "106360",
    "end": "112079"
  },
  {
    "text": "Studio profiler it's really a great tool but the lowest level of profiling that",
    "start": "112079",
    "end": "118320"
  },
  {
    "text": "it gives you causes an an overhead of a factor between 2 to 20 if I remember",
    "start": "118320",
    "end": "124119"
  },
  {
    "text": "correctly and that means that if you have let's say a one minute scenario",
    "start": "124119",
    "end": "129520"
  },
  {
    "text": "that you want to profile then let's say on average it's going to take about 10 minutes to run okay maybe we can live",
    "start": "129520",
    "end": "137680"
  },
  {
    "text": "with that but what if it takes about let's say 5 minutes just to get to that",
    "start": "137680",
    "end": "144000"
  },
  {
    "text": "point in your application where you want to start profiling well obviously that's not",
    "start": "144000",
    "end": "150640"
  },
  {
    "text": "going to pass now the next problem that we have is even if the overhead is",
    "start": "150640",
    "end": "158159"
  },
  {
    "text": "inconsequential and we don't want we don't mind waiting and all that still in",
    "start": "158159",
    "end": "163519"
  },
  {
    "text": "some cases we just can't restart our application what if your product is the",
    "start": "163519",
    "end": "168840"
  },
  {
    "text": "stock exchange or maybe your product is some military system while in your",
    "start": "168840",
    "end": "174000"
  },
  {
    "text": "developmental environment you can restart your application as many times as you want and you could do whatever",
    "start": "174000",
    "end": "179040"
  },
  {
    "text": "you want with it a lot of times on production it's just not going to pass so we can't use that",
    "start": "179040",
    "end": "186360"
  },
  {
    "text": "and the last problem that we might encounter is something that at least from my experience developers usually",
    "start": "186360",
    "end": "193159"
  },
  {
    "text": "don't think about or don't care about and that's licensing a lot of these tools don't allow their redistribution",
    "start": "193159",
    "end": "202120"
  },
  {
    "text": "to clients and that means that if you use it on development it doesn't mean that you can take it to your client or I",
    "start": "202120",
    "end": "210040"
  },
  {
    "text": "mean like maybe you could just take it once for a one time debugging uh uh debugging uh case but you certainly",
    "start": "210040",
    "end": "217480"
  },
  {
    "text": "can't redistribute this as part of your application and even if redistribution",
    "start": "217480",
    "end": "222760"
  },
  {
    "text": "is allowed still you usually buy one license for yourself or maybe multiple",
    "start": "222760",
    "end": "229560"
  },
  {
    "text": "licenses for your entire development team but a lot of times your product",
    "start": "229560",
    "end": "236200"
  },
  {
    "text": "runs on tens hundreds or thousands of production servers or clients or",
    "start": "236200",
    "end": "242959"
  },
  {
    "text": "wherever it is that your product is deployed so obviously you can't buy licenses which are usually quite",
    "start": "242959",
    "end": "248959"
  },
  {
    "text": "expensive by the way uh for that many machines",
    "start": "248959",
    "end": "254360"
  },
  {
    "text": "so with that uh with that motivation in mind it turns out that there's a",
    "start": "254360",
    "end": "260000"
  },
  {
    "text": "solution for all of these problems and it's not surprising because after all that's why we're here talking about it",
    "start": "260000",
    "end": "266479"
  },
  {
    "text": "uh and that's edw so edw event tracing for Windows is a structured logging",
    "start": "266479",
    "end": "274080"
  },
  {
    "text": "framework incorporated into Windows which supports hundreds of thousands of",
    "start": "274080",
    "end": "280880"
  },
  {
    "text": "structured log messages per second and of course it doesn't have any of the",
    "start": "280880",
    "end": "287680"
  },
  {
    "text": "problems that we just talked about it doesn't require any changes to your",
    "start": "287680",
    "end": "293280"
  },
  {
    "text": "application it certainly doesn't require recompilation but it also doesn't",
    "start": "293280",
    "end": "298360"
  },
  {
    "text": "require restarting your application in fact you could just turn it on on demand",
    "start": "298360",
    "end": "304720"
  },
  {
    "text": "whenever you want without having to do anything and its overhead is very very",
    "start": "304720",
    "end": "310360"
  },
  {
    "text": "low if you don't turn it on at all the overhead of each such call is a few",
    "start": "310360",
    "end": "316360"
  },
  {
    "text": "cycles and if you do turn it on then well of course it depends on the amount",
    "start": "316360",
    "end": "321479"
  },
  {
    "text": "of data that you want to emit from this uh from this log and one of the best things about it",
    "start": "321479",
    "end": "329639"
  },
  {
    "text": "is that it's actually all over the system as I said it's incorporated into",
    "start": "329639",
    "end": "335039"
  },
  {
    "text": "windows so you don't have to do anything to get it it's just there lurking around",
    "start": "335039",
    "end": "340680"
  },
  {
    "text": "your system in user mode and kernel mode it's in Services it's in uh net it's in",
    "start": "340680",
    "end": "347960"
  },
  {
    "text": "drivers it's it's even in third party components in fact a while ago I found",
    "start": "347960",
    "end": "353000"
  },
  {
    "text": "out that even Chrome can Adit etw events if you ask it",
    "start": "353000",
    "end": "358479"
  },
  {
    "text": "nicy now although we don't have to go into much detail in order to understand the",
    "start": "358479",
    "end": "365360"
  },
  {
    "text": "rest of my talk I do want to spend a minute or two to give you an overhead an",
    "start": "365360",
    "end": "370479"
  },
  {
    "text": "overview of the architecture and how etw is planned and structured just so that",
    "start": "370479",
    "end": "376599"
  },
  {
    "text": "you know you understand how the tool that you use is working so the three",
    "start": "376599",
    "end": "381880"
  },
  {
    "text": "main components that you need to be familiar with are providers controllers",
    "start": "381880",
    "end": "387599"
  },
  {
    "text": "and consumers the their names are pretty indicative providers are those objects",
    "start": "387599",
    "end": "395080"
  },
  {
    "text": "inside your Windows system which are responsible for generating the log",
    "start": "395080",
    "end": "400560"
  },
  {
    "text": "messages for emitting them from different locations in the code the controllers they're the ones that you",
    "start": "400560",
    "end": "408319"
  },
  {
    "text": "use to start stop configure all of your loging scenario and consumers well they",
    "start": "408319",
    "end": "416800"
  },
  {
    "text": "consume they're responsible for logging analyzing processing these log",
    "start": "416800",
    "end": "423879"
  },
  {
    "text": "messages the relationship between these three components is it's not surprising",
    "start": "423879",
    "end": "430680"
  },
  {
    "text": "what happens is that the controllers create an event session and this event session receives",
    "start": "430680",
    "end": "438400"
  },
  {
    "text": "events log messages from multiple producers and for performance reasons it",
    "start": "438400",
    "end": "444400"
  },
  {
    "text": "buffers them into an inmemory buffer now the consumers they can",
    "start": "444400",
    "end": "451440"
  },
  {
    "text": "register on these events and consume and analyze these events from the event",
    "start": "451440",
    "end": "458560"
  },
  {
    "text": "session now just one thing that I want you to notice here is that from this",
    "start": "458560",
    "end": "464080"
  },
  {
    "text": "design it follows that in some cases some events might be dropped because you",
    "start": "464080",
    "end": "470400"
  },
  {
    "text": "couldn't consume them fast enough or there were too many of them coming into the coming into the session so the",
    "start": "470400",
    "end": "477599"
  },
  {
    "text": "session actually holds the number number of the of dropped events and you can configure the size of the buffer pools",
    "start": "477599",
    "end": "485000"
  },
  {
    "text": "to a larger size if you think that it's necessary for your",
    "start": "485000",
    "end": "490879"
  },
  {
    "text": "scenario okay now this is a screenshot um from some of the uh providers from",
    "start": "490879",
    "end": "498240"
  },
  {
    "text": "the etw providers that I have on my Windows machine the font is small it's okay if you can't read it the point it",
    "start": "498240",
    "end": "505479"
  },
  {
    "text": "is that this is just a little part uh of of all the providers and in fact on my",
    "start": "505479",
    "end": "511599"
  },
  {
    "text": "machine I counted slightly over a thousand providers etw providers and",
    "start": "511599",
    "end": "518120"
  },
  {
    "text": "each of them can be configured with different keywords and different verbosity levels so there's there are",
    "start": "518120",
    "end": "525839"
  },
  {
    "text": "quite a lot of options that you can configure and get exactly what you want",
    "start": "525839",
    "end": "531240"
  },
  {
    "text": "from the system so now that we have a a little",
    "start": "531240",
    "end": "536680"
  },
  {
    "text": "understanding about what etw is and how it's constructed um let's do a little",
    "start": "536680",
    "end": "542959"
  },
  {
    "text": "overview of uh different scenarios where you can use edw to get information about",
    "start": "542959",
    "end": "549680"
  },
  {
    "text": "your system so I think that the most common",
    "start": "549680",
    "end": "554720"
  },
  {
    "text": "thing that you can do with etw is profile your application CPU wise um",
    "start": "554720",
    "end": "561839"
  },
  {
    "text": "what does it mean CPU wise which of the functions are the heaviest ones on your",
    "start": "561839",
    "end": "567160"
  },
  {
    "text": "system now what you can see here is a screenshot of an application called perfum uh we will talk about it in",
    "start": "567160",
    "end": "574560"
  },
  {
    "text": "Greater detail later on for now just know that it's an application that allows you to easily analyze etw log",
    "start": "574560",
    "end": "583160"
  },
  {
    "text": "files and specifically in this case you can see I highlighted two functions uh",
    "start": "583160",
    "end": "589680"
  },
  {
    "text": "one uh they both calculate prime numbers uh one is managed and one is native and",
    "start": "589680",
    "end": "595880"
  },
  {
    "text": "together they take about 90% of uh of the CPU time of your of of my",
    "start": "595880",
    "end": "602600"
  },
  {
    "text": "application um now the reason I have here both managed is and Native is that I wanted to show you that this",
    "start": "602600",
    "end": "609240"
  },
  {
    "text": "infrastructure allows you to Monitor and profile both managed and Native",
    "start": "609240",
    "end": "614800"
  },
  {
    "text": "applications and that's very important because obviously a lot of times our applications are not purely",
    "start": "614800",
    "end": "622920"
  },
  {
    "text": "managed you can also use etw to get information about garbage collection you",
    "start": "622920",
    "end": "628320"
  },
  {
    "text": "can get a list of all the garbage collections that occurred in your application how long they took how much",
    "start": "628320",
    "end": "634680"
  },
  {
    "text": "memory was uh was freed how much memory was promoted what was the reason for the",
    "start": "634680",
    "end": "640120"
  },
  {
    "text": "garbage collection that occurred which generation it was further more you can actually get",
    "start": "640120",
    "end": "647160"
  },
  {
    "text": "the call Stacks of where each such garbage collection occurred so for",
    "start": "647160",
    "end": "653800"
  },
  {
    "text": "example in this case we can see that garbage collection was called excuse me",
    "start": "653800",
    "end": "659920"
  },
  {
    "text": "20 times due to GC ad memory pressure and that probably means that our",
    "start": "659920",
    "end": "665880"
  },
  {
    "text": "application is using a lot of native memory also garbage collection was",
    "start": "665880",
    "end": "672000"
  },
  {
    "text": "called 13 times during allocating object and that means that probably our",
    "start": "672000",
    "end": "678399"
  },
  {
    "text": "application was using enough memory to cause pressure on the CLR so that it",
    "start": "678399",
    "end": "683760"
  },
  {
    "text": "felt that it needed to invoke garbage collection while allocating objects",
    "start": "683760",
    "end": "690720"
  },
  {
    "text": "what's even cooler than that is that you can get call Stacks for the allocations",
    "start": "690720",
    "end": "697079"
  },
  {
    "text": "of each specific object type so what we see here for example is a screenshot",
    "start": "697079",
    "end": "705120"
  },
  {
    "text": "again from perfum of all of the places where a certain WPF application",
    "start": "705120",
    "end": "711320"
  },
  {
    "text": "allocated strings and it turns out that this application allocated a gig and a",
    "start": "711320",
    "end": "717880"
  },
  {
    "text": "half of strings and some indexing function now maybe it's okay in this in",
    "start": "717880",
    "end": "725079"
  },
  {
    "text": "this specific application maybe it's not that's not the point the point is that for me as a developer of this",
    "start": "725079",
    "end": "731639"
  },
  {
    "text": "application this is very useful information if I want to analyze debug",
    "start": "731639",
    "end": "737079"
  },
  {
    "text": "and understand memory traffic issues in my application I actually see where most",
    "start": "737079",
    "end": "744399"
  },
  {
    "text": "allocations occurred and that's amazing uh in my opinion",
    "start": "744399",
    "end": "750560"
  },
  {
    "text": "you can also analyze long startup Times by getting information about images",
    "start": "750560",
    "end": "756320"
  },
  {
    "text": "which are loaded by your application you can also get information about the jit",
    "start": "756320",
    "end": "764199"
  },
  {
    "text": "times you can also get information about file accesses that your application uh",
    "start": "764680",
    "end": "770480"
  },
  {
    "text": "that your application does again all of that is very useful when you need to",
    "start": "770480",
    "end": "775959"
  },
  {
    "text": "understand what's going on inside now I will go back a little bit to the CPU",
    "start": "775959",
    "end": "781440"
  },
  {
    "text": "profiling uh uh scenario it turns out the etw not only",
    "start": "781440",
    "end": "787839"
  },
  {
    "text": "uh samples the CPU but it actually provides all of the information per core",
    "start": "787839",
    "end": "794600"
  },
  {
    "text": "and that means that you can analyze your application's concurrency efficiency so",
    "start": "794600",
    "end": "800399"
  },
  {
    "text": "this screenshot is actually taken from the visual studio concurrency visualizer um but the raw data that it",
    "start": "800399",
    "end": "807760"
  },
  {
    "text": "uses to produce this image is taken from etw so what we can see here is an image",
    "start": "807760",
    "end": "815120"
  },
  {
    "text": "of our course and green means that the core is running and red means that it's blocked so we can deduce from this image",
    "start": "815120",
    "end": "822440"
  },
  {
    "text": "that there's probably something wrong with our locking um model because it looks like although we have four cores",
    "start": "822440",
    "end": "829079"
  },
  {
    "text": "de facto only single core is working at each moment in time and here we can see another image",
    "start": "829079",
    "end": "836920"
  },
  {
    "text": "where it seems that locking is is better and the workload distribution is better but it's still not perfect because I can",
    "start": "836920",
    "end": "843279"
  },
  {
    "text": "see that an entire core is working all the time while a different core finished",
    "start": "843279",
    "end": "848800"
  },
  {
    "text": "its job in half the time so again etw allowed me to see this data and",
    "start": "848800",
    "end": "855320"
  },
  {
    "text": "understand that I have something suboptimal in my application okay so that was an overview",
    "start": "855320",
    "end": "863160"
  },
  {
    "text": "and screenshots of uh of what we can get using etw let's now go into a little",
    "start": "863160",
    "end": "869399"
  },
  {
    "text": "more detail into some of these scenarios so going back to perfum uh",
    "start": "869399",
    "end": "876959"
  },
  {
    "text": "perfu is is uh an application by Microsoft uh it rather recently became",
    "start": "876959",
    "end": "883480"
  },
  {
    "text": "open source so it's available on GitHub for you you can view both the you can just download versions or look at the",
    "start": "883480",
    "end": "889800"
  },
  {
    "text": "source code whatever works for you and you already saw that it's not very",
    "start": "889800",
    "end": "895000"
  },
  {
    "text": "visually appealing however it provides a very convenient and functional UI for",
    "start": "895000",
    "end": "902880"
  },
  {
    "text": "configuring all sorts of etw collection scenarios you can quite easily configure",
    "start": "902880",
    "end": "908959"
  },
  {
    "text": "the providers that you want to to monitor the keywords that you want to monitor the verbosity level that you",
    "start": "908959",
    "end": "915600"
  },
  {
    "text": "need and in fact it also provides you quite easily to analyze these log uh",
    "start": "915600",
    "end": "923639"
  },
  {
    "text": "files later as you already saw using multiple builtin St itical views inside",
    "start": "923639",
    "end": "931160"
  },
  {
    "text": "the application now let's see uh let's see",
    "start": "931160",
    "end": "936360"
  },
  {
    "text": "something in action I want to profile the process of starting visual studio",
    "start": "936360",
    "end": "943959"
  },
  {
    "text": "just starting Visual Studio itself no solution no project uh no files anything",
    "start": "943959",
    "end": "949560"
  },
  {
    "text": "just visual studio so seeing that profiling usually takes a lot time and",
    "start": "949560",
    "end": "954680"
  },
  {
    "text": "specifically open Visual Studio can take a very long time I have a video video of this demo so let's look at",
    "start": "954680",
    "end": "963959"
  },
  {
    "text": "it okay let me just stop it for a",
    "start": "970000",
    "end": "974839"
  },
  {
    "text": "second whoops okay look like that okay so here I have per and what I want to do",
    "start": "976680",
    "end": "984440"
  },
  {
    "text": "is configure collection so I go to the collect menu and here I can select all",
    "start": "984440",
    "end": "989639"
  },
  {
    "text": "sorts of stuff for example the size of the memory buffers I'm going to make it a little bigger just in case although I",
    "start": "989639",
    "end": "995639"
  },
  {
    "text": "didn't miss any events and this is visual studio so you know I'm going to click net and I'm going to click uh",
    "start": "995639",
    "end": "1002800"
  },
  {
    "text": "kernel base which is going to give me information about context switches in the system and I want CPU samples",
    "start": "1002800",
    "end": "1008959"
  },
  {
    "text": "because I want to profile CPU performance and I want to see what files it accesses that might help uh shed some",
    "start": "1008959",
    "end": "1016560"
  },
  {
    "text": "light on what's going on um I'm going to tell it to collect",
    "start": "1016560",
    "end": "1022279"
  },
  {
    "text": "symbols because I want to later look at the call Stacks and see the function names and I will give a different uh",
    "start": "1022279",
    "end": "1028959"
  },
  {
    "text": "file name it doesn't really matter um and then I just start collection now I'm collecting all of",
    "start": "1028959",
    "end": "1036760"
  },
  {
    "text": "this data and I can start visual studio so I will start my visual studio",
    "start": "1036760",
    "end": "1043160"
  },
  {
    "text": "and of course I edited out all of the waiting time believe me it took much longer to to start",
    "start": "1043160",
    "end": "1049360"
  },
  {
    "text": "um and now that my scenario is done I stop collecting and then perf is just going",
    "start": "1049360",
    "end": "1055360"
  },
  {
    "text": "to load all of the files into it and I can start looking so I will look at the",
    "start": "1055360",
    "end": "1061440"
  },
  {
    "text": "CPU stacks and I will select specifically visual studio and we can see that it actually took I don't know",
    "start": "1061440",
    "end": "1068679"
  },
  {
    "text": "if you noticed um take it a little back um it took about 70 seconds until I",
    "start": "1068679",
    "end": "1076640"
  },
  {
    "text": "stopped uh until I stopped the uh recording visual studio uh ran 70",
    "start": "1076640",
    "end": "1081760"
  },
  {
    "text": "seconds uh through you throughout this time so let's understand what's taking",
    "start": "1081760",
    "end": "1088200"
  },
  {
    "text": "all the time I'm looking at the list of",
    "start": "1088200",
    "end": "1094360"
  },
  {
    "text": "functions that were called throughout starting visual studio",
    "start": "1094360",
    "end": "1100000"
  },
  {
    "text": "and I will go to call to the uh call tree and that's my main main tread and I",
    "start": "1100000",
    "end": "1105520"
  },
  {
    "text": "see that the main tread uh ran for 40 seconds which is a little better than 60",
    "start": "1105520",
    "end": "1111440"
  },
  {
    "text": "and I will just start drilling down the tree and this is the main function again",
    "start": "1111440",
    "end": "1116559"
  },
  {
    "text": "36 uh seconds going further down the tree the col stack",
    "start": "1116559",
    "end": "1123120"
  },
  {
    "text": "tree takes a little",
    "start": "1123480",
    "end": "1127200"
  },
  {
    "text": "while it's a lot of data there and further",
    "start": "1133520",
    "end": "1141440"
  },
  {
    "text": "down so by the way this is Visual Studio I mean I didn't write it so of course these functions don't mean a lot to me",
    "start": "1144159",
    "end": "1150640"
  },
  {
    "text": "but if it were my application that would be very interesting information um and then I get to this place where I see",
    "start": "1150640",
    "end": "1156919"
  },
  {
    "text": "that jet brains uh takes about 15 again I'll go back a little I",
    "start": "1156919",
    "end": "1163720"
  },
  {
    "text": "apologize and we can see that a jet brains function takes about 15 uh",
    "start": "1165840",
    "end": "1171679"
  },
  {
    "text": "seconds from my load time and again I want to remind you that I didn't open",
    "start": "1171679",
    "end": "1176919"
  },
  {
    "text": "any solution or project of or file I just opened Visual Studio from scratch",
    "start": "1176919",
    "end": "1182799"
  },
  {
    "text": "an empty visual studio so just putting it out",
    "start": "1182799",
    "end": "1188200"
  },
  {
    "text": "there what else can we learn about what's going on uh let's look at",
    "start": "1190159",
    "end": "1195240"
  },
  {
    "text": "jit so we have all the jit times from the net applications and again I go to the visual studio area and this time",
    "start": "1195240",
    "end": "1202240"
  },
  {
    "text": "I'll open the data in Excel um and I will sort it by uh by the time that the",
    "start": "1202240",
    "end": "1208520"
  },
  {
    "text": "jet",
    "start": "1208520",
    "end": "1210840"
  },
  {
    "text": "took and you can see this J well this is actually pretty long times but still it might seem like a not very long time uh",
    "start": "1219280",
    "end": "1226799"
  },
  {
    "text": "but it actually adds up and considering that it's all happening on the main tread this is quite a problem uh that we",
    "start": "1226799",
    "end": "1233919"
  },
  {
    "text": "might be interested in what else can we see we can see file",
    "start": "1233919",
    "end": "1240520"
  },
  {
    "text": "accesses uh or image loads for example again specifically we select the",
    "start": "1240520",
    "end": "1246320"
  },
  {
    "text": "visual studio we can see all the images that we loaded uh into our application",
    "start": "1246320",
    "end": "1252360"
  },
  {
    "text": "and again when it's Visual Studio we don't have much to do about it but if it were our own application we could you",
    "start": "1252360",
    "end": "1258440"
  },
  {
    "text": "know maybe find a way to optimize",
    "start": "1258440",
    "end": "1262600"
  },
  {
    "text": "this and it's sorted actually by the size of the image so we roughly know",
    "start": "1264640",
    "end": "1270799"
  },
  {
    "text": "what are the heaviest images that we load and which don't incur as much cost",
    "start": "1270799",
    "end": "1276039"
  },
  {
    "text": "as the others okay that was useful I think so I",
    "start": "1276039",
    "end": "1283559"
  },
  {
    "text": "do have screenshots here in case something didn't work with the demo and so that later on when you look at the",
    "start": "1283559",
    "end": "1288840"
  },
  {
    "text": "slides you don't have to download videos with it so we'll just continue to the next section um what we did now was that",
    "start": "1288840",
    "end": "1297440"
  },
  {
    "text": "we used perfu in order to Define our collection session but what if we want",
    "start": "1297440",
    "end": "1303520"
  },
  {
    "text": "to continuously monitor our application on production and not not just come to",
    "start": "1303520",
    "end": "1309960"
  },
  {
    "text": "the customer one time and you know turn it on do whatever we do and go back to",
    "start": "1309960",
    "end": "1315520"
  },
  {
    "text": "the office we want to continuously monitor to our application for performance issue well it turns out",
    "start": "1315520",
    "end": "1321760"
  },
  {
    "text": "there's a solution for that as well and in fact uh in fact there's a nougat a library uh you can get it's called Trace",
    "start": "1321760",
    "end": "1328919"
  },
  {
    "text": "event it's developed by the same guy that develops perfu and actually perfu",
    "start": "1328919",
    "end": "1334720"
  },
  {
    "text": "uses that Library uh and this Library Trace event it provides a programmatic API uh for",
    "start": "1334720",
    "end": "1342559"
  },
  {
    "text": "configuring uh starting um analyzing etw",
    "start": "1342559",
    "end": "1348840"
  },
  {
    "text": "sessions and so for example what you could do uh if you wanted to say monitor",
    "start": "1348840",
    "end": "1354960"
  },
  {
    "text": "your application for high CPU performance uh usage uh you could do something along the lines of monitor",
    "start": "1354960",
    "end": "1363480"
  },
  {
    "text": "continuously your application using performance counters which just provide",
    "start": "1363480",
    "end": "1369039"
  },
  {
    "text": "a numeric value right so you know let's say every second how much CPU your",
    "start": "1369039",
    "end": "1375200"
  },
  {
    "text": "application is using and once you detect that your application passes a certain",
    "start": "1375200",
    "end": "1380919"
  },
  {
    "text": "threshold you can immediately configure an etw session and collect some data for",
    "start": "1380919",
    "end": "1387640"
  },
  {
    "text": "a while either until the CPU goes back down or for just you know a certain",
    "start": "1387640",
    "end": "1393000"
  },
  {
    "text": "predefined amount of time whatever works for you so you record all of this data",
    "start": "1393000",
    "end": "1398480"
  },
  {
    "text": "and then you just you know ship it back to development and analyze it and see why suddenly your application was using",
    "start": "1398480",
    "end": "1405120"
  },
  {
    "text": "so much CPU and I do have to mention here that I gave specifically the CPU",
    "start": "1405120",
    "end": "1410159"
  },
  {
    "text": "example but obviously it's not uh valid just for CPU profiling you can do",
    "start": "1410159",
    "end": "1417240"
  },
  {
    "text": "similar things for any kind of limited resource uh for example if you have",
    "start": "1417240",
    "end": "1422279"
  },
  {
    "text": "suddenly High memory usage you could you know see where uh objects are being uh",
    "start": "1422279",
    "end": "1427600"
  },
  {
    "text": "allocated or if you suddenly have a lot of Treads you can monitor where Treads",
    "start": "1427600",
    "end": "1432720"
  },
  {
    "text": "are being opened so let's see a code example of how we can configure such",
    "start": "1432720",
    "end": "1439799"
  },
  {
    "text": "continuous monitoring so it turns out that in etw",
    "start": "1439799",
    "end": "1445480"
  },
  {
    "text": "you can't use the same session for kernel events and for user space events so we're going to have to Define two",
    "start": "1445480",
    "end": "1452279"
  },
  {
    "text": "sessions one for the user stuff and one for the kernel stuff next I will need to Define what it",
    "start": "1452279",
    "end": "1459840"
  },
  {
    "text": "is that I want to record in each of these sessions in each of these providers so I didn't have room in the",
    "start": "1459840",
    "end": "1466640"
  },
  {
    "text": "slide for all of the keywords that I wanted to use in the kernel session uh but we're interested in processes in",
    "start": "1466640",
    "end": "1473640"
  },
  {
    "text": "Treads and file IO and then specifically since I'm going",
    "start": "1473640",
    "end": "1479480"
  },
  {
    "text": "to monitor or manage application then I know that I need to turn on the CLR",
    "start": "1479480",
    "end": "1484919"
  },
  {
    "text": "provider because I need information about what's going on inside the CLR and",
    "start": "1484919",
    "end": "1490120"
  },
  {
    "text": "specifically I'm going to turn it on with the verbas uh level uh and the default keywords are going to be enough",
    "start": "1490120",
    "end": "1496640"
  },
  {
    "text": "uh enough for me at this uh at this point now the session is going to be",
    "start": "1496640",
    "end": "1502760"
  },
  {
    "text": "closed when this once disos is called so you know I just need to wait for",
    "start": "1502760",
    "end": "1508000"
  },
  {
    "text": "something to stop collecting it again it can be either that enough time has passed or you know the threshold of high",
    "start": "1508000",
    "end": "1515760"
  },
  {
    "text": "resource came down whatever it is uh that's good for you and finally since I",
    "start": "1515760",
    "end": "1522320"
  },
  {
    "text": "want to be able to later analyze managed call Stacks I will need the jit",
    "start": "1522320",
    "end": "1528399"
  },
  {
    "text": "information the jit rundown information which will allow me to translate the",
    "start": "1528399",
    "end": "1534320"
  },
  {
    "text": "addresses into uh into net uh managed functions so I will need this",
    "start": "1534320",
    "end": "1540159"
  },
  {
    "text": "information and getting this information is actually quite easy again using etw",
    "start": "1540159",
    "end": "1545840"
  },
  {
    "text": "it turns out that there's a provider called jit uh CLR rundown uh provider",
    "start": "1545840",
    "end": "1552880"
  },
  {
    "text": "and what happens is that once you turn it on it just starts a",
    "start": "1552880",
    "end": "1558440"
  },
  {
    "text": "all of the jet rundown information that the CLR saved along the way so again I",
    "start": "1558440",
    "end": "1564679"
  },
  {
    "text": "Define a session for this uh jit rundown provider a CLR rundown provider um now",
    "start": "1564679",
    "end": "1570880"
  },
  {
    "text": "this is a little silly but the best way I could find to figure out that all of",
    "start": "1570880",
    "end": "1576960"
  },
  {
    "text": "the information uh was written to my file is that to check that it stopped",
    "start": "1576960",
    "end": "1583480"
  },
  {
    "text": "growing um so again this is a little silly I didn't find anything better um but the point is that after this is",
    "start": "1583480",
    "end": "1590200"
  },
  {
    "text": "done I know that all of the information is written to my file and that's it so I",
    "start": "1590200",
    "end": "1595440"
  },
  {
    "text": "have the kernel information which gives me sampling of the CPU which gives me information about context switches about",
    "start": "1595440",
    "end": "1602919"
  },
  {
    "text": "processes I have the CLR information which is going to provide me information",
    "start": "1602919",
    "end": "1608279"
  },
  {
    "text": "about memory usage and stuff like that in my application and I have this jit rundown information which will allow me",
    "start": "1608279",
    "end": "1615559"
  },
  {
    "text": "to translate into into function calls all of the uh all of the CLR",
    "start": "1615559",
    "end": "1622799"
  },
  {
    "text": "Stacks okay so again let's do a demo and again since I don't want to",
    "start": "1622799",
    "end": "1629799"
  },
  {
    "text": "waste a lot of time I'm going to show you a pre-recorded version with a lot of stuff edited",
    "start": "1629799",
    "end": "1637360"
  },
  {
    "text": "out so I have an application here um self- profiling application and what it",
    "start": "1641039",
    "end": "1647279"
  },
  {
    "text": "does is that I have two buttons or two uh groups of buttons um one where I can",
    "start": "1647279",
    "end": "1653600"
  },
  {
    "text": "start uh you know crunching CPU time using my application um and another",
    "start": "1653600",
    "end": "1659880"
  },
  {
    "text": "where I can start an etw session and stop it so actually the code that showed",
    "start": "1659880",
    "end": "1665159"
  },
  {
    "text": "you before was taken from this application so we'll run it for a",
    "start": "1665159",
    "end": "1671200"
  },
  {
    "text": "while I started profiling now I'm going to start crunching CPU and and you can see that there are high uh you know CPU",
    "start": "1673279",
    "end": "1680919"
  },
  {
    "text": "uh percentages and then I stopped it for a",
    "start": "1680919",
    "end": "1686120"
  },
  {
    "text": "while once I finished my uh collection I can see all of these files are created",
    "start": "1686120",
    "end": "1693080"
  },
  {
    "text": "these files are the ones that were created for the sessions that we saw",
    "start": "1693080",
    "end": "1698279"
  },
  {
    "text": "before the kernel the CLR and the jit and and the CLR rundown and now I open",
    "start": "1698279",
    "end": "1705600"
  },
  {
    "text": "again using perfu my application and I see our two uh is prime functions so",
    "start": "1705600",
    "end": "1714360"
  },
  {
    "text": "this is indeed the way that I got the screenshot from the beginning of the slides and well not surprisingly it",
    "start": "1714360",
    "end": "1721919"
  },
  {
    "text": "turns out that calculating prime numbers by simply dividing them but by all of",
    "start": "1721919",
    "end": "1727320"
  },
  {
    "text": "the numbers that are below them is not the very uh efficient way of calculating prime",
    "start": "1727320",
    "end": "1733960"
  },
  {
    "text": "numbers now while we're talking about about looking at CPU uh information I",
    "start": "1733960",
    "end": "1740679"
  },
  {
    "text": "want to show you another very useful application called WPA Windows",
    "start": "1740679",
    "end": "1746000"
  },
  {
    "text": "performance analyzer this is also a tool which is available for free uh from the Microsoft",
    "start": "1746000",
    "end": "1752640"
  },
  {
    "text": "website and straight away you can see that it's uh much more visually appealing um it's a it's really pretty I",
    "start": "1752640",
    "end": "1761320"
  },
  {
    "text": "would even say um and it provides a lot of uh similar functionalities as per you",
    "start": "1761320",
    "end": "1768440"
  },
  {
    "text": "um but what I mostly like about it is we have this area here which is very similar actually to",
    "start": "1768440",
    "end": "1775799"
  },
  {
    "text": "the uh do Trace timeline view where you can very easily select parts of your uh",
    "start": "1775799",
    "end": "1783640"
  },
  {
    "text": "process running and zoom in and out of them and get information which is",
    "start": "1783640",
    "end": "1789600"
  },
  {
    "text": "relevant just for this time interval and why do I like it so much it's actually",
    "start": "1789600",
    "end": "1796279"
  },
  {
    "text": "possible in perf few as well to Define time intervals that I want to reduce my",
    "start": "1796279",
    "end": "1801799"
  },
  {
    "text": "data to but here looking at in a visual way you can see straight ahead okay in",
    "start": "1801799",
    "end": "1808000"
  },
  {
    "text": "these five seconds I have a problem right I don't want to get call stack",
    "start": "1808000",
    "end": "1813960"
  },
  {
    "text": "statistics about a range where I both have a problem and not have a problem",
    "start": "1813960",
    "end": "1820080"
  },
  {
    "text": "because then the numbers that I see in the call Stacks are not correct they don't describe the problem and in",
    "start": "1820080",
    "end": "1827840"
  },
  {
    "text": "in WPA it's very easy with to see with our eyes in you know in a split second",
    "start": "1827840",
    "end": "1835039"
  },
  {
    "text": "where the problem is reduce my range to this area of my applications run and",
    "start": "1835039",
    "end": "1842519"
  },
  {
    "text": "then analyze it the problem is that this application",
    "start": "1842519",
    "end": "1848080"
  },
  {
    "text": "is much less lightweight um than perf few and so it might take",
    "start": "1848080",
    "end": "1855399"
  },
  {
    "text": "longer so after I lo loaded symbols I can start now uh going down the",
    "start": "1855399",
    "end": "1862360"
  },
  {
    "text": "callstack tree very similarly to uh to perfum and even though I cut some of the",
    "start": "1862360",
    "end": "1870279"
  },
  {
    "text": "I edited out some of the parts here you see that it takes more time to load but",
    "start": "1870279",
    "end": "1876080"
  },
  {
    "text": "eventually we will find our uh Prime both native and managed functions in",
    "start": "1876080",
    "end": "1882799"
  },
  {
    "text": "this uh in this View and in fact another thing that you can see here is when I click on them it actually selects the",
    "start": "1882799",
    "end": "1890000"
  },
  {
    "text": "areas here on this uh timeline that shows where these functions were called",
    "start": "1890000",
    "end": "1896320"
  },
  {
    "text": "so that's another reason I like this",
    "start": "1896320",
    "end": "1900799"
  },
  {
    "text": "View and now we can zoom out and the table here will be updated to include",
    "start": "1902960",
    "end": "1909159"
  },
  {
    "text": "all of the data again and you can see that when I click",
    "start": "1909159",
    "end": "1915840"
  },
  {
    "text": "S Prime you can see that it was only called here and here so no calls to is",
    "start": "1915840",
    "end": "1921039"
  },
  {
    "text": "prime here in the middle now another cool thing about WPA",
    "start": "1921039",
    "end": "1926840"
  },
  {
    "text": "is that it supports a different view of uh of showing us CPU usage and that's uh",
    "start": "1926840",
    "end": "1933960"
  },
  {
    "text": "flame graphs so essentially flame graphs are visual",
    "start": "1933960",
    "end": "1940840"
  },
  {
    "text": "hierarchial uh views of coal stack",
    "start": "1940840",
    "end": "1945880"
  },
  {
    "text": "trees and and well this is obviously uh a lot of information you can't get much",
    "start": "1945880",
    "end": "1952519"
  },
  {
    "text": "out of it but you can zoom inside so first of all I'll filter just",
    "start": "1952519",
    "end": "1959000"
  },
  {
    "text": "to my application so this is a little better uh but what it gives us is again",
    "start": "1959000",
    "end": "1964399"
  },
  {
    "text": "with a single glance an idea of what's taking most time because actually all of",
    "start": "1964399",
    "end": "1971159"
  },
  {
    "text": "the information is here in this visual tree and the higher the tree is it means",
    "start": "1971159",
    "end": "1977679"
  },
  {
    "text": "that the call stack is deeper and so the bottom is like the main function that we",
    "start": "1977679",
    "end": "1982760"
  },
  {
    "text": "called and you can see on top of it all of the subf functions that it called and",
    "start": "1982760",
    "end": "1987880"
  },
  {
    "text": "the width of each bar signifies the amount of time that this function took",
    "start": "1987880",
    "end": "1994519"
  },
  {
    "text": "and so again visually it's very easy for me now to look at this uh look at this",
    "start": "1994519",
    "end": "1999600"
  },
  {
    "text": "display and understand uh what's what is the big picture here what's taking most",
    "start": "1999600",
    "end": "2005480"
  },
  {
    "text": "of the time and if I want to drill down it's okay I can zoom in and you know see",
    "start": "2005480",
    "end": "2010639"
  },
  {
    "text": "all of that stuff okay it restarted good cool so again I have some",
    "start": "2010639",
    "end": "2017919"
  },
  {
    "text": "screenshots here um just so that you can later see that so until now what we saw in the",
    "start": "2017919",
    "end": "2025000"
  },
  {
    "text": "demos is how we record log files and then later analyze them using you know",
    "start": "2025000",
    "end": "2031960"
  },
  {
    "text": "some available tooling but it turns out that you can actually add analyze your",
    "start": "2031960",
    "end": "2038320"
  },
  {
    "text": "data in real time and not just in retrospect using these tools again we",
    "start": "2038320",
    "end": "2044760"
  },
  {
    "text": "can do that using the trace event library that I mentioned before and the",
    "start": "2044760",
    "end": "2049839"
  },
  {
    "text": "idea is that there are um classes parsers which are familiar with the",
    "start": "2049839",
    "end": "2058320"
  },
  {
    "text": "internal data structures with how the payload of the different providers and",
    "start": "2058320",
    "end": "2064599"
  },
  {
    "text": "the different events looks so for example you would have a CLR Trace event",
    "start": "2064599",
    "end": "2070760"
  },
  {
    "text": "parser which is familiar with the GC event and it knows that the GC event has",
    "start": "2070760",
    "end": "2077040"
  },
  {
    "text": "let's say a type property and a generation property and a reason",
    "start": "2077040",
    "end": "2083440"
  },
  {
    "text": "property and there's a kernel Trace event parser which knows that there's a",
    "start": "2083440",
    "end": "2088800"
  },
  {
    "text": "process started event and it has a command line arguments uh property and",
    "start": "2088800",
    "end": "2094679"
  },
  {
    "text": "it has a process name property um and you can write your own these are actually available built in inside Trace",
    "start": "2094679",
    "end": "2101720"
  },
  {
    "text": "event and you can write your own parsers uh but if you don't feel like it",
    "start": "2101720",
    "end": "2107160"
  },
  {
    "text": "you can always fall back to using the dynamic Trace event parser which just provides a dictionary like uh API for",
    "start": "2107160",
    "end": "2115520"
  },
  {
    "text": "accessing any payload you want from these uh from these events so let's see",
    "start": "2115520",
    "end": "2121800"
  },
  {
    "text": "an example a code example this is actually taken from the official Trace event documentation",
    "start": "2121800",
    "end": "2127400"
  },
  {
    "text": "and what we're going to see is how we can monitor all of the processes that",
    "start": "2127400",
    "end": "2132480"
  },
  {
    "text": "start on our system in real time so we",
    "start": "2132480",
    "end": "2137880"
  },
  {
    "text": "start with creating a trace event session that's not surprising and notice here that I don't pass a file name I'm",
    "start": "2137880",
    "end": "2144839"
  },
  {
    "text": "not going to write it into a file I'm going to consume it in real time I will",
    "start": "2144839",
    "end": "2150839"
  },
  {
    "text": "also register on the cancel key uh to make it stop um because this session is",
    "start": "2150839",
    "end": "2157040"
  },
  {
    "text": "going to stop uh running once we uh stop it otherwise it's just going to continue",
    "start": "2157040",
    "end": "2162920"
  },
  {
    "text": "forever so I want a mechanism that would allow me to stop and since we're interested in",
    "start": "2162920",
    "end": "2170319"
  },
  {
    "text": "processes which start and stop on our system I'm going to specifically enable",
    "start": "2170319",
    "end": "2176319"
  },
  {
    "text": "the process keyword uh in this uh in this session and of course I also need",
    "start": "2176319",
    "end": "2182800"
  },
  {
    "text": "to tell it what I want to do whenever a process starts so since I'm using the",
    "start": "2182800",
    "end": "2191880"
  },
  {
    "text": "kernel uh provider uh parser it actually has a process start",
    "start": "2191880",
    "end": "2198119"
  },
  {
    "text": "event and this is a type safe event which has uh intimate knowledge of",
    "start": "2198119",
    "end": "2205160"
  },
  {
    "text": "what's going on inside the etw process start event so like I said before it",
    "start": "2205160",
    "end": "2210839"
  },
  {
    "text": "knows that it has a process name property and that it's a string and it knows that it has a command line",
    "start": "2210839",
    "end": "2217000"
  },
  {
    "text": "property which is also a string it also knows that there's a process ID which is a number and so on obviously I didn't",
    "start": "2217000",
    "end": "2224319"
  },
  {
    "text": "have room here for all of the properties but that's the idea and now we actually",
    "start": "2224319",
    "end": "2230160"
  },
  {
    "text": "want to start processing so we call session process and this starts uh",
    "start": "2230160",
    "end": "2238560"
  },
  {
    "text": "passing the events to our event handler and this call actually blocks until we",
    "start": "2238560",
    "end": "2246960"
  },
  {
    "text": "call session stop and so that's why I had to register on something to stop",
    "start": "2246960",
    "end": "2252280"
  },
  {
    "text": "collecting if I don't ever want to stop collecting that's also fine now using what we just saw it's",
    "start": "2252280",
    "end": "2260560"
  },
  {
    "text": "quite obvious now that we can write our own tool or incorporate it into our own application that we can monitor",
    "start": "2260560",
    "end": "2267680"
  },
  {
    "text": "basically anything we want anywhere anywhere we want um using these apis and",
    "start": "2267680",
    "end": "2275800"
  },
  {
    "text": "well luckily for for us we don't have to do it ourselves because someone already did that for us and there's an open-",
    "start": "2275800",
    "end": "2282200"
  },
  {
    "text": "source project called erce you can find it on GitHub I put a link here um and it",
    "start": "2282200",
    "end": "2287839"
  },
  {
    "text": "provides a command line interface um for configuring these etw live monitoring",
    "start": "2287839",
    "end": "2297520"
  },
  {
    "text": "sessions so let's see how it",
    "start": "2297520",
    "end": "2302040"
  },
  {
    "text": "works excuse me",
    "start": "2305520",
    "end": "2310839"
  },
  {
    "text": "okay there we have it so we have ER Trace I already compil it beforehand and",
    "start": "2310839",
    "end": "2316480"
  },
  {
    "text": "what I want to do is that I want to monitor all the processes that start on my system so I tell it I'm interested in",
    "start": "2316480",
    "end": "2323440"
  },
  {
    "text": "the kernel provider and I need the process keyword and the specific process that I'm in uh event excuse me that I'm",
    "start": "2323440",
    "end": "2330400"
  },
  {
    "text": "interested in is process start and from this specific event I'm interested in",
    "start": "2330400",
    "end": "2336599"
  },
  {
    "text": "process ID the image file name and the command line arguments",
    "start": "2336599",
    "end": "2342119"
  },
  {
    "text": "so I'm going to run",
    "start": "2342119",
    "end": "2346160"
  },
  {
    "text": "that and I'm going to start a few processes on my",
    "start": "2347599",
    "end": "2354119"
  },
  {
    "text": "machine I think that's enough and if I go back to my command line I can see",
    "start": "2365079",
    "end": "2371720"
  },
  {
    "text": "that all of the information was logged to the screen now the next thing that I",
    "start": "2371720",
    "end": "2377040"
  },
  {
    "text": "want to see is to monitor GC events which we actually already saw before so",
    "start": "2377040",
    "end": "2383720"
  },
  {
    "text": "I turned on the GC monitoring and I started this specific WPF",
    "start": "2383720",
    "end": "2390040"
  },
  {
    "text": "application and by the way I have a tiny comment about this okay good so we can",
    "start": "2390040",
    "end": "2396800"
  },
  {
    "text": "see again that events are printed in real time and this time I didn't pass in",
    "start": "2396800",
    "end": "2403800"
  },
  {
    "text": "any specific fields that I'm interested in so it just prints all of the information that the event has now just",
    "start": "2403800",
    "end": "2410280"
  },
  {
    "text": "a tiny comment I want to say do you remember that application from the beginning of the slides that we saw that",
    "start": "2410280",
    "end": "2416480"
  },
  {
    "text": "it was allocating a gig and a half of strings so that application is actually",
    "start": "2416480",
    "end": "2422079"
  },
  {
    "text": "WPA maybe that's the reason it's not very performant I don't know uh maybe the WPA guys should run some etw on",
    "start": "2422079",
    "end": "2429280"
  },
  {
    "text": "their own Tool uh but anyway so we have all of that GC information",
    "start": "2429280",
    "end": "2435839"
  },
  {
    "text": "here we can also do something similar that's a lot of GC",
    "start": "2436119",
    "end": "2444160"
  },
  {
    "text": "okay",
    "start": "2444560",
    "end": "2447560"
  },
  {
    "text": "yeah so we can also do something similar uh to what per um perf uh",
    "start": "2450760",
    "end": "2456839"
  },
  {
    "text": "um uh perfmon um not perfmon excuse me um gosh I forgot its name in inter",
    "start": "2456839",
    "end": "2464440"
  },
  {
    "text": "internals there's a tool which provides us information about file accesses that application do I suddenly uh slipped the",
    "start": "2464440",
    "end": "2471880"
  },
  {
    "text": "name for my uh from my memory anyway so we can also use eay to monitor file",
    "start": "2471880",
    "end": "2478359"
  },
  {
    "text": "accesses that we do on our on our machine and so for this specific case I",
    "start": "2478359",
    "end": "2484240"
  },
  {
    "text": "want to monitor file accesses um specifically uh opening files and I want",
    "start": "2484240",
    "end": "2491200"
  },
  {
    "text": "to um filter it just to dll files so I can also provide a filtering um uh",
    "start": "2491200",
    "end": "2500040"
  },
  {
    "text": "expression for my uh for my tracing and if I run it and I'm going to open Internet",
    "start": "2500040",
    "end": "2509119"
  },
  {
    "text": "Explorer if I remember correctly",
    "start": "2509119",
    "end": "2515240"
  },
  {
    "text": "yes",
    "start": "2515240",
    "end": "2518240"
  },
  {
    "text": "and now I get all of the DLS that Internet Explorer accesses while it uh",
    "start": "2520520",
    "end": "2527680"
  },
  {
    "text": "it opened so also a lot of stuff it's",
    "start": "2527680",
    "end": "2535920"
  },
  {
    "text": "actually not just limited to Internet Explorer but you can see that Internet Explorer is what caused caused this",
    "start": "2535920",
    "end": "2542480"
  },
  {
    "text": "surge of opening files now I do want to mention at this point that you can't get",
    "start": "2542480",
    "end": "2549200"
  },
  {
    "text": "call stack information in real time and that's because getting callstack",
    "start": "2549200",
    "end": "2554559"
  },
  {
    "text": "information depends on sampling the CPU over time and then later analyzing it",
    "start": "2554559",
    "end": "2561280"
  },
  {
    "text": "along with the symbols information that you have in order to create the call stack uh the call stack trees so what",
    "start": "2561280",
    "end": "2569359"
  },
  {
    "text": "you can do in real time is Monitor just the events themselves and if you need",
    "start": "2569359",
    "end": "2576119"
  },
  {
    "text": "small stack information you can record this and then later analyze it with the",
    "start": "2576119",
    "end": "2581359"
  },
  {
    "text": "symbols and all the tools that are useful for this now the last thing that I want to show you is that even though",
    "start": "2581359",
    "end": "2588079"
  },
  {
    "text": "so far we did the live tracing using erce it actually also supports analyzing",
    "start": "2588079",
    "end": "2594960"
  },
  {
    "text": "files so I have a file which contains uh asp.net information about asp.net",
    "start": "2594960",
    "end": "2602839"
  },
  {
    "text": "requests um and the reason it's here is both that I want to show you that you can use erace to analyze files but also",
    "start": "2602839",
    "end": "2609559"
  },
  {
    "text": "that there's in interesting information in etw regarding asp.net uh net servers",
    "start": "2609559",
    "end": "2616160"
  },
  {
    "text": "so I run it on my file and I can get all of the uh requests that happened during that",
    "start": "2616160",
    "end": "2623640"
  },
  {
    "text": "recording now again I just want to say I'm showing this just to show you that",
    "start": "2623640",
    "end": "2629040"
  },
  {
    "text": "it's possible but I do think that if you have uh a file which is already recorded",
    "start": "2629040",
    "end": "2635720"
  },
  {
    "text": "um and unless you absolutely hate you know visual uis I would probably use",
    "start": "2635720",
    "end": "2641800"
  },
  {
    "text": "either perfum or WPA in order to analyze existing log files uh the command Lane",
    "start": "2641800",
    "end": "2648760"
  },
  {
    "text": "interface is very useful for doing realtime per uh",
    "start": "2648760",
    "end": "2654200"
  },
  {
    "text": "monitoring so again we have here screenshots of our demo so the last demo",
    "start": "2656119",
    "end": "2663720"
  },
  {
    "text": "that I want to show you today is uh monitoring and profiling boot performance that's actually something",
    "start": "2663720",
    "end": "2670559"
  },
  {
    "text": "which is extra close to my heart um because that was the first thing that I did in my current job I investigated",
    "start": "2670559",
    "end": "2677839"
  },
  {
    "text": "boot performance quite a long time and this is how I learned most of what I know about",
    "start": "2677839",
    "end": "2685800"
  },
  {
    "text": "etw so we're not going to show a demo because I don't want to start restarting the computer and stuff like that um so",
    "start": "2686599",
    "end": "2693599"
  },
  {
    "text": "we'll just look at screenshots so WPA Windows performance analyzer uh it comes",
    "start": "2693599",
    "end": "2700359"
  },
  {
    "text": "with a uh with a complimentary tool called wpr Windows performance recorder",
    "start": "2700359",
    "end": "2707760"
  },
  {
    "text": "and what it gives us is a a very nice uh compact uh UI for",
    "start": "2707760",
    "end": "2715359"
  },
  {
    "text": "configuring um all sorts of etw collection scenarios and one of these",
    "start": "2715359",
    "end": "2722040"
  },
  {
    "text": "scenarios is boot profiling where you can select Boot and you select all of",
    "start": "2722040",
    "end": "2727680"
  },
  {
    "text": "the resources that you want to monitor while your application is booting now",
    "start": "2727680",
    "end": "2735119"
  },
  {
    "text": "remember until now what we saw is how we record etw sessions way after the uh the",
    "start": "2735119",
    "end": "2744240"
  },
  {
    "text": "machine already booted and it's already running and everything is in place so we",
    "start": "2744240",
    "end": "2749280"
  },
  {
    "text": "just start a session you know recreate reproduce our problem and then analyze",
    "start": "2749280",
    "end": "2755160"
  },
  {
    "text": "it but how do you analyze boot you know you can't wait for the machine to boot",
    "start": "2755160",
    "end": "2762119"
  },
  {
    "text": "and then start an etw session you somehow have to make it record while",
    "start": "2762119",
    "end": "2768000"
  },
  {
    "text": "it's uh it's coming to live and there's a there's a answer to that and that's",
    "start": "2768000",
    "end": "2773960"
  },
  {
    "text": "using Auto loggers so basically you configure some Voodoo in the registry",
    "start": "2773960",
    "end": "2780920"
  },
  {
    "text": "and I mean it's not really wodoo it's not very complicated uh you basically",
    "start": "2780920",
    "end": "2786000"
  },
  {
    "text": "say what's the file that you want to save the etw session to you specify all",
    "start": "2786000",
    "end": "2792520"
  },
  {
    "text": "sort of parameters like the buffer size and the max file size because you know",
    "start": "2792520",
    "end": "2798079"
  },
  {
    "text": "you don't want it to record forever and uh and uh finish your disk um and then",
    "start": "2798079",
    "end": "2803920"
  },
  {
    "text": "you also tell it what are all the providers that you want to record and for each of these providers you can also",
    "start": "2803920",
    "end": "2810280"
  },
  {
    "text": "configure the verbosity and keywords and so on so you configure this Voodoo in the registry and once the computer",
    "start": "2810280",
    "end": "2817480"
  },
  {
    "text": "starts the one once Windows starts uh booting it just starts emitting all of",
    "start": "2817480",
    "end": "2823160"
  },
  {
    "text": "these uh providers into the file that we configured and after the machine is",
    "start": "2823160",
    "end": "2828880"
  },
  {
    "text": "booted you can look at these files and see what was going on while the machine was booting and what wpr gives us again",
    "start": "2828880",
    "end": "2837240"
  },
  {
    "text": "Window performance recorder is just a more convenient UI for configuring this",
    "start": "2837240",
    "end": "2845240"
  },
  {
    "text": "uh Reg vuru now I do have to say though that the UI is limited it doesn't",
    "start": "2845240",
    "end": "2850720"
  },
  {
    "text": "provide us all of the functionality which is possible with this but just you know for monitoring uh basic uh resource",
    "start": "2850720",
    "end": "2859000"
  },
  {
    "text": "uh usage scenario it's quite enough so I configured wpr to monitor my boot and I",
    "start": "2859000",
    "end": "2867319"
  },
  {
    "text": "booted my machine and I opened the results in Windows performance analyzer and windows",
    "start": "2867319",
    "end": "2875160"
  },
  {
    "text": "performance analyzer similarly to uh perfu it also has a lot of built-in",
    "start": "2875160",
    "end": "2881400"
  },
  {
    "text": "views which I encourage you to explore later um for displaying all sorts of",
    "start": "2881400",
    "end": "2887079"
  },
  {
    "text": "information from our log files and in this specific case it knows that we",
    "start": "2887079",
    "end": "2892880"
  },
  {
    "text": "recorded Boot and so it creates this special view called boot phases which",
    "start": "2892880",
    "end": "2899040"
  },
  {
    "text": "shows us the flow of booting the machine so for example we can see how how long",
    "start": "2899040",
    "end": "2906160"
  },
  {
    "text": "it took for the session to initialize and how long it took for when Lon to log",
    "start": "2906160",
    "end": "2911960"
  },
  {
    "text": "onto the machine and how long it took for explore to initialize and all of",
    "start": "2911960",
    "end": "2917480"
  },
  {
    "text": "these are are pretty fast but then there's something called past boot which takes quite a lot of time now in general",
    "start": "2917480",
    "end": "2925599"
  },
  {
    "text": "terms I can I can say that past boot is kind of",
    "start": "2925599",
    "end": "2932200"
  },
  {
    "text": "like the time that it takes your machine to calm down after it booted like you",
    "start": "2932200",
    "end": "2938920"
  },
  {
    "text": "know you start your Windows and you want to open some applications but like the computer is busy and you have to wait",
    "start": "2938920",
    "end": "2944559"
  },
  {
    "text": "until word opens or Outlook or whatever so pass boot is the time that takes your",
    "start": "2944559",
    "end": "2950400"
  },
  {
    "text": "machine to go back to relatively low disk and CPU usage",
    "start": "2950400",
    "end": "2956880"
  },
  {
    "text": "levels and this time is very long so I want to use WPA and the information I",
    "start": "2956880",
    "end": "2963680"
  },
  {
    "text": "got from the etw to diag knows what was going on on my machine",
    "start": "2963680",
    "end": "2969520"
  },
  {
    "text": "during this time and why it took it so long to go back to normal CPU",
    "start": "2969520",
    "end": "2975559"
  },
  {
    "text": "levels so WPA also allows us to see a lot of other things that happen during",
    "start": "2975559",
    "end": "2981920"
  },
  {
    "text": "Boot and can show us the drivers that are loading the processes that start",
    "start": "2981920",
    "end": "2986960"
  },
  {
    "text": "running so for example there's a view called transient transient process tree",
    "start": "2986960",
    "end": "2992960"
  },
  {
    "text": "and it displays us all of the processes that started and stopped during boot",
    "start": "2992960",
    "end": "2998799"
  },
  {
    "text": "that's very useful information now in this specific case I highlighted a process called rabid Watchdog and it's a",
    "start": "2998799",
    "end": "3006400"
  },
  {
    "text": "little not fair at this point because I wrote this process and I know that that's the problem so I highlighted it",
    "start": "3006400",
    "end": "3013760"
  },
  {
    "text": "for you however how would you find out what the problem was if you hadn't known",
    "start": "3013760",
    "end": "3018880"
  },
  {
    "text": "what was going on so there's also a view displaying the CPU usage color",
    "start": "3018880",
    "end": "3026240"
  },
  {
    "text": "by the processes and here it is very very obvious that this rabid Watchdog is",
    "start": "3026240",
    "end": "3033799"
  },
  {
    "text": "what's taking all of the CPU time during my booth process now again I wrote this",
    "start": "3033799",
    "end": "3040480"
  },
  {
    "text": "process I know what it's doing um but say I didn't know or you",
    "start": "3040480",
    "end": "3045720"
  },
  {
    "text": "know maybe I did write the process or I'm just not sure what on Earth takes so",
    "start": "3045720",
    "end": "3051119"
  },
  {
    "text": "long in my process that it consumes so much CPU so I could use WPA to drill",
    "start": "3051119",
    "end": "3057000"
  },
  {
    "text": "down uh to the call stack tree but I already mentioned that it's not very efficient and it takes a long time so I",
    "start": "3057000",
    "end": "3064000"
  },
  {
    "text": "prefer using perfum to do that and if I open my e my log file my etw log file",
    "start": "3064000",
    "end": "3071440"
  },
  {
    "text": "with perfume I quite uh conveniently arrive to this point in the call stack",
    "start": "3071440",
    "end": "3077480"
  },
  {
    "text": "tree and I see that 99% of the time in in this rabid Watchdog application is",
    "start": "3077480",
    "end": "3084040"
  },
  {
    "text": "spent getting processes running on the system so I guess that the process",
    "start": "3084040",
    "end": "3090640"
  },
  {
    "text": "deserves its name Okay cool so we're almost done here",
    "start": "3090640",
    "end": "3099040"
  },
  {
    "text": "that was our last demo um what are the main takeaways that I want you to get",
    "start": "3099040",
    "end": "3105400"
  },
  {
    "text": "from this uh from this talk well first of all I want to say that etw is an",
    "start": "3105400",
    "end": "3113119"
  },
  {
    "text": "omnipresent component in your Windows system it's everywhere it's in services",
    "start": "3113119",
    "end": "3120839"
  },
  {
    "text": "in drivers it's in your applications even though you didn't ask it to be",
    "start": "3120839",
    "end": "3126440"
  },
  {
    "text": "there it's just there and I actually didn't mention it but you can write your",
    "start": "3126440",
    "end": "3131839"
  },
  {
    "text": "own etw logs and thus help your uh production Engineers or whatever uh to",
    "start": "3131839",
    "end": "3139359"
  },
  {
    "text": "more easily monitor your applications uh as needed uh",
    "start": "3139359",
    "end": "3146000"
  },
  {
    "text": "its performance is very good and in fact I didn't mention it but more and more",
    "start": "3146000",
    "end": "3152160"
  },
  {
    "text": "profiling tools nowadays turn to etw as their source of data I know for a fact",
    "start": "3152160",
    "end": "3159839"
  },
  {
    "text": "that uh Trace uses etw at least for some of its information we also saw in the",
    "start": "3159839",
    "end": "3166799"
  },
  {
    "text": "talk that the visual studio concurrency visualizer uses etw as its source of",
    "start": "3166799",
    "end": "3172880"
  },
  {
    "text": "data about uh CPU usage so it's a very convenient and uh",
    "start": "3172880",
    "end": "3179000"
  },
  {
    "text": "flexible tool and again it's free you can use it in",
    "start": "3179000",
    "end": "3185040"
  },
  {
    "text": "production you're not uh limited to the number of computers where you want to use it you don't have to decide",
    "start": "3185040",
    "end": "3192000"
  },
  {
    "text": "beforehand if you want to use it um you can just come there turn it on whenever",
    "start": "3192000",
    "end": "3197200"
  },
  {
    "text": "you want and collect your performance",
    "start": "3197200",
    "end": "3202240"
  },
  {
    "text": "data so that's it um the final word that I want to say to you about this in uh",
    "start": "3202240",
    "end": "3209280"
  },
  {
    "text": "this uh etw is that unfortunately and that's I",
    "start": "3209280",
    "end": "3215079"
  },
  {
    "text": "think the major drawback of using that is that there's very little or even none",
    "start": "3215079",
    "end": "3221280"
  },
  {
    "text": "at all documentation about etw so for example when I was",
    "start": "3221280",
    "end": "3227599"
  },
  {
    "text": "researching boot performance basically what I did was like you know turn on all",
    "start": "3227599",
    "end": "3233839"
  },
  {
    "text": "of the providers all of the keywords everything recording everything and then",
    "start": "3233839",
    "end": "3239319"
  },
  {
    "text": "started like you know manually going through log files trying to understand",
    "start": "3239319",
    "end": "3245079"
  },
  {
    "text": "what the different properties mean um what's what's you know what's useful for me what I don't need what's the minimal",
    "start": "3245079",
    "end": "3253000"
  },
  {
    "text": "number of providers and keywords that I need to configure in order to get the data that I need um and so if you decide",
    "start": "3253000",
    "end": "3261480"
  },
  {
    "text": "to use ITW you are probably going to end up doing some digging and trial and",
    "start": "3261480",
    "end": "3267280"
  },
  {
    "text": "error in order to get to find the information that you need however I I",
    "start": "3267280",
    "end": "3273240"
  },
  {
    "text": "hope that I did you know show you enough advantages um so that the next time that",
    "start": "3273240",
    "end": "3279079"
  },
  {
    "text": "you have a performance mystery and the next time that you decide that you need to monitor your application you will ask",
    "start": "3279079",
    "end": "3286720"
  },
  {
    "text": "yourself can I do it with etw how can it help",
    "start": "3286720",
    "end": "3292200"
  },
  {
    "text": "me thank you so much um I hope you're hooked on etw now um I",
    "start": "3292200",
    "end": "3299079"
  },
  {
    "text": "think we have a little time if you have questions I'd be happy to",
    "start": "3299079",
    "end": "3304319"
  },
  {
    "text": "answer yeah so the question was how we can see all the sessions um unfortunately there's something wrong",
    "start": "3312599",
    "end": "3318559"
  },
  {
    "text": "with my Windows machine so I can't show you uh but somewhere there in the configurations under um if you go to",
    "start": "3318559",
    "end": "3326400"
  },
  {
    "text": "Perman um there's a list of uh data collectors or something like that there",
    "start": "3326400",
    "end": "3332359"
  },
  {
    "text": "um and you you know what I'll try let's see if I can turn on my windows and see",
    "start": "3332359",
    "end": "3337880"
  },
  {
    "text": "what happens uh but in any case there's a list there and you can see all of them",
    "start": "3337880",
    "end": "3343119"
  },
  {
    "text": "and the information I'm pretty sure you can also see uh what's turned on in that specific",
    "start": "3343119",
    "end": "3349079"
  },
  {
    "text": "session um if you can ask if you want more questions you can ask while I open my uh my Windows machine",
    "start": "3349079",
    "end": "3357000"
  },
  {
    "text": "um is it safe the another question is it safe to disable them all you know I don't think your computer",
    "start": "3359920",
    "end": "3366599"
  },
  {
    "text": "is going to explode and so in that sense it's safe uh but Windows itself does",
    "start": "3366599",
    "end": "3372880"
  },
  {
    "text": "configure stuff I mean like if you just you know even if you don't configure any session of your own and you open this",
    "start": "3372880",
    "end": "3378960"
  },
  {
    "text": "view with the sessions you will see that stuff are is running and moreover you will also if you go to the registry to",
    "start": "3378960",
    "end": "3386200"
  },
  {
    "text": "the area where the uh Auto loggers are defined you're going to find quite a lot",
    "start": "3386200",
    "end": "3391480"
  },
  {
    "text": "of entries there and so you're going to ask yourself hm where did that come from",
    "start": "3391480",
    "end": "3396760"
  },
  {
    "text": "so you can turn it off then obviously the application that's using that data is not going to be able to do its work",
    "start": "3396760",
    "end": "3403760"
  },
  {
    "text": "uh but I don't think anything is going to",
    "start": "3403760",
    "end": "3407720"
  },
  {
    "text": "explode so okay good event Trace sessions and here's the list of sessions",
    "start": "3413880",
    "end": "3419720"
  },
  {
    "text": "you can see which one is running um you can see properties you can see the",
    "start": "3419720",
    "end": "3425119"
  },
  {
    "text": "keywords which are configured inside so the information is available for you I I",
    "start": "3425119",
    "end": "3430400"
  },
  {
    "text": "I wouldn't stop it though it's you know Windows wants it so let it have",
    "start": "3430400",
    "end": "3436558"
  },
  {
    "text": "it okay cool thank you so much",
    "start": "3437960",
    "end": "3443280"
  },
  {
    "text": "and I hope you enjoy the rest of the",
    "start": "3443280",
    "end": "3447720"
  },
  {
    "text": "conference",
    "start": "3448520",
    "end": "3451520"
  }
]