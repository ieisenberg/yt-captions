[
  {
    "text": "hello and welcome to the second day of nbc oslo i hope everyone had a",
    "start": "1360",
    "end": "6720"
  },
  {
    "text": "wonderful first day and while i can't be with you all in person today i'm really looking forward",
    "start": "6720",
    "end": "11759"
  },
  {
    "text": "to sharing the next hour with you and this will be where we'll look to solve a question facing",
    "start": "11759",
    "end": "18240"
  },
  {
    "text": "many api developers and that is how do we choose between graphql grpc and rest",
    "start": "18240",
    "end": "26800"
  },
  {
    "text": "so to get to the answer that question we're going to do quite a number of things so we're going",
    "start": "26800",
    "end": "33200"
  },
  {
    "text": "to start off by looking to gain a common understanding of the api styles that have evolved over",
    "start": "33200",
    "end": "40960"
  },
  {
    "text": "time we'll then look at software architecture and look at system properties and the constraints",
    "start": "40960",
    "end": "48399"
  },
  {
    "text": "or decisions that then defiled or yields those properties",
    "start": "48399",
    "end": "53440"
  },
  {
    "text": "with that base knowledge we're then going to look at a number of conversations that are happening in the api industry today",
    "start": "53440",
    "end": "59440"
  },
  {
    "text": "and see if we can apply this this learning of this logic to some of the statements that lack some",
    "start": "59440",
    "end": "65198"
  },
  {
    "text": "nuance or some constructive element and then finally we're going to bring this all together",
    "start": "65199",
    "end": "70799"
  },
  {
    "text": "and look at some sample scenarios that you may face to make it more concrete should you choose to use one of these api",
    "start": "70799",
    "end": "77520"
  },
  {
    "text": "technologies when you either have a personal project or bring it back to your office",
    "start": "77520",
    "end": "84320"
  },
  {
    "text": "so before we proceed um a little bit about myself so my name is rob crowley i am the head",
    "start": "84320",
    "end": "91200"
  },
  {
    "text": "of engineering for a company called vixx and we build automotive fare collection",
    "start": "91200",
    "end": "96799"
  },
  {
    "text": "systems so similar to the card in london or we work with router in oslo as well",
    "start": "96799",
    "end": "103680"
  },
  {
    "text": "before that i was a consultant for a number of years including telstra purple or redefine in",
    "start": "103680",
    "end": "110799"
  },
  {
    "text": "australia and the vast amount of my career has been in building and designing",
    "start": "110799",
    "end": "117280"
  },
  {
    "text": "distributed systems so apis are a subject that are very close to my head",
    "start": "117280",
    "end": "122960"
  },
  {
    "text": "i'm also the co-organizer of dd perth western australia's largest conference and last year we had",
    "start": "122960",
    "end": "131200"
  },
  {
    "text": "over 800 attendees so that's really been a massive success and i'm also available on the socials at",
    "start": "131200",
    "end": "138160"
  },
  {
    "text": "rob d crowley and this is a talk that i've been giving various versions",
    "start": "138160",
    "end": "144879"
  },
  {
    "text": "of for about a year now and the genesis was really some of the",
    "start": "144879",
    "end": "150400"
  },
  {
    "text": "challenges that i was not only personally facing but also my clients and the companies",
    "start": "150400",
    "end": "156560"
  },
  {
    "text": "that i worked with and while that might sound rather altruistic there was a slightly selfish",
    "start": "156560",
    "end": "162959"
  },
  {
    "text": "element to it as well and that was really a reflection that my twitter timeline was really an",
    "start": "162959",
    "end": "170080"
  },
  {
    "text": "absolute tire fire and you might ask why is that well when i first joined twitter it was",
    "start": "170080",
    "end": "177760"
  },
  {
    "text": "really about the same time that i started to get into apis in a serious",
    "start": "177760",
    "end": "184480"
  },
  {
    "text": "way and rest was the on vogue api start at the time so i started following",
    "start": "184480",
    "end": "190000"
  },
  {
    "text": "many of the luminaries in the industry such as mike amensing or eric wilde",
    "start": "190000",
    "end": "196560"
  },
  {
    "text": "and i know the huge amount from these people and it was wonderful about three to four",
    "start": "196560",
    "end": "201680"
  },
  {
    "text": "years and then 2015 came around and facebook released graphql and",
    "start": "201680",
    "end": "207920"
  },
  {
    "text": "i started following a whole host of new people and the problem was these two groups of",
    "start": "207920",
    "end": "214319"
  },
  {
    "text": "people didn't often agree so one tweet could then yield 15 or 16",
    "start": "214319",
    "end": "220000"
  },
  {
    "text": "rebuttals or counter arguments but many of these counter arguments were very black",
    "start": "220000",
    "end": "226239"
  },
  {
    "text": "x is better than y or y breaks this i found it very difficult to then",
    "start": "226239",
    "end": "231760"
  },
  {
    "text": "take that information or take that statement and then apply it to the problems that i was facing",
    "start": "231760",
    "end": "237760"
  },
  {
    "text": "so what sharing a small a small example of what i saw there so back in 2019",
    "start": "237760",
    "end": "244799"
  },
  {
    "text": "on may 25th actually my birthday i saw this tweet and i was like it's 2019. you",
    "start": "244799",
    "end": "250000"
  },
  {
    "text": "should learn graphql this is very much the same time i was playing around quite a lot with the real time subscriptions",
    "start": "250000",
    "end": "256079"
  },
  {
    "text": "elements of dracula i said absolutely this is something that we should have available to us",
    "start": "256079",
    "end": "261120"
  },
  {
    "text": "so i agree with them quickly aaron he's one of my good friends but i have one of the cloud advocates at microsoft",
    "start": "261120",
    "end": "268960"
  },
  {
    "text": "it's just fancy oh data and that again is one of the playful exchange",
    "start": "268960",
    "end": "274720"
  },
  {
    "text": "we do see more serious versions of that going around and i would like to comment that",
    "start": "274720",
    "end": "280080"
  },
  {
    "text": "actually this weekend aaron will be building an app with graphql so i think in the",
    "start": "280080",
    "end": "285680"
  },
  {
    "text": "long run i might well have one but it's not just happening on twitter",
    "start": "285680",
    "end": "291360"
  },
  {
    "text": "so if we look at some of the blog posts that have been shared as i say sort of back in 2017",
    "start": "291360",
    "end": "298320"
  },
  {
    "text": "so a couple of years after gradual last release and there was really",
    "start": "298320",
    "end": "304880"
  },
  {
    "text": "a sense there that it would completely eclipse rest and this particular article says",
    "start": "304880",
    "end": "311199"
  },
  {
    "text": "rest is the new soap in other words we don't need it anymore instead defunct and i think i found this quite",
    "start": "311199",
    "end": "319600"
  },
  {
    "text": "confronting because i had spent the last 10 years of my career learning",
    "start": "319600",
    "end": "324720"
  },
  {
    "text": "rest apis and learning how to build affected how to design resources and workflows is all this",
    "start": "324720",
    "end": "331759"
  },
  {
    "text": "learning now defaults not required and this isn't an isolated article in there another one from about the same",
    "start": "331759",
    "end": "339759"
  },
  {
    "text": "time declared rest apis are rest in peace long live graphql i get more sentiment",
    "start": "339759",
    "end": "346479"
  },
  {
    "text": "from the community that there was only one way to build api's moving forward",
    "start": "346479",
    "end": "352320"
  },
  {
    "text": "i personally didn't see that that was the case and i saw many of the clients that were working with",
    "start": "352320",
    "end": "357600"
  },
  {
    "text": "had the same problems they were facing the same challenges and it wasn't just these conversations i",
    "start": "357600",
    "end": "363039"
  },
  {
    "text": "had this sense of deja vu when i read a lot of these articles",
    "start": "363039",
    "end": "368160"
  },
  {
    "text": "and i couldn't help but feel that we've actually been here before so if that's",
    "start": "368160",
    "end": "375120"
  },
  {
    "text": "what was happening in 2017 let's wind the clock back a little bit further",
    "start": "375120",
    "end": "381840"
  },
  {
    "text": "and we'll go back to 2010 and in this case we could see the same",
    "start": "381840",
    "end": "387840"
  },
  {
    "text": "sort of articles but this time declaring rest being in the ascendancy",
    "start": "387840",
    "end": "393680"
  },
  {
    "text": "and soap again going out of favor and this one that says soap is",
    "start": "393680",
    "end": "399120"
  },
  {
    "text": "officially dead long addressed and the unfortunate truth is a huge",
    "start": "399120",
    "end": "404240"
  },
  {
    "text": "number of percentage of the apis we deal with today in production there's still soap based while it might",
    "start": "404240",
    "end": "410639"
  },
  {
    "text": "be on both to build new apis using that today if we have other choices",
    "start": "410639",
    "end": "415680"
  },
  {
    "text": "it is definitely not dead and many of us are still supporting apis in many different technologies",
    "start": "415680",
    "end": "423360"
  },
  {
    "text": "but what can we really take away from this so",
    "start": "423360",
    "end": "428400"
  },
  {
    "text": "if something's date and rest is the new soul does that mean gracky the numerous",
    "start": "429120",
    "end": "437759"
  },
  {
    "text": "surely not that couldn't be the case it wouldn't make any sense",
    "start": "437759",
    "end": "442800"
  },
  {
    "text": "but lo and behold yes it is apparently graphql is",
    "start": "442800",
    "end": "450160"
  },
  {
    "text": "one i'm not sure if there was ever a product too but if there is please let me know",
    "start": "450160",
    "end": "456479"
  },
  {
    "text": "so what can we actually learn from these exchanges the first thing that we would have seen is that they're all very",
    "start": "456479",
    "end": "462000"
  },
  {
    "text": "black and white they all have one view and don't really take in a lot of possibility for",
    "start": "462000",
    "end": "467919"
  },
  {
    "text": "a long time so maybe we can dismiss all of this and simply say",
    "start": "467919",
    "end": "473520"
  },
  {
    "text": "maybe we just don't like xml and we get on with them we look at different challenges",
    "start": "473520",
    "end": "478879"
  },
  {
    "text": "but to do that i feel would miss a very important point and that is that",
    "start": "478879",
    "end": "485759"
  },
  {
    "text": "many of our api consumers the very people we build apis form",
    "start": "485759",
    "end": "492639"
  },
  {
    "text": "and again something that's close to my heart is we build apis for other developers so many developers are unsatisfied and",
    "start": "492639",
    "end": "498960"
  },
  {
    "text": "frustrated with the api's experiences that we're experiencing or receiving and also",
    "start": "498960",
    "end": "506560"
  },
  {
    "text": "our api community is very small we need to work together so we can't",
    "start": "506560",
    "end": "512399"
  },
  {
    "text": "really afford to have these camps with different ideologies or different needs around sets of technologies",
    "start": "512399",
    "end": "518320"
  },
  {
    "text": "so what i'm really hoping from today's talk is that i can give you a necessary foundation of",
    "start": "518320",
    "end": "524399"
  },
  {
    "text": "understanding that you will be able to take a balanced approach to choosing the api's technologies and",
    "start": "524399",
    "end": "530880"
  },
  {
    "text": "styles for the problems at hand and maybe that sounds a tiny bit",
    "start": "530880",
    "end": "536720"
  },
  {
    "text": "idealistic maybe a tiny bit of a dreamer so we could imagine that there's no protocols",
    "start": "536720",
    "end": "543040"
  },
  {
    "text": "it's not hard to do maybe there's no hypermedia hills to die on no movement types we don't have to worry about",
    "start": "543040",
    "end": "549519"
  },
  {
    "text": "contracts wouldn't that be wonderful unfortunately",
    "start": "549519",
    "end": "554880"
  },
  {
    "text": "not that's not how apis work apis are required to allow two persons",
    "start": "554880",
    "end": "562240"
  },
  {
    "text": "that are otherwise distributed to communicate effectively we will never get away from",
    "start": "562240",
    "end": "568480"
  },
  {
    "text": "having to have shared semantics and also shared syntax so you cannot just",
    "start": "568480",
    "end": "574480"
  },
  {
    "text": "understand what's meant by the message but also how to decode and encode that message so we have to",
    "start": "574480",
    "end": "582000"
  },
  {
    "text": "have standards and protocols so this is a problem that we need to face into",
    "start": "582000",
    "end": "588160"
  },
  {
    "text": "so let's see a little bit about how these technologies or styles have evolved over time so i'll take us all",
    "start": "588160",
    "end": "596320"
  },
  {
    "text": "back to 1991 and we'll start with corban so a middleware language and at",
    "start": "596320",
    "end": "604079"
  },
  {
    "text": "the point in time this was really seen to be the future of e-commerce on the web",
    "start": "604079",
    "end": "612640"
  },
  {
    "text": "unfortunately for some it actually fell out of favor for xml of all things",
    "start": "612640",
    "end": "620320"
  },
  {
    "text": "moving forward to 1993 we had remote data access so a client server approach where a",
    "start": "620320",
    "end": "627839"
  },
  {
    "text": "client could then query data from a remote database",
    "start": "627839",
    "end": "633120"
  },
  {
    "text": "so it sounds very like a query syntax and it was and we'll see some",
    "start": "633120",
    "end": "640079"
  },
  {
    "text": "similarities in that approach as we see some future api styles and technologies",
    "start": "640079",
    "end": "646320"
  },
  {
    "text": "so moving forward into 1998 we had a formal specification of xml arrogancy and rbc stands for",
    "start": "646320",
    "end": "655360"
  },
  {
    "text": "remote procedure call and it is a term coined by bruce nelson",
    "start": "655360",
    "end": "661440"
  },
  {
    "text": "and up until this point rpc was an approach but there wasn't a",
    "start": "661440",
    "end": "666680"
  },
  {
    "text": "specification around it so in 1998 we had a formal specification",
    "start": "666680",
    "end": "672000"
  },
  {
    "text": "between rpc over xl in 1999 don box and",
    "start": "672000",
    "end": "679519"
  },
  {
    "text": "four others from microsoft that name don box might be familiar as the man behind the four tenants of soa",
    "start": "679519",
    "end": "688640"
  },
  {
    "text": "and they released so so again a heavily rpc based technology",
    "start": "688640",
    "end": "695839"
  },
  {
    "text": "which then used a wisdom as the contract that would then format the",
    "start": "695839",
    "end": "702079"
  },
  {
    "text": "exchange between the client and the server in the year 2000 roy fielding released a",
    "start": "702079",
    "end": "709440"
  },
  {
    "text": "senal dissertation about rest and this was really about building apis that didn't",
    "start": "709440",
    "end": "716000"
  },
  {
    "text": "work off at all against the web but really embraced it so how can we build apis that are",
    "start": "716000",
    "end": "722720"
  },
  {
    "text": "sympathetic and embrace the underlying protocol and this is mainly for the purposes of the apis",
    "start": "722720",
    "end": "728399"
  },
  {
    "text": "we'll be talking about today http",
    "start": "728399",
    "end": "732720"
  },
  {
    "text": "moving forward to 2005 and in this period rest really begins to rise to the ascendancy",
    "start": "733519",
    "end": "740720"
  },
  {
    "text": "in the apis that we're building and we still have our pc but at this time we've seen",
    "start": "740720",
    "end": "746320"
  },
  {
    "text": "xml give way to to jason and that's really keeping in sync with what we saw with the move to rest as",
    "start": "746320",
    "end": "753279"
  },
  {
    "text": "well moving forward to 2007 we had odata",
    "start": "753279",
    "end": "759440"
  },
  {
    "text": "another technology released by microsoft under the marker of a better way to rest",
    "start": "759440",
    "end": "764480"
  },
  {
    "text": "and this really embraced a lot of the ideas of remote data access where it provides",
    "start": "764480",
    "end": "770800"
  },
  {
    "text": "a rich query syntax for the clients to define exactly the data that it needs",
    "start": "770800",
    "end": "777279"
  },
  {
    "text": "from the server so instead of a uniform interface constraint which defines a canonical url",
    "start": "777279",
    "end": "783120"
  },
  {
    "text": "for each resource and in which we will then receive a representation back from the server this then provides",
    "start": "783120",
    "end": "790399"
  },
  {
    "text": "a huge amount of data to the client to define exactly what it wants in the shape",
    "start": "790399",
    "end": "796000"
  },
  {
    "text": "so moving forward from 2007 to 2015 gratie well",
    "start": "796000",
    "end": "801360"
  },
  {
    "text": "lands on the scene and again this is really about empowering clients to receive only the data that it",
    "start": "801360",
    "end": "810240"
  },
  {
    "text": "wants and avoid some of the perceived inefficiencies around rest",
    "start": "810240",
    "end": "817839"
  },
  {
    "text": "and then in 2016 we've got the latest incarnation of grpc and that is again",
    "start": "817839",
    "end": "825279"
  },
  {
    "text": "our pc going back all the ways we saw back in corvo in 1991 and while the approach remain consistent",
    "start": "825279",
    "end": "832399"
  },
  {
    "text": "we've seen the implementation of the technologies change over time so that's the technologies themselves",
    "start": "832399",
    "end": "839760"
  },
  {
    "text": "what can we see that has been happening in parallel within industry so",
    "start": "839760",
    "end": "846800"
  },
  {
    "text": "in the early 2000s we were really building apis for specific partners and they were",
    "start": "846800",
    "end": "852560"
  },
  {
    "text": "still pipe integration so one-to-one one client go to one server and it's a discrete integration",
    "start": "852560",
    "end": "859040"
  },
  {
    "text": "this really changed with web 2.0 starting in 2010 when companies like",
    "start": "859040",
    "end": "865760"
  },
  {
    "text": "twitter and facebook start building public apis and these are apis where one server can",
    "start": "865760",
    "end": "872480"
  },
  {
    "text": "support multiple different clients but instead of being built for one specific client it's",
    "start": "872480",
    "end": "879680"
  },
  {
    "text": "more of a conformist api if you aware of eric evans and the mainstream design",
    "start": "879680",
    "end": "886000"
  },
  {
    "text": "where they don't take into account individual client needs but rather the final interface which",
    "start": "886000",
    "end": "891920"
  },
  {
    "text": "we all conform to and this has really been the prevalent style for public apis",
    "start": "891920",
    "end": "898639"
  },
  {
    "text": "for the last decade and then where are we going to see",
    "start": "898639",
    "end": "904320"
  },
  {
    "text": "happening next so there's quite a lot of people in the industry saying that the next wave will likely be autonomous",
    "start": "904320",
    "end": "910079"
  },
  {
    "text": "apis so rich lattices of apis that will then be composed to",
    "start": "910079",
    "end": "915839"
  },
  {
    "text": "achieve higher order business needs and this will be underpinned by technologies like serverless as well which reduces",
    "start": "915839",
    "end": "921680"
  },
  {
    "text": "the footprint and will move to a more worth-based model for apis but this is still some ways off and",
    "start": "921680",
    "end": "930079"
  },
  {
    "text": "the majority of us will still be in the second wave of generic apis particularly if we're building",
    "start": "930079",
    "end": "935600"
  },
  {
    "text": "public facing apis or apis for multiple internal teams within your organization",
    "start": "935600",
    "end": "943120"
  },
  {
    "text": "so across all of these technologies while they might appear relatively different on the face of it",
    "start": "945519",
    "end": "952800"
  },
  {
    "text": "they all share a surprising number of commonalities so we have flat file",
    "start": "952800",
    "end": "959440"
  },
  {
    "text": "apis so an example of this might be electronic data interchange and what might sound antiquated it is a",
    "start": "959440",
    "end": "967279"
  },
  {
    "text": "perfectly valid and in fact ideal choice if you were doing large batch operations",
    "start": "967279",
    "end": "972800"
  },
  {
    "text": "this is maybe month-end reporting and instead of sending a paper-based file between two companies",
    "start": "972800",
    "end": "977920"
  },
  {
    "text": "you can do that electronically to a defined format",
    "start": "977920",
    "end": "984320"
  },
  {
    "text": "and if that's about style apis the complete antithesis of that is a streaming api",
    "start": "984320",
    "end": "990480"
  },
  {
    "text": "where we're constantly exchanging data between the clients and the server and that could be stockpile changes or",
    "start": "990480",
    "end": "997519"
  },
  {
    "text": "it could be video or data streaming we have our pc apis so",
    "start": "997519",
    "end": "1005279"
  },
  {
    "text": "most recently brought to the four game by grpc where with an rpc api we are effectively",
    "start": "1005279",
    "end": "1013519"
  },
  {
    "text": "treating the distributed call almost as if the network was not there",
    "start": "1013519",
    "end": "1018560"
  },
  {
    "text": "so we're treating it at a higher order and we're trying to keep the semantics of that higher order language as well",
    "start": "1018560",
    "end": "1027600"
  },
  {
    "text": "with the web api how we call and consume data is very different so instead of using classes",
    "start": "1027839",
    "end": "1034079"
  },
  {
    "text": "that abstract away the network we actually spin up a http",
    "start": "1034079",
    "end": "1039839"
  },
  {
    "text": "client we embrace the web we send http methods to define again",
    "start": "1039839",
    "end": "1047038"
  },
  {
    "text": "what operations we would want again to specific urls so we're really embracing the",
    "start": "1047039",
    "end": "1052320"
  },
  {
    "text": "web with that and that's the major change or difference between experience recording and consuming an",
    "start": "1052320",
    "end": "1057760"
  },
  {
    "text": "rpc or a web api i'll ignore the semantic or design",
    "start": "1057760",
    "end": "1063200"
  },
  {
    "text": "changes for this particular point in the tool and it might be a challenging message to",
    "start": "1063200",
    "end": "1070880"
  },
  {
    "text": "hear first thing on the second day of nbc oslo but there is no single best apr",
    "start": "1070880",
    "end": "1078840"
  },
  {
    "text": "style computing is hard building apis is challenging what i can say though",
    "start": "1078840",
    "end": "1086320"
  },
  {
    "text": "is there is absolutely a best api style for your problem and that is really the",
    "start": "1086320",
    "end": "1093280"
  },
  {
    "text": "purpose of today's tool to arm you with the information required",
    "start": "1093280",
    "end": "1098640"
  },
  {
    "text": "that you can first define the or identify the appropriate style",
    "start": "1098640",
    "end": "1105039"
  },
  {
    "text": "and then the technology for your own problem at hand",
    "start": "1105039",
    "end": "1110720"
  },
  {
    "text": "so how what might we go about being able to inform ourselves about",
    "start": "1110720",
    "end": "1115760"
  },
  {
    "text": "this decision and we can take some guidance from roy",
    "start": "1115760",
    "end": "1120840"
  },
  {
    "text": "fielding he said that the properties are induced by the set of constraints within an",
    "start": "1120840",
    "end": "1127039"
  },
  {
    "text": "architecture so in other words the design choices that we make",
    "start": "1127039",
    "end": "1132240"
  },
  {
    "text": "will then yield certain characteristics of the solution and when we think of",
    "start": "1132240",
    "end": "1138799"
  },
  {
    "text": "constraints we often just think of technology constraints but there's many types that",
    "start": "1138799",
    "end": "1144240"
  },
  {
    "text": "we really need to consider to build an effective product",
    "start": "1144240",
    "end": "1149360"
  },
  {
    "text": "there's business constraints so anything that really affects the profitability of",
    "start": "1149440",
    "end": "1156240"
  },
  {
    "text": "a company or business in them so that could be time financial budget",
    "start": "1156240",
    "end": "1163520"
  },
  {
    "text": "and this could be across your customer your own business or certain product requirements maybe",
    "start": "1163520",
    "end": "1169120"
  },
  {
    "text": "you just looking to have a very perishable window of opportunity and that's a set say is it yourself for",
    "start": "1169120",
    "end": "1174720"
  },
  {
    "text": "maybe time constraints on what there's technical constraints so",
    "start": "1174720",
    "end": "1181679"
  },
  {
    "text": "embracing all the challenges of distributed computing so we have the eighth fallacies so",
    "start": "1181679",
    "end": "1186960"
  },
  {
    "text": "the network is not reliable latency is not zero so what are all the things we need to do",
    "start": "1186960",
    "end": "1192960"
  },
  {
    "text": "to support maybe the security concerns or debate that we're facing but also how we need to be able to",
    "start": "1192960",
    "end": "1200240"
  },
  {
    "text": "evolve the system over time and the final and probably the most",
    "start": "1200240",
    "end": "1205360"
  },
  {
    "text": "interesting set of constraints is all around the operation of that service",
    "start": "1205360",
    "end": "1210799"
  },
  {
    "text": "and this is really all the socio-technical or the human constraints around so how are we going",
    "start": "1210799",
    "end": "1217120"
  },
  {
    "text": "to support or build this system is there multiple teams within an organization buildings",
    "start": "1217120",
    "end": "1222720"
  },
  {
    "text": "in which case then looking at convoy's normal which states that the systems we build will be a mirror of",
    "start": "1222720",
    "end": "1228640"
  },
  {
    "text": "the communication pattern between our teams so",
    "start": "1228640",
    "end": "1235039"
  },
  {
    "text": "these are things that have become very close to my heart and my current role where i'm looking to align the operating",
    "start": "1235039",
    "end": "1242000"
  },
  {
    "text": "model again with the product lines that we're looking to build and it's not just about organizing teams",
    "start": "1242000",
    "end": "1247440"
  },
  {
    "text": "but it's also about the set of knowledge or expertise within your teams so for instance rest to build an",
    "start": "1247440",
    "end": "1254000"
  },
  {
    "text": "effective rest api requires deep expertise in http",
    "start": "1254000",
    "end": "1260159"
  },
  {
    "text": "if you don't have it you will struggle to be able to get the most out of that lifestyle so again really looking at all",
    "start": "1260159",
    "end": "1266400"
  },
  {
    "text": "of the elements around your teams how they're organizing the knowledge they have to drive some of these decisions as well",
    "start": "1266400",
    "end": "1274559"
  },
  {
    "text": "and so when we take all of those constraints either business technical or",
    "start": "1275200",
    "end": "1280320"
  },
  {
    "text": "socio-technical they will then yield the properties of the system",
    "start": "1280320",
    "end": "1285440"
  },
  {
    "text": "and that would be the properties of the software system itself but also the wider ecosystem everything",
    "start": "1285440",
    "end": "1291120"
  },
  {
    "text": "around the operation of that product and when i'm designing a",
    "start": "1291120",
    "end": "1296640"
  },
  {
    "text": "system i always start with the properties",
    "start": "1296640",
    "end": "1301679"
  },
  {
    "text": "i define the characteristics that the system needs to have or the properties it needs to display",
    "start": "1301679",
    "end": "1310000"
  },
  {
    "text": "and then i work backwards to say what constraints or decisions can i make that will then",
    "start": "1310000",
    "end": "1316320"
  },
  {
    "text": "yield those properties so it's always a case of defining what",
    "start": "1316320",
    "end": "1321520"
  },
  {
    "text": "you need and then working back it's definitely not a case of starting with a technology and hoping",
    "start": "1321520",
    "end": "1327760"
  },
  {
    "text": "it will fit your problem so how might we gain some insight into",
    "start": "1327760",
    "end": "1334080"
  },
  {
    "text": "being able to do this in practice and again roy fielding has some interesting",
    "start": "1334080",
    "end": "1341600"
  },
  {
    "text": "guidance for us in this case he says that while there's never an optimal",
    "start": "1341600",
    "end": "1348080"
  },
  {
    "text": "architecture style for every application we can start comparing architectural styles",
    "start": "1348080",
    "end": "1356880"
  },
  {
    "text": "for the properties induced and this was really the original premise for this talk",
    "start": "1356880",
    "end": "1365039"
  },
  {
    "text": "and i was slightly dismayed to learn five minutes into my research for us is that someone else",
    "start": "1365039",
    "end": "1371440"
  },
  {
    "text": "has actually done it so zen academic gave this talk or a very similar detailed",
    "start": "1371440",
    "end": "1377280"
  },
  {
    "text": "a review of rest and graphql in the end of 2018 at nordic api's",
    "start": "1377280",
    "end": "1383840"
  },
  {
    "text": "conference and it goes into quite a lot of detail about the pros and cons of different api styles",
    "start": "1383840",
    "end": "1391520"
  },
  {
    "text": "particularly in terms of arrest which i would say he's he started with and then started to",
    "start": "1391520",
    "end": "1398159"
  },
  {
    "text": "compare graphql with um it is a very insightful talk um",
    "start": "1398159",
    "end": "1403280"
  },
  {
    "text": "i'll include a link to it in the references that i'll share at the end but it doesn't cover grpc so over the",
    "start": "1403280",
    "end": "1411280"
  },
  {
    "text": "course of the of the next one we'll we'll weave in some of the insights that democrats but then also update",
    "start": "1411280",
    "end": "1418559"
  },
  {
    "text": "where we've sort of seen over the last 16 months 18 months since he gave that talk as well so instead we're going to look",
    "start": "1418559",
    "end": "1426320"
  },
  {
    "text": "at something that's a little bit more fun so we're going to look at some of the conversations that have been happening",
    "start": "1426320",
    "end": "1431520"
  },
  {
    "text": "in the api industry over the last sort of year and a year and a bit and then we're going to for each of",
    "start": "1431520",
    "end": "1437120"
  },
  {
    "text": "those statements we're going to take the next level of detail to it and then start spilling",
    "start": "1437120",
    "end": "1443360"
  },
  {
    "text": "dispelling some of those myths and at the same time using these as the vehicles for comparing different aspects of these of",
    "start": "1443360",
    "end": "1451120"
  },
  {
    "text": "these api styles and showing where some shine and where others don't",
    "start": "1451120",
    "end": "1457200"
  },
  {
    "text": "so let's tackle the initial ones that i mentioned at the start of this tool and",
    "start": "1457200",
    "end": "1463120"
  },
  {
    "text": "that is the the statement that rest in peace apis that rest apis are rest in peace apis",
    "start": "1463120",
    "end": "1470080"
  },
  {
    "text": "and not only graphql or as another person puts it graphql",
    "start": "1470080",
    "end": "1475200"
  },
  {
    "text": "will do to rest what jason did to xml",
    "start": "1475200",
    "end": "1480240"
  },
  {
    "text": "but they're blanket statements and they don't let us know why or any context of supporting that",
    "start": "1480640",
    "end": "1486640"
  },
  {
    "text": "statement so let's start by looking at some of the thinking that underpins these api styles",
    "start": "1486640",
    "end": "1494720"
  },
  {
    "text": "so graphql on the read side so where the client is querying data",
    "start": "1494720",
    "end": "1500080"
  },
  {
    "text": "from the server looks very like rda to remote data access it affords a huge",
    "start": "1500080",
    "end": "1505679"
  },
  {
    "text": "amount of power to the client to request the data and only the data it needs",
    "start": "1505679",
    "end": "1512400"
  },
  {
    "text": "however on the right side it uses our pc and that's for the",
    "start": "1512400",
    "end": "1518480"
  },
  {
    "text": "mutations so that's again a right or subscriptions which are an event-based way of getting",
    "start": "1518480",
    "end": "1523919"
  },
  {
    "text": "real-time data so we can see actually that graphql",
    "start": "1523919",
    "end": "1529120"
  },
  {
    "text": "heavily builds on the api styles and previous approaches and in fact it's also got a",
    "start": "1529120",
    "end": "1537679"
  },
  {
    "text": "fair amount of http semantics woven into it as well",
    "start": "1537679",
    "end": "1543600"
  },
  {
    "text": "so let's compare graphql then to grpc a grpc is quite different graphql",
    "start": "1543600",
    "end": "1551919"
  },
  {
    "text": "and rest are both protocol agnostic whereas grpc is firmly tied to html2",
    "start": "1551919",
    "end": "1560080"
  },
  {
    "text": "not http1.x but specifically http 2 to support multiplexing across a single",
    "start": "1560080",
    "end": "1567039"
  },
  {
    "text": "connection and this is really where grpc is focusing on",
    "start": "1567039",
    "end": "1572480"
  },
  {
    "text": "is about performance so again being able to have very performant real-time interactions",
    "start": "1572480",
    "end": "1578720"
  },
  {
    "text": "across different distributed components and if http 2 is the protocol grpc",
    "start": "1578720",
    "end": "1586799"
  },
  {
    "text": "then uses protobuf or protocol buffers for both the contract the interface",
    "start": "1586799",
    "end": "1592799"
  },
  {
    "text": "definition language so in the case of soap this was whistle",
    "start": "1592799",
    "end": "1597840"
  },
  {
    "text": "or in the case of a graphql api that is the graphql schema and in rest",
    "start": "1597840",
    "end": "1603760"
  },
  {
    "text": "it could be an open api initiative contract or rammel or apu blueprints so it uses",
    "start": "1603760",
    "end": "1611039"
  },
  {
    "text": "protocol buffers for both the contracts but also as the data exchange format",
    "start": "1611039",
    "end": "1616640"
  },
  {
    "text": "across the wire so how we encode and decode data",
    "start": "1616640",
    "end": "1622400"
  },
  {
    "text": "and the rest is something very different again so if grpc and",
    "start": "1623200",
    "end": "1630240"
  },
  {
    "text": "graphql are data over http rest is really a state machine",
    "start": "1631440",
    "end": "1638559"
  },
  {
    "text": "over http and when i say state machine what i really mean is",
    "start": "1638559",
    "end": "1644480"
  },
  {
    "text": "workflow so it could be a business process which based on",
    "start": "1644480",
    "end": "1649520"
  },
  {
    "text": "what stage in the process you were you could have multiple different actions of paths",
    "start": "1649520",
    "end": "1655840"
  },
  {
    "text": "and state machines then are driven by an aspect of the uniform interface",
    "start": "1656480",
    "end": "1661840"
  },
  {
    "text": "constraint which is hypermedia and hypermedia is often one",
    "start": "1661840",
    "end": "1667039"
  },
  {
    "text": "of the things that we struggle to understand in a",
    "start": "1667039",
    "end": "1672240"
  },
  {
    "text": "rest api or how we can build those affordances into our responses but it's actually a concept that many of us are",
    "start": "1672240",
    "end": "1678480"
  },
  {
    "text": "already familiar with so if we take a look at this very basic",
    "start": "1678480",
    "end": "1684320"
  },
  {
    "text": "web page what we can see is there's actually a number of hyperlink installed already we have",
    "start": "1684320",
    "end": "1691360"
  },
  {
    "text": "an image tag an anchor tag and a form and all of these controls have",
    "start": "1691360",
    "end": "1696399"
  },
  {
    "text": "well-defined semantics which then allow any browser to consume",
    "start": "1696399",
    "end": "1701600"
  },
  {
    "text": "this page and know what to do with the data so an image tag when the browser receives that it will",
    "start": "1701600",
    "end": "1707919"
  },
  {
    "text": "de-reference the resource that is mentioned at that url and it will then display that within the allocated space",
    "start": "1707919",
    "end": "1716640"
  },
  {
    "text": "when you click on an anchor tag that link will be dereferenced and you will be navigated to that",
    "start": "1716640",
    "end": "1722399"
  },
  {
    "text": "particular page and with a form when you submit that form",
    "start": "1722399",
    "end": "1727520"
  },
  {
    "text": "all the data will then be packaged up and sent to the server i talk a lot about hypermedia because i",
    "start": "1727520",
    "end": "1734399"
  },
  {
    "text": "do feel it is absolutely foundational to do a little best api",
    "start": "1734399",
    "end": "1739679"
  },
  {
    "text": "and while we often see it at the top of the student majority model at level three",
    "start": "1739679",
    "end": "1747120"
  },
  {
    "text": "for me it's either rest or it's not and that is defined by whether it is",
    "start": "1747120",
    "end": "1752159"
  },
  {
    "text": "or not so hypermedia is the end of the application i don't need this to be a confronting message i apologize if it is but i",
    "start": "1752159",
    "end": "1759600"
  },
  {
    "text": "firmly believe that where we don't embrace",
    "start": "1759600",
    "end": "1765120"
  },
  {
    "text": "hypermedia we end up with a lot of rest-ish apis that are difficult to consume but also",
    "start": "1765120",
    "end": "1770960"
  },
  {
    "text": "require a fair amount of knowledge to build and i firmly believe that in many cases those apis",
    "start": "1770960",
    "end": "1777679"
  },
  {
    "text": "would be able to be built more effectively or deliver a better experience maybe using one of those",
    "start": "1777679",
    "end": "1782960"
  },
  {
    "text": "other styles if again from a socio-technical district we don't have the knowledge to be able to get the most out",
    "start": "1782960",
    "end": "1789120"
  },
  {
    "text": "of that style so really don't build restish apis",
    "start": "1789120",
    "end": "1794240"
  },
  {
    "text": "there are many options that we have available and many different constraints that will then be able to yield the best",
    "start": "1794240",
    "end": "1801120"
  },
  {
    "text": "outcome for our consumers which is really the goal in any api",
    "start": "1801120",
    "end": "1809120"
  },
  {
    "text": "and what we as i mentioned might be a tiny bit confronting i hope it's not because there is no best api style",
    "start": "1809120",
    "end": "1816559"
  },
  {
    "text": "so if your api is mostly actions then our pc is actually a brilliant",
    "start": "1816559",
    "end": "1822640"
  },
  {
    "text": "choice for us but we shouldn't start saying i want to build a grpc api",
    "start": "1822640",
    "end": "1828480"
  },
  {
    "text": "so a great example of a public rpc api would be the slack api for instance",
    "start": "1828480",
    "end": "1834880"
  },
  {
    "text": "however if an api is mostly thought or manipulating related data maybe with",
    "start": "1834880",
    "end": "1840559"
  },
  {
    "text": "a workflow then rest is a fantastic choice and mr sturgeon the person who i've",
    "start": "1840559",
    "end": "1847840"
  },
  {
    "text": "quoted here um writes a blog um api's around tense and he has a wealth of knowledge to",
    "start": "1847840",
    "end": "1853600"
  },
  {
    "text": "share in the subject so i would encourage you to follow him as well",
    "start": "1853600",
    "end": "1858880"
  },
  {
    "text": "and even one of the authors of graphql lee byron stated that graphql is not the",
    "start": "1858880",
    "end": "1864399"
  },
  {
    "text": "optimal choice for all scenarios it is very much focused on client server",
    "start": "1864399",
    "end": "1870399"
  },
  {
    "text": "where the clients or multiple clients have very different data requirements for server to server communications",
    "start": "1870399",
    "end": "1878159"
  },
  {
    "text": "there are better choices that's where grpc shines or thrift from twitter and even",
    "start": "1878159",
    "end": "1884559"
  },
  {
    "text": "any rest apis in simpler cases as well so again understand the context in which",
    "start": "1884559",
    "end": "1891760"
  },
  {
    "text": "so wrapping up api styles address different problem spaces in some cases",
    "start": "1891760",
    "end": "1898480"
  },
  {
    "text": "restless apis which i feel have been responsible for as well as a backlash against",
    "start": "1898480",
    "end": "1905279"
  },
  {
    "text": "rest apis would actually be better built in other styles not because those other",
    "start": "1905279",
    "end": "1911200"
  },
  {
    "text": "styles are inherently better but some require less of a ramp up time on behalf of the",
    "start": "1911200",
    "end": "1917600"
  },
  {
    "text": "development and grpc is a perfect choice for",
    "start": "1917600",
    "end": "1922640"
  },
  {
    "text": "synchronous communication between internal services so where your domain requires very",
    "start": "1922640",
    "end": "1929039"
  },
  {
    "text": "frequent data updates and potentially different interactions rather",
    "start": "1929039",
    "end": "1934080"
  },
  {
    "text": "than the client server call that you might see with the rest api but supporting other scenarios such as",
    "start": "1934080",
    "end": "1942559"
  },
  {
    "text": "streaming data from the server where one call from defined can result in multiple responses from the server or",
    "start": "1942559",
    "end": "1948720"
  },
  {
    "text": "vice versa where client streaming or in many cases bi-directional stream so again different styles and different",
    "start": "1948720",
    "end": "1955760"
  },
  {
    "text": "technologies support the different areas of your application",
    "start": "1955760",
    "end": "1960880"
  },
  {
    "text": "so moving on to another comment that was coming up quite often in sort of at",
    "start": "1960880",
    "end": "1967200"
  },
  {
    "text": "the start of last year it's dived down a little bit but there was this view that graphql",
    "start": "1967200",
    "end": "1973039"
  },
  {
    "text": "breaks caching and the first question we should really think about is what",
    "start": "1973039",
    "end": "1981120"
  },
  {
    "text": "type of caching because there's many does it just universally break it",
    "start": "1981120",
    "end": "1987919"
  },
  {
    "text": "i'm not too sure so there's the client side so that might be in the browser or in",
    "start": "1987919",
    "end": "1993919"
  },
  {
    "text": "the case of graphql in the denobilized client kit client cache there's on the server side also known as",
    "start": "1993919",
    "end": "2000480"
  },
  {
    "text": "application caching or intermediary caching proxies such as smooth",
    "start": "2000480",
    "end": "2005840"
  },
  {
    "text": "varnish or nginx so let's take a look at this in a http context so",
    "start": "2005840",
    "end": "2013279"
  },
  {
    "text": "in addition to client and server side you kind of intermediates which",
    "start": "2013279",
    "end": "2018399"
  },
  {
    "text": "will then be able to hold that data between the clients and the server",
    "start": "2018399",
    "end": "2024640"
  },
  {
    "text": "reducing latency and while you can do that for http that's not an option for graphql or",
    "start": "2024640",
    "end": "2032559"
  },
  {
    "text": "jrpgc so while you can still handle data other clients along the server",
    "start": "2032559",
    "end": "2037679"
  },
  {
    "text": "the intermediate options are not there that's really about how they use http",
    "start": "2037679",
    "end": "2045679"
  },
  {
    "text": "across the wire so posts for instance which are typically used by",
    "start": "2045679",
    "end": "2052000"
  },
  {
    "text": "graphql are not cacheable by default not by the individual boxes and why",
    "start": "2052000",
    "end": "2058560"
  },
  {
    "text": "could that be an issue because while the speed of light is very fast about 300 000",
    "start": "2058560",
    "end": "2064720"
  },
  {
    "text": "per second it's not infinitely so so typically if you can get your data",
    "start": "2064720",
    "end": "2071040"
  },
  {
    "text": "closer to the point they will get it faster",
    "start": "2071040",
    "end": "2076240"
  },
  {
    "text": "and where there's a will there's a way um the graphql community have looked at options about how to support",
    "start": "2077919",
    "end": "2085520"
  },
  {
    "text": "intermediary proxies and they've taken a look to be able to use the get http",
    "start": "2085520",
    "end": "2090960"
  },
  {
    "text": "methods along with persistent queries and persistent queries was really championed by apollo one of the vendors",
    "start": "2090960",
    "end": "2098800"
  },
  {
    "text": "or producers in this area particularly in the node space and that is instead of the client sending",
    "start": "2098800",
    "end": "2104400"
  },
  {
    "text": "all the data to the server the entire query rather that query is stored on the server and then",
    "start": "2104400",
    "end": "2110240"
  },
  {
    "text": "just a query id is sent across and then that query is hydrated on the server before",
    "start": "2110240",
    "end": "2116640"
  },
  {
    "text": "and with that we can get back to using a http guest method but there's not a standard",
    "start": "2116640",
    "end": "2125040"
  },
  {
    "text": "around here which is a shame because that was really what simplified a lot of graphql development instead of rest which was an",
    "start": "2125040",
    "end": "2131920"
  },
  {
    "text": "architectural style and a lot of the implementation was left to the development hence the",
    "start": "2131920",
    "end": "2137280"
  },
  {
    "text": "large ramp up time that i spoke about previously graphql eliminated a lot of that by",
    "start": "2137280",
    "end": "2142800"
  },
  {
    "text": "providing a concrete specification to work from but there is no graphql specification",
    "start": "2142800",
    "end": "2149440"
  },
  {
    "text": "for operating over http there are a few unofficial ones but nothing that can",
    "start": "2149440",
    "end": "2154480"
  },
  {
    "text": "really bind the community but it's not just about intermediary",
    "start": "2154480",
    "end": "2162079"
  },
  {
    "text": "proxies there's other there's also other aspects to consider",
    "start": "2162079",
    "end": "2167760"
  },
  {
    "text": "authenticated traffic so for instance any traffic with the authorization header that might contain",
    "start": "2167760",
    "end": "2173599"
  },
  {
    "text": "a api key or a bearer token will not be stored by default by",
    "start": "2173599",
    "end": "2180400"
  },
  {
    "text": "shared crashes and if this is a case where all of your",
    "start": "2180400",
    "end": "2187760"
  },
  {
    "text": "data's personalized are tied to a specific identity this change is a problem the main parts of this so maybe you wouldn't have",
    "start": "2187760",
    "end": "2194480"
  },
  {
    "text": "used intermediate proxies at all so again consider that in your domain that whether the traffic is announced or",
    "start": "2194480",
    "end": "2201280"
  },
  {
    "text": "whether it's always served to a specific client there's also other aspects such",
    "start": "2201280",
    "end": "2207920"
  },
  {
    "text": "as the more customizable you make an api in other words the more power you give",
    "start": "2207920",
    "end": "2214160"
  },
  {
    "text": "to the client to define the data that it needs the less cachable it will become",
    "start": "2214160",
    "end": "2220880"
  },
  {
    "text": "so in restful you have slash customer slash five that is very casual because there's nothing else you can do with it",
    "start": "2220880",
    "end": "2226880"
  },
  {
    "text": "the second you make is more flexible you are reducing the likelihood of the caches",
    "start": "2226880",
    "end": "2232400"
  },
  {
    "text": "so wrapping up there's many different kinds client server and intermediate network be aware which",
    "start": "2232400",
    "end": "2238320"
  },
  {
    "text": "ones are powerful in your contents highly customizable apis benefit less from intermediate properties",
    "start": "2238320",
    "end": "2245359"
  },
  {
    "text": "and if they are valuable then rest is a brilliant choice and best practices are still",
    "start": "2245359",
    "end": "2250560"
  },
  {
    "text": "emerging for graphql and grpc another comment which",
    "start": "2250560",
    "end": "2256000"
  },
  {
    "text": "i found quite um quite amazing was the view that rest apis are inefficient and what do we really",
    "start": "2256000",
    "end": "2263119"
  },
  {
    "text": "mean by inefficient because in many cases rest was never about short-term efficiency rather it",
    "start": "2263119",
    "end": "2270240"
  },
  {
    "text": "was about longevity long-term evolvability and evolution of a client and a server",
    "start": "2270240",
    "end": "2277359"
  },
  {
    "text": "which and tightly coupled together so i think in many cases when we say",
    "start": "2277359",
    "end": "2282880"
  },
  {
    "text": "inefficient what we actually meant was performance so that there was performance issues",
    "start": "2282880",
    "end": "2288320"
  },
  {
    "text": "and typically this was the result of over-fetching or undefecting so over-fetching is where we",
    "start": "2288320",
    "end": "2294240"
  },
  {
    "text": "would retrieve find more data than we required potentially wasting expensive data plans",
    "start": "2294240",
    "end": "2300480"
  },
  {
    "text": "or under fetching where we have to make multiple calls to the server to retrieve",
    "start": "2300480",
    "end": "2305520"
  },
  {
    "text": "the data that we need yeah we have techniques for this as well so we can use sparse field sets",
    "start": "2305520",
    "end": "2311520"
  },
  {
    "text": "to address overfetching or compound documents such as defining json api or",
    "start": "2311520",
    "end": "2318000"
  },
  {
    "text": "hal hypermedia application language in those media types to be able to type",
    "start": "2318000",
    "end": "2323200"
  },
  {
    "text": "multiple responses together or representations in a single envelope",
    "start": "2323200",
    "end": "2328240"
  },
  {
    "text": "and this is really where graphql was first positioned and that was being able to allow any clients to retrieve exactly",
    "start": "2328240",
    "end": "2334800"
  },
  {
    "text": "the data into the single membership to the server however there's an implication to this",
    "start": "2334800",
    "end": "2341440"
  },
  {
    "text": "is that the slowest field now dictates the overall response time and this has always been the case with",
    "start": "2341440",
    "end": "2347599"
  },
  {
    "text": "any api but with graphql giving all the power to the clients to build up arbitrary depth",
    "start": "2347599",
    "end": "2353760"
  },
  {
    "text": "queries we are compounding that effect quite a bit so in fact all the data might come back",
    "start": "2353760",
    "end": "2360480"
  },
  {
    "text": "in a single call but the time the client needs to wait for all that data to respond can actually be quite",
    "start": "2360480",
    "end": "2365760"
  },
  {
    "text": "fine and when i first started getting graphql apis into production that performance",
    "start": "2365760",
    "end": "2372000"
  },
  {
    "text": "tuning of queries became a significant overheads to my teams",
    "start": "2372000",
    "end": "2377680"
  },
  {
    "text": "and again there's been certain movements in the industry to try to overcome this so using deferred queries where parts of",
    "start": "2377680",
    "end": "2384880"
  },
  {
    "text": "the data will be sent back to the date to the client initially and then http patches",
    "start": "2384880",
    "end": "2390079"
  },
  {
    "text": "for subsequent paths but it all adds complexity and what we really should be asking",
    "start": "2390079",
    "end": "2395200"
  },
  {
    "text": "ourselves now is should it be this complicated should it really be this hurt and http 2 has really been a big game",
    "start": "2395200",
    "end": "2403440"
  },
  {
    "text": "changer in this area with http 1.x we use many hacks",
    "start": "2403440",
    "end": "2408880"
  },
  {
    "text": "to try to overcome some of the cost of a connection so be that the",
    "start": "2408880",
    "end": "2416160"
  },
  {
    "text": "the tns handshake or the tcp handshake or windows scaling needed but we ended up with typically",
    "start": "2416160",
    "end": "2423280"
  },
  {
    "text": "very poor connection reuse and then the high cost of a handshake quite often in our apis",
    "start": "2423280",
    "end": "2430079"
  },
  {
    "text": "whereas with http 2 we can have long-last connections and all of those communications between",
    "start": "2430079",
    "end": "2436319"
  },
  {
    "text": "the client and the server happening over a single multiplex connection removing a lot of that",
    "start": "2436319",
    "end": "2442240"
  },
  {
    "text": "cost of waste in doing multiple calls so in fact looking at compounds",
    "start": "2442240",
    "end": "2448560"
  },
  {
    "text": "documents and in fact being able to pull back all that data and graphically well in a single poll",
    "start": "2448560",
    "end": "2454240"
  },
  {
    "text": "is very much a double-edged sword if we could make separate calls that didn't have a performance impact",
    "start": "2454240",
    "end": "2462160"
  },
  {
    "text": "then that's actually a far better outcome for us because we still get all of the caching semantics we would want",
    "start": "2462160",
    "end": "2468720"
  },
  {
    "text": "from the discrete calls but not the performance hit of making multiple calls so it's a win-win",
    "start": "2468720",
    "end": "2474800"
  },
  {
    "text": "there's other aspects to http 2 as well such as server push and framework so open source projects",
    "start": "2474800",
    "end": "2481520"
  },
  {
    "text": "such as volcan actually embrace server push to be able to then have the server",
    "start": "2481520",
    "end": "2487760"
  },
  {
    "text": "proactively push additional representations to the client even without the client",
    "start": "2487760",
    "end": "2493520"
  },
  {
    "text": "asking for it so again being able to if you retrieve the master automatically push the child resources",
    "start": "2493520",
    "end": "2500560"
  },
  {
    "text": "to the client because the chances are they will need it so that's quite a powerful approach and while it never really gains traction",
    "start": "2500560",
    "end": "2507599"
  },
  {
    "text": "in the web space because prefetch links with general directors were generally easier to work",
    "start": "2507599",
    "end": "2513680"
  },
  {
    "text": "with it's showing a lot of problems in the api space so performance in http1.x the cost of a",
    "start": "2513680",
    "end": "2520720"
  },
  {
    "text": "handshake was very high and that's both at the tcp level but also at the tls",
    "start": "2520720",
    "end": "2526160"
  },
  {
    "text": "level and http removes the need for compound documents by actually reducing or avoiding the",
    "start": "2526160",
    "end": "2533280"
  },
  {
    "text": "multiple handshakes that would have been required and server push creates new",
    "start": "2533280",
    "end": "2538720"
  },
  {
    "text": "possibilities again there's still certain issues with efficiency and the fact that",
    "start": "2538720",
    "end": "2544000"
  },
  {
    "text": "all of those push representations live within the http 2 connection rather than the other um caches on the",
    "start": "2544000",
    "end": "2550960"
  },
  {
    "text": "browser so again if that connection dies so does that cache copy and there's other aspects such as cache",
    "start": "2550960",
    "end": "2557599"
  },
  {
    "text": "digests that will be able to allow the clients to say don't push these because i already have",
    "start": "2557599",
    "end": "2562800"
  },
  {
    "text": "it so it's still an emerging technology and approach and grpc heavily uses http 2",
    "start": "2562800",
    "end": "2570400"
  },
  {
    "text": "for that multiplex connections for the streaming operations that it supports",
    "start": "2570400",
    "end": "2576160"
  },
  {
    "text": "but then does http 2 make graphql irrelevant so again if graphql was all about",
    "start": "2577200",
    "end": "2582880"
  },
  {
    "text": "compound documents supposedly do we need it anymore and again graphql",
    "start": "2582880",
    "end": "2588800"
  },
  {
    "text": "is not just about network efficiency and i feel we'll see as a community this starting become less and less important",
    "start": "2588800",
    "end": "2594960"
  },
  {
    "text": "as we move forward but the value of a technology is actually the sum of its parts",
    "start": "2594960",
    "end": "2600720"
  },
  {
    "text": "so again as i mentioned before all the other constraints it's not just about the technology it's about the ecosystem and the tool",
    "start": "2600720",
    "end": "2608960"
  },
  {
    "text": "and graphql offers an incredible developer experience you can get very good documentation out",
    "start": "2608960",
    "end": "2615599"
  },
  {
    "text": "of the box using generation and it also comes with a wonderful sdk",
    "start": "2615599",
    "end": "2620640"
  },
  {
    "text": "so we get how actually people consume it and if you look at an example for this in v3",
    "start": "2620640",
    "end": "2627520"
  },
  {
    "text": "of its api github had to support multiple cloud libraries or sdks from many different languages",
    "start": "2627520",
    "end": "2632960"
  },
  {
    "text": "with the power of a graphql specification with v4 it didn't have to do that at all because",
    "start": "2632960",
    "end": "2639200"
  },
  {
    "text": "the community could build graphql client libraries or sdks that would then support",
    "start": "2639200",
    "end": "2644720"
  },
  {
    "text": "its api without having to do that work themselves but also allows developers to use that tool",
    "start": "2644720",
    "end": "2650319"
  },
  {
    "text": "of choice to never get excellent developer experience so when we're choosing a technology",
    "start": "2650319",
    "end": "2656720"
  },
  {
    "text": "think about all of the facets of the ecosystem around",
    "start": "2656720",
    "end": "2662000"
  },
  {
    "text": "again the true value of graphql and many technologies lies in the in the two league ecosystem and",
    "start": "2662000",
    "end": "2668079"
  },
  {
    "text": "not just the immediate technology itself if you're only concerned",
    "start": "2668079",
    "end": "2673599"
  },
  {
    "text": "then with network efficiency then i hate to end points might be a great",
    "start": "2673599",
    "end": "2679760"
  },
  {
    "text": "choice for that because compound documents are no are no longer the only option we have",
    "start": "2679760",
    "end": "2685440"
  },
  {
    "text": "for improving network throughput but this story is far from finished",
    "start": "2685440",
    "end": "2691760"
  },
  {
    "text": "another one of my favorites is graphql supposedly eliminates the need for versioning",
    "start": "2691760",
    "end": "2698160"
  },
  {
    "text": "however there was never a need to version your api it is a strategy for decoupling a client",
    "start": "2698160",
    "end": "2705119"
  },
  {
    "text": "from a breaking change in your api it is a strategy for compatibility not a requirement and",
    "start": "2705119",
    "end": "2712079"
  },
  {
    "text": "it's not the only option we have available either so we have versioning as being one but",
    "start": "2712079",
    "end": "2717200"
  },
  {
    "text": "we also have graceful evolution and when vote fielding was asked how should you version the rest apr",
    "start": "2717200",
    "end": "2722400"
  },
  {
    "text": "the simple answer was don't and in fact this is exactly the same view that the graphql designers",
    "start": "2722400",
    "end": "2729680"
  },
  {
    "text": "took as well favoring graceful evolution through the deferred attribute or directive",
    "start": "2729680",
    "end": "2737040"
  },
  {
    "text": "and to my mind gracefully evolution should always be your goal but it does require discipline so for",
    "start": "2737040",
    "end": "2743200"
  },
  {
    "text": "instance we can't add required inputs we can't make outputs that were required like optional you can't remove them you can't",
    "start": "2743200",
    "end": "2751040"
  },
  {
    "text": "change the type of a field from a number to a string and we should always follow the robustness principle of hostile's law",
    "start": "2751040",
    "end": "2756960"
  },
  {
    "text": "so be incredibly broad for what you accept but incredibly specific with what you said and this requires",
    "start": "2756960",
    "end": "2764800"
  },
  {
    "text": "discipline and i guess the key thing there is don't rely on grace and evolution alone",
    "start": "2764800",
    "end": "2770319"
  },
  {
    "text": "not over communicate with your users around these changes so it's not enough to say in my mind to",
    "start": "2770319",
    "end": "2777119"
  },
  {
    "text": "put a deprecation or a sunset header in your api responses and then have your api consumers update",
    "start": "2777119",
    "end": "2783920"
  },
  {
    "text": "automatically send those a bulletin let them know what will change engage them let them know",
    "start": "2783920",
    "end": "2789359"
  },
  {
    "text": "how long the window is that you can support them particularly important when you're building apis for internal teams in your",
    "start": "2789359",
    "end": "2795440"
  },
  {
    "text": "organization but that still adds a lot to the developer experience of making your api a joy to use",
    "start": "2795440",
    "end": "2802079"
  },
  {
    "text": "and it's not just on the server side so clients also need to have discipline so",
    "start": "2802079",
    "end": "2808160"
  },
  {
    "text": "tolerant reader pattern as defined by martin fowler the enterprise integration pattern book is again",
    "start": "2808160",
    "end": "2814800"
  },
  {
    "text": "how clients should respond to apis so don't deserialize directly into classes",
    "start": "2814800",
    "end": "2820880"
  },
  {
    "text": "so if the fields appear in a different order don't worry if additional fields that",
    "start": "2820880",
    "end": "2826640"
  },
  {
    "text": "you aren't interested in appear in the response again don't break so apply the tolerance reader pattern",
    "start": "2826640",
    "end": "2832480"
  },
  {
    "text": "and that's what allows both the client and the server to evolve independently or more robustly",
    "start": "2832480",
    "end": "2838400"
  },
  {
    "text": "and graphql makes this an inbuilt feature so it makes deprecations to the identification director",
    "start": "2838400",
    "end": "2844720"
  },
  {
    "text": "and when i first started using graphql i thought this would be incredibly powerful instead of doing broadcasts to",
    "start": "2844720",
    "end": "2851280"
  },
  {
    "text": "say this field by change who'd be interested who should i engage with because i know every field that every",
    "start": "2851280",
    "end": "2857119"
  },
  {
    "text": "user is requesting i'd be able to have specific conversations what i found",
    "start": "2857119",
    "end": "2862240"
  },
  {
    "text": "though is it doesn't take long until everybody uses something so you're",
    "start": "2862240",
    "end": "2868240"
  },
  {
    "text": "always dealing with if you have to introduce a great change really going through the same steps you would have",
    "start": "2868240",
    "end": "2874000"
  },
  {
    "text": "anyway and it's not just about the contract level there's also certain in-built behaviors",
    "start": "2874000",
    "end": "2879200"
  },
  {
    "text": "in your api about performance for instance which while they're not defined in the",
    "start": "2879200",
    "end": "2884800"
  },
  {
    "text": "contract there's absolutely other people relying on it particularly if you've got multiple apis that you might have",
    "start": "2884800",
    "end": "2890960"
  },
  {
    "text": "daisy chained together ignoring multiplicative effective downtime um and then latency becomes a big issue",
    "start": "2890960",
    "end": "2897680"
  },
  {
    "text": "across those services if you want to choose the timeouts so even if we're doing a refactor as",
    "start": "2897680",
    "end": "2902880"
  },
  {
    "text": "well of some of the behavior in many cases understanding that you shouldn't really fix or change a",
    "start": "2902880",
    "end": "2908240"
  },
  {
    "text": "behavior and many of those behaviors cannot be defined in the contract alone so again communication with your users",
    "start": "2908240",
    "end": "2914720"
  },
  {
    "text": "becomes incredibly important so how about we go about being able to",
    "start": "2914720",
    "end": "2920000"
  },
  {
    "text": "create our solutions that can evolve racially and this is really by embracing the interface which in our",
    "start": "2920000",
    "end": "2927280"
  },
  {
    "text": "means a contract first design so in graphql is the schema it's the protocol buffer or again the",
    "start": "2927280",
    "end": "2934240"
  },
  {
    "text": "open api etc definition and once we have that shared understanding around the",
    "start": "2934240",
    "end": "2940240"
  },
  {
    "text": "interface both the clients on the server team can work independently using mock stubs against that interface",
    "start": "2940240",
    "end": "2947359"
  },
  {
    "text": "finally you can integrate and the whole loop repeats again so if you're not using a contract first",
    "start": "2947359",
    "end": "2953680"
  },
  {
    "text": "approach particularly when you want to be able to build things in parallel i would encourage you to investigate the approach",
    "start": "2953680",
    "end": "2959359"
  },
  {
    "text": "it is incredibly powerful to be able to iterate a contract very quickly rather than having all the",
    "start": "2959359",
    "end": "2965520"
  },
  {
    "text": "code that you need to change so when you're designing your api the later you can write the code with a",
    "start": "2965520",
    "end": "2970800"
  },
  {
    "text": "higher fidelity the better outcome you're likely to have with less friction so versioning it's a technique for",
    "start": "2970800",
    "end": "2977200"
  },
  {
    "text": "managing braking changes never a requirement you can do that for any of the api styles",
    "start": "2977200",
    "end": "2982720"
  },
  {
    "text": "that you can support but again prefer graceful evolution if possible but it requires both the client and the server",
    "start": "2982720",
    "end": "2989520"
  },
  {
    "text": "to adopt those robustness patterns absolutely not a substitute for",
    "start": "2989520",
    "end": "2994880"
  },
  {
    "text": "communication users and it doesn't protect your users from depending on implicit behavior non-functional requirements",
    "start": "2994880",
    "end": "3003040"
  },
  {
    "text": "the final one we'll look at is domain modeling is purely a risk concern that's absolutely not",
    "start": "3003359",
    "end": "3009599"
  },
  {
    "text": "the case we have to embrace software architects and design and understand their domains irrespective of the apis that",
    "start": "3009599",
    "end": "3017119"
  },
  {
    "text": "or the styles that we use and we should always start with the users from the bible right backwards so",
    "start": "3017119",
    "end": "3022720"
  },
  {
    "text": "what's the experience we need to provide and then how might we go about designing them so again the contract is a great way to",
    "start": "3022720",
    "end": "3029520"
  },
  {
    "text": "be able to do this rapidly and while both grpc",
    "start": "3029520",
    "end": "3035359"
  },
  {
    "text": "and and rest start with an outside-in approach graphql changes this a little bit whereby we build",
    "start": "3035359",
    "end": "3041440"
  },
  {
    "text": "a graph and then which depicts all the data that can be queried and then the client projects its queries",
    "start": "3041440",
    "end": "3049040"
  },
  {
    "text": "onto a certain portion of that overall graph so the side effect of this is graphql actually allows you",
    "start": "3049040",
    "end": "3056000"
  },
  {
    "text": "to delay the last responsible moment for what the optimal queries are until the",
    "start": "3056000",
    "end": "3061359"
  },
  {
    "text": "users start using your system so you don't have to iron out exactly what endpoints they will have because",
    "start": "3061359",
    "end": "3067200"
  },
  {
    "text": "they can define the shape of their own data the trade-off with that is again",
    "start": "3067200",
    "end": "3072800"
  },
  {
    "text": "performance tuning gets pushed to the right in the process so api designs",
    "start": "3072800",
    "end": "3080079"
  },
  {
    "text": "so api design skills absolutely table stakes irrespective of the style you have to understand your problem",
    "start": "3080079",
    "end": "3085920"
  },
  {
    "text": "today both rest and grpc follow an outside design so start it with the experience",
    "start": "3085920",
    "end": "3091280"
  },
  {
    "text": "to find your end points to find your operations in the case of grpc and then work backwards",
    "start": "3091280",
    "end": "3097680"
  },
  {
    "text": "and graphql delays this moment until profiling queries so if you have a domain you don't have a",
    "start": "3097680",
    "end": "3103680"
  },
  {
    "text": "great understanding of potentially multiple clients that need very different data rather than creating bespoke bffs or",
    "start": "3103680",
    "end": "3110319"
  },
  {
    "text": "different endpoints for each client graphql allows you to support that in a fairly elegant manner",
    "start": "3110319",
    "end": "3116240"
  },
  {
    "text": "albeit just that in my experience the cost of some of the the greater operational",
    "start": "3116240",
    "end": "3122839"
  },
  {
    "text": "overheads so with those conversations understood let's actually look at some sample",
    "start": "3122839",
    "end": "3128000"
  },
  {
    "text": "scenarios in the final four seven options that we have together and look where i would be looking to apply",
    "start": "3128000",
    "end": "3135599"
  },
  {
    "text": "one of these styles and the tendons i will always have as i mentioned before start with the properties and then work",
    "start": "3135599",
    "end": "3142480"
  },
  {
    "text": "backwards to the constraints and one of those things always keeping simplicity in mind so what's the",
    "start": "3142480",
    "end": "3148160"
  },
  {
    "text": "simplest approach that you could take to solve this problem rather than a technology approach trying",
    "start": "3148160",
    "end": "3153599"
  },
  {
    "text": "to pick the problem so if you're just building a basic application web form",
    "start": "3153599",
    "end": "3159200"
  },
  {
    "text": "maybe just a single client that web page we use all the data and all we're doing is posting it to the server",
    "start": "3159200",
    "end": "3164720"
  },
  {
    "text": "there is no value at all in using anything more complicated than just a simple",
    "start": "3164720",
    "end": "3169839"
  },
  {
    "text": "http post keep it simple don't don't say but i might need more",
    "start": "3169839",
    "end": "3175520"
  },
  {
    "text": "functionality in future that's fine it's very easy to change it but keep your legs game as simple as",
    "start": "3175520",
    "end": "3181359"
  },
  {
    "text": "possible both you and maybe the person who supports the code base after you will be",
    "start": "3181359",
    "end": "3186880"
  },
  {
    "text": "thankful of that in the long run where graphql does absolutely shine is",
    "start": "3186880",
    "end": "3192319"
  },
  {
    "text": "that that composite api level so maybe you have a suite of apis existing within your company",
    "start": "3192319",
    "end": "3198559"
  },
  {
    "text": "and maybe the many different technologies and many different clients requiring different data",
    "start": "3198559",
    "end": "3204160"
  },
  {
    "text": "and maybe there's multiple round trips to the server and performance is an issue very much the same challenge that",
    "start": "3204160",
    "end": "3210400"
  },
  {
    "text": "facebook were facing when they were creating graphql then graphql does give",
    "start": "3210400",
    "end": "3215920"
  },
  {
    "text": "you a second chance to build the api you wish you had built original but it only gives you one chance that",
    "start": "3215920",
    "end": "3222800"
  },
  {
    "text": "can then act as a facade to those downstream services but it does not absolve you from really",
    "start": "3222800",
    "end": "3229119"
  },
  {
    "text": "understanding what those data needs are but graphql is absolutely agnostic",
    "start": "3229119",
    "end": "3234480"
  },
  {
    "text": "of the underlying data source it could be another service it could be a database it could be files it could be",
    "start": "3234480",
    "end": "3239760"
  },
  {
    "text": "another web service but it does provide an incredibly powerful common interface into data whether that",
    "start": "3239760",
    "end": "3247119"
  },
  {
    "text": "data exists on the client on the server you want to interact with a speed a real time or a request responsibility",
    "start": "3247119",
    "end": "3255599"
  },
  {
    "text": "type style so having that single interface into data particularly when you have multiple different types of clients can",
    "start": "3255599",
    "end": "3262319"
  },
  {
    "text": "be very powerful something i've been using quite a quite",
    "start": "3262319",
    "end": "3267760"
  },
  {
    "text": "a bit with my teams as well as is the sort of the bff style",
    "start": "3267760",
    "end": "3272800"
  },
  {
    "text": "for from mobile apps so instead of having manny d normal many responses go back to the",
    "start": "3272800",
    "end": "3279119"
  },
  {
    "text": "client and having to stitch all that data together really use a bff so back ends for front-end pattern to",
    "start": "3279119",
    "end": "3285280"
  },
  {
    "text": "extend the application boundary to the api as well and grpc can really shine",
    "start": "3285280",
    "end": "3291280"
  },
  {
    "text": "in this area because what you can then have is a single technology that can support all",
    "start": "3291280",
    "end": "3297520"
  },
  {
    "text": "of the apis that you have so you can have incredibly powerful code generation for protocol files to find and then code",
    "start": "3297520",
    "end": "3304640"
  },
  {
    "text": "in any number of modern languages and having a very simple way of then",
    "start": "3304640",
    "end": "3309839"
  },
  {
    "text": "testing consistently across your entire landscape so we've seen that with certain clients",
    "start": "3309839",
    "end": "3315520"
  },
  {
    "text": "that then simplify their architectures a lot by being able to choose one style and really optimize their teams for",
    "start": "3315520",
    "end": "3321760"
  },
  {
    "text": "how to build and release those apis and again grpc is great when you have",
    "start": "3321760",
    "end": "3329520"
  },
  {
    "text": "highly i would say temporary coupled apis specifically microservices that all need",
    "start": "3329520",
    "end": "3335280"
  },
  {
    "text": "to exchange data in a real-time basis and grpc again is perfect for that",
    "start": "3335280",
    "end": "3340960"
  },
  {
    "text": "but there's certain scenarios which we can support so for instance grpc cannot be used natively",
    "start": "3340960",
    "end": "3348960"
  },
  {
    "text": "in a web browser we simply do not have access to the low level frames in a browser",
    "start": "3348960",
    "end": "3355440"
  },
  {
    "text": "that's required for http 2. likewise we can't support",
    "start": "3355440",
    "end": "3362000"
  },
  {
    "text": "grpc hosted on asp.net app services and we don't have access to some of the",
    "start": "3362000",
    "end": "3367280"
  },
  {
    "text": "trading headers that we need so even though we can support htv too there's certain aspects of that protocol",
    "start": "3367280",
    "end": "3373599"
  },
  {
    "text": "that are supported so again what the industry have done in this area have come up with a companion",
    "start": "3373599",
    "end": "3379599"
  },
  {
    "text": "protocol grpc way and that's effectively a way of doing",
    "start": "3379599",
    "end": "3384640"
  },
  {
    "text": "grpc over http1.x in a compatible way but if we're going",
    "start": "3384640",
    "end": "3391119"
  },
  {
    "text": "that from a client you typically need a proxy that will then convert the http 1.x",
    "start": "3391119",
    "end": "3398400"
  },
  {
    "text": "traffic to 2.0 for your internal services and typically that would be envoy",
    "start": "3398400",
    "end": "3405359"
  },
  {
    "text": "is what i've used before so the the sidecar technology from istio which you",
    "start": "3405359",
    "end": "3410400"
  },
  {
    "text": "might be aware from it but there's also experimental technologies from",
    "start": "3410400",
    "end": "3415680"
  },
  {
    "text": "microsoft from james which allows you to run that on an app service without the need",
    "start": "3415680",
    "end": "3423200"
  },
  {
    "text": "for a separate proxy so again as i mentioned there is an",
    "start": "3423200",
    "end": "3429119"
  },
  {
    "text": "option there but it is experimental for now rather than a finished product but i do understand that microsoft",
    "start": "3429119",
    "end": "3434720"
  },
  {
    "text": "is intuitive so takeaways you would have seen that",
    "start": "3434720",
    "end": "3440640"
  },
  {
    "text": "there's many different api technologies and styles that have evolved over time while they appear very",
    "start": "3440640",
    "end": "3447920"
  },
  {
    "text": "different initially they actually come back to a number of core styles each which supports or are aligned to a",
    "start": "3447920",
    "end": "3456079"
  },
  {
    "text": "certain set of problems we then saw how you can start looking at the properties of your system then",
    "start": "3456079",
    "end": "3463920"
  },
  {
    "text": "working back to the constraints that would then help deliver those properties or characteristics",
    "start": "3463920",
    "end": "3470160"
  },
  {
    "text": "from there with that knowledge we can start to look at some of the conversations which are happening in the community and then be able to",
    "start": "3470160",
    "end": "3477280"
  },
  {
    "text": "look at those statements and then apply that constraint and property thinking to understand what's actually important",
    "start": "3477280",
    "end": "3484400"
  },
  {
    "text": "in your domain and then finally we looked at just a few",
    "start": "3484400",
    "end": "3490000"
  },
  {
    "text": "real world scenarios which hopefully got you thinking that maybe this is similar to something that i've been building",
    "start": "3490000",
    "end": "3495520"
  },
  {
    "text": "myself that will give you some guidance to be able to understand where you should start your journey",
    "start": "3495520",
    "end": "3500880"
  },
  {
    "text": "when you leave or get back to work from agency oswald so thank you so much for choosing my",
    "start": "3500880",
    "end": "3507040"
  },
  {
    "text": "talk this morning it's been an absolute pleasure to be able to share some of my experiences with you",
    "start": "3507040",
    "end": "3513119"
  },
  {
    "text": "if you're looking to um download any of the slides they are",
    "start": "3513119",
    "end": "3518960"
  },
  {
    "text": "available at this url once you download them you",
    "start": "3518960",
    "end": "3524079"
  },
  {
    "text": "will also gain access to all of the resources that i used in the creation of this talk as well",
    "start": "3524079",
    "end": "3531680"
  },
  {
    "text": "such that you'll be able to get that next level of detail as well so thank you so much for your",
    "start": "3531680",
    "end": "3537680"
  },
  {
    "text": "time and i hope you have a wonderful remainder of abc oslo thank you",
    "start": "3537680",
    "end": "3545838"
  },
  {
    "text": "you",
    "start": "3547920",
    "end": "3550000"
  }
]