[
  {
    "text": "good morning everyone a little early for me but that's okay no",
    "start": "1970",
    "end": "7710"
  },
  {
    "text": "that's not - about 10:20 that's not bad everyone enjoyed the party last night I did I found out had queso on my my",
    "start": "7710",
    "end": "14549"
  },
  {
    "text": "little badge so I wear it with honor now so my name is Jimmy you can find me on",
    "start": "14549",
    "end": "20760"
  },
  {
    "text": "twitter @ @j Bogart's all the slides and presentation materials pretty much anything I do is on github so you can",
    "start": "20760",
    "end": "27029"
  },
  {
    "text": "find that at github comm /j Bogart and I blog on Jimmy Bogart calm",
    "start": "27029",
    "end": "32369"
  },
  {
    "text": "I used to blog in another site Lowe's techies you can still find a lot of my post there and there's some other junk",
    "start": "32369",
    "end": "38340"
  },
  {
    "text": "about me for my day job I work at a consulting company out of Austin Texas called head spring and I usually for my",
    "start": "38340",
    "end": "45329"
  },
  {
    "text": "just my daily work I build systems for customers build custom systems for customers and a lot of what this talk is",
    "start": "45329",
    "end": "52739"
  },
  {
    "text": "about is an experience where that a customer I had in the last six months or so so we had a customer a manufacturing",
    "start": "52739",
    "end": "59550"
  },
  {
    "text": "customer which means of course there were an enterprise customer and they wanted to move to micro services like",
    "start": "59550",
    "end": "66060"
  },
  {
    "text": "you do right like everyone everyone is doing about doing microsomes that services now then you should just quit",
    "start": "66060",
    "end": "71070"
  },
  {
    "text": "right that's what everyone's going to so part of moving to moving to micro",
    "start": "71070",
    "end": "78810"
  },
  {
    "text": "services was they had a they had a new partner they had acquired who's",
    "start": "78810",
    "end": "85740"
  },
  {
    "text": "manufacturing model was completely different than what they were doing today so they looked at their existing system and said how can we incorporate",
    "start": "85740",
    "end": "92070"
  },
  {
    "text": "this different kind of manufacturing into this existing system well they couldn't so this said ok we'll build a",
    "start": "92070",
    "end": "97829"
  },
  {
    "text": "little system to the side that will integrate somewhat what caught a micro service because why the hell not I don't",
    "start": "97829",
    "end": "103500"
  },
  {
    "text": "agree with the existing system now the DBAs got a got a hole got got",
    "start": "103500",
    "end": "110520"
  },
  {
    "text": "our heard about this and said what are you doing we can't put that other manufacturing system the side has to go",
    "start": "110520",
    "end": "116579"
  },
  {
    "text": "into this this centralized database for everything is supposed to be so long story short they cut out the DBAs from",
    "start": "116579",
    "end": "123450"
  },
  {
    "text": "the entire conversation and just said right we're going to build this on top of MongoDB because again micro services",
    "start": "123450",
    "end": "129959"
  },
  {
    "text": " to be you have to do them together they just go together well as time progressed they realized that",
    "start": "129959",
    "end": "136640"
  },
  {
    "text": "they needed to get the they needed to get some of the more advanced features out of MongoDB and then they went to the",
    "start": "136640",
    "end": "142880"
  },
  {
    "text": "website to see okay looks like those aren't included out of the box in the free version how much does the Enterprise version cost well it turns",
    "start": "142880",
    "end": "149420"
  },
  {
    "text": "out the Enterprise version of MongoDB is actually more expensive than the Enterprise version of sequel server so",
    "start": "149420",
    "end": "154670"
  },
  {
    "text": "they said oh we've put ourselves into a bind here that we have this suit we we needed these more advanced features and",
    "start": "154670",
    "end": "160670"
  },
  {
    "text": "it's really expensive what do we do well they wind up doing is saving money by actually going to Azure cosmos TV so",
    "start": "160670",
    "end": "167390"
  },
  {
    "text": "what is Azure cosmos TV now I'm trying to keep some of the marketing fluff out",
    "start": "167390",
    "end": "172730"
  },
  {
    "text": "of here but there are some specific things in Azure cosmos to me that set it apart from other kinds of no sequel",
    "start": "172730",
    "end": "178130"
  },
  {
    "text": "databases so as your cosmos DB is a globally distributed that's important if",
    "start": "178130",
    "end": "183320"
  },
  {
    "text": "you need that kind of scale multi-model database service so the idea is that I'm",
    "start": "183320",
    "end": "189320"
  },
  {
    "text": "not just having some kind of document database I'm running locally and then I need to put it in the cloud it's that I have some kind of system application it",
    "start": "189320",
    "end": "195740"
  },
  {
    "text": "needs to have global reach across the entire world and so for this manufacturing company they didn't need",
    "start": "195740",
    "end": "201140"
  },
  {
    "text": "that because they had things like inventory and orders they were managed in a global a global ERP system and they",
    "start": "201140",
    "end": "208220"
  },
  {
    "text": "need to be able to communicate with that and so they had all of their different orders flowing through all their",
    "start": "208220",
    "end": "213290"
  },
  {
    "text": "different manufacturing facilities worldwide and so they needed this kind of global reach and global scale now the",
    "start": "213290",
    "end": "218840"
  },
  {
    "text": "second interesting part is the multi model part and this is the part of the kind of it's kind of weird at first",
    "start": "218840",
    "end": "225050"
  },
  {
    "text": "because I don't really think of a database as having different models and different querying capabilities but the",
    "start": "225050",
    "end": "230840"
  },
  {
    "text": "way that either cosmos DB is engineered it allows it to support different kinds",
    "start": "230840",
    "end": "235970"
  },
  {
    "text": "of models and different kind of data structures and different kind of querying api's on top of it so there are",
    "start": "235970",
    "end": "242090"
  },
  {
    "text": "five ones they have today and they say there there are more to come now one",
    "start": "242090",
    "end": "247160"
  },
  {
    "text": "thing I should caveat here is that you have to pick this up front you can't mix models you can't do something like a",
    "start": "247160",
    "end": "252290"
  },
  {
    "text": "graph database and a document database together when you're creating a new resource in Azure you do have to pick this up front so just pick the right one",
    "start": "252290",
    "end": "260060"
  },
  {
    "text": "I guess know what you're creating I haven't seen this to be a problem in actual practice but it is something to keep in mind",
    "start": "260060",
    "end": "265460"
  },
  {
    "text": "so the models they do support one of the first ones a kind of interesting one its sequel over JSON so I have Jason",
    "start": "265460",
    "end": "273280"
  },
  {
    "text": "structures actually stored in the database but I can query it with a sequel syntax so this could be good in",
    "start": "273280",
    "end": "279070"
  },
  {
    "text": "those cases where you don't want to use a different kind of completely different API and you have developers that are",
    "start": "279070",
    "end": "284680"
  },
  {
    "text": "familiar with sequel then they would be familiar with this kind of query capability so we're seeing example this here in a second the second one is",
    "start": "284680",
    "end": "291490"
  },
  {
    "text": "documents so this is kind of your traditional oh jiggle oh we're back so",
    "start": "291490",
    "end": "301870"
  },
  {
    "text": "this is your just document database to",
    "start": "301870",
    "end": "307660"
  },
  {
    "text": "be your just traditional like no sequel database that you're kind of probably familiar with with the document database",
    "start": "307660",
    "end": "313630"
  },
  {
    "text": "though one of the things they did was instead of inventing their own API and their own querying language for it and",
    "start": "313630",
    "end": "319450"
  },
  {
    "text": "instead they said okay what's the most popular document database out there  okay so what if we just implement",
    "start": "319450",
    "end": "325990"
  },
  {
    "text": "the API and protocol on top of our document database instead of inventing a",
    "start": "325990",
    "end": "331240"
  },
  {
    "text": "completely new one and so that's what they have here's the model is the document structure inside the database",
    "start": "331240",
    "end": "337419"
  },
  {
    "text": "and then the querying capabilities and the interaction capabilities are through a specific kind of API in this case",
    "start": "337419",
    "end": "342669"
  },
  {
    "text": "MongoDB so what that means is that I can actually use any kind of client to",
    "start": "342669",
    "end": "349030"
  },
  {
    "text": "connect to cosmos DB and it just works most of the time almost all the time",
    "start": "349030",
    "end": "354970"
  },
  {
    "text": "there are some things that aren't supported for some of these API is that doesn't support every single possible",
    "start": "354970",
    "end": "360430"
  },
  {
    "text": "operation so that's something to look at but what was really nice for our client is they were using MongoDB through their",
    "start": "360430",
    "end": "367210"
  },
  {
    "text": "own hosted instance and said we want to move to the cloud and so they literally just changed some connection properties and the application just started working",
    "start": "367210",
    "end": "373900"
  },
  {
    "text": "now with all their data in the cloud now this is not actually database MongoDB hosts in the cloud it is Azure",
    "start": "373900",
    "end": "381550"
  },
  {
    "text": "cosmos DBS special data structures and fail out and I'll failover and",
    "start": "381550",
    "end": "387550"
  },
  {
    "text": "replication structures behind the scenes so they're not just hosting MongoDB for you what they're doing is providing an",
    "start": "387550",
    "end": "393220"
  },
  {
    "text": "API to connect to it to and query with and MongoDB they also support columnar",
    "start": "393220",
    "end": "399419"
  },
  {
    "text": "through the cassandra api tables which was a little weird for me as well so those of you that are using agile teaser",
    "start": "399419",
    "end": "405150"
  },
  {
    "text": "table storage which is anyone using that i've met like one person that's ever touched as your table storage and so",
    "start": "405150",
    "end": "412530"
  },
  {
    "text": "what that allows you to do is instead of having your Azure tables Azure table storage stored and as your table storage",
    "start": "412530",
    "end": "418979"
  },
  {
    "text": "instead those tables can be stored inside of Azure cosmos DB and now inside",
    "start": "418979",
    "end": "424080"
  },
  {
    "text": "of Azure cosmos DB you get the global scale that that provides which isn't provided inside of your table storage",
    "start": "424080",
    "end": "429719"
  },
  {
    "text": "itself and again all you have to do is point your connection to Azure cosmos to be instead of the other thing and it'll",
    "start": "429719",
    "end": "435599"
  },
  {
    "text": "just start working and finally it also supports graph models so instead of just",
    "start": "435599",
    "end": "441780"
  },
  {
    "text": "individual documents that are separate from each other we injures to the concept of connections between individual nodes and we can again query",
    "start": "441780",
    "end": "448169"
  },
  {
    "text": "this using the most popular way of querying graph api's which is a an interesting query language called",
    "start": "448169",
    "end": "454110"
  },
  {
    "text": "gremlin this is the one I had actually the most trouble with we try to move our",
    "start": "454110",
    "end": "459300"
  },
  {
    "text": "own hosted graph that was inside an old machine inside a shirt which is like the most expensive stupid thing to do is to",
    "start": "459300",
    "end": "465900"
  },
  {
    "text": "do VMs and Azure we tried to move our neo4j instance into this but it turns out that we were using a lot of advanced",
    "start": "465900",
    "end": "473129"
  },
  {
    "text": "query capabilities that aren't yet supported so that the gremlin one what you'll see is some of these query api's",
    "start": "473129",
    "end": "478919"
  },
  {
    "text": "they have a subset of the chorong api's that are actually actually exists out there so you do have to carefully",
    "start": "478919",
    "end": "485159"
  },
  {
    "text": "consider what kind of querying capabilities you need before just jumping straight in and say right we're just absolutely going to do this now a",
    "start": "485159",
    "end": "492569"
  },
  {
    "text": "cosmos TB actually started out as a j''r document DB so as your document DB was this document database in the cloud it",
    "start": "492569",
    "end": "500310"
  },
  {
    "text": "was built on top of a lot of the pieces that Azure cosmos to be had and then as those extra pieces and Azure cosmos TV",
    "start": "500310",
    "end": "506339"
  },
  {
    "text": "which wasn't released yet became more more feature-rich than Azure document DB just got folded",
    "start": "506339",
    "end": "512880"
  },
  {
    "text": "into cosmos DB as just one of the Aquarian models available for you now",
    "start": "512880",
    "end": "520320"
  },
  {
    "text": "one of the big questions I get about cosmos TV is why should I use it should I just use it because I'm",
    "start": "520320",
    "end": "525480"
  },
  {
    "text": "interested in doing some kind of no sequel in the cloud well maybe but when",
    "start": "525480",
    "end": "530819"
  },
  {
    "text": "it comes to the capabilities of Cosmos TV especially with its scale it is priced accordingly",
    "start": "530819",
    "end": "537450"
  },
  {
    "text": "so you may you may start off using an simpler version or a more free version and some other hosting model and then as",
    "start": "537450",
    "end": "544230"
  },
  {
    "text": "you need some more scale than to go to Azure cosmos TV now one of the most interesting things about it of course is",
    "start": "544230",
    "end": "550260"
  },
  {
    "text": "its rich modeling capabilities you don't have to just do document database you don't have to just do one of these",
    "start": "550260",
    "end": "556230"
  },
  {
    "text": "models instead you can pick and choose what model is appropriate for you now again this is scoped to the database so",
    "start": "556230",
    "end": "562290"
  },
  {
    "text": "you have to pick up front like which model makes sense for you but again in general I don't really find people get",
    "start": "562290",
    "end": "567480"
  },
  {
    "text": "confused about what kind of database they need but it is nice that they have the the major ones support out there",
    "start": "567480",
    "end": "572820"
  },
  {
    "text": "whether it's key value document database colander or graph and they're adding more so the graph one for example is new",
    "start": "572820",
    "end": "579930"
  },
  {
    "text": "in the last six months all built on top of the internal structures of azure cause magic cosmos TV the other major",
    "start": "579930",
    "end": "588450"
  },
  {
    "text": "reason you want to use it is its global scale so some of the announcements even this week at build expanded its scale",
    "start": "588450",
    "end": "596130"
  },
  {
    "text": "capabilities so if you need applications that do truly need global scale then you",
    "start": "596130",
    "end": "602220"
  },
  {
    "text": "would start to look at some kind of no sequel solution because those are the kinds of databases that can provide this sort of global reach so as your cosmos",
    "start": "602220",
    "end": "609300"
  },
  {
    "text": "to be was built for those applications in mind so when you go to the website and it says like what are the kind of",
    "start": "609300",
    "end": "614490"
  },
  {
    "text": "use cases you'll see they'll talk about things like mobile applications manufacturing systems where I have this",
    "start": "614490",
    "end": "619590"
  },
  {
    "text": "kind of global global reach anything that needs to reach on a global scale is something you should start looking at as",
    "start": "619590",
    "end": "625350"
  },
  {
    "text": "your cosmos DB as a potential solution now there are a lot of existing",
    "start": "625350",
    "end": "630600"
  },
  {
    "text": "solutions out there for these kinds of models and so yes you can use any of",
    "start": "630600",
    "end": "636270"
  },
  {
    "text": "these existing solutions what we ran into though is that when we picked one of these solutions out of the box",
    "start": "636270",
    "end": "642300"
  },
  {
    "text": "we were now wholly responsible for the server that's hosting these this",
    "start": "642300",
    "end": "647700"
  },
  {
    "text": "software and a lot of the software is best run on Linux and most of my customers have no idea how to manage",
    "start": "647700",
    "end": "656160"
  },
  {
    "text": "Linux servers like they know how to use a macbook right and run bash commands but it's something completely different",
    "start": "656160",
    "end": "661800"
  },
  {
    "text": "to run Linux servers at scale so they just didn't want to have to",
    "start": "661800",
    "end": "667900"
  },
  {
    "text": "maintain their own servers and their own systems and have to learn how to manage",
    "start": "667900",
    "end": "673510"
  },
  {
    "text": "these solutions they just wanted to have the capabilities that these databases provided but not have to carry all the",
    "start": "673510",
    "end": "679480"
  },
  {
    "text": "burden of hosting these so cosmos DB provides this platform as a service offering that says you can still have",
    "start": "679480",
    "end": "685840"
  },
  {
    "text": "these kinds of databases but now we will take care of all the hosting and management and then you just get this",
    "start": "685840",
    "end": "691480"
  },
  {
    "text": "nice lovely API to call to talk to now for for those of you that already have",
    "start": "691480",
    "end": "698500"
  },
  {
    "text": "existing systems and existing databases it turns out you can already do some kinds of no sequel in those databases so",
    "start": "698500",
    "end": "706930"
  },
  {
    "text": "you can do and actually for the last ten years you can do kind of schema list",
    "start": "706930",
    "end": "711970"
  },
  {
    "text": "systems inside a data sequence erver so for example you can have XML columns",
    "start": "711970",
    "end": "718770"
  },
  {
    "text": "right that's a thing you can put XML inside a sequel server and query off of",
    "start": "718770",
    "end": "723910"
  },
  {
    "text": "that you can also output things as XML so yeah we've had no sequel in sequel server for a long time right you just",
    "start": "723910",
    "end": "730210"
  },
  {
    "text": "have it as XML well I don't think anyone I've never really met anyone that's actually done this other than some",
    "start": "730210",
    "end": "735850"
  },
  {
    "text": "people that decided to directly connect store procedures to web soap web services and they could just output the",
    "start": "735850",
    "end": "741700"
  },
  {
    "text": "XML directly but for most of my customers they've never touched anything like this now some new features inside a",
    "start": "741700",
    "end": "748960"
  },
  {
    "text": "sequel server starting with 2014 I think are probably 2012 are the ability to directly store",
    "start": "748960",
    "end": "755860"
  },
  {
    "text": "JSON objects inside of the database so for these it has a kind of funny syntax so you had this kind of weird looking",
    "start": "755860",
    "end": "761890"
  },
  {
    "text": "Jason values and jason or is json methods here but i can use use json",
    "start": "761890",
    "end": "770710"
  },
  {
    "text": "queries to be able to look for individual values inside a single column that is storing a JSON blob so instead",
    "start": "770710",
    "end": "778120"
  },
  {
    "text": "of what I used to do would be to serialize JSON and stored in a like a byte array or something like that it's",
    "start": "778120",
    "end": "783580"
  },
  {
    "text": "like sequel server but you can't query that and so now sequel server exposes",
    "start": "783580",
    "end": "788890"
  },
  {
    "text": "directly the ability to store JSON as values inside the database and it's first-class querying and selection",
    "start": "788890",
    "end": "795220"
  },
  {
    "text": "capabilities out of there so if you have an existing system and you need some kind of some things",
    "start": "795220",
    "end": "801430"
  },
  {
    "text": "that are scheme ulis I would look at these kind of things first because it's much easier just to use whatever you have already and then to introduce",
    "start": "801430",
    "end": "807820"
  },
  {
    "text": "something that now is going to have to involve procurements because we have to ask procurements for the money to be able to purchase and deploy as your",
    "start": "807820",
    "end": "816160"
  },
  {
    "text": "cosmos TV so that's something I would look at first is can we just get away with storing things inside of our own",
    "start": "816160",
    "end": "821350"
  },
  {
    "text": "database before we start looking outside and going to something more something more complicated now for scale a sequel",
    "start": "821350",
    "end": "831190"
  },
  {
    "text": "server does support the idea of failover clusters so if a single single the",
    "start": "831190",
    "end": "836529"
  },
  {
    "text": "master or the primary goes down then it could failover to a secondary and the more expensive versions of sequel server",
    "start": "836529",
    "end": "842709"
  },
  {
    "text": "support the idea of an cluster failover machines so that if a primary goes down",
    "start": "842709",
    "end": "847810"
  },
  {
    "text": "and then another machine goes down there are multiple ones that it could fail over - this is like super expensive",
    "start": "847810",
    "end": "853600"
  },
  {
    "text": "though it's like the most expensive checkbox and the installer no it's a man like you",
    "start": "853600",
    "end": "858910"
  },
  {
    "text": "check the box for the sequel server always on it's like you better have your wallet open because the Microsoft",
    "start": "858910",
    "end": "865240"
  },
  {
    "text": "licensing P will be right at your door ready to charge you for this sort of stuff so you do get this failover capabilities but the other thing we run",
    "start": "865240",
    "end": "872050"
  },
  {
    "text": "into is that these replicas have to be very close to that original instance which somewhat defeats the purpose of",
    "start": "872050",
    "end": "877899"
  },
  {
    "text": "having global scale if all of the machines have to be very close to each other what I want is to not have to",
    "start": "877899",
    "end": "883000"
  },
  {
    "text": "worry about a single server going down or RAC going down or potentially a whole server farm going down or entire",
    "start": "883000",
    "end": "889420"
  },
  {
    "text": "location going down I can still have my application up and running especially for mission-critical applications or",
    "start": "889420",
    "end": "894459"
  },
  {
    "text": "ones that do have to reach that global scale now they have relaxed the licensing somewhat on this so if you do",
    "start": "894459",
    "end": "900790"
  },
  {
    "text": "need this always-on capability it now is supporting the standard version so it's still expensive but not so so expensive",
    "start": "900790",
    "end": "907750"
  },
  {
    "text": "but we want something that can failover to multiple machines that's again only the enterprise version which again you",
    "start": "907750",
    "end": "913660"
  },
  {
    "text": "have to have your wallet out to be able to pay for that kind of thing so with",
    "start": "913660",
    "end": "919509"
  },
  {
    "text": "our group when we moved from going from sequel to MongoDB and eventually to",
    "start": "919509",
    "end": "925810"
  },
  {
    "text": "Azure cosmos DB we had a lot of we had a lot of bumps in the road to be able to",
    "start": "925810",
    "end": "930970"
  },
  {
    "text": "make that transition now in transitioning from sequel we were able to effectively cut out the DBAs",
    "start": "930970",
    "end": "937660"
  },
  {
    "text": "from the conversation that did come to bite us later on when we needed actually report out of the system and found out",
    "start": "937660",
    "end": "943149"
  },
  {
    "text": "that MongoDB charges for reporting oops probably should have looked at early on but sequel is modeled very differently",
    "start": "943149",
    "end": "951519"
  },
  {
    "text": "from any kind of no sequel offerings so in a typical modeling session we have we",
    "start": "951519",
    "end": "956949"
  },
  {
    "text": "start to look at the the major nouns in the system say these going to be the tables so in this case gonna have like a",
    "start": "956949",
    "end": "962320"
  },
  {
    "text": "product table and then I look to see what that thing is related to so it's going to be related to in this case I",
    "start": "962320",
    "end": "968680"
  },
  {
    "text": "have categories so it's can be related to categories some model information descriptions for translations off",
    "start": "968680",
    "end": "974860"
  },
  {
    "text": "cultures things like that and one of the nice things about this model is that it's a very flexible query model I can",
    "start": "974860",
    "end": "981040"
  },
  {
    "text": "start at the product level I can go out to one direction I can start from a category level and start to pull in other products so it provides a very",
    "start": "981040",
    "end": "987420"
  },
  {
    "text": "flexible way of querying over my data that's both a good thing and a bad thing especially those of you that have used",
    "start": "987420",
    "end": "993130"
  },
  {
    "text": "RMS and then also I've used RMS in the presence of a database administrator and then they see the sequel that's being",
    "start": "993130",
    "end": "999370"
  },
  {
    "text": "generated and they come in yellow angry things take away your ORM and then only give you stored procedures from their",
    "start": "999370",
    "end": "1004380"
  },
  {
    "text": "announced so while this provides a lot of flexibility it also comes with a lot",
    "start": "1004380",
    "end": "1010920"
  },
  {
    "text": "of responsibility to really understand what you're doing behind the scenes the other thing that we found with this sort",
    "start": "1010920",
    "end": "1016440"
  },
  {
    "text": "of model is doesn't really enforce a lot of constraints that we were wanting to so we wanted to make sure for example",
    "start": "1016440",
    "end": "1022290"
  },
  {
    "text": "that when you add an order and a line item that the the line items total",
    "start": "1022290",
    "end": "1028140"
  },
  {
    "text": "always bubbles up to the order so you can do that pretty easily in code but it's difficult to model that kind of",
    "start": "1028140",
    "end": "1033839"
  },
  {
    "text": "relationship inside of a database really little thing like triggers and stuff like that what I'm just looking at it",
    "start": "1033839",
    "end": "1038880"
  },
  {
    "text": "there's nothing telling me that those kind of constraints are in place it's just kind of a big mess of tables and then you have to figure out like what is",
    "start": "1038880",
    "end": "1044880"
  },
  {
    "text": "the right direction for me to start traveling in these different relationships here so in a no sequel",
    "start": "1044880",
    "end": "1052500"
  },
  {
    "text": "scenario we model things now much differently instead of having things that we can join to we have to make sure",
    "start": "1052500",
    "end": "1058440"
  },
  {
    "text": "that all the information that we're interested in has to be stored inside of that one document but inside that",
    "start": "1058440",
    "end": "1064140"
  },
  {
    "text": "document we have now a much richer data structure that we can work with so",
    "start": "1064140",
    "end": "1069269"
  },
  {
    "text": "in this case I've got an example of an order stored as a JSON document inside a sequel server or inside of a inside of",
    "start": "1069269",
    "end": "1076919"
  },
  {
    "text": "Cosmos t-beam now if I was modeling an order typically I would have an order table and then I'd probably have a",
    "start": "1076919",
    "end": "1083399"
  },
  {
    "text": "customer table to link to to say this customer is this customer purchased this",
    "start": "1083399",
    "end": "1089129"
  },
  {
    "text": "order that way if the customer has multiple orders I only have one customer in the database instead of that",
    "start": "1089129",
    "end": "1094259"
  },
  {
    "text": "duplicated throughout my orders and if I have line items in my order of course I'll have another line items table so I",
    "start": "1094259",
    "end": "1100350"
  },
  {
    "text": "will have the line item plus the product ID of the product they're purchasing and",
    "start": "1100350",
    "end": "1105389"
  },
  {
    "text": "so in order to get the full view of a single order I'd have to query like in this case let's see the order table the",
    "start": "1105389",
    "end": "1111570"
  },
  {
    "text": "customer table the line items table the product table at least four tables that",
    "start": "1111570",
    "end": "1117269"
  },
  {
    "text": "have to join together to be able to get this view now most systems that I work but that's that's a that's on the way",
    "start": "1117269",
    "end": "1123929"
  },
  {
    "text": "low end of joins that have to do to be able to show some information on screen typically I see queries with like 8 9 10",
    "start": "1123929",
    "end": "1130019"
  },
  {
    "text": "joints to be able to get the information and be able to view on the screen now for a lot of sequel server instances",
    "start": "1130019",
    "end": "1135119"
  },
  {
    "text": "that's not that terrible you can always just throw more money and at the server to make it beefier and beefier but for",
    "start": "1135119",
    "end": "1140759"
  },
  {
    "text": "this one when everything is on that single record I only have to make one connection make one query it never turns",
    "start": "1140759",
    "end": "1146220"
  },
  {
    "text": "out one single result and not to connect to anything else inside the database so that entire model is stored in one",
    "start": "1146220",
    "end": "1153690"
  },
  {
    "text": "single record inside the database I don't have to go out and pull in a lot of other pieces of information everything's stored inside of it now",
    "start": "1153690",
    "end": "1161159"
  },
  {
    "text": "because it's JSON jason supports complex structures like having a customer object with child property so I can go order",
    "start": "1161159",
    "end": "1168299"
  },
  {
    "text": "that customer that first-name ordered a customer last name I don't have to first denormalize that to store it into a flat",
    "start": "1168299",
    "end": "1174450"
  },
  {
    "text": "table so if I try to store this in one record and sequel server I would have like a customer first name and a customer last name if I want it to be at",
    "start": "1174450",
    "end": "1181379"
  },
  {
    "text": "to be on one single row I can also have arrays inside of my object as well for",
    "start": "1181379",
    "end": "1188639"
  },
  {
    "text": "these one-to-many scenarios and again I don't have to do a join to be able to get this information everything is",
    "start": "1188639",
    "end": "1193740"
  },
  {
    "text": "pulled back when I pull back this one record I don't have to go out and pull out other records from other places",
    "start": "1193740",
    "end": "1200350"
  },
  {
    "text": "if I need to connect to other places for some other reason I can still store the",
    "start": "1200350",
    "end": "1207169"
  },
  {
    "text": "keys as just individual data values inside of my document so in this case",
    "start": "1207169",
    "end": "1212690"
  },
  {
    "text": "I'm storing the Product ID for the products for this individual line items just directly inside of my record here",
    "start": "1212690",
    "end": "1218690"
  },
  {
    "text": "and then if I want to go pull out that Product ID I'll pull up the product related to this I can't do that inside",
    "start": "1218690",
    "end": "1226070"
  },
  {
    "text": "of this database I'd have to make additional calls to be able to get those individual records so this something to",
    "start": "1226070",
    "end": "1231679"
  },
  {
    "text": "keep in mind is that when I'm designing these kinds of data structures I'm designing this so that I only need to make that one call to get all the",
    "start": "1231679",
    "end": "1238190"
  },
  {
    "text": "information I need and if I do to make other calls that I understand that there's a penalty for that I have to",
    "start": "1238190",
    "end": "1244100"
  },
  {
    "text": "make additional calls to get those additional pieces of information so no joints inside of here whatsoever there",
    "start": "1244100",
    "end": "1250909"
  },
  {
    "text": "are projection capabilities but you can't join two documents together that's just not how it's designed so you have",
    "start": "1250909",
    "end": "1256760"
  },
  {
    "text": "to build everything inside of this one record so you have to really understand",
    "start": "1256760",
    "end": "1262630"
  },
  {
    "text": "what you're designing what you're building to make sure that this document is designed correctly this is one of the",
    "start": "1262630",
    "end": "1268760"
  },
  {
    "text": "big things that we ran into in our first first foray into document databases we",
    "start": "1268760",
    "end": "1274789"
  },
  {
    "text": "designed a lot of them incorrectly at first and it was difficult for us to migrate those data structures to new data structures over time because it's",
    "start": "1274789",
    "end": "1281870"
  },
  {
    "text": "schema-less this it could be difficult to say well what what is all what are",
    "start": "1281870",
    "end": "1287299"
  },
  {
    "text": "although the bad records in my system that have the incorrect kind of data structures and what are all the good ones well that's not that easy to do yet",
    "start": "1287299",
    "end": "1294020"
  },
  {
    "text": "to literally query over all this are the items in the system so something to keep in mind the schema list doesn't mean",
    "start": "1294020",
    "end": "1299270"
  },
  {
    "text": "there's no schema in your system the schema exists it's in your application not in the database so something we",
    "start": "1299270",
    "end": "1306710"
  },
  {
    "text": "found out the hard way now there are cases that we do want to duplicate some",
    "start": "1306710",
    "end": "1311990"
  },
  {
    "text": "of that data so in this case I don't want to have to go back to the product",
    "start": "1311990",
    "end": "1317500"
  },
  {
    "text": "the product database to be able to get this information just to show the order on the screen so there were cases we",
    "start": "1317500",
    "end": "1323150"
  },
  {
    "text": "really looked at immutable data that is like data that doesn't change over time instead of us needing to go back to the",
    "start": "1323150",
    "end": "1329659"
  },
  {
    "text": "original systems if that data is only all once then we found I was okay for us to",
    "start": "1329659",
    "end": "1335620"
  },
  {
    "text": "go ahead and include that information in our document I'll be super careful about this because you really have to understand if that other information",
    "start": "1335620",
    "end": "1341980"
  },
  {
    "text": "changes do I need to have it updated here and if it does need to be updated here then that's when you would never",
    "start": "1341980",
    "end": "1347560"
  },
  {
    "text": "want to do this if you have to have the data updated in both places then just don't don't do this kind of",
    "start": "1347560",
    "end": "1352720"
  },
  {
    "text": "thing but for something like product information where we saw that that data is really just written once and never",
    "start": "1352720",
    "end": "1357730"
  },
  {
    "text": "changed again then it was okay for us to like cache it locally inside of her document here and that way we don't have",
    "start": "1357730",
    "end": "1364210"
  },
  {
    "text": "to go back to the product catalog system which was still a sequel server database so the other thing we've noticed is that",
    "start": "1364210",
    "end": "1371560"
  },
  {
    "text": "just because I am copying the data does not mean it's actually duplicating the data over time we'll have an example of",
    "start": "1371560",
    "end": "1378430"
  },
  {
    "text": "this so I worked at an ecommerce system for a while and the overall ecommerce",
    "start": "1378430",
    "end": "1383680"
  },
  {
    "text": "value stream if you will was you go online you shop for some items and we call this the catalog when you want to",
    "start": "1383680",
    "end": "1390190"
  },
  {
    "text": "purchase an item you put the item into your cart so you say Add to Cart so",
    "start": "1390190",
    "end": "1396070"
  },
  {
    "text": "something like a product price we'd start out with okay I see the product price as $24.99 and they add an either",
    "start": "1396070",
    "end": "1401920"
  },
  {
    "text": "add the item to my cart and now it shows up my make heart as $24.99 when I hit checkout I now go to an order",
    "start": "1401920",
    "end": "1409240"
  },
  {
    "text": "screen and I see again that price there $24.99 and my order price and then finally what it gets down to fulfillment",
    "start": "1409240",
    "end": "1415660"
  },
  {
    "text": "and billing they'll see that same price again to know how much to charge me eventually now what happens in this scenario when",
    "start": "1415660",
    "end": "1422650"
  },
  {
    "text": "the product price changes all the way up in the catalog side does that mean we",
    "start": "1422650",
    "end": "1429370"
  },
  {
    "text": "need to change the prices for every single system that had that product price as part of it did these other",
    "start": "1429370",
    "end": "1435550"
  },
  {
    "text": "systems actually have to go back to the catalog to get product pricing for every step along the way well no they don't do",
    "start": "1435550",
    "end": "1441700"
  },
  {
    "text": "that in fact you think probably think it'd be really weird or in honestly infuriating if I'm sitting in my cart",
    "start": "1441700",
    "end": "1447820"
  },
  {
    "text": "and the product price changes and the price changes in my carts that's probably something you not but you don't",
    "start": "1447820",
    "end": "1453910"
  },
  {
    "text": "want to have happen to your customers so in this case even though the data was copied from location to location that",
    "start": "1453910",
    "end": "1461470"
  },
  {
    "text": "didn't mean that admit the same thing over time so when data moves between service bound",
    "start": "1461470",
    "end": "1467529"
  },
  {
    "text": "and when it crosses that service boundary sometimes its meaning can change and so in this case the price we",
    "start": "1467529",
    "end": "1473679"
  },
  {
    "text": "had along every step of the way was not product price anymore we had a catalogue price we had a cart",
    "start": "1473679",
    "end": "1480370"
  },
  {
    "text": "price we had an order price and then finally we had the billing price or the fulfillment price so this was the amount",
    "start": "1480370",
    "end": "1486490"
  },
  {
    "text": "we actually charge the customer because then any step along the way if I want a reason about the price at that point in",
    "start": "1486490",
    "end": "1491919"
  },
  {
    "text": "time I don't care about what the catalog says today I care about it what the price was or is in this step of the",
    "start": "1491919",
    "end": "1498399"
  },
  {
    "text": "process so in this case even though we were copying the data it didn't mean the same",
    "start": "1498399",
    "end": "1503710"
  },
  {
    "text": "thing anymore it didn't mean the product price anymore it was the cart price the order price or the fulfillment price",
    "start": "1503710",
    "end": "1510010"
  },
  {
    "text": "didn't mean the same thing now I did have a customer that didn't like this",
    "start": "1510010",
    "end": "1516250"
  },
  {
    "text": "they saw this as duplicate data and they said we have to we can't have been duplicated data to the system that's the",
    "start": "1516250",
    "end": "1521679"
  },
  {
    "text": "bane of our existence is duplicate data so what we'll do is normalize everything",
    "start": "1521679",
    "end": "1526919"
  },
  {
    "text": "to some other in normal form because there there are normal forms passed third normal form by the way you didn't",
    "start": "1526919",
    "end": "1532630"
  },
  {
    "text": "even had the privilege of stealing those kind of databases so how do I get the",
    "start": "1532630",
    "end": "1538000"
  },
  {
    "text": "price then and my order if the product price can change and the way they try to solve that was to put active dates on",
    "start": "1538000",
    "end": "1544149"
  },
  {
    "text": "all these fields to say price as of this specific date so when I joined from my",
    "start": "1544149",
    "end": "1549309"
  },
  {
    "text": "order back to the catalog to get the product price because we can't duplicate it I had to pass in the order date to",
    "start": "1549309",
    "end": "1555429"
  },
  {
    "text": "know what the price should be as of that point in time two months ago or I could",
    "start": "1555429",
    "end": "1561399"
  },
  {
    "text": "just copy the price from location location realize that it's actually changing its meaning it's no longer the",
    "start": "1561399",
    "end": "1566559"
  },
  {
    "text": "product price it's something else and then everyone is happy well except for that one DBA but you learn to learn",
    "start": "1566559",
    "end": "1574450"
  },
  {
    "text": "to live with it one of the thing we found with with sequel databases is they",
    "start": "1574450",
    "end": "1581919"
  },
  {
    "text": "do support this concept of relationships so in this case I've got relationships",
    "start": "1581919",
    "end": "1587169"
  },
  {
    "text": "between product and product photo and product model on product subcategory and unit measure but if I want to get",
    "start": "1587169",
    "end": "1593649"
  },
  {
    "text": "information about those relationships that's really difficult to do so in this case I have links between these things",
    "start": "1593649",
    "end": "1600220"
  },
  {
    "text": "but I have any information about those links so in more complex scenarios where I",
    "start": "1600220",
    "end": "1606159"
  },
  {
    "text": "want to include information about the relationships that's when sequel starts to break down and I especially see this when I have a",
    "start": "1606159",
    "end": "1612789"
  },
  {
    "text": "graph of things and I want to relate them to each other you can do those in the sequel server there's things like",
    "start": "1612789",
    "end": "1618100"
  },
  {
    "text": "common table expressions does anyone like canoe me do that at the top of their head buyers will have a little",
    "start": "1618100",
    "end": "1626080"
  },
  {
    "text": "quiz after class we'll see if that's actually true so you can do kind of recursive joins and funny joins to build",
    "start": "1626080",
    "end": "1632590"
  },
  {
    "text": "graphs of things but it's does it doesn't come back to the graph and you want to query those relationships it's pretty difficult inside a sequel server",
    "start": "1632590",
    "end": "1638860"
  },
  {
    "text": "so you wind up creating tables to represent those relationships and now your joints become really weird and ugly",
    "start": "1638860",
    "end": "1645070"
  },
  {
    "text": "and you start to have lots of weird cardinality and lots more rows of return because it can't really represent the",
    "start": "1645070",
    "end": "1651600"
  },
  {
    "text": "different nodes versus different edges very well inside this one single kind of structure so you see these kinds of",
    "start": "1651600",
    "end": "1659590"
  },
  {
    "text": "relationships a lot and things like social media apps right you have Facebook or LinkedIn that says who",
    "start": "1659590",
    "end": "1665620"
  },
  {
    "text": "you're connected to who you're friends with and then you have information that could be then stored along with that relationship as well so if I want to",
    "start": "1665620",
    "end": "1672009"
  },
  {
    "text": "query those relationships like if we go to LinkedIn and you search somebody and it says like you're three steps away from that person that's best answered",
    "start": "1672009",
    "end": "1678340"
  },
  {
    "text": "with a graph database as opposed to a sequel database yeah so I don't build a",
    "start": "1678340",
    "end": "1689769"
  },
  {
    "text": "lot of social media apps personally I try not to use them except for things like beer check-in apps things like that",
    "start": "1689769",
    "end": "1696629"
  },
  {
    "text": "but what I do do a lot is track history of things and probably the best example",
    "start": "1696629",
    "end": "1702580"
  },
  {
    "text": "I have to be able to track history and make these connections is amazon.com and if you go to amazon.com website just",
    "start": "1702580",
    "end": "1709960"
  },
  {
    "text": "look at any kind of product page to start to scroll down you can start to see the other kinds of information they can be pulled out by having connections",
    "start": "1709960",
    "end": "1717490"
  },
  {
    "text": "between different things for example things like frequently bought together so I'm looking at this one this is the",
    "start": "1717490",
    "end": "1724389"
  },
  {
    "text": "the amplify which I highly recommend as a really awesome home networking device",
    "start": "1724389",
    "end": "1731430"
  },
  {
    "text": "and it told me that when someone buys this thing people frequently buy this other thing now try to imagine how you",
    "start": "1731430",
    "end": "1739410"
  },
  {
    "text": "would answer that question inside a sequel server that is you have orders and line items and you have to go",
    "start": "1739410",
    "end": "1745110"
  },
  {
    "text": "traverse like all the okay go find all the line items and then go find all related items but then then then do a",
    "start": "1745110",
    "end": "1752520"
  },
  {
    "text": "weightings it says make sure I count how many times these different items are purchased together and roll those up and find me the top one that is going to be",
    "start": "1752520",
    "end": "1759690"
  },
  {
    "text": "shown here like you can probably write that query but it's not going to return very quickly so a Garth database who is",
    "start": "1759690",
    "end": "1766620"
  },
  {
    "text": "connecting orders and line items and saying when someone buys this product they also buy this other product and",
    "start": "1766620",
    "end": "1772500"
  },
  {
    "text": "then start to include like how many times people bought these products together then it's a very easy query to return back from a graph database I can",
    "start": "1772500",
    "end": "1779850"
  },
  {
    "text": "even track behaviors for customers who are just going through the going through the website so instead of orders in the",
    "start": "1779850",
    "end": "1785820"
  },
  {
    "text": "system things like if I'm looking at this item who else looked at it like what other stuff are people looking at so as you",
    "start": "1785820",
    "end": "1793230"
  },
  {
    "text": "look at things inside of Amazon it's I don't think it's tracking in the browser because that's wrong right attraction on",
    "start": "1793230",
    "end": "1801179"
  },
  {
    "text": "the server and on the server it's keeping track of what your overall history is and says ok you looked at",
    "start": "1801179",
    "end": "1807300"
  },
  {
    "text": "this item you looked at this item you looked at this item and then aggregates for one item what are they all the other stuff that people looked at and said",
    "start": "1807300",
    "end": "1813600"
  },
  {
    "text": "here are the top things that people have looked at who also looked at whatever you're looking at right now so I use",
    "start": "1813600",
    "end": "1819030"
  },
  {
    "text": "this quite frequently to say okay I'm looking for this this product but there's a lot of competing products I",
    "start": "1819030",
    "end": "1824040"
  },
  {
    "text": "don't really know which one's the right one but this will tell me what are some other related products and also can tell me the price and reviews so I can see",
    "start": "1824040",
    "end": "1830190"
  },
  {
    "text": "that hey oh this other one is actually reviewed much better by a lot more people so maybe I should go look at that one",
    "start": "1830190",
    "end": "1835230"
  },
  {
    "text": "instead again I you can do this kind of query in sequel server but it is very",
    "start": "1835230",
    "end": "1840240"
  },
  {
    "text": "very difficult and expensive and then finally have something like customers who bought this item also bought so the",
    "start": "1840240",
    "end": "1846150"
  },
  {
    "text": "first one was frequently bought together so that is in a single purchase what do people typically buy that together this",
    "start": "1846150",
    "end": "1853050"
  },
  {
    "text": "one is looking at order history it says when people buy this item what are their orders do those customers have and what",
    "start": "1853050",
    "end": "1859830"
  },
  {
    "text": "commonality do those different orders from those different customers have so this case we have customers who bought",
    "start": "1859830",
    "end": "1865130"
  },
  {
    "text": "thing also would go on to buy this old switch I guess I find that highly",
    "start": "1865130",
    "end": "1870380"
  },
  {
    "text": "dubious maybe they started with a switch and like ooh that's I don't want one of those things I want to I want to just",
    "start": "1870380",
    "end": "1875810"
  },
  {
    "text": "Wi-Fi so let me do that but again trying to try to do this inside a relational database it's just a",
    "start": "1875810",
    "end": "1881180"
  },
  {
    "text": "very difficult thing to do so as you get these like really weird marketing questions about hey can we can we can",
    "start": "1881180",
    "end": "1888440"
  },
  {
    "text": "run a query to do this you're like okay we can do it once but that's it if we want to do this every time someone looks",
    "start": "1888440",
    "end": "1894110"
  },
  {
    "text": "at something on a screen then we have to build something special to be able to take care of this so these kind of queries just absolutely blow up the",
    "start": "1894110",
    "end": "1899870"
  },
  {
    "text": "overall sequel model and you wind up having to go to other more rich models",
    "start": "1899870",
    "end": "1904880"
  },
  {
    "text": "with the graph database now this is when",
    "start": "1904880",
    "end": "1909890"
  },
  {
    "text": "I'm when my my customer realized that sequel wasn't gonna work for them and started to move toward graph databases",
    "start": "1909890",
    "end": "1916210"
  },
  {
    "text": "this is probably the biggest transition that they had because the query capabilities inside a graph databases",
    "start": "1916210",
    "end": "1921980"
  },
  {
    "text": "are way way different than anything else I've ever used it uses a special language called gremlin to be able to",
    "start": "1921980",
    "end": "1928250"
  },
  {
    "text": "execute graph queries and gremlin is a language written in groovy which is a",
    "start": "1928250",
    "end": "1934400"
  },
  {
    "text": "was the actual programming language not a right and so in this kind of graph",
    "start": "1934400",
    "end": "1943400"
  },
  {
    "text": "database I don't just have individual records by themselves I don't have just the individual record that has all the",
    "start": "1943400",
    "end": "1949070"
  },
  {
    "text": "data I don't I don't have to have just that instead I start to connect those different nodes together so in this case",
    "start": "1949070",
    "end": "1955100"
  },
  {
    "text": "they've got different people with different connections and those connections can also have names so instead of just saying like this is",
    "start": "1955100",
    "end": "1961190"
  },
  {
    "text": "related to that well how is it related what is that relationship there so in this case I get things like Marco knows",
    "start": "1961190",
    "end": "1967280"
  },
  {
    "text": "Josh or created IOP Java something and",
    "start": "1967280",
    "end": "1974780"
  },
  {
    "text": "Peter also created that as well so I can have different nodes with different kinds of relationships and then also have values and attributes on those",
    "start": "1974780",
    "end": "1981680"
  },
  {
    "text": "relationships as well so as I traverse the graph I don't have to just follow connections I can also look for",
    "start": "1981680",
    "end": "1987050"
  },
  {
    "text": "connections with certain values and certain distinctions and certain types to be able to figure out how these things are related to each other and the",
    "start": "1987050",
    "end": "1996650"
  },
  {
    "text": "final thing that we ran into another somewhat difficult transition was transitioning from transactions in",
    "start": "1996650",
    "end": "2004039"
  },
  {
    "text": "sequel to transactions in no sequel transactions in no sequel for a lot of",
    "start": "2004039",
    "end": "2010850"
  },
  {
    "text": "no sequel databases it's it's more kind of a like optional sort of thing that people do like oh yeah we kind of do",
    "start": "2010850",
    "end": "2016639"
  },
  {
    "text": "transactions somewhat but they really don't really do that many transactions but transactions and sequels start with",
    "start": "2016639",
    "end": "2023090"
  },
  {
    "text": "start with this write acid which is atomic consistent interesting and",
    "start": "2023090",
    "end": "2034450"
  },
  {
    "text": "durable I have something I forget and it all comes back from a series of papers written like 35 years ago or so so in an",
    "start": "2034450",
    "end": "2043580"
  },
  {
    "text": "acid database and a one that supports these kind of transactions you can do things like this you can begin a",
    "start": "2043580",
    "end": "2049040"
  },
  {
    "text": "transaction you can do multiple sets of operations and then you can either commit or rollback that operation when",
    "start": "2049040",
    "end": "2055940"
  },
  {
    "text": "you commit that operation either all of the changes go or none of the changes go and the idea haim behind the deep heart",
    "start": "2055940",
    "end": "2062868"
  },
  {
    "text": "and acid says that if partial changes happen it'll roll back the other changes",
    "start": "2062869",
    "end": "2068419"
  },
  {
    "text": "as well so something happens like in between here it'll roll back those intermediate changes and finally you can",
    "start": "2068419",
    "end": "2073550"
  },
  {
    "text": "actually roll back the entire transaction as well to say undo all of these changes so what do you typically",
    "start": "2073550",
    "end": "2079878"
  },
  {
    "text": "do when you start to look at okay this is no sequel database I want to use it does this thing support transactions",
    "start": "2079879",
    "end": "2085179"
  },
  {
    "text": "that actually this comes up on the FAQ for Azure cosmos DB says does a source",
    "start": "2085179",
    "end": "2090200"
  },
  {
    "text": "port transaction yes it does with JavaScript store procedures and triggers",
    "start": "2090200",
    "end": "2096220"
  },
  {
    "text": "combining my three favorite things javascript and stored procedures and javascript triggers",
    "start": "2096220",
    "end": "2103060"
  },
  {
    "text": "that's one of those legs you just tell me to go F myself now the reason why",
    "start": "2103060",
    "end": "2109069"
  },
  {
    "text": "they do this of course is that the data structures inside of Cosmos DB are json",
    "start": "2109069",
    "end": "2115130"
  },
  {
    "text": "documents so that's JavaScript so why not use the language of the data structures as the",
    "start": "2115130",
    "end": "2122030"
  },
  {
    "text": "language to do these procedures and then finally why do store procedures for actual transactions that if I want to",
    "start": "2122030",
    "end": "2128230"
  },
  {
    "text": "modify multiple records at the same time well I need a that code executed as close to the data",
    "start": "2128230",
    "end": "2134840"
  },
  {
    "text": "as possible and the only way you can do that is to put that code in the database via a stored procedure now I won't show",
    "start": "2134840",
    "end": "2141740"
  },
  {
    "text": "you one of these things because I can't put them on the screen they're so big about how to do these kind of stored procedures but they do exist we we",
    "start": "2141740",
    "end": "2149480"
  },
  {
    "text": "looked at them and saw how difficult they were going to be to use and then we",
    "start": "2149480",
    "end": "2156770"
  },
  {
    "text": "also knew that if we had anything called a store procedure someone in the DBA land would be listening on our emails",
    "start": "2156770",
    "end": "2164210"
  },
  {
    "text": "put their head up and say ooh now I can help to write stored procedures for every single point of data access so we",
    "start": "2164210",
    "end": "2169550"
  },
  {
    "text": "don't want to do that we said okay yes this is possible for us but we want to treat this as a last resort so what can",
    "start": "2169550",
    "end": "2176240"
  },
  {
    "text": "we do otherwise so one of the problems of doing a transaction between two",
    "start": "2176240",
    "end": "2182210"
  },
  {
    "text": "different records is I don't know if those two different records are necessarily on the same machine anymore",
    "start": "2182210",
    "end": "2187490"
  },
  {
    "text": "and something like cosmos would be I don't care where that individual document is stored if document a is on this machine and",
    "start": "2187490",
    "end": "2194180"
  },
  {
    "text": "document B is on that machine I don't care at all because I'm not only querying one document at a time but now",
    "start": "2194180",
    "end": "2200240"
  },
  {
    "text": "if I wanted to do a transaction between those two different documents now I need to coordinate those two activities and I",
    "start": "2200240",
    "end": "2206330"
  },
  {
    "text": "could do that be a store procedure that's executed like a highly coordinated activity or I could start to",
    "start": "2206330",
    "end": "2212060"
  },
  {
    "text": "look at what does it mean to not do these kinds of transactions and this kind of transaction where I'm having to",
    "start": "2212060",
    "end": "2217430"
  },
  {
    "text": "deal with two different two different operations are also known as distributed transactions because I'm transacting",
    "start": "2217430",
    "end": "2223370"
  },
  {
    "text": "between two different records on two different machines so there's this great paper by a fellow Pat Helland who",
    "start": "2223370",
    "end": "2230810"
  },
  {
    "text": "basically he was on the sequel server team and he actually built the distributed transaction stuff inside of",
    "start": "2230810",
    "end": "2237320"
  },
  {
    "text": "sequel server and then he had this epiphany when he moved to either Amazon or was it Salesforce or he's like oh you",
    "start": "2237320",
    "end": "2243890"
  },
  {
    "text": "can't do this at these cloud scale operations because I can't put the entire world in transaction so what",
    "start": "2243890",
    "end": "2249200"
  },
  {
    "text": "would it mean to move away from these sort of things well I only had these individual records I can deal with how do I coordinate activities between these",
    "start": "2249200",
    "end": "2255200"
  },
  {
    "text": "two different records well his brilliant idea was to use some kind of messaging to transact between these two pieces so",
    "start": "2255200",
    "end": "2261710"
  },
  {
    "text": "the idea is that I have a transaction between these two entities instead of trying to mutate both at once i mutate",
    "start": "2261710",
    "end": "2268210"
  },
  {
    "text": "the primary one and store inside of it a message it says i also want to mutate this other one over there so that way",
    "start": "2268210",
    "end": "2274510"
  },
  {
    "text": "the right only happens with that sending entity at one point in time and then later on when i message finally gets",
    "start": "2274510",
    "end": "2281020"
  },
  {
    "text": "delivered to the receiving entity then finally i can go ahead and perform the operation in that second one now there",
    "start": "2281020",
    "end": "2288790"
  },
  {
    "text": "are some problems here my transaction can only be around one single document at a time or one single entity so how do",
    "start": "2288790",
    "end": "2296559"
  },
  {
    "text": "I deal with like taking a message from one entity and giving it to the other well I have to now keep track of these",
    "start": "2296559",
    "end": "2303369"
  },
  {
    "text": "conversations between entities so as operations build up over time I keep",
    "start": "2303369",
    "end": "2310059"
  },
  {
    "text": "track of the things I've done with other people so I'm receiving messages storing",
    "start": "2310059",
    "end": "2315460"
  },
  {
    "text": "them and keeping track of them so that when I if I happen to receive the same message again then I could say oh I've",
    "start": "2315460",
    "end": "2320619"
  },
  {
    "text": "already done that nothing to do so each of these entities uses messaging but a",
    "start": "2320619",
    "end": "2328900"
  },
  {
    "text": "special kind of messaging in which the messages are stored actually inside the document itself and it uses internal",
    "start": "2328900",
    "end": "2335020"
  },
  {
    "text": "document messages to communicate to other things now when we looked at this we said that sounds awfully familiar",
    "start": "2335020",
    "end": "2340630"
  },
  {
    "text": "this idea that I have documents or aggregates needed to communicate to other documents or aggregates and if",
    "start": "2340630",
    "end": "2347140"
  },
  {
    "text": "you've been around domain-driven design much this actually is a first level concept inside that world and it's known",
    "start": "2347140",
    "end": "2352359"
  },
  {
    "text": "as domain of its domain events and what I can do here is I have a single a",
    "start": "2352359",
    "end": "2357670"
  },
  {
    "text": "single document in this case I have some order here and that order has all the attributes of the order so it's got the",
    "start": "2357670",
    "end": "2363460"
  },
  {
    "text": "first name the customer information the line items the price the total all that sort of stuff isn't inside of there but",
    "start": "2363460",
    "end": "2369160"
  },
  {
    "text": "if I need to communicate to any other entities instead of me doing that directly I'll keep track of that",
    "start": "2369160",
    "end": "2374740"
  },
  {
    "text": "communication with an inbox in an outbox an L boxes messages I want to give to",
    "start": "2374740",
    "end": "2380710"
  },
  {
    "text": "other entities so I would need to do something to suck that thing over there so I have a message on my outbox over there and the inbox are messages that",
    "start": "2380710",
    "end": "2387460"
  },
  {
    "text": "I've received and processed so I when I get a message that says I need to do",
    "start": "2387460",
    "end": "2394930"
  },
  {
    "text": "this thing then I look at my inbox and say have already done that thing they've already done that thing they say",
    "start": "2394930",
    "end": "2400690"
  },
  {
    "text": "nothing to do nothing to do if I haven't done that thing yet then I'll go ahead and perform whatever operation I need to",
    "start": "2400690",
    "end": "2406780"
  },
  {
    "text": "do I will add that message to my inbox and perform one save operation that writes my entire document and I'm done",
    "start": "2406780",
    "end": "2413290"
  },
  {
    "text": "now as I communicate to these external external records then I'll just delete",
    "start": "2413290",
    "end": "2419920"
  },
  {
    "text": "my records out of my outbox and we found this worked really well for the document database so the messages themselves",
    "start": "2419920",
    "end": "2427180"
  },
  {
    "text": "could just be other JSON objects and as long as I kept track of what the communication I had then it was really",
    "start": "2427180",
    "end": "2432850"
  },
  {
    "text": "pretty straightforward for me to interact with other aggregates without having to do something like a store",
    "start": "2432850",
    "end": "2438070"
  },
  {
    "text": "procedure inside of the database well I haven't found any kind of tools or",
    "start": "2438070",
    "end": "2444430"
  },
  {
    "text": "frameworks that do this kind of thing out of the box so to speak so we didn't have to write a lot of infrastructure code to be able to support this kind of",
    "start": "2444430",
    "end": "2450160"
  },
  {
    "text": "model but in the end we found it was worth it because I no longer had a care about oops some developer accidentally",
    "start": "2450160",
    "end": "2456820"
  },
  {
    "text": "tried to write to two documents and once what happens to the second document it just goes away oops so with this model we were able to",
    "start": "2456820",
    "end": "2464230"
  },
  {
    "text": "pretty easily interact with multiple documents at once and not have to worry about the transaction side-effects",
    "start": "2464230",
    "end": "2470790"
  },
  {
    "text": "speaking of transactions even the consistency models inside of Cosmos DB",
    "start": "2470790",
    "end": "2475900"
  },
  {
    "text": "are much different than sequel server so sequel server has these consistency models that basically protect your",
    "start": "2475900",
    "end": "2482110"
  },
  {
    "text": "information and most people don't actually use the highest level of transactions the serializable most",
    "start": "2482110",
    "end": "2487630"
  },
  {
    "text": "people use things like repeatable read or we committed snapshot is somewhat expensive so that's optimistic",
    "start": "2487630",
    "end": "2492790"
  },
  {
    "text": "concurrency support it inside a sequel server but it is have an expense associated with that in terms of resources so these people can get away",
    "start": "2492790",
    "end": "2499990"
  },
  {
    "text": "with repeatable reads so that I can I can read my own rights but I won't see",
    "start": "2499990",
    "end": "2505240"
  },
  {
    "text": "necessarily other people's rights yet until their transactions are done one of",
    "start": "2505240",
    "end": "2511000"
  },
  {
    "text": "the things we found is that most of the time our transactions aren't actually acid that is to the letter of what acid",
    "start": "2511000",
    "end": "2518050"
  },
  {
    "text": "is so this was a this was a report from",
    "start": "2518050",
    "end": "2523300"
  },
  {
    "text": "Peter Bela Bayliss who looked to see what are all the actual consistency models supported by the major relational",
    "start": "2523300",
    "end": "2529960"
  },
  {
    "text": "databases out there and one of the default ads and what we see is that actually most databases don't even support acid",
    "start": "2529960",
    "end": "2537250"
  },
  {
    "text": "transactions that is serializable transactions most have some lower version of it and then most as well",
    "start": "2537250",
    "end": "2545620"
  },
  {
    "text": "don't even have serializable as the default option because serializable is actually really expensive to do it can",
    "start": "2545620",
    "end": "2551350"
  },
  {
    "text": "block reads from that row so you want to be very very careful in doing these kind of operations so cosmos DB has a similar",
    "start": "2551350",
    "end": "2559270"
  },
  {
    "text": "kind of concept there's something that's more tuned for cloud scale operations so",
    "start": "2559270",
    "end": "2565000"
  },
  {
    "text": "they have a tunable consistency model that basically goes from strong from a strong consistency tonight.we",
    "start": "2565000",
    "end": "2571150"
  },
  {
    "text": "consistency but they call it eventual consistency and a strong consistency that means that I'm guaranteed to have",
    "start": "2571150",
    "end": "2577120"
  },
  {
    "text": "the most recent version of an item I never read any still items ever now for",
    "start": "2577120",
    "end": "2582430"
  },
  {
    "text": "systems that I'm always updating maybe that's something I really want to have like if there's some precious resource that everyone has to have the most",
    "start": "2582430",
    "end": "2588670"
  },
  {
    "text": "updated version that I can do that one typically people do something like a session based consistency level which",
    "start": "2588670",
    "end": "2595240"
  },
  {
    "text": "means I can read my own rights rights will follow a previous read and then",
    "start": "2595240",
    "end": "2601180"
  },
  {
    "text": "it's just like most normal operations that's pretty same default and so I",
    "start": "2601180",
    "end": "2606190"
  },
  {
    "text": "think like 80% of people use just session level consistency that just says for the context of this connection I",
    "start": "2606190",
    "end": "2612520"
  },
  {
    "text": "expect in that inside that connection that everything should be consistent for those communications now if there are",
    "start": "2612520",
    "end": "2618010"
  },
  {
    "text": "other connections and other sessions other people are doing they won't necessarily see what I'm doing but at least I can see what I'm doing and",
    "start": "2618010",
    "end": "2624640"
  },
  {
    "text": "that's what most people really want is to be able to see the work that they're doing and not really care about what other work other people are doing so I",
    "start": "2624640",
    "end": "2632950"
  },
  {
    "text": "want to switch over to a demo to show you some of the capabilities of your Cosmos DB so I'm gonna first just go",
    "start": "2632950",
    "end": "2642310"
  },
  {
    "text": "through just a little example of what it's like to actually create one of these resources inside of Azure cosmos DB and switch to do",
    "start": "2642310",
    "end": "2655190"
  },
  {
    "text": "it okay so I will go ahead and create a",
    "start": "2655190",
    "end": "2661550"
  },
  {
    "text": "new resource and this will be a cosmos TV one right there",
    "start": "2661550",
    "end": "2667930"
  },
  {
    "text": "and let's call it something good and this one I'll use the document db-api so",
    "start": "2667930",
    "end": "2674390"
  },
  {
    "text": "it's called and you see Minnesota 2018",
    "start": "2674390",
    "end": "2680170"
  },
  {
    "text": "mom go and the AP I'm going to choose again I have to pick something here so",
    "start": "2680170",
    "end": "2685520"
  },
  {
    "text": "I'm going to pick the MongoDB API I will use an existing resource group that way it's super easy to delete all these",
    "start": "2685520",
    "end": "2691520"
  },
  {
    "text": "expensive things when I'm done and then here's some other interesting checkboxes",
    "start": "2691520",
    "end": "2696740"
  },
  {
    "text": "you can do you can enable geo redundancy which means that my data will be stored",
    "start": "2696740",
    "end": "2703069"
  },
  {
    "text": "on multiple different regions across the globe and then finally down here this is this this is the thing that was",
    "start": "2703069",
    "end": "2709190"
  },
  {
    "text": "announced just recently at build like Monday or Tuesday is multi master that",
    "start": "2709190",
    "end": "2715069"
  },
  {
    "text": "is if the master node goes down the client doesn't know about it will automatically failover to another node",
    "start": "2715069",
    "end": "2721280"
  },
  {
    "text": "and I can start writing to that other node with it but the other one I can read from multiple nodes but I won't",
    "start": "2721280",
    "end": "2726800"
  },
  {
    "text": "necessarily be able to write to multiple ones and this one I can actually write to multiple nodes so when that one node",
    "start": "2726800",
    "end": "2732170"
  },
  {
    "text": "goes down it will automatically failover to another one there a lot of academic papers behind",
    "start": "2732170",
    "end": "2738170"
  },
  {
    "text": "the work behind how that happens behind the scenes so I'd encourage you to go to Microsoft's documentation on this",
    "start": "2738170",
    "end": "2745040"
  },
  {
    "text": "because it's really well done and really well written on how this actually happens but I'm gonna turn that off",
    "start": "2745040",
    "end": "2750230"
  },
  {
    "text": "because we're not gonna turn that on because this is another expensive checkbox that I want to check right now and this one it's a preview feature so",
    "start": "2750230",
    "end": "2756770"
  },
  {
    "text": "you actually have to say I would like this they don't have to turn on by default okay all right so while this is",
    "start": "2756770",
    "end": "2769609"
  },
  {
    "text": "going some of the other things that we found working with working with cosmos TV going from and then going to",
    "start": "2769609",
    "end": "2776359"
  },
  {
    "text": "cosmos TV is a lot of the client api's work just fine so for MongoDB for",
    "start": "2776359",
    "end": "2782089"
  },
  {
    "text": "example there are already existing dotnet client api's to be able to work with it and Luna the only difference for",
    "start": "2782089",
    "end": "2788089"
  },
  {
    "text": "us was a connection string to be able to say point from this to that other thing and we were good to go the problems we",
    "start": "2788089",
    "end": "2794359"
  },
  {
    "text": "did run into and we didn't run to a few problems is that MongoDB API does support the concept of updates inside of",
    "start": "2794359",
    "end": "2801349"
  },
  {
    "text": "a query so I can say do like a for each on these things and do this little",
    "start": "2801349",
    "end": "2806390"
  },
  {
    "text": "update for each of those so it has this atomic operation inside of the database so there's more advanced features of",
    "start": "2806390",
    "end": "2811400"
  },
  {
    "text": "these api's that are atomic write operations inside of the database I found that none of the API is really",
    "start": "2811400",
    "end": "2817220"
  },
  {
    "text": "support that they want you to use the client API to do that not a query API inside of the database it's just too",
    "start": "2817220",
    "end": "2823910"
  },
  {
    "text": "complicated so we did have to fix those to do that kind of work in code as",
    "start": "2823910",
    "end": "2830569"
  },
  {
    "text": "opposed to submitting a query inside of the server itself should have known in",
    "start": "2830569",
    "end": "2842780"
  },
  {
    "text": "Azure talk nothing was gonna have oh whoa it works okay this is",
    "start": "2842780",
    "end": "2850190"
  },
  {
    "text": "congratulations you did the thing so some of the interesting things we can do",
    "start": "2850190",
    "end": "2856520"
  },
  {
    "text": "as part of this is we can actually download some of these can actually let you download existing sample",
    "start": "2856520",
    "end": "2861859"
  },
  {
    "text": "applications to be able connect to it it'll give us a connection string so I would literally just copy this and put",
    "start": "2861859",
    "end": "2867170"
  },
  {
    "text": "in it to my clients connection string and I'm I'm good to go some of the other ones I found actually",
    "start": "2867170",
    "end": "2875480"
  },
  {
    "text": "give you nice quick starts so in this one for example let me go to the data",
    "start": "2875480",
    "end": "2884180"
  },
  {
    "text": "explorer they give you an ability to",
    "start": "2884180",
    "end": "2891890"
  },
  {
    "text": "actually query things directly inside of the azure console here so in this case",
    "start": "2891890",
    "end": "2899380"
  },
  {
    "text": "I'm executing and this this is yes I'm",
    "start": "2899800",
    "end": "2906050"
  },
  {
    "text": "just returning back all the items inside of my database here and so I've got an array of items that says here's this",
    "start": "2906050",
    "end": "2911510"
  },
  {
    "text": "product here's this other product and here's an a link between those two products here's another existing one I",
    "start": "2911510",
    "end": "2917210"
  },
  {
    "text": "had going on and this one executes as a gremlin query that really funny thing to be able to connect things together and so as I look at the",
    "start": "2917210",
    "end": "2925180"
  },
  {
    "text": "difference nodes and values inside of here I can see that over on the right",
    "start": "2925180",
    "end": "2931089"
  },
  {
    "text": "has here all the edges associated with it so I'm looking at bin and then it's",
    "start": "2931089",
    "end": "2936520"
  },
  {
    "text": "connected to robin via this nose target",
    "start": "2936520",
    "end": "2941559"
  },
  {
    "text": "so looks like Ben knows Robin okay to go to Robin then I should see the other",
    "start": "2941559",
    "end": "2948010"
  },
  {
    "text": "direction that I am the source of it that bin knows me it's really small so I",
    "start": "2948010",
    "end": "2954940"
  },
  {
    "text": "can zoom in nope that didn't do the desired thing so gives you a way to to",
    "start": "2954940",
    "end": "2964119"
  },
  {
    "text": "play able to play around with queries directly inside of the browser if you're going to load up some other kind of querying tool capability now all these",
    "start": "2964119",
    "end": "2971500"
  },
  {
    "text": "different kinds of databases do have kind of standard querying tools available for you so you can just like",
    "start": "2971500",
    "end": "2977230"
  },
  {
    "text": "this one for example there is a gremlin console you can go to connect to this and execute gremlin queries same with",
    "start": "2977230",
    "end": "2982480"
  },
  {
    "text": " you can go to the console for Cassandra there's their own console as well alright so I want to show an",
    "start": "2982480",
    "end": "2990280"
  },
  {
    "text": "actual example of me trying to build an application as well so in this case what I've done as I built a ecommerce",
    "start": "2990280",
    "end": "2996760"
  },
  {
    "text": "application to show the capabilities of the document database now this e-commerce application has two",
    "start": "2996760",
    "end": "3002579"
  },
  {
    "text": "parts one is the catalog to be able to browse the different items in the store let me go ahead and run this now the",
    "start": "3002579",
    "end": "3014670"
  },
  {
    "text": "catalog side I actually just pulled from adventure works you know that old demo database and Microsoft put out that show",
    "start": "3014670",
    "end": "3020790"
  },
  {
    "text": "you how to build relational databases I didn't feel like inventing my own with a bunch of dummy data so I just pulled theirs and this is what they have here",
    "start": "3020790",
    "end": "3027180"
  },
  {
    "text": "so up at the top I've got the list of product categories I can go click one and it shows me the list of",
    "start": "3027180",
    "end": "3033030"
  },
  {
    "text": "subcategories and then finally I can view the list of items I can add these individual items to the cart so you see",
    "start": "3033030",
    "end": "3039900"
  },
  {
    "text": "over I'm going to write it's filling up my carts I can oh I can also view one of these individual items and they also add",
    "start": "3039900",
    "end": "3045839"
  },
  {
    "text": "that item to my cart as well so looking at those different pieces are put together",
    "start": "3045839",
    "end": "3051290"
  },
  {
    "text": "I can go to my different products pages",
    "start": "3051290",
    "end": "3056710"
  },
  {
    "text": "the list of products is not that interesting but one thing you will notice here is that I have to actually",
    "start": "3056710",
    "end": "3063190"
  },
  {
    "text": "do this include because I'm the going from product category to product subcategory because I'm showing these",
    "start": "3063190",
    "end": "3069890"
  },
  {
    "text": "two items I have to do and include that will perform that join for me so that's not too bad",
    "start": "3069890",
    "end": "3075380"
  },
  {
    "text": "what about listing products well in this",
    "start": "3075380",
    "end": "3081080"
  },
  {
    "text": "one I'm starting from a subcategory and then showing product details to be able to add the product show the product information so in this case I'm going",
    "start": "3081080",
    "end": "3087470"
  },
  {
    "text": "product subcategory and then joining in the product information finding the one that's just that one single product subcategory again that's not too bad",
    "start": "3087470",
    "end": "3094280"
  },
  {
    "text": "right like just one two mini they're not too bad it's the show one where things",
    "start": "3094280",
    "end": "3099859"
  },
  {
    "text": "start to get kind of interesting I had to join multiple tables down so in this",
    "start": "3099859",
    "end": "3105020"
  },
  {
    "text": "case in order for me to show the description on the screen I have to get the product information then after joined to the product model and then to",
    "start": "3105020",
    "end": "3111980"
  },
  {
    "text": "the product model product description culture and then finally to the product description table to actually pull out",
    "start": "3111980",
    "end": "3117440"
  },
  {
    "text": "the product description for the culture that I'm looking at on the screen so one two three four joints to be able to show",
    "start": "3117440",
    "end": "3125410"
  },
  {
    "text": "this on the screen right there what you get it's like oh that's not too bad but",
    "start": "3125410",
    "end": "3132080"
  },
  {
    "text": "I'm just showing this one piece of information as this screen gets more complicated that's when I start to see the joins explode my system and again I",
    "start": "3132080",
    "end": "3139190"
  },
  {
    "text": "can keep throwing the money the money at that single server to make it good faster and faster but it does reach an",
    "start": "3139190",
    "end": "3145160"
  },
  {
    "text": "upper limit where this kind of this kind of approach doesn't work anymore so let's see how I did the actual ordering",
    "start": "3145160",
    "end": "3150830"
  },
  {
    "text": "part so let me go back to my cart I'm going to hit o my cart went away",
    "start": "3150830",
    "end": "3156710"
  },
  {
    "text": "I picked the in memory session and I think it just goes away after time okay",
    "start": "3156710",
    "end": "3164030"
  },
  {
    "text": "so I hit checkouts and now I'm looking at some order details so let's look to see what the checkout",
    "start": "3164030",
    "end": "3170089"
  },
  {
    "text": "actually did so in my cart controller when I actually perform the checkout so",
    "start": "3170089",
    "end": "3176570"
  },
  {
    "text": "we have right here so first what I'll do is get the cart information for me I could have stored this in something else",
    "start": "3176570",
    "end": "3182000"
  },
  {
    "text": "as your specific but I was lazy so I just stored inside of session state so it's just getting the cart out of session and then",
    "start": "3182000",
    "end": "3189349"
  },
  {
    "text": "from there I'm going to store that order inside of Azure cosmos TV but instead of",
    "start": "3189349",
    "end": "3194690"
  },
  {
    "text": "me storing an order with order line items and a separate customers all different things and instead I'm storing it as one single item one single",
    "start": "3194690",
    "end": "3202579"
  },
  {
    "text": "document one single record and so that right here is this order request the order request includes in this case this is just dummy customer",
    "start": "3202579",
    "end": "3209060"
  },
  {
    "text": "information whatever and then also include the light items now the light",
    "start": "3209060",
    "end": "3214670"
  },
  {
    "text": "items will copy over some of the information again the information it copies over is the information that",
    "start": "3214670",
    "end": "3219740"
  },
  {
    "text": "either doesn't change over time so it's it's immutable or it's it's data that",
    "start": "3219740",
    "end": "3226430"
  },
  {
    "text": "actually changes meaning as I go from one overall step to them to the next so",
    "start": "3226430",
    "end": "3231920"
  },
  {
    "text": "in this case I'm copying over the the product ID so if I ever want to get that original product information that's good",
    "start": "3231920",
    "end": "3237829"
  },
  {
    "text": "then I have the quantity from the cart of course I need that I'm I'm pulling over the list price because then I don't",
    "start": "3237829",
    "end": "3244310"
  },
  {
    "text": "want changes in the price affecting my order whatsoever and I'm also pulling over the product name just because",
    "start": "3244310",
    "end": "3250069"
  },
  {
    "text": "that's something that doesn't change so it's an easy thing to do then I will",
    "start": "3250069",
    "end": "3255740"
  },
  {
    "text": "call into Azure cosmos DB and I just have a kind of a simple wrapper on top of this this is using a repository pattern and that's implementation it's a",
    "start": "3255740",
    "end": "3266240"
  },
  {
    "text": "pretty straightforward call I use this create document async and then builds up",
    "start": "3266240",
    "end": "3271760"
  },
  {
    "text": "some information about exactly which database and collection to put this thing into and then finally the item",
    "start": "3271760",
    "end": "3277670"
  },
  {
    "text": "itself is just a dotnet object so that Dino object will be serialized into JSON",
    "start": "3277670",
    "end": "3284630"
  },
  {
    "text": "when it goes into the database so pretty much the in terms of what data",
    "start": "3284630",
    "end": "3290599"
  },
  {
    "text": "structures it supports just all the normal things that new and soft jason supports just don't get cute or clever",
    "start": "3290599",
    "end": "3296480"
  },
  {
    "text": "just keep things simple and then everything will work out okay okay so at",
    "start": "3296480",
    "end": "3301880"
  },
  {
    "text": "this point my my order is inside of cosmos TV but notice there is no like",
    "start": "3301880",
    "end": "3308060"
  },
  {
    "text": "begin transaction begin session a commit transaction once I make that call right there my order is inside cosmos TV",
    "start": "3308060",
    "end": "3317930"
  },
  {
    "text": "so from that points I need to go ahead and clear the items in my carts put that",
    "start": "3317930",
    "end": "3323730"
  },
  {
    "text": "empty cart back into session and then finally I'll go ahead and redirect to",
    "start": "3323730",
    "end": "3328800"
  },
  {
    "text": "the show order page for that order that just came back this documents came back",
    "start": "3328800",
    "end": "3334200"
  },
  {
    "text": "with that ID so I can say redirect to that order with that specific ID now",
    "start": "3334200",
    "end": "3339570"
  },
  {
    "text": "when I go look at my order inside of Cosmos TV they can see what it created",
    "start": "3339570",
    "end": "3350360"
  },
  {
    "text": "that was in the right place where is mine there's data Explorer okay so",
    "start": "3356510",
    "end": "3362460"
  },
  {
    "text": "here's my collection or the database of order requests and then from there how",
    "start": "3362460",
    "end": "3368160"
  },
  {
    "text": "the collection of items so a database can have multiple collections you can kind of think of minutes tables I don't",
    "start": "3368160",
    "end": "3373170"
  },
  {
    "text": "want to store or just everything inside of one collection because I can't reason about it so in this case I just had order requests as a top-level database",
    "start": "3373170",
    "end": "3379470"
  },
  {
    "text": "and the order request items as just that one collection I have as part of that then I want to see all the orders that",
    "start": "3379470",
    "end": "3389520"
  },
  {
    "text": "exist right here it's turning back for results I have four existing orders and this one that I just did was a total of",
    "start": "3389520",
    "end": "3400050"
  },
  {
    "text": "three three 99.99 so oh that's this one right here and it said I purchased one",
    "start": "3400050",
    "end": "3407730"
  },
  {
    "text": "single mountain bike with this Product ID with the quantity of 1 and of course everything's stored as at single array",
    "start": "3407730",
    "end": "3414030"
  },
  {
    "text": "of items and my custom formation again is a more complex structure so I can have customer that first name customer",
    "start": "3414030",
    "end": "3419280"
  },
  {
    "text": "that last name and then finally there's some other junk that's internal database stuff they don't really need to worry",
    "start": "3419280",
    "end": "3425670"
  },
  {
    "text": "about so you can't name things those so if you really wanted to name property underscore self you can't I don't know",
    "start": "3425670",
    "end": "3432690"
  },
  {
    "text": "if you would want to do that but there are some reserve properties that we have there so one thing I should note here is",
    "start": "3432690",
    "end": "3440070"
  },
  {
    "text": "that I actually picked the sequel version of the API so up here is a sequel query so I can do something like",
    "start": "3440070",
    "end": "3445710"
  },
  {
    "text": "select star from C where C dots let's see status equals",
    "start": "3445710",
    "end": "3452780"
  },
  {
    "text": "zero-zero this tell me it returns three different orders I can look for the",
    "start": "3452780",
    "end": "3459510"
  },
  {
    "text": "status of two which means it's been approved and I only see one order being returned so back in my application I can",
    "start": "3459510",
    "end": "3467460"
  },
  {
    "text": "actually approve the order so let me go ahead and click approve and now you can see yep the status went from new to approved and",
    "start": "3467460",
    "end": "3476430"
  },
  {
    "text": "if I rerun my query I'll see that's yeah",
    "start": "3476430",
    "end": "3483510"
  },
  {
    "text": "and now I have two orders approved and down here is my second approved order right there now we're turning this item",
    "start": "3483510",
    "end": "3491430"
  },
  {
    "text": "back in the screen for showing the actual order I have over in the order",
    "start": "3491430",
    "end": "3498080"
  },
  {
    "text": "show order page here I'm using the same document database document DB repository",
    "start": "3498080",
    "end": "3505530"
  },
  {
    "text": "and then when it returns the item it just does get item and DC realizes that",
    "start": "3505530",
    "end": "3511260"
  },
  {
    "text": "that item from JSON into the strongly typed order request objects and now I",
    "start": "3511260",
    "end": "3517050"
  },
  {
    "text": "have this much richer or to request object to deal with so I've got all the line items the status the total the",
    "start": "3517050",
    "end": "3523440"
  },
  {
    "text": "customer information I can now show that on the screen so if you want to include that information I can do order or dots",
    "start": "3523440",
    "end": "3531650"
  },
  {
    "text": "customer that first name so it's still strongly typed",
    "start": "3531650",
    "end": "3538369"
  },
  {
    "text": "with schema-less so I have some object that does represents what is going to be",
    "start": "3544990",
    "end": "3550340"
  },
  {
    "text": "put into the database but if I want to change that object over time I don't have to do schema updates to do so I can",
    "start": "3550340",
    "end": "3556730"
  },
  {
    "text": "just add new properties get it serialize I'm good to go now I will say that one",
    "start": "3556730",
    "end": "3562640"
  },
  {
    "text": "of the things we did right into is we actually did one point at one point time need migrations for our database because",
    "start": "3562640",
    "end": "3569450"
  },
  {
    "text": "we needed to change the structure of what was in there and there's really nothing out there that is for migrations of document",
    "start": "3569450",
    "end": "3575990"
  },
  {
    "text": "databases there's nothing that let that helps you with this specific with this problem here of what happens when I do",
    "start": "3575990",
    "end": "3585320"
  },
  {
    "text": "something like add customer middle name what about all the existing records with customer little name well do I just",
    "start": "3585320",
    "end": "3592010"
  },
  {
    "text": "ignore it if it doesn't exists I didn't make sure the D serialization doesn't lose that information if it's a required",
    "start": "3592010",
    "end": "3599000"
  },
  {
    "text": "information what I do with all the existing stuff so all that kind of stuff we had before it's those kind of",
    "start": "3599000",
    "end": "3605240"
  },
  {
    "text": "problems still exist for us we just have to do them now in code to be able to fix those scenarios so that was our really",
    "start": "3605240",
    "end": "3611240"
  },
  {
    "text": "our last lesson we learned was the even though there was no schema the schema",
    "start": "3611240",
    "end": "3616520"
  },
  {
    "text": "still existed it just moved to code as opposed to being inside the database itself so we still have all the problems",
    "start": "3616520",
    "end": "3622460"
  },
  {
    "text": "with schema changes over time but we'd had to write up some of our own tooling to be able to support that",
    "start": "3622460",
    "end": "3629079"
  },
  {
    "text": "so if you have more questions Microsoft's website is fantastic for this so I'd go I'd say start there first",
    "start": "3629440",
    "end": "3635720"
  },
  {
    "text": "because they have a lot of great tutorials to be able to to to build it just download samples and get going from there in terms of pricing that is",
    "start": "3635720",
    "end": "3644210"
  },
  {
    "text": "another thing that I didn't try to go through but read carefully how the pricing works could is is very different",
    "start": "3644210",
    "end": "3649790"
  },
  {
    "text": "from other kind of offerings inside of Asher and so that is the usually limiting factor of why people don't use",
    "start": "3649790",
    "end": "3655490"
  },
  {
    "text": "cosmos DB is because they're just running MongoDB locally and now they want to go to cloud and they're like oh wait that's this is for like globally",
    "start": "3655490",
    "end": "3662000"
  },
  {
    "text": "distributed applications and it's priced accordingly so something else to keep in mind otherwise if you have any questions",
    "start": "3662000",
    "end": "3668150"
  },
  {
    "text": "I'll be around afterwards otherwise thank you very much and have a great rest of the conference",
    "start": "3668150",
    "end": "3673180"
  },
  {
    "text": "and of course don't forget to rate the session out there the red and yellow ones are broken there they're not",
    "start": "3676370",
    "end": "3682410"
  },
  {
    "text": "working right now so just the grains please",
    "start": "3682410",
    "end": "3686180"
  }
]