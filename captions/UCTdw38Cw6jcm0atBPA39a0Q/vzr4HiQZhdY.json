[
  {
    "text": "okay we shall get started the the best slot of the",
    "start": "400",
    "end": "6560"
  },
  {
    "text": "conference the last slot of the day on the last day of the conference where everybody's",
    "start": "6560",
    "end": "13960"
  },
  {
    "text": "fresh minds are clear raring to go",
    "start": "13960",
    "end": "20160"
  },
  {
    "text": "home um so um I thought I'd give a talk about um something that is really",
    "start": "20199",
    "end": "27119"
  },
  {
    "text": "passionate to me this is not going to be a technical talk we've got some code",
    "start": "27119",
    "end": "32238"
  },
  {
    "text": "that we're going to talk about um but really this is an idea about how we write better software so before I get",
    "start": "32239",
    "end": "38960"
  },
  {
    "text": "started I want to talk a little bit about the motivations of why I built this talk because um as it stands at the",
    "start": "38960",
    "end": "46399"
  },
  {
    "text": "moment I currently work for a company called Honeycomb we're a telemetry company um we write a backend for open",
    "start": "46399",
    "end": "53280"
  },
  {
    "text": "telemetry where we can send telemetry data which helps you understand your production systems before",
    "start": "53280",
    "end": "60199"
  },
  {
    "text": "that I was a independent consultant i used to go around organizations talking",
    "start": "60199",
    "end": "65600"
  },
  {
    "text": "and evangelizing about how we write better software that lives in a production environment how we make it",
    "start": "65600",
    "end": "71439"
  },
  {
    "text": "easier for engineers to understand what's going on and basically that starts by writing better software",
    "start": "71439",
    "end": "78320"
  },
  {
    "text": "but you can't just walk into an organization and go write better software here's a bill for â‚¬10,000 you",
    "start": "78320",
    "end": "83920"
  },
  {
    "text": "you have to give some context um so I was brought into a um a credit lender in",
    "start": "83920",
    "end": "89759"
  },
  {
    "text": "the UK with a few other consultants and what they wanted to do was build a brand",
    "start": "89759",
    "end": "96159"
  },
  {
    "text": "new core banking back-end system and if you don't know the banking sector is run",
    "start": "96159",
    "end": "101280"
  },
  {
    "text": "by cobalt it's run by mainframe servers that live in a big data center somewhere",
    "start": "101280",
    "end": "107840"
  },
  {
    "text": "um they're not really modern software um they wanted to build something brand new something from scratch and they gave us",
    "start": "107840",
    "end": "115680"
  },
  {
    "text": "a developer dream which was go and build it the way you want um so we set out by",
    "start": "115680",
    "end": "122640"
  },
  {
    "text": "trying to understand what we wanted to build how we wanted to build it more specifically um and started from scratch",
    "start": "122640",
    "end": "129280"
  },
  {
    "text": "we took a lot of principles that exist today things like TDD and various other",
    "start": "129280",
    "end": "135040"
  },
  {
    "text": "techniques and decided to start building them as a process together and that's",
    "start": "135040",
    "end": "140160"
  },
  {
    "text": "what we did um we started building a bank from scratch what I'm about to show you the the methodology the things that",
    "start": "140160",
    "end": "145840"
  },
  {
    "text": "we were thinking about is not theory it's not me coming up here and going \"Yeah it'd be great go and try it tell",
    "start": "145840",
    "end": "153120"
  },
  {
    "text": "me if it works.\" This does work it is used in production on a high volume",
    "start": "153120",
    "end": "158560"
  },
  {
    "text": "credit lending platform in the UK um I can't talk about exactly what it is but um but yeah it is used as a back end it",
    "start": "158560",
    "end": "165519"
  },
  {
    "text": "is useful and I hope that it is something that you find useful so we're",
    "start": "165519",
    "end": "170720"
  },
  {
    "text": "going to talk a little bit about what I call operable software um what the term means to me um because words are",
    "start": "170720",
    "end": "177840"
  },
  {
    "text": "meaningless um we give them meaning we're going to talk about how we as engineers test",
    "start": "177840",
    "end": "184440"
  },
  {
    "text": "software we're going to talk a little bit about what outside in testing is and",
    "start": "184440",
    "end": "189760"
  },
  {
    "text": "then we're going to talk about well I work for an observability company so we're going to talk about how observability um keys in which was a",
    "start": "189760",
    "end": "195680"
  },
  {
    "text": "core part of why we built what we built at the time whether that is the reason why I now work at Honeycomb I don't know",
    "start": "195680",
    "end": "201599"
  },
  {
    "text": "but um okay so let's start by defining what I mean by operable software",
    "start": "201599",
    "end": "210080"
  },
  {
    "text": "and I mean software that is built for production because I don't know whether",
    "start": "210080",
    "end": "216959"
  },
  {
    "text": "you know this but nobody cares about any other environment than",
    "start": "216959",
    "end": "222200"
  },
  {
    "text": "production no CEO is going to turn around to you and say and I know we lost",
    "start": "222200",
    "end": "228159"
  },
  {
    "text": "20 million pounds cuz production went down but I'm really happy that it worked in your development environment and I'm",
    "start": "228159",
    "end": "233680"
  },
  {
    "text": "really happy that staging's still up nobody's going to say that production is",
    "start": "233680",
    "end": "238959"
  },
  {
    "text": "the only environment that matters everything else is pointless we",
    "start": "238959",
    "end": "245439"
  },
  {
    "text": "use it to get to production the goal is production so when we're building software for production what we mean is",
    "start": "245439",
    "end": "251360"
  },
  {
    "text": "software that is built to run in a production environment it's built to run in an",
    "start": "251360",
    "end": "256560"
  },
  {
    "text": "environment where the database is not on your machine it's built to run an environment where service bus is what",
    "start": "256560",
    "end": "263520"
  },
  {
    "text": "you use as your messaging platform not Rabbit MQ locally because there was no",
    "start": "263520",
    "end": "269040"
  },
  {
    "text": "when I originally did this talk I was able to go there's no emulator for service bus there's an emulator for service bus now ruined my talk Microsoft",
    "start": "269040",
    "end": "275759"
  },
  {
    "text": "thank you but it's built to run in a production environment with production",
    "start": "275759",
    "end": "282000"
  },
  {
    "text": "grade systems it's built with the live operations team in mind it's built in a",
    "start": "282000",
    "end": "290080"
  },
  {
    "text": "way that allows us to know what's going on in production to know how it's functioning is it doing the right thing",
    "start": "290080",
    "end": "297040"
  },
  {
    "text": "is it going fast enough is it throwing errors we're building it so that we know what happens in production i don't care",
    "start": "297040",
    "end": "304000"
  },
  {
    "text": "about the stream of text that comes off your console that makes you feel good because it feels like you're actually doing something i care about whether I",
    "start": "304000",
    "end": "310479"
  },
  {
    "text": "know what's going on in production live operations that might be you as you building the platform and you running",
    "start": "310479",
    "end": "316000"
  },
  {
    "text": "the platform or it might be a separate team but it's built with that team that runs it in production in mind it's built",
    "start": "316000",
    "end": "323840"
  },
  {
    "text": "for things like fast recoverability MTR meanantime to recovery that kind of stuff it's built",
    "start": "323840",
    "end": "330080"
  },
  {
    "text": "in a way that allows us to be able to recover from failure that might be just restarting a",
    "start": "330080",
    "end": "335440"
  },
  {
    "text": "service but it also might be finding out why it went wrong and fixing it all of that leans into this idea that we",
    "start": "335440",
    "end": "343360"
  },
  {
    "text": "need to build systems that emit robust telemetry signals this isn't a pure talk about",
    "start": "343360",
    "end": "348880"
  },
  {
    "text": "just add open telemetry that's not what I'm saying but do do that and then send it to Honeycomb it's great um but it is",
    "start": "348880",
    "end": "355680"
  },
  {
    "text": "about thinking about when you write software how do we know whether it's",
    "start": "355680",
    "end": "360960"
  },
  {
    "text": "going right but also how do we know what is",
    "start": "360960",
    "end": "366759"
  },
  {
    "text": "right but also what do we mean when we talk about software we have a very narrow view a",
    "start": "366759",
    "end": "374160"
  },
  {
    "text": "lot of people around what software is software is the code I write and I commit to GitHub that is pretty much what software",
    "start": "374160",
    "end": "381280"
  },
  {
    "text": "is but it's not it's everything it's the application the code",
    "start": "381280",
    "end": "386880"
  },
  {
    "text": "that users use it's the tests that you write it's the build pipelines the",
    "start": "386880",
    "end": "393120"
  },
  {
    "text": "deployment pipelines it's the infrastructure that hosts",
    "start": "393120",
    "end": "398960"
  },
  {
    "text": "it and it's the observability tooling that allows you to know what's going on that entire stack that is software",
    "start": "399000",
    "end": "406479"
  },
  {
    "text": "because without a single point of that if one of those doesn't work users",
    "start": "406479",
    "end": "411919"
  },
  {
    "text": "cannot use your platform and you cannot fix that platform when it goes wrong together that is what we mean by",
    "start": "411919",
    "end": "418080"
  },
  {
    "text": "software so let's talk a little bit about testing and we're specifically going to talk",
    "start": "418080",
    "end": "423919"
  },
  {
    "text": "about TDD because TDD is now I' I've done this talk a few",
    "start": "423919",
    "end": "430479"
  },
  {
    "text": "times it's been on YouTube there's quite a lot of people who have responded to that post going \"He doesn't understand",
    "start": "430479",
    "end": "436319"
  },
  {
    "text": "the difference between unit testing and integration testing and component testing and end to end.\" Believe me I",
    "start": "436319",
    "end": "443120"
  },
  {
    "text": "know those words are meaningless and it's because they've been used by",
    "start": "443120",
    "end": "448400"
  },
  {
    "text": "different people to mean different things over so much time and TDD is the same thing now if you go back to what we",
    "start": "448400",
    "end": "454639"
  },
  {
    "text": "really meant when we started talking about TDD it was contract first we",
    "start": "454639",
    "end": "460240"
  },
  {
    "text": "define a contract a behavior that a system or a service or a class or a",
    "start": "460240",
    "end": "465440"
  },
  {
    "text": "method is going to do that's what we define first we write",
    "start": "465440",
    "end": "470800"
  },
  {
    "text": "a test that's what we mean we then make that test pass by writing",
    "start": "470800",
    "end": "476160"
  },
  {
    "text": "some code and then we're able to refactor the key thing is we write the",
    "start": "476160",
    "end": "482000"
  },
  {
    "text": "test first before the implementation because it defines the behavior we're expecting that is the core of what TDD",
    "start": "482000",
    "end": "489479"
  },
  {
    "text": "is the problem is it's commonly misunderstood as mock all the",
    "start": "489479",
    "end": "494759"
  },
  {
    "text": "things and I can do that in a net environment because everybody gets the joke you do that in Java conference and",
    "start": "494759",
    "end": "500000"
  },
  {
    "text": "they don't get it but it means that they they end up with",
    "start": "500000",
    "end": "505120"
  },
  {
    "text": "a single class with 17 dependencies and mock object everywhere and it's the idea that what",
    "start": "505120",
    "end": "512399"
  },
  {
    "text": "they're actually doing is they're testing a single method they're testing one method calls another method great",
    "start": "512399",
    "end": "518080"
  },
  {
    "text": "good for you makes you feel good 4,000 tests on that class great i get that you",
    "start": "518080",
    "end": "523760"
  },
  {
    "text": "feel really good about those 4,000 tests i'm with you nobody cares because nobody",
    "start": "523760",
    "end": "530480"
  },
  {
    "text": "cares about individual classes nobody uses those individual classes what they use is your system that's what we care",
    "start": "530480",
    "end": "537480"
  },
  {
    "text": "about so why is it that we actually think TDD is a good thing why is it that we actually start pushing TDD on every",
    "start": "537480",
    "end": "544560"
  },
  {
    "text": "junior de developer that comes in and we tell them to test every property on every class",
    "start": "544560",
    "end": "549800"
  },
  {
    "text": "why well we think it improves the design of contracts and that is the main reason",
    "start": "549800",
    "end": "556480"
  },
  {
    "text": "why TDD is so good because it allows us to be able to define behavior by",
    "start": "556480",
    "end": "562640"
  },
  {
    "text": "defining what we expect the thing to do by what we give it it allows us to refine those contracts and define those",
    "start": "562640",
    "end": "569279"
  },
  {
    "text": "contracts it might be a method contract it might be an API contract but it allows us to help define that",
    "start": "569279",
    "end": "575560"
  },
  {
    "text": "contract it helps us understand our codebase by saying we're asking a class to do a",
    "start": "575560",
    "end": "582640"
  },
  {
    "text": "thing it's not we're calling a method and making sure it calls another method we're asking a class to do a thing we're",
    "start": "582640",
    "end": "589040"
  },
  {
    "text": "asking an API to do a thing and then verifying the thing was done but it also allows us to have",
    "start": "589040",
    "end": "596040"
  },
  {
    "text": "documentation because if we actually write things in a TDD way what we're actually doing is we're defining the",
    "start": "596040",
    "end": "601880"
  },
  {
    "text": "behavior by saying I would like it to do this thing and when it does that thing we know if I pass these parameters to",
    "start": "601880",
    "end": "609360"
  },
  {
    "text": "this thing it does a thing that's documentation it allows new developers",
    "start": "609360",
    "end": "615680"
  },
  {
    "text": "to come and look at the tests and understand what's going on that's the",
    "start": "615680",
    "end": "621880"
  },
  {
    "text": "good but what's what about bad what what's bad about TDD why wouldn't we do it well most of the time when people do",
    "start": "621880",
    "end": "628800"
  },
  {
    "text": "TDD they do it in the absence of the people who use the things that you are trying to test",
    "start": "628800",
    "end": "634959"
  },
  {
    "text": "so if you're writing a method and you're testing a method you don't care that",
    "start": "634959",
    "end": "640160"
  },
  {
    "text": "actually it's used 17 layers above you in an API you just care about your one",
    "start": "640160",
    "end": "646680"
  },
  {
    "text": "class and the reality is that doesn't matter what your individual class does",
    "start": "646680",
    "end": "652480"
  },
  {
    "text": "doesn't matter what matters is what the users see so when we write these tests",
    "start": "652480",
    "end": "658160"
  },
  {
    "text": "we're writing them with the absence of those external consumers",
    "start": "658160",
    "end": "663519"
  },
  {
    "text": "and because we write them too low they end up being brittle they end",
    "start": "663519",
    "end": "669279"
  },
  {
    "text": "up making our software development flow brittle because as soon as we change the behavior of that thing down right at the",
    "start": "669279",
    "end": "675800"
  },
  {
    "text": "bottom we've now got to change the behavior of every single test above it",
    "start": "675800",
    "end": "680959"
  },
  {
    "text": "which means that now we've got one small change at the bottom that's changed our code and if we change our code and we",
    "start": "680959",
    "end": "687360"
  },
  {
    "text": "have to change our test we can no longer trust our tests and if we can't trust our test how are",
    "start": "687360",
    "end": "692399"
  },
  {
    "text": "we going to deploy now one of the things that we did when we did this at the um the CR lender",
    "start": "692399",
    "end": "698720"
  },
  {
    "text": "that I was working with um we had one team who did this they had 4,000 tests",
    "start": "698720",
    "end": "704320"
  },
  {
    "text": "written from the outside of their application at an API level just testing",
    "start": "704320",
    "end": "710640"
  },
  {
    "text": "the behavior and what's really interesting they they worked out that the internal model and",
    "start": "710640",
    "end": "717680"
  },
  {
    "text": "this is pre-production really um but there was lots of people using it",
    "start": "717680",
    "end": "722839"
  },
  {
    "text": "internally and they they had about 4,000 tests they decided that the internal",
    "start": "722839",
    "end": "728320"
  },
  {
    "text": "data model was wrong the way that they stored the data we were event sourcing all of this the way they stored the data",
    "start": "728320",
    "end": "734240"
  },
  {
    "text": "was wrong so they had to go and rewrite a significant portion of the internals",
    "start": "734240",
    "end": "742480"
  },
  {
    "text": "and they did that and all 4,000 tests passed and then they spent three days",
    "start": "742480",
    "end": "751040"
  },
  {
    "text": "saying \"I can't deploy it.\" Like \"What do you mean all your tests are passing.\" I'm like \"Well we didn't have to change",
    "start": "751040",
    "end": "756720"
  },
  {
    "text": "any of the tests we just changed the thing under the hood the tests haven't changed how do we know that that thing works?\" Well one of two things is",
    "start": "756720",
    "end": "763920"
  },
  {
    "text": "happening here either you never trusted your tests or you should just",
    "start": "763920",
    "end": "771160"
  },
  {
    "text": "deploy because everything passes and I think that's a real big indicator of",
    "start": "771160",
    "end": "777519"
  },
  {
    "text": "where we sit in software development nowadays because if we've defined all of the behavior and those 4,000 tests that",
    "start": "777519",
    "end": "784720"
  },
  {
    "text": "run in 10 seconds if all of those pass just deploy",
    "start": "784720",
    "end": "790360"
  },
  {
    "text": "it because either you you never trusted the test in the first place or the system is",
    "start": "790360",
    "end": "796360"
  },
  {
    "text": "okay if we write the test too low we end up changing too many things and then we don't trust the tests so we feel like we",
    "start": "796360",
    "end": "803279"
  },
  {
    "text": "have to do additional testing we feel like we have to get humans to come and intervene",
    "start": "803279",
    "end": "810320"
  },
  {
    "text": "but if you never trusted your test in the first place that's right so I want to talk a little bit",
    "start": "810320",
    "end": "817040"
  },
  {
    "text": "about component testing and this is normally the point in the presentation on YouTube where I get all the comments",
    "start": "817040",
    "end": "822639"
  },
  {
    "text": "that come up and go \"Oh no he doesn't understand the difference between unit and integration testing.\" Because what we're going to talk about could be",
    "start": "822639",
    "end": "829040"
  },
  {
    "text": "construed as integration testing it could be construed as component testing it could be construed as any kind of",
    "start": "829040",
    "end": "834959"
  },
  {
    "text": "name that you want so I'm going to call it component testing because there's not many people who use that term so nobody",
    "start": "834959",
    "end": "840880"
  },
  {
    "text": "can say I'm wrong um I love this meme um because it",
    "start": "840880",
    "end": "847600"
  },
  {
    "text": "directly tells you what's happening in modern code bases today people write the tests so low level that draws perfectly",
    "start": "847600",
    "end": "855360"
  },
  {
    "text": "fine in the warehouse we put it all together it works absolutely fine we It works absolutely fine we put them",
    "start": "855360",
    "end": "861040"
  },
  {
    "text": "together and go \"Oh we might have a problem.\" Did everybody think of putting these like two classes in the same API",
    "start": "861040",
    "end": "869279"
  },
  {
    "text": "and then testing it before we finished writing the 4,000 tests no okay well",
    "start": "869279",
    "end": "874720"
  },
  {
    "text": "those 4,000 tests are now useless you're going to have to write some more but what we're going to talk about",
    "start": "874720",
    "end": "880399"
  },
  {
    "text": "is component testing or outside in testing because the reality is what we're actually reaching for is feedback",
    "start": "880399",
    "end": "886000"
  },
  {
    "text": "loops always who here has read the book on",
    "start": "886000",
    "end": "891199"
  },
  {
    "text": "extreme programming anybody understand what XP or extreme programming is god now I feel",
    "start": "891199",
    "end": "899000"
  },
  {
    "text": "old so extreme programming some might argue it's the um the precursor to agile",
    "start": "899000",
    "end": "905839"
  },
  {
    "text": "whatever that means um but ultimately it was all about how do we write better",
    "start": "905839",
    "end": "912320"
  },
  {
    "text": "software faster well we get faster feedback loops we want to bring people closer we want to see what's happening",
    "start": "912320",
    "end": "919040"
  },
  {
    "text": "in our systems sooner so we can fix them and we can move faster now if you really think about it",
    "start": "919040",
    "end": "925199"
  },
  {
    "text": "the fastest feedback we have is our llinter that might be a code formatter",
    "start": "925199",
    "end": "930399"
  },
  {
    "text": "inn net it might be the squigglies that you get under stuff um innet in a compiled codebase it's a little bit",
    "start": "930399",
    "end": "936399"
  },
  {
    "text": "easier because you got the compiler that'll tell you that they know you can't call that thing with an integer it expects a",
    "start": "936399",
    "end": "942199"
  },
  {
    "text": "string in Typescript well in JavaScript well good",
    "start": "942199",
    "end": "947959"
  },
  {
    "text": "luck but in compiled languages you've got the compiler now these are all the",
    "start": "947959",
    "end": "953360"
  },
  {
    "text": "time it takes for you to get feedback the further out we go the",
    "start": "953360",
    "end": "959680"
  },
  {
    "text": "longer it takes us to get feedback the next stage would be developer tests again I'm using a term",
    "start": "959680",
    "end": "966560"
  },
  {
    "text": "that most people don't use so I can't be wrong developer tests tests that we write",
    "start": "966560",
    "end": "971680"
  },
  {
    "text": "against a class tests that we write against a method tests that we use the web application factory for the tests",
    "start": "971680",
    "end": "977120"
  },
  {
    "text": "that a developer writes and runs locally it's faster that way we'd have to push it up to GitHub and wait four",
    "start": "977120",
    "end": "983360"
  },
  {
    "text": "hours for a build pipeline to kick in we then got end toend tests things",
    "start": "983360",
    "end": "989120"
  },
  {
    "text": "that in a deployed environment we have to wait because it has to wait for the the messages to go through the message",
    "start": "989120",
    "end": "995680"
  },
  {
    "text": "bus that kind of thing we've then got our production telemetry which is a feedback loop that's going to",
    "start": "995680",
    "end": "1000880"
  },
  {
    "text": "tell us whether the system is running and then we have the OG feedback loop which is customer",
    "start": "1000880",
    "end": "1006920"
  },
  {
    "text": "complaints your email inbox is a feedback loop what we want to do is we want to",
    "start": "1006920",
    "end": "1014040"
  },
  {
    "text": "move God forbid we want to shift our feedback to the left um we want to get as close to us as possible that's what",
    "start": "1014040",
    "end": "1022000"
  },
  {
    "text": "we're looking for when we write software we want to get that feedback as early as",
    "start": "1022000",
    "end": "1027480"
  },
  {
    "text": "possible and we want to bring all of that we want to get all the stuff that the customers might complain about but",
    "start": "1027480",
    "end": "1033760"
  },
  {
    "text": "we want it sooner how do we do that how do we get our production telemetry our endto-end tests our customer complaints",
    "start": "1033760",
    "end": "1040558"
  },
  {
    "text": "all the way to left and that is where we start thinking about outside in testing so outside in",
    "start": "1040559",
    "end": "1047760"
  },
  {
    "text": "testing is really working from our external consumers those are the things that matter",
    "start": "1047760",
    "end": "1054760"
  },
  {
    "text": "they're the things that the people who are going to use our class our API contract now if we're using a HTTP API",
    "start": "1054960",
    "end": "1063520"
  },
  {
    "text": "that might be the endpoint if we're writing an inner sourced library for other teams to use the external",
    "start": "1063520",
    "end": "1069520"
  },
  {
    "text": "consumers are the other teams that are going to use it they'll be using your actual class your from your Nougat package doesn't matter what we're doing",
    "start": "1069520",
    "end": "1076320"
  },
  {
    "text": "is we're thinking about those levels that we're testing we're testing the",
    "start": "1076320",
    "end": "1081360"
  },
  {
    "text": "inputs and outputs if somebody needs to get data into an API in order to be able to get",
    "start": "1081360",
    "end": "1087840"
  },
  {
    "text": "data out we're going to push the data in via the API and then we're going to get the data out by the",
    "start": "1087840",
    "end": "1094960"
  },
  {
    "text": "API which means that we're testing from a users perspective and we're testing the",
    "start": "1095320",
    "end": "1101440"
  },
  {
    "text": "business requirements and what it also",
    "start": "1101440",
    "end": "1107400"
  },
  {
    "text": "means is that we're testing our business requirements first that's the thing that matters we're writing",
    "start": "1107400",
    "end": "1113480"
  },
  {
    "text": "tests that test our business requirements now when we started doing this um",
    "start": "1113480",
    "end": "1119840"
  },
  {
    "text": "particular project um they they brought in a lot of legacy",
    "start": "1119840",
    "end": "1125559"
  },
  {
    "text": "BAS awesome people really really nice people but they'd been working in the",
    "start": "1125559",
    "end": "1131840"
  },
  {
    "text": "banking sector for a very very long time and their business requirements",
    "start": "1131840",
    "end": "1137799"
  },
  {
    "text": "were it must have a database that's that's not a business requirement it must have a table that",
    "start": "1137799",
    "end": "1146000"
  },
  {
    "text": "has transaction ction idea no no that's not a business requirement so we got to train them on how to be talking to us",
    "start": "1146000",
    "end": "1153200"
  },
  {
    "text": "about what the business requirement was and they would say well it needs to um",
    "start": "1153200",
    "end": "1160080"
  },
  {
    "text": "take it needs to create a transaction it's like great okay I can create something that creates a transaction i need to be able to get a transaction",
    "start": "1160080",
    "end": "1166400"
  },
  {
    "text": "great okay I can start writing tests about these now we went through a um a",
    "start": "1166400",
    "end": "1171840"
  },
  {
    "text": "phase of about two-year project went through a phase of about six",
    "start": "1171840",
    "end": "1177320"
  },
  {
    "text": "months where I'm a I'm a pedantic guy anybody who knows me will be able to attest to that i love being pedantic",
    "start": "1177320",
    "end": "1185559"
  },
  {
    "text": "um so we went through about six months and they came to us and said there's a bug like really okay let me know what",
    "start": "1185559",
    "end": "1192559"
  },
  {
    "text": "the bug is um and they said \"Well if somebody puts â‚¬1,000 euros does a uh puts â‚¬1,000 euros in their account and",
    "start": "1192559",
    "end": "1199760"
  },
  {
    "text": "they try and spend â‚¬1,200 euros it does an error.\" I'm like \"Oh yeah that sounds",
    "start": "1199760",
    "end": "1206320"
  },
  {
    "text": "like a bug that sounds like something the system would do can you like give us the reference for the requirement so we",
    "start": "1206320",
    "end": "1211760"
  },
  {
    "text": "can put that in the bug?\" It's like \"Oh we didn't put a requirement for that that's just what it should do.\"",
    "start": "1211760",
    "end": "1217120"
  },
  {
    "text": "I was like \"Well I'm not going to build it if you don't give me a requirement because I'm",
    "start": "1217120",
    "end": "1222640"
  },
  {
    "text": "doing TDD you give me a requirement I write a test i write a test I write the",
    "start": "1222640",
    "end": "1230440"
  },
  {
    "text": "implementation if there's no requirement there's no test if there's no test there's no implementation.\" And they're like \"But",
    "start": "1230440",
    "end": "1236799"
  },
  {
    "text": "but you mean I need to write down everything the system needs to do?\" I'm like \"Yes.\" It's almost like that's your job",
    "start": "1236799",
    "end": "1246360"
  },
  {
    "text": "eventually we built a relationship and they started to understand that it was really really important that they define",
    "start": "1246400",
    "end": "1252159"
  },
  {
    "text": "what it does they define the error message they're expecting they define the behavior that happens do they want",
    "start": "1252159",
    "end": "1259679"
  },
  {
    "text": "that to go into an audit log when somebody tries to spend more than is that important because I'm not going to put it in an audit log unless they tell",
    "start": "1259679",
    "end": "1265600"
  },
  {
    "text": "me to i don't know banking that was the reason why we were brought in i know",
    "start": "1265600",
    "end": "1271760"
  },
  {
    "text": "modern software development i know building software for production i don't know",
    "start": "1271760",
    "end": "1277720"
  },
  {
    "text": "banking we have the burden of knowledge a lot of time if you go into building an ecom site you know how ecom works you're",
    "start": "1277720",
    "end": "1285200"
  },
  {
    "text": "going to bring your own preconceptions and you're going to build things that is not required now the other thing that it",
    "start": "1285200",
    "end": "1292159"
  },
  {
    "text": "happens when you start writing these things from a business requirements perspective is you end up getting into",
    "start": "1292159",
    "end": "1299760"
  },
  {
    "text": "this idea of building tests that are actually readable now whether you've heard the term that code should read",
    "start": "1299760",
    "end": "1305120"
  },
  {
    "text": "like pros your class should read like a Shakespearean",
    "start": "1305120",
    "end": "1311840"
  },
  {
    "text": "novel but ultimately what we end up doing is we end up writing our code our coded tests in a readable way because",
    "start": "1312039",
    "end": "1320159"
  },
  {
    "text": "the language that we're using is business language what ends up happening is we're",
    "start": "1320159",
    "end": "1327440"
  },
  {
    "text": "testing the application holistically every time what happens when we test in a unit test",
    "start": "1327440",
    "end": "1334480"
  },
  {
    "text": "the first thing we do is I'm going to mock the repository and I'm going to add stuff to the",
    "start": "1334480",
    "end": "1339880"
  },
  {
    "text": "database now if you're allowing your customers your card holders who are spending money if you're giving them SQL",
    "start": "1339880",
    "end": "1346480"
  },
  {
    "text": "Server Management Studio access to insert stuff into the database I'd like to talk about your business processes",
    "start": "1346480",
    "end": "1352080"
  },
  {
    "text": "because I don't think that's the right way what they actually do is they do",
    "start": "1352080",
    "end": "1357600"
  },
  {
    "text": "transactions and they spend money so we're testing it holistically we end up",
    "start": "1357600",
    "end": "1362640"
  },
  {
    "text": "not having to create tons of mocks tons of",
    "start": "1362640",
    "end": "1367840"
  },
  {
    "text": "stubs but my personal favorite is 100% code coverage like co- coverage is a vanity",
    "start": "1368440",
    "end": "1374640"
  },
  {
    "text": "metric do not measure it but if somebody's going to measure it for me I am damn well going to hit 100%",
    "start": "1374640",
    "end": "1381679"
  },
  {
    "text": "because what happens is if you've got a bit of code that doesn't have is not hit",
    "start": "1381679",
    "end": "1387440"
  },
  {
    "text": "by a test one of two things has happened you have wrote code that is",
    "start": "1387440",
    "end": "1394799"
  },
  {
    "text": "pointless or you have mis you have not written a test that should have been",
    "start": "1394919",
    "end": "1400679"
  },
  {
    "text": "written because there's a requirement that you were told about and you wrote some code for it but you didn't write the test for the requirement",
    "start": "1400679",
    "end": "1408880"
  },
  {
    "text": "so either delete the code or write the test talking to the BAS about why that",
    "start": "1408880",
    "end": "1414360"
  },
  {
    "text": "exists you hit 100% it's great",
    "start": "1414360",
    "end": "1419679"
  },
  {
    "text": "so I want to talk a little bit about readable tests because when we take TDD as meaning just",
    "start": "1419679",
    "end": "1427600"
  },
  {
    "text": "I write a test for a class and I write another test for a class and I write another test for a",
    "start": "1427600",
    "end": "1434039"
  },
  {
    "text": "class we're losing a ton of benefit what TDD allows us to do is",
    "start": "1434039",
    "end": "1440320"
  },
  {
    "text": "because we're trying to define a behavior we should be able to articulate what that behavior is",
    "start": "1440320",
    "end": "1448559"
  },
  {
    "text": "and we do that by using test names descriptions we write a descriptive test",
    "start": "1448559",
    "end": "1454799"
  },
  {
    "text": "name that says \"This is the behavior I'm expecting.\" We then write things like",
    "start": "1454799",
    "end": "1459919"
  },
  {
    "text": "reusable actions in the banking context we write a reusable action that says \"Create a transaction for this amount.\"",
    "start": "1459919",
    "end": "1466559"
  },
  {
    "text": "Which means all of our tests just say \"Create a transaction spend some money get a",
    "start": "1466559",
    "end": "1473080"
  },
  {
    "text": "refund complain to the manager.\" We write these things in there so it makes",
    "start": "1473080",
    "end": "1480120"
  },
  {
    "text": "sense we write things like abstract implementations of things that allow us",
    "start": "1480120",
    "end": "1485360"
  },
  {
    "text": "to be able to build these tests up over time when we're writing a new test we've got a library of things we're developers",
    "start": "1485360",
    "end": "1493840"
  },
  {
    "text": "but I see so many people when they're writing tests reinvent the wheel in every single test there is no reason why",
    "start": "1493840",
    "end": "1500159"
  },
  {
    "text": "you cannot refactor and abstract things in tests give them descriptive names",
    "start": "1500159",
    "end": "1506720"
  },
  {
    "text": "work on those build an actual codebase for testing your API we end up using things like domain",
    "start": "1506720",
    "end": "1514080"
  },
  {
    "text": "language the language of the business because we're testing things from a business requirements perspective",
    "start": "1514080",
    "end": "1520159"
  },
  {
    "text": "because we're sitting at the outside when we're writing this we're not using the technical",
    "start": "1520159",
    "end": "1525960"
  },
  {
    "text": "language nobody cares that the transaction service class calls a cache",
    "start": "1525960",
    "end": "1531360"
  },
  {
    "text": "they don't care okay it runs fast but we end up using domain language",
    "start": "1531360",
    "end": "1538480"
  },
  {
    "text": "for these things what we end up doing as well is writing more tests we don't end up doing verify",
    "start": "1538480",
    "end": "1545200"
  },
  {
    "text": "object and having a test that tests the entire object like this we end up with a test that says I'm",
    "start": "1545200",
    "end": "1551200"
  },
  {
    "text": "I I expect these five properties to come back and another test that expects these five properties to come back because",
    "start": "1551200",
    "end": "1556640"
  },
  {
    "text": "we've had to describe it we had to describe why that portion of the request exists because we built it",
    "start": "1556640",
    "end": "1563520"
  },
  {
    "text": "up over time now you may be coming to Martin this is just BDD you are",
    "start": "1563520",
    "end": "1571159"
  },
  {
    "text": "right bdd and TDD are amazing together",
    "start": "1571159",
    "end": "1576480"
  },
  {
    "text": "what we're doing is we're defining the behavior because the business requirements have defined the",
    "start": "1576480",
    "end": "1581640"
  },
  {
    "text": "behavior we're using that to drive how we develop what we develop that is BDD",
    "start": "1581640",
    "end": "1588240"
  },
  {
    "text": "to do BDD you do not need Girkin syntax speaking to people who advocated",
    "start": "1588240",
    "end": "1595760"
  },
  {
    "text": "for BDD back in the day they are really really sad that it ended up being given when then that was never what it was",
    "start": "1595760",
    "end": "1601679"
  },
  {
    "text": "meant to be it was meant to be about defining behavior and allowing that to be able to",
    "start": "1601679",
    "end": "1608000"
  },
  {
    "text": "allow you to be able to build better software so let's have a look a little bit of code",
    "start": "1608000",
    "end": "1615640"
  },
  {
    "text": "um has everybody heard of the web application factory innet a few people that haven't so the",
    "start": "1615640",
    "end": "1623039"
  },
  {
    "text": "web application factory allows you to be able to run an API in memory so you're essentially newing up",
    "start": "1623039",
    "end": "1630080"
  },
  {
    "text": "your entire API and allows you to be able to hit it in memory now what we're not doing here",
    "start": "1630080",
    "end": "1636880"
  },
  {
    "text": "is we're not going over the network there's no go out of your application listen on a port and then hit that",
    "start": "1636880",
    "end": "1644360"
  },
  {
    "text": "API it runs all in memory and that's the reason why this thing works if we had to",
    "start": "1644360",
    "end": "1650880"
  },
  {
    "text": "go out and back in it wouldn't work fast soon as you start hitting an API you're",
    "start": "1650880",
    "end": "1656320"
  },
  {
    "text": "adding milliseconds on if you think I've got 8,000 tests and those 8,000 tests are making maybe 10",
    "start": "1656320",
    "end": "1662320"
  },
  {
    "text": "API calls some of them all of a sudden we're at like 20 minutes 30 minutes 40 minutes for these tests to run because",
    "start": "1662320",
    "end": "1668640"
  },
  {
    "text": "it's running in memory we don't have that we've got millisecond time from hitting APIs so what this is this code is doing",
    "start": "1668640",
    "end": "1675440"
  },
  {
    "text": "is we're going to new up a new version of the API we're going to create a HTTP",
    "start": "1675440",
    "end": "1680559"
  },
  {
    "text": "client that we can use to hit that API in memory what it does is it creates a HTTP handler that goes in memory to your",
    "start": "1680559",
    "end": "1687159"
  },
  {
    "text": "API we're then going to use that to hit the um endpoint and then we're going to run an",
    "start": "1687159",
    "end": "1693840"
  },
  {
    "text": "assert now this is very similar to the thing that I built on the first day when",
    "start": "1693880",
    "end": "1700640"
  },
  {
    "text": "the BA team said we need it to create a transaction because the simplest way to",
    "start": "1700640",
    "end": "1707039"
  },
  {
    "text": "make this thing pass TDD right simplest thing is to write an API that accepts",
    "start": "1707039",
    "end": "1712480"
  },
  {
    "text": "anything you want and returns 200 okay because they said \"Well we need it",
    "start": "1712480",
    "end": "1718159"
  },
  {
    "text": "to accept a transaction.\" I said \"Great.\" So we we created this we build",
    "start": "1718159",
    "end": "1723919"
  },
  {
    "text": "the build pipelines threw it up on um Azure and they they hit the API and they",
    "start": "1723919",
    "end": "1729760"
  },
  {
    "text": "went \"Great it it takes the object I was expecting.\" I didn't care what the",
    "start": "1729760",
    "end": "1735279"
  },
  {
    "text": "object was i just returned 200 okay and they were like \"That's amazing that was so",
    "start": "1735279",
    "end": "1741240"
  },
  {
    "text": "fast.\" It's like \"What what's the API for getting it?\" I was like \"Oh whoa whoa that's a different",
    "start": "1741240",
    "end": "1746919"
  },
  {
    "text": "requirement.\" And they went \"Oh right so we need an API for getting it.\" It's like \"Now we need a database.\" Because what we're doing is",
    "start": "1746919",
    "end": "1753679"
  },
  {
    "text": "we were building up from business requirements and that allowed us to only build the things that we needed so we first built something like",
    "start": "1753679",
    "end": "1761640"
  },
  {
    "text": "this then we start to think about how do we make this a little bit more readable so that BAS could do it bas could read",
    "start": "1761640",
    "end": "1768720"
  },
  {
    "text": "it so the first thing we do is remove the implementation we don't need to know",
    "start": "1768720",
    "end": "1775200"
  },
  {
    "text": "that there is a web application factory when we're writing these tests we don't even know need to know there's a HTTP client in play because when you look at",
    "start": "1775200",
    "end": "1782399"
  },
  {
    "text": "the test what you need to know is I'm going to hit the API and I'm going to post some JSON to it and I'm",
    "start": "1782399",
    "end": "1789440"
  },
  {
    "text": "going to expect this thing on the back but we can go a step further and yes I realize I am code",
    "start": "1789440",
    "end": "1795760"
  },
  {
    "text": "golfing four lines of code i'm good at code gump when it's four lines of code then we move into",
    "start": "1795760",
    "end": "1802159"
  },
  {
    "text": "something called AAA which is arrange act assert very very standard very",
    "start": "1802159",
    "end": "1808640"
  },
  {
    "text": "readable by a lot of people and that's important because individuals do not",
    "start": "1808640",
    "end": "1813679"
  },
  {
    "text": "build software teams build software the unit",
    "start": "1813679",
    "end": "1818720"
  },
  {
    "text": "of delivery of software is a team not an individual everybody needs to be able to understand this",
    "start": "1818720",
    "end": "1825520"
  },
  {
    "text": "what we do is we move to this idea that we've got well we do a range we create a to-do item we hit the API",
    "start": "1825520",
    "end": "1833159"
  },
  {
    "text": "great then we could add some context and this is where we get into this idea that it's really",
    "start": "1833159",
    "end": "1839399"
  },
  {
    "text": "valuable when we're writing tests to really think about what we",
    "start": "1839399",
    "end": "1846039"
  },
  {
    "text": "mean what's important for that test if I'm reading this if I'm coming back to this six months later to understand what",
    "start": "1846039",
    "end": "1851919"
  },
  {
    "text": "that is do I need to know that a valid to-do item has a title and a description",
    "start": "1851919",
    "end": "1857520"
  },
  {
    "text": "is that the minimum viable things that it needs to be to be valid i don't care because if you look at that test adding",
    "start": "1857520",
    "end": "1864159"
  },
  {
    "text": "a to-do item with a valid request returns okay the simple",
    "start": "1864159",
    "end": "1871320"
  },
  {
    "text": "test that does exactly what it said on the tin get a valid to-do item throw that",
    "start": "1871320",
    "end": "1877760"
  },
  {
    "text": "to-do item at the API make sure it returns okay if there is things that you read in that test that do not make sense",
    "start": "1877760",
    "end": "1884240"
  },
  {
    "text": "for the scenario that you've described then you are doing it wrong principle of least surprise you",
    "start": "1884240",
    "end": "1891679"
  },
  {
    "text": "shouldn't go into a test and then go \"Oh oh but it actually goes over to service bus and then it calls me",
    "start": "1891679",
    "end": "1899000"
  },
  {
    "text": "mom.\" Why so we can use the whole framework",
    "start": "1899000",
    "end": "1906559"
  },
  {
    "text": "that we've got at our fingertips we've got C we've got net we can do loads of things you spend so much time as",
    "start": "1906559",
    "end": "1914440"
  },
  {
    "text": "engineers writing code that you're so proud of why don't we apply that to",
    "start": "1914440",
    "end": "1921480"
  },
  {
    "text": "tests write tests that we're proud of write tests that other people can",
    "start": "1921480",
    "end": "1926600"
  },
  {
    "text": "understand now when we got to writing tests like this the BAS came to us and it was it",
    "start": "1926600",
    "end": "1935120"
  },
  {
    "text": "was one of the most surreal moments that I had while I was working there because the BAS came to us like can you come and",
    "start": "1935120",
    "end": "1940640"
  },
  {
    "text": "demo this i'm like yeah I can demo the test and show you the test it's like yeah who too the",
    "start": "1940640",
    "end": "1946679"
  },
  {
    "text": "board like excuse me it's like well they can understand them and it's going to",
    "start": "1946679",
    "end": "1952480"
  },
  {
    "text": "show them why you can actually move faster than everyone else in the organization because you're writing tests at this level surreal because they",
    "start": "1952480",
    "end": "1960320"
  },
  {
    "text": "could read it we were using their language to write these tests we were writing abstractions our code was",
    "start": "1960320",
    "end": "1966720"
  },
  {
    "text": "reading like pros it was reading like a business requirements document each one of them they could understand it they",
    "start": "1966720",
    "end": "1973919"
  },
  {
    "text": "felt confidence that this system was working now the next thing comes up is",
    "start": "1973919",
    "end": "1980320"
  },
  {
    "text": "like well we could just add a few more asserts onto the bottom of there and that's that's the floodgates it's like I",
    "start": "1980320",
    "end": "1986000"
  },
  {
    "text": "could just add one more assert just one more and maybe another one and now I've",
    "start": "1986000",
    "end": "1991120"
  },
  {
    "text": "got six so seven's nothing really is it now I've got 50 well what's 60 between",
    "start": "1991120",
    "end": "1997559"
  },
  {
    "text": "friends and then all of a sudden your test description has bears no relevance",
    "start": "1997559",
    "end": "2003039"
  },
  {
    "text": "to all of the asserts that you're doing so when we do the next test which",
    "start": "2003039",
    "end": "2008640"
  },
  {
    "text": "is well I've posted to the API let's make sure I get a valid transaction ID back a valid to-do item ID",
    "start": "2008640",
    "end": "2015799"
  },
  {
    "text": "back it's another test but you'll notice that the first two lines are the same what I've done is I've created reusable",
    "start": "2015799",
    "end": "2021919"
  },
  {
    "text": "actions so creating a brand new test is actually no big thing",
    "start": "2021919",
    "end": "2028799"
  },
  {
    "text": "because I've used reusable bits of code because I'm using a proper language to write these things and I'm the one",
    "start": "2028799",
    "end": "2035039"
  },
  {
    "text": "that's writing it me and my team I'm not having to create step definitions that I",
    "start": "2035039",
    "end": "2040480"
  },
  {
    "text": "pass on to somebody else to use that was the downfall of BDD was using those girking syntaxes in",
    "start": "2040480",
    "end": "2047279"
  },
  {
    "text": "order to be able to say I'll give it to the BAS and they'll write the test they never",
    "start": "2047279",
    "end": "2052679"
  },
  {
    "text": "did cuz everyone was can I have a step definition that does exactly the thing that says in the business",
    "start": "2052679",
    "end": "2059240"
  },
  {
    "text": "requirement so we end up writing more specific asserts another test that",
    "start": "2059240",
    "end": "2065200"
  },
  {
    "text": "describes something and does a thing now when we get to things like",
    "start": "2065200",
    "end": "2070398"
  },
  {
    "text": "persistence and this is the bit where everybody really goes maybe don't do",
    "start": "2070399",
    "end": "2077800"
  },
  {
    "text": "that because this is where we start to think about outside",
    "start": "2077800",
    "end": "2083000"
  },
  {
    "text": "improperly because if I need to test and this is a to-do API everybody should",
    "start": "2083000",
    "end": "2088320"
  },
  {
    "text": "understand a to-do API there's thousands of them out there so what they do is they create a",
    "start": "2088320",
    "end": "2095118"
  },
  {
    "text": "to-do item and then they need to get a to-do item back if you look at that add a to-do item with a valid request can be",
    "start": "2095119",
    "end": "2102240"
  },
  {
    "text": "retrieved by the ID pretty simple test this is the point where most",
    "start": "2102240",
    "end": "2108880"
  },
  {
    "text": "engineers when they're writing tests will reach around into the database inject a to-do item and then hit the get",
    "start": "2108880",
    "end": "2116880"
  },
  {
    "text": "endpoint and again that is not how users use your system if it",
    "start": "2118119",
    "end": "2124359"
  },
  {
    "text": "is godspeed please tell me where you work so I don't work there",
    "start": "2124359",
    "end": "2131359"
  },
  {
    "text": "again ultimately what they do is they hit your to-do API endpoint they hit a post or they post a to-do item and then",
    "start": "2131560",
    "end": "2138400"
  },
  {
    "text": "they get it back later now if we can mimic that in our test what we're actually",
    "start": "2138400",
    "end": "2146160"
  },
  {
    "text": "doing is we're testing the whole of our system we're testing so much more than just",
    "start": "2146160",
    "end": "2153760"
  },
  {
    "text": "what an individual class would do because up until this point you could pretty much just hit a controller",
    "start": "2153760",
    "end": "2160520"
  },
  {
    "text": "class so what we're doing is again a reusable action that makes sense i don't",
    "start": "2160520",
    "end": "2166320"
  },
  {
    "text": "like the wording of that that particular abstraction there creating a valid to-do item you could say create a valid to-do",
    "start": "2166320",
    "end": "2174520"
  },
  {
    "text": "item on the API or something like that that makes it",
    "start": "2174520",
    "end": "2180559"
  },
  {
    "text": "descriptive but then we go and get it and then we validate that the two IDs are the",
    "start": "2180839",
    "end": "2187599"
  },
  {
    "text": "same but what have we tested when we did that well we've tested the startup",
    "start": "2188839",
    "end": "2195680"
  },
  {
    "text": "configuration so we've tested to make sure that we've",
    "start": "2195680",
    "end": "2201599"
  },
  {
    "text": "registered things now how many people in the audience have run their API in their",
    "start": "2201599",
    "end": "2210079"
  },
  {
    "text": "production environment and it fails with class not registered independency",
    "start": "2210079",
    "end": "2215720"
  },
  {
    "text": "injection yes so about 20% of the room 80% of you are",
    "start": "2215720",
    "end": "2222720"
  },
  {
    "text": "liars because when we write things at a unit test level we don't use dependency injection and all our tests pass so we",
    "start": "2223240",
    "end": "2229599"
  },
  {
    "text": "deploy it and then it fails because we forgot to register that class in dependency injection so it doesn't work",
    "start": "2229599",
    "end": "2235839"
  },
  {
    "text": "when we write things in this way we're testing the dependency injection we're testing the routting we're testing to",
    "start": "2235839",
    "end": "2241839"
  },
  {
    "text": "make sure that a trailing slash works properly",
    "start": "2241839",
    "end": "2246960"
  },
  {
    "text": "we're also testing serialization and deserialization was people in the room",
    "start": "2246960",
    "end": "2254160"
  },
  {
    "text": "around writing software fornet when Newton soft JSON moved to system text.json",
    "start": "2254160",
    "end": "2259720"
  },
  {
    "text": "JSON because that wasn't that was a that was a special time for API",
    "start": "2259720",
    "end": "2266040"
  },
  {
    "text": "deserialization because there was a lot of subtle changes but we're testing that we're",
    "start": "2266040",
    "end": "2271680"
  },
  {
    "text": "testing to make sure that the thing that we post is the thing that we get back in the right formats because if we write",
    "start": "2271680",
    "end": "2278480"
  },
  {
    "text": "these tests properly we don't use the same classes we don't use the same serialization",
    "start": "2278480",
    "end": "2283720"
  },
  {
    "text": "systems we write our own classes in the test framework that match what API should be",
    "start": "2283720",
    "end": "2290960"
  },
  {
    "text": "which means by proxy we also get contract testing because if my test fails if I've",
    "start": "2290960",
    "end": "2298480"
  },
  {
    "text": "got to change something in my code my test code if I've got to change those",
    "start": "2298480",
    "end": "2304400"
  },
  {
    "text": "classes because they don't work anymore the chances are my consumers are",
    "start": "2304400",
    "end": "2309839"
  },
  {
    "text": "also going to have to change theirs and if they have to change theirs and you've got 5,000 customers that you",
    "start": "2309839",
    "end": "2316240"
  },
  {
    "text": "don't you can't talk to you probably need to make sure that you're not going to do that we're also testing things like",
    "start": "2316240",
    "end": "2323200"
  },
  {
    "text": "model validation if you've got your own model validators your model binders we're testing all of",
    "start": "2323200",
    "end": "2329320"
  },
  {
    "text": "those we're testing database interactions in this particular example it uses entity framework under the hood",
    "start": "2329320",
    "end": "2335839"
  },
  {
    "text": "i'm using the um in-memory version of SQL light i'm testing constraints i'm",
    "start": "2335839",
    "end": "2341920"
  },
  {
    "text": "testing to make sure we bring back the right columns so it doesn't null them out unit tests if you write them at the",
    "start": "2341920",
    "end": "2348560"
  },
  {
    "text": "method level generally don't do that but most importantly we're testing",
    "start": "2348560",
    "end": "2353839"
  },
  {
    "text": "the customers APIs the things that our consumers are going to use and we're testing the requirements that we've been",
    "start": "2353839",
    "end": "2359680"
  },
  {
    "text": "asked to build but that's not the end of the",
    "start": "2359680",
    "end": "2365520"
  },
  {
    "text": "story because there's things that we can't test when we do that we can't test things where the back",
    "start": "2365520",
    "end": "2373040"
  },
  {
    "text": "end changes but the front end does not caching is a big example of that because",
    "start": "2373040",
    "end": "2380000"
  },
  {
    "text": "from a consumer's perspective I just get my data i don't care whether it comes out of Reddius or Valky or it comes out",
    "start": "2380000",
    "end": "2388400"
  },
  {
    "text": "the database it comes out of Cosmos it comes out of SQL Server i I don't care if you have logic that changes and as",
    "start": "2388400",
    "end": "2395440"
  },
  {
    "text": "long as the data is the same I'm not going to be able to tell a difference so we can't test those things",
    "start": "2395440",
    "end": "2403119"
  },
  {
    "text": "we can't test internal state changes like I'm writing to an audit log if that",
    "start": "2403119",
    "end": "2409280"
  },
  {
    "text": "audit log isn't visible outside I can't test that because I'm on the",
    "start": "2409280",
    "end": "2415160"
  },
  {
    "text": "outside we can't test performance because well we're testing on my machine",
    "start": "2415160",
    "end": "2421440"
  },
  {
    "text": "and my machine is not production because the database doesn't live on my machine in production my service bus instance",
    "start": "2421440",
    "end": "2427680"
  },
  {
    "text": "doesn't live on my machine in production production is different we can't test things like cloud",
    "start": "2427680",
    "end": "2434839"
  },
  {
    "text": "services because they introduce latency and all of a sudden our tests are going to take so much longer to",
    "start": "2434839",
    "end": "2441320"
  },
  {
    "text": "run we can't test configuration when you deploy things to",
    "start": "2441320",
    "end": "2446920"
  },
  {
    "text": "production you're going to have different environment variables for different instances you're going to have connection strings you can't test those",
    "start": "2446920",
    "end": "2453040"
  },
  {
    "text": "sort of things in this way what I'm trying to say here is that",
    "start": "2453040",
    "end": "2458160"
  },
  {
    "text": "there are different gears that you will work in",
    "start": "2458160",
    "end": "2462720"
  },
  {
    "text": "working at the outside you can cover so much more with so much fewer",
    "start": "2463280",
    "end": "2469400"
  },
  {
    "text": "tests you don't have to test every class with a unit test in your code with",
    "start": "2469400",
    "end": "2475880"
  },
  {
    "text": "XUnit if they're tested from the outside the entire behavior is tested you don't",
    "start": "2475880",
    "end": "2481200"
  },
  {
    "text": "need to if there is things that it does that you can't test from the outside then you change gear down think about it",
    "start": "2481200",
    "end": "2488160"
  },
  {
    "text": "like a car if you can run in sixth gear for the entire journey you're going to get there faster but sometimes you're going to",
    "start": "2488160",
    "end": "2494560"
  },
  {
    "text": "need to drop down in gears to be able to maneuver quickly i'm not saying never write unit",
    "start": "2494560",
    "end": "2502359"
  },
  {
    "text": "tests what I'm saying is you can write so many fewer tests by doing this and cover so much more",
    "start": "2502359",
    "end": "2509240"
  },
  {
    "text": "ground but ultimately some of this stuff we can test and that's where observability",
    "start": "2509240",
    "end": "2515599"
  },
  {
    "text": "comes in so what is",
    "start": "2515599",
    "end": "2521079"
  },
  {
    "text": "observability well observability has three pill no it",
    "start": "2521079",
    "end": "2526440"
  },
  {
    "text": "doesn't anybody who knows me knows that's I I love saying three pillars",
    "start": "2526440",
    "end": "2531520"
  },
  {
    "text": "there are no pillars in observability essentially observability comes from control theory it was from",
    "start": "2531520",
    "end": "2539040"
  },
  {
    "text": "the 1960s it's around the idea of how do I measure",
    "start": "2539040",
    "end": "2544880"
  },
  {
    "text": "how well the internal states can be inferred from the knowledge of its outputs that's where the definition",
    "start": "2544880",
    "end": "2552960"
  },
  {
    "text": "comes from it was co-opted which is why the three pillars is a",
    "start": "2552960",
    "end": "2558599"
  },
  {
    "text": "thing ultimately what we now think about of observability is reliability",
    "start": "2558599",
    "end": "2564760"
  },
  {
    "text": "availability quality observability is just another characteristic of these systems",
    "start": "2564760",
    "end": "2570560"
  },
  {
    "text": "but what it allows us to do is be able to infer what's going on inside of that system that's still what that definition",
    "start": "2570560",
    "end": "2577760"
  },
  {
    "text": "is supposed to mean and if you go back to what we were talking",
    "start": "2577760",
    "end": "2583400"
  },
  {
    "text": "about about these things these are internal states of the system whether we choose a cache whether",
    "start": "2583400",
    "end": "2590480"
  },
  {
    "text": "it goes into the audit state those are internal states of the system so how can",
    "start": "2590480",
    "end": "2595520"
  },
  {
    "text": "we use observability to understand that so I want to talk a little bit about something called ODD or observability",
    "start": "2595520",
    "end": "2603040"
  },
  {
    "text": "during development observabilitydriven development and how we use observability data in in order to be able to drive how",
    "start": "2603040",
    "end": "2610720"
  },
  {
    "text": "we write things locally because as I said before the only environment that matters is",
    "start": "2610720",
    "end": "2616520"
  },
  {
    "text": "production and the way that we know what's going on in production is using our observability",
    "start": "2616520",
    "end": "2622359"
  },
  {
    "text": "signals logs traces metrics events profiles exceptions all of those",
    "start": "2622359",
    "end": "2628319"
  },
  {
    "text": "telemetry signals are what we use in production to understand what's going on because observability is an output of",
    "start": "2628319",
    "end": "2634640"
  },
  {
    "text": "our application just like the response to an",
    "start": "2634640",
    "end": "2640839"
  },
  {
    "text": "API observability is an output you as an engineer whether you run your own system",
    "start": "2640839",
    "end": "2648000"
  },
  {
    "text": "or whether somebody else runs it for you you are a customer of that system you are a client of that system because the",
    "start": "2648000",
    "end": "2654160"
  },
  {
    "text": "telemetry data is something that you need in order to be able to fix things",
    "start": "2654160",
    "end": "2659440"
  },
  {
    "text": "in order to be able to understand whether people are having a good experience because things like",
    "start": "2659440",
    "end": "2666000"
  },
  {
    "text": "observability can do things that you can't do locally they can do things like detecting",
    "start": "2666000",
    "end": "2672200"
  },
  {
    "text": "parallelization tracing data allows you to be able to see that allows you to be able to detect",
    "start": "2672200",
    "end": "2678960"
  },
  {
    "text": "code paths and the usage of your system log lines can do that they can",
    "start": "2678960",
    "end": "2684160"
  },
  {
    "text": "show you that a particular thing was hit because you wrote a log",
    "start": "2684160",
    "end": "2689280"
  },
  {
    "text": "line but the key characteristic here is what's important to you locally when you're writing your code is probably",
    "start": "2689640",
    "end": "2695599"
  },
  {
    "text": "important in production as well",
    "start": "2695599",
    "end": "2699880"
  },
  {
    "text": "so let's have a look at some caching code um this is a a get list from the to-do API if there's any potential",
    "start": "2702160",
    "end": "2709119"
  },
  {
    "text": "employers from the future out there I wouldn't write caching code like this just to be clear there are better ways",
    "start": "2709119",
    "end": "2714400"
  },
  {
    "text": "to write caching code do not look at this take a picture of it and say \"This is how Martin said I should implement my",
    "start": "2714400",
    "end": "2719920"
  },
  {
    "text": "caching code on Monday.\" Please don't but ultimately that's the kind of idea we go and get it from the cache if",
    "start": "2719920",
    "end": "2726400"
  },
  {
    "text": "it exists otherwise we go and get it from the database but if we were writing a test what would we what would we",
    "start": "2726400",
    "end": "2733000"
  },
  {
    "text": "do because the output from that API is the same no matter what whether I got it",
    "start": "2733000",
    "end": "2738880"
  },
  {
    "text": "from the database or I got it from the cache that's where we can use observability now I have wrote a um a",
    "start": "2738880",
    "end": "2745440"
  },
  {
    "text": "library called practical open it's a um xunit library that allows you to be able to do this a little bit nicer um than",
    "start": "2745440",
    "end": "2752560"
  },
  {
    "text": "this but we use something called open telemetry not going to go into what open telemetry because I've got enough videos on YouTube about",
    "start": "2752560",
    "end": "2758839"
  },
  {
    "text": "that but we use open telemetry to be able to output what's going on in our system we use tracing data in this",
    "start": "2758839",
    "end": "2765599"
  },
  {
    "text": "particular example and what that allows us to be able to do is write something like this",
    "start": "2765599",
    "end": "2773119"
  },
  {
    "text": "in .NET we use activity in other languages it would be spans but we can add a little bit of",
    "start": "2773119",
    "end": "2780760"
  },
  {
    "text": "telemetry that lets us know that the hit database was hit it'll tell us how long the database was um the database",
    "start": "2780760",
    "end": "2787440"
  },
  {
    "text": "connection was it tells us a lot of other things as well but crucially for what we're talking about today is it",
    "start": "2787440",
    "end": "2793920"
  },
  {
    "text": "will let us know that that particular request we made did make a call to the",
    "start": "2793920",
    "end": "2799000"
  },
  {
    "text": "database so then in our test we can have a look at the captured telemetry data and say well I hit the",
    "start": "2799000",
    "end": "2807200"
  },
  {
    "text": "API did you hit the database and then conversely we can do",
    "start": "2807200",
    "end": "2814240"
  },
  {
    "text": "the same thing we can hit the API we can clear out all the existing telemetry and then say \"And then did you hit the",
    "start": "2814240",
    "end": "2819760"
  },
  {
    "text": "database?\" Nope good great we can use our telemetry data for",
    "start": "2819760",
    "end": "2826520"
  },
  {
    "text": "more than just looking at production telemetry data is more than just installing an agent on a machine in",
    "start": "2826520",
    "end": "2833400"
  },
  {
    "text": "production and hoping that it's going to give us insights observability is way more than",
    "start": "2833400",
    "end": "2841400"
  },
  {
    "text": "monitoring observability is about being intentional about what we need in",
    "start": "2841400",
    "end": "2847960"
  },
  {
    "text": "production because production is the environment that matters i don't care whether you can",
    "start": "2847960",
    "end": "2853760"
  },
  {
    "text": "attach a debugger to your local machine and hit play i care whether customers are going",
    "start": "2853760",
    "end": "2859200"
  },
  {
    "text": "to use that software and whether customers are having a good experience and when it goes wrong I care that you",
    "start": "2859200",
    "end": "2864560"
  },
  {
    "text": "know how it's gone wrong and you can fix it the best way for you to fix it fast",
    "start": "2864560",
    "end": "2869920"
  },
  {
    "text": "is to have more data have more context about what was going",
    "start": "2869920",
    "end": "2875520"
  },
  {
    "text": "on and why if we can take that and start using",
    "start": "2875520",
    "end": "2880880"
  },
  {
    "text": "it locally it is so much better everybody's probably heard like 17 presentations on",
    "start": "2880880",
    "end": "2886160"
  },
  {
    "text": "Aspire this week ultimately what Aspire is really good at is evangelizing that telemetry",
    "start": "2886160",
    "end": "2894000"
  },
  {
    "text": "is a thing that you should care about if you can take this",
    "start": "2894000",
    "end": "2899760"
  },
  {
    "text": "data I forgot to put this slide in but you can then refactor for",
    "start": "2900359",
    "end": "2906040"
  },
  {
    "text": "readability if you can take that data and start being able to see what's going on locally it's great we did I did a",
    "start": "2906040",
    "end": "2913280"
  },
  {
    "text": "workshop for a couple of days this week something that was really big that came out of it was the people who were writing this code were like that",
    "start": "2913280",
    "end": "2919839"
  },
  {
    "text": "telemetry doesn't look right that was their local machine it's like I'm I'm looking at the trace data",
    "start": "2919839",
    "end": "2926319"
  },
  {
    "text": "and it doesn't it doesn't look right that span finishes before the other span",
    "start": "2926319",
    "end": "2932200"
  },
  {
    "text": "starts that doesn't look right turns out they were disposing of it too soon but",
    "start": "2932200",
    "end": "2938319"
  },
  {
    "text": "they were using that telemetry data as a barometer to know whether they knew what was going on because that's important in",
    "start": "2938319",
    "end": "2944960"
  },
  {
    "text": "production as well now a few dos and don'ts do use this for things that you",
    "start": "2944960",
    "end": "2951760"
  },
  {
    "text": "care about in production if you're never going to care about it in production don't bother with this",
    "start": "2951760",
    "end": "2958599"
  },
  {
    "text": "stuff test things that are important don't test things that don't",
    "start": "2958599",
    "end": "2964319"
  },
  {
    "text": "matter don't test things that are unimportant make sure that you have good",
    "start": "2964319",
    "end": "2970559"
  },
  {
    "text": "data make sure that you have data that is valuable on your tracing data on your logging data on your metrics data make",
    "start": "2970559",
    "end": "2977119"
  },
  {
    "text": "sure that's valuable add more data when it makes sense",
    "start": "2977119",
    "end": "2983200"
  },
  {
    "text": "i know that my example said check the database was called don't do that in a production scenario i did that because",
    "start": "2983200",
    "end": "2988960"
  },
  {
    "text": "people will understand what it means don't check the database was called and don't check a method was called those",
    "start": "2988960",
    "end": "2995280"
  },
  {
    "text": "things don't matter the end user doesn't m doesn't care that you hit a database that you",
    "start": "2995280",
    "end": "3002559"
  },
  {
    "text": "hit Cosmos versus hitting SQL they don't care that it hit a cache versus not hitting a cache really but that might be",
    "start": "3002559",
    "end": "3009839"
  },
  {
    "text": "a functional requirement that you do care about now final thing I want to talk",
    "start": "3009839",
    "end": "3015400"
  },
  {
    "text": "about is using tracing as a test artifact now I wrote a",
    "start": "3015400",
    "end": "3023800"
  },
  {
    "text": "framework called um xUnit open telemetry which allows you to add something like",
    "start": "3023800",
    "end": "3029359"
  },
  {
    "text": "this into xunit and what that will do is it will trace every test that you write and if",
    "start": "3029359",
    "end": "3035119"
  },
  {
    "text": "you're writing your tests in this particular way or even if you're not and you're just writing in um testing",
    "start": "3035119",
    "end": "3040480"
  },
  {
    "text": "classes that do use observability data like tracing and metrics and logs god forbid",
    "start": "3040480",
    "end": "3049160"
  },
  {
    "text": "um it will allow you to be able to take that data and use it really quickly but",
    "start": "3049160",
    "end": "3054720"
  },
  {
    "text": "it'll allow you to be able to do things like this you can run your test and you can see what the trace",
    "start": "3054720",
    "end": "3062319"
  },
  {
    "text": "would look like you can see what the metrics will look like you can throw that data into Aspire locally and see",
    "start": "3062319",
    "end": "3068400"
  },
  {
    "text": "what it looks like what that allows you to do is that when you go to production and you get an",
    "start": "3068400",
    "end": "3074880"
  },
  {
    "text": "email that says Dave said he's having a problem and I've got the trace for you",
    "start": "3074880",
    "end": "3080960"
  },
  {
    "text": "you can take that trace and you can find a test that matches that requirement and you can put the two",
    "start": "3080960",
    "end": "3087440"
  },
  {
    "text": "together and say these don't look the same",
    "start": "3087440",
    "end": "3092480"
  },
  {
    "text": "why do they not look the same because you're using the same",
    "start": "3092480",
    "end": "3097880"
  },
  {
    "text": "tools using the same tool locally as you're using in production you can look at this kind of stuff and go but that",
    "start": "3097880",
    "end": "3104480"
  },
  {
    "text": "still hits the database you can look at that and go why doesn't that hit service bus",
    "start": "3104480",
    "end": "3110680"
  },
  {
    "text": "twice why doesn't that make a call to this other service you can use this inside of those",
    "start": "3110680",
    "end": "3118400"
  },
  {
    "text": "frameworks to be able to see what's going on you can then do things like be able to",
    "start": "3118400",
    "end": "3123520"
  },
  {
    "text": "see how your telemetry is changing over time you can graph all of this data that",
    "start": "3123520",
    "end": "3128960"
  },
  {
    "text": "you're getting you can take the tags off your tests and be able to do analytics around",
    "start": "3128960",
    "end": "3134839"
  },
  {
    "text": "them you don't have to use the inbuilt tools from Team City and CircleCI and be",
    "start": "3134839",
    "end": "3140079"
  },
  {
    "text": "able to produce reports out of GitHub because it doesn't give you this kind of criteria anymore you can use your",
    "start": "3140079",
    "end": "3145440"
  },
  {
    "text": "observability tooling to do that by using standard open telemetry data",
    "start": "3145440",
    "end": "3151839"
  },
  {
    "text": "so how do we be better there's a few things I wanted to want you to take away from this",
    "start": "3152880",
    "end": "3159960"
  },
  {
    "text": "talk think about what gear you are",
    "start": "3159960",
    "end": "3164640"
  },
  {
    "text": "in it's not about saying always right at the outside it's about choosing the right gear for the thing that you're",
    "start": "3165880",
    "end": "3173000"
  },
  {
    "text": "doing am I trying to go fast and the things I can test I can test from the",
    "start": "3173000",
    "end": "3178640"
  },
  {
    "text": "outside then do the outside if you can't should I move down",
    "start": "3178640",
    "end": "3185880"
  },
  {
    "text": "gears if I'm moving down gears should I move back up again afterwards think about what gear you're",
    "start": "3185880",
    "end": "3192160"
  },
  {
    "text": "in and whether that's the right gear for the thing that you're trying to do write tests that",
    "start": "3192160",
    "end": "3199559"
  },
  {
    "text": "matter if you feel like you're writing a test that doesn't matter it probably",
    "start": "3199559",
    "end": "3205480"
  },
  {
    "text": "doesn't think about it if it doesn't matter don't do it don't waste your time",
    "start": "3205480",
    "end": "3211839"
  },
  {
    "text": "nobody cares about those 4,000 unit tests i know you're proud of them i'm proud of you",
    "start": "3211839",
    "end": "3218800"
  },
  {
    "text": "too don't make your applications brittle don't make your software",
    "start": "3220200",
    "end": "3225960"
  },
  {
    "text": "brittle remember software is not just the thing you put on GitHub and then you",
    "start": "3225960",
    "end": "3231359"
  },
  {
    "text": "deploy to an EC2 instance or an Azure VM or container apps software is all of it",
    "start": "3231359",
    "end": "3237920"
  },
  {
    "text": "do not make that software brittle by writing tests that are too low when you",
    "start": "3237920",
    "end": "3243760"
  },
  {
    "text": "don't need to and think about your requirements",
    "start": "3243760",
    "end": "3251520"
  },
  {
    "text": "first few things for you to take away you can take a picture of this if you want to this is the the resources bit um",
    "start": "3253079",
    "end": "3259200"
  },
  {
    "text": "the repository is up there um I'm going to push up a update later on today maybe tomorrow that'll have some of the new",
    "start": "3259200",
    "end": "3265119"
  },
  {
    "text": "stuff in there um couple of follow-on talks if you want to go away and have a think um there's a guy called Ian Cooper who did TDD",
    "start": "3265119",
    "end": "3272160"
  },
  {
    "text": "revisited i cannot recommend that talk enough it breakdowns breaks down TDD into what it was what it should be it",
    "start": "3272160",
    "end": "3279359"
  },
  {
    "text": "will re it'll reform your brain on what TDD is about i talk about writing tests writing",
    "start": "3279359",
    "end": "3286240"
  },
  {
    "text": "them better writing them readable um there's a talk by David Whitney who talks about how we write better tests or",
    "start": "3286240",
    "end": "3291920"
  },
  {
    "text": "more specifically how we write tests that do not suck",
    "start": "3291920",
    "end": "3296960"
  },
  {
    "text": "the people who send me to this conference for you to come and listen to me are Honeycomb we have a free account",
    "start": "3298240",
    "end": "3303920"
  },
  {
    "text": "that you can use forever no credit card required that you can send all of this data",
    "start": "3303920",
    "end": "3309720"
  },
  {
    "text": "to please go and sign up if you don't like me then obviously don't um that that will show them um we also literally",
    "start": "3309720",
    "end": "3317680"
  },
  {
    "text": "wrote the book on observability engineering it is free on our website um we talk about a lot of these concepts around observability um observability",
    "start": "3317680",
    "end": "3324960"
  },
  {
    "text": "driven development that kind of stuff doesn't talk about honeycomb it's around um observability engineering it's a free O'Reilly book go check it out but on",
    "start": "3324960",
    "end": "3332400"
  },
  {
    "text": "that note I will be around for questions and please try and think about the fact that this is hard to do but are you too",
    "start": "3332400",
    "end": "3340240"
  },
  {
    "text": "busy to improve thank you very [Applause]",
    "start": "3340240",
    "end": "3354849"
  }
]