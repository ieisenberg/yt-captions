[
  {
    "start": "0",
    "end": "76000"
  },
  {
    "text": "well we might actually kick things up as the last couple of people roll into the room hi I'm Scott Holden and I'm gonna",
    "start": "10830",
    "end": "17710"
  },
  {
    "text": "do the obligatory boring intro slide in a second and this is kubernetes zero to 100",
    "start": "17710",
    "end": "23289"
  },
  {
    "text": "we're really looking at a you've had some previous experience with containers you may have played around with them a",
    "start": "23289",
    "end": "28840"
  },
  {
    "text": "little we're gonna revisit a little bit of that knowledge as well just to make sure what a ground level set I'm gonna",
    "start": "28840",
    "end": "34120"
  },
  {
    "text": "take it from there we're going to assume little to no knowledge about kubernetes itself and more importantly we're going",
    "start": "34120",
    "end": "39879"
  },
  {
    "text": "to assume why we don't know why we actually need Hooven it is as well so",
    "start": "39879",
    "end": "45129"
  },
  {
    "text": "it's important to actually make the distinction between container runtimes and kubernetes and all that we will",
    "start": "45129",
    "end": "50770"
  },
  {
    "text": "drill into that in a lot more detail but to begin ioan most boring intro slide you'll see this entire week I'm Scott",
    "start": "50770",
    "end": "57550"
  },
  {
    "text": "Holden you can reach me via email or github that's pretty much it I work for",
    "start": "57550",
    "end": "62859"
  },
  {
    "text": "Microsoft so obligatory opinions are that of my own not of that my employer I",
    "start": "62859",
    "end": "68229"
  },
  {
    "text": "work as an advanced migration technical specialist which is slightly different to kubernetes become from a very active",
    "start": "68229",
    "end": "74350"
  },
  {
    "text": "heavy background so to kick things off I thought let's start with a bit of a",
    "start": "74350",
    "end": "80860"
  },
  {
    "start": "76000",
    "end": "293000"
  },
  {
    "text": "level set by running through containers themselves now you can ask some fun",
    "start": "80860",
    "end": "85990"
  },
  {
    "text": "questions how many people have used containers technology in any way shape or form before awesome how many people",
    "start": "85990",
    "end": "94299"
  },
  {
    "text": "have used kubernetes devs prod or whatever is cool got a couple of hats hopefully there'll be a couple of things",
    "start": "94299",
    "end": "99670"
  },
  {
    "text": "for you today and I'm guessing the rest of you have an interest in kubernetes but either haven't found the right",
    "start": "99670",
    "end": "104829"
  },
  {
    "text": "trigger moment the right reason to actually begin using it or to be perfectly honest if things work why",
    "start": "104829",
    "end": "110950"
  },
  {
    "text": "would I even consider kubernetes so we'll run through that as well so our visiting containers we are not talking",
    "start": "110950",
    "end": "116829"
  },
  {
    "text": "about Bailey's if you are here to discuss the scheduling and orchestration of Tupperware you are in the wrong order",
    "start": "116829",
    "end": "122820"
  },
  {
    "text": "we instead we'll be talking about a container as a logical unit and we're",
    "start": "122820",
    "end": "128798"
  },
  {
    "text": "going to run through a little bit of terminology at the moment there seems to be a real disconnect in terms of what we",
    "start": "128799",
    "end": "134709"
  },
  {
    "text": "call containers people will call containers container images oh sorry people call container images",
    "start": "134709",
    "end": "140230"
  },
  {
    "text": "containers people will call container run containers at its core what a container",
    "start": "140230",
    "end": "146320"
  },
  {
    "text": "is is your code in a runtime or put even more simply a single process that's",
    "start": "146320",
    "end": "152590"
  },
  {
    "text": "running isolated from the world around us and it may in turn have a series of",
    "start": "152590",
    "end": "158380"
  },
  {
    "text": "drivers providing process namespace process isolation file system isolation",
    "start": "158380",
    "end": "164460"
  },
  {
    "text": "resource isolation in terms of maximum CPU and memory and its own network stack",
    "start": "164460",
    "end": "169870"
  },
  {
    "text": "or network isolation so when we talk about a container for the rest of the day we're really going to be talking",
    "start": "169870",
    "end": "175270"
  },
  {
    "text": "about this construct a piece of code a program running inside what we could",
    "start": "175270",
    "end": "182380"
  },
  {
    "text": "nearly term as a sandbox now as soon as",
    "start": "182380",
    "end": "187570"
  },
  {
    "text": "you see this we think we'll hang on a second we've had this for years in virtual machines virtual machines",
    "start": "187570",
    "end": "192850"
  },
  {
    "text": "provide a way to extract our hardware and network our compute resources and as with any good container presentation we",
    "start": "192850",
    "end": "199600"
  },
  {
    "text": "have to have the obligatory VMs verse containers what is the difference well in a virtual machine we carry around the",
    "start": "199600",
    "end": "206650"
  },
  {
    "text": "operating system which is quite heavy so it means all these virtual machines are carrying around every single component",
    "start": "206650",
    "end": "212709"
  },
  {
    "text": "when we look at I'm gonna pick on a Windows install it's not the lightest thing in the world so having five ten fifteen hundred",
    "start": "212709",
    "end": "220420"
  },
  {
    "text": "copies of it can be quite expensive in terms of storage where a container differs is that we share the kernel with",
    "start": "220420",
    "end": "227739"
  },
  {
    "text": "the base underlying operating system so there are some shared components there in turn we get the benefit of not",
    "start": "227739",
    "end": "234130"
  },
  {
    "text": "actually carrying around the operating system so all of a sudden we have our app in our runtime the only components",
    "start": "234130",
    "end": "241330"
  },
  {
    "text": "that are required to run the container as part as part of our package as part of our container image we need a little",
    "start": "241330",
    "end": "248050"
  },
  {
    "text": "bit deeper into that now there's one issue I have with this image and every single image like that it is everyone",
    "start": "248050",
    "end": "255280"
  },
  {
    "text": "tries to make the blue boxes the same does anyone have an application in runtime that are half the size of their",
    "start": "255280",
    "end": "262180"
  },
  {
    "text": "operating system that would be like three or four key in reality your app and runtime a small little components",
    "start": "262180",
    "end": "269140"
  },
  {
    "text": "compared to your operating system and this is where one of the benefits of containers actually comes into play that",
    "start": "269140",
    "end": "274570"
  },
  {
    "text": "you can fit a lot more density on a server in terms of actually running these workloads so this is what I think",
    "start": "274570",
    "end": "281539"
  },
  {
    "text": "the diagram should actually look like because we can fit a lot more we can better utilize the capacity we have",
    "start": "281539",
    "end": "288279"
  },
  {
    "text": "using containers because we're not repeating that operating system component so how do we actually go from",
    "start": "288279",
    "end": "296479"
  },
  {
    "text": "a container image to something running well we'll begin to container images in",
    "start": "296479",
    "end": "301969"
  },
  {
    "text": "a second but in order to spin up a container we need to provide a container image a file system and a little bit of",
    "start": "301969",
    "end": "309199"
  },
  {
    "text": "lightweight configuration and it really depends on how deep into this you want to go this is the important part we pass",
    "start": "309199",
    "end": "316150"
  },
  {
    "text": "the configuration and the container image to a container runtime that",
    "start": "316150",
    "end": "321189"
  },
  {
    "text": "container run timer is then responsible for actually spinning everything up behind the scenes in turn you get a",
    "start": "321189",
    "end": "329659"
  },
  {
    "text": "running container now running container is not a single component it's a whole",
    "start": "329659",
    "end": "335479"
  },
  {
    "text": "lot of different services in the background that are actually working together to provide all these different levels of isolation and abstraction now",
    "start": "335479",
    "end": "343370"
  },
  {
    "text": "you'll notice so far I haven't said the D word and it's what's really popularized containers the technology",
    "start": "343370",
    "end": "350539"
  },
  {
    "text": "that's actually underpinning all of this has been around for ages the C name our C groups have been around further I",
    "start": "350539",
    "end": "356469"
  },
  {
    "text": "don't even want to think how long process namespaces and process isolations even longer so the technology",
    "start": "356469",
    "end": "363349"
  },
  {
    "text": "isn't new what is new and fancy though is these awesome toolkits that actually",
    "start": "363349",
    "end": "368930"
  },
  {
    "text": "provide all of these components in one place so docker became really popular",
    "start": "368930",
    "end": "373939"
  },
  {
    "text": "and that was the D word I was talking about it this is a PG docker really",
    "start": "373939",
    "end": "380149"
  },
  {
    "text": "provides a toolkit to actually allow you to put all this together it provides the tools to create those container images",
    "start": "380149",
    "end": "386210"
  },
  {
    "text": "those file systems it then provides the container runtime for you to actually pass the image into to get those",
    "start": "386210",
    "end": "393139"
  },
  {
    "text": "services behind the scenes spun up and it also provides then the long-term management being able to stop monitor",
    "start": "393139",
    "end": "399560"
  },
  {
    "text": "get loss you can perform everything docker can do using individual",
    "start": "399560",
    "end": "405379"
  },
  {
    "text": "components and individual services and if you have a bit of free time read up on see and what was actually doing under",
    "start": "405379",
    "end": "411110"
  },
  {
    "text": "the hood there's a whole lot of really cool stuff happening but what docker",
    "start": "411110",
    "end": "416210"
  },
  {
    "text": "gives us is the ability to do docker run now for the majority of this talk when",
    "start": "416210",
    "end": "421310"
  },
  {
    "text": "we refer to Dhaka we're gonna be referring it in in the use case of the container runtime something we pass a",
    "start": "421310",
    "end": "428090"
  },
  {
    "text": "container image to to have it to execute the container itself so now further ado",
    "start": "428090",
    "end": "434720"
  },
  {
    "text": "let's run an a simple container",
    "start": "434720",
    "end": "439150"
  },
  {
    "text": "hopefully this will seem fairly familiar to everyone so here I've got a virtual",
    "start": "439780",
    "end": "445130"
  },
  {
    "text": "machine rather than running on my local laptop just give me a little bit more rapid and to please the demo gods on",
    "start": "445130",
    "end": "451070"
  },
  {
    "text": "this I've got installed docker desktop now docker desktop is a way of actually running the local doctor Damon on my",
    "start": "451070",
    "end": "458540"
  },
  {
    "text": "local computer now because I actually want to deal with Linux containers today it's actually spun off a virtual machine",
    "start": "458540",
    "end": "464780"
  },
  {
    "text": "in the background that's doing all the heavy lifting for me so I'm actually a couple layers deep in terms of virtualization and dr. desktop is",
    "start": "464780",
    "end": "484570"
  },
  {
    "text": "fantastic to run on your local computer this is really about a local doctor",
    "start": "484570",
    "end": "489830"
  },
  {
    "text": "experience now the reason I really wanted to call this out is I'm running Windows yet I'm working with Linux",
    "start": "489830",
    "end": "495680"
  },
  {
    "text": "containers I can flip this around to use windows containers as well but we're gonna stick in the world of Linux for",
    "start": "495680",
    "end": "501440"
  },
  {
    "text": "the moment so I'm gonna come into my command prompt and in order to interact with docker and we'll we won't dig too",
    "start": "501440",
    "end": "508850"
  },
  {
    "text": "deep into dr. today I'm gonna do a docker and let's just do - - help - -",
    "start": "508850",
    "end": "515630"
  },
  {
    "text": "helps really helpful because it gives you all the information of everything you can do in order to start a container",
    "start": "515630",
    "end": "520700"
  },
  {
    "text": "and once again hopefully this is seeming fairly familiar to a few people we do docker run on and then we need to pass",
    "start": "520700",
    "end": "526670"
  },
  {
    "text": "our container image plus a series of options into docket run remember we have that plus configuration down the bottom",
    "start": "526670",
    "end": "533630"
  },
  {
    "text": "so I'm gonna pass in - D which means run in a detached mode so in this example we",
    "start": "533630",
    "end": "540920"
  },
  {
    "text": "want to actually have it running in the back round rather than having it stay open and wait for us to close it off I'm",
    "start": "540920",
    "end": "548570"
  },
  {
    "text": "gonna be really really clean here and do - - erm if you're working with docker this will become your friend",
    "start": "548570",
    "end": "554510"
  },
  {
    "text": "this literally means when the container stops running clean up everything that",
    "start": "554510",
    "end": "559640"
  },
  {
    "text": "way you don't end up with a whole lot of stopped containers sitting around so particular for today now I'm actually",
    "start": "559640",
    "end": "565910"
  },
  {
    "text": "going to be running a web server here to demonstrate what we're doing has everyone heard of it in genetics fairly",
    "start": "565910",
    "end": "572750"
  },
  {
    "text": "popular you put in place here is Apache HTTP D any any web service you want but",
    "start": "572750",
    "end": "580460"
  },
  {
    "text": "I'm gonna pick on Emily next cuz the containers quite nice so we're gonna run run nginx and I need to add one more",
    "start": "580460",
    "end": "586400"
  },
  {
    "text": "option to actually get this to work if I was to execute this right now it will spin up isolating the process space",
    "start": "586400",
    "end": "593350"
  },
  {
    "text": "isolated filesystem doesn't really set any limits on computer memory",
    "start": "593350",
    "end": "598820"
  },
  {
    "text": "utilization it'll also set up its own little networking stack and unless I actually tell docker I would like to interact",
    "start": "598820",
    "end": "605750"
  },
  {
    "text": "with that a network I won't have access into this container so I'm going to add",
    "start": "605750",
    "end": "610910"
  },
  {
    "text": "one more command - P 80 80 80 and this is I would like to map port 8080 on my",
    "start": "610910",
    "end": "618140"
  },
  {
    "text": "computer into port 80 running on the container now this is the quintessential",
    "start": "618140",
    "end": "623300"
  },
  {
    "text": "first docker workload that everybody runs so and there are many examples of",
    "start": "623300",
    "end": "628370"
  },
  {
    "text": "how to do this if we actually kick this off the first thing we notice we get this big massive show on hash this is",
    "start": "628370",
    "end": "635240"
  },
  {
    "text": "our containers identity running inside dr. this is our running a container to a degree if we do a docker PS we can",
    "start": "635240",
    "end": "643040"
  },
  {
    "text": "actually see what's running in the background and you can ignore a couple",
    "start": "643040",
    "end": "648320"
  },
  {
    "text": "of those demo faults they weren't meant to show up just yet it's just at the top so we're running engine X and we said it",
    "start": "648320",
    "end": "655760"
  },
  {
    "text": "should be available on port 8080 so if we were to open up our browser go to hey",
    "start": "655760",
    "end": "661700"
  },
  {
    "text": "got nginx running inside a container that that's it that's running a",
    "start": "661700",
    "end": "666980"
  },
  {
    "text": "container on daughter now it will stay there running until we explicitly tell it to stop so I'm just going to do a",
    "start": "666980",
    "end": "673760"
  },
  {
    "text": "docker stop now protip containers get names and they're awesome",
    "start": "673760",
    "end": "679379"
  },
  {
    "text": "fun names things like whatever it is you",
    "start": "679379",
    "end": "685349"
  },
  {
    "text": "don't need to type them in a really short hand way of actually addressing anything within docker is to just use",
    "start": "685349",
    "end": "691079"
  },
  {
    "text": "the first couple of characters to uniquely identify the hash so in this case I can see my top-level engine X",
    "start": "691079",
    "end": "697619"
  },
  {
    "text": "container has a container ID starting with a nine a and that's actually unique",
    "start": "697619",
    "end": "703399"
  },
  {
    "text": "so I should be able to type stop a 980 and that will stop that container that I",
    "start": "703399",
    "end": "709559"
  },
  {
    "text": "was looking at you so really shorthand it means you don't have to write things out now if we would have come back to",
    "start": "709559",
    "end": "715439"
  },
  {
    "text": "our browser refresh this it all timeout and say hey it's off it's not available we'll shut down the container okay",
    "start": "715439",
    "end": "723469"
  },
  {
    "text": "alright let's jump back and dig a little bit further so what is a container image",
    "start": "723469",
    "end": "730919"
  },
  {
    "start": "728000",
    "end": "843000"
  },
  {
    "text": "and once again this might be running over some known ground for most people what a container image is drastically",
    "start": "730919",
    "end": "737639"
  },
  {
    "text": "different to what we think of when we look at virtual machine hard drives or even a physical hard drive a container",
    "start": "737639",
    "end": "743819"
  },
  {
    "text": "image is actually made up of a whole lot of layers and like onions and parfait",
    "start": "743819",
    "end": "749729"
  },
  {
    "text": "layers is good the container image itself is based on top of a previous",
    "start": "749729",
    "end": "755669"
  },
  {
    "text": "image that in turn is based on a previous image that is in turn based on scratch scratch is the very bottom point",
    "start": "755669",
    "end": "763559"
  },
  {
    "text": "when we talk about scratch it means nothing on the file system think of it like a blank harddrive if we actually",
    "start": "763559",
    "end": "770879"
  },
  {
    "text": "take a look at what we were running there say for example nginx looking at",
    "start": "770879",
    "end": "776669"
  },
  {
    "text": "the second one down nginx in this case is based on the Debian Buster slim image",
    "start": "776669",
    "end": "782789"
  },
  {
    "text": "which that is based on scratch now one of the key things to note here is we",
    "start": "782789",
    "end": "789299"
  },
  {
    "text": "only bring along each layer as is needed and we only store the deltas and this is",
    "start": "789299",
    "end": "795809"
  },
  {
    "text": "it seems a little bit silly at first but it's absolutely amazing because it means if we just need Debian we've got 69",
    "start": "795809",
    "end": "802829"
  },
  {
    "text": "megawatts of utilization if we then need nginx we add on additional 56 minute if",
    "start": "802829",
    "end": "808349"
  },
  {
    "text": "we then need some custom code top of that and we'll talk about how some container images in a second 1k",
    "start": "808349",
    "end": "813430"
  },
  {
    "text": "whatever it may be the other benefit we get is if multiple containers use the",
    "start": "813430",
    "end": "819519"
  },
  {
    "text": "same layer below its share between the two in terms of being downloaded once",
    "start": "819519",
    "end": "825160"
  },
  {
    "text": "stored once but being able to be referenced so all of a sudden for all these base layers we only need to keep",
    "start": "825160",
    "end": "830980"
  },
  {
    "text": "one with copy of them we can also do this this is really fun come chat to me",
    "start": "830980",
    "end": "836980"
  },
  {
    "text": "later if you want to talk about running images on scratch and doing really fun things with net cool this is a little",
    "start": "836980",
    "end": "842980"
  },
  {
    "text": "bit of a beat but anyway let's have a quick look at making a container image because this is something that I find a",
    "start": "842980",
    "end": "848529"
  },
  {
    "start": "843000",
    "end": "1278000"
  },
  {
    "text": "lot of people skip over and we're gonna do it a slightly different way and ask a trick question here how many people",
    "start": "848529",
    "end": "854950"
  },
  {
    "text": "think you need a doctor file to contain to create a container image couple",
    "start": "854950",
    "end": "862000"
  },
  {
    "text": "people Coco said it was a trick question and you actually don't need a docker file at all so what I'm about to show",
    "start": "862000",
    "end": "868450"
  },
  {
    "text": "you is absolutely disgusting you probably shouldn't do it in production but it's a great way to actually understand how a container image is made",
    "start": "868450",
    "end": "876250"
  },
  {
    "text": "up so I actually want to change my nginx page so it shows something completely",
    "start": "876250",
    "end": "882459"
  },
  {
    "text": "different so I'm gonna rerun my index container so it's sitting up and running",
    "start": "882459",
    "end": "887980"
  },
  {
    "text": "and if we come back to our browser we should see that we've got welcome to nginx I don't like this I wanted to say",
    "start": "887980",
    "end": "894279"
  },
  {
    "text": "hello world that's that's the classic example so from the command line line I'm actually gonna enter into the",
    "start": "894279",
    "end": "901060"
  },
  {
    "text": "container I'm gonna connect to its process namespace and spawn my own process side by side to a degree this",
    "start": "901060",
    "end": "907600"
  },
  {
    "text": "allows me to run whatever I want inside the container itself so if I do in a docker exe C I'm gonna do - I T because",
    "start": "907600",
    "end": "916209"
  },
  {
    "text": "I want this to be interactive so I can talk with it and to be TTY so terminal",
    "start": "916209",
    "end": "921670"
  },
  {
    "text": "experience on this I'm gonna run with the container that I just spun up which",
    "start": "921670",
    "end": "927670"
  },
  {
    "text": "starts with 9 - EE and I'm gonna run a command in this case I'm gonna run one",
    "start": "927670",
    "end": "932740"
  },
  {
    "text": "batch what this is actually done is started the batch process inside the",
    "start": "932740",
    "end": "938050"
  },
  {
    "text": "container sitting completely isolated now because I'm now inside the container",
    "start": "938050",
    "end": "943480"
  },
  {
    "text": "inside of process name space with its attached file system and networking I can begin to interact with all of those",
    "start": "943480",
    "end": "949480"
  },
  {
    "text": "components say for example I wanted to create a new web page well I could do an",
    "start": "949480",
    "end": "954699"
  },
  {
    "text": "echo hello world for example and right about to use a nginx",
    "start": "954699",
    "end": "966480"
  },
  {
    "text": "index dot HTML don't worry too much about that half this is more showing that we can change the file system of",
    "start": "966480",
    "end": "972070"
  },
  {
    "text": "the container on the fly so if we actually come back to index now and refresh we get out hello world dot",
    "start": "972070",
    "end": "978160"
  },
  {
    "text": "commitment now the reason we reason the general guidance is never to do this on",
    "start": "978160",
    "end": "984699"
  },
  {
    "text": "a container is if we would have stopped it we lose all of these changes changes",
    "start": "984699",
    "end": "990190"
  },
  {
    "text": "to a file system are completely temporary the images themselves are",
    "start": "990190",
    "end": "995889"
  },
  {
    "text": "mutable but we can take the changes with Maggie and convert them into a container",
    "start": "995889",
    "end": "1001740"
  },
  {
    "text": "image and this is this is the part that necessarily wouldn't recommend it but it's great to have an understanding off",
    "start": "1001740",
    "end": "1006899"
  },
  {
    "text": "so if we come back into the command prompt we can actually do a commit so we",
    "start": "1006899",
    "end": "1013620"
  },
  {
    "text": "want to fix it out and the whole idea",
    "start": "1013620",
    "end": "1020819"
  },
  {
    "text": "behind commit is we want to take changes we've made to a running container and pull it with the filesystem back into an",
    "start": "1020819",
    "end": "1027000"
  },
  {
    "text": "image so I'm gonna do a docker committed and I'm gonna pass in my container in this case what's calling 9/2 and we can",
    "start": "1027000",
    "end": "1036298"
  },
  {
    "text": "give it a repository and tag so I might just call this live one latest so we",
    "start": "1036299",
    "end": "1042329"
  },
  {
    "text": "give me the name and a tag I hit this cool we've just created a container",
    "start": "1042329",
    "end": "1047850"
  },
  {
    "text": "image we've created another layout so if I was to do a docker stop ix we we take",
    "start": "1047850",
    "end": "1055230"
  },
  {
    "text": "our webserver down if I was to now run the exact same command as before but",
    "start": "1055230",
    "end": "1061380"
  },
  {
    "text": "instead of specifying nginx I specify live 1 latest we actually kick out web",
    "start": "1061380",
    "end": "1067350"
  },
  {
    "text": "server back up with all the file system changes that were made so we jump over",
    "start": "1067350",
    "end": "1072419"
  },
  {
    "text": "here we refresh nothing actually changes which created a copy of our of our file system now why",
    "start": "1072419",
    "end": "1080260"
  },
  {
    "text": "is this important to know well when you see a docker file something like this",
    "start": "1080260",
    "end": "1086400"
  },
  {
    "text": "what does random run is the equivalent of jumping into the container executing",
    "start": "1086400",
    "end": "1094510"
  },
  {
    "text": "that command and then taking a snapshot of the resulting file system so when you",
    "start": "1094510",
    "end": "1100120"
  },
  {
    "text": "have run commands in a docker container docker file it's the same as actually jumping in making those changes and then",
    "start": "1100120",
    "end": "1106750"
  },
  {
    "text": "taking a snapshot this is important to remember for one week reason and we'll get into versions a little bit later on",
    "start": "1106750",
    "end": "1112840"
  },
  {
    "text": "if you've got a component that's not identified every time you call it it",
    "start": "1112840",
    "end": "1118810"
  },
  {
    "text": "gives you a different result every time you build this docker container you're going to get a completely different",
    "start": "1118810",
    "end": "1124210"
  },
  {
    "text": "result and the big one that often catches out people is things like apt install or get installed if you're just",
    "start": "1124210",
    "end": "1131020"
  },
  {
    "text": "doing a generic apt-get install and not specifying a version every time we rebuild the container you just grab the",
    "start": "1131020",
    "end": "1137560"
  },
  {
    "text": "latest version of the software which may be the behavior you want but it may also be a little bit dangerous so the other",
    "start": "1137560",
    "end": "1145450"
  },
  {
    "text": "way to build a container as we all know use the docker file and do a docker build and you won't want me to run over",
    "start": "1145450",
    "end": "1150970"
  },
  {
    "text": "that quickly or let's get on to the fun stuff sorry",
    "start": "1150970",
    "end": "1156930"
  },
  {
    "text": "yes so the equivalent from at the top here was the same as starting the old",
    "start": "1168940",
    "end": "1174800"
  },
  {
    "text": "image so from nginx here was the same as the run nginx we then ran this command",
    "start": "1174800",
    "end": "1180770"
  },
  {
    "text": "the biggest difference is this does it all automatically for us there's a lot easier to read whereas we said from nginx makes Ansari",
    "start": "1180770",
    "end": "1188870"
  },
  {
    "text": "start nginx make some changes save a copy of that file system which actually keeps all of those layers in place so",
    "start": "1188870",
    "end": "1195620"
  },
  {
    "text": "there's actually a reference back to nginx inside of that container image itself cool let's jump over in do",
    "start": "1195620",
    "end": "1204050"
  },
  {
    "text": "securities the last thing I'll just mention before we jump over is we've got container",
    "start": "1204050",
    "end": "1210590"
  },
  {
    "text": "images where do we put them at the point of building and they stay on our local machine and in fact for things like",
    "start": "1210590",
    "end": "1217220"
  },
  {
    "text": "nginx and Alpine or Debian depending on what bearing you have they're stored in docker hub and these are shorthand names",
    "start": "1217220",
    "end": "1224300"
  },
  {
    "text": "for containers stored in different registries so we can pull those",
    "start": "1224300",
    "end": "1229760"
  },
  {
    "text": "container images down we can also push push any custom containers up to our own",
    "start": "1229760",
    "end": "1236390"
  },
  {
    "text": "private container registry so we can access them privately now something like Internet's it's designed to be public so",
    "start": "1236390",
    "end": "1243530"
  },
  {
    "text": "it makes sense to be in a public registry for a private container with our own code I mean we may want it in a",
    "start": "1243530",
    "end": "1250400"
  },
  {
    "text": "private container registry examples of this could be like as a container registry or you can even run your own",
    "start": "1250400",
    "end": "1255860"
  },
  {
    "text": "from scratch if you want to we're not going to dig any further into this but just keep in mind this is the way we",
    "start": "1255860",
    "end": "1261080"
  },
  {
    "text": "actually distribute our container images so if we see any image references container image references from this",
    "start": "1261080",
    "end": "1267170"
  },
  {
    "text": "point forward we're either pulling it from the docker hub directly if it's a public image or we're pulling it from",
    "start": "1267170",
    "end": "1273920"
  },
  {
    "text": "our private container registry if it starts with a particular name",
    "start": "1273920",
    "end": "1279550"
  },
  {
    "text": "okay so what's the challenge with all this containers look really cool and you",
    "start": "1279550",
    "end": "1286030"
  },
  {
    "text": "can run them in production you can grab docker productionize it by itself just just the container runtime and nothing",
    "start": "1286030",
    "end": "1292120"
  },
  {
    "text": "else war one container one host not too",
    "start": "1292120",
    "end": "1297250"
  },
  {
    "text": "bad like you can manage it and a lot of people will actually treat a single container like a Windows service a few",
    "start": "1297250",
    "end": "1303430"
  },
  {
    "text": "containers across a few hosts gets a little bit trickier how do you begin to",
    "start": "1303430",
    "end": "1308470"
  },
  {
    "text": "manage and look after all these things as soon as you have lots of containers across many hosts so it's really a",
    "start": "1308470",
    "end": "1314710"
  },
  {
    "text": "full-time job just stuff just writing docker run on docker stoppable trust me there are people out there that focus",
    "start": "1314710",
    "end": "1320980"
  },
  {
    "text": "fueling under starting and stopping starting and stopping containers but there's a lot more than is actually one",
    "start": "1320980",
    "end": "1327700"
  },
  {
    "text": "who's failures what happens do we move the container there's nothing in a",
    "start": "1327700",
    "end": "1332890"
  },
  {
    "text": "container runtime that's even hosts aware we have to move it ourselves so",
    "start": "1332890",
    "end": "1337960"
  },
  {
    "text": "that means logging into another server spinning it up what happens if that server comes back online which one do we",
    "start": "1337960",
    "end": "1343480"
  },
  {
    "text": "take off which pod do we take offline how do we turn things on and off how do we do service discovery how do we know",
    "start": "1343480",
    "end": "1350080"
  },
  {
    "text": "where these containers actually live how do we know which ones to talk to is this container healthy how do we know if",
    "start": "1350080",
    "end": "1356320"
  },
  {
    "text": "something's healthy or not how to restart it how many copies of things do we run if we want to scale in and out",
    "start": "1356320",
    "end": "1363310"
  },
  {
    "text": "does that mean spinning up a new server installing the dr. runtime container",
    "start": "1363310",
    "end": "1368320"
  },
  {
    "text": "runtime on it and starting the container deploying new versions how do we do updates do we spin them up side by side",
    "start": "1368320",
    "end": "1375270"
  },
  {
    "text": "what's our policy required configuration do we go through and check every single",
    "start": "1375270",
    "end": "1380740"
  },
  {
    "text": "host so that all the right containers are running it if any of these scenarios sound familiar it's actually a perfect",
    "start": "1380740",
    "end": "1387070"
  },
  {
    "text": "use case for kubernetes now you make it into the very first box that blew up",
    "start": "1387070",
    "end": "1392110"
  },
  {
    "text": "which is one container one host a very simple scenario in kubernetes maybe a little bit of overkill for that but for",
    "start": "1392110",
    "end": "1398710"
  },
  {
    "text": "any other scenarios especially any listed here it's really designed to make it a little bit easier so introducing",
    "start": "1398710",
    "end": "1405430"
  },
  {
    "text": "kubernetes what is kubernetes or more importantly what are the headline component",
    "start": "1405430",
    "end": "1411940"
  },
  {
    "text": "that make people gravitate towards kubernetes well the first one is scheduling actually setting up",
    "start": "1411940",
    "end": "1418149"
  },
  {
    "text": "containers across multiple different hosts affinity anti affinity deciding",
    "start": "1418149",
    "end": "1423730"
  },
  {
    "text": "where to actually put these containers health monitoring and failover deciding how to run those workloads in a reliable",
    "start": "1423730",
    "end": "1429639"
  },
  {
    "text": "way scaling being able to scale on scale containers in and out networking service",
    "start": "1429639",
    "end": "1436029"
  },
  {
    "text": "discovery coordinated upgrades but if there's one thing I want you to take away today and this is probably the most",
    "start": "1436029",
    "end": "1443259"
  },
  {
    "text": "basic thing in terms of running workloads kubernetes is a scheduler kubernetes doesn't actually run your",
    "start": "1443259",
    "end": "1450730"
  },
  {
    "text": "containers and this is something that most people will go hang on a second that doesn't sound right no I'm using",
    "start": "1450730",
    "end": "1457059"
  },
  {
    "text": "kubernetes to run my containers no no kubernetes talks to a container runtime that container runtime runs your",
    "start": "1457059",
    "end": "1465820"
  },
  {
    "text": "containers kubernetes is just simply the scheduler that sits on top that orchestrates those container runtimes to",
    "start": "1465820",
    "end": "1472720"
  },
  {
    "text": "do their thing and the reason I offer a reason I'm constantly same container runtime docker while it is the default",
    "start": "1472720",
    "end": "1478659"
  },
  {
    "text": "option here's one of many options that are currently available you can use to a degree any container runtime under",
    "start": "1478659",
    "end": "1485769"
  },
  {
    "text": "kubernetes with its pluggable architecture so big thing to take away kubernetes is a scheduler you still need",
    "start": "1485769",
    "end": "1492879"
  },
  {
    "text": "to contain a runtime on the mix to actually run your containers we know",
    "start": "1492879",
    "end": "1498940"
  },
  {
    "start": "1496000",
    "end": "1543000"
  },
  {
    "text": "it's a scheduler we know confused for a whole lot of things but what is cuvee ninis I mean if we have to have a",
    "start": "1498940",
    "end": "1504220"
  },
  {
    "text": "physical thing that was kubernetes what is it well it's made up of masters and work on notes so our master notes which",
    "start": "1504220",
    "end": "1512139"
  },
  {
    "text": "you may or may not be familiar with depending if you've started with a cloud offering or not is what actually runs",
    "start": "1512139",
    "end": "1517750"
  },
  {
    "text": "kubernetes this is our control plane this is where the brains behind kubernetes actually runs this talks with",
    "start": "1517750",
    "end": "1526029"
  },
  {
    "text": "individual worker nodes which we'll cover in a second to execute workloads on those container runtimes and it's",
    "start": "1526029",
    "end": "1532509"
  },
  {
    "text": "normally a cluster you normally have a set of master nodes because you want it to be highly available a common",
    "start": "1532509",
    "end": "1538750"
  },
  {
    "text": "configuration might be three master nodes five worker nodes now when are each our",
    "start": "1538750",
    "end": "1544480"
  },
  {
    "start": "1543000",
    "end": "1660000"
  },
  {
    "text": "first one hundred-plus slide we're going 0 to 100 today but if you want to go above a hundred and remember a little bit more",
    "start": "1544480",
    "end": "1550340"
  },
  {
    "text": "we can actually look at the rolls inside of cou bonitas itself and Joshua is doing a session a little bit later on",
    "start": "1550340",
    "end": "1556070"
  },
  {
    "text": "today going into a lot of depth around this I believe yeah so if you want to",
    "start": "1556070",
    "end": "1561710"
  },
  {
    "text": "know more about this attending Joshua's given any session a little bit later on but at a call the master contains three",
    "start": "1561710",
    "end": "1567590"
  },
  {
    "text": "key components with regards to kubernetes the API server this is what we talk to to actually create create and",
    "start": "1567590",
    "end": "1576110"
  },
  {
    "text": "set up our configurations the cube scheduler which decides hey which node",
    "start": "1576110",
    "end": "1581420"
  },
  {
    "text": "should these workloads actually sit on and the cube controller manager which actually takes control of all the all",
    "start": "1581420",
    "end": "1587990"
  },
  {
    "text": "the other components inside the ecosystem and I'm being fairly abstract here because we want to talk about",
    "start": "1587990",
    "end": "1593270"
  },
  {
    "text": "correct names in a second thing on top of this if you're running it yourself you'll also have a backing internal",
    "start": "1593270",
    "end": "1599870"
  },
  {
    "text": "database most of the time at Etsy D if you're running it internally you can use external data stores of the",
    "start": "1599870",
    "end": "1605720"
  },
  {
    "text": "configuration as well and if you're running on a cloud chances are you'll also have a cloud configuration manager",
    "start": "1605720",
    "end": "1612380"
  },
  {
    "text": "which is what actually communicates really the underlying cloud provider itself so if we're running custom",
    "start": "1612380",
    "end": "1618740"
  },
  {
    "text": "containers on top of a cloud provider you'll probably have one of these taking",
    "start": "1618740",
    "end": "1624290"
  },
  {
    "text": "it one step further and looking at worker nodes this is just some form of computer like when we're talking about",
    "start": "1624290",
    "end": "1630380"
  },
  {
    "text": "these nodes here these could be virtual machines these could be physical machines these could be raspberry PI's",
    "start": "1630380",
    "end": "1635480"
  },
  {
    "text": "sitting in the corner of your office or something to set up by the way this runs",
    "start": "1635480",
    "end": "1640760"
  },
  {
    "text": "your workloads and the container run timer lives here this is what's actually kicking everything off now something to",
    "start": "1640760",
    "end": "1648590"
  },
  {
    "text": "peek behind the scenes a little bit further everything we've talked about previously is also containers so it's Turtles the whole way down but on the",
    "start": "1648590",
    "end": "1655850"
  },
  {
    "text": "worker node is where you normally think of the click of that container runtime I live in it in reality you have to call kubernetes",
    "start": "1655850",
    "end": "1662990"
  },
  {
    "start": "1660000",
    "end": "1701000"
  },
  {
    "text": "services the couplet which is what actually talks to the container runtime",
    "start": "1662990",
    "end": "1668000"
  },
  {
    "text": "to start and stop your containers and to proxy which is what sets up the",
    "start": "1668000",
    "end": "1673070"
  },
  {
    "text": "networking layer and networking is where things get a little bit more interesting we'll have a chat about that services a little bit later on you also",
    "start": "1673070",
    "end": "1680160"
  },
  {
    "text": "have your container runtime of choice by default this will be docker but you can switch it out if you prefer something",
    "start": "1680160",
    "end": "1686070"
  },
  {
    "text": "slightly different so we have our master nodes and our worker notes our master",
    "start": "1686070",
    "end": "1692760"
  },
  {
    "text": "nodes is where a configuration store this is the brains of the cluster our worker nodes is where our workloads",
    "start": "1692760",
    "end": "1698970"
  },
  {
    "text": "running this is where everything happens so kubernetes is it is is if it has I",
    "start": "1698970",
    "end": "1707460"
  },
  {
    "start": "1701000",
    "end": "1842000"
  },
  {
    "text": "mean we're talking about two degree abstractions we're talking about being",
    "start": "1707460",
    "end": "1712530"
  },
  {
    "text": "able to deploy applications without worrying about underlying operating systems but at the same time we've just",
    "start": "1712530",
    "end": "1717960"
  },
  {
    "text": "spent in the past five minutes talking about virtual machines well in reality it's it's a little bit of a strange",
    "start": "1717960",
    "end": "1723810"
  },
  {
    "text": "space and this is very much my opinion on my take on the story from the is perspective we still have master and",
    "start": "1723810",
    "end": "1730500"
  },
  {
    "text": "worker node management we still need to look after virtual machines but in terms",
    "start": "1730500",
    "end": "1736320"
  },
  {
    "text": "of deploying our applications we don't care about those virtual machines we don't care how many's there we don't care about the underlying network we",
    "start": "1736320",
    "end": "1743070"
  },
  {
    "text": "just give it a deployment and have it run and we're abstracted from those Hardware abstract for those workloads so",
    "start": "1743070",
    "end": "1748740"
  },
  {
    "text": "to a degree kubernetes kind of signs in the middle where there's some components",
    "start": "1748740",
    "end": "1754080"
  },
  {
    "text": "that are very VM forests some components that are very application focused and it",
    "start": "1754080",
    "end": "1759240"
  },
  {
    "text": "really depends on the future side of it that you sit a lot of organisations may choose to have their traditional ops",
    "start": "1759240",
    "end": "1765090"
  },
  {
    "text": "team look after the infrastructure components while letting their developers provision workloads to",
    "start": "1765090",
    "end": "1770640"
  },
  {
    "text": "kubernetes of the self this tour degree gives you the separation of duties between your infrastructure and your app",
    "start": "1770640",
    "end": "1776220"
  },
  {
    "text": "deployment you can break that down further with networking and security and so on and so forth",
    "start": "1776220",
    "end": "1781590"
  },
  {
    "text": "but it's just a little bit of an interesting concept to think about it there's also another option I don't want",
    "start": "1781590",
    "end": "1788040"
  },
  {
    "text": "to manage masters managing masters just means I have a bunch of extra bands laying around can't someone take care of",
    "start": "1788040",
    "end": "1794580"
  },
  {
    "text": "it for me well it just so happens as soon as you move to majority of cloud providers they offer a managed",
    "start": "1794580",
    "end": "1800610"
  },
  {
    "text": "kubernetes service a couple of examples as a community service the Google container engine have to call it out",
    "start": "1800610",
    "end": "1806630"
  },
  {
    "text": "these provide the management plane has a so you're no longer looking after those",
    "start": "1806630",
    "end": "1812490"
  },
  {
    "text": "virtual machines in a turn it's actually moving the master work master node",
    "start": "1812490",
    "end": "1818700"
  },
  {
    "text": "management from being looking after VMs to simple click box configurations and",
    "start": "1818700",
    "end": "1823740"
  },
  {
    "text": "this is incredibly powerful not only does it save you cost in most instances",
    "start": "1823740",
    "end": "1828840"
  },
  {
    "text": "because we're not actually paying for the master nodes themselves but it also means they're managed at scale by",
    "start": "1828840",
    "end": "1835139"
  },
  {
    "text": "someone else to a degree the less control you have the less responsibility you have which is nice in the world so digging into the",
    "start": "1835139",
    "end": "1844049"
  },
  {
    "start": "1842000",
    "end": "1905000"
  },
  {
    "text": "nuts and bolts of kubernetes this is probably where you'll begin to hear a couple of terms of specular if you haven't used kubernetes before that",
    "start": "1844049",
    "end": "1850740"
  },
  {
    "text": "sound vastly different and we're gonna run through them bit by bit with a couple of demos as we go sort of them a",
    "start": "1850740",
    "end": "1856889"
  },
  {
    "text": "pod when we look at kubernetes we don't tend to talk about explicit containers",
    "start": "1856889",
    "end": "1863249"
  },
  {
    "text": "we talk about holds pods are our lowest level deployable unit this is what we",
    "start": "1863249",
    "end": "1870059"
  },
  {
    "text": "spin up a pod can be made up of one or more containers and in my mind I really",
    "start": "1870059",
    "end": "1876450"
  },
  {
    "text": "just wanted to say a pod can be made up of one container because we're only doing 0 to 100 here in reality for the",
    "start": "1876450",
    "end": "1883769"
  },
  {
    "text": "majority of scenarios you will only have a single container in the pot there won't be a large number of them and a",
    "start": "1883769",
    "end": "1889980"
  },
  {
    "text": "pod to a degree is a single instance it is 2 degree taking the critical to cookie-cutter",
    "start": "1889980",
    "end": "1895110"
  },
  {
    "text": "making a stamp and leaving it there most people may think they want pods that",
    "start": "1895110",
    "end": "1901379"
  },
  {
    "text": "they don't necessarily want pods by themselves so a pod has a container",
    "start": "1901379",
    "end": "1909419"
  },
  {
    "start": "1905000",
    "end": "1997000"
  },
  {
    "text": "inside of it a little bit of semantics here your pod technically doesn't run on the containers running inside the pod",
    "start": "1909419",
    "end": "1916049"
  },
  {
    "text": "and they will be allocated to a node but the pod itself will never actually run us so there's nothing special or smart",
    "start": "1916049",
    "end": "1922860"
  },
  {
    "text": "about a pod it's more like a logical boundary as we said before we can have multiple containers inside of this pilot",
    "start": "1922860",
    "end": "1929249"
  },
  {
    "text": "and they can share a networked space so they can talk backwards and forwards between each other and a whole lot of",
    "start": "1929249",
    "end": "1934590"
  },
  {
    "text": "other components that you can set out on where you would use this sort of scenario if you wanted logging or monitoring or",
    "start": "1934590",
    "end": "1942240"
  },
  {
    "text": "have you put enough buzzwords in this presentation so far if you want to do a service match using sto and take a",
    "start": "1942240",
    "end": "1948640"
  },
  {
    "text": "completely different approach to networking that's when you'd use multiple containers inside of part because of HOD is the smallest unit we",
    "start": "1948640",
    "end": "1956320"
  },
  {
    "text": "can deploy it's also the items that we scale so if all of a sudden we deploy",
    "start": "1956320",
    "end": "1961560"
  },
  {
    "text": "two containers to a pod it means we could never scale those two containers",
    "start": "1961560",
    "end": "1966750"
  },
  {
    "text": "independently the life cycle of all containers within a pod is stuck",
    "start": "1966750",
    "end": "1972550"
  },
  {
    "text": "together it's kind of like gluing containers together and saying these are eight unit and that's it so for 0 to 100",
    "start": "1972550",
    "end": "1980230"
  },
  {
    "text": "stick with this this is nice this is easy it's simple and it makes a lot of sense and this is why if you read",
    "start": "1980230",
    "end": "1987310"
  },
  {
    "text": "through a lot of online documentation people will actually mix up and I could do it from time to time container",
    "start": "1987310",
    "end": "1992440"
  },
  {
    "text": "important because there's really that one-to-one relationship from the majority of scenarios sort of let's spin",
    "start": "1992440",
    "end": "1998800"
  },
  {
    "text": "up a single pot I'm gonna jump back to my demo virtual machining and the first",
    "start": "1998800",
    "end": "2005400"
  },
  {
    "text": "thing I'm going to show you is well I want to get started with kubernetes and I'm really really lazy like really lazy",
    "start": "2005400",
    "end": "2012480"
  },
  {
    "text": "so I don't want to set up a cluster I don't want too many virtual machines I don't want to do anything fancy we'll",
    "start": "2012480",
    "end": "2018510"
  },
  {
    "text": "just so happens docker desktop actually contains kubernetes as well which is rather nice if you open up the docker",
    "start": "2018510",
    "end": "2025260"
  },
  {
    "text": "desktop there's a kubernetes tab down the bottom that allows you to click a",
    "start": "2025260",
    "end": "2030720"
  },
  {
    "text": "button enable kubernetes and you're good to go this is great for local development this means you can run it",
    "start": "2030720",
    "end": "2036630"
  },
  {
    "text": "locally to your heart's content there are alternatives to this as well things like the mini cube entirely contained",
    "start": "2036630",
    "end": "2042330"
  },
  {
    "text": "kubernetes environments that you can use for development and testing purposes so",
    "start": "2042330",
    "end": "2049200"
  },
  {
    "text": "we're going to be working with this today the first thing I'm going to do and we're going to do this through",
    "start": "2049200",
    "end": "2054540"
  },
  {
    "text": "docker for through the docker desktop interface first we're going to do it through the command line a little bit",
    "start": "2054540",
    "end": "2059878"
  },
  {
    "text": "later on I'm going to choose what context I want to be looking at and vastly simplifying context this is the",
    "start": "2059879",
    "end": "2067950"
  },
  {
    "text": "cluster that we're pointed to so in this case I set my context to docker desktop now",
    "start": "2067950",
    "end": "2075179"
  },
  {
    "text": "what does that mean our context contains a pointer and some authentication",
    "start": "2075179",
    "end": "2081118"
  },
  {
    "text": "details to a cluster or more importantly to that API server we were talking about before that sits on the master in order",
    "start": "2081119",
    "end": "2088290"
  },
  {
    "text": "to administer and work with a kubernetes cluster we tend to use tube control now",
    "start": "2088290",
    "end": "2093990"
  },
  {
    "text": "there are graphical interfaces for kubernetes you can install a really nice portal and have a great graphical",
    "start": "2093990",
    "end": "2099930"
  },
  {
    "text": "experience please start when you're starting start with the command line it makes it a lot",
    "start": "2099930",
    "end": "2106080"
  },
  {
    "text": "easier to understand what's happening it's a little bit quicker and all the commands you learn and learn as you go",
    "start": "2106080",
    "end": "2112290"
  },
  {
    "text": "will actually be used diagnosing later on when you've got an issue being able to pull logs this way it's a lot easier",
    "start": "2112290",
    "end": "2118320"
  },
  {
    "text": "there's a whole lot of niceties that you can add at the end of the day the command line is the place to start so",
    "start": "2118320",
    "end": "2124369"
  },
  {
    "text": "like we had docker which was the CLI that talked to the dock adamian we have cube controller which in turn",
    "start": "2124369",
    "end": "2131609"
  },
  {
    "text": "talks to our kubernetes api server so this allows us to talk backwards and",
    "start": "2131609",
    "end": "2137010"
  },
  {
    "text": "forwards so I'm gonna do a coop control and let's do a - - help love - - help",
    "start": "2137010",
    "end": "2143040"
  },
  {
    "text": "this is the first place to start so this is everything we can do with kubernetes oh sorry with coop controller the first",
    "start": "2143040",
    "end": "2150300"
  },
  {
    "text": "thing we'll look at is a get also because I want to make sure the demo I tested before this is already spawned",
    "start": "2150300",
    "end": "2155310"
  },
  {
    "text": "out so if we do it with cout control get and we can specify the object that we'd",
    "start": "2155310",
    "end": "2161130"
  },
  {
    "text": "like to get and we've only really explored one so far Halas so if I say coop control get pods awesome",
    "start": "2161130",
    "end": "2169410"
  },
  {
    "text": "still hasn't my last demo hasn't that's alright so our cube control get pods",
    "start": "2169410",
    "end": "2176280"
  },
  {
    "text": "allows us to see what pods are running within an environment now what if we",
    "start": "2176280",
    "end": "2182609"
  },
  {
    "text": "actually want to deploy a pocket well originally I was going to do it through the command line but please don't do",
    "start": "2182609",
    "end": "2188160"
  },
  {
    "text": "that it's been deprecated don't create things directly through the command line templates are the way to go to because",
    "start": "2188160",
    "end": "2194070"
  },
  {
    "text": "templates are a little bit easier to read so what does a pod template look",
    "start": "2194070",
    "end": "2200130"
  },
  {
    "text": "like won't as we saw before a pod was that outer boundary so",
    "start": "2200130",
    "end": "2205710"
  },
  {
    "text": "and this is the Yammer format that will be seeing everything in today for a pod but we have an API version this is an",
    "start": "2205710",
    "end": "2211830"
  },
  {
    "text": "internal internal indicator kuba needless to say what API which we'll be using things we've got our climate which",
    "start": "2211830",
    "end": "2217920"
  },
  {
    "text": "is a pod and then we've got some metadata and the metadata will become a little bit quite important a little bit",
    "start": "2217920",
    "end": "2223890"
  },
  {
    "text": "later on but for the moment we're just using it to name this pod and inside",
    "start": "2223890",
    "end": "2229320"
  },
  {
    "text": "this we can list containers I've got one container here we could have many if we",
    "start": "2229320",
    "end": "2234780"
  },
  {
    "text": "want this is the smallest deployable unit in kubernetes so how do we actually deploy this and get this run run well we",
    "start": "2234780",
    "end": "2242970"
  },
  {
    "text": "come back here I'm gonna change into my demo environment and another quick tip",
    "start": "2242970",
    "end": "2250349"
  },
  {
    "text": "for those looking at getting started really quickly there are two ways to apply configuration you can do it file",
    "start": "2250349",
    "end": "2255390"
  },
  {
    "text": "by file or just apply the entire directory in one go and be done with it now applying the entire directory is",
    "start": "2255390",
    "end": "2261390"
  },
  {
    "text": "fantastic when you know the order of things though you've only got one file in there if you go to deploy one file",
    "start": "2261390",
    "end": "2268470"
  },
  {
    "text": "and you have hundreds in there and you apply the entire directory it gets very messy very quick so to start off with",
    "start": "2268470",
    "end": "2274680"
  },
  {
    "text": "we're just going to apply a single file so we're gonna do a cube control apply -",
    "start": "2274680",
    "end": "2280650"
  },
  {
    "text": "earth so we're saying we want to apply a file here we want to apply the template that we just saw and in to this we're going",
    "start": "2280650",
    "end": "2286650"
  },
  {
    "text": "to pass our young your file so this is you're pointing to the file we had a look at kicking this off we'll say hey",
    "start": "2286650",
    "end": "2292770"
  },
  {
    "text": "the pod is created and ready to go so if we now do a cube control get your hops",
    "start": "2292770",
    "end": "2298730"
  },
  {
    "text": "we can see that at the top there our demo - pod is running and happy and healthy the only problem is we've said",
    "start": "2298730",
    "end": "2307470"
  },
  {
    "text": "hey run a pod and that's it what if that hard crashes and burns irrecoverable",
    "start": "2307470",
    "end": "2314089"
  },
  {
    "text": "what if the node it's on shuts down and stops the two-degree",
    "start": "2314089",
    "end": "2319800"
  },
  {
    "text": "disappears it stops it stops working upon by itself doesn't give you any form",
    "start": "2319800",
    "end": "2326369"
  },
  {
    "text": "of kubernetes resiliency to integrate so the container by itself depending on its",
    "start": "2326369",
    "end": "2332580"
  },
  {
    "text": "restart policy may kick itself back off at the crashes but it won't by default",
    "start": "2332580",
    "end": "2337920"
  },
  {
    "text": "move it across nodes we have think it'll level above a pod - actually to actually get any form of resiliency",
    "start": "2337920",
    "end": "2344220"
  },
  {
    "text": "in the infrastructure so the opposite of a cube control apply is acute control",
    "start": "2344220",
    "end": "2350190"
  },
  {
    "text": "delete and once again we can just pass in a file and it will use the names in",
    "start": "2350190",
    "end": "2356430"
  },
  {
    "text": "the file itself to remove those components so as I can do a cube control applied to create the deployment sorry",
    "start": "2356430",
    "end": "2363840"
  },
  {
    "text": "to create the template a cube control delete will remove all enemy elements within the template these two commands",
    "start": "2363840",
    "end": "2370650"
  },
  {
    "text": "will become your best friends in terms of working with kubernetes templates and spinning things I'll come down so that",
    "start": "2370650",
    "end": "2376500"
  },
  {
    "text": "pods been deleted it will get off and leave in a couple of seconds awesome",
    "start": "2376500",
    "end": "2384080"
  },
  {
    "start": "2382000",
    "end": "2511000"
  },
  {
    "text": "we're talking about a single pilot and please don't use single naked pods",
    "start": "2384600",
    "end": "2389790"
  },
  {
    "text": "they're not designed to be used that way it's a pod is great if you just need",
    "start": "2389790",
    "end": "2395640"
  },
  {
    "text": "something to run but it doesn't give you any layers of protection what most people will tend to refuse is one level",
    "start": "2395640",
    "end": "2402630"
  },
  {
    "text": "up from a pod which is a replica set and a replica set is a way of defining a",
    "start": "2402630",
    "end": "2407760"
  },
  {
    "text": "template for a pod and give it a count of how many we want what this looks like",
    "start": "2407760",
    "end": "2415080"
  },
  {
    "text": "in reality is this now there's an interesting concept here the pods don't",
    "start": "2415080",
    "end": "2420390"
  },
  {
    "text": "live inside the replica set the replica set is responsible for spinning up those pods but they don't explicitly leave it",
    "start": "2420390",
    "end": "2427590"
  },
  {
    "text": "inside they're just they're just pods at the end of the day what the replica set does have though is its template and",
    "start": "2427590",
    "end": "2433740"
  },
  {
    "text": "that template allows us to define what is deployed in this case if we said we",
    "start": "2433740",
    "end": "2438780"
  },
  {
    "text": "want to replicas the replica set will spin up those pods on our behalf for us",
    "start": "2438780",
    "end": "2444300"
  },
  {
    "text": "this is powerful because if we now say hey I want three replicas we have three",
    "start": "2444300",
    "end": "2450300"
  },
  {
    "text": "pods running on if I then change that back down to two we now have two pods running likewise if while running two",
    "start": "2450300",
    "end": "2459600"
  },
  {
    "text": "pods a a node goes down we lose a pod somehow it just disappears into the",
    "start": "2459600",
    "end": "2465240"
  },
  {
    "text": "ether or we explicitly kill the bottle the replica sets gonna realize hang on a",
    "start": "2465240",
    "end": "2471660"
  },
  {
    "text": "second I've only got one hot running evening I've just received an event in so I'm actually gonna spin",
    "start": "2471660",
    "end": "2477460"
  },
  {
    "text": "up a brand new pod in its place so a replica set is basically guaranteeing",
    "start": "2477460",
    "end": "2482920"
  },
  {
    "text": "that we're always running two copies of this template now what most people",
    "start": "2482920",
    "end": "2488559"
  },
  {
    "text": "actually want when they start using kubernetes is basically this I want one",
    "start": "2488559",
    "end": "2494170"
  },
  {
    "text": "replica of this pod and guarantee that I will always have one copy of this pod",
    "start": "2494170",
    "end": "2500410"
  },
  {
    "text": "running so if we were to delete this pod if we were to take down a node if we were to somehow destroy the pod the",
    "start": "2500410",
    "end": "2507579"
  },
  {
    "text": "replica set would re spin up that hot Forks sort of them let's actually have a",
    "start": "2507579",
    "end": "2513400"
  },
  {
    "text": "bit of a dive into it so just as before we're gonna have a look at the template behind it and then apply it and have a",
    "start": "2513400",
    "end": "2520150"
  },
  {
    "text": "bit of a play lately so a replica set it is a little bit longer than just a straight part here we have our here we",
    "start": "2520150",
    "end": "2528579"
  },
  {
    "text": "have our replica set at the top we have a selector and we'll get back to that in a second and a template and the template",
    "start": "2528579",
    "end": "2536170"
  },
  {
    "text": "should look exactly the same to a degree as our pod definition this is absolutely",
    "start": "2536170",
    "end": "2542740"
  },
  {
    "text": "fantastic because it means we can reuse some of those components and under the hood this is just a pod template the",
    "start": "2542740",
    "end": "2548079"
  },
  {
    "text": "important thing to note here is our match labels and I've given these all different names on purpose because",
    "start": "2548079",
    "end": "2554140"
  },
  {
    "text": "there's no explicit relationship between a replica set and a pod we have to define one so this is where we're saying",
    "start": "2554140",
    "end": "2561160"
  },
  {
    "text": "that hey any pod we spin on give it this application name and make sure it",
    "start": "2561160",
    "end": "2566559"
  },
  {
    "text": "matches this label when it promised so let's spin this up and have a good",
    "start": "2566559",
    "end": "2573119"
  },
  {
    "text": "awesome so the replicas created if we now do a cube CTL get pods we should see that our",
    "start": "2579969",
    "end": "2587690"
  },
  {
    "text": "demo three has two replicas spun up and ready to go were all up and running if",
    "start": "2587690",
    "end": "2592699"
  },
  {
    "text": "we were to kill one of those pots for example so if I was to now do a cube CTL",
    "start": "2592699",
    "end": "2599979"
  },
  {
    "text": "delete pod and then pass in this name terminate it to get rid of it so there's",
    "start": "2599979",
    "end": "2606079"
  },
  {
    "text": "now only one code running what we'll find is it's already started spinning up",
    "start": "2606079",
    "end": "2611749"
  },
  {
    "text": "a brand new container in its place because it's figured out that hey this container is stopped we can also see if",
    "start": "2611749",
    "end": "2617690"
  },
  {
    "text": "we set - wide that these are running",
    "start": "2617690",
    "end": "2622699"
  },
  {
    "text": "across multiple different no sorry this is on my local machine so they're all running on the same node in reality if",
    "start": "2622699",
    "end": "2628969"
  },
  {
    "text": "we had a multiple Network node cluster these would be spread across those now",
    "start": "2628969",
    "end": "2634609"
  },
  {
    "text": "one thing to keep in mind we can change the replica count we can't change the template technically you can but bad",
    "start": "2634609",
    "end": "2643039"
  },
  {
    "text": "things happen replica sets are great if we want to run on one thing and that's it but what if",
    "start": "2643039",
    "end": "2648199"
  },
  {
    "text": "we want to continuously update it increment over the top of it well that's when we begin to use deployments before",
    "start": "2648199",
    "end": "2655969"
  },
  {
    "text": "I do that a quick another hundred 100 plus wide there are more than just replica setters there are jobs staple",
    "start": "2655969",
    "end": "2662539"
  },
  {
    "text": "sets Damon says that all have their own intrinsics on how they run on the cluster level above a replica set it is",
    "start": "2662539",
    "end": "2669469"
  },
  {
    "text": "a deployment and a deployment is responsible for creating multiple replicas CETIS as updates come in",
    "start": "2669469",
    "end": "2675680"
  },
  {
    "text": "the nice thing about this is we can actually roll back our changes of nice graphic so we have a deployment you'll",
    "start": "2675680",
    "end": "2682910"
  },
  {
    "text": "notice the deployments is to the side of the replica set it's all staying the same familiar a deployment contained the",
    "start": "2682910",
    "end": "2688640"
  },
  {
    "text": "template and template is then deployed into the replica set in turn then",
    "start": "2688640",
    "end": "2694249"
  },
  {
    "text": "deploys the individual pods if we change our container template to v2 for example",
    "start": "2694249",
    "end": "2700849"
  },
  {
    "text": "the deployment spins up a brand new replica set and starts provisioning pods within there automatically if this is",
    "start": "2700849",
    "end": "2708229"
  },
  {
    "text": "successful then it'll reduce the number of replicas that are on our original replica set",
    "start": "2708229",
    "end": "2713930"
  },
  {
    "text": "until it hits zero and until we have the correct number of replicas on our new target replica set we can also fail back",
    "start": "2713930",
    "end": "2721849"
  },
  {
    "start": "2720000",
    "end": "2994000"
  },
  {
    "text": "using this method of actually undoing that change failing back to that old replica set so if we jumped in now and",
    "start": "2721849",
    "end": "2728720"
  },
  {
    "text": "have a look at what a deployment looks like and this is going to be the surprise of the day if it looks exactly",
    "start": "2728720",
    "end": "2734390"
  },
  {
    "text": "the same the only thing that really changes here is that it's a kind deployment instead of a kind' replica",
    "start": "2734390",
    "end": "2740450"
  },
  {
    "text": "set it that's it a deployment is really just an abstract constructor on top of this to allow ease of deployment so",
    "start": "2740450",
    "end": "2747910"
  },
  {
    "text": "let's jump back in and do a cube control",
    "start": "2747910",
    "end": "2757150"
  },
  {
    "text": "delete this is the fun of doing",
    "start": "2757150",
    "end": "2763010"
  },
  {
    "text": "everything live on stage cool clean out our old one let's change across to our demo for",
    "start": "2763010",
    "end": "2769839"
  },
  {
    "text": "awesome so same command again you see the CTO apply - yep and instead of",
    "start": "2769839",
    "end": "2777079"
  },
  {
    "text": "giving it a file I'm just gonna do dot dot means hey just do everything in this follow and it's created the deployment",
    "start": "2777079",
    "end": "2784400"
  },
  {
    "text": "so if we do a cube CTL get in deployments we should see that there's a",
    "start": "2784400",
    "end": "2789920"
  },
  {
    "text": "deployment there ready to go you'll notice that our ready is zero of two this is saying what's available if we do",
    "start": "2789920",
    "end": "2797420"
  },
  {
    "text": "a cube CTL get replica set it we can see",
    "start": "2797420",
    "end": "2803329"
  },
  {
    "text": "that there is this is why you should always clean up things give me 30",
    "start": "2803329",
    "end": "2809119"
  },
  {
    "text": "seconds let's clean everything up make sure it's",
    "start": "2809119",
    "end": "2816800"
  },
  {
    "text": "disappeared and recreate everything from scratch cook so we now should have our",
    "start": "2816800",
    "end": "2823310"
  },
  {
    "text": "deployment sitting minute we should now have our replica set one replica set it",
    "start": "2823310",
    "end": "2830210"
  },
  {
    "text": "because I didn't clean up doing my pre demo testing and we've got two replicas in there if we now do a cube control get",
    "start": "2830210",
    "end": "2836660"
  },
  {
    "text": "hot we should Cesar there's two pods they're running and ready to go if we were to",
    "start": "2836660",
    "end": "2842870"
  },
  {
    "text": "change on deployment so for example change this this is demo number four and",
    "start": "2842870",
    "end": "2850060"
  },
  {
    "text": "this is just outputting to the log in the background as a sample template workload so if we change this template",
    "start": "2850060",
    "end": "2856810"
  },
  {
    "text": "kick this off again and apply the same thing apply the configure over the top",
    "start": "2856810",
    "end": "2863560"
  },
  {
    "text": "don't apply the template over the top we see it's being configured now if we have",
    "start": "2869560",
    "end": "2875540"
  },
  {
    "text": "a look at our deployments you'll see that there are two ready only one of",
    "start": "2875540",
    "end": "2882170"
  },
  {
    "text": "them is up to date and tour available and it's because I wasn't quick enough to do this if we do a cute control get",
    "start": "2882170",
    "end": "2889400"
  },
  {
    "text": "pots we should actually see that our old two pods are terminated and our new two",
    "start": "2889400",
    "end": "2894650"
  },
  {
    "text": "pods are running and ready to go if we then have a look at our replica sets we",
    "start": "2894650",
    "end": "2900620"
  },
  {
    "text": "can see there's now two so it created a new replica set once it was able to",
    "start": "2900620",
    "end": "2905870"
  },
  {
    "text": "provision and spin up pods with that replica set it deep provisioned the old ones allowing us to failover now we can",
    "start": "2905870",
    "end": "2912320"
  },
  {
    "text": "also issue an undo command here to fail back but in the interest of time I'm gonna skip on a little bit it's got a",
    "start": "2912320",
    "end": "2917720"
  },
  {
    "text": "little bit more to cover this is great we can run workloads in a reliable way",
    "start": "2917720",
    "end": "2923870"
  },
  {
    "text": "we can define our deployments which allows us to update those workloads to our hearts content how do we actually",
    "start": "2923870",
    "end": "2930260"
  },
  {
    "text": "talk to these workloads though if I'm running on my local computer then that's not too bad I can use my local IP but if",
    "start": "2930260",
    "end": "2937460"
  },
  {
    "text": "we've got a cluster of a couple of different nodes comes a little bit more difficult especially if I want port 80",
    "start": "2937460",
    "end": "2944120"
  },
  {
    "text": "to be used between multiple feelings and we'll get to that in a moment it comes incredibly complex well we can actually",
    "start": "2944120",
    "end": "2950960"
  },
  {
    "text": "define services and a service is very simply sitting on top of all of this and",
    "start": "2950960",
    "end": "2958130"
  },
  {
    "text": "points directly to the pods themselves and it's two degrees of locator saying hey I want to talk to this service which",
    "start": "2958130",
    "end": "2965089"
  },
  {
    "text": "in turn talks to these pots we also have the ability to change how we publish our",
    "start": "2965089",
    "end": "2972019"
  },
  {
    "text": "services we can say that it's cluster IP which by default is internal only so we",
    "start": "2972019",
    "end": "2977809"
  },
  {
    "text": "can't talk to this service but we can also say no port if we want to make it available on every node as a thought",
    "start": "2977809",
    "end": "2984410"
  },
  {
    "text": "itself or in cloud scenarios we can use load balancer and load balancer",
    "start": "2984410",
    "end": "2989450"
  },
  {
    "text": "basically means spin up a load balancer on my behalf and set it up taking",
    "start": "2989450",
    "end": "2997009"
  },
  {
    "start": "2994000",
    "end": "3277000"
  },
  {
    "text": "everything one step further as we do I'm gonna switch context now so I'm gonna do a cube CTO and switch to a IKS cluster",
    "start": "2997009",
    "end": "3006009"
  },
  {
    "text": "rather than my local cluster because I want something on the public internet I'm gonna do context cool and we can see",
    "start": "3006009",
    "end": "3021309"
  },
  {
    "text": "all the different contexts that we've got there in this case we've got the NDC's demo that we can change to so I",
    "start": "3021309",
    "end": "3026440"
  },
  {
    "text": "can now do a use context to switch and this is basically switching from one",
    "start": "3026440",
    "end": "3032049"
  },
  {
    "text": "cluster to another in DC demo and now we've switched across so instead of",
    "start": "3032049",
    "end": "3037690"
  },
  {
    "text": "pointing towards my local kubernetes cluster I'm now pointing to a cluster up in Azure just so we can have some",
    "start": "3037690",
    "end": "3044799"
  },
  {
    "text": "publicly public Ivies attached to this thing so for a service we add another",
    "start": "3044799",
    "end": "3051460"
  },
  {
    "text": "component to our Yammer so this isn't an extension to the deployment it's a new resource that",
    "start": "3051460",
    "end": "3057700"
  },
  {
    "text": "we're adding side-by-side so down the bottom here we've got the deployment very similar to the last edit instead of",
    "start": "3057700",
    "end": "3065109"
  },
  {
    "text": "giving it a dummy workload this time I'm giving it n genetics the same thing we used previously the only difference here",
    "start": "3065109",
    "end": "3071739"
  },
  {
    "text": "is we now have a service of the top now we have a selector again and a selector",
    "start": "3071739",
    "end": "3079479"
  },
  {
    "text": "is what holes should this service look to walls so you'll notice that my pods",
    "start": "3079479",
    "end": "3086469"
  },
  {
    "text": "have similar labels of demo 5 service app and that's the selector that it",
    "start": "3086469",
    "end": "3093729"
  },
  {
    "text": "actually uses to point to those services without a selector you'll service 1.2",
    "start": "3093729",
    "end": "3099009"
  },
  {
    "text": "anything you need a selected actually say what you wanted to point towards now in all these templates and they'll be",
    "start": "3099009",
    "end": "3105009"
  },
  {
    "text": "available in github afterwards I've given everything different names the main reason because when you first",
    "start": "3105009",
    "end": "3110170"
  },
  {
    "text": "read through one of these templates everything's given the same name and you have no idea what is what so I like to",
    "start": "3110170",
    "end": "3116680"
  },
  {
    "text": "give them explicit names to spell it out of it sort of deploying this we're gonna jump back in to our last folder actually",
    "start": "3116680",
    "end": "3123819"
  },
  {
    "text": "we're gonna do to make sure we cleaned",
    "start": "3123819",
    "end": "3129130"
  },
  {
    "text": "up perfect I'm gonna jump back I'm going to going to demo 5 and let's do a cute CTL apply",
    "start": "3129130",
    "end": "3138029"
  },
  {
    "text": "everything in the folder and you'll now notice that there's two lines that have come out we've deployed both our",
    "start": "3138029",
    "end": "3143259"
  },
  {
    "text": "deployment which contains our replica set which contains our pods as well as",
    "start": "3143259",
    "end": "3148510"
  },
  {
    "text": "our service now this is actually going to take a couple of minutes to spit up so we're gonna jump on and come back to",
    "start": "3148510",
    "end": "3154360"
  },
  {
    "text": "it one thing to know when we do a cube CTL services you'll actually see here",
    "start": "3154360",
    "end": "3163210"
  },
  {
    "text": "that it's been given in an internal address in the cluster we also have an external IP pending what this is",
    "start": "3163210",
    "end": "3170140"
  },
  {
    "text": "actually doing in the background is spinning up an agile load balancer on our behalf to talk to this cluster and",
    "start": "3170140",
    "end": "3175690"
  },
  {
    "text": "this could be perfectly honest is the easiest way to get inbound traffic into an a KS cluster so running on top of",
    "start": "3175690",
    "end": "3181780"
  },
  {
    "text": "agile if you're running this yourself you may not have access to these sort of load balancers so there are other",
    "start": "3181780",
    "end": "3188260"
  },
  {
    "text": "options we won't dive too deep into it today but running in the cloud makes things easier a little bit of a surprise",
    "start": "3188260",
    "end": "3194260"
  },
  {
    "text": "surprise so that will kick off and do its thing boom we've got an external I panic if we",
    "start": "3194260",
    "end": "3199690"
  },
  {
    "text": "were to hit this external IP we should hopefully get the welcome to nginx done",
    "start": "3199690",
    "end": "3205180"
  },
  {
    "text": "so successfully to find a deployment to find our pods set a service and attach",
    "start": "3205180",
    "end": "3210730"
  },
  {
    "text": "to an external load balancer to this all in maybe 10 lines of Yammer now exposing",
    "start": "3210730",
    "end": "3218800"
  },
  {
    "text": "services is great and especially handy if you want multiple containers to talk to each other internally but sometimes",
    "start": "3218800",
    "end": "3225250"
  },
  {
    "text": "you need a little bit more control or more importantly you want more control without taking on responsibilities this",
    "start": "3225250",
    "end": "3231850"
  },
  {
    "text": "is where ingress comes into play say for example you need multiple containers speaking on the one IP on the",
    "start": "3231850",
    "end": "3239200"
  },
  {
    "text": "one URL but with different paths you can use ingress ingress rules to define",
    "start": "3239200",
    "end": "3245110"
  },
  {
    "text": "paths that should be routed to containers and the classic example here is I have two services surface a and",
    "start": "3245110",
    "end": "3252940"
  },
  {
    "text": "service be listening on port 80 I want to create an ingress rule and say /foo",
    "start": "3252940",
    "end": "3258910"
  },
  {
    "text": "should go to service a slash bar should go to service billing now under the hood this uses an ingress",
    "start": "3258910",
    "end": "3264910"
  },
  {
    "text": "controller which we skipped over a couple seconds ago I'm just using nginx here but feel free to use whatever",
    "start": "3264910",
    "end": "3270700"
  },
  {
    "text": "ingress controller you like whether it be traffic or there's a whole lotta different options out there",
    "start": "3270700",
    "end": "3277170"
  },
  {
    "start": "3277000",
    "end": "3600000"
  },
  {
    "text": "this is a little bit of good fun now template looks very similar to what we",
    "start": "3277180",
    "end": "3284990"
  },
  {
    "text": "saw previously where we have two services the biggest difference here is",
    "start": "3284990",
    "end": "3290180"
  },
  {
    "text": "these services don't have a type of load balancer specified yes so we're not",
    "start": "3290180",
    "end": "3299270"
  },
  {
    "text": "actually showing we're not actually saying these should be external these are only internal to the cluster so we",
    "start": "3299270",
    "end": "3304940"
  },
  {
    "text": "have two services one for service B and one for service a we have our",
    "start": "3304940",
    "end": "3310820"
  },
  {
    "text": "deployments exactly as we saw them in the previous step these are literally just copied and pasted with just",
    "start": "3310820",
    "end": "3316490"
  },
  {
    "text": "services fee and services changed in the names and we're also using a custom of",
    "start": "3316490",
    "end": "3322070"
  },
  {
    "text": "container pulled from an azure container registry instead of how to point for the second",
    "start": "3322070",
    "end": "3328160"
  },
  {
    "text": "one the only new thing we have down the bottom here is our ingress rules and is basically defined for /foo point this to",
    "start": "3328160",
    "end": "3336680"
  },
  {
    "text": "service a four slash bar pointless to service Bailey that's it",
    "start": "3336680",
    "end": "3342950"
  },
  {
    "text": "that's the high level constructs we need to get this up and running on it so if I'm now to cube CTL delete delete",
    "start": "3342950",
    "end": "3353630"
  },
  {
    "text": "everything off then jump into my last demo perfect and do a cube CTL applied",
    "start": "3353630",
    "end": "3363080"
  },
  {
    "text": "to it and apply that template you notice we have a lot of things deployed now more than more than the two resources we",
    "start": "3363080",
    "end": "3369170"
  },
  {
    "text": "had before the biggest thing we actually get now is those two services created as well as this ingress rule now this is",
    "start": "3369170",
    "end": "3377390"
  },
  {
    "text": "where we're going to jump a little bit behind the curtains in order to talk to these ingress rules we needed to have",
    "start": "3377390",
    "end": "3382430"
  },
  {
    "text": "deployed an ingress controller look at what ingress control you want to work with and follow the guidance there's",
    "start": "3382430",
    "end": "3388670"
  },
  {
    "text": "normally a one step helmet chart or similar to use totally out of scope for today but in order to see what I hear",
    "start": "3388670",
    "end": "3395750"
  },
  {
    "text": "that ingress controller is listening on we can do a cube control get services",
    "start": "3395750",
    "end": "3401570"
  },
  {
    "text": "and instead of getting services that are available here I'm actually",
    "start": "3401570",
    "end": "3407480"
  },
  {
    "text": "gonna switch it to another namespace and a little bit out out of the scope of today but it basically allows us to",
    "start": "3407480",
    "end": "3413000"
  },
  {
    "text": "logically segregate different workloads so I'm gonna do def - name space ingress",
    "start": "3413000",
    "end": "3420950"
  },
  {
    "text": "- basic which is and you'll notice that we have our ingress controller sitting",
    "start": "3420950",
    "end": "3426560"
  },
  {
    "text": "inside of here which has an external IP and that external IP when we talk to it",
    "start": "3426560",
    "end": "3432830"
  },
  {
    "text": "with slash through we get service a slash bar we get service so ingress",
    "start": "3432830",
    "end": "3443150"
  },
  {
    "text": "controllers are incredibly powerful now I actually marked these sliders 100 + start off with just services and",
    "start": "3443150",
    "end": "3449870"
  },
  {
    "text": "deployments keep it simple alright let's switch back very quickly",
    "start": "3449870",
    "end": "3456650"
  },
  {
    "text": "and I'm gonna do a rapid-fire",
    "start": "3456650",
    "end": "3462020"
  },
  {
    "text": "run-through of things you might be interested in it but don't necessarily don't necessarily know the names of so",
    "start": "3462020",
    "end": "3468980"
  },
  {
    "text": "these are all beyond the scope of today's session and the reason I'm doing them quickfire is just so you're aware of them we can auto scale we can scale",
    "start": "3468980",
    "end": "3477140"
  },
  {
    "text": "our pods horizontally in and out based on metrics we can scale our nodes our underlying compute in and out as well",
    "start": "3477140",
    "end": "3483140"
  },
  {
    "text": "depending on the provider meaning you can add completely elastic workloads this does not come by default you need",
    "start": "3483140",
    "end": "3489590"
  },
  {
    "text": "to put it in your configuration kubernetes doesn't instantly mean auto scaling it just gives you the ability to",
    "start": "3489590",
    "end": "3495740"
  },
  {
    "text": "set up auto scaling lower units we haven't talked anything about stateful",
    "start": "3495740",
    "end": "3500960"
  },
  {
    "text": "workloads this ability to attach storage in such a way that you can run database",
    "start": "3500960",
    "end": "3506120"
  },
  {
    "text": "service stateful workloads whatever you want namespaces give us logical",
    "start": "3506120",
    "end": "3511250"
  },
  {
    "text": "isolation on top of the cluster so we can have one area for team one one area for team two one area for dev one area",
    "start": "3511250",
    "end": "3517550"
  },
  {
    "text": "of the test affinity and anti affinity we can control where can where pods are",
    "start": "3517550",
    "end": "3522800"
  },
  {
    "text": "placed in terms of keeping them close to each other or as far away as possible we have tanks and toleration and I'm going",
    "start": "3522800",
    "end": "3529400"
  },
  {
    "text": "really quickly so tenkan toleration this allows us to define what pods should be",
    "start": "3529400",
    "end": "3534530"
  },
  {
    "text": "run on what nodes with hard limits great example here I only want this pod to run",
    "start": "3534530",
    "end": "3540920"
  },
  {
    "text": "on a node that has a GPU attached that has some form of extra compute or some specialty resource quotas we can also",
    "start": "3540920",
    "end": "3548270"
  },
  {
    "text": "begin to limit how much memory I'll contain it containers and pods can actually use Azure kubernetes service",
    "start": "3548270",
    "end": "3556300"
  },
  {
    "text": "run it in the cloud that's all I'm gonna say give this a go it's really easy to provision and for time reasons we're",
    "start": "3556300",
    "end": "3563360"
  },
  {
    "text": "gonna skip the demo of spinning it up the biggest thing to remember is you",
    "start": "3563360",
    "end": "3568970"
  },
  {
    "text": "have no master nodes you don't pay for that compute the control plane is free",
    "start": "3568970",
    "end": "3574700"
  },
  {
    "text": "which all of a sudden it saves you the cost of three virtual machines the powered kubernetes though is the fact",
    "start": "3574700",
    "end": "3580040"
  },
  {
    "text": "that you could run it on premium in a remote environment but somewhere isolated that doesn't have access to a",
    "start": "3580040",
    "end": "3586040"
  },
  {
    "text": "master control plan with just a set of the ends to a degree run everywhere it's",
    "start": "3586040",
    "end": "3591200"
  },
  {
    "text": "that container portability so to a degree the portability doesn't actually come from the fact that it's kubernetes",
    "start": "3591200",
    "end": "3596600"
  },
  {
    "text": "comes from the fact that it's containers",
    "start": "3596600",
    "end": "3600640"
  },
  {
    "text": "awesome last but not least because we're right on the money I mean you've used",
    "start": "3601780",
    "end": "3607760"
  },
  {
    "text": "some tips and tricks what do I recommend you do to get started today keep it",
    "start": "3607760",
    "end": "3613580"
  },
  {
    "text": "simple please keep you configurations keep your templates as simple as",
    "start": "3613580",
    "end": "3618740"
  },
  {
    "text": "possible don't go to Phobos only put in only putting the components that are",
    "start": "3618740",
    "end": "3623870"
  },
  {
    "text": "required you don't want to have a ten thousand line template that you have to wade through to try and figure out",
    "start": "3623870",
    "end": "3630260"
  },
  {
    "text": "what's happening group where appropriate we kind of touched on it we can have",
    "start": "3630260",
    "end": "3635960"
  },
  {
    "text": "multiple violence so if we had a complex architecture we can break it down across multiple files to make it easier to read",
    "start": "3635960",
    "end": "3642290"
  },
  {
    "text": "and consume in saying that if I had two deployments two services and an ingress",
    "start": "3642290",
    "end": "3648410"
  },
  {
    "text": "rule I may choose to just put it in the one file because it makes it makes it easier to read as one file this is",
    "start": "3648410",
    "end": "3654440"
  },
  {
    "text": "completely up to you as to what you go just yet please don't have that directory with 10,000 files ordering of",
    "start": "3654440",
    "end": "3661700"
  },
  {
    "text": "those is incredibly difficult single pot a replica set no one likes a naked pod",
    "start": "3661700",
    "end": "3667390"
  },
  {
    "text": "give it some form some form of protection look after it replica set with replicas one is what",
    "start": "3667390",
    "end": "3673999"
  },
  {
    "text": "everyone's looking for by default this is this is what everyone thinks kubernetes does for a pod by default you",
    "start": "3673999",
    "end": "3680420"
  },
  {
    "text": "need a replica set even medic go for deployment take advantage of deployments something we didn't touch on avoid hosts",
    "start": "3680420",
    "end": "3687109"
  },
  {
    "text": "down networking we can bind two ports on a host we combine two entire IPS on the",
    "start": "3687109",
    "end": "3693709"
  },
  {
    "text": "nodes themselves try and avoid this prefer services or ingress controllers",
    "start": "3693709",
    "end": "3699499"
  },
  {
    "text": "where applicable and news lately we only really looked at a name label today but",
    "start": "3699499",
    "end": "3705410"
  },
  {
    "text": "you can give it additional information you can give it and component part of is a fantastic one one being able to say",
    "start": "3705410",
    "end": "3712249"
  },
  {
    "text": "give me all pods that are part of application a and get a list of all of those back is really really handy more",
    "start": "3712249",
    "end": "3721369"
  },
  {
    "text": "of a personal one don't use latest please don't use latest we won't get into it too much today and",
    "start": "3721369",
    "end": "3727189"
  },
  {
    "text": "I know if working all these rules by doing this presentation latest is bad latest changes latest changes not in",
    "start": "3727189",
    "end": "3734420"
  },
  {
    "text": "term not only in terms of what's sitting on the container registry we all expect latest to always be up-to-date having",
    "start": "3734420",
    "end": "3741709"
  },
  {
    "text": "latest changes the way kubernetes pools container images and it ranges it in a",
    "start": "3741709",
    "end": "3747679"
  },
  {
    "text": "drastic way if we explicitly specify a version it will use a paste copy of it",
    "start": "3747679",
    "end": "3753829"
  },
  {
    "text": "when it's spinning up new containers meaning is incredibly fast to start if we specify latest latest has this",
    "start": "3753829",
    "end": "3761390"
  },
  {
    "text": "intrinsically the ability took to pull always so every time we start up a container it's talking out to the",
    "start": "3761390",
    "end": "3767900"
  },
  {
    "text": "container registry checking if it's the latest version pulling a copy of the latest version spinning up and doing its",
    "start": "3767900",
    "end": "3774289"
  },
  {
    "text": "thinning if we explicitly have version numbers it's a lot better right sized",
    "start": "3774289",
    "end": "3779869"
  },
  {
    "text": "home nodes small clusters are fantastic for dev but please don't have tiny",
    "start": "3779869",
    "end": "3785089"
  },
  {
    "text": "clusters in prod and cube controller learn the CLI and apply everything in",
    "start": "3785089",
    "end": "3790279"
  },
  {
    "text": "the folder this is fun command just make sure there's only one thing in the folder when you do that perfect and as we do today start",
    "start": "3790279",
    "end": "3798030"
  },
  {
    "text": "stateless stateless is the easiest way to get started we don't need to worry about storage we don't need to worry about using files because there's things",
    "start": "3798030",
    "end": "3804510"
  },
  {
    "text": "on a network it can talk to any virtual machine you want so we've literally gone",
    "start": "3804510",
    "end": "3809820"
  },
  {
    "text": "zero to a hundred with a mass load of acceleration towards the second half there but I hope you enjoyed hope you",
    "start": "3809820",
    "end": "3815700"
  },
  {
    "text": "got a good understanding most importantly remember kubernetes is your scheduler you need that container run",
    "start": "3815700",
    "end": "3821460"
  },
  {
    "text": "time under the hood to actually run the containers pods are our smallest deployables replica sets is how we'll",
    "start": "3821460",
    "end": "3827400"
  },
  {
    "text": "deploy multiple plots and our deployments is our top level what we like to use services allow us to target",
    "start": "3827400",
    "end": "3833820"
  },
  {
    "text": "particular pods and ingress gives us greater control over traffic into the cluster I'm going to leave it there",
    "start": "3833820",
    "end": "3840240"
  },
  {
    "text": "thank you so much and because we've gone over time come see me afterwards the questions [Applause]",
    "start": "3840240",
    "end": "3850030"
  }
]