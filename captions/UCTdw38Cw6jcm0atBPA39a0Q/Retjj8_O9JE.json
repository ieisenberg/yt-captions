[
  {
    "text": "so good morning everyone today we are talking about graphql and",
    "start": "3760",
    "end": "9440"
  },
  {
    "text": "observability and what that means we will explore",
    "start": "9440",
    "end": "15679"
  },
  {
    "text": "so that is my talk with the least fl least slides i have ever made because",
    "start": "15679",
    "end": "21680"
  },
  {
    "text": "it's a bit of exploration we will do and see what the problems are that we face at",
    "start": "21680",
    "end": "28800"
  },
  {
    "text": "production with graphql and how we can make them visible before",
    "start": "28800",
    "end": "34239"
  },
  {
    "text": "the support calls or the customer calls into our company",
    "start": "34239",
    "end": "39840"
  },
  {
    "text": "and we get under pressure so a lot of the things i will be talking",
    "start": "39840",
    "end": "44960"
  },
  {
    "text": "about and we look at will actually also apply to other systems like you could",
    "start": "44960",
    "end": "50160"
  },
  {
    "text": "use them in rest or you could use them with grpc but",
    "start": "50160",
    "end": "56079"
  },
  {
    "text": "with graphql they are a bit special and um typically when i",
    "start": "56079",
    "end": "62879"
  },
  {
    "text": "do start with my graphql introduction talk i will start with this slide",
    "start": "62879",
    "end": "69280"
  },
  {
    "text": "that is the least complex graphic query i could come up with it asks for the currently signed in user",
    "start": "69280",
    "end": "77040"
  },
  {
    "text": "so what does this have to do with graphical production issues so the thing with graphql is",
    "start": "77040",
    "end": "84320"
  },
  {
    "text": "that we reverse the responsibility between",
    "start": "84320",
    "end": "89600"
  },
  {
    "text": "the back end and front end like the back end is not anymore deciding",
    "start": "89600",
    "end": "95119"
  },
  {
    "text": "what the request will look like meaning the consumer will decide what the",
    "start": "95119",
    "end": "101520"
  },
  {
    "text": "requests look like so the front-end developer designs requests",
    "start": "101520",
    "end": "107600"
  },
  {
    "text": "that are good for his or her backhand for his or her components in the front",
    "start": "107600",
    "end": "114159"
  },
  {
    "text": "end and that's good because front-end people or data scientists they will be",
    "start": "114159",
    "end": "121040"
  },
  {
    "text": "happy because they can shape their request to their needs",
    "start": "121040",
    "end": "127119"
  },
  {
    "text": "but it also is a problem but it but it becomes a problem",
    "start": "127119",
    "end": "133920"
  },
  {
    "text": "when we create larger requests and larger requests and",
    "start": "134160",
    "end": "139760"
  },
  {
    "text": "maybe in the back end we start to introduce new components",
    "start": "139760",
    "end": "145120"
  },
  {
    "text": "and the correct characteristics of requests that we had suddenly break",
    "start": "145120",
    "end": "151520"
  },
  {
    "text": "or maybe just because we drill into more connections in our graphql request",
    "start": "151520",
    "end": "159120"
  },
  {
    "text": "that our performance suddenly degrades",
    "start": "159120",
    "end": "163599"
  },
  {
    "text": "so typically like our graphql is set up typically like facebook introduced it it's a thin layer",
    "start": "165040",
    "end": "171920"
  },
  {
    "text": "of graphql over our business layer and in that setup",
    "start": "171920",
    "end": "177280"
  },
  {
    "text": "it's easily controllable our performance could um",
    "start": "177280",
    "end": "184000"
  },
  {
    "text": "could develop over time but typically what we see in enterprise",
    "start": "184000",
    "end": "189519"
  },
  {
    "text": "production environments are more complex scenarios where we have graphql",
    "start": "189519",
    "end": "195280"
  },
  {
    "text": "as kind of a gateway technology on top of domain services or microservices",
    "start": "195280",
    "end": "202480"
  },
  {
    "text": "like it's it's very common that you have an existing service infrastructure maybe",
    "start": "202480",
    "end": "208720"
  },
  {
    "text": "composed of rest services grpc services thrift services whatever you have",
    "start": "208720",
    "end": "214720"
  },
  {
    "text": "and then we put on top of that graphql to make it easier accessible it's also a",
    "start": "214720",
    "end": "221360"
  },
  {
    "text": "very easy way to modernize your api you have your existing infrastructure you",
    "start": "221360",
    "end": "226400"
  },
  {
    "text": "put graphql on the top and then you start renovating",
    "start": "226400",
    "end": "231280"
  },
  {
    "text": "yeah that's a typical like you would typically put things like these domain services on",
    "start": "233040",
    "end": "239040"
  },
  {
    "text": "top but when we go further and that is for instance if you look at netflix",
    "start": "239040",
    "end": "245920"
  },
  {
    "text": "they have a setup where they have a graphical gateway and they split",
    "start": "245920",
    "end": "252959"
  },
  {
    "text": "this graphical gateway essentially into",
    "start": "252959",
    "end": "257040"
  },
  {
    "text": "domain graphql services so why do they do that essentially to enable teams to work on",
    "start": "258799",
    "end": "265919"
  },
  {
    "text": "this single graph in parallel so each team in netflix",
    "start": "265919",
    "end": "271919"
  },
  {
    "text": "owning a topic has its own graphql server and beneath this graphql server",
    "start": "271919",
    "end": "277440"
  },
  {
    "text": "becomes even more complex they have a lot of microservices they you through thrift",
    "start": "277440",
    "end": "283120"
  },
  {
    "text": "so if you think about such a setup it becomes very difficult to say",
    "start": "283120",
    "end": "288240"
  },
  {
    "text": "who broke what or what caused a performance degradation",
    "start": "288240",
    "end": "293600"
  },
  {
    "text": "in our system and how should we debug such a degradation of performance",
    "start": "293600",
    "end": "303199"
  },
  {
    "text": "and find out where the error actually happened so this talk is about observability but",
    "start": "303199",
    "end": "310720"
  },
  {
    "text": "it's also very much a talk about finding production issues in graphql setups",
    "start": "310720",
    "end": "317120"
  },
  {
    "text": "and to start with that we have a demo application we use in a",
    "start": "317120",
    "end": "324000"
  },
  {
    "text": "lot of our talks it's our cryptocurrency app",
    "start": "324000",
    "end": "329120"
  },
  {
    "text": "and this application actually has an issue and we're gonna find what it is",
    "start": "329120",
    "end": "338000"
  },
  {
    "text": "so how would i approach even like let's say i get a call from our",
    "start": "338000",
    "end": "343440"
  },
  {
    "text": "support and they say our servers are heavily under pressure",
    "start": "343440",
    "end": "351280"
  },
  {
    "text": "so what would i typically do maybe i would refresh my site locally and look how it performs",
    "start": "351600",
    "end": "358960"
  },
  {
    "text": "but typically on my local system it always works it's quite fast",
    "start": "358960",
    "end": "365800"
  },
  {
    "text": "on my machine so how do we approach that",
    "start": "366160",
    "end": "373280"
  },
  {
    "text": "so maybe the first thing we could do is",
    "start": "373600",
    "end": "378639"
  },
  {
    "text": "looking at our output what is happening when i execute something here",
    "start": "378639",
    "end": "385360"
  },
  {
    "text": "it's a typical poor man's approach to finding an issue it's running it",
    "start": "385360",
    "end": "392319"
  },
  {
    "text": "locally maybe looking at the typical use cases and",
    "start": "392319",
    "end": "397759"
  },
  {
    "text": "looking at what we have in the lock and it doesn't have to be a console log it",
    "start": "397759",
    "end": "403919"
  },
  {
    "text": "could also be sirilog or what have you it's a typical approach that we would essentially do",
    "start": "403919",
    "end": "410560"
  },
  {
    "text": "and what we can already see here is that we are doing a couple of sql",
    "start": "410560",
    "end": "416720"
  },
  {
    "text": "requests so the single request for one cryptocurrency here cost one sql two",
    "start": "416720",
    "end": "423199"
  },
  {
    "text": "sqls it also caused a rest request",
    "start": "423199",
    "end": "429360"
  },
  {
    "text": "and yeah one rest request two rest requests",
    "start": "429360",
    "end": "435360"
  },
  {
    "text": "doesn't look so bad actually is what we maybe even expect",
    "start": "435360",
    "end": "442560"
  },
  {
    "text": "so how would we go further with that because that's the problem locally we",
    "start": "443120",
    "end": "448800"
  },
  {
    "text": "don't have the scale like we don't have the pressure of a system",
    "start": "448800",
    "end": "454080"
  },
  {
    "text": "and that's why we don't have these these issues that we have when we have",
    "start": "454080",
    "end": "460160"
  },
  {
    "text": "parallel requests so back in the beginning when we did",
    "start": "460160",
    "end": "466319"
  },
  {
    "text": "start with graphql um apollo it's a company that",
    "start": "466319",
    "end": "471680"
  },
  {
    "text": "was one of the first doing graph building graphql products they came up",
    "start": "471680",
    "end": "476800"
  },
  {
    "text": "with something they called apollo tracing",
    "start": "476800",
    "end": "481840"
  },
  {
    "text": "so in this case we would set up our server or graphql server",
    "start": "481840",
    "end": "487039"
  },
  {
    "text": "to expose performance insights in the response of our request",
    "start": "487039",
    "end": "493759"
  },
  {
    "text": "and we can do that by for instance adding it here and apolo tracing by the",
    "start": "493759",
    "end": "500400"
  },
  {
    "text": "way apollo tracing is kind of deprecated so we shouldn't use it anymore but i'm",
    "start": "500400",
    "end": "508000"
  },
  {
    "text": "still showing it just to have an idea how this developed to where we",
    "start": "508000",
    "end": "513518"
  },
  {
    "text": "are going let me restart that that by the way",
    "start": "513519",
    "end": "520719"
  },
  {
    "text": "would be a very dangerous configuration to always expose tracing data in our results",
    "start": "520719",
    "end": "526880"
  },
  {
    "text": "because they will blow up our graphql results we shouldn't do that but just to",
    "start": "526880",
    "end": "532399"
  },
  {
    "text": "make a point okay and we could use like something like",
    "start": "532399",
    "end": "537839"
  },
  {
    "text": "graphql playground now to write graphql queries",
    "start": "537839",
    "end": "543519"
  },
  {
    "text": "let me just do a one one simple one and then we really drill into",
    "start": "543519",
    "end": "548880"
  },
  {
    "text": "something more useful like i could get the currently signed in user and if",
    "start": "548880",
    "end": "555120"
  },
  {
    "text": "i fire that you can see i get here these performance insights into my",
    "start": "555120",
    "end": "560880"
  },
  {
    "text": "response actually my response would look a lot bigger but the ide",
    "start": "560880",
    "end": "567120"
  },
  {
    "text": "essentially cut it out and visualize the t in my tracing view what it does is give me kind of insights in how long",
    "start": "567120",
    "end": "574880"
  },
  {
    "text": "a resolver executes so i would in this kind of work",
    "start": "574880",
    "end": "582160"
  },
  {
    "text": "go to my ui maybe here refresh it and capture this request this is my",
    "start": "582160",
    "end": "589279"
  },
  {
    "text": "graphql request and let me just copy it out",
    "start": "589279",
    "end": "595120"
  },
  {
    "text": "okay and i could go over to my ide here copy it in",
    "start": "595120",
    "end": "602160"
  },
  {
    "text": "and also the variables here copy them also over",
    "start": "603440",
    "end": "610320"
  },
  {
    "text": "then execute this this thing here and have a look at the performance",
    "start": "610320",
    "end": "615600"
  },
  {
    "text": "characteristics and what i already can see is that price change kind of",
    "start": "615600",
    "end": "621600"
  },
  {
    "text": "is the expensive part of my request the problem with this approach is that",
    "start": "621600",
    "end": "627200"
  },
  {
    "text": "i'm exposing internals into my response and i would have to do that on",
    "start": "627200",
    "end": "633519"
  },
  {
    "text": "production to see if there is something wrong with production",
    "start": "633519",
    "end": "639120"
  },
  {
    "text": "and the second the third problem here is that",
    "start": "639120",
    "end": "645120"
  },
  {
    "text": "doing that is kind of a pull approach i have to execute",
    "start": "645519",
    "end": "650560"
  },
  {
    "text": "something to get insights into something that is kind of bad because i want to be informed when",
    "start": "650560",
    "end": "657600"
  },
  {
    "text": "something goes wrong when something goes goes out of the ordinary and also",
    "start": "657600",
    "end": "663279"
  },
  {
    "text": "i don't really see what is really wrong i see price change here is a problem maybe we don't know",
    "start": "663279",
    "end": "670399"
  },
  {
    "text": "yet but i cannot see is that my resolver that",
    "start": "670399",
    "end": "676399"
  },
  {
    "text": "has a problem or an underlying system okay let me go back to slides",
    "start": "676399",
    "end": "685399"
  },
  {
    "text": "so this is when we start thinking about observability and observability",
    "start": "690320",
    "end": "697560"
  },
  {
    "text": "was very difficult to achieve until very recently i would say",
    "start": "698160",
    "end": "703920"
  },
  {
    "text": "and i say that because i was working on a major project in switzerland for",
    "start": "703920",
    "end": "709200"
  },
  {
    "text": "a big insurance company and they would build their own observability platform because things",
    "start": "709200",
    "end": "714959"
  },
  {
    "text": "like open telemetry didn't exist at that point in time like let's say eight years ago",
    "start": "714959",
    "end": "722240"
  },
  {
    "text": "so what they would do is inject everything that you have like",
    "start": "722240",
    "end": "727760"
  },
  {
    "text": "http requests and service bus messages and what have you",
    "start": "727760",
    "end": "733200"
  },
  {
    "text": "and add correlation ids to it and then track these and aggregate logs of all these services and build really a nice",
    "start": "733200",
    "end": "741200"
  },
  {
    "text": "platform on top of it to make it visible but it costs dearly we had in the first",
    "start": "741200",
    "end": "747360"
  },
  {
    "text": "two years two developers just working on that platform not working on our business code",
    "start": "747360",
    "end": "752560"
  },
  {
    "text": "so you can you could do observability but it was very very expensive",
    "start": "752560",
    "end": "760079"
  },
  {
    "text": "so what does observability mean observability allows us to get a grasp",
    "start": "760079",
    "end": "767279"
  },
  {
    "text": "on how our system performed what is the state of our system and it does that by",
    "start": "767279",
    "end": "773120"
  },
  {
    "text": "taking into account a lot of things like logging metrics and tracing and tracing is",
    "start": "773120",
    "end": "780000"
  },
  {
    "text": "always when we essentially hit boundaries like go from one service to the next then we create",
    "start": "780000",
    "end": "786800"
  },
  {
    "text": "things that we call spends around these intersections",
    "start": "786800",
    "end": "792959"
  },
  {
    "text": "that is where open telemetry comes in and open telemetry allows us now very",
    "start": "795440",
    "end": "800880"
  },
  {
    "text": "easily since dotnet 6 to make our systems observable",
    "start": "800880",
    "end": "809519"
  },
  {
    "text": "and open telemetry is not just um like bound to a certain vendor",
    "start": "812240",
    "end": "818959"
  },
  {
    "text": "it's an open standard and it standardizes how we deal with log logs traces and metrics",
    "start": "818959",
    "end": "828600"
  },
  {
    "text": "and the open terminator is actually not something new it was merged",
    "start": "828880",
    "end": "835279"
  },
  {
    "text": "out of two projects there was a project open tracing and open sensors started actually by google and they",
    "start": "835279",
    "end": "842560"
  },
  {
    "text": "focused on different aspects of the observability scaler",
    "start": "842560",
    "end": "847760"
  },
  {
    "text": "so these projects were at one point merged and then um companies like microsoft meta and so",
    "start": "847760",
    "end": "855920"
  },
  {
    "text": "on get got behind these projects and started building them into their",
    "start": "855920",
    "end": "862720"
  },
  {
    "text": "platform so microsoft is a big contributor to this project so",
    "start": "862720",
    "end": "868079"
  },
  {
    "text": "if you go to the github repository of open telemetry you can see that microsoft is one",
    "start": "868079",
    "end": "875040"
  },
  {
    "text": "of the biggest contributors there so one warning here open telemetry is",
    "start": "875040",
    "end": "882079"
  },
  {
    "text": "still not released for the dotnet platform we are at the moment at rc5 or something like this",
    "start": "882079",
    "end": "888160"
  },
  {
    "text": "we can have a look in a minute um but we are very close so if you start today with observability",
    "start": "888160",
    "end": "895199"
  },
  {
    "text": "go for open telemetry you could you could use a vendor login so uh like",
    "start": "895199",
    "end": "900800"
  },
  {
    "text": "companies like elastic they have apis that are released that you could just",
    "start": "900800",
    "end": "905920"
  },
  {
    "text": "plug in give you or give you observability but with a vendor",
    "start": "905920",
    "end": "911199"
  },
  {
    "text": "lock-in so you could go this route but the better route is to go with open",
    "start": "911199",
    "end": "916959"
  },
  {
    "text": "telemetry because then if you decide elastic is not good anymore for us we want to use honeycomb for instance then",
    "start": "916959",
    "end": "924320"
  },
  {
    "text": "you can swap them out so what is open telemetry about",
    "start": "924320",
    "end": "932880"
  },
  {
    "text": "so with open temperature observability we want to instrument our",
    "start": "932880",
    "end": "938839"
  },
  {
    "text": "components and generate like data to validate our system",
    "start": "938839",
    "end": "946240"
  },
  {
    "text": "and that data we want to collect and export and these are the major components in",
    "start": "946240",
    "end": "952320"
  },
  {
    "text": "open telemetry and the export component essentially allows us to swap out the",
    "start": "952320",
    "end": "958720"
  },
  {
    "text": "vendor so we have exporters for jager we have exporters for elastic",
    "start": "958720",
    "end": "964000"
  },
  {
    "text": "um honeycomb and what what whatever",
    "start": "964000",
    "end": "969800"
  },
  {
    "text": "a very important term in open geometry you hear it often but in the beginning",
    "start": "970320",
    "end": "975519"
  },
  {
    "text": "you don't know what it means it's melt and that means metrics events",
    "start": "975519",
    "end": "981839"
  },
  {
    "text": "logs and traces so what are these metrics",
    "start": "981839",
    "end": "987920"
  },
  {
    "text": "are essentially indicators often by represented by integers",
    "start": "987920",
    "end": "993199"
  },
  {
    "text": "that give you an idea how much requests go through your system or how much memory is used like these",
    "start": "993199",
    "end": "1000399"
  },
  {
    "text": "little indicators where your system pressure wise is and then we have something like events",
    "start": "1000399",
    "end": "1006399"
  },
  {
    "text": "and that's if you think about a machine we have events if you push a button",
    "start": "1006399",
    "end": "1011519"
  },
  {
    "text": "something happens that's typically an even that happens in your environment in your components",
    "start": "1011519",
    "end": "1017440"
  },
  {
    "text": "and then we have the typical logs and traces",
    "start": "1017440",
    "end": "1024278"
  },
  {
    "text": "so an open telemetry setup looks a bit like this we have our",
    "start": "1024880",
    "end": "1030640"
  },
  {
    "text": "application then uh in our application we have a lot of api",
    "start": "1030640",
    "end": "1036720"
  },
  {
    "text": "that does something and we report what it does or where we have intersections",
    "start": "1036720",
    "end": "1043120"
  },
  {
    "text": "through the open telemetry sdk the output of these things are processed",
    "start": "1043120",
    "end": "1050559"
  },
  {
    "text": "and then put to the exporter you can already have an observable",
    "start": "1050559",
    "end": "1056160"
  },
  {
    "text": "solution by just putting open telemetry into your application and exporting it",
    "start": "1056160",
    "end": "1061679"
  },
  {
    "text": "to an upterometry backend in a production environment we would",
    "start": "1061679",
    "end": "1067840"
  },
  {
    "text": "use more something called the collector and the collector is another service component",
    "start": "1067840",
    "end": "1074559"
  },
  {
    "text": "that you you know kubernetes set up could spin up in a docker container and",
    "start": "1074559",
    "end": "1080160"
  },
  {
    "text": "then push the telemetry data to that collector and it helps you",
    "start": "1080160",
    "end": "1085919"
  },
  {
    "text": "in the sense that not every application or not every container of you batches things to the open telemetry",
    "start": "1085919",
    "end": "1093120"
  },
  {
    "text": "end which would usually go through um through the internet",
    "start": "1093120",
    "end": "1100240"
  },
  {
    "text": "but the collector essentially helps you to just push to a local service and then batch from there to",
    "start": "1100240",
    "end": "1106840"
  },
  {
    "text": "your open telemetry back end what we will look at is elastic as an",
    "start": "1106840",
    "end": "1112640"
  },
  {
    "text": "observability solution today but as i said that is interchangeable so you",
    "start": "1112640",
    "end": "1119200"
  },
  {
    "text": "can take the knowledge from this talk and apply it to other solutions",
    "start": "1119200",
    "end": "1125600"
  },
  {
    "text": "so let's have a look at how we would put that in to our graphql server and how",
    "start": "1126559",
    "end": "1132480"
  },
  {
    "text": "that gives us insights so the first thing",
    "start": "1132480",
    "end": "1138720"
  },
  {
    "text": "is that we kind of need to identify our service in the open telemetry world and",
    "start": "1138720",
    "end": "1146000"
  },
  {
    "text": "before i show that just because i said it's still release candidates",
    "start": "1146000",
    "end": "1152320"
  },
  {
    "text": "at the moment we are using open telemetry rc4 and",
    "start": "1152320",
    "end": "1157360"
  },
  {
    "text": "the open telepathy core rc9 you can see it's already released candidate but still not fully released",
    "start": "1157360",
    "end": "1167279"
  },
  {
    "text": "okay so the first thing we put in is like an identifier for our",
    "start": "1170880",
    "end": "1176720"
  },
  {
    "text": "api and for this we can use something called the resource builder",
    "start": "1176720",
    "end": "1181919"
  },
  {
    "text": "and with that we can essentially describe some metadata about our service so we call our service coin api here",
    "start": "1181919",
    "end": "1189600"
  },
  {
    "text": "and we can give it a name space i give it a namespace demo",
    "start": "1189600",
    "end": "1196000"
  },
  {
    "text": "and if you have a lot of services in your backend then this makes it easy to identify what",
    "start": "1196000",
    "end": "1202240"
  },
  {
    "text": "service we are talking about or how to filter to that in this instance i have",
    "start": "1202240",
    "end": "1207440"
  },
  {
    "text": "version two of my service here um because we maybe made a change that",
    "start": "1207440",
    "end": "1212640"
  },
  {
    "text": "degraded our performance and we're gonna find it now and i also provide some attributes here",
    "start": "1212640",
    "end": "1219919"
  },
  {
    "text": "that give me an idea in which environment i'm in and we can see in a minute how we can use it in",
    "start": "1219919",
    "end": "1227520"
  },
  {
    "text": "elastic to filter between production and environment",
    "start": "1227520",
    "end": "1232559"
  },
  {
    "text": "or even between when we change from dotnet 6 to 0.7 or so on",
    "start": "1232559",
    "end": "1239120"
  },
  {
    "text": "you can put more custom data in here depending on your needs but these",
    "start": "1239120",
    "end": "1244720"
  },
  {
    "text": "these three items here are picked up as native metadata by elastic",
    "start": "1244720",
    "end": "1252320"
  },
  {
    "text": "okay with that we have described our api now let's set up open telemetry",
    "start": "1252320",
    "end": "1259440"
  },
  {
    "text": "and open telemetry we set up as a service so we focus on",
    "start": "1259440",
    "end": "1265280"
  },
  {
    "text": "two things here metrics and i just put here metrics in",
    "start": "1265280",
    "end": "1271600"
  },
  {
    "text": "and we have http client instrumentation and asp.net core instrumentation",
    "start": "1271600",
    "end": "1278480"
  },
  {
    "text": "and these actually come from packages that are already prepared you can see is the open telemetry instrumentation http",
    "start": "1278480",
    "end": "1285919"
  },
  {
    "text": "there's a package by microsoft that gives me metrics and traces for the http",
    "start": "1285919",
    "end": "1292000"
  },
  {
    "text": "client so i don't have to inject any correlation ids and also i also get for",
    "start": "1292000",
    "end": "1297440"
  },
  {
    "text": "free here the asp.the core instrumentation there are instrumentations for the",
    "start": "1297440",
    "end": "1304960"
  },
  {
    "text": "um [Music] for the data drivers like um i know that shay from the entity",
    "start": "1304960",
    "end": "1311280"
  },
  {
    "text": "framework team he built a telemetry into the postgres driver for instance so",
    "start": "1311280",
    "end": "1316640"
  },
  {
    "text": "you get also automatic telemetry out of these things like all the ado drivers",
    "start": "1316640",
    "end": "1322240"
  },
  {
    "text": "jimmy bogart built a telemetry for mongodb so there's a package out there if you're using mongodb you just plug",
    "start": "1322240",
    "end": "1328799"
  },
  {
    "text": "the package for it in and you get telemetry events so there are a lot of packages already",
    "start": "1328799",
    "end": "1335200"
  },
  {
    "text": "ready and finished and you just plug them in for hot chocolate we built the telemetry",
    "start": "1335200",
    "end": "1340960"
  },
  {
    "text": "so we have this hot chocolate diagnostics package here which will automatically provide telemetry events",
    "start": "1340960",
    "end": "1346880"
  },
  {
    "text": "for our system okay let's put some more things in",
    "start": "1346880",
    "end": "1354640"
  },
  {
    "text": "so we have the metrics let's also put the traces in for that we have this at open timing",
    "start": "1354640",
    "end": "1362400"
  },
  {
    "text": "tracing here um we are using again the http client",
    "start": "1362400",
    "end": "1367760"
  },
  {
    "text": "instrumentation the asp.net core instrumentation and in this case author the hot chocolate",
    "start": "1367760",
    "end": "1374480"
  },
  {
    "text": "instrumentation the next thing is",
    "start": "1374480",
    "end": "1379520"
  },
  {
    "text": "we are collecting this instrumentation but we also need to expose it so",
    "start": "1379520",
    "end": "1385120"
  },
  {
    "text": "let me get rid of apollo tracing here and let's put in",
    "start": "1385120",
    "end": "1390400"
  },
  {
    "text": "at instrumentation because instrumentation also will cost some performance that's why we don't put them",
    "start": "1390400",
    "end": "1396480"
  },
  {
    "text": "in by default um so it's not free but it's not so much as",
    "start": "1396480",
    "end": "1402720"
  },
  {
    "text": "to not have it so i would suggest put it in",
    "start": "1402720",
    "end": "1409120"
  },
  {
    "text": "okay with that let's just start our service again",
    "start": "1409200",
    "end": "1416240"
  },
  {
    "text": "and just for the connection set up here so i have an endpoint here that is",
    "start": "1416240",
    "end": "1421600"
  },
  {
    "text": "pointing directly to elastic and elastic",
    "start": "1421600",
    "end": "1427120"
  },
  {
    "text": "has in the meantime implemented the otlp protocol otlp is the open telemetry",
    "start": "1427120",
    "end": "1435919"
  },
  {
    "text": "protocol and we have that as an exporter here so we can natively talk to elastic",
    "start": "1435919",
    "end": "1445840"
  },
  {
    "text": "okay good there's two things that you actually need if you just want to plug it in for",
    "start": "1446240",
    "end": "1453279"
  },
  {
    "text": "for testing purposes you just put in here the elastic endpoint and then you",
    "start": "1453279",
    "end": "1458960"
  },
  {
    "text": "need some headers and api key to your backend and then you're good to go it will report",
    "start": "1458960",
    "end": "1465679"
  },
  {
    "text": "okay so now that we have that hooked up it's working we can go to our api",
    "start": "1466080",
    "end": "1473039"
  },
  {
    "text": "refresh it maybe a couple of times so we get some telemetry data to batch to our elastic cloud",
    "start": "1473039",
    "end": "1481679"
  },
  {
    "text": "just do a couple of things here okay",
    "start": "1481679",
    "end": "1487039"
  },
  {
    "text": "and then let's go to elastic so interpreting you typically when i",
    "start": "1487039",
    "end": "1493039"
  },
  {
    "text": "start talking about elastic many people think of elasticsearch",
    "start": "1493039",
    "end": "1498840"
  },
  {
    "text": "but they have quite advanced and they built essentially their observability platform",
    "start": "1498840",
    "end": "1505919"
  },
  {
    "text": "on top of their elastic search so they can easily aggregate in a nice",
    "start": "1505919",
    "end": "1512240"
  },
  {
    "text": "fashion performance data so let's go in",
    "start": "1512240",
    "end": "1518799"
  },
  {
    "text": "okay and you can see elasticsearch is their main product and then they have here the observability solution that's",
    "start": "1518799",
    "end": "1525360"
  },
  {
    "text": "where we go in so the first thing we can do is have a look at the service map here",
    "start": "1525360",
    "end": "1533039"
  },
  {
    "text": "and that is interesting because we can already just by i just refreshed it a bit",
    "start": "1533039",
    "end": "1539919"
  },
  {
    "text": "we already can see that we have our coin api that we just created",
    "start": "1539919",
    "end": "1545200"
  },
  {
    "text": "and that actually uses another api which is the price api and the price api actually is an azure",
    "start": "1545200",
    "end": "1552799"
  },
  {
    "text": "function so that's that has some telemetry to the visual studio service",
    "start": "1552799",
    "end": "1557840"
  },
  {
    "text": "who knew and we also have like here postgres",
    "start": "1557840",
    "end": "1563679"
  },
  {
    "text": "and i said postgres is natively integrated with telemetry in net",
    "start": "1563679",
    "end": "1569039"
  },
  {
    "text": "so we already get like an idea how our system even looks like and is connected",
    "start": "1569039",
    "end": "1575919"
  },
  {
    "text": "to other systems just by plugging in open telemetry",
    "start": "1575919",
    "end": "1581760"
  },
  {
    "text": "and as i said like the data here we have cannot also switch between production",
    "start": "1581760",
    "end": "1588159"
  },
  {
    "text": "and development that's from our metadata where put some other environment in it",
    "start": "1588159",
    "end": "1593520"
  },
  {
    "text": "would automatically show up and you already can see that my system",
    "start": "1593520",
    "end": "1599200"
  },
  {
    "text": "already warns me there's an anomaly detection so something has changed in the meantime in our system",
    "start": "1599200",
    "end": "1605840"
  },
  {
    "text": "that kind of is not right anymore so there are a couple of other things",
    "start": "1605840",
    "end": "1611120"
  },
  {
    "text": "that i can have a look now at and that is services",
    "start": "1611120",
    "end": "1616240"
  },
  {
    "text": "that's essentially the list of my services i can drill into there's my price service",
    "start": "1616240",
    "end": "1622480"
  },
  {
    "text": "and my coin api my coin api is my graphql server",
    "start": "1622480",
    "end": "1628400"
  },
  {
    "text": "let me just filter into my development here so what i can see here is there's a",
    "start": "1628400",
    "end": "1635520"
  },
  {
    "text": "graphql request which kind of is not so helpful",
    "start": "1635520",
    "end": "1643039"
  },
  {
    "text": "so we need maybe to do a bit more to be able to explore that",
    "start": "1643120",
    "end": "1649679"
  },
  {
    "text": "so why is that aggregated like this um so by default",
    "start": "1649679",
    "end": "1655120"
  },
  {
    "text": "the um telemetry events are aggregated under the http middleware",
    "start": "1655120",
    "end": "1661679"
  },
  {
    "text": "and that kind of makes it difficult to see what graphql request is behind that",
    "start": "1661679",
    "end": "1668080"
  },
  {
    "text": "and for that we have in almost all open telemetry integration something that we call an activity",
    "start": "1668080",
    "end": "1676880"
  },
  {
    "text": "an activity enricher sorry",
    "start": "1679120",
    "end": "1684320"
  },
  {
    "text": "so for hot chocolate we have designed that as a class where we can say okay we need a custom activity",
    "start": "1684320",
    "end": "1690799"
  },
  {
    "text": "enricher",
    "start": "1690799",
    "end": "1693799"
  },
  {
    "text": "yes and i show you what that is",
    "start": "1696159",
    "end": "1701039"
  },
  {
    "text": "so the activity enricher gives us access to enrich the",
    "start": "1702640",
    "end": "1708320"
  },
  {
    "text": "instrumentation events from [Music] graphql with extra information or",
    "start": "1708320",
    "end": "1714880"
  },
  {
    "text": "rewrite the telemetry inventory to our needs",
    "start": "1714880",
    "end": "1720559"
  },
  {
    "text": "in this case we're optimizing a bit for elastic because elastic is what aggregates it in that way",
    "start": "1720559",
    "end": "1727679"
  },
  {
    "text": "so what we want to do in this case is say okay for elastic we enrich a bit how we create the root name",
    "start": "1727679",
    "end": "1734320"
  },
  {
    "text": "of our of our graph and we actually",
    "start": "1734320",
    "end": "1740240"
  },
  {
    "text": "uh remove the um current name from the root activity you can see i get in my",
    "start": "1740240",
    "end": "1745760"
  },
  {
    "text": "enricher here the activity for graphql and then i get the root activity from",
    "start": "1745760",
    "end": "1750960"
  },
  {
    "text": "the asp.net core middleware and what we are going to do is just override it",
    "start": "1750960",
    "end": "1756640"
  },
  {
    "text": "with the current display name that we use in our graphql activity you will see in a second what that actually means",
    "start": "1756640",
    "end": "1763679"
  },
  {
    "text": "the next thing is that i can hook up my",
    "start": "1763679",
    "end": "1768240"
  },
  {
    "text": "my activity enricher at singleton",
    "start": "1769120",
    "end": "1776640"
  },
  {
    "text": "with the dependency injection and then by this replace it",
    "start": "1776640",
    "end": "1782480"
  },
  {
    "text": "replace the standard activity enricher",
    "start": "1783760",
    "end": "1787840"
  },
  {
    "text": "so why activity enricher because the api to provide telemetry data and net is the",
    "start": "1789760",
    "end": "1795600"
  },
  {
    "text": "new activity api that microsoft introduced in dotnet um six",
    "start": "1795600",
    "end": "1800960"
  },
  {
    "text": "you also have activity enrichers in um for instance asp.net core events i think",
    "start": "1800960",
    "end": "1806960"
  },
  {
    "text": "they have that as an overload here let me check not here",
    "start": "1806960",
    "end": "1814320"
  },
  {
    "text": "yeah yeah like they pass it as a delegate so you",
    "start": "1815120",
    "end": "1821840"
  },
  {
    "text": "can get a handle on their activities and then rewrite them and stuff like that",
    "start": "1821840",
    "end": "1827600"
  },
  {
    "text": "okay with that our api will restart let's have a look at",
    "start": "1827600",
    "end": "1833600"
  },
  {
    "text": "the telemetry events again and let's produce some",
    "start": "1833600",
    "end": "1840080"
  },
  {
    "text": "it should i'm just doing a couple of because it takes a couple of events to batch to",
    "start": "1845200",
    "end": "1852320"
  },
  {
    "text": "my backend to refresh that",
    "start": "1852320",
    "end": "1856640"
  },
  {
    "text": "okay and what we can see now",
    "start": "1859279",
    "end": "1864480"
  },
  {
    "text": "what we should see let's refresh that sometimes",
    "start": "1864480",
    "end": "1870000"
  },
  {
    "text": "x is second",
    "start": "1870000",
    "end": "1872799"
  },
  {
    "text": "and that is development",
    "start": "1876399",
    "end": "1879840"
  },
  {
    "text": "i hope",
    "start": "1881919",
    "end": "1884398"
  },
  {
    "text": "if not i will just spawn some from",
    "start": "1888159",
    "end": "1893840"
  },
  {
    "text": "production let me just put that in",
    "start": "1893840",
    "end": "1900559"
  },
  {
    "text": "and that was the crypto relay",
    "start": "1900559",
    "end": "1907080"
  },
  {
    "text": "sometimes difficult to have these live demos where you have cloud infrastructure involved so let me just",
    "start": "1907279",
    "end": "1914080"
  },
  {
    "text": "get some events from our deployed application",
    "start": "1914080",
    "end": "1919278"
  },
  {
    "text": "okay",
    "start": "1919679",
    "end": "1921840"
  },
  {
    "text": "yeah that is a dashboard query but we actually wanted to analyze the bitcoin",
    "start": "1925919",
    "end": "1931200"
  },
  {
    "text": "query just get some data for this then we have a look into it",
    "start": "1931200",
    "end": "1938480"
  },
  {
    "text": "okay that should be enough",
    "start": "1939519",
    "end": "1944120"
  },
  {
    "text": "refresh that if not we take the first one doesn't matter",
    "start": "1948320",
    "end": "1955120"
  },
  {
    "text": "okay so what we did with the display name essentially is to rewrite our root request here",
    "start": "1955600",
    "end": "1961600"
  },
  {
    "text": "and now we get an information that this is the graphql route and we're actually executing a query and",
    "start": "1961600",
    "end": "1968159"
  },
  {
    "text": "the query is called dashboard container query and get something called ticker and feature",
    "start": "1968159",
    "end": "1974320"
  },
  {
    "text": "and we can now look into that tree this is actually my graphical query or",
    "start": "1974320",
    "end": "1980559"
  },
  {
    "text": "the relevant parts of my graph query so i can see",
    "start": "1980559",
    "end": "1986240"
  },
  {
    "text": "like in the metadata that we are actually executing this",
    "start": "1986240",
    "end": "1991840"
  },
  {
    "text": "query here i could paste it out it's not optimally formatted but i have",
    "start": "1991840",
    "end": "1997600"
  },
  {
    "text": "access to that query and i also can see like the relevant fields that we are using for instance i",
    "start": "1997600",
    "end": "2003760"
  },
  {
    "text": "can see there's a the field ticker that takes some time here but actually the few ticker doesn't",
    "start": "2003760",
    "end": "2010320"
  },
  {
    "text": "exist in my backend it's aliased but i can have a look at the metadata and then",
    "start": "2010320",
    "end": "2016240"
  },
  {
    "text": "see that's actually the field assets so it was renamed by the front-end",
    "start": "2016240",
    "end": "2022880"
  },
  {
    "text": "developer to ticker and then i can drill in i can see here a couple of price resolves and we kind of",
    "start": "2022880",
    "end": "2030000"
  },
  {
    "text": "had the notion that price could be the problem and then we can see that price actually is badged",
    "start": "2030000",
    "end": "2036720"
  },
  {
    "text": "to another service that's our price service and the price service actually has an sql here which first does a count",
    "start": "2036720",
    "end": "2045919"
  },
  {
    "text": "operation and then does some other information to fetch the",
    "start": "2045919",
    "end": "2051280"
  },
  {
    "text": "data so you get quite an idea what is happening now here",
    "start": "2051280",
    "end": "2056480"
  },
  {
    "text": "and we get this idea even without actively looking at it so",
    "start": "2056480",
    "end": "2062000"
  },
  {
    "text": "anytime any request goes through this we get these aggregated nice graphs here",
    "start": "2062000",
    "end": "2067358"
  },
  {
    "text": "now we can see that one request actually doesn't involve just a single sql",
    "start": "2067359",
    "end": "2073200"
  },
  {
    "text": "quarter you can see it's one two three there's an x more expensive sql query we can see",
    "start": "2073200",
    "end": "2080480"
  },
  {
    "text": "we could also drill more in the details of this request data",
    "start": "2080480",
    "end": "2086240"
  },
  {
    "text": "and get an idea what is involved like there we even would get hints about missing",
    "start": "2086240",
    "end": "2094000"
  },
  {
    "text": "indexes that's a typical thing we find when we look at performance issues",
    "start": "2094000",
    "end": "2099359"
  },
  {
    "text": "it's not only that something is wrong like a programming mistake",
    "start": "2099359",
    "end": "2105520"
  },
  {
    "text": "is often like forgetting to set an index okay so this makes our system already",
    "start": "2105520",
    "end": "2113440"
  },
  {
    "text": "much more transparent so let's go back to my traces and see if",
    "start": "2113440",
    "end": "2120800"
  },
  {
    "text": "we actually by now get the trace i'm looking for",
    "start": "2120800",
    "end": "2126078"
  },
  {
    "text": "yeah you contain our dashboard container that's that's actually the request i wanted to",
    "start": "2126400",
    "end": "2132560"
  },
  {
    "text": "have let's see if we also have that for um development",
    "start": "2132560",
    "end": "2138480"
  },
  {
    "text": "it sometimes takes some time that why i walked you through the other one first",
    "start": "2138480",
    "end": "2145838"
  },
  {
    "text": "the shame if we didn't get this from",
    "start": "2146640",
    "end": "2152000"
  },
  {
    "text": "my local deployment okay",
    "start": "2152000",
    "end": "2157280"
  },
  {
    "text": "so this is the actual request from the from the bitcoin page it's called also view container but you",
    "start": "2157280",
    "end": "2163920"
  },
  {
    "text": "can see this is a root field asset by symbol and if we drill into that oh not on",
    "start": "2163920",
    "end": "2171599"
  },
  {
    "text": "production go on",
    "start": "2171599",
    "end": "2176640"
  },
  {
    "text": "then we get now an idea why my request to get this bitcoin could be a problem",
    "start": "2177680",
    "end": "2184480"
  },
  {
    "text": "for our production environment and why it puts our system under pressure so we",
    "start": "2184480",
    "end": "2189599"
  },
  {
    "text": "can see that there are four sqls and one http request",
    "start": "2189599",
    "end": "2196079"
  },
  {
    "text": "to get the data for the simul for the simple coin and we could",
    "start": "2196079",
    "end": "2201599"
  },
  {
    "text": "optimize that to maybe get rid of this count request here because that kind of",
    "start": "2201599",
    "end": "2208880"
  },
  {
    "text": "seems suspicious and we have that even two times",
    "start": "2208880",
    "end": "2214760"
  },
  {
    "text": "okay and like just let me have a look in here",
    "start": "2214800",
    "end": "2222560"
  },
  {
    "text": "because that is our field to fetch the asset let's see if we can see",
    "start": "2222560",
    "end": "2230240"
  },
  {
    "text": "what about this one let's see if we can see",
    "start": "2230240",
    "end": "2237599"
  },
  {
    "text": "also the variables typically you also get the inputs for",
    "start": "2237599",
    "end": "2243200"
  },
  {
    "text": "what we send to the backend but no we don't",
    "start": "2243200",
    "end": "2248400"
  },
  {
    "text": "it doesn't matter okay so what we could do is now look into our",
    "start": "2248400",
    "end": "2253920"
  },
  {
    "text": "resolver that actually is affected in our solution",
    "start": "2253920",
    "end": "2259359"
  },
  {
    "text": "so typically we look at the telemetry data then drill into we kind of get an idea where it",
    "start": "2259359",
    "end": "2267040"
  },
  {
    "text": "should happen this mistake i know it because i built it in",
    "start": "2267040",
    "end": "2272480"
  },
  {
    "text": "in our concrete case it's in the asset price node that's",
    "start": "2272480",
    "end": "2277760"
  },
  {
    "text": "what we looked at with the not so nice sql we actually refer here to a new version",
    "start": "2277760",
    "end": "2283760"
  },
  {
    "text": "of the asset price service and this asset price service does some extra sql runs to get the counts and stuff like",
    "start": "2283760",
    "end": "2290480"
  },
  {
    "text": "that so we could now fix that and replace that maybe with the data",
    "start": "2290480",
    "end": "2297119"
  },
  {
    "text": "loader that fetches more efficiently the data or some other things",
    "start": "2297119",
    "end": "2302800"
  },
  {
    "text": "okay that's kind of how you can use elastic",
    "start": "2302800",
    "end": "2308400"
  },
  {
    "text": "to make these things visible there's one more aspect here and these are custom",
    "start": "2308400",
    "end": "2313599"
  },
  {
    "text": "metrics and i haven't talked about this so far so in order to use these anomaly",
    "start": "2313599",
    "end": "2320480"
  },
  {
    "text": "detection and we saw that in the elastic portal here like there's an",
    "start": "2320480",
    "end": "2325520"
  },
  {
    "text": "anomaly detected and we could create some jobs now to",
    "start": "2325520",
    "end": "2332240"
  },
  {
    "text": "kind of send an email if there's an animally detected and inform a developer ahead of time like maybe our system did",
    "start": "2332240",
    "end": "2340160"
  },
  {
    "text": "just for the same request one sql request always then the system can record that",
    "start": "2340160",
    "end": "2346640"
  },
  {
    "text": "can see that pattern but then when we finally just update",
    "start": "2346640",
    "end": "2351920"
  },
  {
    "text": "the backend infrastructure and now there are five six sql requests happening then",
    "start": "2351920",
    "end": "2358320"
  },
  {
    "text": "elastic could write us an email write an email to developers the",
    "start": "2358320",
    "end": "2364240"
  },
  {
    "text": "characteristics of your request actually now changed",
    "start": "2364240",
    "end": "2369280"
  },
  {
    "text": "is that right could be right i mean we are updating could could be even our better performance",
    "start": "2369280",
    "end": "2375119"
  },
  {
    "text": "but if it's not right it would be good if someone just reviews it",
    "start": "2375119",
    "end": "2380880"
  },
  {
    "text": "so we could create some rules here just go",
    "start": "2380880",
    "end": "2386960"
  },
  {
    "text": "into our metrics",
    "start": "2386960",
    "end": "2390000"
  },
  {
    "text": "see if we have some infrastructure metrics yeah",
    "start": "2392320",
    "end": "2400079"
  },
  {
    "text": "yeah so we could create a rule that that gives us an indicator like",
    "start": "2400160",
    "end": "2407119"
  },
  {
    "text": "when this and that goes out of the normal range then send me an email for instance",
    "start": "2407119",
    "end": "2414400"
  },
  {
    "text": "or do some other other things like you can put actions on that here you could write a team's",
    "start": "2414400",
    "end": "2420079"
  },
  {
    "text": "message there are a lot of integrations here that you could use",
    "start": "2420079",
    "end": "2425119"
  },
  {
    "text": "to make developers aware that something goes out of the ordinary",
    "start": "2425119",
    "end": "2431200"
  },
  {
    "text": "so in order to make that very simple it's good to have something like metrics",
    "start": "2431200",
    "end": "2436560"
  },
  {
    "text": "custom metrics where you can see that something goes out of the ordinary is much",
    "start": "2436560",
    "end": "2441760"
  },
  {
    "text": "simpler than looking at the tree so for this we already have here",
    "start": "2441760",
    "end": "2448800"
  },
  {
    "text": "the built-in metric so we could look at memory for instance but in our concrete case",
    "start": "2448800",
    "end": "2456319"
  },
  {
    "text": "we are looking at graphical problems so what we can do with hot chocolate is introduce",
    "start": "2456319",
    "end": "2463680"
  },
  {
    "text": "a log interceptor and then put on that sub matrix",
    "start": "2464400",
    "end": "2470079"
  },
  {
    "text": "let me put in a new class here",
    "start": "2470079",
    "end": "2474960"
  },
  {
    "text": "and then not this one wrong snapshot",
    "start": "2475760",
    "end": "2483279"
  },
  {
    "text": "it's the meter",
    "start": "2484640",
    "end": "2490400"
  },
  {
    "text": "i'll take this one doesn't matter so this one is the execution diagnostic",
    "start": "2491760",
    "end": "2497200"
  },
  {
    "text": "event listener we can use that to essentially hook into internal hot",
    "start": "2497200",
    "end": "2503599"
  },
  {
    "text": "chocolate events for instance the request size a good intake a good indicator if our",
    "start": "2503599",
    "end": "2510960"
  },
  {
    "text": "infrastructure is going getting under pressure is maybe how many requests go through the system so we could say",
    "start": "2510960",
    "end": "2517760"
  },
  {
    "text": "um override and then execute request",
    "start": "2517760",
    "end": "2524240"
  },
  {
    "text": "and then we could put in a meter here and that is a new api that we have",
    "start": "2524480",
    "end": "2532000"
  },
  {
    "text": "from microsoft that's actually the template i wanted to have",
    "start": "2532000",
    "end": "2537359"
  },
  {
    "text": "thank you so meter this is a this is this microsoft introduced with the activity",
    "start": "2537359",
    "end": "2543839"
  },
  {
    "text": "api in this case we can give our meter a name demo.graphql",
    "start": "2543839",
    "end": "2549119"
  },
  {
    "text": "it's version one and this meter we create a counter here",
    "start": "2549119",
    "end": "2554960"
  },
  {
    "text": "there are different kinds of meters that i could create in this car in case we keep it simple",
    "start": "2554960",
    "end": "2560880"
  },
  {
    "text": "so and then we can add then we can add like here always one we",
    "start": "2560880",
    "end": "2566400"
  },
  {
    "text": "have one request so we add one thing to our meter and our meter will batch this uh telemetry data this matrix to our",
    "start": "2566400",
    "end": "2575040"
  },
  {
    "text": "back end to our elastic back end where we can look at it in a cube",
    "start": "2575040",
    "end": "2580880"
  },
  {
    "text": "so we can see like how many requests are coming in in that",
    "start": "2580880",
    "end": "2586000"
  },
  {
    "text": "time window so in order to hook this meter up we",
    "start": "2586000",
    "end": "2591680"
  },
  {
    "text": "need to copy this key here and then we go to our configuration",
    "start": "2591680",
    "end": "2599599"
  },
  {
    "text": "and there you have these guys and we can say",
    "start": "2599599",
    "end": "2604720"
  },
  {
    "text": "add meter then just add the key here",
    "start": "2604720",
    "end": "2609839"
  },
  {
    "text": "and the the internal things here from microsoft they essentially just wrap",
    "start": "2609839",
    "end": "2615280"
  },
  {
    "text": "this ball and inject a constant there for their meters so there could be a couple",
    "start": "2615280",
    "end": "2621520"
  },
  {
    "text": "of can we have a look at that sometimes writer would be nice",
    "start": "2621520",
    "end": "2626960"
  },
  {
    "text": "but okay okay so we have we set up our own meter here",
    "start": "2626960",
    "end": "2634319"
  },
  {
    "text": "and with this um every time we get now data to our meter it will be reported to the elastic",
    "start": "2634319",
    "end": "2640880"
  },
  {
    "text": "backhand so there's one more thing we need to hook up our",
    "start": "2640880",
    "end": "2647280"
  },
  {
    "text": "look or our tracing event listener that we put up so we say add diagnostics",
    "start": "2647280",
    "end": "2653280"
  },
  {
    "text": "and then we put in the custom how do we call it logs",
    "start": "2653280",
    "end": "2660319"
  },
  {
    "text": "this guy here let's put it in here",
    "start": "2660319",
    "end": "2666240"
  },
  {
    "text": "and restart it and instrumentation let me just have a look at this",
    "start": "2669200",
    "end": "2676400"
  },
  {
    "text": "i think this is a problem why our development system doesn't report properly",
    "start": "2676400",
    "end": "2682560"
  },
  {
    "text": "fix that don't worry i delete the",
    "start": "2682560",
    "end": "2687599"
  },
  {
    "text": "api keys are my problem in this talk",
    "start": "2687599",
    "end": "2692400"
  },
  {
    "text": "okay we are here come on let's go to the stack management and",
    "start": "2695280",
    "end": "2701680"
  },
  {
    "text": "then management and then we have api keys",
    "start": "2701680",
    "end": "2710240"
  },
  {
    "text": "there let's create a new one because i",
    "start": "2710240",
    "end": "2716000"
  },
  {
    "text": "think that's why my local data is not reported",
    "start": "2716000",
    "end": "2720640"
  },
  {
    "text": "copy that feed that in here",
    "start": "2722000",
    "end": "2728400"
  },
  {
    "text": "okay let's restart that",
    "start": "2728640",
    "end": "2733000"
  },
  {
    "text": "and if you ever use dotnet watch and something doesn't work it's most of the times and i see that in my demos often",
    "start": "2735280",
    "end": "2742160"
  },
  {
    "text": "it's because dotnet watch doesn't fully re-execute the source generators a lot of dot-net code or chocolate for",
    "start": "2742160",
    "end": "2748560"
  },
  {
    "text": "instance uses source generators now and they are not fully re-executed that's why i always use this not",
    "start": "2748560",
    "end": "2755119"
  },
  {
    "text": "no hot reload but it still somehow is not fully triggered so that's",
    "start": "2755119",
    "end": "2760400"
  },
  {
    "text": "sometimes when something is not wrong just restart.net watch just as a tip",
    "start": "2760400",
    "end": "2766480"
  },
  {
    "text": "okay with that let's just do some refresh on our local api and hope that",
    "start": "2766480",
    "end": "2773200"
  },
  {
    "text": "we get to see the meters because that's a really cool and simple way to enrich your telemetry stuff with new",
    "start": "2773200",
    "end": "2780160"
  },
  {
    "text": "data",
    "start": "2780160",
    "end": "2782559"
  },
  {
    "text": "this should put pressure on the system",
    "start": "2785839",
    "end": "2789839"
  },
  {
    "text": "okay let's have a look at this so now we can go to our metrics",
    "start": "2792079",
    "end": "2798079"
  },
  {
    "text": "and matrix explorer and there",
    "start": "2799680",
    "end": "2805920"
  },
  {
    "text": "you should let's go to the inventory now we should actually now",
    "start": "2805920",
    "end": "2812000"
  },
  {
    "text": "add new data",
    "start": "2812079",
    "end": "2815560"
  },
  {
    "text": "it's called requests there that's that's you can see that here",
    "start": "2818720",
    "end": "2823920"
  },
  {
    "text": "that's actually what i introduced here this is my namespace kind of and this is a counter it's called",
    "start": "2823920",
    "end": "2830079"
  },
  {
    "text": "requests you can give it a better name in in a proper environment because when you",
    "start": "2830079",
    "end": "2836000"
  },
  {
    "text": "filter for it it's just this name we want to request counters here",
    "start": "2836000",
    "end": "2844280"
  },
  {
    "text": "much data let's produce some more it could be that something is set up wrongly it happens frequently",
    "start": "2857440",
    "end": "2863920"
  },
  {
    "text": "with this talk it's cloud every time you use cloud infrastructure",
    "start": "2863920",
    "end": "2871040"
  },
  {
    "text": "in a talk that it doesn't work",
    "start": "2871040",
    "end": "2876480"
  },
  {
    "text": "it's a shame",
    "start": "2877440",
    "end": "2880078"
  },
  {
    "text": "okay it will it will not work it will not work",
    "start": "2883839",
    "end": "2888318"
  },
  {
    "text": "okay it usually works when you set it up correctly",
    "start": "2889520",
    "end": "2894160"
  },
  {
    "text": "just have one more one more go at it development do we get the right data but also we",
    "start": "2896000",
    "end": "2903040"
  },
  {
    "text": "don't get we don't get the correct data from our local environment",
    "start": "2903040",
    "end": "2908240"
  },
  {
    "text": "so there's something wrong with me uploading to um to my cloud back and here",
    "start": "2908240",
    "end": "2915359"
  },
  {
    "text": "it's a shame okay so what you usually would see say that and let's maybe maybe we have",
    "start": "2915359",
    "end": "2922240"
  },
  {
    "text": "some historic data so let's go to may maybe",
    "start": "2922240",
    "end": "2927440"
  },
  {
    "text": "dirtiest in ndc porto it worked",
    "start": "2927440",
    "end": "2934318"
  },
  {
    "text": "oh let me have a look okay doesn't matter so usually we would",
    "start": "2934559",
    "end": "2939680"
  },
  {
    "text": "get a graph over time where we can see how much pressure on our system is",
    "start": "2939680",
    "end": "2945680"
  },
  {
    "text": "and then we could put now rules on top of these say okay this portion of the",
    "start": "2945680",
    "end": "2950720"
  },
  {
    "text": "graph represents my normal you could figure that out and then send",
    "start": "2950720",
    "end": "2957040"
  },
  {
    "text": "me a team's message whenever the graph moves out of this normal boundary and",
    "start": "2957040",
    "end": "2962319"
  },
  {
    "text": "you can have a couple of these like if you think about shop api like amazon it",
    "start": "2962319",
    "end": "2967359"
  },
  {
    "text": "could be how many checkouts do you have per minute it could be a lot of indicators combined",
    "start": "2967359",
    "end": "2973520"
  },
  {
    "text": "that you can create i recommend use meters it's a nice api you can see very",
    "start": "2973520",
    "end": "2980000"
  },
  {
    "text": "easy to set up and it gives a lot of insights in if something",
    "start": "2980000",
    "end": "2985359"
  },
  {
    "text": "works all right so this is it",
    "start": "2985359",
    "end": "2990400"
  },
  {
    "text": "or the talk essentially",
    "start": "2990400",
    "end": "2995440"
  },
  {
    "text": "let's go back to slides i hope you get got an idea into",
    "start": "2995440",
    "end": "3003359"
  },
  {
    "text": "what open telemetry can give you especially with elastic we personally use elastic because it gives a lot of",
    "start": "3003520",
    "end": "3010079"
  },
  {
    "text": "flexibility and is quite cheap in the entry level like the",
    "start": "3010079",
    "end": "3015119"
  },
  {
    "text": "instance that i have here was 30 30 us donors",
    "start": "3015119",
    "end": "3020240"
  },
  {
    "text": "or not not a big investment if we are talking about telemetry especially if i",
    "start": "3020240",
    "end": "3025839"
  },
  {
    "text": "remember how we started at the project i worked on where we had two developers working for",
    "start": "3025839",
    "end": "3031520"
  },
  {
    "text": "two years on this project like they had to develop this stuff right it's much cheaper to",
    "start": "3031520",
    "end": "3037839"
  },
  {
    "text": "pay 30 us dollars months but look at the open telemetry solutions",
    "start": "3037839",
    "end": "3043760"
  },
  {
    "text": "that are actually there honeycomb is a very good one i can also recommend a look at this one",
    "start": "3043760",
    "end": "3048800"
  },
  {
    "text": "elastic and a jager probably a lot of people also know",
    "start": "3048800",
    "end": "3053839"
  },
  {
    "text": "jaeger it's i think it was created from uber originally so also a good platform to",
    "start": "3053839",
    "end": "3060079"
  },
  {
    "text": "look for open telemetry tools i expect a lot more tours in that area",
    "start": "3060079",
    "end": "3065760"
  },
  {
    "text": "to come up over the next years especially with net z7 i expect release",
    "start": "3065760",
    "end": "3070880"
  },
  {
    "text": "versions of open telemetry so it's a good time to start exploring even if you're not using graphql",
    "start": "3070880",
    "end": "3077839"
  },
  {
    "text": "okay and if you want to follow me or want to connect to our project",
    "start": "3077839",
    "end": "3084480"
  },
  {
    "text": "make a screenshot and have a good rest of the conference",
    "start": "3084480",
    "end": "3091318"
  },
  {
    "text": "you",
    "start": "3097359",
    "end": "3099440"
  }
]