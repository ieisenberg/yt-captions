[
  {
    "text": "okay all right can you hear me okay good so uh first hi and welcome to",
    "start": "4680",
    "end": "10920"
  },
  {
    "text": "this talk and uh that's a pretty presumptuous title isn't it so come please everyone uh come and",
    "start": "10920",
    "end": "17340"
  },
  {
    "text": "see how I work with Jason right I'm very self-conscious um my name is",
    "start": "17340",
    "end": "23760"
  },
  {
    "text": "um I'm in an old software developer I've been sort of programming for money for for 20 years",
    "start": "23760",
    "end": "30660"
  },
  {
    "text": "um I work for the Norwegian labor and Welfare Administration uh and today I'd like to talk about I'd",
    "start": "30660",
    "end": "39000"
  },
  {
    "text": "like to talk about three things that sort of pertain to working with Jason first and foremost and the thing the",
    "start": "39000",
    "end": "45899"
  },
  {
    "text": "most important thing and that thing that I'm going to use the most of my time on is how can we sort of work with Json in",
    "start": "45899",
    "end": "52860"
  },
  {
    "text": "a simple way so simplicity then I'm going to talk a little bit about uh contracts so in particular",
    "start": "52860",
    "end": "59640"
  },
  {
    "text": "contracts as a means to be explicit which is something that then again can help us to achieve this goal of",
    "start": "59640",
    "end": "65820"
  },
  {
    "text": "simplicity and finally I'm going to talk a little bit about testing um",
    "start": "65820",
    "end": "71220"
  },
  {
    "text": "yeah uh sort of it's an important disclaimer for me that there's there are going to",
    "start": "71220",
    "end": "76860"
  },
  {
    "text": "be no Advanced Techniques at all in this talk and I hope I made that uh clear in the",
    "start": "76860",
    "end": "82500"
  },
  {
    "text": "abstract for the talk because that's sort of the contract between me as a speaker and you as an audience",
    "start": "82500",
    "end": "87960"
  },
  {
    "text": "um I think I did but well we'll see about that in fact it's sort of going to be a talk about the opposite of Advanced",
    "start": "87960",
    "end": "94799"
  },
  {
    "text": "Techniques I'm going to argue that to the extent possible we should try to refrain from using Advanced Techniques",
    "start": "94799",
    "end": "101040"
  },
  {
    "text": "than when we're working with Json and the reason for that is that we're trying to aim for Simplicity",
    "start": "101040",
    "end": "106979"
  },
  {
    "text": "which are sort of at odds with each other um so Jason uh",
    "start": "106979",
    "end": "113700"
  },
  {
    "text": "in preparation for this talk this was the first slide I I made",
    "start": "113700",
    "end": "118860"
  },
  {
    "text": "um and the reason for that is that somehow um we managed to turn working with Jason",
    "start": "118860",
    "end": "126180"
  },
  {
    "text": "into this sort of complicated mess and I think we did so in an effort to make it easy which is",
    "start": "126180",
    "end": "132060"
  },
  {
    "text": "kind of kind of a sad result so there's there's an element of a feeling like I'm all too old for for",
    "start": "132060",
    "end": "139260"
  },
  {
    "text": "working in this manner um too old to sort of be chasing down",
    "start": "139260",
    "end": "144300"
  },
  {
    "text": "weird behavior in in code that handles Json but even more importantly is that",
    "start": "144300",
    "end": "150060"
  },
  {
    "text": "you're too young for this right you should not be spending time working on weird behavior in adjacent serializers",
    "start": "150060",
    "end": "157260"
  },
  {
    "text": "right you shouldn't you should be doing something more interesting than that",
    "start": "157260",
    "end": "162720"
  },
  {
    "text": "now uh I need to add one caveat um so this talk is about how we from my",
    "start": "162720",
    "end": "170220"
  },
  {
    "text": "experience how we typically work with Json in.net right so working inside a",
    "start": "170220",
    "end": "175680"
  },
  {
    "text": "statically typed programming language um if you work with a dynamically typed",
    "start": "175680",
    "end": "180720"
  },
  {
    "text": "programming language like JavaScript or closure or something like that some of the problems that I'm going to talk about might seem sort of weird or quaint",
    "start": "180720",
    "end": "187379"
  },
  {
    "text": "to you even that if that is the case I sort of suggest that you sit back and sort of uh",
    "start": "187379",
    "end": "193080"
  },
  {
    "text": "enjoy your feeling of superiority and smugness for a while uh savor it like",
    "start": "193080",
    "end": "198120"
  },
  {
    "text": "it's a piece of fine chocolate and let's let's all hope that you don't choke on it um",
    "start": "198120",
    "end": "204180"
  },
  {
    "text": "so so the reason for for this entire thing let's let's start with this question is Jason a complicated thing",
    "start": "204180",
    "end": "213739"
  },
  {
    "text": "so if I create a scale from simple to complicated where should we put Json here",
    "start": "213900",
    "end": "220980"
  },
  {
    "text": "sit over here towards the simple end is somewhere in the middle",
    "start": "220980",
    "end": "226680"
  },
  {
    "text": "or is it actually quite complicated and to answer that let's let's go to json.org I think that's what it's called",
    "start": "226680",
    "end": "234540"
  },
  {
    "text": "um and look at what Json really is right so uh Json value",
    "start": "234540",
    "end": "239940"
  },
  {
    "text": "can be one of these things it might have some white space and stuff then it might be either a string or it could be a",
    "start": "239940",
    "end": "246120"
  },
  {
    "text": "number it could be an object it could be an array and then it could be one of three sort of uh constant values true false or",
    "start": "246120",
    "end": "253799"
  },
  {
    "text": "no and that's sort of all there is to it but of course um there are some details here so a white space might be one of",
    "start": "253799",
    "end": "260699"
  },
  {
    "text": "these things it could be a space or line field carries return horizontal tab um a string a little bit more",
    "start": "260699",
    "end": "267060"
  },
  {
    "text": "complicated perhaps starts with a quote and then could have basically anything except a backslash or or another quote",
    "start": "267060",
    "end": "274620"
  },
  {
    "text": "and if you have a backslash then there are some rules for what what characters are allowed in that case and so on and",
    "start": "274620",
    "end": "280199"
  },
  {
    "text": "so forth this allows you to escape characters in Json strings but still it fits on the slide",
    "start": "280199",
    "end": "286979"
  },
  {
    "text": "ah then we have numbers and Json numbers can be integers or decimal numbers and",
    "start": "286979",
    "end": "292620"
  },
  {
    "text": "it also supports scientific notation objects",
    "start": "292620",
    "end": "299160"
  },
  {
    "text": "have these sort of like Curly bracket things uh and it could be empty so it just sort of degenerate uh objector can",
    "start": "299160",
    "end": "306600"
  },
  {
    "text": "have some properties and properties have a Json string for a key and then it",
    "start": "306600",
    "end": "311820"
  },
  {
    "text": "has a colon and then it has another one of these Json values so it's recursive in that sense right",
    "start": "311820",
    "end": "318500"
  },
  {
    "text": "arrays even even simpler um bracket",
    "start": "318500",
    "end": "324660"
  },
  {
    "text": "could be an empty array or it could have a comma separated list of values",
    "start": "324660",
    "end": "330060"
  },
  {
    "text": "and that that is Json and from this I'm going to make the Bold",
    "start": "330060",
    "end": "335940"
  },
  {
    "text": "claim that Json is not complicated it's actually very very simple it's hard",
    "start": "335940",
    "end": "341699"
  },
  {
    "text": "to imagine in fact to have a format that you can go very much further to in the",
    "start": "341699",
    "end": "346800"
  },
  {
    "text": "direction of simple right uh you would put put something like like",
    "start": "346800",
    "end": "352560"
  },
  {
    "text": "yaml uh in an entirely different place on this on this scale",
    "start": "352560",
    "end": "357720"
  },
  {
    "text": "right the yaml specification for yaml 1.11 in the PDF format is 86 pages that",
    "start": "357720",
    "end": "364380"
  },
  {
    "text": "is more complicated than Jason Jason is simple ah what about the code for handling",
    "start": "364380",
    "end": "371340"
  },
  {
    "text": "Jason the code that we typically write to handle Json let's invent another scale from trivial",
    "start": "371340",
    "end": "377820"
  },
  {
    "text": "to non-trivial and I'm talking now uh about the sort of the mental effort you need to work out",
    "start": "377820",
    "end": "384300"
  },
  {
    "text": "exactly how it works would you put it here",
    "start": "384300",
    "end": "390800"
  },
  {
    "text": "no really put it somewhere towards a non-trivial end and if you do that why",
    "start": "390900",
    "end": "397620"
  },
  {
    "text": "would you put it over there when Jason is simple is it because performance reasons",
    "start": "397620",
    "end": "403680"
  },
  {
    "text": "because performance is sort of a valid concern always right so if you have like gigabytes of Json documents coming at",
    "start": "403680",
    "end": "410039"
  },
  {
    "text": "you a hundred times a second maybe you need to do something uh to make sure that that's that's a fast process and",
    "start": "410039",
    "end": "416880"
  },
  {
    "text": "maybe you should be looking at some other formats than Json also but but that's a sort of uh another problem if",
    "start": "416880",
    "end": "423660"
  },
  {
    "text": "you do make your Json handling code more towards the non-trivial end to",
    "start": "423660",
    "end": "429960"
  },
  {
    "text": "achieve performance I would uh highly recommend measuring and making sure that",
    "start": "429960",
    "end": "435600"
  },
  {
    "text": "you actually get the performance benefits that you think you're doing um",
    "start": "435600",
    "end": "440639"
  },
  {
    "text": "if on the other hand the purpose for making the code or the",
    "start": "440639",
    "end": "445979"
  },
  {
    "text": "whole process of handling Json non-trivial is to eliminate some boilerplate code",
    "start": "445979",
    "end": "451560"
  },
  {
    "text": "then we're going to have a conversation now first when you eliminate boilerplate code",
    "start": "451560",
    "end": "457500"
  },
  {
    "text": "you don't really get rid of the boilerplate code you just move it somewhere else right so you get rid of",
    "start": "457500",
    "end": "462660"
  },
  {
    "text": "the body but the spirit still lives somewhere right and it lives specifically inside some",
    "start": "462660",
    "end": "468720"
  },
  {
    "text": "Library some magic box that does some meta programming to do the same job that your boilerplate code is doing",
    "start": "468720",
    "end": "475860"
  },
  {
    "text": "so let's talk a little bit more about boilerplate is boilerplate complicated",
    "start": "475860",
    "end": "481880"
  },
  {
    "text": "on a scale from trivial to non-trivial where should we put boilerplate",
    "start": "482160",
    "end": "487380"
  },
  {
    "text": "well at least boil a plate for handling Jason is so far towards the trivial side",
    "start": "487380",
    "end": "495180"
  },
  {
    "text": "um it's so brain dead and so repetitive that it's sort of an insult to our fine Minds to be typing it out",
    "start": "495180",
    "end": "501900"
  },
  {
    "text": "that's how trivial boilerplate is now there are some benefits to trivial code right let's talk about the benefits of",
    "start": "501900",
    "end": "507840"
  },
  {
    "text": "trivial code first of all it's trivial",
    "start": "507840",
    "end": "512300"
  },
  {
    "text": "that's basically the main advantage but trivial code then is easy to read it's easy to test it's easy to change",
    "start": "513000",
    "end": "520680"
  },
  {
    "text": "and it's fairly trivial to spot and fix mistakes it doesn't get much easier than fixing mistakes in boilerplate code that",
    "start": "520680",
    "end": "528360"
  },
  {
    "text": "means that anyone can work on it you don't need any special knowledge you don't don't need a lot of experience to",
    "start": "528360",
    "end": "533399"
  },
  {
    "text": "do that there are no hidden workings no different special dependencies that can come out and bite you",
    "start": "533399",
    "end": "539040"
  },
  {
    "text": "and that means that there's little fear also when you change something of introducing",
    "start": "539040",
    "end": "544380"
  },
  {
    "text": "some weird bug and if you do introduce a bug it's fairly oddly obvious what the cause of",
    "start": "544380",
    "end": "550920"
  },
  {
    "text": "that bug was okay so there's a famous talk by Rich hickey uh Rich hickey is the inventor of",
    "start": "550920",
    "end": "557100"
  },
  {
    "text": "the closure programming language it's called Simple Made Easy and in that talk well he",
    "start": "557100",
    "end": "563660"
  },
  {
    "text": "distinguishes then between simple and easy right that's fairly obvious from the title and it",
    "start": "563660",
    "end": "569160"
  },
  {
    "text": "talks about what it means to be simple what it means to be easy how we tend to confuse though through those two things",
    "start": "569160",
    "end": "574800"
  },
  {
    "text": "and why that's a problem and according to hickey apparently he",
    "start": "574800",
    "end": "580140"
  },
  {
    "text": "was looking out sort of the uh the history of the word simple and it means not intertwined with something else",
    "start": "580140",
    "end": "586320"
  },
  {
    "text": "right not mixed up with something else just one thing and we find sort of the same thing uh in",
    "start": "586320",
    "end": "594420"
  },
  {
    "text": "different kinds of advice and principles and software engineering like the single responsibility principle that says this",
    "start": "594420",
    "end": "600060"
  },
  {
    "text": "there should be one reason to change and you tend to get that when things are not mixed together right",
    "start": "600060",
    "end": "606660"
  },
  {
    "text": "there's also um the old sort of uh design advice for Unix tools that says that tools should",
    "start": "606660",
    "end": "613019"
  },
  {
    "text": "do one thing well sort of the same idea now the opposite of simple is",
    "start": "613019",
    "end": "618720"
  },
  {
    "text": "complicated and complicated that that means that things are intertwined right not just",
    "start": "618720",
    "end": "624839"
  },
  {
    "text": "one thing you're doing several things at once easy on the other hand means something",
    "start": "624839",
    "end": "630600"
  },
  {
    "text": "entirely different easy means that it's convenient it's close at hand and it can feel very convenient to do",
    "start": "630600",
    "end": "637560"
  },
  {
    "text": "multiple things at once right we have sayings like to kill two birds",
    "start": "637560",
    "end": "643560"
  },
  {
    "text": "with one stone very nice uh",
    "start": "643560",
    "end": "648839"
  },
  {
    "text": "now unfortunately I think we like to say that we like simple code right we say simple but unfortunately we often",
    "start": "648839",
    "end": "656279"
  },
  {
    "text": "mean easy we say that we like simple code but we tend to choose convenient code",
    "start": "656279",
    "end": "663839"
  },
  {
    "text": "and that means also that we tend to choose magic over transparency and making things explicit",
    "start": "663839",
    "end": "670700"
  },
  {
    "text": "now what does all this have to do with Json well one thing is that the authors of",
    "start": "672660",
    "end": "678660"
  },
  {
    "text": "Json serializer libraries they know know all of this stuff they know that we appreciate convenience",
    "start": "678660",
    "end": "685980"
  },
  {
    "text": "and therefore many Json serializer optimize for convenience many Jason serializers are way too",
    "start": "685980",
    "end": "693000"
  },
  {
    "text": "ambitious they want to help us too much that's a strange thing to say but it's actually a problem that you're trying to",
    "start": "693000",
    "end": "699000"
  },
  {
    "text": "do too much for us of course at this point you may be thinking what the hell is this guy",
    "start": "699000",
    "end": "704100"
  },
  {
    "text": "talking about um but but to answer that let's sort of um drill into exactly what this process",
    "start": "704100",
    "end": "710579"
  },
  {
    "text": "of Json serialization really is what's sort of the essence of it right",
    "start": "710579",
    "end": "715740"
  },
  {
    "text": "well I made a drawing it's something like this right it's actually a two-way process so either you have some sort of",
    "start": "715740",
    "end": "721560"
  },
  {
    "text": "data structure in memory and you want to convert that into a string representation in the Json format that",
    "start": "721560",
    "end": "728040"
  },
  {
    "text": "is the Json serialization when we talk about Json serialization we also tend to include deserialization the",
    "start": "728040",
    "end": "734579"
  },
  {
    "text": "serialization which is going in the opposite direction that means that you have some Json",
    "start": "734579",
    "end": "739820"
  },
  {
    "text": "formatted string thing and you want to sort of tokenize and parse that and turn it into one of these",
    "start": "739820",
    "end": "746399"
  },
  {
    "text": "data structures in memory of these two processes um deserialization tends to be the hardest",
    "start": "746399",
    "end": "752220"
  },
  {
    "text": "one uh yes now is this difficult to do",
    "start": "752220",
    "end": "759480"
  },
  {
    "text": "is it simple since we'll be talking about Simplicity well the answer is it depends and I mean it's not necessarily",
    "start": "759480",
    "end": "767399"
  },
  {
    "text": "super simple because anytime you're parsing something it's not necessarily super simple but it doesn't have to be",
    "start": "767399",
    "end": "772800"
  },
  {
    "text": "super complicated either so I'm even going to say that it's going to depend a lot",
    "start": "772800",
    "end": "778440"
  },
  {
    "text": "it's going to depend a lot in particular on that data structure right we didn't specify what that data structure was and",
    "start": "778440",
    "end": "785040"
  },
  {
    "text": "how that now relates to the Json text you have",
    "start": "785040",
    "end": "789380"
  },
  {
    "text": "so let's take a look at this figure again and see if we can make it more explicit",
    "start": "791160",
    "end": "796440"
  },
  {
    "text": "we can sort of split it up a little bit further into something like this right so you have your data structure on the",
    "start": "796440",
    "end": "802980"
  },
  {
    "text": "one hand then you have some sort of mapping towards sort of like a conceptual",
    "start": "802980",
    "end": "808440"
  },
  {
    "text": "adjacent object model right it doesn't necessarily have to exist in your program but conceptually you're going to",
    "start": "808440",
    "end": "814380"
  },
  {
    "text": "sort of map it over to the Json object model and then you still realize that which is sort of like a mechanical process",
    "start": "814380",
    "end": "821339"
  },
  {
    "text": "and then it goes the other way around as well now uh gets even worse than this in a",
    "start": "821339",
    "end": "827579"
  },
  {
    "text": "sense because now I'm doing this um I'm assuming that I'm just having one data structure but in a practical uh",
    "start": "827579",
    "end": "834240"
  },
  {
    "text": "situation it might be that you have one producer of Jason and you have another that's the consumer so we now do map",
    "start": "834240",
    "end": "840600"
  },
  {
    "text": "over to the conceptual model and then you map to some other data structure um",
    "start": "840600",
    "end": "845700"
  },
  {
    "text": "but to sort of simplify the diagram to simplify the discussion a little bit I'm going to pretend that we're always going",
    "start": "845700",
    "end": "850980"
  },
  {
    "text": "to deal with um the same data structure now we have",
    "start": "850980",
    "end": "856139"
  },
  {
    "text": "on I guess the right hand side the process of serialization a pure",
    "start": "856139",
    "end": "861660"
  },
  {
    "text": "serialization if you will on the right so let's look a little bit about that in",
    "start": "861660",
    "end": "867120"
  },
  {
    "text": "in detail so you have the pure serialization this problem has some very nice properties",
    "start": "867120",
    "end": "873720"
  },
  {
    "text": "first of all it's a well-defined problem we know exactly what goes into this",
    "start": "873720",
    "end": "879260"
  },
  {
    "text": "it means it sort of captures the essential complexity of serializing in these serialization",
    "start": "879480",
    "end": "885720"
  },
  {
    "text": "um from from text from from text in the Json format and that means it also has a",
    "start": "885720",
    "end": "891000"
  },
  {
    "text": "bounded complexity right there are no outside sources of additional complexity to solving this problem the only thing",
    "start": "891000",
    "end": "897420"
  },
  {
    "text": "that can really add any complexity here is if the Json format itself changes in some way",
    "start": "897420",
    "end": "903180"
  },
  {
    "text": "and that happens rarely it has a minimum of failure modes so",
    "start": "903180",
    "end": "909779"
  },
  {
    "text": "basically okay probably some computers can always fail right but apart from that what what can happen not a whole",
    "start": "909779",
    "end": "917040"
  },
  {
    "text": "lot right if the text happens not to be adjacent then it's going to fail that's",
    "start": "917040",
    "end": "922260"
  },
  {
    "text": "okay but as long as it's actually valid Json you're going to be able to deserialize it into an object model for",
    "start": "922260",
    "end": "928860"
  },
  {
    "text": "the Json um data format now it's sort of an interesting",
    "start": "928860",
    "end": "935399"
  },
  {
    "text": "engineering challenge to turn this process into something that's uses little memory uh and is it's blazingly",
    "start": "935399",
    "end": "942120"
  },
  {
    "text": "fast and this is sort of a problem that you want all the clever programmers in the world to sort of compete to achieve",
    "start": "942120",
    "end": "948060"
  },
  {
    "text": "in the best possible way right and then you can use their their refined results to do that",
    "start": "948060",
    "end": "954360"
  },
  {
    "text": "okay let's look at what sort of remains now the mapping from the data structure to",
    "start": "954360",
    "end": "960240"
  },
  {
    "text": "today's an object model what sort of characterizes this problem",
    "start": "960240",
    "end": "965699"
  },
  {
    "text": "what kind of problem is this is sort of like a general arbitrary data",
    "start": "965699",
    "end": "972120"
  },
  {
    "text": "mapping situation from one data structure to another and unless you know something about that",
    "start": "972120",
    "end": "978360"
  },
  {
    "text": "data structure that you're sort of trying to map to and from you don't know how the hardest problem is so it has",
    "start": "978360",
    "end": "984120"
  },
  {
    "text": "some unfortunate properties it's very different from the pure serialization problem",
    "start": "984120",
    "end": "989639"
  },
  {
    "text": "so it's ill-defined first of all there are a lot of open questions here because we don't know what that data structure",
    "start": "989639",
    "end": "995100"
  },
  {
    "text": "is you don't know if there's going to be some sort of impedance mismatch that's going to make this process hard",
    "start": "995100",
    "end": "1001220"
  },
  {
    "text": "maybe there's going to be some information loss going in one or the other direction",
    "start": "1001220",
    "end": "1006440"
  },
  {
    "text": "maybe there's some data transformation going on and all of these the answers to all",
    "start": "1006440",
    "end": "1012259"
  },
  {
    "text": "these questions May introduce new failure modes new reasons for this to fail",
    "start": "1012259",
    "end": "1017600"
  },
  {
    "text": "and in a sense this problem has unbounded complexity you can make this arbitrarily hard but I'm sort of moving",
    "start": "1017600",
    "end": "1023360"
  },
  {
    "text": "the data structure far away from from what the Json object model",
    "start": "1023360",
    "end": "1028400"
  },
  {
    "text": "talks about now in a situation like this I'm going to argue that you want direct control",
    "start": "1028400",
    "end": "1034760"
  },
  {
    "text": "over what happens right you want maximum transparency you want to know do you be able to inspect",
    "start": "1034760",
    "end": "1040520"
  },
  {
    "text": "exactly what's going on in this mapping process that means you need explicit code",
    "start": "1040520",
    "end": "1046298"
  },
  {
    "text": "but let's say let's say you don't do that let's say you opt out of having explicit code because that's boilerplate",
    "start": "1046579",
    "end": "1052580"
  },
  {
    "text": "and it's boring and you decide to do to use some library to do that mapping magically for you",
    "start": "1052580",
    "end": "1059539"
  },
  {
    "text": "what happens then well that mapping process is going to have to rely on heuristics and guesses",
    "start": "1059539",
    "end": "1065299"
  },
  {
    "text": "that's how it can do its magic right it's going to assume some things about this process it's going to rely on names",
    "start": "1065299",
    "end": "1071000"
  },
  {
    "text": "and conventions and stuff like that and of course because heuristics can be wrong it might offer sort of a broad set",
    "start": "1071000",
    "end": "1077840"
  },
  {
    "text": "of them and you can choose between them so you have some configurations options and then you might be able to provide",
    "start": "1077840",
    "end": "1084020"
  },
  {
    "text": "like hints and stuff and guidance to the in addition to these heuristics for the",
    "start": "1084020",
    "end": "1090679"
  },
  {
    "text": "cases when it doesn't really produce what you want so you can annotate your your target data structure if you like",
    "start": "1090679",
    "end": "1097100"
  },
  {
    "text": "um to help the library achieve um what it was supposed to achieve",
    "start": "1097100",
    "end": "1102440"
  },
  {
    "text": "automatically right of course this now couples you and your data structure to whatever",
    "start": "1102440",
    "end": "1108380"
  },
  {
    "text": "Library you're using and finally if all else fails",
    "start": "1108380",
    "end": "1114200"
  },
  {
    "text": "um you may be able to write some plugins for your uh serializer Library",
    "start": "1114200",
    "end": "1119720"
  },
  {
    "text": "um that sort of fits into this larger magic Machinery that you're relying on and of course to write one of these",
    "start": "1119720",
    "end": "1126020"
  },
  {
    "text": "plugins that requires quite a lot of in-depth knowledge about the library you're using right and I I've tried to",
    "start": "1126020",
    "end": "1132260"
  },
  {
    "text": "write some of these plugins and it's not trivial whatever it is it's not trivial code right it usually has mistakes in it",
    "start": "1132260",
    "end": "1138740"
  },
  {
    "text": "because I'm not an expert on that magic machinery but all of these are sort of mechanisms",
    "start": "1138740",
    "end": "1144200"
  },
  {
    "text": "now to regain some of the control that we lost when we said that this is going to be handled magically for us",
    "start": "1144200",
    "end": "1152080"
  },
  {
    "text": "and as always I'm going to feel a little bit like this right trying to control you're going to have some buttons and",
    "start": "1152179",
    "end": "1158660"
  },
  {
    "text": "some levers try to pick up that thing and and sort of achieve your goal that way but it's always going to be a black",
    "start": "1158660",
    "end": "1165440"
  },
  {
    "text": "box and much more cumbersome and just sort of reaching your hand and grabbing what you want",
    "start": "1165440",
    "end": "1171039"
  },
  {
    "text": "let's talk I'd like to say a few more words about sort of writing these plugins because",
    "start": "1171039",
    "end": "1176179"
  },
  {
    "text": "I've gone down this road right now one of the problems is that when",
    "start": "1176179",
    "end": "1182179"
  },
  {
    "text": "you're writing a plugin to a parser you're writing a parser",
    "start": "1182179",
    "end": "1187000"
  },
  {
    "text": "and writing a parser can be a lot of fun I think writing a parser is fun",
    "start": "1187580",
    "end": "1193039"
  },
  {
    "text": "especially when it doesn't have to work that well writing a parser can be educational",
    "start": "1193039",
    "end": "1198200"
  },
  {
    "text": "you can learn a lot from it it's a nice cutter to do if you do it on your free time that's cool",
    "start": "1198200",
    "end": "1205520"
  },
  {
    "text": "uh but whatever it is it's not simple writing a parser is never simple even",
    "start": "1205520",
    "end": "1210799"
  },
  {
    "text": "for something as simple as Json it's not trivial to get it correct and it's not simple code right parser code is not",
    "start": "1210799",
    "end": "1218179"
  },
  {
    "text": "going to be trivial and finally writing a parser is probably not in your",
    "start": "1218179",
    "end": "1224539"
  },
  {
    "text": "core domain right this is probably not why you're hired as a programmer to be writing a",
    "start": "1224539",
    "end": "1229700"
  },
  {
    "text": "parser and it might be that you should invest your time and your effort and your",
    "start": "1229700",
    "end": "1236900"
  },
  {
    "text": "brilliant mind on something more important",
    "start": "1236900",
    "end": "1241360"
  },
  {
    "text": "okay so let's let's return to this ill-defined problem what should we do in this situation",
    "start": "1243260",
    "end": "1249080"
  },
  {
    "text": "and one thing is that you can eliminate this process altogether and just work with the Json object model that's one choice",
    "start": "1249080",
    "end": "1255679"
  },
  {
    "text": "and it's not as bad as you might think but of course that means that there might be um sort of this you need an explicit",
    "start": "1255679",
    "end": "1262580"
  },
  {
    "text": "representation of the Json object model somewhere in your code either from the library you're using or you're going to have to write that to",
    "start": "1262580",
    "end": "1268460"
  },
  {
    "text": "yourself and you might not think that's a very good idea so what you can do instead",
    "start": "1268460",
    "end": "1274880"
  },
  {
    "text": "and that I recommend doing is to use a minimal mapping",
    "start": "1274880",
    "end": "1280240"
  },
  {
    "text": "you could avoid um right [Music] um you're going to avoid a lot of problems",
    "start": "1280240",
    "end": "1286400"
  },
  {
    "text": "if you try to you can have this mapping but you make it as sort of as trivial as",
    "start": "1286400",
    "end": "1291679"
  },
  {
    "text": "possible and one way to do that is to use something that I like to call the Json dto so dto is a data transfer",
    "start": "1291679",
    "end": "1298400"
  },
  {
    "text": "object Json dto is one that sort of specifically tailored to represent Json data",
    "start": "1298400",
    "end": "1305179"
  },
  {
    "text": "that means there's going to be no transformation of data here no configuration except it might be if you have an over",
    "start": "1305179",
    "end": "1313460"
  },
  {
    "text": "ambitious Json serializer you might have to turn some things off that might be your configuration I'm",
    "start": "1313460",
    "end": "1318740"
  },
  {
    "text": "going to come back to that later no annotations on these Json details because they won't be needed and you're",
    "start": "1318740",
    "end": "1324919"
  },
  {
    "text": "definitely not going to write any plugins and this I think",
    "start": "1324919",
    "end": "1330080"
  },
  {
    "text": "is a process that is okay to automate right because you solved you answered a",
    "start": "1330080",
    "end": "1335299"
  },
  {
    "text": "lot of those open questions in the simplest possible way",
    "start": "1335299",
    "end": "1339940"
  },
  {
    "text": "so for this process now we're going to leave this right hand side to the Json serializer and it's going to solve a",
    "start": "1342260",
    "end": "1348980"
  },
  {
    "text": "well-defined problem and that means that you can take whatever Jesus Jason serializer have you",
    "start": "1348980",
    "end": "1354500"
  },
  {
    "text": "have and if a brand new super fast uh zero allocation Json serializer comes",
    "start": "1354500",
    "end": "1361340"
  },
  {
    "text": "along it's going to be very trivial to swap it right because it's gonna it's gonna solve exactly the same problem",
    "start": "1361340",
    "end": "1368720"
  },
  {
    "text": "right so now the sort of the Json standard is going to be the contract that these Json serializers act upon not",
    "start": "1368720",
    "end": "1376520"
  },
  {
    "text": "with every list of features they happen to support and then this",
    "start": "1376520",
    "end": "1382340"
  },
  {
    "text": "is going to be handwritten and yes I know that this is going to sound oh man I'm gonna have to write all this sort of",
    "start": "1382340",
    "end": "1387980"
  },
  {
    "text": "trivial mapping code that's exactly the point right",
    "start": "1387980",
    "end": "1393380"
  },
  {
    "text": "one of the nice things about handwriting this also is that if there are tiny",
    "start": "1393380",
    "end": "1398600"
  },
  {
    "text": "minute variations inside of this boilerplate code it's trivial to do that",
    "start": "1398600",
    "end": "1403760"
  },
  {
    "text": "whereas instructing your a sort of a magic box to do that is much much harder",
    "start": "1403760",
    "end": "1410559"
  },
  {
    "text": "okay and now you're also free to let these",
    "start": "1410559",
    "end": "1415760"
  },
  {
    "text": "sort of data structures you have be actual genuine domain objects without concern of how hard it is for the Json",
    "start": "1415760",
    "end": "1421940"
  },
  {
    "text": "serializer to actually be able to serialize into your domain objects right you don't have to sort of fight have",
    "start": "1421940",
    "end": "1429440"
  },
  {
    "text": "this battle so oh am I going to encapsulate this but then it's going to be harder for today's in serializer but proper domain objects should be",
    "start": "1429440",
    "end": "1436220"
  },
  {
    "text": "encapsulated and so on and so forth you're going to sort of sidestep all of that and just take manual control",
    "start": "1436220",
    "end": "1444200"
  },
  {
    "text": "okay so so what exactly are these Json DDOS that I talk about so dto data transfer object um",
    "start": "1444200",
    "end": "1452240"
  },
  {
    "text": "but it's going to be some additional constraints to make um working with Json",
    "start": "1452240",
    "end": "1457580"
  },
  {
    "text": "extra simple now they're going to be just property bags sort of typed property bags",
    "start": "1457580",
    "end": "1464179"
  },
  {
    "text": "now Json objects themselves are sort of the untyped property bags right so like dictionaries almost",
    "start": "1464179",
    "end": "1470659"
  },
  {
    "text": "um Json details are typed property bags they have a default Constructor makes it very easy to sort of create for the",
    "start": "1470659",
    "end": "1477919"
  },
  {
    "text": "serializer it has Getters and Setters and then it can and this is sort of the crucial part that makes it specific for",
    "start": "1477919",
    "end": "1485120"
  },
  {
    "text": "Json is you can only use types that have some sort of direct counterpart in Json",
    "start": "1485120",
    "end": "1490700"
  },
  {
    "text": "now what I mean by that well I mean that we can use strings",
    "start": "1490700",
    "end": "1496940"
  },
  {
    "text": "dot net strings mapped to Json strings right you can use integers and doubles because",
    "start": "1496940",
    "end": "1502940"
  },
  {
    "text": "they're mapped naturally to numbers in Json you can use whenever you have a Json object you can use another one of these",
    "start": "1502940",
    "end": "1509299"
  },
  {
    "text": "Json dtos and then for arrays you can use arrays that's the only collection type you're",
    "start": "1509299",
    "end": "1516020"
  },
  {
    "text": "going to use in a dto no lists no I read only list no collection no none of that",
    "start": "1516020",
    "end": "1522260"
  },
  {
    "text": "stuff just an array right because you're gonna you're gonna know in advance uh how how long that thing is",
    "start": "1522260",
    "end": "1529460"
  },
  {
    "text": "and they're never gonna append to it stuff like that um and finally you have a pool that's going",
    "start": "1529460",
    "end": "1535940"
  },
  {
    "text": "to cover Through unfolds and of course null is the the absence of one of these objects or race I guess",
    "start": "1535940",
    "end": "1542659"
  },
  {
    "text": "did you notice that there was no date time here",
    "start": "1542659",
    "end": "1547899"
  },
  {
    "text": "there are no date times in Json details and the reason for that is that Jason has no concept of time we",
    "start": "1549440",
    "end": "1556220"
  },
  {
    "text": "didn't see any date times in the sort of the specification for Jason the Jason is all just a string it happens to have",
    "start": "1556220",
    "end": "1561559"
  },
  {
    "text": "some sort of format that's a detail that Jason doesn't care about and you might be sitting there thinking",
    "start": "1561559",
    "end": "1567799"
  },
  {
    "text": "surely we should be making an exception for time times are so important we have",
    "start": "1567799",
    "end": "1572960"
  },
  {
    "text": "a lot of time stamps it is so boring to do all this mapping by hand surely",
    "start": "1572960",
    "end": "1578539"
  },
  {
    "text": "no and actually I'm going to double down and say hell no",
    "start": "1578539",
    "end": "1585799"
  },
  {
    "text": "because this is the siren Call of convenience this is easy we want to use",
    "start": "1585799",
    "end": "1591380"
  },
  {
    "text": "it because it's there right newtonself does this for us it's so easy to use it",
    "start": "1591380",
    "end": "1597260"
  },
  {
    "text": "but easy is not the same as simple and we know that from experience that we",
    "start": "1597260",
    "end": "1602299"
  },
  {
    "text": "get time wrong all the time in fact I'd like to show you an example",
    "start": "1602299",
    "end": "1608840"
  },
  {
    "text": "see if I can make this this work I have some code here can you read this",
    "start": "1608840",
    "end": "1614659"
  },
  {
    "text": "okay so this is some code um it uses the newton-soft Newton soft",
    "start": "1614659",
    "end": "1620000"
  },
  {
    "text": "is sort of the most popular Json serializer Library in.net it has probably more downloads than sort of",
    "start": "1620000",
    "end": "1626000"
  },
  {
    "text": "atoms in the known universe everyone uses newtonsoft",
    "start": "1626000",
    "end": "1631700"
  },
  {
    "text": "um I'm going to try here so the the point here is that I'm going to try to well",
    "start": "1631700",
    "end": "1637880"
  },
  {
    "text": "I have this Json text that represents an object and that object has one property called the",
    "start": "1637880",
    "end": "1644480"
  },
  {
    "text": "timestamp and it contains a timestamp right a format it time step inside a string",
    "start": "1644480",
    "end": "1651260"
  },
  {
    "text": "and I'm going to deserialize that into a j object with this sort of like Newton soft representation",
    "start": "1651260",
    "end": "1657440"
  },
  {
    "text": "for the Json object model and then I'm I have to go versus I'm going to pick out the timestamp and I'm",
    "start": "1657440",
    "end": "1663380"
  },
  {
    "text": "going to write both things to the console very easy right um let's see I'm going to try",
    "start": "1663380",
    "end": "1671840"
  },
  {
    "text": "to run this code now see where we are",
    "start": "1671840",
    "end": "1679220"
  },
  {
    "text": "yeah I have my daytime console thing.net how do you do this",
    "start": "1679220",
    "end": "1685419"
  },
  {
    "text": "thing.net developers please help me uh something like this right I'm going to",
    "start": "1685419",
    "end": "1691640"
  },
  {
    "text": "execute this code hopefully it works and now we can see what was outputted",
    "start": "1691640",
    "end": "1700480"
  },
  {
    "text": "what happened to my string I had a string here it says very clearly what the string is",
    "start": "1701659",
    "end": "1709700"
  },
  {
    "text": "and then I picked out the string and I got this now I can turn this off this Behavior",
    "start": "1709700",
    "end": "1715940"
  },
  {
    "text": "this is Newton's off trying to help me right because it tries to parse it sees that it's oh it actually is a daytime",
    "start": "1715940",
    "end": "1722659"
  },
  {
    "text": "thing and then it does something to it I don't know where sort of my offset information got to and why it sort of",
    "start": "1722659",
    "end": "1728659"
  },
  {
    "text": "reformatted everything and I don't care I don't want to have to figure it out",
    "start": "1728659",
    "end": "1735760"
  },
  {
    "text": "so yeah we get we get time wrong all the time let's see I'm gonna",
    "start": "1737299",
    "end": "1743720"
  },
  {
    "text": "try to return to my presentation now and sort of the lesson here",
    "start": "1743720",
    "end": "1749900"
  },
  {
    "text": "is that whenever you're surprised by some Behavior you should make it explicit",
    "start": "1749900",
    "end": "1755900"
  },
  {
    "text": "whenever you're surprised by some Behavior we should get rid of all the magic",
    "start": "1755900",
    "end": "1761059"
  },
  {
    "text": "we should choose control we need to know exactly what's going on so so there's nothing to figure out",
    "start": "1761059",
    "end": "1767600"
  },
  {
    "text": "because it's right there now okay so um speaking of surprises",
    "start": "1767600",
    "end": "1776320"
  },
  {
    "text": "you know that bugs are the name we use for surprises right and where else can we find bugs",
    "start": "1780380",
    "end": "1785960"
  },
  {
    "text": "except then in in non-trivial code that changes or in code that deals with time",
    "start": "1785960",
    "end": "1791960"
  },
  {
    "text": "we tend to find from my experience at least we tend to find bugs in between systems right and system boundaries also",
    "start": "1791960",
    "end": "1799760"
  },
  {
    "text": "often correspond to team boundaries which means that usually there are some people that are going to have to",
    "start": "1799760",
    "end": "1805100"
  },
  {
    "text": "communicate for things to work well and of course we know communication never goes well there are always misunderstandings right",
    "start": "1805100",
    "end": "1812059"
  },
  {
    "text": "it's inevitable so you find bugs in the integration at the borders of our systems",
    "start": "1812059",
    "end": "1817100"
  },
  {
    "text": "and what sort of the lingua Franca that we tend to use at Borders well it's our friend Jason again isn't",
    "start": "1817100",
    "end": "1823820"
  },
  {
    "text": "it um of course often not always I guess but often we want it",
    "start": "1823820",
    "end": "1829100"
  },
  {
    "text": "not just to be Jason it's not enough that it's sort of application slash Json usually we want it to be the right Jason",
    "start": "1829100",
    "end": "1834740"
  },
  {
    "text": "we have some assumptions about the data being passed from one system to another right",
    "start": "1834740",
    "end": "1840380"
  },
  {
    "text": "so you have some sort of communication situation using Json from system a to",
    "start": "1840380",
    "end": "1845539"
  },
  {
    "text": "system B and I don't really care in this situation whether that's a web API or if there's some sort of message on a",
    "start": "1845539",
    "end": "1850820"
  },
  {
    "text": "message but something like that it doesn't really matter in this context system a sense adjacent document to",
    "start": "1850820",
    "end": "1856279"
  },
  {
    "text": "system B Because system B needs it sometimes there's a problem with this Json document",
    "start": "1856279",
    "end": "1862460"
  },
  {
    "text": "and when that happens from my experience what what tends to to happen is that there is a message on",
    "start": "1862460",
    "end": "1869419"
  },
  {
    "text": "Slack the integration broke did you change anything",
    "start": "1869419",
    "end": "1875659"
  },
  {
    "text": "this is going to be the system B people going to the system a slack Channel and say this integration broke did you",
    "start": "1875659",
    "end": "1881720"
  },
  {
    "text": "change something in your system and in particular this question that I've seen so many times",
    "start": "1881720",
    "end": "1887120"
  },
  {
    "text": "have you changed your Json serializer config how is your serializer configured we",
    "start": "1887120",
    "end": "1894140"
  },
  {
    "text": "have set it up so and so perhaps you could use the same configuration so that it's going to match",
    "start": "1894140",
    "end": "1900080"
  },
  {
    "text": "there's going to be this this sort of frantic uh looking for whatever it was",
    "start": "1900080",
    "end": "1905779"
  },
  {
    "text": "that changed right either system a changed or maybe system B changed or maybe the",
    "start": "1905779",
    "end": "1911899"
  },
  {
    "text": "data changed and we saw some data that we never saw before or maybe it was just that the Unlucky",
    "start": "1911899",
    "end": "1917059"
  },
  {
    "text": "timing in the sense that we hit one of our timing bugs",
    "start": "1917059",
    "end": "1921640"
  },
  {
    "text": "and I am done with these discussions I'm never having them ever again",
    "start": "1922840",
    "end": "1929600"
  },
  {
    "text": "because we don't need to be having these kinds of discussions the only question that we need to ask is",
    "start": "1929600",
    "end": "1935240"
  },
  {
    "text": "what does the contract say right we need some sort of contract that",
    "start": "1935240",
    "end": "1941779"
  },
  {
    "text": "answers all these questions or or specifies what the json's document is",
    "start": "1941779",
    "end": "1947120"
  },
  {
    "text": "going to be looking like right and without a contract you're going to have sort of an informal contract that's",
    "start": "1947120",
    "end": "1952640"
  },
  {
    "text": "going to be all the documents that ever pass through this integration before and didn't break it",
    "start": "1952640",
    "end": "1958940"
  },
  {
    "text": "and who knows what that set of documents is",
    "start": "1958940",
    "end": "1963220"
  },
  {
    "text": "it might not even be a consistent set of documents because probably in the meantime both systems have changed",
    "start": "1964460",
    "end": "1970460"
  },
  {
    "text": "it might not be the same contract anymore so what do you do in that situation",
    "start": "1970460",
    "end": "1975679"
  },
  {
    "text": "well what typically happens is that you change one or both of the systems to make the integration work again and then",
    "start": "1975679",
    "end": "1981799"
  },
  {
    "text": "you then you wait for a while Until It Breaks again for the same reason and you have the same slack",
    "start": "1981799",
    "end": "1987559"
  },
  {
    "text": "message coming and I am done with this process also I I'm not going to work like this",
    "start": "1987559",
    "end": "1992960"
  },
  {
    "text": "anymore that I don't think you should either I have done it for too long so instead",
    "start": "1992960",
    "end": "1998480"
  },
  {
    "text": "we need a contract to answer these questions for us right and we need to be precise what it means uh for a Json",
    "start": "1998480",
    "end": "2005260"
  },
  {
    "text": "document to be valid right we need some sort of agreement between system a and system B",
    "start": "2005260",
    "end": "2010899"
  },
  {
    "text": "system a and system B are going to have to have some sort of conversation to Define what valid means right and that",
    "start": "2010899",
    "end": "2018039"
  },
  {
    "text": "might be painful or difficult but that's sort of where the value add is right that we actually managed to describe it",
    "start": "2018039",
    "end": "2025240"
  },
  {
    "text": "I never want to hear anyone ask about the Json serializer config ever again",
    "start": "2025240",
    "end": "2031000"
  },
  {
    "text": "and the reason is that it's an implementation detail I don't care what you do I don't care how you do your",
    "start": "2031000",
    "end": "2036340"
  },
  {
    "text": "decision serialization right I would recommend that you use the simple transparent process with as little magic",
    "start": "2036340",
    "end": "2042399"
  },
  {
    "text": "as you as you can but I don't really care all I really care about is whether or not you uphold the contract",
    "start": "2042399",
    "end": "2049599"
  },
  {
    "text": "so when whenever the integration breaks now you can ask well is the document valid according to the contract",
    "start": "2049599",
    "end": "2055960"
  },
  {
    "text": "if it is then the problem with the system B if it's not then the problem with system a",
    "start": "2055960",
    "end": "2062399"
  },
  {
    "text": "so Json schema is the format that I like to use to create contracts",
    "start": "2062919",
    "end": "2069099"
  },
  {
    "text": "if I have a web API I'm going to use open API for that which is sort of",
    "start": "2069099",
    "end": "2074740"
  },
  {
    "text": "at least in recent uh versions it's sort of Json schema with the additional ability to specify what the endpoints",
    "start": "2074740",
    "end": "2082540"
  },
  {
    "text": "are under result codes are going to be and so on and so forth uh four sort of",
    "start": "2082540",
    "end": "2087820"
  },
  {
    "text": "um more asynchronous uh things message queues and so on and so forth I like to",
    "start": "2087820",
    "end": "2093638"
  },
  {
    "text": "use async API which is sort of the same similar to open API",
    "start": "2093639",
    "end": "2099359"
  },
  {
    "text": "and that means that when we have this communication between system a and system B we don't just send a Json",
    "start": "2099400",
    "end": "2105280"
  },
  {
    "text": "document over and hope for the best we have some sort of schema that we can use to validate whether or not that Json",
    "start": "2105280",
    "end": "2112240"
  },
  {
    "text": "document is actually any good that allows us to to shift the",
    "start": "2112240",
    "end": "2118060"
  },
  {
    "text": "conversation to discussing what the contract says instead of the system internals",
    "start": "2118060",
    "end": "2123460"
  },
  {
    "text": "and this is what it means to program to an interface like we like we like to think that we program",
    "start": "2123460",
    "end": "2130240"
  },
  {
    "text": "two interfaces this is what it means that you have a contract and then then you sort of discuss that",
    "start": "2130240",
    "end": "2136240"
  },
  {
    "text": "and it's important to note that a contract is not the same as documentation often we think that well okay we just need to document this we",
    "start": "2136240",
    "end": "2142720"
  },
  {
    "text": "need to document it so that someone else can work with it but a contract is something more it's an agreement right",
    "start": "2142720",
    "end": "2148420"
  },
  {
    "text": "it's something that we agreed upon that's going to be valid for our for our",
    "start": "2148420",
    "end": "2153700"
  },
  {
    "text": "communication and in in that context I'm going to have to talk about say a few words about",
    "start": "2153700",
    "end": "2160359"
  },
  {
    "text": "review reverse engineering contracts",
    "start": "2160359",
    "end": "2164220"
  },
  {
    "text": "because this is something that we like to do we use tools like swashbuckle or something like that",
    "start": "2165760",
    "end": "2171520"
  },
  {
    "text": "um to produce documentation um",
    "start": "2171520",
    "end": "2177480"
  },
  {
    "text": "it's like you have a running server and then you have some tool that does reverse engineering on that running",
    "start": "2177880",
    "end": "2182920"
  },
  {
    "text": "server to derive a contract uh in the case of swashbuckle is going to produce an open API specification and",
    "start": "2182920",
    "end": "2190119"
  },
  {
    "text": "I'm really impressed that they can do this at all so there's some magnificent work done in swashbuckle to be able to",
    "start": "2190119",
    "end": "2196780"
  },
  {
    "text": "do this and sort of in awe of that accomplishment",
    "start": "2196780",
    "end": "2201119"
  },
  {
    "text": "and it's also very easy to do right you can just turn it on you download the new get package and boom you have open",
    "start": "2202000",
    "end": "2208540"
  },
  {
    "text": "API specification while I'm mightily impressed that it's",
    "start": "2208540",
    "end": "2215079"
  },
  {
    "text": "possible to generate a valid open API specification in this way",
    "start": "2215079",
    "end": "2220119"
  },
  {
    "text": "never do it never exploit that power and there are a couple of reasons for",
    "start": "2220119",
    "end": "2226599"
  },
  {
    "text": "that first is that a contract really needs to be sort of a first class versioned artifact you need to be able",
    "start": "2226599",
    "end": "2233859"
  },
  {
    "text": "to go to contract and see what it says and you can't have the situation where the API is down so",
    "start": "2233859",
    "end": "2240520"
  },
  {
    "text": "now you have no contract and you don't know what it is because it was derived at runtime right",
    "start": "2240520",
    "end": "2246040"
  },
  {
    "text": "can't be this ephemeral thing and what's even more important that how",
    "start": "2246040",
    "end": "2253359"
  },
  {
    "text": "you happen to behave today is not a contract that's not how contracts work",
    "start": "2253359",
    "end": "2258820"
  },
  {
    "text": "so if I rent an apartment from you and then sort of um how much I I",
    "start": "2258820",
    "end": "2265839"
  },
  {
    "text": "determine that I should be paying this month is going to be our contract you're not going to be happy with that right",
    "start": "2265839",
    "end": "2271480"
  },
  {
    "text": "you're going to say that's not something that I want to be our contract that if I want to pay you like uh",
    "start": "2271480",
    "end": "2278500"
  },
  {
    "text": "a thousand dollars one month and then I'll go well I don't feel like paying a thousand dollars next month so I'm going",
    "start": "2278500",
    "end": "2284859"
  },
  {
    "text": "to pay 500 you're not going to be happy with that and again an implementation this is sort",
    "start": "2284859",
    "end": "2291220"
  },
  {
    "text": "of the same statement and implementation is not an interface I well you should never say things like this but I don't",
    "start": "2291220",
    "end": "2297579"
  },
  {
    "text": "think in most cases that we would do this at the code level to sort of automatically have some tool to generate",
    "start": "2297579",
    "end": "2305079"
  },
  {
    "text": "an interface for every class and include all the public members of course someone has probably done this but but that's",
    "start": "2305079",
    "end": "2311619"
  },
  {
    "text": "not what an interface means right and for this you need to write this",
    "start": "2311619",
    "end": "2317800"
  },
  {
    "text": "contract by hand and yes this means again you're going to have to write something that you might find tedious",
    "start": "2317800",
    "end": "2322900"
  },
  {
    "text": "and that you might have created some approximation to using an automated tool",
    "start": "2322900",
    "end": "2329980"
  },
  {
    "text": "I'm going to make a bold statement that handwritten contracts are much higher quality than whatever you're able to to",
    "start": "2329980",
    "end": "2335980"
  },
  {
    "text": "reverse engineer from your running server of course it's going to be disconnected so it might go out of sync and people",
    "start": "2335980",
    "end": "2341619"
  },
  {
    "text": "are terrified of this but it's going to be much much higher quality",
    "start": "2341619",
    "end": "2348240"
  },
  {
    "text": "of course um you can say that well I can I can always write a plugin to my sort of",
    "start": "2350079",
    "end": "2356740"
  },
  {
    "text": "reverse engineering tool and have used that to write sort of arbitrarily good",
    "start": "2356740",
    "end": "2361839"
  },
  {
    "text": "contracts using my plugin right and you can uh pull in information extra additional information using",
    "start": "2361839",
    "end": "2369400"
  },
  {
    "text": "attributes or whatever and I've gone down this route as well it's definitely not trivial code",
    "start": "2369400",
    "end": "2376900"
  },
  {
    "text": "you're going to have bugs your contract is probably going to be something else than what the server actually does",
    "start": "2376900",
    "end": "2383260"
  },
  {
    "text": "so it's probably going to be a mismatch anyway and anyway",
    "start": "2383260",
    "end": "2388359"
  },
  {
    "text": "um we don't want to be spending our time doing this and there is no way that you're gonna sort of do this work as",
    "start": "2388359",
    "end": "2395920"
  },
  {
    "text": "quickly as I can just type the contract by hand I'm going to sort of be running at normal speed you're going to be",
    "start": "2395920",
    "end": "2401980"
  },
  {
    "text": "trying to be running underwater backwards right I can do this much faster I can",
    "start": "2401980",
    "end": "2407260"
  },
  {
    "text": "iterate much faster on it and also you want to use that contract this first class versioned artifact as a",
    "start": "2407260",
    "end": "2414760"
  },
  {
    "text": "collaboration tool with whoever uses your service right",
    "start": "2414760",
    "end": "2421079"
  },
  {
    "text": "you want ideally to be co-designing the contract right sitting with them and typing it",
    "start": "2421359",
    "end": "2427839"
  },
  {
    "text": "out trying different solutions you can't do that easily if you the way that you're working with it is through some",
    "start": "2427839",
    "end": "2432880"
  },
  {
    "text": "sort of opaque reverse engineering process because then you need to actually implement the stuff before you have a",
    "start": "2432880",
    "end": "2439000"
  },
  {
    "text": "contract have shared ownership of this contract",
    "start": "2439000",
    "end": "2446560"
  },
  {
    "text": "and that makes for better contracts okay ah so that was contracts um",
    "start": "2446560",
    "end": "2454240"
  },
  {
    "text": "finally I'd like to mention a little bit about testing",
    "start": "2454240",
    "end": "2459280"
  },
  {
    "text": "now when you sort of decouple your contract for from your implementation that means that you open up the",
    "start": "2459280",
    "end": "2465700"
  },
  {
    "text": "possibility that there is a mismatch right so you're going to need some sort of test for schema validation",
    "start": "2465700",
    "end": "2472260"
  },
  {
    "text": "and this of course you might find boring to write um there's a tool there's not a whole",
    "start": "2472780",
    "end": "2478599"
  },
  {
    "text": "lot of choice for schema validators in the not net space that I was able to find but there is a tool you can use",
    "start": "2478599",
    "end": "2484359"
  },
  {
    "text": "that's called J and Json schema and has a nice uh scheme of validation support it also tries to be very convenient so",
    "start": "2484359",
    "end": "2491020"
  },
  {
    "text": "it has a lot of other stuff too don't use it um",
    "start": "2491020",
    "end": "2495720"
  },
  {
    "text": "okay just to show you how that might look like let's see if I can find my validation tests",
    "start": "2496180",
    "end": "2504838"
  },
  {
    "text": "right so this is a very simple test I have a Json document and I have a schema",
    "start": "2505599",
    "end": "2511180"
  },
  {
    "text": "for that document let's see if I can find them uh over here validation test",
    "start": "2511180",
    "end": "2516460"
  },
  {
    "text": "this is my oh let's see",
    "start": "2516460",
    "end": "2522539"
  },
  {
    "text": "oh let's actually have it like that that's fine it doesn't matter um so I have two books here I have a",
    "start": "2522760",
    "end": "2528160"
  },
  {
    "text": "decent document with two books uh and they look fairly similar",
    "start": "2528160",
    "end": "2534160"
  },
  {
    "text": "um that's okay and I have my let's see what",
    "start": "2534160",
    "end": "2539260"
  },
  {
    "text": "my schema looks like this is my Json schema now it says that I have well",
    "start": "2539260",
    "end": "2544780"
  },
  {
    "text": "an object this is sort of the root element or the root uh value rather and",
    "start": "2544780",
    "end": "2550420"
  },
  {
    "text": "it says that it's required to have a books property that books property is going to be an array and each item in",
    "start": "2550420",
    "end": "2555700"
  },
  {
    "text": "that array is going to look like this that's going to have actually let's start with this right",
    "start": "2555700",
    "end": "2562780"
  },
  {
    "text": "I'm not going to have any additional properties you can tweak these things in in Json schemas you can say okay I'm",
    "start": "2562780",
    "end": "2568480"
  },
  {
    "text": "going to expect to have an ID and a title and an author I'm going to require those to be there and but it's fine to",
    "start": "2568480",
    "end": "2575619"
  },
  {
    "text": "have additional properties right oh not in this case when I turn it off",
    "start": "2575619",
    "end": "2582040"
  },
  {
    "text": "um okay and so I have also here the ability to say that okay my ID is",
    "start": "2582040",
    "end": "2587800"
  },
  {
    "text": "going to be a string but it's also going to have to satisfy this pattern which is a regular expression and the title is",
    "start": "2587800",
    "end": "2593440"
  },
  {
    "text": "going to be a string but it can only be tops 100 characters so let's let's try to run this now let's",
    "start": "2593440",
    "end": "2600099"
  },
  {
    "text": "see if it works",
    "start": "2600099",
    "end": "2603000"
  },
  {
    "text": "so I can do.net test",
    "start": "2607839",
    "end": "2611880"
  },
  {
    "text": "how is it going to fare well it didn't go so well",
    "start": "2613660",
    "end": "2620740"
  },
  {
    "text": "it has a couple of problems the array item was not valid on the",
    "start": "2620740",
    "end": "2626319"
  },
  {
    "text": "first book and it says that it's not allowed to have additional properties and it found this addition property that",
    "start": "2626319",
    "end": "2632500"
  },
  {
    "text": "shouldn't be there uh let's see",
    "start": "2632500",
    "end": "2637599"
  },
  {
    "text": "yeah that's that's going to be this this property here right but actually in order to um not be",
    "start": "2637599",
    "end": "2645460"
  },
  {
    "text": "overly restrictive it might be okay to have these additional properties so I can just say okay I'm going to allow",
    "start": "2645460",
    "end": "2651760"
  },
  {
    "text": "that it doesn't really matter as long as I get the data I need today that's fine",
    "start": "2651760",
    "end": "2657220"
  },
  {
    "text": "it might be that in some future version it's going to be uh mandatory to have",
    "start": "2657220",
    "end": "2662859"
  },
  {
    "text": "this Edition thing uh let's see and how does that affect",
    "start": "2662859",
    "end": "2668920"
  },
  {
    "text": "things",
    "start": "2668920",
    "end": "2671160"
  },
  {
    "text": "right so now I got rid of that but it still says that the title is too long and that's because I sort of",
    "start": "2675040",
    "end": "2682180"
  },
  {
    "text": "mess things up over here right this is this is kind of strange they can get rid of that",
    "start": "2682180",
    "end": "2689220"
  },
  {
    "text": "and now everything is fine okay so that's that's a tool you can use",
    "start": "2695440",
    "end": "2700780"
  },
  {
    "text": "um for for validating your schema uh finally",
    "start": "2700780",
    "end": "2707740"
  },
  {
    "text": "I'd like to talk about some tests for expected Json content sometimes quite",
    "start": "2707740",
    "end": "2713020"
  },
  {
    "text": "often I guess it's not enough to verify that uh that the data is valid According to some schema sometimes you want to",
    "start": "2713020",
    "end": "2719319"
  },
  {
    "text": "know that you got exactly the Json content that you that you requested",
    "start": "2719319",
    "end": "2725400"
  },
  {
    "text": "um it might be that you're writing tests for for your own web API or something like that so how do you do that comparison",
    "start": "2726099",
    "end": "2732640"
  },
  {
    "text": "so you sort of have two choices right either you compare them as strings",
    "start": "2732640",
    "end": "2739599"
  },
  {
    "text": "and that's problematic but because it's much too low level in a sense because you're looking just at individual",
    "start": "2739599",
    "end": "2744700"
  },
  {
    "text": "character instead um maybe your comparison can say well there's something in this Json document",
    "start": "2744700",
    "end": "2750460"
  },
  {
    "text": "that has uh thousands of characters at sort of position 285 there's a",
    "start": "2750460",
    "end": "2756160"
  },
  {
    "text": "discrepancy and now you sort of okay I'm gonna have to look out uh look up uh character",
    "start": "2756160",
    "end": "2761500"
  },
  {
    "text": "number 285 and look see if I can find out uh what's wrong",
    "start": "2761500",
    "end": "2766599"
  },
  {
    "text": "and because that's sort of very low level information just captures the first error that you find",
    "start": "2766599",
    "end": "2772060"
  },
  {
    "text": "right because it stops there some people turn to sort of comparing",
    "start": "2772060",
    "end": "2777760"
  },
  {
    "text": "objects instead so they create they sort of derive this data structure maybe they use their Json dtos or something like",
    "start": "2777760",
    "end": "2783460"
  },
  {
    "text": "that these Theory lies through the response and then you have some expected Json response and you deserialize that",
    "start": "2783460",
    "end": "2789160"
  },
  {
    "text": "as well and then you do the comparison that's sort of you can do that but it's",
    "start": "2789160",
    "end": "2795520"
  },
  {
    "text": "sort of indirect and clumsy right because you're not really comparing the Json documents you're comparing",
    "start": "2795520",
    "end": "2801460"
  },
  {
    "text": "something that you derived from them of course if you have sort of this minimal mapping to the Json details the the",
    "start": "2801460",
    "end": "2806980"
  },
  {
    "text": "distance isn't going to be great but still and there's also the thing um",
    "start": "2806980",
    "end": "2812319"
  },
  {
    "text": "that by default uh dot net objects have uh reference equality right so if you",
    "start": "2812319",
    "end": "2818920"
  },
  {
    "text": "want to compare structure instead of of seeing that is actually the exact same",
    "start": "2818920",
    "end": "2824319"
  },
  {
    "text": "object you're going to have to implement value equality for your Json dtos",
    "start": "2824319",
    "end": "2830079"
  },
  {
    "text": "that is boring code that is super boring code and it's even needless code right uh you might be able to rely on some",
    "start": "2830079",
    "end": "2836980"
  },
  {
    "text": "test Library magic for this to sort of implement using reflection uh value",
    "start": "2836980",
    "end": "2842319"
  },
  {
    "text": "equality for your objects um I saw that was at least there's been discussions in",
    "start": "2842319",
    "end": "2848920"
  },
  {
    "text": "shouldley if they should support this right but it's solving the wrong problem in a",
    "start": "2848920",
    "end": "2854020"
  },
  {
    "text": "sense what you're trying to do is compare Json text right you're trying to compare text but with the knowledge that",
    "start": "2854020",
    "end": "2860380"
  },
  {
    "text": "is actually valid Json and because um I couldn't find any tool that does",
    "start": "2860380",
    "end": "2866020"
  },
  {
    "text": "this in.net I I had to write them myself",
    "start": "2866020",
    "end": "2871839"
  },
  {
    "text": "there is a tool called quibble and it has also a sort of companion tool called quibble.x Unit that you can use",
    "start": "2871839",
    "end": "2878560"
  },
  {
    "text": "from your X unit tests to use quibble and it purpose of quibble is to sort of have this json-aware string comparison",
    "start": "2878560",
    "end": "2886839"
  },
  {
    "text": "it's a very simple tool but I'd like to show it to you let's see",
    "start": "2886839",
    "end": "2893319"
  },
  {
    "text": "um that was my validation tests I don't need that",
    "start": "2893319",
    "end": "2898740"
  },
  {
    "text": "okay so actually let's let's do this one",
    "start": "2899560",
    "end": "2903599"
  },
  {
    "text": "and I'm going to skip this one I don't know",
    "start": "2904599",
    "end": "2910119"
  },
  {
    "text": "okay so I have again a Json document let's see if I can find",
    "start": "2910119",
    "end": "2915520"
  },
  {
    "text": "it these are my contact texts this is going to be my expected Json",
    "start": "2915520",
    "end": "2923500"
  },
  {
    "text": "result looks a bit similar to the example we had before and I'm going to compare that",
    "start": "2923500",
    "end": "2931060"
  },
  {
    "text": "to this and at a quick glance maybe you can sort of catch that there is something that's",
    "start": "2931060",
    "end": "2937420"
  },
  {
    "text": "not entirely the same but let's try to run quibble um",
    "start": "2937420",
    "end": "2942460"
  },
  {
    "text": "yep",
    "start": "2942460",
    "end": "2944940"
  },
  {
    "text": "ah can't type",
    "start": "2953380",
    "end": "2957000"
  },
  {
    "text": "okay that didn't work so well uh there were some uh mismatches um let's see what quibble tells us here",
    "start": "2965800",
    "end": "2971740"
  },
  {
    "text": "well first of all it lists both the expected and the actual Json document that it got but it also says",
    "start": "2971740",
    "end": "2977680"
  },
  {
    "text": "specifically that it found two differences first it found a mismatch in the first",
    "start": "2977680",
    "end": "2985359"
  },
  {
    "text": "book and it says that it found this additional property Edition and it also says that it was a problem",
    "start": "2985359",
    "end": "2991960"
  },
  {
    "text": "with uh with a string in the author property here in the second book it expected Leo brought it but it was Chuck",
    "start": "2991960",
    "end": "2998319"
  },
  {
    "text": "Moore that's obviously wrong for for this book right um thinking forth which is actually",
    "start": "2998319",
    "end": "3004800"
  },
  {
    "text": "written by Leo Brody uh uh Chuck Chuck Morris of course the author of fourth",
    "start": "3004800",
    "end": "3010319"
  },
  {
    "text": "the language itself right easy to mix it up um but it's it's a mistake that you want",
    "start": "3010319",
    "end": "3015839"
  },
  {
    "text": "to catch now of course just looking at these two",
    "start": "3015839",
    "end": "3021480"
  },
  {
    "text": "at least two uh Json documents you would probably be able to say okay I can I can",
    "start": "3021480",
    "end": "3027480"
  },
  {
    "text": "do this by manual inspection it's not that hard right but of course real life Json documents",
    "start": "3027480",
    "end": "3033060"
  },
  {
    "text": "rarely look like this real life Json documents tend to look something more like let's see",
    "start": "3033060",
    "end": "3040880"
  },
  {
    "text": "like this right there's a lot of stuff there",
    "start": "3042300",
    "end": "3048619"
  },
  {
    "text": "and when I compare that to my expected thing well there's a lot of stuff there too and it's not so obvious where the",
    "start": "3048660",
    "end": "3055319"
  },
  {
    "text": "differences are if there are any so let's try that also",
    "start": "3055319",
    "end": "3061400"
  },
  {
    "text": "um okay let's see I should be removing oh this is the wrong thing",
    "start": "3061680",
    "end": "3068040"
  },
  {
    "text": "again",
    "start": "3068040",
    "end": "3070339"
  },
  {
    "text": "so same kind of test um just Compares really exactly the same thing it just uses a different",
    "start": "3078000",
    "end": "3084780"
  },
  {
    "text": "um different Json document so I'm trying to run that",
    "start": "3084780",
    "end": "3091920"
  },
  {
    "text": "sorry uh",
    "start": "3091920",
    "end": "3097500"
  },
  {
    "text": "oh that's unfortunate",
    "start": "3097500",
    "end": "3102540"
  },
  {
    "text": "uh thanks",
    "start": "3102540",
    "end": "3107420"
  },
  {
    "text": "okay try to run again see what happens",
    "start": "3108420",
    "end": "3113720"
  },
  {
    "text": "now again there was some mismatch",
    "start": "3115619",
    "end": "3122579"
  },
  {
    "text": "but because the OB sort of the the documents themselves are so large this is getting a lot more useful now so it",
    "start": "3122579",
    "end": "3129420"
  },
  {
    "text": "says that it has four differences and exactly what they are is not that important uh but it's sort of the important point that it points you",
    "start": "3129420",
    "end": "3136319"
  },
  {
    "text": "exactly where in the Json document there was a problem so uh I think quibble is useful if you",
    "start": "3136319",
    "end": "3143040"
  },
  {
    "text": "work with Json in.net I hope you might too um okay so finally let's go through the",
    "start": "3143040",
    "end": "3150300"
  },
  {
    "text": "summary now first my please just please let Jason be simple Sim Jason is simple don't write",
    "start": "3150300",
    "end": "3156960"
  },
  {
    "text": "uh complicated code to work with something that simple avoid all these needless Magic",
    "start": "3156960",
    "end": "3163980"
  },
  {
    "text": "and don't write a Json parser unless you absolutely have to and make sure if you think you have to make sure that you",
    "start": "3163980",
    "end": "3170520"
  },
  {
    "text": "actually have to Json serializer should just serialize Jason that's all they should do by",
    "start": "3170520",
    "end": "3176880"
  },
  {
    "text": "default Json documents are going to need a contract",
    "start": "3176880",
    "end": "3182400"
  },
  {
    "text": "an explicit contract we should stop discussing internal details when something goes wrong when we exchange",
    "start": "3182400",
    "end": "3189119"
  },
  {
    "text": "Json documents we should write these contracts by hand because it makes for much better contracts and it also makes",
    "start": "3189119",
    "end": "3194280"
  },
  {
    "text": "for much better collaboration practices we should validate that our Json documents are actually valid",
    "start": "3194280",
    "end": "3200460"
  },
  {
    "text": "and finally we should use quibble to compare Json documents as Json",
    "start": "3200460",
    "end": "3205859"
  },
  {
    "text": "thank you [Applause]",
    "start": "3205859",
    "end": "3214200"
  },
  {
    "text": "oh I forgot to say are there any questions",
    "start": "3214200",
    "end": "3218059"
  },
  {
    "text": "one question",
    "start": "3219420",
    "end": "3222140"
  },
  {
    "text": "okay so uh the question was um a lot of people complain when the system",
    "start": "3229079",
    "end": "3234900"
  },
  {
    "text": "text Json was released that it wasn't as convenient as newtonsoft and",
    "start": "3234900",
    "end": "3240839"
  },
  {
    "text": "um what can I say about that uh I can say that that complaint obviously stems from the",
    "start": "3240839",
    "end": "3247920"
  },
  {
    "text": "fact that we've gotten used to all these conveniences from newtonsoft my Approach would be uh to sort of sidestep the",
    "start": "3247920",
    "end": "3255180"
  },
  {
    "text": "problem altogether by letting Newton soft do as little as possible and then let system text Jason do the exact same",
    "start": "3255180",
    "end": "3262920"
  },
  {
    "text": "job right it shouldn't be sort of this mismatch and the pain then of converting",
    "start": "3262920",
    "end": "3267960"
  },
  {
    "text": "from Newton's off to system text Json is caused by the fact that we used all these conveniences",
    "start": "3267960",
    "end": "3274400"
  },
  {
    "text": "any other questions there's a question up there",
    "start": "3275460",
    "end": "3281240"
  },
  {
    "text": "so you said uh what do you feel about Auto generating Json dtos um using some Tool uh from from a",
    "start": "3286859",
    "end": "3292859"
  },
  {
    "text": "contract something like that or so generating uh from the contract into",
    "start": "3292859",
    "end": "3298260"
  },
  {
    "text": "details um my position on that is that I probably wouldn't do it myself because I",
    "start": "3298260",
    "end": "3304140"
  },
  {
    "text": "prefer actually writing it uh but it's an implementation detail in a sense as long as you have the contract I don't",
    "start": "3304140",
    "end": "3310980"
  },
  {
    "text": "really care how you'd how you author your code in that in that respect so",
    "start": "3310980",
    "end": "3318119"
  },
  {
    "text": "um but from my experience often um well first of all there are things that",
    "start": "3318119",
    "end": "3324780"
  },
  {
    "text": "are hard to generate things that you can express in Json schema for instance that are not that don't really map over that",
    "start": "3324780",
    "end": "3331500"
  },
  {
    "text": "well to to the.net type system there are things that are going to be lost on the way and then there might be",
    "start": "3331500",
    "end": "3337680"
  },
  {
    "text": "things that you want to re-add afterwards and whenever you have this it's going to generate something that's almost what I want but not completely",
    "start": "3337680",
    "end": "3344339"
  },
  {
    "text": "then you're sort of in a paint spot right so yeah",
    "start": "3344339",
    "end": "3350579"
  },
  {
    "text": "any other questions oh well uh further's out there",
    "start": "3350579",
    "end": "3357920"
  },
  {
    "text": "right so so the question was uh in XML there's this uh xslt transformation that",
    "start": "3370800",
    "end": "3377099"
  },
  {
    "text": "allows you to um transfer from one XML uh format or a",
    "start": "3377099",
    "end": "3382559"
  },
  {
    "text": "document to another one and you have something similar and Json is that the question or",
    "start": "3382559",
    "end": "3388859"
  },
  {
    "text": "to HTML",
    "start": "3388859",
    "end": "3392000"
  },
  {
    "text": "right right so not necessarily to another XML document but to to something else right to whatever",
    "start": "3395400",
    "end": "3402839"
  },
  {
    "text": "right um I'm not aware of any um",
    "start": "3402839",
    "end": "3409819"
  },
  {
    "text": "any tool that has uh uh broad acceptance that does that for",
    "start": "3409920",
    "end": "3416339"
  },
  {
    "text": "Jason and should there be I I don't know so I",
    "start": "3416339",
    "end": "3421559"
  },
  {
    "text": "don't really have uh a comment beyond that so perhaps if you",
    "start": "3421559",
    "end": "3427500"
  },
  {
    "text": "want that capability use XML instead of Json using XML is just fine right so I",
    "start": "3427500",
    "end": "3434180"
  },
  {
    "text": "transforming from",
    "start": "3437160",
    "end": "3440359"
  },
  {
    "text": "okay so transforming from Json to XML and then you can use the style sheet I would ideally then uh don't produce",
    "start": "3445980",
    "end": "3453720"
  },
  {
    "text": "Jason in the first place Just Produce XML if you can of course it's another system I don't know probably they're",
    "start": "3453720",
    "end": "3459720"
  },
  {
    "text": "going to be some point pain points but that but I I have no personal experience trying that approach so yeah",
    "start": "3459720",
    "end": "3467520"
  },
  {
    "text": "yeah yes another question",
    "start": "3467520",
    "end": "3470480"
  },
  {
    "text": "okay so the question was um what if Json schema doesn't have support",
    "start": "3478079",
    "end": "3485520"
  },
  {
    "text": "that allows you to express the constraint that you want on your contract is that",
    "start": "3485520",
    "end": "3491599"
  },
  {
    "text": "I don't know I haven't been in that situation myself I would say probably uh",
    "start": "3492960",
    "end": "3499700"
  },
  {
    "text": "sorry",
    "start": "3501660",
    "end": "3503780"
  },
  {
    "text": "right so maybe there are some sort of uh whatever value you have over here should also match some value over here or",
    "start": "3510420",
    "end": "3517079"
  },
  {
    "text": "something like that I think as long as you don't have sort of",
    "start": "3517079",
    "end": "3522839"
  },
  {
    "text": "um support in in the tool that you're the in the specification that you're using for your contract you're going to",
    "start": "3522839",
    "end": "3528540"
  },
  {
    "text": "have to resort to writing it down in the contract as free text as you can add constraints like that just by by typing",
    "start": "3528540",
    "end": "3535680"
  },
  {
    "text": "it out in natural language that's that's my best I don't have anything beyond",
    "start": "3535680",
    "end": "3541440"
  },
  {
    "text": "that so how are we on time",
    "start": "3541440",
    "end": "3547140"
  },
  {
    "text": "redone or one minute is there a short last question",
    "start": "3547140",
    "end": "3552799"
  },
  {
    "text": "preferably one where I can say no okay I think we're just gonna leave it",
    "start": "3553559",
    "end": "3560099"
  },
  {
    "text": "at that thank you [Applause]",
    "start": "3560099",
    "end": "3564939"
  }
]