[
  {
    "start": "0",
    "end": "137000"
  },
  {
    "text": "good morning it's always interesting the night the morning after the party it's like a little bit more quiet in the room",
    "start": "8080",
    "end": "13440"
  },
  {
    "text": "and people are just sitting there like oh scroll scroll on their phones so um i",
    "start": "13440",
    "end": "19119"
  },
  {
    "text": "hope you enjoyed that party um if you enjoyed it a bit too much try to find some energy to get it through this talk",
    "start": "19119",
    "end": "24880"
  },
  {
    "text": "because it's going to be high pace i have a whole bunch of takeaways um i honestly haven't counted them because",
    "start": "24880",
    "end": "30800"
  },
  {
    "text": "well the length of the talk always varies so the number of takeaways does as well we're going to talk about api security when i talk about a whole bunch",
    "start": "30800",
    "end": "37360"
  },
  {
    "text": "of things that go wrong and i'm going to talk about a whole bunch of ways to fix those problems of",
    "start": "37360",
    "end": "42800"
  },
  {
    "text": "going wrong i'm going to show you how they come into existence and what we can do to actually counter them and what i would really like to happen at the end",
    "start": "42800",
    "end": "49520"
  },
  {
    "text": "of this talk i'm going to mention that again is that you'll you'll take the takeaways from this this slide you'll recognize from this presentation you'll",
    "start": "49520",
    "end": "55199"
  },
  {
    "text": "recognize them by the slide format and really take them to heart take them with you to your company and start applying",
    "start": "55199",
    "end": "61440"
  },
  {
    "text": "those principles on your apis sooner rather than later all right",
    "start": "61440",
    "end": "67119"
  },
  {
    "text": "let's dive right in with a study on api security from last year from 30 healthcare apps in the uk and the study",
    "start": "67119",
    "end": "74400"
  },
  {
    "text": "found that healthcare apps got kind of sensitive data by design i mean they should have security kind of on a high level and it",
    "start": "74400",
    "end": "81920"
  },
  {
    "text": "shows that that's really really not the case so of these 30 popular apps 77 contained hard-coded api keys and that",
    "start": "81920",
    "end": "89119"
  },
  {
    "text": "means if you put a secret in an app and you deploy it on a phone somebody's going to take that binary file run some",
    "start": "89119",
    "end": "94720"
  },
  {
    "text": "tools on it and find your secrets allowing them to abuse that and seven percent even contained hard-coded",
    "start": "94720",
    "end": "99759"
  },
  {
    "text": "usernames and passwords which goes as far as full database access usernames and passwords which is kind of like an",
    "start": "99759",
    "end": "106079"
  },
  {
    "text": "oopsie if you want to call it that that's absolutely horrible and that's something we talk about the first thing you learn when you learn about mobile",
    "start": "106079",
    "end": "112320"
  },
  {
    "text": "security and and client-side security is like never ever ever put secrets on the client and it's actually worse because",
    "start": "112320",
    "end": "119040"
  },
  {
    "text": "the the study also looked at apis behind these apps and they found that of the apis they looked at they haven't tested",
    "start": "119040",
    "end": "125280"
  },
  {
    "text": "all apis but of the apis they tested every single one of them had authorization problems every single one",
    "start": "125280",
    "end": "131280"
  },
  {
    "text": "of them and that brings me to the first takeaway of this presentation yes it goes that",
    "start": "131280",
    "end": "136400"
  },
  {
    "text": "fast first takeaway the cowboy years are over as in we can't keep doing this this is",
    "start": "136400",
    "end": "141840"
  },
  {
    "start": "137000",
    "end": "444000"
  },
  {
    "text": "absolutely unsustainable if we keep handling security like an afterthought like oh yeah we'll look at security when",
    "start": "141840",
    "end": "147680"
  },
  {
    "text": "we have some time and money in the future that's not gonna work it simply doesn't work you have to look",
    "start": "147680",
    "end": "152720"
  },
  {
    "text": "at security from the start you have to build up your security mechanisms your culture your your skill",
    "start": "152720",
    "end": "159040"
  },
  {
    "text": "set basically and start ensuring security from day one and that's something that's that's",
    "start": "159040",
    "end": "164160"
  },
  {
    "text": "actually changing and that's a good thing because my customers are usually or used to be very big companies like",
    "start": "164160",
    "end": "169200"
  },
  {
    "text": "established security programs and money to throw around for consultants and so on and so on and these days i often work",
    "start": "169200",
    "end": "175120"
  },
  {
    "text": "with startups startups that don't even have a product out they just secured some funding and they're like okay now we can do security",
    "start": "175120",
    "end": "181360"
  },
  {
    "text": "before we even have our first customer because we know that we won't be able to do it afterwards and that's the right",
    "start": "181360",
    "end": "186720"
  },
  {
    "text": "attitude and that's definitely a good starting point all right",
    "start": "186720",
    "end": "191920"
  },
  {
    "text": "that's just to get you warmed up i'm philippe drake from belgium and i run my own company called pragmatic web",
    "start": "191920",
    "end": "197120"
  },
  {
    "text": "security and if you're in my talk yesterday you've heard this pitch so you can go rest for one minute and recover",
    "start": "197120",
    "end": "202239"
  },
  {
    "text": "from the party otherwise you might be interested to learn that i help other people build more secure software so i",
    "start": "202239",
    "end": "207360"
  },
  {
    "text": "provide knowledge on security through training consulting online courses and so on and i also organized a course in",
    "start": "207360",
    "end": "213040"
  },
  {
    "text": "belgium called sec update which is one week about application security taught by people from all over the world it's like a",
    "start": "213040",
    "end": "219519"
  },
  {
    "text": "conference but longer and more in-depth and um absolutely awesome so if you are ever",
    "start": "219519",
    "end": "225840"
  },
  {
    "text": "interested in visiting belgium we have good beers by the way if you're into that then you might want to",
    "start": "225840",
    "end": "230879"
  },
  {
    "text": "convince your boss to send you the second dev that would be great all right back at",
    "start": "230879",
    "end": "236239"
  },
  {
    "text": "api security api security is a big thing right well everybody's doing api so kind",
    "start": "236239",
    "end": "241439"
  },
  {
    "text": "of logically that api security becomes more important we even have a dedicated os top then for api security and if you",
    "start": "241439",
    "end": "247920"
  },
  {
    "text": "look at the os stop then you might get a little bit depressed actually because a lot of these issues are about authorization and",
    "start": "247920",
    "end": "254799"
  },
  {
    "text": "authentication almost 40 and if you depends on how you count if you include authentication as well 50 of",
    "start": "254799",
    "end": "261440"
  },
  {
    "text": "the top 10 are about authorization and authentication issues that's massive i also see that there's a bunch of",
    "start": "261440",
    "end": "267040"
  },
  {
    "text": "overlap between the os api security top 10 and the traditional web application security top then like",
    "start": "267040",
    "end": "272639"
  },
  {
    "text": "there's some overlap injection is still there a problem that we've been dealing with for 25 years is still unsolved in",
    "start": "272639",
    "end": "278639"
  },
  {
    "text": "apis which is again unsurprising because apis are just a different way of building an application",
    "start": "278639",
    "end": "285759"
  },
  {
    "text": "based on this stop then you can kind of imagine i'm going to talk about authentication and authorization a bit",
    "start": "285759",
    "end": "290800"
  },
  {
    "text": "today but before we do that i want to talk about number four lack of resources and rate limiting and i want to talk",
    "start": "290800",
    "end": "297520"
  },
  {
    "text": "about this because it's it's kind of a weird issue that that is often under recognized people are like",
    "start": "297520",
    "end": "304000"
  },
  {
    "text": "oh yeah sure denial of service that's that's important we we need to protect against denial of service attacks and",
    "start": "304000",
    "end": "310320"
  },
  {
    "text": "yes that's true and if you think about the now service like filling up the network connection so you become",
    "start": "310320",
    "end": "315360"
  },
  {
    "text": "unreachable or abusing cpu or memory of your application so it becomes unavailable sure that's a problem if",
    "start": "315360",
    "end": "321039"
  },
  {
    "text": "it's not available you likely lose money have unhappy customers and so on and so on but to me it's not the biggest",
    "start": "321039",
    "end": "326479"
  },
  {
    "text": "security issue that you can have in your applications and if you start thinking about this issue there's actually a",
    "start": "326479",
    "end": "331759"
  },
  {
    "text": "whole bunch more that goes on there that's often just brushed over or forgotten or not even",
    "start": "331759",
    "end": "337120"
  },
  {
    "text": "considered for example what about abusing application features would it be the first time facebook had",
    "start": "337120",
    "end": "343520"
  },
  {
    "text": "this problem in a bunch of their apis where you could reset your password and if you reset a password they send you a",
    "start": "343520",
    "end": "349360"
  },
  {
    "text": "six digit code over a text message or an email and you have to enter that six digit code and then you can choose a new password and they forgot",
    "start": "349360",
    "end": "356960"
  },
  {
    "text": "to implement rate limiting on that endpoint well actually they didn't forget they had rate limiting on the endpoint 10 12",
    "start": "356960",
    "end": "362479"
  },
  {
    "text": "attempts and you were out done but they also had a beta api available publicly without that",
    "start": "362479",
    "end": "368479"
  },
  {
    "text": "mechanism so somebody figured it out like hey that's the same endpoint allows me to recover my account on the beta api",
    "start": "368479",
    "end": "373840"
  },
  {
    "text": "and they don't have rate limiting so it doesn't take too long to guess a six digit recovery code with brute force",
    "start": "373840",
    "end": "380960"
  },
  {
    "text": "lack of rate limiting just like that abusing legitimate application features",
    "start": "380960",
    "end": "387039"
  },
  {
    "text": "exceeding usage restrictions we all know these plans where you purchase the basic planning you get like 10 10 operations",
    "start": "387039",
    "end": "393840"
  },
  {
    "text": "per minute or whatever you're doing well those things need to be enforced and many apis well actually this is",
    "start": "393840",
    "end": "399759"
  },
  {
    "text": "something they actually get right because that's kind of their business model so they do enforce users restrictions quite often in the right",
    "start": "399759",
    "end": "406560"
  },
  {
    "text": "way but that's also the same issue often not considered and finally we have large scale exploitation what happens",
    "start": "406560",
    "end": "413840"
  },
  {
    "text": "if i abuse another vulnerability an authorization problem allowing me to access all the data in your application",
    "start": "413840",
    "end": "419840"
  },
  {
    "text": "all the documents why do we hear about data breaches where somebody downloaded like 100 million",
    "start": "419840",
    "end": "426000"
  },
  {
    "text": "documents from an api and nobody even noticed that something was wrong well if you would have had some rate",
    "start": "426000",
    "end": "432080"
  },
  {
    "text": "limiting in place some detection mechanisms some limits sensible limits maybe the attack would have been cut off",
    "start": "432080",
    "end": "437199"
  },
  {
    "text": "at one million hundred thousand thousand whatever you're doing so all of these things",
    "start": "437199",
    "end": "443440"
  },
  {
    "text": "fall under that same category so it's more than just denial of service that's the takeaway here it's a lot more than",
    "start": "443440",
    "end": "448800"
  },
  {
    "start": "444000",
    "end": "807000"
  },
  {
    "text": "just preventing somebody from taking down your system which is the only thing we often look at it's much more about",
    "start": "448800",
    "end": "454319"
  },
  {
    "text": "enforcing sensible limits and building this logical way of approaching these",
    "start": "454319",
    "end": "460400"
  },
  {
    "text": "these problems so that's the issue how do you do that well",
    "start": "460400",
    "end": "466240"
  },
  {
    "text": "i can go into a lot of depth which i'm not going to do here so i'm going to give you an overview of different strategies you can follow",
    "start": "466240",
    "end": "472080"
  },
  {
    "text": "and i'll give you a teaser for the takeaway after this section that the takeaway is going to be combine these strategies into something that makes",
    "start": "472080",
    "end": "478639"
  },
  {
    "text": "sense for you there's no one-size-fits-all solution it's always going to be like do this in combination with this and this and together you may",
    "start": "478639",
    "end": "485440"
  },
  {
    "text": "have a robust defense against high volume or large-scale attacks",
    "start": "485440",
    "end": "490560"
  },
  {
    "text": "first thing is the common one that's what everybody thinks about like yeah infrastructure limits and um computation",
    "start": "490560",
    "end": "495680"
  },
  {
    "text": "limits like you can put restrictions on your docker containers and somebody can only consume this much memory instead of",
    "start": "495680",
    "end": "500960"
  },
  {
    "text": "bringing down the whole server yes those things are absolutely useful use them as a defense against hoarding resources",
    "start": "500960",
    "end": "508080"
  },
  {
    "text": "basically something much more trivial is application level input validation",
    "start": "508080",
    "end": "514479"
  },
  {
    "text": "very often applications have features where you can specify an amount that you expect as a result so a pagination",
    "start": "514479",
    "end": "520560"
  },
  {
    "text": "feature like oh yeah page seven uh ten ten items well if somebody asks for page seven with a million items some systems",
    "start": "520560",
    "end": "527360"
  },
  {
    "text": "are like okay sure if that's what you want bam and they take themselves out just by trying to fetch the information",
    "start": "527360",
    "end": "532399"
  },
  {
    "text": "from the database having input validation there like a value between 10 and 100 is acceptable",
    "start": "532399",
    "end": "538399"
  },
  {
    "text": "and rejecting everything else that's a good first step it's trivial and it's not it's not fun and sexy to build",
    "start": "538399",
    "end": "543600"
  },
  {
    "text": "things like that but it's something that's really really important to apply and practice",
    "start": "543600",
    "end": "548800"
  },
  {
    "text": "offloading that's the best one because it it takes some responsibility away from you if you",
    "start": "548800",
    "end": "554560"
  },
  {
    "text": "offload something you can basically be like now that's your problem you deal with it that's what we do when you use open id",
    "start": "554560",
    "end": "560560"
  },
  {
    "text": "connect you offload or saml for that matter no when you use when you use open id connect you offload authentication to",
    "start": "560560",
    "end": "567600"
  },
  {
    "text": "an identity provider which can be a service you pay and then you tell them like an odd0 like that's your problem",
    "start": "567600",
    "end": "573279"
  },
  {
    "text": "you deal with user authentication and password recovery and all of that stuff i don't have to worry about that anymore",
    "start": "573279",
    "end": "579200"
  },
  {
    "text": "it also goes for untrustworthy features like authentication very sensitive but untrustworthy things like image",
    "start": "579200",
    "end": "584720"
  },
  {
    "text": "processing you get an image and you have to make a thumbnail out of it well if something goes wrong it's going to be",
    "start": "584720",
    "end": "589760"
  },
  {
    "text": "that thing that goes wrong there's all kinds of ways that can go wrong offload that to an additional a separate service",
    "start": "589760",
    "end": "596080"
  },
  {
    "text": "something you can build yourself and deploy yourself sure but compartmentalize it isolate it in case",
    "start": "596080",
    "end": "601120"
  },
  {
    "text": "something does go wrong it's only that small component that has a problem it doesn't affect the rest of your system",
    "start": "601120",
    "end": "606160"
  },
  {
    "text": "your apis and your data and then finally application specific rate limiting is very useful as well",
    "start": "606160",
    "end": "612959"
  },
  {
    "text": "those are things relevant to your application have like a global catch-all like we only allow this many requests",
    "start": "612959",
    "end": "618480"
  },
  {
    "text": "per second per user something like that or in the graphql world we have limiting query depth of a graphql query or even",
    "start": "618480",
    "end": "625839"
  },
  {
    "text": "calculating the cost of a query look at github that's a very good example github has a whole documentation page saying",
    "start": "625839",
    "end": "631440"
  },
  {
    "text": "like if you send us a graphql query this is how we calculate the cost and you get this many cost factors i don't know what they call",
    "start": "631440",
    "end": "637760"
  },
  {
    "text": "it per month or per hour or whatever and after that we cut you off and that gives you a way to estimate like okay the",
    "start": "637760",
    "end": "644160"
  },
  {
    "text": "query i'm going to make is going to be this expensive and i have this much budget left so yes i can do that or maybe i shouldn't do that",
    "start": "644160",
    "end": "650640"
  },
  {
    "text": "those things really matter and the true defenses combination of all of these things together like compartmentalizing",
    "start": "650640",
    "end": "657200"
  },
  {
    "text": "putting things separate making someone else responsible for that having some sensible limits having solid",
    "start": "657200",
    "end": "663440"
  },
  {
    "text": "input sanitization input validation strong limits on the application all of that is going to be your defense against",
    "start": "663440",
    "end": "669519"
  },
  {
    "text": "os api security top 10 number four which is lack of resources and rate limiting",
    "start": "669519",
    "end": "677200"
  },
  {
    "text": "all right what about the client let's talk about",
    "start": "677200",
    "end": "682480"
  },
  {
    "text": "bumble bumble is a dating app and like many apps they have this this",
    "start": "682480",
    "end": "688160"
  },
  {
    "text": "freemium model right they entice you into signing up for their service and then they impose the limits and they try",
    "start": "688160",
    "end": "693920"
  },
  {
    "text": "to trick you or convince you let's call it convince you to buy the paid version",
    "start": "693920",
    "end": "698959"
  },
  {
    "text": "of the application and their goal is to help you find a match which is kind of",
    "start": "698959",
    "end": "705279"
  },
  {
    "text": "against their business model so i'm not sure how that works but their goal is essentially to to have you find a match in life and they had some",
    "start": "705279",
    "end": "711920"
  },
  {
    "text": "limits on the free version and it turns out that those limits were largely enforced on the client so somebody looked at the client app and said like",
    "start": "711920",
    "end": "718480"
  },
  {
    "text": "oh i can only swipe 10 times per day or something unless i pay them money to do more but the api never enforces things",
    "start": "718480",
    "end": "725839"
  },
  {
    "text": "so if you analyze the api calls from the client you can intercept them you can monitor them and send them out again you",
    "start": "725839",
    "end": "731360"
  },
  {
    "text": "could keep doing whatever you're doing same thing with having access to locked features if an account was locked for",
    "start": "731360",
    "end": "737839"
  },
  {
    "text": "some reason the front end said like oh you the client you can't access the application anymore but the api was like",
    "start": "737839",
    "end": "743120"
  },
  {
    "text": "me i don't care just a mirror gus i'll do it anyway sure it takes some skill to be able to do that but that way you could get free",
    "start": "743120",
    "end": "749920"
  },
  {
    "text": "access to bumble's premium features which it's very illegal by the way so you shouldn't do that",
    "start": "749920",
    "end": "755040"
  },
  {
    "text": "just as an example and this happens everywhere so this is an example from twitter a couple years",
    "start": "755040",
    "end": "760079"
  },
  {
    "text": "ago twitter had this brain fart called fleets um which was around for like a few months and then they said like yeah",
    "start": "760079",
    "end": "765279"
  },
  {
    "text": "this was not a very good idea so they killed it again but it was around long enough for somebody to look into that and they",
    "start": "765279",
    "end": "771440"
  },
  {
    "text": "enforce transactional integrity on the clients like they fetched a temporary fleet and then they send a read",
    "start": "771440",
    "end": "777360"
  },
  {
    "text": "notification to the api like okay the user has read this which of course all means that an",
    "start": "777360",
    "end": "782399"
  },
  {
    "text": "attacker could stop that read notification they would get all the information without the other person or",
    "start": "782399",
    "end": "787760"
  },
  {
    "text": "twitter knowing that that was information was consumed which is again not how things are supposed to work they",
    "start": "787760",
    "end": "793120"
  },
  {
    "text": "also had things disappear after a while that's the whole point of temporary data it disappears but the client just didn't",
    "start": "793120",
    "end": "798480"
  },
  {
    "text": "show it anymore the api still returned the data if you knew how to get it which is again not how things are supposed to",
    "start": "798480",
    "end": "804240"
  },
  {
    "text": "go what i'm aiming at here is that the client is irrelevant for",
    "start": "804240",
    "end": "809839"
  },
  {
    "start": "807000",
    "end": "892000"
  },
  {
    "text": "security and this is a very very very common problem in api security that people",
    "start": "809839",
    "end": "815680"
  },
  {
    "text": "often consider the client and the api together that's what your quality assurance team",
    "start": "815680",
    "end": "820880"
  },
  {
    "text": "is going to look at they're going to look at the client like can i swipe more than 10 times oh no it's blocked good",
    "start": "820880",
    "end": "826079"
  },
  {
    "text": "check what else do we need to have for so this let's test it out oh it works cool but what people often forget is that an",
    "start": "826079",
    "end": "832000"
  },
  {
    "text": "attacker can bypass the client because they control the device they control the network traffic they can easily intercept that there's plenty of tools",
    "start": "832000",
    "end": "838480"
  },
  {
    "text": "for that inspect the api requests and send whatever they want",
    "start": "838480",
    "end": "843519"
  },
  {
    "text": "restrictions from the client are useless when it comes to security same thing for hidden api endpoints",
    "start": "843519",
    "end": "849519"
  },
  {
    "text": "oh it's hidden the client doesn't use it nobody knows it except our admin client like yeah awesome security",
    "start": "849519",
    "end": "855279"
  },
  {
    "text": "not really because attackers literally have dictionary lists of common api endpoints and they just load a list in a",
    "start": "855279",
    "end": "861199"
  },
  {
    "text": "tool like burp and they hammer your api and they get a 404 404 500 like ooh",
    "start": "861199",
    "end": "867120"
  },
  {
    "text": "interesting and they have found your hidden api endpoint so you can't hide these things in",
    "start": "867120",
    "end": "872399"
  },
  {
    "text": "practice somebody will find it and somebody will abuse it and that's your attack surface every endpoint you expose",
    "start": "872399",
    "end": "877440"
  },
  {
    "text": "is your attack surface that's what you have to look at when you secure your api",
    "start": "877440",
    "end": "884519"
  },
  {
    "text": "when i talk about this on a moment not after the party people are often more responsive like hey hold",
    "start": "885360",
    "end": "892000"
  },
  {
    "start": "892000",
    "end": "1002000"
  },
  {
    "text": "on hold on are client controls really useless like isn't that good user experience to enforce things on the",
    "start": "892000",
    "end": "897519"
  },
  {
    "text": "client it's like yes it is good this was a very short-sighted takeaway",
    "start": "897519",
    "end": "904160"
  },
  {
    "text": "it's it's not complete yet i have to nuance this a little bit so yes client controls are useless for a user experience if the user is not supposed",
    "start": "904160",
    "end": "910560"
  },
  {
    "text": "to access a feature don't offer them access in the ui that's a common principle that's good",
    "start": "910560",
    "end": "915760"
  },
  {
    "text": "and it goes even further i would say mimic all the checks you do in your api",
    "start": "915760",
    "end": "921360"
  },
  {
    "text": "mimic them in the client input validation on feels like hey this field can only contain these values and force",
    "start": "921360",
    "end": "926399"
  },
  {
    "text": "that in the client and in the api same thing with authorization",
    "start": "926399",
    "end": "932720"
  },
  {
    "text": "and that gives you a very useful feature because if you enforce that in the clients in legitimate behavior",
    "start": "932720",
    "end": "939759"
  },
  {
    "text": "how often should those controls fail on the api side for legitimate use cases",
    "start": "939759",
    "end": "945279"
  },
  {
    "text": "never never thank you did you go to the party sir",
    "start": "945279",
    "end": "951680"
  },
  {
    "text": "i tried to leave a bit early yeah that explains that explains awesome",
    "start": "951680",
    "end": "957199"
  },
  {
    "text": "seriously your api controls shouldn't fail if the client enforces the same controls and if they fail well",
    "start": "957199",
    "end": "963199"
  },
  {
    "text": "in my case i probably have messed up the client that's how things go but in other cases",
    "start": "963199",
    "end": "968399"
  },
  {
    "text": "it's typically someone messing with your api if you all of a sudden get invalid data that it can there's no way that can pass",
    "start": "968399",
    "end": "975120"
  },
  {
    "text": "through the client and somebody's messing with a network request and seeing what your api does when they send you malformed data malicious data and",
    "start": "975120",
    "end": "981440"
  },
  {
    "text": "that allows you to raise alerts now you can monitor the behavior like what the hell is this user doing like oh they're trying this ah that",
    "start": "981440",
    "end": "987759"
  },
  {
    "text": "doesn't work they're trying that oh crap they're sending this we haven't thought about that and now you can",
    "start": "987759",
    "end": "993360"
  },
  {
    "text": "follow up on that and fix it or you can block the user you can divert them to 100 whatever works for you so the",
    "start": "993360",
    "end": "999759"
  },
  {
    "text": "takeaway isn't that the client is useless for security but the client is irrelevant to enforce security you can't",
    "start": "999759",
    "end": "1005839"
  },
  {
    "text": "enforce restrictions on the client alone but if you do it at both places then you get high confidence alerts that somebody",
    "start": "1005839",
    "end": "1012240"
  },
  {
    "text": "is sending malicious data to your api and that information is very useful for your security team to follow up on",
    "start": "1012240",
    "end": "1017759"
  },
  {
    "text": "potential attacks",
    "start": "1017759",
    "end": "1021240"
  },
  {
    "text": "all right back to the dating scene",
    "start": "1024319",
    "end": "1029038"
  },
  {
    "text": "grinder just like so many applications has user accounts email address password and people forget their passwords that's",
    "start": "1029360",
    "end": "1035678"
  },
  {
    "text": "how that goes there's a talk about passwords later today i think so you might want to go there to learn how to make passwords a bit more manageable",
    "start": "1035679",
    "end": "1043360"
  },
  {
    "text": "at this point we're not there yet so what happens when you forgot your password you enter an email address like philippe grammatic websecurity.com you",
    "start": "1043360",
    "end": "1049440"
  },
  {
    "text": "hit the button reset password and you get an email with the secret token in the url and you click it and you choose a new password that's how these things",
    "start": "1049440",
    "end": "1055679"
  },
  {
    "text": "work right and that's exactly how grinder worked and the response so that the front ends you enter emails sends a request and",
    "start": "1055679",
    "end": "1062000"
  },
  {
    "text": "gets a response from the api and the response to contain json data and part of that data was the email address from the front can show you we send an email",
    "start": "1062000",
    "end": "1068480"
  },
  {
    "text": "to flip fragmaticwebsecurity.com awesome and that that's all what the front-end",
    "start": "1068480",
    "end": "1073600"
  },
  {
    "text": "did but the api response contained the second field password reset token",
    "start": "1073600",
    "end": "1079120"
  },
  {
    "text": "that secret token that's only supposed to be in that email because it allows you to choose a new password was returned as json data in the response",
    "start": "1079120",
    "end": "1086640"
  },
  {
    "text": "and you don't see it called the assurance team the testing team was like yeah this works awesome",
    "start": "1086640",
    "end": "1092720"
  },
  {
    "text": "until you look at the response data open up a network tool and look at the actual json it's like oh crap that's not good",
    "start": "1092720",
    "end": "1099600"
  },
  {
    "text": "because now you can go there enter my email address look at the json response get my token fill it out in the url and choose a new password and do god knows",
    "start": "1099600",
    "end": "1106640"
  },
  {
    "text": "what my account don't tell my wife about that",
    "start": "1106640",
    "end": "1113039"
  },
  {
    "text": "all right this is called sensitive data exposure and it's really common because it's an absolutely invisible vulnerability",
    "start": "1113039",
    "end": "1119679"
  },
  {
    "start": "1114000",
    "end": "1350000"
  },
  {
    "text": "unless you look at the network traffic here's the api security swag shop which is very fictional but whatever there's a",
    "start": "1119679",
    "end": "1125520"
  },
  {
    "text": "list of online users which is probably not very gdpr compliant but i'm going to leave that in the middle and that list",
    "start": "1125520",
    "end": "1131360"
  },
  {
    "text": "of users comes from an api response with json data and the front-end just picks whatever it needs and ignores all the",
    "start": "1131360",
    "end": "1136720"
  },
  {
    "text": "rest that's how these things work and you can see that there's a bunch of shipping addresses there that probably",
    "start": "1136720",
    "end": "1142720"
  },
  {
    "text": "shouldn't be there and that you might want to hide in your api responses that's sensitive data exposure oasp api",
    "start": "1142720",
    "end": "1148960"
  },
  {
    "text": "security top 10 number anybody nobody paying attention no",
    "start": "1148960",
    "end": "1154960"
  },
  {
    "text": "no photographic memory number three it's that common number three it's like authorization issues authentication",
    "start": "1154960",
    "end": "1161440"
  },
  {
    "text": "issues like oh crap sensitive data exposure it's everywhere it's really everywhere and here's how that happens",
    "start": "1161440",
    "end": "1166960"
  },
  {
    "text": "it happens because we are spoiled as developers seriously because frameworks do",
    "start": "1166960",
    "end": "1172160"
  },
  {
    "text": "everything for us this is an example from spring like a really simple example on top we get a list of users we fetch",
    "start": "1172160",
    "end": "1178000"
  },
  {
    "text": "that list from god knows where in the system and we return a list of users by calling on line four a new response",
    "start": "1178000",
    "end": "1184559"
  },
  {
    "text": "response entity just like that you throw a bunch of java objects in there and spring is like oh okay then",
    "start": "1184559",
    "end": "1190960"
  },
  {
    "text": "i'm gonna make that into json for you because nobody wants to write json by hand if you've ever done that",
    "start": "1190960",
    "end": "1196640"
  },
  {
    "text": "you never want to do that ever again especially if you have to start escaping double quotes and it's like an absolute",
    "start": "1196640",
    "end": "1202320"
  },
  {
    "text": "freaking nightmare so middleware does that for us jackson in the spring java case",
    "start": "1202320",
    "end": "1207600"
  },
  {
    "text": "and that has the same and python has the same and ruby has the same and they all do that because nobody ever wants to do",
    "start": "1207600",
    "end": "1213039"
  },
  {
    "text": "that by hand ever again and what happens is if you have a data class like the user it contains that's your model",
    "start": "1213039",
    "end": "1219039"
  },
  {
    "text": "that's what you use in your application it contains all of these fields and this the json translator here will be like",
    "start": "1219039",
    "end": "1224880"
  },
  {
    "text": "fields json bam bam and audit goes just like that code code example on top vulnerable to",
    "start": "1224880",
    "end": "1231200"
  },
  {
    "text": "sensitive data exposure it's that simple really common",
    "start": "1231200",
    "end": "1236880"
  },
  {
    "text": "so how do we fix it well i have two solutions one crappy one",
    "start": "1236880",
    "end": "1242880"
  },
  {
    "text": "and one annoying but better one the crappy solution is by marking things",
    "start": "1242880",
    "end": "1248000"
  },
  {
    "text": "as json ignore that's always the easy solution like oh this field should not be exposed let's",
    "start": "1248000",
    "end": "1253120"
  },
  {
    "text": "just slap an annotation on there and the parser or the json translator will ignore that awesome",
    "start": "1253120",
    "end": "1259120"
  },
  {
    "text": "good the problem is you have to go through all of your data classes and mark every field you do not want to expose as json ignore and if you forget",
    "start": "1259120",
    "end": "1266720"
  },
  {
    "text": "one you have a problem a wasp.net number three sensitive data exposure check",
    "start": "1266720",
    "end": "1273600"
  },
  {
    "text": "well that's the bad checklist not a good checklist so this works but i don't like it i don't like having to go through all",
    "start": "1273600",
    "end": "1279840"
  },
  {
    "text": "of these things and remember that and if you forget one it becomes a problem so the better solution",
    "start": "1279840",
    "end": "1284880"
  },
  {
    "text": "is using this very old pattern called dtos data transfer objects where we basically translate that user object",
    "start": "1284880",
    "end": "1290960"
  },
  {
    "text": "that internal concept into something that we that has better semantics like the public user info class",
    "start": "1290960",
    "end": "1297679"
  },
  {
    "text": "and if you complain about a verbosity of dtos well you're doing java so you have no right to complain at all",
    "start": "1297679",
    "end": "1303280"
  },
  {
    "text": "this is just inherent nature to java but seriously this has proper semantics if you now look at the code it says like",
    "start": "1303280",
    "end": "1309520"
  },
  {
    "text": "okay what do we return oh public user info awesome what's public user info idea name very easy very clear to see",
    "start": "1309520",
    "end": "1316720"
  },
  {
    "text": "and very hard to make a mistake yes you can still add a sensitive address feel to that public user info class but it's",
    "start": "1316720",
    "end": "1323360"
  },
  {
    "text": "going to be much more difficult to make that mistake by accident probably don't write it right after the",
    "start": "1323360",
    "end": "1329600"
  },
  {
    "text": "party wait until tomorrow to update something like that but seriously if you make that mistake it's going to be very",
    "start": "1329600",
    "end": "1335039"
  },
  {
    "text": "much more obvious than before this is sensitive data exposure and this",
    "start": "1335039",
    "end": "1341360"
  },
  {
    "text": "automatic marshalling between json and other formats like java objects well java objects and json results in a very",
    "start": "1341360",
    "end": "1348320"
  },
  {
    "text": "interesting question if we can trick an api or if an api automatically exposes data by accident",
    "start": "1348320",
    "end": "1355760"
  },
  {
    "start": "1350000",
    "end": "1503000"
  },
  {
    "text": "what if we can make it accept data by accident wouldn't that be awesome",
    "start": "1355760",
    "end": "1362400"
  },
  {
    "text": "or what's the api security top 10 number six mass assignment mass assignment is",
    "start": "1363039",
    "end": "1368159"
  },
  {
    "text": "the same problem in the other way around now we submit more json than the application actually expects",
    "start": "1368159",
    "end": "1374559"
  },
  {
    "text": "and override fields in internal user objects here's how that works another crappy spring security our spring boot",
    "start": "1374559",
    "end": "1382400"
  },
  {
    "text": "code example on top we online two we request we accept a request to update a user user's",
    "start": "1382400",
    "end": "1389280"
  },
  {
    "text": "data and we accept user information and we use that user information to",
    "start": "1389280",
    "end": "1395039"
  },
  {
    "text": "update the user object in the system which will result in updating the database and so on and so on",
    "start": "1395039",
    "end": "1400159"
  },
  {
    "text": "and here's our user class so we have an id and name and a role in the system like employee or admin or whatever and",
    "start": "1400159",
    "end": "1407200"
  },
  {
    "text": "here's the json that's the that part that's the red part that's how we update the database and here's the",
    "start": "1407200",
    "end": "1412480"
  },
  {
    "text": "json to update my name to dr phil easy straightforward you test this out you",
    "start": "1412480",
    "end": "1418159"
  },
  {
    "text": "enter the field in the app you submit it and it works and everybody's happy awesome until the attacker comes around the",
    "start": "1418159",
    "end": "1423919"
  },
  {
    "text": "attacker it's like hmm what if i provide data like this i",
    "start": "1423919",
    "end": "1429760"
  },
  {
    "text": "provide you a name and a role and that role gets picked up by well it gets translated from json into a user object",
    "start": "1429760",
    "end": "1436240"
  },
  {
    "text": "gets sent to the database layer it updates all the fields and bam now i became an admin",
    "start": "1436240",
    "end": "1442000"
  },
  {
    "text": "seems simple on a slide it's like oh yeah of course happens in real world systems results in",
    "start": "1442000",
    "end": "1448320"
  },
  {
    "text": "account takeover all kinds of really nasty vulnerabilities just because of mass assignment",
    "start": "1448320",
    "end": "1455279"
  },
  {
    "text": "awesome right thank you chase and translators i mean how do we fix it well",
    "start": "1455279",
    "end": "1461039"
  },
  {
    "text": "this is kind of history repeating we can use annotations to tell that jason parson like yeah this field should not",
    "start": "1461039",
    "end": "1466799"
  },
  {
    "text": "be set from jason it's read only so you can expose it but not accept it again same problems here you have to do",
    "start": "1466799",
    "end": "1473120"
  },
  {
    "text": "this for every field and i don't really like it as in it's too hard to make a mistake here for",
    "start": "1473120",
    "end": "1478320"
  },
  {
    "text": "getting one annotation and you have a vulnerability so why don't we use again a dto class",
    "start": "1478320",
    "end": "1484480"
  },
  {
    "text": "like this one where we have update user info and we only provide a name field there's no way to smuggle additional",
    "start": "1484480",
    "end": "1490559"
  },
  {
    "text": "json into this approach and it kind of solves the problem by design yes it takes a little bit more effort but it's",
    "start": "1490559",
    "end": "1497039"
  },
  {
    "text": "really really worth it and the takeaway here is",
    "start": "1497039",
    "end": "1502080"
  },
  {
    "text": "it's kind of more general let's test your apis in their natural habitat because these issues often only become",
    "start": "1502080",
    "end": "1507760"
  },
  {
    "start": "1503000",
    "end": "1644000"
  },
  {
    "text": "apparent if you start testing them in real world systems because this might not always occur in development systems",
    "start": "1507760",
    "end": "1514880"
  },
  {
    "text": "it may not occur if you're not using the real real api to test certain things if you have a bunch of limited tests so",
    "start": "1514880",
    "end": "1521039"
  },
  {
    "text": "test them in a running condition test them as you would deploy them and make sure you can find these",
    "start": "1521039",
    "end": "1527279"
  },
  {
    "text": "vulnerabilities in practice",
    "start": "1527279",
    "end": "1531039"
  },
  {
    "text": "all right great way to follow up that takeaway",
    "start": "1532400",
    "end": "1537600"
  },
  {
    "text": "like test your apis and then it's testing really good well maybe the answer is yes for once",
    "start": "1537600",
    "end": "1543520"
  },
  {
    "text": "it isn't it's kind of a giveaway when i add in trainings as well when i ask something people are like yeah it's not going to",
    "start": "1543520",
    "end": "1549120"
  },
  {
    "text": "be yes so probably no and of course then the question is why why not in this case it's unsustainable you",
    "start": "1549120",
    "end": "1555679"
  },
  {
    "text": "can't keep testing all api endpoints yes you can do that a couple of times and you can write some tests but this is not",
    "start": "1555679",
    "end": "1560880"
  },
  {
    "text": "something that's going to work well reliably towards the future this doesn't scale very well",
    "start": "1560880",
    "end": "1565919"
  },
  {
    "text": "so what can we do there well there's this cool thing called open api specification or swagger the old version",
    "start": "1565919",
    "end": "1574080"
  },
  {
    "text": "and it basically allows you to define the exact behavior you expect from your apis like a full contract like hey this",
    "start": "1574080",
    "end": "1582000"
  },
  {
    "text": "endpoint will return application slash json content types and the schema of that looks like it's an array of items",
    "start": "1582000",
    "end": "1588159"
  },
  {
    "text": "and those area contains objects and objects have an id and a name no address field",
    "start": "1588159",
    "end": "1594639"
  },
  {
    "text": "awesome well not really it's yaml so it's a pain in the ass to ride it's like space base base space entertainment",
    "start": "1595120",
    "end": "1601120"
  },
  {
    "text": "you also have the json version which isn't better by the way so it's it's absolutely horrible but there's tool support tools allow you to easily",
    "start": "1601120",
    "end": "1607200"
  },
  {
    "text": "specify this there's ways to add this to your code so you don't have to have a separate specification file you can just add it as comments in the code and",
    "start": "1607200",
    "end": "1613360"
  },
  {
    "text": "generate documentation straight from this that's awesome you can generate docs from this like literally generate docs boom here's",
    "start": "1613360",
    "end": "1620159"
  },
  {
    "text": "a full html website with api documentation cool you can use this as a communication tool",
    "start": "1620159",
    "end": "1625679"
  },
  {
    "text": "between teams ever had the discussion between frontlines and apis like yeah this returns something like this and then it",
    "start": "1625679",
    "end": "1631520"
  },
  {
    "text": "turns out it's something completely different and everything breaks when you integrate them well not with an api contract",
    "start": "1631520",
    "end": "1637360"
  },
  {
    "text": "you have tools that can use this as input and provide very useful features for testing but also for",
    "start": "1637360",
    "end": "1643200"
  },
  {
    "text": "security for example there's tools to find authorization vulnerabilities give it a contract and they will start hammering",
    "start": "1643200",
    "end": "1648960"
  },
  {
    "start": "1644000",
    "end": "1690000"
  },
  {
    "text": "your api with requests that respect the contract but do something slightly different to see how it responds",
    "start": "1648960",
    "end": "1655120"
  },
  {
    "text": "and there's another tool from microsoft as well and more advanced tools there's api firewalls that can take a",
    "start": "1655120",
    "end": "1661360"
  },
  {
    "text": "contract as input and inspect requests as they see them go by and responses go back and it can be like mass assignment",
    "start": "1661360",
    "end": "1668720"
  },
  {
    "text": "a request with additional json like hey the contract doesn't allow this it either blocks the request or removes",
    "start": "1668720",
    "end": "1674000"
  },
  {
    "text": "the data or whatever and the same thing for responses sensitive data exposure like oh crap we have five additional",
    "start": "1674000",
    "end": "1679520"
  },
  {
    "text": "fields being exposed and the current success only three like no no let's not do that let's strip them or block the",
    "start": "1679520",
    "end": "1685039"
  },
  {
    "text": "response or whatever we want to do as a response that api contract enables security so you have to start using it",
    "start": "1685039",
    "end": "1692080"
  },
  {
    "text": "who here is using it who's using open api about half of the room",
    "start": "1692080",
    "end": "1699279"
  },
  {
    "text": "when i'm back in september i'm going to be at ndc oslo and you're here as well i expect the",
    "start": "1700080",
    "end": "1705360"
  },
  {
    "text": "whole room to be like oh yeah we're using it and give your honest feedback oh we hate it that's perfectly valid i mean that's",
    "start": "1705360",
    "end": "1712320"
  },
  {
    "text": "absolutely fine but seriously this is the future security tools are consuming this and it's going to get used more",
    "start": "1712320",
    "end": "1717600"
  },
  {
    "text": "often everywhere it's really really powerful it's just a little bit of effort to write it and keep it up to",
    "start": "1717600",
    "end": "1722720"
  },
  {
    "text": "date but it's really worth it in the end",
    "start": "1722720",
    "end": "1726880"
  },
  {
    "text": "all right that brings us to the mobile",
    "start": "1730799",
    "end": "1736399"
  },
  {
    "text": "well i've been using these slides for a long time it's from 2017 this article",
    "start": "1736399",
    "end": "1741919"
  },
  {
    "text": "since then they have a couple of had a couple of more preachers but uh i'm not going to talk about those here what happened here t-mobile allows you",
    "start": "1741919",
    "end": "1748399"
  },
  {
    "text": "to fetch your account information like so many applications like hey i want to see my account info send a",
    "start": "1748399",
    "end": "1753600"
  },
  {
    "text": "request and the identifier for your account is your phone number because that's kind of a unique",
    "start": "1753600",
    "end": "1758960"
  },
  {
    "text": "identifier so that kind of works out well no need to generate a new id we'll just use the phone number easy so i send a request to",
    "start": "1758960",
    "end": "1766000"
  },
  {
    "text": "the api and i with my phone number and i get my account information awesome and i send a request with your phone",
    "start": "1766000",
    "end": "1772159"
  },
  {
    "text": "number and i get your account information not awesome not good that's what",
    "start": "1772159",
    "end": "1777600"
  },
  {
    "text": "happened here this is a problem that has been around i don't know the exact date i haven't",
    "start": "1777600",
    "end": "1784000"
  },
  {
    "text": "looked it up for at least two decades if not longer it used to be called insecure direct object references",
    "start": "1784000",
    "end": "1790880"
  },
  {
    "text": "because that a phone number is a direct object reference which is fine there's nothing wrong with that",
    "start": "1790880",
    "end": "1796559"
  },
  {
    "text": "but the fact that it doesn't enforce authorization on that call that's the problem it should have checked when i asked for your gun information that was",
    "start": "1796559",
    "end": "1802960"
  },
  {
    "text": "actually you instead of me and t-mobile didn't do that in apis we don't call that insecure",
    "start": "1802960",
    "end": "1808640"
  },
  {
    "text": "direct object references anymore that wasn't sexy enough so we call it bola broken object level authorization which",
    "start": "1808640",
    "end": "1815360"
  },
  {
    "text": "is the same issue just with a different name and this issue",
    "start": "1815360",
    "end": "1820880"
  },
  {
    "text": "api security top 10 number one thank you awesome people are waking up so 9 30 first coffee is starting to",
    "start": "1821600",
    "end": "1828399"
  },
  {
    "text": "hit that's good so number one this happens everywhere remember that study from these apps in the uk the healthcare",
    "start": "1828399",
    "end": "1834399"
  },
  {
    "text": "apps 100 of apis had this exact vulnerability and here's some more examples in the patient portal",
    "start": "1834399",
    "end": "1841440"
  },
  {
    "text": "millions of patients health information whoops that's a mistake on twitter we",
    "start": "1841440",
    "end": "1848000"
  },
  {
    "text": "could allow well we could abuse a bug like this to match phone numbers to twitter accounts which is kind of",
    "start": "1848000",
    "end": "1853120"
  },
  {
    "text": "sensitive and then on facebook somebody figured out how to use this vulnerability to change the name of a facebook page and then register a new",
    "start": "1853120",
    "end": "1859840"
  },
  {
    "text": "page with the same name so they could hijack that url to the page 15 000 usd as a bug bounty just to show",
    "start": "1859840",
    "end": "1866080"
  },
  {
    "text": "you that this is not an insignificant oh yeah thank you for reporting vulnerabilities like an oh crap let's",
    "start": "1866080",
    "end": "1871600"
  },
  {
    "text": "pay the guys some money for having reported that issue happens everywhere",
    "start": "1871600",
    "end": "1878000"
  },
  {
    "text": "why because of stuff like this if you build your first node.js rest api",
    "start": "1878000",
    "end": "1884000"
  },
  {
    "start": "1881000",
    "end": "2044000"
  },
  {
    "text": "in 10 minutes i can tell you there's not gonna be any security in there and that's okay that's not",
    "start": "1884000",
    "end": "1889760"
  },
  {
    "text": "i mean you're joking you're laughing with this but that's how we learn stuff right if you want to learn how to build",
    "start": "1889760",
    "end": "1894799"
  },
  {
    "text": "an api on azure you're going to find a tutorial from a blogger somewhere from microsoft devrel and you're going to follow that and 10 minutes later you",
    "start": "1894799",
    "end": "1901440"
  },
  {
    "text": "have deployed an api on azure and you're like yeah awesome same thing here there's nothing wrong with that",
    "start": "1901440",
    "end": "1907200"
  },
  {
    "text": "there's since no stab at the author of this article this is a valid article and it teaches you to",
    "start": "1907200",
    "end": "1913279"
  },
  {
    "text": "build something like this a to do application of course a to do application the common example",
    "start": "1913279",
    "end": "1918880"
  },
  {
    "text": "and it gives you an end point to delete tasks like app dot delete that's a restful method awesome slash task task",
    "start": "1918880",
    "end": "1925440"
  },
  {
    "text": "id and we can delete that task from the system no security that's okay",
    "start": "1925440",
    "end": "1932000"
  },
  {
    "text": "you're here to learn about rest not about security so what's the next step the next step is like okay how do we add",
    "start": "1932000",
    "end": "1937600"
  },
  {
    "text": "security to this api because we all know that we have to do it and you're going to find another tutorial that's going to explain some kind of authentication",
    "start": "1937600",
    "end": "1944240"
  },
  {
    "text": "mechanism and you're going to add a requires art decorator or whatever on that call it's a middleware in express",
    "start": "1944240",
    "end": "1950159"
  },
  {
    "text": "or a decorator in python or whatever you're doing in spring or whatever awesome",
    "start": "1950159",
    "end": "1956480"
  },
  {
    "text": "right now you're t-mobile t-mobile checked if you were authenticated when you asked your",
    "start": "1956480",
    "end": "1961760"
  },
  {
    "text": "account info it never checked who you were so you're already moving up in the world so that's good",
    "start": "1961760",
    "end": "1967440"
  },
  {
    "text": "what else should you be doing well we're deleting stuff so maybe we should check if the user actually has permission to",
    "start": "1967440",
    "end": "1972720"
  },
  {
    "text": "delete a task kind of makes sense right so you find a way to do that you",
    "start": "1972720",
    "end": "1979120"
  },
  {
    "text": "implement that and that's actually kind of um well done as well this is called protection against functional level",
    "start": "1979120",
    "end": "1985200"
  },
  {
    "text": "alters or this is functional level authorization that was in the api scripted up then and",
    "start": "1985200",
    "end": "1990640"
  },
  {
    "text": "i don't know by heart which number i think five if i'm not mistaken function level authorization basically",
    "start": "1990640",
    "end": "1996240"
  },
  {
    "text": "checking if a user is allowed to perform a certain operation in the system very useful very important",
    "start": "1996240",
    "end": "2003039"
  },
  {
    "text": "a lot of people get this right actually because it's it's very conceptually straightforward to to analyze this to",
    "start": "2003039",
    "end": "2010000"
  },
  {
    "text": "think about this however this snippet of code now",
    "start": "2010000",
    "end": "2015840"
  },
  {
    "text": "still has ebola vulnerability a broken object level authorization issue why because we check if you can delete tasks",
    "start": "2015840",
    "end": "2022000"
  },
  {
    "text": "you never check which task you can delete like hey you can delete your task or my task or that guy's task any id you",
    "start": "2022000",
    "end": "2029200"
  },
  {
    "text": "have and if it starts at 1 and ends at nine hundred thousand nine hundred ninety nine well you can kind of guess what the other ids are gonna be",
    "start": "2029200",
    "end": "2035919"
  },
  {
    "text": "and that's okay there's no problem in having predictable ids there's a problem in having no object level authorization",
    "start": "2035919",
    "end": "2041600"
  },
  {
    "text": "you have to check whether something is allowed or not but we're not there yet so the first",
    "start": "2041600",
    "end": "2046640"
  },
  {
    "start": "2044000",
    "end": "2202000"
  },
  {
    "text": "takeaway here is implement function level authorization very important this permission-based approach kind of works",
    "start": "2046640",
    "end": "2051839"
  },
  {
    "text": "well to enforce function level authorization it's intuitive and somewhere you can map that permission to",
    "start": "2051839",
    "end": "2056878"
  },
  {
    "text": "a user's role or some other properties that you like to enforce awesome",
    "start": "2056879",
    "end": "2062799"
  },
  {
    "text": "that's checking if somebody can perform a certain operation now before we talk about object level",
    "start": "2063919",
    "end": "2069839"
  },
  {
    "text": "authorization i have a question for you here's two examples from that to do application are these secure when it comes to",
    "start": "2069839",
    "end": "2077040"
  },
  {
    "text": "function level authorization we're not talking about object level authorization yet is this secure yes or no",
    "start": "2077040",
    "end": "2082720"
  },
  {
    "text": "is this good code oh no the code probably isn't very good because i paraphrase it for powerpoint",
    "start": "2082720",
    "end": "2088878"
  },
  {
    "text": "but is this secure maybe right",
    "start": "2088879",
    "end": "2095839"
  },
  {
    "text": "who knows is that the bottom has function level authorization checks like has permission",
    "start": "2095839",
    "end": "2101839"
  },
  {
    "text": "delete task the top example has nothing",
    "start": "2101839",
    "end": "2105839"
  },
  {
    "text": "is that intentional or did you just forget it i don't know",
    "start": "2107040",
    "end": "2112880"
  },
  {
    "text": "that these are questions i asked during security assessments i asked the team i work with the deaf teams when i do that",
    "start": "2112880",
    "end": "2118000"
  },
  {
    "text": "and i ask them like what are you doing there and they're like yeah i think that's supposed to be like that",
    "start": "2118000",
    "end": "2123200"
  },
  {
    "text": "like is that publicly accessible like yeah we think so they have to call someone like yeah yeah yeah that's okay",
    "start": "2123200",
    "end": "2128480"
  },
  {
    "text": "that's okay why don't we make that explicit because auditability is the second most important property of an",
    "start": "2128480",
    "end": "2134880"
  },
  {
    "text": "authorization policy security is one asset ability is second because you can't have security without being able",
    "start": "2134880",
    "end": "2140240"
  },
  {
    "text": "to audit the policy is this according to your policy yes or no what if we would have written this",
    "start": "2140240",
    "end": "2146640"
  },
  {
    "text": "allow public access which can just be like return true i don't care what it does",
    "start": "2146640",
    "end": "2152240"
  },
  {
    "text": "but what i care about is this if you look at this code at first glance it's going to scream at you what it's doing",
    "start": "2152240",
    "end": "2157359"
  },
  {
    "text": "it's not like you have to look for something that's missing to the the to induce what the intent is here no it",
    "start": "2157359",
    "end": "2162800"
  },
  {
    "text": "says like hey man public access and if this doesn't make sense if this is like delete all users and it says",
    "start": "2162800",
    "end": "2169119"
  },
  {
    "text": "allow public access you can be like no no let's not do that seriously auditability is very important",
    "start": "2169119",
    "end": "2175680"
  },
  {
    "text": "and making things clear to understand with things like this is useful because now you can enforce additional",
    "start": "2175680",
    "end": "2181119"
  },
  {
    "text": "rules you can have a security scanning rule in semgrap for example that says every endpoint needs to have a",
    "start": "2181119",
    "end": "2187200"
  },
  {
    "text": "call to art whether it's check permission public access we don't care but if you write an",
    "start": "2187200",
    "end": "2192800"
  },
  {
    "text": "endpoint without such an object you get a bad result you get a finding in some graph and we refuse to build",
    "start": "2192800",
    "end": "2198880"
  },
  {
    "text": "that code that could be a solid policy auditability you have to empower",
    "start": "2198880",
    "end": "2203920"
  },
  {
    "start": "2202000",
    "end": "2431000"
  },
  {
    "text": "auditability you have to force yourself and your colleagues to write",
    "start": "2203920",
    "end": "2210000"
  },
  {
    "text": "code that is easy to audit because that will be worth it in the long run you seriously need to do that",
    "start": "2210000",
    "end": "2216400"
  },
  {
    "text": "all right what about bola broken object level",
    "start": "2216400",
    "end": "2223119"
  },
  {
    "text": "authorization well if you want to fix that you'll quickly end up in a place where you really",
    "start": "2223119",
    "end": "2229040"
  },
  {
    "text": "really don't want to be because it starts looking like this like oh yeah you have to check permission",
    "start": "2229040",
    "end": "2234079"
  },
  {
    "text": "delete task and then you have managers and employees and this and this and a manager can delete all tasks but employees can only",
    "start": "2234079",
    "end": "2240880"
  },
  {
    "text": "delete their own tasks so you start to write code like if the user is an employee then we have to apply this",
    "start": "2240880",
    "end": "2246079"
  },
  {
    "text": "additional check and it's going to be a freaking nightmare remember this auditability well now your",
    "start": "2246079",
    "end": "2251760"
  },
  {
    "text": "code is littered with crap like this and then somebody says like hey what if we add a new role in turn with some",
    "start": "2251760",
    "end": "2259040"
  },
  {
    "text": "additional requirements now you have to go through your entire code base and be like okay and if the user is an intern then we apply this rule and that rule",
    "start": "2259040",
    "end": "2265440"
  },
  {
    "text": "and it's it doesn't work and that's why broken object level authorization is such a big issue",
    "start": "2265440",
    "end": "2270480"
  },
  {
    "text": "making a single mistake in this authorization logic is enough to create a vulnerability",
    "start": "2270480",
    "end": "2277359"
  },
  {
    "text": "so how do we fix that well take that crap out of your code sorry that authorization policy out of your",
    "start": "2277359",
    "end": "2283839"
  },
  {
    "text": "code that thing doesn't belong in your code you have to take it out to ensure that you can audit that policy",
    "start": "2283839",
    "end": "2290320"
  },
  {
    "text": "again by taking it out we create an authorization policy",
    "start": "2290320",
    "end": "2296160"
  },
  {
    "text": "you can call it a policy engine because it sounds very cool it's like our policy decision points it's like whoa awesome",
    "start": "2296160",
    "end": "2303920"
  },
  {
    "text": "it's just one place with rules for authorization it can be as simple as if you're building a java app have a class",
    "start": "2303920",
    "end": "2310839"
  },
  {
    "text": "authorization and in that class you have functions can delete task which returns",
    "start": "2310839",
    "end": "2316240"
  },
  {
    "text": "either true or false and that is your policy decision point which is a very fancy name for that that's how you sell",
    "start": "2316240",
    "end": "2321599"
  },
  {
    "text": "that to your boss like yeah plus we need a policy decision point which is also a policy information point",
    "start": "2321599",
    "end": "2327760"
  },
  {
    "text": "awesome seriously i'm making jokes about this but this is really important by",
    "start": "2327760",
    "end": "2333200"
  },
  {
    "text": "centralizing this logic you you gain two things you gain the ability to simplify your endpoint",
    "start": "2333200",
    "end": "2339839"
  },
  {
    "text": "code all of these checks go away it now becomes authorization dot can delete task",
    "start": "2339839",
    "end": "2345280"
  },
  {
    "text": "here's the task you want to delete here's the user what do you think and it will give you true or false",
    "start": "2345280",
    "end": "2351040"
  },
  {
    "text": "exception no exception whatever works for your language awesome how do you audit this well first of all",
    "start": "2351040",
    "end": "2356800"
  },
  {
    "text": "you check that every endpoint calls the policy and then you look at the policy you can",
    "start": "2356800",
    "end": "2361839"
  },
  {
    "text": "literally look at the policy and be like yeah that makes sense you want to change something you change the policy",
    "start": "2361839",
    "end": "2368720"
  },
  {
    "text": "you want to see who messed up the policy get to blame very easy it's all in one location it's seriously",
    "start": "2368720",
    "end": "2374640"
  },
  {
    "text": "it's something that you want to centralize that's the how do i say this delicately the poor",
    "start": "2374640",
    "end": "2381280"
  },
  {
    "text": "man's policy decision point just a piece of code that does all authorization checks awesome",
    "start": "2381280",
    "end": "2387680"
  },
  {
    "text": "if you want to be fancy you can externalize it in a service there's services like open policy agent that allow you to define a policy in a policy",
    "start": "2387680",
    "end": "2394560"
  },
  {
    "text": "language and run that as a service we can ask that service like what do you think about this what do you think about that these things can be very advanced",
    "start": "2394560",
    "end": "2400880"
  },
  {
    "text": "very fine-grained down to the field level like this user is allowed to update that field on these types of",
    "start": "2400880",
    "end": "2406560"
  },
  {
    "text": "objects that's what you can do with things like this open policy agent is one example",
    "start": "2406560",
    "end": "2411839"
  },
  {
    "text": "ozo is actually gaining some traction as well it's a new approach",
    "start": "2411839",
    "end": "2416880"
  },
  {
    "text": "for doing authorization built by developers it's very new very",
    "start": "2416880",
    "end": "2422160"
  },
  {
    "text": "fresh so um it's not widespread supported yet but it's something interesting to keep an eye on",
    "start": "2422160",
    "end": "2428000"
  },
  {
    "text": "if you're interested in authorization policies all right so encapsulate complex authorization",
    "start": "2428000",
    "end": "2433520"
  },
  {
    "text": "logic avoid having that scattered throughout the code because it hurts auditability it's going to make your life a nightmare to maintain that and",
    "start": "2433520",
    "end": "2440160"
  },
  {
    "text": "it's virtually impossible to secure that pull it out have it centralized",
    "start": "2440160",
    "end": "2445599"
  },
  {
    "text": "look at it have someone else look at it make sure it makes sense write unit tests of your policy that's another",
    "start": "2445599",
    "end": "2450960"
  },
  {
    "text": "benefit you can actually write tests against your actual authorization policy like can delete task here's a battery of",
    "start": "2450960",
    "end": "2456560"
  },
  {
    "text": "cases where it's supposed to be yes and it's supposed to be no awesome",
    "start": "2456560",
    "end": "2461760"
  },
  {
    "text": "all right let's keep going why not we have time",
    "start": "2461760",
    "end": "2469680"
  },
  {
    "text": "if you want to make authorization decisions you need to know one important thing",
    "start": "2470480",
    "end": "2478160"
  },
  {
    "text": "who's asking to do something authentication is is often this huge",
    "start": "2478160",
    "end": "2483440"
  },
  {
    "text": "issue like yeah we have to have authentication but it plays the second file in it's only in function",
    "start": "2483440",
    "end": "2488800"
  },
  {
    "text": "of authorization nobody really cares about who you are well except trackers but",
    "start": "2488800",
    "end": "2494400"
  },
  {
    "text": "a normal application doesn't really care who you are they care about what you're allowed to do and to decide that they",
    "start": "2494400",
    "end": "2499839"
  },
  {
    "text": "need to know who you are and that's what authentication really does and user authentication is kind of this",
    "start": "2499839",
    "end": "2504960"
  },
  {
    "text": "very complex topic because the user typically authenticates once to an authentication service and after that we",
    "start": "2504960",
    "end": "2510720"
  },
  {
    "text": "propagate the user's authenticated state clients authenticate often on every",
    "start": "2510720",
    "end": "2516319"
  },
  {
    "text": "request it's not uncommon for a client to be like hey i'm that client do something hey i'm that client do something with the user well we struggle",
    "start": "2516319",
    "end": "2523440"
  },
  {
    "text": "with having users authenticate once securely so let's keep it at once that's that's fine use authenticate once and",
    "start": "2523440",
    "end": "2528880"
  },
  {
    "text": "then after that we have session management which is a dirty word in api world so",
    "start": "2528880",
    "end": "2535520"
  },
  {
    "text": "that's not called sessions let's call it i don't know what we want to call it seriously that's how we do user",
    "start": "2535520",
    "end": "2541280"
  },
  {
    "text": "authentication that's where we get the authorization information and with that we can make authorization decisions so how do you do that in apis what about",
    "start": "2541280",
    "end": "2547839"
  },
  {
    "text": "using cookies a j session id wow",
    "start": "2547839",
    "end": "2553920"
  },
  {
    "start": "2548000",
    "end": "2661000"
  },
  {
    "text": "people are angry now i can see the looks like what no man yes do it",
    "start": "2553920",
    "end": "2560400"
  },
  {
    "text": "it's awesome seriously if you're building an api with a few hundred or a few thousand users",
    "start": "2560400",
    "end": "2566480"
  },
  {
    "text": "and you're running this yourself with your front end and your api and you control all of this and it's based on browser-based clients this is",
    "start": "2566480",
    "end": "2573359"
  },
  {
    "text": "really really awesome we've been using it for more than 20 years and it works",
    "start": "2573359",
    "end": "2579119"
  },
  {
    "text": "i'm like yeah but we're doing cloud stuff we're cool we don't have application servers like tomcat no we're deploying",
    "start": "2579119",
    "end": "2585280"
  },
  {
    "text": "stuff on heroku well good because heroku has java session handling support with the redis cache",
    "start": "2585280",
    "end": "2592640"
  },
  {
    "text": "and i know that this is a very unpopular opinion but web sessions work really well",
    "start": "2592640",
    "end": "2599680"
  },
  {
    "text": "they keep data on the server in a secure location you don't have trust issues with that data you get an identifier you",
    "start": "2600319",
    "end": "2605839"
  },
  {
    "text": "look up who the user is and you make your authorization decision and you handle whatever you want",
    "start": "2605839",
    "end": "2611280"
  },
  {
    "text": "and some people will argue but it's a stateful backend but that concept is",
    "start": "2611280",
    "end": "2616560"
  },
  {
    "text": "often over simplified i'm not saying write stateful code i'm not saying that your code should behave differently",
    "start": "2616560",
    "end": "2622880"
  },
  {
    "text": "based on what happened before your code can be the same you just take some information from a",
    "start": "2622880",
    "end": "2628480"
  },
  {
    "text": "server-side session object make your decision and you're done and this works very well for web-based apis",
    "start": "2628480",
    "end": "2636880"
  },
  {
    "text": "you can quote me on that trust me i've done this talk very quite a few times over the past few",
    "start": "2636880",
    "end": "2643440"
  },
  {
    "text": "years in various formats and after a talk typically after meetup or conference talk people come to me like yeah that thing you said about sessions",
    "start": "2643440",
    "end": "2650079"
  },
  {
    "text": "yeah we switched all of that to token based stuff and at the end we had no benefit in doing that it was a major",
    "start": "2650079",
    "end": "2656319"
  },
  {
    "text": "effort for zero benefits this works really well in traditional settings small scale applications i'm",
    "start": "2656319",
    "end": "2663440"
  },
  {
    "start": "2661000",
    "end": "2868000"
  },
  {
    "text": "not saying do this if you have 15 million users because you're gonna be hurting really fast but if you have a",
    "start": "2663440",
    "end": "2669440"
  },
  {
    "text": "small system like so many applications this works really well even though it's not going to get you",
    "start": "2669440",
    "end": "2675520"
  },
  {
    "text": "the cool vote from your colleague developers this works awesome",
    "start": "2675520",
    "end": "2681119"
  },
  {
    "text": "all right what do you do if you do not want to use this if you",
    "start": "2681119",
    "end": "2687200"
  },
  {
    "text": "don't want to use sessions but you want to use tokens then you're very likely going to end up in the oauth world",
    "start": "2687200",
    "end": "2693119"
  },
  {
    "text": "oh wow it is kind of designed to handle cases like this we have an authorization server where the user or the client can",
    "start": "2693119",
    "end": "2698400"
  },
  {
    "text": "authenticate or vote in some cases and we get an access token from that authorization server and we request",
    "start": "2698400",
    "end": "2704240"
  },
  {
    "text": "access with that access token an api is going to use that access token to make authorization decisions",
    "start": "2704240",
    "end": "2709920"
  },
  {
    "text": "that's a decoupled approach better right people are happy again it's",
    "start": "2709920",
    "end": "2715520"
  },
  {
    "text": "like oh yes tokens thank you fun fact you know what the bottom link uses between the browser and that",
    "start": "2715520",
    "end": "2721599"
  },
  {
    "text": "authorization server cookies that's how you do single sign-on because cookies work really well in browsers",
    "start": "2721599",
    "end": "2728720"
  },
  {
    "text": "that aside so even when you're like yeah we're using outfit tokens now you're also using cookies trust me cookies are",
    "start": "2728720",
    "end": "2735200"
  },
  {
    "text": "always there on the web anyway access tokens that's the api side of things we don't care about the bottom link that's",
    "start": "2735200",
    "end": "2741119"
  },
  {
    "text": "whatever apis now get tokens what type of tokens",
    "start": "2741119",
    "end": "2746560"
  },
  {
    "text": "this is going to be really funny by the way what type of tokens well oat has two types of tokens the first one is a reference token",
    "start": "2746560",
    "end": "2753200"
  },
  {
    "text": "you know the reference token is an id it's like a session id we just",
    "start": "2753200",
    "end": "2758400"
  },
  {
    "text": "call it a reference token because now people can ignore that it's a session id no seriously a reference token is a",
    "start": "2758400",
    "end": "2764000"
  },
  {
    "text": "random identifier pointing to states kept by the authorization server so you get that token we call it a token it's",
    "start": "2764000",
    "end": "2770000"
  },
  {
    "text": "not a child it's just a random id we send it to the api and the api is like oh thank you for that token i'm going to",
    "start": "2770000",
    "end": "2775920"
  },
  {
    "text": "ask that other service what it means oh sorry i'm going to ask another service what it means almost like asking redis cash but let's",
    "start": "2775920",
    "end": "2783200"
  },
  {
    "text": "let's ignore that seriously that's what a reference token does it's called token introspection and the security people",
    "start": "2783200",
    "end": "2788960"
  },
  {
    "text": "love it because it gives you very good security properties like immediate revocability",
    "start": "2788960",
    "end": "2795599"
  },
  {
    "text": "hey if the user logs out well we revoke the reference token at the authorization server and it becomes invalid the user",
    "start": "2795599",
    "end": "2802560"
  },
  {
    "text": "wants to kill or terminate a session like immediately because of a breach you can revoke that reference token at the",
    "start": "2802560",
    "end": "2808480"
  },
  {
    "text": "authorization server and it goes away immediately awesome",
    "start": "2808480",
    "end": "2813440"
  },
  {
    "text": "security people are like yeah reference tokens developers dealing with performance are",
    "start": "2815359",
    "end": "2820960"
  },
  {
    "text": "like yeah i'm not so sure about that because every api request typically requires an",
    "start": "2820960",
    "end": "2826960"
  },
  {
    "text": "introspection call so that's a lot of traffic that's going on so what's the alternative that's the sexy alternative",
    "start": "2826960",
    "end": "2833359"
  },
  {
    "text": "the alternative here is self-contained tokens which is well oit uses very complex terms it's a fancy way of saying",
    "start": "2833359",
    "end": "2839440"
  },
  {
    "text": "it's a jot token json web token and a self-contained token contains all the information in the token it's signed you",
    "start": "2839440",
    "end": "2845520"
  },
  {
    "text": "send it to the api the api verifies the signature doesn't have to call on anyone to do that you can verify that",
    "start": "2845520",
    "end": "2850640"
  },
  {
    "text": "independently use the claims in the token to make an authorization",
    "start": "2850640",
    "end": "2855599"
  },
  {
    "text": "decision question that often follows from explanations like this is which one do we use",
    "start": "2856839",
    "end": "2862160"
  },
  {
    "text": "i don't know it depends it depends on what you're building and that's the takeaway here",
    "start": "2862160",
    "end": "2868640"
  },
  {
    "start": "2868000",
    "end": "3009000"
  },
  {
    "text": "you have to understand your requirements analyze your requirements because some people are just helped with",
    "start": "2868640",
    "end": "2875680"
  },
  {
    "text": "the jsession id seriously if you're building a springboot api it has built-in support for sessions you",
    "start": "2875680",
    "end": "2882079"
  },
  {
    "text": "can use that it deploys well in a simple environment for a few hundred or a few thousand",
    "start": "2882079",
    "end": "2887440"
  },
  {
    "text": "users it's gonna save you at least at least two days to a week of",
    "start": "2887440",
    "end": "2894400"
  },
  {
    "text": "investigation time implementation time to come up with an alternative it's secure it works well it's reliable and",
    "start": "2894400",
    "end": "2899760"
  },
  {
    "text": "it's absolutely awesome if you were in my workshop we have run lab sessions on an api-based application",
    "start": "2899760",
    "end": "2906319"
  },
  {
    "text": "and that application i built up myself uses server-side sessions because it's easy",
    "start": "2906319",
    "end": "2911440"
  },
  {
    "text": "and i typically don't have millions of users in my workshop because of physical room constraints",
    "start": "2911440",
    "end": "2916640"
  },
  {
    "text": "people want to come in the millions no that's not true but you kind of get the idea this is important by the way because",
    "start": "2916640",
    "end": "2923760"
  },
  {
    "text": "if you don't understand this if you're just following what everybody else is saying because that's what we do think in modern applications for no good",
    "start": "2923760",
    "end": "2930400"
  },
  {
    "text": "reason then you're going to make things more difficult for yourself without good reason that's essentially what i'm trying to say",
    "start": "2930400",
    "end": "2937200"
  },
  {
    "text": "but yeah that json web token that's probably what you're going to use i know that's what everybody else is using even with out there like jason webb tokens",
    "start": "2937359",
    "end": "2944240"
  },
  {
    "text": "that's better and in most cases it's not a not a bad idea to use them by the way in this image let me skip back for a second and",
    "start": "2944240",
    "end": "2950720"
  },
  {
    "text": "this image that token has less good security properties because you can't easily kill it if you want to",
    "start": "2950720",
    "end": "2956480"
  },
  {
    "text": "because it just lives out there there's no control over that token when it lifts that's why we keep the lifetime",
    "start": "2956480",
    "end": "2961920"
  },
  {
    "text": "short five to ten minutes is a good recommendation that reduces the window of abuse of that token in case something goes wrong",
    "start": "2961920",
    "end": "2968079"
  },
  {
    "text": "somebody steals it five minutes only so for most applications that would be acceptable for some applications that",
    "start": "2968079",
    "end": "2974720"
  },
  {
    "text": "would even that is unacceptable think about money stuff i probably don't want to want that token lying around for five",
    "start": "2974720",
    "end": "2980079"
  },
  {
    "text": "minutes if it gives access to money all right how do you handle that shot token",
    "start": "2980079",
    "end": "2985599"
  },
  {
    "text": "securely well if you wrote my talk yesterday you know that we're not going to be able to cover that in five minutes so i'm not gonna do that i wrote a very",
    "start": "2985599",
    "end": "2992640"
  },
  {
    "text": "in-depth blog post for uh for 42 crunch an api security company last december",
    "start": "2992640",
    "end": "2997839"
  },
  {
    "text": "and it's the blog post is just out there so you can go to that link and read all about shot security pitfalls and",
    "start": "2997839",
    "end": "3003520"
  },
  {
    "text": "recommendations to avoid that so go there and enjoy that article",
    "start": "3003520",
    "end": "3008559"
  },
  {
    "text": "take away here is follow jot security best current practices there's a whole spec on that there's an rfc that",
    "start": "3008559",
    "end": "3014000"
  },
  {
    "start": "3009000",
    "end": "3037000"
  },
  {
    "text": "contains the same information in maybe a less digestible format but it's a very useful",
    "start": "3014000",
    "end": "3019200"
  },
  {
    "text": "document nonetheless right a battery of tests to make sure your application handles jots securely if you",
    "start": "3019200",
    "end": "3025920"
  },
  {
    "text": "were here yesterday elk none test for that and make sure you handle jots securely",
    "start": "3025920",
    "end": "3033680"
  },
  {
    "text": "and that brings me to the last point what happens when pull goes wrong i have",
    "start": "3034079",
    "end": "3039760"
  },
  {
    "start": "3037000",
    "end": "3112000"
  },
  {
    "text": "to watch my language here well too often when something does go wrong when some",
    "start": "3039760",
    "end": "3046960"
  },
  {
    "text": "feature gets compromised when a breach happens the whole system comes crumbling down like a house of",
    "start": "3046960",
    "end": "3052839"
  },
  {
    "text": "cards that's not necessary that's",
    "start": "3052839",
    "end": "3058079"
  },
  {
    "text": "unfortunate and unfortunately very very common compartmentalize your applications",
    "start": "3058079",
    "end": "3064000"
  },
  {
    "text": "that's the takeaway here that's the final takeaway compartmentalize your apis split them up there's no reason to",
    "start": "3064000",
    "end": "3070160"
  },
  {
    "text": "have an authentication part of your api sit right next to all the other application features pull it out as a",
    "start": "3070160",
    "end": "3076480"
  },
  {
    "text": "separate service give it a separate data store shield it protect it because it's very sensitive",
    "start": "3076480",
    "end": "3083119"
  },
  {
    "text": "goes for the other things as well if you have an image processing service which is very untrustworthy it's very likely that something will go wrong there",
    "start": "3083119",
    "end": "3090559"
  },
  {
    "text": "put it aside in a separate service shield it on the network don't give it access to databases don't give it access",
    "start": "3090559",
    "end": "3096240"
  },
  {
    "text": "to data and maybe just as a precaution kill it like every day and boot it up again to",
    "start": "3096240",
    "end": "3101280"
  },
  {
    "text": "be sure who knows but compartmentalization will eventually save you if something goes",
    "start": "3101280",
    "end": "3106400"
  },
  {
    "text": "wrong and that's what we want to do in the end to make things more secure",
    "start": "3106400",
    "end": "3111839"
  },
  {
    "text": "all right now it's up to you i've done my part i told you what to do that's the fun part of my job i can just be like",
    "start": "3111839",
    "end": "3117280"
  },
  {
    "start": "3112000",
    "end": "3192000"
  },
  {
    "text": "that's what you got to do bye-bye so now it's up to you so i'll get your api authorization policy i can guarantee",
    "start": "3117280",
    "end": "3123839"
  },
  {
    "text": "you well probably on monday but i know how things go i can guarantee you that we will find something",
    "start": "3123839",
    "end": "3130480"
  },
  {
    "text": "almost guaranteed let me know about that it's always fun to hear that the stuff i'm doing is actually relevant so if you find",
    "start": "3130480",
    "end": "3136720"
  },
  {
    "text": "something just send me a message or shout out on twitter like yeah thank you we find a vulnerability right security",
    "start": "3136720",
    "end": "3142400"
  },
  {
    "text": "tests for jots make sure you handle them securely write that open api specification look into these tools that",
    "start": "3142400",
    "end": "3148160"
  },
  {
    "text": "use them and see how you can use them to systematically improve your security",
    "start": "3148160",
    "end": "3153839"
  },
  {
    "text": "all right if you want to learn more i have some online course content on api security os openly connect react",
    "start": "3153839",
    "end": "3159040"
  },
  {
    "text": "security and so on you can also hire me to come to your company i'll gladly talk for two days about security topics or",
    "start": "3159040",
    "end": "3164880"
  },
  {
    "text": "three or four if you want to but that's going to blow up your head and with that i want to thank you for being here enjoy the rest of the",
    "start": "3164880",
    "end": "3170960"
  },
  {
    "text": "conference here and if you have anything you want to talk about shout out me on twitter or linkedin or grab me here at",
    "start": "3170960",
    "end": "3176160"
  },
  {
    "text": "the conference all right thank you very much",
    "start": "3176160",
    "end": "3181000"
  }
]