[
  {
    "text": "it is september 20th 2022 and you're",
    "start": "1439",
    "end": "4160"
  },
  {
    "text": "watching the code report it's time to",
    "start": "4160",
    "end": "6240"
  },
  {
    "text": "reset the counter yet again it's been",
    "start": "6240",
    "end": "8160"
  },
  {
    "text": "zero days since a new javascript",
    "start": "8160",
    "end": "9840"
  },
  {
    "text": "framework has been released the highly",
    "start": "9840",
    "end": "11599"
  },
  {
    "text": "anticipated quick framework built by a",
    "start": "11599",
    "end": "13519"
  },
  {
    "text": "dream team of developers just hit beta",
    "start": "13519",
    "end": "15599"
  },
  {
    "text": "yesterday now before you go and change",
    "start": "15599",
    "end": "17199"
  },
  {
    "text": "the channel this isn't just another",
    "start": "17199",
    "end": "18720"
  },
  {
    "text": "average five inch framework it brings an",
    "start": "18720",
    "end": "20640"
  },
  {
    "text": "entirely new rendering paradigm to the",
    "start": "20640",
    "end": "22320"
  },
  {
    "text": "table called resumability which totally",
    "start": "22320",
    "end": "24480"
  },
  {
    "text": "eliminates the need for hydration the",
    "start": "24480",
    "end": "26240"
  },
  {
    "text": "technique used by almost every meta",
    "start": "26240",
    "end": "27920"
  },
  {
    "text": "framework today to make server rendered",
    "start": "27920",
    "end": "29599"
  },
  {
    "text": "websites fully interactive to understand",
    "start": "29599",
    "end": "31599"
  },
  {
    "text": "what makes quick special we first need",
    "start": "31599",
    "end": "33280"
  },
  {
    "text": "to understand the problem with the",
    "start": "33280",
    "end": "34480"
  },
  {
    "text": "current generation of frameworks the key",
    "start": "34480",
    "end": "36160"
  },
  {
    "text": "to a perfect lighthouse performance",
    "start": "36160",
    "end": "37680"
  },
  {
    "text": "score is to use less javascript google",
    "start": "37680",
    "end": "39920"
  },
  {
    "text": "did some science and found that making a",
    "start": "39920",
    "end": "41520"
  },
  {
    "text": "website 20 faster results in ten percent",
    "start": "41520",
    "end": "44079"
  },
  {
    "text": "more conversions if your website makes a",
    "start": "44079",
    "end": "46000"
  },
  {
    "text": "thousand dollars a year that could be",
    "start": "46000",
    "end": "47360"
  },
  {
    "text": "like ten dollars you're leaving on the",
    "start": "47360",
    "end": "48719"
  },
  {
    "text": "table the catch-22 of web development is",
    "start": "48719",
    "end": "50800"
  },
  {
    "text": "that in order to implement the features",
    "start": "50800",
    "end": "52239"
  },
  {
    "text": "your customers want you need more",
    "start": "52239",
    "end": "53760"
  },
  {
    "text": "javascript but in order to make your",
    "start": "53760",
    "end": "55440"
  },
  {
    "text": "site fast you need less javascript like",
    "start": "55440",
    "end": "57600"
  },
  {
    "text": "in next.js for example you start with",
    "start": "57600",
    "end": "59440"
  },
  {
    "text": "about 70 kilobytes of javascript out of",
    "start": "59440",
    "end": "61359"
  },
  {
    "text": "the gate thanks to react-dom you'll then",
    "start": "61359",
    "end": "63440"
  },
  {
    "text": "add at least a couple hundred more",
    "start": "63440",
    "end": "64799"
  },
  {
    "text": "kilobytes to that with your own",
    "start": "64799",
    "end": "66080"
  },
  {
    "text": "application code that will scale of",
    "start": "66080",
    "end": "68320"
  },
  {
    "text": "based on how much application code you",
    "start": "68320",
    "end": "69920"
  },
  {
    "text": "have on the page that's because on the",
    "start": "69920",
    "end": "71439"
  },
  {
    "text": "initial page load the framework needs to",
    "start": "71439",
    "end": "73280"
  },
  {
    "text": "hydrate the dom and rebuild or bootstrap",
    "start": "73280",
    "end": "75680"
  },
  {
    "text": "the entire component tree from the",
    "start": "75680",
    "end": "77119"
  },
  {
    "text": "ground up it's kind of like watching a",
    "start": "77119",
    "end": "78640"
  },
  {
    "text": "movie that can't be paused if you need",
    "start": "78640",
    "end": "80400"
  },
  {
    "text": "to restart the application by hitting",
    "start": "80400",
    "end": "82000"
  },
  {
    "text": "the refresh button in the browser it",
    "start": "82000",
    "end": "83600"
  },
  {
    "text": "needs to re-execute all the javascript",
    "start": "83600",
    "end": "85119"
  },
  {
    "text": "from the beginning to get back to where",
    "start": "85119",
    "end": "86799"
  },
  {
    "text": "it was refresh damp refresh damn",
    "start": "86799",
    "end": "89439"
  },
  {
    "text": "frameworks like astro have recognized",
    "start": "89439",
    "end": "91280"
  },
  {
    "text": "this problem which uses a technique",
    "start": "91280",
    "end": "93040"
  },
  {
    "text": "called partial hydration to selectively",
    "start": "93040",
    "end": "94960"
  },
  {
    "text": "hydrate the dom but quick cuts out",
    "start": "94960",
    "end": "96880"
  },
  {
    "text": "hydration altogether like it's just not",
    "start": "96880",
    "end": "98880"
  },
  {
    "text": "even necessary it delivers html that's",
    "start": "98880",
    "end": "101360"
  },
  {
    "text": "instantly interactive that means in",
    "start": "101360",
    "end": "102960"
  },
  {
    "text": "theory you should be able to achieve a",
    "start": "102960",
    "end": "104640"
  },
  {
    "text": "perfect lighthouse performance score no",
    "start": "104640",
    "end": "106399"
  },
  {
    "text": "matter how big and complex your",
    "start": "106399",
    "end": "107920"
  },
  {
    "text": "javascript code base is that sounds too",
    "start": "107920",
    "end": "110000"
  },
  {
    "text": "good to be true so how is it even",
    "start": "110000",
    "end": "111520"
  },
  {
    "text": "possible the key innovation here is that",
    "start": "111520",
    "end": "113520"
  },
  {
    "text": "a quick app can be fully serialized as",
    "start": "113520",
    "end": "115600"
  },
  {
    "text": "html in other words at any moment you",
    "start": "115600",
    "end": "118079"
  },
  {
    "text": "can hit the pause button and capture all",
    "start": "118079",
    "end": "120000"
  },
  {
    "text": "the data and closures in the application",
    "start": "120000",
    "end": "122320"
  },
  {
    "text": "and represent it all as an html string",
    "start": "122320",
    "end": "124719"
  },
  {
    "text": "that's huge for server-side rendering",
    "start": "124719",
    "end": "126479"
  },
  {
    "text": "because by the time that html gets to",
    "start": "126479",
    "end": "128160"
  },
  {
    "text": "the browser it can just pick up where",
    "start": "128160",
    "end": "129679"
  },
  {
    "text": "the server left off without needing to",
    "start": "129679",
    "end": "131440"
  },
  {
    "text": "execute any javascript at all and that's",
    "start": "131440",
    "end": "133360"
  },
  {
    "text": "why they coined the term resumability",
    "start": "133360",
    "end": "135040"
  },
  {
    "text": "now the other thing that makes this",
    "start": "135040",
    "end": "136080"
  },
  {
    "text": "magic possible is lazy loading which is",
    "start": "136080",
    "end": "138319"
  },
  {
    "text": "built in as a primitive part of the",
    "start": "138319",
    "end": "139920"
  },
  {
    "text": "framework to understand it let's look at",
    "start": "139920",
    "end": "141760"
  },
  {
    "text": "some code at first glance it looks like",
    "start": "141760",
    "end": "143440"
  },
  {
    "text": "a react app that uses functional",
    "start": "143440",
    "end": "145040"
  },
  {
    "text": "components and jsx but what's the deal",
    "start": "145040",
    "end": "147360"
  },
  {
    "text": "with this dollar sign it actually",
    "start": "147360",
    "end": "148879"
  },
  {
    "text": "represents a lazy loaded boundary and",
    "start": "148879",
    "end": "150879"
  },
  {
    "text": "what you'll find is that everything is",
    "start": "150879",
    "end": "152560"
  },
  {
    "text": "lazy loaded and that even includes",
    "start": "152560",
    "end": "154160"
  },
  {
    "text": "things like event handlers that close",
    "start": "154160",
    "end": "155920"
  },
  {
    "text": "over the state of the application that's",
    "start": "155920",
    "end": "157599"
  },
  {
    "text": "kind of crazy because how does this",
    "start": "157599",
    "end": "158959"
  },
  {
    "text": "chunk of javascript know the state of",
    "start": "158959",
    "end": "160319"
  },
  {
    "text": "the application if it's lazy loaded if",
    "start": "160319",
    "end": "162160"
  },
  {
    "text": "we look at the html we can see this",
    "start": "162160",
    "end": "163840"
  },
  {
    "text": "event handler is serialized directly",
    "start": "163840",
    "end": "165920"
  },
  {
    "text": "into the code now if we open the network",
    "start": "165920",
    "end": "167840"
  },
  {
    "text": "tab we'll find zero javascript on the",
    "start": "167840",
    "end": "170000"
  },
  {
    "text": "initial page load you'll notice that",
    "start": "170000",
    "end": "171599"
  },
  {
    "text": "that javascript is not actually loaded",
    "start": "171599",
    "end": "173680"
  },
  {
    "text": "until we click the button it contains",
    "start": "173680",
    "end": "175200"
  },
  {
    "text": "the code we want to execute and also has",
    "start": "175200",
    "end": "177360"
  },
  {
    "text": "access to the lexical environment to",
    "start": "177360",
    "end": "179280"
  },
  {
    "text": "update state that might be shared by",
    "start": "179280",
    "end": "181040"
  },
  {
    "text": "other components which itself comes from",
    "start": "181040",
    "end": "182800"
  },
  {
    "text": "another lazy loaded chunk the takeaway",
    "start": "182800",
    "end": "184720"
  },
  {
    "text": "here is that you don't actually need to",
    "start": "184720",
    "end": "186319"
  },
  {
    "text": "load any javascript until the user",
    "start": "186319",
    "end": "188319"
  },
  {
    "text": "interacts with the ui if we go ahead and",
    "start": "188319",
    "end": "190239"
  },
  {
    "text": "build the application which is powered",
    "start": "190239",
    "end": "191840"
  },
  {
    "text": "by veet you'll notice we get a ton of",
    "start": "191840",
    "end": "193519"
  },
  {
    "text": "tiny chunks less than one kilobyte each",
    "start": "193519",
    "end": "195599"
  },
  {
    "text": "instead of a single massive bundle and",
    "start": "195599",
    "end": "197440"
  },
  {
    "text": "because of that quick can scale",
    "start": "197440",
    "end": "198800"
  },
  {
    "text": "infinitely to as much javascript as your",
    "start": "198800",
    "end": "200800"
  },
  {
    "text": "heart desires",
    "start": "200800",
    "end": "202100"
  },
  {
    "text": "[Music]",
    "start": "202100",
    "end": "204640"
  },
  {
    "text": "that's enough",
    "start": "204640",
    "end": "207200"
  },
  {
    "text": "this has been the code report thanks for",
    "start": "207440",
    "end": "209120"
  },
  {
    "text": "watching and i will see you in the next",
    "start": "209120",
    "end": "211040"
  },
  {
    "text": "one",
    "start": "211040",
    "end": "213840"
  }
]