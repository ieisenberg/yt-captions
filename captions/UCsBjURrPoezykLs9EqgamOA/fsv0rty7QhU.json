[
  {
    "start": "0",
    "end": "87000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "4670"
  },
  {
    "text": "today we'll start from zero and finish",
    "start": "6170",
    "end": "8730"
  },
  {
    "text": "the video with our own custom machine",
    "start": "8730",
    "end": "10290"
  },
  {
    "text": "learning model deployed to the cloud as",
    "start": "10290",
    "end": "12179"
  },
  {
    "text": "an API we will pull some actual user",
    "start": "12179",
    "end": "14549"
  },
  {
    "text": "data that we have saved in the firestore",
    "start": "14549",
    "end": "16289"
  },
  {
    "text": "database then we'll export it to data",
    "start": "16289",
    "end": "18119"
  },
  {
    "text": "lab so we can train a Python based",
    "start": "18119",
    "end": "20130"
  },
  {
    "text": "machine learning model with virtually",
    "start": "20130",
    "end": "21930"
  },
  {
    "text": "unlimited compute resources once we have",
    "start": "21930",
    "end": "24330"
  },
  {
    "text": "a solid model in place we'll deploy it",
    "start": "24330",
    "end": "26099"
  },
  {
    "text": "to ml engine so we can version it and",
    "start": "26099",
    "end": "28349"
  },
  {
    "text": "analyze it in production and finally we",
    "start": "28349",
    "end": "30929"
  },
  {
    "text": "will expose it to the universe by making",
    "start": "30929",
    "end": "32820"
  },
  {
    "text": "it available in a firebase cloud",
    "start": "32820",
    "end": "34440"
  },
  {
    "text": "function but before you that make sure",
    "start": "34440",
    "end": "36390"
  },
  {
    "text": "to LIKE and subscribe and I'll be giving",
    "start": "36390",
    "end": "38190"
  },
  {
    "text": "away this one-of-a-kind Python brain",
    "start": "38190",
    "end": "39780"
  },
  {
    "text": "t-shirt all you have to do is leave a",
    "start": "39780",
    "end": "41190"
  },
  {
    "text": "comment below then we'll pick a random",
    "start": "41190",
    "end": "42690"
  },
  {
    "text": "winner via livestream next week this",
    "start": "42690",
    "end": "45030"
  },
  {
    "text": "video was made in collaboration with",
    "start": "45030",
    "end": "46440"
  },
  {
    "text": "Roddy Chilika who is get this only in",
    "start": "46440",
    "end": "49230"
  },
  {
    "text": "the seventh grade and already doing",
    "start": "49230",
    "end": "50760"
  },
  {
    "text": "crazy stuff with tensorflow firebase and",
    "start": "50760",
    "end": "53070"
  },
  {
    "text": "a bunch of other tech in addition to",
    "start": "53070",
    "end": "54750"
  },
  {
    "text": "this video you'll also want to check out",
    "start": "54750",
    "end": "56280"
  },
  {
    "text": "his github repo that shows you how to",
    "start": "56280",
    "end": "58050"
  },
  {
    "text": "train a tensor flow model directly in a",
    "start": "58050",
    "end": "60390"
  },
  {
    "text": "cloud function now we're ready to get",
    "start": "60390",
    "end": "62190"
  },
  {
    "text": "started and we'll do something that",
    "start": "62190",
    "end": "63719"
  },
  {
    "text": "we've never done on this channel before",
    "start": "63719",
    "end": "64890"
  },
  {
    "text": "and that's right Python code Python is",
    "start": "64890",
    "end": "67560"
  },
  {
    "text": "the most commonly used language for",
    "start": "67560",
    "end": "69030"
  },
  {
    "text": "machine learning problems and it's",
    "start": "69030",
    "end": "70560"
  },
  {
    "text": "pretty easy to learn if you already know",
    "start": "70560",
    "end": "71880"
  },
  {
    "text": "JavaScript if you want to get inspired",
    "start": "71880",
    "end": "73409"
  },
  {
    "text": "by Python head over to Kaggle and check",
    "start": "73409",
    "end": "75600"
  },
  {
    "text": "out some of the amazing work done by a",
    "start": "75600",
    "end": "77130"
  },
  {
    "text": "real data scientist in today's video",
    "start": "77130",
    "end": "79320"
  },
  {
    "text": "you'll learn not only how to build and",
    "start": "79320",
    "end": "81030"
  },
  {
    "text": "train a machine learning model but also",
    "start": "81030",
    "end": "82710"
  },
  {
    "text": "how to deploy it to the cloud as a real",
    "start": "82710",
    "end": "84900"
  },
  {
    "text": "product that people can use the first",
    "start": "84900",
    "end": "88229"
  },
  {
    "start": "87000",
    "end": "139000"
  },
  {
    "text": "step in any machine learning problem is",
    "start": "88229",
    "end": "90030"
  },
  {
    "text": "the underlying data a practical use case",
    "start": "90030",
    "end": "92850"
  },
  {
    "text": "for a firebase developer would be to",
    "start": "92850",
    "end": "94619"
  },
  {
    "text": "save some information about a user in",
    "start": "94619",
    "end": "96360"
  },
  {
    "text": "the firestore database then train that",
    "start": "96360",
    "end": "98369"
  },
  {
    "text": "data to build a predictive model that",
    "start": "98369",
    "end": "99990"
  },
  {
    "text": "adds some value to the user experience",
    "start": "99990",
    "end": "101610"
  },
  {
    "text": "if we look in our database you can see",
    "start": "101610",
    "end": "103890"
  },
  {
    "text": "here we have a collection of developer",
    "start": "103890",
    "end": "105630"
  },
  {
    "text": "records and each one will tell us what",
    "start": "105630",
    "end": "107549"
  },
  {
    "text": "tools this developer uses and their",
    "start": "107549",
    "end": "109680"
  },
  {
    "text": "overall happiness as a developer this is",
    "start": "109680",
    "end": "112170"
  },
  {
    "text": "just synthetic data that I generated for",
    "start": "112170",
    "end": "114090"
  },
  {
    "text": "this demo but you can think of it as",
    "start": "114090",
    "end": "115470"
  },
  {
    "text": "being information that you might collect",
    "start": "115470",
    "end": "116939"
  },
  {
    "text": "from a user survey or something along",
    "start": "116939",
    "end": "118799"
  },
  {
    "text": "those lines machine learning problems",
    "start": "118799",
    "end": "120600"
  },
  {
    "text": "generally require a huge amount of data",
    "start": "120600",
    "end": "122340"
  },
  {
    "text": "and also a huge amount of compute",
    "start": "122340",
    "end": "124259"
  },
  {
    "text": "resources to run operations on that data",
    "start": "124259",
    "end": "126570"
  },
  {
    "text": "we're going to use a service on GCP",
    "start": "126570",
    "end": "128849"
  },
  {
    "text": "called data lab it allows us to stream",
    "start": "128849",
    "end": "131099"
  },
  {
    "text": "and process our data in the cloud which",
    "start": "131099",
    "end": "133410"
  },
  {
    "text": "means you can",
    "start": "133410",
    "end": "134069"
  },
  {
    "text": "spin up a GPU powered supercomputer from",
    "start": "134069",
    "end": "136439"
  },
  {
    "text": "your laptop and then just shut it off",
    "start": "136439",
    "end": "138299"
  },
  {
    "text": "when you're done to get going with data",
    "start": "138299",
    "end": "140459"
  },
  {
    "start": "139000",
    "end": "164000"
  },
  {
    "text": "lab you'll need to have a firebase or",
    "start": "140459",
    "end": "142109"
  },
  {
    "text": "GCP project and then we have a couple of",
    "start": "142109",
    "end": "144389"
  },
  {
    "text": "things to run here from the command-line",
    "start": "144389",
    "end": "146359"
  },
  {
    "text": "basically you're just installing data",
    "start": "146359",
    "end": "148290"
  },
  {
    "text": "lab and then calling data lab create",
    "start": "148290",
    "end": "150150"
  },
  {
    "text": "with the name that you want to give it",
    "start": "150150",
    "end": "151500"
  },
  {
    "text": "what this does is give you an",
    "start": "151500",
    "end": "153239"
  },
  {
    "text": "interactive Python or Jupiter notebook",
    "start": "153239",
    "end": "155519"
  },
  {
    "text": "in the cloud that you can use to run",
    "start": "155519",
    "end": "157409"
  },
  {
    "text": "Python code and you can allocate as much",
    "start": "157409",
    "end": "160019"
  },
  {
    "text": "CPU or memory that you need and also",
    "start": "160019",
    "end": "162150"
  },
  {
    "text": "attach GPUs to it the nice thing about",
    "start": "162150",
    "end": "165090"
  },
  {
    "start": "164000",
    "end": "203000"
  },
  {
    "text": "this notebook is that it's tightly",
    "start": "165090",
    "end": "166560"
  },
  {
    "text": "integrated with all of your other GCP",
    "start": "166560",
    "end": "168450"
  },
  {
    "text": "resources such as storage buckets",
    "start": "168450",
    "end": "170459"
  },
  {
    "text": "bigquery and everything else",
    "start": "170459",
    "end": "172409"
  },
  {
    "text": "it should give you a link to localhost",
    "start": "172409",
    "end": "174239"
  },
  {
    "text": "that will show a notebook that looks",
    "start": "174239",
    "end": "175980"
  },
  {
    "text": "like this the first thing I'm going to",
    "start": "175980",
    "end": "178199"
  },
  {
    "text": "do is install firebase admin by running",
    "start": "178199",
    "end": "180449"
  },
  {
    "text": "exclamation pip install firebase admin",
    "start": "180449",
    "end": "183180"
  },
  {
    "text": "now if you're not familiar with Jupiter",
    "start": "183180",
    "end": "185280"
  },
  {
    "text": "notebooks they're basically just a nice",
    "start": "185280",
    "end": "186989"
  },
  {
    "text": "UI for executing Python code we can put",
    "start": "186989",
    "end": "189810"
  },
  {
    "text": "each code block in its own cell and then",
    "start": "189810",
    "end": "191760"
  },
  {
    "text": "execute those one by one by clicking the",
    "start": "191760",
    "end": "193709"
  },
  {
    "text": "play button you'll notice that there are",
    "start": "193709",
    "end": "195719"
  },
  {
    "text": "a ton of examples in the data lab",
    "start": "195719",
    "end": "197159"
  },
  {
    "text": "environment so definitely check those",
    "start": "197159",
    "end": "198900"
  },
  {
    "text": "out especially if you're not super",
    "start": "198900",
    "end": "200280"
  },
  {
    "text": "comfortable with Python then notebook",
    "start": "200280",
    "end": "202019"
  },
  {
    "text": "we're building today does four main",
    "start": "202019",
    "end": "203400"
  },
  {
    "start": "203000",
    "end": "273000"
  },
  {
    "text": "things first it brings in our data from",
    "start": "203400",
    "end": "205229"
  },
  {
    "text": "fire store then we do an exploratory",
    "start": "205229",
    "end": "207209"
  },
  {
    "text": "data analysis then we split the data up",
    "start": "207209",
    "end": "209669"
  },
  {
    "text": "and train an algorithm and then finally",
    "start": "209669",
    "end": "212129"
  },
  {
    "text": "export it to a cloud storage bucket",
    "start": "212129",
    "end": "214129"
  },
  {
    "text": "first we'll need access to fire store so",
    "start": "214129",
    "end": "217079"
  },
  {
    "text": "we'll go into the firebase project",
    "start": "217079",
    "end": "218609"
  },
  {
    "text": "settings and generate a new private key",
    "start": "218609",
    "end": "220680"
  },
  {
    "text": "that will give you a JSON file that you",
    "start": "220680",
    "end": "222900"
  },
  {
    "text": "can save in the root of the data lab",
    "start": "222900",
    "end": "224689"
  },
  {
    "text": "there are two dependencies that you'll",
    "start": "224689",
    "end": "227009"
  },
  {
    "text": "see commonly in machine learning",
    "start": "227009",
    "end": "228209"
  },
  {
    "text": "problems one is pandas which allows us",
    "start": "228209",
    "end": "230639"
  },
  {
    "text": "to put data in a data frame and the",
    "start": "230639",
    "end": "233099"
  },
  {
    "text": "second one is numpy which helps us make",
    "start": "233099",
    "end": "235109"
  },
  {
    "text": "scientific calculations on arrays what",
    "start": "235109",
    "end": "238079"
  },
  {
    "text": "we'll be doing in just a second here is",
    "start": "238079",
    "end": "239519"
  },
  {
    "text": "taking our fire stored data and putting",
    "start": "239519",
    "end": "241349"
  },
  {
    "text": "it into a panda's data frame and numpy",
    "start": "241349",
    "end": "244199"
  },
  {
    "text": "will help us generate some random",
    "start": "244199",
    "end": "245549"
  },
  {
    "text": "synthetic data that we can use for this",
    "start": "245549",
    "end": "247530"
  },
  {
    "text": "demo from there we have a library called",
    "start": "247530",
    "end": "249449"
  },
  {
    "text": "pi plot that will help us generate some",
    "start": "249449",
    "end": "251219"
  },
  {
    "text": "charts then we'll import firebase admin",
    "start": "251219",
    "end": "253590"
  },
  {
    "text": "and initialize it with our credentials",
    "start": "253590",
    "end": "255299"
  },
  {
    "text": "the process is basically identical to",
    "start": "255299",
    "end": "257880"
  },
  {
    "text": "node J s or any other language for that",
    "start": "257880",
    "end": "260099"
  },
  {
    "text": "matter this next part shows how I",
    "start": "260099",
    "end": "262229"
  },
  {
    "text": "generated the synthetic data and I'm not",
    "start": "262229",
    "end": "264210"
  },
  {
    "text": "going to go through it line by line but",
    "start": "264210",
    "end": "265680"
  },
  {
    "text": "just explain what's going on at a",
    "start": "265680",
    "end": "267150"
  },
  {
    "text": "highway",
    "start": "267150",
    "end": "267900"
  },
  {
    "text": "almost all machine learning problems",
    "start": "267900",
    "end": "269910"
  },
  {
    "text": "boil down to finding a signal that's",
    "start": "269910",
    "end": "271980"
  },
  {
    "text": "hidden within some noise so the data",
    "start": "271980",
    "end": "274350"
  },
  {
    "start": "273000",
    "end": "301000"
  },
  {
    "text": "I've generated below is slightly random",
    "start": "274350",
    "end": "276630"
  },
  {
    "text": "but also has some structure to it as",
    "start": "276630",
    "end": "278520"
  },
  {
    "text": "well the value that we're trying to",
    "start": "278520",
    "end": "280440"
  },
  {
    "text": "predict is developer happiness",
    "start": "280440",
    "end": "282150"
  },
  {
    "text": "so I started by giving every user a",
    "start": "282150",
    "end": "283920"
  },
  {
    "text": "random happiness between negative 25 and",
    "start": "283920",
    "end": "286650"
  },
  {
    "text": "25 then I have a dictionary with 6",
    "start": "286650",
    "end": "289680"
  },
  {
    "text": "different programming languages in it",
    "start": "289680",
    "end": "291090"
  },
  {
    "text": "each one that will give the developer a",
    "start": "291090",
    "end": "293040"
  },
  {
    "text": "different level of happiness and I also",
    "start": "293040",
    "end": "295470"
  },
  {
    "text": "gave each developer a value of firebase",
    "start": "295470",
    "end": "297570"
  },
  {
    "text": "which when true makes the developer much",
    "start": "297570",
    "end": "299580"
  },
  {
    "text": "happier than when false but the general",
    "start": "299580",
    "end": "302460"
  },
  {
    "start": "301000",
    "end": "318000"
  },
  {
    "text": "idea here is that the data is partially",
    "start": "302460",
    "end": "304470"
  },
  {
    "text": "random and partially fixed our goal is",
    "start": "304470",
    "end": "307230"
  },
  {
    "text": "to create an algorithm that can detect",
    "start": "307230",
    "end": "309030"
  },
  {
    "text": "which features are important and which",
    "start": "309030",
    "end": "310710"
  },
  {
    "text": "aren't",
    "start": "310710",
    "end": "311160"
  },
  {
    "text": "in this example firebase should be the",
    "start": "311160",
    "end": "313140"
  },
  {
    "text": "most important followed by programming",
    "start": "313140",
    "end": "314850"
  },
  {
    "text": "language and an age shouldn't be",
    "start": "314850",
    "end": "316680"
  },
  {
    "text": "important at all if you have your own",
    "start": "316680",
    "end": "319110"
  },
  {
    "start": "318000",
    "end": "404000"
  },
  {
    "text": "data in fire store you can just skip",
    "start": "319110",
    "end": "320670"
  },
  {
    "text": "this step and then in the next cell I",
    "start": "320670",
    "end": "322650"
  },
  {
    "text": "will actually retrieve that data from",
    "start": "322650",
    "end": "324210"
  },
  {
    "text": "the database and then save it to a CSV",
    "start": "324210",
    "end": "326130"
  },
  {
    "text": "file so we don't have to reread it each",
    "start": "326130",
    "end": "328380"
  },
  {
    "text": "time and get charged for additional",
    "start": "328380",
    "end": "329970"
  },
  {
    "text": "reads in fire store conveniently pandas",
    "start": "329970",
    "end": "332760"
  },
  {
    "text": "has a to CSV method that we can use to",
    "start": "332760",
    "end": "334950"
  },
  {
    "text": "just quickly save our data to a CSV file",
    "start": "334950",
    "end": "337610"
  },
  {
    "text": "so now if we come back to our notebook",
    "start": "337610",
    "end": "339900"
  },
  {
    "text": "we can just run pandas read CSV and then",
    "start": "339900",
    "end": "343200"
  },
  {
    "text": "the first thing I'll do is just sample",
    "start": "343200",
    "end": "344430"
  },
  {
    "text": "10 items from that data frame to see",
    "start": "344430",
    "end": "346680"
  },
  {
    "text": "what the data looks like machine",
    "start": "346680",
    "end": "348840"
  },
  {
    "text": "learning is not magic and the first",
    "start": "348840",
    "end": "350640"
  },
  {
    "text": "thing you should do once you have your",
    "start": "350640",
    "end": "351900"
  },
  {
    "text": "data is run an exploratory analysis the",
    "start": "351900",
    "end": "355080"
  },
  {
    "text": "idea is to uncover some signals here",
    "start": "355080",
    "end": "357150"
  },
  {
    "text": "that you can use to nudge your algorithm",
    "start": "357150",
    "end": "359100"
  },
  {
    "text": "in the right direction and the reason we",
    "start": "359100",
    "end": "361230"
  },
  {
    "text": "put our data in a panda's data frame is",
    "start": "361230",
    "end": "363240"
  },
  {
    "text": "because it gives us a pull bunch of",
    "start": "363240",
    "end": "364770"
  },
  {
    "text": "methods to help analyze and also clean",
    "start": "364770",
    "end": "367020"
  },
  {
    "text": "the data before it goes into an",
    "start": "367020",
    "end": "368520"
  },
  {
    "text": "algorithm so here we're running data",
    "start": "368520",
    "end": "371130"
  },
  {
    "text": "frame sample to just get ten random rows",
    "start": "371130",
    "end": "373410"
  },
  {
    "text": "out of the data set and a data frame is",
    "start": "373410",
    "end": "376230"
  },
  {
    "text": "treated very much like an array you can",
    "start": "376230",
    "end": "377880"
  },
  {
    "text": "see here that I'm doing data frame with",
    "start": "377880",
    "end": "379710"
  },
  {
    "text": "the happiness key on there and then I'm",
    "start": "379710",
    "end": "381750"
  },
  {
    "text": "gonna run plot histogram to give us a",
    "start": "381750",
    "end": "383970"
  },
  {
    "text": "visual idea of what the actual label",
    "start": "383970",
    "end": "386040"
  },
  {
    "text": "looks like so you can see here we have a",
    "start": "386040",
    "end": "388530"
  },
  {
    "text": "pretty normal distribution of happiness",
    "start": "388530",
    "end": "390750"
  },
  {
    "text": "values and this is what we want our",
    "start": "390750",
    "end": "392400"
  },
  {
    "text": "algorithm to be able to predict based on",
    "start": "392400",
    "end": "394410"
  },
  {
    "text": "the other features in the data another",
    "start": "394410",
    "end": "396690"
  },
  {
    "text": "thing you can do is run data frame",
    "start": "396690",
    "end": "398130"
  },
  {
    "text": "describe to get common statistics on the",
    "start": "398130",
    "end": "400410"
  },
  {
    "text": "data set such",
    "start": "400410",
    "end": "401340"
  },
  {
    "text": "the mean standard deviation and things",
    "start": "401340",
    "end": "403410"
  },
  {
    "text": "like that so now that we've explored our",
    "start": "403410",
    "end": "405480"
  },
  {
    "start": "404000",
    "end": "421000"
  },
  {
    "text": "data it's time to introduce a new",
    "start": "405480",
    "end": "407220"
  },
  {
    "text": "library called scikit-learn you've",
    "start": "407220",
    "end": "409440"
  },
  {
    "text": "probably heard a lot of hype surrounding",
    "start": "409440",
    "end": "410580"
  },
  {
    "text": "tensorflow and deep neural networks and",
    "start": "410580",
    "end": "412949"
  },
  {
    "text": "those tools are great but they're often",
    "start": "412949",
    "end": "414810"
  },
  {
    "text": "overkill for a lot of problems",
    "start": "414810",
    "end": "416550"
  },
  {
    "text": "scikit-learn contains a huge collection",
    "start": "416550",
    "end": "418770"
  },
  {
    "text": "of tools for tackling machine learning",
    "start": "418770",
    "end": "420750"
  },
  {
    "text": "problems the first thing we'll do is use",
    "start": "420750",
    "end": "423030"
  },
  {
    "start": "421000",
    "end": "499000"
  },
  {
    "text": "it to clean our data to make sure that",
    "start": "423030",
    "end": "425160"
  },
  {
    "text": "all the values are numeric which is",
    "start": "425160",
    "end": "426810"
  },
  {
    "text": "required for most machine learning",
    "start": "426810",
    "end": "428340"
  },
  {
    "text": "algorithms currently you'll notice that",
    "start": "428340",
    "end": "430650"
  },
  {
    "text": "our programming language value is a",
    "start": "430650",
    "end": "432419"
  },
  {
    "text": "string value so what we need to do is",
    "start": "432419",
    "end": "434520"
  },
  {
    "text": "get all of the unique elements in that",
    "start": "434520",
    "end": "436200"
  },
  {
    "text": "array and convert them to a number then",
    "start": "436200",
    "end": "438840"
  },
  {
    "text": "assign each value to the corresponding",
    "start": "438840",
    "end": "440880"
  },
  {
    "text": "number we can do this easily with",
    "start": "440880",
    "end": "442380"
  },
  {
    "text": "scikit-learn by creating a label encoder",
    "start": "442380",
    "end": "444570"
  },
  {
    "text": "and then having it fit transform that",
    "start": "444570",
    "end": "446669"
  },
  {
    "text": "column to the numeric classes if we",
    "start": "446669",
    "end": "449820"
  },
  {
    "text": "sample the data frame again you'll see",
    "start": "449820",
    "end": "451410"
  },
  {
    "text": "that our language column is now numeric",
    "start": "451410",
    "end": "453570"
  },
  {
    "text": "and no longer a string the next thing",
    "start": "453570",
    "end": "455789"
  },
  {
    "text": "scikit-learn will help us with is",
    "start": "455789",
    "end": "457410"
  },
  {
    "text": "slicing the data into different chunks",
    "start": "457410",
    "end": "459300"
  },
  {
    "text": "that we can use to train an algorithm",
    "start": "459300",
    "end": "461340"
  },
  {
    "text": "we'll define a new variable named X",
    "start": "461340",
    "end": "463770"
  },
  {
    "text": "which is all of our features and the",
    "start": "463770",
    "end": "465690"
  },
  {
    "text": "data - the one we're trying to predict",
    "start": "465690",
    "end": "467639"
  },
  {
    "text": "which is happiness then we'll define y",
    "start": "467639",
    "end": "469950"
  },
  {
    "text": "as the variable that we are trying to",
    "start": "469950",
    "end": "471930"
  },
  {
    "text": "predict now we need to separate these",
    "start": "471930",
    "end": "474479"
  },
  {
    "text": "into sets for training and then another",
    "start": "474479",
    "end": "476789"
  },
  {
    "text": "one for testing or validation so I'm",
    "start": "476789",
    "end": "479940"
  },
  {
    "text": "using this train test split method",
    "start": "479940",
    "end": "481680"
  },
  {
    "text": "passing it our X Y values and in making",
    "start": "481680",
    "end": "484260"
  },
  {
    "text": "the test size be one third of the total",
    "start": "484260",
    "end": "486539"
  },
  {
    "text": "data set size which means we'll be",
    "start": "486539",
    "end": "488460"
  },
  {
    "text": "training on 66% of the data the reason",
    "start": "488460",
    "end": "491849"
  },
  {
    "text": "you don't train all the data is because",
    "start": "491849",
    "end": "493380"
  },
  {
    "text": "then you have no way to validate whether",
    "start": "493380",
    "end": "494820"
  },
  {
    "text": "or not the model is any good and you",
    "start": "494820",
    "end": "496440"
  },
  {
    "text": "want a model that can kind of generalize",
    "start": "496440",
    "end": "498150"
  },
  {
    "text": "the overall data set so now we're going",
    "start": "498150",
    "end": "500760"
  },
  {
    "start": "499000",
    "end": "517000"
  },
  {
    "text": "to train an algorithm that's usually",
    "start": "500760",
    "end": "502620"
  },
  {
    "text": "very good out of the box which is a",
    "start": "502620",
    "end": "504210"
  },
  {
    "text": "random forest in our case we have a",
    "start": "504210",
    "end": "506820"
  },
  {
    "text": "value between negative 100 and positive",
    "start": "506820",
    "end": "509220"
  },
  {
    "text": "100 and the predicted value can be",
    "start": "509220",
    "end": "511320"
  },
  {
    "text": "anything in between there so we have an",
    "start": "511320",
    "end": "513150"
  },
  {
    "text": "infinite number of possible predictions",
    "start": "513150",
    "end": "514950"
  },
  {
    "text": "which means we're dealing with a",
    "start": "514950",
    "end": "516180"
  },
  {
    "text": "regression problem this differs from a",
    "start": "516180",
    "end": "518640"
  },
  {
    "text": "classification problem where you might",
    "start": "518640",
    "end": "520320"
  },
  {
    "text": "be predicting different labels like",
    "start": "520320",
    "end": "521880"
  },
  {
    "text": "whether or not a picture is a dog or a",
    "start": "521880",
    "end": "523680"
  },
  {
    "text": "cat the code in this last cell is very",
    "start": "523680",
    "end": "526170"
  },
  {
    "text": "simple we just have the random forest",
    "start": "526170",
    "end": "527970"
  },
  {
    "text": "regressor which we fit to our X&Y data",
    "start": "527970",
    "end": "530579"
  },
  {
    "text": "and then we predict on the features in",
    "start": "530579",
    "end": "533339"
  },
  {
    "text": "the test set of that",
    "start": "533339",
    "end": "534730"
  },
  {
    "text": "there are a bunch of different options",
    "start": "534730",
    "end": "536800"
  },
  {
    "text": "you can pass to the regressor to try to",
    "start": "536800",
    "end": "538510"
  },
  {
    "text": "fine-tune it",
    "start": "538510",
    "end": "539320"
  },
  {
    "text": "that's called hyper parameter tuning and",
    "start": "539320",
    "end": "541150"
  },
  {
    "text": "then you need to have a metric to",
    "start": "541150",
    "end": "543010"
  },
  {
    "text": "analyze its performance in this case",
    "start": "543010",
    "end": "544990"
  },
  {
    "text": "we're going to use mean absolute error",
    "start": "544990",
    "end": "546880"
  },
  {
    "text": "which means that our random forest model",
    "start": "546880",
    "end": "548920"
  },
  {
    "text": "is about 18 points wrong on average so",
    "start": "548920",
    "end": "552460"
  },
  {
    "text": "how good is that exactly well the best",
    "start": "552460",
    "end": "554590"
  },
  {
    "text": "place to start is just by comparing it",
    "start": "554590",
    "end": "556360"
  },
  {
    "text": "to a random set of predictions in the",
    "start": "556360",
    "end": "558670"
  },
  {
    "text": "next cell we can see that completely",
    "start": "558670",
    "end": "560200"
  },
  {
    "text": "random predictions produce a mean",
    "start": "560200",
    "end": "562240"
  },
  {
    "text": "absolute error of about 56 which means",
    "start": "562240",
    "end": "564580"
  },
  {
    "text": "that our algorithm is relatively",
    "start": "564580",
    "end": "566140"
  },
  {
    "text": "effective now the last thing we want to",
    "start": "566140",
    "end": "568240"
  },
  {
    "text": "do is figure out which features and the",
    "start": "568240",
    "end": "570070"
  },
  {
    "text": "data were most important in the",
    "start": "570070",
    "end": "571750"
  },
  {
    "text": "decision-making process as you can see",
    "start": "571750",
    "end": "574120"
  },
  {
    "text": "here the age was not important at all",
    "start": "574120",
    "end": "575830"
  },
  {
    "text": "because it was completely random and",
    "start": "575830",
    "end": "577450"
  },
  {
    "text": "then firebase and programming languages",
    "start": "577450",
    "end": "579490"
  },
  {
    "text": "were the most important so at this point",
    "start": "579490",
    "end": "582010"
  },
  {
    "text": "we have a predictive model but we have",
    "start": "582010",
    "end": "583870"
  },
  {
    "text": "no way for anybody to use it if you're",
    "start": "583870",
    "end": "586180"
  },
  {
    "text": "building a product you most likely want",
    "start": "586180",
    "end": "587800"
  },
  {
    "text": "to serve that up as an API so it can be",
    "start": "587800",
    "end": "589870"
  },
  {
    "text": "consumed by some kind of front-end",
    "start": "589870",
    "end": "591250"
  },
  {
    "text": "application like angular or iOS or",
    "start": "591250",
    "end": "593890"
  },
  {
    "text": "whatever and that's where ml engine",
    "start": "593890",
    "end": "596170"
  },
  {
    "text": "comes in the last cell in the notebook",
    "start": "596170",
    "end": "598270"
  },
  {
    "text": "that you're looking at here is taking",
    "start": "598270",
    "end": "599890"
  },
  {
    "text": "the model that we just trained dumping",
    "start": "599890",
    "end": "601810"
  },
  {
    "text": "it as a job load file and then saving it",
    "start": "601810",
    "end": "604150"
  },
  {
    "text": "in our firebase storage bucket and",
    "start": "604150",
    "end": "605980"
  },
  {
    "text": "they'll engine will be able to read the",
    "start": "605980",
    "end": "607960"
  },
  {
    "text": "model file in the bucket and then serve",
    "start": "607960",
    "end": "609970"
  },
  {
    "text": "out predictions in a highly performant",
    "start": "609970",
    "end": "611710"
  },
  {
    "text": "way with predictions being served over",
    "start": "611710",
    "end": "613540"
  },
  {
    "text": "the network in just a matter of a few",
    "start": "613540",
    "end": "615430"
  },
  {
    "text": "hundred milliseconds so before we head",
    "start": "615430",
    "end": "617710"
  },
  {
    "start": "616000",
    "end": "683000"
  },
  {
    "text": "over to ml engine go into your firebase",
    "start": "617710",
    "end": "619870"
  },
  {
    "text": "storage bucket and make sure that you",
    "start": "619870",
    "end": "621460"
  },
  {
    "text": "have your job load file saved in its own",
    "start": "621460",
    "end": "623560"
  },
  {
    "text": "individual folder from there you'll want",
    "start": "623560",
    "end": "626050"
  },
  {
    "text": "to go back to the GCP console and then",
    "start": "626050",
    "end": "628540"
  },
  {
    "text": "go to enable api's you'll need to enable",
    "start": "628540",
    "end": "631240"
  },
  {
    "text": "the cloud build API because your models",
    "start": "631240",
    "end": "633250"
  },
  {
    "text": "will actually be versioned and of course",
    "start": "633250",
    "end": "635440"
  },
  {
    "text": "we'll need the ml engine API as well",
    "start": "635440",
    "end": "637620"
  },
  {
    "text": "from there you can navigate over to the",
    "start": "637620",
    "end": "640150"
  },
  {
    "text": "cloud ml engine dashboard and the first",
    "start": "640150",
    "end": "642580"
  },
  {
    "text": "thing I want to do is create a model and",
    "start": "642580",
    "end": "644170"
  },
  {
    "text": "give that model a name you'll need this",
    "start": "644170",
    "end": "645970"
  },
  {
    "text": "name later when we get to the cloud",
    "start": "645970",
    "end": "647350"
  },
  {
    "text": "function the great thing about this",
    "start": "647350",
    "end": "649750"
  },
  {
    "text": "system is that your models can have",
    "start": "649750",
    "end": "651400"
  },
  {
    "text": "multiple versions so you can see how",
    "start": "651400",
    "end": "653140"
  },
  {
    "text": "their performance changes over time it's",
    "start": "653140",
    "end": "655660"
  },
  {
    "text": "important that you fill out things",
    "start": "655660",
    "end": "656740"
  },
  {
    "text": "correctly here like our Python version",
    "start": "656740",
    "end": "658780"
  },
  {
    "text": "as 2.7 in the environment and we're",
    "start": "658780",
    "end": "661000"
  },
  {
    "text": "using the scikit-learn framework and the",
    "start": "661000",
    "end": "663940"
  },
  {
    "text": "version is 19 and the runtime version is",
    "start": "663940",
    "end": "666640"
  },
  {
    "text": "1.9",
    "start": "666640",
    "end": "667610"
  },
  {
    "text": "from there you'll need to select the",
    "start": "667610",
    "end": "669680"
  },
  {
    "text": "folder that has this model in it which",
    "start": "669680",
    "end": "671390"
  },
  {
    "text": "is that job would file that we saved",
    "start": "671390",
    "end": "673220"
  },
  {
    "text": "earlier it'll take a few minutes to save",
    "start": "673220",
    "end": "675680"
  },
  {
    "text": "but once that's done you'll be able to",
    "start": "675680",
    "end": "677330"
  },
  {
    "text": "either make predictions from the command",
    "start": "677330",
    "end": "678830"
  },
  {
    "text": "line or from other Google api's such as",
    "start": "678830",
    "end": "681440"
  },
  {
    "text": "a cloud function as we'll see here next",
    "start": "681440",
    "end": "683330"
  },
  {
    "start": "683000",
    "end": "695000"
  },
  {
    "text": "once the model goes into production",
    "start": "683330",
    "end": "685040"
  },
  {
    "text": "we'll be able to get some actual",
    "start": "685040",
    "end": "686510"
  },
  {
    "text": "performance metrics about how it's",
    "start": "686510",
    "end": "688190"
  },
  {
    "text": "handling its workload so now we're on to",
    "start": "688190",
    "end": "691220"
  },
  {
    "text": "the final step and that's writing a",
    "start": "691220",
    "end": "692900"
  },
  {
    "text": "cloud function that can consume this",
    "start": "692900",
    "end": "694790"
  },
  {
    "text": "model for that will switch over to vs",
    "start": "694790",
    "end": "697430"
  },
  {
    "start": "695000",
    "end": "904000"
  },
  {
    "text": "code and first we'll go into the command",
    "start": "697430",
    "end": "699170"
  },
  {
    "text": "line run firebase and net functions then",
    "start": "699170",
    "end": "701840"
  },
  {
    "text": "we'll see the end of the functions",
    "start": "701840",
    "end": "702950"
  },
  {
    "text": "directory and install Google api's the",
    "start": "702950",
    "end": "706430"
  },
  {
    "text": "Google API package for node will allow",
    "start": "706430",
    "end": "708830"
  },
  {
    "text": "us to authenticate the cloud function",
    "start": "708830",
    "end": "710810"
  },
  {
    "text": "and then make requests to the ml API",
    "start": "710810",
    "end": "713090"
  },
  {
    "text": "without the need for an HTTP library I'm",
    "start": "713090",
    "end": "716240"
  },
  {
    "text": "using typescript here but you could just",
    "start": "716240",
    "end": "717950"
  },
  {
    "text": "as easily use vanilla Jas will import",
    "start": "717950",
    "end": "720830"
  },
  {
    "text": "Google from Google API s then reference",
    "start": "720830",
    "end": "723530"
  },
  {
    "text": "ml l version 1 the function itself is",
    "start": "723530",
    "end": "726620"
  },
  {
    "text": "called predict happiness and it's just a",
    "start": "726620",
    "end": "728570"
  },
  {
    "text": "regular HTTP function but you could use",
    "start": "728570",
    "end": "731120"
  },
  {
    "text": "any kind of cloud function here you want",
    "start": "731120",
    "end": "732650"
  },
  {
    "text": "a good alternative would be to run a",
    "start": "732650",
    "end": "734960"
  },
  {
    "text": "prediction every time a new record is",
    "start": "734960",
    "end": "736940"
  },
  {
    "text": "added to the firestore database we're",
    "start": "736940",
    "end": "739490"
  },
  {
    "text": "going to use this single cloud function",
    "start": "739490",
    "end": "741200"
  },
  {
    "text": "to make requests to potentially multiple",
    "start": "741200",
    "end": "743240"
  },
  {
    "text": "models so we'll have the request body",
    "start": "743240",
    "end": "745730"
  },
  {
    "text": "define which model should make the",
    "start": "745730",
    "end": "747530"
  },
  {
    "text": "prediction and then the instances will",
    "start": "747530",
    "end": "750110"
  },
  {
    "text": "be the actual data that we're trying to",
    "start": "750110",
    "end": "751760"
  },
  {
    "text": "predict which is typically an array with",
    "start": "751760",
    "end": "754040"
  },
  {
    "text": "the same shape in which you trained your",
    "start": "754040",
    "end": "755810"
  },
  {
    "text": "actual machine learning model so now",
    "start": "755810",
    "end": "758150"
  },
  {
    "text": "that we have the request body we can",
    "start": "758150",
    "end": "759650"
  },
  {
    "text": "format our request to the Google API",
    "start": "759650",
    "end": "761900"
  },
  {
    "text": "this request requires authentication",
    "start": "761900",
    "end": "764000"
  },
  {
    "text": "which we can get by calling Google auth",
    "start": "764000",
    "end": "766580"
  },
  {
    "text": "get application default and that will",
    "start": "766580",
    "end": "769340"
  },
  {
    "text": "connect our firebase credentials with",
    "start": "769340",
    "end": "770990"
  },
  {
    "text": "the Google API from there we'll set up a",
    "start": "770990",
    "end": "773660"
  },
  {
    "text": "variable for the model name which needs",
    "start": "773660",
    "end": "775610"
  },
  {
    "text": "to have your project ID in it as well as",
    "start": "775610",
    "end": "777650"
  },
  {
    "text": "the name of the actual model that you",
    "start": "777650",
    "end": "779270"
  },
  {
    "text": "gave it in the ml engine console and now",
    "start": "779270",
    "end": "782390"
  },
  {
    "text": "everything is in place to make a",
    "start": "782390",
    "end": "783740"
  },
  {
    "text": "prediction call to the ml engine API we",
    "start": "783740",
    "end": "786980"
  },
  {
    "text": "call projects predict pass in our auth",
    "start": "786980",
    "end": "789170"
  },
  {
    "text": "credentials the name of the model and",
    "start": "789170",
    "end": "791150"
  },
  {
    "text": "then also the instances that we're",
    "start": "791150",
    "end": "792950"
  },
  {
    "text": "trying to predict this can actually be",
    "start": "792950",
    "end": "794750"
  },
  {
    "text": "an array of arrays if we want to make",
    "start": "794750",
    "end": "796880"
  },
  {
    "text": "multiple predictions from a single cloud",
    "start": "796880",
    "end": "798920"
  },
  {
    "text": "function call",
    "start": "798920",
    "end": "799699"
  },
  {
    "text": "and then typescript gets a little",
    "start": "799699",
    "end": "801529"
  },
  {
    "text": "confused right here so we need to add as",
    "start": "801529",
    "end": "803359"
  },
  {
    "text": "any after the argument to predict so",
    "start": "803359",
    "end": "806779"
  },
  {
    "text": "that should resolve with the predictions",
    "start": "806779",
    "end": "808459"
  },
  {
    "text": "from our model and then we can send that",
    "start": "808459",
    "end": "810019"
  },
  {
    "text": "back out as the response from this HTTP",
    "start": "810019",
    "end": "812480"
  },
  {
    "text": "function at this point you could deploy",
    "start": "812480",
    "end": "814519"
  },
  {
    "text": "this cloud function and you essentially",
    "start": "814519",
    "end": "816079"
  },
  {
    "text": "have an API endpoint with your machine",
    "start": "816079",
    "end": "818329"
  },
  {
    "text": "learning model but we're just going to",
    "start": "818329",
    "end": "820189"
  },
  {
    "text": "run it locally and then we'll test it",
    "start": "820189",
    "end": "822019"
  },
  {
    "text": "with an application called insomnia",
    "start": "822019",
    "end": "823759"
  },
  {
    "text": "insomnia is a free desktop app that you",
    "start": "823759",
    "end": "826249"
  },
  {
    "text": "can install and it allows you to make",
    "start": "826249",
    "end": "827959"
  },
  {
    "text": "HTTP calls in this nice user interface",
    "start": "827959",
    "end": "830499"
  },
  {
    "text": "so first in the JSON body will declare",
    "start": "830499",
    "end": "833689"
  },
  {
    "text": "the model name which is developer",
    "start": "833689",
    "end": "835339"
  },
  {
    "text": "happiness for the instances we pass an",
    "start": "835339",
    "end": "838309"
  },
  {
    "text": "array of arrays where each array is",
    "start": "838309",
    "end": "840529"
  },
  {
    "text": "going to be a prediction that we're",
    "start": "840529",
    "end": "841819"
  },
  {
    "text": "trying to make so these values match the",
    "start": "841819",
    "end": "844279"
  },
  {
    "text": "features in our original data set for",
    "start": "844279",
    "end": "846230"
  },
  {
    "text": "example column one would be the users",
    "start": "846230",
    "end": "848059"
  },
  {
    "text": "age column to whether or not these",
    "start": "848059",
    "end": "849859"
  },
  {
    "text": "firebase and column three they're",
    "start": "849859",
    "end": "852139"
  },
  {
    "text": "encoded programming language now if we",
    "start": "852139",
    "end": "854749"
  },
  {
    "text": "send this request to our function we get",
    "start": "854749",
    "end": "856669"
  },
  {
    "text": "a response back in about 400",
    "start": "856669",
    "end": "858499"
  },
  {
    "text": "milliseconds that gives us the",
    "start": "858499",
    "end": "859939"
  },
  {
    "text": "prediction from those instances so each",
    "start": "859939",
    "end": "862669"
  },
  {
    "text": "set of features sent from the request",
    "start": "862669",
    "end": "864470"
  },
  {
    "text": "here on the Left got a different",
    "start": "864470",
    "end": "865910"
  },
  {
    "text": "happiness prediction from the response",
    "start": "865910",
    "end": "867589"
  },
  {
    "text": "here on the right in other words we",
    "start": "867589",
    "end": "869899"
  },
  {
    "text": "started with basically nothing and now",
    "start": "869899",
    "end": "871789"
  },
  {
    "text": "we have an endpoint in the cloud for our",
    "start": "871789",
    "end": "873529"
  },
  {
    "text": "custom machine learning model I'm gonna",
    "start": "873529",
    "end": "875720"
  },
  {
    "text": "go ahead and wrap things up there if",
    "start": "875720",
    "end": "877009"
  },
  {
    "text": "this video helped you please like and",
    "start": "877009",
    "end": "878569"
  },
  {
    "text": "subscribe and you can find the full",
    "start": "878569",
    "end": "880279"
  },
  {
    "text": "source code on angular firebase com",
    "start": "880279",
    "end": "882709"
  },
  {
    "text": "if you're serious about building a",
    "start": "882709",
    "end": "884239"
  },
  {
    "text": "project with firebase or Google cloud",
    "start": "884239",
    "end": "886189"
  },
  {
    "text": "consider upgrading to a pro membership",
    "start": "886189",
    "end": "888079"
  },
  {
    "text": "at angular firebase com you'll get",
    "start": "888079",
    "end": "890600"
  },
  {
    "text": "access to a whole bunch of exclusive",
    "start": "890600",
    "end": "892160"
  },
  {
    "text": "content designed to help you build and",
    "start": "892160",
    "end": "893869"
  },
  {
    "text": "ship your app faster thanks for watching",
    "start": "893869",
    "end": "896029"
  },
  {
    "text": "and I'll talk to you soon",
    "start": "896029",
    "end": "899230"
  },
  {
    "text": "you",
    "start": "902150",
    "end": "904210"
  }
]