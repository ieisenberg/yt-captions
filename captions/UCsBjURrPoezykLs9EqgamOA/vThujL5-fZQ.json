[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "almost every interactive app sends",
    "start": "30",
    "end": "1890"
  },
  {
    "text": "event-driven email on a per user basis",
    "start": "1890",
    "end": "4110"
  },
  {
    "text": "in today's video we'll look at the",
    "start": "4110",
    "end": "5819"
  },
  {
    "text": "fundamentals of transactional email",
    "start": "5819",
    "end": "7770"
  },
  {
    "text": "you've got mail we'll look at strategies",
    "start": "7770",
    "end": "9780"
  },
  {
    "text": "for sending email at the right time to",
    "start": "9780",
    "end": "11759"
  },
  {
    "text": "increase user engagement and of course",
    "start": "11759",
    "end": "13559"
  },
  {
    "text": "the technical implementation details",
    "start": "13559",
    "end": "15210"
  },
  {
    "text": "with firebase cloud functions and the",
    "start": "15210",
    "end": "17130"
  },
  {
    "text": "send grid transactional email API and",
    "start": "17130",
    "end": "19410"
  },
  {
    "text": "this is also the first video in a new",
    "start": "19410",
    "end": "21539"
  },
  {
    "text": "series called Minimum Viable Product",
    "start": "21539",
    "end": "23430"
  },
  {
    "text": "where we start with a generic spec or",
    "start": "23430",
    "end": "25289"
  },
  {
    "text": "requirement like how do I send email",
    "start": "25289",
    "end": "27090"
  },
  {
    "text": "from my app then build a full stack",
    "start": "27090",
    "end": "28680"
  },
  {
    "text": "solution with multiple front-end or",
    "start": "28680",
    "end": "30359"
  },
  {
    "text": "back-end approaches in this tutorial",
    "start": "30359",
    "end": "32189"
  },
  {
    "text": "you'll see the backend integration with",
    "start": "32189",
    "end": "34110"
  },
  {
    "text": "cloud functions but if you want to",
    "start": "34110",
    "end": "35640"
  },
  {
    "text": "extend it you can go to fire ship i/o",
    "start": "35640",
    "end": "37200"
  },
  {
    "text": "and see integrations for angular react",
    "start": "37200",
    "end": "39510"
  },
  {
    "text": "view svelte and flutter if you're new",
    "start": "39510",
    "end": "41850"
  },
  {
    "text": "here like and subscribe and leave a",
    "start": "41850",
    "end": "43350"
  },
  {
    "text": "comment below for a chance to win this",
    "start": "43350",
    "end": "44940"
  },
  {
    "text": "t-shirt now the great thing about",
    "start": "44940",
    "end": "46500"
  },
  {
    "text": "serverless functions is that they make",
    "start": "46500",
    "end": "48300"
  },
  {
    "text": "it really easy to implement secure",
    "start": "48300",
    "end": "50250"
  },
  {
    "text": "event-driven code today we'll write and",
    "start": "50250",
    "end": "52289"
  },
  {
    "text": "deploy four different cloud functions",
    "start": "52289",
    "end": "53760"
  },
  {
    "text": "each solving a specific problem the",
    "start": "53760",
    "end": "55860"
  },
  {
    "start": "55000",
    "end": "75000"
  },
  {
    "text": "first one will send a welcome email when",
    "start": "55860",
    "end": "57629"
  },
  {
    "text": "a new user signs up the second one is an",
    "start": "57629",
    "end": "59879"
  },
  {
    "text": "HTTP function that can be called",
    "start": "59879",
    "end": "61739"
  },
  {
    "text": "dynamically from your front-end code the",
    "start": "61739",
    "end": "63840"
  },
  {
    "text": "third one is a fire store function which",
    "start": "63840",
    "end": "65670"
  },
  {
    "text": "runs and responds to changes to the",
    "start": "65670",
    "end": "67439"
  },
  {
    "text": "database and the fourth function is",
    "start": "67439",
    "end": "69270"
  },
  {
    "text": "scheduled which allows you to send an",
    "start": "69270",
    "end": "70920"
  },
  {
    "text": "email at a specific time or date we'll",
    "start": "70920",
    "end": "73200"
  },
  {
    "text": "talk about these strategies in a little",
    "start": "73200",
    "end": "74580"
  },
  {
    "text": "more detail as we go along but let's get",
    "start": "74580",
    "end": "76530"
  },
  {
    "start": "75000",
    "end": "124000"
  },
  {
    "text": "started with the initial setup the first",
    "start": "76530",
    "end": "78450"
  },
  {
    "text": "thing you'll need is a send grid account",
    "start": "78450",
    "end": "79830"
  },
  {
    "text": "which is a paid service but it starts",
    "start": "79830",
    "end": "81720"
  },
  {
    "text": "off with a free tier to get you started",
    "start": "81720",
    "end": "82979"
  },
  {
    "text": "now you'll see a lot of different things",
    "start": "82979",
    "end": "84840"
  },
  {
    "text": "on the send grid dashboard but the thing",
    "start": "84840",
    "end": "86670"
  },
  {
    "text": "we're interested in is the transactional",
    "start": "86670",
    "end": "88590"
  },
  {
    "text": "templates page from this page you'll",
    "start": "88590",
    "end": "90450"
  },
  {
    "text": "want to create a new template and then",
    "start": "90450",
    "end": "92009"
  },
  {
    "text": "add a version to it",
    "start": "92009",
    "end": "93210"
  },
  {
    "text": "you can use your own custom HTML or you",
    "start": "93210",
    "end": "95460"
  },
  {
    "text": "can go to their drag-and-drop editor but",
    "start": "95460",
    "end": "97710"
  },
  {
    "text": "when it comes to dynamic transactional",
    "start": "97710",
    "end": "99390"
  },
  {
    "text": "email you'll basically want to create a",
    "start": "99390",
    "end": "101009"
  },
  {
    "text": "template that allows you to pass in a",
    "start": "101009",
    "end": "102899"
  },
  {
    "text": "bunch of data to customize it on a per",
    "start": "102899",
    "end": "104970"
  },
  {
    "text": "user basis and SendGrid uses handlebars",
    "start": "104970",
    "end": "107490"
  },
  {
    "text": "to achieve this in their templates",
    "start": "107490",
    "end": "108869"
  },
  {
    "text": "you'll notice over here on the left that",
    "start": "108869",
    "end": "110820"
  },
  {
    "text": "we have the subject wrapped in",
    "start": "110820",
    "end": "112200"
  },
  {
    "text": "handlebars that's because we'll be",
    "start": "112200",
    "end": "113549"
  },
  {
    "text": "dynamically passing the subject from our",
    "start": "113549",
    "end": "115470"
  },
  {
    "text": "back-end functions then in the email",
    "start": "115470",
    "end": "117630"
  },
  {
    "text": "body we have hello handlebars name which",
    "start": "117630",
    "end": "120149"
  },
  {
    "text": "will be passed and dynamically as well",
    "start": "120149",
    "end": "121590"
  },
  {
    "text": "and then also the text of the email",
    "start": "121590",
    "end": "123270"
  },
  {
    "text": "itself after you've created a template",
    "start": "123270",
    "end": "125549"
  },
  {
    "start": "124000",
    "end": "144000"
  },
  {
    "text": "make a note of the template ID we're",
    "start": "125549",
    "end": "127890"
  },
  {
    "text": "going to need that template ID as well",
    "start": "127890",
    "end": "129660"
  },
  {
    "text": "as our send grid API key do you get the",
    "start": "129660",
    "end": "131760"
  },
  {
    "text": "API key we go down here to set",
    "start": "131760",
    "end": "133620"
  },
  {
    "text": "and then we'll generate a new API key",
    "start": "133620",
    "end": "136140"
  },
  {
    "text": "that is restricted to the mail send API",
    "start": "136140",
    "end": "138569"
  },
  {
    "text": "because we don't really need anything",
    "start": "138569",
    "end": "139950"
  },
  {
    "text": "else for this demo from there you can go",
    "start": "139950",
    "end": "142440"
  },
  {
    "text": "into a blank project in your editor or",
    "start": "142440",
    "end": "144300"
  },
  {
    "start": "144000",
    "end": "165000"
  },
  {
    "text": "in my case I'm working from a mono repo",
    "start": "144300",
    "end": "146040"
  },
  {
    "text": "that has multiple front-end integrations",
    "start": "146040",
    "end": "148370"
  },
  {
    "text": "from the command line you can run fire",
    "start": "148370",
    "end": "150450"
  },
  {
    "text": "basinet functions and we'll be using",
    "start": "150450",
    "end": "152190"
  },
  {
    "text": "typescript but that part's optional",
    "start": "152190",
    "end": "154050"
  },
  {
    "text": "that's going to create a functions",
    "start": "154050",
    "end": "155940"
  },
  {
    "text": "directory and the root of the project so",
    "start": "155940",
    "end": "157680"
  },
  {
    "text": "we'll go ahead and CD into the functions",
    "start": "157680",
    "end": "159120"
  },
  {
    "text": "directory then run npm install SendGrid",
    "start": "159120",
    "end": "161730"
  },
  {
    "text": "slash mail and that gives us the",
    "start": "161730",
    "end": "163650"
  },
  {
    "text": "official node SDK for SendGrid",
    "start": "163650",
    "end": "165600"
  },
  {
    "text": "from there we need to tell the fire base",
    "start": "165600",
    "end": "167459"
  },
  {
    "text": "functions environment the SendGrid api",
    "start": "167459",
    "end": "169500"
  },
  {
    "text": "key and then also the template ID that",
    "start": "169500",
    "end": "171660"
  },
  {
    "text": "we'll use to send emails you don't have",
    "start": "171660",
    "end": "173610"
  },
  {
    "text": "to save the template ID here but it is",
    "start": "173610",
    "end": "175350"
  },
  {
    "text": "useful if you just want to swap it out",
    "start": "175350",
    "end": "177180"
  },
  {
    "text": "without having to completely redeploy",
    "start": "177180",
    "end": "179130"
  },
  {
    "text": "your functions so now that we can",
    "start": "179130",
    "end": "181349"
  },
  {
    "start": "180000",
    "end": "203000"
  },
  {
    "text": "securely access the API key we can go",
    "start": "181349",
    "end": "183660"
  },
  {
    "text": "into the source code in the index TS",
    "start": "183660",
    "end": "185790"
  },
  {
    "text": "file and initialize the send grid SDK",
    "start": "185790",
    "end": "188160"
  },
  {
    "text": "we'll also bring in firebase admin and",
    "start": "188160",
    "end": "190830"
  },
  {
    "text": "then make it reference to the firestore",
    "start": "190830",
    "end": "192390"
  },
  {
    "text": "database because one of our email",
    "start": "192390",
    "end": "194010"
  },
  {
    "text": "triggers will be on a database right",
    "start": "194010",
    "end": "195810"
  },
  {
    "text": "after importing SendGrid",
    "start": "195810",
    "end": "197670"
  },
  {
    "text": "the first thing you'll want to do is",
    "start": "197670",
    "end": "198900"
  },
  {
    "text": "reference your API key from the",
    "start": "198900",
    "end": "200370"
  },
  {
    "text": "environment as well as the template ID",
    "start": "200370",
    "end": "202109"
  },
  {
    "text": "if you saved it there then all you have",
    "start": "202109",
    "end": "204000"
  },
  {
    "start": "203000",
    "end": "230000"
  },
  {
    "text": "to do is call send grid set API key and",
    "start": "204000",
    "end": "206430"
  },
  {
    "text": "you're ready to start sending mail the",
    "start": "206430",
    "end": "208200"
  },
  {
    "text": "first type of transactional email that",
    "start": "208200",
    "end": "209790"
  },
  {
    "text": "we'll tackle is a welcome email this",
    "start": "209790",
    "end": "211739"
  },
  {
    "text": "strategy is really straightforward a new",
    "start": "211739",
    "end": "213600"
  },
  {
    "text": "user signs up for the app and you want",
    "start": "213600",
    "end": "215250"
  },
  {
    "text": "to send them an email with some account",
    "start": "215250",
    "end": "216840"
  },
  {
    "text": "details and some instructions on how to",
    "start": "216840",
    "end": "218760"
  },
  {
    "text": "get started with the app we can handle",
    "start": "218760",
    "end": "220980"
  },
  {
    "text": "this with the oncreate hook for firebase",
    "start": "220980",
    "end": "222900"
  },
  {
    "text": "off when a new user signs up this will",
    "start": "222900",
    "end": "225120"
  },
  {
    "text": "give us the user object which we can",
    "start": "225120",
    "end": "226889"
  },
  {
    "text": "then pass off to the send grid SDK to",
    "start": "226889",
    "end": "228780"
  },
  {
    "text": "send an email in the function body will",
    "start": "228780",
    "end": "231389"
  },
  {
    "start": "230000",
    "end": "266000"
  },
  {
    "text": "first format the message payload the to",
    "start": "231389",
    "end": "233670"
  },
  {
    "text": "property is the email address that we'll",
    "start": "233670",
    "end": "235470"
  },
  {
    "text": "be sending to and you can add multiple",
    "start": "235470",
    "end": "237060"
  },
  {
    "text": "email addresses here if you format it as",
    "start": "237060",
    "end": "239069"
  },
  {
    "text": "an array the next option is the from",
    "start": "239069",
    "end": "241350"
  },
  {
    "text": "email which in our case will always be",
    "start": "241350",
    "end": "243060"
  },
  {
    "text": "hello at fire ship il then we'll make a",
    "start": "243060",
    "end": "245190"
  },
  {
    "text": "reference to the template we created an",
    "start": "245190",
    "end": "246870"
  },
  {
    "text": "send grid based on its template ID then",
    "start": "246870",
    "end": "249209"
  },
  {
    "text": "we have a dynamic template data option",
    "start": "249209",
    "end": "251280"
  },
  {
    "text": "which will take any customized data that",
    "start": "251280",
    "end": "253049"
  },
  {
    "text": "we want to pass to send grid and this",
    "start": "253049",
    "end": "255120"
  },
  {
    "text": "data will be replaced wherever we used",
    "start": "255120",
    "end": "256650"
  },
  {
    "text": "handlebars in the template itself which",
    "start": "256650",
    "end": "258750"
  },
  {
    "text": "in our case is the subject line and also",
    "start": "258750",
    "end": "260820"
  },
  {
    "text": "the name in the email body and the final",
    "start": "260820",
    "end": "263460"
  },
  {
    "text": "step is to return a promise from the",
    "start": "263460",
    "end": "265200"
  },
  {
    "text": "function that sends the email",
    "start": "265200",
    "end": "266940"
  },
  {
    "start": "266000",
    "end": "335000"
  },
  {
    "text": "which we can do by simply returning the",
    "start": "266940",
    "end": "268440"
  },
  {
    "text": "SendGrid mail send with the message as",
    "start": "268440",
    "end": "270600"
  },
  {
    "text": "the argument and that's all it takes to",
    "start": "270600",
    "end": "272550"
  },
  {
    "text": "send a user a welcome email now that's",
    "start": "272550",
    "end": "274920"
  },
  {
    "text": "great for that specific use case but",
    "start": "274920",
    "end": "276600"
  },
  {
    "text": "there may be times when you just want to",
    "start": "276600",
    "end": "277980"
  },
  {
    "text": "send a regular HTTP call that validates",
    "start": "277980",
    "end": "280410"
  },
  {
    "text": "that the user is logged in and then send",
    "start": "280410",
    "end": "282060"
  },
  {
    "text": "an email to that user",
    "start": "282060",
    "end": "283230"
  },
  {
    "text": "and that's when callable HTTP functions",
    "start": "283230",
    "end": "285570"
  },
  {
    "text": "from firebase become very useful this",
    "start": "285570",
    "end": "287490"
  },
  {
    "text": "type of function would allow a user to",
    "start": "287490",
    "end": "288900"
  },
  {
    "text": "simply click a button and then we could",
    "start": "288900",
    "end": "290730"
  },
  {
    "text": "send some dynamic data to the backend",
    "start": "290730",
    "end": "292410"
  },
  {
    "text": "from our front-end code which could be",
    "start": "292410",
    "end": "294210"
  },
  {
    "text": "anything now you probably don't just",
    "start": "294210",
    "end": "296280"
  },
  {
    "text": "want any user to be able to do this you",
    "start": "296280",
    "end": "298020"
  },
  {
    "text": "want to make sure that it's a login user",
    "start": "298020",
    "end": "299520"
  },
  {
    "text": "that has a validated email when this",
    "start": "299520",
    "end": "301950"
  },
  {
    "text": "function is called will have the auth",
    "start": "301950",
    "end": "303420"
  },
  {
    "text": "context from the front-end so we can",
    "start": "303420",
    "end": "305430"
  },
  {
    "text": "check to make sure that that all context",
    "start": "305430",
    "end": "307020"
  },
  {
    "text": "is present and then it also has an email",
    "start": "307020",
    "end": "309000"
  },
  {
    "text": "address on the token before we send the",
    "start": "309000",
    "end": "310830"
  },
  {
    "text": "request to send grid now you'll notice",
    "start": "310830",
    "end": "312720"
  },
  {
    "text": "that the callable function also has a",
    "start": "312720",
    "end": "314430"
  },
  {
    "text": "data object in the payload this data can",
    "start": "314430",
    "end": "317070"
  },
  {
    "text": "be passed from the front-end again that",
    "start": "317070",
    "end": "318720"
  },
  {
    "text": "data can be anything you want from your",
    "start": "318720",
    "end": "320370"
  },
  {
    "text": "front-end code and again head over to",
    "start": "320370",
    "end": "322290"
  },
  {
    "text": "fire ship i/o to see how the actual",
    "start": "322290",
    "end": "324090"
  },
  {
    "text": "front-end integrations look in your",
    "start": "324090",
    "end": "325650"
  },
  {
    "text": "framework of choice now if you create a",
    "start": "325650",
    "end": "327750"
  },
  {
    "text": "callable function or just a regular HTTP",
    "start": "327750",
    "end": "330210"
  },
  {
    "text": "function you'll want to make sure that",
    "start": "330210",
    "end": "331650"
  },
  {
    "text": "the response you send back is",
    "start": "331650",
    "end": "333060"
  },
  {
    "text": "serializable to JSON that means you",
    "start": "333060",
    "end": "335760"
  },
  {
    "start": "335000",
    "end": "351000"
  },
  {
    "text": "don't just want to return the send grid",
    "start": "335760",
    "end": "337080"
  },
  {
    "text": "promise but instead of wait it and then",
    "start": "337080",
    "end": "339060"
  },
  {
    "text": "return an object that says success true",
    "start": "339060",
    "end": "340980"
  },
  {
    "text": "and then you could handle errors here if",
    "start": "340980",
    "end": "342750"
  },
  {
    "text": "anything goes wrong so that gives you a",
    "start": "342750",
    "end": "344940"
  },
  {
    "text": "really flexible way to manually send",
    "start": "344940",
    "end": "346650"
  },
  {
    "text": "email from your front-end but you may",
    "start": "346650",
    "end": "348300"
  },
  {
    "text": "want your functions to automatically",
    "start": "348300",
    "end": "349710"
  },
  {
    "text": "react to changes to your database for",
    "start": "349710",
    "end": "351600"
  },
  {
    "start": "351000",
    "end": "389000"
  },
  {
    "text": "example you might have a blog app and",
    "start": "351600",
    "end": "353760"
  },
  {
    "text": "the author of a blog might want to be",
    "start": "353760",
    "end": "355410"
  },
  {
    "text": "notified when a user comments on their",
    "start": "355410",
    "end": "357270"
  },
  {
    "text": "post and the database will have a",
    "start": "357270",
    "end": "359160"
  },
  {
    "text": "collection of posts and then will have a",
    "start": "359160",
    "end": "360840"
  },
  {
    "text": "sub collection of comments nested under",
    "start": "360840",
    "end": "362850"
  },
  {
    "text": "each post so this function will run",
    "start": "362850",
    "end": "365100"
  },
  {
    "text": "whenever a new comment is added to that",
    "start": "365100",
    "end": "367140"
  },
  {
    "text": "sub collection this function will",
    "start": "367140",
    "end": "369210"
  },
  {
    "text": "automatically give us access to the",
    "start": "369210",
    "end": "370500"
  },
  {
    "text": "Comet document but it won't give us",
    "start": "370500",
    "end": "372210"
  },
  {
    "text": "access to the post it will only give us",
    "start": "372210",
    "end": "374490"
  },
  {
    "text": "the post ID so what we need to do is",
    "start": "374490",
    "end": "376650"
  },
  {
    "text": "make a reference to that post in the",
    "start": "376650",
    "end": "378360"
  },
  {
    "text": "database and then we'll call get to",
    "start": "378360",
    "end": "380669"
  },
  {
    "text": "retrieve its actual data now if you're",
    "start": "380669",
    "end": "382530"
  },
  {
    "text": "in typescript strictmode you might also",
    "start": "382530",
    "end": "384060"
  },
  {
    "text": "want to say or an empty object just to",
    "start": "384060",
    "end": "386190"
  },
  {
    "text": "prevent errors from the typescript",
    "start": "386190",
    "end": "387660"
  },
  {
    "text": "compiler or you can set strict null",
    "start": "387660",
    "end": "389640"
  },
  {
    "start": "389000",
    "end": "413000"
  },
  {
    "text": "checks to false in your TS config but",
    "start": "389640",
    "end": "392340"
  },
  {
    "text": "now that we have the necessary data we",
    "start": "392340",
    "end": "394110"
  },
  {
    "text": "can then format the message we can use",
    "start": "394110",
    "end": "396150"
  },
  {
    "text": "all this dynamic data to create a custom",
    "start": "396150",
    "end": "398190"
  },
  {
    "text": "subject line and then we can also set",
    "start": "398190",
    "end": "400229"
  },
  {
    "text": "the",
    "start": "400229",
    "end": "400740"
  },
  {
    "text": "texts to something like this user said",
    "start": "400740",
    "end": "403200"
  },
  {
    "text": "something about this post and that gives",
    "start": "403200",
    "end": "405330"
  },
  {
    "text": "us a function that can send",
    "start": "405330",
    "end": "406350"
  },
  {
    "text": "transactional email based on changes to",
    "start": "406350",
    "end": "408270"
  },
  {
    "text": "the database and that tends to be a lot",
    "start": "408270",
    "end": "410430"
  },
  {
    "text": "more simple than trying to send requests",
    "start": "410430",
    "end": "412170"
  },
  {
    "text": "from your front-end code now at this",
    "start": "412170",
    "end": "414300"
  },
  {
    "start": "413000",
    "end": "489000"
  },
  {
    "text": "point we've only been sending email",
    "start": "414300",
    "end": "415770"
  },
  {
    "text": "based on user driven events but what if",
    "start": "415770",
    "end": "418140"
  },
  {
    "text": "we have something a little more static",
    "start": "418140",
    "end": "419490"
  },
  {
    "text": "like a weekly summary that we want to",
    "start": "419490",
    "end": "421260"
  },
  {
    "text": "send to each user",
    "start": "421260",
    "end": "422310"
  },
  {
    "text": "for that we can use a pub sub function",
    "start": "422310",
    "end": "424470"
  },
  {
    "text": "based on a schedule for example every",
    "start": "424470",
    "end": "426690"
  },
  {
    "text": "Friday at 0 500 from there we can make a",
    "start": "426690",
    "end": "429510"
  },
  {
    "text": "query to fire store for all the users",
    "start": "429510",
    "end": "431640"
  },
  {
    "text": "that are ready to receive the summary",
    "start": "431640",
    "end": "433320"
  },
  {
    "text": "that query is going to give us an array",
    "start": "433320",
    "end": "435450"
  },
  {
    "text": "of snapshots so we'll go ahead and map",
    "start": "435450",
    "end": "437250"
  },
  {
    "text": "those snapshots down to the actual email",
    "start": "437250",
    "end": "439290"
  },
  {
    "text": "on each document and that will just give",
    "start": "439290",
    "end": "441510"
  },
  {
    "text": "us an array of strings or email",
    "start": "441510",
    "end": "443370"
  },
  {
    "text": "addresses that we can send to send grid",
    "start": "443370",
    "end": "445290"
  },
  {
    "text": "from there you can use your own business",
    "start": "445290",
    "end": "447420"
  },
  {
    "text": "logic to calculate the weekly summary",
    "start": "447420",
    "end": "449160"
  },
  {
    "text": "and then we'll return a promise to send",
    "start": "449160",
    "end": "451080"
  },
  {
    "text": "the emails just like we've done and all",
    "start": "451080",
    "end": "452730"
  },
  {
    "text": "the other functions now in order to",
    "start": "452730",
    "end": "455160"
  },
  {
    "text": "start testing these functions out we",
    "start": "455160",
    "end": "456720"
  },
  {
    "text": "need to run firebase deploy only",
    "start": "456720",
    "end": "458490"
  },
  {
    "text": "functions and they'll be ready for use",
    "start": "458490",
    "end": "460470"
  },
  {
    "text": "in a front-end application you can test",
    "start": "460470",
    "end": "462690"
  },
  {
    "text": "the firestore or auth functions by",
    "start": "462690",
    "end": "464580"
  },
  {
    "text": "simply going into the firebase console",
    "start": "464580",
    "end": "466350"
  },
  {
    "text": "and creating new authentication records",
    "start": "466350",
    "end": "468450"
  },
  {
    "text": "or firestore documents in the",
    "start": "468450",
    "end": "469890"
  },
  {
    "text": "appropriate places and if you're ready",
    "start": "469890",
    "end": "471780"
  },
  {
    "text": "to integrate this with a front-end",
    "start": "471780",
    "end": "473040"
  },
  {
    "text": "framework head over to fire ship IO to",
    "start": "473040",
    "end": "474690"
  },
  {
    "text": "check out the full source code and the",
    "start": "474690",
    "end": "476610"
  },
  {
    "text": "framework specific videos I'm gonna go",
    "start": "476610",
    "end": "478650"
  },
  {
    "text": "ahead and wrap things up there thanks",
    "start": "478650",
    "end": "480180"
  },
  {
    "text": "for watching and I will talk to you soon",
    "start": "480180",
    "end": "482990"
  },
  {
    "text": "[Music]",
    "start": "482990",
    "end": "491138"
  }
]