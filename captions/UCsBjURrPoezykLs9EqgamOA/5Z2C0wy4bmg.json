[
  {
    "text": "in case you haven't heard the good news",
    "start": "30",
    "end": "1230"
  },
  {
    "text": "both Microsoft edge and WebKit Safari",
    "start": "1230",
    "end": "3840"
  },
  {
    "text": "are now supporting service workers in",
    "start": "3840",
    "end": "5700"
  },
  {
    "text": "their preview releases this is a huge",
    "start": "5700",
    "end": "7859"
  },
  {
    "text": "leap forward and sets up 2018 to be the",
    "start": "7859",
    "end": "10200"
  },
  {
    "text": "year of progressive web apps with that",
    "start": "10200",
    "end": "12599"
  },
  {
    "text": "being said what I want to show you today",
    "start": "12599",
    "end": "13889"
  },
  {
    "text": "is how to handle touch events that only",
    "start": "13889",
    "end": "15570"
  },
  {
    "text": "happen on mobile devices then use",
    "start": "15570",
    "end": "17340"
  },
  {
    "text": "angular to create animations in response",
    "start": "17340",
    "end": "19529"
  },
  {
    "text": "to these events as you can see here we",
    "start": "19529",
    "end": "21570"
  },
  {
    "text": "run a different animation on this",
    "start": "21570",
    "end": "22980"
  },
  {
    "text": "material card every time the user swipes",
    "start": "22980",
    "end": "25140"
  },
  {
    "text": "in a different direction if you're new",
    "start": "25140",
    "end": "27000"
  },
  {
    "text": "here make sure to subscribe and I",
    "start": "27000",
    "end": "28590"
  },
  {
    "text": "recommend that you follow along with the",
    "start": "28590",
    "end": "29789"
  },
  {
    "text": "source code at angular firebase comm and",
    "start": "29789",
    "end": "32160"
  },
  {
    "text": "while you're at it",
    "start": "32160",
    "end": "33450"
  },
  {
    "text": "I also recommend checking out Paul",
    "start": "33450",
    "end": "34800"
  },
  {
    "text": "Holidays YouTube channel and all the",
    "start": "34800",
    "end": "36630"
  },
  {
    "text": "awesome angular content he's creating",
    "start": "36630",
    "end": "38370"
  },
  {
    "text": "over there I'm going to kick this",
    "start": "38370",
    "end": "40320"
  },
  {
    "text": "episode off by building a brand new",
    "start": "40320",
    "end": "41910"
  },
  {
    "text": "angular app then we have a couple of",
    "start": "41910",
    "end": "43770"
  },
  {
    "text": "dependencies to add the first one being",
    "start": "43770",
    "end": "45480"
  },
  {
    "text": "hammer J S which is used to add support",
    "start": "45480",
    "end": "48149"
  },
  {
    "text": "for mobile touch events to your",
    "start": "48149",
    "end": "49500"
  },
  {
    "text": "progressive web app including rotate",
    "start": "49500",
    "end": "51390"
  },
  {
    "text": "pinch press pan tap and swipe then you",
    "start": "51390",
    "end": "54600"
  },
  {
    "text": "can install it in your app by running",
    "start": "54600",
    "end": "55829"
  },
  {
    "text": "NPM install hammer J s Flags save then",
    "start": "55829",
    "end": "59309"
  },
  {
    "text": "once installed we're going to go into",
    "start": "59309",
    "end": "61020"
  },
  {
    "text": "the main TS file and make sure to import",
    "start": "61020",
    "end": "63719"
  },
  {
    "text": "hammer J s there that'll make the events",
    "start": "63719",
    "end": "65700"
  },
  {
    "text": "globally available throughout your app",
    "start": "65700",
    "end": "67229"
  },
  {
    "text": "in this demo I'm using angular material",
    "start": "67229",
    "end": "69659"
  },
  {
    "text": "but that part is completely optional you",
    "start": "69659",
    "end": "71939"
  },
  {
    "text": "can follow the install instructions on",
    "start": "71939",
    "end": "73560"
  },
  {
    "text": "the official repo the important part is",
    "start": "73560",
    "end": "75750"
  },
  {
    "text": "that you install angular animations",
    "start": "75750",
    "end": "77490"
  },
  {
    "text": "which is included in the angular mono",
    "start": "77490",
    "end": "79619"
  },
  {
    "text": "repo so you can just install it with NPM",
    "start": "79619",
    "end": "81659"
  },
  {
    "text": "and then make sure to include it inside",
    "start": "81659",
    "end": "84299"
  },
  {
    "text": "of your app module so you should have",
    "start": "84299",
    "end": "86340"
  },
  {
    "text": "browser animations module inside of the",
    "start": "86340",
    "end": "88500"
  },
  {
    "text": "imports array we're going to be modeling",
    "start": "88500",
    "end": "91470"
  },
  {
    "text": "our animations after the animate CSS",
    "start": "91470",
    "end": "93960"
  },
  {
    "text": "library which is one of the most popular",
    "start": "93960",
    "end": "95759"
  },
  {
    "text": "libraries on github the library itself",
    "start": "95759",
    "end": "98579"
  },
  {
    "text": "is just a collection of CSS keyframe",
    "start": "98579",
    "end": "101220"
  },
  {
    "text": "animations so all we have to do is port",
    "start": "101220",
    "end": "103890"
  },
  {
    "text": "those over to angular so we can use it",
    "start": "103890",
    "end": "105630"
  },
  {
    "text": "with angular's browser animations module",
    "start": "105630",
    "end": "107939"
  },
  {
    "text": "we don't actually need to install this",
    "start": "107939",
    "end": "109439"
  },
  {
    "text": "package in our angular project instead",
    "start": "109439",
    "end": "111630"
  },
  {
    "text": "we're just going to copy and paste the",
    "start": "111630",
    "end": "113040"
  },
  {
    "text": "CSS keyframes over to the angular",
    "start": "113040",
    "end": "115200"
  },
  {
    "text": "animations keyframes the end result is",
    "start": "115200",
    "end": "118020"
  },
  {
    "text": "that we'll be able to trigger animations",
    "start": "118020",
    "end": "119549"
  },
  {
    "text": "natively in angular this will give us",
    "start": "119549",
    "end": "121710"
  },
  {
    "text": "fine-grained control over the animation",
    "start": "121710",
    "end": "123479"
  },
  {
    "text": "lifecycle making it much easier to",
    "start": "123479",
    "end": "125159"
  },
  {
    "text": "manage the animations state as our app",
    "start": "125159",
    "end": "127259"
  },
  {
    "text": "grows more complex this can be extremely",
    "start": "127259",
    "end": "129629"
  },
  {
    "text": "valuable if you're building something",
    "start": "129629",
    "end": "130739"
  },
  {
    "text": "like swipeable tinder cards or if you",
    "start": "130739",
    "end": "133230"
  },
  {
    "text": "just want to",
    "start": "133230",
    "end": "134100"
  },
  {
    "text": "optimize the animations for your mobile",
    "start": "134100",
    "end": "136110"
  },
  {
    "text": "users now that we have all of our",
    "start": "136110",
    "end": "138240"
  },
  {
    "text": "dependencies in place let's go ahead and",
    "start": "138240",
    "end": "140070"
  },
  {
    "text": "create a new component called hammer",
    "start": "140070",
    "end": "141660"
  },
  {
    "text": "card the first thing we'll do is set up",
    "start": "141660",
    "end": "143790"
  },
  {
    "text": "the component type script so we're going",
    "start": "143790",
    "end": "146040"
  },
  {
    "text": "to import the necessary tools from",
    "start": "146040",
    "end": "148050"
  },
  {
    "text": "angular animations then I'm going to",
    "start": "148050",
    "end": "151020"
  },
  {
    "text": "import a keyframes file that has not yet",
    "start": "151020",
    "end": "153390"
  },
  {
    "text": "been created but we're going to do that",
    "start": "153390",
    "end": "155070"
  },
  {
    "text": "in the next step then inside the",
    "start": "155070",
    "end": "157710"
  },
  {
    "text": "component decorator we'll go ahead and",
    "start": "157710",
    "end": "159270"
  },
  {
    "text": "create an animations array and this is",
    "start": "159270",
    "end": "161910"
  },
  {
    "text": "where we define each of the animations",
    "start": "161910",
    "end": "163470"
  },
  {
    "text": "as well as the animation trigger so the",
    "start": "163470",
    "end": "166110"
  },
  {
    "text": "trigger is called card animator and",
    "start": "166110",
    "end": "167910"
  },
  {
    "text": "every time that trigger changes it will",
    "start": "167910",
    "end": "170100"
  },
  {
    "text": "transition to a different state so to",
    "start": "170100",
    "end": "172650"
  },
  {
    "text": "define a transition we use the wild card",
    "start": "172650",
    "end": "174840"
  },
  {
    "text": "which means any state that transitions",
    "start": "174840",
    "end": "176820"
  },
  {
    "text": "to wobble will animate in 1000",
    "start": "176820",
    "end": "179550"
  },
  {
    "text": "milliseconds then we'll tell it to",
    "start": "179550",
    "end": "181950"
  },
  {
    "text": "animate with the wobble keyframes that",
    "start": "181950",
    "end": "183990"
  },
  {
    "text": "we're going to define in that key frames",
    "start": "183990",
    "end": "185880"
  },
  {
    "text": "file we're going to follow the same",
    "start": "185880",
    "end": "188010"
  },
  {
    "text": "exact steps for each of our animations I",
    "start": "188010",
    "end": "190380"
  },
  {
    "text": "have 6 in total in this demo so we can",
    "start": "190380",
    "end": "192930"
  },
  {
    "text": "just add those line by line inside of",
    "start": "192930",
    "end": "194820"
  },
  {
    "text": "this animation trigger after that we can",
    "start": "194820",
    "end": "197580"
  },
  {
    "text": "go into the component and we'll define a",
    "start": "197580",
    "end": "200070"
  },
  {
    "text": "variable to hold the animation state to",
    "start": "200070",
    "end": "203130"
  },
  {
    "text": "trigger an animation all we have to do",
    "start": "203130",
    "end": "204750"
  },
  {
    "text": "is define the animation state as a",
    "start": "204750",
    "end": "206460"
  },
  {
    "text": "string that matches one of the",
    "start": "206460",
    "end": "208230"
  },
  {
    "text": "animations that we defined above to do",
    "start": "208230",
    "end": "211080"
  },
  {
    "text": "that I'll create a method called start",
    "start": "211080",
    "end": "212940"
  },
  {
    "text": "animation that takes a state as an",
    "start": "212940",
    "end": "214680"
  },
  {
    "text": "argument then I'm wrapping it in an if",
    "start": "214680",
    "end": "216810"
  },
  {
    "text": "statement so we don't have two",
    "start": "216810",
    "end": "218370"
  },
  {
    "text": "animations trying to run at the same",
    "start": "218370",
    "end": "219900"
  },
  {
    "text": "time and after each animation completes",
    "start": "219900",
    "end": "222810"
  },
  {
    "text": "we want to reset the animation state",
    "start": "222810",
    "end": "224910"
  },
  {
    "text": "back to an empty string so I'll go ahead",
    "start": "224910",
    "end": "227190"
  },
  {
    "text": "and create another method to handle that",
    "start": "227190",
    "end": "229250"
  },
  {
    "text": "the next step is to define the keyframes",
    "start": "229250",
    "end": "232170"
  },
  {
    "text": "that we referenced earlier so create a",
    "start": "232170",
    "end": "234570"
  },
  {
    "text": "new file called keyframes TS and you can",
    "start": "234570",
    "end": "236910"
  },
  {
    "text": "put this file wherever you want and it",
    "start": "236910",
    "end": "238470"
  },
  {
    "text": "can be shared throughout your",
    "start": "238470",
    "end": "239370"
  },
  {
    "text": "application first we'll import keyframes",
    "start": "239370",
    "end": "242430"
  },
  {
    "text": "in style from angular animations and",
    "start": "242430",
    "end": "244410"
  },
  {
    "text": "then I'm going to pull up animate CSS",
    "start": "244410",
    "end": "246600"
  },
  {
    "text": "side-by-side so you can see how this is",
    "start": "246600",
    "end": "248370"
  },
  {
    "text": "done all we're doing in this file is",
    "start": "248370",
    "end": "250560"
  },
  {
    "text": "exporting variables that define the",
    "start": "250560",
    "end": "252750"
  },
  {
    "text": "keyframes that we're going to use in the",
    "start": "252750",
    "end": "254520"
  },
  {
    "text": "animation each element in the array is a",
    "start": "254520",
    "end": "257010"
  },
  {
    "text": "style that represents a relative point",
    "start": "257010",
    "end": "259500"
  },
  {
    "text": "in time in the CSS keyframes to the",
    "start": "259500",
    "end": "262140"
  },
  {
    "text": "right the relative point in time is the",
    "start": "262140",
    "end": "263850"
  },
  {
    "text": "percentage but in angular it's",
    "start": "263850",
    "end": "265919"
  },
  {
    "text": "represented by the offset property",
    "start": "265919",
    "end": "268050"
  },
  {
    "text": "in this object the basic process is that",
    "start": "268050",
    "end": "270960"
  },
  {
    "text": "we convert that percentage to a decimal",
    "start": "270960",
    "end": "272610"
  },
  {
    "text": "and add it to the offset property and",
    "start": "272610",
    "end": "274800"
  },
  {
    "text": "then we're also going to copy and paste",
    "start": "274800",
    "end": "276360"
  },
  {
    "text": "over the CSS styles from each keyframe",
    "start": "276360",
    "end": "278720"
  },
  {
    "text": "it's a somewhat tedious process and",
    "start": "278720",
    "end": "281400"
  },
  {
    "text": "eventually angular is going to have its",
    "start": "281400",
    "end": "282870"
  },
  {
    "text": "own CSS parser but for now this is the",
    "start": "282870",
    "end": "285150"
  },
  {
    "text": "best way to go about it to keep this",
    "start": "285150",
    "end": "287430"
  },
  {
    "text": "brief I'm only going to show you this",
    "start": "287430",
    "end": "288720"
  },
  {
    "text": "first animation here but you can find",
    "start": "288720",
    "end": "290550"
  },
  {
    "text": "all of the animations in the github",
    "start": "290550",
    "end": "292319"
  },
  {
    "text": "project for this video if we look a",
    "start": "292319",
    "end": "295080"
  },
  {
    "text": "little closer at the completed keyframes",
    "start": "295080",
    "end": "296879"
  },
  {
    "text": "you can see we start at point two and",
    "start": "296879",
    "end": "298680"
  },
  {
    "text": "then we ended an offset of point eight",
    "start": "298680",
    "end": "300630"
  },
  {
    "text": "keyframes seem to be ordered ascending",
    "start": "300630",
    "end": "302819"
  },
  {
    "text": "based on their offset and the last",
    "start": "302819",
    "end": "305039"
  },
  {
    "text": "keyframe should be no greater than one",
    "start": "305039",
    "end": "306930"
  },
  {
    "text": "if you remember earlier we set our",
    "start": "306930",
    "end": "309030"
  },
  {
    "text": "transition to be 1000 milliseconds so",
    "start": "309030",
    "end": "311310"
  },
  {
    "text": "it's going to cycle through these",
    "start": "311310",
    "end": "312419"
  },
  {
    "text": "keyframes based on that duration of time",
    "start": "312419",
    "end": "314659"
  },
  {
    "text": "with the keyframes in place let's jump",
    "start": "314659",
    "end": "317190"
  },
  {
    "text": "over to the component HTML and start",
    "start": "317190",
    "end": "319440"
  },
  {
    "text": "putting this together so we start with",
    "start": "319440",
    "end": "321120"
  },
  {
    "text": "the material card then we define the",
    "start": "321120",
    "end": "323310"
  },
  {
    "text": "animation trigger by calling at Card",
    "start": "323310",
    "end": "325620"
  },
  {
    "text": "animator with the animation state then",
    "start": "325620",
    "end": "328110"
  },
  {
    "text": "angular calls a done event when the",
    "start": "328110",
    "end": "330150"
  },
  {
    "text": "animation is finished so when it's",
    "start": "330150",
    "end": "331860"
  },
  {
    "text": "finished we're going to reset the",
    "start": "331860",
    "end": "333090"
  },
  {
    "text": "animation state back to an empty string",
    "start": "333090",
    "end": "335099"
  },
  {
    "text": "now we have a whole bunch of hammer j/s",
    "start": "335099",
    "end": "337319"
  },
  {
    "text": "gesture touch events that we can start",
    "start": "337319",
    "end": "339120"
  },
  {
    "text": "playing with first we'll listen to the",
    "start": "339120",
    "end": "341280"
  },
  {
    "text": "swipe left event when the user swipes",
    "start": "341280",
    "end": "343409"
  },
  {
    "text": "left we'll call the start animation",
    "start": "343409",
    "end": "345180"
  },
  {
    "text": "function and pass it the slide out left",
    "start": "345180",
    "end": "347729"
  },
  {
    "text": "animation for swipe right we'll use the",
    "start": "347729",
    "end": "350490"
  },
  {
    "text": "zoom out right animation then we'll also",
    "start": "350490",
    "end": "353219"
  },
  {
    "text": "add swipe up and swipe down but these",
    "start": "353219",
    "end": "355710"
  },
  {
    "text": "ones are going to need some additional",
    "start": "355710",
    "end": "356699"
  },
  {
    "text": "configuration which we'll get to in the",
    "start": "356699",
    "end": "358710"
  },
  {
    "text": "next step then we can go ahead and add",
    "start": "358710",
    "end": "361440"
  },
  {
    "text": "the angular logo and some default text",
    "start": "361440",
    "end": "363930"
  },
  {
    "text": "to our card then we'll set up a couple",
    "start": "363930",
    "end": "365699"
  },
  {
    "text": "material buttons to trigger animations",
    "start": "365699",
    "end": "367830"
  },
  {
    "text": "on a button click or tap with hammer J",
    "start": "367830",
    "end": "370469"
  },
  {
    "text": "ass a tap is similar to a click but",
    "start": "370469",
    "end": "373080"
  },
  {
    "text": "optimized for mobile devices and can",
    "start": "373080",
    "end": "375150"
  },
  {
    "text": "provide some additional metadata for pre",
    "start": "375150",
    "end": "377250"
  },
  {
    "text": "ding custom events at this point you can",
    "start": "377250",
    "end": "379469"
  },
  {
    "text": "open up chrome dev tools and run the",
    "start": "379469",
    "end": "381360"
  },
  {
    "text": "mobile application emulator and you",
    "start": "381360",
    "end": "383430"
  },
  {
    "text": "should see all the animations running",
    "start": "383430",
    "end": "384840"
  },
  {
    "text": "like you would expect so that's pretty",
    "start": "384840",
    "end": "387240"
  },
  {
    "text": "cool but I still want to show you how",
    "start": "387240",
    "end": "388680"
  },
  {
    "text": "you can create your own custom events as",
    "start": "388680",
    "end": "390539"
  },
  {
    "text": "well as customize the behavior of hammer",
    "start": "390539",
    "end": "392849"
  },
  {
    "text": "J s the swipe up and swipe down events",
    "start": "392849",
    "end": "395940"
  },
  {
    "text": "are disabled by default but if we want",
    "start": "395940",
    "end": "398339"
  },
  {
    "text": "to enable them we can import hammer J s",
    "start": "398339",
    "end": "400649"
  },
  {
    "text": "into our app",
    "start": "400649",
    "end": "402090"
  },
  {
    "text": "and then angular has a hammer gesture",
    "start": "402090",
    "end": "404400"
  },
  {
    "text": "config built into platform browser you",
    "start": "404400",
    "end": "407580"
  },
  {
    "text": "create your own hammer config class and",
    "start": "407580",
    "end": "409469"
  },
  {
    "text": "then you give it an overrides object",
    "start": "409469",
    "end": "411569"
  },
  {
    "text": "which gives you access to the full",
    "start": "411569",
    "end": "413639"
  },
  {
    "text": "hammer jsapi you can check out all the",
    "start": "413639",
    "end": "416159"
  },
  {
    "text": "options in the hammer Docs but for now",
    "start": "416159",
    "end": "418020"
  },
  {
    "text": "we just need to set the swipe event to",
    "start": "418020",
    "end": "420000"
  },
  {
    "text": "Direction all then to use this config we",
    "start": "420000",
    "end": "423000"
  },
  {
    "text": "need to go down to providers and tell",
    "start": "423000",
    "end": "424680"
  },
  {
    "text": "angular to use our custom class that'll",
    "start": "424680",
    "end": "427650"
  },
  {
    "text": "get the swipe up and swipe down events",
    "start": "427650",
    "end": "429300"
  },
  {
    "text": "working but I want to take this one step",
    "start": "429300",
    "end": "430919"
  },
  {
    "text": "further and create my own custom events",
    "start": "430919",
    "end": "433289"
  },
  {
    "text": "this is a perfect use case for an",
    "start": "433289",
    "end": "435509"
  },
  {
    "text": "angular directive which I'm going to",
    "start": "435509",
    "end": "437069"
  },
  {
    "text": "call hammer time then to create custom",
    "start": "437069",
    "end": "440400"
  },
  {
    "text": "events and angular you're going to need",
    "start": "440400",
    "end": "441779"
  },
  {
    "text": "host listener output and event emitter",
    "start": "441779",
    "end": "445370"
  },
  {
    "text": "first we'll use the output decorator on",
    "start": "445370",
    "end": "448020"
  },
  {
    "text": "a property called double tap which is",
    "start": "448020",
    "end": "449789"
  },
  {
    "text": "equal to a new event emitter and double",
    "start": "449789",
    "end": "452550"
  },
  {
    "text": "taps going to happen whenever the user",
    "start": "452550",
    "end": "453750"
  },
  {
    "text": "taps twice on an object and then we'll",
    "start": "453750",
    "end": "456719"
  },
  {
    "text": "do the same thing for triple tap which",
    "start": "456719",
    "end": "458759"
  },
  {
    "text": "is the same exact thing but when a user",
    "start": "458759",
    "end": "460319"
  },
  {
    "text": "taps three times to create these custom",
    "start": "460319",
    "end": "463020"
  },
  {
    "text": "events will first listen to the main tap",
    "start": "463020",
    "end": "465120"
  },
  {
    "text": "event coming from hammer Jas and hammer",
    "start": "465120",
    "end": "468150"
  },
  {
    "text": "gives us the tap count for each event so",
    "start": "468150",
    "end": "470610"
  },
  {
    "text": "we can just wrap that in an if statement",
    "start": "470610",
    "end": "471930"
  },
  {
    "text": "and if the tap count equals two then we",
    "start": "471930",
    "end": "474300"
  },
  {
    "text": "know that the user has double tap then",
    "start": "474300",
    "end": "477180"
  },
  {
    "text": "inside the if block will call double tap",
    "start": "477180",
    "end": "479279"
  },
  {
    "text": "omit this event now the process is",
    "start": "479279",
    "end": "482909"
  },
  {
    "text": "exactly the same for triple tap just",
    "start": "482909",
    "end": "484620"
  },
  {
    "text": "looking for the tap count to equal three",
    "start": "484620",
    "end": "486810"
  },
  {
    "text": "now our director is ready to put to use",
    "start": "486810",
    "end": "489060"
  },
  {
    "text": "so we'll go back to our component HTML",
    "start": "489060",
    "end": "491699"
  },
  {
    "text": "and add the directive to whichever",
    "start": "491699",
    "end": "494159"
  },
  {
    "text": "button we want to listen to these custom",
    "start": "494159",
    "end": "496169"
  },
  {
    "text": "events so you can see here we add",
    "start": "496169",
    "end": "499020"
  },
  {
    "text": "another button with the hammer time",
    "start": "499020",
    "end": "500520"
  },
  {
    "text": "directive and then we can listen to the",
    "start": "500520",
    "end": "502560"
  },
  {
    "text": "double tap event in parentheses then we",
    "start": "502560",
    "end": "505409"
  },
  {
    "text": "can run the same start animation",
    "start": "505409",
    "end": "507089"
  },
  {
    "text": "function and pass whichever animation we",
    "start": "507089",
    "end": "509550"
  },
  {
    "text": "want to use there if we go back to our",
    "start": "509550",
    "end": "511889"
  },
  {
    "text": "app and tap the button once you can see",
    "start": "511889",
    "end": "513899"
  },
  {
    "text": "nothing happens but if we double tap",
    "start": "513899",
    "end": "515940"
  },
  {
    "text": "than it does the jello animation that's",
    "start": "515940",
    "end": "518789"
  },
  {
    "text": "just barely scratching the surface of",
    "start": "518789",
    "end": "520500"
  },
  {
    "text": "angular animations and hammer j/s",
    "start": "520500",
    "end": "523099"
  },
  {
    "text": "if this video helped you please like and",
    "start": "523099",
    "end": "525290"
  },
  {
    "text": "subscribe and if you want to take your",
    "start": "525290",
    "end": "527000"
  },
  {
    "text": "app to the next level consider becoming",
    "start": "527000",
    "end": "528680"
  },
  {
    "text": "a pro subscriber at angular firebase",
    "start": "528680",
    "end": "530779"
  },
  {
    "text": "comm you'll get access to a support",
    "start": "530779",
    "end": "532790"
  },
  {
    "text": "network designed to help you get your",
    "start": "532790",
    "end": "534560"
  },
  {
    "text": "app built and shipped into production as",
    "start": "534560",
    "end": "536660"
  },
  {
    "text": "well as a free copy my book and access",
    "start": "536660",
    "end": "538970"
  },
  {
    "text": "to exclusive content every week thanks",
    "start": "538970",
    "end": "541579"
  },
  {
    "text": "for watching and I'll see you soon",
    "start": "541579",
    "end": "543830"
  },
  {
    "text": "[Music]",
    "start": "543830",
    "end": "545190"
  },
  {
    "text": "[Applause]",
    "start": "545190",
    "end": "546110"
  },
  {
    "text": "[Music]",
    "start": "546110",
    "end": "550589"
  }
]