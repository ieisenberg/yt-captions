[
  {
    "start": "0",
    "end": "49000"
  },
  {
    "text": "HTML forms are usually very boring but",
    "start": "1370",
    "end": "4020"
  },
  {
    "text": "there's no reason that they can't be one",
    "start": "4020",
    "end": "5460"
  },
  {
    "text": "of the most creative aspects of your UI",
    "start": "5460",
    "end": "7170"
  },
  {
    "text": "and you don't even need a library like",
    "start": "7170",
    "end": "8849"
  },
  {
    "text": "material design to make that happen in",
    "start": "8849",
    "end": "10620"
  },
  {
    "text": "today's video we'll build an animated",
    "start": "10620",
    "end": "12450"
  },
  {
    "text": "login form from scratch with HTML and",
    "start": "12450",
    "end": "14639"
  },
  {
    "text": "CSS notice how it moves the label up",
    "start": "14639",
    "end": "16980"
  },
  {
    "text": "when an input field is focused and also",
    "start": "16980",
    "end": "19199"
  },
  {
    "text": "slides in a border underneath but when",
    "start": "19199",
    "end": "21119"
  },
  {
    "text": "it comes to the password we'll throw in",
    "start": "21119",
    "end": "22590"
  },
  {
    "text": "some JavaScript with spell to take",
    "start": "22590",
    "end": "24300"
  },
  {
    "text": "things to another level we'll write a",
    "start": "24300",
    "end": "25890"
  },
  {
    "text": "simple algorithm to analyze the password",
    "start": "25890",
    "end": "27960"
  },
  {
    "text": "strength then show the end user a",
    "start": "27960",
    "end": "29580"
  },
  {
    "text": "strength meter along with validation",
    "start": "29580",
    "end": "31590"
  },
  {
    "text": "errors based on the content of their",
    "start": "31590",
    "end": "33239"
  },
  {
    "text": "password in order to make all this",
    "start": "33239",
    "end": "34739"
  },
  {
    "text": "happen from scratch they learned about",
    "start": "34739",
    "end": "36180"
  },
  {
    "text": "CSS transforms and transition animations",
    "start": "36180",
    "end": "38460"
  },
  {
    "text": "pseudo elements like after box shadows",
    "start": "38460",
    "end": "41040"
  },
  {
    "text": "and gradients and even a little bit of",
    "start": "41040",
    "end": "42870"
  },
  {
    "text": "red X if you're new here like and",
    "start": "42870",
    "end": "44579"
  },
  {
    "text": "subscribe and if you like the format of",
    "start": "44579",
    "end": "46350"
  },
  {
    "text": "this video make sure to let me know what",
    "start": "46350",
    "end": "47969"
  },
  {
    "text": "you want to see next in the comments",
    "start": "47969",
    "end": "49050"
  },
  {
    "start": "49000",
    "end": "115000"
  },
  {
    "text": "let's start by taking a closer look at",
    "start": "49050",
    "end": "51059"
  },
  {
    "text": "what we're building today what we have",
    "start": "51059",
    "end": "52410"
  },
  {
    "text": "here is just a regular HTML form input",
    "start": "52410",
    "end": "54809"
  },
  {
    "text": "along with a label when the user focuses",
    "start": "54809",
    "end": "56969"
  },
  {
    "text": "in on a form input we translate the",
    "start": "56969",
    "end": "58770"
  },
  {
    "text": "label up along the y-axis and scale it",
    "start": "58770",
    "end": "61079"
  },
  {
    "text": "down a little bit this behavior was made",
    "start": "61079",
    "end": "62910"
  },
  {
    "text": "famous by material design but you can",
    "start": "62910",
    "end": "64920"
  },
  {
    "text": "easily implement it on your own with",
    "start": "64920",
    "end": "66479"
  },
  {
    "text": "just a few lines of CSS when the input",
    "start": "66479",
    "end": "68549"
  },
  {
    "text": "is focused we also animate in a border",
    "start": "68549",
    "end": "70680"
  },
  {
    "text": "from the left side but it's not handled",
    "start": "70680",
    "end": "72510"
  },
  {
    "text": "with a border it actually uses a CSS",
    "start": "72510",
    "end": "74610"
  },
  {
    "text": "pseudo element which we'll talk about",
    "start": "74610",
    "end": "75930"
  },
  {
    "text": "later",
    "start": "75930",
    "end": "76500"
  },
  {
    "text": "now our password field is really over",
    "start": "76500",
    "end": "78119"
  },
  {
    "text": "the top when the user starts typing it",
    "start": "78119",
    "end": "79890"
  },
  {
    "text": "animates this password meter based on",
    "start": "79890",
    "end": "81750"
  },
  {
    "text": "the strength of the password I'll show",
    "start": "81750",
    "end": "83250"
  },
  {
    "text": "you how to use a box shadow to create",
    "start": "83250",
    "end": "84900"
  },
  {
    "text": "this shudder like effect for each bar in",
    "start": "84900",
    "end": "86970"
  },
  {
    "text": "the meter in addition we'll also",
    "start": "86970",
    "end": "88799"
  },
  {
    "text": "validate different patterns in the",
    "start": "88799",
    "end": "90270"
  },
  {
    "text": "password string to show the user",
    "start": "90270",
    "end": "92009"
  },
  {
    "text": "specific validation errors and finally",
    "start": "92009",
    "end": "94290"
  },
  {
    "text": "we'll add a little button in the form",
    "start": "94290",
    "end": "95700"
  },
  {
    "text": "input so the user can see their password",
    "start": "95700",
    "end": "97829"
  },
  {
    "text": "text this tutorial is designed for you",
    "start": "97829",
    "end": "100200"
  },
  {
    "text": "to follow along step by step and you can",
    "start": "100200",
    "end": "101850"
  },
  {
    "text": "find the project's source code on github",
    "start": "101850",
    "end": "103409"
  },
  {
    "text": "well mostly be talking about HTML and",
    "start": "103409",
    "end": "105689"
  },
  {
    "text": "CSS but we'll use felt to you manage our",
    "start": "105689",
    "end": "107880"
  },
  {
    "text": "JavaScript and application state and if",
    "start": "107880",
    "end": "110130"
  },
  {
    "text": "you've never used smelt before don't",
    "start": "110130",
    "end": "111540"
  },
  {
    "text": "worry you're gonna love it it's super",
    "start": "111540",
    "end": "113130"
  },
  {
    "text": "intuitive and easy to learn to get",
    "start": "113130",
    "end": "114960"
  },
  {
    "text": "things started we'll head over to spelt",
    "start": "114960",
    "end": "116520"
  },
  {
    "start": "115000",
    "end": "195000"
  },
  {
    "text": "dev you'll see a command here that you",
    "start": "116520",
    "end": "118439"
  },
  {
    "text": "can run with NP X to create a new small",
    "start": "118439",
    "end": "120509"
  },
  {
    "text": "project go ahead and run these commands",
    "start": "120509",
    "end": "122399"
  },
  {
    "text": "from the terminal then open up your",
    "start": "122399",
    "end": "124170"
  },
  {
    "text": "project in vs code and we're ready to go",
    "start": "124170",
    "end": "126240"
  },
  {
    "text": "in the source directory you'll see a",
    "start": "126240",
    "end": "127920"
  },
  {
    "text": "file called",
    "start": "127920",
    "end": "128670"
  },
  {
    "text": "app guts felt this is where we'll be",
    "start": "128670",
    "end": "130319"
  },
  {
    "text": "writing all of our code for now you can",
    "start": "130319",
    "end": "132420"
  },
  {
    "text": "treat this file like a regular",
    "start": "132420",
    "end": "133860"
  },
  {
    "text": "HTML file we'll set up a script tag this",
    "start": "133860",
    "end": "136290"
  },
  {
    "text": "is where our JavaScript will go then a",
    "start": "136290",
    "end": "138060"
  },
  {
    "text": "style tag is where our CSS will go",
    "start": "138060",
    "end": "140220"
  },
  {
    "text": "everything outside of these tags will be",
    "start": "140220",
    "end": "142140"
  },
  {
    "text": "our main HTML markup towards the end of",
    "start": "142140",
    "end": "144420"
  },
  {
    "text": "the video you'll learn how spelt can",
    "start": "144420",
    "end": "145950"
  },
  {
    "text": "magically connect your JavaScript to",
    "start": "145950",
    "end": "147630"
  },
  {
    "text": "your HTML now one side note here is that",
    "start": "147630",
    "end": "150030"
  },
  {
    "text": "if you go into the public folder you'll",
    "start": "150030",
    "end": "151440"
  },
  {
    "text": "also see a global dot CSS file in my",
    "start": "151440",
    "end": "154080"
  },
  {
    "text": "demo I modified the body styles to have",
    "start": "154080",
    "end": "156120"
  },
  {
    "text": "a black background with white text now",
    "start": "156120",
    "end": "158550"
  },
  {
    "text": "back in our main app component we'll",
    "start": "158550",
    "end": "160140"
  },
  {
    "text": "start by setting up the mark-up for the",
    "start": "160140",
    "end": "161850"
  },
  {
    "text": "initial HTML form we have a main element",
    "start": "161850",
    "end": "164310"
  },
  {
    "text": "with a form element nested inside and",
    "start": "164310",
    "end": "166590"
  },
  {
    "text": "then inside that we have a div with a",
    "start": "166590",
    "end": "169260"
  },
  {
    "text": "class of field that is basically a",
    "start": "169260",
    "end": "171120"
  },
  {
    "text": "container for the input and label inside",
    "start": "171120",
    "end": "173820"
  },
  {
    "text": "of this div we'll add the actual form",
    "start": "173820",
    "end": "175500"
  },
  {
    "text": "input and we'll make sure to give it a",
    "start": "175500",
    "end": "177060"
  },
  {
    "text": "type of email after the input we'll add",
    "start": "177060",
    "end": "179280"
  },
  {
    "text": "the label and it's important that this",
    "start": "179280",
    "end": "180930"
  },
  {
    "text": "label comes after the input and I'll",
    "start": "180930",
    "end": "183300"
  },
  {
    "text": "tell you why that's important when we",
    "start": "183300",
    "end": "184560"
  },
  {
    "text": "get to the relevant CSS code then we'll",
    "start": "184560",
    "end": "186390"
  },
  {
    "text": "do the same exact thing for our password",
    "start": "186390",
    "end": "187890"
  },
  {
    "text": "field but give it a type of password if",
    "start": "187890",
    "end": "189900"
  },
  {
    "text": "you open up the app on localhost 5,000",
    "start": "189900",
    "end": "192090"
  },
  {
    "text": "you should have a basic form that looks",
    "start": "192090",
    "end": "193620"
  },
  {
    "text": "like this back in our code we'll start",
    "start": "193620",
    "end": "196620"
  },
  {
    "start": "195000",
    "end": "290000"
  },
  {
    "text": "by targeting in the form element I'm",
    "start": "196620",
    "end": "198030"
  },
  {
    "text": "going to be using a gray text color",
    "start": "198030",
    "end": "199980"
  },
  {
    "text": "throughout my Styles so I'm going to set",
    "start": "199980",
    "end": "201870"
  },
  {
    "text": "that up as a CSS variable here that'll",
    "start": "201870",
    "end": "204360"
  },
  {
    "text": "make it really easy to change the color",
    "start": "204360",
    "end": "205650"
  },
  {
    "text": "of the form if we decide to in the",
    "start": "205650",
    "end": "207150"
  },
  {
    "text": "future and then we'll set the max width",
    "start": "207150",
    "end": "208860"
  },
  {
    "text": "of the form to 500 pixels then we'll",
    "start": "208860",
    "end": "210870"
  },
  {
    "text": "define our field style which is",
    "start": "210870",
    "end": "212400"
  },
  {
    "text": "basically a container for the input and",
    "start": "212400",
    "end": "214230"
  },
  {
    "text": "label we'll give it a width of 100% and",
    "start": "214230",
    "end": "216780"
  },
  {
    "text": "then we'll change the position to",
    "start": "216780",
    "end": "218310"
  },
  {
    "text": "relative by default a div has static",
    "start": "218310",
    "end": "221100"
  },
  {
    "text": "positioning the difference here is very",
    "start": "221100",
    "end": "222989"
  },
  {
    "text": "subtle but the most important thing to",
    "start": "222989",
    "end": "224820"
  },
  {
    "text": "know is that when you use relative",
    "start": "224820",
    "end": "226230"
  },
  {
    "text": "positioning it means you can use",
    "start": "226230",
    "end": "227580"
  },
  {
    "text": "properties like top left bottom and",
    "start": "227580",
    "end": "229739"
  },
  {
    "text": "right to control where this elements",
    "start": "229739",
    "end": "231330"
  },
  {
    "text": "it's relative to its normal position",
    "start": "231330",
    "end": "232860"
  },
  {
    "text": "from there we'll give it a - pixel -",
    "start": "232860",
    "end": "235260"
  },
  {
    "text": "border on the bottom that uses our text",
    "start": "235260",
    "end": "237269"
  },
  {
    "text": "color variable then we'll provide a good",
    "start": "237269",
    "end": "239220"
  },
  {
    "text": "size margin here to make room for our",
    "start": "239220",
    "end": "240780"
  },
  {
    "text": "animations because I'm providing three",
    "start": "240780",
    "end": "242730"
  },
  {
    "text": "values here the margin will work like",
    "start": "242730",
    "end": "244200"
  },
  {
    "text": "this the top margin will be four REM the",
    "start": "244200",
    "end": "246480"
  },
  {
    "text": "left and right margins will be auto and",
    "start": "246480",
    "end": "248250"
  },
  {
    "text": "the bottom margin will be one REM 1r n",
    "start": "248250",
    "end": "250920"
  },
  {
    "text": "is equal to the root font size of the",
    "start": "250920",
    "end": "252810"
  },
  {
    "text": "HTML so if you have a font size of 16",
    "start": "252810",
    "end": "254910"
  },
  {
    "text": "pixels one REM is 16 pixels and then",
    "start": "254910",
    "end": "258000"
  },
  {
    "text": "we'll override a bunch of styles on the",
    "start": "258000",
    "end": "259620"
  },
  {
    "text": "input like the outline border overflow",
    "start": "259620",
    "end": "262410"
  },
  {
    "text": "and so on the input will basically just",
    "start": "262410",
    "end": "264570"
  },
  {
    "text": "sit inside the container while its",
    "start": "264570",
    "end": "266160"
  },
  {
    "text": "parent field class will hand",
    "start": "266160",
    "end": "267660"
  },
  {
    "text": "all of the fancy animation stuff now",
    "start": "267660",
    "end": "269670"
  },
  {
    "text": "because our input has a type of email it",
    "start": "269670",
    "end": "271710"
  },
  {
    "text": "will automatically be validated by the",
    "start": "271710",
    "end": "273180"
  },
  {
    "text": "browser we can actually target the",
    "start": "273180",
    "end": "274950"
  },
  {
    "text": "pseudo selectors of valid and invalid to",
    "start": "274950",
    "end": "277560"
  },
  {
    "text": "give the input text a different color",
    "start": "277560",
    "end": "279030"
  },
  {
    "text": "based on whether or not it's a valid",
    "start": "279030",
    "end": "280710"
  },
  {
    "text": "email address you should now have a form",
    "start": "280710",
    "end": "282660"
  },
  {
    "text": "that looks like this and as you can see",
    "start": "282660",
    "end": "284370"
  },
  {
    "text": "when you type your email address in it",
    "start": "284370",
    "end": "286230"
  },
  {
    "text": "goes from red to green when it becomes a",
    "start": "286230",
    "end": "288360"
  },
  {
    "text": "valid email and now we're ready to get",
    "start": "288360",
    "end": "289980"
  },
  {
    "text": "into the fun stuff let's look at how we",
    "start": "289980",
    "end": "291570"
  },
  {
    "start": "290000",
    "end": "406000"
  },
  {
    "text": "can make that border animation when a",
    "start": "291570",
    "end": "293130"
  },
  {
    "text": "form field is focused we'll do that by",
    "start": "293130",
    "end": "295320"
  },
  {
    "text": "targeting the after pseudo element on",
    "start": "295320",
    "end": "297300"
  },
  {
    "text": "the field many HTML elements like a div",
    "start": "297300",
    "end": "300030"
  },
  {
    "text": "have pseudo elements that you can target",
    "start": "300030",
    "end": "301890"
  },
  {
    "text": "in style after is like an invisible",
    "start": "301890",
    "end": "304020"
  },
  {
    "text": "element that comes after your div it",
    "start": "304020",
    "end": "306270"
  },
  {
    "text": "never appears in your HTML markup but if",
    "start": "306270",
    "end": "308490"
  },
  {
    "text": "you go into the browser's inspector",
    "start": "308490",
    "end": "309840"
  },
  {
    "text": "you'll see it listed there when you have",
    "start": "309840",
    "end": "311880"
  },
  {
    "text": "a style targeting it and in our case",
    "start": "311880",
    "end": "313530"
  },
  {
    "text": "we'll use it to display a border",
    "start": "313530",
    "end": "315000"
  },
  {
    "text": "underneath the field the advantage in",
    "start": "315000",
    "end": "316710"
  },
  {
    "text": "this case over a regular CSS border is",
    "start": "316710",
    "end": "318720"
  },
  {
    "text": "that we can use transforms to apply",
    "start": "318720",
    "end": "320430"
  },
  {
    "text": "fancy animations to it we'll give it a",
    "start": "320430",
    "end": "322470"
  },
  {
    "text": "position of relative and then a height",
    "start": "322470",
    "end": "324450"
  },
  {
    "text": "of 4 pixels a width of 100% and a purple",
    "start": "324450",
    "end": "327570"
  },
  {
    "text": "background now by default we want this",
    "start": "327570",
    "end": "329880"
  },
  {
    "text": "element to be hidden we can hide it with",
    "start": "329880",
    "end": "331890"
  },
  {
    "text": "a transform by setting the scale along",
    "start": "331890",
    "end": "334140"
  },
  {
    "text": "the x-axis to zero and the reason we use",
    "start": "334140",
    "end": "336480"
  },
  {
    "text": "scale X here and not just scale is",
    "start": "336480",
    "end": "338550"
  },
  {
    "text": "because we want to preserve the height",
    "start": "338550",
    "end": "340380"
  },
  {
    "text": "when we animate it back in now by",
    "start": "340380",
    "end": "342330"
  },
  {
    "text": "default the transform will happen right",
    "start": "342330",
    "end": "343860"
  },
  {
    "text": "in the middle of its position however we",
    "start": "343860",
    "end": "345870"
  },
  {
    "text": "want it to animate in from left to right",
    "start": "345870",
    "end": "347640"
  },
  {
    "text": "so we set the transform origin to 0%",
    "start": "347640",
    "end": "350160"
  },
  {
    "text": "however if you wanted to go from right",
    "start": "350160",
    "end": "352500"
  },
  {
    "text": "to left you could set the transform",
    "start": "352500",
    "end": "354150"
  },
  {
    "text": "origin to 100% now to animate it we",
    "start": "354150",
    "end": "357120"
  },
  {
    "text": "simply set up a transition that targets",
    "start": "357120",
    "end": "359280"
  },
  {
    "text": "the transform property we'll set it 4 or",
    "start": "359280",
    "end": "361350"
  },
  {
    "text": "500 milliseconds and give it an easing",
    "start": "361350",
    "end": "363570"
  },
  {
    "text": "timing function and then because it's",
    "start": "363570",
    "end": "365370"
  },
  {
    "text": "relatively positioned we'll set its top",
    "start": "365370",
    "end": "367140"
  },
  {
    "text": "property to 2 pixels that'll just move",
    "start": "367140",
    "end": "369330"
  },
  {
    "text": "it down slightly to cover the existing",
    "start": "369330",
    "end": "371100"
  },
  {
    "text": "border now in order to have an animation",
    "start": "371100",
    "end": "372960"
  },
  {
    "text": "we need some sort of state change we",
    "start": "372960",
    "end": "375210"
  },
  {
    "text": "want that state change to happen when",
    "start": "375210",
    "end": "376770"
  },
  {
    "text": "the input is focused however the actual",
    "start": "376770",
    "end": "379020"
  },
  {
    "text": "styles were changing are on the field",
    "start": "379020",
    "end": "380700"
  },
  {
    "text": "div CSS has a very useful Osito selector",
    "start": "380700",
    "end": "383550"
  },
  {
    "text": "called focus within when the inner input",
    "start": "383550",
    "end": "385620"
  },
  {
    "text": "is focused we can change styles on the",
    "start": "385620",
    "end": "387330"
  },
  {
    "text": "outer field div we can set the border",
    "start": "387330",
    "end": "389760"
  },
  {
    "text": "color to transparent and then we'll",
    "start": "389760",
    "end": "391560"
  },
  {
    "text": "target the after pseudo element and",
    "start": "391560",
    "end": "393330"
  },
  {
    "text": "we'll set its transform to scale x1 and",
    "start": "393330",
    "end": "396330"
  },
  {
    "text": "that will make it appear to slide in",
    "start": "396330",
    "end": "397830"
  },
  {
    "text": "from left to right at this point you",
    "start": "397830",
    "end": "400020"
  },
  {
    "text": "have a cool looking animated",
    "start": "400020",
    "end": "401150"
  },
  {
    "text": "order but the label isn't positioned",
    "start": "401150",
    "end": "403040"
  },
  {
    "text": "right at all so how do we create that",
    "start": "403040",
    "end": "404720"
  },
  {
    "text": "material design label animation in the",
    "start": "404720",
    "end": "406820"
  },
  {
    "start": "406000",
    "end": "490000"
  },
  {
    "text": "label class will first set AZ index of",
    "start": "406820",
    "end": "409040"
  },
  {
    "text": "negative 1 remember in the HTML the",
    "start": "409040",
    "end": "411650"
  },
  {
    "text": "label comes after the input so",
    "start": "411650",
    "end": "413390"
  },
  {
    "text": "technically it sits on top of it but",
    "start": "413390",
    "end": "415220"
  },
  {
    "text": "setting AZ index of negative 1 will make",
    "start": "415220",
    "end": "417230"
  },
  {
    "text": "the label as if it sits behind at the",
    "start": "417230",
    "end": "419270"
  },
  {
    "text": "actual form input will make its position",
    "start": "419270",
    "end": "421130"
  },
  {
    "text": "absolute which means it's relative",
    "start": "421130",
    "end": "423290"
  },
  {
    "text": "normally to the entire document or the",
    "start": "423290",
    "end": "425570"
  },
  {
    "text": "next relatively positioned element",
    "start": "425570",
    "end": "427250"
  },
  {
    "text": "further up in the tree which in our case",
    "start": "427250",
    "end": "428930"
  },
  {
    "text": "happens to be the field div which",
    "start": "428930",
    "end": "430580"
  },
  {
    "text": "contains the label next we'll use a",
    "start": "430580",
    "end": "432620"
  },
  {
    "text": "transform to move along the y axis and",
    "start": "432620",
    "end": "434840"
  },
  {
    "text": "with a negative value that will move it",
    "start": "434840",
    "end": "436370"
  },
  {
    "text": "up higher along the y axis",
    "start": "436370",
    "end": "438140"
  },
  {
    "text": "we'll set a transform origin of 0% and",
    "start": "438140",
    "end": "440960"
  },
  {
    "text": "then also set up a transition here to",
    "start": "440960",
    "end": "443030"
  },
  {
    "text": "animate it now just like our animated",
    "start": "443030",
    "end": "444860"
  },
  {
    "text": "border we can target the label by using",
    "start": "444860",
    "end": "446900"
  },
  {
    "text": "field focus within when it's focused",
    "start": "446900",
    "end": "449630"
  },
  {
    "text": "we'll go ahead and transform it with a",
    "start": "449630",
    "end": "451370"
  },
  {
    "text": "scale of 0.08 making it slightly smaller",
    "start": "451370",
    "end": "453680"
  },
  {
    "text": "and then we'll translate it further up",
    "start": "453680",
    "end": "455570"
  },
  {
    "text": "the y axis at this point your animation",
    "start": "455570",
    "end": "457910"
  },
  {
    "text": "should work but you'll notice when we",
    "start": "457910",
    "end": "459380"
  },
  {
    "text": "type into the form the label comes back",
    "start": "459380",
    "end": "461330"
  },
  {
    "text": "down into the form field covering up the",
    "start": "461330",
    "end": "463100"
  },
  {
    "text": "user's text and that's not going to work",
    "start": "463100",
    "end": "464990"
  },
  {
    "text": "this is why it's important that the",
    "start": "464990",
    "end": "466610"
  },
  {
    "text": "label comes after the input because it",
    "start": "466610",
    "end": "468740"
  },
  {
    "text": "allows us to target the input when it's",
    "start": "468740",
    "end": "471170"
  },
  {
    "text": "placeholder is not shown or in other",
    "start": "471170",
    "end": "473300"
  },
  {
    "text": "words when the user has typed something",
    "start": "473300",
    "end": "474980"
  },
  {
    "text": "into the form and we can use the plus",
    "start": "474980",
    "end": "476690"
  },
  {
    "text": "sign to target the next sibling that has",
    "start": "476690",
    "end": "478730"
  },
  {
    "text": "a class of label so this means the label",
    "start": "478730",
    "end": "480950"
  },
  {
    "text": "will be positioned in the right spot if",
    "start": "480950",
    "end": "482390"
  },
  {
    "text": "the field either has focus or if it has",
    "start": "482390",
    "end": "484370"
  },
  {
    "text": "text inside the input and now we're",
    "start": "484370",
    "end": "486950"
  },
  {
    "text": "ready to start building out our password",
    "start": "486950",
    "end": "488630"
  },
  {
    "text": "validation meter we'll go back into our",
    "start": "488630",
    "end": "491060"
  },
  {
    "text": "HTML markup and add a div with a class",
    "start": "491060",
    "end": "493430"
  },
  {
    "text": "of strength then inside that div we'll",
    "start": "493430",
    "end": "495950"
  },
  {
    "text": "have 4 spans each with a class of bar",
    "start": "495950",
    "end": "498260"
  },
  {
    "text": "and each with a unique class four bars",
    "start": "498260",
    "end": "500480"
  },
  {
    "text": "one two three and four then directly",
    "start": "500480",
    "end": "502730"
  },
  {
    "text": "below that we'll add an unordered list",
    "start": "502730",
    "end": "504380"
  },
  {
    "text": "with ap validation error messages now up",
    "start": "504380",
    "end": "507590"
  },
  {
    "text": "in our CSS we'll define the strength",
    "start": "507590",
    "end": "509390"
  },
  {
    "text": "class as a flexible row that has a",
    "start": "509390",
    "end": "511580"
  },
  {
    "text": "height of exactly 20 pixels and a width",
    "start": "511580",
    "end": "514070"
  },
  {
    "text": "of a hundred percent now each of the",
    "start": "514070",
    "end": "516140"
  },
  {
    "text": "bars inside this flexible row will have",
    "start": "516140",
    "end": "517940"
  },
  {
    "text": "a margin right of 5 pixels a height of",
    "start": "517940",
    "end": "520130"
  },
  {
    "text": "100% and a width of 25% so each",
    "start": "520130",
    "end": "523760"
  },
  {
    "text": "individual bar in the password meter",
    "start": "523760",
    "end": "525350"
  },
  {
    "text": "will take up exactly 25 percent of the",
    "start": "525350",
    "end": "527540"
  },
  {
    "text": "parents width now each individual bar",
    "start": "527540",
    "end": "529400"
  },
  {
    "text": "can be animated in or out with a little",
    "start": "529400",
    "end": "531500"
  },
  {
    "text": "shudder effect using a black shadow so",
    "start": "531500",
    "end": "533720"
  },
  {
    "text": "we'll set that up as a train",
    "start": "533720",
    "end": "534770"
  },
  {
    "text": "now and then our buck shadow will be",
    "start": "534770",
    "end": "537290"
  },
  {
    "text": "inset with an offset on the x-axis of",
    "start": "537290",
    "end": "539990"
  },
  {
    "text": "zero pixels and an offset of 20 pixels",
    "start": "539990",
    "end": "542390"
  },
  {
    "text": "on the y-axis the result of this code is",
    "start": "542390",
    "end": "545060"
  },
  {
    "text": "an inner shadow that covers up the",
    "start": "545060",
    "end": "546770"
  },
  {
    "text": "entire element because remember the",
    "start": "546770",
    "end": "548330"
  },
  {
    "text": "parent elements height is exactly 20",
    "start": "548330",
    "end": "550100"
  },
  {
    "text": "pixels and the offset Y here is exactly",
    "start": "550100",
    "end": "552649"
  },
  {
    "text": "20 pixels as well when we want to show",
    "start": "552649",
    "end": "554720"
  },
  {
    "text": "the colors inside one of these bars we",
    "start": "554720",
    "end": "556399"
  },
  {
    "text": "can simply set the block shadow to none",
    "start": "556399",
    "end": "558220"
  },
  {
    "text": "now each individual bar has its own",
    "start": "558220",
    "end": "560839"
  },
  {
    "text": "color gradient so for bar one we'll set",
    "start": "560839",
    "end": "563270"
  },
  {
    "text": "a background that's equal to a linear",
    "start": "563270",
    "end": "565250"
  },
  {
    "text": "gradient that moves from left to right",
    "start": "565250",
    "end": "567470"
  },
  {
    "text": "on the left side we'll have red and then",
    "start": "567470",
    "end": "569990"
  },
  {
    "text": "it will gradually transition to orange",
    "start": "569990",
    "end": "572060"
  },
  {
    "text": "red on the right side then we'll do the",
    "start": "572060",
    "end": "573920"
  },
  {
    "text": "same thing for all the other bars after",
    "start": "573920",
    "end": "575510"
  },
  {
    "text": "that where the color on the left side is",
    "start": "575510",
    "end": "577700"
  },
  {
    "text": "the color that ended on the right side",
    "start": "577700",
    "end": "579290"
  },
  {
    "text": "from the previous bar your demo at this",
    "start": "579290",
    "end": "581450"
  },
  {
    "text": "point should have four gray bars but if",
    "start": "581450",
    "end": "583670"
  },
  {
    "text": "you go back in your source code and call",
    "start": "583670",
    "end": "585440"
  },
  {
    "text": "Matt out the black shadow then you",
    "start": "585440",
    "end": "587000"
  },
  {
    "text": "should see your color gradient okay so",
    "start": "587000",
    "end": "590209"
  },
  {
    "text": "at this point everything we've done has",
    "start": "590209",
    "end": "591770"
  },
  {
    "text": "been just plain HTML CSS but now we're",
    "start": "591770",
    "end": "594950"
  },
  {
    "text": "going to make this app reactive and",
    "start": "594950",
    "end": "596450"
  },
  {
    "text": "interactive with spell the first thing",
    "start": "596450",
    "end": "598279"
  },
  {
    "text": "we'll do is go up into our script and",
    "start": "598279",
    "end": "600020"
  },
  {
    "text": "add a variable for strength as a number",
    "start": "600020",
    "end": "602540"
  },
  {
    "text": "that starts at zero and a second",
    "start": "602540",
    "end": "604520"
  },
  {
    "text": "variable validations which starts as an",
    "start": "604520",
    "end": "606770"
  },
  {
    "text": "empty array and the beauty of spelt is",
    "start": "606770",
    "end": "608870"
  },
  {
    "text": "that this is all you have to do to",
    "start": "608870",
    "end": "610520"
  },
  {
    "text": "create reactive State in your",
    "start": "610520",
    "end": "611870"
  },
  {
    "text": "application anytime the strength or",
    "start": "611870",
    "end": "613910"
  },
  {
    "text": "validations values change the component",
    "start": "613910",
    "end": "616279"
  },
  {
    "text": "will rerender to display the latest",
    "start": "616279",
    "end": "617870"
  },
  {
    "text": "values in our case we want the state to",
    "start": "617870",
    "end": "619970"
  },
  {
    "text": "change every time the user types into",
    "start": "619970",
    "end": "622010"
  },
  {
    "text": "the password form field and we'll do",
    "start": "622010",
    "end": "623899"
  },
  {
    "text": "that by running a function that",
    "start": "623899",
    "end": "625220"
  },
  {
    "text": "validates their password after each",
    "start": "625220",
    "end": "627200"
  },
  {
    "text": "input this function will take the event",
    "start": "627200",
    "end": "629600"
  },
  {
    "text": "as an argument and then we can get the",
    "start": "629600",
    "end": "631430"
  },
  {
    "text": "actual string value of the password by",
    "start": "631430",
    "end": "633470"
  },
  {
    "text": "calling event target value now to",
    "start": "633470",
    "end": "636020"
  },
  {
    "text": "validate the password we have four",
    "start": "636020",
    "end": "637670"
  },
  {
    "text": "different rules that we want to apply",
    "start": "637670",
    "end": "638930"
  },
  {
    "text": "and we can define those rules as an",
    "start": "638930",
    "end": "641270"
  },
  {
    "text": "array where each value in that array is",
    "start": "641270",
    "end": "643459"
  },
  {
    "text": "a boolean value that's true or false",
    "start": "643459",
    "end": "645350"
  },
  {
    "text": "whether or not the user has passed that",
    "start": "645350",
    "end": "647180"
  },
  {
    "text": "rule with their input so if the password",
    "start": "647180",
    "end": "649520"
  },
  {
    "text": "length is greater than 5 then we know",
    "start": "649520",
    "end": "651649"
  },
  {
    "text": "that the validation rule at index 0 has",
    "start": "651649",
    "end": "653779"
  },
  {
    "text": "been passed the next rule at index 1 in",
    "start": "653779",
    "end": "656390"
  },
  {
    "text": "the array performs a reg X search",
    "start": "656390",
    "end": "657980"
  },
  {
    "text": "regular expressions are pretty weird but",
    "start": "657980",
    "end": "660140"
  },
  {
    "text": "we have some pretty simple use cases",
    "start": "660140",
    "end": "661579"
  },
  {
    "text": "here this first rule will search the",
    "start": "661579",
    "end": "663740"
  },
  {
    "text": "string for any capital letters ranging",
    "start": "663740",
    "end": "666020"
  },
  {
    "text": "from A to Z if it doesn't find any",
    "start": "666020",
    "end": "668670"
  },
  {
    "text": "it's negative one so we know we have a",
    "start": "668670",
    "end": "670380"
  },
  {
    "text": "capital letter in the string if it's",
    "start": "670380",
    "end": "672090"
  },
  {
    "text": "greater than negative 1 our next",
    "start": "672090",
    "end": "673800"
  },
  {
    "text": "validation will search through the",
    "start": "673800",
    "end": "675270"
  },
  {
    "text": "digits of 0 to 9 to see if they have a",
    "start": "675270",
    "end": "677490"
  },
  {
    "text": "number in their password and the fourth",
    "start": "677490",
    "end": "679500"
  },
  {
    "text": "and final validation will look for a",
    "start": "679500",
    "end": "681180"
  },
  {
    "text": "series of special characters now at this",
    "start": "681180",
    "end": "683460"
  },
  {
    "text": "point we have an array of 4 boolean",
    "start": "683460",
    "end": "685380"
  },
  {
    "text": "values that will be updated every time",
    "start": "685380",
    "end": "687330"
  },
  {
    "text": "the user types into the form in",
    "start": "687330",
    "end": "688680"
  },
  {
    "text": "JavaScript we can calculate the total",
    "start": "688680",
    "end": "690630"
  },
  {
    "text": "strength of the password by adding up",
    "start": "690630",
    "end": "692550"
  },
  {
    "text": "these four boolean values assigning the",
    "start": "692550",
    "end": "694350"
  },
  {
    "text": "number 1 to each true value an easy way",
    "start": "694350",
    "end": "696840"
  },
  {
    "text": "to do that is with array reduce by",
    "start": "696840",
    "end": "698700"
  },
  {
    "text": "simply adding the accumulated value to",
    "start": "698700",
    "end": "700680"
  },
  {
    "text": "the current value giving us the sum of",
    "start": "700680",
    "end": "702750"
  },
  {
    "text": "all the values in the array that's",
    "start": "702750",
    "end": "704700"
  },
  {
    "text": "actually all the JavaScript code we need",
    "start": "704700",
    "end": "706230"
  },
  {
    "text": "at this point our next step is to bind",
    "start": "706230",
    "end": "708480"
  },
  {
    "text": "it to the actual HTML to use our",
    "start": "708480",
    "end": "710670"
  },
  {
    "text": "validate password function we need to go",
    "start": "710670",
    "end": "712560"
  },
  {
    "text": "down to our password input and listen to",
    "start": "712560",
    "end": "714900"
  },
  {
    "text": "the input event which we do with on and",
    "start": "714900",
    "end": "716910"
  },
  {
    "text": "spelt every time the user types into the",
    "start": "716910",
    "end": "718920"
  },
  {
    "text": "form the input event is fired and then",
    "start": "718920",
    "end": "721140"
  },
  {
    "text": "runs our validate password event handler",
    "start": "721140",
    "end": "723470"
  },
  {
    "text": "that'll update the state of the",
    "start": "723470",
    "end": "725160"
  },
  {
    "text": "application now we need to put that",
    "start": "725160",
    "end": "726780"
  },
  {
    "text": "state to use by binding it to our HTML",
    "start": "726780",
    "end": "728970"
  },
  {
    "text": "in spelt we can bind a class using this",
    "start": "728970",
    "end": "732300"
  },
  {
    "text": "class directive what this does is it",
    "start": "732300",
    "end": "734700"
  },
  {
    "text": "only applies the bar show class which",
    "start": "734700",
    "end": "736680"
  },
  {
    "text": "will remove that box-shadow when the",
    "start": "736680",
    "end": "738540"
  },
  {
    "text": "right side evaluates to true so we'll",
    "start": "738540",
    "end": "740970"
  },
  {
    "text": "show the first bar when the strength is",
    "start": "740970",
    "end": "742680"
  },
  {
    "text": "greater than 0 then we'll show the",
    "start": "742680",
    "end": "744450"
  },
  {
    "text": "second bar when it's greater than 1",
    "start": "744450",
    "end": "745890"
  },
  {
    "text": "greater than 2 3 and so on now below",
    "start": "745890",
    "end": "749040"
  },
  {
    "text": "that we either want to show a green",
    "start": "749040",
    "end": "750690"
  },
  {
    "text": "check mark or a red X depending on",
    "start": "750690",
    "end": "752700"
  },
  {
    "text": "whether or not that validation has been",
    "start": "752700",
    "end": "754140"
  },
  {
    "text": "passed we can look at each validation by",
    "start": "754140",
    "end": "756390"
  },
  {
    "text": "its index and then use a ternary",
    "start": "756390",
    "end": "758010"
  },
  {
    "text": "operator to display a check mark when",
    "start": "758010",
    "end": "760290"
  },
  {
    "text": "true or an ex when false and then we can",
    "start": "760290",
    "end": "762810"
  },
  {
    "text": "follow the same pattern for each",
    "start": "762810",
    "end": "764130"
  },
  {
    "text": "validation message at this point if you",
    "start": "764130",
    "end": "766320"
  },
  {
    "text": "open up your demo you should be able to",
    "start": "766320",
    "end": "767820"
  },
  {
    "text": "type into the password field and see it",
    "start": "767820",
    "end": "769860"
  },
  {
    "text": "reactively update the state and the UI",
    "start": "769860",
    "end": "771900"
  },
  {
    "text": "and each time the password goes stronger",
    "start": "771900",
    "end": "774210"
  },
  {
    "text": "it should show the password bar with a",
    "start": "774210",
    "end": "776340"
  },
  {
    "text": "shudder like animation now we've already",
    "start": "776340",
    "end": "778320"
  },
  {
    "text": "done a lot at this point but there is",
    "start": "778320",
    "end": "779760"
  },
  {
    "text": "one more thing I want to show you and",
    "start": "779760",
    "end": "781050"
  },
  {
    "text": "that's implementing a way for the user",
    "start": "781050",
    "end": "782880"
  },
  {
    "text": "to preview their password before",
    "start": "782880",
    "end": "784320"
  },
  {
    "text": "submitting it will go up into our",
    "start": "784320",
    "end": "786120"
  },
  {
    "text": "JavaScript and first add a new property",
    "start": "786120",
    "end": "788040"
  },
  {
    "text": "called show password then in our CSS",
    "start": "788040",
    "end": "790440"
  },
  {
    "text": "I'll create a new class here called",
    "start": "790440",
    "end": "791970"
  },
  {
    "text": "toggle password which just absolutely",
    "start": "791970",
    "end": "794160"
  },
  {
    "text": "positions a button so it is displayed in",
    "start": "794160",
    "end": "796650"
  },
  {
    "text": "the right side of the actual form input",
    "start": "796650",
    "end": "798900"
  },
  {
    "text": "itself from there we'll go into our HTML",
    "start": "798900",
    "end": "801630"
  },
  {
    "text": "and",
    "start": "801630",
    "end": "802230"
  },
  {
    "text": "below the label for the password will",
    "start": "802230",
    "end": "804240"
  },
  {
    "text": "add a span that has the class of",
    "start": "804240",
    "end": "806280"
  },
  {
    "text": "tolerable password there are a few",
    "start": "806280",
    "end": "808560"
  },
  {
    "text": "different ways we could implement this",
    "start": "808560",
    "end": "809670"
  },
  {
    "text": "but I think a kind of unique way to do",
    "start": "809670",
    "end": "811260"
  },
  {
    "text": "this is to have the user preview their",
    "start": "811260",
    "end": "813180"
  },
  {
    "text": "password by hovering over the actual",
    "start": "813180",
    "end": "815010"
  },
  {
    "text": "button itself as opposed to clicking on",
    "start": "815010",
    "end": "816810"
  },
  {
    "text": "it we can do that by listening to the",
    "start": "816810",
    "end": "819150"
  },
  {
    "text": "mouse enter event and then we'll pass an",
    "start": "819150",
    "end": "821220"
  },
  {
    "text": "anonymous function here that simply",
    "start": "821220",
    "end": "822870"
  },
  {
    "text": "toggles the show password property to",
    "start": "822870",
    "end": "824670"
  },
  {
    "text": "true and then on Mouse leave will toggle",
    "start": "824670",
    "end": "826890"
  },
  {
    "text": "the show password value back to false",
    "start": "826890",
    "end": "828450"
  },
  {
    "text": "then inside the actual button content",
    "start": "828450",
    "end": "830760"
  },
  {
    "text": "will use a ternary operator here to show",
    "start": "830760",
    "end": "832890"
  },
  {
    "text": "a different emoji based on the state of",
    "start": "832890",
    "end": "834780"
  },
  {
    "text": "show password in the final magic to",
    "start": "834780",
    "end": "837030"
  },
  {
    "text": "convert this from a password field to a",
    "start": "837030",
    "end": "838530"
  },
  {
    "text": "text field is to go up here to the input",
    "start": "838530",
    "end": "840810"
  },
  {
    "text": "type and where we have a static string",
    "start": "840810",
    "end": "843030"
  },
  {
    "text": "value for password we'll use a dynamic",
    "start": "843030",
    "end": "845160"
  },
  {
    "text": "ternary that changes it from password to",
    "start": "845160",
    "end": "847830"
  },
  {
    "text": "text based on the state of the",
    "start": "847830",
    "end": "849120"
  },
  {
    "text": "application and now at this point you",
    "start": "849120",
    "end": "850920"
  },
  {
    "text": "should be able to preview the password",
    "start": "850920",
    "end": "852300"
  },
  {
    "text": "value by simply hovering over the emoji",
    "start": "852300",
    "end": "854370"
  },
  {
    "text": "like I'm gonna go ahead and wrap things",
    "start": "854370",
    "end": "855930"
  },
  {
    "text": "up there if you want to see more svelte",
    "start": "855930",
    "end": "857430"
  },
  {
    "text": "content or have more project ideas make",
    "start": "857430",
    "end": "859650"
  },
  {
    "text": "sure to let me know in the comments and",
    "start": "859650",
    "end": "860970"
  },
  {
    "text": "if you want access to more advanced",
    "start": "860970",
    "end": "862560"
  },
  {
    "text": "content consider becoming a pro member",
    "start": "862560",
    "end": "864480"
  },
  {
    "text": "at fire ship IO thanks for watching and",
    "start": "864480",
    "end": "866700"
  },
  {
    "text": "I will see you in the next one",
    "start": "866700",
    "end": "869880"
  },
  {
    "text": "[Music]",
    "start": "869880",
    "end": "878039"
  }
]