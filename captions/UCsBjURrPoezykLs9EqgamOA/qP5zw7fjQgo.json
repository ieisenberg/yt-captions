[
  {
    "text": "a single most important feature for many",
    "start": "0",
    "end": "8849"
  },
  {
    "text": "apps is the user authentication system",
    "start": "8849",
    "end": "10950"
  },
  {
    "text": "if you don't have a good way to sign-in",
    "start": "10950",
    "end": "12570"
  },
  {
    "text": "users and observe their data it's hard",
    "start": "12570",
    "end": "14639"
  },
  {
    "text": "to build out anything else in today's",
    "start": "14639",
    "end": "16470"
  },
  {
    "text": "video we'll implement Google OAuth via",
    "start": "16470",
    "end": "18390"
  },
  {
    "text": "firebase in an angular app in addition",
    "start": "18390",
    "end": "20400"
  },
  {
    "text": "we'll save custom information about the",
    "start": "20400",
    "end": "22289"
  },
  {
    "text": "user in the firestore database and we'll",
    "start": "22289",
    "end": "24449"
  },
  {
    "text": "implement full stack security on both",
    "start": "24449",
    "end": "26189"
  },
  {
    "text": "the front end and the back end so by the",
    "start": "26189",
    "end": "28230"
  },
  {
    "text": "end of this video you should have a",
    "start": "28230",
    "end": "29369"
  },
  {
    "text": "solid off system that you can build on",
    "start": "29369",
    "end": "31140"
  },
  {
    "text": "if you're new here like and subscribe",
    "start": "31140",
    "end": "33210"
  },
  {
    "text": "and you can find the full source code on",
    "start": "33210",
    "end": "34950"
  },
  {
    "text": "fire ship io and I'd like to quickly",
    "start": "34950",
    "end": "37290"
  },
  {
    "text": "point out that this is the first episode",
    "start": "37290",
    "end": "39270"
  },
  {
    "text": "with the new fire ship io channel name",
    "start": "39270",
    "end": "41129"
  },
  {
    "text": "but this video is actually a revision of",
    "start": "41129",
    "end": "43200"
  },
  {
    "text": "episode 55 from angular firebase over",
    "start": "43200",
    "end": "45960"
  },
  {
    "text": "the next few months I'll be revising and",
    "start": "45960",
    "end": "47430"
  },
  {
    "text": "updating a lot of that content so if",
    "start": "47430",
    "end": "49110"
  },
  {
    "text": "there's anything you want to see me",
    "start": "49110",
    "end": "50010"
  },
  {
    "text": "revisit let me know in the comments to",
    "start": "50010",
    "end": "52320"
  },
  {
    "text": "get started with this lesson you'll need",
    "start": "52320",
    "end": "53610"
  },
  {
    "text": "to have an angular app with angular fire",
    "start": "53610",
    "end": "55230"
  },
  {
    "text": "and firebase installed you can find full",
    "start": "55230",
    "end": "57420"
  },
  {
    "text": "instructions for that on the main lesson",
    "start": "57420",
    "end": "59070"
  },
  {
    "text": "page first we'll go into our firebase",
    "start": "59070",
    "end": "61350"
  },
  {
    "text": "project and under the authentication tab",
    "start": "61350",
    "end": "63390"
  },
  {
    "text": "we'll enable the Google sign-in method",
    "start": "63390",
    "end": "65369"
  },
  {
    "text": "from there we'll go ahead and enable",
    "start": "65369",
    "end": "67229"
  },
  {
    "text": "fire store and for now we'll leave the",
    "start": "67229",
    "end": "69030"
  },
  {
    "text": "security rules unlocked but we'll circle",
    "start": "69030",
    "end": "71220"
  },
  {
    "text": "back around to this at the end of the",
    "start": "71220",
    "end": "72450"
  },
  {
    "text": "video to secure the backend when we sign",
    "start": "72450",
    "end": "75509"
  },
  {
    "text": "in a user with firebase it's going to",
    "start": "75509",
    "end": "76979"
  },
  {
    "text": "create this authentication record but",
    "start": "76979",
    "end": "78900"
  },
  {
    "text": "it's very limited and we can't easily",
    "start": "78900",
    "end": "80430"
  },
  {
    "text": "customize it the important thing that it",
    "start": "80430",
    "end": "82920"
  },
  {
    "text": "gives us is a unique user ID which we",
    "start": "82920",
    "end": "84869"
  },
  {
    "text": "can use to model relational data in fire",
    "start": "84869",
    "end": "86939"
  },
  {
    "text": "store for example you might have a has",
    "start": "86939",
    "end": "89130"
  },
  {
    "text": "one relationship where a user has an",
    "start": "89130",
    "end": "90930"
  },
  {
    "text": "account and we can easily model that in",
    "start": "90930",
    "end": "92729"
  },
  {
    "text": "the database by just giving the document",
    "start": "92729",
    "end": "94500"
  },
  {
    "text": "itself the same user ID as the",
    "start": "94500",
    "end": "96000"
  },
  {
    "text": "authentication record now we'll jump",
    "start": "96000",
    "end": "98130"
  },
  {
    "text": "into angular and write some code that",
    "start": "98130",
    "end": "99750"
  },
  {
    "text": "can read write and react to this data in",
    "start": "99750",
    "end": "101970"
  },
  {
    "text": "real time your user authentication logic",
    "start": "101970",
    "end": "104670"
  },
  {
    "text": "and state is something that you'll be",
    "start": "104670",
    "end": "106409"
  },
  {
    "text": "managing globally so you'll want to have",
    "start": "106409",
    "end": "108000"
  },
  {
    "text": "it organized as an angular service so we",
    "start": "108000",
    "end": "110880"
  },
  {
    "text": "can go ahead and generate it with the",
    "start": "110880",
    "end": "112290"
  },
  {
    "text": "angular CLI by running ng generate",
    "start": "112290",
    "end": "114299"
  },
  {
    "text": "service and I'm putting it inside of a",
    "start": "114299",
    "end": "116850"
  },
  {
    "text": "services directory now before we get",
    "start": "116850",
    "end": "119250"
  },
  {
    "text": "into the service itself there's one",
    "start": "119250",
    "end": "120750"
  },
  {
    "text": "optional thing you can do here and",
    "start": "120750",
    "end": "122250"
  },
  {
    "text": "that's model your data as a typescript",
    "start": "122250",
    "end": "123990"
  },
  {
    "text": "interface if you have a lot of complex",
    "start": "123990",
    "end": "126299"
  },
  {
    "text": "custom data on the user document it",
    "start": "126299",
    "end": "128039"
  },
  {
    "text": "helps to be very explicit about it so",
    "start": "128039",
    "end": "130020"
  },
  {
    "text": "every property that can exist on the",
    "start": "130020",
    "end": "131580"
  },
  {
    "text": "user document will also exist on this",
    "start": "131580",
    "end": "133290"
  },
  {
    "text": "type",
    "start": "133290",
    "end": "133590"
  },
  {
    "text": "scrip interface preventing bugs that",
    "start": "133590",
    "end": "135239"
  },
  {
    "text": "send invalid data to the database now we",
    "start": "135239",
    "end": "138300"
  },
  {
    "text": "can jump into our off service and we'll",
    "start": "138300",
    "end": "140099"
  },
  {
    "text": "start by importing a few things first",
    "start": "140099",
    "end": "141800"
  },
  {
    "text": "well use the angular router to redirect",
    "start": "141800",
    "end": "144480"
  },
  {
    "text": "users after they sign out then",
    "start": "144480",
    "end": "146760"
  },
  {
    "text": "angularfire provides us with services",
    "start": "146760",
    "end": "148290"
  },
  {
    "text": "that we can use to interact with",
    "start": "148290",
    "end": "149910"
  },
  {
    "text": "firebase auth and fire store and lastly",
    "start": "149910",
    "end": "152580"
  },
  {
    "text": "we have a couple of things here from",
    "start": "152580",
    "end": "154080"
  },
  {
    "text": "rxjs that we'll use for the control flow",
    "start": "154080",
    "end": "156360"
  },
  {
    "text": "on the user autumn servable and",
    "start": "156360",
    "end": "158299"
  },
  {
    "text": "optionally you can also import the user",
    "start": "158299",
    "end": "160739"
  },
  {
    "text": "interface that we defined in the last",
    "start": "160739",
    "end": "162180"
  },
  {
    "text": "step the service has one piece of",
    "start": "162180",
    "end": "164700"
  },
  {
    "text": "stateful data that we can share between",
    "start": "164700",
    "end": "166380"
  },
  {
    "text": "all of our components and that is the",
    "start": "166380",
    "end": "168420"
  },
  {
    "text": "database record itself the user document",
    "start": "168420",
    "end": "170400"
  },
  {
    "text": "it's defined as an observable because it",
    "start": "170400",
    "end": "172739"
  },
  {
    "text": "can change in real time for example when",
    "start": "172739",
    "end": "174510"
  },
  {
    "text": "the user signs in or signs out right now",
    "start": "174510",
    "end": "177120"
  },
  {
    "text": "you'll see that it's typed to any but if",
    "start": "177120",
    "end": "178620"
  },
  {
    "text": "you're using the user interface you'll",
    "start": "178620",
    "end": "180180"
  },
  {
    "text": "want to type it to the user the next",
    "start": "180180",
    "end": "182400"
  },
  {
    "text": "thing we'll do is inject our",
    "start": "182400",
    "end": "183390"
  },
  {
    "text": "dependencies in the constructor so we",
    "start": "183390",
    "end": "185340"
  },
  {
    "text": "have angularfire auth firestore and the",
    "start": "185340",
    "end": "187890"
  },
  {
    "text": "router now we'll want to define our",
    "start": "187890",
    "end": "190079"
  },
  {
    "text": "actual user observable as soon as",
    "start": "190079",
    "end": "192120"
  },
  {
    "text": "possible which would be in the",
    "start": "192120",
    "end": "193349"
  },
  {
    "text": "constructor of this service so we'll",
    "start": "193349",
    "end": "195269"
  },
  {
    "text": "start by making it equal to the angular",
    "start": "195269",
    "end": "197010"
  },
  {
    "text": "fire off state and if you're not using",
    "start": "197010",
    "end": "198900"
  },
  {
    "text": "any custom data you can just stop right",
    "start": "198900",
    "end": "200519"
  },
  {
    "text": "there because that'll give you the user",
    "start": "200519",
    "end": "202109"
  },
  {
    "text": "record that you have in the",
    "start": "202109",
    "end": "203280"
  },
  {
    "text": "authentication tab but in most cases",
    "start": "203280",
    "end": "205109"
  },
  {
    "text": "you're going to want more data than that",
    "start": "205109",
    "end": "206700"
  },
  {
    "text": "so we'll use the off state to switch to",
    "start": "206700",
    "end": "208829"
  },
  {
    "text": "an observable of this database record we",
    "start": "208829",
    "end": "211049"
  },
  {
    "text": "can do this with the rxjs which map",
    "start": "211049",
    "end": "212819"
  },
  {
    "text": "operator which allows us to listen to",
    "start": "212819",
    "end": "215310"
  },
  {
    "text": "the user that's emitted from this off",
    "start": "215310",
    "end": "216930"
  },
  {
    "text": "state observable and then switch to a",
    "start": "216930",
    "end": "218670"
  },
  {
    "text": "different observable of the database",
    "start": "218670",
    "end": "220200"
  },
  {
    "text": "record so we'll have access to the user",
    "start": "220200",
    "end": "222599"
  },
  {
    "text": "inside of switch map which is either",
    "start": "222599",
    "end": "224489"
  },
  {
    "text": "going to be the user authentication",
    "start": "224489",
    "end": "225930"
  },
  {
    "text": "record or null so if the user is defined",
    "start": "225930",
    "end": "228870"
  },
  {
    "text": "then we'll go ahead and reach out to",
    "start": "228870",
    "end": "230579"
  },
  {
    "text": "fire store by calling AFS doc and then",
    "start": "230579",
    "end": "233310"
  },
  {
    "text": "point to the document with the matching",
    "start": "233310",
    "end": "235049"
  },
  {
    "text": "user ID and lastly we call value changes",
    "start": "235049",
    "end": "237660"
  },
  {
    "text": "to convert it to an observable if the",
    "start": "237660",
    "end": "240239"
  },
  {
    "text": "user is not defined then we just want to",
    "start": "240239",
    "end": "241980"
  },
  {
    "text": "return an observable of null from switch",
    "start": "241980",
    "end": "243720"
  },
  {
    "text": "map this could be some kind of other",
    "start": "243720",
    "end": "245040"
  },
  {
    "text": "default value but it allows us to tell",
    "start": "245040",
    "end": "247049"
  },
  {
    "text": "when the user is not logged in so now we",
    "start": "247049",
    "end": "249720"
  },
  {
    "text": "have a user record in fire store that we",
    "start": "249720",
    "end": "251489"
  },
  {
    "text": "can react to based on the authentication",
    "start": "251489",
    "end": "253200"
  },
  {
    "text": "state but in order for this to be useful",
    "start": "253200",
    "end": "255480"
  },
  {
    "text": "we need a way for the user to first log",
    "start": "255480",
    "end": "257549"
  },
  {
    "text": "in so I'll create an async function here",
    "start": "257549",
    "end": "259769"
  },
  {
    "text": "called Google sign-in because most of",
    "start": "259769",
    "end": "262019"
  },
  {
    "text": "the firebase API is actually promise",
    "start": "262019",
    "end": "263940"
  },
  {
    "text": "based so we make a reference to the",
    "start": "263940",
    "end": "266340"
  },
  {
    "text": "Google auth provider",
    "start": "266340",
    "end": "267480"
  },
  {
    "text": "and then we pass that in to sign in with",
    "start": "267480",
    "end": "269430"
  },
  {
    "text": "pop up and that will trigger the actual",
    "start": "269430",
    "end": "271650"
  },
  {
    "text": "pop-up modal where the user logs in to",
    "start": "271650",
    "end": "273540"
  },
  {
    "text": "their Google account that's going to",
    "start": "273540",
    "end": "275730"
  },
  {
    "text": "resolve with the credential of that user",
    "start": "275730",
    "end": "277770"
  },
  {
    "text": "which we can then use to update user",
    "start": "277770",
    "end": "279900"
  },
  {
    "text": "data in fire store we'll implement this",
    "start": "279900",
    "end": "282420"
  },
  {
    "text": "method next but I'd like to point out",
    "start": "282420",
    "end": "284550"
  },
  {
    "text": "that you can also update or create the",
    "start": "284550",
    "end": "286500"
  },
  {
    "text": "user record and fire store with a cloud",
    "start": "286500",
    "end": "288300"
  },
  {
    "text": "function we're not going to cover it in",
    "start": "288300",
    "end": "289920"
  },
  {
    "text": "this video but just know that that's an",
    "start": "289920",
    "end": "291330"
  },
  {
    "text": "option the next thing we'll do is really",
    "start": "291330",
    "end": "293070"
  },
  {
    "text": "quickly implement a sign out method this",
    "start": "293070",
    "end": "295320"
  },
  {
    "text": "will also be an async function and it",
    "start": "295320",
    "end": "297330"
  },
  {
    "text": "will just await the angularfire",
    "start": "297330",
    "end": "298620"
  },
  {
    "text": "off sign out and then navigate back to",
    "start": "298620",
    "end": "300480"
  },
  {
    "text": "the root page so currently this update",
    "start": "300480",
    "end": "302850"
  },
  {
    "text": "user data method is just taking",
    "start": "302850",
    "end": "304470"
  },
  {
    "text": "information from the angular fired off",
    "start": "304470",
    "end": "306360"
  },
  {
    "text": "state and then marrying it on the",
    "start": "306360",
    "end": "307770"
  },
  {
    "text": "firestore document but this is the point",
    "start": "307770",
    "end": "309840"
  },
  {
    "text": "where you could add any kind of custom",
    "start": "309840",
    "end": "310980"
  },
  {
    "text": "data that you want so we'll take the",
    "start": "310980",
    "end": "312840"
  },
  {
    "text": "user from the credential that we get",
    "start": "312840",
    "end": "314250"
  },
  {
    "text": "after the pop-up sign in and we'll point",
    "start": "314250",
    "end": "316440"
  },
  {
    "text": "to the document in the database with",
    "start": "316440",
    "end": "318000"
  },
  {
    "text": "that user ID from there we'll define",
    "start": "318000",
    "end": "320100"
  },
  {
    "text": "that data payload that we want to save",
    "start": "320100",
    "end": "321600"
  },
  {
    "text": "then we'll call set on the user",
    "start": "321600",
    "end": "323880"
  },
  {
    "text": "reference and pass at this data when you",
    "start": "323880",
    "end": "326130"
  },
  {
    "text": "call set its destructive so if there's",
    "start": "326130",
    "end": "328050"
  },
  {
    "text": "an existing document in this place it",
    "start": "328050",
    "end": "329940"
  },
  {
    "text": "will erase all that data and replace it",
    "start": "329940",
    "end": "331650"
  },
  {
    "text": "that's usually not the behavior that you",
    "start": "331650",
    "end": "333750"
  },
  {
    "text": "want for a returning user so you can",
    "start": "333750",
    "end": "335850"
  },
  {
    "text": "avoid it by adding this merge true",
    "start": "335850",
    "end": "337320"
  },
  {
    "text": "option which will only change the",
    "start": "337320",
    "end": "338820"
  },
  {
    "text": "properties that change in the data",
    "start": "338820",
    "end": "340350"
  },
  {
    "text": "payload in other words the existing data",
    "start": "340350",
    "end": "342570"
  },
  {
    "text": "will not be erased if you want to get a",
    "start": "342570",
    "end": "344610"
  },
  {
    "text": "little fancy with your JavaScript you",
    "start": "344610",
    "end": "346290"
  },
  {
    "text": "could actually destructor all these",
    "start": "346290",
    "end": "347610"
  },
  {
    "text": "properties in the function argument",
    "start": "347610",
    "end": "349470"
  },
  {
    "text": "basically we're just taking the",
    "start": "349470",
    "end": "350820"
  },
  {
    "text": "properties on the object and",
    "start": "350820",
    "end": "352200"
  },
  {
    "text": "automatically assigning them as",
    "start": "352200",
    "end": "353640"
  },
  {
    "text": "variables inside the scope of this",
    "start": "353640",
    "end": "355410"
  },
  {
    "text": "function and thank you typescript for",
    "start": "355410",
    "end": "357210"
  },
  {
    "text": "telling me exactly what's wrong as I",
    "start": "357210",
    "end": "358650"
  },
  {
    "text": "refactor that takes care of all the hard",
    "start": "358650",
    "end": "361140"
  },
  {
    "text": "stuff now we can go into any component",
    "start": "361140",
    "end": "363210"
  },
  {
    "text": "and just inject this off service in the",
    "start": "363210",
    "end": "364920"
  },
  {
    "text": "constructor and share its data and",
    "start": "364920",
    "end": "366720"
  },
  {
    "text": "functionality",
    "start": "366720",
    "end": "367410"
  },
  {
    "text": "I want to bind this to the HTML so I'm",
    "start": "367410",
    "end": "370290"
  },
  {
    "text": "making it a public property and the",
    "start": "370290",
    "end": "371760"
  },
  {
    "text": "constructor now we can switch over to",
    "start": "371760",
    "end": "373890"
  },
  {
    "text": "the HTML and just write some logic using",
    "start": "373890",
    "end": "376200"
  },
  {
    "text": "angular's directives our user is an",
    "start": "376200",
    "end": "378720"
  },
  {
    "text": "observable which means we need to",
    "start": "378720",
    "end": "380040"
  },
  {
    "text": "subscribe to it in angular we can do",
    "start": "380040",
    "end": "382260"
  },
  {
    "text": "this with the async pipe which will",
    "start": "382260",
    "end": "383820"
  },
  {
    "text": "automatically manage the subscription",
    "start": "383820",
    "end": "385350"
  },
  {
    "text": "for us and we can write as user which",
    "start": "385350",
    "end": "388230"
  },
  {
    "text": "sets a template variable for the user",
    "start": "388230",
    "end": "390150"
  },
  {
    "text": "document information that we can use",
    "start": "390150",
    "end": "391950"
  },
  {
    "text": "directly here in the template and if",
    "start": "391950",
    "end": "394410"
  },
  {
    "text": "that value happens to be null then we're",
    "start": "394410",
    "end": "396000"
  },
  {
    "text": "going to display a login button for",
    "start": "396000",
    "end": "399000"
  },
  {
    "text": "debugging purposes we'll use the JSON",
    "start": "399000",
    "end": "400620"
  },
  {
    "text": "pipe",
    "start": "400620",
    "end": "401280"
  },
  {
    "text": "you show the user object directly in the",
    "start": "401280",
    "end": "403170"
  },
  {
    "text": "view and this is only available to the",
    "start": "403170",
    "end": "406110"
  },
  {
    "text": "logged in user so we'll also add a sign",
    "start": "406110",
    "end": "408180"
  },
  {
    "text": "out button here as well and that's as",
    "start": "408180",
    "end": "410310"
  },
  {
    "text": "simple as binding to the click event and",
    "start": "410310",
    "end": "412050"
  },
  {
    "text": "then calling off sign out the next thing",
    "start": "412050",
    "end": "414750"
  },
  {
    "text": "we'll do is define that login template",
    "start": "414750",
    "end": "416730"
  },
  {
    "text": "which we can do with an NG template tag",
    "start": "416730",
    "end": "418440"
  },
  {
    "text": "and give it a name of login then we",
    "start": "418440",
    "end": "420930"
  },
  {
    "text": "create another button inside of here and",
    "start": "420930",
    "end": "422790"
  },
  {
    "text": "this time buying the click event to off",
    "start": "422790",
    "end": "424530"
  },
  {
    "text": "Google sign-in now we can finally check",
    "start": "424530",
    "end": "426930"
  },
  {
    "text": "out our app in the browser and you'll",
    "start": "426930",
    "end": "428520"
  },
  {
    "text": "see if we click the log in with Google",
    "start": "428520",
    "end": "429810"
  },
  {
    "text": "button we should get this pop-up window",
    "start": "429810",
    "end": "431280"
  },
  {
    "text": "and once we sign in it will show the",
    "start": "431280",
    "end": "433710"
  },
  {
    "text": "user information in the view",
    "start": "433710",
    "end": "435000"
  },
  {
    "text": "automatically now at this point having a",
    "start": "435000",
    "end": "436770"
  },
  {
    "text": "couple of extra tips for you if you're",
    "start": "436770",
    "end": "438480"
  },
  {
    "text": "using angular material you'll want to",
    "start": "438480",
    "end": "440040"
  },
  {
    "text": "check out the ngx off firebase UI",
    "start": "440040",
    "end": "442200"
  },
  {
    "text": "library which has a bunch of pre-built",
    "start": "442200",
    "end": "444090"
  },
  {
    "text": "components that can help you get things",
    "start": "444090",
    "end": "445380"
  },
  {
    "text": "done faster another thing you might",
    "start": "445380",
    "end": "447510"
  },
  {
    "text": "notice is that this JSON user object is",
    "start": "447510",
    "end": "449700"
  },
  {
    "text": "really hard to read another little pro",
    "start": "449700",
    "end": "452100"
  },
  {
    "text": "tip that comes from be man on Twitter is",
    "start": "452100",
    "end": "453960"
  },
  {
    "text": "to wrap your JSON pipe and a pre tag it",
    "start": "453960",
    "end": "456750"
  },
  {
    "text": "will put every object property on its",
    "start": "456750",
    "end": "458460"
  },
  {
    "text": "own line which is much easier to read",
    "start": "458460",
    "end": "460020"
  },
  {
    "text": "especially if you have a big object so",
    "start": "460020",
    "end": "462419"
  },
  {
    "text": "now we have a working user",
    "start": "462419",
    "end": "463560"
  },
  {
    "text": "authentication system in place but now",
    "start": "463560",
    "end": "466020"
  },
  {
    "text": "you'll probably want to define some",
    "start": "466020",
    "end": "467310"
  },
  {
    "text": "routes that can only be accessed by a",
    "start": "467310",
    "end": "468960"
  },
  {
    "text": "logged in user for example the user",
    "start": "468960",
    "end": "470820"
  },
  {
    "text": "dashboard angular provides a really",
    "start": "470820",
    "end": "473220"
  },
  {
    "text": "elegant solution to composing your",
    "start": "473220",
    "end": "474930"
  },
  {
    "text": "router logic first I'm going to define a",
    "start": "474930",
    "end": "477960"
  },
  {
    "text": "component called super secret that",
    "start": "477960",
    "end": "479700"
  },
  {
    "text": "should only be accessed by logged in",
    "start": "479700",
    "end": "481169"
  },
  {
    "text": "users and then I'll add it to the secret",
    "start": "481169",
    "end": "483479"
  },
  {
    "text": "route in the router config now back in",
    "start": "483479",
    "end": "485910"
  },
  {
    "text": "the app you can see that we're not",
    "start": "485910",
    "end": "487050"
  },
  {
    "text": "logged in and if we click the secret",
    "start": "487050",
    "end": "488820"
  },
  {
    "text": "button it still navigates to the secret",
    "start": "488820",
    "end": "490860"
  },
  {
    "text": "route we're going to generate another",
    "start": "490860",
    "end": "492990"
  },
  {
    "text": "thing called a guard which is actually",
    "start": "492990",
    "end": "494940"
  },
  {
    "text": "just an angular service that has some",
    "start": "494940",
    "end": "496530"
  },
  {
    "text": "special methods that we can implement to",
    "start": "496530",
    "end": "498360"
  },
  {
    "text": "control the router logic the most common",
    "start": "498360",
    "end": "501180"
  },
  {
    "text": "one is can activate which is a method",
    "start": "501180",
    "end": "503430"
  },
  {
    "text": "that will return a boolean or an",
    "start": "503430",
    "end": "504960"
  },
  {
    "text": "observable of a boolean and if it's true",
    "start": "504960",
    "end": "506850"
  },
  {
    "text": "it will activate the route if it's false",
    "start": "506850",
    "end": "508500"
  },
  {
    "text": "it will not we already have the user",
    "start": "508500",
    "end": "510810"
  },
  {
    "text": "observable from our off service it's",
    "start": "510810",
    "end": "512729"
  },
  {
    "text": "just not in a boolean format yet so we",
    "start": "512729",
    "end": "515580"
  },
  {
    "text": "can go ahead and inject the off service",
    "start": "515580",
    "end": "517200"
  },
  {
    "text": "in the guard constructor then we'll",
    "start": "517200",
    "end": "519419"
  },
  {
    "text": "return the user observable from the can",
    "start": "519419",
    "end": "521250"
  },
  {
    "text": "activate method but we'll need to first",
    "start": "521250",
    "end": "523229"
  },
  {
    "text": "pipe in a few rxjs operators the first",
    "start": "523229",
    "end": "526350"
  },
  {
    "text": "one is take 1 which will automatically",
    "start": "526350",
    "end": "528210"
  },
  {
    "text": "complete the observable after the first",
    "start": "528210",
    "end": "529950"
  },
  {
    "text": "value is emitted because we don't need",
    "start": "529950",
    "end": "531990"
  },
  {
    "text": "to keep it running after the route has",
    "start": "531990",
    "end": "533370"
  },
  {
    "text": "been blocked then we'll use map",
    "start": "533370",
    "end": "535279"
  },
  {
    "text": "to map the object to a boolean and we",
    "start": "535279",
    "end": "537829"
  },
  {
    "text": "can do that with just a double bang",
    "start": "537829",
    "end": "539180"
  },
  {
    "text": "because we have an observable of null if",
    "start": "539180",
    "end": "541430"
  },
  {
    "text": "the users not logged in and lastly if",
    "start": "541430",
    "end": "544220"
  },
  {
    "text": "the users not logged in you probably",
    "start": "544220",
    "end": "545480"
  },
  {
    "text": "want to navigate them to a login page or",
    "start": "545480",
    "end": "547759"
  },
  {
    "text": "somewhere else in our case we'll just go",
    "start": "547759",
    "end": "549499"
  },
  {
    "text": "ahead and console.log access tonight so",
    "start": "549499",
    "end": "552379"
  },
  {
    "text": "that's all there is to it and now we can",
    "start": "552379",
    "end": "553910"
  },
  {
    "text": "use this on any route that requires this",
    "start": "553910",
    "end": "555649"
  },
  {
    "text": "logic we can tell angular where to apply",
    "start": "555649",
    "end": "557990"
  },
  {
    "text": "it by going back to our router and then",
    "start": "557990",
    "end": "560089"
  },
  {
    "text": "using the can activate property and",
    "start": "560089",
    "end": "561920"
  },
  {
    "text": "adding it to the array now if we go back",
    "start": "561920",
    "end": "564709"
  },
  {
    "text": "to the app and try to navigate to this",
    "start": "564709",
    "end": "566540"
  },
  {
    "text": "route it's going to console.log access",
    "start": "566540",
    "end": "568309"
  },
  {
    "text": "denied but more importantly it's not",
    "start": "568309",
    "end": "570019"
  },
  {
    "text": "going to instantiate that component so",
    "start": "570019",
    "end": "572569"
  },
  {
    "text": "that gives us some front-end logic for",
    "start": "572569",
    "end": "574129"
  },
  {
    "text": "the user experience but it doesn't give",
    "start": "574129",
    "end": "575839"
  },
  {
    "text": "us full stack security someone could",
    "start": "575839",
    "end": "577699"
  },
  {
    "text": "still grab our firebase credentials and",
    "start": "577699",
    "end": "579620"
  },
  {
    "text": "modify other user records those",
    "start": "579620",
    "end": "581809"
  },
  {
    "text": "credentials have to be in the",
    "start": "581809",
    "end": "582920"
  },
  {
    "text": "client-side code so in order to secure",
    "start": "582920",
    "end": "585319"
  },
  {
    "text": "the app we need a rule that will only",
    "start": "585319",
    "end": "586999"
  },
  {
    "text": "allow authenticated users to modify",
    "start": "586999",
    "end": "588680"
  },
  {
    "text": "documents with the corresponding user ID",
    "start": "588680",
    "end": "591279"
  },
  {
    "text": "so we'll go down here to the users path",
    "start": "591279",
    "end": "593990"
  },
  {
    "text": "and then add a wildcard for the user ID",
    "start": "593990",
    "end": "596089"
  },
  {
    "text": "and we'll say awhile right",
    "start": "596089",
    "end": "597829"
  },
  {
    "text": "if the is owner function resolves to",
    "start": "597829",
    "end": "599930"
  },
  {
    "text": "true it's optional to write this as a",
    "start": "599930",
    "end": "602629"
  },
  {
    "text": "function and fire store but I like to",
    "start": "602629",
    "end": "604459"
  },
  {
    "text": "write my rules as functions because they",
    "start": "604459",
    "end": "606050"
  },
  {
    "text": "tend to be a lot more readable",
    "start": "606050",
    "end": "607040"
  },
  {
    "text": "especially when you have a lot of",
    "start": "607040",
    "end": "608389"
  },
  {
    "text": "complex document relationships so we can",
    "start": "608389",
    "end": "611569"
  },
  {
    "text": "easily implement this by saying request",
    "start": "611569",
    "end": "613730"
  },
  {
    "text": "auth UID equals the wildcard user ID in",
    "start": "613730",
    "end": "617689"
  },
  {
    "text": "other words if you're not logged in to",
    "start": "617689",
    "end": "619069"
  },
  {
    "text": "the correct account you can't read or",
    "start": "619069",
    "end": "620600"
  },
  {
    "text": "write the user document now one thing",
    "start": "620600",
    "end": "622819"
  },
  {
    "text": "you have to be careful of is with",
    "start": "622819",
    "end": "624050"
  },
  {
    "text": "firebase rules it's going to look for",
    "start": "624050",
    "end": "625819"
  },
  {
    "text": "the first rule currently our rules will",
    "start": "625819",
    "end": "628459"
  },
  {
    "text": "not work because we're still allowing",
    "start": "628459",
    "end": "629990"
  },
  {
    "text": "reads and writes at the global level",
    "start": "629990",
    "end": "631639"
  },
  {
    "text": "firebase will see that first and allow",
    "start": "631639",
    "end": "633740"
  },
  {
    "text": "the operation so I recommend doing if",
    "start": "633740",
    "end": "635959"
  },
  {
    "text": "false at the global level just so",
    "start": "635959",
    "end": "637759"
  },
  {
    "text": "everything is locked down by default so",
    "start": "637759",
    "end": "640429"
  },
  {
    "text": "now we have a fully secure angular",
    "start": "640429",
    "end": "642139"
  },
  {
    "text": "firebase authentication system it can",
    "start": "642139",
    "end": "644449"
  },
  {
    "text": "scale the millions of users it reacts to",
    "start": "644449",
    "end": "646550"
  },
  {
    "text": "changes in real time and it can handle",
    "start": "646550",
    "end": "648319"
  },
  {
    "text": "any kind of custom data we want to throw",
    "start": "648319",
    "end": "649970"
  },
  {
    "text": "at it I'm gonna go ahead and wrap things",
    "start": "649970",
    "end": "651679"
  },
  {
    "text": "up there but I'm considering doing this",
    "start": "651679",
    "end": "653360"
  },
  {
    "text": "same video with other frameworks like",
    "start": "653360",
    "end": "655699"
  },
  {
    "text": "maybe you react view and flutter just so",
    "start": "655699",
    "end": "657529"
  },
  {
    "text": "you can compare the differences at a",
    "start": "657529",
    "end": "658819"
  },
  {
    "text": "very fundamental and practical level if",
    "start": "658819",
    "end": "660769"
  },
  {
    "text": "you want to see that happen let me know",
    "start": "660769",
    "end": "662120"
  },
  {
    "text": "in the comments so I can prioritize it",
    "start": "662120",
    "end": "663740"
  },
  {
    "text": "thanks for watching and I",
    "start": "663740",
    "end": "665470"
  },
  {
    "text": "I'll talk to you soon",
    "start": "665470",
    "end": "666200"
  },
  {
    "text": "[Music]",
    "start": "666200",
    "end": "674260"
  }
]