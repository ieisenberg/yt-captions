[
  {
    "start": "0",
    "end": "47000"
  },
  {
    "text": "[Music]",
    "start": "120",
    "end": "5259"
  },
  {
    "text": "if you want to be productive with",
    "start": "6230",
    "end": "8160"
  },
  {
    "text": "flutter one of the first things you",
    "start": "8160",
    "end": "9330"
  },
  {
    "text": "should master is layouts in today's",
    "start": "9330",
    "end": "11309"
  },
  {
    "text": "video I'll show you the core principles",
    "start": "11309",
    "end": "12809"
  },
  {
    "text": "for aligning and positioning widgets and",
    "start": "12809",
    "end": "14820"
  },
  {
    "text": "if your web developer I'll be making",
    "start": "14820",
    "end": "16108"
  },
  {
    "text": "direct comparisons to CSS because the",
    "start": "16109",
    "end": "18060"
  },
  {
    "text": "two share a lot more similarities than",
    "start": "18060",
    "end": "19410"
  },
  {
    "text": "you might realize if you new here like",
    "start": "19410",
    "end": "21180"
  },
  {
    "text": "and subscribe and you can grab the full",
    "start": "21180",
    "end": "22529"
  },
  {
    "text": "source code from fire ship i/o and I'll",
    "start": "22529",
    "end": "24600"
  },
  {
    "text": "be giving away another t-shirt with this",
    "start": "24600",
    "end": "25830"
  },
  {
    "text": "video all you have to do is leave a",
    "start": "25830",
    "end": "26939"
  },
  {
    "text": "comment below letting me know what you",
    "start": "26939",
    "end": "28140"
  },
  {
    "text": "want to see next the first thing we'll",
    "start": "28140",
    "end": "29789"
  },
  {
    "text": "look at is individual widget positioning",
    "start": "29789",
    "end": "31590"
  },
  {
    "text": "which is the equivalent to a div and",
    "start": "31590",
    "end": "33059"
  },
  {
    "text": "HTML with a CSS class applied to it from",
    "start": "33059",
    "end": "35520"
  },
  {
    "text": "there we'll look at how to layout",
    "start": "35520",
    "end": "36329"
  },
  {
    "text": "widgets and columns and rows which works",
    "start": "36329",
    "end": "38219"
  },
  {
    "text": "in the same way that flexbox does in CSS",
    "start": "38219",
    "end": "40469"
  },
  {
    "text": "and lastly we'll look at how to stack",
    "start": "40469",
    "end": "42239"
  },
  {
    "text": "wood just on top of each other which is",
    "start": "42239",
    "end": "43559"
  },
  {
    "text": "similar to absolute or fixed positioning",
    "start": "43559",
    "end": "45809"
  },
  {
    "text": "in CSS let's go ahead and jump into the",
    "start": "45809",
    "end": "48180"
  },
  {
    "text": "code and you'll see that I'm starting",
    "start": "48180",
    "end": "49410"
  },
  {
    "text": "out here with a scaffold which basically",
    "start": "49410",
    "end": "51120"
  },
  {
    "text": "gives us a point pallet to work with",
    "start": "51120",
    "end": "52770"
  },
  {
    "text": "then as the body I'm defining a",
    "start": "52770",
    "end": "54719"
  },
  {
    "text": "container that has a red border that'll",
    "start": "54719",
    "end": "57120"
  },
  {
    "text": "make it easy to visualize how child",
    "start": "57120",
    "end": "58770"
  },
  {
    "text": "elements fit within their parent",
    "start": "58770",
    "end": "60210"
  },
  {
    "text": "container then I've created a widget",
    "start": "60210",
    "end": "61770"
  },
  {
    "text": "called square which just has a fixed",
    "start": "61770",
    "end": "63690"
  },
  {
    "text": "width and height and we can pass in an",
    "start": "63690",
    "end": "65220"
  },
  {
    "text": "argument to adjust the size or the color",
    "start": "65220",
    "end": "66840"
  },
  {
    "text": "of the square this just gives us",
    "start": "66840",
    "end": "68670"
  },
  {
    "text": "something to work with as we start",
    "start": "68670",
    "end": "70049"
  },
  {
    "text": "aligning multiple items and quick",
    "start": "70049",
    "end": "72000"
  },
  {
    "text": "sidenote you'll notice I'm using font",
    "start": "72000",
    "end": "73409"
  },
  {
    "text": "awesome icons highly recommended if you",
    "start": "73409",
    "end": "75360"
  },
  {
    "text": "get bored with the default material",
    "start": "75360",
    "end": "76530"
  },
  {
    "text": "icons and then lastly we have a widget",
    "start": "76530",
    "end": "78930"
  },
  {
    "text": "called demo which we'll get to when we",
    "start": "78930",
    "end": "80490"
  },
  {
    "text": "start doing things with flexbox and",
    "start": "80490",
    "end": "82140"
  },
  {
    "text": "absolute positioning for now let's go",
    "start": "82140",
    "end": "83790"
  },
  {
    "text": "back up to the root container that we",
    "start": "83790",
    "end": "85200"
  },
  {
    "text": "define in the body you'll see that it's",
    "start": "85200",
    "end": "86729"
  },
  {
    "text": "sitting in the top left corner of the",
    "start": "86729",
    "end": "88350"
  },
  {
    "text": "view a container is a lot like a span or",
    "start": "88350",
    "end": "90659"
  },
  {
    "text": "a div and HTML in the sense that it's",
    "start": "90659",
    "end": "92579"
  },
  {
    "text": "just an empty piece of UI that you can",
    "start": "92579",
    "end": "94320"
  },
  {
    "text": "apply styles and positioning to let's",
    "start": "94320",
    "end": "96570"
  },
  {
    "text": "first add some spacing on the outside of",
    "start": "96570",
    "end": "98340"
  },
  {
    "text": "this element by setting a margin with",
    "start": "98340",
    "end": "100320"
  },
  {
    "text": "edge in sets to all sides of 24 and we",
    "start": "100320",
    "end": "103380"
  },
  {
    "text": "can increase that a bit to make it a",
    "start": "103380",
    "end": "104460"
  },
  {
    "text": "little more clear but basically it's",
    "start": "104460",
    "end": "105930"
  },
  {
    "text": "like putting an invisible border around",
    "start": "105930",
    "end": "107430"
  },
  {
    "text": "the entire container and up with the",
    "start": "107430",
    "end": "109229"
  },
  {
    "text": "equivalent CSS in the top right corner",
    "start": "109229",
    "end": "110909"
  },
  {
    "text": "here you can also set padding which will",
    "start": "110909",
    "end": "113100"
  },
  {
    "text": "put that invisible spacing on the inside",
    "start": "113100",
    "end": "115020"
  },
  {
    "text": "of the element so you'll notice that the",
    "start": "115020",
    "end": "116340"
  },
  {
    "text": "border gets pushed out and now the green",
    "start": "116340",
    "end": "118020"
  },
  {
    "text": "background on the container element is",
    "start": "118020",
    "end": "119579"
  },
  {
    "text": "visible you can apply spacing to",
    "start": "119579",
    "end": "121380"
  },
  {
    "text": "individual sides by using only instead",
    "start": "121380",
    "end": "123299"
  },
  {
    "text": "of all another thing you can set on a",
    "start": "123299",
    "end": "125640"
  },
  {
    "text": "widget is its alignment if we set the",
    "start": "125640",
    "end": "127920"
  },
  {
    "text": "alignment to Center for example it will",
    "start": "127920",
    "end": "129720"
  },
  {
    "text": "expand the widget out as far as it can",
    "start": "129720",
    "end": "131550"
  },
  {
    "text": "go until something tells it to stop",
    "start": "131550",
    "end": "133140"
  },
  {
    "text": "and it",
    "start": "133140",
    "end": "133440"
  },
  {
    "text": "place the child element directly in the",
    "start": "133440",
    "end": "135120"
  },
  {
    "text": "center the alignment behavior really",
    "start": "135120",
    "end": "136770"
  },
  {
    "text": "depends on the parent container in our",
    "start": "136770",
    "end": "138600"
  },
  {
    "text": "case it's going to expand out until it",
    "start": "138600",
    "end": "140280"
  },
  {
    "text": "hits the edge of the screen there's a",
    "start": "140280",
    "end": "141690"
  },
  {
    "text": "couple of other things you can do with",
    "start": "141690",
    "end": "142980"
  },
  {
    "text": "containers as well for example you can",
    "start": "142980",
    "end": "144720"
  },
  {
    "text": "explicitly set the width and the height",
    "start": "144720",
    "end": "146460"
  },
  {
    "text": "that's exactly what I've done to create",
    "start": "146460",
    "end": "148380"
  },
  {
    "text": "this square box in the middle and you",
    "start": "148380",
    "end": "150090"
  },
  {
    "text": "can also apply a transform to a",
    "start": "150090",
    "end": "151680"
  },
  {
    "text": "container that could be a whole video on",
    "start": "151680",
    "end": "153120"
  },
  {
    "text": "its own but you can do the same things",
    "start": "153120",
    "end": "154560"
  },
  {
    "text": "you can do in CSS like rotate skew and",
    "start": "154560",
    "end": "156810"
  },
  {
    "text": "scale I'd also like to point out that",
    "start": "156810",
    "end": "158610"
  },
  {
    "text": "flutter has a bunch of alternative",
    "start": "158610",
    "end": "159990"
  },
  {
    "text": "widgets instead of a container such as",
    "start": "159990",
    "end": "161640"
  },
  {
    "text": "padding and a line and they're useful",
    "start": "161640",
    "end": "163890"
  },
  {
    "text": "because a lot of times you won't need",
    "start": "163890",
    "end": "165120"
  },
  {
    "text": "all the functionality of a container if",
    "start": "165120",
    "end": "166920"
  },
  {
    "text": "you only need to apply padding you can",
    "start": "166920",
    "end": "168510"
  },
  {
    "text": "just use the patti-anne widget and that",
    "start": "168510",
    "end": "169890"
  },
  {
    "text": "will make your code more focused and",
    "start": "169890",
    "end": "171210"
  },
  {
    "text": "readable now let's move on to what's",
    "start": "171210",
    "end": "173130"
  },
  {
    "text": "probably the most important part of this",
    "start": "173130",
    "end": "174270"
  },
  {
    "text": "video flexible positioning it allows you",
    "start": "174270",
    "end": "176400"
  },
  {
    "text": "to align items and columns and rows",
    "start": "176400",
    "end": "177810"
  },
  {
    "text": "which takes care of the majority of the",
    "start": "177810",
    "end": "179550"
  },
  {
    "text": "layouts that you'll see on most mobile",
    "start": "179550",
    "end": "180870"
  },
  {
    "text": "apps for example if we wanted to rebuild",
    "start": "180870",
    "end": "183120"
  },
  {
    "text": "this layout on duolingo we would start",
    "start": "183120",
    "end": "185070"
  },
  {
    "text": "by defining a column then inside this",
    "start": "185070",
    "end": "187050"
  },
  {
    "text": "column we can stack multiple widgets in",
    "start": "187050",
    "end": "188790"
  },
  {
    "text": "this case we'd start with a text widget",
    "start": "188790",
    "end": "190380"
  },
  {
    "text": "and then we could add a row and then",
    "start": "190380",
    "end": "192300"
  },
  {
    "text": "another row for the buttons at the",
    "start": "192300",
    "end": "193560"
  },
  {
    "text": "bottom and if you look closely at the",
    "start": "193560",
    "end": "195240"
  },
  {
    "text": "middle row you'll notice we have another",
    "start": "195240",
    "end": "196680"
  },
  {
    "text": "column in there that stacks some",
    "start": "196680",
    "end": "198060"
  },
  {
    "text": "additional text widgets on top of each",
    "start": "198060",
    "end": "199650"
  },
  {
    "text": "other so basically we can nest columns",
    "start": "199650",
    "end": "201360"
  },
  {
    "text": "and rows to build a complex UIs and we",
    "start": "201360",
    "end": "203520"
  },
  {
    "text": "can wrap any of these in their own",
    "start": "203520",
    "end": "204780"
  },
  {
    "text": "container to fine tune their individual",
    "start": "204780",
    "end": "206790"
  },
  {
    "text": "alignment and positioning let's look at",
    "start": "206790",
    "end": "208980"
  },
  {
    "start": "208000",
    "end": "416000"
  },
  {
    "text": "some examples the first thing we'll do",
    "start": "208980",
    "end": "210750"
  },
  {
    "text": "is define a row and it will take an",
    "start": "210750",
    "end": "212910"
  },
  {
    "text": "argument of children which is an array",
    "start": "212910",
    "end": "214800"
  },
  {
    "text": "of widgets in the case of a row the",
    "start": "214800",
    "end": "217110"
  },
  {
    "text": "widgets will flow from left to right",
    "start": "217110",
    "end": "218820"
  },
  {
    "text": "horizontally you'll notice the row takes",
    "start": "218820",
    "end": "221010"
  },
  {
    "text": "up as much horizontal space as it",
    "start": "221010",
    "end": "222660"
  },
  {
    "text": "possibly can this is known as the main",
    "start": "222660",
    "end": "225090"
  },
  {
    "text": "axis so in the case of a row the main",
    "start": "225090",
    "end": "227100"
  },
  {
    "text": "axis will be the x-axis and a column is",
    "start": "227100",
    "end": "229920"
  },
  {
    "text": "actually identical to a row the only",
    "start": "229920",
    "end": "231690"
  },
  {
    "text": "difference is the axis is flipped so the",
    "start": "231690",
    "end": "233670"
  },
  {
    "text": "main axis becomes the y-axis this is",
    "start": "233670",
    "end": "236010"
  },
  {
    "text": "identical to how things work with CSS",
    "start": "236010",
    "end": "238050"
  },
  {
    "text": "flexbox so if you already comfortable a",
    "start": "238050",
    "end": "240209"
  },
  {
    "text": "flexbox then you're already going to be",
    "start": "240209",
    "end": "241590"
  },
  {
    "text": "comfortable with flutter positioning",
    "start": "241590",
    "end": "242940"
  },
  {
    "text": "Drizzt with a few name changes so if we",
    "start": "242940",
    "end": "245130"
  },
  {
    "text": "change our row to a column you can see",
    "start": "245130",
    "end": "246630"
  },
  {
    "text": "that now the items flow from top to",
    "start": "246630",
    "end": "248370"
  },
  {
    "text": "bottom and the extra space is along the",
    "start": "248370",
    "end": "250650"
  },
  {
    "text": "y-axis there's really only a couple of",
    "start": "250650",
    "end": "252660"
  },
  {
    "text": "options that you need to be familiar",
    "start": "252660",
    "end": "253739"
  },
  {
    "text": "with the first one is main axis size by",
    "start": "253739",
    "end": "256560"
  },
  {
    "text": "default it will take up the maximum",
    "start": "256560",
    "end": "258000"
  },
  {
    "text": "amount of space but if you set this to",
    "start": "258000",
    "end": "259410"
  },
  {
    "text": "min then you can see that it only goes",
    "start": "259410",
    "end": "261419"
  },
  {
    "text": "to the end of the child elements most of",
    "start": "261419",
    "end": "263789"
  },
  {
    "text": "the actual alignment will be adjusted",
    "start": "263789",
    "end": "265350"
  },
  {
    "text": "with the main axis alignment or the",
    "start": "265350",
    "end": "267180"
  },
  {
    "text": "cross axis alignment the main axis is",
    "start": "267180",
    "end": "269729"
  },
  {
    "text": "similar to justify content and CSS and",
    "start": "269729",
    "end": "272280"
  },
  {
    "text": "the cross axis alignment is similar to",
    "start": "272280",
    "end": "274620"
  },
  {
    "text": "align items for example if we use main",
    "start": "274620",
    "end": "277710"
  },
  {
    "text": "axis alignment space between it will",
    "start": "277710",
    "end": "280080"
  },
  {
    "text": "push the children towards the edges and",
    "start": "280080",
    "end": "281880"
  },
  {
    "text": "then try to maximize the space in",
    "start": "281880",
    "end": "283229"
  },
  {
    "text": "between them there's a lot of other",
    "start": "283229",
    "end": "284580"
  },
  {
    "text": "options like spaced evenly which will",
    "start": "284580",
    "end": "286530"
  },
  {
    "text": "just maximize the space evenly",
    "start": "286530",
    "end": "287970"
  },
  {
    "text": "throughout all the elements and we can",
    "start": "287970",
    "end": "289949"
  },
  {
    "text": "always flip this to a row and you can",
    "start": "289949",
    "end": "291180"
  },
  {
    "text": "see the only thing that changes is the",
    "start": "291180",
    "end": "292860"
  },
  {
    "text": "axis of alignment on the cross axis the",
    "start": "292860",
    "end": "296009"
  },
  {
    "text": "elements will be aligned in the middle",
    "start": "296009",
    "end": "297509"
  },
  {
    "text": "by default it helps if we have squares",
    "start": "297509",
    "end": "300330"
  },
  {
    "text": "of different sizes so you can see here",
    "start": "300330",
    "end": "302520"
  },
  {
    "text": "that they're all aligned directly in the",
    "start": "302520",
    "end": "303750"
  },
  {
    "text": "center but what if we want these to be",
    "start": "303750",
    "end": "305370"
  },
  {
    "text": "aligned at the start of the container we",
    "start": "305370",
    "end": "308190"
  },
  {
    "text": "can make that happen by setting the",
    "start": "308190",
    "end": "309599"
  },
  {
    "text": "cross axis alignment to the start of the",
    "start": "309599",
    "end": "311580"
  },
  {
    "text": "container or if we want to push them to",
    "start": "311580",
    "end": "313680"
  },
  {
    "text": "the opposite side we can set that to end",
    "start": "313680",
    "end": "315509"
  },
  {
    "text": "and one other cool thing you can do with",
    "start": "315509",
    "end": "317280"
  },
  {
    "text": "the cross axis is set it to stretch and",
    "start": "317280",
    "end": "319470"
  },
  {
    "text": "that will force the elements to expand",
    "start": "319470",
    "end": "321180"
  },
  {
    "text": "across the entire available space and",
    "start": "321180",
    "end": "322919"
  },
  {
    "text": "one other thing I want to point out is",
    "start": "322919",
    "end": "324720"
  },
  {
    "text": "that columns and rows are just",
    "start": "324720",
    "end": "325979"
  },
  {
    "text": "convenience widgets for the Flex widget",
    "start": "325979",
    "end": "328169"
  },
  {
    "text": "if you use a flex which--it you can",
    "start": "328169",
    "end": "329729"
  },
  {
    "text": "manually set the direction to either",
    "start": "329729",
    "end": "331349"
  },
  {
    "text": "axis horizontal or axis vertical so at",
    "start": "331349",
    "end": "334860"
  },
  {
    "text": "this point we've been controlling the",
    "start": "334860",
    "end": "336000"
  },
  {
    "text": "Flex behavior of the children via the",
    "start": "336000",
    "end": "337949"
  },
  {
    "text": "parent row or column but a lot of times",
    "start": "337949",
    "end": "340080"
  },
  {
    "text": "you'll need the actual child to define",
    "start": "340080",
    "end": "341789"
  },
  {
    "text": "its Flex behavior to demonstrate this",
    "start": "341789",
    "end": "343770"
  },
  {
    "text": "I'm going to give our boxes different",
    "start": "343770",
    "end": "345539"
  },
  {
    "text": "colors and one of the most common use",
    "start": "345539",
    "end": "347639"
  },
  {
    "text": "cases is when you have a set of widgets",
    "start": "347639",
    "end": "349770"
  },
  {
    "text": "and you want one of those widgets to",
    "start": "349770",
    "end": "351150"
  },
  {
    "text": "expand to the available space and have",
    "start": "351150",
    "end": "353039"
  },
  {
    "text": "the other widgets just be a fixed size",
    "start": "353039",
    "end": "354690"
  },
  {
    "text": "so for example we might want our last",
    "start": "354690",
    "end": "356849"
  },
  {
    "text": "widget to fill up this available space",
    "start": "356849",
    "end": "358530"
  },
  {
    "text": "while keeping the other ones the same",
    "start": "358530",
    "end": "359970"
  },
  {
    "text": "size we can easily do this by wrapping",
    "start": "359970",
    "end": "361830"
  },
  {
    "text": "our widget in the expanded widget and",
    "start": "361830",
    "end": "363509"
  },
  {
    "text": "this will tell it to flex to the",
    "start": "363509",
    "end": "365099"
  },
  {
    "text": "available space this is similar to the",
    "start": "365099",
    "end": "367380"
  },
  {
    "text": "Flex grow property and CSS and this is",
    "start": "367380",
    "end": "369780"
  },
  {
    "text": "actually a ratio that will be calculated",
    "start": "369780",
    "end": "371699"
  },
  {
    "text": "based on the other sibling elements next",
    "start": "371699",
    "end": "373680"
  },
  {
    "text": "to it currently this is the only",
    "start": "373680",
    "end": "375630"
  },
  {
    "text": "expanded widget so it's just going to",
    "start": "375630",
    "end": "377099"
  },
  {
    "text": "fill up all of the available space but",
    "start": "377099",
    "end": "379199"
  },
  {
    "text": "let's go ahead and wrap the middle",
    "start": "379199",
    "end": "380250"
  },
  {
    "text": "square in the expanded widget as well",
    "start": "380250",
    "end": "381870"
  },
  {
    "text": "for now we'll also set its Flex property",
    "start": "381870",
    "end": "384509"
  },
  {
    "text": "to one so since they're both set to one",
    "start": "384509",
    "end": "386280"
  },
  {
    "text": "they'll evenly share the available space",
    "start": "386280",
    "end": "388050"
  },
  {
    "text": "but the thing to remember here is that",
    "start": "388050",
    "end": "389789"
  },
  {
    "text": "the Flex property is a ratio so if we",
    "start": "389789",
    "end": "391800"
  },
  {
    "text": "set Flex 10 for the middle element and",
    "start": "391800",
    "end": "393810"
  },
  {
    "text": "flex 1 for the last element the middle",
    "start": "393810",
    "end": "395820"
  },
  {
    "text": "element will take up 10 times more space",
    "start": "395820",
    "end": "397409"
  },
  {
    "text": "than the last one in other words we",
    "start": "397409",
    "end": "399360"
  },
  {
    "text": "could fit 10 pink",
    "start": "399360",
    "end": "400240"
  },
  {
    "text": "widgets inside of the blue widget so",
    "start": "400240",
    "end": "401919"
  },
  {
    "text": "flexbox is awesome when working with",
    "start": "401919",
    "end": "403449"
  },
  {
    "text": "two-dimensional layouts but sometimes",
    "start": "403449",
    "end": "405039"
  },
  {
    "text": "you want things to overlap as if there",
    "start": "405039",
    "end": "406630"
  },
  {
    "text": "was a third dimension to work with for",
    "start": "406630",
    "end": "408639"
  },
  {
    "text": "that we're going to look at the flutter",
    "start": "408639",
    "end": "409900"
  },
  {
    "text": "stack and a common use case might be",
    "start": "409900",
    "end": "411580"
  },
  {
    "text": "something like a tooltip that gets",
    "start": "411580",
    "end": "413199"
  },
  {
    "text": "positioned relative to a button but on",
    "start": "413199",
    "end": "415030"
  },
  {
    "text": "top of the main view you can compare",
    "start": "415030",
    "end": "417009"
  },
  {
    "start": "416000",
    "end": "522000"
  },
  {
    "text": "stacks and flutter roughly to absolutely",
    "start": "417009",
    "end": "418990"
  },
  {
    "text": "or fix positioning and CSS let's go",
    "start": "418990",
    "end": "421330"
  },
  {
    "text": "ahead and grab our existing column and",
    "start": "421330",
    "end": "423099"
  },
  {
    "text": "convert it to a stack you'll notice that",
    "start": "423099",
    "end": "424990"
  },
  {
    "text": "it only displays one Square and that's",
    "start": "424990",
    "end": "427090"
  },
  {
    "text": "the Red Square which is the last one in",
    "start": "427090",
    "end": "428860"
  },
  {
    "text": "the array the other squares didn't",
    "start": "428860",
    "end": "430900"
  },
  {
    "text": "disappear they're just underneath the",
    "start": "430900",
    "end": "432460"
  },
  {
    "text": "Red Square the last element in the array",
    "start": "432460",
    "end": "434590"
  },
  {
    "text": "gets the highest priority when being",
    "start": "434590",
    "end": "436449"
  },
  {
    "text": "displayed if we make the Blue Square",
    "start": "436449",
    "end": "438310"
  },
  {
    "text": "last then it's the one that gets",
    "start": "438310",
    "end": "439630"
  },
  {
    "text": "displayed when we reload now that we",
    "start": "439630",
    "end": "441909"
  },
  {
    "text": "have our elements in a stack we need to",
    "start": "441909",
    "end": "443800"
  },
  {
    "text": "align or position them one way to do",
    "start": "443800",
    "end": "446139"
  },
  {
    "text": "that is with the align widget which",
    "start": "446139",
    "end": "447490"
  },
  {
    "text": "allows us to place elements relative to",
    "start": "447490",
    "end": "449650"
  },
  {
    "text": "the parent container in a perfect",
    "start": "449650",
    "end": "451240"
  },
  {
    "text": "position so it makes it really easy to",
    "start": "451240",
    "end": "452770"
  },
  {
    "text": "Center things and if you don't want to",
    "start": "452770",
    "end": "454449"
  },
  {
    "text": "use the align widget you can just use a",
    "start": "454449",
    "end": "455770"
  },
  {
    "text": "container and set the alignment there",
    "start": "455770",
    "end": "457750"
  },
  {
    "text": "when thinking about alignment the middle",
    "start": "457750",
    "end": "459940"
  },
  {
    "text": "is always going to be the zero zero",
    "start": "459940",
    "end": "461470"
  },
  {
    "text": "coordinate and you can control the",
    "start": "461470",
    "end": "463000"
  },
  {
    "text": "alignment directly if the built in",
    "start": "463000",
    "end": "464740"
  },
  {
    "text": "static methods aren't enough for example",
    "start": "464740",
    "end": "467139"
  },
  {
    "text": "if we set it to negative one negative",
    "start": "467139",
    "end": "468400"
  },
  {
    "text": "one it puts the Blue Square in the",
    "start": "468400",
    "end": "470259"
  },
  {
    "text": "top-left corner and if we were to set it",
    "start": "470259",
    "end": "472000"
  },
  {
    "text": "to zero zero it would be directly in the",
    "start": "472000",
    "end": "473620"
  },
  {
    "text": "middle but there's generally a better",
    "start": "473620",
    "end": "475780"
  },
  {
    "text": "way to position things when you're",
    "start": "475780",
    "end": "477039"
  },
  {
    "text": "working within a stack and that's with",
    "start": "477039",
    "end": "478570"
  },
  {
    "text": "the positioned widget this allows you to",
    "start": "478570",
    "end": "480699"
  },
  {
    "text": "define specific values relative to the",
    "start": "480699",
    "end": "482680"
  },
  {
    "text": "parent container based on top bottom",
    "start": "482680",
    "end": "484659"
  },
  {
    "text": "left right and one key difference that",
    "start": "484659",
    "end": "486370"
  },
  {
    "text": "you'll notice is that position won't",
    "start": "486370",
    "end": "487900"
  },
  {
    "text": "push the container element to the",
    "start": "487900",
    "end": "489610"
  },
  {
    "text": "furthest bounds that it's allowed to go",
    "start": "489610",
    "end": "491169"
  },
  {
    "text": "so in order for position to work you",
    "start": "491169",
    "end": "493360"
  },
  {
    "text": "need to have a container that already",
    "start": "493360",
    "end": "494770"
  },
  {
    "text": "has some free space available so I'm",
    "start": "494770",
    "end": "496840"
  },
  {
    "text": "wrapping the stack in a container and",
    "start": "496840",
    "end": "498219"
  },
  {
    "text": "then I'm manually setting the height and",
    "start": "498219",
    "end": "499870"
  },
  {
    "text": "width to be the size of the actual",
    "start": "499870",
    "end": "501699"
  },
  {
    "text": "device height and width from there I'll",
    "start": "501699",
    "end": "503680"
  },
  {
    "text": "go down to my positioned widgets and set",
    "start": "503680",
    "end": "505509"
  },
  {
    "text": "the top and left properties and now we",
    "start": "505509",
    "end": "507789"
  },
  {
    "text": "can see the parts of the other squares",
    "start": "507789",
    "end": "509560"
  },
  {
    "text": "that were hidden before and now just",
    "start": "509560",
    "end": "511270"
  },
  {
    "text": "like absolute position and CSS we can",
    "start": "511270",
    "end": "513190"
  },
  {
    "text": "move these boxes around wherever we want",
    "start": "513190",
    "end": "515279"
  },
  {
    "text": "so using a combination of containers",
    "start": "515279",
    "end": "517990"
  },
  {
    "text": "columns rows and stacks will take care",
    "start": "517990",
    "end": "520029"
  },
  {
    "text": "of the vast majority of your layout",
    "start": "520029",
    "end": "521740"
  },
  {
    "text": "needs in flutter let's go ahead and",
    "start": "521740",
    "end": "523328"
  },
  {
    "start": "522000",
    "end": "623000"
  },
  {
    "text": "bring everything together by running",
    "start": "523329",
    "end": "524410"
  },
  {
    "text": "through a full example of a card you",
    "start": "524410",
    "end": "525970"
  },
  {
    "text": "might build from scratch there's already",
    "start": "525970",
    "end": "527589"
  },
  {
    "text": "a material card built into flutter so",
    "start": "527589",
    "end": "529510"
  },
  {
    "text": "this is kind of redundant but it's a",
    "start": "529510",
    "end": "531010"
  },
  {
    "text": "good example anyway so we start with a",
    "start": "531010",
    "end": "532839"
  },
  {
    "text": "container",
    "start": "532839",
    "end": "533890"
  },
  {
    "text": "in that container we'll give it some",
    "start": "533890",
    "end": "535149"
  },
  {
    "text": "margin padding and we'll also give it a",
    "start": "535149",
    "end": "537250"
  },
  {
    "text": "border and you could also add a box",
    "start": "537250",
    "end": "538779"
  },
  {
    "text": "shadow here as well so basically we're",
    "start": "538779",
    "end": "540790"
  },
  {
    "text": "just adding styles to the box that will",
    "start": "540790",
    "end": "542829"
  },
  {
    "text": "hold our column and in the column itself",
    "start": "542829",
    "end": "544810"
  },
  {
    "text": "we'll have the cross axis alignment set",
    "start": "544810",
    "end": "546519"
  },
  {
    "text": "to stretch so it expands throughout the",
    "start": "546519",
    "end": "548140"
  },
  {
    "text": "entire card and main axis men will",
    "start": "548140",
    "end": "550209"
  },
  {
    "text": "ensure that the column only expands to",
    "start": "550209",
    "end": "551860"
  },
  {
    "text": "the content and not to the end of the",
    "start": "551860",
    "end": "553810"
  },
  {
    "text": "viewport now if we had children to this",
    "start": "553810",
    "end": "555730"
  },
  {
    "text": "container",
    "start": "555730",
    "end": "556269"
  },
  {
    "text": "they'll be stretched out across the",
    "start": "556269",
    "end": "557620"
  },
  {
    "text": "horizontal axis and that's how we get",
    "start": "557620",
    "end": "559600"
  },
  {
    "text": "this purple rectangle here and I didn't",
    "start": "559600",
    "end": "561610"
  },
  {
    "text": "really talk about text in this video but",
    "start": "561610",
    "end": "563320"
  },
  {
    "text": "they have their own specific text styles",
    "start": "563320",
    "end": "564970"
  },
  {
    "text": "that are also very similar to CSS now",
    "start": "564970",
    "end": "567519"
  },
  {
    "text": "because we're inside of a column these",
    "start": "567519",
    "end": "568930"
  },
  {
    "text": "text widgets will be stacked on top of",
    "start": "568930",
    "end": "570519"
  },
  {
    "text": "each other the next thing we'll do is",
    "start": "570519",
    "end": "572230"
  },
  {
    "text": "create another container and the child",
    "start": "572230",
    "end": "574269"
  },
  {
    "text": "of this container will be a row we want",
    "start": "574269",
    "end": "576790"
  },
  {
    "text": "to display three buttons horizontally",
    "start": "576790",
    "end": "578620"
  },
  {
    "text": "and we want the first button to be at",
    "start": "578620",
    "end": "580480"
  },
  {
    "text": "the very left and the last button to be",
    "start": "580480",
    "end": "581890"
  },
  {
    "text": "at the very right so for that we can use",
    "start": "581890",
    "end": "583630"
  },
  {
    "text": "main axis alignment space between then",
    "start": "583630",
    "end": "586360"
  },
  {
    "text": "we'll just go ahead and drop a few of",
    "start": "586360",
    "end": "587800"
  },
  {
    "text": "flutters built-in buttons into this",
    "start": "587800",
    "end": "589269"
  },
  {
    "text": "array and they'll be perfectly spaced",
    "start": "589269",
    "end": "590980"
  },
  {
    "text": "along the horizontal axis so as you can",
    "start": "590980",
    "end": "593350"
  },
  {
    "text": "see once you're comfortable at flexbox",
    "start": "593350",
    "end": "594760"
  },
  {
    "text": "it becomes very easy to prototype out",
    "start": "594760",
    "end": "596740"
  },
  {
    "text": "UIs and most of your layout should be",
    "start": "596740",
    "end": "598630"
  },
  {
    "text": "responsive and be able to adapt to",
    "start": "598630",
    "end": "600370"
  },
  {
    "text": "different viewport sizes in future",
    "start": "600370",
    "end": "602440"
  },
  {
    "text": "videos I'd like to clone popular mobile",
    "start": "602440",
    "end": "604149"
  },
  {
    "text": "app you eyes like maybe lyft or",
    "start": "604149",
    "end": "605829"
  },
  {
    "text": "Instagram or maybe even snapchats",
    "start": "605829",
    "end": "607570"
  },
  {
    "text": "redesign that everybody hates so if you",
    "start": "607570",
    "end": "609160"
  },
  {
    "text": "have any ideas let me know in the",
    "start": "609160",
    "end": "610269"
  },
  {
    "text": "comments I'm gonna go ahead and wrap",
    "start": "610269",
    "end": "611560"
  },
  {
    "text": "things up there look forward to more",
    "start": "611560",
    "end": "613180"
  },
  {
    "text": "flutter videos thanks for watching and I",
    "start": "613180",
    "end": "615339"
  },
  {
    "text": "will talk to you soon",
    "start": "615339",
    "end": "617110"
  },
  {
    "text": "[Music]",
    "start": "617110",
    "end": "624880"
  }
]