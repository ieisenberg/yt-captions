[
  {
    "text": "in 2018 the game candy crush made an",
    "start": "0",
    "end": "2399"
  },
  {
    "text": "estimated four million dollars from",
    "start": "2399",
    "end": "3899"
  },
  {
    "text": "in-app purchases and microtransactions",
    "start": "3899",
    "end": "5450"
  },
  {
    "text": "per day and like most of the top",
    "start": "5450",
    "end": "7890"
  },
  {
    "text": "grossing mobile apps they sell useless",
    "start": "7890",
    "end": "9480"
  },
  {
    "text": "digital products to casual gamers in",
    "start": "9480",
    "end": "11429"
  },
  {
    "text": "today's video you'll learn how to",
    "start": "11429",
    "end": "12719"
  },
  {
    "text": "implement consumable in-app purchases",
    "start": "12719",
    "end": "14849"
  },
  {
    "text": "and flutter allowing you to sell your",
    "start": "14849",
    "end": "16770"
  },
  {
    "text": "own digital products on iOS or Android",
    "start": "16770",
    "end": "18630"
  },
  {
    "text": "via microtransactions not just doing",
    "start": "18630",
    "end": "20970"
  },
  {
    "text": "this for money if you're new you're like",
    "start": "20970",
    "end": "27720"
  },
  {
    "text": "and subscribe and you can find these",
    "start": "27720",
    "end": "29160"
  },
  {
    "text": "source code on fire ship io and congrats",
    "start": "29160",
    "end": "31439"
  },
  {
    "text": "to andrei hava you won the t-shirt from",
    "start": "31439",
    "end": "33300"
  },
  {
    "text": "last week sweater video let's start by",
    "start": "33300",
    "end": "35370"
  },
  {
    "text": "talking about how in-app purchases work",
    "start": "35370",
    "end": "36870"
  },
  {
    "text": "from a high level and how to use them",
    "start": "36870",
    "end": "38489"
  },
  {
    "text": "successfully in your app the first thing",
    "start": "38489",
    "end": "40320"
  },
  {
    "text": "you should know is that there are three",
    "start": "40320",
    "end": "41489"
  },
  {
    "text": "main types of in-app purchases",
    "start": "41489",
    "end": "42719"
  },
  {
    "text": "consumables are products that are",
    "start": "42719",
    "end": "44250"
  },
  {
    "text": "depleted that can be purchased multiple",
    "start": "44250",
    "end": "45600"
  },
  {
    "text": "times like coins in a game in Summa",
    "start": "45600",
    "end": "47910"
  },
  {
    "text": "bowls are what we're focused on in this",
    "start": "47910",
    "end": "49140"
  },
  {
    "text": "video and we'll build a feature that",
    "start": "49140",
    "end": "50550"
  },
  {
    "text": "allows the user to buy some gems consume",
    "start": "50550",
    "end": "52770"
  },
  {
    "text": "them and then buy some more the second",
    "start": "52770",
    "end": "54660"
  },
  {
    "text": "type is a non consumable which is",
    "start": "54660",
    "end": "56280"
  },
  {
    "text": "something the user purchases once like",
    "start": "56280",
    "end": "57840"
  },
  {
    "text": "an upgrade and then should never have to",
    "start": "57840",
    "end": "59520"
  },
  {
    "text": "purchase it again in the future and the",
    "start": "59520",
    "end": "61260"
  },
  {
    "text": "third type is a subscription which gives",
    "start": "61260",
    "end": "62910"
  },
  {
    "text": "the user access to the purchase for a",
    "start": "62910",
    "end": "64530"
  },
  {
    "text": "limited amount of time now these",
    "start": "64530",
    "end": "66330"
  },
  {
    "text": "concepts apply to both iOS and Android",
    "start": "66330",
    "end": "68070"
  },
  {
    "text": "but there are some subtle yet important",
    "start": "68070",
    "end": "70020"
  },
  {
    "text": "differences that we'll look at when we",
    "start": "70020",
    "end": "71280"
  },
  {
    "text": "get into the code in a few minutes and",
    "start": "71280",
    "end": "72630"
  },
  {
    "text": "another thing you should know about",
    "start": "72630",
    "end": "73770"
  },
  {
    "text": "in-app purchases is that they're almost",
    "start": "73770",
    "end": "75360"
  },
  {
    "text": "always required if you're selling",
    "start": "75360",
    "end": "77009"
  },
  {
    "text": "digital content that means API is like",
    "start": "77009",
    "end": "79110"
  },
  {
    "text": "stripe and PayPal are out of the",
    "start": "79110",
    "end": "80729"
  },
  {
    "text": "question",
    "start": "80729",
    "end": "81270"
  },
  {
    "text": "but luckily flutter just recently",
    "start": "81270",
    "end": "82860"
  },
  {
    "text": "released an officially supported plugin",
    "start": "82860",
    "end": "84509"
  },
  {
    "text": "for in-app purchases that provides a",
    "start": "84509",
    "end": "86189"
  },
  {
    "text": "unified interface across iOS and Android",
    "start": "86189",
    "end": "88049"
  },
  {
    "text": "that's what we'll be using in this video",
    "start": "88049",
    "end": "89939"
  },
  {
    "text": "but it is currently in beta so things",
    "start": "89939",
    "end": "91799"
  },
  {
    "text": "may change in the future now when it",
    "start": "91799",
    "end": "93600"
  },
  {
    "text": "comes to making millions of dollars per",
    "start": "93600",
    "end": "94950"
  },
  {
    "text": "day you need to build an app that's both",
    "start": "94950",
    "end": "96720"
  },
  {
    "text": "highly addictive and that targets a wide",
    "start": "96720",
    "end": "98700"
  },
  {
    "text": "audience you should design your",
    "start": "98700",
    "end": "105000"
  },
  {
    "text": "interface around dopamine hits and",
    "start": "105000",
    "end": "106590"
  },
  {
    "text": "compulsion loops in other words reward",
    "start": "106590",
    "end": "108570"
  },
  {
    "text": "the user on a regular basis but always",
    "start": "108570",
    "end": "110430"
  },
  {
    "text": "keep them chasing the dragon so now that",
    "start": "110430",
    "end": "123689"
  },
  {
    "text": "you know how to design your app let's go",
    "start": "123689",
    "end": "125280"
  },
  {
    "text": "ahead and get into the technical details",
    "start": "125280",
    "end": "126899"
  },
  {
    "text": "the first thing we'll take care of is",
    "start": "126899",
    "end": "128429"
  },
  {
    "text": "the initial setup for both iOS and",
    "start": "128429",
    "end": "130110"
  },
  {
    "text": "Android for iOS you'll need to have an",
    "start": "130110",
    "end": "132150"
  },
  {
    "text": "Apple Developer account and",
    "start": "132150",
    "end": "133620"
  },
  {
    "text": "making the assumption that you have a",
    "start": "133620",
    "end": "134790"
  },
  {
    "text": "release of your iOS app on App Store",
    "start": "134790",
    "end": "136860"
  },
  {
    "text": "connect it doesn't need to be on the",
    "start": "136860",
    "end": "138269"
  },
  {
    "text": "public App Store just App Store connect",
    "start": "138269",
    "end": "139950"
  },
  {
    "text": "for use with things like test flight",
    "start": "139950",
    "end": "141390"
  },
  {
    "text": "there are a lot of small but easy steps",
    "start": "141390",
    "end": "143340"
  },
  {
    "text": "involved with that that are beyond the",
    "start": "143340",
    "end": "144599"
  },
  {
    "text": "scope of this video but the flutter",
    "start": "144599",
    "end": "146129"
  },
  {
    "text": "documentation has a detailed guide for",
    "start": "146129",
    "end": "147930"
  },
  {
    "text": "preparing an iOS release and I also have",
    "start": "147930",
    "end": "150060"
  },
  {
    "text": "a video that covers it in my full",
    "start": "150060",
    "end": "151530"
  },
  {
    "text": "flutter course in App Store connect",
    "start": "151530",
    "end": "153599"
  },
  {
    "text": "we'll go to the features tab add a new",
    "start": "153599",
    "end": "155220"
  },
  {
    "text": "in-app purchase making sure that it's a",
    "start": "155220",
    "end": "157110"
  },
  {
    "text": "consumable type then we'll give it a",
    "start": "157110",
    "end": "158760"
  },
  {
    "text": "name and a Product ID and we want to",
    "start": "158760",
    "end": "160739"
  },
  {
    "text": "keep a note of this Product ID because",
    "start": "160739",
    "end": "162299"
  },
  {
    "text": "we want that to be the same on the",
    "start": "162299",
    "end": "163650"
  },
  {
    "text": "Google Play Store and everything else is",
    "start": "163650",
    "end": "165569"
  },
  {
    "text": "just the pricing and display details for",
    "start": "165569",
    "end": "167430"
  },
  {
    "text": "your actual product so now that we have",
    "start": "167430",
    "end": "169079"
  },
  {
    "text": "our product will go into Xcode and",
    "start": "169079",
    "end": "171060"
  },
  {
    "text": "enable the in-app purchases capability",
    "start": "171060",
    "end": "172950"
  },
  {
    "text": "select the build target go to the",
    "start": "172950",
    "end": "174720"
  },
  {
    "text": "capabilities tab and then flip the",
    "start": "174720",
    "end": "176280"
  },
  {
    "text": "in-app purchases switch to on so that",
    "start": "176280",
    "end": "178739"
  },
  {
    "text": "takes care of the Apple App Store now",
    "start": "178739",
    "end": "180420"
  },
  {
    "text": "let's switch gears to Android and the",
    "start": "180420",
    "end": "182069"
  },
  {
    "text": "Google Play Store at this point I'm",
    "start": "182069",
    "end": "183870"
  },
  {
    "text": "assuming that you have a Google Play",
    "start": "183870",
    "end": "185220"
  },
  {
    "text": "Developer account and you'll also need",
    "start": "185220",
    "end": "186900"
  },
  {
    "text": "to go through the steps to create a",
    "start": "186900",
    "end": "188099"
  },
  {
    "text": "signed release that can be uploaded to",
    "start": "188099",
    "end": "190019"
  },
  {
    "text": "Google Play and once again there are a",
    "start": "190019",
    "end": "191909"
  },
  {
    "text": "lot of easy steps involved beyond the",
    "start": "191909",
    "end": "193530"
  },
  {
    "text": "scope of this video so refer to the",
    "start": "193530",
    "end": "195329"
  },
  {
    "text": "flutter documentation or the full",
    "start": "195329",
    "end": "197010"
  },
  {
    "text": "flutter course once you create the",
    "start": "197010",
    "end": "198540"
  },
  {
    "text": "actual signed apk you'll need to create",
    "start": "198540",
    "end": "200400"
  },
  {
    "text": "at least an alpha release for your app",
    "start": "200400",
    "end": "202109"
  },
  {
    "text": "and that will allow you to test the",
    "start": "202109",
    "end": "203669"
  },
  {
    "text": "Google Play billing API locally on your",
    "start": "203669",
    "end": "205769"
  },
  {
    "text": "device that Google billing API simply",
    "start": "205769",
    "end": "207750"
  },
  {
    "text": "won't work if you don't have a release",
    "start": "207750",
    "end": "209129"
  },
  {
    "text": "created for your app and you'll also",
    "start": "209129",
    "end": "210629"
  },
  {
    "text": "want to add your email address as a",
    "start": "210629",
    "end": "212129"
  },
  {
    "text": "tester on that track from there we'll go",
    "start": "212129",
    "end": "214260"
  },
  {
    "text": "to the store presence tab then to in-app",
    "start": "214260",
    "end": "216150"
  },
  {
    "text": "products and then go to manage products",
    "start": "216150",
    "end": "218400"
  },
  {
    "text": "now on Google Play you don't actually",
    "start": "218400",
    "end": "219810"
  },
  {
    "text": "select a distinction between consumable",
    "start": "219810",
    "end": "221760"
  },
  {
    "text": "and non consumable instead you handle",
    "start": "221760",
    "end": "223620"
  },
  {
    "text": "that directly in the app and we'll see",
    "start": "223620",
    "end": "225540"
  },
  {
    "text": "how that works in the source code in",
    "start": "225540",
    "end": "226680"
  },
  {
    "text": "just a minute for now we'll go ahead and",
    "start": "226680",
    "end": "228150"
  },
  {
    "text": "create a new product with the same",
    "start": "228150",
    "end": "229739"
  },
  {
    "text": "product ID that we used on iOS now make",
    "start": "229739",
    "end": "232319"
  },
  {
    "text": "sure to set your product to active and",
    "start": "232319",
    "end": "234060"
  },
  {
    "text": "then everything else should be pretty",
    "start": "234060",
    "end": "235260"
  },
  {
    "text": "self-explanatory now that we have the",
    "start": "235260",
    "end": "237150"
  },
  {
    "text": "initial set up out of the way we can",
    "start": "237150",
    "end": "238470"
  },
  {
    "text": "start developing our flutter app now I",
    "start": "238470",
    "end": "240209"
  },
  {
    "text": "want to start by saying that the code",
    "start": "240209",
    "end": "241470"
  },
  {
    "text": "I'm about to show you focuses on the API",
    "start": "241470",
    "end": "243540"
  },
  {
    "text": "of the in-app purchases plugin I want to",
    "start": "243540",
    "end": "245970"
  },
  {
    "text": "keep the implementation details as unup",
    "start": "245970",
    "end": "247829"
  },
  {
    "text": "enya nated as possible so I'm only using",
    "start": "247829",
    "end": "249900"
  },
  {
    "text": "the tools that are built into flutter",
    "start": "249900",
    "end": "251160"
  },
  {
    "text": "but this is a type of feature that could",
    "start": "251160",
    "end": "252930"
  },
  {
    "text": "benefit from things like provider block",
    "start": "252930",
    "end": "254760"
  },
  {
    "text": "or firebase to manage the state of your",
    "start": "254760",
    "end": "257250"
  },
  {
    "text": "purchases across multiple devices and",
    "start": "257250",
    "end": "259049"
  },
  {
    "text": "screens but I'll leave those decisions",
    "start": "259049",
    "end": "260820"
  },
  {
    "text": "up to you I just want to show you how to",
    "start": "260820",
    "end": "262260"
  },
  {
    "text": "build a Minimum Viable Product using",
    "start": "262260",
    "end": "264090"
  },
  {
    "text": "nothing but a stateful widget the first",
    "start": "264090",
    "end": "266010"
  },
  {
    "text": "thing we'll do is add the plug",
    "start": "266010",
    "end": "267150"
  },
  {
    "text": "to our pups Becky Amal then we'll go",
    "start": "267150",
    "end": "268889"
  },
  {
    "text": "ahead and import it in our dart file",
    "start": "268889",
    "end": "270300"
  },
  {
    "text": "along with IO so we can do platform",
    "start": "270300",
    "end": "272400"
  },
  {
    "text": "checking I'm calling this the market",
    "start": "272400",
    "end": "274199"
  },
  {
    "text": "screen and let's start by looking at the",
    "start": "274199",
    "end": "275880"
  },
  {
    "text": "different properties or state available",
    "start": "275880",
    "end": "277410"
  },
  {
    "text": "on the switch --it first we'll make a",
    "start": "277410",
    "end": "279150"
  },
  {
    "text": "reference to the in-app purchase",
    "start": "279150",
    "end": "280650"
  },
  {
    "text": "connection instance which gives us",
    "start": "280650",
    "end": "282180"
  },
  {
    "text": "access to all of the API methods in the",
    "start": "282180",
    "end": "284100"
  },
  {
    "text": "plug-in that will just keep our code",
    "start": "284100",
    "end": "285360"
  },
  {
    "text": "nice and concise the first part of the",
    "start": "285360",
    "end": "287250"
  },
  {
    "text": "initialization process is to check if",
    "start": "287250",
    "end": "289229"
  },
  {
    "text": "the API is actually available on this",
    "start": "289229",
    "end": "290880"
  },
  {
    "text": "device then we'll set up a list that",
    "start": "290880",
    "end": "292860"
  },
  {
    "text": "keeps the product details that we query",
    "start": "292860",
    "end": "294660"
  },
  {
    "text": "from the Google Play Store or the Apple",
    "start": "294660",
    "end": "296340"
  },
  {
    "text": "App Store and then also a set of",
    "start": "296340",
    "end": "297990"
  },
  {
    "text": "purchase details that gives us the users",
    "start": "297990",
    "end": "299789"
  },
  {
    "text": "past purchases then we'll also set up a",
    "start": "299789",
    "end": "301979"
  },
  {
    "text": "subscription that listens to a stream of",
    "start": "301979",
    "end": "304110"
  },
  {
    "text": "updates to the purchase details so this",
    "start": "304110",
    "end": "306720"
  },
  {
    "text": "stream will emit a new value when the",
    "start": "306720",
    "end": "308400"
  },
  {
    "text": "user buys a product in the app or if",
    "start": "308400",
    "end": "310229"
  },
  {
    "text": "they buy a product from a different",
    "start": "310229",
    "end": "311490"
  },
  {
    "text": "client and lastly I have a placeholder",
    "start": "311490",
    "end": "313560"
  },
  {
    "text": "for credits which is just used to",
    "start": "313560",
    "end": "315000"
  },
  {
    "text": "represent the consumable product in this",
    "start": "315000",
    "end": "316919"
  },
  {
    "text": "demo now moving on to the lifecycle",
    "start": "316919",
    "end": "318840"
  },
  {
    "text": "hooks during an it state we're going to",
    "start": "318840",
    "end": "320880"
  },
  {
    "text": "fetch the products and purchases from",
    "start": "320880",
    "end": "322680"
  },
  {
    "text": "the corresponding marketplace and that",
    "start": "322680",
    "end": "324210"
  },
  {
    "text": "stuff is all asynchronous so we'll move",
    "start": "324210",
    "end": "325949"
  },
  {
    "text": "it into its own method and we also have",
    "start": "325949",
    "end": "327900"
  },
  {
    "text": "a stream on this widget so we'll want to",
    "start": "327900",
    "end": "329370"
  },
  {
    "text": "make sure to cancel it now the next",
    "start": "329370",
    "end": "331800"
  },
  {
    "text": "thing we'll look at is the actual UI",
    "start": "331800",
    "end": "333000"
  },
  {
    "text": "itself which is very simple in this case",
    "start": "333000",
    "end": "334919"
  },
  {
    "text": "we have a scaffold with an app bar that",
    "start": "334919",
    "end": "337080"
  },
  {
    "text": "will either display open for business or",
    "start": "337080",
    "end": "338970"
  },
  {
    "text": "not available depending on whether or",
    "start": "338970",
    "end": "340560"
  },
  {
    "text": "not the in-app purchases API is",
    "start": "340560",
    "end": "342150"
  },
  {
    "text": "available from there we'll loop over the",
    "start": "342150",
    "end": "344070"
  },
  {
    "text": "products that we fetch from the",
    "start": "344070",
    "end": "345539"
  },
  {
    "text": "marketplace and then for each product",
    "start": "345539",
    "end": "347310"
  },
  {
    "text": "we'll need to determine if the user has",
    "start": "347310",
    "end": "349080"
  },
  {
    "text": "a past purchase for it if they have",
    "start": "349080",
    "end": "351060"
  },
  {
    "text": "purchased a product then we'll create",
    "start": "351060",
    "end": "352470"
  },
  {
    "text": "some custom logic to allow them to",
    "start": "352470",
    "end": "354120"
  },
  {
    "text": "consume it otherwise we'll just go ahead",
    "start": "354120",
    "end": "355889"
  },
  {
    "text": "and display a button that allows them to",
    "start": "355889",
    "end": "357389"
  },
  {
    "text": "make a new purchase this is just a bare",
    "start": "357389",
    "end": "359880"
  },
  {
    "text": "minimum UI example so you'll definitely",
    "start": "359880",
    "end": "361680"
  },
  {
    "text": "want to customize it to fit within your",
    "start": "361680",
    "end": "363330"
  },
  {
    "text": "own app now the next major hurdle that",
    "start": "363330",
    "end": "365520"
  },
  {
    "text": "we'll tackle is initializing all the",
    "start": "365520",
    "end": "367289"
  },
  {
    "text": "data in this widget we'll do that with",
    "start": "367289",
    "end": "369240"
  },
  {
    "text": "an async method called initialize that",
    "start": "369240",
    "end": "371010"
  },
  {
    "text": "we call during the net state lifecycle",
    "start": "371010",
    "end": "372780"
  },
  {
    "text": "hook first we'll check to see if the API",
    "start": "372780",
    "end": "374729"
  },
  {
    "text": "is available and then if so we'll go",
    "start": "374729",
    "end": "376919"
  },
  {
    "text": "ahead and retrieve the products and the",
    "start": "376919",
    "end": "378780"
  },
  {
    "text": "users past purchases and I've moved that",
    "start": "378780",
    "end": "381000"
  },
  {
    "text": "logic into individual private methods",
    "start": "381000",
    "end": "382889"
  },
  {
    "text": "just so we get a clear picture of all",
    "start": "382889",
    "end": "384599"
  },
  {
    "text": "the steps involved and I'm sure someone",
    "start": "384599",
    "end": "386250"
  },
  {
    "text": "will call me out on this so instead of",
    "start": "386250",
    "end": "387690"
  },
  {
    "text": "awaiting products and then awaiting",
    "start": "387690",
    "end": "389340"
  },
  {
    "text": "purchases you can do it concurrently by",
    "start": "389340",
    "end": "391260"
  },
  {
    "text": "using future wait and add both of them",
    "start": "391260",
    "end": "393330"
  },
  {
    "text": "together in a list and that will run",
    "start": "393330",
    "end": "395130"
  },
  {
    "text": "them concurrently for a better",
    "start": "395130",
    "end": "396270"
  },
  {
    "text": "performance now just because you have",
    "start": "396270",
    "end": "398130"
  },
  {
    "text": "retrieved a purchase does not",
    "start": "398130",
    "end": "399450"
  },
  {
    "text": "necessarily mean that it's valid",
    "start": "399450",
    "end": "400740"
  },
  {
    "text": "so we'll also need to implement some",
    "start": "400740",
    "end": "402479"
  },
  {
    "text": "business logic to verify a purchase and",
    "start": "402479",
    "end": "404520"
  },
  {
    "text": "then throughout the lifecycle of the app",
    "start": "404520",
    "end": "406020"
  },
  {
    "text": "the user will hopefully purchase",
    "start": "406020",
    "end": "407340"
  },
  {
    "text": "additional products so we'll want to set",
    "start": "407340",
    "end": "409139"
  },
  {
    "text": "up a subscription to the purchase",
    "start": "409139",
    "end": "410970"
  },
  {
    "text": "updated stream this stream will emit a",
    "start": "410970",
    "end": "412949"
  },
  {
    "text": "list of newly created purchase details",
    "start": "412949",
    "end": "414780"
  },
  {
    "text": "so when the stream emits a new value we",
    "start": "414780",
    "end": "417300"
  },
  {
    "text": "can take those new purchases and then",
    "start": "417300",
    "end": "419009"
  },
  {
    "text": "append them to the existing list on this",
    "start": "419009",
    "end": "421020"
  },
  {
    "text": "widget what you don't want to do is",
    "start": "421020",
    "end": "422639"
  },
  {
    "text": "override the existing list because the",
    "start": "422639",
    "end": "424349"
  },
  {
    "text": "stream only emits new purchases so",
    "start": "424349",
    "end": "426479"
  },
  {
    "text": "that's just something to keep in mind so",
    "start": "426479",
    "end": "428849"
  },
  {
    "text": "now let's look at the implementation",
    "start": "428849",
    "end": "429810"
  },
  {
    "text": "details for this data retrieval first we",
    "start": "429810",
    "end": "432479"
  },
  {
    "text": "get products which is no different than",
    "start": "432479",
    "end": "434009"
  },
  {
    "text": "making an API call or reading from a",
    "start": "434009",
    "end": "436139"
  },
  {
    "text": "firestore document we just create a set",
    "start": "436139",
    "end": "438599"
  },
  {
    "text": "of the product IDs that we want to",
    "start": "438599",
    "end": "440159"
  },
  {
    "text": "retrieve from either the App Store or",
    "start": "440159",
    "end": "441599"
  },
  {
    "text": "the Google Play Store and then we run in",
    "start": "441599",
    "end": "443849"
  },
  {
    "text": "app purchases query product details",
    "start": "443849",
    "end": "445819"
  },
  {
    "text": "that's going to give us a response and",
    "start": "445819",
    "end": "448110"
  },
  {
    "text": "then we can check that response for",
    "start": "448110",
    "end": "449520"
  },
  {
    "text": "errors or to see if any of the product",
    "start": "449520",
    "end": "451259"
  },
  {
    "text": "IDs are missing but for the sake of",
    "start": "451259",
    "end": "453180"
  },
  {
    "text": "simplicity we'll call set state and set",
    "start": "453180",
    "end": "455190"
  },
  {
    "text": "the products equal to the response",
    "start": "455190",
    "end": "456900"
  },
  {
    "text": "product details so that gives us our",
    "start": "456900",
    "end": "459060"
  },
  {
    "text": "products for sale now we need to get the",
    "start": "459060",
    "end": "460949"
  },
  {
    "text": "users past purchases this is a very",
    "start": "460949",
    "end": "463139"
  },
  {
    "text": "similar process but instead we call",
    "start": "463139",
    "end": "464729"
  },
  {
    "text": "query past purchases but there's one",
    "start": "464729",
    "end": "466680"
  },
  {
    "text": "major caveat and this method does not",
    "start": "466680",
    "end": "468479"
  },
  {
    "text": "return consumed products because they",
    "start": "468479",
    "end": "470610"
  },
  {
    "text": "consumed product can be purchased",
    "start": "470610",
    "end": "471930"
  },
  {
    "text": "multiple times it's not going to be",
    "start": "471930",
    "end": "473460"
  },
  {
    "text": "returned by this method that means you",
    "start": "473460",
    "end": "475080"
  },
  {
    "text": "need to save the state of a consumed",
    "start": "475080",
    "end": "476789"
  },
  {
    "text": "product in your database that's the only",
    "start": "476789",
    "end": "478889"
  },
  {
    "text": "way the user will be able to retrieve it",
    "start": "478889",
    "end": "480240"
  },
  {
    "text": "after this widget has been destroyed so",
    "start": "480240",
    "end": "482669"
  },
  {
    "text": "getting past purchases from the actual",
    "start": "482669",
    "end": "484320"
  },
  {
    "text": "marketplace itself is really only",
    "start": "484320",
    "end": "486030"
  },
  {
    "text": "relevant for non consumable products but",
    "start": "486030",
    "end": "488639"
  },
  {
    "text": "one of the caveat that you should know",
    "start": "488639",
    "end": "489780"
  },
  {
    "text": "about is if you retrieve past purchases",
    "start": "489780",
    "end": "491159"
  },
  {
    "text": "you'll also want to mark them as",
    "start": "491159",
    "end": "492960"
  },
  {
    "text": "complete on iOS now if you do have a",
    "start": "492960",
    "end": "495180"
  },
  {
    "text": "consumable product it will be 100% your",
    "start": "495180",
    "end": "497430"
  },
  {
    "text": "own business logic to retrieve it if",
    "start": "497430",
    "end": "499319"
  },
  {
    "text": "this were my app I would be using",
    "start": "499319",
    "end": "500580"
  },
  {
    "text": "firebase so I would most likely retrieve",
    "start": "500580",
    "end": "502319"
  },
  {
    "text": "it from the firestore database in any",
    "start": "502319",
    "end": "504419"
  },
  {
    "text": "case the final step here is to call set",
    "start": "504419",
    "end": "506520"
  },
  {
    "text": "state and set the purchases list on this",
    "start": "506520",
    "end": "508620"
  },
  {
    "text": "widget now the next thing we need to do",
    "start": "508620",
    "end": "510479"
  },
  {
    "text": "is figure out if a user has purchased a",
    "start": "510479",
    "end": "512130"
  },
  {
    "text": "specific product in this case I'm just",
    "start": "512130",
    "end": "514020"
  },
  {
    "text": "going to create a helper method that",
    "start": "514020",
    "end": "515820"
  },
  {
    "text": "takes a Product ID as its argument and",
    "start": "515820",
    "end": "517770"
  },
  {
    "text": "then that loops through the purchases",
    "start": "517770",
    "end": "519479"
  },
  {
    "text": "list to see if we have any matching IDs",
    "start": "519479",
    "end": "521520"
  },
  {
    "text": "if we have a match then we'll go ahead",
    "start": "521520",
    "end": "523140"
  },
  {
    "text": "and return the purchase details",
    "start": "523140",
    "end": "524159"
  },
  {
    "text": "otherwise we'll return null now the next",
    "start": "524159",
    "end": "526800"
  },
  {
    "text": "method is also going to be 100% your own",
    "start": "526800",
    "end": "528839"
  },
  {
    "text": "business logic that will take a purchase",
    "start": "528839",
    "end": "530760"
  },
  {
    "text": "and then actually deliver it in the app",
    "start": "530760",
    "end": "532410"
  },
  {
    "text": "itself in this demo we only have a",
    "start": "532410",
    "end": "534360"
  },
  {
    "text": "single",
    "start": "534360",
    "end": "534690"
  },
  {
    "text": "product so we're going to see if that",
    "start": "534690",
    "end": "536040"
  },
  {
    "text": "user has purchased the product and we'll",
    "start": "536040",
    "end": "537990"
  },
  {
    "text": "also go ahead and make sure that that",
    "start": "537990",
    "end": "539190"
  },
  {
    "text": "purchase is valid these status can also",
    "start": "539190",
    "end": "541350"
  },
  {
    "text": "be error or pending so we wouldn't want",
    "start": "541350",
    "end": "543420"
  },
  {
    "text": "to deliver the credits or the gems to",
    "start": "543420",
    "end": "545370"
  },
  {
    "text": "the app if the user hasn't fully paid",
    "start": "545370",
    "end": "546990"
  },
  {
    "text": "you'll want to verify purchases both",
    "start": "546990",
    "end": "549180"
  },
  {
    "text": "when the app is initialized and then",
    "start": "549180",
    "end": "550710"
  },
  {
    "text": "also when a new purchase is emitted",
    "start": "550710",
    "end": "552240"
  },
  {
    "text": "through that purchase updated stream and",
    "start": "552240",
    "end": "554040"
  },
  {
    "text": "you may even want to do that server-side",
    "start": "554040",
    "end": "555980"
  },
  {
    "text": "so at this point we have all of the",
    "start": "555980",
    "end": "558060"
  },
  {
    "text": "necessary data loaded into our widget",
    "start": "558060",
    "end": "559920"
  },
  {
    "text": "and now we need to give the user away to",
    "start": "559920",
    "end": "561270"
  },
  {
    "text": "purchase a product as well as consume a",
    "start": "561270",
    "end": "563280"
  },
  {
    "text": "product inside of our products loop",
    "start": "563280",
    "end": "564930"
  },
  {
    "text": "we'll have access to individual product",
    "start": "564930",
    "end": "566670"
  },
  {
    "text": "details which we can then pass to this",
    "start": "566670",
    "end": "568380"
  },
  {
    "text": "by-product method to create a purchase",
    "start": "568380",
    "end": "570420"
  },
  {
    "text": "per Ram that will send the necessary",
    "start": "570420",
    "end": "572460"
  },
  {
    "text": "data over to the corresponding",
    "start": "572460",
    "end": "573990"
  },
  {
    "text": "marketplace and then because Android",
    "start": "573990",
    "end": "575850"
  },
  {
    "text": "doesn't make the distinction between",
    "start": "575850",
    "end": "576990"
  },
  {
    "text": "consumable and non consumable you need",
    "start": "576990",
    "end": "579060"
  },
  {
    "text": "to do that when you purchase the product",
    "start": "579060",
    "end": "580530"
  },
  {
    "text": "so for one-time purchases you'll use by",
    "start": "580530",
    "end": "582690"
  },
  {
    "text": "non consumable but in our case we want",
    "start": "582690",
    "end": "584790"
  },
  {
    "text": "the user to buy this multiple times so",
    "start": "584790",
    "end": "586740"
  },
  {
    "text": "we'll say buy consumable now by default",
    "start": "586740",
    "end": "588510"
  },
  {
    "text": "it will be marked as consumed",
    "start": "588510",
    "end": "589920"
  },
  {
    "text": "automatically which means it's up to",
    "start": "589920",
    "end": "591420"
  },
  {
    "text": "your own business logic to control the",
    "start": "591420",
    "end": "593040"
  },
  {
    "text": "state of that purchase however I would",
    "start": "593040",
    "end": "595260"
  },
  {
    "text": "like to point out that you can set Auto",
    "start": "595260",
    "end": "596730"
  },
  {
    "text": "consume to false which only applies to",
    "start": "596730",
    "end": "598650"
  },
  {
    "text": "Android and that will prevent the user",
    "start": "598650",
    "end": "600660"
  },
  {
    "text": "from purchasing that product again until",
    "start": "600660",
    "end": "602580"
  },
  {
    "text": "you actually mark it as consumed and we",
    "start": "602580",
    "end": "604740"
  },
  {
    "text": "can actually demonstrate how that works",
    "start": "604740",
    "end": "606090"
  },
  {
    "text": "with our next method here called spend",
    "start": "606090",
    "end": "607710"
  },
  {
    "text": "credits it takes the purchase details as",
    "start": "607710",
    "end": "610020"
  },
  {
    "text": "its argument and then it will decrement",
    "start": "610020",
    "end": "611760"
  },
  {
    "text": "the credits on this widget every time",
    "start": "611760",
    "end": "613530"
  },
  {
    "text": "the user taps a button when the user",
    "start": "613530",
    "end": "615360"
  },
  {
    "text": "runs out of credits or when they equals",
    "start": "615360",
    "end": "616890"
  },
  {
    "text": "zero we'll go ahead and tell the Google",
    "start": "616890",
    "end": "618480"
  },
  {
    "text": "Play Store that that purchase has been",
    "start": "618480",
    "end": "619830"
  },
  {
    "text": "consumed and that will allow the user to",
    "start": "619830",
    "end": "621690"
  },
  {
    "text": "purchase another instance of this",
    "start": "621690",
    "end": "623250"
  },
  {
    "text": "product otherwise they'll get an error",
    "start": "623250",
    "end": "624810"
  },
  {
    "text": "that they already own this product and",
    "start": "624810",
    "end": "626400"
  },
  {
    "text": "that's all there is to it we now have",
    "start": "626400",
    "end": "627930"
  },
  {
    "text": "all the pieces in place to sell our",
    "start": "627930",
    "end": "629340"
  },
  {
    "text": "users an infinite number of useless gems",
    "start": "629340",
    "end": "631200"
  },
  {
    "text": "and we just need to refine our dopamine",
    "start": "631200",
    "end": "632790"
  },
  {
    "text": "hits and compulsion loops to start",
    "start": "632790",
    "end": "634470"
  },
  {
    "text": "making millions of dollars per day if",
    "start": "634470",
    "end": "635940"
  },
  {
    "text": "this video helped you please like and",
    "start": "635940",
    "end": "637260"
  },
  {
    "text": "subscribe and consider becoming a pro",
    "start": "637260",
    "end": "639000"
  },
  {
    "text": "member on fire ship IO to get access to",
    "start": "639000",
    "end": "640920"
  },
  {
    "text": "the full flora chorus and a bunch of",
    "start": "640920",
    "end": "642570"
  },
  {
    "text": "other exclusive content thanks for",
    "start": "642570",
    "end": "644370"
  },
  {
    "text": "watching and I will talk to you soon",
    "start": "644370",
    "end": "646800"
  },
  {
    "text": "[Music]",
    "start": "646800",
    "end": "655570"
  }
]