[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "in this episode we're going to build a",
    "start": "1079",
    "end": "3080"
  },
  {
    "text": "to-do list feature that performs the SQL",
    "start": "3080",
    "end": "6000"
  },
  {
    "text": "style crud operations of create read",
    "start": "6000",
    "end": "8920"
  },
  {
    "text": "update and delete no SQL uses different",
    "start": "8920",
    "end": "11679"
  },
  {
    "text": "terms for these operations so here's a",
    "start": "11679",
    "end": "14080"
  },
  {
    "text": "basic translation when working with",
    "start": "14080",
    "end": "16080"
  },
  {
    "start": "16000",
    "end": "28000"
  },
  {
    "text": "Firebase create equals push read equals",
    "start": "16080",
    "end": "20560"
  },
  {
    "text": "list or object update equals update or",
    "start": "20560",
    "end": "24880"
  },
  {
    "text": "set and delete equals",
    "start": "24880",
    "end": "27720"
  },
  {
    "text": "remove angular apps work with",
    "start": "27720",
    "end": "30039"
  },
  {
    "start": "28000",
    "end": "58000"
  },
  {
    "text": "asynchronous data streams using rxjs or",
    "start": "30039",
    "end": "33760"
  },
  {
    "text": "reactive extensions for",
    "start": "33760",
    "end": "35520"
  },
  {
    "text": "JavaScript a data stream can be pretty",
    "start": "35520",
    "end": "38280"
  },
  {
    "text": "much anything but in this context we're",
    "start": "38280",
    "end": "40280"
  },
  {
    "text": "talking about objects from the Firebase",
    "start": "40280",
    "end": "42559"
  },
  {
    "text": "real-time",
    "start": "42559",
    "end": "45120"
  },
  {
    "text": "database at this point it's assumed you",
    "start": "45600",
    "end": "47760"
  },
  {
    "text": "have the angular Fire 2 package",
    "start": "47760",
    "end": "49440"
  },
  {
    "text": "installed and bootstrapped into your app",
    "start": "49440",
    "end": "51879"
  },
  {
    "text": "if not go to the docs or check out our",
    "start": "51879",
    "end": "54120"
  },
  {
    "text": "environment setup",
    "start": "54120",
    "end": "56960"
  },
  {
    "start": "58000",
    "end": "70000"
  },
  {
    "text": "video start by generating the necessary",
    "start": "58480",
    "end": "61359"
  },
  {
    "text": "files from the command line the feature",
    "start": "61359",
    "end": "63600"
  },
  {
    "text": "is just a simple list of to-do items",
    "start": "63600",
    "end": "65880"
  },
  {
    "text": "that could be modified by",
    "start": "65880",
    "end": "68960"
  },
  {
    "text": "users we will give items their own",
    "start": "69080",
    "end": "71360"
  },
  {
    "start": "70000",
    "end": "81000"
  },
  {
    "text": "typescript class to keep our data nice",
    "start": "71360",
    "end": "73439"
  },
  {
    "text": "and",
    "start": "73439",
    "end": "74530"
  },
  {
    "text": "[Music]",
    "start": "74530",
    "end": "79180"
  },
  {
    "text": "organized all the cred magic happens in",
    "start": "80280",
    "end": "82680"
  },
  {
    "start": "81000",
    "end": "145000"
  },
  {
    "text": "the service which is going to perform",
    "start": "82680",
    "end": "84759"
  },
  {
    "text": "six different operations it can get a",
    "start": "84759",
    "end": "87079"
  },
  {
    "text": "list of items get a single item create a",
    "start": "87079",
    "end": "90240"
  },
  {
    "text": "new item update an existing item delete",
    "start": "90240",
    "end": "93320"
  },
  {
    "text": "an existing item and delete an entire",
    "start": "93320",
    "end": "95880"
  },
  {
    "text": "list of",
    "start": "95880",
    "end": "97840"
  },
  {
    "text": "items start by importing dependencies",
    "start": "97840",
    "end": "101040"
  },
  {
    "text": "and declaring a couple public",
    "start": "101040",
    "end": "104560"
  },
  {
    "text": "variables when we get an item or list of",
    "start": "104680",
    "end": "107640"
  },
  {
    "text": "items they will be returned as an",
    "start": "107640",
    "end": "109240"
  },
  {
    "text": "observable which can then be unwrapped",
    "start": "109240",
    "end": "111439"
  },
  {
    "text": "asynchronously from the component the",
    "start": "111439",
    "end": "113880"
  },
  {
    "text": "functions for getting an item or List",
    "start": "113880",
    "end": "115719"
  },
  {
    "text": "will return the observable so it can",
    "start": "115719",
    "end": "117799"
  },
  {
    "text": "then be set to a public variable all",
    "start": "117799",
    "end": "120520"
  },
  {
    "text": "other functions are going to return void",
    "start": "120520",
    "end": "122759"
  },
  {
    "text": "because they operate on the items",
    "start": "122759",
    "end": "124520"
  },
  {
    "text": "variable or take a specific key as an",
    "start": "124520",
    "end": "127200"
  },
  {
    "text": "argument any component watching the",
    "start": "127200",
    "end": "129200"
  },
  {
    "text": "items variable will be automatically",
    "start": "129200",
    "end": "131239"
  },
  {
    "text": "updated when these functions are called",
    "start": "131239",
    "end": "133120"
  },
  {
    "text": "from a",
    "start": "133120",
    "end": "134000"
  },
  {
    "text": "component all of these operations are",
    "start": "134000",
    "end": "136280"
  },
  {
    "text": "defined in the angular Fire 2 docs so I",
    "start": "136280",
    "end": "138800"
  },
  {
    "text": "recommend you check those out if you're",
    "start": "138800",
    "end": "140120"
  },
  {
    "text": "looking for more specific details on one",
    "start": "140120",
    "end": "142640"
  },
  {
    "text": "of these",
    "start": "142640",
    "end": "144879"
  },
  {
    "text": "functions the list component will serve",
    "start": "144879",
    "end": "147120"
  },
  {
    "start": "145000",
    "end": "178000"
  },
  {
    "text": "as the parent component that iterates",
    "start": "147120",
    "end": "148879"
  },
  {
    "text": "over items in the data base first we",
    "start": "148879",
    "end": "151040"
  },
  {
    "text": "need to define a public items variable",
    "start": "151040",
    "end": "153959"
  },
  {
    "text": "during the NG on AIT life cycle hook",
    "start": "153959",
    "end": "156959"
  },
  {
    "text": "this variable is going to hold the Fire",
    "start": "156959",
    "end": "158519"
  },
  {
    "text": "based list",
    "start": "158519",
    "end": "160200"
  },
  {
    "text": "observable then we use the ng4 directive",
    "start": "160200",
    "end": "163120"
  },
  {
    "text": "in the template along with the async",
    "start": "163120",
    "end": "165480"
  },
  {
    "text": "pipe to iterate over the observable the",
    "start": "165480",
    "end": "168599"
  },
  {
    "text": "async pipe is critical because the",
    "start": "168599",
    "end": "170760"
  },
  {
    "text": "observable will be empty on initial",
    "start": "170760",
    "end": "172280"
  },
  {
    "text": "rendering so we need to tell angular to",
    "start": "172280",
    "end": "174720"
  },
  {
    "text": "handle it differently than just a plain",
    "start": "174720",
    "end": "176680"
  },
  {
    "text": "JavaScript",
    "start": "176680",
    "end": "178840"
  },
  {
    "start": "178000",
    "end": "202000"
  },
  {
    "text": "object in the item detail component we",
    "start": "178840",
    "end": "181879"
  },
  {
    "text": "use the input decorator to pass data",
    "start": "181879",
    "end": "184000"
  },
  {
    "text": "from the parent to the child via the",
    "start": "184000",
    "end": "186519"
  },
  {
    "text": "template we also create a few functions",
    "start": "186519",
    "end": "189239"
  },
  {
    "text": "that can be triggered by clicking",
    "start": "189239",
    "end": "190480"
  },
  {
    "text": "buttons to operate on a single item",
    "start": "190480",
    "end": "192360"
  },
  {
    "text": "within the list in the template itself",
    "start": "192360",
    "end": "195000"
  },
  {
    "text": "we display the item attributes and add",
    "start": "195000",
    "end": "197560"
  },
  {
    "text": "the crud functions to the corresponding",
    "start": "197560",
    "end": "201400"
  },
  {
    "text": "buttons angular has several different",
    "start": "201400",
    "end": "203959"
  },
  {
    "start": "202000",
    "end": "260000"
  },
  {
    "text": "form validation methods but in this",
    "start": "203959",
    "end": "206239"
  },
  {
    "text": "example I'm going to use a template",
    "start": "206239",
    "end": "207680"
  },
  {
    "text": "driven approach that us uses the if then",
    "start": "207680",
    "end": "211000"
  },
  {
    "text": "lse syntax introduced in angular 4 this",
    "start": "211000",
    "end": "214640"
  },
  {
    "text": "method is only ideal for small simple",
    "start": "214640",
    "end": "216480"
  },
  {
    "text": "forms because all the logic is going to",
    "start": "216480",
    "end": "218439"
  },
  {
    "text": "be defined directly in the HTML which",
    "start": "218439",
    "end": "221439"
  },
  {
    "text": "tends to be harder to maintain than just",
    "start": "221439",
    "end": "223519"
  },
  {
    "text": "regular",
    "start": "223519",
    "end": "225920"
  },
  {
    "text": "typescript we Define two different",
    "start": "227360",
    "end": "229519"
  },
  {
    "text": "templates named valid and errors we can",
    "start": "229519",
    "end": "232640"
  },
  {
    "text": "then display these templates",
    "start": "232640",
    "end": "234000"
  },
  {
    "text": "conditionally based on the form State",
    "start": "234000",
    "end": "236760"
  },
  {
    "text": "the final step is to submit the form to",
    "start": "236760",
    "end": "239040"
  },
  {
    "text": "create a new item",
    "start": "239040",
    "end": "240480"
  },
  {
    "text": "in this case I just use the click event",
    "start": "240480",
    "end": "242680"
  },
  {
    "text": "to trigger the create item method from",
    "start": "242680",
    "end": "244920"
  },
  {
    "text": "the",
    "start": "244920",
    "end": "246159"
  },
  {
    "text": "service that's all for Firebase crud see",
    "start": "246159",
    "end": "248920"
  },
  {
    "text": "you next",
    "start": "248920",
    "end": "251319"
  },
  {
    "text": "[Music]",
    "start": "251730",
    "end": "256759"
  },
  {
    "text": "time",
    "start": "259160",
    "end": "262160"
  }
]