[
  {
    "start": "0",
    "end": "49000"
  },
  {
    "text": "most developers already know that redis",
    "start": "80",
    "end": "2240"
  },
  {
    "text": "is a mega fast in-memory database often",
    "start": "2240",
    "end": "4720"
  },
  {
    "text": "used as a cache to make traditional",
    "start": "4720",
    "end": "6480"
  },
  {
    "text": "databases faster but what most",
    "start": "6480",
    "end": "8240"
  },
  {
    "text": "developers don't know is that redis can",
    "start": "8240",
    "end": "10320"
  },
  {
    "text": "also be used as a primary app database",
    "start": "10320",
    "end": "12639"
  },
  {
    "text": "thanks to a suite of modules that add",
    "start": "12639",
    "end": "14400"
  },
  {
    "text": "additional data structures and commands",
    "start": "14400",
    "end": "16240"
  },
  {
    "text": "to core redis they can handle json data",
    "start": "16240",
    "end": "18720"
  },
  {
    "text": "full text search graph relationships and",
    "start": "18720",
    "end": "21039"
  },
  {
    "text": "many other features in today's video",
    "start": "21039",
    "end": "22880"
  },
  {
    "text": "we'll put this claim to the test by",
    "start": "22880",
    "end": "24400"
  },
  {
    "text": "building a full text autocomplete search",
    "start": "24400",
    "end": "26880"
  },
  {
    "text": "inspired by something like algolia or",
    "start": "26880",
    "end": "28800"
  },
  {
    "text": "elasticsearch where the user can add",
    "start": "28800",
    "end": "30720"
  },
  {
    "text": "items to the database and instantly view",
    "start": "30720",
    "end": "32719"
  },
  {
    "text": "the filtered results we'll build this",
    "start": "32719",
    "end": "34320"
  },
  {
    "text": "project from scratch using next.js",
    "start": "34320",
    "end": "36480"
  },
  {
    "text": "allowing us to use react on the front",
    "start": "36480",
    "end": "38079"
  },
  {
    "text": "end and nodejs to interact with redis on",
    "start": "38079",
    "end": "40480"
  },
  {
    "text": "the back end as an added bonus redis",
    "start": "40480",
    "end": "42480"
  },
  {
    "text": "just released a brand new sdk called",
    "start": "42480",
    "end": "44640"
  },
  {
    "text": "redis ohm that supports object mapping",
    "start": "44640",
    "end": "47039"
  },
  {
    "text": "and nodejs if you're new here like and",
    "start": "47039",
    "end": "48879"
  },
  {
    "text": "subscribe and you can follow along with",
    "start": "48879",
    "end": "50480"
  },
  {
    "start": "49000",
    "end": "93000"
  },
  {
    "text": "the full article on fireship io let's",
    "start": "50480",
    "end": "52800"
  },
  {
    "text": "first take a look at what we're building",
    "start": "52800",
    "end": "54079"
  },
  {
    "text": "today we have a form that when submitted",
    "start": "54079",
    "end": "56239"
  },
  {
    "text": "we'll add a new item to the database in",
    "start": "56239",
    "end": "58160"
  },
  {
    "text": "redis this data would normally be saved",
    "start": "58160",
    "end": "59920"
  },
  {
    "text": "as a hash data structure but a hash",
    "start": "59920",
    "end": "62079"
  },
  {
    "text": "doesn't support nested objects so",
    "start": "62079",
    "end": "64000"
  },
  {
    "text": "instead we'll be storing this data as",
    "start": "64000",
    "end": "65760"
  },
  {
    "text": "native json thanks to the redis json",
    "start": "65760",
    "end": "68159"
  },
  {
    "text": "module now after adding a few items to",
    "start": "68159",
    "end": "70320"
  },
  {
    "text": "the database we may want to retrieve",
    "start": "70320",
    "end": "71920"
  },
  {
    "text": "them later when i type into the search",
    "start": "71920",
    "end": "73360"
  },
  {
    "text": "form field you can see that it",
    "start": "73360",
    "end": "74799"
  },
  {
    "text": "automatically updates the results in the",
    "start": "74799",
    "end": "76400"
  },
  {
    "text": "ui after every keystroke that's made",
    "start": "76400",
    "end": "78560"
  },
  {
    "text": "possible by redis search which is an",
    "start": "78560",
    "end": "80400"
  },
  {
    "text": "incredibly powerful module that can",
    "start": "80400",
    "end": "82240"
  },
  {
    "text": "index all of the fields on your json",
    "start": "82240",
    "end": "84080"
  },
  {
    "text": "dataset at which point you can perform",
    "start": "84080",
    "end": "85840"
  },
  {
    "text": "complex queries like you would with the",
    "start": "85840",
    "end": "87600"
  },
  {
    "text": "where clause in sql and aggregations",
    "start": "87600",
    "end": "90079"
  },
  {
    "text": "like sum and count now we're ready to",
    "start": "90079",
    "end": "91759"
  },
  {
    "text": "start building there are a few different",
    "start": "91759",
    "end": "93119"
  },
  {
    "start": "93000",
    "end": "169000"
  },
  {
    "text": "ways you can get started with redis the",
    "start": "93119",
    "end": "94720"
  },
  {
    "text": "easiest option is to sign up for",
    "start": "94720",
    "end": "96479"
  },
  {
    "text": "rediscloud i collaborated with redis",
    "start": "96479",
    "end": "98560"
  },
  {
    "text": "enterprise cloud to make this video and",
    "start": "98560",
    "end": "100479"
  },
  {
    "text": "they're providing a 200 credit and also",
    "start": "100479",
    "end": "102880"
  },
  {
    "text": "a chance to win a tesla model 3 if you",
    "start": "102880",
    "end": "105200"
  },
  {
    "text": "use this code before january 31st so",
    "start": "105200",
    "end": "107360"
  },
  {
    "text": "that's pretty awesome but more",
    "start": "107360",
    "end": "108640"
  },
  {
    "text": "importantly redis is consistently the",
    "start": "108640",
    "end": "110479"
  },
  {
    "text": "most loved database out there i've used",
    "start": "110479",
    "end": "112320"
  },
  {
    "text": "it myself for many years and that's why",
    "start": "112320",
    "end": "113920"
  },
  {
    "text": "i decided to work with them on this",
    "start": "113920",
    "end": "115439"
  },
  {
    "text": "video after you sign in you'll be",
    "start": "115439",
    "end": "117280"
  },
  {
    "text": "prompted to create a new subscription go",
    "start": "117280",
    "end": "119360"
  },
  {
    "text": "ahead and do that and you can choose a",
    "start": "119360",
    "end": "121040"
  },
  {
    "text": "free fixed plan to play around once",
    "start": "121040",
    "end": "123200"
  },
  {
    "text": "that's done create a database and when",
    "start": "123200",
    "end": "125200"
  },
  {
    "text": "creating it make sure to add the add-on",
    "start": "125200",
    "end": "127360"
  },
  {
    "text": "modules of redis search and redis json",
    "start": "127360",
    "end": "130080"
  },
  {
    "text": "and you now have your own database that",
    "start": "130080",
    "end": "131680"
  },
  {
    "text": "can scale infinitely in the cloud to",
    "start": "131680",
    "end": "133599"
  },
  {
    "text": "connect to it you'll notice this public",
    "start": "133599",
    "end": "135440"
  },
  {
    "text": "endpoint url as well as a password for",
    "start": "135440",
    "end": "137920"
  },
  {
    "text": "the default user now the question",
    "start": "137920",
    "end": "139599"
  },
  {
    "text": "becomes how do we connect to our",
    "start": "139599",
    "end": "140959"
  },
  {
    "text": "database this is optional but the first",
    "start": "140959",
    "end": "142959"
  },
  {
    "text": "thing i would recommend doing is",
    "start": "142959",
    "end": "144319"
  },
  {
    "text": "downloading the redis insight tool which",
    "start": "144319",
    "end": "146319"
  },
  {
    "text": "gives you a gui to analyze and manage",
    "start": "146319",
    "end": "148800"
  },
  {
    "text": "data in the database once installed",
    "start": "148800",
    "end": "150720"
  },
  {
    "text": "click the option to add a new database",
    "start": "150720",
    "end": "152879"
  },
  {
    "text": "and then paste in the public url that",
    "start": "152879",
    "end": "155280"
  },
  {
    "text": "rediscloud provided you with then also",
    "start": "155280",
    "end": "157440"
  },
  {
    "text": "enter the username of default and the",
    "start": "157440",
    "end": "159440"
  },
  {
    "text": "password it generated and then it should",
    "start": "159440",
    "end": "161200"
  },
  {
    "text": "automatically connect to your database",
    "start": "161200",
    "end": "162959"
  },
  {
    "text": "the cool thing about redis is that it's",
    "start": "162959",
    "end": "164560"
  },
  {
    "text": "really easy to learn because everything",
    "start": "164560",
    "end": "166319"
  },
  {
    "text": "is organized into a set of key value",
    "start": "166319",
    "end": "168319"
  },
  {
    "text": "pairs here's a little crash course of",
    "start": "168319",
    "end": "170080"
  },
  {
    "start": "169000",
    "end": "250000"
  },
  {
    "text": "the redis basics to add a new item to",
    "start": "170080",
    "end": "172239"
  },
  {
    "text": "the database you create a new key every",
    "start": "172239",
    "end": "174239"
  },
  {
    "text": "key is unique and is used to identify a",
    "start": "174239",
    "end": "176560"
  },
  {
    "text": "value in the database a key can also",
    "start": "176560",
    "end": "178480"
  },
  {
    "text": "have a data type in this case we'll use",
    "start": "178480",
    "end": "180640"
  },
  {
    "text": "a string but there are more complex data",
    "start": "180640",
    "end": "182959"
  },
  {
    "text": "types like a hash for objects of",
    "start": "182959",
    "end": "185200"
  },
  {
    "text": "multiple key value pairs lists and as",
    "start": "185200",
    "end": "187519"
  },
  {
    "text": "we'll see later json data for now let's",
    "start": "187519",
    "end": "190000"
  },
  {
    "text": "go ahead and save a string with a key of",
    "start": "190000",
    "end": "192239"
  },
  {
    "text": "hello and a value of world it also gives",
    "start": "192239",
    "end": "195120"
  },
  {
    "text": "you the option to specify a ttl or time",
    "start": "195120",
    "end": "197840"
  },
  {
    "text": "to live after which point the data will",
    "start": "197840",
    "end": "199840"
  },
  {
    "text": "be automatically deleted if you want",
    "start": "199840",
    "end": "201680"
  },
  {
    "text": "leave it blank to keep the data forever",
    "start": "201680",
    "end": "203599"
  },
  {
    "text": "now the unique thing about redis is that",
    "start": "203599",
    "end": "205200"
  },
  {
    "text": "when you save data that data is kept in",
    "start": "205200",
    "end": "207599"
  },
  {
    "text": "memory as opposed to the disk like it",
    "start": "207599",
    "end": "209599"
  },
  {
    "text": "would be on most other traditional",
    "start": "209599",
    "end": "211040"
  },
  {
    "text": "database systems what that means is that",
    "start": "211040",
    "end": "213120"
  },
  {
    "text": "redis is extremely fast there's no need",
    "start": "213120",
    "end": "215200"
  },
  {
    "text": "for a round trip to the disk when",
    "start": "215200",
    "end": "216799"
  },
  {
    "text": "retrieving data but on redis cloud this",
    "start": "216799",
    "end": "219040"
  },
  {
    "text": "data is also persisted which means",
    "start": "219040",
    "end": "220879"
  },
  {
    "text": "there's never any actual data loss now",
    "start": "220879",
    "end": "222879"
  },
  {
    "text": "to make a read to the database let's go",
    "start": "222879",
    "end": "224720"
  },
  {
    "text": "over to the workbench panel and you'll",
    "start": "224720",
    "end": "226319"
  },
  {
    "text": "notice a terminal here where we can",
    "start": "226319",
    "end": "227840"
  },
  {
    "text": "write commands redis has a bunch of",
    "start": "227840",
    "end": "229840"
  },
  {
    "text": "built-in commands that allow us to do",
    "start": "229840",
    "end": "232000"
  },
  {
    "text": "different things in the database for",
    "start": "232000",
    "end": "233439"
  },
  {
    "text": "example what we just did previously was",
    "start": "233439",
    "end": "235360"
  },
  {
    "text": "a set with a command it would look like",
    "start": "235360",
    "end": "237200"
  },
  {
    "text": "set followed by hello world now to read",
    "start": "237200",
    "end": "240000"
  },
  {
    "text": "the string we can use the get command",
    "start": "240000",
    "end": "242000"
  },
  {
    "text": "followed by the key name of hello now",
    "start": "242000",
    "end": "244239"
  },
  {
    "text": "there are tons of other commands we",
    "start": "244239",
    "end": "245680"
  },
  {
    "text": "could execute here to interact with our",
    "start": "245680",
    "end": "247439"
  },
  {
    "text": "data but that's enough to give you the",
    "start": "247439",
    "end": "249120"
  },
  {
    "text": "general idea now we're ready to build",
    "start": "249120",
    "end": "250879"
  },
  {
    "start": "250000",
    "end": "332000"
  },
  {
    "text": "something cool and in order to do that",
    "start": "250879",
    "end": "252640"
  },
  {
    "text": "we'll want to first initialize next js",
    "start": "252640",
    "end": "254959"
  },
  {
    "text": "from the command line run npx create",
    "start": "254959",
    "end": "257280"
  },
  {
    "text": "next app then open it up in vs code the",
    "start": "257280",
    "end": "259600"
  },
  {
    "text": "project has only one dependency redis om",
    "start": "259600",
    "end": "262320"
  },
  {
    "text": "which you can install with npm this",
    "start": "262320",
    "end": "264160"
  },
  {
    "text": "library is brand new so keep in mind",
    "start": "264160",
    "end": "266000"
  },
  {
    "text": "that there may be changes or",
    "start": "266000",
    "end": "267120"
  },
  {
    "text": "enhancements in the near future what it",
    "start": "267120",
    "end": "268800"
  },
  {
    "text": "does is map your data into a javascript",
    "start": "268800",
    "end": "271440"
  },
  {
    "text": "class or entity making it really easy to",
    "start": "271440",
    "end": "274000"
  },
  {
    "text": "build a consistent schema around your",
    "start": "274000",
    "end": "275759"
  },
  {
    "text": "data and it simplifies many of the",
    "start": "275759",
    "end": "277440"
  },
  {
    "text": "create read update and delete operations",
    "start": "277440",
    "end": "279600"
  },
  {
    "text": "that you'll want to do on the database",
    "start": "279600",
    "end": "281280"
  },
  {
    "text": "first we'll need to connect to our cloud",
    "start": "281280",
    "end": "282720"
  },
  {
    "text": "database and for that i'm creating a",
    "start": "282720",
    "end": "284560"
  },
  {
    "text": "file",
    "start": "284560",
    "end": "285960"
  },
  {
    "text": "called.env.local that contains",
    "start": "285960",
    "end": "287680"
  },
  {
    "text": "environment variables that will",
    "start": "287680",
    "end": "289040"
  },
  {
    "text": "automatically be picked up by next.js",
    "start": "289040",
    "end": "291280"
  },
  {
    "text": "inside of it we have a value of redis",
    "start": "291280",
    "end": "293360"
  },
  {
    "text": "url which is formatted with the username",
    "start": "293360",
    "end": "295440"
  },
  {
    "text": "and password along with the url and port",
    "start": "295440",
    "end": "297840"
  },
  {
    "text": "of the actual database replace these",
    "start": "297840",
    "end": "299840"
  },
  {
    "text": "values with the ones provided by redis",
    "start": "299840",
    "end": "301759"
  },
  {
    "text": "cloud now from there let's create a lib",
    "start": "301759",
    "end": "303919"
  },
  {
    "text": "directory and a file named redis.js",
    "start": "303919",
    "end": "306880"
  },
  {
    "text": "inside the file we have a few imports",
    "start": "306880",
    "end": "308800"
  },
  {
    "text": "from redisome the first one we want to",
    "start": "308800",
    "end": "310639"
  },
  {
    "text": "think about is the client that's the",
    "start": "310639",
    "end": "312320"
  },
  {
    "text": "main entry point for interacting with",
    "start": "312320",
    "end": "314080"
  },
  {
    "text": "the database to connect to our database",
    "start": "314080",
    "end": "315759"
  },
  {
    "text": "in the cloud we call client open",
    "start": "315759",
    "end": "317680"
  },
  {
    "text": "followed by process.env.redisurl",
    "start": "317680",
    "end": "321199"
  },
  {
    "text": "that will access the environment",
    "start": "321199",
    "end": "322479"
  },
  {
    "text": "variable that we set up earlier now",
    "start": "322479",
    "end": "324400"
  },
  {
    "text": "because of the way next.js works i'm",
    "start": "324400",
    "end": "326240"
  },
  {
    "text": "also going to create an async function",
    "start": "326240",
    "end": "328320"
  },
  {
    "text": "called connect that will only open the",
    "start": "328320",
    "end": "330000"
  },
  {
    "text": "connection if it's not already open then",
    "start": "330000",
    "end": "332000"
  },
  {
    "start": "332000",
    "end": "401000"
  },
  {
    "text": "the next thing we'll do is define an",
    "start": "332000",
    "end": "333600"
  },
  {
    "text": "entity for our data an entity is",
    "start": "333600",
    "end": "335840"
  },
  {
    "text": "basically like a database table we first",
    "start": "335840",
    "end": "338000"
  },
  {
    "text": "define a class like car and extend it",
    "start": "338000",
    "end": "340400"
  },
  {
    "text": "with entity from there we can give it a",
    "start": "340400",
    "end": "342320"
  },
  {
    "text": "schema that contains a variety of",
    "start": "342320",
    "end": "344080"
  },
  {
    "text": "different properties each with its own",
    "start": "344080",
    "end": "345759"
  },
  {
    "text": "specific data type by default this",
    "start": "345759",
    "end": "347919"
  },
  {
    "text": "represents a hash in the redis database",
    "start": "347919",
    "end": "350080"
  },
  {
    "text": "however when building a more traditional",
    "start": "350080",
    "end": "352000"
  },
  {
    "text": "application you might find it easier to",
    "start": "352000",
    "end": "353840"
  },
  {
    "text": "work with json to use the redis json",
    "start": "353840",
    "end": "356000"
  },
  {
    "text": "module simply add the option of data",
    "start": "356000",
    "end": "358240"
  },
  {
    "text": "structure json and now redis will",
    "start": "358240",
    "end": "360160"
  },
  {
    "text": "operate more like a document oriented",
    "start": "360160",
    "end": "362080"
  },
  {
    "text": "database now that we have this entity",
    "start": "362080",
    "end": "363919"
  },
  {
    "text": "we're ready to start creating data to",
    "start": "363919",
    "end": "365840"
  },
  {
    "text": "handle the basic process i'm going to",
    "start": "365840",
    "end": "367759"
  },
  {
    "text": "export an async function here called",
    "start": "367759",
    "end": "369759"
  },
  {
    "text": "create car and then the first thing it",
    "start": "369759",
    "end": "371360"
  },
  {
    "text": "does in the body is connect to the",
    "start": "371360",
    "end": "372960"
  },
  {
    "text": "database client from there we create a",
    "start": "372960",
    "end": "375039"
  },
  {
    "text": "repository by combining the schema and",
    "start": "375039",
    "end": "377440"
  },
  {
    "text": "the client together if we want to create",
    "start": "377440",
    "end": "379440"
  },
  {
    "text": "new data we can use the create entity",
    "start": "379440",
    "end": "381600"
  },
  {
    "text": "method with a javascript object which",
    "start": "381600",
    "end": "383840"
  },
  {
    "text": "later we'll get from a form input in the",
    "start": "383840",
    "end": "385520"
  },
  {
    "text": "ui and lastly we can call repository",
    "start": "385520",
    "end": "388160"
  },
  {
    "text": "save with the card data to commit it to",
    "start": "388160",
    "end": "390479"
  },
  {
    "text": "the database and redis will return an",
    "start": "390479",
    "end": "392720"
  },
  {
    "text": "automatically generated unique id the",
    "start": "392720",
    "end": "394800"
  },
  {
    "text": "key is car colon unique id then the",
    "start": "394800",
    "end": "397840"
  },
  {
    "text": "value is json data with the schema that",
    "start": "397840",
    "end": "400479"
  },
  {
    "text": "you defined now the question becomes how",
    "start": "400479",
    "end": "402720"
  },
  {
    "start": "401000",
    "end": "554000"
  },
  {
    "text": "do we run this function for that we'll",
    "start": "402720",
    "end": "404400"
  },
  {
    "text": "need two things we need an api route",
    "start": "404400",
    "end": "406639"
  },
  {
    "text": "which will give a name of cars.js to",
    "start": "406639",
    "end": "409360"
  },
  {
    "text": "handle the right operation on the back",
    "start": "409360",
    "end": "411120"
  },
  {
    "text": "end then we'll need a react component",
    "start": "411120",
    "end": "412960"
  },
  {
    "text": "which i'll give a name of carforum.js in",
    "start": "412960",
    "end": "415680"
  },
  {
    "text": "the lib directory that will handle the",
    "start": "415680",
    "end": "417360"
  },
  {
    "text": "user input and make a request to that",
    "start": "417360",
    "end": "419440"
  },
  {
    "text": "api route let's first implement the api",
    "start": "419440",
    "end": "421840"
  },
  {
    "text": "route we first import the createcar",
    "start": "421840",
    "end": "423680"
  },
  {
    "text": "function we just defined then every api",
    "start": "423680",
    "end": "425840"
  },
  {
    "text": "route in next exports a default function",
    "start": "425840",
    "end": "428240"
  },
  {
    "text": "named handler which contains a request",
    "start": "428240",
    "end": "430400"
  },
  {
    "text": "and response where the request is the",
    "start": "430400",
    "end": "432240"
  },
  {
    "text": "incoming data and the response is the",
    "start": "432240",
    "end": "434240"
  },
  {
    "text": "outgoing data you want to send back to",
    "start": "434240",
    "end": "435840"
  },
  {
    "text": "the client in this case we'll want to",
    "start": "435840",
    "end": "437520"
  },
  {
    "text": "use the request body which will be json",
    "start": "437520",
    "end": "439759"
  },
  {
    "text": "data from the form to create a new car",
    "start": "439759",
    "end": "441919"
  },
  {
    "text": "once redis is done writing that data we",
    "start": "441919",
    "end": "443919"
  },
  {
    "text": "can then send a response back to the",
    "start": "443919",
    "end": "445520"
  },
  {
    "text": "client letting them know it was",
    "start": "445520",
    "end": "446800"
  },
  {
    "text": "successful with the new unique id now",
    "start": "446800",
    "end": "449039"
  },
  {
    "text": "that we have an api endpoint we want to",
    "start": "449039",
    "end": "451039"
  },
  {
    "text": "call it from the front end when a form",
    "start": "451039",
    "end": "452720"
  },
  {
    "text": "is submitted in carform.js i have a",
    "start": "452720",
    "end": "455280"
  },
  {
    "text": "react component and in the jsx we have a",
    "start": "455280",
    "end": "458160"
  },
  {
    "text": "standard html form with a few different",
    "start": "458160",
    "end": "460560"
  },
  {
    "text": "text inputs it also has a submit button",
    "start": "460560",
    "end": "462960"
  },
  {
    "text": "and we will intercept the submit event",
    "start": "462960",
    "end": "465039"
  },
  {
    "text": "by passing a function to the form called",
    "start": "465039",
    "end": "466879"
  },
  {
    "text": "handle submit in the handle submit",
    "start": "466879",
    "end": "468639"
  },
  {
    "text": "function we'll first call event prevent",
    "start": "468639",
    "end": "470639"
  },
  {
    "text": "default to prevent the page from",
    "start": "470639",
    "end": "472080"
  },
  {
    "text": "refreshing on submit and then here's a",
    "start": "472080",
    "end": "473919"
  },
  {
    "text": "cool trick when handling form data in a",
    "start": "473919",
    "end": "475919"
  },
  {
    "text": "react component normally to convert the",
    "start": "475919",
    "end": "478080"
  },
  {
    "text": "form event to json you would have to",
    "start": "478080",
    "end": "479840"
  },
  {
    "text": "access each individual property which",
    "start": "479840",
    "end": "481680"
  },
  {
    "text": "leads to some really ugly and tedious",
    "start": "481680",
    "end": "483520"
  },
  {
    "text": "code a better approach is to convert the",
    "start": "483520",
    "end": "485919"
  },
  {
    "text": "event target which is the html form to",
    "start": "485919",
    "end": "488479"
  },
  {
    "text": "the form data class which is built into",
    "start": "488479",
    "end": "490639"
  },
  {
    "text": "the browser that will organize the form",
    "start": "490639",
    "end": "492479"
  },
  {
    "text": "fields into a bunch of key value pairs",
    "start": "492479",
    "end": "494560"
  },
  {
    "text": "which we can then turn into a plain",
    "start": "494560",
    "end": "496000"
  },
  {
    "text": "javascript object by using object from",
    "start": "496000",
    "end": "498720"
  },
  {
    "text": "entries now it's important to point out",
    "start": "498720",
    "end": "500479"
  },
  {
    "text": "that the name that you provide to the",
    "start": "500479",
    "end": "502160"
  },
  {
    "text": "form input determines the name of the",
    "start": "502160",
    "end": "504160"
  },
  {
    "text": "key so you'll want to make sure that",
    "start": "504160",
    "end": "505360"
  },
  {
    "text": "that name matches the schema that you",
    "start": "505360",
    "end": "507360"
  },
  {
    "text": "chose for your redis data now the final",
    "start": "507360",
    "end": "509599"
  },
  {
    "text": "step is to make a request to the api",
    "start": "509599",
    "end": "511759"
  },
  {
    "text": "endpoint which we can do by using the",
    "start": "511759",
    "end": "513919"
  },
  {
    "text": "fetch api in the browser and for the",
    "start": "513919",
    "end": "516000"
  },
  {
    "text": "body we pass it the json stringified",
    "start": "516000",
    "end": "518479"
  },
  {
    "text": "form data you'll want to make sure the",
    "start": "518479",
    "end": "519919"
  },
  {
    "text": "content type is json and the method is",
    "start": "519919",
    "end": "522000"
  },
  {
    "text": "post from there we can send the request",
    "start": "522000",
    "end": "523760"
  },
  {
    "text": "convert it to json and then console log",
    "start": "523760",
    "end": "526160"
  },
  {
    "text": "the result and now there's just one",
    "start": "526160",
    "end": "527680"
  },
  {
    "text": "thing left to do let's go into the",
    "start": "527680",
    "end": "529120"
  },
  {
    "text": "index.js file and declare the car form",
    "start": "529120",
    "end": "531600"
  },
  {
    "text": "there and now we can fire up the next js",
    "start": "531600",
    "end": "533680"
  },
  {
    "text": "app by running npm run dev in the ui you",
    "start": "533680",
    "end": "536480"
  },
  {
    "text": "should have a form that looks like this",
    "start": "536480",
    "end": "538160"
  },
  {
    "text": "mine looks a little prettier because",
    "start": "538160",
    "end": "539519"
  },
  {
    "text": "i've added bootstrap for styling and",
    "start": "539519",
    "end": "541360"
  },
  {
    "text": "when you fill it out and submit it it",
    "start": "541360",
    "end": "543120"
  },
  {
    "text": "should console log the id that was",
    "start": "543120",
    "end": "544640"
  },
  {
    "text": "created by redis in addition you should",
    "start": "544640",
    "end": "546880"
  },
  {
    "text": "be able to open up redis inside to see",
    "start": "546880",
    "end": "549120"
  },
  {
    "text": "the data there as well at this point we",
    "start": "549120",
    "end": "551120"
  },
  {
    "text": "have a very basic full stack application",
    "start": "551120",
    "end": "553120"
  },
  {
    "text": "with redis now you might be wondering",
    "start": "553120",
    "end": "554959"
  },
  {
    "start": "554000",
    "end": "784000"
  },
  {
    "text": "how do i query and filter this data to",
    "start": "554959",
    "end": "557200"
  },
  {
    "text": "show it on the front end that's where",
    "start": "557200",
    "end": "558720"
  },
  {
    "text": "redis search comes in it's a very",
    "start": "558720",
    "end": "560320"
  },
  {
    "text": "powerful module that allows you to index",
    "start": "560320",
    "end": "562560"
  },
  {
    "text": "and search across your data set to use",
    "start": "562560",
    "end": "564640"
  },
  {
    "text": "it though we first need to create an",
    "start": "564640",
    "end": "566399"
  },
  {
    "text": "index and to do that i'm going to go",
    "start": "566399",
    "end": "568160"
  },
  {
    "text": "back into the redis.js file and create a",
    "start": "568160",
    "end": "570800"
  },
  {
    "text": "new function called createindex all this",
    "start": "570800",
    "end": "572880"
  },
  {
    "text": "function needs to do is reference the",
    "start": "572880",
    "end": "574640"
  },
  {
    "text": "repository and call the createindex",
    "start": "574640",
    "end": "577040"
  },
  {
    "text": "method now before we use this function",
    "start": "577040",
    "end": "579120"
  },
  {
    "text": "another thing i want to point out is",
    "start": "579120",
    "end": "580560"
  },
  {
    "text": "that we can go up into our schema and",
    "start": "580560",
    "end": "582640"
  },
  {
    "text": "add a text search true option to any",
    "start": "582640",
    "end": "585279"
  },
  {
    "text": "fields that want to enable full text",
    "start": "585279",
    "end": "587120"
  },
  {
    "text": "search what this allows us to do is",
    "start": "587120",
    "end": "589040"
  },
  {
    "text": "query this data with fuzzy matching",
    "start": "589040",
    "end": "591040"
  },
  {
    "text": "where it can recognize typos and common",
    "start": "591040",
    "end": "593120"
  },
  {
    "text": "words yet still return the intended",
    "start": "593120",
    "end": "594800"
  },
  {
    "text": "result let's go ahead and add the full",
    "start": "594800",
    "end": "596399"
  },
  {
    "text": "text option to the description now",
    "start": "596399",
    "end": "598399"
  },
  {
    "text": "creating the index is only something you",
    "start": "598399",
    "end": "600160"
  },
  {
    "text": "need to do once for convenience i'm",
    "start": "600160",
    "end": "602320"
  },
  {
    "text": "going to add another api route here",
    "start": "602320",
    "end": "604399"
  },
  {
    "text": "called create index that imports that",
    "start": "604399",
    "end": "606560"
  },
  {
    "text": "function and then sends a response back",
    "start": "606560",
    "end": "608560"
  },
  {
    "text": "once defined we can then go to the",
    "start": "608560",
    "end": "610320"
  },
  {
    "text": "browser and access the url api create",
    "start": "610320",
    "end": "613200"
  },
  {
    "text": "index to add the index to the database",
    "start": "613200",
    "end": "615519"
  },
  {
    "text": "now that we have an index let's go back",
    "start": "615519",
    "end": "617200"
  },
  {
    "text": "to the redis.js file and create a",
    "start": "617200",
    "end": "619360"
  },
  {
    "text": "function to search for cars in the",
    "start": "619360",
    "end": "620959"
  },
  {
    "text": "database this function will take a query",
    "start": "620959",
    "end": "623279"
  },
  {
    "text": "as its input which will be whatever the",
    "start": "623279",
    "end": "625040"
  },
  {
    "text": "user types into the form and then it",
    "start": "625040",
    "end": "626800"
  },
  {
    "text": "calls the repository search method which",
    "start": "626800",
    "end": "629040"
  },
  {
    "text": "has all kinds of different capabilities",
    "start": "629040",
    "end": "630880"
  },
  {
    "text": "like pagination it can retrieve the",
    "start": "630880",
    "end": "632800"
  },
  {
    "text": "first and last items it can get a count",
    "start": "632800",
    "end": "634959"
  },
  {
    "text": "of the total items in the database and",
    "start": "634959",
    "end": "636560"
  },
  {
    "text": "also perform logical comparisons like",
    "start": "636560",
    "end": "638720"
  },
  {
    "text": "greater than less than and so on the",
    "start": "638720",
    "end": "640800"
  },
  {
    "text": "first method to call is where which",
    "start": "640800",
    "end": "642480"
  },
  {
    "text": "references one of the properties in the",
    "start": "642480",
    "end": "644079"
  },
  {
    "text": "json data in this case we can search the",
    "start": "644079",
    "end": "646320"
  },
  {
    "text": "make of the car for exact equality with",
    "start": "646320",
    "end": "648720"
  },
  {
    "text": "the eq method and pass it the query as",
    "start": "648720",
    "end": "651040"
  },
  {
    "text": "an argument if we also want to search",
    "start": "651040",
    "end": "652880"
  },
  {
    "text": "the model of the car at the same time we",
    "start": "652880",
    "end": "654720"
  },
  {
    "text": "can chain or model and also check that",
    "start": "654720",
    "end": "657120"
  },
  {
    "text": "for equality now when it comes to the",
    "start": "657120",
    "end": "658800"
  },
  {
    "text": "description we don't want exact equality",
    "start": "658800",
    "end": "661200"
  },
  {
    "text": "but instead we want to check the matches",
    "start": "661200",
    "end": "663120"
  },
  {
    "text": "within a full text search context that",
    "start": "663120",
    "end": "665120"
  },
  {
    "text": "tells it to return results even if there",
    "start": "665120",
    "end": "666800"
  },
  {
    "text": "are typos and things like that and",
    "start": "666800",
    "end": "668640"
  },
  {
    "text": "finally we tell it to return all the",
    "start": "668640",
    "end": "670320"
  },
  {
    "text": "results from that query that takes care",
    "start": "670320",
    "end": "672160"
  },
  {
    "text": "of the search logic now once again we",
    "start": "672160",
    "end": "674000"
  },
  {
    "text": "need an api route which we can easily",
    "start": "674000",
    "end": "676240"
  },
  {
    "text": "set up by adding a search.js file inside",
    "start": "676240",
    "end": "679279"
  },
  {
    "text": "of which we export a handler it'll grab",
    "start": "679279",
    "end": "681360"
  },
  {
    "text": "the search query from the url called the",
    "start": "681360",
    "end": "683440"
  },
  {
    "text": "searchcars method and then return the",
    "start": "683440",
    "end": "685360"
  },
  {
    "text": "response which will be an array of cars",
    "start": "685360",
    "end": "687440"
  },
  {
    "text": "back to the client and now the last",
    "start": "687440",
    "end": "689200"
  },
  {
    "text": "thing we need is a form on the front end",
    "start": "689200",
    "end": "691200"
  },
  {
    "text": "to make calls to the search endpoint i'm",
    "start": "691200",
    "end": "693279"
  },
  {
    "text": "creating a new file called searchform.js",
    "start": "693279",
    "end": "696240"
  },
  {
    "text": "which is a react component and in the",
    "start": "696240",
    "end": "698320"
  },
  {
    "text": "jsx we have an input that triggers a",
    "start": "698320",
    "end": "701279"
  },
  {
    "text": "search function whenever it is changed",
    "start": "701279",
    "end": "703440"
  },
  {
    "text": "so that'll fire whenever the user types",
    "start": "703440",
    "end": "705440"
  },
  {
    "text": "into the form now this component will",
    "start": "705440",
    "end": "707600"
  },
  {
    "text": "also need to have state to represent the",
    "start": "707600",
    "end": "709600"
  },
  {
    "text": "hits or results that we get back from",
    "start": "709600",
    "end": "711440"
  },
  {
    "text": "the search engine we can define that",
    "start": "711440",
    "end": "712959"
  },
  {
    "text": "state with the use state hook and",
    "start": "712959",
    "end": "714639"
  },
  {
    "text": "initialize it as an empty array in the",
    "start": "714639",
    "end": "716720"
  },
  {
    "text": "search function we will first grab the",
    "start": "716720",
    "end": "718639"
  },
  {
    "text": "current value of the form and then",
    "start": "718639",
    "end": "720320"
  },
  {
    "text": "format it as a url parameter the api",
    "start": "720320",
    "end": "722800"
  },
  {
    "text": "route is expecting it in that format to",
    "start": "722800",
    "end": "724880"
  },
  {
    "text": "pass the value along to redis now you'll",
    "start": "724880",
    "end": "726800"
  },
  {
    "text": "also notice that i'm only going to",
    "start": "726800",
    "end": "728399"
  },
  {
    "text": "execute this code if the query length is",
    "start": "728399",
    "end": "730560"
  },
  {
    "text": "greater than 2. that's just to prevent",
    "start": "730560",
    "end": "732639"
  },
  {
    "text": "excessive api calls to the database or",
    "start": "732639",
    "end": "735120"
  },
  {
    "text": "api route it would also be a good idea",
    "start": "735120",
    "end": "737120"
  },
  {
    "text": "to debounce this code because currently",
    "start": "737120",
    "end": "739120"
  },
  {
    "text": "it will make an api call for every",
    "start": "739120",
    "end": "740880"
  },
  {
    "text": "keystroke and that's probably more api",
    "start": "740880",
    "end": "742959"
  },
  {
    "text": "calls than you actually need for",
    "start": "742959",
    "end": "744240"
  },
  {
    "text": "something like this from there we can",
    "start": "744240",
    "end": "745760"
  },
  {
    "text": "use the fetch api to make a request to",
    "start": "745760",
    "end": "748240"
  },
  {
    "text": "the search endpoint along with the",
    "start": "748240",
    "end": "750079"
  },
  {
    "text": "parameters the result we get back will",
    "start": "750079",
    "end": "752240"
  },
  {
    "text": "be an array of cars that we can set as",
    "start": "752240",
    "end": "754320"
  },
  {
    "text": "the state on this component now let's",
    "start": "754320",
    "end": "756079"
  },
  {
    "text": "display the card data by setting up an",
    "start": "756079",
    "end": "758079"
  },
  {
    "text": "unordered list then map each individual",
    "start": "758079",
    "end": "760399"
  },
  {
    "text": "hit to a list item i'm using the entity",
    "start": "760399",
    "end": "763040"
  },
  {
    "text": "id as the key and then displaying",
    "start": "763040",
    "end": "765040"
  },
  {
    "text": "whatever data i want to show in the ui",
    "start": "765040",
    "end": "767120"
  },
  {
    "text": "like the make and model and image of the",
    "start": "767120",
    "end": "769360"
  },
  {
    "text": "car congratulations you just built a",
    "start": "769360",
    "end": "771600"
  },
  {
    "text": "full stack full text search feature with",
    "start": "771600",
    "end": "773680"
  },
  {
    "text": "redis and next js i'm going to go ahead",
    "start": "773680",
    "end": "775680"
  },
  {
    "text": "and wrap things up there if you want to",
    "start": "775680",
    "end": "777120"
  },
  {
    "text": "see more redis or next js content let me",
    "start": "777120",
    "end": "779360"
  },
  {
    "text": "know in the comments thanks for watching",
    "start": "779360",
    "end": "781120"
  },
  {
    "text": "and i will see you in the next one",
    "start": "781120",
    "end": "785639"
  }
]