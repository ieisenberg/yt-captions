[
  {
    "text": "a real-time present system allows users",
    "start": "0",
    "end": "2790"
  },
  {
    "text": "to know whether or not their fellow",
    "start": "2790",
    "end": "4259"
  },
  {
    "text": "users are online offline or away in some",
    "start": "4259",
    "end": "7710"
  },
  {
    "text": "other idle status in this episode we're",
    "start": "7710",
    "end": "10170"
  },
  {
    "text": "going to use slack as our inspiration to",
    "start": "10170",
    "end": "12269"
  },
  {
    "text": "build a system that will show the status",
    "start": "12269",
    "end": "13860"
  },
  {
    "text": "of users throughout the app we're",
    "start": "13860",
    "end": "16260"
  },
  {
    "text": "building a fully fledged system that",
    "start": "16260",
    "end": "18000"
  },
  {
    "text": "will be able to detect whether or not a",
    "start": "18000",
    "end": "19500"
  },
  {
    "text": "users engaging with an app based on a",
    "start": "19500",
    "end": "21660"
  },
  {
    "text": "timer and also whether or not a user has",
    "start": "21660",
    "end": "24630"
  },
  {
    "text": "closed the app and update the status on",
    "start": "24630",
    "end": "26970"
  },
  {
    "text": "each of these events at this point I'm",
    "start": "26970",
    "end": "29010"
  },
  {
    "text": "assuming you have a basic authentication",
    "start": "29010",
    "end": "30210"
  },
  {
    "text": "system in place with angularfire - if",
    "start": "30210",
    "end": "32730"
  },
  {
    "text": "not I've added a link in the description",
    "start": "32730",
    "end": "34380"
  },
  {
    "text": "that discusses that topic more",
    "start": "34380",
    "end": "36270"
  },
  {
    "text": "extensively the first thing we want to",
    "start": "36270",
    "end": "38550"
  },
  {
    "text": "do is see if the user has an active",
    "start": "38550",
    "end": "40770"
  },
  {
    "text": "connection to the firebase real time",
    "start": "40770",
    "end": "42540"
  },
  {
    "text": "database",
    "start": "42540",
    "end": "43260"
  },
  {
    "text": "firebase keeps track of this information",
    "start": "43260",
    "end": "45570"
  },
  {
    "text": "in a secret location called info /",
    "start": "45570",
    "end": "47910"
  },
  {
    "text": "connected which we can subscribe to just",
    "start": "47910",
    "end": "50340"
  },
  {
    "text": "like anything else in the database this",
    "start": "50340",
    "end": "52410"
  },
  {
    "text": "tells us whether the current client has",
    "start": "52410",
    "end": "54270"
  },
  {
    "text": "a connection to the database so let's go",
    "start": "54270",
    "end": "56850"
  },
  {
    "text": "into our off service and put this to use",
    "start": "56850",
    "end": "58829"
  },
  {
    "text": "first we'll import the angularfire",
    "start": "58829",
    "end": "60750"
  },
  {
    "text": "database as well as angularfire auth and",
    "start": "60750",
    "end": "63030"
  },
  {
    "text": "the main firebase SDK then we'll set a",
    "start": "63030",
    "end": "66540"
  },
  {
    "text": "variable for the current user is user ID",
    "start": "66540",
    "end": "68610"
  },
  {
    "text": "and inside the constructor will",
    "start": "68610",
    "end": "71280"
  },
  {
    "text": "subscribe to the angular fire off state",
    "start": "71280",
    "end": "73710"
  },
  {
    "text": "which is just the currently logged in",
    "start": "73710",
    "end": "75780"
  },
  {
    "text": "user and if we have a user we're going",
    "start": "75780",
    "end": "78299"
  },
  {
    "text": "to set their user ID on the service and",
    "start": "78299",
    "end": "80610"
  },
  {
    "text": "also subscribe to that connection data",
    "start": "80610",
    "end": "83490"
  },
  {
    "text": "that I just described earlier when we",
    "start": "83490",
    "end": "85619"
  },
  {
    "text": "actually determine the current user",
    "start": "85619",
    "end": "86939"
  },
  {
    "text": "status we'll save it as the status",
    "start": "86939",
    "end": "88560"
  },
  {
    "text": "property under their user ID and the",
    "start": "88560",
    "end": "90570"
  },
  {
    "text": "real time database we're going to update",
    "start": "90570",
    "end": "92909"
  },
  {
    "text": "the status frequently so we'll create a",
    "start": "92909",
    "end": "94590"
  },
  {
    "text": "helper function that we can just pass",
    "start": "94590",
    "end": "96270"
  },
  {
    "text": "the status as an argument and that will",
    "start": "96270",
    "end": "98549"
  },
  {
    "text": "update the database so any time we",
    "start": "98549",
    "end": "100710"
  },
  {
    "text": "detect a status change we can call this",
    "start": "100710",
    "end": "102360"
  },
  {
    "text": "helper and the database gets updated",
    "start": "102360",
    "end": "104310"
  },
  {
    "text": "from there we can create another",
    "start": "104310",
    "end": "105780"
  },
  {
    "text": "function that will subscribe to the info",
    "start": "105780",
    "end": "108060"
  },
  {
    "text": "/ connected data which will just be a",
    "start": "108060",
    "end": "110460"
  },
  {
    "text": "boolean true or false if it's true we'll",
    "start": "110460",
    "end": "113130"
  },
  {
    "text": "set the user status to online and it's",
    "start": "113130",
    "end": "115259"
  },
  {
    "text": "false will set it to offline then we",
    "start": "115259",
    "end": "117420"
  },
  {
    "text": "call our helper function and subscribe",
    "start": "117420",
    "end": "119549"
  },
  {
    "text": "and we're all set if we go to the app we",
    "start": "119549",
    "end": "122670"
  },
  {
    "text": "can see that when we log in we have an",
    "start": "122670",
    "end": "124380"
  },
  {
    "text": "active connection to firebase so we",
    "start": "124380",
    "end": "126149"
  },
  {
    "text": "display the online status this works",
    "start": "126149",
    "end": "129000"
  },
  {
    "text": "okay when a user logs in but if they",
    "start": "129000",
    "end": "130860"
  },
  {
    "text": "close the window it's not going to",
    "start": "130860",
    "end": "132450"
  },
  {
    "text": "update the status to",
    "start": "132450",
    "end": "133500"
  },
  {
    "text": "wine thankfully a firebase has an on",
    "start": "133500",
    "end": "136140"
  },
  {
    "text": "disconnect callback that we can use to",
    "start": "136140",
    "end": "137940"
  },
  {
    "text": "listen for when the user disconnects",
    "start": "137940",
    "end": "140130"
  },
  {
    "text": "from the database to use this function",
    "start": "140130",
    "end": "142140"
  },
  {
    "text": "we need to interact with the firebase",
    "start": "142140",
    "end": "143730"
  },
  {
    "text": "SDK directly let's add another function",
    "start": "143730",
    "end": "146760"
  },
  {
    "text": "to our constructor this time called",
    "start": "146760",
    "end": "148320"
  },
  {
    "text": "update on disconnect it works by making",
    "start": "148320",
    "end": "151650"
  },
  {
    "text": "a reference to the user status in the",
    "start": "151650",
    "end": "153390"
  },
  {
    "text": "database and then calls the on",
    "start": "153390",
    "end": "155790"
  },
  {
    "text": "disconnect function and then updates the",
    "start": "155790",
    "end": "158550"
  },
  {
    "text": "status to offline so this function will",
    "start": "158550",
    "end": "161400"
  },
  {
    "text": "only run when the database connection is",
    "start": "161400",
    "end": "163560"
  },
  {
    "text": "disconnected in the app we have a logged",
    "start": "163560",
    "end": "165810"
  },
  {
    "text": "in user on the left and a non logged in",
    "start": "165810",
    "end": "167940"
  },
  {
    "text": "user on the right when the logged in",
    "start": "167940",
    "end": "169920"
  },
  {
    "text": "user closes the browser window it ends",
    "start": "169920",
    "end": "172230"
  },
  {
    "text": "the database connection and their status",
    "start": "172230",
    "end": "174150"
  },
  {
    "text": "is updated to offline so what if the",
    "start": "174150",
    "end": "176940"
  },
  {
    "text": "user has the app open but they're not",
    "start": "176940",
    "end": "178739"
  },
  {
    "text": "actively using it for that we want to",
    "start": "178739",
    "end": "181170"
  },
  {
    "text": "set a third status called away we can",
    "start": "181170",
    "end": "183630"
  },
  {
    "text": "manage that state by listening for Mouse",
    "start": "183630",
    "end": "185580"
  },
  {
    "text": "events in the browser and then resetting",
    "start": "185580",
    "end": "187770"
  },
  {
    "text": "a timer each time a new Mouse event",
    "start": "187770",
    "end": "189780"
  },
  {
    "text": "occurs if that timer expires then we can",
    "start": "189780",
    "end": "192480"
  },
  {
    "text": "set the status to away so we'll set up a",
    "start": "192480",
    "end": "195720"
  },
  {
    "text": "couple of subscriptions one for the",
    "start": "195720",
    "end": "197280"
  },
  {
    "text": "mouse event and one for the timer itself",
    "start": "197280",
    "end": "199320"
  },
  {
    "text": "then we'll create another function",
    "start": "199320",
    "end": "200970"
  },
  {
    "text": "called update on idle inside this",
    "start": "200970",
    "end": "204000"
  },
  {
    "text": "function we create an observable that's",
    "start": "204000",
    "end": "206070"
  },
  {
    "text": "listening to Mouse events in the Dom",
    "start": "206070",
    "end": "207890"
  },
  {
    "text": "Mouse events happen frequently so we",
    "start": "207890",
    "end": "210269"
  },
  {
    "text": "want to throttle them to happen only",
    "start": "210269",
    "end": "212130"
  },
  {
    "text": "every two seconds if you imagine each",
    "start": "212130",
    "end": "214410"
  },
  {
    "text": "circle representing a mouse of that",
    "start": "214410",
    "end": "216060"
  },
  {
    "text": "they'll be grouped into chunks and only",
    "start": "216060",
    "end": "218250"
  },
  {
    "text": "the first one that occurred in that",
    "start": "218250",
    "end": "219810"
  },
  {
    "text": "two-second period will be emitted when",
    "start": "219810",
    "end": "222180"
  },
  {
    "text": "we get them out event we can go ahead",
    "start": "222180",
    "end": "223560"
  },
  {
    "text": "and update the status to online because",
    "start": "223560",
    "end": "225360"
  },
  {
    "text": "we know the users engaged and we also",
    "start": "225360",
    "end": "227400"
  },
  {
    "text": "want to reset the timer which is",
    "start": "227400",
    "end": "228660"
  },
  {
    "text": "counting down to set the user to away",
    "start": "228660",
    "end": "230670"
  },
  {
    "text": "status the timer itself is a",
    "start": "230670",
    "end": "232739"
  },
  {
    "text": "subscription so if there's one existing",
    "start": "232739",
    "end": "234930"
  },
  {
    "text": "in the app we want to unsubscribe from",
    "start": "234930",
    "end": "236610"
  },
  {
    "text": "it then we create a new timer by calling",
    "start": "236610",
    "end": "238890"
  },
  {
    "text": "observable timer this time we're setting",
    "start": "238890",
    "end": "241079"
  },
  {
    "text": "it to five thousand milliseconds in real",
    "start": "241079",
    "end": "243480"
  },
  {
    "text": "life you probably want to set it a lot",
    "start": "243480",
    "end": "244860"
  },
  {
    "text": "longer than that then when that timer",
    "start": "244860",
    "end": "246810"
  },
  {
    "text": "runs out it'll set the status to away",
    "start": "246810",
    "end": "249239"
  },
  {
    "text": "and on a final note you probably want to",
    "start": "249239",
    "end": "252000"
  },
  {
    "text": "end these subscriptions when you no",
    "start": "252000",
    "end": "253739"
  },
  {
    "text": "longer need them for example if the user",
    "start": "253739",
    "end": "255360"
  },
  {
    "text": "signs out we'll go ahead and unsubscribe",
    "start": "255360",
    "end": "257430"
  },
  {
    "text": "from the mouse events as well as the",
    "start": "257430",
    "end": "258720"
  },
  {
    "text": "timer if we go into the app and just let",
    "start": "258720",
    "end": "261539"
  },
  {
    "text": "the mouse sit idle we can see after five",
    "start": "261539",
    "end": "263970"
  },
  {
    "text": "seconds the status gets updated - away",
    "start": "263970",
    "end": "267060"
  },
  {
    "text": "if we go back into the app immediately",
    "start": "267060",
    "end": "269430"
  },
  {
    "text": "updates back to online if I click logout",
    "start": "269430",
    "end": "272310"
  },
  {
    "text": "then it will update to offline now let's",
    "start": "272310",
    "end": "276120"
  },
  {
    "text": "go ahead and build the actual component",
    "start": "276120",
    "end": "277680"
  },
  {
    "text": "that the user sees on the front end so",
    "start": "277680",
    "end": "279470"
  },
  {
    "text": "here I have a list of users that I",
    "start": "279470",
    "end": "281970"
  },
  {
    "text": "pulled from the database and I'm going",
    "start": "281970",
    "end": "284130"
  },
  {
    "text": "to pass the user status to a child",
    "start": "284130",
    "end": "286530"
  },
  {
    "text": "component called user status we do this",
    "start": "286530",
    "end": "289110"
  },
  {
    "text": "by using the input decorator from",
    "start": "289110",
    "end": "290910"
  },
  {
    "text": "angular inside the user status component",
    "start": "290910",
    "end": "293700"
  },
  {
    "text": "typescript we just import input and then",
    "start": "293700",
    "end": "296130"
  },
  {
    "text": "declare a variable called status with",
    "start": "296130",
    "end": "297960"
  },
  {
    "text": "that decorator this situation is a",
    "start": "297960",
    "end": "300510"
  },
  {
    "text": "perfect time to use the ng switch",
    "start": "300510",
    "end": "302700"
  },
  {
    "text": "directive which works just like a switch",
    "start": "302700",
    "end": "304860"
  },
  {
    "text": "operator in JavaScript or any other",
    "start": "304860",
    "end": "307020"
  },
  {
    "text": "programming language we pass the user",
    "start": "307020",
    "end": "309810"
  },
  {
    "text": "status to ng switch and then we can use",
    "start": "309810",
    "end": "312270"
  },
  {
    "text": "an ng switch case to display different",
    "start": "312270",
    "end": "315030"
  },
  {
    "text": "templates depending on what the user",
    "start": "315030",
    "end": "316260"
  },
  {
    "text": "status is so if the users online we give",
    "start": "316260",
    "end": "319050"
  },
  {
    "text": "it a green success CSS class if they're",
    "start": "319050",
    "end": "322140"
  },
  {
    "text": "offline we give it a red CSS class and",
    "start": "322140",
    "end": "324390"
  },
  {
    "text": "so on this makes it easy to add your own",
    "start": "324390",
    "end": "326729"
  },
  {
    "text": "custom icons or whatever kind of",
    "start": "326729",
    "end": "328650"
  },
  {
    "text": "presentation you want to do here you can",
    "start": "328650",
    "end": "331350"
  },
  {
    "text": "also add an NG switch default which will",
    "start": "331350",
    "end": "333450"
  },
  {
    "text": "ensure that something displays if none",
    "start": "333450",
    "end": "335669"
  },
  {
    "text": "of the statuses match what you have in",
    "start": "335669",
    "end": "337650"
  },
  {
    "text": "the switch cases that's it for building",
    "start": "337650",
    "end": "339930"
  },
  {
    "text": "a user present system with angular 4 and",
    "start": "339930",
    "end": "342240"
  },
  {
    "text": "firebase if this video helped you please",
    "start": "342240",
    "end": "343979"
  },
  {
    "text": "like and subscribe and if you want",
    "start": "343979",
    "end": "346080"
  },
  {
    "text": "access to exclusive content and one on",
    "start": "346080",
    "end": "348240"
  },
  {
    "text": "one project consult team consider",
    "start": "348240",
    "end": "349770"
  },
  {
    "text": "becoming a pro member at angular",
    "start": "349770",
    "end": "351390"
  },
  {
    "text": "firebase com you'll get a free copy of",
    "start": "351390",
    "end": "353669"
  },
  {
    "text": "my book as well as access to our pro",
    "start": "353669",
    "end": "355740"
  },
  {
    "text": "members channel on flax thanks for",
    "start": "355740",
    "end": "357660"
  },
  {
    "text": "watching and I'll talk to you soon",
    "start": "357660",
    "end": "359930"
  },
  {
    "text": "[Music]",
    "start": "359930",
    "end": "366939"
  }
]