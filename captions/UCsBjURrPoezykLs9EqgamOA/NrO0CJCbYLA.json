[
  {
    "text": "Dart a typesafe general purpose",
    "start": "160",
    "end": "2399"
  },
  {
    "text": "programming language designed for",
    "start": "2399",
    "end": "3919"
  },
  {
    "text": "building fast apps on multiple platforms",
    "start": "3919",
    "end": "6480"
  },
  {
    "text": "it was developed by Google and first",
    "start": "6480",
    "end": "8160"
  },
  {
    "text": "appeared in 2011 and was intended to be",
    "start": "8160",
    "end": "10360"
  },
  {
    "text": "an alternative to JavaScript by shipping",
    "start": "10360",
    "end": "12280"
  },
  {
    "text": "its own virtual machine to run apps in",
    "start": "12280",
    "end": "14480"
  },
  {
    "text": "the browser but things got off to a",
    "start": "14480",
    "end": "16198"
  },
  {
    "text": "rocky start and it was never really",
    "start": "16199",
    "end": "17760"
  },
  {
    "text": "embraced by the web development",
    "start": "17760",
    "end": "19080"
  },
  {
    "text": "Community however it bounced back in a",
    "start": "19080",
    "end": "21320"
  },
  {
    "text": "big way after being adopted by the",
    "start": "21320",
    "end": "23119"
  },
  {
    "text": "flutter framework and today it's one of",
    "start": "23119",
    "end": "25000"
  },
  {
    "text": "the most loved programming languages in",
    "start": "25000",
    "end": "26519"
  },
  {
    "text": "the industry it's Unique for its ability",
    "start": "26519",
    "end": "28480"
  },
  {
    "text": "to compile to multiple tar targets like",
    "start": "28480",
    "end": "30560"
  },
  {
    "text": "arm and x64 machine code for mobile",
    "start": "30560",
    "end": "32880"
  },
  {
    "text": "devices JavaScript for web browsers and",
    "start": "32880",
    "end": "35520"
  },
  {
    "text": "self-contained executables for Windows",
    "start": "35520",
    "end": "38000"
  },
  {
    "text": "Mac OS and Linux it also has a just in",
    "start": "38000",
    "end": "41039"
  },
  {
    "text": "time or jit compiler which compiles your",
    "start": "41039",
    "end": "43520"
  },
  {
    "text": "source code to machine code on the Fly",
    "start": "43520",
    "end": "45600"
  },
  {
    "text": "which can boost developer productivity",
    "start": "45600",
    "end": "47280"
  },
  {
    "text": "with features like hot reload and",
    "start": "47280",
    "end": "48719"
  },
  {
    "text": "flutter all dark code runs inside of an",
    "start": "48719",
    "end": "50840"
  },
  {
    "text": "isolate which is like a chunk of memory",
    "start": "50840",
    "end": "52760"
  },
  {
    "text": "running a single-threaded event Loop",
    "start": "52760",
    "end": "54520"
  },
  {
    "text": "this makes it possible to perform",
    "start": "54520",
    "end": "56000"
  },
  {
    "text": "asynchronous background work on a single",
    "start": "56000",
    "end": "57879"
  },
  {
    "text": "thread but you can also spawn multiple",
    "start": "57879",
    "end": "60120"
  },
  {
    "text": "lets to run code in parallel the",
    "start": "60120",
    "end": "62000"
  },
  {
    "text": "language itself is type safe which means",
    "start": "62000",
    "end": "64198"
  },
  {
    "text": "that a variable's value always matches",
    "start": "64199",
    "end": "66439"
  },
  {
    "text": "its static type and that generally",
    "start": "66439",
    "end": "68080"
  },
  {
    "text": "results in fewer runtime errors for your",
    "start": "68080",
    "end": "69920"
  },
  {
    "text": "app in production however the type",
    "start": "69920",
    "end": "71799"
  },
  {
    "text": "system is flexible allowing you to use",
    "start": "71799",
    "end": "73759"
  },
  {
    "text": "Dynamic types and runtime checks when",
    "start": "73759",
    "end": "75759"
  },
  {
    "text": "required it also provides null safety",
    "start": "75759",
    "end": "77960"
  },
  {
    "text": "which means that values can't be null",
    "start": "77960",
    "end": "79799"
  },
  {
    "text": "unless you explicitly allow them to be",
    "start": "79799",
    "end": "81799"
  },
  {
    "text": "which can further cut down runtime",
    "start": "81799",
    "end": "83439"
  },
  {
    "text": "exceptions syntactically it's often",
    "start": "83439",
    "end": "85680"
  },
  {
    "text": "described as combining elements of java",
    "start": "85680",
    "end": "88280"
  },
  {
    "text": "and JavaScript a DART program program",
    "start": "88280",
    "end": "90280"
  },
  {
    "text": "always starts with a main function that",
    "start": "90280",
    "end": "92079"
  },
  {
    "text": "has no return value so it's annotated",
    "start": "92079",
    "end": "94040"
  },
  {
    "text": "with the void type inside of it we might",
    "start": "94040",
    "end": "96200"
  },
  {
    "text": "declare a variable with VAR and set it",
    "start": "96200",
    "end": "98399"
  },
  {
    "text": "equal to a string Dart will",
    "start": "98399",
    "end": "99920"
  },
  {
    "text": "automatically infer this as a string",
    "start": "99920",
    "end": "101720"
  },
  {
    "text": "type however we could explicitly type it",
    "start": "101720",
    "end": "103799"
  },
  {
    "text": "by replacing bar anything you can store",
    "start": "103799",
    "end": "105600"
  },
  {
    "text": "in a variable is an object and every",
    "start": "105600",
    "end": "107960"
  },
  {
    "text": "object is an instance of a class the",
    "start": "107960",
    "end": "110040"
  },
  {
    "text": "only thing that's not an object in Dart",
    "start": "110040",
    "end": "111880"
  },
  {
    "text": "is null this opens the door to multiple",
    "start": "111880",
    "end": "114159"
  },
  {
    "text": "programming paradigms functions are also",
    "start": "114159",
    "end": "116360"
  },
  {
    "text": "first class objects which means they can",
    "start": "116360",
    "end": "118079"
  },
  {
    "text": "be passed around for functional program",
    "start": "118079",
    "end": "120079"
  },
  {
    "text": "in or you can Define classes with Mixon",
    "start": "120079",
    "end": "122240"
  },
  {
    "text": "based inheritance for objectoriented",
    "start": "122240",
    "end": "124479"
  },
  {
    "text": "patterns on top of that it has a package",
    "start": "124479",
    "end": "126640"
  },
  {
    "text": "manager called Pub providing thousands",
    "start": "126640",
    "end": "128560"
  },
  {
    "text": "of Open Source packages to help you get",
    "start": "128560",
    "end": "130479"
  },
  {
    "text": "things done this has been Dart in 100",
    "start": "130479",
    "end": "132560"
  },
  {
    "text": "seconds hit the like button and",
    "start": "132560",
    "end": "134080"
  },
  {
    "text": "subscribe if you want to see more short",
    "start": "134080",
    "end": "135440"
  },
  {
    "text": "videos like this and if you want to get",
    "start": "135440",
    "end": "136959"
  },
  {
    "text": "really good at Dart I just released a",
    "start": "136959",
    "end": "138640"
  },
  {
    "text": "brand new full course for pro members it",
    "start": "138640",
    "end": "140760"
  },
  {
    "text": "teaches the fundamentals of Dart from",
    "start": "140760",
    "end": "142160"
  },
  {
    "text": "the ground up to get you ready for",
    "start": "142160",
    "end": "143560"
  },
  {
    "text": "flutter development and my upcoming",
    "start": "143560",
    "end": "145200"
  },
  {
    "text": "flutter 2 course which will be out later",
    "start": "145200",
    "end": "147160"
  },
  {
    "text": "this year thanks for watching and I will",
    "start": "147160",
    "end": "149160"
  },
  {
    "text": "see you in the next one",
    "start": "149160",
    "end": "152319"
  }
]