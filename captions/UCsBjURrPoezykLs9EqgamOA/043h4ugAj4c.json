[
  {
    "text": "just when I discovered the meaning of",
    "start": "30",
    "end": "2190"
  },
  {
    "text": "life they changed one of my favorite",
    "start": "2190",
    "end": "5310"
  },
  {
    "text": "things about JavaScript is that the",
    "start": "5310",
    "end": "6810"
  },
  {
    "text": "status quo never seems to last very long",
    "start": "6810",
    "end": "8580"
  },
  {
    "text": "react angular and view have dominated",
    "start": "8580",
    "end": "10230"
  },
  {
    "text": "the mind share of developers over the",
    "start": "10230",
    "end": "11790"
  },
  {
    "text": "last few years",
    "start": "11790",
    "end": "12630"
  },
  {
    "text": "salt has been around for a while but",
    "start": "12630",
    "end": "14309"
  },
  {
    "text": "they just released version three last",
    "start": "14309",
    "end": "15660"
  },
  {
    "text": "week and my initial experience with it",
    "start": "15660",
    "end": "17369"
  },
  {
    "text": "has been very positive and that's mostly",
    "start": "17369",
    "end": "19050"
  },
  {
    "text": "because it empowers you to solve",
    "start": "19050",
    "end": "20490"
  },
  {
    "text": "problems with less code in the first",
    "start": "20490",
    "end": "22680"
  },
  {
    "text": "half of this video we'll cover the basic",
    "start": "22680",
    "end": "24240"
  },
  {
    "text": "concepts in spelt and in the process",
    "start": "24240",
    "end": "25920"
  },
  {
    "text": "you'll see why it's such an awesome tool",
    "start": "25920",
    "end": "27300"
  },
  {
    "text": "in the second half of the video we'll",
    "start": "27300",
    "end": "28680"
  },
  {
    "text": "build a real-time to-do list with spelt",
    "start": "28680",
    "end": "30359"
  },
  {
    "text": "and firebase from scratch if you're new",
    "start": "30359",
    "end": "32340"
  },
  {
    "text": "here like and subscribe and you can find",
    "start": "32340",
    "end": "33870"
  },
  {
    "text": "the full source code on fire ship IO now",
    "start": "33870",
    "end": "36180"
  },
  {
    "text": "before you jump into spelt I'd recommend",
    "start": "36180",
    "end": "37920"
  },
  {
    "text": "watching this talk from its creator rich",
    "start": "37920",
    "end": "39629"
  },
  {
    "text": "harris that's what really got me excited",
    "start": "39629",
    "end": "41190"
  },
  {
    "text": "to start learning spell 3 let's go ahead",
    "start": "41190",
    "end": "43200"
  },
  {
    "text": "and just jump right into things will run",
    "start": "43200",
    "end": "44730"
  },
  {
    "text": "npx dig it and then point to these felt",
    "start": "44730",
    "end": "47160"
  },
  {
    "text": "j s template this is the equivalent to",
    "start": "47160",
    "end": "48750"
  },
  {
    "text": "create react app or ng new go ahead and",
    "start": "48750",
    "end": "51090"
  },
  {
    "text": "open it up in vs code and run npm",
    "start": "51090",
    "end": "52890"
  },
  {
    "text": "install then you can run npm dev to",
    "start": "52890",
    "end": "54960"
  },
  {
    "text": "serve it locally and that should give",
    "start": "54960",
    "end": "56340"
  },
  {
    "text": "you this hello world on localhost 5000",
    "start": "56340",
    "end": "58289"
  },
  {
    "text": "the first thing you'll see is the roll",
    "start": "58289",
    "end": "59820"
  },
  {
    "text": "up config dot j s this is what bundles",
    "start": "59820",
    "end": "62010"
  },
  {
    "text": "your code and it's an alternative to web",
    "start": "62010",
    "end": "63840"
  },
  {
    "text": "pack personally i prefer to use roll-up",
    "start": "63840",
    "end": "65700"
  },
  {
    "text": "but you can also use webpack here if you",
    "start": "65700",
    "end": "67170"
  },
  {
    "text": "want and while we're talking about",
    "start": "67170",
    "end": "68280"
  },
  {
    "text": "bundling there's two things you should",
    "start": "68280",
    "end": "69510"
  },
  {
    "text": "know and that's that spelt supports",
    "start": "69510",
    "end": "71220"
  },
  {
    "text": "server-side rendering as well as native",
    "start": "71220",
    "end": "73049"
  },
  {
    "text": "web components or custom elements so",
    "start": "73049",
    "end": "75330"
  },
  {
    "text": "that's cool but so far this might just",
    "start": "75330",
    "end": "76890"
  },
  {
    "text": "look like another JavaScript framework",
    "start": "76890",
    "end": "78600"
  },
  {
    "text": "but if we go into the package.json we",
    "start": "78600",
    "end": "80549"
  },
  {
    "text": "can see that something's different here",
    "start": "80549",
    "end": "81750"
  },
  {
    "text": "what's missing is dependencies we only",
    "start": "81750",
    "end": "84119"
  },
  {
    "text": "have development dependencies and that's",
    "start": "84119",
    "end": "85799"
  },
  {
    "text": "because spelt is a compiler it generates",
    "start": "85799",
    "end": "88080"
  },
  {
    "text": "all of your code at Build time which",
    "start": "88080",
    "end": "89549"
  },
  {
    "text": "means it doesn't need to include the",
    "start": "89549",
    "end": "90780"
  },
  {
    "text": "framework itself as a hard dependency in",
    "start": "90780",
    "end": "92759"
  },
  {
    "text": "your JavaScript bundle another framework",
    "start": "92759",
    "end": "94619"
  },
  {
    "text": "that also does this is stencil j/s and I",
    "start": "94619",
    "end": "96720"
  },
  {
    "text": "feel like this approach makes a lot more",
    "start": "96720",
    "end": "98130"
  },
  {
    "text": "sense than the current status quo and",
    "start": "98130",
    "end": "100020"
  },
  {
    "text": "that's because you only need to compile",
    "start": "100020",
    "end": "101340"
  },
  {
    "text": "the JavaScript from the framework that",
    "start": "101340",
    "end": "102810"
  },
  {
    "text": "you actually need so you don't have any",
    "start": "102810",
    "end": "104369"
  },
  {
    "text": "extra bloat in your JavaScript bundle",
    "start": "104369",
    "end": "106110"
  },
  {
    "text": "what I'm doing right now is just",
    "start": "106110",
    "end": "107189"
  },
  {
    "text": "exporting our entire app as a string and",
    "start": "107189",
    "end": "109229"
  },
  {
    "text": "if we go to the bundled output you can",
    "start": "109229",
    "end": "111360"
  },
  {
    "text": "see that it's just a function that",
    "start": "111360",
    "end": "112439"
  },
  {
    "text": "returns a string so in theory this",
    "start": "112439",
    "end": "114390"
  },
  {
    "text": "should result in smaller bundle sizes or",
    "start": "114390",
    "end": "116250"
  },
  {
    "text": "at least bundles that are optimized for",
    "start": "116250",
    "end": "117810"
  },
  {
    "text": "the code that you actually use if you're",
    "start": "117810",
    "end": "119189"
  },
  {
    "text": "using tree shakable libraries that's",
    "start": "119189",
    "end": "121110"
  },
  {
    "text": "what makes felt fundamentally different",
    "start": "121110",
    "end": "122460"
  },
  {
    "text": "than the status quo but we've only just",
    "start": "122460",
    "end": "123990"
  },
  {
    "text": "hit the tip of the iceberg here it's",
    "start": "123990",
    "end": "125579"
  },
  {
    "text": "also unique in the way that it handles",
    "start": "125579",
    "end": "126899"
  },
  {
    "text": "reactivity if we go into the app",
    "start": "126899",
    "end": "128429"
  },
  {
    "text": "component we'll see a script up here at",
    "start": "128429",
    "end": "130140"
  },
  {
    "text": "the top that's where we keep our main",
    "start": "130140",
    "end": "131550"
  },
  {
    "text": "JavaScript logic and then we",
    "start": "131550",
    "end": "133230"
  },
  {
    "text": "a style tag all the styles will be",
    "start": "133230",
    "end": "135000"
  },
  {
    "text": "scoped to this component and another",
    "start": "135000",
    "end": "136890"
  },
  {
    "text": "cool thing about the compiler is that it",
    "start": "136890",
    "end": "138330"
  },
  {
    "text": "will automatically eliminate all of your",
    "start": "138330",
    "end": "139860"
  },
  {
    "text": "unused CSS styles from the CSS bundle",
    "start": "139860",
    "end": "142140"
  },
  {
    "text": "and then after that we have our markup",
    "start": "142140",
    "end": "143819"
  },
  {
    "text": "and spelt has its own templating syntax",
    "start": "143819",
    "end": "145860"
  },
  {
    "text": "for adding logic to your HTML this is a",
    "start": "145860",
    "end": "148440"
  },
  {
    "text": "similar approach to angular and view but",
    "start": "148440",
    "end": "150299"
  },
  {
    "text": "differs from react which uses JSX now",
    "start": "150299",
    "end": "152760"
  },
  {
    "text": "the difference with JSX is that you're",
    "start": "152760",
    "end": "154170"
  },
  {
    "text": "taking your HTML and putting it inside",
    "start": "154170",
    "end": "155849"
  },
  {
    "text": "of JavaScript and letting the JavaScript",
    "start": "155849",
    "end": "157830"
  },
  {
    "text": "handle the logic this can be a very",
    "start": "157830",
    "end": "159269"
  },
  {
    "text": "divisive topic and it's really just a",
    "start": "159269",
    "end": "160890"
  },
  {
    "text": "matter of opinion but I just find I'm",
    "start": "160890",
    "end": "162450"
  },
  {
    "text": "more productive by putting the logic at",
    "start": "162450",
    "end": "164040"
  },
  {
    "text": "the HTML like we do with angular view",
    "start": "164040",
    "end": "166140"
  },
  {
    "text": "and spelled now if we go up into the",
    "start": "166140",
    "end": "167790"
  },
  {
    "text": "script you'll notice I have export Latin",
    "start": "167790",
    "end": "169739"
  },
  {
    "text": "name using the export keyword in front",
    "start": "169739",
    "end": "171720"
  },
  {
    "text": "of a variable means that it can be",
    "start": "171720",
    "end": "172920"
  },
  {
    "text": "passed down from a parent component if",
    "start": "172920",
    "end": "174780"
  },
  {
    "text": "we leave the export keyword off it",
    "start": "174780",
    "end": "176519"
  },
  {
    "text": "basically means we have a private",
    "start": "176519",
    "end": "177750"
  },
  {
    "text": "variable that can only be used inside of",
    "start": "177750",
    "end": "179340"
  },
  {
    "text": "this component now the cool thing about",
    "start": "179340",
    "end": "180900"
  },
  {
    "text": "spelt is that it's reactive based on the",
    "start": "180900",
    "end": "182879"
  },
  {
    "text": "assignment of a variable we'll create a",
    "start": "182879",
    "end": "184920"
  },
  {
    "text": "variable here for a random number and",
    "start": "184920",
    "end": "186569"
  },
  {
    "text": "then create a function that can reassign",
    "start": "186569",
    "end": "188220"
  },
  {
    "text": "that variable so now that we have this",
    "start": "188220",
    "end": "190019"
  },
  {
    "text": "function we need to bind it to an event",
    "start": "190019",
    "end": "191700"
  },
  {
    "text": "in the Dom you can bind to events by",
    "start": "191700",
    "end": "193950"
  },
  {
    "text": "doing on colon click or on : whatever",
    "start": "193950",
    "end": "196440"
  },
  {
    "text": "Dom event you want to bind to this is",
    "start": "196440",
    "end": "198930"
  },
  {
    "text": "very similar to all of the frameworks we",
    "start": "198930",
    "end": "200609"
  },
  {
    "text": "passed in the function and it's going to",
    "start": "200609",
    "end": "202230"
  },
  {
    "text": "call that function with the event passed",
    "start": "202230",
    "end": "203849"
  },
  {
    "text": "as the argument so that's going to",
    "start": "203849",
    "end": "205560"
  },
  {
    "text": "change the random number and then we can",
    "start": "205560",
    "end": "207269"
  },
  {
    "text": "show it in the template by wrapping it",
    "start": "207269",
    "end": "208739"
  },
  {
    "text": "in braces now we have an app that reacts",
    "start": "208739",
    "end": "210660"
  },
  {
    "text": "to this randomize button whenever we",
    "start": "210660",
    "end": "212250"
  },
  {
    "text": "click it we get a new random number but",
    "start": "212250",
    "end": "214019"
  },
  {
    "text": "what happens if we need to compute a",
    "start": "214019",
    "end": "215430"
  },
  {
    "text": "different value from this random number",
    "start": "215430",
    "end": "216989"
  },
  {
    "text": "let's say if it rounds to 1 it'll be a",
    "start": "216989",
    "end": "218970"
  },
  {
    "text": "winner if it rounds to zero it'll be a",
    "start": "218970",
    "end": "220769"
  },
  {
    "text": "loser the simplest solution is just to",
    "start": "220769",
    "end": "222389"
  },
  {
    "text": "write that expression directly in the",
    "start": "222389",
    "end": "223950"
  },
  {
    "text": "template and spelt will rerun this logic",
    "start": "223950",
    "end": "225989"
  },
  {
    "text": "every time the reactive value changes",
    "start": "225989",
    "end": "227819"
  },
  {
    "text": "but this isn't going to scale very well",
    "start": "227819",
    "end": "229440"
  },
  {
    "text": "because we can't reuse this logic if we",
    "start": "229440",
    "end": "231599"
  },
  {
    "text": "want to show that same value somewhere",
    "start": "231599",
    "end": "233069"
  },
  {
    "text": "else in the template we'd have to",
    "start": "233069",
    "end": "234299"
  },
  {
    "text": "duplicate that code fortunately spelt",
    "start": "234299",
    "end": "236160"
  },
  {
    "text": "has a very cool trick up its sleeve for",
    "start": "236160",
    "end": "237720"
  },
  {
    "text": "computed values we'll define any",
    "start": "237720",
    "end": "239519"
  },
  {
    "text": "variable but instead of using let will",
    "start": "239519",
    "end": "241620"
  },
  {
    "text": "use this dollar sign colon syntax",
    "start": "241620",
    "end": "243349"
  },
  {
    "text": "believe it or not this is valid vanilla",
    "start": "243349",
    "end": "245639"
  },
  {
    "text": "JavaScript and it's basically just a way",
    "start": "245639",
    "end": "247440"
  },
  {
    "text": "to tell spelt to recalculate this value",
    "start": "247440",
    "end": "249540"
  },
  {
    "text": "when the app reacts now we can go back",
    "start": "249540",
    "end": "251549"
  },
  {
    "text": "into our template and simply reuse the",
    "start": "251549",
    "end": "253440"
  },
  {
    "text": "result computed value as many times as",
    "start": "253440",
    "end": "255209"
  },
  {
    "text": "we want",
    "start": "255209",
    "end": "255720"
  },
  {
    "text": "now speaking of reactivity another thing",
    "start": "255720",
    "end": "257849"
  },
  {
    "text": "we can do is bind to the attributes on",
    "start": "257849",
    "end": "259949"
  },
  {
    "text": "Dom elements for example if we want to",
    "start": "259949",
    "end": "261930"
  },
  {
    "text": "bind to the value attribute on a form",
    "start": "261930",
    "end": "264150"
  },
  {
    "text": "input we can do that with this bind",
    "start": "264150",
    "end": "265800"
  },
  {
    "text": "directive and",
    "start": "265800",
    "end": "266790"
  },
  {
    "text": "use our random variable if we start",
    "start": "266790",
    "end": "268620"
  },
  {
    "text": "typing in the form you'll see how the",
    "start": "268620",
    "end": "270090"
  },
  {
    "text": "value itself is recomputed every time we",
    "start": "270090",
    "end": "272430"
  },
  {
    "text": "type a new value now currently our",
    "start": "272430",
    "end": "274290"
  },
  {
    "text": "computed result is a string but let's go",
    "start": "274290",
    "end": "276240"
  },
  {
    "text": "ahead and change that to a number and",
    "start": "276240",
    "end": "277590"
  },
  {
    "text": "then we'll show an entirely different",
    "start": "277590",
    "end": "278640"
  },
  {
    "text": "template based on some conditional logic",
    "start": "278640",
    "end": "280670"
  },
  {
    "text": "the new computed value will give us a",
    "start": "280670",
    "end": "282960"
  },
  {
    "text": "number between one and a hundred and we",
    "start": "282960",
    "end": "284850"
  },
  {
    "text": "can show a template conditionally by",
    "start": "284850",
    "end": "286380"
  },
  {
    "text": "using this if syntax and we can also",
    "start": "286380",
    "end": "288510"
  },
  {
    "text": "throw in else if if we have multiple",
    "start": "288510",
    "end": "290130"
  },
  {
    "text": "conditions and then else for the default",
    "start": "290130",
    "end": "292260"
  },
  {
    "text": "value and then we'll just add some Dom",
    "start": "292260",
    "end": "293670"
  },
  {
    "text": "elements in between these conditions and",
    "start": "293670",
    "end": "295350"
  },
  {
    "text": "that will recompute the template every",
    "start": "295350",
    "end": "297270"
  },
  {
    "text": "time our random number changes so that's",
    "start": "297270",
    "end": "299190"
  },
  {
    "text": "pretty standard stuff but now I want to",
    "start": "299190",
    "end": "300720"
  },
  {
    "text": "show you something that you're not going",
    "start": "300720",
    "end": "301830"
  },
  {
    "text": "to find in other frameworks let's go",
    "start": "301830",
    "end": "303840"
  },
  {
    "text": "ahead and import fade and fly from spelt",
    "start": "303840",
    "end": "305970"
  },
  {
    "text": "transition these are directives that",
    "start": "305970",
    "end": "307830"
  },
  {
    "text": "will allow you to automatically compute",
    "start": "307830",
    "end": "309450"
  },
  {
    "text": "CSS animations based on the logic in",
    "start": "309450",
    "end": "311700"
  },
  {
    "text": "your template so if you want something",
    "start": "311700",
    "end": "313350"
  },
  {
    "text": "to fade in and fade out when it's added",
    "start": "313350",
    "end": "315120"
  },
  {
    "text": "or removed to the Dom you can just add",
    "start": "315120",
    "end": "316620"
  },
  {
    "text": "this transition fade directive and",
    "start": "316620",
    "end": "318180"
  },
  {
    "text": "everything will just happen",
    "start": "318180",
    "end": "319050"
  },
  {
    "text": "automatically but let's say we want our",
    "start": "319050",
    "end": "321570"
  },
  {
    "text": "poop emojis to fly in from the right and",
    "start": "321570",
    "end": "323640"
  },
  {
    "text": "then fly out to the left",
    "start": "323640",
    "end": "324900"
  },
  {
    "text": "normally this would take some careful",
    "start": "324900",
    "end": "326460"
  },
  {
    "text": "thought about your CSS animations or you",
    "start": "326460",
    "end": "328590"
  },
  {
    "text": "might use a JavaScript animation library",
    "start": "328590",
    "end": "330210"
  },
  {
    "text": "but in spelt we can use the directives",
    "start": "330210",
    "end": "332250"
  },
  {
    "text": "to keep the animation logic tied",
    "start": "332250",
    "end": "333960"
  },
  {
    "text": "directly to the Dom element that's being",
    "start": "333960",
    "end": "335580"
  },
  {
    "text": "animated and then we can add our own",
    "start": "335580",
    "end": "336960"
  },
  {
    "text": "properties to it to customize the way it",
    "start": "336960",
    "end": "338850"
  },
  {
    "text": "behaves and that gives us poop flying",
    "start": "338850",
    "end": "340440"
  },
  {
    "text": "all over the screen which is the effect",
    "start": "340440",
    "end": "341910"
  },
  {
    "text": "we're going for and there's even a",
    "start": "341910",
    "end": "343530"
  },
  {
    "text": "directive specifically for SVG graphics",
    "start": "343530",
    "end": "345120"
  },
  {
    "text": "that we'll draw the path along the shape",
    "start": "345120",
    "end": "347070"
  },
  {
    "text": "so that's really awesome stuff but",
    "start": "347070",
    "end": "349170"
  },
  {
    "text": "there's still a couple of other",
    "start": "349170",
    "end": "350160"
  },
  {
    "text": "fundamental things that I want to show",
    "start": "350160",
    "end": "351330"
  },
  {
    "text": "you before we get to the full demo",
    "start": "351330",
    "end": "352650"
  },
  {
    "text": "earlier I mentioned that spelt is",
    "start": "352650",
    "end": "354360"
  },
  {
    "text": "reactive based on assignment so if we",
    "start": "354360",
    "end": "356250"
  },
  {
    "text": "have an array and then we push new items",
    "start": "356250",
    "end": "357900"
  },
  {
    "text": "to the array we won't get any actual",
    "start": "357900",
    "end": "359520"
  },
  {
    "text": "changes in the Dom that's because we're",
    "start": "359520",
    "end": "361350"
  },
  {
    "text": "just mutating the array and we're not",
    "start": "361350",
    "end": "362820"
  },
  {
    "text": "actually reassigning the variable so if",
    "start": "362820",
    "end": "364830"
  },
  {
    "text": "you want the app to react to changes to",
    "start": "364830",
    "end": "366540"
  },
  {
    "text": "an array or to an object it's generally",
    "start": "366540",
    "end": "368520"
  },
  {
    "text": "a good idea to use the spread syntax",
    "start": "368520",
    "end": "370260"
  },
  {
    "text": "this code here will do the same thing as",
    "start": "370260",
    "end": "372180"
  },
  {
    "text": "a right push but it will also reassign",
    "start": "372180",
    "end": "373770"
  },
  {
    "text": "the variable causing the app to react",
    "start": "373770",
    "end": "375600"
  },
  {
    "text": "and update the Dom now when working at",
    "start": "375600",
    "end": "377970"
  },
  {
    "text": "the Rays you'll probably want to loop",
    "start": "377970",
    "end": "379200"
  },
  {
    "text": "over them and display some Dom elements",
    "start": "379200",
    "end": "381240"
  },
  {
    "text": "for each item we can do that by using",
    "start": "381240",
    "end": "383250"
  },
  {
    "text": "each which will give us access to both",
    "start": "383250",
    "end": "385200"
  },
  {
    "text": "the value and the index of each item in",
    "start": "385200",
    "end": "387300"
  },
  {
    "text": "the array when we build out our full",
    "start": "387300",
    "end": "388890"
  },
  {
    "text": "demo you'll also see that each loops",
    "start": "388890",
    "end": "390450"
  },
  {
    "text": "work with asynchronous values similar to",
    "start": "390450",
    "end": "392430"
  },
  {
    "text": "the async pipe and angular and speaking",
    "start": "392430",
    "end": "394380"
  },
  {
    "text": "of asynchronous values spelt has a",
    "start": "394380",
    "end": "396090"
  },
  {
    "text": "really cool way of handling promises I",
    "start": "396090",
    "end": "397770"
  },
  {
    "text": "have a helper function here that just",
    "start": "397770",
    "end": "399450"
  },
  {
    "text": "creates a delay",
    "start": "399450",
    "end": "400500"
  },
  {
    "text": "I'm defining our random value is a",
    "start": "400500",
    "end": "402300"
  },
  {
    "text": "promise that results to a random number",
    "start": "402300",
    "end": "404190"
  },
  {
    "text": "after that delay when working with",
    "start": "404190",
    "end": "405810"
  },
  {
    "text": "promises there's generally three things",
    "start": "405810",
    "end": "407160"
  },
  {
    "text": "that happen",
    "start": "407160",
    "end": "407790"
  },
  {
    "text": "first you're in some kind of loading",
    "start": "407790",
    "end": "409110"
  },
  {
    "text": "state waiting for the promise to resolve",
    "start": "409110",
    "end": "410580"
  },
  {
    "text": "then you get a value or maybe you get an",
    "start": "410580",
    "end": "412560"
  },
  {
    "text": "error and need to show some kind of",
    "start": "412560",
    "end": "413820"
  },
  {
    "text": "error message in spelt you can await a",
    "start": "413820",
    "end": "416250"
  },
  {
    "text": "promise directly in the template and",
    "start": "416250",
    "end": "417930"
  },
  {
    "text": "this will also handle things like race",
    "start": "417930",
    "end": "419280"
  },
  {
    "text": "conditions for you automatically the",
    "start": "419280",
    "end": "421530"
  },
  {
    "text": "first section is where you would put",
    "start": "421530",
    "end": "422520"
  },
  {
    "text": "your loading spinner while the promise",
    "start": "422520",
    "end": "423780"
  },
  {
    "text": "is being resolved then you show the",
    "start": "423780",
    "end": "425280"
  },
  {
    "text": "actual result or you catch the error and",
    "start": "425280",
    "end": "427380"
  },
  {
    "text": "show an error message and that provides",
    "start": "427380",
    "end": "428850"
  },
  {
    "text": "a very readable and intuitive way to",
    "start": "428850",
    "end": "430500"
  },
  {
    "text": "handle promises in my opinion it's",
    "start": "430500",
    "end": "432210"
  },
  {
    "text": "actually very similar to a future",
    "start": "432210",
    "end": "433560"
  },
  {
    "text": "builder and flutter if there's any",
    "start": "433560",
    "end": "435090"
  },
  {
    "text": "flutter developers watching at this",
    "start": "435090",
    "end": "436320"
  },
  {
    "text": "point now we're going to switch gears",
    "start": "436320",
    "end": "437880"
  },
  {
    "text": "into spelt stores which behave very",
    "start": "437880",
    "end": "440250"
  },
  {
    "text": "similar to rxjs observables and they can",
    "start": "440250",
    "end": "442919"
  },
  {
    "text": "be shared anywhere in the component tree",
    "start": "442919",
    "end": "444330"
  },
  {
    "text": "so you have a very easy mechanism for",
    "start": "444330",
    "end": "446130"
  },
  {
    "text": "sharing data anywhere in your app let's",
    "start": "446130",
    "end": "448560"
  },
  {
    "text": "go ahead and create a writable store and",
    "start": "448560",
    "end": "450210"
  },
  {
    "text": "it's very similar to a behavior subject",
    "start": "450210",
    "end": "452100"
  },
  {
    "text": "in rxjs at least in terms of its API",
    "start": "452100",
    "end": "454110"
  },
  {
    "text": "first we can pass it a default value and",
    "start": "454110",
    "end": "456360"
  },
  {
    "text": "then we can set the value directly by",
    "start": "456360",
    "end": "458400"
  },
  {
    "text": "calling set or we can call update to get",
    "start": "458400",
    "end": "460800"
  },
  {
    "text": "access to the current value and then",
    "start": "460800",
    "end": "462360"
  },
  {
    "text": "compute a new value in the stream which",
    "start": "462360",
    "end": "464250"
  },
  {
    "text": "we can do with this callback function",
    "start": "464250",
    "end": "465510"
  },
  {
    "text": "which gives us the current value then we",
    "start": "465510",
    "end": "467010"
  },
  {
    "text": "return the next value and if we just",
    "start": "467010",
    "end": "468660"
  },
  {
    "text": "want to listen to the value we just",
    "start": "468660",
    "end": "470010"
  },
  {
    "text": "subscribe to it but if you've worked",
    "start": "470010",
    "end": "471660"
  },
  {
    "text": "with observables then you know that you",
    "start": "471660",
    "end": "473100"
  },
  {
    "text": "need to manage your subscriptions",
    "start": "473100",
    "end": "474270"
  },
  {
    "text": "carefully otherwise you could end up",
    "start": "474270",
    "end": "475800"
  },
  {
    "text": "with memory leaks if we go back into our",
    "start": "475800",
    "end": "477930"
  },
  {
    "text": "component the first thing that we'll do",
    "start": "477930",
    "end": "479520"
  },
  {
    "text": "is import the random store that we just",
    "start": "479520",
    "end": "481350"
  },
  {
    "text": "created we could subscribe to that",
    "start": "481350",
    "end": "483090"
  },
  {
    "text": "directly in the JavaScript but then we",
    "start": "483090",
    "end": "484800"
  },
  {
    "text": "would have to dispose of it once this",
    "start": "484800",
    "end": "486330"
  },
  {
    "text": "component is destroyed that leads to a",
    "start": "486330",
    "end": "488130"
  },
  {
    "text": "lot of boilerplate and also a lot of",
    "start": "488130",
    "end": "489930"
  },
  {
    "text": "potential for error but notice how I",
    "start": "489930",
    "end": "491850"
  },
  {
    "text": "have this dollar sign in front of the",
    "start": "491850",
    "end": "493500"
  },
  {
    "text": "store value itself this will tell the",
    "start": "493500",
    "end": "495419"
  },
  {
    "text": "compiler to automatically subscribe to",
    "start": "495419",
    "end": "497370"
  },
  {
    "text": "the value and also manage the",
    "start": "497370",
    "end": "498870"
  },
  {
    "text": "subscription automatically and now we",
    "start": "498870",
    "end": "500820"
  },
  {
    "text": "can push new values to the stream from",
    "start": "500820",
    "end": "502470"
  },
  {
    "text": "any component anywhere in the app that",
    "start": "502470",
    "end": "504690"
  },
  {
    "text": "will solve a lot of your complex data",
    "start": "504690",
    "end": "506130"
  },
  {
    "text": "sharing situations but you can also just",
    "start": "506130",
    "end": "508050"
  },
  {
    "text": "pass props directly between a parent and",
    "start": "508050",
    "end": "510000"
  },
  {
    "text": "child component I went ahead and created",
    "start": "510000",
    "end": "511950"
  },
  {
    "text": "a new component called child and it's",
    "start": "511950",
    "end": "513690"
  },
  {
    "text": "just a dumb component that displays some",
    "start": "513690",
    "end": "515460"
  },
  {
    "text": "properties now we'll go back up to our",
    "start": "515460",
    "end": "517169"
  },
  {
    "text": "app component and pass some properties",
    "start": "517169",
    "end": "518940"
  },
  {
    "text": "down to this child let's imagine we have",
    "start": "518940",
    "end": "520589"
  },
  {
    "text": "this data object here that we pulled",
    "start": "520589",
    "end": "522120"
  },
  {
    "text": "from a database or something now we can",
    "start": "522120",
    "end": "524070"
  },
  {
    "text": "go and declare our child component and",
    "start": "524070",
    "end": "525690"
  },
  {
    "text": "just pass in each property one by one",
    "start": "525690",
    "end": "527430"
  },
  {
    "text": "but even after just three simple",
    "start": "527430",
    "end": "528930"
  },
  {
    "text": "properties it's starting to become kind",
    "start": "528930",
    "end": "530490"
  },
  {
    "text": "of hard to read but spelt has yet",
    "start": "530490",
    "end": "532380"
  },
  {
    "text": "another little piece of magic that will",
    "start": "532380",
    "end": "533790"
  },
  {
    "text": "make this code",
    "start": "533790",
    "end": "534270"
  },
  {
    "text": "much nicer you can simply send all of",
    "start": "534270",
    "end": "536010"
  },
  {
    "text": "your props down to the child using these",
    "start": "536010",
    "end": "537450"
  },
  {
    "text": "spread syntax so now that you know some",
    "start": "537450",
    "end": "539610"
  },
  {
    "text": "of the basic concepts in spelt I want to",
    "start": "539610",
    "end": "541560"
  },
  {
    "text": "put everything together into a full",
    "start": "541560",
    "end": "542970"
  },
  {
    "text": "working demo in just a few minutes we'll",
    "start": "542970",
    "end": "545010"
  },
  {
    "text": "be able to build this real-time to-do",
    "start": "545010",
    "end": "546210"
  },
  {
    "text": "list that also includes user",
    "start": "546210",
    "end": "547470"
  },
  {
    "text": "authentication and even some animation",
    "start": "547470",
    "end": "549360"
  },
  {
    "text": "once a user is logged in they'll be able",
    "start": "549360",
    "end": "551370"
  },
  {
    "text": "to fill out this form with some",
    "start": "551370",
    "end": "552480"
  },
  {
    "text": "information about the to do that'll be",
    "start": "552480",
    "end": "554220"
  },
  {
    "text": "saved to fire store and they can toggle",
    "start": "554220",
    "end": "556020"
  },
  {
    "text": "it complete or incomplete or delete it",
    "start": "556020",
    "end": "558030"
  },
  {
    "text": "and of course everything will stay",
    "start": "558030",
    "end": "559200"
  },
  {
    "text": "synched up with the backend database",
    "start": "559200",
    "end": "560430"
  },
  {
    "text": "we'll be using our Xfire for this demo",
    "start": "560430",
    "end": "562560"
  },
  {
    "text": "which you can install with the following",
    "start": "562560",
    "end": "563940"
  },
  {
    "text": "command the first thing we'll do is",
    "start": "563940",
    "end": "565590"
  },
  {
    "text": "create a file called firebase J s just",
    "start": "565590",
    "end": "567720"
  },
  {
    "text": "used to initialize firebase and you'll",
    "start": "567720",
    "end": "569430"
  },
  {
    "text": "need to use the credentials from your",
    "start": "569430",
    "end": "570870"
  },
  {
    "text": "own firebase project we'll be going",
    "start": "570870",
    "end": "572610"
  },
  {
    "text": "through this code very quickly so make",
    "start": "572610",
    "end": "574110"
  },
  {
    "text": "sure to follow along with the source",
    "start": "574110",
    "end": "575130"
  },
  {
    "text": "code on fire ship io",
    "start": "575130",
    "end": "576330"
  },
  {
    "text": "but basically the purpose of this file",
    "start": "576330",
    "end": "578370"
  },
  {
    "text": "is just to initialize the app and then",
    "start": "578370",
    "end": "580320"
  },
  {
    "text": "export auth and the fire stored database",
    "start": "580320",
    "end": "582540"
  },
  {
    "text": "so we can use them in other files from",
    "start": "582540",
    "end": "584460"
  },
  {
    "text": "there we'll go into the app component",
    "start": "584460",
    "end": "585660"
  },
  {
    "text": "and we just have a few small changes to",
    "start": "585660",
    "end": "587370"
  },
  {
    "text": "make here we'll import this login",
    "start": "587370",
    "end": "589140"
  },
  {
    "text": "component which will create next and",
    "start": "589140",
    "end": "590670"
  },
  {
    "text": "with spelt you'll notice that there's no",
    "start": "590670",
    "end": "592770"
  },
  {
    "text": "index.html that you can mess with so",
    "start": "592770",
    "end": "594840"
  },
  {
    "text": "instead what you can do is use this felt",
    "start": "594840",
    "end": "596790"
  },
  {
    "text": "colon head tag to add additional things",
    "start": "596790",
    "end": "598740"
  },
  {
    "text": "to the head of the document in this demo",
    "start": "598740",
    "end": "600600"
  },
  {
    "text": "I'm using the boma CSS framework just so",
    "start": "600600",
    "end": "602550"
  },
  {
    "text": "we have some better base styles to work",
    "start": "602550",
    "end": "604050"
  },
  {
    "text": "with after that we'll build our off",
    "start": "604050",
    "end": "605520"
  },
  {
    "text": "features so the user has a way to log in",
    "start": "605520",
    "end": "607500"
  },
  {
    "text": "I'm creating a profile component which",
    "start": "607500",
    "end": "609450"
  },
  {
    "text": "will just be a dumb presentational",
    "start": "609450",
    "end": "610920"
  },
  {
    "text": "component to show the users display name",
    "start": "610920",
    "end": "612690"
  },
  {
    "text": "photo URL and user ID and another cool",
    "start": "612690",
    "end": "615240"
  },
  {
    "text": "side note here is that svelt will",
    "start": "615240",
    "end": "616620"
  },
  {
    "text": "automatically warn you for accessibility",
    "start": "616620",
    "end": "618330"
  },
  {
    "text": "issues for example if we leave out the",
    "start": "618330",
    "end": "620070"
  },
  {
    "text": "alt attribute it's going to warn us to",
    "start": "620070",
    "end": "621690"
  },
  {
    "text": "add one you can also do this in ES lint",
    "start": "621690",
    "end": "623700"
  },
  {
    "text": "but it's nice to just have this stuff",
    "start": "623700",
    "end": "624930"
  },
  {
    "text": "working right out of the gate after that",
    "start": "624930",
    "end": "626910"
  },
  {
    "text": "we can create the logging component",
    "start": "626910",
    "end": "628530"
  },
  {
    "text": "which is the smart component that does",
    "start": "628530",
    "end": "629940"
  },
  {
    "text": "the actual interaction with firebase now",
    "start": "629940",
    "end": "632280"
  },
  {
    "text": "the interesting thing about spelt is",
    "start": "632280",
    "end": "633690"
  },
  {
    "text": "that the shape of the stores are similar",
    "start": "633690",
    "end": "635640"
  },
  {
    "text": "to the shape of rxjs observables so that",
    "start": "635640",
    "end": "638220"
  },
  {
    "text": "means we can use some of that syntactic",
    "start": "638220",
    "end": "639570"
  },
  {
    "text": "sugar on rxjs observables in addition to",
    "start": "639570",
    "end": "641880"
  },
  {
    "text": "spelt stores currently I'm grabbing the",
    "start": "641880",
    "end": "644040"
  },
  {
    "text": "off-state observable from our Xfire and",
    "start": "644040",
    "end": "645960"
  },
  {
    "text": "just subscribing to it manually but",
    "start": "645960",
    "end": "647550"
  },
  {
    "text": "we'll refactor this in a minute and I'll",
    "start": "647550",
    "end": "649380"
  },
  {
    "text": "also define a function here to trigger",
    "start": "649380",
    "end": "650940"
  },
  {
    "text": "the pop-up that will allow the user to",
    "start": "650940",
    "end": "652380"
  },
  {
    "text": "log in with Google and that will cause",
    "start": "652380",
    "end": "654360"
  },
  {
    "text": "the value of the AA state observable to",
    "start": "654360",
    "end": "656100"
  },
  {
    "text": "change now we can go down to the",
    "start": "656100",
    "end": "657450"
  },
  {
    "text": "template and create an if-else statement",
    "start": "657450",
    "end": "659370"
  },
  {
    "text": "and if we have a user logged in we'll go",
    "start": "659370",
    "end": "661200"
  },
  {
    "text": "ahead and display that user profile",
    "start": "661200",
    "end": "662550"
  },
  {
    "text": "component and of course use that spread",
    "start": "662550",
    "end": "664350"
  },
  {
    "text": "syntax to pass the props down and if the",
    "start": "664350",
    "end": "666630"
  },
  {
    "text": "user is not logged in we'll just",
    "start": "666630",
    "end": "668010"
  },
  {
    "text": "a button that can trigger that login",
    "start": "668010",
    "end": "669510"
  },
  {
    "text": "function at this point we have a fully",
    "start": "669510",
    "end": "671430"
  },
  {
    "text": "working off system but we can actually",
    "start": "671430",
    "end": "672900"
  },
  {
    "text": "refactor this a little bit to use some",
    "start": "672900",
    "end": "674730"
  },
  {
    "text": "of spells built-in syntactic sugar this",
    "start": "674730",
    "end": "677010"
  },
  {
    "text": "time we'll define the user as the",
    "start": "677010",
    "end": "678420"
  },
  {
    "text": "observable itself and then we'll just go",
    "start": "678420",
    "end": "680220"
  },
  {
    "text": "ahead and use that dollar sign syntax to",
    "start": "680220",
    "end": "682080"
  },
  {
    "text": "unwrap the observable directly in the",
    "start": "682080",
    "end": "683580"
  },
  {
    "text": "template that'll work inside the if",
    "start": "683580",
    "end": "684930"
  },
  {
    "text": "condition and also works inside these",
    "start": "684930",
    "end": "686790"
  },
  {
    "text": "spread syntax and now we have a login",
    "start": "686790",
    "end": "688650"
  },
  {
    "text": "component that will manage our",
    "start": "688650",
    "end": "689850"
  },
  {
    "text": "subscription automatically with almost",
    "start": "689850",
    "end": "691470"
  },
  {
    "text": "no boilerplate now it's time to move on",
    "start": "691470",
    "end": "693750"
  },
  {
    "text": "to the to-do list each of the individual",
    "start": "693750",
    "end": "695970"
  },
  {
    "text": "to-do items will be represented by this",
    "start": "695970",
    "end": "697500"
  },
  {
    "text": "dumb component called to-do item but",
    "start": "697500",
    "end": "699810"
  },
  {
    "text": "instead of just displaying data it's",
    "start": "699810",
    "end": "701400"
  },
  {
    "text": "also going to emit custom events up to",
    "start": "701400",
    "end": "703350"
  },
  {
    "text": "the parent component so this is a way to",
    "start": "703350",
    "end": "705480"
  },
  {
    "text": "pass data from a child component back up",
    "start": "705480",
    "end": "707580"
  },
  {
    "text": "to the parent and in this case we're",
    "start": "707580",
    "end": "709470"
  },
  {
    "text": "doing that so we can tell the parent",
    "start": "709470",
    "end": "710880"
  },
  {
    "text": "component when to remove the item from",
    "start": "710880",
    "end": "712380"
  },
  {
    "text": "the database or when to update the",
    "start": "712380",
    "end": "714210"
  },
  {
    "text": "status in the database spelt has a thing",
    "start": "714210",
    "end": "716160"
  },
  {
    "text": "called an event dispatcher which will",
    "start": "716160",
    "end": "717720"
  },
  {
    "text": "create a custom event in the Dom for you",
    "start": "717720",
    "end": "719520"
  },
  {
    "text": "in this case when we want to remove an",
    "start": "719520",
    "end": "721110"
  },
  {
    "text": "item will dispatch an event called",
    "start": "721110",
    "end": "722520"
  },
  {
    "text": "remove with that items ID in the",
    "start": "722520",
    "end": "724260"
  },
  {
    "text": "database and then we'll do a similar",
    "start": "724260",
    "end": "725940"
  },
  {
    "text": "thing to talk about the status of it",
    "start": "725940",
    "end": "727440"
  },
  {
    "text": "to-do item but this time we'll pass the",
    "start": "727440",
    "end": "729090"
  },
  {
    "text": "ID as well as the new status that the",
    "start": "729090",
    "end": "731070"
  },
  {
    "text": "item should change to now I'm defining a",
    "start": "731070",
    "end": "733590"
  },
  {
    "text": "CSS class that will show when an item is",
    "start": "733590",
    "end": "735570"
  },
  {
    "text": "complete and I'm going to make sure that",
    "start": "735570",
    "end": "737520"
  },
  {
    "text": "that class name is the same of the",
    "start": "737520",
    "end": "739110"
  },
  {
    "text": "property that toggles that class which",
    "start": "739110",
    "end": "740670"
  },
  {
    "text": "is the boolean value of complete on this",
    "start": "740670",
    "end": "742440"
  },
  {
    "text": "component and we might as well just add",
    "start": "742440",
    "end": "744090"
  },
  {
    "text": "a transition to this item when it's",
    "start": "744090",
    "end": "745620"
  },
  {
    "text": "created so it kind of slides in from the",
    "start": "745620",
    "end": "747390"
  },
  {
    "text": "right and we can easily do that by",
    "start": "747390",
    "end": "748800"
  },
  {
    "text": "simply using spell its transition",
    "start": "748800",
    "end": "750420"
  },
  {
    "text": "directive from there we can go ahead and",
    "start": "750420",
    "end": "752310"
  },
  {
    "text": "add the text inside the list item and",
    "start": "752310",
    "end": "754020"
  },
  {
    "text": "when it's complete we want to show that",
    "start": "754020",
    "end": "755670"
  },
  {
    "text": "CSS class spelt has a built in class",
    "start": "755670",
    "end": "758280"
  },
  {
    "text": "directive which we can use like this by",
    "start": "758280",
    "end": "760140"
  },
  {
    "text": "pointing it to the complete property but",
    "start": "760140",
    "end": "762300"
  },
  {
    "text": "if the CSS class and the property both",
    "start": "762300",
    "end": "764220"
  },
  {
    "text": "share the same name which they do in",
    "start": "764220",
    "end": "765600"
  },
  {
    "text": "this case we can actually make this even",
    "start": "765600",
    "end": "766950"
  },
  {
    "text": "more concise like so now the last thing",
    "start": "766950",
    "end": "768870"
  },
  {
    "text": "we'll do in this component is create our",
    "start": "768870",
    "end": "770400"
  },
  {
    "text": "buttons that will dispatch the custom",
    "start": "770400",
    "end": "771960"
  },
  {
    "text": "events we have three different buttons",
    "start": "771960",
    "end": "773430"
  },
  {
    "text": "here two of those are used to toggle the",
    "start": "773430",
    "end": "775110"
  },
  {
    "text": "status and the other one is used to",
    "start": "775110",
    "end": "776730"
  },
  {
    "text": "remove the item and now we're ready to",
    "start": "776730",
    "end": "779010"
  },
  {
    "text": "move on to the final component of this",
    "start": "779010",
    "end": "780450"
  },
  {
    "text": "app which is the to-do list I'm not",
    "start": "780450",
    "end": "782880"
  },
  {
    "text": "going to talk too much about the",
    "start": "782880",
    "end": "784080"
  },
  {
    "text": "firebase code basically we're just",
    "start": "784080",
    "end": "785700"
  },
  {
    "text": "making a reference to the collection in",
    "start": "785700",
    "end": "787350"
  },
  {
    "text": "the database and then making a query for",
    "start": "787350",
    "end": "789240"
  },
  {
    "text": "all of the to-do items that are",
    "start": "789240",
    "end": "790680"
  },
  {
    "text": "associated with the logged in users user",
    "start": "790680",
    "end": "792570"
  },
  {
    "text": "ID then we're going to use the",
    "start": "792570",
    "end": "794130"
  },
  {
    "text": "collection data function from our Xfire",
    "start": "794130",
    "end": "795960"
  },
  {
    "text": "which takes that query and converts it",
    "start": "795960",
    "end": "797850"
  },
  {
    "text": "to an observable of the document data",
    "start": "797850",
    "end": "799500"
  },
  {
    "text": "but in order to work with an each loop",
    "start": "799500",
    "end": "800940"
  },
  {
    "text": "and",
    "start": "800940",
    "end": "801450"
  },
  {
    "text": "belt will also want to pipe and start",
    "start": "801450",
    "end": "803280"
  },
  {
    "text": "with and that will guarantee that the",
    "start": "803280",
    "end": "804600"
  },
  {
    "text": "observable always has a synchronous",
    "start": "804600",
    "end": "806160"
  },
  {
    "text": "array to start with from there we'll",
    "start": "806160",
    "end": "807480"
  },
  {
    "text": "define the update status method which",
    "start": "807480",
    "end": "809220"
  },
  {
    "text": "will take the custom event that's being",
    "start": "809220",
    "end": "810690"
  },
  {
    "text": "emitted by the child component and use",
    "start": "810690",
    "end": "812730"
  },
  {
    "text": "it to make an update to the firestore",
    "start": "812730",
    "end": "814350"
  },
  {
    "text": "database and then we'll do the same",
    "start": "814350",
    "end": "815970"
  },
  {
    "text": "basic thing to handle the remove event",
    "start": "815970",
    "end": "817650"
  },
  {
    "text": "now if we go down to the template we'll",
    "start": "817650",
    "end": "819810"
  },
  {
    "text": "set up an each loop and notice that I",
    "start": "819810",
    "end": "821370"
  },
  {
    "text": "put a dollar sign in front of the two",
    "start": "821370",
    "end": "822930"
  },
  {
    "text": "dues observable this will unwrap The",
    "start": "822930",
    "end": "824760"
  },
  {
    "text": "Observer will automatically manage the",
    "start": "824760",
    "end": "826410"
  },
  {
    "text": "subscription and then react to any new",
    "start": "826410",
    "end": "828300"
  },
  {
    "text": "changes whether they happen client-side",
    "start": "828300",
    "end": "829860"
  },
  {
    "text": "or on the server and then we can pass",
    "start": "829860",
    "end": "831990"
  },
  {
    "text": "our props down to the to-do item",
    "start": "831990",
    "end": "833640"
  },
  {
    "text": "component and then we can also listen to",
    "start": "833640",
    "end": "835380"
  },
  {
    "text": "the custom events that we defined on",
    "start": "835380",
    "end": "837060"
  },
  {
    "text": "that component as well so instead of",
    "start": "837060",
    "end": "838980"
  },
  {
    "text": "just doing a simple on click event here",
    "start": "838980",
    "end": "840840"
  },
  {
    "text": "we're doing on remove and on toggle",
    "start": "840840",
    "end": "842580"
  },
  {
    "text": "again those are custom events defined in",
    "start": "842580",
    "end": "844530"
  },
  {
    "text": "the child component and then the very",
    "start": "844530",
    "end": "846300"
  },
  {
    "text": "last thing we'll do is set up a form",
    "start": "846300",
    "end": "847530"
  },
  {
    "text": "input using the bind value directive and",
    "start": "847530",
    "end": "849660"
  },
  {
    "text": "then set up a button that will add that",
    "start": "849660",
    "end": "851160"
  },
  {
    "text": "item to the database when clicked and",
    "start": "851160",
    "end": "852660"
  },
  {
    "text": "that's all there is to it we now have a",
    "start": "852660",
    "end": "854190"
  },
  {
    "text": "reactive real-time to-do app overall",
    "start": "854190",
    "end": "856800"
  },
  {
    "text": "I've been super impressed with spelt the",
    "start": "856800",
    "end": "858240"
  },
  {
    "text": "only thing that I think is missing at",
    "start": "858240",
    "end": "859530"
  },
  {
    "text": "this point is typescript support but",
    "start": "859530",
    "end": "861480"
  },
  {
    "text": "from what I understand there should be",
    "start": "861480",
    "end": "862590"
  },
  {
    "text": "typescript support in the near future I",
    "start": "862590",
    "end": "864270"
  },
  {
    "text": "think what impresses me the most about",
    "start": "864270",
    "end": "865500"
  },
  {
    "text": "spelt is that the abstractions are",
    "start": "865500",
    "end": "867210"
  },
  {
    "text": "really well-thought-out but they don't",
    "start": "867210",
    "end": "868590"
  },
  {
    "text": "take you too far away from the Nilla",
    "start": "868590",
    "end": "869730"
  },
  {
    "text": "javascript or native dom api's I'm gonna",
    "start": "869730",
    "end": "872310"
  },
  {
    "text": "go ahead and wrap things up there let me",
    "start": "872310",
    "end": "873750"
  },
  {
    "text": "know what you think about spelt in the",
    "start": "873750",
    "end": "874800"
  },
  {
    "text": "comments thanks for watching and I will",
    "start": "874800",
    "end": "876780"
  },
  {
    "text": "talk to you soon",
    "start": "876780",
    "end": "879350"
  },
  {
    "text": "[Music]",
    "start": "879440",
    "end": "882629"
  }
]