[
  {
    "text": "debugging is easily one of the most",
    "start": "240",
    "end": "1959"
  },
  {
    "text": "annoying and frustrating aspects of a",
    "start": "1959",
    "end": "3800"
  },
  {
    "text": "programmer's life in this episode I'm",
    "start": "3800",
    "end": "5960"
  },
  {
    "text": "going to cover seven different",
    "start": "5960",
    "end": "7120"
  },
  {
    "text": "techniques that you can use to debug",
    "start": "7120",
    "end": "9000"
  },
  {
    "text": "angular 4 applications hopefully this",
    "start": "9000",
    "end": "11080"
  },
  {
    "text": "will save you some time and frustration",
    "start": "11080",
    "end": "12639"
  },
  {
    "text": "as you build your",
    "start": "12639",
    "end": "13799"
  },
  {
    "text": "app the great thing about angular is",
    "start": "13799",
    "end": "16160"
  },
  {
    "text": "that it uses typescript by default which",
    "start": "16160",
    "end": "18240"
  },
  {
    "text": "prevents many of the bugs that plague",
    "start": "18240",
    "end": "20000"
  },
  {
    "text": "JavaScript applications it does this by",
    "start": "20000",
    "end": "22359"
  },
  {
    "text": "allowing you to write JavaScript code",
    "start": "22359",
    "end": "24000"
  },
  {
    "text": "with static typing as opposed to Dynamic",
    "start": "24000",
    "end": "26199"
  },
  {
    "text": "typing this just means you define the",
    "start": "26199",
    "end": "28119"
  },
  {
    "text": "data types and properties of object",
    "start": "28119",
    "end": "30279"
  },
  {
    "text": "before they're actually used in the code",
    "start": "30279",
    "end": "32279"
  },
  {
    "text": "so why is this beneficial well the",
    "start": "32279",
    "end": "34480"
  },
  {
    "text": "number one reason is it allows your text",
    "start": "34480",
    "end": "36399"
  },
  {
    "text": "editor to give you instant feedback",
    "start": "36399",
    "end": "38360"
  },
  {
    "text": "whenever you're about to introduce a bug",
    "start": "38360",
    "end": "40120"
  },
  {
    "text": "into your code take a look at this code",
    "start": "40120",
    "end": "42200"
  },
  {
    "text": "here it's more or less just plain",
    "start": "42200",
    "end": "43760"
  },
  {
    "text": "JavaScript and it opts out of all of",
    "start": "43760",
    "end": "45680"
  },
  {
    "text": "typescript strong typing features an",
    "start": "45680",
    "end": "48199"
  },
  {
    "text": "animal should always be an animal object",
    "start": "48199",
    "end": "50840"
  },
  {
    "text": "but what if we Define it as a string",
    "start": "50840",
    "end": "52600"
  },
  {
    "text": "will we get an error in this case we",
    "start": "52600",
    "end": "54600"
  },
  {
    "text": "don't because an animal variable can be",
    "start": "54600",
    "end": "56239"
  },
  {
    "text": "assigned to any data type so if we've",
    "start": "56239",
    "end": "58960"
  },
  {
    "text": "introduced a bug in this code we",
    "start": "58960",
    "end": "60280"
  },
  {
    "text": "wouldn't actually see it fail until",
    "start": "60280",
    "end": "61920"
  },
  {
    "text": "runtime the same thing goes for function",
    "start": "61920",
    "end": "64040"
  },
  {
    "text": "arguments say this function should",
    "start": "64040",
    "end": "65600"
  },
  {
    "text": "always have a number and a string we",
    "start": "65600",
    "end": "67560"
  },
  {
    "text": "could pass it other data types but it",
    "start": "67560",
    "end": "69680"
  },
  {
    "text": "still won't fail until it reaches",
    "start": "69680",
    "end": "71520"
  },
  {
    "text": "runtime now let's see how we can use",
    "start": "71520",
    "end": "73400"
  },
  {
    "text": "typescript to prevent these bugs in the",
    "start": "73400",
    "end": "75040"
  },
  {
    "text": "first place so we create an animal class",
    "start": "75040",
    "end": "77479"
  },
  {
    "text": "that has these properties strong typed",
    "start": "77479",
    "end": "79200"
  },
  {
    "text": "as a number and a string then when we",
    "start": "79200",
    "end": "81920"
  },
  {
    "text": "declare the animal variable we can set",
    "start": "81920",
    "end": "84079"
  },
  {
    "text": "it to this animal data type ensuring",
    "start": "84079",
    "end": "85840"
  },
  {
    "text": "that it's always a JavaScript object",
    "start": "85840",
    "end": "87560"
  },
  {
    "text": "with these exact properties when we",
    "start": "87560",
    "end": "89520"
  },
  {
    "text": "Define the function we can set data",
    "start": "89520",
    "end": "91159"
  },
  {
    "text": "types on the arguments to ensure that we",
    "start": "91159",
    "end": "93159"
  },
  {
    "text": "can't accidentally pass the wrong data",
    "start": "93159",
    "end": "94960"
  },
  {
    "text": "type to it and we can also Force this",
    "start": "94960",
    "end": "97439"
  },
  {
    "text": "function to always return an instance of",
    "start": "97439",
    "end": "99759"
  },
  {
    "text": "the animal class so we can't",
    "start": "99759",
    "end": "101360"
  },
  {
    "text": "accidentally return the wrong value from",
    "start": "101360",
    "end": "103040"
  },
  {
    "text": "a function so now let's try to use this",
    "start": "103040",
    "end": "105520"
  },
  {
    "text": "code and see the difference in the",
    "start": "105520",
    "end": "107439"
  },
  {
    "text": "feedback we get from the text",
    "start": "107439",
    "end": "109680"
  },
  {
    "text": "editor if we call the function with the",
    "start": "109680",
    "end": "111680"
  },
  {
    "text": "correct data types everything is all",
    "start": "111680",
    "end": "113280"
  },
  {
    "text": "good there's no error but if we try to",
    "start": "113280",
    "end": "115000"
  },
  {
    "text": "turn the number into a string we'll get",
    "start": "115000",
    "end": "117159"
  },
  {
    "text": "instant feedback that this is the wrong",
    "start": "117159",
    "end": "118640"
  },
  {
    "text": "data type so instead of waiting for this",
    "start": "118640",
    "end": "121399"
  },
  {
    "text": "code to fail at runtime we know we've",
    "start": "121399",
    "end": "123240"
  },
  {
    "text": "introduced a bug and know exactly how to",
    "start": "123240",
    "end": "125119"
  },
  {
    "text": "fix it here another cool thing is we'll",
    "start": "125119",
    "end": "127280"
  },
  {
    "text": "get feedback about the properties that",
    "start": "127280",
    "end": "129000"
  },
  {
    "text": "exist on an object so if we try to call",
    "start": "129000",
    "end": "131200"
  },
  {
    "text": "a certain function or property we know",
    "start": "131200",
    "end": "132840"
  },
  {
    "text": "exactly what's there based on the",
    "start": "132840",
    "end": "134879"
  },
  {
    "text": "feedback we get from typescript if we",
    "start": "134879",
    "end": "136920"
  },
  {
    "text": "try to call a property that doesn't",
    "start": "136920",
    "end": "138080"
  },
  {
    "text": "exist we'll get an error from typescript",
    "start": "138080",
    "end": "139840"
  },
  {
    "text": "and our code won't compile in my opinion",
    "start": "139840",
    "end": "142319"
  },
  {
    "text": "typescript is the single most important",
    "start": "142319",
    "end": "144040"
  },
  {
    "text": "tool you have for debugging angular",
    "start": "144040",
    "end": "146560"
  },
  {
    "text": "applications the next debugging tool",
    "start": "146560",
    "end": "148599"
  },
  {
    "text": "look at is the debug statement from",
    "start": "148599",
    "end": "150800"
  },
  {
    "text": "JavaScript a debugger statement will",
    "start": "150800",
    "end": "152959"
  },
  {
    "text": "stop the execution of JavaScript which",
    "start": "152959",
    "end": "154959"
  },
  {
    "text": "essentially allows you to pause your",
    "start": "154959",
    "end": "156599"
  },
  {
    "text": "application at any point to inspect it",
    "start": "156599",
    "end": "158840"
  },
  {
    "text": "in this example we have a component and",
    "start": "158840",
    "end": "160720"
  },
  {
    "text": "we're going to add a debugger to the",
    "start": "160720",
    "end": "162040"
  },
  {
    "text": "Constructor and also inside of an rxjs",
    "start": "162040",
    "end": "165640"
  },
  {
    "text": "subscription now let's go to the app and",
    "start": "165640",
    "end": "167560"
  },
  {
    "text": "see what happens when it hits that",
    "start": "167560",
    "end": "169200"
  },
  {
    "text": "Constructor it pauses the app right here",
    "start": "169200",
    "end": "171760"
  },
  {
    "text": "and brings up the file that we're trying",
    "start": "171760",
    "end": "173040"
  },
  {
    "text": "to debug then we can hit the play button",
    "start": "173040",
    "end": "175440"
  },
  {
    "text": "and it'll once again pause the",
    "start": "175440",
    "end": "176560"
  },
  {
    "text": "application when it hits that",
    "start": "176560",
    "end": "177720"
  },
  {
    "text": "subscription this can be very useful",
    "start": "177720",
    "end": "179480"
  },
  {
    "text": "when you're not not sure exactly which",
    "start": "179480",
    "end": "180800"
  },
  {
    "text": "component or service is causing the bug",
    "start": "180800",
    "end": "183879"
  },
  {
    "text": "the next debugging tool we look at is",
    "start": "183879",
    "end": "185480"
  },
  {
    "text": "the Json pipe this is something you can",
    "start": "185480",
    "end": "187519"
  },
  {
    "text": "use to inspect data directly in the HTML",
    "start": "187519",
    "end": "190360"
  },
  {
    "text": "it's especially useful when you're not",
    "start": "190360",
    "end": "191680"
  },
  {
    "text": "sure exactly what an object looks like",
    "start": "191680",
    "end": "193720"
  },
  {
    "text": "after retrieving it from a database or a",
    "start": "193720",
    "end": "195440"
  },
  {
    "text": "third party",
    "start": "195440",
    "end": "196560"
  },
  {
    "text": "API if we go into the app we can see",
    "start": "196560",
    "end": "198760"
  },
  {
    "text": "that we're now seeing all the properties",
    "start": "198760",
    "end": "200440"
  },
  {
    "text": "in this item listed in Json format now",
    "start": "200440",
    "end": "203480"
  },
  {
    "text": "let's look at some of angular's built-in",
    "start": "203480",
    "end": "205040"
  },
  {
    "text": "debugging tools to enable them we'll",
    "start": "205040",
    "end": "207120"
  },
  {
    "text": "need to make some adjustments to the",
    "start": "207120",
    "end": "208519"
  },
  {
    "text": "main.ts file",
    "start": "208519",
    "end": "210439"
  },
  {
    "text": "after we bootstrap the app we'll have to",
    "start": "210439",
    "end": "212280"
  },
  {
    "text": "enable debug tools on the app component",
    "start": "212280",
    "end": "214599"
  },
  {
    "text": "itself check out the link in the",
    "start": "214599",
    "end": "216200"
  },
  {
    "text": "description to just copy and paste this",
    "start": "216200",
    "end": "217879"
  },
  {
    "text": "code the first thing we'll do is use NG",
    "start": "217879",
    "end": "220560"
  },
  {
    "text": "probe which allows us to extract",
    "start": "220560",
    "end": "222599"
  },
  {
    "text": "information from a component in the Dom",
    "start": "222599",
    "end": "224599"
  },
  {
    "text": "so we do that by clicking on the",
    "start": "224599",
    "end": "226000"
  },
  {
    "text": "component itself first in the HTML then",
    "start": "226000",
    "end": "229239"
  },
  {
    "text": "we can use ng. probe dollar sign Z and",
    "start": "229239",
    "end": "232720"
  },
  {
    "text": "that'll give us this debug element back",
    "start": "232720",
    "end": "234560"
  },
  {
    "text": "which has a bunch of information about",
    "start": "234560",
    "end": "236000"
  },
  {
    "text": "the component itself the other cool",
    "start": "236000",
    "end": "237840"
  },
  {
    "text": "thing we can do is run a change",
    "start": "237840",
    "end": "239239"
  },
  {
    "text": "detection profile which should happen",
    "start": "239239",
    "end": "241519"
  },
  {
    "text": "very fast in this case it only takes 05",
    "start": "241519",
    "end": "244200"
  },
  {
    "text": "milliseconds per change detection",
    "start": "244200",
    "end": "246760"
  },
  {
    "text": "cycle now let's take a look at the",
    "start": "246760",
    "end": "248799"
  },
  {
    "text": "augury plugin for Chrome if you don't",
    "start": "248799",
    "end": "250799"
  },
  {
    "text": "already have this installed go to the",
    "start": "250799",
    "end": "252200"
  },
  {
    "text": "Chrome web store and get it installed",
    "start": "252200",
    "end": "253879"
  },
  {
    "text": "today it's free and very powerful it",
    "start": "253879",
    "end": "256919"
  },
  {
    "text": "gives you a visual picture of the app's",
    "start": "256919",
    "end": "258759"
  },
  {
    "text": "components and services so you can",
    "start": "258759",
    "end": "260440"
  },
  {
    "text": "easily debug things like sharing data",
    "start": "260440",
    "end": "262680"
  },
  {
    "text": "between child and parent components as",
    "start": "262680",
    "end": "264600"
  },
  {
    "text": "well as dependency injection with",
    "start": "264600",
    "end": "266440"
  },
  {
    "text": "Services it also gives you a visual",
    "start": "266440",
    "end": "268400"
  },
  {
    "text": "breakdown of your router so you can can",
    "start": "268400",
    "end": "269840"
  },
  {
    "text": "see exactly which components are being",
    "start": "269840",
    "end": "271479"
  },
  {
    "text": "imperatively loaded and lastly it gives",
    "start": "271479",
    "end": "274080"
  },
  {
    "text": "you a breakdown of your NG modules this",
    "start": "274080",
    "end": "276000"
  },
  {
    "text": "is a lot more efficient than looking up",
    "start": "276000",
    "end": "277680"
  },
  {
    "text": "each file",
    "start": "277680",
    "end": "279080"
  },
  {
    "text": "individually another strategy for",
    "start": "279080",
    "end": "280840"
  },
  {
    "text": "debugging is to create your own custom",
    "start": "280840",
    "end": "282600"
  },
  {
    "text": "logger this allows you to prioritize and",
    "start": "282600",
    "end": "285160"
  },
  {
    "text": "customize the errors that you see in",
    "start": "285160",
    "end": "286759"
  },
  {
    "text": "your app install it by running npm",
    "start": "286759",
    "end": "289400"
  },
  {
    "text": "install angular 2- logger import it into",
    "start": "289400",
    "end": "292800"
  },
  {
    "text": "the app module and it's a service so",
    "start": "292800",
    "end": "295000"
  },
  {
    "text": "we'll add it to the providers list in",
    "start": "295000",
    "end": "296600"
  },
  {
    "text": "that module then we can inject it into a",
    "start": "296600",
    "end": "298759"
  },
  {
    "text": "component just like other service and",
    "start": "298759",
    "end": "300919"
  },
  {
    "text": "start logging messages with various",
    "start": "300919",
    "end": "302840"
  },
  {
    "text": "priorities in this case we'll do an",
    "start": "302840",
    "end": "304320"
  },
  {
    "text": "error and a warn message then if we go",
    "start": "304320",
    "end": "306759"
  },
  {
    "text": "into the console we can see we get these",
    "start": "306759",
    "end": "308280"
  },
  {
    "text": "two different messages with different",
    "start": "308280",
    "end": "311000"
  },
  {
    "text": "priorities and last but not least let's",
    "start": "311000",
    "end": "313440"
  },
  {
    "text": "talk about debugging rxjs observables RX",
    "start": "313440",
    "end": "316680"
  },
  {
    "text": "has a do operator that allows you to",
    "start": "316680",
    "end": "318520"
  },
  {
    "text": "execute code within the observable chain",
    "start": "318520",
    "end": "320400"
  },
  {
    "text": "without creating any side effects or",
    "start": "320400",
    "end": "322360"
  },
  {
    "text": "impacting the underlying observable in",
    "start": "322360",
    "end": "324600"
  },
  {
    "text": "this example we're retrieving an object",
    "start": "324600",
    "end": "326360"
  },
  {
    "text": "observable from Firebase and then first",
    "start": "326360",
    "end": "328560"
  },
  {
    "text": "we're going to just console L it then",
    "start": "328560",
    "end": "331160"
  },
  {
    "text": "we're going to map it down to a string",
    "start": "331160",
    "end": "333160"
  },
  {
    "text": "and then we'll console log it once again",
    "start": "333160",
    "end": "334759"
  },
  {
    "text": "using the do operator so the do operator",
    "start": "334759",
    "end": "337080"
  },
  {
    "text": "basically allows you to throw in any",
    "start": "337080",
    "end": "338479"
  },
  {
    "text": "kind of debugging code you want within",
    "start": "338479",
    "end": "340080"
  },
  {
    "text": "your observable as you're mapping or",
    "start": "340080",
    "end": "341919"
  },
  {
    "text": "filtering it when we subscribe it will",
    "start": "341919",
    "end": "344280"
  },
  {
    "text": "trigger the code inside these do",
    "start": "344280",
    "end": "345759"
  },
  {
    "text": "operators in the app we can see we first",
    "start": "345759",
    "end": "347639"
  },
  {
    "text": "get a console logged object and then we",
    "start": "347639",
    "end": "350000"
  },
  {
    "text": "get that mapped down to an uppercase",
    "start": "350000",
    "end": "351759"
  },
  {
    "text": "string",
    "start": "351759",
    "end": "354319"
  },
  {
    "text": "afterwards that's it for angular",
    "start": "356440",
    "end": "358520"
  },
  {
    "text": "debugging if this video helped you",
    "start": "358520",
    "end": "360080"
  },
  {
    "text": "please like And subscribe and if you",
    "start": "360080",
    "end": "361840"
  },
  {
    "text": "want to support the channel consider",
    "start": "361840",
    "end": "363199"
  },
  {
    "text": "becoming a pro member at angular",
    "start": "363199",
    "end": "365000"
  },
  {
    "text": "firebase.com you'll get a free copy of",
    "start": "365000",
    "end": "367080"
  },
  {
    "text": "my book as well as one-on-one project",
    "start": "367080",
    "end": "368919"
  },
  {
    "text": "Consulting designed to help you get your",
    "start": "368919",
    "end": "370599"
  },
  {
    "text": "app shipped into production thanks for",
    "start": "370599",
    "end": "372840"
  },
  {
    "text": "watching and I'll see you soon",
    "start": "372840",
    "end": "376960"
  },
  {
    "text": "[Music]",
    "start": "378530",
    "end": "383559"
  }
]