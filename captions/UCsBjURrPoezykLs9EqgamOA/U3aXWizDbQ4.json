[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "C A statically typed procedural",
    "start": "120",
    "end": "2560"
  },
  {
    "text": "programming language famous for making",
    "start": "2560",
    "end": "4480"
  },
  {
    "text": "the world go around it's the language",
    "start": "4480",
    "end": "6480"
  },
  {
    "text": "behind many tools we take for granted",
    "start": "6480",
    "end": "8400"
  },
  {
    "text": "like the windows Linux and Mac operating",
    "start": "8400",
    "end": "10559"
  },
  {
    "text": "system kernels databases like MySQL",
    "start": "10559",
    "end": "13559"
  },
  {
    "text": "interpreters for languages like python",
    "start": "13559",
    "end": "15679"
  },
  {
    "text": "tools like vim and git and countless",
    "start": "15679",
    "end": "17880"
  },
  {
    "text": "others it was created in 1972 by Dennis",
    "start": "17880",
    "end": "20560"
  },
  {
    "start": "18000",
    "end": "33000"
  },
  {
    "text": "Richie at Bell Labs where it would be",
    "start": "20560",
    "end": "22560"
  },
  {
    "text": "used to develop the Unix operating",
    "start": "22560",
    "end": "24439"
  },
  {
    "text": "system it would go on to become the",
    "start": "24439",
    "end": "25920"
  },
  {
    "text": "mother of all languages inspiring the",
    "start": "25920",
    "end": "27840"
  },
  {
    "text": "syntax of C++ CP Java JavaScript Pearl",
    "start": "27840",
    "end": "31720"
  },
  {
    "text": "and PHP just to name a few it compiles",
    "start": "31720",
    "end": "34079"
  },
  {
    "start": "33000",
    "end": "49000"
  },
  {
    "text": "directly to machine code and requires",
    "start": "34079",
    "end": "35800"
  },
  {
    "text": "minimal runtime support but is platform",
    "start": "35800",
    "end": "38000"
  },
  {
    "text": "dependent meaning the executable is",
    "start": "38000",
    "end": "39879"
  },
  {
    "text": "designed to run on a specific operating",
    "start": "39879",
    "end": "42079"
  },
  {
    "text": "system it's a highlevel language",
    "start": "42079",
    "end": "43840"
  },
  {
    "text": "designed for humans yet provides",
    "start": "43840",
    "end": "45520"
  },
  {
    "text": "low-level control over memory and",
    "start": "45520",
    "end": "47320"
  },
  {
    "text": "Hardware there's no garbage collector",
    "start": "47320",
    "end": "49199"
  },
  {
    "start": "49000",
    "end": "67000"
  },
  {
    "text": "instead your code needs to manage its",
    "start": "49199",
    "end": "50840"
  },
  {
    "text": "own memory when you create a variable",
    "start": "50840",
    "end": "52600"
  },
  {
    "text": "it's assigned an address in memory you",
    "start": "52600",
    "end": "54520"
  },
  {
    "text": "can store that address in another",
    "start": "54520",
    "end": "56039"
  },
  {
    "text": "variable called a pointer when the",
    "start": "56039",
    "end": "57600"
  },
  {
    "text": "variable is no longer needed you'll need",
    "start": "57600",
    "end": "59239"
  },
  {
    "text": "to free it to avoid memory leaks to get",
    "start": "59239",
    "end": "61640"
  },
  {
    "text": "started install a c compiler a popular",
    "start": "61640",
    "end": "64198"
  },
  {
    "text": "choice is the g c compiler or GCC create",
    "start": "64199",
    "end": "67240"
  },
  {
    "text": "a file ending in. C include any",
    "start": "67240",
    "end": "69400"
  },
  {
    "text": "libraries you plan to use then add a",
    "start": "69400",
    "end": "71280"
  },
  {
    "text": "main function to it this is where your",
    "start": "71280",
    "end": "72960"
  },
  {
    "text": "program will start executing there's no",
    "start": "72960",
    "end": "74720"
  },
  {
    "text": "function keyword and notice how it",
    "start": "74720",
    "end": "76560"
  },
  {
    "text": "returns an integer type a return value",
    "start": "76560",
    "end": "78680"
  },
  {
    "text": "of zero means success while a return",
    "start": "78680",
    "end": "80680"
  },
  {
    "text": "value of one means failure there are",
    "start": "80680",
    "end": "82560"
  },
  {
    "text": "only a few basic types in C create a",
    "start": "82560",
    "end": "84560"
  },
  {
    "text": "variable by starting with a type",
    "start": "84560",
    "end": "86200"
  },
  {
    "text": "followed by a name and value use print F",
    "start": "86200",
    "end": "89040"
  },
  {
    "text": "to print the value to the standard",
    "start": "89040",
    "end": "90520"
  },
  {
    "text": "output or put an Amper standand in front",
    "start": "90520",
    "end": "92320"
  },
  {
    "text": "of it to reference its address in memory",
    "start": "92320",
    "end": "94560"
  },
  {
    "text": "there's no string type but instead Char",
    "start": "94560",
    "end": "96880"
  },
  {
    "text": "which represents a one by character",
    "start": "96880",
    "end": "98640"
  },
  {
    "text": "stored as an integer a string can be",
    "start": "98640",
    "end": "100799"
  },
  {
    "text": "created with an array of characters each",
    "start": "100799",
    "end": "102640"
  },
  {
    "text": "letter will have its own memory address",
    "start": "102640",
    "end": "104399"
  },
  {
    "text": "and be terminated by a null character",
    "start": "104399",
    "end": "106680"
  },
  {
    "text": "another approach is to start with a",
    "start": "106680",
    "end": "108280"
  },
  {
    "text": "pointer by adding a star character in",
    "start": "108280",
    "end": "110320"
  },
  {
    "text": "front of the type then we can allocate",
    "start": "110320",
    "end": "112079"
  },
  {
    "text": "four bytes to it now assign a character",
    "start": "112079",
    "end": "114439"
  },
  {
    "text": "to each index ending with the null",
    "start": "114439",
    "end": "116360"
  },
  {
    "text": "character to create a string when you no",
    "start": "116360",
    "end": "118079"
  },
  {
    "text": "longer need that memory allocated to",
    "start": "118079",
    "end": "119520"
  },
  {
    "text": "your program use free to release it back",
    "start": "119520",
    "end": "121880"
  },
  {
    "text": "to the computer's Ram the language is",
    "start": "121880",
    "end": "124079"
  },
  {
    "start": "123000",
    "end": "144000"
  },
  {
    "text": "procedural and does not support",
    "start": "124079",
    "end": "125719"
  },
  {
    "text": "objectoriented features although you can",
    "start": "125719",
    "end": "127640"
  },
  {
    "text": "create your own complex data types using",
    "start": "127640",
    "end": "129679"
  },
  {
    "text": "strs now compile your code to machine",
    "start": "129679",
    "end": "131720"
  },
  {
    "text": "instructions for your operating system",
    "start": "131720",
    "end": "133599"
  },
  {
    "text": "using the C compiler this has been the C",
    "start": "133599",
    "end": "135879"
  },
  {
    "text": "programming language in 100 seconds hit",
    "start": "135879",
    "end": "138080"
  },
  {
    "text": "the like button and subscribe if you",
    "start": "138080",
    "end": "139519"
  },
  {
    "text": "want to see more short videos like this",
    "start": "139519",
    "end": "141720"
  },
  {
    "text": "thanks for watching and I will see you",
    "start": "141720",
    "end": "143760"
  },
  {
    "text": "in the next one",
    "start": "143760",
    "end": "146599"
  }
]