[
  {
    "start": "0",
    "end": "121000"
  },
  {
    "text": "webrtc exchange real-time audio video",
    "start": "199",
    "end": "3360"
  },
  {
    "text": "streams with your friends",
    "start": "3360",
    "end": "4640"
  },
  {
    "text": "entirely in the browser i'm here live",
    "start": "4640",
    "end": "6720"
  },
  {
    "text": "that's not i'm not a cat",
    "start": "6720",
    "end": "8320"
  },
  {
    "text": "if you want to build your own video",
    "start": "8320",
    "end": "9760"
  },
  {
    "text": "conferencing app to capitalize on the",
    "start": "9760",
    "end": "11599"
  },
  {
    "text": "work from home boom",
    "start": "11599",
    "end": "12639"
  },
  {
    "text": "then webrtc is the api you're looking",
    "start": "12639",
    "end": "14960"
  },
  {
    "text": "for because it allows you to establish a",
    "start": "14960",
    "end": "17199"
  },
  {
    "text": "peer-to-peer connection between two or",
    "start": "17199",
    "end": "18960"
  },
  {
    "text": "more browsers",
    "start": "18960",
    "end": "19840"
  },
  {
    "text": "where they can exchange audio video",
    "start": "19840",
    "end": "21600"
  },
  {
    "text": "media directly without the need for a",
    "start": "21600",
    "end": "23519"
  },
  {
    "text": "third-party server or native app",
    "start": "23519",
    "end": "25279"
  },
  {
    "text": "it works like this the first pier will",
    "start": "25279",
    "end": "27359"
  },
  {
    "text": "create an offer",
    "start": "27359",
    "end": "28480"
  },
  {
    "text": "asking for another peer to connect to",
    "start": "28480",
    "end": "30240"
  },
  {
    "text": "them this will result",
    "start": "30240",
    "end": "31599"
  },
  {
    "text": "in an stp object or session description",
    "start": "31599",
    "end": "34239"
  },
  {
    "text": "protocol",
    "start": "34239",
    "end": "34880"
  },
  {
    "text": "which contains information describing",
    "start": "34880",
    "end": "36719"
  },
  {
    "text": "the peer-to-peer connection",
    "start": "36719",
    "end": "38000"
  },
  {
    "text": "like the video codec timing and so on",
    "start": "38000",
    "end": "40320"
  },
  {
    "text": "the data will then be saved in a server",
    "start": "40320",
    "end": "42399"
  },
  {
    "text": "where it can then be read by another",
    "start": "42399",
    "end": "44079"
  },
  {
    "text": "peer to answer the call which is",
    "start": "44079",
    "end": "45920"
  },
  {
    "text": "achieved by creating an stp answer",
    "start": "45920",
    "end": "48160"
  },
  {
    "text": "and writing that to the server this",
    "start": "48160",
    "end": "50000"
  },
  {
    "text": "process is known as",
    "start": "50000",
    "end": "51199"
  },
  {
    "text": "signaling and it's handled by a third",
    "start": "51199",
    "end": "53039"
  },
  {
    "text": "party server the signaling server allows",
    "start": "53039",
    "end": "55199"
  },
  {
    "text": "the two parties to securely exchange",
    "start": "55199",
    "end": "57199"
  },
  {
    "text": "connection data",
    "start": "57199",
    "end": "58160"
  },
  {
    "text": "but never touches the media that's",
    "start": "58160",
    "end": "59680"
  },
  {
    "text": "actually transmitted between the peers",
    "start": "59680",
    "end": "61600"
  },
  {
    "text": "but here's where things get tricky most",
    "start": "61600",
    "end": "63359"
  },
  {
    "text": "devices in the real world sit behind",
    "start": "63359",
    "end": "65198"
  },
  {
    "text": "firewalls",
    "start": "65199",
    "end": "65920"
  },
  {
    "text": "and ip addresses constantly change",
    "start": "65920",
    "end": "67920"
  },
  {
    "text": "thanks to network address translation",
    "start": "67920",
    "end": "70000"
  },
  {
    "text": "this makes peer-to-peer connection",
    "start": "70000",
    "end": "71360"
  },
  {
    "text": "complicated from a networking standpoint",
    "start": "71360",
    "end": "73520"
  },
  {
    "text": "but luckily there's a standard called",
    "start": "73520",
    "end": "75600"
  },
  {
    "text": "interactive connectivity establishment",
    "start": "75600",
    "end": "77840"
  },
  {
    "text": "or ice which helps clients coordinate",
    "start": "77840",
    "end": "80000"
  },
  {
    "text": "the discovery of their public-facing ip",
    "start": "80000",
    "end": "82400"
  },
  {
    "text": "addresses",
    "start": "82400",
    "end": "83200"
  },
  {
    "text": "now both peers will generate a list of",
    "start": "83200",
    "end": "85520"
  },
  {
    "text": "ice candidates",
    "start": "85520",
    "end": "86479"
  },
  {
    "text": "which contain an ip address and port",
    "start": "86479",
    "end": "88640"
  },
  {
    "text": "that pier 1 can use to connect to pier",
    "start": "88640",
    "end": "91200"
  },
  {
    "text": "2.",
    "start": "91200",
    "end": "91680"
  },
  {
    "text": "in the background webrtc will do this by",
    "start": "91680",
    "end": "94079"
  },
  {
    "text": "making a series of requests to a stun",
    "start": "94079",
    "end": "96320"
  },
  {
    "text": "server",
    "start": "96320",
    "end": "96880"
  },
  {
    "text": "a stun server is not something you need",
    "start": "96880",
    "end": "98479"
  },
  {
    "text": "to set up on your own because there are",
    "start": "98479",
    "end": "100079"
  },
  {
    "text": "many free options out there",
    "start": "100079",
    "end": "101520"
  },
  {
    "text": "from reliable sources like google each",
    "start": "101520",
    "end": "103840"
  },
  {
    "text": "peer will save their ice candidates in",
    "start": "103840",
    "end": "105600"
  },
  {
    "text": "the database where they can then be read",
    "start": "105600",
    "end": "107200"
  },
  {
    "text": "by the other peer",
    "start": "107200",
    "end": "108399"
  },
  {
    "text": "the algorithm will then automatically",
    "start": "108399",
    "end": "110079"
  },
  {
    "text": "determine which candidate is best",
    "start": "110079",
    "end": "112159"
  },
  {
    "text": "at which point real-time media can begin",
    "start": "112159",
    "end": "114240"
  },
  {
    "text": "flowing between the two peers",
    "start": "114240",
    "end": "115759"
  },
  {
    "text": "this has been webrtc in 100 seconds if",
    "start": "115759",
    "end": "118719"
  },
  {
    "text": "you want to see more short videos like",
    "start": "118719",
    "end": "120079"
  },
  {
    "text": "this",
    "start": "120079",
    "end": "120399"
  },
  {
    "text": "make sure to hit the like button then",
    "start": "120399",
    "end": "122079"
  },
  {
    "start": "121000",
    "end": "217000"
  },
  {
    "text": "stay tuned because now we're going to",
    "start": "122079",
    "end": "123600"
  },
  {
    "text": "build our own video chat app from",
    "start": "123600",
    "end": "125439"
  },
  {
    "text": "scratch",
    "start": "125439",
    "end": "126000"
  },
  {
    "text": "that may sound pretty complicated but",
    "start": "126000",
    "end": "127680"
  },
  {
    "text": "the webrtc api",
    "start": "127680",
    "end": "129280"
  },
  {
    "text": "allows all this stuff to magically",
    "start": "129280",
    "end": "130879"
  },
  {
    "text": "happen in the background over the next",
    "start": "130879",
    "end": "132400"
  },
  {
    "text": "few minutes you'll build a peer-to-peer",
    "start": "132400",
    "end": "134239"
  },
  {
    "text": "video calling app from scratch",
    "start": "134239",
    "end": "135920"
  },
  {
    "text": "using nothing but vanilla javascript and",
    "start": "135920",
    "end": "138080"
  },
  {
    "text": "firebase as the signalling server",
    "start": "138080",
    "end": "140080"
  },
  {
    "text": "by the end of this tutorial you'll know",
    "start": "140080",
    "end": "141680"
  },
  {
    "text": "how to implement real-time features that",
    "start": "141680",
    "end": "143760"
  },
  {
    "text": "cater to the needs of the new work from",
    "start": "143760",
    "end": "145520"
  },
  {
    "text": "home paradigm that we live in",
    "start": "145520",
    "end": "147040"
  },
  {
    "text": "in addition to this video you can also",
    "start": "147040",
    "end": "148720"
  },
  {
    "text": "reference the full article on fire ship",
    "start": "148720",
    "end": "150560"
  },
  {
    "text": "io",
    "start": "150560",
    "end": "151040"
  },
  {
    "text": "and the source code on github let's",
    "start": "151040",
    "end": "152800"
  },
  {
    "text": "start by taking a look at the demo",
    "start": "152800",
    "end": "154239"
  },
  {
    "text": "we have the local user's video feed on",
    "start": "154239",
    "end": "156080"
  },
  {
    "text": "the left side and the remote video",
    "start": "156080",
    "end": "158000"
  },
  {
    "text": "on the right side the local user will",
    "start": "158000",
    "end": "159840"
  },
  {
    "text": "first grant permission for the app to",
    "start": "159840",
    "end": "161840"
  },
  {
    "text": "access the webcam",
    "start": "161840",
    "end": "162959"
  },
  {
    "text": "that user can then create a call which",
    "start": "162959",
    "end": "164640"
  },
  {
    "text": "will write a document to firestore with",
    "start": "164640",
    "end": "167040"
  },
  {
    "text": "the offer details",
    "start": "167040",
    "end": "168480"
  },
  {
    "text": "at the same time we'll create a peer",
    "start": "168480",
    "end": "170400"
  },
  {
    "text": "connection instance in the browser",
    "start": "170400",
    "end": "172239"
  },
  {
    "text": "which handles the webrtc negotiation",
    "start": "172239",
    "end": "174640"
  },
  {
    "text": "process",
    "start": "174640",
    "end": "175280"
  },
  {
    "text": "the offer will have a unique id that can",
    "start": "175280",
    "end": "177280"
  },
  {
    "text": "then be accessed by another user",
    "start": "177280",
    "end": "179200"
  },
  {
    "text": "somewhere else in the world",
    "start": "179200",
    "end": "180560"
  },
  {
    "text": "that user will then join the call with",
    "start": "180560",
    "end": "182159"
  },
  {
    "text": "the unique id then establish their own",
    "start": "182159",
    "end": "184480"
  },
  {
    "text": "peer connection",
    "start": "184480",
    "end": "185440"
  },
  {
    "text": "and write the answer details to the same",
    "start": "185440",
    "end": "187680"
  },
  {
    "text": "document",
    "start": "187680",
    "end": "188480"
  },
  {
    "text": "then both peers will write their ice",
    "start": "188480",
    "end": "190159"
  },
  {
    "text": "candidates to the database we have one",
    "start": "190159",
    "end": "192000"
  },
  {
    "text": "sub-collection for offer candidates",
    "start": "192000",
    "end": "193920"
  },
  {
    "text": "and another for answer candidates this",
    "start": "193920",
    "end": "196239"
  },
  {
    "text": "data model will allow signaling to",
    "start": "196239",
    "end": "198080"
  },
  {
    "text": "take place between the two peers the",
    "start": "198080",
    "end": "200000"
  },
  {
    "text": "data itself looks like a bunch of",
    "start": "200000",
    "end": "201360"
  },
  {
    "text": "nonsense but what it contains is an ip",
    "start": "201360",
    "end": "203599"
  },
  {
    "text": "address port pair that allows the two",
    "start": "203599",
    "end": "205280"
  },
  {
    "text": "peers to establish a connection",
    "start": "205280",
    "end": "207120"
  },
  {
    "text": "now both users can listen to this data",
    "start": "207120",
    "end": "208959"
  },
  {
    "text": "in real time then use the web rtc api in",
    "start": "208959",
    "end": "211920"
  },
  {
    "text": "the browser to establish the connection",
    "start": "211920",
    "end": "214000"
  },
  {
    "text": "giving us a one-to-one video chat",
    "start": "214000",
    "end": "216000"
  },
  {
    "text": "feature and now we're ready to jump into",
    "start": "216000",
    "end": "218080"
  },
  {
    "start": "217000",
    "end": "274000"
  },
  {
    "text": "our javascript code i started by",
    "start": "218080",
    "end": "219680"
  },
  {
    "text": "creating a vanilla javascript project",
    "start": "219680",
    "end": "221599"
  },
  {
    "text": "using a tool called veet which is a very",
    "start": "221599",
    "end": "223840"
  },
  {
    "text": "simple build tool developed by the",
    "start": "223840",
    "end": "225280"
  },
  {
    "text": "vue.js guy",
    "start": "225280",
    "end": "226319"
  },
  {
    "text": "we can initialize a new project by",
    "start": "226319",
    "end": "228000"
  },
  {
    "text": "running npm init",
    "start": "228000",
    "end": "229360"
  },
  {
    "text": "vjs app from the command line basically",
    "start": "229360",
    "end": "232720"
  },
  {
    "text": "it gives us a web project where we can",
    "start": "232720",
    "end": "234400"
  },
  {
    "text": "install dependencies without having to",
    "start": "234400",
    "end": "236080"
  },
  {
    "text": "worry about things like webpack",
    "start": "236080",
    "end": "237519"
  },
  {
    "text": "after initializing the project we need",
    "start": "237519",
    "end": "239280"
  },
  {
    "text": "to install firebase",
    "start": "239280",
    "end": "240640"
  },
  {
    "text": "firebase contains the firestore database",
    "start": "240640",
    "end": "242560"
  },
  {
    "text": "which we can use as our backend",
    "start": "242560",
    "end": "244319"
  },
  {
    "text": "signaling server",
    "start": "244319",
    "end": "245200"
  },
  {
    "text": "firebase is an exceptional choice for a",
    "start": "245200",
    "end": "247040"
  },
  {
    "text": "signalling server because it's easy to",
    "start": "247040",
    "end": "248799"
  },
  {
    "text": "listen to updates to the database in",
    "start": "248799",
    "end": "250560"
  },
  {
    "text": "real time",
    "start": "250560",
    "end": "251200"
  },
  {
    "text": "if we were working with a traditional",
    "start": "251200",
    "end": "252480"
  },
  {
    "text": "database we'd likely have to implement",
    "start": "252480",
    "end": "254239"
  },
  {
    "text": "something like websockets to make that",
    "start": "254239",
    "end": "256000"
  },
  {
    "text": "possible and this video would be a crazy",
    "start": "256000",
    "end": "258239"
  },
  {
    "text": "20 minutes long or something",
    "start": "258239",
    "end": "259680"
  },
  {
    "text": "from the firebase console initialize",
    "start": "259680",
    "end": "261519"
  },
  {
    "text": "firestore in test mode",
    "start": "261519",
    "end": "263360"
  },
  {
    "text": "then create a web project from the",
    "start": "263360",
    "end": "265280"
  },
  {
    "text": "settings panel and grab your project",
    "start": "265280",
    "end": "267280"
  },
  {
    "text": "credentials",
    "start": "267280",
    "end": "268080"
  },
  {
    "text": "we can then go into the main.js file",
    "start": "268080",
    "end": "270240"
  },
  {
    "text": "import firebase",
    "start": "270240",
    "end": "271360"
  },
  {
    "text": "and initialize the app with our firebase",
    "start": "271360",
    "end": "273360"
  },
  {
    "text": "config now that we have firebase set up",
    "start": "273360",
    "end": "275280"
  },
  {
    "start": "274000",
    "end": "409000"
  },
  {
    "text": "we're going to initialize three pieces",
    "start": "275280",
    "end": "277360"
  },
  {
    "text": "of global state these are values you",
    "start": "277360",
    "end": "279360"
  },
  {
    "text": "would likely want to share between",
    "start": "279360",
    "end": "280720"
  },
  {
    "text": "multiple components if you're using a ui",
    "start": "280720",
    "end": "282880"
  },
  {
    "text": "framework like react or angular",
    "start": "282880",
    "end": "285040"
  },
  {
    "text": "the first and most important value is",
    "start": "285040",
    "end": "287040"
  },
  {
    "text": "the rtc peer connection",
    "start": "287040",
    "end": "289120"
  },
  {
    "text": "this object is where all the action",
    "start": "289120",
    "end": "290960"
  },
  {
    "text": "happens it emits a bunch of different",
    "start": "290960",
    "end": "292639"
  },
  {
    "text": "events that we can listen to",
    "start": "292639",
    "end": "294080"
  },
  {
    "text": "to update the database and to add media",
    "start": "294080",
    "end": "296320"
  },
  {
    "text": "streams to the connection itself",
    "start": "296320",
    "end": "298000"
  },
  {
    "text": "one very important thing it does is",
    "start": "298000",
    "end": "299680"
  },
  {
    "text": "generate the ice candidates",
    "start": "299680",
    "end": "301360"
  },
  {
    "text": "but in order to do that it needs to know",
    "start": "301360",
    "end": "303120"
  },
  {
    "text": "which stun servers to use",
    "start": "303120",
    "end": "304800"
  },
  {
    "text": "there are many different options out",
    "start": "304800",
    "end": "306080"
  },
  {
    "text": "there but we're just going to use the",
    "start": "306080",
    "end": "307600"
  },
  {
    "text": "free ones from google",
    "start": "307600",
    "end": "308880"
  },
  {
    "text": "from there we have values for local",
    "start": "308880",
    "end": "310560"
  },
  {
    "text": "stream and remote stream",
    "start": "310560",
    "end": "312080"
  },
  {
    "text": "which are the video streams from the",
    "start": "312080",
    "end": "313840"
  },
  {
    "text": "webcams of each user",
    "start": "313840",
    "end": "315520"
  },
  {
    "text": "now because we're working with vanilla",
    "start": "315520",
    "end": "316800"
  },
  {
    "text": "js we need to use imperative dom apis",
    "start": "316800",
    "end": "319520"
  },
  {
    "text": "we're using document git element by id",
    "start": "319520",
    "end": "322080"
  },
  {
    "text": "to grab a bunch of elements from the",
    "start": "322080",
    "end": "323600"
  },
  {
    "text": "html",
    "start": "323600",
    "end": "324560"
  },
  {
    "text": "like video elements to show the actual",
    "start": "324560",
    "end": "326880"
  },
  {
    "text": "video feeds",
    "start": "326880",
    "end": "327759"
  },
  {
    "text": "along with buttons that provide",
    "start": "327759",
    "end": "328960"
  },
  {
    "text": "different interaction in the ui the",
    "start": "328960",
    "end": "330800"
  },
  {
    "text": "first thing the user will do is click a",
    "start": "330800",
    "end": "332639"
  },
  {
    "text": "button",
    "start": "332639",
    "end": "333280"
  },
  {
    "text": "to open up their webcam we'll go ahead",
    "start": "333280",
    "end": "335520"
  },
  {
    "text": "and register an event handler for the",
    "start": "335520",
    "end": "337280"
  },
  {
    "text": "click event on the webcam button",
    "start": "337280",
    "end": "339440"
  },
  {
    "text": "obtaining a stream from the user's",
    "start": "339440",
    "end": "340880"
  },
  {
    "text": "webcam is very easy we just await",
    "start": "340880",
    "end": "343360"
  },
  {
    "text": "the navigator media devices get user",
    "start": "343360",
    "end": "346160"
  },
  {
    "text": "media method",
    "start": "346160",
    "end": "347199"
  },
  {
    "text": "and we'll set video and audio to true",
    "start": "347199",
    "end": "349600"
  },
  {
    "text": "that'll bring up a dialog in the browser",
    "start": "349600",
    "end": "351680"
  },
  {
    "text": "asking the user for permission to access",
    "start": "351680",
    "end": "353840"
  },
  {
    "text": "the webcam when that's complete",
    "start": "353840",
    "end": "355520"
  },
  {
    "text": "the promise will resolve to a media",
    "start": "355520",
    "end": "357360"
  },
  {
    "text": "stream object once we have access to the",
    "start": "357360",
    "end": "359440"
  },
  {
    "text": "webcam",
    "start": "359440",
    "end": "360080"
  },
  {
    "text": "we can also go ahead and set up the",
    "start": "360080",
    "end": "361759"
  },
  {
    "text": "remote stream here",
    "start": "361759",
    "end": "363199"
  },
  {
    "text": "which itself will just be an empty media",
    "start": "363199",
    "end": "365199"
  },
  {
    "text": "stream now from here we need to take our",
    "start": "365199",
    "end": "367520"
  },
  {
    "text": "two streams",
    "start": "367520",
    "end": "368319"
  },
  {
    "text": "and make them available on the peer",
    "start": "368319",
    "end": "369840"
  },
  {
    "text": "connection and show them on",
    "start": "369840",
    "end": "371680"
  },
  {
    "text": "video elements in the dom the local",
    "start": "371680",
    "end": "373680"
  },
  {
    "text": "stream is already running here in the",
    "start": "373680",
    "end": "375360"
  },
  {
    "text": "browser",
    "start": "375360",
    "end": "376000"
  },
  {
    "text": "so we can get its tracks and then loop",
    "start": "376000",
    "end": "378080"
  },
  {
    "text": "over them and for each track",
    "start": "378080",
    "end": "380080"
  },
  {
    "text": "we'll call peer connection ad track with",
    "start": "380080",
    "end": "382560"
  },
  {
    "text": "that track and the local stream",
    "start": "382560",
    "end": "384319"
  },
  {
    "text": "now the remote stream is currently empty",
    "start": "384319",
    "end": "386319"
  },
  {
    "text": "and it will be updated by the peer",
    "start": "386319",
    "end": "387919"
  },
  {
    "text": "connection itself",
    "start": "387919",
    "end": "388960"
  },
  {
    "text": "so what we can do is listen to the on",
    "start": "388960",
    "end": "391120"
  },
  {
    "text": "track event on the pure connection",
    "start": "391120",
    "end": "393039"
  },
  {
    "text": "then get the tracks from the stream loop",
    "start": "393039",
    "end": "395120"
  },
  {
    "text": "over them and add them to the remote",
    "start": "395120",
    "end": "397440"
  },
  {
    "text": "stream when they come in",
    "start": "397440",
    "end": "398639"
  },
  {
    "text": "now the final step for managing our",
    "start": "398639",
    "end": "400240"
  },
  {
    "text": "streams is to apply them to video",
    "start": "400240",
    "end": "402400"
  },
  {
    "text": "elements in the dom we can do that by",
    "start": "402400",
    "end": "404080"
  },
  {
    "text": "simply calling the video element source",
    "start": "404080",
    "end": "406240"
  },
  {
    "text": "object",
    "start": "406240",
    "end": "406800"
  },
  {
    "text": "and setting it equal to the stream at",
    "start": "406800",
    "end": "409360"
  },
  {
    "start": "409000",
    "end": "585000"
  },
  {
    "text": "this point we have a way to manage a",
    "start": "409360",
    "end": "411039"
  },
  {
    "text": "local and remote stream through the peer",
    "start": "411039",
    "end": "412880"
  },
  {
    "text": "connection",
    "start": "412880",
    "end": "413520"
  },
  {
    "text": "but in order to make that happen we need",
    "start": "413520",
    "end": "415280"
  },
  {
    "text": "to do some signaling with firestore",
    "start": "415280",
    "end": "417199"
  },
  {
    "text": "the user who starts a call is the one",
    "start": "417199",
    "end": "419039"
  },
  {
    "text": "who makes an offer we have a call button",
    "start": "419039",
    "end": "421199"
  },
  {
    "text": "in the dom to",
    "start": "421199",
    "end": "422000"
  },
  {
    "text": "handle that functionality inside this",
    "start": "422000",
    "end": "423840"
  },
  {
    "text": "async function here",
    "start": "423840",
    "end": "425120"
  },
  {
    "text": "we have a call document which is used to",
    "start": "425120",
    "end": "427039"
  },
  {
    "text": "manage the answer and offer from both",
    "start": "427039",
    "end": "429039"
  },
  {
    "text": "users",
    "start": "429039",
    "end": "430000"
  },
  {
    "text": "then we have offer candidates and answer",
    "start": "430000",
    "end": "432080"
  },
  {
    "text": "candidates which are sub collections",
    "start": "432080",
    "end": "434000"
  },
  {
    "text": "under that document",
    "start": "434000",
    "end": "435039"
  },
  {
    "text": "that contain all the candidates for each",
    "start": "435039",
    "end": "437039"
  },
  {
    "text": "of those users",
    "start": "437039",
    "end": "438400"
  },
  {
    "text": "when we reference a document without an",
    "start": "438400",
    "end": "440000"
  },
  {
    "text": "id firebase will automatically generate",
    "start": "440000",
    "end": "442400"
  },
  {
    "text": "a random id for",
    "start": "442400",
    "end": "443599"
  },
  {
    "text": "us so we'll go ahead and use that to",
    "start": "443599",
    "end": "445280"
  },
  {
    "text": "populate an input in the ui",
    "start": "445280",
    "end": "447360"
  },
  {
    "text": "which can then be used in another",
    "start": "447360",
    "end": "448800"
  },
  {
    "text": "browser tab or by another user somewhere",
    "start": "448800",
    "end": "450960"
  },
  {
    "text": "else in the world to answer the call",
    "start": "450960",
    "end": "453199"
  },
  {
    "text": "now we're ready to create an offer and",
    "start": "453199",
    "end": "455039"
  },
  {
    "text": "save it to the database",
    "start": "455039",
    "end": "456400"
  },
  {
    "text": "the first thing we'll do is await the",
    "start": "456400",
    "end": "459080"
  },
  {
    "text": "peerconnectioncreateoffer method",
    "start": "459080",
    "end": "460800"
  },
  {
    "text": "which will return us with an offer",
    "start": "460800",
    "end": "462479"
  },
  {
    "text": "description we'll then set it as the",
    "start": "462479",
    "end": "464240"
  },
  {
    "text": "local description on the peer connection",
    "start": "464240",
    "end": "466400"
  },
  {
    "text": "most importantly this object contains an",
    "start": "466400",
    "end": "468560"
  },
  {
    "text": "sdp value",
    "start": "468560",
    "end": "469680"
  },
  {
    "text": "which stands for session description",
    "start": "469680",
    "end": "471520"
  },
  {
    "text": "protocol that's the value we want to",
    "start": "471520",
    "end": "473520"
  },
  {
    "text": "save to the database so we'll go ahead",
    "start": "473520",
    "end": "475280"
  },
  {
    "text": "and convert it to a plain",
    "start": "475280",
    "end": "476879"
  },
  {
    "text": "javascript object then write it to the",
    "start": "476879",
    "end": "478960"
  },
  {
    "text": "database by calling await",
    "start": "478960",
    "end": "480800"
  },
  {
    "text": "call document set with that data now",
    "start": "480800",
    "end": "483440"
  },
  {
    "text": "what's inside the sdp",
    "start": "483440",
    "end": "484720"
  },
  {
    "text": "object isn't really important but it",
    "start": "484720",
    "end": "486400"
  },
  {
    "text": "contains information about the video",
    "start": "486400",
    "end": "488240"
  },
  {
    "text": "codec",
    "start": "488240",
    "end": "488720"
  },
  {
    "text": "along with a bunch of other stuff to",
    "start": "488720",
    "end": "490319"
  },
  {
    "text": "negotiate the connection now one really",
    "start": "490319",
    "end": "492560"
  },
  {
    "text": "important thing to point out here",
    "start": "492560",
    "end": "493840"
  },
  {
    "text": "is that when we called set local",
    "start": "493840",
    "end": "495599"
  },
  {
    "text": "description it automatically started",
    "start": "495599",
    "end": "497759"
  },
  {
    "text": "generating the ice candidates",
    "start": "497759",
    "end": "499440"
  },
  {
    "text": "an ice candidate contains a potential ip",
    "start": "499440",
    "end": "502000"
  },
  {
    "text": "address and port pair",
    "start": "502000",
    "end": "503520"
  },
  {
    "text": "that can be used to establish the actual",
    "start": "503520",
    "end": "505440"
  },
  {
    "text": "peer-to-peer connection",
    "start": "505440",
    "end": "506720"
  },
  {
    "text": "we need to be listening to the ice",
    "start": "506720",
    "end": "508080"
  },
  {
    "text": "candidates so it's important that we",
    "start": "508080",
    "end": "509599"
  },
  {
    "text": "have a listener established before we",
    "start": "509599",
    "end": "511520"
  },
  {
    "text": "make that call",
    "start": "511520",
    "end": "512479"
  },
  {
    "text": "that listens to the on ice candidate",
    "start": "512479",
    "end": "514560"
  },
  {
    "text": "event when the event is fired we'll make",
    "start": "514560",
    "end": "516479"
  },
  {
    "text": "sure that a candidate",
    "start": "516479",
    "end": "517360"
  },
  {
    "text": "exists then write the data as json to",
    "start": "517360",
    "end": "520159"
  },
  {
    "text": "the offer candidates collection",
    "start": "520159",
    "end": "521919"
  },
  {
    "text": "so at this point as the caller making",
    "start": "521919",
    "end": "523919"
  },
  {
    "text": "the offer we are saving all of our data",
    "start": "523919",
    "end": "526160"
  },
  {
    "text": "to the database",
    "start": "526160",
    "end": "527279"
  },
  {
    "text": "but now we need to also be listening for",
    "start": "527279",
    "end": "529360"
  },
  {
    "text": "the answer from the user on the other",
    "start": "529360",
    "end": "531279"
  },
  {
    "text": "end",
    "start": "531279",
    "end": "531760"
  },
  {
    "text": "the way we do that is by listening to",
    "start": "531760",
    "end": "533600"
  },
  {
    "text": "changes to the called document in",
    "start": "533600",
    "end": "535360"
  },
  {
    "text": "firestore",
    "start": "535360",
    "end": "536240"
  },
  {
    "text": "the on snapshot method will fire a",
    "start": "536240",
    "end": "538080"
  },
  {
    "text": "callback anytime the document in the",
    "start": "538080",
    "end": "540000"
  },
  {
    "text": "database changes",
    "start": "540000",
    "end": "541200"
  },
  {
    "text": "if our peer connection doesn't have a",
    "start": "541200",
    "end": "542880"
  },
  {
    "text": "current remote description",
    "start": "542880",
    "end": "544240"
  },
  {
    "text": "and the data has an answer then we'll go",
    "start": "544240",
    "end": "546640"
  },
  {
    "text": "ahead and set an",
    "start": "546640",
    "end": "548000"
  },
  {
    "text": "answer description on our peer",
    "start": "548000",
    "end": "550000"
  },
  {
    "text": "connection here locally",
    "start": "550000",
    "end": "551519"
  },
  {
    "text": "in other words we're listening to our",
    "start": "551519",
    "end": "552959"
  },
  {
    "text": "database for an answer and when that",
    "start": "552959",
    "end": "554880"
  },
  {
    "text": "answer is received we update it on our",
    "start": "554880",
    "end": "556800"
  },
  {
    "text": "peer connection",
    "start": "556800",
    "end": "558080"
  },
  {
    "text": "that negotiates the initial connection",
    "start": "558080",
    "end": "560080"
  },
  {
    "text": "but we also need to listen for ice",
    "start": "560080",
    "end": "561680"
  },
  {
    "text": "candidates from the answering user we do",
    "start": "561680",
    "end": "563760"
  },
  {
    "text": "that by listening to",
    "start": "563760",
    "end": "564959"
  },
  {
    "text": "updates to the answer candidates",
    "start": "564959",
    "end": "566640"
  },
  {
    "text": "collection firestore has a cool little",
    "start": "566640",
    "end": "568640"
  },
  {
    "text": "feature where you can listen to",
    "start": "568640",
    "end": "570320"
  },
  {
    "text": "only the documents that have been added",
    "start": "570320",
    "end": "572240"
  },
  {
    "text": "to the collection which is handled with",
    "start": "572240",
    "end": "574000"
  },
  {
    "text": "the doc changes method on the query",
    "start": "574000",
    "end": "576160"
  },
  {
    "text": "so every time we have a new document",
    "start": "576160",
    "end": "578000"
  },
  {
    "text": "added we can then create a new ice",
    "start": "578000",
    "end": "580480"
  },
  {
    "text": "candidate with the document data",
    "start": "580480",
    "end": "582640"
  },
  {
    "text": "and then add that candidate to our peer",
    "start": "582640",
    "end": "584800"
  },
  {
    "text": "connection",
    "start": "584800",
    "end": "585680"
  },
  {
    "start": "585000",
    "end": "679000"
  },
  {
    "text": "at this point we're listening to updates",
    "start": "585680",
    "end": "587360"
  },
  {
    "text": "from the answer side but we still need",
    "start": "587360",
    "end": "589279"
  },
  {
    "text": "to give the answer and user a way to",
    "start": "589279",
    "end": "591440"
  },
  {
    "text": "actually answer the call answering a",
    "start": "591440",
    "end": "593360"
  },
  {
    "text": "call is very similar to initiating a",
    "start": "593360",
    "end": "595279"
  },
  {
    "text": "call",
    "start": "595279",
    "end": "595680"
  },
  {
    "text": "the main difference is that we're going",
    "start": "595680",
    "end": "597279"
  },
  {
    "text": "to listen to a document in firestore",
    "start": "597279",
    "end": "599519"
  },
  {
    "text": "with the same document id that was",
    "start": "599519",
    "end": "601279"
  },
  {
    "text": "created by the caller we'll make a",
    "start": "601279",
    "end": "602880"
  },
  {
    "text": "reference to that document",
    "start": "602880",
    "end": "604240"
  },
  {
    "text": "as well as the answer candidates",
    "start": "604240",
    "end": "605839"
  },
  {
    "text": "collection then listen to the ice",
    "start": "605839",
    "end": "607920"
  },
  {
    "text": "candidate event on the peer connection",
    "start": "607920",
    "end": "610000"
  },
  {
    "text": "to update the answer candidates",
    "start": "610000",
    "end": "612079"
  },
  {
    "text": "collection whenever a new candidate",
    "start": "612079",
    "end": "614079"
  },
  {
    "text": "is generated from there we can fetch the",
    "start": "614079",
    "end": "616560"
  },
  {
    "text": "call document from the database",
    "start": "616560",
    "end": "618160"
  },
  {
    "text": "and grab its data it contains the offer",
    "start": "618160",
    "end": "620480"
  },
  {
    "text": "data which we can use to set",
    "start": "620480",
    "end": "622480"
  },
  {
    "text": "a remote description on the peer",
    "start": "622480",
    "end": "624560"
  },
  {
    "text": "connection after that",
    "start": "624560",
    "end": "626160"
  },
  {
    "text": "we can then generate an answer locally",
    "start": "626160",
    "end": "628320"
  },
  {
    "text": "then set the local description as the",
    "start": "628320",
    "end": "630160"
  },
  {
    "text": "answer",
    "start": "630160",
    "end": "630959"
  },
  {
    "text": "now just like we did with the offer in",
    "start": "630959",
    "end": "632640"
  },
  {
    "text": "the previous function we'll set it up as",
    "start": "632640",
    "end": "634720"
  },
  {
    "text": "a plain object",
    "start": "634720",
    "end": "636079"
  },
  {
    "text": "and then update it on the call document",
    "start": "636079",
    "end": "638320"
  },
  {
    "text": "so that the other user can listen to the",
    "start": "638320",
    "end": "640160"
  },
  {
    "text": "answer",
    "start": "640160",
    "end": "640880"
  },
  {
    "text": "in addition we'll set up a listener on",
    "start": "640880",
    "end": "642800"
  },
  {
    "text": "the offer candidates collection",
    "start": "642800",
    "end": "644560"
  },
  {
    "text": "and whenever a new ice candidate is",
    "start": "644560",
    "end": "646800"
  },
  {
    "text": "added to that collection",
    "start": "646800",
    "end": "648000"
  },
  {
    "text": "then we'll go ahead and create an ice",
    "start": "648000",
    "end": "649920"
  },
  {
    "text": "candidate here locally",
    "start": "649920",
    "end": "651279"
  },
  {
    "text": "and that's all it takes to build a video",
    "start": "651279",
    "end": "653120"
  },
  {
    "text": "chat feature with webrtc",
    "start": "653120",
    "end": "655040"
  },
  {
    "text": "the vast majority of the work is just",
    "start": "655040",
    "end": "656880"
  },
  {
    "text": "signaling data between the two users",
    "start": "656880",
    "end": "659040"
  },
  {
    "text": "webrtc handles all the complicated",
    "start": "659040",
    "end": "661279"
  },
  {
    "text": "peer-to-peer networking and media",
    "start": "661279",
    "end": "662959"
  },
  {
    "text": "streaming under the hood",
    "start": "662959",
    "end": "664240"
  },
  {
    "text": "i'm going to go ahead and wrap things up",
    "start": "664240",
    "end": "665519"
  },
  {
    "text": "there if this video helped you please",
    "start": "665519",
    "end": "667120"
  },
  {
    "text": "like and subscribe",
    "start": "667120",
    "end": "668079"
  },
  {
    "text": "and if you want to learn more advanced",
    "start": "668079",
    "end": "669279"
  },
  {
    "text": "concepts about the web and firebase",
    "start": "669279",
    "end": "671440"
  },
  {
    "text": "consider becoming a pro member at",
    "start": "671440",
    "end": "673120"
  },
  {
    "text": "fireshipio",
    "start": "673120",
    "end": "674320"
  },
  {
    "text": "thanks for watching and i will see you",
    "start": "674320",
    "end": "676160"
  },
  {
    "text": "in the next one",
    "start": "676160",
    "end": "680000"
  }
]