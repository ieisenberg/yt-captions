[
  {
    "start": "0",
    "end": "127000"
  },
  {
    "text": "today will take over 140,000 data points",
    "start": "2480",
    "end": "5910"
  },
  {
    "text": "of people being killed or injured by",
    "start": "5910",
    "end": "7259"
  },
  {
    "text": "guns and visualize them with deck GL and",
    "start": "7259",
    "end": "9960"
  },
  {
    "text": "Google Maps we can go from a heat map of",
    "start": "9960",
    "end": "11790"
  },
  {
    "text": "the entire country down to the actual",
    "start": "11790",
    "end": "13620"
  },
  {
    "text": "street view of a neighborhood where the",
    "start": "13620",
    "end": "15210"
  },
  {
    "text": "[ __ ] went down we'll start by adding a",
    "start": "15210",
    "end": "17039"
  },
  {
    "text": "scatter plot layer for every single",
    "start": "17039",
    "end": "18750"
  },
  {
    "text": "point in the data set then we'll add a",
    "start": "18750",
    "end": "20430"
  },
  {
    "text": "tool tip to see how many people were",
    "start": "20430",
    "end": "22109"
  },
  {
    "text": "injured or killed at a given incident",
    "start": "22109",
    "end": "23640"
  },
  {
    "text": "and we'll cluster points together into a",
    "start": "23640",
    "end": "25830"
  },
  {
    "text": "heat map based on the map zoom level",
    "start": "25830",
    "end": "28050"
  },
  {
    "text": "lastly we'll cluster points into a",
    "start": "28050",
    "end": "30090"
  },
  {
    "text": "hexagon with a one-mile radius and",
    "start": "30090",
    "end": "32008"
  },
  {
    "text": "extrude them into a 3d shape where the",
    "start": "32009",
    "end": "34170"
  },
  {
    "text": "elevation represents the amount of",
    "start": "34170",
    "end": "35670"
  },
  {
    "text": "violence in that space we can do all of",
    "start": "35670",
    "end": "37860"
  },
  {
    "text": "this data visualization efficiently",
    "start": "37860",
    "end": "39450"
  },
  {
    "text": "thanks to a library called deck GL it",
    "start": "39450",
    "end": "41760"
  },
  {
    "text": "was created by uber to visualize their",
    "start": "41760",
    "end": "43590"
  },
  {
    "text": "own data and is able to run computations",
    "start": "43590",
    "end": "45719"
  },
  {
    "text": "efficiently by offloading them to the",
    "start": "45719",
    "end": "47489"
  },
  {
    "text": "GPU with WebGL take a look at their",
    "start": "47489",
    "end": "56219"
  },
  {
    "text": "showcase for some awesome examples of",
    "start": "56219",
    "end": "58140"
  },
  {
    "text": "companies using this technology in",
    "start": "58140",
    "end": "59760"
  },
  {
    "text": "production I think my favorite is escape",
    "start": "59760",
    "end": "61800"
  },
  {
    "text": "it uses the deck GL arc layer to",
    "start": "61800",
    "end": "63750"
  },
  {
    "text": "visualize the cheapest flights based on",
    "start": "63750",
    "end": "65460"
  },
  {
    "text": "your location around the world now I",
    "start": "65460",
    "end": "67229"
  },
  {
    "text": "realize that guns are a hot political",
    "start": "67229",
    "end": "68850"
  },
  {
    "text": "issue in the United States",
    "start": "68850",
    "end": "70380"
  },
  {
    "text": "so I've tried to make this visual as",
    "start": "70380",
    "end": "72090"
  },
  {
    "text": "neutral as possible the data comes from",
    "start": "72090",
    "end": "74220"
  },
  {
    "text": "the gun violence archive from the years",
    "start": "74220",
    "end": "75810"
  },
  {
    "text": "2013 to 2018 on the live demo you can",
    "start": "75810",
    "end": "79350"
  },
  {
    "text": "filter by defensive u suicide and so on",
    "start": "79350",
    "end": "81750"
  },
  {
    "text": "to get a better picture of how the data",
    "start": "81750",
    "end": "83520"
  },
  {
    "text": "is distributed before we get started",
    "start": "83520",
    "end": "85290"
  },
  {
    "text": "let's talk you a little bit more about",
    "start": "85290",
    "end": "86580"
  },
  {
    "text": "how Dec GL works you can think of it as",
    "start": "86580",
    "end": "88530"
  },
  {
    "text": "a layer or multiple layers that sit on",
    "start": "88530",
    "end": "90689"
  },
  {
    "text": "top of your google map when the user",
    "start": "90689",
    "end": "92610"
  },
  {
    "text": "pans around or zooms in and out the",
    "start": "92610",
    "end": "94560"
  },
  {
    "text": "overlay will stick to the map and an",
    "start": "94560",
    "end": "96689"
  },
  {
    "text": "awesome thing about this is that the",
    "start": "96689",
    "end": "98159"
  },
  {
    "text": "layers can be composited in other words",
    "start": "98159",
    "end": "100049"
  },
  {
    "text": "you can set layers on top of each other",
    "start": "100049",
    "end": "101700"
  },
  {
    "text": "add some transparency and Dec GL will",
    "start": "101700",
    "end": "104280"
  },
  {
    "text": "calculate the composite colors that are",
    "start": "104280",
    "end": "105990"
  },
  {
    "text": "actually rendered on the screen and that",
    "start": "105990",
    "end": "107759"
  },
  {
    "text": "can give you some amazing 3d visuals on",
    "start": "107759",
    "end": "109560"
  },
  {
    "text": "top of a two-dimensional map the actual",
    "start": "109560",
    "end": "111750"
  },
  {
    "text": "JavaScript library itself follows the",
    "start": "111750",
    "end": "113549"
  },
  {
    "text": "reactive programming paradigm so it's",
    "start": "113549",
    "end": "115470"
  },
  {
    "text": "very simple and familiar to most",
    "start": "115470",
    "end": "117119"
  },
  {
    "text": "front-end developers all you really need",
    "start": "117119",
    "end": "119070"
  },
  {
    "text": "is a good data set a Google Maps API key",
    "start": "119070",
    "end": "121320"
  },
  {
    "text": "a few lines of JavaScript and you'll be",
    "start": "121320",
    "end": "123180"
  },
  {
    "text": "up and running with interactive 3d",
    "start": "123180",
    "end": "124770"
  },
  {
    "text": "visuals on top of your map the first",
    "start": "124770",
    "end": "127170"
  },
  {
    "start": "127000",
    "end": "148000"
  },
  {
    "text": "thing you'll need to get started is a",
    "start": "127170",
    "end": "128640"
  },
  {
    "text": "Google Maps API to create a new project",
    "start": "128640",
    "end": "130709"
  },
  {
    "text": "or use the existing project on the",
    "start": "130709",
    "end": "132720"
  },
  {
    "text": "Google",
    "start": "132720",
    "end": "133110"
  },
  {
    "text": "platform console from there go to the",
    "start": "133110",
    "end": "135060"
  },
  {
    "text": "API screen you'll find the Google Maps",
    "start": "135060",
    "end": "137100"
  },
  {
    "text": "JavaScript API enable it and then go to",
    "start": "137100",
    "end": "139740"
  },
  {
    "text": "the credentials tab and grab your",
    "start": "139740",
    "end": "141630"
  },
  {
    "text": "browser API key just make a note of the",
    "start": "141630",
    "end": "144360"
  },
  {
    "text": "API key for now we'll need it in a",
    "start": "144360",
    "end": "146010"
  },
  {
    "text": "minute or so when we get into the code",
    "start": "146010",
    "end": "147410"
  },
  {
    "text": "you can use deck GL in any framework but",
    "start": "147410",
    "end": "150090"
  },
  {
    "start": "148000",
    "end": "310000"
  },
  {
    "text": "it provides additional support for react",
    "start": "150090",
    "end": "151680"
  },
  {
    "text": "in this video I'm going to use vanilla",
    "start": "151680",
    "end": "153990"
  },
  {
    "text": "JavaScript with webpack and we'll set it",
    "start": "153990",
    "end": "156030"
  },
  {
    "text": "up with hot module replacement for a",
    "start": "156030",
    "end": "157740"
  },
  {
    "text": "nice developer experience go ahead and",
    "start": "157740",
    "end": "159810"
  },
  {
    "text": "open up vs code and keep in mind you can",
    "start": "159810",
    "end": "161760"
  },
  {
    "text": "find all of these steps in this lesson",
    "start": "161760",
    "end": "163650"
  },
  {
    "text": "on fire ship io first to run npm init",
    "start": "163650",
    "end": "166350"
  },
  {
    "text": "with the why flag to set up a new NPM",
    "start": "166350",
    "end": "168690"
  },
  {
    "text": "project then we'll install web pack and",
    "start": "168690",
    "end": "170970"
  },
  {
    "text": "web pack dev server into the development",
    "start": "170970",
    "end": "173100"
  },
  {
    "text": "environment from there I'll open up the",
    "start": "173100",
    "end": "175080"
  },
  {
    "text": "package JSON and I'm going to add a",
    "start": "175080",
    "end": "177000"
  },
  {
    "text": "couple of scripts that we can use to",
    "start": "177000",
    "end": "178680"
  },
  {
    "text": "build and serve the app the build",
    "start": "178680",
    "end": "180600"
  },
  {
    "text": "command runs web pack and outputs",
    "start": "180600",
    "end": "182400"
  },
  {
    "text": "everything into the public folder which",
    "start": "182400",
    "end": "184110"
  },
  {
    "text": "is where we'll actually put our",
    "start": "184110",
    "end": "185580"
  },
  {
    "text": "production code then the start command",
    "start": "185580",
    "end": "187650"
  },
  {
    "text": "will use webpack dev server to serve",
    "start": "187650",
    "end": "189420"
  },
  {
    "text": "that code locally on localhost 8080 and",
    "start": "189420",
    "end": "191820"
  },
  {
    "text": "it will also perform hot module",
    "start": "191820",
    "end": "193709"
  },
  {
    "text": "replacement whenever our source code",
    "start": "193709",
    "end": "195270"
  },
  {
    "text": "changes the next thing we'll do is",
    "start": "195270",
    "end": "197280"
  },
  {
    "text": "install deck GL it's organized in a mono",
    "start": "197280",
    "end": "199890"
  },
  {
    "text": "repo so there's different packages that",
    "start": "199890",
    "end": "201870"
  },
  {
    "text": "you may or may not need we're going to",
    "start": "201870",
    "end": "203430"
  },
  {
    "text": "need the Google Maps package layers and",
    "start": "203430",
    "end": "205560"
  },
  {
    "text": "aggregation layers the next thing we'll",
    "start": "205560",
    "end": "207600"
  },
  {
    "text": "do is create a file for our JavaScript",
    "start": "207600",
    "end": "209519"
  },
  {
    "text": "source code in the source directory and",
    "start": "209519",
    "end": "211500"
  },
  {
    "text": "a little vs code pro tip here is to",
    "start": "211500",
    "end": "213810"
  },
  {
    "text": "create that file with a slash and it",
    "start": "213810",
    "end": "215640"
  },
  {
    "text": "will automatically create the directory",
    "start": "215640",
    "end": "217140"
  },
  {
    "text": "structure for you and then we'll do the",
    "start": "217140",
    "end": "219090"
  },
  {
    "text": "same thing for the public HTML file then",
    "start": "219090",
    "end": "222360"
  },
  {
    "text": "inside this HTML we'll just start with a",
    "start": "222360",
    "end": "224280"
  },
  {
    "text": "plain HTML document and we'll make a",
    "start": "224280",
    "end": "226500"
  },
  {
    "text": "reference to the main J's file which is",
    "start": "226500",
    "end": "228780"
  },
  {
    "text": "where web pack will build our source",
    "start": "228780",
    "end": "230310"
  },
  {
    "text": "code after that we'll add a deferred",
    "start": "230310",
    "end": "232530"
  },
  {
    "text": "script tag for the Google Maps",
    "start": "232530",
    "end": "234090"
  },
  {
    "text": "JavaScript API this script has two",
    "start": "234090",
    "end": "236580"
  },
  {
    "text": "required parameters the first one is the",
    "start": "236580",
    "end": "238739"
  },
  {
    "text": "API key which is the browser API key",
    "start": "238739",
    "end": "240959"
  },
  {
    "text": "that you got from the Google cloud",
    "start": "240959",
    "end": "242340"
  },
  {
    "text": "platform console and the callback is the",
    "start": "242340",
    "end": "244709"
  },
  {
    "text": "name of a function defined on the window",
    "start": "244709",
    "end": "246420"
  },
  {
    "text": "that initializes the map with whatever",
    "start": "246420",
    "end": "248430"
  },
  {
    "text": "options you want to pass to it will",
    "start": "248430",
    "end": "250530"
  },
  {
    "text": "define that one in just a minute in our",
    "start": "250530",
    "end": "251970"
  },
  {
    "text": "JavaScript code then the last thing we",
    "start": "251970",
    "end": "254100"
  },
  {
    "text": "want to do is go into the body of the",
    "start": "254100",
    "end": "255750"
  },
  {
    "text": "HTML and add a div with an ID of map",
    "start": "255750",
    "end": "258450"
  },
  {
    "text": "this div will be replaced by the actual",
    "start": "258450",
    "end": "260549"
  },
  {
    "text": "Google map and in our case we want to",
    "start": "260549",
    "end": "262260"
  },
  {
    "text": "display a full-screen map so we'll use",
    "start": "262260",
    "end": "264270"
  },
  {
    "text": "some CSS to set the width and height to",
    "start": "264270",
    "end": "266520"
  },
  {
    "text": "100",
    "start": "266520",
    "end": "266970"
  },
  {
    "text": "percent of the viewport now we'll go",
    "start": "266970",
    "end": "269040"
  },
  {
    "text": "ahead and open up our javascript file",
    "start": "269040",
    "end": "270420"
  },
  {
    "text": "and we'll want to define a function on",
    "start": "270420",
    "end": "272460"
  },
  {
    "text": "the window object this is the callback",
    "start": "272460",
    "end": "274320"
  },
  {
    "text": "that we set on the Google Maps script",
    "start": "274320",
    "end": "276090"
  },
  {
    "text": "tag the first argument is the actual div",
    "start": "276090",
    "end": "278550"
  },
  {
    "text": "that will be replaced by the map so",
    "start": "278550",
    "end": "280170"
  },
  {
    "text": "we'll go ahead and get that by its ID",
    "start": "280170",
    "end": "281430"
  },
  {
    "text": "and then you can add a bunch of",
    "start": "281430",
    "end": "282960"
  },
  {
    "text": "additional options here depending on how",
    "start": "282960",
    "end": "284520"
  },
  {
    "text": "you want to customize your app in fact",
    "start": "284520",
    "end": "286500"
  },
  {
    "text": "Google provides a wizard that helps you",
    "start": "286500",
    "end": "288750"
  },
  {
    "text": "quickly customize the appearance of your",
    "start": "288750",
    "end": "290430"
  },
  {
    "text": "map that's how I created the dark map",
    "start": "290430",
    "end": "292110"
  },
  {
    "text": "that you see in the demo so now that we",
    "start": "292110",
    "end": "294300"
  },
  {
    "text": "have this init map function on the",
    "start": "294300",
    "end": "295770"
  },
  {
    "text": "window we can run NPM start to tell web",
    "start": "295770",
    "end": "298230"
  },
  {
    "text": "pack to build our code that will also",
    "start": "298230",
    "end": "300240"
  },
  {
    "text": "spin up a server on localhost 8080 so if",
    "start": "300240",
    "end": "302730"
  },
  {
    "text": "you navigate there you should see the",
    "start": "302730",
    "end": "304380"
  },
  {
    "text": "default map at this point and your code",
    "start": "304380",
    "end": "306420"
  },
  {
    "text": "should rebuild anytime you update and",
    "start": "306420",
    "end": "308280"
  },
  {
    "text": "save the index.jsp",
    "start": "308280",
    "end": "309750"
  },
  {
    "text": "now that we have this initial set up out",
    "start": "309750",
    "end": "311880"
  },
  {
    "start": "310000",
    "end": "674000"
  },
  {
    "text": "of the way we need to get some actual",
    "start": "311880",
    "end": "313590"
  },
  {
    "text": "data to display on the map now this can",
    "start": "313590",
    "end": "316380"
  },
  {
    "text": "be very easy or very difficult depending",
    "start": "316380",
    "end": "318300"
  },
  {
    "text": "on the data you're working with if you",
    "start": "318300",
    "end": "320430"
  },
  {
    "text": "want to go the easy route you can simply",
    "start": "320430",
    "end": "321960"
  },
  {
    "text": "grab the JSON data that lives on my web",
    "start": "321960",
    "end": "323940"
  },
  {
    "text": "server but since you're a developer I'm",
    "start": "323940",
    "end": "326130"
  },
  {
    "text": "assuming you want to use your own custom",
    "start": "326130",
    "end": "327660"
  },
  {
    "text": "data a great place to find free data",
    "start": "327660",
    "end": "329640"
  },
  {
    "text": "that's already well formatted is from",
    "start": "329640",
    "end": "331230"
  },
  {
    "text": "Kaggle datasets but in most cases this",
    "start": "331230",
    "end": "333870"
  },
  {
    "text": "data is going to be in CSV format an",
    "start": "333870",
    "end": "336060"
  },
  {
    "text": "easy way to convert this data to the",
    "start": "336060",
    "end": "337919"
  },
  {
    "text": "proper format is to use the node package",
    "start": "337919",
    "end": "339990"
  },
  {
    "text": "convert csv to json from there create a",
    "start": "339990",
    "end": "343080"
  },
  {
    "text": "file called convert GIS and the root of",
    "start": "343080",
    "end": "345150"
  },
  {
    "text": "your project then inside the script we",
    "start": "345150",
    "end": "347340"
  },
  {
    "text": "can create a very simple node script",
    "start": "347340",
    "end": "348960"
  },
  {
    "text": "that has an input in CSV format and then",
    "start": "348960",
    "end": "351300"
  },
  {
    "text": "an output and JSON now we can just run",
    "start": "351300",
    "end": "353640"
  },
  {
    "text": "that script from the command line and",
    "start": "353640",
    "end": "354960"
  },
  {
    "text": "we've magically converted our custom",
    "start": "354960",
    "end": "356580"
  },
  {
    "text": "dataset into JSON format that we can use",
    "start": "356580",
    "end": "359010"
  },
  {
    "text": "with deck GL your data should be an",
    "start": "359010",
    "end": "361350"
  },
  {
    "text": "array of JSON objects so in our case it",
    "start": "361350",
    "end": "363870"
  },
  {
    "text": "looks like this the property names on",
    "start": "363870",
    "end": "365970"
  },
  {
    "text": "this object can be anything you want so",
    "start": "365970",
    "end": "367979"
  },
  {
    "text": "you don't really need to format your",
    "start": "367979",
    "end": "369210"
  },
  {
    "text": "data in any special way because as",
    "start": "369210",
    "end": "371310"
  },
  {
    "text": "you'll see in the code we tell Dec GL",
    "start": "371310",
    "end": "372870"
  },
  {
    "text": "exactly how to access this data let's",
    "start": "372870",
    "end": "375270"
  },
  {
    "text": "move into our index j s file and we'll",
    "start": "375270",
    "end": "377280"
  },
  {
    "text": "import Google Maps overlay as well as",
    "start": "377280",
    "end": "379140"
  },
  {
    "text": "the layers that we want to display from",
    "start": "379140",
    "end": "380790"
  },
  {
    "text": "deck GL now like I said earlier deck GL",
    "start": "380790",
    "end": "383130"
  },
  {
    "text": "uses a reactive programming paradigm so",
    "start": "383130",
    "end": "385260"
  },
  {
    "text": "I like to create my layers inside of a",
    "start": "385260",
    "end": "387390"
  },
  {
    "text": "function anytime your map or data",
    "start": "387390",
    "end": "389520"
  },
  {
    "text": "changes you tell Dec GL to rebuild the",
    "start": "389520",
    "end": "391800"
  },
  {
    "text": "entire map under the hood it's looking",
    "start": "391800",
    "end": "393720"
  },
  {
    "text": "at the diff to update things efficiently",
    "start": "393720",
    "end": "395400"
  },
  {
    "text": "very similar to react J s it can do that",
    "start": "395400",
    "end": "398039"
  },
  {
    "text": "because every layer is required to have",
    "start": "398039",
    "end": "399900"
  },
  {
    "text": "a unique",
    "start": "399900",
    "end": "400620"
  },
  {
    "text": "and Dec GL uses that to track the",
    "start": "400620",
    "end": "402870"
  },
  {
    "text": "changes for that specific layer the next",
    "start": "402870",
    "end": "404970"
  },
  {
    "text": "option that you'll need to pass is the",
    "start": "404970",
    "end": "406530"
  },
  {
    "text": "data so in our case this will just be",
    "start": "406530",
    "end": "408360"
  },
  {
    "text": "the path to the local JSON file but this",
    "start": "408360",
    "end": "410580"
  },
  {
    "text": "could also be a remote URL or a promise",
    "start": "410580",
    "end": "412800"
  },
  {
    "text": "that resolves to the JSON object now",
    "start": "412800",
    "end": "415470"
  },
  {
    "text": "every layer has a variety of optional",
    "start": "415470",
    "end": "417300"
  },
  {
    "text": "parameters that you can pass to",
    "start": "417300",
    "end": "418530"
  },
  {
    "text": "customize the way the points are",
    "start": "418530",
    "end": "420120"
  },
  {
    "text": "displayed",
    "start": "420120",
    "end": "420720"
  },
  {
    "text": "things like opacity and pixel radius are",
    "start": "420720",
    "end": "423030"
  },
  {
    "text": "pretty self-explanatory",
    "start": "423030",
    "end": "423750"
  },
  {
    "text": "now for every point in the data set Dec",
    "start": "423750",
    "end": "426389"
  },
  {
    "text": "GL is going to call the function that",
    "start": "426389",
    "end": "428220"
  },
  {
    "text": "you pass to get position so get position",
    "start": "428220",
    "end": "430950"
  },
  {
    "text": "is very similar to a for each loop where",
    "start": "430950",
    "end": "433229"
  },
  {
    "text": "D represents an individual object in the",
    "start": "433229",
    "end": "435720"
  },
  {
    "text": "data set the function needs to return an",
    "start": "435720",
    "end": "437700"
  },
  {
    "text": "array of the longitude point and the",
    "start": "437700",
    "end": "439650"
  },
  {
    "text": "latitude point in that order it's not",
    "start": "439650",
    "end": "441780"
  },
  {
    "text": "latitude longitude like you might see in",
    "start": "441780",
    "end": "443610"
  },
  {
    "text": "other map programs it's the more",
    "start": "443610",
    "end": "445410"
  },
  {
    "text": "mathematically correct format of X Y you",
    "start": "445410",
    "end": "448110"
  },
  {
    "text": "can also use functions to compute other",
    "start": "448110",
    "end": "449790"
  },
  {
    "text": "properties like the actual fill color on",
    "start": "449790",
    "end": "452010"
  },
  {
    "text": "the scatterplot in this case I'm looking",
    "start": "452010",
    "end": "453900"
  },
  {
    "text": "at if the number of people killed in",
    "start": "453900",
    "end": "455669"
  },
  {
    "text": "this incident is greater than zero in",
    "start": "455669",
    "end": "457410"
  },
  {
    "text": "which case I'll make the dot red",
    "start": "457410",
    "end": "458729"
  },
  {
    "text": "otherwise I'll make it orange which",
    "start": "458729",
    "end": "460320"
  },
  {
    "text": "means that there are only injuries and",
    "start": "460320",
    "end": "461970"
  },
  {
    "text": "that's all it takes to define a scatter",
    "start": "461970",
    "end": "464280"
  },
  {
    "text": "plot layer from there I'm going to jump",
    "start": "464280",
    "end": "466289"
  },
  {
    "text": "down into the anit map function that we",
    "start": "466289",
    "end": "468240"
  },
  {
    "text": "wrote earlier we'll define a variable",
    "start": "468240",
    "end": "470220"
  },
  {
    "text": "called overlay that's equal to a Google",
    "start": "470220",
    "end": "472440"
  },
  {
    "text": "Maps overlay instance and it takes an",
    "start": "472440",
    "end": "474330"
  },
  {
    "text": "array of layers that will be stacked on",
    "start": "474330",
    "end": "475800"
  },
  {
    "text": "top of each other so we'll go ahead and",
    "start": "475800",
    "end": "477450"
  },
  {
    "text": "add our scatter plot function there then",
    "start": "477450",
    "end": "479580"
  },
  {
    "text": "the final step is to add overlay set map",
    "start": "479580",
    "end": "481919"
  },
  {
    "text": "with the actual Google Maps instance so",
    "start": "481919",
    "end": "484560"
  },
  {
    "text": "that's how we initialize a map for the",
    "start": "484560",
    "end": "485910"
  },
  {
    "text": "first time if you're running updates on",
    "start": "485910",
    "end": "487800"
  },
  {
    "text": "a map you would call set props with any",
    "start": "487800",
    "end": "489840"
  },
  {
    "text": "subsequent updates to the same map I",
    "start": "489840",
    "end": "491789"
  },
  {
    "text": "just wanted to point that out but we're",
    "start": "491789",
    "end": "493710"
  },
  {
    "text": "actually not going to use it in this",
    "start": "493710",
    "end": "495090"
  },
  {
    "text": "simplified demo from here if you open",
    "start": "495090",
    "end": "496889"
  },
  {
    "text": "the browser you should see all the",
    "start": "496889",
    "end": "498270"
  },
  {
    "text": "points plotted on the map but I'd like",
    "start": "498270",
    "end": "500430"
  },
  {
    "text": "to make these a little more interactive",
    "start": "500430",
    "end": "501870"
  },
  {
    "text": "by adding a tooltip when the user hovers",
    "start": "501870",
    "end": "503820"
  },
  {
    "text": "over an individual point we can do that",
    "start": "503820",
    "end": "506340"
  },
  {
    "text": "by setting the pickable option to true",
    "start": "506340",
    "end": "508410"
  },
  {
    "text": "on the scatter plot layer and then from",
    "start": "508410",
    "end": "510510"
  },
  {
    "text": "there we'll define a function that runs",
    "start": "510510",
    "end": "512700"
  },
  {
    "text": "on the on hover event this will give us",
    "start": "512700",
    "end": "515010"
  },
  {
    "text": "access to the actual data object that",
    "start": "515010",
    "end": "516870"
  },
  {
    "text": "represents that point and then also it's",
    "start": "516870",
    "end": "518820"
  },
  {
    "text": "XY coordinates we'll grab an element",
    "start": "518820",
    "end": "521339"
  },
  {
    "text": "from the Dom called tooltip and then if",
    "start": "521339",
    "end": "523229"
  },
  {
    "text": "an object exists we'll go ahead and",
    "start": "523229",
    "end": "524760"
  },
  {
    "text": "insert some HTML into that tooltip based",
    "start": "524760",
    "end": "527130"
  },
  {
    "text": "on the actual data object and if an",
    "start": "527130",
    "end": "529230"
  },
  {
    "text": "object does not exist",
    "start": "529230",
    "end": "530490"
  },
  {
    "text": "we'll simply hide the tooltip by setting",
    "start": "530490",
    "end": "532290"
  },
  {
    "text": "its opacity to zero",
    "start": "532290",
    "end": "533970"
  },
  {
    "text": "and you can also handle click events so",
    "start": "533970",
    "end": "535740"
  },
  {
    "text": "if the user clicks on a given point we",
    "start": "535740",
    "end": "537449"
  },
  {
    "text": "can take them to the actual instant",
    "start": "537449",
    "end": "538980"
  },
  {
    "text": "report on gun violence archive now I",
    "start": "538980",
    "end": "541410"
  },
  {
    "text": "problem with the map currently is that",
    "start": "541410",
    "end": "543000"
  },
  {
    "text": "it's kind of hard to visualize a hundred",
    "start": "543000",
    "end": "544649"
  },
  {
    "text": "and forty thousand points all at once",
    "start": "544649",
    "end": "546360"
  },
  {
    "text": "fortunately Dec GL has aggregation",
    "start": "546360",
    "end": "548759"
  },
  {
    "text": "layers that will cluster the points into",
    "start": "548759",
    "end": "550829"
  },
  {
    "text": "meaningful shapes this time let's go",
    "start": "550829",
    "end": "553050"
  },
  {
    "text": "ahead and create a function that returns",
    "start": "553050",
    "end": "554220"
  },
  {
    "text": "a heat map layer this function uses the",
    "start": "554220",
    "end": "556500"
  },
  {
    "text": "same getter for position and we also",
    "start": "556500",
    "end": "558540"
  },
  {
    "text": "have the option to calculate the weight",
    "start": "558540",
    "end": "560160"
  },
  {
    "text": "for each point by default every data",
    "start": "560160",
    "end": "562500"
  },
  {
    "text": "point has a weight of 1 but we want to",
    "start": "562500",
    "end": "564870"
  },
  {
    "text": "weight the data points based on how",
    "start": "564870",
    "end": "566339"
  },
  {
    "text": "violent the incident was so we'll go",
    "start": "566339",
    "end": "568350"
  },
  {
    "text": "ahead and take the number of people",
    "start": "568350",
    "end": "569730"
  },
  {
    "text": "killed in that incident and then add it",
    "start": "569730",
    "end": "571529"
  },
  {
    "text": "to the number of people injured times",
    "start": "571529",
    "end": "573300"
  },
  {
    "text": "0.5 so you get the most points for",
    "start": "573300",
    "end": "575790"
  },
  {
    "text": "killing people but you also get bonus",
    "start": "575790",
    "end": "577259"
  },
  {
    "text": "points for injuring people as well we'll",
    "start": "577259",
    "end": "579509"
  },
  {
    "text": "go ahead and set the pixel radius to 60",
    "start": "579509",
    "end": "581339"
  },
  {
    "text": "and then we could also customize colors",
    "start": "581339",
    "end": "582990"
  },
  {
    "text": "here as well but we'll just go ahead and",
    "start": "582990",
    "end": "584399"
  },
  {
    "text": "skip that for now and lastly we'll come",
    "start": "584399",
    "end": "586529"
  },
  {
    "text": "down here and add the heat map to our",
    "start": "586529",
    "end": "588329"
  },
  {
    "text": "layers you can see I've switched the map",
    "start": "588329",
    "end": "590759"
  },
  {
    "text": "to dark mode to see things a little bit",
    "start": "590759",
    "end": "592439"
  },
  {
    "text": "better and you'll notice we get",
    "start": "592439",
    "end": "594120"
  },
  {
    "text": "different clustering patterns based on",
    "start": "594120",
    "end": "595769"
  },
  {
    "text": "the zoom level of the map if we zoom in",
    "start": "595769",
    "end": "598079"
  },
  {
    "text": "all the way we'll start to see the",
    "start": "598079",
    "end": "599459"
  },
  {
    "text": "individual instance that make up the",
    "start": "599459",
    "end": "601259"
  },
  {
    "text": "larger clusters the heat map is useful",
    "start": "601259",
    "end": "603809"
  },
  {
    "text": "but we may want to cluster our points",
    "start": "603809",
    "end": "605550"
  },
  {
    "text": "based on a specific boundary and a great",
    "start": "605550",
    "end": "607920"
  },
  {
    "text": "way to do that is with the hexagon layer",
    "start": "607920",
    "end": "609660"
  },
  {
    "text": "this allows us to cluster points into a",
    "start": "609660",
    "end": "611879"
  },
  {
    "text": "specific radius and then increase its",
    "start": "611879",
    "end": "613769"
  },
  {
    "text": "elevation in the third dimension based",
    "start": "613769",
    "end": "615839"
  },
  {
    "text": "on how violent that area is we can do",
    "start": "615839",
    "end": "618480"
  },
  {
    "text": "that by defining a getter for the",
    "start": "618480",
    "end": "620069"
  },
  {
    "text": "elevation weight using the same logic",
    "start": "620069",
    "end": "621750"
  },
  {
    "text": "that we used in the previous example we",
    "start": "621750",
    "end": "624209"
  },
  {
    "text": "can customize the appearance with a",
    "start": "624209",
    "end": "625470"
  },
  {
    "text": "variety of different parameters and you",
    "start": "625470",
    "end": "627029"
  },
  {
    "text": "can even use your own algorithm to",
    "start": "627029",
    "end": "629040"
  },
  {
    "text": "control how the points are clustered",
    "start": "629040",
    "end": "630360"
  },
  {
    "text": "into the hexagons go ahead and add",
    "start": "630360",
    "end": "632490"
  },
  {
    "text": "hexagons to the layers and you'll now",
    "start": "632490",
    "end": "634439"
  },
  {
    "text": "see that we get these extruded shapes on",
    "start": "634439",
    "end": "636269"
  },
  {
    "text": "the map we can look at the elevation of",
    "start": "636269",
    "end": "638220"
  },
  {
    "text": "the hexagons to determine how violent",
    "start": "638220",
    "end": "640199"
  },
  {
    "text": "that neighborhood is and the color of",
    "start": "640199",
    "end": "642300"
  },
  {
    "text": "the hexagon becomes more red as the",
    "start": "642300",
    "end": "644129"
  },
  {
    "text": "violence increases now we've barely only",
    "start": "644129",
    "end": "646379"
  },
  {
    "text": "scratched the surface on what's possible",
    "start": "646379",
    "end": "648059"
  },
  {
    "text": "with Dec GL if you need high-performance",
    "start": "648059",
    "end": "650189"
  },
  {
    "text": "data visualization on a large dataset",
    "start": "650189",
    "end": "652050"
  },
  {
    "text": "it's definitely worth checking out I'm",
    "start": "652050",
    "end": "653970"
  },
  {
    "text": "gonna go ahead and wrap things up there",
    "start": "653970",
    "end": "655199"
  },
  {
    "text": "if this video helped you please like and",
    "start": "655199",
    "end": "656850"
  },
  {
    "text": "subscribe and consider becoming a pro",
    "start": "656850",
    "end": "658740"
  },
  {
    "text": "member at fire ship IO for access to",
    "start": "658740",
    "end": "660870"
  },
  {
    "text": "even more content thanks for watching",
    "start": "660870",
    "end": "663059"
  },
  {
    "text": "and I will talk to you soon",
    "start": "663059",
    "end": "666470"
  },
  {
    "text": "[Music]",
    "start": "668010",
    "end": "671070"
  },
  {
    "text": "[Music]",
    "start": "674220",
    "end": "676498"
  }
]