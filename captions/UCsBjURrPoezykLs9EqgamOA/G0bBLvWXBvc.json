[
  {
    "text": "welcome to my first ever angular",
    "start": "30",
    "end": "1650"
  },
  {
    "text": "tutorial for beginners if you've learned",
    "start": "1650",
    "end": "3659"
  },
  {
    "text": "a little bit about JavaScript HTML and",
    "start": "3659",
    "end": "5730"
  },
  {
    "text": "CSS the next step is to make the world a",
    "start": "5730",
    "end": "8040"
  },
  {
    "text": "better place by building an app that",
    "start": "8040",
    "end": "9630"
  },
  {
    "text": "people can use today we'll build a",
    "start": "9630",
    "end": "11460"
  },
  {
    "text": "tic-tac-toe game from scratch deploy it",
    "start": "11460",
    "end": "13469"
  },
  {
    "text": "and make it installable on desktop and",
    "start": "13469",
    "end": "15420"
  },
  {
    "text": "mobile applications as a PWM and despite",
    "start": "15420",
    "end": "18510"
  },
  {
    "text": "angular's reputation as an",
    "start": "18510",
    "end": "19740"
  },
  {
    "text": "enterprise-grade framework you might be",
    "start": "19740",
    "end": "21420"
  },
  {
    "text": "very surprised at how easy it is to",
    "start": "21420",
    "end": "23130"
  },
  {
    "text": "start being productive with angular even",
    "start": "23130",
    "end": "24840"
  },
  {
    "text": "as a beginner and you'll especially love",
    "start": "24840",
    "end": "26519"
  },
  {
    "text": "it when you start building complex",
    "start": "26519",
    "end": "27840"
  },
  {
    "text": "products in real life if you're new here",
    "start": "27840",
    "end": "29820"
  },
  {
    "text": "like and subscribe and if you want to",
    "start": "29820",
    "end": "31380"
  },
  {
    "text": "get really deep into angular check out",
    "start": "31380",
    "end": "33180"
  },
  {
    "text": "my new angular course on fire ship IO",
    "start": "33180",
    "end": "35130"
  },
  {
    "text": "first of all what is angular because the",
    "start": "35130",
    "end": "37860"
  },
  {
    "text": "word angular refers to so many different",
    "start": "37860",
    "end": "39510"
  },
  {
    "text": "things it's a declarative UI framework a",
    "start": "39510",
    "end": "41820"
  },
  {
    "text": "code bundler a tool for building",
    "start": "41820",
    "end": "43440"
  },
  {
    "text": "progressive web apps",
    "start": "43440",
    "end": "44579"
  },
  {
    "text": "it handles server-side rendering",
    "start": "44579",
    "end": "45870"
  },
  {
    "text": "provides libraries for forms testing",
    "start": "45870",
    "end": "47789"
  },
  {
    "text": "animation and so much more and it's all",
    "start": "47789",
    "end": "50219"
  },
  {
    "text": "wrapped up in a highly performant",
    "start": "50219",
    "end": "51600"
  },
  {
    "text": "package that will help reduce decision",
    "start": "51600",
    "end": "53430"
  },
  {
    "text": "fatigue web developers especially have a",
    "start": "53430",
    "end": "55440"
  },
  {
    "text": "huge number of open-source libraries to",
    "start": "55440",
    "end": "57239"
  },
  {
    "text": "choose from when building a product and",
    "start": "57239",
    "end": "59010"
  },
  {
    "text": "the status quo is always changing wait a",
    "start": "59010",
    "end": "61140"
  },
  {
    "text": "minute angular ships with a ton of",
    "start": "61140",
    "end": "70470"
  },
  {
    "text": "features out of the box many of which",
    "start": "70470",
    "end": "72150"
  },
  {
    "text": "anticipate the complexity that you'll",
    "start": "72150",
    "end": "73920"
  },
  {
    "text": "face as your app grows but almost all of",
    "start": "73920",
    "end": "76110"
  },
  {
    "text": "its features are optional and can be",
    "start": "76110",
    "end": "77670"
  },
  {
    "text": "adopted as needed so what does angular",
    "start": "77670",
    "end": "79920"
  },
  {
    "text": "really do at its core then the short",
    "start": "79920",
    "end": "81720"
  },
  {
    "text": "answer is that it helps you build",
    "start": "81720",
    "end": "83009"
  },
  {
    "text": "complex cross-platform applications",
    "start": "83009",
    "end": "85229"
  },
  {
    "text": "using web technology like JavaScript",
    "start": "85229",
    "end": "87780"
  },
  {
    "text": "HTML and CSS but I think the best way to",
    "start": "87780",
    "end": "90509"
  },
  {
    "text": "answer that question is to just show you",
    "start": "90509",
    "end": "92220"
  },
  {
    "text": "by building something from scratch so",
    "start": "92220",
    "end": "94380"
  },
  {
    "text": "over the next 15 minutes or so we'll",
    "start": "94380",
    "end": "96150"
  },
  {
    "text": "build a tic-tac-toe game we'll add a",
    "start": "96150",
    "end": "97860"
  },
  {
    "text": "design system to it we'll make it a",
    "start": "97860",
    "end": "99600"
  },
  {
    "text": "progressive web app we'll deploy it and",
    "start": "99600",
    "end": "101460"
  },
  {
    "text": "finally install it on our local system",
    "start": "101460",
    "end": "103110"
  },
  {
    "text": "as if it were a native desktop or mobile",
    "start": "103110",
    "end": "105090"
  },
  {
    "text": "app that might sound like a lot to do in",
    "start": "105090",
    "end": "107189"
  },
  {
    "text": "15 minutes",
    "start": "107189",
    "end": "107939"
  },
  {
    "text": "but don't worry we have a superpower",
    "start": "107939",
    "end": "109530"
  },
  {
    "text": "known as the angular command-line",
    "start": "109530",
    "end": "111329"
  },
  {
    "text": "interface and this is not your typical",
    "start": "111329",
    "end": "113189"
  },
  {
    "text": "CLI this thing is really powerful",
    "start": "113189",
    "end": "115470"
  },
  {
    "text": "because of angular's conventions we can",
    "start": "115470",
    "end": "117329"
  },
  {
    "text": "generate a lot of code automatically at",
    "start": "117329",
    "end": "119430"
  },
  {
    "text": "this point I'm assuming you have no js'",
    "start": "119430",
    "end": "121469"
  },
  {
    "text": "installed on your system and will run",
    "start": "121469",
    "end": "123329"
  },
  {
    "text": "npm install global at angular CLI this",
    "start": "123329",
    "end": "127259"
  },
  {
    "text": "will give you access to the ng command",
    "start": "127259",
    "end": "129149"
  },
  {
    "text": "in your terminal and the first thing",
    "start": "129149",
    "end": "130860"
  },
  {
    "text": "we'll want to do is generate a new",
    "start": "130860",
    "end": "132510"
  },
  {
    "text": "angular app we can do that by running ng",
    "start": "132510",
    "end": "134819"
  },
  {
    "text": "new with the name of the app and it will",
    "start": "134819",
    "end": "137010"
  },
  {
    "text": "ask us if we want to add routing we'll",
    "start": "137010",
    "end": "138810"
  },
  {
    "text": "go ahead and say yes and we'll choose",
    "start": "138810",
    "end": "140370"
  },
  {
    "text": "SCSS for our styles and then we'll go",
    "start": "140370",
    "end": "143040"
  },
  {
    "text": "ahead and open up our app in vs code",
    "start": "143040",
    "end": "144810"
  },
  {
    "text": "there's a couple of extensions you'll",
    "start": "144810",
    "end": "146730"
  },
  {
    "text": "want to have first is the angular",
    "start": "146730",
    "end": "148230"
  },
  {
    "text": "language service which will give you",
    "start": "148230",
    "end": "149730"
  },
  {
    "text": "syntax highlighting in your HTML",
    "start": "149730",
    "end": "151230"
  },
  {
    "text": "templates and then I'm also installing",
    "start": "151230",
    "end": "153569"
  },
  {
    "text": "the angular console which is a tool that",
    "start": "153569",
    "end": "155489"
  },
  {
    "text": "allows us to simply point and click on",
    "start": "155489",
    "end": "157470"
  },
  {
    "text": "CLI commands as opposed to typing them",
    "start": "157470",
    "end": "159780"
  },
  {
    "text": "out manually in the terminal go ahead",
    "start": "159780",
    "end": "161700"
  },
  {
    "text": "and find the serve command then hit run",
    "start": "161700",
    "end": "163769"
  },
  {
    "text": "what happens is that our code is now",
    "start": "163769",
    "end": "165569"
  },
  {
    "text": "bundled with web pack using live reload",
    "start": "165569",
    "end": "167610"
  },
  {
    "text": "so every time we make a change to our",
    "start": "167610",
    "end": "169560"
  },
  {
    "text": "code it will be reflected in the browser",
    "start": "169560",
    "end": "171540"
  },
  {
    "text": "and you can see that on localhost 4200",
    "start": "171540",
    "end": "174269"
  },
  {
    "text": "now if you're new to web development you",
    "start": "174269",
    "end": "176280"
  },
  {
    "text": "may have not experienced this yet but",
    "start": "176280",
    "end": "177959"
  },
  {
    "text": "one of the most painful aspects of the",
    "start": "177959",
    "end": "179550"
  },
  {
    "text": "job it can be bundling your code when",
    "start": "179550",
    "end": "181709"
  },
  {
    "text": "building a web application you need to",
    "start": "181709",
    "end": "183629"
  },
  {
    "text": "target multiple browsers and on top of",
    "start": "183629",
    "end": "185849"
  },
  {
    "text": "that you want to keep the JavaScript",
    "start": "185849",
    "end": "187530"
  },
  {
    "text": "bundle size as small as possible doing",
    "start": "187530",
    "end": "189720"
  },
  {
    "text": "this from scratch in a complex",
    "start": "189720",
    "end": "190950"
  },
  {
    "text": "application is a major pain but not with",
    "start": "190950",
    "end": "193500"
  },
  {
    "text": "angular click the build command and see",
    "start": "193500",
    "end": "195569"
  },
  {
    "text": "what happens",
    "start": "195569",
    "end": "196170"
  },
  {
    "text": "angular will automatically minify and",
    "start": "196170",
    "end": "197940"
  },
  {
    "text": "bundle your code and will also generate",
    "start": "197940",
    "end": "200010"
  },
  {
    "text": "multiple bundles for a differential",
    "start": "200010",
    "end": "201989"
  },
  {
    "text": "loading this means the browser will",
    "start": "201989",
    "end": "203970"
  },
  {
    "text": "always load the smallest javascript",
    "start": "203970",
    "end": "205680"
  },
  {
    "text": "bundle possible based on the features",
    "start": "205680",
    "end": "207450"
  },
  {
    "text": "available in that browser and we can see",
    "start": "207450",
    "end": "209790"
  },
  {
    "text": "all that raw JavaScript code by going",
    "start": "209790",
    "end": "211709"
  },
  {
    "text": "into the dist folder and this is the",
    "start": "211709",
    "end": "213629"
  },
  {
    "text": "folder that we would actually deploy to",
    "start": "213629",
    "end": "215280"
  },
  {
    "text": "a production hosting account or server",
    "start": "215280",
    "end": "217140"
  },
  {
    "text": "now let's take a look at some of the",
    "start": "217140",
    "end": "218790"
  },
  {
    "text": "files in this initial application we",
    "start": "218790",
    "end": "220860"
  },
  {
    "text": "have a few TS config files here which",
    "start": "220860",
    "end": "222900"
  },
  {
    "text": "were automatically generated and set up",
    "start": "222900",
    "end": "224760"
  },
  {
    "text": "for this project angular was really the",
    "start": "224760",
    "end": "226890"
  },
  {
    "text": "first major framework to encourage the",
    "start": "226890",
    "end": "228599"
  },
  {
    "text": "use of typescript and you now see it is",
    "start": "228599",
    "end": "230430"
  },
  {
    "text": "almost a standard on large complex",
    "start": "230430",
    "end": "232409"
  },
  {
    "text": "projects",
    "start": "232409",
    "end": "233400"
  },
  {
    "text": "[Music]",
    "start": "233400",
    "end": "238689"
  },
  {
    "text": "now the default angular app also comes",
    "start": "238689",
    "end": "241280"
  },
  {
    "text": "with testing using karma and Jasmine but",
    "start": "241280",
    "end": "243680"
  },
  {
    "text": "there are other schematics or other",
    "start": "243680",
    "end": "245269"
  },
  {
    "text": "extensions for the CLI you can use for",
    "start": "245269",
    "end": "247310"
  },
  {
    "text": "other testing frameworks like jest and",
    "start": "247310",
    "end": "249379"
  },
  {
    "text": "cypress and that's just another thing",
    "start": "249379",
    "end": "251719"
  },
  {
    "text": "that angular does out-of-the-box it sets",
    "start": "251719",
    "end": "253670"
  },
  {
    "text": "up your testing utilities so you don't",
    "start": "253670",
    "end": "255379"
  },
  {
    "text": "have to think about configuring them but",
    "start": "255379",
    "end": "257389"
  },
  {
    "text": "what good is any of this if the",
    "start": "257389",
    "end": "258709"
  },
  {
    "text": "framework doesn't actually help us build",
    "start": "258709",
    "end": "260180"
  },
  {
    "text": "a front-end UI because angular at its",
    "start": "260180",
    "end": "262699"
  },
  {
    "text": "core is very similar to other UI",
    "start": "262699",
    "end": "264650"
  },
  {
    "text": "frameworks like react spelt and view",
    "start": "264650",
    "end": "267199"
  },
  {
    "text": "just to name a few",
    "start": "267199",
    "end": "268130"
  },
  {
    "text": "you'll find these same concepts in",
    "start": "268130",
    "end": "269930"
  },
  {
    "text": "angular that you find in these",
    "start": "269930",
    "end": "271009"
  },
  {
    "text": "frameworks component based UI",
    "start": "271009",
    "end": "272630"
  },
  {
    "text": "architecture where you can pass",
    "start": "272630",
    "end": "274280"
  },
  {
    "text": "properties or data from one component to",
    "start": "274280",
    "end": "276470"
  },
  {
    "text": "another the place where we write our",
    "start": "276470",
    "end": "278210"
  },
  {
    "text": "actual UI code is in the source app",
    "start": "278210",
    "end": "280310"
  },
  {
    "text": "directory by default angular generates",
    "start": "280310",
    "end": "282889"
  },
  {
    "text": "an app component which is essentially",
    "start": "282889",
    "end": "284599"
  },
  {
    "text": "the entry point into the app we can see",
    "start": "284599",
    "end": "286639"
  },
  {
    "text": "how this works by opening up the",
    "start": "286639",
    "end": "288110"
  },
  {
    "text": "index.html file which is just plain HTML",
    "start": "288110",
    "end": "291050"
  },
  {
    "text": "the special thing is that we have this",
    "start": "291050",
    "end": "293419"
  },
  {
    "text": "app root element in the body this",
    "start": "293419",
    "end": "295729"
  },
  {
    "text": "element will be replaced with our actual",
    "start": "295729",
    "end": "297440"
  },
  {
    "text": "angular JavaScript application and that",
    "start": "297440",
    "end": "299720"
  },
  {
    "text": "initial parsing of the JavaScript is",
    "start": "299720",
    "end": "301580"
  },
  {
    "text": "called bootstrapping",
    "start": "301580",
    "end": "302599"
  },
  {
    "text": "but the main thing you'll be doing in",
    "start": "302599",
    "end": "304159"
  },
  {
    "text": "angular is creating a UI by building and",
    "start": "304159",
    "end": "306889"
  },
  {
    "text": "composing components together and there",
    "start": "306889",
    "end": "309080"
  },
  {
    "text": "are three main pieces to any component",
    "start": "309080",
    "end": "311150"
  },
  {
    "text": "the component typescript is where you",
    "start": "311150",
    "end": "312919"
  },
  {
    "text": "define your custom javascript logic and",
    "start": "312919",
    "end": "314870"
  },
  {
    "text": "also define the internal state of the",
    "start": "314870",
    "end": "316849"
  },
  {
    "text": "component then you have your HTML which",
    "start": "316849",
    "end": "319130"
  },
  {
    "text": "contains the actual visual UI and allows",
    "start": "319130",
    "end": "321470"
  },
  {
    "text": "you to bind data from the typescript to",
    "start": "321470",
    "end": "323900"
  },
  {
    "text": "that template and lastly you have a",
    "start": "323900",
    "end": "326150"
  },
  {
    "text": "style sheet which is scoped to that",
    "start": "326150",
    "end": "328039"
  },
  {
    "text": "component meaning these Styles won't",
    "start": "328039",
    "end": "329630"
  },
  {
    "text": "bleed out to other components let's go",
    "start": "329630",
    "end": "331880"
  },
  {
    "text": "into the app component HTML first and",
    "start": "331880",
    "end": "333919"
  },
  {
    "text": "delete all of the boilerplate code in",
    "start": "333919",
    "end": "335750"
  },
  {
    "text": "there leaving only the router outlet",
    "start": "335750",
    "end": "337810"
  },
  {
    "text": "angular provides a very powerful router",
    "start": "337810",
    "end": "340190"
  },
  {
    "text": "out of the box which allows you to map",
    "start": "340190",
    "end": "342289"
  },
  {
    "text": "components to URLs in the browser and",
    "start": "342289",
    "end": "344539"
  },
  {
    "text": "the router can even help you do",
    "start": "344539",
    "end": "345979"
  },
  {
    "text": "something called code splitting with web",
    "start": "345979",
    "end": "347570"
  },
  {
    "text": "pack to lazy load certain parts of your",
    "start": "347570",
    "end": "349849"
  },
  {
    "text": "JavaScript bundle we're not going to",
    "start": "349849",
    "end": "351710"
  },
  {
    "text": "cover it in this video but just know",
    "start": "351710",
    "end": "353330"
  },
  {
    "text": "that it's a relatively complex thing",
    "start": "353330",
    "end": "354919"
  },
  {
    "text": "that angular makes trivial now from this",
    "start": "354919",
    "end": "357199"
  },
  {
    "text": "point I want to build something",
    "start": "357199",
    "end": "358130"
  },
  {
    "text": "meaningful so let's build a little game",
    "start": "358130",
    "end": "360229"
  },
  {
    "text": "of tic-tac-toe the idea itself is",
    "start": "360229",
    "end": "362330"
  },
  {
    "text": "inspired by the react to toriel and it",
    "start": "362330",
    "end": "364370"
  },
  {
    "text": "provides a good baseline for",
    "start": "364370",
    "end": "365750"
  },
  {
    "text": "understanding the mechanics of the",
    "start": "365750",
    "end": "367310"
  },
  {
    "text": "framework",
    "start": "367310",
    "end": "367950"
  },
  {
    "text": "we'll start by building a bare-bones",
    "start": "367950",
    "end": "369240"
  },
  {
    "text": "game then we'll add a design system and",
    "start": "369240",
    "end": "371400"
  },
  {
    "text": "lastly we will deploy it as a PWA so the",
    "start": "371400",
    "end": "374820"
  },
  {
    "text": "first thing we'll do is generate a",
    "start": "374820",
    "end": "376380"
  },
  {
    "text": "component to represent an individual",
    "start": "376380",
    "end": "378540"
  },
  {
    "text": "square will find the generate command",
    "start": "378540",
    "end": "380730"
  },
  {
    "text": "with the angular console will generate a",
    "start": "380730",
    "end": "382830"
  },
  {
    "text": "component and give it a name up Square",
    "start": "382830",
    "end": "384990"
  },
  {
    "text": "and a lot of times in angular you might",
    "start": "384990",
    "end": "387390"
  },
  {
    "text": "not need to have your component",
    "start": "387390",
    "end": "388680"
  },
  {
    "text": "separated into three different files so",
    "start": "388680",
    "end": "391050"
  },
  {
    "text": "when running this command from the",
    "start": "391050",
    "end": "392250"
  },
  {
    "text": "angular console we'll actually select",
    "start": "392250",
    "end": "394200"
  },
  {
    "text": "the options for inline template and",
    "start": "394200",
    "end": "396240"
  },
  {
    "text": "inline styles you'll see this created a",
    "start": "396240",
    "end": "398790"
  },
  {
    "text": "square directory along with a square",
    "start": "398790",
    "end": "400830"
  },
  {
    "text": "component inside if we open up the",
    "start": "400830",
    "end": "403080"
  },
  {
    "text": "component you'll see that we're",
    "start": "403080",
    "end": "404460"
  },
  {
    "text": "importing a component and on an it from",
    "start": "404460",
    "end": "406770"
  },
  {
    "text": "angular core on an it is what's known as",
    "start": "406770",
    "end": "409350"
  },
  {
    "text": "a lifecycle hook which allows you to run",
    "start": "409350",
    "end": "411510"
  },
  {
    "text": "some code when the component is first",
    "start": "411510",
    "end": "413280"
  },
  {
    "text": "initialized it's not required for this",
    "start": "413280",
    "end": "415440"
  },
  {
    "text": "component so I'm going to go ahead and",
    "start": "415440",
    "end": "417120"
  },
  {
    "text": "delete the references to it and what",
    "start": "417120",
    "end": "418830"
  },
  {
    "text": "we're left with here is just a plain",
    "start": "418830",
    "end": "420360"
  },
  {
    "text": "angular component every component starts",
    "start": "420360",
    "end": "422520"
  },
  {
    "text": "with a component decorator and",
    "start": "422520",
    "end": "423990"
  },
  {
    "text": "decorators are these things that start",
    "start": "423990",
    "end": "425940"
  },
  {
    "text": "with an @ symbol and you can watch my",
    "start": "425940",
    "end": "427740"
  },
  {
    "text": "full video on typescript decorators if",
    "start": "427740",
    "end": "429600"
  },
  {
    "text": "you're curious to learn how they work",
    "start": "429600",
    "end": "430710"
  },
  {
    "text": "but in the case of angular they allow us",
    "start": "430710",
    "end": "433320"
  },
  {
    "text": "to pass in an object that configures the",
    "start": "433320",
    "end": "435600"
  },
  {
    "text": "way this component behaves first you'll",
    "start": "435600",
    "end": "437940"
  },
  {
    "text": "notice the selector option this is the",
    "start": "437940",
    "end": "439830"
  },
  {
    "text": "name of the component as it will be",
    "start": "439830",
    "end": "441360"
  },
  {
    "text": "declared or used in the HTML let's go",
    "start": "441360",
    "end": "443880"
  },
  {
    "text": "ahead and open the app component to see",
    "start": "443880",
    "end": "445830"
  },
  {
    "text": "how that works if we start typing Apps",
    "start": "445830",
    "end": "448080"
  },
  {
    "text": "Square it should autocomplete in vs code",
    "start": "448080",
    "end": "450270"
  },
  {
    "text": "and then we can hit tab to complete it",
    "start": "450270",
    "end": "452310"
  },
  {
    "text": "and then if we're still serving the app",
    "start": "452310",
    "end": "453900"
  },
  {
    "text": "we should see the content of that",
    "start": "453900",
    "end": "455430"
  },
  {
    "text": "component in the web page the next thing",
    "start": "455430",
    "end": "457920"
  },
  {
    "text": "you'll notice is the template angular",
    "start": "457920",
    "end": "459750"
  },
  {
    "text": "provides a special templating language",
    "start": "459750",
    "end": "461490"
  },
  {
    "text": "that empowers your HTML with JavaScript",
    "start": "461490",
    "end": "464130"
  },
  {
    "text": "like logic you can use conditional",
    "start": "464130",
    "end": "465840"
  },
  {
    "text": "expressions loops and bind data directly",
    "start": "465840",
    "end": "468030"
  },
  {
    "text": "to the HTML to write templates that are",
    "start": "468030",
    "end": "470370"
  },
  {
    "text": "expressive and easy to understand and",
    "start": "470370",
    "end": "472710"
  },
  {
    "text": "also highly performant when it comes to",
    "start": "472710",
    "end": "474630"
  },
  {
    "text": "reacting to data changes within the app",
    "start": "474630",
    "end": "476580"
  },
  {
    "text": "and that's why declarative UI frameworks",
    "start": "476580",
    "end": "478920"
  },
  {
    "text": "like react angular etc are so popular",
    "start": "478920",
    "end": "481500"
  },
  {
    "text": "they make it easy for you as a developer",
    "start": "481500",
    "end": "484050"
  },
  {
    "text": "to keep your app data in sync with the",
    "start": "484050",
    "end": "486420"
  },
  {
    "text": "actual UI how it appears visually for",
    "start": "486420",
    "end": "488670"
  },
  {
    "text": "the end user in angular we can bind data",
    "start": "488670",
    "end": "491580"
  },
  {
    "text": "to a template by simply adding it as a",
    "start": "491580",
    "end": "493680"
  },
  {
    "text": "property to the component class just to",
    "start": "493680",
    "end": "496410"
  },
  {
    "text": "demonstrate this I'll add a random",
    "start": "496410",
    "end": "497910"
  },
  {
    "text": "number and then I can interpolate it in",
    "start": "497910",
    "end": "499770"
  },
  {
    "text": "the template by using double braces",
    "start": "499770",
    "end": "501930"
  },
  {
    "text": "and now we should see the random number",
    "start": "501930",
    "end": "503699"
  },
  {
    "text": "in the screen under the hood angular is",
    "start": "503699",
    "end": "505919"
  },
  {
    "text": "doing a thing called change detection",
    "start": "505919",
    "end": "507210"
  },
  {
    "text": "where it's looking for changes to these",
    "start": "507210",
    "end": "509340"
  },
  {
    "text": "properties and then updating the UI in a",
    "start": "509340",
    "end": "511770"
  },
  {
    "text": "highly performant way and all we have to",
    "start": "511770",
    "end": "513960"
  },
  {
    "text": "do from a development perspective is",
    "start": "513960",
    "end": "515610"
  },
  {
    "text": "change the value of the property for",
    "start": "515610",
    "end": "517860"
  },
  {
    "text": "example if we set up an interval here",
    "start": "517860",
    "end": "519570"
  },
  {
    "text": "and change the random number to a",
    "start": "519570",
    "end": "521399"
  },
  {
    "text": "different random number you'll see it's",
    "start": "521399",
    "end": "523140"
  },
  {
    "text": "updated in the screen every 500",
    "start": "523140",
    "end": "525240"
  },
  {
    "text": "milliseconds so when you set a property",
    "start": "525240",
    "end": "527520"
  },
  {
    "text": "on a component class that's like setting",
    "start": "527520",
    "end": "529470"
  },
  {
    "text": "its internal state but in many cases you",
    "start": "529470",
    "end": "532200"
  },
  {
    "text": "want to pass in the property from a",
    "start": "532200",
    "end": "534300"
  },
  {
    "text": "parent component and that's exactly what",
    "start": "534300",
    "end": "536130"
  },
  {
    "text": "we want for this square we can allow",
    "start": "536130",
    "end": "538140"
  },
  {
    "text": "properties to be input into this",
    "start": "538140",
    "end": "539820"
  },
  {
    "text": "component by using the input decorator",
    "start": "539820",
    "end": "541950"
  },
  {
    "text": "if we start typing input and then tab it",
    "start": "541950",
    "end": "544560"
  },
  {
    "text": "will automatically import this decorator",
    "start": "544560",
    "end": "546360"
  },
  {
    "text": "for us and then we can set the property",
    "start": "546360",
    "end": "548760"
  },
  {
    "text": "name to value and we could even use",
    "start": "548760",
    "end": "550860"
  },
  {
    "text": "typescript here to limit this value to a",
    "start": "550860",
    "end": "553170"
  },
  {
    "text": "certain subset of string values or some",
    "start": "553170",
    "end": "555450"
  },
  {
    "text": "other type if we wanted to and now we",
    "start": "555450",
    "end": "557700"
  },
  {
    "text": "can go back up to our component",
    "start": "557700",
    "end": "559260"
  },
  {
    "text": "declaration in the app component and now",
    "start": "559260",
    "end": "561600"
  },
  {
    "text": "we can input this value from the parent",
    "start": "561600",
    "end": "563459"
  },
  {
    "text": "component which can be just a string",
    "start": "563459",
    "end": "565470"
  },
  {
    "text": "value or if we're at value in brackets",
    "start": "565470",
    "end": "567690"
  },
  {
    "text": "it will take an actual expression or a",
    "start": "567690",
    "end": "569610"
  },
  {
    "text": "dynamic value from this parent component",
    "start": "569610",
    "end": "571709"
  },
  {
    "text": "and that means you can pass a complex",
    "start": "571709",
    "end": "573630"
  },
  {
    "text": "object from parent to child now if we",
    "start": "573630",
    "end": "576510"
  },
  {
    "text": "look at our square component it only has",
    "start": "576510",
    "end": "578400"
  },
  {
    "text": "a single input there is nothing in this",
    "start": "578400",
    "end": "580380"
  },
  {
    "text": "component that allows it to modify its",
    "start": "580380",
    "end": "582300"
  },
  {
    "text": "own state it all comes from the parent",
    "start": "582300",
    "end": "584220"
  },
  {
    "text": "so we generally call this a UI component",
    "start": "584220",
    "end": "586230"
  },
  {
    "text": "or a dump component dump components are",
    "start": "586230",
    "end": "589290"
  },
  {
    "text": "a good thing they're easy to test and",
    "start": "589290",
    "end": "591180"
  },
  {
    "text": "they're only concerned about the UI so",
    "start": "591180",
    "end": "593010"
  },
  {
    "text": "there's not much to worry about in terms",
    "start": "593010",
    "end": "594630"
  },
  {
    "text": "of bugs and things like that but in",
    "start": "594630",
    "end": "596730"
  },
  {
    "text": "order to build a tic-tac-toe game we'll",
    "start": "596730",
    "end": "598620"
  },
  {
    "text": "need some kind of smart component to",
    "start": "598620",
    "end": "600270"
  },
  {
    "text": "manage the state or the data between the",
    "start": "600270",
    "end": "602459"
  },
  {
    "text": "various squares let's go ahead and",
    "start": "602459",
    "end": "604320"
  },
  {
    "text": "generate that component will call it",
    "start": "604320",
    "end": "605910"
  },
  {
    "text": "board and just stick with the default",
    "start": "605910",
    "end": "607829"
  },
  {
    "text": "options now our board component will be",
    "start": "607829",
    "end": "610170"
  },
  {
    "text": "our smart component meaning it has",
    "start": "610170",
    "end": "611880"
  },
  {
    "text": "internal state they can change we have",
    "start": "611880",
    "end": "614550"
  },
  {
    "text": "the squares property which represents",
    "start": "614550",
    "end": "616380"
  },
  {
    "text": "the nine moves on the game board which",
    "start": "616380",
    "end": "618390"
  },
  {
    "text": "will be an array of strings and then we",
    "start": "618390",
    "end": "620640"
  },
  {
    "text": "have a property called X's next which is",
    "start": "620640",
    "end": "622860"
  },
  {
    "text": "a boolean to help us determine the",
    "start": "622860",
    "end": "624660"
  },
  {
    "text": "current player and then we have the",
    "start": "624660",
    "end": "626579"
  },
  {
    "text": "winner which will either be X or O now",
    "start": "626579",
    "end": "629610"
  },
  {
    "text": "every component has a constructor and",
    "start": "629610",
    "end": "631380"
  },
  {
    "text": "also lifecycle hooks the constructor",
    "start": "631380",
    "end": "634230"
  },
  {
    "text": "runs immediately when this class is",
    "start": "634230",
    "end": "635880"
  },
  {
    "text": "created but you don't generally do",
    "start": "635880",
    "end": "637500"
  },
  {
    "text": "anything in the constructor aside from",
    "start": "637500",
    "end": "639060"
  },
  {
    "text": "inject your dependencies which we'll",
    "start": "639060",
    "end": "640800"
  },
  {
    "text": "look at in a future video if you have",
    "start": "640800",
    "end": "643380"
  },
  {
    "text": "initial setup work that needs to be done",
    "start": "643380",
    "end": "645000"
  },
  {
    "text": "in a component you'll use the ng on a",
    "start": "645000",
    "end": "647190"
  },
  {
    "text": "net life cycle hook in most cases in our",
    "start": "647190",
    "end": "650190"
  },
  {
    "text": "case we'll write a method on this",
    "start": "650190",
    "end": "651720"
  },
  {
    "text": "component called new game and its",
    "start": "651720",
    "end": "653700"
  },
  {
    "text": "responsibility is to set up the initial",
    "start": "653700",
    "end": "655650"
  },
  {
    "text": "values when starting a brand new game",
    "start": "655650",
    "end": "657660"
  },
  {
    "text": "for our squares property we'll create an",
    "start": "657660",
    "end": "660180"
  },
  {
    "text": "array with nine elements in it and then",
    "start": "660180",
    "end": "662160"
  },
  {
    "text": "we'll fill them with null values",
    "start": "662160",
    "end": "663450"
  },
  {
    "text": "initially when a user clicks on a square",
    "start": "663450",
    "end": "665580"
  },
  {
    "text": "these values will be spliced with either",
    "start": "665580",
    "end": "667620"
  },
  {
    "text": "an X or an O we'll set the winner to",
    "start": "667620",
    "end": "670230"
  },
  {
    "text": "null and X is next to true",
    "start": "670230",
    "end": "672720"
  },
  {
    "text": "now when working with data on a",
    "start": "672720",
    "end": "674280"
  },
  {
    "text": "component you may want to compute a",
    "start": "674280",
    "end": "676140"
  },
  {
    "text": "property based on one of the main pieces",
    "start": "676140",
    "end": "678360"
  },
  {
    "text": "of data that changes in our case X is",
    "start": "678360",
    "end": "681210"
  },
  {
    "text": "next determines which player is",
    "start": "681210",
    "end": "683310"
  },
  {
    "text": "currently using the game board that's a",
    "start": "683310",
    "end": "685980"
  },
  {
    "text": "boolean value but we'd also like to show",
    "start": "685980",
    "end": "688290"
  },
  {
    "text": "the name of the player as a string which",
    "start": "688290",
    "end": "690210"
  },
  {
    "text": "would be X or O so we can create a",
    "start": "690210",
    "end": "692610"
  },
  {
    "text": "computed property by using a type script",
    "start": "692610",
    "end": "694770"
  },
  {
    "text": "getter we'll go ahead and call this",
    "start": "694770",
    "end": "696480"
  },
  {
    "text": "property player and if X is next is true",
    "start": "696480",
    "end": "699480"
  },
  {
    "text": "then the next player will be X otherwise",
    "start": "699480",
    "end": "701430"
  },
  {
    "text": "it will be o now anytime the X is next",
    "start": "701430",
    "end": "704490"
  },
  {
    "text": "value changes this computed property",
    "start": "704490",
    "end": "706440"
  },
  {
    "text": "will be changed and reflected in the UI",
    "start": "706440",
    "end": "708270"
  },
  {
    "text": "as well now the next thing we'll do in",
    "start": "708270",
    "end": "710790"
  },
  {
    "text": "this component is define a method which",
    "start": "710790",
    "end": "713160"
  },
  {
    "text": "will serve as an event handler for when",
    "start": "713160",
    "end": "715110"
  },
  {
    "text": "the user clicks on one of the buttons to",
    "start": "715110",
    "end": "717210"
  },
  {
    "text": "make a move when that click event",
    "start": "717210",
    "end": "719580"
  },
  {
    "text": "happens we'll check the index in the",
    "start": "719580",
    "end": "721710"
  },
  {
    "text": "array that they clicked on if that",
    "start": "721710",
    "end": "723450"
  },
  {
    "text": "Square has already been clicked then we",
    "start": "723450",
    "end": "725370"
  },
  {
    "text": "won't do anything but if it's empty or",
    "start": "725370",
    "end": "727440"
  },
  {
    "text": "null and we'll splice in the index of",
    "start": "727440",
    "end": "730140"
  },
  {
    "text": "the square that user clicked on with the",
    "start": "730140",
    "end": "732060"
  },
  {
    "text": "current player that we've computed in",
    "start": "732060",
    "end": "733800"
  },
  {
    "text": "this component and then we'll also",
    "start": "733800",
    "end": "735690"
  },
  {
    "text": "toggle the X's next boolean to its",
    "start": "735690",
    "end": "737970"
  },
  {
    "text": "opposite value by using an exclamation",
    "start": "737970",
    "end": "739860"
  },
  {
    "text": "mark in the last thing I'll do is write",
    "start": "739860",
    "end": "742710"
  },
  {
    "text": "a method called calculate winner this",
    "start": "742710",
    "end": "744780"
  },
  {
    "text": "code mostly comes from the react to",
    "start": "744780",
    "end": "746250"
  },
  {
    "text": "toriel and it's basically just an",
    "start": "746250",
    "end": "747810"
  },
  {
    "text": "algorithm that determines if the user",
    "start": "747810",
    "end": "749580"
  },
  {
    "text": "has won the tic-tac-toe game I'm not",
    "start": "749580",
    "end": "751770"
  },
  {
    "text": "going to spend time explaining the exact",
    "start": "751770",
    "end": "753300"
  },
  {
    "text": "implementation details but feel free to",
    "start": "753300",
    "end": "755160"
  },
  {
    "text": "copy the source code from the github",
    "start": "755160",
    "end": "756990"
  },
  {
    "text": "link in the video description so now",
    "start": "756990",
    "end": "759150"
  },
  {
    "text": "let's head into the HTML template to see",
    "start": "759150",
    "end": "761460"
  },
  {
    "text": "how we can bind the data properties we",
    "start": "761460",
    "end": "763350"
  },
  {
    "text": "define on the component class to our",
    "start": "763350",
    "end": "765210"
  },
  {
    "text": "actual UI",
    "start": "765210",
    "end": "765960"
  },
  {
    "text": "we'll want to show the name of the",
    "start": "765960",
    "end": "767640"
  },
  {
    "text": "current player show the winner if the",
    "start": "767640",
    "end": "769590"
  },
  {
    "text": "exist and then also loop over the array",
    "start": "769590",
    "end": "771630"
  },
  {
    "text": "of squares so the user has something to",
    "start": "771630",
    "end": "773610"
  },
  {
    "text": "click on the player property that we",
    "start": "773610",
    "end": "775980"
  },
  {
    "text": "defined what they get her behaves just",
    "start": "775980",
    "end": "777330"
  },
  {
    "text": "like any other property we can simply",
    "start": "777330",
    "end": "779250"
  },
  {
    "text": "use it with the handle bar syntax to",
    "start": "779250",
    "end": "781350"
  },
  {
    "text": "interpolate it in the template now the",
    "start": "781350",
    "end": "783300"
  },
  {
    "text": "other thing that you'll commonly do in a",
    "start": "783300",
    "end": "784740"
  },
  {
    "text": "web application is handle events and an",
    "start": "784740",
    "end": "787380"
  },
  {
    "text": "angular we can bind to events by using",
    "start": "787380",
    "end": "789600"
  },
  {
    "text": "parentheses and you'll notice that when",
    "start": "789600",
    "end": "791730"
  },
  {
    "text": "we do that angular's tooling will",
    "start": "791730",
    "end": "793440"
  },
  {
    "text": "automatically give us a list of all the",
    "start": "793440",
    "end": "795390"
  },
  {
    "text": "possible events to add here and then we",
    "start": "795390",
    "end": "797550"
  },
  {
    "text": "bind a handler to this event which vs",
    "start": "797550",
    "end": "799860"
  },
  {
    "text": "code will also autocomplete so in",
    "start": "799860",
    "end": "802260"
  },
  {
    "text": "angular you get amazing tooling both in",
    "start": "802260",
    "end": "804030"
  },
  {
    "text": "the typescript and also in your",
    "start": "804030",
    "end": "805740"
  },
  {
    "text": "templates now for this tic-tac-toe game",
    "start": "805740",
    "end": "807840"
  },
  {
    "text": "if we have a winner we want to display a",
    "start": "807840",
    "end": "810270"
  },
  {
    "text": "conditional template only when that",
    "start": "810270",
    "end": "811860"
  },
  {
    "text": "winner exists and we can make that",
    "start": "811860",
    "end": "813600"
  },
  {
    "text": "happen with what's called a structural",
    "start": "813600",
    "end": "815250"
  },
  {
    "text": "directive if you type in star you'll see",
    "start": "815250",
    "end": "817740"
  },
  {
    "text": "the different structural directives at",
    "start": "817740",
    "end": "819300"
  },
  {
    "text": "your disposal but the most common one is",
    "start": "819300",
    "end": "821610"
  },
  {
    "text": "ngf and it allows you to only render the",
    "start": "821610",
    "end": "824460"
  },
  {
    "text": "HTML that it's bound to if the value on",
    "start": "824460",
    "end": "827190"
  },
  {
    "text": "the right side evaluates to true or it",
    "start": "827190",
    "end": "829650"
  },
  {
    "text": "can be coerced to a truth eval you to be",
    "start": "829650",
    "end": "831660"
  },
  {
    "text": "more precise and so when the winner is",
    "start": "831660",
    "end": "833640"
  },
  {
    "text": "present then this h2 element will be",
    "start": "833640",
    "end": "835680"
  },
  {
    "text": "rendered in the Dom now the final step",
    "start": "835680",
    "end": "837840"
  },
  {
    "text": "is to put together the actual squares",
    "start": "837840",
    "end": "839790"
  },
  {
    "text": "that represent the game board another",
    "start": "839790",
    "end": "842400"
  },
  {
    "text": "common structural directive and angular",
    "start": "842400",
    "end": "844170"
  },
  {
    "text": "is ng4 so first we'll declare our app",
    "start": "844170",
    "end": "847260"
  },
  {
    "text": "square component then we'll add ng4 to",
    "start": "847260",
    "end": "850230"
  },
  {
    "text": "render this component multiple times",
    "start": "850230",
    "end": "851790"
  },
  {
    "text": "based on the array of squares inside of",
    "start": "851790",
    "end": "854820"
  },
  {
    "text": "ng4 we say let vowel which creates a",
    "start": "854820",
    "end": "857310"
  },
  {
    "text": "template variable named vowel that we",
    "start": "857310",
    "end": "859110"
  },
  {
    "text": "can now use in this template and if we",
    "start": "859110",
    "end": "861420"
  },
  {
    "text": "also want access to the index we can set",
    "start": "861420",
    "end": "864180"
  },
  {
    "text": "a template variable of I equal to the",
    "start": "864180",
    "end": "866460"
  },
  {
    "text": "index and now we can put these variables",
    "start": "866460",
    "end": "868680"
  },
  {
    "text": "to use the first thing we want to do is",
    "start": "868680",
    "end": "870660"
  },
  {
    "text": "pass the value down to the child app",
    "start": "870660",
    "end": "873090"
  },
  {
    "text": "square component and it can use that",
    "start": "873090",
    "end": "875070"
  },
  {
    "text": "value to render an X or an O in the",
    "start": "875070",
    "end": "877260"
  },
  {
    "text": "button and we'll also bind to the click",
    "start": "877260",
    "end": "879330"
  },
  {
    "text": "event to make a move on that index when",
    "start": "879330",
    "end": "881850"
  },
  {
    "text": "the user clicks on the square now that",
    "start": "881850",
    "end": "883830"
  },
  {
    "text": "takes care of our template logic but",
    "start": "883830",
    "end": "885540"
  },
  {
    "text": "there's one thing that's missing and",
    "start": "885540",
    "end": "886950"
  },
  {
    "text": "that is our CSS styling to give us a 3x3",
    "start": "886950",
    "end": "889710"
  },
  {
    "text": "grid CSS grid makes this very easy we",
    "start": "889710",
    "end": "892560"
  },
  {
    "text": "just set up our main element to display",
    "start": "892560",
    "end": "894150"
  },
  {
    "text": "grid and then we'll display the columns",
    "start": "894150",
    "end": "896430"
  },
  {
    "text": "at 200 pixels each at this point you can",
    "start": "896430",
    "end": "898710"
  },
  {
    "text": "serve the application and you should now",
    "start": "898710",
    "end": "900390"
  },
  {
    "text": "be able to play a game of tic-tac-toe",
    "start": "900390",
    "end": "903130"
  },
  {
    "text": "but we have one major problem at this",
    "start": "903130",
    "end": "905480"
  },
  {
    "text": "point the app looks horrible so what",
    "start": "905480",
    "end": "907940"
  },
  {
    "text": "we'd like to do is add some global",
    "start": "907940",
    "end": "909170"
  },
  {
    "text": "styling like a design system to give us",
    "start": "909170",
    "end": "911570"
  },
  {
    "text": "a consistent UI that looks great but",
    "start": "911570",
    "end": "913730"
  },
  {
    "text": "usually setting up something like that",
    "start": "913730",
    "end": "915200"
  },
  {
    "text": "is pretty involved but fortunately the",
    "start": "915200",
    "end": "917480"
  },
  {
    "text": "angular ecosystem has a variety of",
    "start": "917480",
    "end": "919430"
  },
  {
    "text": "third-party component libraries that we",
    "start": "919430",
    "end": "921500"
  },
  {
    "text": "can easily add to this project with a",
    "start": "921500",
    "end": "923180"
  },
  {
    "text": "single command and that means our app",
    "start": "923180",
    "end": "924980"
  },
  {
    "text": "can look great right out of the gate",
    "start": "924980",
    "end": "926330"
  },
  {
    "text": "without any decision making or",
    "start": "926330",
    "end": "927890"
  },
  {
    "text": "configuration on our part",
    "start": "927890",
    "end": "929450"
  },
  {
    "text": "there are plenty of great options to",
    "start": "929450",
    "end": "930950"
  },
  {
    "text": "choose from like angular material ionic",
    "start": "930950",
    "end": "933320"
  },
  {
    "text": "and others but today we're going to go",
    "start": "933320",
    "end": "935210"
  },
  {
    "text": "with nebula not only do the default",
    "start": "935210",
    "end": "937220"
  },
  {
    "text": "components look great but they also just",
    "start": "937220",
    "end": "939020"
  },
  {
    "text": "released a new feature called UI bakery",
    "start": "939020",
    "end": "941240"
  },
  {
    "text": "and it's a tool that allows you to",
    "start": "941240",
    "end": "942770"
  },
  {
    "text": "visually create components and then",
    "start": "942770",
    "end": "944360"
  },
  {
    "text": "download angular code expect a video on",
    "start": "944360",
    "end": "946700"
  },
  {
    "text": "this topic in the near future for right",
    "start": "946700",
    "end": "948710"
  },
  {
    "text": "now we'll go ahead and add nebula to",
    "start": "948710",
    "end": "950090"
  },
  {
    "text": "this project by using the ng add command",
    "start": "950090",
    "end": "952550"
  },
  {
    "text": "if we run ng ad at nebula theme it will",
    "start": "952550",
    "end": "955760"
  },
  {
    "text": "automatically install and configure",
    "start": "955760",
    "end": "957350"
  },
  {
    "text": "nebula in our project I'm gonna go ahead",
    "start": "957350",
    "end": "959360"
  },
  {
    "text": "and choose the cosmic theme because that",
    "start": "959360",
    "end": "960920"
  },
  {
    "text": "sounds cool and we'll also say yes to",
    "start": "960920",
    "end": "962930"
  },
  {
    "text": "customization and animation you'll",
    "start": "962930",
    "end": "965240"
  },
  {
    "text": "notice a few key changes to the project",
    "start": "965240",
    "end": "967370"
  },
  {
    "text": "we now have a themes s CSS file which we",
    "start": "967370",
    "end": "969740"
  },
  {
    "text": "can use to customize the variables used",
    "start": "969740",
    "end": "971840"
  },
  {
    "text": "in the theme and then we can go into the",
    "start": "971840",
    "end": "974060"
  },
  {
    "text": "app module and we'll see that we have a",
    "start": "974060",
    "end": "975710"
  },
  {
    "text": "few ng module is imported here we're not",
    "start": "975710",
    "end": "978020"
  },
  {
    "text": "going to talk about ng modules in this",
    "start": "978020",
    "end": "979610"
  },
  {
    "text": "video but they are discussed in detail",
    "start": "979610",
    "end": "981350"
  },
  {
    "text": "in the full course basically they're",
    "start": "981350",
    "end": "983150"
  },
  {
    "text": "just a mechanism that makes it possible",
    "start": "983150",
    "end": "984830"
  },
  {
    "text": "to use angular in a progressive way or",
    "start": "984830",
    "end": "987230"
  },
  {
    "text": "in other words only use the parts of the",
    "start": "987230",
    "end": "989210"
  },
  {
    "text": "framework that you actually need in our",
    "start": "989210",
    "end": "991220"
  },
  {
    "text": "case we'll go ahead and import the",
    "start": "991220",
    "end": "992840"
  },
  {
    "text": "nebular button module because that's the",
    "start": "992840",
    "end": "994850"
  },
  {
    "text": "only nebula component that we want to",
    "start": "994850",
    "end": "996290"
  },
  {
    "text": "use so we don't have to package the",
    "start": "996290",
    "end": "998000"
  },
  {
    "text": "entire thing which would increase our",
    "start": "998000",
    "end": "999320"
  },
  {
    "text": "bundle size and decrease performance and",
    "start": "999320",
    "end": "1001380"
  },
  {
    "text": "also if we go into the app component",
    "start": "1001380",
    "end": "1003760"
  },
  {
    "text": "you'll see that we now have a bunch of",
    "start": "1003760",
    "end": "1005560"
  },
  {
    "text": "components that are prefixed by NB for",
    "start": "1005560",
    "end": "1007960"
  },
  {
    "text": "nebula and already the UI is looking a",
    "start": "1007960",
    "end": "1010330"
  },
  {
    "text": "lot more interesting but one obvious way",
    "start": "1010330",
    "end": "1012670"
  },
  {
    "text": "we can improve this is to change the",
    "start": "1012670",
    "end": "1014320"
  },
  {
    "text": "styling of an individual square based on",
    "start": "1014320",
    "end": "1016510"
  },
  {
    "text": "its state if we go back into our square",
    "start": "1016510",
    "end": "1018280"
  },
  {
    "text": "component we now have access to the NB",
    "start": "1018280",
    "end": "1020890"
  },
  {
    "text": "button directive with this directive you",
    "start": "1020890",
    "end": "1023320"
  },
  {
    "text": "can apply the nebular button theme and",
    "start": "1023320",
    "end": "1025449"
  },
  {
    "text": "behaviors to any HTML element using the",
    "start": "1025450",
    "end": "1028209"
  },
  {
    "text": "directive as is we'll give you the",
    "start": "1028209",
    "end": "1029620"
  },
  {
    "text": "default nebular button which we'll go",
    "start": "1029620",
    "end": "1031390"
  },
  {
    "text": "ahead and do when the value is null or",
    "start": "1031390",
    "end": "1033370"
  },
  {
    "text": "when the square has not been selected",
    "start": "1033370",
    "end": "1035110"
  },
  {
    "text": "then we'll go ahead and set up a couple",
    "start": "1035110",
    "end": "1036550"
  },
  {
    "text": "of",
    "start": "1036550",
    "end": "1036760"
  },
  {
    "text": "additional buttons as well and these",
    "start": "1036760",
    "end": "1038589"
  },
  {
    "text": "buttons will take additional properties",
    "start": "1038589",
    "end": "1040240"
  },
  {
    "text": "on the NB button directive and the",
    "start": "1040240",
    "end": "1042610"
  },
  {
    "text": "design system provides a lot of",
    "start": "1042610",
    "end": "1044199"
  },
  {
    "text": "different ways to customize the button",
    "start": "1044199",
    "end": "1045790"
  },
  {
    "text": "right out-of-the-box for example we'll",
    "start": "1045790",
    "end": "1047800"
  },
  {
    "text": "use this hero button which gives it a",
    "start": "1047800",
    "end": "1049360"
  },
  {
    "text": "nice little gradient but check out the",
    "start": "1049360",
    "end": "1051160"
  },
  {
    "text": "component library and the docs for a",
    "start": "1051160",
    "end": "1052750"
  },
  {
    "text": "full set of examples then we'll",
    "start": "1052750",
    "end": "1054550"
  },
  {
    "text": "conditionally render each button",
    "start": "1054550",
    "end": "1055810"
  },
  {
    "text": "depending on whether or not the value is",
    "start": "1055810",
    "end": "1057370"
  },
  {
    "text": "X or O",
    "start": "1057370",
    "end": "1058480"
  },
  {
    "text": "using the ngf directive now I realize",
    "start": "1058480",
    "end": "1060850"
  },
  {
    "text": "I'm going through this code very fast",
    "start": "1060850",
    "end": "1062200"
  },
  {
    "text": "but again make sure to reference the",
    "start": "1062200",
    "end": "1064000"
  },
  {
    "text": "link to github in the video description",
    "start": "1064000",
    "end": "1065500"
  },
  {
    "text": "to find the full project source code and",
    "start": "1065500",
    "end": "1068050"
  },
  {
    "text": "one last thing I'll do is also go into",
    "start": "1068050",
    "end": "1070120"
  },
  {
    "text": "the board component and for the start",
    "start": "1070120",
    "end": "1072370"
  },
  {
    "text": "new game button we'll go ahead and",
    "start": "1072370",
    "end": "1073780"
  },
  {
    "text": "display an outline button there and with",
    "start": "1073780",
    "end": "1076180"
  },
  {
    "text": "just a few minor changes we now have a",
    "start": "1076180",
    "end": "1078010"
  },
  {
    "text": "much better looking game of tic-tac-toe",
    "start": "1078010",
    "end": "1079720"
  },
  {
    "text": "so this kind of highlights my favorite",
    "start": "1079720",
    "end": "1082000"
  },
  {
    "text": "thing about angular and that is getting",
    "start": "1082000",
    "end": "1083620"
  },
  {
    "text": "things done quickly the tooling truly is",
    "start": "1083620",
    "end": "1085990"
  },
  {
    "text": "amazing and there's a lot less",
    "start": "1085990",
    "end": "1087400"
  },
  {
    "text": "configuration required to get to",
    "start": "1087400",
    "end": "1088900"
  },
  {
    "text": "something meaningful but there's still",
    "start": "1088900",
    "end": "1090820"
  },
  {
    "text": "one more thing I promised you and that's",
    "start": "1090820",
    "end": "1092500"
  },
  {
    "text": "to make this a progressive web app that",
    "start": "1092500",
    "end": "1094180"
  },
  {
    "text": "can be installed as a native app and",
    "start": "1094180",
    "end": "1095920"
  },
  {
    "text": "believe it or not that's actually the",
    "start": "1095920",
    "end": "1097750"
  },
  {
    "text": "easiest part of this entire video let's",
    "start": "1097750",
    "end": "1100120"
  },
  {
    "text": "head over to the angular console click",
    "start": "1100120",
    "end": "1102010"
  },
  {
    "text": "on add and then you'll see a full list",
    "start": "1102010",
    "end": "1103870"
  },
  {
    "text": "of the different schematics that are",
    "start": "1103870",
    "end": "1105250"
  },
  {
    "text": "available to you the one we're",
    "start": "1105250",
    "end": "1106840"
  },
  {
    "text": "interested in is at angular /pwa when",
    "start": "1106840",
    "end": "1110620"
  },
  {
    "text": "you run this command it does several",
    "start": "1110620",
    "end": "1111850"
  },
  {
    "text": "important things related to pwace the",
    "start": "1111850",
    "end": "1114610"
  },
  {
    "text": "first thing it does is add the",
    "start": "1114610",
    "end": "1116020"
  },
  {
    "text": "JavaScript code needed to load a",
    "start": "1116020",
    "end": "1117670"
  },
  {
    "text": "serviceworker in the angular app and",
    "start": "1117670",
    "end": "1119530"
  },
  {
    "text": "then it gives you a configuration file",
    "start": "1119530",
    "end": "1121450"
  },
  {
    "text": "that you can use to customize the",
    "start": "1121450",
    "end": "1123040"
  },
  {
    "text": "behavior of the serviceworker and the",
    "start": "1123040",
    "end": "1125350"
  },
  {
    "text": "worker is there primarily to make your",
    "start": "1125350",
    "end": "1127030"
  },
  {
    "text": "app work offline so you can customize",
    "start": "1127030",
    "end": "1129010"
  },
  {
    "text": "the behavior of how those pages are",
    "start": "1129010",
    "end": "1130690"
  },
  {
    "text": "cached and stored offline and then",
    "start": "1130690",
    "end": "1133060"
  },
  {
    "text": "you'll also notice that it adds a",
    "start": "1133060",
    "end": "1134350"
  },
  {
    "text": "manifest file and some icons for the",
    "start": "1134350",
    "end": "1136630"
  },
  {
    "text": "actual install button for the app now in",
    "start": "1136630",
    "end": "1139240"
  },
  {
    "text": "order to determine if we have a valid",
    "start": "1139240",
    "end": "1140980"
  },
  {
    "text": "progressive web app we need to run this",
    "start": "1140980",
    "end": "1142870"
  },
  {
    "text": "app in a production environment so the",
    "start": "1142870",
    "end": "1144970"
  },
  {
    "text": "first step in that process is to run ng",
    "start": "1144970",
    "end": "1147100"
  },
  {
    "text": "build which we can do with the angular",
    "start": "1147100",
    "end": "1148750"
  },
  {
    "text": "console and that will compile all of our",
    "start": "1148750",
    "end": "1150970"
  },
  {
    "text": "typescript code down to JavaScript in",
    "start": "1150970",
    "end": "1152710"
  },
  {
    "text": "the dist folder there's just one thing",
    "start": "1152710",
    "end": "1154810"
  },
  {
    "text": "missing and that's an actual place to",
    "start": "1154810",
    "end": "1156670"
  },
  {
    "text": "deploy our code my personal favourite",
    "start": "1156670",
    "end": "1158590"
  },
  {
    "text": "place is firebase and we can easily add",
    "start": "1158590",
    "end": "1160840"
  },
  {
    "text": "firebase to an angular project by",
    "start": "1160840",
    "end": "1162640"
  },
  {
    "text": "running ng add at angular fire this is",
    "start": "1162640",
    "end": "1165610"
  },
  {
    "text": "going to ask you for a firebase project",
    "start": "1165610",
    "end": "1167710"
  },
  {
    "text": "so you'll need to have signed up for a",
    "start": "1167710",
    "end": "1169330"
  },
  {
    "text": "firebase account if you",
    "start": "1169330",
    "end": "1170410"
  },
  {
    "text": "don't have one already and firebase",
    "start": "1170410",
    "end": "1172210"
  },
  {
    "text": "hosting can be used on the free tier by",
    "start": "1172210",
    "end": "1174100"
  },
  {
    "text": "the way the only thing left to do at",
    "start": "1174100",
    "end": "1175750"
  },
  {
    "text": "this point is run ng deploy that's going",
    "start": "1175750",
    "end": "1178390"
  },
  {
    "text": "to automatically deploy our production",
    "start": "1178390",
    "end": "1180280"
  },
  {
    "text": "app to the firebase hosting account that",
    "start": "1180280",
    "end": "1182860"
  },
  {
    "text": "will give you the hosting URL when it's",
    "start": "1182860",
    "end": "1184390"
  },
  {
    "text": "finished and now we can play tic-tac-toe",
    "start": "1184390",
    "end": "1186280"
  },
  {
    "text": "on the web but here's the coolest thing",
    "start": "1186280",
    "end": "1188290"
  },
  {
    "text": "about this if we go to the audits tab in",
    "start": "1188290",
    "end": "1190390"
  },
  {
    "text": "chrome dev tools we can analyze our app",
    "start": "1190390",
    "end": "1192550"
  },
  {
    "text": "as a PWA and you can see we hit the",
    "start": "1192550",
    "end": "1194860"
  },
  {
    "text": "green check marks on everything and what",
    "start": "1194860",
    "end": "1197170"
  },
  {
    "text": "this means for the end user is that the",
    "start": "1197170",
    "end": "1198940"
  },
  {
    "text": "app is now installable on their device",
    "start": "1198940",
    "end": "1200680"
  },
  {
    "text": "and pwace are supported pretty much",
    "start": "1200680",
    "end": "1202780"
  },
  {
    "text": "everywhere now in fact we can even",
    "start": "1202780",
    "end": "1204610"
  },
  {
    "text": "install it on Windows desktop by hitting",
    "start": "1204610",
    "end": "1206920"
  },
  {
    "text": "the install button in chrome it will add",
    "start": "1206920",
    "end": "1208810"
  },
  {
    "text": "a shortcut to the desktop and it will",
    "start": "1208810",
    "end": "1210610"
  },
  {
    "text": "open up the app in an actual Windows",
    "start": "1210610",
    "end": "1212440"
  },
  {
    "text": "window and now people can use your web",
    "start": "1212440",
    "end": "1214360"
  },
  {
    "text": "app as if it were a traditional desktop",
    "start": "1214360",
    "end": "1216250"
  },
  {
    "text": "app and the same goes for mobile apps as",
    "start": "1216250",
    "end": "1218470"
  },
  {
    "text": "well so I'll just finish up by saying",
    "start": "1218470",
    "end": "1220270"
  },
  {
    "text": "that angular is a really awesome tool",
    "start": "1220270",
    "end": "1222070"
  },
  {
    "text": "when you know how to use it and if you",
    "start": "1222070",
    "end": "1223900"
  },
  {
    "text": "want to go beyond the basics and learn",
    "start": "1223900",
    "end": "1225550"
  },
  {
    "text": "how to build a real world progressive",
    "start": "1225550",
    "end": "1227320"
  },
  {
    "text": "web app consider becoming a pro member",
    "start": "1227320",
    "end": "1229270"
  },
  {
    "text": "at fire ship IO you'll get access to the",
    "start": "1229270",
    "end": "1231520"
  },
  {
    "text": "brand new angular 8 course and a whole",
    "start": "1231520",
    "end": "1233800"
  },
  {
    "text": "bunch of other Pro content thanks for",
    "start": "1233800",
    "end": "1235750"
  },
  {
    "text": "watching and I will talk to you soon",
    "start": "1235750",
    "end": "1239050"
  },
  {
    "text": "[Music]",
    "start": "1239050",
    "end": "1247210"
  }
]