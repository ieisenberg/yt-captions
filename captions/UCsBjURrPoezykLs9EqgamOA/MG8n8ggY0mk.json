[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "angular's reactive form module allows",
    "start": "399",
    "end": "2560"
  },
  {
    "text": "you to build reliable yet complex forms",
    "start": "2560",
    "end": "5080"
  },
  {
    "text": "throughout your application in this",
    "start": "5080",
    "end": "6879"
  },
  {
    "text": "episode we're going to talk about how to",
    "start": "6879",
    "end": "8320"
  },
  {
    "text": "use the reactive form module along with",
    "start": "8320",
    "end": "10360"
  },
  {
    "text": "the Firebase real-time database what",
    "start": "10360",
    "end": "13040"
  },
  {
    "text": "we're building is just a simple form for",
    "start": "13040",
    "end": "14960"
  },
  {
    "text": "classified ads rather than use a",
    "start": "14960",
    "end": "17119"
  },
  {
    "text": "traditional form submit button we're",
    "start": "17119",
    "end": "18960"
  },
  {
    "text": "going to update the form in the database",
    "start": "18960",
    "end": "21279"
  },
  {
    "text": "anytime a value changes in my opinion",
    "start": "21279",
    "end": "23760"
  },
  {
    "text": "this provides a better user experience",
    "start": "23760",
    "end": "25800"
  },
  {
    "text": "and it also prevents data from being",
    "start": "25800",
    "end": "27320"
  },
  {
    "text": "lost if the page is refreshed so what is",
    "start": "27320",
    "end": "30519"
  },
  {
    "start": "29000",
    "end": "64000"
  },
  {
    "text": "a reactive form basically it's just a",
    "start": "30519",
    "end": "32640"
  },
  {
    "text": "form that's been defined in the",
    "start": "32640",
    "end": "33879"
  },
  {
    "text": "component typescript to give it a",
    "start": "33879",
    "end": "35719"
  },
  {
    "text": "synchronous flow of data this gives you",
    "start": "35719",
    "end": "38120"
  },
  {
    "text": "better control over logic and validation",
    "start": "38120",
    "end": "40440"
  },
  {
    "text": "as well as making testing a lot easier",
    "start": "40440",
    "end": "43000"
  },
  {
    "text": "the other type of form is a template",
    "start": "43000",
    "end": "44760"
  },
  {
    "text": "driven form which uses NG model to build",
    "start": "44760",
    "end": "47440"
  },
  {
    "text": "the form in the component HTML the",
    "start": "47440",
    "end": "50160"
  },
  {
    "text": "benefit is that you can create forms",
    "start": "50160",
    "end": "51879"
  },
  {
    "text": "with less code however the drawback is",
    "start": "51879",
    "end": "54239"
  },
  {
    "text": "that they're harder to maintain",
    "start": "54239",
    "end": "55680"
  },
  {
    "text": "especially as the form grows larger and",
    "start": "55680",
    "end": "57359"
  },
  {
    "text": "more complex so A good rule to follow is",
    "start": "57359",
    "end": "59559"
  },
  {
    "text": "if you're building a big complex form",
    "start": "59559",
    "end": "62120"
  },
  {
    "text": "you should probably go with the reactive",
    "start": "62120",
    "end": "64000"
  },
  {
    "start": "64000",
    "end": "78000"
  },
  {
    "text": "form module reactive forms are kept in",
    "start": "64000",
    "end": "66680"
  },
  {
    "text": "their own module so we'll need to import",
    "start": "66680",
    "end": "68840"
  },
  {
    "text": "that in whichever module we plan on",
    "start": "68840",
    "end": "70520"
  },
  {
    "text": "using it in in this example we import",
    "start": "70520",
    "end": "72920"
  },
  {
    "text": "the reactive forms module into our app",
    "start": "72920",
    "end": "75200"
  },
  {
    "text": "module and then add it to the import",
    "start": "75200",
    "end": "77799"
  },
  {
    "text": "section now we can start building the ad",
    "start": "77799",
    "end": "80320"
  },
  {
    "start": "78000",
    "end": "130000"
  },
  {
    "text": "service that will get data from Firebase",
    "start": "80320",
    "end": "82320"
  },
  {
    "text": "for our classified ads I'm also going to",
    "start": "82320",
    "end": "84479"
  },
  {
    "text": "create an ad listing class which will",
    "start": "84479",
    "end": "86680"
  },
  {
    "text": "populate some default data whenever we",
    "start": "86680",
    "end": "88560"
  },
  {
    "text": "start a new ad from scratch so our",
    "start": "88560",
    "end": "90680"
  },
  {
    "text": "classified ads will have a title some",
    "start": "90680",
    "end": "92720"
  },
  {
    "text": "content a price and an image from there",
    "start": "92720",
    "end": "96200"
  },
  {
    "text": "we can inject the angular fire database",
    "start": "96200",
    "end": "98640"
  },
  {
    "text": "and then we'll create a function that",
    "start": "98640",
    "end": "100159"
  },
  {
    "text": "will create a new ad in the database",
    "start": "100159",
    "end": "102640"
  },
  {
    "text": "this function will push a new ad listing",
    "start": "102640",
    "end": "104520"
  },
  {
    "text": "to a Firebase list observable but",
    "start": "104520",
    "end": "106920"
  },
  {
    "text": "instead of returning that full list",
    "start": "106920",
    "end": "108399"
  },
  {
    "text": "observable we'll just grab the key and",
    "start": "108399",
    "end": "110920"
  },
  {
    "text": "then return the newly created object as",
    "start": "110920",
    "end": "112880"
  },
  {
    "text": "an object observable you can call Key",
    "start": "112880",
    "end": "116000"
  },
  {
    "text": "after you call push and that'll return",
    "start": "116000",
    "end": "117960"
  },
  {
    "text": "the push key from Firebase then you can",
    "start": "117960",
    "end": "120560"
  },
  {
    "text": "just pass that key to another object",
    "start": "120560",
    "end": "122680"
  },
  {
    "text": "observable query then we'll create",
    "start": "122680",
    "end": "124920"
  },
  {
    "text": "another function that will just update",
    "start": "124920",
    "end": "126799"
  },
  {
    "text": "an existing object in the database with",
    "start": "126799",
    "end": "128840"
  },
  {
    "text": "new",
    "start": "128840",
    "end": "130160"
  },
  {
    "start": "130000",
    "end": "352000"
  },
  {
    "text": "data now let's go into the component",
    "start": "130160",
    "end": "133239"
  },
  {
    "text": "typescript we will import the ad service",
    "start": "133239",
    "end": "136280"
  },
  {
    "text": "and also form group form Builder and",
    "start": "136280",
    "end": "139239"
  },
  {
    "text": "validators from angular",
    "start": "139239",
    "end": "141239"
  },
  {
    "text": "forms then we'll set up a variable for",
    "start": "141239",
    "end": "143760"
  },
  {
    "text": "add which is just the Firebase object",
    "start": "143760",
    "end": "145959"
  },
  {
    "text": "observable and also add form which will",
    "start": "145959",
    "end": "148599"
  },
  {
    "text": "be a form group then we inject our ad",
    "start": "148599",
    "end": "151120"
  },
  {
    "text": "service and the form builder in the",
    "start": "151120",
    "end": "153480"
  },
  {
    "text": "Constructor the way our feature works is",
    "start": "153480",
    "end": "155800"
  },
  {
    "text": "that when the user clicks the button to",
    "start": "155800",
    "end": "157480"
  },
  {
    "text": "create a new ad listing it will save",
    "start": "157480",
    "end": "159680"
  },
  {
    "text": "some default data in the database and",
    "start": "159680",
    "end": "161440"
  },
  {
    "text": "then allow them to edit it from there",
    "start": "161440",
    "end": "163920"
  },
  {
    "text": "the next step is to build the form",
    "start": "163920",
    "end": "165640"
  },
  {
    "text": "itself so we create a function called",
    "start": "165640",
    "end": "167800"
  },
  {
    "text": "build form and then we Define the ad",
    "start": "167800",
    "end": "170120"
  },
  {
    "text": "form variable using the form Builder",
    "start": "170120",
    "end": "172280"
  },
  {
    "text": "group function and we passed a bunch of",
    "start": "172280",
    "end": "174519"
  },
  {
    "text": "attributes that have validators attached",
    "start": "174519",
    "end": "176959"
  },
  {
    "text": "to them these validators are based on",
    "start": "176959",
    "end": "179120"
  },
  {
    "text": "constraint valid a in JavaScript and you",
    "start": "179120",
    "end": "181360"
  },
  {
    "text": "can attach as many as you want to each",
    "start": "181360",
    "end": "183440"
  },
  {
    "text": "attribute in order to sync our data up",
    "start": "183440",
    "end": "185840"
  },
  {
    "text": "with Firebase we need to subscribe to",
    "start": "185840",
    "end": "188080"
  },
  {
    "text": "the object observable and then we'll",
    "start": "188080",
    "end": "190360"
  },
  {
    "text": "populate this reactive form with that",
    "start": "190360",
    "end": "192599"
  },
  {
    "text": "value by calling the patch Value method",
    "start": "192599",
    "end": "194879"
  },
  {
    "text": "on it the only other function we need in",
    "start": "194879",
    "end": "197040"
  },
  {
    "text": "the component is an event handler that",
    "start": "197040",
    "end": "199200"
  },
  {
    "text": "will save the new data to Firebase",
    "start": "199200",
    "end": "201280"
  },
  {
    "text": "anytime a form value changes I also add",
    "start": "201280",
    "end": "203879"
  },
  {
    "text": "a conditional statement here to see if",
    "start": "203879",
    "end": "205239"
  },
  {
    "text": "the form is valid and if it's not valid",
    "start": "205239",
    "end": "207360"
  },
  {
    "text": "we just return so we can't add invalid",
    "start": "207360",
    "end": "209959"
  },
  {
    "text": "data to the database from the front end",
    "start": "209959",
    "end": "212040"
  },
  {
    "text": "you should also add backend database",
    "start": "212040",
    "end": "213799"
  },
  {
    "text": "validation rules in Firebase just to",
    "start": "213799",
    "end": "215519"
  },
  {
    "text": "make sure your data is 100%",
    "start": "215519",
    "end": "217799"
  },
  {
    "text": "secure in the HTML the first thing we'll",
    "start": "217799",
    "end": "220480"
  },
  {
    "text": "do is create a preview of the ad which",
    "start": "220480",
    "end": "223080"
  },
  {
    "text": "just will take the various attributes",
    "start": "223080",
    "end": "225120"
  },
  {
    "text": "and apply the async pipe as well as the",
    "start": "225120",
    "end": "227200"
  },
  {
    "text": "attribute we want to show all pretty",
    "start": "227200",
    "end": "229200"
  },
  {
    "text": "basic stuff here there's a lot of HTML",
    "start": "229200",
    "end": "231680"
  },
  {
    "text": "to get through here so be sure to check",
    "start": "231680",
    "end": "233239"
  },
  {
    "text": "out the link in the description to get",
    "start": "233239",
    "end": "234959"
  },
  {
    "text": "the full code used in this",
    "start": "234959",
    "end": "236720"
  },
  {
    "text": "lesson you add reactive forms to the",
    "start": "236720",
    "end": "239079"
  },
  {
    "text": "HTML by binding the form group to an",
    "start": "239079",
    "end": "242120"
  },
  {
    "text": "HTML form itself from there you can",
    "start": "242120",
    "end": "244840"
  },
  {
    "text": "start adding form inputs to it and the",
    "start": "244840",
    "end": "247200"
  },
  {
    "text": "important part here is that when you add",
    "start": "247200",
    "end": "249360"
  },
  {
    "text": "an input you add the form control name",
    "start": "249360",
    "end": "251560"
  },
  {
    "text": "with the attribute that it's controlling",
    "start": "251560",
    "end": "253879"
  },
  {
    "text": "so in other words this form input will",
    "start": "253879",
    "end": "255840"
  },
  {
    "text": "control the title on our classified ad",
    "start": "255840",
    "end": "258320"
  },
  {
    "text": "and whenever this value changes it will",
    "start": "258320",
    "end": "260600"
  },
  {
    "text": "update the Firebase database then we use",
    "start": "260600",
    "end": "263759"
  },
  {
    "text": "NG class to apply either a red border",
    "start": "263759",
    "end": "265840"
  },
  {
    "text": "when the form is not valid or a green",
    "start": "265840",
    "end": "267680"
  },
  {
    "text": "border when this form attribute is valid",
    "start": "267680",
    "end": "270360"
  },
  {
    "text": "we get the validity state by calling ad",
    "start": "270360",
    "end": "273039"
  },
  {
    "text": "form. getet with the attribute we want",
    "start": "273039",
    "end": "276360"
  },
  {
    "text": "and then valid which will return either",
    "start": "276360",
    "end": "278080"
  },
  {
    "text": "true or false we also want to check for",
    "start": "278080",
    "end": "280280"
  },
  {
    "text": "the dirty State because we don't want",
    "start": "280280",
    "end": "282160"
  },
  {
    "text": "the form to have a bunch of red borders",
    "start": "282160",
    "end": "283680"
  },
  {
    "text": "when it's first loaded the end result is",
    "start": "283680",
    "end": "286000"
  },
  {
    "text": "the toggling of red and green classes",
    "start": "286000",
    "end": "288000"
  },
  {
    "text": "when the form value is empty we can also",
    "start": "288000",
    "end": "290759"
  },
  {
    "text": "use this to display helpful messages to",
    "start": "290759",
    "end": "292639"
  },
  {
    "text": "the user when a form value is invalid in",
    "start": "292639",
    "end": "295160"
  },
  {
    "text": "this case if the title's missing we'll",
    "start": "295160",
    "end": "296800"
  },
  {
    "text": "show a message that says title is",
    "start": "296800",
    "end": "298759"
  },
  {
    "text": "required we can follow the same exact",
    "start": "298759",
    "end": "300919"
  },
  {
    "text": "approach for every other form input and",
    "start": "300919",
    "end": "303080"
  },
  {
    "text": "again I post the code on angular",
    "start": "303080",
    "end": "304479"
  },
  {
    "text": "firebase.com if you want to check out",
    "start": "304479",
    "end": "306160"
  },
  {
    "text": "the entire thing now going back into the",
    "start": "306160",
    "end": "308600"
  },
  {
    "text": "app you can see that when we update the",
    "start": "308600",
    "end": "310360"
  },
  {
    "text": "form it also updates the Firebase",
    "start": "310360",
    "end": "312600"
  },
  {
    "text": "database after every form change event",
    "start": "312600",
    "end": "315120"
  },
  {
    "text": "occurs if you want a more traditional",
    "start": "315120",
    "end": "317080"
  },
  {
    "text": "form experience you could just add a",
    "start": "317080",
    "end": "319039"
  },
  {
    "text": "button here and then fire the update",
    "start": "319039",
    "end": "321280"
  },
  {
    "text": "function whenever the user clicks that",
    "start": "321280",
    "end": "323360"
  },
  {
    "text": "button that's it for reactive forms with",
    "start": "323360",
    "end": "326160"
  },
  {
    "text": "angular 4 and Firebase if this video",
    "start": "326160",
    "end": "328199"
  },
  {
    "text": "helped you please like And subscribe",
    "start": "328199",
    "end": "330360"
  },
  {
    "text": "and if you have any suggestions or if",
    "start": "330360",
    "end": "332120"
  },
  {
    "text": "you want to support the channel consider",
    "start": "332120",
    "end": "333639"
  },
  {
    "text": "becoming a pro member at angular",
    "start": "333639",
    "end": "335600"
  },
  {
    "text": "firebase.com thanks for watching and",
    "start": "335600",
    "end": "338280"
  },
  {
    "text": "I'll see you next time",
    "start": "338280",
    "end": "342080"
  },
  {
    "text": "[Music]",
    "start": "343590",
    "end": "348629"
  }
]