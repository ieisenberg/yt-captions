[
  {
    "text": "I don't log into Facebook often but the",
    "start": "0",
    "end": "1860"
  },
  {
    "text": "last time I did I was super impressed by",
    "start": "1860",
    "end": "3780"
  },
  {
    "text": "its simple intuitive and fast new UI in",
    "start": "3780",
    "end": "6270"
  },
  {
    "text": "today's video I'll show you how to",
    "start": "6270",
    "end": "7740"
  },
  {
    "text": "reverse engineer some of its UI features",
    "start": "7740",
    "end": "9719"
  },
  {
    "text": "specifically the top navigation bar is",
    "start": "9719",
    "end": "12000"
  },
  {
    "text": "icon buttons and this multi-level",
    "start": "12000",
    "end": "13980"
  },
  {
    "text": "animated drop-down will do it using HTML",
    "start": "13980",
    "end": "16650"
  },
  {
    "text": "CSS and because I mentioned the word",
    "start": "16650",
    "end": "18449"
  },
  {
    "text": "Facebook I'm legally obligated to use",
    "start": "18449",
    "end": "20369"
  },
  {
    "text": "react in this demo in the following code",
    "start": "20369",
    "end": "22289"
  },
  {
    "text": "tutorial you'll learn how to create icon",
    "start": "22289",
    "end": "24180"
  },
  {
    "text": "buttons with flexbox you'll learn how to",
    "start": "24180",
    "end": "25980"
  },
  {
    "text": "use CSS transforms to create sliding",
    "start": "25980",
    "end": "28170"
  },
  {
    "text": "animations and fundamental concepts in",
    "start": "28170",
    "end": "30269"
  },
  {
    "text": "react white component composition hooks",
    "start": "30269",
    "end": "32430"
  },
  {
    "text": "and how to create CSS animations based",
    "start": "32430",
    "end": "34739"
  },
  {
    "text": "on the state of your react application",
    "start": "34739",
    "end": "36600"
  },
  {
    "text": "and I'll throw in a bunch of other cool",
    "start": "36600",
    "end": "37950"
  },
  {
    "text": "tips along the way if you're new here",
    "start": "37950",
    "end": "39510"
  },
  {
    "text": "like and subscribe and let me know if",
    "start": "39510",
    "end": "41309"
  },
  {
    "text": "you want to see more beginner friendly",
    "start": "41309",
    "end": "42390"
  },
  {
    "text": "UI tutorials like this in the comments",
    "start": "42390",
    "end": "44430"
  },
  {
    "text": "before we get started let's take a",
    "start": "44430",
    "end": "46050"
  },
  {
    "text": "closer look at what we're building today",
    "start": "46050",
    "end": "47430"
  },
  {
    "text": "by the end of this video",
    "start": "47430",
    "end": "48750"
  },
  {
    "text": "you'll have several reusable react",
    "start": "48750",
    "end": "50280"
  },
  {
    "text": "components that you can use for",
    "start": "50280",
    "end": "51480"
  },
  {
    "text": "navigation and drop downs at the top we",
    "start": "51480",
    "end": "53850"
  },
  {
    "text": "have a navbar component where the",
    "start": "53850",
    "end": "55350"
  },
  {
    "text": "children are nav items represented at",
    "start": "55350",
    "end": "57539"
  },
  {
    "text": "icon buttons these buttons have children",
    "start": "57539",
    "end": "59760"
  },
  {
    "text": "that you can toggle on or off by",
    "start": "59760",
    "end": "61230"
  },
  {
    "text": "clicking them when we click the carrot",
    "start": "61230",
    "end": "62730"
  },
  {
    "text": "it renders our drop down component it",
    "start": "62730",
    "end": "64710"
  },
  {
    "text": "contains multiple drop down items and",
    "start": "64710",
    "end": "66510"
  },
  {
    "text": "the ones with a chevron can toggle to a",
    "start": "66510",
    "end": "68549"
  },
  {
    "text": "secondary drop down menu notice how the",
    "start": "68549",
    "end": "70710"
  },
  {
    "text": "hold menu slides out to the left and the",
    "start": "70710",
    "end": "72540"
  },
  {
    "text": "new one comes in from the right and",
    "start": "72540",
    "end": "73830"
  },
  {
    "text": "because the height of the two menus",
    "start": "73830",
    "end": "75240"
  },
  {
    "text": "won't be the same we'll animate that as",
    "start": "75240",
    "end": "76860"
  },
  {
    "text": "well now before we get started I'd just",
    "start": "76860",
    "end": "78659"
  },
  {
    "text": "like to say this is a beginner friendly",
    "start": "78659",
    "end": "79920"
  },
  {
    "text": "video but we move at a very fast pace on",
    "start": "79920",
    "end": "82020"
  },
  {
    "text": "this channel so feel free to pause the",
    "start": "82020",
    "end": "83790"
  },
  {
    "text": "video or slow down the playback speed as",
    "start": "83790",
    "end": "85470"
  },
  {
    "text": "you follow along the first thing we'll",
    "start": "85470",
    "end": "87210"
  },
  {
    "text": "need is a react app assuming you have no",
    "start": "87210",
    "end": "89100"
  },
  {
    "text": "js' installed open up the command line",
    "start": "89100",
    "end": "90960"
  },
  {
    "text": "and run npx create react app and of",
    "start": "90960",
    "end": "93600"
  },
  {
    "text": "course the name of our app is Facebook",
    "start": "93600",
    "end": "95220"
  },
  {
    "text": "to keep this demo simple I'm going to",
    "start": "95220",
    "end": "97259"
  },
  {
    "text": "delete everything that's not the index",
    "start": "97259",
    "end": "99119"
  },
  {
    "text": "JSF KS or index dot CSS files the",
    "start": "99119",
    "end": "102750"
  },
  {
    "text": "index.js file is your initial entry",
    "start": "102750",
    "end": "104610"
  },
  {
    "text": "point I'll go ahead and remove the",
    "start": "104610",
    "end": "105899"
  },
  {
    "text": "serviceworker stuff here then you can",
    "start": "105899",
    "end": "107670"
  },
  {
    "text": "ignore this file for the rest of the",
    "start": "107670",
    "end": "108930"
  },
  {
    "text": "video from there I'm removing all the",
    "start": "108930",
    "end": "110670"
  },
  {
    "text": "boilerplate code from the app.js file",
    "start": "110670",
    "end": "112530"
  },
  {
    "text": "will be using functional react",
    "start": "112530",
    "end": "114210"
  },
  {
    "text": "components in this video when you see a",
    "start": "114210",
    "end": "115829"
  },
  {
    "text": "function whose name starts with a",
    "start": "115829",
    "end": "117299"
  },
  {
    "text": "capital letter you can think of that as",
    "start": "117299",
    "end": "118920"
  },
  {
    "text": "a component the return value of a",
    "start": "118920",
    "end": "120840"
  },
  {
    "text": "functional component is your UI or HTML",
    "start": "120840",
    "end": "123390"
  },
  {
    "text": "or more specifically JSX JSX is not",
    "start": "123390",
    "end": "126420"
  },
  {
    "text": "actually HTML but it's a syntax",
    "start": "126420",
    "end": "128340"
  },
  {
    "text": "extension for JavaScript that allows you",
    "start": "128340",
    "end": "130349"
  },
  {
    "text": "to write HTML like templates in your",
    "start": "130349",
    "end": "132270"
  },
  {
    "text": "components",
    "start": "132270",
    "end": "133020"
  },
  {
    "text": "but before we get too deep into react",
    "start": "133020",
    "end": "134670"
  },
  {
    "text": "let's open up the index CSS file the CSS",
    "start": "134670",
    "end": "137580"
  },
  {
    "text": "in this video is pretty generic so feel",
    "start": "137580",
    "end": "139500"
  },
  {
    "text": "free to use it with your favorite",
    "start": "139500",
    "end": "140550"
  },
  {
    "text": "framework I'm starting by defining some",
    "start": "140550",
    "end": "142710"
  },
  {
    "text": "global CSS variables that we can think",
    "start": "142710",
    "end": "144780"
  },
  {
    "text": "of as our theme and I'm also defining a",
    "start": "144780",
    "end": "147030"
  },
  {
    "text": "speed variable that represents the",
    "start": "147030",
    "end": "148710"
  },
  {
    "text": "animation speed which will come into",
    "start": "148710",
    "end": "150480"
  },
  {
    "text": "play later in the video then below that",
    "start": "150480",
    "end": "152220"
  },
  {
    "text": "I'm overriding the default unordered",
    "start": "152220",
    "end": "154290"
  },
  {
    "text": "list style and then for our link",
    "start": "154290",
    "end": "156030"
  },
  {
    "text": "elements I'll match them to the text",
    "start": "156030",
    "end": "157740"
  },
  {
    "text": "color variable in our color scheme that",
    "start": "157740",
    "end": "159360"
  },
  {
    "text": "takes care of our initial setup now",
    "start": "159360",
    "end": "161100"
  },
  {
    "text": "we're ready to start building the top",
    "start": "161100",
    "end": "162510"
  },
  {
    "text": "navigation bar react and especially",
    "start": "162510",
    "end": "164610"
  },
  {
    "text": "functional components make it really",
    "start": "164610",
    "end": "166290"
  },
  {
    "text": "easy to break your application down into",
    "start": "166290",
    "end": "168360"
  },
  {
    "text": "a lot of small reusable pieces and this",
    "start": "168360",
    "end": "170670"
  },
  {
    "text": "is a practice that we call a component",
    "start": "170670",
    "end": "172290"
  },
  {
    "text": "composition in our App J's file we'll",
    "start": "172290",
    "end": "174540"
  },
  {
    "text": "define a new component named navbar and",
    "start": "174540",
    "end": "176610"
  },
  {
    "text": "it returns JSX inside these parentheses",
    "start": "176610",
    "end": "178980"
  },
  {
    "text": "we'll go ahead and add an HTML nav",
    "start": "178980",
    "end": "180930"
  },
  {
    "text": "element with an unordered list inside of",
    "start": "180930",
    "end": "183000"
  },
  {
    "text": "it we can apply a CSS class to these",
    "start": "183000",
    "end": "185250"
  },
  {
    "text": "elements using class name notice how",
    "start": "185250",
    "end": "187200"
  },
  {
    "text": "this is different than regular HTML",
    "start": "187200",
    "end": "188700"
  },
  {
    "text": "which is normally just class and we'll",
    "start": "188700",
    "end": "190890"
  },
  {
    "text": "apply a class for navbar and navbar now",
    "start": "190890",
    "end": "192960"
  },
  {
    "text": "have to make these elements easy to",
    "start": "192960",
    "end": "194340"
  },
  {
    "text": "style now if we go up to the JSX for the",
    "start": "194340",
    "end": "196980"
  },
  {
    "text": "app component we can declare this navbar",
    "start": "196980",
    "end": "199230"
  },
  {
    "text": "there and notice how we declare it",
    "start": "199230",
    "end": "200730"
  },
  {
    "text": "almost like a regular HTML element now",
    "start": "200730",
    "end": "203250"
  },
  {
    "text": "I'm going to open up the CSS here on the",
    "start": "203250",
    "end": "205170"
  },
  {
    "text": "right side and we'll apply some styles",
    "start": "205170",
    "end": "206640"
  },
  {
    "text": "to the navbar the navbar is basically",
    "start": "206640",
    "end": "209010"
  },
  {
    "text": "just a rectangle that sits at the top",
    "start": "209010",
    "end": "210600"
  },
  {
    "text": "we'll give it a fixed height based on",
    "start": "210600",
    "end": "212580"
  },
  {
    "text": "our nav size variable and then some",
    "start": "212580",
    "end": "214560"
  },
  {
    "text": "coloring and padding the unordered list",
    "start": "214560",
    "end": "216780"
  },
  {
    "text": "that sits inside the nav is the",
    "start": "216780",
    "end": "218250"
  },
  {
    "text": "container for the children which we'll",
    "start": "218250",
    "end": "219959"
  },
  {
    "text": "set up as a flexible row we want it to",
    "start": "219959",
    "end": "222780"
  },
  {
    "text": "take up 100% of the width and the height",
    "start": "222780",
    "end": "224850"
  },
  {
    "text": "of the parent and then we'll set the",
    "start": "224850",
    "end": "226620"
  },
  {
    "text": "display property to flex and we could",
    "start": "226620",
    "end": "228540"
  },
  {
    "text": "have all the children's start on the",
    "start": "228540",
    "end": "229860"
  },
  {
    "text": "right-hand side instead of the default",
    "start": "229860",
    "end": "231360"
  },
  {
    "text": "left side by saying justified content",
    "start": "231360",
    "end": "233670"
  },
  {
    "text": "flex and now at this point we have some",
    "start": "233670",
    "end": "236250"
  },
  {
    "text": "actual UI that we can take a look at go",
    "start": "236250",
    "end": "238380"
  },
  {
    "text": "ahead and run NPM start from the command",
    "start": "238380",
    "end": "240180"
  },
  {
    "text": "line to serve your app it should open in",
    "start": "240180",
    "end": "242100"
  },
  {
    "text": "the browser automatically and you should",
    "start": "242100",
    "end": "243780"
  },
  {
    "text": "see this horizontal gray bar up at the",
    "start": "243780",
    "end": "245520"
  },
  {
    "text": "top and now the question becomes how do",
    "start": "245520",
    "end": "247410"
  },
  {
    "text": "we add items or children inside the",
    "start": "247410",
    "end": "249510"
  },
  {
    "text": "navbar in react components can pass data",
    "start": "249510",
    "end": "251910"
  },
  {
    "text": "and UI elements to each other using",
    "start": "251910",
    "end": "253920"
  },
  {
    "text": "props add props as an argument to your",
    "start": "253920",
    "end": "256109"
  },
  {
    "text": "function and then you can reference it",
    "start": "256109",
    "end": "257549"
  },
  {
    "text": "in your template props has a built in",
    "start": "257549",
    "end": "259530"
  },
  {
    "text": "property name children and it will",
    "start": "259530",
    "end": "261209"
  },
  {
    "text": "project or reference any UI elements",
    "start": "261210",
    "end": "263580"
  },
  {
    "text": "that you pass in inside of the actual",
    "start": "263580",
    "end": "265750"
  },
  {
    "text": "of that component for example if we go",
    "start": "265750",
    "end": "268210"
  },
  {
    "text": "up to our navbar and add a list item",
    "start": "268210",
    "end": "269950"
  },
  {
    "text": "inside of its tags it will be rendered",
    "start": "269950",
    "end": "271810"
  },
  {
    "text": "in the location that we called prop",
    "start": "271810",
    "end": "273520"
  },
  {
    "text": "stock children so if we open up the",
    "start": "273520",
    "end": "275140"
  },
  {
    "text": "browser you should see the letter X here",
    "start": "275140",
    "end": "276910"
  },
  {
    "text": "up in the top left corner but this gives",
    "start": "276910",
    "end": "278830"
  },
  {
    "text": "us a great opportunity to create a new",
    "start": "278830",
    "end": "280480"
  },
  {
    "text": "component called a nav item our nav item",
    "start": "280480",
    "end": "283660"
  },
  {
    "text": "component will also take props and we'll",
    "start": "283660",
    "end": "285490"
  },
  {
    "text": "set up a list item as its main element",
    "start": "285490",
    "end": "287620"
  },
  {
    "text": "and then we'll nest in a or link element",
    "start": "287620",
    "end": "290200"
  },
  {
    "text": "inside of it the a element represents",
    "start": "290200",
    "end": "292180"
  },
  {
    "text": "the icon button so we'll give it a CSS",
    "start": "292180",
    "end": "294070"
  },
  {
    "text": "class accordingly now this time instead",
    "start": "294070",
    "end": "296080"
  },
  {
    "text": "of referencing props children we're",
    "start": "296080",
    "end": "298030"
  },
  {
    "text": "going to pass our own custom prop called",
    "start": "298030",
    "end": "299919"
  },
  {
    "text": "an icon instead of adding UI elements",
    "start": "299919",
    "end": "302110"
  },
  {
    "text": "inside of the tags we reference our icon",
    "start": "302110",
    "end": "304090"
  },
  {
    "text": "prop as we would with a regular HTML",
    "start": "304090",
    "end": "306250"
  },
  {
    "text": "attribute so props allow you to pass",
    "start": "306250",
    "end": "308830"
  },
  {
    "text": "data from the parent to the child",
    "start": "308830",
    "end": "310180"
  },
  {
    "text": "similar to how you might pass an",
    "start": "310180",
    "end": "312010"
  },
  {
    "text": "argument to a JavaScript function",
    "start": "312010",
    "end": "313480"
  },
  {
    "text": "because remember your react component is",
    "start": "313480",
    "end": "315430"
  },
  {
    "text": "just a JavaScript function for now I'm",
    "start": "315430",
    "end": "317440"
  },
  {
    "text": "just going to pass some emoji icons so",
    "start": "317440",
    "end": "319300"
  },
  {
    "text": "we can focus on the CSS each nav item is",
    "start": "319300",
    "end": "321730"
  },
  {
    "text": "a box that is slightly smaller than the",
    "start": "321730",
    "end": "323500"
  },
  {
    "text": "nav bar itself an easy way to manage its",
    "start": "323500",
    "end": "325720"
  },
  {
    "text": "width is to calculate it dynamically so",
    "start": "325720",
    "end": "328240"
  },
  {
    "text": "we'll take our nav size variable which",
    "start": "328240",
    "end": "330040"
  },
  {
    "text": "is 60 pixels and we'll multiply it by",
    "start": "330040",
    "end": "332500"
  },
  {
    "text": "0.08 or 80% with the calc function now",
    "start": "332500",
    "end": "335890"
  },
  {
    "text": "each of these now items should display",
    "start": "335890",
    "end": "337570"
  },
  {
    "text": "their children directly in the center we",
    "start": "337570",
    "end": "339340"
  },
  {
    "text": "can easily do that with flexbox by",
    "start": "339340",
    "end": "341020"
  },
  {
    "text": "aligning items to the center and just",
    "start": "341020",
    "end": "342520"
  },
  {
    "text": "find the content to the center so that",
    "start": "342520",
    "end": "344860"
  },
  {
    "text": "gives us a box with its children in the",
    "start": "344860",
    "end": "346570"
  },
  {
    "text": "middle but now we want an icon button",
    "start": "346570",
    "end": "348490"
  },
  {
    "text": "with a circular shape I'm going to scope",
    "start": "348490",
    "end": "350410"
  },
  {
    "text": "a new CSS variable to this class called",
    "start": "350410",
    "end": "352510"
  },
  {
    "text": "button size it also uses the calc",
    "start": "352510",
    "end": "354550"
  },
  {
    "text": "function to give us a size that is",
    "start": "354550",
    "end": "356530"
  },
  {
    "text": "exactly 50% of the original navbar size",
    "start": "356530",
    "end": "359320"
  },
  {
    "text": "and now we can apply that value to the",
    "start": "359320",
    "end": "361240"
  },
  {
    "text": "width and the height of this class and",
    "start": "361240",
    "end": "362770"
  },
  {
    "text": "then to make the shape circular we can",
    "start": "362770",
    "end": "364690"
  },
  {
    "text": "apply a border radius of 50% which",
    "start": "364690",
    "end": "367090"
  },
  {
    "text": "creates a perfect circle now inside of",
    "start": "367090",
    "end": "369010"
  },
  {
    "text": "this circle we also want to Center the",
    "start": "369010",
    "end": "370810"
  },
  {
    "text": "children directly in the middle so again",
    "start": "370810",
    "end": "372640"
  },
  {
    "text": "we'll set up a Flex container and a line",
    "start": "372640",
    "end": "374560"
  },
  {
    "text": "and justify everything to the center if",
    "start": "374560",
    "end": "376300"
  },
  {
    "text": "you open your app in the browser you",
    "start": "376300",
    "end": "377919"
  },
  {
    "text": "should now see these three icon buttons",
    "start": "377919",
    "end": "379570"
  },
  {
    "text": "here at the top as an added touch we",
    "start": "379570",
    "end": "381400"
  },
  {
    "text": "might want to change the color slightly",
    "start": "381400",
    "end": "382870"
  },
  {
    "text": "when these items are hovered over an",
    "start": "382870",
    "end": "384460"
  },
  {
    "text": "easy way to handle that is with a CSS",
    "start": "384460",
    "end": "386470"
  },
  {
    "text": "transition we'll apply it to the filter",
    "start": "386470",
    "end": "388750"
  },
  {
    "text": "property and set it to a duration of 300",
    "start": "388750",
    "end": "391090"
  },
  {
    "text": "milliseconds then we'll target the hover",
    "start": "391090",
    "end": "393340"
  },
  {
    "text": "cito selector on the icon button and",
    "start": "393340",
    "end": "395289"
  },
  {
    "text": "we'll filter its brightness to 1.2 to",
    "start": "395289",
    "end": "397750"
  },
  {
    "text": "make it slightly brighter as we have",
    "start": "397750",
    "end": "399320"
  },
  {
    "text": "over it however in the full demo and on",
    "start": "399320",
    "end": "401570"
  },
  {
    "text": "Facebook you'll notice that it's using",
    "start": "401570",
    "end": "403160"
  },
  {
    "text": "SVG icons you can find all the SVG s I",
    "start": "403160",
    "end": "405950"
  },
  {
    "text": "used in the source code on github they",
    "start": "405950",
    "end": "407690"
  },
  {
    "text": "live in this icons directory but how do",
    "start": "407690",
    "end": "409700"
  },
  {
    "text": "we use these SVG icons and react it's",
    "start": "409700",
    "end": "411920"
  },
  {
    "text": "actually very easy to use an SVG icon as",
    "start": "411920",
    "end": "414230"
  },
  {
    "text": "a react component directly in your code",
    "start": "414230",
    "end": "415820"
  },
  {
    "text": "at an import statement to the top of the",
    "start": "415820",
    "end": "418070"
  },
  {
    "text": "file that references the path to your",
    "start": "418070",
    "end": "419690"
  },
  {
    "text": "SVG icon you import a react component",
    "start": "419690",
    "end": "421670"
  },
  {
    "text": "and then name it whatever you want using",
    "start": "421670",
    "end": "423830"
  },
  {
    "text": "the as keyword and then you can do the",
    "start": "423830",
    "end": "425390"
  },
  {
    "text": "same thing for all the other SVG is that",
    "start": "425390",
    "end": "427400"
  },
  {
    "text": "you want to use in your code from there",
    "start": "427400",
    "end": "429500"
  },
  {
    "text": "we can go back down to our navbar and",
    "start": "429500",
    "end": "431240"
  },
  {
    "text": "instead of using an emoji",
    "start": "431240",
    "end": "432590"
  },
  {
    "text": "we'll use braces to pass on one of our",
    "start": "432590",
    "end": "434780"
  },
  {
    "text": "SVG components directly and now your",
    "start": "434780",
    "end": "437060"
  },
  {
    "text": "icon buttons can handle both SVG",
    "start": "437060",
    "end": "438800"
  },
  {
    "text": "graphics and emoji strings equally but",
    "start": "438800",
    "end": "441230"
  },
  {
    "text": "your SVG's don't inherit a size by",
    "start": "441230",
    "end": "443030"
  },
  {
    "text": "default so we'll want to go ahead and",
    "start": "443030",
    "end": "444650"
  },
  {
    "text": "set a fixed width and height for them",
    "start": "444650",
    "end": "446240"
  },
  {
    "text": "and now if we preview things in the",
    "start": "446240",
    "end": "448250"
  },
  {
    "text": "browser we should have an icon nap that",
    "start": "448250",
    "end": "450200"
  },
  {
    "text": "is very similar to the actual facebook",
    "start": "450200",
    "end": "452210"
  },
  {
    "text": "UI and now we're ready for the fun part",
    "start": "452210",
    "end": "454430"
  },
  {
    "text": "building an animated multi-level",
    "start": "454430",
    "end": "456320"
  },
  {
    "text": "drop-down menu now the reason we're not",
    "start": "456320",
    "end": "458270"
  },
  {
    "text": "passing the icon as a direct child of an",
    "start": "458270",
    "end": "460340"
  },
  {
    "text": "ad item is because some of our nav items",
    "start": "460340",
    "end": "462080"
  },
  {
    "text": "might have a drop-down menu and we want",
    "start": "462080",
    "end": "464090"
  },
  {
    "text": "that to serve as the children we'll add",
    "start": "464090",
    "end": "465800"
  },
  {
    "text": "a fourth nav item here with a carrot",
    "start": "465800",
    "end": "467420"
  },
  {
    "text": "icon and our drop-down will go inside of",
    "start": "467420",
    "end": "469460"
  },
  {
    "text": "it",
    "start": "469460",
    "end": "469820"
  },
  {
    "text": "now in order to open and close a drop",
    "start": "469820",
    "end": "471560"
  },
  {
    "text": "down our nav item will need to have some",
    "start": "471560",
    "end": "473510"
  },
  {
    "text": "state or in other words some data that",
    "start": "473510",
    "end": "475400"
  },
  {
    "text": "changes throughout the lifecycle of the",
    "start": "475400",
    "end": "477170"
  },
  {
    "text": "app we can manage state and react using",
    "start": "477170",
    "end": "479480"
  },
  {
    "text": "a hook called use state in our nav item",
    "start": "479480",
    "end": "481640"
  },
  {
    "text": "components we call the use state",
    "start": "481640",
    "end": "482960"
  },
  {
    "text": "function and it returns us with two",
    "start": "482960",
    "end": "484790"
  },
  {
    "text": "values the values are returned in an",
    "start": "484790",
    "end": "486560"
  },
  {
    "text": "array so we can D structure them as",
    "start": "486560",
    "end": "488270"
  },
  {
    "text": "variables here using bracket the first",
    "start": "488270",
    "end": "490520"
  },
  {
    "text": "value is the state which in our case is",
    "start": "490520",
    "end": "492530"
  },
  {
    "text": "called",
    "start": "492530",
    "end": "492800"
  },
  {
    "text": "open and is a boolean value that tells",
    "start": "492800",
    "end": "494990"
  },
  {
    "text": "us whether or not the drop-down menu is",
    "start": "494990",
    "end": "496820"
  },
  {
    "text": "open the second value is a function that",
    "start": "496820",
    "end": "499220"
  },
  {
    "text": "you can use to change the state we can",
    "start": "499220",
    "end": "501170"
  },
  {
    "text": "also set a default value as the argument",
    "start": "501170",
    "end": "503180"
  },
  {
    "text": "to use state and of course we want the",
    "start": "503180",
    "end": "504800"
  },
  {
    "text": "drop-down to be closed by default that",
    "start": "504800",
    "end": "506570"
  },
  {
    "text": "sets up the initial state but now we",
    "start": "506570",
    "end": "508700"
  },
  {
    "text": "want the user to be able to change the",
    "start": "508700",
    "end": "510590"
  },
  {
    "text": "state when they click on the nav item",
    "start": "510590",
    "end": "512090"
  },
  {
    "text": "button we can do that by going down to",
    "start": "512090",
    "end": "513919"
  },
  {
    "text": "our link element and we'll add an on",
    "start": "513919",
    "end": "515750"
  },
  {
    "text": "click event handler when the user clicks",
    "start": "515750",
    "end": "517729"
  },
  {
    "text": "a button it will use the set open",
    "start": "517729",
    "end": "519590"
  },
  {
    "text": "function that we got from new state and",
    "start": "519590",
    "end": "521240"
  },
  {
    "text": "it will flip the open value to the",
    "start": "521240",
    "end": "523280"
  },
  {
    "text": "opposite of whatever it currently is",
    "start": "523280",
    "end": "524780"
  },
  {
    "text": "putting a bang in front of a boolean",
    "start": "524780",
    "end": "526730"
  },
  {
    "text": "gives you its opposite value and that",
    "start": "526730",
    "end": "528560"
  },
  {
    "text": "can be useful for toggling things on and",
    "start": "528560",
    "end": "530480"
  },
  {
    "text": "off okay so now that user has a way to",
    "start": "530480",
    "end": "532700"
  },
  {
    "text": "toggle",
    "start": "532700",
    "end": "533240"
  },
  {
    "text": "State but now we need to do something",
    "start": "533240",
    "end": "534649"
  },
  {
    "text": "useful with the state in our case we",
    "start": "534649",
    "end": "536870"
  },
  {
    "text": "want to show the drop down when the open",
    "start": "536870",
    "end": "538880"
  },
  {
    "text": "state is set to true below the link will",
    "start": "538880",
    "end": "541070"
  },
  {
    "text": "add braces and if the open property is",
    "start": "541070",
    "end": "543290"
  },
  {
    "text": "true then we'll show the prop stock",
    "start": "543290",
    "end": "544970"
  },
  {
    "text": "children if the open state is false then",
    "start": "544970",
    "end": "547010"
  },
  {
    "text": "nothing will be shown here we can test",
    "start": "547010",
    "end": "548750"
  },
  {
    "text": "things out by going to our nab item",
    "start": "548750",
    "end": "550399"
  },
  {
    "text": "component adding a hello world and you",
    "start": "550399",
    "end": "552440"
  },
  {
    "text": "should see that appear when you click on",
    "start": "552440",
    "end": "553970"
  },
  {
    "text": "the button obviously it looks terrible",
    "start": "553970",
    "end": "555470"
  },
  {
    "text": "so let's make a drop down component to",
    "start": "555470",
    "end": "557480"
  },
  {
    "text": "fix that we'll add another function for",
    "start": "557480",
    "end": "559640"
  },
  {
    "text": "drop down menu and we'll have it return",
    "start": "559640",
    "end": "561380"
  },
  {
    "text": "a div with a class of drop-down then",
    "start": "561380",
    "end": "563510"
  },
  {
    "text": "we'll add our drop down menu as the",
    "start": "563510",
    "end": "565040"
  },
  {
    "text": "child of the nav item now similar to our",
    "start": "565040",
    "end": "567320"
  },
  {
    "text": "nav bar a drop down has multiple drop",
    "start": "567320",
    "end": "569570"
  },
  {
    "text": "down items but in this example I'm going",
    "start": "569570",
    "end": "571670"
  },
  {
    "text": "to nest that component directly in the",
    "start": "571670",
    "end": "573620"
  },
  {
    "text": "drop down menu the drop down item will",
    "start": "573620",
    "end": "576050"
  },
  {
    "text": "simply be a link with a class name of",
    "start": "576050",
    "end": "577970"
  },
  {
    "text": "menu item and then we'll pass and props",
    "start": "577970",
    "end": "580310"
  },
  {
    "text": "children to control the text of that",
    "start": "580310",
    "end": "582230"
  },
  {
    "text": "link now you may have noticed in the",
    "start": "582230",
    "end": "584089"
  },
  {
    "text": "demo that some of these links have an",
    "start": "584089",
    "end": "585830"
  },
  {
    "text": "icon on the left and some have an icon",
    "start": "585830",
    "end": "587720"
  },
  {
    "text": "on the right we can handle that logic in",
    "start": "587720",
    "end": "589850"
  },
  {
    "text": "a flexible way by adding slots for a",
    "start": "589850",
    "end": "591830"
  },
  {
    "text": "left icon and a right icon when you pass",
    "start": "591830",
    "end": "594560"
  },
  {
    "text": "in a left icon or right icon prop it'll",
    "start": "594560",
    "end": "596899"
  },
  {
    "text": "be rendered but if you leave it blank",
    "start": "596899",
    "end": "598490"
  },
  {
    "text": "then it just won't render anything at",
    "start": "598490",
    "end": "599959"
  },
  {
    "text": "all we can see it and use down here in",
    "start": "599959",
    "end": "601730"
  },
  {
    "text": "the drop down a basic drop down item",
    "start": "601730",
    "end": "603709"
  },
  {
    "text": "we'll just take some text as a child but",
    "start": "603709",
    "end": "605839"
  },
  {
    "text": "if you want to show an icon on the left",
    "start": "605839",
    "end": "607670"
  },
  {
    "text": "or right you can also pass in the icon",
    "start": "607670",
    "end": "609890"
  },
  {
    "text": "prop and pass it a component or emoji",
    "start": "609890",
    "end": "612350"
  },
  {
    "text": "string now in order to get things",
    "start": "612350",
    "end": "613970"
  },
  {
    "text": "looking right let's go back to our CSS",
    "start": "613970",
    "end": "615680"
  },
  {
    "text": "the drop down menu on Facebook overlaps",
    "start": "615680",
    "end": "618050"
  },
  {
    "text": "just slightly with the top navbar and we",
    "start": "618050",
    "end": "620149"
  },
  {
    "text": "can achieve that effect by using",
    "start": "620149",
    "end": "621380"
  },
  {
    "text": "absolute positioning it allows us to",
    "start": "621380",
    "end": "623570"
  },
  {
    "text": "explicitly offset an element based on",
    "start": "623570",
    "end": "625459"
  },
  {
    "text": "its container from the top of the parent",
    "start": "625459",
    "end": "627470"
  },
  {
    "text": "nav bar will move the drop down down 558",
    "start": "627470",
    "end": "629959"
  },
  {
    "text": "pixels that means it'll overlap by 2",
    "start": "629959",
    "end": "631850"
  },
  {
    "text": "pixels with the top nav bar which has a",
    "start": "631850",
    "end": "633860"
  },
  {
    "text": "height of 60 we can give it a fixed",
    "start": "633860",
    "end": "636529"
  },
  {
    "text": "width of 300 pixels and then we'll move",
    "start": "636529",
    "end": "638480"
  },
  {
    "text": "it over to the left by translating it",
    "start": "638480",
    "end": "640399"
  },
  {
    "text": "over the x-axis by 45% we'll give it",
    "start": "640399",
    "end": "643279"
  },
  {
    "text": "some colors and padding and we'll want",
    "start": "643279",
    "end": "644899"
  },
  {
    "text": "to make sure the overflow property is",
    "start": "644899",
    "end": "646399"
  },
  {
    "text": "set to hidden what this will do is hide",
    "start": "646399",
    "end": "648350"
  },
  {
    "text": "any child elements if they overlap this",
    "start": "648350",
    "end": "650420"
  },
  {
    "text": "container that's important because in a",
    "start": "650420",
    "end": "652399"
  },
  {
    "text": "minute here",
    "start": "652399",
    "end": "652970"
  },
  {
    "text": "we'll be sliding in multiple menus",
    "start": "652970",
    "end": "654500"
  },
  {
    "text": "through this container now the drop down",
    "start": "654500",
    "end": "656990"
  },
  {
    "text": "has multiple menu items we'll set these",
    "start": "656990",
    "end": "659149"
  },
  {
    "text": "up as Flex containers that align their",
    "start": "659149",
    "end": "661160"
  },
  {
    "text": "items to the center in the context of a",
    "start": "661160",
    "end": "663230"
  },
  {
    "text": "row that means vertical alignment now",
    "start": "663230",
    "end": "665209"
  },
  {
    "text": "when a user hovers over a menu item",
    "start": "665209",
    "end": "667010"
  },
  {
    "text": "we want to animate the background color",
    "start": "667010",
    "end": "668600"
  },
  {
    "text": "so we'll go ahead and set up a",
    "start": "668600",
    "end": "669800"
  },
  {
    "text": "transition for the background then we",
    "start": "669800",
    "end": "672170"
  },
  {
    "text": "can target the menu items hover pseudo",
    "start": "672170",
    "end": "674120"
  },
  {
    "text": "selector and change the background color",
    "start": "674120",
    "end": "676010"
  },
  {
    "text": "to something a little bit lighter as a",
    "start": "676010",
    "end": "678290"
  },
  {
    "text": "final touch we want the right icon in",
    "start": "678290",
    "end": "680510"
  },
  {
    "text": "the row to be pushed all the way to the",
    "start": "680510",
    "end": "682160"
  },
  {
    "text": "right side with flexbox",
    "start": "682160",
    "end": "683660"
  },
  {
    "text": "you can set the left margin of the last",
    "start": "683660",
    "end": "685310"
  },
  {
    "text": "item to auto and that will push it all",
    "start": "685310",
    "end": "687590"
  },
  {
    "text": "the way to the right and everything else",
    "start": "687590",
    "end": "688940"
  },
  {
    "text": "to the left and now our drop down menu",
    "start": "688940",
    "end": "690950"
  },
  {
    "text": "is starting to take shape at this point",
    "start": "690950",
    "end": "692750"
  },
  {
    "text": "we have a fully functional single level",
    "start": "692750",
    "end": "694490"
  },
  {
    "text": "drop down but we require an animated",
    "start": "694490",
    "end": "696620"
  },
  {
    "text": "multi level drop down to help us along",
    "start": "696620",
    "end": "698540"
  },
  {
    "text": "the way we'll install a very popular",
    "start": "698540",
    "end": "700310"
  },
  {
    "text": "package called react transition group it",
    "start": "700310",
    "end": "702560"
  },
  {
    "text": "will help us control the conditional",
    "start": "702560",
    "end": "703790"
  },
  {
    "text": "logic for rendering multiple menus and",
    "start": "703790",
    "end": "705770"
  },
  {
    "text": "transitioning between them when they're",
    "start": "705770",
    "end": "707390"
  },
  {
    "text": "added or removed from the application",
    "start": "707390",
    "end": "709250"
  },
  {
    "text": "once installed go ahead and import the",
    "start": "709250",
    "end": "711260"
  },
  {
    "text": "CSS transition component from the",
    "start": "711260",
    "end": "712820"
  },
  {
    "text": "package then we need to give our",
    "start": "712820",
    "end": "714320"
  },
  {
    "text": "drop-down menu some state to specify",
    "start": "714320",
    "end": "716180"
  },
  {
    "text": "which menu is currently visible we'll",
    "start": "716180",
    "end": "718340"
  },
  {
    "text": "set the main menu as the default and",
    "start": "718340",
    "end": "720020"
  },
  {
    "text": "then we'll also show a settings and",
    "start": "720020",
    "end": "721610"
  },
  {
    "text": "animals menu as well now our active menu",
    "start": "721610",
    "end": "723860"
  },
  {
    "text": "is the state or the name of the menu and",
    "start": "723860",
    "end": "725570"
  },
  {
    "text": "set active menu is how we change it now",
    "start": "725570",
    "end": "727940"
  },
  {
    "text": "that we have state we can animate",
    "start": "727940",
    "end": "729290"
  },
  {
    "text": "elements in or out using CSS transition",
    "start": "729290",
    "end": "731750"
  },
  {
    "text": "we can go ahead and wrap our current",
    "start": "731750",
    "end": "733250"
  },
  {
    "text": "drop-down elements in the CSS transition",
    "start": "733250",
    "end": "735320"
  },
  {
    "text": "component it's looking for a prop of in",
    "start": "735320",
    "end": "737720"
  },
  {
    "text": "which when truthy will render and",
    "start": "737720",
    "end": "739850"
  },
  {
    "text": "animate its children into the UI in",
    "start": "739850",
    "end": "741860"
  },
  {
    "text": "other words when the active menu equals",
    "start": "741860",
    "end": "743660"
  },
  {
    "text": "main then we want to show the children",
    "start": "743660",
    "end": "745460"
  },
  {
    "text": "inside of this component I'm also adding",
    "start": "745460",
    "end": "747200"
  },
  {
    "text": "a second property called unmount on exit",
    "start": "747200",
    "end": "749450"
  },
  {
    "text": "which completely removes these children",
    "start": "749450",
    "end": "751190"
  },
  {
    "text": "when they're not active next we'll set a",
    "start": "751190",
    "end": "753170"
  },
  {
    "text": "timeout which defines the duration of",
    "start": "753170",
    "end": "755180"
  },
  {
    "text": "the animation and the last prop we need",
    "start": "755180",
    "end": "757370"
  },
  {
    "text": "to add here is class names which we'll",
    "start": "757370",
    "end": "759230"
  },
  {
    "text": "set to menu primary for this primary",
    "start": "759230",
    "end": "761390"
  },
  {
    "text": "main menu now here's how the CSS",
    "start": "761390",
    "end": "763250"
  },
  {
    "text": "transition actually works it looks for",
    "start": "763250",
    "end": "765200"
  },
  {
    "text": "the first child element which we'll set",
    "start": "765200",
    "end": "766790"
  },
  {
    "text": "up here as it did then when it's in prop",
    "start": "766790",
    "end": "769160"
  },
  {
    "text": "changes it will add or remove CSS",
    "start": "769160",
    "end": "771260"
  },
  {
    "text": "classes to this element based on the",
    "start": "771260",
    "end": "773240"
  },
  {
    "text": "state of the animation and it uses the",
    "start": "773240",
    "end": "775280"
  },
  {
    "text": "class names prop to prefix those classes",
    "start": "775280",
    "end": "777640"
  },
  {
    "text": "CSS transition doesn't actually animate",
    "start": "777640",
    "end": "780350"
  },
  {
    "text": "anything directly instead it adds and",
    "start": "780350",
    "end": "782300"
  },
  {
    "text": "removes classes based on the state of",
    "start": "782300",
    "end": "784100"
  },
  {
    "text": "the animation so you can handle the",
    "start": "784100",
    "end": "785540"
  },
  {
    "text": "animations in your CSS notice how I'm",
    "start": "785540",
    "end": "788030"
  },
  {
    "text": "setting up four different classes here",
    "start": "788030",
    "end": "789470"
  },
  {
    "text": "menu primary enter interactive exit and",
    "start": "789470",
    "end": "792770"
  },
  {
    "text": "exit active when the in prop first",
    "start": "792770",
    "end": "794840"
  },
  {
    "text": "becomes true it will add the menu",
    "start": "794840",
    "end": "796460"
  },
  {
    "text": "primary enter class to the div after a",
    "start": "796460",
    "end": "798980"
  },
  {
    "text": "timeout of 500ml",
    "start": "798980",
    "end": "800450"
  },
  {
    "text": "it then adds the menu primary",
    "start": "800450",
    "end": "802370"
  },
  {
    "text": "interactive class",
    "start": "802370",
    "end": "803630"
  },
  {
    "text": "now when the in prop becomes false it",
    "start": "803630",
    "end": "805610"
  },
  {
    "text": "does the exact opposite it adds the exit",
    "start": "805610",
    "end": "807800"
  },
  {
    "text": "class than the exit active class this",
    "start": "807800",
    "end": "810200"
  },
  {
    "text": "means you can easily create an animation",
    "start": "810200",
    "end": "811639"
  },
  {
    "text": "using CSS transitions we want our main",
    "start": "811639",
    "end": "814430"
  },
  {
    "text": "menu to slide in from left to right so",
    "start": "814430",
    "end": "816589"
  },
  {
    "text": "initially we'll translate it to the left",
    "start": "816589",
    "end": "818300"
  },
  {
    "text": "by a hundred and ten percent so it'll be",
    "start": "818300",
    "end": "820190"
  },
  {
    "text": "completely invisible off to the left",
    "start": "820190",
    "end": "821810"
  },
  {
    "text": "after five hundred milliseconds",
    "start": "821810",
    "end": "823430"
  },
  {
    "text": "we'll bring the translate back to zero",
    "start": "823430",
    "end": "824870"
  },
  {
    "text": "so it'll be in its normal position then",
    "start": "824870",
    "end": "826940"
  },
  {
    "text": "we can animate it using the transition",
    "start": "826940",
    "end": "828470"
  },
  {
    "text": "property using our speed variable and a",
    "start": "828470",
    "end": "830899"
  },
  {
    "text": "timing function of ease as you can see",
    "start": "830899",
    "end": "833000"
  },
  {
    "text": "here CSS is doing the animation while",
    "start": "833000",
    "end": "835100"
  },
  {
    "text": "react is toggling the classes for you",
    "start": "835100",
    "end": "836990"
  },
  {
    "text": "now to animate out will do basically the",
    "start": "836990",
    "end": "838970"
  },
  {
    "text": "same thing just in the opposite",
    "start": "838970",
    "end": "840290"
  },
  {
    "text": "direction we'll translate from zero to a",
    "start": "840290",
    "end": "842449"
  },
  {
    "text": "negative one hundred and ten percent now",
    "start": "842449",
    "end": "844760"
  },
  {
    "text": "at this point everything should be",
    "start": "844760",
    "end": "846019"
  },
  {
    "text": "exactly the same that's because we need",
    "start": "846019",
    "end": "847820"
  },
  {
    "text": "a secondary menu to toggle to let's get",
    "start": "847820",
    "end": "850250"
  },
  {
    "text": "started with that second menu by copying",
    "start": "850250",
    "end": "852139"
  },
  {
    "text": "our CSS transition and pasting it",
    "start": "852139",
    "end": "854240"
  },
  {
    "text": "directly under the existing one instead",
    "start": "854240",
    "end": "857000"
  },
  {
    "text": "of checking the active menu for main",
    "start": "857000",
    "end": "858470"
  },
  {
    "text": "we'll check the active menu for settings",
    "start": "858470",
    "end": "860360"
  },
  {
    "text": "for class names",
    "start": "860360",
    "end": "861860"
  },
  {
    "text": "we'll use menu secondary because we want",
    "start": "861860",
    "end": "863810"
  },
  {
    "text": "to set up different classes for this",
    "start": "863810",
    "end": "865190"
  },
  {
    "text": "menu to slide from right to left now the",
    "start": "865190",
    "end": "867410"
  },
  {
    "text": "class is worth in exactly the same way",
    "start": "867410",
    "end": "869029"
  },
  {
    "text": "the only difference is that we're",
    "start": "869029",
    "end": "870620"
  },
  {
    "text": "translating to positive 110 percent",
    "start": "870620",
    "end": "873019"
  },
  {
    "text": "versus negative 110 percent the effect",
    "start": "873019",
    "end": "875870"
  },
  {
    "text": "is that the secondary menu will be",
    "start": "875870",
    "end": "877430"
  },
  {
    "text": "offset to the right and then it will",
    "start": "877430",
    "end": "879260"
  },
  {
    "text": "slide in to the left and that's all it",
    "start": "879260",
    "end": "881180"
  },
  {
    "text": "takes to build the basic slide in",
    "start": "881180",
    "end": "882680"
  },
  {
    "text": "slide-out animation but we are missing",
    "start": "882680",
    "end": "884930"
  },
  {
    "text": "one piece of the puzzle and that's a way",
    "start": "884930",
    "end": "886399"
  },
  {
    "text": "for the user to activate or deactivate a",
    "start": "886399",
    "end": "888800"
  },
  {
    "text": "menu we have our set active menu",
    "start": "888800",
    "end": "890660"
  },
  {
    "text": "function from you stayed so we'll go",
    "start": "890660",
    "end": "892430"
  },
  {
    "text": "ahead and bind that to the click event",
    "start": "892430",
    "end": "893750"
  },
  {
    "text": "on the drop-down item button but instead",
    "start": "893750",
    "end": "896269"
  },
  {
    "text": "of hard-coding a value here we're going",
    "start": "896269",
    "end": "897890"
  },
  {
    "text": "to look for a prop that's passed down",
    "start": "897890",
    "end": "899600"
  },
  {
    "text": "from the parent component and we'll want",
    "start": "899600",
    "end": "901430"
  },
  {
    "text": "to make sure that prop exists before we",
    "start": "901430",
    "end": "903079"
  },
  {
    "text": "call the set active menu function now to",
    "start": "903079",
    "end": "905120"
  },
  {
    "text": "get our demo working we can go down to",
    "start": "905120",
    "end": "906740"
  },
  {
    "text": "any drop-down item and set the go to",
    "start": "906740",
    "end": "908839"
  },
  {
    "text": "menu prop to whatever menu we want to",
    "start": "908839",
    "end": "910760"
  },
  {
    "text": "navigate to which in our case will",
    "start": "910760",
    "end": "912380"
  },
  {
    "text": "either be settings or main and now if",
    "start": "912380",
    "end": "914660"
  },
  {
    "text": "you open up your demo you should have a",
    "start": "914660",
    "end": "915980"
  },
  {
    "text": "functional multi level drop-down but",
    "start": "915980",
    "end": "918079"
  },
  {
    "text": "we're not done quite yet there's still",
    "start": "918079",
    "end": "919610"
  },
  {
    "text": "some additional polish that we have to",
    "start": "919610",
    "end": "920930"
  },
  {
    "text": "take care of go back to your demo and",
    "start": "920930",
    "end": "922760"
  },
  {
    "text": "add a bunch of drop-down items to one of",
    "start": "922760",
    "end": "924709"
  },
  {
    "text": "the menus notice how the height is not",
    "start": "924709",
    "end": "926449"
  },
  {
    "text": "animated it just snaps into place and",
    "start": "926449",
    "end": "928370"
  },
  {
    "text": "totally ruins the entire animation this",
    "start": "928370",
    "end": "930589"
  },
  {
    "text": "happens because the old menu hasn't been",
    "start": "930589",
    "end": "932660"
  },
  {
    "text": "completely removed from the",
    "start": "932660",
    "end": "933830"
  },
  {
    "text": "by the time the new menu is visible what",
    "start": "933830",
    "end": "935750"
  },
  {
    "text": "we need is a more dynamic way to manage",
    "start": "935750",
    "end": "937670"
  },
  {
    "text": "the height let's create some state for",
    "start": "937670",
    "end": "939590"
  },
  {
    "text": "the height of the menu then we'll create",
    "start": "939590",
    "end": "941120"
  },
  {
    "text": "a function called calculate height and",
    "start": "941120",
    "end": "942770"
  },
  {
    "text": "this function takes a Dom element as its",
    "start": "942770",
    "end": "945200"
  },
  {
    "text": "argument",
    "start": "945200",
    "end": "945740"
  },
  {
    "text": "that's because a Dom element has a",
    "start": "945740",
    "end": "947420"
  },
  {
    "text": "property called offset height which",
    "start": "947420",
    "end": "949490"
  },
  {
    "text": "contains the actual height and pixels of",
    "start": "949490",
    "end": "951410"
  },
  {
    "text": "that element and now you might be",
    "start": "951410",
    "end": "952940"
  },
  {
    "text": "wondering where do we get this element",
    "start": "952940",
    "end": "954410"
  },
  {
    "text": "and when do we call this function well",
    "start": "954410",
    "end": "956390"
  },
  {
    "text": "the CSS transition has lifecycle hooks",
    "start": "956390",
    "end": "958430"
  },
  {
    "text": "that we can tap into one of these hooks",
    "start": "958430",
    "end": "960530"
  },
  {
    "text": "is on Enter it calls a callback as soon",
    "start": "960530",
    "end": "963170"
  },
  {
    "text": "as the enter class is first added to the",
    "start": "963170",
    "end": "965090"
  },
  {
    "text": "element and it also provides the element",
    "start": "965090",
    "end": "967100"
  },
  {
    "text": "as an argument which means we can simply",
    "start": "967100",
    "end": "968990"
  },
  {
    "text": "pass in our calc I function here as the",
    "start": "968990",
    "end": "971000"
  },
  {
    "text": "prop value that will recalculate the",
    "start": "971000",
    "end": "973340"
  },
  {
    "text": "height of the menu now we just need to",
    "start": "973340",
    "end": "974810"
  },
  {
    "text": "apply it as a style to the drop down",
    "start": "974810",
    "end": "976460"
  },
  {
    "text": "itself we can go up to the style",
    "start": "976460",
    "end": "978110"
  },
  {
    "text": "attribute and dynamically pass in the",
    "start": "978110",
    "end": "980000"
  },
  {
    "text": "height from our state and that leaves us",
    "start": "980000",
    "end": "981800"
  },
  {
    "text": "with one final step to animate it go to",
    "start": "981800",
    "end": "983780"
  },
  {
    "text": "the drop down class in your CSS and add",
    "start": "983780",
    "end": "986060"
  },
  {
    "text": "a transition for the height now when you",
    "start": "986060",
    "end": "987830"
  },
  {
    "text": "go back to the demo your drop down",
    "start": "987830",
    "end": "989150"
  },
  {
    "text": "should magically shrink and grow based",
    "start": "989150",
    "end": "991370"
  },
  {
    "text": "on the size of the current menu and with",
    "start": "991370",
    "end": "993350"
  },
  {
    "text": "that I'm gonna go ahead and wrap things",
    "start": "993350",
    "end": "994760"
  },
  {
    "text": "up there if this video helped you please",
    "start": "994760",
    "end": "996500"
  },
  {
    "text": "like and subscribe and let me know what",
    "start": "996500",
    "end": "998240"
  },
  {
    "text": "you want to see next in the comments",
    "start": "998240",
    "end": "999500"
  },
  {
    "text": "thanks for watching and I will see you",
    "start": "999500",
    "end": "1001420"
  },
  {
    "text": "in the next one",
    "start": "1001420",
    "end": "1004110"
  },
  {
    "text": "[Music]",
    "start": "1004410",
    "end": "1008509"
  },
  {
    "text": "you",
    "start": "1010270",
    "end": "1012330"
  }
]