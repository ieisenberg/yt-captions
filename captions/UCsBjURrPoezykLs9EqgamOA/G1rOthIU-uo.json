[
  {
    "text": "redis an in-memory multi-model database",
    "start": "799",
    "end": "3360"
  },
  {
    "text": "famous for its sub-millisecond latency",
    "start": "3360",
    "end": "5759"
  },
  {
    "text": "it was created in 2009 based on the idea",
    "start": "5759",
    "end": "8480"
  },
  {
    "text": "that a cache can also be a durable data",
    "start": "8480",
    "end": "11280"
  },
  {
    "text": "store",
    "start": "11280",
    "end": "11679"
  },
  {
    "text": "around this time apps like twitter were",
    "start": "11679",
    "end": "13360"
  },
  {
    "text": "growing exponentially and needed a way",
    "start": "13360",
    "end": "15120"
  },
  {
    "text": "to deliver data to their end users",
    "start": "15120",
    "end": "16880"
  },
  {
    "text": "faster than a relational database could",
    "start": "16880",
    "end": "18560"
  },
  {
    "text": "handle",
    "start": "18560",
    "end": "19039"
  },
  {
    "text": "redis which means remote dictionary",
    "start": "19039",
    "end": "20880"
  },
  {
    "text": "server was adopted by some of the most",
    "start": "20880",
    "end": "22720"
  },
  {
    "text": "heavily trafficked sites in the world",
    "start": "22720",
    "end": "24400"
  },
  {
    "text": "because it changed the database game by",
    "start": "24400",
    "end": "26160"
  },
  {
    "text": "creating a system where data is always",
    "start": "26160",
    "end": "28400"
  },
  {
    "text": "modified or read from the main computer",
    "start": "28400",
    "end": "30560"
  },
  {
    "text": "memory",
    "start": "30560",
    "end": "31039"
  },
  {
    "text": "as opposed to the much slower disk but",
    "start": "31039",
    "end": "33360"
  },
  {
    "text": "at the same time",
    "start": "33360",
    "end": "34239"
  },
  {
    "text": "it stores its data on the disk so it can",
    "start": "34239",
    "end": "36239"
  },
  {
    "text": "be reconstructed",
    "start": "36239",
    "end": "37280"
  },
  {
    "text": "as needed which means the database is",
    "start": "37280",
    "end": "39120"
  },
  {
    "text": "fully durable supporting things like",
    "start": "39120",
    "end": "40879"
  },
  {
    "text": "snapshots and backups every data point",
    "start": "40879",
    "end": "43120"
  },
  {
    "text": "in the database is a key",
    "start": "43120",
    "end": "44640"
  },
  {
    "text": "followed by one of many different data",
    "start": "44640",
    "end": "46640"
  },
  {
    "text": "structures like a string",
    "start": "46640",
    "end": "48320"
  },
  {
    "text": "list hash or stream so you can store",
    "start": "48320",
    "end": "50480"
  },
  {
    "text": "data naturally just like you would with",
    "start": "50480",
    "end": "52239"
  },
  {
    "text": "your favorite programming language as",
    "start": "52239",
    "end": "53760"
  },
  {
    "text": "opposed to squeezing it into a bunch of",
    "start": "53760",
    "end": "55520"
  },
  {
    "text": "tables or json documents",
    "start": "55520",
    "end": "57280"
  },
  {
    "text": "interacting with the database is handled",
    "start": "57280",
    "end": "59039"
  },
  {
    "text": "with a simple set of commands",
    "start": "59039",
    "end": "60640"
  },
  {
    "text": "like set followed by a key and value to",
    "start": "60640",
    "end": "63520"
  },
  {
    "text": "create data",
    "start": "63520",
    "end": "64320"
  },
  {
    "text": "then git followed by a key to read data",
    "start": "64320",
    "end": "67280"
  },
  {
    "text": "historically",
    "start": "67280",
    "end": "68000"
  },
  {
    "text": "redis has been described as a key value",
    "start": "68000",
    "end": "70080"
  },
  {
    "text": "store and is often used as a cache to",
    "start": "70080",
    "end": "72240"
  },
  {
    "text": "make relational databases faster at",
    "start": "72240",
    "end": "74159"
  },
  {
    "text": "scale",
    "start": "74159",
    "end": "74640"
  },
  {
    "text": "but here's where your mind is about to",
    "start": "74640",
    "end": "76240"
  },
  {
    "text": "be blown redis is perfectly suitable as",
    "start": "76240",
    "end": "78640"
  },
  {
    "text": "a primary database",
    "start": "78640",
    "end": "79840"
  },
  {
    "text": "and can dramatically reduce complexity",
    "start": "79840",
    "end": "81759"
  },
  {
    "text": "because making things go fast at scale",
    "start": "81759",
    "end": "83680"
  },
  {
    "text": "is the primary cause of complexity in",
    "start": "83680",
    "end": "85439"
  },
  {
    "text": "the first place with redis your database",
    "start": "85439",
    "end": "87680"
  },
  {
    "text": "is already fast",
    "start": "87680",
    "end": "88799"
  },
  {
    "text": "no need for a complex caching layer but",
    "start": "88799",
    "end": "91280"
  },
  {
    "text": "you might be wondering",
    "start": "91280",
    "end": "92240"
  },
  {
    "text": "how do i model complex relationships",
    "start": "92240",
    "end": "94240"
  },
  {
    "text": "today redis is what you would call",
    "start": "94240",
    "end": "95840"
  },
  {
    "text": "a multi-model database supporting a",
    "start": "95840",
    "end": "98000"
  },
  {
    "text": "variety of different database paradigms",
    "start": "98000",
    "end": "99759"
  },
  {
    "text": "with",
    "start": "99759",
    "end": "100000"
  },
  {
    "text": "add-on modules that you can opt into as",
    "start": "100000",
    "end": "102240"
  },
  {
    "text": "needed if your data contains",
    "start": "102240",
    "end": "103680"
  },
  {
    "text": "relationships bring in redis graph",
    "start": "103680",
    "end": "105600"
  },
  {
    "text": "and query it with cipher or use the json",
    "start": "105600",
    "end": "107840"
  },
  {
    "text": "module to structure your data as a",
    "start": "107840",
    "end": "109759"
  },
  {
    "text": "hierarchy",
    "start": "109759",
    "end": "110640"
  },
  {
    "text": "just like a document-oriented database",
    "start": "110640",
    "end": "112799"
  },
  {
    "text": "then use the search module",
    "start": "112799",
    "end": "114000"
  },
  {
    "text": "to turn your database into a full text",
    "start": "114000",
    "end": "115920"
  },
  {
    "text": "search engine and it even has modules",
    "start": "115920",
    "end": "117680"
  },
  {
    "text": "for ai workloads time series data",
    "start": "117680",
    "end": "120000"
  },
  {
    "text": "and more the quickest way to get started",
    "start": "120000",
    "end": "121840"
  },
  {
    "text": "is the free tier on redis enterprise",
    "start": "121840",
    "end": "123920"
  },
  {
    "text": "cloud that'll give you a free database",
    "start": "123920",
    "end": "125680"
  },
  {
    "text": "to play around with and you can attach",
    "start": "125680",
    "end": "127280"
  },
  {
    "text": "one extra module to it then you can",
    "start": "127280",
    "end": "129039"
  },
  {
    "text": "connect to it with the redis cli or with",
    "start": "129039",
    "end": "131200"
  },
  {
    "text": "the redis insight tool which contains an",
    "start": "131200",
    "end": "133120"
  },
  {
    "text": "interactive dashboard to manage your",
    "start": "133120",
    "end": "134959"
  },
  {
    "text": "data this has been redis in 100 seconds",
    "start": "134959",
    "end": "137599"
  },
  {
    "text": "but what do you guys think would you use",
    "start": "137599",
    "end": "139200"
  },
  {
    "text": "redis as your primary database let me",
    "start": "139200",
    "end": "141120"
  },
  {
    "text": "know why or why not",
    "start": "141120",
    "end": "142080"
  },
  {
    "text": "in the comments thanks for watching and",
    "start": "142080",
    "end": "143760"
  },
  {
    "text": "i will see you in the next one",
    "start": "143760",
    "end": "147680"
  }
]