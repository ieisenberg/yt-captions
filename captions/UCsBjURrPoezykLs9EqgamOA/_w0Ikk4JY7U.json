[
  {
    "text": "it is October 26 2022 and you're",
    "start": "1260",
    "end": "4440"
  },
  {
    "text": "watching the code report just when you",
    "start": "4440",
    "end": "6240"
  },
  {
    "text": "thought you had web development all",
    "start": "6240",
    "end": "7560"
  },
  {
    "text": "figured out Along Comes an entirely new",
    "start": "7560",
    "end": "9599"
  },
  {
    "text": "build tool and a complete overhaul of",
    "start": "9599",
    "end": "11580"
  },
  {
    "text": "your favorite framework we're ready for",
    "start": "11580",
    "end": "13320"
  },
  {
    "text": "a new paradigm not enough men's and",
    "start": "13320",
    "end": "15059"
  },
  {
    "text": "disease of evil",
    "start": "15059",
    "end": "17400"
  },
  {
    "text": "the reality",
    "start": "17400",
    "end": "18210"
  },
  {
    "text": "[Music]",
    "start": "18210",
    "end": "20160"
  },
  {
    "text": "JavaScript it's a wild ride next JS comp",
    "start": "20160",
    "end": "23100"
  },
  {
    "text": "happened yesterday and they made an",
    "start": "23100",
    "end": "24660"
  },
  {
    "text": "extremely ballsy move to take the",
    "start": "24660",
    "end": "26400"
  },
  {
    "text": "world's most popular JavaScript",
    "start": "26400",
    "end": "27720"
  },
  {
    "text": "framework and linchpin of a unicorn",
    "start": "27720",
    "end": "29400"
  },
  {
    "text": "startup and totally change up the",
    "start": "29400",
    "end": "31140"
  },
  {
    "text": "developer experience as you're about to",
    "start": "31140",
    "end": "32640"
  },
  {
    "text": "see these new features are game changing",
    "start": "32640",
    "end": "34500"
  },
  {
    "text": "and blazingly fast but they're not",
    "start": "34500",
    "end": "36239"
  },
  {
    "text": "without their trade-offs buckle up",
    "start": "36239",
    "end": "37800"
  },
  {
    "text": "because we've got a lot to unpack",
    "start": "37800",
    "end": "39420"
  },
  {
    "text": "starting with a brand new build tool",
    "start": "39420",
    "end": "41219"
  },
  {
    "text": "called turbo pack now I know you just",
    "start": "41219",
    "end": "43020"
  },
  {
    "text": "switched over to the next gen build tool",
    "start": "43020",
    "end": "44700"
  },
  {
    "text": "V last week but a new character is",
    "start": "44700",
    "end": "46680"
  },
  {
    "text": "spawned versel employs Tobias coppers",
    "start": "46680",
    "end": "48719"
  },
  {
    "text": "the creator of webpack who knows a thing",
    "start": "48719",
    "end": "50460"
  },
  {
    "text": "or two about module bundling turbo pack",
    "start": "50460",
    "end": "52500"
  },
  {
    "text": "was built from the ground up with rust",
    "start": "52500",
    "end": "54180"
  },
  {
    "text": "which appeals to our novelty bias and it",
    "start": "54180",
    "end": "56219"
  },
  {
    "text": "integrates turbo repo to Cache duplicate",
    "start": "56219",
    "end": "58500"
  },
  {
    "text": "operations together these factors can",
    "start": "58500",
    "end": "60360"
  },
  {
    "text": "satisfy your need for blazingly fast",
    "start": "60360",
    "end": "62460"
  },
  {
    "text": "speed turbo pack shows updates 10 times",
    "start": "62460",
    "end": "65400"
  },
  {
    "text": "faster than Veet and 700 times faster",
    "start": "65400",
    "end": "68700"
  },
  {
    "text": "than webpack shots fired shots fired",
    "start": "68700",
    "end": "72060"
  },
  {
    "text": "turbo pack sounds amazing but it's",
    "start": "72060",
    "end": "73860"
  },
  {
    "text": "currently an alpha and I'm a bit",
    "start": "73860",
    "end": "75540"
  },
  {
    "text": "skeptical there's a massive ecosystem of",
    "start": "75540",
    "end": "77520"
  },
  {
    "text": "webpack plugins that will likely make",
    "start": "77520",
    "end": "79260"
  },
  {
    "text": "migration very hard for existing apps",
    "start": "79260",
    "end": "81420"
  },
  {
    "text": "Versa will likely need to count on",
    "start": "81420",
    "end": "83100"
  },
  {
    "text": "community contributions with some kind",
    "start": "83100",
    "end": "84900"
  },
  {
    "text": "of plug-in system and that might be",
    "start": "84900",
    "end": "86460"
  },
  {
    "text": "difficult because JavaScript developers",
    "start": "86460",
    "end": "88140"
  },
  {
    "text": "like me are too dumb and lazy to learn",
    "start": "88140",
    "end": "90000"
  },
  {
    "text": "rust furthermore these speed gains are",
    "start": "90000",
    "end": "91799"
  },
  {
    "text": "mostly relevant to Big Enterprise",
    "start": "91799",
    "end": "93180"
  },
  {
    "text": "projects where teams over engineer these",
    "start": "93180",
    "end": "95159"
  },
  {
    "text": "giant monstrosities to guarantee job",
    "start": "95159",
    "end": "97140"
  },
  {
    "text": "security Veet with es build is already",
    "start": "97140",
    "end": "99540"
  },
  {
    "text": "fast enough for most projects and it's",
    "start": "99540",
    "end": "101220"
  },
  {
    "text": "got an awesome developer experience",
    "start": "101220",
    "end": "102540"
  },
  {
    "text": "that's hard to beat you should also know",
    "start": "102540",
    "end": "104159"
  },
  {
    "text": "that Purcell has an angle to make money",
    "start": "104159",
    "end": "105720"
  },
  {
    "text": "on this by remotely caching builds in",
    "start": "105720",
    "end": "107700"
  },
  {
    "text": "the cloud and parcel has been using this",
    "start": "107700",
    "end": "109560"
  },
  {
    "text": "architecture for a long time as well",
    "start": "109560",
    "end": "111119"
  },
  {
    "text": "what's way more exciting for me is the",
    "start": "111119",
    "end": "113159"
  },
  {
    "text": "brand new routing system the best",
    "start": "113159",
    "end": "114960"
  },
  {
    "text": "possible router which adds a smorgasbord",
    "start": "114960",
    "end": "117180"
  },
  {
    "text": "of new possibilities and performance",
    "start": "117180",
    "end": "119040"
  },
  {
    "text": "improvements to the framework these are",
    "start": "119040",
    "end": "120540"
  },
  {
    "text": "huge changes that they worked on",
    "start": "120540",
    "end": "121860"
  },
  {
    "text": "directly with the react core team but",
    "start": "121860",
    "end": "123840"
  },
  {
    "text": "before you freak out everything can be",
    "start": "123840",
    "end": "125460"
  },
  {
    "text": "incrementally adopted so it won't break",
    "start": "125460",
    "end": "127380"
  },
  {
    "text": "your existing project next 13 adds a new",
    "start": "127380",
    "end": "129840"
  },
  {
    "text": "app directory that also uses file",
    "start": "129840",
    "end": "131760"
  },
  {
    "text": "system-based routing like before but now",
    "start": "131760",
    "end": "133800"
  },
  {
    "text": "it's all directory based along with a",
    "start": "133800",
    "end": "135900"
  },
  {
    "text": "bunch of naming conventions for",
    "start": "135900",
    "end": "137280"
  },
  {
    "text": "different use cases to create a page you",
    "start": "137280",
    "end": "139620"
  },
  {
    "text": "give the direct the name of the route",
    "start": "139620",
    "end": "141120"
  },
  {
    "text": "then add a page.js file to it that",
    "start": "141120",
    "end": "143819"
  },
  {
    "text": "exports the component you want to",
    "start": "143819",
    "end": "145319"
  },
  {
    "text": "display there nice and simple however",
    "start": "145319",
    "end": "147300"
  },
  {
    "text": "because it's a directory we can",
    "start": "147300",
    "end": "148860"
  },
  {
    "text": "co-locate extra components here as well",
    "start": "148860",
    "end": "150720"
  },
  {
    "text": "instead of needing to create a separate",
    "start": "150720",
    "end": "152400"
  },
  {
    "text": "components directory or some other kind",
    "start": "152400",
    "end": "154200"
  },
  {
    "text": "of convention more importantly though it",
    "start": "154200",
    "end": "156000"
  },
  {
    "text": "opens the door to layouts and nested",
    "start": "156000",
    "end": "157920"
  },
  {
    "text": "routing when you give a file the name of",
    "start": "157920",
    "end": "159660"
  },
  {
    "text": "layout.js it creates a UI that can be",
    "start": "159660",
    "end": "162239"
  },
  {
    "text": "inherited by the child routes and when",
    "start": "162239",
    "end": "164160"
  },
  {
    "text": "you navigate to a route inside of a",
    "start": "164160",
    "end": "165720"
  },
  {
    "text": "layout only the inner UI is rendered as",
    "start": "165720",
    "end": "167879"
  },
  {
    "text": "opposed to the entire page this is",
    "start": "167879",
    "end": "169680"
  },
  {
    "text": "really cool because we also have file",
    "start": "169680",
    "end": "171420"
  },
  {
    "text": "naming conventions for loading and error",
    "start": "171420",
    "end": "173819"
  },
  {
    "text": "that can render a different UI at the",
    "start": "173819",
    "end": "175739"
  },
  {
    "text": "component level based on its current",
    "start": "175739",
    "end": "177480"
  },
  {
    "text": "state for example if the component",
    "start": "177480",
    "end": "179220"
  },
  {
    "text": "breaks it will render error.js instead",
    "start": "179220",
    "end": "181800"
  },
  {
    "text": "of page.js while the rest of the UI",
    "start": "181800",
    "end": "183959"
  },
  {
    "text": "stays intact and this just makes life so",
    "start": "183959",
    "end": "185940"
  },
  {
    "text": "much easier but by far the most epic",
    "start": "185940",
    "end": "187920"
  },
  {
    "text": "feature in this new release is data",
    "start": "187920",
    "end": "189959"
  },
  {
    "text": "fetching next is what you would almost",
    "start": "189959",
    "end": "191459"
  },
  {
    "text": "call the official react framework now",
    "start": "191459",
    "end": "193319"
  },
  {
    "text": "that's our endorsement that this is the",
    "start": "193319",
    "end": "195360"
  },
  {
    "text": "data fetching solution for react that",
    "start": "195360",
    "end": "198180"
  },
  {
    "text": "everyone I think has been been waiting",
    "start": "198180",
    "end": "199560"
  },
  {
    "text": "for what I I haven't told you yet is",
    "start": "199560",
    "end": "201300"
  },
  {
    "text": "that all of these components are react",
    "start": "201300",
    "end": "203099"
  },
  {
    "text": "server components by default server",
    "start": "203099",
    "end": "204959"
  },
  {
    "text": "components are a low level primitive in",
    "start": "204959",
    "end": "206700"
  },
  {
    "text": "react that enables server-side rendering",
    "start": "206700",
    "end": "208620"
  },
  {
    "text": "but until now they've always been kind",
    "start": "208620",
    "end": "210300"
  },
  {
    "text": "of difficult for the common developer to",
    "start": "210300",
    "end": "212099"
  },
  {
    "text": "use it's a huge deal because now we can",
    "start": "212099",
    "end": "214200"
  },
  {
    "text": "totally get rid of things like get",
    "start": "214200",
    "end": "215819"
  },
  {
    "text": "static props and get server-side props",
    "start": "215819",
    "end": "218099"
  },
  {
    "text": "instead we can just write a plain",
    "start": "218099",
    "end": "219900"
  },
  {
    "text": "JavaScript function that uses Fetch and",
    "start": "219900",
    "end": "222000"
  },
  {
    "text": "then await the result of that function",
    "start": "222000",
    "end": "223560"
  },
  {
    "text": "directly in a component no need to pass",
    "start": "223560",
    "end": "225840"
  },
  {
    "text": "props back and forth between client and",
    "start": "225840",
    "end": "227760"
  },
  {
    "text": "server it feels totally natural like",
    "start": "227760",
    "end": "229560"
  },
  {
    "text": "you're just using vanilla JavaScript and",
    "start": "229560",
    "end": "231360"
  },
  {
    "text": "you don't even need to serialize data",
    "start": "231360",
    "end": "232920"
  },
  {
    "text": "which can be a major pain Point",
    "start": "232920",
    "end": "234299"
  },
  {
    "text": "furthermore you can take Concepts like",
    "start": "234299",
    "end": "236099"
  },
  {
    "text": "ISR SSR and SSG and remove them from",
    "start": "236099",
    "end": "239220"
  },
  {
    "text": "your brain the new mental model revolves",
    "start": "239220",
    "end": "241019"
  },
  {
    "text": "entirely around caching by default all",
    "start": "241019",
    "end": "243180"
  },
  {
    "text": "pages will be cached to provide the",
    "start": "243180",
    "end": "244739"
  },
  {
    "text": "performance of a static site but if you",
    "start": "244739",
    "end": "246659"
  },
  {
    "text": "want new data on every request like SSR",
    "start": "246659",
    "end": "249000"
  },
  {
    "text": "you can add the Cache no store option to",
    "start": "249000",
    "end": "251220"
  },
  {
    "text": "fetch or for incremental static",
    "start": "251220",
    "end": "252959"
  },
  {
    "text": "regeneration use the next option with",
    "start": "252959",
    "end": "254939"
  },
  {
    "text": "the number of rebalidate seconds and",
    "start": "254939",
    "end": "256799"
  },
  {
    "text": "what's also amazing about all this is",
    "start": "256799",
    "end": "258479"
  },
  {
    "text": "that the UI can be incrementally",
    "start": "258479",
    "end": "259919"
  },
  {
    "text": "streamed in thanks to react suspense all",
    "start": "259919",
    "end": "262680"
  },
  {
    "text": "you have to do is Define a loading.js",
    "start": "262680",
    "end": "264780"
  },
  {
    "text": "file to define the UI if a component is",
    "start": "264780",
    "end": "267180"
  },
  {
    "text": "still awaiting data it will",
    "start": "267180",
    "end": "268440"
  },
  {
    "text": "automatically show it at the component",
    "start": "268440",
    "end": "269940"
  },
  {
    "text": "level while rendering everything else in",
    "start": "269940",
    "end": "271800"
  },
  {
    "text": "the application game changing but many",
    "start": "271800",
    "end": "273960"
  },
  {
    "text": "of these features are clearly inspired",
    "start": "273960",
    "end": "275759"
  },
  {
    "text": "by remix credit where credit is due but",
    "start": "275759",
    "end": "278160"
  },
  {
    "text": "all is fair in love and MIT license code",
    "start": "278160",
    "end": "280979"
  },
  {
    "text": "but one thing next is missing is a way",
    "start": "280979",
    "end": "283020"
  },
  {
    "text": "to write data similar to remix forms",
    "start": "283020",
    "end": "285419"
  },
  {
    "text": "which I think is a really great feature",
    "start": "285419",
    "end": "286919"
  },
  {
    "text": "and weirdly there's no way to write API",
    "start": "286919",
    "end": "288900"
  },
  {
    "text": "routes in the new app directory as far",
    "start": "288900",
    "end": "290460"
  },
  {
    "text": "as I can tell and to me that just seems",
    "start": "290460",
    "end": "292020"
  },
  {
    "text": "like a sloppy loose end as I showed data",
    "start": "292020",
    "end": "294360"
  },
  {
    "text": "fetching looks amazing but mutations are",
    "start": "294360",
    "end": "296639"
  },
  {
    "text": "an entirely different story in the docs",
    "start": "296639",
    "end": "298500"
  },
  {
    "text": "it says the next team is working on a",
    "start": "298500",
    "end": "299940"
  },
  {
    "text": "new RFC for mutating data but currently",
    "start": "299940",
    "end": "302280"
  },
  {
    "text": "you would use a client-side component",
    "start": "302280",
    "end": "303960"
  },
  {
    "text": "write your mutation logic then pass a",
    "start": "303960",
    "end": "306060"
  },
  {
    "text": "callback function of refresh to update",
    "start": "306060",
    "end": "307919"
  },
  {
    "text": "any data on that route after the",
    "start": "307919",
    "end": "309479"
  },
  {
    "text": "mutation is complete this is kind of",
    "start": "309479",
    "end": "311040"
  },
  {
    "text": "similar to how things work in react",
    "start": "311040",
    "end": "312479"
  },
  {
    "text": "query but it seems like the framework",
    "start": "312479",
    "end": "313979"
  },
  {
    "text": "could provide a more intuitive solution",
    "start": "313979",
    "end": "315419"
  },
  {
    "text": "here overall I think next 13 looks",
    "start": "315419",
    "end": "317400"
  },
  {
    "text": "amazing however these are major changes",
    "start": "317400",
    "end": "319320"
  },
  {
    "text": "that basically make every next JS",
    "start": "319320",
    "end": "321000"
  },
  {
    "text": "tutorial out there obsolete even if",
    "start": "321000",
    "end": "322860"
  },
  {
    "text": "these changes are a step forward the",
    "start": "322860",
    "end": "324419"
  },
  {
    "text": "reality is that people don't like change",
    "start": "324419",
    "end": "326160"
  },
  {
    "text": "like people were riding in the streets",
    "start": "326160",
    "end": "327900"
  },
  {
    "text": "when view 2 went to view 3 even though",
    "start": "327900",
    "end": "329759"
  },
  {
    "text": "it too can be adopted incrementally",
    "start": "329759",
    "end": "331500"
  },
  {
    "text": "right now everybody's super excited",
    "start": "331500",
    "end": "333120"
  },
  {
    "text": "about these new features but if you're",
    "start": "333120",
    "end": "334560"
  },
  {
    "text": "the guy that has to migrate all that",
    "start": "334560",
    "end": "335880"
  },
  {
    "text": "code your initial excitement might soon",
    "start": "335880",
    "end": "337620"
  },
  {
    "text": "turn to anger another criticism is that",
    "start": "337620",
    "end": "339780"
  },
  {
    "text": "a Hello World app is still 90 kilobytes",
    "start": "339780",
    "end": "341940"
  },
  {
    "text": "of JavaScript it seems like it should be",
    "start": "341940",
    "end": "343680"
  },
  {
    "text": "able to ship zero JavaScript apps like",
    "start": "343680",
    "end": "345780"
  },
  {
    "text": "Astro quick and so on but that doesn't",
    "start": "345780",
    "end": "348120"
  },
  {
    "text": "appear to be the case in addition to the",
    "start": "348120",
    "end": "349860"
  },
  {
    "text": "features I mentioned there are all kinds",
    "start": "349860",
    "end": "351479"
  },
  {
    "text": "of small optimizations and one of them",
    "start": "351479",
    "end": "353400"
  },
  {
    "text": "was even inspired by a video I made Edge",
    "start": "353400",
    "end": "355740"
  },
  {
    "text": "functions can now be set to a specific",
    "start": "355740",
    "end": "357419"
  },
  {
    "text": "region and it's great to see these big",
    "start": "357419",
    "end": "359100"
  },
  {
    "text": "companies recognize that the shape of",
    "start": "359100",
    "end": "360900"
  },
  {
    "text": "the planet is not an oblate sphere but",
    "start": "360900",
    "end": "362699"
  },
  {
    "text": "rather a level plane and lastly I'm",
    "start": "362699",
    "end": "364800"
  },
  {
    "text": "working on a longer full tutorial for",
    "start": "364800",
    "end": "366479"
  },
  {
    "text": "next 13 which will be on my new channel",
    "start": "366479",
    "end": "368340"
  },
  {
    "text": "Beyond fireship so make sure to",
    "start": "368340",
    "end": "370080"
  },
  {
    "text": "subscribe over there this has been the",
    "start": "370080",
    "end": "371699"
  },
  {
    "text": "code report thanks for watching and I",
    "start": "371699",
    "end": "373620"
  },
  {
    "text": "will see you in the next one",
    "start": "373620",
    "end": "375220"
  },
  {
    "text": "[Music]",
    "start": "375220",
    "end": "377409"
  }
]