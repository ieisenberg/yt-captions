[
  {
    "text": "[Music]",
    "start": "490",
    "end": "2090"
  },
  {
    "text": "today I'm going to show you everything",
    "start": "2090",
    "end": "4170"
  },
  {
    "text": "you need to know to start using reactive",
    "start": "4170",
    "end": "5940"
  },
  {
    "text": "forms in angular 6 effectively we'll do",
    "start": "5940",
    "end": "8880"
  },
  {
    "text": "this by building five different forms",
    "start": "8880",
    "end": "10230"
  },
  {
    "text": "that started the absolute basics then",
    "start": "10230",
    "end": "12630"
  },
  {
    "text": "progress on to topics like dynamic form",
    "start": "12630",
    "end": "14639"
  },
  {
    "text": "fields validation and submitting your",
    "start": "14639",
    "end": "16740"
  },
  {
    "text": "form data to a back-end database almost",
    "start": "16740",
    "end": "19289"
  },
  {
    "text": "all apps use forms in some capacity so",
    "start": "19289",
    "end": "21600"
  },
  {
    "text": "understanding reactive forms is a very",
    "start": "21600",
    "end": "23730"
  },
  {
    "text": "valuable skill to have as an angular",
    "start": "23730",
    "end": "25380"
  },
  {
    "text": "developer if you're new make sure to",
    "start": "25380",
    "end": "27750"
  },
  {
    "text": "subscribe and grab the source code from",
    "start": "27750",
    "end": "29460"
  },
  {
    "text": "angular firebase comm and I'll be giving",
    "start": "29460",
    "end": "31679"
  },
  {
    "text": "away three free hats on Friday all you",
    "start": "31679",
    "end": "33540"
  },
  {
    "text": "have to do is leave a comment on this",
    "start": "33540",
    "end": "34980"
  },
  {
    "text": "video I'll be starting off here from an",
    "start": "34980",
    "end": "37770"
  },
  {
    "text": "angular 6 project and the first thing",
    "start": "37770",
    "end": "39660"
  },
  {
    "text": "I'll do is add angular material to this",
    "start": "39660",
    "end": "41340"
  },
  {
    "text": "project because it has some awesome UI",
    "start": "41340",
    "end": "43350"
  },
  {
    "text": "elements for form validation you can",
    "start": "43350",
    "end": "46230"
  },
  {
    "text": "install it in your project by running ng",
    "start": "46230",
    "end": "48239"
  },
  {
    "text": "add angular slash material then I've",
    "start": "48239",
    "end": "51149"
  },
  {
    "text": "already generated five different",
    "start": "51149",
    "end": "52350"
  },
  {
    "text": "components that I'm going to use to",
    "start": "52350",
    "end": "53969"
  },
  {
    "text": "demonstrate these different reactive",
    "start": "53969",
    "end": "55680"
  },
  {
    "text": "form examples if you don't know how to",
    "start": "55680",
    "end": "57510"
  },
  {
    "text": "generate components with the CLI make",
    "start": "57510",
    "end": "59280"
  },
  {
    "text": "sure to watch episode 104 from last week",
    "start": "59280",
    "end": "61620"
  },
  {
    "text": "the reactive forms module isn't included",
    "start": "61620",
    "end": "64350"
  },
  {
    "text": "by default so we're going to import that",
    "start": "64350",
    "end": "66930"
  },
  {
    "text": "from angular forms and then we have a",
    "start": "66930",
    "end": "69060"
  },
  {
    "text": "bunch of modules that were importing",
    "start": "69060",
    "end": "70860"
  },
  {
    "text": "from angular material that handled",
    "start": "70860",
    "end": "72510"
  },
  {
    "text": "different form fields that we want to",
    "start": "72510",
    "end": "74159"
  },
  {
    "text": "use then all of these modules will be",
    "start": "74159",
    "end": "76409"
  },
  {
    "text": "added down to the import section giving",
    "start": "76409",
    "end": "78570"
  },
  {
    "text": "us access to these various components",
    "start": "78570",
    "end": "80460"
  },
  {
    "text": "and services when it comes to angular",
    "start": "80460",
    "end": "82590"
  },
  {
    "text": "material there's a whole bunch of",
    "start": "82590",
    "end": "83939"
  },
  {
    "text": "different form elements that you can use",
    "start": "83939",
    "end": "85439"
  },
  {
    "text": "so make sure to check out the docs and",
    "start": "85439",
    "end": "87420"
  },
  {
    "text": "experiment with some of the examples",
    "start": "87420",
    "end": "88979"
  },
  {
    "text": "there",
    "start": "88979",
    "end": "89450"
  },
  {
    "text": "the first reactive form we'll build",
    "start": "89450",
    "end": "91770"
  },
  {
    "text": "starts with the absolute basics let's",
    "start": "91770",
    "end": "94020"
  },
  {
    "text": "see how we can set up a few form",
    "start": "94020",
    "end": "95369"
  },
  {
    "text": "controls for an email a message and a",
    "start": "95369",
    "end": "98340"
  },
  {
    "text": "select field for a career then we'll",
    "start": "98340",
    "end": "100530"
  },
  {
    "text": "observe the changes to the actual values",
    "start": "100530",
    "end": "102659"
  },
  {
    "text": "being entered into this form you'll",
    "start": "102659",
    "end": "105000"
  },
  {
    "text": "notice that every time we enter",
    "start": "105000",
    "end": "106110"
  },
  {
    "text": "something into this form it updates the",
    "start": "106110",
    "end": "108210"
  },
  {
    "text": "value object that's because under the",
    "start": "108210",
    "end": "110640"
  },
  {
    "text": "hood the form is using rxjs to treat the",
    "start": "110640",
    "end": "113280"
  },
  {
    "text": "form as a reactive real-time stream",
    "start": "113280",
    "end": "115850"
  },
  {
    "text": "let's go ahead and jump into the type",
    "start": "115850",
    "end": "118110"
  },
  {
    "text": "script for this component and we'll take",
    "start": "118110",
    "end": "119909"
  },
  {
    "text": "a look at what we need to build the",
    "start": "119909",
    "end": "121680"
  },
  {
    "text": "reactive form there's really two things",
    "start": "121680",
    "end": "123600"
  },
  {
    "text": "you need to know to get started and",
    "start": "123600",
    "end": "125100"
  },
  {
    "text": "that's form group and form builder form",
    "start": "125100",
    "end": "128610"
  },
  {
    "text": "group is the actual class that we use to",
    "start": "128610",
    "end": "130800"
  },
  {
    "text": "tie different form controls together",
    "start": "130800",
    "end": "132660"
  },
  {
    "text": "into a",
    "start": "132660",
    "end": "133380"
  },
  {
    "text": "single unified form form builder is just",
    "start": "133380",
    "end": "136200"
  },
  {
    "text": "a service that we can use to make",
    "start": "136200",
    "end": "137880"
  },
  {
    "text": "building forms easier so the first thing",
    "start": "137880",
    "end": "141270"
  },
  {
    "text": "you'll deal with pretty much any",
    "start": "141270",
    "end": "142140"
  },
  {
    "text": "reactive form is to clear the variable",
    "start": "142140",
    "end": "144480"
  },
  {
    "text": "type to the form group and we'll do this",
    "start": "144480",
    "end": "147120"
  },
  {
    "text": "in every single one of the demos the",
    "start": "147120",
    "end": "149400"
  },
  {
    "text": "next thing we'll do is add the form",
    "start": "149400",
    "end": "150840"
  },
  {
    "text": "builder service to the constructor of",
    "start": "150840",
    "end": "152640"
  },
  {
    "text": "this component then we'll create a data",
    "start": "152640",
    "end": "155190"
  },
  {
    "text": "model for this form during ng on an it",
    "start": "155190",
    "end": "157680"
  },
  {
    "text": "you can think of this as a schema for",
    "start": "157680",
    "end": "159750"
  },
  {
    "text": "the data that holds the actual values",
    "start": "159750",
    "end": "161730"
  },
  {
    "text": "and validation rules for the fields",
    "start": "161730",
    "end": "163950"
  },
  {
    "text": "inside your form we call form builder",
    "start": "163950",
    "end": "166290"
  },
  {
    "text": "group and then we set email and then we",
    "start": "166290",
    "end": "168900"
  },
  {
    "text": "can provide an empty string which",
    "start": "168900",
    "end": "170100"
  },
  {
    "text": "defines the default value most forms",
    "start": "170100",
    "end": "173190"
  },
  {
    "text": "will start off empty but if you want to",
    "start": "173190",
    "end": "174900"
  },
  {
    "text": "set a default value you can just define",
    "start": "174900",
    "end": "176670"
  },
  {
    "text": "it here and that's really all it takes",
    "start": "176670",
    "end": "178800"
  },
  {
    "text": "to build a reactive form in the",
    "start": "178800",
    "end": "180510"
  },
  {
    "text": "typescript but you might also want to",
    "start": "180510",
    "end": "182640"
  },
  {
    "text": "extract the data from this form and the",
    "start": "182640",
    "end": "184740"
  },
  {
    "text": "typescript as well the form group has a",
    "start": "184740",
    "end": "187080"
  },
  {
    "text": "method on it called value changes that",
    "start": "187080",
    "end": "189180"
  },
  {
    "text": "returns an observable if we subscribe to",
    "start": "189180",
    "end": "191550"
  },
  {
    "text": "that observable it's going to emit the",
    "start": "191550",
    "end": "193500"
  },
  {
    "text": "value of the form every time it changes",
    "start": "193500",
    "end": "195840"
  },
  {
    "text": "that's how it was able to console.log",
    "start": "195840",
    "end": "197760"
  },
  {
    "text": "every value change in the demo now we",
    "start": "197760",
    "end": "200280"
  },
  {
    "text": "need to connect this form group to the",
    "start": "200280",
    "end": "201720"
  },
  {
    "text": "HTML and bind it with our angular",
    "start": "201720",
    "end": "203880"
  },
  {
    "text": "material UI components for every",
    "start": "203880",
    "end": "206430"
  },
  {
    "text": "reactive form you'll bind this form",
    "start": "206430",
    "end": "208260"
  },
  {
    "text": "group attribute to the form you defined",
    "start": "208260",
    "end": "210180"
  },
  {
    "text": "in the type script and if you want to",
    "start": "210180",
    "end": "212490"
  },
  {
    "text": "see the value of the form in the HTML",
    "start": "212490",
    "end": "214350"
  },
  {
    "text": "you can just call a my form value and",
    "start": "214350",
    "end": "216240"
  },
  {
    "text": "then use that JSON pipe from there we'll",
    "start": "216240",
    "end": "219480"
  },
  {
    "text": "add a material form field and an HTML",
    "start": "219480",
    "end": "222240"
  },
  {
    "text": "input with the matte input directive so",
    "start": "222240",
    "end": "225240"
  },
  {
    "text": "that's just plain angular material to",
    "start": "225240",
    "end": "227490"
  },
  {
    "text": "connect it to the reactive form we call",
    "start": "227490",
    "end": "229260"
  },
  {
    "text": "a form control name and give it the name",
    "start": "229260",
    "end": "231450"
  },
  {
    "text": "of the attribute that we defined in the",
    "start": "231450",
    "end": "233280"
  },
  {
    "text": "type script we can go ahead and follow",
    "start": "233280",
    "end": "235200"
  },
  {
    "text": "the same pattern for all of the other",
    "start": "235200",
    "end": "236820"
  },
  {
    "text": "fields in our form and again the only",
    "start": "236820",
    "end": "238950"
  },
  {
    "text": "special thing we need to do is call form",
    "start": "238950",
    "end": "240600"
  },
  {
    "text": "control name everything else is just a",
    "start": "240600",
    "end": "242459"
  },
  {
    "text": "plain angular material form the one",
    "start": "242459",
    "end": "245040"
  },
  {
    "text": "thing you might notice about forms is",
    "start": "245040",
    "end": "246540"
  },
  {
    "text": "that there's a lot of markup code that",
    "start": "246540",
    "end": "248400"
  },
  {
    "text": "you have to deal with to avoid leaving",
    "start": "248400",
    "end": "250530"
  },
  {
    "text": "you at the big bowl of code soup I want",
    "start": "250530",
    "end": "252300"
  },
  {
    "text": "to start looking at ways we can keep our",
    "start": "252300",
    "end": "253950"
  },
  {
    "text": "reactive forms dry very early on the",
    "start": "253950",
    "end": "256769"
  },
  {
    "text": "second demo we'll look at is a nested",
    "start": "256770",
    "end": "258720"
  },
  {
    "text": "form what's special about this form is",
    "start": "258720",
    "end": "260790"
  },
  {
    "text": "that we have a parent form group and",
    "start": "260790",
    "end": "262380"
  },
  {
    "text": "then we have a couple of nested forms",
    "start": "262380",
    "end": "264000"
  },
  {
    "text": "inside of it for each of these phone",
    "start": "264000",
    "end": "265680"
  },
  {
    "text": "numbers for the form bow",
    "start": "265680",
    "end": "267150"
  },
  {
    "text": "you can see that we have a nested object",
    "start": "267150",
    "end": "269100"
  },
  {
    "text": "inside the forum for each of these phone",
    "start": "269100",
    "end": "270870"
  },
  {
    "text": "numbers let's take a look at how we can",
    "start": "270870",
    "end": "272699"
  },
  {
    "text": "use nesting to keep our forms organized",
    "start": "272699",
    "end": "275360"
  },
  {
    "text": "we have the same setup as our previous",
    "start": "275360",
    "end": "277650"
  },
  {
    "text": "basic form but this time we'll create a",
    "start": "277650",
    "end": "280320"
  },
  {
    "text": "reusable form group that we can use",
    "start": "280320",
    "end": "282210"
  },
  {
    "text": "multiple times in the parent form again",
    "start": "282210",
    "end": "284490"
  },
  {
    "text": "we call form builder group and then",
    "start": "284490",
    "end": "286530"
  },
  {
    "text": "we'll add a couple of default values",
    "start": "286530",
    "end": "288090"
  },
  {
    "text": "here for the various parts of the phone",
    "start": "288090",
    "end": "289949"
  },
  {
    "text": "number then we'll define the parent in",
    "start": "289949",
    "end": "292410"
  },
  {
    "text": "the same way by calling form builder",
    "start": "292410",
    "end": "293970"
  },
  {
    "text": "group we can nest the schema that we",
    "start": "293970",
    "end": "295889"
  },
  {
    "text": "defined for phone numbers multiple times",
    "start": "295889",
    "end": "297750"
  },
  {
    "text": "within this form so maybe we have a home",
    "start": "297750",
    "end": "299760"
  },
  {
    "text": "phone number and also a cell phone",
    "start": "299760",
    "end": "301740"
  },
  {
    "text": "number then if we switch over the HTML",
    "start": "301740",
    "end": "304350"
  },
  {
    "text": "the initial markup is exactly the same",
    "start": "304350",
    "end": "306479"
  },
  {
    "text": "but there's one key difference when",
    "start": "306479",
    "end": "308220"
  },
  {
    "text": "dealing with a nested group instead of",
    "start": "308220",
    "end": "310320"
  },
  {
    "text": "using form control name we'll set up a",
    "start": "310320",
    "end": "312479"
  },
  {
    "text": "div and pass it the form control group",
    "start": "312479",
    "end": "314850"
  },
  {
    "text": "name this will be our cell phone group",
    "start": "314850",
    "end": "317039"
  },
  {
    "text": "then inside the context of cell phone we",
    "start": "317039",
    "end": "319470"
  },
  {
    "text": "can start adding our inputs which will",
    "start": "319470",
    "end": "321300"
  },
  {
    "text": "take the form control name so we can",
    "start": "321300",
    "end": "324180"
  },
  {
    "text": "control the cell phone that way and then",
    "start": "324180",
    "end": "325740"
  },
  {
    "text": "we can do the same thing for the home",
    "start": "325740",
    "end": "327750"
  },
  {
    "text": "phone as well so that works okay if you",
    "start": "327750",
    "end": "330210"
  },
  {
    "text": "have two phone numbers but what if the",
    "start": "330210",
    "end": "331949"
  },
  {
    "text": "user can dynamically add as many phone",
    "start": "331949",
    "end": "333810"
  },
  {
    "text": "numbers as they want using this nested",
    "start": "333810",
    "end": "336270"
  },
  {
    "text": "form technique with ten phone numbers",
    "start": "336270",
    "end": "337830"
  },
  {
    "text": "wouldn't be maintainable at all in the",
    "start": "337830",
    "end": "340260"
  },
  {
    "text": "next demo we're going to look at form",
    "start": "340260",
    "end": "341910"
  },
  {
    "text": "array which allows us to dynamically add",
    "start": "341910",
    "end": "343889"
  },
  {
    "text": "fields to the form instead of",
    "start": "343889",
    "end": "346199"
  },
  {
    "text": "hard-coding in the form markup we'll",
    "start": "346199",
    "end": "348000"
  },
  {
    "text": "just add a button here that allows the",
    "start": "348000",
    "end": "349500"
  },
  {
    "text": "user to add as many phone numbers as",
    "start": "349500",
    "end": "351240"
  },
  {
    "text": "they want and it will add a new field",
    "start": "351240",
    "end": "353070"
  },
  {
    "text": "for each one to our reactive form you'll",
    "start": "353070",
    "end": "355919"
  },
  {
    "text": "notice that instead of a nested object",
    "start": "355919",
    "end": "357750"
  },
  {
    "text": "we now have a nested array of objects",
    "start": "357750",
    "end": "359970"
  },
  {
    "text": "and because every element in an array",
    "start": "359970",
    "end": "362159"
  },
  {
    "text": "has an index we can allow the user to",
    "start": "362159",
    "end": "364289"
  },
  {
    "text": "delete any phone numbers that they've",
    "start": "364289",
    "end": "366000"
  },
  {
    "text": "already added to the form the initial",
    "start": "366000",
    "end": "368550"
  },
  {
    "text": "form setup is very similar but we also",
    "start": "368550",
    "end": "370710"
  },
  {
    "text": "need to import form array from angular",
    "start": "370710",
    "end": "373020"
  },
  {
    "text": "forms from there we can set up a phone's",
    "start": "373020",
    "end": "375449"
  },
  {
    "text": "property on the form and instead of",
    "start": "375449",
    "end": "377250"
  },
  {
    "text": "making this a nested form it'll be a",
    "start": "377250",
    "end": "379169"
  },
  {
    "text": "form array that just starts out with an",
    "start": "379169",
    "end": "381389"
  },
  {
    "text": "empty array then the next thing we want",
    "start": "381389",
    "end": "383909"
  },
  {
    "text": "to do is set up a getter to retrieve the",
    "start": "383909",
    "end": "386430"
  },
  {
    "text": "phones from the form this is technically",
    "start": "386430",
    "end": "389070"
  },
  {
    "text": "optional but getters will make your life",
    "start": "389070",
    "end": "390780"
  },
  {
    "text": "a lot easier when working with reactive",
    "start": "390780",
    "end": "392580"
  },
  {
    "text": "forms as we'll see here in the upcoming",
    "start": "392580",
    "end": "394409"
  },
  {
    "text": "demos we can have this method return the",
    "start": "394409",
    "end": "397020"
  },
  {
    "text": "phones from the form and we'll make sure",
    "start": "397020",
    "end": "398880"
  },
  {
    "text": "to return that as a form array",
    "start": "398880",
    "end": "400980"
  },
  {
    "text": "then the next thing we need to do is set",
    "start": "400980",
    "end": "403140"
  },
  {
    "text": "up a function that will run every time a",
    "start": "403140",
    "end": "405090"
  },
  {
    "text": "button is clicked to add a new field to",
    "start": "405090",
    "end": "407340"
  },
  {
    "text": "the form let's call this the add phone",
    "start": "407340",
    "end": "409650"
  },
  {
    "text": "method and we'll first set up a variable",
    "start": "409650",
    "end": "411450"
  },
  {
    "text": "that defines our form builder group then",
    "start": "411450",
    "end": "413910"
  },
  {
    "text": "we can use the getter to return the form",
    "start": "413910",
    "end": "415650"
  },
  {
    "text": "array from the reactive form and we'll",
    "start": "415650",
    "end": "417900"
  },
  {
    "text": "call push on it with this new form group",
    "start": "417900",
    "end": "420030"
  },
  {
    "text": "that handles adding a form group",
    "start": "420030",
    "end": "422220"
  },
  {
    "text": "deleting a form field is even easier",
    "start": "422220",
    "end": "424050"
  },
  {
    "text": "when we loop over them we'll be able to",
    "start": "424050",
    "end": "425970"
  },
  {
    "text": "get the index then we can simply call",
    "start": "425970",
    "end": "428070"
  },
  {
    "text": "form array remove at this index and that",
    "start": "428070",
    "end": "430860"
  },
  {
    "text": "removes it from the reactive form the",
    "start": "430860",
    "end": "433440"
  },
  {
    "text": "HTML markup is going to start out",
    "start": "433440",
    "end": "435540"
  },
  {
    "text": "exactly the same as before but now that",
    "start": "435540",
    "end": "437670"
  },
  {
    "text": "we have an array we're going to call",
    "start": "437670",
    "end": "439170"
  },
  {
    "text": "form array name with that phone's",
    "start": "439170",
    "end": "441030"
  },
  {
    "text": "property then because we're dealing with",
    "start": "441030",
    "end": "443550"
  },
  {
    "text": "an array we're going to need to loop",
    "start": "443550",
    "end": "445410"
  },
  {
    "text": "over it so I'll say let phone of phone",
    "start": "445410",
    "end": "448680"
  },
  {
    "text": "forms controls and while performing this",
    "start": "448680",
    "end": "451800"
  },
  {
    "text": "loop we also want to keep track of the",
    "start": "451800",
    "end": "453510"
  },
  {
    "text": "index which we can do with let I equals",
    "start": "453510",
    "end": "455970"
  },
  {
    "text": "index now each item in this loop is",
    "start": "455970",
    "end": "459540"
  },
  {
    "text": "going to be a form group so we need to",
    "start": "459540",
    "end": "461640"
  },
  {
    "text": "pass the form group name which is just",
    "start": "461640",
    "end": "463680"
  },
  {
    "text": "the index when dealing with a form Group",
    "start": "463680",
    "end": "465600"
  },
  {
    "text": "array now we can set up the form fields",
    "start": "465600",
    "end": "468150"
  },
  {
    "text": "just like we've done in all the previous",
    "start": "468150",
    "end": "469410"
  },
  {
    "text": "examples passing at the form control",
    "start": "469410",
    "end": "471810"
  },
  {
    "text": "name the main difference is that we now",
    "start": "471810",
    "end": "474120"
  },
  {
    "text": "need to populate this array with some",
    "start": "474120",
    "end": "475710"
  },
  {
    "text": "items which we'll do on a button click",
    "start": "475710",
    "end": "477510"
  },
  {
    "text": "so we can set up a material button down",
    "start": "477510",
    "end": "479520"
  },
  {
    "text": "here then we'll run our ad phone event",
    "start": "479520",
    "end": "482490"
  },
  {
    "text": "handler when this button is clicked so",
    "start": "482490",
    "end": "485250"
  },
  {
    "text": "that button lives outside of the loop",
    "start": "485250",
    "end": "486720"
  },
  {
    "text": "but then to delete an item we want to go",
    "start": "486720",
    "end": "488790"
  },
  {
    "text": "back inside of our for loop and add the",
    "start": "488790",
    "end": "491220"
  },
  {
    "text": "delete method to a button as well so",
    "start": "491220",
    "end": "493710"
  },
  {
    "text": "make sure you're inside of ng 4 and then",
    "start": "493710",
    "end": "496170"
  },
  {
    "text": "add your button inside of there and this",
    "start": "496170",
    "end": "498090"
  },
  {
    "text": "time bind it to the delete phone method",
    "start": "498090",
    "end": "500310"
  },
  {
    "text": "and pass it the index as an argument now",
    "start": "500310",
    "end": "503820"
  },
  {
    "text": "we know how to build large dynamic forms",
    "start": "503820",
    "end": "505590"
  },
  {
    "text": "but we're going to need to validate the",
    "start": "505590",
    "end": "507630"
  },
  {
    "text": "user input into these forms the one",
    "start": "507630",
    "end": "510450"
  },
  {
    "text": "thing I haven't shown you yet is that",
    "start": "510450",
    "end": "511800"
  },
  {
    "text": "the reactive form has a whole bunch of",
    "start": "511800",
    "end": "513360"
  },
  {
    "text": "different states that it can be in for",
    "start": "513360",
    "end": "515370"
  },
  {
    "text": "example it can be valid if it is passing",
    "start": "515370",
    "end": "517650"
  },
  {
    "text": "all validation rules it's considered",
    "start": "517650",
    "end": "519960"
  },
  {
    "text": "dirty if the user has typed into it it's",
    "start": "519960",
    "end": "522900"
  },
  {
    "text": "considered touched if the user has",
    "start": "522900",
    "end": "524370"
  },
  {
    "text": "entered a form field and then left it",
    "start": "524370",
    "end": "526350"
  },
  {
    "text": "and all of these different states can be",
    "start": "526350",
    "end": "528480"
  },
  {
    "text": "applied to the entire form group as a",
    "start": "528480",
    "end": "530130"
  },
  {
    "text": "whole or they can be used for each",
    "start": "530130",
    "end": "532080"
  },
  {
    "text": "individual control inside of the form",
    "start": "532080",
    "end": "534430"
  },
  {
    "text": "and angular will apply a CSS class for",
    "start": "534430",
    "end": "536680"
  },
  {
    "text": "each one of these states to the form so",
    "start": "536680",
    "end": "538750"
  },
  {
    "text": "you can use it to control the styling",
    "start": "538750",
    "end": "540520"
  },
  {
    "text": "based on the state that the form is in",
    "start": "540520",
    "end": "542610"
  },
  {
    "text": "fortunately angular material does most",
    "start": "542610",
    "end": "544960"
  },
  {
    "text": "of this for us right out of the box as",
    "start": "544960",
    "end": "546570"
  },
  {
    "text": "you can see here if we don't apply a",
    "start": "546570",
    "end": "548680"
  },
  {
    "text": "ballot email it's going to give us this",
    "start": "548680",
    "end": "550120"
  },
  {
    "text": "message that says your email does not",
    "start": "550120",
    "end": "551920"
  },
  {
    "text": "look right but as soon as we enter a",
    "start": "551920",
    "end": "554620"
  },
  {
    "text": "valid email that error message goes away",
    "start": "554620",
    "end": "557280"
  },
  {
    "text": "we can also show different messages",
    "start": "557280",
    "end": "559720"
  },
  {
    "text": "based on the type of error that's",
    "start": "559720",
    "end": "561160"
  },
  {
    "text": "received for example we might say five",
    "start": "561160",
    "end": "563620"
  },
  {
    "text": "is too young to use this app while 99 is",
    "start": "563620",
    "end": "566230"
  },
  {
    "text": "too old to use this app and then you'll",
    "start": "566230",
    "end": "568930"
  },
  {
    "text": "also notice that we have a submit button",
    "start": "568930",
    "end": "570220"
  },
  {
    "text": "down here at the bottom that buttons",
    "start": "570220",
    "end": "572320"
  },
  {
    "text": "disabled until the form is completely",
    "start": "572320",
    "end": "574180"
  },
  {
    "text": "valid that's a very important technique",
    "start": "574180",
    "end": "576370"
  },
  {
    "text": "because it often prevents the user from",
    "start": "576370",
    "end": "578020"
  },
  {
    "text": "submitting bad data to your back-end",
    "start": "578020",
    "end": "580000"
  },
  {
    "text": "database let's go into the typescript",
    "start": "580000",
    "end": "582460"
  },
  {
    "text": "and we'll import validators from angular",
    "start": "582460",
    "end": "585220"
  },
  {
    "text": "forms angular comes with a bunch of",
    "start": "585220",
    "end": "587290"
  },
  {
    "text": "built-in validators that will cover 90%",
    "start": "587290",
    "end": "589420"
  },
  {
    "text": "of your validation use cases for each",
    "start": "589420",
    "end": "592990"
  },
  {
    "text": "form property we'll set up the default",
    "start": "592990",
    "end": "594610"
  },
  {
    "text": "value and then as the second item in",
    "start": "594610",
    "end": "596860"
  },
  {
    "text": "that array we'll pass another array with",
    "start": "596860",
    "end": "598930"
  },
  {
    "text": "a series of validators I'd like to point",
    "start": "598930",
    "end": "601870"
  },
  {
    "text": "out that you can pass in another array",
    "start": "601870",
    "end": "603340"
  },
  {
    "text": "after this with asynchronous validators",
    "start": "603340",
    "end": "605410"
  },
  {
    "text": "but that's a topic for another video",
    "start": "605410",
    "end": "608010"
  },
  {
    "text": "for right now we just want to",
    "start": "608010",
    "end": "610060"
  },
  {
    "text": "synchronously validate that our email is",
    "start": "610060",
    "end": "612190"
  },
  {
    "text": "required and that it's a proper email",
    "start": "612190",
    "end": "614140"
  },
  {
    "text": "format then we also want to validate",
    "start": "614140",
    "end": "616990"
  },
  {
    "text": "that our passwords required and we can",
    "start": "616990",
    "end": "619300"
  },
  {
    "text": "also pass in a regular expression here",
    "start": "619300",
    "end": "621160"
  },
  {
    "text": "to make sure that that password meets a",
    "start": "621160",
    "end": "623110"
  },
  {
    "text": "certain requirement for example we want",
    "start": "623110",
    "end": "625240"
  },
  {
    "text": "to have at least one letter and one",
    "start": "625240",
    "end": "626770"
  },
  {
    "text": "number in the password string then when",
    "start": "626770",
    "end": "630100"
  },
  {
    "text": "validating numeric values we can look at",
    "start": "630100",
    "end": "632200"
  },
  {
    "text": "the minimum and maximum value which we",
    "start": "632200",
    "end": "635380"
  },
  {
    "text": "can use to set up an age range for the",
    "start": "635380",
    "end": "637420"
  },
  {
    "text": "validation it shouldn't be confused with",
    "start": "637420",
    "end": "639760"
  },
  {
    "text": "min length min length is for Strings",
    "start": "639760",
    "end": "641740"
  },
  {
    "text": "that will validate how long a string is",
    "start": "641740",
    "end": "643810"
  },
  {
    "text": "or how many characters are in that",
    "start": "643810",
    "end": "645130"
  },
  {
    "text": "string for numeric values you want to",
    "start": "645130",
    "end": "647170"
  },
  {
    "text": "use min and Max so we'll say the minimum",
    "start": "647170",
    "end": "649750"
  },
  {
    "text": "age is 18 and the maximum age is 65 and",
    "start": "649750",
    "end": "653190"
  },
  {
    "text": "we also have a checkbox in this form so",
    "start": "653190",
    "end": "655750"
  },
  {
    "text": "if we want to verify that that checkbox",
    "start": "655750",
    "end": "657760"
  },
  {
    "text": "is checked we can validate that it is",
    "start": "657760",
    "end": "659980"
  },
  {
    "text": "required and the value is true now a",
    "start": "659980",
    "end": "663430"
  },
  {
    "text": "quick pro tip when working with",
    "start": "663430",
    "end": "665080"
  },
  {
    "text": "validations is that you want to set up a",
    "start": "665080",
    "end": "667180"
  },
  {
    "text": "whole bunch of getter",
    "start": "667180",
    "end": "668110"
  },
  {
    "text": "for the various fields in your form this",
    "start": "668110",
    "end": "670329"
  },
  {
    "text": "will just make your HTML way cleaner as",
    "start": "670329",
    "end": "672430"
  },
  {
    "text": "you're setting up logic in there to show",
    "start": "672430",
    "end": "674260"
  },
  {
    "text": "different error messages for different",
    "start": "674260",
    "end": "675670"
  },
  {
    "text": "fields now if we jump over to the HTML",
    "start": "675670",
    "end": "679600"
  },
  {
    "text": "we can use the material error component",
    "start": "679600",
    "end": "682209"
  },
  {
    "text": "along with ngf to conditionally show",
    "start": "682209",
    "end": "684610"
  },
  {
    "text": "error messages because we set up that",
    "start": "684610",
    "end": "688000"
  },
  {
    "text": "getter we can just say ng if email is",
    "start": "688000",
    "end": "691029"
  },
  {
    "text": "invalid and if the email has been",
    "start": "691029",
    "end": "693190"
  },
  {
    "text": "touched then we want to show this error",
    "start": "693190",
    "end": "695260"
  },
  {
    "text": "message in other words if the user tried",
    "start": "695260",
    "end": "697480"
  },
  {
    "text": "to enter an email and it wasn't correct",
    "start": "697480",
    "end": "699010"
  },
  {
    "text": "we want to notify them that they need to",
    "start": "699010",
    "end": "700959"
  },
  {
    "text": "correct that then another cool thing we",
    "start": "700959",
    "end": "704019"
  },
  {
    "text": "can do with angular material is show",
    "start": "704019",
    "end": "705610"
  },
  {
    "text": "hints for more complex values for",
    "start": "705610",
    "end": "708220"
  },
  {
    "text": "example for our password we want to give",
    "start": "708220",
    "end": "710079"
  },
  {
    "text": "them a hint that it requires one letter",
    "start": "710079",
    "end": "712120"
  },
  {
    "text": "and one number then if they still enter",
    "start": "712120",
    "end": "715630"
  },
  {
    "text": "it wrong we can say your password sucks",
    "start": "715630",
    "end": "717310"
  },
  {
    "text": "with a validation error so that's pretty",
    "start": "717310",
    "end": "720640"
  },
  {
    "text": "cool for just showing error messages",
    "start": "720640",
    "end": "722140"
  },
  {
    "text": "when we know the entire form value is",
    "start": "722140",
    "end": "724269"
  },
  {
    "text": "incorrect but we have multiple",
    "start": "724269",
    "end": "726070"
  },
  {
    "text": "validators for our age field so we might",
    "start": "726070",
    "end": "728500"
  },
  {
    "text": "want to show a different error message",
    "start": "728500",
    "end": "729760"
  },
  {
    "text": "based on the type of validation error",
    "start": "729760",
    "end": "731620"
  },
  {
    "text": "for example we have a minimum age error",
    "start": "731620",
    "end": "734380"
  },
  {
    "text": "and if we get that error we want to show",
    "start": "734380",
    "end": "736390"
  },
  {
    "text": "a different error message than if it's",
    "start": "736390",
    "end": "737800"
  },
  {
    "text": "the max age so if the user enters an age",
    "start": "737800",
    "end": "740769"
  },
  {
    "text": "that's less than 18 then we're going to",
    "start": "740769",
    "end": "742720"
  },
  {
    "text": "show this message that says your actual",
    "start": "742720",
    "end": "744760"
  },
  {
    "text": "age is too young to use this app then we",
    "start": "744760",
    "end": "748600"
  },
  {
    "text": "can follow the exact same process for",
    "start": "748600",
    "end": "749980"
  },
  {
    "text": "the max age here but just change some of",
    "start": "749980",
    "end": "751839"
  },
  {
    "text": "the details if you have a ton of error",
    "start": "751839",
    "end": "754360"
  },
  {
    "text": "messages like this you might want to map",
    "start": "754360",
    "end": "756310"
  },
  {
    "text": "them to an object in the typescript",
    "start": "756310",
    "end": "758399"
  },
  {
    "text": "one of the nice things about reactive",
    "start": "758399",
    "end": "760630"
  },
  {
    "text": "forms is that you can handle some of the",
    "start": "760630",
    "end": "761949"
  },
  {
    "text": "logic in the HTML and some of the logic",
    "start": "761949",
    "end": "764140"
  },
  {
    "text": "in the typescript depending on your use",
    "start": "764140",
    "end": "766060"
  },
  {
    "text": "case then the last thing we'll look at",
    "start": "766060",
    "end": "768610"
  },
  {
    "text": "is how to disable the submit button for",
    "start": "768610",
    "end": "771100"
  },
  {
    "text": "that we can simply bind the disabled",
    "start": "771100",
    "end": "773199"
  },
  {
    "text": "attribute to the form invalid state on",
    "start": "773199",
    "end": "775480"
  },
  {
    "text": "the reactive form so that's super easy",
    "start": "775480",
    "end": "777640"
  },
  {
    "text": "and something you'll probably do on",
    "start": "777640",
    "end": "778990"
  },
  {
    "text": "every single reactive form that you",
    "start": "778990",
    "end": "780430"
  },
  {
    "text": "build we finally reached the fifth and",
    "start": "780430",
    "end": "783010"
  },
  {
    "text": "final demo which is how to submit a form",
    "start": "783010",
    "end": "785199"
  },
  {
    "text": "to a back-end database and naturally",
    "start": "785199",
    "end": "787480"
  },
  {
    "text": "we'll use cloud firestore to do that so",
    "start": "787480",
    "end": "790690"
  },
  {
    "text": "let's take everything we've learned and",
    "start": "790690",
    "end": "792100"
  },
  {
    "text": "just build a simple contact form like",
    "start": "792100",
    "end": "794079"
  },
  {
    "text": "you would find on any web site we will",
    "start": "794079",
    "end": "796870"
  },
  {
    "text": "validate it and then after we know it's",
    "start": "796870",
    "end": "798459"
  },
  {
    "text": "been saved in the database we'll show a",
    "start": "798459",
    "end": "799779"
  },
  {
    "text": "success message saying that we",
    "start": "799779",
    "end": "801610"
  },
  {
    "text": "your submission if we go into the",
    "start": "801610",
    "end": "803980"
  },
  {
    "text": "firebase console we should be able to",
    "start": "803980",
    "end": "805720"
  },
  {
    "text": "see the data that we entered in the",
    "start": "805720",
    "end": "807370"
  },
  {
    "text": "reactive form saved to our back-end",
    "start": "807370",
    "end": "809470"
  },
  {
    "text": "database",
    "start": "809470",
    "end": "810100"
  },
  {
    "text": "this next section assumes that you have",
    "start": "810100",
    "end": "812079"
  },
  {
    "text": "angularfire 2 installed along with a",
    "start": "812079",
    "end": "813880"
  },
  {
    "text": "firebase project but you can follow the",
    "start": "813880",
    "end": "815769"
  },
  {
    "text": "same principles for any back-end so we",
    "start": "815769",
    "end": "818620"
  },
  {
    "text": "have a basic reactive form following the",
    "start": "818620",
    "end": "820420"
  },
  {
    "text": "principles that we've already covered",
    "start": "820420",
    "end": "822029"
  },
  {
    "text": "what we'll do now is import our angular",
    "start": "822029",
    "end": "824649"
  },
  {
    "text": "firestore database as well as the tap",
    "start": "824649",
    "end": "826959"
  },
  {
    "text": "and first operators from rxjs the form",
    "start": "826959",
    "end": "830620"
  },
  {
    "text": "submission is asynchronous so we're",
    "start": "830620",
    "end": "832360"
  },
  {
    "text": "gonna have a couple of different state",
    "start": "832360",
    "end": "833740"
  },
  {
    "text": "items here loading and success which",
    "start": "833740",
    "end": "836890"
  },
  {
    "text": "will both start off as false the next",
    "start": "836890",
    "end": "839740"
  },
  {
    "text": "thing we need to do is create an event",
    "start": "839740",
    "end": "841360"
  },
  {
    "text": "handler for when the form is submitted",
    "start": "841360",
    "end": "843360"
  },
  {
    "text": "this method will be triggered when the",
    "start": "843360",
    "end": "845560"
  },
  {
    "text": "user clicks the submit button on the",
    "start": "845560",
    "end": "847360"
  },
  {
    "text": "form the first thing we'll do is set the",
    "start": "847360",
    "end": "849490"
  },
  {
    "text": "loading state to true then we'll grab",
    "start": "849490",
    "end": "852160"
  },
  {
    "text": "the current value from the reactive form",
    "start": "852160",
    "end": "854110"
  },
  {
    "text": "and we do that by calling my form value",
    "start": "854110",
    "end": "856769"
  },
  {
    "text": "then I will set up a try-catch block",
    "start": "856769",
    "end": "859149"
  },
  {
    "text": "here so we can catch any errors that",
    "start": "859149",
    "end": "860680"
  },
  {
    "text": "might have occurred on the back end and",
    "start": "860680",
    "end": "862120"
  },
  {
    "text": "then we'll await the angular firestore",
    "start": "862120",
    "end": "864790"
  },
  {
    "text": "collection which we'll call contacts to",
    "start": "864790",
    "end": "867399"
  },
  {
    "text": "add this form value to the database",
    "start": "867399",
    "end": "869279"
  },
  {
    "text": "after we've awaited that operation to",
    "start": "869279",
    "end": "871990"
  },
  {
    "text": "happen successfully then we'll set the",
    "start": "871990",
    "end": "874029"
  },
  {
    "text": "success state to true but if there's any",
    "start": "874029",
    "end": "876850"
  },
  {
    "text": "errors then we'll just go ahead and log",
    "start": "876850",
    "end": "878230"
  },
  {
    "text": "those to the console then after that",
    "start": "878230",
    "end": "880750"
  },
  {
    "text": "happens we'll set the loading state back",
    "start": "880750",
    "end": "882640"
  },
  {
    "text": "to false then there's really not a whole",
    "start": "882640",
    "end": "885279"
  },
  {
    "text": "lot we need to change to the markup we",
    "start": "885279",
    "end": "887470"
  },
  {
    "text": "want to hide the form once it's been",
    "start": "887470",
    "end": "888970"
  },
  {
    "text": "successfully submitted which we can do",
    "start": "888970",
    "end": "891220"
  },
  {
    "text": "by binding the hidden attribute to the",
    "start": "891220",
    "end": "893260"
  },
  {
    "text": "success state but the most important",
    "start": "893260",
    "end": "895810"
  },
  {
    "text": "part is that we listen to this in GC",
    "start": "895810",
    "end": "898790"
  },
  {
    "text": "then run our submit handler method which",
    "start": "898790",
    "end": "901100"
  },
  {
    "text": "will send the data to the database then",
    "start": "901100",
    "end": "903860"
  },
  {
    "text": "as a final touch down here at the bottom",
    "start": "903860",
    "end": "905449"
  },
  {
    "text": "will add a success notification that",
    "start": "905449",
    "end": "907459"
  },
  {
    "text": "lets the viewer know that their data has",
    "start": "907459",
    "end": "909290"
  },
  {
    "text": "been saved in the backend so hopefully",
    "start": "909290",
    "end": "911720"
  },
  {
    "text": "that gives you a good tool set to build",
    "start": "911720",
    "end": "913220"
  },
  {
    "text": "full stack reactive forms in angular 6",
    "start": "913220",
    "end": "915709"
  },
  {
    "text": "I'm gonna go ahead and wrap things up",
    "start": "915709",
    "end": "917600"
  },
  {
    "text": "there if this video helped you please",
    "start": "917600",
    "end": "919069"
  },
  {
    "text": "like and subscribe and if you're ready",
    "start": "919069",
    "end": "921139"
  },
  {
    "text": "to build more advanced features with",
    "start": "921139",
    "end": "922610"
  },
  {
    "text": "angular forms and firebase consider",
    "start": "922610",
    "end": "924709"
  },
  {
    "text": "becoming a pro member at angular",
    "start": "924709",
    "end": "926149"
  },
  {
    "text": "firebase comm go get access to new pro",
    "start": "926149",
    "end": "928970"
  },
  {
    "text": "videos every week plus a whole support",
    "start": "928970",
    "end": "930889"
  },
  {
    "text": "network designed to help you get your",
    "start": "930889",
    "end": "932329"
  },
  {
    "text": "app into production faster thanks for",
    "start": "932329",
    "end": "934670"
  },
  {
    "text": "watching and I'll talk to you soon",
    "start": "934670",
    "end": "938230"
  }
]