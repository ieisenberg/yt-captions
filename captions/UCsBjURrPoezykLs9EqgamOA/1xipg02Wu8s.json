[
  {
    "start": "0",
    "end": "56000"
  },
  {
    "text": "welcome to flutter basic training by the",
    "start": "240",
    "end": "2399"
  },
  {
    "text": "end of this video you'll be shipping",
    "start": "2399",
    "end": "3840"
  },
  {
    "text": "apps on iOS Android the web and desktop",
    "start": "3840",
    "end": "6879"
  },
  {
    "text": "you will not laugh you will not cry you",
    "start": "6879",
    "end": "9200"
  },
  {
    "text": "will learn by the numbers I will teach",
    "start": "9200",
    "end": "11200"
  },
  {
    "text": "you flutter is quickly becoming the",
    "start": "11200",
    "end": "12920"
  },
  {
    "text": "world's most popular crossplatform",
    "start": "12920",
    "end": "14360"
  },
  {
    "text": "framework thanks to its awesome",
    "start": "14360",
    "end": "15759"
  },
  {
    "text": "developer experience and ability to ship",
    "start": "15759",
    "end": "17920"
  },
  {
    "text": "highquality apps on multiple platforms",
    "start": "17920",
    "end": "20039"
  },
  {
    "text": "it's unlike anything else out there",
    "start": "20039",
    "end": "21600"
  },
  {
    "text": "which also means that it has a steeper",
    "start": "21600",
    "end": "23320"
  },
  {
    "text": "learning curve to get good at it you'll",
    "start": "23320",
    "end": "25000"
  },
  {
    "text": "need to stop watching YouTube and start",
    "start": "25000",
    "end": "27000"
  },
  {
    "text": "building something I created a bunch of",
    "start": "27000",
    "end": "28960"
  },
  {
    "text": "satisfying examples that will go through",
    "start": "28960",
    "end": "30840"
  },
  {
    "text": "together designed to make you a",
    "start": "30840",
    "end": "32439"
  },
  {
    "text": "productive full stack flutter developer",
    "start": "32439",
    "end": "34320"
  },
  {
    "text": "there are certain things they don't tell",
    "start": "34320",
    "end": "35600"
  },
  {
    "text": "you when you first get started like it's",
    "start": "35600",
    "end": "37280"
  },
  {
    "text": "100 times faster to refactor your code",
    "start": "37280",
    "end": "39280"
  },
  {
    "text": "by hitting control period than it is to",
    "start": "39280",
    "end": "40920"
  },
  {
    "text": "do manually we'll look at a ton of",
    "start": "40920",
    "end": "42280"
  },
  {
    "text": "productivity boosters like this and at",
    "start": "42280",
    "end": "44000"
  },
  {
    "text": "the end of basic training I'll give you",
    "start": "44000",
    "end": "45440"
  },
  {
    "text": "a certificate that you can frame on your",
    "start": "45440",
    "end": "47160"
  },
  {
    "text": "wall and if you want to go beyond the",
    "start": "47160",
    "end": "48600"
  },
  {
    "text": "basics I just released a brand new",
    "start": "48600",
    "end": "50360"
  },
  {
    "text": "flutter course available to Pro members",
    "start": "50360",
    "end": "52440"
  },
  {
    "text": "on fireship iO there's an ephemeral",
    "start": "52440",
    "end": "54399"
  },
  {
    "text": "discount in the video description to get",
    "start": "54399",
    "end": "56280"
  },
  {
    "start": "56000",
    "end": "156000"
  },
  {
    "text": "started you'll need to use the most",
    "start": "56280",
    "end": "57600"
  },
  {
    "text": "important skill for any developer",
    "start": "57600",
    "end": "59359"
  },
  {
    "text": "following directions head over to",
    "start": "59359",
    "end": "61160"
  },
  {
    "text": "flutter. deev and follow the install",
    "start": "61160",
    "end": "63359"
  },
  {
    "text": "instructions for your system or if you",
    "start": "63359",
    "end": "65158"
  },
  {
    "text": "want an easier way to get started",
    "start": "65159",
    "end": "66560"
  },
  {
    "text": "dartpad allows you to edit and run",
    "start": "66560",
    "end": "68680"
  },
  {
    "text": "flutter code in the browser now open the",
    "start": "68680",
    "end": "70640"
  },
  {
    "text": "terminal and create a new project by",
    "start": "70640",
    "end": "72360"
  },
  {
    "text": "running flutter create now open it in vs",
    "start": "72360",
    "end": "74600"
  },
  {
    "text": "code and make sure to have the flutter",
    "start": "74600",
    "end": "76280"
  },
  {
    "text": "extension installed at the bottom you'll",
    "start": "76280",
    "end": "78119"
  },
  {
    "text": "see an option to select a device like",
    "start": "78119",
    "end": "80240"
  },
  {
    "text": "Windows Chrome or a mobile emulator I'm",
    "start": "80240",
    "end": "82640"
  },
  {
    "text": "going to run my app in Android by",
    "start": "82640",
    "end": "84240"
  },
  {
    "text": "running flutter run from the command",
    "start": "84240",
    "end": "85840"
  },
  {
    "text": "line now find your application code in",
    "start": "85840",
    "end": "87960"
  },
  {
    "text": "the main Dart file read in between the",
    "start": "87960",
    "end": "89680"
  },
  {
    "text": "lines to find a color or icon in your UI",
    "start": "89680",
    "end": "92680"
  },
  {
    "text": "change one of these values to something",
    "start": "92680",
    "end": "94200"
  },
  {
    "text": "else you'll notice that when you type",
    "start": "94200",
    "end": "95640"
  },
  {
    "text": "after the period everything is autocom",
    "start": "95640",
    "end": "97640"
  },
  {
    "text": "completed in the IDE tooling is partly",
    "start": "97640",
    "end": "100159"
  },
  {
    "text": "what makes flutter development so",
    "start": "100159",
    "end": "101520"
  },
  {
    "text": "productive if you don't leverage it you",
    "start": "101520",
    "end": "103200"
  },
  {
    "text": "are not going to survive basic training",
    "start": "103200",
    "end": "105320"
  },
  {
    "text": "if you survive recruit training you will",
    "start": "105320",
    "end": "107960"
  },
  {
    "text": "be a weapon save the file now type a",
    "start": "107960",
    "end": "110360"
  },
  {
    "text": "lowercase R into the terminal that",
    "start": "110360",
    "end": "112399"
  },
  {
    "text": "performs a hot reload allowing you to",
    "start": "112399",
    "end": "114479"
  },
  {
    "text": "instantly see the changes in the UI",
    "start": "114479",
    "end": "116280"
  },
  {
    "text": "without having to rebuild the entire app",
    "start": "116280",
    "end": "118520"
  },
  {
    "text": "now take all the code in this file and",
    "start": "118520",
    "end": "120280"
  },
  {
    "text": "delete it we're going to start from",
    "start": "120280",
    "end": "122079"
  },
  {
    "text": "scratch first import the flutter",
    "start": "122079",
    "end": "124039"
  },
  {
    "text": "material package at the top this gives",
    "start": "124039",
    "end": "126159"
  },
  {
    "text": "you access to hundreds of pre-built",
    "start": "126159",
    "end": "128000"
  },
  {
    "text": "widgets in your code ranging from",
    "start": "128000",
    "end": "129759"
  },
  {
    "text": "low-level building blocks like text to",
    "start": "129759",
    "end": "132040"
  },
  {
    "text": "complex UI elements like a page view",
    "start": "132040",
    "end": "134319"
  },
  {
    "text": "that performs animation and layout as a",
    "start": "134319",
    "end": "136440"
  },
  {
    "text": "flutter developer you'll need to learn",
    "start": "136440",
    "end": "138319"
  },
  {
    "text": "how to combine these widgets together",
    "start": "138319",
    "end": "140040"
  },
  {
    "text": "into a tree likee structure to create a",
    "start": "140040",
    "end": "142440"
  },
  {
    "text": "complex UI but first we need a main",
    "start": "142440",
    "end": "145200"
  },
  {
    "text": "function this is where the program will",
    "start": "145200",
    "end": "146720"
  },
  {
    "text": "start executing flutter has a global",
    "start": "146720",
    "end": "148879"
  },
  {
    "text": "function called run app it takes a",
    "start": "148879",
    "end": "150800"
  },
  {
    "text": "single widget as its argument and will",
    "start": "150800",
    "end": "152640"
  },
  {
    "text": "inflate that widget to the screen on",
    "start": "152640",
    "end": "154360"
  },
  {
    "text": "whatever device it happens to be running",
    "start": "154360",
    "end": "155920"
  },
  {
    "text": "on let's create a custom widget to",
    "start": "155920",
    "end": "158080"
  },
  {
    "start": "156000",
    "end": "200000"
  },
  {
    "text": "represent the application type St into",
    "start": "158080",
    "end": "160400"
  },
  {
    "text": "your editor and it should automatically",
    "start": "160400",
    "end": "162319"
  },
  {
    "text": "give you a snippet for a flutter",
    "start": "162319",
    "end": "164480"
  },
  {
    "text": "stateless widget hit tab to insert it",
    "start": "164480",
    "end": "166760"
  },
  {
    "text": "then give it a name like my app notice",
    "start": "166760",
    "end": "169000"
  },
  {
    "text": "how this class extends a stateless",
    "start": "169000",
    "end": "171200"
  },
  {
    "text": "widget that's a class built into flutter",
    "start": "171200",
    "end": "173360"
  },
  {
    "text": "that you use when creating a UI element",
    "start": "173360",
    "end": "175920"
  },
  {
    "text": "that doesn't have any internal data in",
    "start": "175920",
    "end": "177840"
  },
  {
    "text": "other words it's just a dumb widget that",
    "start": "177840",
    "end": "179640"
  },
  {
    "text": "pain paint some pixels to the screen",
    "start": "179640",
    "end": "181159"
  },
  {
    "text": "you'll notice it has a Constructor with",
    "start": "181159",
    "end": "182760"
  },
  {
    "text": "a key you don't need to worry about that",
    "start": "182760",
    "end": "184360"
  },
  {
    "text": "for right now but if you hover over it",
    "start": "184360",
    "end": "186159"
  },
  {
    "text": "you'll notice that it has a link to a",
    "start": "186159",
    "end": "187519"
  },
  {
    "text": "YouTube video explaining more because",
    "start": "187519",
    "end": "189480"
  },
  {
    "text": "flutters documentation is absolutely",
    "start": "189480",
    "end": "191599"
  },
  {
    "text": "awesome the thing you do need to know",
    "start": "191599",
    "end": "193080"
  },
  {
    "text": "about is the build method this method",
    "start": "193080",
    "end": "195000"
  },
  {
    "text": "returns a widget and will be called",
    "start": "195000",
    "end": "196799"
  },
  {
    "text": "anytime flutter needs to rebuild a UI",
    "start": "196799",
    "end": "199159"
  },
  {
    "text": "like when your data changes the first",
    "start": "199159",
    "end": "200959"
  },
  {
    "start": "200000",
    "end": "238000"
  },
  {
    "text": "widget will return is a material app",
    "start": "200959",
    "end": "203159"
  },
  {
    "text": "it's used as the root of the application",
    "start": "203159",
    "end": "205360"
  },
  {
    "text": "and allows us to configure themes and",
    "start": "205360",
    "end": "207159"
  },
  {
    "text": "routes perform a hot reload and you",
    "start": "207159",
    "end": "209120"
  },
  {
    "text": "should have a canvas to work with we can",
    "start": "209120",
    "end": "211319"
  },
  {
    "text": "quickly add a screen to it by adding a",
    "start": "211319",
    "end": "213280"
  },
  {
    "text": "scaffold to the home property a scaffold",
    "start": "213280",
    "end": "215760"
  },
  {
    "text": "allows you to build screens with common",
    "start": "215760",
    "end": "217519"
  },
  {
    "text": "UI elements like an app bar at the top",
    "start": "217519",
    "end": "220080"
  },
  {
    "text": "every pre-built widget has a bunch of",
    "start": "220080",
    "end": "221720"
  },
  {
    "text": "named parameters where you can customize",
    "start": "221720",
    "end": "223560"
  },
  {
    "text": "its appearance put your cursor inside a",
    "start": "223560",
    "end": "225319"
  },
  {
    "text": "widget then hit control space bar to",
    "start": "225319",
    "end": "227319"
  },
  {
    "text": "bring up all the options go ahead and",
    "start": "227319",
    "end": "229000"
  },
  {
    "text": "add a background color then add a title",
    "start": "229000",
    "end": "231200"
  },
  {
    "text": "by creating a text widget now hot reload",
    "start": "231200",
    "end": "233760"
  },
  {
    "text": "to check out your first flutter screen",
    "start": "233760",
    "end": "235680"
  },
  {
    "text": "that's pretty cool but there's no time",
    "start": "235680",
    "end": "237200"
  },
  {
    "text": "to celebrate now we need to talk about",
    "start": "237200",
    "end": "239000"
  },
  {
    "start": "238000",
    "end": "307000"
  },
  {
    "text": "layout or how do I put widgets where",
    "start": "239000",
    "end": "240680"
  },
  {
    "text": "they need to go in the screen the most",
    "start": "240680",
    "end": "242439"
  },
  {
    "text": "fundamental way to lay out a widget is",
    "start": "242439",
    "end": "244200"
  },
  {
    "text": "with a container it's kind of like a div",
    "start": "244200",
    "end": "246079"
  },
  {
    "text": "in HTML or a view in Android it takes",
    "start": "246079",
    "end": "248920"
  },
  {
    "text": "one child widget as an argument we can",
    "start": "248920",
    "end": "250840"
  },
  {
    "text": "make that a text widget for now which",
    "start": "250840",
    "end": "252439"
  },
  {
    "text": "will place it in the top left corner of",
    "start": "252439",
    "end": "254280"
  },
  {
    "text": "the screen you can think of it being",
    "start": "254280",
    "end": "255920"
  },
  {
    "text": "surrounded by a box and we can change",
    "start": "255920",
    "end": "257840"
  },
  {
    "text": "the dimensions of that box by adding",
    "start": "257840",
    "end": "259759"
  },
  {
    "text": "margin and padding we can also customize",
    "start": "259759",
    "end": "262160"
  },
  {
    "text": "things like the height width and color",
    "start": "262160",
    "end": "264160"
  },
  {
    "text": "we can also make the box look a lot",
    "start": "264160",
    "end": "265720"
  },
  {
    "text": "cooler using the decoration property it",
    "start": "265720",
    "end": "268040"
  },
  {
    "text": "takes a box decoration widget as its",
    "start": "268040",
    "end": "270120"
  },
  {
    "text": "argument which allows us to customize",
    "start": "270120",
    "end": "272360"
  },
  {
    "text": "things like the Border gradient shape",
    "start": "272360",
    "end": "274800"
  },
  {
    "text": "and Shadow of the box containers do a",
    "start": "274800",
    "end": "277160"
  },
  {
    "text": "lot but flutter has some other widgets",
    "start": "277160",
    "end": "279000"
  },
  {
    "text": "that are more focused for example if you",
    "start": "279000",
    "end": "281240"
  },
  {
    "text": "just want to center a widget in the",
    "start": "281240",
    "end": "282720"
  },
  {
    "text": "middle of the screen you can do so by",
    "start": "282720",
    "end": "284639"
  },
  {
    "text": "wrapping it with center now you could",
    "start": "284639",
    "end": "286360"
  },
  {
    "text": "write that code manually but if you want",
    "start": "286360",
    "end": "287960"
  },
  {
    "text": "to have a good time you'll right click",
    "start": "287960",
    "end": "289479"
  },
  {
    "text": "on the widget or hit control period to",
    "start": "289479",
    "end": "291440"
  },
  {
    "text": "find the refactor tool then select the",
    "start": "291440",
    "end": "293479"
  },
  {
    "text": "option to wrap with Center to write that",
    "start": "293479",
    "end": "295680"
  },
  {
    "text": "code for you automatically another tip",
    "start": "295680",
    "end": "297759"
  },
  {
    "text": "is that if you're using a container to",
    "start": "297759",
    "end": "299199"
  },
  {
    "text": "apply some padding use the padding",
    "start": "299199",
    "end": "301199"
  },
  {
    "text": "widget instead or if you're creating a",
    "start": "301199",
    "end": "303000"
  },
  {
    "text": "container with a fixed width and height",
    "start": "303000",
    "end": "304960"
  },
  {
    "text": "use the size box widget instead but how",
    "start": "304960",
    "end": "307280"
  },
  {
    "start": "307000",
    "end": "367000"
  },
  {
    "text": "do we deal with multiple related widgets",
    "start": "307280",
    "end": "309080"
  },
  {
    "text": "like a row or column that's where Flex",
    "start": "309080",
    "end": "311160"
  },
  {
    "text": "layout comes in if you're familiar with",
    "start": "311160",
    "end": "312919"
  },
  {
    "text": "CSS Flex box you'll be way ahead of the",
    "start": "312919",
    "end": "315039"
  },
  {
    "text": "game here flutter provides row and",
    "start": "315039",
    "end": "317000"
  },
  {
    "text": "column widgets used to lay out multiple",
    "start": "317000",
    "end": "319039"
  },
  {
    "text": "children horizontally or vertically",
    "start": "319039",
    "end": "321120"
  },
  {
    "text": "unlike a container that takes only one",
    "start": "321120",
    "end": "322960"
  },
  {
    "text": "widget as a child a column takes",
    "start": "322960",
    "end": "325039"
  },
  {
    "text": "multiple children as a list create a",
    "start": "325039",
    "end": "327120"
  },
  {
    "text": "column then add three icons inside of it",
    "start": "327120",
    "end": "329360"
  },
  {
    "text": "you'll notice that each icon is laid out",
    "start": "329360",
    "end": "331680"
  },
  {
    "text": "one after the other vertically change",
    "start": "331680",
    "end": "333600"
  },
  {
    "text": "that widget to a row and now they flow",
    "start": "333600",
    "end": "335600"
  },
  {
    "text": "horizontally the direction they flow is",
    "start": "335600",
    "end": "337720"
  },
  {
    "text": "called the main axis while the opposite",
    "start": "337720",
    "end": "339759"
  },
  {
    "text": "direction is the cross axis you can",
    "start": "339759",
    "end": "341880"
  },
  {
    "text": "change the spacing and Alignment between",
    "start": "341880",
    "end": "343720"
  },
  {
    "text": "the children by modifying the cross axis",
    "start": "343720",
    "end": "346400"
  },
  {
    "text": "and Main axis alignment on the widget by",
    "start": "346400",
    "end": "348759"
  },
  {
    "text": "default each child has a flex value of",
    "start": "348759",
    "end": "351000"
  },
  {
    "text": "one which means that each sibling",
    "start": "351000",
    "end": "352919"
  },
  {
    "text": "occupies the same amount of space if",
    "start": "352919",
    "end": "354800"
  },
  {
    "text": "that's not desirable you can wrap a",
    "start": "354800",
    "end": "356720"
  },
  {
    "text": "child in a flexible or expanded widget",
    "start": "356720",
    "end": "359280"
  },
  {
    "text": "expand handed tells a child to take up",
    "start": "359280",
    "end": "361400"
  },
  {
    "text": "any available space and you can give it",
    "start": "361400",
    "end": "363199"
  },
  {
    "text": "more space than the other children by",
    "start": "363199",
    "end": "365000"
  },
  {
    "text": "modifying its Flex value but in some",
    "start": "365000",
    "end": "367160"
  },
  {
    "start": "367000",
    "end": "420000"
  },
  {
    "text": "cases you may want to have one widget",
    "start": "367160",
    "end": "369199"
  },
  {
    "text": "overlap another like a button that",
    "start": "369199",
    "end": "371319"
  },
  {
    "text": "floats on top of some other UI element",
    "start": "371319",
    "end": "373599"
  },
  {
    "text": "in that case the widget we're looking",
    "start": "373599",
    "end": "375039"
  },
  {
    "text": "for is a stack just like a row or column",
    "start": "375039",
    "end": "377759"
  },
  {
    "text": "it takes a list of children as an",
    "start": "377759",
    "end": "379400"
  },
  {
    "text": "argument and just one little side note",
    "start": "379400",
    "end": "381319"
  },
  {
    "text": "here you'll notice that I'm using a",
    "start": "381319",
    "end": "382800"
  },
  {
    "text": "trailing comma after every block of code",
    "start": "382800",
    "end": "385160"
  },
  {
    "text": "the comma is not required but it keeps",
    "start": "385160",
    "end": "386880"
  },
  {
    "text": "your code nicely formatted if you",
    "start": "386880",
    "end": "388639"
  },
  {
    "text": "rightclick and choose format document it",
    "start": "388639",
    "end": "390680"
  },
  {
    "text": "will format it with multiple lines as",
    "start": "390680",
    "end": "392440"
  },
  {
    "text": "opposed to one line when the comma is",
    "start": "392440",
    "end": "394160"
  },
  {
    "text": "missing now in our stack we might have a",
    "start": "394160",
    "end": "396319"
  },
  {
    "text": "container and an icon if we want to",
    "start": "396319",
    "end": "398360"
  },
  {
    "text": "display the icon on top of the container",
    "start": "398360",
    "end": "400319"
  },
  {
    "text": "we make sure that it comes after the",
    "start": "400319",
    "end": "401639"
  },
  {
    "text": "container in the list now if we want to",
    "start": "401639",
    "end": "403400"
  },
  {
    "text": "move things around we can use positioned",
    "start": "403400",
    "end": "405400"
  },
  {
    "text": "to move a widget into a specific spot",
    "start": "405400",
    "end": "407919"
  },
  {
    "text": "kind of like absolute positioning in CSS",
    "start": "407919",
    "end": "410520"
  },
  {
    "text": "or if we want to modify its positioning",
    "start": "410520",
    "end": "412240"
  },
  {
    "text": "relative to its parent we can use a line",
    "start": "412240",
    "end": "414280"
  },
  {
    "text": "to move it to the top left bottom right",
    "start": "414280",
    "end": "416199"
  },
  {
    "text": "or Center those are your low-l building",
    "start": "416199",
    "end": "417879"
  },
  {
    "text": "blocks for layout but flutter takes of",
    "start": "417879",
    "end": "419840"
  },
  {
    "text": "many UI elements out of the box for",
    "start": "419840",
    "end": "421840"
  },
  {
    "start": "420000",
    "end": "447000"
  },
  {
    "text": "example if we add a floating action",
    "start": "421840",
    "end": "423840"
  },
  {
    "text": "button to our scaffold that button",
    "start": "423840",
    "end": "425800"
  },
  {
    "text": "magically appears down here at the",
    "start": "425800",
    "end": "427160"
  },
  {
    "text": "bottom right The Floating Action button",
    "start": "427160",
    "end": "428879"
  },
  {
    "text": "widget has an event handler called",
    "start": "428879",
    "end": "430680"
  },
  {
    "text": "onpress we can define an anonymous",
    "start": "430680",
    "end": "432680"
  },
  {
    "text": "function here to handle the gesture if",
    "start": "432680",
    "end": "435120"
  },
  {
    "text": "we then want to add a bottom bar to it",
    "start": "435120",
    "end": "437120"
  },
  {
    "text": "we can use the Bottom bar widget to add",
    "start": "437120",
    "end": "438840"
  },
  {
    "text": "some navigation icons to the scaffold we",
    "start": "438840",
    "end": "441199"
  },
  {
    "text": "also need a drawer that animates out",
    "start": "441199",
    "end": "442840"
  },
  {
    "text": "from the left we can achieve that by",
    "start": "442840",
    "end": "444639"
  },
  {
    "text": "simply adding a drawer to the scaffold",
    "start": "444639",
    "end": "446680"
  },
  {
    "text": "that's pretty awesome but eventually",
    "start": "446680",
    "end": "448319"
  },
  {
    "start": "447000",
    "end": "467000"
  },
  {
    "text": "you'll lay out your widgets and they",
    "start": "448319",
    "end": "449800"
  },
  {
    "text": "will overflow the bounds of their parent",
    "start": "449800",
    "end": "451479"
  },
  {
    "text": "which will summon the red screen of",
    "start": "451479",
    "end": "452919"
  },
  {
    "text": "death or this black and yellow error",
    "start": "452919",
    "end": "454440"
  },
  {
    "text": "tape when you get an error like this the",
    "start": "454440",
    "end": "456120"
  },
  {
    "text": "terminal output will link you to",
    "start": "456120",
    "end": "457759"
  },
  {
    "text": "flutters built-in debugger that'll give",
    "start": "457759",
    "end": "459639"
  },
  {
    "text": "you more information about layout to",
    "start": "459639",
    "end": "461120"
  },
  {
    "text": "help debug things like this in this case",
    "start": "461120",
    "end": "463400"
  },
  {
    "text": "the problem is that our parent is not a",
    "start": "463400",
    "end": "465560"
  },
  {
    "text": "scrollable view things don't just scroll",
    "start": "465560",
    "end": "467560"
  },
  {
    "start": "467000",
    "end": "489000"
  },
  {
    "text": "automatically instead you need to use a",
    "start": "467560",
    "end": "469599"
  },
  {
    "text": "widget like list view it takes a list of",
    "start": "469599",
    "end": "471680"
  },
  {
    "text": "children as its argument but will scroll",
    "start": "471680",
    "end": "473840"
  },
  {
    "text": "between them it can scroll both",
    "start": "473840",
    "end": "475440"
  },
  {
    "text": "horizontally and vertically and you can",
    "start": "475440",
    "end": "477199"
  },
  {
    "text": "even tell it to garbage collect items",
    "start": "477199",
    "end": "478919"
  },
  {
    "text": "that are no longer on the screen you'll",
    "start": "478919",
    "end": "480720"
  },
  {
    "text": "notice that in this list we're adding",
    "start": "480720",
    "end": "482240"
  },
  {
    "text": "each widget individually but in real",
    "start": "482240",
    "end": "484000"
  },
  {
    "text": "life you'll often need to fetch a bunch",
    "start": "484000",
    "end": "485639"
  },
  {
    "text": "of items from a database and then create",
    "start": "485639",
    "end": "487599"
  },
  {
    "text": "each list item programmatically in",
    "start": "487599",
    "end": "489319"
  },
  {
    "start": "489000",
    "end": "505000"
  },
  {
    "text": "flutter many widgets can be built",
    "start": "489319",
    "end": "490879"
  },
  {
    "text": "dynamically using Builders which is just",
    "start": "490879",
    "end": "493120"
  },
  {
    "text": "a function that you define that can map",
    "start": "493120",
    "end": "495280"
  },
  {
    "text": "a list of data to a list of widgets and",
    "start": "495280",
    "end": "497639"
  },
  {
    "text": "that means you can create a scrollable",
    "start": "497639",
    "end": "499240"
  },
  {
    "text": "list that is infinitely long where the",
    "start": "499240",
    "end": "501159"
  },
  {
    "text": "children are rendered lazily keeping the",
    "start": "501159",
    "end": "503000"
  },
  {
    "text": "UI smooth and fast now that you know how",
    "start": "503000",
    "end": "505080"
  },
  {
    "start": "505000",
    "end": "572000"
  },
  {
    "text": "to build a UI we need to talk about",
    "start": "505080",
    "end": "507080"
  },
  {
    "text": "State or the data that changes",
    "start": "507080",
    "end": "509120"
  },
  {
    "text": "throughout the life cycle of the app a",
    "start": "509120",
    "end": "511080"
  },
  {
    "text": "stateless widget has no State as the",
    "start": "511080",
    "end": "512959"
  },
  {
    "text": "name implies to give this widget mutable",
    "start": "512959",
    "end": "515120"
  },
  {
    "text": "data we need to convert it to a stateful",
    "start": "515120",
    "end": "517360"
  },
  {
    "text": "widget which we can do by right clicking",
    "start": "517360",
    "end": "519560"
  },
  {
    "text": "going to the refactor tool and choosing",
    "start": "519560",
    "end": "521360"
  },
  {
    "text": "the option to convert it that will break",
    "start": "521360",
    "end": "523200"
  },
  {
    "text": "the widget up into two different classes",
    "start": "523200",
    "end": "525360"
  },
  {
    "text": "that keeps the widget itself immutable",
    "start": "525360",
    "end": "527240"
  },
  {
    "text": "while giving us a state class where we",
    "start": "527240",
    "end": "529160"
  },
  {
    "text": "can play with mutable data it has a",
    "start": "529160",
    "end": "531080"
  },
  {
    "text": "build method but we can also Define",
    "start": "531080",
    "end": "532959"
  },
  {
    "text": "variables on this class and then change",
    "start": "532959",
    "end": "535240"
  },
  {
    "text": "them by using the buil-in set State",
    "start": "535240",
    "end": "537560"
  },
  {
    "text": "function somewhere else in our code like",
    "start": "537560",
    "end": "539440"
  },
  {
    "text": "like when a button is pressed we can",
    "start": "539440",
    "end": "541040"
  },
  {
    "text": "create a counter app by defining a",
    "start": "541040",
    "end": "542920"
  },
  {
    "text": "property called count then reference the",
    "start": "542920",
    "end": "544680"
  },
  {
    "text": "value in the UI using a text widget when",
    "start": "544680",
    "end": "547079"
  },
  {
    "text": "working with strings and dart you can",
    "start": "547079",
    "end": "548480"
  },
  {
    "text": "interpolate a variable inside of it with",
    "start": "548480",
    "end": "550519"
  },
  {
    "text": "a dollar sign now when our button is",
    "start": "550519",
    "end": "552320"
  },
  {
    "text": "pressed we call set state to change the",
    "start": "552320",
    "end": "554320"
  },
  {
    "text": "value and the widget will automatically",
    "start": "554320",
    "end": "556279"
  },
  {
    "text": "rerender to reflect the latest data",
    "start": "556279",
    "end": "558480"
  },
  {
    "text": "another thing you might want to do in a",
    "start": "558480",
    "end": "559720"
  },
  {
    "text": "stateful widget is initialize data like",
    "start": "559720",
    "end": "561760"
  },
  {
    "text": "maybe fetch a record from a database the",
    "start": "561760",
    "end": "563760"
  },
  {
    "text": "init State method is called once when",
    "start": "563760",
    "end": "565600"
  },
  {
    "text": "the widget is first initialized and",
    "start": "565600",
    "end": "567320"
  },
  {
    "text": "there's also another life cycle hook",
    "start": "567320",
    "end": "568959"
  },
  {
    "text": "called expose that runs when the widget",
    "start": "568959",
    "end": "571040"
  },
  {
    "text": "is removed from the UI now you should",
    "start": "571040",
    "end": "572920"
  },
  {
    "start": "572000",
    "end": "603000"
  },
  {
    "text": "know that this is not the only way to",
    "start": "572920",
    "end": "574839"
  },
  {
    "text": "manage State and flutter in fact there",
    "start": "574839",
    "end": "576839"
  },
  {
    "text": "are many different approaches and many",
    "start": "576839",
    "end": "578680"
  },
  {
    "text": "strong opinions out there about this",
    "start": "578680",
    "end": "580160"
  },
  {
    "text": "topic in my full course I use a package",
    "start": "580160",
    "end": "582320"
  },
  {
    "text": "called provider that allows us to share",
    "start": "582320",
    "end": "584360"
  },
  {
    "text": "real-time data throughout the entire",
    "start": "584360",
    "end": "586040"
  },
  {
    "text": "widget tree without ever needing to use",
    "start": "586040",
    "end": "587959"
  },
  {
    "text": "a stateful widget at all there are also",
    "start": "587959",
    "end": "589920"
  },
  {
    "text": "full-blown Solutions out there like",
    "start": "589920",
    "end": "591640"
  },
  {
    "text": "block and Cubit the full course also",
    "start": "591640",
    "end": "593560"
  },
  {
    "text": "contains a repo of the same app built",
    "start": "593560",
    "end": "595800"
  },
  {
    "text": "with Cubit I want to give a shout out to",
    "start": "595800",
    "end": "597480"
  },
  {
    "text": "Raleigh Perez for putting that demo",
    "start": "597480",
    "end": "599160"
  },
  {
    "text": "together if you're looking to hire a",
    "start": "599160",
    "end": "600640"
  },
  {
    "text": "flutter developer you'll definitely want",
    "start": "600640",
    "end": "602160"
  },
  {
    "text": "to get in touch with him now that we",
    "start": "602160",
    "end": "603560"
  },
  {
    "start": "603000",
    "end": "651000"
  },
  {
    "text": "have a fully functional counter app the",
    "start": "603560",
    "end": "605320"
  },
  {
    "text": "question becomes how do we navigate to a",
    "start": "605320",
    "end": "607399"
  },
  {
    "text": "different screen well confusingly",
    "start": "607399",
    "end": "609040"
  },
  {
    "text": "flutter has Navigator 1.0 and 2.0 and",
    "start": "609040",
    "end": "612000"
  },
  {
    "text": "all you need to know for basic training",
    "start": "612000",
    "end": "613480"
  },
  {
    "text": "is 1.0 at this point go ahead and build",
    "start": "613480",
    "end": "615800"
  },
  {
    "text": "two different stateless widgets then",
    "start": "615800",
    "end": "617560"
  },
  {
    "text": "give each one of them a scaffold make",
    "start": "617560",
    "end": "619360"
  },
  {
    "text": "sure that each scaffold has an app bar",
    "start": "619360",
    "end": "621320"
  },
  {
    "text": "at the top in the first page go ahead",
    "start": "621320",
    "end": "623120"
  },
  {
    "text": "and add a button to the body of the",
    "start": "623120",
    "end": "625040"
  },
  {
    "text": "scaffold now think of your navigation",
    "start": "625040",
    "end": "627040"
  },
  {
    "text": "like a stack where you can push and pop",
    "start": "627040",
    "end": "629320"
  },
  {
    "text": "different screens onto it to add a new",
    "start": "629320",
    "end": "631360"
  },
  {
    "text": "screen to the top of the stack we use",
    "start": "631360",
    "end": "633040"
  },
  {
    "text": "Navigator push with the build context",
    "start": "633040",
    "end": "635480"
  },
  {
    "text": "then create a new material page route",
    "start": "635480",
    "end": "637720"
  },
  {
    "text": "the route expects a builder function",
    "start": "637720",
    "end": "639800"
  },
  {
    "text": "which then Returns the screen that you",
    "start": "639800",
    "end": "641279"
  },
  {
    "text": "want to render which in our case will be",
    "start": "641279",
    "end": "643279"
  },
  {
    "text": "page two now do a full restart of the",
    "start": "643279",
    "end": "645519"
  },
  {
    "text": "application by typing a capital R into",
    "start": "645519",
    "end": "647760"
  },
  {
    "text": "the command line and you should be able",
    "start": "647760",
    "end": "649279"
  },
  {
    "text": "to navigate back and forth between the",
    "start": "649279",
    "end": "651040"
  },
  {
    "start": "651000",
    "end": "729000"
  },
  {
    "text": "two pages one magic thing that flutter",
    "start": "651040",
    "end": "652920"
  },
  {
    "text": "is doing here is adding a back button to",
    "start": "652920",
    "end": "655079"
  },
  {
    "text": "the app bar which under the hood is",
    "start": "655079",
    "end": "657000"
  },
  {
    "text": "calling the Navigator pop method that",
    "start": "657000",
    "end": "659360"
  },
  {
    "text": "was easy but I want to finish things off",
    "start": "659360",
    "end": "661200"
  },
  {
    "text": "with something really cool flutter has a",
    "start": "661200",
    "end": "662920"
  },
  {
    "text": "hero widget that can animate elements",
    "start": "662920",
    "end": "664959"
  },
  {
    "text": "from one screen to another so check this",
    "start": "664959",
    "end": "667079"
  },
  {
    "text": "out on page one I have an icon button",
    "start": "667079",
    "end": "669399"
  },
  {
    "text": "with an image as the background then on",
    "start": "669399",
    "end": "671240"
  },
  {
    "text": "page two I'm showing the same image",
    "start": "671240",
    "end": "673040"
  },
  {
    "text": "taking up the full screen that works but",
    "start": "673040",
    "end": "675120"
  },
  {
    "text": "I think we could do a little better the",
    "start": "675120",
    "end": "676440"
  },
  {
    "text": "magic comes into play when I wrap these",
    "start": "676440",
    "end": "678160"
  },
  {
    "text": "images in a hero the only argument the",
    "start": "678160",
    "end": "680200"
  },
  {
    "text": "hero needs is an ID to identify it when",
    "start": "680200",
    "end": "682760"
  },
  {
    "text": "it gets animated to the other page",
    "start": "682760",
    "end": "684519"
  },
  {
    "text": "flutter will use the ID to keep the",
    "start": "684519",
    "end": "686360"
  },
  {
    "text": "image in the UI on both Pages while the",
    "start": "686360",
    "end": "688720"
  },
  {
    "text": "navigation is taking place now on the",
    "start": "688720",
    "end": "691000"
  },
  {
    "text": "other screen we'll also use a hero",
    "start": "691000",
    "end": "692839"
  },
  {
    "text": "widget with the image inside of it when",
    "start": "692839",
    "end": "694839"
  },
  {
    "text": "we navigate to this route you'll notice",
    "start": "694839",
    "end": "696480"
  },
  {
    "text": "the image itself is animated between the",
    "start": "696480",
    "end": "698600"
  },
  {
    "text": "two screens automatically it makes the",
    "start": "698600",
    "end": "700360"
  },
  {
    "text": "biggest impact when you have a list of",
    "start": "700360",
    "end": "702079"
  },
  {
    "text": "images to navigate to Not only does it",
    "start": "702079",
    "end": "704360"
  },
  {
    "text": "look awesome but it would be extremely",
    "start": "704360",
    "end": "706160"
  },
  {
    "text": "difficult to implement from scratch",
    "start": "706160",
    "end": "707880"
  },
  {
    "text": "congratulations you just completed basic",
    "start": "707880",
    "end": "709920"
  },
  {
    "text": "training for flutter take a screenshot",
    "start": "709920",
    "end": "712000"
  },
  {
    "text": "of the certificate and frame it on your",
    "start": "712000",
    "end": "713760"
  },
  {
    "text": "wall if you want to go beyond the basics",
    "start": "713760",
    "end": "715680"
  },
  {
    "text": "become a pro member at fireship iio to",
    "start": "715680",
    "end": "717959"
  },
  {
    "text": "get access to the full flutter 2 course",
    "start": "717959",
    "end": "720360"
  },
  {
    "text": "where we build a complex application",
    "start": "720360",
    "end": "722160"
  },
  {
    "text": "with Firebase thanks for watching and I",
    "start": "722160",
    "end": "724320"
  },
  {
    "text": "will see you in the next one",
    "start": "724320",
    "end": "728480"
  }
]