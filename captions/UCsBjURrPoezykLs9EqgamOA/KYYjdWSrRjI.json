[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "there were a whole bunch of awesome",
    "start": "30",
    "end": "1199"
  },
  {
    "text": "announcements at Google i/o 2019 but my",
    "start": "1199",
    "end": "3570"
  },
  {
    "text": "personal favorite is definitely firebase",
    "start": "3570",
    "end": "5490"
  },
  {
    "text": "performance for the web well today we're",
    "start": "5490",
    "end": "8160"
  },
  {
    "text": "expanding performance monitoring to the",
    "start": "8160",
    "end": "9840"
  },
  {
    "text": "web this is a tool that can benefit any",
    "start": "9840",
    "end": "13950"
  },
  {
    "text": "website that cares about performance",
    "start": "13950",
    "end": "15480"
  },
  {
    "text": "even if that site isn't already using",
    "start": "15480",
    "end": "17279"
  },
  {
    "text": "other firebase products by simply adding",
    "start": "17279",
    "end": "19410"
  },
  {
    "text": "a script tag to your site or including",
    "start": "19410",
    "end": "21119"
  },
  {
    "text": "firebase perf in your JavaScript bundle",
    "start": "21119",
    "end": "22830"
  },
  {
    "text": "you'll get insights about how your web",
    "start": "22830",
    "end": "24180"
  },
  {
    "text": "app performs out in the real world in",
    "start": "24180",
    "end": "25769"
  },
  {
    "text": "terms of initial page load performance",
    "start": "25769",
    "end": "26910"
  },
  {
    "text": "and HTTP calls over the network in",
    "start": "26910",
    "end": "29460"
  },
  {
    "text": "today's video we'll look at the basics",
    "start": "29460",
    "end": "31050"
  },
  {
    "text": "of firebase performance and take things",
    "start": "31050",
    "end": "32880"
  },
  {
    "text": "a few steps further by implementing our",
    "start": "32880",
    "end": "34620"
  },
  {
    "text": "own custom traces and we'll look at some",
    "start": "34620",
    "end": "36390"
  },
  {
    "text": "awesome upcoming features in angular",
    "start": "36390",
    "end": "38190"
  },
  {
    "text": "fire to integrate with angular and rxjs",
    "start": "38190",
    "end": "40559"
  },
  {
    "text": "if you're new here like and subscribe",
    "start": "40559",
    "end": "42180"
  },
  {
    "text": "and make sure to download the mobile app",
    "start": "42180",
    "end": "43680"
  },
  {
    "text": "on iOS or Android to take the firebase",
    "start": "43680",
    "end": "45809"
  },
  {
    "text": "performance quiz after you're done",
    "start": "45809",
    "end": "47039"
  },
  {
    "text": "watching this video now there's a few",
    "start": "47039",
    "end": "48870"
  },
  {
    "start": "48000",
    "end": "105000"
  },
  {
    "text": "different ways we can use firebase",
    "start": "48870",
    "end": "50039"
  },
  {
    "text": "performance the most basic way is to use",
    "start": "50039",
    "end": "52230"
  },
  {
    "text": "it as just a standalone tool in an",
    "start": "52230",
    "end": "54180"
  },
  {
    "text": "existing website this approach will",
    "start": "54180",
    "end": "56010"
  },
  {
    "text": "insert a lightweight script into your",
    "start": "56010",
    "end": "57660"
  },
  {
    "text": "HTML document and then you'll",
    "start": "57660",
    "end": "59219"
  },
  {
    "text": "automatically get all kinds of",
    "start": "59219",
    "end": "60359"
  },
  {
    "text": "performance reporting on the firebase",
    "start": "60359",
    "end": "61920"
  },
  {
    "text": "console so this is a great option if you",
    "start": "61920",
    "end": "63690"
  },
  {
    "text": "have an existing website and you want",
    "start": "63690",
    "end": "65128"
  },
  {
    "text": "some performance reporting but you don't",
    "start": "65129",
    "end": "66659"
  },
  {
    "text": "want to use any other fighter based",
    "start": "66659",
    "end": "67710"
  },
  {
    "text": "products the next option is to use it in",
    "start": "67710",
    "end": "69990"
  },
  {
    "text": "combination with firebase hosting if",
    "start": "69990",
    "end": "71850"
  },
  {
    "text": "you're already using firebase hosting",
    "start": "71850",
    "end": "73020"
  },
  {
    "text": "you can use these magic script tags to",
    "start": "73020",
    "end": "75119"
  },
  {
    "text": "easily import it into your project but I",
    "start": "75119",
    "end": "77189"
  },
  {
    "text": "think the vast majority of people will",
    "start": "77189",
    "end": "78750"
  },
  {
    "text": "use it in combination with a module",
    "start": "78750",
    "end": "80400"
  },
  {
    "text": "bundle or like web pack that's how we're",
    "start": "80400",
    "end": "82140"
  },
  {
    "text": "going to use it today in the context of",
    "start": "82140",
    "end": "83549"
  },
  {
    "text": "an angular application but the process",
    "start": "83549",
    "end": "85470"
  },
  {
    "text": "is very similar for all JavaScript",
    "start": "85470",
    "end": "87240"
  },
  {
    "text": "frameworks the first thing I want to do",
    "start": "87240",
    "end": "88860"
  },
  {
    "text": "is install the latest version of",
    "start": "88860",
    "end": "90150"
  },
  {
    "text": "firebase making sure that it's version",
    "start": "90150",
    "end": "91680"
  },
  {
    "text": "6.0 or greater now most of the code that",
    "start": "91680",
    "end": "94110"
  },
  {
    "text": "we'll look at is relevant to any",
    "start": "94110",
    "end": "95430"
  },
  {
    "text": "JavaScript app but at the end of the",
    "start": "95430",
    "end": "97259"
  },
  {
    "text": "video we're going to look at some really",
    "start": "97259",
    "end": "98610"
  },
  {
    "text": "cool new bleeding edge stuff from the",
    "start": "98610",
    "end": "100320"
  },
  {
    "text": "angularfire library at the time of this",
    "start": "100320",
    "end": "102150"
  },
  {
    "text": "video you can use it by installing an",
    "start": "102150",
    "end": "103920"
  },
  {
    "text": "angular fire with the next tag from",
    "start": "103920",
    "end": "105840"
  },
  {
    "start": "105000",
    "end": "266000"
  },
  {
    "text": "there you'll want to go to the firebase",
    "start": "105840",
    "end": "107189"
  },
  {
    "text": "console and go to the Settings tab and",
    "start": "107189",
    "end": "109259"
  },
  {
    "text": "you'll see an option to now add your app",
    "start": "109259",
    "end": "111119"
  },
  {
    "text": "as a web app you'll want to do this even",
    "start": "111119",
    "end": "112920"
  },
  {
    "text": "if you have an existing app because",
    "start": "112920",
    "end": "114299"
  },
  {
    "text": "there's a new property that you need to",
    "start": "114299",
    "end": "115680"
  },
  {
    "text": "have in your firebase config in order to",
    "start": "115680",
    "end": "117420"
  },
  {
    "text": "work with firebase performance that",
    "start": "117420",
    "end": "119219"
  },
  {
    "text": "property is the app ID which you can see",
    "start": "119219",
    "end": "120990"
  },
  {
    "text": "down here at the bottom and if you go to",
    "start": "120990",
    "end": "122880"
  },
  {
    "text": "the performance screen you should see",
    "start": "122880",
    "end": "124439"
  },
  {
    "text": "your web app there as an option and keep",
    "start": "124439",
    "end": "126299"
  },
  {
    "text": "in mind it can take up to 24 hours for",
    "start": "126299",
    "end": "127920"
  },
  {
    "text": "the data to populate so don't be worried",
    "start": "127920",
    "end": "129840"
  },
  {
    "text": "if you don't see any data after",
    "start": "129840",
    "end": "131009"
  },
  {
    "text": "deploying initially I was lucky enough",
    "start": "131009",
    "end": "132480"
  },
  {
    "text": "to be able to test firebase",
    "start": "132480",
    "end": "133950"
  },
  {
    "text": "performance before it was officially",
    "start": "133950",
    "end": "135239"
  },
  {
    "text": "released so I have quite a bit of data",
    "start": "135239",
    "end": "136890"
  },
  {
    "text": "built up here for fire ship IO the",
    "start": "136890",
    "end": "138780"
  },
  {
    "text": "actual data that you see on the",
    "start": "138780",
    "end": "140040"
  },
  {
    "text": "dashboard is similar to what you would",
    "start": "140040",
    "end": "141660"
  },
  {
    "text": "see on a lighthouse performance score",
    "start": "141660",
    "end": "143280"
  },
  {
    "text": "that you run locally in your Chrome",
    "start": "143280",
    "end": "144660"
  },
  {
    "text": "browser except this data is being",
    "start": "144660",
    "end": "146190"
  },
  {
    "text": "collected and segmented across all your",
    "start": "146190",
    "end": "148140"
  },
  {
    "text": "users in the real world on the dashboard",
    "start": "148140",
    "end": "150390"
  },
  {
    "text": "I can see the aggregate performance for",
    "start": "150390",
    "end": "151950"
  },
  {
    "text": "things like first paint first contentful",
    "start": "151950",
    "end": "153690"
  },
  {
    "text": "paint",
    "start": "153690",
    "end": "154290"
  },
  {
    "text": "dominar active and how they're",
    "start": "154290",
    "end": "155910"
  },
  {
    "text": "distributed across the entire user base",
    "start": "155910",
    "end": "157500"
  },
  {
    "text": "by looking at this distribution I can",
    "start": "157500",
    "end": "159720"
  },
  {
    "text": "see that the majority of my users are",
    "start": "159720",
    "end": "161190"
  },
  {
    "text": "seen page load times in less than two",
    "start": "161190",
    "end": "163080"
  },
  {
    "text": "seconds so that's pretty good but I'm",
    "start": "163080",
    "end": "165030"
  },
  {
    "text": "always pushing new code to my web app so",
    "start": "165030",
    "end": "166950"
  },
  {
    "text": "what if I do something that makes the",
    "start": "166950",
    "end": "168390"
  },
  {
    "text": "performance decline",
    "start": "168390",
    "end": "169560"
  },
  {
    "text": "I can easily determine if my performance",
    "start": "169560",
    "end": "170940"
  },
  {
    "text": "is getting better or worse by looking at",
    "start": "170940",
    "end": "172890"
  },
  {
    "text": "the trend over time ideally you want to",
    "start": "172890",
    "end": "174720"
  },
  {
    "text": "see this chart have a negative slope",
    "start": "174720",
    "end": "175980"
  },
  {
    "text": "because faster is always better and on",
    "start": "175980",
    "end": "178230"
  },
  {
    "text": "top of that we can filter this data by",
    "start": "178230",
    "end": "179730"
  },
  {
    "text": "region by device and even whether or not",
    "start": "179730",
    "end": "181890"
  },
  {
    "text": "the user has a service worker installed",
    "start": "181890",
    "end": "183599"
  },
  {
    "text": "this allows us to figure out what users",
    "start": "183599",
    "end": "185549"
  },
  {
    "text": "are being affected by a performance",
    "start": "185549",
    "end": "186900"
  },
  {
    "text": "bottleneck and what the root cause might",
    "start": "186900",
    "end": "188730"
  },
  {
    "text": "be in addition to page loads it will",
    "start": "188730",
    "end": "190680"
  },
  {
    "text": "also keep track of HTTP calls over the",
    "start": "190680",
    "end": "192720"
  },
  {
    "text": "network so if you have some sort of",
    "start": "192720",
    "end": "194370"
  },
  {
    "text": "async activity that's causing a",
    "start": "194370",
    "end": "195780"
  },
  {
    "text": "performance bottleneck you'll be able to",
    "start": "195780",
    "end": "197310"
  },
  {
    "text": "find it here now everything I've showed",
    "start": "197310",
    "end": "199109"
  },
  {
    "text": "you so far will just work out of the box",
    "start": "199109",
    "end": "200880"
  },
  {
    "text": "when you include firebase performance in",
    "start": "200880",
    "end": "202470"
  },
  {
    "text": "your app but you can also write your own",
    "start": "202470",
    "end": "204239"
  },
  {
    "text": "custom traces within your apps code and",
    "start": "204239",
    "end": "206190"
  },
  {
    "text": "that opens the door to all kinds of cool",
    "start": "206190",
    "end": "207750"
  },
  {
    "text": "possibilities for example I have a",
    "start": "207750",
    "end": "209819"
  },
  {
    "text": "custom trace here on a log in modal that",
    "start": "209819",
    "end": "211950"
  },
  {
    "text": "users click to log into the app and this",
    "start": "211950",
    "end": "214049"
  },
  {
    "text": "allows me to see exactly how long it",
    "start": "214049",
    "end": "215549"
  },
  {
    "text": "takes a user on average to log into the",
    "start": "215549",
    "end": "217680"
  },
  {
    "text": "app but one thing I do want to point out",
    "start": "217680",
    "end": "219299"
  },
  {
    "text": "at this point is that you should never",
    "start": "219299",
    "end": "220560"
  },
  {
    "text": "use any personally identifiable",
    "start": "220560",
    "end": "222209"
  },
  {
    "text": "information inside of a trace things",
    "start": "222209",
    "end": "224160"
  },
  {
    "text": "like email addresses or phone numbers",
    "start": "224160",
    "end": "225900"
  },
  {
    "text": "not only is that a bad practice for a",
    "start": "225900",
    "end": "227519"
  },
  {
    "text": "user privacy but Google will flag it for",
    "start": "227519",
    "end": "229380"
  },
  {
    "text": "automatic deletion anyway we'll be",
    "start": "229380",
    "end": "231359"
  },
  {
    "text": "writing our own custom traces in just a",
    "start": "231359",
    "end": "232920"
  },
  {
    "text": "minute and once you've collected some",
    "start": "232920",
    "end": "234569"
  },
  {
    "text": "data you'll have a screen that looks",
    "start": "234569",
    "end": "235739"
  },
  {
    "text": "like this that you can filter by",
    "start": "235739",
    "end": "237120"
  },
  {
    "text": "different attributes you can even create",
    "start": "237120",
    "end": "239280"
  },
  {
    "text": "your own custom attributes in your code",
    "start": "239280",
    "end": "240780"
  },
  {
    "text": "and you can also set up your own custom",
    "start": "240780",
    "end": "242280"
  },
  {
    "text": "thresholds to signify a certain point",
    "start": "242280",
    "end": "244470"
  },
  {
    "text": "that a metric would be considered poor",
    "start": "244470",
    "end": "246030"
  },
  {
    "text": "performance in my case I've already",
    "start": "246030",
    "end": "247799"
  },
  {
    "text": "gotten valuable insight from this trace",
    "start": "247799",
    "end": "249569"
  },
  {
    "text": "because I found out that users on Safari",
    "start": "249569",
    "end": "251700"
  },
  {
    "text": "take way longer to login than users on",
    "start": "251700",
    "end": "253769"
  },
  {
    "text": "Chrome or Firefox and the reason I",
    "start": "253769",
    "end": "255840"
  },
  {
    "text": "detected that is because firebase is",
    "start": "255840",
    "end": "257400"
  },
  {
    "text": "smart enough to warn me about it with",
    "start": "257400",
    "end": "258900"
  },
  {
    "text": "this little orange icon here so it'll",
    "start": "258900",
    "end": "260639"
  },
  {
    "text": "automatically tell you when a certain",
    "start": "260639",
    "end": "261959"
  },
  {
    "text": "segment seems out of the ordinary and",
    "start": "261959",
    "end": "263640"
  },
  {
    "text": "that's all based on real world data from",
    "start": "263640",
    "end": "265380"
  },
  {
    "text": "fire ship let's go ahead and jump into",
    "start": "265380",
    "end": "267360"
  },
  {
    "start": "266000",
    "end": "559000"
  },
  {
    "text": "the code",
    "start": "267360",
    "end": "267830"
  },
  {
    "text": "right our own custom traces back in our",
    "start": "267830",
    "end": "269990"
  },
  {
    "text": "angular app we'll go into the app module",
    "start": "269990",
    "end": "271460"
  },
  {
    "text": "and then set up the firebase config",
    "start": "271460",
    "end": "273439"
  },
  {
    "text": "making sure that it contains the app ID",
    "start": "273439",
    "end": "275090"
  },
  {
    "text": "I've already included fire store and",
    "start": "275090",
    "end": "277340"
  },
  {
    "text": "angularfire auth in here and then we can",
    "start": "277340",
    "end": "279289"
  },
  {
    "text": "go ahead and include the angular fire",
    "start": "279289",
    "end": "280909"
  },
  {
    "text": "performance module this setup is",
    "start": "280909",
    "end": "283069"
  },
  {
    "text": "specific to angular",
    "start": "283069",
    "end": "284060"
  },
  {
    "text": "but the traces that we'll write next our",
    "start": "284060",
    "end": "285680"
  },
  {
    "text": "framework agnostic there's a lot of",
    "start": "285680",
    "end": "287569"
  },
  {
    "text": "different use cases for firebase",
    "start": "287569",
    "end": "288800"
  },
  {
    "text": "performance depending on what you're",
    "start": "288800",
    "end": "290060"
  },
  {
    "text": "interested in tracking and the component",
    "start": "290060",
    "end": "292099"
  },
  {
    "text": "we'll go ahead and import firebase from",
    "start": "292099",
    "end": "293539"
  },
  {
    "text": "firebase app and then initialize",
    "start": "293539",
    "end": "295039"
  },
  {
    "text": "firebase performance on iOS and Android",
    "start": "295039",
    "end": "297560"
  },
  {
    "text": "fire perf will automatically track how",
    "start": "297560",
    "end": "299599"
  },
  {
    "text": "long a screen has been opened but we can",
    "start": "299599",
    "end": "301610"
  },
  {
    "text": "also do that in a single page",
    "start": "301610",
    "end": "302690"
  },
  {
    "text": "application by using the lifecycle hooks",
    "start": "302690",
    "end": "304520"
  },
  {
    "text": "in the framework now the trace itself",
    "start": "304520",
    "end": "306409"
  },
  {
    "text": "you can think of like a stopwatch you",
    "start": "306409",
    "end": "308449"
  },
  {
    "text": "create an instance of a trace with a",
    "start": "308449",
    "end": "309889"
  },
  {
    "text": "specific name then you call start to",
    "start": "309889",
    "end": "311810"
  },
  {
    "text": "start it and stop to end it a simple",
    "start": "311810",
    "end": "314000"
  },
  {
    "text": "trace will just keep track of the",
    "start": "314000",
    "end": "315110"
  },
  {
    "text": "elapsed time but we can also add custom",
    "start": "315110",
    "end": "316909"
  },
  {
    "text": "attributes and metrics in between as",
    "start": "316909",
    "end": "318979"
  },
  {
    "text": "we'll see later so in this case here",
    "start": "318979",
    "end": "320810"
  },
  {
    "text": "we'll start our trace during ng on init",
    "start": "320810",
    "end": "322460"
  },
  {
    "text": "and then we'll end the trace during ng",
    "start": "322460",
    "end": "324500"
  },
  {
    "text": "on destroy and now I'll have an",
    "start": "324500",
    "end": "326000"
  },
  {
    "text": "understanding of exactly how much time",
    "start": "326000",
    "end": "327529"
  },
  {
    "text": "our users are spending on the login page",
    "start": "327529",
    "end": "329240"
  },
  {
    "text": "so that represents your most simple use",
    "start": "329240",
    "end": "330860"
  },
  {
    "text": "case for a custom trace but there's a",
    "start": "330860",
    "end": "332659"
  },
  {
    "text": "whole lot we can do in between the start",
    "start": "332659",
    "end": "334279"
  },
  {
    "text": "and stop point let's go ahead and add a",
    "start": "334279",
    "end": "336139"
  },
  {
    "text": "custom trace into the auth logic itself",
    "start": "336139",
    "end": "338180"
  },
  {
    "text": "first by injecting angularfire auth into",
    "start": "338180",
    "end": "340190"
  },
  {
    "text": "the constructor and then we'll create an",
    "start": "340190",
    "end": "341779"
  },
  {
    "text": "async function here called login and",
    "start": "341779",
    "end": "343639"
  },
  {
    "text": "this is the function that we would call",
    "start": "343639",
    "end": "345020"
  },
  {
    "text": "after the user submits a form with their",
    "start": "345020",
    "end": "346849"
  },
  {
    "text": "email and password the first thing we'll",
    "start": "346849",
    "end": "348830"
  },
  {
    "text": "do is create an instance of a trace",
    "start": "348830",
    "end": "350330"
  },
  {
    "text": "called user login and start it then stop",
    "start": "350330",
    "end": "352789"
  },
  {
    "text": "it at the end of the function and add a",
    "start": "352789",
    "end": "354500"
  },
  {
    "text": "try-catch block in between the start and",
    "start": "354500",
    "end": "356449"
  },
  {
    "text": "stop point what we'll try to do is login",
    "start": "356449",
    "end": "358639"
  },
  {
    "text": "the user with email and password and if",
    "start": "358639",
    "end": "360949"
  },
  {
    "text": "that's successful then we'll want to put",
    "start": "360949",
    "end": "362629"
  },
  {
    "text": "a custom attribute that will tell us",
    "start": "362629",
    "end": "364219"
  },
  {
    "text": "whether or not the user has a verified",
    "start": "364219",
    "end": "365870"
  },
  {
    "text": "email address this example is kind of",
    "start": "365870",
    "end": "367699"
  },
  {
    "text": "trivial but attributes are just strings",
    "start": "367699",
    "end": "369409"
  },
  {
    "text": "that allow you to segment your data in",
    "start": "369409",
    "end": "371330"
  },
  {
    "text": "different ways setting really good",
    "start": "371330",
    "end": "373310"
  },
  {
    "text": "attributes will result in really good",
    "start": "373310",
    "end": "374810"
  },
  {
    "text": "performance reporting on the firebase",
    "start": "374810",
    "end": "376370"
  },
  {
    "text": "console now if there's an error in the",
    "start": "376370",
    "end": "378199"
  },
  {
    "text": "process we can go in here to catch and",
    "start": "378199",
    "end": "379969"
  },
  {
    "text": "we'll set a different attribute called",
    "start": "379969",
    "end": "381289"
  },
  {
    "text": "error code that will allow us to segment",
    "start": "381289",
    "end": "383120"
  },
  {
    "text": "by different error codes in the firebase",
    "start": "383120",
    "end": "384889"
  },
  {
    "text": "console as well so if there's a certain",
    "start": "384889",
    "end": "386810"
  },
  {
    "text": "browser quirk that makes it really hard",
    "start": "386810",
    "end": "388339"
  },
  {
    "text": "for users to log in with email and",
    "start": "388339",
    "end": "390050"
  },
  {
    "text": "password we should be able to detect it",
    "start": "390050",
    "end": "391789"
  },
  {
    "text": "with this trace and really just be able",
    "start": "391789",
    "end": "393379"
  },
  {
    "text": "to see how smooth our login process is",
    "start": "393379",
    "end": "395180"
  },
  {
    "text": "in general so that's how you create",
    "start": "395180",
    "end": "396709"
  },
  {
    "text": "custom attributes to segment the data",
    "start": "396709",
    "end": "398300"
  },
  {
    "text": "but you can also add your own custom",
    "start": "398300",
    "end": "399889"
  },
  {
    "text": "metrics for reporting",
    "start": "399889",
    "end": "401400"
  },
  {
    "text": "would actually show up as numeric values",
    "start": "401400",
    "end": "403080"
  },
  {
    "text": "on your performance reports let's",
    "start": "403080",
    "end": "404940"
  },
  {
    "text": "imagine we have a function here that",
    "start": "404940",
    "end": "406229"
  },
  {
    "text": "loads user data that makes multiple",
    "start": "406229",
    "end": "407669"
  },
  {
    "text": "queries to different buyers store",
    "start": "407669",
    "end": "409199"
  },
  {
    "text": "collections and we want to know how long",
    "start": "409199",
    "end": "410669"
  },
  {
    "text": "that query takes and also how many",
    "start": "410669",
    "end": "412440"
  },
  {
    "text": "documents are read in the process this",
    "start": "412440",
    "end": "414389"
  },
  {
    "text": "time I'll be using angular fighter'",
    "start": "414389",
    "end": "415590"
  },
  {
    "text": "directly so this codes a little more",
    "start": "415590",
    "end": "417180"
  },
  {
    "text": "specialized to angular but basically",
    "start": "417180",
    "end": "419039"
  },
  {
    "text": "we're just reading a collection of items",
    "start": "419039",
    "end": "420360"
  },
  {
    "text": "but we don't know how many items are in",
    "start": "420360",
    "end": "422130"
  },
  {
    "text": "that collection after the read is",
    "start": "422130",
    "end": "423690"
  },
  {
    "text": "complete we'll call trace increment",
    "start": "423690",
    "end": "425370"
  },
  {
    "text": "metric and we'll set a metric as total",
    "start": "425370",
    "end": "427289"
  },
  {
    "text": "size that will keep track of the total",
    "start": "427289",
    "end": "428940"
  },
  {
    "text": "size of all reads that we perform in",
    "start": "428940",
    "end": "430470"
  },
  {
    "text": "this function but we can also create",
    "start": "430470",
    "end": "432570"
  },
  {
    "text": "another metric that's just based on the",
    "start": "432570",
    "end": "434430"
  },
  {
    "text": "size of the items collection only if we",
    "start": "434430",
    "end": "436470"
  },
  {
    "text": "want to do that we can call trace put",
    "start": "436470",
    "end": "438240"
  },
  {
    "text": "metric and this will add a metric to",
    "start": "438240",
    "end": "440490"
  },
  {
    "text": "this trace that doesn't really change",
    "start": "440490",
    "end": "441570"
  },
  {
    "text": "over the life cycle the trays so",
    "start": "441570",
    "end": "443880"
  },
  {
    "text": "increment metric is really useful when",
    "start": "443880",
    "end": "445350"
  },
  {
    "text": "you have data that might change like",
    "start": "445350",
    "end": "446850"
  },
  {
    "text": "incrementing the score on a game or",
    "start": "446850",
    "end": "448530"
  },
  {
    "text": "something like that",
    "start": "448530",
    "end": "449400"
  },
  {
    "text": "in our case here we'll read from another",
    "start": "449400",
    "end": "450720"
  },
  {
    "text": "collection called things and then this",
    "start": "450720",
    "end": "452580"
  },
  {
    "text": "time we'll use the total size of that",
    "start": "452580",
    "end": "454050"
  },
  {
    "text": "collection to increment our total size",
    "start": "454050",
    "end": "455970"
  },
  {
    "text": "metric so if there were 10 documents in",
    "start": "455970",
    "end": "458070"
  },
  {
    "text": "the first query and then 15 documents in",
    "start": "458070",
    "end": "460050"
  },
  {
    "text": "the second query our total value would",
    "start": "460050",
    "end": "461940"
  },
  {
    "text": "be 25 for this particular trace now I",
    "start": "461940",
    "end": "464699"
  },
  {
    "text": "like this code for an async function but",
    "start": "464699",
    "end": "466979"
  },
  {
    "text": "if this were an observable it means we",
    "start": "466979",
    "end": "468449"
  },
  {
    "text": "would have to pipe in the tap operator",
    "start": "468449",
    "end": "469979"
  },
  {
    "text": "all over the place to start and stop the",
    "start": "469979",
    "end": "471750"
  },
  {
    "text": "trace but thankfully James Daniels who's",
    "start": "471750",
    "end": "474000"
  },
  {
    "text": "the lead maintainer of angularfire has",
    "start": "474000",
    "end": "475919"
  },
  {
    "text": "put in some work to make this a lot",
    "start": "475919",
    "end": "477389"
  },
  {
    "text": "easier especially for angular rxjs",
    "start": "477389",
    "end": "479789"
  },
  {
    "text": "developers if you're working in angular",
    "start": "479789",
    "end": "481680"
  },
  {
    "text": "you're much more likely to be reading",
    "start": "481680",
    "end": "483030"
  },
  {
    "text": "collections in the context of an",
    "start": "483030",
    "end": "484590"
  },
  {
    "text": "observable your most basic use case",
    "start": "484590",
    "end": "486449"
  },
  {
    "text": "would just be to pipe in this",
    "start": "486449",
    "end": "487770"
  },
  {
    "text": "performance trace operator and then give",
    "start": "487770",
    "end": "489840"
  },
  {
    "text": "it a name and that will automatically",
    "start": "489840",
    "end": "491280"
  },
  {
    "text": "give you the latency of a collection",
    "start": "491280",
    "end": "492930"
  },
  {
    "text": "read you don't even need to call start",
    "start": "492930",
    "end": "494460"
  },
  {
    "text": "or stop because it automatically knows",
    "start": "494460",
    "end": "496080"
  },
  {
    "text": "to do that when you subscribe to the",
    "start": "496080",
    "end": "497550"
  },
  {
    "text": "observable in this case it will",
    "start": "497550",
    "end": "499590"
  },
  {
    "text": "automatically stop the trace when the",
    "start": "499590",
    "end": "501150"
  },
  {
    "text": "observable emits data but there's also",
    "start": "501150",
    "end": "502830"
  },
  {
    "text": "several more operators in there that",
    "start": "502830",
    "end": "504419"
  },
  {
    "text": "allow you to handle more advanced use",
    "start": "504419",
    "end": "505889"
  },
  {
    "text": "cases",
    "start": "505889",
    "end": "506430"
  },
  {
    "text": "my favorite is trace until this allows",
    "start": "506430",
    "end": "509250"
  },
  {
    "text": "you to set up a trace but only stop the",
    "start": "509250",
    "end": "511169"
  },
  {
    "text": "trace when a certain condition has been",
    "start": "511169",
    "end": "512669"
  },
  {
    "text": "met for example say you have a game",
    "start": "512669",
    "end": "514529"
  },
  {
    "text": "running and then you're making multiple",
    "start": "514529",
    "end": "516000"
  },
  {
    "text": "updates to that document based on the",
    "start": "516000",
    "end": "517560"
  },
  {
    "text": "state of the game once the GAMEOVER",
    "start": "517560",
    "end": "519150"
  },
  {
    "text": "property is set to true then it ends the",
    "start": "519150",
    "end": "520979"
  },
  {
    "text": "trace here and then there's also a third",
    "start": "520979",
    "end": "522839"
  },
  {
    "text": "option for trace options that allow you",
    "start": "522839",
    "end": "524550"
  },
  {
    "text": "to do things like set attributes and",
    "start": "524550",
    "end": "526050"
  },
  {
    "text": "metrics like we did before so overall",
    "start": "526050",
    "end": "528360"
  },
  {
    "text": "this is a very promising update for",
    "start": "528360",
    "end": "529860"
  },
  {
    "text": "angular fire but more importantly",
    "start": "529860",
    "end": "531570"
  },
  {
    "text": "firebase performance is pretty much a",
    "start": "531570",
    "end": "533190"
  },
  {
    "text": "no-brainer for every app",
    "start": "533190",
    "end": "534570"
  },
  {
    "text": "it's free easy to set up lightweight and",
    "start": "534570",
    "end": "537060"
  },
  {
    "text": "it will help you catch problems that you",
    "start": "537060",
    "end": "538440"
  },
  {
    "text": "didn't even know existed I'm gonna go",
    "start": "538440",
    "end": "540030"
  },
  {
    "text": "ahead and wrap things up there if this",
    "start": "540030",
    "end": "541350"
  },
  {
    "text": "video helped you please like and",
    "start": "541350",
    "end": "542550"
  },
  {
    "text": "subscribe and if you want even more",
    "start": "542550",
    "end": "543840"
  },
  {
    "text": "content consider becoming a pro member",
    "start": "543840",
    "end": "545910"
  },
  {
    "text": "at fire ship IO and don't forget to take",
    "start": "545910",
    "end": "548160"
  },
  {
    "text": "the quiz on the fire ship mobile app to",
    "start": "548160",
    "end": "549840"
  },
  {
    "text": "see if you learned anything thanks for",
    "start": "549840",
    "end": "551100"
  },
  {
    "text": "watching and I will talk to you soon",
    "start": "551100",
    "end": "554260"
  },
  {
    "text": "[Music]",
    "start": "554260",
    "end": "561580"
  }
]