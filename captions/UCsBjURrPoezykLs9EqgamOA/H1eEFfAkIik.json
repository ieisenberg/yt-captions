[
  {
    "text": "spelled kit a framework for building",
    "start": "60",
    "end": "2040"
  },
  {
    "text": "server-rendered web applications with",
    "start": "2040",
    "end": "3840"
  },
  {
    "text": "the world's most loved UI Library it was",
    "start": "3840",
    "end": "6000"
  },
  {
    "text": "created by the creator of spelled",
    "start": "6000",
    "end": "7379"
  },
  {
    "text": "himself Rich Harris and hit version 1.0",
    "start": "7379",
    "end": "9599"
  },
  {
    "text": "in 2022 most importantly it provides a",
    "start": "9599",
    "end": "12120"
  },
  {
    "text": "universal way to render svelte on",
    "start": "12120",
    "end": "13980"
  },
  {
    "text": "node.js and other JavaScript Edge",
    "start": "13980",
    "end": "15900"
  },
  {
    "text": "runtimes this allows the server to fetch",
    "start": "15900",
    "end": "18060"
  },
  {
    "text": "data up front so the browser can receive",
    "start": "18060",
    "end": "19920"
  },
  {
    "text": "fully rendered HTML which can be",
    "start": "19920",
    "end": "21840"
  },
  {
    "text": "critical for performance and SEO then",
    "start": "21840",
    "end": "23939"
  },
  {
    "text": "JavaScript takes over to render all",
    "start": "23939",
    "end": "25680"
  },
  {
    "text": "future Pages like a fast and smooth",
    "start": "25680",
    "end": "27599"
  },
  {
    "text": "single page application it provides a",
    "start": "27599",
    "end": "29580"
  },
  {
    "text": "built-in router where every page",
    "start": "29580",
    "end": "31019"
  },
  {
    "text": "component represents the UI for a unique",
    "start": "31019",
    "end": "33239"
  },
  {
    "text": "URL each component though can have a",
    "start": "33239",
    "end": "35100"
  },
  {
    "text": "corresponding Javascript file to handle",
    "start": "35100",
    "end": "37020"
  },
  {
    "text": "data fetching this file exports a load",
    "start": "37020",
    "end": "39120"
  },
  {
    "text": "function and the return value is made",
    "start": "39120",
    "end": "40680"
  },
  {
    "text": "available on the component while",
    "start": "40680",
    "end": "42059"
  },
  {
    "text": "providing automatic end-to-end type",
    "start": "42059",
    "end": "43800"
  },
  {
    "text": "safety in addition the data is made",
    "start": "43800",
    "end": "45360"
  },
  {
    "text": "available on a svelt store which can be",
    "start": "45360",
    "end": "47340"
  },
  {
    "text": "accessed from any component and",
    "start": "47340",
    "end": "48780"
  },
  {
    "text": "eliminates the need for complex State",
    "start": "48780",
    "end": "50399"
  },
  {
    "text": "Management architectures Pages can also",
    "start": "50399",
    "end": "52500"
  },
  {
    "text": "handle server-side actions like form",
    "start": "52500",
    "end": "54239"
  },
  {
    "text": "submissions to update the current page",
    "start": "54239",
    "end": "56219"
  },
  {
    "text": "with zero client-side JavaScript forms",
    "start": "56219",
    "end": "58440"
  },
  {
    "text": "can then be progressively enhanced to",
    "start": "58440",
    "end": "59760"
  },
  {
    "text": "improve of the front end user experience",
    "start": "59760",
    "end": "61500"
  },
  {
    "text": "with JavaScript in addition to Pages",
    "start": "61500",
    "end": "63480"
  },
  {
    "text": "layouts can be used to share UI across",
    "start": "63480",
    "end": "65880"
  },
  {
    "text": "multiple child routes and they can even",
    "start": "65880",
    "end": "67680"
  },
  {
    "text": "fetch their own data and finally we have",
    "start": "67680",
    "end": "69540"
  },
  {
    "text": "server files that export functions like",
    "start": "69540",
    "end": "71760"
  },
  {
    "text": "git post patch and delete to build",
    "start": "71760",
    "end": "73860"
  },
  {
    "text": "restful apis to get started create a new",
    "start": "73860",
    "end": "76260"
  },
  {
    "text": "project with a CLI you'll notice it uses",
    "start": "76260",
    "end": "78299"
  },
  {
    "text": "Veet as the build tool then we can",
    "start": "78299",
    "end": "79920"
  },
  {
    "text": "create our first page by going to the",
    "start": "79920",
    "end": "81479"
  },
  {
    "text": "routes directory right click and the",
    "start": "81479",
    "end": "83280"
  },
  {
    "text": "tooling will help you easily create the",
    "start": "83280",
    "end": "84840"
  },
  {
    "text": "required file I'm wrapping this URL in",
    "start": "84840",
    "end": "86820"
  },
  {
    "text": "Brackets to make it a dynamic route that",
    "start": "86820",
    "end": "88920"
  },
  {
    "text": "will give us a username parameter we can",
    "start": "88920",
    "end": "90840"
  },
  {
    "text": "access throughout the application notice",
    "start": "90840",
    "end": "92700"
  },
  {
    "text": "how the component has a prop of data",
    "start": "92700",
    "end": "94380"
  },
  {
    "text": "using the page data interface this",
    "start": "94380",
    "end": "96180"
  },
  {
    "text": "interface is automatically generated",
    "start": "96180",
    "end": "97680"
  },
  {
    "text": "based on how we load data from the",
    "start": "97680",
    "end": "99479"
  },
  {
    "text": "server in the application that data can",
    "start": "99479",
    "end": "101340"
  },
  {
    "text": "be loaded from a page.ts file inside the",
    "start": "101340",
    "end": "103860"
  },
  {
    "text": "load function we can access the URL",
    "start": "103860",
    "end": "105720"
  },
  {
    "text": "parameters like we might take the",
    "start": "105720",
    "end": "107159"
  },
  {
    "text": "username and make a fetch call to an API",
    "start": "107159",
    "end": "109439"
  },
  {
    "text": "once we have our data we just return it",
    "start": "109439",
    "end": "111240"
  },
  {
    "text": "from this function then we can access it",
    "start": "111240",
    "end": "112979"
  },
  {
    "text": "with full intellisense back in the UI",
    "start": "112979",
    "end": "114840"
  },
  {
    "text": "component the initial page load will be",
    "start": "114840",
    "end": "116520"
  },
  {
    "text": "rendered on the server and we can use",
    "start": "116520",
    "end": "117899"
  },
  {
    "text": "felt head to set a title in meta tags",
    "start": "117899",
    "end": "119759"
  },
  {
    "text": "for search Bots we might also want to",
    "start": "119759",
    "end": "121740"
  },
  {
    "text": "access this data on deeply nested shared",
    "start": "121740",
    "end": "124079"
  },
  {
    "text": "components defined in the lib directory",
    "start": "124079",
    "end": "125820"
  },
  {
    "text": "and instead of using techniques like",
    "start": "125820",
    "end": "127079"
  },
  {
    "text": "prop drilling we can easily access it on",
    "start": "127079",
    "end": "129239"
  },
  {
    "text": "the page data store the code we just",
    "start": "129239",
    "end": "130860"
  },
  {
    "text": "wrote is universal meaning it can run on",
    "start": "130860",
    "end": "132660"
  },
  {
    "text": "both the client and the server however",
    "start": "132660",
    "end": "134220"
  },
  {
    "text": "you can tell the framework to only run",
    "start": "134220",
    "end": "135780"
  },
  {
    "text": "code on the server using the server",
    "start": "135780",
    "end": "137580"
  },
  {
    "text": "extension in a server file you can",
    "start": "137580",
    "end": "139500"
  },
  {
    "text": "access things like databases and",
    "start": "139500",
    "end": "141239"
  },
  {
    "text": "environment variables that you wouldn't",
    "start": "141239",
    "end": "142800"
  },
  {
    "text": "want to expose client-side and Define",
    "start": "142800",
    "end": "144540"
  },
  {
    "text": "actions which are functions that run on",
    "start": "144540",
    "end": "146520"
  },
  {
    "text": "the server that can be tied directly to",
    "start": "146520",
    "end": "148319"
  },
  {
    "text": "form submissions and the front end code",
    "start": "148319",
    "end": "150060"
  },
  {
    "text": "you can mix and match different",
    "start": "150060",
    "end": "151200"
  },
  {
    "text": "rendering strategies like SSR ISR and",
    "start": "151200",
    "end": "154080"
  },
  {
    "text": "pre-rendering then use adapters to",
    "start": "154080",
    "end": "155879"
  },
  {
    "text": "deploy to any major platform this has",
    "start": "155879",
    "end": "157920"
  },
  {
    "text": "been spill kit in 100 seconds check out",
    "start": "157920",
    "end": "160200"
  },
  {
    "text": "my new full spell kit course if you want",
    "start": "160200",
    "end": "161819"
  },
  {
    "text": "to build a full project with it thanks",
    "start": "161819",
    "end": "163379"
  },
  {
    "text": "for watching and I will see you in the",
    "start": "163379",
    "end": "165060"
  },
  {
    "text": "next one",
    "start": "165060",
    "end": "167239"
  }
]