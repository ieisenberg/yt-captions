[
  {
    "text": "subscription payments are one of the",
    "start": "30",
    "end": "1709"
  },
  {
    "text": "most effective ways to monetize your",
    "start": "1709",
    "end": "3480"
  },
  {
    "text": "software in this episode we're going to",
    "start": "3480",
    "end": "5790"
  },
  {
    "text": "use the stripe payments API along with",
    "start": "5790",
    "end": "7950"
  },
  {
    "text": "angular firebase and cloud functions to",
    "start": "7950",
    "end": "10290"
  },
  {
    "text": "build a subscription model into an app",
    "start": "10290",
    "end": "12120"
  },
  {
    "text": "by the end of this video you'll be able",
    "start": "12120",
    "end": "13679"
  },
  {
    "text": "to accept credit cards through your",
    "start": "13679",
    "end": "15089"
  },
  {
    "text": "front-end angular app and then save",
    "start": "15089",
    "end": "16830"
  },
  {
    "text": "information about the subscription in",
    "start": "16830",
    "end": "18480"
  },
  {
    "text": "the firebase database and handle",
    "start": "18480",
    "end": "20550"
  },
  {
    "text": "recurring payments with stripe web hooks",
    "start": "20550",
    "end": "22680"
  },
  {
    "text": "I have to warn you that this video",
    "start": "22680",
    "end": "24539"
  },
  {
    "text": "covers a lot of code in a very short",
    "start": "24539",
    "end": "26010"
  },
  {
    "text": "amount of time so I recommend going to",
    "start": "26010",
    "end": "27539"
  },
  {
    "text": "angular firebase comm to follow along",
    "start": "27539",
    "end": "29580"
  },
  {
    "text": "with the source code and get additional",
    "start": "29580",
    "end": "31230"
  },
  {
    "text": "content related to stripe payments so",
    "start": "31230",
    "end": "33899"
  },
  {
    "text": "first things first you'll need to have a",
    "start": "33899",
    "end": "35280"
  },
  {
    "text": "stripe account which you can get at",
    "start": "35280",
    "end": "36780"
  },
  {
    "text": "stripe com then retrieve your test API",
    "start": "36780",
    "end": "40260"
  },
  {
    "text": "key and add it to your environment TS",
    "start": "40260",
    "end": "42899"
  },
  {
    "text": "file and angular then we're going to add",
    "start": "42899",
    "end": "45300"
  },
  {
    "text": "the stripe Checkout j/s library to the",
    "start": "45300",
    "end": "48020"
  },
  {
    "text": "index.html file it goes in the head tag",
    "start": "48020",
    "end": "50879"
  },
  {
    "text": "and it allows us to collect credit card",
    "start": "50879",
    "end": "52920"
  },
  {
    "text": "details then send them back to stripe",
    "start": "52920",
    "end": "54750"
  },
  {
    "text": "then the last thing we need to do is",
    "start": "54750",
    "end": "56699"
  },
  {
    "text": "tell typescript about stripe so we go to",
    "start": "56699",
    "end": "58710"
  },
  {
    "text": "the Taipings DTS file and then just",
    "start": "58710",
    "end": "61770"
  },
  {
    "text": "declare a variable called striped",
    "start": "61770",
    "end": "63239"
  },
  {
    "text": "checkout from here we'll initialize",
    "start": "63239",
    "end": "65430"
  },
  {
    "text": "cloud functions in our project using the",
    "start": "65430",
    "end": "67350"
  },
  {
    "text": "firebase CLI so we ran firebase and knit",
    "start": "67350",
    "end": "70350"
  },
  {
    "text": "functions from there we also need to set",
    "start": "70350",
    "end": "72570"
  },
  {
    "text": "our stripe test key in the functions",
    "start": "72570",
    "end": "74520"
  },
  {
    "text": "environment so we can do that by running",
    "start": "74520",
    "end": "76380"
  },
  {
    "text": "firebase functions config set stripe",
    "start": "76380",
    "end": "79530"
  },
  {
    "text": "test key with your test key in there",
    "start": "79530",
    "end": "81799"
  },
  {
    "text": "then we'll CD into the functions",
    "start": "81799",
    "end": "84000"
  },
  {
    "text": "directory and install the stripe NPM",
    "start": "84000",
    "end": "86880"
  },
  {
    "text": "package we do that with NPM installs",
    "start": "86880",
    "end": "89850"
  },
  {
    "text": "stripe save and this allows us to",
    "start": "89850",
    "end": "91979"
  },
  {
    "text": "communicate with the stripe API from our",
    "start": "91979",
    "end": "94049"
  },
  {
    "text": "node.js cloud functions environment ok",
    "start": "94049",
    "end": "96990"
  },
  {
    "text": "so that wraps up the initial setup now",
    "start": "96990",
    "end": "98729"
  },
  {
    "text": "we can actually start building this",
    "start": "98729",
    "end": "99990"
  },
  {
    "text": "subscription model before we can create",
    "start": "99990",
    "end": "102150"
  },
  {
    "text": "a subscription we need to create a",
    "start": "102150",
    "end": "103710"
  },
  {
    "text": "customer and stripe it's easiest if you",
    "start": "103710",
    "end": "106079"
  },
  {
    "text": "create that customer as soon as your",
    "start": "106079",
    "end": "107670"
  },
  {
    "text": "user signs up for your app so we're",
    "start": "107670",
    "end": "109979"
  },
  {
    "text": "going to create a cloud function that",
    "start": "109979",
    "end": "111240"
  },
  {
    "text": "runs as soon as a user signs up for the",
    "start": "111240",
    "end": "113430"
  },
  {
    "text": "first time and it's going to save the",
    "start": "113430",
    "end": "115680"
  },
  {
    "text": "stripe customer ID in this customers",
    "start": "115680",
    "end": "118170"
  },
  {
    "text": "node on the database the stripe customer",
    "start": "118170",
    "end": "120869"
  },
  {
    "text": "ID will be the key and the firebase user",
    "start": "120869",
    "end": "123390"
  },
  {
    "text": "ID will be the value this data structure",
    "start": "123390",
    "end": "125850"
  },
  {
    "text": "is going to come into play later when we",
    "start": "125850",
    "end": "127200"
  },
  {
    "text": "start using web hooks to handle",
    "start": "127200",
    "end": "128940"
  },
  {
    "text": "recurring payments and we're also going",
    "start": "128940",
    "end": "131129"
  },
  {
    "text": "to duplicate this data on the user",
    "start": "131129",
    "end": "133340"
  },
  {
    "text": "checked itself so you can see here under",
    "start": "133340",
    "end": "135379"
  },
  {
    "text": "the user ID we have the customer ID as",
    "start": "135379",
    "end": "137690"
  },
  {
    "text": "well if you're lost at this point make",
    "start": "137690",
    "end": "139970"
  },
  {
    "text": "sure to check out some of my videos",
    "start": "139970",
    "end": "140930"
  },
  {
    "text": "covering user authentication with",
    "start": "140930",
    "end": "142760"
  },
  {
    "text": "firebase now we're going to jump into",
    "start": "142760",
    "end": "145129"
  },
  {
    "text": "the functions index.js file and build",
    "start": "145129",
    "end": "148099"
  },
  {
    "text": "this first cloud function so first we're",
    "start": "148099",
    "end": "150709"
  },
  {
    "text": "going to initialize the function with",
    "start": "150709",
    "end": "152510"
  },
  {
    "text": "the admin database then we'll initialize",
    "start": "152510",
    "end": "155180"
  },
  {
    "text": "the stripe library with the API key that",
    "start": "155180",
    "end": "157549"
  },
  {
    "text": "we had configured in the environment",
    "start": "157549",
    "end": "159170"
  },
  {
    "text": "earlier then we're going to call this",
    "start": "159170",
    "end": "162110"
  },
  {
    "text": "function create striped customer and",
    "start": "162110",
    "end": "164209"
  },
  {
    "text": "it's going to run whenever a new user",
    "start": "164209",
    "end": "166370"
  },
  {
    "text": "signs up firebase has a built in auth",
    "start": "166370",
    "end": "169069"
  },
  {
    "text": "trigger called oncreate that will run",
    "start": "169069",
    "end": "171470"
  },
  {
    "text": "this function whenever a new user signs",
    "start": "171470",
    "end": "173090"
  },
  {
    "text": "up when it runs it's going to give us",
    "start": "173090",
    "end": "174769"
  },
  {
    "text": "access to this event variable which just",
    "start": "174769",
    "end": "176780"
  },
  {
    "text": "contains that user off data then we're",
    "start": "176780",
    "end": "179900"
  },
  {
    "text": "going to return a stripe promise by",
    "start": "179900",
    "end": "182120"
  },
  {
    "text": "calling stripe customers create and then",
    "start": "182120",
    "end": "185030"
  },
  {
    "text": "to create a customer all I have to do is",
    "start": "185030",
    "end": "186470"
  },
  {
    "text": "pass it an email address then once that",
    "start": "186470",
    "end": "189200"
  },
  {
    "text": "promise resolves with stripe it's going",
    "start": "189200",
    "end": "190940"
  },
  {
    "text": "to return a customer object and what we",
    "start": "190940",
    "end": "193970"
  },
  {
    "text": "want to do with this customer object is",
    "start": "193970",
    "end": "195500"
  },
  {
    "text": "save it in the firebase database but we",
    "start": "195500",
    "end": "198049"
  },
  {
    "text": "have two different locations to save it",
    "start": "198049",
    "end": "199519"
  },
  {
    "text": "at so we're going to create an updates",
    "start": "199519",
    "end": "201170"
  },
  {
    "text": "object here and first we're going to",
    "start": "201170",
    "end": "203569"
  },
  {
    "text": "save the user ID on the customers node",
    "start": "203569",
    "end": "205540"
  },
  {
    "text": "then we'll do the inverse of that by",
    "start": "205540",
    "end": "207920"
  },
  {
    "text": "saving that customer ID on the user's",
    "start": "207920",
    "end": "210139"
  },
  {
    "text": "node we structure the update like this",
    "start": "210139",
    "end": "212389"
  },
  {
    "text": "so it either succeeds or fails together",
    "start": "212389",
    "end": "214459"
  },
  {
    "text": "this is known as an atomic update or",
    "start": "214459",
    "end": "216950"
  },
  {
    "text": "fan-out in firebase so to make the",
    "start": "216950",
    "end": "219799"
  },
  {
    "text": "update we just reference the root",
    "start": "219799",
    "end": "221299"
  },
  {
    "text": "database and pass at this updates object",
    "start": "221299",
    "end": "223940"
  },
  {
    "text": "from here you can deploy the function",
    "start": "223940",
    "end": "226430"
  },
  {
    "text": "and then go test it out by signing up a",
    "start": "226430",
    "end": "229250"
  },
  {
    "text": "new user and you should see that",
    "start": "229250",
    "end": "230750"
  },
  {
    "text": "customers node and the user node be",
    "start": "230750",
    "end": "232459"
  },
  {
    "text": "updated with the corresponding data now",
    "start": "232459",
    "end": "235099"
  },
  {
    "text": "that we have that done I'm going to",
    "start": "235099",
    "end": "236480"
  },
  {
    "text": "create a service that will save the",
    "start": "236480",
    "end": "238400"
  },
  {
    "text": "payment token to firebase when the user",
    "start": "238400",
    "end": "240290"
  },
  {
    "text": "enters their credit card details so",
    "start": "240290",
    "end": "242959"
  },
  {
    "text": "first we're going to need the",
    "start": "242959",
    "end": "244040"
  },
  {
    "text": "angularfire database and angularfire",
    "start": "244040",
    "end": "246169"
  },
  {
    "text": "off services and then we're also going",
    "start": "246169",
    "end": "248180"
  },
  {
    "text": "to imports which map and do from rxjs",
    "start": "248180",
    "end": "250870"
  },
  {
    "text": "then I'm going to set a variable for the",
    "start": "250870",
    "end": "253190"
  },
  {
    "text": "current users ID and also a observable",
    "start": "253190",
    "end": "256910"
  },
  {
    "text": "of their membership status in the",
    "start": "256910",
    "end": "258530"
  },
  {
    "text": "database to get the membership status we",
    "start": "258530",
    "end": "261380"
  },
  {
    "text": "first need to call the angular fire off",
    "start": "261380",
    "end": "263510"
  },
  {
    "text": "State observable and then once we have",
    "start": "263510",
    "end": "265940"
  },
  {
    "text": "that we're just going to set the",
    "start": "265940",
    "end": "267320"
  },
  {
    "text": "user ID on the service itself and then",
    "start": "267320",
    "end": "270500"
  },
  {
    "text": "we'll call switch map and use the users",
    "start": "270500",
    "end": "273470"
  },
  {
    "text": "ID to retrieve their membership in the",
    "start": "273470",
    "end": "275660"
  },
  {
    "text": "database so we can do that by calling",
    "start": "275660",
    "end": "277700"
  },
  {
    "text": "object users user ID and then we're",
    "start": "277700",
    "end": "281630"
  },
  {
    "text": "going to save it under the pro",
    "start": "281630",
    "end": "283010"
  },
  {
    "text": "membership eventually the pro membership",
    "start": "283010",
    "end": "285200"
  },
  {
    "text": "node will have the current status of",
    "start": "285200",
    "end": "287180"
  },
  {
    "text": "their membership as well as the next",
    "start": "287180",
    "end": "288740"
  },
  {
    "text": "payment date when a user enters their",
    "start": "288740",
    "end": "292430"
  },
  {
    "text": "credit card details through striped",
    "start": "292430",
    "end": "293810"
  },
  {
    "text": "checkout it will send us back a payment",
    "start": "293810",
    "end": "296330"
  },
  {
    "text": "token we need to save this payment token",
    "start": "296330",
    "end": "298670"
  },
  {
    "text": "in the firebase database and then",
    "start": "298670",
    "end": "300740"
  },
  {
    "text": "trigger a cloud function whenever it's",
    "start": "300740",
    "end": "302300"
  },
  {
    "text": "updated so for now we'll just save it",
    "start": "302300",
    "end": "304280"
  },
  {
    "text": "directly under the pro membership under",
    "start": "304280",
    "end": "306650"
  },
  {
    "text": "that users ID okay now we can create a",
    "start": "306650",
    "end": "310340"
  },
  {
    "text": "component that will be responsible for",
    "start": "310340",
    "end": "311930"
  },
  {
    "text": "collecting the user's credit card",
    "start": "311930",
    "end": "313580"
  },
  {
    "text": "information first we will import the",
    "start": "313580",
    "end": "317270"
  },
  {
    "text": "payment service that we just created and",
    "start": "317270",
    "end": "319040"
  },
  {
    "text": "then we'll go ahead and import our",
    "start": "319040",
    "end": "320780"
  },
  {
    "text": "environment variables which have the",
    "start": "320780",
    "end": "322340"
  },
  {
    "text": "stripe API key then we'll create a",
    "start": "322340",
    "end": "324920"
  },
  {
    "text": "variable for that handler and inject the",
    "start": "324920",
    "end": "327680"
  },
  {
    "text": "payment service and the constructor and",
    "start": "327680",
    "end": "330190"
  },
  {
    "text": "we'll configure the handle ordering ng",
    "start": "330190",
    "end": "332690"
  },
  {
    "text": "on a net and we can do that by calling",
    "start": "332690",
    "end": "334730"
  },
  {
    "text": "stripe checkout configure then pass it",
    "start": "334730",
    "end": "338150"
  },
  {
    "text": "an object of different configuration",
    "start": "338150",
    "end": "340250"
  },
  {
    "text": "options the important thing is the key",
    "start": "340250",
    "end": "342560"
  },
  {
    "text": "which is the stripe API key then token",
    "start": "342560",
    "end": "345260"
  },
  {
    "text": "which takes a callback function after",
    "start": "345260",
    "end": "347210"
  },
  {
    "text": "stripe sends us the token back once we",
    "start": "347210",
    "end": "350030"
  },
  {
    "text": "have that token we can use our payment",
    "start": "350030",
    "end": "351770"
  },
  {
    "text": "service to save it to the firebase",
    "start": "351770",
    "end": "353210"
  },
  {
    "text": "database now that we have it configured",
    "start": "353210",
    "end": "356240"
  },
  {
    "text": "we just need an event handler that",
    "start": "356240",
    "end": "357980"
  },
  {
    "text": "allows the user to open it so we can",
    "start": "357980",
    "end": "360170"
  },
  {
    "text": "call this handler open and then pass a",
    "start": "360170",
    "end": "363200"
  },
  {
    "text": "few variables here which describe what",
    "start": "363200",
    "end": "365570"
  },
  {
    "text": "they're paying for in this case it's a",
    "start": "365570",
    "end": "367610"
  },
  {
    "text": "pro subscription and the amount is 1500",
    "start": "367610",
    "end": "370070"
  },
  {
    "text": "which translates to 15 u.s. dollars in",
    "start": "370070",
    "end": "372620"
  },
  {
    "text": "this case in the component HTML we can",
    "start": "372620",
    "end": "375590"
  },
  {
    "text": "reference the payment membership",
    "start": "375590",
    "end": "377510"
  },
  {
    "text": "observable and we'll set that as a",
    "start": "377510",
    "end": "379310"
  },
  {
    "text": "template variable called pro in this",
    "start": "379310",
    "end": "381050"
  },
  {
    "text": "case if the pro status is not active",
    "start": "381050",
    "end": "384230"
  },
  {
    "text": "then we want to go ahead and show the",
    "start": "384230",
    "end": "385670"
  },
  {
    "text": "payment button then when the user clicks",
    "start": "385670",
    "end": "388220"
  },
  {
    "text": "that button it will open the stripe",
    "start": "388220",
    "end": "389990"
  },
  {
    "text": "event handler and then what we're in",
    "start": "389990",
    "end": "392300"
  },
  {
    "text": "here will check and see if the user has",
    "start": "392300",
    "end": "393860"
  },
  {
    "text": "an active membership and if so we'll",
    "start": "393860",
    "end": "396170"
  },
  {
    "text": "just show a div here showing that the",
    "start": "396170",
    "end": "397640"
  },
  {
    "text": "subscription is active this is a very",
    "start": "397640",
    "end": "400010"
  },
  {
    "text": "simplistic approach",
    "start": "400010",
    "end": "400999"
  },
  {
    "text": "in the real world you probably want to",
    "start": "400999",
    "end": "402319"
  },
  {
    "text": "show a payment history as well as an",
    "start": "402319",
    "end": "403969"
  },
  {
    "text": "option to cancel and other little",
    "start": "403969",
    "end": "405799"
  },
  {
    "text": "convenience features like that",
    "start": "405799",
    "end": "407360"
  },
  {
    "text": "so now we'll enter some card details and",
    "start": "407360",
    "end": "409909"
  },
  {
    "text": "we're just using a test credit card from",
    "start": "409909",
    "end": "411709"
  },
  {
    "text": "stripe once the payment completes we",
    "start": "411709",
    "end": "414529"
  },
  {
    "text": "should see that token being saved here",
    "start": "414529",
    "end": "416539"
  },
  {
    "text": "under the pro membership under that",
    "start": "416539",
    "end": "418249"
  },
  {
    "text": "users account so it looks like that's",
    "start": "418249",
    "end": "420769"
  },
  {
    "text": "working fine now we just need a another",
    "start": "420769",
    "end": "422509"
  },
  {
    "text": "cloud function to build the subscription",
    "start": "422509",
    "end": "424489"
  },
  {
    "text": "once this event happens to do that go",
    "start": "424489",
    "end": "427339"
  },
  {
    "text": "over to your stripe account dashboard",
    "start": "427339",
    "end": "429139"
  },
  {
    "text": "and make sure you're viewing the test",
    "start": "429139",
    "end": "430759"
  },
  {
    "text": "data then go to subscriptions and plans",
    "start": "430759",
    "end": "433999"
  },
  {
    "text": "and we're just going to create it",
    "start": "433999",
    "end": "435769"
  },
  {
    "text": "manually although I should note you can",
    "start": "435769",
    "end": "437749"
  },
  {
    "text": "create these plans programmatically",
    "start": "437749",
    "end": "439159"
  },
  {
    "text": "which is especially useful if your users",
    "start": "439159",
    "end": "441289"
  },
  {
    "text": "can customize their own plans now we can",
    "start": "441289",
    "end": "443989"
  },
  {
    "text": "jump back to the index.js file and",
    "start": "443989",
    "end": "445969"
  },
  {
    "text": "create a cloud function that will add a",
    "start": "445969",
    "end": "447589"
  },
  {
    "text": "customer to this subscription plan the",
    "start": "447589",
    "end": "450529"
  },
  {
    "text": "function name will be create",
    "start": "450529",
    "end": "451789"
  },
  {
    "text": "subscription then we'll run the function",
    "start": "451789",
    "end": "454039"
  },
  {
    "text": "whenever the users user ID pro",
    "start": "454039",
    "end": "456829"
  },
  {
    "text": "membership token is updated so that will",
    "start": "456829",
    "end": "459499"
  },
  {
    "text": "happen when the user enters their card",
    "start": "459499",
    "end": "460969"
  },
  {
    "text": "detail and we want to build the",
    "start": "460969",
    "end": "462619"
  },
  {
    "text": "subscription and charge the customer",
    "start": "462619",
    "end": "464110"
  },
  {
    "text": "this is going to give us an event",
    "start": "464110",
    "end": "466399"
  },
  {
    "text": "variable which we can use to retrieve",
    "start": "466399",
    "end": "468709"
  },
  {
    "text": "the token value that we've already saved",
    "start": "468709",
    "end": "470239"
  },
  {
    "text": "to the database in this case we can get",
    "start": "470239",
    "end": "473209"
  },
  {
    "text": "the token value by calling event data",
    "start": "473209",
    "end": "475309"
  },
  {
    "text": "Val then we'll also save that user ID as",
    "start": "475309",
    "end": "479089"
  },
  {
    "text": "a variable here and we can throw an",
    "start": "479089",
    "end": "481429"
  },
  {
    "text": "error if any of this essential data is",
    "start": "481429",
    "end": "483319"
  },
  {
    "text": "missing okay the next step is to query",
    "start": "483319",
    "end": "486949"
  },
  {
    "text": "the admin database for the actual user",
    "start": "486949",
    "end": "489169"
  },
  {
    "text": "data so we reference users user ID pull",
    "start": "489169",
    "end": "492709"
  },
  {
    "text": "that value once and then have the",
    "start": "492709",
    "end": "494839"
  },
  {
    "text": "snapshot resolved into a promise and",
    "start": "494839",
    "end": "496669"
  },
  {
    "text": "once we have that data back from",
    "start": "496669",
    "end": "498469"
  },
  {
    "text": "firebase we can call stripe",
    "start": "498469",
    "end": "500059"
  },
  {
    "text": "subscriptions create which we need to",
    "start": "500059",
    "end": "502369"
  },
  {
    "text": "provide a stripe customer ID as well as",
    "start": "502369",
    "end": "504559"
  },
  {
    "text": "a source for the payment which in most",
    "start": "504559",
    "end": "506089"
  },
  {
    "text": "cases would be a credit card in our case",
    "start": "506089",
    "end": "508489"
  },
  {
    "text": "we saved the customer ID when the user",
    "start": "508489",
    "end": "510110"
  },
  {
    "text": "first signed up and we saved the credit",
    "start": "510110",
    "end": "512568"
  },
  {
    "text": "card token ID in the last step when you",
    "start": "512569",
    "end": "515360"
  },
  {
    "text": "create a subscription you have an array",
    "start": "515360",
    "end": "516979"
  },
  {
    "text": "of items so in our case we're just gonna",
    "start": "516979",
    "end": "518689"
  },
  {
    "text": "add the pro membership item but you",
    "start": "518689",
    "end": "520339"
  },
  {
    "text": "could also add like a setup fee or any",
    "start": "520339",
    "end": "522589"
  },
  {
    "text": "customized options you want here as well",
    "start": "522589",
    "end": "524420"
  },
  {
    "text": "this is going to return a promise and on",
    "start": "524420",
    "end": "527329"
  },
  {
    "text": "stripes end they're going to create a",
    "start": "527329",
    "end": "528889"
  },
  {
    "text": "subscription and also charge the",
    "start": "528889",
    "end": "530689"
  },
  {
    "text": "customer if the charge fails it will",
    "start": "530689",
    "end": "532819"
  },
  {
    "text": "raise an error",
    "start": "532819",
    "end": "534200"
  },
  {
    "text": "so once we get the subscription back we",
    "start": "534200",
    "end": "535880"
  },
  {
    "text": "can go ahead and reference the users pro",
    "start": "535880",
    "end": "537769"
  },
  {
    "text": "membership and firebase and then we'll",
    "start": "537769",
    "end": "540079"
  },
  {
    "text": "just go ahead and update it to active",
    "start": "540079",
    "end": "541519"
  },
  {
    "text": "but there's all kinds of additional data",
    "start": "541519",
    "end": "542990"
  },
  {
    "text": "you could save here if you wanted to and",
    "start": "542990",
    "end": "545110"
  },
  {
    "text": "the final step will be to catch any",
    "start": "545110",
    "end": "547700"
  },
  {
    "text": "errors and that should be it for our",
    "start": "547700",
    "end": "549889"
  },
  {
    "text": "subscription cloud function you can go",
    "start": "549889",
    "end": "552470"
  },
  {
    "text": "ahead and deploy it and then if you go",
    "start": "552470",
    "end": "553910"
  },
  {
    "text": "charge the card again you should see the",
    "start": "553910",
    "end": "555860"
  },
  {
    "text": "pro membership updated and then the",
    "start": "555860",
    "end": "557570"
  },
  {
    "text": "subscription turn to active so if we",
    "start": "557570",
    "end": "559730"
  },
  {
    "text": "look at the object it has a status of",
    "start": "559730",
    "end": "561199"
  },
  {
    "text": "active as well as our token that we",
    "start": "561199",
    "end": "562940"
  },
  {
    "text": "saved there before and we can also go",
    "start": "562940",
    "end": "565370"
  },
  {
    "text": "into stripe and we should be able to see",
    "start": "565370",
    "end": "567560"
  },
  {
    "text": "the subscription saved there as well so",
    "start": "567560",
    "end": "569360"
  },
  {
    "text": "going into the stripe dashboard we can",
    "start": "569360",
    "end": "571370"
  },
  {
    "text": "see this user is subscribed to the pro",
    "start": "571370",
    "end": "573170"
  },
  {
    "text": "membership and then we have a history of",
    "start": "573170",
    "end": "574940"
  },
  {
    "text": "their payments and any other activity",
    "start": "574940",
    "end": "577070"
  },
  {
    "text": "here as well so that's pretty cool but",
    "start": "577070",
    "end": "580399"
  },
  {
    "text": "there's still one more piece to the",
    "start": "580399",
    "end": "581870"
  },
  {
    "text": "puzzle that we still haven't solved and",
    "start": "581870",
    "end": "583459"
  },
  {
    "text": "that's handling recurring payments as",
    "start": "583459",
    "end": "585380"
  },
  {
    "text": "they happen asynchronously once a month",
    "start": "585380",
    "end": "587510"
  },
  {
    "text": "stripe uses web hooks as a way to send",
    "start": "587510",
    "end": "589910"
  },
  {
    "text": "data to your app so once a month they're",
    "start": "589910",
    "end": "592040"
  },
  {
    "text": "going to charge the users card and then",
    "start": "592040",
    "end": "594199"
  },
  {
    "text": "they'll send the data to a web hook that",
    "start": "594199",
    "end": "595910"
  },
  {
    "text": "you provide a web hook is just a URL",
    "start": "595910",
    "end": "598250"
  },
  {
    "text": "where you can receive the data and then",
    "start": "598250",
    "end": "599930"
  },
  {
    "text": "run some code and response to it we can",
    "start": "599930",
    "end": "602510"
  },
  {
    "text": "handle this with firebase HTTP cloud",
    "start": "602510",
    "end": "604579"
  },
  {
    "text": "functions the end result is going to",
    "start": "604579",
    "end": "606620"
  },
  {
    "text": "look like this we'll send a test payment",
    "start": "606620",
    "end": "608750"
  },
  {
    "text": "failed web hook and then it's going to",
    "start": "608750",
    "end": "610519"
  },
  {
    "text": "update the users pro membership to pass",
    "start": "610519",
    "end": "612800"
  },
  {
    "text": "too and then if we get a payment",
    "start": "612800",
    "end": "614870"
  },
  {
    "text": "succeeded web hook it updates it back to",
    "start": "614870",
    "end": "616730"
  },
  {
    "text": "active let's go back to index j/s and",
    "start": "616730",
    "end": "619550"
  },
  {
    "text": "create the cloud function that will",
    "start": "619550",
    "end": "620810"
  },
  {
    "text": "handle this logic let's give the",
    "start": "620810",
    "end": "623029"
  },
  {
    "text": "function a name of recurring payment and",
    "start": "623029",
    "end": "624949"
  },
  {
    "text": "we'll make it an HTTP function which is",
    "start": "624949",
    "end": "627890"
  },
  {
    "text": "going to return a request and a response",
    "start": "627890",
    "end": "630910"
  },
  {
    "text": "so first with the request we need to get",
    "start": "630910",
    "end": "633949"
  },
  {
    "text": "the request body type as well as the",
    "start": "633949",
    "end": "636529"
  },
  {
    "text": "request body data object and that's just",
    "start": "636529",
    "end": "639709"
  },
  {
    "text": "the data that is being sent to us from",
    "start": "639709",
    "end": "641569"
  },
  {
    "text": "stripe it has things like the customers",
    "start": "641569",
    "end": "643610"
  },
  {
    "text": "customer ID as well as the subscription",
    "start": "643610",
    "end": "646130"
  },
  {
    "text": "status and we'll go ahead and throw an",
    "start": "646130",
    "end": "648470"
  },
  {
    "text": "error if any of this data is missing",
    "start": "648470",
    "end": "650079"
  },
  {
    "text": "then stripe is not going to send us the",
    "start": "650079",
    "end": "653060"
  },
  {
    "text": "firebase user ID but it is going to send",
    "start": "653060",
    "end": "655370"
  },
  {
    "text": "us the stripe customer ID that's why we",
    "start": "655370",
    "end": "657680"
  },
  {
    "text": "saved it on its own customer node that",
    "start": "657680",
    "end": "659300"
  },
  {
    "text": "points to the firebase user ID so we can",
    "start": "659300",
    "end": "662180"
  },
  {
    "text": "reference that customer ID and then with",
    "start": "662180",
    "end": "665240"
  },
  {
    "text": "that data we can update",
    "start": "665240",
    "end": "666920"
  },
  {
    "text": "the data on the actual firebase user ID",
    "start": "666920",
    "end": "669549"
  },
  {
    "text": "so once we get the user ID we'll make a",
    "start": "669549",
    "end": "672079"
  },
  {
    "text": "reference to that point in the database",
    "start": "672079",
    "end": "673549"
  },
  {
    "text": "and there's two possible hooks here we",
    "start": "673549",
    "end": "675980"
  },
  {
    "text": "can either have a payment succeeded or a",
    "start": "675980",
    "end": "677839"
  },
  {
    "text": "payment failed so we'll just use a",
    "start": "677839",
    "end": "680119"
  },
  {
    "text": "conditional if statement and if the",
    "start": "680119",
    "end": "682759"
  },
  {
    "text": "invoice payment succeeded then we'll",
    "start": "682759",
    "end": "684439"
  },
  {
    "text": "just go ahead and update the status to",
    "start": "684439",
    "end": "686600"
  },
  {
    "text": "active and then likewise if the payments",
    "start": "686600",
    "end": "689689"
  },
  {
    "text": "failed then we'll go ahead and update",
    "start": "689689",
    "end": "690919"
  },
  {
    "text": "the status to past due this is a pretty",
    "start": "690919",
    "end": "693949"
  },
  {
    "text": "simplistic approach and stripe sends all",
    "start": "693949",
    "end": "695839"
  },
  {
    "text": "kinds of other web hooks that you can",
    "start": "695839",
    "end": "697249"
  },
  {
    "text": "listen for so check out the docs to see",
    "start": "697249",
    "end": "699290"
  },
  {
    "text": "the full customization options now the",
    "start": "699290",
    "end": "702259"
  },
  {
    "text": "last thing we need to do is send a",
    "start": "702259",
    "end": "704600"
  },
  {
    "text": "response back to stripe if we send a 200",
    "start": "704600",
    "end": "707359"
  },
  {
    "text": "response that means we received it and",
    "start": "707359",
    "end": "709100"
  },
  {
    "text": "we updated the database and everything",
    "start": "709100",
    "end": "710720"
  },
  {
    "text": "is good to go we can also send a 300 or",
    "start": "710720",
    "end": "713540"
  },
  {
    "text": "400 level response which stripe we'll",
    "start": "713540",
    "end": "715519"
  },
  {
    "text": "treat as an unsuccessful request and in",
    "start": "715519",
    "end": "718579"
  },
  {
    "text": "that case stripe will try to retry the",
    "start": "718579",
    "end": "720889"
  },
  {
    "text": "webhook a certain number of times you",
    "start": "720889",
    "end": "723259"
  },
  {
    "text": "can configure the retry attempts in the",
    "start": "723259",
    "end": "725149"
  },
  {
    "text": "stripe dashboard go ahead and deploy the",
    "start": "725149",
    "end": "727879"
  },
  {
    "text": "function but this time make note of the",
    "start": "727879",
    "end": "730009"
  },
  {
    "text": "URL that it returns from you for this",
    "start": "730009",
    "end": "731899"
  },
  {
    "text": "recurring payment function from the",
    "start": "731899",
    "end": "734239"
  },
  {
    "text": "stripe dashboard you'll want to go to",
    "start": "734239",
    "end": "735649"
  },
  {
    "text": "API and then web hooks and then add an",
    "start": "735649",
    "end": "738649"
  },
  {
    "text": "endpoint you can just copy and paste",
    "start": "738649",
    "end": "741169"
  },
  {
    "text": "this URL directly in the endpoint and",
    "start": "741169",
    "end": "742939"
  },
  {
    "text": "then we're gonna go down here and select",
    "start": "742939",
    "end": "744949"
  },
  {
    "text": "the invoice payment succeeded and",
    "start": "744949",
    "end": "747739"
  },
  {
    "text": "invoice payment failed options then",
    "start": "747739",
    "end": "750259"
  },
  {
    "text": "click Add endpoint and stripe will start",
    "start": "750259",
    "end": "752299"
  },
  {
    "text": "sending web hooks to that address now",
    "start": "752299",
    "end": "755149"
  },
  {
    "text": "when we start testing this web hook",
    "start": "755149",
    "end": "756589"
  },
  {
    "text": "stripes going to send it to a customer",
    "start": "756589",
    "end": "758540"
  },
  {
    "text": "with all zeros so we're gonna go in the",
    "start": "758540",
    "end": "760910"
  },
  {
    "text": "firebase database and just point that",
    "start": "760910",
    "end": "763069"
  },
  {
    "text": "test customer to our current user that",
    "start": "763069",
    "end": "765799"
  },
  {
    "text": "we're working with from here you can",
    "start": "765799",
    "end": "768589"
  },
  {
    "text": "click on test web hook from the stripe",
    "start": "768589",
    "end": "770629"
  },
  {
    "text": "dashboard and choose the type of request",
    "start": "770629",
    "end": "773629"
  },
  {
    "text": "you want to send so in this case we'll",
    "start": "773629",
    "end": "775879"
  },
  {
    "text": "first send a payment failed request and",
    "start": "775879",
    "end": "778519"
  },
  {
    "text": "you can see that changes the status to",
    "start": "778519",
    "end": "780709"
  },
  {
    "text": "past due and we can do the same thing",
    "start": "780709",
    "end": "783169"
  },
  {
    "text": "for payment succeeded and we should see",
    "start": "783169",
    "end": "785389"
  },
  {
    "text": "the status updated back to active if you",
    "start": "785389",
    "end": "789679"
  },
  {
    "text": "get any errors at this point it's always",
    "start": "789679",
    "end": "790939"
  },
  {
    "text": "a good idea to look at the firebase",
    "start": "790939",
    "end": "792529"
  },
  {
    "text": "function logs and you can see exactly",
    "start": "792529",
    "end": "794359"
  },
  {
    "text": "what kind of error is happening inside",
    "start": "794359",
    "end": "796699"
  },
  {
    "text": "your function",
    "start": "796699",
    "end": "798689"
  },
  {
    "text": "so that's just barely scratching the",
    "start": "798689",
    "end": "801009"
  },
  {
    "text": "surface of the possibilities of stripe",
    "start": "801009",
    "end": "802899"
  },
  {
    "text": "subscription payments if this video",
    "start": "802899",
    "end": "804970"
  },
  {
    "text": "helped you please like and subscribe and",
    "start": "804970",
    "end": "806739"
  },
  {
    "text": "if you want to talk about building your",
    "start": "806739",
    "end": "808179"
  },
  {
    "text": "own custom subscription system consider",
    "start": "808179",
    "end": "810369"
  },
  {
    "text": "becoming a pro member at angular",
    "start": "810369",
    "end": "812079"
  },
  {
    "text": "firebase com you'll get a free copy of",
    "start": "812079",
    "end": "814239"
  },
  {
    "text": "my book as well as one on one project",
    "start": "814239",
    "end": "815980"
  },
  {
    "text": "consulting thanks for watching and I'll",
    "start": "815980",
    "end": "818499"
  },
  {
    "text": "see you next time",
    "start": "818499",
    "end": "821189"
  },
  {
    "text": "[Music]",
    "start": "823190",
    "end": "827900"
  },
  {
    "text": "[Applause]",
    "start": "827900",
    "end": "828820"
  },
  {
    "text": "[Music]",
    "start": "828820",
    "end": "833309"
  }
]