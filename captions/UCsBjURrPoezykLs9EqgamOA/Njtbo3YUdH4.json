[
  {
    "text": "now that we know how to implement algo",
    "start": "30",
    "end": "1770"
  },
  {
    "text": "Lea's search on the front end we're",
    "start": "1770",
    "end": "3270"
  },
  {
    "text": "going to create a fire based cloud",
    "start": "3270",
    "end": "4920"
  },
  {
    "text": "function to build our own custom index",
    "start": "4920",
    "end": "7109"
  },
  {
    "text": "on the backend in this example we will",
    "start": "7109",
    "end": "9480"
  },
  {
    "text": "create an index of books from the Google",
    "start": "9480",
    "end": "11610"
  },
  {
    "text": "Books API anytime this book data changes",
    "start": "11610",
    "end": "14849"
  },
  {
    "text": "on the database it will automatically",
    "start": "14849",
    "end": "16770"
  },
  {
    "text": "invoke the function telling al Goliad to",
    "start": "16770",
    "end": "19170"
  },
  {
    "text": "update the index the first step is to",
    "start": "19170",
    "end": "21660"
  },
  {
    "text": "create a new index on the algo Lea",
    "start": "21660",
    "end": "23279"
  },
  {
    "text": "dashboard in this case we'll just call",
    "start": "23279",
    "end": "25109"
  },
  {
    "text": "it books currently the index is empty",
    "start": "25109",
    "end": "28170"
  },
  {
    "text": "but when we add new data to the firebase",
    "start": "28170",
    "end": "30269"
  },
  {
    "text": "database we want to see the index",
    "start": "30269",
    "end": "31830"
  },
  {
    "text": "updated with that new data so if we add",
    "start": "31830",
    "end": "34800"
  },
  {
    "text": "a new book to firebase then go back to",
    "start": "34800",
    "end": "36809"
  },
  {
    "text": "al Golia we should see that book in the",
    "start": "36809",
    "end": "38610"
  },
  {
    "text": "index now let's see how we make this",
    "start": "38610",
    "end": "41670"
  },
  {
    "text": "possible with firebase cloud functions",
    "start": "41670",
    "end": "43530"
  },
  {
    "text": "first initialize functions in your",
    "start": "43530",
    "end": "45360"
  },
  {
    "text": "project then CD into the functions",
    "start": "45360",
    "end": "47670"
  },
  {
    "text": "directory and install al kolya by",
    "start": "47670",
    "end": "50250"
  },
  {
    "text": "running NPM install al Golia search then",
    "start": "50250",
    "end": "53460"
  },
  {
    "text": "set your al Golia API keys in the",
    "start": "53460",
    "end": "55320"
  },
  {
    "text": "functions environment you want to make",
    "start": "55320",
    "end": "57510"
  },
  {
    "text": "sure to use the admin API key in the",
    "start": "57510",
    "end": "61140"
  },
  {
    "text": "index.js file we start by importing the",
    "start": "61140",
    "end": "63780"
  },
  {
    "text": "firebase admin and then initialize al",
    "start": "63780",
    "end": "66540"
  },
  {
    "text": "Golia search with the API keys that we",
    "start": "66540",
    "end": "68340"
  },
  {
    "text": "just said the name of the function will",
    "start": "68340",
    "end": "71400"
  },
  {
    "text": "be update index and it will run anytime",
    "start": "71400",
    "end": "74400"
  },
  {
    "text": "data is written to this node in the",
    "start": "74400",
    "end": "76200"
  },
  {
    "text": "database which is books slash book ID we",
    "start": "76200",
    "end": "79409"
  },
  {
    "text": "reference the index by calling and knit",
    "start": "79409",
    "end": "81270"
  },
  {
    "text": "index then pass the name we define in",
    "start": "81270",
    "end": "83310"
  },
  {
    "text": "the AL Golia dashboard then we set a",
    "start": "83310",
    "end": "85979"
  },
  {
    "text": "variable for the data in the firebase",
    "start": "85979",
    "end": "87659"
  },
  {
    "text": "database then we set the AL Golia object",
    "start": "87659",
    "end": "91079"
  },
  {
    "text": "ID to whatever the book ID happens to be",
    "start": "91079",
    "end": "93659"
  },
  {
    "text": "every record in your al Golia index is",
    "start": "93659",
    "end": "96479"
  },
  {
    "text": "required to have a unique object ID in",
    "start": "96479",
    "end": "98520"
  },
  {
    "text": "most cases you'd want to use the",
    "start": "98520",
    "end": "100259"
  },
  {
    "text": "firebase push key you can add new data",
    "start": "100259",
    "end": "102810"
  },
  {
    "text": "to the index by calling index dot save",
    "start": "102810",
    "end": "105060"
  },
  {
    "text": "object and then pass it that data object",
    "start": "105060",
    "end": "107490"
  },
  {
    "text": "then you have a callback from which you",
    "start": "107490",
    "end": "109680"
  },
  {
    "text": "can catch the error or in this case we",
    "start": "109680",
    "end": "111720"
  },
  {
    "text": "just console.log the success of the",
    "start": "111720",
    "end": "113460"
  },
  {
    "text": "update so far the function will only",
    "start": "113460",
    "end": "115649"
  },
  {
    "text": "work when data is created or updated so",
    "start": "115649",
    "end": "118560"
  },
  {
    "text": "we check to see if the data variable is",
    "start": "118560",
    "end": "120509"
  },
  {
    "text": "empty and if so we call the delete",
    "start": "120509",
    "end": "122909"
  },
  {
    "text": "object method instead after you deploy",
    "start": "122909",
    "end": "125759"
  },
  {
    "text": "the function you should see the cloud",
    "start": "125759",
    "end": "127590"
  },
  {
    "text": "function logs being updated each time a",
    "start": "127590",
    "end": "129629"
  },
  {
    "text": "new book is added or removed to the",
    "start": "129629",
    "end": "131280"
  },
  {
    "text": "database back in the angular front-end",
    "start": "131280",
    "end": "133950"
  },
  {
    "text": "the only thing we need to change is the",
    "start": "133950",
    "end": "135120"
  },
  {
    "text": "index name pointing it to the books",
    "start": "135120",
    "end": "137069"
  },
  {
    "text": "index going into the app we can test it",
    "start": "137069",
    "end": "140730"
  },
  {
    "text": "out and make sure that it filters the",
    "start": "140730",
    "end": "142620"
  },
  {
    "text": "books in our index that's it for full",
    "start": "142620",
    "end": "150060"
  },
  {
    "text": "text search with algo Leah if this video",
    "start": "150060",
    "end": "152310"
  },
  {
    "text": "helped you please like and subscribe and",
    "start": "152310",
    "end": "154110"
  },
  {
    "text": "if you want to support the channel",
    "start": "154110",
    "end": "155519"
  },
  {
    "text": "consider becoming a pro member at",
    "start": "155519",
    "end": "157290"
  },
  {
    "text": "angular firebase comm you'll receive",
    "start": "157290",
    "end": "159989"
  },
  {
    "text": "free one on one project consulting as",
    "start": "159989",
    "end": "162330"
  },
  {
    "text": "well as a copy of the angular firebase",
    "start": "162330",
    "end": "164819"
  },
  {
    "text": "Survival Guide thanks for watching and",
    "start": "164819",
    "end": "167370"
  },
  {
    "text": "I'll see you next time",
    "start": "167370",
    "end": "168260"
  },
  {
    "text": "[Music]",
    "start": "168260",
    "end": "177049"
  }
]