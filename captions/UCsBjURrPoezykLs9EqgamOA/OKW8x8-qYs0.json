[
  {
    "start": "0",
    "end": "43000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "6470"
  },
  {
    "text": "today we're going to build a cloud",
    "start": "6470",
    "end": "8250"
  },
  {
    "text": "function that's capable of resizing an",
    "start": "8250",
    "end": "10500"
  },
  {
    "text": "image into multiple thumbnails after its",
    "start": "10500",
    "end": "13019"
  },
  {
    "text": "initially uploaded this is one of the",
    "start": "13019",
    "end": "14880"
  },
  {
    "text": "most commonly needed features for a",
    "start": "14880",
    "end": "16410"
  },
  {
    "text": "cloud storage bucket but doing it",
    "start": "16410",
    "end": "18210"
  },
  {
    "text": "requires some pretty advanced no js'",
    "start": "18210",
    "end": "20010"
  },
  {
    "text": "code in today's video we'll build this",
    "start": "20010",
    "end": "22080"
  },
  {
    "text": "cloud function from scratch and do",
    "start": "22080",
    "end": "23789"
  },
  {
    "text": "everything we can to optimize",
    "start": "23789",
    "end": "25019"
  },
  {
    "text": "performance for the fastest possible",
    "start": "25019",
    "end": "26970"
  },
  {
    "text": "execution if you're new the channel like",
    "start": "26970",
    "end": "29279"
  },
  {
    "text": "and subscribe and if you want to get",
    "start": "29279",
    "end": "30869"
  },
  {
    "text": "really good at cloud functions consider",
    "start": "30869",
    "end": "32460"
  },
  {
    "text": "enrolling in my cloud functions master",
    "start": "32460",
    "end": "34469"
  },
  {
    "text": "course which was just released yesterday",
    "start": "34469",
    "end": "36200"
  },
  {
    "text": "the of course is free if you're already",
    "start": "36200",
    "end": "38430"
  },
  {
    "text": "a pro member but if not I'll go ahead",
    "start": "38430",
    "end": "40140"
  },
  {
    "text": "and leave a discount code in the video",
    "start": "40140",
    "end": "41790"
  },
  {
    "text": "description as well to get started I am",
    "start": "41790",
    "end": "44520"
  },
  {
    "start": "43000",
    "end": "137000"
  },
  {
    "text": "assuming that you have the firebase",
    "start": "44520",
    "end": "45719"
  },
  {
    "text": "command line tools installed then we can",
    "start": "45719",
    "end": "47700"
  },
  {
    "text": "run firebase and net functions in any",
    "start": "47700",
    "end": "49800"
  },
  {
    "text": "existing project I'm going to select",
    "start": "49800",
    "end": "52020"
  },
  {
    "text": "typescript here but you could also",
    "start": "52020",
    "end": "53699"
  },
  {
    "text": "select JavaScript but I would recommend",
    "start": "53699",
    "end": "55559"
  },
  {
    "text": "that you use the new node js8 runtime",
    "start": "55559",
    "end": "57960"
  },
  {
    "text": "because we'll be using a lot of",
    "start": "57960",
    "end": "59340"
  },
  {
    "text": "async/await syntax here and that's not",
    "start": "59340",
    "end": "62129"
  },
  {
    "text": "available in a default node 6 runtime",
    "start": "62129",
    "end": "64580"
  },
  {
    "text": "once that's done we can see the end of",
    "start": "64580",
    "end": "66869"
  },
  {
    "text": "the functions directory and then we have",
    "start": "66869",
    "end": "68729"
  },
  {
    "text": "a couple of dependencies to install here",
    "start": "68729",
    "end": "70650"
  },
  {
    "text": "the cloud functions environment by",
    "start": "70650",
    "end": "72780"
  },
  {
    "text": "default doesn't have tools set up for",
    "start": "72780",
    "end": "75030"
  },
  {
    "text": "you to download files from a storage",
    "start": "75030",
    "end": "77009"
  },
  {
    "text": "bucket but we can install the Google",
    "start": "77009",
    "end": "79290"
  },
  {
    "text": "Cloud Storage nodejs client to take care",
    "start": "79290",
    "end": "81869"
  },
  {
    "text": "of that for us when a storage cloud",
    "start": "81869",
    "end": "84570"
  },
  {
    "text": "function is triggered it doesn't give",
    "start": "84570",
    "end": "86310"
  },
  {
    "text": "you access directly to the file but",
    "start": "86310",
    "end": "88080"
  },
  {
    "text": "instead it just gives you some",
    "start": "88080",
    "end": "89159"
  },
  {
    "text": "information about the file that was",
    "start": "89159",
    "end": "90750"
  },
  {
    "text": "uploaded so we'll need the Google Cloud",
    "start": "90750",
    "end": "92850"
  },
  {
    "text": "Storage library to actually download it",
    "start": "92850",
    "end": "95009"
  },
  {
    "text": "and resize the image and then re-upload",
    "start": "95009",
    "end": "97170"
  },
  {
    "text": "those back to the bucket we're also",
    "start": "97170",
    "end": "100020"
  },
  {
    "text": "going to install a library called sharp",
    "start": "100020",
    "end": "102090"
  },
  {
    "text": "because it's four to five times faster",
    "start": "102090",
    "end": "104070"
  },
  {
    "text": "than the image magic library that's",
    "start": "104070",
    "end": "105930"
  },
  {
    "text": "installed in the cloud functions",
    "start": "105930",
    "end": "107490"
  },
  {
    "text": "environment and if you've ever used",
    "start": "107490",
    "end": "109200"
  },
  {
    "text": "image magic in a cloud function before",
    "start": "109200",
    "end": "111149"
  },
  {
    "text": "you'll know that it's pretty cumbersome",
    "start": "111149",
    "end": "112619"
  },
  {
    "text": "sharp is just way more",
    "start": "112619",
    "end": "113820"
  },
  {
    "text": "developer-friendly it's promise based",
    "start": "113820",
    "end": "115860"
  },
  {
    "text": "and we'll be able to do all of our",
    "start": "115860",
    "end": "117360"
  },
  {
    "text": "resizing with a single line of code",
    "start": "117360",
    "end": "119189"
  },
  {
    "text": "the last dependency I'll install is node",
    "start": "119189",
    "end": "121920"
  },
  {
    "text": "file system extra this is a promise",
    "start": "121920",
    "end": "124530"
  },
  {
    "text": "based version of the node file system",
    "start": "124530",
    "end": "126540"
  },
  {
    "text": "which tends to be much more easy to work",
    "start": "126540",
    "end": "128550"
  },
  {
    "text": "with in a cloud functions environment",
    "start": "128550",
    "end": "130170"
  },
  {
    "text": "let's go ahead and install that with NPM",
    "start": "130170",
    "end": "132330"
  },
  {
    "text": "then we'll have everything in place",
    "start": "132330",
    "end": "134069"
  },
  {
    "text": "we need to work with files in a",
    "start": "134069",
    "end": "135689"
  },
  {
    "text": "developer friendly way the goal of this",
    "start": "135689",
    "end": "138389"
  },
  {
    "start": "137000",
    "end": "188000"
  },
  {
    "text": "function is to listen for a file upload",
    "start": "138389",
    "end": "140879"
  },
  {
    "text": "to be finalized when that happens it",
    "start": "140879",
    "end": "143189"
  },
  {
    "text": "will take the source file resize it into",
    "start": "143189",
    "end": "145829"
  },
  {
    "text": "multiple different sizes that you can",
    "start": "145829",
    "end": "147599"
  },
  {
    "text": "specify and then re-upload them into",
    "start": "147599",
    "end": "150180"
  },
  {
    "text": "that same directory in the bucket one",
    "start": "150180",
    "end": "153180"
  },
  {
    "text": "thing that's really important to keep in",
    "start": "153180",
    "end": "154349"
  },
  {
    "text": "mind here is that when you have a",
    "start": "154349",
    "end": "155790"
  },
  {
    "text": "storage cloud function that gets",
    "start": "155790",
    "end": "157889"
  },
  {
    "text": "triggered on finalize that will get",
    "start": "157889",
    "end": "160169"
  },
  {
    "text": "triggered for every single file that",
    "start": "160169",
    "end": "161730"
  },
  {
    "text": "gets uploaded to this bucket including",
    "start": "161730",
    "end": "164069"
  },
  {
    "text": "the thumbnails that we upload from the",
    "start": "164069",
    "end": "165840"
  },
  {
    "text": "function itself that's really important",
    "start": "165840",
    "end": "168090"
  },
  {
    "text": "because we need to give our code a",
    "start": "168090",
    "end": "169230"
  },
  {
    "text": "certain exit point to know when to not",
    "start": "169230",
    "end": "171540"
  },
  {
    "text": "upload a file because otherwise we'll",
    "start": "171540",
    "end": "173519"
  },
  {
    "text": "end up in an infinite loop if you create",
    "start": "173519",
    "end": "175500"
  },
  {
    "text": "an infinite loop your bucket will end up",
    "start": "175500",
    "end": "177239"
  },
  {
    "text": "with thousands of new files uploaded to",
    "start": "177239",
    "end": "179189"
  },
  {
    "text": "it and it won't stop uploading until it",
    "start": "179189",
    "end": "181439"
  },
  {
    "text": "reaches the quota limits and if you",
    "start": "181439",
    "end": "183299"
  },
  {
    "text": "don't catch it early you might rack up",
    "start": "183299",
    "end": "184769"
  },
  {
    "text": "some unnecessary charges on your",
    "start": "184769",
    "end": "186480"
  },
  {
    "text": "firebase bill now we'll go ahead and",
    "start": "186480",
    "end": "188939"
  },
  {
    "start": "188000",
    "end": "521000"
  },
  {
    "text": "jump into the code and just to warn you",
    "start": "188939",
    "end": "190980"
  },
  {
    "text": "the most complicated thing about this",
    "start": "190980",
    "end": "192540"
  },
  {
    "text": "function is keeping track of the",
    "start": "192540",
    "end": "194010"
  },
  {
    "text": "different file paths between the local",
    "start": "194010",
    "end": "196049"
  },
  {
    "text": "functions file system and the storage",
    "start": "196049",
    "end": "198359"
  },
  {
    "text": "bucket",
    "start": "198359",
    "end": "198810"
  },
  {
    "text": "first we'll instantiate the storage",
    "start": "198810",
    "end": "201329"
  },
  {
    "text": "client which we'll use to download and",
    "start": "201329",
    "end": "203220"
  },
  {
    "text": "upload files then every cloud function",
    "start": "203220",
    "end": "205739"
  },
  {
    "text": "has a temporary directory that you can",
    "start": "205739",
    "end": "207479"
  },
  {
    "text": "write files to the way you access it is",
    "start": "207479",
    "end": "210000"
  },
  {
    "text": "with this temp dir method from node and",
    "start": "210000",
    "end": "212370"
  },
  {
    "text": "then we'll also import a couple of",
    "start": "212370",
    "end": "214199"
  },
  {
    "text": "helpers from node join allows us to join",
    "start": "214199",
    "end": "216870"
  },
  {
    "text": "paths together and directory name allows",
    "start": "216870",
    "end": "219540"
  },
  {
    "text": "us to get the directory from a file name",
    "start": "219540",
    "end": "221669"
  },
  {
    "text": "and lastly we'll bring in sharp and FS",
    "start": "221669",
    "end": "224879"
  },
  {
    "text": "extra that we installed earlier we can",
    "start": "224879",
    "end": "227430"
  },
  {
    "text": "give the cloud function a name of",
    "start": "227430",
    "end": "228989"
  },
  {
    "text": "generate thumbs and we'll have it run on",
    "start": "228989",
    "end": "231449"
  },
  {
    "text": "the on finalize event on the storage",
    "start": "231449",
    "end": "233879"
  },
  {
    "text": "bucket which just means that a file was",
    "start": "233879",
    "end": "236189"
  },
  {
    "text": "fully uploaded somewhere in the bucket",
    "start": "236189",
    "end": "237989"
  },
  {
    "text": "we'll be awaiting a whole bunch of",
    "start": "237989",
    "end": "240000"
  },
  {
    "text": "different promises in this function so",
    "start": "240000",
    "end": "241680"
  },
  {
    "text": "we'll make the callback on the function",
    "start": "241680",
    "end": "243719"
  },
  {
    "text": "itself an async function we need to tell",
    "start": "243719",
    "end": "246359"
  },
  {
    "text": "the Cloud Storage client which bucket to",
    "start": "246359",
    "end": "248759"
  },
  {
    "text": "use to upload and download files which",
    "start": "248759",
    "end": "250799"
  },
  {
    "text": "we can just get from the object that",
    "start": "250799",
    "end": "252599"
  },
  {
    "text": "triggered this function then we have a",
    "start": "252599",
    "end": "254639"
  },
  {
    "text": "handful of different variables that we",
    "start": "254639",
    "end": "256530"
  },
  {
    "text": "need to define here just to keep track",
    "start": "256530",
    "end": "258120"
  },
  {
    "text": "of the paths in the storage bucket and",
    "start": "258120",
    "end": "260459"
  },
  {
    "text": "in the local system we can get the full",
    "start": "260459",
    "end": "262919"
  },
  {
    "text": "path to the file in the bucket by",
    "start": "262919",
    "end": "264840"
  },
  {
    "text": "calling object name",
    "start": "264840",
    "end": "266610"
  },
  {
    "text": "then we'll make a reference to that file",
    "start": "266610",
    "end": "268650"
  },
  {
    "text": "name as well and we'll also want to make",
    "start": "268650",
    "end": "270840"
  },
  {
    "text": "reference to the directory that this",
    "start": "270840",
    "end": "272849"
  },
  {
    "text": "file came from because that's eventually",
    "start": "272849",
    "end": "274439"
  },
  {
    "text": "where we're going to upload our",
    "start": "274439",
    "end": "276360"
  },
  {
    "text": "thumbnails to now we need to download",
    "start": "276360",
    "end": "279150"
  },
  {
    "text": "the source file to a working directory",
    "start": "279150",
    "end": "281729"
  },
  {
    "text": "and then we'll also need to save our",
    "start": "281729",
    "end": "283710"
  },
  {
    "text": "thumbnails in a working directory",
    "start": "283710",
    "end": "285060"
  },
  {
    "text": "temporarily as well so what I'm going to",
    "start": "285060",
    "end": "287669"
  },
  {
    "text": "do is create a new directory in a",
    "start": "287669",
    "end": "289259"
  },
  {
    "text": "temporary directory called thumbs",
    "start": "289259",
    "end": "290729"
  },
  {
    "text": "because we'll eventually want to delete",
    "start": "290729",
    "end": "292650"
  },
  {
    "text": "this once we exit the function just to",
    "start": "292650",
    "end": "294389"
  },
  {
    "text": "clean everything up and lastly I'll",
    "start": "294389",
    "end": "296789"
  },
  {
    "text": "define a path for where we're going to",
    "start": "296789",
    "end": "298650"
  },
  {
    "text": "download the source image which I'll",
    "start": "298650",
    "end": "300389"
  },
  {
    "text": "just call source dot PNG at this point",
    "start": "300389",
    "end": "303360"
  },
  {
    "text": "we need to set up our break point to",
    "start": "303360",
    "end": "304919"
  },
  {
    "text": "avoid causing an infinite loop the",
    "start": "304919",
    "end": "306990"
  },
  {
    "text": "concept is exactly the same as a",
    "start": "306990",
    "end": "308639"
  },
  {
    "text": "recursive function and programming",
    "start": "308639",
    "end": "310740"
  },
  {
    "text": "fundamentals we want to exit from this",
    "start": "310740",
    "end": "313259"
  },
  {
    "text": "function early if it's been triggered by",
    "start": "313259",
    "end": "315270"
  },
  {
    "text": "an image that's already been resized and",
    "start": "315270",
    "end": "317370"
  },
  {
    "text": "we'll figure that out by using this",
    "start": "317370",
    "end": "319259"
  },
  {
    "text": "thumb at keyword if that string is",
    "start": "319259",
    "end": "321569"
  },
  {
    "text": "present in the file name then we just",
    "start": "321569",
    "end": "323099"
  },
  {
    "text": "want to exit because we know that it's",
    "start": "323099",
    "end": "324840"
  },
  {
    "text": "already been resized and at this point",
    "start": "324840",
    "end": "327240"
  },
  {
    "text": "we can also check if the content type is",
    "start": "327240",
    "end": "329219"
  },
  {
    "text": "not an image in that case we'll also",
    "start": "329219",
    "end": "331409"
  },
  {
    "text": "want to exit early you can exit from a",
    "start": "331409",
    "end": "334139"
  },
  {
    "text": "function by just returning false and",
    "start": "334139",
    "end": "335789"
  },
  {
    "text": "that will prevent the execution of any",
    "start": "335789",
    "end": "337919"
  },
  {
    "text": "code that comes after it now that we",
    "start": "337919",
    "end": "340139"
  },
  {
    "text": "have the initial setup done we just have",
    "start": "340139",
    "end": "341789"
  },
  {
    "text": "a series of steps to go through that are",
    "start": "341789",
    "end": "343620"
  },
  {
    "text": "pretty straightforward if you look at",
    "start": "343620",
    "end": "344879"
  },
  {
    "text": "them step by step the first one is we",
    "start": "344879",
    "end": "347490"
  },
  {
    "text": "need to make sure that our working",
    "start": "347490",
    "end": "348900"
  },
  {
    "text": "directory exists otherwise we'll get an",
    "start": "348900",
    "end": "351479"
  },
  {
    "text": "error if we try to use it and we can do",
    "start": "351479",
    "end": "353279"
  },
  {
    "text": "that with FS ensure directory with our",
    "start": "353279",
    "end": "355620"
  },
  {
    "text": "directory path now that we know the",
    "start": "355620",
    "end": "357599"
  },
  {
    "text": "directory exists we'll go ahead and",
    "start": "357599",
    "end": "359099"
  },
  {
    "text": "download the source file to that working",
    "start": "359099",
    "end": "361050"
  },
  {
    "text": "directory which we'll do with the GCSE",
    "start": "361050",
    "end": "363449"
  },
  {
    "text": "library we can await the bucket file to",
    "start": "363449",
    "end": "367259"
  },
  {
    "text": "be downloaded to the path that we",
    "start": "367259",
    "end": "369360"
  },
  {
    "text": "defined in that working directory after",
    "start": "369360",
    "end": "372000"
  },
  {
    "text": "the file is downloaded the third step is",
    "start": "372000",
    "end": "374250"
  },
  {
    "text": "to resize it to the thumbnail sizes that",
    "start": "374250",
    "end": "376710"
  },
  {
    "text": "we want and then we'll want to set up an",
    "start": "376710",
    "end": "378599"
  },
  {
    "text": "array of promises that represent the",
    "start": "378599",
    "end": "380699"
  },
  {
    "text": "upload operations for each one of those",
    "start": "380699",
    "end": "382919"
  },
  {
    "text": "thumbnails there are different ways you",
    "start": "382919",
    "end": "385830"
  },
  {
    "text": "can do this but what I'm going to do is",
    "start": "385830",
    "end": "387479"
  },
  {
    "text": "set up an array of different thumbnail",
    "start": "387479",
    "end": "389610"
  },
  {
    "text": "sizes then I'll map that array to an",
    "start": "389610",
    "end": "392189"
  },
  {
    "text": "array of promises where each promise is",
    "start": "392189",
    "end": "394680"
  },
  {
    "text": "an upload operation back to the bucket",
    "start": "394680",
    "end": "396810"
  },
  {
    "text": "we can run those promises concurrently",
    "start": "396810",
    "end": "399209"
  },
  {
    "text": "which should improve",
    "start": "399209",
    "end": "400230"
  },
  {
    "text": "performance especially if you have a lot",
    "start": "400230",
    "end": "402150"
  },
  {
    "text": "of different thumbnail sizes each",
    "start": "402150",
    "end": "404640"
  },
  {
    "text": "thumbnail will have that thumb at",
    "start": "404640",
    "end": "406230"
  },
  {
    "text": "keyword followed by its size and in the",
    "start": "406230",
    "end": "408780"
  },
  {
    "text": "original file name then will define the",
    "start": "408780",
    "end": "411840"
  },
  {
    "text": "full path to the working directory where",
    "start": "411840",
    "end": "413730"
  },
  {
    "text": "we'll save that file when you call nap",
    "start": "413730",
    "end": "416430"
  },
  {
    "text": "on an array it's just looping over its",
    "start": "416430",
    "end": "418380"
  },
  {
    "text": "values so what we'll do here is await",
    "start": "418380",
    "end": "420840"
  },
  {
    "text": "the Sharpe library to resize the image",
    "start": "420840",
    "end": "423120"
  },
  {
    "text": "and save it to the local file system",
    "start": "423120",
    "end": "425300"
  },
  {
    "text": "which we do by just passing it the",
    "start": "425300",
    "end": "427350"
  },
  {
    "text": "original source image call resize with",
    "start": "427350",
    "end": "429900"
  },
  {
    "text": "the size we want it to be and you can",
    "start": "429900",
    "end": "431880"
  },
  {
    "text": "also call a whole bunch of different",
    "start": "431880",
    "end": "432930"
  },
  {
    "text": "other methods here in sharp resizing",
    "start": "432930",
    "end": "435390"
  },
  {
    "text": "like this we'll crop the image from the",
    "start": "435390",
    "end": "437100"
  },
  {
    "text": "center and size it to these dimensions",
    "start": "437100",
    "end": "439160"
  },
  {
    "text": "then we say to file with the thumbnail",
    "start": "439160",
    "end": "441990"
  },
  {
    "text": "path and then the last thing we'll do in",
    "start": "441990",
    "end": "445140"
  },
  {
    "text": "this map operation is return the bucket",
    "start": "445140",
    "end": "447570"
  },
  {
    "text": "upload with this newly saved file then",
    "start": "447570",
    "end": "451410"
  },
  {
    "text": "we'll set the destination to the",
    "start": "451410",
    "end": "452730"
  },
  {
    "text": "original files destination with this new",
    "start": "452730",
    "end": "455250"
  },
  {
    "text": "file name so that gives us an array of",
    "start": "455250",
    "end": "458310"
  },
  {
    "text": "promises now the only thing we have to",
    "start": "458310",
    "end": "460380"
  },
  {
    "text": "do is run them which we can do by saying",
    "start": "460380",
    "end": "462690"
  },
  {
    "text": "a weight promise all with these upload",
    "start": "462690",
    "end": "465720"
  },
  {
    "text": "promises that will run the uploads",
    "start": "465720",
    "end": "468150"
  },
  {
    "text": "concurrently and then once that's",
    "start": "468150",
    "end": "469920"
  },
  {
    "text": "complete the last step is to just delete",
    "start": "469920",
    "end": "472500"
  },
  {
    "text": "these files from the file system since",
    "start": "472500",
    "end": "474090"
  },
  {
    "text": "they're no longer needed",
    "start": "474090",
    "end": "475200"
  },
  {
    "text": "so as the fifth and final step we'll go",
    "start": "475200",
    "end": "478050"
  },
  {
    "text": "ahead and return from the function with",
    "start": "478050",
    "end": "480120"
  },
  {
    "text": "FS removed the working directory now",
    "start": "480120",
    "end": "483420"
  },
  {
    "text": "let's go ahead and deploy the function",
    "start": "483420",
    "end": "484800"
  },
  {
    "text": "so we can test it out now any files that",
    "start": "484800",
    "end": "487290"
  },
  {
    "text": "get uploaded to storage will",
    "start": "487290",
    "end": "488940"
  },
  {
    "text": "automatically get a series of thumbnails",
    "start": "488940",
    "end": "490770"
  },
  {
    "text": "generated for them and the performance",
    "start": "490770",
    "end": "493410"
  },
  {
    "text": "should be pretty solid in most cases",
    "start": "493410",
    "end": "495090"
  },
  {
    "text": "I've seen latency of about one or two",
    "start": "495090",
    "end": "496710"
  },
  {
    "text": "seconds but performance really depends",
    "start": "496710",
    "end": "498990"
  },
  {
    "text": "on the size of the file that was",
    "start": "498990",
    "end": "500010"
  },
  {
    "text": "uploaded and also the number of",
    "start": "500010",
    "end": "501870"
  },
  {
    "text": "thumbnails that you're generating I'm",
    "start": "501870",
    "end": "504150"
  },
  {
    "text": "gonna go ahead and wrap things up there",
    "start": "504150",
    "end": "505440"
  },
  {
    "text": "if this video helped you please like and",
    "start": "505440",
    "end": "507240"
  },
  {
    "text": "subscribe and don't forget to check out",
    "start": "507240",
    "end": "509340"
  },
  {
    "text": "the cloud functions master course I'd",
    "start": "509340",
    "end": "511320"
  },
  {
    "text": "love to get your feedback and hear",
    "start": "511320",
    "end": "512969"
  },
  {
    "text": "additional cloud functions topics that",
    "start": "512970",
    "end": "514710"
  },
  {
    "text": "you'd like to see covered in the future",
    "start": "514710",
    "end": "516090"
  },
  {
    "text": "thanks for watching and I'll talk to you",
    "start": "516090",
    "end": "518550"
  },
  {
    "text": "soon",
    "start": "518550",
    "end": "520700"
  }
]