[
  {
    "text": "[Music]",
    "start": "0",
    "end": "4670"
  },
  {
    "text": "one design flaw that I see in a lot of",
    "start": "5899",
    "end": "8099"
  },
  {
    "text": "apps is having a delete button with no",
    "start": "8099",
    "end": "10110"
  },
  {
    "text": "option to undo or to confirm the",
    "start": "10110",
    "end": "12210"
  },
  {
    "text": "deletion first you could implement an",
    "start": "12210",
    "end": "14429"
  },
  {
    "text": "undo button but then you have some",
    "start": "14429",
    "end": "15929"
  },
  {
    "text": "complex state management issues to worry",
    "start": "15929",
    "end": "17580"
  },
  {
    "text": "about or you could trigger an alert",
    "start": "17580",
    "end": "19350"
  },
  {
    "text": "message but that's kind of annoying for",
    "start": "19350",
    "end": "21090"
  },
  {
    "text": "your users what I want to show you today",
    "start": "21090",
    "end": "22830"
  },
  {
    "text": "is how to build a hold to delete button",
    "start": "22830",
    "end": "24720"
  },
  {
    "text": "which i think is a refreshing take on",
    "start": "24720",
    "end": "26430"
  },
  {
    "text": "how to prevent accidental deletion and",
    "start": "26430",
    "end": "28680"
  },
  {
    "text": "it's a great exercise for learning how",
    "start": "28680",
    "end": "30210"
  },
  {
    "text": "to work with rxjs and angular directives",
    "start": "30210",
    "end": "32790"
  },
  {
    "text": "if you're new to the channel I can",
    "start": "32790",
    "end": "34290"
  },
  {
    "text": "subscribe and you can find the full",
    "start": "34290",
    "end": "35820"
  },
  {
    "text": "source code on angular firebase comm the",
    "start": "35820",
    "end": "38640"
  },
  {
    "text": "inspiration for this video comes from",
    "start": "38640",
    "end": "40110"
  },
  {
    "text": "Josh on our slack team who asked for a",
    "start": "40110",
    "end": "42270"
  },
  {
    "text": "more elegant way to handle deletions",
    "start": "42270",
    "end": "44280"
  },
  {
    "text": "than just showing a standard bootstrap",
    "start": "44280",
    "end": "46170"
  },
  {
    "text": "confirm modal I'm definitely not the",
    "start": "46170",
    "end": "48030"
  },
  {
    "text": "first person to come up with this idea",
    "start": "48030",
    "end": "49379"
  },
  {
    "text": "there's a number of apps that have",
    "start": "49379",
    "end": "50850"
  },
  {
    "text": "started using this functionality instead",
    "start": "50850",
    "end": "52860"
  },
  {
    "text": "of alert messages or undo buttons and",
    "start": "52860",
    "end": "54989"
  },
  {
    "text": "the idea is pretty simple we have a",
    "start": "54989",
    "end": "56940"
  },
  {
    "text": "regular delete button but the user needs",
    "start": "56940",
    "end": "58800"
  },
  {
    "text": "to hold it for a certain amount of time",
    "start": "58800",
    "end": "60390"
  },
  {
    "text": "before the actual deletion is executed",
    "start": "60390",
    "end": "62699"
  },
  {
    "text": "the way this works is we have an angular",
    "start": "62699",
    "end": "64830"
  },
  {
    "text": "directive that can attach itself to any",
    "start": "64830",
    "end": "66990"
  },
  {
    "text": "Dom element or other component then",
    "start": "66990",
    "end": "69090"
  },
  {
    "text": "track the time difference between the",
    "start": "69090",
    "end": "70680"
  },
  {
    "text": "mousedown event and the mouse up event",
    "start": "70680",
    "end": "72869"
  },
  {
    "text": "then we can emit a custom event every",
    "start": "72869",
    "end": "75119"
  },
  {
    "text": "tenth of a second so we can update our",
    "start": "75119",
    "end": "76740"
  },
  {
    "text": "progress bar while the user is holding",
    "start": "76740",
    "end": "78750"
  },
  {
    "text": "the button down I'm just in a regular",
    "start": "78750",
    "end": "80700"
  },
  {
    "text": "angular app and I have angular fire",
    "start": "80700",
    "end": "82619"
  },
  {
    "text": "installed just so we have something",
    "start": "82619",
    "end": "83909"
  },
  {
    "text": "meaningful to delete in an actual",
    "start": "83909",
    "end": "85650"
  },
  {
    "text": "database but this lesson is primarily",
    "start": "85650",
    "end": "87509"
  },
  {
    "text": "focused on rxjs and angular the first",
    "start": "87509",
    "end": "90540"
  },
  {
    "text": "thing we'll do is generate our directive",
    "start": "90540",
    "end": "91860"
  },
  {
    "text": "by running ng generate directive",
    "start": "91860",
    "end": "93869"
  },
  {
    "text": "holdable from the command line we'll be",
    "start": "93869",
    "end": "96450"
  },
  {
    "text": "able to attach this directive to a",
    "start": "96450",
    "end": "97920"
  },
  {
    "text": "button and then keep track of gits",
    "start": "97920",
    "end": "99630"
  },
  {
    "text": "internal state and then emit events up",
    "start": "99630",
    "end": "101460"
  },
  {
    "text": "to the parent component to do that will",
    "start": "101460",
    "end": "103500"
  },
  {
    "text": "import host listener event emitter and",
    "start": "103500",
    "end": "105630"
  },
  {
    "text": "output from angular core we'll also",
    "start": "105630",
    "end": "108360"
  },
  {
    "text": "bring in a few things from rxjs that",
    "start": "108360",
    "end": "110280"
  },
  {
    "text": "we'll see here in a minute the first",
    "start": "110280",
    "end": "112079"
  },
  {
    "text": "thing we'll do is set up a custom event",
    "start": "112079",
    "end": "113640"
  },
  {
    "text": "and this is the data that we want to",
    "start": "113640",
    "end": "115590"
  },
  {
    "text": "emit up to the parent component this",
    "start": "115590",
    "end": "118170"
  },
  {
    "text": "event will emit the number of",
    "start": "118170",
    "end": "119640"
  },
  {
    "text": "milliseconds that a user has held the",
    "start": "119640",
    "end": "121500"
  },
  {
    "text": "button down so that allows the parent",
    "start": "121500",
    "end": "123630"
  },
  {
    "text": "component to decide how long the user",
    "start": "123630",
    "end": "125100"
  },
  {
    "text": "can hold the button before it fires off",
    "start": "125100",
    "end": "126990"
  },
  {
    "text": "the delete operation to fire store in",
    "start": "126990",
    "end": "129590"
  },
  {
    "text": "angular you can create public custom",
    "start": "129590",
    "end": "131910"
  },
  {
    "text": "events by using the output deck",
    "start": "131910",
    "end": "133560"
  },
  {
    "text": "and making the value in event emitter in",
    "start": "133560",
    "end": "136470"
  },
  {
    "text": "our case we'll just be omitting the",
    "start": "136470",
    "end": "137910"
  },
  {
    "text": "number of milliseconds and then if we",
    "start": "137910",
    "end": "139830"
  },
  {
    "text": "look at the HTML it would be used like",
    "start": "139830",
    "end": "141690"
  },
  {
    "text": "this we insert the holdable directive in",
    "start": "141690",
    "end": "144000"
  },
  {
    "text": "a button and then we wrap hold time in",
    "start": "144000",
    "end": "145920"
  },
  {
    "text": "parentheses because it's an event and",
    "start": "145920",
    "end": "147660"
  },
  {
    "text": "later in the video we'll define a",
    "start": "147660",
    "end": "149100"
  },
  {
    "text": "function that handles that event let's",
    "start": "149100",
    "end": "151470"
  },
  {
    "text": "go back to our directive and the next",
    "start": "151470",
    "end": "153180"
  },
  {
    "text": "thing we'll define is the internal state",
    "start": "153180",
    "end": "154920"
  },
  {
    "text": "of this component we can define it as a",
    "start": "154920",
    "end": "156870"
  },
  {
    "text": "subject which itself is just an",
    "start": "156870",
    "end": "158790"
  },
  {
    "text": "observable that we can push values to",
    "start": "158790",
    "end": "160709"
  },
  {
    "text": "and there are two possible states that",
    "start": "160709",
    "end": "162510"
  },
  {
    "text": "this directive can be in either the user",
    "start": "162510",
    "end": "164550"
  },
  {
    "text": "is holding the button down or they're",
    "start": "164550",
    "end": "166140"
  },
  {
    "text": "not the next thing I'll do is define an",
    "start": "166140",
    "end": "167910"
  },
  {
    "text": "observable called cancel which will be",
    "start": "167910",
    "end": "169830"
  },
  {
    "text": "based off of the states or subject",
    "start": "169830",
    "end": "172230"
  },
  {
    "text": "eventually we'll set this observable up",
    "start": "172230",
    "end": "174060"
  },
  {
    "text": "to only emit values when the user stops",
    "start": "174060",
    "end": "176160"
  },
  {
    "text": "holding the button but before we can do",
    "start": "176160",
    "end": "178590"
  },
  {
    "text": "that we need to first listen to Mouse",
    "start": "178590",
    "end": "180090"
  },
  {
    "text": "events on this element and then update",
    "start": "180090",
    "end": "182250"
  },
  {
    "text": "the internal state so there are two ways",
    "start": "182250",
    "end": "184800"
  },
  {
    "text": "that a user can cancel holding the",
    "start": "184800",
    "end": "186510"
  },
  {
    "text": "button they can either stop clicking or",
    "start": "186510",
    "end": "188640"
  },
  {
    "text": "they can move the mouse outside of the",
    "start": "188640",
    "end": "190230"
  },
  {
    "text": "button area we use host listener to",
    "start": "190230",
    "end": "192930"
  },
  {
    "text": "listen to events like Mouse up that are",
    "start": "192930",
    "end": "194880"
  },
  {
    "text": "built into the Dom and if we want to",
    "start": "194880",
    "end": "196739"
  },
  {
    "text": "listen to multiple events we can just",
    "start": "196739",
    "end": "198329"
  },
  {
    "text": "stack them on top of each other like",
    "start": "198329",
    "end": "199560"
  },
  {
    "text": "this then we can write a single method",
    "start": "199560",
    "end": "202049"
  },
  {
    "text": "to run the same code when either event",
    "start": "202049",
    "end": "204000"
  },
  {
    "text": "occurs when the user stops holding the",
    "start": "204000",
    "end": "206130"
  },
  {
    "text": "button we just want to update the",
    "start": "206130",
    "end": "207690"
  },
  {
    "text": "internal state on this directive to be",
    "start": "207690",
    "end": "209579"
  },
  {
    "text": "canceled this is important because will",
    "start": "209579",
    "end": "211799"
  },
  {
    "text": "actually react to the state change when",
    "start": "211799",
    "end": "213450"
  },
  {
    "text": "we keep track of the amount of time that",
    "start": "213450",
    "end": "214829"
  },
  {
    "text": "the user has been holding down the next",
    "start": "214829",
    "end": "217650"
  },
  {
    "text": "step is to add a host listener for the",
    "start": "217650",
    "end": "219329"
  },
  {
    "text": "mouse down event and the first thing I'm",
    "start": "219329",
    "end": "221220"
  },
  {
    "text": "going to do here is add a console log",
    "start": "221220",
    "end": "223440"
  },
  {
    "text": "that will console.log that the hold is",
    "start": "223440",
    "end": "225299"
  },
  {
    "text": "started and bright-green and just a",
    "start": "225299",
    "end": "227670"
  },
  {
    "text": "quick side tip you can console.log with",
    "start": "227670",
    "end": "229380"
  },
  {
    "text": "custom CSS by doing % c on the first",
    "start": "229380",
    "end": "232260"
  },
  {
    "text": "argument and make the second argument",
    "start": "232260",
    "end": "234120"
  },
  {
    "text": "the actual Styles you want applied there",
    "start": "234120",
    "end": "236010"
  },
  {
    "text": "the next thing I'll do is update the",
    "start": "236010",
    "end": "238320"
  },
  {
    "text": "internal state to start so we know the",
    "start": "238320",
    "end": "240180"
  },
  {
    "text": "user has started a new hold then I'll",
    "start": "240180",
    "end": "242160"
  },
  {
    "text": "define a number that defines the",
    "start": "242160",
    "end": "243600"
  },
  {
    "text": "interval period so this will be every",
    "start": "243600",
    "end": "245489"
  },
  {
    "text": "tenth of a second or 100 milliseconds",
    "start": "245489",
    "end": "247680"
  },
  {
    "text": "you can adjust that as needed and then",
    "start": "247680",
    "end": "249959"
  },
  {
    "text": "I'll set up an or XJS interval with that",
    "start": "249959",
    "end": "252299"
  },
  {
    "text": "number when we subscribe to this",
    "start": "252299",
    "end": "254100"
  },
  {
    "text": "interval it will emit a number that",
    "start": "254100",
    "end": "255780"
  },
  {
    "text": "increases by one every tenth of a second",
    "start": "255780",
    "end": "258060"
  },
  {
    "text": "0 1 2 3 etc now the tricky part is that",
    "start": "258060",
    "end": "261720"
  },
  {
    "text": "we want this observable to stop emitting",
    "start": "261720",
    "end": "263580"
  },
  {
    "text": "values when the user has stopped holding",
    "start": "263580",
    "end": "265650"
  },
  {
    "text": "it and for that we can",
    "start": "265650",
    "end": "267120"
  },
  {
    "text": "actually use the take and tell operator",
    "start": "267120",
    "end": "268650"
  },
  {
    "text": "from rxjs then passing that canceled",
    "start": "268650",
    "end": "271110"
  },
  {
    "text": "observable so when canceled emits it",
    "start": "271110",
    "end": "273120"
  },
  {
    "text": "will cause this observable interval to",
    "start": "273120",
    "end": "275280"
  },
  {
    "text": "complete but while the interval is",
    "start": "275280",
    "end": "277380"
  },
  {
    "text": "running we want to use the tap operator",
    "start": "277380",
    "end": "279360"
  },
  {
    "text": "to emit the custom event which is hold",
    "start": "279360",
    "end": "281460"
  },
  {
    "text": "time omit and then we'll omit the number",
    "start": "281460",
    "end": "283590"
  },
  {
    "text": "of milliseconds by multiplying it again",
    "start": "283590",
    "end": "285419"
  },
  {
    "text": "by that original interval number so that",
    "start": "285419",
    "end": "288120"
  },
  {
    "text": "will emit the number of milliseconds",
    "start": "288120",
    "end": "289860"
  },
  {
    "text": "when the user clicks down but it will",
    "start": "289860",
    "end": "291930"
  },
  {
    "text": "keep running forever because right now",
    "start": "291930",
    "end": "293490"
  },
  {
    "text": "we don't have any observable that will",
    "start": "293490",
    "end": "295020"
  },
  {
    "text": "cancel it we can create that observable",
    "start": "295020",
    "end": "297330"
  },
  {
    "text": "by taking our source state subject and",
    "start": "297330",
    "end": "299729"
  },
  {
    "text": "then piping in the filter operator and",
    "start": "299729",
    "end": "301770"
  },
  {
    "text": "filter it so that only that cancel",
    "start": "301770",
    "end": "303990"
  },
  {
    "text": "events are emitted and then we'll also",
    "start": "303990",
    "end": "305910"
  },
  {
    "text": "throw in a tap operator here and",
    "start": "305910",
    "end": "307620"
  },
  {
    "text": "console.log that the hold is stopped and",
    "start": "307620",
    "end": "309600"
  },
  {
    "text": "bright-red",
    "start": "309600",
    "end": "310080"
  },
  {
    "text": "and then we'll have our custom event you",
    "start": "310080",
    "end": "312030"
  },
  {
    "text": "met the number 0 just so we can restart",
    "start": "312030",
    "end": "314070"
  },
  {
    "text": "our progress bar when we get to the",
    "start": "314070",
    "end": "315449"
  },
  {
    "text": "component that takes care of the",
    "start": "315449",
    "end": "318180"
  },
  {
    "text": "directive code we can now go into the",
    "start": "318180",
    "end": "320130"
  },
  {
    "text": "HTML and just drop that into a button",
    "start": "320130",
    "end": "322350"
  },
  {
    "text": "and we'll get all of that custom",
    "start": "322350",
    "end": "323820"
  },
  {
    "text": "functionality if we click the button and",
    "start": "323820",
    "end": "326639"
  },
  {
    "text": "hold for a second you'll see that we",
    "start": "326639",
    "end": "327990"
  },
  {
    "text": "first get our green console log then we",
    "start": "327990",
    "end": "329910"
  },
  {
    "text": "get a few hundred milliseconds and then",
    "start": "329910",
    "end": "331860"
  },
  {
    "text": "it stops and emits it'll be the",
    "start": "331860",
    "end": "334530"
  },
  {
    "text": "responsibility of the parent component",
    "start": "334530",
    "end": "336330"
  },
  {
    "text": "to listen to these events and then we'll",
    "start": "336330",
    "end": "338610"
  },
  {
    "text": "set our demo up to delete the document",
    "start": "338610",
    "end": "340139"
  },
  {
    "text": "from fire store once it's been held for",
    "start": "340139",
    "end": "342150"
  },
  {
    "text": "at least one second we can go ahead and",
    "start": "342150",
    "end": "344820"
  },
  {
    "text": "start in the HTML will add the holdable",
    "start": "344820",
    "end": "346770"
  },
  {
    "text": "directive and then listen to our custom",
    "start": "346770",
    "end": "348810"
  },
  {
    "text": "hold time event and then we'll define a",
    "start": "348810",
    "end": "350789"
  },
  {
    "text": "function here called hold handler that",
    "start": "350789",
    "end": "352470"
  },
  {
    "text": "takes the event as its argument if you",
    "start": "352470",
    "end": "355680"
  },
  {
    "text": "want to see how many milliseconds the",
    "start": "355680",
    "end": "357000"
  },
  {
    "text": "button has been held you can just add a",
    "start": "357000",
    "end": "358380"
  },
  {
    "text": "console log to the hold handler function",
    "start": "358380",
    "end": "360740"
  },
  {
    "text": "then to make this non-trivial we'll",
    "start": "360740",
    "end": "363240"
  },
  {
    "text": "bring in firestore and load a collection",
    "start": "363240",
    "end": "365490"
  },
  {
    "text": "of documents now I'm just going to copy",
    "start": "365490",
    "end": "368610"
  },
  {
    "text": "and paste a pretty big chunk of code",
    "start": "368610",
    "end": "370139"
  },
  {
    "text": "here but basically what I'm doing is I'm",
    "start": "370139",
    "end": "372000"
  },
  {
    "text": "grabbing a collection from fire store",
    "start": "372000",
    "end": "373740"
  },
  {
    "text": "and then I'm mapping the document IDs to",
    "start": "373740",
    "end": "376139"
  },
  {
    "text": "that collections data payload so we can",
    "start": "376139",
    "end": "378180"
  },
  {
    "text": "use that idea to later delete a document",
    "start": "378180",
    "end": "380039"
  },
  {
    "text": "I cover this code in detail in the full",
    "start": "380039",
    "end": "382620"
  },
  {
    "text": "ionic course as well as multiple other",
    "start": "382620",
    "end": "384630"
  },
  {
    "text": "videos in the past it's not critical for",
    "start": "384630",
    "end": "387210"
  },
  {
    "text": "this video so we'll just brush past it",
    "start": "387210",
    "end": "388979"
  },
  {
    "text": "the next important thing that we'll do",
    "start": "388979",
    "end": "390660"
  },
  {
    "text": "is generate a component called customer",
    "start": "390660",
    "end": "392880"
  },
  {
    "text": "which will hold the data for each",
    "start": "392880",
    "end": "394710"
  },
  {
    "text": "document and fire store when we retrieve",
    "start": "394710",
    "end": "397560"
  },
  {
    "text": "this collection from fire store we're",
    "start": "397560",
    "end": "399300"
  },
  {
    "text": "going to loop over it with ng",
    "start": "399300",
    "end": "400860"
  },
  {
    "text": "four and then we'll pass each unwrapped",
    "start": "400860",
    "end": "403050"
  },
  {
    "text": "object to the child component the app",
    "start": "403050",
    "end": "405870"
  },
  {
    "text": "component is the parent component so",
    "start": "405870",
    "end": "407520"
  },
  {
    "text": "we'll set up our loop there we declared",
    "start": "407520",
    "end": "409650"
  },
  {
    "text": "the app customer component run the ng",
    "start": "409650",
    "end": "412259"
  },
  {
    "text": "for loop angularfire gives us that as an",
    "start": "412259",
    "end": "414840"
  },
  {
    "text": "observable so we unwrap it with the",
    "start": "414840",
    "end": "416370"
  },
  {
    "text": "async pipe then we'll pass each document",
    "start": "416370",
    "end": "419159"
  },
  {
    "text": "object down to the child component by",
    "start": "419159",
    "end": "421169"
  },
  {
    "text": "wrapping customer and square brackets",
    "start": "421169",
    "end": "423060"
  },
  {
    "text": "and we'll set up that custom input",
    "start": "423060",
    "end": "424860"
  },
  {
    "text": "property in the component in the next",
    "start": "424860",
    "end": "426360"
  },
  {
    "text": "step now before we write the child",
    "start": "426360",
    "end": "428490"
  },
  {
    "text": "component there's one last tip that I",
    "start": "428490",
    "end": "429960"
  },
  {
    "text": "want to show you and that's if you are",
    "start": "429960",
    "end": "431610"
  },
  {
    "text": "using a progress bar you'll want to add",
    "start": "431610",
    "end": "433740"
  },
  {
    "text": "an animation property in the CSS",
    "start": "433740",
    "end": "435840"
  },
  {
    "text": "otherwise it will look really janky as",
    "start": "435840",
    "end": "438029"
  },
  {
    "text": "it animates from step to step now the",
    "start": "438029",
    "end": "440729"
  },
  {
    "text": "child components going to be pretty",
    "start": "440729",
    "end": "441990"
  },
  {
    "text": "simple we first bring in angular",
    "start": "441990",
    "end": "443879"
  },
  {
    "text": "firestore as well as input from angular",
    "start": "443879",
    "end": "445860"
  },
  {
    "text": "core then we'll decorate the customer",
    "start": "445860",
    "end": "448050"
  },
  {
    "text": "property with input which allows it to",
    "start": "448050",
    "end": "449819"
  },
  {
    "text": "be passed in through the parent",
    "start": "449819",
    "end": "451169"
  },
  {
    "text": "component and we'll also set up a",
    "start": "451169",
    "end": "453000"
  },
  {
    "text": "progress property that starts at zero",
    "start": "453000",
    "end": "454800"
  },
  {
    "text": "now the most important aspect of this",
    "start": "454800",
    "end": "457050"
  },
  {
    "text": "component is the delete customer method",
    "start": "457050",
    "end": "459330"
  },
  {
    "text": "that handles the whole time event that",
    "start": "459330",
    "end": "461580"
  },
  {
    "text": "we defined from our directive this",
    "start": "461580",
    "end": "464189"
  },
  {
    "text": "method will take the event itself as",
    "start": "464189",
    "end": "465900"
  },
  {
    "text": "well as the customer object as an",
    "start": "465900",
    "end": "467339"
  },
  {
    "text": "argument and it will update the progress",
    "start": "467339",
    "end": "469620"
  },
  {
    "text": "on this component so we can change the",
    "start": "469620",
    "end": "471060"
  },
  {
    "text": "value of the progress bar when the",
    "start": "471060",
    "end": "473339"
  },
  {
    "text": "buttons being held down it's going to",
    "start": "473339",
    "end": "474900"
  },
  {
    "text": "emit this event every tenth of a second",
    "start": "474900",
    "end": "476909"
  },
  {
    "text": "we're dividing it by ten to treat it",
    "start": "476909",
    "end": "478770"
  },
  {
    "text": "more like a zero to 100 percentage and",
    "start": "478770",
    "end": "481139"
  },
  {
    "text": "if that value is greater than 100 or one",
    "start": "481139",
    "end": "483719"
  },
  {
    "text": "second in this case we'll use angular",
    "start": "483719",
    "end": "485430"
  },
  {
    "text": "firestore to delete that customers",
    "start": "485430",
    "end": "487379"
  },
  {
    "text": "document from the database and then the",
    "start": "487379",
    "end": "489599"
  },
  {
    "text": "last formality for this demo is just the",
    "start": "489599",
    "end": "491819"
  },
  {
    "text": "HTML markup in that child component so",
    "start": "491819",
    "end": "494520"
  },
  {
    "text": "we'll just interpolate some values from",
    "start": "494520",
    "end": "496050"
  },
  {
    "text": "the database then we'll add our button",
    "start": "496050",
    "end": "498539"
  },
  {
    "text": "down here at the bottom which of course",
    "start": "498539",
    "end": "499889"
  },
  {
    "text": "uses the holdable directive then uses",
    "start": "499889",
    "end": "502199"
  },
  {
    "text": "the delete customer method as the event",
    "start": "502199",
    "end": "504509"
  },
  {
    "text": "handler and then we also have that",
    "start": "504509",
    "end": "506610"
  },
  {
    "text": "progress property available on this",
    "start": "506610",
    "end": "508349"
  },
  {
    "text": "component which we can use to show a",
    "start": "508349",
    "end": "510210"
  },
  {
    "text": "progress bar the only trick we have to",
    "start": "510210",
    "end": "512550"
  },
  {
    "text": "do here is add value in square brackets",
    "start": "512550",
    "end": "514709"
  },
  {
    "text": "so it uses the progress value that we",
    "start": "514709",
    "end": "516719"
  },
  {
    "text": "define in the component and now if we go",
    "start": "516719",
    "end": "519029"
  },
  {
    "text": "back to our app we should have a result",
    "start": "519029",
    "end": "520469"
  },
  {
    "text": "that looks something like this",
    "start": "520469",
    "end": "521849"
  },
  {
    "text": "I have some dummy records in my database",
    "start": "521849",
    "end": "524010"
  },
  {
    "text": "if I click the delete button it will",
    "start": "524010",
    "end": "526079"
  },
  {
    "text": "start the progress bar but if I let go",
    "start": "526079",
    "end": "527880"
  },
  {
    "text": "then it stops if I keep holding it for",
    "start": "527880",
    "end": "530339"
  },
  {
    "text": "at least one second then you'll see it",
    "start": "530339",
    "end": "531839"
  },
  {
    "text": "actually deletes the record from the",
    "start": "531839",
    "end": "533550"
  },
  {
    "text": "firestore database",
    "start": "533550",
    "end": "534570"
  },
  {
    "text": "hopefully that gives you some ideas on",
    "start": "534570",
    "end": "536370"
  },
  {
    "text": "how to handle deletes gracefully in your",
    "start": "536370",
    "end": "538290"
  },
  {
    "text": "UI I'm gonna go ahead and wrap things up",
    "start": "538290",
    "end": "540060"
  },
  {
    "text": "there if you have any questions send me",
    "start": "540060",
    "end": "541770"
  },
  {
    "text": "a message on slack and if you're ready",
    "start": "541770",
    "end": "543780"
  },
  {
    "text": "to build and ship a real life product",
    "start": "543780",
    "end": "545670"
  },
  {
    "text": "consider becoming a pro member at",
    "start": "545670",
    "end": "547320"
  },
  {
    "text": "angular firebase comm you'll get access",
    "start": "547320",
    "end": "549270"
  },
  {
    "text": "to all kinds of exclusive content like",
    "start": "549270",
    "end": "551340"
  },
  {
    "text": "my full courses and book as well as one",
    "start": "551340",
    "end": "554010"
  },
  {
    "text": "on one project support thanks for",
    "start": "554010",
    "end": "555840"
  },
  {
    "text": "watching and I'll talk to you soon",
    "start": "555840",
    "end": "559400"
  }
]