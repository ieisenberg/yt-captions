[
  {
    "start": "0",
    "end": "90000"
  },
  {
    "text": "today you'll learn the basics of CSS",
    "start": "30",
    "end": "1680"
  },
  {
    "text": "grid by building three different grid",
    "start": "1680",
    "end": "3300"
  },
  {
    "text": "layouts from scratch the first example",
    "start": "3300",
    "end": "5370"
  },
  {
    "text": "is a responsive 12 column grid it",
    "start": "5370",
    "end": "7529"
  },
  {
    "text": "replaces most of the use cases that",
    "start": "7529",
    "end": "9240"
  },
  {
    "text": "you'd find in a grid system like Twitter",
    "start": "9240",
    "end": "10679"
  },
  {
    "text": "bootstrap but it does so with only three",
    "start": "10679",
    "end": "12660"
  },
  {
    "text": "lines of code and removes the need for",
    "start": "12660",
    "end": "14130"
  },
  {
    "text": "all this crazy markup from your HTML",
    "start": "14130",
    "end": "16230"
  },
  {
    "text": "next we'll build a responsive photo",
    "start": "16230",
    "end": "18000"
  },
  {
    "text": "gallery and third we'll build an",
    "start": "18000",
    "end": "19740"
  },
  {
    "text": "explicit grid that has this fancy",
    "start": "19740",
    "end": "21510"
  },
  {
    "text": "staggered intro animation by the end of",
    "start": "21510",
    "end": "23850"
  },
  {
    "text": "this video you should know enough about",
    "start": "23850",
    "end": "25140"
  },
  {
    "text": "grid to start putting it to use in your",
    "start": "25140",
    "end": "26880"
  },
  {
    "text": "own projects if you're new here like it",
    "start": "26880",
    "end": "28650"
  },
  {
    "text": "subscribe and feel free to grab your",
    "start": "28650",
    "end": "30359"
  },
  {
    "text": "mouse the keyboard to code along with us",
    "start": "30359",
    "end": "32189"
  },
  {
    "text": "when you start just have a good feeling",
    "start": "32189",
    "end": "34860"
  },
  {
    "text": "and be happy and in love with life in",
    "start": "34860",
    "end": "37320"
  },
  {
    "text": "the world and sit down and begin playing",
    "start": "37320",
    "end": "40070"
  },
  {
    "text": "I'd like to start off by sharing my own",
    "start": "40070",
    "end": "42300"
  },
  {
    "text": "experience with grid because on fire",
    "start": "42300",
    "end": "44190"
  },
  {
    "text": "ship i/o I was previously using a",
    "start": "44190",
    "end": "45960"
  },
  {
    "text": "flexbox based system like you would find",
    "start": "45960",
    "end": "47700"
  },
  {
    "text": "in bootstrap and many other CSS",
    "start": "47700",
    "end": "49590"
  },
  {
    "text": "frameworks now there's nothing wrong",
    "start": "49590",
    "end": "51180"
  },
  {
    "text": "with using a third-party solution but",
    "start": "51180",
    "end": "53100"
  },
  {
    "text": "when you use grid you don't have to add",
    "start": "53100",
    "end": "54660"
  },
  {
    "text": "any additional CSS to your bundle size",
    "start": "54660",
    "end": "56640"
  },
  {
    "text": "the grid system just works natively in",
    "start": "56640",
    "end": "58710"
  },
  {
    "text": "the browser but the much more important",
    "start": "58710",
    "end": "60510"
  },
  {
    "text": "benefit was how much it simplified the",
    "start": "60510",
    "end": "62190"
  },
  {
    "text": "code base my HTML markup had a bunch of",
    "start": "62190",
    "end": "64439"
  },
  {
    "text": "columns each with its own collection of",
    "start": "64439",
    "end": "66299"
  },
  {
    "text": "classes to make that call and responsive",
    "start": "66299",
    "end": "68250"
  },
  {
    "text": "after moving to CSS grid I was able to",
    "start": "68250",
    "end": "70409"
  },
  {
    "text": "remove all these classes and implement",
    "start": "70409",
    "end": "72360"
  },
  {
    "text": "my own grid system with just three lines",
    "start": "72360",
    "end": "74010"
  },
  {
    "text": "of code and on top of that beautiful",
    "start": "74010",
    "end": "75750"
  },
  {
    "text": "designs that you would normally only",
    "start": "75750",
    "end": "76950"
  },
  {
    "text": "find in a magazine are much easier to",
    "start": "76950",
    "end": "78990"
  },
  {
    "text": "implement with grid because the system",
    "start": "78990",
    "end": "80700"
  },
  {
    "text": "itself is inspired by print based grids",
    "start": "80700",
    "end": "82530"
  },
  {
    "text": "now I should warn you that grid is",
    "start": "82530",
    "end": "84450"
  },
  {
    "text": "pretty weird to learn at first so let's",
    "start": "84450",
    "end": "86159"
  },
  {
    "text": "jump into some examples and understand",
    "start": "86159",
    "end": "87990"
  },
  {
    "text": "what every line of code is doing you can",
    "start": "87990",
    "end": "89820"
  },
  {
    "text": "follow along by opening your editor and",
    "start": "89820",
    "end": "91530"
  },
  {
    "start": "90000",
    "end": "320000"
  },
  {
    "text": "creating an HTML and CSS file or you can",
    "start": "91530",
    "end": "94200"
  },
  {
    "text": "clone the project from github and you'll",
    "start": "94200",
    "end": "95850"
  },
  {
    "text": "see that each grid is broken down into",
    "start": "95850",
    "end": "97680"
  },
  {
    "text": "its own HTML and CSS files this first",
    "start": "97680",
    "end": "100350"
  },
  {
    "text": "grid we're building is basically an",
    "start": "100350",
    "end": "101909"
  },
  {
    "text": "infinite set of responsive columns and",
    "start": "101909",
    "end": "103890"
  },
  {
    "text": "that's really useful if you have",
    "start": "103890",
    "end": "105450"
  },
  {
    "text": "something like a feed of cards like the",
    "start": "105450",
    "end": "107310"
  },
  {
    "text": "lesson feed on fire ship IO and a grid",
    "start": "107310",
    "end": "109649"
  },
  {
    "text": "like this will also replace many of the",
    "start": "109649",
    "end": "111270"
  },
  {
    "text": "use cases for something like Twitter",
    "start": "111270",
    "end": "112979"
  },
  {
    "text": "bootstrap grid go ahead and open an HTML",
    "start": "112979",
    "end": "115590"
  },
  {
    "text": "file in BS code then start typing HTML",
    "start": "115590",
    "end": "117930"
  },
  {
    "text": "to autocomplete the boilerplate code",
    "start": "117930",
    "end": "119700"
  },
  {
    "text": "next I'm going to go into the head of",
    "start": "119700",
    "end": "121710"
  },
  {
    "text": "the document add a style tag and an",
    "start": "121710",
    "end": "123689"
  },
  {
    "text": "import our base CSS as well as our basic",
    "start": "123689",
    "end": "126000"
  },
  {
    "text": "grid for this example the base CSS file",
    "start": "126000",
    "end": "128310"
  },
  {
    "text": "is just something that I'm going to",
    "start": "128310",
    "end": "129629"
  },
  {
    "text": "share across all the examples if we open",
    "start": "129629",
    "end": "131970"
  },
  {
    "text": "that file you'll notice that it has a",
    "start": "131970",
    "end": "133650"
  },
  {
    "text": "class that defines a flexbox that aligns",
    "start": "133650",
    "end": "135989"
  },
  {
    "text": "its content in the center",
    "start": "135989",
    "end": "137250"
  },
  {
    "text": "none of this code is actually required",
    "start": "137250",
    "end": "138569"
  },
  {
    "text": "for your grid to work it's just there to",
    "start": "138569",
    "end": "140099"
  },
  {
    "text": "make things look nice so feel free to",
    "start": "140099",
    "end": "142019"
  },
  {
    "text": "copy it from the main repo now going",
    "start": "142019",
    "end": "144690"
  },
  {
    "text": "back to our HTML we'll go into the body",
    "start": "144690",
    "end": "146610"
  },
  {
    "text": "and set up a section that will serve as",
    "start": "146610",
    "end": "148890"
  },
  {
    "text": "our main grid container then all of the",
    "start": "148890",
    "end": "150900"
  },
  {
    "text": "immediate children inside of this",
    "start": "150900",
    "end": "152280"
  },
  {
    "text": "container are known as grid items now",
    "start": "152280",
    "end": "154739"
  },
  {
    "text": "for this demo I'm adding 12 children to",
    "start": "154739",
    "end": "156780"
  },
  {
    "text": "the grid but I'm assuming the content",
    "start": "156780",
    "end": "158430"
  },
  {
    "text": "inside the grid is dynamic meaning we",
    "start": "158430",
    "end": "160470"
  },
  {
    "text": "might have three items in there 50 items",
    "start": "160470",
    "end": "162510"
  },
  {
    "text": "or whatever so what we need is an",
    "start": "162510",
    "end": "164519"
  },
  {
    "text": "implicit grid that can figure out the",
    "start": "164519",
    "end": "166140"
  },
  {
    "text": "right number of columns and rows based",
    "start": "166140",
    "end": "167910"
  },
  {
    "text": "on the content size and the viewport",
    "start": "167910",
    "end": "169709"
  },
  {
    "text": "size the first step is to set display",
    "start": "169709",
    "end": "172049"
  },
  {
    "text": "grid on the container and you'll notice",
    "start": "172049",
    "end": "173910"
  },
  {
    "text": "right now everything is just stacked up",
    "start": "173910",
    "end": "175530"
  },
  {
    "text": "in a single column let's start by giving",
    "start": "175530",
    "end": "177510"
  },
  {
    "text": "our children a little bit of spacing we",
    "start": "177510",
    "end": "179489"
  },
  {
    "text": "can do that with the gap property",
    "start": "179489",
    "end": "180780"
  },
  {
    "text": "instead of setting margins on the",
    "start": "180780",
    "end": "182400"
  },
  {
    "text": "children that will guarantee that we",
    "start": "182400",
    "end": "183750"
  },
  {
    "text": "always have one REM of spacing between",
    "start": "183750",
    "end": "185489"
  },
  {
    "text": "the items both horizontally and",
    "start": "185489",
    "end": "187170"
  },
  {
    "text": "vertically now one way to create columns",
    "start": "187170",
    "end": "189510"
  },
  {
    "text": "is to use the grid template columns",
    "start": "189510",
    "end": "191280"
  },
  {
    "text": "property let's start by creating an",
    "start": "191280",
    "end": "193230"
  },
  {
    "text": "explicit grid or a grid that has all of",
    "start": "193230",
    "end": "195299"
  },
  {
    "text": "its columns defined in advance now since",
    "start": "195299",
    "end": "197790"
  },
  {
    "text": "we're talking about columns think about",
    "start": "197790",
    "end": "199290"
  },
  {
    "text": "the width of the grid 1fr or one",
    "start": "199290",
    "end": "201750"
  },
  {
    "text": "fractional unit represents one part of",
    "start": "201750",
    "end": "204180"
  },
  {
    "text": "the available space currently we have",
    "start": "204180",
    "end": "206130"
  },
  {
    "text": "one column so when fo r is a hundred",
    "start": "206130",
    "end": "208319"
  },
  {
    "text": "percent of the available space we can",
    "start": "208319",
    "end": "210180"
  },
  {
    "text": "add another column by simply adding",
    "start": "210180",
    "end": "211739"
  },
  {
    "text": "another F our unit and now one fr equals",
    "start": "211739",
    "end": "214590"
  },
  {
    "text": "fifty percent of the available space and",
    "start": "214590",
    "end": "216269"
  },
  {
    "text": "we can keep doing this for as many",
    "start": "216269",
    "end": "217829"
  },
  {
    "text": "columns as we need or in our case twelve",
    "start": "217829",
    "end": "219810"
  },
  {
    "text": "columns the end result is an explicit",
    "start": "219810",
    "end": "222120"
  },
  {
    "text": "grid that always has twelve columns but",
    "start": "222120",
    "end": "224519"
  },
  {
    "text": "there's a few problems here first of all",
    "start": "224519",
    "end": "226049"
  },
  {
    "text": "this grid is not responsive and this",
    "start": "226049",
    "end": "227910"
  },
  {
    "text": "code is really ugly",
    "start": "227910",
    "end": "229109"
  },
  {
    "text": "fortunately CSS grid has a helper",
    "start": "229109",
    "end": "231299"
  },
  {
    "text": "function called repeat instead of",
    "start": "231299",
    "end": "232859"
  },
  {
    "text": "writing out each column manually we can",
    "start": "232859",
    "end": "234540"
  },
  {
    "text": "simply call repeat twelve and then pass",
    "start": "234540",
    "end": "236459"
  },
  {
    "text": "in the unit that we want to repeat this",
    "start": "236459",
    "end": "238290"
  },
  {
    "text": "code is identical to the code above but",
    "start": "238290",
    "end": "240120"
  },
  {
    "text": "much more concise and readable now",
    "start": "240120",
    "end": "241859"
  },
  {
    "text": "currently in the demo each column is too",
    "start": "241859",
    "end": "243540"
  },
  {
    "text": "thin let's look at how we can set a",
    "start": "243540",
    "end": "245160"
  },
  {
    "text": "minimum width of 240 pixels we'll try",
    "start": "245160",
    "end": "247889"
  },
  {
    "text": "again by repeating twelve columns but",
    "start": "247889",
    "end": "249840"
  },
  {
    "text": "this time use the min/max function this",
    "start": "249840",
    "end": "252120"
  },
  {
    "text": "is like saying make sure my columns",
    "start": "252120",
    "end": "253709"
  },
  {
    "text": "don't go below 240 pixels and width but",
    "start": "253709",
    "end": "256260"
  },
  {
    "text": "allow them to expand as big as one",
    "start": "256260",
    "end": "258030"
  },
  {
    "text": "fractional unit will allow what you'll",
    "start": "258030",
    "end": "259949"
  },
  {
    "text": "notice is that our cards are no longer",
    "start": "259949",
    "end": "261389"
  },
  {
    "text": "too skinny but we now have another",
    "start": "261389",
    "end": "262890"
  },
  {
    "text": "problem they're overflowing on the",
    "start": "262890",
    "end": "264719"
  },
  {
    "text": "horizontal axis so the question becomes",
    "start": "264719",
    "end": "267389"
  },
  {
    "text": "how do we make these columns break down",
    "start": "267389",
    "end": "268919"
  },
  {
    "text": "into additional rows when there's no",
    "start": "268919",
    "end": "270539"
  },
  {
    "text": "longer available space the answer is by",
    "start": "270539",
    "end": "272879"
  },
  {
    "text": "creating an implicit grid when we call",
    "start": "272879",
    "end": "274740"
  },
  {
    "text": "repeat instead of repeating twelve times",
    "start": "274740",
    "end": "276719"
  },
  {
    "text": "we'll repeat with autofit and then use",
    "start": "276719",
    "end": "279210"
  },
  {
    "text": "these same mid max value as before",
    "start": "279210",
    "end": "281099"
  },
  {
    "text": "what autofit does is tell grid to",
    "start": "281099",
    "end": "283080"
  },
  {
    "text": "calculate the number of rows and columns",
    "start": "283080",
    "end": "284610"
  },
  {
    "text": "on the fly and now you can see that we",
    "start": "284610",
    "end": "286710"
  },
  {
    "text": "have a truly responsive grid it only",
    "start": "286710",
    "end": "288599"
  },
  {
    "text": "took three lines of code and no",
    "start": "288599",
    "end": "290009"
  },
  {
    "text": "additional markup or classes in our HTML",
    "start": "290009",
    "end": "291840"
  },
  {
    "text": "it's worth noting that there's also an",
    "start": "291840",
    "end": "293879"
  },
  {
    "text": "autofill option the difference is subtle",
    "start": "293879",
    "end": "296039"
  },
  {
    "text": "but important notice here in the demo",
    "start": "296039",
    "end": "297930"
  },
  {
    "text": "how the top autofill option is going to",
    "start": "297930",
    "end": "300360"
  },
  {
    "text": "create additional columns when there",
    "start": "300360",
    "end": "302370"
  },
  {
    "text": "becomes additional space but autofit on",
    "start": "302370",
    "end": "304590"
  },
  {
    "text": "the bottom will expand its children to",
    "start": "304590",
    "end": "306330"
  },
  {
    "text": "take up all of the available space now",
    "start": "306330",
    "end": "308340"
  },
  {
    "text": "when you're working with grid and things",
    "start": "308340",
    "end": "309719"
  },
  {
    "text": "aren't going the way you expect open up",
    "start": "309719",
    "end": "311400"
  },
  {
    "text": "Firefox dev tools it has a really good",
    "start": "311400",
    "end": "313469"
  },
  {
    "text": "grid and flexbox inspector and you can",
    "start": "313469",
    "end": "315779"
  },
  {
    "text": "see here how it allows me to visualize",
    "start": "315779",
    "end": "317520"
  },
  {
    "text": "the lines and tracks on the grid now",
    "start": "317520",
    "end": "319589"
  },
  {
    "text": "it's time to move on to example number",
    "start": "319589",
    "end": "321000"
  },
  {
    "start": "320000",
    "end": "465000"
  },
  {
    "text": "two a responsive mosaic photo gallery",
    "start": "321000",
    "end": "323400"
  },
  {
    "text": "what you'll notice about this example is",
    "start": "323400",
    "end": "325259"
  },
  {
    "text": "that some of the photos are bigger some",
    "start": "325259",
    "end": "327060"
  },
  {
    "text": "are taller and some are wider and they",
    "start": "327060",
    "end": "329370"
  },
  {
    "text": "also reposition themselves gracefully",
    "start": "329370",
    "end": "331169"
  },
  {
    "text": "when the viewport size changes let's",
    "start": "331169",
    "end": "333270"
  },
  {
    "text": "start by going into the HTML and setting",
    "start": "333270",
    "end": "335279"
  },
  {
    "text": "up a grid container inside the container",
    "start": "335279",
    "end": "337589"
  },
  {
    "text": "we have 12 divs like we did in the",
    "start": "337589",
    "end": "339180"
  },
  {
    "text": "previous example but each div has a",
    "start": "339180",
    "end": "341370"
  },
  {
    "text": "photo URL as its background and by the",
    "start": "341370",
    "end": "344129"
  },
  {
    "text": "way these are free to use photos from",
    "start": "344129",
    "end": "345839"
  },
  {
    "text": "unsplash now if we go into the CSS will",
    "start": "345839",
    "end": "348389"
  },
  {
    "text": "use the code from the previous example",
    "start": "348389",
    "end": "349949"
  },
  {
    "text": "as our starting point but you'll notice",
    "start": "349949",
    "end": "351750"
  },
  {
    "text": "the rows in the grid are very short",
    "start": "351750",
    "end": "353279"
  },
  {
    "text": "that's because they're being",
    "start": "353279",
    "end": "354300"
  },
  {
    "text": "automatically sized to the text content",
    "start": "354300",
    "end": "356339"
  },
  {
    "text": "in the children now when you have an",
    "start": "356339",
    "end": "357990"
  },
  {
    "text": "implicit grid like this it can be useful",
    "start": "357990",
    "end": "359669"
  },
  {
    "text": "to set the size of the row if we want",
    "start": "359669",
    "end": "362009"
  },
  {
    "text": "all of our rows to be exactly 240 pixels",
    "start": "362009",
    "end": "364379"
  },
  {
    "text": "tall we can set the grid Auto rows",
    "start": "364379",
    "end": "366180"
  },
  {
    "text": "property to that value and now each",
    "start": "366180",
    "end": "368310"
  },
  {
    "text": "automatically created row will be fixed",
    "start": "368310",
    "end": "370259"
  },
  {
    "text": "to that height now our goal is to change",
    "start": "370259",
    "end": "372240"
  },
  {
    "text": "the sizing of individual grid items",
    "start": "372240",
    "end": "374569"
  },
  {
    "text": "let's create a class called card tall",
    "start": "374569",
    "end": "377099"
  },
  {
    "text": "any item with this class should span",
    "start": "377099",
    "end": "379379"
  },
  {
    "text": "across multiple rows vertically we can",
    "start": "379379",
    "end": "381539"
  },
  {
    "text": "do that with the grid row property and",
    "start": "381539",
    "end": "383129"
  },
  {
    "text": "then span to will tell it to span across",
    "start": "383129",
    "end": "385229"
  },
  {
    "text": "two rows from its starting position we",
    "start": "385229",
    "end": "387779"
  },
  {
    "text": "can use a slash to also specify its",
    "start": "387779",
    "end": "389819"
  },
  {
    "text": "ending point which in this case can be",
    "start": "389819",
    "end": "391529"
  },
  {
    "text": "figured out automatically by the grid",
    "start": "391529",
    "end": "393029"
  },
  {
    "text": "algorithm so the grid Row property is",
    "start": "393029",
    "end": "395069"
  },
  {
    "text": "like saying start here / end here it",
    "start": "395069",
    "end": "398190"
  },
  {
    "text": "makes more sense when you look at your",
    "start": "398190",
    "end": "399479"
  },
  {
    "text": "grid in Firefox",
    "start": "399479",
    "end": "400650"
  },
  {
    "text": "display the gridline numbers if we look",
    "start": "400650",
    "end": "402840"
  },
  {
    "text": "at the first photo you can see it starts",
    "start": "402840",
    "end": "404580"
  },
  {
    "text": "at column 1 Row 1 then ends at column 2",
    "start": "404580",
    "end": "407190"
  },
  {
    "text": "row 2 if we want to make this photo",
    "start": "407190",
    "end": "408990"
  },
  {
    "text": "taller we can do so explicitly with the",
    "start": "408990",
    "end": "411150"
  },
  {
    "text": "grid row property like saying start at",
    "start": "411150",
    "end": "413160"
  },
  {
    "text": "horizontal line 1 and end horizontal",
    "start": "413160",
    "end": "415560"
  },
  {
    "text": "line 4 and now you can see that photo",
    "start": "415560",
    "end": "417479"
  },
  {
    "text": "spans across 3 rows and everything else",
    "start": "417479",
    "end": "419759"
  },
  {
    "text": "was repositioned accordingly but since",
    "start": "419759",
    "end": "422070"
  },
  {
    "text": "we don't want to use the line numbers",
    "start": "422070",
    "end": "423210"
  },
  {
    "text": "explicitly will use span 2 to say start",
    "start": "423210",
    "end": "425639"
  },
  {
    "text": "wherever span 2 rows and then",
    "start": "425639",
    "end": "427620"
  },
  {
    "text": "automatically end wherever so that's how",
    "start": "427620",
    "end": "429900"
  },
  {
    "text": "we can make an item taller if we want to",
    "start": "429900",
    "end": "431550"
  },
  {
    "text": "make an item wider we can use the grid",
    "start": "431550",
    "end": "433350"
  },
  {
    "text": "column property and we can implement it",
    "start": "433350",
    "end": "435240"
  },
  {
    "text": "with the exact same value and now we can",
    "start": "435240",
    "end": "437280"
  },
  {
    "text": "go into our HTML and start applying",
    "start": "437280",
    "end": "438720"
  },
  {
    "text": "these classes to the items the end",
    "start": "438720",
    "end": "441060"
  },
  {
    "text": "result is a response to photo gallery",
    "start": "441060",
    "end": "442620"
  },
  {
    "text": "but there is one slight problem at",
    "start": "442620",
    "end": "444510"
  },
  {
    "text": "smaller sizes spanning two grid lines",
    "start": "444510",
    "end": "446820"
  },
  {
    "text": "doesn't work very well",
    "start": "446820",
    "end": "447810"
  },
  {
    "text": "notice how the items on the right are",
    "start": "447810",
    "end": "449580"
  },
  {
    "text": "way too skinny we can easily fix this by",
    "start": "449580",
    "end": "452250"
  },
  {
    "text": "wrapping our classes in a media query",
    "start": "452250",
    "end": "453810"
  },
  {
    "text": "this means the classes will do nothing",
    "start": "453810",
    "end": "455550"
  },
  {
    "text": "on smaller screen sizes and will only be",
    "start": "455550",
    "end": "457650"
  },
  {
    "text": "applied if the min width is greater than",
    "start": "457650",
    "end": "459660"
  },
  {
    "text": "600 pixels in the viewport and now",
    "start": "459660",
    "end": "462090"
  },
  {
    "text": "things will look much better on small",
    "start": "462090",
    "end": "463590"
  },
  {
    "text": "devices and that brings us to grid",
    "start": "463590",
    "end": "465660"
  },
  {
    "start": "465000",
    "end": "696000"
  },
  {
    "text": "number 3 it has this intro animation and",
    "start": "465660",
    "end": "467910"
  },
  {
    "text": "notice how each grid item comes in",
    "start": "467910",
    "end": "469830"
  },
  {
    "text": "clockwise until it gets to the center",
    "start": "469830",
    "end": "471599"
  },
  {
    "text": "you'll also notice the color changes as",
    "start": "471599",
    "end": "473460"
  },
  {
    "text": "it's being animated in and the middle",
    "start": "473460",
    "end": "475320"
  },
  {
    "text": "columns are responsive based on the",
    "start": "475320",
    "end": "476940"
  },
  {
    "text": "viewport size now again we have the same",
    "start": "476940",
    "end": "479159"
  },
  {
    "text": "basic HTML structure just a bunch of",
    "start": "479159",
    "end": "481199"
  },
  {
    "text": "divs inside a grid we'll set the display",
    "start": "481199",
    "end": "483210"
  },
  {
    "text": "to grid give it a gap but this time",
    "start": "483210",
    "end": "485220"
  },
  {
    "text": "we're going to create an explicit grid",
    "start": "485220",
    "end": "486840"
  },
  {
    "text": "using grid template areas this is a",
    "start": "486840",
    "end": "489270"
  },
  {
    "text": "really cool property that allows you to",
    "start": "489270",
    "end": "490860"
  },
  {
    "text": "create an explicit grid by giving names",
    "start": "490860",
    "end": "492870"
  },
  {
    "text": "to the different areas in the grid",
    "start": "492870",
    "end": "494520"
  },
  {
    "text": "notice how we have the letter a in the",
    "start": "494520",
    "end": "496169"
  },
  {
    "text": "top left and if we follow that clockwise",
    "start": "496169",
    "end": "498090"
  },
  {
    "text": "it goes all the way to L and then in the",
    "start": "498090",
    "end": "500460"
  },
  {
    "text": "middle we're actually using emojis to",
    "start": "500460",
    "end": "502320"
  },
  {
    "text": "represent the main content and a shout",
    "start": "502320",
    "end": "504389"
  },
  {
    "text": "out to Paul Newton who commented on the",
    "start": "504389",
    "end": "506220"
  },
  {
    "text": "last video explaining how you can get",
    "start": "506220",
    "end": "507810"
  },
  {
    "text": "even more abstract with your grid area",
    "start": "507810",
    "end": "509550"
  },
  {
    "text": "names notice how he's using shapes to",
    "start": "509550",
    "end": "511650"
  },
  {
    "text": "define the grid areas making it",
    "start": "511650",
    "end": "513180"
  },
  {
    "text": "extremely clear which part of the UI",
    "start": "513180",
    "end": "514680"
  },
  {
    "text": "each grid area is for now once you have",
    "start": "514680",
    "end": "517380"
  },
  {
    "text": "your grid template areas defined you can",
    "start": "517380",
    "end": "519180"
  },
  {
    "text": "set some sizing for the rows and columns",
    "start": "519180",
    "end": "520830"
  },
  {
    "text": "in this example the grid container has a",
    "start": "520830",
    "end": "523709"
  },
  {
    "text": "fixed height so we'll have each",
    "start": "523709",
    "end": "525240"
  },
  {
    "text": "individual row take up exactly 25% of",
    "start": "525240",
    "end": "528060"
  },
  {
    "text": "the height using the repeat function",
    "start": "528060",
    "end": "529709"
  },
  {
    "text": "when it comes to our columns will give",
    "start": "529709",
    "end": "531390"
  },
  {
    "text": "the first column a fixed width the two",
    "start": "531390",
    "end": "533820"
  },
  {
    "text": "middle columns",
    "start": "533820",
    "end": "534540"
  },
  {
    "text": "auto property to automatically resize",
    "start": "534540",
    "end": "536490"
  },
  {
    "text": "based on the viewport and then the last",
    "start": "536490",
    "end": "538320"
  },
  {
    "text": "column a fixed width also 240 then the",
    "start": "538320",
    "end": "541170"
  },
  {
    "text": "next step is to place the children in",
    "start": "541170",
    "end": "542970"
  },
  {
    "text": "their appropriate grid area now because",
    "start": "542970",
    "end": "544860"
  },
  {
    "text": "I have all the children laid out in a",
    "start": "544860",
    "end": "546180"
  },
  {
    "text": "logical order I'm going to use enth",
    "start": "546180",
    "end": "547860"
  },
  {
    "text": "child to select them but you could",
    "start": "547860",
    "end": "549540"
  },
  {
    "text": "definitely use your own custom class",
    "start": "549540",
    "end": "551190"
  },
  {
    "text": "names here as well the important thing",
    "start": "551190",
    "end": "553139"
  },
  {
    "text": "to notice is that we're applying grid",
    "start": "553139",
    "end": "554550"
  },
  {
    "text": "area a to this element no matter where",
    "start": "554550",
    "end": "556829"
  },
  {
    "text": "it sits in the container it will take up",
    "start": "556829",
    "end": "558449"
  },
  {
    "text": "that grid template area you defined",
    "start": "558449",
    "end": "560100"
  },
  {
    "text": "above now we'll repeat this process for",
    "start": "560100",
    "end": "562440"
  },
  {
    "text": "every single area in the grid the end",
    "start": "562440",
    "end": "564449"
  },
  {
    "text": "result is this grid with all the",
    "start": "564449",
    "end": "565800"
  },
  {
    "text": "children in the appropriate spots and",
    "start": "565800",
    "end": "567480"
  },
  {
    "text": "now how do we impress our friends with",
    "start": "567480",
    "end": "569790"
  },
  {
    "text": "this fancy staggered intro animation",
    "start": "569790",
    "end": "571740"
  },
  {
    "text": "well the first thing I'm going to do is",
    "start": "571740",
    "end": "573449"
  },
  {
    "text": "set up a variable for the staggered",
    "start": "573449",
    "end": "575100"
  },
  {
    "text": "delay this will allow us to change the",
    "start": "575100",
    "end": "576839"
  },
  {
    "text": "timing without having to manually update",
    "start": "576839",
    "end": "578880"
  },
  {
    "text": "the delay for all thirteen elements next",
    "start": "578880",
    "end": "581579"
  },
  {
    "text": "we're going to need a keyframes",
    "start": "581579",
    "end": "582930"
  },
  {
    "text": "animation if you're not familiar with",
    "start": "582930",
    "end": "584730"
  },
  {
    "text": "keyframes they basically allow you to",
    "start": "584730",
    "end": "586589"
  },
  {
    "text": "move from one set of properties to",
    "start": "586589",
    "end": "588120"
  },
  {
    "text": "another from as the starting point to is",
    "start": "588120",
    "end": "590339"
  },
  {
    "text": "the ending point we want to start with",
    "start": "590339",
    "end": "591990"
  },
  {
    "text": "an opacity of zero or invisible a scale",
    "start": "591990",
    "end": "594360"
  },
  {
    "text": "of zero point three and then we'll also",
    "start": "594360",
    "end": "596550"
  },
  {
    "text": "rotate the color by a hundred and eighty",
    "start": "596550",
    "end": "598199"
  },
  {
    "text": "degrees that's how I create that",
    "start": "598199",
    "end": "599880"
  },
  {
    "text": "rainbow-like color change when the items",
    "start": "599880",
    "end": "601620"
  },
  {
    "text": "are animated in when the animation is",
    "start": "601620",
    "end": "603510"
  },
  {
    "text": "complete the opacity should be 1 the",
    "start": "603510",
    "end": "605579"
  },
  {
    "text": "scale should be 1 and the heat rotate",
    "start": "605579",
    "end": "607560"
  },
  {
    "text": "should be 0 now CSS will automatically",
    "start": "607560",
    "end": "610529"
  },
  {
    "text": "interpolate between the starting and",
    "start": "610529",
    "end": "612149"
  },
  {
    "text": "ending values based on the amount of",
    "start": "612149",
    "end": "613860"
  },
  {
    "text": "time that we specify for the animation",
    "start": "613860",
    "end": "615600"
  },
  {
    "text": "we can apply this animation to all the",
    "start": "615600",
    "end": "617610"
  },
  {
    "text": "cards by setting it as the animation",
    "start": "617610",
    "end": "619500"
  },
  {
    "text": "name then we'll also give it a duration",
    "start": "619500",
    "end": "621690"
  },
  {
    "text": "of 700 milliseconds and a timing",
    "start": "621690",
    "end": "623850"
  },
  {
    "text": "function of ease out now one last",
    "start": "623850",
    "end": "626040"
  },
  {
    "text": "important point here is that we also",
    "start": "626040",
    "end": "627569"
  },
  {
    "text": "need to set the animation film mode to",
    "start": "627569",
    "end": "629760"
  },
  {
    "text": "backwards this will set the elements to",
    "start": "629760",
    "end": "631829"
  },
  {
    "text": "their first keyframe value which in our",
    "start": "631829",
    "end": "633360"
  },
  {
    "text": "case will be invisible otherwise the",
    "start": "633360",
    "end": "635190"
  },
  {
    "text": "cards would be visible before the",
    "start": "635190",
    "end": "636360"
  },
  {
    "text": "animation starts and that just wouldn't",
    "start": "636360",
    "end": "638189"
  },
  {
    "text": "look right at all that takes care of the",
    "start": "638189",
    "end": "639839"
  },
  {
    "text": "animation but now we want to stagger it",
    "start": "639839",
    "end": "641880"
  },
  {
    "text": "and we can do that by setting an",
    "start": "641880",
    "end": "643439"
  },
  {
    "text": "animation delay on each individual",
    "start": "643439",
    "end": "645449"
  },
  {
    "text": "element but we want to do this in a",
    "start": "645449",
    "end": "647040"
  },
  {
    "text": "smart way so if we decide to change the",
    "start": "647040",
    "end": "648959"
  },
  {
    "text": "delay we don't have to update all 13",
    "start": "648959",
    "end": "650970"
  },
  {
    "text": "items to help us I'm going to use the",
    "start": "650970",
    "end": "653250"
  },
  {
    "text": "CSS calc function it can perform basic",
    "start": "653250",
    "end": "655410"
  },
  {
    "text": "calculations on numeric values for the",
    "start": "655410",
    "end": "657750"
  },
  {
    "text": "first item we'll say 1 times the stagger",
    "start": "657750",
    "end": "659850"
  },
  {
    "text": "delay for the second item we'll say 2",
    "start": "659850",
    "end": "661889"
  },
  {
    "text": "times the stagger delay and we'll keep",
    "start": "661889",
    "end": "663750"
  },
  {
    "text": "increasing that for all 13 items and",
    "start": "663750",
    "end": "665850"
  },
  {
    "text": "there's still obviously a lot of code",
    "start": "665850",
    "end": "667709"
  },
  {
    "text": "duplicate",
    "start": "667709",
    "end": "668130"
  },
  {
    "text": "here but you could make this much more",
    "start": "668130",
    "end": "669660"
  },
  {
    "text": "efficient by using something like SAS",
    "start": "669660",
    "end": "671310"
  },
  {
    "text": "where you can run a programmatic for",
    "start": "671310",
    "end": "673050"
  },
  {
    "text": "loop and that's basically all there is",
    "start": "673050",
    "end": "674610"
  },
  {
    "text": "to it we now have this unique animated",
    "start": "674610",
    "end": "676530"
  },
  {
    "text": "grid without any JavaScript or external",
    "start": "676530",
    "end": "678930"
  },
  {
    "text": "CSS framework I'm gonna go ahead and",
    "start": "678930",
    "end": "680670"
  },
  {
    "text": "wrap things up there if this video",
    "start": "680670",
    "end": "682050"
  },
  {
    "text": "helped you please like and subscribe and",
    "start": "682050",
    "end": "683700"
  },
  {
    "text": "make sure to grab the full source code",
    "start": "683700",
    "end": "685200"
  },
  {
    "text": "on fire ship IO thanks for watching and",
    "start": "685200",
    "end": "687690"
  },
  {
    "text": "I will see you in the next one",
    "start": "687690",
    "end": "690530"
  },
  {
    "text": "[Music]",
    "start": "690530",
    "end": "698690"
  }
]