[
  {
    "start": "0",
    "end": "46000"
  },
  {
    "text": "I can hack into your firebase app in",
    "start": "0",
    "end": "4110"
  },
  {
    "text": "about 10 seconds then steal and delete",
    "start": "4110",
    "end": "6210"
  },
  {
    "text": "all your data assuming you fail to set",
    "start": "6210",
    "end": "8099"
  },
  {
    "text": "up back-end security rules allow me to",
    "start": "8099",
    "end": "10200"
  },
  {
    "text": "show you all I have to do is pull up an",
    "start": "10200",
    "end": "12179"
  },
  {
    "text": "app and go into the chrome developer",
    "start": "12179",
    "end": "14009"
  },
  {
    "text": "tools under the network tab then find a",
    "start": "14009",
    "end": "16139"
  },
  {
    "text": "request coming from firebase open up the",
    "start": "16139",
    "end": "18510"
  },
  {
    "text": "headers and find the corresponding",
    "start": "18510",
    "end": "20070"
  },
  {
    "text": "project ID from there I can just go to",
    "start": "20070",
    "end": "22949"
  },
  {
    "text": "the command line and run a curl delete",
    "start": "22949",
    "end": "25289"
  },
  {
    "text": "request to the firebase REST API and",
    "start": "25289",
    "end": "27779"
  },
  {
    "text": "start wiping out this app's database if",
    "start": "27779",
    "end": "29939"
  },
  {
    "text": "you deploy a firebase app without",
    "start": "29939",
    "end": "31320"
  },
  {
    "text": "backend rules anybody can do this to",
    "start": "31320",
    "end": "33390"
  },
  {
    "text": "your app as well today I'm going to show",
    "start": "33390",
    "end": "35190"
  },
  {
    "text": "you how to keep your firestore database",
    "start": "35190",
    "end": "36540"
  },
  {
    "text": "secure by writing expressive",
    "start": "36540",
    "end": "38300"
  },
  {
    "text": "easy-to-understand back-end security",
    "start": "38300",
    "end": "40410"
  },
  {
    "text": "rules if you're new here like and",
    "start": "40410",
    "end": "42540"
  },
  {
    "text": "subscribe and grab the source code from",
    "start": "42540",
    "end": "44550"
  },
  {
    "text": "angular firebase comm to get started",
    "start": "44550",
    "end": "47309"
  },
  {
    "start": "46000",
    "end": "114000"
  },
  {
    "text": "you'll want to go to the firestore",
    "start": "47309",
    "end": "48719"
  },
  {
    "text": "database and then open up the rules tab",
    "start": "48719",
    "end": "51020"
  },
  {
    "text": "rules are defined in their own special",
    "start": "51020",
    "end": "53190"
  },
  {
    "text": "language that somewhat resembles",
    "start": "53190",
    "end": "54960"
  },
  {
    "text": "JavaScript currently the arrows pointing",
    "start": "54960",
    "end": "57270"
  },
  {
    "text": "to the root of our database and all of",
    "start": "57270",
    "end": "59160"
  },
  {
    "text": "our rules logic will be defined inside",
    "start": "59160",
    "end": "61230"
  },
  {
    "text": "this block then we use the match keyword",
    "start": "61230",
    "end": "63930"
  },
  {
    "text": "to point two paths in our database where",
    "start": "63930",
    "end": "66390"
  },
  {
    "text": "we want to apply rules in this case",
    "start": "66390",
    "end": "68460"
  },
  {
    "text": "we're using that equals star star to",
    "start": "68460",
    "end": "70950"
  },
  {
    "text": "match every single document in the",
    "start": "70950",
    "end": "72659"
  },
  {
    "text": "database then we use the allow keyword",
    "start": "72659",
    "end": "74790"
  },
  {
    "text": "followed by the operation that we want",
    "start": "74790",
    "end": "76680"
  },
  {
    "text": "to set a rule for in this case reader",
    "start": "76680",
    "end": "78390"
  },
  {
    "text": "right if we leave it blank it's going to",
    "start": "78390",
    "end": "80640"
  },
  {
    "text": "allow those operations or we can write",
    "start": "80640",
    "end": "82860"
  },
  {
    "text": "an expression that returns true or false",
    "start": "82860",
    "end": "84659"
  },
  {
    "text": "to apply some actual rule logic to this",
    "start": "84659",
    "end": "87150"
  },
  {
    "text": "route for example if we wanted to",
    "start": "87150",
    "end": "89009"
  },
  {
    "text": "completely lock down all documents we",
    "start": "89009",
    "end": "91170"
  },
  {
    "text": "could say if false and then nobody could",
    "start": "91170",
    "end": "93450"
  },
  {
    "text": "read or write from the client-side if I",
    "start": "93450",
    "end": "96299"
  },
  {
    "text": "try to query a collection from my",
    "start": "96299",
    "end": "98009"
  },
  {
    "text": "front-end app I'm going to get an error",
    "start": "98009",
    "end": "99750"
  },
  {
    "text": "in the browser console so cool now our",
    "start": "99750",
    "end": "102479"
  },
  {
    "text": "apps 100% secure but that's a little too",
    "start": "102479",
    "end": "104850"
  },
  {
    "text": "secure now we're going to write some",
    "start": "104850",
    "end": "107070"
  },
  {
    "text": "rules that perform logic based on user",
    "start": "107070",
    "end": "109110"
  },
  {
    "text": "authentication the underlying data the",
    "start": "109110",
    "end": "111270"
  },
  {
    "text": "incoming request time etc first let's",
    "start": "111270",
    "end": "114390"
  },
  {
    "start": "114000",
    "end": "145000"
  },
  {
    "text": "look at the various types of requests",
    "start": "114390",
    "end": "115950"
  },
  {
    "text": "that we can lock down first we have get",
    "start": "115950",
    "end": "118320"
  },
  {
    "text": "which would apply to reading a specific",
    "start": "118320",
    "end": "120630"
  },
  {
    "text": "document then list would apply to a",
    "start": "120630",
    "end": "122700"
  },
  {
    "text": "collection query so those are our read",
    "start": "122700",
    "end": "125610"
  },
  {
    "text": "rules then our write rules we have",
    "start": "125610",
    "end": "127619"
  },
  {
    "text": "create which applies to creating new",
    "start": "127619",
    "end": "129390"
  },
  {
    "text": "data update for modifying existing data",
    "start": "129390",
    "end": "132920"
  },
  {
    "text": "and delete for removing data in addition",
    "start": "132920",
    "end": "135470"
  },
  {
    "text": "we could say allow read which would just",
    "start": "135470",
    "end": "137750"
  },
  {
    "text": "combine getting lists or we could also",
    "start": "137750",
    "end": "139790"
  },
  {
    "text": "say allow right which would can buy and",
    "start": "139790",
    "end": "142520"
  },
  {
    "text": "create update delete into a single rule",
    "start": "142520",
    "end": "144910"
  },
  {
    "text": "so that's how we scoped rules to",
    "start": "144910",
    "end": "147230"
  },
  {
    "start": "145000",
    "end": "240000"
  },
  {
    "text": "specific operations now I want to show",
    "start": "147230",
    "end": "149569"
  },
  {
    "text": "you how to point to the actual data that",
    "start": "149569",
    "end": "151550"
  },
  {
    "text": "we want to apply these rules to the",
    "start": "151550",
    "end": "154280"
  },
  {
    "text": "first thing to make note of is the equal",
    "start": "154280",
    "end": "156200"
  },
  {
    "text": "star star that special syntax is going",
    "start": "156200",
    "end": "158840"
  },
  {
    "text": "to tell your rules to cascade down to",
    "start": "158840",
    "end": "160550"
  },
  {
    "text": "all sub collections and anything nested",
    "start": "160550",
    "end": "163160"
  },
  {
    "text": "under that path that's useful when you",
    "start": "163160",
    "end": "165080"
  },
  {
    "text": "have a rule that's applied to many",
    "start": "165080",
    "end": "166430"
  },
  {
    "text": "different collections such as verifying",
    "start": "166430",
    "end": "168500"
  },
  {
    "text": "a user is authenticated you can also",
    "start": "168500",
    "end": "171019"
  },
  {
    "text": "make your rules very specific for",
    "start": "171019",
    "end": "172910"
  },
  {
    "text": "example we can point to a specific",
    "start": "172910",
    "end": "174410"
  },
  {
    "text": "document using that document ID all you",
    "start": "174410",
    "end": "177620"
  },
  {
    "text": "have to do is hard code it directly into",
    "start": "177620",
    "end": "179510"
  },
  {
    "text": "the path and then write the",
    "start": "179510",
    "end": "180890"
  },
  {
    "text": "corresponding rules that can be useful",
    "start": "180890",
    "end": "183110"
  },
  {
    "text": "sometimes but the single most useful",
    "start": "183110",
    "end": "184700"
  },
  {
    "text": "matcher is the wild-card ID instead of",
    "start": "184700",
    "end": "187760"
  },
  {
    "text": "hard-coding the ID we just add brackets",
    "start": "187760",
    "end": "189769"
  },
  {
    "text": "with a variable name that we can",
    "start": "189769",
    "end": "191600"
  },
  {
    "text": "evaluate as the ID at runtime by setting",
    "start": "191600",
    "end": "194900"
  },
  {
    "text": "product ID right here we can use that as",
    "start": "194900",
    "end": "196880"
  },
  {
    "text": "a variable that represents the document",
    "start": "196880",
    "end": "198650"
  },
  {
    "text": "ID then we can evaluate that ID in the",
    "start": "198650",
    "end": "200930"
  },
  {
    "text": "actual allow statement which will see an",
    "start": "200930",
    "end": "203000"
  },
  {
    "text": "action here throughout the lesson and",
    "start": "203000",
    "end": "204530"
  },
  {
    "text": "the wild-card is by far the most common",
    "start": "204530",
    "end": "206570"
  },
  {
    "text": "matcher that you're going to be using",
    "start": "206570",
    "end": "207980"
  },
  {
    "text": "throughout your back-end rules I'd also",
    "start": "207980",
    "end": "211489"
  },
  {
    "text": "like to point out that your rules are",
    "start": "211489",
    "end": "213079"
  },
  {
    "text": "secure by default so unless you",
    "start": "213079",
    "end": "215120"
  },
  {
    "text": "explicitly allow an operation it's going",
    "start": "215120",
    "end": "217340"
  },
  {
    "text": "to be blocked by firestore and my demo",
    "start": "217340",
    "end": "220130"
  },
  {
    "text": "here I'm allowing the user to read the",
    "start": "220130",
    "end": "221720"
  },
  {
    "text": "documents but only delete a document if",
    "start": "221720",
    "end": "224060"
  },
  {
    "text": "they are logged in we can figure that",
    "start": "224060",
    "end": "226280"
  },
  {
    "text": "out by looking at the request object",
    "start": "226280",
    "end": "227870"
  },
  {
    "text": "that is built into the rules environment",
    "start": "227870",
    "end": "230180"
  },
  {
    "text": "the request object is very important and",
    "start": "230180",
    "end": "232400"
  },
  {
    "text": "for one it gives us information about",
    "start": "232400",
    "end": "233989"
  },
  {
    "text": "the current user to simply see if the",
    "start": "233989",
    "end": "236390"
  },
  {
    "text": "users logged in we can see if the",
    "start": "236390",
    "end": "238160"
  },
  {
    "text": "request off does not equal null so",
    "start": "238160",
    "end": "241489"
  },
  {
    "start": "240000",
    "end": "406000"
  },
  {
    "text": "that's pretty cool but the thing I don't",
    "start": "241489",
    "end": "242989"
  },
  {
    "text": "like about it is that it doesn't read",
    "start": "242989",
    "end": "244670"
  },
  {
    "text": "very well that brings me to my favorite",
    "start": "244670",
    "end": "247100"
  },
  {
    "text": "part of firestore rules and that's the",
    "start": "247100",
    "end": "249139"
  },
  {
    "text": "ability to write your own custom",
    "start": "249139",
    "end": "250310"
  },
  {
    "text": "functions functions allow us to",
    "start": "250310",
    "end": "253100"
  },
  {
    "text": "repurpose our rules in a way that's dry",
    "start": "253100",
    "end": "255230"
  },
  {
    "text": "and readable so instead of writing if",
    "start": "255230",
    "end": "258109"
  },
  {
    "text": "request auth does not equal null a whole",
    "start": "258109",
    "end": "260060"
  },
  {
    "text": "bunch of times I'm going to write a",
    "start": "260060",
    "end": "261470"
  },
  {
    "text": "function called is signed in the",
    "start": "261470",
    "end": "264169"
  },
  {
    "text": "function will just return the request",
    "start": "264169",
    "end": "265909"
  },
  {
    "text": "auth does not",
    "start": "265909",
    "end": "266660"
  },
  {
    "text": "a null statement then we can replace it",
    "start": "266660",
    "end": "268910"
  },
  {
    "text": "on the allow line and now it just reads",
    "start": "268910",
    "end": "271550"
  },
  {
    "text": "like a plain English sentence that",
    "start": "271550",
    "end": "273110"
  },
  {
    "text": "anybody can understand allow delete if",
    "start": "273110",
    "end": "275720"
  },
  {
    "text": "signed in pretty simple my goal from",
    "start": "275720",
    "end": "278270"
  },
  {
    "text": "here on out is to give you a bunch of",
    "start": "278270",
    "end": "279620"
  },
  {
    "text": "helper functions that you can easily",
    "start": "279620",
    "end": "281270"
  },
  {
    "text": "reuse in your own project the next thing",
    "start": "281270",
    "end": "284330"
  },
  {
    "text": "we might want to do is determine whether",
    "start": "284330",
    "end": "285980"
  },
  {
    "text": "or not a user is the owner of a certain",
    "start": "285980",
    "end": "288290"
  },
  {
    "text": "document a good example might be a user",
    "start": "288290",
    "end": "291260"
  },
  {
    "text": "profile where all users can read other",
    "start": "291260",
    "end": "293660"
  },
  {
    "text": "users profiles but only the owner can",
    "start": "293660",
    "end": "296270"
  },
  {
    "text": "write to it so here we're matching the",
    "start": "296270",
    "end": "299360"
  },
  {
    "text": "users user ID document and allowing read",
    "start": "299360",
    "end": "302450"
  },
  {
    "text": "if they're signed in but only allowing",
    "start": "302450",
    "end": "304550"
  },
  {
    "text": "write if they're the owner user and",
    "start": "304550",
    "end": "306620"
  },
  {
    "text": "notice how we're passing the wild card",
    "start": "306620",
    "end": "308870"
  },
  {
    "text": "variable to the argument in our function",
    "start": "308870",
    "end": "311200"
  },
  {
    "text": "for this to work it's important that the",
    "start": "311200",
    "end": "313850"
  },
  {
    "text": "document ID matches the user ID and if",
    "start": "313850",
    "end": "316640"
  },
  {
    "text": "you've seen my authentication tutorials",
    "start": "316640",
    "end": "318290"
  },
  {
    "text": "you'll know how to do that then when",
    "start": "318290",
    "end": "320480"
  },
  {
    "text": "defining this function all we have to do",
    "start": "320480",
    "end": "322280"
  },
  {
    "text": "is look at the auth user ID on the",
    "start": "322280",
    "end": "324830"
  },
  {
    "text": "request and compare it to the user ID on",
    "start": "324830",
    "end": "327470"
  },
  {
    "text": "that document that we passed as the",
    "start": "327470",
    "end": "329240"
  },
  {
    "text": "argument if the IDS are the same then we",
    "start": "329240",
    "end": "331940"
  },
  {
    "text": "know that the current user is the owner",
    "start": "331940",
    "end": "333890"
  },
  {
    "text": "of this document and we can actually get",
    "start": "333890",
    "end": "336950"
  },
  {
    "text": "a lot more sophisticated let's say we",
    "start": "336950",
    "end": "338900"
  },
  {
    "text": "want to determine whether or not a user",
    "start": "338900",
    "end": "340850"
  },
  {
    "text": "has a verified email I'm going to use an",
    "start": "340850",
    "end": "344360"
  },
  {
    "text": "and statement to chain another function",
    "start": "344360",
    "end": "346490"
  },
  {
    "text": "to our rule with an and statement both",
    "start": "346490",
    "end": "349130"
  },
  {
    "text": "functions will need to return true for",
    "start": "349130",
    "end": "351050"
  },
  {
    "text": "this rule to pass you can also change",
    "start": "351050",
    "end": "353240"
  },
  {
    "text": "things together with an or statement to",
    "start": "353240",
    "end": "355070"
  },
  {
    "text": "check if only one of the conditions is",
    "start": "355070",
    "end": "356780"
  },
  {
    "text": "true but in this case we want to make",
    "start": "356780",
    "end": "358550"
  },
  {
    "text": "sure that users the owner and that they",
    "start": "358550",
    "end": "360230"
  },
  {
    "text": "have a verified email like I mentioned",
    "start": "360230",
    "end": "362510"
  },
  {
    "text": "before the request object has all kinds",
    "start": "362510",
    "end": "364790"
  },
  {
    "text": "of useful information in this case we're",
    "start": "364790",
    "end": "366860"
  },
  {
    "text": "going to look at the token on the auth",
    "start": "366860",
    "end": "368630"
  },
  {
    "text": "object that contains an email verified",
    "start": "368630",
    "end": "371300"
  },
  {
    "text": "property of true or false we can also",
    "start": "371300",
    "end": "373880"
  },
  {
    "text": "see when a user signed up if they're",
    "start": "373880",
    "end": "375710"
  },
  {
    "text": "anonymous if they have a phone number to",
    "start": "375710",
    "end": "377840"
  },
  {
    "text": "compose all kinds of other useful rules",
    "start": "377840",
    "end": "379669"
  },
  {
    "text": "but another common thing you'll need in",
    "start": "379669",
    "end": "381380"
  },
  {
    "text": "your rules is to know what the existing",
    "start": "381380",
    "end": "383210"
  },
  {
    "text": "data looks like as compared to the",
    "start": "383210",
    "end": "385160"
  },
  {
    "text": "incoming data to get the existing data",
    "start": "385160",
    "end": "387890"
  },
  {
    "text": "you can use the resource keyword",
    "start": "387890",
    "end": "389510"
  },
  {
    "text": "followed by data but try not to confuse",
    "start": "389510",
    "end": "392300"
  },
  {
    "text": "that with request resource data I",
    "start": "392300",
    "end": "394550"
  },
  {
    "text": "recommend writing functions as existing",
    "start": "394550",
    "end": "396950"
  },
  {
    "text": "data and incoming data just to make this",
    "start": "396950",
    "end": "399110"
  },
  {
    "text": "very explicit and clear",
    "start": "399110",
    "end": "400639"
  },
  {
    "text": "because these are easy to mix up and",
    "start": "400639",
    "end": "402470"
  },
  {
    "text": "it's really important that you don't",
    "start": "402470",
    "end": "404449"
  },
  {
    "text": "mess up your back-end rules so when",
    "start": "404449",
    "end": "407270"
  },
  {
    "start": "406000",
    "end": "454000"
  },
  {
    "text": "might you need existing data a common",
    "start": "407270",
    "end": "409639"
  },
  {
    "text": "use case would be if you have a certain",
    "start": "409639",
    "end": "411289"
  },
  {
    "text": "document that maybe gets locked after",
    "start": "411289",
    "end": "413300"
  },
  {
    "text": "it's published if we jump up to the",
    "start": "413300",
    "end": "415819"
  },
  {
    "text": "products path we can look at the",
    "start": "415819",
    "end": "417530"
  },
  {
    "text": "existing product document and we'll make",
    "start": "417530",
    "end": "419960"
  },
  {
    "text": "sure that it's not locked before running",
    "start": "419960",
    "end": "422150"
  },
  {
    "text": "the update checking existing data is",
    "start": "422150",
    "end": "424400"
  },
  {
    "text": "usually most important when your users",
    "start": "424400",
    "end": "426319"
  },
  {
    "text": "can control whether or not a document",
    "start": "426319",
    "end": "428360"
  },
  {
    "text": "should be modified at some point when it",
    "start": "428360",
    "end": "430759"
  },
  {
    "text": "comes to incoming data there's all kinds",
    "start": "430759",
    "end": "432710"
  },
  {
    "text": "of validation rules that we can apply to",
    "start": "432710",
    "end": "434569"
  },
  {
    "text": "our underlying data structure let's",
    "start": "434569",
    "end": "436819"
  },
  {
    "text": "imagine that our product document of",
    "start": "436819",
    "end": "439520"
  },
  {
    "text": "greater than $10 so if the user tries to",
    "start": "439520",
    "end": "442639"
  },
  {
    "text": "send an update where the price is less",
    "start": "442639",
    "end": "444740"
  },
  {
    "text": "than $10 we're going to cause this",
    "start": "444740",
    "end": "446960"
  },
  {
    "text": "update to fail so looking at the",
    "start": "446960",
    "end": "449419"
  },
  {
    "text": "incoming data is very important for",
    "start": "449419",
    "end": "451580"
  },
  {
    "text": "maintaining the integrity of your",
    "start": "451580",
    "end": "453259"
  },
  {
    "text": "database now switching gears in episode",
    "start": "453259",
    "end": "456860"
  },
  {
    "start": "454000",
    "end": "604000"
  },
  {
    "text": "75 I talked about rule-based user",
    "start": "456860",
    "end": "459020"
  },
  {
    "text": "authorization and I want to revisit some",
    "start": "459020",
    "end": "461360"
  },
  {
    "text": "of those concepts now in that lesson we",
    "start": "461360",
    "end": "463639"
  },
  {
    "text": "saved information about the user's role",
    "start": "463639",
    "end": "465259"
  },
  {
    "text": "on their user document and we need to",
    "start": "465259",
    "end": "467779"
  },
  {
    "text": "read that document when applying a rule",
    "start": "467779",
    "end": "469550"
  },
  {
    "text": "to various parts of the database this",
    "start": "469550",
    "end": "472039"
  },
  {
    "text": "documents not going to be available on",
    "start": "472039",
    "end": "473750"
  },
  {
    "text": "the user object so we're going to need a",
    "start": "473750",
    "end": "476089"
  },
  {
    "text": "different mechanism to read the document",
    "start": "476089",
    "end": "478190"
  },
  {
    "text": "whenever needed the rules environment",
    "start": "478190",
    "end": "480620"
  },
  {
    "text": "has a get keyword that will read a",
    "start": "480620",
    "end": "482839"
  },
  {
    "text": "document by pointing to a specific path",
    "start": "482839",
    "end": "485000"
  },
  {
    "text": "we need to use the absolute path so this",
    "start": "485000",
    "end": "487400"
  },
  {
    "text": "gets pretty verbose but if you put it",
    "start": "487400",
    "end": "489560"
  },
  {
    "text": "into a function then it's not too bad we",
    "start": "489560",
    "end": "491930"
  },
  {
    "text": "write out the path like normal and then",
    "start": "491930",
    "end": "493849"
  },
  {
    "text": "use dollar sign parentheses and",
    "start": "493849",
    "end": "495680"
  },
  {
    "text": "interpolate the request auth user ID",
    "start": "495680",
    "end": "498440"
  },
  {
    "text": "this gives us the current users document",
    "start": "498440",
    "end": "501020"
  },
  {
    "text": "and firestore which contains information",
    "start": "501020",
    "end": "502669"
  },
  {
    "text": "about their authorized roles now let's",
    "start": "502669",
    "end": "506000"
  },
  {
    "text": "use this function to authorize a user to",
    "start": "506000",
    "end": "508009"
  },
  {
    "text": "update a product we can read the",
    "start": "508009",
    "end": "510919"
  },
  {
    "text": "document and then we have an object of",
    "start": "510919",
    "end": "512839"
  },
  {
    "text": "roles so we can get all of the keys from",
    "start": "512839",
    "end": "515240"
  },
  {
    "text": "that object by calling keys on it then",
    "start": "515240",
    "end": "517698"
  },
  {
    "text": "has any will check if the user has any",
    "start": "517699",
    "end": "520010"
  },
  {
    "text": "of these authorized roles such as editor",
    "start": "520010",
    "end": "521930"
  },
  {
    "text": "or admin you can also use has all to",
    "start": "521930",
    "end": "525110"
  },
  {
    "text": "make sure that the user has all of these",
    "start": "525110",
    "end": "526760"
  },
  {
    "text": "roles at the end of the day that gives",
    "start": "526760",
    "end": "529310"
  },
  {
    "text": "you a very simple solution for",
    "start": "529310",
    "end": "530720"
  },
  {
    "text": "implementing rule-based user",
    "start": "530720",
    "end": "532370"
  },
  {
    "text": "authorization another",
    "start": "532370",
    "end": "534440"
  },
  {
    "text": "interesting thing to think about is how",
    "start": "534440",
    "end": "536030"
  },
  {
    "text": "time impacts your database security a",
    "start": "536030",
    "end": "538310"
  },
  {
    "text": "common scenario is to throttle the",
    "start": "538310",
    "end": "540890"
  },
  {
    "text": "amount of data that a user can create",
    "start": "540890",
    "end": "542510"
  },
  {
    "text": "during a certain duration of time we can",
    "start": "542510",
    "end": "545300"
  },
  {
    "text": "get the current time of any request by",
    "start": "545300",
    "end": "547130"
  },
  {
    "text": "just calling request time then there's a",
    "start": "547130",
    "end": "549590"
  },
  {
    "text": "duration helper that we can use to",
    "start": "549590",
    "end": "551210"
  },
  {
    "text": "operate on the time stamp for example we",
    "start": "551210",
    "end": "554090"
  },
  {
    "text": "want to make sure the request time comes",
    "start": "554090",
    "end": "555680"
  },
  {
    "text": "after the created at time stamp plus a",
    "start": "555680",
    "end": "558470"
  },
  {
    "text": "duration of 60 seconds in other words",
    "start": "558470",
    "end": "561320"
  },
  {
    "text": "the user can only write to a product",
    "start": "561320",
    "end": "563180"
  },
  {
    "text": "document every 60 seconds so duration",
    "start": "563180",
    "end": "565970"
  },
  {
    "text": "just allows you to add a number of",
    "start": "565970",
    "end": "567500"
  },
  {
    "text": "seconds minutes or hours and compare",
    "start": "567500",
    "end": "569720"
  },
  {
    "text": "them to a firestore timestamp I'm going",
    "start": "569720",
    "end": "573440"
  },
  {
    "text": "to go ahead and wrap up there hopefully",
    "start": "573440",
    "end": "574760"
  },
  {
    "text": "this helps you avoid becoming the next",
    "start": "574760",
    "end": "576290"
  },
  {
    "text": "major data breach victim if this video",
    "start": "576290",
    "end": "578510"
  },
  {
    "text": "helped you please like and subscribe and",
    "start": "578510",
    "end": "580310"
  },
  {
    "text": "if you're ready to take things to the",
    "start": "580310",
    "end": "581840"
  },
  {
    "text": "next level consider becoming a pro",
    "start": "581840",
    "end": "583700"
  },
  {
    "text": "subscriber at angular firebase calm",
    "start": "583700",
    "end": "585890"
  },
  {
    "text": "you'll get a whole bunch of exclusive",
    "start": "585890",
    "end": "587450"
  },
  {
    "text": "content and direct access to chat with",
    "start": "587450",
    "end": "589700"
  },
  {
    "text": "me on slack thanks for watching and I'll",
    "start": "589700",
    "end": "592400"
  },
  {
    "text": "see you soon",
    "start": "592400",
    "end": "594760"
  }
]