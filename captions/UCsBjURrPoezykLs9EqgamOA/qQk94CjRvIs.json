[
  {
    "start": "0",
    "end": "8000"
  },
  {
    "text": "it is May 6 2023 and you're watching the",
    "start": "0",
    "end": "3179"
  },
  {
    "text": "code report serverless is the biggest",
    "start": "3179",
    "end": "4740"
  },
  {
    "text": "lie in the history of computers why you",
    "start": "4740",
    "end": "7500"
  },
  {
    "text": "always lying when you go serverless",
    "start": "7500",
    "end": "9780"
  },
  {
    "start": "8000",
    "end": "98000"
  },
  {
    "text": "you're still using a server it's just",
    "start": "9780",
    "end": "11700"
  },
  {
    "text": "not yours you'll compute nothing and be",
    "start": "11700",
    "end": "13620"
  },
  {
    "text": "happy Amazon Prime video just dropped a",
    "start": "13620",
    "end": "15839"
  },
  {
    "text": "shocking article explaining how they",
    "start": "15839",
    "end": "17580"
  },
  {
    "text": "saved 90 on their Amazon web services",
    "start": "17580",
    "end": "19859"
  },
  {
    "text": "bill by switching from serverless",
    "start": "19859",
    "end": "21720"
  },
  {
    "text": "microservices to an Old-Fashioned",
    "start": "21720",
    "end": "23699"
  },
  {
    "text": "monolith architecture that's great news",
    "start": "23699",
    "end": "25500"
  },
  {
    "text": "for Amazon because it'll save a ton of",
    "start": "25500",
    "end": "27180"
  },
  {
    "text": "money but bad news for Amazon because it",
    "start": "27180",
    "end": "29099"
  },
  {
    "text": "just lost a great Revenue Source the",
    "start": "29099",
    "end": "30779"
  },
  {
    "text": "article is sending shockwaves through",
    "start": "30779",
    "end": "32099"
  },
  {
    "text": "Tech right now because one of the main",
    "start": "32099",
    "end": "33600"
  },
  {
    "text": "claims of the serverless vision is that",
    "start": "33600",
    "end": "35280"
  },
  {
    "text": "you can scale infrastructure more",
    "start": "35280",
    "end": "36660"
  },
  {
    "text": "efficiently which in theory should cost",
    "start": "36660",
    "end": "38399"
  },
  {
    "text": "less money I really appreciate Amazon's",
    "start": "38399",
    "end": "40440"
  },
  {
    "text": "transparency here because they're one of",
    "start": "40440",
    "end": "42000"
  },
  {
    "text": "the original pioneers of serverless with",
    "start": "42000",
    "end": "43739"
  },
  {
    "text": "Lambda functions and nowadays you have",
    "start": "43739",
    "end": "45600"
  },
  {
    "text": "tons of platforms offering serverless",
    "start": "45600",
    "end": "47399"
  },
  {
    "text": "services like Purcell and netlify which",
    "start": "47399",
    "end": "49800"
  },
  {
    "text": "are actually just using and reselling",
    "start": "49800",
    "end": "51539"
  },
  {
    "text": "AWS Services behind the scenes there's",
    "start": "51539",
    "end": "53640"
  },
  {
    "text": "almost an entire industry of startups",
    "start": "53640",
    "end": "55379"
  },
  {
    "text": "that make AWS easier to use including",
    "start": "55379",
    "end": "57539"
  },
  {
    "text": "open source projects like the serverless",
    "start": "57539",
    "end": "59219"
  },
  {
    "text": "framework and S SST but not everyone is",
    "start": "59219",
    "end": "61739"
  },
  {
    "text": "drinking the Kool-Aid like dhh the",
    "start": "61739",
    "end": "63660"
  },
  {
    "text": "creator of Ruby on Rails and Basecamp",
    "start": "63660",
    "end": "65280"
  },
  {
    "text": "has been advocating for Majestic",
    "start": "65280",
    "end": "66960"
  },
  {
    "text": "monoliths for the last decade and took",
    "start": "66960",
    "end": "68820"
  },
  {
    "text": "his entire company off the cloud after",
    "start": "68820",
    "end": "70500"
  },
  {
    "text": "they spent over three million dollars in",
    "start": "70500",
    "end": "72180"
  },
  {
    "text": "one year now they just run their own",
    "start": "72180",
    "end": "73680"
  },
  {
    "text": "servers a lot of successful startups",
    "start": "73680",
    "end": "75540"
  },
  {
    "text": "like Dropbox end up leaving the cloud",
    "start": "75540",
    "end": "77220"
  },
  {
    "text": "once they get big enough however I",
    "start": "77220",
    "end": "78960"
  },
  {
    "text": "personally use serverless for my",
    "start": "78960",
    "end": "80220"
  },
  {
    "text": "projects and it's an absolute game",
    "start": "80220",
    "end": "81840"
  },
  {
    "text": "changer for getting things done quickly",
    "start": "81840",
    "end": "83340"
  },
  {
    "text": "although I have accidentally created a",
    "start": "83340",
    "end": "85140"
  },
  {
    "text": "few infinitely scaling infinite Loops",
    "start": "85140",
    "end": "87000"
  },
  {
    "text": "that could have potentially cost me an",
    "start": "87000",
    "end": "88560"
  },
  {
    "text": "infinite amount of money but what's the",
    "start": "88560",
    "end": "90180"
  },
  {
    "text": "difference between a microservice and",
    "start": "90180",
    "end": "91799"
  },
  {
    "text": "model with architecture at Prime video",
    "start": "91799",
    "end": "93659"
  },
  {
    "text": "they needed a tool to analyze audio",
    "start": "93659",
    "end": "95579"
  },
  {
    "text": "content or issues like video freeze and",
    "start": "95579",
    "end": "97860"
  },
  {
    "text": "Corruption to implement this tool they",
    "start": "97860",
    "end": "100020"
  },
  {
    "start": "98000",
    "end": "227000"
  },
  {
    "text": "use multiple serverless functions called",
    "start": "100020",
    "end": "101820"
  },
  {
    "text": "Step functions which are basically the",
    "start": "101820",
    "end": "103619"
  },
  {
    "text": "same thing as Lambda to handle different",
    "start": "103619",
    "end": "105299"
  },
  {
    "text": "responsibilities you have an initial",
    "start": "105299",
    "end": "106860"
  },
  {
    "text": "entry point which kicks off another",
    "start": "106860",
    "end": "108479"
  },
  {
    "text": "service to do a file conversion that",
    "start": "108479",
    "end": "110759"
  },
  {
    "text": "converts an audio video stream into",
    "start": "110759",
    "end": "112380"
  },
  {
    "text": "frames that can be used by the detector",
    "start": "112380",
    "end": "114180"
  },
  {
    "text": "you've got multiple detectors using",
    "start": "114180",
    "end": "115740"
  },
  {
    "text": "machine learning to analyze the video",
    "start": "115740",
    "end": "117299"
  },
  {
    "text": "then finally you have another function",
    "start": "117299",
    "end": "118920"
  },
  {
    "text": "to aggregate the result and store them",
    "start": "118920",
    "end": "120899"
  },
  {
    "text": "in a bucket but there's a little bit of",
    "start": "120899",
    "end": "122100"
  },
  {
    "text": "overhead every time you pass data from",
    "start": "122100",
    "end": "124020"
  },
  {
    "text": "one service to another they need to",
    "start": "124020",
    "end": "125640"
  },
  {
    "text": "serialize and deserialize data and",
    "start": "125640",
    "end": "127680"
  },
  {
    "text": "communicate over a network in this case",
    "start": "127680",
    "end": "129420"
  },
  {
    "text": "their service needed to run multiple",
    "start": "129420",
    "end": "130860"
  },
  {
    "text": "times for every second of a video stream",
    "start": "130860",
    "end": "132780"
  },
  {
    "text": "and they quickly hit a bottleneck with",
    "start": "132780",
    "end": "134400"
  },
  {
    "text": "their account limits just trying to",
    "start": "134400",
    "end": "135900"
  },
  {
    "text": "orchestrate the service in addition by",
    "start": "135900",
    "end": "138000"
  },
  {
    "text": "temporarily uploading files to S3 they",
    "start": "138000",
    "end": "140340"
  },
  {
    "text": "were burning through money just",
    "start": "140340",
    "end": "141360"
  },
  {
    "text": "accessing these files in the buckets",
    "start": "141360",
    "end": "142860"
  },
  {
    "text": "they realized that the distributed",
    "start": "142860",
    "end": "144420"
  },
  {
    "text": "architecture was the root cause of these",
    "start": "144420",
    "end": "146160"
  },
  {
    "text": "bottlenecks causing them to make a bold",
    "start": "146160",
    "end": "147900"
  },
  {
    "text": "decision to re-architect to a monolith",
    "start": "147900",
    "end": "150000"
  },
  {
    "text": "instead of running decoupled distributed",
    "start": "150000",
    "end": "151920"
  },
  {
    "text": "Services they took everything and made",
    "start": "151920",
    "end": "153720"
  },
  {
    "text": "it run on a single container all the",
    "start": "153720",
    "end": "155459"
  },
  {
    "text": "components are the same but now that",
    "start": "155459",
    "end": "156840"
  },
  {
    "text": "they run on a single server they can",
    "start": "156840",
    "end": "158580"
  },
  {
    "text": "only scale vertically that means to do",
    "start": "158580",
    "end": "160440"
  },
  {
    "text": "more work they'll need to make each",
    "start": "160440",
    "end": "161760"
  },
  {
    "text": "server bigger unlike the microservice",
    "start": "161760",
    "end": "163319"
  },
  {
    "text": "architecture which could scale",
    "start": "163319",
    "end": "164700"
  },
  {
    "text": "horizontally by creating more service",
    "start": "164700",
    "end": "166560"
  },
  {
    "text": "for each individual component based on",
    "start": "166560",
    "end": "168360"
  },
  {
    "text": "its scaling needs that seems like it",
    "start": "168360",
    "end": "169920"
  },
  {
    "text": "would be a drawback but it eliminated",
    "start": "169920",
    "end": "171360"
  },
  {
    "text": "all kinds of unnecessary communication",
    "start": "171360",
    "end": "173160"
  },
  {
    "text": "and network usage that reduced their",
    "start": "173160",
    "end": "175200"
  },
  {
    "text": "cost by 90 and for a product of this",
    "start": "175200",
    "end": "177599"
  },
  {
    "text": "magnitude that means millions of dollars",
    "start": "177599",
    "end": "179280"
  },
  {
    "text": "saved so I guess the takeaway is that if",
    "start": "179280",
    "end": "181200"
  },
  {
    "text": "you're using microservices you should",
    "start": "181200",
    "end": "182819"
  },
  {
    "text": "probably Cobble them together into a",
    "start": "182819",
    "end": "184440"
  },
  {
    "text": "monolith right now well not so fast in",
    "start": "184440",
    "end": "186540"
  },
  {
    "text": "this case the optimization was pretty",
    "start": "186540",
    "end": "187860"
  },
  {
    "text": "obvious famously back in 2008 Netflix",
    "start": "187860",
    "end": "190200"
  },
  {
    "text": "was based on a monolith architecture and",
    "start": "190200",
    "end": "192300"
  },
  {
    "text": "had a massive failure that motivated",
    "start": "192300",
    "end": "193980"
  },
  {
    "text": "them to break their architecture into",
    "start": "193980",
    "end": "195659"
  },
  {
    "text": "hundreds of different microservices that",
    "start": "195659",
    "end": "197519"
  },
  {
    "text": "can scale independently with fault",
    "start": "197519",
    "end": "199019"
  },
  {
    "text": "tolerance it might be more complex and",
    "start": "199019",
    "end": "200760"
  },
  {
    "text": "expensive but if Netflix goes down for a",
    "start": "200760",
    "end": "202620"
  },
  {
    "text": "few hours it'll cost them way more money",
    "start": "202620",
    "end": "204239"
  },
  {
    "text": "and lost memberships than for small",
    "start": "204239",
    "end": "206159"
  },
  {
    "text": "businesses like me I can easily deploy",
    "start": "206159",
    "end": "208019"
  },
  {
    "text": "my shitty JavaScript code without ever",
    "start": "208019",
    "end": "209640"
  },
  {
    "text": "having to think about infrastructure I",
    "start": "209640",
    "end": "211319"
  },
  {
    "text": "rarely even bust out of the free tier",
    "start": "211319",
    "end": "212760"
  },
  {
    "text": "and when I do it's money well spent",
    "start": "212760",
    "end": "214260"
  },
  {
    "text": "because I have peace of mind knowing",
    "start": "214260",
    "end": "215580"
  },
  {
    "text": "that I'm not going to deploy some bad",
    "start": "215580",
    "end": "216959"
  },
  {
    "text": "code to my monolith that takes down my",
    "start": "216959",
    "end": "218760"
  },
  {
    "text": "entire operation ultimately when it",
    "start": "218760",
    "end": "220500"
  },
  {
    "text": "comes to Cloud architecture there are no",
    "start": "220500",
    "end": "222420"
  },
  {
    "text": "Solutions only trade-offs this has been",
    "start": "222420",
    "end": "224400"
  },
  {
    "text": "the code report thanks for watching and",
    "start": "224400",
    "end": "226319"
  },
  {
    "text": "I will see you in the next one",
    "start": "226319",
    "end": "229340"
  }
]