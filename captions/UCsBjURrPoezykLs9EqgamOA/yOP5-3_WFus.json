[
  {
    "text": "if all your friends jumped off the edge",
    "start": "80",
    "end": "1680"
  },
  {
    "text": "of a cliff would you do it too in",
    "start": "1680",
    "end": "3360"
  },
  {
    "text": "today's video we'll find out all the hot",
    "start": "3360",
    "end": "5440"
  },
  {
    "text": "new game changing frameworks talk about",
    "start": "5440",
    "end": "7120"
  },
  {
    "text": "their ability to run on the edge using",
    "start": "7120",
    "end": "9280"
  },
  {
    "text": "serverless computing platforms like",
    "start": "9280",
    "end": "10960"
  },
  {
    "text": "cloudflare workers and vercell edge",
    "start": "10960",
    "end": "12960"
  },
  {
    "text": "functions and just a few days ago next",
    "start": "12960",
    "end": "14799"
  },
  {
    "text": "js released version 12.2 with the",
    "start": "14799",
    "end": "16880"
  },
  {
    "text": "ability to opt into the edge for",
    "start": "16880",
    "end": "18720"
  },
  {
    "text": "server-side rendering and api routes",
    "start": "18720",
    "end": "20880"
  },
  {
    "text": "sounds edgy but what does that even mean",
    "start": "20880",
    "end": "22880"
  },
  {
    "text": "is it some magic new way to make web",
    "start": "22880",
    "end": "24640"
  },
  {
    "text": "apps faster or just marketing nonsense",
    "start": "24640",
    "end": "26720"
  },
  {
    "text": "you can ignore coca-cola with a new",
    "start": "26720",
    "end": "28480"
  },
  {
    "text": "taste a new explosion of wonderfulness",
    "start": "28480",
    "end": "30960"
  },
  {
    "text": "in your mouth i did some actual",
    "start": "30960",
    "end": "32320"
  },
  {
    "text": "benchmarking between vircell edge",
    "start": "32320",
    "end": "34000"
  },
  {
    "text": "functions and firebase cloud functions",
    "start": "34000",
    "end": "36000"
  },
  {
    "text": "to find out which one is faster in the",
    "start": "36000",
    "end": "37680"
  },
  {
    "text": "real world and the results are",
    "start": "37680",
    "end": "39200"
  },
  {
    "text": "absolutely shocking but first what even",
    "start": "39200",
    "end": "41520"
  },
  {
    "text": "is edge computing well traditionally",
    "start": "41520",
    "end": "43440"
  },
  {
    "text": "when you deploy a web app you rent out a",
    "start": "43440",
    "end": "45280"
  },
  {
    "text": "computer that lives in a physical data",
    "start": "45280",
    "end": "47200"
  },
  {
    "text": "center somewhere around the world like",
    "start": "47200",
    "end": "48719"
  },
  {
    "text": "us east 2 africa south 1 or tatooine",
    "start": "48719",
    "end": "51840"
  },
  {
    "text": "west 4. because you're poor you can only",
    "start": "51840",
    "end": "53840"
  },
  {
    "text": "afford this one virtual machine so all",
    "start": "53840",
    "end": "55840"
  },
  {
    "text": "requests around the world go to that",
    "start": "55840",
    "end": "57360"
  },
  {
    "text": "same server the problem is that your",
    "start": "57360",
    "end": "59120"
  },
  {
    "text": "users are all around the world the speed",
    "start": "59120",
    "end": "60800"
  },
  {
    "text": "of light is fast but not instant so",
    "start": "60800",
    "end": "62800"
  },
  {
    "text": "being physically closer is faster in",
    "start": "62800",
    "end": "64720"
  },
  {
    "text": "theory web developers have known about",
    "start": "64720",
    "end": "66240"
  },
  {
    "text": "this problem for a long time and have",
    "start": "66240",
    "end": "68000"
  },
  {
    "text": "been using content delivery networks to",
    "start": "68000",
    "end": "70080"
  },
  {
    "text": "distribute duplicate or cache static",
    "start": "70080",
    "end": "72479"
  },
  {
    "text": "files like html css and jquery on",
    "start": "72479",
    "end": "75520"
  },
  {
    "text": "servers all around the world that means",
    "start": "75520",
    "end": "77119"
  },
  {
    "text": "if someone from sri lanka visits your",
    "start": "77119",
    "end": "78720"
  },
  {
    "text": "website they get an image hosted in",
    "start": "78720",
    "end": "80240"
  },
  {
    "text": "bangladesh as opposed to iowa on the",
    "start": "80240",
    "end": "82400"
  },
  {
    "text": "other side of the world that's awesome",
    "start": "82400",
    "end": "83759"
  },
  {
    "text": "for static files but it doesn't really",
    "start": "83759",
    "end": "85360"
  },
  {
    "text": "work when you have a dynamic server that",
    "start": "85360",
    "end": "87119"
  },
  {
    "text": "needs to execute some code when a",
    "start": "87119",
    "end": "88560"
  },
  {
    "text": "request comes in edge computing changes",
    "start": "88560",
    "end": "90560"
  },
  {
    "text": "that it's like a cdn for a full-blown",
    "start": "90560",
    "end": "92799"
  },
  {
    "text": "server that means when you hit deploy it",
    "start": "92799",
    "end": "94400"
  },
  {
    "text": "doesn't just go to a single data center",
    "start": "94400",
    "end": "96159"
  },
  {
    "text": "but is distributed all around the world",
    "start": "96159",
    "end": "97920"
  },
  {
    "text": "as a developer they work just like",
    "start": "97920",
    "end": "99520"
  },
  {
    "text": "serverless functions like aws lambda but",
    "start": "99520",
    "end": "101920"
  },
  {
    "text": "without cold starts and are executed",
    "start": "101920",
    "end": "103840"
  },
  {
    "text": "closer to your end users sounds awesome",
    "start": "103840",
    "end": "106079"
  },
  {
    "text": "but what's the catch well in order for",
    "start": "106079",
    "end": "107840"
  },
  {
    "text": "the system to scale there needs to be a",
    "start": "107840",
    "end": "109439"
  },
  {
    "text": "very minimal run time that means nodejs",
    "start": "109439",
    "end": "111600"
  },
  {
    "text": "and the million mpm packages you have",
    "start": "111600",
    "end": "113200"
  },
  {
    "text": "installed aren't going to work at least",
    "start": "113200",
    "end": "114640"
  },
  {
    "text": "not out of the box you'll have to bundle",
    "start": "114640",
    "end": "116320"
  },
  {
    "text": "them with webpack and the total size of",
    "start": "116320",
    "end": "118000"
  },
  {
    "text": "your bundled code can't exceed one",
    "start": "118000",
    "end": "119520"
  },
  {
    "text": "megabyte that requirement can disqualify",
    "start": "119520",
    "end": "121360"
  },
  {
    "text": "a lot of applications but the good news",
    "start": "121360",
    "end": "123280"
  },
  {
    "text": "is that many modern full stack",
    "start": "123280",
    "end": "124719"
  },
  {
    "text": "frameworks like sveltkit nux js and now",
    "start": "124719",
    "end": "127439"
  },
  {
    "text": "next js have implemented the ability to",
    "start": "127439",
    "end": "129599"
  },
  {
    "text": "render on the edge what's especially",
    "start": "129599",
    "end": "131280"
  },
  {
    "text": "cool about next js is that it gives you",
    "start": "131280",
    "end": "132959"
  },
  {
    "text": "the ability to opt into the edge on",
    "start": "132959",
    "end": "135120"
  },
  {
    "text": "specific api routes or pages all you",
    "start": "135120",
    "end": "137360"
  },
  {
    "text": "have to do is export a configuration",
    "start": "137360",
    "end": "139200"
  },
  {
    "text": "object from that route it's nice to have",
    "start": "139200",
    "end": "140879"
  },
  {
    "text": "that flexibility because what i'm about",
    "start": "140879",
    "end": "142480"
  },
  {
    "text": "to say next might shock you edge",
    "start": "142480",
    "end": "144160"
  },
  {
    "text": "computing is not always faster in fact",
    "start": "144160",
    "end": "146480"
  },
  {
    "text": "it can be significantly slower in",
    "start": "146480",
    "end": "148080"
  },
  {
    "text": "certain situations allow me to",
    "start": "148080",
    "end": "149760"
  },
  {
    "text": "demonstrate in this project i have a",
    "start": "149760",
    "end": "151440"
  },
  {
    "text": "next.js app along with a firebase cloud",
    "start": "151440",
    "end": "153840"
  },
  {
    "text": "functions backend i'll be comparing next",
    "start": "153840",
    "end": "155760"
  },
  {
    "text": "js api routes which get deployed at",
    "start": "155760",
    "end": "157680"
  },
  {
    "text": "serverless functions to firebase cloud",
    "start": "157680",
    "end": "159760"
  },
  {
    "text": "functions that run on http the main",
    "start": "159760",
    "end": "162000"
  },
  {
    "text": "difference is that firebase runs on the",
    "start": "162000",
    "end": "163680"
  },
  {
    "text": "google cloud platform infrastructure",
    "start": "163680",
    "end": "165360"
  },
  {
    "text": "while the next js code runs on vercell's",
    "start": "165360",
    "end": "167440"
  },
  {
    "text": "edge network in this first experiment i",
    "start": "167440",
    "end": "169200"
  },
  {
    "text": "have a function that simply returns a",
    "start": "169200",
    "end": "171120"
  },
  {
    "text": "json response with the text of hello",
    "start": "171120",
    "end": "173200"
  },
  {
    "text": "world one thing that's worth noting is",
    "start": "173200",
    "end": "174800"
  },
  {
    "text": "that you'll notice in the firebase",
    "start": "174800",
    "end": "176000"
  },
  {
    "text": "function we're using expressjs to handle",
    "start": "176000",
    "end": "178159"
  },
  {
    "text": "that but in the versail function we're",
    "start": "178159",
    "end": "179840"
  },
  {
    "text": "using web apis because our npm packages",
    "start": "179840",
    "end": "182319"
  },
  {
    "text": "and core node modules are not available",
    "start": "182319",
    "end": "184159"
  },
  {
    "text": "the next thing i did is deployed both",
    "start": "184159",
    "end": "185760"
  },
  {
    "text": "back ends to the cloud using firebase",
    "start": "185760",
    "end": "187680"
  },
  {
    "text": "deploy and vercell deploy respectively",
    "start": "187680",
    "end": "189840"
  },
  {
    "text": "from there i opened up insomnia to test",
    "start": "189840",
    "end": "192080"
  },
  {
    "text": "out both endpoints from my location in",
    "start": "192080",
    "end": "194000"
  },
  {
    "text": "the united states the firebase function",
    "start": "194000",
    "end": "195920"
  },
  {
    "text": "generally gives a response time of",
    "start": "195920",
    "end": "197280"
  },
  {
    "text": "around a hundred and fifty milliseconds",
    "start": "197280",
    "end": "199040"
  },
  {
    "text": "which is pretty fast however it is",
    "start": "199040",
    "end": "200720"
  },
  {
    "text": "subject to cold starts which means that",
    "start": "200720",
    "end": "202560"
  },
  {
    "text": "if it's not been used recently you can",
    "start": "202560",
    "end": "204159"
  },
  {
    "text": "expect response times that go beyond",
    "start": "204159",
    "end": "206000"
  },
  {
    "text": "three or four seconds which is not fast",
    "start": "206000",
    "end": "208000"
  },
  {
    "text": "and could be a deal breaker for certain",
    "start": "208000",
    "end": "209760"
  },
  {
    "text": "types of apps the cool thing about",
    "start": "209760",
    "end": "211120"
  },
  {
    "text": "versailles edge functions is that",
    "start": "211120",
    "end": "212640"
  },
  {
    "text": "there's no cold start and not only that",
    "start": "212640",
    "end": "214400"
  },
  {
    "text": "but i'm getting consistently higher",
    "start": "214400",
    "end": "215840"
  },
  {
    "text": "response times than i am on firebase the",
    "start": "215840",
    "end": "217760"
  },
  {
    "text": "problem though is that testing from my",
    "start": "217760",
    "end": "219360"
  },
  {
    "text": "own computer isn't a very good benchmark",
    "start": "219360",
    "end": "221120"
  },
  {
    "text": "what we need to do is test from servers",
    "start": "221120",
    "end": "222959"
  },
  {
    "text": "all around the world luckily there's a",
    "start": "222959",
    "end": "224400"
  },
  {
    "text": "free tool on the internet for debugging",
    "start": "224400",
    "end": "226239"
  },
  {
    "text": "cdn issues that's perfect for testing",
    "start": "226239",
    "end": "228319"
  },
  {
    "text": "stuff like this it makes requests from",
    "start": "228319",
    "end": "229920"
  },
  {
    "text": "different locations around the world and",
    "start": "229920",
    "end": "231440"
  },
  {
    "text": "measures the speed of the response time",
    "start": "231440",
    "end": "233280"
  },
  {
    "text": "what we're most interested in is the",
    "start": "233280",
    "end": "234879"
  },
  {
    "text": "time to first byte which is basically",
    "start": "234879",
    "end": "236640"
  },
  {
    "text": "the amount of time it takes for us to",
    "start": "236640",
    "end": "238159"
  },
  {
    "text": "get our data from the server after",
    "start": "238159",
    "end": "239840"
  },
  {
    "text": "running it on both back ends we can see",
    "start": "239840",
    "end": "241840"
  },
  {
    "text": "that firebase is very fast in the united",
    "start": "241840",
    "end": "244000"
  },
  {
    "text": "states it's a little bit slower in",
    "start": "244000",
    "end": "245439"
  },
  {
    "text": "europe and a lot slower in japan and",
    "start": "245439",
    "end": "247280"
  },
  {
    "text": "australia why is that well this cloud",
    "start": "247280",
    "end": "249439"
  },
  {
    "text": "function is hosted in google's us",
    "start": "249439",
    "end": "251439"
  },
  {
    "text": "central one which is in council bluffs",
    "start": "251439",
    "end": "253200"
  },
  {
    "text": "iowa dallas got the fastest response",
    "start": "253200",
    "end": "255120"
  },
  {
    "text": "time because it's only 500 miles away",
    "start": "255120",
    "end": "257280"
  },
  {
    "text": "new york was second which is a thousand",
    "start": "257280",
    "end": "259040"
  },
  {
    "text": "miles away and then san francisco is",
    "start": "259040",
    "end": "260720"
  },
  {
    "text": "third which is about 1500 miles away",
    "start": "260720",
    "end": "262800"
  },
  {
    "text": "bangalore was the slowest which is",
    "start": "262800",
    "end": "264400"
  },
  {
    "text": "interesting because technically it's",
    "start": "264400",
    "end": "265680"
  },
  {
    "text": "closer than sydney and i think the only",
    "start": "265680",
    "end": "267440"
  },
  {
    "text": "logical explanation is that the earth is",
    "start": "267440",
    "end": "269440"
  },
  {
    "text": "actually flat requiring longer",
    "start": "269440",
    "end": "271280"
  },
  {
    "text": "underwater cables to get there good luck",
    "start": "271280",
    "end": "273280"
  },
  {
    "text": "explaining that one globetards fatality",
    "start": "273280",
    "end": "276160"
  },
  {
    "text": "now if we look at the versailles edge",
    "start": "276160",
    "end": "277600"
  },
  {
    "text": "function results we get more",
    "start": "277600",
    "end": "278720"
  },
  {
    "text": "consistently fast response times around",
    "start": "278720",
    "end": "280560"
  },
  {
    "text": "the world like sydney was actually twice",
    "start": "280560",
    "end": "282479"
  },
  {
    "text": "as fast as dallas bangalore once again",
    "start": "282479",
    "end": "284400"
  },
  {
    "text": "has a high response time but that's",
    "start": "284400",
    "end": "286080"
  },
  {
    "text": "mostly due to a long dns lookup so the",
    "start": "286080",
    "end": "288400"
  },
  {
    "text": "edge is clearly faster overall but",
    "start": "288400",
    "end": "290240"
  },
  {
    "text": "here's where things get interesting what",
    "start": "290240",
    "end": "291759"
  },
  {
    "text": "if your edge function needs to query",
    "start": "291759",
    "end": "293440"
  },
  {
    "text": "data from a database or api imagine you",
    "start": "293440",
    "end": "296160"
  },
  {
    "text": "have an edge function in new zealand but",
    "start": "296160",
    "end": "298080"
  },
  {
    "text": "your database lives in new york city in",
    "start": "298080",
    "end": "300160"
  },
  {
    "text": "that case the edge function will need to",
    "start": "300160",
    "end": "301680"
  },
  {
    "text": "go all the way to new york city then all",
    "start": "301680",
    "end": "303440"
  },
  {
    "text": "the way back to new zealand the end",
    "start": "303440",
    "end": "305120"
  },
  {
    "text": "result is a much longer round trip you'd",
    "start": "305120",
    "end": "307039"
  },
  {
    "text": "actually be much better off with just a",
    "start": "307039",
    "end": "308560"
  },
  {
    "text": "single server close to your database in",
    "start": "308560",
    "end": "310240"
  },
  {
    "text": "new york city even if the request came",
    "start": "310240",
    "end": "312080"
  },
  {
    "text": "from new zealand to demonstrate this",
    "start": "312080",
    "end": "313680"
  },
  {
    "text": "i've created some data in google's",
    "start": "313680",
    "end": "315520"
  },
  {
    "text": "firestore database then i created a new",
    "start": "315520",
    "end": "317520"
  },
  {
    "text": "cell function that requests this data",
    "start": "317520",
    "end": "319440"
  },
  {
    "text": "from the firestore rest api using fetch",
    "start": "319440",
    "end": "321919"
  },
  {
    "text": "and returns it as the response in the",
    "start": "321919",
    "end": "323680"
  },
  {
    "text": "firebase function i'm doing basically",
    "start": "323680",
    "end": "325280"
  },
  {
    "text": "the same thing but instead using the",
    "start": "325280",
    "end": "326720"
  },
  {
    "text": "firebase admin sdk to make the request",
    "start": "326720",
    "end": "329360"
  },
  {
    "text": "now when data fetching is involved",
    "start": "329360",
    "end": "330880"
  },
  {
    "text": "firebase has a huge advantage because",
    "start": "330880",
    "end": "332639"
  },
  {
    "text": "the data lives in the same exact data",
    "start": "332639",
    "end": "334400"
  },
  {
    "text": "center as the cloud function council",
    "start": "334400",
    "end": "336240"
  },
  {
    "text": "bluffs iowa vercell's edge network is",
    "start": "336240",
    "end": "338400"
  },
  {
    "text": "built on top of aws so the closest it",
    "start": "338400",
    "end": "340720"
  },
  {
    "text": "can get is cleveland ohio when we run",
    "start": "340720",
    "end": "342639"
  },
  {
    "text": "the test again you can see that firebase",
    "start": "342639",
    "end": "344479"
  },
  {
    "text": "got a little bit slower with data",
    "start": "344479",
    "end": "345919"
  },
  {
    "text": "fetching but the trend is the same where",
    "start": "345919",
    "end": "347520"
  },
  {
    "text": "it's faster in the united states than it",
    "start": "347520",
    "end": "349120"
  },
  {
    "text": "is elsewhere in the world the crazy",
    "start": "349120",
    "end": "350800"
  },
  {
    "text": "thing though is that when we run this",
    "start": "350800",
    "end": "352000"
  },
  {
    "text": "test on vercell not only did it get",
    "start": "352000",
    "end": "353759"
  },
  {
    "text": "slower but it got to the point of being",
    "start": "353759",
    "end": "355520"
  },
  {
    "text": "unacceptably slow like sydney now has a",
    "start": "355520",
    "end": "357680"
  },
  {
    "text": "full 1 second response time which is",
    "start": "357680",
    "end": "359600"
  },
  {
    "text": "more than 10 times slower than it was",
    "start": "359600",
    "end": "361280"
  },
  {
    "text": "previously and about three times slower",
    "start": "361280",
    "end": "363120"
  },
  {
    "text": "than the firebase function somehow",
    "start": "363120",
    "end": "364639"
  },
  {
    "text": "bangalore got faster which means the",
    "start": "364639",
    "end": "366160"
  },
  {
    "text": "earth must not be flat after all and is",
    "start": "366160",
    "end": "367919"
  },
  {
    "text": "in fact donut shaped the bottom line is",
    "start": "367919",
    "end": "369840"
  },
  {
    "text": "that the edge is much slower when remote",
    "start": "369840",
    "end": "371680"
  },
  {
    "text": "data fetching is involved the only way",
    "start": "371680",
    "end": "373600"
  },
  {
    "text": "to avoid that is to also distribute your",
    "start": "373600",
    "end": "375680"
  },
  {
    "text": "database around the world there are",
    "start": "375680",
    "end": "377120"
  },
  {
    "text": "databases designed to do that like",
    "start": "377120",
    "end": "378560"
  },
  {
    "text": "cassandra or you might use a secondary",
    "start": "378560",
    "end": "380400"
  },
  {
    "text": "database as a cache like redis the cool",
    "start": "380400",
    "end": "382319"
  },
  {
    "text": "thing about nexjs is that its engineers",
    "start": "382319",
    "end": "384319"
  },
  {
    "text": "are well aware of this and that's why",
    "start": "384319",
    "end": "385680"
  },
  {
    "text": "they allow you to opt into edge",
    "start": "385680",
    "end": "387280"
  },
  {
    "text": "functions on specific routes it's not an",
    "start": "387280",
    "end": "389360"
  },
  {
    "text": "all or nothing decision which really",
    "start": "389360",
    "end": "390720"
  },
  {
    "text": "allows you to fine tune performance now",
    "start": "390720",
    "end": "392800"
  },
  {
    "text": "the other thing to keep in mind here is",
    "start": "392800",
    "end": "394400"
  },
  {
    "text": "that you can also cache responses from",
    "start": "394400",
    "end": "396479"
  },
  {
    "text": "functions that means if your database is",
    "start": "396479",
    "end": "398240"
  },
  {
    "text": "far away you can cache the initial",
    "start": "398240",
    "end": "400080"
  },
  {
    "text": "response so you don't have to make the",
    "start": "400080",
    "end": "401440"
  },
  {
    "text": "full round trip on all subsequent",
    "start": "401440",
    "end": "403120"
  },
  {
    "text": "requests let's go ahead and benchmark",
    "start": "403120",
    "end": "404800"
  },
  {
    "text": "that as well in the versail function i'm",
    "start": "404800",
    "end": "406639"
  },
  {
    "text": "going to use the most basic form of",
    "start": "406639",
    "end": "408000"
  },
  {
    "text": "caching by setting a cache control",
    "start": "408000",
    "end": "409840"
  },
  {
    "text": "header that has a max age of 300 seconds",
    "start": "409840",
    "end": "412720"
  },
  {
    "text": "or 5 minutes when a new request comes in",
    "start": "412720",
    "end": "415039"
  },
  {
    "text": "it will send a response like normal and",
    "start": "415039",
    "end": "416800"
  },
  {
    "text": "then cache it on the edge that cached",
    "start": "416800",
    "end": "418639"
  },
  {
    "text": "value will stay valid for 5 minutes",
    "start": "418639",
    "end": "420560"
  },
  {
    "text": "before a new response is generated",
    "start": "420560",
    "end": "422639"
  },
  {
    "text": "that's important because it means it",
    "start": "422639",
    "end": "424080"
  },
  {
    "text": "won't do that full round trip to the",
    "start": "424080",
    "end": "425440"
  },
  {
    "text": "database if a cached version is already",
    "start": "425440",
    "end": "427360"
  },
  {
    "text": "available now what might surprise you is",
    "start": "427360",
    "end": "429199"
  },
  {
    "text": "that firebase cloud functions can also",
    "start": "429199",
    "end": "431199"
  },
  {
    "text": "cache responses on the edge as well to",
    "start": "431199",
    "end": "433039"
  },
  {
    "text": "do that we have to route them through",
    "start": "433039",
    "end": "434400"
  },
  {
    "text": "firebase hosting which has a built-in",
    "start": "434400",
    "end": "436240"
  },
  {
    "text": "cdn powered by fastly that can be",
    "start": "436240",
    "end": "438479"
  },
  {
    "text": "accomplished by rewriting a route and",
    "start": "438479",
    "end": "440319"
  },
  {
    "text": "hosting to a cloud function then in the",
    "start": "440319",
    "end": "442400"
  },
  {
    "text": "function code i'm also setting a cache",
    "start": "442400",
    "end": "444400"
  },
  {
    "text": "control header just like i did in the",
    "start": "444400",
    "end": "446000"
  },
  {
    "text": "versail function and now we can run our",
    "start": "446000",
    "end": "447680"
  },
  {
    "text": "benchmark again what you'll notice is",
    "start": "447680",
    "end": "449440"
  },
  {
    "text": "that they're both extremely fast",
    "start": "449440",
    "end": "450880"
  },
  {
    "text": "delivering responses between 10 and 50",
    "start": "450880",
    "end": "453120"
  },
  {
    "text": "milliseconds at this point we're",
    "start": "453120",
    "end": "454800"
  },
  {
    "text": "basically just comparing the speed of",
    "start": "454800",
    "end": "456160"
  },
  {
    "text": "their cdns and based on my sample it",
    "start": "456160",
    "end": "458479"
  },
  {
    "text": "looks like firebase is more consistently",
    "start": "458479",
    "end": "460400"
  },
  {
    "text": "fast but at this point they're both so",
    "start": "460400",
    "end": "462080"
  },
  {
    "text": "fast that the end user would never",
    "start": "462080",
    "end": "463440"
  },
  {
    "text": "notice i think the only way to properly",
    "start": "463440",
    "end": "465360"
  },
  {
    "text": "describe it is blazingly fast the one",
    "start": "465360",
    "end": "467919"
  },
  {
    "text": "issue with firebase functions though is",
    "start": "467919",
    "end": "469520"
  },
  {
    "text": "that you still have the cold start",
    "start": "469520",
    "end": "471120"
  },
  {
    "text": "however it is possible to run them with",
    "start": "471120",
    "end": "473039"
  },
  {
    "text": "a minimum number of instances which",
    "start": "473039",
    "end": "474800"
  },
  {
    "text": "means you always have at least n number",
    "start": "474800",
    "end": "476319"
  },
  {
    "text": "of functions running therefore no cold",
    "start": "476319",
    "end": "478240"
  },
  {
    "text": "starts but each instance will cost you",
    "start": "478240",
    "end": "480160"
  },
  {
    "text": "about five dollars per month and that's",
    "start": "480160",
    "end": "481680"
  },
  {
    "text": "what it's like to live life on the edge",
    "start": "481680",
    "end": "485280"
  },
  {
    "text": "if you want to learn more about building",
    "start": "485280",
    "end": "486639"
  },
  {
    "text": "apps with next and firebase together",
    "start": "486639",
    "end": "488400"
  },
  {
    "text": "check out my full course on fireship io",
    "start": "488400",
    "end": "490720"
  },
  {
    "text": "thanks for watching and i will see you",
    "start": "490720",
    "end": "492479"
  },
  {
    "text": "in the next one",
    "start": "492479",
    "end": "495440"
  }
]