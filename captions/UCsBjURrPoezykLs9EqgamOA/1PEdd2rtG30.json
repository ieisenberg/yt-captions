[
  {
    "text": "rule-based authorization is the",
    "start": "30",
    "end": "2070"
  },
  {
    "text": "cornerstone of any user moderated site a",
    "start": "2070",
    "end": "4290"
  },
  {
    "text": "good example is Stack Overflow which",
    "start": "4290",
    "end": "6359"
  },
  {
    "text": "provides users various privileges based",
    "start": "6359",
    "end": "8280"
  },
  {
    "text": "on the amount of reputation that they've",
    "start": "8280",
    "end": "9900"
  },
  {
    "text": "gained on the site in this episode I'm",
    "start": "9900",
    "end": "11880"
  },
  {
    "text": "going to show you how to use angular 5",
    "start": "11880",
    "end": "13320"
  },
  {
    "text": "and firestore to build your own",
    "start": "13320",
    "end": "14849"
  },
  {
    "text": "role-based authorization feature my goal",
    "start": "14849",
    "end": "17430"
  },
  {
    "text": "is to give you a solution that is both",
    "start": "17430",
    "end": "18779"
  },
  {
    "text": "flexible and secure on the front end and",
    "start": "18779",
    "end": "21240"
  },
  {
    "text": "the back end it works by assigning a",
    "start": "21240",
    "end": "23279"
  },
  {
    "text": "role to a user that saved in fire store",
    "start": "23279",
    "end": "25230"
  },
  {
    "text": "then that role is used to walk down",
    "start": "25230",
    "end": "26910"
  },
  {
    "text": "certain actions in angular the default",
    "start": "26910",
    "end": "29250"
  },
  {
    "text": "role is a subscriber which only has the",
    "start": "29250",
    "end": "30810"
  },
  {
    "text": "ability to read data then we have an",
    "start": "30810",
    "end": "32940"
  },
  {
    "text": "editor that can read and update data and",
    "start": "32940",
    "end": "35070"
  },
  {
    "text": "of course an admin user that can read",
    "start": "35070",
    "end": "37200"
  },
  {
    "text": "update create and delete if you're brand",
    "start": "37200",
    "end": "39750"
  },
  {
    "text": "new to the channel make sure to",
    "start": "39750",
    "end": "40500"
  },
  {
    "text": "subscribe and you can follow along with",
    "start": "40500",
    "end": "42329"
  },
  {
    "text": "the source code at angular firebase com",
    "start": "42329",
    "end": "44520"
  },
  {
    "text": "I'm starting from a brand new angular",
    "start": "44520",
    "end": "46649"
  },
  {
    "text": "app with angular fire two installed you",
    "start": "46649",
    "end": "48750"
  },
  {
    "text": "can find the install instructions on the",
    "start": "48750",
    "end": "50399"
  },
  {
    "text": "official repo the first thing I'm going",
    "start": "50399",
    "end": "52140"
  },
  {
    "text": "to do is generate a core module to",
    "start": "52140",
    "end": "53760"
  },
  {
    "text": "isolate all the logic for authentication",
    "start": "53760",
    "end": "56190"
  },
  {
    "text": "and authorization then inside that",
    "start": "56190",
    "end": "58590"
  },
  {
    "text": "module I'm going to generate a service",
    "start": "58590",
    "end": "60809"
  },
  {
    "text": "called the auth service now before we",
    "start": "60809",
    "end": "63510"
  },
  {
    "text": "get into the actual auth code I want to",
    "start": "63510",
    "end": "64978"
  },
  {
    "text": "warn you that I'm going to go through it",
    "start": "64979",
    "end": "66360"
  },
  {
    "text": "very quickly because I covered it in",
    "start": "66360",
    "end": "68220"
  },
  {
    "text": "episode 55 which was fires store Roth",
    "start": "68220",
    "end": "71430"
  },
  {
    "text": "if you get lost refer back to that but",
    "start": "71430",
    "end": "73680"
  },
  {
    "text": "let's quickly review the sign-in signup",
    "start": "73680",
    "end": "75689"
  },
  {
    "text": "process first I'm going to import our",
    "start": "75689",
    "end": "77970"
  },
  {
    "text": "angular fire libraries and then I'm",
    "start": "77970",
    "end": "79830"
  },
  {
    "text": "going to define a custom user interface",
    "start": "79830",
    "end": "81950"
  },
  {
    "text": "but before we define the user let's",
    "start": "81950",
    "end": "84330"
  },
  {
    "text": "actually define our roles as I mentioned",
    "start": "84330",
    "end": "86670"
  },
  {
    "text": "before the three roles that we have our",
    "start": "86670",
    "end": "88229"
  },
  {
    "text": "subscriber editor and admin the roles",
    "start": "88229",
    "end": "92100"
  },
  {
    "text": "will be saved as an object in fire store",
    "start": "92100",
    "end": "93869"
  },
  {
    "text": "with each possible role being set to a",
    "start": "93869",
    "end": "95909"
  },
  {
    "text": "boolean value this allows you to assign",
    "start": "95909",
    "end": "98100"
  },
  {
    "text": "multiple roles to a single user if",
    "start": "98100",
    "end": "99960"
  },
  {
    "text": "that's what you desire then on the user",
    "start": "99960",
    "end": "102299"
  },
  {
    "text": "itself we'll just have a user ID and",
    "start": "102299",
    "end": "104159"
  },
  {
    "text": "email and then the roles property will",
    "start": "104159",
    "end": "106380"
  },
  {
    "text": "be set to this roles object interface",
    "start": "106380",
    "end": "108829"
  },
  {
    "text": "let's go ahead and switch back to the",
    "start": "108829",
    "end": "111060"
  },
  {
    "text": "service and then we can set up an",
    "start": "111060",
    "end": "112920"
  },
  {
    "text": "observable that is type two this user",
    "start": "112920",
    "end": "114930"
  },
  {
    "text": "interface to authenticate a user and use",
    "start": "114930",
    "end": "118320"
  },
  {
    "text": "that fire store document we'll first",
    "start": "118320",
    "end": "120000"
  },
  {
    "text": "listen to the angular fire off state and",
    "start": "120000",
    "end": "122520"
  },
  {
    "text": "once we get that we can then retrieve",
    "start": "122520",
    "end": "125040"
  },
  {
    "text": "the actual user document from fire store",
    "start": "125040",
    "end": "127290"
  },
  {
    "text": "so if the user is defined then we'll",
    "start": "127290",
    "end": "129569"
  },
  {
    "text": "pull that document from fire store and",
    "start": "129569",
    "end": "131730"
  },
  {
    "text": "call value changes to get it as an",
    "start": "131730",
    "end": "133530"
  },
  {
    "text": "observer",
    "start": "133530",
    "end": "134270"
  },
  {
    "text": "otherwise what is returned and",
    "start": "134270",
    "end": "135590"
  },
  {
    "text": "observable at null from there we need a",
    "start": "135590",
    "end": "138800"
  },
  {
    "text": "way for the user to authenticate so",
    "start": "138800",
    "end": "140840"
  },
  {
    "text": "we're just going to use Google OAuth for",
    "start": "140840",
    "end": "142490"
  },
  {
    "text": "this example and when the user",
    "start": "142490",
    "end": "144110"
  },
  {
    "text": "successfully authenticates we're going",
    "start": "144110",
    "end": "145790"
  },
  {
    "text": "to run this update user data method the",
    "start": "145790",
    "end": "149000"
  },
  {
    "text": "purpose of that method is to create or",
    "start": "149000",
    "end": "150920"
  },
  {
    "text": "update the user document in firestore",
    "start": "150920",
    "end": "153490"
  },
  {
    "text": "the way we do that is we create a",
    "start": "153490",
    "end": "155570"
  },
  {
    "text": "reference to the actual user document",
    "start": "155570",
    "end": "157790"
  },
  {
    "text": "with the authentication user ID and then",
    "start": "157790",
    "end": "160670"
  },
  {
    "text": "we can set up an object here type to our",
    "start": "160670",
    "end": "163130"
  },
  {
    "text": "user with a default role of subscriber",
    "start": "163130",
    "end": "165340"
  },
  {
    "text": "then we can update this data without",
    "start": "165340",
    "end": "167780"
  },
  {
    "text": "actually overriding it by calling that",
    "start": "167780",
    "end": "170000"
  },
  {
    "text": "reference set and then pass it the merge",
    "start": "170000",
    "end": "172700"
  },
  {
    "text": "true option this will create or update",
    "start": "172700",
    "end": "175550"
  },
  {
    "text": "the existing document in a",
    "start": "175550",
    "end": "177290"
  },
  {
    "text": "non-destructive way so at this point we",
    "start": "177290",
    "end": "179870"
  },
  {
    "text": "have a basic authentication system but",
    "start": "179870",
    "end": "181970"
  },
  {
    "text": "we still don't have any role based rules",
    "start": "181970",
    "end": "183530"
  },
  {
    "text": "in our app what I've done is created a",
    "start": "183530",
    "end": "185570"
  },
  {
    "text": "couple extra components here this one",
    "start": "185570",
    "end": "187550"
  },
  {
    "text": "happens to pull some data from firestore",
    "start": "187550",
    "end": "189590"
  },
  {
    "text": "and we'll set up rules that prevent the",
    "start": "189590",
    "end": "191570"
  },
  {
    "text": "user from updating or deleting this post",
    "start": "191570",
    "end": "193580"
  },
  {
    "text": "the test post just has some content and",
    "start": "193580",
    "end": "196220"
  },
  {
    "text": "a title property then I set up another",
    "start": "196220",
    "end": "198710"
  },
  {
    "text": "component called the super secret",
    "start": "198710",
    "end": "200210"
  },
  {
    "text": "component that's only for admin users",
    "start": "200210",
    "end": "202190"
  },
  {
    "text": "and that's where we keep all of our",
    "start": "202190",
    "end": "203660"
  },
  {
    "text": "bitcoins the way I like to implement",
    "start": "203660",
    "end": "206120"
  },
  {
    "text": "rule-based authorization is to create a",
    "start": "206120",
    "end": "208400"
  },
  {
    "text": "set of abilities and then assign those",
    "start": "208400",
    "end": "210650"
  },
  {
    "text": "abilities various roles that are",
    "start": "210650",
    "end": "212450"
  },
  {
    "text": "authorized to perform them what I'm",
    "start": "212450",
    "end": "214880"
  },
  {
    "text": "doing first is creating a helper method",
    "start": "214880",
    "end": "216440"
  },
  {
    "text": "that takes the user and the allowed",
    "start": "216440",
    "end": "218480"
  },
  {
    "text": "roles from one of these abilities and",
    "start": "218480",
    "end": "220010"
  },
  {
    "text": "we'll check and see if the user has the",
    "start": "220010",
    "end": "221870"
  },
  {
    "text": "appropriate role to perform it so if the",
    "start": "221870",
    "end": "224390"
  },
  {
    "text": "user is not defined then we'll just",
    "start": "224390",
    "end": "225620"
  },
  {
    "text": "return false otherwise we're going to",
    "start": "225620",
    "end": "227840"
  },
  {
    "text": "loop over the allowed roles and if the",
    "start": "227840",
    "end": "230030"
  },
  {
    "text": "user has that role then we can return",
    "start": "230030",
    "end": "231800"
  },
  {
    "text": "true otherwise we'll just return false",
    "start": "231800",
    "end": "233770"
  },
  {
    "text": "now I'm going to define the abilities",
    "start": "233770",
    "end": "236330"
  },
  {
    "text": "right here in the service but you could",
    "start": "236330",
    "end": "237860"
  },
  {
    "text": "extract this out into its own class if",
    "start": "237860",
    "end": "239630"
  },
  {
    "text": "you have a really complex set of roles",
    "start": "239630",
    "end": "241190"
  },
  {
    "text": "and abilities so the first one is can",
    "start": "241190",
    "end": "243830"
  },
  {
    "text": "read and this will determine if a user",
    "start": "243830",
    "end": "245990"
  },
  {
    "text": "can read a document or not so right now",
    "start": "245990",
    "end": "248360"
  },
  {
    "text": "the admin editor and subscriber all have",
    "start": "248360",
    "end": "250790"
  },
  {
    "text": "access to read as you'll see later we",
    "start": "250790",
    "end": "253100"
  },
  {
    "text": "can use this method to easily hide or",
    "start": "253100",
    "end": "255110"
  },
  {
    "text": "block content in our components or in a",
    "start": "255110",
    "end": "257060"
  },
  {
    "text": "router guard to easily control access",
    "start": "257060",
    "end": "259070"
  },
  {
    "text": "throughout the application now we can",
    "start": "259070",
    "end": "261230"
  },
  {
    "text": "repeat this pattern for whatever ability",
    "start": "261230",
    "end": "263000"
  },
  {
    "text": "is that we want to provide to these",
    "start": "263000",
    "end": "264500"
  },
  {
    "text": "roles so I'll go ahead and create",
    "start": "264500",
    "end": "265940"
  },
  {
    "text": "another one here for can",
    "start": "265940",
    "end": "267470"
  },
  {
    "text": "edit and then I'll create one more for",
    "start": "267470",
    "end": "270140"
  },
  {
    "text": "can delete which is only allowed to be",
    "start": "270140",
    "end": "272480"
  },
  {
    "text": "performed by the admin user keep in mind",
    "start": "272480",
    "end": "275600"
  },
  {
    "text": "that anything you do in angular only",
    "start": "275600",
    "end": "277070"
  },
  {
    "text": "provides front-end security it would be",
    "start": "277070",
    "end": "278840"
  },
  {
    "text": "trivial to reverse engineer and",
    "start": "278840",
    "end": "280490"
  },
  {
    "text": "circumvent these rules so before we do",
    "start": "280490",
    "end": "282680"
  },
  {
    "text": "anything on the front-end we're going to",
    "start": "282680",
    "end": "284090"
  },
  {
    "text": "write some back-end rules in firestore",
    "start": "284090",
    "end": "285950"
  },
  {
    "text": "that will guarantee data security what",
    "start": "285950",
    "end": "288920"
  },
  {
    "text": "we want to see is the spire Store error",
    "start": "288920",
    "end": "290300"
  },
  {
    "text": "whenever we try to read or write any",
    "start": "290300",
    "end": "292130"
  },
  {
    "text": "unauthorized data currently I don't have",
    "start": "292130",
    "end": "294290"
  },
  {
    "text": "any security on the test post in my fire",
    "start": "294290",
    "end": "296540"
  },
  {
    "text": "store rules in the firebase console but",
    "start": "296540",
    "end": "298730"
  },
  {
    "text": "I'm going to use the get method to",
    "start": "298730",
    "end": "300770"
  },
  {
    "text": "retrieve a document from the fire store",
    "start": "300770",
    "end": "302720"
  },
  {
    "text": "database based on this request auth user",
    "start": "302720",
    "end": "305540"
  },
  {
    "text": "ID so that authenticated users document",
    "start": "305540",
    "end": "308420"
  },
  {
    "text": "is going to have the roles object so we",
    "start": "308420",
    "end": "310670"
  },
  {
    "text": "can read the data then look at the roles",
    "start": "310670",
    "end": "312320"
  },
  {
    "text": "and for the subscriber we want to make",
    "start": "312320",
    "end": "314450"
  },
  {
    "text": "sure that that value is true in other",
    "start": "314450",
    "end": "316790"
  },
  {
    "text": "words if the current user tries to read",
    "start": "316790",
    "end": "318440"
  },
  {
    "text": "this document but they don't have the",
    "start": "318440",
    "end": "319820"
  },
  {
    "text": "subscriber role then it's going to block",
    "start": "319820",
    "end": "321890"
  },
  {
    "text": "access to that document the one glaring",
    "start": "321890",
    "end": "324350"
  },
  {
    "text": "problem here is that this line is super",
    "start": "324350",
    "end": "326270"
  },
  {
    "text": "long and it's going to get completely",
    "start": "326270",
    "end": "327830"
  },
  {
    "text": "out of control if we try to repeat it",
    "start": "327830",
    "end": "329150"
  },
  {
    "text": "for multiple roles",
    "start": "329150",
    "end": "330290"
  },
  {
    "text": "luckily fire store rules allow you to",
    "start": "330290",
    "end": "332360"
  },
  {
    "text": "write functions so we can write this in",
    "start": "332360",
    "end": "334040"
  },
  {
    "text": "a much more readable and expressive way",
    "start": "334040",
    "end": "335960"
  },
  {
    "text": "I'm going to create this get role",
    "start": "335960",
    "end": "338090"
  },
  {
    "text": "function that takes the role as a string",
    "start": "338090",
    "end": "340490"
  },
  {
    "text": "as an argument then I'm going to repeat",
    "start": "340490",
    "end": "342950"
  },
  {
    "text": "that whole get line that I wrote just a",
    "start": "342950",
    "end": "344570"
  },
  {
    "text": "second ago but instead of calling",
    "start": "344570",
    "end": "346040"
  },
  {
    "text": "subscriber will call the argument from",
    "start": "346040",
    "end": "348080"
  },
  {
    "text": "this function now we can just delete the",
    "start": "348080",
    "end": "350120"
  },
  {
    "text": "previous rule and we can rewrite it",
    "start": "350120",
    "end": "351980"
  },
  {
    "text": "using this function so we'll say if get",
    "start": "351980",
    "end": "354440"
  },
  {
    "text": "roll with the subscriber roll and that",
    "start": "354440",
    "end": "357260"
  },
  {
    "text": "should equal true then we can do the",
    "start": "357260",
    "end": "360080"
  },
  {
    "text": "same thing for the editor and admin",
    "start": "360080",
    "end": "362060"
  },
  {
    "text": "roles as well and we can lock these down",
    "start": "362060",
    "end": "364070"
  },
  {
    "text": "based on the type of operation so we can",
    "start": "364070",
    "end": "366169"
  },
  {
    "text": "say allow update if get role editor",
    "start": "366169",
    "end": "368570"
  },
  {
    "text": "equals true and then for admin we'll say",
    "start": "368570",
    "end": "371720"
  },
  {
    "text": "allow create or delete if the admin role",
    "start": "371720",
    "end": "374090"
  },
  {
    "text": "equals true now I'm going to go into",
    "start": "374090",
    "end": "376250"
  },
  {
    "text": "fire store on the user document and",
    "start": "376250",
    "end": "378020"
  },
  {
    "text": "update their editor role to true then",
    "start": "378020",
    "end": "380630"
  },
  {
    "text": "I'm going to log into the app and if I",
    "start": "380630",
    "end": "382669"
  },
  {
    "text": "try to delete a page I should still get",
    "start": "382669",
    "end": "384770"
  },
  {
    "text": "an error because they don't have the",
    "start": "384770",
    "end": "386150"
  },
  {
    "text": "admin privilege however if this user",
    "start": "386150",
    "end": "388220"
  },
  {
    "text": "performs an update then it goes through",
    "start": "388220",
    "end": "390110"
  },
  {
    "text": "in fire store and doesn't trigger any",
    "start": "390110",
    "end": "392150"
  },
  {
    "text": "kind of error in the console that's how",
    "start": "392150",
    "end": "394340"
  },
  {
    "text": "you keep your data 100% secure in fire",
    "start": "394340",
    "end": "396560"
  },
  {
    "text": "store but it's better if we never have",
    "start": "396560",
    "end": "398539"
  },
  {
    "text": "to trigger these rules in the first",
    "start": "398539",
    "end": "399770"
  },
  {
    "text": "place",
    "start": "399770",
    "end": "401300"
  },
  {
    "text": "I'm jumping over to a component called",
    "start": "401300",
    "end": "402800"
  },
  {
    "text": "subscribe page and this is where we're",
    "start": "402800",
    "end": "404780"
  },
  {
    "text": "pulling the actual test pose from fire",
    "start": "404780",
    "end": "406610"
  },
  {
    "text": "store so I have a reference and a post",
    "start": "406610",
    "end": "409400"
  },
  {
    "text": "observable and then I have a variable",
    "start": "409400",
    "end": "411860"
  },
  {
    "text": "for the user itself if you want to walk",
    "start": "411860",
    "end": "414949"
  },
  {
    "text": "down a specific method in the component",
    "start": "414949",
    "end": "416930"
  },
  {
    "text": "you can subscribe to the user during ng",
    "start": "416930",
    "end": "419360"
  },
  {
    "text": "on an it and then use it to lock down",
    "start": "419360",
    "end": "421280"
  },
  {
    "text": "certain code based on whatever users",
    "start": "421280",
    "end": "423050"
  },
  {
    "text": "have that ability I'm going to create a",
    "start": "423050",
    "end": "425720"
  },
  {
    "text": "couple methods here one to edit a post",
    "start": "425720",
    "end": "427610"
  },
  {
    "text": "and another to delete a post then if you",
    "start": "427610",
    "end": "430099"
  },
  {
    "text": "want to lock down a method based on a",
    "start": "430099",
    "end": "431780"
  },
  {
    "text": "certain ability you can just do if can",
    "start": "431780",
    "end": "434120"
  },
  {
    "text": "edit and pass it the user object then",
    "start": "434120",
    "end": "437090"
  },
  {
    "text": "just wrap the important part inside of",
    "start": "437090",
    "end": "438919"
  },
  {
    "text": "this if statement that's one way to use",
    "start": "438919",
    "end": "441259"
  },
  {
    "text": "the auth service but it's actually a lot",
    "start": "441259",
    "end": "443090"
  },
  {
    "text": "easier if you perform this logic inside",
    "start": "443090",
    "end": "445219"
  },
  {
    "text": "of the template itself in most cases you",
    "start": "445219",
    "end": "447800"
  },
  {
    "text": "have buttons or other elements that the",
    "start": "447800",
    "end": "449690"
  },
  {
    "text": "user will interact with to trigger some",
    "start": "449690",
    "end": "451879"
  },
  {
    "text": "kind of method we can just hide these",
    "start": "451879",
    "end": "453949"
  },
  {
    "text": "elements from the Dom using ng-if and",
    "start": "453949",
    "end": "456289"
  },
  {
    "text": "are off service and that's usually a",
    "start": "456289",
    "end": "458120"
  },
  {
    "text": "much more maintainable way to go but",
    "start": "458120",
    "end": "460849"
  },
  {
    "text": "there's actually still an even better",
    "start": "460849",
    "end": "462229"
  },
  {
    "text": "mechanism that we can use in angular to",
    "start": "462229",
    "end": "464150"
  },
  {
    "text": "prevent unauthorized access to content",
    "start": "464150",
    "end": "466400"
  },
  {
    "text": "and that's what the router guard to lock",
    "start": "466400",
    "end": "468680"
  },
  {
    "text": "down certain routes based on the user's",
    "start": "468680",
    "end": "470389"
  },
  {
    "text": "role so first I'm going to create a",
    "start": "470389",
    "end": "472370"
  },
  {
    "text": "guard called the admin guard and add",
    "start": "472370",
    "end": "474650"
  },
  {
    "text": "that to the core module inside the guard",
    "start": "474650",
    "end": "477319"
  },
  {
    "text": "I'm going to import our auth service as",
    "start": "477319",
    "end": "479389"
  },
  {
    "text": "well as tap map and take from rxjs then",
    "start": "479389",
    "end": "484550"
  },
  {
    "text": "the auth service is injected in the",
    "start": "484550",
    "end": "486319"
  },
  {
    "text": "constructor and we're going to return an",
    "start": "486319",
    "end": "489110"
  },
  {
    "text": "observable from this guard inside of can",
    "start": "489110",
    "end": "491120"
  },
  {
    "text": "activate and it's important that you map",
    "start": "491120",
    "end": "493219"
  },
  {
    "text": "this observable to a boolean so first",
    "start": "493219",
    "end": "495860"
  },
  {
    "text": "we'll call pipe and then we'll pipe in a",
    "start": "495860",
    "end": "497569"
  },
  {
    "text": "few are X operators here first one is",
    "start": "497569",
    "end": "500150"
  },
  {
    "text": "take one to prevent a running",
    "start": "500150",
    "end": "501289"
  },
  {
    "text": "subscription then inside a map we'll see",
    "start": "501289",
    "end": "503719"
  },
  {
    "text": "if the user object exists and if so",
    "start": "503719",
    "end": "506120"
  },
  {
    "text": "we'll also check for the user roles",
    "start": "506120",
    "end": "508340"
  },
  {
    "text": "object for the admin property then we'll",
    "start": "508340",
    "end": "511520"
  },
  {
    "text": "do a ternary if statement here and",
    "start": "511520",
    "end": "513229"
  },
  {
    "text": "return true if true otherwise false then",
    "start": "513229",
    "end": "517219"
  },
  {
    "text": "we can use that tap operator which",
    "start": "517219",
    "end": "518990"
  },
  {
    "text": "recently replaced the do operator to",
    "start": "518990",
    "end": "521419"
  },
  {
    "text": "console.log an error if the user is",
    "start": "521419",
    "end": "523490"
  },
  {
    "text": "trying to access an unauthorized area",
    "start": "523490",
    "end": "525290"
  },
  {
    "text": "but you could also use the router here",
    "start": "525290",
    "end": "527300"
  },
  {
    "text": "to redirect the user to a different",
    "start": "527300",
    "end": "529279"
  },
  {
    "text": "route so this is going to lock down a",
    "start": "529279",
    "end": "531110"
  },
  {
    "text": "route based on a certain role but we can",
    "start": "531110",
    "end": "532970"
  },
  {
    "text": "also lock down round a certain ability",
    "start": "532970",
    "end": "535130"
  },
  {
    "text": "because if you remember multiple roles",
    "start": "535130",
    "end": "536720"
  },
  {
    "text": "can be assigned to a specific ability",
    "start": "536720",
    "end": "538519"
  },
  {
    "text": "all of the codes exactly the same we",
    "start": "538519",
    "end": "540800"
  },
  {
    "text": "just have to change one thing down here",
    "start": "540800",
    "end": "542420"
  },
  {
    "text": "in the map operator so instead of",
    "start": "542420",
    "end": "544490"
  },
  {
    "text": "looking at the actual role itself will",
    "start": "544490",
    "end": "546740"
  },
  {
    "text": "pass the user to the can read method",
    "start": "546740",
    "end": "548839"
  },
  {
    "text": "from our off service and that will",
    "start": "548839",
    "end": "550970"
  },
  {
    "text": "authorize any roles that can read a",
    "start": "550970",
    "end": "553220"
  },
  {
    "text": "document to put these guards to use will",
    "start": "553220",
    "end": "555949"
  },
  {
    "text": "go into the router and then we'll import",
    "start": "555949",
    "end": "558019"
  },
  {
    "text": "the guards and add them to the can",
    "start": "558019",
    "end": "560089"
  },
  {
    "text": "activate array and each of the route",
    "start": "560089",
    "end": "562250"
  },
  {
    "text": "objects if you can lock things down at",
    "start": "562250",
    "end": "565250"
  },
  {
    "text": "the route level it's going to simplify",
    "start": "565250",
    "end": "566899"
  },
  {
    "text": "your code base overall and it also has",
    "start": "566899",
    "end": "569329"
  },
  {
    "text": "the added benefit of not requiring a",
    "start": "569329",
    "end": "571399"
  },
  {
    "text": "read in fire store to see if a rule",
    "start": "571399",
    "end": "573800"
  },
  {
    "text": "evaluates to true or false as you can",
    "start": "573800",
    "end": "576860"
  },
  {
    "text": "see here we have an unauthenticated user",
    "start": "576860",
    "end": "578660"
  },
  {
    "text": "and they are denied access to any of",
    "start": "578660",
    "end": "581120"
  },
  {
    "text": "these pages just based on the router",
    "start": "581120",
    "end": "582709"
  },
  {
    "text": "guard then if we log in with the editor",
    "start": "582709",
    "end": "584899"
  },
  {
    "text": "role we can go to the main content page",
    "start": "584899",
    "end": "586339"
  },
  {
    "text": "but that admin page is still locked down",
    "start": "586339",
    "end": "588920"
  },
  {
    "text": "so on a final note just to sum up the",
    "start": "588920",
    "end": "591709"
  },
  {
    "text": "bottom line you should be using back end",
    "start": "591709",
    "end": "593660"
  },
  {
    "text": "fire scorer rules for your actual data",
    "start": "593660",
    "end": "595430"
  },
  {
    "text": "security and then on the front end use",
    "start": "595430",
    "end": "597649"
  },
  {
    "text": "router guards and additional logic to",
    "start": "597649",
    "end": "600139"
  },
  {
    "text": "enhance the user experience that's it",
    "start": "600139",
    "end": "602839"
  },
  {
    "text": "for role based access control with fire",
    "start": "602839",
    "end": "604579"
  },
  {
    "text": "store if this video helped you please",
    "start": "604579",
    "end": "606079"
  },
  {
    "text": "like and subscribe and if you want to",
    "start": "606079",
    "end": "608000"
  },
  {
    "text": "learn more consider becoming a pro",
    "start": "608000",
    "end": "609529"
  },
  {
    "text": "member at angular firebase com look at",
    "start": "609529",
    "end": "612050"
  },
  {
    "text": "access to exclusive content a free copy",
    "start": "612050",
    "end": "614209"
  },
  {
    "text": "of my book and one on one project",
    "start": "614209",
    "end": "616220"
  },
  {
    "text": "support thanks for watching and I'll see",
    "start": "616220",
    "end": "618589"
  },
  {
    "text": "you soon",
    "start": "618589",
    "end": "619090"
  },
  {
    "text": "[Music]",
    "start": "619090",
    "end": "623529"
  }
]