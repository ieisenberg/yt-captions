[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "Redwood JS an opinionated full stack",
    "start": "0",
    "end": "2700"
  },
  {
    "text": "JavaScript framework for building big",
    "start": "2700",
    "end": "4620"
  },
  {
    "text": "ambitious startups as we all know the",
    "start": "4620",
    "end": "6839"
  },
  {
    "text": "JavaScript ecosystem is incredibly",
    "start": "6839",
    "end": "8519"
  },
  {
    "text": "complex with millions of different tools",
    "start": "8519",
    "end": "10380"
  },
  {
    "text": "to choose from when architecting an app",
    "start": "10380",
    "end": "12120"
  },
  {
    "text": "Redwood takes a collection of the most",
    "start": "12120",
    "end": "13799"
  },
  {
    "text": "battle tested Technologies like react",
    "start": "13799",
    "end": "15900"
  },
  {
    "start": "15000",
    "end": "38000"
  },
  {
    "text": "Prisma graphql storybook and jest then",
    "start": "15900",
    "end": "18600"
  },
  {
    "text": "weaves them together so developers can",
    "start": "18600",
    "end": "20460"
  },
  {
    "text": "get things done quickly and reliably it",
    "start": "20460",
    "end": "22439"
  },
  {
    "text": "was developed by a team of software",
    "start": "22439",
    "end": "24000"
  },
  {
    "text": "Engineers that includes the co-founder",
    "start": "24000",
    "end": "25500"
  },
  {
    "text": "of GitHub and hit version 1.0 in 2022 it",
    "start": "25500",
    "end": "28380"
  },
  {
    "text": "has its own custom router for",
    "start": "28380",
    "end": "29880"
  },
  {
    "text": "server-side rendering but unlike many",
    "start": "29880",
    "end": "31800"
  },
  {
    "text": "other Frameworks it doesn't use the file",
    "start": "31800",
    "end": "33540"
  },
  {
    "text": "system and instead puts all routes in a",
    "start": "33540",
    "end": "35700"
  },
  {
    "text": "single file with automatic code",
    "start": "35700",
    "end": "37140"
  },
  {
    "text": "splitting for each page most importantly",
    "start": "37140",
    "end": "39239"
  },
  {
    "start": "38000",
    "end": "66000"
  },
  {
    "text": "though it provides abstractions to",
    "start": "39239",
    "end": "41100"
  },
  {
    "text": "connect your front-end UI to a back-end",
    "start": "41100",
    "end": "43440"
  },
  {
    "text": "relational database via a graphql API",
    "start": "43440",
    "end": "46260"
  },
  {
    "text": "its rails inspired CLI can quickly",
    "start": "46260",
    "end": "48539"
  },
  {
    "text": "generate the code required to build",
    "start": "48539",
    "end": "50280"
  },
  {
    "text": "complex features and not just build them",
    "start": "50280",
    "end": "52379"
  },
  {
    "text": "but also test them with jest and",
    "start": "52379",
    "end": "54360"
  },
  {
    "text": "storybook it ships with Apollo client by",
    "start": "54360",
    "end": "56399"
  },
  {
    "text": "default making it easy for the front end",
    "start": "56399",
    "end": "58260"
  },
  {
    "text": "to consume data from the graphql API and",
    "start": "58260",
    "end": "60960"
  },
  {
    "text": "when it comes time for deployment the",
    "start": "60960",
    "end": "62280"
  },
  {
    "text": "code can easily run on a standalone",
    "start": "62280",
    "end": "63899"
  },
  {
    "text": "server or your favorite serverless",
    "start": "63899",
    "end": "65518"
  },
  {
    "text": "infrastructure to get started generate a",
    "start": "65519",
    "end": "67619"
  },
  {
    "start": "66000",
    "end": "127000"
  },
  {
    "text": "new Redwood project with yarn the front",
    "start": "67619",
    "end": "69600"
  },
  {
    "text": "end code is managed in the web directory",
    "start": "69600",
    "end": "71460"
  },
  {
    "text": "it's a react app that's wrapped with the",
    "start": "71460",
    "end": "73260"
  },
  {
    "text": "Redwood provider with routes as the main",
    "start": "73260",
    "end": "75119"
  },
  {
    "text": "entry point for the UI the routes",
    "start": "75119",
    "end": "76860"
  },
  {
    "text": "component is a collection of URL",
    "start": "76860",
    "end": "78600"
  },
  {
    "text": "patterns that point to a specific",
    "start": "78600",
    "end": "80159"
  },
  {
    "text": "component which is defined in the Pages",
    "start": "80159",
    "end": "82320"
  },
  {
    "text": "directory all pages are automatically",
    "start": "82320",
    "end": "84479"
  },
  {
    "text": "imported here keeping your code nice and",
    "start": "84479",
    "end": "86220"
  },
  {
    "text": "concise in addition all pages are",
    "start": "86220",
    "end": "88200"
  },
  {
    "text": "automatically lazy loaded with code",
    "start": "88200",
    "end": "89759"
  },
  {
    "text": "splitting making your load times as fast",
    "start": "89759",
    "end": "91740"
  },
  {
    "text": "as possible it also contains a layout",
    "start": "91740",
    "end": "93720"
  },
  {
    "text": "system to share UI across different",
    "start": "93720",
    "end": "95759"
  },
  {
    "text": "routes now the back end is organized in",
    "start": "95759",
    "end": "98100"
  },
  {
    "text": "the API directory which uses Prisma to",
    "start": "98100",
    "end": "100380"
  },
  {
    "text": "manage the database schema but also",
    "start": "100380",
    "end": "102240"
  },
  {
    "text": "provides the tools required to build a",
    "start": "102240",
    "end": "104159"
  },
  {
    "text": "full-fledged graphql API to access your",
    "start": "104159",
    "end": "106619"
  },
  {
    "text": "data the back end can also Define its",
    "start": "106619",
    "end": "108600"
  },
  {
    "text": "own custom serverless functions or",
    "start": "108600",
    "end": "110340"
  },
  {
    "text": "directives which operate like middleware",
    "start": "110340",
    "end": "112079"
  },
  {
    "text": "to handle concerns like user",
    "start": "112079",
    "end": "113820"
  },
  {
    "text": "authentication what's really cool though",
    "start": "113820",
    "end": "115320"
  },
  {
    "text": "is Redwood provides an abstraction",
    "start": "115320",
    "end": "117000"
  },
  {
    "text": "called a cell to simplify complex data",
    "start": "117000",
    "end": "119579"
  },
  {
    "text": "fetching a cell is just a component that",
    "start": "119579",
    "end": "121680"
  },
  {
    "text": "manages a graphql query allowing you to",
    "start": "121680",
    "end": "123780"
  },
  {
    "text": "clearly Define different states like",
    "start": "123780",
    "end": "125280"
  },
  {
    "text": "loading error and success like angular",
    "start": "125280",
    "end": "127619"
  },
  {
    "start": "127000",
    "end": "151000"
  },
  {
    "text": "or rails Redwood provides strong",
    "start": "127619",
    "end": "129360"
  },
  {
    "text": "conventions and a CLI to generate the",
    "start": "129360",
    "end": "131760"
  },
  {
    "text": "boilerplate code for you use it to",
    "start": "131760",
    "end": "133560"
  },
  {
    "text": "quickly create a component page or cell",
    "start": "133560",
    "end": "135840"
  },
  {
    "text": "along with the code for jest and",
    "start": "135840",
    "end": "137520"
  },
  {
    "text": "storybook for testing and finally use",
    "start": "137520",
    "end": "139440"
  },
  {
    "text": "the CLI to deploy the app to your",
    "start": "139440",
    "end": "141239"
  },
  {
    "text": "favorite serverless Cloud platform this",
    "start": "141239",
    "end": "143099"
  },
  {
    "text": "has been Redwood JS in 100 seconds hit",
    "start": "143099",
    "end": "145680"
  },
  {
    "text": "the like button and subscribe if you",
    "start": "145680",
    "end": "147180"
  },
  {
    "text": "want to see more short videos like this",
    "start": "147180",
    "end": "148620"
  },
  {
    "text": "thanks for watching and I will see you",
    "start": "148620",
    "end": "150660"
  },
  {
    "text": "in the next one",
    "start": "150660",
    "end": "153379"
  }
]