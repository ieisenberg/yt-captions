[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "common business oriented language or",
    "start": "0",
    "end": "1800"
  },
  {
    "text": "COBOL is a weak verbose and flabby",
    "start": "1800",
    "end": "3780"
  },
  {
    "text": "language used by coat grinders to do",
    "start": "3780",
    "end": "5580"
  },
  {
    "text": "boring things on dinosaur mainframes it",
    "start": "5580",
    "end": "7919"
  },
  {
    "text": "was developed over 100 years ago in 1959",
    "start": "7919",
    "end": "10530"
  },
  {
    "text": "but is still in demand today in 2020",
    "start": "10530",
    "end": "12750"
  },
  {
    "text": "because it's the language used on many",
    "start": "12750",
    "end": "14340"
  },
  {
    "text": "mainframe computer systems you know",
    "start": "14340",
    "end": "16198"
  },
  {
    "text": "those things we call big iron usually",
    "start": "16199",
    "end": "18150"
  },
  {
    "text": "built by IBM to handle massive amounts",
    "start": "18150",
    "end": "20100"
  },
  {
    "text": "of throughput to handle things like",
    "start": "20100",
    "end": "21510"
  },
  {
    "text": "credit card transactions airline",
    "start": "21510",
    "end": "23130"
  },
  {
    "text": "ticketing and most recently the massive",
    "start": "23130",
    "end": "25109"
  },
  {
    "text": "spike in unemployment claims so if you",
    "start": "25109",
    "end": "27090"
  },
  {
    "text": "want to be a programmer in 2020 COBOL",
    "start": "27090",
    "end": "29010"
  },
  {
    "text": "might be your best bet it's a high-level",
    "start": "29010",
    "end": "30449"
  },
  {
    "start": "30000",
    "end": "53000"
  },
  {
    "text": "imperative language which means it's",
    "start": "30449",
    "end": "32189"
  },
  {
    "text": "very easy to learn the syntax is",
    "start": "32189",
    "end": "34020"
  },
  {
    "text": "extremely verbose by design because it's",
    "start": "34020",
    "end": "35850"
  },
  {
    "text": "self documenting and it contains over",
    "start": "35850",
    "end": "37710"
  },
  {
    "text": "600 reserved words for you to memorize",
    "start": "37710",
    "end": "39570"
  },
  {
    "text": "to take advantage of and every COBOL",
    "start": "39570",
    "end": "41730"
  },
  {
    "text": "program is structured with an",
    "start": "41730",
    "end": "43200"
  },
  {
    "text": "easy-to-follow hierarchy your program",
    "start": "43200",
    "end": "44940"
  },
  {
    "text": "contains many divisions which contain",
    "start": "44940",
    "end": "46530"
  },
  {
    "text": "many sections which contain many",
    "start": "46530",
    "end": "47879"
  },
  {
    "text": "paragraphs which contain many sentences",
    "start": "47879",
    "end": "49530"
  },
  {
    "text": "that contain your statements which of",
    "start": "49530",
    "end": "51329"
  },
  {
    "text": "course contain many characters when you",
    "start": "51329",
    "end": "52949"
  },
  {
    "text": "start writing some COBOL code you'll",
    "start": "52949",
    "end": "54360"
  },
  {
    "start": "53000",
    "end": "103000"
  },
  {
    "text": "notice these vertical lines in your IDE",
    "start": "54360",
    "end": "55920"
  },
  {
    "text": "the first six characters are your line",
    "start": "55920",
    "end": "57660"
  },
  {
    "text": "numbers start at zero zero zero one",
    "start": "57660",
    "end": "59430"
  },
  {
    "text": "hundred and increment by 100 for each",
    "start": "59430",
    "end": "61410"
  },
  {
    "text": "line column seven is where you identify",
    "start": "61410",
    "end": "62969"
  },
  {
    "text": "comments or the continuation of a",
    "start": "62969",
    "end": "64978"
  },
  {
    "text": "previous line if we're identifying a new",
    "start": "64979",
    "end": "66960"
  },
  {
    "text": "division section or paragraph we can use",
    "start": "66960",
    "end": "68760"
  },
  {
    "text": "columns 8 through 11 and notice how",
    "start": "68760",
    "end": "70560"
  },
  {
    "text": "every line ends with a period that's",
    "start": "70560",
    "end": "72180"
  },
  {
    "text": "what's known as readable code now",
    "start": "72180",
    "end": "73830"
  },
  {
    "text": "columns 12 through 72 are where you",
    "start": "73830",
    "end": "75750"
  },
  {
    "text": "write your actual statements the reason",
    "start": "75750",
    "end": "77430"
  },
  {
    "text": "you don't go beyond 72 columns is",
    "start": "77430",
    "end": "79020"
  },
  {
    "text": "because your code needs to fit onto a",
    "start": "79020",
    "end": "80670"
  },
  {
    "text": "physical punch card and it ensures your",
    "start": "80670",
    "end": "82470"
  },
  {
    "text": "program is responsive on mobile devices",
    "start": "82470",
    "end": "84479"
  },
  {
    "text": "we can define our variables in the data",
    "start": "84479",
    "end": "86310"
  },
  {
    "text": "division first we name the variable then",
    "start": "86310",
    "end": "88320"
  },
  {
    "text": "we define its data type with the picture",
    "start": "88320",
    "end": "89939"
  },
  {
    "text": "keyword then assign a value to it we can",
    "start": "89939",
    "end": "91979"
  },
  {
    "text": "then work with this data in the",
    "start": "91979",
    "end": "93060"
  },
  {
    "text": "procedure division we display the",
    "start": "93060",
    "end": "94470"
  },
  {
    "text": "variable then tell our program to stop",
    "start": "94470",
    "end": "96150"
  },
  {
    "text": "from there we can pile our program to a",
    "start": "96150",
    "end": "97680"
  },
  {
    "text": "binary run it and everything should work",
    "start": "97680",
    "end": "99600"
  },
  {
    "text": "perfectly and now you're qualified for a",
    "start": "99600",
    "end": "101700"
  },
  {
    "text": "six-figure salary maintaining the",
    "start": "101700",
    "end": "103200"
  },
  {
    "start": "103000",
    "end": "122000"
  },
  {
    "text": "world's most critical legacy systems",
    "start": "103200",
    "end": "104939"
  },
  {
    "text": "this has been COBOL in 100 seconds hit",
    "start": "104939",
    "end": "107430"
  },
  {
    "text": "the like button if you want to see more",
    "start": "107430",
    "end": "108570"
  },
  {
    "text": "short videos like this thanks for",
    "start": "108570",
    "end": "110040"
  },
  {
    "text": "watching and I will see you in the next",
    "start": "110040",
    "end": "111840"
  },
  {
    "text": "one oh hey there thanks for sticking",
    "start": "111840",
    "end": "114509"
  },
  {
    "text": "around this is the part of the video",
    "start": "114509",
    "end": "115740"
  },
  {
    "text": "where we go beyond 100 seconds to",
    "start": "115740",
    "end": "117509"
  },
  {
    "text": "learned some more advanced features of",
    "start": "117509",
    "end": "118829"
  },
  {
    "text": "COBOL",
    "start": "118829",
    "end": "121189"
  }
]