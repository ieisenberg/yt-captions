[
  {
    "text": "[Music]",
    "start": "170",
    "end": "5240"
  },
  {
    "text": "hi I'm a JavaScript developer and my",
    "start": "6830",
    "end": "9750"
  },
  {
    "text": "passion is building things for the web",
    "start": "9750",
    "end": "11400"
  },
  {
    "text": "so when it comes to building native",
    "start": "11400",
    "end": "12990"
  },
  {
    "text": "mobile apps javascript has always felt",
    "start": "12990",
    "end": "14790"
  },
  {
    "text": "like the best tool for the job either",
    "start": "14790",
    "end": "16260"
  },
  {
    "text": "via ionic cordova or react native but",
    "start": "16260",
    "end": "18690"
  },
  {
    "text": "flutter has blown my mind recently both",
    "start": "18690",
    "end": "20400"
  },
  {
    "text": "in terms of the developer experience and",
    "start": "20400",
    "end": "22109"
  },
  {
    "text": "the quality of the apps that it can",
    "start": "22109",
    "end": "23490"
  },
  {
    "text": "produce if you're a JavaScript developer",
    "start": "23490",
    "end": "25289"
  },
  {
    "text": "who's heard rumors about flutter and",
    "start": "25289",
    "end": "26760"
  },
  {
    "text": "looking to get acquainted this is the",
    "start": "26760",
    "end": "28529"
  },
  {
    "text": "video for you if you're new here like",
    "start": "28529",
    "end": "30420"
  },
  {
    "text": "and subscribe and you can grab the full",
    "start": "30420",
    "end": "32219"
  },
  {
    "text": "write-up and source code from fire ship",
    "start": "32219",
    "end": "33899"
  },
  {
    "text": "I know first we'll talk about the",
    "start": "33899",
    "end": "35670"
  },
  {
    "text": "trade-offs then we'll look at the",
    "start": "35670",
    "end": "37350"
  },
  {
    "text": "flutter project structure compared to",
    "start": "37350",
    "end": "39180"
  },
  {
    "text": "react native and ionic",
    "start": "39180",
    "end": "40440"
  },
  {
    "text": "then we'll compare the dart programming",
    "start": "40440",
    "end": "42180"
  },
  {
    "text": "language to JavaScript then we'll finish",
    "start": "42180",
    "end": "44070"
  },
  {
    "text": "up by cloning a couple of react native",
    "start": "44070",
    "end": "45690"
  },
  {
    "text": "components as flutter widgets flutter",
    "start": "45690",
    "end": "48120"
  },
  {
    "text": "may or may not be the right tool for the",
    "start": "48120",
    "end": "49410"
  },
  {
    "text": "job everything in life is a trade-off",
    "start": "49410",
    "end": "51210"
  },
  {
    "text": "and there are a couple of big trade-offs",
    "start": "51210",
    "end": "52890"
  },
  {
    "text": "with flutter right off the bat the first",
    "start": "52890",
    "end": "54539"
  },
  {
    "text": "one is the learning curve so if you're",
    "start": "54539",
    "end": "56340"
  },
  {
    "text": "already a web developer or JavaScript",
    "start": "56340",
    "end": "57930"
  },
  {
    "text": "developer you can basically just jump",
    "start": "57930",
    "end": "59399"
  },
  {
    "text": "right into an ionic or react native",
    "start": "59399",
    "end": "61050"
  },
  {
    "text": "project without any learning curve",
    "start": "61050",
    "end": "62699"
  },
  {
    "text": "another potential drawback is the size",
    "start": "62699",
    "end": "64650"
  },
  {
    "text": "of the community coding boot camps are",
    "start": "64650",
    "end": "66450"
  },
  {
    "text": "churning out new JavaScript developers",
    "start": "66450",
    "end": "67830"
  },
  {
    "text": "every day so it's a lot easier to source",
    "start": "67830",
    "end": "69720"
  },
  {
    "text": "talent for your project and the truth is",
    "start": "69720",
    "end": "71700"
  },
  {
    "text": "companies using hybrid frameworks are",
    "start": "71700",
    "end": "73290"
  },
  {
    "text": "generally doing so to save time and",
    "start": "73290",
    "end": "74850"
  },
  {
    "text": "money now while I said there's a",
    "start": "74850",
    "end": "76259"
  },
  {
    "text": "learning curve that learning curve is",
    "start": "76259",
    "end": "77610"
  },
  {
    "text": "pretty gentle this comment says it all",
    "start": "77610",
    "end": "79380"
  },
  {
    "text": "javascript is my wife dart is my",
    "start": "79380",
    "end": "81000"
  },
  {
    "text": "mistress but dart isn't ahead of time",
    "start": "81000",
    "end": "83100"
  },
  {
    "text": "compiled language so it brings something",
    "start": "83100",
    "end": "84630"
  },
  {
    "text": "else to the table performance its engine",
    "start": "84630",
    "end": "86909"
  },
  {
    "text": "is written in C++ and when you have to",
    "start": "86909",
    "end": "88680"
  },
  {
    "text": "make a lot of callbacks to the native",
    "start": "88680",
    "end": "90180"
  },
  {
    "text": "system it's just going to perform better",
    "start": "90180",
    "end": "91770"
  },
  {
    "text": "than a JavaScript bridge it can also",
    "start": "91770",
    "end": "93810"
  },
  {
    "text": "integrate existing native code it can do",
    "start": "93810",
    "end": "95909"
  },
  {
    "text": "hot reloads during development and it",
    "start": "95909",
    "end": "97860"
  },
  {
    "text": "has some of the best documentation that",
    "start": "97860",
    "end": "99270"
  },
  {
    "text": "I've seen for any framework period I'm",
    "start": "99270",
    "end": "101369"
  },
  {
    "text": "in the process of building my own",
    "start": "101369",
    "end": "102810"
  },
  {
    "text": "flutter app for fire ship IO and while",
    "start": "102810",
    "end": "105119"
  },
  {
    "text": "it's not a silver bullet that's just",
    "start": "105119",
    "end": "106320"
  },
  {
    "text": "going to make app development easy you",
    "start": "106320",
    "end": "107939"
  },
  {
    "text": "might be pleasantly surprised and",
    "start": "107939",
    "end": "109259"
  },
  {
    "text": "refreshed if you're a full-time j/s",
    "start": "109259",
    "end": "111000"
  },
  {
    "text": "developer let's go ahead and fade out",
    "start": "111000",
    "end": "112590"
  },
  {
    "text": "the music and start looking at some code",
    "start": "112590",
    "end": "114270"
  },
  {
    "text": "I want to start with just a baseline",
    "start": "114270",
    "end": "116850"
  },
  {
    "text": "comparison of the project structure to",
    "start": "116850",
    "end": "118770"
  },
  {
    "text": "react native and ionic the baseline app",
    "start": "118770",
    "end": "121590"
  },
  {
    "text": "that we have here is just three tabs at",
    "start": "121590",
    "end": "123479"
  },
  {
    "text": "the bottom that can toggle between three",
    "start": "123479",
    "end": "125219"
  },
  {
    "text": "different screens you're looking at the",
    "start": "125219",
    "end": "126930"
  },
  {
    "text": "one I built with flutter but react",
    "start": "126930",
    "end": "128369"
  },
  {
    "text": "native and ionic have their own",
    "start": "128369",
    "end": "129569"
  },
  {
    "text": "templates that you can just generate",
    "start": "129569",
    "end": "130739"
  },
  {
    "text": "with their CL is in a react native",
    "start": "130739",
    "end": "133170"
  },
  {
    "text": "project",
    "start": "133170",
    "end": "133819"
  },
  {
    "text": "building components and those components",
    "start": "133819",
    "end": "135200"
  },
  {
    "text": "combine these styles the templating and",
    "start": "135200",
    "end": "137930"
  },
  {
    "text": "the JavaScript logic in a single file",
    "start": "137930",
    "end": "139639"
  },
  {
    "text": "for each component generally speaking",
    "start": "139639",
    "end": "140959"
  },
  {
    "text": "you use NPM to manage your dependencies",
    "start": "140959",
    "end": "143629"
  },
  {
    "text": "of course and then we have about ten",
    "start": "143629",
    "end": "145219"
  },
  {
    "text": "different JavaScript files to get this",
    "start": "145219",
    "end": "146840"
  },
  {
    "text": "three tap layout working and it looks",
    "start": "146840",
    "end": "148819"
  },
  {
    "text": "almost just like a regular react app",
    "start": "148819",
    "end": "150469"
  },
  {
    "text": "with some special components for",
    "start": "150469",
    "end": "152030"
  },
  {
    "text": "rendering the UI on native and some",
    "start": "152030",
    "end": "153920"
  },
  {
    "text": "platform checking here and there at the",
    "start": "153920",
    "end": "155510"
  },
  {
    "text": "end of the video we'll actually build a",
    "start": "155510",
    "end": "156799"
  },
  {
    "text": "couple of react native components in",
    "start": "156799",
    "end": "158269"
  },
  {
    "text": "flutter now I'm opening up in ionic for",
    "start": "158269",
    "end": "160639"
  },
  {
    "text": "project and you'll see that we have",
    "start": "160639",
    "end": "162260"
  },
  {
    "text": "quite a few more files but that's mainly",
    "start": "162260",
    "end": "164209"
  },
  {
    "text": "because angular separates the templates",
    "start": "164209",
    "end": "166400"
  },
  {
    "text": "and the CSS into their own isolated",
    "start": "166400",
    "end": "168469"
  },
  {
    "text": "files I think this is a good way to",
    "start": "168469",
    "end": "170120"
  },
  {
    "text": "separate concerns but it can also be",
    "start": "170120",
    "end": "171769"
  },
  {
    "text": "pretty overwhelming if you're jumping",
    "start": "171769",
    "end": "173180"
  },
  {
    "text": "into this project for the first time",
    "start": "173180",
    "end": "174500"
  },
  {
    "text": "especially if you don't know angular and",
    "start": "174500",
    "end": "176090"
  },
  {
    "text": "there's a pretty long list of",
    "start": "176090",
    "end": "177139"
  },
  {
    "text": "dependencies that you'll have to learn",
    "start": "177139",
    "end": "178370"
  },
  {
    "text": "but because ionic for now uses web",
    "start": "178370",
    "end": "180019"
  },
  {
    "text": "components you'll be able to use it with",
    "start": "180019",
    "end": "181310"
  },
  {
    "text": "any framework that you want now when we",
    "start": "181310",
    "end": "183049"
  },
  {
    "text": "jump into our flutter project you'll see",
    "start": "183049",
    "end": "184730"
  },
  {
    "text": "right off the bat that it's far less",
    "start": "184730",
    "end": "186019"
  },
  {
    "text": "complex than the JavaScript counterparts",
    "start": "186019",
    "end": "188060"
  },
  {
    "text": "we just have a single file called main",
    "start": "188060",
    "end": "190519"
  },
  {
    "text": "dart which is the entry point to our app",
    "start": "190519",
    "end": "192620"
  },
  {
    "text": "and I was able to build this three tab",
    "start": "192620",
    "end": "194510"
  },
  {
    "text": "layout with only 45 lines of code there",
    "start": "194510",
    "end": "196730"
  },
  {
    "text": "was no import/export headaches and no",
    "start": "196730",
    "end": "198709"
  },
  {
    "text": "boilerplate if we want to run the app we",
    "start": "198709",
    "end": "200780"
  },
  {
    "text": "can do that directly from the command",
    "start": "200780",
    "end": "201949"
  },
  {
    "text": "line and there's no need to download a",
    "start": "201949",
    "end": "203720"
  },
  {
    "text": "special app from the App Store or to",
    "start": "203720",
    "end": "205699"
  },
  {
    "text": "debug in the browser and anytime you",
    "start": "205699",
    "end": "208009"
  },
  {
    "text": "make a change to your code you just",
    "start": "208009",
    "end": "209209"
  },
  {
    "text": "enter R on the command line and it will",
    "start": "209209",
    "end": "210859"
  },
  {
    "text": "hop reload the code and save the state",
    "start": "210859",
    "end": "212840"
  },
  {
    "text": "of the actual app itself react native",
    "start": "212840",
    "end": "215090"
  },
  {
    "text": "can do this also and it has a huge",
    "start": "215090",
    "end": "216739"
  },
  {
    "text": "impact on your development productivity",
    "start": "216739",
    "end": "218329"
  },
  {
    "text": "and when it comes to dependencies you",
    "start": "218329",
    "end": "220759"
  },
  {
    "text": "have this pub spec Yamma which is the",
    "start": "220759",
    "end": "222680"
  },
  {
    "text": "equivalent to a package.json you only",
    "start": "222680",
    "end": "224720"
  },
  {
    "text": "have one dependency right out of the",
    "start": "224720",
    "end": "226129"
  },
  {
    "text": "gate which is the flutter SDK and then",
    "start": "226129",
    "end": "228019"
  },
  {
    "text": "if you add anything else to this file it",
    "start": "228019",
    "end": "229609"
  },
  {
    "text": "will automatically update your",
    "start": "229609",
    "end": "230840"
  },
  {
    "text": "dependencies when you save so if you",
    "start": "230840",
    "end": "232759"
  },
  {
    "text": "like simplicity you might like flutter",
    "start": "232759",
    "end": "234259"
  },
  {
    "text": "but if you want to learn flutter that",
    "start": "234259",
    "end": "235699"
  },
  {
    "text": "means you have to learn a whole another",
    "start": "235699",
    "end": "236750"
  },
  {
    "text": "programming language dart but luckily it",
    "start": "236750",
    "end": "238759"
  },
  {
    "text": "shares a lot of the same conventions as",
    "start": "238759",
    "end": "240169"
  },
  {
    "text": "JavaScript so my goal in the next couple",
    "start": "240169",
    "end": "241819"
  },
  {
    "text": "minutes is to make you productive with",
    "start": "241819",
    "end": "243319"
  },
  {
    "text": "dart from the first keystroke let's look",
    "start": "243319",
    "end": "245299"
  },
  {
    "text": "at the syntax side-by-side with",
    "start": "245299",
    "end": "246590"
  },
  {
    "text": "typescript which will mostly just be",
    "start": "246590",
    "end": "248000"
  },
  {
    "text": "vanilla JavaScript the main entry point",
    "start": "248000",
    "end": "250159"
  },
  {
    "text": "for a dart app which is on the left is",
    "start": "250159",
    "end": "251900"
  },
  {
    "text": "the main function this is where your app",
    "start": "251900",
    "end": "254090"
  },
  {
    "text": "will start executing in JavaScript we",
    "start": "254090",
    "end": "256009"
  },
  {
    "text": "don't really have this concept but what",
    "start": "256009",
    "end": "257539"
  },
  {
    "text": "Apps comment like do is export a",
    "start": "257539",
    "end": "258949"
  },
  {
    "text": "function and then have that function be",
    "start": "258949",
    "end": "260449"
  },
  {
    "text": "called by the library consumer when you",
    "start": "260449",
    "end": "262400"
  },
  {
    "text": "declare a basic reassign humble variable",
    "start": "262400",
    "end": "264320"
  },
  {
    "text": "in dart you start with the type",
    "start": "264320",
    "end": "265820"
  },
  {
    "text": "annotation so if we have a string",
    "start": "265820",
    "end": "267560"
  },
  {
    "text": "variable",
    "start": "267560",
    "end": "268040"
  },
  {
    "text": "we'll type string then we can assign",
    "start": "268040",
    "end": "269630"
  },
  {
    "text": "that variable to a string value and then",
    "start": "269630",
    "end": "271760"
  },
  {
    "text": "reassign it later if we want and if we",
    "start": "271760",
    "end": "273590"
  },
  {
    "text": "want to log that value we can just call",
    "start": "273590",
    "end": "275150"
  },
  {
    "text": "print which is the equivalent to console",
    "start": "275150",
    "end": "276980"
  },
  {
    "text": "login Jas",
    "start": "276980",
    "end": "277970"
  },
  {
    "text": "now we can write the same code over here",
    "start": "277970",
    "end": "279830"
  },
  {
    "text": "in JavaScript which would use let",
    "start": "279830",
    "end": "281240"
  },
  {
    "text": "instead of the type annotation and if we",
    "start": "281240",
    "end": "283340"
  },
  {
    "text": "want to add a type we can append that to",
    "start": "283340",
    "end": "284930"
  },
  {
    "text": "the person variable we can also add",
    "start": "284930",
    "end": "287600"
  },
  {
    "text": "single assignment variables in",
    "start": "287600",
    "end": "288860"
  },
  {
    "text": "JavaScript which we can do with the",
    "start": "288860",
    "end": "290270"
  },
  {
    "text": "Const keyword so it's a cost per s'en",
    "start": "290270",
    "end": "292460"
  },
  {
    "text": "equals Jeff in dart we would instead use",
    "start": "292460",
    "end": "295190"
  },
  {
    "text": "the final keyword this is kind of",
    "start": "295190",
    "end": "297680"
  },
  {
    "text": "confusing because there's also a Const",
    "start": "297680",
    "end": "299510"
  },
  {
    "text": "keyword and dart but it works slightly",
    "start": "299510",
    "end": "301430"
  },
  {
    "text": "different it's more like calling object",
    "start": "301430",
    "end": "302990"
  },
  {
    "text": "freeze and JavaScript because it will",
    "start": "302990",
    "end": "304970"
  },
  {
    "text": "make the entire data structure and",
    "start": "304970",
    "end": "306410"
  },
  {
    "text": "mutable so in dart you would use Const",
    "start": "306410",
    "end": "308390"
  },
  {
    "text": "to make an array or a map completely",
    "start": "308390",
    "end": "310070"
  },
  {
    "text": "immutable meaning its properties or",
    "start": "310070",
    "end": "311810"
  },
  {
    "text": "elements can't be changed so dart has a",
    "start": "311810",
    "end": "314480"
  },
  {
    "text": "sound type system but it's also flexible",
    "start": "314480",
    "end": "316460"
  },
  {
    "text": "for example we can use the VAR keyword",
    "start": "316460",
    "end": "318140"
  },
  {
    "text": "to tell dart to implicitly figure out",
    "start": "318140",
    "end": "320450"
  },
  {
    "text": "the type so if you hate type annotations",
    "start": "320450",
    "end": "322400"
  },
  {
    "text": "everywhere or if you have a dynamic type",
    "start": "322400",
    "end": "324110"
  },
  {
    "text": "this can be a useful tool",
    "start": "324110",
    "end": "325370"
  },
  {
    "text": "and speaking of dynamic dart also has a",
    "start": "325370",
    "end": "327950"
  },
  {
    "text": "dynamic type which is similar to the any",
    "start": "327950",
    "end": "330200"
  },
  {
    "text": "type and type script this is most useful",
    "start": "330200",
    "end": "332120"
  },
  {
    "text": "when you have data coming from external",
    "start": "332120",
    "end": "333950"
  },
  {
    "text": "source and you don't really know what",
    "start": "333950",
    "end": "335450"
  },
  {
    "text": "the shape of that data is going to look",
    "start": "335450",
    "end": "336860"
  },
  {
    "text": "like so when you see the dynamic keyword",
    "start": "336860",
    "end": "338480"
  },
  {
    "text": "that basically just means we don't know",
    "start": "338480",
    "end": "340160"
  },
  {
    "text": "now let's switch gears and talk about",
    "start": "340160",
    "end": "341930"
  },
  {
    "text": "something that's especially important in",
    "start": "341930",
    "end": "343490"
  },
  {
    "text": "JavaScript and that's importing things",
    "start": "343490",
    "end": "345140"
  },
  {
    "text": "between files there's a lot of ways to",
    "start": "345140",
    "end": "347300"
  },
  {
    "text": "do this in JavaScript but we'll just go",
    "start": "347300",
    "end": "348650"
  },
  {
    "text": "to the es6 way will export a default",
    "start": "348650",
    "end": "351410"
  },
  {
    "text": "value which points to our Lang variable",
    "start": "351410",
    "end": "353600"
  },
  {
    "text": "and we could export multiple values from",
    "start": "353600",
    "end": "355250"
  },
  {
    "text": "this file if we put it inside of braces",
    "start": "355250",
    "end": "357200"
  },
  {
    "text": "now if we go back to the file that wants",
    "start": "357200",
    "end": "359150"
  },
  {
    "text": "to import this value we can simply",
    "start": "359150",
    "end": "361160"
  },
  {
    "text": "import it from that file this works fine",
    "start": "361160",
    "end": "363380"
  },
  {
    "text": "when you just need one thing but you",
    "start": "363380",
    "end": "364790"
  },
  {
    "text": "know as a JavaScript developer that this",
    "start": "364790",
    "end": "366200"
  },
  {
    "text": "gets harder as you need more and more",
    "start": "366200",
    "end": "367610"
  },
  {
    "text": "things so we rely on snippets and",
    "start": "367610",
    "end": "369410"
  },
  {
    "text": "barrels and stuff like that just to",
    "start": "369410",
    "end": "370910"
  },
  {
    "text": "manage the mental boilerplate of imports",
    "start": "370910",
    "end": "372920"
  },
  {
    "text": "and exports in dart we don't have to",
    "start": "372920",
    "end": "374720"
  },
  {
    "text": "worry about exporting anything if we",
    "start": "374720",
    "end": "376370"
  },
  {
    "text": "declare a variable in this Global's dart",
    "start": "376370",
    "end": "378350"
  },
  {
    "text": "file and then import it in the other",
    "start": "378350",
    "end": "380120"
  },
  {
    "text": "file it's going to be available by",
    "start": "380120",
    "end": "381650"
  },
  {
    "text": "default and because dart is strong typed",
    "start": "381650",
    "end": "383390"
  },
  {
    "text": "and the tooling so good we can just",
    "start": "383390",
    "end": "384800"
  },
  {
    "text": "start typing out the name of something",
    "start": "384800",
    "end": "386060"
  },
  {
    "text": "in this file and it will intellisense",
    "start": "386060",
    "end": "387770"
  },
  {
    "text": "autocomplete for us now let's take a",
    "start": "387770",
    "end": "390110"
  },
  {
    "text": "look at functions functions feel just",
    "start": "390110",
    "end": "392090"
  },
  {
    "text": "like they do in JavaScript - the",
    "start": "392090",
    "end": "393740"
  },
  {
    "text": "function keyword if we want to use type",
    "start": "393740",
    "end": "395960"
  },
  {
    "text": "annotations they come before the actual",
    "start": "395960",
    "end": "397700"
  },
  {
    "text": "name unlike typescript which comes after",
    "start": "397700",
    "end": "399500"
  },
  {
    "text": "the name you can also use anonymous",
    "start": "399500",
    "end": "401390"
  },
  {
    "text": "phone",
    "start": "401390",
    "end": "401930"
  },
  {
    "text": "arrow functions and higher-order",
    "start": "401930",
    "end": "403610"
  },
  {
    "text": "functions in this example here we have a",
    "start": "403610",
    "end": "406370"
  },
  {
    "text": "higher-order function call me which",
    "start": "406370",
    "end": "408050"
  },
  {
    "text": "takes a function as its argument and",
    "start": "408050",
    "end": "409729"
  },
  {
    "text": "then when we call it we use an anonymous",
    "start": "409729",
    "end": "411650"
  },
  {
    "text": "function with the arrow syntax just like",
    "start": "411650",
    "end": "413509"
  },
  {
    "text": "we would in JavaScript so functions will",
    "start": "413509",
    "end": "415220"
  },
  {
    "text": "feel just like they do in JavaScript",
    "start": "415220",
    "end": "416389"
  },
  {
    "text": "just with a smaller code footprint now I",
    "start": "416389",
    "end": "418820"
  },
  {
    "text": "realize I'm going pretty fast with these",
    "start": "418820",
    "end": "420199"
  },
  {
    "text": "code snippets so make sure to check out",
    "start": "420199",
    "end": "421789"
  },
  {
    "text": "the full article if you want to copy and",
    "start": "421789",
    "end": "423560"
  },
  {
    "text": "paste these to try them out on your own",
    "start": "423560",
    "end": "424990"
  },
  {
    "text": "the next thing we'll look at is",
    "start": "424990",
    "end": "426880"
  },
  {
    "text": "object-oriented programming",
    "start": "426880",
    "end": "428570"
  },
  {
    "text": "dart supports mixin based inheritance",
    "start": "428570",
    "end": "430520"
  },
  {
    "text": "which means that any given class will",
    "start": "430520",
    "end": "432289"
  },
  {
    "text": "only have one superclass but the class",
    "start": "432289",
    "end": "434360"
  },
  {
    "text": "body can be used in multiple classes so",
    "start": "434360",
    "end": "436580"
  },
  {
    "text": "you can do things like behavior based",
    "start": "436580",
    "end": "438169"
  },
  {
    "text": "composition in JavaScript classes are",
    "start": "438169",
    "end": "440960"
  },
  {
    "text": "more or less just syntactic sugar for",
    "start": "440960",
    "end": "442639"
  },
  {
    "text": "prototype one heritance",
    "start": "442639",
    "end": "444020"
  },
  {
    "text": "so they get kind of a bad reputation in",
    "start": "444020",
    "end": "445610"
  },
  {
    "text": "the JavaScript community but in any case",
    "start": "445610",
    "end": "447350"
  },
  {
    "text": "the syntax is very similar so we define",
    "start": "447350",
    "end": "449660"
  },
  {
    "text": "a class by using the class keyword and",
    "start": "449660",
    "end": "451460"
  },
  {
    "text": "then we can instantiate that class by",
    "start": "451460",
    "end": "453110"
  },
  {
    "text": "calling it with parentheses in",
    "start": "453110",
    "end": "455510"
  },
  {
    "text": "JavaScript we do the exact same thing",
    "start": "455510",
    "end": "457190"
  },
  {
    "text": "except we use the new keyword when",
    "start": "457190",
    "end": "458900"
  },
  {
    "text": "instantiating the class the new keywords",
    "start": "458900",
    "end": "460729"
  },
  {
    "text": "optional in dart and you'll be",
    "start": "460729",
    "end": "462530"
  },
  {
    "text": "instantiating a lot of objects and",
    "start": "462530",
    "end": "464000"
  },
  {
    "text": "flutters so this helps keep your code",
    "start": "464000",
    "end": "465349"
  },
  {
    "text": "very clean when we instantiate an",
    "start": "465349",
    "end": "467990"
  },
  {
    "text": "instance of a class we're creating an",
    "start": "467990",
    "end": "469490"
  },
  {
    "text": "object we need to tell our code how to",
    "start": "469490",
    "end": "471770"
  },
  {
    "text": "create that initial object which we do",
    "start": "471770",
    "end": "473479"
  },
  {
    "text": "with a constructor in vanilla JavaScript",
    "start": "473479",
    "end": "475699"
  },
  {
    "text": "to look like this we pass arguments to",
    "start": "475699",
    "end": "477590"
  },
  {
    "text": "the constructor and then initialize them",
    "start": "477590",
    "end": "479270"
  },
  {
    "text": "as values on the this context in",
    "start": "479270",
    "end": "481729"
  },
  {
    "text": "typescript we can do this in a little",
    "start": "481729",
    "end": "483020"
  },
  {
    "text": "more sugary way where we annotate our",
    "start": "483020",
    "end": "484909"
  },
  {
    "text": "input variables as private or public and",
    "start": "484909",
    "end": "487639"
  },
  {
    "text": "then they'll automatically be available",
    "start": "487639",
    "end": "488990"
  },
  {
    "text": "on this class in dart we have an even",
    "start": "488990",
    "end": "491210"
  },
  {
    "text": "cleaner way to construct an object by",
    "start": "491210",
    "end": "493159"
  },
  {
    "text": "just calling the class as a function in",
    "start": "493159",
    "end": "495949"
  },
  {
    "text": "addition dart has the concept of public",
    "start": "495949",
    "end": "498110"
  },
  {
    "text": "and private members everything is public",
    "start": "498110",
    "end": "500180"
  },
  {
    "text": "by default but if you want to make",
    "start": "500180",
    "end": "501440"
  },
  {
    "text": "something private to the library or",
    "start": "501440",
    "end": "503060"
  },
  {
    "text": "class just add an underscore to the",
    "start": "503060",
    "end": "504889"
  },
  {
    "text": "beginning of its name and dart has",
    "start": "504889",
    "end": "506780"
  },
  {
    "text": "another cool thing up its sleeve called",
    "start": "506780",
    "end": "508190"
  },
  {
    "text": "named constructors the one we just wrote",
    "start": "508190",
    "end": "510380"
  },
  {
    "text": "is the default but we can also add a",
    "start": "510380",
    "end": "511880"
  },
  {
    "text": "name constructor to provide different",
    "start": "511880",
    "end": "513650"
  },
  {
    "text": "initialization logic as needed we just",
    "start": "513650",
    "end": "515900"
  },
  {
    "text": "implement a method name on the class",
    "start": "515900",
    "end": "517820"
  },
  {
    "text": "name itself and now we have a different",
    "start": "517820",
    "end": "519589"
  },
  {
    "text": "constructor with whatever logic we want",
    "start": "519589",
    "end": "521390"
  },
  {
    "text": "there's a lot more we could cover here",
    "start": "521390",
    "end": "522950"
  },
  {
    "text": "but the actual definitions of methods",
    "start": "522950",
    "end": "524930"
  },
  {
    "text": "and properties on this class is exactly",
    "start": "524930",
    "end": "526880"
  },
  {
    "text": "the same as it is in JavaScript so we'll",
    "start": "526880",
    "end": "528740"
  },
  {
    "text": "just go ahead and leave it there the",
    "start": "528740",
    "end": "529940"
  },
  {
    "text": "next thing I want to cover is the dart",
    "start": "529940",
    "end": "531350"
  },
  {
    "text": "list which is equivalent to a JavaScript",
    "start": "531350",
    "end": "533630"
  },
  {
    "text": "array",
    "start": "533630",
    "end": "535100"
  },
  {
    "text": "we can create a list of integers by",
    "start": "535100",
    "end": "536930"
  },
  {
    "text": "starting with the type annotation and",
    "start": "536930",
    "end": "538640"
  },
  {
    "text": "then define it just like we would in",
    "start": "538640",
    "end": "540110"
  },
  {
    "text": "JavaScript and just like JavaScript the",
    "start": "540110",
    "end": "543140"
  },
  {
    "text": "list has a whole bunch of built-in",
    "start": "543140",
    "end": "544400"
  },
  {
    "text": "methods that we can use to manipulate it",
    "start": "544400",
    "end": "546290"
  },
  {
    "text": "and loop over it you'll find all your",
    "start": "546290",
    "end": "548390"
  },
  {
    "text": "old favorites like for each map and",
    "start": "548390",
    "end": "550340"
  },
  {
    "text": "reduce and you'll find a lot of other",
    "start": "550340",
    "end": "552080"
  },
  {
    "text": "ones that are implemented in third-party",
    "start": "552080",
    "end": "553910"
  },
  {
    "text": "libraries like lodash but my absolute",
    "start": "553910",
    "end": "556430"
  },
  {
    "text": "favorite one is just having the last",
    "start": "556430",
    "end": "558350"
  },
  {
    "text": "property I don't even want to admit how",
    "start": "558350",
    "end": "560120"
  },
  {
    "text": "many times I've googled how to get the",
    "start": "560120",
    "end": "561380"
  },
  {
    "text": "last element from an array in JavaScript",
    "start": "561380",
    "end": "562640"
  },
  {
    "text": "only to settle on this crappy code or",
    "start": "562640",
    "end": "564860"
  },
  {
    "text": "use something like a ray pop which also",
    "start": "564860",
    "end": "566510"
  },
  {
    "text": "is an ideal the next thing we'll look at",
    "start": "566510",
    "end": "568520"
  },
  {
    "text": "is the dart map which is the equivalent",
    "start": "568520",
    "end": "570290"
  },
  {
    "text": "to a JavaScript object or a JavaScript",
    "start": "570290",
    "end": "572450"
  },
  {
    "text": "map it kind of takes the best of both",
    "start": "572450",
    "end": "574340"
  },
  {
    "text": "worlds and just combines them into a",
    "start": "574340",
    "end": "575780"
  },
  {
    "text": "single data structure in JavaScript we",
    "start": "575780",
    "end": "578480"
  },
  {
    "text": "can create a plane object by wrapping",
    "start": "578480",
    "end": "580550"
  },
  {
    "text": "key value pairs and braces we can almost",
    "start": "580550",
    "end": "582650"
  },
  {
    "text": "do the same thing with a dart map but",
    "start": "582650",
    "end": "584420"
  },
  {
    "text": "the keys in that object will be strongly",
    "start": "584420",
    "end": "586250"
  },
  {
    "text": "typed this means you can use anything",
    "start": "586250",
    "end": "587900"
  },
  {
    "text": "for the key itself which could be a",
    "start": "587900",
    "end": "589670"
  },
  {
    "text": "class or a class instance or whatever",
    "start": "589670",
    "end": "591920"
  },
  {
    "text": "you want now you could also do this with",
    "start": "591920",
    "end": "593210"
  },
  {
    "text": "a javascript map there just",
    "start": "593210",
    "end": "594650"
  },
  {
    "text": "syntactically not as nice to work with",
    "start": "594650",
    "end": "596390"
  },
  {
    "text": "now the next thing we're going to look",
    "start": "596390",
    "end": "597980"
  },
  {
    "text": "at is asynchronous programming which is",
    "start": "597980",
    "end": "599900"
  },
  {
    "text": "one of the most important concepts to",
    "start": "599900",
    "end": "601280"
  },
  {
    "text": "know for JavaScript and flutter alike in",
    "start": "601280",
    "end": "603500"
  },
  {
    "text": "JavaScript we have promises and we can",
    "start": "603500",
    "end": "605600"
  },
  {
    "text": "create promises by writing async",
    "start": "605600",
    "end": "607400"
  },
  {
    "text": "functions that return some value by",
    "start": "607400",
    "end": "609320"
  },
  {
    "text": "default these will automatically return",
    "start": "609320",
    "end": "610640"
  },
  {
    "text": "a promise now in some other async",
    "start": "610640",
    "end": "612740"
  },
  {
    "text": "function we can await the value of this",
    "start": "612740",
    "end": "614510"
  },
  {
    "text": "promise which will pause the execution",
    "start": "614510",
    "end": "616250"
  },
  {
    "text": "of the function until that promise",
    "start": "616250",
    "end": "617750"
  },
  {
    "text": "returns some kind of value and if we",
    "start": "617750",
    "end": "619700"
  },
  {
    "text": "don't want to use async await we can use",
    "start": "619700",
    "end": "621350"
  },
  {
    "text": "then to capture the value when it's",
    "start": "621350",
    "end": "623120"
  },
  {
    "text": "resolved or catch if it results in an",
    "start": "623120",
    "end": "625040"
  },
  {
    "text": "error in dart we don't have promises but",
    "start": "625040",
    "end": "627590"
  },
  {
    "text": "instead futures luckily you don't have",
    "start": "627590",
    "end": "630740"
  },
  {
    "text": "to relearn everything you know about",
    "start": "630740",
    "end": "631880"
  },
  {
    "text": "async programming because a future works",
    "start": "631880",
    "end": "633890"
  },
  {
    "text": "exactly like a promise we can write an",
    "start": "633890",
    "end": "636230"
  },
  {
    "text": "async function which will return a",
    "start": "636230",
    "end": "638030"
  },
  {
    "text": "future by default and we can write",
    "start": "638030",
    "end": "639740"
  },
  {
    "text": "another function that awaits the result",
    "start": "639740",
    "end": "641750"
  },
  {
    "text": "value from that future if we have a",
    "start": "641750",
    "end": "643880"
  },
  {
    "text": "future we can call then or catch error",
    "start": "643880",
    "end": "645860"
  },
  {
    "text": "on it so the ergonomics are really no",
    "start": "645860",
    "end": "647660"
  },
  {
    "text": "different than promises now dart has a",
    "start": "647660",
    "end": "650120"
  },
  {
    "text": "stream data structure for handling",
    "start": "650120",
    "end": "651980"
  },
  {
    "text": "multiple asynchronous values vanilla",
    "start": "651980",
    "end": "653960"
  },
  {
    "text": "JavaScript doesn't have anything like",
    "start": "653960",
    "end": "655280"
  },
  {
    "text": "that right out of the box but a lot of",
    "start": "655280",
    "end": "656990"
  },
  {
    "text": "libraries provide them like rxjs and mob",
    "start": "656990",
    "end": "659660"
  },
  {
    "text": "x via observables so an rxjs for example",
    "start": "659660",
    "end": "662960"
  },
  {
    "text": "we can create an observable like this",
    "start": "662960",
    "end": "664310"
  },
  {
    "text": "and if we want to listen to the values",
    "start": "664310",
    "end": "666080"
  },
  {
    "text": "in it we call subscribe on it then we",
    "start": "666080",
    "end": "668120"
  },
  {
    "text": "pass subscribe",
    "start": "668120",
    "end": "668870"
  },
  {
    "text": "callback function to execute some code",
    "start": "668870",
    "end": "670520"
  },
  {
    "text": "whenever it emits a new value we can",
    "start": "670520",
    "end": "673040"
  },
  {
    "text": "follow a similar pattern in dart with",
    "start": "673040",
    "end": "674720"
  },
  {
    "text": "the stream object but we can actually",
    "start": "674720",
    "end": "676220"
  },
  {
    "text": "use this with async/await as well we can",
    "start": "676220",
    "end": "679040"
  },
  {
    "text": "use in a weight for loop to basically",
    "start": "679040",
    "end": "680720"
  },
  {
    "text": "loop over an object as it changes over",
    "start": "680720",
    "end": "682700"
  },
  {
    "text": "time this often results in much more",
    "start": "682700",
    "end": "684410"
  },
  {
    "text": "readable code compared to chaining a",
    "start": "684410",
    "end": "686120"
  },
  {
    "text": "bunch of callback functions together but",
    "start": "686120",
    "end": "688160"
  },
  {
    "text": "we can also subscribe to a stream just",
    "start": "688160",
    "end": "689600"
  },
  {
    "text": "like we would with an observable except",
    "start": "689600",
    "end": "691070"
  },
  {
    "text": "it's called listen so at this point",
    "start": "691070",
    "end": "692660"
  },
  {
    "text": "you're probably seeing a pattern the",
    "start": "692660",
    "end": "693890"
  },
  {
    "text": "dart is very similar to JavaScript in a",
    "start": "693890",
    "end": "695630"
  },
  {
    "text": "lot of ways but maybe a little smoother",
    "start": "695630",
    "end": "697400"
  },
  {
    "text": "around the edges so let's see how this",
    "start": "697400",
    "end": "698990"
  },
  {
    "text": "actually translates into building a",
    "start": "698990",
    "end": "700700"
  },
  {
    "text": "widget with flutter to do that I just",
    "start": "700700",
    "end": "702529"
  },
  {
    "text": "went to the react native Docs and",
    "start": "702529",
    "end": "704150"
  },
  {
    "text": "grabbed a couple of their examples the",
    "start": "704150",
    "end": "706130"
  },
  {
    "text": "first example shows how to apply Styles",
    "start": "706130",
    "end": "708080"
  },
  {
    "text": "in a way that can be merged so one style",
    "start": "708080",
    "end": "710060"
  },
  {
    "text": "can override the other in only the",
    "start": "710060",
    "end": "711740"
  },
  {
    "text": "properties that it wants to change on",
    "start": "711740",
    "end": "713180"
  },
  {
    "text": "the right we have the react native",
    "start": "713180",
    "end": "714589"
  },
  {
    "text": "component which was just copied directly",
    "start": "714589",
    "end": "716240"
  },
  {
    "text": "from the docs and then recreated in",
    "start": "716240",
    "end": "718130"
  },
  {
    "text": "flutter on the left in react native we",
    "start": "718130",
    "end": "720529"
  },
  {
    "text": "implement a render function that returns",
    "start": "720529",
    "end": "722390"
  },
  {
    "text": "a bunch of different components that",
    "start": "722390",
    "end": "723770"
  },
  {
    "text": "resemble HTML then to apply the styles",
    "start": "723770",
    "end": "726410"
  },
  {
    "text": "we have a style property then we can add",
    "start": "726410",
    "end": "728510"
  },
  {
    "text": "our Styles to an array and react will",
    "start": "728510",
    "end": "730580"
  },
  {
    "text": "apply those Styles from left to right",
    "start": "730580",
    "end": "731960"
  },
  {
    "text": "and flutter the overall structure looks",
    "start": "731960",
    "end": "734870"
  },
  {
    "text": "very similar but instead we are",
    "start": "734870",
    "end": "736370"
  },
  {
    "text": "instantiating objects and because",
    "start": "736370",
    "end": "738410"
  },
  {
    "text": "there's no new keyword it actually looks",
    "start": "738410",
    "end": "739850"
  },
  {
    "text": "like we're just calling functions and",
    "start": "739850",
    "end": "741260"
  },
  {
    "text": "all this happens inside the build method",
    "start": "741260",
    "end": "743330"
  },
  {
    "text": "which is the equivalent to render so",
    "start": "743330",
    "end": "745490"
  },
  {
    "text": "overall you should be able to see that",
    "start": "745490",
    "end": "746779"
  },
  {
    "text": "flutter took a lot of inspiration from",
    "start": "746779",
    "end": "748250"
  },
  {
    "text": "react so that's a very basic comparison",
    "start": "748250",
    "end": "751100"
  },
  {
    "text": "on a stateless widget or component but",
    "start": "751100",
    "end": "753140"
  },
  {
    "text": "the real value of these frameworks is",
    "start": "753140",
    "end": "754520"
  },
  {
    "text": "that they can react to changes in data",
    "start": "754520",
    "end": "756140"
  },
  {
    "text": "this time I'm grabbing the state example",
    "start": "756140",
    "end": "758360"
  },
  {
    "text": "from react native and will clone it in",
    "start": "758360",
    "end": "760010"
  },
  {
    "text": "flutter one of the main features of a",
    "start": "760010",
    "end": "762200"
  },
  {
    "text": "react component is that it has the set",
    "start": "762200",
    "end": "764180"
  },
  {
    "text": "state method that will rerender it when",
    "start": "764180",
    "end": "766220"
  },
  {
    "text": "called with state changes and flutter",
    "start": "766220",
    "end": "768050"
  },
  {
    "text": "has this exact same thing on what's",
    "start": "768050",
    "end": "769640"
  },
  {
    "text": "called a stateful widget and that's a",
    "start": "769640",
    "end": "771589"
  },
  {
    "text": "perfectly fine way to build your widgets",
    "start": "771589",
    "end": "773270"
  },
  {
    "text": "but what you'll find in both flutter and",
    "start": "773270",
    "end": "774980"
  },
  {
    "text": "react is that coin sets stay all the",
    "start": "774980",
    "end": "776690"
  },
  {
    "text": "time doesn't scale very well so you",
    "start": "776690",
    "end": "778490"
  },
  {
    "text": "pretty quickly have to implement",
    "start": "778490",
    "end": "779600"
  },
  {
    "text": "something like Redux for state",
    "start": "779600",
    "end": "780980"
  },
  {
    "text": "management and that's perfectly fine and",
    "start": "780980",
    "end": "782720"
  },
  {
    "text": "you can do that in flutter as well but",
    "start": "782720",
    "end": "784580"
  },
  {
    "text": "flutter also has these things called",
    "start": "784580",
    "end": "785839"
  },
  {
    "text": "builders which allow you to work with",
    "start": "785839",
    "end": "787520"
  },
  {
    "text": "asynchronous data sources and render the",
    "start": "787520",
    "end": "789680"
  },
  {
    "text": "UI automatically they're similar",
    "start": "789680",
    "end": "791510"
  },
  {
    "text": "conceptually to the async pipe in",
    "start": "791510",
    "end": "793400"
  },
  {
    "text": "angular basically you tell your UI to",
    "start": "793400",
    "end": "795440"
  },
  {
    "text": "listen to a stream and then rerender",
    "start": "795440",
    "end": "797240"
  },
  {
    "text": "different templates or widgets based on",
    "start": "797240",
    "end": "799280"
  },
  {
    "text": "whatever the value of that stream might",
    "start": "799280",
    "end": "800750"
  },
  {
    "text": "be I'm gonna go ahead and wrap things",
    "start": "800750",
    "end": "802760"
  },
  {
    "text": "there hopefully this gave you a general",
    "start": "802760",
    "end": "804230"
  },
  {
    "text": "idea of what flutter is all about I",
    "start": "804230",
    "end": "805639"
  },
  {
    "text": "never really expected to be writing dart",
    "start": "805639",
    "end": "807230"
  },
  {
    "text": "code on a regular basis but I am super",
    "start": "807230",
    "end": "809000"
  },
  {
    "text": "excited to be building the fire ship i/o",
    "start": "809000",
    "end": "810560"
  },
  {
    "text": "app with flutter thanks for watching and",
    "start": "810560",
    "end": "812690"
  },
  {
    "text": "I will talk to you soon",
    "start": "812690",
    "end": "815440"
  },
  {
    "text": "[Music]",
    "start": "815440",
    "end": "818609"
  }
]