[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "today on how they do it if you watch my",
    "start": "0",
    "end": "1890"
  },
  {
    "text": "youtube channel there's a good chance",
    "start": "1890",
    "end": "3060"
  },
  {
    "text": "you've already seen Tom Scott's video",
    "start": "3060",
    "end": "4529"
  },
  {
    "text": "this video has X amount of views if not",
    "start": "4529",
    "end": "7200"
  },
  {
    "text": "check it out",
    "start": "7200",
    "end": "7890"
  },
  {
    "text": "but basically what he does is run a",
    "start": "7890",
    "end": "9210"
  },
  {
    "text": "background job that hits the YouTube API",
    "start": "9210",
    "end": "11160"
  },
  {
    "text": "to update the title with the latest view",
    "start": "11160",
    "end": "13170"
  },
  {
    "text": "count every few minutes then another",
    "start": "13170",
    "end": "14880"
  },
  {
    "text": "youtuber you may have heard of mr. beast",
    "start": "14880",
    "end": "16350"
  },
  {
    "text": "appears to be doing the same thing in",
    "start": "16350",
    "end": "17730"
  },
  {
    "text": "his latest video where the thumbnail",
    "start": "17730",
    "end": "19170"
  },
  {
    "text": "updates every few minutes with the",
    "start": "19170",
    "end": "20520"
  },
  {
    "text": "amount of money given away if you're",
    "start": "20520",
    "end": "22140"
  },
  {
    "text": "wondering how to do this you might be a",
    "start": "22140",
    "end": "23400"
  },
  {
    "text": "little disappointed when Tom Scott says",
    "start": "23400",
    "end": "25050"
  },
  {
    "text": "I'm not gonna talk about the exact",
    "start": "25050",
    "end": "26609"
  },
  {
    "text": "details of my code here it is not the",
    "start": "26609",
    "end": "28199"
  },
  {
    "text": "important part because code is just",
    "start": "28199",
    "end": "30599"
  },
  {
    "text": "incredibly dull on camera but I have to",
    "start": "30599",
    "end": "33180"
  },
  {
    "text": "disagree there because in my opinion if",
    "start": "33180",
    "end": "34680"
  },
  {
    "text": "the code is the most exciting part so in",
    "start": "34680",
    "end": "36570"
  },
  {
    "text": "today's video we'll take a deep dive",
    "start": "36570",
    "end": "37950"
  },
  {
    "text": "into api's and i'll show you exactly how",
    "start": "37950",
    "end": "39690"
  },
  {
    "text": "these youtubers are updating their",
    "start": "39690",
    "end": "41160"
  },
  {
    "text": "videos automatically in the background",
    "start": "41160",
    "end": "42809"
  },
  {
    "text": "if you're new here like and subscribe",
    "start": "42809",
    "end": "44129"
  },
  {
    "text": "and you can grab the full source code",
    "start": "44129",
    "end": "45329"
  },
  {
    "text": "from github my primary mission today is",
    "start": "45329",
    "end": "47610"
  },
  {
    "text": "to teach you everything you need to know",
    "start": "47610",
    "end": "48960"
  },
  {
    "start": "48000",
    "end": "115000"
  },
  {
    "text": "about api's which is an essential skill",
    "start": "48960",
    "end": "50910"
  },
  {
    "text": "for both front-end and back-end",
    "start": "50910",
    "end": "51960"
  },
  {
    "text": "developers along the way you'll learn",
    "start": "51960",
    "end": "53850"
  },
  {
    "text": "about API authentication and oaah",
    "start": "53850",
    "end": "55890"
  },
  {
    "text": "- how to work with Google API s and",
    "start": "55890",
    "end": "57960"
  },
  {
    "text": "nodejs and how to schedule your code to",
    "start": "57960",
    "end": "60030"
  },
  {
    "text": "run in the background with a service",
    "start": "60030",
    "end": "61469"
  },
  {
    "text": "cloud function but first let's answer",
    "start": "61469",
    "end": "63420"
  },
  {
    "text": "the question what is an API an",
    "start": "63420",
    "end": "65158"
  },
  {
    "text": "application programming interface is",
    "start": "65159",
    "end": "67170"
  },
  {
    "text": "simply a way for two pieces of software",
    "start": "67170",
    "end": "69060"
  },
  {
    "text": "to talk to each other in this demo we",
    "start": "69060",
    "end": "71159"
  },
  {
    "text": "have our application which will",
    "start": "71159",
    "end": "72540"
  },
  {
    "text": "eventually live on a cloud function it",
    "start": "72540",
    "end": "74340"
  },
  {
    "text": "needs to talk to YouTube to get the view",
    "start": "74340",
    "end": "76110"
  },
  {
    "text": "count for a video and then tell YouTube",
    "start": "76110",
    "end": "77970"
  },
  {
    "text": "to update the video with a new title to",
    "start": "77970",
    "end": "80130"
  },
  {
    "text": "facilitate this YouTube has a standard",
    "start": "80130",
    "end": "81960"
  },
  {
    "text": "set of functions where developers can",
    "start": "81960",
    "end": "83640"
  },
  {
    "text": "request the data they need on the web",
    "start": "83640",
    "end": "85439"
  },
  {
    "text": "api's are accessed over HTTP or in other",
    "start": "85439",
    "end": "88350"
  },
  {
    "text": "words there's a URL on the internet that",
    "start": "88350",
    "end": "90509"
  },
  {
    "text": "connects that server to the rest of the",
    "start": "90509",
    "end": "92280"
  },
  {
    "text": "Internet the most popular standard for",
    "start": "92280",
    "end": "93960"
  },
  {
    "text": "implementing API is in today's world is",
    "start": "93960",
    "end": "95759"
  },
  {
    "text": "rest which stands for representational",
    "start": "95759",
    "end": "97320"
  },
  {
    "text": "state transfer API is that implement the",
    "start": "97320",
    "end": "99930"
  },
  {
    "text": "standard like YouTube are called restful",
    "start": "99930",
    "end": "101909"
  },
  {
    "text": "api is the most important concept to",
    "start": "101909",
    "end": "103649"
  },
  {
    "text": "understand is that restful api s are",
    "start": "103649",
    "end": "105689"
  },
  {
    "text": "stateless which means the client and the",
    "start": "105689",
    "end": "107670"
  },
  {
    "text": "server don't need to know anything about",
    "start": "107670",
    "end": "109229"
  },
  {
    "text": "each other's internal state instead they",
    "start": "109229",
    "end": "111780"
  },
  {
    "text": "simply pass messages back and forth the",
    "start": "111780",
    "end": "113670"
  },
  {
    "text": "process starts when the client your",
    "start": "113670",
    "end": "115350"
  },
  {
    "start": "115000",
    "end": "169000"
  },
  {
    "text": "application makes a request an HTTP",
    "start": "115350",
    "end": "118020"
  },
  {
    "text": "request message has a very specific form",
    "start": "118020",
    "end": "119909"
  },
  {
    "text": "at the start line contains the URL of",
    "start": "119909",
    "end": "122219"
  },
  {
    "text": "the API you're making a request to it",
    "start": "122219",
    "end": "124259"
  },
  {
    "text": "also contains an HTTP method for verb",
    "start": "124259",
    "end": "126659"
  },
  {
    "text": "that defines what you're trying to do on",
    "start": "126659",
    "end": "128489"
  },
  {
    "text": "the server a get request means you're",
    "start": "128489",
    "end": "130349"
  },
  {
    "text": "trying to access data but not modify it",
    "start": "130349",
    "end": "132239"
  },
  {
    "text": "where is a post request",
    "start": "132239",
    "end": "133620"
  },
  {
    "text": "means you're trying to create some new",
    "start": "133620",
    "end": "134970"
  },
  {
    "text": "data on the server the reason this is",
    "start": "134970",
    "end": "136680"
  },
  {
    "text": "important is because the API can design",
    "start": "136680",
    "end": "138900"
  },
  {
    "text": "endpoints based on a specific entity we",
    "start": "138900",
    "end": "141299"
  },
  {
    "text": "can see that in the YouTube API where it",
    "start": "141299",
    "end": "143010"
  },
  {
    "text": "has different entities for comments",
    "start": "143010",
    "end": "144750"
  },
  {
    "text": "videos playlists etc the cool thing",
    "start": "144750",
    "end": "147090"
  },
  {
    "text": "about YouTube is that it has an API",
    "start": "147090",
    "end": "148620"
  },
  {
    "text": "Explorer so we can actually look at the",
    "start": "148620",
    "end": "150540"
  },
  {
    "text": "raw HTTP message for example to retrieve",
    "start": "150540",
    "end": "153269"
  },
  {
    "text": "a list of videos we point to this videos",
    "start": "153269",
    "end": "155310"
  },
  {
    "text": "endpoint as a get request then if we",
    "start": "155310",
    "end": "157349"
  },
  {
    "text": "wanted to update that video we'd point",
    "start": "157349",
    "end": "159030"
  },
  {
    "text": "to the same URL but instead make it a",
    "start": "159030",
    "end": "160920"
  },
  {
    "text": "put request so the takeaway here is that",
    "start": "160920",
    "end": "163079"
  },
  {
    "text": "the URL defines the resource or entity",
    "start": "163079",
    "end": "165239"
  },
  {
    "text": "that lives there and the verb defines",
    "start": "165239",
    "end": "166950"
  },
  {
    "text": "what you want to do to that entity now",
    "start": "166950",
    "end": "169200"
  },
  {
    "start": "169000",
    "end": "212000"
  },
  {
    "text": "back in the HTTP message after the start",
    "start": "169200",
    "end": "171299"
  },
  {
    "text": "line we have headers the headers contain",
    "start": "171299",
    "end": "173310"
  },
  {
    "text": "additional metadata about the request",
    "start": "173310",
    "end": "174870"
  },
  {
    "text": "for example the accept header tells the",
    "start": "174870",
    "end": "177480"
  },
  {
    "text": "server which type of content that the",
    "start": "177480",
    "end": "179099"
  },
  {
    "text": "client will accept back which more often",
    "start": "179099",
    "end": "180810"
  },
  {
    "text": "than not will be JSON the headers also",
    "start": "180810",
    "end": "182940"
  },
  {
    "text": "handle things like authorization to",
    "start": "182940",
    "end": "184799"
  },
  {
    "text": "determine if the user making the request",
    "start": "184799",
    "end": "186390"
  },
  {
    "text": "is authorized to do so then after the",
    "start": "186390",
    "end": "188640"
  },
  {
    "text": "headers we have the body which is",
    "start": "188640",
    "end": "190290"
  },
  {
    "text": "typically in JSON format and it contains",
    "start": "190290",
    "end": "192150"
  },
  {
    "text": "a payload of data that the server can",
    "start": "192150",
    "end": "193950"
  },
  {
    "text": "use to update something or create a new",
    "start": "193950",
    "end": "196140"
  },
  {
    "text": "record on the server okay so now that we",
    "start": "196140",
    "end": "198419"
  },
  {
    "text": "have our request message that message",
    "start": "198419",
    "end": "199829"
  },
  {
    "text": "gets sent to the server or API it",
    "start": "199829",
    "end": "202290"
  },
  {
    "text": "receives the request and then executes",
    "start": "202290",
    "end": "203970"
  },
  {
    "text": "whatever code needs to be done to handle",
    "start": "203970",
    "end": "205769"
  },
  {
    "text": "it like reading or writing to a database",
    "start": "205769",
    "end": "207599"
  },
  {
    "text": "for example when it's done it formats an",
    "start": "207599",
    "end": "210090"
  },
  {
    "text": "HTTP response message to go back to the",
    "start": "210090",
    "end": "212430"
  },
  {
    "start": "212000",
    "end": "280000"
  },
  {
    "text": "client it also has a very specific",
    "start": "212430",
    "end": "214260"
  },
  {
    "text": "format with a start line that contains",
    "start": "214260",
    "end": "216000"
  },
  {
    "text": "the status code there are a bunch of",
    "start": "216000",
    "end": "217829"
  },
  {
    "text": "different status codes and they're used",
    "start": "217829",
    "end": "219450"
  },
  {
    "text": "to tell the client what happened to",
    "start": "219450",
    "end": "220889"
  },
  {
    "text": "their request if everything worked then",
    "start": "220889",
    "end": "222780"
  },
  {
    "text": "you should get a 200 status code which",
    "start": "222780",
    "end": "224609"
  },
  {
    "text": "means okay codes at the 200 level means",
    "start": "224609",
    "end": "226709"
  },
  {
    "text": "success codes at the 400 level mean that",
    "start": "226709",
    "end": "228959"
  },
  {
    "text": "you did something wrong and codes at the",
    "start": "228959",
    "end": "230549"
  },
  {
    "text": "500 level mean the server failed for",
    "start": "230549",
    "end": "232379"
  },
  {
    "text": "some reason and then below that we also",
    "start": "232379",
    "end": "234269"
  },
  {
    "text": "have a body which contains the actual",
    "start": "234269",
    "end": "235919"
  },
  {
    "text": "content that the server is sending back",
    "start": "235919",
    "end": "237870"
  },
  {
    "text": "down to the client which is often JSON",
    "start": "237870",
    "end": "239819"
  },
  {
    "text": "data or HTML to use in a front-end",
    "start": "239819",
    "end": "241949"
  },
  {
    "text": "application and that's really all there",
    "start": "241949",
    "end": "243599"
  },
  {
    "text": "is to it it's a simple request response",
    "start": "243599",
    "end": "245730"
  },
  {
    "text": "exchange of data between two pieces of",
    "start": "245730",
    "end": "247650"
  },
  {
    "text": "software that live on the internet now",
    "start": "247650",
    "end": "249629"
  },
  {
    "text": "that you know how API is work let's",
    "start": "249629",
    "end": "251099"
  },
  {
    "text": "build a background job that runs every",
    "start": "251099",
    "end": "252750"
  },
  {
    "text": "few minutes to grab the latest viewcount",
    "start": "252750",
    "end": "255060"
  },
  {
    "text": "from YouTube and then update a YouTube",
    "start": "255060",
    "end": "257070"
  },
  {
    "text": "videos title first we need a piece of",
    "start": "257070",
    "end": "259169"
  },
  {
    "text": "software to make API calls from to",
    "start": "259169",
    "end": "261329"
  },
  {
    "text": "handle that I'll be using a firebase",
    "start": "261329",
    "end": "262830"
  },
  {
    "text": "cloud function with the nodejs runtime",
    "start": "262830",
    "end": "264930"
  },
  {
    "text": "if you're not a firebase user already",
    "start": "264930",
    "end": "266490"
  },
  {
    "text": "it's better",
    "start": "266490",
    "end": "267230"
  },
  {
    "text": "easy to set up install the firebase",
    "start": "267230",
    "end": "268910"
  },
  {
    "text": "command-line tools run firebase in it",
    "start": "268910",
    "end": "270800"
  },
  {
    "text": "and you now have a service environment",
    "start": "270800",
    "end": "272750"
  },
  {
    "text": "to start writing your code in now",
    "start": "272750",
    "end": "274280"
  },
  {
    "text": "YouTube of course is a Google product",
    "start": "274280",
    "end": "275840"
  },
  {
    "text": "which means you need to enable the API",
    "start": "275840",
    "end": "277550"
  },
  {
    "text": "from the Google cloud platform console",
    "start": "277550",
    "end": "279440"
  },
  {
    "text": "most major API is out there Google",
    "start": "279440",
    "end": "281480"
  },
  {
    "start": "280000",
    "end": "532000"
  },
  {
    "text": "included provides software developer",
    "start": "281480",
    "end": "283220"
  },
  {
    "text": "kits to work with their API in our",
    "start": "283220",
    "end": "285320"
  },
  {
    "text": "nodejs project we can install the Google",
    "start": "285320",
    "end": "287360"
  },
  {
    "text": "API SPAC egde with NPM what the SDK does",
    "start": "287360",
    "end": "290210"
  },
  {
    "text": "is simplify the process of making calls",
    "start": "290210",
    "end": "292310"
  },
  {
    "text": "to the API if you wanted to you could",
    "start": "292310",
    "end": "294500"
  },
  {
    "text": "send raw HTTP request to Google and in",
    "start": "294500",
    "end": "296990"
  },
  {
    "text": "theory that would work fine but that",
    "start": "296990",
    "end": "298460"
  },
  {
    "text": "would be doing things the hard way when",
    "start": "298460",
    "end": "299750"
  },
  {
    "text": "using the SDK we can import Google into",
    "start": "299750",
    "end": "302150"
  },
  {
    "text": "our code and now we have intellisense",
    "start": "302150",
    "end": "303740"
  },
  {
    "text": "for not just YouTube but any Google API",
    "start": "303740",
    "end": "306140"
  },
  {
    "text": "like if we take a look at Google Drive",
    "start": "306140",
    "end": "308120"
  },
  {
    "text": "for example you can see it gives us a",
    "start": "308120",
    "end": "309920"
  },
  {
    "text": "variety of different end points and then",
    "start": "309920",
    "end": "311600"
  },
  {
    "text": "we can simply call a method and the",
    "start": "311600",
    "end": "313370"
  },
  {
    "text": "Google SDK will format the HTTP request",
    "start": "313370",
    "end": "315920"
  },
  {
    "text": "for us so that's awesome but at this",
    "start": "315920",
    "end": "318140"
  },
  {
    "text": "point we need to schedule a background",
    "start": "318140",
    "end": "320120"
  },
  {
    "text": "job to run our code every few minutes in",
    "start": "320120",
    "end": "322160"
  },
  {
    "text": "cloud functions we can do that by first",
    "start": "322160",
    "end": "324470"
  },
  {
    "text": "setting up an export with the name of",
    "start": "324470",
    "end": "326480"
  },
  {
    "text": "the function and then we call functions",
    "start": "326480",
    "end": "328400"
  },
  {
    "text": "pub/sub schedule and pass in a cron",
    "start": "328400",
    "end": "331220"
  },
  {
    "text": "schedule as the argument this translates",
    "start": "331220",
    "end": "333380"
  },
  {
    "text": "to run every three minutes or in",
    "start": "333380",
    "end": "335420"
  },
  {
    "text": "firebase we have a more readable option",
    "start": "335420",
    "end": "337220"
  },
  {
    "text": "of just writing every three minutes",
    "start": "337220",
    "end": "338750"
  },
  {
    "text": "after that we'll add a callback function",
    "start": "338750",
    "end": "340940"
  },
  {
    "text": "that will run every three minutes after",
    "start": "340940",
    "end": "342860"
  },
  {
    "text": "we deploy this function to the cloud now",
    "start": "342860",
    "end": "344990"
  },
  {
    "text": "inside this function will create a",
    "start": "344990",
    "end": "346280"
  },
  {
    "text": "variable name to YouTube but in order to",
    "start": "346280",
    "end": "348350"
  },
  {
    "text": "use the YouTube API we need to",
    "start": "348350",
    "end": "350180"
  },
  {
    "text": "authenticate so let's take a second to",
    "start": "350180",
    "end": "352100"
  },
  {
    "text": "talk about API authentication there are",
    "start": "352100",
    "end": "354200"
  },
  {
    "text": "two main types of authentication that",
    "start": "354200",
    "end": "355730"
  },
  {
    "text": "you should know about right now API keys",
    "start": "355730",
    "end": "357650"
  },
  {
    "text": "and o'a when thinking about YouTube or",
    "start": "357650",
    "end": "360230"
  },
  {
    "text": "any API for that matter there are two",
    "start": "360230",
    "end": "362300"
  },
  {
    "text": "main types of resources nose that are",
    "start": "362300",
    "end": "364070"
  },
  {
    "text": "public and those that are private for",
    "start": "364070",
    "end": "365990"
  },
  {
    "text": "example a get request to a public video",
    "start": "365990",
    "end": "368240"
  },
  {
    "text": "is something that anybody can do but if",
    "start": "368240",
    "end": "370550"
  },
  {
    "text": "we wanted to modify that video with a",
    "start": "370550",
    "end": "372170"
  },
  {
    "text": "put request we would need to have the",
    "start": "372170",
    "end": "373790"
  },
  {
    "text": "proper authorization to do so like being",
    "start": "373790",
    "end": "376100"
  },
  {
    "text": "the videos owner or being an admin at",
    "start": "376100",
    "end": "378020"
  },
  {
    "text": "YouTube or as developers we could get",
    "start": "378020",
    "end": "380300"
  },
  {
    "text": "the users permission using OAuth so",
    "start": "380300",
    "end": "382280"
  },
  {
    "text": "here's what that boils down to if we",
    "start": "382280",
    "end": "383870"
  },
  {
    "text": "only need to read public resources then",
    "start": "383870",
    "end": "385790"
  },
  {
    "text": "we can use our YouTube developer API key",
    "start": "385790",
    "end": "387950"
  },
  {
    "text": "the API key is simply a way for YouTube",
    "start": "387950",
    "end": "389870"
  },
  {
    "text": "to identify who is making the request",
    "start": "389870",
    "end": "391520"
  },
  {
    "text": "which is important because it's a free",
    "start": "391520",
    "end": "393590"
  },
  {
    "text": "API that has a quota on usage which",
    "start": "393590",
    "end": "396080"
  },
  {
    "text": "means that a given API key can only make",
    "start": "396080",
    "end": "398150"
  },
  {
    "text": "so many requests per day in the case of",
    "start": "398150",
    "end": "400130"
  },
  {
    "text": "YouTube they assigned",
    "start": "400130",
    "end": "401060"
  },
  {
    "text": "points to every request and then cap",
    "start": "401060",
    "end": "402800"
  },
  {
    "text": "your daily usage at 10,000 points now",
    "start": "402800",
    "end": "405200"
  },
  {
    "text": "because we're updating an actual video",
    "start": "405200",
    "end": "406760"
  },
  {
    "text": "we need to go through OAuth 2 in this",
    "start": "406760",
    "end": "408740"
  },
  {
    "text": "case I'm not going to go through the",
    "start": "408740",
    "end": "410150"
  },
  {
    "text": "entire process in this video because it",
    "start": "410150",
    "end": "411740"
  },
  {
    "text": "can be somewhat complicated but if it's",
    "start": "411740",
    "end": "413240"
  },
  {
    "text": "something that you're interested in",
    "start": "413240",
    "end": "414169"
  },
  {
    "text": "implementing I have a video for that on",
    "start": "414169",
    "end": "416030"
  },
  {
    "text": "fire ship IO basically what needs to",
    "start": "416030",
    "end": "417770"
  },
  {
    "text": "happen is you need to generate a URL",
    "start": "417770",
    "end": "419480"
  },
  {
    "text": "where the user can log in to their",
    "start": "419480",
    "end": "421010"
  },
  {
    "text": "YouTube or Google account and your app",
    "start": "421010",
    "end": "422750"
  },
  {
    "text": "will request permission to perform",
    "start": "422750",
    "end": "424340"
  },
  {
    "text": "actions on the user's behalf these",
    "start": "424340",
    "end": "426200"
  },
  {
    "text": "permissions are known as scopes when the",
    "start": "426200",
    "end": "428330"
  },
  {
    "text": "user says ok Google will redirect them",
    "start": "428330",
    "end": "430220"
  },
  {
    "text": "back to your site with an authorization",
    "start": "430220",
    "end": "431990"
  },
  {
    "text": "code you then send that code to your",
    "start": "431990",
    "end": "433820"
  },
  {
    "text": "server or cloud function and use it to",
    "start": "433820",
    "end": "435919"
  },
  {
    "text": "create an access token and refresh token",
    "start": "435919",
    "end": "438050"
  },
  {
    "text": "these values can be saved to a database",
    "start": "438050",
    "end": "439610"
  },
  {
    "text": "so you can make API calls for the user",
    "start": "439610",
    "end": "441440"
  },
  {
    "text": "in the future when you're ready to make",
    "start": "441440",
    "end": "443240"
  },
  {
    "text": "an API call you can read the tokens from",
    "start": "443240",
    "end": "445040"
  },
  {
    "text": "your database and create this oo-oo to",
    "start": "445040",
    "end": "447020"
  },
  {
    "text": "client object and then you use it as the",
    "start": "447020",
    "end": "449150"
  },
  {
    "text": "auth argument now that we're",
    "start": "449150",
    "end": "450710"
  },
  {
    "text": "authenticated we can make an HTTP",
    "start": "450710",
    "end": "452540"
  },
  {
    "text": "request to the API using the Google API",
    "start": "452540",
    "end": "454700"
  },
  {
    "text": "is SDK we call a youtube videos list",
    "start": "454700",
    "end": "457400"
  },
  {
    "text": "with the video ID and then we specify",
    "start": "457400",
    "end": "460130"
  },
  {
    "text": "the data that we want back in our case",
    "start": "460130",
    "end": "461840"
  },
  {
    "text": "we want the statistics which will",
    "start": "461840",
    "end": "463310"
  },
  {
    "text": "include the view count and also the",
    "start": "463310",
    "end": "465080"
  },
  {
    "text": "snippet which contains the raw data",
    "start": "465080",
    "end": "466789"
  },
  {
    "text": "about the video like the description",
    "start": "466789",
    "end": "468380"
  },
  {
    "text": "title and so on the API responds back",
    "start": "468380",
    "end": "470930"
  },
  {
    "text": "with JSON which is automatically",
    "start": "470930",
    "end": "472700"
  },
  {
    "text": "converted into a JavaScript object for",
    "start": "472700",
    "end": "474560"
  },
  {
    "text": "us and the actual data about this video",
    "start": "474560",
    "end": "476539"
  },
  {
    "text": "is the first element in the items array",
    "start": "476539",
    "end": "478669"
  },
  {
    "text": "from there we'll grab the view count",
    "start": "478669",
    "end": "480470"
  },
  {
    "text": "then interpolate it into a string to",
    "start": "480470",
    "end": "482390"
  },
  {
    "text": "format the new title and now we're ready",
    "start": "482390",
    "end": "484460"
  },
  {
    "text": "to update our video we'll call YouTube",
    "start": "484460",
    "end": "486410"
  },
  {
    "text": "videos update and then we'll define a",
    "start": "486410",
    "end": "488630"
  },
  {
    "text": "request body remember the body is the",
    "start": "488630",
    "end": "491120"
  },
  {
    "text": "data that the API will use to make the",
    "start": "491120",
    "end": "493160"
  },
  {
    "text": "update we'll assign it the new title and",
    "start": "493160",
    "end": "495050"
  },
  {
    "text": "then it also requires a category ID",
    "start": "495050",
    "end": "496760"
  },
  {
    "text": "which we can keep from the original",
    "start": "496760",
    "end": "498380"
  },
  {
    "text": "snippet and that's all there is to it",
    "start": "498380",
    "end": "500240"
  },
  {
    "text": "now we just need to deploy our code to",
    "start": "500240",
    "end": "501680"
  },
  {
    "text": "get it running in production open up the",
    "start": "501680",
    "end": "503750"
  },
  {
    "text": "command line and run firebase deploy",
    "start": "503750",
    "end": "505130"
  },
  {
    "text": "this will deploy your code as a service",
    "start": "505130",
    "end": "507289"
  },
  {
    "text": "function in the cloud you'll see your",
    "start": "507289",
    "end": "509090"
  },
  {
    "text": "function in the firebase console if your",
    "start": "509090",
    "end": "510979"
  },
  {
    "text": "function doesn't seem to be working you",
    "start": "510979",
    "end": "512450"
  },
  {
    "text": "can check out the logs for errors I'm",
    "start": "512450",
    "end": "514010"
  },
  {
    "text": "gonna go ahead and wrap things up there",
    "start": "514010",
    "end": "515209"
  },
  {
    "text": "if this video helped you please like and",
    "start": "515209",
    "end": "516740"
  },
  {
    "text": "subscribe and if you want access to more",
    "start": "516740",
    "end": "518390"
  },
  {
    "text": "advanced content consider becoming a CRO",
    "start": "518390",
    "end": "520099"
  },
  {
    "text": "member at fire ship IO",
    "start": "520099",
    "end": "521330"
  },
  {
    "text": "thanks for watching and I will see",
    "start": "521330",
    "end": "523209"
  },
  {
    "text": "the next one",
    "start": "523209",
    "end": "525719"
  },
  {
    "text": "[Music]",
    "start": "525820",
    "end": "534000"
  }
]