[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "C++ a statically typed compiled",
    "start": "640",
    "end": "3120"
  },
  {
    "text": "programming language famous for its",
    "start": "3120",
    "end": "4680"
  },
  {
    "text": "widespread use in software",
    "start": "4680",
    "end": "5920"
  },
  {
    "text": "infrastructure and Infamous for its",
    "start": "5920",
    "end": "7720"
  },
  {
    "text": "steep learning curve it was created in",
    "start": "7720",
    "end": "9559"
  },
  {
    "text": "1979 by bej Strauss at AT&T Bell Labs he",
    "start": "9559",
    "end": "13400"
  },
  {
    "text": "was inspired by the object-oriented",
    "start": "13400",
    "end": "15200"
  },
  {
    "text": "nature of simula but needed a language",
    "start": "15200",
    "end": "17279"
  },
  {
    "text": "with a high performance of c and thus C",
    "start": "17279",
    "end": "19520"
  },
  {
    "text": "with classes was born it's designed as a",
    "start": "19520",
    "end": "21680"
  },
  {
    "start": "20000",
    "end": "66000"
  },
  {
    "text": "suet of C which means that virtually any",
    "start": "21680",
    "end": "24000"
  },
  {
    "text": "c program is also a valid C++ program",
    "start": "24000",
    "end": "27000"
  },
  {
    "text": "but it also adds zero overhead",
    "start": "27000",
    "end": "28720"
  },
  {
    "text": "abstractions such as object-oriented",
    "start": "28720",
    "end": "30800"
  },
  {
    "text": "patterns like polymorphism encapsulation",
    "start": "30800",
    "end": "33320"
  },
  {
    "text": "and inheritance today it's used in a",
    "start": "33320",
    "end": "35320"
  },
  {
    "text": "wide variety of systems with constrained",
    "start": "35320",
    "end": "37000"
  },
  {
    "text": "memory demands like the Unreal Engine",
    "start": "37000",
    "end": "38920"
  },
  {
    "text": "for AAA video games programs like Adobe",
    "start": "38920",
    "end": "41280"
  },
  {
    "text": "After Effects that were used to edit",
    "start": "41280",
    "end": "42760"
  },
  {
    "text": "this video databases like MySQL and",
    "start": "42760",
    "end": "45200"
  },
  {
    "text": "mongodb embedded systems like the",
    "start": "45200",
    "end": "47160"
  },
  {
    "text": "display on your smart toaster and is",
    "start": "47160",
    "end": "48719"
  },
  {
    "text": "used to implement much of our low-level",
    "start": "48719",
    "end": "50399"
  },
  {
    "text": "infrastructure like language compilers",
    "start": "50399",
    "end": "52320"
  },
  {
    "text": "and virtual machines it's so popular",
    "start": "52320",
    "end": "54320"
  },
  {
    "text": "because it provides low-level memory and",
    "start": "54320",
    "end": "55920"
  },
  {
    "text": "Hardware control like C but with highle",
    "start": "55920",
    "end": "58120"
  },
  {
    "text": "abstractions like classes and Mark",
    "start": "58120",
    "end": "60199"
  },
  {
    "text": "pointers C++ makes it harder to shoot",
    "start": "60199",
    "end": "62359"
  },
  {
    "text": "yourself in the foot but when you do",
    "start": "62359",
    "end": "63800"
  },
  {
    "text": "it'll blow your whole leg off to get",
    "start": "63800",
    "end": "66600"
  },
  {
    "text": "started install a C+ plus compiler like",
    "start": "66600",
    "end": "69040"
  },
  {
    "text": "GCC or clang then create a file ending",
    "start": "69040",
    "end": "71520"
  },
  {
    "text": "in CPP include IO stream from the",
    "start": "71520",
    "end": "73720"
  },
  {
    "text": "standard library to handle input and",
    "start": "73720",
    "end": "75520"
  },
  {
    "text": "output your code will start executing",
    "start": "75520",
    "end": "77320"
  },
  {
    "text": "from the main function to print hello",
    "start": "77320",
    "end": "79040"
  },
  {
    "text": "world we simply use standard character",
    "start": "79040",
    "end": "80880"
  },
  {
    "text": "output followed by the bit y shift left",
    "start": "80880",
    "end": "82920"
  },
  {
    "text": "operator and a string literal we can get",
    "start": "82920",
    "end": "84880"
  },
  {
    "text": "rid of this STD though by adding a",
    "start": "84880",
    "end": "86720"
  },
  {
    "text": "namespace to the top of the file now if",
    "start": "86720",
    "end": "88600"
  },
  {
    "text": "we want to create a string variable we",
    "start": "88600",
    "end": "90320"
  },
  {
    "text": "can do so by typing it as an array of",
    "start": "90320",
    "end": "92399"
  },
  {
    "text": "characters however if we include string",
    "start": "92399",
    "end": "94439"
  },
  {
    "text": "from the standard Library we can use the",
    "start": "94439",
    "end": "96280"
  },
  {
    "text": "string type instead the real game",
    "start": "96280",
    "end": "98000"
  },
  {
    "text": "changer though is the fact that C++",
    "start": "98000",
    "end": "100040"
  },
  {
    "text": "supports object-oriented programming",
    "start": "100040",
    "end": "101759"
  },
  {
    "text": "with classes a class is just a blueprint",
    "start": "101759",
    "end": "104079"
  },
  {
    "text": "for an object inside a class you can",
    "start": "104079",
    "end": "106040"
  },
  {
    "text": "Define attributes and methods that will",
    "start": "106040",
    "end": "107799"
  },
  {
    "text": "be private by default or make them",
    "start": "107799",
    "end": "109560"
  },
  {
    "text": "public by adding them under the public",
    "start": "109560",
    "end": "111360"
  },
  {
    "text": "specifier it's also possible to Define",
    "start": "111360",
    "end": "113479"
  },
  {
    "text": "methods outside the class definition",
    "start": "113479",
    "end": "115399"
  },
  {
    "text": "using a double colon methods can also be",
    "start": "115399",
    "end": "117479"
  },
  {
    "text": "defined multiple times with different",
    "start": "117479",
    "end": "118920"
  },
  {
    "text": "parameters which is known as overloading",
    "start": "118920",
    "end": "121079"
  },
  {
    "text": "and is a form of polymorphism in",
    "start": "121079",
    "end": "122840"
  },
  {
    "text": "addition we can Define Constructors and",
    "start": "122840",
    "end": "124840"
  },
  {
    "text": "destructors to run code when an object",
    "start": "124840",
    "end": "126920"
  },
  {
    "text": "is created or destroy classes also",
    "start": "126920",
    "end": "129000"
  },
  {
    "text": "support inheritance allowing developers",
    "start": "129000",
    "end": "130800"
  },
  {
    "text": "to more efficiently share logic",
    "start": "130800",
    "end": "132280"
  },
  {
    "text": "throughout a program to instantiate an",
    "start": "132280",
    "end": "134000"
  },
  {
    "text": "object type the class name followed by",
    "start": "134000",
    "end": "135800"
  },
  {
    "text": "the name of your object and optionally",
    "start": "135800",
    "end": "137560"
  },
  {
    "text": "any parameters for the Constructor when",
    "start": "137560",
    "end": "139319"
  },
  {
    "text": "it comes to memory we could manage",
    "start": "139319",
    "end": "141040"
  },
  {
    "text": "everything manually with pointers and",
    "start": "141040",
    "end": "142840"
  },
  {
    "text": "references however tools like unique",
    "start": "142840",
    "end": "144879"
  },
  {
    "text": "pointer can get the job done in a way",
    "start": "144879",
    "end": "146560"
  },
  {
    "text": "that's easier and safer by ensuring that",
    "start": "146560",
    "end": "148760"
  },
  {
    "text": "only one object can be allocated to",
    "start": "148760",
    "end": "150480"
  },
  {
    "text": "memory now to run your code open up the",
    "start": "150480",
    "end": "152360"
  },
  {
    "text": "terminal and use a tool like clang ++ to",
    "start": "152360",
    "end": "154879"
  },
  {
    "text": "compile it this has been C++ in 100",
    "start": "154879",
    "end": "158599"
  },
  {
    "start": "156000",
    "end": "165000"
  },
  {
    "text": "seconds hit the like button and",
    "start": "158599",
    "end": "159840"
  },
  {
    "text": "subscribe if you want to see more short",
    "start": "159840",
    "end": "161200"
  },
  {
    "text": "videos like this thanks for watching and",
    "start": "161200",
    "end": "163040"
  },
  {
    "text": "I will see you in the next one",
    "start": "163040",
    "end": "167200"
  }
]