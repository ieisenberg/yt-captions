[
  {
    "text": "hasura instantly turn your relational",
    "start": "160",
    "end": "2320"
  },
  {
    "text": "database into a graphql or rest api",
    "start": "2320",
    "end": "5200"
  },
  {
    "text": "when building a full stack application",
    "start": "5200",
    "end": "7200"
  },
  {
    "text": "the end user likely needs to communicate",
    "start": "7200",
    "end": "9360"
  },
  {
    "text": "with a database",
    "start": "9360",
    "end": "10240"
  },
  {
    "text": "that means you need to build a secure",
    "start": "10240",
    "end": "12000"
  },
  {
    "text": "api in the middle so the client can tell",
    "start": "12000",
    "end": "13920"
  },
  {
    "text": "the server what it needs from the",
    "start": "13920",
    "end": "15360"
  },
  {
    "text": "database but building the perfect api",
    "start": "15360",
    "end": "17600"
  },
  {
    "text": "is easier said than done front-end",
    "start": "17600",
    "end": "19279"
  },
  {
    "text": "developers love using graphql but",
    "start": "19279",
    "end": "21199"
  },
  {
    "text": "back-end developers are faced with the",
    "start": "21199",
    "end": "22720"
  },
  {
    "text": "challenge of writing",
    "start": "22720",
    "end": "23840"
  },
  {
    "text": "efficient sql queries that resolve the",
    "start": "23840",
    "end": "25920"
  },
  {
    "text": "graphql schema the hasura engine",
    "start": "25920",
    "end": "27920"
  },
  {
    "text": "eliminates this problem",
    "start": "27920",
    "end": "29119"
  },
  {
    "text": "by automatically generating the schema",
    "start": "29119",
    "end": "31119"
  },
  {
    "text": "and resolvers for you",
    "start": "31119",
    "end": "32558"
  },
  {
    "text": "just point it to your postgres database",
    "start": "32559",
    "end": "34320"
  },
  {
    "text": "and it will use the existing tables and",
    "start": "34320",
    "end": "36079"
  },
  {
    "text": "views to generate an api that's ready to",
    "start": "36079",
    "end": "38399"
  },
  {
    "text": "roll in your frontend app if you don't",
    "start": "38399",
    "end": "40079"
  },
  {
    "text": "already have a database you can connect",
    "start": "40079",
    "end": "41760"
  },
  {
    "text": "one from anywhere in the cloud",
    "start": "41760",
    "end": "43200"
  },
  {
    "text": "then add tables and rows to it and",
    "start": "43200",
    "end": "44879"
  },
  {
    "text": "manage all of your data directly from",
    "start": "44879",
    "end": "46640"
  },
  {
    "text": "the web ui",
    "start": "46640",
    "end": "47440"
  },
  {
    "text": "and it can even help you configure",
    "start": "47440",
    "end": "48879"
  },
  {
    "text": "relationships between tables",
    "start": "48879",
    "end": "50480"
  },
  {
    "text": "in addition to databases you can also",
    "start": "50480",
    "end": "52320"
  },
  {
    "text": "connect third-party apis to your schema",
    "start": "52320",
    "end": "54640"
  },
  {
    "text": "to create a single source of truth for",
    "start": "54640",
    "end": "56640"
  },
  {
    "text": "all your data in some cases you may want",
    "start": "56640",
    "end": "58719"
  },
  {
    "text": "to extend the schema with your own",
    "start": "58719",
    "end": "60320"
  },
  {
    "text": "custom queries or mutations",
    "start": "60320",
    "end": "62160"
  },
  {
    "text": "actions provide a way to implement",
    "start": "62160",
    "end": "63760"
  },
  {
    "text": "custom business logic in an external",
    "start": "63760",
    "end": "65680"
  },
  {
    "text": "server or serverless function",
    "start": "65680",
    "end": "67360"
  },
  {
    "text": "to read and write data in more complex",
    "start": "67360",
    "end": "69360"
  },
  {
    "text": "ways in addition",
    "start": "69360",
    "end": "70400"
  },
  {
    "text": "you may want to trigger server-side code",
    "start": "70400",
    "end": "72400"
  },
  {
    "text": "when something changes in the database",
    "start": "72400",
    "end": "74159"
  },
  {
    "text": "like you may want to send a",
    "start": "74159",
    "end": "75360"
  },
  {
    "text": "transactional email when a new row is",
    "start": "75360",
    "end": "77439"
  },
  {
    "text": "added to a certain table hassura events",
    "start": "77439",
    "end": "79600"
  },
  {
    "text": "can be triggered based on operations to",
    "start": "79600",
    "end": "81439"
  },
  {
    "text": "a certain table",
    "start": "81439",
    "end": "82240"
  },
  {
    "text": "or scheduled with a cron job in the",
    "start": "82240",
    "end": "83840"
  },
  {
    "text": "background but one thing hysura doesn't",
    "start": "83840",
    "end": "85840"
  },
  {
    "text": "handle",
    "start": "85840",
    "end": "86320"
  },
  {
    "text": "is user authentication although you can",
    "start": "86320",
    "end": "88240"
  },
  {
    "text": "easily connect your favorite",
    "start": "88240",
    "end": "89520"
  },
  {
    "text": "authentication service and provide a",
    "start": "89520",
    "end": "91360"
  },
  {
    "text": "role session variable when the user",
    "start": "91360",
    "end": "92880"
  },
  {
    "text": "makes requests",
    "start": "92880",
    "end": "93759"
  },
  {
    "text": "which can then be used to implement",
    "start": "93759",
    "end": "95360"
  },
  {
    "text": "role-based access control with the click",
    "start": "95360",
    "end": "97200"
  },
  {
    "text": "of a button",
    "start": "97200",
    "end": "97920"
  },
  {
    "text": "now because the api is created with an",
    "start": "97920",
    "end": "99840"
  },
  {
    "text": "industry standard like graphql",
    "start": "99840",
    "end": "101680"
  },
  {
    "text": "you can use any graphql client that",
    "start": "101680",
    "end": "103439"
  },
  {
    "text": "you'd like to access the data on the",
    "start": "103439",
    "end": "105200"
  },
  {
    "text": "front end you might use something like",
    "start": "105200",
    "end": "106720"
  },
  {
    "text": "apollo",
    "start": "106720",
    "end": "107360"
  },
  {
    "text": "to query mutate and set up real-time",
    "start": "107360",
    "end": "109759"
  },
  {
    "text": "subscriptions to your database",
    "start": "109759",
    "end": "111360"
  },
  {
    "text": "in other words hasura is kind of like a",
    "start": "111360",
    "end": "113200"
  },
  {
    "text": "middleman that doesn't care what you use",
    "start": "113200",
    "end": "114880"
  },
  {
    "text": "on the front end or where you host your",
    "start": "114880",
    "end": "116560"
  },
  {
    "text": "actual database",
    "start": "116560",
    "end": "117520"
  },
  {
    "text": "and best of all it's an open source",
    "start": "117520",
    "end": "119360"
  },
  {
    "text": "project that can be self-hosted",
    "start": "119360",
    "end": "121119"
  },
  {
    "text": "or paid for as a fully managed service",
    "start": "121119",
    "end": "123119"
  },
  {
    "text": "with a free tier",
    "start": "123119",
    "end": "124159"
  },
  {
    "text": "this has been hasura in 100 seconds if",
    "start": "124159",
    "end": "126479"
  },
  {
    "text": "you want to see more short videos like",
    "start": "126479",
    "end": "127840"
  },
  {
    "text": "this",
    "start": "127840",
    "end": "128160"
  },
  {
    "text": "make sure to hit the like button and let",
    "start": "128160",
    "end": "129759"
  },
  {
    "text": "me know if you want to see a full",
    "start": "129759",
    "end": "131120"
  },
  {
    "text": "tutorial on this topic in the comments",
    "start": "131120",
    "end": "133120"
  },
  {
    "text": "thanks for watching and i will see you",
    "start": "133120",
    "end": "134959"
  },
  {
    "text": "in the next one",
    "start": "134959",
    "end": "137760"
  }
]