[
  {
    "text": "blazer a ui framework for building",
    "start": "240",
    "end": "2639"
  },
  {
    "text": "front-end web applications with html css",
    "start": "2639",
    "end": "6000"
  },
  {
    "text": "and not javascript but c-sharp by",
    "start": "6000",
    "end": "8400"
  },
  {
    "text": "leveraging the power of webassembly it's",
    "start": "8400",
    "end": "10320"
  },
  {
    "text": "able to eliminate javascript from your",
    "start": "10320",
    "end": "12400"
  },
  {
    "text": "front-end stack it was created at",
    "start": "12400",
    "end": "13840"
  },
  {
    "text": "microsoft in 2018 by steve sanderson the",
    "start": "13840",
    "end": "16480"
  },
  {
    "text": "developer famous for creating knockout",
    "start": "16480",
    "end": "18320"
  },
  {
    "text": "js years earlier just like react and",
    "start": "18320",
    "end": "20800"
  },
  {
    "text": "other modern ui libraries you build",
    "start": "20800",
    "end": "22640"
  },
  {
    "text": "components called razer components that",
    "start": "22640",
    "end": "24880"
  },
  {
    "text": "encapsulate parts of the user interface",
    "start": "24880",
    "end": "26880"
  },
  {
    "text": "what makes blazer special is its ability",
    "start": "26880",
    "end": "29039"
  },
  {
    "text": "to blur the lines between client and",
    "start": "29039",
    "end": "31039"
  },
  {
    "text": "server thanks to wasm you can run c",
    "start": "31039",
    "end": "33280"
  },
  {
    "text": "sharp code with your favorite.net",
    "start": "33280",
    "end": "34960"
  },
  {
    "text": "libraries in the browser or",
    "start": "34960",
    "end": "36399"
  },
  {
    "text": "alternatively run your client side code",
    "start": "36399",
    "end": "38719"
  },
  {
    "text": "on the server and stream changes back",
    "start": "38719",
    "end": "40879"
  },
  {
    "text": "into the dom via signal ir a tool built",
    "start": "40879",
    "end": "43600"
  },
  {
    "text": "on top of websockets for real-time",
    "start": "43600",
    "end": "45440"
  },
  {
    "text": "communication in addition blazer",
    "start": "45440",
    "end": "47200"
  },
  {
    "text": "components are capable of running on any",
    "start": "47200",
    "end": "49280"
  },
  {
    "text": "platform with dotnet maui you can reuse",
    "start": "49280",
    "end": "51440"
  },
  {
    "text": "your code natively on ios android or",
    "start": "51440",
    "end": "54079"
  },
  {
    "text": "desktop now if you're not convinced",
    "start": "54079",
    "end": "55680"
  },
  {
    "text": "c-sharp can get the job done by itself",
    "start": "55680",
    "end": "57360"
  },
  {
    "text": "it can easily interop with javascript on",
    "start": "57360",
    "end": "59520"
  },
  {
    "text": "both the client and server to get",
    "start": "59520",
    "end": "61280"
  },
  {
    "text": "started install visual studio with",
    "start": "61280",
    "end": "63280"
  },
  {
    "text": "asp.net capabilities then generate a new",
    "start": "63280",
    "end": "65920"
  },
  {
    "text": "blazer webassembly project the root of",
    "start": "65920",
    "end": "68080"
  },
  {
    "text": "your application contains a router in",
    "start": "68080",
    "end": "69920"
  },
  {
    "text": "the app.razer file notice how it's",
    "start": "69920",
    "end": "72159"
  },
  {
    "text": "structured with a variety of built-in",
    "start": "72159",
    "end": "73920"
  },
  {
    "text": "components like router and layout view",
    "start": "73920",
    "end": "76159"
  },
  {
    "text": "that don't need to be explicitly",
    "start": "76159",
    "end": "77520"
  },
  {
    "text": "imported like a javascript app now",
    "start": "77520",
    "end": "79360"
  },
  {
    "text": "create a new page by adding a razer",
    "start": "79360",
    "end": "81280"
  },
  {
    "text": "component to the pages directory at the",
    "start": "81280",
    "end": "83360"
  },
  {
    "text": "top of that file add the page directive",
    "start": "83360",
    "end": "85520"
  },
  {
    "text": "to specify the url pattern we can then",
    "start": "85520",
    "end": "87759"
  },
  {
    "text": "add a title using a built-in razer",
    "start": "87759",
    "end": "89680"
  },
  {
    "text": "component or simply add some plain html",
    "start": "89680",
    "end": "92240"
  },
  {
    "text": "here but now it's time to add some",
    "start": "92240",
    "end": "93920"
  },
  {
    "text": "reactive state to this application which",
    "start": "93920",
    "end": "96000"
  },
  {
    "text": "can be accomplished with the code",
    "start": "96000",
    "end": "97360"
  },
  {
    "text": "directive which allows us to write logic",
    "start": "97360",
    "end": "99280"
  },
  {
    "text": "with the industrial strength reliability",
    "start": "99280",
    "end": "101280"
  },
  {
    "text": "of c sharp define a property like count",
    "start": "101280",
    "end": "103920"
  },
  {
    "text": "then use it in a template with the at",
    "start": "103920",
    "end": "105920"
  },
  {
    "text": "symbol the value is reactive so any time",
    "start": "105920",
    "end": "108240"
  },
  {
    "text": "it changes the template will re-render",
    "start": "108240",
    "end": "110159"
  },
  {
    "text": "we can add a method to the code to",
    "start": "110159",
    "end": "111759"
  },
  {
    "text": "increment the count then bind it to a",
    "start": "111759",
    "end": "113439"
  },
  {
    "text": "button as the on click event handler now",
    "start": "113439",
    "end": "115920"
  },
  {
    "text": "to make the component look pretty add a",
    "start": "115920",
    "end": "117600"
  },
  {
    "text": "matching css file and all the styles",
    "start": "117600",
    "end": "119840"
  },
  {
    "text": "here will be scoped to that component",
    "start": "119840",
    "end": "121439"
  },
  {
    "text": "now when it comes to sharing logic and",
    "start": "121439",
    "end": "123119"
  },
  {
    "text": "state between components blazer has",
    "start": "123119",
    "end": "124880"
  },
  {
    "text": "dependency injection built in which",
    "start": "124880",
    "end": "126719"
  },
  {
    "text": "allows you to write a class in one place",
    "start": "126719",
    "end": "128560"
  },
  {
    "text": "then inject it into any component using",
    "start": "128560",
    "end": "130720"
  },
  {
    "text": "the inject directive in addition when",
    "start": "130720",
    "end": "132480"
  },
  {
    "text": "you add a component to the shared",
    "start": "132480",
    "end": "133760"
  },
  {
    "text": "directory it can be used instantly",
    "start": "133760",
    "end": "135599"
  },
  {
    "text": "throughout the entire application and",
    "start": "135599",
    "end": "137280"
  },
  {
    "text": "not only runs on the web but virtually",
    "start": "137280",
    "end": "139200"
  },
  {
    "text": "any native platform now use net run to",
    "start": "139200",
    "end": "141680"
  },
  {
    "text": "compile the web assembly and view your",
    "start": "141680",
    "end": "143520"
  },
  {
    "text": "web app in the browser this has been",
    "start": "143520",
    "end": "145200"
  },
  {
    "text": "blazer in 100 seconds hit the like",
    "start": "145200",
    "end": "147200"
  },
  {
    "text": "button if you want to see more short",
    "start": "147200",
    "end": "148400"
  },
  {
    "text": "videos like this thanks for watching and",
    "start": "148400",
    "end": "150400"
  },
  {
    "text": "i will see you in the next one",
    "start": "150400",
    "end": "154159"
  }
]