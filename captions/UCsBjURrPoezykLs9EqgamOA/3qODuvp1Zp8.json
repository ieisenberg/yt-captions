[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "role-based user authorization can give",
    "start": "30",
    "end": "2669"
  },
  {
    "text": "you fine-grained control over which",
    "start": "2669",
    "end": "4350"
  },
  {
    "text": "actions a user can perform in your app",
    "start": "4350",
    "end": "6390"
  },
  {
    "text": "many apps use this strategy such as",
    "start": "6390",
    "end": "8730"
  },
  {
    "text": "Stack Overflow and reddit to control the",
    "start": "8730",
    "end": "11250"
  },
  {
    "text": "types of data that can be modified by",
    "start": "11250",
    "end": "13019"
  },
  {
    "text": "users in this episode we're going to",
    "start": "13019",
    "end": "15000"
  },
  {
    "text": "implement role based access control with",
    "start": "15000",
    "end": "17250"
  },
  {
    "text": "firebase and angular core our users are",
    "start": "17250",
    "end": "20070"
  },
  {
    "text": "going to have three different roles the",
    "start": "20070",
    "end": "21630"
  },
  {
    "text": "admin role can read and write anything",
    "start": "21630",
    "end": "23430"
  },
  {
    "text": "author role can read and edit but not",
    "start": "23430",
    "end": "26310"
  },
  {
    "text": "delete and the reader can only read data",
    "start": "26310",
    "end": "28980"
  },
  {
    "text": "since we can't actually edit the data on",
    "start": "28980",
    "end": "31260"
  },
  {
    "start": "30000",
    "end": "73000"
  },
  {
    "text": "the firebase object we need to create",
    "start": "31260",
    "end": "33450"
  },
  {
    "text": "our own custom user class will do this",
    "start": "33450",
    "end": "36030"
  },
  {
    "text": "by saving our own custom data to the",
    "start": "36030",
    "end": "37739"
  },
  {
    "text": "real-time database and in the user",
    "start": "37739",
    "end": "39960"
  },
  {
    "text": "object will have a roles object which",
    "start": "39960",
    "end": "42180"
  },
  {
    "text": "can either have an author reader or",
    "start": "42180",
    "end": "44040"
  },
  {
    "text": "admin attribute in the angular app I'm",
    "start": "44040",
    "end": "46860"
  },
  {
    "text": "going to use a typescript interface to",
    "start": "46860",
    "end": "48840"
  },
  {
    "text": "make sure that the user roles can't be",
    "start": "48840",
    "end": "50610"
  },
  {
    "text": "anything other than a reader author or",
    "start": "50610",
    "end": "52469"
  },
  {
    "text": "admin then I'm creating a custom user",
    "start": "52469",
    "end": "55110"
  },
  {
    "text": "class which is where we can define any",
    "start": "55110",
    "end": "57149"
  },
  {
    "text": "custom data we want to add to the user",
    "start": "57149",
    "end": "58949"
  },
  {
    "text": "object by default will pass the",
    "start": "58949",
    "end": "61260"
  },
  {
    "text": "constructor the firebase auth data and",
    "start": "61260",
    "end": "63570"
  },
  {
    "text": "use that to set an email photo URL and",
    "start": "63570",
    "end": "66270"
  },
  {
    "text": "then we'll set the reader value to true",
    "start": "66270",
    "end": "68340"
  },
  {
    "text": "by default so a new user will look like",
    "start": "68340",
    "end": "70409"
  },
  {
    "text": "this when they sign up in the database",
    "start": "70409",
    "end": "72000"
  },
  {
    "text": "so now we can build an off service to",
    "start": "72000",
    "end": "74400"
  },
  {
    "start": "73000",
    "end": "160000"
  },
  {
    "text": "actually log in and log out the user",
    "start": "74400",
    "end": "76200"
  },
  {
    "text": "we're going to use Google OAuth as the",
    "start": "76200",
    "end": "78810"
  },
  {
    "text": "login method so we import the",
    "start": "78810",
    "end": "80790"
  },
  {
    "text": "angularfire database as well as",
    "start": "80790",
    "end": "82140"
  },
  {
    "text": "angularfire",
    "start": "82140",
    "end": "82920"
  },
  {
    "text": "auth and our custom user class and we're",
    "start": "82920",
    "end": "86040"
  },
  {
    "text": "going to set our current user as a",
    "start": "86040",
    "end": "87450"
  },
  {
    "text": "behavior subject instead of the",
    "start": "87450",
    "end": "89280"
  },
  {
    "text": "angularfire",
    "start": "89280",
    "end": "89909"
  },
  {
    "text": "auth observable this will give us more",
    "start": "89909",
    "end": "91979"
  },
  {
    "text": "flexibility when we start working with",
    "start": "91979",
    "end": "93390"
  },
  {
    "text": "router guards inside the service",
    "start": "93390",
    "end": "95729"
  },
  {
    "text": "constructor we subscribe to the",
    "start": "95729",
    "end": "97259"
  },
  {
    "text": "angularfire auth off state observable",
    "start": "97259",
    "end": "99630"
  },
  {
    "text": "and we can add switch map which will",
    "start": "99630",
    "end": "102060"
  },
  {
    "text": "give us access to the auth user ID and",
    "start": "102060",
    "end": "104399"
  },
  {
    "text": "we can return the location in the",
    "start": "104399",
    "end": "106350"
  },
  {
    "text": "database that has this user data which",
    "start": "106350",
    "end": "108720"
  },
  {
    "text": "in this case is a user collection",
    "start": "108720",
    "end": "110130"
  },
  {
    "text": "followed by the user ID if the auth",
    "start": "110130",
    "end": "113130"
  },
  {
    "text": "object is undefined we just return a",
    "start": "113130",
    "end": "114990"
  },
  {
    "text": "null observable then we can call",
    "start": "114990",
    "end": "117360"
  },
  {
    "text": "subscribe and whatever we get back is",
    "start": "117360",
    "end": "119520"
  },
  {
    "text": "what will apply to that behavior subject",
    "start": "119520",
    "end": "121710"
  },
  {
    "text": "if the user is logged in this will be",
    "start": "121710",
    "end": "123509"
  },
  {
    "text": "the data from the database and if",
    "start": "123509",
    "end": "125310"
  },
  {
    "text": "they're not signed in it'll just be null",
    "start": "125310",
    "end": "127110"
  },
  {
    "text": "from here we'll add a method for the",
    "start": "127110",
    "end": "129629"
  },
  {
    "text": "user to sign in and sign out I'm just",
    "start": "129629",
    "end": "131520"
  },
  {
    "text": "going to go over this quickly because",
    "start": "131520",
    "end": "132840"
  },
  {
    "text": "it's the standard",
    "start": "132840",
    "end": "133680"
  },
  {
    "text": "or information you'll find in that",
    "start": "133680",
    "end": "134969"
  },
  {
    "text": "angularfire to documentation the only",
    "start": "134969",
    "end": "137790"
  },
  {
    "text": "difference is when the user logs in we",
    "start": "137790",
    "end": "139799"
  },
  {
    "text": "want to update the database with",
    "start": "139799",
    "end": "141569"
  },
  {
    "text": "whatever user information we want to",
    "start": "141569",
    "end": "143370"
  },
  {
    "text": "save there we can do this by creating a",
    "start": "143370",
    "end": "146099"
  },
  {
    "text": "new user object and then we'll check the",
    "start": "146099",
    "end": "148439"
  },
  {
    "text": "database to see if the data is already",
    "start": "148439",
    "end": "150239"
  },
  {
    "text": "defined and if it's not we'll go ahead",
    "start": "150239",
    "end": "152099"
  },
  {
    "text": "and update it with the default data from",
    "start": "152099",
    "end": "154230"
  },
  {
    "text": "this class so this code only run when we",
    "start": "154230",
    "end": "156659"
  },
  {
    "text": "have a brand new user signing up for the",
    "start": "156659",
    "end": "158459"
  },
  {
    "text": "first time with that out of the way we",
    "start": "158459",
    "end": "160620"
  },
  {
    "start": "160000",
    "end": "313000"
  },
  {
    "text": "can actually start building some",
    "start": "160620",
    "end": "162030"
  },
  {
    "text": "authorization rules our database has",
    "start": "162030",
    "end": "164519"
  },
  {
    "text": "some posts in it and we want to limit",
    "start": "164519",
    "end": "166260"
  },
  {
    "text": "access to who can create update and",
    "start": "166260",
    "end": "168540"
  },
  {
    "text": "delete these posts we can create a post",
    "start": "168540",
    "end": "171000"
  },
  {
    "text": "service to handle this logic so we'll",
    "start": "171000",
    "end": "173069"
  },
  {
    "text": "import the angularfire database our off",
    "start": "173069",
    "end": "175049"
  },
  {
    "text": "service as well as lodash we set a",
    "start": "175049",
    "end": "177840"
  },
  {
    "text": "variable user roles which is an array of",
    "start": "177840",
    "end": "180659"
  },
  {
    "text": "the roles that are actually assigned to",
    "start": "180659",
    "end": "182129"
  },
  {
    "text": "the current user we can define this",
    "start": "182129",
    "end": "184530"
  },
  {
    "text": "variable by subscribing to the user from",
    "start": "184530",
    "end": "186659"
  },
  {
    "text": "our off service and then we'll map the",
    "start": "186659",
    "end": "188969"
  },
  {
    "text": "roles down to an array of strings this",
    "start": "188969",
    "end": "191430"
  },
  {
    "text": "will make the code for our rules a",
    "start": "191430",
    "end": "192599"
  },
  {
    "text": "little less verbose the next step is to",
    "start": "192599",
    "end": "195510"
  },
  {
    "text": "create a couple functions to actually",
    "start": "195510",
    "end": "197099"
  },
  {
    "text": "get the data from the database and then",
    "start": "197099",
    "end": "199590"
  },
  {
    "text": "we can finally start writing some rules",
    "start": "199590",
    "end": "201120"
  },
  {
    "text": "related to this data first we're going",
    "start": "201120",
    "end": "203699"
  },
  {
    "text": "to write a helper function which is",
    "start": "203699",
    "end": "205079"
  },
  {
    "text": "going to see if there are any matches",
    "start": "205079",
    "end": "206790"
  },
  {
    "text": "between two arrays the reason is that",
    "start": "206790",
    "end": "209099"
  },
  {
    "text": "every rule is going to have an array of",
    "start": "209099",
    "end": "210629"
  },
  {
    "text": "allowed roles and we want to make sure",
    "start": "210629",
    "end": "212340"
  },
  {
    "text": "those roles match the actual user roles",
    "start": "212340",
    "end": "214650"
  },
  {
    "text": "this makes the authorization logic very",
    "start": "214650",
    "end": "217319"
  },
  {
    "text": "straightforward we just define an array",
    "start": "217319",
    "end": "219090"
  },
  {
    "text": "of the allowed roles and then we call",
    "start": "219090",
    "end": "220769"
  },
  {
    "text": "our helper function to see if there's a",
    "start": "220769",
    "end": "222449"
  },
  {
    "text": "match between those roles and the users",
    "start": "222449",
    "end": "224579"
  },
  {
    "text": "roles for example that can delete rule",
    "start": "224579",
    "end": "227310"
  },
  {
    "text": "only allows admin users so if an author",
    "start": "227310",
    "end": "229680"
  },
  {
    "text": "or reader user tries to perform this",
    "start": "229680",
    "end": "232079"
  },
  {
    "text": "action it'll return false so we can lock",
    "start": "232079",
    "end": "235049"
  },
  {
    "text": "down specific actions in the type script",
    "start": "235049",
    "end": "237000"
  },
  {
    "text": "directly by wrapping them in an if",
    "start": "237000",
    "end": "238769"
  },
  {
    "text": "statement in this case users can only",
    "start": "238769",
    "end": "241079"
  },
  {
    "text": "edit posts if the can edit rule returns",
    "start": "241079",
    "end": "243389"
  },
  {
    "text": "true if not it'll just say action",
    "start": "243389",
    "end": "245519"
  },
  {
    "text": "prevented and we can also perform the",
    "start": "245519",
    "end": "247590"
  },
  {
    "text": "same logic for deleting posts just using",
    "start": "247590",
    "end": "249689"
  },
  {
    "text": "the can delete rule if we go into the",
    "start": "249689",
    "end": "252150"
  },
  {
    "text": "app we can see we're currently logged in",
    "start": "252150",
    "end": "254009"
  },
  {
    "text": "with just the reader role so if we try",
    "start": "254009",
    "end": "256049"
  },
  {
    "text": "to edit or delete a post we'll see this",
    "start": "256049",
    "end": "257909"
  },
  {
    "text": "action prevented message in the console",
    "start": "257909",
    "end": "260060"
  },
  {
    "text": "but if we go into the database and give",
    "start": "260060",
    "end": "262469"
  },
  {
    "text": "this user the author role we should get",
    "start": "262469",
    "end": "264389"
  },
  {
    "text": "different results so now that we have",
    "start": "264389",
    "end": "267180"
  },
  {
    "text": "the author permission we can try to",
    "start": "267180",
    "end": "268949"
  },
  {
    "text": "delete a post but we'll still get the",
    "start": "268949",
    "end": "270720"
  },
  {
    "text": "same message because we're not",
    "start": "270720",
    "end": "271650"
  },
  {
    "text": "authorized to delete but we should have",
    "start": "271650",
    "end": "273780"
  },
  {
    "text": "access to edit the post so we click Edit",
    "start": "273780",
    "end": "275639"
  },
  {
    "text": "we go in here and we edit the data and",
    "start": "275639",
    "end": "278639"
  },
  {
    "text": "it should update in the database when we",
    "start": "278639",
    "end": "281070"
  },
  {
    "text": "go back we can confirm the post does",
    "start": "281070",
    "end": "282750"
  },
  {
    "text": "have the new text that we just entered",
    "start": "282750",
    "end": "284160"
  },
  {
    "text": "then we can go ahead and add the admin",
    "start": "284160",
    "end": "286500"
  },
  {
    "text": "role in the database and we should have",
    "start": "286500",
    "end": "288270"
  },
  {
    "text": "access to now delete the post when we",
    "start": "288270",
    "end": "290820"
  },
  {
    "text": "click delete this time we can see that",
    "start": "290820",
    "end": "292229"
  },
  {
    "text": "post is deleted and we don't get any",
    "start": "292229",
    "end": "294300"
  },
  {
    "text": "kind of error in the console it's also",
    "start": "294300",
    "end": "296970"
  },
  {
    "text": "important to point out that we could",
    "start": "296970",
    "end": "298229"
  },
  {
    "text": "just hide the delete button from the Dom",
    "start": "298229",
    "end": "300389"
  },
  {
    "text": "altogether and we can do this by using",
    "start": "300389",
    "end": "302490"
  },
  {
    "text": "ng F along with the can delete function",
    "start": "302490",
    "end": "305970"
  },
  {
    "text": "that we had defined in the post service",
    "start": "305970",
    "end": "307770"
  },
  {
    "text": "so just keep that in mind as an option",
    "start": "307770",
    "end": "309780"
  },
  {
    "text": "when you're securing data on the",
    "start": "309780",
    "end": "311039"
  },
  {
    "text": "front-end another option you have for",
    "start": "311039",
    "end": "313440"
  },
  {
    "start": "313000",
    "end": "376000"
  },
  {
    "text": "managing roles is with router guards so",
    "start": "313440",
    "end": "316979"
  },
  {
    "text": "here we're going to build a router guard",
    "start": "316979",
    "end": "318210"
  },
  {
    "text": "that only allows the author role to",
    "start": "318210",
    "end": "320669"
  },
  {
    "text": "access a certain route the logic is very",
    "start": "320669",
    "end": "323520"
  },
  {
    "text": "similar to what you just saw on the post",
    "start": "323520",
    "end": "325050"
  },
  {
    "text": "service we first subscribe to the",
    "start": "325050",
    "end": "327509"
  },
  {
    "text": "current user from our off service and",
    "start": "327509",
    "end": "329430"
  },
  {
    "text": "then we map the roles down to a boolean",
    "start": "329430",
    "end": "331889"
  },
  {
    "text": "which will return true if they have the",
    "start": "331889",
    "end": "334260"
  },
  {
    "text": "author roll and then false if they do",
    "start": "334260",
    "end": "335909"
  },
  {
    "text": "not then we can use the rxjs do operator",
    "start": "335909",
    "end": "339840"
  },
  {
    "text": "to run some arbitrary code which is",
    "start": "339840",
    "end": "342030"
  },
  {
    "text": "useful if you want to redirect the user",
    "start": "342030",
    "end": "343470"
  },
  {
    "text": "or raised like a toast message so when a",
    "start": "343470",
    "end": "346470"
  },
  {
    "text": "user tries to navigate to this route",
    "start": "346470",
    "end": "348030"
  },
  {
    "text": "angular will subscribe to this",
    "start": "348030",
    "end": "349740"
  },
  {
    "text": "observable and it will either return",
    "start": "349740",
    "end": "351360"
  },
  {
    "text": "true or false if it's false and they",
    "start": "351360",
    "end": "353340"
  },
  {
    "text": "won't be able to access that route so we",
    "start": "353340",
    "end": "356220"
  },
  {
    "text": "can apply it to individual routes by",
    "start": "356220",
    "end": "357750"
  },
  {
    "text": "going into our app router first make",
    "start": "357750",
    "end": "360509"
  },
  {
    "text": "sure the guard is in your providers",
    "start": "360509",
    "end": "361979"
  },
  {
    "text": "array and then on individual routes you",
    "start": "361979",
    "end": "364199"
  },
  {
    "text": "can add a can activate array and add",
    "start": "364199",
    "end": "366900"
  },
  {
    "text": "that guard to it if we try to navigate",
    "start": "366900",
    "end": "369389"
  },
  {
    "text": "to this route without the authored role",
    "start": "369389",
    "end": "370860"
  },
  {
    "text": "we'll see the route is blocked and we'll",
    "start": "370860",
    "end": "372780"
  },
  {
    "text": "also get this route prevented message in",
    "start": "372780",
    "end": "374370"
  },
  {
    "text": "the console and the last thing we're",
    "start": "374370",
    "end": "376500"
  },
  {
    "start": "376000",
    "end": "471000"
  },
  {
    "text": "going to look at is securing the",
    "start": "376500",
    "end": "377820"
  },
  {
    "text": "database on the backend we can use",
    "start": "377820",
    "end": "379800"
  },
  {
    "text": "firebase database rules to ensure our",
    "start": "379800",
    "end": "381900"
  },
  {
    "text": "data integrity even if our front-end",
    "start": "381900",
    "end": "383940"
  },
  {
    "text": "JavaScript code is hacked as you can see",
    "start": "383940",
    "end": "386370"
  },
  {
    "text": "here I've removed the can delete rule",
    "start": "386370",
    "end": "388020"
  },
  {
    "text": "from angular and our user only has the",
    "start": "388020",
    "end": "390150"
  },
  {
    "text": "reader role so they shouldn't be able to",
    "start": "390150",
    "end": "391470"
  },
  {
    "text": "delete post but we still get an error",
    "start": "391470",
    "end": "393539"
  },
  {
    "text": "from firebase because we've set some",
    "start": "393539",
    "end": "395130"
  },
  {
    "text": "back-end database rules the rules are",
    "start": "395130",
    "end": "397860"
  },
  {
    "text": "kind of hard to read so I recommend",
    "start": "397860",
    "end": "399330"
  },
  {
    "text": "going to angular firebase",
    "start": "399330",
    "end": "401009"
  },
  {
    "text": "on to get the full code but we'll go",
    "start": "401009",
    "end": "402779"
  },
  {
    "text": "through it really quickly here first we",
    "start": "402779",
    "end": "404490"
  },
  {
    "text": "set a rule for reading data so we make",
    "start": "404490",
    "end": "406469"
  },
  {
    "text": "sure that the user with that auth ID has",
    "start": "406469",
    "end": "409139"
  },
  {
    "text": "the reader attribute in the database and",
    "start": "409139",
    "end": "411619"
  },
  {
    "text": "we do this by traversing the database",
    "start": "411619",
    "end": "413969"
  },
  {
    "text": "with the route variable which is",
    "start": "413969",
    "end": "415740"
  },
  {
    "text": "provided by firebase for writing data",
    "start": "415740",
    "end": "419189"
  },
  {
    "text": "first we set the rule for the author so",
    "start": "419189",
    "end": "421439"
  },
  {
    "text": "we make sure that they're providing new",
    "start": "421439",
    "end": "422759"
  },
  {
    "text": "data which means they're not deleting",
    "start": "422759",
    "end": "424349"
  },
  {
    "text": "the post and then we traverse the",
    "start": "424349",
    "end": "426419"
  },
  {
    "text": "database again making sure that they",
    "start": "426419",
    "end": "427979"
  },
  {
    "text": "have the author role on their profile",
    "start": "427979",
    "end": "430729"
  },
  {
    "text": "otherwise for admin users we just need",
    "start": "430729",
    "end": "433139"
  },
  {
    "text": "to make sure that they have the admin",
    "start": "433139",
    "end": "434729"
  },
  {
    "text": "role on their profile and they can",
    "start": "434729",
    "end": "436529"
  },
  {
    "text": "create update or delete any data that",
    "start": "436529",
    "end": "438419"
  },
  {
    "text": "they want that's it for role based",
    "start": "438419",
    "end": "441210"
  },
  {
    "text": "access control of firebase if this video",
    "start": "441210",
    "end": "443309"
  },
  {
    "text": "helped you please like and subscribe and",
    "start": "443309",
    "end": "445169"
  },
  {
    "text": "if you want the full code head over to",
    "start": "445169",
    "end": "447059"
  },
  {
    "text": "angular firebase com",
    "start": "447059",
    "end": "448680"
  },
  {
    "text": "and if you want access to exclusive",
    "start": "448680",
    "end": "450569"
  },
  {
    "text": "content as well as one on one project",
    "start": "450569",
    "end": "452459"
  },
  {
    "text": "consulting consider becoming an angular",
    "start": "452459",
    "end": "454620"
  },
  {
    "text": "firebase Pro thanks for watching and",
    "start": "454620",
    "end": "457110"
  },
  {
    "text": "I'll talk to you soon",
    "start": "457110",
    "end": "458960"
  },
  {
    "text": "[Music]",
    "start": "458960",
    "end": "467709"
  }
]