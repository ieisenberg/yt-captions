[
  {
    "start": "0",
    "end": "41000"
  },
  {
    "text": "rxjs is a huge library with a very steep",
    "start": "440",
    "end": "3480"
  },
  {
    "text": "learning curve in this episode I'm going",
    "start": "3480",
    "end": "5440"
  },
  {
    "text": "to talk about a few key Concepts that",
    "start": "5440",
    "end": "7439"
  },
  {
    "text": "are specific to angular Firebase",
    "start": "7439",
    "end": "9800"
  },
  {
    "text": "developers I believe it's best to focus",
    "start": "9800",
    "end": "12040"
  },
  {
    "text": "on what you actually need to learn",
    "start": "12040",
    "end": "13839"
  },
  {
    "text": "rather than try to master the entire",
    "start": "13839",
    "end": "15559"
  },
  {
    "text": "rxjs library to do this I've created a",
    "start": "15559",
    "end": "18720"
  },
  {
    "text": "simple component that uses the angular",
    "start": "18720",
    "end": "20840"
  },
  {
    "text": "Fire 2 package to retrieve cats and dogs",
    "start": "20840",
    "end": "23320"
  },
  {
    "text": "from Firebase cats and dogs each have",
    "start": "23320",
    "end": "25920"
  },
  {
    "text": "their own collection and there's another",
    "start": "25920",
    "end": "27920"
  },
  {
    "text": "collection for humans which represent",
    "start": "27920",
    "end": "29679"
  },
  {
    "text": "the owner of a given pet your component",
    "start": "29679",
    "end": "32078"
  },
  {
    "text": "should look something like this we",
    "start": "32079",
    "end": "33680"
  },
  {
    "text": "import the angular fire database and",
    "start": "33680",
    "end": "35680"
  },
  {
    "text": "then inject it in the Constructor when",
    "start": "35680",
    "end": "38160"
  },
  {
    "text": "using rxjs and angular you only import",
    "start": "38160",
    "end": "40760"
  },
  {
    "text": "the methods and classes that you need in",
    "start": "40760",
    "end": "43000"
  },
  {
    "start": "41000",
    "end": "41000"
  },
  {
    "text": "rxjs there are two types of methods",
    "start": "43000",
    "end": "45120"
  },
  {
    "text": "static and instance in this first",
    "start": "45120",
    "end": "47520"
  },
  {
    "text": "example we use an instance method",
    "start": "47520",
    "end": "49239"
  },
  {
    "text": "combine latest so we create two",
    "start": "49239",
    "end": "51800"
  },
  {
    "text": "instances of an",
    "start": "51800",
    "end": "53239"
  },
  {
    "text": "observable then we can use that operator",
    "start": "53239",
    "end": "55559"
  },
  {
    "text": "on the observable instance itself notice",
    "start": "55559",
    "end": "57920"
  },
  {
    "text": "how the method was imported from ad SL",
    "start": "57920",
    "end": "60559"
  },
  {
    "text": "operator the operator directory contains",
    "start": "60559",
    "end": "63039"
  },
  {
    "text": "all of the instance methods it's not",
    "start": "63039",
    "end": "65518"
  },
  {
    "text": "important to know at this point but",
    "start": "65519",
    "end": "66920"
  },
  {
    "text": "using combined latest will result in an",
    "start": "66920",
    "end": "69159"
  },
  {
    "text": "observable array of two strings now",
    "start": "69159",
    "end": "71799"
  },
  {
    "text": "let's accomplish the same thing using a",
    "start": "71799",
    "end": "74040"
  },
  {
    "text": "static method to obtain the static",
    "start": "74040",
    "end": "76080"
  },
  {
    "text": "method we import from the add/",
    "start": "76080",
    "end": "78360"
  },
  {
    "text": "observable",
    "start": "78360",
    "end": "79479"
  },
  {
    "text": "directory instead of calling the method",
    "start": "79479",
    "end": "81520"
  },
  {
    "text": "on an instance we call it on the",
    "start": "81520",
    "end": "83280"
  },
  {
    "text": "observable class itself and then we pass",
    "start": "83280",
    "end": "85520"
  },
  {
    "text": "the two observables to it as arguments",
    "start": "85520",
    "end": "88040"
  },
  {
    "text": "in rxjs some methods are only instance",
    "start": "88040",
    "end": "90520"
  },
  {
    "text": "others are only static and some overlap",
    "start": "90520",
    "end": "92880"
  },
  {
    "text": "for both now let's talk about",
    "start": "92880",
    "end": "95040"
  },
  {
    "text": "subscriptions that's how you actually",
    "start": "95040",
    "end": "96799"
  },
  {
    "text": "extract data from observables there are",
    "start": "96799",
    "end": "99200"
  },
  {
    "start": "97000",
    "end": "97000"
  },
  {
    "text": "two main ways to do this in angular you",
    "start": "99200",
    "end": "100920"
  },
  {
    "text": "can either subscribe in the component",
    "start": "100920",
    "end": "102920"
  },
  {
    "text": "typescript or in the component HTML in",
    "start": "102920",
    "end": "105799"
  },
  {
    "text": "this example we will subscribe to cats",
    "start": "105799",
    "end": "107920"
  },
  {
    "text": "in the HTML and dogs in the component",
    "start": "107920",
    "end": "110560"
  },
  {
    "text": "typescript notice how cats are a",
    "start": "110560",
    "end": "112600"
  },
  {
    "text": "Firebase list observable and dogs are",
    "start": "112600",
    "end": "114759"
  },
  {
    "text": "just a regular array calling DB list",
    "start": "114759",
    "end": "117840"
  },
  {
    "text": "will return in observable from the",
    "start": "117840",
    "end": "119479"
  },
  {
    "text": "Firebase database for cats we just keep",
    "start": "119479",
    "end": "121920"
  },
  {
    "text": "it as is but for dogs we call subscribe",
    "start": "121920",
    "end": "124520"
  },
  {
    "text": "which will cause the observable to emit",
    "start": "124520",
    "end": "126280"
  },
  {
    "text": "an array of dogs that we can set as the",
    "start": "126280",
    "end": "128399"
  },
  {
    "text": "variable on this",
    "start": "128399",
    "end": "129800"
  },
  {
    "text": "component to subscribe to cats we do",
    "start": "129800",
    "end": "132480"
  },
  {
    "text": "this in the template Itself by using the",
    "start": "132480",
    "end": "134560"
  },
  {
    "text": "async pipe provided by angular under the",
    "start": "134560",
    "end": "137920"
  },
  {
    "text": "hood this is subscribing to the",
    "start": "137920",
    "end": "139280"
  },
  {
    "text": "observable just like we did in the",
    "start": "139280",
    "end": "140760"
  },
  {
    "text": "typescript for dogs it's generally",
    "start": "140760",
    "end": "142800"
  },
  {
    "text": "preferred to use the async pipe when",
    "start": "142800",
    "end": "144440"
  },
  {
    "text": "possible because it will also",
    "start": "144440",
    "end": "146080"
  },
  {
    "text": "unsubscribe to the observable to prevent",
    "start": "146080",
    "end": "147920"
  },
  {
    "text": "memory leaks and it just results in Plus",
    "start": "147920",
    "end": "150360"
  },
  {
    "text": "Code when we iterate over dogs notice",
    "start": "150360",
    "end": "153040"
  },
  {
    "text": "we're not using the async pipe since",
    "start": "153040",
    "end": "154959"
  },
  {
    "text": "that was already unwrapped in the",
    "start": "154959",
    "end": "156239"
  },
  {
    "text": "component if we go into the app we can",
    "start": "156239",
    "end": "158319"
  },
  {
    "text": "see the results are identical for both",
    "start": "158319",
    "end": "160920"
  },
  {
    "text": "collections when you create",
    "start": "160920",
    "end": "162560"
  },
  {
    "text": "subscriptions it's a good practice to",
    "start": "162560",
    "end": "164720"
  },
  {
    "text": "unsubscribe when that data is no longer",
    "start": "164720",
    "end": "166519"
  },
  {
    "text": "needed if you use the async pipe like we",
    "start": "166519",
    "end": "168760"
  },
  {
    "text": "did with cats this will happen",
    "start": "168760",
    "end": "170400"
  },
  {
    "text": "automatically but with dogs we built the",
    "start": "170400",
    "end": "172360"
  },
  {
    "text": "subscription manually so we want to end",
    "start": "172360",
    "end": "174560"
  },
  {
    "text": "that subscription when the component's",
    "start": "174560",
    "end": "176120"
  },
  {
    "text": "no longer in use we can do this by",
    "start": "176120",
    "end": "178040"
  },
  {
    "text": "setting the subscription to its own",
    "start": "178040",
    "end": "179480"
  },
  {
    "text": "variable",
    "start": "179480",
    "end": "180400"
  },
  {
    "text": "then listen for the on destroy life",
    "start": "180400",
    "end": "182440"
  },
  {
    "text": "cycle hook and call",
    "start": "182440",
    "end": "185280"
  },
  {
    "text": "unsubscribe the next concept I want to",
    "start": "185280",
    "end": "187280"
  },
  {
    "text": "talk about is mapping observables this",
    "start": "187280",
    "end": "189560"
  },
  {
    "start": "188000",
    "end": "188000"
  },
  {
    "text": "allows you to transform Data before you",
    "start": "189560",
    "end": "191440"
  },
  {
    "text": "subscribe to it the first thing we'll do",
    "start": "191440",
    "end": "193840"
  },
  {
    "text": "is transform a list observable of cats",
    "start": "193840",
    "end": "196319"
  },
  {
    "text": "into a number based on the length of",
    "start": "196319",
    "end": "198200"
  },
  {
    "text": "that collection so first we obtain the",
    "start": "198200",
    "end": "200760"
  },
  {
    "text": "list observable from Firebase then we",
    "start": "200760",
    "end": "202680"
  },
  {
    "text": "call map and that will emit an array",
    "start": "202680",
    "end": "205480"
  },
  {
    "text": "which we can just call length on and",
    "start": "205480",
    "end": "207319"
  },
  {
    "text": "that'll return a number representing the",
    "start": "207319",
    "end": "209200"
  },
  {
    "text": "length of that",
    "start": "209200",
    "end": "210400"
  },
  {
    "text": "collection in the next example we take a",
    "start": "210400",
    "end": "212959"
  },
  {
    "text": "dog as an object observable then map its",
    "start": "212959",
    "end": "216000"
  },
  {
    "text": "name just to a single",
    "start": "216000",
    "end": "217959"
  },
  {
    "text": "string as you can see the map operator",
    "start": "217959",
    "end": "220360"
  },
  {
    "text": "is very powerful you can use it to",
    "start": "220360",
    "end": "222519"
  },
  {
    "text": "transform any type of asynchronous data",
    "start": "222519",
    "end": "224680"
  },
  {
    "text": "into the format that you want going back",
    "start": "224680",
    "end": "227599"
  },
  {
    "text": "to the HTML we can just call these",
    "start": "227599",
    "end": "229360"
  },
  {
    "text": "observables with the async pipe and get",
    "start": "229360",
    "end": "231480"
  },
  {
    "text": "their mapped values back going back into",
    "start": "231480",
    "end": "234560"
  },
  {
    "text": "the app we can see the observable is",
    "start": "234560",
    "end": "236319"
  },
  {
    "text": "transformed into a string and a number",
    "start": "236319",
    "end": "238360"
  },
  {
    "text": "as expected",
    "start": "238360",
    "end": "240439"
  },
  {
    "text": "now let's talk about the switch map",
    "start": "240439",
    "end": "242120"
  },
  {
    "text": "operator this allows us to handle data",
    "start": "242120",
    "end": "244280"
  },
  {
    "start": "243000",
    "end": "243000"
  },
  {
    "text": "relationships that exist between two",
    "start": "244280",
    "end": "246280"
  },
  {
    "text": "independent streams a common example in",
    "start": "246280",
    "end": "248920"
  },
  {
    "text": "Firebase is when you need the oth",
    "start": "248920",
    "end": "250640"
  },
  {
    "text": "observable to emit the current user",
    "start": "250640",
    "end": "252840"
  },
  {
    "text": "before you can query some other data",
    "start": "252840",
    "end": "255159"
  },
  {
    "text": "we're going to simulate that situation",
    "start": "255159",
    "end": "256959"
  },
  {
    "text": "here by taking an object observable of a",
    "start": "256959",
    "end": "259519"
  },
  {
    "text": "human then use the name from that",
    "start": "259519",
    "end": "261680"
  },
  {
    "text": "observable to query the pets owned by",
    "start": "261680",
    "end": "264400"
  },
  {
    "text": "that human so switch map is kind of like",
    "start": "264400",
    "end": "266680"
  },
  {
    "text": "subscribing to the first observable and",
    "start": "266680",
    "end": "268680"
  },
  {
    "text": "then using that data to return a second",
    "start": "268680",
    "end": "271520"
  },
  {
    "text": "observable so we set this whole thing",
    "start": "271520",
    "end": "273680"
  },
  {
    "text": "equal to the dogs variable then iterate",
    "start": "273680",
    "end": "275919"
  },
  {
    "text": "over it in the template like normal with",
    "start": "275919",
    "end": "277720"
  },
  {
    "text": "the async pipe back in the app we can",
    "start": "277720",
    "end": "279840"
  },
  {
    "text": "see the dogs observable only emits the",
    "start": "279840",
    "end": "281960"
  },
  {
    "text": "two dogs that match this human owner",
    "start": "281960",
    "end": "285199"
  },
  {
    "text": "name in some cases you might find",
    "start": "285199",
    "end": "287400"
  },
  {
    "text": "yourself needing to combine two",
    "start": "287400",
    "end": "289160"
  },
  {
    "start": "288000",
    "end": "288000"
  },
  {
    "text": "observables into one rxjs has several",
    "start": "289160",
    "end": "292320"
  },
  {
    "text": "different combination operators but",
    "start": "292320",
    "end": "294199"
  },
  {
    "text": "we'll just be focusing on combine latest",
    "start": "294199",
    "end": "296160"
  },
  {
    "text": "for this",
    "start": "296160",
    "end": "297080"
  },
  {
    "text": "example we will pull two different",
    "start": "297080",
    "end": "299759"
  },
  {
    "text": "object observables from Firebase and",
    "start": "299759",
    "end": "301759"
  },
  {
    "text": "then combine them into a new observable",
    "start": "301759",
    "end": "303840"
  },
  {
    "text": "called",
    "start": "303840",
    "end": "304960"
  },
  {
    "text": "Animals in this case I used the static",
    "start": "304960",
    "end": "307600"
  },
  {
    "text": "method from the observable class to pass",
    "start": "307600",
    "end": "310080"
  },
  {
    "text": "both of these object observables as",
    "start": "310080",
    "end": "312120"
  },
  {
    "text": "arguments this results in a observable",
    "start": "312120",
    "end": "314800"
  },
  {
    "text": "with an array that we can iterate over",
    "start": "314800",
    "end": "316600"
  },
  {
    "text": "in the template if we go back to the app",
    "start": "316600",
    "end": "319240"
  },
  {
    "text": "we can see we have one cat and one dog",
    "start": "319240",
    "end": "321199"
  },
  {
    "text": "in an array even though they come from",
    "start": "321199",
    "end": "322960"
  },
  {
    "text": "completely different collections in",
    "start": "322960",
    "end": "324880"
  },
  {
    "text": "Firebase the final topic I want to cover",
    "start": "324880",
    "end": "327199"
  },
  {
    "start": "327000",
    "end": "327000"
  },
  {
    "text": "is about Behavior subjects which allow",
    "start": "327199",
    "end": "329400"
  },
  {
    "text": "us to share current data throughout an",
    "start": "329400",
    "end": "331199"
  },
  {
    "text": "angular app I'll be going over this very",
    "start": "331199",
    "end": "333560"
  },
  {
    "text": "quickly so I also recommend checking out",
    "start": "333560",
    "end": "335440"
  },
  {
    "text": "the JavaScript evangelist and his video",
    "start": "335440",
    "end": "337840"
  },
  {
    "text": "on Behavior subjects check out the link",
    "start": "337840",
    "end": "340199"
  },
  {
    "text": "in the description a behavior subject is",
    "start": "340199",
    "end": "342960"
  },
  {
    "text": "just an observable that we can push data",
    "start": "342960",
    "end": "345199"
  },
  {
    "text": "to it also has a concept of a current",
    "start": "345199",
    "end": "347800"
  },
  {
    "text": "value which is very useful for real-time",
    "start": "347800",
    "end": "350039"
  },
  {
    "text": "app development because you generally",
    "start": "350039",
    "end": "351479"
  },
  {
    "text": "want the most up-to-date information",
    "start": "351479",
    "end": "353479"
  },
  {
    "text": "displayed in the app in this example",
    "start": "353479",
    "end": "355800"
  },
  {
    "text": "we're going to create a new variable",
    "start": "355800",
    "end": "357160"
  },
  {
    "text": "called current dog which is a behavior",
    "start": "357160",
    "end": "359240"
  },
  {
    "text": "subject",
    "start": "359240",
    "end": "360160"
  },
  {
    "text": "and it gets updated whenever you click",
    "start": "360160",
    "end": "362080"
  },
  {
    "text": "on the dog's image this may seem trivial",
    "start": "362080",
    "end": "364520"
  },
  {
    "text": "in this example but when you use a",
    "start": "364520",
    "end": "366319"
  },
  {
    "text": "behavior subject in an angular service",
    "start": "366319",
    "end": "368720"
  },
  {
    "text": "you can then share current data",
    "start": "368720",
    "end": "370120"
  },
  {
    "text": "throughout the application we push new",
    "start": "370120",
    "end": "372160"
  },
  {
    "text": "data to the behavior subject by calling",
    "start": "372160",
    "end": "374000"
  },
  {
    "text": "next and that will update any observers",
    "start": "374000",
    "end": "376440"
  },
  {
    "text": "throughout the app in the template we",
    "start": "376440",
    "end": "378759"
  },
  {
    "text": "allow the user to change the current dog",
    "start": "378759",
    "end": "381039"
  },
  {
    "text": "or the value of the behavior subject by",
    "start": "381039",
    "end": "383240"
  },
  {
    "text": "clicking on a dog's",
    "start": "383240",
    "end": "385199"
  },
  {
    "text": "image then we unwrap the behavior",
    "start": "385199",
    "end": "387560"
  },
  {
    "text": "subject with the async pipe just like we",
    "start": "387560",
    "end": "389759"
  },
  {
    "text": "with any other",
    "start": "389759",
    "end": "390800"
  },
  {
    "text": "observable but also notice how we use",
    "start": "390800",
    "end": "392960"
  },
  {
    "text": "the question mark before calling any",
    "start": "392960",
    "end": "394639"
  },
  {
    "text": "attributes cuz the default value is null",
    "start": "394639",
    "end": "396759"
  },
  {
    "text": "so we don't want to call an attribute",
    "start": "396759",
    "end": "398520"
  },
  {
    "text": "that doesn't",
    "start": "398520",
    "end": "400120"
  },
  {
    "text": "exist now if we go back into the app we",
    "start": "400120",
    "end": "402360"
  },
  {
    "text": "can see when we click on a dog's image",
    "start": "402360",
    "end": "404360"
  },
  {
    "text": "it updates the current dog with that",
    "start": "404360",
    "end": "406950"
  },
  {
    "text": "[Music]",
    "start": "406950",
    "end": "410339"
  },
  {
    "text": "data that's it for my top seven rxjs",
    "start": "411160",
    "end": "414360"
  },
  {
    "text": "patterns for angular Firebase developers",
    "start": "414360",
    "end": "416879"
  },
  {
    "text": "if this video helped you please like And",
    "start": "416879",
    "end": "418520"
  },
  {
    "text": "subscribe and if you want to support the",
    "start": "418520",
    "end": "420599"
  },
  {
    "text": "channel consider becoming a pro member",
    "start": "420599",
    "end": "422720"
  },
  {
    "text": "at angular firebase.com thanks for",
    "start": "422720",
    "end": "425360"
  },
  {
    "text": "watching and I'll see you next",
    "start": "425360",
    "end": "427040"
  },
  {
    "text": "[Music]",
    "start": "427040",
    "end": "435079"
  },
  {
    "text": "time",
    "start": "437520",
    "end": "440520"
  }
]