[
  {
    "start": "0",
    "end": "39000"
  },
  {
    "text": "sending text messages through your app",
    "start": "30",
    "end": "1770"
  },
  {
    "text": "can bring the user experience to the",
    "start": "1770",
    "end": "3449"
  },
  {
    "text": "next level in this lesson I have an",
    "start": "3449",
    "end": "5310"
  },
  {
    "text": "angular app where users can order a",
    "start": "5310",
    "end": "6930"
  },
  {
    "text": "pizza for delivery my goal is to update",
    "start": "6930",
    "end": "9480"
  },
  {
    "text": "the users with a text message every time",
    "start": "9480",
    "end": "11429"
  },
  {
    "text": "their order status changes so when the",
    "start": "11429",
    "end": "13559"
  },
  {
    "text": "pizza goes from cooking to on its way",
    "start": "13559",
    "end": "15540"
  },
  {
    "text": "that user gets notified directly in",
    "start": "15540",
    "end": "17400"
  },
  {
    "text": "their phone to handle the text messaging",
    "start": "17400",
    "end": "19619"
  },
  {
    "text": "we're going to use an API called Twilio",
    "start": "19619",
    "end": "21180"
  },
  {
    "text": "combined with firebase cloud functions",
    "start": "21180",
    "end": "23670"
  },
  {
    "text": "let's start by learning a little bit",
    "start": "23670",
    "end": "25350"
  },
  {
    "text": "more about Twilio from their promo video",
    "start": "25350",
    "end": "27619"
  },
  {
    "text": "Twilio is a global communications",
    "start": "27619",
    "end": "30029"
  },
  {
    "text": "platform for developers with our API and",
    "start": "30029",
    "end": "32668"
  },
  {
    "text": "a few lines of code you can add",
    "start": "32669",
    "end": "34079"
  },
  {
    "text": "messaging voice and video to your",
    "start": "34079",
    "end": "36300"
  },
  {
    "text": "applications in the programming language",
    "start": "36300",
    "end": "38309"
  },
  {
    "text": "you already use so after we sign up for",
    "start": "38309",
    "end": "40500"
  },
  {
    "start": "39000",
    "end": "64000"
  },
  {
    "text": "a Twilio account they're going to assign",
    "start": "40500",
    "end": "42510"
  },
  {
    "text": "us a phone number and we can use that",
    "start": "42510",
    "end": "44100"
  },
  {
    "text": "phone number to send text messages to",
    "start": "44100",
    "end": "45570"
  },
  {
    "text": "our users you can sign up without a",
    "start": "45570",
    "end": "47760"
  },
  {
    "text": "credit card and they'll give you a 15",
    "start": "47760",
    "end": "49559"
  },
  {
    "text": "dollar credit to experiment with the API",
    "start": "49559",
    "end": "51510"
  },
  {
    "text": "so once you've signed up make note of",
    "start": "51510",
    "end": "54239"
  },
  {
    "text": "your phone number as well as your API",
    "start": "54239",
    "end": "56430"
  },
  {
    "text": "keys which we're going to use to build",
    "start": "56430",
    "end": "58109"
  },
  {
    "text": "the firebase cloud function but before",
    "start": "58109",
    "end": "60750"
  },
  {
    "text": "we get to that point we're first going",
    "start": "60750",
    "end": "61980"
  },
  {
    "text": "to build the angular component for the",
    "start": "61980",
    "end": "63750"
  },
  {
    "text": "front-end so i've generated a new",
    "start": "63750",
    "end": "65790"
  },
  {
    "start": "64000",
    "end": "88000"
  },
  {
    "text": "component called pizza status and it's",
    "start": "65790",
    "end": "67890"
  },
  {
    "text": "going to use the reactive forms module",
    "start": "67890",
    "end": "69540"
  },
  {
    "text": "so we need to make sure to add that to",
    "start": "69540",
    "end": "71670"
  },
  {
    "text": "the import section in our ng module",
    "start": "71670",
    "end": "73920"
  },
  {
    "text": "we're using a reactive form because we",
    "start": "73920",
    "end": "76110"
  },
  {
    "text": "need to validate the phone number",
    "start": "76110",
    "end": "77670"
  },
  {
    "text": "carefully when we send it to Twilio it",
    "start": "77670",
    "end": "79830"
  },
  {
    "text": "needs to be an e 164 format which is a",
    "start": "79830",
    "end": "82350"
  },
  {
    "text": "string that looks like this the country",
    "start": "82350",
    "end": "84420"
  },
  {
    "text": "code with a plus sign followed by at the",
    "start": "84420",
    "end": "86310"
  },
  {
    "text": "full ten digit phone number so let's see",
    "start": "86310",
    "end": "88979"
  },
  {
    "start": "88000",
    "end": "200000"
  },
  {
    "text": "how we can make this possible in the",
    "start": "88979",
    "end": "90450"
  },
  {
    "text": "pizza status component we are going to",
    "start": "90450",
    "end": "92700"
  },
  {
    "text": "break the phone number down into four",
    "start": "92700",
    "end": "93869"
  },
  {
    "text": "different form inputs and then when we",
    "start": "93869",
    "end": "95759"
  },
  {
    "text": "send that data back to firebase it's",
    "start": "95759",
    "end": "97619"
  },
  {
    "text": "going to be the fully formatted II 1 64",
    "start": "97619",
    "end": "100259"
  },
  {
    "text": "string and for this lesson in firebase I",
    "start": "100259",
    "end": "102780"
  },
  {
    "text": "just have a single test order in there",
    "start": "102780",
    "end": "104909"
  },
  {
    "text": "to simulate how this could work in the",
    "start": "104909",
    "end": "107909"
  },
  {
    "text": "component itself we'll first import the",
    "start": "107909",
    "end": "110189"
  },
  {
    "text": "angularfire database as well as the",
    "start": "110189",
    "end": "112320"
  },
  {
    "text": "reactive form parts that we need then",
    "start": "112320",
    "end": "115350"
  },
  {
    "text": "we'll set a variable for the form itself",
    "start": "115350",
    "end": "117000"
  },
  {
    "text": "and set that to the type of form group",
    "start": "117000",
    "end": "119159"
  },
  {
    "text": "and then order we'll represent the data",
    "start": "119159",
    "end": "121649"
  },
  {
    "text": "in firebase then we can add the angular",
    "start": "121649",
    "end": "124710"
  },
  {
    "text": "fire database and form builder to the",
    "start": "124710",
    "end": "126450"
  },
  {
    "text": "constructor and during ng on an it will",
    "start": "126450",
    "end": "129149"
  },
  {
    "text": "build the form which will define here in",
    "start": "129149",
    "end": "131069"
  },
  {
    "text": "a second and then we'll set the order",
    "start": "131069",
    "end": "133510"
  },
  {
    "text": "to the object that we have saved in",
    "start": "133510",
    "end": "135819"
  },
  {
    "text": "firebase the next thing I'm going to do",
    "start": "135819",
    "end": "138189"
  },
  {
    "text": "is create a helper function to validate",
    "start": "138189",
    "end": "140620"
  },
  {
    "text": "the min and Max length of any given form",
    "start": "140620",
    "end": "143079"
  },
  {
    "text": "input the reason I'm doing this is to",
    "start": "143079",
    "end": "145209"
  },
  {
    "text": "avoid repeating these validators for",
    "start": "145209",
    "end": "147010"
  },
  {
    "text": "every single format but but they're just",
    "start": "147010",
    "end": "149439"
  },
  {
    "text": "validating that the input value is a",
    "start": "149439",
    "end": "151299"
  },
  {
    "text": "number and that it's within a certain",
    "start": "151299",
    "end": "152799"
  },
  {
    "text": "length from here we'll use form builder",
    "start": "152799",
    "end": "155290"
  },
  {
    "text": "to create the actual form so we create a",
    "start": "155290",
    "end": "157599"
  },
  {
    "text": "method called build form and then we",
    "start": "157599",
    "end": "159879"
  },
  {
    "text": "define our number form as a form builder",
    "start": "159879",
    "end": "161980"
  },
  {
    "text": "group then we define form controls for",
    "start": "161980",
    "end": "165040"
  },
  {
    "text": "the country code the area code the",
    "start": "165040",
    "end": "168040"
  },
  {
    "text": "prefix and the line number this will",
    "start": "168040",
    "end": "170769"
  },
  {
    "text": "allow us to capture these values in a",
    "start": "170769",
    "end": "172450"
  },
  {
    "text": "form input but we still need to format",
    "start": "172450",
    "end": "174609"
  },
  {
    "text": "it as e1 64 to do that we can define a",
    "start": "174609",
    "end": "178209"
  },
  {
    "text": "getter and we can just grab the value",
    "start": "178209",
    "end": "180790"
  },
  {
    "text": "from the form then concatenate all the",
    "start": "180790",
    "end": "183010"
  },
  {
    "text": "values together in order and add a plus",
    "start": "183010",
    "end": "185200"
  },
  {
    "text": "sign and we're good to go",
    "start": "185200",
    "end": "187109"
  },
  {
    "text": "now we can send this value to firebase",
    "start": "187109",
    "end": "189909"
  },
  {
    "text": "when the user submits the form we",
    "start": "189909",
    "end": "192549"
  },
  {
    "text": "already have the ordered data as a",
    "start": "192549",
    "end": "194230"
  },
  {
    "text": "firebase object observable so we can",
    "start": "194230",
    "end": "196269"
  },
  {
    "text": "just call ordered update with the phone",
    "start": "196269",
    "end": "199000"
  },
  {
    "text": "number now let's put this all together",
    "start": "199000",
    "end": "201280"
  },
  {
    "start": "200000",
    "end": "372000"
  },
  {
    "text": "in the HTML the first thing I do here is",
    "start": "201280",
    "end": "204250"
  },
  {
    "text": "set a template variable called pizza",
    "start": "204250",
    "end": "206109"
  },
  {
    "text": "based on the order observable so we do",
    "start": "206109",
    "end": "208599"
  },
  {
    "text": "that by calling order async as pizza",
    "start": "208599",
    "end": "211290"
  },
  {
    "text": "then I want to add a custom class for",
    "start": "211290",
    "end": "213879"
  },
  {
    "text": "each possible orders state that the",
    "start": "213879",
    "end": "215799"
  },
  {
    "text": "pizza can be in we can do this with the",
    "start": "215799",
    "end": "217989"
  },
  {
    "text": "built in ng class directive and angular",
    "start": "217989",
    "end": "220199"
  },
  {
    "text": "you use ng class by passing it an object",
    "start": "220199",
    "end": "223449"
  },
  {
    "text": "where the keys and that object are the",
    "start": "223449",
    "end": "225549"
  },
  {
    "text": "classes you want to apply and the value",
    "start": "225549",
    "end": "227980"
  },
  {
    "text": "is an expression that resolves to true",
    "start": "227980",
    "end": "229750"
  },
  {
    "text": "or false so here we'll do pizza status",
    "start": "229750",
    "end": "232150"
  },
  {
    "text": "submitted and we'll do that is dark CSS",
    "start": "232150",
    "end": "234669"
  },
  {
    "text": "class then we'll add a couple more",
    "start": "234669",
    "end": "236650"
  },
  {
    "text": "possible statuses such as on its way",
    "start": "236650",
    "end": "239349"
  },
  {
    "text": "from the delivery driver and delivered",
    "start": "239349",
    "end": "241510"
  },
  {
    "text": "to the end user",
    "start": "241510",
    "end": "242500"
  },
  {
    "text": "then we're going to jump down here to",
    "start": "242500",
    "end": "244930"
  },
  {
    "text": "the reactive form and we make this warm",
    "start": "244930",
    "end": "247359"
  },
  {
    "text": "reactive by first adding a form element",
    "start": "247359",
    "end": "249639"
  },
  {
    "text": "and then doing form group to our number",
    "start": "249639",
    "end": "252549"
  },
  {
    "text": "form that we defined in the type script",
    "start": "252549",
    "end": "254500"
  },
  {
    "text": "then when the swarms submitted we use",
    "start": "254500",
    "end": "256780"
  },
  {
    "text": "this ng submit event and we'll update",
    "start": "256780",
    "end": "259359"
  },
  {
    "text": "the phone number in firebase also with",
    "start": "259359",
    "end": "261220"
  },
  {
    "text": "that function we defined in the type",
    "start": "261220",
    "end": "262719"
  },
  {
    "text": "script from here we'll build the actual",
    "start": "262719",
    "end": "265180"
  },
  {
    "text": "form inputs and all we have to do is to",
    "start": "265180",
    "end": "267410"
  },
  {
    "text": "form control name attribute that",
    "start": "267410",
    "end": "269900"
  },
  {
    "text": "corresponds to the key in the build form",
    "start": "269900",
    "end": "272540"
  },
  {
    "text": "function we defined earlier so that's",
    "start": "272540",
    "end": "275240"
  },
  {
    "text": "the country code area code etc then",
    "start": "275240",
    "end": "278330"
  },
  {
    "text": "lastly we'll add a submit button to the",
    "start": "278330",
    "end": "280190"
  },
  {
    "text": "form that is disabled if the form is",
    "start": "280190",
    "end": "282800"
  },
  {
    "text": "invalid just to prevent accidental",
    "start": "282800",
    "end": "284510"
  },
  {
    "text": "numbers being sent to firebase and then",
    "start": "284510",
    "end": "287450"
  },
  {
    "text": "we can also use this to send a",
    "start": "287450",
    "end": "288770"
  },
  {
    "text": "validation message to the user by just",
    "start": "288770",
    "end": "291050"
  },
  {
    "text": "doing ng if along with for number form",
    "start": "291050",
    "end": "294440"
  },
  {
    "text": "invalid and number form touched which",
    "start": "294440",
    "end": "297470"
  },
  {
    "text": "will show the user a validation message",
    "start": "297470",
    "end": "299060"
  },
  {
    "text": "if they've started to interact with the",
    "start": "299060",
    "end": "300800"
  },
  {
    "text": "form and it's invalid and the final",
    "start": "300800",
    "end": "303320"
  },
  {
    "text": "touch is to show the user the number",
    "start": "303320",
    "end": "305270"
  },
  {
    "text": "that the text messages will be sent to",
    "start": "305270",
    "end": "306950"
  },
  {
    "text": "after it's been updated in firebase so",
    "start": "306950",
    "end": "310220"
  },
  {
    "text": "if we go into the app we can type in the",
    "start": "310220",
    "end": "311960"
  },
  {
    "text": "form and we can see we get the red phone",
    "start": "311960",
    "end": "314120"
  },
  {
    "text": "number is not valid message until it is",
    "start": "314120",
    "end": "315980"
  },
  {
    "text": "valid and then we can actually update it",
    "start": "315980",
    "end": "317900"
  },
  {
    "text": "in firebase so now everything's in place",
    "start": "317900",
    "end": "320450"
  },
  {
    "text": "to start sending text messages we just",
    "start": "320450",
    "end": "322310"
  },
  {
    "text": "need to build the firebase cloud",
    "start": "322310",
    "end": "324020"
  },
  {
    "text": "function I've added a couple extra",
    "start": "324020",
    "end": "325760"
  },
  {
    "text": "buttons here just to make this a little",
    "start": "325760",
    "end": "326960"
  },
  {
    "text": "bit easier to show whenever these",
    "start": "326960",
    "end": "329150"
  },
  {
    "text": "buttons get clicked they will update the",
    "start": "329150",
    "end": "331280"
  },
  {
    "text": "status in firebase which will trigger",
    "start": "331280",
    "end": "333020"
  },
  {
    "text": "the cloud function and tell Twilio to",
    "start": "333020",
    "end": "335330"
  },
  {
    "text": "send the text message you could also",
    "start": "335330",
    "end": "337070"
  },
  {
    "text": "just edit these values manually in the",
    "start": "337070",
    "end": "338660"
  },
  {
    "text": "firebase console if you find that easier",
    "start": "338660",
    "end": "340720"
  },
  {
    "text": "so the first thing you need to do is",
    "start": "340720",
    "end": "342919"
  },
  {
    "text": "initialize cloud functions if they're",
    "start": "342919",
    "end": "344750"
  },
  {
    "text": "not already you can do that by running",
    "start": "344750",
    "end": "346310"
  },
  {
    "text": "in firebase init and then once you've",
    "start": "346310",
    "end": "348860"
  },
  {
    "text": "done that we need to set the Twilio api",
    "start": "348860",
    "end": "351770"
  },
  {
    "text": "keys as environment variables we can do",
    "start": "351770",
    "end": "354919"
  },
  {
    "text": "that with firebase functions config set",
    "start": "354919",
    "end": "356960"
  },
  {
    "text": "and you can also just copy and paste",
    "start": "356960",
    "end": "358730"
  },
  {
    "text": "this from the full lesson code from",
    "start": "358730",
    "end": "361280"
  },
  {
    "text": "there make sure you're in the functions",
    "start": "361280",
    "end": "362930"
  },
  {
    "text": "directory then we can install that",
    "start": "362930",
    "end": "365240"
  },
  {
    "text": "Twilio helper package for nodejs with",
    "start": "365240",
    "end": "367460"
  },
  {
    "text": "NPM install Twilio with save flag okay",
    "start": "367460",
    "end": "371570"
  },
  {
    "text": "now we can go into index j s and build",
    "start": "371570",
    "end": "374450"
  },
  {
    "start": "372000",
    "end": "556000"
  },
  {
    "text": "the actual cloud function we first",
    "start": "374450",
    "end": "376910"
  },
  {
    "text": "import the admin database and initialize",
    "start": "376910",
    "end": "379250"
  },
  {
    "text": "it with our firebase config from there",
    "start": "379250",
    "end": "381680"
  },
  {
    "text": "we can import Twilio and we'll",
    "start": "381680",
    "end": "383690"
  },
  {
    "text": "initialize that with the environment",
    "start": "383690",
    "end": "385820"
  },
  {
    "text": "variables that we set earlier then we",
    "start": "385820",
    "end": "388580"
  },
  {
    "text": "also need to set a variable for the",
    "start": "388580",
    "end": "390350"
  },
  {
    "text": "phone number that was given to us by",
    "start": "390350",
    "end": "391850"
  },
  {
    "text": "Twilio you could actually set this as an",
    "start": "391850",
    "end": "394250"
  },
  {
    "text": "environment variable instead of",
    "start": "394250",
    "end": "395510"
  },
  {
    "text": "hard-coding it like I am here then I'm",
    "start": "395510",
    "end": "398150"
  },
  {
    "text": "going to put together another validation",
    "start": "398150",
    "end": "399560"
  },
  {
    "text": "function for the e1",
    "start": "399560",
    "end": "401150"
  },
  {
    "text": "sixty-four format this time I just",
    "start": "401150",
    "end": "403100"
  },
  {
    "text": "checked the number against a regular",
    "start": "403100",
    "end": "404660"
  },
  {
    "text": "expression that will return true if it",
    "start": "404660",
    "end": "407150"
  },
  {
    "text": "meets that pattern so we'll build the",
    "start": "407150",
    "end": "409460"
  },
  {
    "text": "actual cloud function by doing exports",
    "start": "409460",
    "end": "411710"
  },
  {
    "text": "text status and then we'll do a database",
    "start": "411710",
    "end": "414620"
  },
  {
    "text": "cloud function that references the",
    "start": "414620",
    "end": "416720"
  },
  {
    "text": "status point in the database so in this",
    "start": "416720",
    "end": "419630"
  },
  {
    "text": "case it's orders with the order push key",
    "start": "419630",
    "end": "421970"
  },
  {
    "text": "and then the status property and then we",
    "start": "421970",
    "end": "424490"
  },
  {
    "text": "can use the on update trigger to run",
    "start": "424490",
    "end": "426920"
  },
  {
    "text": "this function whenever the value changes",
    "start": "426920",
    "end": "428960"
  },
  {
    "text": "but it won't run the function on create",
    "start": "428960",
    "end": "430940"
  },
  {
    "text": "or delete operations which is exactly",
    "start": "430940",
    "end": "432890"
  },
  {
    "text": "what we want when this function is",
    "start": "432890",
    "end": "435290"
  },
  {
    "text": "triggered will first save the order key",
    "start": "435290",
    "end": "437300"
  },
  {
    "text": "so we can reference that point in the",
    "start": "437300",
    "end": "439340"
  },
  {
    "text": "database to pull all the data for a",
    "start": "439340",
    "end": "441320"
  },
  {
    "text": "particular order so we can do that by",
    "start": "441320",
    "end": "443600"
  },
  {
    "text": "running admin database and point it to",
    "start": "443600",
    "end": "446420"
  },
  {
    "text": "the order key so we can pull the order",
    "start": "446420",
    "end": "449270"
  },
  {
    "text": "data once and then once we have that",
    "start": "449270",
    "end": "451100"
  },
  {
    "text": "value back we'll return it to another",
    "start": "451100",
    "end": "453020"
  },
  {
    "text": "promise at this point we have all the",
    "start": "453020",
    "end": "455720"
  },
  {
    "text": "data we need to build the text message",
    "start": "455720",
    "end": "457430"
  },
  {
    "text": "and send the API call off to Twilio so",
    "start": "457430",
    "end": "460580"
  },
  {
    "text": "we'll get the current order status then",
    "start": "460580",
    "end": "463490"
  },
  {
    "text": "we'll get the phone number associated",
    "start": "463490",
    "end": "464690"
  },
  {
    "text": "with that order and then we'll run our",
    "start": "464690",
    "end": "467480"
  },
  {
    "text": "validation function one more time just",
    "start": "467480",
    "end": "469310"
  },
  {
    "text": "so we don't send any unnecessary request",
    "start": "469310",
    "end": "471230"
  },
  {
    "text": "to Twilio if it's not the right format",
    "start": "471230",
    "end": "473720"
  },
  {
    "text": "we'll just go ahead and throw an error",
    "start": "473720",
    "end": "475130"
  },
  {
    "text": "and to send a text all we need to do is",
    "start": "475130",
    "end": "478310"
  },
  {
    "text": "define three different values and that's",
    "start": "478310",
    "end": "480200"
  },
  {
    "text": "the text body itself that's the actual",
    "start": "480200",
    "end": "483440"
  },
  {
    "text": "message the end-user will see then we",
    "start": "483440",
    "end": "485930"
  },
  {
    "text": "define the message to the numbers being",
    "start": "485930",
    "end": "487430"
  },
  {
    "text": "sent to which is the user's number and",
    "start": "487430",
    "end": "489560"
  },
  {
    "text": "the number of the message is being sent",
    "start": "489560",
    "end": "491420"
  },
  {
    "text": "from which is our Twilio account phone",
    "start": "491420",
    "end": "493520"
  },
  {
    "text": "number then to actually make this API",
    "start": "493520",
    "end": "496310"
  },
  {
    "text": "call and send the text to the user we",
    "start": "496310",
    "end": "498110"
  },
  {
    "text": "just need to call client messages create",
    "start": "498110",
    "end": "500690"
  },
  {
    "text": "and pass it the text message as the",
    "start": "500690",
    "end": "503120"
  },
  {
    "text": "argument this is going to return a",
    "start": "503120",
    "end": "505400"
  },
  {
    "text": "promise also so we can just call then",
    "start": "505400",
    "end": "507320"
  },
  {
    "text": "and at this point we'll also catch any",
    "start": "507320",
    "end": "509720"
  },
  {
    "text": "errors so that's all it takes to start",
    "start": "509720",
    "end": "512390"
  },
  {
    "text": "sending text messages to your users it's",
    "start": "512390",
    "end": "514219"
  },
  {
    "text": "pretty simple when you think about how",
    "start": "514220",
    "end": "515690"
  },
  {
    "text": "powerful that feature can be after you",
    "start": "515690",
    "end": "518780"
  },
  {
    "text": "deploy the function to firebase you",
    "start": "518780",
    "end": "520070"
  },
  {
    "text": "should be able to go into the app and",
    "start": "520070",
    "end": "521419"
  },
  {
    "text": "update the status and then you'll see",
    "start": "521420",
    "end": "523340"
  },
  {
    "text": "that text message come through on",
    "start": "523340",
    "end": "524750"
  },
  {
    "text": "whichever phone number you",
    "start": "524750",
    "end": "526070"
  },
  {
    "text": "I did that's it for SMS text with Twilio",
    "start": "526070",
    "end": "530690"
  },
  {
    "text": "if this video helped you please like and",
    "start": "530690",
    "end": "532490"
  },
  {
    "text": "subscribe and if you want to get",
    "start": "532490",
    "end": "533960"
  },
  {
    "text": "involved in this project consider",
    "start": "533960",
    "end": "535370"
  },
  {
    "text": "becoming a pro member at angular",
    "start": "535370",
    "end": "537110"
  },
  {
    "text": "firebase comm you'll get a free copy in",
    "start": "537110",
    "end": "539390"
  },
  {
    "text": "my book as well as one on one project",
    "start": "539390",
    "end": "541370"
  },
  {
    "text": "consulting thanks for watching and I'll",
    "start": "541370",
    "end": "544190"
  },
  {
    "text": "see you soon",
    "start": "544190",
    "end": "545440"
  },
  {
    "text": "[Music]",
    "start": "545440",
    "end": "549919"
  }
]