[
  {
    "text": "Java a highlevel multi-paradigm",
    "start": "199",
    "end": "2440"
  },
  {
    "text": "programming language famous for its",
    "start": "2440",
    "end": "4040"
  },
  {
    "text": "ability to compile to platform",
    "start": "4040",
    "end": "6040"
  },
  {
    "text": "independent B code it was designed by",
    "start": "6040",
    "end": "8280"
  },
  {
    "text": "James Gosling in 1990 at Sun",
    "start": "8280",
    "end": "10719"
  },
  {
    "text": "Microsystems one of its first",
    "start": "10719",
    "end": "12160"
  },
  {
    "text": "demonstrations was the star 7 PDA which",
    "start": "12160",
    "end": "14920"
  },
  {
    "text": "gave birth to the Java mascot Duke today",
    "start": "14920",
    "end": "17600"
  },
  {
    "text": "it's one of the world's most popular",
    "start": "17600",
    "end": "19080"
  },
  {
    "text": "programming languages it Powers",
    "start": "19080",
    "end": "20640"
  },
  {
    "text": "Enterprise web apps with spring",
    "start": "20640",
    "end": "22000"
  },
  {
    "text": "framework Big Data pipelines with Hadoop",
    "start": "22000",
    "end": "24240"
  },
  {
    "text": "mobile apps on Android and even things",
    "start": "24240",
    "end": "26240"
  },
  {
    "text": "like the controller for NASA's Maestro",
    "start": "26240",
    "end": "28480"
  },
  {
    "text": "Mars Rover what made jav but Innovative",
    "start": "28480",
    "end": "30720"
  },
  {
    "text": "is that instead of compiling to machine",
    "start": "30720",
    "end": "32480"
  },
  {
    "text": "code like C or C++ it compiles to bik",
    "start": "32480",
    "end": "35480"
  },
  {
    "text": "code that can run on any operating",
    "start": "35480",
    "end": "37399"
  },
  {
    "text": "system without recompiling which is made",
    "start": "37399",
    "end": "39600"
  },
  {
    "text": "possible by executing the code with the",
    "start": "39600",
    "end": "41640"
  },
  {
    "text": "Java virtual machine or jvm it's both a",
    "start": "41640",
    "end": "44440"
  },
  {
    "text": "compiled and interpreted language at the",
    "start": "44440",
    "end": "46399"
  },
  {
    "text": "same time the computer just needs to",
    "start": "46399",
    "end": "48160"
  },
  {
    "text": "have the Java runtime environment or JRE",
    "start": "48160",
    "end": "50840"
  },
  {
    "text": "installed and most of them do for",
    "start": "50840",
    "end": "52640"
  },
  {
    "text": "developers this means right once run",
    "start": "52640",
    "end": "54760"
  },
  {
    "text": "anywhere it's a strongly typed language",
    "start": "54760",
    "end": "56879"
  },
  {
    "text": "with a curly bra syntax similar to the C",
    "start": "56879",
    "end": "59239"
  },
  {
    "text": "family how however it provides more",
    "start": "59239",
    "end": "61160"
  },
  {
    "text": "highlevel features like garbage",
    "start": "61160",
    "end": "62800"
  },
  {
    "text": "collection runtime type checking and",
    "start": "62800",
    "end": "65080"
  },
  {
    "text": "reflection to get started install the",
    "start": "65080",
    "end": "67200"
  },
  {
    "text": "Java development kit or jdk then create",
    "start": "67200",
    "end": "69840"
  },
  {
    "text": "a file ending in Java every Java program",
    "start": "69840",
    "end": "72560"
  },
  {
    "text": "starts with a class name which should",
    "start": "72560",
    "end": "74360"
  },
  {
    "text": "also match the file name the class is",
    "start": "74360",
    "end": "76479"
  },
  {
    "text": "required to have a main method this is",
    "start": "76479",
    "end": "78439"
  },
  {
    "text": "where your code will start executing",
    "start": "78439",
    "end": "80360"
  },
  {
    "text": "inside the method Define a variable by",
    "start": "80360",
    "end": "82439"
  },
  {
    "text": "starting with a type followed by a name",
    "start": "82439",
    "end": "84560"
  },
  {
    "text": "and value we can then print it to the",
    "start": "84560",
    "end": "86360"
  },
  {
    "text": "standard output using the built-in",
    "start": "86360",
    "end": "88240"
  },
  {
    "text": "system class now because we're inside",
    "start": "88240",
    "end": "89920"
  },
  {
    "text": "inside of a class we Define functions as",
    "start": "89920",
    "end": "92119"
  },
  {
    "text": "methods on this class the public keyword",
    "start": "92119",
    "end": "94360"
  },
  {
    "text": "means that it can be used outside of",
    "start": "94360",
    "end": "95880"
  },
  {
    "text": "this class and static means that it's a",
    "start": "95880",
    "end": "97960"
  },
  {
    "text": "member of the class itself as opposed to",
    "start": "97960",
    "end": "100159"
  },
  {
    "text": "an instance of the class we then provide",
    "start": "100159",
    "end": "102200"
  },
  {
    "text": "a type and name and return a value from",
    "start": "102200",
    "end": "104520"
  },
  {
    "text": "it you can Define your own custom",
    "start": "104520",
    "end": "106159"
  },
  {
    "text": "classes which are blueprints for objects",
    "start": "106159",
    "end": "108479"
  },
  {
    "text": "then add attributes and methods to them",
    "start": "108479",
    "end": "110600"
  },
  {
    "text": "use the new keyword to instantiate an",
    "start": "110600",
    "end": "112520"
  },
  {
    "text": "object from the class it feels very",
    "start": "112520",
    "end": "114640"
  },
  {
    "text": "objectoriented but has evolved to",
    "start": "114640",
    "end": "116520"
  },
  {
    "text": "support functional patterns like",
    "start": "116520",
    "end": "118039"
  },
  {
    "text": "Anonymous Lambda methods when your PR is",
    "start": "118039",
    "end": "120240"
  },
  {
    "text": "finished use the compiler to generate a",
    "start": "120240",
    "end": "122759"
  },
  {
    "text": "class file which contains the bite code",
    "start": "122759",
    "end": "125000"
  },
  {
    "text": "now use the Java command to tell the jvm",
    "start": "125000",
    "end": "127439"
  },
  {
    "text": "to interpret and run that file",
    "start": "127439",
    "end": "129319"
  },
  {
    "text": "congratulations you just built an",
    "start": "129319",
    "end": "131080"
  },
  {
    "text": "Enterprise grade application this has",
    "start": "131080",
    "end": "132840"
  },
  {
    "text": "been Java in 100 seconds hit subscribe",
    "start": "132840",
    "end": "135400"
  },
  {
    "text": "for more short videos like this and if",
    "start": "135400",
    "end": "137120"
  },
  {
    "text": "we somehow get to 100,000 likes on this",
    "start": "137120",
    "end": "139280"
  },
  {
    "text": "video I'll do a full Java tutorial",
    "start": "139280",
    "end": "141400"
  },
  {
    "text": "thanks for watching and I will see you",
    "start": "141400",
    "end": "143239"
  },
  {
    "text": "in the next one",
    "start": "143239",
    "end": "146440"
  }
]