[
  {
    "text": "in this episode we're going to use the",
    "start": "30",
    "end": "2190"
  },
  {
    "text": "algo Lea search platform to implement",
    "start": "2190",
    "end": "4950"
  },
  {
    "text": "full text search into an angular 4",
    "start": "4950",
    "end": "6660"
  },
  {
    "text": "application",
    "start": "6660",
    "end": "7550"
  },
  {
    "text": "algo Lea provides a library called",
    "start": "7550",
    "end": "9750"
  },
  {
    "text": "instant search Jas which we'll use to",
    "start": "9750",
    "end": "11849"
  },
  {
    "text": "implement all kinds of different widgets",
    "start": "11849",
    "end": "13860"
  },
  {
    "text": "into our search with very little code",
    "start": "13860",
    "end": "15770"
  },
  {
    "text": "when you sign up for algo Lea it",
    "start": "15770",
    "end": "18060"
  },
  {
    "text": "provides a default index of Hollywood",
    "start": "18060",
    "end": "20369"
  },
  {
    "text": "actors we'll be using this index on the",
    "start": "20369",
    "end": "22859"
  },
  {
    "text": "first video then in the second video",
    "start": "22859",
    "end": "24480"
  },
  {
    "text": "we'll create our own custom index with",
    "start": "24480",
    "end": "26310"
  },
  {
    "text": "firebase cloud functions the first step",
    "start": "26310",
    "end": "29070"
  },
  {
    "text": "is to sign up for an algo Lea account",
    "start": "29070",
    "end": "30869"
  },
  {
    "text": "and get your API credentials they have a",
    "start": "30869",
    "end": "33390"
  },
  {
    "text": "free tier which is just limited by usage",
    "start": "33390",
    "end": "36590"
  },
  {
    "text": "after you sign up you'll go through a",
    "start": "36590",
    "end": "38579"
  },
  {
    "text": "new user tour and then you'll want to",
    "start": "38579",
    "end": "40800"
  },
  {
    "text": "make note of your search on the API key",
    "start": "40800",
    "end": "42809"
  },
  {
    "text": "and your app ID inside the angular",
    "start": "42809",
    "end": "46230"
  },
  {
    "text": "project you'll run NPM install instant",
    "start": "46230",
    "end": "48629"
  },
  {
    "text": "search jas instant search is an open",
    "start": "48629",
    "end": "51629"
  },
  {
    "text": "source library maintained by algo Lea it",
    "start": "51629",
    "end": "54180"
  },
  {
    "text": "takes care of all the front-end features",
    "start": "54180",
    "end": "55350"
  },
  {
    "text": "like autocomplete pagination filtering",
    "start": "55350",
    "end": "58320"
  },
  {
    "text": "and a lot more in angular I'm going to",
    "start": "58320",
    "end": "61469"
  },
  {
    "text": "add my API keys to the environment file",
    "start": "61469",
    "end": "63930"
  },
  {
    "text": "and specify that get started actors",
    "start": "63930",
    "end": "66869"
  },
  {
    "text": "index if you want to use the instant",
    "start": "66869",
    "end": "69270"
  },
  {
    "text": "search default CSS you can add that to",
    "start": "69270",
    "end": "71610"
  },
  {
    "text": "the head of the index.html file now we",
    "start": "71610",
    "end": "75030"
  },
  {
    "text": "can generate a new component called",
    "start": "75030",
    "end": "76560"
  },
  {
    "text": "search UI component we start by",
    "start": "76560",
    "end": "79770"
  },
  {
    "text": "importing the environment file and the",
    "start": "79770",
    "end": "82530"
  },
  {
    "text": "instant search package we declare a",
    "start": "82530",
    "end": "85290"
  },
  {
    "text": "variable search which will hold the",
    "start": "85290",
    "end": "86790"
  },
  {
    "text": "entire configuration for this search",
    "start": "86790",
    "end": "88680"
  },
  {
    "text": "feature then we pass it the",
    "start": "88680",
    "end": "90630"
  },
  {
    "text": "configuration from the environment file",
    "start": "90630",
    "end": "92430"
  },
  {
    "text": "and to initialize it we call search dot",
    "start": "92430",
    "end": "95820"
  },
  {
    "text": "start at this point nothing will happen",
    "start": "95820",
    "end": "98700"
  },
  {
    "text": "because we don't have any widgets",
    "start": "98700",
    "end": "100200"
  },
  {
    "text": "attached to the search instance so we'll",
    "start": "100200",
    "end": "102960"
  },
  {
    "text": "go ahead and give it a search box widget",
    "start": "102960",
    "end": "104490"
  },
  {
    "text": "and every widget has its own",
    "start": "104490",
    "end": "106500"
  },
  {
    "text": "configuration options the most important",
    "start": "106500",
    "end": "108960"
  },
  {
    "text": "being the container option which points",
    "start": "108960",
    "end": "111270"
  },
  {
    "text": "to an HTML element that will be replaced",
    "start": "111270",
    "end": "113850"
  },
  {
    "text": "by this widget so now that we have a",
    "start": "113850",
    "end": "116670"
  },
  {
    "text": "place for the user to enter their search",
    "start": "116670",
    "end": "118170"
  },
  {
    "text": "we need another div that will hold the",
    "start": "118170",
    "end": "120240"
  },
  {
    "text": "search result we can accomplish this",
    "start": "120240",
    "end": "122280"
  },
  {
    "text": "with the hits widget so we just point",
    "start": "122280",
    "end": "124680"
  },
  {
    "text": "this to another div with the hits ID the",
    "start": "124680",
    "end": "127469"
  },
  {
    "text": "component HTML template is just two",
    "start": "127469",
    "end": "129509"
  },
  {
    "text": "empty divs with the corresponding IDs",
    "start": "129509",
    "end": "131540"
  },
  {
    "text": "let's try it out we",
    "start": "131540",
    "end": "133680"
  },
  {
    "text": "a bunch of results in JSON format and",
    "start": "133680",
    "end": "135870"
  },
  {
    "text": "they're filtered automatically by the",
    "start": "135870",
    "end": "137609"
  },
  {
    "text": "Instant Search autocomplete it's working",
    "start": "137609",
    "end": "140040"
  },
  {
    "text": "as expected it just doesn't look very",
    "start": "140040",
    "end": "141540"
  },
  {
    "text": "good so we'll use the Instant Search",
    "start": "141540",
    "end": "143819"
  },
  {
    "text": "templating system to modify the",
    "start": "143819",
    "end": "145859"
  },
  {
    "text": "appearance of the results in the hits",
    "start": "145859",
    "end": "148260"
  },
  {
    "text": "widget we first set the escape hits",
    "start": "148260",
    "end": "150030"
  },
  {
    "text": "option to true then define two separate",
    "start": "150030",
    "end": "152969"
  },
  {
    "text": "templates for empty and item empty just",
    "start": "152969",
    "end": "156000"
  },
  {
    "text": "displays the string' and item displays",
    "start": "156000",
    "end": "158189"
  },
  {
    "text": "in actual HTML and you can pass it",
    "start": "158189",
    "end": "160319"
  },
  {
    "text": "attributes by using that double curly",
    "start": "160319",
    "end": "162329"
  },
  {
    "text": "bracket syntax if we go back to the app",
    "start": "162329",
    "end": "165030"
  },
  {
    "text": "we can see the results are now formatted",
    "start": "165030",
    "end": "166560"
  },
  {
    "text": "in a much more user-friendly way this",
    "start": "166560",
    "end": "169859"
  },
  {
    "text": "index also has an image path attribute",
    "start": "169859",
    "end": "172049"
  },
  {
    "text": "which has the actors image so we can use",
    "start": "172049",
    "end": "175319"
  },
  {
    "text": "that in the template as well to display",
    "start": "175319",
    "end": "177120"
  },
  {
    "text": "an image with our results you can",
    "start": "177120",
    "end": "178889"
  },
  {
    "text": "customize the results based on any",
    "start": "178889",
    "end": "180480"
  },
  {
    "text": "information you have saved in the Algol",
    "start": "180480",
    "end": "182219"
  },
  {
    "text": "Lea index this gives you the ability to",
    "start": "182219",
    "end": "184950"
  },
  {
    "text": "do complex ranking and filtering within",
    "start": "184950",
    "end": "187439"
  },
  {
    "text": "your search results now we'll go ahead",
    "start": "187439",
    "end": "189510"
  },
  {
    "text": "and add the stats widget that will just",
    "start": "189510",
    "end": "191219"
  },
  {
    "text": "give us a simple printout of the number",
    "start": "191219",
    "end": "193019"
  },
  {
    "text": "of results and how quickly the search",
    "start": "193019",
    "end": "194849"
  },
  {
    "text": "took to execute and let's go ahead and",
    "start": "194849",
    "end": "197940"
  },
  {
    "text": "add one more widget for pagination we",
    "start": "197940",
    "end": "200879"
  },
  {
    "text": "just follow the same pattern as before",
    "start": "200879",
    "end": "202049"
  },
  {
    "text": "and magically our app has pagination",
    "start": "202049",
    "end": "205579"
  },
  {
    "text": "pagination would be useful if you expect",
    "start": "205579",
    "end": "207659"
  },
  {
    "text": "your search to return hundreds of",
    "start": "207659",
    "end": "209280"
  },
  {
    "text": "results at a time the last thing I want",
    "start": "209280",
    "end": "211409"
  },
  {
    "text": "to show you is how to access the actual",
    "start": "211409",
    "end": "213299"
  },
  {
    "text": "array of hits from inside the component",
    "start": "213299",
    "end": "215400"
  },
  {
    "text": "type script instance search has another",
    "start": "215400",
    "end": "217470"
  },
  {
    "text": "widget called the Analytics widget which",
    "start": "217470",
    "end": "219959"
  },
  {
    "text": "doesn't actually do anything to the user",
    "start": "219959",
    "end": "221699"
  },
  {
    "text": "interface but it does have a function",
    "start": "221699",
    "end": "224220"
  },
  {
    "text": "that will return the query as well as",
    "start": "224220",
    "end": "226169"
  },
  {
    "text": "the result if we pull up the console and",
    "start": "226169",
    "end": "229199"
  },
  {
    "text": "developer tools we can see we're getting",
    "start": "229199",
    "end": "230849"
  },
  {
    "text": "the objects back which has the array of",
    "start": "230849",
    "end": "233549"
  },
  {
    "text": "hits as well as a bunch of other",
    "start": "233549",
    "end": "235139"
  },
  {
    "text": "information this can be useful for",
    "start": "235139",
    "end": "237000"
  },
  {
    "text": "debugging as well as sending analytic",
    "start": "237000",
    "end": "239250"
  },
  {
    "text": "events to third parties",
    "start": "239250",
    "end": "242530"
  },
  {
    "text": "that's it for the first episode on algo",
    "start": "242530",
    "end": "245239"
  },
  {
    "text": "search if the video helped you please",
    "start": "245239",
    "end": "246920"
  },
  {
    "text": "like and subscribe and if you want to",
    "start": "246920",
    "end": "249349"
  },
  {
    "text": "learn more consider becoming a pro",
    "start": "249349",
    "end": "251150"
  },
  {
    "text": "member for exclusive content as well as",
    "start": "251150",
    "end": "253520"
  },
  {
    "text": "one on one project consultant thanks for",
    "start": "253520",
    "end": "256130"
  },
  {
    "text": "watching and I'll see an episode to",
    "start": "256130",
    "end": "258070"
  },
  {
    "text": "[Music]",
    "start": "258070",
    "end": "265479"
  }
]