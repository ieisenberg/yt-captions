[
  {
    "text": "webassembly opens the door to building",
    "start": "160",
    "end": "2000"
  },
  {
    "text": "high performance applications on the web",
    "start": "2000",
    "end": "3840"
  },
  {
    "text": "in languages other than javascript",
    "start": "3840",
    "end": "5600"
  },
  {
    "text": "in today's video we'll build a simple",
    "start": "5600",
    "end": "7359"
  },
  {
    "text": "video editing tool that can take a video",
    "start": "7359",
    "end": "9519"
  },
  {
    "text": "file",
    "start": "9519",
    "end": "9920"
  },
  {
    "text": "and convert it to an animated gif the",
    "start": "9920",
    "end": "11920"
  },
  {
    "text": "cool thing about this demo is that it's",
    "start": "11920",
    "end": "13360"
  },
  {
    "text": "made possible by a library called ffmpeg",
    "start": "13360",
    "end": "16080"
  },
  {
    "text": "which is a utility written in the c",
    "start": "16080",
    "end": "17840"
  },
  {
    "text": "programming language but thanks to",
    "start": "17840",
    "end": "19279"
  },
  {
    "text": "webassembly we can run this tool",
    "start": "19279",
    "end": "20800"
  },
  {
    "text": "directly in the browser",
    "start": "20800",
    "end": "22080"
  },
  {
    "text": "and that means we can perform cpu",
    "start": "22080",
    "end": "23760"
  },
  {
    "text": "intensive video editing jobs without the",
    "start": "23760",
    "end": "25760"
  },
  {
    "text": "need for a backend server",
    "start": "25760",
    "end": "27279"
  },
  {
    "text": "for example here's how a traditional web",
    "start": "27279",
    "end": "29119"
  },
  {
    "text": "application might work we collect a",
    "start": "29119",
    "end": "30640"
  },
  {
    "text": "video file from the end user",
    "start": "30640",
    "end": "32160"
  },
  {
    "text": "then upload it to the cloud we use our",
    "start": "32160",
    "end": "34079"
  },
  {
    "text": "cloud server to run ffmpeg to encode the",
    "start": "34079",
    "end": "36559"
  },
  {
    "text": "file",
    "start": "36559",
    "end": "37120"
  },
  {
    "text": "and send it back down to the client that",
    "start": "37120",
    "end": "39280"
  },
  {
    "text": "works fine but it's not very efficient",
    "start": "39280",
    "end": "41440"
  },
  {
    "text": "and it also has no way to work offline",
    "start": "41440",
    "end": "43360"
  },
  {
    "text": "if you're building a progressive web app",
    "start": "43360",
    "end": "45120"
  },
  {
    "text": "what we'll do in this video is download",
    "start": "45120",
    "end": "47039"
  },
  {
    "text": "the webassembly binary for",
    "start": "47039",
    "end": "48559"
  },
  {
    "text": "ffmpeg directly into a react app",
    "start": "48559",
    "end": "51039"
  },
  {
    "text": "allowing us to combine the c programming",
    "start": "51039",
    "end": "52719"
  },
  {
    "text": "language with javascript",
    "start": "52719",
    "end": "54160"
  },
  {
    "text": "and offload the video editing work to",
    "start": "54160",
    "end": "56079"
  },
  {
    "text": "the end user's hardware",
    "start": "56079",
    "end": "57760"
  },
  {
    "text": "if you're new here like and subscribe",
    "start": "57760",
    "end": "59199"
  },
  {
    "text": "and follow along with the full write up",
    "start": "59199",
    "end": "60640"
  },
  {
    "text": "and source code on fireship io and if",
    "start": "60640",
    "end": "62640"
  },
  {
    "text": "you have no idea what webassembly is",
    "start": "62640",
    "end": "64320"
  },
  {
    "text": "check out my 100 second breakdown on",
    "start": "64320",
    "end": "66240"
  },
  {
    "text": "that topic this tutorial is very",
    "start": "66240",
    "end": "68159"
  },
  {
    "text": "beginner friendly",
    "start": "68159",
    "end": "68960"
  },
  {
    "text": "and doesn't require that you know",
    "start": "68960",
    "end": "70159"
  },
  {
    "text": "anything about the c programming",
    "start": "70159",
    "end": "71520"
  },
  {
    "text": "language",
    "start": "71520",
    "end": "72080"
  },
  {
    "text": "that's because the ffmpeg.wasm package",
    "start": "72080",
    "end": "74799"
  },
  {
    "text": "provides an api in javascript to",
    "start": "74799",
    "end": "76799"
  },
  {
    "text": "interact with this low-level utility",
    "start": "76799",
    "end": "78799"
  },
  {
    "text": "now before we jump into the code let's",
    "start": "78799",
    "end": "80320"
  },
  {
    "text": "take a closer look at the demo we have a",
    "start": "80320",
    "end": "82159"
  },
  {
    "text": "file input where we can select a video",
    "start": "82159",
    "end": "84320"
  },
  {
    "text": "file",
    "start": "84320",
    "end": "85119"
  },
  {
    "text": "the video can be previewed in a video",
    "start": "85119",
    "end": "86960"
  },
  {
    "text": "element then when you click the convert",
    "start": "86960",
    "end": "88799"
  },
  {
    "text": "button",
    "start": "88799",
    "end": "89280"
  },
  {
    "text": "it runs ffmpeg to load the video file",
    "start": "89280",
    "end": "91920"
  },
  {
    "text": "into memory",
    "start": "91920",
    "end": "92640"
  },
  {
    "text": "and run the conversion very simple stuff",
    "start": "92640",
    "end": "95040"
  },
  {
    "text": "but my main goal here is to give you a",
    "start": "95040",
    "end": "96720"
  },
  {
    "text": "starting point for building more complex",
    "start": "96720",
    "end": "98479"
  },
  {
    "text": "features through the magic of",
    "start": "98479",
    "end": "99520"
  },
  {
    "text": "webassembly",
    "start": "99520",
    "end": "100479"
  },
  {
    "text": "to get things started i'm generating a",
    "start": "100479",
    "end": "102240"
  },
  {
    "text": "new react app using snowpack",
    "start": "102240",
    "end": "104320"
  },
  {
    "text": "and keep in mind here the code is very",
    "start": "104320",
    "end": "106079"
  },
  {
    "text": "simple so feel free to follow along with",
    "start": "106079",
    "end": "108240"
  },
  {
    "text": "any other framework",
    "start": "108240",
    "end": "109280"
  },
  {
    "text": "then from inside your project you'll",
    "start": "109280",
    "end": "110799"
  },
  {
    "text": "want to install the following packages",
    "start": "110799",
    "end": "112479"
  },
  {
    "text": "from the ffmpeg namespace and lastly you",
    "start": "112479",
    "end": "115439"
  },
  {
    "text": "can run npm start which should give you",
    "start": "115439",
    "end": "117439"
  },
  {
    "text": "the default react app running in the",
    "start": "117439",
    "end": "119200"
  },
  {
    "text": "browser",
    "start": "119200",
    "end": "119920"
  },
  {
    "text": "from there we'll go into the source",
    "start": "119920",
    "end": "121280"
  },
  {
    "text": "directory and open the app.js file",
    "start": "121280",
    "end": "123920"
  },
  {
    "text": "i'm going to go ahead and delete all the",
    "start": "123920",
    "end": "125360"
  },
  {
    "text": "boilerplate code leaving us with a basic",
    "start": "125360",
    "end": "127360"
  },
  {
    "text": "starting point",
    "start": "127360",
    "end": "128000"
  },
  {
    "text": "from there i'm going to import two",
    "start": "128000",
    "end": "129599"
  },
  {
    "text": "functions from the ffmpeg namespace",
    "start": "129599",
    "end": "132319"
  },
  {
    "text": "the first function create ffmpeg we can",
    "start": "132319",
    "end": "134800"
  },
  {
    "text": "call right away",
    "start": "134800",
    "end": "135760"
  },
  {
    "text": "which gives us a starting point for",
    "start": "135760",
    "end": "137200"
  },
  {
    "text": "working with this library we'll set the",
    "start": "137200",
    "end": "138959"
  },
  {
    "text": "log option to true",
    "start": "138959",
    "end": "140080"
  },
  {
    "text": "so we can see everything that it does",
    "start": "140080",
    "end": "141599"
  },
  {
    "text": "directly in the console now it's",
    "start": "141599",
    "end": "143280"
  },
  {
    "text": "important to understand at this point",
    "start": "143280",
    "end": "144720"
  },
  {
    "text": "that the actual webassembly binary has",
    "start": "144720",
    "end": "146959"
  },
  {
    "text": "not been bundled in our application",
    "start": "146959",
    "end": "148879"
  },
  {
    "text": "it's a pretty large file so we don't",
    "start": "148879",
    "end": "150480"
  },
  {
    "text": "want it to block our web application",
    "start": "150480",
    "end": "152080"
  },
  {
    "text": "right away",
    "start": "152080",
    "end": "152720"
  },
  {
    "text": "instead we load it asynchronously over a",
    "start": "152720",
    "end": "154800"
  },
  {
    "text": "cdn to keep track of the loading state",
    "start": "154800",
    "end": "156879"
  },
  {
    "text": "i'll go ahead and add a stateful",
    "start": "156879",
    "end": "158480"
  },
  {
    "text": "property here called ready with the use",
    "start": "158480",
    "end": "160480"
  },
  {
    "text": "state hook",
    "start": "160480",
    "end": "161360"
  },
  {
    "text": "it has a default value of false and then",
    "start": "161360",
    "end": "163519"
  },
  {
    "text": "we'll create an async function here",
    "start": "163519",
    "end": "165200"
  },
  {
    "text": "called",
    "start": "165200",
    "end": "165519"
  },
  {
    "text": "load that can flip it to true after the",
    "start": "165519",
    "end": "167680"
  },
  {
    "text": "binary has been loaded",
    "start": "167680",
    "end": "168879"
  },
  {
    "text": "the function awaits the ffmpeg load",
    "start": "168879",
    "end": "171519"
  },
  {
    "text": "promise",
    "start": "171519",
    "end": "172319"
  },
  {
    "text": "and once loaded we can flip the ready",
    "start": "172319",
    "end": "174160"
  },
  {
    "text": "state to true and now we just need a",
    "start": "174160",
    "end": "176080"
  },
  {
    "text": "place to call this function",
    "start": "176080",
    "end": "177760"
  },
  {
    "text": "in react we can do that with the use",
    "start": "177760",
    "end": "179519"
  },
  {
    "text": "effect hook to run this function when",
    "start": "179519",
    "end": "181680"
  },
  {
    "text": "the component is first initialized use",
    "start": "181680",
    "end": "184080"
  },
  {
    "text": "effect takes a function as its argument",
    "start": "184080",
    "end": "186400"
  },
  {
    "text": "then notice how i'm adding an empty",
    "start": "186400",
    "end": "188080"
  },
  {
    "text": "array as the second argument",
    "start": "188080",
    "end": "189840"
  },
  {
    "text": "this will ensure that the function is",
    "start": "189840",
    "end": "191519"
  },
  {
    "text": "only called once when the component is",
    "start": "191519",
    "end": "193360"
  },
  {
    "text": "first initialized or mounted",
    "start": "193360",
    "end": "195519"
  },
  {
    "text": "then inside the effect we can simply",
    "start": "195519",
    "end": "197280"
  },
  {
    "text": "call our load function",
    "start": "197280",
    "end": "198640"
  },
  {
    "text": "if you go ahead and save the file and",
    "start": "198640",
    "end": "200080"
  },
  {
    "text": "open up the browser you should get a",
    "start": "200080",
    "end": "201840"
  },
  {
    "text": "blank page",
    "start": "201840",
    "end": "202640"
  },
  {
    "text": "but in the console you'll notice that",
    "start": "202640",
    "end": "204239"
  },
  {
    "text": "ffmpeg core is being loaded in the",
    "start": "204239",
    "end": "206239"
  },
  {
    "text": "background",
    "start": "206239",
    "end": "207120"
  },
  {
    "text": "in fact if we go over to the sources tab",
    "start": "207120",
    "end": "209360"
  },
  {
    "text": "you can inspect the actual webassembly",
    "start": "209360",
    "end": "211200"
  },
  {
    "text": "code there",
    "start": "211200",
    "end": "212000"
  },
  {
    "text": "you don't need to understand what any of",
    "start": "212000",
    "end": "213519"
  },
  {
    "text": "this code means but it is useful to know",
    "start": "213519",
    "end": "215760"
  },
  {
    "text": "that this originally started as the c",
    "start": "215760",
    "end": "217519"
  },
  {
    "text": "programming language",
    "start": "217519",
    "end": "218560"
  },
  {
    "text": "and then was compiled over to",
    "start": "218560",
    "end": "220000"
  },
  {
    "text": "webassembly what we're looking at here",
    "start": "220000",
    "end": "222000"
  },
  {
    "text": "is the webassembly text",
    "start": "222000",
    "end": "223360"
  },
  {
    "text": "which is an intermediate format before",
    "start": "223360",
    "end": "225120"
  },
  {
    "text": "it becomes binary or ones and zeros",
    "start": "225120",
    "end": "227599"
  },
  {
    "text": "now back in the source code we'll go",
    "start": "227599",
    "end": "228959"
  },
  {
    "text": "into our jsx and then we'll use the",
    "start": "228959",
    "end": "230959"
  },
  {
    "text": "ternary operator with our ready state",
    "start": "230959",
    "end": "232959"
  },
  {
    "text": "if the app's ready we'll show the main",
    "start": "232959",
    "end": "234480"
  },
  {
    "text": "ui otherwise we'll just show the text of",
    "start": "234480",
    "end": "236720"
  },
  {
    "text": "loading",
    "start": "236720",
    "end": "237360"
  },
  {
    "text": "now our next challenge is loading a",
    "start": "237360",
    "end": "239040"
  },
  {
    "text": "video file into the application",
    "start": "239040",
    "end": "240959"
  },
  {
    "text": "and also showing it in a video player in",
    "start": "240959",
    "end": "242879"
  },
  {
    "text": "the ui the first step",
    "start": "242879",
    "end": "244400"
  },
  {
    "text": "is to add additional state to the",
    "start": "244400",
    "end": "245760"
  },
  {
    "text": "component in this case a video file",
    "start": "245760",
    "end": "248080"
  },
  {
    "text": "which will initially start undefined in",
    "start": "248080",
    "end": "250319"
  },
  {
    "text": "the html",
    "start": "250319",
    "end": "251200"
  },
  {
    "text": "we can add an input element with a type",
    "start": "251200",
    "end": "253200"
  },
  {
    "text": "of file when this input changes",
    "start": "253200",
    "end": "255120"
  },
  {
    "text": "we'll run an event handler that will set",
    "start": "255120",
    "end": "257280"
  },
  {
    "text": "the video state",
    "start": "257280",
    "end": "258320"
  },
  {
    "text": "and it gets the actual file from the",
    "start": "258320",
    "end": "259919"
  },
  {
    "text": "event the event emits a file list",
    "start": "259919",
    "end": "262560"
  },
  {
    "text": "and then we use item 0 to select the",
    "start": "262560",
    "end": "264880"
  },
  {
    "text": "first file from that list",
    "start": "264880",
    "end": "266400"
  },
  {
    "text": "now that we have access to a video file",
    "start": "266400",
    "end": "268000"
  },
  {
    "text": "we want to display it in an html video",
    "start": "268000",
    "end": "270400"
  },
  {
    "text": "element",
    "start": "270400",
    "end": "270880"
  },
  {
    "text": "we'll use a logical and operator to only",
    "start": "270880",
    "end": "273040"
  },
  {
    "text": "show the video when the video file is",
    "start": "273040",
    "end": "274800"
  },
  {
    "text": "defined",
    "start": "274800",
    "end": "275840"
  },
  {
    "text": "the element has controls a width of 250",
    "start": "275840",
    "end": "278960"
  },
  {
    "text": "but a tricky thing here is that we can't",
    "start": "278960",
    "end": "280720"
  },
  {
    "text": "just pass the raw file to the source",
    "start": "280720",
    "end": "282560"
  },
  {
    "text": "attribute",
    "start": "282560",
    "end": "283199"
  },
  {
    "text": "we need to convert it to a url that the",
    "start": "283199",
    "end": "285120"
  },
  {
    "text": "browser can fetch",
    "start": "285120",
    "end": "286320"
  },
  {
    "text": "we can handle that by using the url",
    "start": "286320",
    "end": "288160"
  },
  {
    "text": "interface and then calling its create",
    "start": "288160",
    "end": "290160"
  },
  {
    "text": "object url method",
    "start": "290160",
    "end": "291600"
  },
  {
    "text": "which takes the file object as its",
    "start": "291600",
    "end": "293280"
  },
  {
    "text": "argument if we go ahead and open up the",
    "start": "293280",
    "end": "294960"
  },
  {
    "text": "demo we should now be able to choose a",
    "start": "294960",
    "end": "296800"
  },
  {
    "text": "file on our system",
    "start": "296800",
    "end": "298160"
  },
  {
    "text": "and then have that file displayed in the",
    "start": "298160",
    "end": "299919"
  },
  {
    "text": "video player and now we're ready for the",
    "start": "299919",
    "end": "301840"
  },
  {
    "text": "fun part",
    "start": "301840",
    "end": "302479"
  },
  {
    "text": "using ffmpeg and webassembly to modify",
    "start": "302479",
    "end": "305199"
  },
  {
    "text": "this video file",
    "start": "305199",
    "end": "306320"
  },
  {
    "text": "or in our case convert the file to an",
    "start": "306320",
    "end": "308080"
  },
  {
    "text": "animated gif the first thing we'll do",
    "start": "308080",
    "end": "309759"
  },
  {
    "text": "here",
    "start": "309759",
    "end": "310160"
  },
  {
    "text": "is add one more piece of state to the",
    "start": "310160",
    "end": "311680"
  },
  {
    "text": "component called gif and it will be used",
    "start": "311680",
    "end": "313759"
  },
  {
    "text": "to hold the end result which is a url of",
    "start": "313759",
    "end": "316080"
  },
  {
    "text": "an image file",
    "start": "316080",
    "end": "317039"
  },
  {
    "text": "from there we'll create a function",
    "start": "317039",
    "end": "318320"
  },
  {
    "text": "called convert to gif which the user can",
    "start": "318320",
    "end": "320320"
  },
  {
    "text": "run when they're ready to make the",
    "start": "320320",
    "end": "321759"
  },
  {
    "text": "conversion",
    "start": "321759",
    "end": "322479"
  },
  {
    "text": "now one thing to understand here is that",
    "start": "322479",
    "end": "324240"
  },
  {
    "text": "webassembly is managing its own",
    "start": "324240",
    "end": "326160"
  },
  {
    "text": "in-memory file system and in order to",
    "start": "326160",
    "end": "328320"
  },
  {
    "text": "run ffmpeg on that file we need to make",
    "start": "328320",
    "end": "330720"
  },
  {
    "text": "it known to that file system",
    "start": "330720",
    "end": "332400"
  },
  {
    "text": "we can do that by calling fs or file",
    "start": "332400",
    "end": "334800"
  },
  {
    "text": "system",
    "start": "334800",
    "end": "335520"
  },
  {
    "text": "along with the write file method along",
    "start": "335520",
    "end": "337440"
  },
  {
    "text": "with the name of the file",
    "start": "337440",
    "end": "338800"
  },
  {
    "text": "and then we fetch the actual video file",
    "start": "338800",
    "end": "340560"
  },
  {
    "text": "that we've collected from the end user",
    "start": "340560",
    "end": "342639"
  },
  {
    "text": "what we've done is taken the video file",
    "start": "342639",
    "end": "344560"
  },
  {
    "text": "and saved it to a place in memory",
    "start": "344560",
    "end": "346240"
  },
  {
    "text": "as test.mp4 it can be now accessed by",
    "start": "346240",
    "end": "349520"
  },
  {
    "text": "webassembly while it's in memory",
    "start": "349520",
    "end": "351280"
  },
  {
    "text": "and it only stays in memory until the",
    "start": "351280",
    "end": "353039"
  },
  {
    "text": "browser is refreshed",
    "start": "353039",
    "end": "354479"
  },
  {
    "text": "from there we can run an actual ffmpeg",
    "start": "354479",
    "end": "356560"
  },
  {
    "text": "command if you're not familiar with this",
    "start": "356560",
    "end": "358319"
  },
  {
    "text": "utility",
    "start": "358319",
    "end": "358880"
  },
  {
    "text": "it's a command line tool that can",
    "start": "358880",
    "end": "360319"
  },
  {
    "text": "perform all kinds of video editing jobs",
    "start": "360319",
    "end": "362800"
  },
  {
    "text": "it's been around for a very long time",
    "start": "362800",
    "end": "364560"
  },
  {
    "text": "and you can check out the full",
    "start": "364560",
    "end": "365520"
  },
  {
    "text": "documentation to get an idea of what it",
    "start": "365520",
    "end": "367360"
  },
  {
    "text": "can do",
    "start": "367360",
    "end": "368160"
  },
  {
    "text": "we can run the command by simply passing",
    "start": "368160",
    "end": "370080"
  },
  {
    "text": "arguments that we would normally pass to",
    "start": "370080",
    "end": "371759"
  },
  {
    "text": "the command line",
    "start": "371759",
    "end": "372800"
  },
  {
    "text": "the i flag is for the input file the t",
    "start": "372800",
    "end": "375600"
  },
  {
    "text": "flag",
    "start": "375600",
    "end": "376240"
  },
  {
    "text": "is for the time that we want the length",
    "start": "376240",
    "end": "378080"
  },
  {
    "text": "of the video to be we can offset",
    "start": "378080",
    "end": "380000"
  },
  {
    "text": "it with starting seconds then we use the",
    "start": "380000",
    "end": "382160"
  },
  {
    "text": "flag to encode it as a gif file",
    "start": "382160",
    "end": "384639"
  },
  {
    "text": "when that's complete it will write the",
    "start": "384639",
    "end": "386160"
  },
  {
    "text": "result to memory and then we can access",
    "start": "386160",
    "end": "388319"
  },
  {
    "text": "it",
    "start": "388319",
    "end": "388560"
  },
  {
    "text": "by again using the file system command",
    "start": "388560",
    "end": "390720"
  },
  {
    "text": "this time to read a file called",
    "start": "390720",
    "end": "392840"
  },
  {
    "text": "out.gif we then need to convert the file",
    "start": "392840",
    "end": "395199"
  },
  {
    "text": "data into a url that can be used in the",
    "start": "395199",
    "end": "397120"
  },
  {
    "text": "browser",
    "start": "397120",
    "end": "398000"
  },
  {
    "text": "once again we'll use url create object",
    "start": "398000",
    "end": "400560"
  },
  {
    "text": "url",
    "start": "400560",
    "end": "401440"
  },
  {
    "text": "and as its argument will create a new",
    "start": "401440",
    "end": "403520"
  },
  {
    "text": "blob blob is kind of a scary word",
    "start": "403520",
    "end": "405840"
  },
  {
    "text": "but it just means a raw file which in",
    "start": "405840",
    "end": "407759"
  },
  {
    "text": "this case is the binary that we can",
    "start": "407759",
    "end": "409520"
  },
  {
    "text": "access from the data buffer",
    "start": "409520",
    "end": "411280"
  },
  {
    "text": "it's also a good idea to pass a second",
    "start": "411280",
    "end": "413039"
  },
  {
    "text": "argument with the mime type of the",
    "start": "413039",
    "end": "414720"
  },
  {
    "text": "object which in this case is a gif",
    "start": "414720",
    "end": "416560"
  },
  {
    "text": "image and lastly we take that url and",
    "start": "416560",
    "end": "419360"
  },
  {
    "text": "update the state of the component",
    "start": "419360",
    "end": "421280"
  },
  {
    "text": "from there we just have a couple of",
    "start": "421280",
    "end": "422720"
  },
  {
    "text": "simple updates to make to the ui",
    "start": "422720",
    "end": "424720"
  },
  {
    "text": "we'll go down here and add a button that",
    "start": "424720",
    "end": "426960"
  },
  {
    "text": "when clicked we'll run the convert to",
    "start": "426960",
    "end": "428800"
  },
  {
    "text": "gif function",
    "start": "428800",
    "end": "429680"
  },
  {
    "text": "and then we'll add an image tag that's",
    "start": "429680",
    "end": "431360"
  },
  {
    "text": "only displayed when we have the gif url",
    "start": "431360",
    "end": "433840"
  },
  {
    "text": "you should now be able to open up your",
    "start": "433840",
    "end": "435360"
  },
  {
    "text": "demo select a video file",
    "start": "435360",
    "end": "437360"
  },
  {
    "text": "then when you click the convert button",
    "start": "437360",
    "end": "438800"
  },
  {
    "text": "it uses webassembly to convert that file",
    "start": "438800",
    "end": "441199"
  },
  {
    "text": "to an animated gif",
    "start": "441199",
    "end": "442639"
  },
  {
    "text": "and it should log the entire process",
    "start": "442639",
    "end": "444240"
  },
  {
    "text": "here in the console you could then take",
    "start": "444240",
    "end": "445919"
  },
  {
    "text": "this file and upload it to giphy",
    "start": "445919",
    "end": "447599"
  },
  {
    "text": "or use it on twitter or whatever you",
    "start": "447599",
    "end": "449280"
  },
  {
    "text": "want and that's how easy it is to start",
    "start": "449280",
    "end": "451120"
  },
  {
    "text": "incorporating webassembly into your web",
    "start": "451120",
    "end": "452880"
  },
  {
    "text": "applications",
    "start": "452880",
    "end": "453919"
  },
  {
    "text": "i'm going to go ahead and wrap things up",
    "start": "453919",
    "end": "455120"
  },
  {
    "text": "there but in the near future i plan on",
    "start": "455120",
    "end": "456960"
  },
  {
    "text": "making a video about how to take your",
    "start": "456960",
    "end": "458960"
  },
  {
    "text": "own custom rust code",
    "start": "458960",
    "end": "460400"
  },
  {
    "text": "and convert it to webassembly to be used",
    "start": "460400",
    "end": "462400"
  },
  {
    "text": "in the browser and if you have any ideas",
    "start": "462400",
    "end": "464319"
  },
  {
    "text": "please let me know in the comments",
    "start": "464319",
    "end": "465840"
  },
  {
    "text": "if you want to learn more and support my",
    "start": "465840",
    "end": "467520"
  },
  {
    "text": "work consider becoming a pro member at",
    "start": "467520",
    "end": "469440"
  },
  {
    "text": "fireship io",
    "start": "469440",
    "end": "470479"
  },
  {
    "text": "thanks for watching and i will see you",
    "start": "470479",
    "end": "472319"
  },
  {
    "text": "in the next one",
    "start": "472319",
    "end": "479840"
  },
  {
    "text": "you",
    "start": "480000",
    "end": "482080"
  }
]