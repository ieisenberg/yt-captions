[
  {
    "start": "0",
    "end": "54000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "6529"
  },
  {
    "text": "one of the most challenging aspects of",
    "start": "6529",
    "end": "8940"
  },
  {
    "text": "building an interactive app is",
    "start": "8940",
    "end": "10349"
  },
  {
    "text": "controlling the flow of data that's why",
    "start": "10349",
    "end": "12090"
  },
  {
    "text": "you might often hear developers debate",
    "start": "12090",
    "end": "13559"
  },
  {
    "text": "over best practices around state",
    "start": "13559",
    "end": "15210"
  },
  {
    "text": "management and while flutter and",
    "start": "15210",
    "end": "16680"
  },
  {
    "text": "firebase both provide some awesome tools",
    "start": "16680",
    "end": "18449"
  },
  {
    "text": "to work with reactive real-time data",
    "start": "18449",
    "end": "20310"
  },
  {
    "text": "it's still not easy in today's video I",
    "start": "20310",
    "end": "22949"
  },
  {
    "text": "want to show you some of my favorite",
    "start": "22949",
    "end": "24449"
  },
  {
    "text": "patterns for apps that have complex data",
    "start": "24449",
    "end": "26430"
  },
  {
    "text": "flow needs with things like firebase",
    "start": "26430",
    "end": "29630"
  },
  {
    "text": "authentic cited to show you how a",
    "start": "29630",
    "end": "31590"
  },
  {
    "text": "library called provider can dramatically",
    "start": "31590",
    "end": "33480"
  },
  {
    "text": "reduce the complexity of your code if",
    "start": "33480",
    "end": "35309"
  },
  {
    "text": "you're new here like and subscribe and",
    "start": "35309",
    "end": "37020"
  },
  {
    "text": "you can find the full source code on",
    "start": "37020",
    "end": "38579"
  },
  {
    "text": "fire ship i/o and I should also mention",
    "start": "38579",
    "end": "40290"
  },
  {
    "text": "that I just recently released my own",
    "start": "40290",
    "end": "42120"
  },
  {
    "text": "flutter app on iOS and Android it allows",
    "start": "42120",
    "end": "44399"
  },
  {
    "text": "you to take quizzes along with my",
    "start": "44399",
    "end": "45719"
  },
  {
    "text": "youtube videos as well as my full",
    "start": "45719",
    "end": "47460"
  },
  {
    "text": "flutter course which was just released a",
    "start": "47460",
    "end": "49170"
  },
  {
    "text": "couple days ago part of the course is",
    "start": "49170",
    "end": "50700"
  },
  {
    "text": "free but consider becoming a pro member",
    "start": "50700",
    "end": "52530"
  },
  {
    "text": "to get the full experience now when it",
    "start": "52530",
    "end": "54420"
  },
  {
    "start": "54000",
    "end": "98000"
  },
  {
    "text": "comes to state management with flutter",
    "start": "54420",
    "end": "55770"
  },
  {
    "text": "and firebase",
    "start": "55770",
    "end": "56579"
  },
  {
    "text": "I've tried a whole bunch of different",
    "start": "56579",
    "end": "57870"
  },
  {
    "text": "approaches and there are a lot of",
    "start": "57870",
    "end": "59430"
  },
  {
    "text": "different solutions that work so it",
    "start": "59430",
    "end": "60960"
  },
  {
    "text": "often just comes down to the developers",
    "start": "60960",
    "end": "62550"
  },
  {
    "text": "preference so let me give you an idea of",
    "start": "62550",
    "end": "64768"
  },
  {
    "text": "some of the things that I really value",
    "start": "64769",
    "end": "65970"
  },
  {
    "text": "on the subject first I want a good",
    "start": "65970",
    "end": "68220"
  },
  {
    "text": "separation of concerns from the business",
    "start": "68220",
    "end": "70049"
  },
  {
    "text": "logic and presentation logic in other",
    "start": "70049",
    "end": "72299"
  },
  {
    "text": "words I don't want to have a whole bunch",
    "start": "72299",
    "end": "73650"
  },
  {
    "text": "of logic related to the retrieval of",
    "start": "73650",
    "end": "75270"
  },
  {
    "text": "data embedded somewhere in the widget",
    "start": "75270",
    "end": "76860"
  },
  {
    "text": "tree the second thing I value is being",
    "start": "76860",
    "end": "79409"
  },
  {
    "text": "able to share data easily throughout the",
    "start": "79409",
    "end": "81420"
  },
  {
    "text": "widget tree I might need to access my",
    "start": "81420",
    "end": "83130"
  },
  {
    "text": "firebase user in 10 different screens",
    "start": "83130",
    "end": "84810"
  },
  {
    "text": "and I definitely don't want to be",
    "start": "84810",
    "end": "85950"
  },
  {
    "text": "listening to a stream manually in 10",
    "start": "85950",
    "end": "87869"
  },
  {
    "text": "different state full widgets and third I",
    "start": "87869",
    "end": "90060"
  },
  {
    "text": "like to try to avoid boilerplate code",
    "start": "90060",
    "end": "91950"
  },
  {
    "text": "there's a lot of really good and popular",
    "start": "91950",
    "end": "93869"
  },
  {
    "text": "state management solutions out there but",
    "start": "93869",
    "end": "95610"
  },
  {
    "text": "they tend to require a lot of",
    "start": "95610",
    "end": "96900"
  },
  {
    "text": "configuration and in most cases I just",
    "start": "96900",
    "end": "99270"
  },
  {
    "start": "98000",
    "end": "143000"
  },
  {
    "text": "prefer to have simple conventions over",
    "start": "99270",
    "end": "101009"
  },
  {
    "text": "explicit configuration now the provider",
    "start": "101009",
    "end": "103710"
  },
  {
    "text": "package for flutter does a really good",
    "start": "103710",
    "end": "105360"
  },
  {
    "text": "job of meeting my needs and all three of",
    "start": "105360",
    "end": "107040"
  },
  {
    "text": "these areas and all it really does is",
    "start": "107040",
    "end": "108810"
  },
  {
    "text": "provides syntactic sugar for inherited",
    "start": "108810",
    "end": "110850"
  },
  {
    "text": "widget as well as some other low-level",
    "start": "110850",
    "end": "112439"
  },
  {
    "text": "building blocks and flutter like stream",
    "start": "112439",
    "end": "114090"
  },
  {
    "text": "builder and change notifier it allows",
    "start": "114090",
    "end": "116280"
  },
  {
    "text": "you to expose a value or as we'll see in",
    "start": "116280",
    "end": "117960"
  },
  {
    "text": "this video a stream and then access the",
    "start": "117960",
    "end": "119880"
  },
  {
    "text": "value in any of the descendant widgets",
    "start": "119880",
    "end": "121799"
  },
  {
    "text": "as simple as that sounds it actually",
    "start": "121799",
    "end": "123780"
  },
  {
    "text": "leads to some very profound benefits",
    "start": "123780",
    "end": "125399"
  },
  {
    "text": "especially when you need to compose",
    "start": "125399",
    "end": "126869"
  },
  {
    "text": "multiple streams together for example",
    "start": "126869",
    "end": "128429"
  },
  {
    "text": "the firebase user with some related data",
    "start": "128429",
    "end": "130800"
  },
  {
    "text": "in the database we can demonstrate that",
    "start": "130800",
    "end": "132569"
  },
  {
    "text": "in the simple demo",
    "start": "132569",
    "end": "133660"
  },
  {
    "text": "where the user logs in and then they can",
    "start": "133660",
    "end": "135520"
  },
  {
    "text": "create a record in the database related",
    "start": "135520",
    "end": "137560"
  },
  {
    "text": "to their user ID and then they can add",
    "start": "137560",
    "end": "139570"
  },
  {
    "text": "additional documents in a sub collection",
    "start": "139570",
    "end": "141160"
  },
  {
    "text": "to that root document now before we get",
    "start": "141160",
    "end": "143800"
  },
  {
    "start": "143000",
    "end": "403000"
  },
  {
    "text": "into the actual source code I want to",
    "start": "143800",
    "end": "145420"
  },
  {
    "text": "first show you some of the challenges",
    "start": "145420",
    "end": "146560"
  },
  {
    "text": "that you might face when working with",
    "start": "146560",
    "end": "148060"
  },
  {
    "text": "firebase and flutter so firebase exposes",
    "start": "148060",
    "end": "151570"
  },
  {
    "text": "streams for both user authentication and",
    "start": "151570",
    "end": "153550"
  },
  {
    "text": "firestore and the most painful way to",
    "start": "153550",
    "end": "155410"
  },
  {
    "text": "manage those streams is manually in your",
    "start": "155410",
    "end": "157450"
  },
  {
    "text": "own stateful widget so first of all we",
    "start": "157450",
    "end": "159760"
  },
  {
    "text": "have quite a bit of boilerplate here",
    "start": "159760",
    "end": "161080"
  },
  {
    "text": "just to get the staple widget set up and",
    "start": "161080",
    "end": "162760"
  },
  {
    "text": "then we need to set a property for the",
    "start": "162760",
    "end": "165100"
  },
  {
    "text": "stream subscription and then also the",
    "start": "165100",
    "end": "166990"
  },
  {
    "text": "data that we eventually want to show in",
    "start": "166990",
    "end": "168700"
  },
  {
    "text": "the UI when the widget is first",
    "start": "168700",
    "end": "170410"
  },
  {
    "text": "initialized we'll go ahead and subscribe",
    "start": "170410",
    "end": "171730"
  },
  {
    "text": "to our stream and then we'll call set",
    "start": "171730",
    "end": "173680"
  },
  {
    "text": "state to update the data whenever emits",
    "start": "173680",
    "end": "175840"
  },
  {
    "text": "a new value this is a stream to read",
    "start": "175840",
    "end": "177880"
  },
  {
    "text": "data from buyer store and so it could",
    "start": "177880",
    "end": "179560"
  },
  {
    "text": "cost money and it could also be sending",
    "start": "179560",
    "end": "181360"
  },
  {
    "text": "a lot of data downstream so we need to",
    "start": "181360",
    "end": "183160"
  },
  {
    "text": "make sure to dispose of it when this",
    "start": "183160",
    "end": "184720"
  },
  {
    "text": "widget is no longer needed that means we",
    "start": "184720",
    "end": "186580"
  },
  {
    "text": "need to call a subscription cancel in",
    "start": "186580",
    "end": "188230"
  },
  {
    "text": "our dispose lifecycle hood now finally",
    "start": "188230",
    "end": "190300"
  },
  {
    "text": "we can go down here to our build method",
    "start": "190300",
    "end": "191710"
  },
  {
    "text": "and display the data and notice how",
    "start": "191710",
    "end": "193660"
  },
  {
    "text": "we're using bracket notation to call the",
    "start": "193660",
    "end": "195520"
  },
  {
    "text": "title key on a map so this data is",
    "start": "195520",
    "end": "197380"
  },
  {
    "text": "dynamic but the text widget requires a",
    "start": "197380",
    "end": "199330"
  },
  {
    "text": "string as its argument so if the",
    "start": "199330",
    "end": "200950"
  },
  {
    "text": "database returns null then our text",
    "start": "200950",
    "end": "202570"
  },
  {
    "text": "widget is going to fail so we have no",
    "start": "202570",
    "end": "204670"
  },
  {
    "text": "type safety here and dart is not very",
    "start": "204670",
    "end": "206650"
  },
  {
    "text": "forgiving when it comes to types because",
    "start": "206650",
    "end": "208120"
  },
  {
    "text": "it does runtime type checking now we can",
    "start": "208120",
    "end": "210310"
  },
  {
    "text": "already make a huge improvement to this",
    "start": "210310",
    "end": "211600"
  },
  {
    "text": "code by refactoring everything into a",
    "start": "211600",
    "end": "213640"
  },
  {
    "text": "stream builder so this time you can see",
    "start": "213640",
    "end": "215740"
  },
  {
    "text": "here I have a stateless widget and now",
    "start": "215740",
    "end": "217750"
  },
  {
    "text": "I'm going to wrap our code in this",
    "start": "217750",
    "end": "219160"
  },
  {
    "text": "stream builder and just a side note you",
    "start": "219160",
    "end": "221350"
  },
  {
    "text": "can always do that with the refactor",
    "start": "221350",
    "end": "222820"
  },
  {
    "text": "tool in vs code which is a huge",
    "start": "222820",
    "end": "224709"
  },
  {
    "text": "time-saver now the stream builder widget",
    "start": "224709",
    "end": "227650"
  },
  {
    "text": "takes a stream as its argument and it",
    "start": "227650",
    "end": "229510"
  },
  {
    "text": "will automatically subscribe to the",
    "start": "229510",
    "end": "230830"
  },
  {
    "text": "stream then give us access to the data",
    "start": "230830",
    "end": "232600"
  },
  {
    "text": "inside this builder function in addition",
    "start": "232600",
    "end": "234610"
  },
  {
    "text": "it will cancel the subscription",
    "start": "234610",
    "end": "235720"
  },
  {
    "text": "automatically when this widget is",
    "start": "235720",
    "end": "237520"
  },
  {
    "text": "removed from the tree now we still don't",
    "start": "237520",
    "end": "239500"
  },
  {
    "text": "have any type safety on the data payload",
    "start": "239500",
    "end": "241150"
  },
  {
    "text": "so oftentimes what you'll do is use",
    "start": "241150",
    "end": "243100"
  },
  {
    "text": "double question marks here to make sure",
    "start": "243100",
    "end": "244420"
  },
  {
    "text": "that it always returns a default value",
    "start": "244420",
    "end": "246070"
  },
  {
    "text": "with the proper type the stream builder",
    "start": "246070",
    "end": "248440"
  },
  {
    "text": "is awesome but what if we also need",
    "start": "248440",
    "end": "250000"
  },
  {
    "text": "access to the user inside of the build",
    "start": "250000",
    "end": "252100"
  },
  {
    "text": "method that's also a stream so what will",
    "start": "252100",
    "end": "254560"
  },
  {
    "text": "most likely do is wrap this in another",
    "start": "254560",
    "end": "256359"
  },
  {
    "text": "stream builder although we could map",
    "start": "256359",
    "end": "257890"
  },
  {
    "text": "everything together into a single stream",
    "start": "257890",
    "end": "259450"
  },
  {
    "text": "but that's also not exactly easy as your",
    "start": "259450",
    "end": "261910"
  },
  {
    "text": "app becomes more complex you might need",
    "start": "261910",
    "end": "263500"
  },
  {
    "text": "the data from multiple streams at the",
    "start": "263500",
    "end": "265240"
  },
  {
    "text": "same time and you might have one stream",
    "start": "265240",
    "end": "267040"
  },
  {
    "text": "that depends on another stream it's very",
    "start": "267040",
    "end": "269260"
  },
  {
    "text": "common for a fire store document reads",
    "start": "269260",
    "end": "270970"
  },
  {
    "text": "who depend on the currently logged in",
    "start": "270970",
    "end": "272860"
  },
  {
    "text": "user stream and then you might need that",
    "start": "272860",
    "end": "275110"
  },
  {
    "text": "data in a deeply nested widget and the",
    "start": "275110",
    "end": "277150"
  },
  {
    "text": "only way to get that data down is to",
    "start": "277150",
    "end": "278920"
  },
  {
    "text": "pass the properties down through all the",
    "start": "278920",
    "end": "280540"
  },
  {
    "text": "children so now that we have a good",
    "start": "280540",
    "end": "282790"
  },
  {
    "text": "understanding of the problem let's take",
    "start": "282790",
    "end": "284500"
  },
  {
    "text": "a look at how provider solves it if you",
    "start": "284500",
    "end": "286930"
  },
  {
    "text": "remember I mentioned earlier that",
    "start": "286930",
    "end": "287920"
  },
  {
    "text": "provider is syntactic sugar for",
    "start": "287920",
    "end": "289750"
  },
  {
    "text": "inherited widget so that means we can",
    "start": "289750",
    "end": "291610"
  },
  {
    "text": "use it the same way we might use a theme",
    "start": "291610",
    "end": "293230"
  },
  {
    "text": "in flutter where we set up our data at",
    "start": "293230",
    "end": "295510"
  },
  {
    "text": "one point and then we use it in a child",
    "start": "295510",
    "end": "297430"
  },
  {
    "text": "and that child will look up the widget",
    "start": "297430",
    "end": "299110"
  },
  {
    "text": "tree until it finds the first instance",
    "start": "299110",
    "end": "301000"
  },
  {
    "text": "of that type and use that as the data",
    "start": "301000",
    "end": "302860"
  },
  {
    "text": "source now we're only going to be",
    "start": "302860",
    "end": "304630"
  },
  {
    "text": "focused on streams in this video because",
    "start": "304630",
    "end": "306370"
  },
  {
    "text": "that's the way firebase returns",
    "start": "306370",
    "end": "307540"
  },
  {
    "text": "real-time data but keep in mind provider",
    "start": "307540",
    "end": "309550"
  },
  {
    "text": "can also handle just regular values in",
    "start": "309550",
    "end": "311560"
  },
  {
    "text": "your app as you can see here I'm in the",
    "start": "311560",
    "end": "313210"
  },
  {
    "text": "root of the application and I'm going to",
    "start": "313210",
    "end": "314770"
  },
  {
    "text": "wrap my material app in a multi provider",
    "start": "314770",
    "end": "317140"
  },
  {
    "text": "multi provider is really convenient",
    "start": "317140",
    "end": "318940"
  },
  {
    "text": "because it allows you to setup multiple",
    "start": "318940",
    "end": "320770"
  },
  {
    "text": "streams or multiple values and then",
    "start": "320770",
    "end": "322900"
  },
  {
    "text": "share them without having to nest",
    "start": "322900",
    "end": "324130"
  },
  {
    "text": "widgets you just add all the values you",
    "start": "324130",
    "end": "325840"
  },
  {
    "text": "want to share into a list one thing you",
    "start": "325840",
    "end": "328060"
  },
  {
    "text": "might want to do if you use firebase",
    "start": "328060",
    "end": "329080"
  },
  {
    "text": "authentication is observe the current",
    "start": "329080",
    "end": "331000"
  },
  {
    "text": "user throughout the entire application",
    "start": "331000",
    "end": "332250"
  },
  {
    "text": "we can do that by setting up a stream",
    "start": "332250",
    "end": "334600"
  },
  {
    "text": "provider here and you'll notice that",
    "start": "334600",
    "end": "336070"
  },
  {
    "text": "it's types to the firebase user type",
    "start": "336070",
    "end": "337930"
  },
  {
    "text": "which comes from firebase and then we",
    "start": "337930",
    "end": "339820"
  },
  {
    "text": "pass it the stream that actually",
    "start": "339820",
    "end": "341200"
  },
  {
    "text": "contains that data now the real magic of",
    "start": "341200",
    "end": "343870"
  },
  {
    "text": "this approach is that we can now treat",
    "start": "343870",
    "end": "345310"
  },
  {
    "text": "the firebase user as if it were a",
    "start": "345310",
    "end": "346900"
  },
  {
    "text": "synchronous value throughout the entire",
    "start": "346900",
    "end": "348490"
  },
  {
    "text": "app if we go down here to the stateless",
    "start": "348490",
    "end": "350860"
  },
  {
    "text": "widget we can just access the user",
    "start": "350860",
    "end": "352720"
  },
  {
    "text": "directly inside the build method by",
    "start": "352720",
    "end": "354850"
  },
  {
    "text": "calling provider of context with the",
    "start": "354850",
    "end": "356800"
  },
  {
    "text": "firebase user type so now anytime we",
    "start": "356800",
    "end": "359620"
  },
  {
    "text": "want to access the user we can do it",
    "start": "359620",
    "end": "361390"
  },
  {
    "text": "with a single line of code without",
    "start": "361390",
    "end": "362590"
  },
  {
    "text": "needing to set up a stream builder so we",
    "start": "362590",
    "end": "365500"
  },
  {
    "text": "can determine if the user is logged in",
    "start": "365500",
    "end": "366670"
  },
  {
    "text": "or not by seeing if the user object is",
    "start": "366670",
    "end": "368500"
  },
  {
    "text": "null and then I want to take a second",
    "start": "368500",
    "end": "370330"
  },
  {
    "text": "here to show you a cool trick in dart",
    "start": "370330",
    "end": "372070"
  },
  {
    "text": "2.3 you'll notice we're using",
    "start": "372070",
    "end": "373840"
  },
  {
    "text": "conditional logic directly in the",
    "start": "373840",
    "end": "375610"
  },
  {
    "text": "children list for the column and then we",
    "start": "375610",
    "end": "377950"
  },
  {
    "text": "can also combine this with the new",
    "start": "377950",
    "end": "379240"
  },
  {
    "text": "spread syntax to create a partial list",
    "start": "379240",
    "end": "381640"
  },
  {
    "text": "that will only be visible to the logged",
    "start": "381640",
    "end": "383230"
  },
  {
    "text": "in user",
    "start": "383230",
    "end": "383740"
  },
  {
    "text": "so basically we're saying if the users",
    "start": "383740",
    "end": "385540"
  },
  {
    "text": "logged in show this list of widgets but",
    "start": "385540",
    "end": "387760"
  },
  {
    "text": "if the user is not logged in show this",
    "start": "387760",
    "end": "389500"
  },
  {
    "text": "list of widgets so it's bold concise and",
    "start": "389500",
    "end": "391900"
  },
  {
    "text": "readable and that already gives us a",
    "start": "391900",
    "end": "393400"
  },
  {
    "text": "fully functioning authentication system",
    "start": "393400",
    "end": "395140"
  },
  {
    "text": "the user logs in and the app",
    "start": "395140",
    "end": "396760"
  },
  {
    "text": "automatically reacts because that widget",
    "start": "396760",
    "end": "398830"
  },
  {
    "text": "that depends on the user from the",
    "start": "398830",
    "end": "400300"
  },
  {
    "text": "provide",
    "start": "400300",
    "end": "400810"
  },
  {
    "text": "we'll rerender when it emits a new value",
    "start": "400810",
    "end": "402910"
  },
  {
    "text": "so it makes the user authentication just",
    "start": "402910",
    "end": "405130"
  },
  {
    "start": "403000",
    "end": "667000"
  },
  {
    "text": "work like magic but it's a little more",
    "start": "405130",
    "end": "406990"
  },
  {
    "text": "tricky when we start talking about fire",
    "start": "406990",
    "end": "408370"
  },
  {
    "text": "store because fire store always returns",
    "start": "408370",
    "end": "410200"
  },
  {
    "text": "data as a map and unlike typescript we",
    "start": "410200",
    "end": "413440"
  },
  {
    "text": "can't just apply an interface to a map",
    "start": "413440",
    "end": "415240"
  },
  {
    "text": "and dart so that means we need a way to",
    "start": "415240",
    "end": "417340"
  },
  {
    "text": "deserialize our data from a map into an",
    "start": "417340",
    "end": "420100"
  },
  {
    "text": "actual dart class so what we'll do here",
    "start": "420100",
    "end": "422080"
  },
  {
    "text": "is just define a couple of classes that",
    "start": "422080",
    "end": "424360"
  },
  {
    "text": "define the shape of the data this is",
    "start": "424360",
    "end": "427090"
  },
  {
    "text": "going to benefit us in several ways it's",
    "start": "427090",
    "end": "429040"
  },
  {
    "text": "going to give us intellisense when we're",
    "start": "429040",
    "end": "430570"
  },
  {
    "text": "actually working with these data models",
    "start": "430570",
    "end": "432100"
  },
  {
    "text": "in our code and it's also going to",
    "start": "432100",
    "end": "433900"
  },
  {
    "text": "ensure that we have appropriate defaults",
    "start": "433900",
    "end": "435880"
  },
  {
    "text": "with the proper data type like I",
    "start": "435880",
    "end": "438160"
  },
  {
    "text": "mentioned before if you pass a text",
    "start": "438160",
    "end": "439750"
  },
  {
    "text": "widget anything other than a string it's",
    "start": "439750",
    "end": "441490"
  },
  {
    "text": "going to fail but writing a data model",
    "start": "441490",
    "end": "443890"
  },
  {
    "text": "like this will help you alleviate that",
    "start": "443890",
    "end": "445360"
  },
  {
    "text": "problem and give you a single source of",
    "start": "445360",
    "end": "447460"
  },
  {
    "text": "truth to manage it right now we just",
    "start": "447460",
    "end": "449380"
  },
  {
    "text": "have two immutable classes that do",
    "start": "449380",
    "end": "451000"
  },
  {
    "text": "nothing more than instantiate some",
    "start": "451000",
    "end": "452560"
  },
  {
    "text": "properties but what I want to show you",
    "start": "452560",
    "end": "454479"
  },
  {
    "text": "now is how to deserialize this data from",
    "start": "454479",
    "end": "456580"
  },
  {
    "text": "either a map or a fire stored document",
    "start": "456580",
    "end": "458740"
  },
  {
    "text": "when you use a map it's a little more",
    "start": "458740",
    "end": "460630"
  },
  {
    "text": "flexible because you can also use it to",
    "start": "460630",
    "end": "462220"
  },
  {
    "text": "deserialize regular json data or some",
    "start": "462220",
    "end": "464830"
  },
  {
    "text": "other data source like maybe from dart",
    "start": "464830",
    "end": "466479"
  },
  {
    "text": "HTTP this from map constructor will take",
    "start": "466479",
    "end": "470169"
  },
  {
    "text": "the map that we get from fires store as",
    "start": "470169",
    "end": "471880"
  },
  {
    "text": "its argument then it will simply take",
    "start": "471880",
    "end": "473560"
  },
  {
    "text": "the values on that map and set them as",
    "start": "473560",
    "end": "475450"
  },
  {
    "text": "properties on this class and we can also",
    "start": "475450",
    "end": "477940"
  },
  {
    "text": "use double question marks here to set",
    "start": "477940",
    "end": "479710"
  },
  {
    "text": "some default values now this process is",
    "start": "479710",
    "end": "482229"
  },
  {
    "text": "kind of tedious but it does give your",
    "start": "482229",
    "end": "483700"
  },
  {
    "text": "data a strong schema and it makes",
    "start": "483700",
    "end": "485440"
  },
  {
    "text": "working with data in your widgets a lot",
    "start": "485440",
    "end": "487330"
  },
  {
    "text": "more user friendly mostly because you",
    "start": "487330",
    "end": "489130"
  },
  {
    "text": "have intellisense on everything and you",
    "start": "489130",
    "end": "490720"
  },
  {
    "text": "have some confidence that you're going",
    "start": "490720",
    "end": "492039"
  },
  {
    "text": "to be passing the right data types to",
    "start": "492039",
    "end": "493539"
  },
  {
    "text": "your widgets at runtime if you want to",
    "start": "493539",
    "end": "495760"
  },
  {
    "text": "make your constructor a little more",
    "start": "495760",
    "end": "497020"
  },
  {
    "text": "specialized you might name it from fire",
    "start": "497020",
    "end": "498760"
  },
  {
    "text": "store and instead pass it the document",
    "start": "498760",
    "end": "500830"
  },
  {
    "text": "snapshot this way you have access to the",
    "start": "500830",
    "end": "503140"
  },
  {
    "text": "document ID which can be useful when",
    "start": "503140",
    "end": "505510"
  },
  {
    "text": "working with collections because you",
    "start": "505510",
    "end": "507039"
  },
  {
    "text": "don't automatically have the ID in the",
    "start": "507039",
    "end": "508600"
  },
  {
    "text": "return data but the drawback here is",
    "start": "508600",
    "end": "510669"
  },
  {
    "text": "that your constructor is now more",
    "start": "510669",
    "end": "511900"
  },
  {
    "text": "specialized so wouldn't work with other",
    "start": "511900",
    "end": "513640"
  },
  {
    "text": "things like just plain JSON and just to",
    "start": "513640",
    "end": "516010"
  },
  {
    "text": "make this clear your data model should",
    "start": "516010",
    "end": "517630"
  },
  {
    "text": "match what you have in fires store so",
    "start": "517630",
    "end": "519640"
  },
  {
    "text": "here we have a hit points value which is",
    "start": "519640",
    "end": "521530"
  },
  {
    "text": "a number and then a couple of strings so",
    "start": "521530",
    "end": "524290"
  },
  {
    "text": "the data model is only responsible for",
    "start": "524290",
    "end": "526000"
  },
  {
    "text": "creating an instance with the proper",
    "start": "526000",
    "end": "527770"
  },
  {
    "text": "data shape what we'll do now is define a",
    "start": "527770",
    "end": "530290"
  },
  {
    "text": "database service which is responsible",
    "start": "530290",
    "end": "531880"
  },
  {
    "text": "for the actual business logic of",
    "start": "531880",
    "end": "533800"
  },
  {
    "text": "retrieving",
    "start": "533800",
    "end": "534340"
  },
  {
    "text": "these items from the database and",
    "start": "534340",
    "end": "535620"
  },
  {
    "text": "deserializing them to the appropriate",
    "start": "535620",
    "end": "537760"
  },
  {
    "text": "class this is just a plain dark class",
    "start": "537760",
    "end": "540310"
  },
  {
    "text": "and I would recommend keeping this class",
    "start": "540310",
    "end": "541780"
  },
  {
    "text": "stateless and have it focused on",
    "start": "541780",
    "end": "543370"
  },
  {
    "text": "exposing methods that return data to you",
    "start": "543370",
    "end": "545560"
  },
  {
    "text": "for example if we want to get one of the",
    "start": "545560",
    "end": "548050"
  },
  {
    "text": "hero documents typed to the superhero",
    "start": "548050",
    "end": "550210"
  },
  {
    "text": "class we can make a reference to the",
    "start": "550210",
    "end": "552400"
  },
  {
    "text": "heroes collection with the document ID",
    "start": "552400",
    "end": "554020"
  },
  {
    "text": "and then we can return a superhero",
    "start": "554020",
    "end": "556600"
  },
  {
    "text": "instance with the front map constructor",
    "start": "556600",
    "end": "558610"
  },
  {
    "text": "with the snapshot data now when we",
    "start": "558610",
    "end": "560920"
  },
  {
    "text": "perform this read from the database",
    "start": "560920",
    "end": "562030"
  },
  {
    "text": "instead of getting a dynamic map we'll",
    "start": "562030",
    "end": "564250"
  },
  {
    "text": "get an actual class instance of",
    "start": "564250",
    "end": "565750"
  },
  {
    "text": "superhero but we actually want to listen",
    "start": "565750",
    "end": "568030"
  },
  {
    "text": "to this document as a real-time stream",
    "start": "568030",
    "end": "569890"
  },
  {
    "text": "so we'll use the map operator on a",
    "start": "569890",
    "end": "571990"
  },
  {
    "text": "stream to map that to an instance of the",
    "start": "571990",
    "end": "574270"
  },
  {
    "text": "superhero now we can also do this with a",
    "start": "574270",
    "end": "577060"
  },
  {
    "text": "list for example we want to make a query",
    "start": "577060",
    "end": "579250"
  },
  {
    "text": "to firestore for a list of weapon",
    "start": "579250",
    "end": "581230"
  },
  {
    "text": "documents this code is a little more",
    "start": "581230",
    "end": "583240"
  },
  {
    "text": "challenging because we're being returned",
    "start": "583240",
    "end": "584920"
  },
  {
    "text": "with a list of snapshots then we need to",
    "start": "584920",
    "end": "587110"
  },
  {
    "text": "take that list and then map each item in",
    "start": "587110",
    "end": "589240"
  },
  {
    "text": "the list down to the instance that we",
    "start": "589240",
    "end": "591070"
  },
  {
    "text": "want which is a weapon now I'd recommend",
    "start": "591070",
    "end": "593560"
  },
  {
    "text": "doing other things in your database",
    "start": "593560",
    "end": "594640"
  },
  {
    "text": "service as well like performing writes",
    "start": "594640",
    "end": "596290"
  },
  {
    "text": "to the database but the general idea",
    "start": "596290",
    "end": "598180"
  },
  {
    "text": "here is that you're taking all of the",
    "start": "598180",
    "end": "599650"
  },
  {
    "text": "business logic of working with a",
    "start": "599650",
    "end": "601060"
  },
  {
    "text": "database outside of your widget tree now",
    "start": "601060",
    "end": "604510"
  },
  {
    "text": "that we have all this setup done we can",
    "start": "604510",
    "end": "605860"
  },
  {
    "text": "see the true power of provider in our",
    "start": "605860",
    "end": "607390"
  },
  {
    "text": "code now we already have access to the",
    "start": "607390",
    "end": "609520"
  },
  {
    "text": "current user in our widget so we can",
    "start": "609520",
    "end": "611320"
  },
  {
    "text": "easily use it to create related streams",
    "start": "611320",
    "end": "613030"
  },
  {
    "text": "by simply passing that value as an",
    "start": "613030",
    "end": "615040"
  },
  {
    "text": "argument to our database service for",
    "start": "615040",
    "end": "617590"
  },
  {
    "text": "this part of the UI I'm just using",
    "start": "617590",
    "end": "618760"
  },
  {
    "text": "stream builder so that's still super",
    "start": "618760",
    "end": "620500"
  },
  {
    "text": "convenient and in this case that will",
    "start": "620500",
    "end": "622030"
  },
  {
    "text": "give us access to the hero document",
    "start": "622030",
    "end": "623740"
  },
  {
    "text": "that's related to that user ID but with",
    "start": "623740",
    "end": "626350"
  },
  {
    "text": "the provider package we can also use a",
    "start": "626350",
    "end": "628180"
  },
  {
    "text": "stream provider elsewhere in the widget",
    "start": "628180",
    "end": "629680"
  },
  {
    "text": "tree this is especially useful if you",
    "start": "629680",
    "end": "632050"
  },
  {
    "text": "have your widgets broken down into a lot",
    "start": "632050",
    "end": "633760"
  },
  {
    "text": "of small pieces of UI because it means",
    "start": "633760",
    "end": "635650"
  },
  {
    "text": "you can use your data in all of those",
    "start": "635650",
    "end": "637180"
  },
  {
    "text": "widgets without having to pass in the",
    "start": "637180",
    "end": "638950"
  },
  {
    "text": "properties manually and you also don't",
    "start": "638950",
    "end": "641140"
  },
  {
    "text": "have to create any additional stream",
    "start": "641140",
    "end": "642580"
  },
  {
    "text": "builders or subscriptions to the stream",
    "start": "642580",
    "end": "644380"
  },
  {
    "text": "all the data is just there and ready for",
    "start": "644380",
    "end": "646120"
  },
  {
    "text": "you to use I'm gonna go ahead and wrap",
    "start": "646120",
    "end": "647950"
  },
  {
    "text": "things up there if this video helped you",
    "start": "647950",
    "end": "649660"
  },
  {
    "text": "please like and subscribe and if you",
    "start": "649660",
    "end": "651340"
  },
  {
    "text": "want to go into even more advanced",
    "start": "651340",
    "end": "652540"
  },
  {
    "text": "concepts than this consider enrolling in",
    "start": "652540",
    "end": "654490"
  },
  {
    "text": "the full course on fighter ship il",
    "start": "654490",
    "end": "656170"
  },
  {
    "text": "thanks for watching and I will talk to",
    "start": "656170",
    "end": "658540"
  },
  {
    "text": "you soon",
    "start": "658540",
    "end": "660170"
  },
  {
    "text": "[Music]",
    "start": "660170",
    "end": "664410"
  },
  {
    "text": "[Music]",
    "start": "666520",
    "end": "669659"
  }
]