[
  {
    "text": "what you're looking at is the actual",
    "start": "60",
    "end": "2100"
  },
  {
    "text": "side projects directory on my computer",
    "start": "2100",
    "end": "4080"
  },
  {
    "text": "none of these side projects have gone on",
    "start": "4080",
    "end": "6060"
  },
  {
    "text": "to become the next Facebook yet but I",
    "start": "6060",
    "end": "7859"
  },
  {
    "text": "have not failed I've just found hundreds",
    "start": "7859",
    "end": "9480"
  },
  {
    "text": "of apps that don't work if you're a",
    "start": "9480",
    "end": "11219"
  },
  {
    "text": "developer entrepreneur it's extremely",
    "start": "11219",
    "end": "13500"
  },
  {
    "text": "important not to over engineer things",
    "start": "13500",
    "end": "15420"
  },
  {
    "text": "Andy jassy once said invention requires",
    "start": "15420",
    "end": "18060"
  },
  {
    "text": "two things one the ability to try lots",
    "start": "18060",
    "end": "20580"
  },
  {
    "text": "of experiments and two not having to",
    "start": "20580",
    "end": "22740"
  },
  {
    "text": "live with the collateral damage of",
    "start": "22740",
    "end": "24240"
  },
  {
    "text": "failed experiments in today's video",
    "start": "24240",
    "end": "25980"
  },
  {
    "text": "we'll build a full stack chat app using",
    "start": "25980",
    "end": "28260"
  },
  {
    "text": "pocket base and svelte then deploy it to",
    "start": "28260",
    "end": "30359"
  },
  {
    "text": "a Linux server on the Node for just five",
    "start": "30359",
    "end": "32398"
  },
  {
    "text": "dollars I call this the Spock stack and",
    "start": "32399",
    "end": "34620"
  },
  {
    "text": "prepare to be amazed at how quickly it",
    "start": "34620",
    "end": "36180"
  },
  {
    "text": "can get things done stupidly I made this",
    "start": "36180",
    "end": "38280"
  },
  {
    "text": "demo public so you can actually try it",
    "start": "38280",
    "end": "40260"
  },
  {
    "text": "out on the internet right now this is",
    "start": "40260",
    "end": "42000"
  },
  {
    "text": "not my first rodeo and I know you guys",
    "start": "42000",
    "end": "43680"
  },
  {
    "text": "will spam it with the most horrific",
    "start": "43680",
    "end": "45000"
  },
  {
    "text": "comments imaginable but this time",
    "start": "45000",
    "end": "46800"
  },
  {
    "text": "messages can be moderated with Community",
    "start": "46800",
    "end": "48660"
  },
  {
    "text": "reactions if a comment gets pooped on",
    "start": "48660",
    "end": "50940"
  },
  {
    "text": "five times it disappears from the UI the",
    "start": "50940",
    "end": "53399"
  },
  {
    "text": "back end magic behind this application",
    "start": "53399",
    "end": "55199"
  },
  {
    "text": "is a relatively new tool called pocket",
    "start": "55199",
    "end": "57360"
  },
  {
    "text": "base which is like a free and open",
    "start": "57360",
    "end": "58980"
  },
  {
    "text": "source Firebase written and go that",
    "start": "58980",
    "end": "61140"
  },
  {
    "text": "provides user authentication along with",
    "start": "61140",
    "end": "63000"
  },
  {
    "text": "a real-time database powered by SQL Lite",
    "start": "63000",
    "end": "65460"
  },
  {
    "text": "but unlike any other base out there it",
    "start": "65460",
    "end": "67560"
  },
  {
    "text": "compiles everything to a single",
    "start": "67560",
    "end": "69240"
  },
  {
    "text": "executable and that means to self-host",
    "start": "69240",
    "end": "71220"
  },
  {
    "text": "it all you need is one little server",
    "start": "71220",
    "end": "73260"
  },
  {
    "text": "which costs less than your Grande soy",
    "start": "73260",
    "end": "75119"
  },
  {
    "text": "milk macchiato Simplicity is the",
    "start": "75119",
    "end": "77100"
  },
  {
    "text": "ultimate sophistication but today we'll",
    "start": "77100",
    "end": "79080"
  },
  {
    "text": "find out if the Simplicity of pocket",
    "start": "79080",
    "end": "80580"
  },
  {
    "text": "base can actually scale to kick things",
    "start": "80580",
    "end": "82380"
  },
  {
    "text": "off we're going to start things in",
    "start": "82380",
    "end": "83759"
  },
  {
    "text": "Reverse by deploying pocket base to a",
    "start": "83759",
    "end": "85799"
  },
  {
    "text": "Linux server in the cloud luckily for us",
    "start": "85799",
    "end": "87900"
  },
  {
    "text": "lenode has sponsored this video which",
    "start": "87900",
    "end": "89939"
  },
  {
    "text": "means I get to Make It Rain with a",
    "start": "89939",
    "end": "91560"
  },
  {
    "text": "hundred dollars in free credits for",
    "start": "91560",
    "end": "93119"
  },
  {
    "text": "everyone watching this video for those",
    "start": "93119",
    "end": "94860"
  },
  {
    "text": "that don't know lenode is one of the",
    "start": "94860",
    "end": "96420"
  },
  {
    "text": "original cloud providers that's been",
    "start": "96420",
    "end": "97979"
  },
  {
    "text": "around since 2003. their platform is a",
    "start": "97979",
    "end": "100500"
  },
  {
    "text": "perfect fit for this project because",
    "start": "100500",
    "end": "102119"
  },
  {
    "text": "like spelled and pocketbase it's famous",
    "start": "102119",
    "end": "104220"
  },
  {
    "text": "for Simplicity unlike big cloud",
    "start": "104220",
    "end": "106020"
  },
  {
    "text": "providers you can get a Linux server up",
    "start": "106020",
    "end": "108000"
  },
  {
    "text": "and running with a few clicks with flat",
    "start": "108000",
    "end": "109920"
  },
  {
    "text": "predictable pricing that won't cause",
    "start": "109920",
    "end": "111540"
  },
  {
    "text": "collateral damage later after you",
    "start": "111540",
    "end": "113460"
  },
  {
    "text": "register go to the dashboard and click",
    "start": "113460",
    "end": "115560"
  },
  {
    "text": "the button to create a new node then",
    "start": "115560",
    "end": "117540"
  },
  {
    "text": "choose an image with your preferred",
    "start": "117540",
    "end": "118860"
  },
  {
    "text": "Linux distro I'm going going with Debian",
    "start": "118860",
    "end": "120840"
  },
  {
    "text": "but the real Chads out there will use",
    "start": "120840",
    "end": "122579"
  },
  {
    "text": "Arch by the way then choose a region and",
    "start": "122579",
    "end": "124799"
  },
  {
    "text": "the size of your machine and finally",
    "start": "124799",
    "end": "126420"
  },
  {
    "text": "give it a password and click create Step",
    "start": "126420",
    "end": "128759"
  },
  {
    "text": "One is complete we now have a Linux",
    "start": "128759",
    "end": "130739"
  },
  {
    "text": "server running in the cloud I told you",
    "start": "130739",
    "end": "132300"
  },
  {
    "text": "that would be easy let's go ahead and",
    "start": "132300",
    "end": "133620"
  },
  {
    "text": "make a note of its IP address to access",
    "start": "133620",
    "end": "135420"
  },
  {
    "text": "it on the internet now in Step 2 let's",
    "start": "135420",
    "end": "137700"
  },
  {
    "text": "deploy pocket base to it first download",
    "start": "137700",
    "end": "140040"
  },
  {
    "text": "and unzip pocket base from the website",
    "start": "140040",
    "end": "141959"
  },
  {
    "text": "I'm also using Debian on my local",
    "start": "141959",
    "end": "143819"
  },
  {
    "text": "machine so we'll download the Linux",
    "start": "143819",
    "end": "145500"
  },
  {
    "text": "version unzip it to get this single",
    "start": "145500",
    "end": "147420"
  },
  {
    "text": "pocket base executable you can run it",
    "start": "147420",
    "end": "149280"
  },
  {
    "text": "locally by running pocket based serve",
    "start": "149280",
    "end": "151260"
  },
  {
    "text": "but I want to run it in the cloud on my",
    "start": "151260",
    "end": "152940"
  },
  {
    "text": "lenode server so I can access it from",
    "start": "152940",
    "end": "154800"
  },
  {
    "text": "anywhere just like a platform like",
    "start": "154800",
    "end": "156480"
  },
  {
    "text": "Firebase let's open up the terminal and",
    "start": "156480",
    "end": "158760"
  },
  {
    "text": "use secure shell to access the lenode IP",
    "start": "158760",
    "end": "161340"
  },
  {
    "text": "address as a root user it'll require the",
    "start": "161340",
    "end": "163560"
  },
  {
    "text": "password you created earlier and now we",
    "start": "163560",
    "end": "165300"
  },
  {
    "text": "have access to the Mainframe we're",
    "start": "165300",
    "end": "166980"
  },
  {
    "text": "currently in the root directory so let's",
    "start": "166980",
    "end": "168720"
  },
  {
    "text": "go ahead and create another directory",
    "start": "168720",
    "end": "170099"
  },
  {
    "text": "called PB and now we just need to upload",
    "start": "170099",
    "end": "172319"
  },
  {
    "text": "the pocket base executable to this",
    "start": "172319",
    "end": "174000"
  },
  {
    "text": "directory we could do it with rsync or",
    "start": "174000",
    "end": "176099"
  },
  {
    "text": "an application like filezilla but I",
    "start": "176099",
    "end": "178019"
  },
  {
    "text": "think the easiest approach is to use",
    "start": "178019",
    "end": "179519"
  },
  {
    "text": "secure copy which will simply copy the",
    "start": "179519",
    "end": "181680"
  },
  {
    "text": "local file over to the remote directory",
    "start": "181680",
    "end": "183599"
  },
  {
    "text": "we just created run this command from a",
    "start": "183599",
    "end": "185400"
  },
  {
    "text": "separate terminal on your local machine",
    "start": "185400",
    "end": "186900"
  },
  {
    "text": "once that's done we can go back to the",
    "start": "186900",
    "end": "188819"
  },
  {
    "text": "terminal on the lenode machine and run",
    "start": "188819",
    "end": "190680"
  },
  {
    "text": "the pocket-based serve command and to",
    "start": "190680",
    "end": "192599"
  },
  {
    "text": "make it accessible over the Internet",
    "start": "192599",
    "end": "193739"
  },
  {
    "text": "we'll use the HTTP flag followed by our",
    "start": "193739",
    "end": "196200"
  },
  {
    "text": "IP address and Port 80. congratulations",
    "start": "196200",
    "end": "198659"
  },
  {
    "text": "you just self-hosted your own back end",
    "start": "198659",
    "end": "200700"
  },
  {
    "text": "that you can now access over HTTP with",
    "start": "200700",
    "end": "203099"
  },
  {
    "text": "the IP address it serves a rest API as",
    "start": "203099",
    "end": "205860"
  },
  {
    "text": "well as an admin dashboard that you can",
    "start": "205860",
    "end": "207840"
  },
  {
    "text": "access with the underscore URL however",
    "start": "207840",
    "end": "210239"
  },
  {
    "text": "there's a few more things I want to show",
    "start": "210239",
    "end": "211739"
  },
  {
    "text": "you to make it fully production ready",
    "start": "211739",
    "end": "213360"
  },
  {
    "text": "the first thing I would do is bring my",
    "start": "213360",
    "end": "215280"
  },
  {
    "text": "domain over to lenode it has a fully",
    "start": "215280",
    "end": "217440"
  },
  {
    "text": "featured DNS manager and pocketbase uses",
    "start": "217440",
    "end": "219959"
  },
  {
    "text": "let's encrypt to automatically generate",
    "start": "219959",
    "end": "221940"
  },
  {
    "text": "an SSL certificate to serve your backend",
    "start": "221940",
    "end": "224159"
  },
  {
    "text": "over https all you have to do is add",
    "start": "224159",
    "end": "226680"
  },
  {
    "text": "this extra flag to the serve command now",
    "start": "226680",
    "end": "228900"
  },
  {
    "text": "the next thing I would consider doing is",
    "start": "228900",
    "end": "230519"
  },
  {
    "text": "mounting a volume to the PB data",
    "start": "230519",
    "end": "232920"
  },
  {
    "text": "directory this is where pocketbase",
    "start": "232920",
    "end": "234659"
  },
  {
    "text": "stores all of your data a volume is just",
    "start": "234659",
    "end": "236580"
  },
  {
    "text": "its own file system that can be moved",
    "start": "236580",
    "end": "238560"
  },
  {
    "text": "around to different servers on node we",
    "start": "238560",
    "end": "240720"
  },
  {
    "text": "can easily attach an extra 20 Gigabytes",
    "start": "240720",
    "end": "242700"
  },
  {
    "text": "for Just Two Dollars and then finally I",
    "start": "242700",
    "end": "244860"
  },
  {
    "text": "would recommend setting up a systemd",
    "start": "244860",
    "end": "246480"
  },
  {
    "text": "service to automatically restart pocket",
    "start": "246480",
    "end": "248519"
  },
  {
    "text": "base whenever the server reboots and now",
    "start": "248519",
    "end": "250620"
  },
  {
    "text": "it's time for step 3 where we model the",
    "start": "250620",
    "end": "252480"
  },
  {
    "text": "data for our chat app navigate to your",
    "start": "252480",
    "end": "254400"
  },
  {
    "text": "pocket-based dashboard and create an",
    "start": "254400",
    "end": "256260"
  },
  {
    "text": "admin user from here we can go to the",
    "start": "256260",
    "end": "257820"
  },
  {
    "text": "database and by default it has a",
    "start": "257820",
    "end": "259680"
  },
  {
    "text": "collection for users these are the users",
    "start": "259680",
    "end": "261780"
  },
  {
    "text": "of your application which contain Fields",
    "start": "261780",
    "end": "263880"
  },
  {
    "text": "like username email password and so on",
    "start": "263880",
    "end": "266340"
  },
  {
    "text": "what we need is a way to create a",
    "start": "266340",
    "end": "268259"
  },
  {
    "text": "one-to-many relationship between users",
    "start": "268259",
    "end": "270479"
  },
  {
    "text": "and chat messages create a second",
    "start": "270479",
    "end": "272400"
  },
  {
    "text": "collection called messages and give it",
    "start": "272400",
    "end": "274620"
  },
  {
    "text": "two Fields the first field is text for",
    "start": "274620",
    "end": "276900"
  },
  {
    "text": "the message content itself and you can",
    "start": "276900",
    "end": "278820"
  },
  {
    "text": "add some optional server-side",
    "start": "278820",
    "end": "280139"
  },
  {
    "text": "validations here like Min length and max",
    "start": "280139",
    "end": "282479"
  },
  {
    "text": "length while the second field user",
    "start": "282479",
    "end": "284400"
  },
  {
    "text": "creates a relationship that says a",
    "start": "284400",
    "end": "286440"
  },
  {
    "text": "message belongs to a user under the hood",
    "start": "286440",
    "end": "288780"
  },
  {
    "text": "pocketbase creates a foreign key for the",
    "start": "288780",
    "end": "290820"
  },
  {
    "text": "user ID on the messages table in the",
    "start": "290820",
    "end": "293040"
  },
  {
    "text": "sqlite database go ahead and click",
    "start": "293040",
    "end": "294900"
  },
  {
    "text": "create to update the schema and now you",
    "start": "294900",
    "end": "297360"
  },
  {
    "text": "should be able to create new records in",
    "start": "297360",
    "end": "299100"
  },
  {
    "text": "the database the that takes care of our",
    "start": "299100",
    "end": "300720"
  },
  {
    "text": "data modeling now let's make it secure",
    "start": "300720",
    "end": "302460"
  },
  {
    "text": "every collection in Pocket base can have",
    "start": "302460",
    "end": "304380"
  },
  {
    "text": "API rules these rules determine who can",
    "start": "304380",
    "end": "306600"
  },
  {
    "text": "access your data from a front-end",
    "start": "306600",
    "end": "308160"
  },
  {
    "text": "application by default the messages",
    "start": "308160",
    "end": "310020"
  },
  {
    "text": "collection can only be accessed by admin",
    "start": "310020",
    "end": "312300"
  },
  {
    "text": "users however we want anybody to be able",
    "start": "312300",
    "end": "314520"
  },
  {
    "text": "to view the messages so let's go ahead",
    "start": "314520",
    "end": "316320"
  },
  {
    "text": "and hit the unlock button for list and",
    "start": "316320",
    "end": "318419"
  },
  {
    "text": "view users also need the ability to",
    "start": "318419",
    "end": "320520"
  },
  {
    "text": "create new messages but it's critical",
    "start": "320520",
    "end": "322259"
  },
  {
    "text": "that they only create messages",
    "start": "322259",
    "end": "323460"
  },
  {
    "text": "Associated to their own user ID we can",
    "start": "323460",
    "end": "326220"
  },
  {
    "text": "enforce that rule by ensuring that the",
    "start": "326220",
    "end": "328080"
  },
  {
    "text": "user property is equal to the request",
    "start": "328080",
    "end": "330660"
  },
  {
    "text": "auth user ID and just like that we've",
    "start": "330660",
    "end": "333360"
  },
  {
    "text": "eliminated tons of complexity that we",
    "start": "333360",
    "end": "335100"
  },
  {
    "text": "would need in our backend code otherwise",
    "start": "335100",
    "end": "336780"
  },
  {
    "text": "save the changes then head over to the",
    "start": "336780",
    "end": "338820"
  },
  {
    "text": "users collection for users we already",
    "start": "338820",
    "end": "340919"
  },
  {
    "text": "have a bunch of rules built in but we",
    "start": "340919",
    "end": "342960"
  },
  {
    "text": "want to give users the ability to view",
    "start": "342960",
    "end": "344520"
  },
  {
    "text": "each other's profiles so let's go ahead",
    "start": "344520",
    "end": "346320"
  },
  {
    "text": "and remove the rules for View and list",
    "start": "346320",
    "end": "348300"
  },
  {
    "text": "to make this data public now that we're",
    "start": "348300",
    "end": "350460"
  },
  {
    "text": "somewhat secure we can start building",
    "start": "350460",
    "end": "352080"
  },
  {
    "text": "out the front end with svelte as you may",
    "start": "352080",
    "end": "354120"
  },
  {
    "text": "know I use spell to build the fireship i",
    "start": "354120",
    "end": "355979"
  },
  {
    "text": "o website but it's also been used by the",
    "start": "355979",
    "end": "358020"
  },
  {
    "text": "pocket-based developers to build their",
    "start": "358020",
    "end": "359520"
  },
  {
    "text": "admin and UI as well it's a great fit",
    "start": "359520",
    "end": "361680"
  },
  {
    "text": "for this project because it's really",
    "start": "361680",
    "end": "363060"
  },
  {
    "text": "good at building real-time uis thanks to",
    "start": "363060",
    "end": "365340"
  },
  {
    "text": "its built-in reactive stores generate a",
    "start": "365340",
    "end": "367680"
  },
  {
    "text": "new project with Veet then select the",
    "start": "367680",
    "end": "369539"
  },
  {
    "text": "spelled option and we'll also go with",
    "start": "369539",
    "end": "371280"
  },
  {
    "text": "typescript open the project run npm",
    "start": "371280",
    "end": "373560"
  },
  {
    "text": "install then npm run Dev to serve it",
    "start": "373560",
    "end": "376199"
  },
  {
    "text": "locally then in the code delete all the",
    "start": "376199",
    "end": "378479"
  },
  {
    "text": "boilerplate and create a new file called",
    "start": "378479",
    "end": "380580"
  },
  {
    "text": "pocket base in the lib directory",
    "start": "380580",
    "end": "382440"
  },
  {
    "text": "whenever building a new app I usually",
    "start": "382440",
    "end": "384240"
  },
  {
    "text": "start by thinking about user",
    "start": "384240",
    "end": "385800"
  },
  {
    "text": "authentication what we'll do in this",
    "start": "385800",
    "end": "387539"
  },
  {
    "text": "file is provide a way to listen to that",
    "start": "387539",
    "end": "389639"
  },
  {
    "text": "current user in real time from anywhere",
    "start": "389639",
    "end": "391860"
  },
  {
    "text": "in the application to handle that we'll",
    "start": "391860",
    "end": "393780"
  },
  {
    "text": "install the pocket-based JavaScript SDK",
    "start": "393780",
    "end": "395880"
  },
  {
    "text": "with npm Once installed we can then",
    "start": "395880",
    "end": "398160"
  },
  {
    "text": "import it in this file as well as",
    "start": "398160",
    "end": "399960"
  },
  {
    "text": "writable from svelt store now to connect",
    "start": "399960",
    "end": "402360"
  },
  {
    "text": "to our backend all we have to do is",
    "start": "402360",
    "end": "403979"
  },
  {
    "text": "initialize pocket base with the URL it's",
    "start": "403979",
    "end": "406080"
  },
  {
    "text": "hosted at which in this case would be",
    "start": "406080",
    "end": "407639"
  },
  {
    "text": "the lenode IP address from there I'm",
    "start": "407639",
    "end": "409800"
  },
  {
    "text": "creating a variable for current user",
    "start": "409800",
    "end": "411780"
  },
  {
    "text": "that's equal to a writable store its",
    "start": "411780",
    "end": "414300"
  },
  {
    "text": "default value is the pocket base off",
    "start": "414300",
    "end": "416400"
  },
  {
    "text": "store model which is equal to null when",
    "start": "416400",
    "end": "418620"
  },
  {
    "text": "the user is not logged in n or equal to",
    "start": "418620",
    "end": "420840"
  },
  {
    "text": "the database record of the currently",
    "start": "420840",
    "end": "422639"
  },
  {
    "text": "logged in user that contains Fields like",
    "start": "422639",
    "end": "424680"
  },
  {
    "text": "the user ID username and so on now the",
    "start": "424680",
    "end": "427139"
  },
  {
    "text": "value of this model will change when the",
    "start": "427139",
    "end": "428759"
  },
  {
    "text": "user signs in and signs out and we can",
    "start": "428759",
    "end": "430740"
  },
  {
    "text": "listen to those changes by registering a",
    "start": "430740",
    "end": "432720"
  },
  {
    "text": "callback for the on change event when",
    "start": "432720",
    "end": "434699"
  },
  {
    "text": "this event fires we can update the",
    "start": "434699",
    "end": "436319"
  },
  {
    "text": "spelled store with the current model",
    "start": "436319",
    "end": "438060"
  },
  {
    "text": "that gives us a way to subscribe to the",
    "start": "438060",
    "end": "439919"
  },
  {
    "text": "current user let's put it to use by",
    "start": "439919",
    "end": "441960"
  },
  {
    "text": "creating a login.spel component inside",
    "start": "441960",
    "end": "444599"
  },
  {
    "text": "this component we'll log in a user with",
    "start": "444599",
    "end": "446639"
  },
  {
    "text": "email and password what's awesome about",
    "start": "446639",
    "end": "448620"
  },
  {
    "text": "that store we just created is that we",
    "start": "448620",
    "end": "450479"
  },
  {
    "text": "can subscribe to the current value",
    "start": "450479",
    "end": "451919"
  },
  {
    "text": "anywhere in the application reactively",
    "start": "451919",
    "end": "453840"
  },
  {
    "text": "by putting a dollar sign in front of it",
    "start": "453840",
    "end": "455880"
  },
  {
    "text": "for example we might say if current user",
    "start": "455880",
    "end": "458400"
  },
  {
    "text": "render the text signed in as current",
    "start": "458400",
    "end": "460860"
  },
  {
    "text": "user dot username now the question",
    "start": "460860",
    "end": "462960"
  },
  {
    "text": "becomes how do we sign in a user well",
    "start": "462960",
    "end": "464880"
  },
  {
    "text": "let's start by creating variables for",
    "start": "464880",
    "end": "466500"
  },
  {
    "text": "username and password then create an",
    "start": "466500",
    "end": "468419"
  },
  {
    "text": "HTML form that has two inputs for those",
    "start": "468419",
    "end": "471240"
  },
  {
    "text": "values and it's felt we can easily bind",
    "start": "471240",
    "end": "473580"
  },
  {
    "text": "the variable to the form value with the",
    "start": "473580",
    "end": "476039"
  },
  {
    "text": "bind value directive now we can access",
    "start": "476039",
    "end": "478319"
  },
  {
    "text": "the current form value in our script",
    "start": "478319",
    "end": "480240"
  },
  {
    "text": "let's create an async function called",
    "start": "480240",
    "end": "482460"
  },
  {
    "text": "login that awaits a call to the",
    "start": "482460",
    "end": "484800"
  },
  {
    "text": "pocket-based collection of users then",
    "start": "484800",
    "end": "487319"
  },
  {
    "text": "calls the auth with password method",
    "start": "487319",
    "end": "489360"
  },
  {
    "text": "using the username and password as",
    "start": "489360",
    "end": "491520"
  },
  {
    "text": "arguments and that's all the code it",
    "start": "491520",
    "end": "493139"
  },
  {
    "text": "takes to authenticate a user however we",
    "start": "493139",
    "end": "495479"
  },
  {
    "text": "don't have a user yet which means we'll",
    "start": "495479",
    "end": "497220"
  },
  {
    "text": "also need another function named sign",
    "start": "497220",
    "end": "499139"
  },
  {
    "text": "out and this function we'll set up some",
    "start": "499139",
    "end": "500819"
  },
  {
    "text": "initial data for a new user like the",
    "start": "500819",
    "end": "502919"
  },
  {
    "text": "username password and we could also pass",
    "start": "502919",
    "end": "505080"
  },
  {
    "text": "a name and email address here as well or",
    "start": "505080",
    "end": "507120"
  },
  {
    "text": "whatever custom Fields you configured in",
    "start": "507120",
    "end": "508860"
  },
  {
    "text": "Pocket base we can then take that data",
    "start": "508860",
    "end": "510660"
  },
  {
    "text": "and create a new record in the users",
    "start": "510660",
    "end": "512760"
  },
  {
    "text": "collection once created we call login",
    "start": "512760",
    "end": "514740"
  },
  {
    "text": "with that same user data and that's all",
    "start": "514740",
    "end": "516959"
  },
  {
    "text": "it takes to sign up but it'd be a good",
    "start": "516959",
    "end": "518640"
  },
  {
    "text": "idea to wrap this in a try catch block",
    "start": "518640",
    "end": "520380"
  },
  {
    "text": "and render an error message if a bad",
    "start": "520380",
    "end": "522479"
  },
  {
    "text": "username or password is used we also",
    "start": "522479",
    "end": "524880"
  },
  {
    "text": "need a sign out function which is",
    "start": "524880",
    "end": "526440"
  },
  {
    "text": "accomplished by calling auth store clear",
    "start": "526440",
    "end": "528420"
  },
  {
    "text": "now let's go into the HTML and bind",
    "start": "528420",
    "end": "530820"
  },
  {
    "text": "these functions to buttons which is",
    "start": "530820",
    "end": "532800"
  },
  {
    "text": "accomplished and spelled with on click",
    "start": "532800",
    "end": "534839"
  },
  {
    "text": "and as one final touch I'm also going to",
    "start": "534839",
    "end": "537060"
  },
  {
    "text": "listen to the on submit event on the",
    "start": "537060",
    "end": "538920"
  },
  {
    "text": "form and prove prevent the default",
    "start": "538920",
    "end": "540540"
  },
  {
    "text": "action so it doesn't refresh the page",
    "start": "540540",
    "end": "542459"
  },
  {
    "text": "when submitted now let's open the",
    "start": "542459",
    "end": "544140"
  },
  {
    "text": "app.spel file and declare the login",
    "start": "544140",
    "end": "546360"
  },
  {
    "text": "component there if we view the app in",
    "start": "546360",
    "end": "548640"
  },
  {
    "text": "the browser we should now see this login",
    "start": "548640",
    "end": "550500"
  },
  {
    "text": "form and when you enter a username and",
    "start": "550500",
    "end": "552959"
  },
  {
    "text": "password and click sign up the UI should",
    "start": "552959",
    "end": "555360"
  },
  {
    "text": "automatically re-render to show the",
    "start": "555360",
    "end": "557279"
  },
  {
    "text": "current user's username and now we're",
    "start": "557279",
    "end": "559140"
  },
  {
    "text": "finally ready to build the fun part the",
    "start": "559140",
    "end": "561060"
  },
  {
    "text": "real-time chat messages feature let's go",
    "start": "561060",
    "end": "563220"
  },
  {
    "text": "ahead and create a new component called",
    "start": "563220",
    "end": "564540"
  },
  {
    "text": "messages we can import the on Mount and",
    "start": "564540",
    "end": "566820"
  },
  {
    "text": "on destroyed lifecycle hooks from",
    "start": "566820",
    "end": "568320"
  },
  {
    "text": "spelled as well as pocket base our first",
    "start": "568320",
    "end": "570360"
  },
  {
    "text": "goal here is to fetch the most recent",
    "start": "570360",
    "end": "572339"
  },
  {
    "text": "messages which we can represent",
    "start": "572339",
    "end": "573899"
  },
  {
    "text": "initially as an empty array from there",
    "start": "573899",
    "end": "576180"
  },
  {
    "text": "we can fetch the messages when the",
    "start": "576180",
    "end": "578040"
  },
  {
    "text": "component is first initialized with on",
    "start": "578040",
    "end": "579959"
  },
  {
    "text": "Mount and this code will run once at the",
    "start": "579959",
    "end": "582180"
  },
  {
    "text": "beginning of the component lifecycle to",
    "start": "582180",
    "end": "584160"
  },
  {
    "text": "make a query to the messages collection",
    "start": "584160",
    "end": "586019"
  },
  {
    "text": "use get list to fetch a paginated list",
    "start": "586019",
    "end": "588779"
  },
  {
    "text": "of messages that starts on page 1 and",
    "start": "588779",
    "end": "591120"
  },
  {
    "text": "has 50 messages per page it also takes",
    "start": "591120",
    "end": "593459"
  },
  {
    "text": "an object where you can do things like",
    "start": "593459",
    "end": "595260"
  },
  {
    "text": "sort and filter the query in our case we",
    "start": "595260",
    "end": "597600"
  },
  {
    "text": "want it sorted by that created field",
    "start": "597600",
    "end": "599459"
  },
  {
    "text": "what's really cool though is how easy it",
    "start": "599459",
    "end": "601440"
  },
  {
    "text": "is to join in relational data remember",
    "start": "601440",
    "end": "603779"
  },
  {
    "text": "every message has a user field that",
    "start": "603779",
    "end": "606120"
  },
  {
    "text": "points to a user record if we want to",
    "start": "606120",
    "end": "608040"
  },
  {
    "text": "also include the user data on every",
    "start": "608040",
    "end": "609899"
  },
  {
    "text": "message we can do that with the expand",
    "start": "609899",
    "end": "611940"
  },
  {
    "text": "option and that means we get all the",
    "start": "611940",
    "end": "613500"
  },
  {
    "text": "data we need without any complex SQL",
    "start": "613500",
    "end": "615779"
  },
  {
    "text": "joins now the return value is a result",
    "start": "615779",
    "end": "617760"
  },
  {
    "text": "list and we can set our messages array",
    "start": "617760",
    "end": "620040"
  },
  {
    "text": "as the result list items from there we",
    "start": "620040",
    "end": "622380"
  },
  {
    "text": "can go into our HTML and loop over the",
    "start": "622380",
    "end": "624660"
  },
  {
    "text": "messages with a spelled each block",
    "start": "624660",
    "end": "626640"
  },
  {
    "text": "notice how for each message I have the",
    "start": "626640",
    "end": "628680"
  },
  {
    "text": "message ID in parentheses this creates a",
    "start": "628680",
    "end": "630959"
  },
  {
    "text": "keyed Loop so svelte can keep track of",
    "start": "630959",
    "end": "632940"
  },
  {
    "text": "all the items in the list to render them",
    "start": "632940",
    "end": "634800"
  },
  {
    "text": "more efficiently for each message I'm",
    "start": "634800",
    "end": "636720"
  },
  {
    "text": "going to render out the message text in",
    "start": "636720",
    "end": "638760"
  },
  {
    "text": "the database and also because we join in",
    "start": "638760",
    "end": "640860"
  },
  {
    "text": "the user I'm going to render out the",
    "start": "640860",
    "end": "642779"
  },
  {
    "text": "user's username and also generate a",
    "start": "642779",
    "end": "645060"
  },
  {
    "text": "unique avatar for each user using an",
    "start": "645060",
    "end": "647100"
  },
  {
    "text": "awesome little service called dicepair",
    "start": "647100",
    "end": "648839"
  },
  {
    "text": "let's go ahead and try it out in the",
    "start": "648839",
    "end": "650339"
  },
  {
    "text": "browser I also have the pocket based",
    "start": "650339",
    "end": "652140"
  },
  {
    "text": "admin UI side by side and as you can see",
    "start": "652140",
    "end": "654420"
  },
  {
    "text": "here it fetches all the messages from",
    "start": "654420",
    "end": "656399"
  },
  {
    "text": "the database that's pretty cool but how",
    "start": "656399",
    "end": "658500"
  },
  {
    "text": "do we create a new message message let's",
    "start": "658500",
    "end": "660240"
  },
  {
    "text": "go back into the code and set up a",
    "start": "660240",
    "end": "661980"
  },
  {
    "text": "variable for a new message then Define a",
    "start": "661980",
    "end": "664560"
  },
  {
    "text": "function called send message for a data",
    "start": "664560",
    "end": "666839"
  },
  {
    "text": "we'll need the text of the new message",
    "start": "666839",
    "end": "668279"
  },
  {
    "text": "and also that current user's user ID",
    "start": "668279",
    "end": "670680"
  },
  {
    "text": "remember we can always get that by",
    "start": "670680",
    "end": "672480"
  },
  {
    "text": "putting a dollar sign in front of it",
    "start": "672480",
    "end": "673860"
  },
  {
    "text": "because spelled is awesome and now we",
    "start": "673860",
    "end": "675660"
  },
  {
    "text": "just tell pocketbase to create a new",
    "start": "675660",
    "end": "677279"
  },
  {
    "text": "message let's go ahead and take this",
    "start": "677279",
    "end": "678839"
  },
  {
    "text": "function and bind it to the on submit",
    "start": "678839",
    "end": "681060"
  },
  {
    "text": "event on a form that also prevents the",
    "start": "681060",
    "end": "683339"
  },
  {
    "text": "default action and binds the value of",
    "start": "683339",
    "end": "685380"
  },
  {
    "text": "the text to that new message variable",
    "start": "685380",
    "end": "687000"
  },
  {
    "text": "let's go ahead and open it up in the",
    "start": "687000",
    "end": "688620"
  },
  {
    "text": "browser again and try to create a new",
    "start": "688620",
    "end": "690660"
  },
  {
    "text": "message as you can see here it creates a",
    "start": "690660",
    "end": "692760"
  },
  {
    "text": "new message but we need to refresh the",
    "start": "692760",
    "end": "694860"
  },
  {
    "text": "entire page to actually see the message",
    "start": "694860",
    "end": "696720"
  },
  {
    "text": "and that's not going to fly for a",
    "start": "696720",
    "end": "698880"
  },
  {
    "text": "real-time chat app the final thing we'll",
    "start": "698880",
    "end": "700680"
  },
  {
    "text": "do here is make these messages update in",
    "start": "700680",
    "end": "702779"
  },
  {
    "text": "real time let's go back into the on",
    "start": "702779",
    "end": "704880"
  },
  {
    "text": "Mount callback and then we'll call",
    "start": "704880",
    "end": "706500"
  },
  {
    "text": "pocket base collection messages and",
    "start": "706500",
    "end": "708899"
  },
  {
    "text": "subscribe to the entire collection with",
    "start": "708899",
    "end": "711060"
  },
  {
    "text": "the star symbol this allows us to run a",
    "start": "711060",
    "end": "713040"
  },
  {
    "text": "callback anytime a message is created",
    "start": "713040",
    "end": "715200"
  },
  {
    "text": "updated or deleted the action tells us",
    "start": "715200",
    "end": "717660"
  },
  {
    "text": "what happened in our case we want to",
    "start": "717660",
    "end": "719040"
  },
  {
    "text": "update the UI if a new message was",
    "start": "719040",
    "end": "721140"
  },
  {
    "text": "created or deleted when created we can",
    "start": "721140",
    "end": "723420"
  },
  {
    "text": "update the messages array with that new",
    "start": "723420",
    "end": "725339"
  },
  {
    "text": "record one caveat with real time though",
    "start": "725339",
    "end": "727320"
  },
  {
    "text": "is that it won't include that expanded",
    "start": "727320",
    "end": "729060"
  },
  {
    "text": "user record although we can easily fetch",
    "start": "729060",
    "end": "731040"
  },
  {
    "text": "it with a get one query if needed then",
    "start": "731040",
    "end": "733079"
  },
  {
    "text": "for the delete action we can filter out",
    "start": "733079",
    "end": "735180"
  },
  {
    "text": "the ID of the message that was removed",
    "start": "735180",
    "end": "737339"
  },
  {
    "text": "that gives us a real-time listener but",
    "start": "737339",
    "end": "739260"
  },
  {
    "text": "whenever working with real time it's a",
    "start": "739260",
    "end": "741180"
  },
  {
    "text": "good practice to unsubscribe when the",
    "start": "741180",
    "end": "743160"
  },
  {
    "text": "data is no longer needed because",
    "start": "743160",
    "end": "744480"
  },
  {
    "text": "otherwise you could end up with memory",
    "start": "744480",
    "end": "746160"
  },
  {
    "text": "leaks and unnecessary reads on the",
    "start": "746160",
    "end": "748140"
  },
  {
    "text": "database create a variable to represent",
    "start": "748140",
    "end": "750180"
  },
  {
    "text": "a function named unsubscribe we obtain",
    "start": "750180",
    "end": "752820"
  },
  {
    "text": "this function from pocketbase when",
    "start": "752820",
    "end": "754500"
  },
  {
    "text": "making the call to subscribe once we",
    "start": "754500",
    "end": "756540"
  },
  {
    "text": "have that function as state we can then",
    "start": "756540",
    "end": "758220"
  },
  {
    "text": "call it on the on Destroy lifecycle hook",
    "start": "758220",
    "end": "760200"
  },
  {
    "text": "to end the subscription when the user",
    "start": "760200",
    "end": "762000"
  },
  {
    "text": "logs out or if they navigate to a",
    "start": "762000",
    "end": "763800"
  },
  {
    "text": "different page let's open up the browser",
    "start": "763800",
    "end": "765540"
  },
  {
    "text": "and try it out you should now have a",
    "start": "765540",
    "end": "767220"
  },
  {
    "text": "chat application that updates the",
    "start": "767220",
    "end": "768899"
  },
  {
    "text": "messages feed in real time and now we",
    "start": "768899",
    "end": "771060"
  },
  {
    "text": "can run npm build to build our site for",
    "start": "771060",
    "end": "773160"
  },
  {
    "text": "production and deploy it somewhere on",
    "start": "773160",
    "end": "774959"
  },
  {
    "text": "the internet in fact because we have a",
    "start": "774959",
    "end": "776880"
  },
  {
    "text": "single page application we could",
    "start": "776880",
    "end": "778500"
  },
  {
    "text": "actually do this online node by",
    "start": "778500",
    "end": "780240"
  },
  {
    "text": "uploading the generated files to a",
    "start": "780240",
    "end": "781860"
  },
  {
    "text": "storage bucket then configuring it as a",
    "start": "781860",
    "end": "783959"
  },
  {
    "text": "static website host the final thing you",
    "start": "783959",
    "end": "785880"
  },
  {
    "text": "want to know is that as your website",
    "start": "785880",
    "end": "787320"
  },
  {
    "text": "grows pocketbase will need to scale",
    "start": "787320",
    "end": "789300"
  },
  {
    "text": "vertically with more CPU and RAM to",
    "start": "789300",
    "end": "791399"
  },
  {
    "text": "handle more and more traffic this can be",
    "start": "791399",
    "end": "793200"
  },
  {
    "text": "easily accomplished by simply resizing",
    "start": "793200",
    "end": "795300"
  },
  {
    "text": "your lanode a bigger server can handle",
    "start": "795300",
    "end": "797579"
  },
  {
    "text": "more traffic it can easily handle tens",
    "start": "797579",
    "end": "799560"
  },
  {
    "text": "of thousands of concurrent users and",
    "start": "799560",
    "end": "801420"
  },
  {
    "text": "should be more than adequate for the",
    "start": "801420",
    "end": "803040"
  },
  {
    "text": "vast majority of projects out there this",
    "start": "803040",
    "end": "805139"
  },
  {
    "text": "allows you to fail over and over again",
    "start": "805139",
    "end": "806880"
  },
  {
    "text": "as a developer without a bunch of wasted",
    "start": "806880",
    "end": "809100"
  },
  {
    "text": "time and money as collateral damage",
    "start": "809100",
    "end": "810899"
  },
  {
    "text": "thanks for watching and I will see you",
    "start": "810899",
    "end": "812880"
  },
  {
    "text": "in the next one",
    "start": "812880",
    "end": "815540"
  }
]