[
  {
    "text": "in this episode we're going to integrate",
    "start": "320",
    "end": "2399"
  },
  {
    "text": "stripe payments into an angular 4",
    "start": "2399",
    "end": "4720"
  },
  {
    "text": "project with Firebase on the back end",
    "start": "4720",
    "end": "7399"
  },
  {
    "text": "this is the first installment of a",
    "start": "7399",
    "end": "9040"
  },
  {
    "text": "multi-part series on handling payments",
    "start": "9040",
    "end": "11040"
  },
  {
    "text": "in angular in this first part you'll",
    "start": "11040",
    "end": "13040"
  },
  {
    "text": "learn how to trigger the stripe checkout",
    "start": "13040",
    "end": "14719"
  },
  {
    "text": "modal to collect the customer's credit",
    "start": "14719",
    "end": "16520"
  },
  {
    "text": "card and then receive the payment token",
    "start": "16520",
    "end": "18880"
  },
  {
    "text": "back from",
    "start": "18880",
    "end": "19840"
  },
  {
    "text": "stripe before we get into the code let's",
    "start": "19840",
    "end": "22359"
  },
  {
    "text": "take a look at how the whole stripe",
    "start": "22359",
    "end": "23680"
  },
  {
    "text": "payment process works the user will",
    "start": "23680",
    "end": "26279"
  },
  {
    "text": "enter their credit card details through",
    "start": "26279",
    "end": "27800"
  },
  {
    "text": "the angular app with stripe checkout",
    "start": "27800",
    "end": "30599"
  },
  {
    "text": "then stripe will respond with the",
    "start": "30599",
    "end": "32200"
  },
  {
    "text": "payment token which we then want to save",
    "start": "32200",
    "end": "34800"
  },
  {
    "text": "in the Firebase database this will",
    "start": "34800",
    "end": "36879"
  },
  {
    "text": "automatically trigger a cloud function",
    "start": "36879",
    "end": "38600"
  },
  {
    "text": "which sends the token back to stripe",
    "start": "38600",
    "end": "40600"
  },
  {
    "text": "stripe will charge the card and then",
    "start": "40600",
    "end": "42559"
  },
  {
    "text": "respond with the charge details Firebase",
    "start": "42559",
    "end": "45239"
  },
  {
    "text": "and angular have a real-time connection",
    "start": "45239",
    "end": "47239"
  },
  {
    "text": "so the user will always stay up to date",
    "start": "47239",
    "end": "49079"
  },
  {
    "text": "on the status of their payment",
    "start": "49079",
    "end": "50199"
  },
  {
    "text": "throughout this",
    "start": "50199",
    "end": "51960"
  },
  {
    "text": "process let's start by getting the",
    "start": "51960",
    "end": "53800"
  },
  {
    "text": "initial setup out of the way first",
    "start": "53800",
    "end": "55520"
  },
  {
    "text": "you'll need a stripe API key which you",
    "start": "55520",
    "end": "57520"
  },
  {
    "text": "can get from stripe.com then go to the",
    "start": "57520",
    "end": "60519"
  },
  {
    "text": "checkout documentation and we'll be",
    "start": "60519",
    "end": "62480"
  },
  {
    "text": "modifying the custom integration to work",
    "start": "62480",
    "end": "64720"
  },
  {
    "text": "with",
    "start": "64720",
    "end": "65478"
  },
  {
    "text": "angular in your app environment file add",
    "start": "65479",
    "end": "68840"
  },
  {
    "text": "the stripe API key and make sure it's",
    "start": "68840",
    "end": "71400"
  },
  {
    "text": "the test key from there we need to add",
    "start": "71400",
    "end": "74479"
  },
  {
    "text": "the stripe checkout library to the",
    "start": "74479",
    "end": "76920"
  },
  {
    "text": "index.html file and the final step is to",
    "start": "76920",
    "end": "80439"
  },
  {
    "text": "make typescript aware of the stripe",
    "start": "80439",
    "end": "82880"
  },
  {
    "text": "checkout class which you do in the",
    "start": "82880",
    "end": "85320"
  },
  {
    "text": "typing. D.S",
    "start": "85320",
    "end": "88240"
  },
  {
    "text": "file the next step is is to create a",
    "start": "88240",
    "end": "90400"
  },
  {
    "text": "feature module to handle all of our",
    "start": "90400",
    "end": "92280"
  },
  {
    "text": "payment components and services when",
    "start": "92280",
    "end": "94840"
  },
  {
    "text": "you're done with this lesson your",
    "start": "94840",
    "end": "96240"
  },
  {
    "text": "payment module should look something",
    "start": "96240",
    "end": "97600"
  },
  {
    "text": "like",
    "start": "97600",
    "end": "99439"
  },
  {
    "text": "this from there we can generate the",
    "start": "99439",
    "end": "101840"
  },
  {
    "text": "service specifying the payment module",
    "start": "101840",
    "end": "104560"
  },
  {
    "text": "then import angular fire database and",
    "start": "104560",
    "end": "106840"
  },
  {
    "text": "angular fire off and first we'll get the",
    "start": "106840",
    "end": "109840"
  },
  {
    "text": "user ID by subscribing to the angular",
    "start": "109840",
    "end": "112439"
  },
  {
    "text": "fire off",
    "start": "112439",
    "end": "114159"
  },
  {
    "text": "State the only other thing our service",
    "start": "114159",
    "end": "116320"
  },
  {
    "text": "needs to do at this point is save the",
    "start": "116320",
    "end": "118840"
  },
  {
    "text": "stripe token to the Firebase",
    "start": "118840",
    "end": "121880"
  },
  {
    "text": "database the payment object will just be",
    "start": "121880",
    "end": "124399"
  },
  {
    "text": "the stripe token as well as the amount",
    "start": "124399",
    "end": "126520"
  },
  {
    "text": "that we want to charge the",
    "start": "126520",
    "end": "127920"
  },
  {
    "text": "customer let's take a look at how this",
    "start": "127920",
    "end": "129959"
  },
  {
    "text": "data is actually structured in the",
    "start": "129959",
    "end": "132280"
  },
  {
    "text": "database every payment is nested under",
    "start": "132280",
    "end": "134920"
  },
  {
    "text": "its Associated user ID the payment",
    "start": "134920",
    "end": "137640"
  },
  {
    "text": "object has an amount which is just a",
    "start": "137640",
    "end": "139680"
  },
  {
    "text": "number and the token and charge",
    "start": "139680",
    "end": "142360"
  },
  {
    "text": "properties are objects that are return",
    "start": "142360",
    "end": "144319"
  },
  {
    "text": "from stripe they contain all kinds of",
    "start": "144319",
    "end": "146360"
  },
  {
    "text": "useful information that we'll see later",
    "start": "146360",
    "end": "147879"
  },
  {
    "text": "in this lesson now can start building",
    "start": "147879",
    "end": "150680"
  },
  {
    "text": "the component that will trigger the",
    "start": "150680",
    "end": "152120"
  },
  {
    "text": "stripe checkout window we'll use the",
    "start": "152120",
    "end": "155160"
  },
  {
    "text": "host listener",
    "start": "155160",
    "end": "156480"
  },
  {
    "text": "decorator and we'll also want to inject",
    "start": "156480",
    "end": "158879"
  },
  {
    "text": "the payment service into the component",
    "start": "158879",
    "end": "161360"
  },
  {
    "text": "and we'll need the environment variable",
    "start": "161360",
    "end": "163040"
  },
  {
    "text": "with our stripe API key we set variables",
    "start": "163040",
    "end": "166280"
  },
  {
    "text": "for the Handler which is the stripe",
    "start": "166280",
    "end": "167959"
  },
  {
    "text": "checkout object and also the amount",
    "start": "167959",
    "end": "170400"
  },
  {
    "text": "which we'll just hardcode to 500 500 is",
    "start": "170400",
    "end": "173040"
  },
  {
    "text": "equal to $5 in stripe everything's",
    "start": "173040",
    "end": "175400"
  },
  {
    "text": "counted as one/ 100th of the underlying",
    "start": "175400",
    "end": "178360"
  },
  {
    "text": "currency the Handler is defined during",
    "start": "178360",
    "end": "180680"
  },
  {
    "text": "NG on a knit and we Define a few",
    "start": "180680",
    "end": "182879"
  },
  {
    "text": "properties in there including the stripe",
    "start": "182879",
    "end": "184720"
  },
  {
    "text": "API key as well as a default logo image",
    "start": "184720",
    "end": "187680"
  },
  {
    "text": "but the most important part is the token",
    "start": "187680",
    "end": "189480"
  },
  {
    "text": "property which is a function that we can",
    "start": "189480",
    "end": "191200"
  },
  {
    "text": "use to handle the token when it's sent",
    "start": "191200",
    "end": "193239"
  },
  {
    "text": "back to us from stripe in this case we",
    "start": "193239",
    "end": "195840"
  },
  {
    "text": "send it back to the service to update it",
    "start": "195840",
    "end": "197920"
  },
  {
    "text": "in the",
    "start": "197920",
    "end": "199000"
  },
  {
    "text": "database the next function is just an",
    "start": "199000",
    "end": "201200"
  },
  {
    "text": "event handler that you can attach to a",
    "start": "201200",
    "end": "202879"
  },
  {
    "text": "button click and this will actually",
    "start": "202879",
    "end": "204799"
  },
  {
    "text": "trigger the stripe window to pop up the",
    "start": "204799",
    "end": "208439"
  },
  {
    "text": "last step is to use host list to listen",
    "start": "208439",
    "end": "210640"
  },
  {
    "text": "for the window pop State event this will",
    "start": "210640",
    "end": "212879"
  },
  {
    "text": "happen if the route redirects or if the",
    "start": "212879",
    "end": "214959"
  },
  {
    "text": "user clicks the back button so if you",
    "start": "214959",
    "end": "216879"
  },
  {
    "text": "redirect to a confirmation page you'll",
    "start": "216879",
    "end": "219239"
  },
  {
    "text": "definitely want to implement this",
    "start": "219239",
    "end": "221040"
  },
  {
    "text": "function let's go back into the app and",
    "start": "221040",
    "end": "223239"
  },
  {
    "text": "make sure it's working using a test",
    "start": "223239",
    "end": "225280"
  },
  {
    "text": "credit card from stripe we can send a",
    "start": "225280",
    "end": "227319"
  },
  {
    "text": "test request to the",
    "start": "227319",
    "end": "229480"
  },
  {
    "text": "API once the charge is complete we",
    "start": "229480",
    "end": "231720"
  },
  {
    "text": "should see the database updated with the",
    "start": "231720",
    "end": "233920"
  },
  {
    "text": "token details the most important part",
    "start": "233920",
    "end": "236680"
  },
  {
    "text": "here is the token ID which we send back",
    "start": "236680",
    "end": "238920"
  },
  {
    "text": "to Stripe from our backend to actually",
    "start": "238920",
    "end": "241200"
  },
  {
    "text": "charge the card so it's important to",
    "start": "241200",
    "end": "243439"
  },
  {
    "text": "note at this point that the card hasn't",
    "start": "243439",
    "end": "245040"
  },
  {
    "text": "actually been charged we just have a",
    "start": "245040",
    "end": "246519"
  },
  {
    "text": "token that we can use to charge it on",
    "start": "246519",
    "end": "248400"
  },
  {
    "text": "the back",
    "start": "248400",
    "end": "249280"
  },
  {
    "text": "end in the next part of this series",
    "start": "249280",
    "end": "251439"
  },
  {
    "text": "we'll go over how to actually charge the",
    "start": "251439",
    "end": "253720"
  },
  {
    "text": "card with Firebase Cloud",
    "start": "253720",
    "end": "255759"
  },
  {
    "text": "functions that's it for part one if this",
    "start": "255759",
    "end": "258320"
  },
  {
    "text": "video helped you please subscribe and if",
    "start": "258320",
    "end": "260799"
  },
  {
    "text": "you're serious about stripe payments I",
    "start": "260799",
    "end": "262440"
  },
  {
    "text": "recommend getting a pro subscription at",
    "start": "262440",
    "end": "264320"
  },
  {
    "text": "angular firebase.com you'll get",
    "start": "264320",
    "end": "266680"
  },
  {
    "text": "exclusive content related to angular",
    "start": "266680",
    "end": "268759"
  },
  {
    "text": "stripe and Firebase base as well as",
    "start": "268759",
    "end": "270759"
  },
  {
    "text": "access to our Pro channel on slack for",
    "start": "270759",
    "end": "272720"
  },
  {
    "text": "one-on-one project Consulting thanks for",
    "start": "272720",
    "end": "275000"
  },
  {
    "text": "watching I'll see you in part two",
    "start": "275000",
    "end": "278290"
  },
  {
    "text": "[Music]",
    "start": "278290",
    "end": "283329"
  }
]