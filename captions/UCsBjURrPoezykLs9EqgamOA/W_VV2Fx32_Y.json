[
  {
    "start": "0",
    "end": "110000"
  },
  {
    "text": "serverless computing it's a misnomer",
    "start": "399",
    "end": "2560"
  },
  {
    "text": "used to describe servers in the cloud",
    "start": "2560",
    "end": "4400"
  },
  {
    "text": "that requires zero configuration or",
    "start": "4400",
    "end": "6399"
  },
  {
    "text": "maintenance from the developer",
    "start": "6399",
    "end": "7680"
  },
  {
    "text": "imagine you need water for your house",
    "start": "7680",
    "end": "9440"
  },
  {
    "text": "you could spend a bunch of time and",
    "start": "9440",
    "end": "10719"
  },
  {
    "text": "money digging a well",
    "start": "10719",
    "end": "11759"
  },
  {
    "text": "testing the water quality and plumbing",
    "start": "11759",
    "end": "13599"
  },
  {
    "text": "it to your house or you could just tap",
    "start": "13599",
    "end": "15360"
  },
  {
    "text": "into the city water supply",
    "start": "15360",
    "end": "16720"
  },
  {
    "text": "and pay a monthly fee based on the",
    "start": "16720",
    "end": "18240"
  },
  {
    "text": "amount of water that you use",
    "start": "18240",
    "end": "19760"
  },
  {
    "text": "serverless computing is the same idea",
    "start": "19760",
    "end": "21840"
  },
  {
    "text": "but instead of water",
    "start": "21840",
    "end": "22880"
  },
  {
    "text": "we're talking about the amount of cpu",
    "start": "22880",
    "end": "24720"
  },
  {
    "text": "and memory it takes to run your code",
    "start": "24720",
    "end": "26720"
  },
  {
    "text": "services like aws lambda google cloud",
    "start": "26720",
    "end": "29199"
  },
  {
    "text": "functions and",
    "start": "29199",
    "end": "30000"
  },
  {
    "text": "azure functions allow you to run your",
    "start": "30000",
    "end": "31920"
  },
  {
    "text": "back-end code across their global data",
    "start": "31920",
    "end": "33760"
  },
  {
    "text": "centers",
    "start": "33760",
    "end": "34239"
  },
  {
    "text": "then they mail you a bill at the end of",
    "start": "34239",
    "end": "35680"
  },
  {
    "text": "the month that's factored down to the",
    "start": "35680",
    "end": "37120"
  },
  {
    "text": "millisecond",
    "start": "37120",
    "end": "37840"
  },
  {
    "text": "the beauty of this approach is that your",
    "start": "37840",
    "end": "39440"
  },
  {
    "text": "only concern is writing code",
    "start": "39440",
    "end": "41200"
  },
  {
    "text": "you don't have to pick an operating",
    "start": "41200",
    "end": "42480"
  },
  {
    "text": "system configure networking patch",
    "start": "42480",
    "end": "44480"
  },
  {
    "text": "improvements or provision capacity to",
    "start": "44480",
    "end": "46559"
  },
  {
    "text": "run at scale the cloud handles all that",
    "start": "46559",
    "end": "48480"
  },
  {
    "text": "for you behind the scenes",
    "start": "48480",
    "end": "49760"
  },
  {
    "text": "from an architectural standpoint it",
    "start": "49760",
    "end": "51520"
  },
  {
    "text": "allows you to develop and test each",
    "start": "51520",
    "end": "53280"
  },
  {
    "text": "business requirement",
    "start": "53280",
    "end": "54320"
  },
  {
    "text": "independent of a bigger monolithic",
    "start": "54320",
    "end": "56160"
  },
  {
    "text": "system not only do serverless functions",
    "start": "56160",
    "end": "58399"
  },
  {
    "text": "make servers easier to manage",
    "start": "58399",
    "end": "60079"
  },
  {
    "text": "but they can also be executed based on",
    "start": "60079",
    "end": "62079"
  },
  {
    "text": "different events that happen in the",
    "start": "62079",
    "end": "63520"
  },
  {
    "text": "cloud",
    "start": "63520",
    "end": "63920"
  },
  {
    "text": "which can actually simplify your backend",
    "start": "63920",
    "end": "65840"
  },
  {
    "text": "code for example",
    "start": "65840",
    "end": "66960"
  },
  {
    "text": "you might create a new database record",
    "start": "66960",
    "end": "68479"
  },
  {
    "text": "when a user places an order which then",
    "start": "68479",
    "end": "70400"
  },
  {
    "text": "triggers a serverless function to",
    "start": "70400",
    "end": "72000"
  },
  {
    "text": "send an email confirmation or maybe an",
    "start": "72000",
    "end": "74240"
  },
  {
    "text": "iot event on a home security system",
    "start": "74240",
    "end": "76479"
  },
  {
    "text": "invokes a function that sends a push",
    "start": "76479",
    "end": "78400"
  },
  {
    "text": "notification to the user's device",
    "start": "78400",
    "end": "80320"
  },
  {
    "text": "one of the easiest ways to get started",
    "start": "80320",
    "end": "81840"
  },
  {
    "text": "with serverless is firebase cloud",
    "start": "81840",
    "end": "83680"
  },
  {
    "text": "functions the command line tool will",
    "start": "83680",
    "end": "85280"
  },
  {
    "text": "give us a project",
    "start": "85280",
    "end": "86240"
  },
  {
    "text": "that looks like any other node.js",
    "start": "86240",
    "end": "88000"
  },
  {
    "text": "backend in the code we can export named",
    "start": "88000",
    "end": "90560"
  },
  {
    "text": "functions",
    "start": "90560",
    "end": "91200"
  },
  {
    "text": "that are configured to run on different",
    "start": "91200",
    "end": "93200"
  },
  {
    "text": "events that happen in google cloud",
    "start": "93200",
    "end": "94960"
  },
  {
    "text": "an event could be a simple http request",
    "start": "94960",
    "end": "97759"
  },
  {
    "text": "or a file upload database write",
    "start": "97759",
    "end": "100000"
  },
  {
    "text": "analytics event and so on after writing",
    "start": "100000",
    "end": "102240"
  },
  {
    "text": "our code we can then deploy it to",
    "start": "102240",
    "end": "103759"
  },
  {
    "text": "production with a single command and we",
    "start": "103759",
    "end": "105759"
  },
  {
    "text": "now have a reliable backend that is",
    "start": "105759",
    "end": "107920"
  },
  {
    "text": "ready to scale",
    "start": "107920",
    "end": "108880"
  },
  {
    "text": "this has been serverless in 100 seconds",
    "start": "108880",
    "end": "111200"
  },
  {
    "start": "110000",
    "end": "1006000"
  },
  {
    "text": "but if that sounded too good to be true",
    "start": "111200",
    "end": "112880"
  },
  {
    "text": "make sure to stay tuned because i've",
    "start": "112880",
    "end": "114479"
  },
  {
    "text": "invited dane from the filled stacks",
    "start": "114479",
    "end": "116399"
  },
  {
    "text": "youtube channel to show us how to build",
    "start": "116399",
    "end": "118240"
  },
  {
    "text": "a serverless backend for a big complex",
    "start": "118240",
    "end": "120719"
  },
  {
    "text": "project",
    "start": "120719",
    "end": "121280"
  },
  {
    "text": "if you're building anything with",
    "start": "121280",
    "end": "122399"
  },
  {
    "text": "firebase or flutter you'll definitely",
    "start": "122399",
    "end": "124240"
  },
  {
    "text": "want to follow his work",
    "start": "124240",
    "end": "126000"
  },
  {
    "text": "hey there my name is dane and i run a",
    "start": "126000",
    "end": "128160"
  },
  {
    "text": "little youtube channel called",
    "start": "128160",
    "end": "129679"
  },
  {
    "text": "falstax that's focused on sharing the",
    "start": "129679",
    "end": "131920"
  },
  {
    "text": "code that we use to build",
    "start": "131920",
    "end": "133360"
  },
  {
    "text": "apps for our clients over on my channel",
    "start": "133360",
    "end": "135920"
  },
  {
    "text": "we are building a product called",
    "start": "135920",
    "end": "137840"
  },
  {
    "text": "boxed out a set of software built for a",
    "start": "137840",
    "end": "140400"
  },
  {
    "text": "company that wants to run a",
    "start": "140400",
    "end": "142080"
  },
  {
    "text": "product or food delivery service",
    "start": "142080",
    "end": "144319"
  },
  {
    "text": "building one cloud function",
    "start": "144319",
    "end": "145760"
  },
  {
    "text": "is easy but how do you structure dozens",
    "start": "145760",
    "end": "148239"
  },
  {
    "text": "of functions to scale to real world",
    "start": "148239",
    "end": "150160"
  },
  {
    "text": "demands how do you ensure you have a",
    "start": "150160",
    "end": "152239"
  },
  {
    "text": "structured and maintainable",
    "start": "152239",
    "end": "153840"
  },
  {
    "text": "backend how does a back-end with only",
    "start": "153840",
    "end": "156080"
  },
  {
    "text": "serverless functions look",
    "start": "156080",
    "end": "157920"
  },
  {
    "text": "over the next 15 minutes you'll learn",
    "start": "157920",
    "end": "159599"
  },
  {
    "text": "how to build a serverless backend for",
    "start": "159599",
    "end": "161680"
  },
  {
    "text": "non-trivial apps",
    "start": "161680",
    "end": "162959"
  },
  {
    "text": "i'd like to start out by taking you",
    "start": "162959",
    "end": "164400"
  },
  {
    "text": "through a high-level overview of how the",
    "start": "164400",
    "end": "166400"
  },
  {
    "text": "back-end will be set up",
    "start": "166400",
    "end": "167840"
  },
  {
    "text": "this overview will go over the types of",
    "start": "167840",
    "end": "169920"
  },
  {
    "text": "functions we use",
    "start": "169920",
    "end": "170959"
  },
  {
    "text": "as well as the actual code structure the",
    "start": "170959",
    "end": "173599"
  },
  {
    "text": "backend is bold around the strings that",
    "start": "173599",
    "end": "175920"
  },
  {
    "text": "firebase possess",
    "start": "175920",
    "end": "177040"
  },
  {
    "text": "in the serverless cloud functions setup",
    "start": "177040",
    "end": "179519"
  },
  {
    "text": "focusing on those strings",
    "start": "179519",
    "end": "180879"
  },
  {
    "text": "we can break the system into two types",
    "start": "180879",
    "end": "182879"
  },
  {
    "text": "of functions",
    "start": "182879",
    "end": "184000"
  },
  {
    "text": "the two types of functions are restful",
    "start": "184000",
    "end": "186319"
  },
  {
    "text": "and reactive",
    "start": "186319",
    "end": "187440"
  },
  {
    "text": "a reactive function is a function that",
    "start": "187440",
    "end": "189760"
  },
  {
    "text": "will only run",
    "start": "189760",
    "end": "190800"
  },
  {
    "text": "in reaction to data or state that's",
    "start": "190800",
    "end": "193920"
  },
  {
    "text": "being updated on the back end",
    "start": "193920",
    "end": "195840"
  },
  {
    "text": "an example of this will be when a file",
    "start": "195840",
    "end": "197840"
  },
  {
    "text": "is uploaded to cloud storage",
    "start": "197840",
    "end": "199680"
  },
  {
    "text": "or the most common when a document or an",
    "start": "199680",
    "end": "202480"
  },
  {
    "text": "entry in the database has been updated a",
    "start": "202480",
    "end": "204959"
  },
  {
    "text": "restful function is a traditional",
    "start": "204959",
    "end": "206959"
  },
  {
    "text": "restful function which will run when a",
    "start": "206959",
    "end": "209519"
  },
  {
    "text": "client makes an http request",
    "start": "209519",
    "end": "212000"
  },
  {
    "text": "to the uri that the function is assigned",
    "start": "212000",
    "end": "214239"
  },
  {
    "text": "to now we can move on to",
    "start": "214239",
    "end": "215760"
  },
  {
    "text": "the code structure we have an enforced",
    "start": "215760",
    "end": "218400"
  },
  {
    "text": "code structure",
    "start": "218400",
    "end": "219360"
  },
  {
    "text": "that will help with organization of the",
    "start": "219360",
    "end": "221599"
  },
  {
    "text": "backend as well as the overall",
    "start": "221599",
    "end": "223599"
  },
  {
    "text": "maintenance as it grows",
    "start": "223599",
    "end": "225120"
  },
  {
    "text": "there's three major things to go over",
    "start": "225120",
    "end": "227120"
  },
  {
    "text": "number one each function will be",
    "start": "227120",
    "end": "229280"
  },
  {
    "text": "in its own dedicated file this is to get",
    "start": "229280",
    "end": "232159"
  },
  {
    "text": "rid of the natural",
    "start": "232159",
    "end": "233519"
  },
  {
    "text": "tendency when starting with firebase",
    "start": "233519",
    "end": "235439"
  },
  {
    "text": "cloud functions",
    "start": "235439",
    "end": "236640"
  },
  {
    "text": "to keep adding functions into the same",
    "start": "236640",
    "end": "238879"
  },
  {
    "text": "index file forcing it to grow bigger as",
    "start": "238879",
    "end": "241120"
  },
  {
    "text": "your backend requirements grow",
    "start": "241120",
    "end": "243120"
  },
  {
    "text": "and as a note the file name will be the",
    "start": "243120",
    "end": "245360"
  },
  {
    "text": "exact name",
    "start": "245360",
    "end": "246159"
  },
  {
    "text": "of the endpoint or function to keep",
    "start": "246159",
    "end": "248319"
  },
  {
    "text": "things easy to manage",
    "start": "248319",
    "end": "249680"
  },
  {
    "text": "this is not a requirement but i found it",
    "start": "249680",
    "end": "251599"
  },
  {
    "text": "to be quite useful",
    "start": "251599",
    "end": "253120"
  },
  {
    "text": "number two functions will be placed in a",
    "start": "253120",
    "end": "255519"
  },
  {
    "text": "folder titled either restful or reactive",
    "start": "255519",
    "end": "258639"
  },
  {
    "text": "number three the backend will be split",
    "start": "258639",
    "end": "260720"
  },
  {
    "text": "into different resource groups to ensure",
    "start": "260720",
    "end": "263040"
  },
  {
    "text": "a structured backend in production",
    "start": "263040",
    "end": "265520"
  },
  {
    "text": "as a quick example of this we can look",
    "start": "265520",
    "end": "267360"
  },
  {
    "text": "at the code structure below for the",
    "start": "267360",
    "end": "269199"
  },
  {
    "text": "product delivery service backend",
    "start": "269199",
    "end": "271440"
  },
  {
    "text": "there are three resource groups orders",
    "start": "271440",
    "end": "274080"
  },
  {
    "text": "payments",
    "start": "274080",
    "end": "274800"
  },
  {
    "text": "and users and in each of those resource",
    "start": "274800",
    "end": "277199"
  },
  {
    "text": "groups we are very active",
    "start": "277199",
    "end": "278479"
  },
  {
    "text": "and a restful folder this is the only",
    "start": "278479",
    "end": "280479"
  },
  {
    "text": "folder structure that you would need",
    "start": "280479",
    "end": "282320"
  },
  {
    "text": "the rest is handled by the fact that",
    "start": "282320",
    "end": "284320"
  },
  {
    "text": "each of the files will be",
    "start": "284320",
    "end": "285680"
  },
  {
    "text": "its own function now that you have a",
    "start": "285680",
    "end": "288160"
  },
  {
    "text": "basic overview of the code setup",
    "start": "288160",
    "end": "290320"
  },
  {
    "text": "let's start with the actual",
    "start": "290320",
    "end": "292400"
  },
  {
    "text": "implementation",
    "start": "292400",
    "end": "293919"
  },
  {
    "text": "we'll start by creating a new folder",
    "start": "293919",
    "end": "296320"
  },
  {
    "text": "called boxed out",
    "start": "296320",
    "end": "297600"
  },
  {
    "text": "and inside that folder create a new",
    "start": "297600",
    "end": "299600"
  },
  {
    "text": "folder called backend",
    "start": "299600",
    "end": "301280"
  },
  {
    "text": "then we can navigate into the backend",
    "start": "301280",
    "end": "303039"
  },
  {
    "text": "folder and run firebase",
    "start": "303039",
    "end": "304800"
  },
  {
    "text": "init then you have to select yes to",
    "start": "304800",
    "end": "307520"
  },
  {
    "text": "proceed when presented with the",
    "start": "307520",
    "end": "309440"
  },
  {
    "text": "functions to select",
    "start": "309440",
    "end": "310880"
  },
  {
    "text": "we'll choose firestore functions and",
    "start": "310880",
    "end": "313680"
  },
  {
    "text": "emulators",
    "start": "313680",
    "end": "314560"
  },
  {
    "text": "then we'll choose to create a new",
    "start": "314560",
    "end": "316400"
  },
  {
    "text": "project and we'll call out",
    "start": "316400",
    "end": "318000"
  },
  {
    "text": "boxed out dash backend we'll use that",
    "start": "318000",
    "end": "320800"
  },
  {
    "text": "same name for the project",
    "start": "320800",
    "end": "322400"
  },
  {
    "text": "name and then the firestore setup",
    "start": "322400",
    "end": "325440"
  },
  {
    "text": "usually fails on first try because you",
    "start": "325440",
    "end": "327919"
  },
  {
    "text": "have to click on the get",
    "start": "327919",
    "end": "329440"
  },
  {
    "text": "started button go to the url that has",
    "start": "329440",
    "end": "332560"
  },
  {
    "text": "been handed to you",
    "start": "332560",
    "end": "333759"
  },
  {
    "text": "you end up on the cloud firestore page",
    "start": "333759",
    "end": "336560"
  },
  {
    "text": "where you can click on create",
    "start": "336560",
    "end": "338080"
  },
  {
    "text": "database for now we'll start in test",
    "start": "338080",
    "end": "340560"
  },
  {
    "text": "mode i'm going to select",
    "start": "340560",
    "end": "341919"
  },
  {
    "text": "europe west because i'm in africa and",
    "start": "341919",
    "end": "344320"
  },
  {
    "text": "once that is complete",
    "start": "344320",
    "end": "345680"
  },
  {
    "text": "go back to your command line shell that",
    "start": "345680",
    "end": "348479"
  },
  {
    "text": "you've been using",
    "start": "348479",
    "end": "349440"
  },
  {
    "text": "then we can run firebase init again",
    "start": "349440",
    "end": "353840"
  },
  {
    "text": "we'll select firestore functions",
    "start": "354320",
    "end": "357919"
  },
  {
    "text": "and emulators and this time we'll use an",
    "start": "357919",
    "end": "360319"
  },
  {
    "text": "existing",
    "start": "360319",
    "end": "361120"
  },
  {
    "text": "project and we'll use the boxed out",
    "start": "361120",
    "end": "364240"
  },
  {
    "text": "backend that we just created then we'll",
    "start": "364240",
    "end": "366479"
  },
  {
    "text": "select the default",
    "start": "366479",
    "end": "367919"
  },
  {
    "text": "values for all the questions and for the",
    "start": "367919",
    "end": "370800"
  },
  {
    "text": "functions",
    "start": "370800",
    "end": "371440"
  },
  {
    "text": "setup will be using typescript i'm going",
    "start": "371440",
    "end": "373840"
  },
  {
    "text": "to say no to eslint for now",
    "start": "373840",
    "end": "375840"
  },
  {
    "text": "and then i will say yes to installing",
    "start": "375840",
    "end": "377919"
  },
  {
    "text": "the dependencies",
    "start": "377919",
    "end": "379520"
  },
  {
    "text": "when asked about the emulators we will",
    "start": "379520",
    "end": "381440"
  },
  {
    "text": "select functions and firestore press",
    "start": "381440",
    "end": "383759"
  },
  {
    "text": "enter to select",
    "start": "383759",
    "end": "384639"
  },
  {
    "text": "all the default ports and we'll",
    "start": "384639",
    "end": "387840"
  },
  {
    "text": "select to enable the emulator ui if you",
    "start": "387840",
    "end": "390319"
  },
  {
    "text": "don't have the emulators downloaded",
    "start": "390319",
    "end": "392000"
  },
  {
    "text": "select yes to download the emulators",
    "start": "392000",
    "end": "394240"
  },
  {
    "text": "and that should complete your firebase",
    "start": "394240",
    "end": "396639"
  },
  {
    "text": "functions",
    "start": "396639",
    "end": "397360"
  },
  {
    "text": "setup and if we open up this code now",
    "start": "397360",
    "end": "401840"
  },
  {
    "text": "you'll see a folder with another folder",
    "start": "401840",
    "end": "404479"
  },
  {
    "text": "inside called functions",
    "start": "404479",
    "end": "405919"
  },
  {
    "text": "and that is where the end will be",
    "start": "405919",
    "end": "407680"
  },
  {
    "text": "written the files in",
    "start": "407680",
    "end": "409520"
  },
  {
    "text": "the root folder describes the firestore",
    "start": "409520",
    "end": "412880"
  },
  {
    "text": "project and some of the overall rules in",
    "start": "412880",
    "end": "415520"
  },
  {
    "text": "the firestore project",
    "start": "415520",
    "end": "416880"
  },
  {
    "text": "now that we've configured the basics of",
    "start": "416880",
    "end": "418880"
  },
  {
    "text": "firebase functions project",
    "start": "418880",
    "end": "420800"
  },
  {
    "text": "we can implement the backend system as",
    "start": "420800",
    "end": "423199"
  },
  {
    "text": "described",
    "start": "423199",
    "end": "423919"
  },
  {
    "text": "at the beginning we'll start off by",
    "start": "423919",
    "end": "426240"
  },
  {
    "text": "installing the package",
    "start": "426240",
    "end": "427520"
  },
  {
    "text": "dedicated to using the system described",
    "start": "427520",
    "end": "430160"
  },
  {
    "text": "earlier",
    "start": "430160",
    "end": "430720"
  },
  {
    "text": "it's called firebase backend we'll",
    "start": "430720",
    "end": "432960"
  },
  {
    "text": "navigate into the functions folder",
    "start": "432960",
    "end": "435199"
  },
  {
    "text": "and then we'll run npm install firebase",
    "start": "435199",
    "end": "438160"
  },
  {
    "text": "dash",
    "start": "438160",
    "end": "438720"
  },
  {
    "text": "backend then you can open up your",
    "start": "438720",
    "end": "440599"
  },
  {
    "text": "index.ts file",
    "start": "440599",
    "end": "442160"
  },
  {
    "text": "in your source folder you can delete all",
    "start": "442160",
    "end": "444960"
  },
  {
    "text": "of the code in the file currently",
    "start": "444960",
    "end": "447039"
  },
  {
    "text": "then we'll import the function parser",
    "start": "447039",
    "end": "449919"
  },
  {
    "text": "from the firebase backend",
    "start": "449919",
    "end": "451680"
  },
  {
    "text": "then we can set the exports equal to",
    "start": "451680",
    "end": "454800"
  },
  {
    "text": "a newly constructed function parser",
    "start": "454800",
    "end": "458080"
  },
  {
    "text": "that takes in the current directory name",
    "start": "458080",
    "end": "461599"
  },
  {
    "text": "as well as the exports this will be all",
    "start": "461599",
    "end": "464720"
  },
  {
    "text": "the code you need in your index.ts file",
    "start": "464720",
    "end": "467199"
  },
  {
    "text": "regardless of how big your backend gets",
    "start": "467199",
    "end": "470319"
  },
  {
    "text": "and that's also all the setup we need",
    "start": "470319",
    "end": "472240"
  },
  {
    "text": "before we can actually start",
    "start": "472240",
    "end": "473599"
  },
  {
    "text": "writing any functions let's start with",
    "start": "473599",
    "end": "475840"
  },
  {
    "text": "something familiar",
    "start": "475840",
    "end": "476960"
  },
  {
    "text": "we'll create a restful endpoint on our",
    "start": "476960",
    "end": "479199"
  },
  {
    "text": "backend we'll start by creating a folder",
    "start": "479199",
    "end": "481919"
  },
  {
    "text": "the resource group and we'll call that",
    "start": "481919",
    "end": "484160"
  },
  {
    "text": "users",
    "start": "484160",
    "end": "485120"
  },
  {
    "text": "then in the folder we'll create another",
    "start": "485120",
    "end": "487120"
  },
  {
    "text": "folder called",
    "start": "487120",
    "end": "488240"
  },
  {
    "text": "restful and in that folder we'll create",
    "start": "488240",
    "end": "491199"
  },
  {
    "text": "a new file",
    "start": "491199",
    "end": "492160"
  },
  {
    "text": "called add paymentmethod.endpoint.ts",
    "start": "492160",
    "end": "496560"
  },
  {
    "text": "for any endpoint the file has to end in",
    "start": "496560",
    "end": "499520"
  },
  {
    "text": "dot",
    "start": "499520",
    "end": "499919"
  },
  {
    "text": "endpoint dot ts if it doesn't then it",
    "start": "499919",
    "end": "503120"
  },
  {
    "text": "won't be loaded as an http endpoint on",
    "start": "503120",
    "end": "505599"
  },
  {
    "text": "the backend",
    "start": "505599",
    "end": "506479"
  },
  {
    "text": "then we'll start off in the file by",
    "start": "506479",
    "end": "508639"
  },
  {
    "text": "importing request",
    "start": "508639",
    "end": "510000"
  },
  {
    "text": "and response from express and will also",
    "start": "510000",
    "end": "512959"
  },
  {
    "text": "import",
    "start": "512959",
    "end": "513599"
  },
  {
    "text": "endpoint and request type from the",
    "start": "513599",
    "end": "515518"
  },
  {
    "text": "firebase backend",
    "start": "515519",
    "end": "516880"
  },
  {
    "text": "then we will export a default new",
    "start": "516880",
    "end": "520479"
  },
  {
    "text": "endpoint the first value will pass in is",
    "start": "520479",
    "end": "523279"
  },
  {
    "text": "the name",
    "start": "523279",
    "end": "524080"
  },
  {
    "text": "of the endpoint we'll pass in the add",
    "start": "524080",
    "end": "526320"
  },
  {
    "text": "payment method",
    "start": "526320",
    "end": "527200"
  },
  {
    "text": "string the second parameter expects the",
    "start": "527200",
    "end": "530000"
  },
  {
    "text": "type of",
    "start": "530000",
    "end": "530640"
  },
  {
    "text": "endpoint that we are creating we'll pass",
    "start": "530640",
    "end": "533600"
  },
  {
    "text": "in request",
    "start": "533600",
    "end": "534560"
  },
  {
    "text": "type dot post and for the last parameter",
    "start": "534560",
    "end": "538080"
  },
  {
    "text": "we pass in the express endpoint handler",
    "start": "538080",
    "end": "541120"
  },
  {
    "text": "which is will be the actual code that's",
    "start": "541120",
    "end": "542959"
  },
  {
    "text": "executed when your endpoint is called",
    "start": "542959",
    "end": "545120"
  },
  {
    "text": "this is a function that takes in a",
    "start": "545120",
    "end": "547680"
  },
  {
    "text": "request",
    "start": "547680",
    "end": "548560"
  },
  {
    "text": "as well as a response and what we'll",
    "start": "548560",
    "end": "550560"
  },
  {
    "text": "write in this function",
    "start": "550560",
    "end": "551760"
  },
  {
    "text": "is just some code to read the values",
    "start": "551760",
    "end": "554959"
  },
  {
    "text": "sent in the request and then return that",
    "start": "554959",
    "end": "557519"
  },
  {
    "text": "in a different",
    "start": "557519",
    "end": "558399"
  },
  {
    "text": "format so we can know that it's working",
    "start": "558399",
    "end": "560720"
  },
  {
    "text": "we'll start by reading",
    "start": "560720",
    "end": "562160"
  },
  {
    "text": "out the card number and the card holder",
    "start": "562160",
    "end": "564800"
  },
  {
    "text": "from the request",
    "start": "564800",
    "end": "565839"
  },
  {
    "text": "body then we'll create a new value",
    "start": "565839",
    "end": "568160"
  },
  {
    "text": "called payment",
    "start": "568160",
    "end": "569279"
  },
  {
    "text": "token that has these two values",
    "start": "569279",
    "end": "571600"
  },
  {
    "text": "concatenated with an underscore in the",
    "start": "571600",
    "end": "573839"
  },
  {
    "text": "middle and then we'll return",
    "start": "573839",
    "end": "575360"
  },
  {
    "text": "a response with a status 201 and we'll",
    "start": "575360",
    "end": "578640"
  },
  {
    "text": "send back",
    "start": "578640",
    "end": "579519"
  },
  {
    "text": "a map with a key token and we'll assign",
    "start": "579519",
    "end": "582720"
  },
  {
    "text": "it the payment token to make maintenance",
    "start": "582720",
    "end": "585040"
  },
  {
    "text": "easy as the code base grows",
    "start": "585040",
    "end": "586640"
  },
  {
    "text": "remember the tip that i mentioned give",
    "start": "586640",
    "end": "588560"
  },
  {
    "text": "your file name the same name",
    "start": "588560",
    "end": "590320"
  },
  {
    "text": "as your function endpoint that way when",
    "start": "590320",
    "end": "592640"
  },
  {
    "text": "you are debugging an error in production",
    "start": "592640",
    "end": "594720"
  },
  {
    "text": "you know exactly which file to go to to",
    "start": "594720",
    "end": "596800"
  },
  {
    "text": "find your function",
    "start": "596800",
    "end": "598000"
  },
  {
    "text": "now we can go ahead and test out this",
    "start": "598000",
    "end": "600399"
  },
  {
    "text": "function to test this out we can simply",
    "start": "600399",
    "end": "602480"
  },
  {
    "text": "run",
    "start": "602480",
    "end": "602880"
  },
  {
    "text": "npm run serve this will build the",
    "start": "602880",
    "end": "606079"
  },
  {
    "text": "typescript",
    "start": "606079",
    "end": "606880"
  },
  {
    "text": "code and then serve the functions",
    "start": "606880",
    "end": "608959"
  },
  {
    "text": "locally through the emulator",
    "start": "608959",
    "end": "611040"
  },
  {
    "text": "if this command is successful you should",
    "start": "611040",
    "end": "613839"
  },
  {
    "text": "see",
    "start": "613839",
    "end": "614240"
  },
  {
    "text": "the following in your console as you can",
    "start": "614240",
    "end": "616800"
  },
  {
    "text": "see",
    "start": "616800",
    "end": "617279"
  },
  {
    "text": "the api has been deployed under",
    "start": "617279",
    "end": "620320"
  },
  {
    "text": "this url which ends in users dash",
    "start": "620320",
    "end": "623600"
  },
  {
    "text": "api each resource group that you create",
    "start": "623600",
    "end": "626800"
  },
  {
    "text": "will have all the api endpoints under",
    "start": "626800",
    "end": "630079"
  },
  {
    "text": "the resource group",
    "start": "630079",
    "end": "631200"
  },
  {
    "text": "dash api with this deployed let's see if",
    "start": "631200",
    "end": "634160"
  },
  {
    "text": "we can make a post to it and get the",
    "start": "634160",
    "end": "635920"
  },
  {
    "text": "expected",
    "start": "635920",
    "end": "636560"
  },
  {
    "text": "response for this i will be using",
    "start": "636560",
    "end": "638959"
  },
  {
    "text": "postman",
    "start": "638959",
    "end": "639760"
  },
  {
    "text": "we'll take the url that the api has been",
    "start": "639760",
    "end": "641839"
  },
  {
    "text": "deployed to",
    "start": "641839",
    "end": "642800"
  },
  {
    "text": "and paste that in the postman url field",
    "start": "642800",
    "end": "645839"
  },
  {
    "text": "we can add our actual",
    "start": "645839",
    "end": "647920"
  },
  {
    "text": "endpoint name at the end of it slash add",
    "start": "647920",
    "end": "651120"
  },
  {
    "text": "payment method we'll change the request",
    "start": "651120",
    "end": "654240"
  },
  {
    "text": "type to post and then for the body we",
    "start": "654240",
    "end": "656720"
  },
  {
    "text": "will pass in",
    "start": "656720",
    "end": "657760"
  },
  {
    "text": "payroll jason blob the first value will",
    "start": "657760",
    "end": "661279"
  },
  {
    "text": "be",
    "start": "661279",
    "end": "661519"
  },
  {
    "text": "card number i'll give it a basic value",
    "start": "661519",
    "end": "663760"
  },
  {
    "text": "of one two three four five",
    "start": "663760",
    "end": "665519"
  },
  {
    "text": "six seven and the second value will be",
    "start": "665519",
    "end": "667600"
  },
  {
    "text": "card underscore holder and for the value",
    "start": "667600",
    "end": "670000"
  },
  {
    "text": "we'll pass in",
    "start": "670000",
    "end": "670880"
  },
  {
    "text": "full stacks when i execute this function",
    "start": "670880",
    "end": "673120"
  },
  {
    "text": "now we should get back a token",
    "start": "673120",
    "end": "675519"
  },
  {
    "text": "that has the card number followed by",
    "start": "675519",
    "end": "677760"
  },
  {
    "text": "underscore and then with a card holder",
    "start": "677760",
    "end": "679920"
  },
  {
    "text": "at the end of it",
    "start": "679920",
    "end": "680720"
  },
  {
    "text": "and that's it that's how we create an",
    "start": "680720",
    "end": "682480"
  },
  {
    "text": "endpoint and that's how all endpoints",
    "start": "682480",
    "end": "684320"
  },
  {
    "text": "going forward will be created",
    "start": "684320",
    "end": "686079"
  },
  {
    "text": "then you can stop your emulators from",
    "start": "686079",
    "end": "688399"
  },
  {
    "text": "running and will move on to creating a",
    "start": "688399",
    "end": "690720"
  },
  {
    "text": "reactive",
    "start": "690720",
    "end": "691600"
  },
  {
    "text": "function to demonstrate this we'll add a",
    "start": "691600",
    "end": "693760"
  },
  {
    "text": "function that will fire when a new user",
    "start": "693760",
    "end": "696480"
  },
  {
    "text": "is created in the firestore database",
    "start": "696480",
    "end": "698959"
  },
  {
    "text": "we'll create a new folder in the users",
    "start": "698959",
    "end": "701040"
  },
  {
    "text": "folder called reactive and inside that",
    "start": "701040",
    "end": "703519"
  },
  {
    "text": "folder",
    "start": "703519",
    "end": "704079"
  },
  {
    "text": "will create a new file called on",
    "start": "704079",
    "end": "708320"
  },
  {
    "text": "usercreated.function.ts",
    "start": "708519",
    "end": "709839"
  },
  {
    "text": "and as you can imagine the",
    "start": "709839",
    "end": "712440"
  },
  {
    "text": "part.function.ts",
    "start": "712440",
    "end": "713600"
  },
  {
    "text": "is very important that's how we know",
    "start": "713600",
    "end": "715920"
  },
  {
    "text": "which file to load as a reactive cloud",
    "start": "715920",
    "end": "718399"
  },
  {
    "text": "function we'll start off by importing",
    "start": "718399",
    "end": "720399"
  },
  {
    "text": "the firebase functions as",
    "start": "720399",
    "end": "722240"
  },
  {
    "text": "functions and then on the exports we'll",
    "start": "722240",
    "end": "724560"
  },
  {
    "text": "create a new",
    "start": "724560",
    "end": "725839"
  },
  {
    "text": "function called on user created and",
    "start": "725839",
    "end": "728480"
  },
  {
    "text": "we'll assign that",
    "start": "728480",
    "end": "729600"
  },
  {
    "text": "to the oncreate function callback",
    "start": "729600",
    "end": "733360"
  },
  {
    "text": "provided by a document from firestore",
    "start": "733360",
    "end": "736399"
  },
  {
    "text": "to access that we'll index into",
    "start": "736399",
    "end": "738480"
  },
  {
    "text": "functions",
    "start": "738480",
    "end": "741040"
  },
  {
    "text": "go to firestore then supply the document",
    "start": "742000",
    "end": "745040"
  },
  {
    "text": "pattern",
    "start": "745040",
    "end": "745600"
  },
  {
    "text": "that we would like to listen to in our",
    "start": "745600",
    "end": "748240"
  },
  {
    "text": "case we want to listen to the users",
    "start": "748240",
    "end": "750639"
  },
  {
    "text": "collection",
    "start": "750639",
    "end": "751360"
  },
  {
    "text": "and check for any new user id and lastly",
    "start": "751360",
    "end": "754480"
  },
  {
    "text": "we want to listen",
    "start": "754480",
    "end": "755519"
  },
  {
    "text": "to the oncreate function callback this",
    "start": "755519",
    "end": "758720"
  },
  {
    "text": "takes in",
    "start": "758720",
    "end": "759440"
  },
  {
    "text": "a callback function that provides us",
    "start": "759440",
    "end": "762160"
  },
  {
    "text": "with the user's",
    "start": "762160",
    "end": "763279"
  },
  {
    "text": "snapshot as well as the context of this",
    "start": "763279",
    "end": "766079"
  },
  {
    "text": "event trigger",
    "start": "766079",
    "end": "767200"
  },
  {
    "text": "the data for this document can be",
    "start": "767200",
    "end": "769440"
  },
  {
    "text": "retrieved by calling the data function",
    "start": "769440",
    "end": "771839"
  },
  {
    "text": "on the user snapshot",
    "start": "771839",
    "end": "773519"
  },
  {
    "text": "to avoid getting off topic we're simply",
    "start": "773519",
    "end": "775920"
  },
  {
    "text": "going to",
    "start": "775920",
    "end": "776720"
  },
  {
    "text": "log out some text that says that we have",
    "start": "776720",
    "end": "779200"
  },
  {
    "text": "sent an email to",
    "start": "779200",
    "end": "780639"
  },
  {
    "text": "the email value on the data from the",
    "start": "780639",
    "end": "782880"
  },
  {
    "text": "document to test out a reactive",
    "start": "782880",
    "end": "785040"
  },
  {
    "text": "function you have to start all of the",
    "start": "785040",
    "end": "787279"
  },
  {
    "text": "emulators",
    "start": "787279",
    "end": "788399"
  },
  {
    "text": "so the npm run sir function won't work",
    "start": "788399",
    "end": "791920"
  },
  {
    "text": "because that only deploys",
    "start": "791920",
    "end": "793519"
  },
  {
    "text": "the functions to the emulator so to run",
    "start": "793519",
    "end": "795600"
  },
  {
    "text": "this time we'll first run",
    "start": "795600",
    "end": "797360"
  },
  {
    "text": "npm run bold and once that's complete",
    "start": "797360",
    "end": "800000"
  },
  {
    "text": "we'll run",
    "start": "800000",
    "end": "800800"
  },
  {
    "text": "firebase emulators colon start this will",
    "start": "800800",
    "end": "803920"
  },
  {
    "text": "start up",
    "start": "803920",
    "end": "804480"
  },
  {
    "text": "the functions as well as the firestore",
    "start": "804480",
    "end": "806959"
  },
  {
    "text": "emulator that we selected at the",
    "start": "806959",
    "end": "808639"
  },
  {
    "text": "beginning",
    "start": "808639",
    "end": "809360"
  },
  {
    "text": "and then you'll see two urls one for the",
    "start": "809360",
    "end": "812079"
  },
  {
    "text": "functions emulator and one for the",
    "start": "812079",
    "end": "813839"
  },
  {
    "text": "firestore",
    "start": "813839",
    "end": "814639"
  },
  {
    "text": "emulator in addition to that we can see",
    "start": "814639",
    "end": "816959"
  },
  {
    "text": "that we also now have a new function",
    "start": "816959",
    "end": "819040"
  },
  {
    "text": "deployed",
    "start": "819040",
    "end": "820000"
  },
  {
    "text": "called on user created we will go ahead",
    "start": "820000",
    "end": "823120"
  },
  {
    "text": "and create",
    "start": "823120",
    "end": "823920"
  },
  {
    "text": "an actual document in the users",
    "start": "823920",
    "end": "825600"
  },
  {
    "text": "collection and that function",
    "start": "825600",
    "end": "827440"
  },
  {
    "text": "should fire on its own which is why it's",
    "start": "827440",
    "end": "829839"
  },
  {
    "text": "called a reactive function",
    "start": "829839",
    "end": "831519"
  },
  {
    "text": "you can open up the firestore emulator",
    "start": "831519",
    "end": "834240"
  },
  {
    "text": "url",
    "start": "834240",
    "end": "834880"
  },
  {
    "text": "then you can click on start collection",
    "start": "834880",
    "end": "837199"
  },
  {
    "text": "we'll give it a collection id of users",
    "start": "837199",
    "end": "839600"
  },
  {
    "text": "and for the field value we know that we",
    "start": "839600",
    "end": "842000"
  },
  {
    "text": "are expecting an",
    "start": "842000",
    "end": "843279"
  },
  {
    "text": "email i'll be so kind to give you my",
    "start": "843279",
    "end": "845279"
  },
  {
    "text": "actual email address in case you have",
    "start": "845279",
    "end": "847120"
  },
  {
    "text": "any questions",
    "start": "847120",
    "end": "848000"
  },
  {
    "text": "which is dane at faultstacks.com",
    "start": "848000",
    "end": "853519"
  },
  {
    "text": "if i click save and that document is",
    "start": "853519",
    "end": "855920"
  },
  {
    "text": "created",
    "start": "855920",
    "end": "856560"
  },
  {
    "text": "when i open up the console there should",
    "start": "856560",
    "end": "858959"
  },
  {
    "text": "be",
    "start": "858959",
    "end": "859600"
  },
  {
    "text": "logs saying that we've sent an email to",
    "start": "859600",
    "end": "862240"
  },
  {
    "text": "this email address",
    "start": "862240",
    "end": "863600"
  },
  {
    "text": "it tells us that it begins the execution",
    "start": "863600",
    "end": "866160"
  },
  {
    "text": "and then it sends the email",
    "start": "866160",
    "end": "867680"
  },
  {
    "text": "and that's it you've created a reactive",
    "start": "867680",
    "end": "870000"
  },
  {
    "text": "function as well as an",
    "start": "870000",
    "end": "871600"
  },
  {
    "text": "http endpoint going further when you",
    "start": "871600",
    "end": "874480"
  },
  {
    "text": "want to expand your backend",
    "start": "874480",
    "end": "876320"
  },
  {
    "text": "you simply create a new file in the",
    "start": "876320",
    "end": "878399"
  },
  {
    "text": "dedicated folder",
    "start": "878399",
    "end": "879600"
  },
  {
    "text": "and it will be added automatically to",
    "start": "879600",
    "end": "881600"
  },
  {
    "text": "your backend when you deploy this one",
    "start": "881600",
    "end": "883760"
  },
  {
    "text": "last thing i wanted",
    "start": "883760",
    "end": "884959"
  },
  {
    "text": "to show you which is to improve the code",
    "start": "884959",
    "end": "887600"
  },
  {
    "text": "setup the way that the default",
    "start": "887600",
    "end": "889440"
  },
  {
    "text": "typescript project is set up is not",
    "start": "889440",
    "end": "891440"
  },
  {
    "text": "sufficient for consistent deployments",
    "start": "891440",
    "end": "893920"
  },
  {
    "text": "and debugging",
    "start": "893920",
    "end": "894800"
  },
  {
    "text": "and because of that we'll add some",
    "start": "894800",
    "end": "896079"
  },
  {
    "text": "additional things into our project we'll",
    "start": "896079",
    "end": "897920"
  },
  {
    "text": "start by making sure that the old",
    "start": "897920",
    "end": "899839"
  },
  {
    "text": "function code",
    "start": "899839",
    "end": "900880"
  },
  {
    "text": "doesn't lurk around when we're testing",
    "start": "900880",
    "end": "902959"
  },
  {
    "text": "any new changes",
    "start": "902959",
    "end": "904079"
  },
  {
    "text": "to fix that we'll add a new package into",
    "start": "904079",
    "end": "906560"
  },
  {
    "text": "the functions folder called",
    "start": "906560",
    "end": "908079"
  },
  {
    "text": "remraf we'll run npm install",
    "start": "908079",
    "end": "911360"
  },
  {
    "text": "d remraf this will install it as a",
    "start": "911360",
    "end": "914399"
  },
  {
    "text": "development",
    "start": "914399",
    "end": "915360"
  },
  {
    "text": "dependency then you can open up your",
    "start": "915360",
    "end": "917959"
  },
  {
    "text": "package.json file",
    "start": "917959",
    "end": "919519"
  },
  {
    "text": "and we'll add two new scripts into the",
    "start": "919519",
    "end": "921959"
  },
  {
    "text": "package.json",
    "start": "921959",
    "end": "923120"
  },
  {
    "text": "above the bold script we'll add a clean",
    "start": "923120",
    "end": "926240"
  },
  {
    "text": "script which we'll call",
    "start": "926240",
    "end": "927680"
  },
  {
    "text": "rimref and pass in the lib directory",
    "start": "927680",
    "end": "930959"
  },
  {
    "text": "and then we'll add our second script",
    "start": "930959",
    "end": "933440"
  },
  {
    "text": "which is called",
    "start": "933440",
    "end": "934320"
  },
  {
    "text": "pre-build and this will call the clean",
    "start": "934320",
    "end": "936959"
  },
  {
    "text": "script",
    "start": "936959",
    "end": "937759"
  },
  {
    "text": "the pre-build will always run before",
    "start": "937759",
    "end": "939759"
  },
  {
    "text": "build which pulls our typescript meaning",
    "start": "939759",
    "end": "941920"
  },
  {
    "text": "the old code will be deleted",
    "start": "941920",
    "end": "943600"
  },
  {
    "text": "before we build the new code and then to",
    "start": "943600",
    "end": "946000"
  },
  {
    "text": "deploy we can run",
    "start": "946000",
    "end": "947120"
  },
  {
    "text": "npm run build as you see there will now",
    "start": "947120",
    "end": "950000"
  },
  {
    "text": "be",
    "start": "950000",
    "end": "950639"
  },
  {
    "text": "three scripts that's being executed",
    "start": "950639",
    "end": "952560"
  },
  {
    "text": "because of the two additional ones we",
    "start": "952560",
    "end": "954160"
  },
  {
    "text": "added and then we'll run",
    "start": "954160",
    "end": "955440"
  },
  {
    "text": "npm run deploy this will only deploy the",
    "start": "955440",
    "end": "958480"
  },
  {
    "text": "functions to your backend",
    "start": "958480",
    "end": "960240"
  },
  {
    "text": "when the deployment is complete you'll",
    "start": "960240",
    "end": "962079"
  },
  {
    "text": "see your api link printed out",
    "start": "962079",
    "end": "964320"
  },
  {
    "text": "and we can do the exact same test with",
    "start": "964320",
    "end": "966720"
  },
  {
    "text": "postman that we did earlier",
    "start": "966720",
    "end": "968399"
  },
  {
    "text": "this is quite a new package and a way of",
    "start": "968399",
    "end": "970560"
  },
  {
    "text": "developing a back-end",
    "start": "970560",
    "end": "971839"
  },
  {
    "text": "on firebase for us but it provides a",
    "start": "971839",
    "end": "974480"
  },
  {
    "text": "clear path towards a",
    "start": "974480",
    "end": "976079"
  },
  {
    "text": "large and maintainable firebase product",
    "start": "976079",
    "end": "979040"
  },
  {
    "text": "if you want to see this being used in",
    "start": "979040",
    "end": "980959"
  },
  {
    "text": "development please check out my channel",
    "start": "980959",
    "end": "983120"
  },
  {
    "text": "where i'll be doing backend and",
    "start": "983120",
    "end": "984720"
  },
  {
    "text": "front-end work on a product over the",
    "start": "984720",
    "end": "986959"
  },
  {
    "text": "next",
    "start": "986959",
    "end": "987600"
  },
  {
    "text": "year thank you jeff for having me on",
    "start": "987600",
    "end": "989360"
  },
  {
    "text": "this awesome channel and thank you to",
    "start": "989360",
    "end": "991279"
  },
  {
    "text": "the contributors lou allen android that",
    "start": "991279",
    "end": "993519"
  },
  {
    "text": "helped me get the packages ready for",
    "start": "993519",
    "end": "995360"
  },
  {
    "text": "this tutorial",
    "start": "995360",
    "end": "996240"
  },
  {
    "text": "thank you guys for watching and i hope i",
    "start": "996240",
    "end": "998079"
  },
  {
    "text": "see you over at the full stacks channel",
    "start": "998079",
    "end": "1000480"
  },
  {
    "text": "thanks for watching and i will see you",
    "start": "1000480",
    "end": "1002399"
  },
  {
    "text": "in the next one",
    "start": "1002399",
    "end": "1007680"
  }
]