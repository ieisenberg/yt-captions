[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "the worst thing about ng Rx is the sheer",
    "start": "30",
    "end": "2610"
  },
  {
    "text": "amount of code that it takes to build",
    "start": "2610",
    "end": "4020"
  },
  {
    "text": "anything but you're rewarded for that",
    "start": "4020",
    "end": "5879"
  },
  {
    "text": "extra effort with a global data store",
    "start": "5879",
    "end": "7830"
  },
  {
    "text": "that's easy to test and debug and cool",
    "start": "7830",
    "end": "10230"
  },
  {
    "text": "things like the Redux dev tools here on",
    "start": "10230",
    "end": "12269"
  },
  {
    "text": "the right to address the amount of",
    "start": "12269",
    "end": "14009"
  },
  {
    "text": "boilerplate code in ng rx they recently",
    "start": "14009",
    "end": "16410"
  },
  {
    "text": "released a new package called entity it",
    "start": "16410",
    "end": "18359"
  },
  {
    "text": "provides a standardized way to manage",
    "start": "18359",
    "end": "20580"
  },
  {
    "text": "collections of objects and perform basic",
    "start": "20580",
    "end": "22970"
  },
  {
    "text": "credence on them in this episode I'm",
    "start": "22970",
    "end": "25619"
  },
  {
    "text": "going to use entity to build this basic",
    "start": "25619",
    "end": "27689"
  },
  {
    "text": "Pizza ordering app here on the left and",
    "start": "27689",
    "end": "29550"
  },
  {
    "text": "I'm also going to show you how to build",
    "start": "29550",
    "end": "31019"
  },
  {
    "text": "feature modules with ng Rx if you're new",
    "start": "31019",
    "end": "33719"
  },
  {
    "text": "to my channel make sure to subscribe and",
    "start": "33719",
    "end": "35520"
  },
  {
    "text": "if you're new to ng Rx check out my",
    "start": "35520",
    "end": "37500"
  },
  {
    "text": "previous QuickStart tutorial which is a",
    "start": "37500",
    "end": "39270"
  },
  {
    "text": "much easier introduction into these",
    "start": "39270",
    "end": "41129"
  },
  {
    "text": "concepts I am starting out with a brand",
    "start": "41129",
    "end": "44010"
  },
  {
    "start": "42000",
    "end": "60000"
  },
  {
    "text": "new angular app called ng rx pizza so",
    "start": "44010",
    "end": "46800"
  },
  {
    "text": "will CD into that directory and then",
    "start": "46800",
    "end": "48750"
  },
  {
    "text": "install store and entity from there I",
    "start": "48750",
    "end": "52110"
  },
  {
    "text": "create a new module called pizza this",
    "start": "52110",
    "end": "54180"
  },
  {
    "text": "will be our feature module then I'm",
    "start": "54180",
    "end": "56340"
  },
  {
    "text": "going to add a single component to it",
    "start": "56340",
    "end": "57870"
  },
  {
    "text": "we'll just call that component pizza",
    "start": "57870",
    "end": "59789"
  },
  {
    "text": "order then we'll open the module up and",
    "start": "59789",
    "end": "62579"
  },
  {
    "text": "import the store module then I'm",
    "start": "62579",
    "end": "65220"
  },
  {
    "text": "importing a reducer that has not yet",
    "start": "65220",
    "end": "67049"
  },
  {
    "text": "been created but we're going to get into",
    "start": "67049",
    "end": "69090"
  },
  {
    "text": "that a little bit later we're going to",
    "start": "69090",
    "end": "71070"
  },
  {
    "text": "add the store module to the import",
    "start": "71070",
    "end": "72869"
  },
  {
    "text": "section and then call for feature with",
    "start": "72869",
    "end": "75420"
  },
  {
    "text": "the name of our reducer and the reducer",
    "start": "75420",
    "end": "77580"
  },
  {
    "text": "itself",
    "start": "77580",
    "end": "78240"
  },
  {
    "text": "this approach is trivial here because we",
    "start": "78240",
    "end": "80250"
  },
  {
    "text": "only have one feature but when you have",
    "start": "80250",
    "end": "81840"
  },
  {
    "text": "multiple features this will help keep",
    "start": "81840",
    "end": "83220"
  },
  {
    "text": "your code much more organized so the",
    "start": "83220",
    "end": "85560"
  },
  {
    "text": "next step is to create a directory",
    "start": "85560",
    "end": "87180"
  },
  {
    "text": "called reducers in the app directory and",
    "start": "87180",
    "end": "89610"
  },
  {
    "text": "then inside that create a file called",
    "start": "89610",
    "end": "91470"
  },
  {
    "text": "index is then we'll import action",
    "start": "91470",
    "end": "94740"
  },
  {
    "text": "reducer map and our pizza reducer and",
    "start": "94740",
    "end": "97470"
  },
  {
    "text": "then we'll export all of our reducers as",
    "start": "97470",
    "end": "100170"
  },
  {
    "text": "a single constant in this example we",
    "start": "100170",
    "end": "102360"
  },
  {
    "text": "only have one but you can imagine how",
    "start": "102360",
    "end": "103799"
  },
  {
    "text": "much more convenient this would be if",
    "start": "103799",
    "end": "105299"
  },
  {
    "text": "you had 10 different reducers to manage",
    "start": "105299",
    "end": "107299"
  },
  {
    "text": "at this point we're ready to jump over",
    "start": "107299",
    "end": "109860"
  },
  {
    "text": "to the app module then import the store",
    "start": "109860",
    "end": "112290"
  },
  {
    "text": "module as well as optionally the dev",
    "start": "112290",
    "end": "114509"
  },
  {
    "text": "tools module and then we're going to",
    "start": "114509",
    "end": "117000"
  },
  {
    "text": "import our pizza module that we just",
    "start": "117000",
    "end": "119250"
  },
  {
    "text": "created as well as the reducers index",
    "start": "119250",
    "end": "122219"
  },
  {
    "text": "file that we just created now we can",
    "start": "122219",
    "end": "124560"
  },
  {
    "text": "just import the store module for route",
    "start": "124560",
    "end": "126990"
  },
  {
    "text": "and pass it the reducers object then we",
    "start": "126990",
    "end": "130020"
  },
  {
    "text": "can go ahead and add dev tools here and",
    "start": "130020",
    "end": "132239"
  },
  {
    "text": "we'll also add our",
    "start": "132239",
    "end": "133980"
  },
  {
    "text": "to module 2 imports that's it for our",
    "start": "133980",
    "end": "136440"
  },
  {
    "text": "feature module now we can get into",
    "start": "136440",
    "end": "138090"
  },
  {
    "text": "entity to start building an actual",
    "start": "138090",
    "end": "139849"
  },
  {
    "text": " I'm going to start by building a",
    "start": "139849",
    "end": "142799"
  },
  {
    "start": "141000",
    "end": "239000"
  },
  {
    "text": "pizza reducer ts file inside the pizza",
    "start": "142799",
    "end": "145590"
  },
  {
    "text": "directory and then I'm importing actions",
    "start": "145590",
    "end": "148530"
  },
  {
    "text": "here which we haven't created yet but",
    "start": "148530",
    "end": "149879"
  },
  {
    "text": "we'll do that in the next step and a few",
    "start": "149879",
    "end": "151830"
  },
  {
    "text": "other ng rx parts that we'll see in use",
    "start": "151830",
    "end": "153780"
  },
  {
    "text": "here in just a second the first thing",
    "start": "153780",
    "end": "155879"
  },
  {
    "text": "we'll do is create a basic interface",
    "start": "155879",
    "end": "157440"
  },
  {
    "text": "that defines how our data is going to",
    "start": "157440",
    "end": "159750"
  },
  {
    "text": "look the pizza interface is only going",
    "start": "159750",
    "end": "161670"
  },
  {
    "text": "to have an ID and a size so extremely",
    "start": "161670",
    "end": "164069"
  },
  {
    "text": "simple here then we use this interface",
    "start": "164069",
    "end": "166200"
  },
  {
    "text": "to create an entity adapter which is",
    "start": "166200",
    "end": "168180"
  },
  {
    "text": "going to format the data in a specific",
    "start": "168180",
    "end": "169920"
  },
  {
    "text": "way as well as provide access to a",
    "start": "169920",
    "end": "172019"
  },
  {
    "text": "number of different helpers for",
    "start": "172019",
    "end": "173250"
  },
  {
    "text": "performing crud operations the next step",
    "start": "173250",
    "end": "176400"
  },
  {
    "text": "is to make sure our Pizza interface is",
    "start": "176400",
    "end": "178079"
  },
  {
    "text": "part of the main app state we do that by",
    "start": "178079",
    "end": "180450"
  },
  {
    "text": "extending the state interface with the",
    "start": "180450",
    "end": "182459"
  },
  {
    "text": "entity state interface type to our pizza",
    "start": "182459",
    "end": "184980"
  },
  {
    "text": "interface that sounded extremely",
    "start": "184980",
    "end": "187290"
  },
  {
    "text": "confusing so let's take a closer look at",
    "start": "187290",
    "end": "189540"
  },
  {
    "text": "what the entity state really is by",
    "start": "189540",
    "end": "191340"
  },
  {
    "text": "creating a plain JavaScript object out",
    "start": "191340",
    "end": "193680"
  },
  {
    "text": "of it the entity state is just an",
    "start": "193680",
    "end": "195810"
  },
  {
    "text": "interface that gives our data a",
    "start": "195810",
    "end": "197280"
  },
  {
    "text": "consistent structure first we have an",
    "start": "197280",
    "end": "200160"
  },
  {
    "text": "array of IDs and this makes it possible",
    "start": "200160",
    "end": "202169"
  },
  {
    "text": "to order all of our entities then",
    "start": "202169",
    "end": "204750"
  },
  {
    "text": "entities is an object where each key and",
    "start": "204750",
    "end": "207450"
  },
  {
    "text": "that object corresponds to an ID in the",
    "start": "207450",
    "end": "210150"
  },
  {
    "text": "array this structure means you can keep",
    "start": "210150",
    "end": "212459"
  },
  {
    "text": "track of order based on the index in the",
    "start": "212459",
    "end": "214590"
  },
  {
    "text": "array or you can just grab a single",
    "start": "214590",
    "end": "216720"
  },
  {
    "text": "object by calling the key and the",
    "start": "216720",
    "end": "218609"
  },
  {
    "text": "entities object so we're just going to",
    "start": "218609",
    "end": "220950"
  },
  {
    "text": "use this default object as our initial",
    "start": "220950",
    "end": "223319"
  },
  {
    "text": "state to do that we define a new",
    "start": "223319",
    "end": "225389"
  },
  {
    "text": "variable called initial state and then",
    "start": "225389",
    "end": "227609"
  },
  {
    "text": "on the adapter we call get initial state",
    "start": "227609",
    "end": "230220"
  },
  {
    "text": "and finally pass it the default data",
    "start": "230220",
    "end": "232739"
  },
  {
    "text": "that we want to set before we actually",
    "start": "232739",
    "end": "234870"
  },
  {
    "text": "create the reducer function I'm going to",
    "start": "234870",
    "end": "236970"
  },
  {
    "text": "create some actions to use in that",
    "start": "236970",
    "end": "238739"
  },
  {
    "text": "reducer if you're already familiar with",
    "start": "238739",
    "end": "241049"
  },
  {
    "start": "239000",
    "end": "314000"
  },
  {
    "text": "ng rx the actions work in exactly the",
    "start": "241049",
    "end": "243450"
  },
  {
    "text": "same way as they do with the normal",
    "start": "243450",
    "end": "244950"
  },
  {
    "text": "library as they do an entity let's start",
    "start": "244950",
    "end": "247590"
  },
  {
    "text": "by creating three simple actions create",
    "start": "247590",
    "end": "250349"
  },
  {
    "text": "update and delete for each of these will",
    "start": "250349",
    "end": "253590"
  },
  {
    "text": "create its own custom class and that",
    "start": "253590",
    "end": "256169"
  },
  {
    "text": "class will have a data payload that",
    "start": "256169",
    "end": "258120"
  },
  {
    "text": "needs to be formatted in a certain way",
    "start": "258120",
    "end": "260160"
  },
  {
    "text": "it's pretty intuitive the data is",
    "start": "260160",
    "end": "262590"
  },
  {
    "text": "defined in the constructor and for a",
    "start": "262590",
    "end": "264870"
  },
  {
    "text": "create operation we just want to pass it",
    "start": "264870",
    "end": "267070"
  },
  {
    "text": "data that represents that object so in",
    "start": "267070",
    "end": "269110"
  },
  {
    "text": "this case it would just be a pizza",
    "start": "269110",
    "end": "270730"
  },
  {
    "text": "object that adheres to our Pizza",
    "start": "270730",
    "end": "272500"
  },
  {
    "text": "interphase the update action is a little",
    "start": "272500",
    "end": "274900"
  },
  {
    "text": "more interesting we want to change an",
    "start": "274900",
    "end": "276970"
  },
  {
    "text": "existing object without affecting all of",
    "start": "276970",
    "end": "278860"
  },
  {
    "text": "its other already defined properties so",
    "start": "278860",
    "end": "281620"
  },
  {
    "text": "to do that we'll go ahead and pass the",
    "start": "281620",
    "end": "283360"
  },
  {
    "text": "constructor an ID and then we'll also",
    "start": "283360",
    "end": "285970"
  },
  {
    "text": "pass it some data but only do a partial",
    "start": "285970",
    "end": "288580"
  },
  {
    "text": "on the pizza interface so this allows us",
    "start": "288580",
    "end": "290890"
  },
  {
    "text": "to update single properties on an object",
    "start": "290890",
    "end": "293500"
  },
  {
    "text": "with that interface and finally to",
    "start": "293500",
    "end": "295810"
  },
  {
    "text": "delete an object we can just pass in an",
    "start": "295810",
    "end": "297430"
  },
  {
    "text": "ID to look it up in the store and we'll",
    "start": "297430",
    "end": "300070"
  },
  {
    "text": "finish it off by exporting all these",
    "start": "300070",
    "end": "301630"
  },
  {
    "text": "actions as a single type I realize this",
    "start": "301630",
    "end": "304690"
  },
  {
    "text": "has been super fast but remember you can",
    "start": "304690",
    "end": "306700"
  },
  {
    "text": "get all of the source code at angular",
    "start": "306700",
    "end": "308380"
  },
  {
    "text": "firebase.com or github now we're ready",
    "start": "308380",
    "end": "311530"
  },
  {
    "text": "to go back and finish up the reducer",
    "start": "311530",
    "end": "313420"
  },
  {
    "text": "function you might be used to using the",
    "start": "313420",
    "end": "315520"
  },
  {
    "start": "314000",
    "end": "374000"
  },
  {
    "text": "spread syntax or object to sign in your",
    "start": "315520",
    "end": "317650"
  },
  {
    "text": "reducer functions but now we're actually",
    "start": "317650",
    "end": "319510"
  },
  {
    "text": "going to use the entity adapters instead",
    "start": "319510",
    "end": "321850"
  },
  {
    "text": "just like any other reducer will pass at",
    "start": "321850",
    "end": "324130"
  },
  {
    "text": "the previous state as well as the",
    "start": "324130",
    "end": "325930"
  },
  {
    "text": "corresponding action and then we'll set",
    "start": "325930",
    "end": "328450"
  },
  {
    "text": "up the switch statement and start",
    "start": "328450",
    "end": "329980"
  },
  {
    "text": "updating our state keep in mind that",
    "start": "329980",
    "end": "331960"
  },
  {
    "text": "entity provides a whole bunch of other",
    "start": "331960",
    "end": "333610"
  },
  {
    "text": "adapter methods beyond the ones that I",
    "start": "333610",
    "end": "335230"
  },
  {
    "text": "showed you here to add a single object",
    "start": "335230",
    "end": "337660"
  },
  {
    "text": "to the store we just use the add one",
    "start": "337660",
    "end": "339370"
  },
  {
    "text": "method and then pass that object payload",
    "start": "339370",
    "end": "342370"
  },
  {
    "text": "from the action then we pass the",
    "start": "342370",
    "end": "344230"
  },
  {
    "text": "previous state as a second argument from",
    "start": "344230",
    "end": "347350"
  },
  {
    "text": "there we can move on to update and it's",
    "start": "347350",
    "end": "349210"
  },
  {
    "text": "going to use the update 1 method this",
    "start": "349210",
    "end": "351550"
  },
  {
    "text": "one needs the object ID as well as the",
    "start": "351550",
    "end": "353950"
  },
  {
    "text": "data that we want to update at this",
    "start": "353950",
    "end": "355930"
  },
  {
    "text": "point you're probably noticing how the",
    "start": "355930",
    "end": "357160"
  },
  {
    "text": "action payloads correspond to the",
    "start": "357160",
    "end": "359500"
  },
  {
    "text": "required arguments for these adapter",
    "start": "359500",
    "end": "361930"
  },
  {
    "text": "methods",
    "start": "361930",
    "end": "362440"
  },
  {
    "text": "lastly we'll set up delete and this one",
    "start": "362440",
    "end": "365200"
  },
  {
    "text": "is handled by the remove 1 adapter",
    "start": "365200",
    "end": "367510"
  },
  {
    "text": "method that takes care of the reducer",
    "start": "367510",
    "end": "369700"
  },
  {
    "text": "now we need to set up some selectors so",
    "start": "369700",
    "end": "371440"
  },
  {
    "text": "we can actually retrieve data from the",
    "start": "371440",
    "end": "373480"
  },
  {
    "text": "store the cool thing about entity is it",
    "start": "373480",
    "end": "376270"
  },
  {
    "start": "374000",
    "end": "480000"
  },
  {
    "text": "has a whole bunch of default ways for",
    "start": "376270",
    "end": "378040"
  },
  {
    "text": "retrieving data for example we could get",
    "start": "378040",
    "end": "379960"
  },
  {
    "text": "an array of IDs or just the entities or",
    "start": "379960",
    "end": "382780"
  },
  {
    "text": "all the data together first we need to",
    "start": "382780",
    "end": "385420"
  },
  {
    "text": "create a feature selector which I'm",
    "start": "385420",
    "end": "386830"
  },
  {
    "text": "going to call get pizza state then we",
    "start": "386830",
    "end": "390100"
  },
  {
    "text": "can export the default selectors then",
    "start": "390100",
    "end": "393130"
  },
  {
    "text": "set them equal to the pizza adapter get",
    "start": "393130",
    "end": "396370"
  },
  {
    "text": "selectors method with get pizza state as",
    "start": "396370",
    "end": "399460"
  },
  {
    "text": "an argument",
    "start": "399460",
    "end": "400240"
  },
  {
    "text": "we'll be able to use these when we call",
    "start": "400240",
    "end": "402039"
  },
  {
    "text": "store select to get the data in a",
    "start": "402039",
    "end": "404380"
  },
  {
    "text": "predefined format let's head over to the",
    "start": "404380",
    "end": "407199"
  },
  {
    "text": "pizza order component to see this in",
    "start": "407199",
    "end": "409000"
  },
  {
    "text": "action I'm going to import the actions",
    "start": "409000",
    "end": "412900"
  },
  {
    "text": "as well as the reducer but I'm going to",
    "start": "412900",
    "end": "414910"
  },
  {
    "text": "call the reducer from Pizza this is just",
    "start": "414910",
    "end": "416979"
  },
  {
    "text": "a convention that is in the example app",
    "start": "416979",
    "end": "419080"
  },
  {
    "text": "for NG rx first I set up a variable for",
    "start": "419080",
    "end": "422590"
  },
  {
    "text": "the actual observable pizzas that will",
    "start": "422590",
    "end": "424539"
  },
  {
    "text": "loop over in the HTML and then when I",
    "start": "424539",
    "end": "426849"
  },
  {
    "text": "inject the store in the constructor I",
    "start": "426849",
    "end": "429069"
  },
  {
    "text": "add the pizza state to it to get the",
    "start": "429069",
    "end": "433599"
  },
  {
    "text": "actual pizzas observable I'm going to",
    "start": "433599",
    "end": "435820"
  },
  {
    "text": "call store select and then from pizza",
    "start": "435820",
    "end": "439330"
  },
  {
    "text": "with the selector that we want which in",
    "start": "439330",
    "end": "441039"
  },
  {
    "text": "this case we'll just do select all that",
    "start": "441039",
    "end": "443860"
  },
  {
    "text": "will get the data from the store now",
    "start": "443860",
    "end": "445690"
  },
  {
    "text": "we're just going to set up a few event",
    "start": "445690",
    "end": "446979"
  },
  {
    "text": "handlers here to trigger the various",
    "start": "446979",
    "end": "448660"
  },
  {
    "text": "actions for the create action I'm just",
    "start": "448660",
    "end": "451419"
  },
  {
    "text": "gonna create some dummy data here and",
    "start": "451419",
    "end": "453400"
  },
  {
    "text": "give it a pseudo-random ID here by just",
    "start": "453400",
    "end": "455229"
  },
  {
    "text": "calling some random milliseconds from",
    "start": "455229",
    "end": "457090"
  },
  {
    "text": "the JavaScript data object but that's",
    "start": "457090",
    "end": "459400"
  },
  {
    "text": "not something you want to do in a real",
    "start": "459400",
    "end": "460449"
  },
  {
    "text": "app normally you would have that ID",
    "start": "460449",
    "end": "461830"
  },
  {
    "text": "coming from a database or some other",
    "start": "461830",
    "end": "463659"
  },
  {
    "text": "mechanism but for now we'll use this",
    "start": "463659",
    "end": "466150"
  },
  {
    "text": "data to update the store by calling",
    "start": "466150",
    "end": "467949"
  },
  {
    "text": "dispatch with an instance of the create",
    "start": "467949",
    "end": "470620"
  },
  {
    "text": "action all of the other buttons will",
    "start": "470620",
    "end": "472750"
  },
  {
    "text": "work in exactly the same way we just",
    "start": "472750",
    "end": "474580"
  },
  {
    "text": "take the data from the HTML and then",
    "start": "474580",
    "end": "476889"
  },
  {
    "text": "send it via the corresponding action we",
    "start": "476889",
    "end": "480340"
  },
  {
    "start": "480000",
    "end": "533000"
  },
  {
    "text": "finally made it down to the HTML so I'm",
    "start": "480340",
    "end": "482740"
  },
  {
    "text": "declaring that pizza order component in",
    "start": "482740",
    "end": "484449"
  },
  {
    "text": "the app component and then I'll switch",
    "start": "484449",
    "end": "486759"
  },
  {
    "text": "back to our pizza order component HTML",
    "start": "486759",
    "end": "488889"
  },
  {
    "text": "and first we'll set up an ng for loop",
    "start": "488889",
    "end": "491440"
  },
  {
    "text": "here with the async pipe to loop over",
    "start": "491440",
    "end": "493539"
  },
  {
    "text": "our observable then right below that I",
    "start": "493539",
    "end": "496419"
  },
  {
    "text": "set up a button to create a new pizza",
    "start": "496419",
    "end": "498099"
  },
  {
    "text": "which should update the list that we're",
    "start": "498099",
    "end": "500349"
  },
  {
    "text": "looking at in the front-end for each",
    "start": "500349",
    "end": "502990"
  },
  {
    "text": "individual pizza inside the loop I'm",
    "start": "502990",
    "end": "504969"
  },
  {
    "text": "just going to display some basic data",
    "start": "504969",
    "end": "506800"
  },
  {
    "text": "and then I'll set up individual buttons",
    "start": "506800",
    "end": "509229"
  },
  {
    "text": "to run the update action so we're gonna",
    "start": "509229",
    "end": "512229"
  },
  {
    "text": "say if the pizza size is small and the",
    "start": "512229",
    "end": "514990"
  },
  {
    "text": "user clicks the button we're going to",
    "start": "514990",
    "end": "516399"
  },
  {
    "text": "pass the pizza ID as well as large so",
    "start": "516399",
    "end": "518950"
  },
  {
    "text": "that I'll upgrade their pizza to a large",
    "start": "518950",
    "end": "520779"
  },
  {
    "text": "size and then we'll do the exact",
    "start": "520779",
    "end": "523029"
  },
  {
    "text": "opposite here if the pizza is large then",
    "start": "523029",
    "end": "525100"
  },
  {
    "text": "we'll downgrade it to a small size for",
    "start": "525100",
    "end": "528339"
  },
  {
    "text": "delete we can do the exact same thing",
    "start": "528339",
    "end": "530050"
  },
  {
    "text": "but we only need to pass it the ID",
    "start": "530050",
    "end": "532770"
  },
  {
    "text": "if we first load the app you can see we",
    "start": "532770",
    "end": "534870"
  },
  {
    "start": "533000",
    "end": "589000"
  },
  {
    "text": "get the default pizza here which if you",
    "start": "534870",
    "end": "536610"
  },
  {
    "text": "remember had an ID of one two three and",
    "start": "536610",
    "end": "538709"
  },
  {
    "text": "then we can upgrade it or downgrade it",
    "start": "538709",
    "end": "541050"
  },
  {
    "text": "or delete it then if we pull up Redux",
    "start": "541050",
    "end": "544320"
  },
  {
    "text": "step tools we can get a better idea of",
    "start": "544320",
    "end": "546000"
  },
  {
    "text": "what our state tree looks like every",
    "start": "546000",
    "end": "548160"
  },
  {
    "text": "time we click create pizza you can see",
    "start": "548160",
    "end": "549720"
  },
  {
    "text": "we get a new entity added to our state",
    "start": "549720",
    "end": "551970"
  },
  {
    "text": "tree here overall I'd say I'm pretty",
    "start": "551970",
    "end": "554550"
  },
  {
    "text": "impressed with this new addition to ng",
    "start": "554550",
    "end": "556320"
  },
  {
    "text": "rx it can definitely provide more",
    "start": "556320",
    "end": "558120"
  },
  {
    "text": "consistency to the way you deal with",
    "start": "558120",
    "end": "560060"
  },
  {
    "text": "credence throughout the app if this",
    "start": "560060",
    "end": "562920"
  },
  {
    "text": "video helped you please like and",
    "start": "562920",
    "end": "564029"
  },
  {
    "text": "subscribe",
    "start": "564029",
    "end": "564750"
  },
  {
    "text": "and if you want to take your ng rx app",
    "start": "564750",
    "end": "566730"
  },
  {
    "text": "to the next level consider becoming a",
    "start": "566730",
    "end": "568440"
  },
  {
    "text": "pro subscriber at angular firebase comm",
    "start": "568440",
    "end": "570839"
  },
  {
    "text": "you'll get access to one on one project",
    "start": "570839",
    "end": "572730"
  },
  {
    "text": "support as well as a whole bunch of",
    "start": "572730",
    "end": "574410"
  },
  {
    "text": "exclusive content",
    "start": "574410",
    "end": "575790"
  },
  {
    "text": "thanks for watching and I'll see you",
    "start": "575790",
    "end": "577709"
  },
  {
    "text": "next time",
    "start": "577709",
    "end": "580040"
  },
  {
    "text": "[Music]",
    "start": "580410",
    "end": "585130"
  },
  {
    "text": "[Applause]",
    "start": "585130",
    "end": "586050"
  },
  {
    "text": "[Music]",
    "start": "586050",
    "end": "590540"
  }
]