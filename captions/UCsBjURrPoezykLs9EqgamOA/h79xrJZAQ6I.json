[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "yesterday you may have seen a video",
    "start": "89",
    "end": "1260"
  },
  {
    "text": "about building an industrial scale Robo",
    "start": "1260",
    "end": "3270"
  },
  {
    "text": "collar I decided to take that video down",
    "start": "3270",
    "end": "5009"
  },
  {
    "text": "and destroy all the physical copies",
    "start": "5009",
    "end": "6509"
  },
  {
    "text": "because even though it's an obvious joke",
    "start": "6509",
    "end": "7770"
  },
  {
    "text": "it's not the right way to be using those",
    "start": "7770",
    "end": "9480"
  },
  {
    "text": "tools but the good news is that I recut",
    "start": "9480",
    "end": "11250"
  },
  {
    "text": "that video and it keeps the most",
    "start": "11250",
    "end": "12480"
  },
  {
    "text": "important part intact which is building",
    "start": "12480",
    "end": "14040"
  },
  {
    "text": "a scheduled task queue with firebase",
    "start": "14040",
    "end": "15839"
  },
  {
    "text": "cloud functions and make sure to leave a",
    "start": "15839",
    "end": "17340"
  },
  {
    "text": "comment on this video for the t-shirt",
    "start": "17340",
    "end": "18779"
  },
  {
    "text": "giveaway even if you left a comment on",
    "start": "18779",
    "end": "20310"
  },
  {
    "text": "the original and lastly I just want to",
    "start": "20310",
    "end": "22050"
  },
  {
    "text": "take a second to say thank you for",
    "start": "22050",
    "end": "23580"
  },
  {
    "text": "supporting the channel",
    "start": "23580",
    "end": "24480"
  },
  {
    "text": "20:19 has already exceeded my",
    "start": "24480",
    "end": "25830"
  },
  {
    "text": "expectations and the video ID list seems",
    "start": "25830",
    "end": "27960"
  },
  {
    "text": "to get longer and longer just don't",
    "start": "27960",
    "end": "29820"
  },
  {
    "text": "expect any Robo color tutorials anytime",
    "start": "29820",
    "end": "31650"
  },
  {
    "text": "soon",
    "start": "31650",
    "end": "33890"
  },
  {
    "text": "- call me ASAP as possible Thanks",
    "start": "35579",
    "end": "38820"
  },
  {
    "text": "Americans get at least 5 billion spam",
    "start": "38820",
    "end": "40800"
  },
  {
    "text": "robo calls per month and that number",
    "start": "40800",
    "end": "42449"
  },
  {
    "text": "gets bigger and bigger every year",
    "start": "42449",
    "end": "43649"
  },
  {
    "text": "personally I get at least 10 of those",
    "start": "43649",
    "end": "45510"
  },
  {
    "text": "calls per day and I finally just decided",
    "start": "45510",
    "end": "47010"
  },
  {
    "text": "if you can't beat them join them in",
    "start": "47010",
    "end": "49050"
  },
  {
    "text": "today's video we're going to not build a",
    "start": "49050",
    "end": "51090"
  },
  {
    "text": "robo caller music and a brand new cloud",
    "start": "51090",
    "end": "53760"
  },
  {
    "text": "function type from firebase but more",
    "start": "53760",
    "end": "55710"
  },
  {
    "text": "importantly we're going to build a task",
    "start": "55710",
    "end": "56850"
  },
  {
    "text": "runner that allows us to schedule any",
    "start": "56850",
    "end": "58500"
  },
  {
    "text": "back-end code to run at any time if",
    "start": "58500",
    "end": "60390"
  },
  {
    "text": "you're new here like and subscribe and",
    "start": "60390",
    "end": "61800"
  },
  {
    "text": "you can find the whole source code on",
    "start": "61800",
    "end": "63059"
  },
  {
    "text": "fire ship IO and leave a comment below",
    "start": "63059",
    "end": "65040"
  },
  {
    "text": "for a chance to win this one-of-a-kind",
    "start": "65040",
    "end": "66420"
  },
  {
    "text": "t-shirt next week so firebase released a",
    "start": "66420",
    "end": "68940"
  },
  {
    "text": "new function type a couple days ago it's",
    "start": "68940",
    "end": "70860"
  },
  {
    "text": "a pub sub function which allows you to",
    "start": "70860",
    "end": "72600"
  },
  {
    "text": "pass messages in between Google services",
    "start": "72600",
    "end": "74550"
  },
  {
    "text": "that is also integrated with Google",
    "start": "74550",
    "end": "76530"
  },
  {
    "text": "cloud scheduler this means you can run",
    "start": "76530",
    "end": "78240"
  },
  {
    "text": "any back-end code at a specific point in",
    "start": "78240",
    "end": "79979"
  },
  {
    "text": "time using a cron tab schedule this is",
    "start": "79979",
    "end": "82170"
  },
  {
    "text": "great if you know exactly when you want",
    "start": "82170",
    "end": "83399"
  },
  {
    "text": "to schedule a job in advance but I want",
    "start": "83399",
    "end": "85320"
  },
  {
    "text": "to push things a step further by",
    "start": "85320",
    "end": "86670"
  },
  {
    "text": "integrating firestore to create a",
    "start": "86670",
    "end": "88500"
  },
  {
    "text": "dynamic task runner that allows you to",
    "start": "88500",
    "end": "90270"
  },
  {
    "text": "schedule a job at any point in time that",
    "start": "90270",
    "end": "92340"
  },
  {
    "text": "allows you or your users to schedule",
    "start": "92340",
    "end": "93990"
  },
  {
    "text": "anything dynamically such as",
    "start": "93990",
    "end": "95369"
  },
  {
    "text": "notifications reminders or as we'll see",
    "start": "95369",
    "end": "97679"
  },
  {
    "text": "soon definitely not robocallers make",
    "start": "97679",
    "end": "100200"
  },
  {
    "text": "sure you have the latest version of",
    "start": "100200",
    "end": "101250"
  },
  {
    "text": "firebase tools installed version 6.7 or",
    "start": "101250",
    "end": "103770"
  },
  {
    "text": "version 2.3 of the firebase functions",
    "start": "103770",
    "end": "106080"
  },
  {
    "text": "module from there we can initialize a",
    "start": "106080",
    "end": "109110"
  },
  {
    "text": "new project by running firebase and it",
    "start": "109110",
    "end": "110849"
  },
  {
    "text": "functions I'll be using typescript and",
    "start": "110849",
    "end": "112739"
  },
  {
    "text": "you'll see why it's so valuable for a",
    "start": "112739",
    "end": "114090"
  },
  {
    "text": "project like this in a few minutes let's",
    "start": "114090",
    "end": "116340"
  },
  {
    "text": "start by taking a look at a basic",
    "start": "116340",
    "end": "117780"
  },
  {
    "text": "schedule pub/sub function in the index",
    "start": "117780",
    "end": "119849"
  },
  {
    "text": "TS i have a reference to the admin SDK",
    "start": "119849",
    "end": "121470"
  },
  {
    "text": "as well as firestore which we'll be",
    "start": "121470",
    "end": "123390"
  },
  {
    "text": "using later to create a scheduled",
    "start": "123390",
    "end": "125190"
  },
  {
    "text": "function we'll call functions pub sub",
    "start": "125190",
    "end": "127229"
  },
  {
    "text": "scheduled the scheduled method takes a",
    "start": "127229",
    "end": "129569"
  },
  {
    "text": "crontab schedule as its argument which",
    "start": "129569",
    "end": "131730"
  },
  {
    "text": "itself is just a string with five slots",
    "start": "131730",
    "end": "133650"
  },
  {
    "text": "that represent the minute hour day month",
    "start": "133650",
    "end": "135989"
  },
  {
    "text": "and weekday of the schedule in my code",
    "start": "135989",
    "end": "138180"
  },
  {
    "text": "here I have the minute set to 30 and the",
    "start": "138180",
    "end": "139800"
  },
  {
    "text": "hour to 5 so this will tick at 5:30 a.m.",
    "start": "139800",
    "end": "142379"
  },
  {
    "text": "every day but I wouldn't recommend",
    "start": "142379",
    "end": "144270"
  },
  {
    "text": "trying to memorize how cron schedules",
    "start": "144270",
    "end": "145890"
  },
  {
    "text": "work because there's this app called",
    "start": "145890",
    "end": "147209"
  },
  {
    "text": "cron tap guru that makes it easy to edit",
    "start": "147209",
    "end": "149400"
  },
  {
    "text": "and customize cron schedules from there",
    "start": "149400",
    "end": "152190"
  },
  {
    "text": "we just call on run that gives us access",
    "start": "152190",
    "end": "153840"
  },
  {
    "text": "to a callback function which can execute",
    "start": "153840",
    "end": "155700"
  },
  {
    "text": "background code on this schedule that's",
    "start": "155700",
    "end": "158340"
  },
  {
    "text": "easy enough but our schedule is static",
    "start": "158340",
    "end": "160170"
  },
  {
    "text": "so what if we want to change the",
    "start": "160170",
    "end": "161550"
  },
  {
    "text": "schedule or allow the user to schedule",
    "start": "161550",
    "end": "163440"
  },
  {
    "text": "something dynamically in this demo we",
    "start": "163440",
    "end": "165540"
  },
  {
    "text": "want to build a robo caller that can",
    "start": "165540",
    "end": "167010"
  },
  {
    "text": "scale up to millions of phone",
    "start": "167010",
    "end": "168400"
  },
  {
    "text": "calls per day and scheduled those calls",
    "start": "168400",
    "end": "170079"
  },
  {
    "text": "at different times throughout the day",
    "start": "170079",
    "end": "171450"
  },
  {
    "text": "for that we're going to build a dynamic",
    "start": "171450",
    "end": "173439"
  },
  {
    "start": "172000",
    "end": "232000"
  },
  {
    "text": "task runner and we'll start by modeling",
    "start": "173439",
    "end": "175239"
  },
  {
    "text": "the data with firestore we'll create a",
    "start": "175239",
    "end": "177549"
  },
  {
    "text": "task collection and each document will",
    "start": "177549",
    "end": "179560"
  },
  {
    "text": "represent a job that we want to run in",
    "start": "179560",
    "end": "181510"
  },
  {
    "text": "the background at a specific point in",
    "start": "181510",
    "end": "183040"
  },
  {
    "text": "time",
    "start": "183040",
    "end": "183310"
  },
  {
    "text": "the first field you'll see here is",
    "start": "183310",
    "end": "185049"
  },
  {
    "text": "worker which is just a string that",
    "start": "185049",
    "end": "187030"
  },
  {
    "text": "represents a JavaScript function that",
    "start": "187030",
    "end": "189010"
  },
  {
    "text": "lives somewhere in our back-end code the",
    "start": "189010",
    "end": "191049"
  },
  {
    "text": "worker handles all the business logic",
    "start": "191049",
    "end": "192609"
  },
  {
    "text": "and the firestore document is really",
    "start": "192609",
    "end": "194290"
  },
  {
    "text": "just a messenger to pass data to the",
    "start": "194290",
    "end": "196209"
  },
  {
    "text": "backend the next field is status this",
    "start": "196209",
    "end": "198459"
  },
  {
    "text": "will just tell us whether or not a task",
    "start": "198459",
    "end": "199870"
  },
  {
    "text": "has been completed or whether or not",
    "start": "199870",
    "end": "201340"
  },
  {
    "text": "it's scheduled or maybe a teardown",
    "start": "201340",
    "end": "202959"
  },
  {
    "text": "the next field is perform at which is a",
    "start": "202959",
    "end": "205269"
  },
  {
    "text": "time stamp that tells us when to execute",
    "start": "205269",
    "end": "207310"
  },
  {
    "text": "this task you'll want to make sure that",
    "start": "207310",
    "end": "208989"
  },
  {
    "text": "this is a firestore time stamp to ensure",
    "start": "208989",
    "end": "210849"
  },
  {
    "text": "it's consistent across all of your",
    "start": "210849",
    "end": "212170"
  },
  {
    "text": "clients then the fourth and final field",
    "start": "212170",
    "end": "214329"
  },
  {
    "text": "is options which is just a map that",
    "start": "214329",
    "end": "216579"
  },
  {
    "text": "allows us to pass any serialized data",
    "start": "216579",
    "end": "218439"
  },
  {
    "text": "into the back-end function so what we're",
    "start": "218439",
    "end": "220569"
  },
  {
    "text": "going for here is a generic system that",
    "start": "220569",
    "end": "222340"
  },
  {
    "text": "allows us to name a function and then",
    "start": "222340",
    "end": "224079"
  },
  {
    "text": "pass some data to that function and have",
    "start": "224079",
    "end": "225790"
  },
  {
    "text": "it run securely in the backend on a",
    "start": "225790",
    "end": "227590"
  },
  {
    "text": "specific schedule that can be",
    "start": "227590",
    "end": "228879"
  },
  {
    "text": "user-defined if you create this document",
    "start": "228879",
    "end": "230680"
  },
  {
    "text": "in the front-end that's how we get data",
    "start": "230680",
    "end": "232120"
  },
  {
    "start": "232000",
    "end": "362000"
  },
  {
    "text": "to the backend now we need to execute it",
    "start": "232120",
    "end": "234160"
  },
  {
    "text": "by defining a task runner this is simply",
    "start": "234160",
    "end": "236319"
  },
  {
    "text": "a scheduled function that runs every 60",
    "start": "236319",
    "end": "238389"
  },
  {
    "text": "seconds and checks to see if we have any",
    "start": "238389",
    "end": "240370"
  },
  {
    "text": "jobs that need to be executed this",
    "start": "240370",
    "end": "242139"
  },
  {
    "text": "function will be invoked about 45,000",
    "start": "242139",
    "end": "244030"
  },
  {
    "text": "times per month which is well within the",
    "start": "244030",
    "end": "245709"
  },
  {
    "text": "free tier on firebase if you're worried",
    "start": "245709",
    "end": "247209"
  },
  {
    "text": "about cost and you can even use this to",
    "start": "247209",
    "end": "248949"
  },
  {
    "text": "optimize cost because you can run",
    "start": "248949",
    "end": "250419"
  },
  {
    "text": "multiple jobs within a single function",
    "start": "250419",
    "end": "252069"
  },
  {
    "text": "invocation I'm gonna go ahead and create",
    "start": "252069",
    "end": "253959"
  },
  {
    "text": "a function called task render and I'm",
    "start": "253959",
    "end": "255549"
  },
  {
    "text": "going to increase the memory to two",
    "start": "255549",
    "end": "257109"
  },
  {
    "text": "gigabytes that part's completely",
    "start": "257109",
    "end": "258579"
  },
  {
    "text": "optional but if you're running a lot of",
    "start": "258579",
    "end": "260049"
  },
  {
    "text": "tasks you might want to just max out the",
    "start": "260049",
    "end": "261729"
  },
  {
    "text": "memory and then we'll call pub/sub",
    "start": "261729",
    "end": "263320"
  },
  {
    "text": "schedule and for the schedule we'll pass",
    "start": "263320",
    "end": "265210"
  },
  {
    "text": "all stars or wildcards this will have",
    "start": "265210",
    "end": "267550"
  },
  {
    "text": "the function tick every one minute and",
    "start": "267550",
    "end": "269289"
  },
  {
    "text": "that's actually the max level of",
    "start": "269289",
    "end": "270849"
  },
  {
    "text": "granularity that you can achieve with a",
    "start": "270849",
    "end": "272530"
  },
  {
    "text": "crontab schedule it's likely that we",
    "start": "272530",
    "end": "274870"
  },
  {
    "text": "want to run a lot of different jobs",
    "start": "274870",
    "end": "276130"
  },
  {
    "text": "concurrently so we'll do this inside of",
    "start": "276130",
    "end": "278050"
  },
  {
    "text": "an async function and then we'll want to",
    "start": "278050",
    "end": "279849"
  },
  {
    "text": "get the current time as represented by a",
    "start": "279849",
    "end": "281800"
  },
  {
    "text": "firestore timestamp we can use this to",
    "start": "281800",
    "end": "284409"
  },
  {
    "text": "query firestore for every job that has a",
    "start": "284409",
    "end": "286360"
  },
  {
    "text": "perform at timestamp in the past this is",
    "start": "286360",
    "end": "288849"
  },
  {
    "text": "the jobs that we want to run right now",
    "start": "288849",
    "end": "290650"
  },
  {
    "text": "and then we'll also make sure that each",
    "start": "290650",
    "end": "292360"
  },
  {
    "text": "task is scheduled because we don't want",
    "start": "292360",
    "end": "294130"
  },
  {
    "text": "to run a job that's already been",
    "start": "294130",
    "end": "295419"
  },
  {
    "text": "completed this will make it a composite",
    "start": "295419",
    "end": "297460"
  },
  {
    "text": "query so keep in mind you'll need an",
    "start": "297460",
    "end": "298810"
  },
  {
    "text": "index and firestore to run this query",
    "start": "298810",
    "end": "300700"
  },
  {
    "text": "the next thing we'll do is",
    "start": "300700",
    "end": "302440"
  },
  {
    "text": "this collection by calling a way to",
    "start": "302440",
    "end": "303880"
  },
  {
    "text": "query get and then we're going to make",
    "start": "303880",
    "end": "305740"
  },
  {
    "text": "sure that each job is a promise so I'm",
    "start": "305740",
    "end": "307720"
  },
  {
    "text": "creating an empty array here that will",
    "start": "307720",
    "end": "309340"
  },
  {
    "text": "be an array of promises that we can",
    "start": "309340",
    "end": "310780"
  },
  {
    "text": "execute concurrently from there I'll",
    "start": "310780",
    "end": "312520"
  },
  {
    "text": "loop over every document in the",
    "start": "312520",
    "end": "313840"
  },
  {
    "text": "collection and from each document I want",
    "start": "313840",
    "end": "316120"
  },
  {
    "text": "the worker function name as well as any",
    "start": "316120",
    "end": "318070"
  },
  {
    "text": "options that we need to pass into that",
    "start": "318070",
    "end": "319780"
  },
  {
    "text": "function we haven't defined the worker",
    "start": "319780",
    "end": "321280"
  },
  {
    "text": "functions yet but we'll do that in the",
    "start": "321280",
    "end": "322690"
  },
  {
    "text": "next step it's simply going to be an",
    "start": "322690",
    "end": "324430"
  },
  {
    "text": "object that has a series of functions on",
    "start": "324430",
    "end": "326560"
  },
  {
    "text": "it so we can call those functions based",
    "start": "326560",
    "end": "328120"
  },
  {
    "text": "on the objects property name now because",
    "start": "328120",
    "end": "330250"
  },
  {
    "text": "we're going to force each worker",
    "start": "330250",
    "end": "331300"
  },
  {
    "text": "function to return a promise we can run",
    "start": "331300",
    "end": "333250"
  },
  {
    "text": "them all concurrently and we can also",
    "start": "333250",
    "end": "335020"
  },
  {
    "text": "handle these success and error cases in",
    "start": "335020",
    "end": "337360"
  },
  {
    "text": "a way that's generic so we can handle it",
    "start": "337360",
    "end": "339070"
  },
  {
    "text": "the same way for every job that's in",
    "start": "339070",
    "end": "340630"
  },
  {
    "text": "queued no matter what it's business",
    "start": "340630",
    "end": "341860"
  },
  {
    "text": "logic is doing in this case we'll just",
    "start": "341860",
    "end": "343840"
  },
  {
    "text": "go ahead and update the underlying",
    "start": "343840",
    "end": "345340"
  },
  {
    "text": "document to a status of complete or if",
    "start": "345340",
    "end": "347590"
  },
  {
    "text": "it's an error we'll update it to a",
    "start": "347590",
    "end": "348790"
  },
  {
    "text": "status of error and lastly we'll go",
    "start": "348790",
    "end": "351040"
  },
  {
    "text": "ahead and push it to the jobs array and",
    "start": "351040",
    "end": "352900"
  },
  {
    "text": "the final thing we need to do from our",
    "start": "352900",
    "end": "354220"
  },
  {
    "text": "task Runner is just return promise dot",
    "start": "354220",
    "end": "356200"
  },
  {
    "text": "all with the jobs array so that's all it",
    "start": "356200",
    "end": "358570"
  },
  {
    "text": "takes to create a basic task runner with",
    "start": "358570",
    "end": "360490"
  },
  {
    "text": "this new pub sub function type and",
    "start": "360490",
    "end": "362140"
  },
  {
    "start": "362000",
    "end": "417000"
  },
  {
    "text": "firestore now it's time to define the",
    "start": "362140",
    "end": "364300"
  },
  {
    "text": "business logic for the task runner the",
    "start": "364300",
    "end": "366310"
  },
  {
    "text": "logic will be kept in this workers",
    "start": "366310",
    "end": "367780"
  },
  {
    "text": "object and I'm going to create an",
    "start": "367780",
    "end": "369370"
  },
  {
    "text": "interface for this object because it has",
    "start": "369370",
    "end": "371020"
  },
  {
    "text": "a specific signature that it needs to",
    "start": "371020",
    "end": "372610"
  },
  {
    "text": "follow the keys can be any value that's",
    "start": "372610",
    "end": "375340"
  },
  {
    "text": "the name of the function and then the",
    "start": "375340",
    "end": "376780"
  },
  {
    "text": "function itself has an options object",
    "start": "376780",
    "end": "378730"
  },
  {
    "text": "which we can use to pass in any dynamic",
    "start": "378730",
    "end": "381310"
  },
  {
    "text": "data to the function at runtime and that",
    "start": "381310",
    "end": "383530"
  },
  {
    "text": "corresponds to the options map on the",
    "start": "383530",
    "end": "385419"
  },
  {
    "text": "firestore document and lastly we want to",
    "start": "385419",
    "end": "387520"
  },
  {
    "text": "enforce that each worker function",
    "start": "387520",
    "end": "388990"
  },
  {
    "text": "returns a promise now we'll go ahead and",
    "start": "388990",
    "end": "390820"
  },
  {
    "text": "define the workers object and we'll give",
    "start": "390820",
    "end": "392470"
  },
  {
    "text": "it a key of hello world which is a",
    "start": "392470",
    "end": "394180"
  },
  {
    "text": "function that just returns a right to",
    "start": "394180",
    "end": "396250"
  },
  {
    "text": "the firestore database let's go ahead",
    "start": "396250",
    "end": "398320"
  },
  {
    "text": "and deploy our function and make sure",
    "start": "398320",
    "end": "399700"
  },
  {
    "text": "the task runner is working we'll go into",
    "start": "399700",
    "end": "401350"
  },
  {
    "text": "firestore to the task collection set the",
    "start": "401350",
    "end": "403480"
  },
  {
    "text": "worker to hello world then set the",
    "start": "403480",
    "end": "405640"
  },
  {
    "text": "status to scheduled and the time stamp",
    "start": "405640",
    "end": "408010"
  },
  {
    "text": "to sometime in the past after that we",
    "start": "408010",
    "end": "410290"
  },
  {
    "text": "just need to wait about a minute and",
    "start": "410290",
    "end": "411760"
  },
  {
    "text": "then we should see the status flip to",
    "start": "411760",
    "end": "413290"
  },
  {
    "text": "complete and then we should also see",
    "start": "413290",
    "end": "414640"
  },
  {
    "text": "this hello world document in the logs",
    "start": "414640",
    "end": "416290"
  },
  {
    "text": "collection in the original video this is",
    "start": "416290",
    "end": "418419"
  },
  {
    "start": "417000",
    "end": "449000"
  },
  {
    "text": "the point where we built the Robo caller",
    "start": "418419",
    "end": "419830"
  },
  {
    "text": "but I'm just going to go ahead and wrap",
    "start": "419830",
    "end": "421150"
  },
  {
    "text": "things up here the important takeaway is",
    "start": "421150",
    "end": "422860"
  },
  {
    "text": "that you now have a system that can",
    "start": "422860",
    "end": "424150"
  },
  {
    "text": "schedule any back-end code dynamically",
    "start": "424150",
    "end": "425950"
  },
  {
    "text": "some good use cases might be allowing",
    "start": "425950",
    "end": "427660"
  },
  {
    "text": "users to schedule push notifications",
    "start": "427660",
    "end": "429430"
  },
  {
    "text": "reminders or transactional email but",
    "start": "429430",
    "end": "431650"
  },
  {
    "text": "definitely not robocallers if this video",
    "start": "431650",
    "end": "434110"
  },
  {
    "text": "helped you please like and subscribe",
    "start": "434110",
    "end": "435470"
  },
  {
    "text": "and consider becoming a pro member at",
    "start": "435470",
    "end": "437270"
  },
  {
    "text": "fire ship IO to get access to even more",
    "start": "437270",
    "end": "439430"
  },
  {
    "text": "content thanks for watching and I will",
    "start": "439430",
    "end": "441410"
  },
  {
    "text": "talk to you soon",
    "start": "441410",
    "end": "442560"
  },
  {
    "text": "[Music]",
    "start": "442560",
    "end": "451669"
  }
]