[
  {
    "text": "[Music]",
    "start": "0",
    "end": "4670"
  },
  {
    "text": "what if there is a way that you could",
    "start": "6049",
    "end": "8040"
  },
  {
    "text": "capture all the benefits of annular",
    "start": "8040",
    "end": "9510"
  },
  {
    "text": "material but customize the behavior and",
    "start": "9510",
    "end": "11639"
  },
  {
    "text": "styling in an unaffiliated way well",
    "start": "11639",
    "end": "14070"
  },
  {
    "text": "that's exactly what angular's component",
    "start": "14070",
    "end": "16020"
  },
  {
    "text": "development kit does in today's video",
    "start": "16020",
    "end": "18000"
  },
  {
    "text": "you'll learn how to build a reactive cdk",
    "start": "18000",
    "end": "20039"
  },
  {
    "text": "data table that implements its own",
    "start": "20039",
    "end": "21720"
  },
  {
    "text": "custom behaviors and also uses bootstrap",
    "start": "21720",
    "end": "24480"
  },
  {
    "text": "4 for its CSS styling if you're new to",
    "start": "24480",
    "end": "27630"
  },
  {
    "text": "the channel make sure to LIKE and",
    "start": "27630",
    "end": "28500"
  },
  {
    "text": "subscribe and the code for this video is",
    "start": "28500",
    "end": "30630"
  },
  {
    "text": "produced by Zack DeRose who is a senior",
    "start": "30630",
    "end": "32790"
  },
  {
    "text": "team lead working on angular over at",
    "start": "32790",
    "end": "34800"
  },
  {
    "text": "Swamp Fox Inc",
    "start": "34800",
    "end": "36059"
  },
  {
    "text": "make sure to check out his full article",
    "start": "36059",
    "end": "37739"
  },
  {
    "text": "on medium because it goes into some",
    "start": "37739",
    "end": "39090"
  },
  {
    "text": "advanced stuff that I don't cover here",
    "start": "39090",
    "end": "40559"
  },
  {
    "text": "such as searching sorting and applying",
    "start": "40559",
    "end": "42809"
  },
  {
    "text": "styles on a cell-by-cell basis I'm",
    "start": "42809",
    "end": "45750"
  },
  {
    "text": "starting out from the state regular",
    "start": "45750",
    "end": "47219"
  },
  {
    "text": "angular 6 app and the first thing I'll",
    "start": "47219",
    "end": "49050"
  },
  {
    "text": "do is install the component development",
    "start": "49050",
    "end": "50610"
  },
  {
    "text": "kit which is at angular slash cdk then",
    "start": "50610",
    "end": "54809"
  },
  {
    "text": "I'll generate a component called table",
    "start": "54809",
    "end": "56699"
  },
  {
    "text": "from there I'll jump over to the app",
    "start": "56699",
    "end": "58829"
  },
  {
    "text": "module and we'll want to import the data",
    "start": "58829",
    "end": "61500"
  },
  {
    "text": "table from angular cdk then add the cdk",
    "start": "61500",
    "end": "65220"
  },
  {
    "text": "table module to the imports array the",
    "start": "65220",
    "end": "67799"
  },
  {
    "text": "first table we'll build is pretty basic",
    "start": "67799",
    "end": "69390"
  },
  {
    "text": "and ugly but what it's doing under the",
    "start": "69390",
    "end": "71340"
  },
  {
    "text": "hood is pretty powerful",
    "start": "71340",
    "end": "72540"
  },
  {
    "text": "and without the cdk this would take a",
    "start": "72540",
    "end": "74400"
  },
  {
    "text": "lot more code than it does in this video",
    "start": "74400",
    "end": "76229"
  },
  {
    "text": "I'll be working with some dummy data",
    "start": "76229",
    "end": "78420"
  },
  {
    "text": "throughout this video which I have saved",
    "start": "78420",
    "end": "80159"
  },
  {
    "text": "in this data Ts file first we have an",
    "start": "80159",
    "end": "83040"
  },
  {
    "text": "array of column names which just define",
    "start": "83040",
    "end": "85470"
  },
  {
    "text": "the names of the columns in the table",
    "start": "85470",
    "end": "87119"
  },
  {
    "text": "and then we have the actual data which",
    "start": "87119",
    "end": "89549"
  },
  {
    "text": "is a map of various heroes and each hero",
    "start": "89549",
    "end": "93150"
  },
  {
    "text": "has a set of properties that match these",
    "start": "93150",
    "end": "95159"
  },
  {
    "text": "column names so basically this simulates",
    "start": "95159",
    "end": "97829"
  },
  {
    "text": "some initial data that you might pull",
    "start": "97829",
    "end": "99479"
  },
  {
    "text": "from a back-end database or API now",
    "start": "99479",
    "end": "102810"
  },
  {
    "text": "let's jump into the component and start",
    "start": "102810",
    "end": "104610"
  },
  {
    "text": "putting together this table I'm going to",
    "start": "104610",
    "end": "107130"
  },
  {
    "text": "go pretty slow through this code because",
    "start": "107130",
    "end": "108630"
  },
  {
    "text": "I want to talk about behavior subjects",
    "start": "108630",
    "end": "110399"
  },
  {
    "text": "and observables because they're very",
    "start": "110399",
    "end": "112259"
  },
  {
    "text": "powerful structures when working with",
    "start": "112259",
    "end": "114149"
  },
  {
    "text": "tables a behavior subject is really",
    "start": "114149",
    "end": "116159"
  },
  {
    "text": "useful when you have a value that you",
    "start": "116159",
    "end": "118290"
  },
  {
    "text": "want to manually change over time they",
    "start": "118290",
    "end": "120750"
  },
  {
    "text": "work just like an observable but they",
    "start": "120750",
    "end": "122549"
  },
  {
    "text": "always have a current value and you can",
    "start": "122549",
    "end": "124560"
  },
  {
    "text": "push new values to them and you can",
    "start": "124560",
    "end": "126899"
  },
  {
    "text": "always get the current value in place",
    "start": "126899",
    "end": "128489"
  },
  {
    "text": "which means you kind of have the best of",
    "start": "128489",
    "end": "130050"
  },
  {
    "text": "both worlds between observables and just",
    "start": "130050",
    "end": "132120"
  },
  {
    "text": "regular JavaScript",
    "start": "132120",
    "end": "134190"
  },
  {
    "text": "what's also really cool is that you can",
    "start": "134190",
    "end": "136200"
  },
  {
    "text": "use your behavior subject as a single",
    "start": "136200",
    "end": "138300"
  },
  {
    "text": "source of truth that gets mapped to",
    "start": "138300",
    "end": "140220"
  },
  {
    "text": "other observables for example we'll be",
    "start": "140220",
    "end": "142590"
  },
  {
    "text": "able to map this heroes dictionary down",
    "start": "142590",
    "end": "144570"
  },
  {
    "text": "to an array of data that we can loop",
    "start": "144570",
    "end": "146280"
  },
  {
    "text": "over in our data table for each row and",
    "start": "146280",
    "end": "148590"
  },
  {
    "text": "we'll build up to some more advanced use",
    "start": "148590",
    "end": "150360"
  },
  {
    "text": "cases with that concept later in the",
    "start": "150360",
    "end": "151980"
  },
  {
    "text": "video so if you want to take your single",
    "start": "151980",
    "end": "154410"
  },
  {
    "text": "source of truth and map it to just a",
    "start": "154410",
    "end": "156390"
  },
  {
    "text": "regular observable you can do that by",
    "start": "156390",
    "end": "158490"
  },
  {
    "text": "just calling pipe and then adding some",
    "start": "158490",
    "end": "160260"
  },
  {
    "text": "operators to structure it in the way",
    "start": "160260",
    "end": "161970"
  },
  {
    "text": "that you need for the UI in this case we",
    "start": "161970",
    "end": "164520"
  },
  {
    "text": "just want to map the dictionary down to",
    "start": "164520",
    "end": "166560"
  },
  {
    "text": "an array of values which we can do with",
    "start": "166560",
    "end": "168330"
  },
  {
    "text": "object dot values so now we have an",
    "start": "168330",
    "end": "171120"
  },
  {
    "text": "observable array of data that we can",
    "start": "171120",
    "end": "172530"
  },
  {
    "text": "loop over in the table you may have",
    "start": "172530",
    "end": "175140"
  },
  {
    "text": "noticed that I was clicking a button in",
    "start": "175140",
    "end": "176700"
  },
  {
    "text": "the table that was changing the values",
    "start": "176700",
    "end": "178410"
  },
  {
    "text": "for a given row that's also made",
    "start": "178410",
    "end": "180540"
  },
  {
    "text": "possible by the reactive nature of",
    "start": "180540",
    "end": "182490"
  },
  {
    "text": "behavior subjects and observables we can",
    "start": "182490",
    "end": "185640"
  },
  {
    "text": "grab the value of our behavior subject",
    "start": "185640",
    "end": "187500"
  },
  {
    "text": "by simply calling value on it and",
    "start": "187500",
    "end": "189120"
  },
  {
    "text": "because it's an object we can then grab",
    "start": "189120",
    "end": "191100"
  },
  {
    "text": "the hero name that's being clicked on",
    "start": "191100",
    "end": "192630"
  },
  {
    "text": "and update its values to level up the",
    "start": "192630",
    "end": "195750"
  },
  {
    "text": "hero will simply increment each one of",
    "start": "195750",
    "end": "197820"
  },
  {
    "text": "its properties by one from there we can",
    "start": "197820",
    "end": "200459"
  },
  {
    "text": "compose a new object by using the spread",
    "start": "200459",
    "end": "202890"
  },
  {
    "text": "syntax and taking that current value",
    "start": "202890",
    "end": "205140"
  },
  {
    "text": "from the behavior subject then overwrite",
    "start": "205140",
    "end": "207420"
  },
  {
    "text": "the value for the clicked hero so",
    "start": "207420",
    "end": "210120"
  },
  {
    "text": "that'll be the next value for our",
    "start": "210120",
    "end": "211530"
  },
  {
    "text": "behavior subject and everything else",
    "start": "211530",
    "end": "213780"
  },
  {
    "text": "that depends on it will react",
    "start": "213780",
    "end": "215160"
  },
  {
    "text": "accordingly and we can simply push that",
    "start": "215160",
    "end": "218010"
  },
  {
    "text": "into the stream by calling next now we",
    "start": "218010",
    "end": "220500"
  },
  {
    "text": "can jump into the component HTML and",
    "start": "220500",
    "end": "222630"
  },
  {
    "text": "we'll see that the cdk gives us a whole",
    "start": "222630",
    "end": "224850"
  },
  {
    "text": "bunch of different directives that we",
    "start": "224850",
    "end": "226440"
  },
  {
    "text": "can use to bind our data to the table",
    "start": "226440",
    "end": "228600"
  },
  {
    "text": "the most important one is the data",
    "start": "228600",
    "end": "230280"
  },
  {
    "text": "source which is that observable that we",
    "start": "230280",
    "end": "232500"
  },
  {
    "text": "mapped our behavior subject to in the",
    "start": "232500",
    "end": "234150"
  },
  {
    "text": "type script the next thing we'll do is",
    "start": "234150",
    "end": "236489"
  },
  {
    "text": "define the header row and because we",
    "start": "236489",
    "end": "238440"
  },
  {
    "text": "already have an array of the column",
    "start": "238440",
    "end": "239970"
  },
  {
    "text": "names we can just pass that in as the",
    "start": "239970",
    "end": "242130"
  },
  {
    "text": "cdk header row definition after that we",
    "start": "242130",
    "end": "245550"
  },
  {
    "text": "will make a definition for each actual",
    "start": "245550",
    "end": "247890"
  },
  {
    "text": "row in the table and that's going to",
    "start": "247890",
    "end": "250320"
  },
  {
    "text": "automatically loop over every item in",
    "start": "250320",
    "end": "252720"
  },
  {
    "text": "our data source array now the last major",
    "start": "252720",
    "end": "255390"
  },
  {
    "text": "step is to define the logic for each",
    "start": "255390",
    "end": "258000"
  },
  {
    "text": "cell in the row you could loop over each",
    "start": "258000",
    "end": "260669"
  },
  {
    "text": "cell or you can define them one by one",
    "start": "260669",
    "end": "262789"
  },
  {
    "text": "since we have some custom behavior we'll",
    "start": "262789",
    "end": "265320"
  },
  {
    "text": "just go ahead and declare each one of",
    "start": "265320",
    "end": "266970"
  },
  {
    "text": "our cells one by one",
    "start": "266970",
    "end": "268050"
  },
  {
    "text": "all we have to do is define what the",
    "start": "268050",
    "end": "270419"
  },
  {
    "text": "header should look like then we have",
    "start": "270419",
    "end": "272370"
  },
  {
    "text": "access to the underlying data object",
    "start": "272370",
    "end": "274379"
  },
  {
    "text": "which is in the template variable of Rho",
    "start": "274379",
    "end": "276509"
  },
  {
    "text": "so this cell will have a header of hero",
    "start": "276509",
    "end": "279599"
  },
  {
    "text": "name and then the actual value will be",
    "start": "279599",
    "end": "281789"
  },
  {
    "text": "the row name then we'll just go ahead",
    "start": "281789",
    "end": "284250"
  },
  {
    "text": "and repeat this logic over and over",
    "start": "284250",
    "end": "286020"
  },
  {
    "text": "again until we get to the actual cell",
    "start": "286020",
    "end": "288090"
  },
  {
    "text": "that has the clickable button the",
    "start": "288090",
    "end": "290639"
  },
  {
    "text": "special thing about this cell is that",
    "start": "290639",
    "end": "292289"
  },
  {
    "text": "we're not actually displaying a value",
    "start": "292289",
    "end": "293819"
  },
  {
    "text": "but instead we'll have a clickable",
    "start": "293819",
    "end": "295259"
  },
  {
    "text": "button that will trigger that level up",
    "start": "295259",
    "end": "297599"
  },
  {
    "text": "event handler that we define in the type",
    "start": "297599",
    "end": "299580"
  },
  {
    "text": "script to level up a hero we need to",
    "start": "299580",
    "end": "301830"
  },
  {
    "text": "know its name which we have access to",
    "start": "301830",
    "end": "303719"
  },
  {
    "text": "through the row template variable which",
    "start": "303719",
    "end": "305639"
  },
  {
    "text": "we can then pass in to our level up",
    "start": "305639",
    "end": "307680"
  },
  {
    "text": "method as the argument and just like",
    "start": "307680",
    "end": "310289"
  },
  {
    "text": "that we have a data table that relies on",
    "start": "310289",
    "end": "311969"
  },
  {
    "text": "a single source of truth for its input",
    "start": "311969",
    "end": "314009"
  },
  {
    "text": "which is a pattern that you really want",
    "start": "314009",
    "end": "316050"
  },
  {
    "text": "if you're going to scale up in",
    "start": "316050",
    "end": "317490"
  },
  {
    "text": "complexity just imagine trying to apply",
    "start": "317490",
    "end": "319740"
  },
  {
    "text": "the same pattern and plain JavaScript or",
    "start": "319740",
    "end": "321810"
  },
  {
    "text": "jQuery you'd have a lot more code to",
    "start": "321810",
    "end": "323759"
  },
  {
    "text": "write but for your end users this is",
    "start": "323759",
    "end": "326159"
  },
  {
    "text": "still a pretty ugly table let's see how",
    "start": "326159",
    "end": "328259"
  },
  {
    "text": "we might add some better styling to it",
    "start": "328259",
    "end": "330030"
  },
  {
    "text": "for that we'll use bootstrap for but you",
    "start": "330030",
    "end": "332460"
  },
  {
    "text": "could use any other CSS framework or",
    "start": "332460",
    "end": "334500"
  },
  {
    "text": "your own styles completely you can grab",
    "start": "334500",
    "end": "336779"
  },
  {
    "text": "the CSS for bootstrap from the website",
    "start": "336779",
    "end": "338940"
  },
  {
    "text": "and then paste it into the head of the",
    "start": "338940",
    "end": "341310"
  },
  {
    "text": "document in the index.html file and",
    "start": "341310",
    "end": "343800"
  },
  {
    "text": "angular then back in the bootstrap Docs",
    "start": "343800",
    "end": "346229"
  },
  {
    "text": "you'll see a variety of different styles",
    "start": "346229",
    "end": "347880"
  },
  {
    "text": "for tables pick whichever one you like",
    "start": "347880",
    "end": "349800"
  },
  {
    "text": "and you'll also want a style for the",
    "start": "349800",
    "end": "351960"
  },
  {
    "text": "button in that table as well so as you",
    "start": "351960",
    "end": "354630"
  },
  {
    "text": "might imagine adding styles to our cdk",
    "start": "354630",
    "end": "356699"
  },
  {
    "text": "table is easy as any other HTML table we",
    "start": "356699",
    "end": "359639"
  },
  {
    "text": "simply add the class name and we're good",
    "start": "359639",
    "end": "361860"
  },
  {
    "text": "to go so now we have a table that",
    "start": "361860",
    "end": "363750"
  },
  {
    "text": "behaves like angular material but looks",
    "start": "363750",
    "end": "366210"
  },
  {
    "text": "like bootstrap",
    "start": "366210",
    "end": "366990"
  },
  {
    "text": "but I want to take this a step further",
    "start": "366990",
    "end": "368490"
  },
  {
    "text": "and I want to highlight the hero with",
    "start": "368490",
    "end": "371099"
  },
  {
    "text": "the highest and lowest health rating and",
    "start": "371099",
    "end": "373110"
  },
  {
    "text": "I want that style to be updated",
    "start": "373110",
    "end": "375479"
  },
  {
    "text": "reactively whenever the values change in",
    "start": "375479",
    "end": "377490"
  },
  {
    "text": "this table let's see how we can leverage",
    "start": "377490",
    "end": "379440"
  },
  {
    "text": "our existing behavior subject to handle",
    "start": "379440",
    "end": "381629"
  },
  {
    "text": "this for us I'm also going to install",
    "start": "381629",
    "end": "383610"
  },
  {
    "text": "the max by and min by methods from",
    "start": "383610",
    "end": "385889"
  },
  {
    "text": "lodash to make this code a little bit",
    "start": "385889",
    "end": "387659"
  },
  {
    "text": "more concise these functions are really",
    "start": "387659",
    "end": "390000"
  },
  {
    "text": "useful if you have an array of objects",
    "start": "390000",
    "end": "391650"
  },
  {
    "text": "and you need to calculate some",
    "start": "391650",
    "end": "393449"
  },
  {
    "text": "statistics about a certain property on",
    "start": "393449",
    "end": "395340"
  },
  {
    "text": "those objects which in this case we want",
    "start": "395340",
    "end": "397770"
  },
  {
    "text": "to find that heroes with the men and",
    "start": "397770",
    "end": "399940"
  },
  {
    "text": "health from there we'll go ahead and",
    "start": "399940",
    "end": "402100"
  },
  {
    "text": "define a new observable called min max",
    "start": "402100",
    "end": "404110"
  },
  {
    "text": "and this will be tied to our hero source",
    "start": "404110",
    "end": "406750"
  },
  {
    "text": "behavior subject but this time we want",
    "start": "406750",
    "end": "409690"
  },
  {
    "text": "to map it down to just the two heroes",
    "start": "409690",
    "end": "411940"
  },
  {
    "text": "one with the men and one with the max",
    "start": "411940",
    "end": "413710"
  },
  {
    "text": "health so what we're doing here is",
    "start": "413710",
    "end": "415540"
  },
  {
    "text": "computing a value based on a single",
    "start": "415540",
    "end": "417430"
  },
  {
    "text": "source of truth that will update",
    "start": "417430",
    "end": "418780"
  },
  {
    "text": "reactively inside of map we can simply",
    "start": "418780",
    "end": "421960"
  },
  {
    "text": "use lodash to find the hero with the max",
    "start": "421960",
    "end": "424300"
  },
  {
    "text": "health and then the hero with the min",
    "start": "424300",
    "end": "426100"
  },
  {
    "text": "health and then we'll just return the",
    "start": "426100",
    "end": "427870"
  },
  {
    "text": "names of those two heroes so we can use",
    "start": "427870",
    "end": "429790"
  },
  {
    "text": "them in our HTML now angular has a",
    "start": "429790",
    "end": "432460"
  },
  {
    "text": "built-in ng class directive that we can",
    "start": "432460",
    "end": "434740"
  },
  {
    "text": "use to easily update the styles based on",
    "start": "434740",
    "end": "437140"
  },
  {
    "text": "this logic we pass ng class an object",
    "start": "437140",
    "end": "439900"
  },
  {
    "text": "where the key of that object is the CSS",
    "start": "439900",
    "end": "442360"
  },
  {
    "text": "class that we want to apply this class",
    "start": "442360",
    "end": "444550"
  },
  {
    "text": "is from bootstrap which is BG success",
    "start": "444550",
    "end": "446740"
  },
  {
    "text": "which will give the row a green",
    "start": "446740",
    "end": "448480"
  },
  {
    "text": "highlight and then we'll unwrap the min",
    "start": "448480",
    "end": "450760"
  },
  {
    "text": "Max observable and if the max equals",
    "start": "450760",
    "end": "453370"
  },
  {
    "text": "this row name then we'll go ahead and",
    "start": "453370",
    "end": "455080"
  },
  {
    "text": "highlight it then we'll do the same",
    "start": "455080",
    "end": "456910"
  },
  {
    "text": "exact thing for the min value except",
    "start": "456910",
    "end": "459310"
  },
  {
    "text": "this time we'll apply the BG danger",
    "start": "459310",
    "end": "461170"
  },
  {
    "text": "which will give it a red highlight and",
    "start": "461170",
    "end": "463060"
  },
  {
    "text": "that's all there is to it we now have",
    "start": "463060",
    "end": "465070"
  },
  {
    "text": "reactive CSS Styles being applied to our",
    "start": "465070",
    "end": "467320"
  },
  {
    "text": "data table if your tables have huge",
    "start": "467320",
    "end": "469330"
  },
  {
    "text": "amounts of data then you'll probably",
    "start": "469330",
    "end": "470620"
  },
  {
    "text": "need to paginate it so let's look into",
    "start": "470620",
    "end": "473140"
  },
  {
    "text": "how we can further leverage rxjs",
    "start": "473140",
    "end": "475150"
  },
  {
    "text": "to make a reactive pagination system to",
    "start": "475150",
    "end": "478180"
  },
  {
    "text": "simplify the UI elements I'm going to",
    "start": "478180",
    "end": "480040"
  },
  {
    "text": "use ng bootstrap but you could",
    "start": "480040",
    "end": "481660"
  },
  {
    "text": "definitely do this from scratch as well",
    "start": "481660",
    "end": "483300"
  },
  {
    "text": "first we'll install it via NPM then go",
    "start": "483300",
    "end": "486460"
  },
  {
    "text": "into the app module and add it to the",
    "start": "486460",
    "end": "488560"
  },
  {
    "text": "imports array there it gives us access",
    "start": "488560",
    "end": "490960"
  },
  {
    "text": "to a pagination component and we just",
    "start": "490960",
    "end": "493210"
  },
  {
    "text": "need to pass it a few input variables to",
    "start": "493210",
    "end": "495040"
  },
  {
    "text": "make it work it needs to know the total",
    "start": "495040",
    "end": "496840"
  },
  {
    "text": "size of our collection which is just the",
    "start": "496840",
    "end": "498760"
  },
  {
    "text": "length of our data source array then it",
    "start": "498760",
    "end": "501400"
  },
  {
    "text": "needs to know how many items we want to",
    "start": "501400",
    "end": "503080"
  },
  {
    "text": "show on each page it also needs to know",
    "start": "503080",
    "end": "505750"
  },
  {
    "text": "the current page which will also be a",
    "start": "505750",
    "end": "507640"
  },
  {
    "text": "behavior subject when we get to the",
    "start": "507640",
    "end": "509200"
  },
  {
    "text": "typescript and lastly it needs an event",
    "start": "509200",
    "end": "511750"
  },
  {
    "text": "handler so when the user clicks on a new",
    "start": "511750",
    "end": "513760"
  },
  {
    "text": "page it updates to the correct page and",
    "start": "513760",
    "end": "516130"
  },
  {
    "text": "a little trick when you're using a",
    "start": "516130",
    "end": "517960"
  },
  {
    "text": "behavior subject is instead of writing",
    "start": "517960",
    "end": "519729"
  },
  {
    "text": "an event handler you can just call",
    "start": "519729",
    "end": "521440"
  },
  {
    "text": "current page next with that event as",
    "start": "521440",
    "end": "523839"
  },
  {
    "text": "long as the event is what you actually",
    "start": "523839",
    "end": "525310"
  },
  {
    "text": "need to send in the stream and the last",
    "start": "525310",
    "end": "528040"
  },
  {
    "text": "change we'll make is set the data source",
    "start": "528040",
    "end": "529780"
  },
  {
    "text": "to a new observable called data on pages",
    "start": "529780",
    "end": "532120"
  },
  {
    "text": "which is a slice of the",
    "start": "532120",
    "end": "533830"
  },
  {
    "text": "actual values that we want to show so",
    "start": "533830",
    "end": "536110"
  },
  {
    "text": "we'll need to add a couple of new",
    "start": "536110",
    "end": "537310"
  },
  {
    "text": "properties to our component to make all",
    "start": "537310",
    "end": "539230"
  },
  {
    "text": "this work the first one is the current",
    "start": "539230",
    "end": "540910"
  },
  {
    "text": "page which is a behavior subject and",
    "start": "540910",
    "end": "542980"
  },
  {
    "text": "it's a behavior subject because we want",
    "start": "542980",
    "end": "544810"
  },
  {
    "text": "to react to it and we also want to",
    "start": "544810",
    "end": "546730"
  },
  {
    "text": "change it dynamically from there we have",
    "start": "546730",
    "end": "549670"
  },
  {
    "text": "a data on page observable which will",
    "start": "549670",
    "end": "551800"
  },
  {
    "text": "react to changes in the data source of",
    "start": "551800",
    "end": "553900"
  },
  {
    "text": "Heroes and also the current page and",
    "start": "553900",
    "end": "556140"
  },
  {
    "text": "lastly the page size which is just a",
    "start": "556140",
    "end": "558700"
  },
  {
    "text": "number the hardest part is defining the",
    "start": "558700",
    "end": "561070"
  },
  {
    "text": "slice of data that we want to show for",
    "start": "561070",
    "end": "563020"
  },
  {
    "text": "each page we need to react to page",
    "start": "563020",
    "end": "565420"
  },
  {
    "text": "changes so we'll go ahead and pipe an",
    "start": "565420",
    "end": "567430"
  },
  {
    "text": "observable that's based off the current",
    "start": "567430",
    "end": "569410"
  },
  {
    "text": "page behavior subject but the actual",
    "start": "569410",
    "end": "572080"
  },
  {
    "text": "data source is the hero's behavior",
    "start": "572080",
    "end": "574120"
  },
  {
    "text": "subject so we can use the switch map",
    "start": "574120",
    "end": "576220"
  },
  {
    "text": "operator to switch to that data source",
    "start": "576220",
    "end": "578260"
  },
  {
    "text": "so at this point we know that current",
    "start": "578260",
    "end": "580330"
  },
  {
    "text": "page as well as the array of heroes and",
    "start": "580330",
    "end": "582970"
  },
  {
    "text": "we just need to map it down to a slice",
    "start": "582970",
    "end": "584890"
  },
  {
    "text": "to display on that page we can figure",
    "start": "584890",
    "end": "587410"
  },
  {
    "text": "out which items to display on the page",
    "start": "587410",
    "end": "589000"
  },
  {
    "text": "by taking that current page value",
    "start": "589000",
    "end": "590920"
  },
  {
    "text": "subtracting one and then multiplying it",
    "start": "590920",
    "end": "593080"
  },
  {
    "text": "by the page size that's the starting",
    "start": "593080",
    "end": "595180"
  },
  {
    "text": "index then the ending index is just that",
    "start": "595180",
    "end": "598000"
  },
  {
    "text": "starting index plus the page size and",
    "start": "598000",
    "end": "600340"
  },
  {
    "text": "those are the two arguments that we'll",
    "start": "600340",
    "end": "602200"
  },
  {
    "text": "use to slice the array if we go back to",
    "start": "602200",
    "end": "604900"
  },
  {
    "text": "our data table you'll see that it's only",
    "start": "604900",
    "end": "606640"
  },
  {
    "text": "displaying two items per page but it's",
    "start": "606640",
    "end": "609040"
  },
  {
    "text": "also maintaining the styling logic that",
    "start": "609040",
    "end": "611140"
  },
  {
    "text": "we set up in the previous step and again",
    "start": "611140",
    "end": "613090"
  },
  {
    "text": "this is possible because we're using a",
    "start": "613090",
    "end": "614860"
  },
  {
    "text": "single data source and having everything",
    "start": "614860",
    "end": "616930"
  },
  {
    "text": "else react to a coordinate light I'm",
    "start": "616930",
    "end": "618940"
  },
  {
    "text": "gonna go ahead and wrap things up there",
    "start": "618940",
    "end": "620080"
  },
  {
    "text": "if this video helped you please like and",
    "start": "620080",
    "end": "621730"
  },
  {
    "text": "subscribe and if you're serious about",
    "start": "621730",
    "end": "623200"
  },
  {
    "text": "building angular apps consider becoming",
    "start": "623200",
    "end": "625060"
  },
  {
    "text": "a pro member at angular firebase com",
    "start": "625060",
    "end": "627460"
  },
  {
    "text": "you'll get a free copy of my book as",
    "start": "627460",
    "end": "629110"
  },
  {
    "text": "well as one on one project support",
    "start": "629110",
    "end": "630970"
  },
  {
    "text": "thanks for watching and I'll talk to you",
    "start": "630970",
    "end": "633220"
  },
  {
    "text": "soon",
    "start": "633220",
    "end": "635399"
  }
]