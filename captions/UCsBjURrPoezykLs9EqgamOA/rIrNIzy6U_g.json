[
  {
    "text": "welcome to Docker 101 if your goal is to",
    "start": "320",
    "end": "2639"
  },
  {
    "text": "ship software in the real world one of",
    "start": "2639",
    "end": "4359"
  },
  {
    "text": "the most powerful Concepts to understand",
    "start": "4359",
    "end": "6399"
  },
  {
    "text": "is containerization When developing",
    "start": "6399",
    "end": "8280"
  },
  {
    "text": "locally it solves the age-old problem of",
    "start": "8280",
    "end": "10639"
  },
  {
    "text": "it works on my machine and when",
    "start": "10639",
    "end": "12320"
  },
  {
    "text": "deploying in the cloud it solves the",
    "start": "12320",
    "end": "13880"
  },
  {
    "text": "age-old problem of this architecture",
    "start": "13880",
    "end": "16000"
  },
  {
    "text": "doesn't scale over the next few minutes",
    "start": "16000",
    "end": "17880"
  },
  {
    "text": "we'll unlock the power inside this",
    "start": "17880",
    "end": "19439"
  },
  {
    "text": "container by learning 101 different",
    "start": "19439",
    "end": "21760"
  },
  {
    "text": "concepts and terms related to computer",
    "start": "21760",
    "end": "23720"
  },
  {
    "text": "science the cloud and of course Docker",
    "start": "23720",
    "end": "25960"
  },
  {
    "text": "I'm guessing you know what a computer is",
    "start": "25960",
    "end": "27400"
  },
  {
    "text": "right it's a box that has three",
    "start": "27400",
    "end": "28920"
  },
  {
    "text": "important components in side a CPU for",
    "start": "28920",
    "end": "31279"
  },
  {
    "text": "calculating things random access memory",
    "start": "31279",
    "end": "33559"
  },
  {
    "text": "for the applications you're using right",
    "start": "33559",
    "end": "35239"
  },
  {
    "text": "now and a dis to store things you might",
    "start": "35239",
    "end": "37239"
  },
  {
    "text": "use later this is bare metal hardware",
    "start": "37239",
    "end": "39520"
  },
  {
    "text": "but in order to use it we need an",
    "start": "39520",
    "end": "41039"
  },
  {
    "text": "operating system most importantly the OS",
    "start": "41039",
    "end": "43280"
  },
  {
    "text": "provides a kernel that sits on top of",
    "start": "43280",
    "end": "45120"
  },
  {
    "text": "the bare metal allowing software",
    "start": "45120",
    "end": "46680"
  },
  {
    "text": "applications to run on it in the olden",
    "start": "46680",
    "end": "48440"
  },
  {
    "text": "days you would go to the store and buy",
    "start": "48440",
    "end": "50120"
  },
  {
    "text": "software to physically install it on",
    "start": "50120",
    "end": "51760"
  },
  {
    "text": "your machine but nowadays most software",
    "start": "51760",
    "end": "53800"
  },
  {
    "text": "is delivered via the Internet through",
    "start": "53800",
    "end": "55559"
  },
  {
    "text": "the magic of networking when you watch a",
    "start": "55559",
    "end": "57480"
  },
  {
    "text": "YouTube video your computer is called",
    "start": "57480",
    "end": "59239"
  },
  {
    "text": "the client but you and billions of other",
    "start": "59239",
    "end": "61239"
  },
  {
    "text": "users are getting that data from remote",
    "start": "61239",
    "end": "63199"
  },
  {
    "text": "computers called servers when an app",
    "start": "63199",
    "end": "64920"
  },
  {
    "text": "starts reaching millions of people weird",
    "start": "64920",
    "end": "66840"
  },
  {
    "text": "things begin to happen the CPU becomes",
    "start": "66840",
    "end": "68840"
  },
  {
    "text": "exhausted handling all the incoming",
    "start": "68840",
    "end": "70479"
  },
  {
    "text": "requests disio slows down Network",
    "start": "70479",
    "end": "72840"
  },
  {
    "text": "bandwidth gets maxed out and the",
    "start": "72840",
    "end": "74439"
  },
  {
    "text": "database becomes too large too query",
    "start": "74439",
    "end": "76280"
  },
  {
    "text": "effectively on top of that you wrote",
    "start": "76280",
    "end": "77799"
  },
  {
    "text": "some garbage code that's causing race",
    "start": "77799",
    "end": "79759"
  },
  {
    "text": "conditions memory leaks and unhandled",
    "start": "79759",
    "end": "81720"
  },
  {
    "text": "errors that will eventually grind your",
    "start": "81720",
    "end": "83360"
  },
  {
    "text": "server to a halt the big question is how",
    "start": "83360",
    "end": "85479"
  },
  {
    "text": "do we scale our infrastructure a server",
    "start": "85479",
    "end": "87320"
  },
  {
    "text": "can scale up in two ways vertically or",
    "start": "87320",
    "end": "89560"
  },
  {
    "text": "horizont ially to scale vertically you",
    "start": "89560",
    "end": "91720"
  },
  {
    "text": "take your one server and increase its",
    "start": "91720",
    "end": "93680"
  },
  {
    "text": "RAM and CPU this can take you pretty far",
    "start": "93680",
    "end": "96079"
  },
  {
    "text": "but eventually you hit a ceiling the",
    "start": "96079",
    "end": "97600"
  },
  {
    "text": "other option is to scale horizontally",
    "start": "97600",
    "end": "99759"
  },
  {
    "text": "where you distribute your code to",
    "start": "99759",
    "end": "101000"
  },
  {
    "text": "multiple smaller servers which are often",
    "start": "101000",
    "end": "103079"
  },
  {
    "text": "broken down into microservices that can",
    "start": "103079",
    "end": "105280"
  },
  {
    "text": "run and scale independently but",
    "start": "105280",
    "end": "107159"
  },
  {
    "text": "distributed systems like this aren't",
    "start": "107159",
    "end": "108719"
  },
  {
    "text": "very practical when talking about bare",
    "start": "108719",
    "end": "110560"
  },
  {
    "text": "metal because actual resource allocation",
    "start": "110560",
    "end": "112719"
  },
  {
    "text": "varies One Way Engineers address this is",
    "start": "112719",
    "end": "114759"
  },
  {
    "text": "with virtual machines using tools like",
    "start": "114759",
    "end": "116799"
  },
  {
    "text": "hypervisor it can isolate and run",
    "start": "116799",
    "end": "118840"
  },
  {
    "text": "multiple operating system systems on a",
    "start": "118840",
    "end": "120399"
  },
  {
    "text": "single machine that helps but a vm's",
    "start": "120399",
    "end": "122640"
  },
  {
    "text": "allocation of CPU and memory is still",
    "start": "122640",
    "end": "125000"
  },
  {
    "text": "fixed and that's where Docker comes in",
    "start": "125000",
    "end": "127079"
  },
  {
    "text": "the sponsor of today's video",
    "start": "127079",
    "end": "128759"
  },
  {
    "text": "applications running on top of the",
    "start": "128759",
    "end": "130239"
  },
  {
    "text": "docker engine all share the same host",
    "start": "130239",
    "end": "132200"
  },
  {
    "text": "operating system kernel and use",
    "start": "132200",
    "end": "133879"
  },
  {
    "text": "resources dynamically based on their",
    "start": "133879",
    "end": "135560"
  },
  {
    "text": "needs under the hood docker's running a",
    "start": "135560",
    "end": "137519"
  },
  {
    "text": "demon or persistent process that makes",
    "start": "137519",
    "end": "139840"
  },
  {
    "text": "all this magic possible and gives us OS",
    "start": "139840",
    "end": "142000"
  },
  {
    "text": "level virtualization what's awesome is",
    "start": "142000",
    "end": "144080"
  },
  {
    "text": "that any developer can easily harness",
    "start": "144080",
    "end": "145760"
  },
  {
    "text": "this power by simply installing Docker",
    "start": "145760",
    "end": "147640"
  },
  {
    "text": "desktop it allows you to develop",
    "start": "147640",
    "end": "149080"
  },
  {
    "text": "software without having to make massive",
    "start": "149080",
    "end": "150760"
  },
  {
    "text": "changes to your local system but here's",
    "start": "150760",
    "end": "152640"
  },
  {
    "text": "how Docker Works in three easy steps",
    "start": "152640",
    "end": "154760"
  },
  {
    "text": "first you start with a Docker file this",
    "start": "154760",
    "end": "156440"
  },
  {
    "text": "is like a blueprint that tells Docker",
    "start": "156440",
    "end": "158440"
  },
  {
    "text": "how to configure the environment that",
    "start": "158440",
    "end": "160040"
  },
  {
    "text": "runs your application the docker file is",
    "start": "160040",
    "end": "162280"
  },
  {
    "text": "then used to build an image which",
    "start": "162280",
    "end": "163720"
  },
  {
    "text": "contains an OS your dependencies and",
    "start": "163720",
    "end": "165760"
  },
  {
    "text": "your code like a template for running",
    "start": "165760",
    "end": "167680"
  },
  {
    "text": "your application and we can upload this",
    "start": "167680",
    "end": "169319"
  },
  {
    "text": "image to the cloud to places like Docker",
    "start": "169319",
    "end": "171319"
  },
  {
    "text": "Hub and share it with the world but an",
    "start": "171319",
    "end": "173000"
  },
  {
    "text": "image by itself doesn't do anything you",
    "start": "173000",
    "end": "174760"
  },
  {
    "text": "need to run it as a container which",
    "start": "174760",
    "end": "176519"
  },
  {
    "text": "itself is an isolated package running",
    "start": "176519",
    "end": "178319"
  },
  {
    "text": "your code that in theory could scale",
    "start": "178319",
    "end": "180120"
  },
  {
    "text": "infinitely in the cloud containers are",
    "start": "180120",
    "end": "181760"
  },
  {
    "text": "stateless which means when they shut",
    "start": "181760",
    "end": "183319"
  },
  {
    "text": "down all the data inside them is lost",
    "start": "183319",
    "end": "185519"
  },
  {
    "text": "but that makes them portable and they",
    "start": "185519",
    "end": "186959"
  },
  {
    "text": "can run on every major Cloud platform",
    "start": "186959",
    "end": "188840"
  },
  {
    "text": "without vendor lock in pretty cool but",
    "start": "188840",
    "end": "190640"
  },
  {
    "text": "the best way to learn Docker is to",
    "start": "190640",
    "end": "192319"
  },
  {
    "text": "actually run a container let's do that",
    "start": "192319",
    "end": "194120"
  },
  {
    "text": "right now by creating a Docker file a",
    "start": "194120",
    "end": "196200"
  },
  {
    "text": "Docker file contains a collection of",
    "start": "196200",
    "end": "197879"
  },
  {
    "text": "instructions which by convention are in",
    "start": "197879",
    "end": "199720"
  },
  {
    "text": "all caps from is usually the first",
    "start": "199720",
    "end": "201640"
  },
  {
    "text": "instruction you'll see which points to a",
    "start": "201640",
    "end": "203360"
  },
  {
    "text": "base image to get started this will",
    "start": "203360",
    "end": "205120"
  },
  {
    "text": "often be a Linux drro and may be",
    "start": "205120",
    "end": "207120"
  },
  {
    "text": "followed by a colon which is an optional",
    "start": "207120",
    "end": "209080"
  },
  {
    "text": "image tag and in this case specifies the",
    "start": "209080",
    "end": "211159"
  },
  {
    "text": "version of the OS next we have the",
    "start": "211159",
    "end": "213000"
  },
  {
    "text": "working directory instruction which",
    "start": "213000",
    "end": "214599"
  },
  {
    "text": "creates a source directory and CDs into",
    "start": "214599",
    "end": "216959"
  },
  {
    "text": "it and that's where we'll put our source",
    "start": "216959",
    "end": "218560"
  },
  {
    "text": "code all commands from here on out will",
    "start": "218560",
    "end": "220280"
  },
  {
    "text": "be executed from this working directory",
    "start": "220280",
    "end": "222519"
  },
  {
    "text": "next we can use the Run instruction to",
    "start": "222519",
    "end": "224319"
  },
  {
    "text": "use a Linux package manager to install",
    "start": "224319",
    "end": "226319"
  },
  {
    "text": "our dependencies run lets you run any",
    "start": "226319",
    "end": "228319"
  },
  {
    "text": "command just like you would from the",
    "start": "228319",
    "end": "229760"
  },
  {
    "text": "command line currently we're running as",
    "start": "229760",
    "end": "231239"
  },
  {
    "text": "the root user but for better security we",
    "start": "231239",
    "end": "233319"
  },
  {
    "text": "could also create a non-root user with",
    "start": "233319",
    "end": "235280"
  },
  {
    "text": "the user instruction now we can use copy",
    "start": "235280",
    "end": "237680"
  },
  {
    "text": "to copy the code on our local machine",
    "start": "237680",
    "end": "239480"
  },
  {
    "text": "over to the image you're halfway there",
    "start": "239480",
    "end": "241560"
  },
  {
    "text": "let's take a brief",
    "start": "241560",
    "end": "243780"
  },
  {
    "text": "[Music]",
    "start": "243780",
    "end": "244550"
  },
  {
    "text": "[Applause]",
    "start": "244550",
    "end": "247000"
  },
  {
    "text": "intermission now to run this code we",
    "start": "247000",
    "end": "249000"
  },
  {
    "text": "have an API key which we can set as an",
    "start": "249000",
    "end": "251239"
  },
  {
    "text": "environment variable with the EnV",
    "start": "251239",
    "end": "253079"
  },
  {
    "text": "instruction we're building a web server",
    "start": "253079",
    "end": "254720"
  },
  {
    "text": "that people can connect to which",
    "start": "254720",
    "end": "256199"
  },
  {
    "text": "requires a port for external traffic use",
    "start": "256199",
    "end": "258359"
  },
  {
    "text": "the expose instruction to make that Port",
    "start": "258359",
    "end": "260320"
  },
  {
    "text": "accessible finally that brings us to the",
    "start": "260320",
    "end": "262160"
  },
  {
    "text": "command instruction which is the command",
    "start": "262160",
    "end": "264160"
  },
  {
    "text": "you want to run when starting up a",
    "start": "264160",
    "end": "265919"
  },
  {
    "text": "container in this case it will run our",
    "start": "265919",
    "end": "267720"
  },
  {
    "text": "web server there can only be one command",
    "start": "267720",
    "end": "269400"
  },
  {
    "text": "per container although you might also",
    "start": "269400",
    "end": "271000"
  },
  {
    "text": "add an entry point allowing you to pass",
    "start": "271000",
    "end": "272960"
  },
  {
    "text": "arguments to the command when you run it",
    "start": "272960",
    "end": "274919"
  },
  {
    "text": "that's everything we need for the docker",
    "start": "274919",
    "end": "276280"
  },
  {
    "text": "file but as an Added Touch we could also",
    "start": "276280",
    "end": "278600"
  },
  {
    "text": "use label to add some extra metadata or",
    "start": "278600",
    "end": "280919"
  },
  {
    "text": "we could run a health check to make sure",
    "start": "280919",
    "end": "282400"
  },
  {
    "text": "it's running properly or if the",
    "start": "282400",
    "end": "283919"
  },
  {
    "text": "container needs to store data that's",
    "start": "283919",
    "end": "285320"
  },
  {
    "text": "going to be used later or be used by",
    "start": "285320",
    "end": "287039"
  },
  {
    "text": "multiple containers we could mount a",
    "start": "287039",
    "end": "288720"
  },
  {
    "text": "volume to it with a persistent disc okay",
    "start": "288720",
    "end": "291199"
  },
  {
    "text": "we have a Docker file so now what when",
    "start": "291199",
    "end": "293520"
  },
  {
    "text": "you install Docker desktop that also",
    "start": "293520",
    "end": "295360"
  },
  {
    "text": "installed the docker CLI which you can",
    "start": "295360",
    "end": "297199"
  },
  {
    "text": "run from the terminal run Docker help to",
    "start": "297199",
    "end": "299039"
  },
  {
    "text": "see all the possible commands but the",
    "start": "299039",
    "end": "300840"
  },
  {
    "text": "one we need right now is Docker build",
    "start": "300840",
    "end": "303199"
  },
  {
    "text": "which will turn this Docker file into an",
    "start": "303199",
    "end": "305120"
  },
  {
    "text": "image when you run the command it's a",
    "start": "305120",
    "end": "306680"
  },
  {
    "text": "good idea to use the T flag to tag it",
    "start": "306680",
    "end": "308800"
  },
  {
    "text": "with a recognizable name notice how it",
    "start": "308800",
    "end": "310680"
  },
  {
    "text": "builds the image in layers every layer",
    "start": "310680",
    "end": "312600"
  },
  {
    "text": "is identified by a Shaw 256 hash which",
    "start": "312600",
    "end": "315400"
  },
  {
    "text": "means if you modify your Docker file",
    "start": "315400",
    "end": "317199"
  },
  {
    "text": "each layer will be cached so it only has",
    "start": "317199",
    "end": "319160"
  },
  {
    "text": "to rebuild what is actually changed and",
    "start": "319160",
    "end": "321120"
  },
  {
    "text": "that makes your workflow as a developer",
    "start": "321120",
    "end": "322800"
  },
  {
    "text": "far more efficient in addition it's",
    "start": "322800",
    "end": "324600"
  },
  {
    "text": "important to point out that sometimes",
    "start": "324600",
    "end": "326080"
  },
  {
    "text": "you don't want certain files to end up",
    "start": "326080",
    "end": "327840"
  },
  {
    "text": "in a Docker image in which case you can",
    "start": "327840",
    "end": "329840"
  },
  {
    "text": "add them to the docker ignore file to",
    "start": "329840",
    "end": "331720"
  },
  {
    "text": "exclude them from the actual files that",
    "start": "331720",
    "end": "333400"
  },
  {
    "text": "get copied there now open Docker desktop",
    "start": "333400",
    "end": "335720"
  },
  {
    "text": "and view the image there not only does",
    "start": "335720",
    "end": "337400"
  },
  {
    "text": "it give us a detailed breakdown but",
    "start": "337400",
    "end": "339199"
  },
  {
    "text": "thanks to Docker Scout we're able to",
    "start": "339199",
    "end": "341160"
  },
  {
    "text": "proactively identify any security",
    "start": "341160",
    "end": "343000"
  },
  {
    "text": "vulnerabilities for each layer of the",
    "start": "343000",
    "end": "344880"
  },
  {
    "text": "image it works by extracting the",
    "start": "344880",
    "end": "346720"
  },
  {
    "text": "software bill of material from the image",
    "start": "346720",
    "end": "348720"
  },
  {
    "text": "and Compares it to a bunch of security",
    "start": "348720",
    "end": "350440"
  },
  {
    "text": "advisory databases when there's a match",
    "start": "350440",
    "end": "352400"
  },
  {
    "text": "it's given a severity rating so you can",
    "start": "352400",
    "end": "354360"
  },
  {
    "text": "prioritize your security efforts but now",
    "start": "354360",
    "end": "356720"
  },
  {
    "text": "the time has finally come to run a",
    "start": "356720",
    "end": "358360"
  },
  {
    "text": "container we can accomplish that by",
    "start": "358360",
    "end": "360400"
  },
  {
    "text": "simply clicking on the Run button under",
    "start": "360400",
    "end": "362160"
  },
  {
    "text": "the hood it executes the docker run",
    "start": "362160",
    "end": "364199"
  },
  {
    "text": "command and we can now access our server",
    "start": "364199",
    "end": "366120"
  },
  {
    "text": "on Local Host in addition we can see the",
    "start": "366120",
    "end": "368080"
  },
  {
    "text": "running container here in Docker desktop",
    "start": "368080",
    "end": "370080"
  },
  {
    "text": "which is the equivalent to the docker",
    "start": "370080",
    "end": "372039"
  },
  {
    "text": "command which you can run from the",
    "start": "372039",
    "end": "373440"
  },
  {
    "text": "terminal to get a breakdown of all the",
    "start": "373440",
    "end": "375120"
  },
  {
    "text": "running and stop containers on your",
    "start": "375120",
    "end": "376680"
  },
  {
    "text": "machine if we click on it though we can",
    "start": "376680",
    "end": "378560"
  },
  {
    "text": "inspect the logs from this container or",
    "start": "378560",
    "end": "380440"
  },
  {
    "text": "view the file system and we can even",
    "start": "380440",
    "end": "382360"
  },
  {
    "text": "execute commands directly inside the",
    "start": "382360",
    "end": "384120"
  },
  {
    "text": "running container now when it comes time",
    "start": "384120",
    "end": "385759"
  },
  {
    "text": "to shut it down we can use Docker stop",
    "start": "385759",
    "end": "387880"
  },
  {
    "text": "to stop it gracefully or docker kill to",
    "start": "387880",
    "end": "390039"
  },
  {
    "text": "forcefully stop it you can still see the",
    "start": "390039",
    "end": "391759"
  },
  {
    "text": "shutdown container here in the UI or use",
    "start": "391759",
    "end": "393960"
  },
  {
    "text": "remove to get rid of it but now you",
    "start": "393960",
    "end": "395919"
  },
  {
    "text": "might want to run your container in the",
    "start": "395919",
    "end": "397319"
  },
  {
    "text": "cloud Docker push will upload your image",
    "start": "397319",
    "end": "399440"
  },
  {
    "text": "to a remote registry where it can then",
    "start": "399440",
    "end": "401080"
  },
  {
    "text": "run on a cloud like AWS with elastic",
    "start": "401080",
    "end": "403440"
  },
  {
    "text": "container service or it can be launched",
    "start": "403440",
    "end": "405199"
  },
  {
    "text": "on serverless platforms like Google",
    "start": "405199",
    "end": "406880"
  },
  {
    "text": "Cloud run conversely you may want to use",
    "start": "406880",
    "end": "408880"
  },
  {
    "text": "someone else's Docker image which can be",
    "start": "408880",
    "end": "410720"
  },
  {
    "text": "downloaded from the cloud with Docker",
    "start": "410720",
    "end": "412360"
  },
  {
    "text": "pull and now you can run any developers",
    "start": "412360",
    "end": "414280"
  },
  {
    "text": "code without having to make any changes",
    "start": "414280",
    "end": "416039"
  },
  {
    "text": "to your local environment or machine",
    "start": "416039",
    "end": "417840"
  },
  {
    "text": "congratulations you're now a bon ified",
    "start": "417840",
    "end": "420080"
  },
  {
    "text": "and certified Docker expert I hereby",
    "start": "420080",
    "end": "422199"
  },
  {
    "text": "Grant you permission to print out the",
    "start": "422199",
    "end": "423800"
  },
  {
    "text": "certificate and bring it to your next",
    "start": "423800",
    "end": "425319"
  },
  {
    "text": "job interview but Docker itself is only",
    "start": "425319",
    "end": "427599"
  },
  {
    "text": "the beginning there's a good chance your",
    "start": "427599",
    "end": "429199"
  },
  {
    "text": "application has more than one service in",
    "start": "429199",
    "end": "431240"
  },
  {
    "text": "which case you'll want to know about",
    "start": "431240",
    "end": "432400"
  },
  {
    "text": "Docker can POS a tool for managing",
    "start": "432400",
    "end": "434560"
  },
  {
    "text": "multicontainer applications it allows",
    "start": "434560",
    "end": "436560"
  },
  {
    "text": "you to Define multiple applications and",
    "start": "436560",
    "end": "438560"
  },
  {
    "text": "their Docker images in a single yaml",
    "start": "438560",
    "end": "440639"
  },
  {
    "text": "file like a front end a backend and a",
    "start": "440639",
    "end": "442800"
  },
  {
    "text": "database the docker compose up command",
    "start": "442800",
    "end": "445120"
  },
  {
    "text": "will spin up all the containers",
    "start": "445120",
    "end": "446520"
  },
  {
    "text": "simultaneously while the down command",
    "start": "446520",
    "end": "448360"
  },
  {
    "text": "will stop them that works works on an",
    "start": "448360",
    "end": "449879"
  },
  {
    "text": "individual server but once you reach",
    "start": "449879",
    "end": "451720"
  },
  {
    "text": "massive scale you'll likely need an",
    "start": "451720",
    "end": "453240"
  },
  {
    "text": "orchestration tool like kubernetes to",
    "start": "453240",
    "end": "455560"
  },
  {
    "text": "run and manage containers all over the",
    "start": "455560",
    "end": "457160"
  },
  {
    "text": "world it works like this you have a",
    "start": "457160",
    "end": "458840"
  },
  {
    "text": "control plane that exposes an API that",
    "start": "458840",
    "end": "461160"
  },
  {
    "text": "can manage the cluster now the cluster",
    "start": "461160",
    "end": "462879"
  },
  {
    "text": "has multiple nodes or machines each one",
    "start": "462879",
    "end": "465080"
  },
  {
    "text": "containing a cubet and multiple pods a",
    "start": "465080",
    "end": "467560"
  },
  {
    "text": "pod is the minimum Deployable unit in",
    "start": "467560",
    "end": "469319"
  },
  {
    "text": "kubernetes which itself has one or more",
    "start": "469319",
    "end": "471280"
  },
  {
    "text": "containers inside of it what makes",
    "start": "471280",
    "end": "472680"
  },
  {
    "text": "kubernetes so effective is that you can",
    "start": "472680",
    "end": "474560"
  },
  {
    "text": "describe the desired state of the system",
    "start": "474560",
    "end": "476520"
  },
  {
    "text": "and it will automatically scale up or",
    "start": "476520",
    "end": "478360"
  },
  {
    "text": "scale down while also providing fall",
    "start": "478360",
    "end": "480360"
  },
  {
    "text": "tolerance to automatically heal if one",
    "start": "480360",
    "end": "482240"
  },
  {
    "text": "of your servers goes down it gets pretty",
    "start": "482240",
    "end": "484039"
  },
  {
    "text": "complicated but the good news is that",
    "start": "484039",
    "end": "485800"
  },
  {
    "text": "you probably don't need kubernetes it",
    "start": "485800",
    "end": "487599"
  },
  {
    "text": "was developed at Google based on its",
    "start": "487599",
    "end": "489120"
  },
  {
    "text": "Borg system and is really only necessary",
    "start": "489120",
    "end": "491280"
  },
  {
    "text": "for highly complex hi trffic systems if",
    "start": "491280",
    "end": "493879"
  },
  {
    "text": "that sounds like you though you can also",
    "start": "493879",
    "end": "495319"
  },
  {
    "text": "use extensions on Docker desktop to",
    "start": "495319",
    "end": "497360"
  },
  {
    "text": "debug your pods and with that we've",
    "start": "497360",
    "end": "499240"
  },
  {
    "text": "looked at 100 concepts related to",
    "start": "499240",
    "end": "501280"
  },
  {
    "text": "containerization Big shout out to Docker",
    "start": "501280",
    "end": "503360"
  },
  {
    "text": "for making this video possible thanks",
    "start": "503360",
    "end": "505120"
  },
  {
    "text": "for watching and I will see you in the",
    "start": "505120",
    "end": "506800"
  },
  {
    "text": "next one",
    "start": "506800",
    "end": "509879"
  }
]